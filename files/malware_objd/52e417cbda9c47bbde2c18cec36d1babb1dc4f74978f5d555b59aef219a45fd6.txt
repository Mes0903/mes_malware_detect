
52e417cbda9c47bbde2c18cec36d1babb1dc4f74978f5d555b59aef219a45fd6.exe:     file format pei-i386


Disassembly of section UPX1:

00427000 <UPX1>:
  427000:	sbb    al,BYTE PTR [ebx]
  427002:	add    BYTE PTR [esi-0x6c],bl
  427005:	add    DWORD PTR [edi],ecx
  427007:	dec    eax
  427008:	or     BYTE PTR [esi],ah
  42700a:	pop    edi
  42700b:	rcr    BYTE PTR [esi-0x6],1
  42700e:	push   edi
  42700f:	mov    ch,0x9a
  427011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427012:	mov    edi,ebp
  427014:	push   cs
  427015:	xlat   BYTE PTR ds:[bx]
  427017:	jae    0x42705b
  427019:	out    0xf5,al
  42701b:	mov    edi,0x272ba39a
  427020:	xor    ebx,DWORD PTR [ebx+0x28]
  427023:	in     eax,dx
  427024:	loop   0x427091
  427026:	(bad)  
  427027:	loop   0x42705f
  427029:	ss and al,0xa3
  42702c:	leave  
  42702d:	fcomp  st(4)
  42702f:	in     eax,dx
  427030:	sub    al,0x4a
  427032:	int3   
  427033:	xor    bl,bh
  427035:	push   DWORD PTR [ecx]
  427037:	dec    eax
  427038:	cs das 
  42703a:	mov    ds:0xe033eee8,al
  42703f:	ror    DWORD PTR ds:0x879aa254,0x79
  427046:	jmp    0x4270b6
  427048:	out    dx,eax
  427049:	push   ebp
  42704a:	or     BYTE PTR [esi+edx*1+0x35],al
  42704e:	dec    ebp
  42704f:	mov    ebp,0x5d61b794
  427054:	cmp    DWORD PTR [eax],0xfb6eb89
  42705a:	stos   DWORD PTR es:[edi],eax
  42705b:	sbb    al,0xcd
  42705d:	xor    edi,DWORD PTR [ebx]
  42705f:	ja     0x42702f
  427061:	cmp    DWORD PTR [edi+0x7f],edi
  427064:	stos   BYTE PTR es:[edi],al
  427065:	lea    edi,[eax-0xace5699]
  42706b:	je     0x4270c6
  42706d:	dec    edx
  42706e:	mov    esp,ebp
  427070:	stos   BYTE PTR es:[edi],al
  427071:	fst    QWORD PTR es:[ecx+0x9f810ea]
  427078:	inc    ebp
  427079:	jmp    0xbff7:0xd2e32d6a
  427080:	int3   
  427081:	xchg   BYTE PTR [ebp+edx*2+0x30],ch
  427085:	xchg   esp,eax
  427086:	mov    eax,0xbca2563b
  42708b:	rol    DWORD PTR [ecx-0x773a9fa5],0xe7
  427092:	cmc    
  427093:	xor    DWORD PTR ds:0x396f558,esp
  427099:	ss addr16 push ebp
  42709c:	lds    ecx,FWORD PTR [ecx]
  42709e:	inc    edx
  42709f:	sahf   
  4270a0:	sahf   
  4270a1:	cmp    DWORD PTR [ebx+0x1b],ecx
  4270a4:	pushf  
  4270a5:	sub    al,0x80
  4270a7:	scas   eax,DWORD PTR es:[edi]
  4270a8:	cmp    eax,0x225e6986
  4270ad:	inc    ecx
  4270ae:	mov    esi,fs
  4270b0:	mov    esi,DWORD PTR [edx]
  4270b2:	iret   
  4270b3:	adc    eax,0x2f7da051
  4270b8:	(bad)  
  4270b9:	cmc    
  4270ba:	popf   
  4270bb:	inc    esi
  4270bc:	push   ecx
  4270bd:	mov    edx,0x429d5644
  4270c2:	loop   0x4270da
  4270c4:	adc    DWORD PTR [ebp-0x5d],ebp
  4270c7:	rcr    DWORD PTR [edx+0x3449e474],0x28
  4270ce:	mov    ah,ch
  4270d0:	gs inc ebp
  4270d2:	and    eax,DWORD PTR [edx+0x1ff3e28a]
  4270d8:	xor    BYTE PTR [ecx+0x5b24f2a5],dh
  4270de:	outs   dx,DWORD PTR ds:[esi]
  4270df:	addr16 data16 clc 
  4270e2:	pop    edx
  4270e3:	sub    esi,eax
  4270e5:	cwde   
  4270e6:	xor    al,0x6b
  4270e8:	das    
  4270e9:	add    ebp,esp
  4270eb:	fadd   QWORD PTR [edx+0x7f]
  4270ee:	jmp    0x3d73082a
  4270f3:	adc    bh,BYTE PTR [ebx+0x2]
  4270f6:	dec    eax
  4270f7:	dec    ebx
  4270f8:	(bad)  
  4270f9:	sbb    DWORD PTR [ebx],ebx
  4270fb:	xor    al,0x75
  4270fd:	jno    0x4270fc
  4270ff:	inc    ebp
  427100:	retf   0x92e1
  427103:	gs jmp 0x15ba63a
  427109:	cmp    al,BYTE PTR [ecx+0x1327f7a7]
  42710f:	push   es
  427110:	sbb    edi,DWORD PTR [edx]
  427112:	jns    0x4270cc
  427114:	nop
  427115:	mov    dh,0x2c
  427117:	push   0xca9d24d4
  42711c:	push   es
  42711d:	repnz loope 0x42714a
  427120:	jbe    0x427151
  427122:	push   ss
  427123:	adc    ecx,DWORD PTR [ecx]
  427125:	mov    edx,0x2b46a4ae
  42712a:	inc    esp
  42712b:	mov    esi,0xb307302a
  427130:	pop    esi
  427131:	mov    eax,0x1fa3bd1e
  427136:	aam    0xf4
  427138:	retf   
  427139:	mov    eax,0x19441c59
  42713e:	add    BYTE PTR [esp+esi*1+0x68],0x9b
  427143:	jno    0x42710e
  427145:	inc    esp
  427146:	mov    ah,0x57
  427148:	ins    DWORD PTR es:[edi],dx
  427149:	lds    esp,FWORD PTR ds:0xdfa6a36a
  42714f:	lods   eax,DWORD PTR ds:[esi]
  427150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427151:	jecxz  0x427140
  427153:	mov    esi,ebx
  427155:	mov    dh,dh
  427157:	out    dx,al
  427158:	fwait
  427159:	stos   DWORD PTR es:[edi],eax
  42715a:	cwde   
  42715b:	popf   
  42715c:	clc    
  42715d:	jg     0x42713d
  42715f:	(bad)  
  427161:	rol    DWORD PTR [ebx+edx*4-0x7c],1
  427165:	std    
  427166:	mov    eax,es:0x3b45c637
  42716c:	mov    dl,0xa
  42716e:	add    cl,BYTE PTR [edx+0x7a02a181]
  427174:	je     0x427133
  427176:	pop    ecx
  427177:	ss dec ebx
  427179:	fidiv  DWORD PTR [ebp+esi*4-0x5c]
  42717d:	out    dx,al
  42717e:	outs   dx,DWORD PTR ds:[esi]
  42717f:	call   0xd273bc53
  427184:	les    edi,FWORD PTR [edx-0x5b]
  427187:	(bad)  
  427188:	enter  0x8f2b,0x93
  42718c:	int    0x29
  42718e:	add    dl,dh
  427190:	ins    DWORD PTR es:[edi],dx
  427191:	stos   BYTE PTR es:[edi],al
  427192:	fstp   DWORD PTR [ebx-0x7c]
  427195:	inc    ecx
  427196:	dec    eax
  427197:	cmp    al,bh
  427199:	push   eax
  42719a:	mov    ds:0x5aa65e26,al
  42719f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271a0:	(bad)
  4271a3:	dec    esp
  4271a4:	retf   
  4271a5:	adc    eax,edx
  4271a7:	fs pop ds
  4271a9:	and    eax,0xac196544
  4271ae:	adc    ah,al
  4271b0:	xchg   ebx,eax
  4271b1:	stos   DWORD PTR es:[edi],eax
  4271b2:	call   0xe1178e2b
  4271b7:	pusha  
  4271b8:	aaa    
  4271b9:	mov    ebp,0x93b2a55f
  4271be:	(bad)  
  4271bf:	pop    ss
  4271c0:	pop    eax
  4271c1:	ins    DWORD PTR es:[edi],dx
  4271c2:	in     al,dx
  4271c3:	in     eax,0x52
  4271c5:	(bad)  
  4271c6:	ret    0xf203
  4271c9:	xor    al,0x0
  4271cb:	jns    0x427226
  4271cd:	sbb    BYTE PTR [edx+0x7a64c4d3],bh
  4271d3:	out    dx,eax
  4271d4:	adc    DWORD PTR [ebp-0x10],edi
  4271d7:	cmp    dh,BYTE PTR [edx+0x55b1533a]
  4271dd:	rcr    DWORD PTR [ebx+0x2d],1
  4271e0:	lods   al,BYTE PTR ds:[esi]
  4271e1:	xchg   ebp,eax
  4271e2:	push   ebp
  4271e3:	cwde   
  4271e4:	les    esp,FWORD PTR [ebp+0x5a]
  4271e7:	mov    cl,0xae
  4271e9:	and    esp,ecx
  4271eb:	pusha  
  4271ec:	mov    edi,0xcc341656
  4271f1:	stos   BYTE PTR es:[edi],al
  4271f2:	cli    
  4271f3:	jp     0x427177
  4271f5:	jge    0x427262
  4271f7:	xor    eax,0xc0545ca7
  4271fc:	retf   
  4271fd:	push   cs
  4271fe:	jns    0x4271b5
  427200:	add    eax,0x8b39d79a
  427205:	das    
  427206:	xchg   ebp,eax
  427207:	pop    ds
  427208:	sub    eax,0xb48525f4
  42720d:	fsub   QWORD PTR [edi+edx*2]
  427210:	adc    eax,edx
  427212:	aas    
  427213:	sub    ch,al
  427215:	inc    edx
  427216:	mov    DWORD PTR gs:[bp+di-0x4f24],esp
  42721c:	xor    dh,al
  42721e:	xchg   BYTE PTR [ebx+0x61],ah
  427221:	xchg   edi,eax
  427222:	out    dx,al
  427223:	nop
  427224:	xchg   edx,eax
  427225:	jmp    0x42724f
  427227:	ja     0x4271f9
  427229:	(bad)  
  42722a:	cmc    
  42722b:	mov    ecx,0x381c222f
  427230:	jmp    0x1b7:0x89a2dd0d
  427237:	mov    ebp,0x699b15fa
  42723c:	adc    BYTE PTR [esi+esi*8-0x2b],ah
  427240:	lea    edx,[ecx+0x38]
  427243:	adc    edx,eax
  427245:	popf   
  427246:	and    BYTE PTR ds:0xbb031673,ch
  42724c:	inc    edi
  42724d:	mov    dh,0x3f
  42724f:	imul   ebp,ebp,0x6c223f98
  427255:	out    0xef,eax
  427257:	mov    cl,0x5b
  427259:	pop    esi
  42725a:	cmp    eax,0x8484439
  42725f:	stc    
  427260:	pop    ecx
  427261:	and    al,0xa1
  427263:	xchg   BYTE PTR [edi+edx*8+0x1],ah
  427267:	scas   al,BYTE PTR es:[edi]
  427268:	mov    ah,0xce
  42726a:	ja     0x427257
  42726c:	push   0x67762603
  427271:	jl     0x427256
  427273:	dec    esp
  427274:	call   DWORD PTR [ebx]
  427276:	add    bl,BYTE PTR [ecx+0x357c9935]
  42727c:	lock or eax,0x789d3b8
  427282:	popf   
  427283:	mov    al,0xc
  427285:	ins    BYTE PTR es:[edi],dx
  427286:	jae    0x427263
  427288:	push   esp
  427289:	or     BYTE PTR [eax-0x41],bl
  42728c:	sti    
  42728d:	mov    esi,DWORD PTR [ebx]
  42728f:	push   eax
  427290:	js     0x4272e2
  427292:	dec    ebx
  427293:	push   eax
  427294:	pop    ss
  427295:	and    eax,0xd581136c
  42729a:	cmp    eax,0xf20f5b21
  42729f:	add    bl,BYTE PTR [esi-0x3c]
  4272a2:	sti    
  4272a3:	xchg   esp,eax
  4272a4:	add    al,0x6e
  4272a6:	xchg   ecx,eax
  4272a7:	xchg   BYTE PTR es:[esi],cl
  4272aa:	les    esi,FWORD PTR [eax+eiz*4+0x48b3f6cb]
  4272b1:	xchg   edx,eax
  4272b2:	pop    ecx
  4272b3:	push   ebp
  4272b4:	retf   
  4272b5:	jg     0x4272af
  4272b7:	dec    ecx
  4272b8:	(bad)  
  4272b9:	dec    ebp
  4272ba:	nop
  4272bb:	pusha  
  4272bc:	push   ebx
  4272bd:	out    dx,al
  4272be:	jae    0x4272ae
  4272c0:	addr16 push esp
  4272c2:	ret    
  4272c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272c5:	sbb    al,0x36
  4272c7:	xchg   esp,eax
  4272c8:	sub    edx,DWORD PTR [esi+0x11]
  4272cb:	rcr    BYTE PTR [edx+0x63773c74],cl
  4272d1:	jle    0x4272e7
  4272d3:	cmp    al,0x73
  4272d5:	sub    dh,al
  4272d7:	mov    ebp,0xf9f365e3
  4272dc:	ror    BYTE PTR [ebx+eiz*2],1
  4272df:	into   
  4272e0:	mov    WORD PTR [edi+0x4f732f43],fs
  4272e6:	outs   dx,BYTE PTR ds:[esi]
  4272e7:	mov    dh,0x9a
  4272e9:	fwait
  4272ea:	jg     0x42731d
  4272ec:	popf   
  4272ed:	dec    ebp
  4272ee:	je     0x4272cb
  4272f0:	popa   
  4272f1:	out    dx,al
  4272f2:	jge    0x42732e
  4272f4:	or     esi,DWORD PTR [esi+0x4]
  4272f7:	lods   al,BYTE PTR ds:[esi]
  4272f8:	pusha  
  4272f9:	out    0xee,al
  4272fb:	ja     0x4272eb
  4272fd:	xor    BYTE PTR [esi+0x7a],dl
  427300:	jmp    0xf77a:0xad017530
  427307:	outs   dx,DWORD PTR ds:[esi]
  427308:	mov    ebp,0x1228e7ee
  42730d:	mov    ecx,0x539b33c7
  427312:	sbb    eax,DWORD PTR [ecx+0x26]
  427315:	ins    BYTE PTR es:[edi],dx
  427316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427317:	ret    0xef57
  42731a:	xchg   ecx,eax
  42731b:	fidivr DWORD PTR [edx]
  42731d:	add    ah,BYTE PTR [esi-0x3f]
  427320:	retf   
  427321:	adc    BYTE PTR [edi],cl
  427323:	push   eax
  427324:	add    al,0xfb
  427326:	inc    esi
  427327:	mov    cl,0xf3
  427329:	or     BYTE PTR [esi-0x3b86d5b0],dh
  42732f:	ss mov esp,0xa5a53db6
  427335:	ror    bl,1
  427337:	xchg   ebp,eax
  427338:	add    dl,BYTE PTR [ecx]
  42733a:	xlat   BYTE PTR ds:[ebx]
  42733b:	sbb    edx,DWORD PTR [eax-0x70d5496e]
  427341:	enter  0x62e1,0xb6
  427345:	test   DWORD PTR [ebp+ebp*8-0x68],0xeb385c26
  42734d:	xchg   ebx,eax
  42734e:	into   
  42734f:	cwde   
  427350:	cmp    DWORD PTR [edx+edx*2-0x3b691ab8],edx
  427357:	ins    BYTE PTR es:[edi],dx
  427358:	xchg   esi,eax
  427359:	in     eax,0x9b
  42735b:	fs inc eax
  42735d:	mov    ebp,0x6402cfdd
  427362:	mov    ebx,0xbac2a71a
  427367:	repz jae 0x427398
  42736a:	in     al,dx
  42736b:	popf   
  42736c:	arpl   WORD PTR [edx+esi*8],dx
  42736f:	jmp    0x44f26ec3
  427374:	mov    eax,0x7c6ab1e0
  427379:	or     al,0xdf
  42737b:	dec    esi
  42737c:	aad    0x80
  42737e:	push   edx
  42737f:	mov    ecx,DWORD PTR [eax+ebp*4+0x365668de]
  427386:	mov    dl,0x72
  427388:	xchg   BYTE PTR [ecx+0x26],cl
  42738b:	mov    ecx,0x64937a8c
  427390:	popa   
  427391:	dec    ecx
  427392:	out    dx,eax
  427393:	inc    ebx
  427394:	push   esi
  427395:	retf   0x948e
  427398:	lds    edi,FWORD PTR [ecx+0x3eff4290]
  42739e:	mov    bh,BYTE PTR [edx-0x1f528bfc]
  4273a4:	adc    eax,0xdbc76bde
  4273a9:	loop   0x4273c1
  4273ab:	cdq    
  4273ac:	int    0x5a
  4273ae:	cmp    BYTE PTR [ecx-0x28987087],bh
  4273b4:	sbb    BYTE PTR cs:[esi+0x2a],al
  4273b8:	jno    0x4273a5
  4273ba:	gs xchg ebp,eax
  4273bc:	jecxz  0x42738c
  4273be:	pusha  
  4273bf:	push   esp
  4273c0:	sub    al,BYTE PTR [edx-0x38]
  4273c3:	loopne 0x427356
  4273c5:	and    eax,0x2af2f971
  4273ca:	fldcw  WORD PTR [edx+0x7]
  4273cd:	add    dh,BYTE PTR [ebx]
  4273cf:	std    
  4273d0:	popa   
  4273d1:	sbb    al,0xfc
  4273d3:	or     DWORD PTR [edi+ecx*4+0x5838093a],esp
  4273da:	pop    esi
  4273db:	and    cl,BYTE PTR [ebx+0x58ff32d3]
  4273e1:	mov    ecx,0x4a054429
  4273e6:	xor    BYTE PTR [ecx],cl
  4273e8:	push   es
  4273e9:	scas   eax,DWORD PTR es:[edi]
  4273ea:	mov    al,ds:0x30b80898
  4273ef:	retf   
  4273f0:	cmc    
  4273f1:	loop   0x427468
  4273f3:	push   ebx
  4273f4:	mov    WORD PTR [ebx+0x32a80528],?
  4273fa:	cmp    edi,DWORD PTR [edi-0x30]
  4273fd:	mov    ebp,0xcf22195b
  427402:	das    
  427403:	sbb    eax,0x835cc116
  427408:	test   al,0x7d
  42740a:	rol    ebp,cl
  42740c:	jmp    0x17bc:0x8236a877
  427413:	ja     0x42746b
  427415:	sub    al,0xc0
  427417:	cmp    al,BYTE PTR [ebx+0x5eb6dce4]
  42741d:	(bad)  
  42741e:	and    al,0xa2
  427420:	add    al,al
  427422:	adc    al,0xa7
  427424:	push   edi
  427425:	push   ds
  427426:	rcr    BYTE PTR fs:[esi+0x35],1
  42742a:	dec    ebx
  42742b:	nop
  42742c:	push   edi
  42742d:	sbb    BYTE PTR [ecx-0x69],ch
  427430:	dec    DWORD PTR [edx-0x1dd9ae3f]
  427436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427437:	ret    
  427438:	xor    dh,BYTE PTR [eax]
  42743a:	mov    eax,0x2f15536c
  42743f:	icebp  
  427440:	cdq    
  427441:	cmp    BYTE PTR [ecx],bl
  427443:	sar    ch,cl
  427445:	xor    ah,BYTE PTR [esi+0x52]
  427448:	(bad)  
  427449:	cmp    al,bh
  42744b:	in     al,dx
  42744c:	test   al,0x99
  42744e:	sbb    eax,0x4b6c2925
  427453:	test   BYTE PTR [edx+0x44aba00],al
  427459:	repz and al,0xc5
  42745c:	cmp    al,0x58
  42745e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42745f:	jnp    0x427441
  427461:	and    al,0xde
  427463:	cmc    
  427464:	mov    al,0xe5
  427466:	jb     0x4274d7
  427468:	icebp  
  427469:	loopne 0x42747b
  42746b:	mov    ebp,0xbcfba4a8
  427470:	rcl    DWORD PTR [edx+0x66],cl
  427473:	sbb    esi,DWORD PTR [edi]
  427475:	xchg   edx,ebx
  427477:	mov    edx,0x5507bf41
  42747c:	or     ah,bh
  42747e:	fs inc ecx
  427480:	add    ebx,ecx
  427482:	clc    
  427483:	daa    
  427484:	stc    
  427485:	add    BYTE PTR gs:[ebx],0x35
  427489:	bound  esi,QWORD PTR [eax+0x12]
  42748c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42748d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42748e:	fsubr  DWORD PTR [ebp-0x23cf533b]
  427494:	int3   
  427495:	pop    esi
  427496:	jae    0x4274a6
  427498:	femms  
  42749a:	mov    ebx,0x647d013c
  42749f:	adc    BYTE PTR [edx-0x7a],ah
  4274a2:	popf   
  4274a3:	push   eax
  4274a4:	dec    BYTE PTR [edx]
  4274a6:	jne    0x42751b
  4274a8:	mov    ebx,0xe77a1e2
  4274ad:	ret    
  4274ae:	sbb    eax,0x25ce8d69
  4274b3:	mov    bl,0xef
  4274b5:	aaa    
  4274b6:	inc    ebp
  4274b7:	popf   
  4274b8:	inc    ecx
  4274b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274ba:	(bad)  
  4274bb:	(bad)  
  4274bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274bd:	jbe    0x4274ba
  4274bf:	cmp    eax,ebx
  4274c1:	(bad)  
  4274c2:	es pop eax
  4274c4:	xor    BYTE PTR [ebx],dh
  4274c6:	jae    0x4274db
  4274c8:	test   BYTE PTR [edx-0x1d009994],ch
  4274ce:	loop   0x42746e
  4274d0:	mov    edi,DWORD PTR [eax]
  4274d2:	pop    esp
  4274d3:	push   ds
  4274d4:	cdq    
  4274d5:	(bad)  
  4274d6:	rol    DWORD PTR [ecx+ebp*1-0x76d3ccea],0xa5
  4274de:	mov    al,dh
  4274e0:	dec    DWORD PTR [edx-0x2a]
  4274e3:	add    al,0xd7
  4274e5:	adc    esp,eax
  4274e7:	jmp    FWORD PTR [edx+0xa]
  4274ea:	jp     0x4274d2
  4274ec:	(bad)  
  4274ed:	dec    edi
  4274ee:	icebp  
  4274ef:	mov    al,ds:0x7218c39a
  4274f4:	add    ch,BYTE PTR fs:[eax]
  4274f7:	hlt    
  4274f8:	push   di
  4274fa:	mov    edx,0x17e47b6f
  4274ff:	in     al,dx
  427500:	retf   
  427501:	imul   edx,DWORD PTR [edi-0x26f82860],0xffffffc8
  427508:	cmp    edi,eax
  42750a:	gs loopne 0x42754d
  42750d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42750e:	mov    WORD PTR ds:0x58953ab9,ss
  427514:	inc    ebx
  427515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427516:	jnp    0x427536
  427518:	sub    al,0x3e
  42751a:	mov    dh,0x17
  42751c:	adc    al,0xf
  42751e:	loope  0x42756f
  427520:	jge    0x4274af
  427522:	leave  
  427523:	adc    eax,0xfb7c31a1
  427528:	clc    
  427529:	outs   dx,DWORD PTR ds:[esi]
  42752a:	imul   ebx,DWORD PTR [esi],0xffffffc2
  42752d:	xor    eax,0x9d4ddf06
  427532:	jns    0x4274e8
  427534:	imul   ebp,esp,0x27
  427537:	jmp    0xeec288f
  42753c:	xchg   DWORD PTR [edx],ebx
  42753e:	retf   
  42753f:	pushf  
  427540:	xchg   esp,eax
  427541:	cdq    
  427542:	ror    dl,1
  427544:	or     eax,0xe7f49489
  427549:	call   0x385c:0x17ceae0b
  427550:	mov    ah,0x3e
  427552:	pop    edi
  427553:	popa   
  427554:	sbb    eax,0x31603c45
  427559:	pop    es
  42755a:	addr16 (bad) 
  42755c:	out    0x74,al
  42755e:	es lahf 
  427560:	std    
  427561:	sbb    ecx,DWORD PTR ss:[edx+0x6d]
  427565:	sub    al,cl
  427567:	stc    
  427568:	mov    cl,0x3c
  42756a:	push   0x23af7609
  42756f:	and    dl,bl
  427571:	sub    ebp,DWORD PTR [edx+eax*2-0x4779f5fe]
  427578:	inc    ebx
  427579:	pop    ds
  42757a:	dec    ecx
  42757b:	push   0x31
  42757d:	mov    al,0x10
  42757f:	jge    0x4275aa
  427581:	xrelease xchg DWORD PTR [ebx],esi
  427584:	inc    esp
  427585:	aaa    
  427586:	xor    ecx,edx
  427588:	repz aam 0x70
  42758b:	jbe    0x427536
  42758d:	mov    esp,es
  42758f:	in     eax,0x86
  427591:	sub    BYTE PTR [edx+0x30],ch
  427594:	sahf   
  427595:	je     0x4275cc
  427597:	sbb    ebx,DWORD PTR ds:0xd5185fe1
  42759d:	addr16 xchg edx,eax
  42759f:	pop    ds
  4275a0:	popf   
  4275a1:	loop   0x427578
  4275a3:	nop
  4275a4:	js     0x427599
  4275a6:	adc    ecx,ebx
  4275a8:	ror    eax,cl
  4275aa:	cmc    
  4275ab:	jne    0x4275ea
  4275ad:	ret    0xc3dc
  4275b0:	xor    edi,DWORD PTR [ecx+esi*8+0x29d82785]
  4275b7:	jp     0x4275d1
  4275b9:	push   ebx
  4275ba:	pop    ss
  4275bb:	scas   eax,DWORD PTR es:[edi]
  4275bc:	out    0x5,eax
  4275be:	xchg   ebx,eax
  4275bf:	pushaw 
  4275c1:	ins    BYTE PTR es:[edi],dx
  4275c2:	xchg   ebx,eax
  4275c3:	in     eax,0xc2
  4275c5:	dec    ecx
  4275c6:	sbb    BYTE PTR [ecx+edx*1+0x3f2056eb],0x50
  4275ce:	dec    BYTE PTR [ecx]
  4275d0:	xor    BYTE PTR [edi],bh
  4275d2:	dec    ebp
  4275d3:	sub    BYTE PTR [ebx+0x5e3e338a],dh
  4275d9:	dec    eax
  4275da:	lahf   
  4275db:	mov    ch,0xfb
  4275dd:	cmp    DWORD PTR [edi+edi*4-0x17],edx
  4275e1:	fnstcw WORD PTR [esi]
  4275e3:	sbb    ecx,DWORD PTR fs:[edi-0x54]
  4275e7:	jns    0x427594
  4275e9:	and    esp,DWORD PTR [ecx]
  4275eb:	enter  0x6b83,0x10
  4275ef:	cdq    
  4275f0:	sub    esp,esi
  4275f2:	pop    DWORD PTR [ebx+esi*2-0x3a]
  4275f6:	repz or eax,0x98aafe8d
  4275fc:	les    edx,FWORD PTR [edx+0x7bf2613a]
  427602:	or     DWORD PTR [ebp+ebp*4-0x24],ecx
  427606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427607:	fiadd  DWORD PTR [eax-0x47]
  42760a:	pop    eax
  42760b:	fstp   DWORD PTR [ecx]
  42760d:	std    
  42760e:	std    
  42760f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427610:	aaa    
  427611:	pop    esp
  427612:	ss pop ebp
  427614:	mov    DWORD PTR [ebp+edx*1-0x2f26735d],0x57b0ca1e
  42761f:	popa   
  427620:	jbe    0x4275bf
  427622:	(bad)  
  427623:	cdq    
  427624:	loopne 0x42769a
  427626:	jl     0x4275c4
  427628:	(bad)  
  427629:	shr    BYTE PTR [esi],1
  42762b:	(bad)  
  42762c:	jmp    0x4275c2
  42762e:	out    0xc2,al
  427630:	out    dx,eax
  427631:	jp     0x427622
  427633:	xlat   BYTE PTR ds:[ebx]
  427634:	mov    WORD PTR [ebx+0x12],ss
  427637:	sbb    DWORD PTR [edx-0x78e82ff4],esi
  42763d:	add    BYTE PTR [eax+0x157886ba],ch
  427643:	push   ss
  427644:	xlat   BYTE PTR ds:[ebx]
  427645:	sbb    DWORD PTR ds:0x2ec5e804,edi
  42764b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42764c:	push   cs
  42764d:	repz mov eax,ds:0x4a6aae83
  427653:	sbb    ch,bh
  427655:	jo     0x427672
  427657:	hlt    
  427658:	es retf 0x724a
  42765c:	clc    
  42765d:	dec    ebx
  42765e:	inc    ebp
  42765f:	test   DWORD PTR [esi-0x70],esi
  427662:	iret   
  427663:	xor    DWORD PTR [edi+0x65696774],0x52c08205
  42766d:	pop    ss
  42766e:	test   al,0xd0
  427670:	test   eax,0xff22109c
  427675:	scas   al,BYTE PTR es:[edi]
  427676:	and    DWORD PTR [ebx],eax
  427678:	es jmp 0x7f32c657
  42767e:	inc    ecx
  42767f:	xchg   BYTE PTR [ebx-0x55],dl
  427682:	push   esi
  427683:	test   al,0x5d
  427685:	xchg   edx,eax
  427686:	jmp    0x4276ab
  427688:	ret    0x916d
  42768b:	push   0x63
  42768d:	int    0x1
  42768f:	jl     0x4276dd
  427691:	mov    WORD PTR [edx+0x57],gs
  427694:	sbb    ebp,DWORD PTR [edx+0x707a8785]
  42769a:	jecxz  0x427633
  42769c:	push   0xffffff92
  42769e:	cmp    bh,BYTE PTR [ebx+edx*2]
  4276a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276a2:	stc    
  4276a3:	mov    eax,ds:0x178c3346
  4276a8:	in     eax,dx
  4276a9:	xchg   esi,eax
  4276aa:	shl    dl,cl
  4276ac:	or     eax,0xdfea5135
  4276b1:	push   esi
  4276b2:	idiv   DWORD PTR [ebx+0x3a601b35]
  4276b8:	cmp    DWORD PTR [ecx-0x67880ae6],esi
  4276be:	fwait
  4276bf:	xchg   ebp,eax
  4276c0:	retf   0x6073
  4276c3:	mov    edi,0x4730605c
  4276c8:	push   eax
  4276c9:	push   eax
  4276ca:	push   esi
  4276cb:	fidiv  DWORD PTR [ebp-0x4e]
  4276ce:	outs   dx,BYTE PTR ds:[esi]
  4276cf:	iret   
  4276d0:	into   
  4276d1:	push   ds
  4276d2:	or     DWORD PTR [eax],ebp
  4276d4:	leave  
  4276d5:	shl    BYTE PTR [esi],1
  4276d7:	mov    cl,0x6f
  4276d9:	lea    esi,[edx]
  4276db:	mov    edi,0x32688dd3
  4276e0:	into   
  4276e1:	jb     0x42769d
  4276e3:	and    eax,0xe7b34b5c
  4276e8:	arpl   WORD PTR [edx+0x7b],di
  4276eb:	aaa    
  4276ec:	cmp    bh,0x42
  4276ef:	lea    ecx,[eax-0x5e]
  4276f2:	dec    eax
  4276f3:	out    dx,al
  4276f4:	retf   
  4276f5:	repnz fimul WORD PTR [eax-0x729c4d0b]
  4276fc:	loope  0x4276de
  4276fe:	xchg   esi,eax
  4276ff:	mov    al,ds:0x7b0e69e0
  427704:	inc    ebp
  427705:	mov    ah,0x19
  427707:	sub    dl,bl
  427709:	inc    ecx
  42770a:	inc    edx
  42770b:	in     eax,dx
  42770c:	inc    edx
  42770d:	(bad)  
  42770f:	or     al,0x3c
  427711:	enter  0xa114,0x98
  427715:	not    esi
  427717:	sbb    dl,bh
  427719:	xor    bl,ah
  42771b:	push   ebp
  42771c:	arpl   WORD PTR ds:0xdbeb7da2,bx
  427722:	mov    edx,0x152848f9
  427727:	pop    ss
  427728:	jns    0x42774d
  42772a:	inc    esp
  42772b:	outs   dx,DWORD PTR ds:[esi]
  42772c:	test   DWORD PTR [edx-0x4fcac0d6],esp
  427732:	mov    cl,0xaa
  427734:	(bad)  
  427735:	xor    DWORD PTR [ebx+0x1b],0xffffffaf
  427739:	and    al,0x7d
  42773b:	pop    edi
  42773c:	mov    ch,0x48
  42773e:	push   ebx
  42773f:	dec    ecx
  427740:	dec    edi
  427741:	sbb    edx,ebx
  427743:	int3   
  427744:	push   ebp
  427745:	adc    eax,0xa9be21e2
  42774a:	inc    ebp
  42774b:	adc    BYTE PTR [edx],0x41
  42774e:	(bad)
  427752:	cld    
  427753:	lods   al,BYTE PTR ds:[esi]
  427754:	mov    ch,ah
  427756:	adc    ebp,ebx
  427758:	pop    edi
  427759:	and    ebp,edi
  42775b:	fisubr DWORD PTR [edi-0x78]
  42775e:	jg     0x427746
  427760:	jecxz  0x4277e1
  427762:	bound  ebx,QWORD PTR [edi]
  427764:	inc    edi
  427765:	cmp    eax,0xbfa4d1b
  42776a:	pop    eax
  42776b:	in     al,dx
  42776c:	ins    BYTE PTR es:[edi],dx
  42776d:	push   edx
  42776e:	aad    0xa
  427770:	adc    eax,0x6fdc4f73
  427775:	dec    DWORD PTR [ecx+edi*2+0x673b77d0]
  42777c:	sti    
  42777d:	cmp    BYTE PTR [esi],dl
  42777f:	addr16 inc edx
  427781:	push   esi
  427782:	cmp    ah,BYTE PTR [ecx+0x1c]
  427785:	xchg   BYTE PTR [ecx-0x3d],dl
  427788:	mov    esp,0x531d3489
  42778d:	sbb    ebx,DWORD PTR [edx-0xdf29e77]
  427793:	sub    BYTE PTR [ecx],dl
  427795:	loop   0x4277cf
  427797:	jl     0x4277ec
  427799:	dec    edi
  42779a:	icebp  
  42779b:	neg    dh
  42779d:	mov    ecx,0x18b30865
  4277a2:	div    BYTE PTR ds:0xe559ec5a
  4277a8:	mov    al,ds:0xa8d64107
  4277ad:	jmp    0xaa47a819
  4277b2:	cmp    BYTE PTR [ebp+0x4624a503],dh
  4277b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277b9:	xchg   bp,ax
  4277bb:	mov    al,0x61
  4277bd:	and    ebp,DWORD PTR [ebx+esi*2-0x6d131ad0]
  4277c4:	add    eax,0x981d4f57
  4277c9:	jbe    0x427820
  4277cb:	out    dx,eax
  4277cc:	int    0x5
  4277ce:	dec    esi
  4277cf:	gs std 
  4277d1:	sbb    al,BYTE PTR [ebx]
  4277d3:	inc    ecx
  4277d4:	add    DWORD PTR [esi+0x34],0x1e
  4277d8:	cwde   
  4277d9:	sub    BYTE PTR [ecx],bh
  4277db:	push   esi
  4277dc:	test   BYTE PTR [ebp-0x2af842dc],bl
  4277e2:	into   
  4277e3:	jg     0x42780f
  4277e5:	adc    bl,cl
  4277e7:	aam    0x43
  4277e9:	fmul   DWORD PTR [esi+esi*4-0x2a]
  4277ed:	out    dx,eax
  4277ee:	sub    bl,BYTE PTR [edx+0x53]
  4277f1:	in     eax,dx
  4277f2:	pop    esi
  4277f3:	xchg   ecx,eax
  4277f4:	stc    
  4277f5:	es xchg esi,eax
  4277f7:	inc    esp
  4277f8:	adc    BYTE PTR [edx+0x6e],dl
  4277fb:	pop    ss
  4277fc:	inc    edx
  4277fd:	sbb    al,0x86
  4277ff:	jle    0x427857
  427801:	cdq    
  427802:	jae    0x4277dd
  427804:	mov    esi,0x17750cf3
  427809:	shl    BYTE PTR [edi-0x12],cl
  42780c:	in     al,dx
  42780d:	addr16 pop ds
  42780f:	dec    ebp
  427810:	or     eax,0xe63c5ab2
  427815:	adc    DWORD PTR [ecx+0x3e],ecx
  427818:	mov    eax,0xe89fd81b
  42781d:	sub    DWORD PTR [ecx-0x4ea11a44],esi
  427823:	cmp    al,0x8
  427825:	or     DWORD PTR [edi+0x49],0xffffffd8
  427829:	js     0x4277ef
  42782b:	and    esp,DWORD PTR [eax+ecx*4+0x10]
  42782f:	jnp    0x42783d
  427831:	inc    ebx
  427832:	mov    dl,0xbf
  427834:	sbb    DWORD PTR [ecx+eax*2-0x12],ebx
  427838:	aaa    
  427839:	sar    DWORD PTR [esp+eax*2-0x6b087559],1
  427840:	mov    eax,es:0x55b3c544
  427846:	(bad)  
  427847:	scas   al,BYTE PTR es:[edi]
  427848:	mov    edx,0x1e3ceaea
  42784d:	xchg   BYTE PTR [eax+0x16],cl
  427850:	lods   eax,DWORD PTR ds:[esi]
  427851:	dec    edi
  427852:	mov    cl,0x9c
  427854:	push   0x7a758aee
  427859:	inc    edi
  42785a:	dec    edi
  42785b:	pusha  
  42785c:	fwait
  42785d:	or     cl,dl
  42785f:	jo     0x42786f
  427861:	lahf   
  427862:	sbb    cl,dh
  427864:	mov    bh,0x1d
  427866:	leave  
  427867:	test   BYTE PTR [ebp-0x63ac8864],al
  42786d:	pop    ecx
  42786e:	clc    
  42786f:	adc    DWORD PTR [edi+0x67],ebx
  427872:	push   gs
  427874:	nop
  427875:	popf   
  427876:	scas   al,BYTE PTR es:[edi]
  427877:	jnp    0x4278b8
  427879:	arpl   WORD PTR [edx+0x4f],dx
  42787c:	inc    eax
  42787d:	mov    ch,0xc0
  42787f:	cmp    esi,DWORD PTR [ebp-0x5cd465d]
  427885:	xchg   ebp,eax
  427886:	mov    bh,0x18
  427888:	pushf  
  427889:	push   cs
  42788a:	int    0xdf
  42788c:	hlt    
  42788d:	outs   dx,BYTE PTR ds:[esi]
  42788e:	cld    
  42788f:	cwde   
  427890:	and    eax,0x8aa6a73c
  427895:	shl    DWORD PTR [ecx-0x4b77b14c],0x40
  42789c:	clc    
  42789d:	neg    DWORD PTR [edx-0x38de6756]
  4278a3:	inc    ebp
  4278a4:	je     0x4278bd
  4278a6:	test   BYTE PTR [ecx+0x5af5fd06],0xa
  4278ad:	mul    BYTE PTR [edi+0x69]
  4278b0:	cli    
  4278b1:	inc    eax
  4278b2:	lock loopne 0x427890
  4278b5:	pop    ebx
  4278b6:	and    eax,0x4e9e41ae
  4278bb:	sub    al,0x5d
  4278bd:	lods   eax,DWORD PTR ds:[esi]
  4278be:	jb     0x766dd64
  4278c4:	dec    edi
  4278c5:	js     0x42784e
  4278c7:	ja     0x427882
  4278c9:	(bad)  
  4278ca:	leave  
  4278cb:	test   DWORD PTR ds:0x2f33055d,ebp
  4278d1:	adc    DWORD PTR [ebx],eax
  4278d3:	add    ebx,DWORD PTR [ebx]
  4278d5:	(bad)  
  4278d6:	sbb    al,0x3b
  4278d8:	xchg   ebp,eax
  4278d9:	cwde   
  4278da:	test   ch,dl
  4278dc:	pushf  
  4278dd:	ja     0x4278d0
  4278df:	cmp    al,0x73
  4278e1:	cld    
  4278e2:	leave  
  4278e3:	inc    eax
  4278e4:	out    0x22,eax
  4278e6:	stos   DWORD PTR es:[edi],eax
  4278e7:	pop    edi
  4278e8:	mov    ds:0x73afd2b,eax
  4278ed:	jle    0x427912
  4278ef:	sub    DWORD PTR ds:0xf844d2ea,ebp
  4278f5:	outs   dx,DWORD PTR ds:[esi]
  4278f6:	cmp    ecx,DWORD PTR [eax]
  4278f8:	inc    eax
  4278f9:	mov    al,0x7b
  4278fb:	js     0x427913
  4278fd:	retf   0xd0af
  427900:	xor    DWORD PTR [ebp+0x57],ebp
  427903:	cmc    
  427904:	jns    0x427920
  427906:	loope  0x42789f
  427908:	xor    eax,0x7892cfa7
  42790d:	mov    ebx,0x18f7629a
  427912:	out    0x33,al
  427914:	mov    edi,0xccd1b14e
  427919:	cmp    al,0xc0
  42791b:	or     ecx,edi
  42791d:	popa   
  42791e:	or     al,0x68
  427920:	sahf   
  427921:	or     BYTE PTR [esi+eiz*8],al
  427924:	mov    al,0xa2
  427926:	mov    WORD PTR [ecx],fs
  427928:	sbb    dl,0xd9
  42792b:	push   cs
  42792c:	sub    eax,0xa1cc45e4
  427931:	cmp    ebp,DWORD PTR [edi]
  427933:	into   
  427934:	imul   ebp,DWORD PTR [ecx+edx*1-0x4c78eb83],0xffffffb4
  42793c:	dec    ebx
  42793d:	jbe    0x4278da
  42793f:	jmp    0x4278e3
  427941:	mov    edi,0x8dca9516
  427946:	out    dx,eax
  427947:	inc    esi
  427948:	mov    eax,ds:0xe1d5f540
  42794d:	dec    ebx
  42794e:	int    0xfb
  427950:	fs in  al,0x6d
  427953:	mov    bl,0x8f
  427955:	aas    
  427956:	das    
  427957:	lds    esp,FWORD PTR [ebx+eiz*4-0x2807408d]
  42795e:	mov    BYTE PTR [esi+ebp*2-0xd364d70],dl
  427965:	fdiv   DWORD PTR [eax]
  427967:	inc    edx
  427968:	push   eax
  427969:	mov    ebx,0xd369b2b1
  42796e:	push   es
  42796f:	push   eax
  427970:	xchg   BYTE PTR [edi-0x17a999b0],ch
  427976:	pop    edx
  427977:	fcomi  st,st(5)
  427979:	std    
  42797a:	mov    dl,0xa6
  42797c:	jbe    0x427996
  42797e:	inc    eax
  42797f:	hlt    
  427980:	call   0xb38b:0x39ddec4c
  427987:	(bad)  
  427988:	aaa    
  427989:	lock sar DWORD PTR [ecx],cl
  42798c:	or     esi,DWORD PTR [eax-0x2c]
  42798f:	adc    al,BYTE PTR [ecx-0x50bffd87]
  427995:	test   eax,0x952a249
  42799a:	arpl   bp,cx
  42799c:	cli    
  42799d:	popa   
  42799e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42799f:	rol    DWORD PTR [ebp+0x18ee5df4],1
  4279a5:	aad    0xaf
  4279a7:	xor    eax,0xe8ddc768
  4279ac:	push   cs
  4279ad:	rol    BYTE PTR [ecx+ecx*2+0x69],cl
  4279b1:	ret    
  4279b2:	or     eax,0xb4d52b60
  4279b7:	push   ds
  4279b8:	and    al,0x13
  4279ba:	inc    edx
  4279bb:	push   esi
  4279bc:	pop    edx
  4279bd:	mov    bh,0xcf
  4279bf:	jmp    0x152926a
  4279c4:	and    BYTE PTR [esi-0xf],bl
  4279c7:	rcr    DWORD PTR [ebp-0x57],0xc2
  4279cb:	sbb    DWORD PTR [eax],ebx
  4279cd:	lock jecxz 0x427a1c
  4279d0:	bound  esp,QWORD PTR [ebx+0x55d8f213]
  4279d6:	das    
  4279d7:	retf   
  4279d8:	jnp    0x427a28
  4279da:	(bad)  
  4279db:	pop    ds
  4279dc:	hlt    
  4279dd:	cmp    DWORD PTR [ebx-0x7],0x9b74e531
  4279e4:	clc    
  4279e5:	inc    esi
  4279e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279e8:	and    BYTE PTR [edx],cl
  4279ea:	mov    ecx,0x82af2966
  4279ef:	jmp    0xde10f8ef
  4279f4:	push   esi
  4279f5:	test   ebx,edx
  4279f7:	xchg   esp,eax
  4279f8:	sub    eax,0x74412960
  4279fd:	in     eax,0x4b
  4279ff:	push   edi
  427a00:	push   ds
  427a01:	out    0x71,al
  427a03:	sbb    al,0x6f
  427a05:	test   al,0xcf
  427a07:	lods   eax,DWORD PTR ds:[esi]
  427a08:	arpl   WORD PTR [edi-0x78a6d5af],si
  427a0e:	dec    ebx
  427a0f:	das    
  427a10:	sbb    eax,0xe6ab91eb
  427a15:	fld    DWORD PTR [edx]
  427a17:	jns    0x4279ac
  427a19:	(bad)  
  427a1a:	jmp    0x4a182a15
  427a1f:	shl    BYTE PTR [ecx+0x69],cl
  427a22:	loope  0x427aa3
  427a24:	inc    eax
  427a25:	pop    ecx
  427a26:	jg     0x427a68
  427a28:	in     eax,0x77
  427a2a:	nop
  427a2b:	pop    ss
  427a2c:	mov    WORD PTR [eax+0x53d27ea8],ss
  427a32:	aam    0x15
  427a34:	pop    esp
  427a35:	div    BYTE PTR [ecx]
  427a37:	ret    
  427a38:	(bad)  
  427a39:	jg     0x427a9e
  427a3b:	jb     0x427ab4
  427a3d:	aaa    
  427a3e:	scas   eax,DWORD PTR es:[edi]
  427a3f:	inc    eax
  427a40:	cwde   
  427a41:	(bad)
  427a45:	mov    al,gs:0x286bc9a1
  427a4b:	adc    bh,BYTE PTR [edx+eax*2+0x2d]
  427a4f:	sub    edi,edi
  427a51:	push   cs
  427a52:	clc    
  427a53:	ret    
  427a54:	jns    0x4279fe
  427a56:	iret   
  427a57:	jecxz  0x427a2b
  427a59:	loope  0x427ad1
  427a5b:	pop    eax
  427a5c:	retf   0x8254
  427a5f:	fild   DWORD PTR [eax+eax*4]
  427a62:	sbb    dl,cl
  427a64:	mov    ah,0xb
  427a66:	jg     0x427a8e
  427a68:	add    ebp,DWORD PTR [ecx]
  427a6a:	push   ebp
  427a6b:	sub    DWORD PTR [edx],ebx
  427a6d:	pop    ecx
  427a6e:	xor    ebp,edx
  427a70:	push   cs
  427a71:	cmp    DWORD PTR [eax],0xc3ad86f1
  427a77:	loopne 0x427a6e
  427a79:	jmp    0x427a54
  427a7b:	jbe    0x427a99
  427a7d:	inc    ebx
  427a7e:	test   DWORD PTR [ebx+0x2150c5ed],edx
  427a84:	cmp    al,0x89
  427a86:	cmp    BYTE PTR [ebp+0x3],dh
  427a89:	hlt    
  427a8a:	push   0xd1d85a02
  427a8f:	inc    esp
  427a90:	push   es
  427a91:	push   ds
  427a92:	test   DWORD PTR [edi-0x76],ebx
  427a95:	push   ecx
  427a96:	adc    DWORD PTR [edi-0x7d173029],0xffffff84
  427a9d:	es (bad) 
  427a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aa0:	jl     0x427aff
  427aa2:	jb     0x427ae7
  427aa4:	jo     0x427a4e
  427aa6:	and    edi,ebx
  427aa8:	pushf  
  427aa9:	aaa    
  427aaa:	icebp  
  427aab:	xchg   ecx,eax
  427aac:	pushf  
  427aad:	scas   al,BYTE PTR es:[edi]
  427aae:	loop   0x427b0a
  427ab0:	inc    edi
  427ab1:	mov    ah,0xfb
  427ab3:	xchg   ecx,eax
  427ab4:	mov    BYTE PTR [ecx-0x69fe1b26],ch
  427aba:	std    
  427abb:	das    
  427abc:	hlt    
  427abd:	inc    ecx
  427abe:	xchg   DWORD PTR [eax+0x7e],edi
  427ac1:	imul   eax,DWORD PTR [ebx+0x34],0xffffffa1
  427ac5:	repz jg 0x427afb
  427ac8:	cmp    eax,0xa811cdbd
  427acd:	pop    ecx
  427ace:	jns    0x427aa6
  427ad0:	mov    ebp,0x8c49959c
  427ad5:	stc    
  427ad6:	lods   al,BYTE PTR ds:[esi]
  427ad7:	mov    esp,0xf7668238
  427adc:	pop    eax
  427add:	mov    edi,0x84c950db
  427ae2:	pop    esi
  427ae3:	xor    eax,0x94efbcf9
  427ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ae9:	cmp    DWORD PTR [edx],edx
  427aeb:	test   al,0xee
  427aed:	test   al,0x93
  427aef:	cmp    eax,0x20ce9194
  427af4:	stc    
  427af5:	xchg   esi,eax
  427af6:	test   esp,ecx
  427af8:	xor    DWORD PTR [eiz*4-0x43d0d905],edx
  427aff:	pop    edx
  427b00:	xor    DWORD PTR [edi+0x7e],esp
  427b03:	lahf   
  427b04:	popa   
  427b05:	sub    al,0x24
  427b07:	mov    ecx,0x7bd13946
  427b0c:	clc    
  427b0d:	xor    eax,0xe79f40a4
  427b12:	pop    esi
  427b13:	(bad)  
  427b15:	mov    ebp,0xb9c6db26
  427b1a:	(bad)  
  427b1b:	mov    ds:0x4ae89eaf,al
  427b20:	jge    0x427aaa
  427b22:	push   ecx
  427b23:	repz jne 0x427ad5
  427b26:	shl    DWORD PTR [edi-0x3e96bcb4],0x55
  427b2d:	call   0xf6702cc4
  427b32:	int3   
  427b33:	adc    al,0xda
  427b35:	sub    bh,bl
  427b37:	cmc    
  427b38:	pop    ecx
  427b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b3a:	sub    edi,DWORD PTR [esi+0x16]
  427b3d:	popf   
  427b3e:	dec    esi
  427b3f:	push   edi
  427b40:	cmc    
  427b41:	cmp    al,0x6a
  427b43:	ss test al,0x4c
  427b46:	stos   DWORD PTR es:[edi],eax
  427b47:	dec    edi
  427b48:	popf   
  427b49:	and    eax,0x497672ea
  427b4e:	mov    dl,BYTE PTR [ebp-0x6387d9ff]
  427b54:	adc    BYTE PTR [ebx+0x51],bh
  427b57:	fs inc edx
  427b59:	mov    ebx,0x542cd9b
  427b5e:	in     eax,0x7a
  427b60:	loopne 0x427b2b
  427b62:	or     eax,esp
  427b64:	repz xchg ebx,eax
  427b66:	cli    
  427b67:	ret    0x8a67
  427b6a:	mov    al,0x4e
  427b6c:	jno    0x427b8f
  427b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b6f:	(bad)  
  427b70:	sar    ebp,1
  427b72:	ret    0xef54
  427b75:	js     0x427bb0
  427b77:	test   eax,ecx
  427b79:	sbb    BYTE PTR [edi],0x66
  427b7c:	and    esi,DWORD PTR [ecx-0x4aa397dc]
  427b82:	or     DWORD PTR [ebp+0x72b69485],edx
  427b88:	push   ds
  427b89:	fisubr WORD PTR [ecx+edx*4]
  427b8c:	or     eax,0xa02d109d
  427b91:	pop    ebp
  427b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b93:	jg     0x427bcd
  427b95:	xor    eax,0x5121967e
  427b9a:	xor    eax,0xa8f94ff5
  427b9f:	jne    0x427bbe
  427ba1:	aas    
  427ba2:	and    dh,BYTE PTR [ebx+ecx*4+0x65]
  427ba6:	fdiv   DWORD PTR [ebp+esi*2-0x4e]
  427baa:	repnz icebp 
  427bac:	jle    0x427b6e
  427bae:	jnp    0x427b9a
  427bb0:	mov    ecx,0x31c43708
  427bb5:	fmul   DWORD PTR [ebx]
  427bb7:	lock mov cl,0x3d
  427bba:	pop    edi
  427bbb:	call   0x3f2df96f
  427bc0:	dec    esi
  427bc1:	xor    dh,BYTE PTR [edi-0x57b5b15c]
  427bc7:	leave  
  427bc8:	lods   eax,DWORD PTR ds:[esi]
  427bc9:	fiadd  WORD PTR [ecx]
  427bcb:	dec    esp
  427bcc:	jo     0x427bf1
  427bce:	int3   
  427bcf:	or     DWORD PTR [edi+0x4435b7f8],eax
  427bd5:	jbe    0x427c0d
  427bd7:	clc    
  427bd8:	int3   
  427bd9:	adc    DWORD PTR [ebp+edx*8-0x7e],0x30
  427bde:	or     BYTE PTR [ebx],dh
  427be0:	ficomp DWORD PTR [edi+0x5f]
  427be3:	fldcw  WORD PTR [bp+di]
  427be6:	mov    ebx,0xb66a114a
  427beb:	xchg   ebx,ebx
  427bed:	lods   eax,DWORD PTR ds:[esi]
  427bee:	jmp    0x75a7f741
  427bf3:	adc    BYTE PTR [edx-0x5d],bl
  427bf6:	sub    ecx,eax
  427bf8:	lods   eax,DWORD PTR ds:[esi]
  427bf9:	and    ch,BYTE PTR [ecx]
  427bfb:	xor    DWORD PTR [edx-0x30],esp
  427bfe:	mov    ds:0x907afe08,al
  427c03:	ret    
  427c04:	into   
  427c05:	andnps xmm6,xmm2
  427c08:	ja     0x427bbf
  427c0a:	shr    BYTE PTR [edx],1
  427c0c:	rdmsr  
  427c0e:	adc    BYTE PTR [esi-0x73],0x6c
  427c12:	xchg   BYTE PTR [edi+ebp*2+0x7e6cc3c4],bh
  427c19:	pop    ss
  427c1a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  427c1c:	cli    
  427c1d:	dec    edx
  427c1e:	cli    
  427c1f:	mov    edx,edx
  427c21:	arpl   sp,dx
  427c23:	jle    0x427bd7
  427c25:	psubusw mm1,QWORD PTR [ebx+0x7]
  427c29:	jne    0x427bff
  427c2b:	outs   dx,BYTE PTR ds:[esi]
  427c2c:	je     0x427be3
  427c2e:	or     DWORD PTR [esp+edi*4-0x35fe6cf4],eax
  427c35:	jmp    0x12d:0x1dc28c16
  427c3c:	stos   DWORD PTR es:[edi],eax
  427c3d:	sahf   
  427c3e:	(bad)  
  427c3f:	mul    BYTE PTR [ebx-0x54]
  427c42:	sub    ch,ch
  427c44:	sbb    dh,BYTE PTR [edi+0x3ac1ad16]
  427c4a:	adc    DWORD PTR [eax-0x2061c844],ebp
  427c50:	neg    BYTE PTR ds:0x9f3cc72d
  427c56:	cmp    BYTE PTR [ecx],0x2f
  427c59:	jmp    0xaf2f:0xde855fca
  427c60:	ffree  st(0)
  427c62:	pusha  
  427c63:	mov    al,ds:0x9c999eaf
  427c68:	sbb    eax,0x6b16ce42
  427c6d:	outs   dx,DWORD PTR ds:[esi]
  427c6e:	imul   ebp,DWORD PTR [ebp-0x13418b34],0xffffffd4
  427c75:	hlt    
  427c76:	adc    DWORD PTR [ebx+0x552262e4],esp
  427c7c:	dec    esp
  427c7d:	and    eax,0xf90649e0
  427c82:	int3   
  427c83:	imul   edi,esi,0x6f
  427c86:	pop    esp
  427c87:	cwde   
  427c88:	ins    DWORD PTR es:[edi],dx
  427c89:	pop    esp
  427c8a:	or     ebp,DWORD PTR [eax+0x20]
  427c8d:	add    al,0x52
  427c8f:	mov    gs,WORD PTR [edi]
  427c91:	mov    dh,BYTE PTR [ecx+0x573d80b9]
  427c97:	icebp  
  427c98:	xchg   ebx,eax
  427c99:	dec    ebp
  427c9a:	mov    esi,0xc453a149
  427c9f:	in     eax,dx
  427ca0:	sbb    BYTE PTR [esp+eax*1-0x2c],bh
  427ca4:	mov    esi,0x20d2234c
  427ca9:	shl    esp,1
  427cab:	cmp    al,BYTE PTR [esi-0x505e63f6]
  427cb1:	das    
  427cb2:	test   eax,0xa1228c03
  427cb7:	push   ds
  427cb8:	inc    esp
  427cba:	jecxz  0x427cea
  427cbc:	ja     0x427c5e
  427cbe:	in     al,dx
  427cbf:	lock add dl,BYTE PTR [edx+0x65cd271f]
  427cc6:	dec    ebp
  427cc7:	(bad)
  427cca:	sbb    al,0x59
  427ccc:	adc    al,0xb3
  427cce:	icebp  
  427ccf:	xlat   BYTE PTR ds:[ebx]
  427cd0:	stc    
  427cd1:	aad    0xc2
  427cd3:	xchg   ebp,eax
  427cd4:	mov    ebx,0x91022c4e
  427cd9:	and    al,0xb4
  427cdb:	stos   BYTE PTR es:[edi],al
  427cdc:	dec    esp
  427cdd:	mov    bh,0x24
  427cdf:	pop    ebx
  427ce0:	fmul   DWORD PTR [esi+0x7d082bf5]
  427ce6:	xchg   edi,eax
  427ce7:	adc    eax,0x1f25c74a
  427cec:	imul   ecx,DWORD PTR [edi-0x1f7ea4d5],0xffffffa6
  427cf3:	mov    edi,0x8080e4d9
  427cf8:	or     al,0xff
  427cfa:	cs inc eax
  427cfc:	cmp    DWORD PTR [edi+0x46b62bae],0xffffffd9
  427d03:	cmp    ecx,DWORD PTR [ecx+0x4b]
  427d06:	jmp    0x968:0x5fd59f6b
  427d0d:	add    DWORD PTR [edi],ebp
  427d0f:	lds    esp,FWORD PTR [eax-0x28]
  427d12:	mov    al,ds:0x10aca1b6
  427d17:	call   0xbf24cc6
  427d1c:	les    esi,FWORD PTR [edx]
  427d1e:	aad    0x1f
  427d20:	jmp    0x3d61439
  427d25:	push   edx
  427d26:	ret    
  427d27:	or     bh,BYTE PTR [ebp+0x5ac9864b]
  427d2d:	call   0xfc6f:0x64ae7fde
  427d34:	mov    al,0x58
  427d36:	(bad)  
  427d37:	in     eax,0x7
  427d39:	or     eax,eax
  427d3b:	jl     0x427d13
  427d3d:	(bad)
  427d41:	retf   
  427d42:	cs retf 0xc5c1
  427d46:	arpl   WORD PTR [ecx+0x2b60e853],ax
  427d4c:	sbb    ebp,eax
  427d4e:	in     al,dx
  427d4f:	(bad)  
  427d50:	bound  eax,QWORD PTR [edi-0x31]
  427d53:	pushf  
  427d54:	push   0xffffff9a
  427d56:	and    BYTE PTR [ebp+0x41],cl
  427d59:	fcos   
  427d5b:	fmul   QWORD PTR [ecx+0x53]
  427d5e:	fistp  WORD PTR [eax-0x41503531]
  427d64:	jbe    0x427d58
  427d66:	jns    0x427d26
  427d68:	fisttp QWORD PTR [ebp+0x56]
  427d6b:	xor    ebx,DWORD PTR [esi]
  427d6d:	mov    cl,0x5a
  427d6f:	mov    WORD PTR ds:0xef516caa,?
  427d75:	rcl    cl,1
  427d77:	loop   0x427dea
  427d79:	stos   DWORD PTR es:[edi],eax
  427d7a:	bound  ebx,QWORD PTR [esi+edx*2-0x2c]
  427d7e:	mov    esi,0x86fe3562
  427d83:	push   ebp
  427d84:	mov    dl,0x8f
  427d86:	sub    al,0x7b
  427d88:	pop    es
  427d89:	mov    esi,0xd09933d
  427d8e:	fst    DWORD PTR [edi]
  427d90:	push   esp
  427d91:	sbb    bh,BYTE PTR [eax-0x37]
  427d94:	xor    edx,ebx
  427d96:	rdpmc  
  427d98:	sub    DWORD PTR [ecx],ebp
  427d9a:	pusha  
  427d9b:	inc    ebx
  427d9c:	loopne 0x427df6
  427d9e:	sbb    al,0x8a
  427da0:	mov    ch,0x8c
  427da2:	scas   al,BYTE PTR es:[edi]
  427da3:	out    0x8,eax
  427da5:	aam    0x41
  427da7:	ss lahf 
  427da9:	push   ebp
  427daa:	jg     0x427d76
  427dac:	push   0x6d
  427dae:	sbb    al,0x9a
  427db0:	addr16 in eax,dx
  427db2:	pop    esp
  427db3:	xlat   BYTE PTR ds:[ebx]
  427db4:	repnz imul esp,DWORD PTR [ebp+0x2d],0xffffffe1
  427db9:	popa   
  427dba:	gs jns 0x427da4
  427dbd:	leave  
  427dbe:	lock cdq 
  427dc0:	inc    eax
  427dc1:	xor    eax,0x4af64c39
  427dc6:	test   BYTE PTR [esi+0x32252ae4],bl
  427dcc:	sbb    ebx,DWORD PTR [esp+eiz*2]
  427dcf:	adc    cl,cl
  427dd1:	jle    0x427d7a
  427dd3:	mov    BYTE PTR [ecx],ch
  427dd5:	cmp    DWORD PTR [edi-0x7f4a2bc3],edi
  427ddb:	adc    eax,0xeb4e5c36
  427de0:	call   0x3566:0x7aba9945
  427de7:	mov    dh,0x2f
  427de9:	inc    eax
  427dea:	xor    eax,0x5a85826c
  427def:	popf   
  427df0:	xchg   ecx,eax
  427df1:	dec    ecx
  427df2:	pop    edi
  427df3:	xor    al,0x94
  427df5:	sub    eax,0xea99705b
  427dfa:	add    esp,ebp
  427dfc:	seto   BYTE PTR [esi]
  427dff:	jne    0x427e6b
  427e01:	sub    DWORD PTR [ebp-0xf],esp
  427e04:	sar    BYTE PTR [edi+ecx*2+0x5cd3d600],cl
  427e0b:	mov    cl,0xf9
  427e0d:	sub    dh,BYTE PTR [ecx]
  427e0f:	scas   al,BYTE PTR es:[edi]
  427e10:	mov    ch,0x1
  427e13:	je     0x427e89
  427e15:	lods   al,BYTE PTR ds:[esi]
  427e16:	xchg   bl,ch
  427e18:	pop    ds
  427e19:	hlt    
  427e1a:	cmp    cl,dh
  427e1c:	sub    cl,BYTE PTR [eax+edi*2]
  427e1f:	imul   eax,DWORD PTR [ebx-0x14c3dc42],0xffffffa8
  427e26:	sub    DWORD PTR [esi+0x27],edx
  427e29:	inc    edx
  427e2a:	xchg   edx,eax
  427e2b:	test   al,0x75
  427e2d:	ficom  DWORD PTR [esi]
  427e2f:	ins    BYTE PTR es:[edi],dx
  427e30:	cmp    eax,0xbac807fd
  427e35:	inc    esp
  427e36:	aad    0xd6
  427e38:	out    dx,al
  427e39:	lods   eax,DWORD PTR ds:[esi]
  427e3a:	xor    ebp,0x7a7a4036
  427e40:	test   BYTE PTR [edi],cl
  427e42:	push   0xaeadca3e
  427e47:	retf   0xac8e
  427e4a:	pop    esp
  427e4b:	sti    
  427e4c:	mov    dl,0xde
  427e4e:	pop    esp
  427e4f:	jo     0x427ebc
  427e51:	push   ss
  427e52:	lds    eax,FWORD PTR [edi+0x1ecdc553]
  427e58:	adc    al,0x90
  427e5a:	bound  ebx,QWORD PTR [esi-0x4e]
  427e5d:	ins    BYTE PTR es:[edi],dx
  427e5e:	les    ebx,FWORD PTR [edi-0x71]
  427e61:	dec    eax
  427e62:	mov    BYTE PTR [edi+0x46],bh
  427e65:	shl    esi,cl
  427e67:	or     eax,0xe582618e
  427e6c:	aad    0xde
  427e6e:	jns    0x427ea5
  427e70:	or     eax,0x865ed1ea
  427e75:	push   ds
  427e76:	inc    ebx
  427e77:	jns    0x427e23
  427e79:	shl    DWORD PTR [ecx+0x66fcc9ec],1
  427e7f:	paddq  mm2,QWORD PTR [edi*2+0x1e0a0678]
  427e87:	int3   
  427e88:	call   0xe19a:0x41109453
  427e8f:	inc    edi
  427e90:	jmp    0x427ead
  427e92:	nop
  427e93:	xor    esp,DWORD PTR [eax]
  427e95:	ins    BYTE PTR es:[edi],dx
  427e96:	inc    esp
  427e97:	mov    al,ds:0x3873b9d4
  427e9c:	repz pop es
  427e9e:	inc    ecx
  427e9f:	push   ecx
  427ea0:	pop    ebp
  427ea1:	sbb    eax,0x7d5405ef
  427ea6:	jecxz  0x427e51
  427ea8:	jle    0x427ef8
  427eaa:	xor    bh,ah
  427eac:	mov    ch,0xcc
  427eae:	xchg   ebp,eax
  427eaf:	fidivr WORD PTR [edi+0x4645534c]
  427eb5:	dec    edi
  427eb6:	jns    0x427e83
  427eb8:	xchg   ebx,eax
  427eb9:	js     0x427ebe
  427ebb:	and    ebp,edx
  427ebd:	jno    0x427e7e
  427ebf:	dec    ebp
  427ec0:	stos   DWORD PTR es:[edi],eax
  427ec1:	(bad)  
  427ec2:	xchg   esp,eax
  427ec3:	ss dec edx
  427ec5:	mov    ds:0x7fcb0eba,eax
  427eca:	adc    al,0x46
  427ecc:	scas   eax,DWORD PTR es:[edi]
  427ecd:	dec    edi
  427ece:	or     al,cl
  427ed0:	jbe    0x427e56
  427ed2:	scas   al,BYTE PTR es:[edi]
  427ed3:	jp     0x427e6c
  427ed5:	xor    al,0x6
  427ed7:	sbb    DWORD PTR [edi],ecx
  427ed9:	mov    eax,ds:0xc34d5479
  427ede:	(bad)  
  427edf:	dec    ecx
  427ee0:	sub    ecx,ecx
  427ee2:	cmc    
  427ee3:	and    BYTE PTR [edi+edi*4-0x727ed996],0x29
  427eeb:	pop    ecx
  427eec:	push   eax
  427eed:	dec    edi
  427eee:	jg     0x427ee2
  427ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ef1:	mov    eax,ds:0xed28baf4
  427ef6:	retf   0xf5ca
  427ef9:	cmp    eax,0xe5c82171
  427efe:	nop
  427eff:	xor    cl,BYTE PTR [ebp+0x79854cdc]
  427f05:	aas    
  427f06:	inc    ecx
  427f07:	jg     0x427f22
  427f09:	xchg   DWORD PTR [edx-0x4a],ecx
  427f0c:	push   cs
  427f0d:	shl    edx,1
  427f0f:	clc    
  427f10:	push   0x4a
  427f12:	cmp    esp,edx
  427f14:	dec    ebx
  427f15:	jne    0x427f93
  427f17:	add    BYTE PTR [eax+0x61],dl
  427f1a:	push   esi
  427f1b:	fwait
  427f1c:	jle    0x427f01
  427f1e:	push   ebx
  427f1f:	mov    dh,BYTE PTR [esi-0x2b6af4a1]
  427f25:	inc    ecx
  427f26:	(bad)  
  427f27:	pop    esp
  427f28:	pop    esp
  427f29:	and    DWORD PTR [edx+edi*1],esp
  427f2c:	stos   BYTE PTR es:[edi],al
  427f2d:	cmp    BYTE PTR [ebx],0x9b
  427f30:	sti    
  427f31:	inc    edx
  427f32:	dec    ebx
  427f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f34:	(bad)  
  427f35:	enter  0x86b9,0xce
  427f39:	fsubr  QWORD PTR [eax-0xe]
  427f3c:	push   esi
  427f3d:	mov    BYTE PTR [eax-0x219787cd],dh
  427f43:	push   edx
  427f44:	aaa    
  427f45:	aad    0xd3
  427f47:	push   ds
  427f48:	(bad)  
  427f49:	mov    ch,0x8a
  427f4b:	push   edx
  427f4c:	out    dx,eax
  427f4d:	lods   eax,DWORD PTR ds:[esi]
  427f4e:	clc    
  427f4f:	jb     0x427f18
  427f51:	xchg   BYTE PTR [edx+0x1114b0eb],bh
  427f57:	and    ebp,DWORD PTR [edi]
  427f59:	jecxz  0x427f44
  427f5b:	xor    BYTE PTR [edi+0x76de432e],dh
  427f61:	int    0xc5
  427f63:	sysenter 
  427f65:	cmp    ebp,edi
  427f67:	mov    edx,0xddea5e00
  427f6c:	call   0x7fc403d6
  427f71:	in     eax,dx
  427f72:	in     al,dx
  427f73:	icebp  
  427f74:	mov    edi,0xbd240cc
  427f79:	xchg   ecx,eax
  427f7a:	je     0x427f2f
  427f7c:	and    dl,BYTE PTR [esi+0x7042696c]
  427f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f83:	cmp    DWORD PTR [eax-0x5ef109a5],ebx
  427f89:	push   eax
  427f8a:	xchg   edi,eax
  427f8b:	scas   eax,DWORD PTR es:[edi]
  427f8c:	in     al,dx
  427f8d:	jge    0x427f5e
  427f8f:	add    DWORD PTR [ebp-0x6a61c45d],0x9f2ebe5c
  427f99:	outs   dx,DWORD PTR ds:[esi]
  427f9a:	call   0x86e6:0xfb0fc83f
  427fa1:	ins    BYTE PTR es:[edi],dx
  427fa2:	mov    dl,0x3a
  427fa4:	adc    eax,0xe477c68b
  427fa9:	mov    dh,BYTE PTR [edi]
  427fab:	adc    bh,BYTE PTR [ecx+0xc]
  427fae:	sub    al,0x97
  427fb0:	js     0x428022
  427fb2:	or     al,0x27
  427fb4:	mov    eax,ds:0xb9f9c316
  427fb9:	jp     0x427fa4
  427fbb:	jg     0x427f9c
  427fbd:	jno    0x427f41
  427fbf:	mov    esp,esp
  427fc1:	cmc    
  427fc2:	pusha  
  427fc3:	int    0xa9
  427fc5:	aaa    
  427fc6:	popa   
  427fc7:	mov    edi,0x6707986d
  427fcc:	(bad)  [ebx]
  427fce:	push   esi
  427fcf:	lods   al,BYTE PTR ds:[esi]
  427fd0:	dec    eax
  427fd1:	cwde   
  427fd2:	addr16 aas 
  427fd4:	push   ebx
  427fd5:	int3   
  427fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fd7:	mov    ds:0x2588c321,eax
  427fdc:	adc    BYTE PTR [edi+esi*8+0x6567c3f0],0x50
  427fe4:	mov    dl,0xe0
  427fe6:	shr    cl,1
  427fe8:	ret    
  427fe9:	sbb    eax,0x13936c6e
  427fee:	xchg   DWORD PTR [edi],esi
  427ff0:	retf   0x4392
  427ff3:	push   ebp
  427ff4:	and    ebp,DWORD PTR [edx+0x60]
  427ff7:	sub    ebp,DWORD PTR [edi+0x1c039d4]
  427ffd:	aas    
  427ffe:	mov    BYTE PTR [ebx],dh
  428000:	or     al,0xfc
  428002:	jl     0x427fd5
  428004:	xchg   esi,eax
  428005:	minps  xmm6,XMMWORD PTR [ebx]
  428008:	inc    esi
  428009:	or     DWORD PTR [ebx-0x32fe2ee4],esi
  42800f:	sbb    BYTE PTR [edx+0x3a],bh
  428012:	dec    edx
  428013:	ins    DWORD PTR es:[edi],dx
  428014:	jl     0x427f9b
  428016:	adc    DWORD PTR [edi+0x61],0xffffffaa
  42801a:	inc    esi
  42801b:	inc    BYTE PTR [eax-0x6a79d75]
  428021:	test   eax,0xfa7c8f06
  428026:	jl     0x427fc5
  428028:	shl    DWORD PTR [ebp-0x28e95d5f],1
  42802e:	cmc    
  42802f:	pop    esi
  428030:	test   eax,0xb71b07e
  428035:	inc    ecx
  428036:	loopne 0x4280b3
  428038:	mov    edi,eax
  42803a:	das    
  42803b:	pop    esp
  42803c:	(bad)  
  42803d:	cmp    ah,BYTE PTR [ebp-0x50]
  428040:	sub    eax,0xfea2b554
  428045:	mov    dl,0x6d
  428047:	rol    DWORD PTR [edi],0xab
  42804a:	mov    edx,0xe5038aa9
  42804f:	xrelease mov DWORD PTR [ecx+0x4c50b4be],eax
  428056:	sbb    esi,DWORD PTR [esi]
  428058:	xchg   esp,eax
  428059:	add    eax,0xfde09c3c
  42805e:	fsub   st(6),st
  428060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428061:	xchg   edi,eax
  428062:	cs out dx,al
  428064:	imul   edx,DWORD PTR [edi-0x7b6f50cb],0x569fb712
  42806e:	and    eax,0x9061b6d4
  428073:	loope  0x428024
  428075:	pop    es
  428076:	sub    al,0x69
  428078:	cmp    al,0x58
  42807a:	out    0x2b,eax
  42807c:	sti    
  42807d:	hlt    
  42807e:	inc    ebp
  42807f:	jmp    0xe0a3:0x4f6539a
  428086:	rol    DWORD PTR [esi-0x9],0x78
  42808a:	int    0xfd
  42808c:	mov    edx,0x89ba8e53
  428091:	adc    al,0x7
  428093:	fldenv [esp+esi*4]
  428096:	mov    WORD PTR [ecx+0x2a],cs
  428099:	add    esi,DWORD PTR [edi+ebx*2]
  42809c:	sbb    al,al
  42809e:	test   ecx,0xc9952dd0
  4280a4:	and    al,0x36
  4280a6:	push   0xaf576379
  4280ab:	xchg   ebx,eax
  4280ac:	stos   BYTE PTR es:[edi],al
  4280ad:	sub    eax,0x62fb296d
  4280b2:	xchg   ebp,eax
  4280b3:	cli    
  4280b4:	sub    bl,bh
  4280b6:	jae    0x42808f
  4280b8:	repnz push edx
  4280ba:	xor    DWORD PTR [ebx],esp
  4280bc:	mov    ecx,0x43df4b57
  4280c1:	into   
  4280c2:	test   DWORD PTR [ecx-0x4e6b53de],esi
  4280c8:	int    0x88
  4280ca:	adc    edi,DWORD PTR [ebx-0x303afe90]
  4280d0:	push   ebx
  4280d1:	lods   eax,DWORD PTR ds:[esi]
  4280d2:	mov    bl,BYTE PTR [ebp+0x3e]
  4280d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280d6:	add    edi,DWORD PTR [edi-0x8]
  4280d9:	int    0x9d
  4280db:	push   ecx
  4280dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280dd:	xchg   ebp,eax
  4280de:	cdq    
  4280df:	dec    edx
  4280e0:	pop    esp
  4280e2:	xor    esp,DWORD PTR [ebx+0x4d]
  4280e5:	int3   
  4280e6:	push   ecx
  4280e7:	popa   
  4280e8:	bound  ebp,QWORD PTR [edx+0x437e358c]
  4280ee:	pop    edi
  4280ef:	adc    al,BYTE PTR [ecx]
  4280f1:	sbb    ch,BYTE PTR [edx+0xdc2a127]
  4280f7:	int    0xc7
  4280f9:	jne    0x42809d
  4280fb:	push   0x19
  4280fd:	mov    ebx,0xfaa959a2
  428102:	jl     0x428168
  428104:	mov    edi,0x82f6340a
  428109:	dec    ebp
  42810a:	push   esi
  42810b:	stc    
  42810c:	shl    BYTE PTR gs:[edx-0x13a5b41e],cl
  428113:	and    cl,dh
  428115:	sub    eax,edx
  428117:	lds    eax,FWORD PTR [ebx+0x77]
  42811a:	loop   0x4280c6
  42811c:	cmp    al,0xd
  42811e:	xlat   BYTE PTR ds:[ebx]
  42811f:	fmul   QWORD PTR [ebp+eiz*4+0x1]
  428123:	xchg   esi,eax
  428124:	cmp    al,0x8e
  428126:	cmp    DWORD PTR [edx-0x31],edx
  428129:	push   esi
  42812a:	popf   
  42812b:	dec    ebp
  42812c:	mov    ecx,0x456ddabc
  428131:	pop    esp
  428132:	push   0xffffffda
  428134:	push   eax
  428135:	ins    DWORD PTR es:[edi],dx
  428136:	adc    ecx,DWORD PTR [ebp+0x5f]
  428139:	add    DWORD PTR ds:0x3f541824,esi
  42813f:	rol    DWORD PTR [edi-0x77],cl
  428142:	(bad)  
  428144:	sbb    DWORD PTR [edx],ecx
  428146:	sahf   
  428147:	dec    ebx
  428148:	(bad)  [edi+0x63d5472f]
  42814e:	xchg   edi,eax
  42814f:	int3   
  428150:	xor    DWORD PTR [ebx-0x44db9181],eax
  428156:	or     esi,DWORD PTR [edi+eiz*2]
  428159:	inc    ecx
  42815a:	lahf   
  42815b:	mov    dl,0x39
  42815d:	int    0x46
  42815f:	sub    ecx,ebx
  428161:	test   bl,bh
  428163:	and    dh,BYTE PTR [esi+0x1ffa456]
  428169:	or     al,0x9b
  42816b:	mov    BYTE PTR [edx+0x6c],dh
  42816e:	sahf   
  42816f:	pop    ds
  428170:	stos   BYTE PTR es:[edi],al
  428171:	ss rol esp,cl
  428174:	fsub   DWORD PTR [ebx+0x2f]
  428177:	or     eax,DWORD PTR [eax+0x3c]
  42817a:	xor    BYTE PTR [ebp-0x31],cl
  42817d:	xor    BYTE PTR [esi+0x27],0xfd
  428181:	test   BYTE PTR [eax+0x52],ah
  428184:	loopne 0x428180
  428186:	cdq    
  428187:	dec    eax
  428188:	push   cs
  428189:	js     0x4281be
  42818b:	jmp    0x10a:0x1f6fd817
  428192:	or     DWORD PTR [ecx],esp
  428194:	out    dx,al
  428195:	mov    ebx,0xf50b39b4
  42819a:	sub    bh,bh
  42819c:	shl    BYTE PTR [esi+0x37513477],1
  4281a2:	stos   BYTE PTR es:[edi],al
  4281a3:	pop    ds
  4281a4:	xor    bl,BYTE PTR [edi]
  4281a6:	push   ebp
  4281a7:	cmovnp esp,DWORD PTR [ebp+eax*2+0x49]
  4281ac:	lea    edx,[ecx+0x5]
  4281af:	in     al,dx
  4281b0:	(bad)  
  4281b1:	cmc    
  4281b2:	std    
  4281b3:	mov    dl,0xa5
  4281b5:	nop
  4281b6:	jb     0x4281c2
  4281b8:	call   0x34dd61de
  4281bd:	sti    
  4281be:	mov    es,WORD PTR gs:[eax-0x594c5332]
  4281c5:	xchg   esi,eax
  4281c6:	xchg   BYTE PTR [ecx+0x62],al
  4281c9:	cli    
  4281ca:	outs   dx,BYTE PTR ds:[esi]
  4281cb:	hlt    
  4281cc:	add    eax,0x27d34dd1
  4281d1:	xor    al,0x16
  4281d3:	icebp  
  4281d4:	sub    edi,DWORD PTR [ecx+0x22]
  4281d7:	fsub   QWORD PTR [eax]
  4281d9:	dec    ecx
  4281da:	mov    ds,edi
  4281dc:	push   ss
  4281dd:	jb     0x42825b
  4281df:	cs ja  0x42819c
  4281e2:	dec    ecx
  4281e3:	or     DWORD PTR [ebx],ebp
  4281e5:	mov    edx,0x8b0e2567
  4281ea:	push   esi
  4281eb:	popf   
  4281ec:	arpl   WORD PTR [eax+0x76],bp
  4281ef:	push   ss
  4281f0:	inc    esp
  4281f1:	std    
  4281f2:	xchg   BYTE PTR [eax],ch
  4281f4:	mov    edi,0x87828098
  4281f9:	into   
  4281fa:	push   cs
  4281fb:	inc    ebx
  4281fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281fd:	xchg   esi,eax
  4281fe:	add    eax,0x7898a094
  428203:	inc    esp
  428204:	fwait
  428205:	imul   al
  428207:	pop    eax
  428208:	and    bh,bh
  42820a:	in     eax,dx
  42820b:	push   ebx
  42820c:	test   al,0xe7
  42820e:	mov    eax,0xb69124de
  428213:	or     BYTE PTR [eax+0x4e85736e],0x35
  42821a:	out    dx,eax
  42821b:	pop    ss
  42821c:	push   eax
  42821d:	sar    DWORD PTR [edx+edi*4],0x29
  428221:	xchg   esp,eax
  428222:	ds mov BYTE PTR fs:[ebp+0x6e],ah
  428227:	out    dx,eax
  428228:	les    eax,FWORD PTR [ecx+0x2f]
  42822b:	idiv   DWORD PTR [edx+0x50]
  42822e:	mov    al,0x46
  428230:	and    ebx,DWORD PTR [ebx+0x67]
  428233:	dec    edi
  428234:	push   0xffffffcd
  428236:	push   ebx
  428237:	popf   
  428238:	mov    cs,WORD PTR [eax-0x4d0d1238]
  42823e:	mov    esp,0x943e0e42
  428243:	add    esi,ebp
  428245:	mov    dh,0xfe
  428247:	fnstenv [esi+0x4b]
  42824a:	fld    st(3)
  42824c:	dec    eax
  42824d:	cwde   
  42824e:	leave  
  42824f:	push   esp
  428250:	inc    esp
  428251:	aaa    
  428252:	test   al,0xb5
  428254:	imul   ebp,DWORD PTR [edi+esi*2-0x78c2fa5],0x7e
  42825c:	mov    WORD PTR [ebx+ebx*1+0x63f7e46f],ss
  428263:	sub    DWORD PTR [eax],edx
  428265:	xor    eax,0xecba2c8
  42826a:	lods   eax,DWORD PTR ds:[esi]
  42826b:	dec    ebx
  42826c:	aam    0x35
  42826e:	nop
  42826f:	add    esi,DWORD PTR [ecx]
  428271:	push   0x7da9e6a5
  428276:	push   edi
  428277:	call   FWORD PTR [ecx-0x37a68778]
  42827d:	adc    cl,BYTE PTR [edi-0x6b]
  428280:	sub    BYTE PTR [esi+ecx*1],dh
  428283:	push   edx
  428284:	xor    ebp,DWORD PTR [edx-0x4a]
  428287:	add    ah,BYTE PTR [edx+ebx*4]
  42828a:	addr16 loopne 0x4282c1
  42828d:	lods   al,BYTE PTR ds:[esi]
  42828e:	scas   eax,DWORD PTR es:[edi]
  42828f:	xor    ecx,DWORD PTR [edi]
  428291:	dec    edi
  428292:	cmc    
  428293:	dec    ecx
  428294:	mov    dl,0xb3
  428296:	sub    DWORD PTR [esi+0x2c],ecx
  428299:	lods   eax,DWORD PTR ds:[esi]
  42829a:	xchg   esi,eax
  42829b:	les    ecx,FWORD PTR [ecx+0x67]
  42829e:	fistp  WORD PTR [eax+0x7d]
  4282a1:	iret   
  4282a2:	sbb    DWORD PTR [ecx+edi*2],ecx
  4282a5:	mov    WORD PTR [esi],fs
  4282a7:	jp     0x4282ff
  4282a9:	cmc    
  4282aa:	ds sub al,0x58
  4282ad:	mov    edx,0x75f81334
  4282b2:	jmp    0x428324
  4282b4:	loop   0x428286
  4282b6:	add    al,0x90
  4282b8:	jb     0x4282ff
  4282ba:	adc    ebx,esp
  4282bc:	nop
  4282bd:	call   0x9393:0x1fa69b65
  4282c4:	sbb    eax,0x8b80af1e
  4282c9:	fmul   DWORD PTR ds:0xf82a4612
  4282cf:	mov    ecx,0x950cb613
  4282d4:	int3   
  4282d5:	mov    bh,0x74
  4282d7:	push   edi
  4282d8:	xlat   BYTE PTR ds:[ebx]
  4282d9:	xor    edi,edi
  4282db:	mov    bl,0x92
  4282dd:	pop    ebp
  4282de:	inc    esp
  4282df:	jg     0x4282c3
  4282e1:	adc    DWORD PTR [esi],edx
  4282e3:	push   eax
  4282e4:	loop   0x428362
  4282e6:	adc    ch,cl
  4282e8:	pop    ds
  4282e9:	cmp    ah,bl
  4282eb:	mov    ah,0xd6
  4282ed:	jmp    0x4282b6
  4282ef:	pop    ebp
  4282f0:	sbb    eax,0xb2ec5618
  4282f5:	ins    DWORD PTR es:[edi],dx
  4282f6:	(bad)  
  4282f7:	call   0xec48b857
  4282fc:	(bad)  
  4282fe:	pop    ss
  4282ff:	loop   0x4282a3
  428301:	in     al,0xeb
  428303:	hlt    
  428304:	mov    bh,0xf5
  428306:	mov    al,ds:0xc3bc5ce8
  42830b:	and    al,0xab
  42830d:	adc    eax,0xc4bfdde
  428312:	retf   0x5b1e
  428315:	fmul   DWORD PTR [esp+edi*8+0x2ee6cafe]
  42831c:	mov    bh,0x4c
  42831e:	sti    
  42831f:	mov    eax,0xa4bcebb1
  428324:	mov    eax,ds:0x1c4af5ad
  428329:	cmc    
  42832a:	mov    al,0x88
  42832c:	cmp    BYTE PTR ss:[edx+edi*1],dh
  428330:	aad    0xbb
  428332:	lods   eax,DWORD PTR ds:[esi]
  428333:	mov    fs,WORD PTR [edi]
  428335:	mov    esp,0x9230deeb
  42833a:	xlat   BYTE PTR ds:[ebx]
  42833b:	jb     0x428365
  42833d:	jmp    0x80ebded3
  428342:	sub    dh,BYTE PTR [ecx+0x2e]
  428345:	ds dec cx
  428348:	push   eax
  428349:	pusha  
  42834a:	xor    BYTE PTR [esi+0x4db3369e],dh
  428350:	xchg   ecx,eax
  428351:	dec    esi
  428352:	sbb    DWORD PTR [ecx+edi*1-0x2990995],ecx
  428359:	shr    dl,cl
  42835b:	mov    ebp,0x4169d4f7
  428360:	jbe    0x4282fa
  428362:	xor    BYTE PTR [ecx],0x34
  428365:	adc    DWORD PTR ds:0x3b864db6,esi
  42836b:	mov    eax,0xc57ae6b0
  428370:	adc    al,0x83
  428372:	clc    
  428373:	sti    
  428374:	pop    esi
  428375:	stc    
  428376:	(bad)  
  428377:	jns    0x428313
  428379:	adc    esi,0x9f226e34
  42837f:	loope  0x4283d1
  428381:	sub    BYTE PTR [edx],ah
  428383:	fcomi  st,st(5)
  428385:	cmp    dl,BYTE PTR [edi-0x5d8cf04d]
  42838b:	jmp    0xbd80:0x5312fedd
  428392:	ror    BYTE PTR [esi+0x197cd385],0xd9
  428399:	loope  0x428357
  42839b:	dec    ebx
  42839c:	or     esi,edi
  42839e:	fbld   TBYTE PTR [ebx+0x66]
  4283a1:	sbb    BYTE PTR [edi+0x7b72f96],0xc5
  4283a8:	gs ret 
  4283aa:	scas   eax,DWORD PTR es:[edi]
  4283ab:	inc    esp
  4283ac:	int    0x10
  4283ae:	into   
  4283af:	(bad)  
  4283b0:	mov    WORD PTR [ecx-0x527c98a6],?
  4283b6:	fistp  WORD PTR [ebx]
  4283b8:	mov    eax,0xdd90bb91
  4283bd:	rcr    eax,0x70
  4283c0:	jbe    0x428408
  4283c2:	push   cs
  4283c3:	pop    esi
  4283c4:	cld    
  4283c5:	jbe    0x428441
  4283c7:	add    esi,DWORD PTR [edx-0x4a]
  4283ca:	imul   edx,DWORD PTR [edx-0x79e3fad6],0x314dc41d
  4283d4:	mov    edx,0xaacf4581
  4283d9:	cmc    
  4283da:	clc    
  4283db:	adc    edi,ebx
  4283dd:	cwde   
  4283de:	cwde   
  4283df:	xchg   ecx,eax
  4283e0:	lahf   
  4283e1:	arpl   WORD PTR [ebp-0x18],cx
  4283e4:	or     ch,bh
  4283e6:	in     eax,0xf9
  4283e8:	xchg   BYTE PTR [eax-0x352832d3],dh
  4283ee:	xchg   edi,eax
  4283ef:	sbb    DWORD PTR [edi+0x33cebead],0x5118aad5
  4283f9:	call   0x9c34:0xf773511e
  428400:	adc    eax,0xbae103b6
  428405:	inc    eax
  428406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428407:	cmp    al,0x8c
  428409:	xor    eax,0xb629bb98
  42840e:	jmp    0x428474
  428410:	pop    es
  428411:	mov    esi,DWORD PTR [esi-0x40]
  428414:	test   al,0x1e
  428416:	mov    ch,0x51
  428418:	arpl   WORD PTR [eax+ebx*1],sp
  42841b:	and    ah,bl
  42841d:	lds    ecx,FWORD PTR [edx+0x3d]
  428420:	in     al,0x5c
  428422:	ja     0x428496
  428424:	add    eax,0x328ad630
  428429:	das    
  42842a:	inc    esp
  42842b:	rcr    BYTE PTR [edx+0x1d],1
  42842e:	fstp   DWORD PTR [ebp+ecx*8-0x71]
  428432:	pop    ebx
  428433:	xor    bl,bl
  428435:	add    bh,BYTE PTR [ecx+0x22]
  428438:	test   bl,dh
  42843a:	mov    esp,DWORD PTR [edx-0x1a33040e]
  428440:	inc    edi
  428441:	out    0xcb,eax
  428443:	aas    
  428444:	cmp    al,0xd9
  428446:	out    dx,al
  428447:	or     eax,0xd38828e2
  42844c:	inc    edx
  42844d:	pushf  
  42844e:	fs inc edx
  428450:	pop    ebp
  428451:	cmp    ebx,ebx
  428453:	sti    
  428454:	clc    
  428455:	lods   eax,DWORD PTR ds:[esi]
  428456:	not    esp
  428458:	lock mov ds:0x38e91058,al
  42845e:	xchg   esi,eax
  42845f:	fwait
  428460:	(bad)  
  428461:	jg     0x428418
  428463:	call   DWORD PTR [ebx]
  428465:	mov    dh,0x6b
  428467:	aad    0x1e
  428469:	xor    DWORD PTR [esi+0x3f25bcbd],edi
  42846f:	mov    eax,0x2591c6b2
  428474:	mov    ecx,0x76f0f5f3
  428479:	out    0x19,al
  42847b:	inc    esp
  42847c:	pop    es
  42847d:	call   0xf5a7:0x92bc8bb6
  428484:	pop    ebx
  428485:	clc    
  428486:	enter  0x53dc,0x4c
  42848a:	push   edi
  42848b:	mov    ch,BYTE PTR [ecx-0x6b1809d4]
  428491:	nop
  428492:	js     0x4284a1
  428494:	mov    esp,0xc834738a
  428499:	mov    al,cl
  42849b:	test   al,0xb3
  42849d:	dec    edx
  42849e:	sete   BYTE PTR [edx]
  4284a1:	mov    eax,0xa1a0317c
  4284a6:	stc    
  4284a7:	cmp    BYTE PTR [eax+0x53],dl
  4284aa:	inc    ecx
  4284ab:	sub    DWORD PTR [ecx+0x573072b3],ebp
  4284b1:	hlt    
  4284b2:	lea    esi,[edi+0x603643fe]
  4284b8:	pop    ds
  4284b9:	xlat   BYTE PTR ds:[ebx]
  4284ba:	mov    ecx,0x73f59306
  4284bf:	xchg   ebx,eax
  4284c0:	mov    edx,DWORD PTR [edi]
  4284c2:	mov    ah,0x93
  4284c4:	ss (bad) 
  4284c8:	(bad)  
  4284c9:	jmp    FWORD PTR [eax+0x6d]
  4284cc:	test   al,0xa0
  4284ce:	pop    ebp
  4284cf:	arpl   WORD PTR [ebp+0x71],dx
  4284d2:	imul   edi,DWORD PTR [eax-0x3b],0xd43f8e5c
  4284d9:	std    
  4284da:	and    BYTE PTR [edi-0x16ac0163],0xaf
  4284e1:	aaa    
  4284e2:	mov    bh,0x3f
  4284e4:	(bad)  
  4284e5:	lahf   
  4284e6:	mov    ch,0xc6
  4284e8:	jl     0x428498
  4284ea:	xor    bh,BYTE PTR [edi-0x4c5eceb4]
  4284f0:	mov    edi,0xf3ca59bd
  4284f5:	ins    DWORD PTR es:[edi],dx
  4284f6:	mov    al,ds:0x644936ef
  4284fb:	retf   
  4284fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284fd:	jo     0x428508
  4284ff:	jl     0x42852a
  428501:	mov    eax,0xb53edc3e
  428506:	sar    cl,cl
  428508:	jl     0x428564
  42850a:	push   ss
  42850b:	pushf  
  42850c:	in     al,dx
  42850d:	int3   
  42850e:	fwait
  42850f:	jb     0x4284a1
  428511:	dec    ecx
  428512:	cmp    dl,BYTE PTR [edx]
  428514:	pop    edi
  428515:	xor    ch,BYTE PTR [esi+0x29]
  428518:	pusha  
  428519:	retf   
  42851a:	cdq    
  42851b:	ror    BYTE PTR [edi+0x33],cl
  42851e:	sub    dh,BYTE PTR [edi+0x56e9f186]
  428524:	mov    ebx,0x2fd24b43
  428529:	daa    
  42852a:	(bad)  
  42852b:	sar    BYTE PTR [edi-0x32],cl
  42852e:	pop    esp
  42852f:	sub    DWORD PTR [ebx],eax
  428531:	xor    dl,bl
  428533:	xchg   esp,eax
  428534:	cmp    al,0x1
  428536:	cmp    bh,BYTE PTR [ebx+0x46931cec]
  42853c:	adc    dl,BYTE PTR [edx]
  42853e:	push   ds
  42853f:	es das 
  428541:	icebp  
  428542:	ret    0xa7e7
  428545:	lds    ebx,FWORD PTR [ecx-0x41d03cc]
  42854b:	ins    DWORD PTR es:[edi],dx
  42854c:	aaa    
  42854d:	aad    0xb9
  42854f:	repz push ss
  428551:	or     esi,DWORD PTR [edi+0x56]
  428554:	jmp    0xd7ebabb2
  428559:	ja     0x4285be
  42855b:	mov    al,ds:0x94dca950
  428560:	mov    eax,0x3ecacf44
  428565:	ins    BYTE PTR es:[edi],dx
  428566:	and    BYTE PTR [edx-0x4a],dh
  428569:	rcr    BYTE PTR [eax-0x74],0x9b
  42856d:	pop    ebx
  42856e:	pop    ecx
  42856f:	sub    al,0x7f
  428571:	pop    es
  428572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428573:	je     0x4285bf
  428575:	aad    0x8e
  428577:	add    DWORD PTR [edi+esi*8-0x14],ebx
  42857b:	add    eax,0xe5d785ae
  428580:	stos   BYTE PTR es:[edi],al
  428581:	out    dx,al
  428582:	test   al,0x88
  428584:	pop    esp
  428585:	dec    edi
  428586:	popf   
  428587:	mov    ecx,eax
  428589:	inc    eax
  42858a:	out    dx,eax
  42858b:	push   0x49
  42858d:	lea    ecx,[ecx-0xe32ab05]
  428593:	and    eax,0x546a14ee
  428598:	aad    0xa
  42859a:	out    dx,eax
  42859b:	fwait
  42859c:	mov    ebx,0xc65658ec
  4285a1:	mov    DWORD PTR [eax-0x7678b5ef],esi
  4285a7:	mov    al,0x8c
  4285a9:	dec    edi
  4285aa:	push   ebx
  4285ab:	ins    DWORD PTR es:[edi],dx
  4285ac:	pop    es
  4285ad:	sar    BYTE PTR [edx+0x3a],0x9c
  4285b1:	mov    ds:0x2e42286c,al
  4285b6:	mov    dl,0xae
  4285b8:	pop    ecx
  4285ba:	lods   al,BYTE PTR ds:[esi]
  4285bb:	or     ch,BYTE PTR [esi-0x66710703]
  4285c1:	sub    dl,al
  4285c3:	fucom  st(2)
  4285c5:	dec    esi
  4285c6:	jle    0x4285a2
  4285c8:	dec    ecx
  4285c9:	nop
  4285ca:	xchg   esi,eax
  4285cb:	test   eax,0x65212ee5
  4285d0:	inc    ebx
  4285d1:	xlat   BYTE PTR ds:[ebx]
  4285d2:	mov    dl,0x70
  4285d4:	and    cl,al
  4285d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285d7:	(bad)  
  4285d8:	aas    
  4285d9:	push   0xffffffad
  4285db:	dec    ebx
  4285dc:	mov    esp,0x59ff23d7
  4285e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285e2:	sbb    ah,BYTE PTR [ebx-0x3]
  4285e5:	fisubr DWORD PTR ds:0xbca90b17
  4285eb:	jae    0x42863e
  4285ed:	test   al,0x7b
  4285ef:	inc    ebx
  4285f0:	mov    eax,ds:0x7fe59605
  4285f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285f6:	mov    ebp,0xfc437906
  4285fb:	jp     0x4285e8
  4285fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285fe:	pop    ds
  4285ff:	xchg   ebp,eax
  428600:	sahf   
  428601:	mov    cl,0x75
  428603:	cdq    
  428604:	sub    ebp,DWORD PTR [eax-0x50034dfb]
  42860a:	inc    ebp
  42860b:	cmp    al,0xf7
  42860d:	bnd jbe 0x428603
  428610:	cmp    al,0xa3
  428612:	jp     0x42863d
  428614:	pop    ecx
  428615:	ins    DWORD PTR es:[edi],dx
  428616:	fst    QWORD PTR [ecx+0x5b]
  428619:	mov    ebp,0xd5bfad2a
  42861e:	je     0x428663
  428620:	retf   0xbe6e
  428623:	cld    
  428624:	cwde   
  428625:	pop    esi
  428626:	js     0x428621
  428628:	int    0x7c
  42862a:	call   0x3dffa18d
  42862f:	mov    ecx,0xe19b5920
  428634:	push   ds
  428635:	(bad)  
  428636:	call   FWORD PTR [esi+0x5426eb99]
  42863c:	sub    ch,BYTE PTR [edx-0x70f62274]
  428642:	gs pop ss
  428644:	sbb    ebx,edx
  428646:	push   eax
  428647:	or     DWORD PTR [eax],0xffffff87
  42864a:	aas    
  42864b:	ret    0xef2d
  42864e:	ss jmp 0x4286a2
  428651:	das    
  428652:	pushf  
  428653:	add    ebp,DWORD PTR ds:0x15ee41aa
  428659:	mov    eax,ds:0x5a8daf25
  42865e:	fstp   TBYTE PTR [eax+0x175cfa9b]
  428664:	add    DWORD PTR [eax-0x17],edx
  428667:	aam    0x64
  428669:	js     0x428604
  42866b:	pop    esp
  42866c:	mov    ebp,0xcd0ca600
  428671:	jg     0x4286d6
  428673:	mov    ds:0xe329d385,al
  428678:	mov    al,ds:0xf8f98b74
  42867d:	fist   WORD PTR [edx+0x47]
  428680:	int3   
  428681:	in     al,dx
  428682:	ja     0x4286c1
  428684:	adc    al,0xfa
  428686:	xchg   ebx,eax
  428687:	dec    eax
  428688:	leave  
  428689:	pusha  
  42868a:	or     cl,BYTE PTR [edi]
  42868c:	test   al,0x85
  42868e:	lock inc ebp
  428690:	mov    ecx,0xb13bb713
  428695:	out    0xf5,eax
  428697:	jmp    0x31b1:0x3281f1e0
  42869e:	mov    ecx,?
  4286a0:	pop    esi
  4286a1:	jl     0x428688
  4286a3:	popf   
  4286a4:	psubd  mm5,QWORD PTR [edi-0x6b6a17ac]
  4286ab:	add    eax,0xb6b57bc3
  4286b0:	jmp    0x907e:0xd2a92e6f
  4286b7:	and    ah,0x3b
  4286ba:	jl     0x428739
  4286bc:	inc    edx
  4286bd:	sar    BYTE PTR [esi+eiz*8-0x1a4ff961],1
  4286c4:	test   al,0x6f
  4286c6:	xor    eax,0x88d7da76
  4286cb:	xor    al,0xaa
  4286cd:	adc    eax,0x7d2de55d
  4286d2:	push   cs
  4286d3:	fist   WORD PTR [ebx]
  4286d5:	int    0xea
  4286d7:	repz inc esi
  4286d9:	ss mov cl,0x54
  4286dc:	inc    edx
  4286dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286de:	mov    esp,0xd4219205
  4286e3:	adc    esp,DWORD PTR [ebx+0x47c0d648]
  4286e9:	or     eax,0x56074b79
  4286ee:	add    BYTE PTR [esi-0x4d],bl
  4286f1:	or     DWORD PTR [esi],eax
  4286f3:	aam    0x85
  4286f5:	imul   ebp,DWORD PTR [eax+0x5],0xffffffa0
  4286f9:	inc    eax
  4286fa:	dec    DWORD PTR [ebp-0x60]
  4286fd:	(bad)  [edi-0x16c4252]
  428703:	shr    BYTE PTR [eax-0x4e6052bf],1
  428709:	sahf   
  42870a:	ins    BYTE PTR es:[edi],dx
  42870b:	popa   
  42870c:	sbb    eax,0x1b6dd653
  428711:	cmc    
  428712:	and    al,0xfc
  428714:	and    dl,bl
  428716:	inc    esi
  428717:	ins    DWORD PTR es:[edi],dx
  428718:	mov    ah,0x31
  42871a:	leave  
  42871b:	mov    ebp,0x93352595
  428720:	icebp  
  428721:	cld    
  428722:	adc    BYTE PTR [eax],0x6a
  428725:	(bad)  
  428726:	jns    0x428750
  428728:	pusha  
  428729:	sahf   
  42872a:	push   edi
  42872b:	nop
  42872c:	imul   ebp,DWORD PTR [edx-0x22],0x12
  428730:	xor    eax,0x9155767d
  428735:	push   ebp
  428736:	cld    
  428737:	data16 or al,0xea
  42873a:	dec    ecx
  42873b:	pop    ecx
  42873c:	push   edx
  42873d:	mov    gs,WORD PTR [esi-0x6374344]
  428743:	(bad)  
  428744:	mov    esp,0x47cd9442
  428749:	ds je  0x4286eb
  42874c:	dec    ecx
  42874d:	scas   eax,DWORD PTR es:[edi]
  42874e:	dec    eax
  42874f:	mov    ebx,0xf534e448
  428754:	sbb    BYTE PTR [ecx+esi*8+0x0],cl
  428758:	in     al,dx
  428759:	fdivr  QWORD PTR [ebx-0x42]
  42875c:	and    ebx,DWORD PTR [edx+0x4b]
  42875f:	inc    edx
  428760:	adc    al,0xad
  428762:	mov    dl,0xe3
  428764:	cli    
  428765:	clc    
  428766:	or     eax,0x152672d3
  42876b:	popa   
  42876c:	sub    eax,0x16de7f72
  428771:	out    0xd8,al
  428773:	mov    ah,al
  428775:	mov    ds:0xee42cb05,al
  42877a:	inc    ebp
  42877b:	adc    al,0xca
  42877d:	pop    edx
  42877e:	stos   BYTE PTR es:[edi],al
  42877f:	dec    ebp
  428780:	ds fwait
  428782:	inc    esp
  428783:	xchg   ebx,eax
  428784:	or     al,0xf1
  428786:	test   eax,0x58c68bf5
  42878b:	leave  
  42878c:	cmp    DWORD PTR [edx+eax*8],ebp
  42878f:	rcl    DWORD PTR [esi],0x5a
  428792:	fsubr  DWORD PTR ds:0x4ad0733
  428798:	into   
  428799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42879a:	scas   al,BYTE PTR es:[edi]
  42879b:	in     eax,dx
  42879c:	jmp    0xaf7b:0xdd1e9034
  4287a3:	ficom  DWORD PTR [ebx]
  4287a5:	loop   0x4287d9
  4287a7:	(bad)  
  4287a8:	mov    ebp,0x6317054d
  4287ad:	leave  
  4287ae:	pop    ss
  4287af:	aas    
  4287b0:	loopne 0x428797
  4287b2:	jb     0x42879d
  4287b4:	xchg   esp,eax
  4287b5:	pop    ebp
  4287b6:	cli    
  4287b7:	cdq    
  4287b8:	imul   esi,DWORD PTR [edx],0xffffffd2
  4287bb:	leave  
  4287bc:	mov    al,ds:0xefc6d45f
  4287c1:	mov    al,0x3a
  4287c3:	aam    0x2
  4287c5:	rcr    BYTE PTR [edi+0xe],1
  4287c8:	add    al,0xe7
  4287ca:	(bad)  
  4287cb:	dec    edi
  4287cc:	pusha  
  4287cd:	and    edi,esp
  4287cf:	xchg   ecx,eax
  4287d0:	or     edi,DWORD PTR [esi]
  4287d2:	les    eax,FWORD PTR [ebx+0x77]
  4287d5:	xchg   ebp,esi
  4287d7:	pop    DWORD PTR [ebx+0x60]
  4287da:	jne    0x428774
  4287dc:	call   DWORD PTR [ebp-0x22d855e7]
  4287e2:	sbb    edx,DWORD PTR [edx+0x49b70b09]
  4287e8:	test   al,0x2c
  4287ea:	repnz mov bh,BYTE PTR [ecx]
  4287ed:	mov    cl,0xf9
  4287ef:	mov    ds:0xc29b73c5,eax
  4287f4:	cs inc ebx
  4287f6:	add    DWORD PTR [edx],0xffffff9a
  4287f9:	sar    DWORD PTR [ebx+0x25458c8a],0xa2
  428800:	sbb    eax,0xc02882ca
  428805:	mov    edi,0xed18e8d3
  42880a:	xchg   edx,eax
  42880b:	std    
  42880c:	push   esi
  42880d:	lods   al,BYTE PTR ds:[esi]
  42880e:	mov    ah,0xcd
  428810:	mov    ebp,0x669e7c8b
  428815:	mov    dh,0x4
  428817:	je     0x42881b
  428819:	jb     0x428879
  42881b:	jbe    0x428853
  42881d:	scas   al,BYTE PTR es:[edi]
  42881e:	push   0xffffffea
  428820:	pop    ebp
  428821:	xchg   ecx,eax
  428822:	cdq    
  428823:	dec    ebx
  428824:	jns    0x428806
  428826:	fldenv [edi]
  428828:	pop    esi
  428829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42882a:	jo     0x428843
  42882c:	inc    edi
  42882d:	dec    ebx
  42882e:	mov    cl,0x17
  428830:	das    
  428831:	pop    esi
  428832:	sahf   
  428833:	cmp    eax,DWORD PTR [ebx+0x8]
  428836:	loopne 0x42883a
  428838:	sbb    cl,BYTE PTR ds:0xa13d99a6
  42883e:	mov    edx,0xc7f427d3
  428843:	xchg   dl,dl
  428845:	(bad)  [edx]
  428847:	mov    BYTE PTR [ebx+0x2b],bh
  42884a:	mov    esi,DWORD PTR [ebx]
  42884c:	mov    WORD PTR [ebx-0x7b],ds
  42884f:	aad    0xc
  428851:	mov    ecx,0x7cb8490
  428856:	das    
  428857:	rcr    DWORD PTR ds:0x462cf8d,1
  42885d:	mov    ah,0x3d
  42885f:	out    0x22,eax
  428861:	pop    esp
  428862:	mov    al,ds:0x70d4e090
  428867:	arpl   WORD PTR [ecx+edx*2-0x7562a45b],cx
  42886e:	bound  edx,QWORD PTR [edx]
  428870:	cdq    
  428871:	mov    cl,BYTE PTR [esi]
  428873:	add    DWORD PTR ds:0xc3b4d018,edx
  428879:	int3   
  42887a:	add    al,0x38
  42887c:	inc    edx
  42887d:	mov    dh,0x5b
  42887f:	out    0x8c,eax
  428881:	sbb    eax,0xde27c126
  428886:	std    
  428887:	repnz fcomp DWORD PTR [ebx]
  42888a:	imul   ebp,DWORD PTR [eax-0x5],0x65e6f274
  428891:	push   cs
  428892:	retf   0x468a
  428895:	push   0xccc61561
  42889a:	dec    edx
  42889b:	sbb    eax,0x2105802e
  4288a0:	or     eax,0xab850d31
  4288a5:	in     eax,0x9e
  4288a7:	mov    edx,0x9aea659c
  4288ac:	rcl    edx,1
  4288ae:	add    esp,DWORD PTR ds:0x977aeaf
  4288b4:	mov    eax,0x2ac43a12
  4288b9:	sbb    DWORD PTR [esi],eax
  4288bb:	xchg   edx,eax
  4288bc:	ins    BYTE PTR es:[edi],dx
  4288bd:	mov    dh,BYTE PTR [ebx-0x6e1c032a]
  4288c3:	push   0x20
  4288c5:	push   ecx
  4288c6:	mov    ch,BYTE PTR [edi-0x14128db3]
  4288cc:	mov    ah,0x7a
  4288ce:	jae    0x4288c5
  4288d0:	(bad)  
  4288d1:	push   ss
  4288d2:	xor    ebp,DWORD PTR [ecx-0x40]
  4288d5:	jge    0x428867
  4288d7:	mov    ch,0x90
  4288d9:	jne    0x4288f1
  4288db:	push   0x81ac82
  4288e0:	jb     0x428955
  4288e2:	adc    BYTE PTR [edx+ebp*1-0x4f5c0bfd],ah
  4288e9:	push   ebx
  4288ea:	mov    ?,WORD PTR [ecx+edi*2]
  4288ed:	pop    edx
  4288ee:	push   ds
  4288ef:	imul   edi,ecx,0xffffffcd
  4288f2:	push   edx
  4288f3:	sub    al,0x95
  4288f5:	aaa    
  4288f6:	hlt    
  4288f7:	imul   ebp,esp,0x40
  4288fa:	int    0x71
  4288fc:	ss int 0x3f
  4288ff:	ret    
  428900:	dec    esi
  428901:	cmp    al,0x2d
  428903:	mov    esi,0xf56fd9a9
  428908:	push   ss
  428909:	fdiv   QWORD PTR [eax]
  42890b:	adc    DWORD PTR [edi+0x6c],ebp
  42890e:	fs dec ebx
  428910:	fistp  DWORD PTR [ebx-0x3a]
  428913:	pop    bp
  428915:	out    0x5c,al
  428917:	ds test eax,0x732fb67d
  42891d:	and    ebp,ebx
  42891f:	and    al,0xc2
  428921:	fnstenv [eax]
  428923:	iret   
  428924:	xchg   BYTE PTR [ebx],bh
  428926:	iret   
  428927:	adc    DWORD PTR [eax-0x33],esp
  42892a:	inc    eax
  42892b:	(bad)  
  42892c:	pushf  
  42892d:	repz inc esp
  42892f:	xor    eax,0xeab58e7d
  428934:	adc    BYTE PTR [edx],al
  428936:	inc    ebx
  428937:	imul   ecx,DWORD PTR [eax],0xe46b137b
  42893d:	push   ebp
  42893e:	ins    DWORD PTR es:[edi],dx
  42893f:	int    0x38
  428941:	adc    eax,0x1745eb68
  428946:	inc    edx
  428947:	xchg   edx,eax
  428948:	int3   
  428949:	xor    al,0xe5
  42894b:	jg     0x428911
  42894d:	js     0x4288f2
  42894f:	mov    esp,0x5b13cf40
  428954:	in     al,dx
  428955:	loope  0x428973
  428957:	jb     0x428968
  428959:	jb     0x4288eb
  42895b:	iret   
  42895c:	pop    ds
  42895d:	xor    eax,0x225aaadc
  428962:	xor    eax,0xbcbd42d7
  428967:	pop    ebp
  428968:	or     al,BYTE PTR [ebx+0xf702cd9]
  42896e:	call   0xd794:0xabdaf52b
  428975:	mov    ch,BYTE PTR [edi+0x4f996ad8]
  42897b:	mov    esp,DWORD PTR [eax]
  42897d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42897e:	or     eax,0xb623d952
  428983:	out    0x44,al
  428985:	mov    dl,0x44
  428987:	das    
  428988:	sbb    BYTE PTR [edx],dh
  42898a:	push   edx
  42898b:	pop    ebp
  42898c:	out    0x4f,al
  42898e:	ins    DWORD PTR es:[edi],dx
  42898f:	xor    dh,al
  428991:	cmp    eax,DWORD PTR [ebx+0x3a]
  428994:	mov    al,0x7f
  428996:	aaa    
  428997:	ror    BYTE PTR [edx+0xa],1
  42899a:	pushf  
  42899b:	sbb    ah,BYTE PTR [ebx-0x4d]
  42899e:	lock aaa 
  4289a0:	dec    esi
  4289a1:	popw   es
  4289a3:	dec    ebx
  4289a4:	pop    edi
  4289a5:	cmp    eax,0x5d5436db
  4289aa:	inc    ebp
  4289ab:	js     0x42897f
  4289ad:	mov    ds:0x1bbe9fe1,al
  4289b2:	inc    esi
  4289b3:	rcr    BYTE PTR [ebp-0x68],1
  4289b6:	pop    ebx
  4289b7:	adc    dl,ah
  4289b9:	or     BYTE PTR [eax],ch
  4289bb:	mov    eax,ds:0x67f8284b
  4289c0:	push   ebx
  4289c1:	lahf   
  4289c2:	and    ah,cl
  4289c4:	addr16 push ds
  4289c6:	xchg   edi,eax
  4289c7:	adc    BYTE PTR [edx+0x63],bl
  4289ca:	rcl    al,cl
  4289cc:	in     al,dx
  4289cd:	ret    
  4289ce:	push   ebp
  4289cf:	mov    ebp,0xe3c87f38
  4289d4:	pop    edx
  4289d5:	mul    WORD PTR [esi]
  4289d8:	push   0xffffffed
  4289da:	pop    ds
  4289db:	or     eax,0x6e2a976b
  4289e0:	mov    ecx,0xaa46b4ca
  4289e5:	lea    esi,[edx-0x6f5a2a4]
  4289eb:	das    
  4289ec:	clc    
  4289ed:	leave  
  4289ee:	mov    ch,0x36
  4289f0:	or     BYTE PTR [ebx+ebp*4],0xd
  4289f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289f5:	push   ecx
  4289f6:	xchg   DWORD PTR [eax],edx
  4289f8:	mov    dl,BYTE PTR [edi-0x6ca6e588]
  4289fe:	ins    BYTE PTR es:[edi],dx
  4289ff:	push   cs
  428a00:	jns    0x4289be
  428a02:	sub    ch,dh
  428a04:	popf   
  428a05:	leave  
  428a06:	(bad)  
  428a07:	mov    cl,0xf8
  428a09:	sub    DWORD PTR [esi],edx
  428a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a0c:	push   0xffffff9e
  428a0e:	ror    BYTE PTR [ecx-0x4c],cl
  428a11:	stc    
  428a12:	pop    esi
  428a13:	adc    edx,DWORD PTR [ebx-0x5a20565a]
  428a19:	dec    ebp
  428a1a:	mov    dh,0x81
  428a1c:	dec    esi
  428a1d:	pop    edx
  428a1e:	iret   
  428a1f:	sub    al,0x9d
  428a21:	outs   dx,BYTE PTR ds:[esi]
  428a22:	(bad)  [ecx-0x2fd79ac7]
  428a28:	test   DWORD PTR [eax+0x37],edx
  428a2b:	std    
  428a2c:	jle    0x4289b9
  428a2e:	add    al,0xed
  428a30:	jg     0x428a29
  428a32:	btr    DWORD PTR [ecx-0x68e5c7b6],ecx
  428a39:	cmp    BYTE PTR ds:0x5a93486b,cl
  428a3f:	inc    ebp
  428a40:	(bad)  
  428a41:	(bad)  
  428a42:	lods   eax,DWORD PTR ds:[esi]
  428a43:	call   0xcd2e:0x10acae7d
  428a4a:	call   0x8e21:0xf08019b4
  428a51:	lahf   
  428a52:	mov    eax,ds:0x33d12e58
  428a57:	pop    esp
  428a58:	test   esi,esp
  428a5a:	aad    0xc1
  428a5c:	mov    ds,WORD PTR [esi]
  428a5e:	clc    
  428a5f:	push   edx
  428a60:	ret    
  428a61:	hlt    
  428a62:	and    dh,bl
  428a64:	pop    ds
  428a65:	enter  0x5a51,0xb4
  428a69:	shl    DWORD PTR [ecx],cl
  428a6b:	or     cl,BYTE PTR [edi]
  428a6d:	mov    esp,0x9281048c
  428a73:	in     eax,dx
  428a74:	cdq    
  428a75:	cmp    DWORD PTR [ebx-0x48a4a40a],eax
  428a7b:	cmp    eax,0x91238539
  428a80:	div    BYTE PTR [edi+0x63936845]
  428a86:	or     eax,0xde519711
  428a8b:	sub    BYTE PTR [esi],bh
  428a8d:	je     0x428a26
  428a8f:	fcmovbe st,st(2)
  428a91:	outs   dx,BYTE PTR ds:[esi]
  428a92:	mov    al,0xb6
  428a94:	bound  ecx,QWORD PTR [edx+0x5c]
  428a97:	xor    ecx,edi
  428a99:	cs cmc 
  428a9b:	sub    al,0xdd
  428a9d:	ror    BYTE PTR [ecx+0xe],cl
  428aa0:	sub    BYTE PTR [edi-0x6fbecb79],dh
  428aa6:	or     BYTE PTR [edx],0x69
  428aa9:	fwait
  428aaa:	jb     0x428a5d
  428aac:	inc    esi
  428aad:	mov    eax,ds:0x19ef1e2
  428ab2:	fimul  DWORD PTR [ebp-0x5460c033]
  428ab8:	and    al,0x70
  428aba:	hlt    
  428abb:	inc    ebx
  428abc:	push   ebp
  428abd:	mov    eax,ds:0x9824e9b4
  428ac2:	enter  0x8bcf,0x7b
  428ac6:	sbb    al,0x59
  428ac8:	mov    al,ss:0x2ffd84c0
  428ace:	(bad)  
  428acf:	fldenv cs:[ebx]
  428ad2:	xor    eax,ecx
  428ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ad5:	sub    esi,DWORD PTR [esi-0x34]
  428ad8:	pushf  
  428ad9:	inc    edx
  428ada:	ds cwde 
  428adc:	mov    esi,0xdfd120c6
  428ae1:	jecxz  0x428af0
  428ae3:	je     0x428a86
  428ae5:	xor    bh,BYTE PTR [ebx+eax*8-0x37]
  428ae9:	dec    esp
  428aea:	ficomp DWORD PTR [ebx+eiz*8-0x3c64da0]
  428af1:	test   eax,0x15d842d5
  428af6:	pop    edx
  428af7:	jne    0x428b3e
  428af9:	mov    ch,0x5e
  428afb:	int    0x6c
  428afd:	jb     0x428b1e
  428aff:	mov    bh,0x47
  428b01:	repnz xchg edi,eax
  428b03:	in     al,0x11
  428b05:	jae    0x428a8d
  428b07:	fs adc bl,al
  428b0a:	add    DWORD PTR [ebx+0x5e],esi
  428b0d:	mov    ebp,0x4e8b3cdd
  428b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b13:	int    0xd2
  428b15:	mov    edi,edx
  428b17:	sub    al,0xb6
  428b19:	mov    cl,0x36
  428b1b:	or     BYTE PTR [esi],dl
  428b1d:	sbb    al,0xca
  428b1f:	test   eax,0x77d5a0bc
  428b24:	jae    0x428b18
  428b26:	pop    ebx
  428b27:	int3   
  428b28:	add    DWORD PTR [ebx+eiz*1+0x59],esp
  428b2c:	aaa    
  428b2d:	adc    eax,0xdbc2a17f
  428b32:	mov    ebp,?
  428b34:	cmp    BYTE PTR [ebp+0x1ada464b],0x48
  428b3b:	imul   ecx,esi,0xffffffc6
  428b3e:	xchg   esp,eax
  428b3f:	es xchg ebx,eax
  428b41:	jae    0x428bb9
  428b43:	sub    al,ah
  428b45:	iret   
  428b46:	jne    0x428aef
  428b48:	imul   esp,esp,0x61b08613
  428b4e:	outs   dx,DWORD PTR ds:[esi]
  428b4f:	and    DWORD PTR [edi],esp
  428b51:	and    BYTE PTR [eax-0x48],bh
  428b54:	loopne 0x428b0e
  428b56:	mov    dh,BYTE PTR ds:0x66b251ae
  428b5c:	aad    0xa5
  428b5e:	mov    cl,0x2f
  428b60:	adc    eax,0xc134123
  428b65:	lds    eax,FWORD PTR [esi-0x1106b2e1]
  428b6b:	ret    0x66b6
  428b6e:	(bad)
  428b71:	fidivr DWORD PTR ds:0xf610935
  428b77:	pop    ecx
  428b78:	dec    eax
  428b79:	xlat   BYTE PTR ds:[ebx]
  428b7a:	xchg   ch,dh
  428b7c:	pop    es
  428b7d:	cmp    al,0x41
  428b7f:	fdivr  QWORD PTR [ebp+0x21]
  428b82:	push   edx
  428b83:	xchg   DWORD PTR [ebx-0x122ca891],esp
  428b89:	test   DWORD PTR [edx+0x57bfd1da],eax
  428b8f:	paddw  mm3,QWORD PTR [edi-0x8]
  428b93:	push   es
  428b94:	mov    dh,0x73
  428b96:	and    al,0x9c
  428b98:	adc    eax,0xc941ddfc
  428b9d:	ss push ebx
  428b9f:	retf   0x319f
  428ba2:	push   esp
  428ba3:	add    ecx,ebx
  428ba5:	xor    al,0x16
  428ba7:	inc    ebx
  428ba8:	test   bh,dh
  428baa:	out    dx,al
  428bab:	xlat   BYTE PTR ds:[ebx]
  428bac:	push   ds
  428bad:	lods   al,BYTE PTR ds:[esi]
  428bae:	sbb    eax,0xe099bd30
  428bb3:	fs adc eax,0x4871a6cc
  428bb9:	out    dx,eax
  428bba:	xchg   esp,eax
  428bbb:	je     0x428ba6
  428bbd:	push   ds
  428bbe:	imul   ebp,DWORD PTR [esi-0x19cdd3c],0x0
  428bc5:	ficomp DWORD PTR [eax+0x47]
  428bc8:	adc    eax,0x23047b19
  428bcd:	xor    ch,dl
  428bcf:	popf   
  428bd0:	xor    eax,DWORD PTR [edi-0x4ec3408d]
  428bd6:	pushf  
  428bd7:	repnz inc edi
  428bd9:	out    0x3,al
  428bdb:	mov    ecx,0x70ca3412
  428be0:	lock inc ebp
  428be2:	mov    ebp,ebp
  428be4:	sbb    eax,DWORD PTR [edi+0x63bbc916]
  428bea:	(bad)  
  428bec:	and    DWORD PTR [ebp+0x12],edx
  428bef:	push   0x24c90606
  428bf4:	mov    eax,ds:0xef2cc955
  428bf9:	inc    edi
  428bfa:	mov    ebp,0xdfdcdf66
  428bff:	adc    esp,edx
  428c01:	and    al,0xab
  428c03:	cmp    eax,0x81b8cebd
  428c08:	mov    ds:0x265df02,eax
  428c0d:	dec    esp
  428c0e:	mov    esi,0xc3cf4bda
  428c13:	imul   BYTE PTR [eax+0x7b4bad2d]
  428c19:	cs (bad) 
  428c1b:	mov    cl,0xd8
  428c1d:	retf   0x4d83
  428c20:	in     eax,0xd5
  428c22:	jno    0x428bc4
  428c24:	or     ecx,edx
  428c26:	ret    0xbe8d
  428c29:	pop    ss
  428c2a:	inc    edi
  428c2b:	pop    ds
  428c2c:	ja     0x428bea
  428c2e:	mov    ah,0x5d
  428c30:	ficom  WORD PTR [edi+edx*2-0x8]
  428c34:	scas   al,BYTE PTR es:[edi]
  428c35:	mov    bl,0x3d
  428c37:	pop    ds
  428c38:	inc    ebp
  428c39:	in     al,dx
  428c3a:	and    bh,ah
  428c3c:	xchg   ecx,eax
  428c3d:	aam    0xe4
  428c3f:	out    dx,al
  428c40:	and    al,0x10
  428c42:	xchg   ebx,eax
  428c43:	lods   al,BYTE PTR ds:[esi]
  428c44:	std    
  428c45:	loope  0x428c4d
  428c47:	cmp    ch,al
  428c49:	pusha  
  428c4a:	mov    dh,BYTE PTR [edi+0x78dcb1f4]
  428c50:	jmp    DWORD PTR [ebx+0x7b3b18c3]
  428c56:	dec    esp
  428c57:	mov    ebx,0xef86e727
  428c5c:	int3   
  428c5d:	mov    eax,DWORD PTR cs:[ecx-0x597b0663]
  428c64:	or     BYTE PTR [edx+0xf],bl
  428c67:	sub    al,0xc9
  428c69:	mov    edi,0x50884e52
  428c6e:	mov    bh,0xa4
  428c70:	lds    ecx,FWORD PTR [ebx]
  428c72:	xor    BYTE PTR [edi+0x2bab0c1],cl
  428c78:	mov    DWORD PTR [esi+0x416fac4c],ebp
  428c7e:	mov    esi,0x66d87716
  428c83:	mov    esp,0x1bf228d3
  428c88:	add    al,0xdb
  428c8a:	fwait
  428c8b:	pop    esp
  428c8c:	add    dh,BYTE PTR [esi-0x554f5748]
  428c92:	fstp   DWORD PTR [edx]
  428c94:	(bad)  
  428c95:	loop   0x428c7e
  428c97:	lea    ebx,[ebx]
  428c99:	cmp    eax,0xabbf17d
  428c9e:	aaa    
  428c9f:	sub    al,0xa0
  428ca1:	jnp    0x428cba
  428ca3:	adc    ebp,esi
  428ca5:	lds    eax,FWORD PTR [esi+edi*2-0x1f2dd312]
  428cac:	sti    
  428cad:	mov    ds:0x9653e57b,al
  428cb2:	jmp    0xb77bbb5c
  428cb7:	fs cmp esi,edx
  428cba:	push   0xffffffe2
  428cbc:	stos   BYTE PTR es:[edi],al
  428cbd:	mov    ?,WORD PTR [edi]
  428cbf:	dec    ecx
  428cc0:	jb     0x428c66
  428cc2:	das    
  428cc3:	cli    
  428cc4:	and    DWORD PTR [eax],0x7fd75739
  428cca:	xchg   esi,eax
  428ccb:	(bad)  
  428ccd:	test   ecx,esi
  428ccf:	adc    BYTE PTR ds:0xf5dfe51c,ch
  428cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428cd6:	push   ebx
  428cd7:	push   0x76
  428cd9:	adc    eax,0x3410b912
  428cde:	add    ebx,ecx
  428ce0:	sub    al,0x5c
  428ce2:	xchg   esp,eax
  428ce3:	push   ebp
  428ce4:	push   ebp
  428ce5:	js     0x428cd8
  428ce7:	and    al,0x29
  428ce9:	(bad)  
  428cea:	shl    BYTE PTR [edi+ecx*1],cl
  428ced:	adc    al,0xcd
  428cef:	mov    DWORD PTR [ebp-0xc],ecx
  428cf2:	arpl   WORD PTR [ebx+0x3e],ax
  428cf5:	jp     0x428ce2
  428cf7:	pop    DWORD PTR [ecx-0x405a6170]
  428cfd:	cs ret 0x6b59
  428d01:	jecxz  0x428d3e
  428d03:	loopne 0x428d1b
  428d05:	lahf   
  428d06:	stos   DWORD PTR es:[edi],eax
  428d07:	push   ecx
  428d08:	ss cmc 
  428d0a:	jne    0x428cee
  428d0c:	popf   
  428d0d:	sti    
  428d0e:	sub    eax,0x2331e850
  428d13:	xor    eax,0xf12d77b5
  428d18:	xchg   DWORD PTR [ebx],edi
  428d1a:	repnz ror BYTE PTR [edx-0x74fc01b3],1
  428d21:	xor    al,0x2c
  428d23:	mov    ds:0xc53352b0,al
  428d28:	clc    
  428d29:	push   ebp
  428d2a:	xor    eax,DWORD PTR ds:0xc828a370
  428d30:	add    edi,DWORD PTR [ecx+ebp*1+0x4cf041ec]
  428d37:	out    dx,eax
  428d38:	push   esi
  428d39:	scas   al,BYTE PTR es:[edi]
  428d3a:	call   0x7742d8e1
  428d3f:	push   ecx
  428d40:	adc    al,0x63
  428d42:	jnp    0x428d24
  428d44:	lea    ecx,[ecx+edx*8-0x61]
  428d48:	ret    
  428d49:	add    DWORD PTR [eax],edi
  428d4b:	clc    
  428d4c:	and    DWORD PTR [ebp-0x5c],esp
  428d4f:	mov    BYTE PTR [edi+edx*2+0x5d],cl
  428d53:	jns    0x428dd2
  428d55:	ret    
  428d56:	jl     0x428cf5
  428d58:	test   edi,eax
  428d5a:	in     eax,dx
  428d5b:	add    bl,bh
  428d5d:	js     0x428d13
  428d5f:	jae    0x428dbe
  428d61:	add    al,0xa6
  428d63:	xchg   esp,eax
  428d64:	mov    ah,BYTE PTR [ebp-0x39]
  428d67:	push   ebp
  428d68:	retf   
  428d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d6a:	add    cl,cl
  428d6c:	xchg   DWORD PTR [edi-0x5295c87c],esp
  428d72:	lods   al,BYTE PTR ds:[esi]
  428d73:	dec    ecx
  428d74:	mov    dl,0xae
  428d76:	(bad)  
  428d77:	xchg   esi,eax
  428d78:	lock jl 0x428d27
  428d7b:	outs   dx,BYTE PTR ds:[esi]
  428d7c:	mov    WORD PTR [esi+0x43],?
  428d7f:	pop    esi
  428d80:	push   es
  428d81:	sti    
  428d82:	retf   
  428d83:	or     edi,DWORD PTR [ebp-0x36292212]
  428d89:	cmp    dh,BYTE PTR [edx+esi*2+0x58d9ca01]
  428d90:	ins    DWORD PTR es:[edi],dx
  428d91:	jecxz  0x428db3
  428d93:	mov    ds:0x9a65cf20,al
  428d98:	adc    DWORD PTR [ebp+0x65],esi
  428d9b:	fs ror edi,1
  428d9e:	pop    ss
  428d9f:	popf   
  428da0:	pop    ebx
  428da1:	scas   eax,DWORD PTR es:[edi]
  428da2:	clc    
  428da3:	nop
  428da4:	sub    cl,BYTE PTR es:[esp+eiz*2-0x5]
  428da9:	inc    ebp
  428daa:	xor    eax,0xa83e461d
  428daf:	hlt    
  428db0:	int    0x83
  428db2:	fdivr  DWORD PTR [edi-0x1d]
  428db5:	push   cs
  428db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428db7:	aad    0x7c
  428db9:	ins    DWORD PTR es:[edi],dx
  428dba:	adc    al,0x5a
  428dbc:	std    
  428dbd:	nop
  428dbe:	mov    eax,0xf8eeaf65
  428dc3:	les    ebx,FWORD PTR [esi-0x627b4b8d]
  428dc9:	fsub   QWORD PTR [edx-0x429dc138]
  428dcf:	mov    ebx,0x3a32c99d
  428dd4:	repnz cmovs esi,DWORD PTR es:[ebp+0x4b]
  428dda:	sbb    esp,DWORD PTR [ecx+0xdd2378f]
  428de0:	push   es
  428de1:	cmp    eax,0xe1ce608d
  428de6:	cdq    
  428de7:	xchg   DWORD PTR [eax],edi
  428de9:	adc    DWORD PTR [edi],eax
  428deb:	inc    ebp
  428dec:	sahf   
  428ded:	dec    esp
  428dee:	or     bl,BYTE PTR [ebx-0x41]
  428df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428df2:	adc    DWORD PTR [edi-0x16],esp
  428df5:	mov    ecx,0x8f9d57e0
  428dfa:	fucomp st(1)
  428dfc:	mov    edx,0xe06b09d8
  428e01:	ret    
  428e02:	xchg   edx,eax
  428e03:	mov    ch,0x9f
  428e05:	mov    dl,0x78
  428e07:	div    DWORD PTR [edx-0x11]
  428e0a:	fidivr DWORD PTR [ebp-0x166b108]
  428e10:	fwait
  428e11:	icebp  
  428e12:	in     eax,dx
  428e13:	loope  0x428e05
  428e15:	xchg   ecx,eax
  428e16:	lahf   
  428e17:	xchg   edi,eax
  428e18:	xchg   ecx,eax
  428e19:	add    BYTE PTR [edi+ecx*8],ch
  428e1c:	cli    
  428e1d:	pop    esi
  428e1e:	push   eax
  428e1f:	iret   
  428e20:	jecxz  0x428e0e
  428e22:	xchg   ebp,eax
  428e23:	mov    ecx,0x9cf93eff
  428e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e29:	stos   DWORD PTR es:[edi],eax
  428e2a:	(bad)
  428e2d:	bound  eax,QWORD PTR [ecx+0x319de126]
  428e33:	ds int3 
  428e35:	in     al,0x38
  428e37:	mov    edx,DWORD PTR [edi+ebx*8+0x1762a619]
  428e3e:	fmul   DWORD PTR [edx+0xecc5861]
  428e44:	xor    ah,bl
  428e46:	repnz push ecx
  428e48:	lods   al,BYTE PTR ds:[esi]
  428e49:	sahf   
  428e4a:	hlt    
  428e4b:	enter  0x9b95,0x52
  428e4f:	cmp    BYTE PTR [esi-0x8860eba],al
  428e55:	dec    esi
  428e56:	push   eax
  428e57:	cmp    BYTE PTR [ecx+0x3d],0x54
  428e5b:	jmp    0x428e8d
  428e5d:	popa   
  428e5e:	inc    ebx
  428e5f:	retf   
  428e60:	gs test al,0x47
  428e63:	hlt    
  428e64:	jo     0x428e50
  428e66:	rcr    ch,0x69
  428e69:	mov    bh,0xf1
  428e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e6c:	js     0x428ed6
  428e6e:	jle    0x428e85
  428e70:	lods   al,BYTE PTR ds:[esi]
  428e71:	mov    dl,0xc4
  428e73:	fidivr DWORD PTR [edi+0x68]
  428e76:	mov    esi,0x32dadfcb
  428e7b:	push   0x48abeceb
  428e80:	sahf   
  428e81:	mov    al,0x1f
  428e83:	(bad)  
  428e85:	pop    ss
  428e86:	or     eax,0xff1f38b2
  428e8b:	pusha  
  428e8c:	lods   eax,DWORD PTR ds:[esi]
  428e8d:	stos   BYTE PTR es:[edi],al
  428e8e:	sbb    BYTE PTR [eax],dl
  428e90:	(bad)  
  428e91:	icebp  
  428e92:	retf   
  428e93:	push   eax
  428e94:	push   ds
  428e95:	push   ecx
  428e96:	mov    ecx,0xb2f980e4
  428e9b:	and    al,0x2
  428e9d:	ret    0xe4c9
  428ea0:	enter  0x2cf6,0xfb
  428ea4:	mov    cl,0xb0
  428ea6:	xor    eax,ecx
  428ea8:	or     eax,0xb07beaf5
  428ead:	or     al,BYTE PTR [esi]
  428eaf:	or     BYTE PTR [ebx-0x73],cl
  428eb2:	xor    eax,0x5360296e
  428eb7:	lea    ebx,[edi+ebp*8+0x7346f579]
  428ebe:	sub    al,0x97
  428ec0:	call   0xcd5c2624
  428ec5:	adc    bl,al
  428ec7:	or     ebx,DWORD PTR [eax+eax*4-0x2b]
  428ecb:	fsub   QWORD PTR [edi+ecx*8-0x62]
  428ecf:	push   0x3
  428ed1:	hlt    
  428ed2:	and    BYTE PTR [esp+edi*2-0x158df3d9],ah
  428ed9:	adc    al,0x2b
  428edb:	push   0x53e13d41
  428ee0:	and    eax,0x4390bb27
  428ee5:	pop    edi
  428ee6:	adc    al,0xad
  428ee8:	cmp    eax,0xbba282d7
  428eed:	mov    bl,0x23
  428eef:	test   BYTE PTR [esi-0x2168e616],0x1f
  428ef6:	xchg   edi,eax
  428ef7:	jp     0x428edb
  428ef9:	push   ebx
  428efa:	xchg   ebp,eax
  428efb:	mov    ebp,0xbc1821d4
  428f00:	xchg   ecx,eax
  428f01:	shr    DWORD PTR [edi+0x3d],1
  428f04:	sub    cl,al
  428f06:	pop    edi
  428f07:	add    DWORD PTR [edx+esi*2],esi
  428f0a:	jmp    0x428e96
  428f0c:	sahf   
  428f0d:	jmp    0xc1c1:0xc6befde0
  428f14:	iret   
  428f15:	adc    bl,BYTE PTR [ebp+0x2a5fbde0]
  428f1b:	pop    esi
  428f1c:	mul    ah
  428f1e:	mov    edx,0x3901406d
  428f23:	push   0xb45948d7
  428f28:	test   BYTE PTR [ebx],0x7
  428f2b:	mov    edx,0x7aed1f6c
  428f30:	xor    DWORD PTR [edi+0x40],0x1b8694a
  428f37:	xchg   ebx,eax
  428f38:	mov    dl,0x4e
  428f3a:	mov    al,0x43
  428f3c:	mov    ecx,0x5dc6f401
  428f41:	rcr    BYTE PTR [ebp+eiz*1-0x2],0xe4
  428f46:	shl    BYTE PTR [ebp+0x7835e8df],cl
  428f4c:	push   esp
  428f4d:	and    BYTE PTR [eax+0x4a2c75f1],ch
  428f53:	push   ecx
  428f54:	imul   eax,DWORD PTR [esi-0x7cefebad],0xffffff95
  428f5b:	xchg   DWORD PTR [ebx-0x31e56c40],edi
  428f61:	pop    ds
  428f62:	rcr    BYTE PTR [edx+0x4939ebbd],1
  428f68:	mov    ecx,0x1feffcdb
  428f6d:	cmp    BYTE PTR [edx],ch
  428f6f:	stos   BYTE PTR es:[edi],al
  428f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f71:	int3   
  428f72:	ds test al,0x6d
  428f75:	imul   ebx,esp,0x1e
  428f78:	ja     0x428fb5
  428f7a:	scas   eax,DWORD PTR es:[edi]
  428f7b:	lods   al,BYTE PTR ds:[esi]
  428f7c:	iret   
  428f7d:	dec    eax
  428f7e:	jecxz  0x428f2b
  428f80:	jbe    0x428fc4
  428f82:	pushf  
  428f83:	push   ecx
  428f84:	enter  0x1b08,0x9f
  428f88:	sub    eax,0xd272c761
  428f8d:	dec    ebp
  428f8e:	jae    0x428fbc
  428f90:	pop    esi
  428f91:	loop   0x428f52
  428f93:	cmp    eax,0xaf9f71bc
  428f98:	push   cs
  428f99:	sbb    DWORD PTR [eax+ecx*4-0x7a04ae3f],0x5c1d34b5
  428fa4:	jl     0x428fc1
  428fa6:	cmp    DWORD PTR [ecx],esp
  428fa8:	test   al,0xe3
  428faa:	inc    ebp
  428fab:	in     al,0xa9
  428fad:	out    dx,eax
  428fae:	aam    0x8c
  428fb0:	jmp    0x464ce6c4
  428fb5:	push   ds
  428fb6:	jmp    0xa95bcd15
  428fbb:	add    esi,edi
  428fbd:	jecxz  0x428f63
  428fbf:	pop    eax
  428fc0:	and    al,0x40
  428fc2:	ror    DWORD PTR [ecx+0xf],0xd8
  428fc6:	push   eax
  428fc7:	aam    0x63
  428fc9:	cmp    DWORD PTR [edx],ebx
  428fcb:	lock lods eax,DWORD PTR ds:[esi]
  428fcd:	dec    ebp
  428fce:	inc    edi
  428fcf:	retf   
  428fd0:	inc    edx
  428fd1:	cmc    
  428fd2:	out    0xc0,eax
  428fd4:	(bad)  
  428fd5:	jo     0x428f6c
  428fd7:	mov    WORD PTR ds:0x3abe282,cs
  428fdd:	and    ecx,DWORD PTR [ecx+0x27f669b7]
  428fe3:	xlat   BYTE PTR ds:[ebx]
  428fe4:	mov    BYTE PTR [edi+0x42],al
  428fe7:	in     eax,0xfa
  428fe9:	icebp  
  428fea:	xor    edx,DWORD PTR [edi+0x27f48906]
  428ff0:	nop
  428ff1:	mov    eax,0xae0c5436
  428ff6:	into   
  428ff7:	dec    ebp
  428ff8:	pop    ecx
  428ff9:	lods   al,BYTE PTR ds:[esi]
  428ffa:	stos   BYTE PTR es:[edi],al
  428ffb:	or     edi,DWORD PTR [ecx]
  428ffd:	addr16 push eax
  428fff:	or     ch,ah
  429001:	jbe    0x429028
  429003:	xchg   edi,eax
  429004:	jge    0x428fb1
  429006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429007:	dec    eax
  429008:	fcmovnb st,st(2)
  42900a:	cwde   
  42900b:	jbe    0x428fe1
  42900d:	stos   DWORD PTR es:[edi],eax
  42900e:	test   DWORD PTR ds:0xe55bdbcf,esi
  429014:	jl     0x42907e
  429016:	dec    edi
  429017:	pop    esi
  429018:	jbe    0x428fc4
  42901a:	into   
  42901b:	out    0xef,eax
  42901d:	jl     0x428fd7
  42901f:	cwde   
  429020:	pop    ds
  429021:	fldenv [edi+0x5c]
  429024:	jns    0x429040
  429026:	sub    cl,bh
  429028:	call   0xcaf93236
  42902d:	sub    eax,0x4116baac
  429032:	jne    0x428ff8
  429034:	add    ebp,eax
  429036:	dec    esi
  429037:	push   esp
  429038:	cmp    BYTE PTR [ecx-0x79827396],bl
  42903e:	sar    BYTE PTR [esi+0x63],cl
  429041:	jmp    0xe1c6:0x961bf68
  429048:	retf   0x8d9d
  42904b:	push   eax
  42904c:	add    eax,0x67d81b3b
  429051:	call   0xe9a6:0x31b98459
  429058:	add    eax,0x5cf824e6
  42905d:	jnp    0x429097
  42905f:	shr    edi,cl
  429061:	xor    DWORD PTR [esp+ebx*1+0x63],edi
  429065:	or     bh,ah
  429067:	jmp    0xad6f3b30
  42906c:	push   ss
  42906d:	inc    edi
  42906e:	or     al,0x10
  429070:	ds stos DWORD PTR es:[edi],eax
  429072:	and    BYTE PTR [eax+0x7a],ah
  429075:	or     al,BYTE PTR [ebp-0x63]
  429078:	push   edx
  429079:	lea    esp,[ebx-0x45]
  42907c:	cmp    BYTE PTR [esi+0x10ec6784],dl
  429082:	adc    edx,ecx
  429084:	cli    
  429085:	jno    0x429027
  429087:	js     0x42906f
  429089:	jbe    0x42902b
  42908b:	jl     0x4290e4
  42908d:	xchg   ebp,eax
  42908e:	cmp    DWORD PTR [esi+0x96bd91f],esi
  429094:	call   0x96c8:0xe807b86
  42909b:	jns    0x4290e4
  42909d:	pop    edx
  42909e:	or     al,0xaa
  4290a0:	or     eax,0x46732ade
  4290a5:	dec    edx
  4290a6:	mov    eax,0x6ef270e7
  4290ab:	push   esp
  4290ac:	xor    ah,ah
  4290ae:	jb     0x4290ed
  4290b0:	dec    esp
  4290b1:	arpl   WORD PTR [edi],ax
  4290b3:	rcr    cl,0x7b
  4290b6:	and    eax,0x593c7858
  4290bb:	push   0xac1dcbe1
  4290c0:	jp     0x429118
  4290c2:	in     al,dx
  4290c3:	aad    0xbe
  4290c5:	iret   
  4290c6:	mov    dl,0x77
  4290c8:	lds    ebp,FWORD PTR [edx+ebx*1]
  4290cb:	mov    ds:0x326f3a0c,eax
  4290d0:	es fwait
  4290d2:	mov    ebx,0xc6c61997
  4290d7:	pop    ss
  4290d8:	add    al,0x79
  4290da:	or     BYTE PTR [eax+0x53],dh
  4290dd:	cmp    DWORD PTR cs:[ebx+0x58],ebx
  4290e1:	jle    0x429153
  4290e3:	sub    eax,ebx
  4290e5:	xlat   BYTE PTR ds:[ebx]
  4290e6:	pop    esp
  4290e7:	cwde   
  4290e8:	bound  ecx,QWORD PTR [ecx-0x2f905f02]
  4290ee:	aaa    
  4290ef:	out    0x27,eax
  4290f1:	je     0x4290d3
  4290f3:	(bad)  
  4290f4:	pop    ebp
  4290f5:	lods   al,BYTE PTR ds:[esi]
  4290f6:	mov    esp,0x82b717ba
  4290fb:	xchg   edi,eax
  4290fc:	sar    BYTE PTR [edx],cl
  4290fe:	and    eax,0x4c56c894
  429103:	jmp    0xee5:0x5bd238ab
  42910a:	lahf   
  42910b:	push   edi
  42910c:	outs   dx,BYTE PTR ds:[esi]
  42910d:	sbb    ch,BYTE PTR [ebp-0x2]
  429110:	mov    WORD PTR [esi-0x7e],?
  429113:	loope  0x4290af
  429115:	adc    dh,cl
  429117:	aad    0xc0
  429119:	lahf   
  42911a:	xlat   BYTE PTR ds:[ebx]
  42911b:	stos   BYTE PTR es:[edi],al
  42911c:	mov    eax,ds:0x5de81303
  429121:	sub    DWORD PTR [ebx],esp
  429123:	(bad)  
  429124:	lods   eax,DWORD PTR ds:[esi]
  429125:	or     WORD PTR [ebp+0x3d],ax
  429129:	xor    esi,DWORD PTR [ecx-0x62ddb3a0]
  42912f:	push   es
  429130:	fxam   
  429132:	sbb    BYTE PTR [ebx+0x1dace4ca],bl
  429138:	or     ecx,edx
  42913a:	mov    dl,0x94
  42913c:	test   DWORD PTR [ebx+0x59583a3e],0xc558c792
  429146:	add    esp,DWORD PTR [eax+0x67]
  429149:	rol    BYTE PTR [ebp+0x533bac42],0xaa
  429150:	mov    ah,0x6d
  429152:	fwait
  429153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429154:	or     ah,dl
  429156:	fldenv [ecx]
  429158:	add    eax,DWORD PTR [edi-0x38394ebb]
  42915e:	ret    
  42915f:	iret   
  429160:	repz jle 0x42918e
  429163:	adc    al,0xa6
  429165:	jns    0x4291cc
  429167:	sbb    edi,DWORD PTR [ebx]
  429169:	in     eax,0x9c
  42916b:	add    DWORD PTR [esi],ebx
  42916d:	adc    BYTE PTR [ecx],bl
  42916f:	ss sub al,0x84
  429172:	inc    esp
  429173:	xchg   BYTE PTR [esi-0x466eea54],bh
  429179:	sub    ah,BYTE PTR [ecx]
  42917b:	test   DWORD PTR [eax],edx
  42917d:	fistp  WORD PTR [eax-0x1496345]
  429183:	shr    esi,0x4
  429186:	push   cs
  429187:	jo     0x4291e8
  429189:	mov    al,0x48
  42918b:	inc    ebx
  42918c:	inc    edi
  42918d:	mov    ch,0xc5
  42918f:	stos   DWORD PTR es:[edi],eax
  429190:	adc    DWORD PTR [bp+si-0x4d],0xffffffc0
  429195:	jmp    0x1bb0:0x78889586
  42919c:	pop    esi
  42919d:	mov    edi,0xc6774cf9
  4291a2:	pushf  
  4291a3:	pop    es
  4291a4:	stos   DWORD PTR es:[edi],eax
  4291a5:	gs int 0xfa
  4291a8:	sub    edx,DWORD PTR [esi-0x528ebebf]
  4291ae:	cld    
  4291af:	inc    bp
  4291b1:	sub    ebp,ebx
  4291b3:	pop    ss
  4291b4:	adc    ebx,DWORD PTR ds:0x7b4edc4c
  4291ba:	xor    eax,0xd14f88b4
  4291bf:	shl    BYTE PTR [eax],0x7d
  4291c2:	sub    bl,BYTE PTR [ebx-0x7a845499]
  4291c8:	sub    edx,edx
  4291ca:	xor    ebp,DWORD PTR [edi-0x3b]
  4291cd:	xor    ah,BYTE PTR [ebx]
  4291cf:	scas   al,BYTE PTR es:[edi]
  4291d0:	dec    ecx
  4291d1:	push   0x3f5e34e
  4291d6:	ins    DWORD PTR es:[edi],dx
  4291d7:	ins    DWORD PTR es:[edi],dx
  4291d8:	adc    dl,BYTE PTR [ebx+0x2a]
  4291db:	mov    bh,0xcc
  4291dd:	add    ebx,DWORD PTR [ebp*2+0x3143096]
  4291e4:	xchg   esi,eax
  4291e5:	or     DWORD PTR [edx+0x39faad5c],esi
  4291eb:	popf   
  4291ec:	mov    dh,0x41
  4291ee:	std    
  4291ef:	mov    dl,0x24
  4291f1:	bound  eax,QWORD PTR [ecx+0x1577142c]
  4291f7:	jge    0x429265
  4291f9:	mov    edi,0x8b6e2c73
  4291fe:	jae    0x42922e
  429200:	retf   
  429201:	loope  0x42921a
  429203:	sahf   
  429204:	jmp    0x9a545b2d
  429209:	aad    0x68
  42920b:	mov    al,BYTE PTR [eax+0x1b]
  42920e:	push   ds
  42920f:	push   edx
  429210:	xchg   ebx,eax
  429211:	test   al,0x20
  429213:	cmc    
  429214:	mov    ds:0xf66f9ad8,eax
  429219:	adc    al,0xd
  42921b:	adc    al,0xe
  42921d:	loope  0x4291d4
  42921f:	mov    al,0x5
  429221:	in     al,0xa0
  429223:	mov    al,BYTE PTR [ecx-0x19e40352]
  429229:	es (bad) 
  42922b:	call   0x4ee9:0x9e38ec7b
  429232:	push   ss
  429233:	and    BYTE PTR [edi],dh
  429235:	jmp    0xfc7c:0x740d5322
  42923c:	aad    0xc5
  42923e:	in     al,dx
  42923f:	push   esp
  429240:	enter  0x73cf,0xa4
  429244:	retf   0x6518
  429247:	pop    edi
  429248:	aaa    
  429249:	out    dx,al
  42924a:	mov    edx,0x7f2a1733
  42924f:	dec    ebp
  429250:	adc    esi,DWORD PTR [ecx]
  429252:	pusha  
  429253:	lods   eax,DWORD PTR ds:[esi]
  429254:	pushf  
  429255:	mov    ebp,0xbb91cd04
  42925a:	pusha  
  42925b:	xor    eax,0x6d122f25
  429260:	retf   
  429261:	mov    cl,0x3b
  429263:	inc    eax
  429264:	mov    dh,BYTE PTR [ebp-0x14c4332]
  42926a:	jmp    0x793befe1
  42926f:	test   DWORD PTR [eax+0x49d2f442],ecx
  429275:	sar    DWORD PTR gs:[ecx+ebp*4],0x8f
  42927a:	scas   al,BYTE PTR es:[edi]
  42927b:	mov    al,0x79
  42927d:	ret    0xb970
  429280:	pop    es
  429281:	jecxz  0x4292f4
  429283:	lea    ebx,[esi-0x68]
  429286:	pusha  
  429287:	and    al,0xe0
  429289:	mov    bl,0xad
  42928b:	imul   esp,DWORD PTR [eax+0x65],0x54174841
  429292:	push   esi
  429293:	fwait
  429294:	ins    BYTE PTR es:[edi],dx
  429295:	(bad)  
  429296:	in     eax,0xb4
  429298:	(bad)  
  429299:	loopne 0x429293
  42929b:	dec    esi
  42929c:	fwait
  42929d:	fwait
  42929e:	and    dh,BYTE PTR [ecx-0x43]
  4292a1:	or     esi,DWORD PTR [ecx-0x74]
  4292a4:	(bad)  
  4292a5:	clc    
  4292a6:	out    dx,eax
  4292a7:	in     al,0x5c
  4292a9:	mov    ch,0x22
  4292ab:	jmp    0x7738d3de
  4292b0:	les    ebx,FWORD PTR [edi+ebx*8-0x30]
  4292b4:	jmp    0x8eae:0xd5d287da
  4292bb:	sub    BYTE PTR [ecx],bh
  4292bd:	dec    esi
  4292be:	adc    cl,dl
  4292c0:	(bad)  
  4292c1:	pushf  
  4292c2:	jnp    0x429283
  4292c4:	stos   BYTE PTR es:[edi],al
  4292c5:	aad    0x9
  4292c7:	jmp    0x7e6b391e
  4292cc:	pop    esp
  4292cd:	adc    edi,eax
  4292cf:	aas    
  4292d0:	pop    esi
  4292d1:	cld    
  4292d2:	mov    ds,WORD PTR [ecx+0x5]
  4292d5:	ins    DWORD PTR es:[edi],dx
  4292d6:	mov    ds:0x9604a131,al
  4292db:	inc    ecx
  4292dc:	mov    DWORD PTR [edx-0x2f592348],ebp
  4292e2:	mov    esi,DWORD PTR [eax-0x75]
  4292e5:	sbb    eax,0x65715f27
  4292ea:	cmp    DWORD PTR [edi-0x78907016],esi
  4292f0:	jp     0x42932d
  4292f2:	push   es
  4292f3:	push   ebp
  4292f4:	sbb    DWORD PTR [esi-0x35],ebx
  4292f7:	iret   
  4292f8:	popa   
  4292f9:	pop    ecx
  4292fa:	rol    BYTE PTR ds:0x67c17cc2,cl
  429300:	pop    ebx
  429301:	mov    eax,ds:0xe30c0dd4
  429306:	ret    0xd10
  429309:	jo     0x42931b
  42930b:	and    DWORD PTR [edx],ecx
  42930d:	(bad)  [eax+0x475b7130]
  429313:	mov    ebp,fs
  429315:	cmp    DWORD PTR [edx],edx
  429317:	push   fs
  429319:	sub    dl,BYTE PTR [edi+edx*2]
  42931c:	mov    esp,DWORD PTR [ebx-0xb]
  42931f:	adc    al,0x37
  429321:	push   ebp
  429322:	sbb    al,0xe9
  429324:	mov    eax,ds:0x78e86b35
  429329:	ds into 
  42932b:	sbb    ecx,DWORD PTR [edi+0x6184ef18]
  429331:	mov    eax,0x99b055c6
  429336:	dec    ecx
  429337:	les    edi,FWORD PTR [edi+edi*4]
  42933a:	aas    
  42933b:	xor    DWORD PTR [edx-0x5f],ebx
  42933e:	inc    esp
  42933f:	xchg   edx,eax
  429340:	sub    ecx,ebp
  429342:	leave  
  429343:	adc    al,0x15
  429345:	sub    al,0xea
  429347:	inc    edi
  429348:	mov    al,0xe5
  42934a:	and    DWORD PTR [edi-0x65df4348],edi
  429350:	xlat   BYTE PTR ds:[ebx]
  429351:	test   eax,0x31e70add
  429356:	xchg   ebp,eax
  429357:	in     al,0xce
  429359:	fstp   TBYTE PTR [ecx+0x3d]
  42935c:	dec    ebx
  42935d:	pop    ds
  42935e:	idiv   DWORD PTR [ecx]
  429360:	das    
  429361:	outs   dx,DWORD PTR ds:[esi]
  429362:	jge    0x4293ba
  429364:	mov    cl,BYTE PTR [ebx]
  429366:	pop    edx
  429367:	imul   DWORD PTR [ecx+0x2c946cbe]
  42936d:	ins    DWORD PTR es:[edi],dx
  42936e:	stos   DWORD PTR es:[edi],eax
  42936f:	in     al,0xaa
  429371:	cmp    dl,0x19
  429374:	jecxz  0x4293df
  429376:	(bad)  
  429377:	(bad)  
  429378:	xor    DWORD PTR [edi-0x2bbe3628],ecx
  42937e:	mov    eax,ds:0x623068e1
  429383:	setp   BYTE PTR [ebp+0x53]
  429387:	(bad)  
  429388:	das    
  429389:	sahf   
  42938a:	dec    ecx
  42938b:	or     BYTE PTR [ecx-0x2],ah
  42938e:	sbb    edx,eax
  429390:	sub    ebp,ecx
  429392:	add    DWORD PTR [ebx+0x56],ebx
  429395:	out    dx,eax
  429396:	mov    ss,WORD PTR [eax]
  429398:	push   ds
  429399:	xchg   ecx,eax
  42939a:	xor    al,0xda
  42939c:	cli    
  42939d:	bswap  edi
  42939f:	mov    eax,ds:0x7f73dc4d
  4293a4:	nop
  4293a5:	cmp    DWORD PTR fs:[ecx+0x23],0x22cc180a
  4293ad:	clc    
  4293ae:	mov    bh,0x10
  4293b0:	jmp    0x32baa9ef
  4293b5:	(bad)  
  4293b7:	hlt    
  4293b8:	mov    ecx,0x80c0ccea
  4293bd:	cmp    al,0x20
  4293bf:	ja     0x4293bd
  4293c1:	inc    ebp
  4293c2:	fist   DWORD PTR [eax]
  4293c4:	fwait
  4293c5:	pop    es
  4293c6:	cmp    al,BYTE PTR [esi+0x7454ae9d]
  4293cc:	xor    edx,DWORD PTR ds:0x215321c2
  4293d2:	loop   0x429355
  4293d4:	inc    DWORD PTR [edx+ebx*2-0x59]
  4293d8:	test   ah,dh
  4293da:	mov    edi,0xdc797f50
  4293df:	add    BYTE PTR [eax-0x7ad33458],dh
  4293e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293e6:	inc    ch
  4293e8:	in     eax,0x49
  4293ea:	fistp  QWORD PTR ds:0xab144a09
  4293f0:	jmp    0x269:0xb567b897
  4293f7:	jb     0x429448
  4293f9:	jg     0x429421
  4293fb:	mov    cl,0x85
  4293fd:	push   esp
  4293fe:	jbe    0x4293a7
  429400:	push   edx
  429401:	pop    ss
  429402:	ror    BYTE PTR cs:[ebx],cl
  429405:	adc    esi,esi
  429407:	outs   dx,DWORD PTR ds:[esi]
  429408:	scas   al,BYTE PTR es:[edi]
  429409:	mov    dh,dl
  42940b:	dec    ebx
  42940c:	retf   0x3db2
  42940f:	nop
  429410:	xor    al,0x23
  429412:	jecxz  0x429399
  429414:	sub    eax,0x1349f7e0
  429419:	mov    ch,0xc9
  42941b:	cmp    eax,0xb2efdd6d
  429420:	sub    DWORD PTR [eax],0x52
  429423:	mov    dl,0x8d
  429425:	(bad)  
  429427:	or     ecx,ebx
  429429:	jmp    0x42943f
  42942b:	jge    0x4293c6
  42942d:	imul   esi,edx,0xffffff9c
  429430:	xchg   ebp,eax
  429431:	sub    eax,DWORD PTR ds:0x67d1448e
  429437:	ror    DWORD PTR [ecx],cl
  429439:	xchg   ecx,eax
  42943a:	lea    esp,[ecx-0x3]
  42943d:	mov    ebp,0x4af30d71
  429442:	xchg   esi,eax
  429443:	adc    BYTE PTR [esp+ebp*8-0x57],ah
  429447:	sbb    dh,dl
  429449:	inc    ebp
  42944a:	pusha  
  42944b:	adc    DWORD PTR [esi-0x2acf7c64],0xea64f7e2
  429455:	in     al,dx
  429456:	in     eax,0xa2
  429458:	pop    eax
  429459:	clc    
  42945a:	dec    ebx
  42945b:	xchg   BYTE PTR [edx+edx*1+0x47],bh
  42945f:	push   eax
  429460:	dec    ecx
  429461:	retf   0xfe59
  429464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429465:	and    BYTE PTR [ecx-0xc334c6c],0xa7
  42946c:	rcr    edx,cl
  42946e:	ficomp DWORD PTR [ebp+ebx*1+0x60285671]
  429475:	out    0xb6,al
  429477:	adc    bh,0x13
  42947a:	test   DWORD PTR [eax-0x28c56232],esp
  429480:	sub    edi,DWORD PTR [esi-0x70]
  429483:	ret    0xc51
  429486:	out    dx,eax
  429487:	push   0xd6fb5cba
  42948c:	xchg   edi,eax
  42948d:	mov    eax,edi
  42948f:	dec    ebx
  429490:	and    cl,0x3f
  429493:	pop    edi
  429494:	aad    0x1e
  429496:	test   eax,0xcf34ad72
  42949b:	and    DWORD PTR [esi+0x50],edx
  42949e:	sti    
  42949f:	fiadd  WORD PTR [ebp-0x43134e7a]
  4294a5:	push   edi
  4294a6:	mov    eax,0x86b9b038
  4294ab:	mov    ds:0x5183869f,al
  4294b0:	js     0x429520
  4294b2:	mov    DWORD PTR [esp+edi*2],ecx
  4294b5:	and    eax,0xa65e2591
  4294ba:	inc    ebx
  4294bb:	aas    
  4294bc:	test   eax,0x4a37679
  4294c1:	adc    eax,0x8693a308
  4294c6:	scas   eax,DWORD PTR es:[edi]
  4294c7:	add    ecx,DWORD PTR [ecx+0x77]
  4294ca:	xchg   DWORD PTR [edi+0x637b24e8],esp
  4294d0:	adc    cl,BYTE PTR [ecx]
  4294d2:	mov    cl,0x94
  4294d4:	add    BYTE PTR [edi+0x43],dh
  4294d7:	xchg   ebx,eax
  4294d8:	test   al,0x6c
  4294da:	ins    BYTE PTR es:[edi],dx
  4294db:	cmp    al,0x7c
  4294dd:	jnp    0x4294c3
  4294df:	in     eax,dx
  4294e0:	inc    esi
  4294e1:	in     al,dx
  4294e2:	or     al,0xdb
  4294e4:	add    bl,BYTE PTR [esi+0x4b3fc904]
  4294ea:	(bad)  
  4294eb:	pop    eax
  4294ec:	cwde   
  4294ed:	rcr    DWORD PTR [ebx],cl
  4294ef:	fild   DWORD PTR [esi]
  4294f1:	and    cl,BYTE PTR ss:[eax-0x37]
  4294f5:	pop    ss
  4294f6:	xor    al,0xad
  4294f8:	add    ah,BYTE PTR [ebx+0x6]
  4294fb:	aam    0x3d
  4294fd:	hlt    
  4294fe:	adc    DWORD PTR [esi-0x5c6f2c5d],ebx
  429504:	cmp    cl,BYTE PTR [edx+0x6a19375b]
  42950a:	xchg   edi,eax
  42950b:	scas   eax,DWORD PTR es:[edi]
  42950c:	jae    0x42956f
  42950e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42950f:	(bad)  
  429510:	mov    ds:0xcdf76ec3,eax
  429515:	adc    DWORD PTR [edi],0x3b842ec9
  42951b:	xor    BYTE PTR [ebx+0x14409a64],al
  429521:	dec    edx
  429522:	repnz add BYTE PTR [ecx-0x64da8d24],0x67
  42952a:	loope  0x4295a4
  42952c:	fwait
  42952d:	inc    ecx
  42952e:	xchg   esp,eax
  42952f:	xchg   edx,eax
  429530:	or     al,0xa2
  429532:	adc    DWORD PTR [ecx],ecx
  429534:	xchg   edx,eax
  429535:	int3   
  429536:	or     eax,DWORD PTR [edx+0x7bed774c]
  42953c:	hlt    
  42953d:	pop    esp
  42953e:	jle    0x429534
  429540:	push   0x1a
  429542:	out    0xed,eax
  429544:	add    DWORD PTR [edi+0x1a],0x143931bd
  42954b:	cwde   
  42954c:	push   esi
  42954d:	pop    ds
  42954e:	out    0x4b,eax
  429550:	inc    ebx
  429551:	sub    BYTE PTR [ebp+0x2a],dh
  429554:	xchg   edx,eax
  429555:	aam    0xb8
  429557:	and    edi,edi
  429559:	mov    bh,0x94
  42955b:	mov    gs,WORD PTR [edx]
  42955d:	jb     0x4295d0
  42955f:	repnz sub ecx,DWORD PTR [esi]
  429562:	and    DWORD PTR [ebp+eax*8+0x4a],esi
  429566:	xchg   edi,eax
  429567:	call   0x218:0xab875186
  42956e:	(bad)  
  42956f:	pop    ecx
  429570:	jne    0x4295a1
  429572:	into   
  429573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429574:	push   0x4a
  429576:	(bad)  
  429577:	sbb    ebp,DWORD PTR [ebx+0xf]
  42957a:	ins    BYTE PTR es:[edi],dx
  42957b:	lods   al,BYTE PTR ds:[esi]
  42957c:	sbb    al,0x68
  42957e:	pop    ax
  429580:	arpl   WORD PTR [ecx-0x3b],dx
  429583:	(bad)  
  429584:	sub    eax,0x42857848
  429589:	push   eax
  42958a:	xor    esp,esi
  42958c:	fnsave [ebx+0xe5a334e]
  429592:	push   ecx
  429593:	or     ecx,eax
  429595:	push   eax
  429596:	loope  0x42959a
  429598:	pop    esi
  429599:	add    DWORD PTR [eax],ebx
  42959b:	inc    edx
  42959c:	pop    eax
  42959d:	push   eax
  42959e:	popf   
  42959f:	xchg   ecx,eax
  4295a0:	sar    DWORD PTR [edx],1
  4295a2:	retf   
  4295a3:	jnp    0x42957c
  4295a5:	pop    edi
  4295a6:	pop    es
  4295a7:	fild   WORD PTR [ebx]
  4295a9:	ins    DWORD PTR es:[edi],dx
  4295aa:	pop    ds
  4295ab:	outs   dx,BYTE PTR ds:[esi]
  4295ac:	(bad)  
  4295ae:	or     ch,dh
  4295b0:	loopne 0x429596
  4295b2:	add    al,0x5b
  4295b4:	push   edx
  4295b5:	test   al,0xc8
  4295b7:	or     DWORD PTR [edx],ecx
  4295b9:	dec    ebp
  4295ba:	repz sub BYTE PTR ds:0x4f63d3b6,0xd7
  4295c2:	add    eax,0xb2e9e4fe
  4295c7:	(bad)  [ebx-0xcfac0b3]
  4295cd:	ja     0x4295cc
  4295cf:	xchg   edi,eax
  4295d0:	fsubr  DWORD PTR [ebx]
  4295d2:	out    dx,eax
  4295d3:	add    al,0xb0
  4295d5:	sbb    dh,dl
  4295d7:	inc    esp
  4295d8:	cmp    BYTE PTR [edx-0x3725398b],0x99
  4295df:	popf   
  4295e0:	pop    ss
  4295e1:	mov    esp,0x4ec88edc
  4295e6:	adc    ebp,esi
  4295e8:	xlat   BYTE PTR ds:[ebx]
  4295e9:	mov    bh,0x25
  4295eb:	push   es
  4295ec:	sbb    ah,BYTE PTR [edi]
  4295ee:	pop    edi
  4295ef:	out    0xc3,al
  4295f1:	push   eax
  4295f2:	in     eax,0x73
  4295f4:	push   0x1aa78b64
  4295f9:	sbb    ebp,esi
  4295fb:	fwait
  4295fc:	or     eax,0xccb8902e
  429601:	inc    eax
  429602:	adc    DWORD PTR [eax+0x24443075],ebx
  429608:	sar    ch,1
  42960a:	mov    BYTE PTR fs:[ebp+0x14],0xa
  42960f:	xchg   esp,eax
  429610:	aam    0xb6
  429612:	sub    BYTE PTR ds:0x59968a0a,al
  429618:	ins    BYTE PTR es:[edi],dx
  429619:	call   0x3e81:0xa2b60523
  429620:	ss jne 0x429678
  429623:	and    DWORD PTR [edi+0x67],ecx
  429626:	lahf   
  429627:	dec    edi
  429628:	cld    
  429629:	test   eax,0xf2d18923
  42962e:	cdq    
  42962f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429630:	lods   eax,DWORD PTR ds:[esi]
  429631:	jns    0x42960a
  429633:	mov    DWORD PTR [esi+0x79],eax
  429636:	mov    eax,ds:0xa6d34223
  42963b:	adc    eax,esi
  42963d:	ret    0x7f28
  429640:	push   esi
  429641:	into   
  429642:	rcr    BYTE PTR [eax],1
  429644:	arpl   WORD PTR [ebp-0x5e],bx
  429647:	mov    al,ds:0x7263b7b1
  42964c:	add    al,0x4f
  42964e:	test   ebx,0x6c1a3a82
  429654:	dec    ebp
  429655:	or     dh,0xf
  429658:	jge    0x42966b
  42965a:	xchg   edx,eax
  42965b:	lahf   
  42965c:	xchg   BYTE PTR [esi],cl
  42965e:	xchg   edi,eax
  42965f:	dec    eax
  429660:	test   eax,0x6887893e
  429665:	cld    
  429666:	xchg   DWORD PTR [edx+eax*8-0x5d65877c],ebx
  42966d:	pop    esi
  42966e:	mov    es,ecx
  429670:	adc    BYTE PTR [ebx+esi*2+0x7e],ah
  429674:	hlt    
  429675:	(bad)  
  429676:	enter  0x1aee,0x25
  42967a:	rcl    BYTE PTR [edx],1
  42967c:	call   0x7b17776c
  429681:	retf   
  429682:	fdivrp st(3),st
  429684:	aas    
  429685:	shr    BYTE PTR [edx+0x1ec64198],0x99
  42968c:	mov    gs,WORD PTR [ecx-0x38]
  42968f:	or     ch,BYTE PTR [ebp-0xf]
  429692:	out    0x87,eax
  429694:	cmp    eax,DWORD PTR [edi+0x3d5181]
  42969a:	(bad)  
  42969c:	jmp    0x644:0x64fecbb0
  4296a3:	adc    eax,0xa3a2ab36
  4296a8:	jno    0x4296a6
  4296aa:	call   0x26d26fe2
  4296af:	in     eax,0x83
  4296b1:	sbb    dl,BYTE PTR [esi-0x66]
  4296b4:	loopne 0x42966d
  4296b6:	xchg   ebx,eax
  4296b7:	pop    edx
  4296b8:	call   0x128694fb
  4296bd:	sbb    dl,BYTE PTR [ecx]
  4296bf:	jmp    0x1831:0xbf6d5c27
  4296c6:	mul    DWORD PTR [edi+0x2f]
  4296c9:	lds    ebp,FWORD PTR [esp+edx*1+0x78]
  4296cd:	jg     0x429660
  4296cf:	push   eax
  4296d0:	pop    ebp
  4296d1:	hlt    
  4296d2:	jmp    0xaea462a9
  4296d7:	imul   esp,DWORD PTR [edx],0x6f
  4296da:	mov    ah,BYTE PTR [esi+0x2c]
  4296dd:	jne    0x4296c4
  4296df:	inc    BYTE PTR [edx-0x64]
  4296e2:	in     eax,dx
  4296e3:	ja     0x4296c0
  4296e5:	out    0x30,eax
  4296e7:	(bad)  
  4296e8:	mov    ecx,0x97a30a6
  4296ed:	mov    eax,ds:0xae141673
  4296f2:	mov    al,ds:0xc889c61
  4296f7:	(bad)  
  4296f9:	ret    
  4296fa:	dec    esi
  4296fb:	bound  esp,QWORD PTR ds:0x6aa040bd
  429701:	ror    BYTE PTR [edx-0x2453022a],cl
  429707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429708:	clc    
  429709:	mov    bl,0x13
  42970b:	lock or ebp,DWORD PTR [eax-0x3fa5097f]
  429712:	push   0x7b
  429714:	cld    
  429715:	test   BYTE PTR [esi],0x8a
  429718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429719:	xchg   edi,eax
  42971a:	jno    0x429700
  42971c:	jmp    0xb74c:0x5b732ebd
  429723:	std    
  429724:	test   al,al
  429726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429727:	stos   DWORD PTR es:[edi],eax
  429728:	test   DWORD PTR [esi+0x1a792744],esi
  42972e:	push   0x4cd827e8
  429733:	popf   
  429734:	sub    BYTE PTR [edx+0x63e5ce36],cl
  42973a:	sbb    DWORD PTR [ebx-0x2a41f6bb],eax
  429740:	pop    eax
  429741:	enter  0xe79a,0x8a
  429745:	lea    esp,[edi]
  429747:	or     BYTE PTR [ecx],bh
  429749:	mov    ebx,0xff679739
  42974e:	(bad)  
  42974f:	jnp    0x42973f
  429751:	inc    ecx
  429752:	inc    esp
  429753:	fiadd  WORD PTR [edi]
  429755:	repnz ins BYTE PTR es:[edi],dx
  429757:	data16 mov BYTE PTR [edi],cl
  42975a:	adc    dh,BYTE PTR [ebx]
  42975c:	mov    ah,0x5a
  42975e:	mov    dl,0xb1
  429760:	push   ebp
  429761:	ret    
  429762:	ins    BYTE PTR es:[edi],dx
  429763:	mov    eax,ds:0x9ae8fb1
  429768:	iret   
  429769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42976a:	(bad)  
  42976b:	idiv   dh
  42976d:	fist   DWORD PTR [eax+0x1e]
  429770:	mov    dl,0x2b
  429772:	push   ecx
  429773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429774:	(bad)  
  429775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429776:	add    eax,DWORD PTR [edi+0x52]
  429779:	pusha  
  42977a:	sbb    DWORD PTR [edx],esi
  42977c:	mov    al,0x3d
  42977e:	fs cld 
  429780:	fdiv   st,st(2)
  429782:	dec    edx
  429783:	push   edx
  429784:	jns    0x42979b
  429786:	and    bl,bl
  429788:	ficom  WORD PTR [ebx-0x57]
  42978b:	ret    0x9125
  42978e:	sar    BYTE PTR [esi+edx*8+0xfa70035],cl
  429795:	add    dh,ch
  429797:	lods   eax,DWORD PTR ds:[esi]
  429798:	mov    bh,0xec
  42979a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42979b:	movntq QWORD PTR [ecx],mm4
  42979e:	cld    
  42979f:	or     ch,BYTE PTR [eax+edi*2-0x15]
  4297a3:	mov    esi,0x8dc360cc
  4297a8:	jo     0x4297e4
  4297aa:	data16 jle 0x429779
  4297ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297ae:	push   ds
  4297af:	mov    ds:0xfb952d8a,eax
  4297b4:	xor    BYTE PTR [eax+0x4c099309],bh
  4297ba:	jno    0x42979f
  4297bc:	faddp  st(6),st
  4297be:	pop    edx
  4297bf:	jb     0x4297a8
  4297c1:	jmp    0x9afd:0x7cb95eae
  4297c8:	push   ebx
  4297c9:	mov    al,0xb8
  4297cb:	pop    edi
  4297cc:	in     al,dx
  4297cd:	test   DWORD PTR [esi-0x55cc3dbc],esi
  4297d3:	dec    DWORD PTR [ebp+0x24]
  4297d6:	imul   ebp,DWORD PTR [ebx+0x43],0xffffff93
  4297da:	cmp    BYTE PTR [ebx],al
  4297dc:	push   esi
  4297dd:	adc    al,0xdd
  4297df:	int    0x74
  4297e1:	mov    al,0xce
  4297e3:	mov    al,ds:0x35d9efbe
  4297e8:	imul   ebp,DWORD PTR [edx+0x3ed2d409],0x4d68b042
  4297f2:	adc    al,0x72
  4297f4:	dec    edx
  4297f6:	xchg   ecx,eax
  4297f7:	adc    DWORD PTR [eax],esi
  4297f9:	inc    edx
  4297fa:	jecxz  0x429830
  4297fc:	add    eax,ecx
  4297fe:	mov    ebx,0x60001adf
  429803:	out    dx,al
  429804:	push   es
  429805:	inc    eax
  429806:	in     eax,0xb2
  429808:	enter  0x9b6c,0xc8
  42980c:	mov    BYTE PTR [ebp+0x350493dd],cl
  429812:	or     DWORD PTR [edi-0x52],edi
  429815:	and    dh,BYTE PTR [ebx-0x46174621]
  42981b:	data16 in al,0x92
  42981e:	sahf   
  42981f:	(bad)  
  429820:	cmp    eax,0x5e83634b
  429825:	fisttp WORD PTR [edi+0x3d]
  429828:	sbb    dl,BYTE PTR [ecx+0x79b564b6]
  42982e:	xlat   BYTE PTR ds:[ebx]
  42982f:	outs   dx,BYTE PTR ds:[esi]
  429830:	fcmovne st,st(4)
  429832:	shl    ebx,0xbf
  429835:	push   edx
  429836:	xchg   ebp,eax
  429837:	repz jmp 0x429868
  42983a:	pushf  
  42983b:	or     BYTE PTR ds:0x318702d7,cl
  429841:	mov    dh,0x2a
  429843:	cmp    DWORD PTR [ecx+0x1a35af59],0xe586c0c6
  42984d:	call   0xc926557d
  429852:	mov    esp,0x6de0fc7d
  429857:	rol    ecx,0xe8
  42985a:	cmp    eax,0xb72fc949
  42985f:	sbb    edx,DWORD PTR [edx+esi*1]
  429862:	push   0x4a
  429864:	mov    bh,BYTE PTR [edx]
  429866:	lods   eax,DWORD PTR ds:[esi]
  429867:	inc    ebp
  429868:	pop    ecx
  429869:	adc    eax,0x313cfde3
  42986e:	mov    eax,ecx
  429870:	adc    eax,0xcdc64604
  429875:	sar    DWORD PTR [eax],1
  429877:	mov    ds:0xa6e4cdb9,eax
  42987c:	cmp    al,0x17
  42987e:	imul   eax,DWORD PTR [edx],0xffffffb4
  429881:	inc    eax
  429882:	int    0xf7
  429884:	push   ds
  429885:	stos   BYTE PTR es:[edi],al
  429886:	ret    0x475b
  429889:	cli    
  42988a:	fld    TBYTE PTR [ebx-0x21af4370]
  429890:	xchg   esi,eax
  429891:	or     edx,DWORD PTR [ecx+eax*2]
  429894:	shl    BYTE PTR [ecx-0x39],cl
  429897:	mov    cl,bh
  429899:	popa   
  42989a:	dec    edx
  42989b:	inc    ebx
  42989c:	fisubr WORD PTR [esi+ebp*4-0x24ceeace]
  4298a3:	mov    ah,0xdd
  4298a5:	lahf   
  4298a6:	repnz xchg ecx,eax
  4298a8:	lds    esi,FWORD PTR [ebp-0x672c9884]
  4298ae:	fwait
  4298af:	lock out 0x6,eax
  4298b2:	int    0x66
  4298b4:	and    eax,0x3b762330
  4298b9:	das    
  4298ba:	and    ch,al
  4298bc:	mov    ecx,0x3e7b65e9
  4298c1:	sahf   
  4298c2:	dec    edx
  4298c3:	mov    dl,0xa4
  4298c5:	fs mov eax,0xb22e3034
  4298cb:	daa    
  4298cc:	pop    ebp
  4298cd:	xlat   BYTE PTR ds:[ebx]
  4298ce:	jo     0x4298c9
  4298d0:	(bad)  
  4298d1:	pushf  
  4298d2:	ja     0x429903
  4298d4:	pushf  
  4298d5:	icebp  
  4298d6:	(bad)  
  4298d8:	std    
  4298d9:	push   ds
  4298da:	imul   ebp,DWORD PTR ss:[esi+0x6e6a84ad],0xfffffff6
  4298e2:	mov    ch,0xee
  4298e4:	xchg   edx,eax
  4298e5:	pop    edx
  4298e6:	adc    dl,0x8c
  4298e9:	xor    eax,DWORD PTR [eax-0x4a]
  4298ec:	fadd   QWORD PTR [edi+eax*2-0x55]
  4298f0:	lock mov edi,0x7ebe923b
  4298f6:	jmp    0x9884c0e7
  4298fb:	xchg   ecx,eax
  4298fc:	xor    esp,DWORD PTR [edx+0x5a]
  4298ff:	jo     0x4298e4
  429901:	test   DWORD PTR [edx-0x26bcf6d8],ecx
  429907:	fcom   DWORD PTR [eax+0x49]
  42990a:	mov    edi,0x88f7574a
  42990f:	and    al,0x8a
  429911:	pop    ss
  429912:	int    0x55
  429914:	sbb    DWORD PTR [ebx],esi
  429916:	jmp    0x2ccd:0x9a6f7aaf
  42991d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42991e:	jmp    0x3d159fdc
  429923:	push   0x8de58649
  429928:	scas   eax,DWORD PTR es:[edi]
  429929:	dec    dl
  42992b:	imul   ebx,DWORD PTR [eax-0x71019ff0],0x6b1e7d58
  429935:	es sar BYTE PTR cs:[esi],0x1f
  42993a:	dec    ebp
  42993b:	jmp    0x4298f1
  42993d:	fcmovnbe st,st(4)
  42993f:	clc    
  429940:	or     al,BYTE PTR [edx-0x5e]
  429943:	jne    0x4299b8
  429945:	adc    DWORD PTR [esi+eax*1-0x3ca84045],ecx
  42994c:	ret    
  42994d:	imul   edi,DWORD PTR [edi],0xa6f32115
  429953:	sbb    BYTE PTR [ecx-0x31],bh
  429956:	icebp  
  429957:	int3   
  429958:	mov    es,WORD PTR [edx-0x43]
  42995b:	add    ebp,DWORD PTR [ebx+0x81345ed]
  429961:	ds and al,0xc0
  429964:	mov    cl,0x25
  429966:	push   0xfffffffa
  429968:	imul   esi,DWORD PTR [edx],0xffffffaa
  42996b:	cmp    al,0xd9
  42996e:	imul   edi,DWORD PTR [ebx+0x62],0xf2dd42c4
  429975:	mov    ecx,0x5ae9c77c
  42997a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42997b:	stos   BYTE PTR es:[edi],al
  42997c:	sub    DWORD PTR [edx],0xb8853976
  429982:	icebp  
  429983:	es jae 0x4299a2
  429986:	into   
  429987:	pop    ecx
  429988:	retf   0x8dec
  42998b:	push   edx
  42998c:	jno    0x429995
  42998e:	int    0xac
  429990:	stos   DWORD PTR es:[edi],eax
  429991:	popa   
  429992:	mov    eax,0x9bc851ac
  429997:	mov    al,0x1e
  429999:	mul    cl
  42999b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42999c:	lods   al,BYTE PTR ds:[esi]
  42999d:	(bad)  [ebx+0x46]
  4299a0:	bound  ebp,QWORD PTR [ebp+0x6c039b87]
  4299a6:	push   ebp
  4299a7:	pop    esi
  4299a8:	outs   dx,BYTE PTR ds:[esi]
  4299a9:	in     eax,dx
  4299aa:	out    0xac,eax
  4299ac:	xchg   ebp,eax
  4299ad:	sub    dl,BYTE PTR [ecx+0x50]
  4299b0:	cmp    bh,BYTE PTR [ebx-0x73]
  4299b3:	xor    DWORD PTR [edx+0x4e],esi
  4299b6:	adc    BYTE PTR [ecx-0x7d],0xe1
  4299ba:	enter  0xbc67,0x65
  4299be:	pop    ds
  4299bf:	or     BYTE PTR [eax-0x25],0xbf
  4299c3:	es js  0x429996
  4299c6:	xchg   BYTE PTR [eax-0x5b0b645c],al
  4299cc:	(bad)  
  4299cd:	test   eax,0x35b31f1f
  4299d2:	pop    ebx
  4299d3:	fistp  QWORD PTR [edx]
  4299d5:	outs   dx,BYTE PTR ds:[esi]
  4299d6:	sub    BYTE PTR [esi+0x74637495],0x8f
  4299dd:	pop    esi
  4299de:	lods   al,BYTE PTR ds:[esi]
  4299df:	(bad)  
  4299e0:	mov    ecx,0x317cead1
  4299e5:	or     esp,0x96091ec4
  4299eb:	mov    bl,0x37
  4299ed:	pop    ds
  4299ee:	shl    BYTE PTR es:[esi],0x84
  4299f2:	cmp    eax,DWORD PTR ds:0xa123dcb4
  4299f8:	jno    0x429a6d
  4299fa:	aas    
  4299fb:	cwde   
  4299fc:	test   DWORD PTR [ebx],0x149b4b92
  429a02:	sbb    edx,DWORD PTR [esi+0x42]
  429a05:	jne    0x4299b9
  429a07:	cmp    dl,bh
  429a09:	lahf   
  429a0a:	dec    edx
  429a0b:	mov    al,ds:0x455ed4b3
  429a10:	and    BYTE PTR [ecx-0x8],bl
  429a13:	test   DWORD PTR [eax+0x3edff31a],ebp
  429a19:	mov    BYTE PTR [esi+edi*2+0x3b96de9c],0xd6
  429a21:	pop    esp
  429a22:	fwait
  429a23:	mov    ebp,0x6711ffa3
  429a28:	bswap  ebp
  429a2a:	adc    DWORD PTR [ecx-0x5e],ebx
  429a2d:	sub    al,0xa0
  429a2f:	mov    ecx,0xe4547494
  429a34:	out    0x1f,eax
  429a36:	pop    ecx
  429a37:	mov    dh,0xdc
  429a39:	sub    dh,BYTE PTR [edx]
  429a3b:	call   0x7585822a
  429a40:	push   ds
  429a41:	push   cs
  429a42:	add    edx,DWORD PTR [edi+edi*8]
  429a45:	cs iret 
  429a47:	jmp    FWORD PTR [edx+0x75]
  429a4a:	add    edx,DWORD PTR [edx+eax*1]
  429a4d:	mov    cl,0x8b
  429a4f:	out    0xbb,eax
  429a51:	jne    0x429a30
  429a53:	stos   BYTE PTR es:[edi],al
  429a54:	scas   al,BYTE PTR es:[edi]
  429a55:	lods   al,BYTE PTR ds:[esi]
  429a56:	add    DWORD PTR [ebp+0x7ed78518],eax
  429a5c:	aam    0x38
  429a5e:	movlps QWORD PTR [ecx],xmm4
  429a61:	(bad)  
  429a62:	pop    edi
  429a63:	mov    dh,cl
  429a65:	mov    edx,0x4ddd27d7
  429a6a:	mov    ds,WORD PTR [eax-0x1a]
  429a6d:	push   ebx
  429a6e:	out    dx,al
  429a6f:	push   eax
  429a70:	nop
  429a71:	iret   
  429a72:	jl     0x429ac1
  429a74:	pop    ebp
  429a75:	mov    ebx,0xbf87fe87
  429a7a:	xchg   DWORD PTR [edi],esp
  429a7c:	push   cs
  429a7d:	clc    
  429a7e:	add    DWORD PTR [eax-0x2a5b15df],eax
  429a84:	ins    BYTE PTR es:[edi],dx
  429a85:	adc    esp,DWORD PTR [eax-0x47eb3cb0]
  429a8b:	fwait
  429a8c:	xchg   DWORD PTR [edx],edx
  429a8e:	push   esi
  429a8f:	adc    BYTE PTR es:[edi-0x16],0x1f
  429a94:	fld    QWORD PTR [ecx]
  429a96:	aam    0xd6
  429a98:	retf   0x2dea
  429a9b:	je     0x429ae1
  429a9d:	add    bl,al
  429a9f:	sub    BYTE PTR [esi+edi*8],0xd7
  429aa3:	cmp    bl,BYTE PTR ds:0x222544dc
  429aa9:	add    ecx,ebx
  429aab:	add    edi,DWORD PTR [esi+0x663307b0]
  429ab1:	mov    ch,0xce
  429ab3:	fmul   QWORD PTR [ebp+0xd]
  429ab6:	mov    cl,0x3
  429ab8:	dec    edx
  429ab9:	out    dx,al
  429aba:	pop    ss
  429abb:	retf   0x4768
  429abe:	cmp    ah,BYTE PTR [eax-0x5faa6092]
  429ac4:	push   cs
  429ac5:	sbb    BYTE PTR [ebx-0x6d],0xd6
  429ac9:	inc    esi
  429aca:	cmp    eax,DWORD PTR [ebx+0x3411d6ca]
  429ad0:	stos   DWORD PTR es:[edi],eax
  429ad1:	ret    0xbf49
  429ad4:	outs   dx,DWORD PTR ds:[esi]
  429ad5:	call   0x8eed1ce5
  429ada:	test   BYTE PTR [esi-0x33],ah
  429add:	jnp    0x429a94
  429adf:	add    DWORD PTR [edx-0x40cb07b6],0xffffffc4
  429ae6:	dec    esp
  429ae7:	arpl   WORD PTR [ebp+0x2d],dx
  429aea:	cmp    eax,0x5d7c2107
  429aef:	mov    ch,0x38
  429af1:	jmp    0x429b70
  429af3:	enter  0x34ef,0x42
  429af7:	(bad)  
  429af8:	dec    ebp
  429af9:	imul   ebx,DWORD PTR [esi],0x9
  429afc:	xor    eax,0xdb54ddbd
  429b01:	cs clc 
  429b03:	xor    al,0xc8
  429b05:	out    0x6d,eax
  429b07:	xchg   ebx,eax
  429b08:	retf   0x5daa
  429b0b:	jmp    0x1794:0xa54ba9f
  429b12:	fldcw  WORD PTR [eax-0x4d]
  429b15:	ret    
  429b16:	popa   
  429b17:	mov    ecx,0x89d1664b
  429b1c:	cmp    al,0x9d
  429b1e:	mov    ah,0xd9
  429b20:	and    ebp,eax
  429b22:	sahf   
  429b23:	mov    ah,0x49
  429b25:	mov    esp,0xbca2a933
  429b2a:	mov    eax,0x28788d08
  429b2f:	jmp    0x429ae0
  429b31:	adc    DWORD PTR [ecx],ebp
  429b33:	sub    esp,DWORD PTR ds:0x71317bf1
  429b39:	mov    al,0x3
  429b3b:	jecxz  0x429b0b
  429b3d:	sbb    eax,0xb1767a9b
  429b42:	push   cs
  429b43:	std    
  429b44:	rol    DWORD PTR [eax+0x15ad9a2e],0xf5
  429b4b:	or     DWORD PTR [edx+0x3],0xee2af629
  429b52:	aas    
  429b53:	jg     0x429afd
  429b55:	pop    ds
  429b56:	jg     0x429aeb
  429b58:	jge    0x429ae7
  429b5a:	js     0x429af8
  429b5c:	xlat   BYTE PTR ds:[ebx]
  429b5d:	xor    eax,0xbaf16156
  429b62:	lea    esp,[eax+0x57a50ca1]
  429b68:	and    dl,dl
  429b6a:	and    al,BYTE PTR [edx+edx*8-0x5c]
  429b6e:	mov    dh,0x3f
  429b70:	jmp    0xa374055d
  429b75:	aad    0xcb
  429b77:	in     al,0x74
  429b79:	push   ss
  429b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b7b:	jns    0x429b19
  429b7d:	sbb    al,0xb9
  429b7f:	sub    bl,BYTE PTR [edi]
  429b81:	jnp    0x429bb2
  429b83:	sbb    BYTE PTR [ecx+0x31576a9e],dl
  429b89:	call   0xc92d:0xde87df35
  429b90:	jmp    0x429b85
  429b92:	mov    esi,0x49a4112
  429b97:	xchg   esp,eax
  429b98:	std    
  429b99:	sub    BYTE PTR [eax-0x3fab891e],bh
  429b9f:	cmp    eax,0x94c6f05f
  429ba4:	pop    edx
  429ba5:	add    BYTE PTR [edx],bh
  429ba7:	dec    edi
  429ba8:	(bad)  
  429ba9:	dec    ebx
  429baa:	and    BYTE PTR [edx+edx*8+0x11],cl
  429bae:	arpl   WORD PTR [eax-0x10],bp
  429bb1:	adc    eax,0xb26ac11e
  429bb6:	lds    edx,FWORD PTR [esi+0xa8bf914]
  429bbc:	push   0x413023bb
  429bc1:	mov    ecx,0xa18095b
  429bc6:	xlat   BYTE PTR ds:[ebx]
  429bc7:	(bad)  
  429bc8:	jmp    0x266de32e
  429bcd:	sti    
  429bce:	sbb    edx,esp
  429bd0:	mov    eax,0xdb4bc9e8
  429bd5:	push   esp
  429bd6:	or     ebp,edi
  429bd8:	pop    ebp
  429bd9:	mov    dl,0xbe
  429bdb:	push   edi
  429bdc:	jp     0x429c2e
  429bde:	mov    ebx,DWORD PTR [esi]
  429be0:	out    dx,eax
  429be1:	sar    BYTE PTR [edi-0x6a684f1b],1
  429be7:	nop
  429be8:	out    0x5b,al
  429bea:	jg     0x429b95
  429bec:	loope  0x429bd0
  429bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bf0:	dec    esi
  429bf1:	mov    ah,0xd6
  429bf3:	pop    esi
  429bf4:	xor    eax,0xa09d8053
  429bf9:	mov    esi,DWORD PTR [ebx+0x2a]
  429bfc:	stc    
  429bfd:	aam    0x53
  429bff:	jne    0x429c2c
  429c01:	iret   
  429c02:	inc    edi
  429c03:	xlat   BYTE PTR ds:[ebx]
  429c04:	leave  
  429c05:	jne    0x429c4f
  429c07:	jb     0x429c07
  429c09:	jmp    0x4ef9985e
  429c0e:	sbb    eax,0x5b569d3f
  429c13:	jp     0x429ba8
  429c15:	dec    esp
  429c16:	data16 ja 0x429c74
  429c19:	sahf   
  429c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c1b:	dec    esi
  429c1c:	xor    bh,dh
  429c1e:	add    ch,BYTE PTR [eax-0x1a]
  429c21:	cmp    dl,BYTE PTR [edx+ebx*4]
  429c24:	das    
  429c25:	rcr    DWORD PTR [ebx+0x5b],1
  429c28:	fidiv  WORD PTR [ecx-0x2f]
  429c2b:	(bad)  
  429c2c:	adc    edi,DWORD PTR [ecx]
  429c2e:	std    
  429c2f:	test   eax,0x9b3bfd39
  429c34:	xchg   esp,esp
  429c36:	or     cl,BYTE PTR [ecx+ebx*1+0x65ccc53f]
  429c3d:	adc    edi,DWORD PTR [esp+ecx*2]
  429c40:	pop    ebx
  429c41:	or     DWORD PTR [esp+ebp*4-0x352c9ac6],esi
  429c48:	add    eax,DWORD PTR [ecx-0x70]
  429c4b:	xchg   ebp,eax
  429c4c:	adc    edi,DWORD PTR [esi]
  429c4e:	fadd   QWORD PTR [esi]
  429c50:	shl    ah,0xca
  429c53:	xchg   edx,eax
  429c54:	mov    ah,0xe4
  429c56:	pop    edx
  429c57:	ror    esp,1
  429c59:	aam    0xbd
  429c5b:	loope  0x429c2c
  429c5d:	sbb    al,0xcc
  429c5f:	jecxz  0x429c52
  429c61:	push   ebx
  429c62:	sbb    ch,cl
  429c64:	sbb    eax,DWORD PTR [eax+0x37c94812]
  429c6a:	pop    ebp
  429c6b:	hlt    
  429c6c:	xchg   edi,eax
  429c6d:	js     0x429c7b
  429c6f:	pop    ds
  429c70:	push   0xffffff91
  429c72:	shl    DWORD PTR [esp+edi*2-0x52431bc8],cl
  429c79:	repz rcl ebp,1
  429c7c:	cli    
  429c7d:	pop    DWORD PTR [eax]
  429c7f:	not    bh
  429c81:	mov    WORD PTR [esi-0x5036787e],ss
  429c87:	mov    ds:0xba0eddcd,eax
  429c8c:	xchg   BYTE PTR [ebx+0x4ee30c87],bl
  429c92:	mov    ebx,ebx
  429c94:	inc    esp
  429c95:	xchg   edi,eax
  429c96:	addr16 addr16 push ecx
  429c99:	sbb    al,0x99
  429c9b:	and    DWORD PTR [eax-0x48],ecx
  429c9e:	push   ss
  429c9f:	es jmp 0xf72:0xd85dc221
  429ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ca8:	(bad)  
  429ca9:	int    0xb
  429cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cac:	test   BYTE PTR [esi-0x288faf5e],0xaa
  429cb3:	call   0x809b:0xe01eb69d
  429cba:	imul   ecx,DWORD PTR [eax+0x9c84199],0xc2b99709
  429cc4:	cli    
  429cc5:	arpl   sp,sp
  429cc7:	adc    esp,edi
  429cc9:	(bad)  
  429cca:	jmp    0x429d0b
  429ccc:	jbe    0x429ce4
  429cce:	mov    eax,0xd8db5681
  429cd3:	js     0x429cbc
  429cd5:	loope  0x429ce7
  429cd7:	mov    bl,0xf1
  429cd9:	jne    0x429cba
  429cdb:	stos   BYTE PTR es:[edi],al
  429cdc:	add    edi,edi
  429cde:	stos   DWORD PTR es:[edi],eax
  429cdf:	add    ebp,DWORD PTR [ebx+edi*8+0x4c]
  429ce3:	xlat   BYTE PTR ds:[ebx]
  429ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ce5:	lods   al,BYTE PTR ds:[esi]
  429ce6:	jbe    0x429cfb
  429ce8:	in     eax,dx
  429ce9:	push   ds
  429cea:	aad    0x7
  429cec:	loopne 0x429d29
  429cee:	xchg   edx,eax
  429cef:	sub    al,0xbd
  429cf1:	xchg   edi,eax
  429cf2:	outs   dx,DWORD PTR ds:[esi]
  429cf3:	inc    edi
  429cf4:	pop    esp
  429cf5:	lea    esp,[eax+0x599071f5]
  429cfb:	fs xor al,0xec
  429cfe:	icebp  
  429cff:	mov    esi,fs
  429d01:	inc    esp
  429d02:	setno  BYTE PTR [eax]
  429d05:	(bad)  
  429d07:	jge    0x429cf1
  429d09:	nop
  429d0a:	daa    
  429d0b:	shl    BYTE PTR [ebx+ebp*8-0xad3acbd],0xd6
  429d13:	sub    ch,BYTE PTR [esi+ecx*4]
  429d16:	fdiv   DWORD PTR [edi-0x6]
  429d19:	inc    ebp
  429d1a:	push   0xffffffba
  429d1c:	(bad)  
  429d1d:	inc    BYTE PTR [edi-0x3b]
  429d20:	fsubr  QWORD PTR [esi+0x6f]
  429d23:	fimul  WORD PTR [ecx+eiz*2]
  429d26:	mov    esi,0x5973d1dd
  429d2b:	adc    BYTE PTR [edi-0xe],dh
  429d2e:	mov    DWORD PTR [ecx-0x3f],ebp
  429d31:	inc    ecx
  429d32:	ret    
  429d33:	sahf   
  429d34:	sahf   
  429d35:	inc    ecx
  429d36:	lods   al,BYTE PTR ds:[esi]
  429d37:	rcl    BYTE PTR [esi],cl
  429d39:	jge    0x429d3d
  429d3b:	arpl   WORD PTR [eax-0x6103dcc6],bx
  429d41:	enter  0x463c,0xde
  429d45:	ret    
  429d46:	fadd   DWORD PTR [edx-0x25]
  429d49:	(bad)  
  429d4a:	dec    esp
  429d4b:	test   al,0xde
  429d4d:	outs   dx,BYTE PTR ds:[esi]
  429d4e:	das    
  429d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d50:	and    ebp,eax
  429d52:	xchg   esp,eax
  429d53:	lods   al,BYTE PTR ds:[esi]
  429d54:	pop    ecx
  429d55:	fcom   QWORD PTR [edi-0x56]
  429d58:	sahf   
  429d59:	mov    esp,0x36d63c9f
  429d5e:	lahf   
  429d5f:	ss pop ds
  429d61:	daa    
  429d62:	adc    BYTE PTR [edi],al
  429d64:	pop    ds
  429d65:	cwde   
  429d66:	ret    0x5848
  429d69:	mov    dl,BYTE PTR [ecx+0xfbe480c]
  429d6f:	ret    0x4cb9
  429d72:	push   ecx
  429d73:	hlt    
  429d74:	das    
  429d75:	cld    
  429d76:	mov    eax,edx
  429d78:	mov    al,ds:0x507ff93d
  429d7d:	pop    esi
  429d7e:	push   es
  429d7f:	test   eax,0xbc734fd4
  429d84:	mov    ds:0x677592ba,al
  429d89:	sub    DWORD PTR [ecx+0x40],ebp
  429d8c:	mov    DWORD PTR [esi-0x2b],ecx
  429d8f:	icebp  
  429d90:	sbb    BYTE PTR [esi+0x60],ch
  429d93:	jge    0x429d8b
  429d95:	popf   
  429d96:	cwde   
  429d97:	cmp    eax,DWORD PTR [edx-0x4c]
  429d9a:	and    ah,BYTE PTR [ebp-0x729b876f]
  429da0:	dec    si
  429da2:	xchg   edi,eax
  429da3:	in     eax,0x77
  429da5:	call   0xc46e443d
  429daa:	mov    ds:0x2b60100c,eax
  429daf:	sub    DWORD PTR [ebx-0x9006d9],esi
  429db5:	lock dec edi
  429db7:	retf   
  429db8:	mov    ch,BYTE PTR [esi+0x671506a6]
  429dbe:	sub    BYTE PTR [ecx-0x8a99d90],bh
  429dc4:	ins    DWORD PTR es:[edi],dx
  429dc5:	fisub  DWORD PTR [eax+0x4ddc40df]
  429dcb:	std    
  429dcc:	xchg   esi,eax
  429dcd:	ja     0x429da1
  429dcf:	nop
  429dd0:	packssdw mm4,mm3
  429dd3:	cmp    eax,0x6c811f76
  429dd8:	pop    ebx
  429dd9:	fidiv  DWORD PTR [edi-0x4a]
  429ddc:	int    0x2f
  429dde:	jns    0x429d6f
  429de0:	xchg   esi,eax
  429de1:	clc    
  429de2:	ffreep st(3)
  429de4:	mov    ebx,0xaed9263c
  429de9:	sub    bl,dl
  429deb:	adc    ebx,DWORD PTR [esp+edx*4-0x1d313774]
  429df2:	adc    BYTE PTR [ebp-0x62],bh
  429df5:	das    
  429df6:	mov    esp,DWORD PTR [esp+edi*2-0x3c]
  429dfa:	(bad)  
  429dfb:	fsubr  DWORD PTR [ebx+0x7e1ab44d]
  429e01:	jg     0x429d88
  429e03:	call   0x38ef8bbd
  429e08:	scas   eax,DWORD PTR es:[edi]
  429e09:	sbb    al,0xdb
  429e0b:	cld    
  429e0c:	jbe    0x429e22
  429e0e:	ins    BYTE PTR es:[edi],dx
  429e0f:	sbb    al,0xba
  429e11:	pop    ss
  429e12:	(bad)  
  429e13:	fdivr  DWORD PTR [edi-0x6217cde0]
  429e19:	arpl   WORD PTR gs:[edi],ax
  429e1c:	sbb    DWORD PTR ds:0x6a02d1d3,eax
  429e22:	dec    eax
  429e23:	pushf  
  429e24:	push   eax
  429e25:	ficomp DWORD PTR [ebx+0x5533b328]
  429e2b:	dec    edx
  429e2c:	stc    
  429e2d:	pop    esi
  429e2e:	retf   0x5325
  429e31:	clc    
  429e32:	inc    BYTE PTR [ecx-0x36479787]
  429e38:	cmp    eax,edx
  429e3a:	jmp    0x429e4b
  429e3c:	mov    edx,0x59a4b5b2
  429e41:	and    DWORD PTR [ebp-0x617bb422],0xffffffce
  429e48:	(bad)  
  429e49:	push   cs
  429e4a:	sub    ebx,DWORD PTR [esi+0x54]
  429e4d:	int3   
  429e4e:	mov    ah,0xb5
  429e50:	jo     0x429e48
  429e52:	mov    ds:0x996739b6,eax
  429e57:	push   esi
  429e58:	jbe    0x429e77
  429e5a:	mov    cl,0x3f
  429e5c:	push   ecx
  429e5d:	leave  
  429e5e:	inc    eax
  429e5f:	adc    DWORD PTR [esi+edi*8-0x42],ebx
  429e63:	lock sbb edi,ebx
  429e66:	cmc    
  429e67:	stc    
  429e68:	arpl   WORD PTR [eax],ax
  429e6a:	scas   al,BYTE PTR es:[edi]
  429e6b:	adc    al,0xef
  429e6d:	sub    eax,0x11c79658
  429e72:	push   cs
  429e73:	jno    0x429e66
  429e75:	das    
  429e76:	ins    BYTE PTR es:[edi],dx
  429e77:	xor    al,BYTE PTR [ebp-0x17476f3c]
  429e7d:	cmp    al,0x8c
  429e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e80:	test   al,0x19
  429e82:	loop   0x429ef5
  429e84:	or     ah,bl
  429e86:	and    edx,DWORD PTR [ecx]
  429e88:	jp     0x429e92
  429e8a:	(bad)  
  429e8b:	jns    0x429ea8
  429e8d:	imul   edi,DWORD PTR [esi+0x2af12957],0x7a
  429e94:	pop    ss
  429e95:	cmp    DWORD PTR [ebp+0x4b0846f5],esp
  429e9b:	in     eax,0x48
  429e9d:	jmp    0xdff7:0x9c73acc2
  429ea4:	mov    ah,0x8e
  429ea6:	xchg   ebx,eax
  429ea7:	adc    BYTE PTR [esi],bl
  429ea9:	inc    ebp
  429eaa:	or     al,0xa9
  429eac:	jecxz  0x429e8b
  429eae:	mov    dl,0xe2
  429eb0:	mov    ecx,0xf6779438
  429eb5:	mov    eax,0x48377b23
  429eba:	push   ecx
  429ebb:	shr    BYTE PTR [edi],0xb7
  429ebe:	xor    al,0x68
  429ec0:	pop    ds
  429ec1:	pop    esi
  429ec2:	adc    eax,0x94bd50ec
  429ec7:	and    eax,0x887d6db0
  429ecc:	xchg   ecx,eax
  429ecd:	sbb    cl,BYTE PTR [ebx]
  429ecf:	adc    al,0x9e
  429ed1:	sahf   
  429ed2:	xchg   ebx,eax
  429ed3:	sahf   
  429ed4:	fisttp QWORD PTR [ebx-0x7bfebbde]
  429eda:	add    ebp,ecx
  429edc:	mov    esp,0x1b350967
  429ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ee2:	pop    esp
  429ee3:	out    dx,eax
  429ee4:	adc    edi,DWORD PTR [ebx+0x1aca9090]
  429eea:	dec    DWORD PTR [ebx-0x76]
  429eed:	jbe    0x429e72
  429eef:	daa    
  429ef0:	xor    BYTE PTR [eax+0x5d],0xeb
  429ef4:	pop    es
  429ef5:	test   bl,dl
  429ef7:	loopne 0x429f4c
  429ef9:	push   ebp
  429efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429efb:	push   ebp
  429efc:	mov    ds,WORD PTR [ecx+0x21]
  429eff:	aad    0xdd
  429f01:	ins    BYTE PTR es:[edi],dx
  429f02:	sahf   
  429f03:	lds    ecx,FWORD PTR [eax+0x7d]
  429f06:	jns    0x429f48
  429f08:	mov    DWORD PTR [edi+0x5],edx
  429f0b:	add    al,0x1d
  429f0d:	sub    DWORD PTR [edx-0x694e3602],esi
  429f13:	xchg   esp,eax
  429f14:	test   al,0x7f
  429f16:	push   ebx
  429f17:	xor    esp,ecx
  429f19:	xor    esp,0x15081efe
  429f1f:	ss (bad) 
  429f23:	jae    0x429eb6
  429f25:	aaa    
  429f26:	inc    esi
  429f27:	nop
  429f28:	xchg   ecx,eax
  429f29:	jg     0x429f95
  429f2b:	imul   esi,ebx,0x6738f28f
  429f31:	ins    DWORD PTR es:[edi],dx
  429f32:	pop    es
  429f33:	jmp    0x429faa
  429f35:	icebp  
  429f36:	push   es
  429f37:	push   0xdb1cf154
  429f3c:	jge    0x429fba
  429f3e:	mov    ?,ebp
  429f40:	pop    edx
  429f41:	cmp    al,BYTE PTR [ecx+0x7fc19e45]
  429f47:	xor    eax,DWORD PTR [edx+0x64364f75]
  429f4d:	retf   
  429f4e:	mov    al,0x2a
  429f50:	out    dx,al
  429f51:	into   
  429f52:	stc    
  429f53:	adc    DWORD PTR [edi],ebx
  429f55:	ja     0x429f11
  429f57:	cmc    
  429f58:	xchg   DWORD PTR [edi-0x6b397e66],esi
  429f5e:	mov    WORD PTR [ecx-0x4425af4e],fs
  429f64:	(bad)
  429f67:	mov    edx,ebp
  429f69:	dec    ebx
  429f6a:	scas   eax,DWORD PTR es:[edi]
  429f6b:	sti    
  429f6c:	pushf  
  429f6d:	shr    DWORD PTR [esi-0x1c],1
  429f70:	dec    ebp
  429f71:	out    0xb6,al
  429f73:	pop    ss
  429f74:	test   DWORD PTR [ebx+0x3],0x1c715595
  429f7b:	mov    ebp,0x8386f3e6
  429f80:	pop    esp
  429f81:	addr16 mov cl,0x40
  429f84:	sbb    DWORD PTR ds:0x63e0485c,0x195c81e8
  429f8e:	pop    edi
  429f8f:	inc    eax
  429f90:	clc    
  429f91:	ins    DWORD PTR es:[edi],dx
  429f92:	pop    ebx
  429f93:	jno    0x429f3d
  429f95:	mov    ch,0x13
  429f97:	call   0xf09f3e1
  429f9c:	imul   esi,DWORD PTR [esi+0x50],0xee5a6763
  429fa3:	daa    
  429fa4:	dec    esi
  429fa5:	sar    DWORD PTR [edi+0x6096ab9c],0x89
  429fac:	fdivr  DWORD PTR [edx]
  429fae:	cmp    al,0xfa
  429fb0:	add    dl,BYTE PTR [edi+0x29]
  429fb3:	add    al,0xf
  429fb5:	fbld   TBYTE PTR [ecx-0x57]
  429fb8:	jnp    0x429ffe
  429fba:	and    al,0xa1
  429fbc:	mov    ebx,edi
  429fbe:	je     0x429f9b
  429fc0:	mov    eax,0xe793d93b
  429fc5:	fmulp  st(3),st
  429fc7:	adc    edx,DWORD PTR [ebp+0x28]
  429fca:	fld    TBYTE PTR [edx+ebp*4]
  429fcd:	push   ds
  429fce:	xchg   edx,eax
  429fcf:	retf   
  429fd0:	popa   
  429fd1:	popf   
  429fd2:	xchg   ecx,eax
  429fd3:	push   edi
  429fd4:	fisttp QWORD PTR [edx+0x31]
  429fd7:	add    al,0x61
  429fd9:	adc    al,0xf1
  429fdb:	dec    edx
  429fdc:	iret   
  429fdd:	dec    edx
  429fde:	xchg   ebx,eax
  429fdf:	cmp    DWORD PTR [ecx-0x5b],0xe2892b71
  429fe6:	dec    esp
  429fe7:	sti    
  429fe8:	jg     0x42a039
  429fea:	or     ebx,eax
  429fec:	call   0xd3c301e6
  429ff1:	mov    dh,0x77
  429ff3:	push   esi
  429ff4:	enter  0xf611,0xfa
  429ff8:	xor    DWORD PTR [esi],edx
  429ffa:	pusha  
  429ffb:	push   cs
  429ffc:	(bad)  
  429ffd:	sub    ebx,DWORD PTR [eax]
  429fff:	ss mov esi,0x664308a1
  42a005:	push   edi
  42a006:	rol    DWORD PTR [edi],cl
  42a008:	inc    ebp
  42a009:	fcomp  DWORD PTR ds:0x16aa3f91
  42a00f:	xlat   BYTE PTR ds:[ebx]
  42a010:	in     al,0xbc
  42a012:	or     edi,DWORD PTR [eax-0x78e419ed]
  42a018:	inc    ebp
  42a019:	dec    ebx
  42a01a:	mov    dl,0xff
  42a01c:	shl    BYTE PTR [edi+0x3fb2bce7],1
  42a022:	mov    DWORD PTR [edx],ebx
  42a024:	xchg   BYTE PTR [edx+0x4a],ch
  42a027:	shl    cl,1
  42a029:	cmp    edx,esi
  42a02b:	sbb    eax,0x682d4f97
  42a030:	loop   0x429fc3
  42a032:	retf   0x5475
  42a035:	jecxz  0x42a02f
  42a037:	test   BYTE PTR [ecx+0x56],dl
  42a03a:	fscale 
  42a03c:	jnp    0x42a013
  42a03e:	lods   al,BYTE PTR ds:[esi]
  42a03f:	shl    BYTE PTR [edi-0x66],0x1e
  42a043:	add    ebx,DWORD PTR [esi+0x13]
  42a046:	mov    cl,0xed
  42a048:	xor    bl,BYTE PTR [esi+0x56]
  42a04b:	mov    dh,0x2d
  42a04d:	(bad)  
  42a04e:	xlat   BYTE PTR ds:[ebx]
  42a04f:	sbb    BYTE PTR [ebp-0x5c],dh
  42a052:	inc    esp
  42a053:	xor    al,0x82
  42a055:	mov    edx,0x53a371b2
  42a05a:	or     edx,DWORD PTR [eax+0x278d2c38]
  42a060:	je     0x429fe3
  42a062:	and    eax,0xfbcf4103
  42a067:	retf   0xc3dd
  42a06a:	mov    BYTE PTR [bp+si],ah
  42a06d:	dec    ebp
  42a06e:	std    
  42a06f:	dec    eax
  42a070:	adc    eax,0xdd55f4c8
  42a075:	ja     0x42a08b
  42a077:	pusha  
  42a078:	xor    eax,0x1a5e2844
  42a07d:	lahf   
  42a07e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a07f:	popf   
  42a080:	dec    ebx
  42a081:	popf   
  42a082:	cld    
  42a083:	aam    0xd
  42a085:	xchg   esi,eax
  42a086:	cmp    DWORD PTR [eax],ecx
  42a088:	mov    BYTE PTR [edx+0x62],dl
  42a08b:	mov    esi,DWORD PTR [ecx]
  42a08d:	sub    eax,0x45673156
  42a092:	popf   
  42a093:	loop   0x42a05c
  42a095:	clc    
  42a096:	mov    cs,ebp
  42a098:	push   ds
  42a099:	sbb    dh,cl
  42a09b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a09c:	pop    eax
  42a09d:	test   DWORD PTR [ebx+0x4],0x6ffbd2a1
  42a0a4:	mov    eax,0xeb1f7788
  42a0a9:	(bad)  
  42a0ab:	and    DWORD PTR [eax+0x211aa988],eax
  42a0b1:	addr16 mov ch,0xef
  42a0b4:	ror    ah,1
  42a0b6:	cmp    DWORD PTR [edi+0x1cb91b70],edi
  42a0bc:	fcmovnb st,st(4)
  42a0be:	in     al,0x69
  42a0c0:	cmp    BYTE PTR [ebp-0x34],al
  42a0c3:	shl    DWORD PTR [eax+0x228533a9],cl
  42a0c9:	cdq    
  42a0ca:	adc    DWORD PTR [ecx+0xc],ecx
  42a0cd:	stos   DWORD PTR es:[edi],eax
  42a0ce:	fxch   st(3)
  42a0d0:	jl     0x42a0aa
  42a0d2:	sti    
  42a0d3:	arpl   WORD PTR [ebp+0x1b],bx
  42a0d6:	dec    ebp
  42a0d7:	shl    bx,1
  42a0da:	xor    DWORD PTR [edi],ebx
  42a0dc:	enter  0xb626,0xb5
  42a0e0:	add    ebp,ecx
  42a0e2:	push   edi
  42a0e3:	dec    edi
  42a0e4:	inc    esi
  42a0e5:	dec    edx
  42a0e6:	add    DWORD PTR [ebx+0x724f432e],esp
  42a0ec:	cli    
  42a0ed:	pop    esp
  42a0ee:	cli    
  42a0ef:	imul   ebx,DWORD PTR [ecx],0x75
  42a0f2:	push   edx
  42a0f3:	xchg   DWORD PTR [esi-0x5e],ebp
  42a0f6:	pusha  
  42a0f7:	xchg   ecx,eax
  42a0f8:	mov    cs,WORD PTR [ebp+0x2f]
  42a0fb:	arpl   bx,cx
  42a0fd:	push   eax
  42a0fe:	push   es
  42a0ff:	jmp    0x42a16a
  42a101:	jb     0x42a0f7
  42a103:	aaa    
  42a104:	cld    
  42a105:	adc    BYTE PTR [edi+0x1a],cl
  42a108:	nop
  42a109:	out    dx,al
  42a10a:	out    dx,al
  42a10b:	or     BYTE PTR [edx],ch
  42a10d:	add    eax,0x2d769823
  42a112:	repnz dec DWORD PTR [ecx]
  42a115:	jp     0x42a136
  42a117:	test   ebp,esp
  42a119:	imul   ebp,DWORD PTR [ecx+0x1b65cdde],0xffffff87
  42a120:	xchg   DWORD PTR [esi-0x1a9a6b55],ecx
  42a126:	clc    
  42a127:	and    eax,0x7d14696
  42a12c:	shl    DWORD PTR [edi],cl
  42a12e:	sub    eax,0xf55d6c2e
  42a133:	push   ds
  42a134:	adc    al,BYTE PTR [ebx+0x5b]
  42a137:	mov    dl,0x39
  42a139:	into   
  42a13a:	mov    DWORD PTR [ecx],0xeb9e703e
  42a140:	mov    dh,0xb1
  42a142:	jmp    0xf3ac:0xc59d22dc
  42a149:	jge    0x42a189
  42a14b:	sub    BYTE PTR [eax+0x30442c87],dh
  42a151:	jbe    0x42a15e
  42a153:	repnz mov ah,0x88
  42a156:	pop    edi
  42a157:	(bad)  
  42a159:	pop    ebx
  42a15a:	mov    ebp,0x937b6290
  42a15f:	jae    0x42a11e
  42a161:	rcr    BYTE PTR [ecx+ebp*2+0x29],cl
  42a165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a166:	jae    0x42a152
  42a168:	adc    esp,DWORD PTR [esi+0x26a3b3f6]
  42a16e:	sti    
  42a16f:	sub    dl,BYTE PTR es:[ebp+0x585521c0]
  42a176:	adc    eax,DWORD PTR [esi]
  42a178:	ret    0x6b6b
  42a17b:	add    BYTE PTR [ebx],dl
  42a17d:	bound  edi,QWORD PTR ds:0x473d3ca4
  42a183:	sbb    dl,dh
  42a185:	jns    0x42a123
  42a187:	(bad)  
  42a188:	(bad)  
  42a18a:	retf   0x39a3
  42a18d:	add    BYTE PTR ds:0x2064f732,0xc4
  42a194:	sub    BYTE PTR [ebp+0x363c4bf3],bl
  42a19a:	xchg   esp,eax
  42a19b:	or     DWORD PTR [esi],ebp
  42a19d:	aaa    
  42a19e:	fld    TBYTE PTR [eax+0xa]
  42a1a1:	iret   
  42a1a2:	retf   
  42a1a3:	adc    eax,0xc0329830
  42a1a8:	ss ror ecx,0xdb
  42a1ac:	popf   
  42a1ad:	fimul  DWORD PTR [esi+0xd1e9f85]
  42a1b3:	sahf   
  42a1b4:	inc    ebp
  42a1b5:	mov    ds,WORD PTR [eax+0x31]
  42a1b8:	cmc    
  42a1b9:	mov    dl,0x8
  42a1bb:	and    eax,0x73ca2eb4
  42a1c0:	(bad)  
  42a1c1:	adc    dl,BYTE PTR [edi]
  42a1c3:	sub    DWORD PTR [edi+0x55e74325],eax
  42a1c9:	fcos   
  42a1cb:	ret    
  42a1cc:	cld    
  42a1cd:	aam    0x99
  42a1cf:	stc    
  42a1d0:	sar    BYTE PTR gs:[ebx+0x193c3948],1
  42a1d7:	ins    BYTE PTR es:[edi],dx
  42a1d8:	bound  edx,QWORD PTR [ecx-0x6d0311b3]
  42a1de:	ret    0xcf27
  42a1e1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42a1e3:	cwde   
  42a1e4:	in     al,0xe
  42a1e6:	push   cs
  42a1e7:	inc    esp
  42a1e8:	cmp    al,0x38
  42a1ea:	lods   al,BYTE PTR ds:[esi]
  42a1eb:	mov    bh,0xf1
  42a1ed:	adc    ecx,DWORD PTR [ebp+0x51eeb1e2]
  42a1f3:	jg     0x42a1c0
  42a1f5:	dec    esi
  42a1f6:	add    ah,al
  42a1f8:	jnp    0x42a1d4
  42a1fa:	mov    ds:0xde88ca25,al
  42a1ff:	repz jns 0x42a1e8
  42a202:	jno    0x42a18f
  42a204:	xchg   BYTE PTR [edx-0x4f2aa744],ah
  42a20a:	out    dx,eax
  42a20b:	loope  0x42a1c5
  42a20d:	(bad)  
  42a20f:	or     al,0xf8
  42a211:	rcl    DWORD PTR [ecx-0x2e],1
  42a214:	(bad)  
  42a215:	test   DWORD PTR [edi-0x47],eax
  42a218:	and    ah,bl
  42a21a:	mov    eax,ds:0xaad1f6ef
  42a21f:	lods   al,BYTE PTR ds:[esi]
  42a220:	pop    eax
  42a221:	(bad)  
  42a223:	dec    ecx
  42a224:	add    BYTE PTR [ebx+edi*8-0x258af4f6],0x9f
  42a22c:	stc    
  42a22d:	not    ah
  42a22f:	ja     0x42a1ca
  42a231:	outs   dx,DWORD PTR ds:[esi]
  42a232:	(bad)  
  42a234:	call   0x674d340
  42a239:	jmp    0x83ff:0xdf63a1dc
  42a240:	aam    0xa8
  42a242:	pop    ecx
  42a243:	or     al,0x90
  42a245:	sub    edi,DWORD PTR [esi-0x7dd4a7cb]
  42a24b:	mov    ax,0x25c7
  42a24f:	ret    
  42a250:	xchg   edx,eax
  42a251:	mov    BYTE PTR [ecx+0x7c],al
  42a254:	lods   al,BYTE PTR cs:[esi]
  42a256:	mov    BYTE PTR [esp+edi*1+0x5de77445],ah
  42a25d:	pop    eax
  42a25e:	idiv   bl
  42a260:	dec    esi
  42a261:	aas    
  42a262:	push   edx
  42a264:	push   esi
  42a265:	inc    BYTE PTR [edx]
  42a267:	adc    DWORD PTR [edi+eax*4-0x6e5ead43],eax
  42a26e:	jge    0x42a29e
  42a270:	ret    
  42a271:	add    DWORD PTR [eax],eax
  42a273:	(bad)  
  42a274:	jg     0x42a208
  42a276:	ret    
  42a277:	mov    fs,WORD PTR [edx+eiz*8-0x167ff88c]
  42a27e:	scas   eax,DWORD PTR es:[edi]
  42a27f:	xlat   BYTE PTR ds:[ebx]
  42a280:	jne    0x42a22d
  42a282:	test   DWORD PTR [ebp-0x14],ebx
  42a285:	and    ebp,DWORD PTR [edx]
  42a287:	xchg   edx,eax
  42a288:	repnz mov ebx,0xf12ca2a
  42a28e:	or     ebp,edi
  42a290:	push   eax
  42a291:	loop   0x42a21e
  42a293:	xor    bl,BYTE PTR [esi]
  42a295:	es in  eax,dx
  42a297:	fldenv [ebx]
  42a299:	inc    eax
  42a29a:	es scas eax,DWORD PTR es:[edi]
  42a29c:	xor    edx,DWORD PTR [esi-0x63b89d78]
  42a2a2:	fadd   st,st(5)
  42a2a4:	or     al,0x62
  42a2a6:	sub    cl,BYTE PTR [esi-0x67]
  42a2a9:	inc    edx
  42a2aa:	jo     0x42a292
  42a2ac:	push   esp
  42a2ad:	pop    eax
  42a2ae:	aaa    
  42a2af:	mov    dl,0x3e
  42a2b1:	and    edi,ecx
  42a2b3:	dec    ecx
  42a2b4:	icebp  
  42a2b5:	pop    ebp
  42a2b6:	aad    0x93
  42a2b8:	dec    edx
  42a2b9:	ss dec ecx
  42a2bb:	xor    al,0xd1
  42a2bd:	add    BYTE PTR [edi-0xf0ce721],dl
  42a2c3:	test   al,bl
  42a2c5:	dec    esi
  42a2c6:	or     ch,al
  42a2c8:	retf   
  42a2c9:	(bad)  
  42a2ca:	ins    BYTE PTR es:[edi],dx
  42a2cb:	pop    es
  42a2cc:	lahf   
  42a2cd:	mov    bl,0x31
  42a2cf:	push   0xffffffaf
  42a2d1:	and    DWORD PTR [eax],0x4c
  42a2d4:	sub    al,0x84
  42a2d6:	jecxz  0x42a355
  42a2d8:	xor    DWORD PTR [ecx],esp
  42a2da:	iret   
  42a2db:	loop   0x42a28f
  42a2dd:	add    edx,DWORD PTR [edi+eax*4]
  42a2e0:	mov    DWORD PTR [edx-0x1c30ead5],edx
  42a2e6:	cmc    
  42a2e7:	sbb    dl,BYTE PTR [ebx]
  42a2e9:	mov    ah,0x6b
  42a2eb:	xchg   edx,eax
  42a2ec:	or     bh,BYTE PTR [esi]
  42a2ee:	xchg   ebx,eax
  42a2ef:	stos   DWORD PTR es:[edi],eax
  42a2f0:	lock ret 0x4772
  42a2f4:	mul    ebp
  42a2f6:	ins    DWORD PTR es:[edi],dx
  42a2f7:	hlt    
  42a2f8:	fdivr  st,st(4)
  42a2fa:	fcomp  DWORD PTR [ebx+0x6b]
  42a2fd:	enter  0x9d4a,0x77
  42a301:	scas   eax,DWORD PTR es:[edi]
  42a302:	lea    edi,[edx]
  42a304:	and    DWORD PTR [ebp+0x31c7c1d7],eax
  42a30a:	mov    ebp,0xc40c5f8a
  42a30f:	sbb    eax,0x65029d9
  42a314:	mov    dl,0x66
  42a316:	scas   al,BYTE PTR es:[edi]
  42a317:	pop    ebp
  42a318:	dec    esp
  42a319:	add    esp,ebp
  42a31b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a31c:	rcl    BYTE PTR [ecx],0xae
  42a31f:	and    DWORD PTR [esi-0x53],0x45
  42a323:	leave  
  42a324:	mov    edi,DWORD PTR [edi+0x3c951de3]
  42a32a:	loop   0x42a2ac
  42a32c:	pop    ds
  42a32d:	sub    BYTE PTR [ebx-0x63],bl
  42a330:	cwde   
  42a331:	cmp    BYTE PTR [eax-0x44],bl
  42a334:	sbb    ah,dl
  42a336:	lods   al,BYTE PTR ds:[esi]
  42a337:	add    eax,0xe2490db5
  42a33c:	mov    ecx,0xa39b9d6f
  42a341:	sub    eax,0x1bbba09f
  42a346:	sub    edi,DWORD PTR es:[ebp+0x73]
  42a34a:	into   
  42a34b:	inc    eax
  42a34c:	xchg   esp,eax
  42a34d:	xor    eax,0x54f24391
  42a352:	jmp    0xb564:0x6c0c7313
  42a359:	mov    al,0x4d
  42a35b:	xchg   ebp,eax
  42a35c:	cli    
  42a35d:	lods   al,BYTE PTR ds:[esi]
  42a35e:	add    eax,0xbcf2f8c5
  42a363:	mov    al,0xd6
  42a365:	push   ebp
  42a366:	cmp    ecx,DWORD PTR [edi]
  42a368:	out    dx,al
  42a369:	jp     0x42a2f4
  42a36b:	leave  
  42a36c:	xor    al,BYTE PTR [eax-0x7b4cb204]
  42a372:	mov    dl,0xce
  42a374:	in     al,0xa9
  42a376:	fs xchg esp,eax
  42a378:	mov    dl,0x4b
  42a37a:	jns    0x42a3d6
  42a37c:	ss pop ds
  42a37e:	adc    eax,0x98d5613a
  42a383:	xchg   esp,eax
  42a384:	mov    esi,0xd412ffe8
  42a389:	scas   eax,DWORD PTR es:[edi]
  42a38a:	adc    ebp,ecx
  42a38c:	push   edi
  42a38d:	test   eax,0x726a3521
  42a392:	(bad)  
  42a393:	loopne 0x42a359
  42a395:	sub    al,0x86
  42a397:	outs   dx,DWORD PTR ds:[esi]
  42a398:	imul   ebp,DWORD PTR [edx-0x75],0xe864c208
  42a39f:	push   ebp
  42a3a0:	lods   eax,DWORD PTR ds:[esi]
  42a3a1:	cmp    eax,0xffffff93
  42a3a4:	add    esi,DWORD PTR [ecx+0x1c]
  42a3a7:	mov    ah,0x47
  42a3a9:	iret   
  42a3aa:	mov    DWORD PTR [edi],esp
  42a3ac:	cmc    
  42a3ad:	test   eax,0x124978cf
  42a3b2:	arpl   WORD PTR [edx+0x1b],ax
  42a3b5:	idiv   esi
  42a3b7:	pushf  
  42a3b8:	ret    
  42a3b9:	lea    eax,[ebx+0x4dca4172]
  42a3bf:	sbb    eax,0x5f6531
  42a3c4:	outs   dx,DWORD PTR ds:[esi]
  42a3c5:	pop    ecx
  42a3c6:	jmp    0x7a39:0x809bd334
  42a3cd:	jns    0x42a3ab
  42a3cf:	jp     0x42a3e2
  42a3d1:	pop    edi
  42a3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a3d3:	test   DWORD PTR [eax+0xf9fef1e],edx
  42a3d9:	int    0xdf
  42a3db:	out    0xfb,al
  42a3dd:	std    
  42a3de:	push   esp
  42a3df:	jmp    0x42a412
  42a3e1:	mov    dl,0x65
  42a3e3:	std    
  42a3e4:	adc    al,0x2
  42a3e6:	or     BYTE PTR [edi-0x1cd2fe78],bl
  42a3ec:	sti    
  42a3ed:	mov    dh,0xf6
  42a3ef:	add    al,0x23
  42a3f1:	sbb    bl,BYTE PTR [esi+edi*8]
  42a3f4:	popa   
  42a3f5:	ret    
  42a3f6:	pop    eax
  42a3f7:	lods   al,BYTE PTR ds:[esi]
  42a3f8:	popf   
  42a3f9:	je     0x42a410
  42a3fb:	imul   esp,DWORD PTR [eax-0x4c574653],0x67
  42a402:	gs sbb edx,0xffffffa4
  42a406:	jae    0x42a3a8
  42a408:	les    ebx,FWORD PTR [eax+0x15]
  42a40b:	sub    al,0x6a
  42a40d:	mov    dl,BYTE PTR ds:0x7683d219
  42a413:	add    DWORD PTR [ecx],ecx
  42a415:	cmp    al,0x9e
  42a417:	inc    eax
  42a418:	sub    al,0xde
  42a41a:	repnz or esp,DWORD PTR ds:0x6f25d41b
  42a421:	shl    BYTE PTR [ebx],0x8
  42a424:	add    DWORD PTR [ebp-0x40b0d640],0xffffffa6
  42a42b:	fmul   DWORD PTR [ebp+0x2f15c127]
  42a431:	mov    eax,ds:0xdb9941c
  42a436:	cmp    eax,0xca230e0b
  42a43b:	xor    bl,dh
  42a43d:	push   esp
  42a43e:	jae    0x42a437
  42a440:	out    dx,eax
  42a441:	icebp  
  42a442:	jno    0x42a4c1
  42a444:	in     al,0xb0
  42a446:	add    BYTE PTR [edx],0x26
  42a449:	test   BYTE PTR [edi+0x186c4bbc],ah
  42a44f:	rcr    BYTE PTR [esi-0x36],0xc6
  42a453:	jne    0x42a3db
  42a455:	out    0xee,al
  42a457:	fld    st(4)
  42a459:	jl     0x42a4bc
  42a45b:	call   0xc2b640d9
  42a460:	or     DWORD PTR ds:0xe86d9e64,0x4d
  42a467:	xor    eax,0xc700089b
  42a46c:	ror    BYTE PTR [esi],cl
  42a46e:	stos   BYTE PTR es:[edi],al
  42a46f:	or     al,0xbd
  42a471:	or     BYTE PTR [ebp+eiz*2+0x54],0x7
  42a476:	push   es
  42a477:	or     dh,dh
  42a479:	jmp    0x96e3abf9
  42a47e:	in     al,0x3
  42a480:	mov    ecx,0x91a38df4
  42a485:	xchg   esi,eax
  42a486:	loop   0x42a42b
  42a488:	ja     0x42a4c4
  42a48a:	popa   
  42a48b:	shr    DWORD PTR [eax],1
  42a48d:	aaa    
  42a48e:	arpl   si,si
  42a490:	push   eax
  42a491:	ins    BYTE PTR es:[edi],dx
  42a492:	xor    edx,DWORD PTR [edx]
  42a494:	jmp    DWORD PTR [edx+eax*4-0x5439f768]
  42a49b:	and    DWORD PTR [ebx-0x3510e86d],ecx
  42a4a1:	(bad)  
  42a4a2:	cmp    ah,BYTE PTR [ebp+eiz*1-0x62418562]
  42a4a9:	and    esi,DWORD PTR [ebx-0x1c3243fb]
  42a4af:	bound  eax,QWORD PTR [edx-0x60d87915]
  42a4b5:	scas   al,BYTE PTR es:[edi]
  42a4b6:	pop    esi
  42a4b7:	mov    dl,bh
  42a4b9:	sub    al,0x38
  42a4bb:	cmc    
  42a4bc:	test   BYTE PTR [edi-0x525715ec],al
  42a4c2:	dec    edi
  42a4c3:	pop    ebx
  42a4c4:	mov    ebp,0x3ad03cc7
  42a4c9:	std    
  42a4ca:	adc    esi,0x11
  42a4cd:	out    dx,al
  42a4ce:	stc    
  42a4cf:	mov    WORD PTR [ebp+esi*4-0x41416a32],fs
  42a4d6:	bound  edx,QWORD PTR [edx-0x1c0f8997]
  42a4dc:	dec    eax
  42a4dd:	test   DWORD PTR [esp+ebp*1-0x18],esp
  42a4e1:	jmp    0x42a506
  42a4e3:	push   ss
  42a4e4:	inc    esi
  42a4e5:	out    0x6a,eax
  42a4e7:	mov    cl,0xf4
  42a4e9:	dec    eax
  42a4ea:	aad    0x48
  42a4ec:	xor    DWORD PTR [ecx+ecx*4-0x258a345],ebp
  42a4f3:	pop    es
  42a4f4:	stos   BYTE PTR es:[edi],al
  42a4f5:	mov    ah,0xfe
  42a4f7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42a4f9:	ss pushf 
  42a4fb:	test   DWORD PTR [eax+0x160a092a],ebp
  42a501:	push   esp
  42a502:	dec    ebp
  42a503:	test   DWORD PTR [ecx+ebx*4-0x3d],esp
  42a507:	(bad)  
  42a508:	lock cmp BYTE PTR [ecx-0x40],al
  42a50c:	fidiv  DWORD PTR [ebx-0x7d]
  42a50f:	mov    ah,0xdd
  42a511:	test   DWORD PTR [edx+0x5bd4e419],esi
  42a517:	lock and al,0x53
  42a51a:	jb     0x42a55c
  42a51c:	mov    WORD PTR [edx+0x73a78f68],?
  42a522:	cmp    eax,0x3a3721f2
  42a527:	xchg   BYTE PTR [ebp-0x3a],al
  42a52a:	mov    esp,0xb5d5e3ff
  42a52f:	lea    esp,cs:[edi]
  42a532:	xchg   edx,eax
  42a533:	xchg   ebp,eax
  42a534:	outs   dx,BYTE PTR ds:[esi]
  42a535:	push   edi
  42a536:	scas   al,BYTE PTR es:[edi]
  42a537:	push   ebp
  42a538:	inc    esi
  42a539:	mov    eax,0xf97f03a4
  42a53e:	scas   eax,DWORD PTR es:[edi]
  42a53f:	jbe    0x42a51f
  42a541:	push   cs
  42a542:	and    ah,bl
  42a544:	inc    ebp
  42a545:	adc    ch,BYTE PTR [eax+0x7e]
  42a548:	xor    esi,DWORD PTR [ebx]
  42a54a:	in     al,0xdd
  42a54c:	cwde   
  42a54d:	mov    bl,dh
  42a54f:	gs hlt 
  42a551:	js     0x42a569
  42a553:	mov    ds:0x55c59113,al
  42a558:	push   eax
  42a559:	or     al,0xf1
  42a55b:	pop    es
  42a55c:	mul    BYTE PTR [eax+0x4a]
  42a55f:	sahf   
  42a560:	call   ecx
  42a562:	pop    ds
  42a563:	fs jle 0x42a590
  42a566:	mov    ah,0x30
  42a568:	lods   al,BYTE PTR ds:[esi]
  42a569:	ror    DWORD PTR [ebx+0xe44e22b],0x4c
  42a570:	add    edx,DWORD PTR [esi-0x4289bf2d]
  42a576:	push   cs
  42a577:	(bad)  
  42a579:	jge    0x42a575
  42a57b:	pop    es
  42a57c:	fs ins DWORD PTR es:[edi],dx
  42a57e:	xor    DWORD PTR [esi+ecx*8],ebp
  42a581:	jge    0x42a567
  42a583:	and    esp,0xffffffe6
  42a586:	lea    edx,[eax]
  42a588:	(bad)  
  42a58a:	or     BYTE PTR [edx-0x4ba7451e],al
  42a590:	mov    edi,0xf304741b
  42a595:	mov    esp,esp
  42a597:	xchg   ebp,eax
  42a598:	sti    
  42a599:	and    al,0xae
  42a59b:	jl     0x42a524
  42a59d:	inc    edx
  42a59e:	clc    
  42a59f:	outs   dx,BYTE PTR ds:[esi]
  42a5a0:	stos   BYTE PTR es:[edi],al
  42a5a1:	jne    0x42a56c
  42a5a3:	dec    ebx
  42a5a4:	je     0x42a5f4
  42a5a6:	lods   al,BYTE PTR ds:[esi]
  42a5a7:	sub    DWORD PTR [esp+ebx*1],edx
  42a5aa:	mov    BYTE PTR [esi],bl
  42a5ac:	shl    DWORD PTR [edi],1
  42a5ae:	or     DWORD PTR [ebp+0x7b81aeae],0xffffffc4
  42a5b5:	ins    DWORD PTR es:[edi],dx
  42a5b6:	fwait
  42a5b7:	mov    ecx,0x64b61a0b
  42a5bc:	(bad)  
  42a5bd:	or     DWORD PTR [ebp-0x751d8ca3],0x4a048f4c
  42a5c7:	jno    0x42a62b
  42a5c9:	loopne 0x42a626
  42a5cb:	push   cs
  42a5cc:	or     eax,0xee2c229
  42a5d1:	dec    ebp
  42a5d2:	and    edi,DWORD PTR [edx-0x62115a0e]
  42a5d8:	sub    BYTE PTR [ecx],al
  42a5da:	mov    bl,0x9
  42a5dc:	orps   xmm4,xmm4
  42a5df:	push   es
  42a5e0:	dec    edx
  42a5e1:	adc    esp,DWORD PTR [ecx]
  42a5e3:	push   ecx
  42a5e4:	or     DWORD PTR [esi+0x6a204e99],0x6a4b8fb0
  42a5ee:	adc    BYTE PTR [ebx+0x3a391171],dh
  42a5f4:	jno    0x42a5ac
  42a5f6:	add    BYTE PTR [ebx-0x712b7adb],0x3e
  42a5fd:	loopne 0x42a60a
  42a5ff:	xchg   esp,eax
  42a600:	hlt    
  42a601:	mov    ?,WORD PTR [edi+0x9]
  42a604:	mov    eax,0x4360999e
  42a609:	sbb    cl,al
  42a60b:	mov    dl,0x36
  42a60d:	push   es
  42a60e:	xor    al,0x32
  42a610:	jno    0x42a600
  42a612:	(bad)  
  42a614:	lds    edx,FWORD PTR [edx]
  42a616:	xor    DWORD PTR ds:0xb4c1b5ba,ebx
  42a61c:	fucomip st,st(6)
  42a61e:	lahf   
  42a61f:	rcl    DWORD PTR [ebx],1
  42a621:	dec    ebp
  42a622:	xor    ebp,ebx
  42a624:	and    BYTE PTR [esi-0x2a],bh
  42a627:	ror    DWORD PTR ds:0xeb03b54d,1
  42a62d:	test   BYTE PTR [ebx+0x68620ec0],ah
  42a633:	scas   al,BYTE PTR es:[edi]
  42a634:	dec    esi
  42a635:	sbb    ecx,ebp
  42a637:	ins    BYTE PTR es:[edi],dx
  42a638:	in     al,0xcb
  42a63a:	inc    esp
  42a63b:	sar    al,cl
  42a63d:	ja     0x42a624
  42a63f:	xchg   ecx,eax
  42a640:	daa    
  42a641:	inc    ecx
  42a642:	sahf   
  42a643:	jmp    0x42a673
  42a645:	nop
  42a646:	ins    DWORD PTR es:[edi],dx
  42a647:	push   cs
  42a648:	and    BYTE PTR [ebx+ebp*4],ah
  42a64b:	mov    ecx,0xe8dd152a
  42a650:	enter  0xebe2,0xd4
  42a654:	into   
  42a655:	xor    ebp,edi
  42a657:	pop    es
  42a658:	and    BYTE PTR [edx-0x62784c92],cl
  42a65e:	sub    ecx,ebx
  42a660:	cli    
  42a661:	adc    al,0x5f
  42a663:	jmp    0xccaa:0x362cc8a4
  42a66a:	sbb    edx,DWORD PTR [edi]
  42a66c:	add    ch,bh
  42a66e:	lods   al,BYTE PTR ds:[esi]
  42a66f:	je     0x42a5f1
  42a671:	es in  al,dx
  42a673:	leave  
  42a674:	or     DWORD PTR [ecx-0x75],0x269a567a
  42a67b:	ds pop ebx
  42a67d:	and    cl,BYTE PTR [eax]
  42a67f:	fnstenv [ebp-0xf]
  42a682:	fsubr  QWORD PTR [edi+0x47]
  42a685:	cmp    al,0x97
  42a687:	add    DWORD PTR [edi+0x5d7d371c],eax
  42a68d:	in     eax,dx
  42a68e:	mov    fs,WORD PTR [ecx]
  42a690:	stos   BYTE PTR es:[edi],al
  42a691:	hlt    
  42a692:	clc    
  42a693:	push   ds
  42a694:	(bad)  
  42a695:	fcomip st,st(1)
  42a697:	and    BYTE PTR [esi],cl
  42a699:	test   BYTE PTR [bx-0x3756],cl
  42a69e:	pusha  
  42a69f:	ficomp DWORD PTR [ebp+0x32]
  42a6a2:	ret    
  42a6a3:	sbb    al,0x9b
  42a6a5:	adc    DWORD PTR [ebx+0x21],eax
  42a6a8:	push   esi
  42a6a9:	aas    
  42a6aa:	pop    edi
  42a6ab:	or     BYTE PTR [ebp+0x7b],ch
  42a6ae:	mov    cl,0x90
  42a6b0:	push   ebx
  42a6b1:	mov    gs,WORD PTR [eax-0x2be977d9]
  42a6b7:	ror    BYTE PTR [ecx-0x5f],cl
  42a6ba:	sub    eax,0xf5056f08
  42a6bf:	gs mov ecx,0xbb627abf
  42a6c5:	loop   0x42a64b
  42a6c7:	lds    edx,FWORD PTR [ecx-0x57]
  42a6ca:	mov    esp,0xa5d7c07b
  42a6cf:	in     al,dx
  42a6d0:	(bad)  
  42a6d1:	in     eax,0x39
  42a6d3:	mov    al,ds:0x805878e8
  42a6d8:	sbb    ecx,DWORD PTR [ebx]
  42a6da:	mov    ecx,0x86c068e7
  42a6df:	stc    
  42a6e0:	xchg   bh,bl
  42a6e2:	adc    BYTE PTR [ebx+0x42793c77],bh
  42a6e8:	adc    bl,bh
  42a6ea:	in     al,dx
  42a6eb:	sti    
  42a6ec:	dec    BYTE PTR [edx]
  42a6ee:	jle    0x42a6c4
  42a6f0:	lahf   
  42a6f1:	add    edx,esp
  42a6f3:	hlt    
  42a6f4:	mov    DWORD PTR es:[eax-0x66],esp
  42a6f8:	push   ebx
  42a6f9:	sbb    bh,ch
  42a6fb:	lods   eax,DWORD PTR ds:[esi]
  42a6fc:	ds aam 0xd6
  42a6ff:	inc    ebx
  42a700:	jmp    0x5d26:0x4473e167
  42a707:	outs   dx,DWORD PTR ds:[esi]
  42a708:	and    DWORD PTR [edx+0x4b],ebp
  42a70b:	ins    DWORD PTR es:[edi],dx
  42a70c:	adc    ebx,edx
  42a70e:	mov    dh,0x4a
  42a710:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a712:	cdq    
  42a713:	repz xchg esp,eax
  42a715:	rol    DWORD PTR [edi],1
  42a717:	mov    dh,0x31
  42a719:	rcr    BYTE PTR [esi],cl
  42a71b:	xchg   BYTE PTR [eax+0x6c1d1208],bh
  42a721:	push   edx
  42a722:	lds    edi,FWORD PTR [edx]
  42a724:	or     edx,DWORD PTR [esi-0x7a]
  42a727:	js     0x42a720
  42a729:	fwait
  42a72a:	mov    ds:0xf2f1f60a,al
  42a72f:	jmp    0x8421d03
  42a734:	je     0x42a702
  42a736:	sub    ch,BYTE PTR [edi]
  42a738:	rcl    esi,0x65
  42a73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a73c:	push   0xffffffbc
  42a73e:	and    eax,0x19e467c4
  42a743:	jl     0x42a75f
  42a745:	fld    QWORD PTR [ecx-0x57]
  42a748:	clc    
  42a749:	das    
  42a74a:	mov    cl,ch
  42a74c:	cmp    DWORD PTR [ebp+0x58],eax
  42a74f:	out    0x97,al
  42a751:	les    edx,FWORD PTR [edi+0x75]
  42a754:	sysret 
  42a756:	push   eax
  42a757:	mov    eax,ds:0xc28ae444
  42a75c:	mov    eax,0x14f6475c
  42a761:	in     al,dx
  42a762:	dec    esi
  42a763:	not    BYTE PTR [ecx]
  42a765:	nop
  42a766:	sahf   
  42a767:	mov    bl,0xfa
  42a769:	jmp    0x42a706
  42a76b:	jle    0x42a73f
  42a76d:	iret   
  42a76e:	sbb    dl,BYTE PTR [ecx+0x19]
  42a771:	mov    ds:0x93e9672b,al
  42a776:	mov    cl,BYTE PTR [esi-0x64e2f32b]
  42a77c:	jo     0x42a787
  42a77e:	fs std 
  42a780:	jg     0x42a7cc
  42a782:	mov    al,0xb3
  42a784:	scas   eax,DWORD PTR es:[edi]
  42a785:	xor    DWORD PTR [ecx+0x43],edx
  42a788:	push   esi
  42a789:	scas   al,BYTE PTR es:[edi]
  42a78a:	enter  0x2bae,0x6d
  42a78e:	clc    
  42a78f:	xchg   edx,eax
  42a790:	out    dx,eax
  42a791:	mov    al,ds:0xc65da54f
  42a796:	fisttp WORD PTR [eax-0x763bd084]
  42a79c:	jmp    0x5bdf1607
  42a7a1:	fs stos BYTE PTR es:[edi],al
  42a7a3:	pop    esp
  42a7a4:	or     eax,0xc4e58432
  42a7a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7aa:	lods   al,BYTE PTR ds:[esi]
  42a7ab:	sbb    ch,BYTE PTR [esi+eax*2+0x22ded571]
  42a7b2:	mov    ds:0x66530ac0,eax
  42a7b7:	and    BYTE PTR [eax],0x11
  42a7ba:	loope  0x42a79a
  42a7bc:	mov    al,ds:0xad9cea27
  42a7c1:	sub    ah,BYTE PTR [ebx+0x5d1bc4ff]
  42a7c7:	fcmovbe st,st(6)
  42a7c9:	jne    0x42a76d
  42a7cb:	enter  0xa359,0x7b
  42a7cf:	rcr    DWORD PTR [ebp-0x7328fc1c],0xf5
  42a7d6:	jmp    0xc353:0x5a841936
  42a7dd:	add    ebx,DWORD PTR [eax+0x2d]
  42a7e0:	ds mov ecx,0x7584778b
  42a7e6:	xor    eax,0x6edcc031
  42a7eb:	xchg   edx,eax
  42a7ec:	xor    ecx,ebx
  42a7ee:	inc    esp
  42a7ef:	push   esi
  42a7f0:	xchg   DWORD PTR [esi+0x552594e1],edi
  42a7f6:	into   
  42a7f7:	jo     0x42a85f
  42a7f9:	adc    BYTE PTR [edi+0x3e],ch
  42a7fc:	pop    ss
  42a7fd:	cvtpi2ps xmm0,QWORD PTR [ebx+0x40025dee]
  42a804:	push   cs
  42a805:	adc    esp,DWORD PTR [edi]
  42a807:	push   edx
  42a808:	or     al,0x42
  42a80a:	and    BYTE PTR [ecx-0x2d],0x2b
  42a80e:	jmp    0x8d5f1f4
  42a813:	(bad)  
  42a815:	loop   0x42a878
  42a817:	enter  0x5bbb,0x28
  42a81b:	sahf   
  42a81c:	arpl   WORD PTR [esi],di
  42a81e:	xor    bl,BYTE PTR [esi]
  42a820:	dec    esp
  42a821:	pop    edx
  42a822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a823:	bnd call 0xa0bb6671
  42a829:	mov    cl,0xd7
  42a82b:	(bad)
  42a82f:	ja     0x42a81f
  42a831:	into   
  42a832:	addr16 mov eax,ds:0xb1de
  42a836:	lahf   
  42a837:	shr    dh,cl
  42a839:	add    DWORD PTR [edx+0x17d44a2],ebx
  42a83f:	scas   eax,DWORD PTR es:[edi]
  42a840:	shr    BYTE PTR [edi],cl
  42a842:	neg    BYTE PTR [eax]
  42a844:	push   edx
  42a845:	mov    dl,0x52
  42a847:	dec    ecx
  42a848:	jmp    0x42a8c3
  42a84a:	loop   0x42a867
  42a84c:	stos   DWORD PTR es:[edi],eax
  42a84d:	jl     0x42a8bc
  42a84f:	rol    BYTE PTR [ebx*2+0x654b70d7],1
  42a856:	xchg   edi,eax
  42a857:	mov    bh,0x8d
  42a859:	jae    0x42a847
  42a85b:	ja     0x42a82b
  42a85d:	jmp    0x42a7f5
  42a85f:	push   ebp
  42a860:	push   ebp
  42a861:	xor    dl,BYTE PTR [edi+0x5d]
  42a864:	imul   edx,DWORD PTR [ebx+ebp*2+0x6d],0xb384e89f
  42a86c:	rcr    dh,0x86
  42a86f:	stos   DWORD PTR es:[edi],eax
  42a870:	call   0x882c00c2
  42a875:	sti    
  42a876:	cmp    eax,DWORD PTR [edx]
  42a878:	lods   eax,DWORD PTR ds:[esi]
  42a879:	push   0xa4e1d132
  42a87e:	in     eax,0x68
  42a880:	add    al,0xae
  42a882:	arpl   WORD PTR [ebx-0x69e1ad03],ax
  42a888:	push   edi
  42a889:	mov    ah,0xae
  42a88b:	cmp    edi,esi
  42a88d:	sti    
  42a88e:	push   eax
  42a88f:	inc    esi
  42a890:	push   0x1b9c6e4c
  42a895:	dec    edi
  42a896:	out    dx,al
  42a897:	xchg   ecx,eax
  42a898:	jbe    0x42a8ad
  42a89a:	cld    
  42a89b:	mov    dl,0x31
  42a89d:	push   es
  42a89e:	sbb    al,0xe6
  42a8a0:	cmc    
  42a8a1:	add    DWORD PTR [esi+0x76fd8e2],0xfffffff1
  42a8a8:	jns    0x42a852
  42a8aa:	jnp    0x42a918
  42a8ac:	inc    BYTE PTR ds:0xc8fdc2bd
  42a8b2:	inc    ebp
  42a8b3:	call   0xceecdde7
  42a8b8:	outs   dx,DWORD PTR gs:[esi]
  42a8ba:	mov    al,0x10
  42a8bc:	mov    ecx,0x5b2a352c
  42a8c1:	hlt    
  42a8c2:	sbb    cl,dl
  42a8c4:	pop    edx
  42a8c5:	dec    edi
  42a8c6:	pop    ecx
  42a8c7:	add    ah,BYTE PTR [eax-0x273dd898]
  42a8cd:	(bad)  
  42a8ce:	in     al,0x2a
  42a8d0:	and    DWORD PTR [eax-0x3c2edf6e],eax
  42a8d6:	cmp    ah,0xdf
  42a8d9:	or     ebx,DWORD PTR ds:0xf3665f7f
  42a8df:	jge    0x42a92b
  42a8e1:	ss add al,0xeb
  42a8e4:	lds    edx,FWORD PTR [eiz*2-0xf4fc732]
  42a8eb:	xchg   ebp,eax
  42a8ec:	add    esi,0xffffffc2
  42a8ef:	xchg   DWORD PTR [edi-0x12],esi
  42a8f2:	mov    ecx,0x2b20e35e
  42a8f7:	mov    WORD PTR [esi+ebx*2-0x2869d3f8],?
  42a8fe:	arpl   WORD PTR [ecx-0x7f],cx
  42a901:	cmc    
  42a902:	jmp    0x2c59cc48
  42a907:	add    dh,BYTE PTR [esi+ebp*8]
  42a90a:	outs   dx,BYTE PTR ds:[esi]
  42a90b:	nop
  42a90c:	add    ebp,DWORD PTR [ecx+0x4a012502]
  42a912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a913:	outs   dx,DWORD PTR ds:[esi]
  42a914:	adc    eax,0x476e1ab5
  42a919:	mov    bh,BYTE PTR [eax-0x2ae11b8f]
  42a91f:	dec    ebx
  42a920:	pusha  
  42a921:	inc    edi
  42a922:	sub    al,0x7a
  42a924:	test   BYTE PTR [ebx+esi*1],0x61
  42a928:	xor    al,0x3d
  42a92a:	sbb    bh,al
  42a92c:	add    eax,DWORD PTR [ebp-0x33ad07d6]
  42a932:	pusha  
  42a933:	out    dx,al
  42a934:	dec    esi
  42a935:	jl     0x42a958
  42a937:	inc    ecx
  42a938:	mov    ecx,0x3de00f8c
  42a93d:	inc    edx
  42a93e:	leave  
  42a93f:	rol    DWORD PTR [ebx+eiz*8],0x6e
  42a943:	push   cs
  42a944:	xchg   esi,eax
  42a945:	sub    ebp,DWORD PTR [edx-0x78]
  42a948:	(bad)  
  42a949:	call   0x390a65ef
  42a94e:	pushf  
  42a94f:	push   ds
  42a950:	inc    ebx
  42a951:	rcr    BYTE PTR [eax+eax*1-0x22],1
  42a955:	jae    0x42a9bf
  42a957:	arpl   WORD PTR [esi+0x36],bx
  42a95a:	(bad)  
  42a95b:	hlt    
  42a95c:	push   edx
  42a95d:	push   esp
  42a95e:	leave  
  42a95f:	mov    ch,0x5a
  42a961:	jno    0x42a8e6
  42a963:	sub    al,0x1e
  42a965:	lds    ecx,FWORD PTR [ecx-0x79]
  42a968:	mov    bh,0x17
  42a96a:	inc    eax
  42a96b:	jmp    0xbf02a5c2
  42a970:	cmp    esi,edx
  42a972:	jne    0x42a95f
  42a974:	test   al,0xaf
  42a976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a977:	sbb    eax,0xbe5888c8
  42a97c:	sub    eax,0xb4c9cbbb
  42a981:	fldenv [ebp+ebx*4+0x52a4eda2]
  42a988:	mov    ?,WORD PTR [ebp+0x25af1242]
  42a98e:	jl     0x42a9b3
  42a990:	adc    eax,0x6a93d2b8
  42a995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a996:	push   ecx
  42a997:	stos   DWORD PTR es:[edi],eax
  42a998:	pop    edi
  42a99a:	pop    edx
  42a99b:	mov    eax,ds:0xaf5eb029
  42a9a0:	repz int 0xa6
  42a9a3:	pop    edi
  42a9a4:	inc    edi
  42a9a5:	rol    DWORD PTR [esi],0xa8
  42a9a8:	or     DWORD PTR [ebx-0x50],edx
  42a9ab:	sbb    eax,0xd4cff547
  42a9b0:	cwde   
  42a9b1:	adc    dl,BYTE PTR [esi]
  42a9b3:	in     al,dx
  42a9b4:	pop    ecx
  42a9b5:	jp     0x42a94c
  42a9b7:	inc    ecx
  42a9b8:	retf   0x3d62
  42a9bb:	bound  ebp,QWORD PTR [ebp+0x6bdd9ceb]
  42a9c1:	and    al,0xb9
  42a9c3:	jmp    0x123a:0x677e3a0f
  42a9ca:	outs   dx,DWORD PTR ds:[esi]
  42a9cb:	cmp    BYTE PTR [edx],0xf
  42a9ce:	pop    ss
  42a9cf:	aas    
  42a9d0:	or     BYTE PTR ds:0x4f74c53d,bl
  42a9d6:	cmc    
  42a9d7:	mov    ah,0x41
  42a9d9:	hlt    
  42a9da:	test   dh,dl
  42a9dc:	dec    edi
  42a9dd:	mov    eax,0xdbd8eed1
  42a9e2:	jmp    0xacd0f290
  42a9e7:	sahf   
  42a9e8:	lds    esp,FWORD PTR [esi+eax*1-0x30]
  42a9ec:	dec    edi
  42a9ed:	scas   eax,DWORD PTR es:[edi]
  42a9ee:	outs   dx,DWORD PTR ds:[esi]
  42a9ef:	fist   WORD PTR [edx]
  42a9f1:	dec    eax
  42a9f2:	pop    eax
  42a9f3:	or     DWORD PTR [eax],0x36
  42a9f6:	test   BYTE PTR [eax+0x6b],al
  42a9f9:	pop    ss
  42a9fa:	mov    ah,0x12
  42a9fc:	and    BYTE PTR [ebp-0x5a1ed742],al
  42aa02:	shr    BYTE PTR [ebx-0x65],0xaa
  42aa06:	mov    edi,0x129e697f
  42aa0b:	mul    DWORD PTR [ecx]
  42aa0d:	sub    esp,DWORD PTR [ebx-0x8]
  42aa10:	pusha  
  42aa11:	sbb    bl,cl
  42aa13:	xchg   di,ax
  42aa15:	(bad)  
  42aa16:	mov    ds:0x4c402ed6,al
  42aa1b:	(bad)  
  42aa1c:	clc    
  42aa1d:	cmp    ecx,DWORD PTR [ebx]
  42aa1f:	jle    0x42a9bf
  42aa21:	add    eax,0x59125ab
  42aa26:	std    
  42aa27:	fild   DWORD PTR [eax-0x6acb9e47]
  42aa2d:	sub    BYTE PTR [ecx+0x4142a264],ah
  42aa33:	add    al,0x35
  42aa35:	or     DWORD PTR [ebx-0x10],0xffffffd1
  42aa39:	mov    ds:0x8d7fcca9,eax
  42aa3e:	aam    0xf4
  42aa40:	xchg   ebp,eax
  42aa41:	leave  
  42aa42:	fwait
  42aa43:	(bad)  
  42aa44:	scas   al,BYTE PTR es:[edi]
  42aa45:	stc    
  42aa46:	cmp    ch,BYTE PTR [ebp+edi*4+0x2e]
  42aa4a:	jmp    0x3e8037f0
  42aa4f:	test   DWORD PTR [ecx+0x36],esi
  42aa52:	les    edi,FWORD PTR [eax+0x4c]
  42aa55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa56:	daa    
  42aa57:	push   edx
  42aa58:	int    0x27
  42aa5a:	(bad)  
  42aa5b:	xor    al,0x8c
  42aa5d:	test   al,0xeb
  42aa5f:	push   DWORD PTR [edi+0x52]
  42aa62:	inc    ecx
  42aa63:	(bad)  
  42aa64:	jg     0x42aaa4
  42aa66:	bnd jge 0x42aa51
  42aa69:	mov    ch,0x20
  42aa6b:	cmp    al,0x34
  42aa6d:	cmp    DWORD PTR [ebp*8-0x494a5a5b],edi
  42aa74:	ror    BYTE PTR [ebx],cl
  42aa76:	and    ah,dh
  42aa78:	mov    esp,0x14516ff6
  42aa7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa7e:	inc    esi
  42aa7f:	or     al,bh
  42aa81:	and    BYTE PTR [edi+0x28b40fb2],dh
  42aa87:	adc    BYTE PTR [esi],dl
  42aa89:	(bad)  [ebx+eiz*1]
  42aa8c:	in     eax,dx
  42aa8d:	aas    
  42aa8e:	or     DWORD PTR [edx+esi*2],eax
  42aa91:	adc    ch,bl
  42aa93:	push   0x3f507be8
  42aa98:	cmp    edx,DWORD PTR [eax-0x12]
  42aa9b:	jno    0x42aae0
  42aa9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa9f:	rcl    cl,1
  42aaa1:	sbb    al,0x5f
  42aaa3:	out    0x47,eax
  42aaa5:	es stos DWORD PTR es:[edi],eax
  42aaa7:	sbb    al,0x79
  42aaa9:	dec    ecx
  42aaaa:	sbb    dl,ah
  42aaac:	(bad)  
  42aaad:	bound  eax,QWORD PTR [edi-0x5d]
  42aab0:	xchg   BYTE PTR ds:0x4f92411a,bl
  42aab6:	pop    ebp
  42aab7:	sbb    bh,BYTE PTR [ecx-0x14b64f2a]
  42aabd:	scas   al,BYTE PTR es:[edi]
  42aabe:	punpckldq mm0,mm0
  42aac1:	mov    eax,0x935591df
  42aac6:	leave  
  42aac7:	rcr    BYTE PTR [ebp-0xc41178a],cl
  42aacd:	inc    edx
  42aace:	pop    ebx
  42aacf:	xabort 0x36
  42aad2:	out    dx,al
  42aad3:	je     0x42aae9
  42aad5:	xchg   DWORD PTR [edx+0x21e77ddd],eax
  42aadb:	out    dx,eax
  42aadc:	adc    eax,0xeac88b95
  42aae1:	idiv   DWORD PTR [eax]
  42aae3:	stc    
  42aae4:	push   ebx
  42aae5:	mov    bh,0xed
  42aae7:	xchg   esi,eax
  42aae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aae9:	sub    eax,DWORD PTR [edx+0x38ed9e43]
  42aaef:	scas   al,BYTE PTR es:[edi]
  42aaf0:	xchg   ebp,eax
  42aaf1:	sbb    eax,edi
  42aaf3:	nop
  42aaf4:	(bad)
  42aaf7:	xchg   ebp,eax
  42aaf8:	push   es
  42aaf9:	mov    cl,0x40
  42aafb:	test   bl,dh
  42aafd:	(bad)  
  42aafe:	cwde   
  42aaff:	mov    bh,0xc5
  42ab01:	sbb    eax,0xceeb6a86
  42ab07:	mov    eax,ds:0xa0bd6974
  42ab0c:	mov    dl,0x7a
  42ab0e:	sub    al,0x38
  42ab10:	in     al,dx
  42ab11:	pop    edx
  42ab12:	mov    esp,0x49dbf6bf
  42ab17:	add    DWORD PTR [eax-0x16978a19],0xa26b5eb6
  42ab21:	mov    eax,esp
  42ab23:	ror    BYTE PTR [edi],1
  42ab25:	cmp    DWORD PTR ds:0x3b7b2947,ecx
  42ab2b:	nop
  42ab2c:	test   ecx,edi
  42ab2e:	sbb    BYTE PTR [ecx+edi*8-0x726a687d],cl
  42ab35:	js     0x42ab8a
  42ab37:	cwde   
  42ab38:	mov    ebp,0x6db29b20
  42ab3d:	pop    ebp
  42ab3e:	bnd jl 0x42ab51
  42ab41:	in     al,0xe4
  42ab43:	pop    ds
  42ab44:	sar    DWORD PTR ds:0xadbddbd6,0x1d
  42ab4b:	inc    eax
  42ab4c:	cmc    
  42ab4d:	push   ds
  42ab4e:	jg     0x42ab40
  42ab50:	add    ah,dh
  42ab52:	push   ss
  42ab53:	adc    edx,DWORD PTR [ebp+0xa79ee8]
  42ab59:	stos   DWORD PTR es:[edi],eax
  42ab5a:	sub    BYTE PTR [esi+0xe],ch
  42ab5d:	cmp    esi,DWORD PTR ds:0xaedd5652
  42ab63:	pop    esp
  42ab64:	xchg   ecx,eax
  42ab65:	nop
  42ab66:	add    esp,ecx
  42ab68:	mov    eax,ds:0xfdec7f7
  42ab6d:	jp     0x42ab33
  42ab6f:	adc    ebx,DWORD PTR ds:0xd594679a
  42ab75:	add    ah,cl
  42ab77:	pop    ecx
  42ab79:	xchg   ebp,eax
  42ab7a:	mov    BYTE PTR [edi],bl
  42ab7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab7d:	dec    edx
  42ab7e:	stos   BYTE PTR es:[edi],al
  42ab7f:	and    esi,ebp
  42ab81:	inc    ebp
  42ab82:	add    DWORD PTR [eax+esi*4+0x51],ebx
  42ab86:	adc    edx,ebp
  42ab88:	sahf   
  42ab89:	xor    bh,BYTE PTR [ecx]
  42ab8b:	fadd   QWORD PTR [eax-0x4abfd4de]
  42ab91:	inc    ebx
  42ab92:	pop    ecx
  42ab93:	jnp    0x42ab73
  42ab95:	inc    edi
  42ab96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab97:	icebp  
  42ab98:	es repz cbw 
  42ab9c:	nop
  42ab9d:	lods   eax,DWORD PTR ds:[esi]
  42ab9e:	adc    al,0x51
  42aba0:	ret    
  42aba1:	shl    BYTE PTR [edx-0x6b],1
  42aba4:	mov    edx,DWORD PTR [esi]
  42aba6:	jns    0x42ab5f
  42aba8:	ins    DWORD PTR es:[edi],dx
  42aba9:	iret   
  42abaa:	xchg   ebp,eax
  42abab:	test   DWORD PTR [ebx+0x4db97e06],0x68a2d13d
  42abb5:	setns  BYTE PTR [edx]
  42abb8:	ret    
  42abb9:	std    
  42abba:	add    eax,0x152a2b13
  42abbf:	push   ss
  42abc0:	push   es
  42abc1:	xchg   edi,eax
  42abc2:	dec    ebx
  42abc3:	(bad)  
  42abc4:	fdiv   QWORD PTR [edi-0xd]
  42abc7:	out    dx,al
  42abc8:	mov    ah,0xa6
  42abca:	and    edi,DWORD PTR ss:[esp+edx*4]
  42abce:	jb     0x42ab97
  42abd0:	adc    eax,0x88d4a1d6
  42abd5:	inc    edx
  42abd6:	nop
  42abd7:	xor    BYTE PTR [ecx+0xe],ch
  42abda:	cli    
  42abdb:	inc    ebx
  42abdc:	mov    eax,ds:0xb468499e
  42abe1:	gs int3 
  42abe3:	mov    ebp,0xcbf6b3d6
  42abe8:	mov    edi,0x4d3cc016
  42abed:	hlt    
  42abee:	add    ecx,ebx
  42abf0:	ret    0x3ef8
  42abf3:	(bad)  
  42abf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abf5:	xchg   ebp,eax
  42abf6:	shl    DWORD PTR ds:0x2ee03727,1
  42abfc:	jp     0x42aba5
  42abfe:	(bad)  
  42abff:	jl     0x42abcf
  42ac01:	retf   
  42ac02:	inc    edi
  42ac03:	sbb    dh,al
  42ac05:	mov    esp,0x28a33b72
  42ac0a:	or     bh,ah
  42ac0c:	ins    BYTE PTR es:[edi],dx
  42ac0d:	outs   dx,BYTE PTR ds:[esi]
  42ac0e:	xchg   esi,eax
  42ac0f:	imul   edi,edx,0xffffffe2
  42ac12:	enter  0x1034,0x78
  42ac16:	in     eax,dx
  42ac17:	push   ds
  42ac18:	add    ah,BYTE PTR [edi+ecx*2]
  42ac1b:	xlat   BYTE PTR ds:[ebx]
  42ac1c:	pop    es
  42ac1d:	inc    edx
  42ac1e:	jle    0x42ac19
  42ac20:	xchg   esi,eax
  42ac21:	repz and al,BYTE PTR [eax+0x69b076cb]
  42ac28:	and    al,0x7b
  42ac2a:	dec    ebp
  42ac2b:	gs push 0xffffffee
  42ac2e:	mov    esi,0x675c1681
  42ac33:	add    ecx,eax
  42ac35:	xchg   esp,eax
  42ac36:	aam    0xbb
  42ac38:	inc    ecx
  42ac39:	mov    esp,eax
  42ac3b:	or     BYTE PTR [ecx-0x4f],dl
  42ac3e:	cld    
  42ac3f:	xor    eax,0xf0007cf2
  42ac44:	and    ebp,DWORD PTR [ebp-0x42]
  42ac47:	xchg   ebx,eax
  42ac48:	cmp    BYTE PTR [esi+0x3a],dh
  42ac4b:	in     al,dx
  42ac4c:	fld    QWORD PTR [edx+0x3f1a9439]
  42ac52:	sbb    edi,DWORD PTR [ecx-0x14]
  42ac55:	dec    ebx
  42ac56:	push   esp
  42ac57:	cmp    ah,BYTE PTR [eax]
  42ac59:	mov    WORD PTR [edi-0x7e286510],?
  42ac5f:	(bad)  
  42ac60:	mov    al,ss:0xc4100dbf
  42ac66:	ror    BYTE PTR ss:[ebx-0x4d],1
  42ac6a:	imul   eax,DWORD PTR [eax-0x32500b8b],0xfffffff5
  42ac71:	pop    ebp
  42ac72:	jg     0x42ac7b
  42ac74:	pusha  
  42ac75:	jmp    0x8a38:0x1a8dcf68
  42ac7c:	jb     0x42acfb
  42ac7e:	lea    esi,[edx+eiz*1+0x4e]
  42ac82:	std    
  42ac83:	std    
  42ac84:	rcl    BYTE PTR [ebp+ebp*4+0x61],0xb6
  42ac89:	mov    ds:0xbf899ce8,eax
  42ac8e:	or     BYTE PTR [ecx],bh
  42ac90:	jo     0x42ad06
  42ac92:	outs   dx,BYTE PTR ds:[esi]
  42ac93:	sbb    BYTE PTR [ebp-0x70],bh
  42ac96:	push   edx
  42ac97:	test   DWORD PTR [ebx-0x766eb698],0x47dcc42b
  42aca1:	cmc    
  42aca2:	cmp    al,0x9c
  42aca4:	sbb    dh,dh
  42aca6:	push   es
  42aca7:	xlat   BYTE PTR ds:[ebx]
  42aca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aca9:	sub    DWORD PTR [edx+ebx*4+0x45],0xffffffbd
  42acae:	je     0x42ac4a
  42acb0:	jg     0x42ad0e
  42acb2:	mov    DWORD PTR [esi-0x30a03d8e],eax
  42acb8:	xchg   edi,eax
  42acb9:	imul   ecx,esp,0x16487f25
  42acbf:	mov    bh,0x85
  42acc1:	test   BYTE PTR [ecx],ah
  42acc3:	les    esp,FWORD PTR [edi]
  42acc5:	scas   al,BYTE PTR es:[edi]
  42acc6:	sub    edx,DWORD PTR [edi]
  42acc8:	adc    al,0xef
  42acca:	lahf   
  42accb:	mov    al,ds:0x62a2cfd5
  42acd0:	and    dh,BYTE PTR [edi]
  42acd2:	cwde   
  42acd3:	sbb    BYTE PTR [edi+0x6c],0xbb
  42acd7:	lock cld 
  42acd9:	test   DWORD PTR [ecx+0x45],edx
  42acdc:	ins    BYTE PTR es:[edi],dx
  42acdd:	dec    eax
  42acde:	xchg   esp,eax
  42acdf:	mov    ecx,esp
  42ace1:	test   edx,esi
  42ace3:	mov    DWORD PTR [ebp-0x1b],esi
  42ace6:	sbb    BYTE PTR ds:0xdb8481fd,bl
  42acec:	mov    dl,0xd2
  42acee:	scas   al,BYTE PTR es:[edi]
  42acef:	jne    0x42ac84
  42acf1:	pop    esp
  42acf2:	mov    bl,0x13
  42acf4:	outs   dx,DWORD PTR ds:[esi]
  42acf5:	xor    ebp,esp
  42acf7:	mov    bl,0xac
  42acf9:	retf   0xb72b
  42acfc:	repnz aaa 
  42acfe:	lods   eax,DWORD PTR ds:[esi]
  42acff:	mov    BYTE PTR [esi],al
  42ad01:	mov    al,ds:0xe10871ef
  42ad06:	add    eax,0x5a5222fe
  42ad0b:	std    
  42ad0c:	push   0x6
  42ad0e:	lahf   
  42ad0f:	test   dh,dl
  42ad11:	sbb    DWORD PTR [ecx],esi
  42ad13:	mov    esi,0x5cec1641
  42ad18:	jg     0x42ad59
  42ad1a:	xchg   edi,eax
  42ad1b:	or     ebx,ebp
  42ad1d:	pop    es
  42ad1e:	enter  0x1b97,0x40
  42ad22:	mov    ah,0x51
  42ad24:	out    dx,eax
  42ad25:	push   edx
  42ad26:	fwait
  42ad27:	pop    ebx
  42ad28:	cwde   
  42ad29:	xor    eax,0xbe4f5464
  42ad2e:	test   ecx,ecx
  42ad30:	mov    gs,WORD PTR [edi-0x46]
  42ad33:	repz mov esi,0x56444db8
  42ad39:	add    eax,DWORD PTR [ebp-0xd28393d]
  42ad3f:	xchg   ecx,eax
  42ad40:	jne    0x42ad15
  42ad42:	(bad)  
  42ad43:	aad    0x92
  42ad45:	ja     0x42adae
  42ad47:	fs aad 0x53
  42ad4a:	dec    ecx
  42ad4b:	xchg   esp,eax
  42ad4c:	scas   al,BYTE PTR es:[edi]
  42ad4d:	cmp    eax,0x997a9eac
  42ad52:	cmp    al,0xa7
  42ad54:	sti    
  42ad55:	loop   0x42acd7
  42ad57:	mov    gs:0xb0341051,al
  42ad5d:	xchg   esi,eax
  42ad5e:	repnz mov bh,BYTE PTR [edi]
  42ad61:	jecxz  0x42ad66
  42ad63:	loop   0x42ad45
  42ad65:	in     al,0x81
  42ad67:	dec    esp
  42ad68:	mov    eax,ds:0xc7fdaff8
  42ad6d:	xlat   BYTE PTR ds:[bx]
  42ad6f:	mov    dh,0xb7
  42ad71:	inc    esi
  42ad72:	fs mov al,bl
  42ad75:	dec    ebx
  42ad76:	jbe    0x42adea
  42ad78:	sbb    ch,dl
  42ad7a:	scas   eax,DWORD PTR es:[edi]
  42ad7b:	add    BYTE PTR [esi-0x179c7f70],cl
  42ad81:	jno    0x42ad5e
  42ad83:	xor    eax,0x9e20a563
  42ad88:	enter  0x9c43,0xe6
  42ad8c:	into   
  42ad8d:	or     dl,BYTE PTR [ecx]
  42ad8f:	mov    dh,BYTE PTR [edx-0x1d4650df]
  42ad95:	add    BYTE PTR [esi],0x81
  42ad98:	mov    esi,0xd281ff23
  42ad9d:	and    eax,0x17417fff
  42ada2:	mov    eax,ds:0x8d99333
  42ada7:	jl     0x42ad91
  42ada9:	les    edx,FWORD PTR [eax+0x27f0d9e9]
  42adaf:	jmp    0x686c:0x6c9ef6ad
  42adb6:	mov    ds:0x351ad689,eax
  42adbb:	pop    esi
  42adbc:	lahf   
  42adbd:	loop   0x42ad57
  42adbf:	mov    al,0x25
  42adc1:	les    ebx,FWORD PTR [eax-0x4b649b65]
  42adc7:	aas    
  42adc8:	jnp    0x42ae3b
  42adca:	adc    edx,DWORD PTR [ebp-0x54b6b032]
  42add0:	loop   0x42ada1
  42add2:	mov    bl,0x51
  42add4:	aas    
  42add5:	xor    BYTE PTR [esi+edi*4-0x43],dl
  42add9:	sti    
  42adda:	mov    ds:0x8d389d94,eax
  42addf:	bound  esi,QWORD PTR [eax]
  42ade1:	jns    0x42ad87
  42ade3:	dec    edx
  42ade4:	and    bh,dl
  42ade6:	or     eax,DWORD PTR [ecx+0x3a3ff02f]
  42adec:	cmp    ah,BYTE PTR [ecx-0x159252a5]
  42adf2:	test   DWORD PTR [edi+0x6cb13101],edi
  42adf8:	sbb    WORD PTR ds:0x8adb1ec1,bp
  42adff:	xor    ch,ch
  42ae01:	pusha  
  42ae02:	pop    ebp
  42ae03:	cmp    al,0x94
  42ae05:	sub    al,0x7a
  42ae07:	jmp    0x6395:0xfec73076
  42ae0e:	dec    eax
  42ae0f:	xchg   ebp,eax
  42ae10:	rcr    DWORD PTR [esi+0x592470ef],0x7f
  42ae17:	and    cl,BYTE PTR [eax-0x1ed5e8b9]
  42ae1d:	enter  0x9ca3,0xd6
  42ae21:	ds or  eax,0xef5862ee
  42ae27:	sbb    eax,0x77c43ee1
  42ae2c:	ins    DWORD PTR es:[edi],dx
  42ae2d:	xor    edx,DWORD PTR cs:[ebx+0x1b]
  42ae31:	hlt    
  42ae32:	adc    BYTE PTR [ebp+0x2bbd8c31],cl
  42ae38:	paddw  mm6,QWORD PTR ds:0xc4db
  42ae3e:	xchg   esi,esp
  42ae40:	fisub  DWORD PTR [edi+0x22]
  42ae43:	lea    edx,[esi]
  42ae45:	xchg   ebp,eax
  42ae46:	das    
  42ae47:	repnz fmul DWORD PTR [edx-0x6f]
  42ae4b:	sub    DWORD PTR [edi],edi
  42ae4d:	inc    ecx
  42ae4e:	ror    DWORD PTR [eax-0x39757b54],cl
  42ae54:	xor    DWORD PTR [esi],esi
  42ae56:	xchg   ebx,eax
  42ae57:	popa   
  42ae58:	icebp  
  42ae59:	outs   dx,BYTE PTR ds:[esi]
  42ae5a:	push   0x73a44b6
  42ae5f:	sub    dh,bh
  42ae61:	call   0x701053d5
  42ae66:	cli    
  42ae67:	int3   
  42ae68:	int    0x9a
  42ae6a:	hlt    
  42ae6b:	cmp    ebp,DWORD PTR [esp+eiz*4+0xb]
  42ae6f:	lods   eax,DWORD PTR ds:[esi]
  42ae70:	aad    0x45
  42ae72:	(bad)  
  42ae73:	scas   al,BYTE PTR es:[edi]
  42ae74:	test   BYTE PTR [eax+ebp*2+0x5387e8cd],bh
  42ae7b:	push   ss
  42ae7c:	push   ebp
  42ae7d:	sub    BYTE PTR [ebx+0x3ea3e103],cl
  42ae83:	in     eax,dx
  42ae84:	push   eax
  42ae85:	cmp    esp,ecx
  42ae87:	adc    dh,BYTE PTR [edi-0x5bb885c1]
  42ae8d:	sub    DWORD PTR ds:0x7c24924,0x21
  42ae94:	test   BYTE PTR [esi-0x52],dl
  42ae97:	lods   al,BYTE PTR ds:[esi]
  42ae98:	cld    
  42ae99:	mov    edx,0xf4dc1ffb
  42ae9e:	xchg   edx,eax
  42ae9f:	(bad)
  42aea2:	dec    ebx
  42aea3:	rcr    BYTE PTR [ebx+0x6a],cl
  42aea6:	add    al,0xc8
  42aea8:	clc    
  42aea9:	stc    
  42aeaa:	xchg   edi,eax
  42aeab:	pusha  
  42aeac:	das    
  42aead:	xor    BYTE PTR [ebx+eiz*4+0x1a],0x11
  42aeb2:	rol    DWORD PTR [ebx-0x16],0xf8
  42aeb6:	cs test al,0x58
  42aeb9:	dec    edx
  42aeba:	das    
  42aebb:	jo     0x42af23
  42aebd:	push   eax
  42aebe:	jns    0x42aea0
  42aec0:	mov    fs,WORD PTR [ebx+0x925de9f]
  42aec6:	int    0x83
  42aec8:	mov    eax,cs:0x346e84b6
  42aece:	pop    edx
  42aecf:	jl     0x42af17
  42aed1:	jp     0x42ae70
  42aed3:	xchg   DWORD PTR [esi-0x18803189],edx
  42aed9:	sub    ecx,DWORD PTR [ecx-0x2a0e1d5b]
  42aedf:	xor    al,0x5
  42aee1:	sbb    eax,0x4fda31ad
  42aee6:	rcl    DWORD PTR [ebx+0x47],0xdd
  42aeea:	mov    al,0x89
  42aeec:	mov    esp,0xe4d3f424
  42aef1:	call   0xa2898b4c
  42aef6:	imul   edi,DWORD PTR [eax+0x4863365a],0x4911ff56
  42af00:	arpl   cx,dx
  42af02:	push   ss
  42af03:	cmp    DWORD PTR [ebx-0x25c8225f],edx
  42af09:	or     ebx,0xffffffbf
  42af0c:	or     ebx,0xceb4be5b
  42af12:	jecxz  0x42af85
  42af14:	push   eax
  42af15:	pop    ss
  42af16:	gs inc ecx
  42af18:	sub    edx,DWORD PTR [edx-0x2e]
  42af1b:	push   0x1c900595
  42af20:	fs pop edi
  42af22:	gs pop ds
  42af24:	xchg   edx,eax
  42af25:	xchg   ecx,eax
  42af26:	inc    edx
  42af27:	or     al,0x21
  42af29:	jmp    0x42af08
  42af2b:	and    eax,0xd8055abc
  42af30:	push   ecx
  42af31:	mov    ebx,0x2b6620b5
  42af36:	dec    edx
  42af37:	and    edx,ebx
  42af39:	lods   eax,DWORD PTR ds:[esi]
  42af3a:	scas   al,BYTE PTR es:[edi]
  42af3b:	adc    BYTE PTR [esi+ebp*2+0x13],dh
  42af3f:	adc    ebp,DWORD PTR [edi]
  42af41:	nop
  42af42:	ins    DWORD PTR es:[edi],dx
  42af43:	sub    DWORD PTR ds:0xe09d42ca,0xffffff93
  42af4a:	jmp    DWORD PTR [edx+0x15]
  42af4d:	daa    
  42af4e:	jp     0x42aedd
  42af50:	inc    esp
  42af51:	cs mov esi,0x96d34a7b
  42af57:	lock mov ebx,0x22fbac11
  42af5d:	xor    eax,0xcf12f404
  42af62:	sbb    dh,BYTE PTR [eax]
  42af64:	pop    es
  42af65:	fcom   QWORD PTR [esi+0xd9c4cdf]
  42af6b:	mov    ah,0x86
  42af6d:	test   DWORD PTR [ebp-0x7324a636],0xea0af33f
  42af77:	jp     0x42af6b
  42af79:	out    dx,eax
  42af7a:	scas   eax,DWORD PTR es:[edi]
  42af7b:	push   ecx
  42af7c:	push   ebx
  42af7d:	in     eax,dx
  42af7e:	xor    bl,BYTE PTR [ebx]
  42af80:	sbb    eax,DWORD PTR [edi-0x7a94dc7e]
  42af86:	das    
  42af87:	ja     0x42aff9
  42af89:	dec    ebx
  42af8a:	mov    eax,0xa1db8866
  42af8f:	aam    0x72
  42af91:	sbb    al,ch
  42af93:	in     al,dx
  42af94:	sbb    dl,0x69
  42af97:	jno    0x42af87
  42af99:	adc    DWORD PTR [eax-0x13],esi
  42af9c:	inc    edi
  42af9d:	or     cl,dl
  42af9f:	jg     0x42afe5
  42afa1:	mov    BYTE PTR [esi+0x57b766db],al
  42afa7:	mov    eax,DWORD PTR [ebx+0xf]
  42afaa:	mov    edx,0xac83bd30
  42afaf:	xchg   DWORD PTR [edx-0x2],ebx
  42afb2:	pop    esi
  42afb3:	(bad)  
  42afb4:	js     0x42afbe
  42afb6:	sbb    DWORD PTR [ecx-0x4a],0xffffffc8
  42afba:	ins    BYTE PTR es:[edi],dx
  42afbb:	mov    ch,0x27
  42afbd:	rol    DWORD PTR [ecx+0x72f8276f],cl
  42afc3:	push   esi
  42afc4:	jae    0x42af61
  42afc6:	sub    ch,BYTE PTR [ecx]
  42afc8:	adc    edx,DWORD PTR [ebx+0x2a]
  42afcb:	inc    ecx
  42afcc:	pop    eax
  42afcd:	addr16 mov edi,0xadd6e951
  42afd3:	mov    esi,0xd7361542
  42afd8:	pop    esi
  42afd9:	jg     0x42af78
  42afdb:	dec    ecx
  42afdc:	cwde   
  42afdd:	test   eax,0x17378836
  42afe2:	popf   
  42afe3:	jge    0x42af94
  42afe5:	sbb    cl,BYTE PTR [edx]
  42afe7:	lds    eax,FWORD PTR [eax+edi*2]
  42afea:	pop    ebp
  42afeb:	push   eax
  42afec:	loop   0x42afd4
  42afee:	sub    DWORD PTR [edi+0x73],0xd735b03d
  42aff5:	dec    esi
  42aff6:	icebp  
  42aff7:	jmp    0x3637b785
  42affc:	shl    BYTE PTR [eax-0x6a],cl
  42afff:	adc    DWORD PTR [ebx-0x616a0b3],ebp
  42b005:	jge    0x42afd6
  42b007:	shr    BYTE PTR [esi],1
  42b009:	das    
  42b00a:	jnp    0x42b05f
  42b00c:	dec    ebx
  42b00d:	das    
  42b00e:	add    edx,DWORD PTR [ebx+0x71]
  42b011:	cmp    eax,0x17d8aa15
  42b016:	pop    ecx
  42b017:	(bad)  
  42b018:	adc    BYTE PTR [eax],bh
  42b01a:	hlt    
  42b01b:	(bad)  
  42b01d:	mov    dl,0xfa
  42b01f:	adc    dh,al
  42b021:	mov    al,BYTE PTR [esi-0x2a727b3c]
  42b027:	mov    esi,0x4cbd2d48
  42b02c:	jmp    0x7dc11d19
  42b031:	mov    al,ds:0x6eff5fde
  42b037:	adc    al,0x2c
  42b039:	mov    dl,0x60
  42b03b:	jmp    0x611ad5d7
  42b040:	sbb    BYTE PTR [ebp+esi*2-0x75e04b1e],bl
  42b047:	sbb    al,0xda
  42b049:	and    eax,0xa49da219
  42b04e:	pop    ss
  42b04f:	jmp    0x47cdd5cb
  42b054:	pop    esp
  42b055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b056:	fisubr DWORD PTR [ebx+0x24]
  42b059:	test   al,0xd6
  42b05b:	jp     0x42b0ac
  42b05d:	add    esi,DWORD PTR [ebx]
  42b05f:	addr16 push cs
  42b061:	outs   dx,DWORD PTR ds:[esi]
  42b062:	out    dx,eax
  42b063:	push   esp
  42b064:	add    bl,bl
  42b066:	mov    ecx,0xc9b73bb5
  42b06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b06c:	enter  0xecbb,0x28
  42b070:	and    esi,DWORD PTR ds:[esi-0x38]
  42b074:	int3   
  42b075:	mov    DWORD PTR [ebx+esi*1+0xb],esp
  42b079:	mov    al,ds:0xe7285c07
  42b07e:	fsubp  st(4),st
  42b080:	add    dl,BYTE PTR [ebp+eiz*8+0x13]
  42b084:	mov    esp,DWORD PTR [esi-0x51]
  42b087:	fist   WORD PTR [edx+0x798accf2]
  42b08d:	js     0x42b0d7
  42b08f:	fwait
  42b090:	mov    bh,al
  42b092:	in     al,dx
  42b093:	stos   DWORD PTR es:[edi],eax
  42b094:	adc    BYTE PTR ss:[eax-0x2b],bh
  42b098:	cmp    eax,0xb0bec019
  42b09d:	mov    edi,0x38882b2c
  42b0a2:	sahf   
  42b0a3:	dec    edi
  42b0a4:	inc    ebx
  42b0a5:	add    bl,BYTE PTR [ebp+0xd7e94c4]
  42b0ab:	mov    ds:0x8973d70c,eax
  42b0b0:	inc    ebp
  42b0b1:	aad    0xf4
  42b0b3:	xor    cl,al
  42b0b5:	pop    esi
  42b0b7:	in     eax,0x27
  42b0b9:	sub    al,0x1a
  42b0bb:	sub    DWORD PTR [esi-0x7c8c8b96],0x7b6cf5b0
  42b0c5:	xchg   esi,eax
  42b0c6:	xlat   BYTE PTR ds:[ebx]
  42b0c7:	jb     0x42b122
  42b0c9:	mov    BYTE PTR [ecx],bl
  42b0cb:	call   0x337d089b
  42b0d0:	retf   0x4b36
  42b0d3:	xchg   ebp,eax
  42b0d4:	les    ebp,FWORD PTR [eax+0x3f98fe9]
  42b0da:	or     edx,DWORD PTR ds:0xb1f1dff9
  42b0e0:	lahf   
  42b0e1:	mov    bh,ah
  42b0e3:	xor    al,0x5b
  42b0e5:	push   esi
  42b0e6:	push   ss
  42b0e7:	inc    eax
  42b0e8:	mov    esp,0x6a1ba513
  42b0ed:	add    eax,0x4c6033b1
  42b0f2:	xor    DWORD PTR [di],0xffffff8b
  42b0f6:	data16 xchg BYTE PTR [edx],bh
  42b0f9:	pushf  
  42b0fa:	mov    dh,0xdd
  42b0fc:	in     al,dx
  42b0fd:	aaa    
  42b0fe:	stos   BYTE PTR es:[edi],al
  42b0ff:	loop   0x42b14d
  42b101:	fiadd  DWORD PTR [edx-0x6526af39]
  42b107:	into   
  42b108:	xchg   ebp,eax
  42b109:	cwde   
  42b10a:	imul   ecx,ecx,0xffffffe2
  42b10d:	mov    bh,0x9
  42b10f:	jae    0x42b162
  42b111:	fstp   DWORD PTR [edi]
  42b113:	je     0x42b0c4
  42b115:	fdiv   st(4),st
  42b117:	fwait
  42b118:	test   al,0x96
  42b11a:	ins    BYTE PTR es:[edi],dx
  42b11b:	and    eax,0xcd570bd5
  42b120:	inc    esi
  42b121:	fsub   DWORD PTR [edi+0x6f71046]
  42b127:	aas    
  42b128:	pop    edi
  42b129:	sbb    DWORD PTR [esi+0x59d8a8a6],edi
  42b12f:	(bad)  
  42b130:	jmp    0xccc7:0xf6343456
  42b137:	mov    ecx,0x264d3da4
  42b13c:	ja     0x42b12d
  42b13e:	ja     0x42b19e
  42b140:	mov    esp,0xaa835241
  42b145:	dec    edi
  42b146:	push   ds
  42b147:	mov    ecx,0x255c31fc
  42b14c:	cdq    
  42b14d:	pop    ebx
  42b14e:	repnz call 0xddf1:0x9c872c0c
  42b156:	sub    dh,BYTE PTR [ecx-0x1cc77059]
  42b15c:	push   esi
  42b15d:	inc    esp
  42b15e:	sub    ebx,ebp
  42b160:	jge    0x42b10f
  42b162:	jns    0x42b166
  42b164:	add    al,0x76
  42b166:	adc    BYTE PTR [ebp+eax*2+0x44a35c9f],al
  42b16d:	push   eax
  42b16e:	and    esi,DWORD PTR [edi+0x39]
  42b171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b172:	mov    ecx,0x51436677
  42b177:	mov    ah,BYTE PTR [ecx]
  42b179:	dec    edi
  42b17a:	mov    al,ds:0x2f19d2e9
  42b17f:	mov    BYTE PTR [ecx-0x12],bl
  42b182:	mov    eax,ds:0x66e1e4ef
  42b187:	call   0xec61:0x6c66c8f8
  42b18e:	popf   
  42b18f:	push   esi
  42b190:	rcr    DWORD PTR [edi],0x6a
  42b193:	loope  0x42b1f2
  42b195:	loope  0x42b1ba
  42b197:	jmp    0xd40e:0x5984c4f8
  42b19e:	stos   BYTE PTR es:[edi],al
  42b19f:	mov    bl,0xf9
  42b1a1:	test   eax,0xcb6e0e5
  42b1a6:	and    DWORD PTR [eax+0x3f],edx
  42b1a9:	push   esp
  42b1aa:	mov    dl,0xdf
  42b1ac:	(bad)  [ebx]
  42b1ae:	jecxz  0x42b1f8
  42b1b0:	in     eax,0x24
  42b1b2:	lds    edx,FWORD PTR [esi+0x5ae4a9a6]
  42b1b8:	pop    ds
  42b1b9:	(bad)  
  42b1ba:	lods   eax,DWORD PTR ds:[esi]
  42b1bb:	adc    ebx,DWORD PTR [ebx]
  42b1bd:	xchg   ebp,eax
  42b1be:	and    al,0xe3
  42b1c0:	cld    
  42b1c1:	sbb    al,0x49
  42b1c3:	xchg   edi,eax
  42b1c4:	adc    ah,ah
  42b1c6:	push   ds
  42b1c7:	retf   0xd3fe
  42b1ca:	jmp    0x42b20f
  42b1cc:	adc    BYTE PTR [esi-0x4d],al
  42b1cf:	shl    bl,1
  42b1d1:	icebp  
  42b1d2:	repz ret 0x93c9
  42b1d6:	jp     0x42b217
  42b1d8:	mov    eax,ds:0xf5f1f38
  42b1dd:	das    
  42b1de:	fidiv  DWORD PTR ds:0x75fed328
  42b1e4:	js     0x42b25e
  42b1e6:	sbb    al,0xcb
  42b1e8:	out    dx,eax
  42b1e9:	inc    edx
  42b1ea:	aam    0x78
  42b1ec:	pop    ss
  42b1ed:	pop    eax
  42b1ee:	add    esp,DWORD PTR [ebx+0x73]
  42b1f1:	outs   dx,DWORD PTR ds:[esi]
  42b1f2:	xlat   BYTE PTR ds:[ebx]
  42b1f3:	cli    
  42b1f4:	in     al,0xdb
  42b1f6:	sbb    BYTE PTR [edi+0x5],ah
  42b1f9:	gs out 0x58,eax
  42b1fc:	rcr    BYTE PTR [edx],cl
  42b1fe:	mov    BYTE PTR [edx+0x70],ch
  42b201:	xlat   BYTE PTR ds:[ebx]
  42b202:	test   eax,0xfb2db853
  42b207:	cmp    dl,ch
  42b209:	cmp    ebx,DWORD PTR [ecx+0x38]
  42b20c:	aas    
  42b20d:	popf   
  42b20e:	mov    ch,0xcf
  42b210:	(bad)  
  42b211:	repnz hlt 
  42b213:	lds    edi,FWORD PTR [ebp-0x1b]
  42b216:	imul   ebp,DWORD PTR [ebx+0x4af6131b],0x46d2500f
  42b220:	jnp    0x42b27a
  42b222:	js     0x42b1d1
  42b224:	push   ds
  42b225:	js     0x42b1e6
  42b227:	pop    es
  42b228:	adc    bh,BYTE PTR [edi+0x32]
  42b22b:	je     0x42b27a
  42b22d:	cld    
  42b22e:	data16 ffree st(5)
  42b231:	dec    eax
  42b232:	jmp    esp
  42b234:	ins    BYTE PTR es:[edi],dx
  42b235:	sbb    al,0x47
  42b237:	retf   0x78b3
  42b23a:	test   DWORD PTR [edi+ebx*2],ebp
  42b23d:	inc    edx
  42b23e:	int    0x10
  42b240:	or     al,0x72
  42b242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b243:	jae    0x42b221
  42b245:	mov    al,ds:0x730b6153
  42b24a:	(bad)
  42b24d:	arpl   WORD PTR [esi+eiz*1],bp
  42b250:	daa    
  42b251:	mov    bh,0x34
  42b253:	mov    bh,0x4
  42b255:	and    eax,0x49438856
  42b25a:	or     esi,DWORD PTR [ecx-0x7d]
  42b25d:	pop    edx
  42b25e:	mov    cl,0x35
  42b260:	addr16 push esp
  42b262:	stos   BYTE PTR es:[edi],al
  42b263:	imul   eax,DWORD PTR [ecx-0x34aaaa02],0x6f
  42b26a:	mov    ah,0x62
  42b26c:	rcl    BYTE PTR [edi],cl
  42b26e:	dec    edi
  42b26f:	int    0xcb
  42b271:	adc    DWORD PTR [edx],esp
  42b273:	aas    
  42b274:	cmp    DWORD PTR [edi+0x16],0x74d4fcee
  42b27b:	sub    al,0xf
  42b27d:	mov    dl,0x98
  42b27f:	dec    ebp
  42b280:	pusha  
  42b281:	fsubr  DWORD PTR [esi-0x58]
  42b284:	enter  0x8bac,0xf7
  42b288:	inc    esi
  42b289:	es (bad) 
  42b28b:	fsubr  st,st(2)
  42b28d:	sbb    dh,dh
  42b28f:	int    0x60
  42b291:	call   0x4eef:0xe28a9a5c
  42b298:	inc    esi
  42b299:	push   ebx
  42b29a:	nop
  42b29b:	enter  0xd3bf,0x79
  42b29f:	sbb    esi,edx
  42b2a1:	scas   eax,DWORD PTR es:[edi]
  42b2a2:	imul   edx,esi,0xffffff80
  42b2a5:	pop    eax
  42b2a6:	loopne 0x42b264
  42b2a8:	call   0xee1a:0x69030fb8
  42b2af:	arpl   WORD PTR [esp+edx*2],sp
  42b2b2:	sar    BYTE PTR [esp+eiz*4-0x7],cl
  42b2b6:	pop    edx
  42b2b7:	(bad)  [ebx-0xb]
  42b2ba:	push   0xfffffffd
  42b2bc:	push   esi
  42b2bd:	push   ebx
  42b2be:	loope  0x42b2fd
  42b2c0:	jl     0x42b2fb
  42b2c2:	jle    0x42b246
  42b2c4:	mov    esp,0x53f08f0b
  42b2c9:	call   0x3f05:0x34d5b8f8
  42b2d0:	pop    ds
  42b2d1:	or     esp,DWORD PTR [ecx-0x7f0c6c6]
  42b2d7:	add    eax,0xb408759b
  42b2dc:	inc    esi
  42b2dd:	icebp  
  42b2de:	js     0x42b27e
  42b2e0:	test   DWORD PTR [esi-0x4],ecx
  42b2e3:	mov    ebp,0x542cfe66
  42b2e8:	dec    ebx
  42b2e9:	(bad)  
  42b2ea:	fsubr  st(5),st
  42b2ec:	imul   edx,DWORD PTR [edx-0xfdcbb0c],0xffffff87
  42b2f3:	inc    eax
  42b2f4:	fucomip st,st(3)
  42b2f6:	jg     0x42b27d
  42b2f8:	(bad)  
  42b2f9:	ins    BYTE PTR es:[edi],dx
  42b2fa:	ds xchg esi,eax
  42b2fc:	out    dx,al
  42b2fd:	sahf   
  42b2fe:	mov    BYTE PTR [ebx-0x7b279c29],dl
  42b304:	in     al,0xf8
  42b306:	jne    0x42b2a2
  42b308:	dec    edi
  42b309:	add    BYTE PTR es:[ecx+0x2b],dl
  42b30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b30e:	mov    esi,0xef2153aa
  42b313:	ja     0x42b342
  42b315:	shr    al,cl
  42b317:	pop    ss
  42b318:	bound  edx,QWORD PTR [esi]
  42b31a:	xchg   ecx,eax
  42b31b:	mov    ecx,0xcf30a07
  42b320:	cdq    
  42b321:	(bad)  
  42b322:	push   eax
  42b323:	pop    es
  42b324:	add    al,BYTE PTR [edx+0x43]
  42b327:	test   eax,0x15f84744
  42b32c:	out    0x8e,al
  42b32e:	xchg   ecx,eax
  42b32f:	(bad)  
  42b330:	push   edx
  42b331:	jmp    0x42b361
  42b333:	clc    
  42b334:	out    dx,eax
  42b335:	xchg   edi,eax
  42b336:	inc    eax
  42b337:	sub    bl,bl
  42b339:	cmp    eax,0x9a60ddbd
  42b33e:	inc    BYTE PTR [edi]
  42b340:	mov    ebp,DWORD PTR [edi-0x5b]
  42b343:	nop    DWORD PTR [edx+0x39]
  42b347:	lods   eax,DWORD PTR ds:[esi]
  42b348:	jb     0x42b3a3
  42b34a:	clc    
  42b34b:	xlat   BYTE PTR ds:[ebx]
  42b34c:	xchg   ecx,eax
  42b34d:	add    al,0x50
  42b34f:	jmp    0x4d21:0x4ee55f27
  42b356:	dec    esp
  42b357:	sbb    eax,0xc25f551c
  42b35c:	xor    bh,BYTE PTR [ebx]
  42b35e:	ins    DWORD PTR es:[edi],dx
  42b35f:	inc    edx
  42b360:	adc    eax,0x8037ddb
  42b365:	(bad)  
  42b366:	nop    DWORD PTR [ebx+0x3a]
  42b36a:	inc    ebx
  42b36b:	retf   
  42b36c:	daa    
  42b36d:	into   
  42b36e:	loope  0x42b3c3
  42b370:	repz push ss
  42b372:	mov    esi,0x30fdaaac
  42b377:	cmp    bl,BYTE PTR [eax+0x4a]
  42b37a:	outs   dx,BYTE PTR ds:[esi]
  42b37b:	or     DWORD PTR [edx],esp
  42b37d:	daa    
  42b37e:	gs mov cl,0x61
  42b381:	or     eax,0x8b6f2c90
  42b386:	mov    edi,ebp
  42b388:	shl    DWORD PTR [eax],cl
  42b38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b38b:	jle    0x42b35d
  42b38d:	mov    edx,0xd0e4b5f1
  42b392:	fucom  st(5)
  42b394:	xchg   ebx,eax
  42b395:	push   es
  42b396:	out    dx,eax
  42b397:	iret   
  42b398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b399:	clc    
  42b39a:	mov    ah,0x10
  42b39c:	call   0xe8206e19
  42b3a1:	das    
  42b3a2:	xchg   ecx,eax
  42b3a3:	dec    ebp
  42b3a4:	xchg   edx,eax
  42b3a5:	retf   
  42b3a6:	xlat   BYTE PTR ds:[ebx]
  42b3a7:	retf   
  42b3a8:	xor    DWORD PTR [ecx],eax
  42b3aa:	mov    eax,ds:0xe8d00d66
  42b3af:	arpl   WORD PTR [eax-0x65a91cd8],ax
  42b3b5:	les    edx,FWORD PTR [eax+eax*1-0x24]
  42b3b9:	xchg   ecx,eax
  42b3ba:	das    
  42b3bb:	out    dx,eax
  42b3bc:	fld    DWORD PTR [edi+0x7c]
  42b3bf:	adc    BYTE PTR [edx],cl
  42b3c1:	dec    edi
  42b3c2:	enter  0xb0ae,0xee
  42b3c6:	adc    eax,0x1a772f4c
  42b3cb:	pop    es
  42b3cc:	add    eax,0xc2d1746f
  42b3d1:	(bad)  
  42b3d2:	(bad)  
  42b3d3:	mov    BYTE PTR [esi+esi*8+0x6a],bl
  42b3d7:	clc    
  42b3d8:	(bad)  
  42b3d9:	mov    ds:0xafeeeb65,eax
  42b3de:	sub    al,BYTE PTR ds:0xff207285
  42b3e4:	pusha  
  42b3e5:	jmp    0x42b3a8
  42b3e7:	bound  edi,QWORD PTR [ebx+0x3f]
  42b3ea:	out    dx,al
  42b3eb:	xchg   edx,eax
  42b3ec:	pop    edi
  42b3ed:	or     bl,BYTE PTR [edi+0x4ab2d89e]
  42b3f3:	cmp    al,0xf
  42b3f5:	xor    eax,0x7dc7fb63
  42b3fa:	pop    ebp
  42b3fb:	call   0x425f0625
  42b400:	sub    al,0x4e
  42b402:	dec    esi
  42b403:	dec    eax
  42b404:	or     BYTE PTR [eax-0x1cac63eb],dh
  42b40a:	popa   
  42b40b:	sbb    eax,0x72de5c68
  42b410:	mov    ebp,0x828dfda1
  42b415:	retf   
  42b416:	jecxz  0x42b453
  42b418:	stos   DWORD PTR es:[edi],eax
  42b419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b41a:	scas   eax,DWORD PTR es:[edi]
  42b41b:	xchg   esi,eax
  42b41c:	xor    esp,edi
  42b41e:	nop
  42b41f:	xchg   ecx,eax
  42b420:	or     DWORD PTR [esi-0x5bc5945c],esi
  42b426:	test   eax,0x3c02f59a
  42b42b:	mov    bl,0x26
  42b42d:	and    DWORD PTR es:[edi],edx
  42b430:	test   al,0xe0
  42b432:	add    DWORD PTR [ecx-0x70],eax
  42b435:	jo     0x42b447
  42b437:	add    ch,BYTE PTR [edi-0x7781d60c]
  42b43d:	xor    ah,al
  42b43f:	adc    BYTE PTR [ebx+0x39c5f571],cl
  42b445:	jmp    0xe3e8:0x51f70462
  42b44c:	mov    DWORD PTR [edx+0x7f199f27],ebx
  42b452:	cmp    edi,eax
  42b454:	inc    ebp
  42b455:	mov    bh,0x1f
  42b457:	mov    bh,BYTE PTR [esi-0x57]
  42b45a:	mov    esi,0x40064f4e
  42b45f:	cld    
  42b460:	je     0x42b3e2
  42b462:	sbb    esi,DWORD PTR [ecx+0x3c95f1bd]
  42b468:	push   ecx
  42b469:	test   eax,0x860db150
  42b46e:	add    ch,BYTE PTR [ebx+0x555dd079]
  42b474:	mov    ds:0x52502d58,al
  42b479:	fcom   QWORD PTR [edx]
  42b47b:	jnp    0x42b402
  42b47d:	lods   al,BYTE PTR ds:[esi]
  42b47e:	xchg   edi,eax
  42b47f:	inc    edi
  42b480:	dec    edi
  42b481:	pop    es
  42b482:	test   eax,0xe1760518
  42b487:	adc    DWORD PTR [edi+ebp*8],edi
  42b48a:	rol    DWORD PTR [eax+0x54],cl
  42b48d:	shl    BYTE PTR [ebx+0x20],0x77
  42b491:	and    BYTE PTR [ecx],bh
  42b493:	imul   esi,DWORD PTR [ecx],0xae09e4a2
  42b499:	pop    ds
  42b49a:	jmp    0xd5bbcebf
  42b49f:	inc    eax
  42b4a0:	dec    esi
  42b4a1:	test   DWORD PTR [edx+0x211b4022],0xab243915
  42b4ab:	(bad)  
  42b4ac:	cli    
  42b4ad:	push   edx
  42b4ae:	dec    esi
  42b4af:	adc    BYTE PTR [edi+0x65],dh
  42b4b2:	sub    eax,0x171f5d36
  42b4b7:	adc    al,0xba
  42b4b9:	sbb    BYTE PTR [ecx+0x2376f4e2],0x14
  42b4c0:	fcomp  QWORD PTR [ecx+ecx*2]
  42b4c3:	aam    0x55
  42b4c5:	jmp    0x69fb:0xd68f91d5
  42b4cc:	nop
  42b4cd:	mov    ds:0xfcb5faa1,al
  42b4d2:	mov    dl,0xd9
  42b4d4:	mov    ebp,0x73fa953d
  42b4d9:	dec    ebp
  42b4da:	mov    DWORD PTR [esi],ebp
  42b4dc:	sub    ecx,DWORD PTR [edi+0x6a]
  42b4df:	fmul   DWORD PTR [edx-0x5d60ec21]
  42b4e5:	and    eax,0x68d7b8f9
  42b4ea:	xchg   DWORD PTR [edx-0x18aa52c],ebx
  42b4f0:	test   ch,ah
  42b4f2:	push   eax
  42b4f3:	ret    
  42b4f4:	dec    edi
  42b4f5:	aas    
  42b4f6:	mov    es,WORD PTR [edx+0x40007f2b]
  42b4fc:	jg     0x42b4f8
  42b4fe:	cmp    BYTE PTR ds:0xdf522fea,ch
  42b504:	das    
  42b505:	add    bl,BYTE PTR ds:0xfd03fe5d
  42b50b:	sub    BYTE PTR [esi+0x9],0xda
  42b50f:	cmp    eax,0xc1491801
  42b514:	(bad)  
  42b515:	repnz aas 
  42b517:	mov    ecx,0xdfe52975
  42b51c:	mov    BYTE PTR [ecx+0x70],dl
  42b51f:	xchg   ecx,eax
  42b520:	push   es
  42b521:	(bad)  
  42b523:	mov    ch,0x95
  42b525:	inc    ebx
  42b526:	adc    BYTE PTR [ebx-0x46],bl
  42b529:	aad    0x81
  42b52b:	ins    BYTE PTR es:[edi],dx
  42b52c:	in     al,0xcd
  42b52e:	je     0x42b573
  42b530:	mov    esi,0x8b116db2
  42b535:	inc    esi
  42b536:	inc    edx
  42b537:	daa    
  42b538:	mov    ecx,0x11dd4800
  42b53d:	pusha  
  42b53e:	arpl   WORD PTR [eax+0x71],bp
  42b541:	mov    dl,0xc9
  42b543:	sbb    al,BYTE PTR [esi]
  42b545:	in     eax,0xb
  42b547:	aad    0x9c
  42b549:	int    0x27
  42b54b:	adc    eax,0xcca7fe34
  42b550:	repz repz jb 0x42b56c
  42b554:	dec    eax
  42b555:	rcr    DWORD PTR [eax+0x2a134a8e],1
  42b55b:	or     DWORD PTR [esi],esp
  42b55d:	dec    ebx
  42b55e:	sub    al,0x1
  42b560:	cmp    al,BYTE PTR [eax+0x70]
  42b563:	mov    ah,0x73
  42b565:	cmp    BYTE PTR [esi+0x9],bl
  42b568:	imul   ebx,DWORD PTR [eax+edi*2],0xdc528e94
  42b56f:	mov    bh,0x35
  42b571:	daa    
  42b572:	ret    
  42b573:	sbb    esi,esi
  42b575:	mov    dl,0x64
  42b577:	inc    esi
  42b578:	js     0x42b56a
  42b57a:	push   ebp
  42b57b:	out    dx,eax
  42b57c:	add    edx,DWORD PTR [edx]
  42b57e:	push   esp
  42b57f:	jecxz  0x42b592
  42b581:	mov    ch,0xd5
  42b583:	dec    ecx
  42b584:	ret    0x6790
  42b587:	and    BYTE PTR [ecx+0x790a5866],0x70
  42b58e:	imul   ebx,DWORD PTR [eax+0x4a96944b],0xcc4672f5
  42b598:	sub    BYTE PTR [ecx],0xa6
  42b59b:	jbe    0x42b5d5
  42b59d:	mov    cl,0x9a
  42b59f:	imul   esp,DWORD PTR [edi-0x15ee2be8],0xffffffb3
  42b5a6:	xchg   ebx,eax
  42b5a7:	adc    al,0xda
  42b5a9:	shr    DWORD PTR [eax+0x11],1
  42b5ac:	push   esp
  42b5ad:	retf   0x12ce
  42b5b0:	jnp    0x42b631
  42b5b2:	test   BYTE PTR [ecx+0x0],al
  42b5b5:	dec    esp
  42b5b6:	fcomp  QWORD PTR [edi-0x26]
  42b5b9:	dec    eax
  42b5ba:	jecxz  0x42b557
  42b5bc:	jmp    0x65abfc2b
  42b5c1:	xchg   ecx,eax
  42b5c2:	cmc    
  42b5c3:	cmp    BYTE PTR [ebx+0x1e799835],bh
  42b5c9:	repnz bound esp,QWORD PTR [esi-0x630c27a8]
  42b5d0:	xor    ebp,DWORD PTR [ebx-0x6de5dcd4]
  42b5d6:	and    ecx,esp
  42b5d8:	xchg   esi,eax
  42b5d9:	outs   dx,BYTE PTR ds:[esi]
  42b5da:	adc    al,0x67
  42b5dc:	pop    ds
  42b5dd:	out    0x4d,al
  42b5df:	pop    eax
  42b5e0:	xchg   ebp,eax
  42b5e1:	adc    eax,0xa0768957
  42b5e6:	pop    ss
  42b5e7:	mov    ds,ecx
  42b5e9:	aad    0xfa
  42b5eb:	popf   
  42b5ec:	pop    edi
  42b5ed:	scas   eax,DWORD PTR es:[edi]
  42b5ee:	or     BYTE PTR [esi+0x323bcd78],0xd2
  42b5f5:	leave  
  42b5f6:	push   cs
  42b5f7:	push   eax
  42b5f8:	test   BYTE PTR [ebx-0x1050d083],al
  42b5fe:	xor    bh,BYTE PTR [eax-0x7953f8f6]
  42b604:	pop    ecx
  42b605:	cmp    eax,DWORD PTR [eax-0x662e6b4b]
  42b60b:	push   ds
  42b60c:	(bad)  
  42b60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b60e:	inc    ecx
  42b60f:	call   0x8e55821f
  42b614:	and    eax,DWORD PTR [ecx]
  42b616:	mov    ds:0x23ccad2e,al
  42b61b:	jno    0x42b681
  42b61d:	lods   eax,DWORD PTR ds:[esi]
  42b61e:	fiadd  WORD PTR [edi-0x16]
  42b621:	mov    bl,0x3e
  42b623:	mov    BYTE PTR [ecx-0x68c23ed4],al
  42b629:	in     eax,dx
  42b62a:	adc    esp,DWORD PTR [ebx]
  42b62c:	mov    bh,0x6
  42b62e:	jl     0x42b632
  42b630:	out    0xb3,eax
  42b632:	cmp    edi,esp
  42b634:	call   0x17c2:0x2852bc07
  42b63b:	mov    dl,0xe3
  42b63d:	arpl   WORD PTR [esi+0x4],dx
  42b640:	retf   0x5140
  42b643:	ret    0x7648
  42b646:	sub    al,0x6b
  42b648:	imul   ebp,DWORD PTR ds:0x4e9ae767,0xb5d3efe0
  42b652:	push   0xffffffd6
  42b654:	sar    ah,1
  42b656:	xor    ch,BYTE PTR [esi]
  42b658:	mov    ch,0x3f
  42b65a:	mov    edi,0xe8057827
  42b65f:	and    BYTE PTR [ecx+ecx*1],ah
  42b662:	jns    0x42b62c
  42b664:	popf   
  42b665:	mov    ecx,0x4d7edd0e
  42b66a:	and    cl,BYTE PTR [esi-0x76897783]
  42b670:	push   edi
  42b671:	outs   dx,BYTE PTR ds:[esi]
  42b672:	rcr    eax,0x4f
  42b675:	call   0xe4f34520
  42b67a:	test   BYTE PTR [ecx+edx*8+0x37],ch
  42b67e:	std    
  42b67f:	sub    eax,0xd28a51f3
  42b684:	or     al,0x4
  42b686:	and    ebp,DWORD PTR [edi]
  42b688:	pop    eax
  42b689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b68a:	xchg   ecx,eax
  42b68b:	popa   
  42b68c:	mov    bl,0xe
  42b68e:	cs ins DWORD PTR es:[edi],dx
  42b690:	popf   
  42b691:	pop    ebx
  42b692:	mov    ?,WORD PTR [edi]
  42b694:	add    DWORD PTR [ebx],esp
  42b696:	ins    BYTE PTR es:[edi],dx
  42b697:	in     al,0xd6
  42b699:	xchg   edx,eax
  42b69a:	xlat   BYTE PTR ds:[ebx]
  42b69b:	xor    ebp,DWORD PTR [ebx]
  42b69d:	mov    ds,WORD PTR [eax-0x24]
  42b6a0:	cmp    BYTE PTR [ecx+ecx*1-0x4e],al
  42b6a4:	aam    0x52
  42b6a6:	imul   BYTE PTR [ebp+0x4e]
  42b6a9:	pop    ds
  42b6aa:	inc    ebx
  42b6ab:	int3   
  42b6ac:	das    
  42b6ad:	mov    bl,dl
  42b6af:	mov    eax,ds:0x8406a39e
  42b6b4:	jmp    0xeadf3b80
  42b6b9:	mov    dl,0x3f
  42b6bb:	dec    edx
  42b6bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6bd:	push   edi
  42b6be:	data16 cld 
  42b6c0:	out    dx,eax
  42b6c1:	inc    eax
  42b6c2:	ret    
  42b6c3:	push   esp
  42b6c4:	and    esp,DWORD PTR [edi]
  42b6c6:	jnp    0x42b650
  42b6c8:	dec    ebp
  42b6c9:	xchg   ebp,eax
  42b6ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6cb:	or     al,0x34
  42b6cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6ce:	mov    DWORD PTR [ebx],esp
  42b6d0:	fcom   DWORD PTR [eax-0x5f]
  42b6d3:	mov    ds:0xe8358877,eax
  42b6d8:	pop    ebx
  42b6d9:	mov    ds:0x405600d8,eax
  42b6de:	adc    bl,bl
  42b6e0:	mov    al,0xbc
  42b6e2:	sar    ecx,cl
  42b6e4:	mov    ch,0xf2
  42b6e6:	add    bh,ah
  42b6e8:	cld    
  42b6e9:	cmp    esp,DWORD PTR [esi-0x60c92858]
  42b6ef:	pop    ss
  42b6f0:	popa   
  42b6f1:	push   ecx
  42b6f2:	pop    esi
  42b6f3:	sub    DWORD PTR [ecx+0x75],ebx
  42b6f6:	xchg   edx,eax
  42b6f7:	test   al,0x4e
  42b6f9:	in     eax,0x8b
  42b6fb:	push   0xb4b733bc
  42b700:	imul   edx,DWORD PTR [edx+0x42],0x70d5716c
  42b707:	nop
  42b708:	mov    ebx,0xe2f08e7c
  42b70d:	retf   0xd4b3
  42b710:	xchg   BYTE PTR [edx+ecx*2-0x6c],ch
  42b714:	iret   
  42b715:	(bad)  fs:[eax+0x68]
  42b719:	pop    ebp
  42b71a:	and    eax,0xbf6ac050
  42b71f:	sti    
  42b720:	test   eax,0x3141db9c
  42b725:	in     al,0xb7
  42b727:	test   DWORD PTR [edx],esi
  42b729:	(bad)  
  42b72a:	ror    BYTE PTR [edx+0x356a3de8],0x74
  42b731:	enter  0x38cb,0x63
  42b735:	imul   edx,eax,0xffffffe4
  42b738:	loope  0x42b75f
  42b73a:	ret    
  42b73b:	mov    al,ds:0x428855e8
  42b740:	call   FWORD PTR [edx+0x54960245]
  42b746:	or     BYTE PTR [ecx+0x65],ah
  42b749:	xor    ah,BYTE PTR [ebx-0x7e]
  42b74c:	mov    edx,0x4b241fa7
  42b751:	mov    dl,0xb3
  42b753:	ret    0xc925
  42b756:	and    eax,DWORD PTR [ecx+0x71ba13c9]
  42b75c:	mov    esi,0x9e7874d4
  42b761:	jb     0x42b722
  42b763:	mov    ecx,0x6153d5be
  42b768:	daa    
  42b769:	fwait
  42b76a:	arpl   WORD PTR [esi+0x5fc71c29],sp
  42b770:	es push ebx
  42b772:	(bad)  
  42b773:	leave  
  42b774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b775:	bound  edi,QWORD PTR [esi-0x355bf40e]
  42b77b:	mov    bh,0x95
  42b77d:	jg     0x42b71d
  42b77f:	cmp    al,dh
  42b781:	xchg   ebp,eax
  42b782:	xor    eax,0x66586418
  42b787:	mov    dh,0x8e
  42b789:	(bad)  
  42b78a:	mov    ds:0x7b9c6b14,al
  42b78f:	xchg   ebp,eax
  42b790:	mov    al,0x23
  42b792:	adc    eax,0xc509ff36
  42b797:	and    esp,DWORD PTR [ecx]
  42b799:	mov    ch,BYTE PTR [edi-0x32]
  42b79c:	mov    esp,0x6bf1da4b
  42b7a1:	adc    eax,0x7a4c4cca
  42b7a6:	lds    esi,FWORD PTR [ebp-0x6a45f4d9]
  42b7ac:	loopne 0x42b7f4
  42b7ae:	into   
  42b7af:	or     edi,DWORD PTR [ecx-0x31]
  42b7b2:	and    DWORD PTR ss:0x6ad6dc9c,ebx
  42b7b9:	sahf   
  42b7ba:	jnp    0x42b761
  42b7bc:	fadd   st(1),st
  42b7be:	test   al,0x2
  42b7c0:	(bad)  
  42b7c2:	loope  0x42b7c3
  42b7c4:	dec    edx
  42b7c5:	ja     0x42b821
  42b7c7:	pop    esi
  42b7c8:	in     eax,dx
  42b7c9:	mov    cl,0xe2
  42b7cb:	cdq    
  42b7cc:	xchg   edi,eax
  42b7cd:	add    BYTE PTR [eax],ah
  42b7cf:	call   0x3f1d:0xc37383c6
  42b7d6:	cdq    
  42b7d7:	xchg   edi,eax
  42b7d8:	(bad)  
  42b7d9:	fistp  WORD PTR [edx]
  42b7db:	out    0x5d,eax
  42b7dd:	push   eax
  42b7de:	xchg   edx,eax
  42b7df:	push   cs
  42b7e0:	xor    BYTE PTR [edi+ebp*2],ah
  42b7e3:	repz lahf 
  42b7e5:	cmp    DWORD PTR [ebx+0x21a1a3b9],esi
  42b7eb:	xchg   edi,eax
  42b7ec:	ror    edi,0x48
  42b7ef:	mov    ebx,cs
  42b7f1:	ins    DWORD PTR es:[edi],dx
  42b7f2:	or     al,0xc3
  42b7f4:	and    DWORD PTR [esi+edx*2-0x16],0xffffffb9
  42b7f9:	(bad)  
  42b7fa:	lods   eax,DWORD PTR ds:[esi]
  42b7fb:	pop    esi
  42b7fc:	mov    edx,0x35a8f5f3
  42b801:	adc    al,0x45
  42b803:	inc    ebp
  42b804:	xchg   ecx,eax
  42b805:	adc    esp,DWORD PTR [edi-0xcda7af5]
  42b80b:	in     eax,dx
  42b80c:	icebp  
  42b80d:	xchg   edi,eax
  42b80e:	in     eax,dx
  42b80f:	stos   BYTE PTR es:[edi],al
  42b810:	shl    BYTE PTR [esi+edi*2],1
  42b813:	xchg   DWORD PTR [ebx*2-0x6ce66c89],esi
  42b81a:	xchg   edx,eax
  42b81b:	and    eax,0xb9f1d104
  42b820:	pop    esp
  42b821:	jb     0x42b7f3
  42b823:	dec    esp
  42b824:	inc    eax
  42b825:	mov    dh,0xed
  42b827:	sbb    al,0xc4
  42b829:	ins    BYTE PTR es:[edi],dx
  42b82a:	cmc    
  42b82b:	test   DWORD PTR [ebp-0x2a5bb8a1],ebx
  42b831:	shl    DWORD PTR ds:0x42cf34fe,cl
  42b837:	test   BYTE PTR [ecx-0x34],dl
  42b83a:	icebp  
  42b83b:	test   BYTE PTR [eax-0x5cb1f72b],0xe6
  42b842:	dec    edi
  42b843:	loope  0x42b890
  42b845:	ror    DWORD PTR [ebx+0x2d],1
  42b848:	retf   0x972c
  42b84b:	or     eax,0xce6e74ed
  42b850:	pop    esp
  42b851:	and    DWORD PTR [eax-0x4d],ebx
  42b854:	sahf   
  42b855:	outs   dx,DWORD PTR ds:[esi]
  42b856:	jge    0x42b85c
  42b858:	(bad)  
  42b85a:	xlat   BYTE PTR ds:[ebx]
  42b85b:	fadd   QWORD PTR [ebp-0x4d007332]
  42b861:	sub    ah,BYTE PTR [edi+0x27608487]
  42b867:	(bad)  
  42b868:	mov    eax,0xfda96a2f
  42b86d:	int    0x4a
  42b86f:	call   0xa1e:0xa4a20698
  42b876:	(bad)  
  42b877:	and    eax,0xfd77979a
  42b87c:	and    BYTE PTR [ebp+0x3f0b1e81],bl
  42b882:	xchg   esi,eax
  42b883:	sbb    cl,BYTE PTR fs:[eax-0x2a]
  42b887:	cwde   
  42b888:	and    BYTE PTR [esi+0x31419c6f],ch
  42b88e:	adc    eax,0xe4b22efa
  42b893:	dec    ebx
  42b894:	mov    dh,0xcf
  42b896:	cmc    
  42b897:	jmp    0x42b8c5
  42b899:	(bad)
  42b89d:	sti    
  42b89e:	jge    0x42b911
  42b8a0:	loopne 0x42b921
  42b8a2:	fstp   DWORD PTR [edi]
  42b8a4:	shr    BYTE PTR fs:[edi-0x4c],cl
  42b8a8:	pop    edi
  42b8a9:	jnp    0x42b8e3
  42b8ab:	mov    edi,DWORD PTR [esi+0x2e2dc8b6]
  42b8b1:	jnp    0x42b871
  42b8b3:	arpl   WORD PTR es:[ecx-0x30d3e843],cx
  42b8ba:	and    BYTE PTR [edi],ah
  42b8bc:	adc    ebp,DWORD PTR [eax]
  42b8be:	and    eax,DWORD PTR [eax+0x1]
  42b8c1:	(bad)  
  42b8c2:	leave  
  42b8c3:	mov    ds:0x638fed80,al
  42b8c8:	cmc    
  42b8c9:	mov    cl,bl
  42b8cb:	adc    DWORD PTR [edx],esp
  42b8cd:	adc    DWORD PTR [edx-0x31],esi
  42b8d0:	jp     0x42b866
  42b8d2:	dec    edx
  42b8d3:	call   0x74c0:0x1aa44e72
  42b8da:	inc    edx
  42b8db:	mov    ebx,0xc8ddd3b7
  42b8e0:	push   0xffffffb5
  42b8e2:	scas   al,BYTE PTR es:[edi]
  42b8e3:	int3   
  42b8e4:	loop   0x42b89a
  42b8e6:	int    0x1b
  42b8e8:	pusha  
  42b8e9:	pop    esp
  42b8ea:	aaa    
  42b8eb:	gs stc 
  42b8ed:	dec    esp
  42b8ee:	leave  
  42b8ef:	fist   WORD PTR ds:[ebx-0x36]
  42b8f3:	stos   BYTE PTR es:[edi],al
  42b8f4:	stc    
  42b8f5:	retf   0x9a27
  42b8f8:	into   
  42b8f9:	js     0x42b8b5
  42b8fb:	adc    eax,0x8199fd43
  42b900:	sbb    eax,0xea580131
  42b905:	pop    eax
  42b906:	adc    bl,BYTE PTR [edx]
  42b908:	ja     0x42b953
  42b90a:	and    al,0x4e
  42b90c:	daa    
  42b90d:	inc    ebp
  42b90e:	sub    eax,DWORD PTR [edi-0x6900a353]
  42b914:	mov    ebx,0xdc808f3
  42b919:	push   eax
  42b91a:	cmp    eax,0x80f9fb54
  42b91f:	jae    0x42b8aa
  42b921:	cmp    ch,BYTE PTR [ecx-0x750b1b91]
  42b927:	and    eax,0x184e81ae
  42b92c:	add    ecx,0xffffffc7
  42b92f:	lea    esi,[edi+0x0]
  42b932:	sbb    eax,0xa5b00142
  42b937:	push   es
  42b938:	add    eax,0x885fe249
  42b93d:	sti    
  42b93e:	out    0x61,eax
  42b940:	mov    gs,WORD PTR [edx-0x2]
  42b943:	dec    ebp
  42b944:	or     al,0x33
  42b946:	repnz outs dx,DWORD PTR ds:[esi]
  42b948:	pop    esi
  42b949:	dec    esp
  42b94a:	add    edx,DWORD PTR [eax-0x75]
  42b94d:	jo     0x42b94c
  42b94f:	pop    eax
  42b950:	mov    edx,0x9fd5786f
  42b955:	outs   dx,DWORD PTR ds:[esi]
  42b956:	aam    0xf5
  42b958:	jne    0x42b8ed
  42b95a:	sahf   
  42b95b:	push   cs
  42b95c:	push   ebp
  42b95d:	or     edx,DWORD PTR [eax-0x2f]
  42b960:	sbb    al,0x50
  42b962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b963:	sbb    ecx,DWORD PTR [edx]
  42b965:	int    0x36
  42b967:	sbb    eax,0x999fbc25
  42b96c:	mov    bl,0x4c
  42b96e:	push   ds
  42b96f:	int    0xab
  42b971:	jecxz  0x42b976
  42b973:	les    ecx,FWORD PTR [edx+edi*2-0x48]
  42b977:	retf   0xadf0
  42b97a:	je     0x42b9b9
  42b97c:	mov    esi,0x4f3b868b
  42b981:	pop    edi
  42b982:	adc    DWORD PTR [edx+0x73f3792a],edx
  42b988:	add    bl,dl
  42b98a:	pop    edx
  42b98b:	adc    DWORD PTR [ebp+0x20],ecx
  42b98e:	stc    
  42b98f:	call   0x6485:0xbb0efff5
  42b996:	jl     0x42b9cd
  42b998:	pop    esp
  42b999:	int    0x10
  42b99b:	xor    cl,dl
  42b99d:	push   es
  42b99e:	repz inc edx
  42b9a0:	jbe    0x42b9b9
  42b9a2:	xchg   BYTE PTR [edi],cl
  42b9a4:	inc    ebp
  42b9a5:	lods   al,BYTE PTR ds:[esi]
  42b9a6:	fistp  QWORD PTR [ecx]
  42b9a8:	mov    ah,0x39
  42b9aa:	mov    al,BYTE PTR [ecx+0x32]
  42b9ad:	loope  0x42b9b1
  42b9af:	xchg   ebx,eax
  42b9b0:	hlt    
  42b9b1:	out    dx,al
  42b9b2:	repz inc ecx
  42b9b4:	imul   BYTE PTR [edx-0x1c]
  42b9b7:	mov    esp,0xa6399b1a
  42b9bc:	cmp    esp,DWORD PTR [ecx+eax*1+0x70de62b3]
  42b9c3:	sbb    eax,0x8cae708d
  42b9c8:	add    DWORD PTR [eax-0x3763579b],edx
  42b9ce:	jnp    0x42b9c4
  42b9d0:	ins    BYTE PTR es:[edi],dx
  42b9d1:	pop    ds
  42b9d2:	sbb    eax,0xe356ab5a
  42b9d7:	sub    DWORD PTR [ebp+eax*4-0x27f252e3],ebx
  42b9de:	iret   
  42b9df:	dec    eax
  42b9e0:	(bad)  [edi+0x6975a1e1]
  42b9e6:	jmp    0x8738455f
  42b9eb:	into   
  42b9ec:	jns    0x42ba1e
  42b9ee:	jae    0x42ba6e
  42b9f0:	xchg   BYTE PTR [edi+0x9],cl
  42b9f3:	push   0x45
  42b9f5:	mov    edx,0xdbffbd92
  42b9fa:	jl     0x42ba51
  42b9fc:	lea    edx,[edx-0x4aeb27f5]
  42ba02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba03:	bound  ebx,QWORD PTR [edx-0x29]
  42ba06:	loope  0x42b98a
  42ba08:	mov    edx,0xedba2e32
  42ba0d:	popf   
  42ba0e:	mov    al,0xa4
  42ba10:	mov    ?,WORD PTR [edi+0x48f358f5]
  42ba16:	push   ebp
  42ba17:	add    al,0x7
  42ba19:	push   eax
  42ba1a:	cmp    ah,BYTE PTR [ebp+0x168c0577]
  42ba20:	sar    bl,cl
  42ba22:	test   eax,0x286ce286
  42ba27:	clc    
  42ba28:	jmp    0xc10b5870
  42ba2d:	ds inc eax
  42ba2f:	or     al,0xa9
  42ba31:	ds adc eax,0x4a5343be
  42ba37:	not    BYTE PTR [edx]
  42ba39:	and    dh,BYTE PTR [ecx+0x55]
  42ba3c:	fisttp DWORD PTR [eax+edx*8]
  42ba3f:	sbb    al,0x6e
  42ba41:	inc    ecx
  42ba42:	push   ebp
  42ba43:	xor    ecx,DWORD PTR [esi+eiz*1-0x1c]
  42ba47:	jnp    0x42ba2d
  42ba49:	(bad)
  42ba4c:	push   es
  42ba4d:	and    dh,BYTE PTR [edx+0x3b]
  42ba50:	jb     0x42ba4d
  42ba52:	out    0xe,al
  42ba54:	cs xchg esi,eax
  42ba56:	dec    ebx
  42ba57:	adc    eax,0x28f93483
  42ba5c:	adc    ecx,DWORD PTR ds:0x56a492a1
  42ba62:	(bad)  
  42ba63:	and    DWORD PTR ds:0x8d1deca4,0xe23272ac
  42ba6d:	jecxz  0x42ba55
  42ba6f:	adc    eax,0xa4a82541
  42ba74:	adc    eax,0x407e3b3c
  42ba79:	push   ss
  42ba7a:	jmp    0x4154:0x38ab3ae5
  42ba81:	test   DWORD PTR [eax-0x6ae35ffe],ebx
  42ba87:	(bad)  
  42ba89:	icebp  
  42ba8a:	inc    edx
  42ba8b:	jne    0x42ba2a
  42ba8d:	imul   ebx,DWORD PTR [esi],0x6ef69c61
  42ba93:	(bad)  
  42ba94:	repnz ds (bad) 
  42ba97:	movmskps ebx,xmm6
  42ba9a:	fs push esp
  42ba9c:	int    0x9e
  42ba9e:	fisubr WORD PTR [ebp+0x5f]
  42baa1:	push   ecx
  42baa2:	hlt    
  42baa3:	mov    eax,esi
  42baa5:	mov    esi,gs
  42baa7:	clc    
  42baa8:	dec    edi
  42baa9:	jmp    DWORD PTR [ecx+0x5]
  42baac:	imul   ebp,DWORD PTR [ebx+0x17d748c8],0x19
  42bab3:	imul   esi,DWORD PTR ds:0xef0c84fd,0x78
  42baba:	out    dx,al
  42babb:	xor    eax,0xcfec952a
  42bac0:	sbb    BYTE PTR [edx-0x2d],bl
  42bac3:	imul   edi,DWORD PTR [ebx],0x4156f0a7
  42bac9:	cmp    bh,al
  42bacb:	jne    0x42bb19
  42bacd:	inc    esi
  42bace:	add    BYTE PTR [eax-0x2652ab24],ah
  42bad4:	or     al,ch
  42bad6:	mov    ds:0x613ad9cf,al
  42badb:	mov    esp,0x485e6299
  42bae0:	fsubr  st,st(2)
  42bae2:	int    0x1
  42bae4:	dec    esp
  42bae5:	mov    ebp,0x1eb53d73
  42baea:	sub    eax,0x52593b41
  42baef:	xlat   BYTE PTR ds:[ebx]
  42baf0:	pop    eax
  42baf1:	in     eax,dx
  42baf2:	xor    ebx,ebp
  42baf4:	xchg   edi,eax
  42baf5:	lahf   
  42baf6:	imul   esi,DWORD PTR ds:0x16fab1f2,0xfffffff2
  42bafd:	ds or  al,0xd7
  42bb00:	jne    0x42baeb
  42bb02:	jge    0x42ba93
  42bb04:	into   
  42bb05:	pop    ds
  42bb06:	xchg   edx,eax
  42bb07:	or     dh,bh
  42bb09:	cmp    ah,BYTE PTR [edx-0x493607b0]
  42bb0f:	push   ebp
  42bb10:	leave  
  42bb11:	pushw  0x2b5e
  42bb15:	inc    esp
  42bb16:	and    cl,BYTE PTR [ebp+0x6f]
  42bb19:	(bad)  
  42bb1a:	shr    BYTE PTR [ecx+0x71026d39],cl
  42bb20:	jecxz  0x42bb79
  42bb22:	arpl   WORD PTR [eax-0x70],di
  42bb25:	test   BYTE PTR [ebp-0x535ed832],ah
  42bb2b:	mov    ecx,0x99ed1023
  42bb30:	call   0x6078221c
  42bb35:	jno    0x42baf4
  42bb37:	sbb    dh,bh
  42bb39:	adc    esp,DWORD PTR [edi-0x55]
  42bb3c:	in     al,0x95
  42bb3e:	and    dh,al
  42bb40:	pand   mm4,QWORD PTR [edx]
  42bb43:	or     bh,bl
  42bb45:	jmp    0x42bb1d
  42bb47:	pusha  
  42bb48:	adc    eax,0x80351b52
  42bb4d:	and    al,0x24
  42bb4f:	scas   eax,DWORD PTR es:[edi]
  42bb50:	pusha  
  42bb51:	retf   
  42bb52:	cmp    DWORD PTR [edi],edi
  42bb54:	rcl    DWORD PTR [ebx+eax*8],cl
  42bb57:	dec    ecx
  42bb58:	dec    ecx
  42bb59:	push   esi
  42bb5a:	sbb    al,0x6
  42bb5c:	pusha  
  42bb5d:	cmc    
  42bb5e:	dec    edi
  42bb5f:	retf   0xe23
  42bb62:	outs   dx,BYTE PTR ds:[esi]
  42bb63:	inc    esp
  42bb64:	jmp    0x67165af9
  42bb69:	popa   
  42bb6a:	jg     0x42bbb1
  42bb6c:	or     ecx,DWORD PTR [ebp+0x1c4602a2]
  42bb72:	rcr    BYTE PTR [edx],1
  42bb74:	fimul  WORD PTR [ecx-0x36]
  42bb77:	cmp    al,0x84
  42bb79:	std    
  42bb7a:	outs   dx,BYTE PTR ds:[esi]
  42bb7b:	fwait
  42bb7c:	and    edi,DWORD PTR [edx]
  42bb7e:	mov    ebp,0x9c7992c0
  42bb83:	or     al,0x93
  42bb85:	(bad)  
  42bb86:	adc    al,0xd0
  42bb88:	iret   
  42bb89:	fldlg2 
  42bb8b:	test   BYTE PTR [eax+eiz*1-0x15b2660a],dh
  42bb92:	sub    ebp,DWORD PTR [esi-0x6f21c16d]
  42bb98:	xor    al,0x89
  42bb9a:	scas   eax,DWORD PTR es:[edi]
  42bb9b:	mov    esp,0xbd60b0fc
  42bba0:	push   ecx
  42bba1:	pop    edx
  42bba2:	cmc    
  42bba3:	xor    DWORD PTR [edx],0xfffffff8
  42bba6:	ins    BYTE PTR es:[edi],dx
  42bba7:	cdq    
  42bba8:	adc    al,0x87
  42bbaa:	outs   dx,BYTE PTR ds:[esi]
  42bbab:	fild   DWORD PTR [edi-0x19c485e8]
  42bbb1:	xchg   DWORD PTR [eax+0x61],esp
  42bbb4:	pop    ss
  42bbb5:	mov    eax,0xbfda5df4
  42bbba:	nop
  42bbbb:	xor    eax,0xa6e2963f
  42bbc0:	pop    edi
  42bbc1:	push   DWORD PTR ss:[eax]
  42bbc4:	mov    esi,0xf979152b
  42bbc9:	scas   eax,DWORD PTR es:[edi]
  42bbca:	xchg   ebx,eax
  42bbcb:	xchg   ecx,eax
  42bbcc:	add    DWORD PTR [ebx+0x52eb5f5],0xffffff81
  42bbd3:	adc    eax,DWORD PTR [ecx-0x54]
  42bbd6:	gs in  eax,dx
  42bbd8:	pop    ecx
  42bbd9:	cwde   
  42bbda:	dec    edx
  42bbdb:	dec    edi
  42bbdc:	ins    DWORD PTR es:[edi],dx
  42bbdd:	dec    esi
  42bbde:	inc    esi
  42bbdf:	dec    ebx
  42bbe0:	stos   BYTE PTR es:[edi],al
  42bbe1:	jmp    0xa8bb:0xd2ee1ba1
  42bbe8:	sbb    ebp,DWORD PTR [edi-0x12d090f0]
  42bbee:	jl     0x42bbb2
  42bbf0:	dec    edx
  42bbf1:	dec    edi
  42bbf2:	sub    eax,0xb11c1d10
  42bbf7:	out    dx,al
  42bbf8:	pop    ds
  42bbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bbfa:	test   DWORD PTR [edx],eax
  42bbfc:	test   BYTE PTR [esi+0x59],al
  42bbff:	out    0x6f,al
  42bc01:	jl     0x42bc46
  42bc03:	hlt    
  42bc04:	js     0x42bc63
  42bc06:	jmp    0x952c5e9b
  42bc0b:	fiadd  DWORD PTR [edx-0x268407ec]
  42bc11:	int    0xa4
  42bc13:	cmp    ah,BYTE PTR [ebx+0x3d]
  42bc16:	imul   esi,DWORD PTR [ecx+0x39],0xd6d8a91f
  42bc1d:	and    BYTE PTR [ebp+edi*8+0x44a65435],dh
  42bc24:	or     eax,0x218bfb21
  42bc29:	and    cl,BYTE PTR [ecx+0x29]
  42bc2c:	add    al,0xb2
  42bc2e:	inc    edx
  42bc2f:	out    dx,al
  42bc30:	jae    0x42bc05
  42bc32:	xor    cl,BYTE PTR [ebx-0x60]
  42bc35:	xlat   BYTE PTR ds:[ebx]
  42bc36:	fs xor ch,bl
  42bc39:	dec    ebp
  42bc3a:	leave  
  42bc3b:	xor    ch,bh
  42bc3d:	pop    eax
  42bc3e:	pop    ecx
  42bc3f:	adc    edx,ebx
  42bc41:	jge    0x42bc56
  42bc43:	nop
  42bc44:	push   eax
  42bc45:	inc    edi
  42bc46:	xor    eax,0xeefc47e5
  42bc4b:	hlt    
  42bc4c:	xchg   edx,eax
  42bc4d:	jmp    0x33c7:0x124b4fdb
  42bc54:	xchg   esi,eax
  42bc55:	imul   DWORD PTR [ecx-0x3aeded18]
  42bc5b:	pop    es
  42bc5c:	in     al,0xff
  42bc5e:	test   BYTE PTR [ecx+edi*4],0x3e
  42bc62:	jmp    0x413fd211
  42bc67:	aam    0xc2
  42bc69:	imul   edx,DWORD PTR [esi+0x1ea4850e],0x33dbb090
  42bc73:	dec    ebp
  42bc74:	sub    BYTE PTR [eax-0x136823af],cl
  42bc7a:	cmc    
  42bc7b:	sub    bl,ch
  42bc7d:	repnz ficomp DWORD PTR [edi+0x3c]
  42bc81:	push   ss
  42bc82:	sub    eax,0x5120c180
  42bc87:	sbb    BYTE PTR [esp+edi*8],ch
  42bc8a:	frstor [edi+eiz*1+0x70]
  42bc8e:	test   BYTE PTR [esi+eiz*8+0x50d5c1b4],cl
  42bc95:	imul   ecx,ebp,0x331c6825
  42bc9b:	adc    esi,DWORD PTR ds:0x95ec69a6
  42bca1:	mov    eax,ds:0xbac3f3c0
  42bca6:	add    eax,0x1f4d9037
  42bcab:	mov    ebp,0x33b5b532
  42bcb0:	lods   al,BYTE PTR ds:[esi]
  42bcb1:	int3   
  42bcb2:	push   0xffffffaf
  42bcb4:	jg     0x42bd24
  42bcb6:	out    dx,al
  42bcb7:	mov    bh,0x8f
  42bcb9:	cli    
  42bcba:	enter  0xd8da,0x5b
  42bcbe:	fld    DWORD PTR [eax]
  42bcc0:	out    dx,eax
  42bcc1:	std    
  42bcc2:	fdivr  DWORD PTR [ebx+esi*4+0x5f]
  42bcc6:	xor    al,0x59
  42bcc8:	inc    edi
  42bcc9:	cmp    ah,BYTE PTR [ebx]
  42bccb:	xor    eax,0xa772955b
  42bcd0:	dec    ebp
  42bcd1:	out    dx,al
  42bcd2:	out    dx,eax
  42bcd3:	in     eax,dx
  42bcd4:	std    
  42bcd5:	mov    DWORD PTR [edi+0x54],0x2d754639
  42bcdc:	mov    ebp,0x201b7ba2
  42bce1:	sbb    al,0x85
  42bce3:	xor    BYTE PTR [ebp-0x57aafbbd],0xe0
  42bcea:	data16 jl 0x42bc98
  42bced:	jb     0x42bc8d
  42bcef:	and    bl,bh
  42bcf1:	arpl   bx,bx
  42bcf3:	sub    bl,BYTE PTR [edi]
  42bcf5:	add    eax,0xa76c3c4a
  42bcfa:	cmp    dl,BYTE PTR [eax+ebp*2+0x8ba965]
  42bd01:	adc    BYTE PTR ds:0x5ceb1bb7,cl
  42bd07:	adc    BYTE PTR [edx-0x65],al
  42bd0a:	sbb    BYTE PTR [edx-0x5a],dl
  42bd0d:	out    0x47,al
  42bd0f:	fdiv   st,st(7)
  42bd11:	push   ss
  42bd12:	arpl   si,cx
  42bd14:	pusha  
  42bd15:	inc    esi
  42bd16:	push   ebx
  42bd17:	hlt    
  42bd18:	add    al,0x14
  42bd1a:	cmp    DWORD PTR [eax],eax
  42bd1c:	cmp    dl,BYTE PTR [eax-0x41c80eb]
  42bd22:	mov    edx,0x997c0f9e
  42bd27:	mov    ebx,0xb412203d
  42bd2c:	inc    ebx
  42bd2d:	mov    esi,0x30e73d4d
  42bd32:	pop    ebx
  42bd33:	test   eax,0x1c5aad47
  42bd38:	pushf  
  42bd39:	fstp   st(3)
  42bd3b:	cmp    eax,0xf6bcf7e
  42bd40:	add    DWORD PTR [ebx+eiz*1+0xdc9bfc2],edx
  42bd47:	sti    
  42bd48:	mov    edx,0xd2f23425
  42bd4d:	xchg   ecx,eax
  42bd4e:	(bad)  
  42bd4f:	mov    ch,cl
  42bd51:	mov    al,BYTE PTR [edx]
  42bd53:	cs (bad) 
  42bd55:	xchg   esi,eax
  42bd56:	loope  0x42bdbd
  42bd58:	or     al,bl
  42bd5a:	aad    0xcb
  42bd5c:	mov    dh,0x26
  42bd5e:	ds jns 0x42bd65
  42bd61:	and    DWORD PTR [edi+0x5e3af833],edi
  42bd67:	mov    BYTE PTR [esi],bh
  42bd69:	punpckhdq mm3,QWORD PTR [edx-0x4e]
  42bd6d:	push   esp
  42bd6e:	aad    0xa4
  42bd70:	xor    BYTE PTR [ebx+0x61d0c112],dh
  42bd76:	or     al,0xd5
  42bd78:	out    0xe5,al
  42bd7a:	jmp    0x5bde5982
  42bd7f:	addr16 cs push ebx
  42bd82:	push   0x0
  42bd84:	mov    ah,0x47
  42bd86:	jae    0x42bd6f
  42bd88:	test   DWORD PTR [ebp-0x73738e8b],ebx
  42bd8e:	mov    ebx,0x2802ef7
  42bd93:	mov    ecx,0xd20f137
  42bd98:	or     ch,BYTE PTR [edx+0x5216e35b]
  42bd9e:	call   0xd16f9a30
  42bda3:	and    eax,0x88eecb51
  42bda8:	repz popa 
  42bdaa:	lock aas 
  42bdac:	pop    ds
  42bdad:	jge    0x42be23
  42bdaf:	or     BYTE PTR ds:0xaa895526,dl
  42bdb5:	in     al,dx
  42bdb6:	adc    cl,BYTE PTR [edx+edi*2-0x266d7eb6]
  42bdbd:	es mov esp,ebp
  42bdc0:	xchg   ebp,eax
  42bdc1:	mov    cs,WORD PTR [eax+eiz*2]
  42bdc4:	jmp    0xf504:0xd0ff00c6
  42bdcb:	dec    esp
  42bdcc:	and    DWORD PTR [ebx-0x1fad3e66],edi
  42bdd2:	mov    ds:0x764fdb81,al
  42bdd7:	aad    0xb5
  42bdd9:	(bad)  
  42bddb:	stc    
  42bddc:	faddp  st(5),st
  42bdde:	inc    ebx
  42bddf:	mov    bh,0x25
  42bde1:	pusha  
  42bde2:	lock xor eax,0xede395a9
  42bde8:	lods   al,BYTE PTR ds:[esi]
  42bde9:	cwde   
  42bdea:	out    dx,eax
  42bdeb:	pop    eax
  42bdec:	ror    BYTE PTR [esi+0x64],0x19
  42bdf0:	dec    ebp
  42bdf1:	sahf   
  42bdf2:	add    bl,BYTE PTR [edi]
  42bdf4:	ins    BYTE PTR es:[edi],dx
  42bdf5:	inc    ecx
  42bdf6:	call   0x55aa9410
  42bdfb:	out    dx,al
  42bdfc:	enter  0xe0ed,0xca
  42be00:	mov    bh,0x8e
  42be02:	fild   WORD PTR [edx+0xf75ab9b]
  42be08:	adc    esi,DWORD PTR [edi+ecx*4+0x10e22dcc]
  42be0f:	scas   eax,DWORD PTR es:[edi]
  42be10:	sub    eax,edx
  42be12:	xchg   esi,eax
  42be13:	(bad)  
  42be14:	push   ds
  42be15:	mov    eax,0x9f5df0fb
  42be1a:	xor    ch,BYTE PTR [eax-0xe]
  42be1d:	and    esi,DWORD PTR [edx-0x4a5ed161]
  42be23:	daa    
  42be24:	mov    ds:0x6989c5a1,al
  42be29:	outs   dx,BYTE PTR ds:[esi]
  42be2a:	adc    bh,BYTE PTR [ebp-0x7]
  42be2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be2e:	test   DWORD PTR [edi-0x3bd91151],ebp
  42be34:	add    eax,0x4c0b3948
  42be39:	stc    
  42be3a:	inc    eax
  42be3b:	je     0x42bdf8
  42be3d:	fmulp  st(4),st
  42be3f:	push   ebx
  42be40:	xlat   BYTE PTR ds:[ebx]
  42be41:	fwait
  42be42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be43:	xchg   edx,eax
  42be44:	add    DWORD PTR ds:0xba0da5a4,ecx
  42be4a:	mov    cl,0x92
  42be4c:	jp     0x42bde5
  42be4e:	clc    
  42be4f:	into   
  42be50:	retf   
  42be51:	shl    BYTE PTR [ebx],1
  42be53:	stos   DWORD PTR es:[edi],eax
  42be54:	or     BYTE PTR ds:0xb45c85bc,dh
  42be5a:	push   es
  42be5b:	xchg   DWORD PTR [esi],ecx
  42be5d:	dec    edi
  42be5e:	cmp    al,0xd3
  42be60:	xor    cl,al
  42be62:	dec    ebp
  42be63:	mov    cl,BYTE PTR [ebp+0x19]
  42be66:	dec    ebx
  42be67:	cmp    bl,BYTE PTR [ecx-0x2c]
  42be6a:	rcl    BYTE PTR [edi-0x4540c9af],1
  42be70:	dec    ebx
  42be71:	adc    ebp,DWORD PTR [esp+eax*2-0x5afcb92f]
  42be78:	fwait
  42be79:	pop    eax
  42be7a:	shr    esp,0x81
  42be7d:	mov    al,ds:0xdf2edfda
  42be82:	xor    eax,0x4158a660
  42be87:	data16 je 0x42bf03
  42be8a:	sub    al,0xc6
  42be8c:	int    0x40
  42be8e:	pop    edi
  42be8f:	push   esi
  42be90:	or     BYTE PTR [esi+0x7f],cl
  42be93:	in     al,dx
  42be94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be95:	hlt    
  42be96:	mov    eax,ds:0x10f18390
  42be9b:	aas    
  42be9c:	mov    esi,0x94ff69b1
  42bea1:	aam    0xb
  42bea3:	xor    DWORD PTR [edi+0x53],edi
  42bea6:	ficom  WORD PTR [esi-0x64a5f637]
  42beac:	xchg   esp,eax
  42bead:	retf   
  42beae:	jmp    0x9608:0x50594748
  42beb5:	out    dx,al
  42beb6:	sub    eax,0xbee95b4e
  42bebb:	push   eax
  42bebc:	rcl    BYTE PTR [edx+ebx*1],1
  42bebf:	and    al,0x2f
  42bec1:	ds pop esi
  42bec3:	mov    cl,0xb4
  42bec5:	dec    eax
  42bec6:	xor    bl,ah
  42bec8:	fild   DWORD PTR [ecx+0x13e2c249]
  42bece:	pop    eax
  42becf:	stc    
  42bed0:	retf   0xa6e5
  42bed3:	outs   dx,BYTE PTR ds:[esi]
  42bed4:	ss (bad) 
  42bed7:	cmp    eax,0x234e4d24
  42bedc:	lock mov bl,0x38
  42bedf:	xchg   ecx,eax
  42bee0:	inc    edi
  42bee1:	jnp    0x42be70
  42bee3:	mov    eax,0x7443073b
  42bee8:	data16 mov bh,0x6b
  42beeb:	pusha  
  42beec:	mov    ds:0xf8223b41,eax
  42bef1:	xchg   ebp,eax
  42bef2:	add    eax,0x60a1e79f
  42bef7:	stos   BYTE PTR es:[edi],al
  42bef8:	cli    
  42bef9:	add    bh,BYTE PTR [ebp-0x46]
  42befc:	jg     0x42bf26
  42befe:	pushf  
  42beff:	mov    al,ds:0x59cf233f
  42bf04:	test   BYTE PTR [esp+ecx*8+0x3b],0x62
  42bf09:	scas   eax,DWORD PTR es:[edi]
  42bf0a:	mov    esp,DWORD PTR [ecx-0xee89746]
  42bf10:	popa   
  42bf11:	adc    dh,dh
  42bf13:	ret    
  42bf14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf15:	pop    edx
  42bf16:	and    DWORD PTR [esp+esi*2],edx
  42bf19:	adc    cl,BYTE PTR [eax]
  42bf1b:	fimul  WORD PTR [edx]
  42bf1d:	xchg   ecx,eax
  42bf1e:	or     DWORD PTR [edi+0x33],eax
  42bf21:	mov    al,0x6c
  42bf23:	jge    0x42beb4
  42bf25:	std    
  42bf26:	pop    ds
  42bf27:	loope  0x42bf10
  42bf29:	popf   
  42bf2a:	repz mov dh,BYTE PTR [ebx+0x4e70c4ad]
  42bf31:	call   0x49bdbed2
  42bf36:	mov    edi,0x88f2fbeb
  42bf3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf3c:	scas   al,BYTE PTR es:[edi]
  42bf3d:	mov    dl,0xdc
  42bf3f:	push   esp
  42bf40:	out    0x2b,al
  42bf42:	loop   0x42bf89
  42bf44:	or     DWORD PTR [edi-0x10a1d9e2],ebx
  42bf4a:	aas    
  42bf4b:	fimul  WORD PTR [edx-0x5086ce73]
  42bf51:	pop    esi
  42bf52:	push   ss
  42bf53:	dec    edx
  42bf54:	dec    esi
  42bf55:	xor    al,0x2c
  42bf57:	mov    ecx,0x751796af
  42bf5c:	fldenv gs:[esi]
  42bf5f:	sub    BYTE PTR [edx-0x1],dh
  42bf62:	cmp    BYTE PTR [ecx-0x59b0b50d],dl
  42bf68:	push   ebx
  42bf69:	jae    0x42befe
  42bf6b:	sahf   
  42bf6c:	inc    ebp
  42bf6d:	push   cs
  42bf6e:	cwde   
  42bf6f:	add    al,0xd9
  42bf71:	pop    ss
  42bf72:	cld    
  42bf73:	(bad)  
  42bf74:	pop    esi
  42bf75:	pcmpeqw mm6,mm5
  42bf78:	std    
  42bf79:	xor    ebp,DWORD PTR [esi+ebp*2]
  42bf7c:	retf   
  42bf7d:	sub    bh,BYTE PTR [ecx-0x784c37a4]
  42bf83:	xchg   esi,eax
  42bf84:	xor    al,0xdf
  42bf86:	sar    BYTE PTR [esi-0x22eba5c5],0xee
  42bf8d:	push   edi
  42bf8e:	xchg   ebp,eax
  42bf8f:	loopne 0x42bf13
  42bf91:	pop    ebp
  42bf92:	cli    
  42bf93:	or     DWORD PTR [esi+0x6b],0xb8308b93
  42bf9a:	sub    bh,BYTE PTR [edx-0x68129ee3]
  42bfa0:	adc    BYTE PTR [eax+0x56],dh
  42bfa3:	cdq    
  42bfa4:	(bad)  
  42bfa6:	add    ah,BYTE PTR [esi]
  42bfa8:	push   ecx
  42bfa9:	pop    ebx
  42bfaa:	sar    BYTE PTR [edx-0x37ba37da],1
  42bfb0:	imul   ecx,DWORD PTR [esi-0x624a0f43],0x21
  42bfb7:	jmp    0xfc6c:0xc7c724b8
  42bfbe:	mov    dh,0xbb
  42bfc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfc1:	js     0x42bff7
  42bfc3:	ja     0x42c02c
  42bfc5:	sbb    bh,0x4e
  42bfc8:	mov    ch,al
  42bfca:	enter  0xc7d5,0xcf
  42bfce:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42bfd0:	out    dx,eax
  42bfd1:	push   ss
  42bfd2:	cmp    eax,0x9a1c8364
  42bfd7:	dec    esi
  42bfd8:	out    0xcf,eax
  42bfda:	lahf   
  42bfdb:	out    0xb7,al
  42bfdd:	xchg   esp,eax
  42bfde:	lods   al,BYTE PTR ds:[esi]
  42bfdf:	and    DWORD PTR [ebx-0xbd5ac06],edi
  42bfe5:	pusha  
  42bfe6:	and    ecx,DWORD PTR [eax+0x7ba0ab24]
  42bfec:	daa    
  42bfed:	dec    esi
  42bfee:	push   ss
  42bfef:	loope  0x42bfa2
  42bff1:	fsubr  DWORD PTR [ebx-0x3d]
  42bff4:	cmc    
  42bff5:	ins    BYTE PTR es:[edi],dx
  42bff6:	fcmovnu st,st(4)
  42bff8:	retf   0x472a
  42bffb:	jmp    0xbec6b159
  42c000:	test   ebp,esp
  42c002:	dec    ebx
  42c003:	push   esi
  42c004:	scas   eax,DWORD PTR es:[edi]
  42c005:	xchg   ebp,eax
  42c006:	cdq    
  42c007:	aam    0x59
  42c009:	inc    BYTE PTR [edi+esi*2+0x233f8942]
  42c010:	sub    edx,DWORD PTR [ebx]
  42c012:	pushf  
  42c013:	add    BYTE PTR [esi-0x4f72959c],dl
  42c019:	add    bh,BYTE PTR [edi-0x510b067d]
  42c01f:	(bad)  
  42c020:	jle    0x42c02b
  42c022:	xchg   BYTE PTR [ecx-0x75],ah
  42c025:	mov    BYTE PTR [edi+0x5a238e9b],cl
  42c02b:	dec    eax
  42c02c:	inc    ebp
  42c02d:	into   
  42c02e:	push   DWORD PTR [ecx-0x356a2028]
  42c034:	push   es
  42c035:	xchg   esp,eax
  42c036:	test   bl,ch
  42c038:	sti    
  42c039:	ins    DWORD PTR es:[edi],dx
  42c03a:	push   edi
  42c03b:	pop    ds
  42c03c:	call   0xda2a:0xe98c34e0
  42c043:	xchg   edi,eax
  42c044:	pop    eax
  42c045:	repz dec esi
  42c047:	mov    cl,0xdf
  42c049:	retf   
  42c04a:	shufps xmm3,XMMWORD PTR [ebp+0x2cf734a3],0x9b
  42c052:	xor    edx,DWORD PTR [ecx]
  42c054:	das    
  42c055:	inc    ebp
  42c056:	xor    ebx,DWORD PTR fs:[ebp-0x13]
  42c05a:	jl     0x42c015
  42c05c:	or     al,0xd1
  42c05e:	jns    0x42c0b8
  42c060:	mov    esi,0x8996670a
  42c065:	call   0x6e5d0a2a
  42c06a:	mov    esp,0x6f84bd78
  42c06f:	jle    0x42bff5
  42c071:	jo     0x42c060
  42c073:	cmp    edi,edx
  42c075:	ja     0x42c0e2
  42c077:	test   BYTE PTR [edi],0x5
  42c07a:	test   al,0xd2
  42c07c:	sti    
  42c07d:	cld    
  42c07e:	cmp    dl,bl
  42c080:	test   eax,0xc808a980
  42c085:	dec    ebx
  42c086:	pop    ebx
  42c087:	cmp    eax,0xe7542f29
  42c08c:	pop    ecx
  42c08d:	inc    eax
  42c08e:	dec    edx
  42c08f:	pop    esi
  42c090:	adc    ebx,DWORD PTR [ebx+0x332bc791]
  42c096:	mov    edx,0xa4fa64ad
  42c09b:	dec    eax
  42c09c:	jmp    0x42c022
  42c09e:	ds test ah,ch
  42c0a1:	xor    DWORD PTR [edi-0x5c4d5ccd],esp
  42c0a7:	mov    edi,DWORD PTR [edi+edi*4]
  42c0aa:	pop    edx
  42c0ab:	mov    cl,0xfb
  42c0ad:	cmp    BYTE PTR [eax],cl
  42c0af:	push   esi
  42c0b0:	aam    0x2b
  42c0b2:	fnsave [ecx-0x448e7ff]
  42c0b8:	adc    DWORD PTR [ebx+edi*2-0x32],ecx
  42c0bc:	lods   al,BYTE PTR ds:[esi]
  42c0bd:	leave  
  42c0be:	ret    0xf129
  42c0c1:	or     ebp,ebx
  42c0c3:	repnz adc bl,cl
  42c0c6:	popf   
  42c0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0c8:	xchg   ebx,esp
  42c0ca:	cmc    
  42c0cb:	push   edi
  42c0cc:	sub    al,0x55
  42c0ce:	out    dx,al
  42c0cf:	mov    edi,0x5dcacd59
  42c0d4:	not    BYTE PTR [ecx+0x7f]
  42c0d7:	xchg   edx,eax
  42c0d8:	ins    BYTE PTR es:[edi],dx
  42c0d9:	stc    
  42c0da:	xchg   esp,eax
  42c0db:	call   0xd4ea:0x6fbedf38
  42c0e2:	cmp    al,0xe6
  42c0e4:	dec    ecx
  42c0e5:	out    0xf,eax
  42c0e7:	pop    es
  42c0e8:	sbb    edi,edx
  42c0ea:	jecxz  0x42c133
  42c0ec:	iret   
  42c0ed:	adc    esi,eax
  42c0ef:	pop    edi
  42c0f0:	mov    dl,0x33
  42c0f2:	in     eax,0x6c
  42c0f4:	jns    0xfb19d0f5
  42c0fa:	aas    
  42c0fb:	repz loop 0x42c109
  42c0fe:	xchg   ebx,eax
  42c0ff:	out    dx,al
  42c100:	dec    edx
  42c101:	(bad)  
  42c102:	add    BYTE PTR [esi-0x5f5f46a7],dl
  42c108:	inc    ecx
  42c109:	mov    ecx,0x79dda4b4
  42c10e:	mov    bh,0x68
  42c110:	hlt    
  42c111:	xor    esp,DWORD PTR ds:0xae6d5843
  42c118:	sbb    BYTE PTR [ebx+0x24],bh
  42c11b:	in     eax,dx
  42c11c:	jno    0x42c0f0
  42c11e:	xchg   edi,eax
  42c11f:	mov    al,ds:0x196d48df
  42c124:	fdiv   st(5),st
  42c126:	into   
  42c127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c128:	push   ds
  42c129:	dec    edx
  42c12a:	popf   
  42c12b:	icebp  
  42c12c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c12d:	ins    BYTE PTR es:[edi],dx
  42c12e:	ja     0x42c0b8
  42c130:	jns    0x42c14c
  42c132:	loope  0x42c17c
  42c134:	adc    eax,0x707a4dbe
  42c139:	jne    0x42c108
  42c13b:	push   0x15b00e0b
  42c140:	sub    DWORD PTR [ebp-0x55b580f8],0xb26e11ab
  42c14a:	add    al,BYTE PTR [edx+esi*1]
  42c14d:	out    0x3d,eax
  42c14f:	cmp    DWORD PTR [esi-0x33c9118f],ebp
  42c155:	std    
  42c156:	retf   
  42c157:	outs   dx,BYTE PTR ds:[esi]
  42c158:	mov    ecx,0xbf37e9c7
  42c15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c15e:	ret    
  42c15f:	(bad)  
  42c160:	mov    WORD PTR [esp+ebp*2-0x60],?
  42c164:	mov    dl,0x82
  42c166:	out    0xc,eax
  42c168:	(bad)  
  42c169:	mov    al,0x1a
  42c16b:	stc    
  42c16c:	sbb    BYTE PTR [edi],0xc3
  42c16f:	pop    esp
  42c170:	gs (bad) 
  42c172:	and    eax,0x88886ff4
  42c177:	and    ah,dh
  42c179:	mov    al,0x6e
  42c17b:	sbb    al,0x28
  42c17d:	cmp    BYTE PTR [edi+0x1b7a7bf8],0xcc
  42c184:	in     al,dx
  42c185:	cmp    eax,0xf7df1f3a
  42c18a:	xor    BYTE PTR [edi],dl
  42c18c:	rcl    BYTE PTR [ebx],1
  42c18e:	repnz pop esi
  42c190:	std    
  42c191:	not    edi
  42c193:	mov    ebp,DWORD PTR [edx+ebp*8]
  42c196:	(bad)  [ebx+0x0]
  42c199:	ss mov ecx,0x706a5016
  42c19f:	outs   dx,DWORD PTR ds:[esi]
  42c1a0:	pop    esp
  42c1a1:	xlat   BYTE PTR ds:[ebx]
  42c1a2:	dec    edx
  42c1a3:	or     esp,DWORD PTR [edx]
  42c1a5:	inc    eax
  42c1a6:	add    DWORD PTR [edi+edx*8+0xc],0x28428c9a
  42c1ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1af:	xor    al,ah
  42c1b1:	add    bh,0x23
  42c1b4:	jmp    0x42c212
  42c1b6:	adc    eax,0xbf36b4b9
  42c1bb:	mov    gs,esi
  42c1bd:	popf   
  42c1be:	ror    BYTE PTR [esi],1
  42c1c0:	int3   
  42c1c1:	pop    ds
  42c1c2:	in     al,dx
  42c1c3:	dec    eax
  42c1c4:	pop    esi
  42c1c5:	xchg   ebx,eax
  42c1c6:	sbb    bl,BYTE PTR [esi+0x402ee793]
  42c1cc:	stc    
  42c1cd:	fdiv   DWORD PTR [edx+0x2510f9f8]
  42c1d3:	ret    
  42c1d4:	fs mov cl,al
  42c1d7:	pop    ebp
  42c1d8:	(bad)  
  42c1d9:	push   edx
  42c1da:	fwait
  42c1db:	push   ds
  42c1dc:	fdecstp 
  42c1de:	cmp    ecx,DWORD PTR [ecx-0x3b12b4fe]
  42c1e4:	push   0x1f
  42c1e6:	pop    eax
  42c1e7:	and    DWORD PTR [esi-0x2b],0xd4f7c8ba
  42c1ee:	ficom  DWORD PTR [ebp+0x72633346]
  42c1f4:	jb     0x42c25f
  42c1f6:	jmp    0x42c184
  42c1f8:	sti    
  42c1f9:	lods   al,BYTE PTR ds:[esi]
  42c1fa:	cli    
  42c1fb:	jge    0x42c219
  42c1fd:	mov    bl,0x18
  42c1ff:	std    
  42c200:	and    ch,BYTE PTR [eax-0x69155164]
  42c206:	lock outs dx,DWORD PTR ds:[esi]
  42c208:	pop    esp
  42c209:	xlat   BYTE PTR ds:[ebx]
  42c20a:	hlt    
  42c20b:	mov    esp,0xb5ed7090
  42c210:	and    bl,BYTE PTR [eax+eiz*2+0x3c]
  42c214:	neg    DWORD PTR [esi]
  42c216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c217:	fsubr  DWORD PTR [ebx-0x4a]
  42c21a:	mov    eax,0x7fc05e9f
  42c21f:	cdq    
  42c220:	cmp    DWORD PTR [edx],ecx
  42c222:	ror    DWORD PTR [edi+0x4],cl
  42c225:	mov    edi,0x803b860c
  42c22a:	inc    edi
  42c22b:	ficom  DWORD PTR [edx-0x39]
  42c22e:	and    edi,DWORD PTR [ecx]
  42c230:	cli    
  42c231:	jae    0x42c284
  42c233:	add    DWORD PTR [edx+0x1a],edi
  42c236:	loop   0x42c279
  42c238:	jmp    0x6676:0xd4eec68f
  42c23f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c240:	jmp    0x2520:0x8410c122
  42c247:	cwde   
  42c248:	mov    BYTE PTR [eax+edi*2+0x47efb421],ch
  42c24f:	mov    ds:0x9698a731,eax
  42c254:	mov    bh,0x18
  42c256:	fwait
  42c257:	jne    0x42c2c0
  42c259:	add    al,0x20
  42c25b:	sub    eax,0x8cd24c2
  42c260:	push   ds
  42c261:	sub    dl,BYTE PTR [ebp-0x7d61539f]
  42c267:	cld    
  42c268:	add    BYTE PTR [eax+0x5a08519d],bh
  42c26e:	shl    DWORD PTR [ebp-0x681ddbab],0x6f
  42c275:	pop    es
  42c276:	ret    
  42c277:	icebp  
  42c278:	lods   al,BYTE PTR ds:[esi]
  42c279:	pop    ebp
  42c27a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c27b:	adc    dl,BYTE PTR [edx-0x32317514]
  42c281:	add    al,ch
  42c283:	in     al,0x92
  42c285:	ret    0x280c
  42c288:	out    dx,eax
  42c289:	pop    ss
  42c28a:	mov    eax,ds:0xd00c6c13
  42c28f:	(bad)  
  42c290:	mov    al,0x70
  42c292:	fwait
  42c293:	shl    DWORD PTR [ecx+0x65bcbc5f],0xb3
  42c29a:	in     eax,0x63
  42c29c:	cmc    
  42c29d:	loope  0x42c2d7
  42c29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2a0:	fwait
  42c2a1:	(bad)  
  42c2a2:	cmc    
  42c2a3:	mov    ds:0x1582ec9a,al
  42c2a8:	mov    esp,ecx
  42c2aa:	push   edx
  42c2ab:	inc    bx
  42c2ad:	cs jmp 0x42dc49ec
  42c2b3:	push   ds
  42c2b4:	xor    bh,al
  42c2b6:	cwde   
  42c2b7:	out    dx,eax
  42c2b8:	mov    al,0x1b
  42c2ba:	add    al,0xe0
  42c2bc:	dec    edi
  42c2bd:	cmp    eax,0x8d6eb178
  42c2c2:	xchg   ebx,eax
  42c2c3:	fsub   QWORD PTR [edi]
  42c2c5:	or     BYTE PTR ds:0x7478c815,bl
  42c2cb:	add    cl,BYTE PTR [edx-0x3]
  42c2ce:	cs fsubp st(6),st
  42c2d1:	gs mov eax,0x36b47194
  42c2d7:	ja     0x42c2fc
  42c2d9:	(bad)  
  42c2da:	mov    ds:0xaa76ee38,eax
  42c2df:	aas    
  42c2e0:	or     BYTE PTR [ebx],cl
  42c2e2:	jne    0x42c2ee
  42c2e4:	sub    ah,BYTE PTR [esi+edi*1]
  42c2e7:	lea    ecx,[eax+0x31e66795]
  42c2ed:	lock xchg DWORD PTR [ecx-0x539cbf6],esi
  42c2f4:	ss jmp 0xa7a97e10
  42c2fa:	push   cs
  42c2fb:	add    BYTE PTR [eax-0x7d],al
  42c2fe:	cmp    DWORD PTR [ecx-0x75],ebx
  42c301:	add    eax,0xfcac4d21
  42c306:	mov    edx,0x5e6cbd8e
  42c30b:	pop    edx
  42c30c:	mov    al,0xbf
  42c30e:	pop    ss
  42c30f:	test   al,0x35
  42c311:	ds dec ebx
  42c313:	jge    0x42c2e1
  42c315:	pop    ds
  42c316:	or     DWORD PTR [ebp-0x50],eax
  42c319:	imul   edx,DWORD PTR [ebx],0xffffffe2
  42c31c:	xor    BYTE PTR [ecx],ah
  42c31e:	or     BYTE PTR [eax],al
  42c320:	pop    eax
  42c321:	dec    edi
  42c322:	aam    0xbf
  42c324:	pop    ebx
  42c325:	repz iret 
  42c327:	inc    ecx
  42c328:	fwait
  42c329:	popf   
  42c32a:	mov    ecx,0x4dec541a
  42c32f:	jl     0x42c338
  42c331:	mov    bh,0xe9
  42c333:	(bad)  
  42c334:	scas   al,BYTE PTR es:[edi]
  42c335:	loope  0x42c37d
  42c337:	push   ss
  42c338:	rol    BYTE PTR [eax+0x7d],1
  42c33b:	sbb    al,0x7b
  42c33d:	add    esi,ecx
  42c33f:	adc    al,0x62
  42c341:	out    dx,al
  42c342:	mov    al,dl
  42c344:	stc    
  42c345:	stos   DWORD PTR es:[edi],eax
  42c346:	test   DWORD PTR [ecx+0x6a],0xdfd3add2
  42c34d:	scas   al,BYTE PTR es:[edi]
  42c34e:	adc    al,0xad
  42c350:	out    dx,al
  42c351:	mov    esi,0x250aacca
  42c356:	cdq    
  42c357:	rcl    BYTE PTR [eax],0x7c
  42c35a:	sub    edi,DWORD PTR [ebx]
  42c35c:	add    DWORD PTR [ecx+0x6e],edi
  42c35f:	jp     0x42c3b3
  42c361:	push   ebx
  42c362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c363:	lahf   
  42c364:	add    DWORD PTR [ebx+0x69e28347],esi
  42c36a:	cs mov bl,0xbd
  42c36d:	or     eax,0xb03da191
  42c372:	push   ds
  42c373:	jb     0x42c3c9
  42c375:	pop    ecx
  42c376:	(bad)  
  42c377:	push   ebp
  42c378:	xor    bl,BYTE PTR ds:0xe72b84dd
  42c37e:	bound  ecx,QWORD PTR [edx-0x5344e38b]
  42c384:	mov    edx,DWORD PTR [edi]
  42c386:	xlat   BYTE PTR ds:[ebx]
  42c387:	push   eax
  42c388:	inc    edx
  42c389:	sbb    esp,DWORD PTR [esi+eiz*2]
  42c38c:	imul   BYTE PTR [edi]
  42c38e:	jne    0x42c3a3
  42c390:	adc    ebx,DWORD PTR [edi-0x6c]
  42c393:	mov    fs,ebp
  42c395:	push   eax
  42c396:	add    DWORD PTR [ecx+0xb],ebx
  42c399:	or     edx,DWORD PTR [edi+0x6fc40baf]
  42c39f:	push   cs
  42c3a0:	imul   edx,DWORD PTR [esi+0x14c32abd],0xdcc1c6dd
  42c3aa:	cmp    BYTE PTR ds:0xc7c1974f,dh
  42c3b0:	(bad)  
  42c3b1:	ror    BYTE PTR [esi+0x26e344a9],1
  42c3b7:	xchg   DWORD PTR [esi],ebp
  42c3b9:	dec    ebx
  42c3ba:	jl     0x42c37d
  42c3bc:	outs   dx,DWORD PTR ds:[esi]
  42c3bd:	inc    esi
  42c3be:	arpl   WORD PTR [eax],dx
  42c3c0:	jmp    0xb3c1435d
  42c3c5:	outs   dx,BYTE PTR ds:[esi]
  42c3c6:	aad    0x35
  42c3c8:	inc    edi
  42c3c9:	rol    ebp,1
  42c3cb:	sbb    dl,BYTE PTR [edi]
  42c3cd:	in     al,dx
  42c3ce:	(bad)  
  42c3cf:	push   ss
  42c3d0:	cmp    DWORD PTR [edi+0x2c609d41],esp
  42c3d6:	inc    ecx
  42c3d7:	call   0x2706:0x6fee276f
  42c3de:	mov    ds:0xc2945a21,al
  42c3e3:	dec    esp
  42c3e4:	pop    esi
  42c3e5:	daa    
  42c3e6:	push   ebx
  42c3e7:	(bad)  [ecx]
  42c3e9:	fcmovbe st,st(4)
  42c3eb:	push   edx
  42c3ec:	scas   eax,DWORD PTR es:[edi]
  42c3ed:	pushw  ds
  42c3ef:	das    
  42c3f0:	jo     0x42c46f
  42c3f2:	test   DWORD PTR [edx+0x5990f90b],edx
  42c3f8:	push   0xdf9193cd
  42c3fd:	fcom   DWORD PTR [edi+eiz*4-0x52cd915f]
  42c404:	repnz xor bh,BYTE PTR [eax+ebx*2+0x69e25188]
  42c40c:	xchg   edi,eax
  42c40d:	sub    eax,0x6434509b
  42c412:	and    BYTE PTR [edx+esi*2+0x2d026fe],bl
  42c419:	shl    DWORD PTR [esp+edi*8+0x77],cl
  42c41d:	xchg   ebp,eax
  42c41e:	and    esi,DWORD PTR [esi]
  42c420:	imul   edi,DWORD PTR [esi],0xffffffed
  42c423:	enter  0xdc70,0xb2
  42c427:	pop    ds
  42c428:	rcl    DWORD PTR [ebx],0xb5
  42c42b:	dec    bh
  42c42d:	addr16 out dx,eax
  42c42f:	add    eax,0xcef354df
  42c434:	arpl   WORD PTR [ebx],cx
  42c436:	stos   DWORD PTR es:[edi],eax
  42c437:	in     al,dx
  42c438:	cld    
  42c439:	aas    
  42c43a:	sbb    dl,al
  42c43c:	mov    ch,0xf0
  42c43e:	inc    esp
  42c43f:	lea    edx,[esi+0x7797c461]
  42c445:	jae    0x42c46e
  42c447:	jbe    0x42c487
  42c449:	jo     0x42c495
  42c44b:	jmp    0x9ddd3a71
  42c450:	or     al,0xaa
  42c452:	mov    BYTE PTR [ecx],0x19
  42c455:	inc    ebx
  42c456:	mov    bh,0x87
  42c458:	imul   edi,ebx,0x4df74811
  42c45e:	test   BYTE PTR [ebx+eiz*4],ch
  42c461:	pop    edi
  42c462:	jae    0x42c4d2
  42c464:	mov    dh,0x7a
  42c466:	and    BYTE PTR [edx],ah
  42c468:	or     BYTE PTR [esi+0x4e],bh
  42c46b:	inc    edx
  42c46c:	mov    eax,ds:0x424e644f
  42c472:	imul   ecx,ecx,0x62
  42c475:	mov    BYTE PTR [ecx-0x669da77d],al
  42c47b:	dec    eax
  42c47c:	fcom   QWORD PTR [esi+0x46ee7d9d]
  42c482:	jae    0x42c443
  42c484:	retf   
  42c485:	mov    DWORD PTR [ebp-0x68aaced7],ebp
  42c48b:	leave  
  42c48c:	pushf  
  42c48d:	cmp    al,al
  42c48f:	aaa    
  42c490:	push   ss
  42c491:	addr16 xchg ebx,eax
  42c493:	sahf   
  42c494:	rcr    BYTE PTR [ecx-0x3a],0x80
  42c498:	mov    ebx,0xa498c897
  42c49d:	mov    ebp,0x761b6c1d
  42c4a2:	lahf   
  42c4a3:	lock fwait
  42c4a5:	dec    ecx
  42c4a6:	sti    
  42c4a7:	in     eax,0x75
  42c4a9:	sub    edx,DWORD PTR ds:0xb43bbd2a
  42c4af:	sbb    al,bl
  42c4b1:	xchg   DWORD PTR [ebp+0xe],esp
  42c4b4:	fbstp  TBYTE PTR [eax+0x65]
  42c4b7:	sbb    cl,dl
  42c4b9:	jnp    0x42c44c
  42c4bb:	jmp    0x9ff9c6df
  42c4c0:	repnz xor ecx,DWORD PTR ds:[eax]
  42c4c4:	add    eax,DWORD PTR [ebp+0x63]
  42c4c7:	repz push ecx
  42c4c9:	out    dx,eax
  42c4ca:	imul   esp,DWORD PTR [ecx],0xffffff90
  42c4cd:	ds xor al,0x71
  42c4d0:	pop    eax
  42c4d1:	mov    WORD PTR [edx+ebx*4-0x58],?
  42c4d5:	cmp    eax,ebp
  42c4d7:	inc    edx
  42c4d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c4d9:	sub    al,0x4
  42c4db:	mov    esp,0xd210a341
  42c4e0:	mov    ds,WORD PTR [edx]
  42c4e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4e3:	or     al,BYTE PTR [edx+0x6b]
  42c4e6:	push   0x853c5f80
  42c4eb:	rcr    DWORD PTR [edi+0x7f],cl
  42c4ee:	out    dx,eax
  42c4ef:	sbb    al,BYTE PTR [esp+edi*1-0x318b01b7]
  42c4f6:	jbe    0x42c48f
  42c4f8:	gs mov eax,0xf2136aa2
  42c4fe:	jmp    0x43749bfe
  42c503:	dec    edx
  42c504:	dec    edx
  42c505:	push   es
  42c506:	(bad)  
  42c507:	adc    al,0x14
  42c509:	pusha  
  42c50a:	dec    edx
  42c50b:	dec    eax
  42c50c:	jmp    0x93661446
  42c511:	and    dl,BYTE PTR [esi+0x3cebc2f1]
  42c517:	add    ebp,ebx
  42c519:	test   DWORD PTR [edx-0x5cd590de],ebp
  42c51f:	fldcw  WORD PTR [ebp-0x23]
  42c522:	cmp    esi,DWORD PTR [edi]
  42c524:	cmp    ebp,DWORD PTR [edx+eax*8]
  42c527:	aas    
  42c528:	test   al,0xf5
  42c52a:	jnp    0x42c55c
  42c52c:	pop    edi
  42c52d:	aas    
  42c52e:	daa    
  42c52f:	sub    ch,BYTE PTR [edx-0x1d3403e]
  42c535:	scas   al,BYTE PTR es:[edi]
  42c536:	adc    edx,DWORD PTR [ecx-0x24350c48]
  42c53c:	cmp    ch,bl
  42c53e:	sbb    eax,0x63e68845
  42c543:	add    ch,BYTE PTR [eax]
  42c545:	and    BYTE PTR [ecx+0x5d9c8c15],0xc1
  42c54c:	or     al,0x2e
  42c54e:	cmp    DWORD PTR [eax],0xffffff9b
  42c551:	or     BYTE PTR [esi],bl
  42c553:	mov    WORD PTR [ebx+ecx*1],ss
  42c556:	jmp    0x50f9:0xfd51f942
  42c55d:	jno    0x42c52f
  42c55f:	cwde   
  42c560:	xor    DWORD PTR [eax+ebp*2+0x59246655],eax
  42c567:	sbb    ebx,DWORD PTR [esi+0x26]
  42c56a:	and    al,0xf7
  42c56c:	xor    ecx,DWORD PTR [edx+0x36]
  42c56f:	jmp    0xe6e3c8ee
  42c574:	ror    DWORD PTR [ecx+0x2ba93eed],0xec
  42c57b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c57c:	das    
  42c57d:	jecxz  0x42c562
  42c57f:	in     eax,dx
  42c580:	xchg   edx,eax
  42c581:	loop   0x42c52a
  42c583:	jns    0x42c57f
  42c585:	int    0x45
  42c587:	fstp   st(0)
  42c589:	adc    DWORD PTR [esi],edi
  42c58b:	cld    
  42c58c:	lea    eax,[ebx]
  42c58e:	adc    eax,ebx
  42c590:	mov    bl,0xa1
  42c592:	xchg   BYTE PTR [edx],bl
  42c594:	std    
  42c595:	sub    DWORD PTR [edx],ecx
  42c597:	jmp    0x4368:0x52f77431
  42c59e:	icebp  
  42c59f:	sub    DWORD PTR [ecx],ebx
  42c5a1:	inc    eax
  42c5a2:	push   cs
  42c5a3:	mov    edx,0xe19b6e36
  42c5a8:	jb     0x42c606
  42c5aa:	int3   
  42c5ab:	fisubr WORD PTR [ecx-0x62]
  42c5ae:	dec    esp
  42c5af:	push   esi
  42c5b0:	push   eax
  42c5b1:	loop   0x42c592
  42c5b3:	lds    ebp,FWORD PTR [edx+0x53c2154e]
  42c5b9:	push   ss
  42c5ba:	into   
  42c5bb:	div    BYTE PTR [edi+0x19]
  42c5be:	popa   
  42c5bf:	add    bh,bl
  42c5c1:	sti    
  42c5c2:	in     eax,0x6
  42c5c4:	aaa    
  42c5c5:	cdq    
  42c5c6:	test   al,0xc8
  42c5c8:	cmp    al,BYTE PTR [eax]
  42c5ca:	lea    ebp,[ebp-0x71bd1d3a]
  42c5d0:	or     ecx,DWORD PTR [ebp-0xc]
  42c5d3:	imul   eax,ebx,0xaf22a98
  42c5d9:	and    edi,esp
  42c5db:	fnstenv [ebx+0xe]
  42c5de:	int3   
  42c5df:	pushf  
  42c5e0:	lahf   
  42c5e1:	lock (bad) 
  42c5e3:	outs   dx,DWORD PTR ds:[esi]
  42c5e4:	and    bl,BYTE PTR [esi]
  42c5e6:	inc    esi
  42c5e7:	mov    esp,eax
  42c5e9:	pop    ds
  42c5ea:	loopne 0x42c59b
  42c5ec:	mov    bh,0x5b
  42c5ee:	jne    0x42c615
  42c5f0:	cs cmc 
  42c5f2:	xor    ebp,edi
  42c5f4:	ror    BYTE PTR [ecx-0x2b0eafdc],cl
  42c5fa:	call   DWORD PTR [ebx-0x53]
  42c5fd:	jnp    0x42c58e
  42c5ff:	rcl    BYTE PTR [ebx+ecx*2+0x2d2869f0],0x86
  42c607:	cmp    eax,0x87a95856
  42c60c:	pusha  
  42c60d:	and    eax,0x3016591a
  42c612:	jp     0x42c5a0
  42c614:	loopne 0x42c665
  42c616:	stos   BYTE PTR es:[edi],al
  42c617:	mov    ch,0xec
  42c619:	ret    
  42c61a:	pop    ebp
  42c61b:	jle    0x42c65b
  42c61d:	xchg   ebx,eax
  42c61e:	sub    cl,bl
  42c620:	ret    0x33d1
  42c623:	std    
  42c624:	sbb    bh,BYTE PTR [edx]
  42c626:	jae    0x42c5c9
  42c628:	loopne 0x42c617
  42c62a:	daa    
  42c62b:	sbb    BYTE PTR [ebp+0x70],dh
  42c62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c630:	sar    BYTE PTR [ebx+0x6cb97602],0x5a
  42c637:	nop
  42c638:	lahf   
  42c639:	and    WORD PTR [edi+edx*4+0x13aedc03],sp
  42c641:	xchg   ecx,eax
  42c642:	test   BYTE PTR [edx],0xf6
  42c645:	xlat   BYTE PTR ds:[ebx]
  42c646:	adc    edx,esp
  42c648:	jb     0x42c61e
  42c64a:	ja     0x42c6a6
  42c64c:	popf   
  42c64d:	idiv   ah
  42c64f:	mov    edi,0xe14510cd
  42c654:	call   0x952:0xa2238c7b
  42c65b:	outs   dx,DWORD PTR ds:[esi]
  42c65c:	outs   dx,DWORD PTR ds:[esi]
  42c65d:	jle    0x42c613
  42c65f:	in     al,0xc3
  42c661:	lock arpl dx,di
  42c664:	mov    dl,0xe2
  42c666:	aam    0x6a
  42c668:	pop    ebp
  42c669:	fmul   st(0),st
  42c66b:	pop    es
  42c66c:	outs   dx,BYTE PTR ds:[esi]
  42c66d:	(bad)  
  42c66e:	mov    ds:0x3afd4127,eax
  42c673:	jl     0x42c6f3
  42c675:	aaa    
  42c676:	push   0xffffffa2
  42c678:	mov    edi,0xa1f5549e
  42c67d:	lds    eax,FWORD PTR [edx]
  42c67f:	mov    eax,ds:0x795389e8
  42c684:	sbb    esi,DWORD PTR [ecx]
  42c686:	jg     0x42c6e9
  42c688:	and    eax,0x912f6a23
  42c68d:	sub    bh,BYTE PTR [ecx]
  42c68f:	shl    DWORD PTR [ebp-0x71b02dda],0x36
  42c696:	push   ecx
  42c697:	xor    edi,DWORD PTR [esp+edi*8+0x57eb72af]
  42c69e:	iret   
  42c69f:	(bad)  
  42c6a0:	repnz cmp ebp,DWORD PTR [ebp-0x5b1075e5]
  42c6a7:	je     0x42c6a8
  42c6a9:	inc    esp
  42c6aa:	dec    esp
  42c6ab:	enter  0xa3db,0xa9
  42c6af:	xchg   edx,eax
  42c6b0:	add    al,0x50
  42c6b2:	loop   0x42c708
  42c6b4:	ror    DWORD PTR [edx-0x79],cl
  42c6b7:	cdq    
  42c6b8:	ret    
  42c6b9:	pusha  
  42c6ba:	cmp    DWORD PTR [ebp-0x19],ecx
  42c6bd:	mov    edi,0x5ef9caa0
  42c6c2:	fadd   QWORD PTR [ecx-0x5d]
  42c6c5:	ret    0x91f5
  42c6c8:	cmp    DWORD PTR [ebx+0x7a],esi
  42c6cb:	jg     0x42c70e
  42c6cd:	inc    edx
  42c6ce:	addr16 pop esi
  42c6d0:	hlt    
  42c6d1:	pushf  
  42c6d2:	mov    bl,0xa
  42c6d4:	cdq    
  42c6d5:	adc    ebp,edx
  42c6d7:	pop    esi
  42c6d8:	loop   0x42c6ea
  42c6da:	fwait
  42c6db:	pop    ecx
  42c6dc:	pop    eax
  42c6dd:	(bad)  
  42c6de:	iret   
  42c6df:	leave  
  42c6e0:	jb     0x42c67d
  42c6e2:	into   
  42c6e3:	dec    edx
  42c6e4:	xchg   edx,eax
  42c6e5:	ss hlt 
  42c6e7:	and    DWORD PTR [edx-0x77be06e4],0xffffff87
  42c6ee:	ret    
  42c6ef:	push   edi
  42c6f0:	loopne 0x42c701
  42c6f2:	sub    eax,0x74ce25d
  42c6f7:	es mov ah,0x84
  42c6fa:	(bad)  [ecx]
  42c6fc:	mov    bh,0x40
  42c6fe:	std    
  42c6ff:	cwde   
  42c700:	out    0x9d,al
  42c702:	lock cmp eax,0xb3a3c9f
  42c708:	nop    DWORD PTR [edx+0x41]
  42c70c:	mov    WORD PTR [ebp+ebp*1-0x1a],fs
  42c710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c711:	js     0x42c6cf
  42c713:	cmp    dl,ah
  42c715:	mov    esp,0xdc9dce90
  42c71a:	mov    ch,0xf9
  42c71c:	add    edi,DWORD PTR [edx+0x34]
  42c71f:	adc    esi,DWORD PTR [ebp+0x27]
  42c722:	loopne 0x42c6e6
  42c724:	sti    
  42c725:	mov    ds:0x9da8f89d,al
  42c72a:	push   es
  42c72b:	test   ah,cl
  42c72d:	mov    al,ds:0x939bf315
  42c732:	jmp    0x42c791
  42c734:	rcr    BYTE PTR [edi],0x9d
  42c737:	test   DWORD PTR [ebp-0x77ad85c7],edx
  42c73d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c73e:	mov    ebp,0xf62f716
  42c743:	add    bh,BYTE PTR ds:0xe6f2cf0d
  42c749:	dec    edx
  42c74a:	jl     0x42c71a
  42c74c:	push   ebx
  42c74d:	stos   BYTE PTR es:[edi],al
  42c74e:	lahf   
  42c74f:	not    edi
  42c751:	pop    edi
  42c752:	inc    ebp
  42c753:	out    dx,al
  42c754:	(bad)  
  42c755:	dec    esp
  42c756:	call   DWORD PTR [ebp+ecx*4+0x2e]
  42c75a:	dec    esp
  42c75b:	jl     0x42c75f
  42c75d:	in     eax,dx
  42c75e:	adc    al,0xac
  42c760:	and    bh,BYTE PTR [edi]
  42c762:	and    ebp,esp
  42c764:	dec    eax
  42c765:	(bad)  
  42c766:	cdq    
  42c767:	push   ecx
  42c768:	fcompp 
  42c76a:	sbb    ebx,esi
  42c76c:	pop    ds
  42c76d:	(bad)  
  42c76e:	jno    0x42c7cf
  42c770:	adc    eax,0xd15576d9
  42c775:	lds    edx,FWORD PTR [ecx+0x29bd2c60]
  42c77b:	das    
  42c77c:	popa   
  42c77d:	sbb    BYTE PTR [esp+edx*4-0x71403f2f],0x2b
  42c785:	mov    cl,0xb9
  42c787:	pop    edi
  42c788:	sbb    DWORD PTR [ebx-0x2b19788c],ebx
  42c78e:	cmp    al,bh
  42c790:	and    ah,ah
  42c792:	loopne 0x42c72e
  42c794:	jmp    0xa71170a
  42c799:	jecxz  0x42c804
  42c79b:	mov    ebp,0xcc933128
  42c7a0:	add    al,0x3e
  42c7a2:	shl    edi,0xc3
  42c7a5:	mov    cl,0xe0
  42c7a7:	ret    0x6884
  42c7aa:	imul   BYTE PTR [ebx+0x36]
  42c7ad:	(bad)  
  42c7ae:	pop    edx
  42c7af:	popf   
  42c7b0:	stos   DWORD PTR es:[edi],eax
  42c7b1:	mov    ch,0x8d
  42c7b3:	adc    eax,0x7197adec
  42c7b8:	cmp    DWORD PTR [esi],esi
  42c7ba:	stos   BYTE PTR es:[edi],al
  42c7bb:	push   edx
  42c7bc:	and    al,BYTE PTR fs:[ebx+0x2f]
  42c7c0:	cmp    ch,bh
  42c7c2:	dec    edx
  42c7c3:	push   cs
  42c7c4:	cmp    DWORD PTR [si-0x4df1],ecx
  42c7c9:	sbb    eax,0x76ac2b8a
  42c7ce:	cmp    ch,ah
  42c7d0:	cmp    al,BYTE PTR cs:[edx]
  42c7d3:	push   esi
  42c7d4:	bound  edx,QWORD PTR [ebp+0x79]
  42c7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c7d8:	sbb    ebp,DWORD PTR [edx+0x72606809]
  42c7de:	jg     0x42c76f
  42c7e0:	ror    DWORD PTR [ecx+0x3af76a2e],0xa2
  42c7e7:	call   edi
  42c7e9:	mov    ebx,0x6b2c29c
  42c7ee:	je     0x42c81b
  42c7f0:	leave  
  42c7f1:	popa   
  42c7f2:	cli    
  42c7f3:	push   esi
  42c7f4:	lods   eax,DWORD PTR ds:[esi]
  42c7f5:	mov    ebp,0xf0f1c3b7
  42c7fa:	jmp    0xeeab:0x7d3edf98
  42c801:	inc    edx
  42c802:	jmp    0xcdf9:0x499fb93c
  42c809:	call   0x14fa:0x5352ad97
  42c810:	fstp   DWORD PTR [esi+edi*4]
  42c813:	mov    DWORD PTR [ecx-0x70],ecx
  42c816:	scas   eax,DWORD PTR es:[edi]
  42c817:	mov    al,0x34
  42c819:	or     eax,0x4f8713f0
  42c81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c820:	std    
  42c821:	mov    al,0xf7
  42c823:	imul   DWORD PTR [eax+edx*4+0x22]
  42c827:	(bad)  
  42c828:	xchg   esp,eax
  42c829:	ins    DWORD PTR es:[edi],dx
  42c82a:	inc    edx
  42c82b:	mov    ebp,0xe6cb5825
  42c830:	gs pop ds
  42c832:	mov    dh,0xde
  42c834:	ret    
  42c835:	inc    eax
  42c836:	add    ebx,DWORD PTR [ecx+edi*1-0x7ff1a82e]
  42c83d:	lahf   
  42c83e:	jae    0x42c854
  42c840:	dec    edx
  42c841:	lahf   
  42c842:	mov    esp,0x9340c785
  42c847:	(bad)  
  42c848:	fdiv   DWORD PTR [ebx-0x2cb926bb]
  42c84e:	adc    DWORD PTR [esi],edx
  42c850:	or     al,BYTE PTR [ecx+0x78]
  42c853:	out    0x21,eax
  42c855:	push   edx
  42c856:	pusha  
  42c857:	mov    esi,0xbc530350
  42c85c:	call   DWORD PTR [ecx]
  42c85e:	jne    0x42c8de
  42c860:	lea    esi,[ebx-0x49]
  42c863:	fsubr  QWORD PTR [ebx-0x1e281c7c]
  42c869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c86a:	scas   al,BYTE PTR es:[edi]
  42c86b:	dec    esi
  42c86c:	outs   dx,BYTE PTR ds:[esi]
  42c86d:	sub    BYTE PTR [ecx],dh
  42c86f:	add    al,0xec
  42c872:	dec    edi
  42c873:	stc    
  42c874:	fs or  ebp,0xe0e7f737
  42c87b:	jns    0x42c8bc
  42c87d:	add    cl,BYTE PTR [eax+0x63]
  42c880:	arpl   WORD PTR ds:0x7ddc2ad,ax
  42c886:	scas   eax,DWORD PTR es:[edi]
  42c887:	mov    al,0x25
  42c889:	pop    esp
  42c88a:	add    DWORD PTR [esi+0x3d],ebp
  42c88d:	mov    BYTE PTR [ecx+0x4f],cl
  42c890:	inc    edx
  42c891:	mov    edx,0xe32ddcea
  42c896:	icebp  
  42c897:	push   edx
  42c898:	jnp    0x42c8b6
  42c89a:	ins    BYTE PTR es:[edi],dx
  42c89b:	or     al,BYTE PTR [esi+0x66aefb6c]
  42c8a1:	push   eax
  42c8a2:	gs mov dh,0x9c
  42c8a5:	jno    0x42c8ed
  42c8a7:	fbstp  TBYTE PTR [ebp-0x54]
  42c8aa:	cwde   
  42c8ab:	pusha  
  42c8ac:	sub    DWORD PTR [edx],0x246c3255
  42c8b2:	or     eax,0x727d3b6d
  42c8b7:	out    dx,al
  42c8b8:	cmp    al,BYTE PTR [ecx-0x67]
  42c8bb:	int    0x2e
  42c8bd:	mov    dh,0x37
  42c8bf:	rcr    BYTE PTR [esi-0x7611db87],cl
  42c8c5:	(bad)  
  42c8c6:	and    eax,0x847a73d4
  42c8cb:	sub    BYTE PTR [edx+0x7a],ah
  42c8ce:	andps  xmm6,XMMWORD PTR [edi+0x2f27c79a]
  42c8d5:	mov    eax,ds:0xfc50d948
  42c8da:	js     0x42c901
  42c8dc:	scas   eax,DWORD PTR es:[edi]
  42c8dd:	bound  esi,QWORD PTR [esi]
  42c8df:	mov    ds:0x6ec40387,al
  42c8e4:	out    0x8c,al
  42c8e6:	bswap  ebx
  42c8e8:	neg    DWORD PTR [esi+0x0]
  42c8eb:	mov    bh,0xd9
  42c8ed:	inc    esp
  42c8ee:	stos   DWORD PTR es:[edi],eax
  42c8ef:	mov    al,0x95
  42c8f1:	daa    
  42c8f2:	add    BYTE PTR [edi],dh
  42c8f4:	out    0x7a,eax
  42c8f6:	sub    esp,DWORD PTR [ecx+0x3b]
  42c8f9:	mov    ebx,0xed4d5202
  42c8fe:	sbb    ebx,esp
  42c900:	inc    edi
  42c901:	retf   
  42c902:	repnz dec eax
  42c904:	adc    DWORD PTR [ebx+0x7447d093],ebp
  42c90a:	add    edx,DWORD PTR ds:0x7cee402f
  42c910:	pop    ebp
  42c911:	push   ecx
  42c912:	or     cl,ch
  42c914:	cmc    
  42c915:	jne    0x42c954
  42c917:	inc    esi
  42c918:	rcl    ecx,cl
  42c91a:	(bad)  
  42c91b:	pop    ss
  42c91c:	in     al,dx
  42c91d:	jno    0x42c922
  42c91f:	je     0x42c947
  42c921:	lea    eax,ds:0x17e08fd8
  42c927:	sbb    esp,DWORD PTR [ebx+0x5b020260]
  42c92d:	dec    ebp
  42c92e:	sbb    BYTE PTR [ebp+0x23ebbcc8],cl
  42c934:	xor    eax,DWORD PTR [edx-0x614c349f]
  42c93a:	jmp    0x42c8c6
  42c93c:	inc    esp
  42c93d:	das    
  42c93e:	das    
  42c93f:	jb     0x42c97c
  42c941:	and    edi,DWORD PTR [ecx-0x74]
  42c944:	xor    eax,0x6fcc9c27
  42c949:	test   BYTE PTR [edi+0x4d],bl
  42c94c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c94d:	and    BYTE PTR [ebp+0x6a],dl
  42c950:	out    dx,al
  42c951:	out    0xd4,al
  42c953:	xor    BYTE PTR [edx+0x17],cl
  42c956:	mov    dh,0x29
  42c958:	daa    
  42c959:	nop
  42c95a:	(bad)  
  42c95b:	mov    esp,0xa28706cb
  42c960:	test   al,0x71
  42c962:	(bad)  
  42c963:	sti    
  42c964:	xchg   ebx,eax
  42c965:	daa    
  42c966:	sbb    eax,0x70c5af00
  42c96b:	cdq    
  42c96c:	cdq    
  42c96d:	xchg   edx,eax
  42c96e:	stos   DWORD PTR es:[edi],eax
  42c96f:	ja     0x42c914
  42c971:	add    BYTE PTR ds:0x8d2023b1,ch
  42c977:	xor    eax,0xf3550c94
  42c97c:	ja     0x42c9b3
  42c97e:	xor    eax,0x8a88e4fa
  42c983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c984:	lods   al,BYTE PTR ds:[esi]
  42c985:	mul    DWORD PTR [ecx]
  42c987:	daa    
  42c988:	mov    eax,0x87afe3b
  42c98d:	dec    esp
  42c98e:	add    eax,0xf94e55de
  42c993:	xor    eax,0x28bf7b92
  42c998:	mov    esp,DWORD PTR [ebp+0x37]
  42c99b:	sub    BYTE PTR [edi],ah
  42c99d:	aam    0xa8
  42c99f:	mov    edx,0x2d2dcae2
  42c9a4:	add    esi,edx
  42c9a6:	sub    bl,dh
  42c9a8:	(bad)  
  42c9aa:	in     eax,0xa3
  42c9ac:	(bad)  
  42c9ad:	pop    ds
  42c9ae:	push   es
  42c9af:	pop    es
  42c9b0:	adc    BYTE PTR [edx],bh
  42c9b2:	(bad)  
  42c9b4:	lock fwait
  42c9b6:	imul   BYTE PTR [ebx]
  42c9b8:	sub    eax,0xb73a7cff
  42c9bd:	mov    ds,WORD PTR [edi]
  42c9bf:	sub    eax,0x46a514ab
  42c9c4:	inc    esi
  42c9c5:	jne    0x42ca26
  42c9c7:	cwde   
  42c9c8:	push   ecx
  42c9c9:	cwde   
  42c9ca:	pop    ebx
  42c9cb:	sub    DWORD PTR [edx+0x4f],edx
  42c9ce:	mov    edx,0x2e92ca61
  42c9d3:	pop    ss
  42c9d4:	stos   BYTE PTR es:[edi],al
  42c9d5:	cs sub eax,0xa8d68995
  42c9db:	push   ecx
  42c9dc:	add    ah,BYTE PTR [ecx-0x2f36557]
  42c9e2:	mov    ch,0x35
  42c9e4:	inc    ebp
  42c9e5:	mov    esi,0x870ac908
  42c9ea:	and    eax,0x5db9eee5
  42c9ef:	mov    dh,0x1d
  42c9f1:	lahf   
  42c9f2:	add    bh,BYTE PTR [ebx-0x63]
  42c9f5:	sub    eax,0xad59aba7
  42c9fa:	loope  0x42ca06
  42c9fc:	mov    ebx,DWORD PTR [edi+0x45f9f9b0]
  42ca02:	xchg   edi,eax
  42ca03:	push   edi
  42ca04:	scas   al,BYTE PTR es:[edi]
  42ca05:	scas   al,BYTE PTR es:[edi]
  42ca06:	dec    ecx
  42ca07:	imul   esi,DWORD PTR [edi-0x66c9193e],0xffffff9d
  42ca0e:	retf   0x9b2e
  42ca11:	ror    BYTE PTR [esi],1
  42ca13:	gs clc 
  42ca15:	pop    edx
  42ca16:	push   es
  42ca17:	and    esp,DWORD PTR [eax+edx*8]
  42ca1a:	ins    DWORD PTR es:[edi],dx
  42ca1b:	inc    ebp
  42ca1c:	sbb    BYTE PTR [ebx+0x45],dl
  42ca1f:	mov    ds:0x4c824fcc,al
  42ca24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca26:	enter  0xfee8,0x68
  42ca2a:	push   0x99551806
  42ca2f:	cmp    edx,DWORD PTR [ecx]
  42ca31:	es jg  0x42c9f3
  42ca34:	mov    edi,0x1c342a39
  42ca39:	pop    esp
  42ca3a:	add    BYTE PTR [eax+0x8],bh
  42ca3d:	dec    ecx
  42ca3e:	ds in  al,dx
  42ca40:	mov    BYTE PTR [edi-0x71],al
  42ca43:	fidivr WORD PTR [ebp+edx*1+0x7330d62e]
  42ca4a:	xchg   esi,eax
  42ca4b:	pop    edx
  42ca4c:	gs and ecx,esi
  42ca4f:	and    ebp,0x72cef0b5
  42ca55:	neg    DWORD PTR [ebp-0xd]
  42ca58:	xchg   ebp,eax
  42ca59:	rcl    BYTE PTR [esi+0x60],cl
  42ca5c:	arpl   WORD PTR [edx],di
  42ca5e:	iret   
  42ca5f:	stos   DWORD PTR es:[edi],eax
  42ca60:	ror    BYTE PTR [esi+0x7c],0x47
  42ca64:	and    dh,cl
  42ca66:	xor    bh,bl
  42ca68:	retf   
  42ca69:	add    esp,DWORD PTR [ecx+0x25]
  42ca6c:	inc    ebx
  42ca6d:	mov    ch,0x8d
  42ca6f:	jns    0x42ca54
  42ca71:	xchg   esi,eax
  42ca72:	ss dec eax
  42ca74:	jb     0x42ca4e
  42ca76:	jne    0x42ca90
  42ca78:	xchg   esp,eax
  42ca79:	xor    ebp,esi
  42ca7b:	mov    cl,0xe1
  42ca7d:	aam    0x4b
  42ca7f:	lds    ebp,FWORD PTR ds:0x90b0e89d
  42ca85:	popf   
  42ca86:	or     eax,DWORD PTR [edi]
  42ca88:	mov    bh,0x3f
  42ca8a:	outs   dx,DWORD PTR ds:[esi]
  42ca8b:	or     al,0x8c
  42ca8d:	test   DWORD PTR [ebx-0x4923dd91],eax
  42ca93:	mov    ebp,0x3b2913b
  42ca98:	add    ch,BYTE PTR [esp+edx*2-0x30]
  42ca9c:	cmp    ah,BYTE PTR [ecx+edi*1]
  42ca9f:	mov    ch,0x36
  42caa1:	sub    DWORD PTR [edi+edi*4+0x3754cee8],edi
  42caa8:	inc    sp
  42caaa:	inc    edi
  42caab:	add    al,0x13
  42caad:	shr    DWORD PTR [ecx+0x38a1f973],0x2
  42cab4:	loope  0x42cab8
  42cab6:	xor    BYTE PTR [edx-0x7582a4d0],0xb
  42cabd:	dec    edi
  42cabe:	stos   BYTE PTR es:[edi],al
  42cabf:	mov    ds,WORD PTR [edi]
  42cac1:	lods   eax,DWORD PTR ds:[esi]
  42cac2:	ret    0x3228
  42cac5:	adc    DWORD PTR [edx-0x3db1698b],ecx
  42cacb:	and    BYTE PTR [edx+0x46],al
  42cace:	retf   
  42cacf:	aaa    
  42cad0:	scas   eax,DWORD PTR es:[edi]
  42cad1:	mov    BYTE PTR [eax+0x38],dl
  42cad4:	push   cs
  42cad5:	or     al,0x61
  42cad7:	aam    0x1f
  42cad9:	clc    
  42cada:	mov    dh,0xae
  42cadc:	sbb    cl,BYTE PTR [eax+0x69b7aa5b]
  42cae2:	and    eax,DWORD PTR [edi+0x1a2fb49c]
  42cae8:	ins    BYTE PTR es:[edi],dx
  42cae9:	pop    ecx
  42caea:	add    eax,0x9fc94bcf
  42caef:	push   0x22
  42caf1:	fidiv  WORD PTR [ebp-0x35]
  42caf4:	xchg   edi,eax
  42caf5:	cs pop ebp
  42caf7:	lods   eax,DWORD PTR ds:[esi]
  42caf8:	sub    DWORD PTR [ebx-0x49a82b35],ecx
  42cafe:	(bad)  
  42caff:	cmc    
  42cb00:	push   0x6b
  42cb02:	shl    BYTE PTR [esi],cl
  42cb04:	outs   dx,BYTE PTR ds:[esi]
  42cb05:	punpcklbw mm4,DWORD PTR [edi]
  42cb08:	div    BYTE PTR [edx]
  42cb0a:	faddp  st(3),st
  42cb0c:	inc    esp
  42cb0d:	call   0x9030d7a2
  42cb12:	dec    ebx
  42cb13:	sar    eax,0xbb
  42cb16:	je     0x42cb0d
  42cb18:	pop    esi
  42cb19:	les    esp,FWORD PTR [edi-0x6787c77d]
  42cb1f:	fdivr  DWORD PTR [ebp+esi*2-0x37]
  42cb23:	mov    ?,esp
  42cb25:	xchg   ebp,eax
  42cb26:	sub    eax,0xa2664e8b
  42cb2b:	or     al,0xc0
  42cb2d:	nop
  42cb2e:	jns    0x42caf7
  42cb30:	cmp    DWORD PTR [edx+ebp*4+0xe],ebp
  42cb34:	mov    ecx,0xf38afbc1
  42cb39:	div    BYTE PTR [eax+0x403cfc8f]
  42cb3f:	sbb    edx,ecx
  42cb41:	adc    al,0x90
  42cb43:	and    al,0x88
  42cb45:	jmp    0x714b:0xae610088
  42cb4c:	jle    0x42cb29
  42cb4e:	and    eax,0x5c236654
  42cb53:	stos   BYTE PTR es:[edi],al
  42cb54:	mov    bh,0xaa
  42cb56:	in     eax,dx
  42cb57:	scas   eax,DWORD PTR es:[edi]
  42cb58:	push   esp
  42cb59:	popf   
  42cb5a:	dec    edx
  42cb5b:	lea    esi,[esi]
  42cb5d:	mov    ecx,0x406c2875
  42cb62:	scas   eax,DWORD PTR es:[edi]
  42cb63:	xor    al,0x48
  42cb65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb66:	pushf  
  42cb67:	dec    ebx
  42cb68:	and    DWORD PTR [ebp+0x14],ecx
  42cb6b:	push   ecx
  42cb6c:	add    cl,BYTE PTR [edx+ebx*2-0x7b39e5b5]
  42cb73:	pop    es
  42cb74:	mov    edi,0xf3aa72bd
  42cb79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb7a:	mov    ds:0xb258990,al
  42cb7f:	iret   
  42cb80:	mov    edi,0x1296e2e5
  42cb85:	or     ch,al
  42cb87:	retf   
  42cb88:	mov    edi,0x899c539b
  42cb8d:	jg     0x42cb14
  42cb8f:	adc    ecx,DWORD PTR [edx+0x3b156e08]
  42cb95:	(bad)  
  42cb96:	adc    al,0xd6
  42cb98:	jno    0x42cbae
  42cb9a:	pop    ebx
  42cb9b:	frstor [esi-0x56f5ba34]
  42cba1:	push   eax
  42cba2:	push   edi
  42cba3:	and    DWORD PTR [edx-0x1e],ebp
  42cba6:	inc    esi
  42cba7:	cmp    DWORD PTR [ebx],eax
  42cba9:	(bad)  
  42cbaa:	daa    
  42cbab:	or     eax,0xcb4f0fc8
  42cbb0:	jg     0x42cb5b
  42cbb2:	btc    DWORD PTR [ecx-0x37],ebp
  42cbb6:	sub    edi,DWORD PTR [eax-0xf]
  42cbb9:	or     DWORD PTR [ebp-0xe],ebx
  42cbbc:	retf   0x4fd8
  42cbbf:	cmp    edi,DWORD PTR [edx+0x493d20de]
  42cbc5:	cmc    
  42cbc6:	push   esi
  42cbc7:	int3   
  42cbc8:	out    dx,eax
  42cbc9:	call   0x38211748
  42cbce:	mov    dl,0x79
  42cbd0:	ds aad 0xc
  42cbd3:	scas   eax,DWORD PTR es:[edi]
  42cbd4:	imul   esp,DWORD PTR [ecx],0x462a7d40
  42cbda:	sub    DWORD PTR [edi-0x16252672],ecx
  42cbe0:	mov    ch,0x33
  42cbe2:	imul   ebx,DWORD PTR [esi+0x9],0x5c
  42cbe6:	cmp    eax,0x138435f5
  42cbeb:	dec    ecx
  42cbec:	or     DWORD PTR [edx-0x7002f11b],eax
  42cbf2:	inc    edi
  42cbf3:	xchg   BYTE PTR [ecx-0x1f],bh
  42cbf6:	or     ch,cl
  42cbf8:	inc    ebp
  42cbf9:	or     BYTE PTR [edi-0x68],bh
  42cbfc:	jne    0x42cc2c
  42cbfe:	int    0x4f
  42cc00:	call   0xc2c00543
  42cc05:	jae    0x42cbc5
  42cc07:	or     ecx,ebp
  42cc09:	repnz dec eax
  42cc0b:	mov    al,dh
  42cc0d:	or     DWORD PTR [edx-0x36],0xffffff88
  42cc11:	mov    edx,0x78b5605f
  42cc16:	inc    ebp
  42cc17:	je     0x42cc2c
  42cc19:	ret    
  42cc1a:	push   edi
  42cc1b:	rol    esi,0x4d
  42cc1e:	add    al,0xe3
  42cc20:	lahf   
  42cc21:	imul   bh
  42cc23:	cmc    
  42cc24:	jbe    0x42cc5b
  42cc26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc27:	call   0x48a33fa9
  42cc2c:	mov    ds:0x22c0cf8b,eax
  42cc31:	pusha  
  42cc32:	xor    BYTE PTR [ebx-0x61f13efc],ch
  42cc38:	cmp    BYTE PTR ss:[eax+0x63],bl
  42cc3c:	push   ds
  42cc3d:	fld    TBYTE PTR [esi]
  42cc3f:	xor    bh,cl
  42cc41:	mov    WORD PTR [eax],cs
  42cc43:	clc    
  42cc44:	out    dx,al
  42cc45:	mov    fs,eax
  42cc47:	outs   dx,DWORD PTR ds:[esi]
  42cc48:	shl    BYTE PTR [edi],cl
  42cc4a:	cmp    ebx,ebp
  42cc4c:	and    eax,0x97fb4ab0
  42cc51:	push   esi
  42cc52:	outs   dx,DWORD PTR ds:[esi]
  42cc53:	cs enter 0x63da,0x9d
  42cc58:	mov    cl,0x5e
  42cc5a:	bnd data16 jno 0x42cbeb
  42cc5e:	(bad)  
  42cc5f:	aas    
  42cc60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc61:	push   edi
  42cc62:	pop    esp
  42cc63:	je     0x42cc4e
  42cc65:	or     dh,BYTE PTR [edi+ebp*2+0x7e501853]
  42cc6c:	mov    ebp,esp
  42cc6e:	das    
  42cc6f:	lahf   
  42cc70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc71:	and    ebp,DWORD PTR [esi+edi*2]
  42cc74:	xchg   edi,eax
  42cc75:	mov    ebx,0xc8282beb
  42cc7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc7b:	add    DWORD PTR [esi-0x16],eax
  42cc7e:	push   ebp
  42cc7f:	repnz mov ecx,0xd9a85231
  42cc85:	jg     0x42ccc8
  42cc87:	retf   0x7320
  42cc8a:	mov    bh,0x78
  42cc8c:	sbb    eax,0x126bd25b
  42cc91:	scas   eax,DWORD PTR es:[edi]
  42cc92:	cs mov cl,0x4
  42cc95:	retf   
  42cc96:	or     dl,cl
  42cc98:	or     al,0x5f
  42cc9a:	adc    ch,BYTE PTR [esi-0x45]
  42cc9d:	inc    eax
  42cc9e:	ja     0x42ccf3
  42cca0:	(bad)  
  42cca1:	pop    eax
  42cca2:	stc    
  42cca3:	xor    ch,bl
  42cca5:	push   0xc483de1a
  42ccaa:	mov    al,0xbf
  42ccac:	xor    eax,0x25b5a63d
  42ccb1:	xchg   eax,esp
  42ccb3:	dec    edi
  42ccb4:	imul   edi,DWORD PTR [esi-0x71],0x49
  42ccb8:	std    
  42ccb9:	mov    edx,DWORD PTR [eax-0x3e]
  42ccbc:	cs (bad) 
  42ccbe:	push   esi
  42ccbf:	(bad)  
  42ccc0:	jmp    0x210d:0xab5b5a29
  42ccc7:	push   0xffffffbb
  42ccc9:	pop    es
  42ccca:	sahf   
  42cccb:	sti    
  42cccc:	retf   0x23a8
  42cccf:	outs   dx,DWORD PTR ds:[esi]
  42ccd0:	jge    0x42cce7
  42ccd2:	mov    es,WORD PTR [eax-0x471ee644]
  42ccd8:	dec    ebx
  42ccd9:	(bad)  
  42ccdb:	iret   
  42ccdc:	push   ebp
  42ccdd:	mov    ebp,0xba08efca
  42cce2:	fiadd  WORD PTR [edi-0x303349c7]
  42cce8:	and    cl,BYTE PTR [ebx]
  42ccea:	cmp    dl,al
  42ccec:	std    
  42cced:	xor    eax,0x6865db7f
  42ccf2:	test   al,0x90
  42ccf4:	jecxz  0x42ccf6
  42ccf6:	jb     0x42cd63
  42ccf8:	xchg   edx,eax
  42ccf9:	inc    ebp
  42ccfa:	ins    DWORD PTR es:[edi],dx
  42ccfb:	mov    dh,0x3
  42ccfd:	inc    esi
  42ccfe:	mov    ch,0x10
  42cd00:	ins    BYTE PTR es:[edi],dx
  42cd01:	pop    esi
  42cd02:	xchg   esi,eax
  42cd03:	fld    TBYTE PTR [ebx]
  42cd05:	jg     0x42cd86
  42cd07:	popf   
  42cd08:	mov    esi,0x47890c15
  42cd0d:	stos   DWORD PTR es:[edi],eax
  42cd0e:	in     eax,dx
  42cd0f:	mov    BYTE PTR [ebx],0x3e
  42cd12:	test   BYTE PTR [ebx+eax*1+0x34],ch
  42cd16:	bound  esp,QWORD PTR ds:0x37f33189
  42cd1c:	lock dec esi
  42cd1e:	(bad)  
  42cd1f:	test   BYTE PTR [esi+0x60],0xff
  42cd23:	aad    0x72
  42cd25:	hlt    
  42cd26:	imul   esi,DWORD PTR [eax+0x58],0xffffffae
  42cd2a:	push   esp
  42cd2b:	clc    
  42cd2c:	aas    
  42cd2d:	or     ebx,ebx
  42cd2f:	scas   eax,DWORD PTR es:[edi]
  42cd30:	or     dl,bl
  42cd32:	or     BYTE PTR ds:0x39e209f,cl
  42cd38:	mov    cl,bh
  42cd3a:	adc    DWORD PTR [edi],edx
  42cd3c:	cmp    dh,bh
  42cd3e:	ret    0x61
  42cd41:	inc    esi
  42cd42:	mov    eax,0xce4fecc4
  42cd47:	jp     0x42cd1f
  42cd49:	ror    DWORD PTR [ecx],cl
  42cd4b:	add    BYTE PTR [ecx],ah
  42cd4d:	pop    edi
  42cd4e:	imul   ebp,DWORD PTR [ecx],0xbe972e56
  42cd54:	inc    ecx
  42cd55:	stos   DWORD PTR es:[edi],eax
  42cd56:	aaa    
  42cd57:	enter  0x6d30,0x68
  42cd5b:	xor    bl,BYTE PTR [ebp-0x3]
  42cd5e:	mov    WORD PTR [ebx],?
  42cd60:	ins    DWORD PTR es:[edi],dx
  42cd61:	lea    eax,[esi-0x38]
  42cd64:	push   ebx
  42cd65:	add    DWORD PTR [ebx],ebx
  42cd67:	inc    ebx
  42cd68:	push   ebp
  42cd69:	xor    ah,BYTE PTR [eax+0x7b4382e6]
  42cd6f:	jmp    0xa50f:0x40c258c4
  42cd76:	mov    ecx,0x20ee0a47
  42cd7b:	push   esi
  42cd7c:	dec    ebp
  42cd7d:	sub    ah,ch
  42cd7f:	les    esp,FWORD PTR [eax-0x78b27d6f]
  42cd85:	jecxz  0x42cd6c
  42cd87:	sbb    bl,BYTE PTR [ebp+0x3732b]
  42cd8d:	jmp    0x42cdd7
  42cd8f:	push   ss
  42cd90:	inc    ebx
  42cd91:	aam    0x45
  42cd93:	lock add DWORD PTR fs:[edi],0xd3a3d497
  42cd9b:	cmp    BYTE PTR [eax+0x717ef2a4],0x25
  42cda2:	dec    ebp
  42cda3:	stos   BYTE PTR es:[edi],al
  42cda4:	cmp    eax,0x9ed39096
  42cda9:	mov    cl,0x5e
  42cdab:	in     eax,dx
  42cdac:	outs   dx,BYTE PTR ds:[esi]
  42cdad:	and    DWORD PTR [ebp+0x45dbff8],edx
  42cdb3:	test   ebx,edx
  42cdb5:	jmp    0xfc1c:0xfe2629b9
  42cdbc:	stos   DWORD PTR es:[edi],eax
  42cdbd:	mov    cl,0x6e
  42cdbf:	test   DWORD PTR [edx+0x24],0xe20d8dad
  42cdc6:	stos   BYTE PTR es:[edi],al
  42cdc7:	inc    ebp
  42cdc8:	fs dec eax
  42cdca:	mov    WORD PTR [edi+0x67],?
  42cdcd:	dec    ebx
  42cdce:	inc    eax
  42cdcf:	(bad)  
  42cdd0:	or     ah,BYTE PTR ds:0x1228e009
  42cdd6:	push   ss
  42cdd7:	scas   eax,DWORD PTR es:[edi]
  42cdd8:	add    al,0x72
  42cdda:	xor    bh,BYTE PTR [eax]
  42cddc:	push   eax
  42cddd:	mov    DWORD PTR [eax+0x5226f148],ebp
  42cde3:	adc    BYTE PTR [esi],bl
  42cde5:	or     al,0x45
  42cde7:	mov    bh,0xf4
  42cde9:	xchg   eax,ebp
  42cdeb:	push   ss
  42cdec:	sub    al,BYTE PTR [ecx+0x2f]
  42cdef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cdf0:	xchg   ebp,eax
  42cdf1:	mov    esp,0x4e338045
  42cdf6:	mov    esi,0xc9366a64
  42cdfb:	pop    edi
  42cdfc:	add    ebx,ebx
  42cdfe:	stos   BYTE PTR es:[edi],al
  42cdff:	stos   DWORD PTR es:[edi],eax
  42ce00:	imul   ebx,DWORD PTR ds:0x7dfe6615,0xd5ad02f9
  42ce0a:	test   esp,esi
  42ce0c:	push   0xffffffc7
  42ce0e:	bound  ecx,QWORD PTR [esi+0x6cbcece5]
  42ce14:	popa   
  42ce15:	cdq    
  42ce16:	es mov esp,0x6b744fb0
  42ce1c:	cmp    cl,BYTE PTR [eax-0x73e891d9]
  42ce22:	jp     0x42ce96
  42ce24:	mov    ebp,0x305f89a3
  42ce29:	mov    ebp,0xad65f742
  42ce2e:	nop
  42ce2f:	pop    ecx
  42ce30:	xor    BYTE PTR [edi],cl
  42ce32:	push   ebp
  42ce33:	pop    ds
  42ce34:	mov    esp,0x6886c1b2
  42ce39:	cmp    DWORD PTR [edi+eiz*4-0x5c],0x596ca6e9
  42ce41:	enter  0x8e84,0xd7
  42ce45:	sub    dl,BYTE PTR [ebx]
  42ce47:	imul   eax,DWORD PTR [ebx+ebx*4+0x51950c6e],0x22
  42ce4f:	push   0x5d44c64e
  42ce54:	daa    
  42ce55:	mov    ebp,0x3638a634
  42ce5a:	push   ds
  42ce5b:	xchg   esi,eax
  42ce5c:	sbb    DWORD PTR [edi],ecx
  42ce5e:	push   es
  42ce5f:	sar    BYTE PTR [eax],1
  42ce61:	mov    eax,0x3b3a8782
  42ce66:	mov    edx,0x47f4082e
  42ce6b:	inc    esp
  42ce6c:	push   eax
  42ce6d:	mov    WORD PTR [edx],ds
  42ce6f:	cld    
  42ce70:	and    al,0xe3
  42ce72:	(bad)  
  42ce73:	adc    DWORD PTR [esi+eax*8-0x5360fd70],ebx
  42ce7a:	lods   eax,DWORD PTR ds:[esi]
  42ce7b:	pop    esp
  42ce7c:	adc    al,0xcf
  42ce7e:	jne    0x42ce81
  42ce80:	mov    BYTE PTR ds:0x604f08e2,dl
  42ce86:	pop    esp
  42ce87:	stos   DWORD PTR es:[edi],eax
  42ce88:	pop    ebp
  42ce89:	adc    BYTE PTR [edx-0x5eecf27f],cl
  42ce8f:	mov    BYTE PTR [ecx],ah
  42ce91:	movaps XMMWORD PTR [edx+0x9],xmm0
  42ce95:	test   eax,0x67f9dbcd
  42ce9a:	out    0xe,al
  42ce9c:	rcl    DWORD PTR [edx-0x42],cl
  42ce9f:	dec    esi
  42cea0:	sbb    al,0x3f
  42cea2:	call   0x6fa083e7
  42cea7:	dec    edi
  42cea8:	cmp    DWORD PTR [eax-0x75],ecx
  42ceab:	(bad)  
  42ceac:	lods   eax,DWORD PTR ds:[esi]
  42cead:	inc    eax
  42ceae:	cmp    DWORD PTR [eax-0x47fa3c14],esi
  42ceb4:	push   esi
  42ceb5:	push   ecx
  42ceb6:	sub    BYTE PTR [esi+0x39],0x6c
  42ceba:	or     al,0x22
  42cebc:	inc    esi
  42cebd:	mov    ah,bh
  42cebf:	mov    al,ds:0xd138433c
  42cec4:	pop    esi
  42cec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cec6:	sub    dh,ch
  42cec8:	icebp  
  42cec9:	aam    0xb3
  42cecb:	pop    ds
  42cecc:	inc    esi
  42cecd:	int3   
  42cece:	cdq    
  42cecf:	test   eax,0xf64d96bd
  42ced4:	add    eax,0xfdb3f0d
  42ced9:	mov    ah,0x31
  42cedb:	mov    ebx,0x9796ad6a
  42cee0:	and    eax,0xa041174f
  42cee5:	stc    
  42cee6:	add    al,0x47
  42cee8:	loop   0x42cf3a
  42ceea:	push   edx
  42ceeb:	jl     0x42ced0
  42ceed:	sbb    DWORD PTR [ebx-0x601e5565],edx
  42cef3:	cwde   
  42cef4:	or     al,0x7e
  42cef6:	ja     0x42cf26
  42cef8:	jno    0x42cee3
  42cefa:	int    0x3c
  42cefc:	or     bl,al
  42cefe:	nop
  42ceff:	xor    dh,al
  42cf01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf02:	(bad)  
  42cf03:	xchg   esp,eax
  42cf04:	mov    ecx,0xc1d8ccc2
  42cf09:	push   0xffffffac
  42cf0b:	dec    edi
  42cf0c:	aam    0x7e
  42cf0e:	or     eax,0x990ef8e7
  42cf13:	inc    esp
  42cf14:	and    ecx,ecx
  42cf16:	loop   0x42ced1
  42cf18:	mov    ecx,DWORD PTR [ebx-0x6cbfc763]
  42cf1e:	push   ecx
  42cf1f:	retf   0x418b
  42cf22:	rol    BYTE PTR [edi+0x9],cl
  42cf25:	add    esi,DWORD PTR [ecx]
  42cf27:	mov    edx,0xb34203e1
  42cf2c:	into   
  42cf2d:	iret   
  42cf2e:	mov    ds:0xa76b804,eax
  42cf33:	sub    al,0xc3
  42cf35:	cmp    DWORD PTR [edx],ebp
  42cf37:	push   ebp
  42cf38:	cmc    
  42cf39:	cmp    ah,BYTE PTR [eax-0xc]
  42cf3c:	(bad)  
  42cf3d:	and    al,al
  42cf3f:	mov    dl,0xf7
  42cf41:	add    bl,ch
  42cf43:	sahf   
  42cf44:	inc    edi
  42cf45:	sbb    al,BYTE PTR [ebx+0x783c43c0]
  42cf4b:	cmp    al,0x68
  42cf4d:	lock test al,0x65
  42cf50:	fdiv   DWORD PTR [eax-0x6e52588b]
  42cf56:	push   DWORD PTR [ecx+eiz*2-0xce78401]
  42cf5d:	or     edx,DWORD PTR [eax]
  42cf5f:	xchg   ecx,eax
  42cf60:	push   cs
  42cf61:	xor    ch,BYTE PTR [esi+0x1f09073d]
  42cf67:	push   esp
  42cf68:	out    0xcd,al
  42cf6a:	jnp    0x42cf63
  42cf6c:	xor    bl,al
  42cf6e:	jno    0x42cfa0
  42cf70:	sbb    DWORD PTR [ecx-0xf1eb495],esp
  42cf76:	sub    esi,DWORD PTR [edi+ebp*2+0x44b97c6e]
  42cf7d:	shl    DWORD PTR [eax+0x692a5e1d],1
  42cf83:	pop    ebp
  42cf84:	idiv   edi
  42cf86:	inc    edx
  42cf87:	call   0x2ca7:0x89f3740b
  42cf8e:	mov    DWORD PTR [ebx],ecx
  42cf90:	dec    edx
  42cf91:	out    0xea,eax
  42cf93:	in     al,0xc0
  42cf95:	retf   0xb5ed
  42cf98:	inc    ebp
  42cf99:	rcl    BYTE PTR [esi-0x25],1
  42cf9c:	mov    dh,0x73
  42cf9e:	or     cl,BYTE PTR [ebx-0x4c]
  42cfa1:	or     edi,DWORD PTR ds:0x60f41f25
  42cfa7:	push   ebx
  42cfa8:	(bad)  
  42cfa9:	push   cs
  42cfaa:	jne    0x42cf5f
  42cfac:	push   0x43f54ffc
  42cfb1:	cwde   
  42cfb2:	dec    edx
  42cfb3:	sub    cl,ch
  42cfb5:	sub    al,0x8c
  42cfb7:	into   
  42cfb8:	retf   
  42cfb9:	or     al,0x2e
  42cfbb:	into   
  42cfbc:	ss mov ebx,0x42597d75
  42cfc2:	xchg   edi,eax
  42cfc3:	add    esi,ebp
  42cfc5:	imul   esi,edx,0xffffffcc
  42cfc8:	or     al,0x7d
  42cfca:	cmp    BYTE PTR [edi+ebx*4],dl
  42cfcd:	sti    
  42cfce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfcf:	js     0x42cfda
  42cfd1:	cli    
  42cfd2:	lea    edx,[eax+0x7e380ecf]
  42cfd8:	test   DWORD PTR [edx-0x3749a0d7],eax
  42cfde:	dec    ebp
  42cfdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfe0:	add    al,0xa3
  42cfe2:	les    ecx,FWORD PTR [ecx+ebp*8]
  42cfe5:	dec    esi
  42cfe6:	xchg   DWORD PTR ds:0xc7e245c,ecx
  42cfec:	sbb    al,0x43
  42cfee:	add    al,0x3f
  42cff0:	mov    dl,0x9e
  42cff2:	pop    edi
  42cff3:	inc    ebx
  42cff4:	sar    BYTE PTR [ebx-0x424856fa],0x77
  42cffb:	inc    eax
  42cffc:	into   
  42cffd:	mov    bh,BYTE PTR [eax+esi*2+0x1]
  42d001:	pop    ss
  42d002:	xchg   ebp,eax
  42d003:	lods   al,BYTE PTR ds:[esi]
  42d004:	mov    ebp,0x3131c449
  42d009:	adc    cl,BYTE PTR [ebx+0x10]
  42d00c:	lea    ecx,[ecx]
  42d00e:	sbb    eax,0x70c1ecf2
  42d013:	mov    dl,0xf
  42d015:	push   es
  42d016:	cmp    esi,DWORD PTR [esi+0x23d39983]
  42d01c:	mov    ds:0x7534858c,eax
  42d021:	adc    DWORD PTR [esp+esi*4-0x6c3837a6],esp
  42d028:	mov    ah,0xbc
  42d02a:	add    dl,BYTE PTR [ecx]
  42d02c:	dec    ebx
  42d02d:	fs mov cl,0x16
  42d030:	xor    al,0x26
  42d032:	jecxz  0x42d00d
  42d034:	add    dh,BYTE PTR [eax]
  42d036:	out    dx,al
  42d037:	aaa    
  42d038:	cmp    eax,DWORD PTR [eax+0x5be1f0d8]
  42d03e:	or     BYTE PTR [eax],ah
  42d040:	mov    es,WORD PTR ss:[ebx+0x77]
  42d044:	sbb    DWORD PTR [ebx+0xc],0x1c
  42d048:	or     eax,ebx
  42d04a:	scas   eax,DWORD PTR es:[edi]
  42d04b:	mov    al,0x41
  42d04d:	adc    eax,0x6f7e6508
  42d052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d053:	neg    DWORD PTR [ebp-0x49]
  42d056:	das    
  42d057:	fiadd  DWORD PTR [ebp-0x21]
  42d05a:	and    bh,cl
  42d05c:	dec    eax
  42d05d:	and    BYTE PTR [edx-0x6f],dl
  42d060:	in     eax,dx
  42d061:	mov    ecx,0x92cd775d
  42d066:	pop    eax
  42d067:	push   esi
  42d068:	adc    eax,0x58a4cef0
  42d06d:	sbb    eax,0xadacfd80
  42d072:	sbb    BYTE PTR [edx],bh
  42d074:	adc    eax,0x4d8ab642
  42d079:	in     al,dx
  42d07a:	popf   
  42d07b:	je     0x42d0ca
  42d07d:	clc    
  42d07e:	xchg   BYTE PTR [esi],ah
  42d080:	pop    ds
  42d081:	push   esp
  42d082:	sbb    al,BYTE PTR [ebx]
  42d084:	arpl   WORD PTR [eax-0x4accad27],ax
  42d08a:	mov    dl,0x8a
  42d08c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d08e:	sub    DWORD PTR [ebx-0x75],ecx
  42d091:	mov    esp,0x70fa3547
  42d096:	lods   eax,DWORD PTR ds:[esi]
  42d097:	jmp    0x6c8ddc81
  42d09c:	and    ch,bh
  42d09e:	cmovns ebx,eax
  42d0a1:	jecxz  0x42d03b
  42d0a3:	(bad)  
  42d0a4:	dec    edx
  42d0a5:	inc    DWORD PTR [ebp+0x56]
  42d0a8:	(bad)  
  42d0a9:	stos   BYTE PTR es:[edi],al
  42d0aa:	or     bh,BYTE PTR [ecx-0x80]
  42d0ad:	test   DWORD PTR cs:[ebx],edi
  42d0b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d0b1:	cli    
  42d0b2:	jge    0x42d11a
  42d0b4:	add    BYTE PTR [ecx+0x70e6406c],dh
  42d0ba:	push   cs
  42d0bb:	dec    eax
  42d0bc:	mov    esp,ebp
  42d0be:	jl     0x42d107
  42d0c0:	js     0x42d100
  42d0c2:	mov    eax,ds:0xc3d88608
  42d0c7:	lds    edx,FWORD PTR [ebp+0x5]
  42d0ca:	ds test esp,ecx
  42d0cd:	mov    ?,WORD PTR [edx]
  42d0cf:	add    eax,0x3cfbe97f
  42d0d4:	ss and al,0x4b
  42d0d7:	sar    ah,cl
  42d0d9:	aad    0x6d
  42d0db:	out    0xc,eax
  42d0dd:	push   eax
  42d0de:	mov    ebx,0x95f8aa09
  42d0e3:	ret    0xb87a
  42d0e6:	or     bl,cl
  42d0e8:	outs   dx,DWORD PTR ds:[esi]
  42d0e9:	add    al,0xe6
  42d0eb:	test   BYTE PTR [ecx],al
  42d0ed:	sbb    esi,esp
  42d0ef:	out    0xb9,eax
  42d0f1:	cs pop esp
  42d0f3:	in     al,0x87
  42d0f5:	sbb    al,0xa4
  42d0f7:	imul   ecx,DWORD PTR [edx-0x3a],0xe68d75f9
  42d0fe:	sub    ebp,DWORD PTR [esi]
  42d100:	mov    bh,0xe2
  42d102:	int3   
  42d103:	inc    ebx
  42d104:	fsub   st,st(2)
  42d106:	push   edi
  42d107:	jg     0x42d0cc
  42d109:	push   cs
  42d10a:	jle    0x42d0ba
  42d10c:	mov    dl,0xd5
  42d10e:	mov    edi,0xe9d515cf
  42d113:	sahf   
  42d114:	xor    al,0x40
  42d116:	in     al,0x87
  42d118:	les    edx,FWORD PTR [eax]
  42d11a:	push   ebx
  42d11b:	adc    esi,0x60
  42d11e:	sar    DWORD PTR [ecx],1
  42d120:	scas   eax,DWORD PTR es:[edi]
  42d121:	(bad)  
  42d123:	cmp    esp,DWORD PTR [esi-0x24]
  42d126:	xor    edx,DWORD PTR [esi+0x23]
  42d129:	je     0x42d185
  42d12b:	cmp    eax,0xbf493eeb
  42d130:	jg     0x42d10e
  42d132:	xor    al,0x7a
  42d134:	push   ebx
  42d135:	xchg   edi,eax
  42d136:	adc    ecx,esi
  42d138:	add    al,0xb0
  42d13a:	out    dx,al
  42d13b:	(bad)  
  42d13c:	fcmovnb st,st(6)
  42d13e:	pop    edi
  42d13f:	xchg   esp,eax
  42d140:	std    
  42d141:	scas   eax,DWORD PTR es:[edi]
  42d142:	jmp    0x42d1b0
  42d144:	jno    0x42d0f7
  42d146:	int3   
  42d147:	sbb    al,0xdc
  42d149:	push   ebp
  42d14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d14b:	cli    
  42d14c:	fisub  DWORD PTR [esi]
  42d14e:	fsubrp st(5),st
  42d150:	daa    
  42d151:	mov    edx,0x9bba4b06
  42d156:	icebp  
  42d157:	push   esp
  42d158:	jne    0x42d0e8
  42d15a:	out    0x4c,eax
  42d15c:	jge    0x42d1ad
  42d15e:	mov    al,ds:0x28729a02
  42d163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d164:	or     eax,0x992b826f
  42d169:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d16b:	imul   ebp,DWORD PTR [ebx],0xb
  42d16e:	add    bh,BYTE PTR [edi-0xc590687]
  42d174:	fs mov dh,0x4
  42d177:	pop    ebx
  42d178:	mov    dl,0xde
  42d17a:	mov    al,gs:0x59dad8d1
  42d180:	fisubr DWORD PTR [ecx-0x468417e4]
  42d186:	and    edx,DWORD PTR [edi-0x33]
  42d189:	fs gs std 
  42d18c:	mov    esi,0x55c49fde
  42d191:	add    ch,bl
  42d193:	sbb    ch,0x5f
  42d196:	mov    cl,0x37
  42d198:	lahf   
  42d199:	push   es
  42d19a:	adc    cl,bl
  42d19c:	iret   
  42d19d:	sub    DWORD PTR [esi+eax*8+0x44],ebx
  42d1a1:	out    dx,eax
  42d1a2:	inc    edx
  42d1a3:	shl    al,cl
  42d1a5:	pop    eax
  42d1a6:	push   edi
  42d1a7:	dec    esi
  42d1a8:	jnp    0x42d220
  42d1aa:	daa    
  42d1ab:	bound  ebx,QWORD PTR [ebp+0x4d]
  42d1ae:	in     al,dx
  42d1af:	std    
  42d1b0:	xchg   esi,eax
  42d1b1:	sbb    dl,dl
  42d1b3:	pop    edx
  42d1b4:	adc    ebx,ebp
  42d1b6:	stos   DWORD PTR es:[edi],eax
  42d1b7:	stc    
  42d1b8:	mov    eax,0xd1297f39
  42d1bd:	(bad)  
  42d1be:	fneni(8087 only) 
  42d1c0:	sub    bl,ah
  42d1c2:	add    DWORD PTR [ebp-0x11eae8b0],esi
  42d1c8:	inc    ebp
  42d1c9:	xchg   ebx,eax
  42d1ca:	adc    al,0xf5
  42d1cc:	shl    BYTE PTR [eax+0x62],0x35
  42d1d0:	xor    al,0xae
  42d1d2:	mov    bh,0x42
  42d1d4:	ins    DWORD PTR es:[edi],dx
  42d1d5:	aaa    
  42d1d6:	ror    BYTE PTR [ebx-0x6],1
  42d1d9:	push   ds
  42d1da:	call   0xcf5e0239
  42d1df:	cdq    
  42d1e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1e1:	dec    edx
  42d1e2:	xlat   BYTE PTR ds:[ebx]
  42d1e3:	push   ecx
  42d1e4:	jecxz  0x42d1a3
  42d1e6:	rcl    BYTE PTR [eax],cl
  42d1e8:	retf   
  42d1e9:	cld    
  42d1ea:	ror    bh,1
  42d1ec:	fbld   TBYTE PTR [edx+edx*1-0x20]
  42d1f0:	jmp    0x42d253
  42d1f2:	aad    0x59
  42d1f4:	jae    0x42d182
  42d1f6:	out    dx,eax
  42d1f7:	mov    WORD PTR [eax-0x1f],gs
  42d1fa:	cld    
  42d1fb:	lahf   
  42d1fc:	xchg   ebp,eax
  42d1fd:	ret    0xf4fc
  42d200:	jmp    0xd3200a97
  42d205:	cmp    bl,BYTE PTR ds:0xa631843e
  42d20b:	inc    ebx
  42d20c:	pop    ds
  42d20d:	(bad)  
  42d20e:	outs   dx,BYTE PTR ds:[esi]
  42d20f:	cmp    bl,BYTE PTR [eax]
  42d211:	mov    al,ds:0x24dbf797
  42d216:	(bad)  
  42d217:	mov    eax,0xde033cf4
  42d21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d21d:	(bad)  
  42d21e:	mov    edx,DWORD PTR [edx]
  42d220:	mov    esi,0xf7c5399d
  42d225:	idiv   BYTE PTR [esi-0x40]
  42d228:	ret    
  42d229:	adc    esi,DWORD PTR [ebp-0x1c]
  42d22c:	aaa    
  42d22d:	sbb    ecx,edi
  42d22f:	sub    DWORD PTR [eax],ebx
  42d231:	push   edi
  42d232:	lea    eax,[edi+ebp*2]
  42d235:	jp     0x42d1ec
  42d237:	mov    WORD PTR [ebx+0x5b],es
  42d23a:	fdivrp st(5),st
  42d23c:	pop    edi
  42d23d:	mov    BYTE PTR [esi-0x51e62dbd],dl
  42d243:	retf   0x18c4
  42d246:	imul   BYTE PTR [ecx+0x2e]
  42d249:	push   cs
  42d24a:	test   al,0x89
  42d24c:	out    dx,al
  42d24d:	mov    ah,0x8b
  42d24f:	ja     0x42d21b
  42d251:	fdiv   DWORD PTR [edx-0x23]
  42d254:	push   esi
  42d255:	sbb    al,BYTE PTR [eax]
  42d257:	enter  0x18b1,0xdc
  42d25b:	cmp    eax,0x3c3c5879
  42d260:	pop    ecx
  42d261:	loopne 0x42d2be
  42d263:	fxch   st(0)
  42d265:	push   DWORD PTR [ebx]
  42d267:	pusha  
  42d268:	lahf   
  42d269:	ret    
  42d26a:	ror    DWORD PTR [ecx-0x1bbe822e],cl
  42d270:	mov    al,ds:0x573d695c
  42d275:	aam    0x8
  42d277:	ret    
  42d278:	test   dh,bl
  42d27a:	push   ecx
  42d27b:	lock imul eax,DWORD PTR [edx+ecx*1-0x11],0xe02548b
  42d284:	mov    ah,0x61
  42d286:	dec    eax
  42d287:	inc    edi
  42d288:	mov    eax,ds:0xa544a78a
  42d28d:	xor    al,0x39
  42d28f:	jp     0x42d219
  42d291:	and    BYTE PTR [ebx-0x513d8804],al
  42d297:	loop   0x42d249
  42d299:	popa   
  42d29a:	pop    edx
  42d29b:	xlat   BYTE PTR ds:[ebx]
  42d29c:	mov    ch,0x3c
  42d29e:	sti    
  42d29f:	(bad)  
  42d2a0:	test   al,0x32
  42d2a2:	pop    esp
  42d2a3:	sub    dh,BYTE PTR [eax+0x39]
  42d2a6:	aas    
  42d2a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2a8:	ror    BYTE PTR [esi+edx*4-0x4c],cl
  42d2ac:	xchg   DWORD PTR [eax-0x6],edi
  42d2af:	mov    dl,0x24
  42d2b1:	loopne 0x42d32e
  42d2b3:	out    0xd7,eax
  42d2b5:	sbb    DWORD PTR [ebp-0x6f],edx
  42d2b8:	inc    edi
  42d2b9:	inc    BYTE PTR [edi-0x40]
  42d2bc:	cmp    dl,bl
  42d2be:	cmp    eax,DWORD PTR [ecx]
  42d2c0:	mov    WORD PTR [eax+0x35],gs
  42d2c3:	dec    ebp
  42d2c4:	pop    ebp
  42d2c5:	(bad)  
  42d2c6:	jg     0x42d2c1
  42d2c8:	or     ah,0xcc
  42d2cb:	fwait
  42d2cc:	test   bh,ah
  42d2ce:	inc    ecx
  42d2cf:	add    ebx,DWORD PTR [esi-0x41]
  42d2d2:	ror    DWORD PTR [ecx-0x3e],0x5d
  42d2d6:	pop    edx
  42d2d7:	adc    dl,al
  42d2d9:	cmp    BYTE PTR [ebx+0x1e],dh
  42d2dc:	mov    cl,BYTE PTR [esi]
  42d2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2df:	xor    dl,ch
  42d2e1:	sbb    eax,0x2496d2bf
  42d2e6:	push   ebx
  42d2e7:	xchg   ebp,eax
  42d2e8:	and    ah,ah
  42d2ea:	inc    ebp
  42d2eb:	jle    0x42d2ab
  42d2ed:	das    
  42d2ee:	jne    0x42d2ad
  42d2f0:	cmp    BYTE PTR [ebx+0xf],dh
  42d2f3:	xor    al,0x70
  42d2f5:	push   edi
  42d2f6:	mov    edi,0x37b0e45f
  42d2fb:	push   es
  42d2fc:	mov    WORD PTR [esi-0x1a344b88],?
  42d302:	popa   
  42d303:	not    BYTE PTR ds:0xe49c0237
  42d309:	lock mov fs,WORD PTR [edi+0x2f]
  42d30d:	iret   
  42d30e:	pop    esi
  42d30f:	adc    esi,ebp
  42d311:	xor    DWORD PTR [edx+0x46458ec5],ecx
  42d317:	cmp    al,0xbe
  42d319:	sbb    al,BYTE PTR [eax+0x5cc92793]
  42d31f:	pop    edi
  42d320:	test   DWORD PTR [ebx-0x22],edx
  42d323:	es lahf 
  42d325:	cwde   
  42d326:	sahf   
  42d327:	js     0x42d31e
  42d329:	mov    ss,ecx
  42d32b:	ret    
  42d32c:	push   esi
  42d32d:	xor    DWORD PTR [esi],ebx
  42d32f:	jmp    0xc4a0:0x6f20910c
  42d336:	dec    edi
  42d337:	jmp    0x42d325
  42d339:	sub    ch,BYTE PTR [ecx+0x2c]
  42d33c:	mov    fs,edi
  42d33e:	xor    DWORD PTR ds:0xf1aa4330,esi
  42d344:	adc    edi,0x5b
  42d347:	add    al,0x16
  42d349:	fidiv  WORD PTR [ecx+0x63]
  42d34c:	retf   0xd8e
  42d34f:	clc    
  42d350:	popf   
  42d351:	out    dx,eax
  42d352:	jne    0x42d3cf
  42d354:	or     ecx,0xffffffe6
  42d357:	retf   
  42d358:	jge    0x42d354
  42d35a:	fiadd  DWORD PTR [ebx+esi*1+0x52]
  42d35e:	clc    
  42d35f:	adc    DWORD PTR [ebx],ecx
  42d361:	test   BYTE PTR [edi+0x35],ah
  42d364:	and    ebx,0x14
  42d367:	sbb    al,0x73
  42d369:	adc    edi,ecx
  42d36b:	es iret 
  42d36d:	not    esp
  42d36f:	mov    ds:0xec4a5198,eax
  42d374:	inc    ebp
  42d375:	outs   dx,BYTE PTR ds:[esi]
  42d376:	and    ebx,DWORD PTR [esi-0x11]
  42d379:	xor    al,0x1
  42d37b:	test   eax,0xf9b816a9
  42d380:	rcl    DWORD PTR [ebp+0x1991da84],cl
  42d386:	dec    ecx
  42d387:	sub    eax,0xbb4f0f7f
  42d38c:	enter  0x46d3,0xb6
  42d390:	out    0x38,al
  42d392:	sub    al,0xf6
  42d394:	(bad)  
  42d395:	jmp    0x45bc:0x831edead
  42d39c:	xor    DWORD PTR [esi-0x4b4953a7],ebx
  42d3a2:	and    ch,al
  42d3a4:	adc    dl,BYTE PTR [ebx]
  42d3a6:	jo     0x42d3d2
  42d3a8:	mov    ds:0x44f36b5d,eax
  42d3ad:	(bad)  
  42d3ae:	pop    esp
  42d3af:	mov    bl,0x69
  42d3b1:	pop    esi
  42d3b2:	fnsave ds:0xd003f387
  42d3b8:	jno    0x42d39c
  42d3ba:	xchg   edi,eax
  42d3bb:	xchg   esp,eax
  42d3bc:	(bad)  
  42d3bd:	cdq    
  42d3be:	inc    edi
  42d3bf:	adc    BYTE PTR [ecx+0x48],dh
  42d3c2:	push   ecx
  42d3c3:	xchg   ebp,eax
  42d3c4:	mov    eax,ds:0xcb767c79
  42d3c9:	out    0x6a,eax
  42d3cb:	sbb    al,0x8e
  42d3cd:	add    BYTE PTR [edi+0x2c976506],dl
  42d3d3:	push   esp
  42d3d4:	(bad)  
  42d3d5:	sbb    DWORD PTR [ebx+0x7d],esi
  42d3d8:	iret   
  42d3d9:	dec    edx
  42d3da:	and    DWORD PTR [ecx+ebp*2+0x4d],edi
  42d3de:	sub    cl,dh
  42d3e0:	pop    es
  42d3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d3e2:	pop    ebp
  42d3e3:	mov    al,ds:0xf98c6ce2
  42d3e8:	jno    0x42d384
  42d3ea:	xchg   ebp,eax
  42d3eb:	mov    eax,0x9c75d721
  42d3f0:	popf   
  42d3f1:	xlat   BYTE PTR ds:[ebx]
  42d3f2:	jmp    0xc57d:0x9ca2e766
  42d3f9:	sub    al,0xcb
  42d3fb:	inc    eax
  42d3fc:	sub    al,BYTE PTR [ebp+0x1c]
  42d3ff:	mov    dl,0x8e
  42d401:	and    DWORD PTR [ecx-0x22],edi
  42d404:	or     edx,DWORD PTR [edx+0x6fd4b0b7]
  42d40a:	jae    0x42d38c
  42d40c:	fcomp  QWORD PTR [ebp+0x4d]
  42d40f:	in     eax,0x49
  42d411:	ins    BYTE PTR es:[edi],dx
  42d412:	jbe    0x42d472
  42d414:	std    
  42d415:	mov    bl,0xe7
  42d417:	cmc    
  42d418:	test   eax,0x5c61a030
  42d41d:	or     al,0x8b
  42d41f:	cdq    
  42d420:	int    0x7f
  42d422:	neg    edx
  42d424:	jmp    DWORD PTR [edx]
  42d426:	dec    ebx
  42d427:	fcomp  DWORD PTR [esi]
  42d429:	mov    fs,WORD PTR [eax]
  42d42b:	ret    0x99a1
  42d42e:	ret    
  42d42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d430:	mov    ebx,0x87e8ce51
  42d435:	jne    0x42d422
  42d437:	jp     0x42d490
  42d439:	mov    edx,0x1dc91cfa
  42d43e:	loope  0x42d3e6
  42d440:	popf   
  42d441:	mov    ds,WORD PTR [ebx-0x44cebbd3]
  42d447:	mov    ecx,0x64666e26
  42d44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d44d:	jnp    0x42d4a7
  42d44f:	mov    bl,0x3c
  42d451:	mov    DWORD PTR [esi+ebp*2],edx
  42d454:	mul    BYTE PTR ds:0xf04a4cc6
  42d45a:	pop    esi
  42d45b:	mov    BYTE PTR [ecx-0x2c],dl
  42d45e:	clc    
  42d45f:	sub    BYTE PTR [edx-0x272c863],0x98
  42d466:	(bad)  
  42d467:	mov    ah,0x44
  42d469:	cmp    bl,ch
  42d46b:	and    BYTE PTR [eax-0x47],ah
  42d46e:	cld    
  42d46f:	mov    ah,0x34
  42d471:	(bad)  
  42d472:	(bad)  
  42d474:	push   edx
  42d475:	or     al,0x10
  42d477:	(bad)  
  42d478:	leave  
  42d479:	scas   eax,DWORD PTR es:[edi]
  42d47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d47b:	out    0x3e,eax
  42d47d:	cwde   
  42d47e:	adc    DWORD PTR [ecx-0x482829aa],0x27
  42d485:	gs mov eax,0xb810f5d4
  42d48b:	jge    0x42d4e3
  42d48d:	mov    ah,0x91
  42d48f:	mov    ch,0xba
  42d491:	mov    ah,0x3d
  42d493:	lods   eax,DWORD PTR gs:[esi]
  42d495:	hlt    
  42d496:	loop   0x42d4ac
  42d498:	push   esi
  42d499:	jae    0x42d43d
  42d49b:	jp     0x42d433
  42d49d:	jmp    0x7cb7:0x5ae46876
  42d4a4:	inc    ebx
  42d4a5:	icebp  
  42d4a6:	xor    DWORD PTR [ebp+0x420f25bc],ebx
  42d4ac:	icebp  
  42d4ad:	jecxz  0x42d4a5
  42d4af:	mov    ecx,0xa950f748
  42d4b4:	rol    BYTE PTR [esp+edx*8],cl
  42d4b7:	xor    DWORD PTR [ebx+0x3d47c959],esp
  42d4bd:	fbld   TBYTE PTR [ebx-0x33c5bb7c]
  42d4c3:	int    0xd9
  42d4c5:	bnd jle 0x42d4b5
  42d4c8:	adc    al,0x7b
  42d4ca:	(bad)  
  42d4cb:	retf   
  42d4cc:	aam    0xf
  42d4ce:	cmc    
  42d4cf:	cmp    dl,BYTE PTR [edi]
  42d4d1:	(bad)  
  42d4d2:	aam    0x7a
  42d4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4d5:	bound  ebx,QWORD PTR [edi+0x320aa762]
  42d4db:	sbb    eax,0xb920677b
  42d4e0:	xchg   esp,eax
  42d4e1:	sti    
  42d4e2:	mov    ch,0xcb
  42d4e4:	repz jle 0x42d4be
  42d4e7:	sub    bl,BYTE PTR ds:0xc7b6f855
  42d4ed:	mov    edi,0xd2cb900c
  42d4f2:	lahf   
  42d4f3:	jg     0x42d48c
  42d4f5:	xlat   BYTE PTR ds:[ebx]
  42d4f6:	lods   eax,DWORD PTR ds:[esi]
  42d4f7:	ins    BYTE PTR es:[edi],dx
  42d4f8:	sbb    eax,0xc3a63f16
  42d4fd:	cli    
  42d4fe:	shr    ah,cl
  42d500:	aas    
  42d501:	sub    ah,BYTE PTR [edi]
  42d503:	dec    ebx
  42d504:	mov    ebx,DWORD PTR [esp+ecx*8]
  42d507:	xor    DWORD PTR [eax+ebp*4+0x2f741ed3],ebx
  42d50e:	push   eax
  42d50f:	mov    dl,BYTE PTR [eax-0x52]
  42d512:	mov    BYTE PTR [ebx-0x4e395ade],al
  42d518:	aas    
  42d519:	inc    ecx
  42d51a:	jg     0x42d55f
  42d51c:	daa    
  42d51d:	jp     0x42d4c2
  42d51f:	add    eax,DWORD PTR [edi]
  42d521:	clc    
  42d522:	mov    ebx,0xbcf49901
  42d527:	or     eax,0x429a4805
  42d52c:	mov    bl,0x96
  42d52e:	std    
  42d52f:	inc    eax
  42d530:	retf   
  42d531:	jo     0x42d53f
  42d533:	daa    
  42d534:	pop    ebx
  42d535:	mov    eax,ds:0xc63e12eb
  42d53a:	mov    eax,0xdc0b9222
  42d53f:	loope  0x42d51c
  42d541:	daa    
  42d542:	inc    edi
  42d543:	mov    bh,0xc7
  42d545:	icebp  
  42d546:	push   ss
  42d547:	cmp    DWORD PTR [ecx+0x5fa17f18],eax
  42d54d:	xor    eax,0x25783662
  42d552:	jl     0x42d538
  42d554:	adc    eax,DWORD PTR [edi]
  42d556:	ss mov dh,0xb1
  42d559:	scas   eax,DWORD PTR es:[edi]
  42d55a:	push   ebp
  42d55b:	xor    al,0xce
  42d55d:	add    DWORD PTR [ecx+0x572ea295],0x51
  42d564:	pop    ds
  42d565:	mov    esi,0x8e2b899b
  42d56a:	jne    0x42d57c
  42d56c:	inc    eax
  42d56d:	lods   al,BYTE PTR ds:[esi]
  42d56e:	test   DWORD PTR [edx],edx
  42d570:	xlat   BYTE PTR ds:[ebx]
  42d571:	jge    0x42d58b
  42d573:	inc    eax
  42d574:	rcr    BYTE PTR [ebx],1
  42d576:	jecxz  0x42d5a9
  42d578:	aaa    
  42d579:	jno    0x42d596
  42d57b:	pop    eax
  42d57c:	push   edx
  42d57d:	push   0xc
  42d57f:	rcl    DWORD PTR [eax-0x7286ab8f],1
  42d585:	add    DWORD PTR [esi],esp
  42d587:	pop    edi
  42d588:	int    0x1c
  42d58a:	add    eax,0x32451226
  42d58f:	or     BYTE PTR [ebx-0x475f6bc8],bl
  42d595:	sbb    bl,BYTE PTR [edx+0x6d]
  42d598:	test   eax,0xfeda385e
  42d59d:	or     ch,BYTE PTR [ebx-0x16]
  42d5a0:	fsub   st(0),st
  42d5a2:	dec    BYTE PTR [edi+0x22]
  42d5a5:	dec    esp
  42d5a6:	jbe    0x42d55e
  42d5a8:	mov    ecx,0x8f317074
  42d5ad:	add    dl,dl
  42d5af:	test   al,0x94
  42d5b1:	sub    bh,bh
  42d5b3:	pushf  
  42d5b4:	sahf   
  42d5b5:	jecxz  0x42d573
  42d5b7:	call   0xb422:0xe023e6b1
  42d5be:	(bad)  
  42d5c0:	jecxz  0x42d5d3
  42d5c2:	dec    ebx
  42d5c3:	loopne 0x42d5c6
  42d5c5:	add    DWORD PTR [ebp+edi*2+0x1a],eax
  42d5c9:	imul   eax,DWORD PTR [edx-0xe],0x9b0eb978
  42d5d0:	stc    
  42d5d1:	push   ebp
  42d5d2:	popf   
  42d5d3:	jp     0x42d5cf
  42d5d5:	cmp    esp,DWORD PTR [ebx]
  42d5d7:	jnp    0x42d572
  42d5d9:	mov    bh,al
  42d5db:	test   dh,0xb3
  42d5de:	rol    DWORD PTR [edi+esi*8+0x4be2528c],cl
  42d5e5:	xchg   esi,eax
  42d5e6:	dec    edi
  42d5e7:	mov    ebx,0xf63622b2
  42d5ec:	jno    0x42d61c
  42d5ee:	xchg   esi,eax
  42d5ef:	xor    edx,ebx
  42d5f1:	ins    BYTE PTR es:[edi],dx
  42d5f2:	mov    al,ds:0x32f8f800
  42d5f7:	aaa    
  42d5f8:	into   
  42d5f9:	xchg   BYTE PTR [edx+0x4e0205b0],al
  42d5ff:	sar    BYTE PTR [eax-0x32efaa4c],0x12
  42d606:	test   eax,0x58290251
  42d60b:	lds    ebp,FWORD PTR [bp-0x69]
  42d60f:	jb     0x42d659
  42d611:	cli    
  42d612:	ret    
  42d613:	addr16 pop es
  42d615:	push   ss
  42d616:	add    al,0x5
  42d618:	and    eax,0x91241ace
  42d61d:	mov    dh,0x14
  42d61f:	mov    cs,WORD PTR [edx+0x75]
  42d622:	das    
  42d623:	repz xchg ebx,eax
  42d625:	jl     0x42d5fc
  42d627:	and    DWORD PTR [ebx],ecx
  42d629:	loop   0x42d67d
  42d62b:	dec    esi
  42d62c:	adc    al,0xb0
  42d62e:	cmp    cl,ch
  42d630:	ins    DWORD PTR es:[edi],dx
  42d631:	sbb    al,0x9
  42d633:	adc    al,0x8a
  42d635:	fild   QWORD PTR [edi]
  42d637:	cmp    eax,esi
  42d639:	add    al,0x39
  42d63b:	dec    esp
  42d63c:	test   al,0xe0
  42d63e:	push   0xffffffe6
  42d640:	retf   0xf728
  42d643:	mov    BYTE PTR [eax],ch
  42d645:	dec    esp
  42d646:	les    ebx,FWORD PTR [eax]
  42d648:	clc    
  42d649:	rol    esp,1
  42d64b:	in     al,dx
  42d64c:	xor    esp,ecx
  42d64e:	test   BYTE PTR [eax-0x6d],0xfc
  42d652:	rcr    DWORD PTR [edi+edx*2],1
  42d655:	mov    DWORD PTR [ebx+0x70b78ce8],edx
  42d65b:	ds jbe 0x42d6db
  42d65e:	lds    edx,FWORD PTR gs:[ebx]
  42d661:	scas   al,BYTE PTR es:[edi]
  42d662:	xchg   ebx,eax
  42d663:	and    bl,ah
  42d665:	mov    DWORD PTR fs:[ecx],edi
  42d668:	shl    dl,cl
  42d66a:	aad    0x47
  42d66c:	dec    ecx
  42d66d:	sub    eax,0x261c163
  42d672:	repnz inc esp
  42d674:	mov    eax,0x5ceb6065
  42d679:	sub    ch,BYTE PTR [eax-0x4a]
  42d67c:	cld    
  42d67d:	bound  esp,QWORD PTR [ebx]
  42d67f:	retf   0x47de
  42d682:	push   eax
  42d683:	or     edx,DWORD PTR [ebp-0x6b5bd931]
  42d689:	(bad)  
  42d68a:	mov    bl,0xec
  42d68c:	lods   eax,DWORD PTR ds:[esi]
  42d68d:	dec    ebx
  42d68e:	imul   esp,DWORD PTR ds:0x9a719c4b,0xc02bf185
  42d698:	ret    
  42d699:	add    esp,ebp
  42d69b:	imul   esi,DWORD PTR [ecx],0x67b7b69a
  42d6a1:	pop    ebp
  42d6a2:	je     0x42d6dc
  42d6a4:	dec    eax
  42d6a5:	sbb    DWORD PTR [edx-0x6e61cd0],esi
  42d6ab:	adc    bl,BYTE PTR [esi+0x21]
  42d6ae:	push   edx
  42d6af:	int3   
  42d6b0:	outs   dx,BYTE PTR ds:[esi]
  42d6b1:	addr16 aam 0x9
  42d6b4:	retf   0x30dd
  42d6b7:	sbb    esp,DWORD PTR [esi+0x3be02e90]
  42d6bd:	and    eax,0x6857c505
  42d6c2:	add    eax,0xa6365e5e
  42d6c7:	adc    ebx,edx
  42d6c9:	in     eax,dx
  42d6ca:	mov    eax,0xb684ee83
  42d6cf:	sbb    al,0x87
  42d6d1:	sbb    ecx,edx
  42d6d3:	and    al,0xdc
  42d6d5:	jp     0x42d697
  42d6d7:	jnp    0x42d669
  42d6d9:	and    ah,BYTE PTR [eax-0x866144e]
  42d6df:	mov    bl,BYTE PTR [edx+0x28619d99]
  42d6e5:	rcl    edi,0x2c
  42d6e8:	or     al,0x1f
  42d6ea:	or     ebx,esi
  42d6ec:	push   eax
  42d6ed:	out    0xa5,eax
  42d6ef:	or     eax,0x236f29a8
  42d6f4:	loope  0x42d694
  42d6f6:	popa   
  42d6f7:	pop    ds
  42d6f8:	mov    DWORD PTR [ecx],eax
  42d6fa:	mov    ds:0xe7cce54d,al
  42d6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d700:	push   es
  42d701:	das    
  42d702:	data16 cmp al,0x2
  42d705:	jle    0x42d761
  42d707:	sti    
  42d708:	add    eax,0x408d863c
  42d70d:	cmc    
  42d70e:	xchg   esi,eax
  42d70f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42d711:	mov    ch,ah
  42d713:	dec    ebx
  42d714:	add    eax,0xb3a2f4c2
  42d719:	call   0xc0eb23f5
  42d71e:	idiv   DWORD PTR [edi-0x5a]
  42d721:	gs mov ah,0xb3
  42d724:	inc    edx
  42d725:	inc    edi
  42d726:	or     BYTE PTR [edx+0x1c7a91c4],dl
  42d72c:	outs   dx,BYTE PTR ds:[esi]
  42d72d:	scas   al,BYTE PTR es:[edi]
  42d72e:	jno    0x42d6ce
  42d730:	xor    al,0x68
  42d732:	push   ss
  42d733:	push   esp
  42d734:	pusha  
  42d735:	cdq    
  42d736:	test   BYTE PTR [edi-0x3f],dh
  42d739:	sub    DWORD PTR [ecx-0x31],edx
  42d73c:	push   0xffffffde
  42d73e:	leave  
  42d73f:	aad    0x30
  42d741:	mov    ds:0xee927662,eax
  42d746:	and    ebx,esp
  42d748:	mov    esi,0x5724be01
  42d74d:	adc    eax,0x88ff1ef5
  42d752:	xchg   ecx,eax
  42d753:	mov    al,fs:0x4f371284
  42d759:	test   WORD PTR [eax],bp
  42d75c:	ins    DWORD PTR es:[edi],dx
  42d75d:	and    BYTE PTR [edx-0x6b],ah
  42d760:	and    BYTE PTR [edx],dh
  42d762:	ss pop edi
  42d764:	stc    
  42d765:	dec    ebp
  42d766:	xlat   BYTE PTR ds:[ebx]
  42d767:	aad    0x5b
  42d769:	cmp    eax,0x230b7770
  42d76e:	dec    ecx
  42d76f:	dec    edi
  42d770:	cmc    
  42d771:	loope  0x42d7c4
  42d773:	cs popa 
  42d775:	jns    0x42d7d2
  42d777:	das    
  42d778:	rcr    BYTE PTR [ecx-0x5da364ea],1
  42d77e:	adc    ah,BYTE PTR [ebp-0x11]
  42d781:	shr    ch,0x8b
  42d784:	jl     0x42d78f
  42d786:	pop    ss
  42d787:	pop    eax
  42d788:	enter  0x4020,0xd7
  42d78c:	arpl   WORD PTR cs:[esi+0x4a2ece78],sp
  42d793:	mov    eax,esp
  42d795:	stc    
  42d796:	lahf   
  42d797:	sub    DWORD PTR [eax-0x4],ebp
  42d79a:	dec    esp
  42d79b:	fsub   DWORD PTR [ecx]
  42d79d:	pop    esi
  42d79e:	stos   BYTE PTR es:[edi],al
  42d79f:	ss sub eax,0xb0ba8c8e
  42d7a5:	rcl    BYTE PTR [esi+ecx*2],cl
  42d7a8:	out    dx,eax
  42d7a9:	test   DWORD PTR [edx+eax*4],edx
  42d7ac:	xchg   dl,ah
  42d7ae:	cmp    eax,0xb5c99b49
  42d7b3:	loop   0x42d796
  42d7b5:	lock xor DWORD PTR [eax-0x3c],edx
  42d7b9:	ins    DWORD PTR es:[edi],dx
  42d7ba:	cmp    DWORD PTR [ebp+0x4],ecx
  42d7bd:	data16 sbb BYTE PTR [ebx-0x61],dh
  42d7c1:	or     ah,BYTE PTR [ebp+0x16]
  42d7c4:	out    dx,al
  42d7c5:	cmp    ah,dh
  42d7c7:	adc    DWORD PTR [ebx-0x54],ebx
  42d7ca:	in     al,0x60
  42d7cc:	aad    0xac
  42d7ce:	mov    ah,0xf
  42d7d0:	cmc    
  42d7d1:	push   cs
  42d7d2:	jmp    0x83bf:0x331f02c6
  42d7d9:	jmp    0x3d5f0830
  42d7de:	ret    
  42d7df:	aaa    
  42d7e0:	inc    esi
  42d7e1:	jbe    0x42d7b6
  42d7e3:	push   esi
  42d7e4:	mov    bl,BYTE PTR [edi+0x6]
  42d7e7:	mov    al,ds:0x2eeb04d5
  42d7ec:	mov    ?,WORD PTR [ebx-0x6d]
  42d7ef:	mov    WORD PTR [edi],es
  42d7f1:	ins    BYTE PTR es:[edi],dx
  42d7f2:	sbb    DWORD PTR [esp+edi*1+0x53b3466a],ecx
  42d7f9:	xor    cl,BYTE PTR [ebp+esi*2-0x71120995]
  42d800:	ja     0x42d862
  42d802:	dec    esi
  42d803:	mov    esi,0xa45f3340
  42d808:	fadd   DWORD PTR [ebx]
  42d80a:	int3   
  42d80b:	call   0x1b755f45
  42d810:	pushf  
  42d811:	sub    ah,BYTE PTR [ebx-0x61]
  42d814:	or     edi,DWORD PTR [ecx+0x4371e5f]
  42d81a:	cmp    ebx,ebx
  42d81c:	sbb    DWORD PTR [esi+0x271241db],edx
  42d822:	std    
  42d823:	test   eax,0x42100f94
  42d828:	aas    
  42d829:	mov    edi,0x4cbd023d
  42d82e:	sub    eax,0x4fe18b4f
  42d833:	mov    ds:0xa150c4d5,eax
  42d838:	loop   0x42d7c2
  42d83a:	mov    eax,0xba233a95
  42d83f:	div    BYTE PTR [ecx-0x23]
  42d842:	rcl    DWORD PTR [edi],1
  42d844:	in     al,0x93
  42d846:	push   es
  42d847:	sub    DWORD PTR [esi+0x28],ebp
  42d84a:	and    DWORD PTR [edx+edx*1],esi
  42d84d:	or     eax,0xeaab9b13
  42d852:	scas   eax,DWORD PTR es:[edi]
  42d853:	jl     0x42d83b
  42d855:	call   FWORD PTR [esi+eax*1-0x292d0e36]
  42d85c:	pop    esi
  42d85d:	dec    esi
  42d85e:	xchg   esp,eax
  42d85f:	stos   BYTE PTR es:[edi],al
  42d860:	pop    ds
  42d861:	jne    0x42d8cb
  42d863:	cld    
  42d864:	bnd call 0x166e3f2d
  42d86a:	int    0x78
  42d86c:	retf   
  42d86d:	cwde   
  42d86e:	es loop 0x42d818
  42d871:	mov    ah,0x23
  42d873:	adc    DWORD PTR [ebx-0x4],esp
  42d876:	mov    bh,0x2a
  42d878:	xchg   ecx,eax
  42d879:	pop    ds
  42d87a:	ins    DWORD PTR es:[edi],dx
  42d87b:	mov    edx,0x26c4e73a
  42d880:	retf   
  42d881:	loop   0x42d86a
  42d883:	shr    BYTE PTR [ecx-0x151f04bf],1
  42d889:	outs   dx,DWORD PTR ds:[esi]
  42d88a:	cmc    
  42d88b:	sbb    ebx,esp
  42d88d:	sahf   
  42d88e:	adc    ecx,0xfffffff5
  42d891:	retf   
  42d892:	dec    BYTE PTR [edx-0x44]
  42d895:	in     al,dx
  42d896:	mov    cl,0x19
  42d898:	popf   
  42d899:	mov    ebp,0xe0c066e1
  42d89e:	inc    edx
  42d89f:	addr16 in al,0x1d
  42d8a2:	mov    al,0xb8
  42d8a4:	jl     0x42d91b
  42d8a6:	pop    esi
  42d8a7:	mov    ch,0xce
  42d8a9:	enter  0xb9e,0xde
  42d8ad:	mov    al,ds:0x41896d3f
  42d8b2:	cmp    ecx,ebx
  42d8b4:	pop    ds
  42d8b5:	dec    esi
  42d8b6:	pop    es
  42d8b7:	push   0x15
  42d8b9:	leave  
  42d8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d8bb:	pop    edx
  42d8bc:	bound  esi,QWORD PTR ds:0x18e2b717
  42d8c2:	inc    edx
  42d8c3:	push   esi
  42d8c4:	or     dh,BYTE PTR [ebp+0x9]
  42d8c7:	pop    ebp
  42d8c8:	sub    BYTE PTR [edi+0x3],bl
  42d8cb:	test   edi,eax
  42d8cd:	fimul  DWORD PTR [edx+0x544572d3]
  42d8d3:	or     ebx,ebp
  42d8d5:	(bad)  
  42d8d6:	out    0x46,al
  42d8d8:	mov    eax,0xba1f1f91
  42d8dd:	mov    esi,0x75e45d4a
  42d8e2:	rol    BYTE PTR [esi],cl
  42d8e4:	pop    edi
  42d8e5:	push   ss
  42d8e6:	fbld   TBYTE PTR [ecx+0x27]
  42d8e9:	aad    0x95
  42d8eb:	scas   al,BYTE PTR es:[edi]
  42d8ec:	ja     0x42d878
  42d8ee:	mov    dl,0x2f
  42d8f0:	test   DWORD PTR [ecx+0x47226c0],edx
  42d8f6:	(bad)  
  42d8f8:	dec    eax
  42d8f9:	retf   
  42d8fa:	jge    0x42d934
  42d8fc:	hlt    
  42d8fd:	sub    DWORD PTR [edx],0x55
  42d900:	mov    bl,0xd3
  42d902:	(bad)  
  42d903:	imul   ecx,DWORD PTR [ebx-0x1287a1c5],0xd62246e1
  42d90d:	xor    eax,0x85d9d86
  42d912:	scas   al,BYTE PTR es:[edi]
  42d913:	cwde   
  42d914:	addr16 dec ecx
  42d916:	aas    
  42d917:	pop    esp
  42d918:	sar    esi,0x45
  42d91b:	sub    eax,0x127f1a19
  42d920:	arpl   WORD PTR [ecx-0x1e],ax
  42d923:	imul   ebp,DWORD PTR [ebp-0x5f],0x12
  42d927:	cmp    eax,DWORD PTR [edi-0x7]
  42d92a:	iret   
  42d92b:	fucom  st(1)
  42d92d:	outs   dx,BYTE PTR ds:[esi]
  42d92e:	icebp  
  42d92f:	mov    BYTE PTR [ecx],ch
  42d931:	xchg   esp,eax
  42d932:	sub    edi,DWORD PTR [edx-0x20307847]
  42d938:	(bad)  
  42d939:	mov    eax,ds:0xba6f8f8c
  42d93e:	test   al,0x83
  42d940:	mov    bl,0x71
  42d942:	fimul  WORD PTR [esp+edi*2+0x11b55994]
  42d949:	or     BYTE PTR [esi+0x3b],0x76
  42d94d:	(bad)  
  42d94e:	mov    esi,0xad963aeb
  42d953:	jb     0x42d942
  42d955:	sub    DWORD PTR [edi+0x3a2b3f8b],esi
  42d95b:	aad    0x1
  42d95d:	arpl   WORD PTR [ecx+0x742d4273],bx
  42d963:	sbb    ecx,eax
  42d965:	test   al,0x85
  42d967:	add    eax,0x2e89b0a2
  42d96c:	dec    edi
  42d96d:	mov    esi,0xa5e7a
  42d972:	cs and eax,0x6dbfc45f
  42d978:	sbb    dl,BYTE PTR [esi]
  42d97a:	shl    BYTE PTR [esi+edx*2+0x35279dfe],1
  42d981:	ins    BYTE PTR es:[edi],dx
  42d982:	cmp    BYTE PTR [edx],bh
  42d984:	das    
  42d985:	in     eax,dx
  42d986:	pop    es
  42d987:	enter  0x2e04,0x92
  42d98b:	pop    ebx
  42d98c:	mov    BYTE PTR [edi-0x74],al
  42d98f:	stos   DWORD PTR es:[edi],eax
  42d990:	pushf  
  42d991:	mov    bl,0x6
  42d993:	repz pop ecx
  42d995:	dec    ebx
  42d996:	in     eax,0xd2
  42d998:	test   ch,bl
  42d99a:	cld    
  42d99b:	ret    0xecd3
  42d99e:	mov    edi,0xb50720cf
  42d9a3:	hlt    
  42d9a4:	lods   eax,DWORD PTR ds:[esi]
  42d9a5:	mov    ch,BYTE PTR [edx-0x4b641511]
  42d9ab:	adc    BYTE PTR [eax+0x11d51d43],0x44
  42d9b2:	mov    cl,0xac
  42d9b4:	arpl   WORD PTR [ebp+0x70dcdbb6],si
  42d9ba:	shr    esp,1
  42d9bc:	push   ss
  42d9bd:	out    0x3e,eax
  42d9bf:	inc    esi
  42d9c0:	xor    ch,BYTE PTR [edi+0x4e]
  42d9c3:	sbb    DWORD PTR [edx],edx
  42d9c5:	pop    esi
  42d9c6:	test   DWORD PTR [esi],0x664418cf
  42d9cc:	(bad)  
  42d9cd:	mov    ebp,0xf21a2657
  42d9d2:	cs fs pop eax
  42d9d5:	mov    ds,WORD PTR [ebx]
  42d9d7:	icebp  
  42d9d8:	and    bl,BYTE PTR [ecx-0x5b]
  42d9db:	es and eax,0xf2cfec44
  42d9e1:	out    dx,al
  42d9e2:	repnz or al,BYTE PTR [edx]
  42d9e5:	xchg   BYTE PTR [edx],ah
  42d9e7:	push   esp
  42d9e8:	ds inc edx
  42d9ea:	sub    edx,DWORD PTR [ebp-0x37f1b776]
  42d9f0:	sub    al,0x14
  42d9f2:	adc    eax,0x1c5e412
  42d9f7:	xor    DWORD PTR [ebx],edi
  42d9f9:	and    DWORD PTR [ebp+0x1e],edi
  42d9fc:	sahf   
  42d9fd:	(bad)  
  42d9fe:	in     eax,dx
  42d9ff:	mov    al,ds:0xbb9879f9
  42da04:	bound  edx,QWORD PTR [edi+0x3a]
  42da07:	pusha  
  42da08:	out    dx,al
  42da09:	add    ecx,ebp
  42da0b:	gs ret 
  42da0d:	inc    ebx
  42da0e:	loopne 0x42da68
  42da10:	dec    edi
  42da11:	lods   al,BYTE PTR ds:[esi]
  42da12:	pop    edx
  42da13:	out    0x7f,al
  42da15:	add    edi,DWORD PTR [eax-0x30]
  42da18:	xchg   edi,eax
  42da19:	jmp    0xf062cff6
  42da1e:	mov    dh,0x1
  42da20:	clc    
  42da21:	int    0xc7
  42da23:	lock das 
  42da25:	push   edx
  42da26:	push   ss
  42da27:	ror    BYTE PTR ds:0xa2c8d8dc,1
  42da2d:	jecxz  0x42da3a
  42da2f:	add    dl,bl
  42da31:	mov    eax,fs:0x1bd904f7
  42da37:	jmp    0x42d9bb
  42da39:	sub    BYTE PTR [ebp-0x57],bh
  42da3c:	in     al,dx
  42da3d:	aam    0xa9
  42da3f:	ins    BYTE PTR es:[edi],dx
  42da40:	xchg   ebp,eax
  42da41:	inc    ecx
  42da42:	inc    eax
  42da43:	adc    al,0xc6
  42da45:	leave  
  42da46:	std    
  42da47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da48:	pop    ebp
  42da49:	dec    esp
  42da4a:	push   edx
  42da4b:	ins    DWORD PTR es:[edi],dx
  42da4c:	in     eax,dx
  42da4d:	add    ah,BYTE PTR [ebx]
  42da4f:	mov    gs,ebp
  42da51:	pop    edi
  42da52:	add    BYTE PTR [eax+0x550ff916],ah
  42da58:	xchg   sp,ax
  42da5a:	cmp    BYTE PTR [ebp+0x25],0xf5
  42da5e:	fcomip st,st(0)
  42da60:	sub    eax,0x2035176
  42da65:	int    0x6
  42da67:	(bad)  [edi+0x1]
  42da6a:	inc    ecx
  42da6b:	dec    esp
  42da6c:	mov    edx,gs
  42da6e:	adc    DWORD PTR [esi],ebp
  42da70:	jmp    0x42da8b
  42da72:	lods   al,BYTE PTR ds:[esi]
  42da73:	push   0x1e953d38
  42da78:	and    DWORD PTR [ebp-0x32],edi
  42da7b:	enter  0x939d,0x13
  42da7f:	repnz fdivr QWORD PTR [esi+0x194315ef]
  42da86:	xchg   ecx,eax
  42da87:	ficom  DWORD PTR ds:0x610f2949
  42da8d:	popf   
  42da8e:	loopne 0x42dab1
  42da90:	repz push ebx
  42da92:	retf   
  42da93:	or     al,BYTE PTR [eax-0x61ffea30]
  42da99:	add    eax,0x5b6eb0af
  42da9e:	add    al,0x9b
  42daa0:	inc    esp
  42daa1:	dec    ecx
  42daa2:	fcom   QWORD PTR [ecx-0x56]
  42daa5:	mov    DWORD PTR [ebx+0x6b86e73b],edx
  42daab:	mov    ds:0x1ad79113,al
  42dab0:	dec    edi
  42dab1:	adc    DWORD PTR [ecx-0x56],ebx
  42dab4:	pusha  
  42dab5:	pop    ss
  42dab6:	jae    0x42db15
  42dab8:	or     DWORD PTR [edi+0x17],edx
  42dabb:	std    
  42dabc:	xor    eax,esp
  42dabe:	icebp  
  42dabf:	mov    bh,bh
  42dac1:	fcomp  DWORD PTR [edi+ecx*1-0x2e85d407]
  42dac8:	inc    esp
  42dac9:	cdq    
  42daca:	(bad)  [ebp+0xd79d563]
  42dad0:	dec    ecx
  42dad1:	inc    esp
  42dad2:	(bad)
  42dad6:	es cld 
  42dad8:	mov    dh,0x49
  42dada:	dec    esp
  42dadb:	mov    ebx,0x5a0ebb57
  42dae1:	hlt    
  42dae2:	mov    cl,0xfe
  42dae4:	ffreep st(3)
  42dae6:	in     eax,dx
  42dae7:	push   ss
  42dae8:	cwde   
  42dae9:	leave  
  42daea:	aaa    
  42daeb:	jmp    0x42db30
  42daed:	(bad)  
  42daee:	daa    
  42daef:	mov    ds:0x8e8019c0,al
  42daf4:	inc    edi
  42daf5:	test   dl,al
  42daf7:	mov    bh,0xfa
  42daf9:	pusha  
  42dafa:	jg     0x42db3c
  42dafc:	inc    ebp
  42dafd:	xchg   DWORD PTR [esi],esi
  42daff:	push   ebx
  42db00:	xchg   ecx,eax
  42db01:	fmul   st,st(6)
  42db03:	jmp    0xf412:0xea41f040
  42db0a:	and    al,0x3d
  42db0c:	jg     0x42db4a
  42db0e:	add    bl,BYTE PTR [edi-0x24a904e]
  42db14:	sar    BYTE PTR [eax],cl
  42db16:	add    DWORD PTR [esi-0x1f],esp
  42db19:	mov    edx,0xe61f1bed
  42db1e:	inc    ecx
  42db1f:	mov    al,ds:0xa9e824aa
  42db24:	mov    ecx,DWORD PTR [edx+0x263bac86]
  42db2a:	xor    BYTE PTR [eax],0x46
  42db2d:	xchg   ebx,eax
  42db2e:	xor    eax,0x7e327259
  42db33:	mov    WORD PTR [esi+0x23d1249f],ss
  42db39:	xchg   edx,eax
  42db3a:	or     eax,0x1ef55ddc
  42db3f:	sti    
  42db40:	lea    ecx,[eax+0x40182cd8]
  42db46:	inc    dl
  42db48:	xchg   edi,eax
  42db49:	in     eax,dx
  42db4a:	or     cl,cl
  42db4c:	add    al,0xff
  42db4e:	mov    ebp,?
  42db50:	in     eax,dx
  42db51:	hlt    
  42db52:	mov    ch,0x45
  42db54:	dec    edx
  42db55:	push   ss
  42db56:	fs (bad) 
  42db58:	cmp    eax,0x3f948d89
  42db5d:	jbe    0x42dbab
  42db5f:	lea    edi,[esi+0x37]
  42db62:	or     eax,0x385d550a
  42db67:	in     eax,0x4
  42db69:	scas   eax,DWORD PTR es:[edi]
  42db6a:	xlat   BYTE PTR ds:[ebx]
  42db6b:	mov    ebx,0x12829425
  42db70:	adc    BYTE PTR [esp+edx*2+0x45],0xb1
  42db75:	add    DWORD PTR ds:0x3a949cdd,esp
  42db7b:	cmp    eax,0x7c476cdc
  42db80:	out    0xcd,eax
  42db82:	(bad)  
  42db83:	fild   WORD PTR [edi+0x1d]
  42db86:	adc    al,0x2
  42db88:	fs adc al,0xc2
  42db8b:	(bad)  
  42db8c:	cdq    
  42db8d:	stos   DWORD PTR es:[edi],eax
  42db8e:	es dec ebx
  42db90:	je     0x42db77
  42db92:	sub    al,0xd0
  42db94:	jne    0x42dbc7
  42db96:	and    ah,al
  42db98:	icebp  
  42db99:	call   0xaef5fb9a
  42db9e:	aas    
  42db9f:	push   esp
  42dba0:	outs   dx,BYTE PTR ds:[esi]
  42dba1:	cmp    DWORD PTR [edx+0x2c],ecx
  42dba4:	adc    al,0x22
  42dba6:	xor    al,0x11
  42dba8:	(bad)  
  42dba9:	aam    0x28
  42dbab:	lock lods al,BYTE PTR ds:[esi]
  42dbad:	lods   eax,DWORD PTR ds:[esi]
  42dbae:	mov    bh,BYTE PTR [eax+0x70]
  42dbb1:	inc    esp
  42dbb2:	loope  0x42dbff
  42dbb4:	in     al,dx
  42dbb5:	dec    esi
  42dbb6:	xor    BYTE PTR [esi-0x33],0xa7
  42dbba:	dec    ebp
  42dbbb:	popf   
  42dbbc:	xor    DWORD PTR [ecx-0x3f266b4f],0x5f71a2a4
  42dbc6:	push   ecx
  42dbc7:	cmc    
  42dbc8:	jl     0x42db53
  42dbca:	stos   BYTE PTR es:[edi],al
  42dbcb:	cmc    
  42dbcc:	and    al,BYTE PTR [ecx+0x3c360c4]
  42dbd2:	lock add bh,BYTE PTR [ebp-0x42]
  42dbd6:	stc    
  42dbd7:	xor    DWORD PTR [eax-0x7e22afc7],edi
  42dbdd:	ja     0x42dc0f
  42dbdf:	(bad)  
  42dbe1:	repz js 0x42dbcd
  42dbe4:	pop    ds
  42dbe5:	repz in al,dx
  42dbe7:	out    0xc0,al
  42dbe9:	dec    edi
  42dbea:	je     0x42db79
  42dbec:	lahf   
  42dbed:	les    ebx,FWORD PTR [edx-0x518b4c6b]
  42dbf3:	jo     0x42dbe5
  42dbf5:	mov    ch,0xd8
  42dbf7:	adc    BYTE PTR [eax-0x5],bh
  42dbfa:	and    DWORD PTR [esi+ebp*1],0xd
  42dbfe:	aaa    
  42dbff:	retf   0xfd8c
  42dc02:	sahf   
  42dc03:	aam    0xa6
  42dc05:	in     eax,0xa9
  42dc07:	(bad)  
  42dc08:	and    ecx,0x58feb5a4
  42dc0e:	test   BYTE PTR [ebp-0x49],dh
  42dc11:	cmp    eax,0x2993f0b7
  42dc16:	jl     0x42dbc3
  42dc18:	push   esp
  42dc19:	inc    esp
  42dc1a:	cdq    
  42dc1b:	icebp  
  42dc1c:	add    BYTE PTR [ecx],0x9b
  42dc1f:	or     BYTE PTR [esi+0x33a47e2a],ah
  42dc25:	lahf   
  42dc26:	fwait
  42dc27:	xor    BYTE PTR [ecx+eiz*8-0x5c],bh
  42dc2b:	push   eax
  42dc2c:	into   
  42dc2d:	and    ebp,edi
  42dc2f:	push   ds
  42dc30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc31:	cmp    bh,BYTE PTR [edx-0x4e]
  42dc34:	push   cs
  42dc35:	lods   eax,DWORD PTR ds:[esi]
  42dc36:	repz cmp BYTE PTR [edx],al
  42dc39:	and    dh,BYTE PTR [ecx+ebp*2]
  42dc3c:	add    BYTE PTR [ecx+0x2ba6ce6f],ch
  42dc42:	jno    0x42dc01
  42dc44:	iret   
  42dc45:	in     al,0xdd
  42dc47:	xor    BYTE PTR [edi+0x60],al
  42dc4a:	or     eax,0x1770f523
  42dc4f:	push   edi
  42dc50:	ss xor ch,dh
  42dc53:	fdiv   QWORD PTR [eax+0x59]
  42dc56:	mov    dl,0xe
  42dc58:	in     eax,0xd1
  42dc5a:	push   ebp
  42dc5b:	lahf   
  42dc5c:	push   edi
  42dc5d:	and    BYTE PTR [edi],cl
  42dc5f:	sahf   
  42dc60:	inc    ebp
  42dc61:	es add eax,0x4e2a1ff6
  42dc67:	ins    BYTE PTR es:[edi],dx
  42dc68:	dec    ecx
  42dc69:	(bad)  
  42dc6a:	fcomp  DWORD PTR [esi+0x6f434a40]
  42dc70:	and    eax,0x90a3e1ea
  42dc75:	lods   al,BYTE PTR ds:[esi]
  42dc76:	mov    bl,ah
  42dc78:	mov    eax,0x1444d9a7
  42dc7d:	dec    ebx
  42dc7e:	sbb    al,0xc2
  42dc80:	scas   al,BYTE PTR es:[edi]
  42dc81:	inc    edi
  42dc82:	jnp    0x42dc41
  42dc84:	nop
  42dc85:	aam    0x8d
  42dc87:	repnz or dl,BYTE PTR [ebx+0x26187f20]
  42dc8e:	(bad)  
  42dc8f:	lods   al,BYTE PTR es:[esi]
  42dc91:	fmul   st(5),st
  42dc93:	sub    eax,0xde2ffb0d
  42dc98:	popa   
  42dc99:	out    dx,al
  42dc9a:	sub    ch,BYTE PTR [edx+0x59]
  42dc9d:	mov    al,0x5b
  42dc9f:	jmp    0x8f0c279f
  42dca4:	shr    BYTE PTR [ebx-0x4a],cl
  42dca7:	push   esp
  42dca8:	mov    edx,0x61179c20
  42dcad:	push   ds
  42dcae:	bound  eax,QWORD PTR [edi-0x1a2838fd]
  42dcb4:	aas    
  42dcb5:	shr    bl,1
  42dcb7:	jmp    0x342b59be
  42dcbc:	call   0xb713:0xe138356e
  42dcc3:	adc    esi,ebp
  42dcc5:	sbb    eax,0xdce8590f
  42dcca:	sub    BYTE PTR [eax+0x78d617e7],dl
  42dcd0:	sub    esi,DWORD PTR [esi+0x2799f4d1]
  42dcd6:	sub    dl,dl
  42dcd8:	jmp    0xda08:0xadb72974
  42dcdf:	ffree  st(1)
  42dce1:	shl    BYTE PTR [eax],0xc
  42dce4:	jmp    0x42dcf9
  42dce6:	pushf  
  42dce7:	adc    esp,DWORD PTR [ecx-0x4a7b5fdc]
  42dced:	inc    edx
  42dcee:	imul   esi,DWORD PTR [ebp-0x5c3b09c],0xffffff93
  42dcf5:	jbe    0x42dd14
  42dcf7:	mov    al,ds:0x9b82a166
  42dcfc:	call   0x2f13:0xf714521b
  42dd03:	xchg   DWORD PTR ds:0x333d2681,esi
  42dd09:	setne  BYTE PTR [edi]
  42dd0c:	stos   BYTE PTR es:[edi],al
  42dd0d:	shr    BYTE PTR [edi],cl
  42dd0f:	fwait
  42dd10:	jno    0x42dd51
  42dd12:	or     bh,ch
  42dd14:	push   edi
  42dd15:	lds    esp,FWORD PTR [ebp+edi*8-0x7b]
  42dd19:	jmp    0x5767:0x24e1e916
  42dd20:	inc    ecx
  42dd21:	pop    esi
  42dd22:	sbb    eax,0x7006f980
  42dd27:	cli    
  42dd28:	popa   
  42dd29:	dec    esi
  42dd2a:	or     eax,esp
  42dd2c:	xchg   ebx,eax
  42dd2d:	fmul   DWORD PTR [edx-0x20]
  42dd30:	std    
  42dd31:	out    0x4f,eax
  42dd33:	repnz add cl,BYTE PTR [ebx]
  42dd36:	inc    ebp
  42dd37:	test   DWORD PTR [edx],eax
  42dd39:	(bad)  
  42dd3a:	pop    esi
  42dd3b:	sbb    bl,BYTE PTR [edx+0x35]
  42dd3e:	pop    esp
  42dd3f:	and    ebp,DWORD PTR [ecx-0x76]
  42dd42:	mov    esi,DWORD PTR [ecx+edx*4-0x69efefe1]
  42dd49:	(bad)  
  42dd4a:	ja     0x42ddbe
  42dd4c:	pop    es
  42dd4d:	add    ch,BYTE PTR [edi+0x79]
  42dd50:	push   0x378536e6
  42dd55:	mov    ch,0x54
  42dd57:	scas   al,BYTE PTR es:[edi]
  42dd58:	xchg   esp,eax
  42dd59:	ss int 0x6f
  42dd5c:	push   eax
  42dd5d:	adc    ah,BYTE PTR [eax+esi*1+0x49]
  42dd61:	and    eax,DWORD PTR [ebp-0x47cfcd51]
  42dd67:	ficom  WORD PTR [esi+ecx*8+0x6e6bf5b8]
  42dd6e:	cwde   
  42dd6f:	sbb    esp,DWORD PTR [eax-0x1]
  42dd72:	push   ss
  42dd73:	push   ebx
  42dd74:	inc    esp
  42dd75:	inc    edx
  42dd76:	xor    eax,0x29da2205
  42dd7b:	not    DWORD PTR [esi]
  42dd7d:	out    0x5c,al
  42dd7f:	fmul   QWORD PTR [edi]
  42dd81:	cdq    
  42dd82:	lock inc edi
  42dd84:	jg     0x42dda7
  42dd86:	es jmp 0xbff9:0xc87dd31a
  42dd8e:	and    dh,BYTE PTR [ecx]
  42dd90:	pop    edi
  42dd91:	or     eax,DWORD PTR [ebx-0x49]
  42dd94:	test   DWORD PTR [ebx-0x3e12c3b4],edi
  42dd9a:	test   DWORD PTR [eax-0x241ffee7],0xc88a685c
  42dda4:	icebp  
  42dda5:	mov    ch,0x3c
  42dda7:	in     eax,0x4c
  42dda9:	daa    
  42ddaa:	jmp    0x9d9d:0x54c3fbaa
  42ddb1:	jl     0x42de22
  42ddb3:	daa    
  42ddb4:	and    BYTE PTR [ebx+0x7fc5e02d],ch
  42ddba:	fimul  WORD PTR [edi+0x5577219e]
  42ddc0:	lods   eax,DWORD PTR ds:[esi]
  42ddc1:	outs   dx,BYTE PTR ds:[esi]
  42ddc2:	or     bl,BYTE PTR [eax]
  42ddc4:	pop    esp
  42ddc5:	pop    ds
  42ddc6:	jbe    0x42dd6f
  42ddc8:	aaa    
  42ddc9:	and    dl,BYTE PTR [ebx+edx*2+0xf]
  42ddcd:	hlt    
  42ddce:	mov    esi,0xca98a4ec
  42ddd3:	jmp    0x8989:0x25c12c21
  42ddda:	mov    DWORD PTR [edx],eax
  42dddc:	push   es
  42dddd:	je     0x42ddf2
  42dddf:	in     al,dx
  42dde0:	cmp    bh,BYTE PTR [ecx+0x614106f5]
  42dde6:	(bad)  
  42dde7:	push   ds
  42dde8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ddea:	sub    DWORD PTR [ebp+0x23911665],0xffffff8b
  42ddf1:	icebp  
  42ddf2:	fdiv   st,st(5)
  42ddf4:	xor    al,0x35
  42ddf6:	bound  ebx,QWORD PTR [esi]
  42ddf8:	call   0xbea3:0xed9fd415
  42ddff:	ficomp WORD PTR [edx-0x58]
  42de02:	div    BYTE PTR [eax+0x41]
  42de05:	sbb    dl,BYTE PTR [ecx-0x78e68f03]
  42de0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de0c:	pop    edi
  42de0d:	cwde   
  42de0e:	neg    DWORD PTR [ebp+0x3b]
  42de11:	scas   eax,DWORD PTR es:[edi]
  42de12:	test   al,0x79
  42de14:	ret    0x98c9
  42de17:	sahf   
  42de18:	inc    eax
  42de19:	popa   
  42de1a:	scas   al,BYTE PTR es:[edi]
  42de1b:	in     eax,0x65
  42de1d:	pop    ebp
  42de1e:	mov    ds:0x72861847,al
  42de23:	mov    ebp,0xef4d8f05
  42de28:	in     al,dx
  42de29:	out    0xa9,eax
  42de2b:	xor    al,0x61
  42de2d:	stc    
  42de2e:	div    DWORD PTR [edi]
  42de30:	mul    BYTE PTR [eax+edx*4-0x11]
  42de34:	inc    edi
  42de35:	stc    
  42de36:	sub    al,0x1e
  42de38:	je     0x42dddc
  42de3a:	das    
  42de3b:	inc    eax
  42de3c:	cdq    
  42de3d:	icebp  
  42de3e:	(bad)  
  42de3f:	(bad)  
  42de41:	test   eax,0x27d78d0d
  42de46:	fnsave [edx]
  42de48:	aaa    
  42de49:	loopne 0x42de50
  42de4b:	inc    ecx
  42de4c:	jle    0x42de11
  42de4e:	xchg   ecx,eax
  42de4f:	aas    
  42de50:	loop   0x42dec3
  42de52:	push   eax
  42de53:	inc    ebp
  42de54:	loope  0x42de6b
  42de56:	jmp    0xc13f:0xb80ccc5c
  42de5d:	push   esi
  42de5e:	jnp    0x42dea3
  42de60:	push   DWORD PTR [eax+0x63d7e664]
  42de66:	push   cs
  42de67:	imul   edx,DWORD PTR [edi-0x1dbc6e35],0xffffffdd
  42de6e:	lahf   
  42de6f:	adc    BYTE PTR [edi+0x75],0xf4
  42de73:	mov    bh,0xad
  42de75:	push   eax
  42de76:	ss ret 0x4f68
  42de7a:	cmp    BYTE PTR [ecx+0x5cf97647],cl
  42de80:	std    
  42de81:	mov    esi,0x537917fd
  42de86:	mov    al,0xaf
  42de88:	inc    eax
  42de89:	std    
  42de8a:	xchg   esi,eax
  42de8b:	add    al,BYTE PTR [edi]
  42de8d:	pop    ebp
  42de8e:	dec    edx
  42de8f:	push   esp
  42de90:	or     BYTE PTR ds:0x896d7c0e,ch
  42de96:	cld    
  42de97:	jnp    0x42def8
  42de99:	stos   DWORD PTR es:[edi],eax
  42de9a:	lahf   
  42de9b:	push   ds
  42de9c:	or     al,0x12
  42de9e:	and    bl,BYTE PTR [edi]
  42dea0:	adc    eax,0xab4bbee2
  42dea5:	arpl   WORD PTR [ebx],dx
  42dea7:	adc    DWORD PTR [ebp+0x1e31897e],esp
  42dead:	or     esi,esp
  42deaf:	jl     0x42de6f
  42deb1:	and    eax,0x448801a4
  42deb6:	(bad)  
  42deb7:	mov    ds:0x632529ab,al
  42debc:	in     eax,dx
  42debd:	shl    cl,0xa8
  42dec0:	fidiv  WORD PTR [ecx-0x518da40c]
  42dec6:	jle    0x42df3b
  42dec8:	push   edi
  42dec9:	in     eax,0x88
  42decb:	cwde   
  42decc:	and    al,0x0
  42dece:	or     DWORD PTR [edx+eax*4],0xffffffc6
  42ded2:	xor    BYTE PTR [ebx-0x611722c1],bl
  42ded8:	xlat   BYTE PTR ds:[ebx]
  42ded9:	push   ss
  42deda:	jp     0x42de73
  42dedc:	pop    ds
  42dedd:	pusha  
  42dede:	int3   
  42dedf:	dec    esi
  42dee0:	aaa    
  42dee1:	push   0x66fdf28c
  42dee6:	cmp    bh,BYTE PTR [esi]
  42dee8:	cmp    bh,ch
  42deea:	push   ecx
  42deeb:	add    al,0xfb
  42deed:	imul   esp,DWORD PTR [esi+0x69],0xb
  42def1:	xor    dh,dh
  42def3:	sub    al,0x0
  42def5:	ret    
  42def6:	mov    eax,0xfc1fdcd8
  42defb:	push   cs
  42defc:	arpl   WORD PTR [edx-0x41],sp
  42deff:	fbld   TBYTE PTR ds:0x67a673a3
  42df05:	xchg   edx,eax
  42df06:	inc    ebx
  42df07:	sub    al,0x73
  42df09:	xor    eax,0xb478d5da
  42df0e:	xor    al,0x76
  42df10:	pushf  
  42df11:	inc    eax
  42df12:	data16 fstp QWORD PTR [ebp-0x208cf7c8]
  42df19:	push   edi
  42df1a:	inc    ebx
  42df1b:	mov    edx,?
  42df1d:	loope  0x42df99
  42df1f:	mov    ebx,esp
  42df21:	test   DWORD PTR [eax+0x16],eax
  42df24:	call   0x90ed:0xd949d9f3
  42df2b:	out    0x50,eax
  42df2d:	stc    
  42df2e:	sbb    DWORD PTR [ebp+0x76],esp
  42df31:	shr    DWORD PTR [ecx+0x35],cl
  42df34:	in     al,dx
  42df35:	std    
  42df36:	hlt    
  42df37:	in     al,0xfc
  42df39:	and    al,0x1c
  42df3b:	ror    DWORD PTR [edi-0x49f98133],cl
  42df41:	popa   
  42df42:	add    BYTE PTR [ecx+0x62],ch
  42df45:	inc    ebx
  42df46:	stos   DWORD PTR es:[edi],eax
  42df47:	pop    ebp
  42df48:	sbb    eax,0x4adcf34
  42df4d:	outs   dx,DWORD PTR ds:[esi]
  42df4e:	leave  
  42df4f:	and    DWORD PTR ds:0xc421b17a,esi
  42df55:	loop   0x42df3f
  42df57:	sahf   
  42df58:	xchg   ecx,eax
  42df59:	sbb    BYTE PTR [ecx-0x484e1d7],dl
  42df5f:	ret    0xb70b
  42df62:	mov    bl,0x66
  42df64:	(bad)  
  42df65:	clc    
  42df66:	xor    al,BYTE PTR [eax+eiz*8-0xcdc1b82]
  42df6d:	rol    ah,0x71
  42df70:	and    BYTE PTR [edi-0x7d],ch
  42df73:	cmp    DWORD PTR [ecx],esp
  42df75:	div    DWORD PTR [ebp-0x7d8a3bd5]
  42df7b:	int3   
  42df7c:	outs   dx,DWORD PTR ds:[esi]
  42df7d:	repnz xchg edi,eax
  42df7f:	fcmovb st,st(0)
  42df81:	xor    al,0xb3
  42df83:	sbb    cl,BYTE PTR [edx-0x1a]
  42df86:	inc    edx
  42df87:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42df89:	pop    eax
  42df8a:	scas   al,BYTE PTR es:[edi]
  42df8b:	mov    ebx,ecx
  42df8d:	retf   0xf494
  42df90:	mov    al,0x11
  42df92:	das    
  42df93:	sub    ah,BYTE PTR [ecx]
  42df95:	sahf   
  42df96:	push   edi
  42df97:	mov    bh,bl
  42df99:	retf   0xa1e1
  42df9c:	ret    0xb627
  42df9f:	jno    0x42df55
  42dfa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dfa2:	in     eax,0xa4
  42dfa4:	cmp    DWORD PTR [ebp-0x65d5e9c3],0xffffffaa
  42dfab:	push   ecx
  42dfac:	cmp    esi,DWORD PTR [ebp+0x16]
  42dfaf:	ret    
  42dfb0:	lds    edx,FWORD PTR [ebx+0x3]
  42dfb3:	jl     0x42dff8
  42dfb5:	pop    ebx
  42dfb6:	fdiv   DWORD PTR [bp+0x6e]
  42dfba:	popf   
  42dfbb:	shl    DWORD PTR [eax],cl
  42dfbd:	add    eax,0x285a2cda
  42dfc2:	pop    es
  42dfc3:	lea    edi,[edx]
  42dfc5:	push   ebx
  42dfc6:	cmc    
  42dfc7:	bound  ebx,QWORD PTR [ebp-0x658e7a8e]
  42dfcd:	sbb    ecx,esi
  42dfcf:	pop    ecx
  42dfd0:	js     0x42dfbd
  42dfd2:	sbb    al,0xab
  42dfd4:	in     al,dx
  42dfd5:	push   esp
  42dfd6:	aas    
  42dfd7:	pop    edx
  42dfd8:	push   esi
  42dfd9:	dec    eax
  42dfda:	sbb    edi,DWORD PTR [eax]
  42dfdc:	push   0xfc827e0a
  42dfe1:	in     al,dx
  42dfe2:	call   0x44a7acb2
  42dfe7:	(bad)  
  42dfe8:	mov    ah,0x53
  42dfea:	enter  0xaec4,0xb3
  42dfee:	shl    bl,1
  42dff0:	arpl   WORD PTR [ebp+ecx*1+0x28],ax
  42dff4:	mov    ebx,0x8f1d2ae6
  42dff9:	lock mov bl,0x90
  42dffc:	std    
  42dffd:	pop    ss
  42dffe:	aaa    
  42dfff:	dec    edi
  42e000:	add    eax,0x7fc010a1
  42e005:	arpl   WORD PTR [ecx-0x565fac5],bx
  42e00b:	imul   esp,eax,0xa0cfe881
  42e011:	push   eax
  42e012:	inc    ebx
  42e013:	adc    al,ah
  42e015:	popf   
  42e016:	mov    edx,0xc3becd47
  42e01b:	pop    ecx
  42e01c:	das    
  42e01d:	jmp    0xd6d29cdf
  42e022:	dec    ebx
  42e023:	les    ebx,FWORD PTR [edx+0x62ec8aa3]
  42e029:	push   0xae9633bc
  42e02e:	ja     0x42dfbc
  42e030:	jbe    0x42dfec
  42e032:	pop    edx
  42e033:	xor    BYTE PTR ds:0xd9de75bc,ch
  42e039:	dec    eax
  42e03a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e03b:	sub    DWORD PTR [ebx+ebp*4-0x5b3c55c],ebp
  42e042:	icebp  
  42e043:	xor    eax,DWORD PTR [esp+ebx*2-0x39]
  42e047:	inc    esi
  42e048:	adc    cl,BYTE PTR [ebx+edi*1]
  42e04b:	lock xchg BYTE PTR [edi+0x8],al
  42e04f:	in     al,0x23
  42e051:	sbb    ah,bl
  42e053:	jae    0x42e003
  42e055:	out    dx,al
  42e056:	loop   0x42e062
  42e058:	xor    al,0x96
  42e05a:	jp     0x42e025
  42e05c:	xchg   esp,eax
  42e05d:	mov    eax,ds:0xb31f76d7
  42e062:	iret   
  42e063:	mov    ecx,0x2d5f28a7
  42e068:	push   eax
  42e069:	jne    0x42e002
  42e06b:	lock mov dh,0x21
  42e06e:	pop    edx
  42e06f:	inc    ecx
  42e070:	xchg   esi,eax
  42e071:	dec    esi
  42e072:	lods   eax,DWORD PTR ds:[esi]
  42e073:	out    0xc,eax
  42e075:	push   ecx
  42e076:	pop    edx
  42e077:	sbb    cl,cl
  42e079:	loopne 0x42e0a4
  42e07b:	std    
  42e07c:	xor    eax,0xcf32de52
  42e081:	inc    ebx
  42e082:	adc    dh,ch
  42e084:	xchg   DWORD PTR [ebp+0xf],esp
  42e087:	pop    edx
  42e088:	ret    0x316a
  42e08b:	mov    dl,0xde
  42e08d:	mov    dh,BYTE PTR [esi]
  42e08f:	jns    0x42e03d
  42e091:	(bad)  
  42e092:	mov    bh,0xbc
  42e094:	pop    ecx
  42e095:	or     bl,BYTE PTR [edx+ebp*8+0x4c]
  42e099:	fucomip st,st(6)
  42e09b:	loopne 0x42e093
  42e09d:	fwait
  42e09e:	cli    
  42e09f:	mov    DWORD PTR [ebp+0x8],esp
  42e0a2:	push   0xf7fb3963
  42e0a7:	push   eax
  42e0a8:	push   es
  42e0a9:	and    DWORD PTR [edx+0x6e874f1b],ecx
  42e0af:	rol    BYTE PTR [edx-0x69],1
  42e0b2:	inc    ebp
  42e0b3:	inc    edi
  42e0b4:	or     dl,BYTE PTR [edi]
  42e0b6:	bound  esp,QWORD PTR [ebp+0x5a89aee7]
  42e0bc:	pop    ebx
  42e0bd:	jnp    0x42e09e
  42e0bf:	xchg   esp,eax
  42e0c0:	xlat   BYTE PTR ds:[ebx]
  42e0c1:	jo     0x42e073
  42e0c3:	pop    ss
  42e0c4:	xchg   ecx,eax
  42e0c5:	aam    0xa0
  42e0c7:	shr    ebx,0xe4
  42e0ca:	mov    dh,0xe8
  42e0cc:	adc    al,0x10
  42e0ce:	sub    DWORD PTR [edx],ecx
  42e0d0:	mov    BYTE PTR [ecx],dl
  42e0d2:	mov    ch,0x1d
  42e0d4:	dec    edx
  42e0d5:	xor    cl,BYTE PTR [ecx]
  42e0d7:	ins    DWORD PTR es:[edi],dx
  42e0d8:	lods   eax,DWORD PTR ds:[esi]
  42e0d9:	sahf   
  42e0da:	push   edi
  42e0db:	pop    eax
  42e0dc:	repz push eax
  42e0de:	(bad)  
  42e0e0:	stos   BYTE PTR es:[edi],al
  42e0e1:	dec    ebp
  42e0e2:	mov    esp,0x7af8124e
  42e0e7:	mov    eax,ds:0xa4f3277b
  42e0ec:	pop    ds
  42e0ed:	xor    BYTE PTR [eax+0x20984760],bh
  42e0f3:	cli    
  42e0f4:	sub    BYTE PTR [edx-0x526f1964],0x1b
  42e0fb:	fwait
  42e0fc:	shr    BYTE PTR [ebp-0x6a],cl
  42e0ff:	or     edx,edi
  42e101:	add    eax,0x8baa9806
  42e106:	rcr    DWORD PTR [ecx],0x6e
  42e109:	push   ebp
  42e10a:	fadd   QWORD PTR [edi*4-0x29c2118]
  42e111:	aad    0x6d
  42e113:	int    0xaa
  42e115:	or     eax,0x965f806a
  42e11a:	repnz int 0x1d
  42e11d:	jp     0x42e127
  42e11f:	mov    bh,0x23
  42e121:	aas    
  42e122:	sbb    ah,BYTE PTR [esp+eiz*2-0x765e19b5]
  42e129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e12a:	inc    edx
  42e12b:	rcl    DWORD PTR [esi],cl
  42e12d:	mov    cl,0xfe
  42e12f:	mov    esi,0xcf578aaa
  42e134:	adc    eax,0x99090a54
  42e139:	and    ebx,edi
  42e13b:	or     eax,0x42118fc5
  42e140:	push   0x7ec01973
  42e145:	mov    ebx,0x5b8d8e65
  42e14a:	sub    esi,DWORD PTR [ebx]
  42e14c:	(bad)  
  42e14d:	sti    
  42e14e:	out    dx,eax
  42e14f:	stc    
  42e150:	das    
  42e151:	cdq    
  42e152:	push   edi
  42e153:	dec    ebx
  42e154:	sub    BYTE PTR cs:[edx-0x60],dh
  42e158:	sub    ecx,0xd1844c4e
  42e15e:	or     al,0x59
  42e160:	mov    ebp,0xb9f9c411
  42e165:	and    al,0x89
  42e167:	sbb    eax,0x45508901
  42e16c:	scas   al,BYTE PTR es:[edi]
  42e16d:	aas    
  42e16e:	data16 out dx,al
  42e170:	hlt    
  42e171:	ins    BYTE PTR es:[edi],dx
  42e172:	mul    BYTE PTR [ebx-0x52]
  42e175:	cmp    ah,dh
  42e177:	lea    ebp,[ebx+edi*1+0x2255f4de]
  42e17e:	cld    
  42e17f:	aaa    
  42e180:	cli    
  42e181:	cmp    bl,cl
  42e183:	pop    edi
  42e184:	mov    ah,0x89
  42e186:	add    DWORD PTR [ebp+0xf],0x72
  42e18a:	and    al,0x20
  42e18c:	aam    0xae
  42e18e:	jp     0x42e1e0
  42e190:	dec    ebp
  42e191:	retf   0xb574
  42e194:	outs   dx,BYTE PTR ds:[esi]
  42e195:	xor    bl,BYTE PTR [ecx+0x21]
  42e198:	lods   eax,DWORD PTR ds:[esi]
  42e199:	dec    ecx
  42e19a:	xchg   ebx,eax
  42e19b:	or     ch,BYTE PTR [ebx+0x1c]
  42e19e:	(bad)
  42e1a1:	xor    al,0xc4
  42e1a3:	cdq    
  42e1a4:	sahf   
  42e1a5:	scas   al,BYTE PTR es:[edi]
  42e1a6:	sub    eax,0xf45c1d32
  42e1ab:	and    eax,0xdc73548d
  42e1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1b1:	push   edi
  42e1b2:	cmc    
  42e1b3:	and    DWORD PTR [ebx+0x57],0xe5ee1923
  42e1ba:	sbb    dl,0x12
  42e1bd:	and    ebp,DWORD PTR [eax]
  42e1bf:	mov    al,ds:0x2afe58a
  42e1c4:	or     eax,0xf72ed959
  42e1c9:	and    eax,0x816c3921
  42e1ce:	push   ebp
  42e1cf:	sbb    dh,BYTE PTR [ebx+0x49e8a216]
  42e1d5:	sub    DWORD PTR [ecx],0xffffffd5
  42e1d8:	push   ecx
  42e1d9:	add    cl,0x6c
  42e1dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1dd:	add    BYTE PTR [edi+esi*4+0x6e],dl
  42e1e1:	popf   
  42e1e2:	xor    DWORD PTR [edi],esi
  42e1e4:	sti    
  42e1e5:	push   edx
  42e1e6:	ds ds mov bh,0xc3
  42e1ea:	jmp    0x6b9a:0xdee4e6b8
  42e1f1:	jbe    0x42e229
  42e1f3:	and    DWORD PTR [ecx+edi*8-0x4893df12],0xffffffbd
  42e1fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1fc:	add    BYTE PTR [edi-0x4c],0xdf
  42e200:	sbb    ch,BYTE PTR [eax]
  42e202:	push   0xffffffff
  42e204:	mov    dl,0x73
  42e206:	adc    eax,0x12b8b77e
  42e20b:	shl    BYTE PTR [edx+0xe845fb9],cl
  42e211:	adc    edi,esp
  42e213:	gs aas 
  42e215:	lods   al,BYTE PTR cs:[esi]
  42e217:	loopne 0x42e1b9
  42e219:	push   edx
  42e21a:	or     al,0x42
  42e21c:	pusha  
  42e21d:	in     al,0xa2
  42e21f:	ins    DWORD PTR es:[edi],dx
  42e220:	cwde   
  42e221:	jmp    0x88f1:0x267e6683
  42e228:	sbb    BYTE PTR ds:0x7e2ffe7b,ah
  42e22e:	adc    al,0x66
  42e230:	out    dx,al
  42e231:	mov    BYTE PTR [ecx+0x68651e7c],bh
  42e237:	out    dx,al
  42e238:	mov    cl,0x8e
  42e23a:	(bad)  
  42e23c:	fstp   st(4)
  42e23e:	popf   
  42e23f:	out    dx,eax
  42e240:	xor    DWORD PTR [eax+0x8e0508c],eax
  42e246:	xor    DWORD PTR [ebp+0x7a8de4a9],esi
  42e24c:	ds xchg ebx,eax
  42e24e:	and    DWORD PTR [eax],edi
  42e250:	call   0x7f54:0x672dcff
  42e257:	sub    edx,ecx
  42e259:	sbb    cl,bl
  42e25b:	ror    DWORD PTR [esi-0x1b],0x8
  42e25f:	xchg   edx,eax
  42e260:	cmp    al,0x91
  42e262:	cmp    BYTE PTR [ecx-0x5b],ah
  42e265:	add    BYTE PTR ds:0xf6147a14,bh
  42e26b:	hlt    
  42e26c:	xor    edi,DWORD PTR [ebx+eax*1]
  42e26f:	in     al,dx
  42e270:	lods   eax,DWORD PTR cs:[esi]
  42e272:	clc    
  42e273:	out    0x68,al
  42e275:	or     al,0x29
  42e277:	add    esi,ecx
  42e279:	dec    edx
  42e27a:	add    al,0xfc
  42e27c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e27d:	sub    al,0xfd
  42e27f:	mov    esi,0x360f3039
  42e284:	loope  0x42e2cc
  42e286:	push   edx
  42e287:	jne    0x42e2c7
  42e289:	dec    ecx
  42e28a:	xor    DWORD PTR [esp+eiz*2-0x1c277a8d],esi
  42e291:	push   cs
  42e292:	sub    BYTE PTR [edx+0x34a7de56],ah
  42e298:	jle    0x42e23d
  42e29a:	jecxz  0x42e2ad
  42e29c:	xor    ch,dl
  42e29e:	push   0xdb53f975
  42e2a3:	xor    DWORD PTR [edx],ebp
  42e2a5:	sub    esi,eax
  42e2a7:	pop    edi
  42e2a8:	leave  
  42e2a9:	jmp    0x9fcf:0x442496ad
  42e2b0:	pusha  
  42e2b1:	dec    ebx
  42e2b2:	pop    esi
  42e2b3:	pop    ecx
  42e2b4:	in     eax,dx
  42e2b5:	stos   BYTE PTR es:[edi],al
  42e2b6:	and    al,0x93
  42e2b8:	xor    BYTE PTR [edi],ch
  42e2ba:	adc    al,0xdf
  42e2bc:	or     cl,BYTE PTR [esi+0x6c]
  42e2bf:	add    esp,DWORD PTR [eax+ebx*2+0x3f90b140]
  42e2c6:	adc    eax,0x88eff981
  42e2cb:	jl     0x42e34a
  42e2cd:	sbb    DWORD PTR [eax],ebp
  42e2cf:	pop    eax
  42e2d0:	and    eax,0x1ea568fa
  42e2d5:	push   eax
  42e2d6:	daa    
  42e2d7:	rol    DWORD PTR [ebx+0x39e2cc2b],1
  42e2dd:	(bad)
  42e2e0:	pop    esp
  42e2e1:	adc    edx,esp
  42e2e3:	xchg   ebp,eax
  42e2e4:	aas    
  42e2e5:	mov    eax,ds:0xc51fb173
  42e2ea:	fsubr  DWORD PTR [eax]
  42e2ec:	sub    eax,0x1063d66d
  42e2f1:	mov    al,0xf
  42e2f3:	and    al,0x78
  42e2f5:	dec    esi
  42e2f6:	iret   
  42e2f7:	dec    bh
  42e2f9:	retf   0x63c3
  42e2fc:	lea    eax,[esi+0x4ecad13a]
  42e302:	add    DWORD PTR [ebx],ecx
  42e304:	in     eax,0x39
  42e306:	mov    ecx,0xd360e6ae
  42e30b:	sbb    DWORD PTR [esi],esi
  42e30d:	push   es
  42e30e:	push   ds
  42e30f:	stos   DWORD PTR es:[edi],eax
  42e310:	(bad)
  42e313:	add    dh,BYTE PTR [eax+eax*8-0x7b]
  42e317:	and    DWORD PTR [esi+0x5406b0f4],edi
  42e31d:	xor    ebp,0x1273766a
  42e323:	call   0x22be:0xe85359c9
  42e32a:	mov    BYTE PTR [edx-0x78154567],ah
  42e330:	mov    eax,ds:0x1fb87663
  42e335:	jle    0x42e307
  42e337:	sbb    eax,DWORD PTR [eax+0x20]
  42e33a:	mov    ds:0x2a1a0ad5,eax
  42e33f:	cdq    
  42e340:	jmp    0x1942:0x812af927
  42e347:	imul   ebp,DWORD PTR [eax],0x4fde2e12
  42e34d:	fstp   DWORD PTR [ecx-0x51]
  42e350:	jmp    DWORD PTR [edx+edx*4]
  42e353:	hlt    
  42e354:	adc    eax,0x7fd7b258
  42e359:	enter  0x96d9,0xc7
  42e35d:	fmul   DWORD PTR [edx+0x23f45705]
  42e363:	outs   dx,DWORD PTR ds:[esi]
  42e364:	jecxz  0x42e35a
  42e366:	inc    esi
  42e367:	dec    ecx
  42e368:	jb     0x42e360
  42e36a:	jmp    0x42e38c
  42e36c:	fwait
  42e36d:	leave  
  42e36e:	adc    DWORD PTR [eax],edx
  42e370:	jecxz  0x42e3b4
  42e372:	xor    DWORD PTR [ebx],0xffffffe5
  42e375:	xchg   ebx,eax
  42e376:	mov    ch,0xce
  42e378:	xor    DWORD PTR [eax],0xffffff88
  42e37b:	jb     0x42e3e9
  42e37d:	dec    edx
  42e37e:	clc    
  42e37f:	inc    edx
  42e380:	in     al,0x21
  42e382:	out    dx,eax
  42e383:	jae    0x42e313
  42e385:	(bad)  
  42e386:	cdq    
  42e387:	cmp    BYTE PTR [ebp+0x40],dh
  42e38a:	mov    DWORD PTR [edi-0x4ed9b083],ecx
  42e390:	xchg   ecx,eax
  42e391:	punpckhwd mm2,mm5
  42e394:	popf   
  42e395:	jmp    0xe0dc2f73
  42e39a:	and    al,0x2f
  42e39c:	xor    bh,al
  42e39e:	aaa    
  42e39f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3a0:	pop    esp
  42e3a1:	daa    
  42e3a2:	mov    dl,0xce
  42e3a4:	xchg   BYTE PTR [edi+0x6d],ch
  42e3a7:	jne    0x42e3f0
  42e3a9:	test   DWORD PTR ds:0x31a41957,eax
  42e3af:	pop    ebp
  42e3b0:	dec    edx
  42e3b1:	call   0xd226:0x3105a13a
  42e3b8:	sbb    eax,0x72f7905f
  42e3bd:	jnp    0x42e425
  42e3bf:	or     ah,BYTE PTR [esi]
  42e3c1:	add    bh,dl
  42e3c3:	pushf  
  42e3c4:	or     ah,cl
  42e3c6:	or     eax,DWORD PTR [esi+0x51]
  42e3c9:	adc    dl,BYTE PTR [ebp+eiz*4+0x38]
  42e3cd:	cmp    eax,0xc73cd747
  42e3d2:	sub    DWORD PTR [ecx-0x11],0x2e15b768
  42e3d9:	pop    ebx
  42e3da:	sar    BYTE PTR [esi-0x43],cl
  42e3dd:	sti    
  42e3de:	aas    
  42e3df:	(bad)  
  42e3e0:	(bad)  
  42e3e1:	das    
  42e3e2:	xlat   BYTE PTR ds:[ebx]
  42e3e3:	pop    es
  42e3e4:	dec    edi
  42e3e5:	jmp    0xe90e:0xbbcc5bb2
  42e3ec:	cmp    al,0xa0
  42e3ee:	pop    edi
  42e3ef:	lgs    esi,FWORD PTR gs:[esi-0x5a62c9ea]
  42e3f7:	retf   0xfb95
  42e3fa:	cmp    esp,esp
  42e3fc:	sbb    ebx,DWORD PTR [ebx]
  42e3fe:	stos   DWORD PTR es:[edi],eax
  42e3ff:	and    BYTE PTR [esi+esi*8+0x1a],bh
  42e403:	cmp    BYTE PTR [edi],0x7b
  42e406:	add    cl,BYTE PTR [ecx-0x7c]
  42e409:	push   0x264272a1
  42e40e:	test   al,0xe7
  42e410:	ds pop edi
  42e412:	icebp  
  42e413:	jne    0x42e3f8
  42e415:	inc    ecx
  42e416:	(bad)  [ecx-0xb]
  42e419:	sbb    dh,BYTE PTR [eax]
  42e41b:	push   edi
  42e41c:	out    0xa1,eax
  42e41e:	test   bl,ch
  42e420:	dec    eax
  42e421:	adc    eax,0xc6decbd7
  42e426:	ror    BYTE PTR [esi-0x45],0xb1
  42e42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e42b:	jmp    0xc986:0x1f0a1674
  42e432:	mov    ah,0xb9
  42e434:	call   0xe79f:0x5eafb10e
  42e43b:	jl     0x42e448
  42e43d:	iret   
  42e43e:	jmp    0x42e3c0
  42e440:	clc    
  42e441:	cwde   
  42e442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e443:	and    bl,BYTE PTR [ecx+0x47]
  42e446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e447:	mov    al,0xd6
  42e449:	imul   DWORD PTR [edx-0x2c403ae3]
  42e44f:	pop    ss
  42e450:	inc    DWORD PTR [eax]
  42e452:	stos   BYTE PTR es:[edi],al
  42e453:	ins    DWORD PTR es:[edi],dx
  42e454:	and    eax,0xf6a78bca
  42e459:	ja     0x42e4d6
  42e45b:	push   edx
  42e45c:	sub    eax,0x36252c11
  42e461:	jmp    0x99466062
  42e466:	sub    DWORD PTR [ebx-0x79a2450a],esi
  42e46c:	jmp    0xb786966c
  42e471:	pop    es
  42e472:	and    al,0x15
  42e474:	jbe    0x42e4ee
  42e476:	push   esi
  42e477:	push   eax
  42e478:	pop    esp
  42e479:	add    ecx,DWORD PTR [esp+ecx*2-0x1beef356]
  42e480:	xlat   BYTE PTR ds:[ebx]
  42e481:	adc    al,0x7c
  42e483:	rcr    BYTE PTR [ecx+0x97e52a4],cl
  42e489:	cs scas eax,DWORD PTR es:[edi]
  42e48b:	ret    0xd8a2
  42e48e:	ret    
  42e48f:	cmc    
  42e490:	cmp    bh,bl
  42e492:	xchg   esp,eax
  42e493:	int3   
  42e494:	push   es
  42e495:	pop    edi
  42e496:	(bad)  
  42e497:	in     al,dx
  42e498:	aas    
  42e499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e49a:	xchg   edx,eax
  42e49b:	(bad)  
  42e49c:	mov    ds:0x4405eee,al
  42e4a1:	and    BYTE PTR [ebp+0x64],dh
  42e4a4:	lods   eax,DWORD PTR ds:[esi]
  42e4a5:	xlat   BYTE PTR ds:[ebx]
  42e4a6:	dec    esi
  42e4a7:	call   0x6b0b4009
  42e4ac:	xor    al,0x13
  42e4ae:	cdq    
  42e4af:	ss icebp 
  42e4b1:	pusha  
  42e4b2:	ja     0x42e4b4
  42e4b4:	fidivr DWORD PTR [eax-0x4ab1eb3]
  42e4ba:	loope  0x42e4f5
  42e4bc:	imul   ebp,DWORD PTR [eax-0x5d],0xfffffff2
  42e4c0:	mov    edx,ebp
  42e4c2:	sub    DWORD PTR [edi+0xb],edi
  42e4c5:	mov    bh,0xde
  42e4c7:	mov    eax,0x4c40c03e
  42e4cc:	sbb    BYTE PTR [edi-0xa],dh
  42e4cf:	call   FWORD PTR [eax-0x2b]
  42e4d2:	push   ebx
  42e4d3:	mov    esp,0x796533f0
  42e4d8:	out    0x30,al
  42e4da:	ret    
  42e4db:	retf   
  42e4dc:	std    
  42e4dd:	add    al,0x42
  42e4df:	mov    ss,WORD PTR [ebp+0x8]
  42e4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4e3:	outs   dx,DWORD PTR ds:[esi]
  42e4e4:	nop
  42e4e5:	retf   0x4f0
  42e4e8:	mov    dh,0x43
  42e4ea:	and    al,0xe2
  42e4ec:	jae    0x42e4dc
  42e4ee:	(bad)  
  42e4ef:	jnp    0x42e490
  42e4f1:	dec    edx
  42e4f2:	aaa    
  42e4f3:	in     eax,dx
  42e4f4:	add    al,0x66
  42e4f6:	ror    BYTE PTR [ecx],1
  42e4f8:	push   edx
  42e4f9:	xchg   BYTE PTR [eax],cl
  42e4fb:	xchg   ebp,eax
  42e4fc:	in     al,0xfe
  42e4fe:	hlt    
  42e4ff:	jmp    0x6f9c29c0
  42e504:	jmp    0xea72:0x37013be3
  42e50b:	jg     0x42e4e6
  42e50d:	rcl    DWORD PTR [edi+ecx*1+0x6c],cl
  42e511:	loopne 0x42e53b
  42e513:	(bad)  
  42e514:	push   ss
  42e515:	inc    ebx
  42e516:	cmc    
  42e517:	or     al,0x13
  42e519:	or     bl,BYTE PTR [esi]
  42e51b:	push   es
  42e51c:	sub    eax,0x226bfea7
  42e521:	popf   
  42e522:	and    al,0xc0
  42e524:	inc    esp
  42e525:	xchg   esp,eax
  42e526:	adc    eax,0x4a4d7e10
  42e52b:	aad    0xbb
  42e52d:	ret    0xcabb
  42e530:	mov    ebx,0x561e9529
  42e535:	in     al,0x2a
  42e537:	into   
  42e538:	aaa    
  42e539:	add    eax,0xf63a48dd
  42e53e:	dec    esi
  42e540:	inc    esp
  42e541:	push   edi
  42e542:	inc    edx
  42e543:	arpl   WORD PTR [edx*1-0xa92f705],dx
  42e54a:	push   0xcd1222a0
  42e54f:	xchg   esi,eax
  42e550:	cmp    eax,0x46632272
  42e555:	bound  esp,QWORD PTR gs:[esi+esi*8-0x4ea0d0ad]
  42e55d:	cmp    esi,DWORD PTR [edx+ebp*1+0x169c857f]
  42e564:	(bad)  
  42e566:	inc    eax
  42e567:	dec    esp
  42e568:	mov    al,ds:0xc0d80b0d
  42e56d:	lea    eax,[edi-0x22353b1e]
  42e573:	jo     0x42e5ab
  42e575:	push   esp
  42e576:	pop    ecx
  42e577:	aam    0xfe
  42e579:	cmp    ecx,DWORD PTR [ebx+0x27]
  42e57c:	pushf  
  42e57d:	ret    
  42e57e:	(bad)  
  42e57f:	jne    0x42e511
  42e581:	iret   
  42e582:	adc    eax,0xbfe8301c
  42e587:	hlt    
  42e588:	out    dx,eax
  42e589:	push   esi
  42e58a:	xor    DWORD PTR [edi+0x6e07198c],edx
  42e590:	loop   0x42e5d0
  42e592:	fs aas 
  42e594:	xor    al,0x33
  42e596:	sar    DWORD PTR [edi],1
  42e598:	mov    bh,0x9e
  42e59a:	xor    al,BYTE PTR [ecx+eiz*1+0x1f]
  42e59e:	mov    bh,0x9b
  42e5a0:	leave  
  42e5a1:	call   0x55c2de4
  42e5a6:	sahf   
  42e5a7:	inc    edi
  42e5a8:	pop    ecx
  42e5a9:	dec    eax
  42e5aa:	push   0xfffffff3
  42e5ac:	push   esi
  42e5ad:	test   eax,0xc021da22
  42e5b2:	out    0xb1,al
  42e5b4:	cs out 0x3c,al
  42e5b7:	(bad)  
  42e5b9:	aam    0xe5
  42e5bb:	xchg   ebp,eax
  42e5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5bd:	adc    ebx,DWORD PTR [edi]
  42e5bf:	mov    eax,ds:0x8aa574b7
  42e5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5c5:	call   0xdac87604
  42e5ca:	inc    ebx
  42e5cb:	mov    edi,0x9629605f
  42e5d0:	mov    ecx,esp
  42e5d2:	pop    ebx
  42e5d3:	jb     0x42e587
  42e5d5:	dec    ebx
  42e5d6:	scas   al,BYTE PTR es:[edi]
  42e5d7:	mov    ah,0x72
  42e5d9:	imul   eax,DWORD PTR [eax+0x9148da7],0xffffff87
  42e5e0:	xchg   ebp,eax
  42e5e1:	hlt    
  42e5e2:	fdiv   QWORD PTR [ebp-0x5633335b]
  42e5e8:	pop    esp
  42e5e9:	rep outs dx,BYTE PTR ds:[esi]
  42e5eb:	xchg   esp,eax
  42e5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e5ed:	jne    0x42e637
  42e5ef:	out    dx,al
  42e5f0:	fwait
  42e5f1:	mov    al,ds:0x9cc79872
  42e5f6:	pop    edx
  42e5f7:	push   ds
  42e5f8:	(bad)  
  42e5f9:	cmp    ebx,DWORD PTR [edx-0x67d54fcf]
  42e5ff:	call   0x257d:0xe3de3468
  42e606:	dec    edi
  42e607:	cmp    DWORD PTR [ebx],ebp
  42e609:	mov    ch,cl
  42e60b:	ins    DWORD PTR es:[edi],dx
  42e60c:	test   al,0x63
  42e60e:	pop    esp
  42e60f:	dec    esp
  42e610:	mov    eax,0x7493191d
  42e615:	cmp    ebx,esi
  42e617:	std    
  42e618:	imul   esi,DWORD PTR [eax+ebx*8+0x4627008c],0x7dac7a0
  42e623:	rcr    BYTE PTR [esi+0x52eda9a8],1
  42e629:	cwde   
  42e62a:	and    ah,bh
  42e62c:	sbb    al,BYTE PTR [esi-0x4e254abb]
  42e632:	ins    DWORD PTR es:[edi],dx
  42e633:	dec    edi
  42e634:	push   ebx
  42e635:	inc    edi
  42e636:	adc    eax,0x285fb57e
  42e63b:	jne    0x42e64e
  42e63d:	in     al,0x3e
  42e63f:	and    ah,BYTE PTR ds:0x4a368fe9
  42e645:	enter  0x91a0,0xe9
  42e649:	outs   dx,DWORD PTR ds:[esi]
  42e64a:	and    al,0x86
  42e64c:	call   0x13d89323
  42e651:	xchg   edx,eax
  42e652:	and    bl,BYTE PTR [edx+ebx*4-0x11]
  42e656:	cmp    cl,BYTE PTR [eax+0x2152a1e6]
  42e65c:	pop    ss
  42e65d:	jno    0x42e650
  42e65f:	inc    ebx
  42e660:	mov    ecx,eax
  42e662:	sbb    BYTE PTR [eax-0x23],0xa2
  42e666:	mov    ebp,0xc57a44e8
  42e66b:	mov    al,ds:0x1c16c4a2
  42e670:	mov    WORD PTR [ebp-0x5ce10e88],?
  42e676:	or     eax,0xf65896df
  42e67b:	xchg   ebp,ebx
  42e67d:	addr16 pop ebx
  42e67f:	cmp    eax,DWORD PTR [esi]
  42e681:	fist   DWORD PTR [ebp+0x336e06b7]
  42e687:	mov    edx,0xc09f6bd5
  42e68c:	mov    eax,0x9eff8fb1
  42e691:	jnp    0x42e68f
  42e693:	mov    WORD PTR [ebp+0x49],fs
  42e696:	dec    ecx
  42e697:	fwait
  42e698:	data16 jae 0x42e675
  42e69b:	sahf   
  42e69c:	mov    ch,0x61
  42e69e:	stc    
  42e69f:	add    BYTE PTR [ebx],0xf6
  42e6a2:	fdiv   DWORD PTR ds:[ebp+0x6df26dc5]
  42e6a9:	and    DWORD PTR [edx-0x3278ae0f],ecx
  42e6af:	pop    eax
  42e6b0:	dec    ecx
  42e6b1:	cwde   
  42e6b2:	fimul  DWORD PTR [ebx]
  42e6b4:	cwde   
  42e6b5:	mov    WORD PTR [edi],es
  42e6b7:	and    BYTE PTR [eax+0x33ddd2ab],ah
  42e6bd:	sbb    al,0x6d
  42e6bf:	push   esi
  42e6c0:	xchg   ecx,eax
  42e6c1:	xor    esp,DWORD PTR [ebp-0x3076a868]
  42e6c7:	ror    DWORD PTR [eax-0x59f22893],1
  42e6cd:	mov    gs,ebp
  42e6cf:	shl    BYTE PTR [eax],0x7c
  42e6d2:	test   edi,ebp
  42e6d4:	pop    eax
  42e6d5:	jnp    0x42e704
  42e6d7:	adc    esi,DWORD PTR [edx]
  42e6d9:	push   ebx
  42e6da:	adc    cl,dh
  42e6dc:	bound  ebp,QWORD PTR [ebx+0x729f56c9]
  42e6e2:	mov    ebp,0x9cc5fff8
  42e6e7:	mov    edi,0xcdc69453
  42e6ec:	add    ah,cl
  42e6ee:	xor    DWORD PTR [edi+0x78],0x6ec7e42a
  42e6f5:	loope  0x42e6fe
  42e6f7:	loop   0x42e6e2
  42e6f9:	ja     0x42e72b
  42e6fb:	and    BYTE PTR [esi+eax*1-0x47a95ef6],bh
  42e702:	pop    ebp
  42e704:	rcl    BYTE PTR ds:0x8f9346f9,cl
  42e70a:	push   0xb5145005
  42e70f:	out    dx,al
  42e710:	cwde   
  42e711:	div    BYTE PTR fs:[esi]
  42e714:	jmp    0x73ae:0xbb6a248
  42e71b:	ret    0x9f32
  42e71e:	xchg   esp,eax
  42e71f:	adc    eax,DWORD PTR [ebx+0x781ab4b2]
  42e725:	adc    dl,BYTE PTR [edi]
  42e727:	mov    ecx,0x7066d391
  42e72c:	push   ecx
  42e72d:	mov    eax,ds:0x8c0e8936
  42e732:	xor    al,0x46
  42e734:	or     al,ch
  42e736:	test   DWORD PTR [edx-0x45],ebx
  42e739:	dec    ebp
  42e73a:	stos   DWORD PTR es:[edi],eax
  42e73b:	fist   WORD PTR [ecx+0x57]
  42e73e:	out    0x67,al
  42e740:	test   eax,0xd05e2f0f
  42e745:	out    dx,eax
  42e746:	into   
  42e747:	out    0x2,al
  42e749:	push   es
  42e74a:	dec    esi
  42e74b:	inc    ah
  42e74d:	adc    edx,ecx
  42e74f:	fisub  WORD PTR [esi-0x68]
  42e752:	dec    eax
  42e753:	inc    edi
  42e754:	mov    DWORD PTR [ebx+0x172869a5],ecx
  42e75a:	sbb    DWORD PTR [edx-0x46],0x78e9a50d
  42e761:	jb     0x42e7ca
  42e763:	pop    ebx
  42e764:	sbb    al,0xcf
  42e766:	(bad)  
  42e768:	into   
  42e769:	jmp    0x56c5:0x5c359cb
  42e770:	ret    
  42e771:	scas   al,BYTE PTR es:[edi]
  42e772:	lock popa 
  42e774:	stos   DWORD PTR es:[edi],eax
  42e775:	ror    DWORD PTR [eax-0x17],0x7d
  42e779:	scas   eax,DWORD PTR es:[edi]
  42e77a:	aaa    
  42e77b:	sub    eax,0x49849f38
  42e780:	outs   dx,BYTE PTR ds:[esi]
  42e781:	inc    esi
  42e782:	dec    ecx
  42e783:	imul   ebp,DWORD PTR [esi],0x69
  42e786:	pop    es
  42e787:	sbb    ch,ch
  42e789:	cs js  0x42e7d8
  42e78c:	or     cl,bh
  42e78e:	fist   DWORD PTR cs:[edi-0x3c]
  42e792:	les    edx,FWORD PTR [eax+eax*4-0x2486c01f]
  42e799:	add    DWORD PTR [ebp+0x3478019d],esi
  42e79f:	loop   0x42e808
  42e7a1:	jp     0x42e7be
  42e7a3:	add    al,0xfd
  42e7a5:	jae    0x42e77f
  42e7a7:	sub    bl,0xe8
  42e7aa:	shr    BYTE PTR [eax+edx*1+0x59d18a77],cl
  42e7b1:	retf   
  42e7b2:	mov    ds:0x354968c9,eax
  42e7b7:	fidivr WORD PTR [eiz*4+0x7aa17a30]
  42e7be:	or     al,dl
  42e7c0:	push   edi
  42e7c1:	aam    0xba
  42e7c3:	shl    DWORD PTR [eax-0x159865ce],1
  42e7c9:	xchg   cx,ax
  42e7cb:	xchg   ebp,eax
  42e7cc:	repz sahf 
  42e7ce:	loop   0x42e84e
  42e7d0:	xchg   ebx,eax
  42e7d1:	jno    0x42e833
  42e7d3:	in     eax,dx
  42e7d4:	fwait
  42e7d5:	inc    esp
  42e7d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e7d7:	out    dx,eax
  42e7d8:	jno    0x42e7e6
  42e7da:	imul   edi,DWORD PTR [ebx],0x8e90f4e
  42e7e0:	call   0xd536:0x275816cc
  42e7e7:	nop
  42e7e8:	shl    ch,1
  42e7ea:	cdq    
  42e7eb:	mov    edx,DWORD PTR [edi-0x43]
  42e7ee:	repnz sub ecx,ebp
  42e7f1:	ret    
  42e7f2:	lods   al,BYTE PTR ds:[esi]
  42e7f3:	push   ds
  42e7f4:	xor    DWORD PTR [ebp-0x7a],0x65
  42e7f8:	or     DWORD PTR [ecx],ebp
  42e7fa:	test   eax,0x84d6935d
  42e7ff:	je     0x42e7eb
  42e801:	sub    eax,0xa5a66d90
  42e806:	cmp    BYTE PTR [ebx+0x35d2b7c4],0x41
  42e80d:	cmc    
  42e80e:	shl    BYTE PTR [esi-0x2d11fb73],0xd0
  42e815:	jmp    0xde69:0x39722084
  42e81c:	neg    ecx
  42e81e:	call   0xeb43d111
  42e823:	mov    al,ds:0xdf57a39
  42e828:	(bad)  
  42e829:	adc    eax,0xcc61bac0
  42e82e:	push   esp
  42e82f:	test   al,0xff
  42e831:	scas   eax,DWORD PTR es:[edi]
  42e832:	pop    ecx
  42e833:	jecxz  0x42e859
  42e835:	ja     0x42e8a5
  42e837:	jle    0x42e866
  42e839:	in     eax,dx
  42e83a:	and    DWORD PTR ds:0xcc1e32ae,esi
  42e840:	or     eax,0x3ca178ea
  42e845:	adc    DWORD PTR [esi+0x309fded5],ecx
  42e84b:	mov    DWORD PTR [edx],edi
  42e84d:	xlat   BYTE PTR ds:[ebx]
  42e84e:	pop    esi
  42e84f:	repnz lock and al,0x76
  42e853:	outs   dx,BYTE PTR ds:[esi]
  42e854:	(bad)  
  42e856:	mov    esi,0xeebb7a99
  42e85b:	or     ecx,eax
  42e85d:	cmp    ch,BYTE PTR [edx+0x18]
  42e860:	dec    esp
  42e861:	pop    esi
  42e862:	sbb    esp,ebp
  42e864:	jnp    0x42e8bb
  42e866:	mov    esi,0xbc62a764
  42e86b:	sbb    bl,ah
  42e86d:	cld    
  42e86e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e86f:	mov    ch,0x18
  42e871:	mov    ds:0xbe70c77e,al
  42e876:	rol    DWORD PTR [ecx],cl
  42e878:	dec    esi
  42e879:	mov    dl,0x79
  42e87b:	adc    ebx,DWORD PTR [ecx-0xf]
  42e87e:	adc    edi,edi
  42e880:	pop    edx
  42e881:	mov    edi,0x5ea06b68
  42e886:	call   0xeb6b4ded
  42e88b:	xlat   BYTE PTR ds:[ebx]
  42e88c:	test   eax,0x889eb32c
  42e891:	popa   
  42e892:	int3   
  42e893:	jb     0x42e849
  42e895:	pop    ss
  42e896:	in     al,0x6c
  42e898:	add    ebp,DWORD PTR [ebp+0x1a7d6ed0]
  42e89e:	xor    bh,bh
  42e8a0:	call   edi
  42e8a2:	(bad)  
  42e8a3:	fsub   st,st(0)
  42e8a5:	push   esi
  42e8a6:	cli    
  42e8a7:	fist   DWORD PTR [ecx+0x47ff98e2]
  42e8ad:	cwde   
  42e8ae:	mov    al,ds:0x2ae9afc4
  42e8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e8b4:	(bad)  
  42e8b6:	test   eax,0xc70aaea3
  42e8bb:	mov    ebp,0x48dc4a4
  42e8c0:	sub    BYTE PTR [ecx-0xadd610f],0xd3
  42e8c7:	cmc    
  42e8c8:	mov    ebx,0xb1323e5a
  42e8cd:	sar    BYTE PTR [esi+ebp*4-0x71],0xb1
  42e8d2:	and    eax,0x42058dde
  42e8d7:	in     al,0x7b
  42e8d9:	call   0x8631:0x462a4a07
  42e8e0:	lahf   
  42e8e1:	adc    eax,0x45994e92
  42e8e6:	mov    ebp,0x7236b3bb
  42e8eb:	inc    edi
  42e8ec:	lods   eax,DWORD PTR ds:[esi]
  42e8ed:	mov    ch,0x59
  42e8ef:	int3   
  42e8f0:	in     al,dx
  42e8f1:	mov    dl,0xd8
  42e8f3:	and    edi,ebp
  42e8f5:	xor    eax,0x6c3dd89b
  42e8fa:	add    ebx,DWORD PTR [ebp-0x18ef420b]
  42e900:	gs xchg ebp,eax
  42e902:	ins    BYTE PTR es:[edi],dx
  42e903:	arpl   WORD PTR [ebp+0x68b3aca5],cx
  42e909:	and    DWORD PTR [edi],edi
  42e90b:	xor    eax,0xeb232951
  42e910:	pop    es
  42e911:	jnp    0x42e8cb
  42e913:	out    dx,al
  42e914:	imul   edx,DWORD PTR [ecx+0x4a],0x44
  42e918:	lock xlat BYTE PTR ds:[ebx]
  42e91a:	test   al,0x38
  42e91c:	pop    esi
  42e91d:	in     al,dx
  42e91e:	lock ret 0xdadc
  42e922:	out    dx,al
  42e923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e924:	add    edi,DWORD PTR [ebp-0x2326c4f8]
  42e92a:	inc    edi
  42e92b:	sbb    bh,BYTE PTR [ebx]
  42e92d:	fldcw  WORD PTR [eax]
  42e92f:	push   0x5730123d
  42e934:	popf   
  42e935:	pop    esp
  42e936:	xchg   ebp,eax
  42e937:	outs   dx,DWORD PTR ds:[esi]
  42e938:	push   ecx
  42e939:	inc    edi
  42e93a:	and    eax,0x215a1056
  42e93f:	mov    dh,0x36
  42e941:	mov    ah,BYTE PTR [ebx]
  42e943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e944:	sub    al,0xa3
  42e946:	sub    dh,BYTE PTR [edx+0x3521e02]
  42e94c:	mov    ecx,0xc4a81661
  42e951:	out    0x8f,eax
  42e953:	pusha  
  42e954:	xchg   esp,eax
  42e955:	stc    
  42e956:	pop    edx
  42e957:	xor    DWORD PTR [eax+0x2c10692a],esp
  42e95d:	(bad)  
  42e95e:	cmp    BYTE PTR [esi-0x47],ah
  42e961:	pushf  
  42e962:	mov    bl,0x96
  42e964:	push   edi
  42e965:	jmp    0xb243:0xd4fcfae4
  42e96c:	ss clc 
  42e96e:	popa   
  42e96f:	mov    BYTE PTR [eax-0x32ebd4a0],ah
  42e975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e976:	hlt    
  42e977:	cmp    ecx,DWORD PTR [ecx-0x4c]
  42e97a:	pop    esp
  42e97b:	popa   
  42e97c:	shr    eax,cl
  42e97e:	jmp    0x6d09:0x42455500
  42e985:	mov    ah,0xcb
  42e987:	outs   dx,DWORD PTR ds:[esi]
  42e988:	jp     0x42e9de
  42e98a:	mov    dl,0x29
  42e98c:	xor    edi,DWORD PTR [esi-0x1a2d1010]
  42e992:	rcl    DWORD PTR [edx],1
  42e994:	imul   ecx,DWORD PTR [edx],0xbcb02143
  42e99a:	(bad)  [ecx-0x78]
  42e99d:	call   0x2970:0x8695929d
  42e9a4:	retf   0xc7a7
  42e9a7:	lds    esp,FWORD PTR [ebp+0x56d5d38f]
  42e9ad:	bound  ebx,QWORD PTR fs:0x8e083a1
  42e9b4:	mov    ebp,0x957b5347
  42e9b9:	pop    ss
  42e9ba:	mov    edi,0x83c6f771
  42e9bf:	jmp    0x54a:0xc70815ae
  42e9c6:	sub    al,0xa7
  42e9c8:	jge    0x42e9cd
  42e9ca:	es aad 0xed
  42e9cd:	dec    BYTE PTR [edx-0x29f4e6c6]
  42e9d3:	fild   WORD PTR [esi+edx*1-0x14]
  42e9d7:	(bad)  
  42e9d8:	lods   eax,DWORD PTR ds:[esi]
  42e9d9:	xchg   ebp,eax
  42e9da:	mov    edx,0x323372c3
  42e9df:	mov    edi,0xdc496a0d
  42e9e4:	pop    ecx
  42e9e5:	inc    edi
  42e9e6:	stc    
  42e9e7:	mov    ds:0x1049dbf3,eax
  42e9ec:	test   BYTE PTR ds:0x2e5a672c,0x14
  42e9f3:	mov    dl,BYTE PTR [esi]
  42e9f5:	nop
  42e9f6:	in     al,dx
  42e9f7:	mov    ebp,0xf1465970
  42e9fc:	sub    eax,0xd1bf987d
  42ea01:	push   edx
  42ea02:	inc    ecx
  42ea03:	inc    edi
  42ea04:	adc    BYTE PTR [ebx-0x399a0561],ch
  42ea0a:	call   0x4bba0313
  42ea0f:	shr    DWORD PTR [edi-0x79014b31],1
  42ea15:	shr    BYTE PTR ds:0xf57c7ad0,1
  42ea1b:	fisub  WORD PTR ds:0xa7211ba4
  42ea21:	aas    
  42ea22:	xor    DWORD PTR [ecx+0x38],eax
  42ea25:	lea    ebx,[ebx-0x60982b8d]
  42ea2b:	add    eax,0x6c40d420
  42ea30:	outs   dx,DWORD PTR ds:[esi]
  42ea31:	xor    bh,al
  42ea33:	xchg   DWORD PTR [ebx-0x22a1137c],ecx
  42ea39:	push   0xffffffe7
  42ea3b:	mov    al,ds:0x6e82f849
  42ea40:	gs iret 
  42ea42:	sub    BYTE PTR [esi+0x1d],al
  42ea45:	leave  
  42ea46:	cs pop ss
  42ea48:	mov    eax,?
  42ea4a:	inc    esi
  42ea4b:	imul   ebp,esp,0x59c4e609
  42ea51:	test   DWORD PTR [edx-0x3a6d3e29],edi
  42ea57:	dec    ebp
  42ea58:	and    al,0xf2
  42ea5a:	shr    DWORD PTR [ebx+0x56],1
  42ea5d:	adc    dh,dl
  42ea5f:	dec    edx
  42ea60:	popa   
  42ea61:	xchg   ebp,eax
  42ea62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea63:	inc    esp
  42ea64:	inc    eax
  42ea65:	and    BYTE PTR [edx+0x25ec47d8],cl
  42ea6b:	xor    al,0x8b
  42ea6d:	push   0xd4af1b46
  42ea72:	push   esi
  42ea73:	and    eax,DWORD PTR [ebp+0x31]
  42ea76:	test   al,0x77
  42ea78:	xchg   edi,eax
  42ea79:	clc    
  42ea7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea7b:	cmp    DWORD PTR [esi-0x5e7e1211],ebx
  42ea81:	outs   dx,DWORD PTR ds:[esi]
  42ea82:	int    0x52
  42ea84:	loopne 0x42eab2
  42ea86:	dec    ebp
  42ea87:	xchg   ecx,eax
  42ea88:	xor    bl,bl
  42ea8a:	loopne 0x42eab6
  42ea8c:	or     al,0xc7
  42ea8e:	xchg   ebp,eax
  42ea8f:	mov    ds:0xf3bc7bb6,eax
  42ea94:	adc    BYTE PTR [eax+0x22],bl
  42ea97:	mov    ds:0xde12e151,al
  42ea9c:	outs   dx,DWORD PTR ds:[esi]
  42ea9d:	add    DWORD PTR [edi],0xffffff9e
  42eaa0:	ss pop edx
  42eaa2:	jge    0x42eaf3
  42eaa4:	clc    
  42eaa5:	xchg   esi,eax
  42eaa6:	mov    bl,0xc
  42eaa8:	not    BYTE PTR [eax+0x4dd41edd]
  42eaae:	iret   
  42eaaf:	add    ah,BYTE PTR [eax+edx*2-0x14]
  42eab3:	mov    esi,0xb58bd8b9
  42eab8:	enter  0x5f33,0xd
  42eabc:	pop    eax
  42eabd:	or     al,0xfc
  42eabf:	sti    
  42eac0:	cdq    
  42eac1:	ret    
  42eac2:	fadd   DWORD PTR [edi]
  42eac4:	fbld   TBYTE PTR [ecx+eiz*8]
  42eac7:	cwde   
  42eac8:	jb     0x42ea99
  42eaca:	jo     0x42ea84
  42eacc:	stc    
  42eacd:	icebp  
  42eace:	arpl   dx,di
  42ead0:	hlt    
  42ead1:	lea    esp,[bp+si]
  42ead4:	mov    eax,0xf4221032
  42ead9:	scas   eax,DWORD PTR es:[edi]
  42eada:	pop    ebx
  42eadb:	mov    ah,0xf3
  42eadd:	push   ebx
  42eade:	ds retf 
  42eae0:	cmp    al,0xb0
  42eae2:	xor    al,BYTE PTR [eax+0x3a]
  42eae5:	lds    ecx,FWORD PTR [eax+ebx*4]
  42eae8:	mov    ecx,0x3094e425
  42eaed:	push   ebp
  42eaee:	imul   esp,edx,0xd4bf7d01
  42eaf4:	ins    BYTE PTR es:[edi],dx
  42eaf5:	fisttp DWORD PTR [esi-0x453ebc31]
  42eafb:	ins    DWORD PTR es:[edi],dx
  42eafc:	pushf  
  42eafd:	icebp  
  42eafe:	sbb    BYTE PTR [ebx],bh
  42eb00:	pop    ss
  42eb01:	jae    0x42eae7
  42eb03:	psubusw mm0,QWORD PTR [edi+0xd]
  42eb07:	out    0xde,al
  42eb09:	and    DWORD PTR [ecx],edx
  42eb0b:	ret    0x6126
  42eb0e:	nop
  42eb0f:	stos   DWORD PTR es:[edi],eax
  42eb10:	repnz lahf 
  42eb12:	inc    edi
  42eb13:	mov    al,0x5
  42eb15:	jae    0x42eb22
  42eb17:	jne    0x42eadb
  42eb19:	les    esp,FWORD PTR [ecx]
  42eb1b:	les    ecx,FWORD PTR [ebp-0x4e8ccf5c]
  42eb21:	call   0x5fe5cd14
  42eb26:	imul   ebp,DWORD PTR ds:0x65201be5,0x6ac3ce7e
  42eb30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb32:	push   cs
  42eb33:	les    eax,FWORD PTR [ebx+ebx*2-0x46]
  42eb37:	shr    esp,0x30
  42eb3a:	mov    ebp,0x4b81ccdb
  42eb3f:	ss daa 
  42eb41:	inc    edi
  42eb42:	and    ebp,ebp
  42eb44:	pop    es
  42eb45:	jg     0x42ead8
  42eb47:	xor    ch,dl
  42eb49:	je     0x42eb8a
  42eb4b:	jl     0x42eb12
  42eb4d:	inc    ecx
  42eb4e:	and    dh,0x3d
  42eb51:	push   esp
  42eb52:	fwait
  42eb53:	and    al,0x6d
  42eb55:	ret    
  42eb56:	xchg   ebx,eax
  42eb57:	sti    
  42eb58:	sub    al,0xef
  42eb5a:	push   edi
  42eb5b:	ret    
  42eb5c:	shr    DWORD PTR [eax-0x72],1
  42eb5f:	push   0xcd32de59
  42eb64:	adc    ebx,0xe
  42eb67:	outs   dx,BYTE PTR ds:[esi]
  42eb68:	rcr    BYTE PTR [ebp-0x41bad54f],1
  42eb6e:	add    DWORD PTR [ebp-0x3a],esp
  42eb71:	sub    DWORD PTR [eax],ebx
  42eb73:	jl     0x42eb12
  42eb75:	pushf  
  42eb76:	ins    BYTE PTR es:[edi],dx
  42eb77:	mov    ds:0x6d9d09f9,eax
  42eb7c:	push   0x1aea7a36
  42eb81:	cld    
  42eb82:	inc    ebx
  42eb83:	inc    eax
  42eb84:	xor    eax,0xcc8bcec4
  42eb89:	aaa    
  42eb8a:	aad    0xaf
  42eb8c:	js     0x42ebc2
  42eb8e:	dec    edi
  42eb8f:	pop    eax
  42eb90:	push   edi
  42eb91:	mov    ch,0x59
  42eb93:	push   edi
  42eb94:	jle    0x42ebe5
  42eb96:	popf   
  42eb97:	sti    
  42eb98:	mov    ebx,0x195ed4c
  42eb9d:	dec    ecx
  42eb9e:	add    BYTE PTR [ebx+0x2d29a57],bl
  42eba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eba5:	push   es
  42eba6:	cmp    BYTE PTR [ecx],bl
  42eba8:	pop    edi
  42eba9:	fcomip st,st(5)
  42ebab:	cli    
  42ebac:	cdq    
  42ebad:	xchg   BYTE PTR [edi-0x75694fd8],ch
  42ebb3:	(bad)  
  42ebb4:	ds sbb al,0x75
  42ebb7:	mov    BYTE PTR [edx],bl
  42ebb9:	jns    0x42eb46
  42ebbb:	sub    eax,0xb2db3cdd
  42ebc0:	jns    0x42ebff
  42ebc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ebc3:	sub    eax,0x4628c870
  42ebc8:	and    ebx,DWORD PTR [edi+0x46]
  42ebcb:	stos   DWORD PTR es:[edi],eax
  42ebcc:	(bad)  
  42ebcd:	retf   
  42ebce:	test   al,0xb6
  42ebd0:	std    
  42ebd1:	jmp    0x8bc8a6a8
  42ebd6:	jno    0x42eb79
  42ebd8:	push   esi
  42ebd9:	rol    DWORD PTR [ebp-0x65cd9a46],cl
  42ebdf:	test   al,0xd5
  42ebe1:	clc    
  42ebe2:	sub    bh,dl
  42ebe4:	pop    ebp
  42ebe5:	test   eax,0x9f162acd
  42ebea:	xlat   BYTE PTR ds:[ebx]
  42ebeb:	loope  0x42eba5
  42ebed:	(bad)  
  42ebee:	mov    ch,0x7e
  42ebf0:	pop    esp
  42ebf1:	xor    eax,0x9be8915
  42ebf6:	mov    bh,0xb2
  42ebf8:	cwde   
  42ebf9:	hlt    
  42ebfa:	in     eax,dx
  42ebfb:	dec    ecx
  42ebfc:	mov    bh,0x62
  42ebfe:	sub    esi,ebx
  42ec00:	pop    es
  42ec01:	push   cs
  42ec02:	xor    BYTE PTR [edi],ch
  42ec04:	lds    esp,FWORD PTR [ebx-0x7ef6f74c]
  42ec0a:	and    BYTE PTR [eax],ch
  42ec0c:	sbb    al,0x6d
  42ec0e:	(bad)  
  42ec0f:	les    ebp,FWORD PTR [edx]
  42ec11:	add    DWORD PTR [esi],eax
  42ec13:	out    0xd4,al
  42ec15:	or     eax,DWORD PTR [edi-0x6d654e6e]
  42ec1b:	inc    esp
  42ec1c:	aaa    
  42ec1d:	push   es
  42ec1e:	ret    0x9493
  42ec21:	js     0x42ec69
  42ec23:	mov    esp,DWORD PTR [esi-0x5d]
  42ec26:	pop    ss
  42ec27:	mov    bl,0x63
  42ec29:	and    al,0x46
  42ec2b:	dec    ecx
  42ec2c:	push   ebp
  42ec2d:	out    dx,eax
  42ec2e:	dec    ecx
  42ec2f:	lock mov ebp,0xdbe58714
  42ec35:	adc    DWORD PTR [ebx+0x715bedbb],0xffffffcc
  42ec3c:	loope  0x42ec32
  42ec3e:	xor    eax,0x8be50d5b
  42ec43:	mov    edx,0xbe8d4b20
  42ec48:	sub    DWORD PTR ds:[edx+0x777002f],ebx
  42ec4f:	mov    ss,WORD PTR [esi]
  42ec51:	jmp    0x42ec93
  42ec53:	or     ah,BYTE PTR [eax]
  42ec55:	out    dx,eax
  42ec56:	pop    edx
  42ec57:	cmp    dl,BYTE PTR [ecx-0xb6886b6]
  42ec5d:	test   al,0x1a
  42ec5f:	jno    0x42ebf9
  42ec61:	std    
  42ec62:	push   esp
  42ec63:	and    al,0x6a
  42ec65:	sbb    eax,0xde680cc1
  42ec6a:	fistp  QWORD PTR [ecx+ebp*4-0x529043a3]
  42ec71:	test   DWORD PTR [esi],0xf305bb75
  42ec77:	into   
  42ec78:	mov    ds:0xbc7c7408,eax
  42ec7d:	sar    BYTE PTR [esi-0x12],0x7c
  42ec81:	popf   
  42ec82:	jbe    0x42ecf5
  42ec84:	mov    dh,0x91
  42ec86:	ins    BYTE PTR es:[edi],dx
  42ec87:	jp     0x42ecc1
  42ec89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec8a:	lock outs dx,BYTE PTR ds:[esi]
  42ec8c:	call   0xebbd:0x468b5181
  42ec93:	adc    bl,ch
  42ec95:	fdiv   DWORD PTR [esi+esi*2+0x26]
  42ec99:	push   edx
  42ec9a:	xchg   esi,eax
  42ec9b:	cmp    DWORD PTR [ecx-0x5116e2de],esi
  42eca1:	mov    al,ds:0xc39b8e67
  42eca6:	jg     0x42ecca
  42eca8:	cmp    DWORD PTR [esi],ebp
  42ecaa:	xchg   esp,eax
  42ecab:	jnp    0x42eca4
  42ecad:	popf   
  42ecae:	adc    al,0xfd
  42ecb0:	cmp    ch,BYTE PTR [ecx+0x79d303fd]
  42ecb6:	ds gs xchg edi,eax
  42ecb9:	nop
  42ecba:	lock ret 0xd37
  42ecbe:	ror    BYTE PTR [ebx-0x11],cl
  42ecc1:	ins    DWORD PTR es:[edi],dx
  42ecc2:	cld    
  42ecc3:	push   si
  42ecc5:	ss sub al,0xc8
  42ecc8:	jmp    DWORD PTR [edi+0xa5ce748]
  42ecce:	aas    
  42eccf:	ins    DWORD PTR es:[edi],dx
  42ecd0:	add    edx,DWORD PTR [ecx]
  42ecd2:	and    al,0x2
  42ecd4:	dec    eax
  42ecd5:	mov    ah,0x9c
  42ecd7:	call   0x2f70:0x4a6b4606
  42ecde:	adc    edx,DWORD PTR [edx+0x72caa288]
  42ece4:	dec    ebp
  42ece5:	inc    ebp
  42ece6:	icebp  
  42ece7:	ret    0xd3f4
  42ecea:	dec    esi
  42eceb:	aad    0xb8
  42eced:	cmovle edx,DWORD PTR [eax]
  42ecf0:	inc    eax
  42ecf1:	or     ebx,DWORD PTR [eax+0x426fa35e]
  42ecf7:	test   BYTE PTR [eax],dl
  42ecf9:	inc    ecx
  42ecfa:	inc    ecx
  42ecfb:	popf   
  42ecfc:	(bad)  
  42ecfe:	cwde   
  42ecff:	aaa    
  42ed00:	dec    esi
  42ed01:	aas    
  42ed02:	(bad)  
  42ed04:	in     eax,dx
  42ed05:	cwde   
  42ed06:	xor    DWORD PTR [ebx+0x33],ecx
  42ed09:	mov    ds:0xc6948229,al
  42ed0e:	das    
  42ed0f:	dec    ecx
  42ed10:	adc    ch,BYTE PTR ds:0x63ceac4f
  42ed16:	cmp    al,0x1c
  42ed18:	mov    ?,ecx
  42ed1a:	in     al,dx
  42ed1b:	xchg   ebp,eax
  42ed1c:	xor    DWORD PTR [ecx+0x3e],ebp
  42ed1f:	xlat   BYTE PTR ds:[ebx]
  42ed20:	test   BYTE PTR fs:[eax+0x22d3bdc7],0x29
  42ed28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ed29:	int3   
  42ed2a:	mov    bh,0xf5
  42ed2c:	sub    DWORD PTR [ecx],ecx
  42ed2e:	mov    bl,bh
  42ed30:	adc    ebx,esp
  42ed32:	push   ebp
  42ed33:	(bad)  
  42ed34:	and    eax,0xb1ff16f2
  42ed39:	jg     0x42ed26
  42ed3b:	pusha  
  42ed3c:	retf   0xdec3
  42ed3f:	push   0xffffffe6
  42ed41:	popf   
  42ed42:	jmp    0x42eda0
  42ed44:	jmp    0x42ed36
  42ed46:	imul   al
  42ed48:	mov    ah,0xb
  42ed4a:	cli    
  42ed4b:	add    cl,BYTE PTR [eax+0x68]
  42ed4e:	fucomi st,st(1)
  42ed50:	add    cl,0x9e
  42ed53:	(bad)  
  42ed54:	push   cs
  42ed55:	add    eax,0x1e4a724e
  42ed5a:	icebp  
  42ed5b:	iret   
  42ed5c:	(bad)  
  42ed5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed5f:	sti    
  42ed60:	jp     0x42ed0e
  42ed62:	stc    
  42ed63:	xchg   ebp,eax
  42ed64:	nop
  42ed65:	inc    esp
  42ed66:	ss pop ebp
  42ed68:	push   0x8
  42ed6a:	adc    al,ah
  42ed6c:	shr    BYTE PTR [ebx],cl
  42ed6e:	lahf   
  42ed6f:	in     eax,dx
  42ed70:	repnz inc esp
  42ed72:	popa   
  42ed73:	fistp  DWORD PTR [esi]
  42ed75:	stos   DWORD PTR es:[edi],eax
  42ed76:	imul   ecx,ecx,0x7c
  42ed79:	andps  xmm5,XMMWORD PTR [eax]
  42ed7c:	sub    eax,0x827b8a1c
  42ed81:	ins    DWORD PTR es:[edi],dx
  42ed82:	into   
  42ed83:	and    BYTE PTR [esi-0x5372e5cd],bh
  42ed89:	mov    edi,DWORD PTR [ebx-0x6c29cca]
  42ed8f:	pop    eax
  42ed90:	data16 adc al,0x8b
  42ed93:	pop    esi
  42ed94:	mov    dl,0x65
  42ed96:	xor    BYTE PTR [ebp+0x4b],bl
  42ed99:	inc    ebp
  42ed9a:	test   eax,0xb93371
  42ed9f:	fld    QWORD PTR [ecx]
  42eda1:	mov    ah,0x54
  42eda3:	push   esp
  42eda4:	jo     0x42ed3a
  42eda6:	or     eax,0x431e1b0b
  42edab:	test   al,0xf8
  42edad:	out    dx,al
  42edae:	sbb    esp,DWORD PTR [edi]
  42edb0:	dec    edx
  42edb1:	les    ebx,FWORD PTR [ebp+0x9]
  42edb4:	sbb    eax,0xb1de5075
  42edb9:	mov    esp,0x37408a6e
  42edbe:	xchg   ebx,eax
  42edbf:	scas   al,BYTE PTR es:[edi]
  42edc0:	int3   
  42edc1:	xlat   BYTE PTR ds:[ebx]
  42edc2:	imul   eax,edx,0xbe025130
  42edc8:	in     eax,dx
  42edc9:	mov    eax,0x8a1c1c76
  42edce:	aam    0x7d
  42edd0:	inc    edi
  42edd1:	mov    ds:0xbe1307d1,eax
  42edd6:	jmp    0x42ed89
  42edd8:	dec    esi
  42edd9:	std    
  42edda:	dec    ebx
  42eddb:	jecxz  0x42eded
  42eddd:	leave  
  42edde:	js     0x42edd7
  42ede0:	stos   DWORD PTR es:[edi],eax
  42ede1:	xor    ch,dl
  42ede3:	in     al,0x74
  42ede5:	add    BYTE PTR [edi+0x1ab92227],cl
  42edeb:	sbb    eax,0x565f5cc7
  42edf0:	stc    
  42edf1:	mov    ds:0x4939a752,al
  42edf6:	in     al,dx
  42edf7:	mov    ch,0x99
  42edf9:	pusha  
  42edfa:	sub    edi,edx
  42edfc:	jb     0x42ee31
  42edfe:	xor    DWORD PTR [esi+edx*1-0x62],edx
  42ee02:	ficom  WORD PTR [edx+0x22]
  42ee05:	push   edi
  42ee06:	mov    dh,0xb4
  42ee08:	loop   0x42edf3
  42ee0a:	popf   
  42ee0b:	adc    ecx,ecx
  42ee0d:	adc    DWORD PTR [edx-0x3b2d635f],ebx
  42ee13:	jge    0x42ee18
  42ee15:	mov    cl,0xf3
  42ee17:	mov    al,ds:0xe5cb2db1
  42ee1c:	cmp    ebp,DWORD PTR [ecx-0x27]
  42ee1f:	cmp    ch,BYTE PTR [ebx+0x533a7623]
  42ee25:	ins    DWORD PTR es:[edi],dx
  42ee26:	sahf   
  42ee27:	pushf  
  42ee28:	sar    DWORD PTR [ebx+0x789f3cdb],0xac
  42ee2f:	mov    DWORD PTR [ebx+ebp*1],edi
  42ee32:	cmp    al,cl
  42ee34:	pop    bp
  42ee36:	arpl   WORD PTR [ebx-0x6197d451],bx
  42ee3c:	sub    bh,BYTE PTR [edx-0xd39b4ab]
  42ee42:	(bad)  [edx-0x601134b0]
  42ee48:	dec    esi
  42ee49:	ret    0x4764
  42ee4c:	xchg   ebx,eax
  42ee4d:	addr16 fs sub eax,0x42c4f174
  42ee54:	dec    ecx
  42ee55:	imul   eax,DWORD PTR [esi],0x67
  42ee58:	inc    ecx
  42ee59:	fninit 
  42ee5b:	dec    esp
  42ee5c:	ficom  WORD PTR [esp+edi*8+0x36]
  42ee60:	jg     0x42ee9f
  42ee62:	dec    ebx
  42ee63:	in     al,dx
  42ee64:	int3   
  42ee65:	pop    ebx
  42ee66:	push   ebp
  42ee67:	cdq    
  42ee68:	sub    al,0x20
  42ee6a:	jmp    0x757f:0xa9c19f00
  42ee71:	(bad)  
  42ee72:	call   0x4ed3b93f
  42ee77:	in     eax,dx
  42ee78:	cmc    
  42ee79:	pop    edx
  42ee7a:	cmc    
  42ee7b:	cmp    DWORD PTR [esi],0xfa121531
  42ee81:	aad    0x93
  42ee83:	jle    0x42ee0e
  42ee85:	dec    edx
  42ee86:	scas   eax,DWORD PTR es:[edi]
  42ee87:	je     0x42ee38
  42ee89:	rcl    DWORD PTR [eax-0x52257941],1
  42ee8f:	push   cs
  42ee90:	arpl   dx,bp
  42ee92:	retf   0x8ed4
  42ee95:	repz mov ecx,ecx
  42ee98:	lods   al,BYTE PTR ds:[esi]
  42ee99:	push   cs
  42ee9a:	lock int3 
  42ee9c:	xchg   ebx,eax
  42ee9d:	fisub  WORD PTR [ecx]
  42ee9f:	mov    dl,0x4f
  42eea1:	(bad)  
  42eea2:	rsqrtps xmm2,XMMWORD PTR [eax+0x5c]
  42eea6:	fnstenv [edi+0x3a]
  42eea9:	ja     0x42ee8c
  42eeab:	push   eax
  42eeac:	pop    esi
  42eead:	rcl    DWORD PTR [esi-0x2d],cl
  42eeb0:	or     al,0xa1
  42eeb2:	jae    0x42ee7e
  42eeb4:	fidiv  WORD PTR ds:0xaee943da
  42eeba:	or     eax,DWORD PTR [esi-0x172a37d9]
  42eec0:	push   esp
  42eec1:	pop    edx
  42eec2:	cmp    ebp,ebp
  42eec4:	out    dx,eax
  42eec5:	mov    ds:0xeefc0164,al
  42eeca:	xor    al,0xa9
  42eecc:	(bad)  
  42eecd:	mov    DWORD PTR [ebx+ebx*4],ebx
  42eed0:	mov    ebp,ecx
  42eed2:	mov    al,ds:0xbc13cb24
  42eed7:	(bad)  
  42eed8:	ja     0x42eec2
  42eeda:	popa   
  42eedb:	sti    
  42eedc:	cmp    bl,BYTE PTR [eax+ecx*2-0x23]
  42eee0:	in     al,dx
  42eee1:	cmp    ch,BYTE PTR [ebp-0x3b]
  42eee4:	mov    dl,0xb0
  42eee6:	lds    esp,FWORD PTR [edi+edi*2-0x2f]
  42eeea:	xor    DWORD PTR [esi+ebx*8-0x25],edi
  42eeee:	call   0x9ca1:0x28c1ac0c
  42eef5:	jbe    0x42ef1f
  42eef7:	lock neg DWORD PTR [ebx+eiz*1-0x13]
  42eefc:	enter  0xbf41,0xc3
  42ef00:	xchg   ecx,eax
  42ef01:	psrlw  mm2,mm7
  42ef04:	jmp    0x42ef65
  42ef06:	(bad)  
  42ef07:	(bad)  
  42ef08:	push   eax
  42ef09:	and    BYTE PTR [ecx+0x2660c8c],ah
  42ef0f:	or     DWORD PTR [esi],ecx
  42ef11:	outs   dx,BYTE PTR ds:[esi]
  42ef12:	push   0xa5a09475
  42ef17:	mov    ss,WORD PTR [ebp+0x36]
  42ef1a:	leave  
  42ef1b:	mov    dl,BYTE PTR [ebx]
  42ef1d:	into   
  42ef1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef1f:	ins    DWORD PTR es:[edi],dx
  42ef20:	(bad)  
  42ef21:	sbb    eax,0xd2281be1
  42ef26:	les    eax,FWORD PTR [ebx-0x16]
  42ef29:	inc    eax
  42ef2a:	pop    esi
  42ef2b:	add    BYTE PTR [eax+esi*1-0x68525a9a],ch
  42ef32:	dec    edx
  42ef33:	or     BYTE PTR [edx+0x11],cl
  42ef36:	sahf   
  42ef37:	sub    esi,ebp
  42ef39:	enter  0x165d,0x6d
  42ef3d:	test   eax,0xb12a756b
  42ef42:	push   0xffffffc8
  42ef44:	and    DWORD PTR [edi-0x45259b1f],esp
  42ef4a:	mov    ebp,0x7e5c3543
  42ef4f:	xlat   BYTE PTR ds:[ebx]
  42ef50:	mov    esi,0xc66d0240
  42ef55:	sbb    ah,BYTE PTR [edi-0x8]
  42ef58:	imul   edx,DWORD PTR [edx-0x3ab86c76],0xffffffaf
  42ef5f:	adc    cl,BYTE PTR [ebx-0x43b4ee29]
  42ef65:	xor    ebx,DWORD PTR [eax-0x3d66e54f]
  42ef6b:	mov    ebp,esi
  42ef6d:	push   0xfd865dd
  42ef72:	dec    edx
  42ef73:	les    ebp,FWORD PTR [ecx-0x6e2a4563]
  42ef79:	sti    
  42ef7a:	(bad)  
  42ef7c:	adc    al,0xd4
  42ef7e:	dec    esi
  42ef7f:	pop    ss
  42ef80:	bound  esi,QWORD PTR [edi]
  42ef82:	shl    ecx,0xd7
  42ef85:	or     eax,0xebca25c6
  42ef8a:	call   0xbb9f8ed4
  42ef8f:	xchg   ebx,eax
  42ef90:	(bad)  
  42ef91:	sbb    DWORD PTR [edi-0x4396e701],ebx
  42ef97:	push   esp
  42ef98:	mov    ss,WORD PTR [edi+esi*4+0xb]
  42ef9c:	mov    ah,0xb4
  42ef9e:	dec    edx
  42ef9f:	out    0x27,al
  42efa1:	mov    DWORD PTR [ebx-0x3c],edi
  42efa4:	add    BYTE PTR ds:0x6dbe41e8,0x74
  42efab:	ds mov ebp,es
  42efae:	inc    ebx
  42efaf:	in     al,0x95
  42efb1:	dec    esp
  42efb2:	xchg   ecx,eax
  42efb3:	lock in eax,dx
  42efb5:	call   0xceaf:0x4c347a02
  42efbc:	ret    0xa8f7
  42efbf:	nop
  42efc0:	retf   0xd774
  42efc3:	sbb    DWORD PTR [eax],edi
  42efc5:	shl    BYTE PTR [ebx+eiz*8],cl
  42efc8:	pusha  
  42efc9:	sahf   
  42efca:	jne    0x42efb7
  42efcc:	pop    DWORD PTR [ecx]
  42efce:	mov    ch,0xdb
  42efd0:	xor    al,0xce
  42efd2:	mov    esp,DWORD PTR [ecx]
  42efd4:	call   0xed10fea8
  42efd9:	mov    ecx,0xd16c9eb7
  42efde:	in     eax,0xe7
  42efe0:	jg     0x42ef9a
  42efe2:	jbe    0x42f040
  42efe4:	gs and eax,0x3bc75edd
  42efea:	test   DWORD PTR cs:[edx-0x2a],0x63b08cf6
  42eff2:	mov    ah,BYTE PTR [ecx+0x336060e3]
  42eff8:	(bad)  
  42eff9:	hlt    
  42effa:	aam    0xe4
  42effc:	xchg   edi,eax
  42effd:	rcl    BYTE PTR ds:0xccd0ddf1,cl
  42f003:	int    0x86
  42f005:	stos   DWORD PTR es:[edi],eax
  42f006:	adc    eax,0x1d0a9118
  42f00b:	mov    cs,WORD PTR [edx+0x54]
  42f00e:	xchg   bl,dh
  42f010:	mov    edx,0x6b4ca776
  42f015:	mov    bh,0x94
  42f017:	mov    ss:0xd40e78fc,eax
  42f01d:	sbb    dh,bh
  42f01f:	(bad)  [edi]
  42f021:	call   0xb27b8d93
  42f026:	push   esp
  42f027:	jo     0x42f024
  42f029:	pusha  
  42f02a:	inc    edi
  42f02b:	mov    ds:0xeb1500b4,al
  42f030:	loope  0x42f09b
  42f032:	ins    DWORD PTR es:[edi],dx
  42f033:	ss lock inc ebx
  42f036:	push   eax
  42f037:	mov    ss,WORD PTR [eax-0x14f4c6]
  42f03d:	rcl    edx,cl
  42f03f:	nop
  42f040:	push   di
  42f042:	mov    esp,0x1d80b560
  42f047:	mov    BYTE PTR [ecx-0x7d],0x2c
  42f04b:	stos   DWORD PTR es:[edi],eax
  42f04c:	or     dl,bh
  42f04e:	std    
  42f04f:	mov    esp,0xcf428680
  42f054:	leavew 
  42f056:	adc    al,0x1e
  42f058:	jbe    0x42f04f
  42f05a:	(bad)  
  42f05b:	sub    DWORD PTR [eax],ecx
  42f05d:	cdq    
  42f05e:	xor    BYTE PTR [eax-0x5b],ah
  42f061:	and    cl,dl
  42f063:	ss out 0x31,eax
  42f066:	(bad)  
  42f067:	mov    al,0x6c
  42f069:	aaa    
  42f06a:	(bad)  
  42f06b:	pop    ss
  42f06c:	adc    ebx,DWORD PTR [edi]
  42f06e:	sbb    eax,0x25e7da2d
  42f073:	or     BYTE PTR [edx+eiz*2+0x46],bh
  42f077:	sub    al,0x50
  42f079:	mov    cl,0xe5
  42f07b:	nop
  42f07c:	pusha  
  42f07d:	scas   al,BYTE PTR es:[edi]
  42f07e:	xchg   esp,eax
  42f07f:	mov    cl,0xba
  42f081:	out    0x50,eax
  42f083:	adc    ch,BYTE PTR [edi+0x41]
  42f086:	add    al,0xe9
  42f088:	mov    ebp,0xf9f9a40b
  42f08d:	les    ebx,FWORD PTR [esp+edi*1+0x35]
  42f091:	aaa    
  42f092:	mov    bl,0xc0
  42f094:	jmp    0x42f107
  42f096:	sahf   
  42f097:	repnz mov edx,0x4d9674b1
  42f09d:	jnp    0x42f065
  42f09f:	pop    ebp
  42f0a0:	cmp    BYTE PTR [edx-0x48583b0f],dl
  42f0a6:	push   edx
  42f0a7:	lock sbb eax,0x51b348ab
  42f0ad:	jae    0x42f0aa
  42f0af:	outs   dx,DWORD PTR ds:[esi]
  42f0b0:	jb     0x42f09a
  42f0b2:	and    BYTE PTR [ecx+0x78b0f61c],al
  42f0b8:	inc    esp
  42f0b9:	mov    al,0x2
  42f0bb:	retf   0xcd10
  42f0be:	scas   eax,DWORD PTR es:[edi]
  42f0bf:	in     eax,0xcb
  42f0c1:	lahf   
  42f0c2:	jl     0x42f081
  42f0c4:	add    al,0x73
  42f0c6:	cmp    dh,BYTE PTR [eax+0x1ce2bafb]
  42f0cc:	sub    ebp,esp
  42f0ce:	ja     0x42f088
  42f0d0:	add    eax,0x349c14d6
  42f0d5:	(bad)  
  42f0d6:	cmp    BYTE PTR [ecx],al
  42f0d8:	mov    eax,ds:0xe5cb241b
  42f0dd:	xlat   BYTE PTR ds:[ebx]
  42f0de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0df:	popf   
  42f0e0:	mov    edi,fs
  42f0e2:	aaa    
  42f0e3:	jmp    0x42f160
  42f0e5:	mov    esi,0xd0fce61e
  42f0ea:	pop    es
  42f0eb:	sbb    eax,0xae63f475
  42f0f0:	jmp    0x42f0f4
  42f0f2:	arpl   WORD PTR ds:0x3cf1953a,di
  42f0f8:	lds    eax,FWORD PTR [eax+ebx*4]
  42f0fb:	mov    ch,0x49
  42f0fd:	cld    
  42f0fe:	loop   0x42f133
  42f100:	jb     0x42f133
  42f102:	mov    edi,0xe1812539
  42f107:	xlat   BYTE PTR ds:[ebx]
  42f108:	pop    ds
  42f109:	inc    ebp
  42f10a:	mov    ds:0x2631d6f8,al
  42f10f:	lds    ebx,FWORD PTR [edx-0x5b]
  42f112:	fabs   
  42f114:	xor    BYTE PTR [eax+0xd],cl
  42f117:	cmp    edi,DWORD PTR ds:0x2f62234a
  42f11d:	dec    eax
  42f11e:	sub    ah,BYTE PTR [esi-0x2b2742cc]
  42f124:	mov    ds:0x70d6cfcb,al
  42f129:	dec    esi
  42f12a:	test   DWORD PTR [edi],0xffff950d
  42f130:	fucomp st(4)
  42f132:	(bad)  
  42f133:	and    BYTE PTR [edi+0x67],ah
  42f136:	ds pop esi
  42f138:	xor    DWORD PTR [ebp+0x74985ac2],ebp
  42f13e:	popa   
  42f13f:	mov    al,ds:0x59a9b4aa
  42f144:	faddp  st(7),st
  42f146:	rcr    dl,0x18
  42f149:	imul   ebx,eax,0x37
  42f14c:	mov    DWORD PTR [ebp-0x2b],eax
  42f14f:	loope  0x42f1aa
  42f151:	sub    bl,BYTE PTR [edx+0x60]
  42f154:	in     eax,dx
  42f155:	(bad)  
  42f156:	xchg   edi,eax
  42f157:	int    0xd1
  42f159:	pop    edx
  42f15a:	mov    ds:0x91f2582a,al
  42f15f:	sbb    esp,DWORD PTR [esi+ebx*8]
  42f162:	mov    ebx,0xcce11ae6
  42f167:	push   esp
  42f168:	inc    eax
  42f169:	xchg   ebx,eax
  42f16a:	mov    cs,WORD PTR [ebp-0x3d58b2b9]
  42f170:	mov    dh,0x4f
  42f172:	fmul   QWORD PTR [esi-0x7867ba5]
  42f178:	arpl   WORD PTR [edx-0x3a0c6773],si
  42f17e:	sub    eax,0xb9759fe
  42f183:	or     eax,0xb285eed5
  42f188:	loop   0x42f125
  42f18a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f18b:	inc    eax
  42f18c:	test   esp,ecx
  42f18e:	xchg   ebp,eax
  42f18f:	int    0x75
  42f191:	sub    eax,0x3112a720
  42f196:	(bad)  
  42f197:	cmp    DWORD PTR [eax+ebp*4],ecx
  42f19a:	loop   0x42f1e5
  42f19c:	sahf   
  42f19d:	loopne 0x42f193
  42f19f:	or     esp,DWORD PTR [eax+0x6c]
  42f1a2:	out    dx,al
  42f1a3:	call   0xbaae9da7
  42f1a8:	out    dx,al
  42f1a9:	mov    ah,dh
  42f1ab:	int    0x88
  42f1ad:	stos   DWORD PTR es:[edi],eax
  42f1ae:	pop    edi
  42f1af:	add    DWORD PTR [ecx+0x4a],esp
  42f1b2:	popa   
  42f1b3:	std    
  42f1b4:	std    
  42f1b5:	push   eax
  42f1b6:	mov    ebx,0x3fe10641
  42f1bb:	mov    edx,0x79cf017d
  42f1c0:	outs   dx,BYTE PTR ds:[esi]
  42f1c1:	dec    edx
  42f1c2:	adc    al,0xce
  42f1c4:	pop    eax
  42f1c5:	xlat   BYTE PTR ds:[ebx]
  42f1c6:	push   esi
  42f1c7:	ins    BYTE PTR es:[edi],dx
  42f1c8:	cmp    al,0x81
  42f1ca:	dec    esp
  42f1cb:	in     al,0x94
  42f1cd:	icebp  
  42f1ce:	xchg   edi,eax
  42f1cf:	(bad)  
  42f1d0:	xor    eax,0xfc7e91f4
  42f1d5:	clc    
  42f1d6:	pop    ebx
  42f1d7:	bswap  ebp
  42f1d9:	lahf   
  42f1da:	call   0xf13b49df
  42f1df:	xchg   edi,eax
  42f1e0:	xchg   ecx,eax
  42f1e1:	sub    DWORD PTR [ebx],eax
  42f1e3:	sub    ebx,eax
  42f1e5:	mov    ah,0xfd
  42f1e7:	addr16 and al,0x1a
  42f1ea:	ret    0x27d9
  42f1ed:	cwde   
  42f1ee:	in     al,0x53
  42f1f0:	jg     0x42f22d
  42f1f2:	add    bh,BYTE PTR [edi]
  42f1f4:	cdq    
  42f1f5:	mov    ah,0x15
  42f1f7:	adc    DWORD PTR [eax-0x1f107e36],esi
  42f1fd:	push   0xf7083b00
  42f202:	repz lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f205:	stc    
  42f206:	retf   
  42f207:	add    eax,0x48e157a1
  42f20c:	jb     0x42f1ea
  42f20e:	imul   esi,DWORD PTR [ebx-0x76],0xffffff98
  42f212:	cmp    BYTE PTR [ecx-0x74],cl
  42f215:	fcomip st,st(0)
  42f217:	daa    
  42f218:	xchg   esi,eax
  42f219:	jmp    0xafb:0x66e0911e
  42f220:	dec    ecx
  42f221:	(bad)  
  42f222:	mov    eax,DWORD PTR [ecx+0x27]
  42f225:	fimul  DWORD PTR [esi-0x5698df48]
  42f22b:	xchg   bx,ax
  42f22d:	clc    
  42f22e:	add    esp,DWORD PTR [ebx+0x37]
  42f231:	(bad)  
  42f232:	push   ds
  42f233:	add    eax,esi
  42f235:	rcr    DWORD PTR [eax-0x483d6f4a],cl
  42f23b:	or     eax,0x6ceefeb7
  42f240:	add    al,0xad
  42f242:	cmp    al,0x80
  42f244:	pop    edx
  42f245:	ret    0xf7f1
  42f248:	test   DWORD PTR [ebx],esi
  42f24a:	dec    eax
  42f24b:	inc    esp
  42f24c:	mov    ch,0x3b
  42f24e:	and    BYTE PTR [esi],dl
  42f250:	push   ebp
  42f251:	add    eax,0x8e252a76
  42f256:	mov    edi,DWORD PTR [edx-0x1251b734]
  42f25c:	outs   dx,BYTE PTR ds:[esi]
  42f25d:	scas   eax,DWORD PTR es:[edi]
  42f25e:	lea    edi,[esi-0x4bd3d63b]
  42f264:	sbb    ch,bl
  42f266:	mov    al,0x4d
  42f268:	cmp    al,0x5d
  42f26a:	and    eax,0x16b76421
  42f26f:	mov    ah,0x76
  42f271:	ror    cl,1
  42f273:	mov    eax,ds:0x4076f54
  42f278:	pop    es
  42f279:	lahf   
  42f27a:	loop   0x42f2f4
  42f27c:	push   cs
  42f27d:	sub    al,0x4
  42f27f:	mov    ds:0xc3414b34,eax
  42f284:	dec    ecx
  42f285:	pop    es
  42f286:	inc    esi
  42f287:	mov    WORD PTR [esi-0x5a148d00],gs
  42f28d:	add    DWORD PTR [edx+0x138dc7],edi
  42f293:	cmp    DWORD PTR [eax],esi
  42f295:	mov    ah,0x64
  42f297:	test   al,0x33
  42f299:	jae    0x42f2e5
  42f29b:	lds    esp,FWORD PTR [esi-0x18ca4a9]
  42f2a1:	cmp    DWORD PTR [ebp+0x48cf633b],ebx
  42f2a7:	add    eax,0x70c7ce3
  42f2ac:	jl     0x42f23c
  42f2ae:	fimul  DWORD PTR [ebp+0x65]
  42f2b1:	push   edi
  42f2b2:	push   ds
  42f2b3:	ret    
  42f2b4:	pmuludq mm1,QWORD PTR [ecx-0x1e1a3ee4]
  42f2bb:	out    0x96,al
  42f2bd:	pop    ecx
  42f2be:	inc    al
  42f2c0:	pop    esi
  42f2c1:	push   cs
  42f2c2:	mov    esp,ecx
  42f2c4:	lock push 0xffffff8c
  42f2c7:	and    eax,0xf584a0b6
  42f2cc:	(bad)  
  42f2cd:	div    DWORD PTR [esi-0x59]
  42f2d0:	cdq    
  42f2d1:	cmp    al,cl
  42f2d3:	sub    DWORD PTR [edi-0x3ea2e3c9],edi
  42f2d9:	scas   al,BYTE PTR es:[edi]
  42f2da:	mov    ecx,0xc05c7454
  42f2df:	sbb    ebx,DWORD PTR [ecx-0x3c6d4940]
  42f2e5:	popf   
  42f2e6:	call   0xa0d2:0x6be1b397
  42f2ed:	jg     0x42f283
  42f2ef:	sar    BYTE PTR [ecx+0x4],1
  42f2f2:	out    0x94,eax
  42f2f4:	and    BYTE PTR [edi+0x8],ch
  42f2f7:	into   
  42f2f8:	pop    esi
  42f2f9:	pop    esp
  42f2fa:	xor    BYTE PTR [ebx],0x35
  42f2fd:	or     DWORD PTR [ecx+0x41],ecx
  42f300:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42f302:	push   ebp
  42f303:	and    DWORD PTR cs:[edx+0x49b35dac],eax
  42f30a:	add    dh,BYTE PTR [edi+0x58f26cf4]
  42f310:	mov    DWORD PTR [edx+eiz*8+0x5d],edx
  42f314:	(bad)  
  42f315:	sbb    DWORD PTR [ecx],ebx
  42f317:	in     eax,0xd9
  42f319:	adc    BYTE PTR [esi-0x44],bl
  42f31c:	cdq    
  42f31d:	and    edi,DWORD PTR [eax-0x10ca873f]
  42f323:	adc    edi,DWORD PTR [ecx+0x4]
  42f326:	push   eax
  42f327:	pop    eax
  42f328:	std    
  42f329:	sub    BYTE PTR [ecx-0x6e],bh
  42f32c:	sbb    dl,BYTE PTR [esi+0x27]
  42f32f:	sti    
  42f330:	call   0x7da387f7
  42f335:	(bad)  
  42f336:	aaa    
  42f337:	inc    eax
  42f338:	xchg   BYTE PTR [ebx+0x49],ch
  42f33b:	adc    bh,BYTE PTR [esi-0x526d9bda]
  42f341:	jmp    0x91a4611f
  42f346:	inc    esp
  42f347:	sub    bh,bl
  42f349:	push   ebx
  42f34a:	mov    ecx,DWORD PTR [ebx]
  42f34c:	pushf  
  42f34d:	jo     0x42f2d2
  42f34f:	fdivr  DWORD PTR [edx-0x360da0df]
  42f355:	scas   eax,DWORD PTR es:[edi]
  42f356:	add    DWORD PTR [eax+0x75],edx
  42f359:	aas    
  42f35a:	xor    eax,0x4804a390
  42f35f:	sbb    eax,0x6d343dcf
  42f364:	ficomp WORD PTR [edx+0x42]
  42f367:	lds    edi,FWORD PTR [eax-0x5e]
  42f36a:	pop    ebp
  42f36b:	in     eax,dx
  42f36c:	jmp    0xc7478e
  42f371:	fiadd  DWORD PTR [edx-0x6e]
  42f374:	rol    BYTE PTR [ebp-0xc718f50],1
  42f37a:	cwde   
  42f37b:	loope  0x42f311
  42f37d:	je     0x42f314
  42f37f:	push   ds
  42f380:	cmp    eax,0x2e06e6cb
  42f385:	sbb    bl,BYTE PTR [eax-0xa]
  42f388:	push   ebp
  42f389:	aad    0x55
  42f38b:	cmp    al,0x61
  42f38d:	das    
  42f38e:	pop    edx
  42f38f:	aam    0x66
  42f391:	dec    ebp
  42f392:	aaa    
  42f393:	shl    DWORD PTR [edi+0x2b],cl
  42f396:	mov    ch,0x43
  42f398:	mov    eax,0x1cbf3c22
  42f39d:	xchg   DWORD PTR [esi],esi
  42f39f:	sub    al,0x3f
  42f3a2:	sbb    DWORD PTR [esi-0x36e83e96],eax
  42f3a8:	inc    esp
  42f3a9:	xchg   ecx,eax
  42f3aa:	outs   dx,DWORD PTR ds:[esi]
  42f3ab:	nop
  42f3ac:	arpl   WORD PTR [ebx-0x14],bp
  42f3af:	(bad)  
  42f3b0:	sbb    BYTE PTR [ecx],bh
  42f3b2:	bnd js 0x42f384
  42f3b5:	mov    ch,0x4d
  42f3b7:	adc    eax,0x48702853
  42f3bc:	sbb    al,0x13
  42f3be:	shl    ah,0xd6
  42f3c1:	and    al,0x5c
  42f3c3:	xchg   edx,eax
  42f3c4:	and    BYTE PTR [esi],bl
  42f3c6:	fs fwait
  42f3c8:	pop    ebp
  42f3c9:	mov    edx,ebp
  42f3cb:	ins    DWORD PTR es:[edi],dx
  42f3cc:	mov    ecx,0xe579096e
  42f3d1:	cmp    DWORD PTR ds:0x90c2b3ff,ebx
  42f3d7:	adc    al,0xfd
  42f3d9:	aaa    
  42f3da:	cs ss out dx,eax
  42f3dd:	adc    DWORD PTR [eax+0x241b71d8],ebp
  42f3e3:	leave  
  42f3e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3e5:	iret   
  42f3e6:	push   ss
  42f3e7:	paddw  mm1,mm4
  42f3ea:	(bad)  
  42f3eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3ec:	sbb    al,0x48
  42f3ee:	cmp    al,0x68
  42f3f0:	(bad)  
  42f3f1:	sub    al,0x84
  42f3f3:	sahf   
  42f3f4:	push   ecx
  42f3f5:	nop
  42f3f6:	dec    eax
  42f3f7:	and    eax,0x74041bab
  42f3fc:	push   esi
  42f3fd:	or     bl,al
  42f3ff:	ret    0x5d28
  42f402:	sub    DWORD PTR [ecx+0x4827c521],0xffffffa3
  42f409:	out    0xcd,eax
  42f40b:	or     eax,0x9248e03d
  42f410:	js     0x42f44f
  42f412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f413:	mov    ebp,DWORD PTR [ecx]
  42f415:	push   ss
  42f416:	sbb    al,0x26
  42f418:	push   edi
  42f419:	popa   
  42f41a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f41b:	sub    BYTE PTR [ecx-0x4d821c53],bh
  42f421:	test   bh,dh
  42f423:	mov    edi,0xb3db82b1
  42f428:	ret    0xf4b3
  42f42b:	int    0x91
  42f42d:	mov    esi,0x65f417c8
  42f432:	scas   al,BYTE PTR es:[edi]
  42f433:	cwde   
  42f434:	bound  esp,QWORD PTR [esi+0x696ad71e]
  42f43a:	ret    0xfda3
  42f43d:	xlat   BYTE PTR ds:[ebx]
  42f43e:	and    eax,0x19b29b1c
  42f443:	sbb    al,BYTE PTR [eax-0x4d]
  42f446:	inc    ebx
  42f447:	fdiv   st,st(2)
  42f449:	and    al,BYTE PTR ds:0x950620bd
  42f44f:	adc    cl,BYTE PTR [edx-0xb4c552b]
  42f455:	fnstsw WORD PTR [edi+0x15b6fcfc]
  42f45b:	mov    dl,0x2a
  42f45d:	retf   0xf82e
  42f460:	fst    DWORD PTR [esi-0x9bee93a]
  42f466:	and    BYTE PTR [ecx-0x5c],cl
  42f469:	jmp    0xee40a342
  42f46e:	and    ch,0xf5
  42f471:	(bad)  
  42f472:	sbb    edi,DWORD PTR [edx-0x71]
  42f475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f476:	imul   ecx,DWORD PTR [edi+0x28c4279d],0x25
  42f47d:	jns    0x42f485
  42f47f:	mov    edi,0x4919ee7
  42f484:	sbb    BYTE PTR [ecx+0x17],0x7b
  42f488:	fbld   TBYTE PTR [edi]
  42f48a:	jno    0x42f4c0
  42f48c:	and    bh,0x91
  42f48f:	adc    al,0xe7
  42f491:	(bad)  
  42f492:	pop    ebp
  42f493:	fdiv   DWORD PTR [ebp+0x2a]
  42f496:	add    al,0xe8
  42f498:	psubsb mm1,QWORD PTR [esi-0xa3e7a61]
  42f49f:	add    eax,DWORD PTR [ecx-0x11]
  42f4a2:	sbb    eax,0x4e8f744d
  42f4a7:	push   edx
  42f4a8:	mov    bh,0x68
  42f4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f4ab:	xchg   esi,eax
  42f4ac:	cs xchg ecx,eax
  42f4ae:	sbb    BYTE PTR [ecx+0x73d74fbf],bl
  42f4b4:	xchg   ebp,eax
  42f4b5:	jne    0x42f46d
  42f4b7:	jbe    0x42f52c
  42f4b9:	push   0x17
  42f4bb:	or     al,0x14
  42f4bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f4be:	pop    ds
  42f4bf:	imul   ecx,DWORD PTR [ebx+0x3dabd64f],0x56ae7678
  42f4c9:	stc    
  42f4ca:	jns    0x42f4de
  42f4cc:	sub    al,0x81
  42f4ce:	(bad)  
  42f4cf:	cdq    
  42f4d0:	retf   0xa1d3
  42f4d3:	dec    edx
  42f4d4:	lds    esi,FWORD PTR [eax]
  42f4d6:	push   eax
  42f4d7:	xchg   esi,eax
  42f4d8:	inc    eax
  42f4d9:	push   ebp
  42f4da:	test   eax,0x5bc2e65e
  42f4df:	jmp    0x6d93:0xf3d78635
  42f4e6:	jmp    0xd818:0x5e06b72b
  42f4ed:	mov    ds:0xfdfa8522,al
  42f4f2:	clc    
  42f4f3:	or     eax,0x1a382044
  42f4f8:	fcomp  QWORD PTR [ebp+ecx*8+0x2f]
  42f4fc:	pop    ds
  42f4fd:	test   ch,ah
  42f4ff:	add    bl,ah
  42f501:	jae    0x42f538
  42f503:	inc    ebx
  42f504:	xchg   ecx,eax
  42f505:	das    
  42f506:	pop    edx
  42f507:	ins    BYTE PTR es:[edi],dx
  42f508:	cmp    ah,BYTE PTR [edx-0x17]
  42f50b:	xor    BYTE PTR [esi-0x58],al
  42f50e:	dec    eax
  42f50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f510:	adc    ebx,DWORD PTR [esi+0x46]
  42f513:	mov    al,0x7c
  42f515:	std    
  42f516:	shl    BYTE PTR [esi],cl
  42f518:	jg     0x42f582
  42f51a:	jp     0x42f4d9
  42f51c:	in     eax,0x91
  42f51e:	hlt    
  42f51f:	scas   eax,DWORD PTR es:[edi]
  42f520:	leave  
  42f521:	pop    ebx
  42f522:	and    al,cl
  42f524:	fld    QWORD PTR [ebx+0x4a]
  42f527:	icebp  
  42f528:	sub    DWORD PTR [edi+0x10d52229],ecx
  42f52e:	add    ah,dl
  42f530:	stos   BYTE PTR es:[edi],al
  42f531:	cmp    al,cl
  42f533:	push   ss
  42f534:	test   BYTE PTR [ebp+0x27288443],bh
  42f53a:	xchg   BYTE PTR [ebx],dh
  42f53c:	mov    eax,0xc7e3ec1d
  42f541:	out    0x83,eax
  42f543:	or     DWORD PTR [edx+0x74031064],edx
  42f549:	retf   0xa895
  42f54c:	xor    eax,0x65b95c1c
  42f551:	mov    dl,0x61
  42f553:	mov    esi,0x2fc86191
  42f558:	rol    BYTE PTR [eax+0x75],cl
  42f55b:	mov    DWORD PTR [edx-0x4b],0xbedee96d
  42f562:	repnz and eax,0x9e8b6b18
  42f568:	enter  0xd46a,0x7a
  42f56c:	popa   
  42f56d:	(bad)  
  42f56f:	sar    BYTE PTR [eax+ebp*1+0x79737440],1
  42f576:	(bad)  
  42f577:	pop    edx
  42f578:	retf   0xf6cf
  42f57b:	rcr    DWORD PTR [eax-0xcd34bea],cl
  42f581:	mov    ebx,0x89e6a785
  42f586:	fisttp DWORD PTR [eax]
  42f588:	jge    0x42f516
  42f58a:	pop    DWORD PTR [ebp-0x16]
  42f58d:	mov    BYTE PTR [ebp+0xa],ch
  42f590:	fstp   st(6)
  42f592:	loop   0x42f5cf
  42f594:	sub    al,0x41
  42f596:	pop    esp
  42f597:	sbb    al,0xc2
  42f599:	stc    
  42f59a:	icebp  
  42f59b:	jmp    0x96d0b9b
  42f5a0:	(bad)  
  42f5a1:	add    ebp,DWORD PTR [eax]
  42f5a3:	enter  0xf7a,0xeb
  42f5a7:	jmp    0xe3cd39f3
  42f5ac:	loope  0x42f5f7
  42f5ae:	popf   
  42f5af:	shl    BYTE PTR [ecx],cl
  42f5b1:	cmp    eax,0xd2c3932e
  42f5b6:	in     eax,0x6f
  42f5b8:	jge    0x42f621
  42f5ba:	ins    DWORD PTR es:[edi],dx
  42f5bb:	xchg   DWORD PTR [esp+edi*1+0x40],eax
  42f5bf:	cmp    BYTE PTR [eax],0x19
  42f5c2:	stc    
  42f5c3:	mov    edx,0xbb4c772c
  42f5c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5c9:	xor    al,0xd6
  42f5cb:	mov    dh,0xfd
  42f5cd:	dec    esp
  42f5ce:	pop    eax
  42f5cf:	sub    ebx,DWORD PTR [eax]
  42f5d1:	xor    DWORD PTR [ecx+eiz*4],edi
  42f5d4:	push   ebx
  42f5d5:	lods   eax,DWORD PTR ds:[esi]
  42f5d6:	cmp    BYTE PTR [esi-0x2],bl
  42f5d9:	sub    BYTE PTR [esi+0x20],bh
  42f5dc:	xchg   ebp,eax
  42f5dd:	hlt    
  42f5de:	std    
  42f5df:	or     eax,0xd6037882
  42f5e4:	xchg   DWORD PTR [ebx+esi*2],edx
  42f5e7:	in     al,0xd7
  42f5e9:	pushfw 
  42f5eb:	jge    0x42f592
  42f5ed:	es pop ebp
  42f5ef:	and    eax,0xe79e2819
  42f5f4:	mov    cl,0x3e
  42f5f6:	and    dl,dh
  42f5f8:	mov    bh,0x8
  42f5fa:	jae    0x42f66b
  42f5fc:	xchg   ecx,eax
  42f5fd:	sbb    dl,BYTE PTR [edi]
  42f5ff:	in     eax,dx
  42f600:	leave  
  42f601:	test   BYTE PTR fs:[ecx],al
  42f604:	sbb    eax,0xd2122c7f
  42f609:	or     DWORD PTR [edx+0x4f105f86],0xdb7204c5
  42f613:	inc    ebp
  42f614:	fimul  DWORD PTR [ecx+0x7dbc5798]
  42f61a:	repnz fdiv DWORD PTR [ebp+0x129aae5f]
  42f621:	into   
  42f622:	dec    ecx
  42f623:	cdq    
  42f624:	ja     0x42f5b7
  42f626:	xchg   esp,eax
  42f627:	xor    al,0xd7
  42f629:	test   al,0x1e
  42f62b:	or     ch,al
  42f62d:	pusha  
  42f62e:	sbb    esi,DWORD PTR [esi]
  42f630:	add    eax,DWORD PTR [ecx+0x1]
  42f633:	jmp    DWORD PTR [edx+ebx*8]
  42f636:	xor    ecx,DWORD PTR [edi+0x532de5da]
  42f63c:	add    al,0x6c
  42f63e:	fstp   DWORD PTR [eax]
  42f640:	and    ah,0xb6
  42f643:	js     0x42f5fc
  42f645:	call   0x16210e5a
  42f64a:	mov    dh,0x2a
  42f64c:	es ret 0x130c
  42f650:	cmp    BYTE PTR [esi],0x5a
  42f653:	xchg   ecx,eax
  42f654:	ds stc 
  42f656:	sar    DWORD PTR [ebp-0x1f],0xb6
  42f65a:	out    dx,eax
  42f65b:	div    DWORD PTR [ebx-0x57065692]
  42f661:	adc    al,0x8d
  42f663:	pop    esp
  42f664:	sub    DWORD PTR [edi],ecx
  42f666:	loope  0x42f69d
  42f668:	js     0x42f6d9
  42f66a:	mov    bh,0x42
  42f66c:	jno    0x42f6bb
  42f66e:	outs   dx,BYTE PTR ds:[esi]
  42f66f:	(bad)  
  42f670:	push   edi
  42f671:	arpl   WORD PTR [eax+0x1b6416b9],dx
  42f677:	imul   eax,DWORD PTR [eax+0x50],0xfffffff4
  42f67b:	jmp    0x42f629
  42f67d:	ins    DWORD PTR es:[edi],dx
  42f67e:	mov    ah,0x46
  42f680:	mov    es,WORD PTR [ebx-0x66]
  42f683:	xchg   edx,eax
  42f684:	lods   al,BYTE PTR ds:[esi]
  42f685:	mov    esi,0xbbb0cddc
  42f68a:	dec    ebp
  42f68b:	jmp    0x992d:0x61ae2ce7
  42f692:	mov    eax,DWORD PTR [ecx+0x795ad4d1]
  42f698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f699:	sti    
  42f69a:	ror    ecx,0xe1
  42f69d:	outs   dx,DWORD PTR ds:[esi]
  42f69e:	xor    bl,BYTE PTR [edx]
  42f6a0:	clc    
  42f6a1:	cmp    esp,0xe728beeb
  42f6a7:	cdq    
  42f6a8:	pop    ss
  42f6a9:	div    ah
  42f6ab:	jo     0x42f669
  42f6ad:	push   0x11
  42f6af:	dec    esp
  42f6b0:	stos   DWORD PTR es:[edi],eax
  42f6b1:	mov    ds:0x6729c3c4,al
  42f6b6:	rcl    DWORD PTR [ecx-0x16],1
  42f6b9:	xor    eax,0xd1db95fd
  42f6be:	add    ebp,ebx
  42f6c0:	jb     0x42f6a3
  42f6c2:	inc    edx
  42f6c3:	jmp    0x42f651
  42f6c5:	xchg   ecx,eax
  42f6c6:	jp     0x42f660
  42f6c8:	cmc    
  42f6c9:	repz fwait
  42f6cb:	push   edx
  42f6cc:	das    
  42f6cd:	add    eax,0xc8dcf8f5
  42f6d2:	add    al,0xd1
  42f6d4:	fidiv  DWORD PTR [eax+0x65029931]
  42f6da:	pop    es
  42f6db:	push   cs
  42f6dc:	je     0x42f704
  42f6de:	call   0x89ee:0x6a3d3f74
  42f6e5:	jnp    0x42f6ff
  42f6e7:	int    0x4a
  42f6e9:	and    al,0x7d
  42f6eb:	pushf  
  42f6ec:	cmp    eax,0x9b8fc622
  42f6f1:	push   ebp
  42f6f2:	test   BYTE PTR [esi+0x6d],al
  42f6f5:	(bad)  
  42f6f6:	jae    0x42f721
  42f6f8:	pushf  
  42f6f9:	mov    ebx,0xc133d932
  42f6fe:	cs mov ah,0xf7
  42f701:	repnz pop ss
  42f703:	xor    eax,0xf491f16f
  42f708:	pop    edx
  42f709:	stos   BYTE PTR es:[edi],al
  42f70a:	outs   dx,DWORD PTR ds:[esi]
  42f70b:	sub    al,0x36
  42f70d:	xlat   BYTE PTR ds:[ebx]
  42f70e:	stos   DWORD PTR es:[edi],eax
  42f70f:	cmp    DWORD PTR [ebp-0x61],ebx
  42f712:	mov    ah,0xf5
  42f714:	sbb    DWORD PTR [ecx-0x61194999],esi
  42f71a:	(bad)  [edi+0x1c]
  42f71d:	jnp    0x42f753
  42f71f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f720:	cmp    edi,DWORD PTR [esi-0x2a]
  42f723:	outs   dx,DWORD PTR ds:[esi]
  42f724:	(bad)  
  42f725:	(bad)  
  42f727:	inc    ecx
  42f728:	xchg   edi,eax
  42f729:	pushf  
  42f72a:	fidiv  DWORD PTR [eax+0x9]
  42f72d:	pusha  
  42f72e:	pop    ds
  42f72f:	xor    eax,0x50c3f58c
  42f734:	repnz adc eax,0x6007f713
  42f73a:	mov    esi,0x822d1433
  42f73f:	adc    BYTE PTR [ebp-0x72],0x1b
  42f743:	xchg   edx,eax
  42f744:	add    al,bh
  42f746:	mov    dl,al
  42f748:	(bad)  
  42f749:	xchg   ebx,eax
  42f74a:	jo     0x42f7b4
  42f74c:	push   0x1b6acdf7
  42f751:	aam    0x1a
  42f753:	mov    ds:0x8e071aa8,al
  42f758:	mov    esi,0xc2cef382
  42f75d:	enter  0x1568,0x4d
  42f761:	into   
  42f762:	aaa    
  42f763:	or     ecx,esp
  42f765:	fstp   st(7)
  42f767:	imul   ecx,DWORD PTR [ebx+0x1351ccd2],0xffffffb5
  42f76e:	shl    dl,cl
  42f770:	dec    DWORD PTR [eax-0x20]
  42f773:	bound  ebp,QWORD PTR [edx-0x52721558]
  42f779:	mov    ebp,0x8058adf4
  42f77e:	loopne 0x42f7a2
  42f780:	sub    cl,BYTE PTR [eax+ebx*1-0x48f34cdb]
  42f787:	mov    esp,0x9c697ba8
  42f78c:	inc    esp
  42f78d:	xchg   ebp,eax
  42f78e:	lods   al,BYTE PTR ds:[esi]
  42f78f:	sbb    bl,BYTE PTR [eax]
  42f791:	(bad)  
  42f792:	fisub  DWORD PTR [eax]
  42f794:	push   ss
  42f795:	fdivr  QWORD PTR [edx+0x21]
  42f798:	pop    ebp
  42f799:	xor    dh,0x1c
  42f79c:	scas   eax,DWORD PTR es:[edi]
  42f79d:	mov    eax,0x1d9fad09
  42f7a2:	and    bh,dh
  42f7a4:	and    DWORD PTR [ecx-0x777d220e],ecx
  42f7aa:	clc    
  42f7ab:	popa   
  42f7ac:	nop
  42f7ad:	lods   al,BYTE PTR ds:[esi]
  42f7ae:	lods   eax,DWORD PTR ds:[esi]
  42f7af:	aam    0xb3
  42f7b1:	sahf   
  42f7b2:	cli    
  42f7b3:	cmp    esi,DWORD PTR [ecx]
  42f7b5:	popa   
  42f7b6:	sahf   
  42f7b7:	sbb    ah,BYTE PTR [esi+0x78]
  42f7ba:	jb     0x42f761
  42f7bc:	xor    BYTE PTR [eax+0x29b419d0],cl
  42f7c2:	jmp    0x4323:0x537641a7
  42f7c9:	mov    cl,0x81
  42f7cb:	popa   
  42f7cc:	dec    edx
  42f7cd:	lods   eax,DWORD PTR ds:[esi]
  42f7ce:	xor    eax,0x6adcf323
  42f7d3:	das    
  42f7d4:	jo     0x42f79f
  42f7d6:	dec    eax
  42f7d7:	sti    
  42f7d8:	mov    ds:0xe7760f1f,al
  42f7dd:	or     ecx,esi
  42f7df:	sub    BYTE PTR ds:0xcbb021c3,dh
  42f7e5:	push   edx
  42f7e6:	repz in eax,dx
  42f7e8:	mov    esp,0xa3fe16c3
  42f7ed:	jmp    0x8f16d3c8
  42f7f2:	jecxz  0x42f7f8
  42f7f4:	xchg   DWORD PTR [edi-0x30adce36],edi
  42f7fa:	popa   
  42f7fb:	loop   0x42f83d
  42f7fd:	dec    edi
  42f7fe:	ins    BYTE PTR es:[edi],dx
  42f7ff:	adc    eax,0xef504381
  42f804:	jne    0x42f7b4
  42f806:	ss adc bh,bh
  42f809:	sbb    BYTE PTR [ecx+esi*4-0x31],ch
  42f80d:	mov    eax,0x84f266b5
  42f812:	dec    esi
  42f813:	int    0x83
  42f815:	aas    
  42f816:	mov    eax,ds:0xfad89665
  42f81b:	add    edi,DWORD PTR [esi]
  42f81d:	pop    ebx
  42f81e:	cdq    
  42f81f:	xchg   esi,eax
  42f820:	ds loopne 0x42f800
  42f823:	lock lea esp,[esp+ecx*4-0x4b]
  42f828:	xor    al,0xfc
  42f82a:	mov    ah,0xd8
  42f82c:	sbb    ebx,edx
  42f82e:	or     ebp,ecx
  42f830:	pop    ebx
  42f831:	dec    esi
  42f832:	in     eax,0x83
  42f834:	call   0x59e93c8d
  42f839:	and    DWORD PTR [ecx],esi
  42f83b:	mov    ebp,0xc36e24eb
  42f840:	cli    
  42f841:	mov    dl,0x5
  42f843:	adc    esp,DWORD PTR [ebx]
  42f845:	sbb    BYTE PTR ds:0x7de88c33,dl
  42f84b:	xchg   esp,eax
  42f84c:	call   0xd9accb69
  42f851:	pusha  
  42f852:	sbb    ecx,DWORD PTR [ebp+0x54]
  42f855:	xor    al,0x31
  42f857:	ror    BYTE PTR ds:0x3e81320,0xe3
  42f85e:	cmp    ebp,DWORD PTR [edx+ebp*2]
  42f861:	mov    dl,0x66
  42f863:	jge    0x42f8b6
  42f865:	pop    eax
  42f866:	pop    ebx
  42f867:	in     al,dx
  42f868:	leave  
  42f869:	mov    bl,0x77
  42f86b:	sbb    eax,DWORD PTR [ecx-0x13]
  42f86e:	cmp    eax,0xa3235df7
  42f873:	mov    eax,ds:0xe2bd9d77
  42f878:	xchg   ecx,eax
  42f879:	adc    dl,cl
  42f87b:	mov    ah,0xef
  42f87d:	jg     0x42f872
  42f87f:	push   es
  42f880:	in     al,dx
  42f881:	dec    esp
  42f882:	in     eax,0xb9
  42f884:	lds    edi,FWORD PTR [esi+ebx*4-0x174c6c26]
  42f88b:	loop   0x42f8a2
  42f88d:	bound  esi,QWORD PTR [edi-0x550b5a1c]
  42f893:	call   0x1e1b:0x9d734770
  42f89a:	and    ebp,0x3656f7a1
  42f8a0:	and    ah,ch
  42f8a2:	add    al,0x6d
  42f8a4:	inc    eax
  42f8a5:	add    DWORD PTR [eax+ecx*1],0x11
  42f8a9:	fsub   DWORD PTR [ebx+0x7c]
  42f8ac:	sub    eax,ecx
  42f8ae:	inc    ebp
  42f8af:	jbe    0x42f858
  42f8b1:	pop    esp
  42f8b2:	cmp    bl,al
  42f8b4:	nop
  42f8b5:	pushf  
  42f8b6:	push   es
  42f8b7:	mov    dh,0xb
  42f8b9:	hlt    
  42f8ba:	sub    DWORD PTR [eax],ebx
  42f8bc:	xor    BYTE PTR [edx+0x6c794835],dh
  42f8c2:	xor    bl,BYTE PTR [edx]
  42f8c4:	outs   dx,DWORD PTR ds:[esi]
  42f8c5:	xchg   ebx,ebx
  42f8c7:	stos   BYTE PTR es:[edi],al
  42f8c8:	inc    eax
  42f8c9:	inc    esp
  42f8ca:	dec    ecx
  42f8cb:	add    bh,0x37
  42f8ce:	enter  0xf483,0x55
  42f8d2:	jne    0x42f90d
  42f8d4:	pusha  
  42f8d5:	ins    DWORD PTR es:[edi],dx
  42f8d6:	mov    edi,0xc26a9341
  42f8db:	xlat   BYTE PTR ds:[ebx]
  42f8dc:	add    ebp,edi
  42f8de:	dec    edx
  42f8df:	mov    bh,0x60
  42f8e1:	add    ch,bl
  42f8e3:	xchg   cl,dl
  42f8e5:	or     ah,bl
  42f8e7:	or     cl,ah
  42f8e9:	sub    dl,ah
  42f8eb:	pop    edx
  42f8ec:	xchg   esp,eax
  42f8ed:	test   BYTE PTR [ebx-0x78d4e6d3],bh
  42f8f3:	sub    al,0x47
  42f8f5:	lock jno 0x42f887
  42f8f8:	adc    eax,0xd813b424
  42f8fd:	les    ebx,FWORD PTR [eax-0x272b1bdd]
  42f903:	push   ebp
  42f904:	mov    edi,0xf57b3344
  42f909:	fcmovnb st,st(1)
  42f90b:	adc    al,0x30
  42f90d:	lahf   
  42f90e:	jle    0x42f8e2
  42f910:	retf   
  42f911:	in     al,dx
  42f912:	xchg   ebx,eax
  42f913:	jb     0x42f906
  42f915:	push   ss
  42f916:	lock adc ebx,ebp
  42f919:	inc    esi
  42f91a:	es jnp 0x42f90d
  42f91d:	pop    ebx
  42f91e:	hlt    
  42f91f:	or     ah,BYTE PTR [esi]
  42f921:	aas    
  42f922:	sar    BYTE PTR [ebx+0x298f13ed],1
  42f928:	(bad)  
  42f929:	cmp    eax,0x42511861
  42f92e:	jb     0x42f952
  42f930:	int    0xdc
  42f932:	mov    dh,0xc0
  42f934:	ret    
  42f935:	add    DWORD PTR ds:0x4a4305f7,edi
  42f93b:	mov    ds:0x2ee479b7,al
  42f940:	jle    0x42f97e
  42f942:	std    
  42f943:	in     al,0x3f
  42f945:	jg     0x42f94b
  42f947:	jne    0x42f8e9
  42f949:	(bad)  
  42f94a:	pshufw mm5,QWORD PTR [ebx-0x44],0x70
  42f94f:	clc    
  42f950:	stos   BYTE PTR es:[edi],al
  42f951:	cmc    
  42f952:	cmp    cl,BYTE PTR [ebx]
  42f954:	stc    
  42f955:	sahf   
  42f956:	ds add al,0x61
  42f959:	xchg   DWORD PTR [eax],edi
  42f95b:	jmp    0xa7ba:0xb58761c0
  42f962:	jo     0x42f9ac
  42f964:	stc    
  42f965:	inc    ecx
  42f966:	push   0xffffff98
  42f968:	shl    eax,0xc9
  42f96b:	js     0x42f92d
  42f96d:	mov    eax,ds:0xce422135
  42f972:	xor    BYTE PTR [eax-0x4001d2c5],bl
  42f978:	sbb    ch,cl
  42f97a:	shl    DWORD PTR [ebp-0x782ec489],1
  42f980:	outs   dx,DWORD PTR ds:[esi]
  42f981:	in     eax,dx
  42f982:	jg     0x42f914
  42f984:	xchg   edx,eax
  42f985:	pushf  
  42f986:	push   esp
  42f987:	jae    0x42f9c2
  42f989:	std    
  42f98a:	push   es
  42f98b:	adc    eax,0x1b92a232
  42f990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f991:	xchg   BYTE PTR [edx+ebp*8-0x16c2657],bl
  42f998:	sub    DWORD PTR [ebp+0x69],edi
  42f99b:	dec    eax
  42f99c:	clc    
  42f99d:	das    
  42f99e:	inc    edx
  42f99f:	shl    DWORD PTR [ecx-0x53eb8a07],cl
  42f9a5:	loope  0x42f981
  42f9a7:	pop    es
  42f9a8:	push   ebx
  42f9a9:	stos   DWORD PTR es:[edi],eax
  42f9aa:	adc    BYTE PTR [edx-0x1615eea8],al
  42f9b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9b1:	push   cs
  42f9b2:	fistp  DWORD PTR [ebx-0x31f196fd]
  42f9b8:	fld    DWORD PTR [ebx+esi*8]
  42f9bb:	mov    bl,0xae
  42f9bd:	mov    bh,0x8e
  42f9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9c0:	pushf  
  42f9c1:	(bad)  
  42f9c2:	mov    dh,BYTE PTR [edx+0x5d95c003]
  42f9c8:	xor    BYTE PTR [esi-0x1c],0xe8
  42f9cc:	push   cs
  42f9cd:	xor    edx,DWORD PTR [ebp+0x59d84040]
  42f9d3:	xchg   ebp,eax
  42f9d4:	adc    DWORD PTR [edx+edx*1],ebp
  42f9d7:	imul   eax,DWORD PTR [ebx],0x37d22f25
  42f9dd:	jne    0x42f978
  42f9df:	mov    bh,0x8
  42f9e1:	retf   0x201
  42f9e4:	out    0x74,al
  42f9e6:	call   0x673313f0
  42f9eb:	into   
  42f9ec:	neg    BYTE PTR [eax-0x2867aef5]
  42f9f2:	xchg   edx,eax
  42f9f3:	stc    
  42f9f4:	fwait
  42f9f5:	pop    es
  42f9f6:	push   0xffffffb0
  42f9f8:	inc    ebx
  42f9f9:	imul   ebx,DWORD PTR [eax],0x2f844027
  42f9ff:	sbb    BYTE PTR [eax+ecx*8],0x7d
  42fa03:	mov    ecx,0xfeb98caa
  42fa08:	fnsave [edx+0x19]
  42fa0b:	adc    BYTE PTR [ecx+ebx*2],al
  42fa0e:	jecxz  0x42fa78
  42fa10:	jmp    0x4da47f4c
  42fa15:	cwde   
  42fa16:	in     al,0x2b
  42fa18:	sbb    ah,BYTE PTR fs:[ebp-0x10]
  42fa1c:	dec    ecx
  42fa1d:	pop    cx
  42fa1f:	out    dx,al
  42fa20:	mov    ch,0xaa
  42fa22:	or     al,BYTE PTR [eax-0x2ec74e1]
  42fa28:	leave  
  42fa29:	mov    al,ds:0x436bdff7
  42fa2e:	xor    esp,DWORD PTR [ecx+esi*8+0x5f723b25]
  42fa35:	mov    gs,WORD PTR [ebx+0x417005ac]
  42fa3b:	clc    
  42fa3c:	std    
  42fa3d:	mov    ecx,0xc7aa266d
  42fa42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa43:	or     dh,dh
  42fa45:	or     DWORD PTR [eax+0x6e],ebx
  42fa48:	or     eax,0x8be7704b
  42fa4d:	jecxz  0x42fa67
  42fa4f:	stos   BYTE PTR es:[edi],al
  42fa50:	sbb    cl,BYTE PTR [eax+0x1f9575e4]
  42fa56:	dec    esi
  42fa58:	dec    ebp
  42fa59:	jg     0x42fab5
  42fa5b:	cmp    BYTE PTR [ebx-0xbf9dd73],ah
  42fa61:	mov    ?,WORD PTR [esi-0x79372204]
  42fa67:	clc    
  42fa68:	sub    dh,ch
  42fa6a:	inc    edi
  42fa6b:	mov    WORD PTR ds:0x19638b6d,ss
  42fa71:	pop    edi
  42fa72:	or     dl,bh
  42fa74:	idiv   BYTE PTR ds:0xbfaaaf55
  42fa7a:	loope  0x42fabd
  42fa7c:	mov    dh,0x91
  42fa7e:	mov    ds:0x3a658391,al
  42fa83:	xchg   bh,ah
  42fa85:	jl     0x42faa9
  42fa87:	xor    esp,DWORD PTR ds:0xb2d0c688
  42fa8d:	mov    BYTE PTR [ecx+edx*4],dl
  42fa90:	rol    ebx,cl
  42fa92:	es mov dh,0xef
  42fa95:	pushf  
  42fa96:	loop   0x42fa26
  42fa98:	test   BYTE PTR [edi-0x74],al
  42fa9b:	push   esp
  42fa9c:	add    eax,DWORD PTR ds:0xb8efbcd3
  42faa2:	retf   
  42faa3:	je     0x42fa4d
  42faa5:	or     al,0xf1
  42faa7:	in     al,0xf4
  42faa9:	pop    ss
  42faaa:	or     eax,0xfa14962f
  42faaf:	nop
  42fab0:	mov    esi,0x2880fbd0
  42fab5:	loope  0x42fa73
  42fab7:	pusha  
  42fab8:	jmp    0x49a74feb
  42fabd:	add    BYTE PTR [ebx-0x49],dl
  42fac0:	or     DWORD PTR [ebx-0xd0aafd1],ecx
  42fac6:	and    al,0x72
  42fac8:	ror    DWORD PTR [eax],1
  42faca:	jg     0x42fb23
  42facc:	mov    WORD PTR [ebp+0x6067f179],cs
  42fad2:	push   ecx
  42fad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fad4:	push   es
  42fad5:	pop    edi
  42fad6:	(bad)  
  42fad8:	(bad)  
  42fad9:	arpl   WORD PTR [edi+0x18162c2c],si
  42fadf:	mov    al,0x91
  42fae1:	in     eax,0xa1
  42fae3:	bound  esi,QWORD PTR [edi]
  42fae5:	out    dx,eax
  42fae6:	xchg   ecx,eax
  42fae7:	xor    al,0x57
  42fae9:	add    esi,DWORD PTR [eax+0x16]
  42faec:	xor    BYTE PTR [esi+0x3e],ch
  42faef:	enter  0xcb0e,0xa2
  42faf3:	mov    dl,0xf4
  42faf5:	push   0xfae9e94d
  42fafa:	jbe    0x42fb42
  42fafc:	inc    esp
  42fafd:	mov    es,WORD PTR [ebx+edx*2-0x13a19b3f]
  42fb04:	inc    ebp
  42fb05:	call   0xfd52:0x6d5472ab
  42fb0c:	out    0x8a,al
  42fb0e:	push   edx
  42fb0f:	(bad)  
  42fb10:	sub    eax,0x59d8190e
  42fb15:	mov    ebp,0x55d188bc
  42fb1a:	cli    
  42fb1b:	jno    0x42fae8
  42fb1d:	call   0x6bc78948
  42fb22:	jo     0x42fac3
  42fb24:	add    DWORD PTR [edi-0x4fa8d802],0x77
  42fb2b:	test   edi,0x436b155
  42fb31:	in     al,dx
  42fb32:	sti    
  42fb33:	fdivr  QWORD PTR [edx]
  42fb35:	popf   
  42fb36:	mov    dh,0xe4
  42fb38:	jl     0x42faba
  42fb3a:	ds pop edi
  42fb3c:	pop    esi
  42fb3d:	push   cs
  42fb3e:	leave  
  42fb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb40:	jge    0x42fadf
  42fb42:	xlat   BYTE PTR ds:[ebx]
  42fb43:	test   eax,0x1ac8fab4
  42fb48:	rcl    DWORD PTR [ebx+0x2afc2dff],cl
  42fb4e:	rcr    bh,cl
  42fb50:	jecxz  0x42fb4d
  42fb52:	rcl    BYTE PTR [ecx],cl
  42fb54:	cdq    
  42fb55:	out    0xc0,eax
  42fb57:	sub    eax,DWORD PTR [ecx+0x5]
  42fb5a:	xchg   ebx,eax
  42fb5b:	sbb    ebp,esp
  42fb5d:	das    
  42fb5e:	xchg   edx,eax
  42fb5f:	ss xchg ecx,esp
  42fb62:	xchg   DWORD PTR [ebp+0x59c2ae4c],eax
  42fb68:	stc    
  42fb69:	lds    eax,FWORD PTR [ebp+0x5e2bf40c]
  42fb6f:	adc    DWORD PTR [ebp+0x34],ebx
  42fb72:	fwait
  42fb73:	out    dx,eax
  42fb74:	or     al,bl
  42fb76:	loopne 0x42fb3a
  42fb78:	pop    eax
  42fb79:	out    dx,al
  42fb7a:	or     cl,0x81
  42fb7d:	clc    
  42fb7e:	and    bl,BYTE PTR [eax+0x3d]
  42fb81:	xchg   BYTE PTR [edx-0x1b],dl
  42fb84:	jp     0x42fb61
  42fb86:	add    eax,DWORD PTR [edx]
  42fb88:	sub    edi,DWORD PTR [ecx+0x7d]
  42fb8b:	es jmp 0x4952c99a
  42fb91:	jno    0x42fc03
  42fb93:	pusha  
  42fb94:	cdq    
  42fb95:	or     ah,BYTE PTR [esi-0x4f9721b]
  42fb9b:	and    DWORD PTR [esi],edx
  42fb9d:	fisub  DWORD PTR [esp+ebp*8+0x70]
  42fba1:	out    0xad,al
  42fba3:	outs   dx,BYTE PTR ds:[esi]
  42fba4:	in     al,0x16
  42fba6:	cmp    al,0x9e
  42fba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fba9:	cmp    dh,dh
  42fbab:	imul   ebp,DWORD PTR [esi+0x71],0x31
  42fbaf:	push   eax
  42fbb0:	xchg   esi,eax
  42fbb1:	xor    ch,BYTE PTR [edx-0x68]
  42fbb4:	ror    BYTE PTR [edi+esi*4],cl
  42fbb7:	pushf  
  42fbb8:	pop    ebp
  42fbb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbba:	sahf   
  42fbbb:	and    ebx,DWORD PTR [ebp+0x31]
  42fbbe:	shr    ebp,0xe1
  42fbc1:	imul   ecx,ecx,0xfec9fd19
  42fbc7:	jp     0x42fb4b
  42fbc9:	push   ecx
  42fbca:	mov    ebp,0x3f191e2e
  42fbcf:	rcr    BYTE PTR [edi+0x6d],1
  42fbd2:	bound  ecx,QWORD PTR [ecx+0x79778803]
  42fbd8:	cmp    DWORD PTR [ecx-0x450608c4],eax
  42fbde:	xchg   ecx,eax
  42fbdf:	pop    eax
  42fbe0:	inc    ebp
  42fbe1:	sbb    al,0xe3
  42fbe3:	mov    eax,ds:0x1a58a7c4
  42fbe8:	jne    0x42fc16
  42fbea:	pop    ecx
  42fbeb:	mov    esp,esi
  42fbed:	cmc    
  42fbee:	push   ebx
  42fbef:	fldcw  WORD PTR [eax+0x7b]
  42fbf2:	scas   eax,DWORD PTR es:[edi]
  42fbf3:	inc    eax
  42fbf4:	test   al,0x9d
  42fbf6:	mov    eax,ds:0x330fdd78
  42fbfb:	pop    ds
  42fbfc:	jne    0x42fbb5
  42fbfe:	mov    ds:0x8c069078,al
  42fc03:	pop    esi
  42fc04:	sbb    edi,ebx
  42fc06:	rol    BYTE PTR [edi-0x4ad691ad],1
  42fc0c:	pop    es
  42fc0d:	fbstp  TBYTE PTR [esi]
  42fc0f:	push   ebx
  42fc10:	fisttp DWORD PTR [ecx+edi*8+0x4d]
  42fc14:	adc    al,0x76
  42fc16:	and    edi,edi
  42fc18:	dec    edi
  42fc19:	mov    cl,0x5d
  42fc1b:	rcr    DWORD PTR [edi+0x4e550a97],cl
  42fc21:	jns    0x42fc61
  42fc23:	rol    DWORD PTR [edi+0xc],1
  42fc26:	loopne 0x42fc94
  42fc28:	adc    esi,edi
  42fc2a:	imul   edx,DWORD PTR [ecx],0xf4a86d8a
  42fc30:	sub    DWORD PTR [ebx+0x73],edi
  42fc33:	push   ss
  42fc34:	jnp    0x42fc29
  42fc36:	sti    
  42fc37:	cmp    esp,DWORD PTR [ecx-0x4f]
  42fc3a:	push   0x65
  42fc3c:	fisub  WORD PTR [ecx+0x3e]
  42fc3f:	add    BYTE PTR [eax+0x74],bh
  42fc42:	dec    esp
  42fc43:	rcl    BYTE PTR [ebx],0xc6
  42fc46:	add    cl,ch
  42fc48:	adc    DWORD PTR [edx+edi*2],0x6
  42fc4c:	stos   BYTE PTR es:[edi],al
  42fc4d:	cdq    
  42fc4e:	clc    
  42fc4f:	imul   edi,DWORD PTR [esi+ecx*2],0x237a9fc1
  42fc56:	iret   
  42fc57:	imul   ebx,DWORD PTR [ebx+0x4f5e91a6],0xffffff95
  42fc5e:	int3   
  42fc5f:	pop    edi
  42fc60:	and    eax,0xb8057f4b
  42fc65:	xor    bl,BYTE PTR [edx+0x7dd6f8cf]
  42fc6b:	or     ecx,ebp
  42fc6d:	xor    al,0x1a
  42fc6f:	sub    BYTE PTR [ebx],0x9b
  42fc72:	push   esp
  42fc73:	sbb    dh,BYTE PTR [ebx+0x23ea6179]
  42fc79:	les    ecx,FWORD PTR [eax+0x1a]
  42fc7c:	mov    es:0x1d001de5,eax
  42fc82:	repz inc esi
  42fc84:	mov    edi,0x7a11d96c
  42fc89:	sub    al,0x1d
  42fc8b:	lods   eax,DWORD PTR ds:[esi]
  42fc8c:	xchg   edi,eax
  42fc8d:	mov    ecx,0x68c9dc80
  42fc92:	adc    dl,ch
  42fc94:	pop    edi
  42fc95:	mov    al,ds:0x74feb2d4
  42fc9a:	hlt    
  42fc9b:	sahf   
  42fc9c:	add    eax,0xa235d264
  42fca1:	lea    esp,[ebp+ebp*8+0x674c2e4e]
  42fca8:	push   0xffffffd5
  42fcaa:	push   esi
  42fcab:	mov    ch,0x4
  42fcad:	ficomp DWORD PTR [ecx]
  42fcaf:	scas   eax,DWORD PTR es:[edi]
  42fcb0:	clc    
  42fcb1:	add    al,0x81
  42fcb3:	loopne 0x42fcfa
  42fcb5:	pop    edx
  42fcb6:	mov    edx,0x49bc95c1
  42fcbb:	push   ebx
  42fcbc:	jmp    0xaaf4:0x799c4175
  42fcc3:	xchg   ecx,eax
  42fcc4:	ja     0x42fd33
  42fcc6:	pop    es
  42fcc7:	and    edx,DWORD PTR [edx-0x3b8aaf2e]
  42fccd:	sub    ah,0x77
  42fcd0:	xor    DWORD PTR [ecx-0x11f3372f],ebp
  42fcd6:	test   al,0xe4
  42fcd8:	adc    esi,0x4c
  42fcdb:	imul   esp,DWORD PTR [edi],0xffffffce
  42fcde:	std    
  42fcdf:	xor    BYTE PTR [esi+0x7b2ccad8],0xb5
  42fce6:	push   edi
  42fce7:	rcr    DWORD PTR [ebx+0x10],cl
  42fcea:	pusha  
  42fceb:	loope  0x42fcbc
  42fced:	or     edx,DWORD PTR ds:0x34c5c283
  42fcf3:	aad    0x5d
  42fcf5:	mov    ds:0x870e6a22,al
  42fcfa:	jno    0x42fd4c
  42fcfc:	rcr    dl,0x83
  42fcff:	(bad)  
  42fd00:	fsubr  DWORD PTR [edx+esi*2]
  42fd03:	jg     0x42fcfd
  42fd05:	cli    
  42fd06:	test   al,0x4d
  42fd08:	mov    ds:0x483dff73,eax
  42fd0d:	jmp    0x41b3:0xbd3ce7c5
  42fd14:	mov    WORD PTR [edi+0x5f088f58],es
  42fd1a:	push   ss
  42fd1b:	ins    DWORD PTR es:[edi],dx
  42fd1c:	sub    al,0xbc
  42fd1e:	xchg   ebp,eax
  42fd1f:	pop    eax
  42fd20:	adc    al,BYTE PTR cs:[ecx]
  42fd23:	pop    ebp
  42fd24:	xchg   edi,eax
  42fd25:	cmp    ebx,edx
  42fd27:	inc    edx
  42fd28:	xor    ecx,0x4bc63e27
  42fd2e:	push   0x3364524
  42fd33:	aam    0xe7
  42fd35:	push   esi
  42fd36:	mov    ebp,0x1ba4916f
  42fd3b:	xchg   ebx,eax
  42fd3c:	mov    ds:0x4fd67491,al
  42fd41:	inc    ebp
  42fd42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd43:	test   BYTE PTR [ebx],ah
  42fd45:	(bad)  
  42fd46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd47:	ins    DWORD PTR es:[edi],dx
  42fd48:	xlat   BYTE PTR ds:[ebx]
  42fd49:	sbb    BYTE PTR [ebx],bh
  42fd4b:	jno    0x42fd30
  42fd4d:	sar    DWORD PTR [ebx-0x1d],cl
  42fd50:	loopne 0x42fd7c
  42fd52:	ret    0xbd3f
  42fd55:	mov    ebx,0x7e094e56
  42fd5a:	adc    al,0x21
  42fd5c:	and    al,0xb8
  42fd5e:	retf   
  42fd5f:	scas   al,BYTE PTR es:[edi]
  42fd60:	loope  0x42fd46
  42fd62:	xchg   ecx,eax
  42fd63:	inc    ecx
  42fd64:	lock in eax,0x95
  42fd67:	mov    edx,ss
  42fd69:	mov    ebp,0x6e4fe876
  42fd6e:	mov    ah,0x70
  42fd70:	pop    esi
  42fd71:	aas    
  42fd72:	out    0x5c,al
  42fd74:	mov    edx,0xbe72616
  42fd79:	fisubr WORD PTR [esi-0x14dce682]
  42fd7f:	and    BYTE PTR [edx-0x31],cl
  42fd82:	retf   
  42fd83:	sbb    dh,BYTE PTR [ebx-0x3dbcb6]
  42fd89:	popa   
  42fd8a:	test   DWORD PTR [esi],eax
  42fd8c:	mov    ds:0xcccb7ab9,al
  42fd91:	sbb    DWORD PTR [esi-0x16],ecx
  42fd94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd95:	test   BYTE PTR [ebp-0x3a354bf5],dh
  42fd9b:	aad    0x7e
  42fd9d:	xchg   ebp,eax
  42fd9e:	aaa    
  42fd9f:	lea    edi,[edi+eiz*1+0xda39a8]
  42fda6:	cmp    al,0x2d
  42fda9:	scas   al,BYTE PTR es:[edi]
  42fdaa:	ret    
  42fdab:	js     0x42fd4e
  42fdad:	push   ebx
  42fdae:	scas   eax,DWORD PTR es:[edi]
  42fdaf:	mov    di,WORD PTR ds:[ebp+0x4406e767]
  42fdb7:	into   
  42fdb8:	sub    dh,BYTE PTR [esi+0x2b650d99]
  42fdbe:	jmp    0x6ff5:0x4c2c0bd4
  42fdc5:	jl     0x42fd94
  42fdc7:	sbb    dl,bl
  42fdc9:	push   cs
  42fdca:	adc    cl,bh
  42fdcc:	sbb    ah,BYTE PTR [ebx-0x6fb4d332]
  42fdd2:	call   0xb7b:0xcbf76827
  42fdd9:	and    BYTE PTR [esi],dl
  42fddb:	add    BYTE PTR [edi-0xa],0x31
  42fddf:	aad    0x9d
  42fde1:	sbb    ebx,0xfffffffc
  42fde4:	out    0x8b,al
  42fde6:	jnp    0x42fdc7
  42fde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fde9:	js     0x42fdd4
  42fdeb:	push   ecx
  42fdec:	push   0x8a45a5e8
  42fdf1:	push   ebx
  42fdf2:	mov    dl,0x77
  42fdf4:	or     esp,ebp
  42fdf6:	sbb    eax,0xd56aa92f
  42fdfb:	(bad)  
  42fdfc:	ds jmp 0x42fdd4
  42fdff:	(bad)  
  42fe00:	loopne 0x42fd91
  42fe02:	or     eax,0xaf123d7f
  42fe07:	jecxz  0x42fdcc
  42fe09:	(bad)  
  42fe0b:	push   esp
  42fe0c:	shr    BYTE PTR [edi],cl
  42fe0e:	js     0x42fe34
  42fe10:	out    dx,eax
  42fe11:	cwde   
  42fe12:	mov    al,0x20
  42fe14:	les    ebp,FWORD PTR [edi+0x5bf6c034]
  42fe1a:	lods   eax,DWORD PTR ds:[esi]
  42fe1b:	out    dx,eax
  42fe1c:	enter  0xbd07,0x44
  42fe20:	arpl   WORD PTR [ebp-0x3c],di
  42fe23:	inc    ecx
  42fe24:	push   0x60
  42fe26:	inc    ebp
  42fe27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe28:	loop   0x42fe2c
  42fe2a:	je     0x42fe77
  42fe2c:	fldcw  WORD PTR [ecx+0x7a]
  42fe2f:	aad    0xb8
  42fe31:	cmp    eax,0x2cbf87c5
  42fe36:	or     DWORD PTR [esi+0x65],0x5f
  42fe3a:	and    BYTE PTR [eax+edx*1],0x1d
  42fe3e:	push   cs
  42fe3f:	(bad)  
  42fe40:	in     eax,dx
  42fe41:	mov    eax,edi
  42fe43:	inc    eax
  42fe44:	dec    eax
  42fe45:	(bad)  
  42fe46:	sar    DWORD PTR [ebx-0x27],1
  42fe49:	sbb    al,0x9
  42fe4b:	push   cs
  42fe4c:	mov    esi,0x5a3a52cb
  42fe51:	popf   
  42fe52:	shr    DWORD PTR [ecx+0x283c6927],0x88
  42fe59:	pop    ebp
  42fe5a:	xor    eax,0x98e68f03
  42fe5f:	mov    al,0xcc
  42fe61:	xlat   BYTE PTR ds:[ebx]
  42fe62:	cli    
  42fe63:	pusha  
  42fe64:	fist   WORD PTR [eax]
  42fe66:	mov    ecx,0xd700e08b
  42fe6b:	das    
  42fe6c:	cmp    bh,BYTE PTR [ecx+0x775d337]
  42fe72:	je     0x42fed7
  42fe74:	(bad)  
  42fe75:	cli    
  42fe76:	mov    al,ds:0xa08da985
  42fe7b:	aam    0xdf
  42fe7d:	push   ebx
  42fe7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe7f:	sbb    ebx,DWORD PTR [esi+eiz*1]
  42fe82:	adc    al,0x53
  42fe84:	adc    dh,BYTE PTR [edi+0x1c266b6f]
  42fe8a:	popa   
  42fe8b:	mov    eax,0x6622ebce
  42fe90:	push   esi
  42fe91:	mov    al,BYTE PTR [eax-0x7d99e84c]
  42fe97:	es pusha 
  42fe99:	shl    bl,cl
  42fe9b:	ins    DWORD PTR es:[edi],dx
  42fe9c:	fistp  WORD PTR [ecx-0x195eea16]
  42fea2:	pop    ss
  42fea3:	neg    DWORD PTR [ecx*8+0x6a59cd38]
  42feaa:	jns    0x42fe81
  42feac:	clc    
  42fead:	dec    esi
  42feae:	imul   esp,DWORD PTR [edi-0x41],0xffffffb1
  42feb2:	and    BYTE PTR [edx-0x2a4b5540],cl
  42feb8:	int    0xec
  42feba:	ds push es
  42febc:	leave  
  42febd:	hlt    
  42febe:	out    dx,al
  42febf:	data16 mov al,0x75
  42fec2:	(bad)  
  42fec4:	mov    edx,0x5126a931
  42fec9:	loope  0x42feb1
  42fecb:	fmul   QWORD PTR ds:0x4d9529b6
  42fed1:	jae    0x42fec2
  42fed3:	jno    0x42ff2d
  42fed5:	sbb    dl,BYTE PTR [ecx]
  42fed7:	je     0x42fe74
  42fed9:	ja     0x42fe67
  42fedb:	cmp    ebx,esi
  42fedd:	call   0xed45:0x1f6e65aa
  42fee4:	xchg   BYTE PTR [edi-0x76],dh
  42fee7:	cmp    BYTE PTR ds:0x1c02722c,dl
  42feed:	fsubr  QWORD PTR [ecx]
  42feef:	rol    BYTE PTR [eax],0xb6
  42fef2:	mov    ebp,0xf42a4d1a
  42fef7:	imul   edi,DWORD PTR [edx],0xd62bddda
  42fefd:	das    
  42fefe:	hlt    
  42feff:	icebp  
  42ff00:	dec    edx
  42ff01:	sar    BYTE PTR [edx-0x78a459a7],cl
  42ff07:	test   eax,0xb0e572cc
  42ff0c:	cwde   
  42ff0d:	adc    esp,esi
  42ff0f:	cli    
  42ff10:	call   0x32dc:0x5c95f477
  42ff17:	jae    0x42ff0d
  42ff19:	cmp    DWORD PTR [ebp+0x7a99eb80],0xffffff82
  42ff20:	ret    
  42ff21:	cmp    edx,DWORD PTR [eax]
  42ff23:	sbb    DWORD PTR [esi+eiz*1-0x32786b52],eax
  42ff2a:	ja     0x42fec0
  42ff2c:	jecxz  0x42ff1c
  42ff2e:	(bad)  
  42ff2f:	gs repz dec esi
  42ff32:	pop    esi
  42ff33:	cs (bad) 
  42ff35:	sbb    eax,0x60d41ae8
  42ff3a:	add    DWORD PTR [ebp-0xf6743d1],0xffffff8b
  42ff41:	pop    esi
  42ff42:	adc    bl,ch
  42ff44:	addr16 popa 
  42ff46:	dec    esi
  42ff47:	fist   DWORD PTR [ecx+0x5bb87f0f]
  42ff4d:	dec    ecx
  42ff4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff4f:	rol    esp,0x64
  42ff52:	jp     0x42ffc9
  42ff54:	les    edi,FWORD PTR [edi]
  42ff56:	adc    dh,BYTE PTR [esp]
  42ff59:	int    0xa9
  42ff5b:	add    BYTE PTR [ebp-0x7a3dd024],bh
  42ff61:	adc    DWORD PTR [esi+0x68],esp
  42ff64:	push   es
  42ff65:	(bad)  
  42ff66:	out    dx,al
  42ff67:	enter  0x36b0,0xf2
  42ff6b:	adc    BYTE PTR [ebx+0x75],al
  42ff6e:	mov    BYTE PTR [edx+0x65756d35],bl
  42ff74:	mov    dl,BYTE PTR [edi+0x4ed51090]
  42ff7a:	and    DWORD PTR [ebx+0x2f],esi
  42ff7d:	or     BYTE PTR [ecx+0x75],ah
  42ff80:	xor    bh,bl
  42ff82:	dec    edx
  42ff83:	cld    
  42ff84:	mov    edi,0xba8291d1
  42ff89:	jbe    0x42ffd9
  42ff8b:	loop   0x42ff90
  42ff8d:	loope  0x42ff73
  42ff8f:	icebp  
  42ff90:	add    eax,0xa9f52d47
  42ff95:	mov    al,0xc1
  42ff97:	jb     0x42ff31
  42ff99:	(bad)
  42ff9e:	adc    dh,BYTE PTR ds:0x736e8058
  42ffa4:	popa   
  42ffa5:	dec    edi
  42ffa6:	cmp    bl,cl
  42ffa8:	push   ebp
  42ffa9:	(bad)  
  42ffaa:	iret   
  42ffab:	ret    
  42ffac:	bound  ebp,QWORD PTR [ecx+0x5eca9f44]
  42ffb2:	jmp    0xaf04:0xb827912c
  42ffb9:	inc    eax
  42ffba:	jmp    0x42ff3c
  42ffbc:	sub    BYTE PTR [edi+0x6d],dh
  42ffbf:	shr    DWORD PTR [esi],1
  42ffc1:	add    edi,DWORD PTR [ecx]
  42ffc3:	dec    ecx
  42ffc4:	fcomp  DWORD PTR [esi+0x49]
  42ffc7:	(bad)  
  42ffc8:	punpckhbw mm4,mm1
  42ffcb:	add    al,0x8e
  42ffcd:	repnz stc 
  42ffcf:	push   ds
  42ffd0:	pop    esi
  42ffd1:	mov    ecx,0x6e08217a
  42ffd6:	pop    edx
  42ffd7:	ja     0x430048
  42ffd9:	mov    ecx,0x55d9725a
  42ffde:	lods   eax,DWORD PTR ds:[esi]
  42ffdf:	leave  
  42ffe0:	repz inc ebx
  42ffe2:	jmp    0xebc7141d
  42ffe7:	cmp    ebp,ebx
  42ffe9:	jb     0x430015
  42ffeb:	imul   edi,DWORD PTR ds:0x72defb34,0x28
  42fff2:	repz dec ebp
  42fff4:	xchg   edi,eax
  42fff5:	or     BYTE PTR [edx-0x677ef61b],bh
  42fffb:	cdq    
  42fffc:	imul   ebx,DWORD PTR [edx-0x5d],0xffffffe7
  430000:	sbb    eax,0x4e51bba7
  430005:	sub    BYTE PTR [edi+0x60],cl
  430008:	(bad)  
  430009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43000a:	inc    esp
  43000b:	push   edx
  43000c:	lods   eax,DWORD PTR ds:[esi]
  43000d:	sub    BYTE PTR [edx-0x3],al
  430010:	and    ebx,DWORD PTR [ebp-0x40]
  430013:	rcl    BYTE PTR [ecx-0x42bc9206],1
  430019:	xchg   edi,eax
  43001a:	jb     0x43004a
  43001c:	ror    edx,0xec
  43001f:	mov    dh,0x25
  430021:	sti    
  430022:	or     ecx,DWORD PTR [edx+0x21]
  430025:	jmp    0x979e:0x69b3f817
  43002c:	cmc    
  43002d:	pop    esp
  43002e:	jl     0x430059
  430030:	rol    DWORD PTR [ebx+edi*1-0x38],0x91
  430035:	imul   eax,DWORD PTR [esi-0x182d2e09],0xd92eda1c
  43003f:	scas   al,BYTE PTR es:[edi]
  430040:	push   eax
  430041:	lods   eax,DWORD PTR ds:[esi]
  430042:	mov    ?,WORD PTR [ebp-0x6d]
  430045:	xor    bl,dl
  430047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430048:	or     dh,0x5
  43004b:	call   0x5890:0xa8bd7083
  430052:	aad    0x1
  430054:	rol    edx,cl
  430056:	data16 cmp ah,dl
  430059:	cmp    esp,DWORD PTR [edx+0x62]
  43005c:	repz addr16 add al,0x36
  430060:	shr    BYTE PTR [edi+esi*8],cl
  430063:	out    0x74,al
  430065:	cmp    ah,BYTE PTR [eax-0x70]
  430068:	and    ah,BYTE PTR [ebp-0x4c]
  43006b:	jle    0x43006c
  43006d:	sbb    ebp,esp
  43006f:	or     eax,0x29debbf9
  430074:	xor    cl,al
  430076:	jnp    0x430058
  430078:	cmp    DWORD PTR [eax+0x13b8d99f],ebp
  43007e:	cmc    
  43007f:	jo     0x43003e
  430081:	mov    ch,0xd7
  430083:	sbb    ax,WORD PTR [esi+esi*1-0x5f]
  430088:	inc    edi
  430089:	std    
  43008a:	sub    BYTE PTR [ebp+0x15],ch
  43008d:	(bad)  
  43008e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43008f:	adc    eax,0xcac63e6d
  430094:	and    esp,ebp
  430096:	xchg   DWORD PTR [edx+edi*2-0x44eea4cd],eax
  43009d:	add    eax,0xe25799ef
  4300a2:	daa    
  4300a3:	ins    BYTE PTR es:[edi],dx
  4300a4:	mov    esi,0x9000e30b
  4300a9:	jne    0x4300cc
  4300ab:	cli    
  4300ac:	cwde   
  4300ad:	push   edx
  4300ae:	test   DWORD PTR [eax],esp
  4300b0:	inc    ebp
  4300b1:	out    0x38,al
  4300b3:	pop    eax
  4300b4:	inc    esi
  4300b5:	cmp    ecx,esi
  4300b7:	jns    0x43007e
  4300b9:	rol    DWORD PTR [edi+0x1d],1
  4300bc:	inc    edx
  4300bd:	int3   
  4300be:	test   eax,0xde7535b7
  4300c3:	sbb    dh,BYTE PTR [esi+0x2366a4c8]
  4300c9:	inc    edi
  4300ca:	pop    esp
  4300cb:	pop    ds
  4300cc:	dec    edi
  4300cd:	lock xchg edx,eax
  4300cf:	retf   0xdc3b
  4300d2:	and    al,0xcd
  4300d4:	xor    al,0x3e
  4300d6:	xchg   BYTE PTR [ebp+0x4],al
  4300d9:	call   0x3b:0x2f5bb211
  4300e0:	sub    ecx,DWORD PTR [eax]
  4300e2:	and    al,0x33
  4300e4:	xchg   ebp,esp
  4300e6:	(bad)  
  4300e7:	test   al,0xa6
  4300e9:	mov    al,0xa7
  4300eb:	stc    
  4300ec:	rcr    DWORD PTR [edx],cl
  4300ee:	test   al,0x4d
  4300f0:	sub    al,BYTE PTR [edi+esi*1]
  4300f3:	fcom   DWORD PTR [ebx-0x6d]
  4300f6:	push   ebp
  4300f7:	fwait
  4300f8:	fwait
  4300f9:	pop    ss
  4300fa:	mov    WORD PTR [ebx-0xd],?
  4300fd:	das    
  4300fe:	xor    ecx,ebp
  430100:	mov    DWORD PTR [eax],esi
  430102:	inc    esp
  430103:	mov    edi,0xf42c5e2c
  430108:	xor    al,0x1d
  43010a:	sub    eax,0x90228289
  43010f:	(bad)  
  430110:	lock test al,0x79
  430113:	push   ss
  430114:	in     al,0x5d
  430116:	and    eax,0x8891e3fd
  43011b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43011c:	push   0xfffffff6
  43011e:	jge    0x430151
  430120:	add    ecx,edx
  430122:	adc    esp,DWORD PTR [esi+ebp*2-0x78d0dace]
  430129:	pop    ebx
  43012a:	xchg   ebp,esi
  43012c:	dec    ebx
  43012d:	push   es
  43012e:	out    dx,eax
  43012f:	add    dh,bl
  430131:	sub    dl,BYTE PTR [ebp-0x5a]
  430134:	ds in  eax,0x47
  430137:	sysexit 
  430139:	or     BYTE PTR [edx-0x5200ae16],dh
  43013f:	adc    BYTE PTR [ebp-0x74],ah
  430142:	jmp    0xd6d9c9ba
  430147:	and    DWORD PTR [ebx],0x3b
  43014a:	pop    ebx
  43014b:	xchg   BYTE PTR [esi+edi*2],bh
  43014e:	repz dec edi
  430150:	iret   
  430151:	and    al,0xc7
  430153:	loop   0x4301ba
  430155:	mov    bl,cl
  430157:	loop   0x4300fc
  430159:	dec    edi
  43015a:	das    
  43015b:	enter  0xc33c,0xa3
  43015f:	and    BYTE PTR [eax+ebp*1-0x26d93317],al
  430166:	jmp    0xf04e:0xc2d71174
  43016d:	jbe    0x430121
  43016f:	xchg   esi,eax
  430170:	in     eax,0xd1
  430172:	mov    esp,0x6c7827d3
  430177:	stos   DWORD PTR es:[edi],eax
  430178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430179:	adc    DWORD PTR [eax+0x61],0xffffffdf
  43017d:	lods   al,BYTE PTR ds:[esi]
  43017e:	loope  0x430187
  430180:	push   0xd78353d9
  430185:	mov    esi,es
  430187:	jmp    0x430205
  430189:	jb     0x430146
  43018b:	mov    DWORD PTR [eax+ecx*8],edi
  43018e:	aad    0xaa
  430190:	mov    edi,0xf02edc2d
  430195:	scas   eax,DWORD PTR es:[edi]
  430196:	outs   dx,DWORD PTR ds:[esi]
  430197:	dec    ebp
  430198:	daa    
  430199:	sub    eax,0x90c67102
  43019e:	pop    eax
  43019f:	lock jo 0x430126
  4301a2:	inc    edi
  4301a3:	(bad)  
  4301a4:	jmp    0xaf75:0x983d6c28
  4301ab:	in     al,dx
  4301ac:	fcmovu st,st(1)
  4301ae:	push   0x37
  4301b0:	addr16 loopne 0x43020b
  4301b3:	scas   eax,DWORD PTR es:[edi]
  4301b4:	mov    edi,DWORD PTR [edx]
  4301b6:	mov    ch,0x7
  4301b8:	(bad)  
  4301b9:	sbb    bl,BYTE PTR [eax+0x150552fe]
  4301bf:	jbe    0x43014e
  4301c1:	pop    esi
  4301c2:	add    DWORD PTR ds:0xfbe77228,ecx
  4301c8:	mov    ch,0xe4
  4301ca:	test   BYTE PTR [eax+eax*2-0x76bdf21d],bh
  4301d1:	lock imul ecx,ebx,0xf13655af
  4301d8:	inc    edi
  4301d9:	push   0xffffff81
  4301db:	and    DWORD PTR [eax+0x6529893b],esp
  4301e1:	dec    ebp
  4301e2:	add    eax,DWORD PTR [eax]
  4301e4:	sub    al,0x33
  4301e6:	(bad)  
  4301e7:	mov    ds:0x9afeea08,al
  4301ec:	sub    dh,BYTE PTR [edi]
  4301ee:	outs   dx,DWORD PTR ds:[esi]
  4301ef:	jne    0x43020c
  4301f1:	test   BYTE PTR [eax],ah
  4301f3:	pop    eax
  4301f4:	jmp    0xad9e:0x4aae52cb
  4301fb:	(bad)  
  4301fc:	fwait
  4301fd:	sub    eax,0xa1a90b5c
  430202:	push   0x1f
  430204:	or     eax,0x22696e27
  430209:	push   0x9ed85e27
  43020e:	int    0xb3
  430210:	imul   esp,DWORD PTR [edx],0x4ccccfdb
  430216:	sub    ebx,DWORD PTR [ebp+0x3594f3a9]
  43021c:	jb     0x43029d
  43021e:	mov    eax,0x7db08477
  430223:	inc    ebx
  430224:	inc    esi
  430225:	jmp    0x430299
  430227:	jmp    0xab6ddc3a
  43022c:	xlat   BYTE PTR ds:[ebx]
  43022d:	add    BYTE PTR [eax],dh
  43022f:	(bad)  
  430230:	push   es
  430231:	test   eax,0x49fd43ff
  430236:	inc    esi
  430237:	fimul  WORD PTR [edx-0x3c865005]
  43023d:	int3   
  43023e:	adc    eax,0xf41a5536
  430243:	retf   0x1410
  430246:	xchg   ebx,eax
  430247:	jg     0x430288
  430249:	dec    eax
  43024a:	or     bl,bh
  43024c:	mov    ecx,0xec00402b
  430251:	xor    DWORD PTR [edi],eax
  430253:	int3   
  430254:	jnp    0x4301e3
  430256:	xlat   BYTE PTR ds:[ebx]
  430257:	ins    BYTE PTR es:[edi],dx
  430258:	mov    dl,0x68
  43025a:	loope  0x4302db
  43025c:	mov    ecx,0x574a021e
  430261:	or     al,0xc2
  430263:	pop    ss
  430264:	bound  ecx,QWORD PTR [edx+ebx*1]
  430267:	fdiv   st,st(7)
  430269:	push   ds
  43026a:	sub    eax,0x505fac57
  43026f:	pusha  
  430270:	push   esp
  430271:	pop    eax
  430272:	add    BYTE PTR [edi+0x1bcf93fe],bl
  430278:	into   
  430279:	idiv   BYTE PTR [ebp-0x32]
  43027c:	dec    edx
  43027d:	std    
  43027e:	mov    DWORD PTR [edi],ebx
  430280:	ins    BYTE PTR es:[edi],dx
  430281:	jns    0x43027c
  430283:	push   es
  430284:	lea    ebx,[esi+0x69b09805]
  43028a:	pop    ebp
  43028b:	push   ds
  43028c:	data16 cmp BYTE PTR [edi],bh
  43028f:	nop
  430290:	lds    esp,FWORD PTR [edi-0x7a]
  430293:	pop    eax
  430294:	push   edx
  430295:	inc    ebp
  430296:	jmp    0x243a:0x8d8eff10
  43029d:	imul   edx,DWORD PTR [esi],0xffffff8e
  4302a0:	dec    ecx
  4302a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4302a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4302a3:	les    ebp,FWORD PTR [edx+0x2c81c4c2]
  4302a9:	and    ah,BYTE PTR [eax]
  4302ab:	pop    ebp
  4302ac:	in     al,0x4c
  4302ae:	fmul   st,st(0)
  4302b0:	adc    al,0x57
  4302b2:	das    
  4302b3:	pop    ebx
  4302b4:	pop    ecx
  4302b5:	arpl   di,dx
  4302b7:	xor    cl,BYTE PTR [ebp-0x48]
  4302ba:	or     ah,dh
  4302bc:	ds push edx
  4302be:	inc    ebx
  4302bf:	in     eax,dx
  4302c0:	std    
  4302c1:	sub    ebp,ebx
  4302c3:	xor    edi,DWORD PTR [edx+eiz*4+0x78]
  4302c7:	sbb    al,0xb7
  4302c9:	lock mov DWORD PTR [edx+0x50],ecx
  4302cd:	int3   
  4302ce:	adc    ch,BYTE PTR [ebx]
  4302d0:	ja     0x4302eb
  4302d2:	je     0x430313
  4302d4:	into   
  4302d5:	push   ebx
  4302d6:	out    0x84,al
  4302d8:	mov    ecx,0x42563dd1
  4302dd:	jb     0x4302aa
  4302df:	add    edx,esp
  4302e1:	jmp    0x4302b0
  4302e3:	cmc    
  4302e4:	mov    esi,0x6954ad18
  4302e9:	add    edi,esp
  4302eb:	and    edi,ebp
  4302ed:	hlt    
  4302ee:	scas   al,BYTE PTR es:[edi]
  4302ef:	or     DWORD PTR [eax],ebp
  4302f1:	push   esi
  4302f2:	ja     0x430303
  4302f4:	loop   0x4302f6
  4302f6:	ret    
  4302f7:	sti    
  4302f8:	mov    esi,0x1bd5bdd3
  4302fd:	(bad)  
  4302ff:	xchg   edx,eax
  430300:	mov    DWORD PTR [ecx],ebp
  430302:	cmc    
  430303:	test   al,0xe1
  430305:	popf   
  430306:	je     0x43028d
  430308:	lods   al,BYTE PTR ds:[esi]
  430309:	cmp    BYTE PTR [ebp-0x42],bl
  43030c:	mov    ds:0xf9559761,al
  430311:	mov    ah,0xc6
  430313:	not    DWORD PTR [edx-0x792b0a9e]
  430319:	xchg   esp,eax
  43031a:	je     0x4302f2
  43031c:	fldcw  WORD PTR [ebx]
  43031e:	rcr    bl,cl
  430320:	jnp    0x430313
  430322:	cdq    
  430323:	bound  ecx,QWORD PTR [ebx-0x28338ec3]
  430329:	cwde   
  43032a:	mov    esp,0xd35c65b6
  43032f:	push   esi
  430330:	xchg   ecx,eax
  430331:	sub    ah,ah
  430333:	mov    edi,0x3fe79ec5
  430338:	mov    ch,0xd9
  43033a:	or     eax,ecx
  43033c:	test   al,0xd9
  43033e:	(bad)  
  43033f:	mov    ah,0x13
  430341:	fmul   QWORD PTR [eax-0x19]
  430344:	clc    
  430345:	jle    0x4302e1
  430347:	cmc    
  430348:	add    al,0x56
  43034a:	cdq    
  43034b:	sbb    al,0xf5
  43034d:	mov    ecx,0x475f6530
  430352:	nop
  430353:	(bad)  
  430354:	pop    esp
  430355:	adc    BYTE PTR [edx+0x21],ch
  430358:	jmp    0x43032b
  43035a:	and    al,0x4c
  43035c:	pop    edi
  43035d:	or     esp,DWORD PTR [eax]
  43035f:	test   DWORD PTR [ebx+0x579d1f00],ebp
  430365:	push   esi
  430366:	jge    0x4302f4
  430368:	sub    BYTE PTR [eax],al
  43036a:	or     DWORD PTR [edi+0x109caa82],esi
  430370:	push   ss
  430371:	xchg   edx,edx
  430373:	test   al,0xa3
  430375:	call   0x14ef:0xf5e883a8
  43037c:	lods   eax,DWORD PTR ds:[esi]
  43037d:	popa   
  43037e:	or     bl,cl
  430380:	fs test al,0x1
  430383:	call   FWORD PTR [edi+0x25]
  430386:	mov    eax,0x22306d8
  43038b:	(bad)  
  43038c:	call   FWORD PTR [edx-0x4f]
  43038f:	std    
  430390:	or     BYTE PTR [ebx+0x697475d4],ah
  430396:	cmp    bl,bh
  430398:	(bad)  
  430399:	hlt    
  43039a:	sub    eax,DWORD PTR [ecx+0x2e]
  43039d:	xor    eax,0x357af425
  4303a2:	inc    esi
  4303a3:	or     eax,edi
  4303a5:	jne    0x430422
  4303a7:	int    0xb8
  4303a9:	mov    ah,0xa6
  4303ab:	repnz icebp 
  4303ad:	push   ss
  4303ae:	popf   
  4303af:	popf   
  4303b0:	inc    ebp
  4303b1:	xchg   bh,cl
  4303b3:	jecxz  0x4303a8
  4303b5:	shl    esi,1
  4303b7:	add    BYTE PTR es:[ebx+edx*1],bl
  4303bb:	jnp    0x4303d9
  4303bd:	ins    BYTE PTR es:[edi],dx
  4303be:	adc    cl,dl
  4303c0:	jge    0x4303af
  4303c2:	xchg   DWORD PTR [eax],esp
  4303c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4303c5:	pop    ss
  4303c6:	gs mov bh,al
  4303c9:	popa   
  4303ca:	les    ecx,FWORD PTR [ebx-0x69ee815a]
  4303d0:	push   0x28
  4303d2:	inc    esp
  4303d3:	fisub  DWORD PTR [ebp+0x7ae6bab4]
  4303d9:	mov    ds:0x4b3f4f78,al
  4303de:	sti    
  4303df:	push   edx
  4303e0:	cwde   
  4303e1:	dec    ebx
  4303e2:	xchg   edx,eax
  4303e3:	xchg   esi,eax
  4303e4:	aad    0xab
  4303e6:	inc    eax
  4303e7:	jmp    0x656:0x3f52328d
  4303ee:	(bad)  
  4303ef:	mov    ch,0xcc
  4303f1:	test   eax,0xae5a8aae
  4303f6:	jp     0x430383
  4303f8:	xor    eax,eax
  4303fa:	outs   dx,BYTE PTR ds:[esi]
  4303fb:	push   esp
  4303fc:	dec    edi
  4303fd:	xchg   BYTE PTR [ecx+eiz*2+0x16],dl
  430401:	(bad)  
  430402:	leave  
  430403:	inc    edx
  430404:	add    al,0x44
  430406:	fld    DWORD PTR [eax]
  430408:	xchg   edx,eax
  430409:	arpl   WORD PTR [esi+0x22d3f23a],sp
  43040f:	mov    ebp,0x65f60706
  430414:	mov    esi,0x19abdb7f
  430419:	test   eax,0xd305335b
  43041e:	call   0x2a92:0x4e0d53a0
  430425:	addr16 ret 0xd9db
  430429:	push   ecx
  43042a:	xor    ebp,DWORD PTR [edx]
  43042c:	imul   edi,DWORD PTR [edi],0x8b8b72ee
  430432:	xchg   esp,eax
  430433:	push   esi
  430434:	mov    edi,0xaf9ca229
  430439:	inc    edx
  43043a:	lahf   
  43043b:	pop    ebp
  43043c:	sub    al,0x87
  43043e:	ficomp WORD PTR [ebp-0x5eb1196f]
  430444:	push   eax
  430445:	push   ebx
  430446:	xchg   BYTE PTR [edi-0x2ec2562f],dh
  43044c:	fisub  DWORD PTR [edx]
  43044e:	and    edi,ebx
  430450:	out    0x12,al
  430452:	clc    
  430453:	ins    BYTE PTR es:[edi],dx
  430454:	jne    0x430423
  430456:	push   ecx
  430457:	push   eax
  430458:	mov    eax,0xddff007f
  43045d:	and    ebp,DWORD PTR [ebx+0x3b]
  430460:	inc    eax
  430461:	cs shl ecx,cl
  430464:	xchg   esp,eax
  430465:	fmul   DWORD PTR [edx+0x44]
  430468:	cld    
  430469:	jp     0x430470
  43046b:	cmp    ah,ch
  43046d:	sub    edi,ebx
  43046f:	fisub  DWORD PTR [ecx]
  430471:	(bad)  
  430472:	cmp    dl,BYTE PTR [eax-0x67]
  430475:	push   esi
  430476:	cmp    eax,0xc7bdca0b
  43047b:	or     edi,DWORD PTR [esi]
  43047d:	(bad)  
  43047f:	call   0x4af290e3
  430484:	call   0x11974892
  430489:	mov    eax,ds:0x2a8355ee
  43048e:	push   cs
  43048f:	sub    eax,0x7aab341
  430494:	lods   eax,DWORD PTR ds:[esi]
  430495:	lock fdiv st,st(5)
  430498:	fcomp  DWORD PTR [ebx]
  43049a:	mov    ah,0xd
  43049c:	(bad)  
  43049d:	call   0x6e94bd37
  4304a2:	sbb    ebp,0x69
  4304a5:	xor    al,0x7a
  4304a7:	stos   DWORD PTR es:[edi],eax
  4304a8:	les    ebp,FWORD PTR [ecx]
  4304aa:	cmp    BYTE PTR [esi],0x32
  4304ad:	pop    eax
  4304ae:	ror    BYTE PTR [edx-0x2f8e7ed0],cl
  4304b4:	mov    WORD PTR [edx-0x25],?
  4304b7:	fwait
  4304b8:	stos   DWORD PTR es:[edi],eax
  4304b9:	mov    DWORD PTR [ecx-0x2],eax
  4304bc:	lods   al,BYTE PTR ds:[esi]
  4304bd:	ss adc al,0x9a
  4304c0:	pop    ecx
  4304c1:	sar    BYTE PTR [esi+0x44d8048a],0x34
  4304c8:	push   ebp
  4304c9:	mov    ebp,0x667693d0
  4304ce:	push   ecx
  4304cf:	mov    esp,0x1d0b06d
  4304d4:	or     eax,0x145ba88c
  4304d9:	retf   0xb510
  4304dc:	mov    ss,eax
  4304de:	xor    eax,0x6fa4f661
  4304e3:	pusha  
  4304e4:	add    eax,0x54dc3dc6
  4304e9:	xor    dh,0x40
  4304ec:	mov    bh,0xc4
  4304ee:	arpl   WORD PTR [eax],bx
  4304f0:	pop    ecx
  4304f1:	jns    0x43055e
  4304f3:	cdq    
  4304f4:	icebp  
  4304f5:	jb     0x4304d9
  4304f7:	mov    ah,0xba
  4304f9:	add    edx,DWORD PTR [eax]
  4304fb:	(bad)  
  4304fc:	cld    
  4304fd:	dec    edx
  4304fe:	push   eax
  4304ff:	sub    cl,BYTE PTR [edx+0x77f273e]
  430505:	outs   dx,BYTE PTR ds:[esi]
  430506:	fdiv   st,st(6)
  430508:	pop    ecx
  430509:	sbb    al,0xc
  43050b:	gs push ss
  43050d:	(bad)  
  43050e:	sti    
  43050f:	push   cs
  430510:	lods   al,BYTE PTR ds:[esi]
  430511:	inc    ebp
  430512:	mov    ebp,0xa40c431d
  430517:	xor    BYTE PTR [ecx],dl
  430519:	xor    eax,0x8fc670fe
  43051e:	and    ecx,ebx
  430520:	shl    BYTE PTR [ecx-0x7e988b9f],0x57
  430527:	mov    edi,DWORD PTR [ecx+0x38]
  43052a:	add    DWORD PTR [ebp-0x4d53f409],0x1a
  430531:	gs jl  0x4304cf
  430534:	test   eax,0x99b3aa28
  430539:	mov    edi,0x723e25b3
  43053e:	cmp    esi,DWORD PTR [esp+edi*1+0x4a]
  430542:	and    DWORD PTR [edi],esp
  430544:	pop    ss
  430545:	stos   BYTE PTR es:[edi],al
  430546:	mov    eax,ds:0xcf177646
  43054b:	mov    ds:0x57c0c322,eax
  430550:	stc    
  430551:	inc    eax
  430552:	inc    eax
  430553:	outs   dx,DWORD PTR ds:[esi]
  430554:	push   ss
  430555:	pop    ss
  430556:	mov    eax,ds:0x3049c957
  43055b:	call   0x54400d70
  430560:	addr16 push ss
  430562:	xor    cl,cl
  430564:	dec    eax
  430565:	test   al,0x4
  430567:	cmp    DWORD PTR [eax],ecx
  430569:	out    0xac,al
  43056b:	and    eax,0xba1de38
  430570:	stos   BYTE PTR es:[edi],al
  430571:	mov    edi,0xcaf2c3a4
  430576:	and    DWORD PTR [edx-0x58],esp
  430579:	mov    bl,0xab
  43057b:	or     esp,edi
  43057d:	and    BYTE PTR [ecx],ch
  43057f:	dec    BYTE PTR [esi-0xee47a5b]
  430585:	int3   
  430586:	hlt    
  430587:	add    BYTE PTR [edi-0x75042d88],0xcc
  43058e:	fwait
  43058f:	push   eax
  430590:	out    0xb6,al
  430592:	popf   
  430593:	push   0xd16d5377
  430598:	daa    
  430599:	push   esp
  43059a:	dec    ebx
  43059b:	test   eax,0x81bec692
  4305a0:	loope  0x4305be
  4305a2:	out    0xaf,eax
  4305a4:	shr    BYTE PTR [esi+edx*1],cl
  4305a7:	out    dx,al
  4305a8:	xlat   BYTE PTR ds:[ebx]
  4305a9:	mov    ds:0x28291135,eax
  4305ae:	repnz bound ebx,QWORD PTR [ebp+0x1b5cc9e1]
  4305b5:	add    ch,BYTE PTR [ebp-0x3d]
  4305b8:	lea    eax,[eax+edi*8-0x33]
  4305bc:	out    dx,eax
  4305bd:	enter  0x2771,0xaa
  4305c1:	cmp    al,0xb4
  4305c3:	or     DWORD PTR [eax+0x4ab934ae],ecx
  4305c9:	adc    edx,ebp
  4305cb:	inc    ebx
  4305cc:	pop    es
  4305cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305ce:	sbb    DWORD PTR [eax-0x45aa49ea],esi
  4305d4:	push   0xc4d7188a
  4305d9:	mov    ah,0x5b
  4305dc:	dec    ebx
  4305dd:	dec    edi
  4305de:	mov    cl,0xe
  4305e0:	fwait
  4305e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305e2:	push   cs
  4305e3:	sub    dl,BYTE PTR [ecx]
  4305e5:	mov    ebx,?
  4305e7:	jns    0x4305d0
  4305e9:	test   al,0xb
  4305eb:	nop
  4305ec:	push   ss
  4305ed:	ds mov al,0xae
  4305f0:	xchg   esp,eax
  4305f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4305f2:	mov    edi,DWORD PTR [ecx-0x16]
  4305f5:	sub    DWORD PTR [ecx],ecx
  4305f7:	mov    ebx,0x9a69847c
  4305fc:	xor    al,0x45
  4305fe:	jns    0x430669
  430600:	xchg   ebx,eax
  430601:	cmp    bl,BYTE PTR [ebx+ebx*4-0xa]
  430605:	sub    esp,DWORD PTR [eax-0x1808f930]
  43060b:	or     eax,0x31869d90
  430610:	ins    DWORD PTR es:[edi],dx
  430611:	pop    es
  430612:	xlat   BYTE PTR ds:[ebx]
  430613:	push   ss
  430614:	pshufw mm2,QWORD PTR [edi+0x5d],0xa8
  430619:	mov    ecx,0xc10b68a0
  43061e:	dec    ebx
  43061f:	dec    ecx
  430620:	xchg   ebx,eax
  430621:	mov    eax,ds:0xc412002b
  430626:	mul    DWORD PTR ds:0x4ee46cd6
  43062c:	xlat   BYTE PTR ds:[ebx]
  43062d:	pop    ebx
  43062e:	je     0x430647
  430630:	sbb    bh,BYTE PTR [eax]
  430632:	int3   
  430633:	or     BYTE PTR [eax-0x7a2429ca],0x49
  43063a:	jle    0x43060a
  43063c:	call   0xdbb2803a
  430641:	fst    DWORD PTR [edi-0x52]
  430644:	jnp    0x4306a6
  430646:	pop    esp
  430647:	mov    DWORD PTR [esi-0x6b],edi
  43064a:	sub    DWORD PTR [edi],0xb
  43064d:	int    0x34
  43064f:	sbb    al,0x90
  430651:	fdivr  DWORD PTR [edi+0x64]
  430654:	pop    eax
  430655:	or     al,0xf6
  430657:	out    0x3c,eax
  430659:	mov    esi,0xebbf9934
  43065e:	sbb    ch,dl
  430660:	icebp  
  430661:	retf   0x7f59
  430664:	or     DWORD PTR [edi+ecx*8],esp
  430667:	fnstsw WORD PTR [ebx-0x76]
  43066a:	sahf   
  43066b:	xlat   BYTE PTR ds:[ebx]
  43066c:	ret    0xe62e
  43066f:	iret   
  430670:	xchg   edi,eax
  430671:	mov    al,ds:0x39e345a6
  430676:	int3   
  430677:	sub    eax,0xd084849
  43067c:	ja     0x4306d4
  43067e:	push   0xd6d11491
  430683:	xchg   esi,eax
  430684:	cwde   
  430685:	es jle 0x43065f
  430688:	jbe    0x4306cf
  43068a:	les    esp,FWORD PTR [eax-0x2b8733bf]
  430690:	sub    BYTE PTR ds:0xfb35fe3a,bl
  430696:	dec    edi
  430697:	xchg   esp,eax
  430698:	push   edx
  430699:	nop
  43069a:	call   0x350:0xf90b59c0
  4306a1:	inc    eax
  4306a2:	and    dh,bh
  4306a4:	lahf   
  4306a5:	arpl   WORD PTR [eax+0x49d2f513],cx
  4306ab:	xchg   esp,eax
  4306ac:	in     eax,dx
  4306ad:	add    al,0x40
  4306af:	test   eax,0x770ae432
  4306b4:	mov    ds:0x92c19ce0,al
  4306b9:	push   edi
  4306ba:	pushf  
  4306bb:	std    
  4306bc:	ret    0xc88e
  4306bf:	daa    
  4306c0:	fld    QWORD PTR [esp+eax*8]
  4306c3:	adc    bh,BYTE PTR [edi]
  4306c5:	mov    esp,0x7d2f9006
  4306ca:	xchg   ebx,eax
  4306cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4306cc:	xchg   ecx,eax
  4306cd:	push   ebp
  4306ce:	push   eax
  4306cf:	mov    ebx,0x9efeccde
  4306d4:	and    DWORD PTR [esp+esi*2+0x1567c9dd],eax
  4306db:	push   ebp
  4306dc:	xchg   DWORD PTR [edi+edx*4],edi
  4306df:	aad    0x5
  4306e1:	jg     0x4306a7
  4306e3:	(bad)  [ebp-0x26]
  4306e6:	imul   edx,DWORD PTR [ebx+edi*1-0x363bab71],0xea349391
  4306f1:	call   0x441dc66e
  4306f6:	ret    0xd8bd
  4306f9:	retf   
  4306fa:	stos   BYTE PTR es:[edi],al
  4306fb:	xchg   BYTE PTR [edx+0x1f8d202e],ch
  430701:	(bad)  
  430702:	adc    edx,DWORD PTR [eax]
  430704:	cmp    BYTE PTR [ebx],ah
  430706:	add    ecx,0xbe6854b4
  43070c:	jbe    0x430778
  43070e:	outs   dx,BYTE PTR ds:[esi]
  43070f:	push   0xffffff82
  430711:	jnp    0x43074c
  430713:	mov    esp,0xfe93258b
  430718:	and    DWORD PTR [esi+0x1dcc1d01],ecx
  43071e:	rep lods al,BYTE PTR ds:[esi]
  430720:	push   0x7a
  430722:	push   ss
  430723:	or     al,0xe
  430725:	add    esi,ebp
  430727:	add    eax,DWORD PTR [ecx-0x21]
  43072a:	sub    DWORD PTR [ebx-0x3c],esi
  43072d:	cmp    al,0xfb
  43072f:	or     DWORD PTR [edx+0x48],ecx
  430732:	inc    ebx
  430733:	pop    eax
  430734:	jo     0x4306e6
  430736:	ret    0xd22c
  430739:	dec    edi
  43073a:	cmp    esi,edi
  43073c:	test   edx,ebx
  43073e:	push   cs
  43073f:	and    eax,0xcaed5c74
  430744:	push   edx
  430745:	lods   al,BYTE PTR ds:[esi]
  430746:	jns    0xc3fa8b25
  43074c:	dec    edx
  43074d:	aaa    
  43074e:	jns    0x430713
  430750:	mov    bh,0x9d
  430752:	into   
  430753:	push   edx
  430754:	mul    BYTE PTR ds:[ebx+0x6ecb46fe]
  43075b:	ror    DWORD PTR [esi+ecx*1+0xf],cl
  43075f:	gs inc ecx
  430761:	fiadd  DWORD PTR [esi-0x5ce87352]
  430767:	dec    ecx
  430768:	push   es
  430769:	push   0x54
  43076b:	fist   DWORD PTR [edi-0x31aca02e]
  430771:	sub    al,0xeb
  430773:	adc    eax,0x59e22f76
  430778:	es inc ebp
  43077a:	scas   eax,DWORD PTR es:[edi]
  43077b:	add    DWORD PTR [ebp-0x7d1be06e],eax
  430781:	or     DWORD PTR ds:0x3631b9d8,0xffffffe5
  430788:	std    
  430789:	xchg   esp,eax
  43078a:	adc    esp,edi
  43078c:	jg     0x430736
  43078e:	ins    DWORD PTR es:[edi],dx
  43078f:	repnz push es
  430791:	scas   al,BYTE PTR es:[edi]
  430792:	inc    ecx
  430793:	mov    cs,edi
  430795:	cmp    DWORD PTR [edx],0xffffff92
  430798:	add    eax,0xd3434a3c
  43079d:	or     BYTE PTR [ebp-0x6467b770],ch
  4307a3:	shl    DWORD PTR [edx+0x5b],cl
  4307a6:	cdq    
  4307a7:	mov    ds:0xe33ae4c9,eax
  4307ac:	cwde   
  4307ad:	inc    eax
  4307ae:	ins    DWORD PTR es:[edi],dx
  4307af:	or     BYTE PTR [ebp+0x15acf91d],dl
  4307b5:	sub    ebp,ebx
  4307b7:	in     al,dx
  4307b8:	cli    
  4307b9:	cmp    eax,0xcaee6f3b
  4307be:	scas   eax,DWORD PTR es:[edi]
  4307bf:	mov    ebp,0xb50355f5
  4307c4:	adc    ebx,edx
  4307c6:	popf   
  4307c7:	adc    ecx,ecx
  4307c9:	xchg   esi,eax
  4307ca:	pop    es
  4307cb:	xchg   ecx,eax
  4307cc:	cmp    al,0x8b
  4307ce:	and    ebp,ecx
  4307d0:	or     dl,BYTE PTR [ecx+0x43561ba5]
  4307d6:	mov    esp,DWORD PTR [edx]
  4307d8:	retf   
  4307d9:	xchg   ecx,eax
  4307da:	test   ecx,edx
  4307dc:	call   FWORD PTR [eax]
  4307de:	popf   
  4307df:	hlt    
  4307e0:	xchg   edx,eax
  4307e1:	xchg   ecx,eax
  4307e2:	cmp    esp,esp
  4307e4:	add    bh,ch
  4307e6:	pusha  
  4307e7:	adc    bh,BYTE PTR [eax]
  4307e9:	jb     0x430835
  4307eb:	adc    al,0x3a
  4307ed:	mov    ?,WORD PTR [eax-0x6eab3e7f]
  4307f3:	xchg   edx,eax
  4307f4:	mov    ch,0x10
  4307f6:	inc    esi
  4307f7:	sbb    eax,0x6b623e27
  4307fc:	pop    ss
  4307fd:	fist   DWORD PTR [edx-0x2a]
  430800:	(bad)  
  430801:	sti    
  430802:	push   0xa4a007af
  430807:	dec    esi
  430808:	mov    bl,BYTE PTR [ebx]
  43080a:	jo     0x4307a3
  43080c:	das    
  43080d:	rcl    ebp,1
  43080f:	push   ss
  430810:	push   cs
  430811:	push   edi
  430812:	rcr    DWORD PTR [esp+ebp*8-0x7d],1
  430816:	mov    ebp,0xa24e1225
  43081b:	adc    eax,0x82cbae13
  430820:	jmp    0x43082f
  430822:	into   
  430823:	icebp  
  430824:	sbb    dl,BYTE PTR [ebp+0x7f]
  430827:	jne    0x4307b3
  430829:	add    DWORD PTR [ecx-0x7b09264b],0xffffffcb
  430830:	fs sahf 
  430832:	loopne 0x43088c
  430834:	stc    
  430835:	call   0x543f:0x7c1fed1b
  43083c:	sbb    BYTE PTR [ebx-0x4d27c23e],ah
  430842:	mov    edx,DWORD PTR [ebx+edx*4+0x108f1da2]
  430849:	cs call ecx
  43084c:	sbb    dl,BYTE PTR [ecx+0x66]
  43084f:	cmp    eax,ebx
  430851:	bsf    eax,DWORD PTR [ebp-0x1f1b01d5]
  430858:	cmp    al,0x74
  43085a:	jno    0x430892
  43085c:	cmp    esp,DWORD PTR [ecx-0x35ac3ac4]
  430862:	dec    esp
  430863:	add    edx,DWORD PTR [edi-0x1]
  430866:	add    ah,BYTE PTR [esi+0x40de8c16]
  43086c:	addr16 push cs
  43086e:	addr16 repz jl 0x4308a6
  430872:	in     al,0xa5
  430874:	mov    bl,0xc8
  430876:	sub    bl,bl
  430878:	pcmpgtb mm0,QWORD PTR [esi+0x14]
  43087c:	fld    QWORD PTR [edi+0x3224b3f0]
  430882:	mov    DWORD PTR ds:0xe9c02f16,ebx
  430888:	pop    es
  430889:	mov    bh,0xa6
  43088b:	popf   
  43088c:	sub    BYTE PTR [ecx+0x44],al
  43088f:	leave  
  430890:	fcomp  DWORD PTR [esi+eiz*8-0x59]
  430894:	lahf   
  430895:	cmc    
  430896:	adc    esp,esi
  430898:	sub    ebp,DWORD PTR [ecx]
  43089a:	dec    esi
  43089b:	push   0xcc43ed6d
  4308a0:	loope  0x4308a3
  4308a2:	fst    DWORD PTR ds:0x9f0fc535
  4308a8:	mov    esp,0x6a3a48b6
  4308ad:	sub    eax,0x44fa9b2c
  4308b2:	pushf  
  4308b3:	dec    esp
  4308b4:	pop    ecx
  4308b5:	pop    edi
  4308b6:	repnz fstp DWORD PTR fs:[ebx]
  4308ba:	out    0x6d,al
  4308bc:	out    dx,eax
  4308bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308be:	inc    ebx
  4308bf:	xchg   esp,ebp
  4308c1:	icebp  
  4308c2:	ret    0xc8ad
  4308c5:	fs sti 
  4308c7:	cmp    bh,BYTE PTR [ebp+0x456e32bc]
  4308cd:	pop    es
  4308ce:	scas   eax,DWORD PTR es:[edi]
  4308cf:	sub    bl,ah
  4308d1:	xchg   esp,eax
  4308d2:	aas    
  4308d3:	xchg   DWORD PTR [ebx+0x6d958be0],edx
  4308d9:	push   0x18a6db72
  4308de:	and    bh,BYTE PTR [edi+0x4d]
  4308e1:	lds    esi,FWORD PTR [ecx-0x7a]
  4308e4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308e6:	cmp    edx,DWORD PTR [ebp-0x80]
  4308e9:	pop    eax
  4308ea:	dec    esp
  4308eb:	push   esp
  4308ec:	sub    DWORD PTR [ebx+0x79017b21],esp
  4308f2:	or     ah,BYTE PTR [ecx-0x7d]
  4308f5:	ds retf 0x3483
  4308f9:	retf   
  4308fa:	arpl   WORD PTR [edx],sp
  4308fc:	xor    eax,0x6314441a
  430901:	add    esi,DWORD PTR [ebx-0xbf9cb8]
  430907:	jae    0x4308e2
  430909:	pushf  
  43090a:	hlt    
  43090b:	inc    ebp
  43090c:	pop    ebx
  43090d:	mov    eax,cs:0x6b786fff
  430913:	pop    es
  430914:	leave  
  430915:	push   cs
  430916:	pop    ss
  430917:	adc    eax,0xf086a238
  43091c:	sahf   
  43091d:	mov    eax,0x2063dfa2
  430922:	addr16 jl 0x4308f5
  430925:	cdq    
  430926:	sbb    ax,0xa6fc
  43092a:	clc    
  43092b:	xor    eax,0x544db3e3
  430930:	add    al,0x22
  430932:	into   
  430933:	push   edi
  430934:	jp     0x430982
  430936:	daa    
  430937:	cmp    edx,DWORD PTR [edi+edi*1]
  43093a:	cdq    
  43093b:	mov    dh,0xbf
  43093d:	leave  
  43093e:	pop    edi
  43093f:	ins    DWORD PTR es:[edi],dx
  430940:	idiv   DWORD PTR [edx+0x1a]
  430943:	fwait
  430944:	cs in  eax,dx
  430946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430947:	xor    al,0x68
  430949:	loope  0x43096e
  43094b:	ret    
  43094c:	jae    0x43096b
  43094e:	inc    ebp
  43094f:	sbb    bh,ah
  430951:	mov    DWORD PTR [ebp+0xb],eax
  430954:	push   esi
  430955:	(bad)  
  430956:	es jmp 0x3a02:0xb152403f
  43095e:	add    eax,0xe713e895
  430963:	push   edx
  430964:	test   BYTE PTR [edx-0x64],cl
  430967:	mov    DWORD PTR [eax+0xa],eax
  43096a:	inc    eax
  43096b:	sbb    esp,ebx
  43096d:	lods   eax,DWORD PTR ds:[esi]
  43096e:	push   esp
  43096f:	sub    ecx,DWORD PTR [ecx+eax*8]
  430972:	vminsd xmm0,xmm5,QWORD PTR [edi+ecx*1]
  430977:	test   al,0x16
  430979:	xchg   ebp,eax
  43097a:	dec    ebp
  43097b:	int    0xd1
  43097d:	ja     0x4309b3
  43097f:	add    bl,BYTE PTR [edx]
  430981:	mov    ebx,esp
  430983:	aam    0x5d
  430985:	adc    eax,0x15e5111f
  43098a:	test   DWORD PTR [eax-0x11],esi
  43098d:	dec    ebp
  43098e:	mov    edx,0x218a8c0
  430993:	imul   edx,DWORD PTR es:[esi],0xd2b2a2d9
  43099a:	xchg   edx,eax
  43099b:	mov    al,ds:0xcf2320db
  4309a0:	jle    0x430926
  4309a2:	mov    BYTE PTR [ebp+0x70],cl
  4309a5:	es or  al,0x6f
  4309a8:	mov    ch,0xe5
  4309aa:	jo     0x430932
  4309ac:	mov    WORD PTR ss:[edx],?
  4309af:	push   esi
  4309b0:	sbb    ebx,eax
  4309b2:	mov    ch,0x2f
  4309b4:	xchg   ecx,eax
  4309b5:	mov    ?,WORD PTR [edx+0x20]
  4309b8:	xchg   esp,eax
  4309b9:	retf   0xa6f6
  4309bc:	xor    dl,BYTE PTR ds:0xed6af377
  4309c2:	scas   al,BYTE PTR es:[edi]
  4309c3:	mov    ds:0xf8c039,al
  4309c8:	fst    DWORD PTR [edi]
  4309ca:	ficom  DWORD PTR [edx-0x6721740c]
  4309d0:	sub    DWORD PTR [ebx],edx
  4309d2:	ds inc ebx
  4309d4:	jns    0x43098e
  4309d6:	cli    
  4309d7:	push   ebp
  4309d8:	inc    ebx
  4309d9:	inc    eax
  4309da:	rol    BYTE PTR [esi+ebp*4-0x36],1
  4309de:	mov    eax,ds:0xbb971560
  4309e3:	fisub  DWORD PTR ds:0xf73f2bd2
  4309e9:	mov    edx,0x6f613ebb
  4309ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309ef:	mov    dh,0xd1
  4309f1:	mov    ds:0xae3b6dc2,eax
  4309f6:	(bad)  
  4309f7:	sub    BYTE PTR [ebp+0x445e7baa],ah
  4309fd:	retf   
  4309fe:	push   0xffffffab
  430a00:	mov    DWORD PTR gs:[edx+ebx*2-0x7f844983],ebp
  430a08:	push   es
  430a09:	cwde   
  430a0a:	pusha  
  430a0b:	iret   
  430a0c:	inc    ebx
  430a0d:	sbb    edx,DWORD PTR [ebx]
  430a0f:	out    0x6f,al
  430a11:	stc    
  430a12:	pop    ds
  430a13:	adc    eax,0x924448db
  430a18:	ja     0x430a4f
  430a1a:	cmp    eax,0xd1f14aa4
  430a1f:	fsubr  DWORD PTR [ecx]
  430a21:	or     dh,BYTE PTR [esi]
  430a23:	and    BYTE PTR [esi-0x54],ah
  430a26:	neg    DWORD PTR [esp+ebp*8]
  430a29:	cmc    
  430a2a:	sub    BYTE PTR [ebx+0x2a9a83ca],0xdd
  430a31:	jle    0x4309b7
  430a33:	lods   eax,DWORD PTR ds:[esi]
  430a34:	scas   eax,DWORD PTR es:[edi]
  430a35:	sub    edx,DWORD PTR [eax]
  430a37:	and    dh,cl
  430a39:	xor    DWORD PTR [edi+0x12],ecx
  430a3c:	lods   al,BYTE PTR ds:[esi]
  430a3d:	or     BYTE PTR ds:[edx+0x59f595bc],bl
  430a44:	sub    eax,0x28c52135
  430a49:	push   esp
  430a4a:	imul   esi,ecx,0xec7b444d
  430a50:	stos   BYTE PTR es:[edi],al
  430a51:	mov    BYTE PTR [edi+0x3e],cl
  430a54:	jg     0x430ac1
  430a56:	out    0xbe,eax
  430a58:	adc    al,0xd7
  430a5a:	mov    esp,0x629c9510
  430a5f:	mov    edx,0x25ebae57
  430a64:	outs   dx,DWORD PTR ds:[esi]
  430a65:	pop    ecx
  430a66:	sub    BYTE PTR [edx+0x4d29c116],bl
  430a6c:	inc    ebp
  430a6d:	xchg   ebp,eax
  430a6e:	aad    0x28
  430a70:	sbb    al,0x32
  430a72:	test   ecx,eax
  430a74:	cs sub al,0xb7
  430a77:	add    BYTE PTR [edx+eiz*2+0x214bd060],dl
  430a7e:	and    BYTE PTR [ebx+esi*8],0x84
  430a82:	mov    eax,ds:0x3b99d2d3
  430a87:	and    BYTE PTR [eax-0xe],dh
  430a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a8b:	out    dx,eax
  430a8c:	aaa    
  430a8d:	out    dx,al
  430a8e:	xchg   BYTE PTR [eax-0x4a76d3de],bl
  430a94:	add    cl,ch
  430a96:	xchg   edi,eax
  430a97:	xor    BYTE PTR ds:0x80716bd8,0x8
  430a9e:	nop
  430a9f:	in     al,dx
  430aa0:	sbb    DWORD PTR [ebx+0xbfe49a2],eax
  430aa6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430aa8:	mov    dh,0xeb
  430aaa:	or     eax,esi
  430aac:	xchg   BYTE PTR [esi-0x6b],bh
  430aaf:	or     ebx,DWORD PTR [ebx+0x30]
  430ab2:	pop    ecx
  430ab3:	dec    BYTE PTR [ebx]
  430ab5:	jp     0x430b2d
  430ab7:	(bad)  
  430ab8:	lahf   
  430ab9:	in     eax,dx
  430aba:	(bad)  
  430abc:	adc    DWORD PTR [ebp-0x4d],ebp
  430abf:	aad    0x5e
  430ac1:	adc    BYTE PTR [ebx+0x21],cl
  430ac4:	dec    ebx
  430ac5:	in     eax,0x70
  430ac7:	adc    ch,ch
  430ac9:	and    BYTE PTR [edi],ch
  430acb:	adc    DWORD PTR [ecx+esi*8+0x1b1ea71e],ebx
  430ad2:	sub    bh,0x6d
  430ad5:	bound  edi,QWORD PTR [edx-0x5d6acf83]
  430adb:	loopne 0x430b09
  430add:	mov    cl,0xb7
  430adf:	xlat   BYTE PTR ds:[ebx]
  430ae0:	fnsave [eax+0x9]
  430ae3:	jbe    0x430b34
  430ae5:	ss ja  0x430b01
  430ae8:	mov    ds:0xc5a12315,al
  430aed:	mov    eax,DWORD PTR [esp+edi*2-0x5cd957b0]
  430af4:	js     0x430b4f
  430af6:	cwde   
  430af7:	xor    al,BYTE PTR [eax-0x38]
  430afa:	xchg   ebp,eax
  430afb:	cli    
  430afc:	repz pop es
  430afe:	mov    fs,ecx
  430b00:	(bad)  [ecx]
  430b02:	lds    ebx,FWORD PTR [edi-0x55]
  430b05:	sti    
  430b06:	inc    eax
  430b07:	mov    al,ds:0x5fde39a2
  430b0c:	stos   DWORD PTR es:[edi],eax
  430b0d:	mov    ds:0x6908a9d3,al
  430b12:	xchg   edi,eax
  430b13:	lods   eax,DWORD PTR ds:[esi]
  430b14:	fnstcw WORD PTR [eax+0x68071a79]
  430b1a:	imul   ecx,DWORD PTR [ecx+0x4a7746b0],0xffffff97
  430b21:	js     0x430ac0
  430b23:	mov    bl,0xd9
  430b25:	ret    
  430b26:	fnsave [esi-0x51]
  430b29:	jns    0x430ba2
  430b2b:	outs   dx,BYTE PTR ds:[esi]
  430b2c:	mov    edx,0x988f3fa6
  430b31:	ret    
  430b32:	push   esi
  430b33:	in     eax,dx
  430b34:	push   ds
  430b35:	mov    eax,ds:0xf5ecd6f2
  430b3a:	sbb    esp,DWORD PTR [ebp-0xa29e54d]
  430b40:	scas   al,BYTE PTR es:[edi]
  430b41:	mov    ebx,0x826f0fb6
  430b46:	xlat   BYTE PTR ds:[ebx]
  430b47:	xor    BYTE PTR [ebp-0xc],dl
  430b4a:	add    eax,0xeae28a94
  430b4f:	pop    esi
  430b50:	add    BYTE PTR [edx],al
  430b52:	pop    ebx
  430b53:	ins    DWORD PTR es:[edi],dx
  430b54:	or     BYTE PTR [esi-0x1c],bh
  430b57:	lods   al,BYTE PTR ds:[esi]
  430b58:	ins    DWORD PTR es:[edi],dx
  430b59:	and    eax,0x94d8a4f
  430b5e:	(bad)  
  430b5f:	xchg   edi,eax
  430b60:	dec    ebx
  430b61:	and    DWORD PTR [edx+0x5bee55f2],edx
  430b67:	mov    eax,ds:0x4b257f7f
  430b6c:	add    eax,DWORD PTR [ebx-0x3e]
  430b6f:	test   al,0x54
  430b71:	scas   al,BYTE PTR es:[edi]
  430b72:	inc    ebp
  430b73:	mov    cl,0x8e
  430b75:	aam    0x2d
  430b77:	add    esi,edi
  430b79:	out    0x71,eax
  430b7b:	cwde   
  430b7c:	dec    ecx
  430b7d:	push   0x64944dc1
  430b82:	popf   
  430b83:	cli    
  430b84:	(bad)
  430b87:	into   
  430b88:	xlat   BYTE PTR ds:[ebx]
  430b89:	repz aas 
  430b8b:	jmp    0x430bd6
  430b8d:	or     al,0x22
  430b8f:	stos   BYTE PTR es:[edi],al
  430b90:	lods   al,BYTE PTR fs:[esi]
  430b92:	cmc    
  430b93:	cmp    esp,DWORD PTR [ebx-0x12]
  430b96:	pop    eax
  430b97:	add    DWORD PTR [edi],eax
  430b99:	inc    ebp
  430b9a:	cwde   
  430b9b:	pop    ss
  430b9c:	dec    edx
  430b9d:	and    dh,BYTE PTR [ecx-0x17]
  430ba0:	push   esi
  430ba1:	push   0x7740a7e0
  430ba6:	ss mov bh,0x94
  430ba9:	or     eax,0xc693bcb0
  430bae:	add    al,0xbe
  430bb0:	dec    edi
  430bb1:	add    ecx,edx
  430bb3:	outs   dx,DWORD PTR ds:[esi]
  430bb4:	push   0xe076a5e4
  430bb9:	pushf  
  430bba:	mov    ebp,0x1229b57d
  430bbf:	jl     0x430b89
  430bc1:	lock mov ebx,0x802d4030
  430bc7:	out    dx,eax
  430bc8:	ret    
  430bc9:	aas    
  430bca:	pop    edi
  430bcb:	imul   esp,DWORD PTR [ebx],0x5c
  430bce:	mov    eax,ds:0x1faea5d3
  430bd3:	stc    
  430bd4:	outs   dx,BYTE PTR ds:[esi]
  430bd5:	xchg   esp,eax
  430bd6:	lds    ebx,FWORD PTR [edx-0x3cd5f541]
  430bdc:	ror    BYTE PTR ds:0x33a65440,cl
  430be2:	fwait
  430be3:	rcl    bh,1
  430be5:	leave  
  430be6:	add    al,0xe0
  430be8:	adc    al,0x63
  430bea:	cmp    ch,BYTE PTR [eax]
  430bec:	dec    esi
  430bed:	repnz test BYTE PTR [eax+0xc],dh
  430bf1:	and    edx,esi
  430bf3:	imul   BYTE PTR [edi]
  430bf5:	xor    al,0xca
  430bf7:	jg     0x430c21
  430bf9:	fdiv   DWORD PTR ds:0xeb733784
  430bff:	push   edx
  430c00:	lea    ebp,ds:0xe4902a17
  430c06:	cmp    DWORD PTR [eax-0x1f8df6d1],esi
  430c0c:	mov    edi,0xc27bf322
  430c11:	mov    ah,0x4e
  430c13:	shl    BYTE PTR [bx+di],1
  430c16:	push   esi
  430c17:	out    0x4f,eax
  430c19:	js     0x430bbb
  430c1b:	jle    0x430c04
  430c1d:	int3   
  430c1e:	pop    ds
  430c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c20:	push   ecx
  430c21:	mov    ebp,0x4f8b9df5
  430c26:	test   al,0x87
  430c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c29:	dec    ecx
  430c2a:	inc    eax
  430c2b:	es jne 0x430c06
  430c2e:	scas   eax,DWORD PTR es:[edi]
  430c2f:	pop    esi
  430c30:	mov    al,BYTE PTR [ecx+edi*8-0x28]
  430c34:	sub    esp,0xfffffff1
  430c37:	outs   dx,DWORD PTR ds:[esi]
  430c38:	mov    ebp,0x938963bf
  430c3d:	int    0xc0
  430c3f:	fnstenv [ebp-0x4d]
  430c42:	call   0xb9ff:0x65155c4c
  430c49:	jg     0x430cac
  430c4b:	adc    ebp,DWORD PTR [ebp-0x4]
  430c4e:	jmp    0x430ca2
  430c50:	shl    BYTE PTR [esi+0x255db7c6],1
  430c56:	ins    DWORD PTR es:[edi],dx
  430c57:	dec    edi
  430c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c59:	xchg   esi,eax
  430c5a:	sbb    eax,DWORD PTR [ebx+0x7752e06a]
  430c60:	adc    DWORD PTR [eax+edx*1],ebx
  430c63:	xlat   BYTE PTR ds:[ebx]
  430c64:	mov    cs:0x5f984196,al
  430c6a:	in     al,0xbc
  430c6c:	icebp  
  430c6d:	dec    edi
  430c6e:	sbb    al,0xc5
  430c70:	push   edi
  430c71:	xchg   edx,eax
  430c72:	scas   al,BYTE PTR es:[edi]
  430c73:	ins    DWORD PTR es:[edi],dx
  430c74:	cs or  ch,dl
  430c77:	(bad)  
  430c79:	loop   0x430cd6
  430c7b:	ss push edi
  430c7d:	dec    ebp
  430c7e:	aas    
  430c7f:	neg    DWORD PTR [eax]
  430c81:	pop    ebx
  430c82:	bound  edx,QWORD PTR [ebx+0x1eb57c00]
  430c88:	cmp    edi,eax
  430c8a:	dec    esp
  430c8b:	addr16 sti 
  430c8d:	xchg   esi,eax
  430c8e:	and    ch,BYTE PTR [ecx-0x4e]
  430c91:	pop    ecx
  430c92:	ret    
  430c93:	mov    esp,0x7fc20854
  430c98:	inc    esp
  430c99:	ja     0x430c53
  430c9b:	xchg   edx,eax
  430c9c:	retf   
  430c9d:	(bad)  
  430c9e:	in     al,0xe1
  430ca0:	push   esi
  430ca1:	aam    0x28
  430ca3:	(bad)  
  430ca4:	xor    esi,ebp
  430ca6:	cdq    
  430ca7:	xchg   ebp,eax
  430ca8:	sbb    eax,0x64de58c1
  430cad:	pop    ebp
  430cae:	or     al,0x3e
  430cb0:	les    ebx,FWORD PTR [esi]
  430cb2:	cmp    esi,DWORD PTR [esi-0x5f]
  430cb5:	cmp    eax,0x1d705ba3
  430cba:	ret    0xab8f
  430cbd:	jae    0x430c5c
  430cbf:	push   es
  430cc0:	xor    bh,bh
  430cc2:	xchg   BYTE PTR [eax],bh
  430cc4:	sbb    esp,eax
  430cc6:	pop    esp
  430cc7:	xchg   edi,eax
  430cc8:	jge    0x430d15
  430cca:	pop    ss
  430ccb:	jo     0x430cf0
  430ccd:	arpl   WORD PTR [edx-0x33],cx
  430cd0:	adc    eax,0xfc59b7d
  430cd5:	shr    dh,1
  430cd7:	imul   ebx,DWORD PTR [eiz*2-0x25b667eb],0x63a178e7
  430ce2:	pop    eax
  430ce3:	sbb    esp,DWORD PTR [edi+0x4e]
  430ce6:	adc    DWORD PTR [edi-0x7d9020cb],edi
  430cec:	(bad)  
  430cee:	sbb    ebp,edi
  430cf0:	test   eax,0x9fe496d7
  430cf5:	inc    cx
  430cf7:	cmp    DWORD PTR [edx],ecx
  430cf9:	add    DWORD PTR [ecx+edi*4],edx
  430cfc:	in     eax,0x7c
  430cfe:	fcmovnu st,st(1)
  430d00:	mov    ?,WORD PTR [ecx-0x17c70525]
  430d06:	stc    
  430d07:	and    edx,DWORD PTR [esi+0x1d]
  430d0a:	jmp    0xd6aa:0x512f6481
  430d11:	adc    al,0xc1
  430d13:	dec    esi
  430d14:	clc    
  430d15:	push   ss
  430d16:	xchg   esi,eax
  430d17:	sub    DWORD PTR [eax],0xf7871a36
  430d1d:	fs das 
  430d1f:	rol    ah,1
  430d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430d22:	push   esp
  430d23:	xor    BYTE PTR [eax],cl
  430d25:	mov    edi,0x259c85f8
  430d2a:	mov    cl,0xa2
  430d2c:	mov    cl,0xe6
  430d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430d2f:	push   es
  430d30:	xchg   edx,eax
  430d31:	mov    es,esi
  430d33:	mov    esp,0x23067c7c
  430d38:	pop    ebx
  430d39:	(bad)  
  430d3a:	xchg   ebx,eax
  430d3b:	sbb    al,0xa2
  430d3d:	sbb    DWORD PTR [esi],0x975d3155
  430d43:	jg     0x430ccb
  430d45:	or     al,0xd2
  430d47:	sbb    al,BYTE PTR [edx-0x5bb56220]
  430d4d:	pop    esi
  430d4e:	repz sbb eax,0x6e8266fe
  430d54:	lods   al,BYTE PTR ss:[esi]
  430d56:	dec    esp
  430d57:	mov    ch,0x7a
  430d59:	ficomp DWORD PTR [edi+esi*4+0x35]
  430d5d:	jle    0x430d42
  430d5f:	inc    esi
  430d60:	inc    esi
  430d61:	jmp    0xece3c4b2
  430d66:	pop    ds
  430d67:	retf   0xddcc
  430d6a:	scas   eax,DWORD PTR es:[edi]
  430d6b:	jbe    0x430cef
  430d6d:	sbb    esp,DWORD PTR ds:0x3f034e8b
  430d73:	mov    dh,0xb2
  430d75:	mov    cl,0xe7
  430d77:	call   0x720011c0
  430d7c:	bound  ecx,QWORD PTR [edx-0x29]
  430d7f:	bound  ebp,QWORD PTR [eax+0x65e2f4c4]
  430d85:	jge    0x430dfb
  430d87:	dec    edi
  430d88:	out    dx,eax
  430d89:	fdivr  QWORD PTR [edi-0x241a7fb9]
  430d8f:	mov    edi,0xec6f71c9
  430d94:	jne    0x430ded
  430d96:	cmp    eax,0xa38d2b55
  430d9b:	imul   edx,DWORD PTR [edi],0xfffffff2
  430d9e:	jnp    0x430e0e
  430da0:	retf   
  430da1:	cmc    
  430da2:	pop    ebx
  430da3:	sub    DWORD PTR [esi-0x38],ecx
  430da6:	sub    al,BYTE PTR [ecx-0x19]
  430da9:	daa    
  430daa:	mov    ecx,0xd3290c73
  430daf:	add    dl,0x76
  430db2:	and    eax,0xef77b4e3
  430db7:	mov    bh,0x7c
  430db9:	sahf   
  430dba:	mov    ?,ebx
  430dbc:	sub    edi,DWORD PTR [ecx]
  430dbe:	gs pop ds
  430dc0:	ja     0x430e37
  430dc2:	call   0x8957:0x461d2a1
  430dc9:	mov    eax,ds:0xb77c1279
  430dce:	inc    ebp
  430dcf:	in     al,dx
  430dd0:	push   0xea931ae3
  430dd5:	gs data16 sub bh,dl
  430dd9:	add    ebp,eax
  430ddb:	sbb    DWORD PTR [ebx-0x80],edx
  430dde:	dec    edi
  430ddf:	icebp  
  430de0:	pusha  
  430de1:	lods   eax,DWORD PTR ds:[esi]
  430de2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430de3:	jmp    0x504c3d1c
  430de8:	lods   eax,DWORD PTR ds:[esi]
  430de9:	cmp    al,0x4a
  430deb:	or     BYTE PTR [edi],ch
  430ded:	cmp    eax,0x79184dda
  430df2:	std    
  430df3:	out    0x73,eax
  430df5:	mov    ch,0x70
  430df7:	lods   al,BYTE PTR cs:[esi]
  430df9:	adc    ebp,DWORD PTR [esi-0x26]
  430dfc:	xchg   edx,eax
  430dfd:	mov    ?,WORD PTR [ebp-0x80]
  430e00:	(bad)  
  430e01:	stos   DWORD PTR es:[edi],eax
  430e02:	mov    bl,0x7b
  430e04:	and    BYTE PTR [ecx],ch
  430e06:	popf   
  430e07:	push   0x12
  430e09:	ins    BYTE PTR es:[edi],dx
  430e0a:	mov    al,ds:0x216d336f
  430e0f:	mov    al,0xaa
  430e11:	xor    eax,0x15fda64a
  430e16:	sub    ah,dl
  430e18:	mov    ebx,DWORD PTR [edi*2+0x132f248]
  430e1f:	lods   al,BYTE PTR ds:[esi]
  430e20:	push   esp
  430e21:	xchg   ebp,eax
  430e22:	add    al,0xd6
  430e24:	inc    esi
  430e25:	repnz mov DWORD PTR [bx],ecx
  430e29:	loop   0x430e05
  430e2b:	pushf  
  430e2c:	add    al,0x3f
  430e2e:	mov    cl,0x46
  430e30:	xor    bl,BYTE PTR ds:0x674a1f94
  430e36:	cdq    
  430e37:	sub    eax,0xaaa71f49
  430e3c:	add    cl,BYTE PTR [edx]
  430e3e:	cmp    BYTE PTR [ebx],0x5d
  430e41:	sbb    DWORD PTR [ebx],ebp
  430e43:	out    0xae,eax
  430e45:	xchg   BYTE PTR [ebp+0x5d],cl
  430e48:	sbb    al,0xf9
  430e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e4b:	mov    ecx,0xb6a676a
  430e50:	aas    
  430e51:	shl    DWORD PTR ds:0x8ab7b4f1,0xb4
  430e58:	lods   al,BYTE PTR ds:[esi]
  430e59:	hlt    
  430e5a:	jp     0x430e70
  430e5c:	jg     0x430ec2
  430e5e:	push   edi
  430e5f:	shr    DWORD PTR [ecx-0x4946d9fd],cl
  430e65:	inc    esi
  430e66:	nop
  430e67:	jmp    0x80a77c5b
  430e6c:	std    
  430e6d:	inc    ebx
  430e6e:	lds    ebx,FWORD PTR [ecx-0x18]
  430e71:	or     bh,al
  430e73:	out    dx,eax
  430e74:	mov    esi,0xa7bd1fc4
  430e79:	fcomp  QWORD PTR [edi]
  430e7b:	cld    
  430e7c:	push   0xffffff92
  430e7e:	cli    
  430e7f:	dec    dl
  430e81:	shl    DWORD PTR [eax+0x43],0x31
  430e85:	lahf   
  430e86:	mov    esp,0x583a696b
  430e8b:	(bad)  
  430e8c:	and    al,0xf7
  430e8e:	push   ss
  430e8f:	outs   dx,BYTE PTR ss:[esi]
  430e91:	mov    ch,0xb4
  430e93:	push   0x75
  430e95:	in     al,dx
  430e96:	lea    edi,[esp+esi*1-0x743a288b]
  430e9d:	or     BYTE PTR [eax-0x227da7fb],0x97
  430ea4:	jo     0x430eea
  430ea6:	out    0x80,eax
  430ea8:	std    
  430ea9:	out    dx,eax
  430eaa:	xchg   esi,eax
  430eab:	cmp    esp,DWORD PTR [ebp+edi*8+0x21602ad3]
  430eb2:	stos   DWORD PTR es:[edi],eax
  430eb3:	mov    eax,0x6e0c1425
  430eb8:	or     al,0xac
  430eba:	or     DWORD PTR [ebp+eax*4-0x6],0x67
  430ebf:	pop    ebp
  430ec0:	stos   DWORD PTR es:[edi],eax
  430ec1:	fdiv   st(5),st
  430ec3:	sub    BYTE PTR [ebp-0x7f02c93f],ch
  430ec9:	sub    bh,BYTE PTR [ecx-0x52]
  430ecc:	xor    DWORD PTR [ecx+0x2d814067],0x767d535d
  430ed6:	rol    DWORD PTR [ecx+0x5d],0x8a
  430eda:	add    BYTE PTR [ecx],0x7b
  430edd:	lods   eax,DWORD PTR ds:[esi]
  430ede:	aam    0x50
  430ee0:	test   DWORD PTR [edx],ecx
  430ee2:	and    al,0x7c
  430ee4:	inc    eax
  430ee5:	jecxz  0x430e82
  430ee7:	cld    
  430ee8:	mov    edx,0x7d8b600d
  430eed:	mov    WORD PTR [ecx],fs
  430eef:	lea    esp,[ebx+0x2c3236b0]
  430ef5:	int    0x41
  430ef7:	mov    ?,edx
  430ef9:	addr16 xchg esp,eax
  430efb:	test   eax,0xef97d46c
  430f00:	lock add al,0x95
  430f03:	pop    edx
  430f04:	sbb    cl,al
  430f06:	not    DWORD PTR [esi]
  430f08:	sub    al,bh
  430f0a:	pusha  
  430f0b:	fsubr  DWORD PTR [eax]
  430f0d:	shl    DWORD PTR ds:0xeb1cadfe,cl
  430f13:	out    dx,eax
  430f14:	scas   al,BYTE PTR es:[edi]
  430f15:	push   esp
  430f16:	aas    
  430f17:	mov    cl,BYTE PTR [ebx-0x15]
  430f1a:	jne    0x430f46
  430f1c:	push   0xbbebb11
  430f21:	dec    ecx
  430f22:	hlt    
  430f23:	repnz add eax,0xe8f853b7
  430f29:	pop    edi
  430f2a:	pop    ss
  430f2b:	and    eax,0xdfd00f86
  430f30:	test   DWORD PTR [edi-0x21],edx
  430f33:	sahf   
  430f34:	pop    ss
  430f35:	mov    bh,0x98
  430f37:	mov    WORD PTR [ecx-0x73],gs
  430f3a:	cmp    BYTE PTR [ebp-0x3d494189],0x21
  430f41:	cli    
  430f42:	jg     0x430f7f
  430f44:	(bad)  
  430f46:	int3   
  430f47:	ror    dh,1
  430f49:	inc    ebp
  430f4a:	push   edi
  430f4b:	xchg   ebp,eax
  430f4c:	mov    al,0x94
  430f4e:	test   al,0x99
  430f50:	pop    esi
  430f51:	sub    dl,BYTE PTR [esp+edx*2-0x29f341a4]
  430f58:	daa    
  430f59:	push   ebp
  430f5a:	push   esi
  430f5b:	mov    dh,0xeb
  430f5d:	sub    ecx,DWORD PTR [eax-0x7b]
  430f60:	inc    ebp
  430f61:	out    dx,eax
  430f62:	inc    edi
  430f63:	leave  
  430f64:	xchg   ecx,eax
  430f65:	mov    edi,0xca69bf42
  430f6a:	and    edi,esp
  430f6c:	jae    0x430f01
  430f6e:	xchg   edx,eax
  430f6f:	inc    ebx
  430f70:	out    dx,eax
  430f71:	rcr    DWORD PTR [esi-0x2f],0xc7
  430f75:	inc    ebx
  430f76:	inc    ebp
  430f77:	pop    ebx
  430f78:	mov    ah,0x3e
  430f7a:	in     al,0x43
  430f7c:	inc    edi
  430f7d:	dec    ecx
  430f7e:	jmp    0xcac562de
  430f83:	jle    0x430f17
  430f85:	xchg   edi,eax
  430f86:	xor    ch,BYTE PTR [ecx+0x69]
  430f89:	addr16 out dx,eax
  430f8b:	jl     0x430fcb
  430f8d:	rol    ebx,0x88
  430f90:	xor    al,0xee
  430f92:	or     ebx,edi
  430f94:	mov    WORD PTR [esi+edx*2+0x555fe483],ss
  430f9b:	dec    edi
  430f9c:	xchg   edi,eax
  430f9d:	xchg   edx,eax
  430f9e:	gs ja  0x430f8f
  430fa1:	or     al,0xf
  430fa3:	loope  0x430f5b
  430fa5:	mov    esp,0x3b94b3fb
  430faa:	mov    eax,ebx
  430fac:	sti    
  430fad:	(bad)  
  430fae:	mov    eax,ds:0xbb459fe8
  430fb3:	cmp    al,0x8e
  430fb5:	dec    ebp
  430fb6:	add    al,0x53
  430fb8:	adc    eax,0x24a6f974
  430fbd:	pop    esi
  430fbe:	mov    edx,0x27540e43
  430fc3:	pop    ebp
  430fc4:	div    BYTE PTR [ebp+0x28]
  430fc7:	and    al,0x6e
  430fc9:	addr16 jnp 0x431010
  430fcc:	mov    ebx,0x6f3250c8
  430fd1:	sti    
  430fd2:	sub    BYTE PTR [edx],0xc
  430fd5:	cmp    al,0xa9
  430fd7:	sar    DWORD PTR [eax-0x592ac844],1
  430fdd:	sbb    BYTE PTR [ebp+ecx*1-0x57],bh
  430fe1:	(bad)  
  430fe2:	daa    
  430fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430fe4:	retf   
  430fe5:	xor    al,0xf2
  430fe7:	cdq    
  430fe8:	push   eax
  430fe9:	cmp    BYTE PTR [ecx+0x2b],cl
  430fec:	mov    dl,0xce
  430fee:	sub    DWORD PTR [ebx],0x6cfde921
  430ff4:	mov    cl,BYTE PTR [edx+0x1f440920]
  430ffa:	in     eax,0x17
  430ffc:	sbb    BYTE PTR [edi+0x72],bh
  430fff:	jns    0x43102e
  431001:	fist   DWORD PTR [ebp-0x6d]
  431004:	mov    fs,WORD PTR [ebx+0x5c3d3dee]
  43100a:	push   ecx
  43100b:	repz or al,0x4c
  43100e:	shr    DWORD PTR [edx-0x2ab2e37c],cl
  431014:	popf   
  431015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431016:	fidiv  WORD PTR [eax+0x7c7c35f7]
  43101c:	sub    eax,0x35fc4514
  431021:	lea    ebx,[ebp+ebp*2+0x7503695b]
  431028:	mov    ds:0xf584dc5,al
  43102d:	cwde   
  43102e:	sub    DWORD PTR [edi-0x24],esi
  431031:	repz mov eax,ds:0x11b81fa9
  431037:	lahf   
  431038:	adc    BYTE PTR [eax],ch
  43103a:	pop    es
  43103b:	push   0xb
  43103d:	ss dec edx
  43103f:	in     eax,dx
  431040:	ins    DWORD PTR es:[edi],dx
  431041:	mov    eax,ds:0x908011e9
  431046:	sub    ebx,DWORD PTR [edx+0x1e]
  431049:	cs jo  0x4310bb
  43104c:	lea    eax,[esi-0x113e8d2d]
  431052:	(bad)  
  431053:	popf   
  431054:	sub    BYTE PTR [ebx-0x19],ch
  431057:	sub    DWORD PTR [ebp-0x5bfc8bba],ebp
  43105d:	aas    
  43105e:	mov    esp,0x6cf0c342
  431063:	push   ecx
  431064:	rcl    DWORD PTR [esi],1
  431066:	xor    esi,DWORD PTR [esi-0x6a]
  431069:	xchg   BYTE PTR [edx+0x36b61319],dh
  43106f:	and    eax,0x7c449200
  431074:	sub    al,0xcb
  431076:	mov    bl,BYTE PTR [bp+si-0x14]
  43107a:	dec    esi
  43107b:	icebp  
  43107c:	fisttp DWORD PTR ss:[ebx-0x3e2ad3ff]
  431083:	shr    BYTE PTR [esp+edx*4+0x2],1
  431087:	jae    0x4310da
  431089:	mov    edi,0x52e34b99
  43108e:	mov    ds:0x8c9960ce,al
  431093:	retf   
  431094:	test   al,0xbb
  431096:	rcl    dl,0xf2
  431099:	rcr    WORD PTR [esi+0x5a7c393a],0xa6
  4310a1:	jmp    DWORD PTR [ebx+0x56]
  4310a4:	and    eax,0xa6318e30
  4310a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4310aa:	cmp    ah,BYTE PTR [ecx+ebx*1-0x7d]
  4310ae:	xor    DWORD PTR [ebx+0x6],eax
  4310b1:	mov    ebp,0xc2d68bf6
  4310b6:	(bad)  [ebx]
  4310b8:	sahf   
  4310b9:	leave  
  4310ba:	cmp    bh,BYTE PTR [edx-0x33]
  4310bd:	mov    bh,BYTE PTR [esi-0x33]
  4310c0:	loopne 0x43111c
  4310c2:	push   0xfaec1f5
  4310c7:	add    edx,DWORD PTR [ebx+0x6]
  4310ca:	inc    ebx
  4310cb:	jmp    FWORD PTR [eax]
  4310cd:	scas   al,BYTE PTR es:[edi]
  4310ce:	and    al,0xd8
  4310d0:	idiv   bh
  4310d2:	or     BYTE PTR ds:0x33fd7e39,ah
  4310d8:	mov    esi,0x974c9ea7
  4310dd:	addr16 test dh,cl
  4310e0:	js     0x43108d
  4310e2:	push   ds
  4310e3:	jmp    0x431077
  4310e5:	or     DWORD PTR ss:[esi+0x12fc2dff],edx
  4310ec:	icebp  
  4310ed:	cmp    cl,BYTE PTR [ebp-0x2be55317]
  4310f3:	cmc    
  4310f4:	or     DWORD PTR [edi+0x2a55b9b5],0x70ba099a
  4310fe:	sbb    DWORD PTR [eax+edi*4+0x64],esp
  431102:	xor    BYTE PTR [ecx-0x5c],bh
  431105:	add    BYTE PTR [ecx+0xc],bh
  431108:	stos   BYTE PTR es:[edi],al
  431109:	mov    al,ds:0x150bd4a2
  43110e:	sbb    BYTE PTR [ebp-0x1b],ch
  431111:	mov    eax,0xac50d66
  431116:	xchg   edx,eax
  431117:	mov    esp,0xff199311
  43111c:	jb     0x43111f
  43111e:	mul    BYTE PTR gs:[eax-0x50]
  431122:	ret    
  431123:	push   edx
  431124:	xor    ebx,DWORD PTR [esi-0x77]
  431127:	xor    eax,0x50064b7
  43112c:	hlt    
  43112d:	or     ebp,DWORD PTR [edi-0x1b]
  431130:	test   al,0xae
  431132:	(bad)  
  431133:	ins    DWORD PTR es:[edi],dx
  431134:	dec    edx
  431135:	nop
  431136:	sar    BYTE PTR [edx+ecx*4-0x27197e20],1
  43113d:	js     0x431159
  43113f:	mov    esp,0x61776236
  431144:	pushf  
  431145:	mov    ecx,0x55a00698
  43114a:	cmp    BYTE PTR [ebp+0x7174142d],bl
  431150:	or     DWORD PTR [edi-0x33dc6e94],esp
  431156:	lahf   
  431157:	sbb    DWORD PTR [edi-0xe19816a],esi
  43115d:	cmc    
  43115e:	sbb    bl,bl
  431160:	push   edx
  431161:	adc    al,0x5b
  431163:	(bad)  
  431164:	push   esi
  431165:	push   ss
  431166:	(bad)  
  431168:	jl     0x4311e2
  43116a:	add    BYTE PTR es:[ecx+0x32],ah
  43116e:	(bad)  
  43116f:	lahf   
  431170:	xor    ecx,eax
  431172:	mov    esi,DWORD PTR ds:0xe0d7fca5
  431178:	mov    DWORD PTR [esi],eax
  43117a:	inc    esi
  43117b:	add    BYTE PTR [esi-0x1adfa79e],dh
  431181:	and    BYTE PTR [ebx+0x18],bh
  431184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431185:	or     DWORD PTR ds:0xeb1c2768,ebx
  43118b:	mov    ah,0x6c
  43118d:	cli    
  43118e:	add    ah,BYTE PTR [edi-0x25de7923]
  431194:	mov    dl,dh
  431196:	out    0x64,eax
  431198:	pop    ebx
  431199:	xchg   esi,eax
  43119a:	pop    ss
  43119b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43119c:	inc    eax
  43119e:	idiv   DWORD PTR [edx]
  4311a0:	dec    esp
  4311a1:	xor    BYTE PTR [ebp+edx*8-0x2f],ah
  4311a5:	sbb    al,0xa1
  4311a7:	rol    DWORD PTR [ecx-0x2ea7de1c],cl
  4311ad:	lock aaa 
  4311af:	outs   dx,DWORD PTR ds:[esi]
  4311b0:	pop    ebp
  4311b1:	xchg   edx,eax
  4311b2:	outs   dx,BYTE PTR ds:[esi]
  4311b3:	fst    QWORD PTR ds:0x4d41c614
  4311b9:	jmp    0xd3cb:0xfd8d2cb4
  4311c0:	fwait
  4311c1:	mov    dl,0xf0
  4311c3:	jae    0x43118a
  4311c5:	gs sti 
  4311c7:	inc    edx
  4311c8:	enter  0xdc41,0xc7
  4311cc:	mov    al,0xc9
  4311ce:	jno    0x4311db
  4311d0:	fcmovnu st,st(3)
  4311d2:	call   0x34c3:0xbfd8da8f
  4311d9:	cmp    eax,0xccefe6ee
  4311de:	dec    ebx
  4311df:	das    
  4311e0:	clc    
  4311e1:	in     eax,0x91
  4311e3:	std    
  4311e4:	ret    
  4311e5:	stc    
  4311e6:	sub    eax,0x2af898bc
  4311eb:	daa    
  4311ec:	lods   eax,DWORD PTR ds:[esi]
  4311ed:	push   0x54
  4311ef:	push   esi
  4311f0:	je     0x431200
  4311f2:	add    edi,edi
  4311f4:	cmp    eax,0x8dde31af
  4311f9:	add    dh,bl
  4311fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4311fc:	cdq    
  4311fd:	ja     0x4311c5
  4311ff:	test   BYTE PTR [ebx],cl
  431201:	mov    eax,ds:0xc14c67e0
  431206:	cmp    al,0xef
  431208:	dec    esp
  431209:	fst    DWORD PTR [ecx-0x1a57ef18]
  43120f:	push   ecx
  431210:	mov    esp,0xeae9f1b6
  431215:	inc    eax
  431216:	push   edi
  431217:	adc    eax,0x2f153fe2
  43121c:	dec    esp
  43121d:	fldcw  WORD PTR [edi-0x2e7ad94]
  431223:	jb     0x43123c
  431225:	in     eax,dx
  431226:	jns    0x431262
  431228:	popa   
  431229:	fidiv  WORD PTR [edi-0x6d]
  43122c:	call   0x1456:0x29241108
  431233:	push   ds
  431234:	mov    edx,0x654eaec2
  431239:	mov    bl,0xb9
  43123b:	adc    BYTE PTR [ebp+0x59],bl
  43123e:	sbb    al,0x38
  431240:	mov    eax,ds:0xa6f93d69
  431245:	inc    ebp
  431246:	rcr    ah,cl
  431248:	lock arpl WORD PTR [esi],di
  43124b:	push   esi
  43124c:	inc    eax
  43124d:	jl     0x431240
  43124f:	jmp    0x431249
  431251:	xor    eax,0xa0ed499a
  431256:	cmp    DWORD PTR [ecx-0x6b],ecx
  431259:	ret    
  43125a:	inc    esp
  43125b:	lahf   
  43125c:	or     DWORD PTR [ecx],edx
  43125e:	mov    ds,WORD PTR ds:[ebx-0x31]
  431262:	ins    DWORD PTR es:[edi],dx
  431263:	pop    esp
  431264:	push   esp
  431265:	cmp    ch,BYTE PTR [ebx-0x6df0ccdb]
  43126b:	test   DWORD PTR [edx+0x6],edx
  43126e:	jge    0x4312c6
  431270:	cmp    al,0xd4
  431272:	pop    esp
  431273:	fucom  st(0)
  431275:	pop    ebx
  431276:	les    ebx,FWORD PTR [edx+0x18]
  431279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43127a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43127b:	cwde   
  43127c:	xchg   esi,eax
  43127d:	add    edx,DWORD PTR [ebx-0x5d]
  431280:	or     DWORD PTR [ebp-0x5e],ebx
  431283:	mov    ds:0x4b35110e,al
  431288:	jnp    0x43121f
  43128a:	dec    ebx
  43128b:	mov    bl,0x8e
  43128d:	jg     0x4312f3
  43128f:	or     eax,ebp
  431291:	mov    ebp,esp
  431293:	mov    cl,0xbc
  431295:	adc    DWORD PTR [ebx],esp
  431297:	sbb    BYTE PTR [esi],bl
  431299:	mov    esi,0x4b4060eb
  43129e:	add    BYTE PTR fs:[esi-0x8fb6ada],0xd3
  4312a6:	add    BYTE PTR [edi-0xd],0xe2
  4312aa:	sar    DWORD PTR [edi+0x6d6ab83],cl
  4312b0:	mov    ch,0xd6
  4312b2:	lods   al,BYTE PTR ds:[esi]
  4312b3:	sub    esp,DWORD PTR [esi]
  4312b5:	clc    
  4312b6:	dec    ecx
  4312b7:	jmp    0x9c73335d
  4312bc:	sbb    DWORD PTR [edx],ecx
  4312be:	leave  
  4312bf:	retf   0x1833
  4312c2:	and    eax,0x67d8783e
  4312c7:	xchg   ebx,eax
  4312c8:	lea    edx,[edx]
  4312ca:	or     ah,BYTE PTR [ebp+0x1565b190]
  4312d0:	in     eax,0x82
  4312d2:	ss ins DWORD PTR es:[edi],dx
  4312d4:	jle    0x43128f
  4312d6:	and    dl,bh
  4312d8:	jns    0x4312cd
  4312da:	push   0xffffffe5
  4312dc:	mov    ecx,0xfbe52458
  4312e1:	imul   edi,DWORD PTR [esp+ecx*4-0x75cdf294],0xd
  4312e9:	aas    
  4312ea:	sbb    bl,dl
  4312ec:	adc    eax,eax
  4312ee:	rcl    DWORD PTR [eax+0x9cf8efb],1
  4312f4:	pop    es
  4312f5:	shl    DWORD PTR [ebp+0x0],1
  4312f8:	leave  
  4312f9:	xchg   DWORD PTR [esp+edi*2+0x50c921da],edx
  431300:	das    
  431301:	xchg   DWORD PTR [edx+ebx*4+0x10],esp
  431305:	dec    ebx
  431306:	rol    DWORD PTR [edx+0x51],0xea
  43130a:	push   esi
  43130b:	push   esi
  43130c:	outs   dx,BYTE PTR ds:[esi]
  43130d:	outs   dx,DWORD PTR ds:[esi]
  43130e:	mov    dh,0xeb
  431310:	jmp    0x8dfd17af
  431315:	repnz xchg edi,eax
  431317:	daa    
  431318:	loop   0x431354
  43131a:	bound  edx,QWORD PTR [eax+0x1799fdd1]
  431320:	pop    es
  431321:	jnp    0x431319
  431323:	sub    esi,ebp
  431325:	sub    al,0x26
  431327:	imul   edi,DWORD PTR [ebx+edi*1+0x2a],0x9e728246
  43132f:	ins    BYTE PTR es:[edi],dx
  431330:	pop    ds
  431331:	test   al,0x1b
  431333:	cld    
  431334:	xchg   edx,eax
  431335:	mov    ds:0x6e1bfa44,eax
  43133a:	ret    
  43133b:	and    ebp,DWORD PTR [eax-0x7]
  43133e:	xchg   ebx,eax
  43133f:	push   ds
  431340:	loope  0x43137a
  431342:	adc    DWORD PTR [ecx-0x4a595f89],ecx
  431348:	shl    eax,0xba
  43134b:	or     dl,BYTE PTR ds:0x3cbbcaad
  431351:	test   eax,0x4d35e95
  431356:	pop    esp
  431357:	rcl    BYTE PTR [ebp+edx*1-0x4c],cl
  43135b:	mov    dl,BYTE PTR fs:[eax+ebp*8-0x6d]
  431360:	inc    ecx
  431361:	add    esi,DWORD PTR [ecx-0x7071242e]
  431367:	or     ah,BYTE PTR [ebx+0x73eefd33]
  43136d:	aas    
  43136e:	add    al,0x3e
  431370:	loop   0x4313e5
  431372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431373:	js     0x4313c8
  431375:	adc    ah,dl
  431377:	out    dx,al
  431378:	outs   dx,DWORD PTR ds:[esi]
  431379:	data16 je 0x43135d
  43137c:	jbe    0x431399
  43137e:	hlt    
  43137f:	(bad)  
  431380:	jg     0x43139a
  431382:	sub    edx,ebp
  431384:	pop    edx
  431385:	push   ds
  431386:	das    
  431387:	dec    edx
  431388:	jmp    0x4313b8
  43138a:	mov    dl,0xb3
  43138c:	jmp    0x4b1f:0x9698dff
  431393:	scas   al,BYTE PTR es:[edi]
  431394:	addr16 or ebx,eax
  431397:	int    0x2
  431399:	call   0x27bc5164
  43139e:	out    0x3f,al
  4313a0:	loope  0x43140f
  4313a2:	mov    edx,DWORD PTR [esi-0x4ffdb332]
  4313a8:	sbb    ebx,0x33
  4313ab:	ins    BYTE PTR es:[edi],dx
  4313ac:	jl     0x43134a
  4313ae:	ficomp WORD PTR [esi]
  4313b0:	hlt    
  4313b1:	pop    ebp
  4313b2:	ret    0x481d
  4313b5:	cmp    BYTE PTR [ebx-0x67ad15c5],cl
  4313bb:	sbb    esp,DWORD PTR [eax-0x3abd7fb0]
  4313c1:	fisubr WORD PTR [ecx]
  4313c3:	mov    ds:0x1848122e,al
  4313c8:	pop    ds
  4313c9:	shl    BYTE PTR [ecx-0xa],1
  4313cc:	and    ebx,DWORD PTR [ebp-0x31]
  4313cf:	jl     0x431410
  4313d1:	push   0xc157d531
  4313d6:	mov    dh,0xf7
  4313d8:	adc    ah,BYTE PTR [esi-0x36]
  4313db:	dec    esp
  4313dc:	loope  0x431445
  4313de:	gs out 0xed,eax
  4313e1:	or     eax,DWORD PTR [edx]
  4313e3:	cmp    al,BYTE PTR [edx+ebx*8-0x1b]
  4313e7:	jl     0x431438
  4313e9:	xchg   ebp,eax
  4313ea:	pop    di
  4313ec:	sub    DWORD PTR [edi-0x1a],ebp
  4313ef:	jo     0x431460
  4313f1:	in     al,dx
  4313f2:	outs   dx,BYTE PTR ds:[esi]
  4313f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4313f4:	push   esi
  4313f5:	mov    edi,0xdcec7e8a
  4313fa:	pop    es
  4313fb:	mov    eax,0x858509ae
  431400:	sub    DWORD PTR [edi+0x6f0ef198],0x6a
  431407:	inc    edi
  431408:	mov    ebx,edi
  43140a:	lds    esi,FWORD PTR [ebx-0x1170050a]
  431410:	outs   dx,DWORD PTR ds:[esi]
  431411:	push   ebp
  431412:	and    ah,BYTE PTR [edi-0x12]
  431415:	adc    DWORD PTR [ecx],edi
  431417:	mov    edx,0xf85fb5fb
  43141c:	dec    ecx
  43141d:	push   es
  43141e:	xchg   ecx,eax
  43141f:	inc    ebx
  431420:	clc    
  431421:	sar    BYTE PTR [ecx-0x43],cl
  431424:	ret    0xd990
  431427:	add    BYTE PTR [ebx+0x36],ch
  43142a:	jp     0x431406
  43142c:	(bad)  [edx-0x206c3e36]
  431432:	and    BYTE PTR [edi+0x1a94c2a4],cl
  431438:	or     eax,0xbb24f8d7
  43143d:	sub    bl,BYTE PTR [edi]
  43143f:	xchg   edi,eax
  431440:	outs   dx,BYTE PTR ds:[esi]
  431441:	(bad)
  431445:	jge    0x4313c7
  431447:	pop    ss
  431448:	inc    ebx
  431449:	pop    ebp
  43144a:	cli    
  43144b:	sahf   
  43144c:	mov    esp,0x42295f20
  431451:	dec    eax
  431452:	mov    WORD PTR [ebp+0x3c8eb9f8],?
  431458:	mov    BYTE PTR [edi],bh
  43145a:	ja     0x431479
  43145c:	pop    esp
  43145d:	sbb    eax,0x50e5535f
  431462:	add    al,0xe5
  431464:	jg     0x431456
  431466:	neg    BYTE PTR [eax+esi*4-0x4c015604]
  43146d:	inc    ecx
  43146e:	cmp    ecx,ebp
  431470:	mov    edi,0x8255cb46
  431475:	dec    edx
  431476:	mov    dl,0xd3
  431478:	test   al,0x64
  43147a:	out    dx,al
  43147b:	inc    ebx
  43147c:	sub    ecx,DWORD PTR [ecx]
  43147e:	lea    eax,[edx-0x1c]
  431481:	adc    esi,DWORD PTR [esi+0x61666c96]
  431487:	aaa    
  431488:	adc    ch,BYTE PTR ds:0xf34fe13e
  43148e:	je     0x431462
  431490:	jge    0x43144d
  431492:	or     edi,DWORD PTR [edx-0x2799d5ce]
  431498:	mov    edi,0x2e0e4667
  43149d:	or     cl,BYTE PTR [eax+0x685481b4]
  4314a3:	mov    ah,0x7b
  4314a5:	popw   ss
  4314a7:	pop    ebp
  4314a8:	xor    eax,0x5da4cf0e
  4314ad:	xor    al,0xb0
  4314af:	sti    
  4314b0:	iret   
  4314b1:	xor    dl,dl
  4314b3:	and    eax,0x482b7a0b
  4314b8:	sub    ebp,DWORD PTR [edx+0x39]
  4314bb:	mov    edx,esi
  4314bd:	sbb    eax,0x55785915
  4314c2:	jge    0x431532
  4314c4:	jnp    0x43149a
  4314c6:	packssdw mm7,QWORD PTR [ebp-0x68]
  4314ca:	lds    esp,FWORD PTR [eax+edi*1-0x4a1d5f54]
  4314d1:	leave  
  4314d2:	adc    BYTE PTR ss:[edi+edx*2],cl
  4314d6:	sbb    eax,0x10f551de
  4314db:	push   ss
  4314dc:	pop    eax
  4314dd:	xor    al,0xc9
  4314df:	xor    al,0xa
  4314e1:	fld    QWORD PTR [esi]
  4314e3:	adc    eax,0xb8b24e0a
  4314e8:	fwait
  4314e9:	scas   eax,DWORD PTR es:[edi]
  4314ea:	jnp    0x43153e
  4314ec:	mov    bh,BYTE PTR [edi-0x62c2c0e0]
  4314f2:	jmp    0x193e:0xcae029b7
  4314f9:	test   edx,0x113e2fb0
  4314ff:	std    
  431500:	jo     0x431508
  431502:	les    esp,FWORD PTR [ecx+0x4a184d6d]
  431508:	cmp    dh,BYTE PTR [ebx+0x3bcc4562]
  43150e:	xchg   edx,eax
  43150f:	stos   BYTE PTR es:[edi],al
  431510:	jnp    0x431539
  431512:	sbb    eax,0x5ba5913e
  431517:	into   
  431518:	dec    edi
  431519:	mov    esp,0x8abc18f9
  43151e:	and    BYTE PTR ds:0x230ea6a2,al
  431524:	stc    
  431525:	cmp    DWORD PTR [ebx],edi
  431527:	test   BYTE PTR [ecx],ch
  431529:	adc    al,0x28
  43152b:	cld    
  43152c:	mov    al,ds:0x13104e4c
  431531:	arpl   WORD PTR [ecx],bp
  431533:	lds    esp,FWORD PTR [esi-0x32c35de5]
  431539:	test   al,0xb8
  43153b:	sbb    eax,0x948d8f45
  431540:	fldcw  WORD PTR [ebp+0x15]
  431543:	xchg   edx,eax
  431544:	mov    esp,0x2fa8be6d
  431549:	mov    bh,0x7f
  43154b:	jge    0x4314f8
  43154d:	xor    al,BYTE PTR [edx+0x54]
  431550:	xor    edx,ebp
  431552:	pop    edi
  431553:	bound  edx,QWORD PTR [edx+edx*2]
  431556:	add    BYTE PTR [edx+0x16feefeb],bl
  43155c:	fdivp  st(5),st
  43155e:	(bad)
  431561:	not    BYTE PTR [edx+0x3]
  431564:	add    eax,0x3ec19b92
  431569:	push   edx
  43156a:	push   cs
  43156b:	push   ecx
  43156c:	in     al,0x3a
  43156e:	or     dl,BYTE PTR [edi]
  431570:	fxch   st(2)
  431572:	int    0x66
  431574:	stos   BYTE PTR es:[edi],al
  431575:	mov    eax,0xb99857d6
  43157a:	ror    dl,1
  43157c:	push   ds
  43157d:	popa   
  43157e:	in     al,0x2f
  431580:	adc    eax,0x63ea1c85
  431585:	jae    0x431557
  431587:	mov    dh,0x33
  431589:	and    eax,0x2ba0c643
  43158e:	xor    ebx,DWORD PTR [ebp*2+0x3638b5f]
  431595:	mov    al,0x62
  431597:	dec    esp
  431598:	push   0x5f
  43159a:	in     eax,0xeb
  43159c:	add    bl,BYTE PTR [esi]
  43159e:	in     al,dx
  43159f:	iret   
  4315a0:	js     0x43160a
  4315a2:	adc    bh,BYTE PTR [eax]
  4315a4:	or     eax,0x59da4bf2
  4315a9:	mov    eax,0xd5576124
  4315ae:	push   ebx
  4315af:	xor    eax,0x4c50e46b
  4315b4:	imul   ecx,DWORD PTR fs:[ecx+0x23565d77],0xffffffd4
  4315bc:	(bad)  
  4315bd:	fucomi st,st(3)
  4315bf:	(bad)  
  4315c0:	xor    BYTE PTR [ecx-0x78],bh
  4315c3:	pop    ebx
  4315c4:	push   edx
  4315c5:	cmp    BYTE PTR [ebx+0x4c],ch
  4315c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4315c9:	addr16 push 0xffffff80
  4315cc:	mov    esp,0xb92c6420
  4315d1:	test   DWORD PTR [eax+0x5d],esp
  4315d4:	dec    ebx
  4315d5:	push   ds
  4315d6:	je     0x4315d0
  4315d8:	xchg   esi,eax
  4315d9:	cmp    BYTE PTR [ecx],dl
  4315db:	test   al,0x5a
  4315dd:	jnp    0x43159c
  4315df:	xchg   ecx,eax
  4315e0:	mov    esp,0x6df5bca8
  4315e5:	push   0xb4bf873e
  4315ea:	clc    
  4315eb:	xchg   esp,eax
  4315ec:	mov    ebp,0xd61ca33b
  4315f1:	inc    edx
  4315f2:	xchg   ebx,eax
  4315f3:	jp     0x431652
  4315f5:	js     0x431602
  4315f7:	dec    esp
  4315f8:	sbb    DWORD PTR ds:0x66650057,ebx
  4315fe:	mov    ch,BYTE PTR [edx+0x1597caeb]
  431604:	int    0x4d
  431606:	repnz fwait
  431608:	mov    edi,0xb201a2f7
  43160d:	in     eax,dx
  43160e:	xor    al,0xc2
  431610:	sbb    eax,0x5b37c35c
  431615:	mov    eax,0xbf5dcf82
  43161a:	stos   BYTE PTR es:[edi],al
  43161b:	inc    edi
  43161c:	cld    
  43161d:	jge    0x43163f
  43161f:	lahf   
  431620:	(bad)  ds:0xf6a8c113
  431626:	pop    ecx
  431627:	mov    WORD PTR [ebp+0x48],?
  43162a:	xchg   ah,ch
  43162c:	mov    edx,ecx
  43162e:	(bad)  
  43162f:	(bad)  
  431630:	test   BYTE PTR [esi],ah
  431632:	xchg   ecx,eax
  431633:	pop    eax
  431634:	repnz push 0x3bb879b3
  43163a:	dec    ebp
  43163b:	push   esi
  43163c:	jp     0x431674
  43163e:	jbe    0x43161d
  431640:	js     0x4315d6
  431642:	pop    edi
  431643:	and    al,bl
  431645:	into   
  431646:	add    al,0x6b
  431648:	in     al,dx
  431649:	xor    eax,0xcc9c7a28
  43164e:	and    DWORD PTR gs:[bx+di],ebp
  431652:	shr    esi,0x46
  431655:	retf   0x8131
  431658:	adc    eax,0xa7208a98
  43165d:	cmp    al,0xd7
  43165f:	xlat   BYTE PTR ds:[ebx]
  431660:	xor    BYTE PTR [esi-0x1e],0x5a
  431664:	adc    eax,0x21a6fd85
  431669:	sub    BYTE PTR [edx+0x73],0x57
  43166d:	ds pop ds
  43166f:	(bad)  
  431670:	icebp  
  431671:	jl     0x431635
  431673:	jb     0x4316c0
  431675:	in     al,dx
  431676:	enter  0x582e,0x77
  43167a:	frstor [edx+ebx*1]
  43167d:	and    DWORD PTR [ebp+0x20],0x26e76e5c
  431684:	push   ebp
  431685:	push   ds
  431686:	nop
  431687:	sbb    cl,ah
  431689:	inc    ebp
  43168a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43168b:	mov    bh,dh
  43168d:	test   BYTE PTR [edx+0x9],bl
  431690:	xchg   ebx,eax
  431691:	xchg   ebp,eax
  431692:	mov    dl,0xcd
  431694:	addr16 icebp 
  431696:	out    dx,eax
  431697:	mov    edx,0xf16b0912
  43169c:	sub    dh,cl
  43169e:	call   0x34a6efea
  4316a3:	lea    ecx,[edi+0x6e]
  4316a6:	ret    0xbff1
  4316a9:	int    0xf1
  4316ab:	test   al,0xd0
  4316ad:	out    0xe8,eax
  4316af:	setno  BYTE PTR [edx]
  4316b2:	cs out dx,eax
  4316b4:	bound  esp,QWORD PTR [ebx]
  4316b6:	call   0xcd0c:0xeaa768c9
  4316bd:	adc    al,dh
  4316bf:	enter  0x886c,0x3a
  4316c3:	imul   DWORD PTR [esi-0x1bde5e5a]
  4316c9:	add    ebx,DWORD PTR [esi]
  4316cb:	inc    ebp
  4316cc:	xchg   edi,ebp
  4316ce:	cmp    bl,BYTE PTR [edi-0x6b]
  4316d1:	add    al,BYTE PTR [eax*8-0x69857113]
  4316d8:	stos   DWORD PTR es:[edi],eax
  4316d9:	jle    0x431716
  4316db:	push   0xfffffffa
  4316dd:	mov    al,0x22
  4316df:	idiv   al
  4316e1:	nop
  4316e2:	je     0x431748
  4316e4:	in     eax,dx
  4316e5:	mov    dh,0x7d
  4316e7:	in     al,0xaa
  4316e9:	ret    
  4316ea:	mov    ecx,0xfcfb9e71
  4316ef:	xor    eax,0xc3e40597
  4316f4:	push   eax
  4316f5:	pop    eax
  4316f6:	hlt    
  4316f7:	add    ah,BYTE PTR [edx-0x6a]
  4316fa:	aaa    
  4316fb:	ret    0x9cf1
  4316fe:	(bad)  
  4316ff:	mov    ebx,0xdb176a20
  431704:	(bad)  
  431705:	jae    0x43177e
  431707:	cs int 0x5
  43170a:	inc    ecx
  43170b:	add    BYTE PTR [edx],bl
  43170d:	xor    al,0xa6
  43170f:	cs inc eax
  431711:	mov    esi,0xd07c72ed
  431716:	sbb    ebx,DWORD PTR [ebx+0x0]
  431719:	and    dl,bl
  43171b:	push   esi
  43171c:	mov    bh,0x87
  43171e:	jecxz  0x4316a9
  431720:	cs in  al,dx
  431722:	xchg   ebx,eax
  431723:	jno    0x431758
  431725:	xchg   esi,eax
  431726:	mov    ebp,DWORD PTR [esi-0x7b]
  431729:	inc    ebp
  43172a:	aad    0x8a
  43172c:	fldcw  WORD PTR [esi]
  43172e:	pop    edi
  43172f:	lds    esi,FWORD PTR [esi+eiz*1+0x50f42b0e]
  431736:	call   0x624d0699
  43173b:	(bad)  
  43173e:	and    DWORD PTR [ebx-0x1d],ebp
  431741:	jmp    0x431731
  431743:	pop    es
  431744:	shr    DWORD PTR [edx+0x73],1
  431747:	inc    edi
  431749:	sub    dl,BYTE PTR [edi-0x32aaef48]
  43174f:	mov    ebp,0xd1d6d0bb
  431754:	cmp    eax,0xe373868e
  431759:	sbb    eax,0x700a4ad8
  43175e:	sar    ebx,1
  431760:	(bad)  
  431761:	pushf  
  431762:	dec    ebx
  431763:	je     0x4316e5
  431765:	rol    edx,cl
  431767:	test   BYTE PTR [ecx-0x36651e82],al
  43176d:	in     eax,0xd0
  43176f:	pop    eax
  431770:	inc    ebp
  431771:	add    al,0xc3
  431773:	in     al,0x9c
  431775:	xchg   esi,eax
  431776:	in     al,0x83
  431778:	and    al,0xd3
  43177a:	sub    ch,BYTE PTR ds:0xa5b2e77b
  431780:	out    dx,eax
  431781:	imul   ebp,DWORD PTR [edx],0x514f5a02
  431787:	xchg   esi,eax
  431788:	in     al,0x8b
  43178a:	out    dx,al
  43178b:	outs   dx,DWORD PTR ds:[esi]
  43178c:	shl    edi,0x2
  43178f:	jle    0x431795
  431791:	xor    BYTE PTR [ebx+0x1c38edba],bh
  431797:	xor    BYTE PTR [ebx],bl
  431799:	je     0x43180d
  43179b:	fmulp  st(0),st
  43179d:	dec    edx
  43179e:	in     eax,dx
  43179f:	outs   dx,BYTE PTR ds:[esi]
  4317a0:	push   ecx
  4317a1:	add    esi,DWORD PTR [eax+0x67]
  4317a4:	cmp    DWORD PTR [esi-0x686ed96e],ecx
  4317aa:	mov    bl,0x9b
  4317ac:	outs   dx,BYTE PTR ds:[esi]
  4317ad:	in     eax,dx
  4317ae:	ret    0xb15b
  4317b1:	ja     0x431821
  4317b3:	lods   al,BYTE PTR ds:[esi]
  4317b4:	xchg   edi,eax
  4317b5:	cdq    
  4317b6:	dec    edx
  4317b7:	addr16 xor edi,0x61
  4317bb:	add    BYTE PTR [ebx+0x503c4114],cl
  4317c1:	inc    eax
  4317c2:	mov    dl,0xf2
  4317c4:	fnstsw WORD PTR [ebp+eax*2+0x6e]
  4317c8:	mov    al,cl
  4317ca:	xchg   esi,eax
  4317cb:	dec    edx
  4317cc:	rcl    edx,0xc6
  4317cf:	fmul   QWORD PTR [esi]
  4317d1:	inc    esp
  4317d2:	mov    BYTE PTR ds:[ebx],bl
  4317d5:	push   es
  4317d6:	mov    esp,0xcb017c4a
  4317db:	lods   eax,DWORD PTR ds:[esi]
  4317dc:	xor    BYTE PTR [esi],cl
  4317de:	jb     0x431811
  4317e0:	test   al,0x8f
  4317e2:	dec    esi
  4317e3:	adc    ch,ah
  4317e5:	fucomip st,st(5)
  4317e7:	sbb    DWORD PTR [edi],edi
  4317e9:	jle    0x4317a4
  4317eb:	sub    DWORD PTR [eax-0x60],ebp
  4317ee:	mov    edi,0x145a6fff
  4317f3:	cmp    al,0xdd
  4317f5:	xor    esp,DWORD PTR [eax-0x27d653d0]
  4317fb:	das    
  4317fc:	std    
  4317fd:	es mov bl,0xeb
  431800:	mov    al,0x57
  431802:	sub    dh,0x31
  431805:	adc    eax,ecx
  431807:	sti    
  431808:	es inc eax
  43180a:	pusha  
  43180b:	mov    BYTE PTR [ebx+0x7bb524ad],ch
  431811:	aas    
  431812:	outs   dx,DWORD PTR ds:[esi]
  431813:	sbb    BYTE PTR [ebx-0x3f2a5b2d],cl
  431819:	ret    
  43181a:	sbb    esp,DWORD PTR [edi+0x78]
  43181d:	sub    dl,BYTE PTR [ebp-0x5a7ef463]
  431823:	adc    ah,0x5b
  431826:	adc    eax,0x79798da2
  43182b:	jle    0x431884
  43182d:	fwait
  43182e:	arpl   WORD PTR [esi+esi*1-0xe7753a3],dx
  431835:	pusha  
  431836:	dec    ebp
  431837:	ds ss pop esp
  43183a:	sbb    BYTE PTR [edx],cl
  43183c:	sbb    ah,BYTE PTR [edi-0x69]
  43183f:	pop    edi
  431840:	and    eax,0x94817f3b
  431845:	jno    0x4317d0
  431847:	rol    ch,cl
  431849:	mov    ebp,0xc5691841
  43184e:	lock dec edi
  431850:	aaa    
  431851:	mov    cl,0x55
  431853:	sbb    BYTE PTR [ebp-0x32cdbd],dl
  431859:	mov    al,0x79
  43185b:	mov    ah,0xd8
  43185d:	jne    0x4318bc
  43185f:	call   0x7d90a921
  431864:	mov    bh,0xb3
  431866:	push   esi
  431867:	lea    ebx,[esi+0x22]
  43186a:	ret    
  43186b:	jp     0x431868
  43186d:	cmc    
  43186e:	push   esp
  43186f:	dec    ecx
  431870:	gs js  0x431863
  431873:	call   DWORD PTR [edx-0x425eeae3]
  431879:	jp     0x4318d0
  43187b:	cdq    
  43187c:	ja     0x431864
  43187e:	popa   
  43187f:	push   edx
  431880:	push   edx
  431881:	es out 0x2,eax
  431884:	lods   eax,DWORD PTR ds:[esi]
  431885:	push   cs
  431886:	pop    ecx
  431887:	push   0x6
  431889:	inc    BYTE PTR [esp+eax*2-0x7780661e]
  431890:	popa   
  431891:	fucom  st(1)
  431893:	loope  0x43186b
  431895:	and    ch,0x3d
  431898:	call   0xb47ac516
  43189d:	fisubr DWORD PTR [eax-0x26]
  4318a0:	xor    al,0x63
  4318a2:	jne    0x431873
  4318a4:	sub    ecx,eax
  4318a6:	jecxz  0x431886
  4318a8:	mov    ds:0xe55e7c4d,eax
  4318ad:	das    
  4318ae:	mov    dh,0x59
  4318b0:	xchg   bp,ax
  4318b2:	pop    esp
  4318b3:	es ret 0x4a16
  4318b7:	pop    es
  4318b8:	mov    bl,0xb4
  4318ba:	inc    esp
  4318bb:	sbb    dl,cl
  4318bd:	mov    bl,0x13
  4318bf:	and    esp,ebp
  4318c1:	std    
  4318c2:	xchg   edx,eax
  4318c3:	call   FWORD PTR [ebx]
  4318c5:	imul   esp,DWORD PTR [edi+0x2b],0xd61d4e52
  4318cc:	pop    ds
  4318cd:	and    DWORD PTR [eax-0x14],ecx
  4318d0:	mov    al,0xa5
  4318d2:	stc    
  4318d3:	pop    ebx
  4318d4:	adc    ah,BYTE PTR [edi-0x6ec218d8]
  4318da:	xor    dh,cl
  4318dc:	lea    esi,[ebx]
  4318de:	sub    dl,ch
  4318e0:	and    esi,ebx
  4318e2:	pop    ebx
  4318e3:	jb     0x4318c5
  4318e5:	mov    dl,BYTE PTR ds:0x8d55650b
  4318eb:	lds    ecx,FWORD PTR [eax-0x2d99e04]
  4318f1:	loope  0x43196f
  4318f3:	ds sar ah,1
  4318f6:	xchg   edi,eax
  4318f7:	xchg   ebx,eax
  4318f8:	(bad)  [ebx-0x49315e34]
  4318fe:	mov    eax,0x75ff0a0b
  431903:	inc    edx
  431904:	mov    bh,0x62
  431906:	mov    esp,0x4837955b
  43190b:	jmp    0x18b3b50e
  431910:	add    ch,BYTE PTR [ecx-0x50]
  431913:	push   edx
  431914:	dec    ecx
  431915:	cld    
  431916:	repnz sahf 
  431918:	imul   edx,DWORD PTR [edi+0x9f67af2],0xffffff86
  43191f:	aas    
  431920:	xlat   BYTE PTR ds:[ebx]
  431921:	rol    DWORD PTR ss:[eax],0xda
  431925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431926:	pusha  
  431927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431928:	int3   
  431929:	cmp    eax,0x9eaf05aa
  43192e:	aad    0x44
  431930:	aam    0xdf
  431932:	jp     0x9bad87cc
  431938:	xchg   ah,bh
  43193a:	inc    ebp
  43193b:	mov    cl,0xe3
  43193d:	push   ebp
  43193e:	not    DWORD PTR [ebx-0x80]
  431941:	adc    ecx,DWORD PTR [esi+ecx*1-0x63]
  431945:	inc    ebx
  431946:	in     eax,dx
  431947:	dec    ecx
  431948:	mov    ecx,0xd02162dc
  43194d:	ins    DWORD PTR es:[edi],dx
  43194e:	in     al,0xbc
  431950:	hlt    
  431951:	adc    BYTE PTR [ecx+0xe],dl
  431954:	shr    esi,cl
  431956:	push   0xffffffc1
  431958:	imul   esp,DWORD PTR es:[ecx-0x3ae111ea],0x4de84de4
  431963:	jmp    0x5bc0:0x465501f2
  43196a:	xchg   edx,eax
  43196b:	scas   al,BYTE PTR es:[edi]
  43196c:	mov    dl,0xb8
  43196e:	imul   BYTE PTR [edx+0x20]
  431971:	stc    
  431972:	and    DWORD PTR [edx-0x74],edi
  431975:	aaa    
  431976:	push   edi
  431977:	mov    al,0xa1
  431979:	imul   edi,DWORD PTR [edx-0x60],0xffffff9f
  43197d:	mov    ebp,0xf08b5653
  431982:	mov    esi,DWORD PTR [edx+0x4531b7d]
  431988:	data16 jb 0x431981
  43198b:	or     bh,dl
  43198d:	(bad)  
  43198e:	pop    esi
  43198f:	jmp    0x32c500d7
  431994:	cs cld 
  431996:	imul   ebp,ebx,0x42
  431999:	fst    st(0)
  43199b:	add    edi,edx
  43199d:	in     eax,dx
  43199e:	inc    eax
  43199f:	out    0x98,al
  4319a1:	add    eax,0x3047d28c
  4319a6:	sbb    al,0x6
  4319a8:	mov    BYTE PTR [eax],bl
  4319aa:	or     esp,esi
  4319ac:	addr16 adc eax,0xb2e4f15d
  4319b2:	inc    bx
  4319b4:	push   ds
  4319b5:	jp     0x4319cc
  4319b7:	xchg   ecx,eax
  4319b8:	push   ds
  4319b9:	not    dl
  4319bb:	out    dx,al
  4319bc:	in     al,0x9f
  4319be:	mov    ds:0xb6d293d6,eax
  4319c3:	outs   dx,DWORD PTR ds:[esi]
  4319c4:	sub    eax,0x455478ce
  4319c9:	mov    WORD PTR [ebx-0x7e5ef3e7],cs
  4319cf:	push   ds
  4319d0:	jb     0x431a26
  4319d2:	pop    ss
  4319d3:	jmp    0x431973
  4319d5:	es std 
  4319d7:	xchg   DWORD PTR ds:0x9318e60a,esi
  4319dd:	cdq    
  4319de:	push   es
  4319df:	inc    edi
  4319e0:	jns    0x431a11
  4319e2:	mov    edi,DWORD PTR [ebx+0x3f]
  4319e5:	loope  0x431a04
  4319e7:	cmp    eax,0x624e5cee
  4319ec:	push   esi
  4319ed:	xor    eax,0x70f976ec
  4319f2:	aas    
  4319f3:	xor    dh,bl
  4319f5:	es jl  0x431a65
  4319f8:	mov    esp,0xc9ec4a40
  4319fd:	jno    0x431a5c
  4319ff:	xor    al,bh
  431a01:	daa    
  431a02:	mov    dh,0xd3
  431a04:	adc    al,0xe0
  431a06:	push   cs
  431a07:	scas   al,BYTE PTR es:[edi]
  431a08:	arpl   WORD PTR [esi],bp
  431a0a:	sub    DWORD PTR [ebx-0x27fa9739],edx
  431a10:	outs   dx,DWORD PTR ds:[esi]
  431a11:	pop    ss
  431a12:	adc    esi,esp
  431a14:	das    
  431a15:	out    dx,eax
  431a16:	mov    esi,0xc2010eb
  431a1b:	push   eax
  431a1c:	xor    DWORD PTR [eax-0x70],esp
  431a1f:	dec    ecx
  431a20:	mov    eax,0xffa75add
  431a25:	cmp    eax,0xf7d477e7
  431a2a:	inc    eax
  431a2b:	fild   DWORD PTR [edx-0x56]
  431a2e:	mov    edx,0x98ec8c6
  431a33:	mov    DWORD PTR [ebp+0x5fe0cee8],eax
  431a39:	pushf  
  431a3a:	fiadd  DWORD PTR [ebp*8+0x7f88acef]
  431a41:	inc    esp
  431a42:	push   es
  431a43:	pop    DWORD PTR [esi+0x73]
  431a46:	jecxz  0x431ac6
  431a48:	fsubr  DWORD PTR [eax-0xc252589]
  431a4e:	mov    db2,eax
  431a51:	pushf  
  431a52:	lods   eax,DWORD PTR ds:[esi]
  431a53:	pop    esi
  431a54:	in     al,0x4a
  431a56:	jne    0x431a26
  431a58:	sub    eax,0xaac73e4c
  431a5d:	cmp    cl,BYTE PTR ds:0x96ab6672
  431a63:	aad    0xfd
  431a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431a66:	mov    ebp,0x2b13c514
  431a6b:	pop    edi
  431a6c:	test   BYTE PTR [ecx+eax*4],ah
  431a6f:	xchg   bl,ch
  431a71:	sahf   
  431a72:	push   ds
  431a73:	or     eax,0xa6f44b96
  431a78:	(bad)  [eax]
  431a7a:	ds sub edx,eax
  431a7d:	xor    al,0x98
  431a7f:	hlt    
  431a80:	outs   dx,DWORD PTR ds:[esi]
  431a81:	sub    dh,BYTE PTR [edx+ebx*1-0x1c8cba9c]
  431a88:	mov    ch,0x7f
  431a8a:	test   BYTE PTR [edi+0x37c90845],al
  431a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431a91:	mov    eax,ds:0xb4ae4756
  431a96:	das    
  431a97:	test   esp,ebx
  431a99:	js     0x431a3b
  431a9b:	mov    ebp,DWORD PTR [esi-0x68]
  431a9e:	pop    ebx
  431a9f:	push   edi
  431aa0:	arpl   WORD PTR [ebp-0x7a],di
  431aa3:	sbb    al,0xad
  431aa5:	mov    ss,ecx
  431aa7:	pop    edi
  431aa8:	loopne 0x431a85
  431aaa:	pop    edx
  431aab:	out    0x2d,al
  431aad:	jg     0x431a66
  431aaf:	test   eax,0xa32afbef
  431ab4:	mov    ds:0x2988f194,eax
  431ab9:	pop    ecx
  431aba:	ret    
  431abb:	int    0xd7
  431abd:	dec    esp
  431abe:	mov    bh,dl
  431ac0:	or     edx,DWORD PTR [ebx+0x15f5de5b]
  431ac6:	fsubr  DWORD PTR [ecx+0x6f5f6648]
  431acc:	push   ebx
  431acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ace:	clc    
  431acf:	les    eax,FWORD PTR [edi-0x166a8f03]
  431ad5:	(bad)  
  431ad6:	cmc    
  431ad7:	jmp    0x431b1a
  431ad9:	dec    edi
  431ada:	fcmove st,st(0)
  431adc:	jmp    DWORD PTR [ecx]
  431ade:	dec    ebx
  431adf:	hlt    
  431ae0:	sbb    BYTE PTR [edx+0x7e4c179d],0x63
  431ae7:	xlat   BYTE PTR ds:[ebx]
  431ae8:	pop    edi
  431ae9:	xchg   ecx,eax
  431aea:	xor    BYTE PTR [ebx+0x37e2f539],0xe1
  431af1:	aam    0x38
  431af3:	sbb    BYTE PTR [esi],bh
  431af5:	sub    bl,ch
  431af7:	dec    esp
  431af8:	sbb    bl,BYTE PTR [esi]
  431afa:	mov    cl,0x6
  431afc:	inc    esp
  431afd:	mov    DWORD PTR ds:[eax+0x38],edi
  431b01:	pop    ss
  431b02:	jecxz  0x431b2f
  431b04:	add    edx,DWORD PTR [edx+0x2d]
  431b07:	loope  0x431ade
  431b09:	dec    esi
  431b0a:	sub    BYTE PTR [ecx-0x11419598],ch
  431b10:	xchg   ecx,eax
  431b11:	sbb    al,BYTE PTR [esi]
  431b13:	sub    al,0x77
  431b15:	std    
  431b16:	sub    dh,bl
  431b18:	cmp    esp,edi
  431b1a:	dec    ecx
  431b1b:	pop    eax
  431b1c:	aaa    
  431b1d:	dec    ebx
  431b1e:	sub    ebp,DWORD PTR [esi]
  431b20:	icebp  
  431b21:	test   BYTE PTR [ebx+0x1f],al
  431b24:	cmp    eax,0xf59e9c96
  431b29:	ss (bad) 
  431b2d:	lods   al,BYTE PTR es:[esi]
  431b2f:	dec    esp
  431b30:	mov    al,ds:0x8f7eff1a
  431b35:	cmp    ebp,eax
  431b37:	ins    DWORD PTR es:[edi],dx
  431b38:	popf   
  431b39:	push   eax
  431b3a:	sbb    al,0x76
  431b3c:	out    dx,al
  431b3d:	imul   ebx,DWORD PTR [ecx-0x6a],0x711dcb61
  431b44:	dec    eax
  431b45:	pop    ebx
  431b46:	imul   eax,DWORD PTR [ebx],0x3e
  431b49:	xchg   BYTE PTR [esi-0x6da0ecde],ah
  431b4f:	lods   al,BYTE PTR ds:[esi]
  431b50:	or     edi,DWORD PTR [ebp+0x5c5350be]
  431b56:	int    0xeb
  431b58:	rol    DWORD PTR [ecx+0x4fb8bc2],1
  431b5e:	repnz mov WORD PTR [eax-0x5832e443],?
  431b65:	lock retf 0x7370
  431b69:	imul   ecx,edi,0xffffffe8
  431b6c:	push   cs
  431b6d:	adc    al,BYTE PTR [edi]
  431b6f:	lea    edi,[ecx+0x2a]
  431b72:	mov    esi,0x3a5507da
  431b77:	sub    eax,0xbc399f54
  431b7c:	ja     0x431bb4
  431b7e:	sub    al,0xf7
  431b80:	xchg   edx,eax
  431b81:	pushf  
  431b82:	stos   DWORD PTR es:[edi],eax
  431b83:	stos   BYTE PTR es:[edi],al
  431b84:	fdivr  QWORD PTR [ecx+ecx*2-0x29]
  431b88:	mov    ss,WORD PTR [edi+0x3c]
  431b8b:	and    DWORD PTR [esi+0x5cdbe800],0x68e048c0
  431b95:	jmp    ecx
  431b97:	stos   BYTE PTR es:[edi],al
  431b98:	les    ebp,FWORD PTR [esi+0x4ebecd46]
  431b9e:	test   bl,0x21
  431ba1:	mov    dl,0xec
  431ba3:	cs aad 0x17
  431ba6:	stos   BYTE PTR es:[edi],al
  431ba7:	or     eax,0xc84d9869
  431bac:	(bad)  
  431bad:	test   DWORD PTR [ebp-0x17],0x63e0570d
  431bb4:	aaa    
  431bb5:	mov    ch,0x10
  431bb7:	adc    al,0x7b
  431bb9:	add    ebp,esp
  431bbb:	scas   eax,DWORD PTR es:[edi]
  431bbc:	and    esp,DWORD PTR [esi-0x5b08dd04]
  431bc2:	cwde   
  431bc3:	neg    esp
  431bc5:	xor    cl,BYTE PTR [edi+eax*4]
  431bc8:	push   esp
  431bc9:	loope  0x431b95
  431bcb:	(bad)  
  431bcd:	cwde   
  431bce:	cmp    eax,0xa5cd7310
  431bd3:	call   0x6e23:0x780a9c4a
  431bda:	out    dx,al
  431bdb:	jle    0x431b80
  431bdd:	pop    esp
  431bde:	test   BYTE PTR [ebx],cl
  431be0:	jle    0x431b94
  431be2:	and    DWORD PTR [eax+0xec64cd6],eax
  431be8:	adc    al,0x70
  431bea:	mov    edx,0xf39a89a8
  431bef:	jecxz  0x431bb8
  431bf1:	aam    0x3b
  431bf3:	cmc    
  431bf4:	adc    ecx,DWORD PTR [edi-0x1579796e]
  431bfa:	push   edi
  431bfb:	or     DWORD PTR [ecx-0x311520a2],0xe5bc01cd
  431c05:	int3   
  431c06:	js     0x431bb0
  431c08:	lds    edi,FWORD PTR [ecx+0x4a]
  431c0b:	adc    esp,ebx
  431c0d:	jae    0x431c48
  431c0f:	pop    ebx
  431c10:	jp     0x431b94
  431c12:	fbstp  TBYTE PTR [ebx]
  431c14:	pop    es
  431c15:	pop    edx
  431c16:	ja     0x431c45
  431c18:	cmc    
  431c19:	lods   eax,DWORD PTR ds:[esi]
  431c1a:	mov    ecx,DWORD PTR [esi+eax*1]
  431c1d:	pop    ebp
  431c1e:	loope  0x431bd6
  431c20:	test   al,0xb9
  431c22:	sub    DWORD PTR [eax],0x3
  431c25:	pusha  
  431c26:	push   eax
  431c27:	jecxz  0x431bc0
  431c29:	lods   eax,DWORD PTR ds:[esi]
  431c2a:	sub    al,0x9a
  431c2c:	arpl   cx,bp
  431c2e:	leave  
  431c2f:	inc    ebp
  431c30:	cmp    eax,0x86ea38f8
  431c35:	repnz test DWORD PTR ds:0x708b8244,0x2438991b
  431c40:	retf   
  431c41:	sbb    eax,0xf20ea7ce
  431c46:	pop    ebp
  431c47:	mov    edx,0xa5c4fa6e
  431c4c:	jmp    0x9c4172de
  431c51:	dec    eax
  431c52:	test   al,0x3
  431c54:	xor    al,cl
  431c56:	push   0x15
  431c58:	jb     0x431cab
  431c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431c5b:	fmul   st,st(3)
  431c5d:	and    bh,BYTE PTR [edx-0x25c58d82]
  431c63:	cmp    eax,0xa79f9d8b
  431c68:	aas    
  431c69:	xchg   esi,eax
  431c6a:	dec    edx
  431c6b:	hlt    
  431c6c:	shl    BYTE PTR [esi-0x5d],1
  431c6f:	test   al,0x4c
  431c71:	sub    BYTE PTR [eax-0x37],ch
  431c74:	lds    esp,FWORD PTR [edi]
  431c76:	pushf  
  431c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431c78:	loopne 0x431c9f
  431c7a:	jle    0x431c11
  431c7c:	lds    esp,FWORD PTR [edi]
  431c7e:	adc    ah,dl
  431c80:	or     cl,BYTE PTR [ebx+0x87e0271]
  431c86:	xchg   BYTE PTR [esi],ah
  431c88:	xor    ebp,eax
  431c8a:	loope  0x431cf1
  431c8c:	pushf  
  431c8d:	sub    cl,BYTE PTR [ebp-0x2c]
  431c90:	pusha  
  431c91:	lahf   
  431c92:	adc    DWORD PTR [eax+eax*1],edi
  431c95:	je     0x431cf3
  431c97:	repz mov esp,0x2078c0
  431c9d:	jmp    0xb1ad:0x29de
  431ca3:	mov    esi,0x3c11c7c8
  431ca8:	dec    edi
  431ca9:	jg     0x431c70
  431cab:	xlat   BYTE PTR ds:[ebx]
  431cac:	adc    eax,0xbd430a2f
  431cb1:	mov    esi,0xe05da57e
  431cb6:	mov    bl,0x36
  431cb8:	push   ecx
  431cb9:	rol    esp,0x85
  431cbc:	pop    ss
  431cbd:	xlat   BYTE PTR ds:[ebx]
  431cbe:	dec    esi
  431cbf:	inc    ecx
  431cc0:	adc    al,0x88
  431cc2:	and    edi,esp
  431cc4:	add    ebp,DWORD PTR [esi+0x71ff7880]
  431cca:	pop    ds
  431ccb:	bound  esi,QWORD PTR [ebx+0x78]
  431cce:	jle    0x431cee
  431cd0:	call   0x8552:0xe8a3d9ae
  431cd7:	push   ds
  431cd8:	outs   dx,BYTE PTR ds:[esi]
  431cd9:	(bad)  
  431cda:	xor    al,0x3d
  431cdc:	add    DWORD PTR [edx+0x4e57d184],esp
  431ce2:	add    eax,0xa95fa063
  431ce7:	lea    edi,[edx]
  431ce9:	ror    DWORD PTR [edi],cl
  431ceb:	push   cs
  431cec:	jbe    0x431d67
  431cee:	jge    0x431cf6
  431cf0:	jecxz  0x431c99
  431cf2:	loop   0x431d0a
  431cf4:	(bad)  [eax+0x624c0dbb]
  431cfa:	nop
  431cfb:	fistp  WORD PTR [esi]
  431cfd:	(bad)  
  431cfe:	jno    0x431cb7
  431d00:	rcl    DWORD PTR [eax-0x5],1
  431d03:	std    
  431d04:	jo     0x431d23
  431d06:	xchg   edi,eax
  431d07:	clc    
  431d08:	jecxz  0x431d85
  431d0a:	dec    ebx
  431d0b:	inc    eax
  431d0c:	push   esi
  431d0d:	and    DWORD PTR [edi+eiz*8+0x6e],esp
  431d11:	jg     0x431cc8
  431d13:	push   0x9e72b285
  431d18:	xlat   BYTE PTR ds:[ebx]
  431d19:	xchg   ebp,eax
  431d1a:	enter  0x7057,0xec
  431d1e:	sbb    ebp,DWORD PTR [edi]
  431d20:	pop    edi
  431d21:	push   0x27
  431d23:	add    BYTE PTR [edi+0x47],0xb
  431d27:	cld    
  431d28:	bound  esi,QWORD PTR [eax+0x61]
  431d2b:	cmp    DWORD PTR [ebx-0x33],0x44
  431d2f:	je     0x431cf6
  431d31:	push   esp
  431d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431d33:	or     al,0xce
  431d35:	call   0xa1c1:0xc694031e
  431d3c:	int3   
  431d3d:	jmp    0x431d08
  431d3f:	dec    eax
  431d40:	pop    ebx
  431d41:	clc    
  431d42:	out    0x1,eax
  431d44:	mov    dl,0xf4
  431d46:	mov    edi,0x8b2ea194
  431d4b:	popa   
  431d4c:	xchg   ecx,eax
  431d4d:	idiv   dl
  431d4f:	cmp    DWORD PTR ds:0xbd89d88,ecx
  431d55:	and    eax,DWORD PTR [esi+ecx*2-0x4fceeac4]
  431d5c:	inc    ebp
  431d5d:	jmp    0xe1aa:0x32a5b3b9
  431d64:	(bad)  
  431d65:	sbb    al,0x96
  431d67:	jge    0x431d58
  431d69:	and    BYTE PTR [ebx],cl
  431d6b:	hlt    
  431d6c:	stos   DWORD PTR es:[edi],eax
  431d6d:	enter  0xcf2a,0x1
  431d71:	xlat   BYTE PTR ds:[ebx]
  431d72:	sub    eax,0xe95e85ce
  431d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d78:	daa    
  431d79:	or     BYTE PTR [ebx-0x65ca6f96],cl
  431d7f:	lods   al,BYTE PTR ds:[esi]
  431d80:	clc    
  431d81:	xchg   cl,ch
  431d83:	sbb    bl,BYTE PTR [eax-0x12]
  431d86:	push   0xffffffff
  431d88:	adc    BYTE PTR [esi+0x5c],dl
  431d8b:	dec    ebx
  431d8c:	inc    ecx
  431d8d:	ret    
  431d8e:	adc    eax,0xb94c89c6
  431d93:	cld    
  431d94:	test   BYTE PTR [ecx],ch
  431d96:	out    0x18,al
  431d98:	mov    edx,ebp
  431d9a:	mov    edx,0x351eb953
  431d9f:	(bad)  
  431da0:	dec    esp
  431da1:	(bad)  
  431da2:	es in  eax,0xc3
  431da5:	jno    0x431de7
  431da7:	iret   
  431da8:	sbb    al,0x87
  431daa:	or     DWORD PTR [ebp-0x4ca90cdf],esi
  431db0:	xchg   ebp,ebx
  431db2:	mov    DWORD PTR ds:0xf9c53c9a,eax
  431db8:	test   BYTE PTR [ecx+0x45],0x65
  431dbc:	out    dx,eax
  431dbd:	pop    esi
  431dbe:	rol    DWORD PTR [eax-0x7c],cl
  431dc1:	mov    ds:0x8761df,eax
  431dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431dc7:	mov    ds:0x8064a576,al
  431dcc:	(bad)  
  431dcd:	pop    edi
  431dce:	enter  0x47b0,0xd
  431dd2:	jb     0x431d91
  431dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431dd5:	xor    ch,BYTE PTR [esp+ebx*1]
  431dd8:	inc    edi
  431dd9:	hlt    
  431dda:	mov    esp,0xecdd071c
  431ddf:	and    al,0xf0
  431de1:	fcmovnbe st,st(7)
  431de3:	outs   dx,DWORD PTR ds:[esi]
  431de4:	clc    
  431de5:	cmp    al,0x98
  431de7:	ja     0x431d8e
  431de9:	xchg   ebx,eax
  431dea:	mov    dh,0x6
  431dec:	push   0xffffffc3
  431dee:	jecxz  0x431d8a
  431df0:	adc    ebx,ebx
  431df2:	lds    ebx,FWORD PTR [edi+0x46fde240]
  431df8:	(bad)  
  431df9:	push   ss
  431dfa:	into   
  431dfb:	not    cl
  431dfd:	mov    ch,0x92
  431dff:	leave  
  431e00:	or     DWORD PTR [ecx-0x28],edi
  431e03:	jecxz  0x431e62
  431e05:	inc    ebx
  431e06:	ret    
  431e07:	jle    0x431dd6
  431e09:	aam    0x1a
  431e0b:	adc    DWORD PTR [edx+0x35f1d2d4],ecx
  431e11:	out    0x4e,al
  431e13:	ret    
  431e14:	add    eax,DWORD PTR [ebx-0x71]
  431e17:	test   eax,0x771a1c05
  431e1c:	mov    al,ds:0xf74d62d4
  431e21:	ret    
  431e22:	fdivp  st(4),st
  431e24:	ins    DWORD PTR es:[edi],dx
  431e25:	mov    edi,0x59b67703
  431e2a:	jb     0x431e8b
  431e2c:	or     ebx,DWORD PTR [edx]
  431e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431e2f:	mov    esp,0xdcf1c0
  431e34:	rol    DWORD PTR [ecx-0x281ef81],0xfc
  431e3b:	adc    ecx,DWORD PTR ds:0xc418eae5
  431e41:	pop    eax
  431e42:	fcom   QWORD PTR [edx-0x8]
  431e45:	adc    bl,BYTE PTR [ebx+0x21]
  431e48:	mov    bh,0xac
  431e4a:	xor    bh,cl
  431e4c:	sub    bh,BYTE PTR [ebx]
  431e4e:	jns    0x431e0f
  431e50:	call   0x8b5e:0xc67ea48a
  431e57:	into   
  431e58:	mov    BYTE PTR ss:[ebx-0x63],cl
  431e5c:	test   ebx,ecx
  431e5e:	je     0x431e89
  431e60:	mov    bh,0x86
  431e62:	pop    esi
  431e63:	push   0x766d6929
  431e68:	(bad)  
  431e69:	jecxz  0x431e7d
  431e6b:	loopne 0x431ead
  431e6d:	cmp    edx,DWORD PTR [esi-0xf]
  431e70:	mov    DWORD PTR [ebp+0x6e6e252c],edi
  431e76:	(bad)  
  431e77:	es in  eax,dx
  431e79:	enter  0xede2,0x89
  431e7d:	ins    BYTE PTR es:[edi],dx
  431e7e:	jle    0x431ead
  431e80:	dec    ebx
  431e81:	or     BYTE PTR [edi],bl
  431e83:	jecxz  0x431efd
  431e85:	mov    edx,0x567d8685
  431e8a:	fwait
  431e8b:	inc    eax
  431e8c:	sub    DWORD PTR [ebp-0x48],edi
  431e8f:	call   0xb5214f4d
  431e94:	mov    eax,0x42f34701
  431e99:	push   ss
  431e9a:	add    bh,BYTE PTR [ebx-0x74]
  431e9d:	je     0x431e4d
  431e9f:	stos   BYTE PTR es:[edi],al
  431ea0:	add    ah,ch
  431ea2:	or     al,ch
  431ea4:	mov    edx,esi
  431ea6:	imul   eax,DWORD PTR [eax],0x4531c2ed
  431eac:	push   ds
  431ead:	cmc    
  431eae:	jne    0x431ecc
  431eb0:	push   edi
  431eb1:	jb     0x431ee3
  431eb3:	iret   
  431eb4:	xchg   ebp,eax
  431eb5:	jecxz  0x431eae
  431eb7:	jne    0x431e9d
  431eb9:	ins    DWORD PTR es:[edi],dx
  431eba:	outs   dx,DWORD PTR ds:[esi]
  431ebb:	int    0xce
  431ebd:	in     eax,dx
  431ebe:	inc    eax
  431ebf:	mov    al,ds:0x9d097d5a
  431ec4:	std    
  431ec5:	adc    eax,0x5de23827
  431eca:	push   esi
  431ecb:	add    DWORD PTR [eax+0x67173f77],eax
  431ed1:	arpl   WORD PTR [ecx-0x5c],si
  431ed4:	pop    ebx
  431ed5:	jo     0x431e92
  431ed7:	pop    edx
  431ed8:	cmp    ah,BYTE PTR [edx+0x5]
  431edb:	pop    eax
  431edc:	xor    eax,ebp
  431ede:	cmp    dl,BYTE PTR es:[edx-0x3cb7b0e0]
  431ee5:	fld    TBYTE PTR [ebp+0x6b]
  431ee8:	or     BYTE PTR [edx-0x25fe5b18],bl
  431eee:	mov    bl,0x6b
  431ef0:	js     0x431ebd
  431ef2:	pop    edx
  431ef3:	test   al,0x57
  431ef5:	frstor [esp+ebp*2]
  431ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431ef9:	xchg   ebp,eax
  431efa:	xor    al,BYTE PTR [edx+0x7bdb2503]
  431f00:	xchg   ebp,eax
  431f01:	retf   0xa8c5
  431f04:	mov    BYTE PTR [ebx+0x25],al
  431f07:	js     0x431ec2
  431f09:	or     DWORD PTR [ecx+0x38],ebx
  431f0c:	ds test eax,0xdf937fda
  431f12:	pop    es
  431f13:	inc    esp
  431f14:	mov    dl,0x67
  431f16:	aad    0xda
  431f18:	push   cs
  431f19:	repz sub DWORD PTR [ebx+eax*8],0xfffffffe
  431f1e:	ins    BYTE PTR es:[edi],dx
  431f1f:	mov    esp,DWORD PTR [ecx+0x3c60a2d6]
  431f25:	pop    esi
  431f26:	in     al,0x49
  431f28:	xlat   BYTE PTR ds:[ebx]
  431f29:	add    BYTE PTR [esi-0x3d7d4c14],ch
  431f2f:	add    al,0x8b
  431f31:	mov    edx,0x2100afbd
  431f36:	cli    
  431f37:	mov    dh,0x3a
  431f39:	sbb    BYTE PTR [ebx-0x45829e1f],ah
  431f3f:	test   BYTE PTR [edi+0x1d3d42b2],dh
  431f45:	push   edx
  431f46:	sbb    ah,BYTE PTR [edi-0x58b9c899]
  431f4c:	mov    esi,ecx
  431f4e:	mov    bh,0x6d
  431f50:	adc    BYTE PTR [ebp+0x74],dl
  431f53:	sub    BYTE PTR [eax],cl
  431f55:	lea    ebp,[edi-0x2ab6d1c5]
  431f5b:	jge    0x431f77
  431f5d:	test   al,0x8c
  431f5f:	outs   dx,BYTE PTR ds:[esi]
  431f60:	or     dh,al
  431f62:	sbb    edx,DWORD PTR [edx+ecx*2+0x58318054]
  431f69:	enter  0xa0b2,0x18
  431f6d:	in     al,dx
  431f6e:	jg     0x431f75
  431f70:	inc    ebx
  431f71:	sub    esp,ebp
  431f73:	leave  
  431f74:	inc    ebx
  431f75:	cdq    
  431f76:	rcr    edi,1
  431f78:	adc    DWORD PTR [esi-0x72c67721],ebp
  431f7e:	ins    BYTE PTR es:[edi],dx
  431f7f:	aas    
  431f80:	in     eax,dx
  431f81:	jno    0x431f79
  431f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431f84:	clc    
  431f85:	shr    BYTE PTR [edi],0xe5
  431f88:	outs   dx,DWORD PTR ds:[esi]
  431f89:	mov    ebp,0x41714001
  431f8e:	cmp    BYTE PTR [edi],0xdd
  431f91:	(bad)  [edx+ebx*4-0x193839a0]
  431f98:	xchg   DWORD PTR [esi-0x6d2d0c45],edx
  431f9e:	loope  0x431f4a
  431fa0:	cmovne ecx,DWORD PTR [ecx+0x2a]
  431fa4:	mov    edx,0x94ad67a7
  431fa9:	mov    cs,WORD PTR [ecx*8-0x716047b1]
  431fb0:	fmul   QWORD PTR [ebx+0x31]
  431fb3:	repz daa 
  431fb5:	jmp    0x431fd5
  431fb7:	in     al,0xc3
  431fb9:	sub    al,0x76
  431fbb:	dec    eax
  431fbc:	shl    DWORD PTR [ecx-0x49],1
  431fbf:	sub    al,0x5c
  431fc1:	(bad)  
  431fc2:	loope  0x432028
  431fc4:	add    DWORD PTR [ebp+0x1edc1116],ebx
  431fca:	push   0xc40c1e7b
  431fcf:	stos   BYTE PTR es:[edi],al
  431fd0:	sbb    bl,bh
  431fd2:	out    dx,eax
  431fd3:	stos   DWORD PTR es:[edi],eax
  431fd4:	jb     0x432031
  431fd6:	sub    DWORD PTR [esi*8-0x1b8a3289],0x483992ee
  431fe1:	call   0x3b68:0x69244438
  431fe8:	dec    ebx
  431fe9:	dec    eax
  431fea:	clc    
  431feb:	dec    edi
  431fec:	cmp    esi,ebp
  431fee:	mov    eax,ds:0xd179570d
  431ff3:	and    eax,0x4dceed3f
  431ff8:	out    dx,al
  431ff9:	leave  
  431ffa:	iret   
  431ffb:	cmp    ebx,DWORD PTR [ecx-0x2d]
  431ffe:	loopne 0x43203a
  432000:	mov    cl,0xb0
  432002:	std    
  432003:	jno    0x43201c
  432005:	xor    BYTE PTR [edx-0x16],ch
  432008:	outs   dx,DWORD PTR ds:[esi]
  432009:	sbb    dl,BYTE PTR [bx+si]
  43200c:	in     eax,dx
  43200d:	cmp    eax,ebx
  43200f:	out    0x70,eax
  432011:	and    al,0x36
  432013:	adc    dh,BYTE PTR [ebx]
  432015:	stos   BYTE PTR es:[edi],al
  432016:	mov    dl,0xab
  432018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432019:	sbb    BYTE PTR [edx+0x1],cl
  43201c:	inc    edx
  43201d:	and    BYTE PTR ds:0x4114c1b4,ah
  432023:	(bad)  
  432024:	shr    BYTE PTR [ebx+ecx*4-0x5c],0xe
  432029:	arpl   WORD PTR [edi+0x43bd7b77],bx
  43202f:	dec    edi
  432030:	mov    esi,0x6cef59ed
  432035:	sub    eax,0x870f5054
  43203a:	es jnp 0x43205f
  43203d:	out    dx,al
  43203e:	or     ah,BYTE PTR [esi+eax*8+0x2463f9c7]
  432045:	les    edi,FWORD PTR [ebx+0x3c31754b]
  43204b:	jmp    0x29fa:0x89b792e9
  432052:	aam    0x57
  432054:	pop    ebp
  432055:	icebp  
  432056:	add    dh,BYTE PTR [ebx-0x13a2b935]
  43205c:	sbb    BYTE PTR ds:0x7f30ed8b,0x74
  432063:	jae    0x432016
  432065:	loope  0x432065
  432067:	add    DWORD PTR [edx],esi
  432069:	arpl   WORD PTR [eax],dx
  43206b:	aad    0xca
  43206d:	lods   eax,DWORD PTR ds:[esi]
  43206e:	dec    edi
  43206f:	retf   
  432070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432071:	or     eax,0xda263c39
  432076:	fidiv  WORD PTR [ebp-0x19]
  432079:	xchg   edx,eax
  43207a:	imul   edx,ebx,0xc7b3a000
  432080:	test   eax,0xe11ece38
  432085:	sub    esp,DWORD PTR [edx+0x7eca6957]
  43208b:	(bad)  
  43208d:	mov    edi,0x284534e3
  432092:	mov    cl,0x6b
  432094:	pushf  
  432095:	push   esi
  432096:	das    
  432097:	(bad)
  43209a:	pop    ds
  43209b:	sub    cl,BYTE PTR [ebp+0x63084732]
  4320a1:	ret    0x5f75
  4320a4:	pop    ebx
  4320a5:	ins    DWORD PTR es:[edi],dx
  4320a6:	test   eax,0xbb779527
  4320ab:	push   0x2d
  4320ad:	xor    bh,ah
  4320af:	fwait
  4320b0:	nop
  4320b1:	pushf  
  4320b2:	rcl    edi,cl
  4320b4:	push   ebp
  4320b5:	clc    
  4320b6:	rol    BYTE PTR [ebx+0x4b],cl
  4320b9:	mov    fs,WORD PTR [ebx-0x75cc19b3]
  4320bf:	sar    DWORD PTR [ebp+0xc],0x4e
  4320c3:	lods   eax,DWORD PTR ds:[esi]
  4320c4:	lds    edi,FWORD PTR [ebp+0x7a79e13b]
  4320ca:	jo     0x43213d
  4320cc:	pop    ecx
  4320cd:	mov    dh,0x58
  4320cf:	xor    al,0xe
  4320d1:	loopne 0x4320b6
  4320d3:	(bad)
  4320d6:	sti    
  4320d7:	jno    0x4320c4
  4320d9:	and    BYTE PTR [edx-0x6a],0x5d
  4320dd:	pop    es
  4320de:	or     DWORD PTR [ebx-0x6920ddda],edx
  4320e4:	rcl    DWORD PTR [ebx+esi*8+0x59d4838a],1
  4320eb:	aas    
  4320ec:	and    al,0x97
  4320ee:	mov    WORD PTR [edx],fs
  4320f0:	mov    bh,0x2e
  4320f2:	xchg   ecx,eax
  4320f3:	(bad)  
  4320f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4320f5:	cmp    eax,0xb20b7a6f
  4320fa:	arpl   sp,dx
  4320fc:	pop    esi
  4320fd:	pop    edi
  4320fe:	cli    
  4320ff:	sti    
  432100:	mov    ah,0xc7
  432102:	jnp    0x4320e2
  432104:	rol    DWORD PTR [ebx],0x38
  432107:	in     eax,dx
  432108:	fdivr  DWORD PTR [bx+si+0x4b]
  43210c:	aaa    
  43210d:	mov    eax,ds:0x54cec433
  432112:	test   eax,0xa31684e4
  432117:	(bad)  
  432118:	pop    esp
  432119:	sbb    al,0xa1
  43211b:	into   
  43211c:	xchg   ebp,eax
  43211d:	mov    ds:0xc179c2d1,eax
  432122:	icebp  
  432123:	and    BYTE PTR [edi],0x87
  432126:	int    0xc
  432128:	xor    BYTE PTR [esi+0x180a84b],0x89
  43212f:	and    al,0xca
  432131:	adc    al,0xed
  432133:	mov    bh,0x87
  432135:	add    al,0xb0
  432137:	js     0x432192
  432139:	out    0x49,al
  43213b:	inc    ebp
  43213c:	repnz pop ss
  43213e:	mov    ecx,0x173b87e0
  432143:	jle    0x432166
  432145:	imul   BYTE PTR [edx]
  432147:	mov    edx,0xf9e3a82d
  43214c:	xor    eax,0x9ed7962d
  432151:	shl    BYTE PTR [ebp+0x5c],1
  432154:	pusha  
  432155:	ret    0xac47
  432158:	sub    esi,ebp
  43215a:	es push ebp
  43215c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  43215e:	clc    
  43215f:	fld    TBYTE PTR [ecx]
  432161:	cmp    eax,0x95e8952
  432166:	or     esi,DWORD PTR [ebp+0x6f]
  432169:	push   ds
  43216a:	mov    ds:0xc4564985,eax
  43216f:	and    eax,0x710a4b07
  432174:	xchg   ebx,eax
  432175:	mov    dh,0x94
  432177:	sub    ebx,DWORD PTR [edx+0x396c8614]
  43217d:	xor    al,0xa4
  43217f:	(bad)  
  432180:	rcr    BYTE PTR [ebx+0xf],0x27
  432184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432185:	mov    WORD PTR [ebx],fs
  432187:	das    
  432188:	xchg   esi,edi
  43218a:	test   DWORD PTR [ecx+0x792922a],eax
  432190:	mov    ebx,0x82f79795
  432195:	or     bl,BYTE PTR [eax+0x54]
  432198:	adc    al,0x9b
  43219a:	mov    dh,0xde
  43219c:	xchg   ecx,eax
  43219d:	mov    edx,0x71ee2ef6
  4321a2:	into   
  4321a3:	mov    edx,0x3e27d182
  4321a8:	(bad)  
  4321a9:	imul   ebx,DWORD PTR [edi+0x7954d6c8],0x14
  4321b0:	(bad)  
  4321b1:	xlat   BYTE PTR ds:[ebx]
  4321b2:	xchg   edi,eax
  4321b3:	jge    0x43219d
  4321b5:	push   0xf8a36f45
  4321ba:	lea    ebx,[ebx+0x6b6c2744]
  4321c0:	push   ds
  4321c1:	fiadd  WORD PTR [ecx]
  4321c3:	invd   
  4321c5:	ins    DWORD PTR es:[edi],dx
  4321c6:	sahf   
  4321c7:	scas   al,BYTE PTR es:[edi]
  4321c8:	sub    eax,0xbc263e98
  4321cd:	and    al,0xbe
  4321cf:	loopne 0x432151
  4321d1:	arpl   WORD PTR [ebx-0x13],bx
  4321d4:	push   es
  4321d5:	cdq    
  4321d6:	mov    dl,0xc5
  4321d8:	dec    edi
  4321d9:	gs adc dh,dl
  4321dc:	fdivr  QWORD PTR [esp+ebp*4+0x3ee0990c]
  4321e3:	jo     0x432229
  4321e5:	sbb    al,0x94
  4321e7:	ret    0xa2a4
  4321ea:	lods   eax,DWORD PTR ds:[esi]
  4321eb:	test   al,0x9
  4321ed:	and    DWORD PTR [edi],edx
  4321ef:	stos   BYTE PTR es:[edi],al
  4321f0:	(bad)  
  4321f1:	jmp    0x43220b
  4321f3:	enter  0xefee,0x5d
  4321f7:	push   0x5f19cedf
  4321fc:	inc    eax
  4321fd:	ins    DWORD PTR es:[edi],dx
  4321fe:	cmp    BYTE PTR ds:0xe86f356,0xfd
  432205:	push   esp
  432206:	lds    edi,FWORD PTR [eax-0x4f]
  432209:	sbb    eax,DWORD PTR ds:0x80cde563
  43220f:	rol    DWORD PTR [ecx-0x236a712c],0x59
  432216:	sahf   
  432217:	jmp    0x4321c4
  432219:	cs fcmove st,st(2)
  43221c:	pop    ecx
  43221d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43221e:	sub    eax,0x6daaea7a
  432223:	call   0x4391:0x35c0
  432229:	hlt    
  43222a:	nop
  43222b:	sub    ch,bl
  43222d:	inc    eax
  43222e:	arpl   WORD PTR [esi-0x50fb30b],sp
  432234:	dec    eax
  432235:	ss nop
  432237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432238:	int3   
  432239:	push   ss
  43223a:	out    dx,eax
  43223b:	xchg   ecx,eax
  43223c:	outs   dx,BYTE PTR ds:[esi]
  43223d:	mov    edx,0x65ff91e2
  432242:	das    
  432243:	loope  0x43221a
  432245:	jo     0x43220e
  432247:	jmp    0xdc9538c5
  43224c:	add    DWORD PTR [edi-0x33e8a36],0x24
  432253:	retf   0x62dd
  432256:	mov    ebp,0x912a2550
  43225b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43225c:	repnz sbb ch,al
  43225f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432260:	push   es
  432261:	aaa    
  432262:	inc    esp
  432263:	ds push 0xfffffffb
  432266:	pop    ebp
  432267:	pop    eax
  432268:	cmp    DWORD PTR [esi+0x4f],edx
  43226b:	test   eax,0x5756c6be
  432270:	adc    ecx,DWORD PTR [si+0x48ab]
  432275:	enter  0xac76,0x3c
  432279:	mov    cl,0x7d
  43227b:	sub    ah,BYTE PTR [ecx]
  43227d:	dec    esp
  43227e:	pop    edx
  43227f:	data16 daa 
  432281:	xor    BYTE PTR [edi+0x76d32f04],bh
  432287:	add    DWORD PTR [eax-0x43aac4bf],ebx
  43228d:	neg    BYTE PTR [ebp+0x23]
  432290:	mov    bh,0xa8
  432292:	out    dx,al
  432293:	es push edx
  432295:	dec    esi
  432296:	arpl   WORD PTR [ecx-0x3067339b],ax
  43229c:	adc    edx,0xffffffbd
  43229f:	xchg   edx,eax
  4322a0:	inc    edi
  4322a1:	out    dx,al
  4322a2:	sahf   
  4322a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4322a4:	(bad)  
  4322a5:	mov    ebp,0x163fc23b
  4322aa:	jb     0x4322bc
  4322ac:	outs   dx,BYTE PTR ds:[esi]
  4322ad:	loope  0x4322e9
  4322af:	push   0x25146f53
  4322b4:	jmp    0x5c64:0xc987075b
  4322bb:	js     0x43229b
  4322bd:	daa    
  4322be:	push   edx
  4322bf:	sub    ecx,0x5e57af07
  4322c5:	(bad)  
  4322c6:	fs or  al,0xcf
  4322c9:	cmp    esp,DWORD PTR [esi+edi*1+0x7f]
  4322cd:	xor    eax,0xc2810d9
  4322d2:	xchg   esp,eax
  4322d3:	jb     0x4322cb
  4322d5:	in     al,0x67
  4322d7:	scas   al,BYTE PTR es:[edi]
  4322d8:	xor    al,0x73
  4322da:	mov    ah,BYTE PTR [esi]
  4322dc:	jae    0x4322ff
  4322de:	std    
  4322df:	xor    ah,bl
  4322e1:	sub    al,BYTE PTR [eax-0x4f5a0147]
  4322e7:	out    dx,al
  4322e8:	scas   al,BYTE PTR es:[edi]
  4322e9:	push   0x41
  4322eb:	push   cs
  4322ec:	adc    al,0x7d
  4322ee:	push   ebp
  4322ef:	jl     0x43229d
  4322f1:	sbb    al,0xa3
  4322f3:	pop    es
  4322f4:	push   ebp
  4322f5:	xlat   BYTE PTR ds:[ebx]
  4322f6:	xchg   ebp,eax
  4322f7:	jmp    0x43235e
  4322f9:	nop
  4322fa:	cdq    
  4322fb:	test   DWORD PTR [ebx-0x13],edx
  4322fe:	sahf   
  4322ff:	sub    ebp,edx
  432301:	mov    edx,0x19a75316
  432306:	sbb    esi,DWORD PTR [edx-0x2d26452e]
  43230c:	cmp    eax,0xaebaebb
  432311:	shr    BYTE PTR [ebx],1
  432313:	in     eax,0x25
  432315:	adc    DWORD PTR [ecx],edx
  432317:	push   ss
  432318:	mov    ah,0xa5
  43231a:	push   0xffffffa1
  43231c:	fsub   QWORD PTR [ebx+0x3d13e652]
  432322:	scas   al,BYTE PTR es:[edi]
  432323:	mov    cl,BYTE PTR [eax]
  432325:	adc    al,0xca
  432327:	jp     0x4322f4
  432329:	push   edx
  43232a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43232b:	in     al,dx
  43232c:	cmp    al,0x7b
  43232e:	loope  0x432313
  432330:	and    edx,DWORD PTR [ebp-0x782b8e64]
  432336:	shr    BYTE PTR [ecx+esi*8+0x4cd5c4d3],0x64
  43233e:	cmc    
  43233f:	scas   eax,DWORD PTR es:[edi]
  432340:	lea    ecx,[ebp-0x9b21e87]
  432346:	mov    esi,0x5cdf773a
  43234b:	aaa    
  43234c:	in     al,dx
  43234d:	retf   0xa461
  432350:	mov    ds:0x2296cdf0,al
  432355:	mov    WORD PTR [esi],ss
  432357:	lea    esi,[ebx-0x61087340]
  43235d:	add    DWORD PTR [edx-0x5d],0x73d58d97
  432364:	push   edi
  432365:	mov    edx,0x57fe9db6
  43236a:	fwait
  43236b:	int3   
  43236c:	push   esi
  43236d:	sub    eax,0x7995cf53
  432372:	add    al,bl
  432374:	mov    ch,0x7c
  432376:	xor    edi,DWORD PTR [ecx]
  432378:	inc    ebx
  432379:	loop   0x4323cb
  43237b:	pop    ebx
  43237c:	fdiv   QWORD PTR [ecx+0x2]
  43237f:	push   ss
  432380:	add    al,BYTE PTR [ebx]
  432382:	sbb    al,0xc5
  432384:	cmp    DWORD PTR [edi],edi
  432386:	xchg   ecx,eax
  432387:	add    al,BYTE PTR [edi-0xf]
  43238a:	inc    edx
  43238b:	neg    bh
  43238d:	cs mov bh,0xaf
  432390:	push   cs
  432391:	clc    
  432392:	fld    st(7)
  432394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432395:	xchg   esp,eax
  432396:	adc    ecx,esi
  432398:	and    al,0xd1
  43239a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43239b:	sub    esi,DWORD PTR [ebx+0x3f]
  43239e:	jmp    0xb89c:0xafad1441
  4323a5:	mov    cl,0xae
  4323a7:	pop    ds
  4323a8:	adc    al,0x8b
  4323aa:	adc    eax,0x13267c2
  4323af:	and    esp,DWORD PTR [ebx-0x3568a173]
  4323b5:	mov    ebp,0x8a433d70
  4323ba:	popf   
  4323bb:	ins    DWORD PTR es:[edi],dx
  4323bc:	loopne 0x4323e5
  4323be:	fdivr  DWORD PTR [ecx]
  4323c0:	sahf   
  4323c1:	les    edx,FWORD PTR [edx+edx*8+0x28]
  4323c5:	cmp    al,0x4b
  4323c7:	ret    
  4323c8:	inc    edx
  4323c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4323ca:	retf   0x37e0
  4323cd:	or     esp,eax
  4323cf:	adc    BYTE PTR [edx+0x21],0xce
  4323d3:	mov    dh,bl
  4323d5:	scas   al,BYTE PTR es:[edi]
  4323d6:	imul   ebx,DWORD PTR [ebp-0x61414602],0xffffffc3
  4323dd:	iret   
  4323de:	icebp  
  4323df:	sti    
  4323e0:	mov    al,BYTE PTR [ecx-0x6c6e918e]
  4323e6:	call   0x71b0:0x9cd0013d
  4323ed:	daa    
  4323ee:	test   BYTE PTR [eax+ecx*4+0x4a4ad25a],cl
  4323f5:	xor    ebp,DWORD PTR [eax-0x5d]
  4323f8:	mov    ds:0x8070e01d,eax
  4323fd:	imul   edi,DWORD PTR [esi+0x79db1244],0x6b
  432404:	xor    edi,DWORD PTR [ebx-0x2c]
  432407:	fisub  DWORD PTR [ebx+0x44bb8d56]
  43240d:	pusha  
  43240e:	adc    BYTE PTR [esi+0x4c2e4ee7],al
  432414:	push   edx
  432415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432416:	push   esp
  432417:	push   ebp
  432418:	mov    al,0x1b
  43241a:	xchg   DWORD PTR [edi-0x9cb21c4],esp
  432420:	sbb    bh,BYTE PTR [eax]
  432422:	or     DWORD PTR [edi+ecx*2+0x32],ebp
  432426:	fnsave ds:0x3ec472d2
  43242c:	and    al,0x54
  43242e:	push   esi
  43242f:	shl    BYTE PTR [ecx],1
  432431:	cmp    al,0x80
  432433:	fisttp QWORD PTR [esi-0x3d9a4b40]
  432439:	mov    bl,ch
  43243b:	sub    eax,0x2db458c8
  432440:	mov    edx,0xfdd8e31a
  432445:	out    0x31,al
  432447:	fbld   TBYTE PTR [edi-0x6a99de8b]
  43244d:	mov    esi,0x955e371f
  432452:	shl    DWORD PTR [edx+0x28118030],0x1c
  432459:	xchg   ebx,eax
  43245a:	hlt    
  43245b:	(bad)  
  43245c:	cmp    edi,ebp
  43245e:	cmp    eax,DWORD PTR [esi-0x56]
  432461:	cmc    
  432462:	sbb    DWORD PTR [ecx+0x35],edi
  432465:	mov    fs,WORD PTR [ebp+eax*8+0x3d]
  432469:	push   cs
  43246a:	arpl   WORD PTR [eax],si
  43246c:	pop    eax
  43246d:	retf   
  43246e:	jae    0x4324d0
  432470:	das    
  432471:	mov    DWORD PTR [ecx],ecx
  432473:	xchg   esp,eax
  432474:	arpl   di,si
  432476:	stc    
  432477:	add    eax,0xb0d92fd1
  43247c:	mov    dh,ch
  43247e:	in     eax,0x52
  432480:	jne    0x4324ca
  432482:	mov    cl,0x3e
  432484:	in     al,0xbf
  432486:	iret   
  432487:	aas    
  432488:	xchg   ecx,eax
  432489:	leave  
  43248a:	out    0x5e,al
  43248c:	int3   
  43248d:	call   0x72bc8e3a
  432492:	mov    edi,0x3456ba7d
  432497:	sub    edx,ebp
  432499:	jae    0x4324f9
  43249b:	inc    ecx
  43249c:	lea    ebp,[esi]
  43249e:	shl    BYTE PTR [ebx+0x39],cl
  4324a1:	and    BYTE PTR [edi-0x25],dl
  4324a4:	sub    ebp,DWORD PTR [bp+0x1743]
  4324a9:	cwde   
  4324aa:	xchg   ecx,eax
  4324ab:	fs pop ebx
  4324ad:	in     eax,dx
  4324ae:	pop    edi
  4324af:	fwait
  4324b0:	mov    al,0x59
  4324b2:	test   BYTE PTR [eax+0x122ba96e],dh
  4324b8:	aas    
  4324b9:	pop    ds
  4324ba:	neg    BYTE PTR [esi+0x18]
  4324bd:	and    dl,BYTE PTR [esi+0x1ea8f015]
  4324c3:	jl     0x4324f7
  4324c5:	sub    eax,0xa633b6bb
  4324ca:	aaa    
  4324cb:	mov    dl,0x91
  4324cd:	sbb    dl,BYTE PTR [edi+0x1126ec9c]
  4324d3:	mov    esi,0xe917e564
  4324d8:	in     al,dx
  4324d9:	dec    edx
  4324da:	push   ebx
  4324db:	cdq    
  4324dc:	rcl    BYTE PTR [esi-0x227edf6c],0xb1
  4324e3:	add    ecx,ebx
  4324e5:	fsubr  DWORD PTR es:[ebx+0x21f2fb23]
  4324ec:	xor    DWORD PTR [ebx-0x6ca38cce],eax
  4324f2:	sbb    DWORD PTR [edx+0x593f40e],esp
  4324f8:	adc    al,BYTE PTR [ebp-0x52]
  4324fb:	(bad)  
  4324fd:	push   0xffffffb2
  4324ff:	int3   
  432500:	das    
  432501:	xor    al,0xc5
  432504:	fist   WORD PTR [esp+eiz*2-0x79]
  432508:	mov    esp,0x900d6fea
  43250d:	adc    DWORD PTR [ecx+ebp*4-0x393361a2],edx
  432514:	inc    esp
  432515:	shl    DWORD PTR [ebp-0x1c890fa2],0x84
  43251c:	psubsb mm5,QWORD PTR ds:0xb995bb42
  432523:	lds    esp,FWORD PTR [ebx]
  432525:	call   0xacb8:0xf5718250
  43252c:	sbb    ebx,DWORD PTR [eax]
  43252e:	mov    edx,0x583b7481
  432533:	lock in al,0x42
  432536:	ror    BYTE PTR [ebx],cl
  432538:	dec    edi
  432539:	out    dx,al
  43253a:	into   
  43253b:	adc    ebp,eax
  43253d:	jo     0x43252e
  43253f:	cmp    BYTE PTR [ebp+0x24],dh
  432542:	or     bl,BYTE PTR [ecx+0x49]
  432545:	out    0x1b,al
  432547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432548:	scas   al,BYTE PTR es:[edi]
  432549:	jle    0x432583
  43254b:	popf   
  43254c:	dec    ebx
  43254d:	mul    DWORD PTR [edx]
  43254f:	icebp  
  432550:	ja     0x43258f
  432552:	fs (bad) 
  432554:	(bad)  
  432555:	adc    ebp,edi
  432557:	sub    al,0x60
  432559:	xchg   edi,eax
  43255a:	mov    BYTE PTR [edx+0x64888339],ch
  432560:	xlat   BYTE PTR ds:[ebx]
  432561:	pop    ss
  432562:	fld    DWORD PTR [ebp+0x2d]
  432565:	popf   
  432566:	xchg   cl,dl
  432568:	loope  0x43253e
  43256a:	xchg   ebx,eax
  43256b:	fimul  DWORD PTR [ebp+esi*2+0x4b]
  43256f:	pop    es
  432570:	xchg   edx,eax
  432571:	xor    BYTE PTR [esi-0x309318cc],al
  432577:	jecxz  0x43250f
  432579:	cli    
  43257a:	daa    
  43257b:	sub    DWORD PTR ds:0x5d3a89ac,ebp
  432581:	lahf   
  432582:	nop
  432583:	pop    es
  432584:	cld    
  432585:	cmc    
  432586:	ja     0x4ea77667
  43258c:	dec    ebx
  43258d:	adc    eax,0x8ee5ddd7
  432592:	add    eax,0x4aec142c
  432597:	pop    ss
  432598:	mov    ss,WORD PTR [edi-0x41]
  43259b:	ins    DWORD PTR es:[edi],dx
  43259c:	scas   eax,DWORD PTR es:[edi]
  43259d:	pop    es
  43259e:	mov    dl,0x88
  4325a0:	popf   
  4325a1:	je     0x43254d
  4325a3:	jmp    0xed2d:0xeaa4b115
  4325aa:	pop    ecx
  4325ab:	mov    WORD PTR [ecx-0x64],gs
  4325ae:	mov    ebx,DWORD PTR [eax-0x30]
  4325b1:	xchg   ebx,eax
  4325b2:	syscall 
  4325b4:	push   ds
  4325b5:	dec    edi
  4325b6:	adc    al,0xb7
  4325b8:	into   
  4325b9:	pop    ebx
  4325ba:	jle    0x432631
  4325bc:	push   edx
  4325bd:	neg    BYTE PTR [esi-0x31]
  4325c0:	jo     0x432548
  4325c2:	xor    eax,0x46a2c32f
  4325c7:	jbe    0x432647
  4325c9:	sub    eax,DWORD PTR [ecx+0x65]
  4325cc:	adc    ah,BYTE PTR [eax]
  4325ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4325cf:	fs xchg ebp,eax
  4325d1:	push   0x86664ce5
  4325d6:	push   0x12bfcc66
  4325db:	adc    BYTE PTR [eax-0x4068f6ff],dh
  4325e1:	aad    0xea
  4325e3:	neg    ecx
  4325e5:	add    DWORD PTR [edi+ebx*8-0x185f55a2],eax
  4325ec:	aaa    
  4325ed:	pop    edi
  4325ee:	xor    DWORD PTR [edi-0x1a],edi
  4325f1:	mov    eax,ds:0x2500facd
  4325f6:	ret    
  4325f7:	std    
  4325f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325f9:	ss ss test al,0x88
  4325fd:	dec    esp
  4325fe:	add    eax,0xb3113d76
  432603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432604:	or     eax,0x6b755741
  432609:	int    0x39
  43260b:	inc    eax
  43260c:	sub    eax,0x1840ffe9
  432611:	iret   
  432612:	adc    edx,DWORD PTR [esi+ecx*8]
  432615:	ins    DWORD PTR es:[edi],dx
  432616:	add    cl,al
  432618:	pop    edx
  432619:	ror    BYTE PTR [ebx-0x3e],0xb5
  43261d:	add    BYTE PTR [edi+0x64],ah
  432620:	mov    ah,0xb9
  432622:	cmp    eax,0x98d16374
  432627:	push   edi
  432628:	fst    QWORD PTR [ecx]
  43262a:	mov    ah,0x3e
  43262c:	shl    DWORD PTR [ecx+0x5],1
  43262f:	jo     0x432682
  432631:	fadd   QWORD PTR [edi+0x4d90d6c0]
  432637:	mov    cl,0xa
  432639:	cmp    eax,DWORD PTR [edx-0x32]
  43263c:	mov    ebp,0x39eeb3f4
  432641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432642:	add    DWORD PTR [esi],0x92812efe
  432648:	enter  0x472a,0x56
  43264c:	cld    
  43264d:	jle    0x43268d
  43264f:	push   ecx
  432650:	mov    ebp,0x4bd7cd2b
  432655:	shl    DWORD PTR [eax-0xc044851],cl
  43265b:	sbb    bl,bl
  43265d:	and    eax,DWORD PTR [ebp-0x4d]
  432660:	jecxz  0x4326cf
  432662:	ret    0x8578
  432665:	jmp    DWORD PTR es:[ebx+edx*4+0x19]
  43266a:	(bad)  
  43266b:	out    0x6d,eax
  43266d:	xchg   DWORD PTR [ebp-0x5f],ecx
  432670:	add    edi,ecx
  432672:	or     ch,dh
  432674:	pop    ss
  432675:	cld    
  432676:	(bad)  
  432678:	test   al,0x0
  43267a:	mov    ecx,0xcaae6cd4
  43267f:	lods   eax,DWORD PTR ds:[esi]
  432680:	cmc    
  432681:	adc    ah,BYTE PTR [esi+ebp*1]
  432684:	xchg   edi,eax
  432685:	push   esi
  432686:	inc    esp
  432687:	mov    edi,0x5eb3e80f
  43268c:	outs   dx,BYTE PTR ds:[esi]
  43268d:	add    cl,BYTE PTR [edi-0x7f]
  432690:	scas   al,BYTE PTR es:[edi]
  432691:	lds    esp,FWORD PTR [ecx+0x4d602391]
  432697:	xchg   edx,eax
  432698:	rcl    eax,cl
  43269a:	nop
  43269b:	push   0x6023bb56
  4326a0:	ror    DWORD PTR [ecx+0x30],cl
  4326a3:	pop    ebx
  4326a4:	xor    BYTE PTR [ebp+edi*8+0x4e],bh
  4326a8:	push   ds
  4326a9:	popa   
  4326aa:	fmul   st,st(2)
  4326ac:	not    BYTE PTR [eax-0x5c62cd1b]
  4326b2:	shr    BYTE PTR [ecx-0x45],1
  4326b5:	xor    eax,0xaa373f18
  4326ba:	fiadd  WORD PTR [edi+edi*2+0x2b]
  4326be:	mov    ds:0x4faa5b3f,eax
  4326c3:	add    al,0x69
  4326c5:	mov    edx,0x701007d7
  4326ca:	stos   DWORD PTR es:[edi],eax
  4326cb:	rcr    DWORD PTR [ebx+0x16],1
  4326ce:	test   BYTE PTR [edi-0x50],cl
  4326d1:	std    
  4326d2:	int3   
  4326d3:	xchg   ebx,eax
  4326d4:	pop    es
  4326d5:	adc    edi,DWORD PTR [eax]
  4326d7:	or     dh,dl
  4326d9:	mov    dl,0x58
  4326db:	and    ecx,DWORD PTR [esi]
  4326dd:	(bad)  
  4326de:	(bad)  
  4326e0:	std    
  4326e1:	add    bl,BYTE PTR [ecx]
  4326e3:	sub    BYTE PTR [ecx-0x22be9331],bl
  4326e9:	jbe    0x43274a
  4326eb:	ins    DWORD PTR es:[edi],dx
  4326ec:	adc    al,0x1b
  4326ee:	dec    edx
  4326ef:	jle    0x432685
  4326f1:	mov    eax,0x3e43ea2c
  4326f6:	cmp    bh,cl
  4326f8:	lods   eax,DWORD PTR ds:[esi]
  4326f9:	test   DWORD PTR [esi+0x4a],0xf154eea2
  432700:	clc    
  432701:	push   esi
  432702:	leave  
  432703:	xchg   DWORD PTR [esi-0x76d325d3],eax
  432709:	imul   ebx,DWORD PTR [esi-0xd7f9818],0xd420a497
  432713:	jge    0x432769
  432715:	push   0xffffffc1
  432717:	xor    DWORD PTR [edi+0x2c3a173e],esp
  43271d:	lea    eax,[ecx+0x60185a56]
  432723:	enter  0xa2e8,0x43
  432727:	push   edi
  432728:	push   ebx
  432729:	fnsave [edx-0x37381e4a]
  43272f:	jnp    0x432748
  432731:	and    al,0x37
  432733:	pop    es
  432734:	jle    0x432798
  432736:	iret   
  432737:	push   esp
  432738:	sbb    eax,DWORD PTR [ecx]
  43273a:	mov    eax,ds:0x86169382
  43273f:	mov    eax,esi
  432741:	sub    bl,ah
  432743:	or     edx,DWORD PTR ds:0xe24936b2
  432749:	(bad)
  43274c:	ffreep st(3)
  43274e:	push   edi
  43274f:	clc    
  432750:	ss or  esp,edi
  432753:	jg     0x4326dd
  432755:	out    0xef,al
  432757:	mov    ecx,0xa2d782c7
  43275c:	sub    ebx,DWORD PTR [esi]
  43275e:	jl     0x43277d
  432760:	outs   dx,DWORD PTR ds:[esi]
  432761:	retf   
  432762:	jno    0x432714
  432764:	das    
  432765:	mov    dh,0xcc
  432767:	shl    dh,1
  432769:	or     esi,DWORD PTR [esi]
  43276b:	cs xchg edi,eax
  43276d:	(bad)
  432770:	cs cmc 
  432772:	push   ebx
  432773:	stc    
  432774:	push   esi
  432775:	js     0x432780
  432777:	jge    0x4327ef
  432779:	add    BYTE PTR [edi],0xaa
  43277c:	jbe    0x4327fa
  43277e:	pop    ecx
  43277f:	dec    ecx
  432780:	call   0x832ba71b
  432785:	xor    cl,BYTE PTR [eax+0x50]
  432788:	out    0x4a,eax
  43278a:	cmp    BYTE PTR [ebx-0x8],cl
  43278d:	mov    ds:0x311a7151,eax
  432792:	pop    edi
  432793:	ret    
  432794:	xchg   edx,eax
  432795:	outs   dx,BYTE PTR ds:[esi]
  432796:	outs   dx,DWORD PTR ds:[esi]
  432797:	mov    ch,0x84
  432799:	add    al,0x3d
  43279b:	push   esp
  43279c:	sbb    bl,BYTE PTR [edx]
  43279e:	xor    eax,0x198a71ef
  4327a3:	pop    ds
  4327a4:	jb     0x4327bb
  4327a6:	mov    ?,edi
  4327a8:	or     edx,edx
  4327aa:	xchg   ecx,eax
  4327ab:	pop    ebx
  4327ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4327ad:	jecxz  0x432783
  4327af:	dec    ebx
  4327b0:	outs   dx,BYTE PTR ds:[esi]
  4327b1:	mov    dh,0xd9
  4327b3:	dec    edi
  4327b4:	dec    ebx
  4327b5:	dec    edx
  4327b6:	adc    eax,0xa0139451
  4327bb:	int3   
  4327bc:	popf   
  4327bd:	enter  0xa4c8,0x48
  4327c1:	(bad)  
  4327c2:	jno    0x432750
  4327c4:	pop    ss
  4327c5:	sbb    eax,0x33259955
  4327ca:	test   eax,0xb75fae31
  4327cf:	(bad)  
  4327d1:	adc    edi,DWORD PTR [ecx-0x33f9439e]
  4327d7:	mov    esi,0x53d4c59c
  4327dc:	dec    ecx
  4327dd:	pusha  
  4327de:	(bad)  
  4327df:	adc    dl,ah
  4327e1:	fwait
  4327e2:	les    esi,FWORD PTR [esi-0x5b]
  4327e5:	push   ebp
  4327e6:	retf   0x535e
  4327e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4327ea:	pop    ds
  4327eb:	scas   al,BYTE PTR es:[edi]
  4327ec:	(bad)  
  4327ed:	xchg   esp,eax
  4327ee:	jl     0x432819
  4327f0:	cli    
  4327f1:	xchg   ebx,eax
  4327f2:	xlat   BYTE PTR ds:[ebx]
  4327f3:	not    BYTE PTR ss:[edi+0x6f379a4]
  4327fa:	jmp    0x432868
  4327fc:	adc    DWORD PTR ds:0x54d879a3,esp
  432802:	add    dl,BYTE PTR [esi-0x61]
  432805:	xchg   BYTE PTR [edx],ah
  432807:	hlt    
  432808:	mov    bh,0x14
  43280a:	cmp    ebp,eax
  43280c:	mov    dh,0x40
  43280e:	xchg   ebp,eax
  43280f:	bound  esp,QWORD PTR [edi-0x40]
  432812:	jmp    0x432824
  432814:	jbe    0x4327ca
  432816:	mov    ah,BYTE PTR [esi+0x6ce58049]
  43281c:	pcmpeqd mm2,QWORD PTR [esi-0x19]
  432820:	xchg   esp,eax
  432821:	xor    eax,0x2487fb27
  432826:	call   0xb240:0x99c38c59
  43282d:	mov    ds:0x6baabcc5,eax
  432832:	outs   dx,DWORD PTR ds:[esi]
  432833:	sbb    edi,DWORD PTR [ecx]
  432835:	cmp    edx,esp
  432837:	xor    al,0xbd
  432839:	(bad)  
  43283a:	jecxz  0x432874
  43283c:	cmp    eax,0x3b2a2a79
  432841:	into   
  432842:	add    eax,0x6f4d7c79
  432847:	pop    esp
  432848:	in     al,0x75
  43284a:	mov    BYTE PTR ds:0x118800c9,ah
  432850:	inc    esp
  432851:	lea    esi,[esi+0x22f7356c]
  432857:	xor    al,0xcd
  432859:	(bad)  
  43285b:	push   cs
  43285c:	add    DWORD PTR [esi-0x80],0xfda21c30
  432863:	add    eax,0xf80e645b
  432868:	push   edi
  432869:	add    BYTE PTR [ecx+eiz*1+0x2d],al
  43286d:	es aas 
  43286f:	push   cs
  432870:	pop    edx
  432871:	ins    BYTE PTR es:[edi],dx
  432872:	cwde   
  432873:	sbb    al,BYTE PTR [ecx-0x6537cd9a]
  432879:	sub    eax,DWORD PTR [ebp+0x62eecc9f]
  43287f:	fdiv   st(0),st
  432881:	add    DWORD PTR [edi+0x3c],ecx
  432884:	sub    eax,0x99a57510
  432889:	jae    0x4328b6
  43288b:	sub    dl,cl
  43288d:	xchg   ebp,edi
  43288f:	mov    ch,dl
  432891:	inc    ecx
  432892:	add    esp,DWORD PTR [ebx-0xb]
  432895:	imul   ebp,esi,0x93a3d290
  43289b:	xor    DWORD PTR [eax+0x69],ebx
  43289e:	or     eax,0x2b61abeb
  4328a3:	jae    0x43289d
  4328a5:	mov    cl,0xec
  4328a7:	xchg   esp,eax
  4328a8:	jno    0x432870
  4328aa:	inc    edx
  4328ab:	fs xor ah,cl
  4328ae:	(bad)
  4328b1:	or     edx,0x2a
  4328b4:	(bad)  
  4328b5:	out    dx,al
  4328b6:	add    ah,BYTE PTR [ecx+edx*8]
  4328b9:	icebp  
  4328ba:	repz repnz cdq 
  4328bd:	mov    ah,0xd3
  4328bf:	cli    
  4328c0:	jmp    0x236a:0x4c93edd8
  4328c7:	jns    0x4328c7
  4328c9:	mov    ah,0x85
  4328cb:	push   es
  4328cc:	(bad)  
  4328cd:	retf   0x514a
  4328d0:	jecxz  0x432882
  4328d2:	dec    eax
  4328d3:	test   BYTE PTR [ecx+0x36],bh
  4328d6:	scas   eax,DWORD PTR es:[edi]
  4328d7:	bndldx bnd0,gs:[edi+0x5c966965]
  4328df:	clc    
  4328e0:	push   ebx
  4328e1:	jne    0x43289f
  4328e3:	pop    esi
  4328e4:	mov    ecx,0x1de3f391
  4328e9:	push   esp
  4328ea:	dec    BYTE PTR [esi]
  4328ec:	aad    0x15
  4328ee:	mov    ch,BYTE PTR [eax]
  4328f0:	mov    bh,0xec
  4328f2:	add    edi,DWORD PTR [ebp-0x4f]
  4328f5:	pop    es
  4328f6:	sbb    ebx,DWORD PTR [edx+0x6]
  4328f9:	push   ebp
  4328fa:	mov    dl,0xc
  4328fc:	mov    ah,0x96
  4328fe:	mov    cl,0x27
  432900:	or     dh,al
  432902:	bound  esp,QWORD PTR [ecx]
  432904:	push   ebp
  432905:	sub    esp,DWORD PTR [ecx]
  432907:	cmp    eax,0xf54d2f6f
  43290c:	int3   
  43290d:	stos   BYTE PTR es:[edi],al
  43290e:	jns    0x43291a
  432910:	les    ebp,FWORD PTR [edx+0x6ab28533]
  432916:	neg    BYTE PTR [edi-0x5c]
  432919:	aaa    
  43291a:	push   ebp
  43291b:	xor    esi,eax
  43291d:	shr    DWORD PTR [esi+0x556c5945],0xa7
  432924:	xchg   dh,bl
  432926:	repz push ebp
  432928:	jnp    0x432969
  43292a:	mov    ds:0x7495badc,al
  43292f:	jg     0x4328d2
  432931:	cmc    
  432932:	jle    0x4328c5
  432934:	lahf   
  432935:	cs jnp 0x432969
  432938:	stos   DWORD PTR es:[edi],eax
  432939:	sbb    eax,0xe263819b
  43293e:	int    0x6
  432940:	inc    edx
  432941:	inc    esi
  432942:	pusha  
  432943:	imul   eax,DWORD PTR [ebx-0x64],0xffffffbc
  432947:	sub    al,0x9c
  432949:	xchg   DWORD PTR [ebx+0x2f],esp
  43294c:	ret    0x7c05
  43294f:	(bad)  
  432950:	bound  eax,QWORD PTR [edx-0x2ddbb45e]
  432956:	sahf   
  432957:	jp     0x4329b8
  432959:	push   cs
  43295a:	adc    edx,0xfb3c3bdf
  432960:	jb     0x432988
  432962:	int    0xaf
  432964:	(bad)  
  432965:	leave  
  432966:	jge    0x4329be
  432968:	pop    edi
  432969:	cmp    al,0x47
  43296b:	push   ecx
  43296c:	stos   BYTE PTR es:[edi],al
  43296d:	mov    ecx,0x741bd472
  432972:	lods   al,BYTE PTR ds:[esi]
  432973:	sbb    dh,BYTE PTR [ebx-0x45]
  432976:	add    DWORD PTR [ebx+0x366a7bc],0xffffffcb
  43297d:	cmp    edi,eax
  43297f:	sub    al,0x38
  432981:	icebp  
  432982:	add    eax,0x10e5fab0
  432987:	sbb    dl,dh
  432989:	fwait
  43298a:	pop    edx
  43298b:	xor    BYTE PTR [ebx-0x71],0xa
  43298f:	fnstcw WORD PTR [eax]
  432991:	mov    ds:0x18cfe0a6,eax
  432996:	xor    al,BYTE PTR [edx-0x4b657f8c]
  43299c:	repz ret 0x410b
  4329a0:	nop
  4329a1:	xchg   DWORD PTR [esp+ebx*1+0x3c],esi
  4329a5:	mov    eax,0xa79467ff
  4329aa:	mov    esi,0xf6aac521
  4329af:	dec    esp
  4329b0:	lods   eax,DWORD PTR ds:[esi]
  4329b1:	outs   dx,DWORD PTR ds:[esi]
  4329b2:	mov    esp,0x64418016
  4329b7:	pop    edi
  4329b8:	enter  0x996,0x91
  4329bc:	or     eax,0xb5bc929a
  4329c1:	dec    ecx
  4329c2:	test   eax,0x60a96753
  4329c7:	add    DWORD PTR [esi-0x45],ebx
  4329ca:	jbe    0x432a21
  4329cc:	js     0x432958
  4329ce:	push   ebx
  4329cf:	jns    0x432a1e
  4329d1:	mov    dl,BYTE PTR [ebx+edx*8-0x4ce4794a]
  4329d8:	pop    edx
  4329d9:	jno    0x432988
  4329db:	(bad)  
  4329dc:	(bad)  [edi-0x5e]
  4329df:	imul   ebp,esi,0xffffffc1
  4329e2:	cwde   
  4329e3:	in     al,dx
  4329e4:	call   0xe5bc:0xcfed1de4
  4329eb:	cmc    
  4329ec:	xchg   ebp,eax
  4329ed:	dec    ebp
  4329ee:	fwait
  4329ef:	popa   
  4329f0:	mov    cl,dh
  4329f2:	std    
  4329f3:	xchg   edi,eax
  4329f4:	cld    
  4329f5:	ins    BYTE PTR es:[edi],dx
  4329f6:	and    DWORD PTR [edi],edx
  4329f8:	std    
  4329f9:	mov    ds:0xff47cea1,eax
  4329fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4329ff:	xor    esi,DWORD PTR [esi]
  432a01:	popf   
  432a02:	inc    esi
  432a03:	mov    ecx,0xdaa0bb70
  432a08:	retf   0x204b
  432a0b:	inc    edx
  432a0c:	adc    al,0x16
  432a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a0f:	nop
  432a10:	or     edi,esp
  432a12:	cmp    DWORD PTR [esi-0x5d61259b],esp
  432a18:	push   esp
  432a19:	mov    ebp,0xdfed3caf
  432a1e:	sbb    eax,0xe1e9a30f
  432a23:	cmp    BYTE PTR [edi],dl
  432a25:	outs   dx,DWORD PTR ds:[esi]
  432a26:	les    esp,FWORD PTR [ebx]
  432a28:	jg     0x432a40
  432a2a:	adc    ch,BYTE PTR [esi-0x5778b405]
  432a30:	pusha  
  432a31:	popf   
  432a32:	and    ch,dh
  432a34:	push   ebp
  432a35:	popa   
  432a36:	aaa    
  432a37:	int3   
  432a38:	dec    ebp
  432a39:	push   eax
  432a3a:	(bad)  
  432a3b:	dec    esp
  432a3c:	sub    BYTE PTR [ebx+0x6c],0xf3
  432a40:	scas   al,BYTE PTR es:[edi]
  432a41:	mov    al,ds:0x1aee512e
  432a46:	clc    
  432a47:	mov    al,0x59
  432a49:	loopne 0x432abd
  432a4b:	adc    BYTE PTR [edx-0x6b],ah
  432a4e:	xchg   ecx,eax
  432a4f:	mov    ebx,0xd1654b17
  432a54:	pop    ss
  432a55:	out    0x61,al
  432a57:	test   al,0xb1
  432a59:	add    ecx,edi
  432a5b:	mov    al,0xdd
  432a5d:	mov    al,BYTE PTR [ebx-0xbc05032]
  432a63:	sbb    ch,BYTE PTR [esi]
  432a65:	mov    eax,0x8bbba811
  432a6a:	mov    eax,ds:0xfcf3e774
  432a6f:	rcr    DWORD PTR [edx-0x6b8ff9f6],1
  432a75:	call   0x59f3:0x3cb5bfac
  432a7c:	rcl    ebx,0x16
  432a7f:	and    al,0xec
  432a81:	data16 stos BYTE PTR es:[edi],al
  432a83:	cmp    DWORD PTR [edi+0x30],eax
  432a86:	xor    eax,0x11c9cb6a
  432a8b:	xchg   esp,eax
  432a8c:	dec    eax
  432a8d:	or     BYTE PTR [ecx-0x392bcbf1],0x87
  432a94:	cmp    edi,DWORD PTR [ebx]
  432a96:	adc    BYTE PTR [ecx-0xed28c36],bl
  432a9c:	fisttp WORD PTR [edi]
  432a9e:	adc    ebp,DWORD PTR [edx+0x19de4901]
  432aa4:	mov    ebx,0x358e13f6
  432aa9:	adc    eax,0x925806ef
  432aae:	inc    edi
  432aaf:	icebp  
  432ab0:	jmp    0xd4aa2c9e
  432ab5:	pop    ecx
  432ab6:	dec    edx
  432ab7:	jbe    0x432a51
  432ab9:	rcr    BYTE PTR [ebp-0x55],1
  432abc:	xor    al,0xf7
  432abe:	mov    WORD PTR [eax+0x3f],ds
  432ac1:	add    ah,BYTE PTR [ebx-0x7d]
  432ac4:	mov    eax,ds:0x1fb216ec
  432ac9:	out    0xb,eax
  432acb:	jae    0x432aed
  432acd:	pop    ecx
  432ace:	rol    DWORD PTR [eax+0x6d],0x8a
  432ad2:	jl     0x432b31
  432ad4:	test   al,0x54
  432ad6:	inc    esi
  432ad7:	(bad)  
  432ad8:	sar    edx,cl
  432ada:	dec    esp
  432adb:	je     0x432ad2
  432add:	lock scas eax,DWORD PTR es:[edi]
  432adf:	loope  0x432acb
  432ae1:	retf   
  432ae2:	jg     0x432a7d
  432ae4:	xor    DWORD PTR [edx+0x6],esi
  432ae7:	jae    0x432b67
  432ae9:	(bad)  
  432aea:	mov    al,0x56
  432aec:	and    DWORD PTR [ebp+0x42],0xffffff9a
  432af0:	cld    
  432af1:	pop    ebx
  432af2:	push   edx
  432af3:	push   es
  432af4:	jb     0x432ac3
  432af6:	pushf  
  432af7:	mov    esi,0x5053ad69
  432afc:	cld    
  432afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432afe:	sub    eax,0x1c8c376f
  432b03:	out    0xa2,eax
  432b05:	xchg   esp,eax
  432b06:	popf   
  432b07:	mov    esi,0xe3a302a2
  432b0c:	pop    es
  432b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b0e:	cli    
  432b0f:	repnz out 0xbf,eax
  432b12:	lahf   
  432b13:	mov    al,ds:0xeb9134fa
  432b18:	pop    esp
  432b19:	fnstenv [edi-0x2b8d19cb]
  432b1f:	outs   dx,BYTE PTR ds:[esi]
  432b20:	sbb    al,0x24
  432b22:	xchg   ebp,eax
  432b23:	test   BYTE PTR ds:0xc098a3a4,al
  432b29:	inc    edx
  432b2a:	aam    0x46
  432b2c:	or     esi,eax
  432b2e:	pop    ss
  432b2f:	es shl al,1
  432b32:	popf   
  432b33:	cmp    eax,DWORD PTR [edx]
  432b35:	sbb    dh,BYTE PTR [eax-0x4cc60cd3]
  432b3b:	jo     0x432b25
  432b3d:	pop    es
  432b3e:	jno    0x432b0e
  432b40:	dec    eax
  432b41:	pop    es
  432b42:	adc    esp,ebp
  432b44:	ret    0x3d74
  432b47:	cdq    
  432b48:	sbb    eax,0x8b4c83af
  432b4d:	ds pop edx
  432b4f:	ja     0x432b75
  432b51:	xchg   ebp,eax
  432b52:	ror    al,0x8c
  432b55:	dec    ebp
  432b56:	sub    BYTE PTR [ebx],dh
  432b58:	sbb    DWORD PTR [esi-0x4ea08574],esp
  432b5e:	test   BYTE PTR [ecx],bh
  432b60:	sbb    dl,BYTE PTR [eax]
  432b62:	mov    ecx,0xe512ef71
  432b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b68:	arpl   sp,si
  432b6a:	mov    ecx,DWORD PTR [ebx+ecx*8-0x1c]
  432b6e:	sbb    BYTE PTR [edi-0x3c],ch
  432b71:	pop    ebx
  432b72:	xor    al,0xb7
  432b74:	pop    esp
  432b75:	sub    dl,BYTE PTR ds:0x9d054d1d
  432b7b:	or     BYTE PTR [esi],ch
  432b7d:	mov    eax,ds:0x4fbc20ab
  432b82:	push   cs
  432b83:	xchg   edi,eax
  432b84:	cwde   
  432b85:	adc    ebx,DWORD PTR [ecx-0x271bf46f]
  432b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b8c:	shr    DWORD PTR [ebp-0x3d],0xb9
  432b90:	ret    0xd36e
  432b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b94:	sub    DWORD PTR [ebx+0x42784501],ecx
  432b9a:	cld    
  432b9b:	pop    edx
  432b9c:	jge    0x432bff
  432b9e:	or     DWORD PTR [eax+ebp*2],eax
  432ba1:	fidiv  WORD PTR [edi+0x34]
  432ba4:	test   eax,0x82f29317
  432ba9:	inc    eax
  432baa:	test   al,0x2b
  432bac:	sub    cl,ah
  432bae:	xchg   edi,eax
  432baf:	in     al,dx
  432bb0:	pop    edx
  432bb1:	cdq    
  432bb2:	inc    ebp
  432bb3:	ret    
  432bb4:	add    bl,BYTE PTR [edi]
  432bb6:	xlat   BYTE PTR ds:[ebx]
  432bb7:	out    dx,al
  432bb8:	sbb    bl,BYTE PTR [ebx-0x39]
  432bbb:	movd   mm6,ebx
  432bbe:	std    
  432bbf:	jmp    0x154d:0x51845ac
  432bc6:	jns    0x432c2a
  432bc8:	pop    ss
  432bc9:	inc    BYTE PTR [ecx-0x1af9b2cc]
  432bcf:	jns    0x432ba8
  432bd1:	pop    DWORD PTR [eax]
  432bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432bd4:	in     al,0xda
  432bd6:	fldenv [ecx-0x7483bfa3]
  432bdc:	xchg   edi,eax
  432bdd:	pop    esp
  432bde:	add    esp,DWORD PTR [edx-0x1f]
  432be1:	clc    
  432be2:	in     eax,dx
  432be3:	(bad)  
  432be4:	imul   ebx,DWORD PTR ds:0x7e41f329,0xaef02a81
  432bee:	popa   
  432bef:	std    
  432bf0:	punpckldq mm3,DWORD PTR [eax-0x20]
  432bf4:	cmp    bh,ch
  432bf6:	mov    edx,0x8ba4dafd
  432bfb:	xchg   edi,eax
  432bfc:	push   ss
  432bfd:	ret    0x679a
  432c00:	push   eax
  432c01:	and    al,al
  432c03:	in     eax,dx
  432c04:	xchg   edi,eax
  432c05:	add    eax,0xa5a4b9c1
  432c0a:	out    dx,al
  432c0b:	out    dx,al
  432c0c:	xor    bh,0x9a
  432c0f:	cmp    al,0xbf
  432c11:	mov    ds:0xb1cae486,al
  432c16:	not    esp
  432c18:	scas   eax,DWORD PTR es:[edi]
  432c19:	xchg   ah,dl
  432c1b:	push   edi
  432c1c:	xlat   BYTE PTR ds:[ebx]
  432c1d:	dec    eax
  432c1e:	jp     0x432c16
  432c20:	shl    BYTE PTR [eax-0x2275064a],0xf5
  432c27:	ret    
  432c28:	call   0xcd70d015
  432c2d:	xchg   ecx,eax
  432c2e:	mov    dl,0x73
  432c30:	ds into 
  432c32:	in     al,0x83
  432c34:	or     al,0x35
  432c36:	in     eax,0x34
  432c38:	in     al,dx
  432c39:	cld    
  432c3a:	pop    sp
  432c3c:	jne    0x432cb0
  432c3e:	xlat   BYTE PTR ds:[ebx]
  432c3f:	sbb    eax,DWORD PTR [esp+edx*8-0x10]
  432c43:	xchg   ebx,eax
  432c44:	sahf   
  432c45:	mov    cl,0x98
  432c47:	pop    edx
  432c48:	fnstenv [edx+0x71a1740c]
  432c4e:	das    
  432c4f:	cli    
  432c50:	cmp    ebp,0x99ef6c8
  432c56:	xor    ebx,0xfffffff6
  432c59:	and    dh,ah
  432c5b:	je     0x432c11
  432c5d:	jmp    FWORD PTR [esi+edx*4-0x3e]
  432c61:	mov    eax,ds:0x457906b0
  432c66:	jmp    0xebd9ac09
  432c6b:	mov    ah,0x17
  432c6d:	dec    esi
  432c6e:	leave  
  432c6f:	test   DWORD PTR [edx+0x16],0xc8ffed8d
  432c76:	add    al,0x7e
  432c78:	daa    
  432c79:	mov    al,ds:0xf36cb95c
  432c7e:	call   0x2d7dc677
  432c83:	push   ebx
  432c84:	pop    ecx
  432c85:	xchg   esi,eax
  432c86:	inc    esi
  432c87:	cmp    al,0xbe
  432c89:	add    al,0x62
  432c8b:	sahf   
  432c8c:	mov    dh,0xf1
  432c8e:	cmp    eax,eax
  432c90:	and    dl,BYTE PTR [edx+ebp*1-0x6ebc32d4]
  432c97:	push   eax
  432c98:	ss mov al,0x64
  432c9b:	nop
  432c9c:	push   ecx
  432c9d:	clc    
  432c9e:	je     0x432c24
  432ca0:	push   cs
  432ca1:	and    cl,BYTE PTR [eax-0x7d9a0d7d]
  432ca7:	mov    dl,0xf5
  432ca9:	sub    DWORD PTR [ebp+0xa],esi
  432cac:	popa   
  432cad:	xchg   DWORD PTR [edx],edx
  432caf:	mov    eax,ds:0x5a6f16b2
  432cb4:	leave  
  432cb5:	sar    DWORD PTR [edx+0x7b],0x70
  432cb9:	test   al,0xe8
  432cbb:	out    dx,al
  432cbc:	(bad)  
  432cbd:	fist   WORD PTR [ebx-0x4f157384]
  432cc3:	mov    DWORD PTR [ebx-0x3a090ac0],ebx
  432cc9:	xchg   WORD PTR [edi+edi*8],bp
  432ccd:	inc    esp
  432cce:	dec    esp
  432ccf:	add    bh,dl
  432cd1:	lea    eax,[ebx]
  432cd3:	mov    edi,0xbc9083
  432cd8:	xor    dl,BYTE PTR [edi-0x5a9ab3a9]
  432cde:	shl    DWORD PTR [edx],cl
  432ce0:	xor    al,0x51
  432ce2:	jle    0x432cd0
  432ce4:	pop    eax
  432ce5:	or     bh,BYTE PTR [ebx]
  432ce7:	pop    edx
  432ce8:	adc    dh,ah
  432cea:	and    al,0xa5
  432cec:	shl    BYTE PTR [ecx+0x9],1
  432cef:	or     BYTE PTR [eax+0x4f],bl
  432cf2:	(bad)  
  432cf3:	fcom   DWORD PTR [eax+0xc]
  432cf6:	shr    dh,cl
  432cf8:	cmp    bl,BYTE PTR [esi+esi*8-0x2]
  432cfc:	push   cs
  432cfd:	aas    
  432cfe:	pop    esp
  432cff:	int    0xc2
  432d01:	adc    ch,BYTE PTR [ebp-0x253b209b]
  432d07:	xor    BYTE PTR [edx],bh
  432d09:	out    dx,eax
  432d0a:	inc    ebx
  432d0b:	in     al,0x79
  432d0d:	cli    
  432d0e:	mov    BYTE PTR [esi],ch
  432d10:	mov    ecx,0xc720030d
  432d15:	or     BYTE PTR [eax],0x76
  432d18:	adc    al,0x5e
  432d1a:	mov    ebp,0x31829c5f
  432d1f:	dec    ecx
  432d20:	std    
  432d21:	ficomp DWORD PTR [eax-0x4a8a8474]
  432d27:	fadd   QWORD PTR [edi+0x73ad2ab1]
  432d2d:	jo     0x432cb7
  432d2f:	xor    eax,0x5a770a48
  432d34:	push   ebx
  432d35:	mov    ebp,0x1a67e9d
  432d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432d3b:	and    BYTE PTR [esi+0x1f],dl
  432d3e:	cmp    eax,0x90566c64
  432d43:	jae    0x432cfe
  432d45:	imul   BYTE PTR [ebp-0x6c02aa8a]
  432d4b:	imul   ebp,DWORD PTR [ebp+0x7a6353d3],0x5377bc4d
  432d55:	dec    esp
  432d56:	push   esi
  432d57:	xchg   ebx,eax
  432d58:	stos   BYTE PTR es:[edi],al
  432d59:	cs jb  0x432daa
  432d5c:	pusha  
  432d5d:	out    0xf1,eax
  432d5f:	pop    es
  432d60:	ficomp WORD PTR [ecx-0x559855b5]
  432d66:	repz mov edi,0x458b8d9f
  432d6c:	lods   al,BYTE PTR ds:[esi]
  432d6d:	sbb    esp,edi
  432d6f:	imul   eax,DWORD PTR [ebp-0x1cd17945],0x4f1bb56f
  432d79:	retf   0x25b6
  432d7c:	in     eax,dx
  432d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432d7e:	pusha  
  432d7f:	inc    eax
  432d80:	inc    eax
  432d81:	mov    ebp,0xfe5a18eb
  432d86:	and    ebp,DWORD PTR [ebx]
  432d88:	ror    DWORD PTR [edx+0x8d8685e],1
  432d8e:	ss (bad) 
  432d90:	int3   
  432d91:	stos   BYTE PTR es:[edi],al
  432d92:	mov    ah,0x7f
  432d94:	rol    DWORD PTR [eax],0x49
  432d97:	lock ret 0x11dd
  432d9b:	inc    ebx
  432d9c:	xchg   ecx,eax
  432d9d:	dec    ebx
  432d9e:	daa    
  432d9f:	sbb    DWORD PTR [esi],0x763c8735
  432da5:	icebp  
  432da6:	mov    eax,0x9065a89d
  432dab:	bnd ret 0xb78c
  432daf:	jl     0x432dcf
  432db1:	fisttp WORD PTR [ebx+esi*8-0x16ba1fad]
  432db8:	lahf   
  432db9:	add    al,0x3c
  432dbb:	add    cl,BYTE PTR [ecx]
  432dbd:	out    0xfe,eax
  432dbf:	bt     DWORD PTR [edx+0x275b5781],esp
  432dc6:	add    ecx,DWORD PTR [ecx+0x61]
  432dc9:	test   eax,0xd5782d06
  432dce:	mov    dl,0x60
  432dd0:	push   ss
  432dd1:	push   ebp
  432dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432dd3:	dec    edi
  432dd4:	adc    DWORD PTR [edi-0x47],eax
  432dd7:	jmp    FWORD PTR [edi+0x67bc95b2]
  432ddd:	add    DWORD PTR ds:0xd5c1a665,esi
  432de3:	sub    bh,BYTE PTR fs:[ebx-0x1d467835]
  432dea:	lahf   
  432deb:	repz adc DWORD PTR [edi+0x154e255c],eax
  432df2:	fs popa 
  432df4:	sar    DWORD PTR [edx+eiz*4+0xc],cl
  432df8:	sbb    eax,0x4dabc64b
  432dfd:	into   
  432dfe:	mov    cl,0xb5
  432e00:	sahf   
  432e01:	mov    dh,BYTE PTR [ebx]
  432e03:	xor    eax,0x5d49bf4a
  432e08:	dec    eax
  432e09:	mov    bh,0x6b
  432e0b:	ins    BYTE PTR es:[edi],dx
  432e0c:	or     eax,0x4fcba38a
  432e11:	dec    ebx
  432e12:	mov    cl,0xf2
  432e14:	adc    esp,DWORD PTR ds:0x6144b625
  432e1a:	sbb    ah,BYTE PTR [eax+eax*4-0x2da70d2d]
  432e21:	bswap  edi
  432e23:	push   edx
  432e24:	mov    ebx,0xd3ae9eed
  432e29:	das    
  432e2a:	xor    cl,BYTE PTR [edi]
  432e2c:	popa   
  432e2d:	mov    eax,ds:0xbef7938a
  432e32:	rcl    DWORD PTR [edi-0x5b],1
  432e35:	xchg   ecx,eax
  432e36:	sbb    cl,BYTE PTR [esi+edi*2+0x626faf66]
  432e3d:	test   DWORD PTR [edi+0x18],edi
  432e40:	call   0xb1b3:0x9e5a1544
  432e47:	add    eax,0x8b4a7d52
  432e4c:	push   esi
  432e4d:	(bad)  
  432e4e:	adc    al,0xc0
  432e50:	test   al,0xa1
  432e52:	cdq    
  432e53:	jbe    0x432dfb
  432e55:	or     bh,BYTE PTR [edx-0x40f0259f]
  432e5b:	inc    ecx
  432e5c:	js     0x432ec6
  432e5e:	dec    eax
  432e5f:	stos   DWORD PTR es:[edi],eax
  432e60:	mov    cl,ah
  432e62:	lods   eax,DWORD PTR ds:[esi]
  432e63:	call   0x1093d2f6
  432e68:	mov    DWORD PTR [edi],edi
  432e6a:	shl    DWORD PTR [eax],0xb2
  432e6d:	mov    bh,0x56
  432e6f:	mov    ecx,0x682812bc
  432e74:	cdq    
  432e75:	stc    
  432e76:	dec    ebx
  432e77:	das    
  432e78:	es push ds
  432e7a:	stos   BYTE PTR es:[edi],al
  432e7b:	bound  edi,QWORD PTR [ebx-0x5793f8dc]
  432e81:	push   esp
  432e82:	bound  edx,QWORD PTR [edx]
  432e84:	mov    dh,BYTE PTR [eax-0x2b689568]
  432e8a:	vdivps ymm7,ymm6,YMMWORD PTR [edx+ebx*4-0x1d]
  432e90:	cmp    al,BYTE PTR [eax-0x29d1e8f5]
  432e96:	sbb    al,0x87
  432e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e99:	cmp    ah,BYTE PTR [esi+0x7b393c25]
  432e9f:	and    eax,0xa9e2bfd9
  432ea4:	xor    DWORD PTR [edi+0x35124bbe],edx
  432eaa:	xor    ebp,edx
  432eac:	add    al,0x18
  432eae:	mov    ds:0xa27a14aa,al
  432eb3:	fisttp QWORD PTR [eax]
  432eb5:	test   al,ah
  432eb7:	push   esp
  432eb8:	mov    esp,0xcaf68f55
  432ebd:	mov    ah,0xd0
  432ebf:	mov    esp,0x9b8f793b
  432ec4:	pop    ebp
  432ec5:	mov    ecx,0x3705cc54
  432eca:	pop    edx
  432ecb:	int3   
  432ecc:	inc    ecx
  432ecd:	aam    0x31
  432ecf:	iret   
  432ed0:	sahf   
  432ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432ed2:	sbb    al,0x77
  432ed4:	push   cs
  432ed5:	test   BYTE PTR [esi-0xfb5e929],bh
  432edb:	lahf   
  432edc:	pop    ebx
  432edd:	mov    ds:0x1ed658a2,eax
  432ee2:	inc    edx
  432ee3:	add    eax,0xecf24ca4
  432ee8:	inc    ebp
  432ee9:	xlat   BYTE PTR ds:[ebx]
  432eea:	and    al,0xcf
  432eec:	cwde   
  432eed:	add    al,0xc
  432eef:	(bad)  
  432ef0:	out    0xe4,eax
  432ef2:	addr16 or al,bh
  432ef5:	scas   eax,DWORD PTR es:[edi]
  432ef6:	xor    dh,0xc
  432ef9:	imul   esp,DWORD PTR [edi],0x3125370c
  432eff:	out    dx,al
  432f00:	(bad)  
  432f01:	jnp    0x432f25
  432f03:	cwde   
  432f04:	and    BYTE PTR [esi-0x857a89f],ah
  432f0a:	jmp    0x2326673b
  432f0f:	in     al,0xf6
  432f11:	stos   BYTE PTR es:[edi],al
  432f12:	and    DWORD PTR [ebp+0x57],eax
  432f15:	jbe    0x432f75
  432f17:	push   es
  432f18:	outs   dx,DWORD PTR ds:[esi]
  432f19:	out    dx,al
  432f1a:	adc    DWORD PTR [esi+0x7bd88ea8],ebx
  432f20:	and    esp,DWORD PTR [edi]
  432f22:	es ja  0x432ec5
  432f25:	rcr    BYTE PTR [esi-0x21],0x96
  432f29:	imul   edx,DWORD PTR [esi],0x34699a04
  432f2f:	sbb    al,0xe0
  432f31:	cwde   
  432f32:	jo     0x432f99
  432f34:	xchg   ebp,eax
  432f35:	push   esp
  432f36:	sbb    DWORD PTR [esi],0xf7290ece
  432f3c:	repnz mov esp,0x4b07685
  432f42:	pop    ds
  432f43:	pop    edi
  432f44:	rcr    DWORD PTR [esi+0xb45ea8b],cl
  432f4a:	aaa    
  432f4b:	scas   eax,DWORD PTR es:[edi]
  432f4c:	add    al,0x98
  432f4e:	jb     0x432f2e
  432f50:	fisubr DWORD PTR [ebx+0x512231a4]
  432f56:	xor    BYTE PTR [edi-0x7e2dc282],ah
  432f5c:	sub    al,BYTE PTR [edx]
  432f5e:	jmp    0xf0b5:0x94df7e20
  432f65:	dec    eax
  432f66:	std    
  432f67:	out    0x6e,al
  432f69:	imul   edx,DWORD PTR [esi-0x3d],0xffffffad
  432f6d:	push   0xffffffe3
  432f6f:	fimul  DWORD PTR [edx+edi*4+0x42936724]
  432f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432f77:	add    ebp,esp
  432f79:	addr16 out 0x77,al
  432f7c:	lea    edx,[esi+0x59]
  432f7f:	clc    
  432f80:	adc    edx,DWORD PTR [edi]
  432f82:	jae    0x432ff6
  432f84:	cmp    BYTE PTR ds:0x13e9a0dd,ah
  432f8a:	mov    ds:0x629b3079,eax
  432f8f:	mov    bh,0xda
  432f91:	out    0xb4,al
  432f93:	jae    0x432f54
  432f95:	dec    ebp
  432f96:	pop    es
  432f97:	add    bh,BYTE PTR [ebp-0x1b]
  432f9a:	and    al,0xcd
  432f9c:	inc    ecx
  432f9d:	and    al,dl
  432f9f:	in     al,dx
  432fa0:	sbb    dh,ch
  432fa2:	adc    BYTE PTR [ecx+0x39],dh
  432fa5:	dec    edi
  432fa6:	push   esi
  432fa7:	rcl    esp,0x4e
  432faa:	mov    ecx,0x60a0359
  432faf:	add    al,0xb0
  432fb1:	(bad)  
  432fb2:	out    0x35,al
  432fb4:	aaa    
  432fb5:	and    DWORD PTR ds:0xeba12cef,ecx
  432fbb:	mov    ebp,DWORD PTR [ebp-0x5f]
  432fbe:	push   edi
  432fbf:	xor    eax,0x6a8b4062
  432fc4:	in     eax,dx
  432fc5:	mov    ebp,0x5ac5c561
  432fca:	sub    al,BYTE PTR [eax+0x49a9d774]
  432fd0:	xor    dh,BYTE PTR [esi+0x3cde2a20]
  432fd6:	pop    ds
  432fd7:	repz xchg esp,eax
  432fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432fda:	jns    0x432f5d
  432fdc:	fdiv   QWORD PTR [eax]
  432fde:	adc    al,0x3e
  432fe0:	mov    eax,0x15c154ec
  432fe5:	mov    ebp,0x888b68f7
  432fea:	iret   
  432feb:	mov    ah,0x9b
  432fed:	jns    0x433036
  432fef:	add    edi,DWORD PTR [edi+0x6a]
  432ff2:	xor    al,0xc0
  432ff4:	cmp    al,0xf2
  432ff6:	mov    ch,0xca
  432ff8:	inc    esi
  432ff9:	inc    esp
  432ffa:	in     al,0x88
  432ffc:	out    dx,eax
  432ffd:	mov    gs,WORD PTR [ecx-0x19]
  433000:	push   ebx
  433001:	push   edi
  433002:	pop    edi
  433003:	mov    ecx,0xdcc90171
  433008:	pop    es
  433009:	dec    ecx
  43300a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43300b:	and    al,0x57
  43300d:	outs   dx,BYTE PTR ds:[esi]
  43300e:	or     BYTE PTR [esi-0x1634c84d],bh
  433014:	xchg   ecx,eax
  433015:	test   al,0x3e
  433017:	adc    al,0x25
  433019:	pusha  
  43301a:	push   esp
  43301b:	pop    esi
  43301c:	push   0xffffff9c
  43301e:	test   DWORD PTR [ecx-0x47],esi
  433021:	dec    edx
  433022:	xor    DWORD PTR [eax],eax
  433024:	dec    ebx
  433025:	dec    ecx
  433026:	xor    eax,0x673531d0
  43302b:	jnp    0x4330a8
  43302d:	into   
  43302e:	pushf  
  43302f:	lods   eax,DWORD PTR ds:[esi]
  433030:	cs daa 
  433032:	adc    al,0xf7
  433034:	(bad)  
  433035:	ins    BYTE PTR es:[edi],dx
  433036:	(bad)  
  433037:	cmp    BYTE PTR ds:0xe4a63371,ch
  43303d:	arpl   WORD PTR [edx+ebx*1+0x17a084ab],si
  433044:	lods   eax,DWORD PTR ds:[esi]
  433045:	cmp    ah,0x71
  433048:	or     edi,ebx
  43304a:	ret    
  43304b:	(bad)  
  43304c:	mov    esi,0x621766c0
  433051:	cmp    dh,BYTE PTR [ebp+0x408b2f42]
  433057:	div    BYTE PTR [esp+ebx*4+0x21c0c47b]
  43305e:	xor    al,0xf8
  433060:	test   al,0xe4
  433062:	jnp    0x4330d8
  433064:	(bad)  
  433066:	push   0xffffffa1
  433068:	scas   eax,DWORD PTR es:[edi]
  433069:	lods   eax,DWORD PTR ds:[esi]
  43306a:	cmp    bl,BYTE PTR [ebx+0xecc29df]
  433070:	shl    DWORD PTR ds:0x2f97b45e,cl
  433076:	(bad)  
  433078:	adc    al,0x7d
  43307a:	int3   
  43307b:	in     eax,0xde
  43307d:	test   ebp,0x6e49003a
  433083:	icebp  
  433084:	test   BYTE PTR [ebp+0xe68fae3],bh
  43308a:	cmc    
  43308b:	push   esi
  43308c:	aam    0xc9
  43308e:	fs xor ch,ch
  433091:	mov    WORD PTR [ebp-0x5060cc81],ds
  433097:	add    DWORD PTR [ecx+edx*8+0x16],esp
  43309b:	sbb    eax,0x6e194c47
  4330a0:	sub    eax,0xf369f4d1
  4330a5:	ins    DWORD PTR es:[edi],dx
  4330a6:	ins    BYTE PTR es:[edi],dx
  4330a7:	and    al,0x84
  4330a9:	adc    eax,0xc535e4fa
  4330ae:	rol    BYTE PTR [edx+0x58],0x5c
  4330b2:	out    dx,eax
  4330b3:	inc    edi
  4330b4:	fstp   DWORD PTR [esi]
  4330b6:	push   cs
  4330b7:	ja     0x433042
  4330b9:	les    edi,FWORD PTR [edx]
  4330bb:	aaa    
  4330bc:	hlt    
  4330bd:	imul   ecx
  4330bf:	pop    edi
  4330c0:	cli    
  4330c1:	loop   0x43311f
  4330c3:	jno    0x4330e5
  4330c5:	fist   WORD PTR [ebx+0x1b75a240]
  4330cb:	mov    esp,0x334fc4b6
  4330d0:	out    dx,al
  4330d1:	out    0x25,eax
  4330d3:	mov    ch,0xa7
  4330d5:	inc    edi
  4330d6:	out    dx,eax
  4330d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4330d8:	or     ah,BYTE PTR [ebx+esi*2+0x56fb9f4d]
  4330df:	outs   dx,BYTE PTR ds:[esi]
  4330e0:	xchg   edx,eax
  4330e1:	loop   0x433073
  4330e3:	call   0x8cb9fd4e
  4330e8:	inc    esp
  4330e9:	fstp   DWORD PTR [edi-0x68]
  4330ec:	ret    0xda0d
  4330ef:	inc    ebp
  4330f0:	mov    ch,0xd
  4330f2:	stos   DWORD PTR es:[edi],eax
  4330f3:	cmp    al,0x9f
  4330f5:	and    BYTE PTR [edx],ch
  4330f7:	out    0x47,eax
  4330f9:	add    dh,BYTE PTR [eax+0x63]
  4330fc:	jb     0x433127
  4330fe:	dec    ecx
  4330ff:	mov    BYTE PTR [eax+0x7],0xf2
  433103:	xor    eax,0x218c4d06
  433108:	jp     0x43316a
  43310a:	popa   
  43310b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43310c:	xchg   esi,eax
  43310d:	xchg   esi,eax
  43310e:	pop    ecx
  43310f:	add    eax,0x67c41a2b
  433114:	push   ecx
  433115:	xchg   ebx,eax
  433116:	imul   ecx,DWORD PTR [ecx],0xdcc1f1cc
  43311c:	lea    esi,[eax+0x20612dcb]
  433122:	(bad)  
  433124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433125:	call   ebp
  433127:	scas   al,BYTE PTR es:[edi]
  433128:	lea    ebx,[edx]
  43312a:	cdq    
  43312b:	push   esi
  43312c:	xor    DWORD PTR [eax+edx*2],ecx
  43312f:	jbe    0x4330cf
  433131:	pusha  
  433132:	call   0x6992:0xe1ba6039
  433139:	nop
  43313a:	mov    DWORD PTR [eax-0x76],esi
  43313d:	fild   WORD PTR [ebx-0x5a6c78f5]
  433143:	leave  
  433144:	sub    eax,edi
  433146:	mov    edx,0x6edf9238
  43314b:	gs dec edx
  43314d:	in     al,0xc6
  43314f:	adc    BYTE PTR [eax+ebx*1-0x19],bl
  433153:	mov    dh,0x3a
  433155:	aaa    
  433156:	int    0x9b
  433158:	and    DWORD PTR [esi],ebx
  43315a:	and    al,0xf6
  43315c:	pusha  
  43315d:	xor    eax,0x4c627ee3
  433162:	sub    bh,BYTE PTR [esi]
  433164:	out    dx,eax
  433165:	(bad)  
  433166:	ins    DWORD PTR es:[edi],dx
  433167:	out    dx,eax
  433168:	imul   edi,DWORD PTR [edx],0xffffffd4
  43316b:	sub    edx,edi
  43316d:	mul    ebx
  43316f:	aas    
  433170:	cmp    al,0xd0
  433172:	in     eax,0x7f
  433174:	jmp    0x433108
  433176:	dec    ecx
  433177:	scas   eax,DWORD PTR es:[edi]
  433178:	push   esp
  433179:	clc    
  43317a:	mov    dh,0x4c
  43317c:	mov    esp,0xf0aa3fae
  433181:	in     eax,0x4e
  433183:	adc    al,0x1f
  433185:	cmp    al,0x78
  433187:	cmc    
  433188:	imul   ebx
  43318a:	xchg   edx,eax
  43318b:	sub    BYTE PTR [ebp+0x5534db71],al
  433191:	mov    ebp,0x4fb11596
  433196:	out    0x61,eax
  433198:	or     BYTE PTR [ebx+0x28c2eaba],0x6
  43319f:	push   esi
  4331a0:	add    eax,0xf3846c97
  4331a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4331a6:	mov    ecx,0xb82595ba
  4331ab:	fs (bad) 
  4331ad:	xchg   ecx,eax
  4331ae:	and    eax,0x6b651b5b
  4331b3:	sub    eax,0xfa152b4f
  4331b8:	sub    eax,0x75bd7288
  4331bd:	pusha  
  4331be:	dec    ebx
  4331bf:	push   edx
  4331c0:	mov    ebx,0xeb511103
  4331c5:	jno    0x4331b3
  4331c7:	inc    ecx
  4331c8:	add    dl,BYTE PTR [ebx]
  4331ca:	fs out dx,eax
  4331cc:	adc    DWORD PTR [edx+0x3f56d63f],0x81a9c4a
  4331d6:	hlt    
  4331d7:	and    edx,DWORD PTR [ebx+0x48af2200]
  4331dd:	hlt    
  4331de:	mov    al,al
  4331e0:	les    eax,FWORD PTR [esi+0x1286167f]
  4331e6:	mov    edi,0x99ec7370
  4331eb:	dec    ebx
  4331ec:	cld    
  4331ed:	xlat   BYTE PTR ds:[ebx]
  4331ee:	xchg   edx,eax
  4331ef:	and    esp,DWORD PTR [eax*2-0xabe39a2]
  4331f6:	int3   
  4331f7:	nop
  4331f8:	fbld   TBYTE PTR [eax-0x2e9ae4f1]
  4331fe:	push   ss
  4331ff:	cmc    
  433200:	jns    0x433263
  433202:	loope  0x433261
  433204:	lods   eax,DWORD PTR ds:[esi]
  433205:	add    dl,BYTE PTR [ebx]
  433207:	inc    BYTE PTR [eax+0x6]
  43320a:	dec    ebx
  43320b:	enter  0x9a0a,0x67
  43320f:	dec    esi
  433210:	push   ebp
  433211:	loope  0x43320e
  433213:	mov    bl,0x2b
  433215:	xor    BYTE PTR [edi],bl
  433217:	sbb    eax,0xf4ddaae3
  43321c:	rcr    BYTE PTR [ecx-0x2a],1
  43321f:	sub    ecx,DWORD PTR [edx]
  433221:	arpl   WORD PTR [edx+0x29],bp
  433224:	dec    ecx
  433225:	xor    DWORD PTR [esi-0x26],eax
  433228:	fdiv   QWORD PTR [ebx-0x6a]
  43322b:	adc    dh,BYTE PTR [ebx-0x28]
  43322e:	fmul   st,st(6)
  433230:	retf   0xd28b
  433233:	shl    BYTE PTR [eax+0x7f],cl
  433236:	mov    edi,0x3e34040f
  43323b:	(bad)  [ecx+0x224f678e]
  433241:	and    BYTE PTR [ebx],bl
  433243:	push   0x31daa88b
  433248:	inc    ecx
  433249:	scas   eax,DWORD PTR es:[edi]
  43324a:	mov    WORD PTR [esi-0x54aefb26],ss
  433250:	mov    ebx,ebp
  433252:	xor    al,0xf7
  433254:	in     eax,0x68
  433256:	(bad)  
  433257:	loopne 0x4331ee
  433259:	fimul  WORD PTR [ebx-0x330b386b]
  43325f:	(bad)  
  433260:	dec    ebx
  433261:	add    bl,bl
  433263:	cld    
  433264:	js     0x4332d4
  433266:	cdq    
  433267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433268:	jmp    0x8f57:0x7664a204
  43326f:	(bad)  
  433270:	(bad)  
  433271:	xor    edi,DWORD PTR [edx-0x62]
  433274:	and    al,0xb7
  433276:	or     al,ch
  433278:	or     al,al
  43327a:	stos   BYTE PTR es:[edi],al
  43327b:	and    eax,0x8bfec50f
  433280:	mov    bl,0x91
  433282:	push   edi
  433283:	dec    ecx
  433284:	xor    al,BYTE PTR [edi+eax*4]
  433287:	call   FWORD PTR [ebx-0x16518c2b]
  43328d:	and    BYTE PTR [ecx],dl
  43328f:	sub    edi,0x2a149cc1
  433295:	stc    
  433296:	add    ecx,edx
  433298:	add    al,0x5d
  43329a:	je     0x433296
  43329c:	mov    al,ds:0x9b9a400f
  4332a1:	ins    DWORD PTR es:[edi],dx
  4332a2:	inc    ebp
  4332a3:	mov    BYTE PTR [edi+0x2696d3c7],al
  4332a9:	arpl   WORD PTR [edx+edx*2+0x3deebf37],di
  4332b0:	ret    0x5769
  4332b3:	xchg   esi,eax
  4332b4:	sar    DWORD PTR [esi-0x1763ef95],1
  4332ba:	or     BYTE PTR [esi],ah
  4332bc:	pushf  
  4332bd:	and    dl,BYTE PTR ds:0xb47ef175
  4332c3:	test   al,0x47
  4332c5:	aaa    
  4332c6:	jbe    0x433254
  4332c8:	cmp    ch,cl
  4332ca:	xor    ah,BYTE PTR [eax+eiz*4]
  4332cd:	int    0x12
  4332cf:	push   ss
  4332d0:	xchg   ebp,eax
  4332d1:	or     DWORD PTR [ebx],ecx
  4332d3:	mov    DWORD PTR [ebx+0x2b],eax
  4332d6:	call   0xa3fb:0xaba29e1e
  4332dd:	shr    bh,1
  4332df:	(bad)  
  4332e0:	stc    
  4332e1:	ins    BYTE PTR es:[edi],dx
  4332e2:	push   ss
  4332e3:	shl    dl,0x44
  4332e6:	sbb    eax,0x59ad2d5
  4332eb:	call   DWORD PTR ds:0xeaf3a92b
  4332f1:	lds    edx,FWORD PTR [esi]
  4332f3:	inc    ebx
  4332f4:	jb     0x4332b8
  4332f6:	scas   al,BYTE PTR es:[edi]
  4332f7:	dec    ebp
  4332f8:	lea    ebx,[eax-0x13]
  4332fb:	aas    
  4332fc:	jmp    0x73048fff
  433301:	inc    ebp
  433302:	or     esp,esi
  433304:	dec    eax
  433305:	sahf   
  433306:	in     eax,dx
  433307:	lds    edi,FWORD PTR [ecx-0x9]
  43330a:	mov    dl,0x4
  43330c:	add    dh,BYTE PTR [eax]
  43330e:	dec    ebp
  43330f:	cld    
  433310:	pop    es
  433311:	pop    es
  433312:	add    DWORD PTR [edi+edx*2],eax
  433315:	es loop 0x4332fe
  433318:	add    BYTE PTR [edx],al
  43331a:	in     eax,dx
  43331b:	sti    
  43331c:	repnz inc ecx
  43331e:	and    cl,al
  433320:	sub    DWORD PTR [ebx+0x1a],eax
  433323:	inc    ebp
  433324:	add    al,0xea
  433326:	shl    DWORD PTR [ebx+0xc6007a7],0xf
  43332d:	push   esi
  43332e:	cmp    al,0xe4
  433330:	mov    ebp,DWORD PTR [ebp-0xa208c7c]
  433336:	and    eax,0xd255132a
  43333b:	push   es
  43333c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43333e:	and    eax,0xcc41dde5
  433343:	xchg   edx,eax
  433344:	dec    ebx
  433345:	jp     0x4332c9
  433347:	jg     0x433339
  433349:	sub    al,BYTE PTR [ecx-0x6aec55bc]
  43334f:	mov    ecx,DWORD PTR [esi]
  433351:	fld    TBYTE PTR [edi+0x71603bbd]
  433357:	mov    ecx,0xda0f8f20
  43335c:	push   cs
  43335d:	es in  al,0xe9
  433360:	es xchg esi,eax
  433362:	jb     0x4332f8
  433364:	cmp    eax,0x341bf335
  433369:	call   0x76b31914
  43336e:	push   cs
  43336f:	push   ebx
  433370:	aad    0x3b
  433372:	mov    ch,0x84
  433374:	jno    0x43331f
  433376:	mov    BYTE PTR [ebp+0x66],bh
  433379:	stos   BYTE PTR es:[edi],al
  43337a:	xchg   ebx,eax
  43337b:	repz rol BYTE PTR [ebx-0x53],1
  43337f:	(bad)  
  433380:	clc    
  433381:	out    dx,eax
  433382:	call   0x27e9b852
  433387:	add    al,0x9a
  433389:	lock mov dl,BYTE PTR ds:0xcaa03713
  433390:	sbb    al,bh
  433392:	pop    esi
  433393:	mov    al,ds:0xdaf33206
  433398:	xchg   DWORD PTR [edi-0x77],ebx
  43339b:	or     edx,DWORD PTR [eax+ecx*1-0x7e]
  43339f:	and    esp,DWORD PTR [ecx+0x1e]
  4333a2:	scas   al,BYTE PTR es:[edi]
  4333a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4333a4:	inc    ebx
  4333a5:	lods   eax,DWORD PTR ds:[esi]
  4333a6:	lock ret 
  4333a8:	repz loope 0x4333fe
  4333ab:	inc    edi
  4333ac:	aas    
  4333ad:	(bad)  
  4333ae:	pop    ss
  4333af:	retf   0x2bd0
  4333b2:	dec    eax
  4333b3:	pop    esp
  4333b4:	int3   
  4333b5:	inc    ecx
  4333b6:	adc    esp,0x71239d6e
  4333bc:	cmp    BYTE PTR [edi-0x7b371a39],bh
  4333c2:	call   0xd196e7c5
  4333c7:	mov    dh,0xbd
  4333c9:	or     eax,0xf6148f2c
  4333ce:	inc    ecx
  4333cf:	xor    al,0x31
  4333d1:	clc    
  4333d2:	rcr    ebx,0x56
  4333d5:	adc    bl,BYTE PTR [esi+0x5c]
  4333d8:	fnstenv ds:[edi]
  4333db:	pop    esi
  4333dc:	inc    ecx
  4333dd:	enter  0x8b55,0x19
  4333e1:	xchg   esp,eax
  4333e2:	sar    BYTE PTR ss:[edx-0x52],cl
  4333e6:	or     DWORD PTR [eax+eax*8+0x15],ebx
  4333ea:	cwd    
  4333ec:	mov    edi,0xf4d1620b
  4333f1:	int    0x92
  4333f3:	iret   
  4333f4:	int    0xea
  4333f6:	cmp    edi,DWORD PTR [esi+ecx*8-0xe4dd687]
  4333fd:	ficomp WORD PTR [ecx]
  4333ff:	ret    
  433400:	dec    ecx
  433401:	push   ss
  433402:	out    dx,al
  433403:	test   eax,0x7f359767
  433408:	cs sbb al,0x28
  43340b:	outs   dx,DWORD PTR ds:[esi]
  43340c:	xchg   esp,eax
  43340d:	loop   0x433390
  43340f:	sub    eax,ecx
  433411:	add    eax,0x98f09bba
  433416:	dec    ecx
  433417:	sbb    bl,BYTE PTR [ebp+0x41423659]
  43341d:	xchg   BYTE PTR [edx-0x21df8f4c],dl
  433423:	sub    BYTE PTR [ebx+0x3021bb55],cl
  433429:	loop   0x433449
  43342b:	pop    ecx
  43342c:	out    0x41,eax
  43342e:	jge    0x43348d
  433430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433431:	in     al,dx
  433432:	ficom  DWORD PTR [ecx]
  433434:	pop    ecx
  433435:	lods   eax,DWORD PTR ds:[esi]
  433436:	outs   dx,DWORD PTR ds:[esi]
  433437:	inc    ebx
  433438:	pop    es
  433439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43343a:	test   DWORD PTR [edi+0x4f],eax
  43343d:	shl    BYTE PTR [ebp-0x798234a9],cl
  433443:	daa    
  433444:	jge    0x433464
  433446:	sbb    eax,0xa8e757c8
  43344b:	stos   DWORD PTR es:[edi],eax
  43344c:	pushf  
  43344d:	xor    dh,BYTE PTR [ebx+0x6533b5e0]
  433453:	jge    0x433423
  433455:	fsub   DWORD PTR [edx-0x792d2007]
  43345b:	sbb    BYTE PTR [ecx+0x1b],ch
  43345e:	adc    eax,0x3d2e6bd6
  433463:	popf   
  433464:	pop    DWORD PTR [ecx]
  433466:	cmp    DWORD PTR [esi],ebp
  433468:	or     DWORD PTR [esi+0x4f27e4a6],esi
  43346e:	xor    esi,0x5a
  433471:	dec    edi
  433472:	xchg   esi,eax
  433473:	add    dh,ah
  433475:	clc    
  433476:	add    DWORD PTR [eax+0x25],edx
  433479:	rol    DWORD PTR [ecx-0x59d49129],1
  43347f:	lahf   
  433480:	hlt    
  433481:	sar    BYTE PTR [edi+0x9a9c46b],cl
  433487:	mov    cl,ah
  433489:	(bad)  
  43348a:	jno    0x4334aa
  43348c:	clc    
  43348d:	les    ecx,FWORD PTR [ebx]
  43348f:	mov    WORD PTR [esi],fs
  433491:	mov    cl,al
  433493:	pop    esi
  433494:	call   0xa95a:0x29f3dd26
  43349b:	sub    al,0x80
  43349d:	fs pop esi
  43349f:	mov    dh,0x42
  4334a1:	jmp    0x758175b5
  4334a6:	enter  0xcbea,0xf
  4334aa:	pushf  
  4334ab:	jp     0x4334d7
  4334ad:	call   0x2781:0x29f3d1c9
  4334b4:	push   cs
  4334b5:	cmp    eax,0xac0b4dd
  4334ba:	out    dx,al
  4334bb:	push   esi
  4334bc:	push   esp
  4334bd:	fbld   TBYTE PTR [esi+0x60aebea5]
  4334c3:	ret    0xec6c
  4334c6:	daa    
  4334c7:	mov    esi,DWORD PTR [esi-0x2a]
  4334ca:	ss inc esp
  4334cc:	xor    esp,edi
  4334ce:	enter  0xcaf4,0x6c
  4334d2:	or     edi,DWORD PTR [ebx-0xd]
  4334d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4334d6:	rcl    al,cl
  4334d8:	xor    eax,0xf01b027a
  4334dd:	push   ss
  4334de:	add    dh,BYTE PTR [esi-0x1d]
  4334e1:	push   0xbfc579b9
  4334e6:	and    ebp,DWORD PTR [ecx]
  4334e8:	popa   
  4334e9:	mov    bl,0x8c
  4334eb:	sqrtps xmm4,XMMWORD PTR [edi-0x4e0a5947]
  4334f2:	sbb    al,0xb6
  4334f4:	cmc    
  4334f5:	xchg   esp,eax
  4334f6:	pop    eax
  4334f7:	cwde   
  4334f8:	cmp    al,0xbf
  4334fa:	enter  0xf768,0x4a
  4334fe:	jno    0x43351c
  433500:	hlt    
  433501:	xor    DWORD PTR [ecx],ecx
  433503:	add    eax,0x2c9d68e0
  433508:	sar    DWORD PTR [ecx],0x34
  43350b:	jecxz  0x433572
  43350d:	mov    ds:0x75b87623,al
  433512:	(bad)  
  433513:	xor    eax,0x68dc9eed
  433518:	shr    DWORD PTR [ecx+0x59f7c2b7],1
  43351e:	mov    bl,0x9e
  433520:	pop    edi
  433521:	push   ecx
  433522:	(bad)  
  433525:	pop    esi
  433526:	cli    
  433527:	jbe    0x433543
  433529:	inc    esi
  43352a:	idiv   ch
  43352c:	ds pushf 
  43352e:	push   esi
  43352f:	dec    ebx
  433530:	fstp   QWORD PTR [ecx]
  433532:	(bad)  
  433533:	mov    esi,0x220204cd
  433538:	push   edi
  433539:	or     ebx,esi
  43353b:	dec    esp
  43353c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43353d:	inc    ecx
  43353e:	sbb    bl,ah
  433540:	jge    0x4335a6
  433542:	je     0x4334cf
  433544:	aam    0xf8
  433546:	mov    esi,0xc946a328
  43354b:	fwait
  43354c:	inc    edi
  43354d:	cmp    eax,0x6a6d1839
  433552:	jmp    0x4ab2b42c
  433557:	push   ecx
  433558:	adc    dl,BYTE PTR [edi]
  43355a:	imul   ecx,DWORD PTR [edx],0xffffffe2
  43355d:	xchg   ebx,eax
  43355e:	pop    ds
  43355f:	rcl    DWORD PTR ds:[edx+0x3cddaed6],0x9c
  433567:	repz xchg esp,eax
  433569:	xor    dh,BYTE PTR [eax+0x3a141d5]
  43356f:	mov    ah,0xf1
  433571:	sar    BYTE PTR [ebp-0x57e9ff31],1
  433577:	daa    
  433578:	or     BYTE PTR [ecx-0x6cc0cd9c],bl
  43357e:	int    0x4
  433580:	inc    ebp
  433581:	cmp    BYTE PTR [edi+0x4a],ah
  433584:	(bad)  
  433585:	(bad)  
  433586:	adc    cl,BYTE PTR [ebx]
  433588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433589:	pop    ebp
  43358a:	bound  eax,QWORD PTR [edi-0x2fc05ba8]
  433590:	mov    bh,0x1c
  433592:	popf   
  433593:	cmc    
  433594:	and    ecx,DWORD PTR [ebx+0x2d70a3f0]
  43359a:	jecxz  0x433576
  43359c:	in     eax,0x5d
  43359e:	in     al,0x30
  4335a0:	retf   
  4335a1:	(bad)  
  4335a2:	fsub   DWORD PTR [edi+0x7b]
  4335a5:	outs   dx,DWORD PTR ds:[esi]
  4335a6:	dec    edi
  4335a7:	push   edi
  4335a8:	sbb    eax,0xdb541d72
  4335ad:	cmp    ecx,esi
  4335af:	in     al,dx
  4335b0:	sbb    edx,DWORD PTR cs:[ebp-0x3e]
  4335b4:	stos   DWORD PTR es:[edi],eax
  4335b5:	pop    es
  4335b6:	pop    ss
  4335b7:	adc    eax,0xd8ec4080
  4335bc:	jae    0x433631
  4335be:	js     0x433587
  4335c0:	pop    ecx
  4335c1:	out    dx,eax
  4335c2:	into   
  4335c3:	pop    eax
  4335c4:	es dec esi
  4335c6:	cmp    al,BYTE PTR [eax+eiz*1+0x50]
  4335ca:	inc    ecx
  4335cb:	xchg   edi,eax
  4335cc:	pop    esi
  4335cd:	adc    al,0x77
  4335cf:	(bad)  
  4335d0:	jmp    0x4335ab
  4335d2:	fild   QWORD PTR [eax-0x35]
  4335d5:	lahf   
  4335d6:	add    al,0x8b
  4335d8:	jmp    0x433605
  4335da:	mov    DWORD PTR [ecx-0x3c],edi
  4335dd:	rcr    eax,1
  4335df:	and    BYTE PTR [ebp-0x67],dh
  4335e2:	rol    DWORD PTR [ecx-0x7c799640],cl
  4335e8:	and    ch,BYTE PTR [ebp-0x6e91f338]
  4335ee:	push   ds
  4335ef:	mov    edi,0xf54c1476
  4335f4:	mov    dl,0xd3
  4335f6:	mov    al,ss:0xe69867dd
  4335fc:	jmp    FWORD PTR [esi+edx*2-0x3e875272]
  433603:	pop    esi
  433604:	jae    0x43358e
  433606:	jnp    0x433629
  433608:	or     ah,BYTE PTR [edx]
  43360a:	lds    eax,FWORD PTR [edx]
  43360c:	cli    
  43360d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43360e:	mov    ch,0x94
  433610:	mov    esi,0x101db9d3
  433615:	adc    al,0x38
  433617:	inc    ebp
  433618:	adc    DWORD PTR [edx+0x59c20292],eax
  43361e:	push   eax
  43361f:	shl    BYTE PTR [esi+0x50d91760],0x41
  433626:	jp     0x433609
  433628:	repnz xchg edx,eax
  43362a:	pop    ds
  43362b:	adc    eax,0x4692ea90
  433630:	or     al,BYTE PTR [eax+eiz*4-0x2792ef7a]
  433637:	stos   DWORD PTR es:[edi],eax
  433638:	mov    eax,ds:0x59208e44
  43363d:	iret   
  43363e:	or     esp,DWORD PTR [ebp-0x60]
  433641:	sbb    eax,0xff42d9f6
  433646:	stos   DWORD PTR es:[edi],eax
  433647:	sub    DWORD PTR [edx+0x3192cdb2],0xffffffba
  43364e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43364f:	cmp    esp,DWORD PTR [eax]
  433651:	fldpi  
  433653:	ds (bad) 
  433655:	dec    edx
  433656:	loope  0x433609
  433658:	push   es
  433659:	addr16 in eax,0xbe
  43365c:	pop    ebx
  43365d:	fistp  DWORD PTR ds:0x9b594129
  433663:	add    BYTE PTR [ebp+edx*1-0x69],ch
  433667:	call   FWORD PTR [ebp+0x7a7c8e25]
  43366d:	test   al,0x3
  43366f:	sbb    al,0x2
  433671:	jbe    0x433630
  433673:	push   ebx
  433674:	pop    edx
  433675:	xchg   ecx,eax
  433676:	adc    ax,0xd8d4
  43367a:	stos   BYTE PTR es:[edi],al
  43367b:	pushf  
  43367c:	push   eax
  43367d:	dec    ecx
  43367e:	or     DWORD PTR [esi+0x7c],edx
  433681:	(bad)  
  433682:	and    DWORD PTR [esi+0x29],0xffffffb5
  433686:	aad    0xfe
  433688:	push   esp
  433689:	stos   BYTE PTR es:[edi],al
  43368a:	or     eax,0xa4546808
  43368f:	adc    BYTE PTR [eax-0x51],ah
  433692:	cli    
  433693:	pop    edx
  433694:	jg     0x433686
  433696:	mov    ah,BYTE PTR [esi+eiz*2+0x653d5350]
  43369d:	dec    edi
  43369e:	rcr    BYTE PTR [edx-0x4a],0x8a
  4336a2:	dec    ebp
  4336a3:	jmp    0x8aca:0xd2031823
  4336aa:	dec    edi
  4336ab:	div    DWORD PTR [esi]
  4336ad:	dec    edx
  4336ae:	and    al,0x99
  4336b0:	adc    edx,0xa8fe026e
  4336b6:	mov    ds:0xd8d87ec6,eax
  4336bb:	jg     0x4336d8
  4336bd:	test   eax,0x5bf869a0
  4336c2:	dec    esi
  4336c3:	int3   
  4336c4:	ds inc ecx
  4336c6:	add    bh,bh
  4336c8:	(bad)  
  4336c9:	fcos   
  4336cb:	ror    BYTE PTR [edx+0x140adca0],0x51
  4336d2:	sbb    al,0xf1
  4336d4:	inc    esp
  4336d5:	push   0x12
  4336d7:	stc    
  4336d8:	popa   
  4336d9:	mov    esp,0xb0df7a8d
  4336de:	rol    BYTE PTR [esi-0x2b],0xad
  4336e2:	lea    esp,[esi+0x7e]
  4336e5:	add    DWORD PTR [edx+0x33f76fa4],eax
  4336eb:	arpl   bx,bx
  4336ed:	in     al,0xc3
  4336ef:	mov    cl,0x3a
  4336f1:	sub    eax,0xe498c5c3
  4336f6:	inc    ebx
  4336f7:	or     cl,BYTE PTR [edi+0x3d]
  4336fa:	lea    eax,[ecx-0x5b452e83]
  433700:	jbe    0x43375e
  433702:	repz mov eax,0xe7c55069
  433708:	inc    edi
  433709:	into   
  43370a:	adc    BYTE PTR [eax+eiz*1+0x41a22a48],0x37
  433712:	sub    BYTE PTR [ebx-0x29caaaa1],dl
  433718:	add    bl,dh
  43371a:	daa    
  43371b:	push   ss
  43371c:	mov    ebp,0x1476d87d
  433721:	push   eax
  433722:	outs   dx,BYTE PTR ds:[esi]
  433723:	sub    ebx,DWORD PTR [esi+ecx*4]
  433726:	popf   
  433727:	xor    BYTE PTR es:[esi+0x14f1bd5d],0x97
  43372f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433730:	xchg   ecx,eax
  433731:	pop    ecx
  433732:	fwait
  433733:	(bad)
  433736:	data16 jp 0x433737
  433739:	mov    edi,DWORD PTR [edi+0x6d161c6a]
  43373f:	add    al,0x2c
  433741:	(bad)  
  433742:	das    
  433743:	mov    ah,0xae
  433745:	inc    ebx
  433746:	mov    bl,0xfe
  433748:	clc    
  433749:	and    eax,0x11981cf7
  43374e:	lods   al,BYTE PTR ds:[esi]
  43374f:	enter  0x40b2,0xf6
  433753:	mov    ah,BYTE PTR [ecx]
  433755:	jmp    FWORD PTR [ebp+0x1ba1e9f9]
  43375b:	xchg   esp,eax
  43375c:	inc    esi
  43375d:	adc    DWORD PTR [ecx],edi
  43375f:	xor    esi,ebx
  433761:	lock jns 0x43377e
  433764:	fs sbb edx,ebp
  433767:	add    al,0x39
  433769:	ss sahf 
  43376b:	push   edx
  43376c:	arpl   WORD PTR [edx+0x43],bx
  43376f:	outs   dx,DWORD PTR ds:[esi]
  433770:	imul   ecx,DWORD PTR [eax],0xbc6ff796
  433776:	call   0xc9f4:0x8cc3511c
  43377d:	add    bl,BYTE PTR [edi+0x27663f24]
  433783:	or     DWORD PTR [esi+0x4a420ba2],ebp
  433789:	sub    BYTE PTR [eax+0x7a800203],0x60
  433790:	imul   edx,DWORD PTR [esi+0x44401d8f],0xffffffcd
  433797:	sbb    DWORD PTR [ecx],0xffffffda
  43379a:	(bad)  
  43379b:	stos   DWORD PTR es:[edi],eax
  43379c:	mov    ah,0x3d
  43379e:	(bad)  
  43379f:	out    0x44,al
  4337a1:	icebp  
  4337a2:	outs   dx,BYTE PTR ds:[esi]
  4337a3:	cs aaa 
  4337a5:	jbe    0x433761
  4337a7:	jne    0x433780
  4337a9:	cli    
  4337aa:	xor    ah,BYTE PTR ds:0xe1404a03
  4337b0:	mov    al,ds:0xec0750b6
  4337b5:	mov    bl,cl
  4337b7:	test   eax,0x586b51c1
  4337bc:	mov    ds:0x6c8b3383,eax
  4337c1:	out    0x36,al
  4337c3:	shl    BYTE PTR [edi-0x12d720e8],0x43
  4337ca:	sahf   
  4337cb:	ins    DWORD PTR es:[edi],dx
  4337cc:	test   al,0x31
  4337ce:	ds in  eax,0xe4
  4337d1:	test   ebp,esi
  4337d3:	fs fsubr st,st(5)
  4337d7:	mov    dh,BYTE PTR [eax+0x5244fdb3]
  4337dd:	(bad)  
  4337df:	fnstenv [esi-0x784934ad]
  4337e5:	fst    DWORD PTR [ebx]
  4337e7:	inc    edi
  4337e8:	clc    
  4337e9:	dec    esi
  4337ea:	lock inc edx
  4337ec:	sbb    eax,0x35049677
  4337f1:	jg     0x43383c
  4337f3:	je     0x433874
  4337f5:	add    edi,DWORD PTR [ecx-0x79]
  4337f8:	pop    ss
  4337f9:	xor    eax,0x126deef
  4337fe:	(bad)  
  4337ff:	icebp  
  433800:	into   
  433801:	fcmove st,st(7)
  433803:	stos   WORD PTR es:[edi],ax
  433805:	jne    0x4337dd
  433807:	inc    esi
  433808:	into   
  433809:	lahf   
  43380a:	fstp   TBYTE PTR [edx]
  43380c:	cmp    DWORD PTR [edi],edi
  43380e:	ror    DWORD PTR [ecx-0x4b],cl
  433811:	pop    ecx
  433812:	pop    esp
  433813:	jnp    0x433817
  433815:	clc    
  433816:	pop    ebp
  433817:	xchg   dl,cl
  433819:	hlt    
  43381a:	or     DWORD PTR [ecx-0x37],edx
  43381d:	inc    edi
  43381e:	ins    BYTE PTR es:[edi],dx
  43381f:	stos   DWORD PTR es:[edi],eax
  433820:	add    BYTE PTR [edi+ecx*4-0x7c32d4ce],bh
  433827:	inc    edi
  433828:	(bad)  
  433829:	pop    edi
  43382a:	cmp    eax,0x86ddcf9c
  43382f:	sbb    BYTE PTR [eax+edx*1+0x34],dh
  433833:	stos   BYTE PTR es:[edi],al
  433834:	inc    edx
  433835:	mov    edx,0xa1fe6bfe
  43383a:	sar    BYTE PTR [esi],0x78
  43383d:	test   DWORD PTR [edx+edi*4],esi
  433840:	inc    edx
  433841:	mov    edx,0x2ce92f3c
  433846:	addr16 data16 lahf 
  433849:	dec    ebx
  43384a:	fild   QWORD PTR [edx-0x76]
  43384d:	push   es
  43384e:	mov    al,BYTE PTR [edi-0x6a0428ae]
  433854:	(bad)  
  433856:	mov    al,0xa2
  433858:	dec    ecx
  433859:	pop    ecx
  43385a:	jmp    0xc1f9:0xb52c8add
  433861:	out    dx,eax
  433862:	inc    edi
  433863:	sub    ebx,ebx
  433865:	dec    ecx
  433866:	mov    cl,0x40
  433868:	shl    BYTE PTR [ecx],1
  43386a:	sbb    BYTE PTR [edi-0x7],bl
  43386d:	out    0x85,al
  43386f:	test   al,0xaf
  433871:	sbb    ah,bh
  433873:	enter  0x852a,0xae
  433877:	xor    BYTE PTR [ebp+0x7f],cl
  43387a:	jmp    0xa4379d1f
  43387f:	xchg   dh,dh
  433881:	sbb    DWORD PTR ds:0xa812e80,0x2dacec11
  43388b:	pop    ebp
  43388c:	dec    ecx
  43388d:	mov    al,ds:0xec64ce3f
  433892:	or     al,0x26
  433894:	push   0xffffff8f
  433896:	xchg   ebx,eax
  433897:	and    al,0xfc
  433899:	in     eax,dx
  43389a:	dec    esi
  43389b:	ins    BYTE PTR es:[edi],dx
  43389c:	and    esi,DWORD PTR [ebx*8-0x6badb969]
  4338a3:	jne    0x43386a
  4338a5:	push   ds
  4338a6:	rdmsr  
  4338a8:	and    eax,0x45a26bbd
  4338ad:	sbb    edi,DWORD PTR [esi-0x1081662b]
  4338b3:	sub    al,0xe2
  4338b5:	xchg   edx,eax
  4338b6:	mov    BYTE PTR [esi+0xd9aa06b],bh
  4338bc:	jecxz  0x4338fb
  4338be:	lods   eax,DWORD PTR ds:[esi]
  4338bf:	imul   edi,DWORD PTR [edx+0x22cba833],0x6c
  4338c6:	jo     0x433914
  4338c8:	out    0x5c,al
  4338ca:	xchg   ebp,eax
  4338cb:	adc    DWORD PTR ds:[ebp+0x7694bc1a],edi
  4338d2:	emms   
  4338d4:	sbb    DWORD PTR ss:[ebx+0x314ff6a7],ecx
  4338db:	(bad)  
  4338dc:	cmp    ch,BYTE PTR [eax-0x43]
  4338df:	cli    
  4338e0:	shl    ch,1
  4338e2:	mov    ds,WORD PTR [edi]
  4338e4:	scas   al,BYTE PTR es:[edi]
  4338e5:	cmp    edx,DWORD PTR [esi]
  4338e7:	jno    0x4338d2
  4338e9:	scas   al,BYTE PTR es:[edi]
  4338ea:	das    
  4338eb:	popa   
  4338ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4338ed:	retf   0x50b2
  4338f0:	cli    
  4338f1:	(bad)  
  4338f2:	lods   eax,DWORD PTR ds:[esi]
  4338f3:	xor    ah,BYTE PTR [edx+0x440c242c]
  4338f9:	test   al,0x33
  4338fb:	jnp    0x43397b
  4338fd:	lods   eax,DWORD PTR ds:[esi]
  4338fe:	not    DWORD PTR [edi+0x2768b189]
  433904:	adc    eax,0x36e91c4e
  433909:	out    0xe3,al
  43390b:	sbb    cl,BYTE PTR [edi+eax*8+0x6171f156]
  433912:	xchg   sp,ax
  433914:	push   esp
  433915:	cmp    DWORD PTR [ebp-0x40ce4fd7],edx
  43391b:	jecxz  0x433937
  43391d:	out    dx,al
  43391e:	xchg   ebp,eax
  43391f:	into   
  433920:	xor    dh,dl
  433922:	push   es
  433923:	fwait
  433924:	lock push ds
  433926:	push   cs
  433927:	cli    
  433928:	adc    al,BYTE PTR [edx]
  43392a:	add    eax,0xe2efc136
  43392f:	sbb    bh,cl
  433931:	adc    BYTE PTR [ebp+0x4dc82969],dl
  433937:	mov    ds:0x3ca5d5f5,eax
  43393c:	cs (bad) 
  43393e:	cli    
  43393f:	mov    eax,0x4b2967e9
  433944:	in     al,0x65
  433946:	sbb    BYTE PTR [edx+0x7ca65759],bl
  43394c:	jge    0x433991
  43394e:	jge    0x4338f8
  433950:	add    DWORD PTR [esi+0x48],0xffffffa1
  433954:	mov    ch,0xa1
  433956:	inc    eax
  433957:	push   esp
  433958:	pop    ebp
  433959:	icebp  
  43395a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43395b:	cmp    eax,0x7dd52d83
  433960:	outs   dx,BYTE PTR ds:[esi]
  433961:	or     al,0x7a
  433963:	sub    bh,BYTE PTR [ebp-0x1]
  433966:	mov    bh,0x52
  433968:	loope  0x4339e3
  43396a:	push   edi
  43396b:	popf   
  43396c:	mov    ch,0xef
  43396e:	call   0xb201fc2a
  433973:	jo     0x4339a2
  433975:	and    ebp,DWORD PTR [eax]
  433977:	aam    0xf5
  433979:	or     al,0x4e
  43397b:	adc    al,0x95
  43397d:	in     eax,dx
  43397e:	int3   
  43397f:	test   DWORD PTR [esi-0x6dd739fe],0xaf5ff83d
  433989:	sbb    cl,BYTE PTR [edi]
  43398b:	xchg   edx,eax
  43398c:	addr16 sbb ebp,ecx
  43398f:	mov    ebx,0xd8c64645
  433994:	or     eax,0x544950dd
  433999:	inc    edx
  43399a:	cmp    ch,BYTE PTR [eax-0xd]
  43399d:	inc    edx
  43399e:	sbb    BYTE PTR ds:0xda297783,ah
  4339a4:	ins    DWORD PTR es:[edi],dx
  4339a5:	jb     0x43396f
  4339a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4339a8:	fnsave [eax]
  4339aa:	fwait
  4339ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4339ac:	fadd   QWORD PTR [ebx-0x2b1dbcef]
  4339b2:	daa    
  4339b3:	dec    eax
  4339b4:	(bad)  
  4339b5:	out    dx,al
  4339b6:	mov    al,ds:0x358ea2a2
  4339bb:	push   esp
  4339bc:	das    
  4339bd:	bndstx [ebp+0x8],bnd0
  4339c1:	add    esi,edi
  4339c3:	dec    ebp
  4339c4:	mov    WORD PTR [eax-0x623f528b],ss
  4339ca:	daa    
  4339cb:	fidiv  DWORD PTR [ecx+0x28]
  4339ce:	xor    eax,0x39dd417
  4339d3:	add    eax,0x37220735
  4339d8:	pop    ebp
  4339d9:	sar    BYTE PTR [ebp-0x54],cl
  4339dc:	jge    0x4339de
  4339de:	pushf  
  4339df:	shl    BYTE PTR [ebp+0x3c],cl
  4339e2:	sub    al,0xdb
  4339e5:	dec    eax
  4339e6:	gs and bh,0x1a
  4339ea:	ret    
  4339eb:	test   al,0x75
  4339ed:	ins    BYTE PTR es:[edi],dx
  4339ee:	push   0x8bd2222
  4339f3:	ja     0x4339a7
  4339f5:	pop    ebx
  4339f6:	adc    bl,bh
  4339f8:	or     bl,BYTE PTR [ebx+0x5]
  4339fb:	add    DWORD PTR [ecx+0x2f],esi
  4339fe:	dec    DWORD PTR [esi+0x64]
  433a01:	xchg   ecx,eax
  433a02:	push   ds
  433a03:	pop    ebp
  433a04:	lahf   
  433a05:	(bad)  
  433a06:	fsubr  DWORD PTR [eax-0x686a0b93]
  433a0c:	fs jne 0x433a2d
  433a0f:	sbb    eax,edi
  433a11:	mov    ecx,0x8985926a
  433a16:	jo     0x433a17
  433a18:	or     esi,DWORD PTR [eax-0x23361aee]
  433a1e:	loop   0x433a86
  433a20:	add    eax,DWORD PTR [edx-0x31]
  433a23:	adc    ch,BYTE PTR [edx]
  433a25:	ss inc esp
  433a27:	jne    0x433a56
  433a29:	xchg   esi,eax
  433a2a:	in     al,0x49
  433a2c:	cmp    eax,esi
  433a2e:	sbb    al,0x35
  433a30:	(bad)  
  433a31:	fisubr DWORD PTR [esi]
  433a33:	mov    edi,0xee386ec7
  433a38:	sbb    BYTE PTR [esi+0x3a],al
  433a3b:	ror    BYTE PTR [eax],1
  433a3d:	mov    ebp,0xd5e622f1
  433a42:	mov    al,ss:0xabe4f69e
  433a48:	sub    DWORD PTR ds:0xc3d1297f,0xe38724af
  433a52:	xchg   DWORD PTR [ecx+0x37],eax
  433a55:	repz xchg ebp,eax
  433a57:	imul   esi,DWORD PTR [esi+ecx*4],0xc2d2b875
  433a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433a5f:	or     dl,ah
  433a61:	mov    ah,0x14
  433a63:	push   ds
  433a64:	adc    edi,DWORD PTR [ecx-0x56]
  433a67:	mov    bh,0x1c
  433a69:	add    ah,BYTE PTR [ecx]
  433a6b:	shl    DWORD PTR [ecx+0x53],1
  433a6e:	mov    cl,0x45
  433a70:	jnp    0x433aa6
  433a72:	mov    BYTE PTR [edi-0x73479282],ah
  433a78:	cmp    al,0x61
  433a7a:	std    
  433a7b:	(bad)  
  433a7d:	bound  ebp,QWORD PTR [edx]
  433a7f:	xor    edi,DWORD PTR [ebx-0x5a]
  433a82:	mov    BYTE PTR [ecx+0x4459ca23],dh
  433a88:	test   eax,esi
  433a8a:	xchg   esp,eax
  433a8b:	imul   edi,eax,0x2d
  433a8e:	mov    ebp,0x5583dc
  433a93:	pop    esi
  433a94:	outs   dx,BYTE PTR ds:[esi]
  433a95:	ins    DWORD PTR es:[edi],dx
  433a96:	pop    ebp
  433a97:	test   DWORD PTR [edx],ebp
  433a99:	es jp  0x433aa4
  433a9c:	xchg   ecx,eax
  433a9d:	inc    ebx
  433a9e:	xlat   BYTE PTR ds:[ebx]
  433a9f:	mov    DWORD PTR [edi-0x2babac31],edi
  433aa5:	loopne 0x433a34
  433aa7:	in     al,dx
  433aa8:	ins    DWORD PTR es:[edi],dx
  433aa9:	retf   
  433aaa:	inc    edx
  433aab:	sub    esi,esi
  433aad:	jno    0x433aa6
  433aaf:	fimul  WORD PTR [eax+0x36a52447]
  433ab5:	stos   DWORD PTR es:[edi],eax
  433ab6:	add    BYTE PTR [ebx+0x399dcb9e],0x6c
  433abd:	or     eax,0x675680e4
  433ac2:	pop    ss
  433ac3:	xchg   esi,eax
  433ac4:	lds    edx,FWORD PTR [ebx]
  433ac6:	jae    0x433a83
  433ac8:	arpl   bx,cx
  433aca:	shl    esp,1
  433acc:	mov    ch,BYTE PTR [eax-0xd988df8]
  433ad2:	pop    ss
  433ad3:	imul   eax
  433ad5:	ds icebp 
  433ad7:	out    0xd0,eax
  433ad9:	push   ecx
  433ada:	lahf   
  433adb:	sub    eax,0xba8023cf
  433ae0:	xchg   edx,eax
  433ae1:	pop    edx
  433ae2:	hlt    
  433ae3:	adc    al,0x96
  433ae5:	and    eax,0x6e9db42d
  433aea:	mov    ds,esp
  433aec:	push   ebp
  433aed:	int    0x4c
  433aef:	mov    ds:0x47540014,al
  433af4:	cmp    DWORD PTR [esi+0x191cb1cb],edi
  433afa:	adc    cl,BYTE PTR [ecx]
  433afc:	arpl   bx,di
  433afe:	xchg   edi,eax
  433aff:	dec    ebx
  433b00:	jecxz  0x433b4e
  433b02:	jle    0x433aea
  433b04:	dec    eax
  433b05:	nop
  433b06:	mov    ds:0xe49681a4,eax
  433b0b:	jb     0x433aa8
  433b0d:	sub    edi,DWORD PTR ds:0x3f4527bc
  433b13:	in     eax,dx
  433b14:	mov    bh,0xdb
  433b16:	test   DWORD PTR [edi],0xd7138147
  433b1c:	push   edx
  433b1d:	inc    ebx
  433b1e:	shl    DWORD PTR [eax-0x10],1
  433b21:	xchg   edx,eax
  433b22:	push   ss
  433b23:	lea    ebp,es:[ecx]
  433b26:	xlat   BYTE PTR ds:[ebx]
  433b27:	or     esp,DWORD PTR [ecx]
  433b29:	call   0xaaa7:0x8387612f
  433b30:	fiadd  WORD PTR [ebp-0x1bc2e329]
  433b36:	pop    eax
  433b37:	and    edx,edi
  433b39:	mov    edi,ss
  433b3b:	in     eax,dx
  433b3c:	rol    BYTE PTR [eax-0x6f4610be],1
  433b42:	(bad)  
  433b43:	pusha  
  433b44:	fucompp 
  433b46:	mov    ds:0xca6f7bb6,eax
  433b4b:	call   0x4905fb15
  433b50:	imul   edi,DWORD PTR [eax+0x7105d840],0xffffff9a
  433b57:	popf   
  433b58:	imul   BYTE PTR [edi+0x60]
  433b5b:	fs push edx
  433b5d:	fmul   QWORD PTR [ebp-0x6f]
  433b60:	lock in eax,0x70
  433b63:	out    dx,al
  433b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433b65:	ss inc ebx
  433b67:	or     al,0xa5
  433b69:	mov    cl,BYTE PTR [ebp+0x3ce61792]
  433b6f:	or     BYTE PTR [eax+0x38],dl
  433b72:	das    
  433b73:	cmp    dh,BYTE PTR [esi]
  433b75:	push   es
  433b76:	cld    
  433b77:	push   eax
  433b78:	push   ecx
  433b79:	hlt    
  433b7a:	jl     0x433bed
  433b7c:	addr16 sub edx,eax
  433b7f:	and    al,0x5
  433b81:	ror    BYTE PTR [edi+ebx*8+0x27211ed],0xa6
  433b89:	and    al,0xa7
  433b8b:	and    al,0x1c
  433b8d:	enter  0xf676,0xe
  433b91:	ins    BYTE PTR es:[edi],dx
  433b92:	sbb    DWORD PTR [edx],ebx
  433b94:	test   eax,0xfa156f47
  433b99:	imul   ecx,DWORD PTR [esi+0x73a0139f],0x76
  433ba0:	call   0x18d5847a
  433ba5:	fisttp DWORD PTR ds:0xa4e1ff0d
  433bab:	imul   DWORD PTR [eax*2+0x78342d01]
  433bb2:	out    dx,eax
  433bb3:	push   ds
  433bb4:	call   0x5cffb08a
  433bb9:	mov    ah,0x8b
  433bbb:	cwde   
  433bbc:	or     DWORD PTR [edx+0x10],edx
  433bbf:	mov    edx,esi
  433bc1:	xor    al,0x41
  433bc3:	dec    edi
  433bc4:	aam    0x44
  433bc6:	and    edx,DWORD PTR [ebp-0x642418c4]
  433bcc:	dec    ebp
  433bcd:	push   ss
  433bce:	aas    
  433bcf:	or     eax,DWORD PTR [edi]
  433bd1:	out    dx,eax
  433bd2:	push   edx
  433bd3:	(bad)  
  433bd5:	dec    ecx
  433bd6:	pusha  
  433bd7:	pushf  
  433bd8:	jg     0x433c18
  433bda:	jo     0x433c29
  433bdc:	rol    DWORD PTR [ecx],1
  433bde:	aas    
  433bdf:	mov    ah,0x5
  433be1:	pop    esp
  433be2:	in     al,dx
  433be3:	mov    bl,0x99
  433be5:	cmp    ch,BYTE PTR [ebx]
  433be7:	mov    ebx,0xc501aec3
  433bec:	enter  0xc793,0x99
  433bf0:	jmp    0xe49fc85d
  433bf5:	scas   al,BYTE PTR es:[edi]
  433bf6:	pusha  
  433bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433bf8:	mov    esp,0x4dd9687b
  433bfd:	jns    0x433bcc
  433bff:	cdq    
  433c00:	mov    dl,0xa2
  433c02:	xchg   edi,eax
  433c03:	repz loope 0x433b8b
  433c06:	add    eax,0x97a29a41
  433c0b:	ret    0x66d3
  433c0e:	push   ss
  433c0f:	or     BYTE PTR ds:0xdc6f852b,bl
  433c15:	xchg   esi,eax
  433c16:	lea    eax,[edi+ebx*4+0x13]
  433c1a:	nop
  433c1b:	aas    
  433c1c:	(bad)  
  433c1d:	fbld   TBYTE PTR [ebx+0x5ac40866]
  433c23:	sahf   
  433c24:	ror    BYTE PTR es:[edx+0x26706984],cl
  433c2b:	pop    edx
  433c2c:	ins    BYTE PTR es:[edi],dx
  433c2d:	out    0xc,eax
  433c2f:	cmp    bh,BYTE PTR [esi]
  433c31:	das    
  433c32:	push   0x7da0b472
  433c37:	repnz lahf 
  433c39:	cmp    al,BYTE PTR [ebx]
  433c3b:	into   
  433c3c:	xor    DWORD PTR [edi-0x33],esi
  433c3f:	cmp    DWORD PTR [ecx+0x39ce8f07],esi
  433c45:	data16 aam 0xcb
  433c48:	inc    edx
  433c49:	mov    ebx,0xcd9cc32d
  433c4e:	enter  0xfd97,0xe6
  433c52:	pop    esp
  433c53:	or     al,0x68
  433c55:	leave  
  433c56:	inc    edi
  433c57:	adc    eax,0xef1691fd
  433c5c:	jns    0x433cd3
  433c5e:	dec    esi
  433c5f:	int    0x2b
  433c61:	push   eax
  433c62:	in     al,dx
  433c63:	pushf  
  433c64:	dec    esi
  433c65:	mov    ds:0xdff71c21,eax
  433c6a:	push   0xfffffffc
  433c6c:	mov    eax,ds:0x239ee785
  433c71:	mov    ebp,0x6e18a1fd
  433c76:	push   ecx
  433c77:	out    dx,eax
  433c78:	pop    edi
  433c79:	inc    edx
  433c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433c7b:	cli    
  433c7c:	call   0x8d75a228
  433c81:	xor    al,0x9b
  433c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c84:	ins    BYTE PTR es:[edi],dx
  433c85:	or     DWORD PTR [edx],eax
  433c87:	mov    ds:0xaca7c3cd,eax
  433c8c:	shl    esi,0x3b
  433c8f:	mov    al,ds:0xedd70ab0
  433c94:	stos   DWORD PTR es:[edi],eax
  433c95:	call   0x6292fd91
  433c9a:	jno    0x433cdd
  433c9c:	add    eax,0x63107c88
  433ca1:	data16 jle 0x433ce2
  433ca4:	(bad)  
  433ca5:	test   eax,0x298c466f
  433caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433cab:	daa    
  433cac:	test   edx,0xb139f88c
  433cb2:	rcl    DWORD PTR [edx-0xa5df24d],1
  433cb8:	fwait
  433cb9:	adc    BYTE PTR [ebp+ecx*1+0x7d8215e8],ah
  433cc0:	push   edi
  433cc1:	adc    eax,0xde6cf3dd
  433cc6:	jg     0x433c92
  433cc8:	mov    ds:0x8d766003,eax
  433ccd:	fmulp  st(3),st
  433ccf:	xor    DWORD PTR es:[eax+esi*2-0x1],ebx
  433cd4:	jnp    0x433c99
  433cd6:	sbb    eax,0x46a07869
  433cdb:	adc    BYTE PTR [esi*8-0x631a7382],bh
  433ce2:	dec    eax
  433ce3:	jbe    0x433d36
  433ce5:	lods   al,BYTE PTR ds:[esi]
  433ce6:	aam    0x2d
  433ce8:	pop    ebx
  433ce9:	int3   
  433cea:	dec    ebx
  433ceb:	push   ebp
  433cec:	push   0xffffff81
  433cee:	or     BYTE PTR [edi],ah
  433cf0:	mov    edi,0x325a930d
  433cf5:	and    al,0x94
  433cf7:	sub    al,0xa0
  433cf9:	loop   0x433d05
  433cfb:	ds jl  0x433d62
  433cfe:	hlt    
  433cff:	retf   
  433d00:	adc    dh,dl
  433d02:	xchg   dh,cl
  433d04:	pushf  
  433d05:	out    0xf5,eax
  433d07:	push   ebp
  433d08:	jae    0x433ce2
  433d0a:	xchg   esi,eax
  433d0b:	mov    al,0xee
  433d0d:	sub    eax,0x5721e9f1
  433d12:	push   eax
  433d13:	das    
  433d14:	out    dx,al
  433d15:	retf   
  433d16:	mov    bl,0x84
  433d18:	std    
  433d19:	call   0x84f397f1
  433d1e:	leave  
  433d1f:	push   ebx
  433d20:	mov    edi,0x2be5a86
  433d25:	int3   
  433d26:	inc    eax
  433d27:	bound  esi,QWORD PTR [edi+ebx*4+0x50]
  433d2b:	jmp    0xb5fc3933
  433d30:	nop
  433d31:	fs into 
  433d33:	push   ebp
  433d34:	out    0xad,eax
  433d36:	mov    esi,0x95093e8a
  433d3b:	in     al,dx
  433d3c:	enter  0x2d1e,0xa8
  433d40:	dec    edx
  433d41:	pop    esi
  433d42:	mov    eax,ds:0x6fc3f54a
  433d47:	repz pop edx
  433d49:	or     dh,cl
  433d4b:	(bad)  
  433d4c:	mov    DWORD PTR [ecx+0x1],0x4f45f664
  433d53:	pop    ebx
  433d54:	cmp    ah,0xd9
  433d57:	mov    dh,0x49
  433d59:	sbb    al,0x81
  433d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d5c:	mov    ds:0xc868e566,al
  433d61:	push   esi
  433d62:	outs   dx,BYTE PTR ds:[esi]
  433d63:	loope  0x433d75
  433d65:	xlat   BYTE PTR ds:[ebx]
  433d66:	adc    al,0x1f
  433d68:	popa   
  433d69:	in     al,dx
  433d6a:	push   0x1f
  433d6c:	ja     0x433d34
  433d6e:	mov    ah,0xe0
  433d70:	call   0xab4d3995
  433d75:	push   edx
  433d76:	test   eax,0x212493d
  433d7b:	aam    0x87
  433d7d:	cs mov ch,0x52
  433d80:	in     eax,dx
  433d81:	ret    0x66a4
  433d84:	out    dx,eax
  433d85:	cmp    al,0xa
  433d87:	lock push 0x31d7283
  433d8d:	mov    bh,0x86
  433d8f:	inc    ebp
  433d90:	dec    eax
  433d91:	push   0x180344f0
  433d96:	xchg   DWORD PTR [ebx+0x43],edi
  433d99:	fwait
  433d9a:	ins    DWORD PTR es:[edi],dx
  433d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433d9c:	inc    ebx
  433d9d:	rcl    DWORD PTR [esi-0x32620e04],cl
  433da3:	xchg   edx,eax
  433da4:	or     BYTE PTR [ecx+ecx*1-0x65],bl
  433da8:	xchg   edx,esi
  433daa:	and    eax,0xc0d623bf
  433daf:	popa   
  433db0:	xor    DWORD PTR [edi],edx
  433db2:	pop    ebp
  433db3:	xchg   edi,eax
  433db4:	jecxz  0x433dc0
  433db6:	test   eax,0x5de47fa6
  433dbb:	mov    al,ch
  433dbd:	mov    esi,0x763a55bc
  433dc2:	sti    
  433dc3:	and    DWORD PTR [ebx+0x66],ecx
  433dc6:	adc    eax,0x183b3a25
  433dcb:	cmp    BYTE PTR [edi-0x3e2f82de],dl
  433dd1:	gs (bad) 
  433dd3:	push   0xb2a441ac
  433dd8:	dec    esp
  433dd9:	leave  
  433dda:	into   
  433ddb:	sbb    BYTE PTR [ecx],ah
  433ddd:	sub    ebp,DWORD PTR [edi+0x6e3f7f6d]
  433de3:	mov    cl,0x8d
  433de5:	mov    edx,esi
  433de7:	dec    esp
  433de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433de9:	mov    eax,0xd77439dc
  433dee:	enter  0x8a91,0xf6
  433df2:	ins    DWORD PTR es:[edi],dx
  433df3:	and    esi,DWORD PTR [edi+0x16]
  433df6:	cld    
  433df7:	sub    al,0x27
  433df9:	xchg   edx,eax
  433dfa:	cdq    
  433dfb:	aam    0x5a
  433dfd:	shl    BYTE PTR [esi+0x20],cl
  433e00:	adc    ebx,DWORD PTR [esi-0x25]
  433e03:	xor    eax,0xb943ba2d
  433e08:	and    BYTE PTR cs:[edi+0x6d],bh
  433e0c:	pushf  
  433e0d:	pop    es
  433e0e:	and    BYTE PTR [edx],bh
  433e10:	lds    eax,FWORD PTR [ebx+0x344f045d]
  433e16:	push   es
  433e17:	mov    eax,0xc3cae534
  433e1c:	adc    ebp,DWORD PTR [ecx]
  433e1e:	xchg   BYTE PTR [esi],ch
  433e20:	add    eax,0x6b18a94b
  433e25:	and    DWORD PTR [edi+0x39bd07e6],ecx
  433e2b:	imul   esp,ebx,0x8acf5d3e
  433e31:	out    dx,al
  433e32:	push   esp
  433e33:	pop    ss
  433e34:	cmp    BYTE PTR [eax+ecx*1-0x6],dh
  433e38:	lds    ebp,FWORD PTR [eax+edi*8]
  433e3b:	xchg   ecx,eax
  433e3c:	rcr    DWORD PTR [esi-0x24e7a454],0x72
  433e43:	out    0xf4,eax
  433e45:	rcr    BYTE PTR [edi],cl
  433e47:	daa    
  433e48:	add    eax,0xb74531b3
  433e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433e4e:	fsubp  st(2),st
  433e50:	cs cmc 
  433e52:	in     eax,dx
  433e53:	popa   
  433e54:	loopne 0x433ddd
  433e56:	mov    cl,0xb8
  433e58:	xor    edx,DWORD PTR [edi]
  433e5a:	cmp    dl,BYTE PTR [edi+0xd401023]
  433e60:	add    BYTE PTR [edx+0x44],dl
  433e63:	fwait
  433e64:	stc    
  433e65:	push   esi
  433e66:	sub    bl,0x59
  433e69:	stc    
  433e6a:	bound  ecx,QWORD PTR [eax]
  433e6c:	lods   al,BYTE PTR ds:[esi]
  433e6d:	addr16 loope 0x433ec1
  433e70:	cmp    ebx,esi
  433e72:	cld    
  433e73:	adc    edx,ecx
  433e75:	xor    al,0xaa
  433e77:	scas   al,BYTE PTR es:[edi]
  433e78:	adc    BYTE PTR [esi],0x1b
  433e7b:	icebp  
  433e7c:	pop    es
  433e7d:	(bad)  
  433e7e:	adc    al,0x67
  433e80:	arpl   WORD PTR [edx-0x19],ax
  433e83:	(bad)  
  433e84:	je     0x433e71
  433e86:	jle    0x433ea1
  433e88:	pusha  
  433e89:	fwait
  433e8a:	cmp    ah,ah
  433e8c:	push   edi
  433e8d:	mov    ss,WORD PTR [edi+eax*8+0x627b0ce2]
  433e94:	cdq    
  433e95:	dec    ebx
  433e96:	dec    edi
  433e97:	mov    dl,BYTE PTR [edi-0x48]
  433e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433e9b:	push   ss
  433e9c:	jae    0x433ea1
  433e9e:	sti    
  433e9f:	xor    ecx,DWORD PTR [eax+0x7326549e]
  433ea5:	in     al,dx
  433ea6:	mov    ecx,0xd748168b
  433eab:	push   es
  433eac:	(bad)  
  433ead:	ja     0x433ef3
  433eaf:	mov    al,0xcd
  433eb1:	mov    ch,0x3f
  433eb3:	xor    DWORD PTR [ecx],esp
  433eb5:	cmp    al,0x99
  433eb7:	out    0x15,al
  433eb9:	hlt    
  433eba:	jg     0x433e48
  433ebc:	or     esp,DWORD PTR [ecx+0x60]
  433ebf:	sbb    al,0x39
  433ec1:	sub    BYTE PTR [eax],ch
  433ec3:	and    DWORD PTR ds:[edx],ecx
  433ec6:	out    0xda,al
  433ec8:	sub    BYTE PTR [ebp-0x11],ah
  433ecb:	add    al,0x8b
  433ecd:	inc    ebp
  433ece:	in     al,dx
  433ecf:	inc    eax
  433ed0:	(bad)  
  433ed1:	lea    ecx,[ebx+0x46]
  433ed4:	mov    dl,BYTE PTR [eax+0x675fc386]
  433eda:	jmp    0xa416de2f
  433edf:	pop    ds
  433ee0:	scas   eax,DWORD PTR es:[edi]
  433ee1:	mov    gs,WORD PTR [ecx+eiz*8+0x46]
  433ee5:	test   BYTE PTR [edi+0x235dfcdb],al
  433eeb:	addr16 inc ecx
  433eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433eee:	loopne 0x433f14
  433ef0:	pop    edx
  433ef1:	cs ins DWORD PTR es:[edi],dx
  433ef3:	dec    ecx
  433ef4:	or     ebx,eax
  433ef6:	daa    
  433ef7:	loopne 0x433e7f
  433ef9:	cmp    eax,0x13666706
  433efe:	jle    0x433ef2
  433f00:	retf   
  433f01:	pop    DWORD PTR [ecx-0x4cf22a62]
  433f07:	pusha  
  433f08:	lea    edi,[ebp+0x76]
  433f0b:	mov    ebp,0xfdc891ea
  433f10:	sub    esp,DWORD PTR [ebx+ebp*8]
  433f13:	or     ebx,DWORD PTR [esi+0x1865817f]
  433f19:	pop    edi
  433f1a:	xor    DWORD PTR ds:0x5f8454ca,ecx
  433f20:	jmp    0xa6a9a000
  433f25:	lahf   
  433f26:	in     eax,0xc0
  433f28:	repnz (bad) 
  433f2a:	push   esp
  433f2b:	cmp    cl,ch
  433f2d:	out    0xc3,eax
  433f2f:	xor    BYTE PTR [edx+0x3c],0x95
  433f33:	xlat   BYTE PTR ds:[ebx]
  433f34:	nop
  433f35:	pop    DWORD PTR [edx-0x42c95a9]
  433f3b:	(bad)  
  433f3c:	cwde   
  433f3d:	adc    ecx,edi
  433f3f:	arpl   WORD PTR [eax+0x64],cx
  433f42:	pop    es
  433f43:	jg     0x433f79
  433f45:	jecxz  0x433f7d
  433f47:	mov    ds:0xc4fbbab4,al
  433f4c:	ret    
  433f4d:	lds    eax,FWORD PTR [ecx-0x53edd963]
  433f53:	bound  edi,QWORD PTR [edx+0x51105c23]
  433f59:	scas   al,BYTE PTR es:[edi]
  433f5a:	push   0xc759dc42
  433f5f:	mov    ch,0xf8
  433f61:	and    edx,DWORD PTR [ecx+0x1eb84971]
  433f67:	cmps   BYTE PTR cs:[si],BYTE PTR es:[di]
  433f6a:	rcr    DWORD PTR [ecx-0x2f],cl
  433f6d:	test   al,0x56
  433f6f:	vaddpd xmm0,xmm2,XMMWORD PTR [esi]
  433f73:	lea    edx,[esi+0xd8060be]
  433f79:	jb     0x433f5d
  433f7b:	mov    ebp,0xe25393e5
  433f80:	push   edx
  433f81:	push   esp
  433f82:	cmp    al,0x5
  433f84:	in     al,dx
  433f85:	clc    
  433f86:	int    0x7f
  433f88:	loope  0x433f39
  433f8a:	cmp    eax,0xacb31358
  433f8f:	out    dx,eax
  433f90:	mov    ebx,0xe686abae
  433f95:	xchg   esi,eax
  433f96:	or     edx,esi
  433f98:	ins    DWORD PTR es:[edi],dx
  433f99:	jmp    0xe93f:0x7263ac48
  433fa0:	inc    esi
  433fa1:	inc    edx
  433fa2:	lds    ecx,FWORD PTR [ebx+0x7e]
  433fa5:	repz push 0xffffffa4
  433fa8:	jbe    0x433fff
  433faa:	test   eax,0x1080fee8
  433faf:	and    eax,0xb43378a2
  433fb4:	push   es
  433fb5:	pop    ecx
  433fb6:	test   BYTE PTR [esi],bh
  433fb8:	(bad)
  433fbb:	inc    ecx
  433fbc:	adc    eax,0x3d64d706
  433fc1:	mov    al,ds:0x82eba67d
  433fc6:	and    dh,BYTE PTR [edx]
  433fc8:	nop
  433fc9:	mov    esp,0x9e5693c7
  433fce:	sbb    ebx,DWORD PTR [edi]
  433fd0:	fwait
  433fd1:	sub    edi,ecx
  433fd3:	mov    edx,0x40d93e0f
  433fd8:	jg     0x433ff9
  433fda:	sub    eax,DWORD PTR [eax+ecx*8+0x77]
  433fde:	mov    edx,0x40f27311
  433fe3:	mov    al,0x8f
  433fe5:	mov    WORD PTR [ecx+0x2e],cs
  433fe8:	fmulp  st(1),st
  433fea:	pop    esi
  433feb:	cmp    esi,edi
  433fed:	mov    DWORD PTR [ebx],ebp
  433fef:	jno    0x433fcd
  433ff1:	ins    DWORD PTR es:[edi],dx
  433ff2:	xor    cl,BYTE PTR [eax]
  433ff4:	xor    eax,0x4e7fc3c5
  433ff9:	xchg   BYTE PTR [edx+0x7a353f9a],al
  433fff:	inc    edx
  434000:	loopne 0x434070
  434002:	push   ss
  434003:	push   esp
  434004:	in     al,0x1c
  434006:	in     eax,0xd2
  434008:	inc    ebx
  434009:	and    ecx,0x5e
  43400c:	inc    dx
  43400e:	dec    esp
  43400f:	xchg   edx,eax
  434010:	std    
  434011:	or     al,0x91
  434013:	add    dl,BYTE PTR [edx-0x74332a2d]
  434019:	xchg   edi,eax
  43401a:	fisub  WORD PTR [edx-0x7fadfbd9]
  434020:	mov    bh,0x4
  434022:	xchg   esp,eax
  434023:	jle    0x433fd0
  434025:	pop    ebx
  434026:	bound  edx,QWORD PTR [esi-0x72]
  434029:	pop    es
  43402a:	arpl   dx,sp
  43402c:	inc    ecx
  43402d:	mov    edi,0x8a368398
  434032:	(bad)  
  434033:	sbb    bh,bh
  434035:	add    eax,0x9a8ae9ff
  43403a:	in     al,0xb3
  43403c:	je     0x433fcf
  43403e:	aaa    
  43403f:	fwait
  434040:	adc    eax,0xd624ed4c
  434045:	jne    0x434033
  434047:	imul   ebx,DWORD PTR [edi+0x47],0xfffffff8
  43404b:	into   
  43404c:	lods   eax,DWORD PTR ds:[esi]
  43404d:	bound  esi,QWORD PTR [edx]
  43404f:	inc    esi
  434050:	std    
  434051:	test   al,0x4f
  434053:	dec    ebp
  434054:	fild   DWORD PTR [ecx]
  434056:	out    dx,al
  434057:	mov    ?,WORD PTR [edi+0x77ceb147]
  43405d:	(bad)  
  43405e:	jge    0x4340b0
  434060:	repnz adc eax,0x230c9da8
  434066:	or     bl,BYTE PTR [ebp-0x67236a29]
  43406c:	dec    ecx
  43406d:	pusha  
  43406e:	and    esp,DWORD PTR [edx-0x4d7d95a1]
  434074:	xor    eax,0xbded6d63
  434079:	push   es
  43407a:	xchg   ebp,eax
  43407b:	repz adc al,0x1c
  43407e:	outs   dx,BYTE PTR ds:[esi]
  43407f:	jns    0x43408b
  434081:	pop    ebx
  434082:	pop    edi
  434083:	dec    edi
  434084:	sub    bl,ch
  434086:	mov    BYTE PTR [esi-0x290909b8],0xe7
  43408d:	hlt    
  43408e:	add    dh,ch
  434090:	jb     0x4340d1
  434092:	jb     0x434048
  434094:	xchg   DWORD PTR [ebp+0x72],edx
  434097:	out    0x3c,eax
  434099:	mov    dl,0x57
  43409b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43409c:	fcmovnb st,st(5)
  43409e:	shl    BYTE PTR [esp+edi*4-0x7],0x70
  4340a3:	pop    eax
  4340a4:	aad    0x7b
  4340a6:	add    dh,BYTE PTR [esi+0x74]
  4340a9:	retf   
  4340aa:	dec    esi
  4340ab:	or     edi,esp
  4340ad:	and    ecx,esi
  4340af:	pop    ebx
  4340b0:	fist   WORD PTR [esi]
  4340b2:	add    DWORD PTR [ecx+0x77a028f],ebx
  4340b8:	(bad)  
  4340b9:	retf   
  4340ba:	in     al,0x1
  4340bc:	push   ss
  4340bd:	outs   dx,BYTE PTR ds:[esi]
  4340be:	sbb    ebp,DWORD PTR [ebp+esi*2+0x1e0602b9]
  4340c5:	pop    esp
  4340c6:	add    ebp,ebx
  4340c8:	jb     0x434099
  4340ca:	mov    edi,0xe2f32521
  4340cf:	jp     0x434122
  4340d1:	cmp    cl,cl
  4340d3:	and    BYTE PTR [eax],ch
  4340d5:	loope  0x4340cd
  4340d7:	xor    DWORD PTR [ebp+ebx*2+0x4a],0x1e2a71b1
  4340df:	pop    edi
  4340e0:	or     BYTE PTR [eax-0x6aeb578d],0xae
  4340e7:	sub    DWORD PTR [edx-0x2bde34b5],esp
  4340ed:	pusha  
  4340ee:	xchg   ch,dl
  4340f0:	ins    DWORD PTR es:[edi],dx
  4340f1:	add    edi,DWORD PTR [esp+eax*1+0x217391a5]
  4340f8:	xchg   ebp,eax
  4340f9:	and    al,0x11
  4340fb:	lods   eax,DWORD PTR ds:[esi]
  4340fc:	pop    ecx
  4340fd:	cmp    ch,BYTE PTR ds:0x199204cf
  434103:	and    ecx,DWORD PTR [ecx]
  434105:	adc    al,0xfd
  434107:	mov    ebx,0x6084aac7
  43410c:	jnp    0x4340f1
  43410e:	xlat   BYTE PTR ds:[ebx]
  43410f:	enter  0x40d,0xc
  434113:	sbb    ebp,esi
  434115:	inc    edx
  434116:	mov    cl,0x3f
  434118:	test   eax,0x562c595
  43411d:	loope  0x434105
  43411f:	push   esp
  434120:	inc    eax
  434121:	aad    0x41
  434123:	rol    ecx,1
  434125:	inc    di
  434127:	mov    edi,0xdb17abaf
  43412c:	test   BYTE PTR es:[ecx-0x5128144],dl
  434133:	popa   
  434134:	or     eax,0xffdf7a28
  434139:	data16 ficomp WORD PTR [eax]
  43413c:	mov    ebp,esp
  43413e:	pop    ebx
  43413f:	mov    eax,ds:0x4c13a716
  434144:	dec    esi
  434145:	scas   eax,DWORD PTR es:[edi]
  434146:	fisubr DWORD PTR [ecx-0x70]
  434149:	mov    eax,gs:0x86a86ef3
  43414f:	bound  esi,QWORD PTR [esi-0x3956bf66]
  434155:	fadd   DWORD PTR [edx-0x69]
  434158:	out    0xe2,al
  43415a:	mov    ch,0x6d
  43415c:	push   0x78
  43415e:	std    
  43415f:	xchg   ecx,eax
  434160:	inc    ebx
  434161:	jbe    0x434137
  434163:	push   ss
  434164:	mov    eax,ds:0x980189c7
  434169:	add    bl,BYTE PTR [ebp+0x145d150a]
  43416f:	adc    DWORD PTR [edi],edi
  434171:	or     al,0x53
  434173:	mul    DWORD PTR [edi+0x5e]
  434176:	jne    0x434178
  434178:	dec    esi
  434179:	adc    eax,0x4ce90384
  43417e:	popa   
  43417f:	xchg   BYTE PTR [eax],ch
  434181:	outs   dx,BYTE PTR ds:[esi]
  434182:	fcmovbe st,st(7)
  434184:	lods   eax,DWORD PTR ds:[esi]
  434185:	loop   0x434135
  434187:	outs   dx,BYTE PTR ds:[esi]
  434188:	pop    esp
  434189:	adc    DWORD PTR [eax],0x24
  43418c:	fsub   st(2),st
  43418e:	mov    ds:0x9543e806,eax
  434193:	push   0x92590a17
  434198:	pop    esi
  434199:	xchg   ebp,eax
  43419a:	lock (bad) 
  43419c:	popa   
  43419d:	lahf   
  43419e:	test   eax,0xf075ee72
  4341a3:	jl     0x4341a9
  4341a5:	inc    ecx
  4341a6:	rol    DWORD PTR [edx-0x637e2d59],0xdf
  4341ad:	jb     0x434144
  4341af:	cmp    dh,ah
  4341b1:	test   cl,bl
  4341b3:	sub    al,0x1
  4341b5:	arpl   WORD PTR [ebp-0x35ece353],ax
  4341bb:	addr16 adc cl,cl
  4341be:	ss mov ah,0x3b
  4341c1:	inc    ecx
  4341c2:	call   0xe79:0x7c3ec970
  4341c9:	in     al,dx
  4341ca:	jl     0x4341e9
  4341cc:	xchg   dh,bh
  4341ce:	inc    esp
  4341cf:	push   esp
  4341d0:	icebp  
  4341d1:	pinsrw mm0,WORD PTR [eax+0x2db42299],0x77
  4341d9:	mov    ebx,0x8af8d963
  4341de:	xchg   edi,eax
  4341df:	mov    dl,0x90
  4341e1:	pop    esi
  4341e2:	out    dx,eax
  4341e3:	inc    esp
  4341e4:	enter  0x6287,0x57
  4341e8:	add    eax,0x31d9d5ec
  4341ed:	nop
  4341ee:	leave  
  4341ef:	mov    esi,0x2a95e1ea
  4341f4:	repz shl esp,0x8d
  4341f8:	xchg   ebx,eax
  4341f9:	cmc    
  4341fa:	inc    ebx
  4341fb:	nop
  4341fc:	mov    bl,0x2e
  4341fe:	pop    eax
  4341ff:	push   edi
  434200:	adc    ah,BYTE PTR [ebx-0x7ebec27e]
  434206:	int    0x81
  434208:	loope  0x434194
  43420a:	or     ah,BYTE PTR ss:[ebx-0x80]
  43420e:	jno    0x434203
  434210:	sub    BYTE PTR [ebx+0x13872659],bh
  434216:	std    
  434217:	sbb    ch,BYTE PTR [eax+0x9849174]
  43421d:	inc    edx
  43421e:	sahf   
  43421f:	push   esi
  434220:	jmp    0xc23c19d
  434225:	jmp    0xc27d:0xb7f36aa3
  43422c:	mov    edx,0x8efd223e
  434231:	dec    edi
  434232:	in     eax,0x2d
  434234:	iret   
  434235:	mov    ebx,0x77c8648b
  43423a:	inc    edx
  43423b:	out    0xee,al
  43423d:	mov    al,ds:0xf4b27bb0
  434242:	dec    bp
  434244:	xchg   edx,eax
  434245:	adc    eax,0x9e50d16e
  43424a:	jmp    0x434281
  43424c:	xchg   BYTE PTR ds:0x250430b4,ah
  434252:	arpl   WORD PTR [eax],ax
  434254:	ins    BYTE PTR es:[edi],dx
  434255:	add    BYTE PTR [esi+ebp*1-0x23429fb4],dl
  43425c:	add    BYTE PTR [edx+ecx*8+0xc92b181],cl
  434263:	imul   edi,DWORD PTR [eax],0x8029d156
  434269:	jecxz  0x43424b
  43426b:	and    BYTE PTR [esi],bl
  43426d:	mov    bh,BYTE PTR ds:0xd603b6ce
  434273:	(bad)  
  434274:	pusha  
  434275:	or     al,0x58
  434277:	enter  0x7fa7,0xe2
  43427b:	(bad)  
  43427c:	in     al,0xd3
  43427e:	aas    
  43427f:	out    0x52,eax
  434281:	mov    ds:0x9d382dbd,eax
  434286:	dec    eax
  434287:	add    eax,0x1537fdad
  43428c:	lea    eax,[edi+0x5ef8f41c]
  434292:	push   ebx
  434293:	mov    BYTE PTR [edi-0xb],ah
  434296:	test   BYTE PTR [esp+edi*4+0x5b],0x7b
  43429b:	mov    bh,0x3d
  43429d:	pop    ss
  43429e:	lock cmp DWORD PTR ds:0x910005f2,0x369318f
  4342a9:	xor    al,0xc
  4342ab:	scas   eax,DWORD PTR es:[edi]
  4342ac:	dec    ebp
  4342ad:	(bad)  
  4342ae:	ss sti 
  4342b0:	adc    BYTE PTR [ecx-0x54b95ab5],bl
  4342b6:	xchg   ebp,eax
  4342b7:	out    0x69,eax
  4342b9:	cdq    
  4342ba:	mov    al,0x75
  4342bc:	into   
  4342bd:	hlt    
  4342be:	call   0x7533:0x52778c43
  4342c5:	xor    esi,DWORD PTR [esi]
  4342c7:	shl    DWORD PTR ds:0x48c3b69e,cl
  4342cd:	and    cl,cl
  4342cf:	ss fwait
  4342d1:	or     bh,cl
  4342d3:	xchg   ebp,eax
  4342d4:	mov    ecx,0x524c1a14
  4342d9:	data16 fdivr DWORD PTR [ebx+0x44]
  4342dd:	jae    0x4342da
  4342df:	mov    WORD PTR [ebx-0x2e],es
  4342e2:	adc    ecx,ebx
  4342e4:	outs   dx,DWORD PTR ds:[esi]
  4342e5:	push   es
  4342e6:	jbe    0x43434d
  4342e8:	xor    cl,BYTE PTR [ebx+0x1854fb59]
  4342ee:	pushf  
  4342ef:	pushf  
  4342f0:	push   ebp
  4342f1:	mov    al,0x8e
  4342f3:	clc    
  4342f4:	aam    0x9e
  4342f6:	lahf   
  4342f7:	and    eax,0xb3d6dae6
  4342fc:	gs mov bl,0x30
  4342ff:	jae    0x434308
  434301:	and    DWORD PTR [esi-0x4473c81],edi
  434307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434308:	sbb    eax,0xc687eb94
  43430d:	cmp    DWORD PTR [edi],edx
  43430f:	sbb    BYTE PTR [esi-0x7b],al
  434312:	sbb    eax,0x393540ac
  434317:	push   eax
  434318:	add    BYTE PTR ds:0x577def92,ah
  43431e:	jb     0x4342c2
  434320:	mov    esp,ss
  434322:	out    dx,eax
  434323:	push   0x10
  434325:	outs   dx,DWORD PTR ds:[esi]
  434326:	push   cs
  434327:	ja     0x4342f0
  434329:	push   eax
  43432a:	xchg   esp,eax
  43432b:	test   al,0x91
  43432d:	xor    dh,BYTE PTR [edx]
  43432f:	push   ebp
  434330:	cmp    dl,BYTE PTR [ebp+0x14]
  434333:	xchg   esi,eax
  434334:	test   al,0x1c
  434336:	mov    esp,0x4bf0b5a
  43433b:	test   DWORD PTR [edi-0x6d],eax
  43433e:	js     0x43438e
  434340:	push   0xb9c3f7ef
  434345:	pop    ebx
  434346:	lea    ecx,[ecx+0x4ccba439]
  43434c:	jmp    0xe8cc:0x76c7782a
  434353:	fisubr DWORD PTR [eax-0x26906610]
  434359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43435a:	pop    ds
  43435b:	or     al,0xfc
  43435d:	and    al,0xb4
  43435f:	iret   
  434360:	test   al,0x49
  434362:	sbb    DWORD PTR [esi-0x36],edx
  434365:	into   
  434366:	jnp    0x4342eb
  434368:	xchg   esp,eax
  434369:	shl    BYTE PTR [esi],cl
  43436b:	pop    edi
  43436c:	mov    edi,0x6ca8dcfe
  434371:	imul   edx,DWORD PTR [esi],0xc
  434374:	mul    BYTE PTR [edi-0x79]
  434377:	gs push edx
  434379:	jecxz  0x4343d0
  43437b:	mov    edx,esi
  43437d:	cs aam 0xea
  434380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434381:	mov    ch,0xbb
  434383:	ins    BYTE PTR es:[edi],dx
  434384:	and    al,0xde
  434386:	adc    al,BYTE PTR [esp+ecx*2]
  434389:	fld    QWORD PTR [ebx]
  43438b:	cmp    eax,0x17b0cdba
  434390:	and    esi,DWORD PTR [edi+0x30b90b5c]
  434396:	ds enter 0xc9f9,0x63
  43439b:	and    BYTE PTR [esi+eiz*1+0x8a8be2f],bh
  4343a2:	imul   DWORD PTR [ebp-0x72]
  4343a5:	sub    cl,dl
  4343a7:	stos   DWORD PTR es:[edi],eax
  4343a8:	add    ch,dh
  4343aa:	jne    0x434386
  4343ac:	add    ecx,edi
  4343ae:	dec    ecx
  4343af:	fcomp  st(4)
  4343b1:	scas   al,BYTE PTR es:[edi]
  4343b2:	ret    
  4343b3:	mov    WORD PTR [esi],gs
  4343b5:	call   0xf151:0xe6a1be0f
  4343bc:	cmp    ebx,DWORD PTR [ecx+0x63]
  4343bf:	mul    ch
  4343c1:	xor    eax,0x37913a4a
  4343c6:	(bad)  
  4343c7:	mov    bh,0x3d
  4343c9:	adc    eax,0xd64c60e2
  4343ce:	inc    ebx
  4343cf:	psubusb mm7,QWORD PTR [ebx+0x49a451f5]
  4343d6:	jbe    0x4343b6
  4343d8:	in     al,0x54
  4343da:	mov    ecx,0x480e31fd
  4343df:	mov    al,ds:0x512be36e
  4343e4:	imul   esp,DWORD PTR [ecx-0x57],0xfffffff8
  4343e8:	sti    
  4343e9:	xor    dh,BYTE PTR [ecx-0x6c62e4e5]
  4343ef:	js     0x4343c1
  4343f1:	fchs   
  4343f3:	sub    ch,BYTE PTR [edi+0x39]
  4343f6:	jb     0x4343f2
  4343f8:	sbb    DWORD PTR [eax],ebp
  4343fa:	dec    esp
  4343fb:	dec    esi
  4343fc:	fild   DWORD PTR [ebx+0x4d66121f]
  434402:	sub    BYTE PTR [edi],dl
  434404:	leave  
  434405:	loopne 0x434449
  434407:	loope  0x4343ee
  434409:	outs   dx,BYTE PTR ds:[esi]
  43440a:	ins    BYTE PTR es:[edi],dx
  43440b:	push   esi
  43440c:	sub    edx,DWORD PTR [ecx+0x2d]
  43440f:	call   0x9463:0xdfb48f8b
  434416:	scas   eax,DWORD PTR es:[edi]
  434417:	mov    ss,WORD PTR [ecx]
  434419:	(bad)  
  43441b:	lds    ebx,FWORD PTR [edx]
  43441d:	cs push 0xcb5ece3c
  434423:	in     al,dx
  434424:	jle    0x434493
  434426:	daa    
  434427:	push   ss
  434428:	addr16 loopne 0x43440b
  43442b:	cli    
  43442c:	mov    BYTE PTR [ecx+0x35],0x58
  434430:	xchg   ecx,eax
  434431:	scas   eax,DWORD PTR es:[edi]
  434432:	push   0x3c69c621
  434437:	in     eax,dx
  434438:	push   esi
  434439:	push   es
  43443a:	daa    
  43443b:	xor    edi,DWORD PTR fs:[ebp+0x70]
  43443f:	mov    BYTE PTR [eax-0x3fdcea51],ah
  434445:	fdiv   QWORD PTR ds:0xe5714e7b
  43444b:	push   esp
  43444c:	mov    ebp,0xa34dd021
  434451:	lahf   
  434452:	sub    al,0x11
  434454:	pop    edi
  434455:	stos   DWORD PTR es:[edi],eax
  434456:	lods   eax,DWORD PTR ds:[esi]
  434457:	add    eax,0x72b8f0e
  43445d:	jmp    0xc97ddd1f
  434462:	fistp  DWORD PTR [eax]
  434464:	sbb    BYTE PTR [eax+0x5f],cl
  434467:	push   ss
  434468:	dec    esp
  434469:	nop
  43446a:	icebp  
  43446b:	sub    eax,0xfbb96424
  434470:	int3   
  434471:	mov    edx,0x542f11f2
  434476:	inc    ebx
  434477:	mov    ch,0x71
  434479:	bound  ebp,QWORD PTR [eax-0x1280adea]
  43447f:	jmp    0x434476
  434481:	mov    ebp,0x497cb49
  434486:	(bad)  
  434487:	jbe    0x43443f
  434489:	popf   
  43448a:	adc    ecx,DWORD PTR [edi+ecx*2+0x4504024f]
  434491:	pop    esp
  434492:	icebp  
  434493:	cwde   
  434494:	lds    eax,FWORD PTR [ebx]
  434496:	aad    0xd7
  434498:	fdivr  DWORD PTR ds:0x1b1fc594
  43449e:	cmp    eax,edi
  4344a0:	mov    edi,0x4476dd8
  4344a5:	sub    DWORD PTR [edi-0x50],eax
  4344a8:	and    BYTE PTR [edi-0xf],al
  4344ab:	lock ret 0xcdae
  4344af:	fcmovnb st,st(5)
  4344b1:	sub    edi,0xffffffbf
  4344b4:	and    DWORD PTR [bp+di+0x21ca],ebp
  4344b9:	cdq    
  4344ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4344bb:	fimul  DWORD PTR [edi-0x29]
  4344be:	mov    WORD PTR [eax-0x76],ds
  4344c1:	sahf   
  4344c2:	sbb    eax,0x30a3d251
  4344c7:	mov    cl,0x41
  4344c9:	sbb    edi,DWORD PTR [ecx+edi*8+0x27b26b58]
  4344d0:	push   eax
  4344d1:	es shl esi,1
  4344d4:	lock cmp BYTE PTR [edx+ebx*1],0x7b
  4344d9:	mov    ebp,0xbee177f
  4344de:	and    eax,0x24745a39
  4344e3:	and    ebp,esp
  4344e5:	pushf  
  4344e6:	adc    ebx,edx
  4344e8:	mov    BYTE PTR [eax],cl
  4344ea:	mov    eax,0x9ad4ea27
  4344ef:	xlat   BYTE PTR ds:[ebx]
  4344f0:	xchg   ebx,eax
  4344f1:	add    al,0x6c
  4344f3:	fidivr DWORD PTR [ecx+0x4d]
  4344f6:	daa    
  4344f7:	ds (bad) 
  4344f9:	fwait
  4344fa:	inc    esi
  4344fb:	into   
  4344fc:	inc    edx
  4344fd:	(bad)  
  4344ff:	push   0x46
  434501:	xchg   esp,eax
  434502:	jno    0x43452f
  434504:	or     BYTE PTR [ecx],dh
  434506:	jnp    0x434535
  434508:	mov    ds:0xefdc0722,eax
  43450d:	and    ebp,esi
  43450f:	fcomp  DWORD PTR [ebp-0x3d]
  434512:	xchg   DWORD PTR [ecx+edi*1-0x46],ebp
  434516:	(bad)  
  434517:	push   esp
  434518:	out    dx,al
  434519:	sbb    dh,cl
  43451b:	adc    BYTE PTR [ecx-0x221e56c9],al
  434521:	gs push edx
  434523:	pop    ecx
  434524:	xor    ebx,ebp
  434526:	cwde   
  434527:	pushf  
  434528:	sub    DWORD PTR [edx],esi
  43452a:	fxch   st(2)
  43452c:	lsl    ecx,WORD PTR [ecx+edx*4-0x75]
  434531:	lock (bad) 
  434534:	pop    ebp
  434535:	add    al,0xe5
  434537:	scas   eax,DWORD PTR es:[edi]
  434538:	push   esp
  434539:	sub    al,0x9e
  43453b:	mov    edx,0x32c90d14
  434540:	mov    esp,0x87387367
  434545:	push   ds
  434546:	mov    edx,0xa3671833
  43454b:	leave  
  43454c:	push   esi
  43454d:	dec    edx
  43454e:	sahf   
  43454f:	sub    DWORD PTR [ebp-0x4bcd5207],esi
  434555:	sbb    bh,dl
  434557:	sar    edx,1
  434559:	(bad)  
  43455a:	fwait
  43455b:	push   ebx
  43455c:	pop    edx
  43455d:	add    eax,0xffffffc1
  434560:	add    eax,DWORD PTR [eax+0x61]
  434563:	(bad)  
  434564:	loopne 0x434583
  434566:	xor    eax,0x88f80d05
  43456b:	pop    edx
  43456c:	ja     0x434534
  43456e:	push   ecx
  43456f:	call   0xff70cd48
  434574:	(bad)  
  434575:	out    0x98,al
  434577:	(bad)  
  434578:	nop
  434579:	dec    BYTE PTR [ebx+0x6f40042c]
  43457f:	inc    esi
  434580:	das    
  434581:	add    eax,0x7c46f473
  434586:	xchg   esi,eax
  434587:	and    eax,edx
  434589:	stc    
  43458a:	dec    esp
  43458b:	pop    ecx
  43458c:	int    0xf9
  43458e:	dec    esp
  43458f:	mov    DWORD PTR [edx-0x6d75713a],ebx
  434595:	jmp    0x434523
  434597:	int3   
  434598:	mov    dh,BYTE PTR [edi-0x30f3592d]
  43459e:	(bad)  
  43459f:	cli    
  4345a0:	fdiv   QWORD PTR [edi-0x72]
  4345a3:	inc    eax
  4345a4:	or     eax,0x4fc704e
  4345a9:	push   ecx
  4345aa:	je     0x4345a2
  4345ac:	sbb    al,0xea
  4345ae:	lock jnp 0x4345f1
  4345b1:	push   ebp
  4345b2:	add    DWORD PTR [ebx],ebx
  4345b4:	daa    
  4345b5:	xchg   edx,eax
  4345b6:	pusha  
  4345b7:	xchg   ecx,eax
  4345b8:	add    cl,bl
  4345ba:	lock out 0x6a,eax
  4345bd:	ficomp DWORD PTR [eax]
  4345bf:	fisub  DWORD PTR [esi-0x2951aab4]
  4345c5:	frstor [ebx-0x760d79bf]
  4345cb:	je     0x43461b
  4345cd:	sbb    BYTE PTR [edi+esi*8-0x7e],0x3c
  4345d2:	pop    ebp
  4345d3:	cmp    al,0x5
  4345d5:	inc    ebp
  4345d6:	add    al,0x16
  4345d8:	aad    0x45
  4345da:	test   DWORD PTR [ecx+0x5c],ebx
  4345dd:	push   cs
  4345de:	jnp    0x434585
  4345e0:	div    dh
  4345e2:	imul   eax,esi,0x192f3692
  4345e8:	jmp    0x4226:0x84b0abe3
  4345ef:	ror    DWORD PTR [ebx],cl
  4345f1:	les    ecx,FWORD PTR [ebp-0x50]
  4345f4:	arpl   WORD PTR [bp+si+0x23],dx
  4345f8:	xchg   DWORD PTR [ecx],ecx
  4345fa:	hlt    
  4345fb:	add    ah,BYTE PTR [edx]
  4345fd:	jbe    0x43464d
  4345ff:	mov    WORD PTR [ecx+0xfd21ab8],?
  434605:	std    
  434606:	les    esp,FWORD PTR [edx+esi*2]
  434609:	test   eax,0x4dca631f
  43460e:	xchg   DWORD PTR [edx+0x7f],ebp
  434611:	in     al,dx
  434612:	mov    esp,0xa8ff81d5
  434617:	(bad)  
  434618:	or     ah,BYTE PTR [esi-0xd]
  43461b:	mov    dh,0xf3
  43461d:	push   ecx
  43461e:	rol    esp,1
  434620:	stos   DWORD PTR es:[edi],eax
  434621:	cwde   
  434622:	sbb    BYTE PTR [eax-0xcbe40b4],dl
  434628:	rol    DWORD PTR ds:0xc4b86bff,0x9a
  43462f:	popa   
  434630:	int3   
  434631:	ficomp WORD PTR [edx+0xe5a9873]
  434637:	cmp    DWORD PTR [edi+0x3b34abf3],edi
  43463d:	popf   
  43463e:	adc    edi,eax
  434640:	das    
  434641:	test   DWORD PTR [eax+0x59cc33fa],esp
  434647:	jmp    0xe75c:0xf3aa524b
  43464e:	int    0xcf
  434650:	pusha  
  434651:	stos   BYTE PTR es:[edi],al
  434652:	sub    DWORD PTR [eax+0x5d019bce],edx
  434658:	or     al,0xb9
  43465a:	cmp    DWORD PTR ds:0xa933d17,edi
  434660:	jmp    0x434625
  434662:	in     eax,dx
  434663:	sub    esi,DWORD PTR [ebp+0x3e]
  434666:	hlt    
  434667:	loopne 0x4346c9
  434669:	ja     0x434657
  43466b:	stos   DWORD PTR es:[edi],eax
  43466c:	jae    0x4346de
  43466e:	add    al,0x96
  434670:	add    DWORD PTR [esi],edx
  434672:	mov    esp,0xde377d68
  434677:	or     eax,0x95bd2553
  43467c:	and    al,0x93
  43467e:	mov    ebp,0x952e374d
  434683:	mov    ah,0x4d
  434685:	(bad)
  434688:	call   0x9b31:0x86a162b1
  43468f:	mov    ecx,DWORD PTR [edx]
  434691:	pop    ecx
  434692:	addr16 push esi
  434694:	inc    edi
  434695:	cmp    BYTE PTR [edi+0x515b51e2],cl
  43469b:	fcmovnbe st,st(7)
  43469d:	push   esi
  43469e:	gs sbb eax,0xac8302ac
  4346a4:	mov    edx,0x9ed7845c
  4346a9:	adc    eax,0xd9d465b
  4346ae:	push   eax
  4346af:	rol    BYTE PTR [edi+0x61],1
  4346b2:	popf   
  4346b3:	pop    ds
  4346b4:	dec    eax
  4346b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4346b6:	test   eax,0x89ddf7ed
  4346bb:	scas   al,BYTE PTR es:[edi]
  4346bc:	mov    DWORD PTR [edi-0x7a],esi
  4346bf:	pop    es
  4346c0:	pop    ebx
  4346c1:	retf   0x4ceb
  4346c4:	fcmovnb st,st(0)
  4346c6:	lahf   
  4346c7:	cwde   
  4346c8:	sti    
  4346c9:	xor    cl,dl
  4346cb:	je     0x434728
  4346cd:	add    dh,BYTE PTR [esi]
  4346cf:	push   ds
  4346d0:	xchg   esi,ebx
  4346d2:	xor    edx,DWORD PTR [ebx-0x50]
  4346d5:	sub    DWORD PTR [ebp+0x35b42aff],edi
  4346db:	clc    
  4346dc:	ss call 0x30e4a427
  4346e2:	std    
  4346e3:	aad    0x1b
  4346e5:	(bad)  
  4346e6:	or     bh,ah
  4346e8:	and    BYTE PTR [eax+0x69],bh
  4346eb:	jb     0x434728
  4346ed:	mov    edx,0xd00d4680
  4346f2:	push   edi
  4346f3:	jmp    0x4082:0x9caf50a7
  4346fa:	(bad)  
  4346fb:	(bad)  
  4346fc:	mov    eax,ds:0xc02e0b43
  434701:	or     DWORD PTR [ecx],eax
  434703:	mov    ebp,0xb325210d
  434708:	sbb    eax,0xdbda3a15
  43470d:	clc    
  43470e:	push   ebp
  43470f:	ja     0x4346b4
  434711:	dec    ebx
  434712:	stos   BYTE PTR es:[edi],al
  434713:	push   ds
  434714:	adc    ax,0xee16
  434718:	xchg   ebx,eax
  434719:	fild   DWORD PTR [edx]
  43471b:	xor    BYTE PTR [ebx+0x41c775cb],0xb1
  434722:	sbb    edi,DWORD PTR [edi+0x71]
  434725:	pop    edi
  434726:	pop    ebx
  434727:	xlat   BYTE PTR ds:[ebx]
  434728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434729:	fdiv   QWORD PTR [eax+0x2e]
  43472c:	scas   eax,DWORD PTR es:[edi]
  43472d:	jle    0x43476c
  43472f:	dec    BYTE PTR [esp+eiz*2+0x34e61587]
  434736:	in     eax,0x3
  434738:	aaa    
  434739:	xor    al,0x10
  43473b:	cdq    
  43473c:	cld    
  43473d:	loope  0x4346ce
  43473f:	xchg   esi,eax
  434740:	and    eax,0x2af47865
  434745:	enter  0x43cc,0xf
  434749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43474a:	gs cli 
  43474c:	pop    es
  43474d:	mov    al,0xf0
  43474f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434750:	pop    ebx
  434751:	mov    eax,0xcb26523a
  434756:	mov    ch,0x1b
  434758:	inc    esi
  434759:	mov    bh,al
  43475b:	xor    eax,DWORD PTR [esi+0x49]
  43475e:	mov    ch,0x3
  434760:	add    DWORD PTR [edi+0x38],ecx
  434763:	mov    edx,0x939fc484
  434768:	dec    esp
  434769:	push   es
  43476a:	and    eax,0xfe53a49c
  43476f:	push   0xffffffd0
  434771:	addr16 mov esp,0x511ca9f
  434777:	je     0x43475f
  434779:	inc    edi
  43477a:	aas    
  43477b:	pop    edi
  43477c:	jle    0x4347a0
  43477e:	sahf   
  43477f:	mov    ebp,0x913d4caf
  434784:	int3   
  434785:	jecxz  0x434739
  434787:	es pop ecx
  434789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43478a:	pop    ds
  43478b:	jno    0x4347d9
  43478d:	and    BYTE PTR [ebp+0x4107677],0xc
  434794:	or     BYTE PTR [ebp+0x34f6d1d7],bl
  43479a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43479b:	push   0xf5bf3673
  4347a0:	fisttp QWORD PTR [ebp+0x3c90843d]
  4347a6:	mov    BYTE PTR [ebx-0x82da3cd],ch
  4347ac:	ds pop ebx
  4347ae:	dec    esp
  4347af:	sub    edi,DWORD PTR [ebp+0x2f2abc88]
  4347b5:	xchg   BYTE PTR [esi+ecx*4+0xd],dl
  4347b9:	sbb    dl,dh
  4347bb:	mov    edi,0x6b3f261d
  4347c0:	inc    esi
  4347c1:	ja     0x4347c3
  4347c3:	cmp    edi,DWORD PTR [ebx]
  4347c5:	inc    ebx
  4347c6:	jmp    0xc7dafcfb
  4347cb:	outs   dx,BYTE PTR ds:[esi]
  4347cc:	cmp    al,0xbc
  4347ce:	mov    ch,0xc7
  4347d0:	jge    0x4347d6
  4347d2:	jns    0x4347c9
  4347d4:	lahf   
  4347d5:	in     al,dx
  4347d6:	retf   0x50e5
  4347d9:	mov    dh,0xae
  4347db:	aad    0xf9
  4347dd:	mov    ebx,0x28cb1f36
  4347e2:	add    BYTE PTR [edi],cl
  4347e4:	xchg   edx,eax
  4347e5:	xlat   BYTE PTR ds:[ebx]
  4347e6:	jmp    0x8753:0xe5a8258
  4347ed:	in     al,0x8a
  4347ef:	adc    ecx,edi
  4347f1:	mov    WORD PTR [edx],?
  4347f3:	popf   
  4347f4:	mov    ebx,0x3b9f87ad
  4347f9:	pop    es
  4347fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4347fb:	daa    
  4347fc:	inc    esi
  4347fd:	xor    BYTE PTR [esi+ebp*1+0x5f18b6b7],ah
  434804:	mov    cl,0x10
  434806:	pop    edi
  434807:	out    dx,al
  434808:	stos   DWORD PTR es:[edi],eax
  434809:	ja     0x434815
  43480b:	sbb    BYTE PTR [esi],bl
  43480d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43480e:	sub    eax,0x437279c2
  434813:	fnstenv [ebp-0x4e]
  434816:	inc    edi
  434817:	stos   DWORD PTR es:[edi],eax
  434818:	and    edi,0xa
  43481b:	fnsave [ebp-0x31]
  43481e:	cmp    eax,0xc9a2a46e
  434823:	dec    ebp
  434824:	xchg   edi,eax
  434825:	push   es
  434826:	retf   0xc24e
  434829:	outs   dx,BYTE PTR ds:[esi]
  43482a:	push   0xffffffcd
  43482c:	arpl   ax,cx
  43482e:	cld    
  43482f:	jnp    0x43481d
  434831:	sub    al,ah
  434833:	out    dx,al
  434834:	dec    esp
  434835:	pop    edi
  434836:	and    al,0xfa
  434838:	dec    ecx
  434839:	fisttp WORD PTR [ecx-0xbaaa872]
  43483f:	test   eax,0xd7c64537
  434844:	cmp    edx,DWORD PTR [esi]
  434846:	xchg   DWORD PTR [ebp*1-0x77c3fcaa],eax
  43484d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43484e:	add    edi,DWORD PTR [edx+0x4e867bf]
  434854:	jno    0x434828
  434856:	hlt    
  434857:	pop    esp
  434858:	jnp    0x4347e7
  43485a:	mov    ds:0x3f47aa89,al
  43485f:	or     BYTE PTR [edx-0x42],dl
  434862:	push   0xffffff8e
  434864:	loope  0x434832
  434866:	enter  0x7104,0x72
  43486a:	pop    ebp
  43486b:	fistp  WORD PTR [edi+0x65]
  43486e:	mov    ds:0x3ed82f4a,al
  434873:	mov    esp,0x1ab0d4b8
  434878:	out    dx,al
  434879:	adc    eax,0xa8af5463
  43487e:	mov    BYTE PTR [edx-0x70],bl
  434881:	pop    ds
  434882:	ret    0xa176
  434885:	cmp    esi,0xfdf15974
  43488b:	es pop eax
  43488d:	mov    ah,0xd5
  43488f:	and    eax,DWORD PTR ds:0x8fec5b9c
  434895:	(bad)  ds:[edi-0x36]
  434899:	fisub  DWORD PTR [edi]
  43489b:	mov    ds:0x29702f0f,al
  4348a0:	lds    ebp,FWORD PTR [edi]
  4348a2:	or     ecx,DWORD PTR [ebx+eiz*2+0xb]
  4348a6:	mov    ds:0x5df64f35,al
  4348ab:	cmp    DWORD PTR [esi-0xa],ecx
  4348ae:	mov    WORD PTR [edx],ds
  4348b0:	add    eax,0xe809c5a
  4348b5:	adc    al,0xed
  4348b7:	mov    dl,BYTE PTR [eax+0x75]
  4348ba:	in     eax,0x96
  4348bc:	push   0x58
  4348be:	adc    BYTE PTR [ebp-0xe94d9dd],dh
  4348c4:	std    
  4348c5:	jbe    0x4348a8
  4348c7:	cmp    cl,dl
  4348c9:	add    esi,DWORD PTR [edx+0xb]
  4348cc:	mov    fs,WORD PTR [esi]
  4348ce:	ins    BYTE PTR es:[edi],dx
  4348cf:	push   esp
  4348d0:	mov    al,ds:0xc9bea02e
  4348d5:	ins    DWORD PTR es:[edi],dx
  4348d6:	int    0x9a
  4348d8:	cs sbb eax,0x43e1c015
  4348de:	mov    eax,0x71e1024d
  4348e3:	cs aam 0xf
  4348e6:	popf   
  4348e7:	xor    eax,0xdcab077f
  4348ec:	jmp    0x1deba508
  4348f1:	mov    esp,0x4396cf50
  4348f6:	pop    esi
  4348f7:	or     al,0xcd
  4348f9:	out    dx,eax
  4348fa:	pop    edx
  4348fb:	and    al,0xc1
  4348fd:	adc    DWORD PTR [eax],esi
  4348ff:	hlt    
  434900:	push   es
  434901:	or     eax,0xd5a46f25
  434906:	cmp    DWORD PTR [ebx+0x2501da27],ebp
  43490c:	shl    DWORD PTR [esi+0x5c],0x4c
  434910:	mov    DWORD PTR [edx-0xf],ebp
  434913:	js     0x43498b
  434915:	cmp    al,0x69
  434917:	pop    ebp
  434918:	xchg   ecx,esp
  43491a:	sub    DWORD PTR [ebp-0x14],esi
  43491d:	(bad)  
  43491e:	hlt    
  43491f:	aad    0x16
  434921:	test   al,0x77
  434923:	lahf   
  434924:	pop    es
  434925:	pop    ss
  434926:	aas    
  434927:	push   edi
  434928:	shl    BYTE PTR [edi],cl
  43492a:	icebp  
  43492b:	jp     0x43493d
  43492d:	jp     0x434935
  43492f:	je     0x4348c9
  434931:	test   al,0xd0
  434933:	aas    
  434934:	sbb    BYTE PTR [eax],ah
  434936:	lods   eax,DWORD PTR ds:[esi]
  434937:	cmp    esp,DWORD PTR [edi+0x3e]
  43493a:	push   eax
  43493b:	test   DWORD PTR [edx],edi
  43493d:	sbb    BYTE PTR [edx+0x14a46255],0x46
  434944:	xor    bh,BYTE PTR [ebp+ebp*2+0x3b]
  434948:	out    0x69,al
  43494a:	in     al,0xa6
  43494c:	call   0x6456b882
  434951:	jnp    0x434910
  434953:	mov    edi,0xe3b1c0a3
  434958:	ja     0x4349bd
  43495a:	xlat   BYTE PTR ds:[ebx]
  43495b:	mov    esi,0x36b1b7d8
  434960:	push   0x82d62acf
  434965:	xchg   DWORD PTR [ebx+0x6f],edi
  434968:	mov    DWORD PTR [edi],eax
  43496a:	(bad)  
  43496b:	aas    
  43496c:	inc    esi
  43496d:	or     BYTE PTR ds:0x8c92e7b6,dh
  434973:	cwde   
  434974:	push   ebx
  434975:	jecxz  0x4349da
  434977:	push   esp
  434978:	leave  
  434979:	adc    bh,al
  43497b:	xchg   esi,eax
  43497c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43497d:	ds loopne 0x434923
  434980:	std    
  434981:	ds aaa 
  434983:	dec    edx
  434984:	out    0xc,eax
  434986:	cmp    ecx,DWORD PTR ds:0xf16fca7a
  43498c:	dec    ebx
  43498d:	iret   
  43498e:	fstp   TBYTE PTR [eax]
  434990:	popa   
  434991:	scas   eax,DWORD PTR es:[edi]
  434992:	sbb    eax,0xc53175e6
  434997:	or     al,0xcf
  434999:	or     al,0x2c
  43499b:	addr16 call 0x4aa7:0xb13352a7
  4349a3:	out    0xea,al
  4349a5:	pop    esi
  4349a6:	cmp    cl,dh
  4349a8:	xor    eax,0x64c32570
  4349ad:	mov    dl,dh
  4349af:	stc    
  4349b0:	sbb    dh,dh
  4349b2:	cmp    DWORD PTR [esi+0x7c],eax
  4349b5:	rcr    DWORD PTR [ebx+0x23d734a3],0xcc
  4349bc:	fiadd  DWORD PTR [eax+0x41]
  4349bf:	adc    BYTE PTR [ecx+0x3c],0xe6
  4349c3:	mov    edi,DWORD PTR [esi]
  4349c5:	fwait
  4349c6:	sub    dl,BYTE PTR [esi-0x5193f7ac]
  4349cc:	inc    esi
  4349cd:	xchg   edi,eax
  4349ce:	xor    cl,cl
  4349d0:	pop    edx
  4349d1:	bound  edi,QWORD PTR [esi+ecx*8-0x22]
  4349d5:	cmp    ch,BYTE PTR [eax+0x50]
  4349d8:	or     eax,edx
  4349da:	jecxz  0x4349b8
  4349dc:	dec    ecx
  4349dd:	and    bl,cl
  4349df:	inc    DWORD PTR [edx+0x14]
  4349e2:	jmp    0x4349c0
  4349e4:	and    ebx,ebp
  4349e6:	sti    
  4349e7:	adc    DWORD PTR ds:0x6852e51f,ebx
  4349ed:	mov    ebx,0xabf0bf1b
  4349f2:	add    DWORD PTR [ecx+0x59],ecx
  4349f5:	addr16 dec ebp
  4349f7:	push   esi
  4349f8:	loope  0x4349ce
  4349fa:	dec    ebx
  4349fb:	test   DWORD PTR [edi-0x77d404f3],eax
  434a01:	loopne 0x4349e5
  434a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434a04:	(bad)  
  434a05:	pushf  
  434a06:	mov    bh,cl
  434a08:	pop    ebp
  434a09:	jnp    0x434a23
  434a0b:	sbb    BYTE PTR [eax],0x7a
  434a0e:	pop    edi
  434a0f:	sbb    BYTE PTR [esp+ebp*1],0x4a
  434a13:	mul    BYTE PTR [eax-0x3b]
  434a16:	shl    DWORD PTR [ecx],cl
  434a18:	and    dh,ch
  434a1a:	ins    DWORD PTR es:[edi],dx
  434a1b:	js     0x434a49
  434a1d:	ficom  WORD PTR [ebx-0x6b]
  434a20:	(bad)  
  434a21:	jmp    0xb09e6668
  434a26:	fld    QWORD PTR [edi-0x66]
  434a29:	xor    eax,0xf530301f
  434a2e:	aaa    
  434a2f:	dec    ebp
  434a30:	and    edx,DWORD PTR [esi-0x261fd3f]
  434a36:	and    al,0x87
  434a38:	jge    0x434ab4
  434a3a:	jb     0x434a7c
  434a3c:	or     eax,0xa1613a0d
  434a41:	push   ebx
  434a42:	scas   al,BYTE PTR es:[edi]
  434a43:	sub    al,0xe
  434a45:	idiv   BYTE PTR [eax+0x73c7a8e0]
  434a4b:	fwait
  434a4c:	shl    BYTE PTR [ebx-0x4116ded3],1
  434a52:	popa   
  434a53:	mov    eax,ds:0x525c9acf
  434a58:	push   ecx
  434a59:	dec    eax
  434a5a:	test   dh,bl
  434a5c:	stos   BYTE PTR es:[edi],al
  434a5d:	adc    eax,0xc5e592fa
  434a62:	jge    0x434a0e
  434a64:	sub    eax,0xad085c47
  434a69:	test   esp,0xbf513396
  434a6f:	push   ebx
  434a70:	jmp    0x434ab7
  434a72:	shl    DWORD PTR [ebp-0x6e],1
  434a75:	loope  0x4349ff
  434a77:	push   0x9962372c
  434a7c:	cmp    BYTE PTR [esi+0x17],al
  434a7f:	and    eax,0x234baed8
  434a84:	xlat   BYTE PTR ds:[ebx]
  434a85:	pop    eax
  434a86:	sbb    eax,0x141e16e9
  434a8b:	(bad)  
  434a8c:	mov    bl,cl
  434a8e:	cmp    BYTE PTR ds:0x6ab0706f,ah
  434a94:	push   eax
  434a95:	inc    eax
  434a96:	pop    esi
  434a97:	lods   al,BYTE PTR ds:[esi]
  434a98:	arpl   WORD PTR [ebp+0x7e],si
  434a9b:	int3   
  434a9c:	rcr    ecx,1
  434a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434a9f:	push   es
  434aa0:	mov    ah,0x77
  434aa2:	xor    DWORD PTR [ebx],0x45
  434aa5:	mov    esi,0xaf277a93
  434aaa:	inc    esi
  434aab:	leave  
  434aac:	and    ah,bh
  434aae:	add    eax,0x5a4508c
  434ab3:	or     eax,0x9facf928
  434ab8:	dec    ebx
  434ab9:	jle    0x434acc
  434abb:	xchg   ecx,eax
  434abc:	les    ebx,FWORD PTR [edi+eax*1]
  434abf:	mov    esp,0xa3be65f5
  434ac4:	xchg   DWORD PTR [ecx-0x25],esi
  434ac7:	xchg   DWORD PTR [eax],ebp
  434ac9:	add    eax,0xba66dba1
  434ace:	xor    BYTE PTR [ebx+0x1b],ah
  434ad1:	stc    
  434ad2:	loope  0x434b4c
  434ad4:	mov    edx,0x2efe43b8
  434ad9:	push   esi
  434ada:	int3   
  434adb:	mov    BYTE PTR [edi],0x2b
  434ade:	xchg   edi,eax
  434adf:	inc    ebp
  434ae0:	inc    si
  434ae2:	dec    ebx
  434ae3:	or     DWORD PTR [edi-0x5e],ebp
  434ae6:	xchg   edi,eax
  434ae7:	inc    ecx
  434ae8:	ins    DWORD PTR es:[edi],dx
  434ae9:	int    0xbb
  434aeb:	loopne 0x434aad
  434aed:	scas   al,BYTE PTR es:[edi]
  434aee:	scas   al,BYTE PTR es:[edi]
  434aef:	rcl    BYTE PTR [edi-0x67bd8897],cl
  434af5:	push   cs
  434af6:	retf   
  434af7:	retf   
  434af8:	jmp    0x434a98
  434afa:	push   ss
  434afb:	stc    
  434afc:	pusha  
  434afd:	pop    ebx
  434afe:	push   0x1f
  434b00:	jmp    0x434b18
  434b02:	pusha  
  434b03:	scas   al,BYTE PTR es:[edi]
  434b04:	mov    ds:0x4d69acba,al
  434b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434b0a:	(bad)  
  434b0b:	rcl    bl,cl
  434b0d:	adc    eax,0x14f22fad
  434b12:	pop    esp
  434b13:	shl    DWORD PTR [edi+0x15],1
  434b16:	cdq    
  434b17:	sar    BYTE PTR [eax-0x3381234b],cl
  434b1d:	push   es
  434b1e:	cdq    
  434b1f:	jmp    0xd9205942
  434b24:	jmp    0xe65dfbb9
  434b29:	xlat   BYTE PTR ds:[ebx]
  434b2a:	sbb    al,0xca
  434b2c:	cmp    eax,0x67db8d8d
  434b31:	cdq    
  434b32:	mov    ch,0xf3
  434b34:	mov    dh,0xeb
  434b36:	xchg   edx,eax
  434b37:	mov    dh,0x4a
  434b39:	mov    ch,0x88
  434b3b:	cmp    DWORD PTR [ebp+0x1a],0xacbc7772
  434b42:	call   0xcc3c4cb7
  434b47:	cmp    DWORD PTR [ebx+esi*4],edx
  434b4a:	inc    eax
  434b4b:	xchg   ebx,eax
  434b4c:	stc    
  434b4d:	fwait
  434b4e:	(bad)  
  434b4f:	pushf  
  434b50:	test   DWORD PTR [edi-0x18ab5415],eax
  434b56:	mov    bh,0x8d
  434b58:	jo     0x434b66
  434b5a:	mov    eax,0xa967c2e9
  434b5f:	add    ah,BYTE PTR [esi]
  434b61:	xor    al,0x12
  434b63:	and    ebp,esi
  434b65:	mov    eax,esp
  434b67:	fdiv   DWORD PTR [esi+eax*8+0x46]
  434b6b:	iret   
  434b6c:	pop    eax
  434b6d:	repz add ebp,ebp
  434b70:	xor    eax,0x68892682
  434b75:	daa    
  434b76:	fld    TBYTE PTR [ebx]
  434b78:	push   0x4f16606e
  434b7d:	jmp    0xab25f1d2
  434b82:	aaa    
  434b83:	(bad)  
  434b84:	mov    edi,0x211e0126
  434b89:	jae    0x434bb4
  434b8b:	es fwait
  434b8d:	or     ah,BYTE PTR [edx+0x4b]
  434b90:	inc    edi
  434b91:	xchg   bh,dh
  434b93:	adc    al,0x23
  434b95:	stc    
  434b96:	xor    al,0xd1
  434b98:	inc    DWORD PTR ss:[ebx+0x3d]
  434b9c:	lods   al,BYTE PTR ds:[esi]
  434b9d:	xor    DWORD PTR [ebp+0x30faa302],eax
  434ba3:	mov    esi,0x724ed46
  434ba8:	push   0x3e
  434baa:	inc    ebx
  434bab:	jno    0x434bbc
  434bad:	add    dl,ah
  434baf:	fnstenv [eax+0x78]
  434bb2:	jns    0x434b57
  434bb4:	(bad)  
  434bb5:	pop    ecx
  434bb6:	(bad)  
  434bb7:	jmp    0x6bcb:0xf7c15265
  434bbe:	cmc    
  434bbf:	mov    cl,0xc4
  434bc1:	aad    0xa8
  434bc3:	jae    0x434bb5
  434bc5:	mov    ecx,0x57dd44f7
  434bca:	loope  0x434c24
  434bcc:	pop    ss
  434bcd:	dec    esp
  434bce:	call   0xc7a47409
  434bd3:	fcom   DWORD PTR [ebp+0x34]
  434bd6:	dec    eax
  434bd7:	addr16 repnz repnz xor al,0xcb
  434bdc:	loopne 0x434bd0
  434bde:	xor    ebp,DWORD PTR [eax+0x7894e6c4]
  434be4:	mov    bl,0x62
  434be6:	sub    esp,esi
  434be8:	jp     0x434b87
  434bea:	push   ebx
  434beb:	pushf  
  434bec:	mov    bh,0xa9
  434bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434bef:	mov    dh,0x9a
  434bf1:	sub    al,0x6d
  434bf3:	sbb    DWORD PTR [ebx],edx
  434bf5:	mov    WORD PTR [edi+0x66acba54],cs
  434bfb:	test   bl,cl
  434bfd:	mov    eax,ds:0x24b3efff
  434c02:	mov    ds:0x47b18407,eax
  434c07:	pop    es
  434c08:	mov    eax,0xe18cbfa4
  434c0d:	ret    
  434c0e:	xchg   edx,eax
  434c0f:	data16 add al,0x12
  434c12:	mov    eax,0x1fab2c64
  434c17:	ins    DWORD PTR es:[edi],dx
  434c18:	mov    fs,eax
  434c1a:	and    al,0x6a
  434c1c:	mov    ds:0xc2b99f1a,al
  434c21:	out    dx,eax
  434c22:	or     BYTE PTR [ebx+0x4364a9a6],al
  434c28:	lods   eax,DWORD PTR ds:[esi]
  434c29:	in     al,dx
  434c2a:	inc    esp
  434c2b:	pop    eax
  434c2c:	lods   al,BYTE PTR ss:[esi]
  434c2e:	push   ds
  434c2f:	test   al,0xb5
  434c31:	out    dx,eax
  434c32:	lahf   
  434c33:	fcmovnu st,st(7)
  434c35:	dec    esp
  434c36:	and    dh,cl
  434c38:	push   ss
  434c39:	sub    esi,DWORD PTR [ecx-0x8bf7efe]
  434c3f:	dec    ebp
  434c40:	adc    al,0x61
  434c42:	dec    esp
  434c43:	or     bh,BYTE PTR [esi+0x26]
  434c46:	mov    esp,0xd2fca90f
  434c4b:	adc    eax,0xcf284866
  434c50:	bound  ebp,QWORD PTR [ebp-0xa]
  434c53:	repnz pushf 
  434c55:	xchg   edi,eax
  434c56:	mov    eax,0xec41127e
  434c5b:	sbb    ch,0x94
  434c5e:	sbb    BYTE PTR [eax-0x2a5c0885],al
  434c64:	cwde   
  434c65:	mov    esi,0xb0df598b
  434c6a:	cs (bad) 
  434c6d:	push   ecx
  434c6e:	scas   eax,DWORD PTR es:[edi]
  434c6f:	cdq    
  434c70:	js     0x434cc6
  434c72:	mov    esi,DWORD PTR [esi]
  434c74:	retf   0x5b0c
  434c77:	movhps xmm4,QWORD PTR [ebx]
  434c7a:	jae    0x434c08
  434c7c:	jmp    0x434c52
  434c7e:	fistp  DWORD PTR [ebx]
  434c80:	jmp    0xe862:0x7035de0e
  434c87:	pmullw mm0,QWORD PTR [esi+0x440d25f3]
  434c8e:	jp     0x434cfd
  434c90:	fild   WORD PTR [ecx-0x60f17667]
  434c96:	ret    0xf36f
  434c99:	das    
  434c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c9b:	daa    
  434c9c:	mov    ?,WORD PTR [esp+esi*1+0x7c2dc6bd]
  434ca3:	stos   BYTE PTR es:[edi],al
  434ca4:	shl    BYTE PTR [ebp+edi*8+0x34],0x13
  434ca9:	popa   
  434caa:	mov    WORD PTR [eax+0x62df0754],gs
  434cb0:	mov    ds,WORD PTR [esi-0x25]
  434cb3:	or     BYTE PTR [ebx+eiz*2-0x22],bl
  434cb7:	pusha  
  434cb8:	sbb    eax,0xbaaf57b2
  434cbd:	jo     0x434cbd
  434cbf:	in     eax,dx
  434cc0:	fstp   QWORD PTR [edx+0x38]
  434cc3:	mov    cl,0x49
  434cc5:	xchg   ecx,eax
  434cc6:	mov    es,esi
  434cc8:	fs pop es
  434cca:	and    BYTE PTR [eax+0x7c],al
  434ccd:	stc    
  434cce:	add    esp,DWORD PTR [esi-0x56ce6ddf]
  434cd4:	jo     0x434c80
  434cd6:	neg    dl
  434cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434cd9:	ds aad 0x34
  434cdc:	mov    edx,0x8ed16614
  434ce1:	lods   eax,DWORD PTR ds:[esi]
  434ce2:	mov    ebp,0xdcfc782d
  434ce7:	mov    fs,edx
  434ce9:	pop    es
  434cea:	mov    esi,0x3a5c08e2
  434cef:	lds    ebp,FWORD PTR [eax-0x1a]
  434cf2:	ret    
  434cf3:	imul   esp,DWORD PTR [edi],0xf819fbb
  434cf9:	clc    
  434cfa:	dec    eax
  434cfb:	pop    edx
  434cfc:	lahf   
  434cfd:	fwait
  434cfe:	out    0xd9,al
  434d00:	sub    DWORD PTR [edi-0x58d5bd30],esi
  434d06:	xor    bh,BYTE PTR [edi+0x58]
  434d09:	adc    DWORD PTR [esi],edi
  434d0b:	fld    TBYTE PTR gs:[esi-0x2c8844a8]
  434d12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434d13:	jae    0x434d15
  434d15:	loopne 0x434ca2
  434d17:	push   esp
  434d18:	icebp  
  434d19:	inc    ecx
  434d1a:	cmc    
  434d1b:	push   edi
  434d1c:	or     BYTE PTR [edx-0xb],ah
  434d1f:	or     ecx,0x4f45289e
  434d25:	jge    0x434ce5
  434d27:	imul   edx,DWORD PTR [edi-0x19306058],0xffffffbd
  434d2e:	shr    DWORD PTR [eax-0x6d],cl
  434d31:	adc    ah,dl
  434d33:	stos   DWORD PTR es:[edi],eax
  434d34:	out    0x22,al
  434d36:	sbb    al,0x66
  434d38:	push   edx
  434d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434d3a:	xchg   edx,eax
  434d3b:	sbb    eax,0xa6eb4d40
  434d40:	test   DWORD PTR [eax+0x4767921],esp
  434d46:	fs jecxz 0x434da3
  434d49:	push   0x7fd65aa5
  434d4e:	sub    al,0xcb
  434d50:	loop   0x434dce
  434d52:	xchg   ebp,eax
  434d53:	mov    DWORD PTR [esi+0x4e],ebp
  434d56:	outs   dx,DWORD PTR ds:[esi]
  434d57:	adc    DWORD PTR [esi-0x29494e4c],0xffffffd1
  434d5e:	push   ebx
  434d5f:	rcr    bl,cl
  434d61:	mov    bl,0x93
  434d63:	or     DWORD PTR [edi+0x30],ebp
  434d66:	add    eax,eax
  434d68:	sahf   
  434d69:	les    esi,FWORD PTR [ebx+0x2d076439]
  434d6f:	add    BYTE PTR [ebx],cl
  434d71:	xor    DWORD PTR [ebp-0x66e25f7d],esi
  434d77:	push   0xffffffff
  434d79:	out    dx,eax
  434d7a:	mov    al,ds:0x88e63bc6
  434d7f:	out    dx,al
  434d80:	cdq    
  434d81:	dec    ecx
  434d82:	push   0xd46435a3
  434d87:	retf   0xc716
  434d8a:	xchg   ebx,eax
  434d8b:	push   ds
  434d8c:	dec    ecx
  434d8d:	xor    eax,0xd51f8035
  434d92:	adc    eax,0x363b8690
  434d97:	xchg   bh,dl
  434d99:	pop    ebp
  434d9a:	xor    ch,BYTE PTR [edi-0x5de3ecc0]
  434da0:	inc    esp
  434da1:	mov    edx,0xc805e24a
  434da6:	sbb    al,0xc4
  434da8:	out    dx,eax
  434da9:	mov    bh,BYTE PTR [edx-0x3e9194d]
  434daf:	and    al,0xef
  434db1:	ins    BYTE PTR es:[edi],dx
  434db2:	retf   0xed16
  434db5:	xchg   edx,eax
  434db6:	ja     0x434d50
  434db8:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  434dba:	mov    WORD PTR [ebx],?
  434dbc:	jnp    0x434d54
  434dbe:	adc    BYTE PTR [eax+0x6d4b8dee],bl
  434dc4:	dec    edi
  434dc5:	das    
  434dc6:	ds (bad) 
  434dc8:	xchg   esp,eax
  434dc9:	sub    eax,0xecfb59eb
  434dce:	push   ss
  434dcf:	ret    0x7fb7
  434dd2:	push   ecx
  434dd3:	sbb    eax,0xbc56d8ce
  434dd8:	(bad)  
  434dd9:	pop    ebp
  434dda:	add    ah,BYTE PTR ds:0x490ef5c8
  434de0:	je     0x434dc6
  434de2:	push   es
  434de3:	jecxz  0x434ddb
  434de5:	jp     0x434dbe
  434de7:	add    esi,eax
  434de9:	pop    edi
  434dea:	mov    ch,bl
  434dec:	xchg   bh,cl
  434dee:	mov    edx,0xc3cda032
  434df3:	inc    ebp
  434df4:	inc    esi
  434df5:	inc    ebp
  434df6:	lods   al,BYTE PTR ds:[esi]
  434df7:	push   esi
  434df8:	mov    ds:0x64b6f015,al
  434dfd:	fwait
  434dfe:	push   cs
  434dff:	stos   DWORD PTR es:[edi],eax
  434e00:	inc    ebp
  434e01:	inc    ecx
  434e02:	dec    edi
  434e03:	mov    dl,0xd0
  434e05:	in     eax,dx
  434e06:	cmp    BYTE PTR [edx-0x525765a5],0x1e
  434e0d:	in     eax,0x54
  434e0f:	add    al,0xf5
  434e11:	imul   esi,DWORD PTR [eax-0x33],0xb6da4bd3
  434e18:	(bad)  
  434e19:	hlt    
  434e1a:	lea    esi,[esi+0x49]
  434e1d:	outs   dx,DWORD PTR ds:[esi]
  434e1e:	fs test al,0xca
  434e21:	(bad)  
  434e22:	push   esi
  434e23:	test   al,0x1e
  434e25:	es push 0xc168bd75
  434e2b:	test   al,0xa9
  434e2d:	jo     0x434e06
  434e2f:	shl    DWORD PTR [ecx],cl
  434e31:	sub    eax,0xee069adc
  434e37:	pop    ebp
  434e38:	mov    al,ds:0xfa7c7357
  434e3d:	loope  0x434ead
  434e3f:	aam    0xbe
  434e41:	pop    esi
  434e42:	jno    0x434eb6
  434e44:	mov    bh,0xe0
  434e46:	std    
  434e47:	xor    dl,BYTE PTR [edi+0x5ba1ec73]
  434e4d:	jbe    0x434ec4
  434e4f:	test   eax,0x4f017691
  434e54:	jns    0x434eb4
  434e56:	and    ah,BYTE PTR [edi+0x19]
  434e59:	fwait
  434e5a:	pop    ds
  434e5b:	ds jae 0x434dec
  434e5e:	ret    
  434e5f:	and    bh,bl
  434e61:	fdiv   QWORD PTR [ebp-0x47ced7ee]
  434e67:	xor    al,0xd8
  434e69:	shr    DWORD PTR [ebp+0x7a],0x3a
  434e6d:	pop    ebp
  434e6e:	lahf   
  434e6f:	test   DWORD PTR [ebp-0x2c],0xa09dd531
  434e76:	mov    ecx,edx
  434e78:	dec    esi
  434e79:	fnstcw WORD PTR [edx-0x35be8d7a]
  434e7f:	lods   eax,DWORD PTR ds:[esi]
  434e80:	and    DWORD PTR [ecx+0x8],ebp
  434e83:	mov    cl,0x8e
  434e85:	jge    0x434ed1
  434e87:	or     DWORD PTR [edx+edx*8+0x67],edx
  434e8b:	mov    bl,0xcd
  434e8d:	pop    edi
  434e8e:	arpl   WORD PTR [ecx-0x3e],cx
  434e91:	call   0x81b77492
  434e96:	lods   eax,DWORD PTR ds:[esi]
  434e97:	sub    DWORD PTR [ecx],0xffffffd9
  434e9a:	inc    edx
  434e9b:	add    edx,ebp
  434e9d:	dec    edi
  434e9e:	aam    0xbe
  434ea0:	out    dx,al
  434ea1:	mov    ds:0xa8727695,eax
  434ea6:	jmp    DWORD PTR [ebx-0x24]
  434ea9:	jg     0x434e56
  434eab:	lods   eax,DWORD PTR ds:[esi]
  434eac:	je     0x434ea5
  434eae:	pop    ebp
  434eaf:	enter  0x931,0x1
  434eb3:	cmc    
  434eb4:	cmp    DWORD PTR [ebx-0x164f88cf],esp
  434eba:	mov    dl,0xfc
  434ebc:	dec    ecx
  434ebd:	jp     0x434eac
  434ebf:	scas   eax,DWORD PTR es:[edi]
  434ec0:	push   ecx
  434ec1:	and    al,0xfd
  434ec3:	xchg   esp,eax
  434ec4:	cwde   
  434ec5:	imul   ebp,DWORD PTR [ecx+eax*4-0x1a9312f0],0x46a6c1b7
  434ed0:	popa   
  434ed1:	das    
  434ed2:	pusha  
  434ed3:	fs sbb eax,0xae0af82b
  434ed9:	fcmovne st,st(7)
  434edb:	and    esi,DWORD PTR [edi+0x2f]
  434ede:	jcxz   0x434f58
  434ee1:	icebp  
  434ee2:	test   al,0x39
  434ee4:	dec    edx
  434ee5:	das    
  434ee6:	xchg   DWORD PTR [ebx-0x4ffc5011],esp
  434eec:	test   al,0x8e
  434eee:	mov    es,ebx
  434ef0:	and    ebx,DWORD PTR [edx]
  434ef2:	das    
  434ef3:	cmp    ah,ch
  434ef5:	aaa    
  434ef6:	cmc    
  434ef7:	or     al,0xa6
  434ef9:	jns    0x434e7f
  434efb:	or     ch,BYTE PTR [edx]
  434efd:	cmp    ebp,DWORD PTR [eax]
  434eff:	dec    eax
  434f00:	inc    ebp
  434f01:	into   
  434f02:	ins    BYTE PTR es:[edi],dx
  434f03:	bound  esi,QWORD PTR [ecx+0x5daa165f]
  434f09:	loopne 0x434ebb
  434f0b:	mov    al,ds:0x5ce1420c
  434f10:	push   esp
  434f11:	mov    al,ds:0xcd6ceff
  434f16:	clc    
  434f17:	mov    BYTE PTR [eax+0x4d],dl
  434f1a:	xchg   edi,eax
  434f1b:	xor    eax,0xf2b0e14b
  434f20:	pop    ecx
  434f21:	pop    edi
  434f22:	mov    ds:0x160d5ef4,al
  434f27:	hlt    
  434f28:	out    dx,al
  434f29:	mov    ecx,DWORD PTR [ebx]
  434f2b:	shl    BYTE PTR [eax+esi*1],1
  434f2e:	in     eax,dx
  434f2f:	jge    0x434f91
  434f31:	rol    DWORD PTR [ecx+0x7190da7e],cl
  434f37:	idiv   DWORD PTR [edi+ecx*1]
  434f3a:	clc    
  434f3b:	push   edx
  434f3d:	hlt    
  434f3e:	add    al,0xf8
  434f40:	retf   0x8255
  434f43:	adc    cl,BYTE PTR [ebx]
  434f45:	fimul  DWORD PTR [ebp-0x5e01e29c]
  434f4b:	sub    al,dl
  434f4d:	popf   
  434f4e:	xor    al,0x13
  434f50:	rcr    BYTE PTR [esi],0x0
  434f53:	fsub   DWORD PTR [ecx-0x2]
  434f56:	mov    WORD PTR ds:[edx],cs
  434f59:	outs   dx,DWORD PTR ds:[esi]
  434f5a:	add    al,0x2
  434f5c:	aaa    
  434f5d:	retf   0xc162
  434f60:	aaa    
  434f61:	inc    ebp
  434f62:	jmp    0x18256381
  434f67:	pop    es
  434f68:	xor    ecx,esi
  434f6a:	aam    0xfc
  434f6c:	ins    BYTE PTR es:[edi],dx
  434f6d:	xchg   ecx,eax
  434f6e:	popf   
  434f6f:	inc    edi
  434f70:	into   
  434f71:	cmp    al,BYTE PTR [edx]
  434f73:	cmp    al,0x57
  434f75:	cmp    DWORD PTR [edi-0x3bedc6ae],esp
  434f7b:	fs inc eax
  434f7d:	jmp    0x4c104ca2
  434f82:	xchg   esi,eax
  434f83:	and    al,ah
  434f85:	pop    ebp
  434f86:	adc    dl,dh
  434f88:	fs pop edx
  434f8a:	adc    edi,DWORD PTR [edx]
  434f8c:	mov    ah,0x16
  434f8e:	aas    
  434f8f:	and    al,0x8a
  434f91:	(bad)  
  434f92:	jbe    0x434fb7
  434f94:	ins    DWORD PTR es:[edi],dx
  434f95:	and    edi,DWORD PTR [esi+0x6e]
  434f98:	mov    eax,0x94a8f83d
  434f9d:	into   
  434f9e:	(bad)  
  434f9f:	mov    esp,0xffa6d99c
  434fa4:	mov    ds:0xeb63c6fd,eax
  434fa9:	pop    esp
  434faa:	retf   
  434fab:	push   es
  434fac:	test   cl,0xc6
  434faf:	test   bh,bl
  434fb1:	jmp    0x8954be5a
  434fb6:	xor    al,0xa3
  434fb8:	add    BYTE PTR [ebp+0x8450694],dl
  434fbe:	int    0xc7
  434fc0:	and    ecx,DWORD PTR [ebp-0x79]
  434fc3:	pushf  
  434fc4:	sub    al,0xba
  434fc6:	(bad)  
  434fc7:	lods   al,BYTE PTR ds:[esi]
  434fc8:	mov    eax,0xcc1c5981
  434fcd:	pop    ecx
  434fce:	dec    edi
  434fcf:	test   al,0x5a
  434fd1:	ins    BYTE PTR es:[edi],dx
  434fd2:	ins    DWORD PTR es:[edi],dx
  434fd3:	xchg   esp,eax
  434fd4:	int    0xfb
  434fd6:	jle    0x43500b
  434fd8:	or     eax,0xbc093cea
  434fdd:	push   esp
  434fde:	mov    ebp,0x4cb67bca
  434fe3:	jae    0x434fdf
  434fe5:	jmp    0x435055
  434fe7:	adc    edx,DWORD PTR [edx]
  434fe9:	adc    edx,DWORD PTR ds:0xa64b9d02
  434fef:	sub    al,BYTE PTR [edi+0x758e24e9]
  434ff5:	mov    al,ds:0x8a421dbc
  434ffa:	xchg   ebx,eax
  434ffb:	adc    BYTE PTR [esi-0x50cc53f6],ah
  435001:	inc    eax
  435002:	hlt    
  435003:	lods   eax,DWORD PTR ds:[esi]
  435004:	scas   eax,DWORD PTR es:[edi]
  435005:	add    BYTE PTR [ecx],0x77
  435008:	push   ebp
  435009:	push   0x5c3c6233
  43500e:	xlat   BYTE PTR ds:[ebx]
  43500f:	inc    edi
  435010:	dec    esi
  435011:	cmc    
  435012:	fist   DWORD PTR [esi+0x51]
  435015:	push   0x2b0311cf
  43501a:	rcr    BYTE PTR [ebx+eax*1+0x6e7d3028],0xbd
  435022:	xor    al,0x30
  435024:	and    ecx,DWORD PTR [esi+ebp*8-0x5a5024b0]
  43502b:	out    dx,al
  43502c:	sahf   
  43502d:	inc    ebx
  43502e:	loopne 0x435040
  435030:	add    eax,0x4e97b7ba
  435035:	test   al,0xa9
  435037:	aas    
  435038:	inc    eax
  435039:	int    0x49
  43503b:	iret   
  43503c:	xchg   ecx,eax
  43503d:	scas   al,BYTE PTR es:[edi]
  43503e:	xor    al,BYTE PTR [ecx-0x2e]
  435041:	mov    dl,0xd1
  435043:	jnp    0x435019
  435045:	es dec eax
  435047:	mov    ah,0x94
  435049:	in     eax,0xc0
  43504b:	arpl   WORD PTR [ebp+0x6b32843f],di
  435051:	cmp    al,0xc4
  435053:	fisubr DWORD PTR [esi+0x70926362]
  435059:	es and al,0x3a
  43505c:	clc    
  43505d:	sub    al,0x13
  43505f:	outs   dx,DWORD PTR ds:[esi]
  435060:	call   DWORD PTR [eax+0x44496848]
  435066:	cmp    BYTE PTR [edx-0x6d],al
  435069:	(bad)  
  43506b:	cmp    bl,BYTE PTR ds:0x5f03fdd2
  435071:	xchg   ecx,eax
  435072:	popf   
  435073:	stc    
  435074:	test   bh,al
  435076:	add    BYTE PTR [edx],0x2
  435079:	jecxz  0x435001
  43507b:	pop    ds
  43507c:	pslld  mm2,QWORD PTR [edi]
  43507f:	add    ebx,DWORD PTR [edx+0x5844ecf2]
  435085:	outs   dx,DWORD PTR ds:[esi]
  435086:	xlat   BYTE PTR ds:[ebx]
  435087:	es jge 0x435021
  43508a:	dec    esp
  43508b:	(bad)  
  43508c:	cmp    BYTE PTR [ecx+eiz*4+0xf],al
  435090:	and    ebp,DWORD PTR [edi]
  435092:	mov    esi,0x700f3209
  435097:	lahf   
  435098:	mov    bl,0xdf
  43509a:	dec    edx
  43509b:	int    0x0
  43509d:	pop    edi
  43509e:	mov    ds:0x3bee9fdf,al
  4350a3:	inc    ebx
  4350a4:	mov    dh,0x5
  4350a6:	bound  esi,QWORD PTR [ebp+ebx*4-0x4]
  4350aa:	cmp    eax,0x735fc8ee
  4350af:	fstp   st(7)
  4350b1:	inc    ecx
  4350b2:	sub    al,0x5a
  4350b4:	je     0x4350d4
  4350b6:	addr16 xor ebx,ecx
  4350b9:	cmp    al,0x55
  4350bb:	cli    
  4350bc:	dec    eax
  4350bd:	(bad)  
  4350be:	shl    DWORD PTR [ecx+0x1c],cl
  4350c1:	in     eax,dx
  4350c2:	shl    BYTE PTR [edi-0x13],1
  4350c5:	pop    es
  4350c6:	add    al,0xd1
  4350c8:	or     al,0xae
  4350ca:	fimul  WORD PTR [esp+edi*1]
  4350cd:	jne    0x4350fd
  4350cf:	or     BYTE PTR [eax-0x40faf5f3],dl
  4350d5:	pop    esi
  4350d6:	aad    0x27
  4350d8:	xchg   DWORD PTR [eax-0x10],ebp
  4350db:	retf   0x423d
  4350de:	sub    bl,al
  4350e0:	pop    edx
  4350e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4350e2:	inc    eax
  4350e3:	push   edx
  4350e4:	add    al,0x0
  4350e6:	jns    0x435138
  4350e8:	inc    edx
  4350e9:	jno    0x4350b8
  4350eb:	inc    ecx
  4350ec:	out    0x57,al
  4350ee:	inc    esp
  4350ef:	loop   0x435136
  4350f1:	cmc    
  4350f2:	fnstenv [eax+esi*1-0x481246d6]
  4350f9:	inc    ebp
  4350fa:	fsubrp st(4),st
  4350fc:	dec    eax
  4350fd:	sub    BYTE PTR [ebp+0x35],ah
  435100:	aas    
  435101:	adc    al,0x96
  435103:	mov    esp,0x6f646864
  435108:	push   0x7941c6c7
  43510d:	xor    eax,0x4cea0135
  435112:	nop
  435113:	adc    DWORD PTR [edx-0x73920007],ebx
  435119:	loope  0x4350d0
  43511b:	loop   0x4350e2
  43511d:	xchg   esi,eax
  43511e:	sbb    eax,0x7f6e4911
  435123:	xor    cl,BYTE PTR [esi+0x24]
  435126:	or     cl,BYTE PTR [edi+0x79fbd216]
  43512c:	in     al,0x7c
  43512e:	cmp    DWORD PTR [ebx],ebp
  435130:	and    ah,BYTE PTR [edi+0x1bd46d3f]
  435136:	aas    
  435137:	jno    0x4350be
  435139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43513a:	imul   esi,edx,0xffffffa1
  43513d:	xor    BYTE PTR [esi-0x3c],bh
  435140:	(bad)  
  435141:	test   al,0x49
  435143:	pop    esi
  435144:	xchg   edx,eax
  435145:	(bad)  
  435146:	aas    
  435147:	(bad)  
  435148:	mov    ds:0x848e8d75,al
  43514d:	mov    ebp,0xf3137a25
  435152:	mov    ecx,0xc4dfc10c
  435157:	test   DWORD PTR [ebp+0x5e],ebp
  43515a:	mov    edi,DWORD PTR [esi-0x10c83681]
  435160:	mov    ebp,0xe340cfc
  435165:	xor    al,0xfb
  435167:	adc    ecx,DWORD PTR [ebx+0x216ff667]
  43516d:	and    BYTE PTR [ebx+ecx*4-0x68],dh
  435171:	sbb    BYTE PTR ds:0xfc20fa7d,0x23
  435178:	pop    es
  435179:	aam    0x6e
  43517b:	(bad)  
  43517c:	dec    eax
  43517d:	sub    al,0x84
  43517f:	(bad)  
  435180:	adc    al,0x48
  435182:	pop    esi
  435183:	out    0xd2,al
  435185:	adc    eax,0x17f2b58a
  43518a:	jle    0x4351fb
  43518c:	push   ecx
  43518d:	xor    edx,DWORD PTR [ebx+0x9]
  435190:	add    bl,bl
  435192:	adc    bl,BYTE PTR [ebx-0x41]
  435195:	iret   
  435196:	loopne 0x435206
  435198:	sbb    dh,BYTE PTR [eax+0x40]
  43519b:	retf   0xb026
  43519e:	mov    WORD PTR [ebx+0x3b],cs
  4351a1:	sbb    eax,0x3ac5782f
  4351a6:	jmp    0xd1aa1074
  4351ab:	out    dx,eax
  4351ac:	xchg   edi,eax
  4351ad:	or     DWORD PTR [edi+0x32b2e828],eax
  4351b3:	or     DWORD PTR [edi+ebx*8-0x383a9851],ecx
  4351ba:	sar    DWORD PTR [edx-0x3f20d248],0xfa
  4351c1:	cwde   
  4351c2:	lahf   
  4351c3:	mov    dh,0x28
  4351c5:	jg     0x43521c
  4351c7:	fistp  QWORD PTR [eax-0x7f30e5c6]
  4351cd:	mov    edi,0xab246182
  4351d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351d3:	adc    BYTE PTR [esi-0x33],dh
  4351d6:	mov    eax,0xd6b3fde9
  4351db:	data16 mov cl,0xf4
  4351df:	and    ecx,DWORD PTR [edx]
  4351e1:	xchg   edi,eax
  4351e2:	mov    ah,dl
  4351e4:	sbb    cl,BYTE PTR [ecx+0x7bad5e4c]
  4351ea:	mov    edi,0xfe26604a
  4351ef:	les    eax,FWORD PTR [ebp-0x36]
  4351f2:	cmp    BYTE PTR [ebp-0x29],ah
  4351f5:	adc    BYTE PTR [ebx-0x2d271873],0x4
  4351fc:	sbb    DWORD PTR [ebx+0x33],ebx
  4351ff:	fcomp  DWORD PTR [eax+esi*4-0x76]
  435203:	rol    BYTE PTR [di-0x77],cl
  435207:	push   esp
  435208:	out    0xc7,eax
  43520a:	inc    ebx
  43520b:	dec    esi
  43520c:	lods   eax,DWORD PTR ds:[esi]
  43520d:	test   DWORD PTR [eax+0x43fea148],edi
  435213:	jae    0x43520e
  435215:	loop   0x435239
  435217:	lods   eax,DWORD PTR ds:[esi]
  435218:	and    al,0xfd
  43521a:	retf   0xbce4
  43521d:	pop    es
  43521e:	xchg   edi,eax
  43521f:	or     al,0x2e
  435221:	sti    
  435222:	lods   eax,DWORD PTR ds:[esi]
  435223:	popa   
  435224:	pusha  
  435225:	data16 fist DWORD PTR [edx-0x4f]
  435229:	mov    ds:0x188359ca,eax
  43522e:	jl     0x4351c0
  435230:	mov    esi,0x9d511523
  435235:	aam    0xdb
  435237:	aam    0x9d
  435239:	das    
  43523a:	out    dx,eax
  43523b:	scas   al,BYTE PTR es:[edi]
  43523c:	clc    
  43523d:	mov    ebp,0x2e156692
  435242:	lods   eax,DWORD PTR ds:[esi]
  435243:	call   0x3695:0x1d68df78
  43524a:	ds jo  0x4351e5
  43524d:	out    dx,eax
  43524e:	pusha  
  43524f:	icebp  
  435250:	stos   DWORD PTR es:[edi],eax
  435251:	pop    ss
  435252:	add    eax,0x7a21cfcd
  435257:	and    DWORD PTR [edx-0x4e620296],0x67
  43525e:	cdq    
  43525f:	dec    edi
  435260:	fwait
  435261:	(bad)  
  435262:	pusha  
  435263:	addr16 popf 
  435265:	xor    eax,0x12c341ee
  43526a:	mov    eax,0x882bd505
  43526f:	pop    ebx
  435270:	fldcw  WORD PTR [edi]
  435272:	in     al,0x25
  435274:	fist   DWORD PTR [esp+eiz*4-0x54]
  435278:	test   al,0x10
  43527a:	cmc    
  43527b:	cmp    eax,0x4047ee99
  435280:	push   ebx
  435281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435282:	pusha  
  435283:	pushf  
  435284:	cld    
  435285:	fwait
  435286:	pop    es
  435287:	push   ebp
  435288:	mov    ecx,esp
  43528a:	shr    BYTE PTR [ebp-0x2af2d1ab],0x80
  435291:	mov    al,ds:0x90aed29b
  435296:	xchg   esp,eax
  435297:	icebp  
  435298:	(bad)  [edi]
  43529a:	xor    eax,0xa91db36a
  43529f:	stos   BYTE PTR es:[edi],al
  4352a0:	mov    eax,0x673e7a60
  4352a5:	nop
  4352a6:	ror    BYTE PTR [esp+eax*4],1
  4352a9:	pop    esi
  4352aa:	lods   eax,DWORD PTR ds:[esi]
  4352ab:	psrlw  mm2,QWORD PTR [edx-0x211b44f8]
  4352b2:	adc    dh,cl
  4352b4:	mov    eax,ds:0x5e1bba10
  4352b9:	push   ds
  4352ba:	repz cmp BYTE PTR [edi],al
  4352bd:	and    al,BYTE PTR [edx-0x7b102f28]
  4352c3:	in     al,0x5
  4352c5:	cs lahf 
  4352c7:	or     eax,0x98a5158c
  4352cc:	sub    DWORD PTR [ebx-0x3f2d8b93],esi
  4352d2:	and    ah,ah
  4352d4:	sbb    DWORD PTR [eax-0x21f1a7f9],eax
  4352da:	pop    es
  4352db:	add    DWORD PTR [ecx],ecx
  4352dd:	sbb    dl,BYTE PTR [eax+ebx*4+0x5c]
  4352e1:	jbe    0x43529e
  4352e3:	shl    ebp,cl
  4352e5:	into   
  4352e6:	ss mov edx,0x134cb79e
  4352ec:	lock (bad) 
  4352ee:	mov    dh,BYTE PTR [edx*8-0x63534b7b]
  4352f5:	pop    esi
  4352f6:	loope  0x43536b
  4352f8:	cmp    cl,BYTE PTR [ecx]
  4352fa:	xchg   BYTE PTR [ecx+ebx*1],cl
  4352fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352fe:	inc    edx
  4352ff:	data16 and BYTE PTR [ebx+0x65],0x7e
  435304:	fistp  WORD PTR [esi-0x5f]
  435307:	pusha  
  435308:	(bad)  
  435309:	jp     0x4352b7
  43530b:	icebp  
  43530c:	pop    ss
  43530d:	xchg   DWORD PTR [edx+0x5e2ef56f],esp
  435313:	sub    eax,0x99f52f2b
  435318:	add    esp,DWORD PTR [ebp-0xd]
  43531b:	cmp    eax,0xfd8d6f09
  435320:	leave  
  435321:	or     DWORD PTR [edx+ebx*2-0x14292c5f],ecx
  435328:	mov    edi,0x51ddae01
  43532d:	loop   0x4352bc
  43532f:	mov    edx,DWORD PTR [edx-0x55]
  435332:	(bad)  
  435333:	cmp    al,0x2
  435335:	xchg   esp,eax
  435336:	je     0x43538c
  435338:	push   esp
  435339:	push   esp
  43533a:	push   esp
  43533b:	jg     0x435330
  43533d:	repz inc ebx
  43533f:	aas    
  435340:	nop
  435341:	pop    edi
  435342:	(bad)  
  435343:	in     al,dx
  435344:	addr16 or ch,bl
  435347:	stos   BYTE PTR es:[edi],al
  435348:	es cwde 
  43534a:	lods   al,BYTE PTR ds:[esi]
  43534b:	inc    edi
  43534c:	pop    ds
  43534d:	dec    ecx
  43534e:	pop    ebx
  43534f:	and    eax,0xd1c5c03d
  435354:	and    al,cl
  435356:	ds jl  0x435327
  435359:	xor    al,BYTE PTR ds:[eax]
  43535c:	xor    edx,DWORD PTR [eax+0x2c1a5ea5]
  435362:	or     ax,0x54a6
  435366:	inc    ebp
  435367:	lods   eax,DWORD PTR ds:[esi]
  435368:	(bad)  
  435369:	xor    cl,BYTE PTR [eax+0x74cb635f]
  43536f:	mov    ch,ah
  435371:	mov    edi,0x480f8ca7
  435376:	mov    edi,0x5577b163
  43537b:	push   eax
  43537c:	jno    0x435341
  43537e:	push   0x2d
  435380:	mov    ch,0x5d
  435382:	dec    edi
  435383:	(bad)  
  435385:	sub    ah,BYTE PTR [ecx+0x738e74cb]
  43538b:	pop    edi
  43538c:	ins    BYTE PTR es:[edi],dx
  43538d:	ret    
  43538e:	ret    0xb95
  435391:	lahf   
  435392:	dec    esp
  435393:	mov    eax,0xcd63ab39
  435398:	imul   edi,DWORD PTR [ecx],0xffffffe6
  43539b:	ror    cl,cl
  43539d:	xor    WORD PTR [edx],di
  4353a0:	jl     0x4353e0
  4353a2:	add    DWORD PTR [ebx],ebx
  4353a4:	push   ebp
  4353a5:	mov    ?,WORD PTR ds:0x9fb7205c
  4353ab:	xchg   ebx,eax
  4353ac:	pop    ss
  4353ad:	cmc    
  4353ae:	mov    ds:0xa2d11826,al
  4353b3:	scas   al,BYTE PTR es:[edi]
  4353b4:	jmp    0xb10860ba
  4353b9:	nop
  4353ba:	jmp    0x99fde3c1
  4353bf:	call   0xc0c7:0xe56b33a9
  4353c6:	fwait
  4353c7:	mov    bh,0xf3
  4353c9:	push   0x4ffd7bad
  4353ce:	mov    ?,WORD PTR [ecx-0x3e]
  4353d1:	pop    edi
  4353d2:	inc    ebx
  4353d3:	cmp    esp,DWORD PTR [edx+0xe301cf4]
  4353d9:	mov    ecx,0x6ffa2cc9
  4353de:	mov    ?,WORD PTR [ebx]
  4353e0:	retf   
  4353e1:	inc    esp
  4353e2:	sub    eax,0x8fe329c6
  4353e7:	xor    eax,0x34175800
  4353ec:	jp     0x435387
  4353ee:	or     eax,0x1ce38923
  4353f3:	mov    al,0x67
  4353f5:	or     eax,DWORD PTR [ebx+ecx*2+0x73]
  4353f9:	rcl    DWORD PTR [ebx],1
  4353fb:	dec    edx
  4353fc:	retf   0x4a30
  4353ff:	sti    
  435400:	je     0x4353aa
  435402:	dec    ecx
  435403:	lock shr dl,0xb5
  435407:	or     DWORD PTR [edi+edx*4-0x610763ac],ebx
  43540e:	mov    eax,0x704706ba
  435413:	add    edx,DWORD PTR [ecx-0x946a34e]
  435419:	jnp    0x43542d
  43541b:	std    
  43541c:	leave  
  43541d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43541e:	sbb    eax,0x4be0aec5
  435423:	ret    
  435424:	jb     0x435441
  435426:	call   0xef53f14a
  43542b:	mov    esi,0x531f318
  435430:	cmp    esp,esi
  435432:	sbb    bh,BYTE PTR [ecx+0x7e2be09b]
  435438:	push   cs
  435439:	pop    edi
  43543a:	mov    dh,0x1
  43543c:	adc    dh,bh
  43543e:	xor    ah,BYTE PTR [edx+ebx*4+0x5709adce]
  435445:	sub    eax,0xc4b1b7ee
  43544a:	into   
  43544b:	cdq    
  43544c:	jmp    0xd69186a5
  435451:	stc    
  435452:	into   
  435453:	(bad)  
  435454:	es cli 
  435456:	out    dx,eax
  435457:	push   es
  435458:	xor    al,0x91
  43545a:	aas    
  43545b:	or     bl,BYTE PTR [edi+0x41048fa0]
  435461:	daa    
  435462:	xor    DWORD PTR ds:0xa084cff4,esp
  435468:	lea    ecx,[edx-0x3e]
  43546b:	popf   
  43546c:	pop    esp
  43546d:	xchg   ebx,eax
  43546e:	mov    ebp,0xcac17246
  435473:	fbld   TBYTE PTR [ebp-0x2067bebf]
  435479:	push   edi
  43547a:	out    0x3f,eax
  43547c:	retf   0x3b80
  43547f:	pop    edi
  435480:	xchg   dl,bl
  435482:	mov    DWORD PTR [ecx+0xb182d91],ebx
  435488:	mov    al,0x4
  43548a:	mov    BYTE PTR [ebx+0x1c],cl
  43548d:	mov    ebx,0x6f1570d8
  435492:	xor    DWORD PTR [ecx+0x29],ebp
  435495:	mov    ch,BYTE PTR [eax+0x33]
  435498:	inc    ebx
  435499:	ret    0xe757
  43549c:	cmp    eax,0xd3ba7936
  4354a1:	inc    edi
  4354a2:	gs sub eax,0x21d219dc
  4354a8:	sub    BYTE PTR [edi+0x4],0xc9
  4354ac:	leave  
  4354ad:	les    eax,FWORD PTR [ecx+0x14bec0a2]
  4354b3:	sbb    esi,DWORD PTR [ebx]
  4354b5:	int    0x49
  4354b7:	inc    ebp
  4354b8:	imul   ebx,DWORD PTR [esi+0x76],0x85cc435f
  4354bf:	jnp    0x435446
  4354c1:	imul   edx,DWORD PTR [esi+0x68],0x26
  4354c5:	(bad)  
  4354c6:	and    BYTE PTR [esi-0x5b],dh
  4354c9:	mov    esp,eax
  4354cb:	inc    ebp
  4354cc:	mov    ebx,0x2248402f
  4354d1:	pusha  
  4354d2:	add    bh,BYTE PTR [edx+esi*2]
  4354d5:	xor    ecx,edx
  4354d7:	scas   eax,DWORD PTR es:[edi]
  4354d8:	repz scas al,BYTE PTR es:[edi]
  4354da:	mov    edi,0x5fa64373
  4354df:	sbb    bh,0x76
  4354e2:	imul   esp,DWORD PTR [ebp-0x36689dc4],0xffffff80
  4354e9:	pusha  
  4354ea:	inc    eax
  4354eb:	mulps  xmm7,xmm3
  4354ee:	xor    al,0x7
  4354f0:	(bad)  
  4354f2:	lds    esp,FWORD PTR [edi]
  4354f4:	ficomp DWORD PTR [edx+eax*2+0x3e31dd96]
  4354fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4354fc:	push   ebp
  4354fd:	mov    edx,0x921ecda
  435502:	imul   ecx,DWORD PTR [edx+0x7964524b],0x1c734e8b
  43550c:	push   0xffffffff
  43550e:	xchg   ebx,eax
  43550f:	ret    
  435510:	js     0x435505
  435512:	scas   eax,DWORD PTR es:[edi]
  435513:	scas   eax,DWORD PTR es:[edi]
  435514:	xlat   BYTE PTR ds:[ebx]
  435515:	fs cmp al,0x8b
  435518:	xchg   edx,eax
  435519:	pusha  
  43551a:	loop   0x43558a
  43551c:	(bad)  
  43551d:	dec    esi
  43551e:	push   eax
  43551f:	outs   dx,DWORD PTR ds:[esi]
  435520:	sub    dl,BYTE PTR [ecx]
  435522:	ret    0x90ed
  435525:	scas   al,BYTE PTR es:[edi]
  435526:	push   ebx
  435527:	test   BYTE PTR [edi-0x14],ah
  43552a:	sub    DWORD PTR [ebp-0x49571c18],ebx
  435530:	stos   DWORD PTR es:[edi],eax
  435531:	cmp    al,BYTE PTR [edx-0x22ca7bb0]
  435537:	jl     0x435500
  435539:	adc    al,0xa5
  43553b:	xchg   DWORD PTR [ebx+0x51],esi
  43553e:	(bad)  
  43553f:	mov    cl,0xc5
  435541:	outs   dx,BYTE PTR ds:[esi]
  435542:	xor    edi,edx
  435544:	or     ah,BYTE PTR [edx+0x44a99a0b]
  43554a:	dec    edi
  43554b:	xor    bh,BYTE PTR [ebp+0x35]
  43554e:	push   eax
  43554f:	sar    BYTE PTR [ebp+0x73],cl
  435552:	les    eax,FWORD PTR [edx-0x5765bcaa]
  435558:	xor    BYTE PTR ds:0x45780489,bh
  43555e:	lfs    ebp,FWORD PTR [ecx-0x5e75e2bc]
  435565:	inc    edi
  435566:	sahf   
  435567:	ficom  DWORD PTR [esp+ebx*1+0x7e]
  43556b:	(bad)  
  43556c:	cmc    
  43556d:	stos   DWORD PTR es:[edi],eax
  43556e:	xchg   DWORD PTR [ebx+0x2777d533],esp
  435574:	push   0x7df3cd5f
  435579:	(bad)  
  43557a:	loop   0x4355df
  43557c:	inc    ebp
  43557d:	jae    0x435500
  43557f:	mov    ebx,0x98480cbb
  435584:	mov    ds:0xe87e0c52,al
  435589:	xor    BYTE PTR [eax],dl
  43558b:	iret   
  43558c:	aad    0xec
  43558e:	cmp    BYTE PTR [esi-0x3],dh
  435591:	xchg   ecx,eax
  435592:	loop   0x435547
  435594:	jbe    0x4355fc
  435596:	ficomp WORD PTR [edi-0x13]
  435599:	push   0xffffff9b
  43559b:	scas   eax,DWORD PTR es:[edi]
  43559c:	(bad)  
  43559d:	xlat   BYTE PTR ds:[ebx]
  43559e:	mov    ch,0x4d
  4355a1:	stos   DWORD PTR es:[edi],eax
  4355a2:	or     ebx,DWORD PTR [edx+0x16]
  4355a5:	(bad)  
  4355a6:	push   ds
  4355a7:	cs shr esp,1
  4355aa:	cmp    BYTE PTR [edx-0x6f],0xff
  4355ae:	or     eax,DWORD PTR [ebx+0x7425f8de]
  4355b4:	ds dec edi
  4355b6:	mov    ah,0x6c
  4355b8:	lds    esi,FWORD PTR [edi+eiz*2]
  4355bb:	ret    0xc62c
  4355be:	mov    ah,0x69
  4355c0:	xlat   BYTE PTR ds:[ebx]
  4355c1:	xor    BYTE PTR [ecx],bl
  4355c3:	sub    esp,edi
  4355c5:	test   ecx,0x84198581
  4355cb:	or     cl,bl
  4355cd:	xchg   ebx,eax
  4355ce:	test   al,0x30
  4355d0:	ror    BYTE PTR [edx-0x38],1
  4355d3:	jmp    0x686e3476
  4355d8:	dec    ebp
  4355d9:	add    eax,0x8c89c0d4
  4355de:	test   al,bh
  4355e0:	das    
  4355e1:	out    dx,al
  4355e2:	mov    fs,WORD PTR [esi-0x79678731]
  4355e8:	xchg   dx,ax
  4355ea:	jl     0x43563e
  4355ec:	mov    eax,ds:0x93f39876
  4355f1:	mov    ch,0x9c
  4355f3:	out    0x89,eax
  4355f5:	sbb    bh,0xf9
  4355f8:	sbb    BYTE PTR [edi+0x7b9198ef],cl
  4355fe:	inc    edi
  4355ff:	inc    edx
  435600:	and    esp,eax
  435602:	pop    ebp
  435603:	frstor [eax+0x5db706a7]
  435609:	pop    edi
  43560a:	mov    esi,0x7052d27
  43560f:	or     BYTE PTR fs:[edi+0x7d1319d4],0xd6
  435617:	sub    al,0x20
  435619:	repz mov edx,0xfe8d6019
  43561f:	lock cdq 
  435621:	jge    0x43564a
  435623:	pop    esp
  435624:	mov    ?,WORD PTR [edi]
  435626:	ficomp DWORD PTR [ecx+0x32]
  435629:	mov    eax,0xa16f7c05
  43562e:	adc    ebx,DWORD PTR [esi]
  435630:	es icebp 
  435632:	mov    bh,0xc9
  435634:	in     eax,0x8d
  435636:	xor    ebx,0x892e80c0
  43563c:	push   0x29
  43563e:	sahf   
  43563f:	stos   DWORD PTR es:[edi],eax
  435640:	sbb    eax,0xdce84069
  435645:	add    DWORD PTR [ebx],edx
  435647:	arpl   WORD PTR [edx],dx
  435649:	xchg   ecx,eax
  43564a:	or     dh,BYTE PTR [edx]
  43564c:	mov    edi,0xf825ccf8
  435651:	stos   BYTE PTR es:[edi],al
  435652:	jp     0x4356bd
  435654:	or     al,0x9a
  435656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435657:	push   ebp
  435658:	and    esi,esp
  43565a:	dec    edi
  43565b:	aas    
  43565c:	ss je  0x435691
  43565f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435660:	or     eax,esp
  435662:	dec    edx
  435663:	sbb    bh,BYTE PTR [eax+ecx*8-0xa341f1e]
  43566a:	test   BYTE PTR [edx+0x5a87b72e],dh
  435670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435671:	sub    eax,DWORD PTR [eax]
  435673:	nop
  435674:	ss pop ecx
  435676:	inc    ecx
  435677:	and    eax,0xaa326ca4
  43567c:	add    DWORD PTR [esi],ebx
  43567e:	mov    esp,0x196d210d
  435683:	cmp    eax,0xa1bbe98
  435688:	and    esi,edi
  43568a:	and    esi,DWORD PTR [ebp+0x1e8fb91f]
  435690:	mov    cl,0x23
  435692:	pushf  
  435693:	cmp    BYTE PTR [esi],0x3f
  435696:	mov    eax,ds:0xe685571f
  43569b:	add    al,0x59
  43569d:	mov    dh,0x96
  43569f:	sbb    dh,dl
  4356a1:	mov    ebp,0x8c84d0e
  4356a6:	(bad)  
  4356a7:	mov    ebx,0x8dc4bd50
  4356ac:	mov    edx,ss
  4356ae:	out    0x96,al
  4356b0:	xor    eax,0x82abb152
  4356b5:	ret    
  4356b6:	mov    edx,0x2f546aa8
  4356bb:	lods   al,BYTE PTR ds:[esi]
  4356bc:	add    eax,0xf85ea2d0
  4356c1:	aam    0x21
  4356c3:	loopne 0x4356d0
  4356c5:	loopne 0x4356e7
  4356c7:	mov    ebp,0xde0a6120
  4356cc:	xchg   esp,eax
  4356cd:	sbb    eax,0x105e1773
  4356d2:	push   edi
  4356d3:	pop    eax
  4356d4:	pop    ecx
  4356d5:	test   BYTE PTR [edi],ah
  4356d7:	and    eax,0xc4ddc51c
  4356dc:	mov    edi,0xf83edd7d
  4356e1:	and    DWORD PTR [edx-0x57],esp
  4356e4:	std    
  4356e5:	adc    DWORD PTR [eax+0x26bd3c5f],ebx
  4356eb:	and    dl,0x9f
  4356ee:	xor    eax,0xed85bc28
  4356f3:	test   eax,0x7ccfc429
  4356f8:	shl    DWORD PTR ds:0x815adbf2,0xe8
  4356ff:	shl    DWORD PTR [ecx+ecx*4-0x62],cl
  435703:	in     eax,dx
  435704:	test   esp,eax
  435706:	mov    cl,dh
  435708:	out    0x8b,eax
  43570a:	mov    eax,0x35e0f1a2
  43570f:	shl    BYTE PTR [esi+0x3e],1
  435712:	mov    esp,0xfcb9bce8
  435717:	xchg   edx,eax
  435718:	pop    eax
  435719:	dec    ebx
  43571a:	rcr    DWORD PTR [ebx],cl
  43571c:	add    dh,ah
  43571e:	fdiv   DWORD PTR [ecx-0x2adf6b3d]
  435724:	mov    ah,BYTE PTR [esi-0x721ff09d]
  43572a:	sbb    al,0x33
  43572c:	xchg   edx,eax
  43572d:	and    BYTE PTR [esi],ah
  43572f:	sub    bl,bl
  435731:	(bad)  
  435732:	out    dx,al
  435733:	stos   DWORD PTR es:[edi],eax
  435734:	jno    0x435709
  435736:	nop
  435737:	repnz rol BYTE PTR [edi],cl
  43573a:	xchg   esi,eax
  43573b:	mov    edi,gs
  43573d:	cld    
  43573e:	lahf   
  43573f:	es ins BYTE PTR es:[edi],dx
  435741:	daa    
  435742:	mov    edi,0xe96e60e5
  435747:	xlat   BYTE PTR ds:[ebx]
  435748:	sub    DWORD PTR [edx-0x24452ba8],edx
  43574e:	sahf   
  43574f:	jae    0x4357b0
  435751:	mov    eax,0xa0b2556c
  435756:	ja     0x4356f1
  435758:	jle    0x4357aa
  43575a:	mov    edi,0x9da1bad1
  43575f:	push   eax
  435760:	retf   0xa458
  435763:	rcr    DWORD PTR [esp+eax*4-0x4d38b720],0xdc
  43576b:	mov    esi,0xce3097da
  435770:	dec    ebp
  435771:	stc    
  435772:	and    esi,DWORD PTR [ecx+edx*8]
  435775:	mov    al,ds:0x879e9cec
  43577a:	and    al,0xf6
  43577c:	ja     0x435789
  43577e:	cmc    
  43577f:	inc    ebp
  435780:	pop    ebx
  435781:	test   BYTE PTR [ecx],al
  435783:	lock sbb ch,BYTE PTR [ebp+0x1e]
  435787:	mov    ch,0x8e
  435789:	mov    edi,0x4005e0e3
  43578e:	mov    DWORD PTR [eax],ebp
  435790:	hlt    
  435791:	mov    DWORD PTR [edi+0x1c],edx
  435794:	pop    ds
  435795:	outs   dx,DWORD PTR ds:[esi]
  435796:	xlat   BYTE PTR ds:[ebx]
  435797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435798:	or     DWORD PTR [ebp-0x57f4106d],ecx
  43579e:	add    ebx,DWORD PTR [esi-0x40ff4636]
  4357a4:	add    cl,BYTE PTR [edx+0x48]
  4357a7:	lahf   
  4357a8:	pop    es
  4357a9:	cdq    
  4357aa:	xor    dh,dl
  4357ac:	repnz push es
  4357ae:	test   eax,0x807431cb
  4357b3:	pop    ebx
  4357b4:	xlat   BYTE PTR ds:[ebx]
  4357b5:	jnp    0x435795
  4357b7:	cdq    
  4357b8:	loopne 0x43580f
  4357ba:	mov    ebx,0xa259cae4
  4357bf:	shl    eax,1
  4357c1:	inc    esp
  4357c2:	mov    BYTE PTR ds:0xdcdb718b,cl
  4357c8:	xor    cl,cl
  4357ca:	jl     0x4357fe
  4357cc:	out    0x17,eax
  4357ce:	xchg   ecx,edi
  4357d0:	xchg   esp,eax
  4357d1:	leave  
  4357d2:	daa    
  4357d3:	or     al,0x88
  4357d5:	(bad)  
  4357d6:	std    
  4357d7:	sub    al,0xf1
  4357d9:	cmp    BYTE PTR [esi+0x7c],dh
  4357dc:	pop    edi
  4357dd:	pop    edi
  4357de:	xchg   ebx,esi
  4357e0:	mul    ecx
  4357e2:	bound  edi,QWORD PTR [ecx-0x58]
  4357e5:	int3   
  4357e6:	fcmovb st,st(3)
  4357e8:	call   0x31a4b401
  4357ed:	cmc    
  4357ee:	jne    0x435847
  4357f0:	xchg   edx,eax
  4357f1:	or     edi,esi
  4357f3:	call   0x362aef87
  4357f8:	jmp    0x4357f4
  4357fa:	add    eax,ebp
  4357fc:	sub    esp,DWORD PTR [edi+ebx*2+0x52]
  435800:	xor    esp,DWORD PTR [edi-0x54]
  435803:	dec    esi
  435804:	cmp    DWORD PTR [edi],0x7b
  435807:	(bad)  
  435808:	arpl   WORD PTR [esi],cx
  43580a:	in     eax,0x77
  43580c:	add    DWORD PTR [ecx+0x1e],esi
  43580f:	sub    DWORD PTR es:[ebx],esp
  435812:	sub    al,0xd8
  435814:	jne    0x4357c8
  435816:	outs   dx,DWORD PTR ds:[esi]
  435817:	nop    DWORD PTR [edx]
  43581a:	sub    BYTE PTR [ebx-0x2c298d43],al
  435820:	sbb    BYTE PTR [eax-0x757526d4],0x37
  435827:	or     al,0x49
  435829:	pop    edi
  43582a:	(bad)  
  43582b:	outs   dx,DWORD PTR ds:[esi]
  43582c:	popf   
  43582d:	add    ebp,DWORD PTR [ebp+0x31]
  435830:	in     al,0xaa
  435832:	imul   esi,DWORD PTR [esi-0x3f4f15b6],0xfffffff1
  435839:	fsincos 
  43583b:	pusha  
  43583c:	std    
  43583d:	push   0x4
  43583f:	dec    ecx
  435840:	pushf  
  435841:	cli    
  435842:	icebp  
  435843:	jnp    0x4357e3
  435845:	lahf   
  435846:	dec    edi
  435847:	imul   edx,ebp,0x8e87b6e
  43584d:	rol    BYTE PTR [eax-0xe],0xae
  435851:	add    dh,BYTE PTR [eax-0x5b]
  435854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435855:	(bad)  
  435856:	imul   eax,esp,0xab25f3a4
  43585c:	ins    BYTE PTR es:[edi],dx
  43585d:	fidivr DWORD PTR [edi+0x7a]
  435860:	test   al,0xcf
  435862:	and    DWORD PTR [ebx+0x3c],ebx
  435865:	mov    esp,0xc2adfaf8
  43586a:	out    0x56,eax
  43586c:	retf   0x9903
  43586f:	and    DWORD PTR [edi+edx*1-0x2185ef03],ecx
  435876:	xchg   BYTE PTR [ecx-0x65],bl
  435879:	inc    esi
  43587a:	dec    esp
  43587b:	mov    ds:0x19848fbd,al
  435880:	inc    ecx
  435881:	pop    ecx
  435882:	dec    edx
  435883:	mov    BYTE PTR [eax-0x1d],bh
  435886:	jp     0x4358ae
  435888:	stc    
  435889:	add    DWORD PTR [ecx],0x248bea4c
  43588f:	inc    edx
  435890:	fdiv   DWORD PTR [edi+0x19]
  435893:	xor    al,0x53
  435895:	mov    ebx,0x43b36451
  43589a:	jo     0x43582a
  43589c:	cmp    al,0xd9
  43589e:	jns    0x435911
  4358a0:	cwde   
  4358a1:	jae    0x4358d0
  4358a3:	dec    edx
  4358a4:	sbb    DWORD PTR [eax+0x6b83f860],esp
  4358aa:	mov    al,0xc3
  4358ac:	out    0xb5,eax
  4358ae:	adc    BYTE PTR [ecx+edx*1+0x5246060a],al
  4358b5:	mov    al,ds:0x523548ae
  4358ba:	add    eax,0x8bf1ddb7
  4358bf:	(bad)  
  4358c0:	out    dx,eax
  4358c1:	pop    esi
  4358c2:	adc    BYTE PTR [ebx-0x11],al
  4358c5:	sbb    DWORD PTR [edx+0x739bf091],0x6cca38b4
  4358cf:	push   ds
  4358d0:	ss dec ecx
  4358d2:	and    BYTE PTR [edi+eiz*1+0x5dcba538],al
  4358d9:	cmp    BYTE PTR [esp+eax*1-0x734cbe69],dh
  4358e0:	or     BYTE PTR [edi+0x4a6b9622],cl
  4358e6:	xor    al,0x77
  4358e8:	cmp    BYTE PTR [esi-0x77],dh
  4358eb:	pop    DWORD PTR [eax-0x6d]
  4358ee:	scas   eax,DWORD PTR es:[edi]
  4358ef:	or     BYTE PTR ds:0x81262cce,0xe0
  4358f6:	test   eax,0x2e5dc005
  4358fb:	lahf   
  4358fc:	push   esp
  4358fd:	jl     0x43593e
  4358ff:	xchg   ebp,eax
  435900:	aad    0xfb
  435902:	retf   0x8852
  435905:	xchg   BYTE PTR [esp+ebp*1-0x8472eb0],ch
  43590c:	cld    
  43590d:	repnz outs dx,DWORD PTR ds:[esi]
  43590f:	or     al,dl
  435911:	stc    
  435912:	fcmovnb st,st(4)
  435914:	pop    eax
  435915:	mov    ds:0x1dfad81b,eax
  43591a:	pop    ss
  43591b:	fwait
  43591c:	mov    al,al
  43591e:	(bad)  
  43591f:	and    eax,0x5665c87b
  435924:	and    DWORD PTR [ebx+0x3c],edx
  435927:	mov    dh,0x88
  435929:	icebp  
  43592a:	test   BYTE PTR [ecx+edx*4-0x394f34c0],cl
  435931:	out    dx,al
  435932:	jp     0x435991
  435934:	call   0x7372d700
  435939:	mov    esi,0xfe214881
  43593e:	(bad)  
  43593f:	ja     0x4359a1
  435941:	mov    cl,0xf
  435943:	adc    BYTE PTR [ebp-0x1c8008c3],0x19
  43594a:	or     ebp,esi
  43594c:	or     al,0x1
  43594e:	xchg   ebx,eax
  43594f:	jbe    0x4358d8
  435951:	dec    esi
  435952:	ficom  WORD PTR [esi-0x515ad29]
  435958:	mov    ds:0x6386d516,al
  43595d:	dec    edi
  43595e:	fsubrp st(2),st
  435960:	ins    BYTE PTR es:[edi],dx
  435961:	and    esi,DWORD PTR [edi]
  435963:	rcl    esi,1
  435965:	cs aad 0x34
  435968:	lock fidivr DWORD PTR [edi+0x50]
  43596c:	bnd jp 0x435992
  43596f:	sbb    BYTE PTR [ebp-0x5d],bl
  435972:	push   ebp
  435973:	jg     0x43592b
  435975:	pop    ds
  435976:	jns    0x43599c
  435978:	jle    0x435965
  43597a:	push   ss
  43597b:	mul    edi
  43597d:	clc    
  43597e:	into   
  43597f:	xchg   ebp,eax
  435980:	fwait
  435981:	or     eax,0x137925e5
  435986:	and    al,BYTE PTR [ecx-0x2b]
  435989:	(bad)  [ecx]
  43598b:	mov    ebx,0xb3a61313
  435990:	je     0x435996
  435992:	mov    ds:0x6120bad1,eax
  435997:	sub    BYTE PTR [esi+ecx*8],dl
  43599a:	fucomip st,st(6)
  43599c:	imul   edi,DWORD PTR [esi],0x15
  43599f:	cdq    
  4359a0:	cs adc ah,ah
  4359a3:	jnp    0x435a0d
  4359a5:	pusha  
  4359a6:	xor    BYTE PTR [edi-0x59a31a81],bl
  4359ac:	add    DWORD PTR [edi+0x64],ebp
  4359af:	test   al,0x13
  4359b1:	mov    esi,0x49648ad0
  4359b6:	pop    eax
  4359b7:	daa    
  4359b8:	shl    BYTE PTR [ecx-0x51],cl
  4359bb:	add    esp,esi
  4359bd:	add    al,0xcd
  4359bf:	scas   eax,DWORD PTR es:[edi]
  4359c0:	rol    DWORD PTR [ebx-0x3ca269c5],0x78
  4359c7:	push   cs
  4359c8:	push   edi
  4359c9:	inc    ebp
  4359ca:	xchg   ebp,eax
  4359cb:	loopne 0x435986
  4359cd:	int    0x8d
  4359cf:	shl    BYTE PTR [esi-0x1bb5bc5c],1
  4359d5:	sbb    DWORD PTR [edi],esi
  4359d7:	xor    al,0x7b
  4359d9:	inc    edi
  4359da:	stc    
  4359db:	dec    esi
  4359dc:	mov    dl,0xd3
  4359de:	xchg   ecx,eax
  4359df:	mov    eax,ds:0x10a1543b
  4359e4:	mov    ebp,0x775aa0f8
  4359e9:	jle    0x4359b0
  4359eb:	and    eax,edx
  4359ed:	and    ebp,DWORD PTR [esi+0x1b]
  4359f0:	jle    0x435a28
  4359f2:	pushf  
  4359f3:	xchg   ecx,eax
  4359f4:	in     al,0x2
  4359f6:	mov    ebx,DWORD PTR [ebp+0x75]
  4359f9:	fst    st(5)
  4359fb:	ss jle 0x435a54
  4359fe:	fcom   QWORD PTR [edi]
  435a00:	pop    esi
  435a01:	daa    
  435a02:	pop    eax
  435a03:	jp     0x435a76
  435a05:	test   dh,bh
  435a07:	xor    bl,al
  435a09:	rol    DWORD PTR [edi-0x12],cl
  435a0c:	in     al,dx
  435a0d:	data16 add al,0xb7
  435a10:	sub    BYTE PTR [edx+0x53cd4de5],0x86
  435a17:	ds pop es
  435a19:	adc    bh,BYTE PTR [eax]
  435a1b:	push   ds
  435a1c:	cld    
  435a1d:	jge    0x435a82
  435a1f:	and    BYTE PTR [esi+ebp*1-0x755cc29b],0x16
  435a27:	sbb    al,0xdd
  435a29:	cwde   
  435a2a:	iret   
  435a2b:	pop    ecx
  435a2c:	mov    esi,0xc394254f
  435a31:	cmp    DWORD PTR [eax],0xfffffffb
  435a34:	cmp    BYTE PTR ds:0x7715bc74,al
  435a3a:	jg     0x435a4c
  435a3c:	(bad)  
  435a3d:	cmp    ebx,edi
  435a3f:	jae    0x435abf
  435a41:	pop    es
  435a42:	addr16 add eax,0xb3b99a47
  435a48:	adc    al,0xfd
  435a4a:	out    dx,al
  435a4b:	(bad)  
  435a4c:	pusha  
  435a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a4e:	dec    ebp
  435a4f:	aam    0x9d
  435a51:	dec    esi
  435a52:	inc    esi
  435a53:	mov    esp,DWORD PTR [ebp+0x54]
  435a56:	mov    al,0xa3
  435a58:	in     al,dx
  435a59:	mov    ecx,0xd2d6d008
  435a5e:	xchg   esp,eax
  435a5f:	ds xor dh,bl
  435a62:	or     BYTE PTR [esi],ch
  435a64:	cmp    DWORD PTR [edi],ebx
  435a66:	cmp    eax,0x1dacec25
  435a6b:	rcr    DWORD PTR [ebx+0x329ce72c],0xec
  435a72:	rcr    BYTE PTR [esi+0x29],1
  435a75:	lea    esi,[edx+0x51022a64]
  435a7b:	xor    al,0xf7
  435a7d:	xlat   BYTE PTR ds:[ebx]
  435a7e:	or     esp,ebp
  435a80:	mov    edx,0x4f507c5
  435a85:	hlt    
  435a86:	mov    al,ds:0xb0b159cc
  435a8b:	aam    0x44
  435a8d:	add    ebp,DWORD PTR ds:0x361cf2f3
  435a93:	lods   al,BYTE PTR ds:[esi]
  435a94:	xor    ecx,0x4964576e
  435a9a:	out    0x5b,eax
  435a9c:	fcmovnbe st,st(7)
  435a9e:	pop    ebp
  435a9f:	fld    DWORD PTR [esi-0x15d86d09]
  435aa5:	add    DWORD PTR ds:0xa006b28d,ecx
  435aab:	shl    BYTE PTR [ecx+0x7de5d9db],0xde
  435ab2:	dec    ebx
  435ab3:	shl    eax,0xb1
  435ab6:	jns    0x435aad
  435ab8:	je     0x435b23
  435aba:	cmc    
  435abb:	test   al,0x8b
  435abe:	adc    bl,BYTE PTR [esi*2+0x40264f58]
  435ac5:	mov    ch,0x34
  435ac7:	pusha  
  435ac8:	inc    ebx
  435ac9:	mov    esi,0xefa824fd
  435ace:	jb     0x435a53
  435ad0:	aad    0xc
  435ad2:	sub    cl,BYTE PTR [eax-0x68]
  435ad5:	pmuludq mm6,QWORD PTR [eax+0x6]
  435ad9:	jge    0x435b0d
  435adb:	pop    eax
  435adc:	in     al,0xd6
  435ade:	add    ebp,edx
  435ae0:	nop
  435ae1:	mov    edx,0x3dcceb96
  435ae6:	pop    edx
  435ae7:	ror    BYTE PTR [esi+0x0],cl
  435aea:	into   
  435aeb:	add    al,0xd3
  435aed:	cs and al,0x24
  435af0:	ins    BYTE PTR es:[edi],dx
  435af1:	mov    ch,0x1c
  435af3:	popf   
  435af4:	mov    bh,0x3a
  435af6:	xchg   esi,eax
  435af7:	scas   eax,DWORD PTR es:[edi]
  435af8:	dec    ebp
  435af9:	fnstenv [edi-0x5e]
  435afc:	out    0xff,al
  435afe:	lods   eax,DWORD PTR ds:[esi]
  435aff:	fs aam 0xfd
  435b02:	test   DWORD PTR [ecx],esi
  435b04:	pop    es
  435b05:	jnp    0x435b2d
  435b07:	jmp    0xa2371fcb
  435b0c:	ja     0x435b58
  435b0e:	fiadd  DWORD PTR [esi+esi*1+0x4451cf22]
  435b15:	jmp    0x435ad1
  435b17:	adc    ah,BYTE PTR [ebp+edi*4-0x76]
  435b1b:	call   0x5185bd77
  435b20:	not    DWORD PTR [eax+eiz*4-0x6d6fba7e]
  435b27:	das    
  435b28:	retf   
  435b29:	test   BYTE PTR [edx+0x74a8dbb3],cl
  435b2f:	fwait
  435b30:	or     eax,0x18957d01
  435b35:	push   esi
  435b36:	(bad)  
  435b37:	inc    eax
  435b38:	fcom   QWORD PTR [esi+0x73049407]
  435b3e:	fadd   QWORD PTR cs:[esi]
  435b41:	jle    0x435b66
  435b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435b44:	xchg   BYTE PTR [esi+0x9497c0],al
  435b4a:	jp     0x435baf
  435b4c:	mov    ds:0x385a16d4,eax
  435b51:	int3   
  435b52:	loopne 0x435b7b
  435b54:	adc    DWORD PTR [esi],esp
  435b56:	add    DWORD PTR [eax+0x756fe4cb],eax
  435b5c:	pop    ds
  435b5d:	inc    ebx
  435b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435b5f:	(bad)  
  435b60:	dec    eax
  435b61:	sbb    eax,0x9efe5fbb
  435b66:	push   cs
  435b67:	mov    bl,0xda
  435b69:	repnz shr bl,0x2d
  435b6d:	in     eax,0x2b
  435b6f:	or     ebp,DWORD PTR [ebx-0x67]
  435b72:	lods   eax,DWORD PTR ds:[esi]
  435b73:	jmp    0xdabd04e1
  435b78:	jbe    0x435b7a
  435b7a:	std    
  435b7b:	arpl   WORD PTR [edx],ax
  435b7d:	xchg   ebx,eax
  435b7e:	shr    DWORD PTR [ecx+0x75],1
  435b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435b82:	push   ecx
  435b83:	pop    esp
  435b84:	sub    DWORD PTR [edx],eax
  435b86:	in     al,dx
  435b87:	not    al
  435b89:	xlat   BYTE PTR ds:[ebx]
  435b8a:	jno    0x435bf1
  435b8c:	popf   
  435b8d:	rol    ebp,0x35
  435b90:	out    0x43,eax
  435b92:	inc    ecx
  435b93:	add    al,0x36
  435b95:	inc    ebx
  435b96:	dec    esp
  435b97:	mov    ds:0xd2d5ba11,eax
  435b9c:	cmp    edx,DWORD PTR [esp+edi*8]
  435b9f:	xchg   ecx,eax
  435ba0:	sub    al,0x2d
  435ba2:	jbe    0x435b5b
  435ba4:	and    al,ch
  435ba6:	(bad)  
  435ba7:	adc    BYTE PTR [edi-0x36],ch
  435baa:	outs   dx,DWORD PTR ds:[esi]
  435bab:	into   
  435bac:	call   0x8875:0xafcb8e44
  435bb3:	arpl   WORD PTR [edi],ax
  435bb5:	mov    dl,0xa3
  435bb7:	xchg   esp,eax
  435bb8:	xchg   DWORD PTR [edx-0xa],eax
  435bbb:	out    dx,al
  435bbc:	mov    ds:0xadc67209,al
  435bc1:	aaa    
  435bc2:	mov    ebx,0x3dd3c22b
  435bc7:	mov    dl,0x32
  435bc9:	pop    edi
  435bca:	jl     0x435c08
  435bcc:	adc    BYTE PTR [ecx+0x5f],0x49
  435bd0:	icebp  
  435bd1:	or     ecx,DWORD PTR [ebp+0x2d6ec835]
  435bd7:	mov    edx,0xae2708b3
  435bdc:	mov    ecx,0x2d583cab
  435be1:	pop    ebx
  435be2:	cld    
  435be3:	push   ebp
  435be4:	push   ebx
  435be5:	sti    
  435be6:	mov    bh,0x8c
  435be8:	enter  0x543b,0x80
  435bec:	stc    
  435bed:	sbb    ecx,edi
  435bef:	add    eax,0x45f07124
  435bf4:	push   ebx
  435bf5:	xchg   esi,eax
  435bf6:	jo     0x435c53
  435bf8:	mov    ds:0x625ca6c,eax
  435bfd:	aad    0x72
  435bff:	dec    edx
  435c00:	test   BYTE PTR [edx+0xc],dl
  435c03:	and    BYTE PTR [edi-0x74],0x86
  435c07:	inc    ebx
  435c08:	out    0x89,al
  435c0a:	adc    al,0xef
  435c0c:	into   
  435c0d:	fadd   DWORD PTR [ecx]
  435c0f:	pop    esp
  435c10:	retf   
  435c11:	pushf  
  435c12:	test   BYTE PTR [eax+0x7c],0x0
  435c16:	pop    edx
  435c17:	mov    es,WORD PTR fs:[ebx]
  435c1a:	jbe    0x435bd0
  435c1c:	or     bl,BYTE PTR [bx+di+0x60]
  435c20:	xchg   ebp,eax
  435c21:	leave  
  435c22:	pop    ebp
  435c23:	mov    edi,0xc62c26e6
  435c28:	ins    BYTE PTR es:[edi],dx
  435c29:	and    ebx,ecx
  435c2b:	and    eax,0x420604ff
  435c30:	xchg   edi,eax
  435c31:	pop    ds
  435c32:	adc    DWORD PTR [edx],ebp
  435c34:	bound  ebp,QWORD PTR [ebx]
  435c36:	sti    
  435c37:	xor    ebp,DWORD PTR [esp+eax*4]
  435c3a:	jp     0x435c03
  435c3c:	jne    0x435c34
  435c3e:	inc    ebx
  435c3f:	data16 mov al,0x42
  435c42:	jns    0x435c86
  435c44:	jb     0x435cbc
  435c46:	pop    esi
  435c47:	push   ecx
  435c48:	pop    eax
  435c49:	ins    DWORD PTR es:[edi],dx
  435c4a:	add    BYTE PTR [ebx+0x2d],bl
  435c4d:	pop    eax
  435c4e:	push   esi
  435c4f:	mov    eax,0x12dda5c0
  435c54:	(bad)  [ebp-0x41863c18]
  435c5a:	neg    BYTE PTR ds:[eax+0x3ae58194]
  435c61:	adc    eax,0xcbee2b79
  435c66:	int    0x81
  435c68:	adc    esi,ecx
  435c6a:	enter  0xda4c,0x55
  435c6e:	inc    eax
  435c6f:	mov    al,ds:0xc0fb1749
  435c74:	ror    DWORD PTR [edi+eax*8-0x5658387f],1
  435c7b:	add    dl,al
  435c7d:	mov    esp,0xeab2f49c
  435c82:	in     eax,dx
  435c83:	mov    DWORD PTR [ebx+0x6d],ebp
  435c86:	push   ebp
  435c87:	lea    edx,[edi]
  435c89:	arpl   WORD PTR [ebp+0x11],cx
  435c8c:	out    0x74,ax
  435c8f:	mov    esi,0x4b59df83
  435c94:	les    eax,FWORD PTR [eax-0x7df1ecfd]
  435c9a:	in     eax,0x2
  435c9c:	cmp    eax,0x17a645ca
  435ca1:	in     al,dx
  435ca2:	sbb    ah,BYTE PTR [esi+ebp*4+0x6c]
  435ca6:	sbb    BYTE PTR [eax+0x7c],dh
  435ca9:	xchg   bx,ax
  435cab:	jo     0x435c9c
  435cad:	pop    esp
  435cae:	in     eax,0x3b
  435cb0:	xor    ecx,DWORD PTR [ebp+0x3082196a]
  435cb6:	jmp    0x435d30
  435cb8:	aaa    
  435cb9:	lds    esp,FWORD PTR [edi-0x38f8444e]
  435cbf:	test   dl,dh
  435cc1:	in     al,0x64
  435cc3:	adc    BYTE PTR [ebx-0x3b558fda],ah
  435cc9:	sbb    eax,0xdb6ba1e5
  435cce:	jl     0x435cbb
  435cd0:	sub    bl,BYTE PTR [ecx]
  435cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cd3:	in     al,dx
  435cd4:	popf   
  435cd5:	mov    bh,0x1d
  435cd7:	clc    
  435cd8:	pop    ss
  435cd9:	cld    
  435cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435cdb:	ins    BYTE PTR es:[edi],dx
  435cdc:	icebp  
  435cdd:	mov    ch,0x36
  435cdf:	clc    
  435ce0:	lock not ecx
  435ce3:	xor    DWORD PTR [eax],esp
  435ce5:	dec    edi
  435ce6:	pop    edx
  435ce7:	syscall 
  435ce9:	loope  0x435c72
  435ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cec:	(bad)  
  435ced:	pop    ds
  435cee:	lds    esp,FWORD PTR [ebp+0x12]
  435cf1:	mov    DWORD PTR [di+0x68],ebp
  435cf5:	jmp    0x91d4b894
  435cfa:	mov    dl,0xaa
  435cfc:	aas    
  435cfd:	icebp  
  435cfe:	test   al,0xff
  435d00:	fmul   QWORD PTR [ecx+0x39]
  435d03:	fdivr  QWORD PTR [eax-0x50059d3]
  435d09:	jmp    0x435d84
  435d0b:	mov    dl,dl
  435d0d:	jmp    0x9f74:0x1ee4fc0d
  435d14:	xor    eax,0x1d007c21
  435d19:	mov    ebx,0x7d99c803
  435d1e:	rol    DWORD PTR [ecx+0x44],0x70
  435d22:	xchg   esp,eax
  435d23:	enter  0x7c4c,0xf3
  435d27:	mov    edi,0x3a05a64d
  435d2c:	test   eax,0xe1cac9f5
  435d31:	cmp    ebp,esi
  435d33:	(bad)  
  435d34:	xchg   ebp,eax
  435d35:	mov    al,ds:0x5d98cdfa
  435d3a:	aas    
  435d3b:	iret   
  435d3c:	mov    eax,0x2ca263bd
  435d41:	mov    esp,0x58eb56cc
  435d46:	or     ch,dl
  435d48:	push   es
  435d49:	or     ecx,eax
  435d4b:	call   0x827a:0x2f97d691
  435d52:	pop    eax
  435d53:	xchg   edx,eax
  435d54:	or     ch,BYTE PTR [eax+0x5d]
  435d57:	fimul  DWORD PTR [edx-0x4bd78faa]
  435d5d:	xor    al,0x18
  435d5f:	xchg   esi,eax
  435d60:	pop    ecx
  435d61:	or     BYTE PTR [edi+0x69995b8c],cl
  435d67:	ficomp WORD PTR [edi]
  435d69:	cmp    esp,esp
  435d6b:	mov    BYTE PTR [esi-0xf72a4b3],bh
  435d71:	jo     0x435d02
  435d73:	inc    eax
  435d74:	push   ss
  435d75:	enter  0x7233,0xf6
  435d79:	cmp    eax,0xaf21195f
  435d7e:	aas    
  435d7f:	cmp    DWORD PTR [edi+0x48dbb17],edx
  435d85:	mov    al,ds:0x4beb88a1
  435d8a:	pop    es
  435d8b:	div    BYTE PTR [esi]
  435d8d:	stos   BYTE PTR es:[edi],al
  435d8e:	jne    0x435e0c
  435d90:	imul   ecx,DWORD PTR [ebp-0x10],0xd2d4ad56
  435d97:	inc    edx
  435d98:	sub    BYTE PTR ds:0xb0f8a4f8,dl
  435d9e:	popf   
  435d9f:	xchg   edx,eax
  435da0:	dec    ecx
  435da1:	mov    ds:0xdd0dcd09,eax
  435da6:	(bad)  
  435da7:	ror    DWORD PTR [esi],cl
  435da9:	rol    DWORD PTR [esi+0x32],0xc3
  435dad:	mov    ebp,0xb736bf52
  435db2:	std    
  435db3:	or     DWORD PTR ds:0xf9d8c401,eax
  435db9:	dec    edx
  435dba:	into   
  435dbb:	add    al,0x57
  435dbd:	enter  0x8f7,0x92
  435dc1:	pmaxub mm4,mm7
  435dc4:	mov    dh,0xdf
  435dc6:	in     eax,0xdf
  435dc8:	sbb    DWORD PTR [edx-0x78],ebx
  435dcb:	ja     0x435daa
  435dcd:	repnz and al,0x28
  435dd0:	fistp  QWORD PTR [ecx-0x1a78d5a3]
  435dd6:	inc    ecx
  435dd7:	push   ss
  435dd8:	test   DWORD PTR [ebx-0x50],ecx
  435ddb:	mov    bl,0xf1
  435ddd:	lods   eax,DWORD PTR ds:[esi]
  435dde:	imul   DWORD PTR [eax+0x5e21596e]
  435de4:	and    BYTE PTR [eax-0x2f],cl
  435de7:	test   BYTE PTR [esp+edx*4],bl
  435dea:	loope  0x435dae
  435dec:	iret   
  435ded:	mov    al,0x43
  435def:	arpl   WORD PTR [edi],bp
  435df1:	popf   
  435df2:	enter  0xa7c,0x65
  435df6:	dec    ebp
  435df7:	stc    
  435df8:	mov    al,ds:0xa72e7d82
  435dfd:	mov    eax,0x7abf99e8
  435e02:	and    DWORD PTR [edi+0x4dd89da0],edi
  435e08:	int3   
  435e09:	push   ds
  435e0a:	push   esp
  435e0b:	lahf   
  435e0c:	jge    0x435e83
  435e0e:	ins    DWORD PTR es:[edi],dx
  435e0f:	mov    edi,0x87db4a8e
  435e14:	adc    ebx,DWORD PTR [esi+eiz*1]
  435e17:	dec    eax
  435e18:	cld    
  435e19:	mov    eax,0x47502af5
  435e1e:	inc    ebp
  435e1f:	inc    esp
  435e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e21:	arpl   dx,si
  435e23:	mov    bl,0x39
  435e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435e26:	pop    esp
  435e27:	bound  ebp,QWORD PTR [ebp+0x59]
  435e2a:	xchg   ah,cl
  435e2c:	into   
  435e2d:	and    DWORD PTR [ebx+0x7357ec38],esp
  435e33:	in     eax,dx
  435e34:	(bad)  
  435e35:	fild   WORD PTR [ebp-0x61]
  435e38:	call   0x97eea294
  435e3d:	mov    bh,dl
  435e3f:	add    BYTE PTR [edi],cl
  435e41:	(bad)  ss:[esi+eiz*1]
  435e45:	outs   dx,BYTE PTR ds:[esi]
  435e46:	into   
  435e47:	popa   
  435e48:	jge    0x435dfc
  435e4a:	shl    DWORD PTR [esi-0x547ac78],cl
  435e50:	cs jns 0x435e52
  435e53:	jge    0x435e6b
  435e55:	les    esp,FWORD PTR [esi-0x5b38d5cf]
  435e5b:	ror    BYTE PTR [ebx+0x15c78743],cl
  435e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435e62:	scas   al,BYTE PTR es:[edi]
  435e63:	in     eax,dx
  435e64:	mov    edx,0xc6b6da78
  435e69:	lock das 
  435e6b:	push   es
  435e6c:	add    DWORD PTR [edi+0x3],eax
  435e6f:	out    dx,al
  435e70:	jae    0x435e87
  435e72:	mov    cl,0xd3
  435e74:	aas    
  435e75:	sub    ch,BYTE PTR [edx]
  435e77:	fcmovnu st,st(1)
  435e79:	xchg   ecx,eax
  435e7a:	pop    edx
  435e7b:	jecxz  0x435ede
  435e7d:	adc    al,ch
  435e7f:	int3   
  435e80:	in     eax,0x1c
  435e82:	or     BYTE PTR [esi+0xf06b47e],dh
  435e88:	aam    0x24
  435e8a:	mov    bh,0x57
  435e8c:	sub    al,BYTE PTR [edi-0x1411c9aa]
  435e92:	xchg   esi,eax
  435e93:	jo     0x435e5d
  435e95:	dec    ecx
  435e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e97:	or     esp,esi
  435e99:	(bad)  [bp+di]
  435e9c:	cmp    bh,cl
  435e9e:	push   ss
  435e9f:	sub    BYTE PTR [ebx-0x6a],ah
  435ea2:	xor    DWORD PTR [ebx-0x62],0xffffffae
  435ea6:	mov    dl,0x74
  435ea8:	int    0x2d
  435eaa:	sbb    ebp,DWORD PTR [eax]
  435eac:	push   esp
  435ead:	or     DWORD PTR [edx],esp
  435eaf:	cmp    al,0x83
  435eb1:	int    0x2f
  435eb3:	or     al,0x34
  435eb5:	out    0x5,al
  435eb7:	sbb    eax,DWORD PTR [edi]
  435eb9:	cmp    al,0x61
  435ebb:	rol    DWORD PTR [edx+0x76],0x69
  435ebf:	mov    ds:0xdeb6fb07,eax
  435ec4:	pop    esi
  435ec5:	add    ebp,DWORD PTR [ebp+0x5f]
  435ec8:	popa   
  435ec9:	in     al,0x35
  435ecb:	pop    es
  435ecc:	fild   WORD PTR [edi]
  435ece:	mov    ebp,0xa3e7021
  435ed3:	and    al,0xd6
  435ed5:	scas   al,BYTE PTR es:[edi]
  435ed6:	addr16 popa 
  435ed8:	push   ds
  435ed9:	mov    ds:0xf158b37e,eax
  435ede:	cmp    DWORD PTR [edi+0x6994aa65],esp
  435ee4:	jnp    0x435ec9
  435ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ee7:	sub    esi,0x2b
  435eea:	mov    ds:0x7e18e910,al
  435eef:	out    dx,eax
  435ef0:	or     dh,dh
  435ef2:	stos   DWORD PTR es:[edi],eax
  435ef3:	push   0xffffff9f
  435ef5:	mov    esp,0x80f5b17d
  435efa:	imul   ebx,DWORD PTR [ebx],0x6ea4cf94
  435f00:	mov    WORD PTR [ecx+0x51ced69b],cs
  435f06:	cld    
  435f07:	adc    bl,BYTE PTR [ebx]
  435f09:	sbb    esi,DWORD PTR ds:0x285ec83
  435f0f:	and    al,0xea
  435f11:	cwde   
  435f12:	ret    
  435f13:	cpuid  
  435f15:	cs push edx
  435f17:	jge    0x435ee5
  435f19:	mov    es,WORD PTR [ebx]
  435f1b:	leave  
  435f1c:	lods   al,BYTE PTR ds:[esi]
  435f1d:	fimul  DWORD PTR [edi-0xa]
  435f20:	les    edi,FWORD PTR [esi+0x61]
  435f23:	fisttp QWORD PTR [ebp+0x23197276]
  435f29:	das    
  435f2a:	mov    WORD PTR [esi-0x4868a49],gs
  435f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f31:	inc    esp
  435f32:	xchg   BYTE PTR [edx+0x3],dh
  435f35:	push   edi
  435f36:	pop    ecx
  435f37:	sar    bh,1
  435f39:	aas    
  435f3a:	mov    al,0xd3
  435f3c:	cmp    DWORD PTR [ebx],esi
  435f3e:	pop    esp
  435f3f:	xchg   BYTE PTR ds:0x6b218339,bh
  435f45:	mov    ch,0xeb
  435f47:	test   DWORD PTR [ebp-0x4b455cc0],ebx
  435f4d:	add    eax,0xa57e33de
  435f52:	xor    edx,DWORD PTR [ebx+ecx*4+0x44]
  435f56:	aas    
  435f57:	dec    DWORD PTR [esi-0x29553709]
  435f5d:	xchg   ebx,eax
  435f5e:	loopne 0x435efd
  435f60:	inc    esi
  435f61:	scas   eax,DWORD PTR es:[edi]
  435f62:	into   
  435f63:	imul   esi,DWORD PTR ds:0x92bbe3a5,0xa818e602
  435f6e:	(bad)  
  435f6f:	(bad)  
  435f70:	jns    0x435f28
  435f72:	out    dx,al
  435f73:	out    0x95,eax
  435f75:	push   edx
  435f76:	sbb    al,0x37
  435f78:	xchg   edx,eax
  435f79:	push   ds
  435f7a:	shl    eax,cl
  435f7c:	fld    DWORD PTR [esi-0x15]
  435f7f:	xor    al,0xe2
  435f81:	nop
  435f82:	jmp    0x7f12c249
  435f87:	and    ch,BYTE PTR [ebx+ebx*2]
  435f8a:	(bad)  
  435f8b:	and    DWORD PTR [edi],ecx
  435f8d:	icebp  
  435f8e:	daa    
  435f8f:	mov    bl,0x33
  435f91:	mov    esp,0x2498cd1c
  435f96:	sbb    al,0xa8
  435f98:	jp     0x435f84
  435f9a:	pop    esp
  435f9b:	push   cs
  435f9c:	dec    esp
  435f9d:	inc    esp
  435f9e:	les    edx,FWORD PTR [edi-0x3d]
  435fa1:	push   ebp
  435fa2:	in     al,0x6d
  435fa4:	xor    BYTE PTR [eax+0x5fa5bb01],bl
  435faa:	loopne 0x435f5f
  435fac:	inc    edx
  435fad:	and    BYTE PTR [eax+0x39e28c5b],bl
  435fb3:	cmp    al,0xd7
  435fb5:	pop    ebx
  435fb6:	js     0x435f8f
  435fb8:	repz mov ds:0x1c1124b7,eax
  435fbe:	xchg   ebp,eax
  435fbf:	jbe    0x43603b
  435fc1:	das    
  435fc2:	push   ebx
  435fc3:	stos   DWORD PTR es:[edi],eax
  435fc4:	fadd   DWORD PTR [eax+0x7f]
  435fc7:	and    DWORD PTR [edi+0x2],eax
  435fca:	inc    esp
  435fcb:	test   al,0x78
  435fcd:	xor    ch,BYTE PTR [ebp+0x7b]
  435fd0:	xchg   edi,eax
  435fd1:	xor    al,0xab
  435fd3:	sub    edx,DWORD PTR [ecx-0x3e]
  435fd6:	cmp    esi,DWORD PTR [ebx-0x446c0564]
  435fdc:	lds    esp,FWORD PTR [edi+0x3d0bd36a]
  435fe2:	scas   eax,DWORD PTR es:[edi]
  435fe3:	dec    edi
  435fe4:	sbb    edi,DWORD PTR [ecx+0xd]
  435fe7:	lahf   
  435fe8:	cld    
  435fe9:	clc    
  435fea:	mov    ah,0x94
  435fec:	sub    al,0x40
  435fee:	pop    es
  435fef:	adc    ch,bh
  435ff1:	adc    al,BYTE PTR [edi+0x19545b3a]
  435ff7:	fdivp  st(1),st
  435ff9:	jmp    0x436062
  435ffb:	stc    
  435ffc:	pop    ecx
  435ffd:	mov    dh,0x12
  435fff:	mov    cl,0x1d
  436001:	inc    esp
  436002:	fiadd  DWORD PTR [edi]
  436004:	mov    ebx,edx
  436006:	or     eax,0x43fbf97f
  43600b:	dec    ebx
  43600c:	fisubr DWORD PTR [ebp+0x8c0230d]
  436012:	jge    0x436058
  436014:	rcl    BYTE PTR [ecx+0x57],1
  436017:	pop    edi
  436018:	mov    esi,0x9fb72716
  43601d:	dec    eax
  43601e:	jbe    0x435fb8
  436020:	xor    BYTE PTR [eax-0x2a],ch
  436023:	cs cmp al,0xa6
  436026:	push   esi
  436027:	push   ebx
  436028:	bound  ebp,QWORD PTR [edi]
  43602a:	fisttp WORD PTR [eax-0x6a]
  43602d:	int3   
  43602e:	sar    DWORD PTR [ecx-0x5a65c3c1],cl
  436034:	bnd jg 0x43609d
  436037:	push   es
  436038:	pop    edx
  436039:	mov    ah,0xb0
  43603b:	xor    dh,BYTE PTR [eax]
  43603d:	mov    ds:0xe15d45af,eax
  436042:	fsubp  st(4),st
  436044:	or     edx,DWORD PTR [ebx+0x3214360f]
  43604a:	iret   
  43604b:	into   
  43604c:	ret    
  43604d:	push   cs
  43604e:	lea    esp,[ecx]
  436050:	fcmove st,st(4)
  436052:	nop
  436053:	aad    0x93
  436055:	jmp    0x436002
  436057:	sahf   
  436058:	jmp    0x43604c
  43605a:	jbe    0x436012
  43605c:	and    eax,0xfd9ab8db
  436061:	out    0xb1,al
  436063:	pop    eax
  436064:	ins    DWORD PTR es:[edi],dx
  436065:	popf   
  436066:	lods   al,BYTE PTR ds:[esi]
  436067:	or     dh,ch
  436069:	in     al,0x10
  43606b:	je     0x4360a5
  43606d:	pop    eax
  43606e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43606f:	into   
  436070:	inc    ebp
  436071:	xchg   ebx,eax
  436072:	je     0x435ffa
  436074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436075:	mov    ah,0x87
  436077:	push   esp
  436078:	imul   ebx,ebx,0x76
  43607b:	mov    dh,0x83
  43607d:	xchg   edx,eax
  43607e:	xchg   ebp,eax
  43607f:	out    0xf5,al
  436081:	jecxz  0x436095
  436083:	shl    DWORD PTR [esp+ebx*4-0x4],0x8
  436088:	in     al,dx
  436089:	pop    esp
  43608a:	dec    ecx
  43608b:	into   
  43608c:	mov    ebp,0x38de44c7
  436091:	test   al,0x54
  436093:	lahf   
  436094:	mov    edi,0xe32d6300
  436099:	addr16 out 0x58,eax
  43609c:	mov    al,0x96
  43609e:	adc    edi,DWORD PTR [edx-0x49]
  4360a1:	stos   BYTE PTR es:[edi],al
  4360a2:	or     ebp,DWORD PTR [edi]
  4360a4:	mov    ss,WORD PTR [eax+ecx*4+0x60]
  4360a8:	mov    WORD PTR [esi+0x58e1c3c3],gs
  4360ae:	and    eax,0x707019f4
  4360b3:	xchg   ch,cl
  4360b5:	scas   al,BYTE PTR es:[edi]
  4360b6:	cmp    DWORD PTR es:[edx-0x54f32f72],edi
  4360bd:	jne    0x4360ed
  4360bf:	mov    ch,0x5b
  4360c1:	sbb    eax,0xd2bfb187
  4360c6:	cmp    BYTE PTR [edi],0xd3
  4360c9:	leave  
  4360ca:	xlat   BYTE PTR ds:[ebx]
  4360cb:	inc    esp
  4360cc:	mov    eax,ebp
  4360ce:	sbb    edi,DWORD PTR [edx]
  4360d0:	aam    0x74
  4360d2:	add    eax,esp
  4360d4:	push   esp
  4360d5:	test   BYTE PTR [eax+0x5c],bl
  4360d8:	push   0x96a7b2de
  4360dd:	retf   
  4360de:	aad    0x88
  4360e0:	data16 jnp 0x4360d4
  4360e3:	test   eax,0x19eecee4
  4360e8:	repnz or al,0xcd
  4360eb:	xor    BYTE PTR [eax+0x17],bh
  4360ee:	push   ebx
  4360ef:	mov    esp,0xdfdad7d8
  4360f4:	call   0xc07b4418
  4360f9:	ins    BYTE PTR es:[edi],dx
  4360fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4360fb:	rol    edi,0xf1
  4360fe:	sub    al,0x72
  436100:	and    ebx,ebp
  436102:	add    BYTE PTR [ecx+0x5f],ch
  436105:	xchg   edi,eax
  436106:	sbb    ebx,DWORD PTR [ecx+0x5]
  436109:	clc    
  43610a:	(bad)
  43610d:	and    BYTE PTR [eax+0x7],ah
  436110:	in     eax,dx
  436111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436112:	lods   eax,DWORD PTR ds:[esi]
  436113:	outs   dx,BYTE PTR ds:[esi]
  436114:	jl     0x43612c
  436116:	and    BYTE PTR [ebx-0x25],0x85
  43611a:	mov    ds:0xf99af7b6,al
  43611f:	and    BYTE PTR [edi+ecx*1],cl
  436122:	std    
  436123:	push   0xf9bf536
  436128:	dec    edi
  436129:	pop    es
  43612a:	aaa    
  43612b:	(bad)  [edi+ebx*1]
  43612e:	jg     0x436169
  436130:	fld1   
  436132:	rcl    eax,0xfd
  436135:	mov    ds:0xd3c9663b,eax
  43613a:	ret    0x811e
  43613d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43613e:	sbb    cl,BYTE PTR [eax+0x523a6493]
  436144:	sub    DWORD PTR [ecx],eax
  436146:	fisub  DWORD PTR [ebx+0x1a77e0cd]
  43614c:	push   0xffffffe7
  43614e:	lock xchg esp,eax
  436150:	jle    0x4361ae
  436152:	jmp    0x3581:0x689c14ca
  436159:	fwait
  43615a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43615b:	or     al,0xda
  43615d:	pop    esi
  43615e:	pop    ecx
  43615f:	add    bl,BYTE PTR [edx-0x55]
  436162:	adc    BYTE PTR [eax],dh
  436164:	jl     0x436123
  436166:	int3   
  436167:	sub    BYTE PTR [edi],0xf7
  43616a:	cmc    
  43616b:	dec    esi
  43616c:	int3   
  43616d:	in     eax,0x5b
  43616f:	fiadd  DWORD PTR [edi]
  436171:	scas   al,BYTE PTR es:[edi]
  436172:	sbb    ebx,DWORD PTR [esi-0x257e414a]
  436178:	daa    
  436179:	fadd   QWORD PTR [ebx]
  43617b:	fdiv   st,st(4)
  43617d:	dec    eax
  43617e:	mov    eax,ds:0x5346440b
  436183:	outs   dx,BYTE PTR ds:[esi]
  436184:	add    al,0xe4
  436186:	popf   
  436187:	call   0xe5851d10
  43618c:	aad    0xff
  43618e:	pop    ebx
  43618f:	jnp    0x4361fe
  436191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436192:	ds sahf 
  436194:	jae    0x436150
  436196:	adc    dl,al
  436198:	shl    DWORD PTR [ecx+eax*1],cl
  43619b:	call   FWORD PTR [edi+0x36]
  43619e:	inc    ebp
  43619f:	mov    dl,0xde
  4361a1:	in     eax,dx
  4361a2:	mov    al,0x17
  4361a4:	push   edx
  4361a5:	cmp    esi,DWORD PTR [edx+edx*8-0x205b3a68]
  4361ac:	je     0x436180
  4361ae:	xor    BYTE PTR [edi],al
  4361b0:	and    eax,0x25481a50
  4361b5:	out    dx,eax
  4361b6:	mov    ebx,ebx
  4361b8:	stos   BYTE PTR es:[edi],al
  4361b9:	xlat   BYTE PTR ds:[ebx]
  4361ba:	push   0x7a0112d8
  4361bf:	xor    edx,DWORD PTR [edi+0x35]
  4361c2:	sub    eax,0x516ea48d
  4361c7:	inc    edx
  4361c8:	int3   
  4361c9:	test   DWORD PTR [eax+0x5d],edx
  4361cc:	fadd   st(7),st
  4361ce:	fs cwde 
  4361d0:	ss aad 0x6a
  4361d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4361d4:	imul   BYTE PTR [esi+0x52]
  4361d7:	mov    dl,0x7
  4361d9:	pop    ds
  4361da:	mov    eax,gs
  4361dc:	add    eax,0x6e29240b
  4361e1:	pop    eax
  4361e2:	push   ebp
  4361e3:	pop    ss
  4361e4:	stos   BYTE PTR es:[edi],al
  4361e5:	mov    ds:0x407a921d,al
  4361ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4361eb:	mov    edi,0xa17dd446
  4361f0:	cmp    BYTE PTR [ebp+0x19fe2f9a],bh
  4361f6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4361f8:	jns    0x436262
  4361fa:	ss dec ebx
  4361fc:	(bad)  
  4361fd:	mov    gs,WORD PTR [edi-0x52]
  436200:	(bad)  
  436202:	in     al,0x24
  436204:	imul   DWORD PTR [edi-0x60]
  436207:	pop    esp
  436208:	dec    edx
  436209:	sbb    al,0x34
  43620b:	hlt    
  43620c:	in     al,dx
  43620d:	out    0x3a,al
  43620f:	push   es
  436210:	and    eax,0x18105438
  436215:	es into 
  436217:	cmp    eax,0x7442215e
  43621c:	mov    cl,cl
  43621e:	(bad)  
  436220:	into   
  436221:	lahf   
  436222:	mov    ebp,0xcf40f1dc
  436227:	cmp    BYTE PTR [ebp+0x18],bh
  43622a:	loope  0x4361fd
  43622c:	popa   
  43622d:	jmp    0xb449:0x711affed
  436234:	mov    ecx,0x68f05d9f
  436239:	aas    
  43623a:	sbb    al,0x62
  43623c:	stos   DWORD PTR es:[edi],eax
  43623d:	(bad)  
  43623e:	pop    ebx
  43623f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436240:	or     eax,0x85aada58
  436245:	dec    esp
  436246:	repnz xlat BYTE PTR ds:[ebx]
  436248:	(bad)  
  436249:	es stc 
  43624b:	int    0x6
  43624d:	push   edx
  43624e:	dec    edx
  43624f:	arpl   WORD PTR [edx+ecx*2+0x1],sp
  436253:	retf   0x8baa
  436256:	ss dec eax
  436258:	loopne 0x436258
  43625a:	sub    ebx,eax
  43625c:	in     al,dx
  43625d:	std    
  43625e:	mov    ebx,0x3698ee88
  436263:	or     ch,BYTE PTR [eax]
  436265:	jge    0x4362ac
  436267:	mov    ebx,0xcafcbb25
  43626c:	nop
  43626d:	add    ch,BYTE PTR [edx]
  43626f:	xchg   BYTE PTR [edi+0x15],ch
  436272:	mov    WORD PTR [ebx-0x5191c873],fs
  436278:	retf   0xfa3a
  43627b:	fistp  WORD PTR [ebx+0x7a]
  43627e:	rol    BYTE PTR [esi],cl
  436280:	jo     0x4362fa
  436282:	popf   
  436283:	je     0x43628a
  436285:	inc    eax
  436286:	daa    
  436287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436288:	dec    ebx
  436289:	pop    edx
  43628a:	fisttp DWORD PTR [ebx]
  43628c:	loope  0x4362e1
  43628e:	fist   DWORD PTR [eax-0x3d5fadda]
  436294:	int3   
  436295:	lock add al,0xa1
  436299:	adc    DWORD PTR cs:[eax+0x3f],0xe604d77f
  4362a1:	and    eax,DWORD PTR ds:0xc70bfb1a
  4362a7:	push   0xa306237f
  4362ac:	mov    BYTE PTR [edx],ah
  4362ae:	inc    edi
  4362af:	imul   ecx,DWORD PTR [edx],0x11
  4362b2:	push   edx
  4362b3:	xchg   edi,eax
  4362b4:	adc    ecx,DWORD PTR [esp+edx*4+0x1b277e6b]
  4362bb:	stos   DWORD PTR es:[edi],eax
  4362bc:	xchg   BYTE PTR [ecx-0x27],dl
  4362bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4362c0:	call   0x7ac115c5
  4362c5:	dec    edi
  4362c6:	adc    eax,0x16e4bbdb
  4362cb:	inc    eax
  4362cc:	jecxz  0x4362d2
  4362ce:	cmp    eax,0x124d9578
  4362d3:	dec    ebx
  4362d4:	loop   0x4362c1
  4362d6:	fisub  DWORD PTR [ecx]
  4362d8:	call   0xc865:0xb3d653f0
  4362df:	sub    al,0x99
  4362e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4362e2:	popa   
  4362e3:	bound  esi,QWORD PTR [eax+ebx*8]
  4362e6:	jle    0x43626a
  4362e8:	fild   WORD PTR [ebx+0x53328a2d]
  4362ee:	(bad)  
  4362f1:	sti    
  4362f2:	jnp    0x4362e1
  4362f4:	popa   
  4362f5:	fs stos DWORD PTR es:[edi],eax
  4362f7:	test   BYTE PTR [esi+edx*1-0x770b420e],bl
  4362fe:	push   0xe69b42c7
  436303:	pop    eax
  436304:	mov    ds:0x954b43c7,eax
  436309:	sub    esp,esi
  43630b:	pop    ecx
  43630c:	adc    bh,BYTE PTR [edx+0x29837f6d]
  436312:	adc    BYTE PTR [ecx-0x7f3d3ec],ah
  436318:	sub    eax,0xb541bbb
  43631d:	adc    al,0x1a
  43631f:	jne    0x43637b
  436321:	adc    al,0x6b
  436323:	mov    eax,ecx
  436325:	cs js  0x4362af
  436328:	xchg   ecx,eax
  436329:	or     esp,DWORD PTR [esi+0x18ce0434]
  43632f:	es adc ecx,eax
  436332:	fiadd  DWORD PTR [edx-0x1]
  436335:	xor    ecx,DWORD PTR [edi-0x78]
  436338:	fstp   QWORD PTR [ebx-0x14377b75]
  43633e:	pop    ecx
  43633f:	ja     0x4363a4
  436341:	inc    edx
  436342:	jl     0x43631f
  436344:	mov    ch,0x90
  436346:	jmp    edx
  436348:	test   ebp,0x4f65cfd2
  43634e:	sbb    al,0xc3
  436350:	xchg   BYTE PTR [ecx],dh
  436352:	(bad)  
  436353:	mov    edx,0x36901a52
  436358:	pop    es
  436359:	mov    dh,0xa3
  43635b:	iret   
  43635c:	jg     0x4363a9
  43635e:	iret   
  43635f:	inc    ebp
  436360:	push   edx
  436361:	pop    eax
  436362:	rcr    BYTE PTR [ebp+0x4fa55491],0x52
  436369:	adc    ah,cl
  43636b:	mov    dl,0x78
  43636d:	mov    edi,0x63ff517b
  436372:	jne    0x436376
  436374:	adc    al,0x45
  436376:	inc    esp
  436377:	jns    0x436358
  436379:	imul   edi,ebp,0x8921273c
  43637f:	xor    BYTE PTR [ebp-0x48],ah
  436382:	push   eax
  436383:	xchg   ebp,eax
  436384:	xor    DWORD PTR [esi-0x75],esi
  436387:	or     DWORD PTR [ebx-0x3724002e],esp
  43638d:	mov    ds:0x3cdc71ba,eax
  436392:	pop    esi
  436393:	jle    0x4363e6
  436395:	xlat   BYTE PTR ds:[ebx]
  436396:	mov    ds,ebp
  436398:	lahf   
  436399:	outs   dx,BYTE PTR ds:[esi]
  43639a:	pop    ss
  43639b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43639c:	(bad)  
  43639e:	and    al,0x5a
  4363a0:	pop    es
  4363a1:	mov    esp,0xa809f144
  4363a6:	scas   eax,DWORD PTR es:[edi]
  4363a7:	mov    DWORD PTR [ecx],esi
  4363a9:	es inc esp
  4363ab:	adc    BYTE PTR ds:0x56000853,cl
  4363b1:	pusha  
  4363b2:	retf   
  4363b3:	pop    es
  4363b4:	pusha  
  4363b5:	xchg   ebx,eax
  4363b6:	popf   
  4363b7:	xchg   ebp,eax
  4363b8:	dec    esp
  4363b9:	lods   al,BYTE PTR ds:[esi]
  4363ba:	xchg   ebp,eax
  4363bb:	adc    al,0xcc
  4363bd:	sub    edx,ebp
  4363bf:	mov    ecx,ebp
  4363c1:	xchg   ecx,eax
  4363c2:	fst    QWORD PTR [edi-0x18]
  4363c5:	das    
  4363c6:	and    esi,DWORD PTR [ebx-0x61]
  4363c9:	sub    eax,0x927728a0
  4363ce:	xchg   DWORD PTR [ecx+0x33],esi
  4363d1:	or     al,0x4a
  4363d3:	aam    0x43
  4363d5:	xchg   esi,eax
  4363d6:	mov    bh,0x9e
  4363d8:	loop   0x43636f
  4363da:	add    ah,BYTE PTR [ebx-0x53]
  4363dd:	sbb    al,0xcc
  4363df:	mov    ebx,0x1ecdef4d
  4363e4:	inc    edi
  4363e5:	mov    dh,0xd7
  4363e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4363e8:	xor    BYTE PTR [edi],bl
  4363ea:	pop    esp
  4363eb:	repnz and BYTE PTR [edx-0x51],dl
  4363ef:	ss jns 0x43638a
  4363f2:	sub    BYTE PTR [esi+0x5b],ch
  4363f5:	and    eax,0x9184192d
  4363fa:	sub    eax,0x9cf138de
  4363ff:	fadd   DWORD PTR [eax]
  436401:	call   0xe3cb9117
  436406:	mov    fs,WORD PTR [ebx+0x30]
  436409:	push   0xffffffa5
  43640b:	add    dh,BYTE PTR [ebp-0x6f]
  43640e:	push   ds
  43640f:	jbe    0x4363da
  436411:	test   DWORD PTR [edx-0x325a463a],edx
  436417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436418:	push   0xffffff92
  43641a:	mov    ch,bh
  43641c:	push   edi
  43641d:	mov    ecx,0xde958b79
  436422:	pop    ecx
  436423:	fcom   QWORD PTR [esi-0x34]
  436426:	xor    dl,BYTE PTR [ebp+0xe]
  436429:	pop    edx
  43642a:	repnz outs dx,DWORD PTR ds:[esi]
  43642c:	in     al,dx
  43642d:	or     al,0x2d
  43642f:	xchg   bl,dh
  436431:	xchg   esi,eax
  436433:	outs   dx,DWORD PTR ds:[esi]
  436434:	out    dx,al
  436435:	dec    ebp
  436436:	or     ecx,DWORD PTR [ecx]
  436438:	call   0x1d2c:0x9708be94
  43643f:	jbe    0x43647e
  436441:	pop    es
  436442:	mov    edi,0x8fc377c5
  436447:	push   0x6e230e27
  43644c:	lahf   
  43644d:	mov    al,ds:0xeb61c6f5
  436452:	jno    0x436466
  436454:	retf   
  436455:	adc    BYTE PTR [ebp+0x2520c765],bl
  43645b:	int    0x98
  43645d:	pop    eax
  43645e:	sbb    BYTE PTR [ecx+0x4f4754af],cl
  436464:	xchg   esp,eax
  436465:	mov    BYTE PTR [edx+eax*2-0x31],bh
  436469:	fistp  QWORD PTR [edx+0x2985916a]
  43646f:	sbb    BYTE PTR [ebx-0x3c],dl
  436472:	stos   BYTE PTR es:[edi],al
  436473:	(bad)  
  436474:	mov    cl,0x97
  436476:	fsub   st,st(7)
  436478:	or     ecx,DWORD PTR [ecx+eax*4-0x4623b088]
  43647f:	cmp    ch,BYTE PTR [edi-0x68f894a4]
  436485:	(bad)  
  436486:	fstp   TBYTE PTR [edi+0x27fec239]
  43648c:	mov    eax,0x32fb7a75
  436491:	enter  0xd161,0x2f
  436495:	das    
  436496:	aam    0x9
  436498:	cmp    al,0x53
  43649a:	mov    al,0xe6
  43649c:	sbb    BYTE PTR ds:0x91d10cc1,0xca
  4364a3:	mov    al,0xf6
  4364a5:	mov    eax,0xaa08e3d0
  4364aa:	xor    eax,0x2de24a1
  4364af:	mov    ah,0x33
  4364b1:	call   0x93fded03
  4364b6:	int    0xa9
  4364b8:	std    
  4364b9:	dec    eax
  4364ba:	adc    DWORD PTR [eax],esi
  4364bc:	popf   
  4364bd:	mov    esi,0x991278c9
  4364c2:	lods   eax,DWORD PTR ds:[esi]
  4364c3:	lds    eax,FWORD PTR [ebp+0x583087bf]
  4364c9:	dec    edi
  4364ca:	dec    ebx
  4364cb:	and    ebx,DWORD PTR [eax]
  4364cd:	fwait
  4364ce:	scas   eax,DWORD PTR es:[edi]
  4364cf:	out    0x96,al
  4364d1:	sub    ecx,DWORD PTR [eax+0x70]
  4364d4:	or     eax,0x7b9c874b
  4364d9:	fs xor esi,edx
  4364dc:	sbb    ch,ah
  4364de:	(bad)  
  4364df:	ins    DWORD PTR es:[edi],dx
  4364e0:	enter  0xff8f,0xec
  4364e4:	inc    edx
  4364e5:	or     BYTE PTR [ebx+0x1b],al
  4364e8:	sub    BYTE PTR [edi],ah
  4364ea:	xchg   edx,eax
  4364eb:	xchg   ebp,eax
  4364ec:	xor    esi,0xfffffff0
  4364ef:	pop    ecx
  4364f0:	mov    ebx,0x27909fc2
  4364f5:	xchg   ebp,eax
  4364f6:	out    dx,al
  4364f7:	mov    al,ds:0xa385770d
  4364fc:	in     al,0x1d
  4364fe:	ja     0x436541
  436500:	mov    gs,WORD PTR [edx+0x3b114833]
  436506:	sbb    edi,edx
  436508:	mov    BYTE PTR [ebx+0x14],ch
  43650b:	outs   dx,DWORD PTR ds:[esi]
  43650c:	sub    al,0x3d
  43650e:	push   0x68
  436510:	aaa    
  436511:	repz loope 0x436521
  436514:	jge    0x436574
  436516:	adc    BYTE PTR ds:[ecx],al
  436519:	cli    
  43651a:	xor    eax,0x4e230bf
  43651f:	imul   eax,DWORD PTR [ecx-0x6e],0xb9e92325
  436526:	push   esp
  436527:	arpl   si,bx
  436529:	push   0xffffffde
  43652b:	push   esp
  43652c:	mul    BYTE PTR [edx+0x2c2f15a9]
  436532:	adc    DWORD PTR [eax+0x38],ebx
  436535:	in     eax,0xee
  436537:	dec    BYTE PTR [eax+0x3d]
  43653a:	xor    BYTE PTR [eax+edi*1-0x33],0xd6
  43653f:	jmp    0x4365bf
  436541:	popf   
  436542:	call   0xe69b:0x98a9e70
  436549:	adc    esp,edx
  43654b:	pushf  
  43654c:	jecxz  0x436529
  43654e:	xchg   edi,eax
  43654f:	lock jg 0x4364ff
  436552:	mov    al,ds:0x4d9ddc44
  436557:	push   ecx
  436558:	popa   
  436559:	ins    DWORD PTR es:[edi],dx
  43655a:	or     DWORD PTR [ebp-0x2b],ebp
  43655d:	and    DWORD PTR [edx],eax
  43655f:	jle    0x4365dc
  436561:	push   ss
  436562:	jp     0x43653f
  436564:	bound  eax,QWORD PTR [edx+0x47861e7e]
  43656a:	inc    esp
  43656b:	(bad)  [ecx-0xeb673e4]
  436571:	fdivr  DWORD PTR [ecx-0x2bf30428]
  436577:	int3   
  436578:	in     al,dx
  436579:	push   ebp
  43657a:	out    0xbf,eax
  43657c:	adc    BYTE PTR [ecx+0x647c0c34],al
  436582:	mov    esp,0x612fca2e
  436587:	add    BYTE PTR [edx+0x7d],bl
  43658a:	in     al,dx
  43658b:	adc    al,0xfc
  43658d:	jle    0x436568
  43658f:	push   cs
  436590:	pop    edx
  436591:	xor    DWORD PTR [edi-0x5f52d160],ecx
  436597:	and    al,0xd5
  436599:	ss aad 0xf4
  43659c:	xchg   ecx,eax
  43659d:	into   
  43659e:	ss sti 
  4365a0:	add    bl,cl
  4365a2:	ins    DWORD PTR es:[edi],dx
  4365a3:	inc    eax
  4365a4:	stos   BYTE PTR es:[edi],al
  4365a5:	push   edx
  4365a6:	das    
  4365a7:	sub    DWORD PTR [ecx],0xffffff9a
  4365aa:	cwde   
  4365ab:	jo     0x43656d
  4365ad:	scas   al,BYTE PTR es:[edi]
  4365ae:	dec    esi
  4365af:	fbld   TBYTE PTR [edx-0x58]
  4365b2:	dec    eax
  4365b3:	icebp  
  4365b4:	jae    0x4365d3
  4365b6:	xchg   edi,eax
  4365b7:	aam    0x10
  4365b9:	mov    ah,BYTE PTR [ebx-0xb]
  4365bc:	repz mov ecx,0x3e6f2681
  4365c2:	mov    ebx,0x88251773
  4365c7:	sbb    al,BYTE PTR [edx+ecx*1+0x5137f17b]
  4365ce:	clc    
  4365cf:	push   cs
  4365d0:	sub    al,0xaa
  4365d2:	aas    
  4365d3:	push   0x644328ac
  4365d8:	push   ecx
  4365d9:	aaa    
  4365da:	(bad)  
  4365db:	jno    0x43658c
  4365dd:	dec    al
  4365df:	push   es
  4365e0:	cwde   
  4365e1:	dec    esp
  4365e2:	push   ebp
  4365e3:	xchg   edi,eax
  4365e4:	jae    0x4365f1
  4365e6:	imul   esp,ecx,0x943f3f80
  4365ec:	mov    esp,0x582554c5
  4365f1:	and    eax,0xc675c7ef
  4365f6:	sbb    dh,BYTE PTR [ebp-0x77f356d1]
  4365fc:	pusha  
  4365fd:	push   eax
  4365fe:	or     BYTE PTR [ebx],0x99
  436601:	clc    
  436602:	add    BYTE PTR [ebx],bl
  436604:	mov    dh,0x17
  436606:	int3   
  436607:	cmp    eax,0xc351526f
  43660c:	cwde   
  43660d:	dec    ecx
  43660e:	mov    ds:0xa03edc60,al
  436613:	pop    ecx
  436614:	xor    al,0xc
  436617:	out    dx,al
  436618:	and    DWORD PTR [edx],0x2d1c62e8
  43661e:	retf   0x45b0
  436621:	ret    0x1e2
  436624:	push   edx
  436625:	test   eax,0xab31142c
  43662a:	clc    
  43662b:	test   al,0x93
  43662d:	jg     0x436640
  43662f:	xchg   DWORD PTR [eax+0x113ee9ae],ecx
  436635:	fidivr WORD PTR [esi-0x45]
  436638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436639:	push   esp
  43663a:	mov    edx,0x9e3e23d
  43663f:	inc    ebp
  436640:	lahf   
  436641:	ja     0x43668b
  436643:	add    BYTE PTR [eax+0x4e],dl
  436646:	das    
  436647:	lods   eax,DWORD PTR ss:[esi]
  436649:	sahf   
  43664a:	mov    ah,0xee
  43664c:	cbw    
  43664e:	sub    BYTE PTR [ebp+eiz*2-0x32],dl
  436652:	imul   ebp,DWORD PTR [esi+0x48],0x3d
  436656:	nop
  436657:	scas   eax,DWORD PTR es:[edi]
  436658:	mov    ecx,0xbe497574
  43665d:	mov    bl,0xf7
  43665f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436660:	pop    ss
  436661:	adc    eax,0x56de3eec
  436666:	add    ebp,DWORD PTR [eax+eax*4]
  436669:	jmp    0x4365fc
  43666b:	test   BYTE PTR [esi],al
  43666d:	add    al,0x2e
  43666f:	jae    0x436687
  436671:	xor    al,0x81
  436673:	ficom  WORD PTR ds:0xc44df80f
  436679:	or     ecx,esi
  43667b:	jp     0x436601
  43667d:	push   ebp
  43667e:	and    al,0x1d
  436681:	cmp    eax,0x5871b40f
  436686:	and    al,0x65
  436688:	test   al,0x7
  43668a:	gs inc ecx
  43668c:	jb     0x4366ee
  43668e:	imul   ebp,DWORD PTR [ecx+0x29],0x13c8d203
  436695:	cli    
  436696:	aam    0x2e
  436698:	call   0x60401a4b
  43669d:	cmp    bh,BYTE PTR [esi-0x3]
  4366a0:	add    eax,0xf01ec1ff
  4366a5:	mov    edi,0xffed6af2
  4366aa:	or     al,0x8b
  4366ac:	xor    al,0xa8
  4366ae:	adc    al,0xd1
  4366b0:	push   ebx
  4366b1:	sbb    BYTE PTR [edi-0x72],dh
  4366b4:	out    dx,eax
  4366b5:	and    ebp,ebx
  4366b7:	sbb    DWORD PTR [edi-0xf],eax
  4366ba:	imul   ecx,DWORD PTR [ebx-0x4d],0x5a
  4366be:	and    eax,0xd58c5723
  4366c3:	out    0x83,al
  4366c5:	jnp    0x4366c7
  4366c7:	ficom  DWORD PTR [eax+eiz*8-0x60b7d132]
  4366ce:	and    al,0xd4
  4366d0:	inc    ecx
  4366d1:	test   eax,0x2a7b280c
  4366d6:	ja     0x43670c
  4366d8:	cmp    al,0xd2
  4366da:	and    BYTE PTR [esi-0x4e],ah
  4366dd:	cmc    
  4366de:	ss cdq 
  4366e0:	stc    
  4366e1:	push   ebp
  4366e2:	dec    ecx
  4366e3:	cwde   
  4366e4:	dec    ebp
  4366e5:	test   BYTE PTR [ecx-0xb000e2],cl
  4366eb:	cmp    al,BYTE PTR [edx-0x6e]
  4366ee:	add    DWORD PTR [ecx-0x7237f4c4],esi
  4366f4:	sbb    dh,BYTE PTR [edx+0x54]
  4366f7:	mov    ds:0xf819d916,al
  4366fc:	stos   DWORD PTR es:[edi],eax
  4366fd:	ret    0x1bb4
  436700:	dec    ebp
  436701:	out    dx,al
  436702:	outs   dx,DWORD PTR ds:[esi]
  436703:	fwait
  436704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436705:	push   eax
  436707:	pop    ss
  436708:	fisubr DWORD PTR [ebp-0x61798295]
  43670e:	pop    ecx
  43670f:	sti    
  436710:	push   esi
  436711:	and    dh,BYTE PTR [edi]
  436713:	mov    dl,0x1a
  436715:	inc    ecx
  436716:	dec    ebx
  436717:	retf   0x8542
  43671a:	push   esi
  43671b:	pop    edi
  43671c:	lock das 
  43671e:	in     eax,dx
  43671f:	pop    ss
  436720:	cmp    BYTE PTR [ecx+0x6a75126c],bl
  436726:	mov    esi,0xe8f9b5ed
  43672b:	loopne 0x4366fb
  43672d:	push   ebx
  43672e:	pop    ecx
  43672f:	add    bl,BYTE PTR [ebp+eax*1-0x3e]
  436733:	fimul  WORD PTR [ebx]
  436735:	mov    eax,ds:0x9bc6bcdf
  43673a:	xor    edi,edx
  43673c:	mov    dl,bl
  43673e:	mov    edi,0x5387958e
  436743:	and    bl,BYTE PTR [ebp-0x65]
  436746:	adc    BYTE PTR [ebp+0x72d819b5],0x91
  43674d:	xchg   edi,eax
  43674e:	repnz loope 0x436737
  436751:	cmp    ecx,eax
  436753:	sub    esp,esi
  436755:	or     eax,0x6ad02665
  43675a:	add    eax,0x3a04d5e3
  43675f:	sub    DWORD PTR [ecx],eax
  436761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436762:	push   edx
  436763:	outs   dx,BYTE PTR ds:[esi]
  436764:	jecxz  0x436789
  436766:	sbb    eax,0x705120d2
  43676b:	lea    ebp,[edx-0x60dfd21c]
  436771:	sti    
  436772:	push   0x6f
  436774:	lea    ebp,[edx+eax*2+0x17]
  436778:	call   0x46fd:0x7a286fbf
  43677f:	xchg   ebx,eax
  436780:	add    BYTE PTR [ebx],0xcf
  436783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436784:	stos   DWORD PTR es:[edi],eax
  436785:	mov    ebp,0x421ba1b1
  43678a:	pop    edi
  43678b:	cmc    
  43678c:	jne    0x436786
  43678e:	and    dl,cl
  436790:	pop    ecx
  436791:	mov    ebp,0x255573d
  436796:	push   edx
  436797:	or     BYTE PTR [eax-0x47],al
  43679a:	cmp    eax,0xf2c1d67d
  43679f:	lods   eax,DWORD PTR ds:[esi]
  4367a0:	leave  
  4367a1:	daa    
  4367a2:	xchg   DWORD PTR [eax+0x30753a84],edi
  4367a8:	mov    bl,0xd0
  4367aa:	push   esi
  4367ab:	(bad)  
  4367ac:	jge    0x436756
  4367ae:	xchg   esi,eax
  4367af:	loop   0x43676b
  4367b1:	leave  
  4367b2:	out    0x67,al
  4367b4:	ficom  DWORD PTR ds:0x99ecec92
  4367ba:	adc    edx,DWORD PTR [ebp-0x79]
  4367bd:	mov    ecx,0xe7df6d74
  4367c2:	mov    ds:0x8bedc686,eax
  4367c7:	std    
  4367c8:	enter  0xe012,0xd9
  4367cc:	mov    ds:0xc1d9a68f,al
  4367d1:	push   cs
  4367d2:	mov    eax,0x8c6128a0
  4367d7:	ja     0x436778
  4367d9:	jecxz  0x436832
  4367db:	call   FWORD PTR [ecx+0x26]
  4367de:	mov    BYTE PTR [eax],al
  4367e0:	mov    eax,ds:0x2785844f
  4367e5:	outs   dx,DWORD PTR ds:[esi]
  4367e6:	lea    edx,[eax+0x7cccd8c7]
  4367ec:	repnz or BYTE PTR [eax+ebp*1-0x3f],dl
  4367f1:	or     bl,bh
  4367f3:	pop    ds
  4367f4:	inc    ebx
  4367f5:	popf   
  4367f6:	xchg   esp,eax
  4367f7:	pop    edi
  4367f8:	sbb    eax,edx
  4367fa:	dec    esi
  4367fb:	int    0x3d
  4367fd:	mov    edi,0x40a38332
  436802:	das    
  436803:	ins    BYTE PTR es:[edi],dx
  436804:	and    ecx,DWORD PTR [ebp-0x5cbd80fe]
  43680a:	sub    eax,0x80b662d4
  43680f:	dec    ebx
  436810:	hlt    
  436811:	sbb    BYTE PTR [edx+0x58],dh
  436814:	xchg   esp,eax
  436815:	into   
  436816:	jecxz  0x4367f3
  436818:	xchg   esi,eax
  436819:	inc    esi
  43681a:	outs   dx,DWORD PTR ds:[esi]
  43681b:	fldcw  WORD PTR [esi]
  43681d:	mov    ds:0x41fe5383,al
  436822:	sub    esp,eax
  436824:	out    0xba,eax
  436826:	nop
  436827:	fsub   DWORD PTR [ebp+0x23765800]
  43682d:	aas    
  43682e:	fsubr  QWORD PTR [edx]
  436830:	dec    esi
  436831:	call   FWORD PTR [edx-0x43]
  436834:	sub    DWORD PTR [edi],edi
  436836:	sub    dh,BYTE PTR [esi-0x3a]
  436839:	xor    DWORD PTR [di+0x6c52],esp
  43683e:	cmp    al,0xc9
  436840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436841:	or     eax,0x413810ae
  436846:	stos   DWORD PTR es:[edi],eax
  436847:	mov    bh,0x56
  436849:	push   ss
  43684a:	popa   
  43684b:	(bad)  
  43684c:	retf   
  43684d:	test   BYTE PTR [esi],0x65
  436850:	jl     0x436857
  436852:	adc    DWORD PTR [edi+0xeb01e11],esp
  436858:	retf   0x3ae8
  43685b:	test   eax,0x12ab99f6
  436860:	push   es
  436861:	push   ds
  436862:	imul   edi,DWORD PTR [eax+eax*4-0x26c77055],0x77
  43686a:	imul   edx,DWORD PTR [edx+esi*1],0x5a7c76f3
  436871:	test   DWORD PTR [edi],ebx
  436873:	test   eax,0xd8f9d730
  436878:	stos   DWORD PTR es:[edi],eax
  436879:	mov    ecx,0x778f9af1
  43687e:	adc    al,0x79
  436880:	jnp    0x43682d
  436882:	xchg   edx,eax
  436883:	pop    esi
  436884:	cmovno esi,DWORD PTR [esi-0x66]
  436888:	inc    eax
  436889:	call   0x7e59:0xfe2532eb
  436890:	sub    eax,0xb6b00a9
  436895:	out    0xf5,al
  436897:	cmp    BYTE PTR [ecx-0x29],cl
  43689a:	enter  0x1258,0x83
  43689e:	jl     0x436907
  4368a0:	js     0x436847
  4368a2:	fwait
  4368a3:	mov    ds:0xd03d9457,al
  4368a8:	pusha  
  4368a9:	(bad)  
  4368aa:	inc    esp
  4368ab:	cmp    DWORD PTR [ecx+ebp*1-0x27dc39ff],edi
  4368b2:	push   eax
  4368b3:	mov    esi,0xf8265e94
  4368b8:	cmp    edx,DWORD PTR [eax+0x7d]
  4368bb:	fnstcw WORD PTR [ebx+0x5159586f]
  4368c1:	imul   eax,DWORD PTR [edi+eax*1+0x5a],0x7b8c5252
  4368c9:	(bad)  
  4368ca:	and    BYTE PTR [ebx],bh
  4368cc:	test   eax,0x944de90d
  4368d1:	adc    edx,0xffffff91
  4368d4:	adc    dh,ah
  4368d6:	ins    DWORD PTR es:[edi],dx
  4368d7:	xchg   edi,eax
  4368d8:	(bad)  
  4368d9:	js     0x436889
  4368db:	test   eax,0x4d461d7
  4368e0:	ret    
  4368e1:	push   0xffffffe8
  4368e3:	cmp    eax,0xaf327eff
  4368e8:	or     eax,0x364bc2bd
  4368ed:	xor    al,0xdf
  4368ef:	dec    edx
  4368f0:	into   
  4368f1:	push   eax
  4368f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4368f3:	in     ax,dx
  4368f5:	mov    dh,0x24
  4368f7:	cmp    BYTE PTR [edi+0x61],dl
  4368fa:	popf   
  4368fb:	imul   esp,DWORD PTR [edx],0xeb6dfa0c
  436901:	es pop edx
  436903:	into   
  436904:	mov    dl,0x4e
  436906:	pop    esp
  436907:	push   esp
  436908:	or     DWORD PTR [esi-0x2d6eb619],eax
  43690e:	aas    
  43690f:	ins    BYTE PTR es:[edi],dx
  436910:	in     al,0x2c
  436912:	test   al,0xf9
  436914:	(bad)  
  436915:	out    0x1d,eax
  436917:	mov    cl,0x44
  436919:	(bad)  
  43691b:	mov    esp,0x3566140d
  436920:	je     0x436977
  436922:	inc    edi
  436923:	scas   al,BYTE PTR es:[edi]
  436924:	arpl   WORD PTR [ebx],sp
  436926:	and    al,0xa2
  436928:	inc    ebx
  436929:	sub    bl,BYTE PTR [ecx+0x25c41bcf]
  43692f:	scas   al,BYTE PTR es:[di]
  436931:	inc    BYTE PTR [edx]
  436933:	cmp    eax,0x71a82c6f
  436938:	gs ins DWORD PTR es:[edi],dx
  43693a:	(bad)  
  43693b:	sbb    al,BYTE PTR [edx+0x2f]
  43693e:	inc    edx
  43693f:	add    eax,0x7a1652e4
  436944:	lahf   
  436945:	jbe    0x436926
  436947:	or     ebp,DWORD PTR [ecx]
  436949:	mov    al,0xc9
  43694b:	jle    0x4368dc
  43694d:	rcl    DWORD PTR [edx-0x2a5b9936],0xf8
  436954:	jae    0x436920
  436956:	int3   
  436957:	adc    DWORD PTR [eax],0xc
  43695a:	adc    BYTE PTR [ebp-0x2e],ah
  43695d:	js     0x436900
  43695f:	pop    ds
  436960:	cmp    ch,ah
  436962:	gs or  edi,ecx
  436965:	lahf   
  436966:	push   eax
  436967:	sbb    dh,cl
  436969:	sub    WORD PTR [eax+0x27],0x5
  43696e:	sbb    al,bl
  436970:	rcl    eax,1
  436972:	pop    ebx
  436973:	push   ss
  436974:	cwde   
  436975:	jo     0x436921
  436977:	stos   DWORD PTR es:[edi],eax
  436978:	imul   DWORD PTR [esi-0x528bc972]
  43697e:	sub    edx,DWORD PTR [eax+ebp*2+0x5cb14dc6]
  436985:	push   esi
  436986:	outs   dx,DWORD PTR ds:[esi]
  436987:	mov    ebp,0x6d268d7b
  43698c:	pop    esp
  43698d:	jmp    0x7a169ea0
  436992:	retf   0xedb0
  436995:	mov    edi,0xcc6268b9
  43699a:	mov    bh,0x5a
  43699c:	mov    DWORD PTR [ecx],0x97a138c
  4369a2:	and    DWORD PTR [eax+ecx*8+0x6694f529],ebp
  4369a9:	cmp    bh,ch
  4369ab:	mov    eax,ds:0xf0d1b44
  4369b0:	mov    ah,0x53
  4369b2:	or     ebp,DWORD PTR [edx+0x61ccff56]
  4369b8:	xor    eax,0xa2ac9427
  4369bd:	in     al,dx
  4369be:	call   0x83acc62c
  4369c3:	test   eax,0x667ddcf0
  4369c8:	push   edx
  4369c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4369ca:	ds mov ah,0x75
  4369cd:	lods   al,BYTE PTR ds:[esi]
  4369ce:	sbb    dh,dl
  4369d0:	data16 fwait
  4369d2:	icebp  
  4369d3:	daa    
  4369d4:	(bad)  
  4369d5:	push   edx
  4369d6:	icebp  
  4369d7:	add    eax,0x3a83a09e
  4369dc:	enter  0x1b54,0x9d
  4369e0:	sbb    DWORD PTR [esi+0x1a],esi
  4369e3:	push   ebx
  4369e4:	mov    ds:0x671c70c1,eax
  4369e9:	popf   
  4369ea:	and    al,0x1b
  4369ec:	call   0x38c5:0xa0309d41
  4369f3:	fisttp DWORD PTR [ebx-0x1e]
  4369f6:	mov    WORD PTR [edx+0x6476ec7],ds
  4369fc:	adc    DWORD PTR [ebx+eax*8-0x55],ecx
  436a00:	scas   al,BYTE PTR es:[edi]
  436a01:	dec    ebp
  436a02:	dec    edi
  436a03:	push   cs
  436a04:	ror    ah,cl
  436a06:	ins    BYTE PTR es:[edi],dx
  436a07:	dec    esi
  436a08:	jmp    0x4369b3
  436a0a:	mov    ebx,0xac646e0
  436a0f:	add    DWORD PTR [edx+eiz*8+0x34],esi
  436a13:	jg     0x436a14
  436a15:	mov    dl,0xd0
  436a17:	mov    dh,0x87
  436a19:	sti    
  436a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436a1b:	jnp    0x436a0c
  436a1d:	push   0x10
  436a1f:	dec    ecx
  436a20:	xchg   esi,eax
  436a21:	aam    0xa2
  436a23:	cld    
  436a24:	mov    WORD PTR [edx-0x29],ds
  436a27:	inc    edi
  436a28:	sbb    al,0x49
  436a2a:	sbb    cl,ch
  436a2c:	in     eax,0x13
  436a2e:	mov    cl,0xad
  436a30:	nop
  436a31:	mov    bl,0x8d
  436a33:	outs   dx,BYTE PTR ds:[esi]
  436a34:	jmp    0x29c0:0xd6252eaf
  436a3b:	mov    bh,0xa5
  436a3d:	aaa    
  436a3e:	push   ecx
  436a3f:	ins    DWORD PTR es:[edi],dx
  436a40:	mov    dh,0x22
  436a42:	mov    bh,0x18
  436a44:	inc    edx
  436a45:	in     al,0xb3
  436a47:	int    0x66
  436a49:	mov    ecx,0x2061d45d
  436a4e:	xchg   esi,eax
  436a4f:	xchg   ebx,esi
  436a51:	data16 jb 0x436acf
  436a54:	addr16 call 0x64f0658e
  436a5a:	xchg   esi,eax
  436a5b:	aad    0x7f
  436a5d:	mov    ch,0x1c
  436a5f:	dec    esi
  436a60:	frstor [ebp+0x14]
  436a63:	push   edx
  436a64:	aad    0xd3
  436a66:	loopne 0x436a58
  436a68:	xchg   ebp,eax
  436a69:	mov    al,0xa1
  436a6b:	popf   
  436a6c:	fst    DWORD PTR [edx+0x1b]
  436a6f:	shl    ebp,1
  436a71:	dec    ebx
  436a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a73:	fstp   QWORD PTR [edi]
  436a75:	inc    ebx
  436a76:	push   0x18becc26
  436a7b:	inc    edi
  436a7c:	retf   
  436a7d:	stos   BYTE PTR es:[edi],al
  436a7e:	and    bh,BYTE PTR [edi+0x531ad5e8]
  436a84:	arpl   bp,si
  436a86:	dec    esp
  436a87:	jl     0x436a60
  436a89:	push   ds
  436a8a:	ret    0x61f9
  436a8d:	push   ebp
  436a8e:	add    dl,BYTE PTR [edi]
  436a90:	ds and edi,edi
  436a93:	outs   dx,DWORD PTR ds:[esi]
  436a94:	ficom  DWORD PTR [edx+eax*2-0x797370a5]
  436a9b:	cdq    
  436a9c:	shl    dl,cl
  436a9e:	(bad)  
  436a9f:	mov    al,ds:0xd0d5a809
  436aa4:	aam    0x9a
  436aa6:	pushf  
  436aa7:	dec    BYTE PTR [ecx]
  436aa9:	sub    eax,0x630de79a
  436aae:	mov    bh,0x55
  436ab0:	es pushf 
  436ab2:	adc    DWORD PTR [ebp-0x64],ebx
  436ab5:	scas   al,BYTE PTR es:[edi]
  436ab6:	sbb    eax,0x4b50dc0a
  436abb:	xchg   edx,eax
  436abc:	xchg   BYTE PTR [esi],dl
  436abe:	mov    eax,ds:0xd44530fa
  436ac3:	cmc    
  436ac4:	xchg   ebx,eax
  436ac5:	xchg   ebp,eax
  436ac6:	and    ah,BYTE PTR [ecx+0x24]
  436ac9:	and    bl,bl
  436acb:	test   eax,0xb121072e
  436ad0:	dec    esi
  436ad1:	jbe    0x436ae2
  436ad3:	call   0x7d39991e
  436ad8:	pusha  
  436ad9:	mov    ah,0x17
  436adb:	cmp    eax,0x29e23360
  436ae0:	hlt    
  436ae1:	imul   edx,DWORD PTR [eax],0x95141239
  436ae7:	leave  
  436ae8:	sti    
  436ae9:	mov    esp,0xfdef4079
  436aee:	xchg   edi,eax
  436aef:	rcr    bl,cl
  436af1:	cmp    al,0x1d
  436af3:	scas   eax,DWORD PTR es:[edi]
  436af4:	into   
  436af5:	bound  ebx,QWORD PTR [esi+ebp*1]
  436af8:	push   es
  436af9:	mul    BYTE PTR [ecx-0x79d39267]
  436aff:	retf   0x2e61
  436b02:	ds pop ebx
  436b04:	jns    0x436b2a
  436b06:	pop    esi
  436b07:	push   esp
  436b08:	and    BYTE PTR [edi+0x6ce32a5b],dh
  436b0e:	add    DWORD PTR [edx-0x4ea86f6],esi
  436b14:	xchg   eax,ebx
  436b16:	stos   DWORD PTR es:[edi],eax
  436b17:	stos   DWORD PTR es:[edi],eax
  436b18:	sbb    esi,DWORD PTR [eax-0x51]
  436b1b:	xchg   ebx,eax
  436b1c:	push   edx
  436b1d:	hlt    
  436b1e:	or     cl,BYTE PTR [edi+0x8]
  436b21:	lods   al,BYTE PTR ds:[esi]
  436b22:	cmc    
  436b23:	dec    ebx
  436b24:	ds in  al,dx
  436b26:	push   0xbee495d2
  436b2b:	cwde   
  436b2c:	adc    BYTE PTR [edi],dh
  436b2e:	lea    ecx,[ecx]
  436b30:	daa    
  436b31:	imul   ebp,DWORD PTR [edx-0x105bf86b],0xffffffd3
  436b38:	ss mov ah,0x2d
  436b3b:	sar    bh,1
  436b3d:	xchg   edi,eax
  436b3e:	push   edx
  436b3f:	int3   
  436b40:	jmp    0x436ae7
  436b42:	fisub  DWORD PTR [edx-0x25c24616]
  436b48:	jmp    0x436bba
  436b4a:	jl     0x436b36
  436b4c:	push   edx
  436b4d:	xor    al,ah
  436b4f:	xor    ecx,esi
  436b51:	xor    al,0x4d
  436b53:	lds    edx,FWORD PTR cs:[ecx]
  436b56:	and    eax,0xf290a17d
  436b5b:	add    ebx,DWORD PTR [edx-0x1a5df6fb]
  436b61:	pusha  
  436b62:	or     bl,BYTE PTR [edx-0x48]
  436b65:	scas   al,BYTE PTR es:[edi]
  436b66:	jb     0x436af2
  436b68:	cmp    eax,0xc6f17cf3
  436b6d:	inc    ebp
  436b6e:	lea    edx,[esi+0x52]
  436b71:	lahf   
  436b72:	lock or eax,0xc20135a7
  436b78:	sub    BYTE PTR [eax+eiz*8+0x54aef9fd],al
  436b7f:	xor    eax,ebp
  436b81:	ds in  al,0xf7
  436b84:	lds    eax,FWORD PTR [edi+0x53]
  436b87:	fisubr WORD PTR [eax]
  436b89:	aas    
  436b8a:	nop
  436b8b:	jp     0x436c01
  436b8d:	and    al,0x51
  436b8f:	mov    dh,0x4c
  436b91:	ret    
  436b92:	mov    ds:0xcf9dff34,al
  436b97:	jb     0x436b2c
  436b99:	inc    edi
  436b9a:	loope  0x436b42
  436b9c:	aaa    
  436b9d:	cs js  0x436bdf
  436ba0:	inc    edi
  436ba1:	loop   0x436b47
  436ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436ba4:	xor    al,0x74
  436ba6:	push   esi
  436ba7:	imul   esp,DWORD PTR [eax],0xfffffffb
  436baa:	ss inc ebp
  436bac:	les    edx,FWORD PTR [eax+ecx*2+0x4aff979f]
  436bb3:	(bad)  
  436bb4:	dec    esp
  436bb5:	fmul   QWORD PTR [ebx-0x5b]
  436bb8:	in     al,dx
  436bb9:	dec    ebx
  436bba:	popf   
  436bbb:	add    ch,BYTE PTR [esi+0x7b22fb23]
  436bc1:	mov    bl,0x24
  436bc3:	popa   
  436bc4:	sahf   
  436bc5:	sbb    ecx,0x74
  436bc8:	sbb    ah,BYTE PTR [ebx-0x34]
  436bcb:	and    bl,dl
  436bcd:	pop    edi
  436bce:	xchg   esp,eax
  436bcf:	pop    ds
  436bd0:	scas   al,BYTE PTR es:[edi]
  436bd1:	dec    ebx
  436bd2:	jmp    0x417e46ff
  436bd7:	jmp    0x29e5161e
  436bdc:	pop    ss
  436bdd:	inc    ebx
  436bde:	add    ebp,DWORD PTR [ebp-0x6a049add]
  436be4:	dec    eax
  436be5:	call   0x80c2:0xc81767f5
  436bec:	xor    al,0x16
  436bee:	out    0xf1,eax
  436bf0:	stos   DWORD PTR es:[edi],eax
  436bf1:	and    ch,BYTE PTR [ecx+edx*1-0x49]
  436bf5:	test   edx,edi
  436bf7:	dec    edi
  436bf8:	pcmpeqd mm6,QWORD PTR [edx]
  436bfb:	sbb    BYTE PTR [esi],dh
  436bfd:	out    dx,eax
  436bfe:	shr    BYTE PTR [edx],cl
  436c00:	(bad)  
  436c01:	or     al,bh
  436c03:	jo     0x436bfe
  436c05:	xchg   ebx,eax
  436c06:	test   edi,esi
  436c08:	stos   DWORD PTR es:[edi],eax
  436c09:	xor    esp,DWORD PTR [ebp-0x32]
  436c0c:	(bad)  
  436c0d:	aad    0x26
  436c0f:	ds (bad) 
  436c11:	push   cs
  436c12:	aas    
  436c13:	jo     0x436bcb
  436c15:	mov    dh,0x50
  436c17:	outs   dx,BYTE PTR ds:[esi]
  436c18:	sub    al,0x94
  436c1a:	loopne 0x436c3f
  436c1c:	in     eax,0x3b
  436c1e:	cmp    eax,0x411ca7
  436c23:	and    BYTE PTR [bx+di-0x58c7],al
  436c28:	(bad)  ds:0x63a5538a
  436c2e:	jo     0x436c6b
  436c30:	ds aam 0x6
  436c33:	inc    edx
  436c34:	push   cs
  436c35:	mov    cl,BYTE PTR [eax+0x44]
  436c38:	fucomip st,st(2)
  436c3a:	xchg   edi,eax
  436c3b:	jmp    0x1ab4:0xb8f59e7f
  436c42:	loopne 0x436cbf
  436c44:	cmp    edi,edi
  436c46:	lds    edx,FWORD PTR [esi-0x36aa2832]
  436c4c:	(bad)  
  436c4d:	push   esi
  436c4e:	into   
  436c4f:	sub    DWORD PTR [edi],0x4b624ad
  436c55:	mov    ds:0xdb42b209,al
  436c5a:	push   0x1abe069e
  436c5f:	add    bh,bh
  436c61:	(bad)  
  436c62:	mov    dh,0x99
  436c64:	mov    ch,0xb9
  436c66:	inc    ebx
  436c67:	nop
  436c68:	sti    
  436c69:	stos   BYTE PTR es:[edi],al
  436c6a:	sbb    al,0x82
  436c6c:	adc    al,0x2a
  436c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436c6f:	into   
  436c70:	jnp    0x436c21
  436c72:	sub    al,0xfa
  436c74:	sbb    al,0x81
  436c76:	pop    esi
  436c77:	rcr    eax,1
  436c79:	push   es
  436c7a:	xchg   DWORD PTR [esi+0x50b285e9],esi
  436c80:	repnz push esi
  436c82:	adc    BYTE PTR [ebx+0x5d0a107],bl
  436c88:	push   esp
  436c89:	ror    BYTE PTR [edx],cl
  436c8b:	sbb    cl,BYTE PTR [eax]
  436c8d:	outs   dx,BYTE PTR ds:[esi]
  436c8e:	out    0x88,al
  436c90:	loop   0x436d0e
  436c92:	adc    esp,DWORD PTR [edx+ebp*1-0x1f]
  436c96:	dec    ecx
  436c97:	ja     0x436ca0
  436c99:	add    al,0xf5
  436c9b:	jecxz  0x436c41
  436c9d:	frstor [eax]
  436c9f:	fldcw  WORD PTR [edi+edx*4-0x3c]
  436ca3:	or     al,0x48
  436ca5:	mov    al,ds:0x725fbe3f
  436caa:	mov    cl,0x62
  436cac:	mov    fs,WORD PTR [ecx+ebp*4+0x39e1518c]
  436cb3:	aad    0xff
  436cb5:	mov    ebx,0x5de0d3ca
  436cba:	cmp    eax,0xffffffba
  436cbd:	loop   0x436cbd
  436cbf:	pop    ss
  436cc0:	mov    WORD PTR [esi],cs
  436cc2:	cmova  ebp,DWORD PTR [ebx+0x5a]
  436cc6:	jae    0x436d27
  436cc8:	and    edx,0x2ff19126
  436cce:	mov    ebp,0xcae9d5bb
  436cd3:	lock adc DWORD PTR [ecx],ebx
  436cd6:	jo     0x436c6e
  436cd8:	cmp    al,0xda
  436cda:	scas   al,BYTE PTR es:[edi]
  436cdb:	push   esi
  436cdc:	mov    BYTE PTR [ebx-0x127500f6],dh
  436ce2:	inc    esi
  436ce3:	loopne 0x436d22
  436ce5:	sbb    eax,0xda29fc20
  436cea:	pop    esp
  436ceb:	stos   DWORD PTR es:[edi],eax
  436cec:	sub    dh,bl
  436cee:	imul   ebp,DWORD PTR [esp+edi*8],0xfffffff1
  436cf2:	cs scas al,BYTE PTR es:[edi]
  436cf4:	and    eax,0x62753e73
  436cf9:	xor    BYTE PTR [esi+0xced8a6a],bh
  436cff:	cmp    ebx,DWORD PTR [ebp+0x55]
  436d02:	and    eax,0xf11afadb
  436d07:	leave  
  436d08:	inc    ecx
  436d09:	sbb    al,BYTE PTR [ebp-0x16b506e5]
  436d0f:	fmul   DWORD PTR [ecx]
  436d11:	outs   dx,BYTE PTR ds:[esi]
  436d12:	mov    BYTE PTR [esi],0xe0
  436d15:	sar    BYTE PTR [ecx],cl
  436d17:	cmc    
  436d18:	inc    esp
  436d19:	cmp    al,dl
  436d1b:	inc    esi
  436d1c:	mov    WORD PTR [edx+edx*1],es
  436d1f:	test   eax,0x5a316661
  436d24:	sub    BYTE PTR [di],ah
  436d27:	push   esp
  436d28:	pop    ebp
  436d29:	sub    edx,DWORD PTR [edi-0x3d]
  436d2c:	push   edi
  436d2d:	out    0x78,eax
  436d2f:	xchg   ebp,eax
  436d30:	xchg   ebp,eax
  436d31:	pop    ebx
  436d32:	fimul  DWORD PTR [edi-0x4d9eed09]
  436d38:	mov    ds:0x3cd08319,eax
  436d3d:	gs and eax,0x27973971
  436d43:	sub    edx,esi
  436d45:	push   cs
  436d46:	adc    BYTE PTR [ebx+0xcc92674],cl
  436d4c:	stos   DWORD PTR es:[edi],eax
  436d4d:	mov    edx,0x5b8d02e
  436d52:	adc    edi,DWORD PTR [esi+0x1f]
  436d55:	ror    DWORD PTR [esi],1
  436d57:	jecxz  0x436d7c
  436d59:	cmp    DWORD PTR [ebx],ebx
  436d5b:	(bad)  
  436d5c:	stc    
  436d5d:	and    al,0xf9
  436d5f:	xchg   ebp,eax
  436d60:	addr16 stc 
  436d62:	mov    bh,0x6
  436d64:	push   es
  436d65:	fistp  DWORD PTR [eax]
  436d67:	inc    esp
  436d68:	js     0x436d72
  436d6a:	sbb    al,0x2c
  436d6c:	pusha  
  436d6d:	pop    ebx
  436d6e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436d71:	adc    BYTE PTR [ebx+0x3e76fc6d],0x24
  436d78:	mov    esp,0xffd32c3e
  436d7d:	jle    0x436d36
  436d7f:	mov    esi,0x35917b38
  436d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436d85:	ins    BYTE PTR es:[edi],dx
  436d86:	daa    
  436d87:	sbb    eax,0x8506f1da
  436d8c:	cmp    DWORD PTR ds:0xe4a426b7,ebp
  436d92:	sahf   
  436d93:	xlat   BYTE PTR ds:[ebx]
  436d94:	sbb    dl,BYTE PTR [ebx+0x39]
  436d97:	minps  xmm0,XMMWORD PTR [edi]
  436d9a:	repnz mov bl,0xa1
  436d9d:	in     eax,dx
  436d9e:	inc    ebp
  436d9f:	hlt    
  436da0:	icebp  
  436da1:	test   DWORD PTR [edi+ebx*4+0x29da9b60],eax
  436da8:	cmp    bh,dh
  436daa:	sbb    ch,BYTE PTR [esi+0x44]
  436dad:	popf   
  436dae:	in     eax,0x8b
  436db0:	scas   al,BYTE PTR es:[edi]
  436db1:	sar    DWORD PTR [eax+eax*1],cl
  436db4:	jno    0x436e0a
  436db6:	add    eax,0x87cde4b6
  436dbb:	data16 jae 0x436dbc
  436dbe:	xchg   esp,eax
  436dbf:	aaa    
  436dc0:	mov    dl,0x59
  436dc2:	jg     0x436dc1
  436dc4:	adc    ebx,ecx
  436dc6:	daa    
  436dc7:	pop    ecx
  436dc8:	stos   BYTE PTR es:[edi],al
  436dc9:	stos   BYTE PTR es:[edi],al
  436dca:	push   cs
  436dcb:	inc    edx
  436dcc:	pop    DWORD PTR [ebx+0x1a]
  436dcf:	test   ecx,edx
  436dd1:	cmp    edx,esp
  436dd3:	mov    edx,0x57d20f5c
  436dd8:	fstp   DWORD PTR [ebx+0x35ca52ca]
  436dde:	ja     0x436df6
  436de0:	stos   DWORD PTR es:[edi],eax
  436de1:	mov    DWORD PTR [edx+0x1f32274c],ecx
  436de7:	ret    0x625b
  436dea:	popf   
  436deb:	clc    
  436dec:	mov    ecx,0xeae61b17
  436df1:	push   eax
  436df2:	int    0x25
  436df4:	jno    0x436de7
  436df6:	and    bh,BYTE PTR [ebp-0x2e93084d]
  436dfc:	outs   dx,BYTE PTR ds:[esi]
  436dfd:	sub    BYTE PTR [edx+0x12],ch
  436e00:	outs   dx,BYTE PTR ds:[esi]
  436e01:	ins    BYTE PTR es:[edi],dx
  436e02:	call   0x3be4:0x597e9679
  436e09:	xor    edi,DWORD PTR [ebp-0x21]
  436e0c:	ret    0x1d39
  436e0f:	jno    0x436d97
  436e11:	sub    ch,BYTE PTR [ebp-0x6dcbe3f7]
  436e17:	jns    0x436e28
  436e19:	bsr    edi,DWORD PTR [edx+0x3]
  436e1d:	pop    ss
  436e1e:	inc    edi
  436e1f:	nop
  436e20:	push   ss
  436e21:	int3   
  436e22:	jg     0x436e93
  436e24:	(bad)  
  436e25:	jno    0x436de1
  436e27:	inc    esi
  436e28:	jmp    0x95c1:0x57202ee0
  436e2f:	iret   
  436e30:	push   esp
  436e31:	(bad)  
  436e32:	retf   0x61b8
  436e35:	jbe    0x436e67
  436e37:	(bad)  
  436e38:	pop    ds
  436e39:	jae    0x436dbe
  436e3b:	dec    ecx
  436e3c:	retf   0xf653
  436e3f:	fiadd  DWORD PTR [edx]
  436e41:	and    edi,esp
  436e43:	into   
  436e44:	into   
  436e45:	xchg   esp,eax
  436e46:	xchg   ecx,eax
  436e47:	xor    BYTE PTR [ebp-0x73],0xc4
  436e4b:	bound  ebp,QWORD PTR [ebx+0x79]
  436e4e:	(bad)  
  436e4f:	call   0x103c1933
  436e54:	dec    eax
  436e55:	lods   eax,DWORD PTR ds:[esi]
  436e56:	pushf  
  436e57:	pusha  
  436e58:	mov    WORD PTR [eax-0x5d],gs
  436e5b:	jbe    0x436df5
  436e5d:	xor    eax,0x962029a8
  436e62:	jno    0x436e03
  436e64:	lahf   
  436e65:	cs push esp
  436e67:	loopne 0x436e26
  436e69:	and    edi,DWORD PTR [edi+edi*8-0xa]
  436e6d:	push   esi
  436e6e:	ret    0x4f4e
  436e71:	push   ss
  436e72:	enter  0x9e16,0x8a
  436e76:	fisttp WORD PTR [esi]
  436e78:	mov    cl,0x31
  436e7a:	inc    esp
  436e7b:	aad    0x7
  436e7d:	or     BYTE PTR [eax],ch
  436e7f:	test   al,0xb3
  436e81:	lods   al,BYTE PTR ds:[esi]
  436e82:	add    al,0x24
  436e84:	and    al,0x45
  436e86:	and    al,0x4a
  436e88:	jne    0x436e13
  436e8a:	or     BYTE PTR [edi-0x6c0c3a1e],ch
  436e90:	ja     0x436e40
  436e92:	nop
  436e93:	sbb    ecx,0xfffffff7
  436e96:	aad    0x31
  436e98:	and    ch,bl
  436e9a:	bound  edi,QWORD PTR [esi-0x5cc64c45]
  436ea0:	pop    esi
  436ea1:	adc    DWORD PTR [esi+ebx*8+0x2d],esi
  436ea5:	push   ebp
  436ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436ea7:	push   ecx
  436ea8:	sub    DWORD PTR ds:0x76008467,0x8a12378f
  436eb2:	cld    
  436eb3:	test   al,0x3b
  436eb5:	mov    DWORD PTR [edi-0x20d20510],0xae37e1f7
  436ebf:	mov    ch,0x65
  436ec1:	pushf  
  436ec2:	mov    edx,0x22cc8a0f
  436ec7:	loope  0x436e5f
  436ec9:	pop    ecx
  436eca:	retf   0xc0d4
  436ecd:	cmp    BYTE PTR [ebp-0x1696a332],bh
  436ed3:	cmp    eax,0x64e2fee8
  436ed8:	out    dx,eax
  436ed9:	add    ecx,DWORD PTR [edi+0x57]
  436edc:	addr16 inc ebx
  436ede:	and    DWORD PTR [ebp+0x47],ebx
  436ee1:	mov    esp,0x6363c15c
  436ee6:	in     eax,0x1
  436ee8:	inc    esp
  436ee9:	sbb    eax,0x8477c897
  436eee:	test   al,0xe4
  436ef0:	into   
  436ef1:	test   eax,0x1ff55f9a
  436ef6:	mov    edx,0x3bb93b1
  436efb:	aaa    
  436efc:	xor    BYTE PTR [esi+0x45],bl
  436eff:	dec    edi
  436f00:	and    al,0xc4
  436f02:	fstp   TBYTE PTR [ebx]
  436f04:	push   eax
  436f05:	sbb    al,BYTE PTR [edi-0x5339fc25]
  436f0b:	lods   eax,DWORD PTR ds:[esi]
  436f0c:	dec    eax
  436f0d:	push   eax
  436f0e:	dec    eax
  436f0f:	cwde   
  436f10:	pop    ds
  436f11:	cwde   
  436f12:	push   0xffffffce
  436f14:	test   al,0xd6
  436f16:	das    
  436f17:	in     al,dx
  436f18:	ins    DWORD PTR es:[edi],dx
  436f19:	and    al,0x65
  436f1b:	das    
  436f1c:	sbb    ecx,ebx
  436f1e:	sbb    dh,dl
  436f20:	mov    ds:0x7987e121,eax
  436f25:	rcr    esp,1
  436f27:	jmp    DWORD PTR [edi]
  436f29:	outs   dx,BYTE PTR ds:[esi]
  436f2a:	in     al,0x49
  436f2c:	ret    
  436f2d:	push   ebp
  436f2e:	mov    al,0x1b
  436f30:	in     eax,dx
  436f31:	popf   
  436f32:	adc    DWORD PTR [ecx+0x37],edi
  436f35:	push   0x6b4a5990
  436f3a:	sbb    edx,eax
  436f3c:	fmul   DWORD PTR [edi]
  436f3e:	jne    0x436f12
  436f40:	gs retf 0x5d40
  436f44:	gs push 0x3c9b5828
  436f4a:	add    eax,0xae638e3b
  436f4f:	ja     0x436f65
  436f51:	fnstenv [esi]
  436f53:	(bad)  
  436f54:	ja     0x436ed6
  436f56:	leave  
  436f57:	sub    al,0xd9
  436f59:	sbb    DWORD PTR [ebp-0x3f4d9aed],esi
  436f5f:	retf   0xce63
  436f62:	ficom  WORD PTR [edi+0x0]
  436f65:	mov    dl,0x9d
  436f67:	and    BYTE PTR [eax-0x51],dl
  436f6a:	pop    esi
  436f6b:	leave  
  436f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436f6d:	mov    bl,0xf1
  436f6f:	xchg   ebp,eax
  436f70:	cs mov edx,0xeaac84e1
  436f76:	dec    ebp
  436f77:	xor    BYTE PTR [esi-0x7aa0b596],bh
  436f7d:	mov    ds:0x54b3643b,eax
  436f82:	push   es
  436f83:	and    BYTE PTR ds:[ebp-0x3d],ah
  436f87:	sub    esp,DWORD PTR [esi+0x6f4d9453]
  436f8d:	leave  
  436f8e:	cmp    al,BYTE PTR ds:0x7f97539b
  436f94:	xchg   DWORD PTR [esi+eax*1+0x622f0c5],ebp
  436f9b:	mov    esp,0x4bd4e593
  436fa0:	pop    ebp
  436fa1:	push   esp
  436fa2:	call   0x5efb54f
  436fa7:	mov    esp,0xdbd62432
  436fac:	push   esp
  436fad:	mov    dh,0xf3
  436faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436fb0:	in     eax,0x16
  436fb2:	sub    DWORD PTR [eax+edi*4],edi
  436fb5:	mov    ebp,0xdf05256b
  436fba:	mov    bh,BYTE PTR [edx+ecx*4-0x21]
  436fbe:	dec    esi
  436fbf:	lods   eax,DWORD PTR ds:[esi]
  436fc0:	popf   
  436fc1:	loope  0x436ffa
  436fc3:	dec    edx
  436fc4:	test   BYTE PTR [eax+0x5e],ah
  436fc7:	pop    esi
  436fc8:	jmp    0xd0a7:0xea8c16de
  436fcf:	jno    0x436fa6
  436fd1:	out    0x41,eax
  436fd3:	nop
  436fd4:	or     dh,BYTE PTR [ecx+0x3c29fea4]
  436fda:	xor    eax,0xefe69aae
  436fdf:	ja     0x43703c
  436fe1:	jbe    0x43701e
  436fe3:	fs cmc 
  436fe5:	aad    0x5e
  436fe7:	push   esi
  436fe8:	and    cl,BYTE PTR [eax]
  436fea:	mov    al,ds:0x95935e75
  436fef:	clc    
  436ff0:	fstp   DWORD PTR [edx-0x2c9063c8]
  436ff6:	cmp    DWORD PTR [eax+0x2d],0x3f
  436ffa:	add    DWORD PTR [edx],ebp
  436ffc:	lods   eax,DWORD PTR ds:[esi]
  436ffd:	cs push ebp
  436fff:	jo     0x437002
  437001:	leave  
  437002:	dec    edx
  437003:	adc    BYTE PTR [ecx+edi*1-0x13],0x20
  437008:	jg     0x437048
  43700a:	aas    
  43700b:	dec    edi
  43700c:	(bad)  
  43700d:	push   ecx
  43700e:	test   BYTE PTR [edx+edx*4],al
  437011:	sar    DWORD PTR [esi],0x96
  437014:	push   edx
  437015:	add    edx,DWORD PTR [eax+ebx*2-0x4e]
  437019:	aad    0x5f
  43701b:	ds mov edi,DWORD PTR ds:[edi+esi*1-0x7854b29]
  437024:	idiv   BYTE PTR [esi-0x52f21cde]
  43702a:	fs cmp eax,0xd929620d
  437030:	dec    ebx
  437031:	je     0x4370b2
  437033:	pop    esp
  437034:	sub    al,0x97
  437036:	cmp    eax,0xc584c1a4
  43703b:	scas   eax,DWORD PTR es:[edi]
  43703c:	sti    
  43703d:	mov    esp,DWORD PTR [edi*8+0x42c7ee33]
  437044:	daa    
  437045:	cmp    esi,DWORD PTR [ecx]
  437047:	and    al,0xa1
  437049:	scas   eax,DWORD PTR es:[edi]
  43704a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43704b:	mov    DWORD PTR [esi-0x607d4137],esp
  437051:	cwde   
  437052:	dec    edi
  437053:	or     al,0xcb
  437055:	pop    ebx
  437056:	pop    edx
  437057:	fld    TBYTE PTR [ebp*1-0x5bbd5523]
  43705e:	repz xor DWORD PTR [edi-0x4cd571ac],esi
  437065:	inc    ecx
  437066:	sub    al,0x66
  437068:	push   cs
  437069:	add    ah,al
  43706b:	sahf   
  43706c:	cmp    dl,BYTE PTR [ecx+eax*1+0x10]
  437070:	fidiv  WORD PTR [ebp-0x17afb186]
  437076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437077:	push   eax
  437078:	imul   esi,esi,0xfffffff5
  43707b:	pop    ebp
  43707c:	sbb    al,0xaf
  43707e:	ds push cs
  437080:	jl     0x43702f
  437082:	push   ds
  437083:	inc    esi
  437084:	mov    ds:0x1634cc7,eax
  437089:	icebp  
  43708a:	mov    ebx,0x2258ed9f
  43708f:	outs   dx,BYTE PTR ds:[esi]
  437090:	in     eax,dx
  437091:	adc    eax,0xcb377c29
  437096:	daa    
  437097:	push   edx
  437098:	mov    ds:0x4c2815e3,eax
  43709d:	or     edx,DWORD PTR [di]
  4370a0:	das    
  4370a1:	mov    DWORD PTR [eax],ecx
  4370a3:	fs in  al,dx
  4370a5:	mov    esp,0x148dcb33
  4370aa:	xor    al,0x78
  4370ac:	imul   esp,DWORD PTR [esi+0x71],0x83d4d777
  4370b3:	loop   0x43703c
  4370b5:	sti    
  4370b6:	int    0x38
  4370b8:	push   cs
  4370b9:	in     eax,dx
  4370ba:	dec    edi
  4370bb:	pop    edi
  4370bc:	xchg   BYTE PTR [ebx-0x59f7df8d],ah
  4370c2:	add    DWORD PTR [esi],esp
  4370c4:	inc    esi
  4370c5:	sbb    al,0xac
  4370c7:	loope  0x437118
  4370c9:	ins    DWORD PTR es:[edi],dx
  4370ca:	inc    esi
  4370cb:	jmp    0xb5634a6d
  4370d0:	loopne 0x4370b3
  4370d2:	(bad)  
  4370d3:	mov    esp,0x7ecbf59c
  4370d8:	jl     0x437150
  4370da:	out    dx,eax
  4370db:	fimul  WORD PTR [ebx+0xbf37aff]
  4370e1:	test   al,0xdf
  4370e3:	mov    dl,0x27
  4370e5:	mov    esi,0xde6ffd2c
  4370ea:	std    
  4370eb:	pop    esi
  4370ec:	lods   al,BYTE PTR ds:[esi]
  4370ed:	repnz pop eax
  4370ef:	mov    ecx,0x18cd8aa3
  4370f4:	sbb    dl,BYTE PTR [ecx]
  4370f6:	adc    al,bl
  4370f8:	push   ss
  4370f9:	mov    edi,gs
  4370fb:	and    al,BYTE PTR [ebp+0x67f71356]
  437101:	mov    eax,ds:0xab6eb87
  437106:	push   0x28
  437108:	mov    bl,0x6e
  43710a:	pop    esp
  43710b:	dec    ecx
  43710c:	in     eax,dx
  43710d:	sub    dh,al
  43710f:	jge    0x437117
  437111:	imul   esp,DWORD PTR [ecx+0x3ad263ce],0xb457a8b1
  43711b:	sub    bh,cl
  43711d:	gs inc ecx
  43711f:	and    dh,BYTE PTR [edi+0x1fb3806f]
  437125:	add    dl,BYTE PTR [ecx+ebp*1]
  437128:	push   esi
  437129:	jge    0x43712b
  43712b:	scas   eax,DWORD PTR es:[edi]
  43712c:	nop
  43712d:	inc    esi
  43712e:	xor    edi,DWORD PTR [ebp+0x2d7f7e5f]
  437134:	push   0xffffffda
  437136:	femms  
  437138:	and    al,0x1c
  43713a:	pop    edi
  43713b:	jle    0x4370e5
  43713d:	jecxz  0x437103
  43713f:	leave  
  437140:	shr    DWORD PTR [ecx-0x65],cl
  437143:	sbb    al,0xb6
  437145:	clc    
  437146:	ret    
  437147:	pop    es
  437148:	rcr    BYTE PTR [ebp-0x19],0xc9
  43714c:	shl    DWORD PTR [esi+eax*1],0x9b
  437150:	dec    ebx
  437151:	in     eax,0xd0
  437153:	cmp    DWORD PTR [esi-0x70],ecx
  437156:	mov    al,ds:0x44f6faa5
  43715b:	pushf  
  43715c:	jns    0x4370e9
  43715e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43715f:	fwait
  437160:	bound  esi,QWORD PTR [eax]
  437162:	pop    edx
  437163:	ficomp DWORD PTR [edx-0x6c492a70]
  437169:	cmp    eax,0xea3d1e3
  43716e:	jno    0x4371e5
  437170:	stc    
  437171:	inc    edi
  437172:	dec    esp
  437173:	rcl    cl,0x1c
  437176:	adc    BYTE PTR [eax-0x5c4e8c11],bl
  43717c:	ret    
  43717d:	shl    BYTE PTR [ebx-0x40],0xd9
  437181:	cmp    BYTE PTR [ecx+0x602bf3be],bl
  437187:	aam    0x11
  437189:	dec    esp
  43718a:	xlat   BYTE PTR ds:[ebx]
  43718b:	cmp    BYTE PTR [eax+ebp*2-0xd0a7afc],cl
  437192:	shl    BYTE PTR ds:0xe1a03a66,cl
  437198:	call   0x7ad5:0x64a0c160
  43719f:	in     eax,0xd4
  4371a1:	add    eax,0x60c4c4e6
  4371a6:	pop    ebx
  4371a7:	or     DWORD PTR [eax],esp
  4371a9:	in     eax,0x1d
  4371ab:	mov    edi,0xba56192c
  4371b0:	call   0x19fb6856
  4371b5:	jne    0x437156
  4371b7:	pushf  
  4371b8:	mov    al,ds:0xf93c90f6
  4371bd:	les    edi,FWORD PTR [edi+0x55]
  4371c0:	sbb    edx,DWORD PTR [ecx-0x31]
  4371c3:	daa    
  4371c4:	mov    ebp,0x56c2cd74
  4371c9:	ins    BYTE PTR es:[edi],dx
  4371ca:	adc    al,0xbf
  4371cc:	cmp    DWORD PTR [ecx],0x3d875377
  4371d2:	inc    esp
  4371d3:	sbb    DWORD PTR [ebp-0x6f],ebx
  4371d6:	(bad)  
  4371d7:	sub    eax,0x6a85a28a
  4371dc:	sub    bl,bl
  4371de:	packuswb mm2,QWORD PTR [ecx]
  4371e1:	xlat   BYTE PTR ds:[ebx]
  4371e2:	fistp  QWORD PTR [esi+ebx*8+0x51c420d0]
  4371e9:	pop    eax
  4371ea:	jmp    FWORD PTR [ecx+0x50abeb08]
  4371f0:	jno    0x437228
  4371f2:	jmp    0x437271
  4371f4:	xchg   esi,eax
  4371f5:	jge    0x437179
  4371f7:	loop   0x43723f
  4371f9:	es push ds
  4371fb:	repz mov dl,0x53
  4371fe:	mov    edx,0xc76354c0
  437203:	cld    
  437204:	mov    dh,0x88
  437206:	push   0xb0c027e4
  43720b:	mov    ecx,0xdba63888
  437210:	mov    eax,ds:0xdbe68a7c
  437215:	fwait
  437216:	loopne 0x437230
  437218:	stos   DWORD PTR es:[edi],eax
  437219:	sbb    BYTE PTR [ebx+ecx*8+0x14],bl
  43721d:	inc    eax
  43721e:	pop    edx
  43721f:	int3   
  437220:	fisttp QWORD PTR [ecx]
  437222:	mov    dl,0x46
  437224:	pop    esi
  437225:	xor    DWORD PTR [edx+eax*4+0x6b6bce60],eax
  43722c:	mov    dl,0x1c
  43722e:	gs mov ecx,0xc7f8c0d4
  437234:	test   BYTE PTR [edx],cl
  437236:	fwait
  437237:	in     al,dx
  437238:	in     eax,dx
  437239:	rol    al,1
  43723b:	and    dh,bl
  43723d:	int3   
  43723e:	pop    ecx
  43723f:	xchg   ebx,eax
  437240:	push   ebx
  437241:	pop    ds
  437242:	leave  
  437243:	adc    al,0xde
  437245:	xchg   DWORD PTR [ebx+0x3ce06864],ecx
  43724b:	pushf  
  43724c:	pushf  
  43724d:	das    
  43724e:	xor    al,BYTE PTR [ebx]
  437250:	fidiv  WORD PTR [esp+edx*8+0xa]
  437254:	ins    BYTE PTR es:[edi],dx
  437255:	arpl   WORD PTR [edx],dx
  437257:	fisttp WORD PTR [ebx-0x14]
  43725a:	ds mov esp,0x86b22d55
  437260:	inc    ebx
  437261:	inc    ecx
  437262:	sbb    eax,0xcd002d2f
  437267:	arpl   WORD PTR [ebp+0x77],si
  43726a:	out    dx,eax
  43726b:	(bad)  [esi-0x12898a19]
  437271:	leave  
  437272:	test   BYTE PTR [ebp-0x21b1b6da],dh
  437278:	mov    BYTE PTR [ebx+0x5b],0xef
  43727c:	pop    DWORD PTR [eax]
  43727e:	or     eax,0xc9fb387
  437283:	test   al,0xde
  437285:	cwde   
  437286:	and    dh,ah
  437288:	ret    
  437289:	adc    eax,0xbd50e956
  43728e:	lahf   
  43728f:	dec    esi
  437290:	xor    DWORD PTR [edi],eax
  437292:	pop    edi
  437293:	repz retf 0xdc27
  437297:	mov    WORD PTR [eax+0xd75b51b],?
  43729d:	test   DWORD PTR [esi+0x2e88338e],edi
  4372a3:	jne    0x437287
  4372a5:	mov    eax,0xb00096e2
  4372aa:	xor    BYTE PTR [ebp+ecx*1+0x6647d20e],dl
  4372b1:	popa   
  4372b2:	into   
  4372b3:	mov    BYTE PTR [esi-0x42a34f0f],al
  4372b9:	jne    0x437313
  4372bb:	pop    ds
  4372bc:	sub    eax,0xfe66c3f
  4372c1:	push   edx
  4372c2:	imul   ebp,ebp,0xffffff90
  4372c5:	mov    ah,0x15
  4372c7:	mov    al,ds:0xbb60bedc
  4372cc:	xchg   esi,eax
  4372cd:	js     0x4372c4
  4372cf:	sub    bl,cl
  4372d1:	xor    bl,BYTE PTR [ecx+eax*1]
  4372d4:	mov    WORD PTR [esi],?
  4372d6:	add    al,BYTE PTR [ecx]
  4372d8:	cmp    al,ah
  4372da:	push   0x72
  4372dc:	mov    edi,0xfc5a339a
  4372e1:	iret   
  4372e2:	mov    WORD PTR [edi+edi*2],?
  4372e5:	mov    WORD PTR [ecx+0xa],cs
  4372e8:	popa   
  4372e9:	and    ecx,DWORD PTR [ebx+0x6d104d76]
  4372ef:	dec    ebp
  4372f0:	ret    0xb277
  4372f3:	or     ecx,0xfbd4d4e6
  4372f9:	push   ebx
  4372fa:	pop    ds
  4372fb:	(bad)  
  4372fc:	loopne 0x4372b0
  4372fe:	jmp    0x293e:0x55fbb8e
  437305:	fs inc ebx
  437307:	jmp    0xed5c8ad5
  43730c:	cmp    esp,DWORD PTR [edx+ecx*2-0x74]
  437310:	rcl    BYTE PTR [ebx],0xd7
  437313:	repz mov ds:0x714da60f,eax
  437319:	(bad)  
  43731a:	mov    ds:0xe5dcbc6d,eax
  43731f:	out    0x18,al
  437321:	sub    BYTE PTR [ebp+0x2c],al
  437324:	mov    ebp,0x8e2db6c8
  437329:	(bad)  
  43732a:	icebp  
  43732b:	scas   al,BYTE PTR es:[edi]
  43732c:	mov    ch,bl
  43732e:	jp     0x4373a9
  437330:	hlt    
  437331:	and    ah,BYTE PTR [ecx]
  437333:	repz es mov edi,0x9654d38e
  43733a:	cmp    ah,BYTE PTR [esi]
  43733c:	scas   eax,DWORD PTR es:[edi]
  43733d:	(bad)  
  43733e:	sub    cl,cl
  437340:	(bad)  
  437342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437343:	cmp    al,0xfc
  437345:	mov    ch,0x5a
  437347:	fld    TBYTE PTR [eax-0x556277a1]
  43734d:	push   ss
  43734e:	aaa    
  43734f:	pop    ecx
  437350:	push   ebx
  437351:	test   bh,dh
  437353:	mov    ecx,0x92b3bbe1
  437358:	ret    
  437359:	xchg   ebp,eax
  43735a:	inc    ebp
  43735b:	fs leave 
  43735d:	pop    es
  43735e:	mov    WORD PTR ds:0xb15e8fb5,?
  437364:	xchg   ebp,eax
  437365:	sbb    eax,0xb3d13958
  43736a:	push   ebp
  43736b:	jae    0x43732c
  43736d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43736e:	push   esp
  43736f:	loopne 0x43733a
  437371:	jecxz  0x437315
  437373:	and    al,0xa6
  437375:	dec    esp
  437376:	mov    eax,es:0xe551f09d
  43737c:	mov    eax,ds:0x442be256
  437381:	nop
  437382:	add    cl,BYTE PTR [ebx]
  437384:	xor    al,0x60
  437386:	mov    dl,0x93
  437388:	xchg   ebp,eax
  437389:	sar    edi,1
  43738b:	cld    
  43738c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43738d:	push   edx
  43738e:	cli    
  43738f:	inc    edi
  437390:	lock xchg ecx,eax
  437392:	ins    DWORD PTR es:[edi],dx
  437393:	fwait
  437394:	outs   dx,BYTE PTR ds:[esi]
  437395:	out    dx,eax
  437396:	sbb    BYTE PTR [ebx+0x4a],ch
  437399:	or     eax,0x1448eb9b
  43739e:	sbb    DWORD PTR [ebx+0x2f],eax
  4373a1:	sbb    DWORD PTR [ebx-0x4a],esi
  4373a4:	cmp    ch,BYTE PTR [ebp-0x28]
  4373a7:	ret    0xd2c6
  4373aa:	jnp    0x4373cd
  4373ac:	repz ja 0x4373d7
  4373af:	xchg   ecx,eax
  4373b0:	mov    ds:0xce44c53f,al
  4373b5:	xlat   BYTE PTR ds:[ebx]
  4373b6:	int    0xcd
  4373b8:	xchg   ebx,eax
  4373b9:	ja     0x43735e
  4373bb:	int    0xcb
  4373bd:	fldenv [edi-0x23]
  4373c0:	adc    BYTE PTR [edx+0x7f90f722],bh
  4373c6:	lahf   
  4373c7:	pop    ds
  4373c8:	aaa    
  4373c9:	mov    edi,0x2b26a372
  4373ce:	mov    eax,ds:0xbb7fdb0
  4373d3:	out    dx,al
  4373d4:	mov    dl,0x90
  4373d6:	ds push ds
  4373d8:	push   0x63e784ea
  4373dd:	and    dh,BYTE PTR [edi-0x1]
  4373e0:	inc    edi
  4373e1:	jecxz  0x437393
  4373e3:	add    eax,0xc58c1f8c
  4373e8:	sbb    ah,dh
  4373ea:	xchg   esp,eax
  4373eb:	cmc    
  4373ec:	push   esi
  4373ed:	cmp    cl,bh
  4373ef:	push   cs
  4373f0:	stc    
  4373f1:	mov    dh,0x43
  4373f3:	ds add bh,cl
  4373f6:	cmp    eax,0x648762de
  4373fb:	bound  ecx,QWORD PTR [ebx]
  4373fd:	jmp    0x43739f
  4373ff:	stos   DWORD PTR es:[edi],eax
  437400:	push   0xf
  437402:	fnstenv [edi]
  437404:	adc    ebp,DWORD PTR [edi]
  437406:	ret    
  437407:	stos   BYTE PTR es:[edi],al
  437408:	or     esi,0x40
  43740b:	jnp    0x43741d
  43740d:	adc    ah,cl
  43740f:	mov    ebx,0xd01c3b13
  437414:	push   esi
  437415:	enter  0x849e,0x95
  437419:	mov    BYTE PTR [edi],ah
  43741b:	cmp    DWORD PTR [bp+di-0x5c],esi
  43741f:	jle    0x43740b
  437421:	iret   
  437422:	std    
  437423:	scas   eax,DWORD PTR es:[edi]
  437424:	and    dh,ah
  437426:	out    0x6,al
  437428:	jp     0x4373c1
  43742a:	or     al,0x53
  43742c:	call   0xfaf1:0x47afa3a6
  437433:	jg     0x43748c
  437435:	neg    DWORD PTR [edx+edi*4-0x361b3075]
  43743c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43743d:	sub    DWORD PTR [eax],0xffffffb7
  437440:	jle    0x43742e
  437442:	mov    fs,eax
  437444:	add    BYTE PTR [ebx+0x20e6761],bh
  43744a:	push   eax
  43744b:	in     al,dx
  43744c:	pop    DWORD PTR [eax]
  43744e:	mov    edx,0x734a4465
  437453:	imul   bp,WORD PTR [ebp+0x7c3c82c0],0xcb33
  43745c:	push   0xffffffe9
  43745e:	mov    al,ds:0x477a026c
  437463:	inc    esp
  437464:	push   ebp
  437465:	ficomp DWORD PTR [ebp+0x3edec486]
  43746b:	hlt    
  43746c:	xlat   BYTE PTR ds:[ebx]
  43746d:	(bad)  
  43746e:	mov    ch,0x1f
  437470:	arpl   WORD PTR [eax+0x6c64dae8],di
  437476:	int3   
  437477:	arpl   WORD PTR [edx-0x402ba1bc],cx
  43747d:	int3   
  43747e:	jns    0x437480
  437480:	mov    al,ds:0x6df40426
  437485:	fcomip st,st(2)
  437487:	rcr    DWORD PTR [ebp+ecx*1-0x49c7bf83],1
  43748e:	pop    edx
  43748f:	add    dh,bh
  437491:	sbb    ecx,DWORD PTR [edi]
  437493:	add    ch,BYTE PTR [edi-0x7759b5c3]
  437499:	rcl    bh,1
  43749b:	fist   WORD PTR [edi-0x7f]
  43749e:	or     al,0x39
  4374a0:	mov    WORD PTR [ebx],ss
  4374a2:	pop    esp
  4374a3:	stos   BYTE PTR es:[edi],al
  4374a4:	in     al,0x67
  4374a6:	mov    esp,0x88b0d2ff
  4374ab:	popa   
  4374ac:	ja     0x4374c3
  4374ae:	mov    ds:0x881b7829,al
  4374b3:	xor    DWORD PTR [edi+0x528f66e],eax
  4374b9:	bound  ecx,QWORD PTR [edi-0xd]
  4374bc:	rol    BYTE PTR [ecx+0x39e5c01b],1
  4374c2:	push   cs
  4374c3:	repnz pop edx
  4374c5:	in     al,dx
  4374c6:	xor    BYTE PTR [edx+0x20aec3a0],ah
  4374cc:	push   esp
  4374cd:	push   ecx
  4374ce:	push   ss
  4374cf:	sbb    al,0x4b
  4374d1:	mov    ebx,0x13da4c45
  4374d6:	jp     0x43749a
  4374d8:	cmp    al,0x59
  4374da:	cmp    ebx,DWORD PTR [esi+0x4b71f112]
  4374e0:	push   esi
  4374e1:	mov    bh,0x99
  4374e3:	in     al,dx
  4374e4:	mov    cl,BYTE PTR [ecx]
  4374e6:	cmp    ebp,DWORD PTR [eax+edx*2+0x320dda39]
  4374ed:	pop    ebx
  4374ee:	adc    ch,BYTE PTR [ecx+edi*8-0x1b]
  4374f2:	mov    eax,DWORD PTR [ebp-0x3c]
  4374f5:	stc    
  4374f6:	xchg   edx,eax
  4374f7:	sub    cl,BYTE PTR [eax+0x3a7f0267]
  4374fd:	les    ebx,FWORD PTR [ecx+0x4f]
  437500:	test   BYTE PTR [ecx],ah
  437502:	xor    al,0xd3
  437504:	add    BYTE PTR [ebx+edx*8],dl
  437507:	jns    0x43756e
  437509:	test   DWORD PTR [edx],eax
  43750b:	loopne 0x437537
  43750d:	pop    ss
  43750e:	pop    eax
  43750f:	dec    ebx
  437510:	nop
  437511:	sub    esi,DWORD PTR [esi-0x2280da63]
  437517:	hlt    
  437518:	push   0xffffffbe
  43751a:	pop    ecx
  43751b:	and    al,0xdc
  43751d:	jbe    0x437501
  43751f:	and    BYTE PTR ss:[ebp-0x7f3acaed],dl
  437526:	into   
  437527:	jge    0x43753a
  437529:	test   BYTE PTR [eax],dh
  43752b:	xor    BYTE PTR [ecx-0x2c],cl
  43752e:	cwde   
  43752f:	jp     0x43750d
  437531:	iret   
  437532:	dec    esp
  437533:	mov    dl,0x19
  437535:	pop    eax
  437536:	(bad)  
  437537:	es inc ebp
  437539:	cwde   
  43753a:	mov    esp,0x235227b6
  43753f:	push   ss
  437540:	int    0xcf
  437542:	cwde   
  437543:	and    ch,BYTE PTR [esi]
  437545:	test   al,0xcc
  437547:	push   ebx
  437548:	inc    ecx
  437549:	fcmovu st,st(2)
  43754b:	and    ch,BYTE PTR [esi]
  43754d:	(bad)  
  43754e:	clc    
  43754f:	mov    edi,0x6713f7e
  437554:	cli    
  437555:	or     al,0xcf
  437557:	sub    eax,0x12bf0448
  43755c:	out    dx,eax
  43755d:	ret    
  43755e:	push   ebx
  43755f:	stc    
  437560:	(bad)  
  437561:	nop
  437562:	mov    ebp,0xc028f769
  437567:	jae    0x43758b
  437569:	mov    ch,0x25
  43756b:	push   es
  43756c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43756d:	popf   
  43756e:	cwde   
  43756f:	std    
  437570:	pop    eax
  437571:	ret    0xf8e9
  437574:	sub    esi,DWORD PTR [ebp-0xe073e7]
  43757a:	daa    
  43757b:	push   ecx
  43757c:	loop   0x4375c7
  43757e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43757f:	retf   0x1624
  437582:	daa    
  437583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437584:	data16 jo 0x4375cc
  437587:	jb     0x4375ce
  437589:	(bad)  
  43758a:	hlt    
  43758b:	xchg   edx,eax
  43758c:	les    edx,FWORD PTR [eax]
  43758e:	ja     0x43752c
  437590:	cs jl  0x437582
  437593:	xor    esi,DWORD PTR [edi]
  437595:	in     al,0xb0
  437597:	xchg   BYTE PTR [esi-0x4a],bl
  43759a:	stos   BYTE PTR es:[edi],al
  43759b:	jae    0x43754e
  43759d:	or     DWORD PTR [edx-0x5a5f03a4],edx
  4375a3:	mov    ds:0xf10a7a13,eax
  4375a8:	or     DWORD PTR [esi+edi*2+0x17],ebp
  4375ac:	nop
  4375ad:	adc    al,al
  4375af:	or     ah,BYTE PTR [edx+ebp*1]
  4375b2:	xchg   esp,eax
  4375b3:	mov    WORD PTR [ecx+ebx*1+0x50335bd1],es
  4375ba:	mov    dh,0x55
  4375bc:	dec    edx
  4375bd:	aas    
  4375be:	mov    eax,0x2cc81054
  4375c3:	push   edx
  4375c4:	ja     0x437634
  4375c6:	adc    dl,al
  4375c8:	push   esi
  4375c9:	sub    bl,BYTE PTR [esi]
  4375cb:	pop    es
  4375cc:	and    eax,0xfaa92e63
  4375d1:	sahf   
  4375d2:	fisub  DWORD PTR [esi-0x43]
  4375d5:	in     al,0xf4
  4375d7:	jnp    0x4375a2
  4375d9:	jg     0x437563
  4375db:	pop    ebp
  4375dc:	inc    eax
  4375dd:	xchg   ebx,eax
  4375de:	jle    0x43763f
  4375e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4375e1:	and    eax,DWORD PTR [edx-0x514aba80]
  4375e7:	call   0xadb6:0xa5574ed9
  4375ee:	pop    ebp
  4375ef:	xchg   ebx,eax
  4375f0:	jl     0x437588
  4375f2:	push   esi
  4375f3:	mov    ch,0x8b
  4375f5:	shr    al,cl
  4375f7:	jle    0x43760c
  4375f9:	jns    0x437632
  4375fb:	cdq    
  4375fc:	(bad)  
  4375fe:	add    DWORD PTR [ecx+0x16],edx
  437601:	jg     0x437600
  437603:	(bad)  
  437604:	stos   DWORD PTR es:[edi],eax
  437605:	mov    al,ds:0xd8ee582b
  43760a:	(bad)  
  43760b:	adc    eax,0xf381b028
  437610:	dec    ebx
  437611:	rol    DWORD PTR [edi-0x69bf99fc],0xe3
  437618:	mov    DWORD PTR cs:[ecx],edi
  43761b:	test   BYTE PTR [ebp+0x2b0c0ba4],dh
  437621:	shl    DWORD PTR [eax+0x15],0x28
  437625:	lods   al,BYTE PTR ds:[esi]
  437626:	push   ds
  437627:	push   esi
  437628:	in     eax,dx
  437629:	dec    ebx
  43762a:	push   cs
  43762b:	push   0x20
  43762d:	push   ss
  43762e:	pushf  
  43762f:	pop    ss
  437630:	jmp    0x2c30f343
  437635:	push   edi
  437636:	sbb    edx,DWORD PTR [edx]
  437638:	aad    0x94
  43763a:	arpl   WORD PTR [ebx-0x8],sp
  43763d:	outs   dx,DWORD PTR ds:[esi]
  43763e:	dec    ecx
  43763f:	shl    BYTE PTR [edx+0x153b79be],0xef
  437646:	push   edx
  437647:	sub    esi,DWORD PTR [ecx+eiz*4+0x7c]
  43764b:	push   ebp
  43764c:	inc    ebp
  43764d:	or     eax,0xf6743c9b
  437652:	and    bh,BYTE PTR [edi]
  437654:	and    eax,0x2c0c1939
  437659:	dec    ebp
  43765a:	stos   BYTE PTR es:[edi],al
  43765b:	sub    BYTE PTR [ebx+0x5c],dl
  43765e:	push   esp
  43765f:	cli    
  437660:	xor    al,0xaf
  437662:	mov    dh,0xd
  437664:	mov    ecx,0x930e3be5
  437669:	in     al,dx
  43766a:	ins    DWORD PTR es:[edi],dx
  43766b:	ffreep st(3)
  43766d:	out    0xb8,al
  43766f:	out    0xd,al
  437671:	add    BYTE PTR [ebx-0x49],al
  437674:	pusha  
  437675:	xchg   ebx,eax
  437676:	dec    ebp
  437677:	rcr    DWORD PTR [ecx-0x1b],cl
  43767a:	repnz push ecx
  43767c:	les    edi,FWORD PTR ds:0xf5217459
  437682:	xor    al,0x7e
  437684:	test   BYTE PTR [esi-0x44],cl
  437687:	sbb    al,0xda
  437689:	pusha  
  43768a:	retf   0x6f7e
  43768d:	xchg   esp,eax
  43768e:	push   ecx
  43768f:	jle    0x437639
  437691:	das    
  437692:	xor    bh,dl
  437694:	mov    edx,0x2a688a30
  437699:	jg     0x4376c0
  43769b:	mov    esi,edi
  43769d:	add    DWORD PTR [edi],0xffffffb3
  4376a0:	imul   edx,DWORD PTR [ebp+eiz*4+0x53],0x16
  4376a5:	xor    DWORD PTR [ebx+0x6e],ebx
  4376a8:	out    0x31,al
  4376aa:	pop    ebx
  4376ab:	fstp   DWORD PTR [ebp+0x4f0cfca3]
  4376b1:	push   ss
  4376b2:	xchg   BYTE PTR [eax+0x3],dl
  4376b5:	inc    di
  4376b7:	daa    
  4376b8:	mov    ebp,DWORD PTR [eax+eiz*8-0x9e266f3]
  4376bf:	shl    BYTE PTR [ebp-0x31],cl
  4376c2:	ret    0xbb62
  4376c5:	dec    ebx
  4376c6:	dec    ebp
  4376c7:	out    0x88,al
  4376c9:	and    al,0x47
  4376cb:	(bad)  
  4376cc:	hlt    
  4376cd:	lods   al,BYTE PTR ds:[esi]
  4376ce:	(bad)  
  4376cf:	sti    
  4376d0:	gs aas 
  4376d2:	jno    0x4376a9
  4376d4:	daa    
  4376d5:	mov    DWORD PTR [edx+0x62b0bc35],ebx
  4376db:	jle    0x437661
  4376dd:	push   es
  4376de:	adc    DWORD PTR [ebx+eiz*2+0x5604769c],0xffffff9e
  4376e6:	outs   dx,BYTE PTR ds:[esi]
  4376e7:	ja     0x43766d
  4376e9:	or     eax,DWORD PTR [ebx-0x67]
  4376ec:	jnp    0x4376e0
  4376ee:	mov    dl,0xec
  4376f0:	dec    edi
  4376f1:	(bad)
  4376f4:	sub    BYTE PTR [ebx+0x731dfb67],dh
  4376fa:	call   0x9dcc6e31
  4376ff:	xchg   esi,eax
  437700:	sub    al,0x53
  437702:	repnz and al,0x77
  437705:	pop    eax
  437706:	icebp  
  437707:	and    DWORD PTR [ecx+0x14],ebp
  43770a:	(bad)  
  43770c:	in     eax,dx
  43770d:	je     0x437778
  43770f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437710:	sub    al,BYTE PTR [esi+esi*1-0x19]
  437714:	sbb    BYTE PTR [eax],bh
  437716:	and    BYTE PTR [edi-0x55e3679c],bh
  43771c:	xor    edi,DWORD PTR [eax+ebp*2-0x7c900993]
  437723:	sbb    BYTE PTR [ebp+0x1b227be3],ch
  437729:	not    DWORD PTR [esi-0x163c7709]
  43772f:	dec    esp
  437730:	out    dx,al
  437731:	iret   
  437732:	xchg   ecx,eax
  437733:	test   al,bh
  437735:	xchg   ecx,eax
  437736:	push   esp
  437737:	sub    BYTE PTR [edi+0x26],cl
  43773a:	fnsave [eax+0x2c]
  43773d:	ds out dx,eax
  43773f:	add    ah,al
  437741:	outs   dx,BYTE PTR ds:[esi]
  437742:	and    ebp,DWORD PTR [ecx+0x24]
  437745:	adc    bl,dh
  437747:	mov    dh,0x33
  437749:	fcom   QWORD PTR [ebp+0x67]
  43774c:	inc    edx
  43774d:	adc    eax,0xc448a5a9
  437752:	pop    esi
  437753:	outs   dx,BYTE PTR ds:[esi]
  437754:	ins    BYTE PTR es:[edi],dx
  437755:	xor    ebx,0x4af6cc57
  43775b:	xlat   BYTE PTR ds:[ebx]
  43775c:	push   ebx
  43775d:	shl    BYTE PTR [edi+0x4bb1ef48],1
  437763:	mov    ebx,ebp
  437765:	mov    edi,0xf1a2d789
  43776a:	add    al,0x92
  43776c:	(bad)  
  43776d:	mov    ah,0x49
  43776f:	mov    eax,DWORD PTR [ebx]
  437771:	fist   WORD PTR [edi+edi*4+0x9]
  437775:	add    BYTE PTR [eax+eax*4],dh
  437778:	mov    ds:0x5746c417,al
  43777d:	loop   0x437781
  43777f:	push   cs
  437780:	dec    edi
  437781:	cdq    
  437782:	mov    gs,WORD PTR [ebp-0xb41e12c]
  437788:	sti    
  437789:	mov    ah,0x7
  43778b:	gs add al,0x76
  43778e:	mov    ds:0xf0b41aa5,al
  437793:	xlat   BYTE PTR ds:[ebx]
  437794:	lahf   
  437795:	mul    DWORD PTR [eax+0x33]
  437798:	or     al,BYTE PTR [eax]
  43779a:	adc    eax,0x28d99655
  43779f:	and    DWORD PTR [edi],edx
  4377a1:	adc    edi,ebp
  4377a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4377a4:	xor    bl,ch
  4377a6:	std    
  4377a7:	mov    ebp,0x2831a5c2
  4377ac:	mov    edi,0x1bc8532f
  4377b1:	pop    ecx
  4377b2:	jo     0x4377f3
  4377b4:	js     0x4377c2
  4377b6:	or     al,BYTE PTR [ecx+edi*4]
  4377b9:	or     ebx,DWORD PTR [esi]
  4377bb:	ficom  WORD PTR [esi]
  4377bd:	aad    0x93
  4377bf:	fld    QWORD PTR [ebp-0x6c]
  4377c2:	inc    ebp
  4377c3:	mov    ds,edi
  4377c5:	xor    ah,BYTE PTR ds:0x64de719b
  4377cb:	test   eax,0x82f2a8a5
  4377d0:	aad    0x3
  4377d2:	sbb    edx,edx
  4377d4:	push   ss
  4377d5:	push   edx
  4377d6:	sub    al,0xbb
  4377d8:	mov    eax,ds:0x421066b
  4377dd:	fcomp  DWORD PTR [esp+eiz*4-0x69]
  4377e1:	sbb    al,0x62
  4377e3:	sub    ebp,DWORD PTR [ecx]
  4377e5:	pop    ebx
  4377e6:	xchg   ebx,eax
  4377e7:	jbe    0x437832
  4377e9:	dec    ebx
  4377ea:	fimul  WORD PTR [ecx+0x6]
  4377ed:	mov    WORD PTR [eax+0x1d46590f],ss
  4377f3:	iret   
  4377f4:	mov    eax,ds:0x9ca1df0e
  4377f9:	push   eax
  4377fa:	push   cs
  4377fb:	cs addr16 dec edi
  4377fe:	lods   al,BYTE PTR ds:[esi]
  4377ff:	pushf  
  437800:	dec    edx
  437801:	mov    ah,ah
  437803:	mov    ?,WORD PTR [esi+0x3ad1184c]
  437809:	outs   dx,DWORD PTR ds:[esi]
  43780a:	mov    al,ds:0x17225347
  43780f:	cli    
  437810:	clc    
  437811:	and    esi,ecx
  437813:	scas   eax,DWORD PTR es:[edi]
  437814:	jge    0x437859
  437816:	imul   ebp,DWORD PTR [ecx+0x2143abbb],0xffffffcd
  43781d:	ret    
  43781e:	das    
  43781f:	xlat   BYTE PTR ds:[ebx]
  437820:	mov    bl,0x5e
  437822:	pop    es
  437823:	hlt    
  437824:	mov    bh,0x5b
  437826:	mov    ecx,0x7308f10e
  43782b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43782c:	push   ds
  43782d:	sub    BYTE PTR [esi+0x28],cl
  437830:	int3   
  437831:	call   0x507a:0xf4423cc9
  437838:	in     eax,dx
  437839:	shl    DWORD PTR ds:0x15f6d3b2,1
  43783f:	mov    ds:0x7f81e2f2,al
  437844:	or     eax,0xcab16204
  437849:	xchg   edi,eax
  43784a:	std    
  43784b:	mov    BYTE PTR gs:[eax+0x79],ah
  43784f:	mov    dl,0x2c
  437851:	cmp    BYTE PTR [ebx],0x4d
  437854:	sub    ebx,DWORD PTR [eax]
  437856:	xchg   ecx,eax
  437857:	stos   BYTE PTR es:[edi],al
  437858:	inc    esi
  437859:	xchg   edi,eax
  43785a:	imul   ebp,DWORD PTR [edx-0x4f2613ad],0x5f
  437861:	stos   BYTE PTR es:[edi],al
  437862:	mov    eax,0x7e7addc0
  437867:	scas   eax,DWORD PTR es:[edi]
  437868:	and    dh,ah
  43786a:	or     cl,BYTE PTR [esi+0x5ab8e4c7]
  437870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437871:	jl     0x437843
  437873:	or     ebp,esp
  437875:	xor    eax,0x4c7d1978
  43787a:	cdq    
  43787b:	lock push esp
  43787d:	jg     0x437898
  43787f:	leave  
  437880:	out    0xe6,al
  437882:	sbb    DWORD PTR [ebx+eiz*1],esi
  437885:	out    dx,al
  437886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437887:	xor    DWORD PTR [ebp-0x7e],ebp
  43788a:	pop    ebx
  43788b:	jge    0x437831
  43788d:	enter  0xcddc,0x2b
  437891:	jg     0x437817
  437893:	das    
  437894:	ja     0x4378fb
  437896:	push   ds
  437897:	ss aaa 
  437899:	cli    
  43789a:	lods   eax,DWORD PTR ds:[esi]
  43789b:	push   ecx
  43789c:	push   edi
  43789d:	push   ds
  43789e:	call   0x5245f72b
  4378a3:	fwait
  4378a4:	mov    WORD PTR [edi],?
  4378a6:	or     ebp,ebp
  4378a8:	add    DWORD PTR [edx],esp
  4378aa:	jle    0x437884
  4378ac:	shl    DWORD PTR [edx],1
  4378ae:	cld    
  4378af:	add    edx,ebx
  4378b1:	icebp  
  4378b2:	ror    BYTE PTR [eax+0x6ecb2ae3],cl
  4378b8:	fadd   DWORD PTR [ebx+eax*1+0x4]
  4378bc:	and    al,0xef
  4378be:	inc    ecx
  4378bf:	sub    al,0x33
  4378c1:	(bad)  
  4378c2:	loop   0x437853
  4378c4:	jge    0x437938
  4378c6:	jno    0x43784d
  4378c8:	mov    eax,ds:0x30c35425
  4378cd:	in     al,dx
  4378ce:	push   cs
  4378cf:	repnz clc 
  4378d1:	mov    bl,0x5b
  4378d3:	ja     0x43786a
  4378d5:	aam    0xf1
  4378d7:	mov    bl,BYTE PTR [ebx]
  4378d9:	fnsave [ecx]
  4378db:	push   esi
  4378dc:	rol    DWORD PTR [esi+0x31],0xbe
  4378e0:	inc    edx
  4378e1:	cmp    BYTE PTR [ebp-0x11ea119f],dh
  4378e7:	dec    eax
  4378e8:	jo     0x4378c9
  4378ea:	mov    esi,0x8dc6b2e0
  4378ef:	sbb    ah,bl
  4378f1:	inc    ebp
  4378f2:	mov    BYTE PTR [esi-0x8],bl
  4378f5:	mov    edi,0x30ccaaec
  4378fa:	(bad)  
  4378fb:	arpl   WORD PTR [edi+0x44],dx
  4378fe:	xor    cl,BYTE PTR [esi-0x71f89428]
  437904:	outs   dx,DWORD PTR ds:[esi]
  437905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437906:	push   eax
  437907:	fiadd  WORD PTR [edi+esi*2]
  43790a:	cmp    BYTE PTR [edx],0xca
  43790d:	dec    ebp
  43790e:	and    bh,BYTE PTR [ecx]
  437910:	jl     0x437953
  437912:	sbb    bh,BYTE PTR [ecx+0x6cd51271]
  437918:	inc    eax
  437919:	pusha  
  43791a:	outs   dx,BYTE PTR ds:[esi]
  43791b:	mov    DWORD PTR [edi+eiz*4],esi
  43791e:	pop    ds
  43791f:	add    DWORD PTR [esi-0x44],eax
  437922:	sbb    eax,DWORD PTR [edx]
  437924:	pop    ebp
  437925:	mov    edi,DWORD PTR [edi]
  437927:	adc    eax,0x2fc48fd8
  43792c:	int3   
  43792d:	test   BYTE PTR [edx+0x225aacaa],bl
  437933:	das    
  437934:	dec    ebx
  437935:	scas   eax,DWORD PTR es:[edi]
  437936:	xor    eax,0xa4f4d1df
  43793b:	sub    ah,BYTE PTR [ecx-0x38]
  43793e:	fld    TBYTE PTR [ecx+0x5316aabb]
  437944:	mov    al,ds:0x21b4d0a2
  437949:	cmc    
  43794a:	inc    edi
  43794b:	icebp  
  43794c:	sbb    ebx,DWORD PTR [edx-0x48]
  43794f:	inc    edx
  437950:	ds mov cl,0xf8
  437953:	xchg   DWORD PTR [ecx],eax
  437955:	push   es
  437956:	pop    eax
  437957:	aad    0x80
  437959:	fsub   DWORD PTR [edi]
  43795b:	push   0xc5c83afb
  437960:	popf   
  437961:	cdq    
  437962:	mov    eax,ds:0x68189c01
  437967:	call   0x23e61648
  43796c:	mov    ebp,0x9e0d4563
  437971:	sbb    DWORD PTR [ecx-0x57a82985],0x22580166
  43797b:	sbb    eax,0x36cdf15e
  437980:	adc    bl,BYTE PTR [edx-0x42f7805b]
  437986:	xchg   ebx,eax
  437987:	std    
  437988:	push   0x639e34a4
  43798d:	cmp    eax,0x220d69bb
  437992:	jno    0x7c5d864c
  437998:	adc    eax,0xdbaca4b3
  43799d:	test   BYTE PTR [eax],0x94
  4379a0:	popa   
  4379a1:	cwde   
  4379a2:	sub    al,bl
  4379a4:	data16 jae 0x437a0e
  4379a7:	mov    esi,0xae0f3170
  4379ac:	repz mov edi,0xeb051760
  4379b2:	and    eax,0x3a8e0c41
  4379b7:	mov    dh,0xcd
  4379b9:	popa   
  4379ba:	sbb    ch,BYTE PTR [edx]
  4379bc:	adc    DWORD PTR [ebp+0x19],ebp
  4379bf:	icebp  
  4379c0:	inc    edi
  4379c1:	fcmovnbe st,st(4)
  4379c3:	not    BYTE PTR [eax+0x1735dd42]
  4379c9:	push   es
  4379ca:	inc    ebx
  4379cb:	(bad)  
  4379cc:	repz add eax,0x564eaae3
  4379d2:	jb     0x437a01
  4379d4:	jle    0x437a3b
  4379d6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4379d8:	loop   0x437a4e
  4379da:	inc    ecx
  4379db:	jne    0x437965
  4379dd:	and    BYTE PTR [ecx+0xe],ch
  4379e0:	fisttp QWORD PTR [edi]
  4379e2:	dec    esi
  4379e3:	data16 fidiv DWORD PTR [eax]
  4379e6:	ins    DWORD PTR es:[edi],dx
  4379e7:	mov    esi,0xe52f57ea
  4379ec:	jne    0x4379b6
  4379ee:	dec    eax
  4379ef:	add    eax,esp
  4379f1:	pushf  
  4379f2:	sahf   
  4379f3:	pushf  
  4379f4:	mov    ebx,0x5e476800
  4379f9:	and    DWORD PTR [ecx-0x16],esp
  4379fc:	adc    eax,0x3b9fd082
  437a01:	push   ebp
  437a02:	push   edx
  437a03:	xchg   DWORD PTR [edx+0x5641101a],ecx
  437a09:	mov    ss,WORD PTR [ecx+0x5c0879a3]
  437a0f:	lods   eax,DWORD PTR ds:[esi]
  437a10:	ficom  WORD PTR [ecx+0x2b8b0339]
  437a16:	jo     0x437a92
  437a18:	jl     0x437a33
  437a1a:	addr16 mov ds:0xa083,al
  437a1e:	adc    bh,BYTE PTR [edi+0x16]
  437a21:	in     al,dx
  437a22:	fldenv [eax+0x544f0fc8]
  437a29:	outs   dx,DWORD PTR ds:[esi]
  437a2a:	inc    ebx
  437a2b:	xchg   esi,eax
  437a2c:	rcr    DWORD PTR [ebx],0x27
  437a2f:	aas    
  437a30:	and    ah,BYTE PTR [ecx+0x70da8e4b]
  437a36:	push   edx
  437a37:	mov    esp,DWORD PTR [ebx+0x11]
  437a3a:	mov    ch,0x9f
  437a3c:	add    cl,cl
  437a3e:	adc    al,0x9f
  437a40:	outs   dx,BYTE PTR ds:[esi]
  437a41:	ret    0xe2cd
  437a44:	dec    edx
  437a45:	popa   
  437a46:	fimul  DWORD PTR ds:0xc8cd11ac
  437a4c:	inc    esi
  437a4d:	push   ecx
  437a4e:	mov    ebp,0xb227168c
  437a53:	aam    0x2f
  437a55:	xchg   edi,eax
  437a56:	sti    
  437a57:	jmp    0xb227:0x785259f3
  437a5e:	int    0x2f
  437a60:	dec    ecx
  437a61:	cmp    edx,esp
  437a63:	cdq    
  437a64:	jmp    0xff86:0x84c3b702
  437a6b:	pusha  
  437a6c:	add    eax,DWORD PTR [ecx]
  437a6e:	(bad)  
  437a70:	push   ds
  437a71:	aad    0xdb
  437a73:	gs je  0x437a87
  437a76:	adc    al,0x9e
  437a78:	fprem1 
  437a7a:	dec    ecx
  437a7b:	dec    ecx
  437a7c:	cs push ss
  437a7e:	retf   0x6d31
  437a81:	mov    al,ds:0x14fb7b31
  437a86:	test   DWORD PTR [esp+edx*1-0x1c91e8a],esi
  437a8d:	pop    ss
  437a8e:	clc    
  437a8f:	lods   eax,DWORD PTR ds:[esi]
  437a90:	mov    ebp,0x29a49805
  437a95:	and    eax,0xd5ce527d
  437a9a:	mov    ebp,0xbc4e7064
  437a9f:	sub    bh,BYTE PTR [edi+0x10]
  437aa2:	fidiv  DWORD PTR [edx+0x700d3792]
  437aa8:	sub    dh,BYTE PTR [edx+esi*4-0x45e190be]
  437aaf:	or     bl,BYTE PTR [edx]
  437ab1:	xchg   ecx,eax
  437ab2:	pop    ebx
  437ab3:	in     eax,dx
  437ab4:	pop    ecx
  437ab5:	jo     0x437a6b
  437ab7:	inc    ebp
  437ab8:	mov    esp,0x68634a55
  437abd:	jp     0x437a54
  437abf:	jp     0x437b11
  437ac1:	cmp    al,0x61
  437ac3:	ficomp DWORD PTR [ebx+0x2b5554a0]
  437ac9:	daa    
  437aca:	imul   esi,DWORD PTR [ebp-0x64],0xf25ce6bc
  437ad1:	(bad)  
  437ad2:	out    dx,al
  437ad3:	mov    ds:0xfdfe4d9d,eax
  437ad8:	test   al,0x1c
  437ada:	shr    ebx,1
  437adc:	jmp    0x3bab:0xf1731888
  437ae3:	xor    esi,edi
  437ae5:	mov    cl,BYTE PTR [edi+0x7]
  437ae8:	leave  
  437ae9:	enter  0xa71c,0xaf
  437aed:	pop    esp
  437aee:	add    esi,DWORD PTR [ebp+0x3349cce7]
  437af4:	sbb    bh,ah
  437af6:	jl     0x437aeb
  437af8:	xchg   esp,eax
  437af9:	(bad)  
  437afa:	aad    0x4b
  437afc:	shr    BYTE PTR [esi+0x187d13b0],cl
  437b02:	inc    esp
  437b03:	outs   dx,BYTE PTR ds:[esi]
  437b04:	adc    ecx,DWORD PTR [ecx]
  437b06:	enter  0xd294,0x4b
  437b0a:	sahf   
  437b0b:	in     al,0x2e
  437b0d:	dec    esi
  437b0e:	ins    DWORD PTR es:[edi],dx
  437b0f:	xchg   DWORD PTR [ebp-0x2217fd04],esi
  437b15:	rcr    dh,0x15
  437b18:	and    ebx,DWORD PTR [eax-0x4cfa1d61]
  437b1e:	xor    ch,BYTE PTR [ebx-0x7255883d]
  437b24:	or     DWORD PTR [ebp+0x26],edx
  437b27:	jle    0x437b20
  437b29:	shr    BYTE PTR [esi+0x1],1
  437b2c:	sti    
  437b2d:	lock adc DWORD PTR [edx],eax
  437b30:	loop   0x437b91
  437b32:	and    DWORD PTR ds:0xdd69af1d,0x212f1646
  437b3c:	cmp    bh,ah
  437b3e:	cmp    eax,0x885a363b
  437b43:	adc    DWORD PTR [ebp+eax*8+0x17],edi
  437b47:	xor    BYTE PTR [edx-0x6],ch
  437b4a:	sar    BYTE PTR [ecx+ebx*1-0x15328513],1
  437b51:	mov    cl,0x1f
  437b53:	dec    esp
  437b54:	addr16 jns 0x437af1
  437b57:	adc    eax,0xcb69a107
  437b5c:	rcl    BYTE PTR [esi],cl
  437b5e:	push   es
  437b5f:	cmp    ecx,DWORD PTR [esi-0x7119cc28]
  437b65:	lds    ebx,FWORD PTR [eax+0x2674629a]
  437b6b:	jmp    0xdf5c:0x9e4587e4
  437b72:	jmp    0x437be5
  437b74:	fnstcw WORD PTR [edx]
  437b76:	jle    0x437b60
  437b78:	push   0xffffffe9
  437b7a:	rep stos BYTE PTR es:[edi],al
  437b7c:	mov    ebx,0x155e92fa
  437b81:	push   esi
  437b82:	mov    ebp,0x6b14825c
  437b87:	inc    edi
  437b88:	mov    ebp,0xacfce8cc
  437b8d:	pop    esi
  437b8e:	xchg   edi,eax
  437b8f:	push   edi
  437b90:	int    0xc2
  437b92:	fwait
  437b93:	add    cl,dl
  437b95:	cs aam 0xa3
  437b98:	lds    ecx,FWORD PTR [edx+0x6b]
  437b9b:	mov    ss,edx
  437b9d:	lock lods eax,DWORD PTR ds:[esi]
  437b9f:	ss iret 
  437ba1:	pop    esp
  437ba2:	jno    0x437be1
  437ba4:	sbb    dh,dl
  437ba6:	push   cs
  437ba7:	jno    0x437c09
  437ba9:	jmp    0x437bfc
  437bab:	push   ss
  437bac:	cdq    
  437bad:	pop    esp
  437bae:	cmp    DWORD PTR [ecx+0x10],edx
  437bb1:	mov    eax,0x9edef118
  437bb6:	jno    0x437b97
  437bb8:	pusha  
  437bb9:	mov    al,0x9a
  437bbb:	or     al,0xe
  437bbd:	cmc    
  437bbe:	stos   BYTE PTR es:[edi],al
  437bbf:	cmp    ah,cl
  437bc1:	xchg   ecx,eax
  437bc2:	or     ebx,edx
  437bc4:	xor    eax,0x41a64d6a
  437bc9:	(bad)  
  437bca:	arpl   WORD PTR ds:0x8db14f8f,di
  437bd0:	ficomp DWORD PTR [ecx+0x59c67d20]
  437bd6:	dec    ebp
  437bd7:	mov    ds:0xad62246f,al
  437bdc:	dec    edi
  437bdd:	int3   
  437bde:	and    eax,0x41b8f280
  437be3:	icebp  
  437be4:	dec    ecx
  437be5:	fwait
  437be6:	xor    DWORD PTR [esi+0x41],edi
  437be9:	or     esp,DWORD PTR [bp+di]
  437bec:	jge    0x437bb2
  437bee:	cmp    cl,BYTE PTR [ebx]
  437bf0:	shl    DWORD PTR [eax+edi*4+0x1c32b2dd],0x96
  437bf8:	idiv   BYTE PTR [ebp+0x5c77c03c]
  437bfe:	xchg   ebx,eax
  437bff:	xchg   BYTE PTR [ecx+0x36],ah
  437c02:	aas    
  437c03:	push   cs
  437c04:	mov    DWORD PTR [ebx+esi*8],ebx
  437c07:	cmp    edx,esp
  437c09:	pop    ebx
  437c0a:	retf   0x3ee5
  437c0d:	xor    eax,0xdbd3a87b
  437c12:	xor    ch,BYTE PTR [ecx]
  437c14:	push   ds
  437c15:	rol    BYTE PTR [edi],0xb2
  437c18:	adc    bh,bh
  437c1a:	repz mov eax,ds:0x90dcc0d
  437c20:	fnsave [ebp+edx*2-0x19]
  437c24:	sbb    esi,DWORD PTR [ebp+0x6af71cbd]
  437c2a:	jmp    0xae12:0x5fc8c789
  437c31:	ss int3 
  437c33:	sbb    al,bl
  437c35:	pop    ebx
  437c36:	aad    0xe
  437c38:	xchg   edx,eax
  437c39:	lea    ecx,[ebp+0x15785a5e]
  437c3f:	xchg   ecx,eax
  437c40:	mov    dl,0x3c
  437c42:	push   ebx
  437c43:	outs   dx,DWORD PTR ds:[esi]
  437c44:	ret    
  437c45:	loope  0x437c3e
  437c47:	jg     0x437c13
  437c49:	sahf   
  437c4a:	add    dh,al
  437c4c:	and    dl,BYTE PTR [edx+0x2b]
  437c4f:	dec    ebp
  437c50:	pop    es
  437c51:	mov    edi,0xdb411b04
  437c56:	fdivr  QWORD PTR [esi+eiz*8-0x3c]
  437c5a:	xor    esi,DWORD PTR [ecx+0x3b]
  437c5d:	and    dh,ah
  437c5f:	in     eax,dx
  437c60:	and    eax,0x9904961d
  437c65:	bound  esi,QWORD PTR [ebp-0x36e9e421]
  437c6b:	and    DWORD PTR [ebx],ebx
  437c6d:	popf   
  437c6e:	pop    ebp
  437c6f:	shl    BYTE PTR [ebx-0x1a],cl
  437c72:	(bad)  
  437c74:	clc    
  437c75:	inc    ebp
  437c76:	sub    bl,BYTE PTR ds:[ebx+0x3f]
  437c7a:	int3   
  437c7b:	mov    ?,WORD PTR [ecx+edx*8]
  437c7e:	rol    DWORD PTR [eax-0x11],cl
  437c81:	ja     0x437c98
  437c83:	inc    ecx
  437c84:	test   DWORD PTR [ebp-0xc51ca33],esi
  437c8a:	add    edi,ebp
  437c8c:	xor    bh,dl
  437c8e:	xchg   edi,eax
  437c8f:	adc    edx,DWORD PTR ds:0x5c238a48
  437c95:	mov    dl,0xc3
  437c97:	and    ebp,DWORD PTR [edi-0x4ca94a8e]
  437c9d:	les    esi,FWORD PTR [esi]
  437c9f:	imul   esi,DWORD PTR [edx-0x6e],0xffffffaa
  437ca3:	dec    esi
  437ca4:	inc    esi
  437ca5:	adc    eax,0xe836938c
  437caa:	or     BYTE PTR [eax+0x14],dh
  437cad:	cmp    ah,bh
  437caf:	mov    esp,0x1f95d3b0
  437cb4:	inc    eax
  437cb5:	lea    edx,[ebp-0x63ce886d]
  437cbb:	(bad)  
  437cbc:	in     al,dx
  437cbd:	cs sub eax,0x9d3650be
  437cc3:	push   edi
  437cc4:	jno    0x437d34
  437cc6:	jl     0x437cf6
  437cc8:	or     ah,BYTE PTR [eax+0x54]
  437ccb:	and    DWORD PTR [ebp+0x1540614],0x9
  437cd2:	add    eax,0xb6534978
  437cd7:	sub    ebp,ebp
  437cd9:	inc    cl
  437cdb:	jge    0x437ca7
  437cdd:	mov    ds:0xb5f69430,al
  437ce2:	adc    ebp,DWORD PTR [ebx]
  437ce4:	lahf   
  437ce5:	in     al,0xe9
  437ce7:	xlat   BYTE PTR ds:[ebx]
  437ce8:	fdivr  QWORD PTR [ebp+0x47]
  437ceb:	cmc    
  437cec:	push   ebp
  437ced:	jmp    0x2325:0xb32b2482
  437cf4:	rol    DWORD PTR ss:[esi-0x7c],cl
  437cf8:	xor    BYTE PTR [edi+0x6a],cl
  437cfb:	mov    bh,0x10
  437cfd:	gs stos BYTE PTR es:[edi],al
  437cff:	push   0xffffff98
  437d01:	(bad)  
  437d03:	cs data16 icebp 
  437d06:	aam    0xed
  437d08:	jno    0x437d50
  437d0a:	push   ss
  437d0b:	lock and dh,dh
  437d0e:	pop    ebx
  437d0f:	sub    esp,ebp
  437d11:	add    BYTE PTR [ebx+ecx*2+0x1116cc60],ah
  437d18:	fisub  WORD PTR [edx+eiz*8-0x37ee410f]
  437d1f:	add    ah,dh
  437d21:	neg    BYTE PTR [ebx+ebp*8+0x30954b1d]
  437d28:	ins    BYTE PTR es:[edi],dx
  437d29:	jno    0x437d35
  437d2b:	dec    ebp
  437d2c:	sbb    esi,DWORD PTR [eax]
  437d2e:	sub    bl,BYTE PTR [ecx]
  437d30:	push   esp
  437d31:	cwde   
  437d32:	add    BYTE PTR [esi+0x2b8073c4],al
  437d38:	xchg   edx,eax
  437d39:	push   ebp
  437d3a:	outs   dx,DWORD PTR ds:[esi]
  437d3b:	into   
  437d3c:	test   edx,edi
  437d3e:	xchg   BYTE PTR [ebp+edx*2+0x6f487720],dh
  437d45:	mov    al,ds:0xdd6fa99c
  437d4a:	je     0x437d77
  437d4c:	adc    dl,BYTE PTR [eax+0x11]
  437d4f:	push   0x9
  437d51:	dec    esp
  437d52:	jne    0x437d30
  437d54:	mov    WORD PTR [ecx-0x698f85fa],?
  437d5a:	pusha  
  437d5b:	fnstenv [ebx+0x3b]
  437d5e:	pushf  
  437d5f:	(bad)  
  437d60:	and    al,0x3e
  437d62:	ror    BYTE PTR [ebx-0x4c],cl
  437d65:	loop   0x437db2
  437d67:	mov    dl,0x89
  437d69:	jecxz  0x437d87
  437d6b:	and    bl,BYTE PTR [edx+eiz*2+0x60]
  437d6f:	(bad)  
  437d70:	inc    eax
  437d71:	mov    ds,WORD PTR [edi]
  437d73:	push   esp
  437d74:	or     al,0xd6
  437d76:	cwde   
  437d77:	hlt    
  437d78:	push   cs
  437d79:	outs   dx,DWORD PTR ds:[esi]
  437d7a:	repz test DWORD PTR [esi+0x5424d521],ebx
  437d81:	in     eax,0x17
  437d83:	dec    ecx
  437d84:	mov    dh,0xba
  437d86:	add    cl,BYTE PTR [ebp+0x4f48a024]
  437d8c:	addr16 jo 0x437d7e
  437d8f:	jmp    0x437dcb
  437d91:	(bad)
  437d94:	cmp    BYTE PTR [ecx+ebp*2+0x49],al
  437d98:	hlt    
  437d99:	jl     0x437d83
  437d9b:	mov    WORD PTR [eax],ds
  437d9d:	cmp    bh,ch
  437d9f:	lds    edi,FWORD PTR es:[ebx+0x7b]
  437da3:	add    bh,BYTE PTR [ecx-0x6eb47435]
  437da9:	(bad)  
  437daa:	and    DWORD PTR [edx-0x12],ebp
  437dad:	ss icebp 
  437daf:	xor    eax,0xc08646aa
  437db4:	sar    BYTE PTR [eax-0x15dd8267],cl
  437dba:	idiv   DWORD PTR [ecx+0x15]
  437dbd:	cli    
  437dbe:	pop    esp
  437dbf:	jb     0x437d73
  437dc1:	xchg   edi,eax
  437dc2:	(bad)  
  437dc3:	popa   
  437dc4:	mov    esp,edi
  437dc6:	sbb    cl,0xce
  437dc9:	js     0x437d85
  437dcb:	inc    edi
  437dcc:	sub    DWORD PTR ds:0xdad999f6,ecx
  437dd2:	mov    ah,0x20
  437dd4:	push   esp
  437dd5:	hlt    
  437dd6:	rcl    BYTE PTR [ebx-0x40],cl
  437dd9:	fadd   DWORD PTR [ecx+0x4f7b08cf]
  437ddf:	arpl   WORD PTR [edi],ax
  437de1:	push   edx
  437de2:	dec    ebx
  437de3:	sbb    BYTE PTR [esi-0x1ac75462],0x8e
  437dea:	out    0x99,al
  437dec:	dec    ebx
  437ded:	mov    dh,bl
  437def:	push   ss
  437df0:	shr    BYTE PTR [esi-0x35ac2c46],1
  437df6:	nop
  437df7:	adc    eax,0xe4457979
  437dfc:	das    
  437dfd:	jl     0x437dde
  437dff:	call   0xb6af:0x13695e4e
  437e06:	stos   DWORD PTR es:[edi],eax
  437e07:	mov    dx,0xa2fc
  437e0b:	pop    ds
  437e0c:	call   0x524c5c7a
  437e11:	in     eax,dx
  437e12:	adc    al,0xf7
  437e14:	shr    DWORD PTR [esi+0x234f4be4],0xe1
  437e1b:	lds    eax,FWORD PTR [ebx+0x1280670c]
  437e21:	loopne 0x437e53
  437e23:	adc    eax,0xa2609e9c
  437e28:	cmp    al,0x50
  437e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437e2b:	fild   QWORD PTR [eax+0x54efc443]
  437e31:	push   ss
  437e32:	std    
  437e33:	jp     0x437e68
  437e35:	adc    eax,ebx
  437e37:	stos   BYTE PTR es:[edi],al
  437e38:	jecxz  0x437e02
  437e3a:	lods   eax,DWORD PTR ds:[esi]
  437e3b:	mov    eax,0xcef2f6b3
  437e40:	aas    
  437e41:	pop    ebx
  437e42:	mov    esp,0xa0eff4bc
  437e47:	lea    ebx,[eax]
  437e49:	jmp    0x437ebe
  437e4b:	mov    BYTE PTR [ebx],dl
  437e4d:	retf   0x5ad8
  437e50:	popf   
  437e51:	(bad)
  437e57:	lods   eax,DWORD PTR ds:[esi]
  437e58:	jmp    0x437e18
  437e5a:	mov    BYTE PTR [eax-0x58d192c9],bl
  437e60:	dec    eax
  437e61:	and    eax,0x30b8c61c
  437e66:	shl    DWORD PTR [edi+ebx*4+0x52c81596],1
  437e6d:	cld    
  437e6e:	mov    DWORD PTR [ebx],ebx
  437e70:	dec    esi
  437e71:	inc    ebx
  437e72:	adc    BYTE PTR cs:[esi+0x70bfe7f8],dh
  437e79:	pushf  
  437e7a:	pop    ecx
  437e7b:	popf   
  437e7c:	out    0xf4,al
  437e7e:	daa    
  437e7f:	fwait
  437e80:	add    DWORD PTR ds:0x4787bac3,edx
  437e86:	push   eax
  437e87:	clc    
  437e88:	arpl   WORD PTR [ecx-0x53],cx
  437e8b:	stc    
  437e8c:	pop    esp
  437e8d:	ret    0xf08
  437e90:	pop    ebp
  437e91:	xchg   esi,eax
  437e92:	scas   eax,DWORD PTR es:[edi]
  437e93:	(bad)  
  437e95:	ja     0x437e30
  437e97:	jp     0x437e6f
  437e99:	std    
  437e9a:	cli    
  437e9b:	addr16 sbb al,0xff
  437e9e:	jge    0x437f06
  437ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437ea1:	xchg   esp,eax
  437ea2:	shl    edx,1
  437ea4:	ins    DWORD PTR es:[edi],dx
  437ea5:	iret   
  437ea6:	daa    
  437ea7:	mov    dh,BYTE PTR [ebx-0x4d]
  437eaa:	add    al,0x41
  437eac:	cmp    ebx,DWORD PTR [edx+0x45]
  437eaf:	jae    0x437e7f
  437eb1:	daa    
  437eb2:	in     al,0x2d
  437eb4:	adc    eax,0x650448e8
  437eb9:	(bad)  
  437eba:	sub    WORD PTR [ebp-0x45],bp
  437ebe:	jae    0x437efd
  437ec0:	(bad)  
  437ec1:	and    edi,DWORD PTR [edx-0x6b]
  437ec4:	xchg   edx,eax
  437ec5:	pop    edx
  437ec6:	inc    ebp
  437ec7:	adc    BYTE PTR [esi+0x2a],0xab
  437ecb:	ror    BYTE PTR es:[edi],0x52
  437ecf:	lds    ebp,FWORD PTR [esi]
  437ed1:	add    eax,esp
  437ed3:	push   es
  437ed4:	jmp    0xe719:0x8934b411
  437edb:	lds    edi,FWORD PTR [edi+0x39]
  437ede:	push   0xfffffff1
  437ee0:	mov    ebx,0x5fc6f0d1
  437ee5:	mov    dl,0xde
  437ee7:	out    dx,al
  437ee8:	(bad)  
  437ee9:	sahf   
  437eea:	mov    ds:0x244a4eff,eax
  437eef:	jecxz  0x437f52
  437ef1:	fld    TBYTE PTR [eax-0x46]
  437ef4:	outs   dx,DWORD PTR ds:[esi]
  437ef5:	popf   
  437ef6:	lock mov ch,0x7a
  437ef9:	(bad)  
  437efa:	(bad)  
  437efb:	mov    eax,0x1b66fde0
  437f00:	test   DWORD PTR [edi+0xa],0x840ff871
  437f07:	jb     0x437e9c
  437f09:	or     al,BYTE PTR [edx]
  437f0b:	lods   al,BYTE PTR ds:[esi]
  437f0c:	mov    eax,ds:0x6b1149f8
  437f11:	adc    bh,BYTE PTR [edi+0x7892944b]
  437f17:	daa    
  437f18:	in     eax,dx
  437f19:	pop    ebx
  437f1a:	out    dx,al
  437f1b:	sti    
  437f1c:	loop   0x437f7e
  437f1e:	add    eax,0x30f5383b
  437f23:	or     ecx,edi
  437f25:	mov    ds:0xc99e588e,eax
  437f2a:	or     al,0xf4
  437f2c:	jo     0x437f07
  437f2e:	mov    dl,0xc0
  437f30:	inc    ecx
  437f31:	call   0xc8d8:0xd0fb0491
  437f38:	scas   eax,DWORD PTR es:[edi]
  437f39:	in     al,dx
  437f3a:	xchg   ebp,eax
  437f3b:	mov    dl,0xd6
  437f3d:	mov    esi,0x2b1b08d
  437f42:	cs jne 0x437f40
  437f45:	fsub   DWORD PTR [esi]
  437f47:	(bad)  [edi+ebx*8-0x16]
  437f4b:	xchg   edi,eax
  437f4c:	adc    ecx,eax
  437f4e:	fs in  al,dx
  437f50:	mov    cs,WORD PTR [esi+0x494a6fa3]
  437f56:	repnz xchg ebx,eax
  437f58:	pushf  
  437f59:	cmp    eax,DWORD PTR [ebp-0x1a447385]
  437f5f:	retf   0x2648
  437f62:	push   0x5af44b61
  437f67:	adc    eax,DWORD PTR [edx]
  437f69:	or     ah,BYTE PTR [ecx]
  437f6b:	jle    0x437fea
  437f6d:	(bad)  
  437f6e:	(bad)  
  437f70:	ja     0x437f97
  437f72:	clc    
  437f73:	fcmovnbe st,st(4)
  437f75:	sbb    dh,BYTE PTR [eax+ebx*2]
  437f78:	or     dh,bl
  437f7a:	jne    0x437ff8
  437f7c:	bndldx (bad),[edi]
  437f7f:	pushf  
  437f80:	les    eax,FWORD PTR [ebp-0x68]
  437f83:	adc    edx,eax
  437f85:	sub    esi,DWORD PTR [edi-0x7e9a999e]
  437f8b:	mov    edx,0x346da641
  437f90:	jne    0x437f8a
  437f92:	mov    esp,0x75d767cd
  437f97:	(bad)  
  437f98:	out    dx,eax
  437f99:	es cmp eax,0x1280671d
  437f9f:	sbb    esp,esp
  437fa1:	xchg   esp,eax
  437fa2:	test   al,0xe
  437fa4:	sub    al,0xaf
  437fa6:	or     eax,esi
  437fa8:	shl    ebx,1
  437faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437fab:	pop    esi
  437fac:	mov    DWORD PTR [edx-0x1ba3c25a],0x49c3aa7b
  437fb6:	or     al,0xae
  437fb8:	xchg   ebp,eax
  437fb9:	mov    esi,0xa0665320
  437fbe:	xlat   BYTE PTR ds:[ebx]
  437fbf:	xor    BYTE PTR [edx],dh
  437fc1:	pop    edx
  437fc2:	inc    edi
  437fc3:	(bad)  
  437fc5:	adc    esi,esi
  437fc7:	data16 mov bh,0x9
  437fca:	popf   
  437fcb:	mov    esp,0x16f1f73a
  437fd0:	std    
  437fd1:	ja     0x437fb6
  437fd3:	sbb    al,0x6b
  437fd5:	add    ebp,0x40b86372
  437fdb:	(bad)  
  437fdc:	fsubr  QWORD PTR [ecx]
  437fde:	scas   al,BYTE PTR es:[edi]
  437fdf:	xchg   ebp,eax
  437fe0:	popf   
  437fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437fe2:	(bad)  
  437fe4:	mov    BYTE PTR [eax-0x4e],0x57
  437fe8:	pop    ebp
  437fe9:	sub    BYTE PTR [ebx+0x74],bh
  437fec:	call   0x3231:0x88b01eb9
  437ff3:	mov    ds:0x9110329c,al
  437ff8:	cs dec esi
  437ffa:	dec    ebx
  437ffb:	popa   
  437ffc:	scas   eax,DWORD PTR es:[edi]
  437ffd:	pop    es
  437ffe:	dec    ebp
  437fff:	cli    
  438000:	pop    esp
  438001:	lahf   
  438002:	dec    ecx
  438003:	xchg   edx,eax
  438004:	mov    ch,0x5e
  438006:	out    0x3d,eax
  438008:	retf   
  438009:	jns    0x437fb7
  43800b:	out    dx,eax
  43800c:	adc    eax,0xb70fe13b
  438011:	xor    al,0xd2
  438013:	inc    ecx
  438014:	out    0x5b,al
  438016:	pop    edx
  438017:	mov    eax,ds:0x879de59c
  43801c:	jecxz  0x43805f
  43801e:	or     al,0x78
  438020:	or     al,0xf0
  438022:	sbb    eax,0x9d9fc897
  438027:	mov    BYTE PTR [edi],bl
  438029:	xchg   ebp,eax
  43802a:	fprem1 
  43802c:	sub    eax,0x44fbb047
  438031:	sbb    eax,DWORD PTR [ebx-0x4a997131]
  438037:	xchg   ecx,eax
  438038:	retf   
  438039:	pop    esp
  43803a:	xor    al,0x92
  43803c:	sub    ecx,edx
  43803e:	into   
  43803f:	test   BYTE PTR [ecx+ecx*8-0x6e],al
  438043:	sub    al,0x30
  438045:	out    dx,eax
  438046:	out    0x38,al
  438048:	sbb    bh,0xc5
  43804b:	mov    al,BYTE PTR [ebp-0x5a057ac5]
  438051:	mov    eax,ds:0x39bae17e
  438056:	push   ecx
  438057:	jle    0x438000
  438059:	in     eax,dx
  43805a:	mov    esp,0xb2eb3de6
  43805f:	test   DWORD PTR [ebp-0x4c],esp
  438062:	cmp    BYTE PTR [ecx],ah
  438064:	sbb    BYTE PTR [ebx-0x40],bl
  438067:	push   eax
  438068:	pop    esp
  438069:	mov    edi,0x38235a0b
  43806e:	into   
  43806f:	les    edi,FWORD PTR [esi+eiz*2]
  438072:	push   edx
  438073:	push   edx
  438074:	cmp    DWORD PTR [eax+edx*4-0x47],ebx
  438078:	ins    BYTE PTR es:[edi],dx
  438079:	enter  0x576d,0xc4
  43807d:	rcl    DWORD PTR [ebx+0x44e203ce],0xe0
  438084:	cs int3 
  438086:	adc    eax,0xe143ce79
  43808b:	mov    ah,0x1b
  43808d:	xchg   edi,eax
  43808e:	loope  0x4380d3
  438090:	scas   al,BYTE PTR es:[edi]
  438091:	dec    edi
  438092:	imul   ebx,DWORD PTR [eax],0x474ce3a0
  438098:	adc    eax,0xed49099
  43809d:	push   ds
  43809e:	push   cs
  43809f:	ins    DWORD PTR es:[edi],dx
  4380a0:	icebp  
  4380a1:	fild   QWORD PTR [ecx]
  4380a3:	or     al,0xd8
  4380a5:	pusha  
  4380a6:	mov    ecx,0x8e18e267
  4380ab:	into   
  4380ac:	cmp    eax,0xff76a7ef
  4380b1:	cs cmc 
  4380b3:	jge    0x43803e
  4380b5:	push   ebx
  4380b6:	adc    eax,0x40cb522a
  4380bb:	and    al,0x1e
  4380bd:	shr    BYTE PTR [ebp+0x72],1
  4380c0:	xchg   ebx,eax
  4380c1:	lahf   
  4380c2:	push   ss
  4380c3:	lea    eax,[eax-0x71]
  4380c6:	jnp    0x438097
  4380c8:	fs int 0x75
  4380cb:	jmp    ebx
  4380cd:	or     eax,0x65
  4380d0:	dec    edx
  4380d1:	stos   BYTE PTR es:[edi],al
  4380d2:	jne    0x43808e
  4380d4:	ret    0xaf7d
  4380d7:	pusha  
  4380d8:	addr16 enter 0x918d,0x6c
  4380dd:	mov    ebp,0x7e9ef68
  4380e2:	cmp    BYTE PTR [esp+esi*8-0x383c5d40],dl
  4380e9:	push   ebx
  4380ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4380eb:	in     eax,0xb8
  4380ed:	retf   
  4380ee:	push   eax
  4380ef:	aad    0x38
  4380f1:	jmp    0xaf9719aa
  4380f6:	aas    
  4380f7:	mov    ds:0x4b29d1b6,al
  4380fc:	jmp    0x4380d7
  4380fe:	loope  0x4380e7
  438100:	mov    bl,0xca
  438102:	mov    ds:0xaca656ab,eax
  438107:	mov    esp,0x9b9b0718
  43810c:	cmp    ecx,esi
  43810e:	sub    al,0x94
  438110:	popa   
  438111:	into   
  438112:	jp     0x43816c
  438114:	arpl   WORD PTR [edi],bp
  438116:	jge    0x438161
  438118:	arpl   WORD PTR ds:0xbcd2a624,di
  43811e:	lahf   
  43811f:	sti    
  438120:	leave  
  438121:	xchg   DWORD PTR [eax+0xf],eax
  438124:	stc    
  438125:	adc    dl,BYTE PTR [ebx+esi*8+0x36bd0403]
  43812c:	mov    BYTE PTR ds:0xaefe2699,bh
  438132:	and    DWORD PTR [ebx-0x70],0xffffffdc
  438136:	mov    BYTE PTR [ebx],cl
  438138:	sar    BYTE PTR [edi-0x47ab768e],cl
  43813e:	(bad)  
  43813f:	scas   eax,DWORD PTR es:[edi]
  438140:	mov    dh,0x2f
  438142:	and    DWORD PTR [esi+0x189dc1d1],esp
  438148:	sbb    BYTE PTR [eax],bl
  43814a:	out    0xcc,al
  43814c:	ins    DWORD PTR es:[edi],dx
  43814d:	or     esi,0xeb2ca3f3
  438153:	lock xchg esi,eax
  438155:	out    0x70,al
  438157:	mov    DWORD PTR [edx-0x6c],0x19500b9b
  43815e:	xor    edi,ebx
  438160:	jb     0x4380e6
  438162:	jnp    0x4381c8
  438164:	mov    dl,BYTE PTR ds:0x98587508
  43816a:	dec    edi
  43816b:	mov    al,ds:0x3e9addb0
  438170:	pop    esp
  438171:	mov    WORD PTR [edx-0x5a42b9c4],es
  438177:	out    dx,eax
  438178:	enter  0xb3,0x19
  43817c:	nop
  43817d:	pop    ss
  43817e:	push   esi
  43817f:	push   0x3e340006
  438184:	xor    BYTE PTR [ebx+ecx*8],0x42
  438188:	push   ebp
  438189:	sub    BYTE PTR [edi+0x4a182c6],al
  43818f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438190:	add    al,0xc2
  438192:	fistp  WORD PTR [edx]
  438194:	lods   al,BYTE PTR ds:[si]
  438196:	or     ebx,eax
  438198:	pop    ds
  438199:	dec    ebp
  43819a:	in     eax,0x88
  43819c:	sub    al,0x4b
  43819e:	and    DWORD PTR [edx+0x54],ebx
  4381a1:	push   edx
  4381a2:	inc    ebp
  4381a3:	outs   dx,DWORD PTR ds:[esi]
  4381a4:	enter  0x913b,0xfd
  4381a8:	or     al,0xa3
  4381aa:	inc    esi
  4381ab:	fdivr  st(7),st
  4381ad:	je     0x43816c
  4381af:	lock fs jae 0x438154
  4381b3:	inc    edx
  4381b4:	dec    edx
  4381b5:	lods   eax,DWORD PTR ds:[esi]
  4381b6:	(bad)  
  4381b7:	std    
  4381b8:	push   0x7f766523
  4381bd:	pop    esp
  4381be:	jp     0x4381ad
  4381c0:	jecxz  0x4381f5
  4381c2:	add    al,0xbc
  4381c4:	pop    eax
  4381c5:	cmc    
  4381c6:	sti    
  4381c7:	adc    DWORD PTR [esi+0x18],0x4d
  4381cb:	es mov ah,0x9b
  4381ce:	mov    edi,0x80792b7f
  4381d3:	jo     0x43824e
  4381d5:	push   0xffffffb0
  4381d7:	jmp    0x1d03:0x6a2fa165
  4381de:	jmp    0x438170
  4381e0:	sub    ebx,esi
  4381e2:	call   0x9b9c:0xa11b9b85
  4381e9:	adc    ebx,ecx
  4381eb:	hlt    
  4381ec:	outs   dx,DWORD PTR ds:[esi]
  4381ed:	jle    0x4381b9
  4381ef:	lea    esi,[esi-0x1c]
  4381f2:	cmp    al,0x27
  4381f4:	js     0x4381b6
  4381f6:	ins    DWORD PTR es:[edi],dx
  4381f7:	adc    ecx,edx
  4381f9:	pop    ds
  4381fa:	(bad)  
  4381fb:	(bad)  
  4381fc:	cmc    
  4381fd:	sub    BYTE PTR [eax+0x51],ah
  438200:	out    0x29,eax
  438202:	shr    DWORD PTR [edx-0x49883c7],0x85
  438209:	dec    eax
  43820a:	call   0x56bfc224
  43820f:	xor    eax,0x89a6431c
  438214:	gs mov ebp,0x6b0ae5bb
  43821a:	test   al,0x12
  43821c:	in     eax,0x22
  43821e:	das    
  43821f:	mov    DWORD PTR [edi],edi
  438221:	test   al,0x5a
  438223:	pop    ss
  438224:	mov    ebx,0x64642528
  438229:	push   es
  43822a:	or     esp,DWORD PTR [ecx]
  43822c:	fstp   DWORD PTR [ecx+0x55]
  43822f:	lock loope 0x4381c1
  438232:	popf   
  438233:	cmp    DWORD PTR [ecx],esp
  438235:	jns    0x438280
  438237:	mov    dl,0x2e
  438239:	inc    bh
  43823b:	jg     0x438222
  43823d:	sbb    BYTE PTR [ebx-0x4e4c91e6],al
  438243:	adc    ecx,DWORD PTR [ebp+edi*2+0x58]
  438247:	call   0xd5c61a96
  43824c:	xchg   ebx,eax
  43824d:	sub    DWORD PTR [ebx-0x14],eax
  438250:	cwde   
  438251:	cdq    
  438252:	adc    bh,ch
  438254:	int    0x4d
  438256:	bound  eax,QWORD PTR [edx-0x6a]
  438259:	pop    ebp
  43825a:	add    dh,BYTE PTR [eax+0x6eacae4a]
  438260:	xchg   DWORD PTR [ebp-0x139aa28b],esp
  438266:	lea    ebx,[edx-0x27019e9c]
  43826c:	or     al,0xfc
  43826f:	jmp    0xe67b475b
  438274:	xchg   DWORD PTR [edx],edi
  438276:	xlat   BYTE PTR ds:[ebx]
  438277:	ds jge 0x438289
  43827a:	adc    eax,ecx
  43827c:	loop   0x43828c
  43827e:	xor    esp,DWORD PTR [ebp+esi*4-0x7eecf4d2]
  438285:	retf   
  438286:	jge    0x43825e
  438288:	or     al,0x73
  43828a:	pop    eax
  43828b:	fnclex 
  43828d:	pop    esi
  43828e:	push   edx
  43828f:	xchg   ebx,eax
  438290:	mov    ah,0xae
  438292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438293:	retf   0xe2d7
  438296:	mov    esi,0x38112b2
  43829b:	scas   al,BYTE PTR es:[edi]
  43829c:	jle    0x43831c
  43829e:	xor    ebp,DWORD PTR [ebx-0x2b29be92]
  4382a4:	jnp    0x4382c6
  4382a6:	(bad)  
  4382a7:	sahf   
  4382a8:	add    BYTE PTR [ecx],dl
  4382aa:	pop    esp
  4382ab:	fs mov eax,0xb6c400a1
  4382b1:	push   0xe2d8ec15
  4382b6:	scas   al,BYTE PTR es:[edi]
  4382b7:	mov    edi,0xdb4f15fc
  4382bc:	cmp    eax,DWORD PTR [eax]
  4382be:	loop   0x438309
  4382c0:	inc    DWORD PTR [edx+edi*1-0x5453f2bd]
  4382c7:	int    0x7
  4382c9:	push   esi
  4382ca:	and    ecx,DWORD PTR [edx]
  4382cc:	push   eax
  4382cd:	test   eax,0xd564a793
  4382d2:	aad    0x4e
  4382d4:	stos   DWORD PTR es:[edi],eax
  4382d5:	jb     0x43832b
  4382d7:	frstor [ebx-0x5a6f02e6]
  4382dd:	pop    edx
  4382de:	pop    edi
  4382df:	lock add BYTE PTR [edi-0x7a885e97],bh
  4382e6:	je     0x43830d
  4382e8:	cmp    DWORD PTR ds:0x1fc3456e,ebp
  4382ee:	outs   dx,BYTE PTR ds:[esi]
  4382ef:	dec    edi
  4382f0:	aas    
  4382f1:	and    BYTE PTR [esi-0x2bfe47c],bh
  4382f7:	les    edx,FWORD PTR [edi+eax*2+0x3e]
  4382fb:	aam    0x24
  4382fd:	jbe    0x438362
  4382ff:	jne    0x4382ca
  438301:	pop    ds
  438302:	stos   BYTE PTR es:[edi],al
  438303:	push   ebx
  438304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438305:	pavgb  mm7,QWORD PTR [ebx]
  438308:	jge    0x43828a
  43830a:	nop
  43830b:	jb     0x4382d5
  43830d:	adc    al,0xa8
  43830f:	pop    edx
  438310:	(bad)  
  438311:	or     al,0xa9
  438313:	mov    ds,WORD PTR [esi]
  438315:	inc    ebp
  438316:	mov    al,ds:0x974c4190
  43831b:	sbb    al,0x82
  43831d:	ins    DWORD PTR es:[edi],dx
  43831e:	std    
  43831f:	or     BYTE PTR [eax+0x3be80fee],ah
  438325:	mov    al,0x3f
  438327:	jae    0x438385
  438329:	es dec edi
  43832b:	xlat   BYTE PTR ds:[ebx]
  43832c:	mov    ebp,0xd999b491
  438331:	push   ecx
  438332:	(bad)  
  438333:	sub    edx,DWORD PTR [esi+0x41]
  438336:	push   0x614b3d5f
  43833b:	ror    DWORD PTR [esi-0x5b],cl
  43833e:	fild   DWORD PTR [ebp+0x4a]
  438341:	int    0x33
  438343:	iret   
  438344:	push   edi
  438345:	adc    ah,dh
  438347:	pop    esp
  438348:	cmp    ecx,ebp
  43834a:	imul   edi,DWORD PTR [eax],0x4ec74e2a
  438350:	jle    0x4382fd
  438352:	pop    esp
  438353:	ins    BYTE PTR es:[edi],dx
  438354:	sbb    al,0xa7
  438356:	or     BYTE PTR [eax-0x2b],dl
  438359:	cmp    esi,DWORD PTR [esi+0x15]
  43835c:	call   0xf995:0xfc08ff0b
  438363:	loopne 0x438354
  438365:	sahf   
  438366:	lods   al,BYTE PTR ds:[esi]
  438367:	push   ss
  438368:	add    ebp,DWORD PTR [eax+0x57]
  43836b:	clc    
  43836c:	arpl   WORD PTR [edx],bp
  43836e:	or     eax,0xc0b9d684
  438373:	rcl    BYTE PTR [edx+0x57],1
  438376:	out    0xcf,al
  438378:	push   eax
  438379:	add    bh,BYTE PTR [ebp-0xc64572d]
  43837f:	xor    eax,0x9d6afe04
  438384:	mov    ebx,0x942c7b30
  438389:	mov    WORD PTR [edx],gs
  43838b:	paddw  mm4,QWORD PTR [edx+0x2a]
  43838f:	sbb    ebp,DWORD PTR [edx]
  438391:	icebp  
  438392:	test   eax,0xa2126367
  438397:	push   0x94079f0b
  43839c:	aam    0x8c
  43839e:	(bad)  
  43839f:	stc    
  4383a0:	dec    esi
  4383a1:	xchg   ebx,eax
  4383a2:	dec    edx
  4383a3:	and    al,0x58
  4383a5:	sbb    bh,BYTE PTR [edx+0xd4f64bd]
  4383ab:	mov    BYTE PTR [edx],bl
  4383ad:	mov    al,ds:0xf672fd5d
  4383b2:	jmp    0x44be:0xc99bfb6
  4383b9:	leave  
  4383ba:	test   eax,0x592e72f
  4383bf:	inc    ecx
  4383c0:	arpl   ax,bp
  4383c2:	push   ss
  4383c3:	inc    edi
  4383c4:	sub    eax,edi
  4383c6:	push   edi
  4383c7:	inc    esp
  4383c8:	popa   
  4383c9:	ret    0x36cc
  4383cc:	mov    bh,BYTE PTR [ecx-0x678187eb]
  4383d2:	push   edx
  4383d3:	cmc    
  4383d4:	call   0x3338:0x19931d6a
  4383db:	(bad)  
  4383dc:	jle    0x4383af
  4383de:	inc    edx
  4383df:	cmp    eax,0x310d68bc
  4383e4:	out    dx,al
  4383e5:	or     al,0xa7
  4383e7:	mov    ebp,edi
  4383e9:	xchg   esp,eax
  4383ea:	rcr    DWORD PTR ds:0xd4348854,cl
  4383f0:	mov    eax,ds:0xa364cc0
  4383f5:	mov    dh,0xe5
  4383f7:	inc    di
  4383f9:	mov    dh,0x77
  4383fb:	adc    bh,bl
  4383fd:	xchg   edi,eax
  4383fe:	out    0x4e,al
  438400:	add    eax,0xb0fafb79
  438405:	inc    edx
  438406:	xchg   esp,eax
  438407:	pop    ebx
  438408:	daa    
  438409:	xchg   edi,eax
  43840a:	ja     0x43843d
  43840c:	push   es
  43840d:	cmp    al,0xa
  43840f:	in     al,dx
  438410:	xor    DWORD PTR [edx+0x4190cfde],ebp
  438416:	test   DWORD PTR [esi],0xfdf4b04
  43841c:	jno    0x438470
  43841e:	jge    0x43842c
  438420:	dec    esp
  438421:	sbb    esp,DWORD PTR [ebp-0x40]
  438424:	fwait
  438425:	sub    ebp,DWORD PTR [esi+0x2a]
  438428:	add    DWORD PTR [eax-0x1fa2b084],eax
  43842e:	pop    ss
  43842f:	inc    ecx
  438430:	jb     0x438486
  438432:	mov    esp,0x281db858
  438437:	mov    dl,0x5b
  438439:	ret    
  43843a:	popf   
  43843b:	jae    0x438458
  43843d:	repz cmp al,0x5d
  438440:	xchg   esi,ecx
  438442:	mov    edx,0x9a8d624
  438447:	dec    edx
  438448:	loop   0x4384c3
  43844a:	xchg   ebp,eax
  43844b:	sbb    al,0x4a
  43844d:	adc    eax,0xfe6bf700
  438452:	mov    bl,0x44
  438454:	out    0x42,al
  438456:	or     BYTE PTR [esi],al
  438458:	inc    ebp
  438459:	inc    eax
  43845a:	mov    dh,0xcf
  43845c:	je     0x4384d4
  43845e:	mov    ebp,0x5888a14f
  438463:	adc    bl,BYTE PTR [esi+0x53]
  438466:	aam    0x9c
  438468:	inc    ebp
  438469:	jns    0x4384c0
  43846b:	push   edi
  43846c:	jle    0x43847c
  43846e:	and    edx,ebx
  438470:	pop    ebp
  438471:	push   0x63ad7479
  438476:	jecxz  0x438474
  438478:	mov    ss,esp
  43847a:	dec    eax
  43847b:	loop   0x438400
  43847d:	mov    eax,0xcdcae927
  438482:	pop    ecx
  438483:	lea    ebp,[ebx-0x19]
  438486:	out    dx,al
  438487:	cli    
  438488:	lock sar edx,1
  43848b:	in     eax,dx
  43848c:	or     DWORD PTR ds:0x36526d9,esi
  438492:	jge    0x4384d7
  438494:	add    al,0x0
  438496:	mov    edx,ebp
  438498:	imul   ecx,DWORD PTR [ebp-0x6e871ef0],0xffffffd2
  43849f:	(bad)  
  4384a0:	scas   eax,DWORD PTR es:[edi]
  4384a1:	push   ebp
  4384a2:	mov    eax,0xaeb765b7
  4384a7:	sbb    eax,0x7e9b0a65
  4384ac:	pop    es
  4384ad:	xchg   ebp,eax
  4384ae:	xor    dh,BYTE PTR [eax-0x34341bf4]
  4384b4:	iret   
  4384b5:	fs sub al,0x14
  4384b8:	iret   
  4384b9:	push   0x6e
  4384bb:	test   BYTE PTR [edx+0x6e],cl
  4384be:	mov    fs,eax
  4384c0:	jecxz  0x4384f6
  4384c2:	enter  0xa8f3,0x71
  4384c6:	loop   0x438497
  4384c8:	mov    ah,0x49
  4384ca:	pop    edx
  4384cb:	nop
  4384cc:	sub    al,0xe6
  4384ce:	push   edi
  4384cf:	cmp    ebp,DWORD PTR [ebx+0x0]
  4384d2:	and    eax,0xf32fc69b
  4384d7:	dec    ecx
  4384d8:	mov    edi,0x7872503e
  4384dd:	aas    
  4384de:	inc    ecx
  4384df:	dec    edi
  4384e0:	mov    ah,0x28
  4384e2:	sbb    al,0x8d
  4384e4:	sbb    BYTE PTR [esi+0x62],bl
  4384e7:	repnz and BYTE PTR [eax-0x6f53db0d],0xd4
  4384ef:	sbb    BYTE PTR [esi+0x58],0x73
  4384f3:	cmp    ah,al
  4384f5:	sbb    al,0xbe
  4384f7:	lea    edx,[ebp-0x6b]
  4384fa:	push   esp
  4384fb:	outs   dx,BYTE PTR ds:[esi]
  4384fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4384fd:	jae    0x4384e3
  4384ff:	jno    0x43852f
  438501:	pushw  cs
  438503:	mov    al,0x94
  438505:	dec    eax
  438506:	mov    eax,ds:0x47fef08
  43850b:	push   edx
  43850c:	push   ebx
  43850d:	imul   esi,DWORD PTR [esp+edx*1+0x12],0x5f9f27f6
  438515:	(bad)  
  438516:	(bad)  [ecx+0x6665452]
  43851c:	jmp    0x3b3cd28c
  438521:	or     ecx,DWORD PTR [ebp+0x38a0bc52]
  438527:	push   esp
  438528:	in     al,dx
  438529:	int3   
  43852a:	mov    BYTE PTR [edx+ebp*2],dh
  43852d:	mov    al,cl
  43852f:	push   ebx
  438530:	mov    dh,0xf4
  438532:	aas    
  438533:	bound  edi,QWORD PTR [ebx-0x71]
  438536:	sbb    eax,0x5243a7cd
  43853b:	pop    edi
  43853c:	push   ebp
  43853d:	push   ss
  43853e:	out    dx,eax
  43853f:	inc    ecx
  438540:	retf   0x69c8
  438543:	jmp    0xf00ee87a
  438548:	sbb    BYTE PTR [edi+0x889fe88],ah
  43854e:	in     al,0x8
  438550:	pop    edi
  438551:	pop    es
  438552:	or     edx,esp
  438554:	xor    ch,BYTE PTR [edx-0x63]
  438557:	fbld   TBYTE PTR fs:[edx]
  43855a:	out    0x1f,eax
  43855c:	push   eax
  43855d:	popf   
  43855e:	mov    ch,0x9
  438560:	and    eax,0x8617f8bc
  438565:	(bad)  
  438566:	cdq    
  438567:	xor    esi,DWORD PTR [ebx+eiz*1]
  43856a:	mov    ch,0x54
  43856c:	ds fstp st(2)
  43856f:	je     0x438536
  438571:	jl     0x4385cc
  438573:	inc    edx
  438574:	in     eax,dx
  438575:	fsubr  DWORD PTR [esi+eax*2-0x7188fcc5]
  43857c:	aam    0x55
  43857e:	xchg   esi,eax
  43857f:	push   edi
  438580:	mov    eax,?
  438582:	or     esi,edx
  438584:	mov    edi,0x55ccc1ca
  438589:	mov    ah,0xe6
  43858b:	mov    ebp,0x439cabc3
  438590:	gs mov al,0xf2
  438593:	sub    ah,bl
  438595:	aaa    
  438596:	mov    ebx,0xeedb20f3
  43859b:	ins    DWORD PTR es:[edi],dx
  43859c:	loope  0x4385b4
  43859e:	xchg   edi,eax
  43859f:	cmp    DWORD PTR [ebp-0x56],eax
  4385a2:	jmp    0x438553
  4385a4:	mov    dl,0x63
  4385a6:	idiv   cl
  4385a8:	imul   edx,DWORD PTR ds:0x2522f9ad,0x29
  4385af:	sbb    DWORD PTR [edi-0x24fbd23f],esp
  4385b5:	mov    edx,0xd0eac596
  4385ba:	lea    esp,[edx+0x52]
  4385bd:	add    al,0xf3
  4385bf:	fs scas eax,DWORD PTR es:[edi]
  4385c1:	push   0xffffffa6
  4385c3:	nop
  4385c4:	fisttp QWORD PTR [edi-0x509d5bfe]
  4385ca:	data16 fwait
  4385cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4385cd:	pop    esp
  4385ce:	js     0x4385c3
  4385d0:	call   0x65a1:0x302cc61
  4385d7:	xlat   BYTE PTR ds:[ebx]
  4385d8:	es mov edi,0xb35107fc
  4385de:	retf   0x54c9
  4385e1:	icebp  
  4385e2:	(bad)  
  4385e3:	leave  
  4385e4:	and    ecx,esp
  4385e6:	js     0x4385c2
  4385e8:	adc    al,0x53
  4385ea:	pushf  
  4385eb:	outs   dx,BYTE PTR ds:[esi]
  4385ec:	cmp    esi,DWORD PTR [ebx+0x4dbfec78]
  4385f2:	dec    edi
  4385f3:	adc    eax,0xaf06b6fb
  4385f8:	sub    BYTE PTR [edi-0x7],dl
  4385fb:	jne    0x4385b0
  4385fd:	mov    ds:0xd773685c,al
  438602:	les    ebx,FWORD PTR [eax-0x1ee458e3]
  438608:	ins    BYTE PTR es:[edi],dx
  438609:	into   
  43860a:	scas   eax,DWORD PTR es:[edi]
  43860b:	jmp    0xe3c2:0x22e61089
  438612:	pop    esp
  438613:	adc    DWORD PTR [eax-0x3dbc9e96],esi
  438619:	pusha  
  43861a:	mov    bh,0x7
  43861c:	mov    ds:0x33d69f77,eax
  438621:	adc    BYTE PTR [eax+0x38582e12],ch
  438627:	xchg   ebp,eax
  438628:	(bad)  
  43862a:	aaa    
  43862b:	xchg   edi,eax
  43862c:	mov    cl,0xb4
  43862e:	jmp    0xa879:0xf0cb73ba
  438635:	mov    DWORD PTR gs:[edi+ebx*2-0x16],0xe88f16e5
  43863e:	jb     0x4386b4
  438640:	lds    ebx,FWORD PTR [edx+0x14d0fcb5]
  438646:	push   ebp
  438647:	scas   al,BYTE PTR es:[edi]
  438648:	lahf   
  438649:	(bad)  
  43864a:	xor    ebp,esp
  43864c:	stc    
  43864d:	ins    BYTE PTR es:[edi],dx
  43864e:	outs   dx,DWORD PTR ds:[esi]
  43864f:	iret   
  438650:	adc    al,0xaa
  438652:	or     DWORD PTR [edx-0x2b],ebx
  438655:	(bad)  
  438657:	xchg   BYTE PTR [ebp-0x64],bl
  43865a:	mov    esp,0x8e96565a
  43865f:	inc    edi
  438660:	ret    0xe505
  438663:	dec    DWORD PTR [esi-0x1]
  438666:	popf   
  438667:	sti    
  438668:	repnz dec esp
  43866a:	fsubr  DWORD PTR [esp+esi*8-0x3d]
  43866e:	and    BYTE PTR [ecx-0x3b],ch
  438671:	sbb    al,0x2b
  438673:	and    DWORD PTR [esi+0x79cbaf18],ecx
  438679:	outs   dx,DWORD PTR ds:[esi]
  43867a:	dec    esi
  43867b:	repnz xchg edi,eax
  43867d:	imul   BYTE PTR [ebx]
  43867f:	cdq    
  438680:	adc    bl,BYTE PTR [edi]
  438682:	imul   eax,esp,0x10
  438685:	cmc    
  438686:	pop    eax
  438687:	out    0x44,al
  438689:	cwde   
  43868a:	fs (bad) 
  43868c:	pop    edx
  43868d:	push   ds
  43868e:	icebp  
  43868f:	hlt    
  438690:	(bad)  
  438691:	(bad)  
  438692:	aad    0xc9
  438694:	repz cmp BYTE PTR cs:[ecx+esi*4-0x15],0x48
  43869b:	jnp    0x438652
  43869d:	pushaw 
  43869f:	pusha  
  4386a0:	loope  0x4386ea
  4386a2:	in     al,0xb1
  4386a4:	into   
  4386a5:	add    al,0x57
  4386a7:	repnz leave 
  4386a9:	mov    dh,0x54
  4386ab:	or     ch,0x9f
  4386ae:	push   0x931ded0
  4386b3:	xchg   ecx,eax
  4386b4:	retf   
  4386b5:	sub    al,0xe5
  4386b7:	fadd   QWORD PTR [eax]
  4386b9:	loop   0x43867f
  4386bb:	adc    esi,0xbf4e2619
  4386c1:	xchg   edx,ecx
  4386c3:	mov    BYTE PTR [eax+0x35],al
  4386c6:	push   eax
  4386c7:	mov    eax,ds:0xbec561cc
  4386cc:	push   ecx
  4386cd:	push   ss
  4386ce:	mov    dh,0x38
  4386d0:	mov    esi,0xb79163ca
  4386d5:	(bad)  
  4386d6:	pop    eax
  4386d7:	lds    edi,FWORD PTR [ebp+0x6]
  4386da:	sub    al,0x99
  4386dc:	inc    ebx
  4386dd:	(bad)  
  4386df:	mov    bl,0x99
  4386e1:	and    esp,DWORD PTR [eax]
  4386e3:	xor    DWORD PTR [ecx-0x58],ecx
  4386e6:	add    eax,0xc4fba4ce
  4386eb:	sti    
  4386ec:	mov    esp,0xde9314f8
  4386f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4386f2:	ror    BYTE PTR es:[ebp+0x2c9cbff2],0xa0
  4386fa:	(bad)
  4386fe:	lods   eax,DWORD PTR ds:[esi]
  4386ff:	mov    al,BYTE PTR [eax-0x64af45a5]
  438705:	dec    esp
  438706:	retf   
  438707:	dec    edi
  438708:	mov    BYTE PTR [ecx+0x26f5cb74],ch
  43870e:	pop    esp
  43870f:	add    eax,0x7c84a6e0
  438714:	popf   
  438715:	ret    
  438716:	pop    edi
  438717:	sti    
  438718:	pop    eax
  438719:	xchg   edi,eax
  43871a:	add    edx,DWORD PTR [ebx+0x6b43a4d1]
  438720:	std    
  438721:	jge    0x438740
  438723:	(bad)  
  438724:	mov    ebp,0x4735aa14
  438729:	neg    BYTE PTR [edi-0x31]
  43872c:	in     eax,dx
  43872d:	xchg   BYTE PTR [ebp-0x1f],ah
  438730:	mov    edx,0x452f2002
  438735:	and    al,0xb3
  438737:	aam    0x6f
  438739:	xchg   esp,esp
  43873b:	mov    esi,0x5361e869
  438740:	push   cs
  438741:	cdq    
  438742:	push   ecx
  438743:	sbb    ecx,ebx
  438745:	mov    ss,WORD PTR [edx]
  438747:	fbstp  TBYTE PTR [ecx+0x626564e4]
  43874d:	dec    edi
  43874e:	push   ebp
  43874f:	js     0x438701
  438751:	xchg   BYTE PTR [esi-0x7],ch
  438754:	push   0x29d8d233
  438759:	loope  0x43874c
  43875b:	xchg   esi,eax
  43875c:	or     bh,BYTE PTR [ebp-0x1f28076f]
  438762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438763:	dec    esp
  438764:	push   esi
  438765:	mov    cs,esp
  438767:	jno    0x4387a0
  438769:	sub    eax,0x21a83eb5
  43876e:	sbb    ecx,esi
  438770:	les    esi,FWORD PTR [ebp-0xfb556dc]
  438776:	inc    ebx
  438777:	call   0x2e438225
  43877c:	fadd   DWORD PTR [edx-0x192a06a1]
  438782:	pop    es
  438783:	pop    esi
  438784:	std    
  438785:	popf   
  438786:	and    al,0x1f
  438788:	cmp    bh,cl
  43878a:	pop    ds
  43878b:	xchg   edi,eax
  43878c:	ss dec ebx
  43878e:	(bad)  
  43878f:	sbb    dh,BYTE PTR [ebp+eax*1-0x7d]
  438793:	inc    edi
  438794:	aam    0x59
  438796:	and    al,0x3
  438798:	pushf  
  438799:	and    al,0x1
  43879b:	fidiv  DWORD PTR [ecx-0x14]
  43879e:	mov    cl,0xec
  4387a0:	fstp   DWORD PTR [esp+ecx*2-0x167bc6ce]
  4387a7:	cdq    
  4387a8:	pop    edx
  4387a9:	dec    edx
  4387aa:	outs   dx,BYTE PTR ds:[esi]
  4387ab:	stos   BYTE PTR es:[edi],al
  4387ac:	sub    edi,DWORD PTR [eax-0x29639210]
  4387b2:	jg     0x438781
  4387b4:	std    
  4387b5:	mov    esi,0x13d577f6
  4387ba:	pop    edi
  4387bb:	mov    ecx,DWORD PTR [ebx-0x7b]
  4387be:	(bad)  
  4387bf:	leave  
  4387c0:	pushf  
  4387c1:	test   BYTE PTR [edx],bh
  4387c3:	in     al,dx
  4387c4:	test   BYTE PTR [ebx],dh
  4387c6:	add    al,0x4c
  4387c9:	sub    BYTE PTR ss:[ecx],0x78
  4387cd:	pop    edi
  4387ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4387cf:	xchg   ebx,eax
  4387d0:	test   al,0xae
  4387d2:	std    
  4387d3:	lock shl DWORD PTR [esi],cl
  4387d6:	pop    eax
  4387d7:	push   0x23
  4387d9:	rcr    BYTE PTR [esi-0x72],1
  4387dc:	push   ds
  4387dd:	(bad)  
  4387de:	cmp    esi,DWORD PTR [ebx]
  4387e0:	mov    ds:0x9cf21303,al
  4387e5:	out    dx,al
  4387e6:	xor    esp,ebx
  4387e8:	mov    ah,0xbe
  4387ea:	aaa    
  4387eb:	pop    ebp
  4387ec:	or     eax,0x471a6724
  4387f1:	xchg   ebx,eax
  4387f2:	and    BYTE PTR [ebx-0x80],bh
  4387f5:	pop    ecx
  4387f6:	call   0x3197:0xb14a04bb
  4387fd:	dec    ebp
  4387fe:	enter  0x1282,0x92
  438802:	leave  
  438803:	cs xchg esi,eax
  438805:	mov    BYTE PTR [edi-0x3],ah
  438808:	cmp    DWORD PTR ds:0x49bbe603,0x99d10638
  438812:	jge    0x438828
  438814:	fcom   st(7)
  438817:	std    
  438818:	push   ebx
  438819:	or     al,0xfb
  43881b:	pushf  
  43881c:	inc    eax
  43881d:	mov    eax,0x223bfa59
  438822:	sar    DWORD PTR [ebx-0x7e],0x90
  438826:	dec    ecx
  438827:	jecxz  0x438822
  438829:	pop    esp
  43882a:	into   
  43882b:	adc    al,ch
  43882d:	dec    ebp
  43882e:	enter  0xb06b,0x26
  438832:	mov    ecx,0xce0d43e8
  438837:	pop    esp
  438838:	and    BYTE PTR [edi],ah
  43883a:	(bad)  
  43883c:	ret    0xbc3a
  43883f:	cmp    BYTE PTR [ecx-0x59],ch
  438842:	and    eax,0x8971fd51
  438847:	mov    BYTE PTR [ebx+0x57],bl
  43884a:	in     al,0x39
  43884c:	dec    edi
  43884d:	popf   
  43884e:	mov    al,ds:0xd0364d0a
  438853:	retf   
  438854:	sbb    al,0x77
  438856:	or     eax,0x1115af2a
  43885b:	push   0xbbc55e33
  438860:	out    dx,al
  438861:	and    bl,BYTE PTR [edi+edx*8]
  438864:	ret    
  438865:	test   BYTE PTR [eax+0x1b1a5eb5],0x4
  43886c:	jno    0x43880d
  43886e:	inc    ecx
  43886f:	pop    ecx
  438870:	adc    BYTE PTR [ecx-0x1f],bh
  438873:	in     al,dx
  438874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438875:	(bad)
  438878:	ret    
  438879:	inc    edx
  43887a:	test   al,0x79
  43887c:	jnp    0x4388fd
  43887e:	scas   eax,DWORD PTR es:[edi]
  43887f:	jb     0x438826
  438881:	inc    ecx
  438882:	mov    ecx,0x172cfe6
  438887:	arpl   cx,sp
  438889:	pop    ss
  43888a:	inc    edx
  43888b:	mov    al,0x76
  43888d:	enter  0x7f87,0xc3
  438891:	into   
  438892:	not    BYTE PTR [edx+0x8]
  438895:	stos   BYTE PTR es:[edi],al
  438896:	push   es
  438897:	pop    edx
  438898:	sub    edx,edx
  43889a:	xor    al,0xf8
  43889c:	mov    al,ds:0x6cccc91b
  4388a1:	in     al,dx
  4388a2:	adc    eax,esi
  4388a4:	mov    al,ds:0xd83486de
  4388a9:	sahf   
  4388aa:	mov    eax,0x9e9cd173
  4388af:	icebp  
  4388b0:	adc    eax,0x18afbe61
  4388b5:	push   cs
  4388b6:	dec    eax
  4388b7:	xchg   BYTE PTR [edi+0x3b0c8ecd],cl
  4388bd:	adc    ecx,ecx
  4388bf:	xchg   edx,eax
  4388c0:	dec    ecx
  4388c1:	aaa    
  4388c2:	loope  0x4388b0
  4388c4:	fwait
  4388c5:	mov    ds:0x46039b11,eax
  4388ca:	jbe    0x438932
  4388cc:	xchg   esi,eax
  4388cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4388ce:	dec    DWORD PTR [edx+0x1d]
  4388d1:	mov    ecx,0xab9464fb
  4388d6:	sbb    bl,BYTE PTR [eax-0x369e53e1]
  4388dc:	cwde   
  4388dd:	mov    ch,0xe0
  4388df:	lahf   
  4388e0:	adc    DWORD PTR [esi-0x4685a9b4],esp
  4388e6:	ja     0x4388d5
  4388e8:	jne    0x438898
  4388ea:	in     al,0xe4
  4388ec:	sbb    eax,0x27335a77
  4388f1:	add    BYTE PTR [eax],0x42
  4388f4:	inc    esi
  4388f5:	repnz test al,bh
  4388f8:	mov    ch,0x42
  4388fa:	clc    
  4388fb:	retf   
  4388fc:	call   0xf3e5:0xbe1f5f7b
  438903:	push   cs
  438904:	add    dl,dh
  438906:	jns    0x4388c5
  438908:	fild   WORD PTR [edi+0x24]
  43890b:	leave  
  43890c:	fcmovnb st,st(1)
  43890e:	dec    edi
  43890f:	shl    BYTE PTR [ebx-0x1b094a62],1
  438915:	jbe    0x438996
  438917:	lods   al,BYTE PTR ds:[esi]
  438918:	ja     0x4388d2
  43891a:	push   edi
  43891b:	and    DWORD PTR [edx+ebp*4+0x4cfb65cd],esi
  438922:	xor    eax,0xb1c8e77b
  438927:	jo     0x438999
  438929:	dec    ecx
  43892a:	mov    WORD PTR [ecx],cs
  43892c:	scas   al,BYTE PTR es:[edi]
  43892d:	xor    ebx,DWORD PTR [ebx+0x6c]
  438930:	sub    bh,BYTE PTR [ebp-0x14]
  438933:	je     0x438941
  438935:	ret    
  438936:	push   0x3b
  438938:	sbb    BYTE PTR [ebx+0x42],al
  43893b:	sahf   
  43893c:	mov    ebp,0x59696293
  438941:	adc    DWORD PTR [ebx-0x5b],0x17bce4f
  438948:	lock lds ebp,FWORD PTR [eax+ebx*2-0xbbb554c]
  438950:	mov    edi,0x6136008d
  438955:	fcom   QWORD PTR [edx+edi*4-0x72]
  438959:	sti    
  43895a:	mov    al,ds:0x6cef849c
  43895f:	mov    gs,WORD PTR [edx+0x148cbd32]
  438965:	(bad)  
  438966:	test   edx,0xbb2c5e0
  43896c:	pop    ss
  43896d:	out    dx,eax
  43896e:	lds    esi,FWORD PTR [ecx-0x52]
  438971:	pop    ss
  438972:	jg     0x4389cd
  438974:	imul   ecx,DWORD PTR [esi-0x29],0xf21afd11
  43897b:	test   BYTE PTR [edx+0x6b102f41],bh
  438981:	push   cs
  438982:	push   ss
  438983:	mov    cl,BYTE PTR [esi+0x2b]
  438986:	dec    esi
  438987:	xchg   edi,eax
  438988:	dec    ebp
  438989:	inc    ecx
  43898a:	cmp    bh,BYTE PTR [edi*8-0x1eb1c133]
  438991:	xchg   BYTE PTR [eax-0x527c5466],dl
  438997:	mov    fs,WORD PTR [eax+ecx*4-0x5a8b67e4]
  43899e:	xchg   ebp,eax
  43899f:	mov    cl,0x2
  4389a1:	or     ebp,DWORD PTR [ebx+0x63]
  4389a4:	fadd   st,st(0)
  4389a6:	clc    
  4389a7:	push   0xffffffbd
  4389a9:	in     eax,dx
  4389aa:	cmp    BYTE PTR [ebp+0x412e10ad],al
  4389b0:	outs   dx,BYTE PTR ds:[esi]
  4389b1:	cmp    eax,0x41ee68c0
  4389b6:	jmp    0x43e3b25d
  4389bb:	and    DWORD PTR [esi],edx
  4389bd:	mov    ch,0x5
  4389bf:	xchg   BYTE PTR [ebx],dh
  4389c1:	scas   eax,DWORD PTR es:[edi]
  4389c2:	retf   0x4d19
  4389c5:	xchg   ebp,eax
  4389c6:	arpl   WORD PTR [eax],cx
  4389c8:	and    dl,bl
  4389ca:	aam    0xa2
  4389cc:	es inc edx
  4389ce:	(bad)  
  4389cf:	leave  
  4389d0:	mov    esp,DWORD PTR [edx]
  4389d2:	dec    ebx
  4389d3:	repz inc edi
  4389d6:	dec    ecx
  4389d7:	fdivrp st(3),st
  4389d9:	ja     0x4389b6
  4389db:	pop    ebp
  4389dc:	sub    ebx,ebp
  4389de:	mov    WORD PTR [ecx+0x6a],?
  4389e1:	inc    eax
  4389e2:	daa    
  4389e3:	xlat   BYTE PTR ds:[ebx]
  4389e4:	sbb    eax,DWORD PTR ds:0x2c660389
  4389ea:	lds    ebx,FWORD PTR [ebx-0xc]
  4389ed:	sbb    al,0x5
  4389ef:	sbb    al,0xff
  4389f1:	add    eax,0xfbc9b52a
  4389f6:	popf   
  4389f7:	or     DWORD PTR [ebp+0x48],ebx
  4389fa:	sti    
  4389fb:	xor    al,0xf6
  4389fd:	mov    esp,0xf0498da4
  438a02:	outs   dx,DWORD PTR ds:[esi]
  438a03:	mov    eax,ds:0xe81f4ec
  438a08:	mov    esi,0x276a949f
  438a0d:	add    al,0xf8
  438a0f:	call   0xe17476db
  438a14:	sti    
  438a15:	das    
  438a16:	add    al,0x5c
  438a18:	xchg   edx,eax
  438a19:	jl     0x43899e
  438a1b:	jmp    DWORD PTR [ecx-0x70b4ca4c]
  438a21:	add    ah,BYTE PTR [ebp+ecx*1-0x52]
  438a25:	into   
  438a26:	js     0x438a37
  438a28:	pop    ebp
  438a29:	jmp    0xeccc5d45
  438a2e:	mov    ?,WORD PTR [ecx]
  438a30:	inc    edx
  438a31:	mov    cl,0xdf
  438a33:	cwde   
  438a34:	clc    
  438a35:	xor    ebp,DWORD PTR [eax]
  438a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438a38:	sbb    ecx,DWORD PTR [esi-0x6cc47a10]
  438a3e:	retf   
  438a3f:	ret    0x5e3a
  438a42:	pop    edx
  438a43:	xor    DWORD PTR [ebx+edi*4],edx
  438a46:	punpckhbw mm7,QWORD PTR [ecx]
  438a49:	or     dl,dl
  438a4b:	arpl   WORD PTR [esi+ecx*1],bp
  438a4e:	dec    edx
  438a4f:	dec    ebp
  438a50:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  438a52:	cmp    al,0x65
  438a54:	dec    ebp
  438a55:	(bad)  
  438a56:	mov    bl,0x7
  438a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438a59:	jae    0x438a11
  438a5b:	fwait
  438a5c:	mov    bl,0xd0
  438a5e:	mov    eax,ds:0x36dea4d2
  438a63:	test   DWORD PTR [ecx+edx*2+0x3c404ea2],edi
  438a6a:	xchg   esi,eax
  438a6b:	jo     0x438ac4
  438a6d:	sub    dl,BYTE PTR [edx+esi*1]
  438a70:	retf   
  438a71:	push   ss
  438a72:	pop    ebp
  438a73:	push   cs
  438a74:	popa   
  438a75:	and    al,0xc4
  438a77:	xor    eax,0x58e53e1d
  438a7c:	aaa    
  438a7d:	ret    0x3cd9
  438a80:	xor    DWORD PTR [ebx-0x5a],edi
  438a83:	jg     0x438ac8
  438a85:	sub    ebp,esp
  438a87:	sub    DWORD PTR [ebp-0x57],ebp
  438a8a:	mov    bh,0xd8
  438a8c:	ins    BYTE PTR es:[edi],dx
  438a8d:	retf   0xe1ac
  438a90:	gs out 0x2a,al
  438a93:	retf   0x3b52
  438a96:	retf   0x945f
  438a99:	pop    edx
  438a9a:	mov    edx,0x77a25132
  438a9f:	xchg   edx,eax
  438aa0:	fwait
  438aa1:	inc    esi
  438aa2:	sub    ebp,edi
  438aa4:	data16 adc al,0xf0
  438aa7:	adc    DWORD PTR [esi-0x79d3ced5],eax
  438aad:	arpl   WORD PTR [eax-0x432cb7eb],bx
  438ab3:	dec    edx
  438ab4:	jne    0x438a5d
  438ab6:	mov    al,0x92
  438ab8:	xchg   edi,eax
  438ab9:	ret    
  438aba:	xor    BYTE PTR [edx-0x7037cca8],bl
  438ac0:	adc    ebp,DWORD PTR [edi+0x7d]
  438ac3:	mov    eax,0x74e147e
  438ac8:	xchg   esp,eax
  438ac9:	(bad)  
  438aca:	daa    
  438acb:	(bad)  
  438acc:	out    0x52,eax
  438ace:	sub    DWORD PTR [ebx],0x2f
  438ad1:	mov    DWORD PTR [ecx],eax
  438ad3:	daa    
  438ad4:	or     DWORD PTR [edx-0x43c3ecad],ebx
  438ada:	loop   0x438b41
  438adc:	adc    eax,0x18bf240c
  438ae1:	xor    eax,esi
  438ae3:	jg     0x438b33
  438ae5:	jl     0x438b64
  438ae7:	push   cs
  438ae8:	or     al,0x24
  438aea:	pop    eax
  438aeb:	loope  0x438af3
  438aed:	add    al,0x71
  438aef:	sub    DWORD PTR ss:[edx+0x6b49755c],ecx
  438af6:	(bad)
  438af9:	adc    eax,0x708d7836
  438afe:	lahf   
  438aff:	stos   BYTE PTR es:[edi],al
  438b00:	or     BYTE PTR [ecx],cl
  438b02:	stc    
  438b03:	je     0x438b6f
  438b05:	mov    ebp,edi
  438b07:	jo     0x438b37
  438b09:	mov    WORD PTR [ebp+0xd546758],fs
  438b0f:	inc    eax
  438b10:	adc    ebp,eax
  438b12:	sub    al,BYTE PTR [eax*4+0x37b8ed5c]
  438b19:	sbb    al,0x22
  438b1b:	mov    esi,0x4d88828a
  438b20:	push   ds
  438b21:	lods   al,BYTE PTR ds:[esi]
  438b22:	fidivr DWORD PTR [edx-0x38]
  438b25:	mov    al,ds:0xc8201570
  438b2a:	mov    ecx,0x7d420d22
  438b2f:	ret    
  438b30:	(bad)  
  438b31:	mov    al,0x50
  438b33:	mov    eax,fs:0x5749c1a7
  438b39:	sbb    DWORD PTR [edx+0x71],esp
  438b3c:	ja     0x438bb3
  438b3e:	cmp    DWORD PTR [ebx+eax*1+0x72],0x551accd0
  438b46:	sbb    esi,DWORD PTR [eax]
  438b48:	shl    DWORD PTR [ebx],0x35
  438b4b:	dec    esi
  438b4c:	jecxz  0x438bc6
  438b4e:	sti    
  438b4f:	mov    ah,0x34
  438b51:	ret    0x416e
  438b54:	shl    DWORD PTR [eax+0x6d],cl
  438b57:	mov    esp,DWORD PTR [ebp+0x66e1549b]
  438b5d:	lods   eax,DWORD PTR ds:[esi]
  438b5e:	enter  0x752b,0x21
  438b62:	sub    edi,esi
  438b64:	int3   
  438b65:	cmc    
  438b66:	pop    esi
  438b67:	mov    ds:0x37db6c4c,al
  438b6c:	jae    0x438b38
  438b6e:	sub    dh,bl
  438b70:	sti    
  438b71:	call   DWORD PTR [ebx-0x5c702685]
  438b77:	add    eax,0x2eb6ec8d
  438b7c:	sub    BYTE PTR [ebp-0x46],0x93
  438b80:	ffree  st(6)
  438b82:	scas   eax,DWORD PTR es:[edi]
  438b83:	xor    edi,edi
  438b85:	sub    BYTE PTR [esi+0x7c6dae51],dh
  438b8b:	mov    al,ds:0x5fcfda5e
  438b90:	in     al,dx
  438b91:	and    DWORD PTR [ecx-0x40],eax
  438b94:	lods   al,BYTE PTR ds:[esi]
  438b95:	bound  eax,QWORD PTR [ebx-0x7c]
  438b98:	cmp    BYTE PTR [esi+0xafb4e6a],dh
  438b9e:	cmc    
  438b9f:	outs   dx,DWORD PTR ds:[esi]
  438ba0:	xlat   BYTE PTR ds:[ebx]
  438ba1:	lea    ebx,[eax-0x19]
  438ba4:	imul   ebx,DWORD PTR [edx-0x1b],0x7f
  438ba8:	cmp    BYTE PTR [ebx],dl
  438baa:	out    0xb4,eax
  438bac:	adc    al,0x30
  438bae:	pop    eax
  438baf:	dec    eax
  438bb0:	jp     0x438b9f
  438bb2:	pop    ecx
  438bb3:	pop    ds
  438bb4:	add    BYTE PTR [ebp+0x5f],ch
  438bb7:	cmp    ah,cl
  438bb9:	hlt    
  438bba:	mov    edx,0x6644d63f
  438bbf:	jge    0x438c34
  438bc1:	push   ecx
  438bc2:	add    eax,0x6811302c
  438bc7:	data16 fwait
  438bc9:	out    0xf8,eax
  438bcb:	scas   al,BYTE PTR es:[di]
  438bcd:	data16 ins BYTE PTR es:[edi],dx
  438bcf:	mov    bh,0x16
  438bd1:	cmp    cl,BYTE PTR [ecx+0x27434511]
  438bd7:	lods   eax,DWORD PTR ds:[esi]
  438bd8:	inc    esi
  438bd9:	mov    eax,ds:0x42836ac2
  438bde:	lds    esp,FWORD PTR [edx]
  438be0:	and    ecx,DWORD PTR [eax]
  438be2:	add    al,0x4
  438be4:	pop    es
  438be5:	sbb    eax,0x4b8d49c2
  438bea:	mov    cl,0x65
  438bec:	sub    eax,0x607a0a52
  438bf1:	push   esp
  438bf2:	bound  eax,QWORD PTR [edx-0x53]
  438bf5:	jne    0x438b82
  438bf7:	test   DWORD PTR [edx+eax*4],esp
  438bfa:	std    
  438bfb:	inc    BYTE PTR [eax]
  438bfd:	xchg   DWORD PTR [esi],esp
  438bff:	adc    ebx,DWORD PTR [edx+0x394ad165]
  438c05:	(bad)  
  438c06:	sbb    dh,BYTE PTR [ebp-0x59c62392]
  438c0c:	mov    bh,0x18
  438c0e:	push   esp
  438c0f:	loopne 0x438bab
  438c11:	loopne 0x438c66
  438c13:	loopne 0x438c2b
  438c15:	out    0x78,eax
  438c17:	retf   0x91d1
  438c1a:	push   es
  438c1b:	or     dl,bl
  438c1d:	xchg   esp,eax
  438c1e:	pop    ds
  438c1f:	mov    esi,0x6cd700e1
  438c24:	pop    ds
  438c25:	dec    esi
  438c26:	or     DWORD PTR [ecx],edi
  438c28:	(bad)  
  438c29:	and    ch,al
  438c2b:	lds    ecx,FWORD PTR [edx+0x74aaf38a]
  438c31:	lods   al,BYTE PTR ds:[esi]
  438c32:	clc    
  438c33:	jg     0x438c43
  438c35:	adc    BYTE PTR ds:[esi+edx*4],bl
  438c39:	cmc    
  438c3a:	arpl   WORD PTR [esi],dx
  438c3c:	jmp    0xe22d:0x1c762f5a
  438c43:	je     0x438c22
  438c45:	(bad)  [edx*4+0x7af89719]
  438c4c:	add    BYTE PTR [edx+0x5ffa594e],ah
  438c52:	(bad)  
  438c53:	addr16 push es
  438c55:	fst    DWORD PTR [eax+0x7e151b80]
  438c5b:	xchg   ebp,eax
  438c5c:	lds    edx,FWORD PTR [ecx+ecx*8-0x5a]
  438c60:	sub    DWORD PTR [ebp-0x36],ebp
  438c63:	xchg   esp,eax
  438c64:	iret   
  438c65:	pushf  
  438c66:	mov    ds:0xca9916c0,al
  438c6b:	add    al,0x67
  438c6d:	mov    ecx,0xd7951417
  438c72:	jmp    0xd79a:0xc891098f
  438c79:	or     eax,0xc901b7ba
  438c7e:	test   DWORD PTR [ecx+0x1b],0x9c32b86a
  438c85:	push   0x7f3c290d
  438c8a:	addr16 sbb al,0x60
  438c8d:	add    eax,0xd497df63
  438c92:	lods   eax,DWORD PTR ds:[esi]
  438c93:	int    0x8e
  438c95:	push   ss
  438c96:	mov    al,ds:0xb19d9454
  438c9b:	add    eax,0x5786cb77
  438ca0:	mov    ch,0x74
  438ca2:	push   eax
  438ca3:	retf   
  438ca4:	retf   0xdd4a
  438ca7:	stos   DWORD PTR es:[edi],eax
  438ca8:	inc    edx
  438ca9:	cmp    eax,0x8dd1c8c9
  438cae:	mov    dh,0x6e
  438cb0:	mov    edx,0xf53ae47d
  438cb5:	inc    edx
  438cb6:	push   esi
  438cb7:	mov    cl,0xb2
  438cb9:	sbb    eax,0x7638dde
  438cbe:	ret    0x156b
  438cc1:	popa   
  438cc2:	lock xor BYTE PTR [eax],bh
  438cc5:	in     al,0x1c
  438cc7:	imul   edi,DWORD PTR [ecx-0x7a31e35],0x61
  438cce:	fisubr WORD PTR [eax]
  438cd0:	stos   BYTE PTR es:[edi],al
  438cd1:	pop    edi
  438cd2:	mov    ch,0x31
  438cd4:	das    
  438cd5:	adc    al,0xf2
  438cd7:	xchg   ecx,eax
  438cd8:	lock pop ebp
  438cda:	pop    ss
  438cdb:	fmul   QWORD PTR [eax]
  438cdd:	loope  0x438cbc
  438cdf:	mov    ebx,0x410320f7
  438ce4:	mov    WORD PTR [edi],?
  438ce6:	cmc    
  438ce7:	retf   
  438ce8:	mov    ch,dh
  438cea:	mov    al,ds:0xb1a00993
  438cef:	popa   
  438cf0:	xchg   ebx,eax
  438cf1:	addr16 inc esp
  438cf3:	push   esp
  438cf4:	mov    ah,0x8
  438cf6:	fmul   st,st(6)
  438cf8:	or     ch,cl
  438cfa:	xchg   ebp,eax
  438cfb:	cli    
  438cfc:	mul    DWORD PTR [edi]
  438cfe:	in     eax,dx
  438cff:	ja     0x438c94
  438d01:	lods   eax,DWORD PTR ds:[esi]
  438d02:	xor    DWORD PTR [edi],ecx
  438d04:	pushf  
  438d05:	pop    esi
  438d06:	aas    
  438d07:	mov    ebp,0x5b9788fd
  438d0c:	aam    0xad
  438d0e:	mov    cl,0x36
  438d10:	and    ebx,0x7b24deb3
  438d16:	pushf  
  438d17:	mov    ebx,0xaf821e4b
  438d1c:	mov    eax,ds:0xa79d0f65
  438d21:	and    eax,0xd76c93d8
  438d26:	test   al,0xb8
  438d28:	or     ebx,DWORD PTR [edi-0x4e]
  438d2b:	cmp    eax,0x4cfd5de3
  438d30:	sub    al,0x3c
  438d32:	pop    esi
  438d33:	mov    eax,ds:0xe1ba2f15
  438d38:	add    BYTE PTR [edx+0xbaab6e3],ah
  438d3e:	aam    0x78
  438d40:	test   al,0xa5
  438d42:	xlat   BYTE PTR ds:[ebx]
  438d43:	das    
  438d44:	retf   
  438d45:	out    0x50,eax
  438d47:	push   ebp
  438d48:	fwait
  438d49:	xchg   DWORD PTR [edx-0x8e24a54],ebx
  438d4f:	scas   eax,DWORD PTR es:[edi]
  438d50:	cs jg  0x438d41
  438d53:	jge    0x438d87
  438d55:	fimul  DWORD PTR [edi+0xa15c79e]
  438d5b:	sub    dl,BYTE PTR [esi+0x14]
  438d5e:	cwde   
  438d5f:	dec    ecx
  438d60:	mov    cl,0x4c
  438d62:	sub    BYTE PTR [esi],0x42
  438d65:	and    al,0xe1
  438d67:	std    
  438d68:	cmp    al,BYTE PTR [eax+eax*2-0x43e59ae6]
  438d6f:	pop    ds
  438d70:	or     dh,bl
  438d72:	loopne 0x438dda
  438d74:	add    dh,BYTE PTR [ecx+0x5b]
  438d77:	in     eax,dx
  438d78:	adc    BYTE PTR ds:0x45a30869,ch
  438d7e:	mov    al,0xa6
  438d80:	dec    ebp
  438d81:	je     0x438d4d
  438d83:	inc    ebx
  438d84:	ret    
  438d85:	cmc    
  438d86:	adc    cl,BYTE PTR [ecx-0x643e922e]
  438d8c:	frstor [eax+edi*2+0x3e93bf9b]
  438d93:	test   eax,0x3eeb3587
  438d98:	sahf   
  438d99:	lea    esp,[edx+0x21]
  438d9c:	into   
  438d9d:	into   
  438d9e:	and    al,0xd7
  438da0:	mov    BYTE PTR [eax],bl
  438da2:	xor    al,0x21
  438da4:	call   0x8cd89168
  438da9:	push   ecx
  438daa:	dec    edx
  438dab:	jo     0x438d9d
  438dad:	fs xchg edi,eax
  438daf:	ins    DWORD PTR es:[edi],dx
  438db0:	jb     0x438d64
  438db2:	shl    BYTE PTR [edi+0x60],cl
  438db5:	(bad)
  438db8:	inc    edx
  438db9:	pop    edx
  438dba:	or     ch,ah
  438dbc:	repnz mov ecx,0x63465886
  438dc2:	cli    
  438dc3:	mov    esi,0xb212f08a
  438dc8:	push   es
  438dc9:	mov    edi,0xdb9f3c0c
  438dce:	add    al,dh
  438dd0:	popf   
  438dd1:	(bad)
  438dd5:	dec    ebp
  438dd6:	test   DWORD PTR [eax],esp
  438dd8:	cs inc edi
  438dda:	and    eax,DWORD PTR [edx-0x45]
  438ddd:	jmp    0x97dd:0x33aa5279
  438de4:	cdq    
  438de5:	(bad)  
  438de6:	adc    ebp,DWORD PTR [edx-0x5b]
  438de9:	pop    esp
  438dea:	repnz jecxz 0x438d94
  438ded:	mov    al,ds:0x4d13d974
  438df2:	sbb    ah,BYTE PTR [ebx+0x3f]
  438df5:	ins    BYTE PTR es:[edi],dx
  438df6:	cld    
  438df7:	inc    edi
  438df8:	mov    al,0xa3
  438dfa:	les    esp,FWORD PTR [eax+0x4]
  438dfd:	or     BYTE PTR [ecx+0x772f0222],bh
  438e03:	out    0xa2,al
  438e05:	jnp    0x438e69
  438e07:	clc    
  438e08:	sub    al,0x16
  438e0a:	or     edx,edx
  438e0c:	pop    edx
  438e0d:	jb     0x438e10
  438e0f:	jb     0x438e69
  438e11:	popa   
  438e12:	xor    eax,0x60c5bf4f
  438e17:	xchg   edi,eax
  438e18:	loopne 0x438dfc
  438e1a:	pop    edx
  438e1b:	out    0xe3,al
  438e1d:	daa    
  438e1e:	cmp    esi,0x70
  438e21:	fild   QWORD PTR [edx]
  438e23:	xchg   ebx,eax
  438e24:	loope  0x438da6
  438e26:	daa    
  438e27:	xchg   ecx,eax
  438e28:	nop
  438e29:	or     al,0x67
  438e2b:	and    eax,0xaa745112
  438e30:	inc    edx
  438e31:	fist   WORD PTR [ecx]
  438e33:	clc    
  438e34:	mov    ch,0x62
  438e36:	cld    
  438e37:	mov    edx,0xa5eadae8
  438e3c:	dec    edi
  438e3d:	mov    bl,0x2e
  438e3f:	enter  0x90f0,0x10
  438e43:	or     ebx,DWORD PTR [ebx+0x5e]
  438e46:	or     BYTE PTR [eax+0x0],dl
  438e49:	cld    
  438e4a:	lea    eax,[eax]
  438e4c:	js     0x438e7f
  438e4e:	adc    ah,al
  438e50:	sbb    edx,esp
  438e52:	sub    BYTE PTR [edx],0x3d
  438e55:	call   0xc67d89a8
  438e5a:	dec    ebx
  438e5b:	popa   
  438e5c:	dec    esp
  438e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438e5f:	test   edi,edi
  438e61:	sub    BYTE PTR [edx-0x4e],dh
  438e64:	mov    WORD PTR [ebx-0x4d],?
  438e67:	push   ss
  438e68:	push   ds
  438e69:	xor    DWORD PTR [edi],ebx
  438e6b:	jp     0x438e85
  438e6d:	in     eax,0x4f
  438e6f:	inc    esp
  438e70:	push   ecx
  438e71:	call   0x74498ad0
  438e76:	les    eax,FWORD PTR [edi+eax*1]
  438e79:	call   0x687d4e96
  438e7e:	add    DWORD PTR [edx-0x39],edi
  438e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438e82:	or     dh,BYTE PTR [ebp-0x8]
  438e85:	cs xor dh,al
  438e88:	jmp    0xd641:0x891ee35a
  438e8f:	push   cs
  438e90:	push   gs
  438e92:	jecxz  0x438e89
  438e94:	retf   
  438e95:	fist   DWORD PTR [eax+ecx*1+0x27]
  438e99:	popa   
  438e9a:	je     0x438e83
  438e9c:	sub    ah,BYTE PTR [edi+0x629f904e]
  438ea2:	stc    
  438ea3:	jge    0x438f16
  438ea5:	retf   
  438ea6:	pop    ebx
  438ea7:	mov    cl,0x49
  438ea9:	sub    DWORD PTR [ecx-0x4fe903e2],ecx
  438eaf:	call   0xc6cbda01
  438eb4:	jge    0x438e3f
  438eb6:	mov    es,WORD PTR [eax+0x5b]
  438eb9:	loop   0x438f26
  438ebb:	in     al,dx
  438ebc:	xor    edx,0xc2d84737
  438ec2:	mov    dl,dh
  438ec4:	stos   BYTE PTR es:[edi],al
  438ec5:	cmp    DWORD PTR [edx],0xfffffffa
  438ec8:	out    0x51,al
  438eca:	in     al,dx
  438ecb:	sbb    al,0x5
  438ecd:	mov    es,ebx
  438ecf:	adc    DWORD PTR [esi],ebx
  438ed1:	jnp    0x438e75
  438ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438ed4:	retf   
  438ed5:	test   al,0x18
  438ed7:	ja     0x438f48
  438ed9:	xor    eax,0xf6c53520
  438ede:	sbb    al,0xf
  438ee0:	push   edi
  438ee1:	xchg   esi,eax
  438ee2:	jns    0x438e8d
  438ee4:	lahf   
  438ee5:	sahf   
  438ee6:	xchg   esp,eax
  438ee7:	cdq    
  438ee8:	imul   esp,DWORD PTR [esi],0xffffffc6
  438eeb:	pop    eax
  438eec:	inc    eax
  438eed:	call   0x4c540341
  438ef2:	addr16 aam 0x38
  438ef5:	int3   
  438ef6:	xor    BYTE PTR [ebp-0xe2124eb],cl
  438efc:	or     al,0x3a
  438efe:	jae    0x438f49
  438f00:	add    BYTE PTR [edx+0x315a58fe],0xe
  438f07:	ins    DWORD PTR es:[edi],dx
  438f08:	(bad)  
  438f09:	cmp    DWORD PTR [edx+ecx*2],edi
  438f0c:	in     al,dx
  438f0d:	push   cs
  438f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438f0f:	sub    bl,bl
  438f11:	xchg   ebp,eax
  438f12:	mov    edi,0xbd578eb9
  438f17:	adc    al,0x47
  438f19:	sub    DWORD PTR [edi],eax
  438f1b:	das    
  438f1c:	sbb    esp,DWORD PTR [esi+0x1c607171]
  438f22:	imul   edi,DWORD PTR ds:0x598ab3b4,0x54ff09b9
  438f2c:	cli    
  438f2d:	push   eax
  438f2e:	and    al,0xc0
  438f30:	jmp    0xbc22:0xf9c9a8a1
  438f37:	repz xchg ebx,eax
  438f39:	cwde   
  438f3a:	sbb    al,0x37
  438f3c:	xchg   edi,eax
  438f3d:	imul   edx,DWORD PTR [eax-0x72fe92e6],0xccc4ef07
  438f47:	and    bh,BYTE PTR [ebp-0x1b]
  438f4a:	popf   
  438f4b:	mov    ecx,0x848dfc64
  438f50:	cwde   
  438f51:	in     al,dx
  438f52:	mov    al,ds:0x1cfc95a2
  438f57:	push   ss
  438f58:	mov    bh,0xeb
  438f5a:	mov    ch,0x28
  438f5c:	(bad)  
  438f5d:	(bad)  
  438f5e:	inc    DWORD PTR [ebx]
  438f60:	(bad)  
  438f62:	sahf   
  438f63:	mov    al,ds:0x36184ff7
  438f68:	les    edi,FWORD PTR [edi]
  438f6a:	push   ss
  438f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438f6c:	cmp    al,0xfe
  438f6e:	pop    esi
  438f6f:	out    0x51,eax
  438f71:	int    0xb0
  438f73:	cs xchg ebx,eax
  438f75:	push   edx
  438f76:	ja     0x438fa9
  438f78:	test   BYTE PTR [ecx+0x19f49b40],cl
  438f7e:	push   cs
  438f7f:	adc    DWORD PTR [esi],ecx
  438f81:	mov    bh,dh
  438f83:	mov    edi,0xffbb992b
  438f88:	imul   ebp,DWORD PTR [edi+0x45],0xa7400e67
  438f8f:	xor    eax,0x8d6e5182
  438f94:	sahf   
  438f95:	lock fisttp DWORD PTR [ebx-0x9]
  438f99:	jns    0x438f3e
  438f9b:	lock inc ecx
  438f9d:	bound  esp,QWORD PTR [eax-0x11]
  438fa0:	inc    edi
  438fa1:	retf   0xee15
  438fa4:	push   ss
  438fa5:	jo     0x438f81
  438fa7:	push   ss
  438fa8:	mov    ch,0x8d
  438faa:	mov    ds:0xc33912a8,al
  438faf:	lds    esi,FWORD PTR [edi-0x4502ee9c]
  438fb5:	js     0x438ff9
  438fb7:	dec    edx
  438fb8:	data16 gs das 
  438fbb:	sub    bh,BYTE PTR [edx+0x4c]
  438fbe:	cmp    BYTE PTR [ebp+0x30],0x98
  438fc2:	(bad)  
  438fc3:	call   0x7afa:0x8bdb8ce0
  438fca:	mov    eax,0xe3ab663e
  438fcf:	sbb    ebx,DWORD PTR [ebp-0x5e6586b2]
  438fd5:	ja     0x438f8c
  438fd7:	push   esp
  438fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438fd9:	icebp  
  438fda:	sbb    ax,0xb8ba
  438fde:	and    BYTE PTR [edx-0x1c],dl
  438fe1:	lahf   
  438fe2:	add    eax,0x8930fb34
  438fe7:	sub    bh,bh
  438fe9:	sbb    al,0x7c
  438feb:	mov    ch,0x71
  438fed:	pop    ss
  438fee:	pop    eax
  438fef:	cmc    
  438ff0:	cmp    DWORD PTR [edx+0x21],ecx
  438ff3:	inc    eax
  438ff4:	test   bh,ah
  438ff6:	mov    ecx,0xb523801c
  438ffb:	dec    eax
  438ffc:	mov    ?,edx
  438ffe:	mov    DWORD PTR [edi],edx
  439000:	add    bh,ch
  439002:	fwait
  439003:	jg     0x438fc7
  439005:	aas    
  439006:	(bad)  
  439007:	outs   dx,BYTE PTR ds:[esi]
  439008:	test   DWORD PTR [eax],ebp
  43900a:	adc    BYTE PTR [ebx+0x24],bh
  43900d:	(bad)  
  43900e:	push   0x6f
  439010:	sahf   
  439011:	push   ss
  439012:	jae    0x43906b
  439014:	mov    cl,0x44
  439016:	popa   
  439017:	es pop esp
  439019:	cli    
  43901a:	pop    edx
  43901b:	pop    ebx
  43901c:	or     bl,BYTE PTR [eax-0xa286ffe]
  439022:	cmp    DWORD PTR [edx+0x6e],ebx
  439025:	xchg   edi,eax
  439026:	js     0x439072
  439028:	in     eax,0xf5
  43902a:	xchg   edi,eax
  43902b:	enter  0xe144,0xac
  43902f:	jbe    0x439059
  439031:	stc    
  439032:	in     al,0xb5
  439034:	repz fisubr WORD PTR [ebp-0x2e5b6afc]
  43903b:	repz fwait
  43903d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43903e:	jmp    0x7dca6a74
  439043:	push   esp
  439044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439045:	fisttp QWORD PTR [ebx+0x24e8d0ce]
  43904b:	in     eax,dx
  43904c:	mov    dh,0x4d
  43904e:	icebp  
  43904f:	sbb    DWORD PTR [esi-0x37],esp
  439052:	adc    edi,0x19740a74
  439058:	cwde   
  439059:	adc    al,0x66
  43905b:	and    DWORD PTR [edx],esi
  43905d:	lahf   
  43905e:	shl    BYTE PTR [ebp-0x12234a68],1
  439064:	lds    esi,FWORD PTR [ebp+0x54cd6930]
  43906a:	stc    
  43906b:	in     eax,0xff
  43906d:	jae    0x439004
  43906f:	int3   
  439070:	scas   eax,DWORD PTR es:[edi]
  439071:	enter  0x3756,0x1
  439075:	adc    ecx,DWORD PTR [eax+ecx*1+0x471881bb]
  43907c:	(bad)  
  43907d:	cli    
  43907e:	xchg   edx,eax
  43907f:	push   esp
  439080:	add    DWORD PTR [ecx+0x7d946ca1],esi
  439086:	mov    ecx,0x3afcf078
  43908b:	mov    dl,0xf7
  43908d:	mov    eax,0xaad9b178
  439092:	repnz bound esi,QWORD PTR [bx+di-0x65]
  439097:	sbb    eax,0xb3ebac54
  43909c:	in     eax,0x2f
  43909e:	cmp    ecx,DWORD PTR [esi+edx*4+0x21d5974d]
  4390a5:	add    dh,BYTE PTR [ebx-0x3754ed6a]
  4390ab:	repz dec ebx
  4390ad:	gs sub bh,0x55
  4390b1:	das    
  4390b2:	and    eax,0x911f1896
  4390b7:	inc    edx
  4390b8:	pop    esp
  4390b9:	and    ecx,DWORD PTR [edi]
  4390bb:	pop    ecx
  4390bc:	ror    bl,0xab
  4390bf:	mov    BYTE PTR [edi],bl
  4390c1:	jl     0x439140
  4390c3:	test   BYTE PTR [edi],0x36
  4390c6:	icebp  
  4390c7:	jge    0x439141
  4390c9:	jae    0x439127
  4390cb:	test   edx,0xe220cb30
  4390d1:	mov    al,0x3f
  4390d3:	in     al,0xd2
  4390d5:	cmp    BYTE PTR [ecx-0x1],dh
  4390d8:	mov    bh,0x69
  4390da:	pop    esp
  4390db:	and    esi,DWORD PTR [esi-0x1e202ffe]
  4390e1:	xchg   edi,eax
  4390e2:	cld    
  4390e3:	repnz xchg ebx,eax
  4390e5:	adc    dh,BYTE PTR ds:0x424444ae
  4390eb:	mov    bh,ah
  4390ed:	or     ecx,edx
  4390ef:	out    0x99,al
  4390f1:	add    esi,DWORD PTR [edx-0x1e]
  4390f4:	in     eax,0xc
  4390f6:	mov    cl,0x7f
  4390f8:	aam    0x59
  4390fa:	cmp    ebx,edx
  4390fc:	mov    ebx,0xea5b16c8
  439101:	out    0x61,eax
  439103:	stos   BYTE PTR es:[edi],al
  439104:	sbb    al,0x67
  439106:	cld    
  439107:	out    0x10,al
  439109:	mov    BYTE PTR [esi+0x7d],ch
  43910c:	xor    BYTE PTR [esi+0x2e16689e],al
  439112:	cdq    
  439113:	mov    ds:0x10146ef9,eax
  439118:	cmp    DWORD PTR [edi],ecx
  43911a:	jecxz  0x439172
  43911c:	loopne 0x4390ed
  43911e:	pop    eax
  43911f:	jb     0x4390bb
  439121:	push   0xc
  439123:	pop    esi
  439124:	icebp  
  439125:	scas   eax,DWORD PTR es:[edi]
  439126:	int3   
  439127:	xchg   edi,eax
  439128:	rol    esp,0x76
  43912b:	call   0x7701:0x44c48601
  439132:	inc    esp
  439133:	mov    ds:0x78e851ee,al
  439138:	out    0x48,al
  43913a:	jmp    0x40b6:0xe956283d
  439141:	xchg   esi,eax
  439142:	call   0xadc837eb
  439147:	nop
  439148:	push   cs
  439149:	dec    esi
  43914a:	dec    ebp
  43914b:	in     al,0x49
  43914d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43914e:	xchg   edi,eax
  43914f:	xor    esp,edi
  439151:	retf   0x9e64
  439154:	pop    eax
  439155:	mov    BYTE PTR [ebp+0x36],bh
  439158:	adc    BYTE PTR fs:[ebp+0x6393b3eb],bh
  43915f:	sub    esi,DWORD PTR gs:[esi]
  439162:	inc    eax
  439163:	hlt    
  439164:	mov    al,0x78
  439166:	inc    ecx
  439167:	cmp    DWORD PTR [esi+ebp*1-0x15],edi
  43916b:	repnz out dx,eax
  43916d:	shl    DWORD PTR [esi+0x19],cl
  439170:	mov    dh,0xa2
  439172:	jmp    0x760d:0x39b24a5b
  439179:	test   al,0xda
  43917b:	xor    al,0x5c
  43917d:	enter  0x413c,0x9f
  439181:	adc    BYTE PTR [edx-0x7a452e3f],bh
  439187:	cmc    
  439188:	ins    DWORD PTR es:[edi],dx
  439189:	mov    al,0x34
  43918b:	fwait
  43918c:	clc    
  43918d:	push   cs
  43918e:	push   esi
  43918f:	popa   
  439190:	cmp    DWORD PTR ds:0xfd1c197,0x80c34f87
  43919a:	and    eax,0xfa737629
  43919f:	in     eax,dx
  4391a0:	(bad)  
  4391a1:	xchg   ebp,eax
  4391a2:	push   ss
  4391a3:	xchg   ebx,eax
  4391a4:	test   al,0x6f
  4391a6:	mov    ch,0x57
  4391a8:	dec    edx
  4391a9:	test   eax,0xbb94f30c
  4391ae:	pop    ecx
  4391af:	mov    DWORD PTR [ebx+esi*2+0x79],esp
  4391b3:	and    BYTE PTR [eax+0x4bee56b9],bl
  4391b9:	xchg   DWORD PTR [ecx],ebx
  4391bb:	or     dh,BYTE PTR [ebx-0x1d34c721]
  4391c1:	jp     0x439220
  4391c3:	in     eax,dx
  4391c4:	into   
  4391c5:	ror    DWORD PTR [edi-0x72],1
  4391c8:	cmc    
  4391c9:	add    ecx,DWORD PTR [esi-0x6c8cb46d]
  4391cf:	jg     0x4391ba
  4391d1:	jmp    0x7d2c4ac3
  4391d6:	and    DWORD PTR [esi-0x5cbe89ca],ebp
  4391dc:	ja     0x43921c
  4391de:	jb     0x43920f
  4391e0:	shl    DWORD PTR [esi],1
  4391e2:	sbb    eax,0x8f7e036
  4391e7:	jmp    0x2745:0x5b4659d0
  4391ee:	test   DWORD PTR [esi],0xb97efa2
  4391f4:	push   ebx
  4391f5:	fcomp  DWORD PTR [ebx+0x15]
  4391f8:	push   ebp
  4391f9:	xchg   ebp,eax
  4391fa:	fist   DWORD PTR [ebx+0x46]
  4391fd:	push   edi
  4391fe:	jbe    0x439273
  439200:	mov    ah,0xf6
  439202:	pop    ecx
  439203:	cmp    al,0x10
  439205:	ffree  st(6)
  439207:	mov    eax,0x46622549
  43920c:	mov    BYTE PTR ss:[ecx-0x38],cl
  439210:	aaa    
  439211:	lods   al,BYTE PTR ds:[esi]
  439212:	div    BYTE PTR [ecx+0x23006283]
  439218:	dec    ecx
  439219:	mov    dl,0x6a
  43921b:	push   eax
  43921c:	add    BYTE PTR [edi+ebp*8-0x340334b8],0x49
  439224:	adc    edx,DWORD PTR [edx]
  439226:	sbb    eax,0x4521584a
  43922b:	mov    cs,WORD PTR [ebp+0x8aa7489]
  439231:	adc    eax,0x7a0f815f
  439236:	dec    ecx
  439237:	ret    
  439238:	inc    ecx
  439239:	out    dx,eax
  43923a:	pop    dx
  43923c:	(bad)  
  43923d:	adc    eax,0x681ce738
  439242:	inc    esp
  439243:	int    0xcf
  439245:	ret    0x5f49
  439248:	icebp  
  439249:	shl    BYTE PTR [edx-0x5fc83c41],1
  43924f:	ficom  DWORD PTR [ebp+eax*2-0x5a99306c]
  439256:	popa   
  439257:	push   esi
  439258:	inc    ecx
  439259:	pop    eax
  43925a:	push   ecx
  43925b:	scas   al,BYTE PTR es:[edi]
  43925c:	push   cs
  43925d:	or     dl,BYTE PTR [edx+0x1c]
  439260:	icebp  
  439261:	and    DWORD PTR [edx],0xbc1b4ca2
  439267:	repnz ror DWORD PTR [eax],1
  43926a:	sub    al,0x6
  43926c:	push   0x6d
  43926e:	pusha  
  43926f:	xor    BYTE PTR [ecx+0x5d],0xd8
  439273:	ins    DWORD PTR es:[edi],dx
  439274:	cdq    
  439275:	neg    BYTE PTR [eax+0x6a0a7da6]
  43927b:	(bad)  [edx-0x1a]
  43927e:	add    al,0x1b
  439280:	xor    esp,eax
  439282:	stc    
  439283:	adc    eax,0x7e207edb
  439288:	popf   
  439289:	icebp  
  43928a:	adc    al,0x13
  43928c:	and    esi,DWORD PTR [ecx-0x70]
  43928f:	pop    edx
  439290:	mov    WORD PTR [edx],ss
  439292:	sub    al,BYTE PTR [eax+ebx*2+0x21]
  439296:	std    
  439297:	mov    ds:0xcff224fc,eax
  43929c:	ss ja  0x439275
  43929f:	push   cs
  4392a0:	pop    es
  4392a1:	leave  
  4392a2:	adc    eax,DWORD PTR gs:[eax]
  4392a5:	iret   
  4392a6:	(bad)  
  4392a7:	rcl    BYTE PTR [esi],1
  4392a9:	mov    ds:0x29777210,al
  4392ae:	jnp    0x4392ce
  4392b0:	sub    eax,0x1c0b8662
  4392b5:	out    dx,eax
  4392b6:	in     al,dx
  4392b7:	push   edx
  4392b8:	mov    ebx,0x6b327fdc
  4392bd:	sub    al,0x2f
  4392bf:	jae    0x4392f1
  4392c1:	xchg   edi,eax
  4392c2:	sub    edi,ecx
  4392c4:	lods   al,BYTE PTR ds:[esi]
  4392c5:	add    cl,BYTE PTR [ebx+esi*2-0xf]
  4392c9:	inc    edi
  4392ca:	into   
  4392cb:	sub    eax,0x97d4273b
  4392d0:	mov    ds:0x80162094,al
  4392d5:	mov    ebp,0x94370f52
  4392da:	pop    ebp
  4392db:	and    DWORD PTR [edx],0xffffffbd
  4392de:	jmp    0x43933c
  4392e0:	lea    eax,[ebx-0x16]
  4392e3:	inc    esi
  4392e4:	push   edx
  4392e5:	or     BYTE PTR [edi+0x325d8fe5],0x3f
  4392ec:	imul   ebp,DWORD PTR [ecx+0x5be063cb],0x37
  4392f3:	mov    ecx,0x5bd1fc76
  4392f8:	push   0x64bf8484
  4392fd:	jle    0x4392ed
  4392ff:	and    DWORD PTR [edx+0x261a47f9],edx
  439305:	xor    edi,DWORD PTR [edx+0x1fc6d3de]
  43930b:	jp     0x4392ab
  43930d:	or     eax,DWORD PTR [edx-0x2554fda1]
  439313:	adc    al,0x1b
  439315:	stos   BYTE PTR es:[edi],al
  439316:	gs pop ds
  439318:	int3   
  439319:	bound  esi,QWORD PTR [ebp+0x603bd396]
  43931f:	xchg   BYTE PTR [eax+0x22],ah
  439322:	push   edx
  439323:	fsubr  DWORD PTR [edx]
  439325:	add    eax,0xb6ce8d21
  43932a:	mov    ah,0x7d
  43932c:	dec    esp
  43932d:	(bad)  
  43932e:	test   bh,0xa0
  439331:	jl     0x43934f
  439333:	imul   esp,DWORD PTR [esi-0x11],0xffffff9c
  439337:	sbb    edx,DWORD PTR [ebx]
  439339:	xor    esi,DWORD PTR [edi-0x5a939f5b]
  43933f:	retf   0x4529
  439342:	iret   
  439343:	fidiv  WORD PTR [edi]
  439345:	jne    0x4392f0
  439347:	mov    eax,0x9f23aa9e
  43934c:	inc    esp
  43934d:	xor    edx,DWORD PTR [ecx]
  43934f:	and    eax,DWORD PTR [esi]
  439351:	jg     0x439387
  439353:	dec    ecx
  439354:	jg     0x439356
  439356:	push   eax
  439357:	xor    esp,DWORD PTR [esi+0x528f7115]
  43935d:	shl    DWORD PTR [edx],cl
  43935f:	mov    al,ds:0xc53b85d2
  439364:	lea    esp,[ebx]
  439366:	test   BYTE PTR [edx+0x32],dl
  439369:	adc    esp,esi
  43936b:	dec    ecx
  43936c:	adc    eax,0x2c9c9f8c
  439371:	int3   
  439372:	repz out 0xcf,al
  439375:	sub    esp,DWORD PTR [edx]
  439377:	xchg   edi,eax
  439378:	jmp    0x439350
  43937a:	sbb    al,0x3c
  43937c:	lock inc esp
  43937e:	(bad)  
  43937f:	dec    ebx
  439380:	and    ecx,DWORD PTR [edi]
  439382:	mov    esi,0xd57791e0
  439387:	xlat   BYTE PTR ds:[ebx]
  439388:	retf   
  439389:	jecxz  0x43938d
  43938b:	ja     0x439397
  43938d:	adc    ah,dl
  43938f:	or     eax,0x1b9bae85
  439394:	and    DWORD PTR [ecx-0x17],ecx
  439397:	rol    DWORD PTR [esi+edi*1],cl
  43939a:	sbb    eax,0xe138d2f
  43939f:	adc    esp,DWORD PTR [edi+0x7c03d059]
  4393a5:	mov    ebp,0x8055babd
  4393aa:	frstor [edx-0x65]
  4393ad:	fadd   QWORD PTR [esi+0x2e]
  4393b0:	imul   ebp,edx,0xffffff9e
  4393b3:	sbb    BYTE PTR cs:[edi+0x75],bl
  4393b7:	fdiv   QWORD PTR ds:0x8edfcd94
  4393bd:	aad    0xff
  4393bf:	cmp    al,0x3e
  4393c1:	pop    eax
  4393c2:	ds imul ebp,ebp,0x3c
  4393c6:	mul    dh
  4393c8:	push   ss
  4393c9:	out    0x34,al
  4393cb:	mov    al,ds:0xa487109c
  4393d0:	not    DWORD PTR [edi]
  4393d2:	sbb    al,al
  4393d4:	jmp    0x43943f
  4393d6:	(bad)  
  4393d7:	clc    
  4393d8:	inc    ebp
  4393d9:	ins    BYTE PTR es:[edi],dx
  4393da:	mov    ebp,0x73d62b17
  4393df:	jmp    0x43945c
  4393e1:	fs inc ecx
  4393e3:	xor    DWORD PTR [esp+ebp*2-0x1f39c23e],esi
  4393ea:	fabs   
  4393ec:	mov    cl,0x84
  4393ee:	ficomp WORD PTR [ebp+0x60560989]
  4393f4:	enter  0x2ea0,0xc4
  4393f8:	fwait
  4393f9:	jae    0x439435
  4393fb:	dec    ecx
  4393fc:	add    edi,edx
  4393fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4393ff:	rol    DWORD PTR [edx-0x78283967],0x79
  439406:	cli    
  439407:	mov    edx,0x5bdfd2ed
  43940c:	sub    ebx,DWORD PTR [edx+0x45]
  43940f:	cmp    ah,BYTE PTR [eax]
  439411:	(bad)  
  439412:	les    esp,FWORD PTR ds:0x2b24cf05
  439418:	fstp   DWORD PTR [esi-0x14]
  43941b:	add    ch,cl
  43941d:	lods   al,BYTE PTR ds:[esi]
  43941e:	or     al,0x77
  439420:	rol    eax,1
  439422:	shl    BYTE PTR [eax-0x19c1817e],1
  439428:	cwde   
  439429:	in     al,0xbe
  43942b:	adc    eax,0xf6561a6a
  439430:	inc    esi
  439431:	xchg   DWORD PTR [esi],ecx
  439433:	(bad)  
  439434:	mov    dl,0x4c
  439436:	xor    eax,0xb4443d65
  43943b:	lds    edi,FWORD PTR [eax+0x27a7fddf]
  439441:	add    eax,0x4621e50b
  439446:	push   0x479500e9
  43944b:	xchg   edx,eax
  43944c:	fdivr  DWORD PTR [eax+eax*2]
  43944f:	xor    al,0xd
  439451:	sub    DWORD PTR [esi-0x4a6981c0],eax
  439457:	test   eax,0x2e172d94
  43945c:	test   eax,0x15ec231d
  439461:	test   eax,0x333dfec9
  439466:	add    BYTE PTR [ebx-0x35],0xd0
  43946a:	mov    ebp,0x2f499a5d
  43946f:	and    BYTE PTR [eax+0x5a],dl
  439472:	or     eax,0xdea1b7a8
  439477:	push   cs
  439478:	jge    0x4394cc
  43947a:	addr16 mov ds:0xcf6e,al
  43947e:	(bad)  
  43947f:	pop    ecx
  439480:	jl     0x4394bc
  439482:	pusha  
  439483:	pop    DWORD PTR [esi-0x553c02fb]
  439489:	jnp    0x43944c
  43948b:	mov    al,0xcd
  43948d:	add    esp,ecx
  43948f:	xor    esp,DWORD PTR ds:0xdd3705f7
  439495:	pop    eax
  439496:	les    esi,FWORD PTR [edi]
  439498:	or     ebp,DWORD PTR ds:0xcc79017c
  43949e:	jmp    0x4394de
  4394a0:	jns    0x4394ff
  4394a2:	xor    ecx,DWORD PTR [edi]
  4394a4:	sbb    bh,cl
  4394a6:	jnp    0x439456
  4394a8:	ret    
  4394a9:	(bad)  
  4394aa:	inc    ecx
  4394ab:	repnz xor ah,dl
  4394ae:	and    BYTE PTR [ebp-0x73d69d19],ah
  4394b4:	(bad)  
  4394b5:	inc    edi
  4394b6:	std    
  4394b7:	jae    0x439456
  4394b9:	sbb    edx,0x3d
  4394bc:	adc    al,0x19
  4394be:	dec    ebp
  4394bf:	add    dh,BYTE PTR [edi]
  4394c1:	inc    esi
  4394c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4394c3:	pop    ecx
  4394c4:	(bad)  
  4394c5:	in     eax,dx
  4394c6:	fistp  QWORD PTR [eax]
  4394c8:	or     al,0xd5
  4394ca:	sub    BYTE PTR [ebp+0x52739692],dh
  4394d0:	pop    edx
  4394d1:	test   BYTE PTR ds:0xb1546d,ah
  4394d7:	push   0xc1645ce1
  4394dc:	mov    cl,0x35
  4394de:	add    DWORD PTR [eax+0x29],esp
  4394e1:	xchg   DWORD PTR [edi],edi
  4394e3:	scas   al,BYTE PTR es:[edi]
  4394e4:	adc    eax,0x21c71b78
  4394e9:	fadd   DWORD PTR [ebx+0x7644c1a2]
  4394ef:	mov    dl,0x31
  4394f1:	cmp    dh,BYTE PTR [eax-0x4]
  4394f4:	or     eax,0xffffffe2
  4394f7:	mov    dh,0x24
  4394f9:	arpl   WORD PTR [esi-0x3c4c0610],dx
  4394ff:	xor    ebx,DWORD PTR [edi]
  439501:	ret    
  439502:	xchg   BYTE PTR [edx-0x42109a0b],cl
  439508:	push   0xc522610f
  43950d:	sbb    DWORD PTR [esi+0x728d3f5f],esi
  439513:	popa   
  439514:	xchg   ecx,eax
  439515:	and    al,0x1e
  439517:	mov    bl,0x2
  439519:	xchg   ebx,eax
  43951a:	test   eax,0x5e2b924c
  43951f:	mov    cl,0x6a
  439521:	adc    DWORD PTR [ebx+0x3c],0xffffff8c
  439525:	cmovb  edx,esp
  439528:	call   0xca4b1fc2
  43952d:	std    
  43952e:	or     edx,DWORD PTR [esi]
  439530:	push   esp
  439531:	adc    ebp,edi
  439533:	call   0x87aa6a5
  439538:	pminub mm0,QWORD PTR [ebx-0x343b32a2]
  43953f:	push   es
  439540:	add    esp,edi
  439542:	mov    edi,0x6bcfd6f1
  439547:	mov    ch,0xfd
  439549:	or     al,0xa
  43954b:	std    
  43954c:	sbb    al,0x3a
  43954e:	push   ebp
  43954f:	loop   0x4395a8
  439551:	nop
  439552:	stos   BYTE PTR es:[edi],al
  439553:	fldenv [ebp-0x1e]
  439556:	xchg   ebp,eax
  439557:	mov    ebp,0xfbe70c9c
  43955c:	jg     0x4395a3
  43955e:	sub    ebp,DWORD PTR [ebx+eiz*1-0x647cf269]
  439565:	sbb    ch,BYTE PTR [esi-0x69d85d8e]
  43956b:	mov    edx,0x3ca086
  439570:	fistp  QWORD PTR [eax]
  439572:	fwait
  439573:	sub    DWORD PTR [edx-0x23bacb01],0xfffffff6
  43957a:	add    al,0x4e
  43957c:	pop    ebp
  43957d:	imul   edx,DWORD PTR [esi-0x32f37fd4],0x3ee67ec9
  439587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439588:	push   cs
  439589:	or     ebx,ebx
  43958b:	xor    eax,0xe1417540
  439590:	inc    ebp
  439591:	fcmovbe st,st(7)
  439593:	add    ecx,DWORD PTR [edi+0x5]
  439596:	jmp    DWORD PTR [edi-0x32d3bd0d]
  43959c:	mov    ah,bl
  43959e:	mov    ds:0xbae4b80c,eax
  4395a3:	out    dx,al
  4395a4:	call   0x95fb:0xccd5fe48
  4395ab:	jne    0x4395f1
  4395ad:	cwde   
  4395ae:	mov    ds:0xa682a760,al
  4395b3:	shr    BYTE PTR [esi],cl
  4395b5:	or     al,0xd3
  4395b7:	call   0xdd23:0x644e52c3
  4395be:	js     0x43957a
  4395c0:	xchg   esp,eax
  4395c1:	mov    ecx,0x29f82fc5
  4395c6:	loop   0x43954c
  4395c8:	mov    ds:0x952fa559,al
  4395cd:	mov    bh,0xa7
  4395cf:	stos   DWORD PTR es:[edi],eax
  4395d0:	pop    eax
  4395d1:	push   ebp
  4395d2:	xor    dh,BYTE PTR [eax-0x4d]
  4395d5:	test   al,0x68
  4395d7:	js     0x43959c
  4395d9:	ins    BYTE PTR es:[edi],dx
  4395da:	dec    ebp
  4395db:	inc    edi
  4395dc:	fnstcw WORD PTR [esi+esi*4+0x44781340]
  4395e3:	pop    edi
  4395e4:	cwde   
  4395e5:	mov    gs,WORD PTR [ecx-0x68]
  4395e8:	in     al,dx
  4395e9:	in     al,0x89
  4395eb:	mov    ch,0xeb
  4395ed:	xor    DWORD PTR [ecx],ecx
  4395ef:	xlat   BYTE PTR ds:[ebx]
  4395f0:	repz pop edi
  4395f2:	sbb    BYTE PTR [eax-0x31a2aa43],dl
  4395f8:	push   esp
  4395f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4395fa:	jmp    0xb80:0x72690920
  439601:	fcmove st,st(3)
  439603:	shl    BYTE PTR [ebp-0x109f78e9],cl
  439609:	dec    ecx
  43960a:	je     0x439610
  43960c:	mov    esi,0x874da86a
  439611:	es xchg edx,eax
  439613:	mov    esi,0xd62f311b
  439618:	retf   
  439619:	mov    eax,0xed9ebe0e
  43961e:	push   cs
  43961f:	dec    edx
  439620:	fcom   DWORD PTR ds:0x742bcb06
  439626:	ins    DWORD PTR es:[edi],dx
  439627:	test   BYTE PTR [ebx+0x38ada4be],dl
  43962d:	push   ds
  43962e:	loope  0x439679
  439630:	inc    edx
  439631:	repnz test eax,0x5eccdd54
  439637:	sti    
  439638:	jg     0x4396b7
  43963a:	ja     0x439657
  43963c:	pop    ebp
  43963d:	pop    edx
  43963e:	mov    DWORD PTR [edi+0x67a74258],edx
  439644:	lea    ecx,[esi+0x36]
  439647:	data16 adc al,BYTE PTR [esi]
  43964a:	cmp    BYTE PTR [eax],dh
  43964c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43964d:	push   edi
  43964e:	in     eax,dx
  43964f:	jno    0x43961f
  439651:	lock xchg ebp,eax
  439653:	popa   
  439654:	icebp  
  439655:	shl    ecx,0xb4
  439658:	mov    esi,0x13b419c8
  43965d:	int    0xd1
  43965f:	xchg   esi,eax
  439660:	mov    dh,0x40
  439662:	ficom  WORD PTR [eax+0x21]
  439665:	imul   ecx,DWORD PTR [edi+ebp*2-0x20062bd0],0x4a
  43966d:	push   esp
  43966e:	fidiv  DWORD PTR [eax+eiz*4+0x39deb131]
  439675:	xchg   edx,eax
  439676:	and    ch,al
  439678:	push   0x181aa123
  43967d:	inc    esi
  43967e:	xchg   edx,eax
  43967f:	icebp  
  439680:	jl     0x43964a
  439682:	inc    ecx
  439683:	add    esi,DWORD PTR [ecx]
  439685:	stc    
  439686:	push   DWORD PTR [ecx]
  439688:	xor    edx,DWORD PTR [edi-0x4d]
  43968b:	xor    BYTE PTR [edx],cl
  43968d:	jnp    0x439643
  43968f:	bound  ecx,QWORD PTR [eax-0x65]
  439692:	sbb    DWORD PTR [esi-0x5],eax
  439695:	push   eax
  439696:	sub    ecx,eax
  439698:	pop    cx
  43969a:	loop   0x4396ce
  43969c:	or     al,BYTE PTR [edx-0x1a]
  43969f:	nop
  4396a0:	dec    edi
  4396a1:	shl    BYTE PTR [edi],1
  4396a3:	mov    al,ds:0xdb245d15
  4396a8:	push   0x810fd02a
  4396ad:	and    BYTE PTR [ebx+ebp*2+0x62f97c69],0x53
  4396b5:	es and edi,eax
  4396b8:	sub    BYTE PTR [eax],dl
  4396ba:	inc    edi
  4396bb:	pop    esi
  4396bc:	outs   dx,DWORD PTR ds:[esi]
  4396bd:	hlt    
  4396be:	add    al,0xbc
  4396c0:	cmp    BYTE PTR [ebp-0x64f65da3],0xa8
  4396c7:	pop    ebp
  4396c8:	push   eax
  4396c9:	adc    ah,BYTE PTR [edi+0x6a24e51c]
  4396cf:	mov    esi,DWORD PTR [ebp+0x690608d4]
  4396d5:	sub    BYTE PTR [ebx],bh
  4396d7:	jb     0x4396f9
  4396d9:	gs mov bh,0xbb
  4396dc:	mov    edx,DWORD PTR [ecx]
  4396de:	xor    edx,ecx
  4396e0:	pminsw mm7,QWORD PTR [esi]
  4396e3:	mov    edx,0x5556fb36
  4396e8:	fs lahf 
  4396ea:	lock loop 0x439721
  4396ed:	and    ebp,DWORD PTR [edi+0x5055fcc1]
  4396f3:	imul   eax,esi,0x7e43125c
  4396f9:	xchg   ecx,eax
  4396fa:	push   ss
  4396fb:	mov    edi,esi
  4396fd:	xor    eax,0x9b6cce7f
  439702:	jl     0x4396af
  439704:	sbb    DWORD PTR [ebp+eax*2+0x1e3b5ced],0xffffffdc
  43970c:	jp     0x4396ad
  43970e:	leave  
  43970f:	cs pop ss
  439711:	fs dec esp
  439713:	sub    DWORD PTR [edi-0x56],esi
  439716:	xchg   ecx,eax
  439717:	push   ebp
  439718:	push   esi
  439719:	push   eax
  43971a:	dec    eax
  43971b:	loopne 0x4396f1
  43971d:	out    0xb1,eax
  43971f:	bound  edi,QWORD PTR [ebx+0x72]
  439722:	sub    dh,BYTE PTR [esi-0x3a]
  439725:	imul   ebp,ecx,0xab815668
  43972b:	in     eax,dx
  43972c:	test   eax,0xe4b8ed8a
  439731:	cmp    ch,BYTE PTR [ebp-0x54231ec9]
  439737:	mov    dh,0xba
  439739:	pop    ebp
  43973a:	pmulhuw mm4,QWORD PTR [ecx-0x39e0c6d1]
  439741:	fwait
  439742:	jg     0x43973b
  439744:	cld    
  439745:	stc    
  439746:	jle    0x439794
  439748:	adc    eax,0xceaf80bd
  43974d:	ins    BYTE PTR es:[edi],dx
  43974e:	scas   eax,DWORD PTR es:[edi]
  43974f:	cmp    al,0x5f
  439751:	jmp    0xf952725
  439756:	jmp    0x1c45e887
  43975b:	imul   ebp,DWORD PTR [esi+0x7c],0xffffff8c
  43975f:	mov    ebx,0x70fd2300
  439764:	push   cs
  439765:	jnp    0x4397e1
  439767:	sti    
  439768:	push   0xc6c63084
  43976d:	adc    al,0x13
  43976f:	nop
  439770:	xchg   esp,eax
  439771:	xor    ecx,ebp
  439773:	frstor [edi+ebp*8-0x7a]
  439777:	sub    al,0x24
  439779:	sbb    cl,0xa8
  43977c:	xchg   ebx,eax
  43977d:	pop    eax
  43977e:	jmp    0x8ceee067
  439783:	dec    edi
  439784:	fldcw  WORD PTR ds:[ebp+0x190a630b]
  43978b:	xor    DWORD PTR fs:[edx],0xca279aac
  439792:	push   cs
  439793:	push   0xd6002851
  439798:	push   cs
  439799:	pop    es
  43979a:	ja     0x4397a6
  43979c:	in     eax,0x95
  43979e:	call   0x63fa14ec
  4397a3:	sub    al,0x52
  4397a5:	add    DWORD PTR [ebx-0x4cb0bc9],esp
  4397ab:	xchg   edx,eax
  4397ac:	ficomp DWORD PTR [ebx+0x2c85697f]
  4397b2:	(bad)  
  4397b4:	cs adc eax,0x267dc9a
  4397ba:	scas   eax,DWORD PTR es:[edi]
  4397bb:	ret    0x3dd1
  4397be:	adc    eax,0x256382ac
  4397c3:	mov    ebp,0xccff48e3
  4397c8:	stc    
  4397c9:	(bad)  
  4397ca:	or     eax,0xc691a18c
  4397cf:	sbb    cl,BYTE PTR [esi]
  4397d1:	adc    ecx,edi
  4397d3:	retf   
  4397d4:	jmp    0x13b31981
  4397d9:	pushf  
  4397da:	scas   eax,DWORD PTR es:[edi]
  4397db:	jp     0x43985b
  4397dd:	hlt    
  4397de:	cmp    DWORD PTR [ebx+ebp*2-0x43],0x60637e47
  4397e6:	jns    0x439816
  4397e8:	stc    
  4397e9:	pop    edi
  4397ea:	(bad)  
  4397eb:	scas   al,BYTE PTR es:[edi]
  4397ec:	add    eax,0xf7c61a83
  4397f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4397f2:	pop    ds
  4397f3:	imul   ecx,DWORD PTR [ebp-0x30ae8f85],0xab7611f9
  4397fd:	icebp  
  4397fe:	ja     0x4397a2
  439800:	aad    0x41
  439802:	(bad)  
  439804:	shr    DWORD PTR [edx-0x1013fd07],0x3f
  43980b:	lock fadd QWORD PTR [eax-0x5]
  43980f:	dec    edi
  439810:	sahf   
  439811:	dec    edx
  439812:	popa   
  439813:	les    ebp,FWORD PTR [ebx]
  439815:	inc    ebp
  439816:	sub    al,0xfc
  439818:	scas   eax,DWORD PTR es:[edi]
  439819:	retf   0xcb5
  43981c:	mov    bh,0x25
  43981e:	fstp   TBYTE PTR [eax]
  439820:	arpl   WORD PTR [edi],si
  439822:	push   edi
  439823:	mov    DWORD PTR [edi-0x144ae591],esi
  439829:	test   ch,0xa9
  43982c:	mov    bl,0x5b
  43982e:	ja     0x4398a1
  439830:	inc    edi
  439831:	(bad)  
  439832:	xchg   ebp,eax
  439833:	fld    TBYTE PTR [esp+ecx*4-0x49]
  439837:	shl    DWORD PTR [ecx-0xd7c1472],cl
  43983d:	xor    ebp,esp
  43983f:	cmp    al,0xce
  439841:	push   esi
  439842:	outs   dx,BYTE PTR ds:[esi]
  439843:	das    
  439844:	xchg   ecx,eax
  439845:	jae    0x43983e
  439847:	mov    ch,0x6f
  439849:	adc    DWORD PTR [edi],edi
  43984b:	xor    BYTE PTR [ebp+0x9],ah
  43984e:	and    BYTE PTR [ebx+eiz*1+0x1d],dl
  439852:	jl     0x439844
  439854:	jecxz  0x4397f0
  439856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439857:	dec    ebp
  439858:	clc    
  439859:	out    dx,eax
  43985a:	mov    edi,0x605d7281
  43985f:	jae    0x4398b1
  439861:	and    eax,0x7fd19c85
  439866:	fnstsw WORD PTR [ebp-0x3b]
  439869:	mov    eax,ds:0xbed48abc
  43986e:	pop    edi
  43986f:	and    BYTE PTR [esi+esi*1-0x6f],bh
  439873:	sbb    bh,al
  439875:	xchg   ebx,eax
  439876:	mov    ds:0x8005ce2d,eax
  43987b:	adc    DWORD PTR [edi+0x912a95d],edx
  439881:	(bad)  
  439882:	pop    DWORD PTR [ebx+0x552e5bb]
  439888:	mov    ah,0x53
  43988a:	scas   al,BYTE PTR es:[edi]
  43988b:	and    eax,0x7ad58116
  439890:	aam    0xea
  439892:	or     edx,DWORD PTR [edi+0x2e]
  439895:	xchg   ebp,eax
  439896:	fwait
  439897:	or     ch,al
  439899:	push   ds
  43989a:	arpl   WORD PTR [eax],bp
  43989c:	mov    ds:0x17eb4398,al
  4398a1:	and    esi,eax
  4398a3:	sbb    al,0x39
  4398a5:	pop    ebx
  4398a6:	mov    sp,0x8422
  4398aa:	pop    ebp
  4398ab:	fnstcw WORD PTR [ebx]
  4398ad:	loopne 0x4398ba
  4398af:	sti    
  4398b0:	ss push esp
  4398b2:	mov    ch,BYTE PTR ds:[ecx]
  4398b5:	xchg   ecx,eax
  4398b6:	push   edx
  4398b7:	adc    BYTE PTR [ebp-0x56],bl
  4398ba:	ror    BYTE PTR [ecx+edi*1-0x52],0xa7
  4398bf:	pop    ebp
  4398c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4398c1:	test   al,cl
  4398c3:	lock push esi
  4398c5:	cmp    DWORD PTR [esi+esi*1],ebx
  4398c8:	mov    WORD PTR [ecx-0x6b],fs
  4398cb:	stos   DWORD PTR es:[edi],eax
  4398cc:	adc    eax,0x190c2e79
  4398d1:	int3   
  4398d2:	dec    esi
  4398d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4398d4:	jns    0x4398bb
  4398d6:	jecxz  0x439885
  4398d8:	jmp    0x9b29:0x39d18cff
  4398df:	and    dh,al
  4398e1:	sbb    eax,DWORD PTR [eax]
  4398e3:	sub    edx,ecx
  4398e5:	sub    DWORD PTR [ecx-0x20641ccb],ebp
  4398eb:	retf   0x75
  4398ee:	rcl    ch,cl
  4398f0:	ja     0x43996b
  4398f2:	xor    DWORD PTR [edx],esp
  4398f4:	scas   al,BYTE PTR es:[edi]
  4398f5:	fdivr  QWORD PTR [eax-0x20]
  4398f8:	and    esp,edx
  4398fa:	ja     0x43988b
  4398fc:	ins    BYTE PTR es:[edi],dx
  4398fd:	xlat   BYTE PTR ds:[ebx]
  4398fe:	ret    0x7ce4
  439901:	cmp    al,0xe
  439903:	mov    eax,0xab55c1d1
  439908:	sti    
  439909:	int3   
  43990a:	adc    ch,BYTE PTR [edi-0x5a9195a4]
  439910:	mov    edx,0x77612ed8
  439915:	and    eax,0x1b5fdffa
  43991a:	lods   eax,DWORD PTR ds:[esi]
  43991b:	and    DWORD PTR [esi-0x5b54670f],edx
  439921:	je     0x439958
  439923:	imul   edi,DWORD PTR [eax+0x6b],0x5
  439927:	xor    bh,bh
  439929:	call   0x2b08:0x7d275819
  439930:	ins    DWORD PTR es:[edi],dx
  439931:	inc    BYTE PTR [edi+edx*4-0x3b]
  439935:	push   ebx
  439936:	mov    dh,0xd4
  439938:	push   esp
  439939:	loopne 0x439990
  43993b:	mov    DWORD PTR [esi+0x688856f5],ecx
  439941:	xor    ecx,ebp
  439943:	xchg   ecx,eax
  439944:	pop    ebp
  439945:	loopne 0x439982
  439947:	call   0x3fdb:0x5f1975af
  43994e:	shl    al,0xa6
  439951:	fmul   DWORD PTR [ebx]
  439953:	push   ss
  439954:	sbb    DWORD PTR [edi],eax
  439956:	iret   
  439957:	dec    esi
  439958:	adc    DWORD PTR [esi],esp
  43995a:	or     al,0xc2
  43995c:	push   ds
  43995d:	out    dx,al
  43995e:	jnp    0x439906
  439960:	inc    ecx
  439961:	retf   
  439962:	in     al,dx
  439963:	or     bl,ch
  439965:	dec    eax
  439966:	xchg   DWORD PTR [eax-0x1a759af2],edi
  43996c:	pop    ebp
  43996d:	out    0x14,al
  43996f:	push   es
  439970:	ror    DWORD PTR [edx+ebx*8-0x435fb1da],cl
  439977:	mov    bl,0xe7
  439979:	fcom   QWORD PTR [ecx+0x3b6789ae]
  43997f:	outs   dx,DWORD PTR ds:[esi]
  439980:	mov    ebp,0xf16c1158
  439985:	inc    edi
  439986:	fcomip st,st(3)
  439988:	add    BYTE PTR [eax+0x6b7f0474],0xa3
  43998f:	out    dx,eax
  439990:	nop
  439991:	daa    
  439992:	(bad)  
  439993:	cmp    dh,BYTE PTR [edx]
  439995:	mov    fs,WORD PTR [esi+0x71]
  439998:	mov    DWORD PTR gs:[edi-0x1a0cba50],ebx
  43999f:	pop    edi
  4399a0:	push   edi
  4399a1:	ret    0x7bfe
  4399a4:	push   0x7c
  4399a6:	call   0xf81a:0x20617e99
  4399ad:	rcl    WORD PTR [ebp-0x1d],0xf
  4399b2:	in     eax,0xc8
  4399b4:	sbb    al,0xa
  4399b6:	mov    ds:0xaca50b92,al
  4399bb:	add    al,BYTE PTR [edx]
  4399bd:	test   eax,0x40b2245d
  4399c2:	fisub  DWORD PTR [ecx-0x6ab54da9]
  4399c8:	mov    ebp,esp
  4399ca:	inc    esi
  4399cb:	stos   BYTE PTR es:[edi],al
  4399cc:	pop    ss
  4399cd:	mov    ds:0xea5d7f2c,al
  4399d2:	xor    al,0x74
  4399d4:	sub    DWORD PTR [ebx+edx*1-0x6de14333],ebp
  4399db:	inc    edx
  4399dc:	adc    cl,BYTE PTR [esi+esi*1]
  4399df:	loope  0x439a24
  4399e1:	inc    BYTE PTR [ebp-0x49]
  4399e4:	sbb    dl,BYTE PTR ds:0x1d2e7d5c
  4399ea:	dec    ebp
  4399eb:	shl    BYTE PTR [eax+0xdd1f36c],cl
  4399f1:	sub    ebp,DWORD PTR [ecx+0x389625a6]
  4399f7:	cwde   
  4399f8:	jg     0x439a01
  4399fa:	pop    edx
  4399fb:	je     0x439993
  4399fd:	sub    eax,0x1d7ef966
  439a02:	(bad)  
  439a03:	push   ss
  439a04:	iret   
  439a05:	std    
  439a06:	dec    edx
  439a07:	xchg   edi,eax
  439a08:	xor    BYTE PTR [ebx],0xaf
  439a0b:	or     al,bh
  439a0d:	(bad)  
  439a0e:	jne    0x4399ae
  439a10:	pop    ss
  439a11:	xlat   BYTE PTR ds:[ebx]
  439a12:	aas    
  439a13:	push   esi
  439a14:	ret    0x5ddc
  439a17:	xor    bl,cl
  439a19:	xor    ebp,DWORD PTR [ecx-0x32077eee]
  439a1f:	cdq    
  439a20:	frstor [ecx+0x7e9e68be]
  439a26:	mov    DWORD PTR [edi-0x2c],ebp
  439a29:	push   esp
  439a2a:	add    eax,0x290f11cc
  439a2f:	dec    edi
  439a30:	out    0x9c,al
  439a32:	hlt    
  439a33:	stos   DWORD PTR es:[edi],eax
  439a34:	in     eax,0x3e
  439a36:	dec    edx
  439a37:	mov    ebx,0xb7ac08ce
  439a3c:	jge    0x439aa2
  439a3e:	jle    0x439a9f
  439a40:	pusha  
  439a41:	sbb    DWORD PTR [ebx-0x7a84bce7],esp
  439a47:	pop    esp
  439a48:	pop    ebx
  439a49:	add    bh,BYTE PTR [edi+0x57e72133]
  439a4f:	cmp    DWORD PTR [ebx-0x6661b16e],ecx
  439a55:	mov    edi,0xf488d626
  439a5a:	aas    
  439a5b:	outs   dx,DWORD PTR ds:[esi]
  439a5c:	pop    ebp
  439a5d:	jmp    0x3d09a64e
  439a62:	xchg   edi,eax
  439a63:	jmp    0x6159cf09
  439a68:	int3   
  439a69:	sbb    DWORD PTR [edx],edi
  439a6b:	aam    0x2e
  439a6d:	cmp    edx,DWORD PTR [esi-0x72]
  439a70:	push   esi
  439a71:	aas    
  439a72:	into   
  439a73:	repz dec ebp
  439a75:	and    BYTE PTR [ecx-0x6b],al
  439a78:	cmp    BYTE PTR [ecx],dl
  439a7a:	loope  0x439a82
  439a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439a7d:	and    DWORD PTR [esi+0x17],ebx
  439a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439a81:	jp     0x439aef
  439a83:	xchg   edi,eax
  439a84:	mov    ah,0x46
  439a86:	pop    ds
  439a87:	fdivr  QWORD PTR [ebx]
  439a89:	fnstenv ds:0xc1bf9359
  439a8f:	popa   
  439a90:	aam    0x27
  439a92:	fwait
  439a93:	xchg   ecx,eax
  439a94:	mov    DWORD PTR [esi+0x3362a4e4],edx
  439a9a:	dec    esi
  439a9b:	sbb    al,dh
  439a9d:	sar    DWORD PTR [esi+0x2ba104c7],0x9a
  439aa4:	ds sub esi,eax
  439aa7:	ret    
  439aa8:	push   es
  439aa9:	add    bl,dh
  439aab:	inc    ebp
  439aac:	aas    
  439aad:	pop    edi
  439aae:	enter  0xa958,0x11
  439ab2:	sar    ch,0xa5
  439ab5:	mov    ecx,0xd8c8e4db
  439aba:	or     bl,BYTE PTR [esi+0x165e1ac3]
  439ac0:	call   0x92cc6879
  439ac5:	pop    ss
  439ac6:	addr16 xor eax,0x74dcfecb
  439acc:	retf   0xb7cd
  439acf:	xchg   edx,eax
  439ad0:	shl    BYTE PTR [edx+eax*4+0x77],1
  439ad4:	outs   dx,DWORD PTR ds:[esi]
  439ad5:	dec    edi
  439ad6:	(bad)  
  439ad7:	jo     0x439a85
  439ad9:	lods   eax,DWORD PTR ds:[esi]
  439ada:	daa    
  439adb:	pushf  
  439adc:	and    esp,ebp
  439ade:	xchg   esp,esi
  439ae0:	mov    ch,0xee
  439ae2:	ret    
  439ae3:	jge    0x439a67
  439ae5:	test   al,0xf2
  439ae7:	mov    esp,DWORD PTR ds:0x5cadc637
  439aed:	or     edi,eax
  439aef:	les    esi,FWORD PTR [esi]
  439af1:	dec    ebp
  439af2:	retf   
  439af3:	or     BYTE PTR [edi],al
  439af5:	mov    ds:0xf6d1ce85,al
  439afa:	push   ebx
  439afb:	enter  0xacac,0xdc
  439aff:	mov    ebp,0x42481da0
  439b04:	call   0xf0bfdeea
  439b09:	test   BYTE PTR ds:0x8cff2cfd,dh
  439b0f:	push   es
  439b10:	pop    ss
  439b11:	add    ebp,edx
  439b13:	and    cl,BYTE PTR [ecx-0x69]
  439b16:	push   0xffffffe3
  439b18:	push   ds
  439b19:	fwait
  439b1a:	scas   al,BYTE PTR es:[edi]
  439b1b:	(bad)  
  439b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439b1d:	jecxz  0x439b58
  439b1f:	push   esi
  439b20:	or     BYTE PTR [esp+edi*1+0x58],ah
  439b24:	stc    
  439b25:	(bad)  
  439b26:	ror    ecx,1
  439b28:	stos   BYTE PTR es:[edi],al
  439b29:	and    DWORD PTR [edi+ecx*4-0x5e782145],edx
  439b30:	inc    ebp
  439b31:	fwait
  439b32:	call   0xad3b:0x7f9d6675
  439b39:	add    ecx,0xc
  439b3c:	mov    ah,0x3d
  439b3e:	xor    al,BYTE PTR [ecx+0x25e200c]
  439b44:	cmc    
  439b45:	pop    esi
  439b46:	dec    ebp
  439b47:	mov    ds:0x67b357be,eax
  439b4c:	shl    WORD PTR [ebx+0x78543c12],1
  439b53:	mov    al,0xa3
  439b55:	inc    edx
  439b56:	push   ss
  439b57:	stos   BYTE PTR es:[edi],al
  439b58:	bound  edi,QWORD PTR [eax+edi*8]
  439b5b:	gs dec esp
  439b5d:	out    0xda,eax
  439b5f:	adc    ch,BYTE PTR ds:[ecx+0x6f]
  439b63:	inc    edx
  439b64:	adc    al,ah
  439b66:	mov    bl,0x2c
  439b68:	cli    
  439b69:	cmp    al,0x36
  439b6b:	cmp    al,dh
  439b6d:	popa   
  439b6e:	dec    ebp
  439b6f:	lods   al,BYTE PTR ds:[esi]
  439b70:	ins    DWORD PTR es:[edi],dx
  439b71:	and    ch,BYTE PTR [edi+eiz*2]
  439b74:	loop   0x439bce
  439b76:	sub    DWORD PTR [ecx-0x38ed4c79],ebp
  439b7c:	(bad)  
  439b7d:	data16 jno 0x439b19
  439b80:	(bad)  
  439b81:	neg    BYTE PTR [eax+0x5c]
  439b84:	sub    BYTE PTR [eax-0x6f],al
  439b87:	lahf   
  439b88:	jo     0x439c05
  439b8a:	cmovno eax,DWORD PTR [edi+0x30ff5b7c]
  439b91:	pop    ss
  439b92:	mov    es,WORD PTR [edx]
  439b94:	jl     0x439c13
  439b96:	mov    ebx,ebx
  439b98:	popa   
  439b99:	push   ds
  439b9a:	out    0xab,al
  439b9c:	popf   
  439b9d:	push   fs
  439b9f:	inc    esp
  439ba0:	hlt    
  439ba1:	add    ch,BYTE PTR [ebx-0x32]
  439ba4:	das    
  439ba5:	mov    eax,0x360b6e67
  439baa:	dec    ebp
  439bab:	ss repnz dec ecx
  439bae:	leave  
  439baf:	(bad)  
  439bb0:	cmp    esp,DWORD PTR [edi+0x181145b6]
  439bb6:	fs sti 
  439bb8:	int    0xb8
  439bba:	ins    DWORD PTR es:[edi],dx
  439bbb:	daa    
  439bbc:	push   0xffffff84
  439bbe:	outs   dx,DWORD PTR ds:[esi]
  439bbf:	fisubr DWORD PTR [eax]
  439bc1:	int3   
  439bc2:	cdq    
  439bc3:	loopne 0x439bad
  439bc5:	fsubr  DWORD PTR [edi]
  439bc7:	inc    esp
  439bc8:	xor    DWORD PTR [eax],esp
  439bca:	pop    ebp
  439bcb:	sbb    eax,0xdb31b881
  439bd0:	cwde   
  439bd1:	fdiv   DWORD PTR [eax-0x11]
  439bd4:	into   
  439bd5:	ins    DWORD PTR es:[edi],dx
  439bd6:	sbb    ch,bl
  439bd8:	jb     0x439bb0
  439bda:	dec    ecx
  439bdb:	mov    ds:0x6a0ebc02,al
  439be0:	mov    esp,0x45a9a129
  439be5:	inc    ebp
  439be6:	and    BYTE PTR [ebx-0x531e73ee],0xcd
  439bed:	cmp    DWORD PTR [eax],0x2c
  439bf0:	loope  0x439bcd
  439bf2:	and    al,BYTE PTR [eax-0x46]
  439bf5:	sbb    edi,DWORD PTR [esi]
  439bf7:	sbb    al,0x93
  439bf9:	call   0x65b0c714
  439bfe:	adc    al,0x1f
  439c00:	add    ebp,esi
  439c02:	inc    esp
  439c03:	aam    0x9c
  439c05:	cdq    
  439c06:	dec    ebp
  439c07:	push   ebx
  439c08:	ja     0x439bd0
  439c0a:	cmp    ah,BYTE PTR [ebp-0x749f4061]
  439c10:	push   eax
  439c11:	jns    0x439bf4
  439c13:	mov    dl,0xe2
  439c15:	mov    bl,0x16
  439c17:	cmp    eax,0x824bacc4
  439c1c:	push   ecx
  439c1d:	pop    ds
  439c1e:	ret    0x4c8c
  439c21:	or     DWORD PTR [edx],ebp
  439c23:	into   
  439c24:	inc    ebx
  439c25:	test   BYTE PTR [ecx+0x73],al
  439c28:	rcl    DWORD PTR [edi+0x75],1
  439c2b:	cmp    edi,DWORD PTR [eax]
  439c2d:	xchg   BYTE PTR [esi],dh
  439c2f:	and    eax,0xa02be93b
  439c34:	es cld 
  439c36:	jmp    0xf34681f6
  439c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439c3c:	mov    gs,ebp
  439c3e:	pop    esp
  439c3f:	shl    DWORD PTR [edx],1
  439c41:	test   BYTE PTR [edx+0x72f83f],bl
  439c47:	xchg   edi,eax
  439c48:	fs adc eax,0x8f95d40e
  439c4e:	arpl   WORD PTR ds:0x8be62d36,bx
  439c54:	push   0x6ab8ecad
  439c59:	stos   DWORD PTR es:[edi],eax
  439c5a:	push   0x41f2cdc3
  439c5f:	xor    ah,BYTE PTR [edi]
  439c61:	sub    eax,0xcba4e5df
  439c66:	es sbb esi,ebp
  439c69:	test   al,ah
  439c6b:	push   ss
  439c6c:	jecxz  0x439bfc
  439c6e:	inc    esi
  439c6f:	std    
  439c70:	(bad)  
  439c72:	or     BYTE PTR [edx-0x49],al
  439c75:	inc    esp
  439c76:	pop    ss
  439c77:	scas   eax,DWORD PTR es:[edi]
  439c78:	ret    
  439c79:	fdiv   st,st(3)
  439c7b:	jl     0x439c51
  439c7d:	daa    
  439c7e:	pop    eax
  439c7f:	in     eax,dx
  439c80:	outs   dx,DWORD PTR ds:[esi]
  439c81:	retf   
  439c82:	popf   
  439c83:	adc    eax,0x8a8d00a3
  439c88:	jmp    0x438b3fea
  439c8d:	push   esp
  439c8e:	neg    BYTE PTR [edi-0x13]
  439c91:	jl     0x439ca5
  439c93:	rol    BYTE PTR [esi+edi*1+0x73de9db3],0x67
  439c9b:	fs add al,0xcc
  439c9e:	cdq    
  439c9f:	in     al,dx
  439ca0:	sar    BYTE PTR [ebp+0x45],cl
  439ca3:	repnz mov ebx,0x7fc052e9
  439ca9:	int    0xe4
  439cab:	test   eax,0x467059f8
  439cb0:	fdivrp st(2),st
  439cb2:	inc    ebp
  439cb3:	cmc    
  439cb4:	fs xor edx,DWORD PTR cs:[edi-0xd2cbf44]
  439cbc:	and    bh,BYTE PTR [ecx-0x56c8ea82]
  439cc2:	ds cmp eax,0xf6730b2a
  439cc8:	bound  esp,QWORD PTR [eax]
  439cca:	rol    DWORD PTR [ecx-0x64],0x34
  439cce:	push   ebx
  439ccf:	test   eax,0x44436dc6
  439cd4:	inc    edi
  439cd5:	(bad)  
  439cd6:	sbb    ecx,DWORD PTR [esi-0x6c19c18b]
  439cdc:	ja     0x439cae
  439cde:	arpl   WORD PTR [ebx-0x57],di
  439ce1:	push   ebx
  439ce2:	shl    DWORD PTR [ecx-0x736f7ac0],0x6b
  439ce9:	cmc    
  439cea:	add    BYTE PTR [esi],dh
  439cec:	sub    DWORD PTR [eax+ebx*1-0x1e],edi
  439cf0:	fwait
  439cf1:	jecxz  0x439cf6
  439cf3:	outs   dx,DWORD PTR ds:[esi]
  439cf4:	xchg   ebp,eax
  439cf5:	dec    esp
  439cf6:	and    ch,al
  439cf8:	repnz dec ecx
  439cfa:	call   0x3e8b61c
  439cff:	mov    eax,0x5d8d56e9
  439d04:	enter  0x5115,0xda
  439d08:	push   edx
  439d09:	sub    eax,0xff994813
  439d0e:	fld    DWORD PTR [esi]
  439d10:	ret    0xa16a
  439d13:	in     al,dx
  439d14:	popf   
  439d15:	pop    ss
  439d16:	dec    edi
  439d17:	cmp    ah,BYTE PTR ds:0x7191aa9b
  439d1d:	cmp    BYTE PTR [edx],bl
  439d1f:	push   cs
  439d20:	(bad)  
  439d21:	lods   al,BYTE PTR ds:[esi]
  439d22:	test   ebx,esp
  439d24:	mov    al,ds:0x34234701
  439d29:	idiv   DWORD PTR [ecx+0x3ee2f85c]
  439d2f:	cmc    
  439d30:	aaa    
  439d31:	sbb    BYTE PTR [edi+ecx*8],dl
  439d34:	mov    bh,0x9c
  439d36:	xchg   esp,eax
  439d37:	sub    bl,al
  439d39:	add    edi,DWORD PTR [esi+ebx*8]
  439d3c:	jecxz  0x439cd5
  439d3e:	das    
  439d3f:	sub    BYTE PTR [ebx-0x31f2c94c],cl
  439d45:	fidiv  WORD PTR [edi-0x61]
  439d48:	shl    BYTE PTR [eax+0x5750ef6f],0x2a
  439d4f:	imul   eax,DWORD PTR [ecx],0x497f1f09
  439d55:	(bad)  
  439d56:	sti    
  439d57:	mov    DWORD PTR [esi+0x53],ebp
  439d5a:	cmp    DWORD PTR ds:0x93a42442,ebp
  439d60:	ins    DWORD PTR es:[edi],dx
  439d61:	add    ebp,ebx
  439d63:	cmp    edx,DWORD PTR [ebx]
  439d65:	out    0x6d,al
  439d67:	cmpps  xmm0,xmm7,0x3e
  439d6b:	push   cs
  439d6c:	or     al,0x3d
  439d6e:	aam    0x3e
  439d70:	fidivr DWORD PTR [edx*8+0x1a485e3a]
  439d77:	jae    0x439d72
  439d79:	inc    eax
  439d7a:	fild   WORD PTR [ecx]
  439d7c:	jmp    edx
  439d7e:	pop    ebp
  439d7f:	dec    edi
  439d80:	pushf  
  439d81:	fcmove st,st(6)
  439d83:	loope  0x439d26
  439d85:	jge    0x439d66
  439d87:	dec    esi
  439d88:	xchg   ebx,eax
  439d89:	es clc 
  439d8b:	xchg   ebx,eax
  439d8c:	jns    0x439db6
  439d8e:	ja     0x439d36
  439d90:	sub    al,0x60
  439d92:	dec    ebx
  439d93:	inc    ebx
  439d94:	sbb    BYTE PTR [esi-0x5f],dh
  439d97:	inc    edi
  439d98:	jge    0x439e08
  439d9a:	adc    BYTE PTR [ebx],dh
  439d9c:	inc    ebx
  439d9d:	pop    edx
  439d9e:	xchg   edi,eax
  439d9f:	mov    ebx,DWORD PTR [edi]
  439da1:	(bad)  
  439da3:	jns    0x439e24
  439da5:	xchg   edi,eax
  439da6:	lods   eax,DWORD PTR ds:[esi]
  439da7:	icebp  
  439da8:	dec    eax
  439da9:	test   al,0x3c
  439dab:	xchg   edi,eax
  439dac:	push   0x36
  439dae:	push   esp
  439daf:	out    0xbf,al
  439db1:	jg     0x439ded
  439db3:	(bad)  
  439db4:	push   ebx
  439db5:	and    eax,0xaab5d135
  439dba:	pop    ss
  439dbb:	imul   ebx,ecx,0xffffffda
  439dbe:	inc    esp
  439dbf:	add    ch,dh
  439dc1:	push   ebx
  439dc2:	mov    ds:0x645a8791,al
  439dc7:	pusha  
  439dc8:	js     0x439da0
  439dca:	mov    ebp,edi
  439dcc:	lea    ebp,[ecx]
  439dce:	mov    eax,0x68974e0e
  439dd3:	push   edx
  439dd4:	xor    BYTE PTR [esi+0x58],ah
  439dd7:	and    cl,BYTE PTR [esi]
  439dd9:	jle    0x439dc1
  439ddb:	sbb    al,0xc7
  439ddd:	adc    DWORD PTR [eax],ebx
  439ddf:	mov    ecx,0x4c343fca
  439de4:	fstp   DWORD PTR [edi-0x4881b195]
  439dea:	adc    al,0x9a
  439dec:	inc    ebp
  439ded:	sbb    cl,0x63
  439df0:	aam    0xa9
  439df2:	out    0x26,eax
  439df4:	repz jbe 0x439e37
  439df7:	sbb    al,0x5
  439df9:	fsubr  DWORD PTR [ecx]
  439dfb:	popf   
  439dfc:	sub    al,0x16
  439dfe:	sub    ebx,DWORD PTR [edi+eax*1-0x7a4e379b]
  439e05:	xchg   ecx,eax
  439e06:	mov    bh,0x30
  439e08:	jp     0x439e59
  439e0a:	jno    0x439de2
  439e0c:	jo     0x439e44
  439e0e:	std    
  439e0f:	in     eax,dx
  439e10:	jb     0x439e2e
  439e12:	or     edx,esi
  439e14:	mov    esi,0x135762fc
  439e19:	not    DWORD PTR [edx]
  439e1b:	and    eax,0xc267d598
  439e20:	(bad)  
  439e21:	es jo  0x439e8e
  439e24:	rcr    cl,0xfa
  439e27:	fst    QWORD PTR [ecx]
  439e29:	fist   WORD PTR [edx-0x7a]
  439e2c:	imul   ebp,edx,0xf
  439e2f:	imul   esp,DWORD PTR [edx-0x55],0x25
  439e33:	in     eax,0x65
  439e35:	cld    
  439e36:	mov    esp,0xa4e3f97e
  439e3b:	fdivr  DWORD PTR [edi-0x6fa037af]
  439e41:	ror    DWORD PTR [edi-0x38],cl
  439e44:	and    BYTE PTR ds:0xdff03ef9,al
  439e4a:	sti    
  439e4b:	lahf   
  439e4c:	mov    WORD PTR [eax-0x16],gs
  439e4f:	fs adc al,0xa2
  439e52:	clc    
  439e53:	xor    DWORD PTR [ebx],esi
  439e55:	pop    ss
  439e56:	lods   eax,DWORD PTR gs:[esi]
  439e58:	mov    dh,0x42
  439e5a:	xor    BYTE PTR [ebp+0x1aec1363],al
  439e60:	cdq    
  439e61:	mov    eax,0xa05a733f
  439e66:	retf   
  439e67:	and    BYTE PTR [ecx+0x66],ah
  439e6a:	push   ebx
  439e6b:	cmp    bl,BYTE PTR [eax-0x7ebcded1]
  439e71:	imul   edi,DWORD PTR [edi+0x56],0xffffffb3
  439e75:	(bad)  
  439e76:	in     eax,dx
  439e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439e78:	ficomp WORD PTR [edi+0x19dfd3cd]
  439e7e:	cmp    eax,DWORD PTR [edx-0x4cc010e0]
  439e84:	mov    al,0xe
  439e86:	inc    ebp
  439e87:	inc    ebp
  439e88:	jno    0x439f05
  439e8a:	ss pushf 
  439e8c:	xchg   esp,eax
  439e8d:	push   cs
  439e8e:	sahf   
  439e8f:	inc    esi
  439e90:	push   esp
  439e91:	add    eax,esi
  439e93:	test   DWORD PTR ds:0x648580d7,edx
  439e99:	int3   
  439e9a:	out    0x58,eax
  439e9c:	stc    
  439e9d:	jne    0x439e39
  439e9f:	dec    eax
  439ea0:	dec    ecx
  439ea1:	push   ss
  439ea2:	test   BYTE PTR [ecx-0x15],ch
  439ea5:	ret    
  439ea6:	test   BYTE PTR [esp+edx*4+0x33],bl
  439eaa:	in     eax,0x8d
  439eac:	enter  0xd71c,0xd
  439eb0:	xor    DWORD PTR [eax+0x16],ecx
  439eb3:	sub    BYTE PTR [esi-0x1d],cl
  439eb6:	ds pushf 
  439eb8:	add    DWORD PTR [ebp+eax*1+0x2d865016],0x354ab0e9
  439ec3:	aad    0xdb
  439ec5:	adc    BYTE PTR [ecx],bh
  439ec7:	addr16 retf 0x47ef
  439ecb:	call   0x9298:0x3fdd9710
  439ed2:	jnp    0x439f36
  439ed4:	jmp    0x1991e874
  439ed9:	sub    al,ch
  439edb:	pop    ds
  439edc:	out    dx,ax
  439ede:	popf   
  439edf:	daa    
  439ee0:	xlat   BYTE PTR ds:[ebx]
  439ee1:	test   DWORD PTR [edi],0x2aa4307c
  439ee7:	test   BYTE PTR [eax+0x1c],dl
  439eea:	test   BYTE PTR [edi-0x78ba7281],bl
  439ef0:	mov    dh,0x5f
  439ef2:	or     eax,ebp
  439ef4:	cmp    cl,BYTE PTR [eax+0xb]
  439ef7:	dec    ebp
  439ef8:	ret    
  439ef9:	mov    al,0xfc
  439efb:	fild   WORD PTR [edx-0x3d]
  439efe:	push   ecx
  439eff:	stc    
  439f00:	rcl    DWORD PTR [eax+0x7c],0x0
  439f04:	push   es
  439f05:	fcom   QWORD PTR [edx+eax*1+0x650f745e]
  439f0c:	or     DWORD PTR [edx-0x40c4232f],esp
  439f12:	test   al,0x69
  439f14:	adc    eax,0xc1861a83
  439f19:	jmp    0x70f2f8a0
  439f1e:	inc    ebx
  439f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439f20:	xchg   ecx,eax
  439f21:	loopne 0x439ee3
  439f23:	daa    
  439f24:	pop    esp
  439f25:	clc    
  439f26:	js     0x439f1f
  439f28:	cdq    
  439f29:	aas    
  439f2a:	inc    ecx
  439f2b:	sub    al,0x8a
  439f2d:	leave  
  439f2e:	add    cl,BYTE PTR [ebx-0x60]
  439f31:	sbb    eax,0x1ac528ca
  439f36:	out    0xc4,eax
  439f38:	nop
  439f39:	loope  0x439f69
  439f3b:	pop    ebx
  439f3c:	js     0x439ef4
  439f3e:	bound  ecx,QWORD PTR [esi]
  439f40:	jmp    0x439f35
  439f42:	minps  xmm0,XMMWORD PTR [ebx]
  439f45:	mov    ecx,0x31df7660
  439f4a:	aaa    
  439f4b:	xchg   esp,eax
  439f4c:	xchg   esp,eax
  439f4d:	mov    edi,0x54def366
  439f52:	dec    esp
  439f53:	cs inc ebp
  439f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439f56:	and    eax,0xfd0bf126
  439f5b:	sbb    BYTE PTR [edx+0x27],0x5f
  439f5f:	ja     0x439f99
  439f61:	xchg   edi,eax
  439f62:	leave  
  439f63:	add    dl,ah
  439f65:	push   es
  439f66:	cwde   
  439f67:	repnz or al,0xb7
  439f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439f6b:	add    al,ah
  439f6d:	test   eax,0x1587265d
  439f72:	jne    0x439f36
  439f74:	push   ebx
  439f75:	push   ebp
  439f76:	add    ebp,DWORD PTR [esi]
  439f78:	fst    DWORD PTR [esi]
  439f7a:	pop    es
  439f7b:	add    BYTE PTR [eax],al
  439f7d:	mov    ah,0xed
  439f7f:	dec    BYTE PTR [ecx-0x33]
  439f82:	adc    al,0xc8
  439f84:	pop    edx
  439f85:	push   0x43
  439f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439f88:	jnp    0x439fb7
  439f8a:	call   0xbf71e9e9
  439f8f:	push   ebp
  439f90:	push   0xa6f8e9c5
  439f95:	inc    edi
  439f96:	pop    ss
  439f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439f98:	ftst   
  439f9a:	fld    DWORD PTR [ebx-0x333cc8b2]
  439fa0:	outs   dx,DWORD PTR ds:[esi]
  439fa1:	xor    al,0x63
  439fa3:	fst    DWORD PTR [ebp-0x68]
  439fa6:	jne    0x439fe3
  439fa8:	dec    BYTE PTR [ebx]
  439faa:	in     eax,dx
  439fab:	xchg   ebx,eax
  439fac:	mov    eax,?
  439fae:	neg    BYTE PTR [edi]
  439fb0:	push   ds
  439fb1:	lods   al,BYTE PTR ds:[esi]
  439fb2:	pop    ds
  439fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439fb4:	clc    
  439fb5:	dec    ebp
  439fb6:	outs   dx,BYTE PTR ds:[esi]
  439fb7:	icebp  
  439fb8:	sbb    eax,0x8227e059
  439fbd:	jo     0x439fa1
  439fbf:	mov    dh,BYTE PTR [edi]
  439fc1:	imul   ebx,ebx,0xf740f51e
  439fc7:	dec    eax
  439fc8:	xor    al,0xcf
  439fca:	adc    DWORD PTR [ebp-0x11910f35],ecx
  439fd0:	clc    
  439fd1:	pop    esp
  439fd2:	mov    ah,0xa5
  439fd4:	jnp    0x439fab
  439fd6:	xchg   edi,eax
  439fd7:	lea    ebx,ss:[ecx+0x472396ec]
  439fde:	jg     0x439f9f
  439fe0:	js     0x43a021
  439fe2:	inc    eax
  439fe3:	dec    edi
  439fe4:	in     eax,0x4c
  439fe6:	ret    0x36f4
  439fe9:	jmp    0x43a03c
  439feb:	add    al,0xe9
  439fee:	sub    eax,0x7110c0c2
  439ff3:	out    0xaf,al
  439ff5:	loope  0x439f82
  439ff7:	(bad)  
  439ff8:	or     eax,0x5396526c
  439ffd:	jns    0x43a000
  439fff:	fnsave [edi-0x72]
  43a002:	sub    dl,ch
  43a004:	shr    DWORD PTR [edx],0xed
  43a007:	push   eax
  43a008:	xlat   BYTE PTR ds:[ebx]
  43a009:	ds out 0xc0,eax
  43a00c:	add    edi,ebx
  43a00e:	pop    ebx
  43a00f:	and    BYTE PTR [edx+0x29],0xde
  43a013:	cmp    BYTE PTR [edx+0x19],ch
  43a016:	mov    bh,0xc
  43a018:	icebp  
  43a019:	mov    ah,0x2b
  43a01b:	xor    al,0x1c
  43a01d:	sbb    eax,0x8adbc755
  43a022:	lods   al,BYTE PTR ds:[esi]
  43a023:	loop   0x439fee
  43a025:	ds daa 
  43a027:	mov    dl,0xb1
  43a029:	mov    bl,0x78
  43a02b:	ss mov ch,bl
  43a02e:	gs aam 0x19
  43a031:	es jbe 0x43a094
  43a034:	idiv   BYTE PTR [edi]
  43a036:	add    eax,0xbfe3106d
  43a03b:	retf   0x6c23
  43a03e:	xchg   esp,eax
  43a03f:	imul   edx,ebp,0x69
  43a042:	push   ecx
  43a043:	hlt    
  43a044:	ja     0x43a001
  43a046:	mov    bh,0x27
  43a049:	mov    bl,dh
  43a04b:	push   gs
  43a04d:	bound  ebx,QWORD PTR gs:[eax]
  43a050:	dec    esi
  43a051:	out    dx,eax
  43a052:	addr16 nop
  43a054:	test   eax,0xa68111b3
  43a059:	adc    DWORD PTR [esi+0x11a99cdc],edi
  43a05f:	dec    ebx
  43a060:	mov    bh,0x50
  43a062:	mov    esp,esp
  43a064:	inc    di
  43a066:	(bad)  
  43a067:	push   ebx
  43a068:	sub    esi,DWORD PTR [eax]
  43a06a:	or     BYTE PTR [eax+edx*2-0x40441033],ah
  43a071:	sub    ch,bh
  43a073:	cmp    ebx,DWORD PTR ds:0x37ef6c13
  43a079:	test   BYTE PTR [edx-0x283eced0],dl
  43a07f:	mov    eax,0xbd853225
  43a084:	jb     0x43a02b
  43a086:	inc    edx
  43a087:	fst    st(5)
  43a089:	scas   eax,DWORD PTR es:[edi]
  43a08a:	xchg   esp,eax
  43a08b:	ss and ecx,edi
  43a08e:	xor    al,BYTE PTR ds:0x3a821357
  43a094:	mov    ah,0x17
  43a096:	adc    DWORD PTR [ebp-0x3b],eax
  43a099:	addr16 stc 
  43a09b:	xor    ecx,DWORD PTR [ecx-0x76]
  43a09e:	sbb    al,0xaa
  43a0a0:	sahf   
  43a0a1:	(bad)  
  43a0a2:	pop    ss
  43a0a3:	xchg   esi,eax
  43a0a4:	xchg   edi,eax
  43a0a5:	lock xlat BYTE PTR ds:[ebx]
  43a0a7:	lds    eax,FWORD PTR [edx]
  43a0a9:	dec    edx
  43a0aa:	cdq    
  43a0ab:	ds shl ebp,cl
  43a0ae:	popf   
  43a0af:	push   edi
  43a0b0:	pop    ebp
  43a0b1:	ins    DWORD PTR es:[edi],dx
  43a0b2:	xor    dl,dl
  43a0b4:	add    bh,BYTE PTR [edi+0x3]
  43a0b7:	sbb    BYTE PTR ds:0xdb515047,cl
  43a0bd:	mov    esp,0xcbe265d1
  43a0c2:	lods   eax,DWORD PTR ds:[esi]
  43a0c3:	push   ss
  43a0c4:	inc    ebp
  43a0c5:	sbb    ebx,DWORD PTR [ecx+0x79]
  43a0c8:	aad    0x12
  43a0ca:	aam    0xac
  43a0cc:	push   ecx
  43a0cd:	cmp    ebx,ebx
  43a0cf:	sub    bl,ch
  43a0d1:	leave  
  43a0d2:	cwde   
  43a0d3:	dec    ecx
  43a0d4:	mov    bl,0xa3
  43a0d6:	int3   
  43a0d7:	dec    edi
  43a0d8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  43a0da:	xchg   edx,eax
  43a0db:	fcomp  DWORD PTR [edx]
  43a0dd:	jnp    0x43a09d
  43a0df:	sbb    DWORD PTR [esi],ecx
  43a0e1:	imul   eax,DWORD PTR [ecx-0x4e],0xdd6c99ce
  43a0e8:	mov    BYTE PTR [ebp+0x5a],al
  43a0eb:	cmp    BYTE PTR [ebx],0xa9
  43a0ee:	mov    ecx,0x768058e3
  43a0f3:	gs push edi
  43a0f5:	mov    ah,0xd6
  43a0f7:	mov    al,ds:0xa3b7f23a
  43a0fc:	(bad)  
  43a0fd:	(bad)  
  43a0fe:	sbb    eax,0x33284946
  43a103:	inc    ebp
  43a104:	out    dx,eax
  43a105:	pop    edi
  43a106:	es inc edi
  43a108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a109:	sub    bh,cl
  43a10b:	adc    al,BYTE PTR fs:[esi]
  43a10e:	popa   
  43a10f:	push   eax
  43a110:	pop    edi
  43a111:	test   al,0xda
  43a113:	adc    BYTE PTR [ebx+0x57101169],bh
  43a119:	xchg   DWORD PTR [edx-0x3f5bf505],ebp
  43a11f:	sbb    esi,ebx
  43a121:	cmc    
  43a122:	sub    al,0x35
  43a124:	pop    ss
  43a125:	jl     0x43a0f9
  43a127:	or     BYTE PTR [ebp+eiz*2+0x185b089e],ch
  43a12e:	jecxz  0x43a126
  43a130:	in     eax,0x7c
  43a132:	sbb    ah,dh
  43a134:	jecxz  0x43a0b6
  43a136:	or     BYTE PTR [ecx+eiz*4-0x4e87ee7d],0x3
  43a13e:	imul   ecx,DWORD PTR [ebp+0x66af150e],0x5e0c9a1f
  43a148:	inc    esp
  43a149:	push   edi
  43a14a:	pop    edi
  43a14b:	mov    ah,0x35
  43a14d:	(bad)  
  43a14e:	xor    dh,ch
  43a150:	out    0x5,al
  43a152:	push   0xffffffcd
  43a154:	adc    al,0x69
  43a156:	loop   0x43a111
  43a158:	or     eax,0xd8617f34
  43a15d:	call   0x65d6:0x6b351ea0
  43a164:	rcr    DWORD PTR [edx],0x3f
  43a167:	enter  0xa99c,0xed
  43a16b:	hlt    
  43a16c:	or     dh,0x79
  43a16f:	adc    eax,0x29f34a1a
  43a174:	sbb    BYTE PTR [eax-0x2c820d7b],ch
  43a17a:	sbb    al,0x6c
  43a17c:	mov    ebp,0x7e4cd04c
  43a181:	imul   edi,DWORD PTR [esi],0x69
  43a184:	in     al,dx
  43a185:	pop    ecx
  43a186:	cmp    bh,BYTE PTR [edi]
  43a188:	fwait
  43a189:	add    al,0x13
  43a18b:	nop
  43a18c:	jb     0x43a203
  43a18e:	inc    edi
  43a18f:	popa   
  43a190:	xchg   DWORD PTR [esi+0x5f790120],ebx
  43a196:	test   DWORD PTR [edx],ebx
  43a198:	xor    al,0xf3
  43a19a:	sti    
  43a19b:	ds pop ss
  43a19d:	xor    edx,DWORD PTR [ebx-0x58]
  43a1a0:	xor    ebp,DWORD PTR [edi-0x18]
  43a1a3:	call   0x6701:0x535a9a1b
  43a1aa:	jle    0x43a173
  43a1ac:	test   al,0xd0
  43a1ae:	loope  0x43a1b3
  43a1b0:	inc    eax
  43a1b1:	ror    BYTE PTR [esi],cl
  43a1b3:	push   ds
  43a1b4:	ins    DWORD PTR es:[edi],dx
  43a1b5:	mov    bl,0x24
  43a1b7:	hlt    
  43a1b8:	pop    es
  43a1b9:	push   cs
  43a1ba:	push   ebx
  43a1bb:	and    al,0x49
  43a1bd:	dec    ebp
  43a1be:	xor    al,0x6c
  43a1c0:	test   al,0x44
  43a1c2:	cld    
  43a1c3:	clc    
  43a1c4:	mov    eax,ds:0xe66886ee
  43a1c9:	fisttp WORD PTR [ecx]
  43a1cb:	sar    DWORD PTR [ebx+0x48aa1aad],0xef
  43a1d2:	mov    edx,0xc72dd80
  43a1d7:	ja     0x43a23a
  43a1d9:	(bad)  
  43a1da:	cmp    eax,0x8a00c3a8
  43a1df:	(bad)  
  43a1e0:	cld    
  43a1e1:	cs sahf 
  43a1e3:	ins    DWORD PTR es:[edi],dx
  43a1e4:	loopne 0x43a1e4
  43a1e6:	pusha  
  43a1e7:	mov    edi,0xe924bc00
  43a1ec:	loope  0x43a1c1
  43a1ee:	cld    
  43a1ef:	push   esi
  43a1f0:	inc    ebx
  43a1f1:	jmp    0x2fad:0x67d70185
  43a1f8:	jae    0x43a24c
  43a1fa:	adc    al,0xa
  43a1fc:	cmp    edx,DWORD PTR [eax-0xfaa6ff9]
  43a202:	das    
  43a203:	cmp    eax,DWORD PTR [eax]
  43a205:	jb     0x43a227
  43a207:	push   esi
  43a208:	test   al,0x27
  43a20a:	lock fsubp st(6),st
  43a20d:	inc    ebp
  43a20e:	pop    esi
  43a20f:	sbb    eax,0x2b292bf4
  43a214:	dec    edx
  43a215:	sbb    DWORD PTR [ebp-0x4688dd06],edx
  43a21b:	fcomi  st,st(5)
  43a21d:	addr16 mov ch,0x61
  43a220:	sub    ebp,ebx
  43a222:	int    0xb1
  43a224:	sub    edi,DWORD PTR [edx]
  43a226:	pop    edx
  43a227:	bound  ecx,QWORD PTR [edi-0x1c09908d]
  43a22d:	sbb    DWORD PTR [esi-0x16],0x1e
  43a231:	dec    ebx
  43a232:	mov    ah,0x2f
  43a234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a235:	test   DWORD PTR [eax+0x78],ecx
  43a238:	scas   eax,DWORD PTR es:[edi]
  43a239:	out    dx,eax
  43a23a:	outs   dx,BYTE PTR ds:[esi]
  43a23b:	(bad)  
  43a23d:	or     dh,BYTE PTR [edi+0xe08ea89]
  43a243:	xchg   ebp,eax
  43a244:	pop    ecx
  43a245:	(bad)  
  43a246:	cdq    
  43a247:	(bad)  
  43a248:	retf   0x3018
  43a24b:	into   
  43a24c:	rcr    BYTE PTR [edi],cl
  43a24e:	cld    
  43a24f:	cmp    eax,0xd1f9d3ff
  43a254:	or     eax,0x7c4bd678
  43a259:	dec    ecx
  43a25a:	xor    eax,0x5e253e08
  43a25f:	sub    BYTE PTR [ebx+0x544d7272],ah
  43a265:	jle    0x43a27c
  43a267:	(bad)  
  43a269:	sub    cl,dh
  43a26b:	push   ecx
  43a26c:	arpl   bp,bp
  43a26e:	jbe    0x43a255
  43a270:	xchg   ebx,eax
  43a271:	pop    edi
  43a272:	cld    
  43a273:	imul   DWORD PTR [edi]
  43a275:	lds    eax,FWORD PTR [ecx+0x78]
  43a278:	or     DWORD PTR [ebp-0x2f],edx
  43a27b:	test   eax,0x4fdb23a8
  43a280:	js     0x43a239
  43a282:	loop   0x43a262
  43a284:	aad    0x23
  43a286:	retf   0xe389
  43a289:	dec    eax
  43a28a:	repz (bad) 
  43a28c:	ds mov esi,?
  43a28f:	jbe    0x43a275
  43a291:	or     ebx,eax
  43a293:	shr    DWORD PTR [ebp+0x4ca396d],cl
  43a299:	outs   dx,BYTE PTR ds:[esi]
  43a29a:	mov    edi,0x932d438c
  43a29f:	jg     0x43a270
  43a2a1:	adc    ebp,edi
  43a2a3:	adc    eax,0x410f2879
  43a2a8:	ret    
  43a2a9:	(bad)  
  43a2aa:	cmp    al,0x11
  43a2ac:	mov    eax,ds:0x4eba6527
  43a2b1:	es loopne 0x43a2a2
  43a2b4:	push   edx
  43a2b5:	sbb    eax,0x615d8853
  43a2ba:	jg     0x43a2e3
  43a2bc:	push   DWORD PTR [ebp-0x40]
  43a2bf:	loope  0x43a30b
  43a2c1:	addr16 dec edi
  43a2c3:	dec    ebx
  43a2c4:	add    al,0x92
  43a2c6:	mov    ds:0x4bd29e81,al
  43a2cb:	loope  0x43a2d8
  43a2cd:	fiadd  DWORD PTR [ebp+0x3f7119d4]
  43a2d3:	cmp    ecx,DWORD PTR [ebx+0x4d49aec6]
  43a2d9:	sahf   
  43a2da:	push   esi
  43a2db:	jae    0x43a27c
  43a2dd:	jecxz  0x43a31b
  43a2df:	ins    DWORD PTR es:[edi],dx
  43a2e0:	mov    ah,BYTE PTR [esi+0x20]
  43a2e3:	stc    
  43a2e4:	cmp    cl,BYTE PTR [edi]
  43a2e6:	repz or ebp,0xffffffa1
  43a2ea:	add    BYTE PTR [ebx-0xa],dl
  43a2ed:	mov    dh,0x44
  43a2ef:	pop    ebp
  43a2f0:	daa    
  43a2f1:	fcomp  DWORD PTR [esi+eax*8]
  43a2f4:	mov    ecx,0xe1a1f5a2
  43a2f9:	in     eax,dx
  43a2fa:	sub    ebx,ecx
  43a2fc:	je     0x43a2fd
  43a2fe:	shl    DWORD PTR [ebp+0x458dfe2d],0x1
  43a305:	ret    
  43a306:	popf   
  43a307:	pop    edi
  43a308:	xchg   ecx,eax
  43a309:	mov    cl,0x13
  43a30b:	fdivr  DWORD PTR [edx-0xd]
  43a30e:	aam    0x2a
  43a310:	in     al,dx
  43a311:	sub    BYTE PTR [eax-0x18],ch
  43a314:	inc    edi
  43a315:	push   0xd85b31b6
  43a31a:	popa   
  43a31b:	adc    eax,0xbce47d2d
  43a320:	jae    0x43a36c
  43a322:	out    dx,al
  43a323:	jge    0x43a2c6
  43a325:	ret    0xbf53
  43a328:	mov    ebx,0x543c8f3c
  43a32d:	sub    esi,edi
  43a32f:	mov    ah,0x3
  43a331:	jp     0x43a2fd
  43a333:	and    BYTE PTR [edi+0x2c],ch
  43a336:	mov    al,0xec
  43a338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a339:	lock test eax,0xdf054bfe
  43a33f:	icebp  
  43a340:	adc    BYTE PTR [ecx-0x309734e0],ah
  43a346:	dec    esi
  43a347:	scas   al,BYTE PTR es:[edi]
  43a348:	pop    ebx
  43a349:	aam    0xf9
  43a34b:	sub    eax,0x62557e2e
  43a350:	mov    eax,0x544b8e98
  43a355:	mov    edi,ds
  43a357:	leave  
  43a358:	mov    al,0x6d
  43a35a:	out    0xfe,al
  43a35c:	sbb    al,0xec
  43a35e:	mov    dh,0x21
  43a360:	bound  ebx,QWORD PTR [ebx]
  43a362:	jno    0x43a3a4
  43a364:	and    BYTE PTR [esp+ebx*4-0x34],0xe9
  43a369:	and    cl,al
  43a36b:	das    
  43a36c:	mov    DWORD PTR [ebx],ebx
  43a36e:	mov    bl,ah
  43a370:	inc    ebx
  43a371:	jo     0x43a39f
  43a373:	in     eax,dx
  43a374:	lahf   
  43a375:	int3   
  43a376:	cli    
  43a377:	cmp    bl,BYTE PTR [eax+0x164ebea1]
  43a37d:	ficomp DWORD PTR [edi-0x42]
  43a380:	pop    edi
  43a381:	int    0x22
  43a383:	out    0x84,al
  43a385:	mov    eax,0xb598890e
  43a38a:	sti    
  43a38b:	xor    eax,0x173da68c
  43a390:	pop    eax
  43a391:	xchg   ecx,eax
  43a392:	aad    0x5a
  43a394:	into   
  43a395:	cmp    eax,0xbfaff3da
  43a39a:	in     al,dx
  43a39b:	inc    esi
  43a39c:	mov    ds:0xf6cc5d3,al
  43a3a1:	adc    BYTE PTR [edi-0x1f3912d4],0x60
  43a3a8:	popa   
  43a3a9:	ja     0x43a393
  43a3ab:	add    ecx,esp
  43a3ad:	cmp    edi,edi
  43a3af:	stos   BYTE PTR es:[edi],al
  43a3b0:	mov    cl,0x2c
  43a3b2:	mov    al,ds:0xbc9226b9
  43a3b7:	mov    eax,0xace309d6
  43a3bc:	leave  
  43a3bd:	popf   
  43a3be:	mov    esp,0x7a1a3a5b
  43a3c3:	mov    edx,0x31a062ce
  43a3c8:	jmp    0x43a34e
  43a3ca:	fst    DWORD PTR [edi-0x65]
  43a3cd:	inc    ecx
  43a3ce:	(bad)  
  43a3cf:	xchg   ebp,eax
  43a3d0:	fist   DWORD PTR [edx+ebx*4-0x79]
  43a3d4:	mov    cl,BYTE PTR [ebx+0x4e]
  43a3d7:	add    eax,eax
  43a3d9:	fnstcw WORD PTR [eax-0x55f3066d]
  43a3df:	call   0xe81eb977
  43a3e4:	inc    ebp
  43a3e5:	mov    al,0xf1
  43a3e7:	or     esi,edi
  43a3e9:	pop    ecx
  43a3ea:	jecxz  0x43a387
  43a3ec:	jae    0x43a37e
  43a3ee:	or     bh,0x4f
  43a3f1:	fimul  WORD PTR [ebx+0x4b]
  43a3f4:	and    ch,BYTE PTR [esi+0x730a980a]
  43a3fa:	or     eax,0xe0e37b9b
  43a3ff:	std    
  43a400:	jb     0x43a456
  43a402:	stc    
  43a403:	nop
  43a404:	mov    ds:0x3d548a68,al
  43a409:	xchg   ebp,eax
  43a40a:	jmp    0x8b32e873
  43a40f:	lock lea esp,[ebp-0x6cb22180]
  43a416:	sbb    eax,0x36f23e36
  43a41b:	cmp    eax,0x50e5102c
  43a420:	repnz ficomp DWORD PTR [esi+0x48a96dce]
  43a427:	(bad)
  43a42a:	push   es
  43a42b:	aam    0xf3
  43a42d:	pop    ebx
  43a42e:	xchg   ebx,eax
  43a42f:	inc    edi
  43a430:	inc    esi
  43a431:	test   BYTE PTR [eax+0x39],ah
  43a434:	loope  0x43a499
  43a436:	mul    bh
  43a438:	aad    0xf4
  43a43a:	icebp  
  43a43b:	sub    eax,DWORD PTR [ebp+0x63]
  43a43e:	pop    ebx
  43a43f:	and    DWORD PTR [ebx+0x7c],eax
  43a442:	arpl   dx,ax
  43a444:	mov    al,ds:0x9c780ee5
  43a449:	repz xor al,0x86
  43a44c:	dec    eax
  43a44d:	retf   0x3d12
  43a450:	mov    ds:0x3c6b0488,al
  43a455:	std    
  43a456:	pause  
  43a458:	pop    edx
  43a459:	or     dl,dl
  43a45b:	or     dh,ah
  43a45d:	add    eax,0x7d0d0679
  43a462:	push   edx
  43a463:	fisub  WORD PTR [ecx+0x2e47cc70]
  43a469:	adc    eax,0xda7e5965
  43a46e:	and    al,0x6e
  43a470:	addr16 in eax,0x7f
  43a473:	fwait
  43a474:	(bad)  
  43a475:	(bad)  [eax+edx*8]
  43a478:	scas   al,BYTE PTR es:[edi]
  43a479:	arpl   bp,ax
  43a47b:	mov    al,ds:0xdb4bc516
  43a480:	pop    edi
  43a481:	cli    
  43a482:	imul   ebp,DWORD PTR [eax+0x6aa4dc18],0xffffffcd
  43a489:	sub    al,ah
  43a48b:	jmp    0x601a:0xd9eddb54
  43a492:	movzx  edx,BYTE PTR [esi+0x6be0fb08]
  43a499:	out    dx,al
  43a49a:	lea    esi,[ecx]
  43a49c:	shl    DWORD PTR [eax-0x5c],0x6b
  43a4a0:	fs push ecx
  43a4a2:	mov    al,bh
  43a4a4:	mov    ecx,0xd8917230
  43a4a9:	inc    eax
  43a4aa:	sbb    DWORD PTR [edx],ecx
  43a4ac:	enter  0x8f39,0x8f
  43a4b0:	sub    DWORD PTR [ebp-0x31],ebx
  43a4b3:	fcomp  st(3)
  43a4b5:	leave  
  43a4b6:	pop    eax
  43a4b7:	mov    bl,0x39
  43a4b9:	jb     0x43a4f2
  43a4bb:	lahf   
  43a4bc:	xlat   BYTE PTR ds:[ebx]
  43a4bd:	hlt    
  43a4be:	dec    edi
  43a4bf:	jge    0x43a459
  43a4c1:	jecxz  0x43a4f4
  43a4c3:	pop    ebx
  43a4c4:	into   
  43a4c5:	test   al,0xf1
  43a4c7:	mov    dh,0x12
  43a4c9:	cmp    ah,BYTE PTR [eax+0x5b]
  43a4cc:	xlat   BYTE PTR ds:[ebx]
  43a4cd:	lahf   
  43a4ce:	cmp    ch,BYTE PTR [ebp-0x61]
  43a4d1:	and    DWORD PTR [edx+eiz*8+0x48cbad0f],eax
  43a4d8:	mov    ds:0xa2ae9b2e,eax
  43a4dd:	or     DWORD PTR [edx-0x6ebf777e],ebx
  43a4e3:	cwde   
  43a4e4:	cld    
  43a4e5:	mov    ebp,0x1966ef0e
  43a4ea:	adc    al,0x75
  43a4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a4ed:	mov    bh,0xf1
  43a4ef:	jge    0x43a4b3
  43a4f1:	xor    dl,BYTE PTR [esi+eax*2-0x594ceb5d]
  43a4f8:	(bad)  [ebp+0x44]
  43a4fb:	pop    edi
  43a4fc:	lahf   
  43a4fd:	std    
  43a4fe:	jmp    0x6369:0x1de7c260
  43a505:	sahf   
  43a506:	push   0xffffffd1
  43a508:	lods   eax,DWORD PTR ds:[esi]
  43a509:	mov    ch,0xb4
  43a50b:	cld    
  43a50c:	push   cs
  43a50d:	push   edx
  43a50e:	inc    edx
  43a50f:	or     BYTE PTR [esi+eax*8+0x36ad9cf9],dh
  43a516:	jg     0x43a55d
  43a518:	push   cs
  43a519:	mov    cl,0x86
  43a51b:	cmc    
  43a51c:	push   ecx
  43a51d:	out    dx,al
  43a51e:	arpl   WORD PTR [eax-0x32],bx
  43a521:	add    ecx,DWORD PTR [edx+0x2da7b097]
  43a527:	mov    ch,0x75
  43a529:	cmp    dl,BYTE PTR [esi]
  43a52b:	mov    BYTE PTR [edi],dh
  43a52d:	lahf   
  43a52e:	xchg   esi,eax
  43a52f:	les    edx,FWORD PTR [ecx+ecx*1-0x7e]
  43a533:	popf   
  43a534:	in     eax,dx
  43a535:	rol    DWORD PTR [esi+ebp*4+0x2e764795],1
  43a53c:	inc    esi
  43a53d:	or     eax,DWORD PTR [edx-0x4a2133af]
  43a543:	push   cs
  43a544:	mov    ch,0xe0
  43a546:	fnstenv ds:0x7c70510a
  43a54c:	mov    ds:0xb3db882c,al
  43a551:	aas    
  43a552:	mov    DWORD PTR [edi],esp
  43a554:	sub    al,0xa8
  43a556:	xor    eax,0x26e5e2f3
  43a55b:	inc    esi
  43a55c:	sti    
  43a55d:	jl     0x43a5b5
  43a55f:	lods   eax,DWORD PTR ds:[esi]
  43a560:	int3   
  43a561:	iret   
  43a562:	inc    ebp
  43a563:	loopne 0x43a561
  43a565:	sub    al,0xd1
  43a567:	into   
  43a568:	rcr    ebp,1
  43a56a:	inc    edi
  43a56b:	scas   eax,DWORD PTR es:[edi]
  43a56c:	sbb    eax,0x490aa1d6
  43a571:	and    BYTE PTR [esi+0x16],dl
  43a574:	add    al,ch
  43a576:	imul   ebx,DWORD PTR [ecx-0x2ed0e6be],0x15067318
  43a580:	push   edi
  43a581:	aas    
  43a582:	adc    DWORD PTR [ebp+0x77],eax
  43a585:	sbb    DWORD PTR [edx+0x662c6999],edx
  43a58b:	cmp    eax,0x7b5fa8d7
  43a590:	xchg   esi,eax
  43a591:	into   
  43a592:	and    al,0x64
  43a594:	adc    BYTE PTR [ebp+ebp*8+0x63d7cdc8],ch
  43a59b:	jg     0x43a59d
  43a59d:	mov    al,0x18
  43a59f:	out    0x2d,al
  43a5a1:	call   0x7bcb6020
  43a5a6:	xchg   edi,eax
  43a5a7:	retf   0xcb62
  43a5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a5ab:	and    ebx,edx
  43a5ad:	xor    ebx,DWORD PTR [edi]
  43a5af:	xor    DWORD PTR [esi-0x5f],esi
  43a5b2:	pop    ds
  43a5b3:	xor    al,0xf7
  43a5b5:	mov    edx,0x92873c77
  43a5ba:	dec    eax
  43a5bb:	outs   dx,BYTE PTR ds:[esi]
  43a5bc:	jbe    0x43a5c7
  43a5be:	bound  edi,QWORD PTR [ebx+0x1f252d6f]
  43a5c4:	mov    fs,ecx
  43a5c6:	mov    fs,WORD PTR [eax+0x5f37e1a]
  43a5cc:	out    0x36,al
  43a5ce:	inc    esi
  43a5cf:	bound  ecx,QWORD PTR [ecx+ebx*1-0x60b7baa5]
  43a5d6:	push   ss
  43a5d7:	les    edi,FWORD PTR [edx]
  43a5d9:	mov    eax,0x93fcd764
  43a5de:	adc    BYTE PTR cs:[ebx+0x54],dl
  43a5e2:	sbb    DWORD PTR [eax],ebx
  43a5e4:	bound  edx,QWORD PTR [ebp-0x37ad828d]
  43a5ea:	sti    
  43a5eb:	dec    ebx
  43a5ec:	repz dec esp
  43a5ee:	loop   0x43a57e
  43a5f0:	mov    ch,0x66
  43a5f2:	xchg   esp,ecx
  43a5f4:	repz cmp eax,0x6c7895ae
  43a5fa:	xchg   edi,esp
  43a5fc:	push   eax
  43a5fd:	inc    edx
  43a5fe:	into   
  43a5ff:	aaa    
  43a600:	sub    eax,0xa1fed5d7
  43a605:	lods   eax,DWORD PTR ds:[esi]
  43a606:	cmc    
  43a607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a608:	sub    eax,0xef928588
  43a60d:	sub    cl,BYTE PTR [eax-0xa3b7ecf]
  43a613:	mov    bl,0x7b
  43a615:	sub    al,0x18
  43a617:	add    BYTE PTR [ebx],bh
  43a619:	jbe    0x43a67b
  43a61b:	repz inc ecx
  43a61d:	sbb    eax,0x24ac7dce
  43a622:	test   BYTE PTR [edx+0x2aaea94d],bh
  43a628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a629:	ins    DWORD PTR es:[edi],dx
  43a62a:	mov    edx,0xab723575
  43a62f:	mov    esp,0xb132dd7b
  43a634:	cld    
  43a635:	mov    ?,WORD PTR [esi]
  43a637:	sub    BYTE PTR [ecx],cl
  43a639:	fiadd  WORD PTR [ebx]
  43a63b:	fcomp  DWORD PTR ds:0x1e9936af
  43a641:	leave  
  43a642:	pop    ebx
  43a643:	cmc    
  43a644:	push   eax
  43a645:	pop    eax
  43a646:	lock cmc 
  43a648:	stc    
  43a649:	(bad)  
  43a64a:	fistp  DWORD PTR [ebp+0x77]
  43a64d:	mov    ebp,0x47e16741
  43a652:	test   al,0x5d
  43a654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a655:	repnz pop ecx
  43a657:	pop    edx
  43a658:	cwde   
  43a659:	test   DWORD PTR [edx+eiz*8-0x1ca808c8],ebx
  43a660:	dec    ebx
  43a661:	or     eax,0xc9611f3
  43a666:	cmp    ch,BYTE PTR [edx+ebx*2-0x5e]
  43a66a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a66b:	int    0x6c
  43a66d:	inc    ebp
  43a66e:	mov    edi,0xe25a6664
  43a673:	aas    
  43a674:	push   eax
  43a675:	and    esp,DWORD PTR [edx]
  43a677:	inc    esi
  43a678:	cs push esi
  43a67a:	fstp   TBYTE PTR [ebp+ebx*4-0x38ea472]
  43a681:	and    BYTE PTR [eax-0x25f7d101],ah
  43a687:	sub    BYTE PTR [edx+0x23],dh
  43a68a:	mov    edi,esp
  43a68c:	fidivr WORD PTR [esi]
  43a68e:	inc    esi
  43a68f:	dec    ecx
  43a690:	or     dl,BYTE PTR [ecx-0x44]
  43a693:	loop   0x43a708
  43a695:	xchg   edi,eax
  43a696:	cdq    
  43a697:	dec    ebx
  43a698:	sti    
  43a699:	stc    
  43a69a:	dec    esi
  43a69b:	mov    cl,0x1e
  43a69d:	aaa    
  43a69e:	or     bl,bl
  43a6a0:	clc    
  43a6a1:	mov    ebx,0x44f30eca
  43a6a6:	bound  ecx,QWORD PTR [edi+esi*8-0x75]
  43a6aa:	pop    ecx
  43a6ab:	push   cs
  43a6ac:	jae    0x43a71c
  43a6ae:	and    al,0x5a
  43a6b0:	sbb    DWORD PTR [edi-0x8],ebp
  43a6b3:	inc    ebp
  43a6b4:	sbb    dh,dh
  43a6b6:	stos   BYTE PTR es:[edi],al
  43a6b7:	shr    BYTE PTR [ecx+0x3e3da0b4],0x86
  43a6be:	sub    ch,ah
  43a6c0:	sbb    al,0x2d
  43a6c2:	(bad)  
  43a6c3:	popa   
  43a6c4:	sbb    WORD PTR [edi+0x61],bp
  43a6c8:	pop    esp
  43a6c9:	jne    0x43a6cc
  43a6cb:	es clc 
  43a6cd:	inc    edi
  43a6ce:	or     edx,DWORD PTR cs:[ebx-0x70d184d]
  43a6d5:	pop    edi
  43a6d6:	pmaxsw mm6,QWORD PTR [ecx]
  43a6d9:	xor    DWORD PTR [ebx+0x2da0e70d],eax
  43a6df:	call   DWORD PTR [ecx]
  43a6e1:	sahf   
  43a6e2:	pop    edx
  43a6e3:	xor    DWORD PTR [eax+0x5d9bf2fd],ecx
  43a6e9:	fistp  QWORD PTR [esi+0x16]
  43a6ec:	pop    eax
  43a6ed:	inc    ecx
  43a6ee:	sbb    esp,DWORD PTR [edx]
  43a6f0:	jecxz  0x43a746
  43a6f2:	jnp    0x43a68e
  43a6f4:	add    ah,BYTE PTR [esi+0x24802011]
  43a6fa:	cmp    esi,DWORD PTR [esi+0x79a56af]
  43a700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a701:	jle    0x43a6e8
  43a703:	inc    ebp
  43a704:	mov    esi,0xc7e866ab
  43a709:	mov    edi,fs
  43a70b:	nop
  43a70c:	mov    edx,DWORD PTR [ecx-0x11fdd8c0]
  43a712:	or     ch,cl
  43a714:	aas    
  43a715:	cmp    eax,0x654630bc
  43a71a:	dec    edi
  43a71b:	in     eax,dx
  43a71c:	clc    
  43a71d:	lock stc 
  43a71f:	mov    esi,0x4f8a1fdd
  43a724:	ja     0x43a6d4
  43a726:	cmp    eax,0x2e6f79d8
  43a72b:	ror    BYTE PTR ds:0xa666ed03,cl
  43a731:	loopne 0x43a735
  43a733:	mov    ss:0xabf6e460,al
  43a739:	mov    eax,ds:0xb25e28fa
  43a73e:	mov    cl,0x33
  43a740:	mov    cl,0x67
  43a742:	mov    eax,ds:0xd98a5b90
  43a747:	dec    eax
  43a748:	ror    DWORD PTR [eax-0x43],1
  43a74b:	mov    esi,DWORD PTR [edi]
  43a74d:	popa   
  43a74e:	icebp  
  43a74f:	dec    edi
  43a750:	xchg   edx,eax
  43a751:	and    ebx,edi
  43a753:	outs   dx,BYTE PTR cs:[esi]
  43a755:	int    0x52
  43a757:	(bad)
  43a75a:	pop    ss
  43a75b:	mov    dl,0x7d
  43a75d:	sbb    ecx,DWORD PTR [esi+0x7]
  43a760:	mov    ebp,0x6eaa672b
  43a765:	and    DWORD PTR [ebp+0x65],eax
  43a768:	dec    esi
  43a769:	fsubp  st(5),st
  43a76b:	pop    ecx
  43a76c:	sahf   
  43a76d:	arpl   WORD PTR [eax+0x75],bx
  43a770:	xchg   edx,eax
  43a771:	adc    bh,BYTE PTR [edx+ebx*4]
  43a774:	fisub  DWORD PTR [eax+0x2cdfd9d7]
  43a77a:	sahf   
  43a77b:	sub    dh,al
  43a77d:	jl     0x43a7c4
  43a77f:	dec    edi
  43a780:	and    eax,0x3d1014f7
  43a785:	dec    ebp
  43a786:	sar    DWORD PTR [edx],1
  43a788:	xchg   ebp,eax
  43a789:	call   0x7da52a8a
  43a78e:	or     BYTE PTR [edx+ebp*1+0x10],al
  43a792:	lods   eax,DWORD PTR ds:[esi]
  43a793:	push   edx
  43a794:	xchg   esp,eax
  43a795:	jge    0x43a763
  43a797:	icebp  
  43a798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a799:	pop    edx
  43a79a:	jp     0x43a79a
  43a79c:	fcomp  DWORD PTR [edx-0x4e]
  43a79f:	cmp    DWORD PTR [edi-0x1c82e603],esp
  43a7a5:	daa    
  43a7a6:	int3   
  43a7a7:	(bad)  
  43a7a9:	outs   dx,DWORD PTR ds:[esi]
  43a7aa:	pop    edi
  43a7ab:	sti    
  43a7ac:	pop    ss
  43a7ad:	rcr    BYTE PTR ds:0xc2a1,cl
  43a7b2:	stos   BYTE PTR es:[edi],al
  43a7b3:	add    bl,0x7
  43a7b6:	mov    al,ds:0x8311b900
  43a7bb:	mov    fs,WORD PTR [esi-0x32]
  43a7be:	stc    
  43a7bf:	fstp   QWORD PTR [esi-0x7e]
  43a7c2:	sbb    esp,esi
  43a7c4:	mov    eax,0xd8729e76
  43a7c9:	aam    0x25
  43a7cb:	fidiv  DWORD PTR [eax+eax*2-0x60c76113]
  43a7d2:	pop    esp
  43a7d3:	outs   dx,DWORD PTR ds:[esi]
  43a7d4:	out    dx,eax
  43a7d5:	mov    edi,0xb0c2aea0
  43a7da:	push   ecx
  43a7db:	mov    edx,0x87d5038a
  43a7e0:	cmp    ecx,DWORD PTR [ebp+0x62ffede9]
  43a7e6:	sub    al,0xc1
  43a7e8:	xchg   BYTE PTR [edx],ch
  43a7ea:	add    ch,BYTE PTR [eax+ebx*1+0x7f]
  43a7ee:	or     edi,esp
  43a7f0:	adc    dl,BYTE PTR [ecx-0x3e]
  43a7f3:	mov    DWORD PTR [esi],ebx
  43a7f5:	and    eax,0xbd0ba626
  43a7fa:	call   0xc9ac:0x4b46a001
  43a801:	pushf  
  43a802:	lods   al,BYTE PTR ds:[esi]
  43a803:	mov    esp,0x4c5c0fdc
  43a808:	gs aad 0xe8
  43a80b:	mov    eax,ds:0x250ea8a7
  43a810:	mov    al,0x8c
  43a812:	mov    edx,ds
  43a814:	xchg   ebx,eax
  43a815:	out    dx,al
  43a816:	inc    esi
  43a817:	fiadd  WORD PTR ds:0xfe319881
  43a81d:	adc    al,0x99
  43a81f:	inc    esp
  43a820:	push   ds
  43a821:	or     BYTE PTR [esi],ah
  43a823:	sbb    BYTE PTR [ebp+0x31a4b9bd],dl
  43a829:	add    eax,0x518677ca
  43a82e:	xchg   edx,ecx
  43a830:	push   ebx
  43a831:	mul    BYTE PTR [eax-0x7f6ce1ec]
  43a837:	fnstsw WORD PTR es:[ecx-0x478e1a96]
  43a83e:	add    esi,DWORD PTR ds:0x1005e934
  43a844:	call   0xc964e9bd
  43a849:	jo     0x43a83d
  43a84b:	pop    ecx
  43a84c:	pop    es
  43a84d:	leave  
  43a84e:	xor    edx,0x23b80324
  43a854:	leave  
  43a855:	dec    esp
  43a856:	cmp    DWORD PTR [edi],esi
  43a858:	pusha  
  43a859:	mov    ds:0x19cbfe8a,eax
  43a85e:	lds    ebx,FWORD PTR [ebp+0x1bb7feec]
  43a864:	in     al,0xef
  43a866:	loopne 0x43a8e3
  43a868:	mov    ecx,0x5c0f6e42
  43a86d:	add    BYTE PTR [esi+ecx*1-0x322a3f03],ah
  43a874:	rol    DWORD PTR [ebx],1
  43a876:	nop
  43a877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a878:	add    esp,DWORD PTR [edx-0x79feb065]
  43a87e:	shl    dh,1
  43a880:	xchg   ebp,eax
  43a881:	add    ecx,0x7ac360cd
  43a887:	push   0x6b13bc96
  43a88c:	sti    
  43a88d:	retf   0xa2c3
  43a890:	cwde   
  43a891:	sbb    al,0xaf
  43a893:	add    eax,0xa4d205a8
  43a898:	jge    0x43a88b
  43a89a:	(bad)  
  43a89b:	jmp    0xeed8:0x77a0a245
  43a8a2:	xchg   ebp,eax
  43a8a3:	lea    ecx,[ebx-0x62e524cb]
  43a8a9:	and    DWORD PTR [esi],ebx
  43a8ab:	pop    ecx
  43a8ac:	inc    ecx
  43a8ad:	hlt    
  43a8ae:	pop    ecx
  43a8af:	mov    bh,0xe8
  43a8b1:	push   edi
  43a8b2:	out    0xe0,al
  43a8b4:	and    ah,BYTE PTR [ebx]
  43a8b6:	add    eax,0x119aeda1
  43a8bb:	jecxz  0x43a916
  43a8bd:	push   esp
  43a8be:	aaa    
  43a8bf:	pop    ds
  43a8c0:	cmp    al,0x51
  43a8c2:	push   esp
  43a8c3:	pusha  
  43a8c4:	in     al,0xf
  43a8c6:	rcl    BYTE PTR [eax+0x2e],0xa5
  43a8ca:	inc    esi
  43a8cb:	test   DWORD PTR [esi-0x3474fe7c],ecx
  43a8d1:	dec    esp
  43a8d2:	jnp    0x43a918
  43a8d4:	(bad)  
  43a8d5:	push   es
  43a8d6:	(bad)  
  43a8d7:	pop    edx
  43a8d8:	pop    esp
  43a8d9:	lahf   
  43a8da:	xchg   edi,eax
  43a8db:	outs   dx,DWORD PTR ds:[esi]
  43a8dc:	(bad)  
  43a8dd:	mov    BYTE PTR [edx-0x54c00e1f],ch
  43a8e3:	in     al,0x73
  43a8e5:	pop    ecx
  43a8e6:	pop    ebx
  43a8e7:	es push edx
  43a8e9:	inc    eax
  43a8ea:	loopne 0x43a8f6
  43a8ec:	fistp  QWORD PTR [eax+0x35945320]
  43a8f2:	(bad)  
  43a8f3:	push   0x2632ad3c
  43a8f8:	add    al,0xff
  43a8fb:	xchg   edx,eax
  43a8fc:	gs mov ah,0xf4
  43a8ff:	js     0x43a896
  43a901:	cmp    DWORD PTR [edx+eax*4-0x7efadb52],eax
  43a908:	add    ebp,DWORD PTR [ebp+0x38]
  43a90b:	pop    esp
  43a90c:	mov    bh,0xa3
  43a90e:	fcomp  QWORD PTR [eax]
  43a910:	cmp    al,BYTE PTR [ebp+0x68]
  43a913:	xchg   esi,eax
  43a914:	clc    
  43a915:	imul   ebx,DWORD PTR [edi],0x2a2b3267
  43a91b:	jns    0x43a904
  43a91d:	repnz test edx,ecx
  43a920:	sub    bl,al
  43a922:	ss loope 0x43a992
  43a925:	lods   eax,DWORD PTR ds:[esi]
  43a926:	mov    ebp,0x73035b0f
  43a92b:	add    BYTE PTR cs:[edx],dh
  43a92e:	test   edx,ebx
  43a930:	dec    edx
  43a931:	and    DWORD PTR [ecx-0x550cc21],0x9
  43a938:	sub    BYTE PTR [ecx+0x3ab47018],al
  43a93e:	mov    ch,0xb6
  43a940:	mov    ebp,edx
  43a942:	push   ecx
  43a943:	rol    BYTE PTR [ecx+edi*4+0x9],1
  43a947:	jecxz  0x43a942
  43a949:	jae    0x43a980
  43a94b:	(bad)  
  43a94c:	ficomp WORD PTR [ecx+ebx*1-0x777586d1]
  43a953:	mov    WORD PTR [ebp-0xb],?
  43a956:	lds    esp,FWORD PTR [edx]
  43a958:	sbb    dl,ch
  43a95a:	ds stos BYTE PTR es:[edi],al
  43a95c:	std    
  43a95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a95e:	pop    esi
  43a95f:	xchg   BYTE PTR [ebp-0x7f08423c],ah
  43a965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a966:	or     DWORD PTR [eax-0x77afbbab],ecx
  43a96c:	je     0x43a935
  43a96e:	aas    
  43a96f:	mov    eax,0x94183c2b
  43a974:	ins    BYTE PTR es:[edi],dx
  43a975:	cmp    edx,eax
  43a977:	pop    ebp
  43a978:	pop    ss
  43a979:	les    ecx,FWORD PTR [edx]
  43a97b:	mov    edi,edx
  43a97d:	cwde   
  43a97e:	mov    eax,0x5797066
  43a983:	sub    eax,0x7d794032
  43a988:	xor    eax,0x234e53f5
  43a98d:	pop    ss
  43a98e:	inc    edi
  43a98f:	fistp  QWORD PTR [edi+0x72]
  43a992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a993:	jns    0x43a9ce
  43a995:	sbb    edx,ebp
  43a997:	mov    eax,0xce1950f3
  43a99c:	cmp    DWORD PTR [ecx+0x39],ebx
  43a99f:	jge    0x43a988
  43a9a1:	outs   dx,DWORD PTR ds:[esi]
  43a9a2:	jmp    0x43a99b
  43a9a4:	fiadd  WORD PTR [ecx+ebx*4-0x6c3e06a6]
  43a9ab:	inc    esp
  43a9ac:	outs   dx,DWORD PTR ds:[esi]
  43a9ad:	mov    ch,0x36
  43a9af:	and    ch,ah
  43a9b1:	(bad)  
  43a9b2:	xchg   ebx,eax
  43a9b3:	aad    0x34
  43a9b5:	addr16 inc ebx
  43a9b7:	dec    eax
  43a9b8:	scas   al,BYTE PTR es:[edi]
  43a9b9:	adc    dl,cl
  43a9bb:	xchg   ecx,eax
  43a9bc:	iret   
  43a9bd:	rol    DWORD PTR [ebp+0x6083e04c],0xc2
  43a9c4:	out    dx,al
  43a9c5:	jne    0x43a975
  43a9c7:	in     eax,dx
  43a9c8:	fstp   QWORD PTR [ebp-0x144b840b]
  43a9ce:	rol    BYTE PTR [ecx+0x43],0x6b
  43a9d2:	jns    0x43aa1f
  43a9d4:	mov    esp,0xb8339e09
  43a9d9:	les    ebp,FWORD PTR [eax-0x257a3a20]
  43a9df:	adc    al,cl
  43a9e1:	sti    
  43a9e2:	push   cs
  43a9e3:	in     al,0x4b
  43a9e5:	jle    0x43a9f0
  43a9e7:	or     BYTE PTR [ecx],bh
  43a9e9:	or     BYTE PTR [esi],dl
  43a9eb:	push   0x4e38fef9
  43a9f0:	ds sub eax,0xd3af4790
  43a9f6:	pop    ecx
  43a9f7:	ret    0xec71
  43a9fa:	or     cl,ch
  43a9fc:	retf   0x30e8
  43a9ff:	loope  0x43aa1a
  43aa01:	push   0xffffff98
  43aa03:	add    DWORD PTR ds:0xf9f96356,ecx
  43aa09:	inc    ebp
  43aa0a:	push   0x9c5b1510
  43aa0f:	loop   0x43aa59
  43aa11:	cwde   
  43aa12:	sub    dl,BYTE PTR [eax]
  43aa14:	arpl   WORD PTR [ebx],sp
  43aa16:	pop    ebx
  43aa17:	cmp    bl,dl
  43aa19:	add    al,al
  43aa1b:	popa   
  43aa1c:	sbb    bl,BYTE PTR [ebp+eax*2-0x7cb1c011]
  43aa23:	adc    eax,DWORD PTR [edx-0x54]
  43aa26:	jae    0x43aa60
  43aa28:	push   edi
  43aa29:	xchg   edx,eax
  43aa2a:	cmp    edx,esi
  43aa2c:	mov    bl,0x5
  43aa2e:	dec    ebx
  43aa2f:	add    al,0x1a
  43aa31:	fild   WORD PTR [eax+0x21]
  43aa34:	bound  ebx,QWORD PTR [ebp+0x34]
  43aa37:	sbb    al,0x7b
  43aa39:	push   esi
  43aa3a:	sar    ch,0x8c
  43aa3d:	mov    edi,0x970153bc
  43aa42:	stos   BYTE PTR es:[edi],al
  43aa43:	push   0x6729db2e
  43aa48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aa49:	pop    esi
  43aa4a:	fmul   DWORD PTR [eax+ecx*4+0x45]
  43aa4e:	mov    edi,0x7f446032
  43aa53:	pop    edi
  43aa54:	cmp    BYTE PTR [eax],dl
  43aa56:	call   0xad2f:0x48c60124
  43aa5d:	jp     0x43aa2b
  43aa5f:	sub    al,0x8
  43aa61:	aas    
  43aa62:	jge    0x43aa52
  43aa64:	mov    eax,ds:0xc9700883
  43aa69:	cmp    ebx,DWORD PTR [ebx-0x6a]
  43aa6c:	in     al,dx
  43aa6d:	popa   
  43aa6e:	xchg   ebx,eax
  43aa6f:	adc    edi,DWORD PTR [edx+0x2a08d58a]
  43aa75:	cmp    BYTE PTR [ebp-0x5834f563],cl
  43aa7b:	je     0x43aaf5
  43aa7d:	or     BYTE PTR [ecx+ebp*1+0x10e00398],ch
  43aa84:	lds    esi,FWORD PTR ds:0xdf3f8053
  43aa8a:	add    DWORD PTR [ecx],ebx
  43aa8c:	sbb    al,ah
  43aa8e:	mov    al,0x63
  43aa90:	adc    al,0x1
  43aa92:	test   DWORD PTR [ebp+0x58bcbc76],esp
  43aa98:	(bad)  
  43aa99:	fsub   QWORD PTR [ebx+0x7c164121]
  43aa9f:	test   eax,0x6b0833ff
  43aaa4:	xor    eax,0xe42b308d
  43aaa9:	loope  0x43aae8
  43aaab:	sbb    eax,0xeeb6e8b5
  43aab0:	mov    eax,0x162f01d7
  43aab5:	mov    fs,WORD PTR [ebx-0x4]
  43aab8:	jmp    0x3b55f2fc
  43aabd:	sub    DWORD PTR [ebp-0x80],ebp
  43aac0:	mov    al,0xb1
  43aac2:	inc    ah
  43aac4:	mov    ds:0x62988876,al
  43aac9:	mov    ds:0x517d1a05,al
  43aace:	add    bl,0xd4
  43aad1:	and    BYTE PTR [eax+0x578f372f],ch
  43aad7:	rcr    cl,1
  43aad9:	sbb    DWORD PTR [eax],ebx
  43aadb:	dec    esi
  43aadc:	pop    esi
  43aade:	xchg   esi,eax
  43aadf:	lahf   
  43aae0:	rcr    DWORD PTR [eax-0x19],0x84
  43aae4:	mov    ch,0x90
  43aae6:	push   cs
  43aae7:	and    eax,0x73a0eb97
  43aaec:	or     edi,DWORD PTR [esi+ebx*4-0x28]
  43aaf0:	adc    al,0x73
  43aaf2:	stos   DWORD PTR es:[edi],eax
  43aaf3:	inc    esp
  43aaf4:	mov    eax,0x745ed759
  43aaf9:	mov    edx,0x4785968e
  43aafe:	jno    0x43aa89
  43ab00:	mov    esi,0xc0b244b3
  43ab05:	xchg   bl,bl
  43ab07:	leave  
  43ab08:	je     0x43aacc
  43ab0a:	mov    ecx,0x94433fa4
  43ab0f:	dec    ebx
  43ab10:	mov    ebx,0xe9477017
  43ab15:	add    dl,cl
  43ab17:	xchg   ebx,eax
  43ab18:	fstp   DWORD PTR [edi+ebx*1+0x5925d60]
  43ab1f:	dec    eax
  43ab20:	inc    esp
  43ab21:	xor    eax,0xa2b383bd
  43ab26:	dec    ebx
  43ab27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ab28:	mov    ebx,0xb0d77549
  43ab2d:	sub    ebx,DWORD PTR [ebp-0xf]
  43ab30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab31:	pusha  
  43ab32:	pushf  
  43ab33:	popf   
  43ab34:	mov    ecx,0x5da57326
  43ab39:	or     BYTE PTR [eax+0x53c828f],0x25
  43ab40:	xor    esi,edx
  43ab42:	jl     0x43aaf6
  43ab44:	sahf   
  43ab45:	(bad)  
  43ab46:	pusha  
  43ab47:	xchg   edi,eax
  43ab48:	add    eax,0x2f004ae0
  43ab4d:	shl    BYTE PTR [edi],0xb6
  43ab50:	jmp    FWORD PTR [ebp-0x74]
  43ab53:	bound  ebx,QWORD PTR [esi]
  43ab55:	inc    ecx
  43ab56:	add    ebp,DWORD PTR [edi]
  43ab58:	rol    eax,cl
  43ab5a:	jmp    0xca02:0x5bc46a10
  43ab61:	jecxz  0x43ab22
  43ab63:	pop    ss
  43ab64:	in     al,dx
  43ab65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab66:	fdivr  QWORD PTR [edi-0x4d]
  43ab69:	sub    BYTE PTR [esi-0x69],0x41
  43ab6d:	cmp    DWORD PTR [edx+0x7c6e2d8b],ebx
  43ab73:	push   cs
  43ab74:	cdq    
  43ab75:	mov    ds:0x8eff573a,al
  43ab7a:	pop    eax
  43ab7b:	sbb    al,0x99
  43ab7d:	or     al,0xe
  43ab7f:	jge    0x43abe8
  43ab81:	mov    cl,0x15
  43ab83:	addr16 addr16 sti 
  43ab86:	adc    al,0x33
  43ab88:	mov    ds:0x84de0c68,eax
  43ab8d:	dec    edi
  43ab8e:	push   DWORD PTR [ecx]
  43ab90:	sub    DWORD PTR [esi+0x1a],edx
  43ab93:	adc    ch,bl
  43ab95:	call   0x60f71d57
  43ab9a:	add    ch,al
  43ab9c:	mov    es,WORD PTR [ecx]
  43ab9e:	cmp    eax,0x5efb8449
  43aba3:	sbb    BYTE PTR [esi+0x52],bh
  43aba6:	into   
  43aba7:	stos   DWORD PTR es:[edi],eax
  43aba8:	fwait
  43aba9:	and    al,0x54
  43abab:	xchg   esp,eax
  43abac:	mov    bl,0x9b
  43abae:	inc    ebx
  43abaf:	mov    ah,0xdc
  43abb1:	or     esp,eax
  43abb3:	sbb    DWORD PTR [ebp+0x344c62ac],edi
  43abb9:	xchg   BYTE PTR [ecx],dh
  43abbb:	and    ch,cl
  43abbd:	nop
  43abbe:	psubb  mm6,mm4
  43abc1:	nop    DWORD PTR [ebp-0x60]
  43abc5:	dec    esi
  43abc6:	mov    edx,DWORD PTR [ebx+edi*2]
  43abc9:	inc    ebx
  43abca:	sahf   
  43abcb:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43abcd:	idiv   BYTE PTR [edx-0x4]
  43abd0:	cmp    BYTE PTR ds:0xbff60455,dl
  43abd6:	dec    BYTE PTR [ebp+0x70ba6636]
  43abdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43abdd:	ret    0x520c
  43abe0:	cld    
  43abe1:	pop    edi
  43abe2:	xchg   ebp,eax
  43abe3:	and    esi,esp
  43abe5:	jmp    0x4d97:0xf41402
  43abec:	inc    esi
  43abed:	xchg   edi,eax
  43abee:	lock sbb eax,0x7075aa1
  43abf4:	icebp  
  43abf5:	or     edi,0xe7fef6bb
  43abfb:	push   ds
  43abfc:	loope  0x43abc5
  43abfe:	sbb    DWORD PTR [esi+0x75274976],esp
  43ac04:	in     al,dx
  43ac05:	mov    ds:0x4f4fbf66,al
  43ac0a:	aaa    
  43ac0b:	mov    ds:0x9e29e4c9,al
  43ac10:	je     0x43ac37
  43ac12:	pop    ss
  43ac13:	sti    
  43ac14:	pushf  
  43ac15:	pop    ebp
  43ac16:	and    BYTE PTR [eax-0x75],ch
  43ac19:	or     BYTE PTR [ebx],bl
  43ac1b:	mov    BYTE PTR [edi+0xfcd6e46],cl
  43ac21:	fnsavew [bx+si]
  43ac25:	stc    
  43ac26:	or     bh,BYTE PTR [eax+esi*4+0x5a90209f]
  43ac2d:	pop    esi
  43ac2e:	lea    ebp,[eax+eiz*2]
  43ac31:	hlt    
  43ac32:	lds    edx,FWORD PTR [ebx-0x154c3c7f]
  43ac38:	push   es
  43ac39:	xor    eax,0x24fb8c14
  43ac3e:	inc    ebp
  43ac3f:	call   0x9c0be787
  43ac44:	jns    0x43abe9
  43ac46:	in     al,0x9d
  43ac48:	bound  edx,QWORD PTR [edx]
  43ac4a:	pop    ecx
  43ac4b:	scas   al,BYTE PTR es:[edi]
  43ac4c:	push   cs
  43ac4d:	daa    
  43ac4e:	jge    0x43ac36
  43ac50:	xor    dh,BYTE PTR [eax+0x7a34510d]
  43ac56:	mov    ds,WORD PTR [esi]
  43ac58:	mov    dl,0xbc
  43ac5a:	cdq    
  43ac5b:	or     al,0x2f
  43ac5d:	inc    edx
  43ac5e:	xchg   DWORD PTR [eax],esp
  43ac60:	ficomp WORD PTR [esi+0x691b3e64]
  43ac66:	ins    BYTE PTR es:[edi],dx
  43ac67:	mov    ebx,edx
  43ac69:	in     al,dx
  43ac6a:	and    ch,BYTE PTR [edi-0x1b5efe7b]
  43ac70:	pop    ebx
  43ac71:	test   eax,0x29771249
  43ac76:	je     0x43ac7f
  43ac78:	aam    0x51
  43ac7a:	xchg   DWORD PTR [ecx+0x4],eax
  43ac7d:	in     eax,0x63
  43ac7f:	(bad)  [si+0x2065]
  43ac84:	add    esp,DWORD PTR gs:[ecx+0x251ae77d]
  43ac8b:	daa    
  43ac8c:	in     al,dx
  43ac8d:	inc    esp
  43ac8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac8f:	jle    0x43ac5f
  43ac91:	(bad)  
  43ac92:	call   0x84e88ab4
  43ac97:	and    al,0x18
  43ac99:	add    bl,BYTE PTR [ebp-0x5c]
  43ac9c:	adc    esp,esp
  43ac9e:	(bad)  
  43ac9f:	xchg   esi,eax
  43aca0:	cmp    DWORD PTR [edx],ecx
  43aca2:	pop    ebp
  43aca3:	mov    bh,BYTE PTR [edi]
  43aca5:	fnstsw WORD PTR [esi-0x19]
  43aca8:	sub    edx,DWORD PTR [ecx+ecx*8+0x68]
  43acac:	inc    ecx
  43acad:	xchg   esp,eax
  43acae:	mov    ecx,0xd1d0404d
  43acb3:	sar    DWORD PTR [ebx+edi*2+0x3e3fab04],0xf7
  43acbb:	sub    DWORD PTR [edx],esp
  43acbd:	addr16 sbb cl,ch
  43acc0:	and    eax,0x8b92af45
  43acc5:	xor    al,0x1c
  43acc7:	adc    DWORD PTR [esp+edx*2+0x12],eax
  43accb:	pop    es
  43accc:	scas   eax,DWORD PTR es:[edi]
  43accd:	adc    eax,0x3113efb8
  43acd2:	add    BYTE PTR [esi+0x1f3567a2],bh
  43acd8:	punpcklbw mm6,DWORD PTR [edx]
  43acdb:	sub    eax,0x21f13094
  43ace0:	mov    ecx,0xcb378c87
  43ace5:	shr    DWORD PTR [esi],cl
  43ace7:	or     eax,ecx
  43ace9:	mov    dh,0x85
  43aceb:	xor    BYTE PTR [edi+0x8c6365a],ch
  43acf1:	pop    esi
  43acf2:	retf   
  43acf3:	jne    0x43acb0
  43acf5:	loope  0x43ac8b
  43acf7:	popf   
  43acf8:	mov    bl,BYTE PTR [edi+0x1973b8f9]
  43acfe:	fwait
  43acff:	mul    DWORD PTR [edx+0xfe3d54e]
  43ad05:	stos   DWORD PTR es:[edi],eax
  43ad06:	mov    esp,0xd0e43ca5
  43ad0b:	or     eax,0x4d94f4b5
  43ad10:	jge    0x43ad7d
  43ad12:	or     DWORD PTR [ebp-0x7829c7cb],0x5fc9eea0
  43ad1c:	ds mov eax,0x19d264ee
  43ad22:	mov    dl,0x1b
  43ad24:	stc    
  43ad25:	in     al,dx
  43ad26:	(bad)  
  43ad27:	jmp    0x43ad4b
  43ad29:	xchg   BYTE PTR [edi],dl
  43ad2b:	mov    al,ds:0x647cc3a6
  43ad30:	pop    ecx
  43ad31:	das    
  43ad32:	adc    DWORD PTR [ebx+ecx*1],eax
  43ad35:	cmp    al,0xbc
  43ad37:	xor    dh,BYTE PTR [edi-0x7d51df93]
  43ad3d:	sub    edx,ebp
  43ad3f:	imul   BYTE PTR [edi]
  43ad41:	aam    0x19
  43ad43:	push   edx
  43ad44:	sbb    bh,BYTE PTR [esi-0x16847b18]
  43ad4a:	xor    ah,BYTE PTR [eax]
  43ad4c:	addr16 sub eax,ecx
  43ad4f:	cwde   
  43ad50:	nop
  43ad51:	jno    0x43ad6c
  43ad53:	out    0xf3,eax
  43ad55:	pusha  
  43ad56:	pop    es
  43ad57:	dec    ebp
  43ad58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ad59:	push   0x720765c
  43ad5e:	mov    dl,0xf9
  43ad60:	or     BYTE PTR [eax],al
  43ad62:	stc    
  43ad63:	push   ebx
  43ad64:	jmp    0x43ad6d
  43ad66:	jne    0x43ad76
  43ad68:	fistp  QWORD PTR [edi-0x644ddeed]
  43ad6e:	ret    
  43ad6f:	ret    0x30e6
  43ad72:	cmp    al,0x34
  43ad74:	jbe    0x43ad43
  43ad76:	sub    BYTE PTR [esi],bl
  43ad78:	sar    DWORD PTR [eax*8+0x45ff5355],1
  43ad7f:	gs jno 0x43adb9
  43ad82:	std    
  43ad83:	ror    ecx,cl
  43ad85:	mov    dl,0xe9
  43ad87:	jg     0x43ad93
  43ad89:	retf   
  43ad8a:	mov    bh,0xe7
  43ad8c:	adc    edx,DWORD PTR [eax+eiz*8]
  43ad8f:	cmp    bh,BYTE PTR [edi-0xc]
  43ad92:	or     al,0x74
  43ad94:	mov    ebp,0x13026c96
  43ad99:	std    
  43ad9a:	jle    0x43ad8d
  43ad9c:	inc    eax
  43ad9d:	sub    ebp,DWORD PTR [eax-0x6]
  43ada0:	jg     0x43ad7b
  43ada2:	btc    DWORD PTR [edx-0x1c5d63c3],ebx
  43ada9:	lea    ebp,cs:[ebx]
  43adac:	adc    bl,BYTE PTR [edx+ebp*4-0x7abf0737]
  43adb3:	arpl   WORD PTR [edx+ebx*4+0x35292847],bx
  43adba:	add    BYTE PTR [esi+edi*8+0x78],dh
  43adbe:	inc    esp
  43adbf:	mov    al,0x31
  43adc1:	rcl    DWORD PTR [ebx],0x61
  43adc4:	out    0x9d,eax
  43adc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43adc7:	outs   dx,BYTE PTR ds:[esi]
  43adc8:	repnz ins DWORD PTR es:[edi],dx
  43adca:	mov    edx,0x299adea9
  43adcf:	sub    eax,0xd76205c6
  43add4:	jmp    0x43ade0
  43add6:	bound  esi,QWORD PTR [ebp-0x580eaab3]
  43addc:	dec    esi
  43addd:	in     eax,dx
  43adde:	mov    ch,BYTE PTR [ebx+0x4c39d451]
  43ade4:	sbb    BYTE PTR [eax+0x7ee3800d],0x76
  43adeb:	test   al,0x4b
  43aded:	cmp    DWORD PTR [edi],ebp
  43adef:	(bad)  
  43adf0:	fucomi st,st(0)
  43adf2:	jbe    0x43ade3
  43adf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43adf5:	jmp    0x872d26ce
  43adfa:	xchg   esp,eax
  43adfb:	cmp    edx,esp
  43adfd:	hlt    
  43adfe:	cmp    dh,BYTE PTR [esi]
  43ae00:	cwde   
  43ae01:	cmp    DWORD PTR [ebx-0x5a],0xffffff91
  43ae05:	fdivr  DWORD PTR [esi]
  43ae07:	mov    ch,0x39
  43ae09:	pop    edx
  43ae0a:	xor    dh,dh
  43ae0c:	sub    ecx,DWORD PTR [ecx]
  43ae0e:	pop    ss
  43ae0f:	retf   0x5254
  43ae12:	test   al,0xe1
  43ae14:	(bad)  
  43ae15:	(bad)  
  43ae16:	sub    DWORD PTR [esi+esi*4-0x85bdf2],esi
  43ae1d:	in     al,dx
  43ae1e:	fs pop ds
  43ae20:	dec    edi
  43ae21:	and    eax,0x594ddaf7
  43ae26:	xchg   edx,eax
  43ae27:	dec    ebx
  43ae28:	retf   0xa94d
  43ae2b:	and    DWORD PTR [eax],edi
  43ae2d:	popa   
  43ae2e:	adc    al,0xa
  43ae30:	out    dx,eax
  43ae31:	mov    al,ds:0x23726d77
  43ae36:	(bad)  
  43ae37:	push   0xffffffd9
  43ae39:	mov    BYTE PTR [edi-0x1ab15686],ch
  43ae3f:	inc    edx
  43ae40:	call   0x258193b2
  43ae45:	xabort 0x15
  43ae48:	mov    ebp,0x16000e0d
  43ae4d:	xchg   esp,edx
  43ae4f:	add    al,0x15
  43ae51:	fnstenv [ecx+0x5874b7e1]
  43ae57:	(bad)  
  43ae58:	out    dx,eax
  43ae59:	inc    edi
  43ae5a:	lods   eax,DWORD PTR ds:[esi]
  43ae5b:	or     al,0x64
  43ae5d:	mov    bh,0x13
  43ae5f:	cmp    eax,ecx
  43ae61:	mov    dh,BYTE PTR [eax-0x2169cc78]
  43ae67:	or     edx,edi
  43ae69:	xchg   esi,eax
  43ae6a:	fdiv   st,st(1)
  43ae6c:	cld    
  43ae6d:	add    DWORD PTR [edi+edi*4+0x61],0xffffffa2
  43ae72:	sub    ebp,esi
  43ae74:	mov    DWORD PTR [ebp+0x44041aac],edi
  43ae7a:	lahf   
  43ae7b:	sub    dh,BYTE PTR ss:[edi+0x666d2409]
  43ae82:	adc    eax,0x7ed90fa8
  43ae87:	mov    edx,0x7e1a3c10
  43ae8c:	adc    ebp,DWORD PTR [edx]
  43ae8e:	jmp    0xb58b:0xab680b07
  43ae95:	fldlg2 
  43ae97:	pop    es
  43ae98:	out    dx,eax
  43ae99:	push   ss
  43ae9a:	ss mov eax,0xe5942b79
  43aea0:	fbstp  TBYTE PTR [esi+0x48d357cd]
  43aea6:	xchg   ebp,eax
  43aea7:	pop    ebp
  43aea8:	ja     0x43ae39
  43aeaa:	push   es
  43aeab:	mov    ecx,0xf8a611b5
  43aeb0:	jns    0x43af30
  43aeb2:	and    ebp,ebp
  43aeb4:	pop    ebp
  43aeb5:	nop
  43aeb6:	or     al,0x39
  43aeb8:	(bad)  
  43aeb9:	xchg   ecx,eax
  43aeba:	jmp    0x43aed1
  43aebc:	ss pop edx
  43aebe:	pop    esi
  43aebf:	sti    
  43aec0:	mov    esi,0xab9eea3b
  43aec5:	inc    ecx
  43aec6:	xchg   edx,eax
  43aec7:	(bad)  
  43aec8:	addr16 hlt 
  43aeca:	sub    DWORD PTR [esi+edx*4],ebx
  43aecd:	xchg   esp,eax
  43aece:	jle    0x43aef2
  43aed0:	std    
  43aed1:	jne    0x43aea5
  43aed3:	mov    dh,0xbd
  43aed5:	ds dec edx
  43aed7:	test   eax,0xba213cf
  43aedc:	inc    ebp
  43aedd:	mov    al,ds:0xa5f02fd2
  43aee2:	imul   esp,edx,0x76afaa6f
  43aee8:	jns    0x43af40
  43aeea:	out    0xc5,al
  43aeec:	xor    DWORD PTR [edx],esp
  43aeee:	jne    0x43ae87
  43aef0:	aas    
  43aef1:	in     al,dx
  43aef2:	outs   dx,DWORD PTR ds:[esi]
  43aef3:	add    cl,cl
  43aef5:	ds dec esi
  43aef7:	jge    0x43ae7c
  43aef9:	aad    0x65
  43aefb:	and    DWORD PTR [esi],eax
  43aefd:	mov    dl,BYTE PTR [esi]
  43aeff:	data16 ja 0x43af7b
  43af02:	nop
  43af03:	out    0x25,eax
  43af05:	(bad)  
  43af06:	mov    WORD PTR [ebp-0x18ae8213],ss
  43af0c:	pop    eax
  43af0d:	jno    0x43af5b
  43af0f:	das    
  43af10:	popf   
  43af11:	iret   
  43af12:	jp     0x43af33
  43af14:	mov    cl,ch
  43af16:	jl     0x43af96
  43af18:	mov    esi,0x7fabe19c
  43af1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43af1e:	mov    fs,WORD PTR [eax-0x5cd471af]
  43af24:	xor    dl,0xb8
  43af27:	jne    0x43aee0
  43af29:	xchg   DWORD PTR [edi],eax
  43af2b:	lods   al,BYTE PTR ds:[esi]
  43af2c:	xor    ecx,edi
  43af2e:	cmp    BYTE PTR [ebx-0x54f87d38],0x2
  43af35:	push   ebx
  43af36:	jns    0x43afa6
  43af38:	adc    ah,BYTE PTR [eax+ebp*8-0x41c40885]
  43af3f:	jmp    FWORD PTR [ebx]
  43af41:	repnz test DWORD PTR [ebp+0x24],ebx
  43af45:	pop    edi
  43af46:	push   esi
  43af47:	ror    bh,1
  43af49:	xchg   dl,dh
  43af4b:	pop    ss
  43af4c:	xchg   ebx,eax
  43af4d:	fcomp  QWORD PTR [edi+0x1edae4a0]
  43af53:	ja     0x43afd3
  43af55:	scas   al,BYTE PTR es:[edi]
  43af56:	add    ecx,DWORD PTR [ecx+0x54ef08f0]
  43af5c:	leave  
  43af5d:	jns    0x43afbb
  43af5f:	arpl   di,si
  43af61:	fnstcw WORD PTR [ebp-0x445d9f45]
  43af67:	gs addr16 jl 0x43af4d
  43af6b:	mov    edi,cs
  43af6d:	nop
  43af6e:	fs push ebp
  43af70:	sub    BYTE PTR [eax+esi*2-0x1c034dae],bh
  43af77:	mov    al,ds:0x8d126062
  43af7c:	add    esp,edi
  43af7e:	add    eax,0x8c17aa94
  43af83:	adc    al,0x53
  43af85:	push   ebp
  43af86:	ret    
  43af87:	pop    es
  43af88:	sbb    BYTE PTR [edx+0x6d],ah
  43af8b:	sub    eax,0xfb276535
  43af90:	push   ebp
  43af91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43af92:	mov    es,esi
  43af94:	outs   dx,BYTE PTR ds:[esi]
  43af95:	in     eax,0xaa
  43af97:	retf   0x3896
  43af9a:	pop    ds
  43af9b:	xchg   ecx,eax
  43af9c:	adc    BYTE PTR [ebp+edi*4-0x694c88e2],0x1d
  43afa4:	pusha  
  43afa5:	xor    esi,DWORD PTR [edx-0x116e9027]
  43afab:	fstp   QWORD PTR [edx+0x7d36d694]
  43afb1:	pop    edi
  43afb2:	xchg   edx,eax
  43afb3:	test   DWORD PTR [eax+0xd],0xfd8b73a9
  43afba:	jb     0x43b01d
  43afbc:	and    DWORD PTR [edx+0x30],ecx
  43afbf:	fild   QWORD PTR [edx]
  43afc1:	sbb    DWORD PTR [ecx-0x8],edi
  43afc4:	sub    BYTE PTR [ecx+0x3c1775d3],0x39
  43afcb:	data16 jle 0x43b00c
  43afce:	adc    al,cl
  43afd0:	jo     0x43afa9
  43afd2:	out    dx,al
  43afd3:	push   es
  43afd4:	mov    DWORD PTR [edi+esi*1],ecx
  43afd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43afd8:	cmp    dl,BYTE PTR [ecx+0x928d567]
  43afde:	ja     0x43b000
  43afe0:	dec    edi
  43afe1:	pop    ebx
  43afe2:	xchg   BYTE PTR fs:[esp+eiz*8+0x62d78d8a],al
  43afea:	xlat   BYTE PTR ds:[ebx]
  43afeb:	lods   eax,DWORD PTR ds:[esi]
  43afec:	adc    DWORD PTR [edx],edx
  43afee:	pop    esi
  43afef:	add    BYTE PTR [edx-0x3c6de4b9],dl
  43aff5:	ret    0x6d52
  43aff8:	cdq    
  43aff9:	inc    edi
  43affa:	xor    ecx,DWORD PTR [edx+ebp*1-0x56d9f7ca]
  43b001:	push   ebp
  43b002:	and    al,0x6e
  43b004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b005:	xor    DWORD PTR [eax-0x63],0x32
  43b009:	jnp    0x43afa4
  43b00b:	aad    0x1a
  43b00d:	sti    
  43b00e:	pop    esi
  43b00f:	popf   
  43b010:	jge    0x43afd6
  43b012:	imul   ebp,DWORD PTR [esi],0x64
  43b015:	jns    0x43b033
  43b017:	jnp    0x43afc2
  43b019:	addr16 div ah
  43b01c:	xor    ecx,ecx
  43b01e:	and    ah,al
  43b020:	retf   0x628f
  43b023:	rol    BYTE PTR [eax-0x28570e0c],0x2e
  43b02a:	dec    edi
  43b02b:	xor    DWORD PTR [ecx],eax
  43b02d:	dec    DWORD PTR [esp+ebx*4+0x25de127e]
  43b034:	pusha  
  43b035:	ins    BYTE PTR es:[edi],dx
  43b036:	lods   eax,DWORD PTR ds:[esi]
  43b037:	cmp    esi,ecx
  43b039:	fcomp  DWORD PTR [ebx]
  43b03b:	push   cs
  43b03c:	cmp    bl,dl
  43b03e:	lea    esp,[eax-0x7]
  43b041:	adc    al,BYTE PTR [edi+0x25]
  43b044:	jae    0x43b00c
  43b046:	(bad)  
  43b047:	xor    ah,BYTE PTR [ecx]
  43b049:	xor    bh,BYTE PTR ds:0x72c5de74
  43b04f:	or     BYTE PTR [edx+0x69],dl
  43b052:	test   ebp,edi
  43b054:	mov    bl,0xac
  43b056:	inc    edx
  43b057:	push   ebp
  43b058:	push   es
  43b059:	es call 0x3ba2:0x79eb62e9
  43b061:	je     0x43b069
  43b063:	mov    bl,BYTE PTR [edx]
  43b065:	in     al,dx
  43b066:	push   ecx
  43b067:	xchg   ecx,eax
  43b068:	sahf   
  43b069:	or     al,0x86
  43b06b:	nop
  43b06c:	ins    BYTE PTR es:[edi],dx
  43b06d:	(bad)  
  43b06e:	pop    edx
  43b06f:	stos   BYTE PTR es:[edi],al
  43b070:	pushf  
  43b071:	xor    DWORD PTR [ecx-0x6e],esp
  43b074:	test   DWORD PTR [ebx+0x7da0fa17],esp
  43b07a:	sbb    al,0x9
  43b07c:	lds    esi,FWORD PTR [edi+eiz*4]
  43b07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b080:	push   edx
  43b081:	stos   DWORD PTR es:[edi],eax
  43b082:	and    DWORD PTR [eax],edi
  43b084:	gs inc esp
  43b086:	in     al,0x4a
  43b088:	imul   esi,DWORD PTR [edi],0x6c
  43b08b:	push   ebx
  43b08c:	and    BYTE PTR [ecx+0x79722102],bl
  43b092:	fldln2 
  43b094:	mov    bh,0x96
  43b096:	ret    0x53a0
  43b099:	mov    al,0x3a
  43b09b:	pop    esp
  43b09c:	aad    0x2b
  43b09e:	iret   
  43b09f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b0a0:	fadd   QWORD PTR [eax+0x7533dd3a]
  43b0a6:	add    eax,0xa07cc3e0
  43b0ab:	std    
  43b0ac:	adc    edx,DWORD PTR [edi]
  43b0ae:	push   esi
  43b0af:	or     BYTE PTR [ecx+0x43107813],al
  43b0b5:	xor    BYTE PTR [eax-0x4e6d96e1],ah
  43b0bb:	in     al,0x50
  43b0bd:	and    BYTE PTR [edx-0x46],dh
  43b0c0:	add    dh,cl
  43b0c2:	cmp    eax,0xd82e3bf2
  43b0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0c8:	repz out dx,eax
  43b0ca:	in     al,0xd2
  43b0cc:	push   edi
  43b0cd:	or     eax,0x2509c418
  43b0d2:	inc    esp
  43b0d3:	adc    edx,DWORD PTR [esi-0x12f4336]
  43b0d9:	adc    dh,BYTE PTR [ebp-0x1]
  43b0dc:	fstp   TBYTE PTR [ebp-0xae81d9e]
  43b0e2:	lods   eax,DWORD PTR ds:[esi]
  43b0e3:	mov    edi,0x10ba4311
  43b0e8:	cli    
  43b0e9:	mov    eax,ds:0xdc4a905f
  43b0ee:	cwde   
  43b0ef:	pop    ecx
  43b0f0:	(bad)  
  43b0f1:	pop    eax
  43b0f2:	xchg   edi,eax
  43b0f3:	repnz jmp 0x4066:0x7d9fed6
  43b0fb:	out    0x3d,eax
  43b0fd:	add    eax,0x2cd590b9
  43b102:	(bad)  [ecx+0x78]
  43b105:	mov    WORD PTR [ecx-0x4],fs
  43b108:	out    dx,eax
  43b109:	dec    eax
  43b10a:	xchg   esp,eax
  43b10b:	xchg   edx,eax
  43b10c:	jge    0x43b0ee
  43b10e:	pop    esp
  43b10f:	into   
  43b110:	jle    0x43b10c
  43b112:	fild   DWORD PTR [ecx]
  43b114:	outs   dx,DWORD PTR ds:[esi]
  43b115:	pop    ecx
  43b116:	xor    al,0xfc
  43b118:	hlt    
  43b119:	lds    ecx,FWORD PTR [ecx-0x354899d2]
  43b11f:	sbb    dl,ch
  43b121:	fs retf 
  43b123:	jmp    0x5b84:0x9a6e294c
  43b12a:	xor    eax,0xe5b0bfb3
  43b12f:	jmp    0xf30e0ff2
  43b134:	mov    ss,WORD PTR [edx]
  43b136:	call   0x1a392957
  43b13b:	xor    DWORD PTR ds:0xc113147f,edi
  43b141:	icebp  
  43b142:	jb     0x43b0d2
  43b144:	bound  edx,QWORD PTR [eax-0x71dc3bb0]
  43b14a:	adc    dh,BYTE PTR [eax+ebx*2-0x5b]
  43b14e:	mov    eax,ds:0x2a61c8fe
  43b153:	cwde   
  43b154:	aad    0x7e
  43b156:	mov    ecx,edi
  43b158:	or     DWORD PTR [ecx-0x32],esi
  43b15b:	in     al,dx
  43b15c:	test   al,0xe1
  43b15e:	xor    BYTE PTR [ebx-0x96cd6e9],al
  43b164:	or     DWORD PTR [esp+edx*1],edi
  43b167:	rol    DWORD PTR [edx+0xe],0x41
  43b16b:	mov    edi,0x97e37f2d
  43b170:	lock test BYTE PTR fs:[eax],cl
  43b174:	sbb    esp,DWORD PTR ds:[eax-0x39d02200]
  43b17b:	xchg   esp,eax
  43b17c:	jmp    0x9974b2c4
  43b181:	jae    0x43b1ab
  43b183:	push   eax
  43b184:	and    al,0x25
  43b186:	dec    esi
  43b187:	push   ecx
  43b188:	fdiv   DWORD PTR [eax]
  43b18a:	in     al,dx
  43b18b:	dec    esi
  43b18c:	aas    
  43b18d:	mov    DWORD PTR [ebp+0x7c],ebx
  43b190:	mov    eax,gs
  43b192:	jle    0x43b212
  43b194:	jne    0x43b128
  43b196:	mov    cl,0x51
  43b198:	pop    ebp
  43b199:	xlat   BYTE PTR ds:[ebx]
  43b19a:	ficom  WORD PTR [ebx]
  43b19c:	call   0xa9a5:0xb7ffc7d7
  43b1a3:	out    0x1f,eax
  43b1a5:	jle    0x43b18b
  43b1a7:	aam    0xb8
  43b1a9:	push   ebp
  43b1aa:	sbb    ebp,ecx
  43b1ac:	sbb    al,0x44
  43b1ae:	dec    esi
  43b1af:	stc    
  43b1b0:	jb     0x43b1d3
  43b1b2:	imul   ecx,DWORD PTR [eax],0xffffffe5
  43b1b5:	daa    
  43b1b6:	mov    dh,0x6c
  43b1b8:	xchg   ecx,eax
  43b1b9:	pop    edi
  43b1ba:	lods   al,BYTE PTR ds:[esi]
  43b1bb:	jmp    0x43b205
  43b1bd:	or     eax,0x3c2fee1
  43b1c2:	pop    ss
  43b1c3:	loopne 0x43b1bc
  43b1c5:	ins    DWORD PTR es:[edi],dx
  43b1c6:	jo     0x43b15c
  43b1c8:	retf   0x21d1
  43b1cb:	mov    cl,0xb9
  43b1cd:	fwait
  43b1ce:	sti    
  43b1cf:	std    
  43b1d0:	gs js  0x43b163
  43b1d3:	mov    ds:0xaabfe21,al
  43b1d8:	mov    ds:0xcf665080,al
  43b1dd:	sbb    esi,DWORD PTR [esi+0x3e5eac]
  43b1e3:	xlat   BYTE PTR ds:[ebx]
  43b1e4:	ds aam 0x69
  43b1e7:	pop    esp
  43b1e8:	xchg   BYTE PTR ds:0x7fed5c3a,ch
  43b1ee:	jle    0x43b1e7
  43b1f0:	push   ebx
  43b1f1:	imul   ebx,edi,0xffffff9f
  43b1f4:	pop    ecx
  43b1f5:	dec    eax
  43b1f6:	cmp    al,0x4d
  43b1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b1f9:	adc    bh,BYTE PTR [esi+0x600c755]
  43b1ff:	scas   eax,DWORD PTR es:[edi]
  43b200:	dec    ecx
  43b201:	adc    DWORD PTR [esi+0x7e],0x2e
  43b205:	pop    eax
  43b206:	outs   dx,DWORD PTR ds:[esi]
  43b207:	xor    BYTE PTR [ecx+edi*4-0x24261ebc],ch
  43b20e:	mov    ch,0x7c
  43b210:	fwait
  43b211:	jmp    DWORD PTR [edi]
  43b213:	lods   al,BYTE PTR ds:[esi]
  43b214:	pop    ebx
  43b215:	hlt    
  43b216:	mov    esi,0x2a581e2d
  43b21b:	pop    es
  43b21c:	out    0x1b,al
  43b21e:	repnz or bl,0x8c
  43b222:	dec    ecx
  43b223:	into   
  43b224:	cmp    DWORD PTR [ebx+eiz*8],eax
  43b227:	mov    esi,0xcad22192
  43b22c:	aad    0x2b
  43b22e:	icebp  
  43b22f:	add    edi,DWORD PTR [ecx]
  43b231:	sub    eax,0x8698ae41
  43b236:	dec    ebp
  43b237:	push   ds
  43b238:	das    
  43b239:	push   ebp
  43b23a:	test   al,0x9
  43b23c:	ins    DWORD PTR es:[edi],dx
  43b23d:	pop    ebp
  43b23e:	mov    al,0x81
  43b240:	mov    cl,al
  43b242:	out    dx,eax
  43b243:	mov    bl,0x3
  43b245:	push   ebx
  43b246:	xchg   edx,eax
  43b247:	jbe    0x43b1d4
  43b249:	jmp    0x43b1d1
  43b24b:	or     ecx,DWORD PTR [esi]
  43b24d:	ins    BYTE PTR es:[edi],dx
  43b24e:	xor    al,0xeb
  43b250:	test   eax,0x6c5c1ce6
  43b255:	pop    esi
  43b256:	push   es
  43b257:	retf   0xb2f5
  43b25a:	inc    ebp
  43b25b:	pop    esi
  43b25c:	xor    BYTE PTR [edx-0x314ef9d9],dh
  43b262:	in     eax,0xb
  43b264:	aam    0x6
  43b266:	push   ss
  43b267:	(bad)  
  43b268:	sub    eax,0x9b96640c
  43b26d:	mov    dl,0xc1
  43b26f:	fld    DWORD PTR es:[ebx+0x6716714f]
  43b276:	rcl    BYTE PTR [edx+0x7b],0xc7
  43b27a:	jns    0x43b2cc
  43b27c:	stos   DWORD PTR es:[edi],eax
  43b27d:	shl    cl,cl
  43b27f:	jle    0x43b2ab
  43b281:	ins    DWORD PTR es:[edi],dx
  43b282:	xchg   edi,eax
  43b283:	pop    eax
  43b284:	pusha  
  43b285:	mov    ch,0x1
  43b287:	lahf   
  43b288:	fs mov esp,ebx
  43b28b:	cmc    
  43b28c:	and    ebp,DWORD PTR [ebx+0x4a]
  43b28f:	imul   ebp,DWORD PTR [ebp+0x2e],0x68
  43b293:	int    0xc3
  43b295:	fmul   DWORD PTR [eax]
  43b297:	std    
  43b298:	cwde   
  43b299:	and    al,BYTE PTR [ebp-0x44da6813]
  43b29f:	bnd ret 
  43b2a1:	clc    
  43b2a2:	push   0xc32a411
  43b2a7:	cmp    esp,DWORD PTR [ebx-0x77]
  43b2aa:	fstp   QWORD PTR [ebx-0x29]
  43b2ad:	js     0x43b255
  43b2af:	dec    BYTE PTR [si]
  43b2b2:	adc    cl,BYTE PTR [ebx-0x41221807]
  43b2b8:	mov    esp,0x50363855
  43b2bd:	mov    bh,0xd2
  43b2bf:	fcomp  QWORD PTR [ebx-0x79f90878]
  43b2c5:	mov    bl,0xf0
  43b2c7:	(bad)  
  43b2c8:	xchg   edx,eax
  43b2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b2ca:	dec    ebx
  43b2cb:	jecxz  0x43b292
  43b2cd:	std    
  43b2ce:	mov    al,ds:0x732b8ebe
  43b2d3:	ror    BYTE PTR [ecx+0x219951d4],1
  43b2d9:	and    DWORD PTR [esi+ebx*2-0x1eda3c2a],ebp
  43b2e0:	popf   
  43b2e1:	call   0x48f5c97d
  43b2e6:	jg     0x43b29a
  43b2e8:	adc    DWORD PTR [edi],esp
  43b2ea:	leave  
  43b2eb:	sub    eax,0x511a0f92
  43b2f0:	rcl    DWORD PTR [eax-0xa],0xea
  43b2f4:	ins    BYTE PTR es:[edi],dx
  43b2f5:	out    0xd7,al
  43b2f7:	lods   al,BYTE PTR ds:[esi]
  43b2f8:	lock sbb ebx,0x9d837d62
  43b2ff:	lods   al,BYTE PTR ds:[esi]
  43b300:	and    eax,0xb30e3fec
  43b305:	inc    eax
  43b306:	fsub   QWORD PTR [edx-0x46fc3923]
  43b30c:	add    al,0xda
  43b30e:	nop
  43b30f:	sbb    cl,BYTE PTR ds:0x860f652b
  43b315:	jne    0x43b2eb
  43b317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b318:	adc    al,0x5b
  43b31a:	or     DWORD PTR [ecx],edi
  43b31c:	mov    ds:0x8228573,al
  43b321:	xor    cl,bl
  43b323:	test   BYTE PTR [ecx],0xa0
  43b326:	sub    eax,0x5c0986d8
  43b32b:	xor    BYTE PTR [eax+0x17d138b3],bh
  43b331:	test   DWORD PTR [edi-0x55997454],esp
  43b337:	gs pop ds
  43b339:	pop    ecx
  43b33a:	or     al,0xc6
  43b33c:	js     0x43b2d8
  43b33e:	pop    esp
  43b33f:	mov    cs,edi
  43b341:	scas   eax,DWORD PTR es:[edi]
  43b342:	sbb    BYTE PTR [edi],bh
  43b344:	iret   
  43b345:	loope  0x43b373
  43b347:	imul   DWORD PTR [ecx+edx*2+0x560c4a1]
  43b34e:	inc    ecx
  43b34f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b350:	mov    cl,0xcb
  43b352:	push   ss
  43b353:	jp     0x43b2fe
  43b355:	fdiv   st,st(4)
  43b357:	and    eax,0xd165bdfd
  43b35c:	mov    dl,0xa6
  43b35e:	lods   eax,DWORD PTR ds:[esi]
  43b35f:	lea    ebx,[eax-0x94f85a4]
  43b365:	outs   dx,DWORD PTR ds:[esi]
  43b366:	or     ch,al
  43b368:	rol    BYTE PTR [ebx],0x4b
  43b36b:	add    BYTE PTR [edi],al
  43b36d:	(bad)  
  43b36e:	adc    esp,DWORD PTR [esi+0x40]
  43b371:	imul   BYTE PTR [esi]
  43b373:	xchg   edi,eax
  43b374:	ficomp DWORD PTR [ecx-0x58f8b083]
  43b37a:	in     eax,0x62
  43b37c:	clc    
  43b37d:	and    eax,0x6f89c29
  43b382:	ds cwde 
  43b384:	push   0xffffffe6
  43b386:	inc    ebx
  43b387:	je     0x43b319
  43b389:	mov    DWORD PTR ds:0x994fba1f,0x26f8e31b
  43b393:	mov    dl,0xce
  43b395:	mov    al,0xe0
  43b397:	pop    eax
  43b398:	xchg   edi,eax
  43b399:	mov    WORD PTR [ebx+0x53],gs
  43b39c:	aad    0x68
  43b39e:	(bad)  
  43b39f:	dec    edi
  43b3a0:	call   0xefebf36d
  43b3a5:	fwait
  43b3a6:	jbe    0x43b358
  43b3a8:	pop    eax
  43b3a9:	pushf  
  43b3aa:	in     eax,dx
  43b3ab:	out    dx,eax
  43b3ac:	push   esp
  43b3ad:	jp     0x43b3d4
  43b3af:	out    dx,al
  43b3b0:	xchg   esi,eax
  43b3b1:	(bad)  
  43b3b2:	outs   dx,DWORD PTR ds:[esi]
  43b3b3:	jg     0x43b429
  43b3b5:	cmp    eax,0x5755dbd8
  43b3ba:	xor    eax,edi
  43b3bc:	jbe    0x43b426
  43b3be:	mov    esi,gs
  43b3c0:	push   edi
  43b3c1:	add    edx,DWORD PTR [edx-0x392bca88]
  43b3c7:	jge    0x43b37c
  43b3c9:	test   BYTE PTR [ebx+ebx*8-0x827599b],ch
  43b3d0:	or     eax,0x2684e1ca
  43b3d5:	mov    cl,0x1
  43b3d7:	shl    ebx,cl
  43b3d9:	imul   esp,DWORD PTR [ebx],0x46
  43b3dc:	lds    ebp,FWORD PTR [edx+esi*2]
  43b3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b3e0:	(bad)  [esi+0x48]
  43b3e3:	push   esp
  43b3e4:	pop    ss
  43b3e5:	inc    ebp
  43b3e6:	scas   eax,DWORD PTR es:[edi]
  43b3e7:	pusha  
  43b3e8:	daa    
  43b3e9:	add    dh,BYTE PTR [ecx+0x75]
  43b3ec:	lock pop eax
  43b3ee:	pop    ss
  43b3ef:	push   ss
  43b3f0:	or     cl,BYTE PTR [edx]
  43b3f2:	fwait
  43b3f3:	arpl   WORD PTR [edx+0x63651c5b],si
  43b3f9:	mov    BYTE PTR [edi-0xda164e7],bl
  43b3ff:	add    eax,0xaf45a57f
  43b404:	retf   0xde00
  43b407:	mov    edi,0xc73a6566
  43b40c:	fiadd  WORD PTR [esi+edi*4]
  43b40f:	inc    ecx
  43b410:	popa   
  43b411:	mov    eax,DWORD PTR [ecx-0x38c02264]
  43b417:	in     eax,dx
  43b418:	sub    BYTE PTR [ebx+0x41554e25],ch
  43b41e:	lds    ebp,FWORD PTR [ebp+0x68d20c0f]
  43b424:	push   esp
  43b425:	push   esp
  43b426:	mov    esp,0x8e4ff41b
  43b42b:	cmp    BYTE PTR [edi+0x6da0894c],al
  43b431:	sbb    cl,BYTE PTR ds:0x1f0ec0bf
  43b437:	outs   dx,DWORD PTR ds:[esi]
  43b438:	(bad)  [edi]
  43b43a:	std    
  43b43b:	cs mov esp,0x9cb50171
  43b441:	out    0x87,al
  43b443:	inc    ecx
  43b444:	adc    al,bl
  43b446:	mov    ah,0x79
  43b448:	gs arpl bx,di
  43b44b:	out    dx,al
  43b44c:	sbb    eax,0xb9c148c7
  43b451:	sbb    ebp,DWORD PTR [edi+0x26]
  43b454:	xchg   DWORD PTR [ebx],edx
  43b456:	adc    BYTE PTR [ebx-0x48],bl
  43b459:	outs   dx,BYTE PTR ds:[esi]
  43b45a:	lea    edi,[edx]
  43b45c:	mov    dl,0xe9
  43b45e:	cmp    DWORD PTR [eax-0x56],ebx
  43b461:	lods   eax,DWORD PTR ds:[esi]
  43b462:	xchg   ecx,eax
  43b463:	fs hlt 
  43b465:	mov    eax,ds:0xe4ed8e32
  43b46a:	rcl    BYTE PTR cs:[eax-0x78],1
  43b46e:	cmp    ch,dl
  43b470:	test   esp,ecx
  43b472:	push   es
  43b473:	sbb    ebp,esi
  43b475:	mov    dl,bh
  43b477:	(bad)  
  43b478:	gs leave 
  43b47a:	fcomp  DWORD PTR [ecx]
  43b47c:	outs   dx,DWORD PTR ds:[esi]
  43b47d:	arpl   WORD PTR [esi-0x73],bx
  43b480:	out    dx,al
  43b481:	ss or  eax,0x2a9f3cd
  43b487:	add    bl,dl
  43b489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b48a:	pop    ss
  43b48b:	retf   0xfee8
  43b48e:	jo     0x43b450
  43b490:	leave  
  43b491:	sbb    BYTE PTR [edx-0x19be1b9d],bl
  43b497:	clc    
  43b498:	fisub  WORD PTR [ebp+0x53]
  43b49b:	outs   dx,DWORD PTR ds:[esi]
  43b49c:	imul   DWORD PTR [ebp-0x5e]
  43b49f:	out    0x1e,eax
  43b4a1:	ss imul eax,ebp,0x5c6952fb
  43b4a8:	pop    edx
  43b4a9:	dec    ecx
  43b4aa:	jne    0x43b49b
  43b4ac:	sahf   
  43b4ad:	popa   
  43b4ae:	loop   0x43b4ad
  43b4b0:	rcr    DWORD PTR [edx-0x1d116042],cl
  43b4b6:	daa    
  43b4b7:	mov    dl,0xc9
  43b4b9:	inc    esp
  43b4ba:	out    dx,al
  43b4bb:	pmaxub mm3,QWORD PTR [ecx]
  43b4be:	xchg   BYTE PTR [edx+0x688df93],bh
  43b4c4:	enter  0xf0d5,0x23
  43b4c8:	lods   eax,DWORD PTR ds:[esi]
  43b4c9:	addr16 (bad) 
  43b4cb:	dec    ebp
  43b4cc:	push   es
  43b4cd:	pushf  
  43b4ce:	or     edx,DWORD PTR [ecx-0x7376329d]
  43b4d4:	data16 adc al,0x41
  43b4d7:	jae    0x43b490
  43b4d9:	xlat   BYTE PTR ds:[ebx]
  43b4da:	sub    DWORD PTR [edx],edi
  43b4dc:	jns    0x43b4fc
  43b4de:	mov    ecx,0xcc5f4b50
  43b4e3:	mov    bl,0x24
  43b4e5:	mov    ebp,0xec9e7cf4
  43b4ea:	cmp    edi,DWORD PTR [ebx]
  43b4ec:	sbb    dh,BYTE PTR [eax+0x79]
  43b4ef:	out    0x2f,al
  43b4f1:	push   edi
  43b4f2:	adc    edx,esi
  43b4f4:	mov    edi,0xaa01a41
  43b4f9:	xchg   BYTE PTR [eax+esi*8],dl
  43b4fc:	or     edi,DWORD PTR [esi+0x23]
  43b4ff:	mov    ebx,0xde21a5e9
  43b504:	rol    BYTE PTR [edi+eiz*2+0x59],0x72
  43b509:	sub    ebx,DWORD PTR [eax+0x2bb96c5]
  43b50f:	mul    DWORD PTR [ecx]
  43b511:	imul   ebx,ebx,0xffffff86
  43b514:	sbb    eax,0x33a30ef
  43b519:	daa    
  43b51a:	add    al,0x31
  43b51c:	dec    edi
  43b51d:	mov    dl,0xbc
  43b51f:	(bad)  
  43b520:	in     eax,0x82
  43b522:	mov    esi,0xc92a74c4
  43b527:	fistp  WORD PTR [ecx-0x5a]
  43b52a:	ror    BYTE PTR [ebp-0x52],0xec
  43b52e:	add    al,0x3e
  43b530:	lea    ebx,[edi]
  43b532:	xchg   DWORD PTR [ecx+0xb46840b],edx
  43b538:	lea    ebx,[edi+0x7d]
  43b53b:	jg     0x43b4e9
  43b53d:	dec    esi
  43b53e:	scas   eax,DWORD PTR es:[edi]
  43b53f:	(bad)  
  43b540:	shl    BYTE PTR [eax],1
  43b542:	neg    BYTE PTR [edi]
  43b544:	shl    DWORD PTR [ebp+0x455d48ce],1
  43b54a:	hlt    
  43b54b:	fcmovnbe st,st(4)
  43b54d:	cdq    
  43b54e:	mov    edi,0x1511c0c4
  43b553:	sbb    al,0x57
  43b555:	enter  0xb99a,0x81
  43b559:	pop    ecx
  43b55a:	or     BYTE PTR [edi],al
  43b55c:	sahf   
  43b55d:	enter  0x4407,0x84
  43b561:	lods   eax,DWORD PTR ds:[esi]
  43b562:	xor    BYTE PTR [edi-0x21],dl
  43b565:	dec    ecx
  43b566:	daa    
  43b567:	mov    eax,ds:0xeb247538
  43b56c:	push   ebx
  43b56d:	into   
  43b56e:	in     eax,dx
  43b56f:	dec    esp
  43b570:	mov    ch,0x6
  43b572:	fidivr DWORD PTR gs:[ebx]
  43b575:	xor    dh,ah
  43b577:	cld    
  43b578:	imul   edi,DWORD PTR [esi+0x5d],0x39e5bc42
  43b57f:	in     eax,dx
  43b580:	push   ebx
  43b581:	jne    0x43b5f1
  43b583:	and    edi,DWORD PTR [edi-0x1d01a016]
  43b589:	rcl    edx,1
  43b58b:	xchg   DWORD PTR [esi],eax
  43b58d:	adc    eax,0x6e7d9ec2
  43b592:	sub    cl,BYTE PTR [eax-0x44]
  43b595:	arpl   WORD PTR [edx+0x33],si
  43b598:	test   BYTE PTR [ecx+eax*1-0x51a624cd],ch
  43b59f:	xchg   esi,eax
  43b5a0:	push   ss
  43b5a1:	jno    0x43b5ad
  43b5a3:	fisubr DWORD PTR [esi-0x10d7d343]
  43b5a9:	sub    BYTE PTR [ecx-0x48],bh
  43b5ac:	scas   eax,DWORD PTR es:[edi]
  43b5ad:	imul   edi,DWORD PTR [ebx-0x20],0x3
  43b5b1:	(bad)  
  43b5b2:	or     ah,BYTE PTR [edx+0x7f]
  43b5b5:	cmp    DWORD PTR [edx],0x52
  43b5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b5b9:	aas    
  43b5ba:	sbb    eax,DWORD PTR [edx]
  43b5bc:	push   ds
  43b5bd:	dec    ebp
  43b5be:	js     0x43b5ec
  43b5c0:	adc    al,0xa6
  43b5c2:	in     eax,0xf1
  43b5c4:	jl     0x43b592
  43b5c6:	dec    DWORD PTR [eax]
  43b5c8:	pop    edx
  43b5c9:	mov    eax,ds:0x35baf4d2
  43b5ce:	and    edx,DWORD PTR [edi]
  43b5d0:	mov    bl,0x83
  43b5d2:	mov    dh,0xa
  43b5d4:	mov    ebx,0x4e422a50
  43b5d9:	mov    eax,ds:0x9044b9d3
  43b5de:	popa   
  43b5df:	std    
  43b5e0:	je     0x43b569
  43b5e2:	xor    BYTE PTR [edx*8+0x45af26c7],bl
  43b5e9:	inc    edx
  43b5ea:	push   eax
  43b5eb:	in     eax,dx
  43b5ec:	test   DWORD PTR [eax+0x100d84e8],eax
  43b5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b5f3:	retf   
  43b5f4:	std    
  43b5f5:	and    cl,BYTE PTR [esi+0x7350d764]
  43b5fb:	xor    esp,DWORD PTR [edx]
  43b5fd:	rol    ebx,cl
  43b5ff:	ficom  WORD PTR [edx+eax*1+0x54]
  43b603:	call   0x2939:0x8748b003
  43b60a:	aaa    
  43b60b:	mov    eax,0x454afb3e
  43b610:	adc    ebx,esi
  43b612:	popa   
  43b613:	enter  0xdb34,0x6a
  43b617:	jle    0x43b65c
  43b619:	xor    al,0xa0
  43b61b:	ja     0x43b646
  43b61d:	sbb    BYTE PTR [ecx-0x5299bfcf],cl
  43b623:	arpl   WORD PTR [edi],sp
  43b625:	jp     0x43b68e
  43b627:	int3   
  43b628:	in     al,dx
  43b629:	pop    eax
  43b62a:	rol    DWORD PTR [edx-0x58],cl
  43b62d:	push   0x66ddbc7a
  43b632:	sub    DWORD PTR [esi+ecx*4],ebp
  43b635:	mov    ebp,0x6fc20b04
  43b63a:	and    al,0x2
  43b63c:	and    dl,bl
  43b63e:	call   0x5dee46cf
  43b643:	in     al,dx
  43b644:	jg     0x43b62b
  43b646:	ficom  DWORD PTR [edx+0x10]
  43b649:	sub    ebp,DWORD PTR [eax+0x37ee71ea]
  43b64f:	fadd   DWORD PTR [edx]
  43b651:	lea    esp,[edi-0x4958f5ba]
  43b657:	cs push ebp
  43b659:	xchg   edi,eax
  43b65a:	mov    cl,0x14
  43b65c:	inc    ecx
  43b65d:	sub    DWORD PTR [ebx-0x4e],edx
  43b660:	in     eax,0xc1
  43b662:	pop    ds
  43b663:	ret    0xdd3e
  43b666:	ret    0x1e9d
  43b669:	push   edx
  43b66a:	jbe    0x43b65e
  43b66c:	mul    dh
  43b66e:	jbe    0x43b6df
  43b670:	push   eax
  43b671:	lods   eax,DWORD PTR ds:[esi]
  43b672:	call   0x5c42:0x8cf83e46
  43b679:	inc    eax
  43b67a:	hlt    
  43b67b:	push   es
  43b67c:	lea    esp,[ebx+esi*8+0x53010f39]
  43b683:	out    0xb9,al
  43b685:	add    eax,0x440f4b93
  43b68a:	adc    dl,BYTE PTR [edx+0x37]
  43b68d:	call   0xcc18148a
  43b692:	mov    dl,0xa3
  43b694:	pop    es
  43b695:	daa    
  43b696:	clc    
  43b697:	xor    DWORD PTR [edx-0x6f],eax
  43b69a:	repz idiv ch
  43b69d:	mov    ecx,0x9c7c0bb9
  43b6a2:	daa    
  43b6a3:	xor    eax,0x7220b222
  43b6a8:	sbb    bl,0x3b
  43b6ab:	data16 jae 0x43b638
  43b6ae:	pop    ebp
  43b6af:	stos   DWORD PTR es:[edi],eax
  43b6b0:	mov    ecx,eax
  43b6b2:	or     eax,0x55fdafdc
  43b6b7:	mov    bh,0xf9
  43b6b9:	lahf   
  43b6ba:	mov    esi,0x12ebbc0d
  43b6bf:	cmc    
  43b6c0:	mov    cl,0xf9
  43b6c2:	scas   al,BYTE PTR es:[edi]
  43b6c3:	fstp   DWORD PTR [esi+eiz*8-0x6011fdc6]
  43b6ca:	pop    edx
  43b6cb:	ret    
  43b6cc:	les    eax,FWORD PTR [esp+ebx*1]
  43b6cf:	dec    esi
  43b6d0:	(bad)  
  43b6d1:	in     eax,0xc1
  43b6d3:	in     eax,0x96
  43b6d5:	dec    esi
  43b6d7:	not    BYTE PTR [ecx-0xe]
  43b6da:	mov    ebp,0x544b3e85
  43b6df:	mov    esp,0x918ee1ff
  43b6e4:	sbb    dl,BYTE PTR [esi+eiz*2]
  43b6e7:	jno    0x43b6c2
  43b6e9:	pop    ss
  43b6ea:	cdq    
  43b6eb:	daa    
  43b6ec:	and    edx,DWORD PTR [ebx]
  43b6ee:	inc    esp
  43b6ef:	cmp    eax,0x1bd910e
  43b6f4:	icebp  
  43b6f5:	test   eax,0xa1fae0f7
  43b6fa:	int    0x20
  43b6fc:	mov    al,0x17
  43b6fe:	and    al,0x1d
  43b700:	outs   dx,DWORD PTR ds:[esi]
  43b701:	adc    DWORD PTR [eax+0x45],0x1b
  43b705:	sbb    dh,BYTE PTR [esi+eiz*4-0xa79c87a]
  43b70c:	popa   
  43b70d:	inc    edi
  43b70e:	icebp  
  43b70f:	lds    edx,FWORD PTR [eax]
  43b711:	adc    al,BYTE PTR [edx-0x75dd317c]
  43b717:	repz popa 
  43b719:	xor    ecx,DWORD PTR [ecx-0x76]
  43b71c:	icebp  
  43b71d:	cmp    ch,ch
  43b71f:	out    0xc4,al
  43b721:	fs inc ecx
  43b723:	dec    ebx
  43b724:	jecxz  0x43b787
  43b726:	adc    DWORD PTR [esp+eiz*8],ebp
  43b729:	and    BYTE PTR [edi+0x15],dh
  43b72c:	adc    eax,0x5bcf04e3
  43b731:	retf   0xe4d5
  43b734:	in     al,dx
  43b735:	mov    edx,0xb2de0e6e
  43b73a:	jmp    0xb65f:0x68489e49
  43b741:	outs   dx,DWORD PTR ds:[esi]
  43b742:	adc    edx,DWORD PTR [edx+ebx*8-0x24]
  43b746:	out    dx,eax
  43b747:	aaa    
  43b748:	inc    edx
  43b749:	into   
  43b74a:	xchg   esi,eax
  43b74b:	dec    esp
  43b74c:	inc    edx
  43b74d:	and    edx,DWORD PTR [eax-0x2b]
  43b750:	mov    gs,WORD PTR [esi+0x27267912]
  43b756:	or     edi,DWORD PTR [edx]
  43b758:	jmp    0xea9bea8d
  43b75d:	inc    eax
  43b75e:	lea    edi,[ebp-0x65]
  43b761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b762:	sub    dl,BYTE PTR [edi+eiz*8]
  43b765:	push   cs
  43b766:	jno    0x43b773
  43b768:	jno    0x43b788
  43b76a:	fs in  eax,0xa8
  43b76d:	int3   
  43b76e:	xchg   esi,eax
  43b76f:	fild   WORD PTR [edi+ebx*8]
  43b772:	adc    BYTE PTR [ebx],dh
  43b774:	call   0x1f39955
  43b779:	pop    esi
  43b77a:	js     0x43b7ee
  43b77c:	les    ecx,FWORD PTR [eax-0x4036ee24]
  43b782:	jmp    0x957f:0xf0e1bcfe
  43b789:	add    dl,BYTE PTR [eax-0x6ceaf9c6]
  43b78f:	inc    esp
  43b790:	sub    DWORD PTR ds:0x2a7cfc29,ecx
  43b796:	(bad)  
  43b797:	xchg   esi,eax
  43b798:	retf   0xa8cd
  43b79b:	cs pop ebx
  43b79d:	mov    ds:0x60094958,eax
  43b7a2:	inc    ebp
  43b7a3:	dec    ebp
  43b7a4:	outs   dx,BYTE PTR ds:[esi]
  43b7a5:	lods   al,BYTE PTR ds:[esi]
  43b7a6:	mov    bh,0xe4
  43b7a8:	clc    
  43b7a9:	adc    al,0x84
  43b7ab:	xchg   ebx,eax
  43b7ac:	(bad)  
  43b7ad:	push   0xffffffb3
  43b7af:	or     al,0x57
  43b7b1:	xchg   BYTE PTR [eax+0x6ea5b5eb],al
  43b7b7:	mov    ss,WORD PTR [edx+0x69]
  43b7ba:	push   ecx
  43b7bb:	dec    esp
  43b7bc:	mov    edi,0x47fc8765
  43b7c1:	xor    edi,DWORD PTR ds:0xb338ce84
  43b7c7:	popa   
  43b7c8:	adc    BYTE PTR [ecx+0x12a86c7b],dh
  43b7ce:	je     0x43b7f3
  43b7d0:	call   0xdaac:0xaa958d84
  43b7d7:	out    0x81,eax
  43b7d9:	jecxz  0x43b7e0
  43b7db:	fadd   DWORD PTR [ebp+0x7f]
  43b7de:	xor    DWORD PTR [ecx-0x1f],edx
  43b7e1:	and    dh,al
  43b7e3:	jns    0x43b7c0
  43b7e5:	mov    WORD PTR [edx-0xa],cs
  43b7e8:	aad    0x28
  43b7ea:	call   0x66a4:0xf122065b
  43b7f1:	scas   eax,DWORD PTR es:[edi]
  43b7f2:	popf   
  43b7f3:	mov    al,ds:0x384f4744
  43b7f8:	(bad)
  43b7fb:	add    esi,eax
  43b7fd:	(bad)  
  43b7fe:	ja     0x43b7bf
  43b800:	dec    eax
  43b801:	adc    bl,ah
  43b803:	xchg   DWORD PTR [ecx+0x38],ebx
  43b806:	pop    ebp
  43b807:	mov    ecx,0x331bbf84
  43b80c:	push   edi
  43b80d:	or     DWORD PTR [edi-0x77],esp
  43b810:	fs push edx
  43b812:	push   es
  43b813:	pop    ebp
  43b814:	mov    edx,0xb85df344
  43b819:	push   eax
  43b81a:	fisttp QWORD PTR [esi+0x18]
  43b81d:	adc    eax,0x9493d018
  43b822:	sti    
  43b823:	adc    al,0x56
  43b825:	cli    
  43b826:	ss jae 0x43b83e
  43b829:	push   ds
  43b82a:	sar    ecx,0x2a
  43b82d:	(bad)  
  43b82e:	fs sbb esi,esp
  43b831:	loop   0x43b8a3
  43b833:	xor    al,BYTE PTR [ebx-0x7d]
  43b836:	jg     0x43b7fd
  43b838:	push   ebx
  43b839:	popf   
  43b83a:	mov    fs,WORD PTR [ebp-0x46]
  43b83d:	push   es
  43b83e:	mov    esp,ebp
  43b840:	(bad)  
  43b841:	adc    DWORD PTR ds:0x3f6f554,ecx
  43b847:	mov    esp,0x56871790
  43b84c:	test   al,0x1c
  43b84e:	loop   0x43b86e
  43b850:	or     ebx,edi
  43b852:	add    esi,DWORD PTR [ecx+eiz*4-0x20]
  43b856:	(bad)  
  43b857:	aad    0xd7
  43b859:	xchg   edi,eax
  43b85a:	mov    ds:0x599f5922,eax
  43b85f:	fbstp  TBYTE PTR [ebx+0x56]
  43b862:	sub    al,BYTE PTR [eax]
  43b864:	push   0x633265fc
  43b869:	jne    0x43b8cd
  43b86b:	jmp    0xbe795c1f
  43b870:	ins    DWORD PTR es:[edi],dx
  43b871:	dec    ebp
  43b872:	shl    DWORD PTR ds:0xb970bf7e,cl
  43b878:	xor    BYTE PTR [ebx-0x1c965732],ch
  43b87e:	add    dl,dl
  43b880:	jp     0x43b816
  43b882:	dec    ecx
  43b883:	pop    ecx
  43b884:	ins    DWORD PTR es:[edi],dx
  43b885:	iret   
  43b886:	(bad)  
  43b887:	fsubr  st,st(2)
  43b889:	cmp    eax,0x44f5e02b
  43b88e:	lods   al,BYTE PTR ds:[esi]
  43b88f:	les    edi,FWORD PTR [eax+0x2c]
  43b892:	pushf  
  43b893:	leave  
  43b894:	mov    eax,0xfb96d64a
  43b899:	arpl   WORD PTR [ebx-0x52],di
  43b89c:	pusha  
  43b89d:	in     eax,0x7f
  43b89f:	ja     0x43b876
  43b8a1:	sbb    DWORD PTR [ebx+0xe],0xffffff94
  43b8a5:	test   BYTE PTR [edi+0xf],ch
  43b8a8:	rcr    BYTE PTR [esi+0x1e],1
  43b8ab:	enter  0xf750,0xd7
  43b8af:	imul   ecx,DWORD PTR [eax-0x4a],0xa333773e
  43b8b6:	rcr    BYTE PTR ds:0x749607e6,0x60
  43b8bd:	mov    ds:0xb102a2c4,al
  43b8c2:	mov    dl,0xf4
  43b8c4:	fdivr  DWORD PTR [edx+0x5e]
  43b8c7:	(bad)
  43b8cc:	fldcw  WORD PTR gs:[ebx+0x14f46768]
  43b8d3:	push   esi
  43b8d4:	mov    edx,0x1cc0297b
  43b8d9:	pop    edi
  43b8da:	jne    0x43b8f9
  43b8dc:	ins    DWORD PTR es:[edi],dx
  43b8dd:	xor    BYTE PTR [edx],ah
  43b8df:	scas   al,BYTE PTR es:[edi]
  43b8e0:	lods   al,BYTE PTR ds:[esi]
  43b8e1:	hlt    
  43b8e2:	lds    esp,FWORD PTR cs:[eax+0x26]
  43b8e6:	xchg   esp,eax
  43b8e7:	sub    BYTE PTR [edx+0x6c1b68fd],0x37
  43b8ee:	jae    0x43b8f8
  43b8f0:	add    eax,0xfc715774
  43b8f5:	pop    esp
  43b8f6:	inc    ecx
  43b8f7:	mov    dl,0xc2
  43b8f9:	iret   
  43b8fa:	fidiv  DWORD PTR [edx-0x3c]
  43b8fd:	scas   al,BYTE PTR es:[edi]
  43b8fe:	pop    ebp
  43b8ff:	pop    ds
  43b900:	sub    DWORD PTR [edi],edx
  43b902:	aad    0x60
  43b904:	push   ebx
  43b905:	neg    DWORD PTR [esi-0x457953ca]
  43b90b:	iret   
  43b90c:	rcl    DWORD PTR [ecx],cl
  43b90e:	xchg   edi,eax
  43b90f:	xor    bh,BYTE PTR [ebp-0x22]
  43b912:	inc    esp
  43b913:	push   ss
  43b914:	push   ss
  43b915:	jnp    0x43b89a
  43b917:	or     DWORD PTR [edx+0x3ec790cb],esi
  43b91d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  43b91f:	pop    esp
  43b920:	dec    ebp
  43b922:	push   esi
  43b923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b924:	repnz xor esi,DWORD PTR [edx-0x5dac6aad]
  43b92b:	shl    BYTE PTR [ebx],cl
  43b92d:	outs   dx,BYTE PTR ds:[esi]
  43b92e:	jae    0x43b991
  43b930:	loopne 0x43b984
  43b932:	xchg   DWORD PTR [ebp+0x29935637],edx
  43b938:	aas    
  43b939:	jmp    0x43b97b
  43b93b:	adc    eax,0x2f1762ca
  43b940:	mov    ecx,0x5da4b08c
  43b945:	pop    ecx
  43b946:	pusha  
  43b947:	cmp    eax,0x8f60a760
  43b94c:	dec    ecx
  43b94d:	ret    0x7ea6
  43b950:	mov    eax,0x8981f606
  43b955:	push   0xcd0cc111
  43b95a:	jl     0x43b929
  43b95c:	sub    ah,dh
  43b95e:	push   ebp
  43b95f:	add    esi,edi
  43b961:	pop    esi
  43b962:	gs ja  0x43b9ab
  43b965:	push   ecx
  43b966:	adc    eax,0x133a2323
  43b96b:	test   dl,ah
  43b96d:	xchg   ecx,eax
  43b96e:	call   0x55704acf
  43b973:	sti    
  43b974:	in     al,0x19
  43b976:	sbb    ecx,DWORD PTR [eax+0x6137dfe9]
  43b97c:	or     cl,BYTE PTR [esi]
  43b97e:	dec    ecx
  43b97f:	xchg   esp,eax
  43b980:	pop    ebx
  43b981:	js     0x43b985
  43b983:	lods   eax,DWORD PTR ds:[esi]
  43b984:	jecxz  0x43b923
  43b986:	jo     0x43b94c
  43b988:	jne    0x43b9eb
  43b98a:	ret    0x8f51
  43b98d:	add    al,bl
  43b98f:	call   0xd6040dcf
  43b994:	inc    esi
  43b995:	sub    DWORD PTR [edi+0x6d],edx
  43b998:	lea    ebx,[ebx+ecx*8-0x1c]
  43b99c:	cwde   
  43b99d:	rcr    DWORD PTR [ebx],1
  43b99f:	sbb    al,0xd2
  43b9a1:	icebp  
  43b9a2:	add    eax,0xd670b12a
  43b9a7:	pushf  
  43b9a8:	sti    
  43b9a9:	mov    al,ds:0x31d7af78
  43b9ae:	sbb    eax,0xd275137d
  43b9b3:	imul   esp,eax,0x3a
  43b9b6:	dec    edx
  43b9b7:	in     eax,0x51
  43b9b9:	or     bh,BYTE PTR ds:[eax+0x5c44a56d]
  43b9c0:	popa   
  43b9c1:	neg    BYTE PTR [ecx-0x22bc0578]
  43b9c7:	jge    0x43ba2e
  43b9c9:	fs dec edi
  43b9cb:	stc    
  43b9cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b9cd:	js     0x43b972
  43b9cf:	push   0x6b8d7b5a
  43b9d4:	mov    ecx,0x6bd0b3a
  43b9d9:	test   al,0xfd
  43b9db:	adc    dh,BYTE PTR [ecx-0x592c873]
  43b9e1:	mov    esi,0xa39ffc3e
  43b9e6:	dec    ecx
  43b9e7:	(bad)  
  43b9e9:	add    BYTE PTR [ebp-0x6c2057c9],0x5c
  43b9f0:	jge    0x43ba61
  43b9f2:	daa    
  43b9f3:	fstp   TBYTE PTR [eax+0x5d]
  43b9f6:	xchg   ecx,eax
  43b9f7:	aad    0xe2
  43b9f9:	adc    al,0x2
  43b9fb:	cwde   
  43b9fc:	out    0x8d,eax
  43b9fe:	(bad)  
  43ba00:	stos   BYTE PTR es:[edi],al
  43ba01:	fild   WORD PTR [edx+ebx*8+0x3b]
  43ba05:	jl     0x43ba6e
  43ba07:	(bad)  
  43ba08:	mov    DWORD PTR [esi],ebp
  43ba0a:	push   0x5f
  43ba0c:	lds    esp,FWORD PTR [eax]
  43ba0e:	outs   dx,BYTE PTR ds:[esi]
  43ba0f:	xor    eax,0x7dd2c8a5
  43ba14:	adc    DWORD PTR ds:0x18b02ad5,esi
  43ba1a:	mov    edi,esi
  43ba1c:	mov    cl,0x6d
  43ba1e:	xchg   BYTE PTR [edx],ch
  43ba20:	stos   BYTE PTR es:[edi],al
  43ba21:	sub    esp,DWORD PTR [edx-0x7b770350]
  43ba27:	jge    0x43ba8d
  43ba29:	sbb    dh,BYTE PTR [ecx-0x52]
  43ba2c:	shl    esi,cl
  43ba2e:	pop    edx
  43ba2f:	cmp    BYTE PTR [esi+0x2e84074e],al
  43ba35:	push   eax
  43ba36:	inc    esp
  43ba37:	xchg   esp,eax
  43ba38:	cmp    eax,0xa9844838
  43ba3d:	push   cs
  43ba3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ba3f:	or     edi,edx
  43ba41:	pusha  
  43ba42:	ret    
  43ba43:	push   cs
  43ba44:	mov    ?,esi
  43ba46:	iret   
  43ba47:	stos   BYTE PTR es:[edi],al
  43ba48:	jge    0x43ba61
  43ba4a:	cmp    ah,BYTE PTR [ebp+0x7338a3f5]
  43ba50:	cli    
  43ba51:	mov    ds:0x101d777e,al
  43ba56:	sbb    DWORD PTR [eax-0x27acb47],ebx
  43ba5c:	jb     0x43bab9
  43ba5e:	dec    edi
  43ba5f:	int3   
  43ba60:	xchg   esi,eax
  43ba61:	(bad)  
  43ba62:	lods   al,BYTE PTR ds:[esi]
  43ba63:	push   esi
  43ba64:	cli    
  43ba65:	mov    ebx,0x4e9411d2
  43ba6a:	stc    
  43ba6b:	inc    esp
  43ba6c:	push   es
  43ba6d:	sbb    dh,BYTE PTR [ebp-0x6df2af50]
  43ba73:	push   0x93df8fb0
  43ba78:	daa    
  43ba79:	(bad)  
  43ba7a:	ret    0x3d9a
  43ba7d:	not    ah
  43ba7f:	das    
  43ba80:	and    eax,0x7077f4bb
  43ba85:	or     eax,esi
  43ba87:	mov    ds:0x6fb31f8f,eax
  43ba8c:	xchg   edi,eax
  43ba8d:	outs   dx,DWORD PTR ds:[esi]
  43ba8e:	push   eax
  43ba8f:	ficom  WORD PTR [bp+si]
  43ba92:	mov    edx,ebp
  43ba94:	out    0x30,al
  43ba96:	js     0x43ba6b
  43ba98:	test   BYTE PTR [ebx-0x2f],dl
  43ba9b:	mov    ds,WORD PTR [eax+0x265d9e0e]
  43baa1:	stos   BYTE PTR es:[edi],al
  43baa2:	popf   
  43baa3:	pmaddwd mm7,QWORD PTR [ecx]
  43baa6:	push   ebx
  43baa7:	or     eax,0xb4c1b3c0
  43baac:	xchg   DWORD PTR [eax-0x22],eax
  43baaf:	ror    BYTE PTR [ebp-0x6a1dcff3],1
  43bab5:	mov    ds:0x74e69f73,al
  43baba:	push   esp
  43babb:	fcmovne st,st(4)
  43babd:	add    ebp,DWORD PTR [esi-0x5a6980d9]
  43bac3:	stos   BYTE PTR es:[edi],al
  43bac4:	or     eax,0xaa13df47
  43bac9:	nop
  43baca:	xor    DWORD PTR [ecx],edx
  43bacc:	fwait
  43bacd:	mov    bl,0x2d
  43bacf:	mov    ds:0xa2f78667,eax
  43bad4:	mov    esp,0xe2e51413
  43bad9:	stos   DWORD PTR es:[edi],eax
  43bada:	xchg   esp,eax
  43badb:	into   
  43badc:	les    ebx,FWORD PTR [eax]
  43bade:	loopne 0x43bb10
  43bae0:	pop    ebp
  43bae1:	clc    
  43bae2:	repnz scas eax,DWORD PTR es:[edi]
  43bae4:	sti    
  43bae5:	out    dx,eax
  43bae6:	sti    
  43bae7:	dec    ebx
  43bae8:	div    DWORD PTR [esi-0x6bef3e61]
  43baee:	js     0x43ba70
  43baf0:	not    BYTE PTR [eax+0x53b3dc14]
  43baf6:	call   0xf2c8:0x9bc979f3
  43bafd:	div    BYTE PTR [edx]
  43baff:	xor    eax,0xb211fcd4
  43bb04:	loop   0x43ba94
  43bb06:	test   eax,0xef5aedc5
  43bb0b:	in     al,dx
  43bb0c:	(bad)  
  43bb0d:	fimul  DWORD PTR [eax-0x29]
  43bb10:	mov    dl,0x72
  43bb12:	xchg   ecx,eax
  43bb13:	adc    al,0xc4
  43bb15:	sbb    eax,0x70e162c4
  43bb1a:	jnp    0x43bb78
  43bb1c:	leave  
  43bb1d:	repnz and ebp,0xd4c1dfc9
  43bb24:	in     al,dx
  43bb25:	jl     0x43bb77
  43bb27:	jae    0x43bad3
  43bb29:	inc    esp
  43bb2a:	cmp    BYTE PTR [eax+0x2214fcf8],cl
  43bb30:	mov    edi,ds
  43bb32:	push   ecx
  43bb33:	ficomp WORD PTR [esp+ebx*4]
  43bb36:	mov    ?,WORD PTR [esi]
  43bb38:	or     cl,cl
  43bb3a:	and    ecx,0x6c
  43bb3d:	push   esp
  43bb3e:	arpl   WORD PTR [ebp+0x21],di
  43bb41:	nop
  43bb42:	jmp    0x43bb6c
  43bb44:	hlt    
  43bb45:	sbb    ch,BYTE PTR [edx+eiz*2]
  43bb48:	popf   
  43bb49:	cld    
  43bb4a:	sbb    esi,DWORD PTR [eax-0x1743f62c]
  43bb50:	dec    eax
  43bb51:	ja     0x43bb10
  43bb53:	push   edi
  43bb54:	pop    ecx
  43bb55:	xor    ch,ch
  43bb57:	cs dec ecx
  43bb59:	popf   
  43bb5a:	jle    0x43baec
  43bb5c:	mov    ds:0x5553b1a5,eax
  43bb61:	inc    esp
  43bb62:	rcr    DWORD PTR [ecx+ebp*4+0x4c],0x7d
  43bb67:	inc    edi
  43bb68:	iret   
  43bb69:	cmp    BYTE PTR [ecx-0x2a6a4fab],0x3f
  43bb70:	mov    ds:0x7e140caa,eax
  43bb75:	test   DWORD PTR [esp+eax*2-0x2e1c4243],edx
  43bb7c:	or     eax,0xff121b17
  43bb81:	aas    
  43bb82:	jl     0x43bbc0
  43bb84:	adc    BYTE PTR [edi+0x21],dl
  43bb87:	push   esi
  43bb88:	jnp    0x43bb17
  43bb8a:	std    
  43bb8b:	mov    ebx,0x7ac998ec
  43bb90:	loop   0x43bbfb
  43bb92:	xlat   BYTE PTR ds:[ebx]
  43bb93:	lds    ebx,FWORD PTR [eax+0x3a]
  43bb96:	dec    esi
  43bb97:	test   al,0x4c
  43bb99:	jp     0x43bb23
  43bb9b:	fxch   st(0)
  43bb9d:	jmp    0xeb78ac71
  43bba2:	push   0x8bb29976
  43bba7:	jo     0x43bbcc
  43bba9:	push   ecx
  43bbaa:	fstp   QWORD PTR [esi-0x6b]
  43bbad:	clc    
  43bbae:	cdq    
  43bbaf:	pop    ss
  43bbb0:	stos   DWORD PTR es:[edi],eax
  43bbb1:	dec    esp
  43bbb2:	mov    al,0x96
  43bbb4:	rcr    DWORD PTR [ebp+0x9],1
  43bbb7:	xchg   edi,eax
  43bbb8:	mov    dl,0x66
  43bbba:	test   DWORD PTR [ebx+ebx*4],edx
  43bbbd:	pop    esp
  43bbbe:	mov    al,ds:0xc538bb02
  43bbc3:	inc    ecx
  43bbc4:	imul   eax,DWORD PTR [ecx-0x1df80fb0],0x1c
  43bbcb:	popf   
  43bbcc:	(bad)  
  43bbcd:	in     eax,dx
  43bbce:	je     0x43bbcf
  43bbd0:	shl    DWORD PTR [ebx-0x58],1
  43bbd3:	adc    BYTE PTR [ebx-0x2c],cl
  43bbd6:	push   0x70
  43bbd8:	dec    esi
  43bbd9:	fucomi st,st(2)
  43bbdb:	add    eax,DWORD PTR [eax+esi*4]
  43bbde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bbdf:	loop   0x43bb7e
  43bbe1:	push   eax
  43bbe2:	jl     0x43bc3e
  43bbe4:	mov    eax,0xce09bddd
  43bbe9:	push   ebp
  43bbea:	inc    edx
  43bbeb:	ret    0xd0ac
  43bbee:	pop    edi
  43bbef:	jg     0x43bb74
  43bbf1:	ds nop
  43bbf3:	inc    eax
  43bbf4:	adc    ebp,DWORD PTR [edi]
  43bbf6:	scas   eax,DWORD PTR es:[edi]
  43bbf7:	addr16 pop esp
  43bbf9:	ja     0x43bc23
  43bbfb:	inc    ebx
  43bbfc:	call   0x75b7c706
  43bc01:	add    ah,0xd9
  43bc04:	pop    ebx
  43bc05:	cmp    BYTE PTR [ebp-0x49125559],bl
  43bc0b:	lods   eax,DWORD PTR ds:[esi]
  43bc0c:	inc    eax
  43bc0d:	ja     0x43bbfd
  43bc0f:	xchg   WORD PTR [edi],si
  43bc12:	pop    ebp
  43bc13:	adc    bh,BYTE PTR [ecx+eiz*2+0x19]
  43bc17:	push   ds
  43bc18:	sub    DWORD PTR [esi+edi*8+0x33],esi
  43bc1c:	js     0x43bbcc
  43bc1e:	xchg   DWORD PTR [edi-0x16c56b14],esp
  43bc24:	jg     0x43bbc4
  43bc26:	add    DWORD PTR [esi+0x20],ebx
  43bc29:	dec    ebx
  43bc2a:	popa   
  43bc2b:	clc    
  43bc2c:	enter  0x11cb,0xc1
  43bc30:	add    dh,BYTE PTR [edi-0x32761705]
  43bc36:	adc    ecx,DWORD PTR [eax-0x2d]
  43bc39:	jmp    0xa98e:0x720334ac
  43bc40:	cld    
  43bc41:	inc    eax
  43bc42:	je     0x43bc41
  43bc44:	lahf   
  43bc45:	bound  edi,QWORD PTR [eax+0x12e310b3]
  43bc4b:	outs   dx,BYTE PTR ds:[esi]
  43bc4c:	leave  
  43bc4d:	sub    dl,ch
  43bc4f:	xrelease xchg DWORD PTR [eax+0x18f128ae],eax
  43bc56:	cmc    
  43bc57:	test   DWORD PTR [ebx],0x98cb4cda
  43bc5d:	aad    0xaf
  43bc5f:	dec    ebx
  43bc60:	adc    bh,dl
  43bc62:	fldcw  WORD PTR [esi]
  43bc64:	in     al,0x97
  43bc66:	dec    esp
  43bc67:	sub    eax,0xe1e978f2
  43bc6c:	call   0x473532d9
  43bc71:	mov    ah,0x52
  43bc73:	inc    ecx
  43bc74:	cmp    DWORD PTR [eax-0x24],esp
  43bc77:	cli    
  43bc78:	pop    ebp
  43bc79:	scas   eax,DWORD PTR es:[edi]
  43bc7a:	loopne 0x43bc4a
  43bc7c:	jbe    0x43bc2a
  43bc7e:	(bad)  
  43bc7f:	xchg   esi,eax
  43bc80:	push   esp
  43bc81:	xchg   ebp,eax
  43bc82:	fsubr  QWORD PTR [ebx+ecx*2]
  43bc85:	mov    al,ds:0x2803901a
  43bc8a:	nop
  43bc8b:	(bad)  
  43bc8c:	adc    BYTE PTR [ebx+0x2d],bl
  43bc8f:	rcr    DWORD PTR [ecx+0x43d35546],cl
  43bc95:	inc    ebp
  43bc96:	dec    edx
  43bc97:	mov    DWORD PTR [eax-0x63],ebp
  43bc9a:	and    DWORD PTR [ecx+0x6a],edx
  43bc9d:	mov    ebp,?
  43bc9f:	out    dx,al
  43bca0:	xor    ecx,ebx
  43bca2:	adc    esi,DWORD PTR [esi]
  43bca4:	bound  esp,QWORD PTR [esi+0x42362e5a]
  43bcaa:	ins    BYTE PTR es:[edi],dx
  43bcab:	jg     0x43bcca
  43bcad:	outs   dx,DWORD PTR ds:[esi]
  43bcae:	jle    0x43bd15
  43bcb0:	je     0x43bc4a
  43bcb2:	sub    al,BYTE PTR [esi]
  43bcb4:	pushf  
  43bcb5:	retf   0xb3a0
  43bcb8:	cmp    DWORD PTR [esi-0x45],edi
  43bcbb:	mov    edx,0x398afa4b
  43bcc0:	mov    cl,BYTE PTR [esi+ebx*1]
  43bcc3:	cld    
  43bcc4:	xchg   esi,eax
  43bcc5:	adc    eax,0xd27f27fe
  43bcca:	data16 fist WORD PTR [ecx+eax*8-0x6f]
  43bccf:	xor    dl,BYTE PTR [edi]
  43bcd1:	pop    esp
  43bcd2:	xchg   esp,eax
  43bcd3:	out    dx,al
  43bcd4:	adc    DWORD PTR [ebx+0x1b],ebx
  43bcd7:	sbb    BYTE PTR [edx-0x33],bl
  43bcda:	push   ebx
  43bcdb:	popa   
  43bcdc:	xlat   BYTE PTR ds:[ebx]
  43bcdd:	xor    BYTE PTR [ebx-0xa29484e],dh
  43bce3:	cli    
  43bce4:	push   cs
  43bce5:	sub    eax,0x52e62390
  43bcea:	cmp    ecx,DWORD PTR [eax-0x60]
  43bced:	adc    edi,DWORD PTR [ecx+0x74973162]
  43bcf3:	xchg   ebx,eax
  43bcf4:	push   es
  43bcf5:	iret   
  43bcf6:	jmp    0x34216439
  43bcfb:	mov    dl,0x74
  43bcfd:	fs stos DWORD PTR es:[edi],eax
  43bcff:	test   BYTE PTR [edx+0x37ce3b2a],bl
  43bd05:	test   al,ch
  43bd07:	retf   
  43bd08:	adc    BYTE PTR [edx+0x5e87660a],ch
  43bd0e:	sub    DWORD PTR [edi],edi
  43bd10:	sub    al,0x5b
  43bd12:	ror    bh,0xa8
  43bd15:	mov    eax,ds:0x83d1faa3
  43bd1a:	dec    esi
  43bd1b:	push   ecx
  43bd1c:	(bad)  [ebp+0x56e7dccb]
  43bd22:	inc    ebx
  43bd23:	push   0x253b088b
  43bd28:	addr16 dec eax
  43bd2a:	cdq    
  43bd2b:	data16 into 
  43bd2d:	add    al,0x40
  43bd2f:	je     0x43bd3f
  43bd31:	mov    bl,0x27
  43bd33:	mov    edx,0x4a129fe8
  43bd38:	retf   0x83b5
  43bd3b:	loopne 0x43bdb4
  43bd3d:	and    DWORD PTR [esi],0xffffff99
  43bd40:	stc    
  43bd41:	sub    DWORD PTR [eax+0x7bdf45c1],edx
  43bd47:	or     dl,bh
  43bd49:	dec    ebx
  43bd4a:	div    BYTE PTR [edx+edi*4+0x350d5d2f]
  43bd51:	fsubr  st(0),st
  43bd53:	and    DWORD PTR [edx+0x56d39e07],ebx
  43bd59:	(bad)  
  43bd5a:	punpckhwd mm1,mm2
  43bd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bd5e:	jecxz  0x43bd0a
  43bd60:	test   BYTE PTR [edx+0x1f],al
  43bd63:	aas    
  43bd64:	jmp    0x43bd81
  43bd66:	les    esp,FWORD PTR [edx]
  43bd68:	sbb    eax,0x5ffb8b26
  43bd6d:	push   edi
  43bd6e:	xor    eax,0x2452ffdc
  43bd73:	xchg   DWORD PTR [eax+0x1913f02c],ebp
  43bd79:	sub    eax,DWORD PTR [edi+0x66b5d1a1]
  43bd7f:	clc    
  43bd80:	jecxz  0x43bdb2
  43bd82:	jle    0x43bd22
  43bd84:	clc    
  43bd85:	enter  0xaa5c,0xcf
  43bd89:	push   ds
  43bd8a:	outs   dx,BYTE PTR ds:[esi]
  43bd8b:	int3   
  43bd8c:	mov    edx,0x68510d45
  43bd91:	mov    dh,0xa0
  43bd93:	in     al,0xe5
  43bd95:	jecxz  0x43bd29
  43bd97:	rol    DWORD PTR [esi-0x7df47c],1
  43bd9d:	not    BYTE PTR [ebp+0x1a1990d5]
  43bda3:	lock lea edx,[edi+0x427ddf98]
  43bdaa:	push   edx
  43bdab:	ja     0x43bd7a
  43bdad:	mov    al,ds:0x4c55badc
  43bdb2:	sbb    ebp,DWORD PTR [edx+0x447b9ab6]
  43bdb8:	loopne 0x43bd4c
  43bdba:	ss (bad) 
  43bdbc:	scas   eax,DWORD PTR es:[edi]
  43bdbd:	sub    ebp,ebx
  43bdbf:	stos   BYTE PTR es:[edi],al
  43bdc0:	js     0x43bdbf
  43bdc2:	nop
  43bdc3:	out    0x65,al
  43bdc5:	jmp    0xc65e9edd
  43bdca:	inc    ebp
  43bdcb:	test   DWORD PTR [edx],edx
  43bdcd:	leave  
  43bdce:	xor    bl,dl
  43bdd0:	mov    bh,0x9e
  43bdd2:	(bad)  [ecx+ecx*1-0xd]
  43bdd6:	outs   dx,DWORD PTR ds:[esi]
  43bdd7:	push   ebx
  43bdd8:	cmp    BYTE PTR [edx+0x4a362a29],dh
  43bdde:	ret    0xe068
  43bde1:	fldcw  WORD PTR [ebp-0x18]
  43bde4:	jle    0x43be30
  43bde6:	mov    ds:0x6fa8970e,eax
  43bdeb:	or     DWORD PTR [edx-0x6c0b750],eax
  43bdf1:	in     eax,dx
  43bdf2:	retf   
  43bdf3:	add    eax,0x8671b7b2
  43bdf8:	sar    BYTE PTR [ebx+0x34],cl
  43bdfb:	cmp    ecx,esp
  43bdfd:	and    ebp,esp
  43bdff:	(bad)  
  43be00:	hlt    
  43be01:	pop    edx
  43be02:	xor    esi,DWORD PTR [edx-0x7b]
  43be05:	jne    0x43bde1
  43be07:	retf   
  43be08:	stc    
  43be09:	cmp    al,0xa
  43be0b:	call   0x1bcd1351
  43be10:	jmp    0xe831:0x8f635668
  43be17:	test   BYTE PTR [ecx+0x469735f9],0xe7
  43be1e:	jno    0x43be1e
  43be20:	aad    0x8c
  43be22:	ins    BYTE PTR es:[edi],dx
  43be23:	add    al,0xdb
  43be25:	xor    dh,BYTE PTR [ebx]
  43be27:	cld    
  43be28:	clc    
  43be29:	fs xor al,0x12
  43be2c:	fsubr  st(5),st
  43be2e:	xchg   ebx,eax
  43be2f:	test   ebp,eax
  43be31:	fdivr  DWORD PTR [ebx+edx*4-0x7c]
  43be35:	fidivr WORD PTR [eax+0x4c]
  43be38:	sub    DWORD PTR [edx+esi*1-0x414b167a],0xad35f17a
  43be43:	mov    dl,0x4f
  43be45:	jo     0x43be00
  43be47:	jae    0x43bddd
  43be49:	ja     0x43be86
  43be4b:	cmp    eax,0x6b74a3b6
  43be50:	xchg   edx,eax
  43be51:	cmp    dl,dl
  43be53:	test   al,0x87
  43be55:	mov    al,0xdf
  43be57:	pop    eax
  43be58:	(bad)  
  43be59:	call   0xa3b9e944
  43be5e:	sub    eax,0xcf9e7424
  43be63:	and    ecx,DWORD PTR [eax]
  43be65:	lahf   
  43be66:	mov    ds:0xe57eaddf,al
  43be6b:	aas    
  43be6c:	lods   eax,DWORD PTR ds:[esi]
  43be6d:	lods   al,BYTE PTR ds:[esi]
  43be6e:	enter  0x6bd1,0x66
  43be72:	shl    bh,0x1f
  43be75:	xchg   esi,eax
  43be76:	push   0xe5272a3c
  43be7b:	adc    ecx,DWORD PTR [edx]
  43be7d:	es cmp eax,0xbe99cd6f
  43be83:	jo     0x43be16
  43be85:	ins    BYTE PTR es:[edi],dx
  43be86:	ds dec eax
  43be88:	adc    cl,BYTE PTR [ecx]
  43be8a:	jb     0x43befb
  43be8c:	and    dh,BYTE PTR [edx+eax*4+0x63]
  43be90:	cmp    BYTE PTR [eax],bl
  43be92:	pop    esi
  43be93:	mov    BYTE PTR ds:[ebx],al
  43be96:	aad    0xd5
  43be98:	ds inc ebp
  43be9a:	inc    esi
  43be9b:	stos   DWORD PTR es:[edi],eax
  43be9c:	dec    edi
  43be9d:	ss nop
  43be9f:	in     eax,dx
  43bea0:	mov    ds:0xef90e58d,al
  43bea5:	pusha  
  43bea6:	xor    ecx,edi
  43bea8:	sti    
  43bea9:	mov    dh,0xdf
  43beab:	arpl   di,si
  43bead:	ret    
  43beae:	jb     0x43bee7
  43beb0:	xchg   edx,eax
  43beb1:	outs   dx,BYTE PTR ds:[esi]
  43beb2:	cmp    eax,0xbc967410
  43beb7:	sbb    al,0x55
  43beb9:	xlat   BYTE PTR ds:[ebx]
  43beba:	xchg   edi,eax
  43bebb:	repnz mov esi,0x70e235f9
  43bec1:	outs   dx,BYTE PTR ds:[esi]
  43bec2:	xlat   BYTE PTR ds:[ebx]
  43bec3:	mov    ebp,0xd9e0ac62
  43bec8:	pop    ebp
  43bec9:	pop    ecx
  43beca:	aam    0x3f
  43becc:	ja     0x43bf14
  43bece:	jo     0x43bf10
  43bed0:	sub    bl,dl
  43bed2:	sub    eax,DWORD PTR [esi-0x64f566af]
  43bed8:	mov    BYTE PTR [ecx-0x7d],al
  43bedb:	add    DWORD PTR [ebp-0x7a6750fc],esp
  43bee1:	das    
  43bee2:	dec    ebx
  43bee3:	mov    ds:0x1fc2da2c,eax
  43bee8:	std    
  43bee9:	xchg   DWORD PTR [edi+0x3c],esi
  43beec:	leave  
  43beed:	add    eax,0xdc21c38e
  43bef2:	lahf   
  43bef3:	enter  0xcf1f,0x57
  43bef7:	adc    eax,edx
  43bef9:	sar    dh,0x1
  43befc:	jp     0x43bf0f
  43befe:	jno    0x43bf08
  43bf00:	dec    edx
  43bf01:	pop    edx
  43bf02:	dec    ebp
  43bf03:	adc    DWORD PTR fs:[ecx],0x29
  43bf07:	js     0x43beb1
  43bf09:	scas   eax,DWORD PTR es:[edi]
  43bf0a:	or     eax,0x1bf841a9
  43bf0f:	dec    esi
  43bf10:	in     al,0xf0
  43bf12:	pop    eax
  43bf13:	pushf  
  43bf14:	xlat   BYTE PTR ds:[ebx]
  43bf15:	sbb    al,0x74
  43bf17:	cli    
  43bf18:	mov    ebp,0xe651b1e0
  43bf1d:	int    0x3b
  43bf1f:	mov    ebx,DWORD PTR [edx+ecx*2-0x5e]
  43bf23:	ins    DWORD PTR es:[edi],dx
  43bf24:	mov    esp,0x4a770c5a
  43bf29:	cli    
  43bf2a:	data16 jle 0x43bf1b
  43bf2d:	cmp    al,0x87
  43bf2f:	iret   
  43bf30:	xor    BYTE PTR [esi+0x2570c1af],dh
  43bf36:	test   eax,0xc671c4c9
  43bf3b:	pop    ebx
  43bf3c:	shl    DWORD PTR [esi-0x64],cl
  43bf3f:	or     DWORD PTR [edx+ebp*2-0x1fce17ff],esi
  43bf46:	jns    0x43bfba
  43bf48:	adc    cl,dh
  43bf4a:	retf   
  43bf4b:	xor    BYTE PTR [edx-0x33],dl
  43bf4e:	sub    esp,DWORD PTR [esi-0x74]
  43bf51:	in     eax,dx
  43bf52:	add    DWORD PTR [ebx],0x7d
  43bf55:	(bad)  
  43bf56:	cld    
  43bf57:	lods   eax,DWORD PTR ds:[esi]
  43bf58:	jbe    0x43befd
  43bf5a:	je     0x43bfd7
  43bf5c:	retf   
  43bf5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bf5e:	test   BYTE PTR [esi-0x15],0x7a
  43bf62:	iret   
  43bf63:	adc    al,0x50
  43bf65:	jg     0x43bfc3
  43bf67:	out    dx,al
  43bf68:	lods   al,BYTE PTR ds:[esi]
  43bf69:	or     DWORD PTR [eax+0x42],ebx
  43bf6c:	xor    dl,al
  43bf6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bf6f:	inc    edi
  43bf70:	ja     0x43bf6a
  43bf72:	jge    0x43bf61
  43bf74:	xor    edx,DWORD PTR [edx+0x1]
  43bf77:	dec    ebp
  43bf78:	retf   0xacfa
  43bf7b:	fst    QWORD PTR [ebx+0x68]
  43bf7e:	cmp    BYTE PTR [ebp-0x2d5d98d2],bh
  43bf84:	adc    eax,0x253c9b77
  43bf89:	ins    DWORD PTR es:[edi],dx
  43bf8a:	jle    0x43bfaa
  43bf8c:	and    al,0xde
  43bf8e:	inc    eax
  43bf8f:	pop    esp
  43bf90:	in     eax,dx
  43bf91:	xchg   ebx,eax
  43bf92:	cmp    BYTE PTR [edx-0x5f],ah
  43bf95:	jl     0x43bf3a
  43bf97:	retf   
  43bf98:	jecxz  0x43bf62
  43bf9a:	nop
  43bf9b:	cmp    al,0x91
  43bf9d:	push   ecx
  43bf9e:	jns    0x43bf3e
  43bfa0:	jge    0x43bfd9
  43bfa2:	test   DWORD PTR [edi-0x540bf0bb],0xa84213f3
  43bfac:	jg     0x43bfbb
  43bfae:	les    ebx,FWORD PTR [esi]
  43bfb0:	out    0x16,eax
  43bfb2:	in     eax,0x62
  43bfb4:	dec    esp
  43bfb5:	out    0x65,eax
  43bfb7:	mov    ds:0x92236d34,eax
  43bfbc:	sub    eax,0xffffffda
  43bfbf:	popf   
  43bfc0:	cmc    
  43bfc1:	out    dx,al
  43bfc2:	data16 mov bh,0xab
  43bfc5:	mov    edx,0x7422d30c
  43bfca:	jnp    0x43bfbe
  43bfcc:	in     al,0x55
  43bfce:	jno    0x43bf52
  43bfd0:	adc    edi,eax
  43bfd2:	(bad)  
  43bfd3:	and    edx,DWORD PTR [ebp-0x2a5b7c98]
  43bfd9:	mov    eax,ds:0x1291f922
  43bfde:	or     BYTE PTR [esi+0x547738ea],0x28
  43bfe5:	outs   dx,DWORD PTR ds:[esi]
  43bfe6:	add    ecx,ecx
  43bfe8:	inc    ebx
  43bfe9:	lods   eax,DWORD PTR ds:[esi]
  43bfea:	sahf   
  43bfeb:	ins    DWORD PTR es:[edi],dx
  43bfec:	dec    ecx
  43bfed:	cmp    ebp,DWORD PTR [esi+ebx*8]
  43bff0:	mov    dl,BYTE PTR [edx+edx*2+0x3d]
  43bff4:	inc    ebp
  43bff5:	enter  0xcdac,0x17
  43bff9:	mov    esp,0x439ffef7
  43bffe:	mov    ecx,0x75d6b8f
  43c003:	and    ah,BYTE PTR [ebp-0x3a21049]
  43c009:	sbb    al,0xaa
  43c00b:	pop    ds
  43c00c:	jo     0x43c074
  43c00e:	hlt    
  43c00f:	cmp    BYTE PTR cs:[edx],bh
  43c012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c013:	mov    al,0x61
  43c015:	add    esp,0x73ae80e3
  43c01b:	lock out 0x31,eax
  43c01e:	adc    edi,DWORD PTR [esi+0x57]
  43c021:	loope  0x43c09f
  43c023:	push   es
  43c024:	cld    
  43c025:	test   ch,bl
  43c027:	outs   dx,BYTE PTR ds:[esi]
  43c028:	int    0x48
  43c02a:	or     eax,0x9fd8b0e6
  43c02f:	lock iret 
  43c031:	arpl   si,di
  43c033:	jmp    DWORD PTR [esi+0x50]
  43c036:	data16 xor dh,BYTE PTR [ebx-0x34]
  43c03a:	mov    ebp,0x9b567a16
  43c03f:	call   FWORD PTR [ebp-0x23696e01]
  43c045:	imul   ecx,esi,0x16aac6f6
  43c04b:	xchg   edi,edx
  43c04d:	mov    dl,0xf0
  43c04f:	fsub   st(1),st
  43c051:	push   ss
  43c052:	iret   
  43c053:	sbb    DWORD PTR [esi-0x731c523d],ebp
  43c059:	(bad)  
  43c05a:	cli    
  43c05b:	mov    edi,0xe0c4b5f0
  43c060:	stos   BYTE PTR es:[edi],al
  43c061:	pop    ebx
  43c062:	inc    ecx
  43c063:	jbe    0x43c025
  43c065:	mov    eax,0xbe2fdfb4
  43c06a:	xlat   BYTE PTR ds:[ebx]
  43c06b:	pop    es
  43c06c:	sar    DWORD PTR [ecx-0x7d],0x3b
  43c070:	dec    ecx
  43c071:	or     cl,BYTE PTR [ecx+0x3218924d]
  43c077:	cwde   
  43c078:	push   ebp
  43c079:	repz scas al,BYTE PTR es:[edi]
  43c07b:	test   DWORD PTR [eax],esp
  43c07d:	jb     0x43c0b7
  43c07f:	or     DWORD PTR [ecx-0x1e],eax
  43c082:	mov    ecx,0xcc15d9b
  43c087:	stos   BYTE PTR es:[edi],al
  43c088:	ins    DWORD PTR es:[edi],dx
  43c089:	fnsave [ebx-0x2d]
  43c08c:	ror    ecx,cl
  43c08e:	mov    edx,0xe3d10903
  43c093:	mov    DWORD PTR [ebp-0x11cbc4b0],0xde2da8ea
  43c09d:	repnz xchg ebx,eax
  43c09f:	and    ecx,DWORD PTR [edx+ebx*1]
  43c0a2:	cwde   
  43c0a3:	xor    ch,BYTE PTR [esi+edx*1-0x65]
  43c0a7:	sub    eax,0x6e0b5214
  43c0ac:	pop    esp
  43c0ad:	cmp    al,al
  43c0af:	aas    
  43c0b0:	mov    BYTE PTR [edx+0x5fe84e34],dh
  43c0b6:	push   esp
  43c0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c0b8:	pushf  
  43c0b9:	jo     0x43c11b
  43c0bb:	aas    
  43c0bc:	xchg   edi,eax
  43c0bd:	sbb    esi,DWORD PTR [eax]
  43c0bf:	mov    ecx,0x8d07a2ec
  43c0c4:	in     eax,0x6
  43c0c6:	repnz pusha 
  43c0c8:	mov    edi,0x2564c959
  43c0cd:	sar    BYTE PTR ds:0x7896836b,cl
  43c0d3:	mov    ds:0xe0a12774,al
  43c0d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c0d9:	stc    
  43c0da:	jb     0x43c12f
  43c0dc:	push   ecx
  43c0dd:	out    dx,al
  43c0de:	adc    DWORD PTR [eax],0xffffffa5
  43c0e1:	and    BYTE PTR [edi-0x6a81ae84],al
  43c0e7:	(bad)  
  43c0e8:	es inc edx
  43c0ea:	dec    ecx
  43c0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c0ec:	mov    eax,ds:0xec79ad66
  43c0f1:	pop    eax
  43c0f2:	imul   ebx,DWORD PTR [edi],0xc365a079
  43c0f8:	lods   al,BYTE PTR ds:[esi]
  43c0f9:	cmp    eax,0x8def3e0
  43c0fe:	or     DWORD PTR [ecx+0x10],esp
  43c101:	mov    bl,BYTE PTR [edi]
  43c103:	aad    0x69
  43c105:	popf   
  43c106:	ror    DWORD PTR [ecx+0x1d8665c1],1
  43c10c:	xchg   ebp,eax
  43c10d:	scas   eax,DWORD PTR es:[edi]
  43c10e:	repnz dec eax
  43c110:	xchg   edx,eax
  43c111:	test   al,0x15
  43c113:	push   esp
  43c114:	(bad)  
  43c115:	loopne 0x43c18c
  43c117:	xor    al,0x3b
  43c119:	inc    edi
  43c11a:	fisubr WORD PTR [eax-0x69]
  43c11d:	and    al,0xd6
  43c11f:	add    ecx,edx
  43c121:	lods   al,BYTE PTR ds:[esi]
  43c122:	cdq    
  43c123:	sub    dh,BYTE PTR [eax-0x63]
  43c126:	cmp    dl,dl
  43c128:	das    
  43c129:	sbb    esi,DWORD PTR [ebx+0x58]
  43c12c:	sbb    eax,0x76bb0128
  43c131:	outs   dx,BYTE PTR ds:[esi]
  43c132:	mov    DWORD PTR [ebp-0x1b2fcc08],esi
  43c138:	pusha  
  43c139:	sahf   
  43c13a:	lods   al,BYTE PTR ds:[esi]
  43c13b:	aam    0x27
  43c13d:	add    BYTE PTR [edx-0x51],dl
  43c140:	dec    ecx
  43c141:	xchg   edi,eax
  43c142:	sub    ebp,DWORD PTR [edx-0x4473fd96]
  43c148:	test   al,0x9d
  43c14a:	clc    
  43c14b:	and    eax,0x4c13adff
  43c150:	push   edi
  43c151:	and    eax,0x6f3d4938
  43c156:	mov    ebp,0xca99542
  43c15b:	push   0xf705198d
  43c160:	std    
  43c161:	adc    ebx,DWORD PTR [ecx]
  43c163:	mov    WORD PTR [ebx-0x6f],gs
  43c166:	dec    esp
  43c167:	(bad)  [edi]
  43c169:	inc    edx
  43c16a:	jg     0x43c145
  43c16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c16d:	icebp  
  43c16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c16f:	cmp    al,0x89
  43c171:	mov    ebp,esi
  43c173:	aad    0xf3
  43c175:	dec    edi
  43c176:	adc    eax,0x5fa14061
  43c17b:	sub    ebx,ebx
  43c17d:	pop    ds
  43c17e:	aaa    
  43c17f:	fcmovnbe st,st(3)
  43c181:	sub    edi,DWORD PTR [ecx]
  43c183:	cdq    
  43c184:	aaa    
  43c185:	dec    ebp
  43c186:	(bad)  [edx-0x4bfc3044]
  43c18c:	push   edi
  43c18d:	(bad)  
  43c18e:	loopne 0x43c114
  43c190:	icebp  
  43c191:	lea    eax,[esi+0x51]
  43c194:	cmp    al,0xaa
  43c196:	sbb    ecx,edi
  43c198:	(bad)  
  43c19a:	mov    bl,0x34
  43c19c:	gs mov dh,0xb3
  43c19f:	test   al,0x63
  43c1a1:	mov    ebp,0xf506691b
  43c1a6:	pushf  
  43c1a7:	repnz or esp,DWORD PTR [ebp+0x4cada49f]
  43c1ae:	sub    al,0x1d
  43c1b0:	test   eax,0x804f70f4
  43c1b5:	cmp    BYTE PTR [eax],dh
  43c1b7:	and    bh,BYTE PTR [eax]
  43c1b9:	lahf   
  43c1ba:	les    eax,FWORD PTR [ebx+eax*8]
  43c1bd:	sub    eax,0x3c411203
  43c1c2:	inc    ebx
  43c1c3:	jle    0x43c1c3
  43c1c5:	xchg   edi,eax
  43c1c6:	shl    DWORD PTR [esi-0x41470362],0x64
  43c1cd:	xchg   DWORD PTR [edi-0x17],ebp
  43c1d0:	ds mov bh,0x20
  43c1d3:	push   ebp
  43c1d4:	mov    ds:0x6f1d0c6c,eax
  43c1d9:	aas    
  43c1da:	ins    DWORD PTR es:[edi],dx
  43c1db:	xchg   edi,eax
  43c1dc:	sub    DWORD PTR [ebp-0x4a07d11e],0x89f3b175
  43c1e6:	dec    edx
  43c1e7:	jae    0x43c1b2
  43c1e9:	push   esp
  43c1ea:	mov    esp,0xcfa419d8
  43c1ef:	push   ecx
  43c1f0:	(bad)  
  43c1f1:	fstp   QWORD PTR [ebx]
  43c1f3:	and    al,0x35
  43c1f5:	sbb    bl,0xb6
  43c1f8:	rcr    BYTE PTR [ecx-0x1ed0dad5],cl
  43c1fe:	outs   dx,BYTE PTR ds:[esi]
  43c1ff:	test   BYTE PTR [esi],dh
  43c201:	popf   
  43c202:	inc    edi
  43c203:	mov    cl,0xf6
  43c205:	fnsave [ebx-0x50]
  43c208:	addr16 push 0x5
  43c20b:	jge    0x43c1bc
  43c20d:	adc    al,0x29
  43c20f:	mov    cl,0xf9
  43c211:	jp     0x43c260
  43c213:	inc    ecx
  43c214:	fs das 
  43c216:	les    sp,DWORD PTR [ebx]
  43c219:	pop    edx
  43c21a:	call   0xf9f40904
  43c21f:	pop    esi
  43c220:	mov    esi,0x4301ea16
  43c225:	mov    WORD PTR [eax],es
  43c227:	sti    
  43c228:	in     eax,dx
  43c229:	sbb    al,0x7f
  43c22b:	js     0x43c284
  43c22d:	dec    esi
  43c22e:	outs   dx,BYTE PTR ds:[esi]
  43c22f:	sub    eax,esp
  43c231:	mov    dl,BYTE PTR ds:0xa495de43
  43c237:	pop    ebp
  43c238:	rol    DWORD PTR [ebx-0xe69970f],1
  43c23e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c23f:	add    dh,BYTE PTR [eax+0x165cdab1]
  43c245:	push   ebx
  43c246:	push   esp
  43c247:	mov    al,0x93
  43c249:	stos   DWORD PTR es:[edi],eax
  43c24a:	adc    DWORD PTR [edx-0xf],esp
  43c24d:	inc    esi
  43c24e:	cmp    al,0xb3
  43c250:	jge    0x43c247
  43c252:	sbb    BYTE PTR [ebx],0x11
  43c255:	mov    ah,0xd0
  43c257:	stos   BYTE PTR es:[edi],al
  43c258:	push   ss
  43c259:	sub    BYTE PTR [ecx+0x0],bl
  43c25c:	ds dec esi
  43c25e:	enter  0x192c,0xf7
  43c262:	mov    es,WORD PTR [eax+0x7]
  43c265:	pusha  
  43c266:	mov    ah,0x9a
  43c268:	jb     0x43c249
  43c26a:	aad    0x55
  43c26c:	jae    0x43c21a
  43c26e:	dec    eax
  43c26f:	xchg   edi,eax
  43c270:	push   ds
  43c271:	iret   
  43c272:	mov    eax,DWORD PTR [ebp-0x17244383]
  43c278:	stc    
  43c279:	inc    edi
  43c27a:	or     DWORD PTR [edx],edi
  43c27c:	addr16 es push 0xffffff90
  43c280:	sahf   
  43c281:	cmc    
  43c282:	mov    bh,0x40
  43c284:	(bad)  
  43c285:	retf   0x3129
  43c288:	(bad)  
  43c28a:	outs   dx,BYTE PTR ds:[esi]
  43c28b:	xchg   esp,eax
  43c28c:	push   eax
  43c28d:	pusha  
  43c28e:	cld    
  43c28f:	in     al,0x31
  43c291:	and    ebp,DWORD PTR [edx]
  43c293:	add    eax,0x4d0a6f48
  43c298:	fcom   QWORD PTR [esi]
  43c29a:	ja     0x43c301
  43c29c:	inc    ecx
  43c29d:	mov    ?,WORD PTR [edx]
  43c29f:	pop    es
  43c2a0:	cwde   
  43c2a1:	inc    edx
  43c2a2:	and    BYTE PTR [edx-0x33],al
  43c2a5:	fwait
  43c2a6:	sahf   
  43c2a7:	xchg   DWORD PTR [edx-0x151e1dab],ebx
  43c2ad:	pop    eax
  43c2ae:	loop   0x43c2e0
  43c2b0:	pop    eax
  43c2b1:	sub    bl,BYTE PTR [eax+ecx*4+0x4d]
  43c2b5:	je     0x43c2dc
  43c2b7:	and    al,0xf0
  43c2b9:	cmp    eax,0x31b1f7c1
  43c2be:	and    al,0x68
  43c2c0:	push   ebp
  43c2c1:	cli    
  43c2c2:	es cli 
  43c2c4:	shl    BYTE PTR [edx],1
  43c2c6:	xlat   BYTE PTR ds:[ebx]
  43c2c7:	scas   al,BYTE PTR es:[edi]
  43c2c8:	xchg   edi,eax
  43c2c9:	out    dx,al
  43c2ca:	mov    ebp,DWORD PTR [esi+ebp*8+0x3f]
  43c2ce:	fcomip st,st(6)
  43c2d0:	adc    al,0x6a
  43c2d2:	add    cl,BYTE PTR [edx+0x270d371b]
  43c2d8:	shl    BYTE PTR [eax],cl
  43c2da:	out    0x39,al
  43c2dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c2dd:	or     al,0x5
  43c2df:	inc    edi
  43c2e0:	push   eax
  43c2e1:	fimul  WORD PTR [ebp-0xfe42ac4]
  43c2e7:	cmp    al,0x89
  43c2e9:	std    
  43c2ea:	(bad)  
  43c2ec:	test   al,0x1d
  43c2ee:	mov    bh,ch
  43c2f0:	in     eax,dx
  43c2f1:	mov    edx,edx
  43c2f3:	leave  
  43c2f4:	aaa    
  43c2f5:	pop    esi
  43c2f6:	outs   dx,DWORD PTR ds:[esi]
  43c2f7:	addr16 or dh,bh
  43c2fa:	push   0x51
  43c2fc:	jecxz  0x43c2d0
  43c2fe:	sbb    DWORD PTR [esi],ebp
  43c300:	sub    DWORD PTR [ecx-0x5ab9902b],esp
  43c306:	(bad)  
  43c308:	loopne 0x43c2bc
  43c30a:	xchg   ecx,eax
  43c30b:	mov    DWORD PTR [esi+ecx*8+0x136f6aae],ebp
  43c312:	xchg   esp,eax
  43c313:	cli    
  43c314:	dec    ebx
  43c315:	mov    cl,0x6a
  43c317:	inc    esi
  43c318:	mov    DWORD PTR [eax+ebp*2+0x73ab06fc],esi
  43c31f:	jne    0x43c2f4
  43c321:	ins    BYTE PTR es:[edi],dx
  43c322:	call   0xf7cb:0xcd110f5e
  43c329:	pop    ecx
  43c32a:	mov    fs,ebp
  43c32c:	sar    DWORD PTR [esp+eiz*2+0x2e569507],cl
  43c333:	and    dh,BYTE PTR [edi+edi*4]
  43c336:	into   
  43c337:	lea    esi,ds:0x85b25dcb
  43c33d:	adc    DWORD PTR [edi-0x16],0x61
  43c341:	pop    esp
  43c342:	sbb    edi,DWORD PTR [ecx]
  43c344:	sahf   
  43c345:	(bad)  
  43c346:	lods   al,BYTE PTR ds:[esi]
  43c347:	mov    dl,0x88
  43c34a:	or     al,0xd2
  43c34c:	pop    esp
  43c34d:	data16 aaa 
  43c34f:	cmp    dh,bl
  43c351:	clc    
  43c352:	ret    0xde8e
  43c355:	sahf   
  43c356:	mov    bl,ch
  43c358:	ret    0x8ab3
  43c35b:	mov    bh,0x56
  43c35d:	push   esp
  43c35e:	cmp    eax,0x7c8a611b
  43c363:	scas   al,BYTE PTR es:[edi]
  43c364:	adc    ah,cl
  43c366:	sbb    DWORD PTR [ecx-0x77],esp
  43c369:	add    al,0xe7
  43c36b:	jge    0x43c32b
  43c36d:	xor    al,0xf8
  43c36f:	push   cs
  43c370:	and    al,0xa6
  43c372:	mov    bl,0x79
  43c374:	imul   edi
  43c376:	in     al,dx
  43c377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c378:	jo     0x43c3ac
  43c37a:	(bad)  
  43c37b:	std    
  43c37c:	push   ds
  43c37d:	out    dx,eax
  43c37e:	dec    ecx
  43c37f:	mov    eax,0x5031df87
  43c384:	aad    0xb
  43c386:	nop
  43c387:	jl     0x43c3d6
  43c389:	or     eax,0x68d99261
  43c38e:	addr16 jbe 0x43c3ec
  43c391:	adc    BYTE PTR [eax],bh
  43c393:	sub    DWORD PTR [ebx-0x9fb7d9d],edx
  43c399:	mov    ebx,DWORD PTR [edi-0x69]
  43c39c:	push   0x82e37d20
  43c3a1:	sub    dl,BYTE PTR [ebx]
  43c3a3:	adc    edx,DWORD PTR [ebx]
  43c3a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c3a6:	push   ebx
  43c3a7:	dec    edx
  43c3a8:	xchg   ecx,eax
  43c3a9:	and    eax,0xb399529a
  43c3ae:	lods   al,BYTE PTR fs:[esi]
  43c3b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c3b1:	call   0xc231:0x2aeb93e0
  43c3b8:	cdq    
  43c3b9:	call   0xaba5f2ce
  43c3be:	jb     0x43c41f
  43c3c0:	mov    eax,0x609ba4a1
  43c3c5:	inc    edx
  43c3c6:	xchg   esp,eax
  43c3c7:	js     0x43c3f3
  43c3c9:	inc    eax
  43c3ca:	pop    es
  43c3cb:	mov    WORD PTR [eax],?
  43c3cd:	xor    BYTE PTR [eax+ebx*8],al
  43c3d0:	mov    edx,0xb89fa960
  43c3d5:	sub    al,0xcf
  43c3d7:	sub    ebp,edx
  43c3d9:	jne    0x43c444
  43c3db:	xchg   ebx,eax
  43c3dc:	xchg   edx,eax
  43c3dd:	icebp  
  43c3de:	fisubr DWORD PTR [esp+ecx*4+0x2e]
  43c3e2:	sub    ecx,DWORD PTR [ebp+0xe35894b]
  43c3e8:	clc    
  43c3e9:	icebp  
  43c3ea:	fs or  ah,0x50
  43c3ee:	xlat   BYTE PTR ds:[ebx]
  43c3ef:	lods   al,BYTE PTR ds:[esi]
  43c3f0:	sub    eax,0x640a63f6
  43c3f5:	pop    eax
  43c3f6:	push   0x14e24845
  43c3fb:	adc    bl,dl
  43c3fd:	stos   BYTE PTR es:[edi],al
  43c3fe:	and    DWORD PTR [esi+0x7c],ebp
  43c401:	mov    al,ds:0xa9ec2f11
  43c406:	sbb    esp,DWORD PTR [eax+0x41]
  43c409:	fwait
  43c40a:	in     eax,dx
  43c40b:	ins    DWORD PTR es:[edi],dx
  43c40c:	mul    DWORD PTR [edx+0x64]
  43c40f:	icebp  
  43c410:	je     0x43c46a
  43c412:	cdq    
  43c413:	jecxz  0x43c3c9
  43c415:	pop    es
  43c416:	pop    ds
  43c417:	repz retf 0xae7c
  43c41b:	iret   
  43c41c:	outs   dx,DWORD PTR ds:[esi]
  43c41d:	fstp   QWORD PTR [esi-0x1b]
  43c420:	and    eax,0x7ceb5419
  43c425:	mov    al,ds:0x857542f0
  43c42a:	push   0x3522a017
  43c42f:	mov    ecx,0x3ba685b6
  43c434:	inc    ecx
  43c435:	jmp    0x43c479
  43c437:	jbe    0x43c3e8
  43c439:	(bad)  
  43c43a:	int3   
  43c43b:	in     al,dx
  43c43c:	lea    eax,[esi-0x7b]
  43c43f:	push   ss
  43c440:	xchg   ebp,eax
  43c441:	aam    0x91
  43c443:	mov    eax,ds:0x487a58d5
  43c448:	retf   
  43c449:	test   eax,0x8bb71165
  43c44e:	test   edi,ebp
  43c450:	xor    BYTE PTR [ecx+0x12eb781d],bh
  43c456:	dec    esp
  43c457:	or     DWORD PTR [edx+0x30],ebx
  43c45a:	mov    bl,0x7a
  43c45c:	test   DWORD PTR [ecx+0x4b],eax
  43c45f:	inc    edx
  43c460:	or     edi,esp
  43c462:	adc    BYTE PTR [ebx+0x2305ed9a],ch
  43c468:	mov    ecx,0xa96b25b
  43c46d:	aad    0x86
  43c46f:	loope  0x43c40d
  43c471:	xchg   edx,eax
  43c472:	adc    DWORD PTR [esi+eiz*4],ebp
  43c475:	jmp    0xe338:0x1a24de59
  43c47c:	push   esp
  43c47d:	popa   
  43c47e:	test   eax,0xcf73fe9a
  43c483:	scas   al,BYTE PTR es:[edi]
  43c484:	lahf   
  43c485:	push   cs
  43c486:	dec    eax
  43c487:	(bad)  
  43c488:	jl     0x43c4a0
  43c48a:	xor    ch,BYTE PTR [ecx+0x47598d4d]
  43c490:	lahf   
  43c491:	mov    ebx,0xf4e1ebc0
  43c496:	inc    esp
  43c497:	jp     0x43c504
  43c499:	loop   0x43c474
  43c49b:	sbb    al,0xaf
  43c49d:	rcr    edi,cl
  43c49f:	scas   eax,DWORD PTR es:[edi]
  43c4a0:	mov    edx,0x77ef2a8b
  43c4a5:	mov    bl,0x38
  43c4a7:	(bad)  
  43c4a8:	cli    
  43c4a9:	iret   
  43c4aa:	dec    edx
  43c4ab:	push   ebx
  43c4ac:	pop    es
  43c4ad:	and    al,0x3f
  43c4af:	or     eax,0x10cb1781
  43c4b4:	mov    WORD PTR [esi],?
  43c4b6:	dec    ebx
  43c4b7:	add    DWORD PTR [edi+0x565527c1],0x2bd087a0
  43c4c1:	mov    edx,0x9dd300ba
  43c4c6:	(bad)  
  43c4c8:	scas   al,BYTE PTR es:[edi]
  43c4c9:	aas    
  43c4ca:	mul    dl
  43c4cc:	dec    ax
  43c4ce:	imul   ebx,DWORD PTR [esi],0xb63380
  43c4d4:	xchg   edx,eax
  43c4d5:	jg     0x43c4d9
  43c4d7:	jo     0x43c4fb
  43c4d9:	and    bl,ch
  43c4db:	cli    
  43c4dc:	add    DWORD PTR ss:[eax],edi
  43c4df:	push   eax
  43c4e0:	dec    edi
  43c4e1:	inc    esi
  43c4e2:	sub    al,BYTE PTR [ecx]
  43c4e4:	inc    esp
  43c4e5:	inc    edx
  43c4e6:	adc    al,0xe2
  43c4e8:	add    cl,BYTE PTR [ebp+0x1a94fe35]
  43c4ee:	fcmovne st,st(7)
  43c4f0:	outs   dx,DWORD PTR ds:[esi]
  43c4f1:	inc    edi
  43c4f2:	out    0x7e,al
  43c4f4:	sub    esi,edi
  43c4f6:	pushf  
  43c4f7:	sahf   
  43c4f8:	lock inc esi
  43c4fa:	loopne 0x43c4e8
  43c4fc:	(bad)  
  43c4fd:	cwde   
  43c4fe:	inc    eax
  43c4ff:	aaa    
  43c500:	cmp    al,0x6b
  43c502:	imul   esp,DWORD PTR [ebx+0x777b147f],0x198a8b9e
  43c50c:	mov    ebp,0x9428c5f4
  43c511:	push   ebp
  43c512:	mov    ebx,cs
  43c514:	dec    ecx
  43c515:	xchg   ebp,eax
  43c516:	add    DWORD PTR [ebx],esi
  43c518:	lock outs dx,DWORD PTR ds:[esi]
  43c51a:	cmp    BYTE PTR [ebx],cl
  43c51c:	jne    0x43c55d
  43c51e:	outs   dx,DWORD PTR ds:[esi]
  43c51f:	push   eax
  43c520:	mov    cl,0x4
  43c522:	neg    DWORD PTR [ebp-0x7a]
  43c525:	or     edx,ebx
  43c527:	sbb    DWORD PTR [ebx+0x680892bc],eax
  43c52d:	pop    edi
  43c52e:	push   esi
  43c52f:	mov    ah,BYTE PTR [esi]
  43c531:	xchg   edx,eax
  43c532:	test   al,0x65
  43c534:	retf   
  43c535:	sahf   
  43c536:	leave  
  43c537:	xor    DWORD PTR [ebp-0x137fca95],0xffffffbb
  43c53e:	inc    edx
  43c53f:	enter  0x1b36,0xa
  43c543:	mov    ebp,0x312856c0
  43c548:	enter  0xd020,0x7d
  43c54c:	daa    
  43c54d:	ret    
  43c54e:	ror    ebx,0xbe
  43c551:	xchg   edi,eax
  43c552:	xchg   BYTE PTR [ecx],cl
  43c554:	in     eax,dx
  43c555:	push   ebx
  43c556:	xchg   ebx,eax
  43c557:	cmp    eax,ebx
  43c559:	icebp  
  43c55a:	in     eax,dx
  43c55b:	stos   DWORD PTR es:[edi],eax
  43c55c:	ja     0x43c545
  43c55e:	mov    edi,0xb88c33f8
  43c563:	inc    esi
  43c564:	cdq    
  43c565:	dec    ecx
  43c566:	and    edx,eax
  43c568:	mov    DWORD PTR [eax+esi*8],edi
  43c56b:	sbb    ebx,eax
  43c56d:	ss sbb al,0xa4
  43c570:	cmovg  esi,DWORD PTR [eax+0x31]
  43c574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c575:	scas   eax,DWORD PTR es:[edi]
  43c576:	or     dl,BYTE PTR [esi+ebx*1]
  43c579:	jge    0x43c553
  43c57b:	js     0x43c584
  43c57d:	sbb    ecx,DWORD PTR [ebx+0x11]
  43c580:	and    edx,0xffffffec
  43c583:	or     ecx,0xb6c94c27
  43c589:	sub    DWORD PTR [ecx],ecx
  43c58b:	jmp    0x4e64baf4
  43c590:	jmp    0x822e53b7
  43c595:	dec    edx
  43c596:	xchg   esi,eax
  43c597:	mov    ch,BYTE PTR ds:0xca8c224d
  43c59d:	in     eax,dx
  43c59e:	call   0xdfa76a6c
  43c5a3:	getsec 
  43c5a5:	mov    ebp,0x87248caa
  43c5aa:	pop    ebp
  43c5ab:	fwait
  43c5ac:	jmp    0x43c611
  43c5ae:	push   cs
  43c5af:	pop    ecx
  43c5b0:	(bad)  [edi]
  43c5b2:	xor    al,0xcb
  43c5b4:	fldcw  WORD PTR [ebp-0x3e]
  43c5b7:	mov    edx,DWORD PTR [ecx]
  43c5b9:	cmp    ah,BYTE PTR [edx]
  43c5bb:	loopne 0x43c5d4
  43c5bd:	dec    edx
  43c5be:	cmp    edx,ebp
  43c5c0:	retf   0x36bd
  43c5c3:	(bad)  
  43c5c4:	jbe    0x43c5b5
  43c5c6:	and    ch,BYTE PTR [esi+0x43]
  43c5c9:	int    0xf6
  43c5cb:	and    DWORD PTR [ebx-0x57ca2e47],edx
  43c5d1:	aam    0x63
  43c5d3:	pusha  
  43c5d4:	sbb    bl,BYTE PTR [ebx+0x3db3d651]
  43c5da:	cmp    DWORD PTR [ebx+0x46],ebx
  43c5dd:	mov    edi,0x7f1b85b0
  43c5e2:	mov    ah,0x8
  43c5e4:	fcmovu st,st(2)
  43c5e6:	sub    eax,0x4ceb7c7e
  43c5eb:	xor    al,0xbe
  43c5ed:	inc    edx
  43c5ee:	xor    DWORD PTR [esp+edx*2],eax
  43c5f1:	push   esi
  43c5f2:	jl     0x43c603
  43c5f4:	test   BYTE PTR ds:0x3ad13d69,cl
  43c5fa:	(bad)  
  43c5fb:	fs gs loope 0x43c599
  43c5ff:	mov    edx,0x96af9a6c
  43c604:	hlt    
  43c605:	and    BYTE PTR [edx],bl
  43c607:	sub    BYTE PTR [eax+0x149c6323],cl
  43c60d:	outs   dx,DWORD PTR ds:[esi]
  43c60e:	stos   BYTE PTR es:[edi],al
  43c60f:	jbe    0x43c608
  43c611:	call   0x25df:0xc32abf1a
  43c618:	(bad)  
  43c619:	xor    edx,DWORD PTR [ecx+0x3e]
  43c61c:	add    al,0x69
  43c61e:	in     ax,dx
  43c620:	xchg   esp,eax
  43c621:	pop    esi
  43c622:	mov    ch,0x6d
  43c624:	or     al,ch
  43c626:	sar    cl,cl
  43c628:	je     0x43c5b7
  43c62a:	push   ecx
  43c62b:	sbb    DWORD PTR [edi-0x4a],esi
  43c62e:	xchg   esp,eax
  43c62f:	xlat   BYTE PTR ds:[ebx]
  43c630:	rcr    BYTE PTR [ecx],0x19
  43c633:	imul   ecx,DWORD PTR cs:[ecx],0x607ae029
  43c63a:	retf   
  43c63b:	xor    eax,0x4ff79f85
  43c640:	and    ch,0x18
  43c643:	jp     0x43c67c
  43c645:	daa    
  43c646:	cmp    edi,DWORD PTR [eax]
  43c648:	(bad)  
  43c649:	sti    
  43c64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c64b:	sub    eax,0x726161e0
  43c650:	retf   
  43c651:	jecxz  0x43c608
  43c653:	mov    ebx,0xbec3daa8
  43c658:	test   BYTE PTR [edi],cl
  43c65a:	sahf   
  43c65b:	neg    BYTE PTR [esi]
  43c65d:	dec    esp
  43c65e:	aas    
  43c65f:	xlat   BYTE PTR ds:[ebx]
  43c660:	push   eax
  43c661:	mov    dl,0x52
  43c663:	jns    0x43c615
  43c665:	aad    0x23
  43c667:	mov    cl,0x98
  43c669:	sbb    bl,dh
  43c66b:	or     ah,BYTE PTR [edi-0xe]
  43c66e:	adc    al,0x5
  43c670:	mov    ds,edi
  43c672:	ret    
  43c673:	sbb    DWORD PTR [edx],ebp
  43c675:	add    BYTE PTR [edx-0x5d0cc6f5],0x94
  43c67c:	dec    ebx
  43c67d:	inc    esi
  43c67e:	bound  esp,QWORD PTR [ecx]
  43c680:	jge    0x43c61f
  43c682:	and    edi,eax
  43c684:	dec    edx
  43c685:	cwde   
  43c686:	(bad)  
  43c687:	jge    0x43c655
  43c689:	jmp    0xe791:0xb6834776
  43c690:	mov    al,0xc9
  43c692:	jmp    0x9e84:0x4d98f544
  43c699:	push   es
  43c69a:	mov    ds:0xcd22191d,eax
  43c69f:	daa    
  43c6a0:	sbb    ebp,DWORD PTR [edi]
  43c6a2:	rcl    BYTE PTR [esi+0x68a64aa8],cl
  43c6a8:	shr    BYTE PTR [ecx+0x1f17a035],1
  43c6ae:	inc    ebp
  43c6af:	out    0x2f,al
  43c6b1:	cmp    al,0xf7
  43c6b3:	xchg   edx,eax
  43c6b4:	sub    cl,ch
  43c6b6:	in     al,0x96
  43c6b8:	xlat   BYTE PTR ds:[ebx]
  43c6b9:	aad    0x65
  43c6bb:	mov    dl,0xd7
  43c6bd:	pop    edi
  43c6be:	dec    edi
  43c6bf:	inc    edi
  43c6c0:	cli    
  43c6c1:	and    eax,edx
  43c6c3:	loopne 0x43c684
  43c6c5:	dec    esp
  43c6c6:	out    0xa6,al
  43c6c8:	fcom   st(6)
  43c6ca:	in     eax,0x5c
  43c6cc:	dec    esp
  43c6cd:	pop    edx
  43c6ce:	lds    esi,FWORD PTR [esi+edx*2+0x3f58308a]
  43c6d5:	mov    ah,0x18
  43c6d7:	lock inc ecx
  43c6d9:	mov    bl,0xa
  43c6db:	ficom  DWORD PTR [ebx]
  43c6dd:	in     eax,dx
  43c6de:	outs   dx,DWORD PTR ds:[esi]
  43c6df:	dec    edx
  43c6e0:	pop    ebx
  43c6e2:	or     eax,0x95e62aa2
  43c6e7:	loop   0x43c66e
  43c6e9:	repz cdq 
  43c6eb:	xor    ah,BYTE PTR [eax+edx*4]
  43c6ee:	jb     0x43c6d5
  43c6f0:	jl     0x43c73e
  43c6f2:	inc    ecx
  43c6f3:	addr16 repz call 0xdba8c236
  43c6fa:	jmp    0xe1da:0x270063fc
  43c701:	jnp    0x43c6e1
  43c703:	mov    esi,0x77904c1b
  43c708:	popf   
  43c709:	push   cs
  43c70a:	mov    al,es:0x4d777ac3
  43c710:	xor    al,0x25
  43c712:	test   DWORD PTR [ebx+0x33],ebx
  43c715:	jnp    0x43c783
  43c717:	adc    dl,0x51
  43c71a:	loop   0x43c6f6
  43c71c:	and    BYTE PTR [eax],bh
  43c71e:	sub    bh,ch
  43c720:	mov    al,ds:0xe6ba53b3
  43c725:	addr16 test al,0x5c
  43c728:	push   ebp
  43c729:	fnstenv [edi-0x53]
  43c72c:	and    eax,0xbb202ba5
  43c731:	fdiv   st,st(2)
  43c733:	enter  0x406b,0x6
  43c737:	outs   dx,DWORD PTR ds:[esi]
  43c738:	or     ecx,0x203a9618
  43c73e:	sbb    DWORD PTR [ecx-0x538da996],0x205f4ba0
  43c748:	lock add eax,ecx
  43c74b:	ds jecxz 0x43c701
  43c74e:	out    0xa7,eax
  43c750:	sbb    edi,DWORD PTR [edx-0x1e]
  43c753:	test   BYTE PTR [ecx-0x4d],al
  43c756:	sub    cl,BYTE PTR [edi+0x5472e06b]
  43c75c:	add    DWORD PTR [edx],0xffffff8a
  43c75f:	cmp    al,0xfe
  43c761:	jp     0x43c74c
  43c763:	adc    DWORD PTR [ecx],0x95f75ca1
  43c769:	pop    edx
  43c76a:	xor    DWORD PTR [esi+edi*8-0x8],0xffffffa7
  43c76f:	ror    DWORD PTR [ecx],0x99
  43c772:	inc    ebp
  43c773:	push   ds
  43c774:	into   
  43c775:	lea    ebx,[esi+0x3f]
  43c778:	out    dx,al
  43c779:	imul   ebx,DWORD PTR [eax+0x7e33c605],0xffffffde
  43c780:	xor    DWORD PTR [esp+ebp*4+0x51],esp
  43c784:	xor    al,0xa4
  43c786:	das    
  43c787:	xor    eax,0xcb6468a2
  43c78c:	push   es
  43c78d:	mov    cl,0x65
  43c78f:	rol    DWORD PTR [edx+0x4c1f558d],cl
  43c795:	mov    esi,0xbc8c3e16
  43c79a:	add    eax,0x6bbaed71
  43c79f:	pop    es
  43c7a0:	or     al,0xf3
  43c7a2:	push   ss
  43c7a3:	or     BYTE PTR [edi-0x6fc6b481],0x32
  43c7aa:	inc    ebp
  43c7ab:	pop    edi
  43c7ac:	jo     0x43c805
  43c7ae:	fwait
  43c7af:	dec    edx
  43c7b0:	mov    al,ds:0x8e3ddf35
  43c7b5:	(bad)  
  43c7b7:	fwait
  43c7b8:	mov    ch,0x30
  43c7ba:	or     bh,BYTE PTR [edi+0x3e2caf75]
  43c7c0:	inc    esi
  43c7c1:	sub    BYTE PTR [edx],bh
  43c7c3:	jns    0x43c7b8
  43c7c5:	popf   
  43c7c6:	(bad)  
  43c7c7:	sbb    bh,al
  43c7c9:	out    0xc,al
  43c7cb:	jnp    0x43c7b5
  43c7cd:	push   ecx
  43c7ce:	outs   dx,BYTE PTR ds:[esi]
  43c7cf:	sbb    DWORD PTR [ebp-0x53cc5865],edi
  43c7d5:	loope  0x43c78d
  43c7d7:	mov    ah,0x18
  43c7d9:	ja     0x43c7b7
  43c7db:	fnsave [ebp+esi*1+0x440ddd28]
  43c7e2:	adc    BYTE PTR [ebp-0x5e],ah
  43c7e5:	dec    ecx
  43c7e6:	dec    eax
  43c7e7:	mov    WORD PTR [ebx+ebp*8+0xd0c7c80],?
  43c7ee:	pop    edi
  43c7ef:	in     al,dx
  43c7f0:	iret   
  43c7f1:	jecxz  0x43c814
  43c7f3:	lods   eax,DWORD PTR ds:[esi]
  43c7f4:	sub    DWORD PTR ds:0xde7d4f6,edi
  43c7fa:	gs (bad) 
  43c7fc:	mov    ah,0x44
  43c7fe:	lods   eax,DWORD PTR ds:[esi]
  43c7ff:	cs sbb eax,eax
  43c802:	inc    esp
  43c803:	nop
  43c804:	clc    
  43c805:	jno    0x43c837
  43c807:	mov    eax,0x81c5c5f1
  43c80c:	stos   BYTE PTR es:[edi],al
  43c80d:	sti    
  43c80e:	iret   
  43c80f:	loopne 0x43c7d8
  43c811:	dec    esi
  43c812:	dec    esp
  43c813:	std    
  43c814:	in     al,dx
  43c815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c816:	adc    eax,0x866b143c
  43c81b:	mov    al,0xd8
  43c81d:	loopne 0x43c7d7
  43c81f:	push   ebp
  43c820:	jg     0x43c7e1
  43c822:	loop   0x43c7e2
  43c824:	out    0x29,eax
  43c826:	sub    BYTE PTR [ebx+0x42],dh
  43c829:	sub    DWORD PTR [edi],edi
  43c82b:	pop    edx
  43c82c:	mov    ebp,0x8a0b4c47
  43c831:	jp     0x43c825
  43c833:	push   0xbdeb8f8a
  43c838:	mov    ds:0x18140f16,al
  43c83d:	(bad)  
  43c83e:	mov    ds:0xb0ae935e,eax
  43c843:	xchg   esi,eax
  43c844:	cwde   
  43c845:	ins    DWORD PTR es:[edi],dx
  43c846:	sbb    edi,DWORD PTR [ecx]
  43c848:	lods   eax,DWORD PTR ds:[esi]
  43c849:	xlat   BYTE PTR ds:[ebx]
  43c84a:	fcmovne st,st(2)
  43c84c:	mov    DWORD PTR [eax-0xc],0x46fd64d4
  43c853:	mov    bh,0x1
  43c855:	push   esi
  43c856:	or     al,0x41
  43c858:	rol    BYTE PTR [eax+0x4a],1
  43c85b:	das    
  43c85c:	xchg   eax,esp
  43c85e:	fs inc edi
  43c860:	lods   al,BYTE PTR ds:[esi]
  43c861:	add    dh,BYTE PTR [ebp+0x3d032dd0]
  43c867:	jmp    DWORD PTR [ecx-0x5e]
  43c86a:	cld    
  43c86b:	popa   
  43c86c:	(bad)  
  43c86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c86e:	outs   dx,DWORD PTR ds:[esi]
  43c86f:	or     dh,ch
  43c871:	das    
  43c872:	mov    ecx,edx
  43c874:	inc    ebp
  43c875:	sbb    DWORD PTR [ebx+0x49],edi
  43c878:	aas    
  43c879:	leave  
  43c87a:	imul   bl
  43c87c:	mov    esp,0x342a6c5e
  43c881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c882:	les    eax,FWORD PTR [esi+0x1a]
  43c885:	ds stos BYTE PTR es:[edi],al
  43c887:	iret   
  43c888:	aad    0xca
  43c88a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c88b:	scas   al,BYTE PTR es:[edi]
  43c88c:	fldcw  WORD PTR [ecx]
  43c88e:	jbe    0x43c852
  43c890:	inc    edi
  43c891:	dec    ebp
  43c892:	in     al,dx
  43c893:	xchg   esp,eax
  43c894:	aaa    
  43c895:	test   al,0x73
  43c897:	mov    eax,0xe8cb2958
  43c89c:	clc    
  43c89d:	pop    eax
  43c89e:	xchg   ecx,eax
  43c89f:	outs   dx,BYTE PTR cs:[esi]
  43c8a1:	inc    esp
  43c8a2:	xor    dh,al
  43c8a4:	inc    esi
  43c8a5:	hlt    
  43c8a6:	dec    ebp
  43c8a7:	push   ebp
  43c8a8:	cs cmp bl,dl
  43c8ab:	adc    DWORD PTR [edi-0x2e],esp
  43c8ae:	jmp    0xcb59:0xf455f976
  43c8b5:	cmp    esp,DWORD PTR [edx]
  43c8b7:	pop    esi
  43c8b8:	call   DWORD PTR [eax-0x6f83bbeb]
  43c8be:	push   es
  43c8bf:	and    al,0x6d
  43c8c1:	xor    dl,BYTE PTR [ebx]
  43c8c3:	or     eax,0xaf4760eb
  43c8c8:	or     esi,DWORD PTR [esi-0x4a]
  43c8cb:	or     DWORD PTR [ecx+0x1e56f06c],edx
  43c8d1:	out    0xc,eax
  43c8d3:	fs jge 0x43c933
  43c8d6:	xor    eax,0x382e2e7a
  43c8db:	adc    edx,DWORD PTR [edx+0x0]
  43c8de:	dec    eax
  43c8df:	scas   eax,DWORD PTR es:[edi]
  43c8e0:	retf   0x514e
  43c8e3:	fdivr  QWORD PTR [esi-0x29]
  43c8e6:	pop    ss
  43c8e7:	mov    al,ds:0xa5f51f31
  43c8ec:	shl    DWORD PTR [ebx],1
  43c8ee:	xchg   ebp,eax
  43c8ef:	lds    edi,FWORD PTR [eax+0xe0b9557]
  43c8f5:	out    0x41,al
  43c8f7:	xchg   edi,eax
  43c8f8:	jecxz  0x43c965
  43c8fa:	cmp    DWORD PTR [edx-0x4d],ecx
  43c8fd:	les    ebx,FWORD PTR [esi-0x6712d23a]
  43c903:	jo     0x43c933
  43c905:	in     eax,0x93
  43c907:	jl     0x43c8d4
  43c909:	push   es
  43c90a:	mov    WORD PTR [eax],gs
  43c90c:	push   eax
  43c90d:	xor    eax,0x14b15f90
  43c912:	mov    bl,0x37
  43c914:	in     eax,dx
  43c915:	aad    0x2d
  43c917:	inc    edi
  43c918:	fcmovbe st,st(4)
  43c91a:	stos   DWORD PTR es:[edi],eax
  43c91b:	in     eax,0x77
  43c91d:	dec    edi
  43c91e:	into   
  43c91f:	ds mov edx,0x47bc03bf
  43c925:	aaa    
  43c926:	fwait
  43c927:	bsf    edx,DWORD PTR [edx+0x3c4f65c6]
  43c92e:	out    dx,al
  43c92f:	jge    0x43c937
  43c931:	sbb    ebx,DWORD PTR [edx+esi*8]
  43c934:	jecxz  0x43c90d
  43c936:	add    al,0x25
  43c938:	scas   eax,DWORD PTR es:[edi]
  43c939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c93a:	cmc    
  43c93b:	and    eax,esp
  43c93d:	popf   
  43c93e:	xchg   ecx,eax
  43c93f:	sub    ebx,esi
  43c941:	in     al,0xa1
  43c943:	rcl    DWORD PTR [ecx],cl
  43c945:	outs   dx,BYTE PTR ds:[esi]
  43c946:	aaa    
  43c947:	or     al,0x44
  43c949:	jnp    0x43c975
  43c94b:	adc    ecx,ecx
  43c94d:	mov    al,ds:0x193c1e25
  43c952:	jno    0x43c8ee
  43c954:	test   eax,0x8f3b077b
  43c959:	xchg   edi,eax
  43c95a:	iret   
  43c95b:	adc    BYTE PTR [esi+ecx*4-0x3d],0x3
  43c960:	loopne 0x43c9b7
  43c962:	push   ss
  43c963:	mov    ch,0xa8
  43c965:	and    esi,DWORD PTR [ecx+esi*8]
  43c968:	sbb    BYTE PTR [ebx],dh
  43c96a:	adc    ebx,ebx
  43c96c:	(bad)  
  43c96d:	jp     0x43c9a1
  43c96f:	dec    esi
  43c970:	sub    BYTE PTR [eax],al
  43c972:	test   BYTE PTR [ebp-0x6f],dl
  43c975:	cmp    eax,0xa49923be
  43c97a:	push   cs
  43c97b:	mov    al,cs:0x268b1870
  43c981:	cli    
  43c982:	xchg   ecx,eax
  43c983:	rcl    BYTE PTR [edi],cl
  43c985:	mov    ebx,esi
  43c987:	adc    esp,DWORD PTR [edi+ebp*8+0x47]
  43c98b:	mov    ecx,0x7a0ba0f2
  43c990:	fwait
  43c991:	jecxz  0x43c995
  43c993:	enter  0x290f,0xdb
  43c997:	fadd   DWORD PTR ds:0xfc6ee222
  43c99d:	fstp   TBYTE PTR [ebp-0x72532fff]
  43c9a3:	int    0x94
  43c9a5:	mov    ds,WORD PTR [ebx+0x22]
  43c9a8:	xchg   BYTE PTR ds:0x66cba94c,dh
  43c9ae:	stos   DWORD PTR es:[edi],eax
  43c9af:	xchg   edi,eax
  43c9b0:	fs push edx
  43c9b2:	fsub   st,st(4)
  43c9b4:	(bad)  
  43c9b7:	ja     0x43c9df
  43c9b9:	mov    ebp,0x8a615c69
  43c9be:	addr16 and ch,bl
  43c9c1:	cs jns 0x43c97e
  43c9c4:	push   ss
  43c9c5:	mov    ds:0xdb7d6b87,eax
  43c9ca:	or     cl,BYTE PTR [edx]
  43c9cc:	push   ss
  43c9cd:	jno    0x43c9bb
  43c9cf:	xor    esp,edx
  43c9d1:	lods   eax,DWORD PTR ds:[esi]
  43c9d2:	xor    eax,0x8dd56616
  43c9d7:	xor    BYTE PTR [esi],dh
  43c9d9:	ds sub al,0x8b
  43c9dc:	and    eax,0x753b8c20
  43c9e1:	je     0x43ca22
  43c9e3:	jmp    0x63780bb0
  43c9e8:	mov    ds:0x91e6ca4a,eax
  43c9ed:	(bad)  
  43c9ee:	push   ss
  43c9ef:	jge    0x43c974
  43c9f1:	fst    QWORD PTR [esi+0x423485ed]
  43c9f7:	out    dx,al
  43c9f8:	inc    ecx
  43c9f9:	push   ss
  43c9fa:	test   al,0x4e
  43c9fc:	dec    esi
  43c9fd:	out    dx,eax
  43c9fe:	test   edx,ecx
  43ca00:	test   BYTE PTR [eax],bh
  43ca02:	jo     0x43ca07
  43ca04:	pop    ecx
  43ca05:	and    eax,0xc5c6a33d
  43ca0a:	push   ss
  43ca0b:	cmp    eax,0x317d25d5
  43ca10:	rol    BYTE PTR [ebx],1
  43ca12:	jno    0x43ca1b
  43ca14:	xchg   DWORD PTR [eax+0x9b1f5a3],ecx
  43ca1a:	dec    ecx
  43ca1b:	daa    
  43ca1c:	mov    dh,0xcb
  43ca1e:	push   ebx
  43ca1f:	int3   
  43ca20:	dec    ebp
  43ca21:	cmp    cl,BYTE PTR [esi-0x7328f8ff]
  43ca27:	xchg   ecx,eax
  43ca28:	push   0x25
  43ca2a:	loope  0x43ca9d
  43ca2c:	ret    0x9e9f
  43ca2f:	or     cl,BYTE PTR [ebp-0x4c]
  43ca32:	fild   WORD PTR [ebx-0x4958ad7f]
  43ca38:	sbb    eax,0x4eec171f
  43ca3d:	mov    ah,0xb0
  43ca3f:	jns    0x43c9fc
  43ca41:	mov    dl,0x5c
  43ca43:	add    esp,ebx
  43ca45:	call   FWORD PTR [edi]
  43ca47:	mov    edi,0x7c3658b
  43ca4c:	adc    DWORD PTR [ebx+0x65],edx
  43ca4f:	push   cs
  43ca50:	ja     0x43cab5
  43ca52:	jbe    0x43ca37
  43ca54:	icebp  
  43ca55:	loopne 0x43ca7f
  43ca57:	xchg   DWORD PTR [ebx-0x6ac6483a],ebp
  43ca5d:	cld    
  43ca5e:	mov    ch,0xf7
  43ca60:	inc    edx
  43ca61:	scas   eax,DWORD PTR es:[edi]
  43ca62:	sub    DWORD PTR [edx-0x2af69e93],ebx
  43ca68:	test   dh,0x5a
  43ca6b:	rcl    BYTE PTR [ebx-0x32c82c29],cl
  43ca71:	les    eax,FWORD PTR [esi-0x6cce86d9]
  43ca77:	mov    esp,0x6b5f43fc
  43ca7c:	jbe    0x43caf3
  43ca7e:	loope  0x43cad7
  43ca80:	idiv   BYTE PTR [ebx*2-0x15feffa6]
  43ca87:	cld    
  43ca88:	cld    
  43ca89:	push   ebx
  43ca8a:	xchg   ebx,eax
  43ca8b:	or     dh,ch
  43ca8d:	sub    dh,BYTE PTR [ecx]
  43ca8f:	retf   
  43ca90:	hlt    
  43ca91:	xchg   esp,ebp
  43ca93:	out    dx,eax
  43ca94:	lods   eax,DWORD PTR ds:[esi]
  43ca95:	inc    edi
  43ca96:	leave  
  43ca97:	add    BYTE PTR [edx+esi*1],cl
  43ca9a:	in     eax,0x2b
  43ca9c:	jge    0x43caf6
  43ca9e:	xchg   ebp,eax
  43ca9f:	shrd   DWORD PTR [edx-0x4819af4f],esi,cl
  43caa6:	mov    esi,0xc128f863
  43caab:	push   ebp
  43caac:	stos   DWORD PTR es:[edi],eax
  43caad:	jnp    0x43caf7
  43caaf:	addr16 int 0x7d
  43cab2:	repnz daa 
  43cab4:	iret   
  43cab5:	retf   0x2856
  43cab8:	xchg   BYTE PTR [ecx],ah
  43caba:	retf   
  43cabb:	push   edx
  43cabc:	gs out dx,eax
  43cabe:	dec    edi
  43cabf:	inc    edx
  43cac0:	out    dx,eax
  43cac1:	push   ebp
  43cac2:	sbb    esp,DWORD PTR [eax]
  43cac4:	dec    esp
  43cac5:	pop    esp
  43cac6:	out    dx,al
  43cac7:	fwait
  43cac8:	xchg   ebx,eax
  43cac9:	outs   dx,BYTE PTR ds:[esi]
  43caca:	icebp  
  43cacb:	sti    
  43cacc:	sub    dh,BYTE PTR [edx]
  43cace:	sub    edi,esi
  43cad0:	sub    cl,BYTE PTR [edi]
  43cad2:	(bad)  
  43cad3:	jge    0x43cac3
  43cad5:	enter  0xc3a,0xa2
  43cad9:	fs pusha 
  43cadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cadc:	in     al,dx
  43cadd:	out    dx,al
  43cade:	rol    BYTE PTR [ecx+0x234203e4],cl
  43cae4:	mov    bl,ah
  43cae6:	ins    DWORD PTR es:[edi],dx
  43cae7:	fdivr  QWORD PTR [edi]
  43cae9:	pop    esi
  43caea:	push   cs
  43caeb:	int3   
  43caec:	ret    
  43caed:	xchg   ebx,eax
  43caee:	and    al,BYTE PTR [ecx+ecx*1]
  43caf1:	aaa    
  43caf2:	js     0x43cb3a
  43caf4:	(bad)  
  43caf5:	xor    eax,0xe4f030f2
  43cafa:	dec    edx
  43cafb:	fistp  WORD PTR ss:[eax-0x4fbe046f]
  43cb02:	cmp    eax,0x6c684232
  43cb07:	imul   edx,DWORD PTR [ebx-0x71cd0227],0x29716d71
  43cb11:	cmp    bh,BYTE PTR [ecx]
  43cb13:	mov    edx,0x4ede9e4e
  43cb18:	cld    
  43cb19:	xor    ah,cl
  43cb1b:	rcl    ebp,0xf9
  43cb1e:	cmp    ecx,DWORD PTR [ecx+0x45]
  43cb21:	call   0x52a89d81
  43cb26:	inc    esp
  43cb27:	sbb    DWORD PTR [esi],eax
  43cb29:	(bad)  
  43cb2a:	pop    DWORD PTR [ebx]
  43cb2c:	push   cs
  43cb2d:	aaa    
  43cb2e:	push   ebp
  43cb2f:	sub    BYTE PTR [esi+0x6c5f6672],0xf5
  43cb36:	mov    al,ds:0x6179eafd
  43cb3b:	lods   al,BYTE PTR ds:[esi]
  43cb3c:	inc    ebx
  43cb3d:	cmp    dl,bl
  43cb3f:	aad    0xb
  43cb41:	or     eax,0x2c1849cb
  43cb46:	imul   eax,DWORD PTR [ecx],0x1b
  43cb49:	sub    edx,DWORD PTR [ebp-0xc]
  43cb4c:	shl    cl,1
  43cb4e:	push   edx
  43cb4f:	inc    esi
  43cb50:	inc    eax
  43cb51:	xchg   esi,eax
  43cb52:	and    ch,BYTE PTR [esi+0x6e3ea920]
  43cb58:	or     dh,bh
  43cb5a:	shl    DWORD PTR [ebx+ebp*1],cl
  43cb5d:	dec    esi
  43cb5e:	mov    ah,0x48
  43cb60:	xor    ch,BYTE PTR [ebp+0x49b1f936]
  43cb66:	sbb    BYTE PTR [esi-0x61],bh
  43cb69:	sbb    ecx,ebx
  43cb6b:	sub    al,0x5e
  43cb6d:	bound  esi,QWORD PTR [ecx+0x4f9256bb]
  43cb73:	adc    cl,BYTE PTR [edi+0x12794f32]
  43cb79:	mov    ch,0x3c
  43cb7b:	imul   esi,DWORD PTR [eax-0x62],0x66
  43cb7f:	xor    al,0xd2
  43cb81:	mov    edx,0x650833ce
  43cb86:	cwde   
  43cb87:	cmp    edx,DWORD PTR [ebp-0x7f]
  43cb8a:	sub    al,0x81
  43cb8c:	loopne 0x43cb23
  43cb8e:	jae    0x43cbf6
  43cb90:	pusha  
  43cb91:	adc    esi,DWORD PTR [esi-0x75]
  43cb94:	fwait
  43cb95:	jnp    0x43cb42
  43cb97:	fcomi  st,st(1)
  43cb99:	icebp  
  43cb9a:	(bad)  
  43cb9b:	mov    ecx,0x5b5c406c
  43cba0:	sub    BYTE PTR [ebx+0x58],bh
  43cba3:	dec    ebx
  43cba4:	xchg   ebp,eax
  43cba5:	adc    DWORD PTR [edx],edx
  43cba7:	arpl   WORD PTR [esp+ebp*2-0x30],bx
  43cbab:	in     al,0x80
  43cbad:	into   
  43cbae:	shl    esi,0x65
  43cbb1:	enter  0x7036,0xff
  43cbb5:	pop    edi
  43cbb6:	or     ah,BYTE PTR [edi+0x7ac11867]
  43cbbc:	pop    esi
  43cbbd:	gs scas al,BYTE PTR es:[edi]
  43cbbf:	jmp    0xbefe:0x3f24f96a
  43cbc6:	aad    0xf
  43cbc8:	mov    dh,0x6d
  43cbca:	lock repnz pop esp
  43cbcd:	push   es
  43cbce:	les    ebp,FWORD PTR [esi]
  43cbd0:	xchg   ebp,eax
  43cbd1:	and    al,0x6d
  43cbd3:	ins    BYTE PTR es:[edi],dx
  43cbd4:	dec    ecx
  43cbd5:	jbe    0x43cc4b
  43cbd7:	fldenv ds:0xda005bd8
  43cbdd:	jecxz  0x43cb92
  43cbdf:	jle    0x43cc55
  43cbe1:	xor    bh,BYTE PTR [edi+0xecb8c13]
  43cbe7:	pop    ss
  43cbe8:	cmp    DWORD PTR [ebx],0xfffffff5
  43cbeb:	pop    eax
  43cbec:	sbb    al,0xc
  43cbee:	(bad)  
  43cbef:	mov    eax,0x5d892abe
  43cbf4:	call   0xed65:0xf78166fb
  43cbfb:	dec    eax
  43cbfc:	fld    DWORD PTR [edi+ebx*8+0x0]
  43cc00:	cmp    edi,DWORD PTR [ecx-0x8]
  43cc03:	or     esi,ebx
  43cc05:	imul   ebx,ebx,0xc23cfbe1
  43cc0b:	ret    
  43cc0c:	mov    BYTE PTR [esi-0x5],cl
  43cc0f:	fimul  WORD PTR [edx-0x30]
  43cc12:	pop    esp
  43cc13:	loop   0x43cc57
  43cc15:	cmp    bl,BYTE PTR [ebx]
  43cc17:	es mov dl,0xe3
  43cc1a:	fidivr DWORD PTR [esi+0x2ae62e45]
  43cc20:	cmp    esp,ebx
  43cc22:	jns    0x43cbd7
  43cc24:	mov    ds,edx
  43cc26:	or     cl,dl
  43cc28:	in     al,dx
  43cc29:	test   al,0x7d
  43cc2b:	xor    edx,DWORD PTR [edi+0x5]
  43cc2e:	(bad)  
  43cc2f:	(bad)  [esi-0x64]
  43cc32:	mul    DWORD PTR [ebx-0x97843ec]
  43cc38:	cmp    al,bl
  43cc3a:	mov    ebp,0x54e841de
  43cc3f:	pusha  
  43cc40:	jecxz  0x43cc33
  43cc42:	sti    
  43cc43:	mov    dh,0x2c
  43cc45:	lods   eax,DWORD PTR ds:[esi]
  43cc46:	in     al,dx
  43cc47:	idiv   BYTE PTR [ebx+0x18698745]
  43cc4d:	mov    dl,0x7f
  43cc4f:	pop    eax
  43cc50:	push   esp
  43cc51:	push   ebx
  43cc52:	stos   BYTE PTR es:[edi],al
  43cc53:	jp     0x43ccce
  43cc55:	or     al,0x59
  43cc57:	cmc    
  43cc58:	mov    edi,0xcf5d14a4
  43cc5d:	jnp    0x43cc89
  43cc5f:	mov    al,0x83
  43cc61:	aaa    
  43cc62:	inc    esp
  43cc63:	xchg   ebx,eax
  43cc64:	and    DWORD PTR [edx-0x29],eax
  43cc67:	jle    0x43cc32
  43cc69:	add    ebx,DWORD PTR [edi+ebx*2+0x1c4d8055]
  43cc70:	mov    dh,0x45
  43cc72:	retf   0x6e4f
  43cc75:	sahf   
  43cc76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cc77:	and    esp,eax
  43cc79:	stos   BYTE PTR es:[edi],al
  43cc7a:	mov    al,ds:0xfa0ffbeb
  43cc7f:	in     al,dx
  43cc80:	mov    BYTE PTR [ebp-0x40],bl
  43cc83:	jg     0x43cccd
  43cc85:	fistp  QWORD PTR ds:0x655f95d6
  43cc8b:	pop    edx
  43cc8c:	cdq    
  43cc8d:	das    
  43cc8e:	mov    ah,0x9f
  43cc90:	cmp    BYTE PTR [eax],0x56
  43cc93:	mov    ds:0x22ac1b40,eax
  43cc98:	iret   
  43cc99:	ds dec ebp
  43cc9b:	(bad)  
  43cc9c:	int3   
  43cc9d:	jp     0x43cd19
  43cc9f:	arpl   WORD PTR [eax+0x1c],bp
  43cca2:	hlt    
  43cca3:	aad    0xa9
  43cca5:	sbb    DWORD PTR [eax+0x68ddece4],esi
  43ccab:	mov    eax,ds:0xd8d1d812
  43ccb0:	add    esi,DWORD PTR [esi+0x317081b7]
  43ccb6:	mov    bl,BYTE PTR [esp+eiz*2]
  43ccb9:	(bad)  
  43ccba:	cmp    al,BYTE PTR [ebx+ebp*4+0x50]
  43ccbe:	mov    ds:0x7a2094e7,al
  43ccc3:	pop    es
  43ccc4:	test   al,0xbd
  43ccc6:	ret    0xc053
  43ccc9:	jns    0x43cccb
  43cccb:	or     al,0x99
  43cccd:	push   0xa7c9160b
  43ccd2:	int    0x9f
  43ccd4:	and    BYTE PTR ss:0x1f9aa33b,dl
  43ccdb:	adc    ecx,DWORD PTR [ebx]
  43ccdd:	jge    0x43ccfe
  43ccdf:	xor    dh,0xe4
  43cce2:	nop
  43cce3:	rol    BYTE PTR [eax+0x40405599],1
  43cce9:	packssdw mm4,QWORD PTR [esi+0x2ac2a188]
  43ccf0:	dec    eax
  43ccf1:	mov    esi,0x5ff3dbe6
  43ccf6:	jbe    0x43cd02
  43ccf8:	(bad)  
  43ccf9:	sahf   
  43ccfa:	xchg   ebx,eax
  43ccfb:	jp     0x43cc96
  43ccfd:	fdiv   DWORD PTR [eax]
  43ccff:	lock or ecx,ecx
  43cd02:	mov    ah,0xf3
  43cd04:	xchg   edi,eax
  43cd05:	ins    BYTE PTR es:[edi],dx
  43cd06:	mov    DWORD PTR [edx-0x29],edi
  43cd09:	push   esp
  43cd0a:	mov    ecx,0x8569a54b
  43cd0f:	adc    DWORD PTR [ebx-0x1f],esi
  43cd12:	(bad)  
  43cd13:	leave  
  43cd14:	dec    ebx
  43cd15:	jmp    0x43cd18
  43cd17:	test   BYTE PTR [eax],dl
  43cd19:	loopne 0x43ccaa
  43cd1b:	xor    BYTE PTR [edi+esi*2+0x770e2cff],dh
  43cd22:	in     al,0x94
  43cd24:	pop    esi
  43cd25:	fisubr WORD PTR ss:[edi]
  43cd28:	mov    ds:0x6112e56e,eax
  43cd2d:	push   eax
  43cd2e:	mov    bh,0xca
  43cd30:	sub    al,0xf1
  43cd32:	inc    edi
  43cd33:	jne    0x43cd4e
  43cd35:	cmp    edx,esp
  43cd37:	popa   
  43cd38:	jbe    0x43cd84
  43cd3a:	push   ebp
  43cd3b:	mov    ch,0xf8
  43cd3d:	nop
  43cd3e:	test   al,0x1a
  43cd40:	sbb    al,BYTE PTR [ecx-0x67]
  43cd43:	push   ss
  43cd44:	lods   al,BYTE PTR ds:[esi]
  43cd45:	(bad)  
  43cd47:	loopne 0x43cd24
  43cd49:	mov    dh,0xdf
  43cd4b:	push   cs
  43cd4c:	sbb    eax,0xc58274d2
  43cd51:	lds    eax,FWORD PTR [ebp+edx*2+0x45c70392]
  43cd58:	sbb    al,0x36
  43cd5a:	xchg   ebx,eax
  43cd5b:	stos   DWORD PTR es:[edi],eax
  43cd5c:	pop    edi
  43cd5d:	das    
  43cd5e:	stos   DWORD PTR es:[edi],eax
  43cd5f:	lock pop eax
  43cd61:	daa    
  43cd62:	sub    eax,DWORD PTR [edi]
  43cd64:	add    BYTE PTR [ecx],dh
  43cd66:	iret   
  43cd67:	xor    eax,0x632ac67c
  43cd6c:	mov    ds:0x99af6a66,eax
  43cd71:	and    al,0xf0
  43cd73:	mov    ds,eax
  43cd75:	ins    BYTE PTR es:[edi],dx
  43cd76:	mov    ecx,edx
  43cd78:	lds    eax,FWORD PTR [ebp-0x2ec87c6d]
  43cd7e:	lahf   
  43cd7f:	ins    DWORD PTR es:[edi],dx
  43cd80:	add    DWORD PTR ds:0xb9882f98,ebp
  43cd86:	cmp    ecx,DWORD PTR [ecx+0x34]
  43cd89:	or     BYTE PTR [ecx-0x28],bl
  43cd8c:	pusha  
  43cd8d:	sti    
  43cd8e:	(bad)  
  43cd8f:	jns    0x43cdd8
  43cd91:	cmc    
  43cd92:	ss iret 
  43cd94:	pop    edx
  43cd95:	sbb    BYTE PTR [edi-0x10f1c5d3],ah
  43cd9b:	pop    ss
  43cd9c:	ins    BYTE PTR es:[edi],dx
  43cd9d:	fld    QWORD PTR [ebx-0x3a]
  43cda0:	pop    ss
  43cda1:	jnp    0x43cdea
  43cda3:	xor    DWORD PTR [edi],esp
  43cda5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cda6:	dec    ch
  43cda8:	dec    ecx
  43cda9:	push   eax
  43cdaa:	sbb    dh,BYTE PTR [ebp+0x25]
  43cdad:	mov    dh,0xdb
  43cdaf:	mov    ch,0xa2
  43cdb1:	dec    ebx
  43cdb2:	inc    ebx
  43cdb3:	ja     0x43ce02
  43cdb5:	jns    0x43cdbf
  43cdb7:	cli    
  43cdb8:	sahf   
  43cdb9:	(bad)  
  43cdba:	sbb    ecx,DWORD PTR [edx+0x34]
  43cdbd:	and    al,0xc0
  43cdbf:	cs aam 0xad
  43cdc2:	fldenv [eax+0x3c54fb8]
  43cdc8:	popa   
  43cdc9:	and    BYTE PTR [esi+0x3e],dl
  43cdcc:	and    edx,DWORD PTR [ecx-0x54]
  43cdcf:	pop    ss
  43cdd0:	push   cs
  43cdd1:	(bad)  
  43cdd3:	fld    QWORD PTR [ebx+ecx*4]
  43cdd6:	mov    ch,0xf6
  43cdd8:	dec    esp
  43cdd9:	les    esi,FWORD PTR [eax-0x5b]
  43cddc:	(bad)
  43cddf:	mov    eax,0xf0cc195a
  43cde4:	push   esi
  43cde5:	sahf   
  43cde6:	(bad)  
  43cde7:	adc    DWORD PTR [edi],edi
  43cde9:	sub    DWORD PTR [edi+0x57],edi
  43cdec:	sub    al,0x4d
  43cdee:	ret    
  43cdef:	pusha  
  43cdf0:	push   esi
  43cdf1:	push   cs
  43cdf2:	in     eax,dx
  43cdf3:	mov    esi,0xc3c399d
  43cdf8:	sub    ebp,DWORD PTR [edi+eiz*2]
  43cdfb:	jns    0x43cda7
  43cdfd:	neg    DWORD PTR [edi-0x2f]
  43ce00:	mov    edx,0x2260ee80
  43ce05:	scas   eax,DWORD PTR es:[edi]
  43ce06:	iret   
  43ce07:	xor    cl,BYTE PTR ds:0xce4b9fd
  43ce0d:	fbld   TBYTE PTR [edi-0x6a]
  43ce10:	ss mov edx,0x9223455
  43ce16:	into   
  43ce17:	xlat   BYTE PTR ds:[ebx]
  43ce18:	sub    bl,BYTE PTR [edi]
  43ce1a:	dec    esi
  43ce1b:	mov    edx,0x2cad309a
  43ce20:	retf   
  43ce21:	enter  0x6cb5,0xde
  43ce25:	mov    edx,0x30c6f9f2
  43ce2a:	add    dl,BYTE PTR [ecx+eiz*8-0x554bf71f]
  43ce31:	pop    es
  43ce32:	ss sub edi,edx
  43ce35:	in     eax,dx
  43ce36:	dec    esi
  43ce37:	fstp   TBYTE PTR [esi+0x76]
  43ce3a:	or     eax,0x53dbfa9
  43ce3f:	xor    al,0xf6
  43ce41:	or     BYTE PTR [eax+0x2d12fe58],al
  43ce47:	das    
  43ce48:	fcmove st,st(5)
  43ce4a:	mov    bl,0x8c
  43ce4c:	mov    ebp,0x47c1f7b6
  43ce51:	sub    DWORD PTR [ebp-0x47282813],ecx
  43ce57:	imul   ebx,DWORD PTR [eax-0x24],0x4ca22377
  43ce5e:	ins    DWORD PTR es:[edi],dx
  43ce5f:	or     BYTE PTR [esp+ecx*8-0x38e2cd7d],ah
  43ce66:	imul   edi,ecx,0x6a
  43ce69:	popa   
  43ce6a:	test   al,0x82
  43ce6c:	mov    ds:0xa0adab23,eax
  43ce71:	fcmovnu st,st(6)
  43ce73:	in     al,0x28
  43ce75:	daa    
  43ce76:	(bad)  
  43ce77:	and    DWORD PTR [ebx],eax
  43ce79:	push   ecx
  43ce7a:	out    0x81,eax
  43ce7c:	mul    BYTE PTR [edx+0x6da222db]
  43ce82:	mov    ah,0xdb
  43ce84:	inc    esp
  43ce85:	fisttp DWORD PTR [ebp+0x3b92a5b5]
  43ce8b:	pop    esp
  43ce8c:	adc    al,0x19
  43ce8e:	sub    al,0x5d
  43ce90:	pop    ebx
  43ce91:	dec    esp
  43ce92:	dec    ebp
  43ce93:	xchg   esp,eax
  43ce94:	test   eax,0xe67e3026
  43ce99:	sbb    al,0xbf
  43ce9b:	xor    ebx,0xffffffaa
  43ce9e:	push   esp
  43ce9f:	cdq    
  43cea0:	sub    ebp,ebx
  43cea2:	jl     0x43ce58
  43cea4:	retf   0xc8c4
  43cea7:	push   0xfffffff4
  43cea9:	sbb    al,BYTE PTR [edi]
  43ceab:	in     al,dx
  43ceac:	arpl   WORD PTR [ebx-0x6e],dx
  43ceaf:	mov    bh,0x23
  43ceb1:	aad    0x29
  43ceb3:	int    0x31
  43ceb5:	add    edx,DWORD PTR [edi+0x3f]
  43ceb8:	push   eax
  43ceb9:	mov    ah,0xe0
  43cebb:	rcl    ecx,1
  43cebd:	jb     0x43cf38
  43cebf:	sar    BYTE PTR [eax],cl
  43cec1:	hlt    
  43cec2:	sub    eax,0x11160f76
  43cec7:	loop   0x43ceed
  43cec9:	cwde   
  43ceca:	cmp    ch,BYTE PTR [edx]
  43cecc:	ror    ebp,cl
  43cece:	xchg   ecx,esi
  43ced0:	pop    ebx
  43ced1:	mov    ds:0x9b286ead,al
  43ced6:	rcr    BYTE PTR [ecx-0x35937a7e],1
  43cedc:	in     eax,0xe4
  43cede:	and    esp,DWORD PTR [eax]
  43cee0:	fadd   st(0),st
  43cee2:	mov    cl,0xf0
  43cee4:	inc    ecx
  43cee5:	imul   eax,DWORD PTR [edi+0x27],0xc644f00d
  43ceec:	fisttp DWORD PTR [ecx+0x29]
  43ceef:	add    eax,0xd85f93a0
  43cef4:	daa    
  43cef5:	add    bh,bh
  43cef7:	pop    esp
  43cef8:	(bad)  
  43cefa:	lahf   
  43cefb:	out    0x9d,eax
  43cefd:	rcl    DWORD PTR [ebx-0x7a073419],0x67
  43cf04:	xchg   esp,eax
  43cf05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cf06:	push   esp
  43cf07:	aas    
  43cf08:	jge    0x43cea5
  43cf0a:	and    al,0x11
  43cf0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cf0d:	xchg   DWORD PTR [edx-0x10cfca40],edi
  43cf13:	in     eax,dx
  43cf14:	and    eax,0xda29c628
  43cf19:	fistp  QWORD PTR [ebp+0x69d71d29]
  43cf1f:	dec    eax
  43cf20:	push   eax
  43cf21:	xlat   BYTE PTR ds:[ebx]
  43cf22:	add    al,0xa1
  43cf24:	test   esp,edi
  43cf26:	ds sti 
  43cf28:	pop    ebp
  43cf29:	mov    ebp,0x70c6a8c5
  43cf2e:	daa    
  43cf2f:	inc    edx
  43cf30:	push   ds
  43cf31:	or     al,0x41
  43cf33:	mov    esi,DWORD PTR [ebx-0x52a7b23b]
  43cf39:	outs   dx,DWORD PTR ds:[esi]
  43cf3a:	shl    esp,0x7d
  43cf3d:	outs   dx,DWORD PTR ds:[esi]
  43cf3e:	xchg   edx,eax
  43cf3f:	add    BYTE PTR [ecx-0x55c31709],dl
  43cf45:	cmp    DWORD PTR [eax],eax
  43cf47:	lock aad 0x8f
  43cf4a:	xchg   DWORD PTR [eax+0x6b],edx
  43cf4d:	lea    ebx,[esi]
  43cf4f:	jnp    0x43cf19
  43cf51:	mov    al,ds:0x959662c8
  43cf56:	int    0x6
  43cf58:	in     al,0x8e
  43cf5a:	(bad)  
  43cf5b:	fimul  DWORD PTR [edx+0x527b69fd]
  43cf61:	xlat   BYTE PTR ds:[ebx]
  43cf62:	je     0x43cf1e
  43cf64:	(bad)  
  43cf65:	xchg   esp,eax
  43cf66:	loope  0x43cefa
  43cf68:	arpl   WORD PTR [esi+0x2c],di
  43cf6b:	jge    0x43cf7c
  43cf6d:	repnz xchg ebx,eax
  43cf6f:	inc    eax
  43cf70:	inc    edx
  43cf71:	ret    
  43cf72:	push   eax
  43cf73:	xor    ecx,eax
  43cf75:	cmp    BYTE PTR [ebx],cl
  43cf77:	jne    0x43cf13
  43cf79:	mov    edx,0xc4b7a1b9
  43cf7e:	mov    al,ds:0xd5d8e06e
  43cf83:	fs test eax,0xa673b303
  43cf89:	and    cl,al
  43cf8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cf8c:	cmc    
  43cf8d:	or     eax,0x56c09376
  43cf92:	pop    ds
  43cf93:	imul   ecx,DWORD PTR [eax-0x7f9679bb],0xffffffaa
  43cf9a:	clc    
  43cf9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cf9c:	icebp  
  43cf9d:	and    esp,DWORD PTR [ecx-0x21]
  43cfa0:	sbb    al,0x81
  43cfa2:	inc    ecx
  43cfa3:	scas   eax,DWORD PTR es:[edi]
  43cfa4:	jmp    0xe871:0xb87a2fc5
  43cfab:	inc    edx
  43cfac:	fstp   QWORD PTR [ebx+0x7a702102]
  43cfb2:	shl    DWORD PTR [edx+0x7f433843],1
  43cfb8:	imul   edi,esp,0x29
  43cfbb:	push   esi
  43cfbc:	imul   ebx,DWORD PTR [ebx-0x7e],0xbee49952
  43cfc3:	mov    BYTE PTR [ecx+eiz*1-0x364e8226],bh
  43cfca:	lods   eax,DWORD PTR ds:[esi]
  43cfcb:	cmp    bh,BYTE PTR [esp+ebx*4+0x1b]
  43cfcf:	ds fwait
  43cfd1:	cmp    esi,DWORD PTR [eax+0x4a987ddc]
  43cfd7:	dec    ecx
  43cfd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cfd9:	into   
  43cfda:	mov    DWORD PTR [eax],0x1b29c29
  43cfe0:	add    eax,0x731bb3b
  43cfe5:	cmp    al,0x2
  43cfe7:	test   al,0x4f
  43cfe9:	dec    ebp
  43cfea:	mov    ?,edx
  43cfec:	(bad)  
  43cfee:	or     ebx,edx
  43cff0:	int    0xe0
  43cff2:	(bad)  
  43cff3:	cld    
  43cff4:	inc    ebp
  43cff5:	pop    esp
  43cff6:	mov    al,ds:0xb6f82a05
  43cffb:	test   BYTE PTR [ebx+0x37aa654b],cl
  43d001:	imul   ebx,DWORD PTR [esi+ebx*4+0x3cd16ad5],0x1f
  43d009:	dec    esp
  43d00a:	lahf   
  43d00b:	push   ebp
  43d00c:	gs inc ebx
  43d00e:	das    
  43d00f:	inc    ecx
  43d010:	repnz inc edi
  43d012:	sbb    al,0x51
  43d014:	(bad)  
  43d016:	idiv   DWORD PTR [eax+edi*1+0x74342d6c]
  43d01d:	jno    0x43cfe6
  43d01f:	and    BYTE PTR [edi+0x3b33fc09],ah
  43d025:	(bad)  
  43d026:	adc    al,0x39
  43d028:	add    ecx,DWORD PTR [esi+ebp*2]
  43d02b:	add    esp,DWORD PTR [esi+0x7e]
  43d02e:	inc    ebx
  43d02f:	out    0x69,eax
  43d031:	dec    edx
  43d032:	or     ebx,DWORD PTR [eax-0x12]
  43d035:	cmp    DWORD PTR [eax-0x65],ebp
  43d038:	jle    0x43d052
  43d03a:	arpl   WORD PTR [edx+ebp*8-0x5e],dx
  43d03e:	add    dh,BYTE PTR [ecx]
  43d040:	shl    DWORD PTR [ebp+0x5e],0x77
  43d044:	fisub  DWORD PTR [esi-0x2adaf5e5]
  43d04a:	fwait
  43d04b:	cmp    ebx,DWORD PTR [ebx-0x7a0e4922]
  43d051:	push   esp
  43d052:	push   ss
  43d053:	jmp    0x43d050
  43d055:	test   DWORD PTR [esi-0x40],ecx
  43d058:	sbb    eax,0x90b0e105
  43d05d:	rol    BYTE PTR [ebx-0x7e3762bd],0xff
  43d064:	popa   
  43d065:	imul   eax
  43d067:	adc    eax,0xa652ca7c
  43d06c:	loop   0x43d082
  43d06e:	cli    
  43d06f:	(bad)  
  43d071:	dec    edi
  43d072:	loopne 0x43d097
  43d074:	adc    DWORD PTR [ebx+0x24],ecx
  43d077:	(bad)  
  43d078:	pushf  
  43d079:	inc    ebp
  43d07a:	test   cl,dl
  43d07c:	xor    eax,0x3c6d873f
  43d081:	cmc    
  43d082:	arpl   WORD PTR [edx+ebx*1-0x328d9b9c],bx
  43d089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d08a:	pop    eax
  43d08b:	push   ebx
  43d08c:	lods   eax,DWORD PTR ds:[esi]
  43d08d:	mov    dh,0xec
  43d08f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d091:	data16 sbb dh,al
  43d094:	ins    DWORD PTR es:[edi],dx
  43d095:	idiv   cl
  43d097:	add    dh,cl
  43d099:	adc    DWORD PTR [ecx-0x6402987a],ebp
  43d09f:	test   eax,0xddf60e4d
  43d0a4:	pop    eax
  43d0a5:	out    dx,al
  43d0a6:	and    DWORD PTR [ebp-0x62d832d8],ebx
  43d0ac:	mov    al,0x4c
  43d0ae:	fst    DWORD PTR [edx+0x26]
  43d0b1:	enter  0xcde7,0xd8
  43d0b5:	sbb    DWORD PTR [ebp+0x364916c5],esi
  43d0bb:	stos   DWORD PTR es:[edi],eax
  43d0bc:	and    al,0xac
  43d0be:	neg    DWORD PTR cs:[ecx]
  43d0c1:	add    eax,0xde5be72f
  43d0c6:	addr16 inc ebp
  43d0c8:	je     0x43d091
  43d0ca:	cmp    BYTE PTR [edx+ebx*8-0x3402b702],0xb7
  43d0d2:	cmp    eax,0xafa643da
  43d0d7:	(bad)  
  43d0d8:	js     0x43d135
  43d0da:	les    ecx,FWORD PTR [ecx-0x3e77dc31]
  43d0e0:	pop    esp
  43d0e1:	push   edx
  43d0e2:	(bad)  
  43d0e3:	aas    
  43d0e4:	shl    BYTE PTR [ecx],0x40
  43d0e7:	jmp    0x12bf1c83
  43d0ec:	jge    0x43d0b0
  43d0ee:	jno    0x43d0a5
  43d0f0:	lods   al,BYTE PTR ds:[esi]
  43d0f1:	jle    0x43d082
  43d0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d0f4:	xchg   edx,eax
  43d0f5:	test   BYTE PTR [ecx],bl
  43d0f7:	pop    ebx
  43d0f8:	pop    ss
  43d0f9:	mov    ch,0xaf
  43d0fb:	mov    BYTE PTR [ebx],cl
  43d0fd:	aas    
  43d0fe:	daa    
  43d0ff:	lea    eax,[edi+edi*4-0x19c18db0]
  43d106:	in     eax,dx
  43d107:	xor    al,0x90
  43d109:	inc    esi
  43d10a:	shr    DWORD PTR [eax-0x2035de96],1
  43d110:	sub    DWORD PTR [ebp-0x57],edi
  43d113:	out    dx,al
  43d114:	dec    edi
  43d115:	mov    dl,dh
  43d117:	sub    esp,DWORD PTR [edi-0x1d36d0d]
  43d11d:	ins    DWORD PTR es:[edi],dx
  43d11e:	push   esi
  43d11f:	cld    
  43d120:	jecxz  0x43d146
  43d122:	cli    
  43d123:	in     al,dx
  43d124:	mov    ds:0x7754b624,al
  43d129:	ds cmovo ebx,edx
  43d12d:	mov    ecx,0x7e7ea5e9
  43d132:	sub    DWORD PTR [edx+ecx*8-0x564c6fb2],edx
  43d139:	or     al,BYTE PTR [esi]
  43d13b:	test   al,0xa3
  43d13d:	mov    ebp,0xb90ccc7c
  43d142:	fxch   st(5)
  43d144:	sub    BYTE PTR [edx+0x60],dh
  43d147:	(bad)  
  43d148:	jmp    0x43d1ae
  43d14a:	(bad)  
  43d14b:	or     eax,0xfdbf1ad1
  43d150:	add    al,0x22
  43d152:	fs test eax,0x959cddb0
  43d158:	scas   al,BYTE PTR es:[edi]
  43d159:	jns    0x43d136
  43d15b:	inc    esp
  43d15c:	cs ret 0xea1
  43d160:	icebp  
  43d161:	xchg   ecx,eax
  43d162:	adc    edi,DWORD PTR [ecx-0x51]
  43d165:	(bad)  [esi+0x6f4c52e7]
  43d16b:	xchg   ebx,eax
  43d16c:	dec    ecx
  43d16d:	adc    BYTE PTR [eax],dl
  43d16f:	ins    BYTE PTR es:[edi],dx
  43d170:	cmp    edx,DWORD PTR [esi]
  43d172:	std    
  43d173:	mov    eax,ds:0x1cb98e2e
  43d178:	aam    0x97
  43d17a:	dec    eax
  43d17b:	psllq  mm2,mm5
  43d17e:	dec    esi
  43d17f:	dec    esi
  43d180:	(bad)  
  43d181:	test   DWORD PTR [edx-0x80],0x9bea9e7e
  43d188:	shl    BYTE PTR ds:0x8ba48aef,cl
  43d18e:	adc    ebp,DWORD PTR [ecx+0x55f03407]
  43d194:	shr    edi,cl
  43d196:	repz scas eax,DWORD PTR es:[edi]
  43d198:	jae    0x43d1c6
  43d19a:	sbb    eax,0x49b1182d
  43d19f:	xchg   BYTE PTR [ebx-0x6c0ef8d5],ah
  43d1a5:	xchg   ecx,eax
  43d1a6:	(bad)  
  43d1a8:	repnz mov bh,0xb7
  43d1ab:	pop    edx
  43d1ac:	sbb    al,0x1a
  43d1ae:	repnz cmp DWORD PTR [ebx-0x44],ecx
  43d1b2:	(bad)  
  43d1b3:	fst    DWORD PTR [edi]
  43d1b5:	adc    al,0x46
  43d1b7:	or     cl,ah
  43d1b9:	ret    0xd580
  43d1bc:	jg     0x43d140
  43d1be:	addr16 cmc 
  43d1c0:	jns    0x43d23b
  43d1c2:	add    DWORD PTR ds:0x29d25fda,esi
  43d1c8:	jno    0x43d18a
  43d1ca:	shl    ah,1
  43d1cc:	dec    eax
  43d1cd:	jmp    0xb46bc482
  43d1d2:	mov    edi,0x6e6b52b0
  43d1d7:	xor    al,0xf4
  43d1d9:	push   edx
  43d1da:	(bad)  
  43d1db:	loop   0x43d1f4
  43d1dd:	add    esi,ecx
  43d1df:	je     0x43d198
  43d1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d1e2:	add    dh,BYTE PTR [ebp+0x5c9b5841]
  43d1e8:	sahf   
  43d1e9:	sbb    BYTE PTR [ebp+0x14e1a78a],ch
  43d1ef:	out    dx,al
  43d1f0:	popf   
  43d1f1:	jecxz  0x43d1b1
  43d1f3:	xlat   BYTE PTR ds:[ebx]
  43d1f4:	ds stc 
  43d1f6:	mov    esi,0x8cfa3cf6
  43d1fb:	push   ss
  43d1fc:	xchg   ebx,eax
  43d1fd:	icebp  
  43d1fe:	nop
  43d1ff:	add    eax,esp
  43d201:	sub    DWORD PTR [ecx+0x36],esi
  43d204:	sub    BYTE PTR ds:0x4b2a1966,ah
  43d20a:	and    al,0xce
  43d20c:	mov    ah,BYTE PTR [edx]
  43d20e:	cmc    
  43d20f:	push   cs
  43d210:	jmp    FWORD PTR ds:0xbd830144
  43d216:	repz mov al,0x28
  43d219:	test   DWORD PTR [edx-0x3f9edfbe],edx
  43d21f:	mov    al,ds:0xf11dc671
  43d224:	jmp    0x43d24c
  43d226:	mov    ch,BYTE PTR [eax+0x3a10ed62]
  43d22c:	icebp  
  43d22d:	pop    ebp
  43d22e:	mov    cl,0xac
  43d230:	sbb    bh,BYTE PTR fs:[bx+si-0x27]
  43d235:	dec    ebp
  43d236:	aaa    
  43d237:	jns    0x43d1eb
  43d239:	std    
  43d23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d23b:	shl    DWORD PTR [esi-0x1cf70f4d],1
  43d241:	pushf  
  43d242:	xchg   ebx,eax
  43d243:	pop    esi
  43d244:	lea    esi,[esp+esi*8+0x59183185]
  43d24b:	inc    edi
  43d24c:	pusha  
  43d24d:	xor    BYTE PTR [edi],ch
  43d24f:	dec    ebx
  43d250:	jl     0x43d218
  43d252:	add    dh,ch
  43d254:	jmp    0x19a66a9f
  43d259:	scas   eax,DWORD PTR es:[edi]
  43d25a:	mov    ah,0x33
  43d25c:	jg     0x43d1eb
  43d25e:	push   0xce4cae1a
  43d263:	arpl   WORD PTR ds:0xa9f4122a,bp
  43d269:	sbb    ecx,esi
  43d26b:	std    
  43d26c:	pop    esp
  43d26d:	ret    0x9249
  43d270:	pop    edx
  43d271:	popf   
  43d272:	mov    al,ds:0xd0523cd4
  43d277:	(bad)  
  43d278:	xor    ebx,ebx
  43d27a:	mov    ecx,0x6192817c
  43d27f:	cmc    
  43d280:	cmp    al,BYTE PTR [edx-0x43]
  43d283:	sbb    BYTE PTR [eax-0x30],bh
  43d286:	pop    ebp
  43d287:	cli    
  43d288:	in     al,dx
  43d289:	mov    al,0x55
  43d28b:	xchg   DWORD PTR [eax],ecx
  43d28d:	and    BYTE PTR fs:[ecx-0x6a],0x9a
  43d292:	repnz pop ebp
  43d294:	(bad)  
  43d296:	loopne 0x43d29b
  43d298:	dec    edx
  43d299:	push   0x1c26d487
  43d29e:	outs   dx,BYTE PTR ds:[esi]
  43d29f:	mov    edx,0x4d61973a
  43d2a4:	stos   DWORD PTR es:[edi],eax
  43d2a5:	dec    edi
  43d2a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d2a7:	loopne 0x43d255
  43d2a9:	fwait
  43d2aa:	push   0xffffffb8
  43d2ac:	ret    0x98bb
  43d2af:	ror    BYTE PTR [edx-0x56b30283],0xad
  43d2b6:	pushf  
  43d2b7:	loop   0x43d30e
  43d2b9:	daa    
  43d2ba:	adc    dh,ch
  43d2bc:	adc    BYTE PTR [ecx-0x3c],0xd8
  43d2c0:	lds    edi,FWORD PTR [esi+0x4d4e810]
  43d2c6:	daa    
  43d2c7:	xchg   edx,eax
  43d2c8:	(bad)  
  43d2c9:	xor    cl,BYTE PTR [esi]
  43d2cb:	push   ss
  43d2cc:	fstp   st(3)
  43d2ce:	shl    DWORD PTR [edx-0xa0830e],cl
  43d2d4:	mov    ebp,0x3cf079e3
  43d2d9:	mov    cl,0x40
  43d2db:	test   BYTE PTR [edx+0x53],0x8e
  43d2df:	mov    ds:0x691b1133,al
  43d2e4:	imul   edi,DWORD PTR [ebx+0x4e],0xffffffe1
  43d2e8:	sbb    edx,edi
  43d2ea:	adc    bl,BYTE PTR [eax+edx*8+0x37]
  43d2ee:	mov    bh,0x49
  43d2f0:	jb     0x43d370
  43d2f2:	xchg   esi,eax
  43d2f3:	(bad)  
  43d2f4:	int3   
  43d2f5:	leave  
  43d2f6:	adc    BYTE PTR [esi],ah
  43d2f8:	mov    ch,0xf
  43d2fa:	stos   BYTE PTR es:[edi],al
  43d2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2fc:	or     eax,0x812a0ddc
  43d301:	jge    0x43d2a9
  43d303:	pop    esp
  43d304:	xor    ebx,edx
  43d306:	lods   eax,DWORD PTR ds:[esi]
  43d307:	in     eax,dx
  43d308:	sub    dl,BYTE PTR [eax]
  43d30a:	jmp    0x43d2ce
  43d30c:	cmp    al,BYTE PTR [ebp+0x691972de]
  43d312:	imul   esp,DWORD PTR [ebp-0x2c0ae4f0],0xffffffc9
  43d319:	xchg   dh,al
  43d31b:	ins    DWORD PTR es:[edi],dx
  43d31c:	ror    DWORD PTR [eax-0x53f832ad],0x7b
  43d323:	dec    ebx
  43d324:	mov    eax,ds:0x3b79b7d3
  43d329:	cmc    
  43d32a:	and    BYTE PTR ss:[edx+0x39],dh
  43d32e:	mov    dh,0x9
  43d330:	ror    DWORD PTR [ebx],1
  43d332:	sbb    DWORD PTR [esi],0x9ae5c457
  43d338:	pop    ds
  43d339:	repz mov al,0x8c
  43d33c:	mov    eax,ds:0x9494b698
  43d341:	lds    esi,FWORD PTR [ebx]
  43d343:	rol    BYTE PTR [eax+0x1a04723e],1
  43d349:	mov    edx,0xd31ef33f
  43d34e:	pop    ebx
  43d34f:	loope  0x43d39a
  43d351:	pushf  
  43d352:	js     0x43d363
  43d354:	pop    esp
  43d355:	or     BYTE PTR [ebx],cl
  43d357:	jo     0x43d3b7
  43d359:	fcomp  DWORD PTR [edx-0x2]
  43d35c:	cdq    
  43d35d:	push   es
  43d35e:	ffreep st(3)
  43d360:	or     al,0x4c
  43d362:	xchg   DWORD PTR [edi-0x88f1d7e],esp
  43d368:	sub    ebx,edi
  43d36a:	xchg   BYTE PTR ds:0xb6033b17,al
  43d370:	xchg   BYTE PTR [ebx-0x12],cl
  43d373:	xchg   esi,eax
  43d374:	das    
  43d375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d376:	and    esi,DWORD PTR [ebp-0xc]
  43d379:	and    DWORD PTR [esi-0x4ffcc084],ebp
  43d37f:	push   0x27
  43d381:	lods   eax,DWORD PTR ds:[esi]
  43d382:	sbb    esi,edi
  43d384:	sub    al,BYTE PTR [edx+0x3]
  43d387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d388:	jg     0x43d314
  43d38a:	ins    BYTE PTR es:[edi],dx
  43d38b:	jl     0x43d3d7
  43d38d:	xchg   esp,eax
  43d38e:	cmp    al,cl
  43d390:	in     al,0x8a
  43d392:	lock packuswb mm1,QWORD PTR [eax]
  43d396:	pop    es
  43d397:	or     eax,0xebfa7436
  43d39c:	push   ss
  43d39d:	mov    ebx,0x4148103
  43d3a2:	xchg   ecx,eax
  43d3a3:	ja     0x43d3d7
  43d3a5:	popf   
  43d3a6:	cmp    WORD PTR [ebx+ebp*1-0x51f274d7],si
  43d3ae:	and    eax,0x4ac755c0
  43d3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d3b4:	jmp    0xca32ee3f
  43d3b9:	dec    ebp
  43d3ba:	jo     0x43d370
  43d3bc:	inc    BYTE PTR [edx+0xcefa302]
  43d3c2:	psubd  mm1,mm4
  43d3c5:	arpl   WORD PTR [edi-0x2a],ax
  43d3c8:	xchg   esp,eax
  43d3c9:	push   ebp
  43d3ca:	mov    eax,ds:0xa4c86445
  43d3cf:	iret   
  43d3d0:	pop    edi
  43d3d1:	test   eax,0xa6bc44dc
  43d3d6:	stos   BYTE PTR es:[edi],al
  43d3d7:	sub    esp,0x877fd85c
  43d3dd:	out    0x57,al
  43d3df:	ret    
  43d3e0:	xor    BYTE PTR [edi-0x59],al
  43d3e3:	mov    edi,0x7195a0c9
  43d3e8:	addr16 pop edx
  43d3ea:	int3   
  43d3eb:	outs   dx,BYTE PTR ds:[esi]
  43d3ec:	add    al,0x38
  43d3ee:	ror    DWORD PTR ds:0xd95a4b2,0x7
  43d3f5:	or     eax,0xfb9d469e
  43d3fa:	test   DWORD PTR [ebx-0x70],ebx
  43d3fd:	adc    eax,edx
  43d3ff:	sub    bh,al
  43d401:	cs retf 0xe354
  43d405:	mov    ds:0xe4de81ce,eax
  43d40a:	xor    BYTE PTR ds:0x16efb472,ch
  43d410:	adc    eax,0x4d0844d3
  43d415:	add    DWORD PTR [esi],esp
  43d417:	jmp    0xf75a42b9
  43d41c:	test   dh,cl
  43d41e:	in     eax,dx
  43d41f:	sub    bl,BYTE PTR [ebx-0x63dc5bb4]
  43d425:	enter  0xb10d,0x73
  43d429:	mov    ebp,0x26d50b5b
  43d42e:	add    dh,BYTE PTR ds:0x93682318
  43d434:	adc    al,0xa5
  43d436:	lods   al,BYTE PTR ds:[esi]
  43d438:	jbe    0x43d4ac
  43d43a:	sahf   
  43d43b:	ja     0x43d459
  43d43d:	jp     0x7de952b3
  43d443:	sub    eax,0xaf18b625
  43d448:	mov    edx,0x27f7c6e9
  43d44d:	pop    ss
  43d44e:	jno    0x43d420
  43d450:	jle    0x43d4cd
  43d452:	test   al,0xd8
  43d454:	push   ds
  43d455:	stos   DWORD PTR es:[edi],eax
  43d456:	sub    ecx,esp
  43d458:	into   
  43d459:	and    BYTE PTR [edx+0x43],dh
  43d45c:	imul   esi,DWORD PTR [edi-0x6ed85b0e],0x5056eb2
  43d466:	add    al,0x1
  43d468:	pop    edx
  43d469:	xor    BYTE PTR [ebx+0xa0ee4e6],0x84
  43d470:	cmp    bl,BYTE PTR fs:[edx+0x1bd14540]
  43d477:	fwait
  43d478:	pop    ecx
  43d479:	push   ebx
  43d47a:	ret    
  43d47b:	ds xchg edi,eax
  43d47d:	or     BYTE PTR [edx-0x15],ch
  43d480:	cmc    
  43d481:	je     0x43d452
  43d483:	jmp    0x24eaa00f
  43d488:	jmp    0x1bc50b31
  43d48d:	aas    
  43d48e:	mov    ds:0x391357b9,eax
  43d493:	add    DWORD PTR [eax+0x231ea8d8],0xffffffc5
  43d49a:	dec    esp
  43d49b:	xchg   esi,eax
  43d49c:	sti    
  43d49d:	add    esi,esp
  43d49f:	pop    esi
  43d4a0:	(bad)  
  43d4a1:	ins    BYTE PTR es:[edi],dx
  43d4a2:	add    al,0x6a
  43d4a4:	sub    ebx,DWORD PTR [edi+eax*4]
  43d4a7:	and    al,0x29
  43d4a9:	mov    dl,al
  43d4ab:	aam    0xb5
  43d4ad:	shr    edi,1
  43d4af:	pop    ecx
  43d4b0:	mov    bl,0x41
  43d4b2:	aad    0xc6
  43d4b4:	or     ebp,DWORD PTR fs:[esi-0xae8847f]
  43d4bb:	xchg   ebx,edi
  43d4bd:	imul   ebx,DWORD PTR [edx+0x78a0cb49],0xe6a79955
  43d4c7:	sbb    BYTE PTR [eax],al
  43d4c9:	xchg   edx,eax
  43d4ca:	ins    DWORD PTR es:[edi],dx
  43d4cb:	int3   
  43d4cc:	mov    ah,0xcb
  43d4ce:	ja     0x43d49e
  43d4d0:	fistp  DWORD PTR [edi+0x16]
  43d4d3:	pop    es
  43d4d4:	mov    cl,0xa6
  43d4d6:	inc    ebx
  43d4d7:	pop    eax
  43d4d8:	cwde   
  43d4d9:	bound  ecx,QWORD PTR [esi-0x6364bbf3]
  43d4df:	xchg   ecx,eax
  43d4e0:	fwait
  43d4e1:	adc    eax,0x132b626c
  43d4e6:	mov    dl,0xe0
  43d4e8:	push   0x6b
  43d4ea:	out    dx,eax
  43d4eb:	dec    ebx
  43d4ec:	test   eax,0x61912194
  43d4f1:	xor    ebx,DWORD PTR [ebx-0x4d]
  43d4f4:	push   ss
  43d4f5:	jge    0x43d4a0
  43d4f7:	xchg   ecx,eax
  43d4f8:	dec    esp
  43d4f9:	xor    BYTE PTR [edx-0x30],cl
  43d4fc:	mov    ds:0xf1863d38,eax
  43d501:	mov    eax,ds:0x31e75833
  43d506:	sbb    bh,BYTE PTR [esi]
  43d508:	outs   dx,DWORD PTR ds:[esi]
  43d509:	je     0x43d576
  43d50b:	pop    edi
  43d50c:	pop    eax
  43d50d:	inc    edi
  43d50e:	add    ebx,edi
  43d510:	xlat   BYTE PTR ds:[ebx]
  43d511:	aas    
  43d512:	shl    BYTE PTR [edi-0x13ec44d],0x9f
  43d519:	mov    ch,BYTE PTR ds:0x92308dbd
  43d51f:	cmp    ecx,DWORD PTR [ebp-0x36682ab1]
  43d525:	call   0xe2add514
  43d52a:	dec    esp
  43d52b:	dec    ebx
  43d52c:	sti    
  43d52d:	test   eax,0xef3b8bd5
  43d532:	sub    eax,0x52fabe0a
  43d537:	xchg   esp,eax
  43d538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d539:	jle    0x43d4ca
  43d53b:	cmc    
  43d53c:	add    eax,DWORD PTR [ecx+0x1f75ebb1]
  43d542:	das    
  43d543:	sti    
  43d544:	lods   eax,DWORD PTR ds:[esi]
  43d545:	mov    dl,0x8
  43d547:	test   BYTE PTR [ecx-0x63],al
  43d54a:	or     BYTE PTR [eax+0x3e],ch
  43d54d:	retf   0xa096
  43d550:	loopne 0x43d549
  43d552:	lods   al,BYTE PTR ds:[esi]
  43d553:	inc    edx
  43d554:	(bad)  
  43d555:	pop    ss
  43d556:	imul   eax,DWORD PTR [ecx+ebx*4+0x488a92d9],0x48
  43d55e:	jmp    0x43d521
  43d560:	cwde   
  43d561:	adc    esi,DWORD PTR [esp+ecx*8]
  43d564:	scas   eax,DWORD PTR es:[edi]
  43d565:	push   cs
  43d566:	out    0xc4,al
  43d568:	sub    dl,BYTE PTR [esi+0x5c78dac8]
  43d56e:	js     0x43d4f2
  43d570:	push   0x57cb3479
  43d575:	bound  edx,QWORD PTR [ecx]
  43d577:	xchg   ebx,eax
  43d578:	and    al,0x68
  43d57a:	sub    bh,dh
  43d57c:	xor    al,0xf0
  43d57e:	ret    0xa13b
  43d581:	dec    ebp
  43d582:	cmp    edi,edi
  43d584:	shr    dl,1
  43d586:	mov    bl,0x9b
  43d588:	jmp    0x43d589
  43d58a:	jp     0x43d5bd
  43d58c:	rcl    DWORD PTR [ebx+0x51],cl
  43d58f:	call   0xf85deadb
  43d594:	inc    ecx
  43d595:	outs   dx,DWORD PTR ds:[esi]
  43d596:	dec    edx
  43d597:	into   
  43d598:	xchg   DWORD PTR [ecx-0x48],ebx
  43d59b:	sub    DWORD PTR [ebp+0x0],eax
  43d59e:	(bad)  
  43d59f:	loop   0x43d564
  43d5a1:	bound  eax,QWORD PTR [ecx]
  43d5a3:	test   eax,0x8390e672
  43d5a8:	sub    ebx,DWORD PTR [edi-0x4f50f570]
  43d5ae:	aaa    
  43d5af:	mov    ?,WORD PTR [ebp+0x720bf86a]
  43d5b5:	pop    esi
  43d5b6:	pop    ebx
  43d5b7:	out    0x53,al
  43d5b9:	xor    eax,0xa494fa06
  43d5be:	dec    edi
  43d5bf:	es ret 0x9e4d
  43d5c3:	and    dh,BYTE PTR [edx]
  43d5c5:	mov    ds:0x7e253184,al
  43d5ca:	mov    ebx,ebp
  43d5cc:	out    0xd8,al
  43d5ce:	add    DWORD PTR [edi],esp
  43d5d0:	mov    ebp,0x227acf89
  43d5d5:	out    dx,eax
  43d5d6:	add    ch,BYTE PTR [esi*8+0x19c68250]
  43d5dd:	jl     0x43d5c9
  43d5df:	cli    
  43d5e0:	jmp    FWORD PTR ds:0xc8686cbf
  43d5e6:	cmp    al,0xf1
  43d5e8:	clc    
  43d5e9:	in     al,0x37
  43d5eb:	sbb    al,0xf1
  43d5ed:	xor    DWORD PTR [ebx+0x41c5f859],0xf9c3c584
  43d5f7:	(bad)  
  43d5f8:	xor    bh,BYTE PTR [edx-0x32]
  43d5fb:	fcmovnbe st,st(3)
  43d5fd:	dec    esi
  43d5fe:	icebp  
  43d5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d600:	mov    esp,0xefc9d5fa
  43d605:	jo     0x43d647
  43d607:	sub    al,0x96
  43d609:	jge    0x43d5fc
  43d60b:	mov    al,0x3d
  43d60d:	fs retf 
  43d60f:	out    0x4d,eax
  43d611:	add    BYTE PTR [edx],bl
  43d613:	loope  0x43d693
  43d615:	mov    edx,0xfad45bad
  43d61a:	pop    ss
  43d61b:	shr    DWORD PTR [esp+ebx*4],0x2a
  43d61f:	xor    esp,esp
  43d621:	aam    0xcc
  43d623:	jne    0x43d5bd
  43d625:	into   
  43d626:	pop    esp
  43d627:	cmp    BYTE PTR [edi+0x6a10ccc7],0x1d
  43d62e:	fsubr  DWORD PTR [edi-0x51ad21f5]
  43d634:	push   ebx
  43d635:	push   esp
  43d636:	push   ebp
  43d637:	push   edi
  43d638:	or     eax,0x58a9d261
  43d63d:	push   esi
  43d63e:	adc    BYTE PTR [ebx+0x74],0xe1
  43d642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d643:	(bad)  
  43d644:	in     eax,dx
  43d645:	pushf  
  43d646:	cwde   
  43d647:	sti    
  43d648:	jmp    0x96b0:0x6ca97297
  43d64f:	inc    ecx
  43d650:	or     DWORD PTR [edx+edx*2+0x6edee674],edi
  43d657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d658:	and    DWORD PTR ds:0x1b7ef963,ecx
  43d65e:	fwait
  43d65f:	je     0x43d6db
  43d661:	xor    ecx,edi
  43d663:	mov    cl,BYTE PTR [edx+eax*2-0x3e]
  43d667:	(bad)  gs:[ecx+0x5cbc7658]
  43d66e:	cs mov al,0x12
  43d671:	into   
  43d672:	mov    cl,0x41
  43d674:	and    DWORD PTR [ebx+0x53ca4620],esp
  43d67a:	ins    DWORD PTR es:[edi],dx
  43d67b:	dec    edx
  43d67c:	(bad)  
  43d67d:	pop    ss
  43d67e:	gs inc ecx
  43d680:	adc    BYTE PTR [esi],cl
  43d682:	lods   eax,DWORD PTR ds:[esi]
  43d683:	inc    ebx
  43d684:	inc    ecx
  43d685:	cmc    
  43d686:	sahf   
  43d687:	fwait
  43d688:	pop    ecx
  43d689:	mov    al,ds:0x1bbff8f5
  43d68e:	shr    DWORD PTR [ebx-0x18],cl
  43d691:	add    dl,BYTE PTR [esi-0x7a]
  43d694:	sbb    al,0xe0
  43d696:	add    eax,0x8c2637fe
  43d69b:	mov    al,ds:0x67675ea6
  43d6a0:	popa   
  43d6a1:	jl     0x43d64c
  43d6a3:	inc    eax
  43d6a4:	outs   dx,DWORD PTR ds:[esi]
  43d6a5:	push   0xffffff86
  43d6a7:	lods   eax,DWORD PTR ds:[esi]
  43d6a8:	inc    edx
  43d6a9:	imul   ebx,DWORD PTR [ecx+0x0],0x53368566
  43d6b0:	push   ebx
  43d6b1:	or     al,0x81
  43d6b3:	daa    
  43d6b4:	push   esp
  43d6b5:	es pop es
  43d6b7:	xchg   esi,eax
  43d6b8:	les    eax,FWORD PTR [esi+0x23]
  43d6bb:	pop    ds
  43d6bc:	scas   eax,DWORD PTR es:[edi]
  43d6bd:	adc    ebx,DWORD PTR [eax+ebx*4+0x5b]
  43d6c1:	sti    
  43d6c2:	push   0x12b2f32c
  43d6c7:	jl     0x43d6e2
  43d6c9:	rol    BYTE PTR [ebx],1
  43d6cb:	mov    fs,WORD PTR [eax+0x1c]
  43d6ce:	call   0x948ad114
  43d6d3:	ror    BYTE PTR [edi],1
  43d6d5:	pop    edx
  43d6d6:	es jno 0x43d6ec
  43d6d9:	lea    ebp,[ebx+0x55fb57ef]
  43d6df:	xor    edx,ecx
  43d6e1:	jl     0x43d707
  43d6e3:	fwait
  43d6e4:	xor    bh,BYTE PTR [esi+0xeb3f099]
  43d6ea:	jle    0x43d755
  43d6ec:	rol    BYTE PTR [ecx-0x434bb98],0x2f
  43d6f3:	push   0x8b0ec386
  43d6f8:	(bad)  
  43d6f9:	scas   al,BYTE PTR es:[edi]
  43d6fa:	xchg   edi,eax
  43d6fb:	adc    eax,0x5c00ce06
  43d700:	adc    al,0x1
  43d702:	in     al,0xef
  43d704:	je     0x43d6d8
  43d706:	clc    
  43d707:	mov    ecx,0xa763e79a
  43d70c:	in     al,dx
  43d70d:	adc    DWORD PTR ds:0x4dda5b67,eax
  43d713:	add    al,0x4a
  43d715:	jb     0x43d6b4
  43d717:	xchg   ah,ch
  43d719:	ins    BYTE PTR es:[edi],dx
  43d71a:	pop    ss
  43d71b:	cli    
  43d71c:	or     al,BYTE PTR [edi-0x2a99d346]
  43d722:	mov    cl,0x69
  43d724:	ja     0x43d72e
  43d726:	fwait
  43d727:	jb     0x43d6ac
  43d729:	inc    edi
  43d72a:	add    al,BYTE PTR [ecx-0x6a]
  43d72d:	xor    al,0x8d
  43d72f:	repz pop eax
  43d731:	sub    eax,0x4339b89e
  43d736:	mov    DWORD PTR [esi-0x16],edi
  43d739:	scas   eax,DWORD PTR es:[edi]
  43d73a:	add    ecx,DWORD PTR [ebp-0x1a]
  43d73d:	sub    al,0x40
  43d73f:	and    DWORD PTR [ebp-0x5a],ecx
  43d742:	std    
  43d743:	fadd   DWORD PTR [esi]
  43d745:	(bad)  
  43d747:	xor    edi,DWORD PTR [eax+0x6b]
  43d74a:	mov    ebx,0x485661b4
  43d74f:	adc    dh,BYTE PTR [edi]
  43d751:	and    DWORD PTR [eax+0x4],edi
  43d754:	push   cs
  43d755:	mov    esi,0xf42a919e
  43d75a:	(bad)  
  43d75b:	fimul  WORD PTR [eax+eiz*8]
  43d75e:	dec    ecx
  43d75f:	nop
  43d760:	cwde   
  43d761:	push   es
  43d762:	push   ebp
  43d763:	fsub   QWORD PTR [ecx]
  43d765:	jae    0x43d73e
  43d767:	outs   dx,BYTE PTR ds:[esi]
  43d768:	jb     0x43d764
  43d76a:	stc    
  43d76b:	inc    edi
  43d76c:	push   0xffffffc3
  43d76e:	jo     0x43d7a4
  43d770:	nop
  43d771:	js     0x43d72a
  43d773:	xor    al,0xf
  43d775:	jb     0x43d788
  43d777:	adc    eax,DWORD PTR [bx+si]
  43d77a:	sbb    DWORD PTR [edx+0x25],ebp
  43d77d:	xchg   DWORD PTR [ebx-0x1e],esp
  43d780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d781:	aas    
  43d782:	loop   0x43d71c
  43d784:	jl     0x43d74d
  43d786:	dec    edx
  43d787:	xor    al,0x90
  43d789:	psadbw mm6,mm7
  43d78c:	(bad)  
  43d78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d78e:	dec    BYTE PTR [ecx]
  43d790:	jns    0x43d7a7
  43d792:	ss xchg edx,eax
  43d794:	dec    ebp
  43d795:	mov    ds:0xed17184,eax
  43d79a:	dec    ebx
  43d79b:	fidiv  WORD PTR es:[edi+0x534604e2]
  43d7a2:	jmp    0x4ea8:0x15293035
  43d7a9:	sbb    edi,DWORD PTR [edi-0x172fc92f]
  43d7af:	out    0x6b,eax
  43d7b1:	loope  0x43d7d8
  43d7b3:	mov    ch,0xea
  43d7b5:	stos   BYTE PTR es:[edi],al
  43d7b6:	in     eax,0x3
  43d7b8:	pop    edx
  43d7b9:	(bad)
  43d7bc:	dec    edi
  43d7bd:	sahf   
  43d7be:	pop    ebx
  43d7bf:	xchg   esp,edx
  43d7c1:	jge    0x43d7db
  43d7c3:	cld    
  43d7c4:	xor    DWORD PTR [ebp+ebx*8+0x7],eax
  43d7c8:	mov    ebx,0xafe6e86d
  43d7cd:	lods   eax,DWORD PTR ds:[esi]
  43d7ce:	pop    ss
  43d7cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d7d0:	and    ecx,DWORD PTR [edx-0x4f]
  43d7d3:	jecxz  0x43d78d
  43d7d5:	cwde   
  43d7d6:	dec    edi
  43d7d7:	fidivr WORD PTR [ecx+0x33]
  43d7da:	dec    ecx
  43d7db:	or     dh,BYTE PTR [edx-0x3a3bbd6e]
  43d7e1:	fcomp  QWORD PTR [esi+0x766a275a]
  43d7e7:	jge    0x43d7b0
  43d7e9:	data16 rcl BYTE PTR [edx+0x2e],cl
  43d7ed:	push   ss
  43d7ee:	xchg   ebp,eax
  43d7ef:	scas   eax,DWORD PTR es:[edi]
  43d7f0:	or     al,0x48
  43d7f2:	js     0x43d7b7
  43d7f4:	cmc    
  43d7f5:	push   esp
  43d7f6:	fwait
  43d7f7:	test   al,0xac
  43d7f9:	fsub   st(2),st
  43d7fb:	test   dl,0x8f
  43d7fe:	addr16 popa 
  43d800:	xor    eax,0xa8e25d13
  43d805:	outs   dx,DWORD PTR ds:[esi]
  43d806:	mov    ebx,DWORD PTR [eax-0x63]
  43d809:	add    eax,edx
  43d80b:	sbb    DWORD PTR [ecx-0x17f434e3],0xda329680
  43d815:	sbb    DWORD PTR [eax+0x6d],edi
  43d818:	jno    0x43d7e2
  43d81a:	dec    esp
  43d81b:	scas   eax,DWORD PTR es:[edi]
  43d81c:	mov    ebp,0x377fa0c5
  43d821:	daa    
  43d822:	adc    eax,0x4e2dda14
  43d827:	mov    ds:0x251409a6,eax
  43d82c:	stc    
  43d82d:	cld    
  43d82e:	mov    WORD PTR [edx+0x2b],es
  43d831:	add    al,0x46
  43d833:	rcl    BYTE PTR [ebp+0x21],0x14
  43d837:	dec    edi
  43d838:	outs   dx,DWORD PTR ds:[esi]
  43d839:	fild   DWORD PTR [ecx+0x3a0630e6]
  43d83f:	aad    0x8c
  43d841:	push   esp
  43d842:	or     BYTE PTR [esi-0x55],ah
  43d845:	xchg   ebp,eax
  43d846:	sahf   
  43d847:	mov    dl,0x2b
  43d849:	cli    
  43d84a:	mov    DWORD PTR [edx+0x5e],eax
  43d84d:	cwde   
  43d84e:	cwde   
  43d84f:	sub    cl,ch
  43d851:	and    ch,BYTE PTR [eax+0x6e08d23c]
  43d857:	xor    bl,BYTE PTR [ebp-0x548d503d]
  43d85d:	adc    BYTE PTR [ebp+0x33f4e059],0x2c
  43d864:	js     0x43d8de
  43d866:	mov    ecx,0x5b17f254
  43d86b:	outs   dx,BYTE PTR ds:[esi]
  43d86c:	retf   0x7dd4
  43d86f:	mov    BYTE PTR [esi+0x7dadc649],ch
  43d875:	jno    0x43d8cd
  43d877:	sbb    bl,0x7d
  43d87a:	aas    
  43d87b:	gs push 0x4ce98cf7
  43d881:	jl     0x43d862
  43d883:	leave  
  43d884:	loope  0x43d855
  43d886:	xchg   al,cl
  43d888:	cmc    
  43d889:	aam    0x22
  43d88b:	test   al,0x8
  43d88d:	and    eax,0x81bc92a7
  43d892:	xchg   ebx,eax
  43d893:	jne    0x43d874
  43d895:	jno    0x43d83e
  43d897:	popa   
  43d898:	lahf   
  43d899:	or     DWORD PTR [eax+0x49],0xffffffed
  43d89d:	sub    dh,BYTE PTR [esi]
  43d89f:	stc    
  43d8a0:	push   0xffffff9d
  43d8a2:	inc    ebx
  43d8a3:	jnp    0x43d88c
  43d8a5:	mov    dl,0x69
  43d8a7:	or     eax,DWORD PTR es:[esi]
  43d8aa:	jmp    0x1c37:0xfe04158
  43d8b1:	lods   eax,DWORD PTR ds:[esi]
  43d8b2:	clc    
  43d8b3:	jae    0x43d8d2
  43d8b5:	mov    dh,0x64
  43d8b7:	mov    eax,0xa3ad0747
  43d8bc:	stos   DWORD PTR es:[edi],eax
  43d8bd:	jo     0x43d860
  43d8bf:	push   ss
  43d8c0:	dec    ebp
  43d8c1:	test   BYTE PTR [ebx+0x2e],bl
  43d8c4:	jo     0x43d88f
  43d8c6:	iret   
  43d8c7:	xchg   esp,eax
  43d8c8:	mov    cl,0x35
  43d8ca:	cmp    bl,BYTE PTR [eax]
  43d8cc:	or     al,0x2
  43d8ce:	(bad)  
  43d8cf:	in     al,0x43
  43d8d1:	out    dx,al
  43d8d2:	cmp    al,BYTE PTR [eax+0x5d]
  43d8d5:	(bad)  
  43d8d6:	out    0x43,eax
  43d8d8:	ret    
  43d8d9:	push   ecx
  43d8da:	jp     0x43d919
  43d8dc:	dec    esi
  43d8dd:	jmp    0xcc5f:0x85ae555e
  43d8e4:	in     eax,dx
  43d8e5:	in     al,dx
  43d8e6:	test   al,0x9c
  43d8e8:	movsx  edx,BYTE PTR [ebx+0x1f3de277]
  43d8ef:	xchg   esp,eax
  43d8f0:	mov    cl,bh
  43d8f2:	add    cl,BYTE PTR gs:[edi]
  43d8f5:	repnz pop es
  43d8f7:	jno    0x43d891
  43d8f9:	inc    ebx
  43d8fa:	and    cl,bl
  43d8fc:	pop    edi
  43d8fd:	pop    esp
  43d8fe:	push   0xf34fc9b1
  43d903:	jl     0x43d8fe
  43d905:	inc    esp
  43d906:	hlt    
  43d907:	iret   
  43d908:	outs   dx,BYTE PTR ds:[esi]
  43d909:	mov    ds:0x1e85d4c6,al
  43d90e:	es jmp 0xbfbaaa24
  43d914:	pslld  mm1,QWORD PTR [ecx-0xd777159]
  43d91b:	bts    DWORD PTR [ebx+edx*2+0x1b59866d],edx
  43d923:	jo     0x43d8cc
  43d925:	push   ss
  43d926:	stc    
  43d927:	mov    ecx,0x2237816
  43d92c:	mov    al,0xf6
  43d92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d92f:	jne    0x43d973
  43d931:	cmc    
  43d932:	push   esi
  43d933:	inc    ecx
  43d934:	(bad)  
  43d935:	jmp    FWORD PTR [edi+0x3669d1e2]
  43d93b:	in     al,dx
  43d93c:	test   ebp,eax
  43d93e:	sbb    bh,BYTE PTR [eax+0x53d0b501]
  43d944:	arpl   WORD PTR [ecx-0x5eaad529],di
  43d94a:	imul   eax,DWORD PTR [ecx-0x78869d45],0xffffffff
  43d951:	int3   
  43d952:	jmp    0x43d9ad
  43d954:	in     al,dx
  43d955:	lods   al,BYTE PTR ds:[esi]
  43d956:	or     DWORD PTR [edi-0x1afea5a1],0x46e9bf45
  43d960:	movd   DWORD PTR [edx],mm2
  43d963:	sbb    eax,0x417ff2cd
  43d968:	inc    eax
  43d969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d96a:	in     al,dx
  43d96b:	aam    0xd
  43d96d:	push   0x2785da15
  43d972:	sti    
  43d973:	loope  0x43d97b
  43d975:	shl    ebp,0x8c
  43d978:	xor    eax,0xf4d765f9
  43d97d:	cmp    DWORD PTR [ecx],eax
  43d97f:	retf   0x9641
  43d982:	cld    
  43d983:	jl     0x43d949
  43d985:	pop    ecx
  43d986:	jb     0x43d9a6
  43d988:	push   esp
  43d989:	sahf   
  43d98a:	aaa    
  43d98b:	jmp    0x82a8b203
  43d990:	imul   esi,DWORD PTR [esi+0x2bdf9106],0x4f
  43d997:	fistp  DWORD PTR [ebp+0x6b]
  43d99a:	ins    DWORD PTR es:[edi],dx
  43d99b:	das    
  43d99c:	leave  
  43d99d:	mov    ch,0x8d
  43d99f:	fcomp  QWORD PTR [eax+0x52]
  43d9a2:	jmp    0xa584:0xf368e5c2
  43d9a9:	sbb    al,0x53
  43d9ab:	add    ecx,ebp
  43d9ad:	sub    DWORD PTR [edx],0xa
  43d9b0:	ret    0xeb2a
  43d9b3:	push   ebx
  43d9b4:	data16 xchg BYTE PTR gs:[edi+0x18c6e93f],dh
  43d9bc:	fistp  WORD PTR [edx+0x77]
  43d9bf:	fmul   QWORD PTR [ebx+0x288733a0]
  43d9c5:	fstp   DWORD PTR [ebx+0x629274cc]
  43d9cb:	ret    0x98b0
  43d9ce:	sbb    dh,bl
  43d9d0:	hlt    
  43d9d1:	(bad)  
  43d9d2:	rol    DWORD PTR [esi+0x3583d942],cl
  43d9d8:	imul   ecx,edx,0xffffff9d
  43d9db:	imul   BYTE PTR [edi-0x679476d6]
  43d9e1:	(bad)  
  43d9e2:	cmp    BYTE PTR [edi+0xa41e5ea],dh
  43d9e8:	push   ds
  43d9e9:	fnsetpm(287 only) 
  43d9eb:	ret    
  43d9ec:	loopne 0x43da4b
  43d9ee:	bound  esp,QWORD PTR [ebp+0x15af5c05]
  43d9f4:	mov    dl,0x60
  43d9f6:	mov    al,ds:0x1af6cb61
  43d9fb:	jnp    0x43d9fd
  43d9fd:	xor    BYTE PTR [ecx],bh
  43d9ff:	std    
  43da00:	ret    0xc177
  43da03:	inc    ecx
  43da04:	cs pop esi
  43da06:	int    0x1
  43da08:	icebp  
  43da09:	add    bl,dl
  43da0b:	inc    ecx
  43da0c:	fwait
  43da0d:	pop    ss
  43da0e:	adc    al,0xa0
  43da10:	xchg   bl,al
  43da12:	in     al,0x19
  43da14:	pusha  
  43da15:	loop   0x43da15
  43da17:	and    bl,cl
  43da19:	cdq    
  43da1a:	sub    ecx,DWORD PTR [eax-0x28]
  43da1d:	add    eax,0xdb49fc43
  43da22:	dec    eax
  43da23:	jne    0x43d9af
  43da25:	dec    ecx
  43da26:	iret   
  43da27:	pop    ebp
  43da28:	xchg   esp,eax
  43da29:	enter  0xcb6a,0x7a
  43da2d:	out    0x93,al
  43da2f:	int3   
  43da30:	call   0x87d4568c
  43da35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da36:	mov    bh,BYTE PTR [eax]
  43da38:	fs sti 
  43da3a:	(bad)  
  43da3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da3c:	bound  ecx,QWORD PTR [edi+0x4c652ab3]
  43da42:	mov    eax,ds:0x5a6c21eb
  43da47:	mov    bl,0xf4
  43da49:	pushf  
  43da4a:	lods   eax,DWORD PTR ds:[esi]
  43da4b:	cmp    DWORD PTR [ebx+0x3f],0x3362ecf2
  43da52:	jno    0x43d9e9
  43da54:	pop    ebp
  43da55:	push   esp
  43da56:	fnstcw WORD PTR [ecx*2-0x32ccb399]
  43da5d:	leave  
  43da5e:	jmp    0x14cb:0xef943940
  43da65:	mov    eax,ds:0x2299572
  43da6a:	sub    edx,eax
  43da6c:	pop    ss
  43da6d:	pushf  
  43da6e:	sbb    BYTE PTR [edi],dl
  43da70:	(bad)  
  43da71:	adc    al,BYTE PTR [esi-0x32a3dcd8]
  43da77:	add    cl,BYTE PTR [ebx-0x62]
  43da7a:	(bad)  
  43da7b:	pop    esi
  43da7c:	call   0x2947d686
  43da81:	jg     0x43da8b
  43da83:	addr16 stc 
  43da85:	push   edi
  43da86:	call   0x5b575048
  43da8b:	mov    esp,0x81da9ee6
  43da90:	push   0xde975da6
  43da95:	mov    ds:0x9789014e,al
  43da9a:	mov    edx,0xa9ec16fb
  43da9f:	xor    eax,0x70fcf742
  43daa4:	mov    ah,0xe
  43daa6:	fs cld 
  43daa8:	and    al,0xc2
  43daaa:	pop    ecx
  43daab:	pop    edx
  43daac:	bnd ret 0x40b5
  43dab0:	push   esi
  43dab1:	xchg   esp,eax
  43dab2:	aas    
  43dab3:	sub    al,0x77
  43dab5:	xchg   BYTE PTR [ecx-0x380323b0],bl
  43dabb:	in     eax,0xd5
  43dabd:	dec    ebx
  43dabe:	loope  0x43db36
  43dac0:	in     eax,dx
  43dac1:	adc    bl,BYTE PTR [eax+0x4c]
  43dac4:	xchg   DWORD PTR [ecx-0x6b439927],eax
  43daca:	(bad)  
  43dacb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dacc:	sub    DWORD PTR [esi+0x7fd6db40],ebx
  43dad2:	jnp    0x43da9c
  43dad4:	out    0xba,al
  43dad6:	dec    ecx
  43dad7:	mov    dh,0xd8
  43dad9:	mov    edi,0xba8048d4
  43dade:	popf   
  43dadf:	rcl    BYTE PTR [esi],cl
  43dae1:	test   dh,0xbe
  43dae4:	jb     0x43db0d
  43dae6:	enter  0x947f,0xeb
  43daea:	imul   ebp,DWORD PTR [esi+0x7f],0xc0329aae
  43daf1:	je     0x43dac9
  43daf3:	cld    
  43daf4:	adc    eax,0x2b5bf4b1
  43daf9:	lock push es
  43dafb:	sub    eax,DWORD PTR [edi]
  43dafd:	mov    bl,0x29
  43daff:	add    ebp,DWORD PTR [edi]
  43db01:	fstp   DWORD PTR [ebp+edi*2-0x2b]
  43db05:	mov    al,ds:0x620156a0
  43db0a:	mov    ebx,0x32c37de
  43db0f:	xlat   BYTE PTR ds:[ebx]
  43db10:	pusha  
  43db11:	mov    DWORD PTR [esi-0x33d01a59],ebx
  43db17:	fucomi st,st(1)
  43db19:	inc    edi
  43db1a:	ret    0x2093
  43db1d:	outs   dx,DWORD PTR ds:[esi]
  43db1e:	adc    BYTE PTR [edx+0x61ae1a8d],al
  43db24:	mov    dl,0x7
  43db26:	or     cl,dl
  43db28:	das    
  43db29:	imul   eax,DWORD PTR [esi+0x5f],0x4
  43db2d:	dec    ebx
  43db2e:	push   0xe
  43db30:	cmp    eax,0xe097f01
  43db35:	mov    ecx,0xe4c12ee1
  43db3a:	aam    0xc6
  43db3c:	add    al,0xa6
  43db3e:	pop    esi
  43db3f:	or     DWORD PTR [edi-0x65],ebp
  43db42:	or     ch,ch
  43db44:	mov    ecx,0xaaea73ab
  43db49:	pop    esp
  43db4a:	test   al,0x96
  43db4c:	test   eax,0xfd201cb4
  43db51:	add    ebx,ecx
  43db53:	frstor [ebx+eiz*2-0x9]
  43db57:	xchg   ebp,eax
  43db58:	and    bh,BYTE PTR [eax+ecx*2-0x3fabe8c1]
  43db5f:	das    
  43db60:	inc    eax
  43db61:	dec    edi
  43db62:	and    ebp,eax
  43db64:	ss test edx,ebp
  43db67:	pop    edx
  43db68:	push   0x2
  43db6a:	scas   eax,DWORD PTR es:[edi]
  43db6b:	jecxz  0x43db80
  43db6d:	or     eax,0x4e38b923
  43db72:	jne    0x43db24
  43db74:	outs   dx,DWORD PTR ds:[esi]
  43db75:	je     0x43dafb
  43db77:	adc    eax,0xc4edf712
  43db7c:	jae    0x43db08
  43db7e:	mov    ah,0xec
  43db80:	imul   esp,esp,0x56a17b81
  43db86:	sub    BYTE PTR [ebx+0x41],dl
  43db89:	(bad)  
  43db8a:	leave  
  43db8b:	imul   ebp,edx,0x49514a67
  43db91:	sahf   
  43db92:	push   esp
  43db93:	mov    ebx,ebx
  43db95:	dec    ebx
  43db96:	mov    ebp,DWORD PTR [edi-0x4b8bad66]
  43db9c:	mov    dh,0xb
  43db9e:	xor    DWORD PTR [esi+0x38],esi
  43dba1:	(bad)  
  43dba2:	or     bl,BYTE PTR [eax+0x2e7aeccd]
  43dba8:	mov    eax,0xbb0b0446
  43dbad:	loop   0x43db95
  43dbaf:	jle    0x43dbed
  43dbb1:	fistp  WORD PTR [edi+edi*2+0x31]
  43dbb5:	in     eax,dx
  43dbb6:	bound  esi,QWORD PTR [eax]
  43dbb8:	push   0xfffffffc
  43dbba:	inc    ebx
  43dbbb:	fstp   DWORD PTR [ebx-0x746dc600]
  43dbc1:	mov    eax,DWORD PTR [esi+0x70]
  43dbc4:	xor    esp,DWORD PTR [esi]
  43dbc6:	fcomp  st(6)
  43dbc8:	jmp    0x99f2:0xfd773032
  43dbcf:	or     BYTE PTR [ebx+0x4a1067f5],bl
  43dbd5:	ja     0x43dbb0
  43dbd7:	mul    DWORD PTR [esi+0x31cf1821]
  43dbdd:	add    eax,0x86382cf0
  43dbe2:	outs   dx,DWORD PTR ds:[esi]
  43dbe3:	in     eax,0x82
  43dbe5:	inc    eax
  43dbe6:	dec    BYTE PTR [ecx+0x2a]
  43dbe9:	hlt    
  43dbea:	jnp    0x43dbe2
  43dbec:	lock add al,BYTE PTR [ebx+0x2e2b883a]
  43dbf3:	ror    BYTE PTR [edx-0x6b],1
  43dbf6:	or     ebx,DWORD PTR [ecx-0x829bfa3]
  43dbfc:	in     al,0x7
  43dbfe:	push   esi
  43dbff:	loope  0x43dc06
  43dc01:	addr16 jo 0x43db89
  43dc04:	mov    DWORD PTR [edx+0x32beaab0],edx
  43dc0a:	shl    esi,1
  43dc0c:	jmp    FWORD PTR [eax-0x70]
  43dc0f:	mov    ebx,DWORD PTR [esi-0x66]
  43dc12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dc13:	(bad)  
  43dc14:	(bad)  
  43dc15:	inc    ebp
  43dc16:	xchg   ebx,eax
  43dc17:	nop
  43dc18:	into   
  43dc19:	ja     0x43dc48
  43dc1b:	sar    DWORD PTR [ebp+0x67],1
  43dc1e:	test   BYTE PTR [eax-0x26689d7d],bh
  43dc24:	sbb    ah,al
  43dc26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dc27:	call   0xe05bb7d6
  43dc2c:	push   0x7017e14d
  43dc31:	test   BYTE PTR [edx+0x4f89a41],0x36
  43dc38:	cmp    dl,al
  43dc3a:	in     eax,0x3b
  43dc3c:	cmp    edx,DWORD PTR [edx-0x80]
  43dc3f:	data16 shr BYTE PTR [edx+0x5e8661b4],cl
  43dc46:	cld    
  43dc47:	push   esi
  43dc48:	daa    
  43dc49:	and    BYTE PTR [edi+0x9],dh
  43dc4c:	mov    bl,0xc1
  43dc4e:	lahf   
  43dc4f:	cmp    al,0x34
  43dc51:	stc    
  43dc52:	fist   WORD PTR [edx+ebp*8+0x74]
  43dc56:	mov    al,ds:0xbf60c740
  43dc5b:	xor    BYTE PTR [eax-0x6e62c563],dh
  43dc61:	mov    esp,0xd3b0aaab
  43dc66:	lods   al,BYTE PTR ds:[esi]
  43dc67:	dec    esp
  43dc68:	je     0x43dc2a
  43dc6a:	xor    eax,0x428a1839
  43dc6f:	jnp    0x43dc92
  43dc71:	xchg   edi,eax
  43dc72:	jp     0x43dcb8
  43dc74:	mov    edi,0xb26551e2
  43dc79:	enter  0x263,0x31
  43dc7d:	test   al,0x7b
  43dc7f:	ss mov edx,0xb4e2d0db
  43dc85:	aaa    
  43dc86:	mov    esp,0xd2390612
  43dc8b:	mov    ch,0xae
  43dc8d:	adc    al,0xfa
  43dc8f:	sub    al,0xc5
  43dc91:	mov    ch,BYTE PTR [ebp-0x39]
  43dc94:	pop    eax
  43dc95:	dec    edx
  43dc96:	and    al,0x7
  43dc98:	cmp    BYTE PTR [edi-0x9c1dae2],dl
  43dc9e:	fdiv   QWORD PTR [edx-0x21b24d4b]
  43dca4:	ins    DWORD PTR es:[edi],dx
  43dca5:	or     eax,0xe1db0fe2
  43dcaa:	xchg   ebp,eax
  43dcab:	(bad)  
  43dcac:	mov    dl,BYTE PTR [edi-0x62b6b093]
  43dcb2:	xchg   ecx,eax
  43dcb3:	inc    esp
  43dcb4:	fisubr WORD PTR [esi+eiz*2+0x61dcd7c8]
  43dcbb:	je     0x43dc50
  43dcbd:	mov    DWORD PTR [edx+0x3b7351cd],esi
  43dcc3:	pushf  
  43dcc4:	push   eax
  43dcc5:	mov    bh,0x73
  43dcc7:	repnz test dh,dh
  43dcca:	mov    bh,BYTE PTR [ecx-0x153cabc8]
  43dcd0:	and    eax,0x167d4b27
  43dcd5:	setle  BYTE PTR [eax+0x4b88f3db]
  43dcdc:	push   ss
  43dcdd:	stos   BYTE PTR es:[edi],al
  43dcde:	jl     0x43dcf7
  43dce0:	or     eax,0x10e4024f
  43dce5:	int3   
  43dce6:	ret    
  43dce7:	jmp    0x25ee:0x5ece5eaa
  43dcee:	xchg   DWORD PTR [ebx-0xe1f203a],edi
  43dcf4:	daa    
  43dcf5:	popw   es
  43dcf7:	push   es
  43dcf8:	dec    esi
  43dcf9:	adc    al,0x3c
  43dcfb:	push   ebx
  43dcfc:	test   al,0x43
  43dcfe:	mov    bl,0xf0
  43dd00:	cmp    esi,DWORD PTR [ebp-0x17]
  43dd03:	inc    ebx
  43dd04:	xor    BYTE PTR [ebx-0x31],cl
  43dd07:	push   ss
  43dd08:	(bad)  
  43dd09:	fcomp  DWORD PTR [esi+0x46]
  43dd0c:	cmp    bh,al
  43dd0e:	adc    eax,0xb5638ee3
  43dd13:	retf   
  43dd14:	mov    ebx,DWORD PTR [eax]
  43dd16:	push   esi
  43dd17:	and    BYTE PTR [eax],0xb1
  43dd1a:	push   esp
  43dd1c:	scas   eax,DWORD PTR es:[edi]
  43dd1d:	bound  edi,QWORD PTR [esi]
  43dd1f:	fiadd  DWORD PTR [ebx+edi*8]
  43dd22:	adc    DWORD PTR [ecx+eiz*4],esi
  43dd25:	retf   0x8cba
  43dd28:	inc    ecx
  43dd29:	xchg   DWORD PTR [ebx-0x1bdc24f6],edi
  43dd2f:	xlat   BYTE PTR ds:[ebx]
  43dd30:	mov    BYTE PTR [ebp+0x47],bl
  43dd33:	jno    0x43dd42
  43dd35:	push   es
  43dd36:	retf   
  43dd37:	mov    gs,edx
  43dd39:	inc    ecx
  43dd3a:	xor    DWORD PTR [esi],eax
  43dd3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dd3d:	mov    edx,0xba26862a
  43dd42:	gs push edx
  43dd45:	shr    ebp,0x50
  43dd48:	scas   al,BYTE PTR es:[edi]
  43dd49:	test   DWORD PTR [eax+0x17],esi
  43dd4c:	or     eax,0x850c97f6
  43dd51:	cmp    esp,DWORD PTR [esi-0xd]
  43dd54:	xchg   ecx,eax
  43dd55:	dec    ebx
  43dd56:	add    dl,BYTE PTR [ecx]
  43dd58:	int    0x5a
  43dd5a:	icebp  
  43dd5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dd5c:	adc    ah,BYTE PTR [esi-0x1661f0b9]
  43dd62:	jbe    0x43dd68
  43dd64:	inc    ebx
  43dd65:	call   0xe493:0x15698aac
  43dd6c:	shl    BYTE PTR [ecx],0x8c
  43dd6f:	rcr    edx,0x25
  43dd72:	into   
  43dd73:	and    al,0x9b
  43dd75:	lods   eax,DWORD PTR ds:[esi]
  43dd76:	pop    eax
  43dd77:	lahf   
  43dd78:	mov    edx,0xa4d24b2a
  43dd7d:	gs (bad) 
  43dd7f:	es mov ebp,0xb7939d37
  43dd85:	daa    
  43dd86:	mov    dh,bl
  43dd88:	test   BYTE PTR [eax-0x4a],dh
  43dd8b:	sub    al,BYTE PTR [edx+0xe]
  43dd8e:	jae    0x43dd92
  43dd90:	jmp    0x87c0e7e0
  43dd95:	sub    eax,0xb042a4b4
  43dd9a:	lds    edx,FWORD PTR [ecx+0x77f64770]
  43dda0:	or     eax,0xbcb598d9
  43dda5:	jmp    0x2efc:0xaef2e010
  43ddac:	popa   
  43ddad:	jno    0x43dd5b
  43ddaf:	cwde   
  43ddb0:	in     al,dx
  43ddb1:	out    dx,eax
  43ddb2:	add    al,BYTE PTR [eax+0x4c543459]
  43ddb8:	and    al,0x35
  43ddba:	popf   
  43ddbb:	in     al,0xc0
  43ddbd:	mov    ax,ds:0xa0711077
  43ddc3:	jmp    0x8949bd30
  43ddc8:	or     esp,DWORD PTR [edi]
  43ddca:	mov    ?,WORD PTR [ebp+0x53ff515f]
  43ddd0:	(bad)  
  43ddd1:	dec    esi
  43ddd2:	add    DWORD PTR [eax+0x48],ebx
  43ddd5:	ss adc eax,0x42d39d31
  43dddb:	lea    ecx,[esi]
  43dddd:	sar    DWORD PTR [edx],cl
  43dddf:	push   ebx
  43dde0:	push   esi
  43dde1:	mov    al,0xff
  43dde3:	mov    ebp,0x4c4a8ffb
  43dde8:	ret    0x25d7
  43ddeb:	sub    eax,0xdcde367f
  43ddf0:	or     eax,0x5ce38976
  43ddf5:	sub    dh,0xaf
  43ddf8:	(bad)  
  43ddfa:	mov    edi,0x39a4b97
  43ddff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43de00:	mov    bh,BYTE PTR [edx+ebx*8]
  43de03:	arpl   WORD PTR [esi+0x7449cda6],ax
  43de09:	inc    ebx
  43de0a:	std    
  43de0b:	aaa    
  43de0c:	mov    dh,bl
  43de0e:	mov    bl,0x7b
  43de10:	fnstenv [edx+0x56]
  43de13:	imul   esp,esp,0xb1765ab5
  43de19:	sub    edi,eax
  43de1b:	xlat   BYTE PTR ds:[ebx]
  43de1c:	test   al,0x40
  43de1e:	mov    bh,0xa0
  43de20:	push   ecx
  43de21:	xor    dh,BYTE PTR [edi+0x43]
  43de24:	add    edx,DWORD PTR [edx+0x71cba4f6]
  43de2a:	sbb    eax,DWORD PTR [edx]
  43de2c:	shl    BYTE PTR [edi],cl
  43de2e:	lds    esp,FWORD PTR [edi-0x1]
  43de31:	add    ebp,0x20
  43de34:	sbb    al,0xff
  43de36:	mov    ebx,0x97d7ad63
  43de3b:	and    BYTE PTR [ecx],bh
  43de3d:	mov    edi,0xc44a47f6
  43de42:	call   0x884a2667
  43de47:	mov    ch,0x36
  43de49:	jno    0x43de4f
  43de4b:	inc    esp
  43de4c:	jmp    0x206560aa
  43de51:	cmp    eax,0xc93aa494
  43de56:	dec    ebp
  43de57:	add    ebx,DWORD PTR ds:0xeb984f3
  43de5d:	cmp    ebp,ebp
  43de5f:	or     BYTE PTR [edi-0x69],ch
  43de62:	jae    0x43de33
  43de64:	hlt    
  43de65:	mov    eax,0xade9d75c
  43de6a:	int    0x0
  43de6c:	mov    ds:0x195ff3ed,al
  43de71:	inc    esp
  43de72:	ss (bad) 
  43de74:	or     esp,DWORD PTR [esi+0x1a]
  43de77:	es sub al,0x0
  43de7a:	es ja  0x43de02
  43de7d:	(bad)  
  43de7e:	cmp    eax,0x67d21fdf
  43de83:	imul   esp,DWORD PTR [edx+0x77edbd9],0x2f
  43de8a:	cld    
  43de8b:	popf   
  43de8c:	jo     0x43de4b
  43de8e:	loop   0x43de64
  43de90:	add    BYTE PTR [edi-0x428ad578],bh
  43de96:	xchg   ah,ah
  43de98:	fdiv   QWORD PTR [ecx+ebp*8]
  43de9b:	and    bh,BYTE PTR [ecx+0x7f8ef49f]
  43dea1:	imul   ebx,DWORD PTR [edi+0x553e974],0xb1a73b75
  43deab:	cs popa 
  43dead:	sbb    DWORD PTR [ecx],0x76b4323c
  43deb3:	test   ecx,esp
  43deb5:	int3   
  43deb6:	imul   edi,edi,0x3b
  43deb9:	xor    DWORD PTR [esi-0x5d8f18f9],esi
  43debf:	jge    0x43de51
  43dec1:	addr16 push edi
  43dec3:	adc    BYTE PTR [ebx],bh
  43dec5:	test   eax,0x82ca8ced
  43deca:	cli    
  43decb:	xchg   esp,eax
  43decc:	(bad)  
  43dece:	mov    dh,0x2e
  43ded0:	sar    dl,0x6c
  43ded3:	cmp    al,0xc4
  43ded5:	shr    DWORD PTR [esi],0x80
  43ded8:	in     al,dx
  43ded9:	xchg   ebp,eax
  43deda:	xchg   ebx,eax
  43dedb:	mov    ah,0xb8
  43dedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dede:	cmp    al,0x1
  43dee0:	les    ecx,FWORD PTR [ebx+0x59]
  43dee3:	fisubr DWORD PTR [ecx+edi*1]
  43dee6:	and    ebx,DWORD PTR [esi]
  43dee8:	int3   
  43dee9:	xor    DWORD PTR [edi-0x39],ecx
  43deec:	or     ebx,DWORD PTR [edi-0x2e]
  43deef:	mov    DWORD PTR [ebp+0x74f8911f],ecx
  43def5:	mov    edi,0xcf7f2090
  43defa:	mov    al,ds:0x87f1eb92
  43deff:	and    eax,0xd4d60ba2
  43df04:	push   ebp
  43df05:	mov    ecx,eax
  43df07:	into   
  43df08:	lahf   
  43df09:	sub    eax,DWORD PTR [ebp+0x28]
  43df0c:	adc    eax,0xe537c0a8
  43df11:	hlt    
  43df12:	imul   DWORD PTR [ecx-0x7ddbca7c]
  43df18:	enter  0xde9,0x5d
  43df1c:	xchg   esi,eax
  43df1d:	js     0x43dea2
  43df1f:	(bad)  
  43df20:	xor    edx,DWORD PTR [ebp+0x48]
  43df23:	inc    esp
  43df24:	int3   
  43df25:	jp     0x43df1c
  43df27:	xor    eax,0x8c13393e
  43df2c:	enter  0xa7a2,0x55
  43df30:	test   al,0xbe
  43df32:	sti    
  43df33:	or     al,0x1
  43df35:	cmp    DWORD PTR [edi],ecx
  43df37:	call   0x31ba90d7
  43df3c:	in     eax,0xdc
  43df3e:	mul    DWORD PTR ds:0x77ca86be
  43df44:	iret   
  43df45:	cmp    BYTE PTR [esi-0x20],al
  43df48:	outs   dx,BYTE PTR ds:[esi]
  43df49:	mov    bl,0xde
  43df4b:	in     eax,dx
  43df4c:	out    dx,eax
  43df4d:	push   0xfffffff8
  43df4f:	jno    0x43dfbf
  43df51:	sub    al,0xde
  43df53:	pop    esi
  43df54:	(bad)  
  43df55:	xlat   BYTE PTR ds:[ebx]
  43df56:	push   edx
  43df57:	mov    esi,0xbe5b5721
  43df5c:	adc    ecx,esi
  43df5e:	out    dx,al
  43df5f:	daa    
  43df60:	rcr    DWORD PTR [ebx+eiz*2],cl
  43df63:	push   eax
  43df64:	dec    ebx
  43df65:	bound  edx,QWORD PTR [ecx]
  43df67:	add    ebx,DWORD PTR [edi-0x26]
  43df6a:	jle    0x43df04
  43df6c:	xor    al,0xb5
  43df6e:	repnz ins BYTE PTR es:[edi],dx
  43df70:	imul   eax,DWORD PTR [eax],0x7be99cf4
  43df76:	retf   
  43df77:	pop    eax
  43df78:	sbb    dl,BYTE PTR [edx]
  43df7a:	or     al,0xa9
  43df7c:	or     al,0x37
  43df7e:	dec    DWORD PTR [ebx-0x32596bc1]
  43df84:	mul    ebx
  43df86:	leave  
  43df87:	mov    ebp,0xd8ee6e62
  43df8c:	fbld   TBYTE PTR [edi-0x23]
  43df8f:	mov    cl,0xdd
  43df91:	inc    esi
  43df92:	test   BYTE PTR ds:0xbdf26c0b,cl
  43df98:	jae    0x43dfba
  43df9a:	in     al,dx
  43df9b:	push   ebp
  43df9c:	in     eax,0x3d
  43df9e:	mov    ds,WORD PTR [edi]
  43dfa0:	push   ecx
  43dfa1:	daa    
  43dfa2:	loope  0x43df6e
  43dfa4:	inc    esi
  43dfa5:	clc    
  43dfa6:	outs   dx,DWORD PTR ds:[esi]
  43dfa7:	add    BYTE PTR [edi-0x80],ah
  43dfaa:	das    
  43dfab:	loop   0x43df6c
  43dfad:	mov    al,0x28
  43dfaf:	pop    ds
  43dfb0:	cmc    
  43dfb1:	imul   ebx,DWORD PTR [ebx-0x68],0xd55eea84
  43dfb8:	dec    esp
  43dfb9:	fistp  QWORD PTR [ebx+0x2f]
  43dfbc:	add    BYTE PTR [edx+eax*2-0x7e],dh
  43dfc0:	popf   
  43dfc1:	fdiv   DWORD PTR [ebx+0x3e1ad322]
  43dfc7:	or     eax,0xfc8f0d8a
  43dfcc:	xchg   edx,eax
  43dfcd:	adc    BYTE PTR [edx-0x451ca7aa],al
  43dfd3:	mov    gs,WORD PTR [ecx]
  43dfd5:	pop    ss
  43dfd6:	mov    al,ds:0xffbf3fd4
  43dfdb:	dec    edx
  43dfdc:	mov    ch,0x45
  43dfde:	rol    BYTE PTR [ebx],cl
  43dfe0:	jmp    0xf7fe3a5c
  43dfe5:	bound  eax,QWORD PTR [ebx+0x7af22865]
  43dfeb:	fild   DWORD PTR [esi-0x44]
  43dfee:	mov    ch,0xb1
  43dff0:	inc    edx
  43dff1:	and    dl,BYTE PTR [edx+edi*4-0x7c]
  43dff5:	pop    edx
  43dff6:	jbe    0x43dff0
  43dff8:	mov    ch,0x52
  43dffa:	inc    ecx
  43dffb:	lea    eax,[edi+0xb]
  43dffe:	lods   al,BYTE PTR ds:[esi]
  43dfff:	xor    edi,DWORD PTR [ebx+0x7f]
  43e002:	adc    bh,BYTE PTR [esi]
  43e004:	mov    WORD PTR [ecx],fs
  43e006:	inc    eax
  43e007:	xor    dl,dh
  43e009:	aaa    
  43e00a:	iret   
  43e00b:	(bad)  
  43e00d:	mov    BYTE PTR [edx+0x7a80b640],0x23
  43e014:	jno    0x43e045
  43e016:	xchg   edi,eax
  43e017:	iret   
  43e018:	adc    BYTE PTR [eax-0x2e1de9f7],0x28
  43e01f:	ds cdq 
  43e021:	das    
  43e022:	jb     0x43e04d
  43e024:	scas   eax,DWORD PTR es:[edi]
  43e025:	xchg   ebp,eax
  43e026:	add    eax,0x5bf74685
  43e02b:	sub    eax,0xd1977da
  43e030:	jno    0x43e002
  43e032:	pop    es
  43e033:	dec    esp
  43e034:	fwait
  43e035:	js     0x43e038
  43e037:	dec    eax
  43e038:	cwde   
  43e039:	call   DWORD PTR [si]
  43e03c:	mov    ds:0x86ba17fc,al
  43e041:	daa    
  43e042:	push   ebp
  43e043:	sub    eax,0x33469530
  43e048:	lahf   
  43e049:	daa    
  43e04a:	sbb    dh,bh
  43e04c:	mul    BYTE PTR [eax+ebp*2]
  43e04f:	dec    esp
  43e050:	sub    esp,ecx
  43e052:	xchg   edx,eax
  43e053:	clc    
  43e054:	fstp   DWORD PTR [edi-0x68]
  43e057:	arpl   sp,di
  43e059:	add    eax,esp
  43e05b:	cmp    cl,BYTE PTR [esi]
  43e05d:	xor    BYTE PTR [esi],dh
  43e05f:	call   0x798e:0xf1019756
  43e066:	sbb    BYTE PTR [esi],0x5e
  43e069:	in     al,0x5b
  43e06b:	ret    0xe383
  43e06e:	ds ds pop esi
  43e071:	mov    ch,0x27
  43e073:	and    DWORD PTR [ebx-0x5efe60ee],edi
  43e079:	in     al,dx
  43e07a:	mov    al,0xbb
  43e07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e07d:	(bad)  
  43e07e:	enter  0x389,0x4e
  43e082:	adc    bh,BYTE PTR [ebp-0x16]
  43e085:	xor    DWORD PTR [eax],ebx
  43e087:	sbb    eax,0x20a031c
  43e08c:	ja     0x43e0e0
  43e08e:	test   al,0xae
  43e090:	xchg   edi,eax
  43e091:	into   
  43e092:	jp     0x43e08b
  43e094:	aas    
  43e095:	mov    al,BYTE PTR [ecx+0x5c]
  43e098:	in     al,0xec
  43e09a:	jecxz  0x43e105
  43e09c:	xlat   BYTE PTR ds:[ebx]
  43e09d:	addr16 data16 sahf 
  43e0a0:	pop    eax
  43e0a1:	mov    eax,ds:0xd151bc8a
  43e0a6:	leave  
  43e0a7:	std    
  43e0a8:	rol    BYTE PTR [ecx+0x490f96fa],cl
  43e0ae:	dec    esi
  43e0af:	fldenv [edx-0x100d4a18]
  43e0b5:	pop    ecx
  43e0b6:	adc    eax,0x6f996c86
  43e0bb:	and    BYTE PTR [esi-0x5335e80a],cl
  43e0c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e0c2:	call   0x2587:0xc152a5ec
  43e0c9:	rcl    DWORD PTR [edx+0x6d32a51f],0xb5
  43e0d0:	pop    ebp
  43e0d1:	in     al,0x2b
  43e0d3:	mov    ecx,0xcb358087
  43e0d8:	xchg   edx,eax
  43e0d9:	add    dl,ah
  43e0db:	dec    edi
  43e0dc:	or     eax,0x8c11eebd
  43e0e1:	dec    eax
  43e0e2:	mov    esp,0xfa955a70
  43e0e7:	xor    cl,bh
  43e0e9:	inc    ebp
  43e0ea:	movaps xmm6,XMMWORD PTR [ebp+0x7bcca107]
  43e0f1:	clc    
  43e0f2:	add    DWORD PTR [edi+0x1d],eax
  43e0f5:	arpl   WORD PTR [ebx+0x70],bp
  43e0f8:	mov    ds:0x52e94f79,eax
  43e0fd:	jae    0x43e09b
  43e0ff:	daa    
  43e100:	ins    BYTE PTR es:[edi],dx
  43e101:	pop    ds
  43e102:	pop    es
  43e103:	retf   0x5d04
  43e106:	xor    al,0x13
  43e108:	jp     0x43e08c
  43e10a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e10b:	iret   
  43e10c:	pushf  
  43e10d:	push   0x1283ea1
  43e112:	inc    esp
  43e113:	mov    eax,ds:0xb13be293
  43e118:	lock int3 
  43e11a:	call   0x889d07ff
  43e11f:	loope  0x43e16e
  43e121:	stc    
  43e122:	ja     0x43e140
  43e124:	(bad)  
  43e125:	repz fwait
  43e127:	sbb    eax,0xe1685504
  43e12c:	std    
  43e12d:	fs loop 0x43e0f6
  43e130:	retf   
  43e131:	lock arpl WORD PTR [esi+0x607cf582],sp
  43e138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e139:	mov    WORD PTR [ebp+0x1b],?
  43e13c:	sbb    al,0x37
  43e13e:	stos   BYTE PTR es:[edi],al
  43e13f:	dec    ecx
  43e140:	fnstcw WORD PTR [ecx]
  43e142:	xor    eax,0xe288ee62
  43e147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e148:	loope  0x43e1af
  43e14a:	test   DWORD PTR [eax],ecx
  43e14c:	mov    ch,0xa3
  43e14e:	inc    edx
  43e14f:	or     al,BYTE PTR [ebx-0x2f]
  43e152:	push   cs
  43e153:	xlat   BYTE PTR ds:[ebx]
  43e154:	fimul  DWORD PTR [eax-0x6b]
  43e157:	sar    DWORD PTR [ebx-0x269f349d],0xb2
  43e15e:	cdq    
  43e15f:	jb     0x43e140
  43e161:	xor    ebx,DWORD PTR ds:0x75c56248
  43e167:	or     ch,ah
  43e169:	addr16 in eax,0xc3
  43e16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e16d:	ds jge 0x43e1b6
  43e170:	iret   
  43e171:	or     cl,BYTE PTR [edx]
  43e173:	push   eax
  43e174:	jb     0x43e15e
  43e176:	iret   
  43e177:	cs sbb ecx,eax
  43e17a:	mov    esi,0xa1ccd56c
  43e17f:	idiv   BYTE PTR [edi-0x5c9fd7f4]
  43e185:	xchg   esp,eax
  43e186:	stos   BYTE PTR es:[edi],al
  43e187:	push   ebx
  43e188:	aaa    
  43e189:	jno    0x43e13c
  43e18b:	inc    edx
  43e18c:	dec    edx
  43e18d:	xchg   ebx,eax
  43e18e:	pop    eax
  43e18f:	lock cmp ah,BYTE PTR [edx-0x1bc97859]
  43e196:	jns    0x43e163
  43e198:	sbb    edi,esp
  43e19a:	jno    0x43e127
  43e19c:	je     0x43e18f
  43e19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e19f:	mov    eax,?
  43e1a1:	push   ss
  43e1a2:	sbb    DWORD PTR [ecx+edx*4-0x7320e321],ecx
  43e1a9:	mov    dl,0x87
  43e1ab:	ret    
  43e1ac:	(bad)  
  43e1ad:	(bad)  [ebp+0xbae26fa]
  43e1b3:	pop    ds
  43e1b4:	jle    0x43e152
  43e1b6:	mov    ah,0xe6
  43e1b8:	fimul  WORD PTR [edi-0x267f0759]
  43e1be:	pop    ebx
  43e1bf:	push   ebp
  43e1c0:	sub    eax,0xcd4de76d
  43e1c5:	adc    al,BYTE PTR [eax+0x45]
  43e1c8:	add    eax,0xacd0ad9d
  43e1cd:	cmp    al,0x2d
  43e1cf:	inc    ebp
  43e1d0:	cwde   
  43e1d1:	push   ecx
  43e1d2:	rol    eax,0x9a
  43e1d5:	rcl    ah,cl
  43e1d7:	retf   
  43e1d8:	xchg   edi,eax
  43e1d9:	jl     0x43e1af
  43e1db:	jecxz  0x43e25b
  43e1dd:	sbb    ch,BYTE PTR [edx+ebp*1]
  43e1e0:	cmp    ebx,eax
  43e1e2:	xchg   edi,esi
  43e1e4:	(bad)  
  43e1e5:	stc    
  43e1e6:	test   BYTE PTR [esi],bl
  43e1e8:	adc    eax,0x49aff0d8
  43e1ed:	sti    
  43e1ee:	sub    dl,BYTE PTR [ebp-0x7b642fe]
  43e1f4:	xchg   DWORD PTR [edx],edi
  43e1f6:	js     0x43e187
  43e1f8:	and    DWORD PTR [edx+ecx*8+0x637097de],edi
  43e1ff:	lods   al,BYTE PTR ds:[esi]
  43e200:	add    ecx,DWORD PTR [edi-0x10]
  43e203:	and    edi,edx
  43e205:	rol    dl,0x8f
  43e208:	ss jmp 0x43e192
  43e20b:	xchg   esi,eax
  43e20c:	cmp    BYTE PTR [esi+0x3a62348e],cl
  43e212:	or     edx,esi
  43e214:	repz fnstenv [ecx]
  43e217:	div    DWORD PTR [ebp*2-0x4ed77c2b]
  43e21e:	jg     0x43e242
  43e220:	ins    DWORD PTR es:[edi],dx
  43e221:	enter  0x6859,0xfb
  43e225:	pusha  
  43e226:	ins    DWORD PTR es:[edi],dx
  43e227:	daa    
  43e228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e229:	pop    eax
  43e22a:	adc    cl,BYTE PTR [eax-0x17]
  43e22d:	mov    bl,0x3f
  43e22f:	das    
  43e230:	mov    ?,WORD PTR [edi-0x60a3211]
  43e236:	fst    DWORD PTR [edi]
  43e238:	jmp    0xff915528
  43e23d:	jns    0x43e1f8
  43e23f:	arpl   WORD PTR [edx],ax
  43e241:	test   al,0x56
  43e243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e244:	mov    ecx,0x4d98a26a
  43e249:	adc    BYTE PTR [ecx],cl
  43e24b:	ss xor al,bh
  43e24e:	in     eax,0xb1
  43e250:	lahf   
  43e251:	and    al,0x7a
  43e253:	lock icebp 
  43e255:	pop    ebp
  43e256:	mov    esi,0x6108714e
  43e25b:	cs inc ebx
  43e25d:	xlat   BYTE PTR ds:[ebx]
  43e25e:	lock enter 0xa6e3,0x9e
  43e263:	pop    ebp
  43e264:	aad    0x9a
  43e266:	jle    0x43e2a2
  43e268:	stc    
  43e269:	repnz pop esp
  43e26b:	les    esi,FWORD PTR [eax+0x63]
  43e26e:	popa   
  43e26f:	xchg   DWORD PTR [ecx],eax
  43e271:	dec    ebp
  43e272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e273:	pop    es
  43e274:	xor    bh,ah
  43e276:	inc    ebp
  43e277:	cmp    cl,BYTE PTR [esi]
  43e279:	sub    BYTE PTR [ecx],ah
  43e27b:	mov    ds:0xaeb102be,eax
  43e280:	rol    DWORD PTR [ecx-0x178e321d],1
  43e286:	(bad)  
  43e287:	mov    al,0x76
  43e289:	mov    WORD PTR [esi-0x6e],?
  43e28c:	xor    cl,dh
  43e28e:	dec    ebp
  43e28f:	(bad)  
  43e290:	cld    
  43e291:	xor    DWORD PTR [ebp-0x22e830bb],ecx
  43e297:	aas    
  43e298:	fcom   QWORD PTR [ebx]
  43e29a:	lods   al,BYTE PTR ds:[esi]
  43e29b:	pop    edi
  43e29c:	loope  0x43e286
  43e29e:	call   0xa635:0xe8ee40fb
  43e2a5:	or     DWORD PTR [esi-0x3f],edx
  43e2a8:	popf   
  43e2a9:	push   0xfdcab3cc
  43e2ae:	out    dx,al
  43e2af:	aaa    
  43e2b0:	cmp    ecx,ebx
  43e2b2:	add    ecx,ebp
  43e2b4:	test   al,0x41
  43e2b6:	fadd   DWORD PTR [edi-0x52]
  43e2b9:	and    al,0x4e
  43e2bb:	(bad)  
  43e2bc:	les    esi,FWORD PTR [ebx]
  43e2be:	sti    
  43e2bf:	dec    ebx
  43e2c0:	jb     0x43e32b
  43e2c2:	push   ss
  43e2c3:	and    ah,BYTE PTR [edi]
  43e2c5:	inc    eax
  43e2c6:	jbe    0x43e2d7
  43e2c8:	cli    
  43e2c9:	test   esi,0x1f6a604d
  43e2cf:	bound  edi,QWORD PTR ds:0x160dd246
  43e2d5:	sub    DWORD PTR [ebx+esi*8+0x16],0x3b
  43e2da:	(bad)
  43e2dd:	and    al,0x6e
  43e2df:	sub    ch,dl
  43e2e1:	dec    esp
  43e2e2:	loopne 0x43e31f
  43e2e4:	rol    BYTE PTR [esi],1
  43e2e6:	xor    bl,dh
  43e2e8:	jp     0x43e300
  43e2ea:	jle    0x43e2e4
  43e2ec:	scas   al,BYTE PTR es:[edi]
  43e2ed:	ror    DWORD PTR [edi-0xfcbb1b3],1
  43e2f3:	xor    DWORD PTR [edx-0x45],esi
  43e2f6:	retf   
  43e2f7:	mov    dh,0xa9
  43e2f9:	jp     0x43e318
  43e2fb:	pusha  
  43e2fc:	pop    ebp
  43e2fd:	add    DWORD PTR [esi+eax*8+0x5ea25f5b],0x3374ee2b
  43e308:	in     al,0x7b
  43e30a:	dec    eax
  43e30b:	or     eax,esp
  43e30d:	jecxz  0x43e295
  43e30f:	loope  0x43e2db
  43e311:	rol    BYTE PTR [ecx+0x6b],cl
  43e314:	xor    al,0xde
  43e316:	(bad)  
  43e317:	jnp    0x43e37a
  43e319:	and    BYTE PTR [ebx],bl
  43e31b:	fisttp DWORD PTR ds:0xe9844c9a
  43e321:	jo     0x43e2ec
  43e323:	mov    esi,esp
  43e325:	or     dl,BYTE PTR [eax-0xa6ae16e]
  43e32b:	and    esi,0xb40727ea
  43e331:	push   ds
  43e332:	je     0x43e300
  43e334:	lods   al,BYTE PTR ds:[esi]
  43e335:	push   ecx
  43e336:	cs je  0x43e315
  43e339:	xor    eax,0xcc4625b7
  43e33e:	pop    esp
  43e33f:	(bad)  
  43e340:	repz inc eax
  43e342:	ror    BYTE PTR [edi-0x71],1
  43e345:	or     DWORD PTR [esp+eiz*2-0x66662f8e],0x3deda7c9
  43e350:	inc    edi
  43e351:	fdivr  QWORD PTR [eax]
  43e353:	jmp    0x43e38b
  43e355:	loop   0x43e312
  43e357:	not    BYTE PTR [eax+0x30]
  43e35a:	in     eax,dx
  43e35b:	sub    DWORD PTR [edi-0x521bb28a],eax
  43e361:	xor    ecx,DWORD PTR [eax]
  43e363:	xchg   ebx,eax
  43e364:	xchg   ebp,eax
  43e365:	aad    0xbd
  43e367:	in     eax,0xb1
  43e369:	loope  0x43e3a4
  43e36b:	dec    ebx
  43e36c:	push   es
  43e36d:	jecxz  0x43e382
  43e36f:	ret    0x7429
  43e372:	add    BYTE PTR [edx-0x54],cl
  43e375:	sub    bh,BYTE PTR [eax-0x31c8bd27]
  43e37b:	mov    edi,0x2c6caff9
  43e380:	pop    ds
  43e381:	int3   
  43e382:	loopne 0x43e3af
  43e384:	jmp    0x7dfa:0xc84abcee
  43e38b:	fucomip st,st(0)
  43e38d:	mov    edi,0x762889af
  43e392:	adc    esi,DWORD PTR [ecx]
  43e394:	enter  0x188b,0x11
  43e398:	cmp    al,0xef
  43e39a:	inc    eax
  43e39b:	ss push eax
  43e39d:	popf   
  43e39e:	dec    ebp
  43e39f:	js     0x43e409
  43e3a1:	sub    BYTE PTR [eax+0x645b065f],dh
  43e3a7:	mov    WORD PTR [ebp-0x629d833b],bx
  43e3ae:	dec    esp
  43e3af:	jns    0x43e376
  43e3b1:	cmp    al,0x85
  43e3b3:	lea    eax,[edx]
  43e3b5:	rol    edi,1
  43e3b7:	test   eax,0x829b5486
  43e3bc:	shl    bh,1
  43e3be:	or     BYTE PTR [edi],0x7f
  43e3c1:	pop    esi
  43e3c2:	cmp    DWORD PTR [ebx+0x7818a529],eax
  43e3c8:	mov    ah,0x4e
  43e3ca:	mov    esi,0xb5b12e99
  43e3cf:	out    dx,eax
  43e3d0:	jo     0x43e3b2
  43e3d2:	dec    esi
  43e3d3:	or     BYTE PTR [esi],bl
  43e3d5:	mov    al,0x49
  43e3d7:	fnstenv [edi+edi*2]
  43e3da:	sub    eax,0xc9a3dec0
  43e3df:	in     al,0x2d
  43e3e1:	test   BYTE PTR [edx-0x79],ch
  43e3e4:	int3   
  43e3e5:	and    ah,al
  43e3e7:	icebp  
  43e3e8:	xor    DWORD PTR cs:0xb7c53800,edx
  43e3ef:	xchg   esi,eax
  43e3f0:	lock loopne 0x43e37a
  43e3f3:	in     eax,dx
  43e3f4:	loopne 0x43e3a6
  43e3f6:	sub    BYTE PTR [ecx+0x341aa52b],al
  43e3fc:	leave  
  43e3fd:	js     0x43e47c
  43e3ff:	inc    ebx
  43e400:	enter  0xaeb3,0x32
  43e404:	jge    0x43e421
  43e406:	fdivr  DWORD PTR [esi]
  43e408:	sub    eax,0xeee3bde4
  43e40d:	cmp    ebx,DWORD PTR [edi+0x3a6558]
  43e413:	cs in  eax,0x37
  43e416:	cmp    BYTE PTR [ebp+0x16],dh
  43e419:	aam    0x57
  43e41b:	scas   al,BYTE PTR es:[edi]
  43e41c:	add    al,0xfd
  43e41e:	push   edi
  43e41f:	sub    eax,0x172771ab
  43e424:	jnp    0x43e442
  43e426:	repz mov esp,0xe2d6f000
  43e42c:	jne    0x43e3b9
  43e42e:	fimul  DWORD PTR [ebx-0x471fa54c]
  43e434:	or     al,0x47
  43e436:	aaa    
  43e437:	retf   0xe91f
  43e43a:	mov    ebx,0xab25ae04
  43e43f:	dec    esi
  43e440:	sub    ebx,ebx
  43e442:	sbb    edi,eax
  43e444:	jmp    0x53d30a92
  43e449:	mov    ah,0x59
  43e44b:	pop    eax
  43e44c:	pop    ds
  43e44d:	inc    ebx
  43e44e:	dec    edi
  43e44f:	dec    ebp
  43e450:	in     al,0x38
  43e452:	xor    al,0x37
  43e454:	or     al,0xdf
  43e456:	or     dh,BYTE PTR [esi+0x4b]
  43e459:	xchg   esp,eax
  43e45a:	mov    edi,0x4f0b4e3f
  43e45f:	hlt    
  43e460:	das    
  43e461:	mov    al,0x6f
  43e463:	jp     0x43e40d
  43e465:	cwde   
  43e466:	inc    edi
  43e467:	(bad)  
  43e468:	push   edx
  43e469:	add    eax,DWORD PTR [edi+0x1eb7deea]
  43e46f:	jae    0x43e429
  43e471:	sbb    al,0x21
  43e473:	sub    eax,0xd5bcf5cb
  43e478:	push   eax
  43e479:	lahf   
  43e47a:	mov    esp,0x762dec2a
  43e47f:	retf   0x2ce3
  43e482:	loope  0x43e457
  43e484:	loopne 0x43e422
  43e486:	aam    0x9f
  43e488:	mov    bh,0x13
  43e48a:	icebp  
  43e48b:	outs   dx,DWORD PTR ds:[esi]
  43e48c:	imul   ebx,eax,0x5c
  43e48f:	cmp    eax,0x576ab57
  43e494:	in     eax,dx
  43e495:	test   cl,ah
  43e497:	mov    al,ds:0x2b378d27
  43e49c:	(bad)  
  43e49d:	xor    BYTE PTR [ecx],ch
  43e49f:	fdivr  DWORD PTR [edi+0xd]
  43e4a2:	or     BYTE PTR [eax-0x31],cl
  43e4a5:	sti    
  43e4a6:	js     0x43e4ae
  43e4a8:	lds    esp,FWORD PTR [edx]
  43e4aa:	retf   0xb927
  43e4ad:	std    
  43e4ae:	int3   
  43e4af:	jno    0x43e460
  43e4b1:	or     ebx,esi
  43e4b3:	retf   0xb8ec
  43e4b6:	pop    es
  43e4b7:	sub    al,0xb0
  43e4b9:	dec    edx
  43e4ba:	or     bl,BYTE PTR [esi]
  43e4bc:	nop
  43e4bd:	pop    edi
  43e4be:	mov    dh,0x60
  43e4c0:	(bad)  
  43e4c1:	loope  0x43e48d
  43e4c3:	or     bh,al
  43e4c5:	jl     0x43e483
  43e4c7:	repz popa 
  43e4c9:	sub    esp,DWORD PTR [esi+0x21aa1094]
  43e4cf:	popa   
  43e4d0:	lock jnp 0x43e50a
  43e4d3:	mov    bl,0x8a
  43e4d5:	mov    ebp,0x785e20e8
  43e4da:	arpl   WORD PTR [edx+0x48],bp
  43e4dd:	inc    edx
  43e4de:	xor    DWORD PTR [ecx+0x60],ecx
  43e4e1:	lods   eax,DWORD PTR ds:[esi]
  43e4e2:	inc    ebp
  43e4e3:	daa    
  43e4e4:	cmp    BYTE PTR [esp+ebx*8-0x5e],al
  43e4e8:	add    DWORD PTR [esi-0x58],ebp
  43e4eb:	jl     0x43e51e
  43e4ed:	sub    ebx,DWORD PTR [esp+ecx*8]
  43e4f0:	pop    eax
  43e4f1:	mov    edi,0x53df04a
  43e4f6:	shr    BYTE PTR [ebp+0x1d9a21cf],cl
  43e4fc:	and    bh,ah
  43e4fe:	sbb    edi,0x9
  43e501:	lods   al,BYTE PTR ds:[esi]
  43e502:	inc    esp
  43e503:	dec    eax
  43e504:	mov    bl,0x14
  43e506:	cmp    BYTE PTR ds:0x610232fb,cl
  43e50c:	mov    ebp,DWORD PTR [ecx]
  43e50e:	or     DWORD PTR [ecx-0x4a],eax
  43e511:	push   edx
  43e512:	jno    0x43e54b
  43e514:	aaa    
  43e515:	in     eax,dx
  43e516:	inc    edi
  43e517:	push   ecx
  43e518:	mov    ecx,0x23a9c7c5
  43e51d:	int3   
  43e51e:	(bad)  
  43e51f:	push   eax
  43e520:	ror    BYTE PTR [edx+edi*1+0x64],0xe8
  43e525:	xchg   esp,eax
  43e526:	fdivr  QWORD PTR [esp+ecx*1+0x46]
  43e52a:	push   esp
  43e52b:	mov    bh,0x63
  43e52d:	sbb    bl,bh
  43e52f:	inc    ecx
  43e530:	daa    
  43e531:	push   ecx
  43e532:	dec    eax
  43e533:	jne    0x43e522
  43e535:	mov    ebx,0x13139d6a
  43e53a:	jno    0x43e5b7
  43e53c:	idiv   BYTE PTR [ecx+0x20]
  43e53f:	scas   eax,DWORD PTR es:[edi]
  43e540:	ja     0x43e559
  43e542:	push   ebx
  43e543:	mov    DWORD PTR [ebp-0x78],edx
  43e546:	les    ebx,FWORD PTR [ecx+0x5f]
  43e549:	dec    esp
  43e54a:	int    0x6e
  43e54c:	out    dx,eax
  43e54d:	(bad)  
  43e54e:	jae    0x43e52c
  43e550:	loopne 0x43e561
  43e552:	mov    al,ds:0x71ca01f3
  43e557:	aam    0x41
  43e559:	jmp    0x43e580
  43e55b:	je     0x43e526
  43e55d:	arpl   bp,bx
  43e55f:	retf   
  43e560:	loop   0x43e587
  43e562:	mov    ah,0xc
  43e564:	and    edx,DWORD PTR [esi-0x4]
  43e567:	fnstcw WORD PTR [esi+0x46312892]
  43e56d:	inc    ecx
  43e56e:	in     eax,0xfe
  43e570:	inc    ecx
  43e571:	daa    
  43e572:	mov    esi,0xf8a5e198
  43e577:	js     0x43e542
  43e579:	sar    edi,1
  43e57b:	loopne 0x43e5b2
  43e57d:	js     0x43e5e8
  43e57f:	push   ds
  43e580:	lods   eax,DWORD PTR ds:[esi]
  43e581:	out    dx,al
  43e582:	mov    al,0x6e
  43e584:	cmp    eax,0xb896294a
  43e589:	push   ebx
  43e58a:	jle    0x43e55f
  43e58c:	xor    DWORD PTR [ecx+0x25],esi
  43e58f:	gs pop esi
  43e591:	sti    
  43e592:	mov    ds:0x13b715bb,eax
  43e597:	or     edi,esp
  43e599:	not    esp
  43e59b:	jns    0x43e566
  43e59d:	or     al,0x72
  43e59f:	test   ch,dh
  43e5a1:	ins    DWORD PTR es:[edi],dx
  43e5a2:	fldcw  WORD PTR [edi-0x4f]
  43e5a5:	test   al,0x7d
  43e5a7:	mov    al,ds:0xb7b8515c
  43e5ac:	not    DWORD PTR [ebx-0x58b31ffa]
  43e5b2:	xchg   ebx,eax
  43e5b3:	sbb    al,0xd7
  43e5b5:	or     DWORD PTR [ebp+0x181f158e],esi
  43e5bb:	ficom  DWORD PTR [edi+ebp*8+0x6f]
  43e5bf:	and    DWORD PTR [ecx+0x2f39077c],ebx
  43e5c5:	fbld   TBYTE PTR [ebx+0x5d]
  43e5c8:	shl    DWORD PTR [ebx],0x86
  43e5cb:	xor    al,0x73
  43e5cd:	in     eax,0xba
  43e5cf:	fbld   TBYTE PTR [ebx+0x44]
  43e5d2:	mov    bl,0x51
  43e5d4:	xor    cl,cl
  43e5d6:	xor    ah,BYTE PTR [ecx+0xe3d869b]
  43e5dc:	sbb    dl,bl
  43e5de:	or     DWORD PTR [edx-0x82ea4da],esi
  43e5e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e5e5:	and    al,0xc8
  43e5e7:	inc    edi
  43e5e8:	xchg   edi,esi
  43e5ea:	ret    
  43e5eb:	adc    BYTE PTR [esi-0x54973105],ah
  43e5f1:	loope  0x43e626
  43e5f3:	jno    0x43e593
  43e5f5:	leave  
  43e5f6:	fnstenv [eax+0x4b19c417]
  43e5fc:	inc    ebx
  43e5fd:	das    
  43e5fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e5ff:	jmp    0xf710:0x4b35953
  43e606:	cwde   
  43e607:	cs jmp 0x76f3:0x6b0d6276
  43e60f:	xor    ah,cl
  43e611:	shufps xmm0,xmm3,0xa8
  43e615:	(bad)  [eax-0x2cc68e8d]
  43e61b:	aam    0x52
  43e61d:	jne    0x43e620
  43e61f:	inc    ecx
  43e620:	sahf   
  43e621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e622:	dec    edx
  43e623:	pusha  
  43e624:	shl    BYTE PTR [ebx+0x1b0e7bf3],1
  43e62a:	daa    
  43e62b:	stc    
  43e62c:	push   es
  43e62d:	dec    esi
  43e62e:	sub    al,0xaf
  43e630:	(bad)  
  43e631:	pushf  
  43e632:	pop    esi
  43e633:	and    BYTE PTR [eax-0x4fd5d873],dl
  43e639:	xchg   ecx,eax
  43e63a:	sub    eax,0x52574e16
  43e63f:	adc    eax,0x8ca21e6e
  43e644:	bsf    ecx,DWORD PTR [edi-0x75]
  43e648:	adc    dl,BYTE PTR [eax]
  43e64a:	pop    eax
  43e64b:	push   esi
  43e64c:	xchg   ecx,eax
  43e64d:	or     ecx,DWORD PTR [edx+0x64]
  43e650:	loopne 0x43e675
  43e652:	xchg   esp,eax
  43e653:	lods   al,BYTE PTR ds:[esi]
  43e654:	xchg   edx,eax
  43e655:	jne    0x43e5df
  43e657:	pop    eax
  43e658:	xor    DWORD PTR [edx-0x75c7346a],edx
  43e65e:	mov    esi,0x86df6cab
  43e663:	jecxz  0x43e6b9
  43e665:	shl    ecx,1
  43e667:	dec    edi
  43e668:	mov    eax,0x5dbc4679
  43e66d:	ja     0x43e661
  43e66f:	mov    ah,0x13
  43e671:	xchg   edx,eax
  43e672:	fadd   st(0),st
  43e674:	retf   0x40c
  43e677:	mov    ebx,0x3ae56ff5
  43e67c:	sahf   
  43e67d:	mov    cl,BYTE PTR [eax+0x1c]
  43e680:	rcl    DWORD PTR [ecx-0x50],0xba
  43e684:	scas   eax,DWORD PTR es:[edi]
  43e685:	or     edi,esp
  43e687:	xchg   esp,eax
  43e688:	mov    esp,DWORD PTR [eax]
  43e68a:	xor    DWORD PTR ds:0xe9b9d870,0xffffffa5
  43e691:	ret    
  43e692:	xchg   ebp,eax
  43e693:	pushf  
  43e694:	mov    bh,0x47
  43e696:	and    ebp,edx
  43e698:	and    edx,DWORD PTR [eax]
  43e69a:	mov    dh,0x45
  43e69c:	fmul   st,st(1)
  43e69e:	mov    WORD PTR [edi-0x48],gs
  43e6a1:	scas   eax,DWORD PTR es:[edi]
  43e6a2:	xchg   edi,eax
  43e6a3:	ja     0x43e6fb
  43e6a5:	sti    
  43e6a6:	jp     0x43e668
  43e6a8:	mul    BYTE PTR [edi+0x61]
  43e6ab:	mov    ss,WORD PTR [eax-0xa1c87d0]
  43e6b1:	jg     0x43e72e
  43e6b3:	push   edi
  43e6b4:	addr16 dec edi
  43e6b6:	and    dl,cl
  43e6b8:	cmp    DWORD PTR [ecx-0x79],ecx
  43e6bb:	sbb    BYTE PTR [ebp+0x194c7733],0x6
  43e6c2:	mov    al,ds:0x33a177a6
  43e6c7:	xor    eax,0x75854d30
  43e6cc:	add    DWORD PTR [edx+0x4d],ebp
  43e6cf:	jmp    0x7f4b:0xc23e2abc
  43e6d6:	scas   al,BYTE PTR es:[edi]
  43e6d7:	daa    
  43e6d8:	jae    0x43e6d0
  43e6da:	imul   ebp,DWORD PTR [eax+0x4795846d],0x78
  43e6e1:	lock jbe 0x43e68e
  43e6e4:	jbe    0x43e731
  43e6e6:	in     al,0xca
  43e6e8:	pop    edx
  43e6e9:	pop    ss
  43e6ea:	aas    
  43e6eb:	lds    ebx,FWORD PTR [edx+eiz*4+0x69f75af2]
  43e6f2:	mov    edi,0xcc6e8f2
  43e6f7:	xchg   esi,eax
  43e6f8:	neg    DWORD PTR [esi]
  43e6fa:	push   edx
  43e6fb:	mov    dh,0x4a
  43e6fd:	pusha  
  43e6fe:	xor    edi,ebx
  43e700:	sub    ebx,DWORD PTR [ebx+0x63]
  43e703:	fdivr  DWORD PTR [ebx+0x7]
  43e706:	pop    esi
  43e707:	(bad)  
  43e709:	aas    
  43e70a:	sbb    edi,edx
  43e70c:	mov    esp,edi
  43e70e:	sbb    DWORD PTR [edi+0x63],0x46
  43e712:	fistp  DWORD PTR [edx-0x75167a95]
  43e718:	ret    0xe770
  43e71b:	cdq    
  43e71c:	pop    es
  43e71d:	je     0x43e788
  43e71f:	xchg   BYTE PTR [ecx],bh
  43e721:	inc    esi
  43e722:	jo     0x43e75f
  43e724:	add    eax,0x862c6134
  43e729:	leave  
  43e72a:	xor    BYTE PTR [ebx+0x63],al
  43e72d:	jle    0x43e6c7
  43e72f:	xor    al,0xff
  43e731:	mov    BYTE PTR [ebx-0x20],cl
  43e734:	xchg   ecx,eax
  43e735:	ret    
  43e736:	pop    ebx
  43e737:	lods   al,BYTE PTR ds:[esi]
  43e738:	cmp    esp,DWORD PTR [ebx-0x50]
  43e73b:	outs   dx,BYTE PTR ds:[esi]
  43e73c:	jle    0x43e72a
  43e73e:	mov    esp,0x667a47a6
  43e743:	dec    edx
  43e744:	je     0x43e782
  43e746:	or     al,0x75
  43e748:	xchg   esi,eax
  43e749:	push   esi
  43e74a:	ds xor dh,ch
  43e74d:	cli    
  43e74e:	test   eax,0x3fd0ede8
  43e753:	or     al,0x90
  43e755:	loop   0x43e6f8
  43e757:	jecxz  0x43e70e
  43e759:	js     0x43e73e
  43e75b:	hlt    
  43e75c:	in     eax,0xe0
  43e75e:	xchg   DWORD PTR [ebp+0x5e],ebx
  43e761:	jno    0x43e726
  43e763:	or     dh,ah
  43e765:	xchg   DWORD PTR [ecx+0x79af32f1],edx
  43e76b:	pop    ebx
  43e76c:	(bad)  
  43e76d:	out    0xe7,eax
  43e76f:	lods   al,BYTE PTR ds:[esi]
  43e770:	inc    BYTE PTR [ecx]
  43e772:	cmp    BYTE PTR ds:0x49affeb7,dl
  43e778:	mov    dl,0x1d
  43e77a:	(bad)  
  43e77c:	adc    edi,DWORD PTR [edi+0x27]
  43e77f:	lods   eax,DWORD PTR ds:[esi]
  43e780:	mov    dl,0x5
  43e782:	xchg   edx,eax
  43e783:	inc    ebx
  43e784:	dec    ebp
  43e785:	cs in  al,0xd
  43e788:	in     al,dx
  43e789:	or     eax,DWORD PTR [esi+0x27]
  43e78c:	ret    0xf30d
  43e78f:	xchg   DWORD PTR [eax],edi
  43e791:	mov    esi,0x57245da3
  43e796:	stos   BYTE PTR es:[edi],al
  43e797:	js     0x43e745
  43e799:	push   0x30
  43e79b:	ret    0x2a2a
  43e79e:	addr16 cdq 
  43e7a0:	fisttp DWORD PTR [ebp+0xe]
  43e7a3:	jle    0x43e7eb
  43e7a5:	jb     0x43e756
  43e7a7:	(bad)  [edi+ebx*1]
  43e7aa:	in     eax,dx
  43e7ab:	pushf  
  43e7ac:	or     al,0x81
  43e7ae:	lock je 0x43e7d9
  43e7b1:	shl    DWORD PTR [edi+0x62],1
  43e7b4:	jnp    0x43e7e4
  43e7b6:	or     eax,0x76acf00c
  43e7bb:	out    dx,al
  43e7bc:	rcr    DWORD PTR [ecx],cl
  43e7be:	call   0xd302:0xc757b87f
  43e7c5:	addr16 mov edi,0xbe5d0288
  43e7cb:	ins    BYTE PTR es:[edi],dx
  43e7cc:	sub    bh,BYTE PTR [edi-0x7]
  43e7cf:	gs adc al,0xa
  43e7d2:	sub    al,0x6c
  43e7d4:	pop    edx
  43e7d5:	cwde   
  43e7d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e7d7:	das    
  43e7d8:	and    eax,DWORD PTR [edi-0x62342b95]
  43e7de:	jg     0x43e783
  43e7e0:	inc    ebp
  43e7e1:	mov    cl,0x24
  43e7e3:	mov    bh,0xa5
  43e7e5:	sbb    BYTE PTR [ebx+esi*2+0x37],bh
  43e7e9:	les    ecx,FWORD PTR [ebp+0x3c]
  43e7ec:	or     eax,0x3588909e
  43e7f1:	pop    ss
  43e7f2:	(bad)  
  43e7f3:	or     esp,DWORD PTR [eax-0x2f23dff7]
  43e7f9:	jp     0x43e846
  43e7fb:	sbb    cl,BYTE PTR [edi-0x110aef94]
  43e801:	sub    ecx,DWORD PTR [edx]
  43e803:	jae    0x43e849
  43e805:	add    DWORD PTR [ebx],edx
  43e807:	cwde   
  43e808:	ins    BYTE PTR es:[di],dx
  43e80a:	addr16 jle 0x43e846
  43e80d:	cwde   
  43e80e:	mov    bh,0xdf
  43e810:	pop    ebx
  43e811:	fs out 0xdb,eax
  43e814:	and    cl,BYTE PTR [edi-0x1f]
  43e817:	xchg   edi,eax
  43e818:	nop
  43e819:	sbb    DWORD PTR [ebp-0x5e],esi
  43e81c:	fwait
  43e81d:	(bad)  
  43e81e:	sbb    ebp,DWORD PTR [edi+0x235bace3]
  43e824:	sti    
  43e825:	(bad)  
  43e827:	dec    esi
  43e828:	repz xchg ah,bh
  43e82b:	mov    esi,0x77d1b35c
  43e830:	or     al,0x7a
  43e832:	ror    dh,cl
  43e834:	rcr    eax,0xba
  43e837:	aaa    
  43e838:	mov    WORD PTR [edx+0x4e151cfd],ss
  43e83e:	lock out dx,eax
  43e840:	ja     0x43e8b5
  43e842:	push   ebp
  43e843:	mov    esp,0xd6dc7fd5
  43e848:	and    ch,dl
  43e84a:	neg    DWORD PTR [ecx]
  43e84c:	inc    ebx
  43e84d:	push   edi
  43e84e:	xor    DWORD PTR [ebp+ecx*4-0x28],esi
  43e852:	mov    ecx,0x3ec6908f
  43e857:	rol    BYTE PTR [ebx-0x2e],cl
  43e85a:	ja     0x43e800
  43e85c:	sub    edx,esp
  43e85e:	inc    edi
  43e85f:	pop    DWORD PTR [eax-0x69]
  43e862:	lds    edx,FWORD PTR [esi]
  43e864:	in     eax,0xb5
  43e866:	inc    ebp
  43e867:	inc    esi
  43e868:	jl     0x43e897
  43e86a:	lock in eax,0x8f
  43e86d:	ins    BYTE PTR es:[edi],dx
  43e86e:	add    ch,cl
  43e870:	out    0xf0,al
  43e872:	(bad)  
  43e873:	fsubr  DWORD PTR [esi]
  43e875:	ja     0x43e817
  43e877:	scas   al,BYTE PTR es:[edi]
  43e878:	sub    esi,DWORD PTR [ebx+0x7e]
  43e87b:	jo     0x43e82e
  43e87d:	std    
  43e87e:	sbb    al,0x59
  43e880:	lahf   
  43e881:	push   esi
  43e882:	addr16 pop ebx
  43e884:	mov    ebx,0x67c7c7a3
  43e889:	mov    eax,ds:0xf82093fe
  43e88e:	mov    edx,0x3e34f6a2
  43e893:	xchg   DWORD PTR ds:0x754db408,esi
  43e899:	mov    dl,0xda
  43e89b:	jl     0x43e83a
  43e89d:	rcr    bh,cl
  43e89f:	out    0x80,eax
  43e8a1:	test   DWORD PTR [eax-0x7b17e2aa],0x23085d80
  43e8ab:	push   esp
  43e8ac:	dec    esi
  43e8ad:	(bad)  
  43e8ae:	jge    0x43e8cb
  43e8b0:	lods   eax,DWORD PTR ds:[esi]
  43e8b1:	add    bh,cl
  43e8b3:	lods   al,BYTE PTR ds:[esi]
  43e8b4:	jge    0x43e853
  43e8b6:	ret    0xaaa5
  43e8b9:	or     ecx,DWORD PTR [eax-0x75]
  43e8bc:	arpl   WORD PTR [ebx],bx
  43e8be:	(bad)  
  43e8bf:	loopne 0x43e8f7
  43e8c1:	push   ss
  43e8c2:	push   edi
  43e8c3:	xchg   esi,eax
  43e8c4:	fld    TBYTE PTR [ecx-0x5f]
  43e8c7:	xchg   edx,eax
  43e8c8:	iret   
  43e8c9:	xor    BYTE PTR [eax],dh
  43e8cb:	mov    dl,0x59
  43e8cd:	mov    bl,al
  43e8cf:	xor    dl,BYTE PTR [edi]
  43e8d1:	ds popf 
  43e8d3:	sbb    eax,0x5fd8b0fa
  43e8d8:	outs   dx,DWORD PTR ds:[esi]
  43e8d9:	loop   0x43e8d7
  43e8db:	jo     0x43e8e7
  43e8dd:	mov    edi,0xf0ac0bbd
  43e8e2:	sbb    cl,BYTE PTR [edx+0x6d]
  43e8e5:	outs   dx,DWORD PTR ds:[esi]
  43e8e6:	xor    dh,BYTE PTR [ebx-0x24af76cb]
  43e8ec:	punpcklwd mm5,DWORD PTR [ecx]
  43e8ef:	jae    0x43e8c0
  43e8f1:	sub    BYTE PTR [edx+esi*4+0x5d005b32],dh
  43e8f8:	mov    esp,0x6834a227
  43e8fd:	add    DWORD PTR [esp+eax*8],0xffffffb7
  43e901:	shr    BYTE PTR [ebp+0x6c],1
  43e904:	jo     0x43e963
  43e906:	out    dx,eax
  43e907:	pusha  
  43e908:	xchg   esi,eax
  43e909:	inc    ebx
  43e90a:	inc    edx
  43e90b:	and    dl,cl
  43e90d:	add    al,0x56
  43e90f:	mov    BYTE PTR [esi+ebx*8+0x25ce8df3],ch
  43e916:	and    esp,DWORD PTR [edx-0x272726d9]
  43e91c:	add    esi,DWORD PTR ss:[edx-0x140b772d]
  43e923:	ins    DWORD PTR es:[edi],dx
  43e924:	pop    ebp
  43e925:	int3   
  43e926:	jp     0x43e8f3
  43e928:	and    BYTE PTR ds:[esi+ebp*2-0x4709991b],al
  43e930:	cmp    DWORD PTR [eax-0x6900d35f],edi
  43e936:	dec    eax
  43e937:	shl    DWORD PTR [eax],cl
  43e939:	jl     0x43e999
  43e93b:	mov    ebx,0x9b0524d3
  43e940:	stos   DWORD PTR es:[edi],eax
  43e941:	or     DWORD PTR [ebx],ebx
  43e943:	xchg   edi,eax
  43e944:	pop    edx
  43e945:	xchg   ebx,eax
  43e946:	leave  
  43e947:	jmp    0x43e978
  43e949:	out    dx,al
  43e94a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e94b:	sbb    eax,0xbc125444
  43e950:	add    cl,BYTE PTR [esi]
  43e952:	ja     0x43e99a
  43e954:	xchg   ebx,eax
  43e955:	and    al,0xbc
  43e957:	mov    al,0x27
  43e959:	into   
  43e95a:	and    BYTE PTR ds:0xb3a5aad7,al
  43e960:	iret   
  43e961:	dec    ebp
  43e962:	fcomi  st,st(4)
  43e964:	jecxz  0x43e93b
  43e966:	mov    edi,0xf22344f5
  43e96b:	rol    DWORD PTR [eax+0x39],0x10
  43e96f:	push   cs
  43e970:	and    ah,bh
  43e972:	sbb    edi,DWORD PTR [edx]
  43e974:	imul   esi,DWORD PTR [esi+0x52cffda7],0x558e2c4c
  43e97e:	(bad)  
  43e97f:	mov    ebx,0xf54628bd
  43e984:	push   eax
  43e985:	fbld   TBYTE PTR [edx+esi*1-0x61]
  43e989:	inc    eax
  43e98a:	cmp    DWORD PTR [esi+esi*8+0x81d7948],ecx
  43e991:	xchg   edi,eax
  43e992:	idiv   BYTE PTR [esi+esi*2-0x4c]
  43e996:	ja     0x43e9ec
  43e998:	xchg   edx,eax
  43e999:	lods   eax,DWORD PTR ds:[esi]
  43e99a:	in     al,dx
  43e99b:	loope  0x43e942
  43e99d:	ins    BYTE PTR es:[edi],dx
  43e99e:	sbb    esp,esi
  43e9a0:	scas   eax,DWORD PTR es:[edi]
  43e9a1:	mov    al,ds:0x7faa7619
  43e9a6:	inc    ebx
  43e9a7:	push   0xc0abe05d
  43e9ac:	imul   eax
  43e9ae:	call   0x9d87a96c
  43e9b3:	push   0x63f03b55
  43e9b8:	shl    BYTE PTR [edx-0x4e],cl
  43e9bb:	add    BYTE PTR [edx-0x69637f1d],bh
  43e9c1:	sub    dh,al
  43e9c3:	pop    ebp
  43e9c4:	xchg   edx,eax
  43e9c5:	pop    ebp
  43e9c6:	sub    BYTE PTR [edx+0x76e74c9b],bh
  43e9cc:	fstp   QWORD PTR [esi+0x37]
  43e9cf:	jmp    0x7358:0xe87ecd67
  43e9d6:	cs pop esp
  43e9d8:	inc    ecx
  43e9d9:	sbb    al,0x45
  43e9db:	sub    eax,0x298e83d5
  43e9e0:	jmp    0x3930:0xb6eeff44
  43e9e7:	mov    ecx,0xa61baf65
  43e9ec:	sub    ch,BYTE PTR [ebp-0x21]
  43e9ef:	add    DWORD PTR [ebx],edx
  43e9f1:	add    BYTE PTR [ebp+0x51],dh
  43e9f4:	and    dl,BYTE PTR ds:0x930bbee2
  43e9fa:	jo     0x43ea62
  43e9fc:	out    0x71,al
  43e9fe:	outs   dx,BYTE PTR ds:[esi]
  43e9ff:	xchg   edi,eax
  43ea00:	dec    ecx
  43ea01:	mov    esp,0x2baba007
  43ea06:	pop    edx
  43ea07:	sahf   
  43ea08:	(bad)  
  43ea09:	sbb    eax,DWORD PTR [eax]
  43ea0b:	sti    
  43ea0c:	sbb    BYTE PTR [ebp*4+0x7bb652e],0x50
  43ea14:	fld    DWORD PTR [edx+0x1ef833d8]
  43ea1a:	push   0xda19a471
  43ea1f:	and    edx,DWORD PTR [eax+0x6a]
  43ea22:	aad    0x53
  43ea24:	enter  0x6373,0x9
  43ea28:	gs jno 0x43ea3d
  43ea2b:	lea    eax,[ecx]
  43ea2d:	xor    al,0xd9
  43ea2f:	sbb    al,BYTE PTR [edi]
  43ea31:	rcr    ebp,cl
  43ea33:	lods   eax,DWORD PTR ds:[esi]
  43ea34:	dec    esp
  43ea35:	xor    ebx,DWORD PTR [edi]
  43ea37:	pop    esi
  43ea38:	ret    0x5837
  43ea3b:	and    eax,0x677c7321
  43ea40:	jl     0x43ea52
  43ea42:	xchg   esp,eax
  43ea43:	adc    edx,edi
  43ea45:	mov    edi,0xe5bc47c4
  43ea4a:	add    BYTE PTR [ecx-0x61],ch
  43ea4d:	cmp    eax,0x356500e6
  43ea52:	aam    0x9d
  43ea54:	pop    esp
  43ea55:	pop    ecx
  43ea56:	out    0x91,eax
  43ea58:	mov    esi,0x9278338f
  43ea5d:	loope  0x43ea22
  43ea5f:	mov    ecx,ecx
  43ea61:	lods   al,BYTE PTR ds:[esi]
  43ea62:	adc    DWORD PTR [esi],0x72415a2
  43ea68:	loop   0x43ea81
  43ea6a:	sbb    ah,BYTE PTR [edi+ebp*4-0x6e]
  43ea6e:	imul   edx,DWORD PTR [edi],0xd31c409f
  43ea74:	sbb    al,0xfd
  43ea76:	mov    ds:0x74d5b04,al
  43ea7b:	ret    0xa3b4
  43ea7e:	dec    ebx
  43ea7f:	jl     0x43ea97
  43ea81:	lds    ebp,FWORD PTR [edx+edx*1-0x1b]
  43ea85:	xchg   esp,eax
  43ea86:	jns    0x43eacd
  43ea88:	ss (bad) 
  43ea8a:	and    cl,dh
  43ea8c:	xor    eax,0xb8040a20
  43ea91:	add    eax,0x6d204957
  43ea96:	mov    ecx,0xb9f5ca65
  43ea9b:	mov    ss,edi
  43ea9d:	dec    BYTE PTR [eax]
  43ea9f:	push   cs
  43eaa0:	cmc    
  43eaa1:	popf   
  43eaa2:	shr    BYTE PTR [ecx-0x70],cl
  43eaa5:	fst    DWORD PTR [ecx+edi*8]
  43eaa8:	std    
  43eaa9:	nop
  43eaaa:	imul   ebp,DWORD PTR [edx-0xe],0x2710e1
  43eab1:	test   bl,bl
  43eab3:	push   esp
  43eab4:	fild   DWORD PTR [esi]
  43eab6:	sbb    eax,0xa79c117b
  43eabb:	pop    esp
  43eabc:	mov    eax,ds:0xd4f38a62
  43eac1:	test   DWORD PTR [ebx+eax*4-0x3406c042],edx
  43eac8:	sbb    al,0xac
  43eaca:	sbb    BYTE PTR [eax],bh
  43eacc:	mov    al,ds:0x7c9760ef
  43ead1:	cmp    al,BYTE PTR [eax+eiz*8-0x7e]
  43ead5:	cmp    DWORD PTR [edi],edx
  43ead7:	mov    edi,0xaf10843f
  43eadc:	push   0xffffffa0
  43eade:	enter  0x4bcb,0xd2
  43eae2:	test   DWORD PTR [edx+eiz*8+0x1b],eax
  43eae6:	inc    ebp
  43eae7:	cs inc edx
  43eae9:	imul   ebx,ecx,0xcc356403
  43eaef:	push   cs
  43eaf0:	dec    esp
  43eaf1:	fdivr  QWORD PTR [edi]
  43eaf3:	mov    cl,0x54
  43eaf5:	cmp    esp,ebx
  43eaf7:	icebp  
  43eaf8:	sub    DWORD PTR [ecx-0x5c],0x34551789
  43eaff:	inc    ebx
  43eb00:	adc    ebp,edx
  43eb02:	ss mov edi,0x7c2f1d87
  43eb08:	pop    ebx
  43eb09:	jg     0x43eb80
  43eb0b:	sub    BYTE PTR [eax+0x4d],0x76
  43eb0f:	outs   dx,BYTE PTR ds:[esi]
  43eb10:	imul   eax,edx,0x8
  43eb13:	rcl    DWORD PTR [eax],cl
  43eb15:	test   eax,0xc3fe2322
  43eb1a:	ds add ebx,esi
  43eb1d:	pushf  
  43eb1e:	push   es
  43eb1f:	jecxz  0x43eb43
  43eb21:	call   0x9953:0xd63555d9
  43eb28:	mov    dl,0xd
  43eb2a:	mov    esi,0x7e805395
  43eb2f:	pop    ebx
  43eb30:	das    
  43eb31:	mov    al,0x4f
  43eb33:	pushf  
  43eb34:	loopne 0x43eaee
  43eb36:	(bad)  [edx]
  43eb38:	(bad)  
  43eb39:	ret    0x506c
  43eb3c:	(bad)  
  43eb3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eb3e:	int    0x66
  43eb40:	adc    eax,0x27404d49
  43eb45:	aaa    
  43eb46:	or     esp,0xffffff8b
  43eb49:	mov    edi,0x341110f7
  43eb4e:	arpl   WORD PTR [eax],dx
  43eb50:	adc    eax,0x11eb0722
  43eb55:	fmul   DWORD PTR [edx]
  43eb57:	cs out dx,eax
  43eb59:	and    DWORD PTR [edx+ebp*4],0xffffff97
  43eb5d:	xchg   esp,eax
  43eb5e:	xchg   edx,eax
  43eb5f:	cmp    al,0xa5
  43eb61:	fwait
  43eb62:	sub    ecx,esp
  43eb64:	add    esp,ebp
  43eb66:	adc    al,0xc4
  43eb68:	leave  
  43eb69:	pop    eax
  43eb6a:	push   ds
  43eb6b:	push   esi
  43eb6c:	scas   al,BYTE PTR es:[edi]
  43eb6d:	xlat   BYTE PTR ds:[ebx]
  43eb6e:	add    ah,al
  43eb70:	or     dh,BYTE PTR [edx+0x3ff29096]
  43eb76:	pop    es
  43eb77:	or     ebp,DWORD PTR [edi-0x29d6fc9a]
  43eb7d:	add    BYTE PTR [esp+edi*8],cl
  43eb80:	mov    ebp,eax
  43eb82:	stos   DWORD PTR es:[edi],eax
  43eb83:	or     BYTE PTR [eax],0x58
  43eb86:	adc    eax,0xd85a8ab9
  43eb8b:	(bad)  
  43eb8c:	mov    dl,0x6c
  43eb8e:	add    dl,BYTE PTR [edx+ebx*2]
  43eb91:	push   esp
  43eb92:	and    eax,esi
  43eb94:	test   al,0x98
  43eb96:	retf   
  43eb97:	in     eax,0x91
  43eb99:	jnp    0x43eb1d
  43eb9b:	add    BYTE PTR [ecx-0x27],dl
  43eb9e:	call   0x9317:0x6515c80e
  43eba5:	lahf   
  43eba6:	dec    ebp
  43eba7:	xchg   esp,eax
  43eba8:	repz add al,0xbc
  43ebab:	daa    
  43ebac:	and    al,0x4f
  43ebae:	push   ss
  43ebaf:	jno    0x43eb91
  43ebb1:	icebp  
  43ebb2:	ss inc ebp
  43ebb4:	xchg   ecx,eax
  43ebb5:	mov    ch,cl
  43ebb7:	out    dx,al
  43ebb8:	ja     0x43eb52
  43ebba:	cdq    
  43ebbb:	xchg   ebp,eax
  43ebbc:	scas   eax,DWORD PTR es:[edi]
  43ebbd:	or     al,0x8
  43ebbf:	inc    DWORD PTR [ebx-0x7a5e0472]
  43ebc5:	pop    esp
  43ebc6:	test   DWORD PTR [esi],ecx
  43ebc8:	sub    eax,0x6fbc5029
  43ebcd:	jae    0x43ec39
  43ebcf:	call   0xe6422d33
  43ebd4:	mov    dl,0xba
  43ebd6:	rcr    BYTE PTR [ebx-0x7753cf1e],1
  43ebdc:	enter  0xe82c,0xbd
  43ebe0:	sub    ecx,DWORD PTR [ecx-0xad6b0ac]
  43ebe6:	inc    ebp
  43ebe7:	mov    fs,WORD PTR ds:[ebx+edx*4]
  43ebeb:	mov    BYTE PTR [edx-0x27bb3d25],bl
  43ebf1:	(bad)  
  43ebf3:	ret    
  43ebf4:	sbb    ah,BYTE PTR [edx-0x1f167507]
  43ebfa:	sub    eax,DWORD PTR [eiz*4+0x263ade07]
  43ec01:	mov    cl,0xaa
  43ec03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ec04:	sub    DWORD PTR [eax+0x54],ebx
  43ec07:	dec    edi
  43ec08:	dec    eax
  43ec09:	inc    eax
  43ec0a:	adc    edx,esp
  43ec0c:	sub    al,0xf1
  43ec0e:	cmp    al,0x8f
  43ec10:	push   0xc1a60e5
  43ec15:	fadd   DWORD PTR [ecx]
  43ec17:	dec    edi
  43ec18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ec19:	lahf   
  43ec1a:	rcl    DWORD PTR [edx+esi*8+0x2b3636d4],1
  43ec21:	enter  0x1461,0xc4
  43ec25:	mov    esi,0x72270770
  43ec2a:	aad    0xc0
  43ec2c:	dec    eax
  43ec2d:	adc    ch,BYTE PTR [esi]
  43ec2f:	imul   edx,edi,0x72
  43ec32:	push   edi
  43ec33:	inc    esp
  43ec34:	or     bh,BYTE PTR [edi-0x7a092aea]
  43ec3a:	mov    ds:0x8dee6a11,eax
  43ec3f:	or     DWORD PTR [edi-0x4e],esp
  43ec42:	mov    al,ds:0x4b5234b4
  43ec47:	add    edi,DWORD PTR [edi+eax*1-0x37660050]
  43ec4e:	and    al,0x27
  43ec50:	lods   al,BYTE PTR ds:[esi]
  43ec51:	dec    ebx
  43ec52:	rcl    DWORD PTR [ebx-0x29],0xc5
  43ec56:	imul   edi,DWORD PTR [ecx-0x6d154f1b],0xdb6c92d4
  43ec60:	imul   esi,DWORD PTR [edx+ecx*1+0x16],0x7c96dbeb
  43ec68:	sub    eax,0xc0886b56
  43ec6d:	add    DWORD PTR [ecx],ebp
  43ec6f:	les    esi,FWORD PTR [eax+0x2a06c028]
  43ec75:	add    DWORD PTR ds:[ebx+eax*8-0x1d],eax
  43ec7a:	sub    eax,0x6611c86c
  43ec7f:	ins    DWORD PTR es:[edi],dx
  43ec80:	push   es
  43ec81:	rol    DWORD PTR [eax],0xfe
  43ec84:	jmp    0x58ee2fb6
  43ec89:	pop    ebx
  43ec8a:	mov    ebx,0x141c85e8
  43ec8f:	sub    edi,ecx
  43ec91:	jmp    0xa9c04c1e
  43ec96:	or     edi,DWORD PTR [edx+0x43adc6c8]
  43ec9c:	inc    esp
  43ec9d:	ss cmp bh,bl
  43eca0:	ror    DWORD PTR [eax+0x16],cl
  43eca3:	shl    DWORD PTR [ebp+0x64d22317],cl
  43eca9:	div    ch
  43ecab:	das    
  43ecac:	out    0x16,al
  43ecae:	aam    0x29
  43ecb0:	(bad)  
  43ecb1:	xchg   edx,eax
  43ecb2:	jae    0x43ecb7
  43ecb4:	xor    ch,BYTE PTR [ebx]
  43ecb6:	pop    ecx
  43ecb7:	rol    BYTE PTR [edi],1
  43ecb9:	or     DWORD PTR [eax],ebx
  43ecbb:	mov    edx,0x8a62545f
  43ecc0:	inc    esp
  43ecc1:	arpl   WORD PTR [ecx],di
  43ecc3:	jle    0x43ec92
  43ecc5:	clc    
  43ecc6:	jg     0x43ed19
  43ecc8:	mov    al,ds:0x9f6d2361
  43eccd:	xor    eax,0x2ceee6c9
  43ecd2:	inc    edx
  43ecd3:	fsub   QWORD PTR [eax]
  43ecd5:	repz mov eax,0xe1cefa90
  43ecdb:	je     0x43ec63
  43ecdd:	in     eax,dx
  43ecde:	inc    esp
  43ecdf:	sub    DWORD PTR [edx-0x3b],ebx
  43ece2:	(bad)  
  43ece3:	(bad)  
  43ece4:	rcl    BYTE PTR [edx],cl
  43ece6:	leave  
  43ece7:	jmp    0xba561472
  43ecec:	push   ss
  43eced:	stc    
  43ecee:	inc    edi
  43ecef:	scas   eax,DWORD PTR es:[edi]
  43ecf0:	mov    edx,DWORD PTR [edi]
  43ecf2:	xchg   edi,eax
  43ecf3:	push   esp
  43ecf4:	fwait
  43ecf5:	lock jae 0x43ec94
  43ecf8:	fsub   DWORD PTR [ecx-0x22]
  43ecfb:	push   ss
  43ecfc:	jge    0x43ec8f
  43ecfe:	out    0x14,al
  43ed00:	sbb    DWORD PTR [esi],ecx
  43ed02:	loopne 0x43ecb0
  43ed04:	push   0xffffffdd
  43ed06:	xor    eax,DWORD PTR ds:0xf4a9e931
  43ed0c:	pop    esp
  43ed0d:	push   ss
  43ed0e:	out    0x90,eax
  43ed10:	in     al,dx
  43ed11:	and    al,0x1e
  43ed13:	jmp    0x2cdbdc22
  43ed18:	dec    ecx
  43ed19:	retf   
  43ed1a:	adc    eax,DWORD PTR [edx+0x28d0ac5a]
  43ed20:	mov    ah,0x16
  43ed22:	stos   DWORD PTR es:[edi],eax
  43ed23:	or     esi,edi
  43ed25:	cwde   
  43ed26:	pop    ebx
  43ed27:	push   edx
  43ed28:	fild   QWORD PTR [ecx+edx*2-0x16a02827]
  43ed2f:	push   ecx
  43ed30:	dec    DWORD PTR [esi]
  43ed32:	retf   
  43ed33:	lock jns 0x43ecb9
  43ed36:	push   ds
  43ed37:	add    al,0xc5
  43ed39:	aas    
  43ed3a:	in     al,dx
  43ed3b:	xor    eax,0xf5d405fe
  43ed40:	dec    edi
  43ed41:	xchg   ebx,eax
  43ed42:	enter  0x2b5e,0x6e
  43ed46:	push   es
  43ed47:	jno    0x43ed7b
  43ed49:	pop    ebp
  43ed4a:	(bad)  
  43ed4b:	sub    DWORD PTR [ebx],ebp
  43ed4d:	fbstp  TBYTE PTR [edi+0x59]
  43ed50:	pop    ebx
  43ed51:	push   esi
  43ed52:	add    al,0xfc
  43ed54:	hlt    
  43ed55:	rcl    BYTE PTR [ebx],cl
  43ed57:	jmp    0xe1b6a3de
  43ed5c:	mov    bl,0xca
  43ed5e:	mov    bl,0x7f
  43ed60:	es push ss
  43ed62:	adc    BYTE PTR [edx+0x23],0xb9
  43ed66:	sbb    eax,0x92341ecd
  43ed6b:	repz cmp al,0x3d
  43ed6e:	jnp    0x43ed67
  43ed70:	out    dx,eax
  43ed71:	xchg   BYTE PTR [esi],bl
  43ed73:	call   0x93e2:0xd3d8c892
  43ed7a:	mov    eax,eax
  43ed7c:	mov    al,0x93
  43ed7e:	inc    DWORD PTR [ecx-0x7b3e5ad8]
  43ed84:	mov    dh,BYTE PTR [edi+0x2220b872]
  43ed8a:	cmp    esi,DWORD PTR [ecx+eax*1+0x3cce2d60]
  43ed91:	and    al,0x61
  43ed93:	mov    bl,0xa8
  43ed95:	xor    esi,DWORD PTR [esp+esi*8-0x58]
  43ed99:	adc    edi,ebp
  43ed9b:	or     al,0x34
  43ed9d:	and    esi,ebp
  43ed9f:	dec    edi
  43eda0:	and    edi,DWORD PTR [edi+0x64]
  43eda3:	push   esp
  43eda4:	popa   
  43eda5:	jp     0x43ed51
  43eda7:	stos   DWORD PTR es:[edi],eax
  43eda8:	mov    ecx,0xf545e67d
  43edad:	add    al,0x24
  43edaf:	push   ebx
  43edb0:	sbb    BYTE PTR [ebx+0x585217dd],0x59
  43edb7:	je     0x43ed71
  43edb9:	pop    ebx
  43edba:	sbb    ecx,DWORD PTR [esi+ecx*4-0x3e]
  43edbe:	mov    dh,0x53
  43edc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43edc1:	int    0x34
  43edc3:	dec    edx
  43edc4:	arpl   WORD PTR [ebx],bx
  43edc6:	mov    cl,BYTE PTR [ecx]
  43edc8:	scas   eax,DWORD PTR es:[edi]
  43edc9:	add    edx,DWORD PTR cs:[ebx-0x40]
  43edcd:	in     eax,dx
  43edce:	rcl    ch,0xae
  43edd1:	(bad)  
  43edd2:	adc    al,0xd0
  43edd4:	mov    cl,0x93
  43edd6:	push   esp
  43edd7:	xor    eax,0x31daffd7
  43eddc:	iret   
  43eddd:	ret    0x3847
  43ede0:	dec    ecx
  43ede1:	add    ebx,DWORD PTR [eax+0x51]
  43ede4:	gs test al,0x54
  43ede7:	mov    cl,0x93
  43ede9:	(bad)  
  43edea:	sub    BYTE PTR [ebp-0x6a2cb5e0],dh
  43edf0:	xchg   ecx,eax
  43edf1:	in     eax,0x2a
  43edf3:	out    0x4c,eax
  43edf5:	jg     0x43eda3
  43edf7:	jecxz  0x43eda6
  43edf9:	sub    dh,cl
  43edfb:	mov    dh,0x4a
  43edfd:	fmul   st,st(7)
  43edff:	xchg   ch,cl
  43ee01:	loope  0x43ee3a
  43ee03:	iret   
  43ee04:	mov    edx,0x50e0720a
  43ee09:	mov    esp,0x3e31472d
  43ee0e:	int3   
  43ee0f:	pushw  0x42
  43ee12:	bound  edi,QWORD PTR [esi]
  43ee14:	jae    0x43ee66
  43ee16:	inc    eax
  43ee17:	(bad)  
  43ee18:	dec    ecx
  43ee19:	pop    ss
  43ee1a:	mov    ch,0x36
  43ee1c:	add    edx,DWORD PTR [ebx-0x5e]
  43ee1f:	xor    DWORD PTR [esi],esp
  43ee21:	dec    edi
  43ee22:	clc    
  43ee23:	xor    esi,DWORD PTR [edi+0x15ffa238]
  43ee29:	inc    ecx
  43ee2a:	test   DWORD PTR [esi],edi
  43ee2c:	rcl    DWORD PTR [ebp+0xf],1
  43ee2f:	inc    edi
  43ee30:	xchg   BYTE PTR [ebp+0x72],dh
  43ee33:	mov    esi,DWORD PTR [edx-0x1d0f275]
  43ee39:	sbb    ah,BYTE PTR [esi]
  43ee3b:	mov    ch,0x38
  43ee3d:	into   
  43ee3e:	add    dl,BYTE PTR [ecx-0x4b753b00]
  43ee44:	into   
  43ee45:	adc    edx,DWORD PTR [ebx+0x42]
  43ee48:	hlt    
  43ee49:	inc    edx
  43ee4a:	or     ah,ch
  43ee4c:	and    al,0x30
  43ee4e:	cmp    ebx,ebx
  43ee50:	push   es
  43ee51:	add    eax,esi
  43ee53:	mov    cs,WORD PTR [edx+0x59]
  43ee56:	adc    eax,0x5a7c5f8c
  43ee5b:	jns    0x43ee7f
  43ee5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ee5e:	and    al,0x48
  43ee60:	jecxz  0x43ee88
  43ee62:	lea    ebp,[ebx]
  43ee64:	push   0x139f2cd3
  43ee69:	daa    
  43ee6a:	push   ebp
  43ee6b:	mov    WORD PTR [edi+0x690905a5],es
  43ee71:	jbe    0x43eed1
  43ee73:	imul   ecx,DWORD PTR [ecx-0x33],0x2a
  43ee77:	mov    ds:0x5356918e,al
  43ee7c:	and    BYTE PTR [ecx-0x721410cc],0xd6
  43ee83:	leave  
  43ee84:	ret    
  43ee85:	push   ebp
  43ee86:	fbstp  TBYTE PTR [eax+0x26882699]
  43ee8c:	sbb    DWORD PTR [esp+ebx*4-0x4f],0x5eb438e5
  43ee94:	xchg   esp,eax
  43ee95:	add    BYTE PTR [ebx-0x39],bl
  43ee98:	lea    edx,[ecx+0x28537b11]
  43ee9e:	adc    al,0xce
  43eea0:	and    al,0xe9
  43eea2:	pop    esp
  43eea3:	arpl   WORD PTR [edi+0x19],si
  43eea6:	push   0xfffffff4
  43eea8:	dec    ecx
  43eea9:	push   eax
  43eeaa:	adc    DWORD PTR [ebx+edi*8-0x35],esp
  43eeae:	fst    DWORD PTR [edx]
  43eeb0:	add    eax,0x4eb68042
  43eeb5:	je     0x43eefc
  43eeb7:	test   BYTE PTR [edi-0x2ba9a1a5],0xc3
  43eebe:	std    
  43eebf:	outs   dx,DWORD PTR ds:[esi]
  43eec0:	ins    DWORD PTR es:[edi],dx
  43eec1:	pusha  
  43eec2:	enter  0xe7a3,0x1b
  43eec6:	mov    BYTE PTR [eax-0x35],bl
  43eec9:	cmova  esp,DWORD PTR [edx+0x3b]
  43eecd:	push   eax
  43eece:	jb     0x43ef32
  43eed0:	mov    edx,0x7d082a5b
  43eed5:	rcr    BYTE PTR [ebp*8+0x848dd74],1
  43eedc:	repnz sub ebx,DWORD PTR [edi+0x4ea20df0]
  43eee3:	aad    0xc4
  43eee5:	jg     0x43eeb5
  43eee7:	les    eax,FWORD PTR [edi]
  43eee9:	out    0x63,eax
  43eeeb:	(bad)  
  43eeec:	push   ss
  43eeed:	stc    
  43eeee:	in     al,dx
  43eeef:	pop    edi
  43eef0:	inc    esp
  43eef1:	cmp    DWORD PTR [ecx],edx
  43eef3:	loop   0x43ee97
  43eef5:	fwait
  43eef6:	sbb    ebp,ebx
  43eef8:	adc    al,0x48
  43eefa:	lds    ecx,FWORD PTR cs:[ebp+ebx*4+0x18]
  43eeff:	repnz repnz push esp
  43ef02:	lods   al,BYTE PTR ds:[esi]
  43ef03:	out    0x80,al
  43ef05:	jp     0x43ef74
  43ef07:	(bad)  
  43ef08:	mov    ss,ecx
  43ef0a:	mov    ebp,0xe35f7b1e
  43ef0f:	pop    es
  43ef10:	pushw  ds
  43ef12:	sahf   
  43ef13:	sbb    eax,0x1c89c0a4
  43ef18:	and    al,0xc0
  43ef1a:	jbe    0x43eefb
  43ef1c:	dec    ecx
  43ef1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ef1e:	cmp    al,0xe6
  43ef20:	pop    ebx
  43ef21:	adc    DWORD PTR [ebp+0x7cf936ae],0xffffff95
  43ef28:	jbe    0x43efa0
  43ef2a:	xchg   esp,eax
  43ef2b:	call   0x996d117c
  43ef30:	sar    DWORD PTR [eax-0x446eba67],0xca
  43ef37:	clc    
  43ef38:	mov    cs,WORD PTR [edx-0x7c434b54]
  43ef3e:	xchg   DWORD PTR [esi-0x75],ebp
  43ef41:	jecxz  0x43eedc
  43ef43:	pop    ebp
  43ef44:	stc    
  43ef45:	sbb    ah,BYTE PTR [eax]
  43ef47:	push   ss
  43ef48:	or     al,0xcf
  43ef4a:	pop    ss
  43ef4b:	stos   DWORD PTR es:[edi],eax
  43ef4c:	lods   al,BYTE PTR ds:[esi]
  43ef4d:	jne    0x43ef76
  43ef4f:	cmp    cl,bh
  43ef51:	test   BYTE PTR ss:[edx],0x15
  43ef55:	test   edi,esp
  43ef57:	aaa    
  43ef58:	xchg   BYTE PTR [ebx+edi*1+0x1979db7d],bh
  43ef5f:	(bad)  
  43ef60:	mov    ebx,0xdd4563ca
  43ef65:	sbb    eax,0x2dad2085
  43ef6a:	in     eax,0x6d
  43ef6c:	fwait
  43ef6d:	rcr    BYTE PTR [ecx-0x26],cl
  43ef70:	addr16 jo 0x43ef03
  43ef73:	mov    edi,0x8135489b
  43ef78:	pop    eax
  43ef79:	clc    
  43ef7a:	add    al,0xf9
  43ef7c:	retf   0x5233
  43ef7f:	mov    esp,0x94955e8f
  43ef84:	fistp  DWORD PTR [edx-0x1e]
  43ef87:	sub    ebx,eax
  43ef89:	in     al,dx
  43ef8a:	and    eax,DWORD PTR [ecx]
  43ef8c:	dec    esp
  43ef8d:	aad    0x1c
  43ef8f:	scas   eax,DWORD PTR es:[edi]
  43ef90:	retf   
  43ef91:	stos   BYTE PTR es:[edi],al
  43ef92:	lds    ebx,FWORD PTR [eax+0x9bae98]
  43ef98:	mov    ds:0x6d1eade,eax
  43ef9d:	mov    cl,0x1c
  43ef9f:	div    DWORD PTR [edx]
  43efa1:	inc    esi
  43efa2:	and    eax,0x5abfb9d6
  43efa7:	in     al,0x51
  43efa9:	jl     0x43efc9
  43efab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43efac:	sub    eax,0xb9aa542b
  43efb1:	stos   DWORD PTR es:[edi],eax
  43efb2:	mov    DWORD PTR [edx-0xc],eax
  43efb5:	lds    esp,FWORD PTR [ecx]
  43efb7:	loopne 0x43f00b
  43efb9:	mov    bl,0xb9
  43efbb:	fisttp WORD PTR [ebx+0x1f4fbf81]
  43efc1:	fcmovne st,st(6)
  43efc3:	xlat   BYTE PTR ds:[ebx]
  43efc4:	aad    0xe2
  43efc6:	cmp    eax,DWORD PTR [ecx+ebp*2+0x7d58e37e]
  43efcd:	mov    BYTE PTR [ecx+edi*8-0x4b],0x41
  43efd2:	out    0x24,eax
  43efd4:	push   0x65b93134
  43efd9:	jne    0x43f039
  43efdb:	std    
  43efdc:	pushf  
  43efdd:	hlt    
  43efde:	push   ecx
  43efdf:	jmp    0x63cd:0x7bd0b980
  43efe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43efe7:	inc    edx
  43efe8:	or     ecx,DWORD PTR [eax+0x63b53a11]
  43efee:	dec    si
  43eff0:	pusha  
  43eff1:	jo     0x43ef84
  43eff3:	repz add BYTE PTR [ecx-0x19],bl
  43eff7:	cmp    dl,ch
  43eff9:	or     al,0x6e
  43effb:	push   0x4f00eebf
  43f000:	xchg   al,cl
  43f002:	(bad)  
  43f003:	adc    BYTE PTR [edx+ecx*1+0x54],dl
  43f007:	cwde   
  43f008:	sub    DWORD PTR ds:0x33406498,0xc474b1f3
  43f012:	jl     0x43f07b
  43f014:	push   esi
  43f015:	pop    edi
  43f016:	add    ch,BYTE PTR [ecx+0x1f]
  43f019:	add    eax,0x19e701e2
  43f01e:	xchg   DWORD PTR [ebx],edi
  43f020:	push   esp
  43f021:	aas    
  43f022:	fsubp  st(4),st
  43f024:	push   esi
  43f025:	add    eax,0x21e0abcb
  43f02a:	cmp    BYTE PTR [esi-0x5f],bh
  43f02d:	add    dl,BYTE PTR [ecx+0x419c8aec]
  43f033:	addr16 data16 loope 0x43efef
  43f037:	imul   esi,esp,0x79a1e352
  43f03d:	out    0x77,eax
  43f03f:	sub    BYTE PTR [ecx+0x64],0xf7
  43f043:	add    eax,0x53406884
  43f048:	mov    ecx,0x41c02eaa
  43f04d:	push   ebx
  43f04e:	lds    esp,FWORD PTR [ebx]
  43f050:	mov    ecx,0x2d226ddc
  43f055:	cld    
  43f056:	loopne 0x43f0a5
  43f058:	xchg   esi,eax
  43f05a:	pusha  
  43f05b:	(bad)  
  43f05c:	adc    al,0xb4
  43f05e:	pop    ss
  43f05f:	xchg   esp,eax
  43f060:	scas   eax,DWORD PTR es:[edi]
  43f061:	push   edi
  43f062:	dec    ebp
  43f063:	retf   
  43f064:	push   ebx
  43f065:	xchg   esp,eax
  43f066:	jo     0x43f0b2
  43f068:	retf   0xf6e4
  43f06b:	mov    ebx,0xc267277c
  43f070:	fsub   QWORD PTR [esi]
  43f072:	into   
  43f073:	cdq    
  43f074:	push   ss
  43f075:	dec    ebp
  43f076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f077:	inc    edi
  43f078:	dec    ebp
  43f079:	and    DWORD PTR [ecx+ecx*8],ebx
  43f07c:	push   esp
  43f07d:	lods   al,BYTE PTR ds:[esi]
  43f07e:	xor    BYTE PTR [edx],0x80
  43f081:	lahf   
  43f082:	or     BYTE PTR [edi],bl
  43f084:	xor    bl,BYTE PTR [esi-0x2398cd7f]
  43f08a:	aam    0x44
  43f08c:	jmp    0x1383:0x3f4f3b19
  43f093:	ret    
  43f094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f095:	inc    esp
  43f096:	lds    ecx,FWORD PTR [ebp+eax*1-0x6d]
  43f09a:	popf   
  43f09b:	pop    esp
  43f09c:	div    BYTE PTR [ebx-0x15a1522e]
  43f0a2:	push   cs
  43f0a3:	lods   al,BYTE PTR ds:[esi]
  43f0a4:	shl    ah,cl
  43f0a6:	and    BYTE PTR [edx],0xa4
  43f0a9:	mov    fs,WORD PTR ds:0xacea49f8
  43f0af:	in     eax,0xb
  43f0b1:	jbe    0x43f03a
  43f0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f0b4:	sub    DWORD PTR [esi-0x1c5abd99],0xffffff96
  43f0bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f0bc:	in     eax,0xd4
  43f0be:	sub    dh,cl
  43f0c0:	retf   0x743
  43f0c3:	mov    edi,0xbd09ca60
  43f0c8:	pop    edx
  43f0c9:	retf   0x5d1c
  43f0cc:	sub    esp,DWORD PTR [esi+eax*1+0x4e32ea00]
  43f0d3:	push   esp
  43f0d4:	mov    al,ds:0x603cfac1
  43f0d9:	nop
  43f0da:	sahf   
  43f0db:	cmp    eax,0x8cd2c254
  43f0e0:	xor    cl,BYTE PTR [ebx+eiz*4-0xeb8f947]
  43f0e7:	cdq    
  43f0e8:	push   es
  43f0e9:	retf   0x769
  43f0ec:	sbb    eax,0x34684081
  43f0f1:	jb     0x43f084
  43f0f3:	(bad)  
  43f0f4:	jo     0x43f0e1
  43f0f6:	(bad)  
  43f0f7:	mov    ebx,0x37be9425
  43f0fc:	pop    eax
  43f0fd:	and    DWORD PTR [ecx+esi*1-0x14d4b814],esi
  43f104:	ret    
  43f105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f106:	xchg   edx,eax
  43f107:	cdq    
  43f108:	(bad)  
  43f109:	sti    
  43f10a:	cdq    
  43f10b:	dec    eax
  43f10c:	pusha  
  43f10d:	mov    al,ds:0xb08e0ba2
  43f112:	jmp    FWORD PTR [ebx+0x5e]
  43f115:	mov    ch,0xe3
  43f117:	sub    dl,ah
  43f119:	hlt    
  43f11a:	ja     0x43f0a0
  43f11c:	xchg   BYTE PTR [ebx+esi*8+0x66a23d4e],al
  43f123:	call   0x6535eec3
  43f128:	leave  
  43f129:	loope  0x43f114
  43f12b:	xor    BYTE PTR [edi+0x16],ah
  43f12e:	and    DWORD PTR [edi],edx
  43f130:	mov    ch,0xf4
  43f132:	and    al,0x18
  43f134:	xchg   edi,eax
  43f135:	mov    al,0x26
  43f137:	dec    eax
  43f138:	mov    esi,DWORD PTR [esi]
  43f13a:	aad    0x63
  43f13c:	fs push ds
  43f13e:	in     eax,dx
  43f13f:	mov    cl,0x99
  43f141:	jle    0x43f0cc
  43f143:	pop    ebx
  43f144:	lds    edx,FWORD PTR [ecx+0x36]
  43f147:	cmc    
  43f148:	or     esp,DWORD PTR [eax]
  43f14a:	stc    
  43f14b:	jbe    0x43f176
  43f14d:	inc    ebp
  43f14e:	dec    ebx
  43f14f:	or     ecx,ecx
  43f151:	mov    ds:0xe6d429e,eax
  43f156:	push   ss
  43f157:	fadd   DWORD PTR [esi-0x4e87034c]
  43f15d:	sbb    esi,ebp
  43f15f:	mov    al,ds:0xed311b2f
  43f164:	pop    edi
  43f165:	in     eax,dx
  43f166:	clc    
  43f167:	pushf  
  43f168:	sub    eax,DWORD PTR [edx+0x5200259]
  43f16e:	int3   
  43f16f:	adc    BYTE PTR [edi],dh
  43f171:	(bad)  
  43f172:	and    eax,0x2625e470
  43f177:	pop    ebp
  43f178:	shr    BYTE PTR [edx],0xf0
  43f17b:	pop    es
  43f17c:	fcom   DWORD PTR [edi]
  43f17e:	nop
  43f17f:	dec    edi
  43f180:	adc    BYTE PTR [ebx-0x57],al
  43f183:	or     al,0x89
  43f185:	add    eax,DWORD PTR [edx+0x75cd1a8d]
  43f18b:	pop    eax
  43f18c:	enter  0x5748,0x5a
  43f190:	sub    ebp,DWORD PTR [edx-0x55]
  43f193:	dec    edx
  43f194:	push   ebx
  43f195:	fild   DWORD PTR [ecx-0x80]
  43f198:	jg     0x43f20d
  43f19a:	cli    
  43f19b:	stos   BYTE PTR es:[edi],al
  43f19c:	or     eax,0x35a7e998
  43f1a1:	lods   eax,DWORD PTR ds:[esi]
  43f1a2:	imul   edx,eax,0xffffffe2
  43f1a5:	lea    esp,[edx-0x5d]
  43f1a8:	fwait
  43f1a9:	mov    dl,0x81
  43f1ab:	fmul   QWORD PTR [eax-0x42cfe8e]
  43f1b1:	popa   
  43f1b2:	mov    bh,0xe3
  43f1b4:	in     al,0x2
  43f1b6:	and    DWORD PTR [edx],ebp
  43f1b8:	cmp    ah,BYTE PTR [esi+0xbc33b8f]
  43f1be:	adc    BYTE PTR [esi+0x431c10d4],dh
  43f1c4:	mov    dh,0x9c
  43f1c6:	xchg   edx,eax
  43f1c7:	pop    ss
  43f1c8:	xchg   esp,eax
  43f1c9:	cld    
  43f1ca:	aas    
  43f1cb:	sahf   
  43f1cc:	jmp    0x2a66d142
  43f1d1:	fsubr  QWORD PTR [edx+0x9]
  43f1d4:	mov    edi,ecx
  43f1d6:	xor    eax,0x9533ad04
  43f1db:	or     BYTE PTR [edx+0x67ba728f],cl
  43f1e1:	jae    0x43f17d
  43f1e3:	xchg   ecx,eax
  43f1e4:	push   eax
  43f1e5:	outs   dx,DWORD PTR ds:[esi]
  43f1e6:	aas    
  43f1e7:	out    dx,eax
  43f1e8:	inc    esp
  43f1e9:	test   eax,0xc06bf619
  43f1ee:	pop    es
  43f1ef:	cmp    ecx,DWORD PTR [edx+0x64]
  43f1f2:	sbb    al,0x31
  43f1f4:	sbb    bl,BYTE PTR [ebp+eax*8+0x5a]
  43f1f8:	pushf  
  43f1f9:	push   0x39
  43f1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f1fc:	push   cs
  43f1fd:	(bad)  
  43f1fe:	mov    eax,0x39abf768
  43f203:	mov    DWORD PTR [esi],edi
  43f205:	xor    BYTE PTR [ebp+0x5eb1a54],0x78
  43f20c:	popa   
  43f20d:	rol    DWORD PTR [ecx-0x69],cl
  43f210:	stc    
  43f211:	xchg   dh,dl
  43f213:	les    esp,FWORD PTR [esi]
  43f215:	dec    ecx
  43f216:	(bad)  
  43f217:	adc    dl,dh
  43f219:	(bad)  
  43f21a:	imul   eax,DWORD PTR [edx+esi*1+0x174a4870],0x3fa08bf2
  43f225:	enter  0x38a4,0xe5
  43f229:	les    eax,FWORD PTR [ebx]
  43f22b:	cs add eax,0x3e124d47
  43f231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f232:	jg     0x43f21b
  43f234:	out    dx,eax
  43f235:	cs nop
  43f237:	cmc    
  43f238:	jmp    0xe9708194
  43f23d:	aam    0x1
  43f23f:	lahf   
  43f240:	jne    0x43f22d
  43f242:	push   es
  43f243:	adc    dl,BYTE PTR [edi+eiz*8]
  43f246:	push   edx
  43f247:	clc    
  43f248:	mov    edx,ecx
  43f24a:	and    al,0x9c
  43f24c:	enter  0xc62e,0xeb
  43f250:	sub    ebp,eax
  43f252:	ror    BYTE PTR [edi+0x17],0xdd
  43f256:	xchg   DWORD PTR [ebx-0xf],edi
  43f259:	add    sp,WORD PTR [edx+eiz*2+0x5f]
  43f25e:	mov    esp,0x90f9b380
  43f263:	push   ss
  43f264:	xor    ebp,DWORD PTR [esi+0x349a7f72]
  43f26a:	cmp    eax,0xd9b2ab5c
  43f26f:	test   al,0xc2
  43f271:	mov    ah,0x67
  43f273:	adc    al,0x56
  43f275:	pop    esp
  43f277:	pop    esp
  43f278:	test   esp,esi
  43f27a:	test   al,0xa2
  43f27c:	(bad)  
  43f27d:	xor    DWORD PTR [eax-0x3f7e7438],edi
  43f283:	rcl    BYTE PTR [eax-0x3b28b6a2],cl
  43f289:	dec    esi
  43f28a:	cmp    DWORD PTR [edi],esp
  43f28c:	adc    edi,edx
  43f28e:	pop    edx
  43f28f:	mov    esi,cs
  43f291:	jns    0x43f27c
  43f293:	xchg   BYTE PTR [ebx],al
  43f295:	gs loop 0x43f2d7
  43f298:	call   0xb77d:0x9e2abdbd
  43f29f:	xchg   DWORD PTR [ecx+0x6caeeb28],edi
  43f2a5:	and    ebp,DWORD PTR [eax]
  43f2a7:	pop    es
  43f2a8:	(bad)  
  43f2a9:	mov    eax,ds:0xbaba027b
  43f2ae:	es (bad) 
  43f2b1:	ss test al,0x85
  43f2b4:	clc    
  43f2b5:	jecxz  0x43f335
  43f2b7:	dec    eax
  43f2b8:	push   ebx
  43f2b9:	stos   DWORD PTR es:[edi],eax
  43f2ba:	shl    BYTE PTR [edx-0x2b7eb92b],cl
  43f2c0:	ret    
  43f2c1:	dec    edi
  43f2c2:	sti    
  43f2c3:	bound  esp,QWORD PTR ds:0x8ed176ca
  43f2c9:	mov    ?,esi
  43f2cb:	enter  0x3fbe,0x35
  43f2cf:	or     bl,cl
  43f2d1:	retf   0xce0c
  43f2d4:	xchg   ebp,eax
  43f2d5:	sbb    cl,ah
  43f2d7:	xchg   BYTE PTR [ebx+0x77],ch
  43f2da:	xchg   esp,eax
  43f2db:	jmp    0xbba0ecd9
  43f2e0:	and    dl,BYTE PTR [edi+0x14]
  43f2e3:	jmp    0x670c:0xbcb82896
  43f2ea:	cli    
  43f2eb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f2ed:	and    al,0xdc
  43f2ef:	sub    eax,0xef99fd66
  43f2f4:	cmp    BYTE PTR [ebp-0x56],dl
  43f2f7:	icebp  
  43f2f8:	out    0xda,eax
  43f2fa:	add    eax,0x8f853a9e
  43f2ff:	ret    0x1132
  43f302:	std    
  43f303:	push   0x3d01a53f
  43f308:	pop    esi
  43f309:	xchg   edi,eax
  43f30a:	fstp   TBYTE PTR [ecx-0x57]
  43f30d:	sub    BYTE PTR [ebp-0x30],0x59
  43f311:	pusha  
  43f312:	pop    esi
  43f313:	imul   eax,eax,0x26245a6a
  43f319:	push   esp
  43f31a:	es mov dh,0x88
  43f31d:	loop   0x43f325
  43f31f:	inc    esp
  43f320:	out    dx,eax
  43f321:	sbb    BYTE PTR [esi-0x6c44aa41],ch
  43f327:	mov    ds:0xa062b00b,al
  43f32c:	inc    ebp
  43f32d:	pop    esi
  43f32e:	push   ebp
  43f32f:	mov    esi,0x3e451c66
  43f334:	adc    al,0x4e
  43f336:	mov    ch,0x58
  43f338:	out    0x1,al
  43f33a:	adc    eax,0x601cf336
  43f33f:	arpl   WORD PTR [edi+0x63],bp
  43f342:	xrelease xchg WORD PTR [eax+0x54a4c19a],si
  43f34a:	sbb    bl,BYTE PTR [esi]
  43f34c:	or     DWORD PTR ss:[ecx-0x5b],edi
  43f350:	nop    DWORD PTR [edx]
  43f353:	loope  0x43f385
  43f355:	call   0xd4e5c94
  43f35a:	lahf   
  43f35b:	aaa    
  43f35c:	pop    edx
  43f35d:	mov    dh,0x5
  43f35f:	xchg   esp,eax
  43f360:	fidiv  WORD PTR [ebx+0x28]
  43f363:	(bad)  
  43f364:	mov    eax,0x3e47ff44
  43f369:	jb     0x43f338
  43f36b:	cmp    DWORD PTR [ecx+edi*1-0x6c],esp
  43f36f:	fcomp  QWORD PTR [eax-0x17]
  43f372:	inc    edx
  43f373:	mov    ebx,esp
  43f375:	and    eax,eax
  43f377:	or     ecx,DWORD PTR ss:[ebx+ebx*2]
  43f37b:	(bad)  
  43f37c:	push   esi
  43f37d:	sub    dl,BYTE PTR [ebx+0x2ae1ead2]
  43f383:	cdq    
  43f384:	pop    ds
  43f385:	arpl   WORD PTR [ecx],dx
  43f387:	sub    ebx,eax
  43f389:	fwait
  43f38a:	js     0x43f39d
  43f38c:	and    al,0x6b
  43f38e:	cmc    
  43f38f:	adc    DWORD PTR [edx-0x79ad31e6],ecx
  43f395:	aaa    
  43f396:	(bad)  
  43f397:	mov    ebp,0x2fb773cc
  43f39c:	push   ds
  43f39d:	pop    eax
  43f39e:	dec    ebp
  43f39f:	push   ecx
  43f3a0:	imul   esp,esp,0x1167f00e
  43f3a6:	or     BYTE PTR ds:0x8720feb2,cl
  43f3ac:	sbb    al,0xa8
  43f3ae:	push   esi
  43f3af:	jecxz  0x43f34c
  43f3b1:	int    0x52
  43f3b3:	in     al,0x2b
  43f3b5:	fst    QWORD PTR [ebp-0x5d]
  43f3b8:	or     al,0xa6
  43f3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3bb:	nop
  43f3bc:	mov    edi,0xa8975518
  43f3c1:	adc    ch,BYTE PTR [edx+0x14]
  43f3c4:	out    dx,eax
  43f3c5:	cmp    dl,BYTE PTR [ebp-0x32]
  43f3c8:	in     eax,0x58
  43f3ca:	sub    eax,0xa245f1da
  43f3cf:	mov    dl,bh
  43f3d1:	ret    
  43f3d2:	rcl    BYTE PTR [ebx],0xec
  43f3d5:	sub    esp,esi
  43f3d7:	inc    ebx
  43f3d8:	dec    ebx
  43f3d9:	jno    0x43f3fc
  43f3db:	outs   dx,BYTE PTR ds:[esi]
  43f3dc:	push   ds
  43f3dd:	mov    bh,0x2e
  43f3df:	iret   
  43f3e0:	xchg   ebx,eax
  43f3e1:	mov    ebx,0x52e0765b
  43f3e6:	sub    BYTE PTR [ebx-0x1d],cl
  43f3e9:	jne    0x43f393
  43f3eb:	sub    DWORD PTR [ecx+0x27],ebp
  43f3ee:	sub    BYTE PTR [edx-0xa],al
  43f3f1:	jnp    0x43f447
  43f3f3:	das    
  43f3f4:	dec    esp
  43f3f5:	imul   ebp,DWORD PTR [ebp-0x7ebbf9d5],0x4030c08c
  43f3ff:	ds and dh,bl
  43f402:	(bad)  
  43f403:	pop    ds
  43f404:	mov    BYTE PTR [edx],bl
  43f406:	sub    al,0xa4
  43f408:	popf   
  43f409:	and    ebp,DWORD PTR [eax-0x3a]
  43f40c:	push   edi
  43f40d:	ins    BYTE PTR es:[edi],dx
  43f40e:	xor    eax,0x695737d2
  43f413:	dec    esi
  43f414:	pop    edx
  43f415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f416:	pop    edi
  43f417:	lods   eax,DWORD PTR ds:[esi]
  43f418:	mov    ebx,0x70939874
  43f41d:	and    esp,DWORD PTR [ebp+0x4420d0e7]
  43f423:	enter  0xd826,0x25
  43f427:	jecxz  0x43f466
  43f429:	je     0x43f439
  43f42b:	xor    bh,BYTE PTR [eax-0x25478805]
  43f431:	mov    DWORD PTR [ebx+0x60df0c4],ebp
  43f437:	sbb    eax,edi
  43f439:	pop    edi
  43f43a:	loop   0x43f43d
  43f43c:	sub    eax,0xfd417406
  43f441:	xchg   ebp,eax
  43f442:	mov    ch,0x5b
  43f444:	pop    ebp
  43f445:	jnp    0x43f40b
  43f447:	fcom   DWORD PTR [esi]
  43f449:	cmp    eax,0x68432035
  43f44e:	add    al,0x33
  43f450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f451:	cmp    al,0x7
  43f453:	stos   BYTE PTR es:[edi],al
  43f454:	stc    
  43f455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f456:	(bad)  [ebx]
  43f458:	xor    DWORD PTR [esi+0x2a9a57bd],ebp
  43f45e:	sub    al,0xb3
  43f460:	and    dl,BYTE PTR [edi]
  43f462:	adc    bl,BYTE PTR [esp+ebx*4]
  43f465:	jmp    0xd1325c9d
  43f46a:	into   
  43f46b:	aam    0x20
  43f46d:	jmp    0xe3d8c292
  43f472:	aaa    
  43f473:	in     al,0xe3
  43f475:	(bad)  
  43f477:	addr16 and ebp,eax
  43f47a:	aaa    
  43f47b:	nop
  43f47c:	ret    
  43f47d:	jnp    0x43f4e9
  43f47f:	stos   DWORD PTR es:[edi],eax
  43f480:	clc    
  43f481:	(bad)  
  43f482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f483:	xor    al,0x37
  43f485:	fstp   QWORD PTR [edx-0x61]
  43f488:	sti    
  43f489:	test   al,0xa4
  43f48b:	dec    esp
  43f48c:	mov    ?,esi
  43f48e:	ins    BYTE PTR es:[edi],dx
  43f48f:	push   eax
  43f490:	rol    eax,1
  43f492:	adc    DWORD PTR [esi+0x1b580d50],0x44
  43f499:	pushf  
  43f49a:	and    DWORD PTR [edx-0x9],esp
  43f49d:	jbe    0x43f48a
  43f49f:	dec    ecx
  43f4a0:	and    bl,BYTE PTR [edi]
  43f4a2:	mov    bl,0xc8
  43f4a4:	jmp    0x7b70:0x29fd8776
  43f4ab:	adc    bl,ch
  43f4ad:	sti    
  43f4ae:	cli    
  43f4af:	sub    ah,BYTE PTR [edi-0x6f]
  43f4b2:	mov    BYTE PTR [ebx-0x38d0a5ae],dl
  43f4b8:	cmp    eax,0x66f23ea
  43f4bd:	(bad)  
  43f4be:	xor    al,0x66
  43f4c0:	push   ebp
  43f4c1:	sub    BYTE PTR [ebp+0x7a],dl
  43f4c4:	js     0x43f46c
  43f4c6:	jae    0x43f4c3
  43f4c8:	bound  ecx,QWORD PTR [edi+0x33d3ecef]
  43f4ce:	jp     0x43f466
  43f4d0:	repz xchg ecx,eax
  43f4d2:	loope  0x43f4cd
  43f4d4:	aad    0x1b
  43f4d6:	(bad)  
  43f4d7:	sbb    ah,BYTE PTR ds:0x670ccb1f
  43f4dd:	fdivr  QWORD PTR [edi+0xb]
  43f4e0:	pushf  
  43f4e1:	ds lahf 
  43f4e3:	and    al,0x78
  43f4e5:	or     DWORD PTR [edx+0x5cbaa6cd],0x67
  43f4ec:	mov    ds:0xfe1eebf0,al
  43f4f1:	popf   
  43f4f2:	aaa    
  43f4f3:	mov    dl,0x67
  43f4f5:	push   es
  43f4f6:	retf   
  43f4f7:	out    dx,al
  43f4f8:	cwde   
  43f4f9:	cwde   
  43f4fa:	pop    esp
  43f4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f4fc:	push   ebx
  43f4fd:	jb     0x43f4dd
  43f4ff:	adc    DWORD PTR [ecx],ebx
  43f501:	out    dx,eax
  43f502:	shl    DWORD PTR [ebx+0x16],1
  43f505:	xchg   edi,eax
  43f506:	add    dl,BYTE PTR [eax+0x350165cf]
  43f50c:	sub    cl,al
  43f50e:	imul   ebp,DWORD PTR [esi*2-0x7faa0d42],0x33
  43f516:	(bad)  
  43f517:	xor    DWORD PTR gs:[edx],ebp
  43f51a:	dec    ebp
  43f51b:	int    0x9b
  43f51d:	pop    es
  43f51e:	jb     0x43f516
  43f520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f521:	inc    ebx
  43f522:	aad    0x19
  43f524:	sbb    bh,BYTE PTR [edx+ebp*4-0x1667e610]
  43f52b:	pop    edx
  43f52c:	gs mov cl,0x66
  43f52f:	xchg   esi,eax
  43f530:	fwait
  43f531:	jmp    0xfb8e:0xc923372
  43f538:	jmp    0x43f4f9
  43f53a:	xchg   ebp,eax
  43f53b:	ret    
  43f53c:	sbb    esi,DWORD PTR [ecx]
  43f53e:	jnp    0x43f58c
  43f540:	outs   dx,DWORD PTR ds:[esi]
  43f541:	stos   DWORD PTR es:[edi],eax
  43f542:	test   eax,0x22aa5307
  43f547:	xchg   esi,eax
  43f548:	jmp    0xc9d19075
  43f54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f54e:	clc    
  43f54f:	loop   0x43f4d6
  43f551:	or     BYTE PTR ss:[eax],bh
  43f554:	ret    0xfbe6
  43f557:	push   ds
  43f558:	ja     0x43f568
  43f55a:	mov    DWORD PTR [eax+0x27],ebp
  43f55d:	dec    edi
  43f55e:	repz add BYTE PTR [edi],bh
  43f561:	das    
  43f562:	adc    esi,ebx
  43f564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f565:	out    0xf9,eax
  43f567:	add    dh,al
  43f569:	(bad)  
  43f56a:	in     al,0x8e
  43f56c:	aas    
  43f56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f56e:	adc    BYTE PTR [eax],al
  43f570:	sub    esp,edi
  43f572:	xor    BYTE PTR [esi],dh
  43f574:	int    0xf6
  43f576:	push   esp
  43f577:	inc    edx
  43f578:	sbb    eax,0x3d79766
  43f57d:	shl    BYTE PTR [ebx-0x61],0x96
  43f581:	sub    al,0xd9
  43f583:	mov    ds:0x34a45f0c,eax
  43f588:	sbb    BYTE PTR [esi],dl
  43f58a:	fstp   DWORD PTR [edx+0x59]
  43f58d:	call   0xc7c3:0x389f0ed2
  43f594:	pop    es
  43f595:	std    
  43f596:	adc    ecx,DWORD PTR [esi]
  43f598:	or     ch,cl
  43f59a:	mov    ds,WORD PTR [ebx+0x61]
  43f59d:	imul   edx,DWORD PTR [edx],0xffffff99
  43f5a0:	pushf  
  43f5a1:	aad    0x37
  43f5a3:	leave  
  43f5a4:	scas   eax,DWORD PTR es:[edi]
  43f5a5:	push   edi
  43f5a6:	or     ecx,DWORD PTR [ebp-0x6f]
  43f5a9:	jno    0x43f597
  43f5ab:	call   0x139cbccd
  43f5b0:	xchg   ebp,eax
  43f5b1:	in     al,dx
  43f5b2:	push   es
  43f5b3:	jge    0x43f5d7
  43f5b5:	push   ebp
  43f5b6:	sbb    ebx,DWORD PTR [edx+0x3c26536]
  43f5bc:	outs   dx,BYTE PTR ds:[esi]
  43f5bd:	(bad)  
  43f5be:	sbb    esi,0xffffff9a
  43f5c1:	push   ecx
  43f5c2:	(bad)  
  43f5c3:	cmp    cl,ch
  43f5c5:	xchg   esi,eax
  43f5c6:	or     DWORD PTR [ebx],ebx
  43f5c8:	out    dx,eax
  43f5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f5ca:	out    0x29,al
  43f5cc:	xchg   ebp,ebx
  43f5ce:	xlat   BYTE PTR ds:[ebx]
  43f5cf:	mov    dl,0xb6
  43f5d1:	ds sbb bl,ch
  43f5d4:	mov    ecx,0x61b3d2b5
  43f5d9:	pop    edi
  43f5da:	mov    cl,0xb5
  43f5dc:	daa    
  43f5dd:	das    
  43f5de:	mov    BYTE PTR [esi],dl
  43f5e0:	mov    ebp,0x3adcb792
  43f5e5:	loop   0x43f5a1
  43f5e7:	sub    al,0xc2
  43f5e9:	push   esi
  43f5ea:	rol    DWORD PTR [edi-0x51],cl
  43f5ed:	xor    eax,0x30605315
  43f5f2:	cs ins BYTE PTR es:[edi],dx
  43f5f4:	or     BYTE PTR [ebx+0xe203736],0xe8
  43f5fb:	mov    eax,ds:0x53c31833
  43f600:	mov    bl,0x6f
  43f602:	pop    ds
  43f603:	dec    ebx
  43f604:	or     eax,DWORD PTR [ebx-0x78b0a8a1]
  43f60a:	aad    0x3d
  43f60c:	cld    
  43f60d:	sub    DWORD PTR [ebp-0x57],0xffffffee
  43f611:	dec    ebp
  43f612:	mov    eax,0xb1773eb7
  43f617:	sbb    esi,DWORD PTR [edx+0x28e1e95e]
  43f61d:	repz sbb esp,DWORD PTR [eax+ecx*1]
  43f621:	imul   eax,esi,0xfffffff9
  43f624:	jg     0x43f5e1
  43f626:	inc    ecx
  43f627:	or     DWORD PTR [eax-0x6287bbcb],0xffffffdf
  43f62e:	jb     0x43f682
  43f630:	das    
  43f631:	frstor [edi+eiz*8+0x4f]
  43f635:	mov    esp,0xb095a676
  43f63a:	inc    eax
  43f63b:	mov    ds:0xcab2fc17,al
  43f640:	je     0x43f631
  43f642:	sub    ah,0x91
  43f645:	inc    esi
  43f646:	gs pop esp
  43f648:	sub    ebp,eax
  43f64a:	std    
  43f64b:	cmp    eax,DWORD PTR [bp+si-0x77cc]
  43f650:	mov    esi,0x3456a2dd
  43f655:	jmp    0xd8910fd4
  43f65a:	add    dl,bl
  43f65c:	mov    bl,0x3
  43f65e:	rcl    DWORD PTR [edx+0x15],cl
  43f661:	sbb    edx,esi
  43f663:	xor    eax,ebx
  43f665:	das    
  43f666:	and    DWORD PTR [eax+0x34],0xcfe5e717
  43f66d:	mov    esi,0xecd06143
  43f672:	mov    eax,0xf4701295
  43f677:	iret   
  43f678:	pop    ecx
  43f679:	inc    edx
  43f67a:	add    eax,0xfde1ab13
  43f67f:	pushf  
  43f680:	fstp   QWORD PTR [ecx-0x67]
  43f683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f684:	mov    WORD PTR [eax+0x1bbea8fb],es
  43f68a:	dec    edi
  43f68b:	out    dx,eax
  43f68c:	out    dx,al
  43f68d:	cmp    al,0x5f
  43f68f:	xchg   ebp,eax
  43f690:	call   0x546c036b
  43f695:	cdq    
  43f696:	shr    edx,cl
  43f698:	aad    0x3c
  43f69a:	fsubrp st(6),st
  43f69c:	rol    DWORD PTR [esi+edx*4-0x48],cl
  43f6a0:	inc    eax
  43f6a1:	mov    ebp,0x5459ba7b
  43f6a6:	mov    edi,0x5928793c
  43f6ab:	jne    0x43f6e4
  43f6ad:	inc    eax
  43f6ae:	shl    DWORD PTR [eax],0x74
  43f6b1:	jae    0x43f650
  43f6b3:	sub    eax,0xc179b6c7
  43f6b8:	adc    al,0x57
  43f6ba:	sub    ah,BYTE PTR [ecx+0x29af83e0]
  43f6c0:	jo     0x43f68a
  43f6c2:	stos   DWORD PTR es:[edi],eax
  43f6c3:	inc    edi
  43f6c4:	jle    0x43f6ed
  43f6c6:	popf   
  43f6c7:	sbb    al,0x15
  43f6c9:	dec    esp
  43f6ca:	jp     0x43f748
  43f6cc:	loope  0x43f732
  43f6ce:	lods   al,BYTE PTR ds:[esi]
  43f6cf:	retf   
  43f6d0:	out    0xa5,eax
  43f6d2:	call   0xc6c1:0x368de3c8
  43f6d9:	pop    eax
  43f6da:	or     ch,dl
  43f6dc:	and    cl,bl
  43f6de:	in     al,0x3d
  43f6e0:	jecxz  0x43f6e4
  43f6e2:	or     eax,0xc9d10b56
  43f6e7:	sbb    DWORD PTR ds:0xc95bef13,eax
  43f6ed:	adc    DWORD PTR [esi-0x16e85d23],edx
  43f6f3:	add    eax,0x192126ad
  43f6f8:	cmp    eax,0xa026506f
  43f6fd:	int3   
  43f6fe:	js     0x43f711
  43f700:	into   
  43f701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f702:	xchg   edx,eax
  43f703:	hlt    
  43f704:	push   esp
  43f705:	push   ebp
  43f706:	or     esp,DWORD PTR [eax]
  43f708:	je     0x43f68e
  43f70a:	popa   
  43f70b:	je     0x43f6e0
  43f70d:	int    0x33
  43f70f:	(bad)  
  43f710:	jnp    0x43f77e
  43f712:	pop    esi
  43f713:	test   eax,0x92e3876c
  43f718:	pop    edi
  43f719:	jae    0x43f75b
  43f71b:	sub    BYTE PTR [ebx-0x44499bd2],ch
  43f721:	push   ecx
  43f722:	mov    ah,0x67
  43f724:	in     eax,0x23
  43f726:	add    BYTE PTR [ebx+0x69],bl
  43f729:	imul   eax,DWORD PTR [ebp+0x2a],0x1898d186
  43f730:	ins    BYTE PTR es:[edi],dx
  43f731:	and    esp,DWORD PTR [ecx+0x427b4ab6]
  43f737:	and    al,0x74
  43f739:	xor    bh,dl
  43f73b:	add    BYTE PTR [esi+0x590f41e1],cl
  43f741:	push   cs
  43f742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f743:	sbb    bh,BYTE PTR ds:0x44464cee
  43f749:	xchg   edi,eax
  43f74a:	out    dx,al
  43f74b:	jg     0x43f6e0
  43f74d:	jmp    0xb8e8:0xa00599ed
  43f754:	fwait
  43f755:	daa    
  43f756:	inc    esi
  43f757:	fst    QWORD PTR [edi+eax*4+0x65c39678]
  43f75e:	mov    al,ds:0x1a44d448
  43f763:	pop    es
  43f764:	cmp    bl,BYTE PTR [edi]
  43f766:	dec    edx
  43f767:	jno    0x43f7a0
  43f769:	clc    
  43f76a:	test   eax,0xce4d0e8f
  43f76f:	enter  0xdb40,0xf5
  43f773:	xor    ch,BYTE PTR [edx-0x45]
  43f776:	js     0x43f798
  43f778:	xor    al,0x71
  43f77a:	mov    ecx,0xeef0252b
  43f77f:	sbb    BYTE PTR [ebx-0x6dc8a563],bh
  43f785:	pop    ecx
  43f786:	add    eax,0xdeca9d35
  43f78b:	and    bl,BYTE PTR [ecx+0x431033a7]
  43f791:	adc    DWORD PTR [ebx-0x5d9d9a23],ebx
  43f797:	sbb    BYTE PTR [ebx],dh
  43f799:	push   ebx
  43f79a:	int    0x6a
  43f79c:	sbb    ch,cl
  43f79e:	adc    WORD PTR [edx-0x2],bx
  43f7a2:	fwait
  43f7a3:	mov    fs,WORD PTR [edx-0x402c8565]
  43f7a9:	xchg   BYTE PTR ds:0x2a92af25,al
  43f7af:	and    al,0x72
  43f7b1:	aaa    
  43f7b2:	shl    BYTE PTR [ebx-0x4842aef],cl
  43f7b8:	mov    edx,0x20c79963
  43f7bd:	mov    cl,0xa
  43f7bf:	test   BYTE PTR [esi-0x694af013],bl
  43f7c5:	and    DWORD PTR [ebp+0x7b],ecx
  43f7c8:	dec    ebp
  43f7c9:	clc    
  43f7ca:	mov    eax,DWORD PTR [edx-0x54141352]
  43f7d0:	jge    0x43f7b7
  43f7d2:	fcomip st,st(0)
  43f7d4:	sub    eax,0x86f23990
  43f7d9:	shl    al,cl
  43f7db:	arpl   WORD PTR [eax+0x1c52f7b2],dx
  43f7e1:	popa   
  43f7e2:	mov    al,ds:0x9dea46cc
  43f7e7:	jmp    0x43f822
  43f7e9:	mov    al,0x28
  43f7eb:	xor    edx,ebp
  43f7ed:	cmp    bl,BYTE PTR [esi-0x2b]
  43f7f0:	xchg   ebx,eax
  43f7f1:	pop    edx
  43f7f2:	mov    esp,DWORD PTR [ebx-0x60]
  43f7f5:	loope  0x43f7dd
  43f7f7:	aaa    
  43f7f8:	xchg   ebp,eax
  43f7f9:	jecxz  0x43f821
  43f7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f7fc:	sub    eax,0x69e5e338
  43f801:	and    al,0xc7
  43f803:	sbb    al,0xfb
  43f805:	cmp    esp,ecx
  43f807:	(bad)  
  43f808:	outs   dx,DWORD PTR ds:[esi]
  43f809:	fist   DWORD PTR [edi+eiz*4]
  43f80c:	pop    ebx
  43f80d:	mov    ds,WORD PTR [eax-0x50a13b8c]
  43f813:	les    ebp,FWORD PTR [eax+eax*2-0x62]
  43f817:	mov    esp,0x6eab1f17
  43f81c:	jns    0x43f7b8
  43f81e:	sub    eax,0x91c30c71
  43f823:	inc    ebp
  43f824:	or     BYTE PTR [ecx-0x3a],0x96
  43f828:	xor    eax,DWORD PTR [ecx+0x5f]
  43f82b:	push   es
  43f82c:	in     al,dx
  43f82d:	mov    ecx,DWORD PTR [edi-0x51]
  43f830:	inc    ecx
  43f831:	shr    BYTE PTR [eax],0xd9
  43f834:	ss sti 
  43f836:	sbb    al,BYTE PTR [ecx-0x12a1203b]
  43f83c:	push   0x83ee288e
  43f841:	push   ebx
  43f842:	lds    esi,FWORD PTR [edi]
  43f844:	pop    ss
  43f845:	pop    edi
  43f846:	jmp    0xd499:0x4e34bff
  43f84d:	pop    ebx
  43f84e:	outs   dx,DWORD PTR ds:[esi]
  43f84f:	mov    ds:0x3cc87050,al
  43f854:	jbe    0x43f82c
  43f856:	sti    
  43f857:	sbb    ebx,DWORD PTR [edi-0x7cecc152]
  43f85d:	cdq    
  43f85e:	(bad)  [edx+0x5bf40265]
  43f864:	mov    bh,0x0
  43f866:	data16 fistp DWORD PTR [esi-0x2953684c]
  43f86d:	pop    esi
  43f86e:	cld    
  43f86f:	lock stc 
  43f871:	sub    dh,bh
  43f873:	dec    edx
  43f874:	xchg   bh,bh
  43f876:	(bad)  
  43f877:	cli    
  43f878:	call   0x8b4b:0xf71ff13d
  43f87f:	pop    ds
  43f880:	jae    0x43f8e6
  43f882:	inc    esi
  43f883:	xchg   edx,eax
  43f884:	addr16 mov bl,0xf
  43f887:	mov    esp,0x35947811
  43f88c:	ds jmp 0x23ab:0x4d39aab0
  43f894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f895:	jmp    0xd970fe49
  43f89a:	xor    edx,DWORD PTR ss:[esi-0x6e40f9d8]
  43f8a1:	(bad)  
  43f8a2:	xchg   esp,eax
  43f8a3:	add    BYTE PTR [edx+0x77283299],dh
  43f8a9:	dec    eax
  43f8aa:	mov    al,ds:0xa545d9cd
  43f8af:	fcomp  DWORD PTR [ebx+ecx*4-0x23]
  43f8b3:	xchg   esi,eax
  43f8b4:	cwde   
  43f8b5:	xor    DWORD PTR [edx],eax
  43f8b7:	sbb    BYTE PTR [esi+0x541677bf],ah
  43f8bd:	sbb    eax,0x7d7ec925
  43f8c2:	adc    ecx,DWORD PTR [ecx+edx*8-0x4b0e5e7d]
  43f8c9:	mov    edi,DWORD PTR [ebx+0x270ba345]
  43f8cf:	lea    ebp,[edx-0x50]
  43f8d2:	mov    ds:0x8ff53fdc,al
  43f8d7:	stc    
  43f8d8:	dec    edi
  43f8d9:	out    0x35,eax
  43f8db:	call   DWORD PTR [ebp-0x6837623a]
  43f8e1:	std    
  43f8e2:	in     eax,0x75
  43f8e4:	dec    esi
  43f8e5:	push   edx
  43f8e6:	push   eax
  43f8e7:	mov    ah,0xc9
  43f8e9:	mov    edx,0x96d61422
  43f8ef:	repz out dx,eax
  43f8f1:	(bad)  
  43f8f2:	adc    ecx,DWORD PTR [ebp+0x7a]
  43f8f5:	jno    0x43f93c
  43f8f7:	cli    
  43f8f8:	mov    ds:0xb50cf405,eax
  43f8fd:	mov    ebx,0x23fdce49
  43f902:	sbb    BYTE PTR [ecx],al
  43f904:	jne    0x43f94a
  43f906:	push   esi
  43f907:	daa    
  43f908:	dec    ecx
  43f909:	push   ds
  43f90a:	xchg   BYTE PTR ds:0x314de01e,bh
  43f910:	jmp    0xe5393fa9
  43f915:	mov    bl,0xa3
  43f917:	stos   DWORD PTR es:[edi],eax
  43f918:	stos   BYTE PTR es:[edi],al
  43f919:	sbb    BYTE PTR [edx+0x26],ch
  43f91c:	neg    DWORD PTR [ecx-0x64cd7815]
  43f922:	pop    es
  43f923:	sbb    ah,BYTE PTR [eax]
  43f925:	jns    0x43f8f3
  43f927:	cs add bh,ah
  43f92a:	pop    es
  43f92b:	or     ebx,DWORD PTR [esi+0x28962c2e]
  43f931:	sbb    DWORD PTR [esi+0x3b],esp
  43f934:	cmp    dl,bh
  43f936:	pushf  
  43f937:	inc    ecx
  43f938:	jns    0x43f9a8
  43f93a:	aam    0xe0
  43f93c:	loope  0x43f969
  43f93e:	adc    al,0x5d
  43f940:	sahf   
  43f941:	cmp    esi,DWORD PTR [ecx+ebp*4-0x5609603b]
  43f948:	aad    0xd8
  43f94a:	adc    BYTE PTR [eax],0x5f
  43f94d:	dec    eax
  43f94e:	(bad)  
  43f94f:	adc    al,bl
  43f951:	adc    dl,bh
  43f953:	int3   
  43f954:	(bad)  
  43f955:	ds mov edi,0x2d6fd73b
  43f95b:	in     al,0x8a
  43f95d:	pop    esp
  43f95e:	mov    eax,ds:0x205a0e49
  43f963:	sbb    eax,0x300b2314
  43f968:	lds    ebp,FWORD PTR [esi]
  43f96a:	sub    ch,bl
  43f96c:	add    ah,BYTE PTR [edi-0x31a43a36]
  43f972:	adc    ah,cl
  43f974:	ss in  al,0xb8
  43f977:	adc    DWORD PTR [esi+0x11],ebp
  43f97a:	lock mov al,0x27
  43f97d:	xchg   edi,eax
  43f97e:	dec    esp
  43f97f:	sub    BYTE PTR [eax+0x792895b2],0xfd
  43f986:	std    
  43f987:	pusha  
  43f988:	imul   edx,DWORD PTR [ebp+0x7e],0x993a8536
  43f98f:	xchg   edi,eax
  43f990:	in     al,0x68
  43f992:	jnp    0x43f971
  43f994:	jge    0x43f94c
  43f996:	mov    ebx,0x360ba5f7
  43f99b:	xchg   edx,eax
  43f99c:	cvtpi2ps xmm3,QWORD PTR [ecx-0x79]
  43f9a0:	jb     0x43f9c7
  43f9a2:	lods   al,BYTE PTR ds:[esi]
  43f9a3:	dec    esp
  43f9a4:	and    cl,bl
  43f9a6:	(bad)  
  43f9a7:	mov    al,0x1f
  43f9a9:	fwait
  43f9aa:	xchg   esp,eax
  43f9ab:	cmp    eax,0xb7cf7aea
  43f9b0:	(bad)  
  43f9b1:	or     BYTE PTR ds:0xa53e955a,ch
  43f9b7:	adc    edx,ecx
  43f9b9:	imul   edx,DWORD PTR [ebp+ebx*1+0x70a6b3da],0x1e
  43f9c1:	cmp    ebp,DWORD PTR [ecx+0x31]
  43f9c4:	das    
  43f9c5:	xchg   edx,eax
  43f9c6:	sbb    BYTE PTR [ecx],0xa4
  43f9c9:	test   DWORD PTR [edi-0x6755118c],esp
  43f9cf:	mov    bl,bh
  43f9d1:	or     BYTE PTR [ebx-0x5e421fd2],dh
  43f9d7:	push   es
  43f9d8:	popf   
  43f9d9:	xchg   esp,eax
  43f9da:	dec    ebx
  43f9db:	mov    ah,0xf2
  43f9dd:	dec    esi
  43f9de:	(bad)  
  43f9e0:	xor    BYTE PTR [ebp-0x7f2f88d3],al
  43f9e6:	sbb    eax,0xc231a4eb
  43f9eb:	hlt    
  43f9ec:	popa   
  43f9ed:	sub    al,0x19
  43f9ef:	sbb    dh,BYTE PTR [ebp+edx*4+0x40567e32]
  43f9f6:	pop    esi
  43f9f7:	jmp    0x7eb4ce04
  43f9fc:	cmc    
  43f9fd:	ror    DWORD PTR [edi+0x58],1
  43fa00:	push   edx
  43fa01:	(bad)  
  43fa02:	xchg   ebx,eax
  43fa03:	jns    0x43f9d7
  43fa05:	mov    ebp,0x6c155f07
  43fa0a:	outs   dx,BYTE PTR ds:[esi]
  43fa0b:	(bad)  
  43fa0c:	lods   al,BYTE PTR ds:[esi]
  43fa0d:	or     BYTE PTR [edi-0x46938296],dh
  43fa13:	inc    ebp
  43fa14:	and    dl,al
  43fa16:	in     al,dx
  43fa17:	cs ret 
  43fa19:	out    dx,al
  43fa1a:	das    
  43fa1b:	je     0xed9defe
  43fa21:	sar    BYTE PTR [ecx-0x4bcd4fda],cl
  43fa27:	mov    BYTE PTR [esi+0x62752af0],al
  43fa2d:	call   0x28ad:0xe8d7fe9d
  43fa34:	fidiv  WORD PTR [edi-0x46]
  43fa37:	dec    edx
  43fa38:	adc    eax,0x3014539d
  43fa3d:	and    edx,DWORD PTR ds:0xde757cf2
  43fa43:	push   esp
  43fa44:	mov    DWORD PTR [esi],0xa484cfcd
  43fa4a:	jg     0x43fac1
  43fa4c:	inc    esp
  43fa4d:	jle    0x43fa95
  43fa4f:	aaa    
  43fa50:	cmp    ch,bl
  43fa52:	pop    ebx
  43fa53:	hlt    
  43fa54:	cmp    DWORD PTR [ebx+0x7f],edi
  43fa57:	cmp    DWORD PTR [ebx-0x23952eb6],ebx
  43fa5d:	cli    
  43fa5e:	div    BYTE PTR [ebx-0x60]
  43fa61:	into   
  43fa62:	gs pop ebp
  43fa64:	xchg   edi,eax
  43fa65:	mov    al,0xe9
  43fa67:	cmp    al,0xfd
  43fa69:	enter  0x22d9,0x6f
  43fa6d:	or     DWORD PTR [edi-0x2a5d5a7c],esi
  43fa73:	push   es
  43fa74:	fs ja  0x43fad3
  43fa77:	sbb    eax,0x307b9435
  43fa7c:	mov    ch,0x24
  43fa7e:	mov    edx,0x2f3d92ee
  43fa83:	shr    BYTE PTR [edi+0x18],1
  43fa86:	mov    edx,0x1c39a6d
  43fa8b:	inc    esi
  43fa8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fa8d:	and    esp,esi
  43fa8f:	sbb    DWORD PTR [edx+0xcc5b8c0],ecx
  43fa95:	mov    ds:0x337e3065,eax
  43fa9a:	shr    BYTE PTR [eax-0x57],0x47
  43fa9e:	inc    esp
  43fa9f:	lods   eax,DWORD PTR ds:[esi]
  43faa0:	dec    esp
  43faa1:	shl    esi,1
  43faa3:	jmp    0x43fad5
  43faa5:	mov    al,0x3e
  43faa7:	rol    DWORD PTR [ecx-0x5fff3cbb],0x36
  43faae:	jne    0x43fb01
  43fab0:	push   ebx
  43fab1:	ins    DWORD PTR es:[edi],dx
  43fab2:	stc    
  43fab3:	mov    cl,0xc1
  43fab5:	mov    al,ds:0xf0b38e77
  43faba:	xor    dh,cl
  43fabc:	push   0x62
  43fabe:	test   eax,esp
  43fac0:	add    ch,ch
  43fac2:	dec    ecx
  43fac3:	popa   
  43fac4:	mov    WORD PTR ds:0x5bd9313e,gs
  43faca:	xchg   DWORD PTR [ecx],eax
  43facc:	out    0x13,eax
  43face:	(bad)  
  43fad0:	je     0x43fa98
  43fad2:	mov    gs,WORD PTR [edx-0x3d294d6c]
  43fad8:	icebp  
  43fad9:	inc    edx
  43fada:	adc    ecx,DWORD PTR [edi-0x33e4bb08]
  43fae0:	daa    
  43fae1:	lahf   
  43fae2:	cmp    al,0x25
  43fae4:	popa   
  43fae5:	es dec esp
  43fae7:	xchg   ebx,eax
  43fae8:	dec    edx
  43fae9:	out    dx,al
  43faea:	jmp    0x43fb58
  43faec:	xor    al,0xbf
  43faee:	xlat   BYTE PTR ds:[ebx]
  43faef:	fsubr  st(4),st
  43faf1:	or     BYTE PTR [esi],ah
  43faf3:	ret    0x9856
  43faf6:	jnp    0x43fa90
  43faf8:	lahf   
  43faf9:	daa    
  43fafa:	adc    DWORD PTR [ebx-0x7eee2d80],ebx
  43fb00:	adc    DWORD PTR [esi-0xe],ebx
  43fb03:	add    eax,0x739764d5
  43fb08:	pop    ecx
  43fb09:	test   eax,0xbe3045a2
  43fb0e:	mov    ch,ah
  43fb10:	mov    eax,0x2d0b8842
  43fb15:	push   ecx
  43fb16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fb17:	sbb    eax,0xf163b2b5
  43fb1c:	ret    
  43fb1d:	(bad)  
  43fb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fb1f:	push   es
  43fb20:	push   eax
  43fb21:	fstp   TBYTE PTR [ebp-0x29dcefee]
  43fb27:	mov    dh,0xdc
  43fb29:	stos   BYTE PTR es:[edi],al
  43fb2a:	sbb    al,0xf6
  43fb2c:	lock inc ebp
  43fb2e:	sub    esp,ebp
  43fb30:	mov    edx,DWORD PTR [esi+0x3dacf576]
  43fb36:	cs fcomi st,st(3)
  43fb39:	(bad)  
  43fb3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fb3b:	std    
  43fb3c:	daa    
  43fb3d:	pop    ss
  43fb3e:	scas   eax,DWORD PTR es:[edi]
  43fb3f:	push   es
  43fb40:	retf   0xe7af
  43fb43:	cmp    eax,0xb17df8ed
  43fb48:	or     eax,0x15291f21
  43fb4d:	dec    esp
  43fb4e:	sbb    al,0x63
  43fb50:	adc    BYTE PTR [edi-0x58ce420a],ch
  43fb56:	add    esp,esp
  43fb58:	inc    ebx
  43fb59:	enter  0x9ab9,0xfa
  43fb5d:	sbb    ah,al
  43fb5f:	or     DWORD PTR ss:[esi],esi
  43fb62:	xchg   esp,eax
  43fb63:	pop    esi
  43fb64:	mov    dl,0x48
  43fb66:	sub    eax,0x25b0a383
  43fb6b:	daa    
  43fb6c:	dec    ebp
  43fb6d:	and    al,0x5d
  43fb6f:	push   0xc95e29a5
  43fb74:	pop    es
  43fb75:	aaa    
  43fb76:	js     0x43fb35
  43fb78:	repnz cmp ecx,DWORD PTR [edi+0x74849b00]
  43fb7f:	icebp  
  43fb80:	ins    BYTE PTR es:[edi],dx
  43fb81:	pusha  
  43fb82:	jle    0x43fb2f
  43fb84:	dec    edx
  43fb85:	pop    esp
  43fb86:	retf   
  43fb87:	dec    ebp
  43fb88:	mov    ds:0xe7f7093b,eax
  43fb8d:	xchg   edi,eax
  43fb8e:	mov    dh,0xf4
  43fb90:	or     eax,0xc9a12b08
  43fb95:	in     eax,0xc2
  43fb97:	(bad)  
  43fb98:	cmp    al,0xbb
  43fb9a:	jl     0x43fb48
  43fb9c:	and    ecx,DWORD PTR [ecx]
  43fb9e:	add    dh,BYTE PTR ds:0xada1993e
  43fba4:	adc    ebx,eax
  43fba6:	adc    BYTE PTR [ebp-0x30998d42],dl
  43fbac:	rol    BYTE PTR [ebx-0x23f7cd82],cl
  43fbb2:	(bad)  
  43fbb3:	iret   
  43fbb4:	jae    0x43fc07
  43fbb6:	cwde   
  43fbb7:	rcr    cl,cl
  43fbb9:	bound  edi,QWORD PTR [eax+0x2afd6091]
  43fbbf:	mov    BYTE PTR [esi+ebp*2+0x7994080b],ch
  43fbc6:	fs jbe 0x43fb4d
  43fbc9:	jns    0x43fb4f
  43fbcb:	add    BYTE PTR [esi],ch
  43fbcd:	mov    edi,0x1b5c4a0
  43fbd2:	lods   al,BYTE PTR ds:[esi]
  43fbd3:	pop    ds
  43fbd4:	jl     0x43fbec
  43fbd6:	outs   dx,BYTE PTR ds:[esi]
  43fbd7:	mov    al,0xa7
  43fbd9:	sbb    DWORD PTR [ecx-0x687d33a6],edi
  43fbdf:	push   edi
  43fbe0:	dec    esp
  43fbe1:	dec    edi
  43fbe2:	xor    DWORD PTR [ebx],edi
  43fbe4:	mov    ebx,0xbeafc97d
  43fbe9:	mov    esp,0x581916df
  43fbee:	sbb    eax,0xdc4cb0c
  43fbf3:	xchg   ecx,eax
  43fbf4:	out    0x26,eax
  43fbf6:	jl     0x43fb79
  43fbf8:	sub    esi,eax
  43fbfa:	sub    edx,ecx
  43fbfc:	arpl   WORD PTR [edx+0x5d],bp
  43fbff:	add    esi,ebp
  43fc01:	out    dx,eax
  43fc02:	jl     0x43fbc8
  43fc04:	pop    es
  43fc05:	fisttp DWORD PTR [ebx+ebx*8-0x17]
  43fc09:	ins    DWORD PTR es:[edi],dx
  43fc0a:	push   es
  43fc0b:	dec    DWORD PTR [ecx-0xedc0a06]
  43fc11:	das    
  43fc12:	(bad)  
  43fc13:	fldenv [ebx-0x15]
  43fc16:	aad    0x57
  43fc18:	repz mov al,0xe7
  43fc1b:	mov    ecx,0xee1ecc9f
  43fc20:	and    edx,DWORD PTR [edx-0x436a67dc]
  43fc26:	cld    
  43fc27:	retf   0x91e9
  43fc2a:	les    edi,FWORD PTR [esi]
  43fc2c:	out    dx,eax
  43fc2d:	sbb    dl,BYTE PTR [ecx-0x62d177bb]
  43fc33:	push   edi
  43fc34:	nop
  43fc35:	sbb    al,0x72
  43fc37:	mov    dh,0xbf
  43fc39:	mov    al,ds:0x36c0e079
  43fc3e:	fisub  DWORD PTR ds:0xa2c1124
  43fc44:	cmp    al,0x88
  43fc46:	xchg   edx,eax
  43fc47:	pop    eax
  43fc48:	mov    bl,0xf9
  43fc4a:	adc    DWORD PTR [esi-0x7b9171d8],0xffffffbd
  43fc51:	jns    0x43fc17
  43fc53:	jmp    0xc480ef9f
  43fc58:	stos   BYTE PTR es:[edi],al
  43fc59:	ret    0x2b37
  43fc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fc5d:	rol    BYTE PTR [ebp+0x3d],1
  43fc60:	add    esp,edx
  43fc62:	cmp    al,0x20
  43fc64:	test   DWORD PTR [edi],edi
  43fc66:	pushf  
  43fc67:	sub    eax,0x1fad7ef0
  43fc6c:	xor    BYTE PTR [edx+eiz*8+0xd998628],0x82
  43fc74:	add    eax,DWORD PTR [esi-0x70]
  43fc77:	pop    es
  43fc78:	or     DWORD PTR [edi+0x5c7bd265],esp
  43fc7e:	sub    DWORD PTR [esi],esp
  43fc80:	push   ss
  43fc81:	mov    ebx,0xc4d1364a
  43fc86:	mov    esp,0xdb9ae127
  43fc8b:	lods   al,BYTE PTR ds:[esi]
  43fc8c:	arpl   WORD PTR [ebx+edx*8+0x7d],dx
  43fc90:	jno    0x43fc82
  43fc92:	dec    ecx
  43fc93:	in     al,0x6b
  43fc95:	arpl   WORD PTR [eax],di
  43fc97:	pop    ecx
  43fc98:	mov    ecx,esp
  43fc9a:	scas   eax,DWORD PTR es:[edi]
  43fc9b:	sbb    edi,DWORD PTR [eax+0x57]
  43fc9e:	ret    0xc99e
  43fca1:	sbb    esp,DWORD PTR [edi+ebp*1-0x6d65194d]
  43fca8:	jmp    0x3860:0x4f7eae12
  43fcaf:	call   0xf40e:0x1503c797
  43fcb6:	sbb    al,0x9a
  43fcb8:	aaa    
  43fcb9:	xchg   ebx,eax
  43fcba:	loop   0x43fc46
  43fcbc:	mov    esp,0xd68bbd3d
  43fcc1:	popa   
  43fcc2:	daa    
  43fcc3:	int3   
  43fcc4:	ins    DWORD PTR es:[edi],dx
  43fcc5:	div    DWORD PTR [esi+0x16]
  43fcc8:	and    BYTE PTR [ecx+ebx*2-0x5e7a14fe],cl
  43fccf:	add    BYTE PTR [ecx+edx*1],0xcc
  43fcd3:	pop    eax
  43fcd4:	repz mov cl,0xcc
  43fcd7:	cmp    BYTE PTR [ecx-0x5d265fb3],dh
  43fcdd:	fisub  WORD PTR [edx]
  43fcdf:	xor    dh,BYTE PTR [edx-0x33]
  43fce2:	enter  0x742b,0x0
  43fce6:	test   eax,0xb5db41e1
  43fceb:	or     al,0x45
  43fced:	mov    ds:0xe6a33e40,eax
  43fcf2:	std    
  43fcf3:	(bad)  
  43fcf5:	mov    WORD PTR [eax],cs
  43fcf7:	inc    esp
  43fcf8:	enter  0xca90,0x5d
  43fcfc:	sbb    DWORD PTR [ecx],ebp
  43fcfe:	dec    ecx
  43fcff:	cmp    dh,BYTE PTR [edi-0x15c471ae]
  43fd05:	mov    bl,0xb7
  43fd07:	stos   DWORD PTR es:[edi],eax
  43fd08:	xchg   ecx,eax
  43fd09:	je     0x43fd5e
  43fd0b:	adc    bh,dl
  43fd0d:	xor    ebp,DWORD PTR [ecx]
  43fd0f:	mov    al,0xed
  43fd11:	dec    edi
  43fd12:	pushf  
  43fd13:	nop
  43fd14:	pop    cx
  43fd16:	or     DWORD PTR [esi-0xf00e66a],ebx
  43fd1c:	push   ebx
  43fd1d:	cs mov edi,0xe3672efe
  43fd23:	in     eax,0xda
  43fd25:	adc    esp,ebx
  43fd27:	les    ecx,FWORD PTR [ebp+0x2e]
  43fd2a:	inc    esp
  43fd2b:	cwde   
  43fd2c:	jb     0x43fce6
  43fd2e:	sub    eax,0x37938545
  43fd33:	inc    esp
  43fd34:	mov    BYTE PTR [ebx+0xd],cl
  43fd37:	mov    ch,BYTE PTR [ebp+0x20]
  43fd3a:	imul   ebx,DWORD PTR [ebx+0x44ba047b],0x2b602526
  43fd44:	adc    DWORD PTR [ecx+0x6068b162],ebx
  43fd4a:	dec    esi
  43fd4b:	pop    ss
  43fd4c:	out    dx,al
  43fd4d:	cmp    al,0x5c
  43fd4f:	out    0x2a,eax
  43fd51:	cmc    
  43fd52:	and    ebx,DWORD PTR [edx-0xe437812]
  43fd58:	jno    0x43fd58
  43fd5a:	push   ebp
  43fd5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fd5c:	ret    0x66ad
  43fd5f:	mov    edx,0xcda32b11
  43fd64:	xor    BYTE PTR [ebx],cl
  43fd66:	(bad)
  43fd6b:	lods   al,BYTE PTR ds:[esi]
  43fd6c:	sub    eax,0xdb8b26fc
  43fd71:	loopne 0x43fdb4
  43fd73:	mov    edx,0xf98f3889
  43fd78:	loopne 0x43fde5
  43fd7a:	hlt    
  43fd7b:	stc    
  43fd7c:	pop    ebx
  43fd7d:	rcr    BYTE PTR [eax+ebx*2],cl
  43fd80:	jno    0x43fda7
  43fd82:	mov    ds:0x7af0adf1,eax
  43fd87:	(bad)  
  43fd88:	idiv   BYTE PTR [esi+0x47e1d3ff]
  43fd8e:	mov    es,WORD PTR [eax]
  43fd90:	mov    eax,ds:0x8fdefd65
  43fd95:	mov    ecx,0x6eee6fec
  43fd9a:	push   esp
  43fd9b:	pop    ebx
  43fd9c:	mov    cl,0xc8
  43fd9e:	sub    eax,0xb678b5ae
  43fda3:	loopne 0x43fde4
  43fda5:	jnp    0x43fdca
  43fda7:	pop    ss
  43fda8:	mov    ecx,0xdd33d8c1
  43fdad:	push   ebx
  43fdae:	popa   
  43fdaf:	xor    bl,al
  43fdb1:	lea    esp,[edi]
  43fdb3:	ja     0x43fdf9
  43fdb5:	cmp    DWORD PTR [edi],ebp
  43fdb7:	and    al,ah
  43fdb9:	sub    BYTE PTR [ecx],bh
  43fdbb:	adc    dh,BYTE PTR [ecx]
  43fdbd:	daa    
  43fdbe:	out    dx,eax
  43fdbf:	cmp    esp,esp
  43fdc1:	cwde   
  43fdc2:	sar    DWORD PTR [ebp-0x1bbf88f8],0x90
  43fdc9:	dec    ecx
  43fdca:	std    
  43fdcb:	pop    ebp
  43fdcc:	into   
  43fdcd:	(bad)  
  43fdce:	mov    bl,0x54
  43fdd0:	in     al,dx
  43fdd1:	in     al,dx
  43fdd2:	loop   0x43fd5a
  43fdd4:	adc    al,0xfc
  43fdd6:	jecxz  0x43fe3f
  43fdd8:	inc    ecx
  43fdd9:	pop    ebp
  43fdda:	pop    di
  43fddc:	in     eax,dx
  43fddd:	addr16 aas 
  43fddf:	je     0x43fdf4
  43fde1:	push   esi
  43fde2:	jmp    0xfb64bcc6
  43fde7:	mov    bh,0x3f
  43fde9:	sub    al,ch
  43fdeb:	into   
  43fdec:	je     0x43fe5e
  43fdee:	fadd   st(4),st
  43fdf0:	mov    dh,0xef
  43fdf2:	scas   eax,DWORD PTR es:[edi]
  43fdf3:	jl     0x43fe53
  43fdf5:	clc    
  43fdf6:	mov    WORD PTR ds:0xfb0912e8,fs
  43fdfc:	repz mov ecx,0x85335161
  43fe02:	rcr    DWORD PTR [ecx+0x1d],cl
  43fe05:	push   0xc480964f
  43fe0a:	imul   ebx,DWORD PTR [edi],0xdaa4d566
  43fe10:	mov    bh,0x37
  43fe12:	or     edx,esp
  43fe14:	dec    ecx
  43fe15:	sbb    DWORD PTR [esi],ebx
  43fe17:	pop    esp
  43fe18:	adc    DWORD PTR [ebp+0x5d2e7558],ebp
  43fe1e:	cmp    al,0x4
  43fe20:	push   es
  43fe21:	sti    
  43fe22:	and    BYTE PTR [esi-0x6e],0x80
  43fe26:	pop    ds
  43fe27:	jb     0x43fe05
  43fe29:	sti    
  43fe2a:	gs iret 
  43fe2c:	enter  0xe525,0x33
  43fe30:	sub    eax,0xee76bde3
  43fe35:	or     DWORD PTR [edi+0x12],ebp
  43fe38:	cdq    
  43fe39:	retf   
  43fe3a:	(bad)  
  43fe3b:	push   ebp
  43fe3c:	(bad)  
  43fe3d:	ins    BYTE PTR es:[edi],dx
  43fe3e:	lods   eax,DWORD PTR ds:[esi]
  43fe3f:	add    al,0xfb
  43fe41:	push   edi
  43fe42:	pop    ebx
  43fe43:	idiv   BYTE PTR [edi]
  43fe45:	pop    esp
  43fe46:	frstor [edi-0x38]
  43fe49:	clc    
  43fe4a:	adc    ch,BYTE PTR [esi-0xd9e99fa]
  43fe50:	scas   al,BYTE PTR es:[edi]
  43fe51:	jno    0x43fec6
  43fe53:	push   0x21
  43fe55:	inc    esp
  43fe56:	push   ecx
  43fe57:	cdq    
  43fe58:	mov    ds,WORD PTR [edx]
  43fe5a:	sub    edx,esp
  43fe5c:	out    dx,eax
  43fe5d:	out    dx,eax
  43fe5e:	jae    0x43fea1
  43fe60:	sub    ah,BYTE PTR [eax+0x3e]
  43fe63:	cwde   
  43fe64:	xchg   ebx,eax
  43fe65:	sub    BYTE PTR [eax],dh
  43fe67:	mov    gs,edi
  43fe69:	test   DWORD PTR [eax],ebx
  43fe6b:	outs   dx,BYTE PTR ds:[esi]
  43fe6c:	cld    
  43fe6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fe6e:	add    esp,DWORD PTR [edx+ecx*4-0x7f]
  43fe72:	idiv   DWORD PTR [ebx]
  43fe74:	div    BYTE PTR [ebx]
  43fe76:	cmp    BYTE PTR [ebx+0x4a],ah
  43fe79:	jo     0x43fecf
  43fe7b:	jo     0x43fe3e
  43fe7d:	lds    ecx,FWORD PTR ds:0xbb7e4d7e
  43fe83:	pop    ds
  43fe84:	ss mov cl,0xe3
  43fe87:	jmp    0x60e6762b
  43fe8c:	shl    DWORD PTR [ebp-0x72bb9419],cl
  43fe92:	test   BYTE PTR ds:0xb254c6d8,0x2d
  43fe99:	jns    0x43fed2
  43fe9b:	in     al,0x51
  43fe9d:	ror    DWORD PTR [edx+0x3885dd9e],cl
  43fea3:	out    0x83,eax
  43fea5:	xchg   ebp,eax
  43fea6:	sub    DWORD PTR [edi],0xe6d745d4
  43feac:	dec    eax
  43fead:	hlt    
  43feae:	jns    0x43ff13
  43feb0:	sbb    bh,ch
  43feb2:	xchg   DWORD PTR [edx],ebp
  43feb4:	adc    bh,BYTE PTR [eax]
  43feb6:	jnp    0x43fed3
  43feb8:	fcom   QWORD PTR [ebp-0x4c]
  43febb:	dec    ecx
  43febc:	dec    ecx
  43febd:	sub    BYTE PTR [edi],bh
  43febf:	mov    ebp,0xfc9476de
  43fec4:	jge    0x43fe4c
  43fec6:	adc    al,0x32
  43fec8:	or     al,BYTE PTR [ecx]
  43feca:	and    BYTE PTR [ebp-0xf],bl
  43fecd:	sbb    ebp,DWORD PTR [edx+edi*1]
  43fed0:	jmp    0x7642:0x72132958
  43fed7:	pop    eax
  43fed8:	inc    BYTE PTR [edi-0x3d]
  43fedb:	mov    edx,0xab17a993
  43fee0:	push   edx
  43fee1:	cld    
  43fee2:	xor    DWORD PTR [edi],eax
  43fee4:	stos   BYTE PTR es:[edi],al
  43fee5:	adc    al,dl
  43fee7:	xor    al,0xb5
  43fee9:	push   cs
  43feea:	xchg   ecx,eax
  43feeb:	xor    esi,DWORD PTR [edi+0x1149c232]
  43fef1:	dec    esp
  43fef2:	xor    al,BYTE PTR [ecx+esi*1+0x612e5dc4]
  43fef9:	push   DWORD PTR [eax-0x18869e53]
  43feff:	xchg   ebp,eax
  43ff00:	das    
  43ff01:	and    eax,0x1001e29e
  43ff06:	cld    
  43ff07:	fidiv  DWORD PTR [eax]
  43ff09:	mov    dl,0x79
  43ff0b:	aaa    
  43ff0c:	sti    
  43ff0d:	push   eax
  43ff0e:	mov    al,ds:0xa22d82a6
  43ff13:	xlat   BYTE PTR ds:[ebx]
  43ff14:	jbe    0x43fee2
  43ff16:	or     ecx,esi
  43ff18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ff19:	jge    0x43ff5a
  43ff1b:	ins    DWORD PTR es:[edi],dx
  43ff1c:	xchg   DWORD PTR [ecx],eax
  43ff1e:	scas   eax,DWORD PTR es:[edi]
  43ff1f:	push   edi
  43ff20:	repz imul esp,DWORD PTR [edx],0xbcd7b1ec
  43ff27:	sub    esp,edx
  43ff29:	aas    
  43ff2a:	mov    eax,ds:0x48692de2
  43ff2f:	cwde   
  43ff30:	and    eax,0x73aa47a3
  43ff35:	sbb    dl,cl
  43ff37:	inc    ebx
  43ff38:	div    bl
  43ff3a:	mov    eax,0x2e8a88d
  43ff3f:	mov    esi,DWORD PTR [ebx-0x3]
  43ff42:	loope  0x43fec5
  43ff44:	inc    eax
  43ff45:	les    edx,FWORD PTR [ebx+0x37bae48b]
  43ff4b:	das    
  43ff4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ff4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ff4e:	adc    al,0x4d
  43ff50:	enter  0xc05b,0xb3
  43ff54:	sbb    al,0x4f
  43ff56:	add    cl,BYTE PTR [esi-0x37455d6c]
  43ff5c:	popa   
  43ff5d:	pop    ds
  43ff5e:	add    ah,BYTE PTR [ebx+0x7738989e]
  43ff64:	test   DWORD PTR [ebx+ebp*4],edi
  43ff67:	fwait
  43ff68:	mov    ds:0x8e1fd05a,eax
  43ff6d:	addr16 inc ebp
  43ff6f:	xlat   BYTE PTR ds:[ebx]
  43ff70:	or     dh,bl
  43ff72:	mov    esp,0xc1f69bb5
  43ff77:	popa   
  43ff78:	js     0x43ff7c
  43ff7a:	pop    ecx
  43ff7b:	loop   0x43ffa0
  43ff7d:	mov    ebx,0x237c0547
  43ff82:	imul   edx,DWORD PTR [esi],0xffffffae
  43ff85:	xchg   edx,eax
  43ff86:	in     eax,0x5a
  43ff88:	test   eax,0x9662792f
  43ff8d:	mov    fs,WORD PTR [esi]
  43ff8f:	loop   0x43ff88
  43ff91:	js     0x43ff3b
  43ff93:	inc    edx
  43ff94:	xor    bh,cl
  43ff96:	jne    0x43ff6c
  43ff98:	test   DWORD PTR [eax],0x12d900bd
  43ff9e:	jb     0x43ffa8
  43ffa0:	popf   
  43ffa1:	mov    al,0xd6
  43ffa3:	and    DWORD PTR [eax-0x42],eax
  43ffa6:	cmc    
  43ffa7:	iret   
  43ffa8:	iret   
  43ffa9:	inc    ebp
  43ffaa:	mov    cl,0x62
  43ffac:	pop    edx
  43ffad:	mov    dl,0xa5
  43ffaf:	xlat   BYTE PTR ds:[ebx]
  43ffb0:	loope  0x43ff51
  43ffb2:	bound  edi,QWORD PTR [ebp+0x47]
  43ffb5:	mov    BYTE PTR [ecx+0x2bb7dda5],dl
  43ffbb:	cmp    eax,0x14e6c22a
  43ffc0:	mov    ecx,0xc378b23b
  43ffc5:	xor    esp,DWORD PTR [ebx+0x28a3f138]
  43ffcb:	sbb    eax,0xa3458630
  43ffd0:	mov    ecx,0x76f2a465
  43ffd5:	jns    0x43ffb6
  43ffd7:	add    BYTE PTR [ebp-0x11],bh
  43ffda:	js     0x43ff6b
  43ffdc:	and    eax,DWORD PTR [ebx+esi*2-0x7d4aa156]
  43ffe3:	mov    al,ah
  43ffe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ffe6:	je     0x43ff94
  43ffe8:	sar    DWORD PTR [edx-0x6e1c2489],1
  43ffee:	cmp    BYTE PTR [eax+eiz*4+0x19],0xe3
  43fff3:	mov    ecx,0x59fbf888
  43fff8:	stos   BYTE PTR es:[edi],al
  43fff9:	pop    esi
  43fffa:	jns    0x440020
  43fffc:	and    eax,0xf9b6549b
  440001:	(bad)  
  440002:	call   0xf3fe5b75
  440007:	xor    esi,DWORD PTR [edx]
  440009:	repnz (bad) 
  44000b:	xchg   ebx,eax
  44000c:	sub    al,0xb7
  44000e:	sti    
  44000f:	cs adc al,0xf2
  440012:	jmp    0x1800:0x2bb4d929
  440019:	ror    ecx,1
  44001b:	xor    BYTE PTR [ecx+0x11d3b154],cl
  440021:	dec    edi
  440022:	popf   
  440023:	in     eax,0x4a
  440025:	into   
  440026:	addr16 push ebp
  440028:	push   ds
  440029:	(bad)  
  44002b:	lea    edx,[edi+0xd256aee]
  440031:	sub    DWORD PTR [edi],ecx
  440033:	sbb    al,bh
  440035:	dec    eax
  440036:	xor    BYTE PTR [esi-0x536067e5],ch
  44003c:	push   eax
  44003d:	mov    eax,ds:0x327a65fa
  440042:	adc    bl,BYTE PTR [ebp+0x1c]
  440045:	shl    BYTE PTR [edx+0x41abf9ad],1
  44004b:	push   0xffffffad
  44004d:	fadd   DWORD PTR [eax+0x15]
  440050:	xor    esp,DWORD PTR [edi-0x7a]
  440053:	aaa    
  440054:	xor    BYTE PTR [ebx],0x2
  440057:	retf   
  440058:	cmp    al,0x7c
  44005a:	arpl   sp,ax
  44005c:	mov    ebx,0x2d260611
  440061:	je     0x440068
  440063:	punpckhbw mm4,QWORD PTR [ebx+0x572fab7f]
  44006a:	and    eax,0x9e49be9d
  44006f:	fisttp WORD PTR [ebx+0x29757076]
  440075:	clc    
  440076:	xor    edx,ecx
  440078:	jne    0x4400e4
  44007a:	fdiv   QWORD PTR [eax]
  44007c:	retf   
  44007d:	cdq    
  44007e:	cmc    
  44007f:	in     eax,0xdf
  440081:	ds push ebp
  440083:	inc    ebp
  440084:	stc    
  440085:	pop    ds
  440086:	ins    BYTE PTR es:[edi],dx
  440087:	sub    edi,DWORD PTR [ebp+eiz*4-0x51]
  44008b:	push   0x84b0e234
  440090:	mov    ds:0x1db5132a,al
  440095:	pop    esi
  440096:	popa   
  440097:	stc    
  440098:	lods   al,BYTE PTR ds:[esi]
  440099:	mov    ebx,0x571d3b3b
  44009e:	das    
  44009f:	data16 jnp 0x44010c
  4400a2:	jg     0x440057
  4400a4:	jle    0x44011d
  4400a6:	jge    0x440101
  4400a8:	add    ebx,DWORD PTR [edx]
  4400aa:	dec    edi
  4400ab:	adc    esi,esi
  4400ad:	or     al,0x27
  4400af:	jae    0x440100
  4400b1:	lods   al,BYTE PTR ds:[esi]
  4400b2:	test   eax,0x1037cdf2
  4400b7:	fst    DWORD PTR [esi-0x5a]
  4400ba:	fdivr  st,st(6)
  4400bc:	dec    eax
  4400bd:	sbb    eax,0x9c8e8ca6
  4400c2:	cmp    bh,BYTE PTR [esi+0x75cb3d2f]
  4400c8:	fwait
  4400c9:	cwde   
  4400ca:	push   0xf690526
  4400cf:	pop    eax
  4400d0:	sub    ah,BYTE PTR [ecx+0x51]
  4400d3:	mov    WORD PTR [ecx],fs
  4400d5:	xchg   edx,eax
  4400d6:	mov    ds:0x2e4524f1,al
  4400dc:	pop    ecx
  4400dd:	ins    BYTE PTR es:[edi],dx
  4400de:	sub    eax,0xe630e8d0
  4400e3:	inc    ebp
  4400e4:	(bad)  
  4400e5:	call   0x101d7734
  4400ea:	xchg   DWORD PTR [esi-0x6a905bc8],edi
  4400f0:	ss sar ebp,1
  4400f3:	mov    al,0x60
  4400f5:	lahf   
  4400f6:	sbb    eax,0x8c624206
  4400fb:	sbb    BYTE PTR [ecx],0xb7
  4400fe:	cld    
  4400ff:	add    ah,bl
  440101:	scas   eax,DWORD PTR es:[edi]
  440102:	scas   eax,DWORD PTR es:[edi]
  440103:	in     al,dx
  440104:	nop
  440105:	xchg   edi,eax
  440106:	cmc    
  440107:	mov    edx,0xbf5481f5
  44010c:	mov    eax,0xb526cfce
  440111:	scas   eax,DWORD PTR es:[edi]
  440112:	sbb    DWORD PTR [eax+0x6f6c3767],esp
  440118:	test   DWORD PTR [edx-0x483a8115],ebx
  44011e:	or     bl,BYTE PTR [edx]
  440120:	and    eax,0xfe7f16d1
  440125:	jecxz  0x440146
  440127:	inc    esp
  440128:	jge    0x4400ff
  44012a:	je     0x4400fa
  44012c:	out    dx,eax
  44012d:	imul   ecx,DWORD PTR [ecx+0x6b6af93c],0xb670c76f
  440137:	call   0xeaf:0x3aa31ed3
  44013e:	push   es
  44013f:	les    ebx,FWORD PTR [ebx+0x65]
  440142:	add    al,0xb4
  440144:	(bad)  
  440146:	pushf  
  440147:	mov    DWORD PTR [edx],ebx
  440149:	mov    DWORD PTR ds:0xb1dc3ff0,edi
  44014f:	loop   0x44015c
  440151:	and    cl,ah
  440153:	out    0x53,al
  440155:	lss    edx,FWORD PTR [esi+0x73]
  440159:	mov    ah,0x27
  44015b:	retf   0x88cb
  44015e:	mov    eax,0x47a5d8a1
  440163:	xchg   DWORD PTR [eax-0x7021e712],ebx
  440169:	jp     0x44018e
  44016b:	shl    BYTE PTR [esi],cl
  44016d:	xchg   edi,eax
  44016e:	cmp    DWORD PTR [edi-0x4d219703],0xffffffc6
  440175:	push   ss
  440176:	add    al,0x87
  440178:	cmp    edi,esi
  44017a:	js     0x440136
  44017c:	push   0xffffffe2
  44017e:	mov    dh,dh
  440180:	shl    bh,0x1f
  440183:	pop    es
  440184:	stc    
  440185:	sbb    dh,BYTE PTR [ebx-0x7a659f9c]
  44018b:	leave  
  44018c:	ret    0xff62
  44018f:	mov    edx,0x3afc6d55
  440194:	cmc    
  440195:	outs   dx,DWORD PTR ds:[esi]
  440196:	das    
  440197:	fwait
  440198:	mov    dl,0x87
  44019a:	in     eax,0xf3
  44019c:	inc    edx
  44019d:	mov    ah,0xec
  44019f:	lea    esp,[ecx]
  4401a1:	mov    WORD PTR [edx+0x6f89ca22],?
  4401a7:	dec    edx
  4401a8:	aas    
  4401a9:	cmc    
  4401aa:	outs   dx,BYTE PTR ds:[esi]
  4401ab:	pop    ds
  4401ac:	int3   
  4401ad:	sub    eax,DWORD PTR [edi]
  4401af:	cli    
  4401b0:	add    eax,0x54c901fb
  4401b5:	pop    ss
  4401b6:	cmp    esp,esp
  4401b8:	leave  
  4401b9:	xchg   edi,eax
  4401ba:	test   DWORD PTR [edi+0x1a],ecx
  4401bd:	adc    al,0xc2
  4401bf:	mov    edi,0x83baea7
  4401c4:	cmp    al,0x98
  4401c6:	and    ebx,DWORD PTR [ebx]
  4401c8:	test   BYTE PTR [edx],bl
  4401ca:	js     0x4401e5
  4401cc:	sub    DWORD PTR [edi-0x1],edi
  4401cf:	sbb    al,0x5c
  4401d1:	xchg   DWORD PTR [esi+0x6e7c4d24],edx
  4401d7:	lds    edi,FWORD PTR [ebx-0x5c]
  4401da:	or     bh,BYTE PTR [esi+0x58810abf]
  4401e0:	mov    ebx,0xb050645d
  4401e5:	push   ebx
  4401e6:	pop    esi
  4401e7:	sub    al,0x69
  4401e9:	jmp    0x440206
  4401eb:	jecxz  0x4401fb
  4401ed:	retf   0xe47d
  4401f0:	ja     0x440239
  4401f2:	add    eax,DWORD PTR [edi+0x7d]
  4401f5:	push   ebp
  4401f6:	in     eax,0x5d
  4401f8:	inc    edx
  4401f9:	test   DWORD PTR [ebx],0x70564be
  4401ff:	cmp    cl,bl
  440201:	arpl   WORD PTR [edx+0x30328f96],bp
  440207:	sub    dh,ch
  440209:	xchg   edx,eax
  44020a:	and    al,0x7c
  44020c:	sub    ecx,edi
  44020e:	in     al,dx
  44020f:	push   eax
  440210:	xchg   edx,eax
  440211:	push   esp
  440212:	out    dx,al
  440213:	arpl   WORD PTR [edx],sp
  440215:	lock lds ebx,FWORD PTR [ecx-0x16276990]
  44021c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44021d:	shr    eax,1
  44021f:	fidiv  DWORD PTR [edx]
  440221:	ds sub eax,0x1e93a00b
  440227:	push   ds
  440228:	cmp    eax,0x1de80fb6
  44022d:	mov    edx,0xfa5f6310
  440232:	mov    bh,0x63
  440234:	adc    bl,dh
  440236:	jno    0x440215
  440238:	aas    
  440239:	cli    
  44023a:	mov    ecx,0x70cb2d23
  44023f:	add    eax,0x463ea101
  440244:	jl     0x440260
  440246:	cmp    DWORD PTR [eax-0x6fd39b67],edx
  44024c:	shr    DWORD PTR [ebx+edi*1+0x3c1f4689],0x8c
  440254:	pushf  
  440255:	ins    DWORD PTR es:[edi],dx
  440256:	test   al,0x44
  440258:	mov    al,ds:0x784322bb
  44025d:	test   DWORD PTR [ebp-0x48ea3adb],edx
  440263:	inc    esp
  440264:	(bad)  
  440265:	xlat   BYTE PTR ds:[ebx]
  440266:	arpl   WORD PTR [ecx+0x53],di
  440269:	xor    al,0x9c
  44026b:	cli    
  44026c:	stc    
  44026d:	or     al,0xd5
  44026f:	pop    es
  440270:	and    DWORD PTR [edx-0x65b4693e],eax
  440276:	inc    edi
  440277:	inc    eax
  440278:	mov    bl,0xd1
  44027a:	cs scas al,BYTE PTR es:[edi]
  44027c:	pusha  
  44027d:	sub    eax,0xdc1d651e
  440282:	rcr    BYTE PTR [eax],cl
  440284:	cmp    al,0x54
  440286:	aas    
  440287:	inc    ebp
  440288:	cmc    
  440289:	std    
  44028a:	leave  
  44028b:	sub    esp,DWORD PTR [ecx]
  44028d:	(bad)  
  44028e:	out    0xde,al
  440290:	call   FWORD PTR [edx+0x77cdda52]
  440296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440297:	ja     0x44021c
  440299:	and    DWORD PTR [edi-0xf],ebx
  44029c:	xor    BYTE PTR [esi-0x45cf1af0],0x2a
  4402a3:	call   0xe0e8:0x281328d0
  4402aa:	mov    ch,0x2e
  4402ac:	call   0xafc:0x38664477
  4402b3:	add    BYTE PTR [ebp-0x3],0x2f
  4402b7:	das    
  4402b8:	mov    eax,ds:0xc464cdd
  4402bd:	adc    eax,0x270402e0
  4402c2:	xchg   esi,eax
  4402c3:	dec    ebx
  4402c4:	sub    eax,0x1eda3f5b
  4402c9:	adc    esi,DWORD PTR [edx-0x9]
  4402cc:	out    0x5f,eax
  4402ce:	icebp  
  4402cf:	mov    ecx,0xa5823959
  4402d4:	inc    esp
  4402d5:	je     0x4402f8
  4402d7:	cs in  eax,0xec
  4402da:	cmp    al,0x9
  4402dc:	xor    DWORD PTR [edx+0x7e],ebx
  4402df:	mul    BYTE PTR [edi+0x3b207c92]
  4402e5:	mov    eax,ds:0xe5eee1d6
  4402ea:	out    0xf7,al
  4402ec:	inc    ecx
  4402ed:	ja     0x4402ab
  4402ef:	fmul   st,st(7)
  4402f1:	pop    ds
  4402f2:	fcomp  DWORD PTR [ebx+0x2a]
  4402f5:	sahf   
  4402f6:	jno    0x4402c0
  4402f8:	cld    
  4402f9:	in     eax,dx
  4402fa:	push   ebx
  4402fb:	fs (bad) 
  4402fd:	mov    dl,0x2a
  4402ff:	std    
  440300:	jecxz  0x440309
  440302:	es mov bh,0x7d
  440305:	pop    esi
  440306:	inc    esi
  440307:	add    edx,DWORD PTR [edx-0x3581b69c]
  44030d:	jb     0x44035c
  44030f:	popa   
  440310:	adc    al,BYTE PTR [ecx-0x7]
  440313:	cmp    al,0x51
  440315:	xchg   ecx,eax
  440316:	or     al,0xea
  440318:	sbb    BYTE PTR [edx],0x7d
  44031b:	dec    edx
  44031c:	and    eax,0xd837be86
  440321:	dec    edi
  440322:	arpl   WORD PTR [edx-0x3dc0b621],sp
  440328:	jae    0x440371
  44032a:	add    DWORD PTR [ebp+0x10834d02],edx
  440330:	retf   
  440331:	pop    DWORD PTR [ebx+0x5d]
  440334:	stos   BYTE PTR es:[edi],al
  440335:	mov    esp,0x3023171c
  44033a:	sub    cl,bh
  44033c:	in     al,dx
  44033d:	or     esp,edi
  44033f:	sar    DWORD PTR [ecx+0x36],1
  440342:	js     0x440398
  440344:	fs (bad) 
  440346:	mov    al,0xb0
  440348:	mov    ecx,DWORD PTR [ebx]
  44034a:	imul   ecx,esp,0x9a5fa456
  440350:	cs push 0xf0c8ded2
  440356:	and    bl,BYTE PTR [edx+edx*1]
  440359:	fsubr  st,st(7)
  44035b:	lods   eax,DWORD PTR ds:[esi]
  44035c:	and    eax,0x3aae114f
  440361:	sbb    DWORD PTR [ebx],ebp
  440363:	mov    esi,0x93373a4d
  440368:	repnz mov BYTE PTR [ebx+0x6670769d],dl
  44036f:	fisubr DWORD PTR [edx+ecx*4]
  440372:	dec    esi
  440373:	lods   al,BYTE PTR ds:[esi]
  440374:	pop    ecx
  440375:	clc    
  440376:	pop    ebx
  440377:	jg     0x440385
  440379:	inc    esi
  44037a:	xor    edi,DWORD PTR [ecx-0x4f]
  44037d:	pop    esi
  44037e:	mov    ch,0x86
  440380:	and    eax,0x37677bb7
  440385:	add    ebp,DWORD PTR [edi-0x55]
  440388:	imul   esp,DWORD PTR [edi],0xa1b0c4d4
  44038e:	xchg   esi,eax
  44038f:	xor    dh,BYTE PTR [edi]
  440391:	dec    esp
  440392:	cmp    DWORD PTR [edi+0x12],eax
  440395:	sbb    bl,cl
  440397:	outs   dx,DWORD PTR ds:[esi]
  440398:	les    ebp,FWORD PTR [eax-0xe361a3a]
  44039e:	or     al,0x4f
  4403a0:	fstp   DWORD PTR [esp+eiz*2+0x2c]
  4403a4:	pop    ebx
  4403a5:	mov    esi,0x23dfa0e6
  4403aa:	push   ebx
  4403ab:	adc    dl,BYTE PTR [edi]
  4403ad:	ret    
  4403ae:	jne    0x44034e
  4403b0:	mov    dl,0x9f
  4403b2:	sub    dl,BYTE PTR [ebx+0x3f]
  4403b5:	xor    al,0xdb
  4403b7:	jo     0x4403ec
  4403b9:	das    
  4403ba:	adc    eax,DWORD PTR [ecx]
  4403bc:	xchg   ecx,eax
  4403bd:	mov    edi,0x857c741e
  4403c2:	adc    WORD PTR [edi],0xeee1
  4403c7:	mov    ?,edi
  4403c9:	lods   eax,DWORD PTR ds:[esi]
  4403ca:	out    0x9f,eax
  4403cc:	jecxz  0x440400
  4403ce:	fisttp WORD PTR ds:0xf3db76f8
  4403d4:	cmp    al,0x7c
  4403d6:	outs   dx,BYTE PTR ds:[esi]
  4403d7:	shl    DWORD PTR [ebx+0x1ac4e94d],0x33
  4403de:	adc    DWORD PTR ds:0xee6171be,0x11
  4403e5:	int3   
  4403e6:	scas   al,BYTE PTR es:[edi]
  4403e7:	push   cs
  4403e8:	pop    eax
  4403e9:	sahf   
  4403ea:	pop    edx
  4403eb:	scas   eax,DWORD PTR es:[edi]
  4403ec:	jmp    0xe679:0x57d878f4
  4403f3:	push   ss
  4403f4:	mov    ecx,0x1b210de0
  4403f9:	(bad)  
  4403fa:	loopne 0x440450
  4403fc:	cli    
  4403fd:	sbb    al,0xcd
  4403ff:	add    ch,BYTE PTR [ecx]
  440401:	add    BYTE PTR [esi+0x4f1d2d85],0x9c
  440408:	call   0xff3c7662
  44040d:	sub    ch,dl
  44040f:	les    ebp,FWORD PTR [ebx+0x2c]
  440412:	sub    eax,0xc0eed3cb
  440417:	xlat   BYTE PTR ds:[ebx]
  440418:	imul   edi,DWORD PTR [edx],0x8482c5c5
  44041e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44041f:	inc    esp
  440420:	pop    ecx
  440421:	ror    dh,0xd2
  440424:	add    esi,0x2bd56064
  44042a:	loope  0x440482
  44042c:	fst    st(1)
  44042e:	xchg   esp,eax
  44042f:	repz jne 0x4403fb
  440432:	cli    
  440433:	sub    edi,ebx
  440435:	loope  0x440424
  440437:	enter  0xe6ff,0x26
  44043b:	sbb    edi,DWORD PTR [ecx-0x438d8e79]
  440441:	xchg   BYTE PTR [ebx+0x68],ah
  440444:	out    dx,eax
  440445:	mov    ch,0x17
  440447:	mov    dl,0xc6
  440449:	mov    esp,0x30900d46
  44044e:	jle    0x440447
  440450:	ret    0x3f1b
  440453:	sub    bh,BYTE PTR [ebx+0x6765b2e]
  440459:	or     ecx,ebp
  44045b:	push   ss
  44045c:	cmc    
  44045d:	std    
  44045e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44045f:	cwde   
  440460:	imul   edi,ebx,0x4fa94b20
  440466:	shl    edx,0xb1
  440469:	ss push ds
  44046b:	push   esi
  44046c:	cld    
  44046d:	mov    cl,0xe9
  44046f:	add    eax,DWORD PTR [ebp+ecx*1+0x318f7474]
  440476:	cli    
  440477:	(bad)  
  440478:	adc    edx,DWORD PTR [eax+0x6253c40]
  44047e:	or     DWORD PTR [ebx-0x4ab83b7c],0xffffffce
  440485:	xchg   ebx,eax
  440486:	sahf   
  440487:	std    
  440488:	daa    
  440489:	rol    BYTE PTR [edx],0x1b
  44048c:	frstor [ecx]
  44048e:	jmp    0x9ded66f3
  440493:	popf   
  440494:	out    0x73,al
  440496:	shl    edi,1
  440498:	fisubr WORD PTR [ecx+0x59]
  44049b:	dec    BYTE PTR [ecx]
  44049d:	mov    edx,0x9404d57c
  4404a2:	mov    eax,ds:0xf84b034
  4404a7:	cmp    esi,DWORD PTR [ecx+0x438a116a]
  4404ad:	stc    
  4404ae:	loope  0x4404a6
  4404b0:	aaa    
  4404b1:	pavgw  mm6,QWORD PTR [eax+0x56]
  4404b5:	(bad)  [ecx+0x2a]
  4404b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4404b9:	mov    al,ds:0xf1ca58ca
  4404be:	test   eax,0xf67825f3
  4404c3:	jmp    0x3f5faebe
  4404c8:	in     eax,0x4
  4404ca:	jecxz  0x4404be
  4404cc:	in     eax,dx
  4404cd:	pop    edx
  4404ce:	mov    ch,0x95
  4404d0:	ror    DWORD PTR [ebx-0xad271b],cl
  4404d6:	push   es
  4404d7:	lods   al,BYTE PTR ds:[esi]
  4404d8:	pushf  
  4404d9:	mov    cs,esp
  4404db:	jae    0x44048e
  4404dd:	inc    edi
  4404de:	xor    edx,DWORD PTR [esi]
  4404e0:	pop    ebx
  4404e1:	cdq    
  4404e2:	mov    al,ds:0xd1b17aae
  4404e7:	pushf  
  4404e8:	xor    al,0xea
  4404ea:	sbb    ebx,esp
  4404ec:	out    0x7e,al
  4404ee:	mov    dl,0x33
  4404f0:	fs out dx,eax
  4404f2:	int    0x6c
  4404f4:	fwait
  4404f5:	mov    bl,0xab
  4404f7:	jl     0x440495
  4404f9:	test   DWORD PTR [ebx-0x7015fc3e],0x27a0637a
  440503:	jae    0x440517
  440505:	shl    DWORD PTR [edi+0x29],1
  440508:	pop    ecx
  440509:	fnstcw WORD PTR ds:0x9807373a
  44050f:	pop    ss
  440510:	xchg   BYTE PTR [ecx],dl
  440512:	dec    ecx
  440513:	add    BYTE PTR cs:[ecx],ah
  440516:	mov    ebp,0x8e7c940
  44051b:	jle    0x4404b8
  44051d:	inc    edi
  44051e:	fdiv   DWORD PTR [eax-0x5ceb2107]
  440524:	cmp    eax,0x831a0807
  440529:	nop
  44052a:	jae    0x440552
  44052c:	arpl   WORD PTR [eax+0x2bd9a43c],sp
  440532:	outs   dx,DWORD PTR ds:[esi]
  440533:	mov    esi,0x3a688caa
  440538:	mov    al,ds:0x1f5ff955
  44053d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44053e:	stos   DWORD PTR es:[edi],eax
  44053f:	mov    bl,0xda
  440541:	iret   
  440542:	test   esi,edx
  440544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440545:	pop    edx
  440546:	jge    0x4404d2
  440548:	push   edi
  440549:	(bad)  
  44054a:	xor    al,0x49
  44054c:	push   esp
  44054d:	sub    al,0x11
  44054f:	repz and cl,BYTE PTR fs:[edx-0x63ea02a]
  440557:	jns    0x44055d
  440559:	jl     0x440557
  44055b:	in     al,dx
  44055c:	xor    bl,dh
  44055e:	imul   esp,DWORD PTR [esi],0x5f564292
  440564:	sbb    DWORD PTR [ecx+0x64],ebp
  440567:	(bad)  
  440568:	fs lock das 
  44056b:	out    dx,eax
  44056c:	(bad)
  44056f:	sub    eax,0xcd8c1c48
  440574:	jp     0x4405d8
  440576:	xchg   BYTE PTR [ecx+0x21a09e0c],cl
  44057c:	lock adc bh,dl
  44057f:	jns    0x440573
  440581:	ds push esi
  440583:	xchg   ebx,eax
  440584:	adc    DWORD PTR [eax-0x461adad3],esi
  44058a:	fild   QWORD PTR [ebp+esi*2+0x15]
  44058e:	and    al,0xbd
  440590:	shr    DWORD PTR ds:0xd556c7ae,cl
  440596:	fst    DWORD PTR [ebx-0x20]
  440599:	dec    ebx
  44059a:	test   eax,0x8573332c
  44059f:	xchg   edi,eax
  4405a0:	sub    DWORD PTR [edx],ebp
  4405a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4405a3:	mov    dh,0xee
  4405a5:	adc    al,BYTE PTR ds:0x109c41c1
  4405ab:	xor    BYTE PTR [esi+0x79656cec],dl
  4405b1:	xor    al,0xcb
  4405b3:	inc    eax
  4405b4:	cmp    eax,eax
  4405b6:	dec    ebp
  4405b7:	mov    ebx,0xb9877d0d
  4405bc:	rcl    dl,cl
  4405be:	fs xchg edi,eax
  4405c0:	retf   
  4405c1:	shl    BYTE PTR [eax+0x3bc0cfdf],1
  4405c7:	test   eax,0x5f52614f
  4405cc:	std    
  4405cd:	fcomp  QWORD PTR [ebp-0xeecadde]
  4405d3:	test   eax,0x2707821a
  4405d8:	xchg   DWORD PTR [eax-0x34],ebp
  4405db:	retf   
  4405dc:	pushf  
  4405dd:	inc    esp
  4405de:	xchg   ebx,eax
  4405df:	add    eax,0xa8113ba4
  4405e4:	shl    BYTE PTR [si+0x19d8],cl
  4405e9:	lahf   
  4405ea:	and    DWORD PTR [edx],ebx
  4405ec:	pop    ecx
  4405ed:	xor    eax,0xccfa6e3c
  4405f2:	adc    eax,0x8b3e62ba
  4405f7:	rcr    DWORD PTR [ebp+0x39f6099],0x16
  4405fe:	fidiv  WORD PTR [ebx+ebp*8+0x4f158052]
  440605:	push   es
  440606:	sbb    BYTE PTR [ebp-0x227c1039],dh
  44060c:	fsub   DWORD PTR [edx-0x2eb10a1c]
  440612:	push   0x2d5065bb
  440617:	outs   dx,BYTE PTR ds:[esi]
  440618:	retf   0x2ab5
  44061b:	pop    eax
  44061c:	push   es
  44061d:	push   eax
  44061e:	jnp    0x440623
  440620:	push   es
  440621:	inc    esi
  440622:	leave  
  440623:	add    eax,DWORD PTR [edx+0x57]
  440626:	xchg   ebx,eax
  440627:	cmp    BYTE PTR [esi],cl
  440629:	mov    dh,0x5
  44062b:	(bad)  
  44062c:	xchg   edi,eax
  44062d:	and    esp,DWORD PTR ds:0xc4ef2dbb
  440633:	sbb    ecx,DWORD PTR [ebp-0x517f96f0]
  440639:	rol    DWORD PTR [edi+0x33],0x48
  44063d:	cmp    DWORD PTR [esp+edx*2-0x60],edi
  440641:	int    0xbf
  440643:	stos   BYTE PTR es:[edi],al
  440644:	cdq    
  440645:	xchg   esi,eax
  440646:	(bad)  
  440647:	push   edi
  440648:	sub    al,0xf2
  44064a:	aam    0x2e
  44064c:	das    
  44064d:	xchg   BYTE PTR [esi+0x79],dh
  440650:	xchg   esp,eax
  440651:	xchg   esp,eax
  440652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440653:	lea    ecx,[edx-0x7dbb7ed1]
  440659:	fbld   TBYTE PTR [eax-0x43f960b3]
  44065f:	loope  0x440694
  440661:	jo     0x440637
  440663:	xchg   edi,eax
  440664:	retf   0x403b
  440667:	and    bh,dh
  440669:	adc    edi,DWORD PTR [edx-0x7542b8f1]
  44066f:	mov    ds:0xfbc47e8b,al
  440674:	inc    eax
  440675:	jle    0x440646
  440677:	js     0x4406bd
  440679:	mov    edi,0xbf6bbca3
  44067e:	pop    edi
  44067f:	mov    ebp,0x338fb378
  440684:	dec    esi
  440685:	ds fs lahf 
  440688:	ror    DWORD PTR [eax-0x46ffbc39],cl
  44068e:	rcr    DWORD PTR [esi+eax*8],cl
  440691:	stos   BYTE PTR es:[edi],al
  440692:	adc    DWORD PTR [ebx-0x6b],edi
  440695:	sub    cl,BYTE PTR [edx]
  440697:	xchg   ebp,eax
  440698:	loop   0x4406df
  44069a:	jb     0x440697
  44069c:	mov    esi,0x7f1875a0
  4406a1:	adc    al,0xc5
  4406a3:	cmp    al,0x4d
  4406a5:	mov    bh,0x9e
  4406a7:	ja     0x44067c
  4406a9:	jno    0x4406ec
  4406ab:	inc    esp
  4406ac:	fild   QWORD PTR [edx-0x6058bc1b]
  4406b2:	or     BYTE PTR [edx],cl
  4406b4:	in     eax,0x6b
  4406b6:	gs (bad) 
  4406b8:	(bad)  
  4406b9:	imul   BYTE PTR [ecx-0x404d994b]
  4406bf:	enter  0x3153,0x25
  4406c3:	daa    
  4406c4:	adc    edx,DWORD PTR [edi+edx*4+0x2e]
  4406c8:	push   ecx
  4406c9:	shl    DWORD PTR [ebx+0x141074d7],0x27
  4406d0:	jmp    0x3fd812cb
  4406d5:	pop    esi
  4406d6:	sbb    eax,0xf957493a
  4406db:	adc    al,0xbc
  4406dd:	inc    esp
  4406de:	or     bl,BYTE PTR [esi]
  4406e0:	cmp    al,0xe0
  4406e2:	jb     0x44072c
  4406e4:	mov    cl,0x74
  4406e6:	add    BYTE PTR [ebx+eiz*2+0x37],0x74
  4406eb:	xchg   ebp,eax
  4406ec:	sub    ah,dh
  4406ee:	retf   0x2606
  4406f1:	xchg   esi,eax
  4406f2:	sub    BYTE PTR [edx+ebp*1+0x5d9a2459],dl
  4406f9:	mov    dl,0x63
  4406fb:	icebp  
  4406fc:	add    dh,BYTE PTR [ecx+eax*4-0x2d]
  440700:	sub    ecx,DWORD PTR [edi+0xd3af950]
  440706:	fcmovnu st,st(3)
  440708:	stos   BYTE PTR es:[edi],al
  440709:	fsubr  QWORD PTR [ecx-0xe2fd992]
  44070f:	fs cmc 
  440711:	adc    DWORD PTR [esi-0x2c],ebx
  440714:	xor    BYTE PTR [esi+0x16],cl
  440717:	mov    bl,0xae
  440719:	mov    cl,0xfd
  44071b:	cmp    ebp,DWORD PTR [eax+0x9]
  44071e:	call   0xcbdd:0x9c1be33f
  440725:	xlat   BYTE PTR ds:[ebx]
  440726:	(bad)  
  440728:	lods   al,BYTE PTR ds:[esi]
  440729:	fcomip st,st(0)
  44072b:	icebp  
  44072c:	push   ecx
  44072d:	stos   BYTE PTR es:[edi],al
  44072e:	jecxz  0x4406c7
  440730:	loope  0x4407ae
  440732:	(bad)  
  440734:	sar    DWORD PTR ds:[ebx-0x30],0x6f
  440739:	sbb    al,0xb0
  44073b:	arpl   WORD PTR [eax+ecx*1+0x4c606648],ax
  440742:	push   ebx
  440743:	stos   BYTE PTR es:[edi],al
  440744:	rol    DWORD PTR [esi+0x54],1
  440747:	mov    eax,0x565b98dd
  44074c:	scas   al,BYTE PTR es:[edi]
  44074d:	sbb    eax,0x4a1695f7
  440752:	loop   0x440767
  440754:	ror    BYTE PTR [edi],cl
  440756:	jnp    0x4407b2
  440758:	pop    esp
  440759:	cmp    ecx,ebx
  44075b:	fsubr  DWORD PTR [ebp-0x71]
  44075e:	rcl    bh,0x85
  440761:	shl    BYTE PTR [eax],cl
  440763:	pop    ds
  440764:	jecxz  0x4407af
  440766:	sbb    al,0xf3
  440768:	mov    WORD PTR [esi-0x75],gs
  44076b:	add    BYTE PTR [esp+ebx*1],ch
  44076e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44076f:	xchg   ebx,eax
  440770:	js     0x4407e1
  440772:	pop    eax
  440773:	(bad)  
  440774:	cld    
  440775:	jp     0x440709
  440777:	ss (bad) 
  440779:	pop    ebx
  44077a:	stos   DWORD PTR es:[edi],eax
  44077b:	or     eax,0x2d8ff39f
  440780:	and    ebx,DWORD PTR [edi]
  440782:	pop    eax
  440783:	and    bl,al
  440785:	scas   al,BYTE PTR es:[edi]
  440786:	xor    DWORD PTR [edx-0x2bcae430],ebp
  44078c:	mov    al,0x46
  44078e:	wrmsr  
  440790:	cmp    al,0x7f
  440792:	push   esp
  440793:	mov    bh,0xd1
  440795:	out    0x2d,al
  440797:	call   0xa846cde
  44079c:	or     DWORD PTR [edx-0x11f94a69],edi
  4407a2:	arpl   sp,bx
  4407a4:	jne    0x44077e
  4407a6:	adc    eax,0x6c19f1e
  4407ab:	fucomip st,st(2)
  4407ad:	sahf   
  4407ae:	sar    ebx,cl
  4407b0:	or     dl,BYTE PTR [eax-0x11f7af25]
  4407b6:	inc    edx
  4407b7:	std    
  4407b8:	jo     0x4407d1
  4407ba:	ret    0x53f1
  4407bd:	sub    eax,0x76344c2c
  4407c2:	ins    DWORD PTR es:[edi],dx
  4407c3:	cs sub ebx,edx
  4407c6:	jmp    0x362e:0x3f58ff2
  4407cd:	daa    
  4407ce:	inc    ecx
  4407cf:	push   ecx
  4407d0:	sub    ecx,edi
  4407d2:	lds    ebp,FWORD PTR [ebx]
  4407d4:	mov    edi,0xd4d16c50
  4407d9:	jbe    0x4407bb
  4407db:	or     al,dh
  4407dd:	leave  
  4407de:	pushf  
  4407df:	push   ds
  4407e0:	retf   0xcecc
  4407e3:	in     eax,dx
  4407e4:	or     al,0xec
  4407e6:	xor    ebx,DWORD PTR [eax-0x30]
  4407e9:	sub    bh,ch
  4407eb:	mov    ds:0xb359e6d9,eax
  4407f0:	fsubr  DWORD PTR [esi+0x69]
  4407f3:	lock dec eax
  4407f5:	inc    edx
  4407f6:	cmp    eax,0x9a3d1fde
  4407fb:	leave  
  4407fc:	aad    0x5b
  4407fe:	inc    ebx
  4407ff:	aaa    
  440800:	mov    eax,0x1b39300f
  440805:	xor    BYTE PTR [edx+0x3e],dh
  440808:	(bad)  
  440809:	ja     0x4407a1
  44080b:	pop    ss
  44080c:	adc    BYTE PTR [edx-0xd],0x62
  440810:	xchg   esp,eax
  440811:	or     eax,ebx
  440813:	jl     0x440818
  440815:	cmp    esi,0xffffffdf
  440818:	pop    ebx
  440819:	hlt    
  44081a:	ss xchg ebp,eax
  44081c:	rol    DWORD PTR [eax],1
  44081e:	add    al,0xe0
  440820:	ss dec edx
  440822:	aas    
  440823:	clc    
  440824:	fisubr WORD PTR [ecx]
  440826:	add    dl,al
  440828:	jo     0x440875
  44082a:	(bad)  [ebx]
  44082c:	jae    0x440831
  44082e:	add    eax,DWORD PTR [ebp+0xf0a0dad]
  440834:	ret    
  440835:	inc    ebx
  440836:	pop    esp
  440837:	xor    BYTE PTR [edx],dl
  440839:	fstp   DWORD PTR [ebp-0x514cb17c]
  44083f:	aaa    
  440840:	add    bh,BYTE PTR [ecx]
  440842:	sahf   
  440843:	test   DWORD PTR [ebp+0x17],ebp
  440846:	iret   
  440847:	adc    eax,0xedf3691b
  44084c:	mov    ebp,0xb5e49a5e
  440851:	xchg   DWORD PTR [eax],esp
  440853:	jnp    0x4407e9
  440855:	std    
  440856:	add    BYTE PTR [edx],dl
  440858:	lea    esi,[esi-0x774ae3fb]
  44085e:	xor    esp,esp
  440860:	ss in  eax,0x5e
  440863:	outs   dx,BYTE PTR ds:[esi]
  440864:	or     dh,BYTE PTR [si+0x78]
  440868:	xchg   BYTE PTR [ecx-0x36],dl
  44086b:	add    DWORD PTR [edi-0x14132792],edi
  440871:	push   eax
  440872:	lea    edx,[ebp+0x7b42150e]
  440878:	mov    dl,0x24
  44087a:	mov    edi,0x71e8ffd1
  44087f:	mov    dh,BYTE PTR [ecx]
  440881:	(bad)  
  440882:	jle    0x440856
  440884:	leave  
  440885:	arpl   WORD PTR [esi],dx
  440887:	out    0x32,al
  440889:	push   edi
  44088a:	mov    dl,0x83
  44088c:	xchg   ecx,eax
  44088d:	js     0x440833
  44088f:	fidiv  DWORD PTR [ecx-0x5155a032]
  440895:	adc    DWORD PTR [esi+ebp*2-0x447deee6],ebp
  44089c:	or     ebp,ebx
  44089e:	fwait
  44089f:	sub    DWORD PTR [ebx+0x1230826a],0x80e9b2ef
  4408a9:	mov    bh,0x18
  4408ab:	jns    0x4408ac
  4408ad:	push   ebx
  4408ae:	lahf   
  4408af:	dec    ebp
  4408b0:	ret    
  4408b1:	add    DWORD PTR [edi-0x68],ebp
  4408b4:	mov    bl,0xfe
  4408b6:	xchg   ebx,eax
  4408b7:	stos   BYTE PTR es:[edi],al
  4408b8:	xchg   edi,eax
  4408b9:	or     ebx,DWORD PTR [eax]
  4408bb:	js     0x440852
  4408bd:	popa   
  4408be:	lds    esi,FWORD PTR [ebp-0x78]
  4408c1:	mov    ds:0x1ec4445d,al
  4408c6:	mov    ebp,0xf5f0e5dd
  4408cb:	jecxz  0x440874
  4408cd:	mov    cl,0xdb
  4408cf:	leave  
  4408d0:	out    0x50,eax
  4408d2:	inc    edi
  4408d3:	mov    ebx,0x11bb4ef
  4408d8:	push   edi
  4408d9:	sbb    edi,DWORD PTR [ebx+0x54497556]
  4408df:	mov    ah,0xe9
  4408e1:	jnp    0x4408cd
  4408e3:	out    0xa0,eax
  4408e5:	aad    0x46
  4408e7:	jmp    0x44091d
  4408e9:	into   
  4408ea:	dec    ecx
  4408eb:	mul    edx
  4408ed:	pop    ebp
  4408ee:	pusha  
  4408ef:	or     BYTE PTR [edi+0x4c91133b],bh
  4408f5:	fistp  QWORD PTR ds:0x945b00ce
  4408fb:	mov    al,ds:0x1e0ec93d
  440900:	mov    WORD PTR [edi-0x1b],cs
  440903:	sbb    BYTE PTR [edi],dl
  440905:	ret    0x9d7
  440908:	jno    0x440892
  44090a:	vsubss xmm4,xmm1,DWORD PTR [ebx-0x26]
  44090f:	cli    
  440910:	xor    al,0xaf
  440912:	(bad)  
  440913:	aaa    
  440914:	or     eax,0xe2dd7ed4
  440919:	mov    ah,0x4c
  44091b:	popf   
  44091c:	dec    esi
  44091d:	add    bh,dl
  44091f:	xlat   BYTE PTR ds:[ebx]
  440920:	fcomp  st(1)
  440922:	cmp    DWORD PTR [edx-0x6],0x19
  440926:	mov    ebx,0x3f005873
  44092b:	add    al,0xf6
  44092d:	ret    0x8b9c
  440930:	fcomi  st,st(7)
  440932:	mov    dl,0x7d
  440934:	add    BYTE PTR [esi+0x145313a9],0x25
  44093b:	dec    ebp
  44093c:	in     eax,0x2d
  44093e:	push   0x9f2ec68e
  440943:	fidiv  DWORD PTR [ebx]
  440945:	xchg   edi,eax
  440946:	popf   
  440947:	sbb    DWORD PTR [ebp-0x55],eax
  44094a:	push   0xffffffa2
  44094c:	(bad)  
  44094d:	or     bh,ch
  44094f:	sub    DWORD PTR [ebx+ebp*2],eax
  440952:	enter  0xf1,0x5b
  440956:	push   ecx
  440957:	pop    ecx
  440958:	push   0x62
  44095a:	in     al,0x6c
  44095c:	loopne 0x4409da
  44095e:	xchg   BYTE PTR [eax+0x18354411],dl
  440964:	test   al,0x82
  440966:	es sbb edi,ebp
  440969:	cmp    eax,0x88234e38
  44096e:	jle    0x4408f5
  440970:	jnp    0x440932
  440972:	outs   dx,DWORD PTR ds:[si]
  440974:	adc    al,0x44
  440976:	icebp  
  440977:	ds lahf 
  440979:	or     al,bh
  44097b:	dec    ebx
  44097c:	pop    ebp
  44097d:	repz fadd DWORD PTR [ecx+edx*4+0x23]
  440982:	jmp    0x4409b2
  440984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440985:	in     al,0x49
  440987:	arpl   WORD PTR [ebx-0x69],ax
  44098a:	mov    cl,0x4d
  44098c:	push   edx
  44098d:	sar    al,cl
  44098f:	push   ds
  440990:	and    BYTE PTR [edx-0x43],dh
  440993:	bound  ecx,QWORD PTR [esp+ebx*1]
  440996:	xchg   edi,eax
  440997:	sub    al,0xc2
  440999:	pop    eax
  44099a:	popf   
  44099b:	mov    BYTE PTR [edx-0x406a9a77],al
  4409a1:	fisub  WORD PTR [eax+edi*4+0x1a]
  4409a5:	mov    al,0x81
  4409a7:	xchg   esp,eax
  4409a8:	fwait
  4409a9:	inc    eax
  4409aa:	or     eax,0x30dcc022
  4409af:	mov    dl,0xc1
  4409b1:	jle    0x440a12
  4409b3:	push   ecx
  4409b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4409b5:	mov    ecx,0x9d87451
  4409ba:	pop    ecx
  4409bb:	pop    ebp
  4409bc:	cmp    DWORD PTR [edx+0x57],esp
  4409bf:	rcl    al,0x5b
  4409c2:	fwait
  4409c3:	stc    
  4409c4:	retf   
  4409c5:	push   esp
  4409c6:	cmp    dl,BYTE PTR [esi+0x4]
  4409c9:	adc    BYTE PTR cs:[ebp+0x62],ah
  4409cd:	stc    
  4409ce:	popf   
  4409cf:	arpl   bx,si
  4409d1:	dec    ebp
  4409d2:	inc    ebx
  4409d3:	call   FWORD PTR [ecx+0x6e3a3efe]
  4409d9:	icebp  
  4409da:	jecxz  0x4409ee
  4409dc:	test   al,0xa3
  4409de:	mov    dh,0xb3
  4409e0:	push   es
  4409e1:	mov    ecx,0x744afe82
  4409e6:	mov    ecx,esp
  4409e8:	hlt    
  4409e9:	push   ss
  4409ea:	pop    es
  4409eb:	ret    0x352
  4409ee:	mov    edi,0xabaf23e7
  4409f3:	std    
  4409f4:	fild   WORD PTR [ebx+0x61]
  4409f7:	idiv   bh
  4409f9:	(bad)  
  4409fa:	and    BYTE PTR [ebp-0x3c41e0a6],bl
  440a00:	inc    edi
  440a01:	mov    bh,0xbb
  440a03:	test   al,0x16
  440a05:	pop    esi
  440a06:	jge    0x440a51
  440a08:	fisub  WORD PTR [edx+ebx*8+0x57]
  440a0c:	mov    cs,WORD PTR [eax+edx*8]
  440a0f:	adc    ecx,eax
  440a11:	dec    ebx
  440a12:	push   esi
  440a13:	add    al,0x61
  440a15:	cmp    eax,DWORD PTR [ebp+0x6c]
  440a18:	xchg   ebp,eax
  440a19:	pusha  
  440a1a:	je     0x440a40
  440a1c:	xor    DWORD PTR [ecx-0x71],esi
  440a1f:	mov    dl,0x1c
  440a21:	mov    DWORD PTR [ecx],esp
  440a23:	fmul   DWORD PTR [eax-0x13]
  440a26:	sub    BYTE PTR [ebx],ch
  440a28:	push   es
  440a29:	jmp    0x440a84
  440a2b:	jmp    FWORD PTR [ebx+0x39d40d67]
  440a31:	loop   0x4409d3
  440a33:	add    ch,BYTE PTR [ebp-0xb]
  440a36:	add    eax,0x60b8b2f9
  440a3b:	fcom   DWORD PTR [edi+0x462215fd]
  440a41:	jo     0x440a49
  440a43:	dec    sp
  440a45:	repnz add BYTE PTR [edi],bh
  440a48:	push   ecx
  440a49:	mov    ecx,DWORD PTR [ebx+0x4]
  440a4c:	dec    esi
  440a4d:	push   edx
  440a4e:	xor    BYTE PTR [edi+eiz*2],al
  440a51:	(bad)  
  440a52:	or     ecx,DWORD PTR [ebp+0x2a]
  440a55:	xchg   ebx,eax
  440a56:	fbstp  TBYTE PTR [ecx+0x36]
  440a59:	mov    al,ds:0x5222245e
  440a5e:	ret    
  440a5f:	inc    edx
  440a60:	dec    ebp
  440a61:	jl     0xabde9531
  440a67:	dec    edx
  440a68:	fucomp st(0)
  440a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440a6b:	pop    ebx
  440a6c:	ins    DWORD PTR es:[edi],dx
  440a6d:	scas   al,BYTE PTR es:[edi]
  440a6e:	sbb    esp,edi
  440a70:	outs   dx,DWORD PTR ds:[esi]
  440a71:	dec    esi
  440a72:	mov    ds:0xa405c478,al
  440a77:	ficom  WORD PTR [ebp+esi*4-0x13]
  440a7b:	in     eax,0xce
  440a7d:	in     al,dx
  440a7e:	mov    ch,0x79
  440a80:	or     al,bh
  440a82:	jle    0x440abf
  440a84:	push   es
  440a85:	ins    BYTE PTR es:[edi],dx
  440a86:	sbb    BYTE PTR [edx+0x43],0xfb
  440a8a:	and    ch,BYTE PTR ds:[ecx+0x31d9080d]
  440a91:	mov    ah,0x48
  440a93:	cmp    edi,DWORD PTR [edx]
  440a95:	in     al,0x1f
  440a97:	ja     0x440a52
  440a99:	gs push esp
  440a9b:	das    
  440a9c:	mov    ?,WORD PTR [ebp-0x7eff4a8a]
  440aa2:	or     DWORD PTR cs:[eax],edi
  440aa5:	fld    QWORD PTR [eax+0x7]
  440aa8:	xchg   ebp,eax
  440aa9:	ds adc eax,0x1f6c29ec
  440aaf:	sbb    eax,0x58d6e3f0
  440ab4:	cmp    al,BYTE PTR [esi-0x3e]
  440ab7:	ja     0x440a92
  440ab9:	adc    DWORD PTR [edi+edi*8],edx
  440abc:	inc    ecx
  440abd:	xchg   esp,eax
  440abe:	or     eax,0xa7e45bb6
  440ac3:	sub    eax,0x9381d73a
  440ac8:	ss loopne 0x440ac4
  440acb:	aaa    
  440acc:	outs   dx,BYTE PTR ds:[esi]
  440acd:	push   ebp
  440ace:	jmp    0x440a67
  440ad0:	(bad)  
  440ad2:	sbb    al,0x1f
  440ad4:	sub    eax,0xc14c2dfd
  440ad9:	add    bh,ch
  440adb:	xor    BYTE PTR [eax+0x4f],cl
  440ade:	mov    esi,0xafd298b9
  440ae3:	lods   eax,DWORD PTR ds:[esi]
  440ae4:	dec    eax
  440ae5:	add    esp,esi
  440ae7:	fwait
  440ae8:	mov    cl,0xba
  440aea:	repz jmp 0x9cc832d
  440af0:	push   esp
  440af1:	inc    eax
  440af2:	adc    al,0x26
  440af4:	out    dx,eax
  440af5:	lods   al,BYTE PTR ds:[esi]
  440af6:	not    BYTE PTR [edi+edx*8-0x56597d74]
  440afd:	popf   
  440afe:	addr16 pop ebp
  440b00:	popf   
  440b01:	out    dx,eax
  440b02:	mov    ebx,DWORD PTR [eax+0x7d08e3af]
  440b08:	(bad)  
  440b0a:	dec    edx
  440b0b:	xchg   ebp,eax
  440b0c:	pop    edx
  440b0d:	pop    ebp
  440b0e:	or     edx,ebx
  440b10:	adc    BYTE PTR [ebx],bl
  440b12:	adc    al,0x20
  440b14:	and    edx,DWORD PTR [esp+ebx*8]
  440b17:	enter  0x452a,0x7f
  440b1b:	fsubp  st(7),st
  440b1d:	mov    edi,0x2ec7e411
  440b22:	mov    eax,0x8cc92cd7
  440b27:	jbe    0x440af0
  440b29:	in     al,dx
  440b2a:	mov    bh,BYTE PTR [ebx+0x13]
  440b2d:	mov    ch,ch
  440b2f:	fsubr  DWORD PTR [ebx-0x1caf601b]
  440b35:	jmp    0xeeeccfc0
  440b3a:	mov    al,ds:0x9e1d2938
  440b3f:	js     0x440ad0
  440b41:	push   cs
  440b42:	pop    ebp
  440b43:	fisub  WORD PTR [edx+0x35a700dc]
  440b49:	push   0x75648d56
  440b4e:	in     al,0x12
  440b50:	mov    ds:0x2be9b659,eax
  440b55:	pushf  
  440b56:	sub    esp,DWORD PTR [esi]
  440b58:	loopne 0x440b2d
  440b5a:	add    DWORD PTR [ecx],edi
  440b5c:	ret    0xb0c9
  440b5f:	neg    DWORD PTR [ebx+eiz*4]
  440b62:	xchg   cl,dh
  440b64:	sbb    al,dh
  440b66:	add    al,0xea
  440b68:	push   es
  440b69:	(bad)  
  440b6a:	(bad)  
  440b6b:	sub    eax,0x8232b73b
  440b70:	xor    bh,BYTE PTR [ecx+esi*8]
  440b73:	mov    BYTE PTR [eax-0x6d92645d],al
  440b79:	lods   eax,DWORD PTR ds:[esi]
  440b7a:	jmp    0x33c0:0xf50597e2
  440b81:	dec    ebx
  440b82:	aad    0x28
  440b84:	dec    ecx
  440b85:	popa   
  440b86:	jmp    0x8935:0x6f9e2908
  440b8d:	add    BYTE PTR [ebp-0x5],dl
  440b90:	shr    DWORD PTR [eax],cl
  440b92:	push   ebx
  440b93:	add    al,0x95
  440b95:	test   ebx,0xe3dfad83
  440b9b:	cmp    al,0x17
  440b9d:	xor    BYTE PTR [ebx],bh
  440b9f:	test   BYTE PTR [edx+0x1bc73861],cl
  440ba5:	int3   
  440ba6:	push   edi
  440ba7:	xchg   edi,eax
  440ba8:	pop    ebp
  440ba9:	adc    eax,0x5cebcfa4
  440bae:	(bad)  
  440baf:	js     0x440bae
  440bb1:	adc    DWORD PTR [esi+esi*8],ecx
  440bb4:	jp     0x440ba4
  440bb6:	mov    dh,0x3d
  440bb8:	inc    edi
  440bb9:	push   0x37
  440bbb:	ins    BYTE PTR es:[edi],dx
  440bbc:	imul   eax,DWORD PTR [edx-0x35681764],0xa21ec1ab
  440bc6:	inc    ebx
  440bc7:	aad    0xec
  440bc9:	(bad)  
  440bca:	push   edx
  440bcb:	addr16 push ebp
  440bcd:	jge    0x440c2d
  440bcf:	fcmove st,st(4)
  440bd1:	sbb    eax,0x3fbbfa32
  440bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440bd7:	in     eax,0x5e
  440bd9:	cwde   
  440bda:	imul   esp,ecx,0x6b
  440bdd:	lock dec eax
  440bdf:	sbb    BYTE PTR [eax],dh
  440be1:	out    dx,eax
  440be2:	dec    ecx
  440be3:	in     eax,dx
  440be4:	mov    es,WORD PTR [esi+0x2863cbbc]
  440bea:	loop   0x440c65
  440bec:	add    DWORD PTR ds:[esi-0x62],ebp
  440bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440bf2:	mov    al,ds:0x3742d03a
  440bf7:	xchg   ebp,eax
  440bf8:	xor    ecx,DWORD PTR [edi]
  440bfa:	mov    ebx,0x3924adb7
  440bff:	mov    eax,ds:0xd09194
  440c04:	into   
  440c05:	mov    WORD PTR [ebp-0x59],di
  440c09:	sub    eax,0x111bfdf6
  440c0e:	dec    esi
  440c0f:	sbb    eax,0x986a28f4
  440c14:	mov    ebp,0x2b8680ff
  440c19:	test   al,0xcc
  440c1b:	shr    DWORD PTR [ecx-0x41],cl
  440c1e:	jmp    0x9855f1b7
  440c23:	pop    edi
  440c24:	es in  eax,dx
  440c26:	adc    al,0xdf
  440c28:	dec    eax
  440c29:	adc    DWORD PTR [eax-0x7b],edi
  440c2c:	dec    eax
  440c2d:	pop    ebp
  440c2e:	or     dl,bh
  440c30:	and    ebp,DWORD PTR [eax-0x1b]
  440c33:	pop    esi
  440c34:	adc    DWORD PTR [eax+0xbd51fff],0x42
  440c3b:	xchg   ecx,eax
  440c3c:	out    0xb5,eax
  440c3e:	jne    0x440c9e
  440c40:	or     eax,0xfdee8b38
  440c45:	jno    0x440c02
  440c47:	mov    ebp,0x3239e779
  440c4c:	adc    al,0xad
  440c4e:	mov    eax,ds:0xfa62b13c
  440c53:	add    eax,0xcf913971
  440c58:	push   esi
  440c59:	mov    edi,0xded0de25
  440c5e:	fcomp  DWORD PTR [ecx+esi*4+0x74]
  440c62:	outs   dx,DWORD PTR ds:[esi]
  440c63:	idiv   DWORD PTR [ecx+eax*2+0x3e]
  440c67:	retf   
  440c68:	fist   WORD PTR ds:0x7859426a
  440c6e:	(bad)  
  440c6f:	pop    ds
  440c70:	lds    eax,FWORD PTR [ebx-0x3a04aad6]
  440c76:	(bad)  
  440c77:	out    dx,al
  440c78:	adc    al,0xf
  440c7a:	stc    
  440c7b:	stc    
  440c7c:	popf   
  440c7d:	punpcklbw mm0,DWORD PTR [esi-0x14d4617c]
  440c84:	popa   
  440c85:	dec    ebx
  440c86:	mov    edx,0xa5a68199
  440c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440c8c:	pop    ss
  440c8d:	ds sahf 
  440c8f:	aas    
  440c90:	dec    esp
  440c91:	xor    BYTE PTR [edi],al
  440c93:	aaa    
  440c94:	cmp    al,dh
  440c96:	(bad)  
  440c97:	or     al,0x84
  440c99:	out    0xff,al
  440c9b:	dec    ebx
  440c9d:	mov    edi,DWORD PTR [eax]
  440c9f:	cmp    ah,BYTE PTR [edi+ebx*8]
  440ca2:	adc    edx,eax
  440ca4:	dec    eax
  440ca5:	cmp    al,0xa2
  440ca7:	xchg   esi,eax
  440ca8:	jns    0x440c6e
  440caa:	imul   ebx,DWORD PTR [ebp+edi*1+0x6e1f62c0],0x4f
  440cb2:	ja     0x440c6f
  440cb4:	out    0xf8,eax
  440cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440cb7:	mov    dh,0xd0
  440cb9:	inc    ecx
  440cba:	lods   eax,DWORD PTR ds:[esi]
  440cbb:	or     DWORD PTR [esi],ecx
  440cbd:	test   DWORD PTR ds:0x1b53d61,ecx
  440cc3:	cmp    al,0xc5
  440cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440cc6:	xchg   ecx,eax
  440cc7:	retf   
  440cc8:	lahf   
  440cc9:	sbb    bl,bl
  440ccb:	fwait
  440ccc:	rcr    edi,1
  440cce:	stos   BYTE PTR es:[edi],al
  440ccf:	lea    ecx,[edi-0x4c]
  440cd2:	adc    al,0xab
  440cd4:	es pop ecx
  440cd6:	mov    edx,0x9e3c3ab7
  440cdb:	in     eax,dx
  440cdc:	lods   eax,DWORD PTR ds:[esi]
  440cdd:	or     ah,bh
  440cdf:	idiv   BYTE PTR [ebp+eiz*1-0x16aadfb8]
  440ce6:	dec    esi
  440ce7:	and    DWORD PTR [ecx+0x41],ebx
  440cea:	into   
  440ceb:	cld    
  440cec:	xor    esi,ecx
  440cee:	repnz mov esp,0x2e67eac9
  440cf4:	mov    dl,0x3d
  440cf6:	pop    esi
  440cf7:	mov    ebx,0x9b162610
  440cfc:	lds    edi,FWORD PTR ds:0x6523b64d
  440d02:	xchg   esi,eax
  440d03:	jne    0x440d54
  440d05:	(bad)  ds:0x3e622c81
  440d0b:	fisubr DWORD PTR [edx+0x358e5f63]
  440d11:	mov    esi,esi
  440d13:	dec    esi
  440d14:	test   eax,0x8c134774
  440d19:	retf   
  440d1a:	add    eax,0x57eadee
  440d1f:	fwait
  440d20:	icebp  
  440d21:	adc    BYTE PTR [esi+0x758f080f],bl
  440d27:	lea    edx,[esi]
  440d29:	add    DWORD PTR [ebx+0x28],0xa125404e
  440d30:	and    DWORD PTR [ecx-0x37e94dfa],0x1584544a
  440d3a:	xchg   esp,eax
  440d3b:	pusha  
  440d3c:	leave  
  440d3d:	and    dh,bl
  440d3f:	ins    BYTE PTR es:[edi],dx
  440d40:	out    0xe0,eax
  440d42:	in     eax,0x46
  440d44:	sub    DWORD PTR [ebx-0x4d],0x20
  440d48:	xchg   esp,eax
  440d49:	push   eax
  440d4a:	fild   DWORD PTR [ebp+0x20]
  440d4d:	shl    BYTE PTR [ecx+0x36d68709],0x25
  440d54:	cli    
  440d55:	sub    ah,al
  440d57:	rcl    ah,0x71
  440d5a:	xchg   ecx,eax
  440d5b:	cli    
  440d5c:	push   eax
  440d5d:	cli    
  440d5e:	leave  
  440d5f:	ffreep st(7)
  440d61:	rcr    dh,1
  440d63:	arpl   WORD PTR [ebx+esi*1+0x2f23e4af],cx
  440d6a:	outs   dx,BYTE PTR ds:[esi]
  440d6b:	inc    esp
  440d6c:	jbe    0x440d75
  440d6e:	xor    eax,0xfc1ec2f1
  440d73:	in     al,0x31
  440d75:	mov    esp,0x1bbc3ced
  440d7a:	jmp    0x9c83:0xfc8f0fae
  440d81:	retf   
  440d82:	iret   
  440d83:	cmovbe ebx,DWORD PTR [ecx+eax*1+0x67]
  440d88:	mov    edx,0xe850cc11
  440d8d:	cmp    BYTE PTR [edx-0x20],dl
  440d90:	lock les ebx,FWORD PTR [ebx+0x4f]
  440d94:	shr    DWORD PTR [edi-0x50cdbfdb],0xee
  440d9b:	xor    BYTE PTR [ebx+0x55],0x85
  440d9f:	xor    bh,ah
  440da1:	push   edx
  440da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440da3:	pusha  
  440da4:	hlt    
  440da5:	iret   
  440da6:	stos   DWORD PTR es:[edi],eax
  440da7:	pusha  
  440da8:	lock movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  440dab:	arpl   WORD PTR [ecx],si
  440dad:	push   0xffffffce
  440daf:	div    DWORD PTR [ecx-0x3bee105d]
  440db5:	in     eax,dx
  440db6:	dec    eax
  440db7:	dec    esp
  440db8:	js     0x440d55
  440dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440dbb:	int3   
  440dbc:	fs mov bh,0xd5
  440dbf:	mov    ds:0xc959ce23,eax
  440dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440dc5:	scas   al,BYTE PTR es:[edi]
  440dc6:	out    dx,al
  440dc7:	cmp    cl,ah
  440dc9:	mov    bl,0x6a
  440dcb:	cmp    edx,esi
  440dcd:	test   al,0x8a
  440dcf:	pop    edi
  440dd0:	xchg   edi,eax
  440dd1:	(bad)  
  440dd2:	and    DWORD PTR [ecx-0x3d7d71b8],edi
  440dd8:	adc    ebx,DWORD PTR [esi+esi*4+0x22]
  440ddc:	lods   eax,DWORD PTR ds:[esi]
  440ddd:	in     eax,dx
  440dde:	mov    ds:0x63e34e7a,eax
  440de3:	or     al,0xe1
  440de5:	shr    BYTE PTR [edi-0x7a860c2c],cl
  440deb:	push   ebx
  440dec:	js     0x440e34
  440dee:	pop    ebx
  440def:	dec    edi
  440df0:	pop    ecx
  440df1:	in     al,0x99
  440df3:	gs dec esi
  440df5:	loop   0x440dbe
  440df7:	hlt    
  440df8:	and    bh,BYTE PTR [eax-0x37d04d83]
  440dfe:	repnz ins BYTE PTR es:[edi],dx
  440e00:	adc    eax,0xd1f00565
  440e05:	imul   edi,ecx,0xffffffbb
  440e08:	call   0xf114d9a
  440e0d:	xchg   esp,eax
  440e0e:	(bad)  
  440e0f:	jge    0x440daa
  440e11:	sub    eax,0x314abcf5
  440e16:	cld    
  440e17:	out    0xcb,al
  440e19:	fisubr DWORD PTR [eax+0x50]
  440e1c:	mov    cl,0xe2
  440e1e:	mov    eax,ds:0x9a93f93b
  440e23:	jbe    0x440dba
  440e25:	xchg   edi,eax
  440e26:	adc    DWORD PTR [ecx+eiz*2],ebp
  440e29:	mov    BYTE PTR [ebx-0x4a4fce4b],bh
  440e2f:	fld    DWORD PTR [edx+0x5614b329]
  440e35:	push   cs
  440e36:	imul   edx,DWORD PTR [eax+0x596268a3],0x15e0d33
  440e40:	pop    esp
  440e41:	pop    esi
  440e42:	popa   
  440e43:	leave  
  440e44:	je     0x440e4e
  440e46:	loop   0x440ebd
  440e48:	jae    0x440e61
  440e4a:	fild   WORD PTR [eax-0x71]
  440e4d:	and    esp,ebx
  440e4f:	daa    
  440e50:	jmp    0xb8db:0xf32e35d0
  440e57:	cli    
  440e58:	aam    0xc5
  440e5a:	jg     0x440ec6
  440e5c:	push   ds
  440e5d:	mov    bh,0x9
  440e5f:	mov    DWORD PTR ds:0x6477b695,esi
  440e65:	push   ebx
  440e66:	push   esi
  440e67:	daa    
  440e68:	xchg   ch,bh
  440e6a:	mov    cl,0x8a
  440e6c:	inc    eax
  440e6d:	dec    esp
  440e6e:	mov    dh,0xfd
  440e70:	in     eax,dx
  440e71:	dec    ebp
  440e72:	fisttp WORD PTR ds:0x70a1491f
  440e79:	fadd   st,st(0)
  440e7b:	jnp    0x440e7d
  440e7d:	mov    ecx,0xd9122cb9
  440e82:	inc    ecx
  440e83:	stos   BYTE PTR es:[edi],al
  440e84:	enter  0x3643,0x50
  440e88:	sub    esp,ecx
  440e8a:	sub    al,0xb6
  440e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440e8d:	cwde   
  440e8e:	aaa    
  440e8f:	jnp    0x440ec2
  440e91:	cmp    ecx,DWORD PTR [ebx+0x550919bf]
  440e97:	in     eax,dx
  440e98:	lahf   
  440e99:	shl    BYTE PTR [edi],cl
  440e9b:	imul   eax,ecx,0x10
  440e9e:	lea    edx,[esi+0x14]
  440ea1:	(bad)  
  440ea2:	fmul   DWORD PTR [edi+esi*2]
  440ea5:	add    ebp,DWORD PTR [ebx+0x6a]
  440ea8:	push   0x2b
  440eaa:	and    BYTE PTR [ebp-0x45],bl
  440ead:	sub    dh,BYTE PTR [eax-0x2b]
  440eb0:	inc    edx
  440eb1:	push   cs
  440eb2:	arpl   WORD PTR [edi],bp
  440eb4:	adc    edi,eax
  440eb6:	sub    BYTE PTR [ebx],dh
  440eb8:	mov    eax,0x2b76d92f
  440ebd:	sahf   
  440ebe:	mov    al,ds:0x60fcc79d
  440ec3:	sahf   
  440ec4:	xchg   ecx,eax
  440ec5:	mov    edi,0x88fcbe9e
  440eca:	iret   
  440ecb:	js     0x440e7b
  440ecd:	jae    0x440f17
  440ecf:	(bad)  
  440ed0:	gs loopne 0x440e5c
  440ed3:	pop    ss
  440ed4:	xor    eax,0x36e2b1e2
  440ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440eda:	sqrtps xmm4,XMMWORD PTR [ecx]
  440edd:	enter  0xf522,0x27
  440ee1:	in     eax,0x93
  440ee3:	mov    esi,DWORD PTR [edx]
  440ee5:	jne    0x440f4a
  440ee7:	pop    edi
  440ee8:	cmp    edx,DWORD PTR [ebx+0x11cd3ae]
  440eee:	jmp    0x290c:0x67f2e9cf
  440ef5:	stos   BYTE PTR es:[edi],al
  440ef6:	xchg   ebp,eax
  440ef7:	daa    
  440ef8:	push   ebp
  440ef9:	js     0x440e8c
  440efb:	mov    DWORD PTR [ecx],edi
  440efd:	sbb    edx,ecx
  440eff:	xchg   ecx,eax
  440f00:	push   0x16
  440f02:	add    dl,BYTE PTR [esi+0x5f5e9cd6]
  440f08:	or     ebp,esp
  440f0a:	xchg   edi,eax
  440f0b:	cld    
  440f0c:	cmp    al,0x57
  440f0e:	cmp    esp,ecx
  440f10:	popf   
  440f11:	jmp    0xe059:0xaf3d4800
  440f18:	xor    ah,BYTE PTR [ebp+0x2925f041]
  440f1e:	outs   dx,DWORD PTR ds:[esi]
  440f1f:	(bad)
  440f23:	cmp    edx,esi
  440f25:	lock shr BYTE PTR ds:0xc95040b5,1
  440f2c:	jecxz  0x440fab
  440f2e:	mov    ecx,0xbcb538cd
  440f33:	fs aam 0x8e
  440f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440f37:	dec    esi
  440f38:	shr    BYTE PTR [edi+0x6e1640db],1
  440f3e:	ds (bad) 
  440f40:	push   ss
  440f41:	sub    BYTE PTR [ecx+0x47],cl
  440f44:	je     0x440fbd
  440f46:	std    
  440f47:	stos   DWORD PTR es:[edi],eax
  440f48:	jmp    0x1244fb4
  440f4d:	daa    
  440f4e:	aaa    
  440f4f:	bswap  edx
  440f51:	xchg   edx,eax
  440f52:	xchg   esi,eax
  440f53:	ror    ch,1
  440f55:	ins    DWORD PTR es:[edi],dx
  440f56:	js     0x440f80
  440f58:	outs   dx,BYTE PTR ds:[esi]
  440f59:	xor    DWORD PTR [eax+0x159cafea],ecx
  440f5f:	ffree  st(6)
  440f61:	loope  0x440f24
  440f63:	ss sahf 
  440f65:	sub    eax,DWORD PTR [ebx+0x74d7dfb0]
  440f6b:	inc    esi
  440f6c:	jae    0x440efd
  440f6e:	rol    BYTE PTR [edx-0x20],0xc7
  440f72:	and    al,0xc2
  440f74:	gs (bad) 
  440f76:	push   DWORD PTR [ecx]
  440f78:	xchg   esi,eax
  440f79:	mov    ds:0xd0321955,eax
  440f7e:	shl    bh,cl
  440f80:	(bad)  
  440f81:	mov    edi,0xc34609e4
  440f86:	(bad)  [esi-0x65]
  440f89:	fsub   st(7),st
  440f8b:	pop    ss
  440f8c:	jb     0x440f4d
  440f8e:	and    edi,esi
  440f90:	push   edi
  440f91:	mov    dh,0x2c
  440f93:	shl    BYTE PTR [edx+0x23a32a31],0xd2
  440f9a:	ss cmp BYTE PTR ds:[eax-0x2d],cl
  440f9f:	sub    bl,BYTE PTR [ecx]
  440fa1:	in     eax,dx
  440fa2:	xchg   ebp,eax
  440fa3:	mov    ebx,0xa24775e2
  440fa8:	jbe    0x440f44
  440faa:	mov    bh,0x64
  440fac:	retf   
  440fad:	arpl   WORD PTR [ebx+0x34],ax
  440fb0:	mov    ch,0x12
  440fb2:	cwde   
  440fb3:	cmp    al,0xbb
  440fb5:	mov    ?,WORD PTR [edx+0x3e1eadb]
  440fbb:	dec    edx
  440fbc:	(bad)  
  440fbd:	stc    
  440fbe:	sub    eax,DWORD PTR [edx+eax*4+0x7b]
  440fc2:	lock ss std 
  440fc5:	hlt    
  440fc6:	outs   dx,DWORD PTR ds:[esi]
  440fc7:	cs push es
  440fc9:	push   0xffffffdc
  440fcb:	js     0x440ff0
  440fcd:	cmp    ebx,0x51
  440fd0:	lods   al,BYTE PTR ds:[esi]
  440fd1:	js     0x441035
  440fd3:	xor    edx,DWORD PTR [ebx+0x3ed74a84]
  440fd9:	jl     0x441048
  440fdb:	mov    eax,ds:0x29c19411
  440fe0:	mov    ecx,0xdd3ebd2
  440fe5:	dec    ecx
  440fe6:	(bad)  
  440fe7:	mov    DWORD PTR [ebx+edx*4-0x4a],edi
  440feb:	ins    DWORD PTR es:[edi],dx
  440fec:	into   
  440fed:	pop    ebp
  440fee:	pop    ebx
  440fef:	inc    esp
  440ff0:	push   eax
  440ff1:	cmp    BYTE PTR [esi],bl
  440ff3:	mov    cl,0x2f
  440ff5:	(bad)  
  440ff6:	jmp    0x440f93
  440ff8:	fisubr DWORD PTR [ebx-0x3b]
  440ffb:	test   ebp,esp
  440ffd:	into   
  440ffe:	(bad)  
  440fff:	cmp    al,0xd3
  441001:	jge    0x440ff3
  441003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441004:	fisubr DWORD PTR [ebx+ebx*4]
  441007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441008:	sub    eax,0x2dac359d
  44100d:	jmp    DWORD PTR [edx-0x2d]
  441010:	iret   
  441011:	lahf   
  441012:	mov    bh,0xe9
  441014:	into   
  441015:	and    al,BYTE PTR [ecx]
  441017:	stos   DWORD PTR es:[edi],eax
  441018:	int3   
  441019:	inc    edi
  44101a:	bound  edx,QWORD PTR [edi+0x5f]
  44101d:	inc    edx
  44101e:	aam    0x58
  441020:	enter  0x1a97,0x3c
  441024:	mov    dl,0x57
  441026:	adc    al,0x15
  441028:	xlat   BYTE PTR ds:[ebx]
  441029:	jmp    0xcb8c:0x545c1568
  441030:	fwait
  441031:	pop    edx
  441032:	add    DWORD PTR [edi+0x6c],eax
  441035:	lods   al,BYTE PTR ds:[esi]
  441036:	mov    al,ds:0x94e8f255
  44103b:	pop    es
  44103c:	push   es
  44103d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  44103f:	les    edi,FWORD PTR [edi-0xc72a64f]
  441045:	xchg   edx,eax
  441046:	cmp    eax,0xcb53f2db
  44104b:	leave  
  44104c:	dec    ebx
  44104d:	xor    BYTE PTR [ebp+0x3732dcae],bh
  441053:	(bad)  
  441054:	jp     0x44100c
  441056:	cmp    al,0xf9
  441058:	add    BYTE PTR [esi+eax*4],bl
  44105b:	add    eax,0x1535de85
  441060:	mov    ch,0xcf
  441062:	pop    ds
  441063:	icebp  
  441064:	xchg   esi,eax
  441065:	js     0x44103f
  441067:	pop    esp
  441068:	and    al,0x7f
  44106a:	nop
  44106b:	sbb    dl,BYTE PTR [esi+0x4e]
  44106e:	pop    esi
  44106f:	inc    eax
  441070:	mov    ecx,?
  441072:	repnz lahf 
  441074:	out    0xd,al
  441076:	or     dh,BYTE PTR [ecx-0x6b2cd224]
  44107c:	aad    0x41
  44107e:	inc    ecx
  44107f:	je     0x441100
  441081:	dec    ebp
  441082:	addr16 out dx,al
  441084:	xor    DWORD PTR [edi],ebp
  441086:	inc    edx
  441087:	mov    dh,0xec
  441089:	daa    
  44108a:	mov    ds:0x80ba61f4,al
  44108f:	mov    esp,DWORD PTR [edi]
  441091:	scas   eax,DWORD PTR es:[edi]
  441092:	sbb    eax,0xcb8fb9b9
  441097:	or     dh,BYTE PTR [edx+0x5d]
  44109a:	jbe    0x4410d6
  44109c:	sahf   
  44109d:	int3   
  44109e:	and    DWORD PTR [edx-0x13],ecx
  4410a1:	dec    edi
  4410a2:	sbb    edi,DWORD PTR ss:[eax]
  4410a5:	das    
  4410a6:	mov    esi,0x6cc54c93
  4410ab:	fs pusha 
  4410ad:	fidivr DWORD PTR [esi]
  4410af:	loop   0x4410d0
  4410b1:	dec    ecx
  4410b2:	xor    DWORD PTR ds:0xa103cf6f,esp
  4410b8:	sub    DWORD PTR [esi],eax
  4410ba:	mov    esp,0x5e2a5a58
  4410bf:	adc    dh,BYTE PTR [eax-0x3de7cedf]
  4410c5:	and    al,dl
  4410c7:	jne    0x441112
  4410c9:	jb     0x4410f9
  4410cb:	scas   al,BYTE PTR es:[edi]
  4410cc:	and    DWORD PTR [edi],esp
  4410ce:	mov    bh,BYTE PTR [edi-0xcde631c]
  4410d4:	ins    DWORD PTR es:[edi],dx
  4410d5:	or     eax,0x8210d8e0
  4410da:	mov    ah,0x87
  4410dc:	stos   BYTE PTR es:[edi],al
  4410dd:	repnz jecxz 0x4410e4
  4410e0:	lds    ecx,FWORD PTR [eax+0xb]
  4410e3:	sub    eax,0xb8c5e8ee
  4410e8:	sbb    cl,BYTE PTR [edi+0x5a]
  4410eb:	pop    ss
  4410ec:	dec    ebp
  4410ed:	fistp  DWORD PTR [ebp+ebp*1+0x8fb69d2]
  4410f4:	mov    bl,0xcd
  4410f6:	sub    BYTE PTR [ebx],cl
  4410f8:	popf   
  4410f9:	scas   eax,DWORD PTR es:[edi]
  4410fa:	test   al,0xa5
  4410fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4410fd:	mov    dl,0xe1
  4410ff:	xchg   ebx,eax
  441100:	sub    BYTE PTR [eax],ch
  441102:	pop    eax
  441103:	pop    es
  441104:	add    al,0x5f
  441106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441107:	js     0x44113d
  441109:	or     DWORD PTR [eax],ebp
  44110b:	test   ah,0x6e
  44110e:	jne    0x4410f8
  441110:	ja     0x44113c
  441112:	sbb    dl,BYTE PTR [edi-0x6fd28613]
  441118:	mov    ah,0xde
  44111a:	lock cmp BYTE PTR [esi+0xfcd4efd],0xfe
  441122:	scas   eax,DWORD PTR es:[edi]
  441123:	cmp    al,0x4f
  441125:	loopne 0x4410dc
  441127:	mov    al,0xfd
  441129:	sbb    eax,eax
  44112b:	popa   
  44112c:	aad    0x4e
  44112e:	pop    edx
  44112f:	push   ebx
  441130:	sbb    esp,esi
  441132:	(bad)  
  441133:	ins    BYTE PTR es:[edi],dx
  441134:	leave  
  441135:	xchg   esp,eax
  441136:	jnp    0x44110d
  441138:	enter  0x72a4,0x1
  44113c:	cmp    BYTE PTR [edx],dl
  44113e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44113f:	lock xor dh,BYTE PTR [ebx+0x16]
  441143:	sub    edx,ecx
  441145:	cmp    eax,0x25d5efc7
  44114a:	scas   eax,DWORD PTR es:[edi]
  44114b:	fist   DWORD PTR [esi]
  44114d:	outs   dx,DWORD PTR ds:[esi]
  44114e:	jae    0x4411c0
  441150:	jge    0x4411b1
  441152:	inc    esi
  441153:	sar    BYTE PTR [eax-0x6e19605f],0xe6
  44115a:	out    0x16,al
  44115c:	nop
  44115d:	push   cs
  44115e:	frstor [edx+0x2de962af]
  441164:	xor    DWORD PTR [ebp+0x44fd7b30],ecx
  44116a:	fdivr  DWORD PTR ds:0xfdec8603
  441170:	dec    edx
  441171:	dec    ebp
  441172:	sub    esp,DWORD PTR [eax-0x75]
  441175:	sbb    al,0xb3
  441177:	rcr    ah,0xf7
  44117a:	cs jns 0x441121
  44117d:	sbb    edi,DWORD PTR [ebx-0x3ef89fb4]
  441183:	add    DWORD PTR [ebp+0x5d38ddd7],esi
  441189:	stc    
  44118a:	xchg   DWORD PTR [edi-0x4c385317],ebp
  441190:	test   eax,0xa7f6df8d
  441195:	outs   dx,BYTE PTR ds:[esi]
  441196:	in     al,0x5a
  441198:	and    eax,esi
  44119a:	add    eax,DWORD PTR [esp+edx*8]
  44119d:	cmp    ebx,edx
  44119f:	fldcw  WORD PTR [edi+eax*8-0x27]
  4411a3:	popa   
  4411a4:	pop    ebx
  4411a5:	sbb    eax,0xfb7889dc
  4411aa:	mov    ch,0x67
  4411ac:	out    dx,eax
  4411ad:	push   esp
  4411ae:	pop    esi
  4411af:	fmul   st,st(6)
  4411b1:	(bad)
  4411b5:	cld    
  4411b6:	dec    esp
  4411b7:	adc    al,0x60
  4411b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4411ba:	sbb    eax,DWORD PTR [esi+ebp*1]
  4411bd:	fist   WORD PTR [edx+0x85d9f7a]
  4411c3:	les    eax,FWORD PTR [edx-0x71]
  4411c6:	push   ebp
  4411c7:	xchg   DWORD PTR [esp+eax*4+0x1c],edi
  4411cb:	jmp    0x7662b762
  4411d0:	dec    ebp
  4411d1:	xor    eax,0x566d792d
  4411d6:	gs xchg esi,eax
  4411d8:	xor    BYTE PTR [esi*1-0x10d6a116],al
  4411df:	push   es
  4411e0:	shl    BYTE PTR [ecx+0x348e6f48],0x49
  4411e7:	retf   0xfbb2
  4411ea:	adc    cl,bl
  4411ec:	int3   
  4411ed:	fdiv   st,st(7)
  4411ef:	inc    ecx
  4411f0:	pop    eax
  4411f1:	mov    ch,0xa2
  4411f3:	test   BYTE PTR [ecx+eax*4-0x30d05825],dl
  4411fa:	int    0xa8
  4411fc:	mov    eax,ds:0xa3aaf4a9
  441201:	jp     0x441230
  441203:	ss je  0x44126f
  441206:	pop    esi
  441207:	stc    
  441208:	xor    al,0xb4
  44120a:	mov    cs,WORD PTR [ebp-0x3f]
  44120d:	sti    
  44120e:	test   al,0xe1
  441210:	into   
  441211:	cmp    eax,0x23566e38
  441216:	fs call 0xad00:0xf7d52af3
  44121e:	fidiv  DWORD PTR [eax-0x19]
  441221:	stc    
  441222:	and    eax,edx
  441224:	jge    0x4411e6
  441226:	ss add eax,0x5633806b
  44122c:	and    al,0xc9
  44122e:	cs sbb ch,ch
  441231:	mov    ds:0x3b256dbc,eax
  441236:	ret    
  441237:	mov    esi,0xa6e9f3cf
  44123c:	shl    BYTE PTR [ecx-0x5026ad1d],cl
  441242:	rcr    BYTE PTR [esi+0x1b38ee06],1
  441248:	xor    bh,ch
  44124a:	or     eax,0x26d37c3c
  44124f:	stos   BYTE PTR es:[edi],al
  441250:	stos   BYTE PTR es:[edi],al
  441251:	xchg   ecx,eax
  441252:	fild   DWORD PTR [ebx+edi*8]
  441255:	iret   
  441256:	push   0x56
  441258:	mov    dl,0x98
  44125a:	cmp    DWORD PTR [ecx-0x52d123b3],edx
  441260:	dec    esp
  441261:	(bad)  
  441263:	bound  ebp,QWORD PTR [esp+ebx*4-0x5b4d3997]
  44126a:	mov    ds:0xbfc07ce6,eax
  44126f:	mov    bh,0x29
  441271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441273:	or     ah,BYTE PTR [ebp+0x77]
  441276:	pop    eax
  441277:	into   
  441278:	xchg   DWORD PTR [eax+0x1824770],edx
  44127e:	cli    
  44127f:	pop    DWORD PTR [ecx+0x58c9392b]
  441285:	sbb    DWORD PTR [edi],ecx
  441287:	jb     0x4412af
  441289:	or     edx,DWORD PTR [edx]
  44128b:	lock (bad) [ebx+0x55ff98d]
  441292:	fwait
  441293:	aam    0x58
  441295:	and    BYTE PTR [eax+esi*4],cl
  441298:	pop    esi
  441299:	pop    ecx
  44129a:	(bad)  
  44129c:	rol    DWORD PTR [eax-0x59],1
  44129f:	mov    edx,0xabf88fc1
  4412a4:	addr16 retf 0xf45a
  4412a8:	fist   WORD PTR [esp-0x47]
  4412ac:	loope  0x441251
  4412ae:	dec    esp
  4412af:	mov    eax,0xf662d22a
  4412b4:	and    BYTE PTR [esi],bh
  4412b6:	les    edi,FWORD PTR [edx+0x27641be3]
  4412bc:	mov    eax,ds:0xbed10a1f
  4412c1:	adc    DWORD PTR [edi-0x2989adcd],edx
  4412c7:	and    al,0xcf
  4412c9:	mov    bh,0x36
  4412cb:	or     DWORD PTR ds:0xea50fd1f,0xffffffce
  4412d2:	loop   0x44131d
  4412d4:	(bad)  
  4412d5:	mov    ds:0x10578b4c,eax
  4412da:	adc    dh,ah
  4412dc:	xor    ebx,DWORD PTR [esi+0x4a]
  4412df:	push   edx
  4412e0:	adc    ebp,esp
  4412e2:	lods   eax,DWORD PTR ds:[esi]
  4412e3:	(bad)  
  4412e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4412e5:	add    bh,BYTE PTR [ecx+0x20ec93b8]
  4412eb:	ret    
  4412ec:	add    bh,BYTE PTR [ebp+0xc75b295]
  4412f2:	cmp    BYTE PTR [edi+0x3251babd],ch
  4412f8:	inc    ebx
  4412f9:	sti    
  4412fa:	add    ah,BYTE PTR [edi+0x7d]
  4412fd:	ss xchg edi,eax
  4412ff:	pusha  
  441300:	or     BYTE PTR [ecx+0x48],ah
  441303:	outs   dx,BYTE PTR ds:[esi]
  441304:	enter  0xd486,0x50
  441308:	or     al,0x0
  44130a:	xor    ch,bh
  44130c:	add    BYTE PTR [ebp-0xf],dh
  44130f:	mov    eax,0xa30a5e5a
  441314:	daa    
  441315:	inc    esp
  441316:	xor    eax,0x218acef5
  44131b:	outs   dx,BYTE PTR ds:[esi]
  44131c:	jno    0x4412ee
  44131e:	das    
  44131f:	mov    ?,WORD PTR [edx-0x19f8308d]
  441325:	and    eax,0xe58884ce
  44132a:	pushf  
  44132b:	jno    0x441397
  44132d:	into   
  44132e:	inc    esi
  44132f:	adc    eax,0xdd820892
  441334:	mov    bh,0xd
  441336:	imul   ecx,DWORD PTR [esi+0x12],0xffffff97
  44133a:	or     eax,0x5cf7758d
  44133f:	aam    0x9c
  441341:	mov    edx,0xf155b23
  441346:	pop    eax
  441347:	pop    esp
  441349:	pop    ecx
  44134a:	sahf   
  44134b:	and    ebx,eax
  44134d:	pushf  
  44134e:	xor    BYTE PTR [ebp+0xeeec1c3],al
  441354:	mov    dl,0x72
  441356:	adc    esi,edx
  441358:	xlat   BYTE PTR ds:[ebx]
  441359:	dec    ecx
  44135a:	dec    ebp
  44135b:	pop    edi
  44135c:	and    DWORD PTR [edx+eiz*4-0x19],ecx
  441360:	test   DWORD PTR [edi-0x5e],0x73e9ac6d
  441367:	out    0x12,al
  441369:	fs adc al,0xe4
  44136c:	add    DWORD PTR [edx+0x7c],eax
  44136f:	pop    es
  441370:	loope  0x441387
  441372:	pop    es
  441373:	in     al,dx
  441374:	movq   mm0,mm0
  441377:	xor    bh,BYTE PTR [ecx+0x2dd6907f]
  44137d:	pusha  
  44137e:	mov    eax,ds:0x2b3b63fb
  441383:	sbb    al,0xa3
  441385:	in     al,dx
  441386:	push   0x6f8dafba
  44138b:	mov    al,0xf3
  44138d:	js     0x44131f
  44138f:	out    dx,al
  441390:	pop    es
  441391:	cmp    bl,BYTE PTR [edx-0x43a1ee31]
  441397:	pop    edx
  441398:	and    al,0x97
  44139a:	fadd   DWORD PTR [eax+0x62ff3607]
  4413a0:	xchg   esi,eax
  4413a1:	dec    esp
  4413a2:	inc    esi
  4413a3:	pop    eax
  4413a4:	sar    DWORD PTR [edx],1
  4413a6:	jo     0x44138e
  4413a8:	xchg   edi,eax
  4413a9:	push   edx
  4413aa:	popf   
  4413ab:	int    0x30
  4413ad:	ja     0x4413ac
  4413af:	mov    ecx,0xd3a2c882
  4413b4:	adc    ecx,ebp
  4413b6:	push   cs
  4413b7:	add    esi,DWORD PTR [edx-0x39]
  4413ba:	cld    
  4413bb:	xchg   esi,eax
  4413bc:	sbb    edx,DWORD PTR [edi+0x14]
  4413bf:	and    bl,BYTE PTR [edx-0x72]
  4413c2:	ds call 0x6331:0xadcf9e46
  4413ca:	push   ebx
  4413cb:	sahf   
  4413cc:	hlt    
  4413cd:	clc    
  4413ce:	retf   
  4413cf:	pop    ecx
  4413d0:	sbb    al,ah
  4413d2:	xchg   DWORD PTR [eax-0x16931920],esp
  4413d8:	sub    cl,bh
  4413da:	scas   eax,DWORD PTR es:[edi]
  4413db:	pop    esi
  4413dc:	popa   
  4413dd:	gs es cld 
  4413e0:	adc    ch,dl
  4413e2:	sahf   
  4413e3:	push   es
  4413e4:	jne    0x44139f
  4413e6:	xor    BYTE PTR [ecx],dl
  4413e8:	out    dx,al
  4413e9:	dec    esp
  4413ea:	mov    ch,0x8f
  4413ec:	aas    
  4413ed:	and    al,0xbc
  4413ef:	mov    ds:0xa0d9ed0d,al
  4413f4:	data16 in al,dx
  4413f6:	sti    
  4413f7:	pop    esi
  4413f8:	add    dh,BYTE PTR [ebx]
  4413fa:	das    
  4413fb:	or     ecx,edx
  4413fd:	sahf   
  4413fe:	sbb    BYTE PTR [ecx+0x649dafc4],bl
  441404:	mov    ah,0x6a
  441406:	inc    esi
  441407:	add    al,0xae
  441409:	or     bh,ch
  44140b:	jmp    0xacfe9e9d
  441410:	or     ebx,DWORD PTR [esi+0x23b9b62d]
  441416:	sbb    al,0x3a
  441418:	add    al,0x8f
  44141a:	das    
  44141b:	pop    es
  44141c:	std    
  44141d:	adc    eax,0x7f9f463f
  441422:	(bad)  [eax-0xf]
  441425:	shl    ecx,0x9e
  441428:	imul   ebx,DWORD PTR [esi],0xffffffb1
  44142b:	popa   
  44142c:	lods   al,BYTE PTR ds:[esi]
  44142d:	push   esp
  44142e:	gs pop ebx
  441430:	push   edi
  441431:	push   es
  441432:	sahf   
  441433:	inc    ebp
  441434:	jo     0x4413d9
  441436:	(bad)  
  441437:	and    al,0xe0
  441439:	and    al,0x5d
  44143b:	pushf  
  44143c:	jmp    0xf5ec:0xf01da5cd
  441443:	stos   DWORD PTR es:[edi],eax
  441444:	cwde   
  441445:	cli    
  441446:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  441448:	add    dl,BYTE PTR [eax+0x47bc7dd0]
  44144e:	les    edi,FWORD PTR [ebx+0x1602e127]
  441454:	mov    ss,WORD PTR [ebx+0xd]
  441457:	loop   0x4414be
  441459:	into   
  44145a:	push   ss
  44145b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44145c:	mov    al,ds:0x146e5ccc
  441461:	mov    BYTE PTR [edx+0x1a3cf79f],cl
  441467:	div    DWORD PTR [ecx-0x130788c2]
  44146d:	call   0x95ca:0x752154a0
  441474:	sub    DWORD PTR [edx-0x6b],edi
  441477:	sahf   
  441478:	shl    BYTE PTR [edx-0x74],1
  44147b:	xchg   ebp,eax
  44147c:	js     0x441455
  44147e:	adc    al,0xa0
  441480:	xor    al,0x5b
  441482:	inc    edi
  441483:	jbe    0x44147b
  441485:	call   FWORD PTR [ebx-0x38e43861]
  44148b:	push   ss
  44148c:	aad    0xaa
  44148e:	test   ecx,ecx
  441490:	call   0x7f56ddc2
  441495:	push   ecx
  441496:	or     eax,0x566e4b20
  44149b:	mov    al,ds:0xd058209e
  4414a0:	dec    edi
  4414a1:	dec    edx
  4414a2:	(bad)  
  4414a4:	rcr    DWORD PTR [ebx+eax*1-0x7b],1
  4414a8:	mov    ds:0x99c63e57,al
  4414ad:	fadd   QWORD PTR [edx+0x78b5a6bf]
  4414b3:	sar    BYTE PTR [ebx],0x8e
  4414b6:	scas   al,BYTE PTR es:[edi]
  4414b7:	stos   BYTE PTR es:[edi],al
  4414b8:	aad    0xf4
  4414ba:	and    al,0x2f
  4414bc:	cmp    eax,0x12978b8
  4414c1:	es retf 0x65a2
  4414c5:	cmp    al,0x65
  4414c7:	repz aaa 
  4414c9:	les    edi,FWORD PTR [eax-0x1d5b5053]
  4414cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4414d0:	int3   
  4414d1:	rcr    BYTE PTR [edi-0xb],1
  4414d4:	xchg   DWORD PTR [ecx],edi
  4414d6:	pop    ds
  4414d7:	adc    BYTE PTR [edx+0x7c],bl
  4414da:	ins    DWORD PTR es:[edi],dx
  4414db:	add    ah,BYTE PTR [ecx]
  4414dd:	xor    BYTE PTR [edi+edi*4],ah
  4414e0:	bound  ecx,QWORD PTR [edx-0x74]
  4414e3:	adc    al,0xbf
  4414e5:	sbb    ch,bl
  4414e7:	sahf   
  4414e8:	xor    al,0x6f
  4414ea:	stos   BYTE PTR es:[edi],al
  4414eb:	cmp    BYTE PTR ss:[edx+0x79],bl
  4414ef:	jmp    0xdda8a59
  4414f4:	xor    ebp,DWORD PTR [ebx]
  4414f6:	inc    bh
  4414f8:	xchg   ecx,eax
  4414f9:	dec    ebp
  4414fa:	dec    esp
  4414fb:	retf   0x596c
  4414fe:	jo     0x44153b
  441500:	jmp    0x44151d
  441502:	lea    esp,[ebp-0x11]
  441505:	cmc    
  441506:	xchg   edi,eax
  441507:	mov    esp,0xf3617916
  44150c:	xchg   BYTE PTR [ecx-0x23],al
  44150f:	mov    esi,0x31a8a1b0
  441514:	pop    ds
  441515:	cmp    BYTE PTR [ecx],dl
  441517:	lds    ecx,FWORD PTR [edi+ebp*8]
  44151a:	fsub   QWORD PTR [ebx-0x17a9348a]
  441520:	loope  0x441504
  441522:	aad    0x7c
  441524:	dec    ebp
  441525:	adc    al,0xda
  441527:	bound  esi,QWORD PTR cs:[eax]
  44152a:	push   ecx
  44152b:	hlt    
  44152c:	(bad)  
  44152e:	push   esi
  44152f:	aaa    
  441530:	out    0x7d,eax
  441532:	xchg   edi,eax
  441533:	push   ebx
  441534:	cs enter 0x7fb8,0xfb
  441539:	inc    esp
  44153a:	jb     0x4414cd
  44153c:	and    al,0x2a
  44153e:	or     al,0x9
  441540:	test   ecx,ebp
  441542:	or     al,0x74
  441544:	inc    ebx
  441545:	test   eax,0xf8dc1738
  44154a:	sbb    dh,bh
  44154c:	sbb    eax,0xbfa7c17f
  441551:	in     al,0x98
  441553:	mov    ch,0x66
  441555:	ins    DWORD PTR es:[edi],dx
  441556:	imul   edi,ecx,0x38bcaf0b
  44155c:	in     eax,0xe9
  44155e:	inc    esi
  44155f:	test   eax,0xb35271ef
  441564:	out    dx,al
  441565:	(bad)  
  441566:	(bad)  
  441567:	(bad)  ds:0x91973714
  44156d:	or     ecx,ebx
  44156f:	xchg   esi,eax
  441570:	fnsave [eax]
  441572:	(bad)  
  441573:	ffreep st(5)
  441575:	inc    edi
  441576:	imul   ebp,DWORD PTR [eax+esi*8-0x20],0x72
  44157b:	mov    ecx,0xf9712946
  441580:	mov    ds:0x95cc73f8,al
  441585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441586:	xor    BYTE PTR [ecx-0x1e76b3a8],ch
  44158c:	enter  0x1dba,0xd0
  441590:	jp     0x44154e
  441592:	push   eax
  441593:	add    ebx,DWORD PTR [edi+eiz*1+0x2b]
  441597:	stos   BYTE PTR es:[edi],al
  441598:	add    eax,0x6844429e
  44159d:	pop    es
  44159e:	jge    0x441552
  4415a0:	call   0x72c56bae
  4415a5:	aaa    
  4415a6:	outs   dx,BYTE PTR ds:[esi]
  4415a7:	imul   edi,eax,0xd8eb318e
  4415ad:	jnp    0x4415d7
  4415af:	xchg   DWORD PTR [ebx],ebx
  4415b1:	dec    edx
  4415b2:	jl     0x4415e3
  4415b4:	bound  ebp,QWORD PTR [ebp+0x1c91e9f0]
  4415ba:	sti    
  4415bb:	dec    ebx
  4415bc:	(bad)  
  4415bd:	ss xor eax,0x30698c95
  4415c3:	pop    ebx
  4415c4:	imul   edi,ebp,0xffffffb0
  4415c7:	xlat   BYTE PTR ds:[ebx]
  4415c8:	adc    DWORD PTR [edx],ebp
  4415ca:	jbe    0x44162e
  4415cc:	push   esi
  4415cd:	or     al,0x6e
  4415cf:	div    edx
  4415d1:	adc    BYTE PTR [ebp-0x64],ah
  4415d4:	mov    ds:0x97c69914,eax
  4415d9:	lods   al,BYTE PTR ds:[esi]
  4415da:	aam    0x68
  4415dc:	retf   0xc5ab
  4415df:	inc    ecx
  4415e0:	outs   dx,BYTE PTR ds:[esi]
  4415e1:	ret    
  4415e2:	mov    edx,0x4c578915
  4415e7:	call   0xa87e70f0
  4415ec:	mov    esi,DWORD PTR [ecx]
  4415ee:	sbb    DWORD PTR [ecx+0x54441db4],esi
  4415f4:	jecxz  0x44160f
  4415f6:	push   0x1fa47300
  4415fb:	scas   eax,DWORD PTR es:[edi]
  4415fc:	or     eax,0xd0e25275
  441601:	lock pop ecx
  441603:	and    BYTE PTR [ecx],cl
  441605:	rcl    DWORD PTR [edi-0x2966782f],0x49
  44160c:	icebp  
  44160d:	xor    edx,edi
  44160f:	(bad)  
  441610:	mov    esp,0x5b33541d
  441615:	sub    al,BYTE PTR [ebx]
  441617:	adc    ah,0xe2
  44161a:	cmp    bh,BYTE PTR [eax+0x1a]
  44161d:	outs   dx,BYTE PTR ds:[esi]
  44161e:	(bad)
  441621:	cmc    
  441622:	sub    eax,0xfec4c33d
  441627:	int3   
  441628:	popf   
  441629:	jecxz  0x44161d
  44162b:	xor    BYTE PTR [esi],ah
  44162d:	xchg   BYTE PTR [ebp-0x3b3ce464],ah
  441633:	pop    edi
  441634:	push   ecx
  441635:	push   ss
  441636:	dec    eax
  441637:	inc    esi
  441638:	and    ebx,ecx
  44163a:	std    
  44163b:	outs   dx,DWORD PTR ds:[esi]
  44163c:	fwait
  44163d:	xchg   ecx,eax
  44163e:	add    al,0xf5
  441640:	nop
  441641:	push   cs
  441642:	retf   0x5238
  441645:	sbb    dl,al
  441647:	pusha  
  441648:	enter  0xdac,0x4b
  44164c:	pop    esp
  44164d:	inc    ecx
  44164e:	add    ebp,DWORD PTR [edi+0x355c509d]
  441654:	xor    BYTE PTR [esp],bl
  441657:	popf   
  441658:	push   esi
  441659:	hlt    
  44165a:	addr16 cmp al,0xc9
  44165d:	bound  ebx,QWORD PTR [ebp-0x71a28be6]
  441663:	js     0x441600
  441665:	jb     0x44169e
  441667:	mov    eax,ds:0xa190b5db
  44166c:	xor    al,0xf8
  44166e:	xchg   edx,eax
  44166f:	xor    al,0x7f
  441671:	xor    al,ah
  441673:	loope  0x441607
  441675:	and    edx,edi
  441677:	and    edx,DWORD PTR [ebx-0x7d]
  44167a:	adc    eax,0x2fcd7531
  44167f:	mov    ebp,0x90274e63
  441684:	fnsave [esi+0x5a]
  441687:	adc    ah,0x39
  44168a:	into   
  44168b:	jmp    0xb944:0xb1d8de09
  441692:	or     dl,dh
  441694:	cs daa 
  441696:	pop    edx
  441697:	sub    DWORD PTR [ecx-0x5040dc55],eax
  44169d:	adc    eax,0x7cfa5af1
  4416a2:	adc    edi,ebx
  4416a4:	lds    esi,FWORD PTR ds:0x3f965206
  4416aa:	inc    edx
  4416ab:	outs   dx,BYTE PTR ds:[esi]
  4416ac:	enter  0x5558,0xcf
  4416b0:	(bad)  
  4416b1:	pmaddwd mm0,QWORD PTR [esi-0x6e9df16d]
  4416b8:	sahf   
  4416b9:	add    al,0xa3
  4416bb:	adc    esp,DWORD PTR [eax-0x4c]
  4416be:	call   0x818e66d2
  4416c3:	jbe    0x441648
  4416c5:	pop    es
  4416c6:	mov    esp,0x890ee7a5
  4416cb:	addr16 pushf 
  4416cd:	and    cl,BYTE PTR ds:0x577c3ea1
  4416d3:	cmp    esi,esp
  4416d5:	sbb    al,0x94
  4416d7:	push   0x3
  4416d9:	(bad)  ds:0x6ee983c6
  4416df:	(bad)  
  4416e0:	rcl    ebp,1
  4416e2:	pusha  
  4416e3:	cdq    
  4416e4:	adc    al,0x24
  4416e6:	push   ss
  4416e7:	rol    cl,1
  4416e9:	rcr    DWORD PTR [esi],1
  4416eb:	inc    edi
  4416ec:	adc    ecx,edx
  4416ee:	mov    ah,0xe1
  4416f0:	add    al,0xf
  4416f2:	(bad)  
  4416f3:	cmp    dl,cl
  4416f5:	or     al,0x92
  4416f7:	add    eax,0x126a41d8
  4416fc:	xchg   edx,eax
  4416fd:	cs xor eax,0x1f9b513c
  441703:	imul   edx,DWORD PTR [esi-0x708c88fa],0xffffffae
  44170a:	sbb    BYTE PTR [esi+0x1f],bl
  44170d:	xchg   edi,eax
  44170e:	aam    0x1e
  441710:	mov    ah,0x31
  441712:	mov    edx,0x264a0a7e
  441717:	in     eax,0xa
  441719:	inc    ecx
  44171a:	(bad)  
  44171b:	mov    ebp,0x13a32ae2
  441720:	shl    BYTE PTR [eax+0x37],cl
  441723:	push   ss
  441724:	rcr    DWORD PTR [ebp-0x72],1
  441727:	sbb    al,0xcd
  441729:	stos   BYTE PTR es:[edi],al
  44172a:	int3   
  44172b:	mov    bl,0x6e
  44172d:	inc    ebx
  44172e:	stc    
  44172f:	fwait
  441730:	into   
  441731:	or     eax,0xfbae7b40
  441736:	mov    bl,0xcc
  441738:	int    0x6b
  44173a:	fidiv  WORD PTR [edx]
  44173c:	in     al,dx
  44173d:	sbb    ebx,DWORD PTR [ebp+0x5f2a9af9]
  441743:	push   esp
  441744:	pop    ds
  441745:	dec    edi
  441746:	int3   
  441747:	add    BYTE PTR [ecx-0x3a],dh
  44174a:	aaa    
  44174b:	mov    al,0x5e
  44174d:	(bad)  
  44174e:	fdivr  DWORD PTR [esi-0x5b]
  441751:	dec    esi
  441752:	sti    
  441753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441754:	jno    0x441774
  441756:	(bad)  
  441758:	dec    ebx
  441759:	cmp    edx,DWORD PTR [edi+0x21]
  44175c:	push   eax
  44175d:	mov    eax,0xffbc6253
  441762:	jmp    0x4417b6
  441764:	cmp    DWORD PTR [ebx-0x1a5ac33a],esi
  44176a:	repnz lea edx,[esi+0x42b85cef]
  441771:	push   esp
  441772:	pop    ebp
  441773:	jl     0x4417ea
  441775:	mov    bl,0xd
  441777:	push   cs
  441778:	leave  
  441779:	or     DWORD PTR [edi],ecx
  44177b:	adc    eax,0xfb2b95bb
  441780:	sbb    dl,BYTE PTR [ebp+edi*1-0x66]
  441784:	fcom   DWORD PTR [eax+edx*4-0x73b775d1]
  44178b:	jl     0x441738
  44178d:	sahf   
  44178e:	ret    0xaade
  441791:	jecxz  0x4417ed
  441793:	inc    ecx
  441794:	add    BYTE PTR [esi-0x45],ah
  441797:	dec    edx
  441798:	xor    al,0xd1
  44179a:	jno    0x441789
  44179c:	cdq    
  44179d:	bound  edx,QWORD PTR [ecx+0x6017c2f7]
  4417a3:	into   
  4417a4:	pop    ebx
  4417a5:	jge    0x441754
  4417a7:	and    al,0xcd
  4417a9:	add    ebp,eax
  4417ab:	and    ebp,DWORD PTR ds:0x90edd28e
  4417b1:	xor    eax,0xaee3c148
  4417b6:	ins    DWORD PTR es:[edi],dx
  4417b7:	and    al,0x52
  4417b9:	jecxz  0x44181d
  4417bb:	push   0xfffffff8
  4417bd:	repz xchg ebx,eax
  4417bf:	jmp    0x44179b
  4417c1:	mov    ds,WORD PTR [eax]
  4417c3:	sbb    al,0xfe
  4417c5:	cli    
  4417c6:	sbb    DWORD PTR [eax+0x49],edi
  4417c9:	out    dx,al
  4417ca:	xor    esp,esp
  4417cc:	xor    BYTE PTR [edx],0x89
  4417cf:	xchg   ebp,eax
  4417d0:	sbb    al,0x70
  4417d2:	js     0x441769
  4417d4:	leave  
  4417d5:	xor    eax,0x5f4d572e
  4417da:	xlat   BYTE PTR ds:[ebx]
  4417db:	cmp    al,0x75
  4417dd:	(bad)  
  4417de:	call   0x8d48:0xdabe60c2
  4417e5:	or     BYTE PTR [edx+0x15],ch
  4417e8:	push   0xfe635fae
  4417ed:	iret   
  4417ee:	cmp    ebp,edx
  4417f0:	pop    ds
  4417f1:	nop
  4417f2:	xor    eax,0x70abb173
  4417f7:	xchg   esi,eax
  4417f8:	fisub  DWORD PTR [ecx]
  4417fa:	mov    ecx,0xaf03a108
  4417ff:	adc    edx,DWORD PTR [esi]
  441801:	(bad)  
  441802:	sbb    ecx,DWORD PTR [ecx+0x5a]
  441805:	scas   eax,DWORD PTR es:[edi]
  441806:	pop    ss
  441807:	repnz sub cl,BYTE PTR [eax]
  44180a:	daa    
  44180b:	mov    ch,0x3d
  44180d:	(bad)  
  44180e:	clc    
  44180f:	js     0x4417c5
  441811:	and    dl,BYTE PTR [eax+0x72]
  441814:	push   esp
  441815:	sbb    DWORD PTR cs:[esi-0x69],ebp
  441819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44181a:	pop    esp
  44181b:	std    
  44181c:	pop    ds
  44181d:	cmp    eax,0x6bbf624c
  441822:	lods   eax,DWORD PTR ds:[esi]
  441823:	push   0xc3e0dc99
  441828:	xchg   edi,eax
  441829:	js     0x4417d2
  44182b:	add    eax,DWORD PTR [ecx+ecx*1]
  44182e:	std    
  44182f:	fwait
  441830:	(bad)  
  441831:	jl     0x4417f4
  441833:	push   ebp
  441834:	push   eax
  441835:	hlt    
  441836:	pop    edx
  441837:	arpl   WORD PTR [ebp+0x66],ax
  44183a:	iret   
  44183b:	xor    al,0x43
  44183d:	jae    0x441898
  44183f:	(bad)  
  441841:	clc    
  441842:	mov    bh,0x9a
  441844:	or     BYTE PTR [ecx],dl
  441846:	cmp    esi,DWORD PTR [ebp+0x24ed821b]
  44184c:	push   ebp
  44184d:	lods   al,BYTE PTR ds:[esi]
  44184e:	jmp    0x44185f
  441850:	out    dx,al
  441851:	lods   eax,DWORD PTR ds:[esi]
  441852:	pushf  
  441853:	aad    0xbb
  441855:	scas   al,BYTE PTR es:[edi]
  441856:	adc    ch,ch
  441858:	call   0x5fb84518
  44185d:	addr16 dec esi
  44185f:	inc    edi
  441860:	fistp  WORD PTR [edi+ecx*1+0x5e]
  441864:	div    dh
  441866:	ret    
  441867:	pop    esp
  441868:	jae    0x44187d
  44186a:	aad    0x95
  44186c:	jne    0x441844
  44186e:	les    ebx,FWORD PTR [ecx-0x7953f52]
  441874:	and    eax,DWORD PTR [esi]
  441876:	mov    eax,ds:0x3ac60d84
  44187b:	mov    ebx,0x485332a1
  441880:	and    ch,BYTE PTR [esi+0xc74e6b3]
  441886:	sbb    ah,0x50
  441889:	xor    dh,BYTE PTR [ecx-0x65]
  44188c:	aas    
  44188d:	mov    ?,WORD PTR [esi+ecx*8+0x79]
  441891:	inc    ecx
  441892:	imul   esi,DWORD PTR [ebx],0x48
  441895:	pop    edi
  441896:	push   ds
  441897:	xchg   ebx,eax
  441898:	lods   eax,DWORD PTR ds:[esi]
  441899:	(bad)  
  44189a:	mov    edx,0xd337bbc
  44189f:	push   esi
  4418a0:	pop    ebp
  4418a1:	lea    ebp,[ebx-0x66]
  4418a4:	in     al,dx
  4418a5:	pop    edi
  4418a6:	push   edx
  4418a7:	fimul  WORD PTR [ecx]
  4418a9:	dec    esp
  4418aa:	mov    bh,0x76
  4418ac:	lahf   
  4418ad:	inc    eax
  4418ae:	mov    eax,DWORD PTR [ebp-0x4f]
  4418b1:	xor    BYTE PTR [edi*8-0x60fea810],ch
  4418b8:	rol    BYTE PTR [ebx-0x18],cl
  4418bb:	mov    al,0x4b
  4418bd:	mov    ds:0xe71895df,al
  4418c2:	je     0x441906
  4418c4:	inc    esp
  4418c5:	mov    cl,0xdb
  4418c7:	mov    al,ds:0x8307acf3
  4418cc:	loopne 0x4418ba
  4418ce:	fxam   
  4418d0:	sub    BYTE PTR [esi-0x72],dl
  4418d3:	retf   
  4418d4:	or     bh,bh
  4418d6:	add    BYTE PTR [eax],0xbc
  4418d9:	lods   al,BYTE PTR ds:[esi]
  4418da:	pusha  
  4418db:	xor    cl,ch
  4418dd:	pop    edx
  4418de:	sti    
  4418df:	loope  0x4418e7
  4418e1:	jo     0x441959
  4418e3:	inc    ebx
  4418e4:	dec    edi
  4418e5:	das    
  4418e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4418e7:	lods   eax,DWORD PTR ds:[esi]
  4418e8:	jge    0x4418c4
  4418ea:	jae    0x44190b
  4418ec:	push   esi
  4418ed:	(bad)  [eax-0x58c8503f]
  4418f3:	pop    es
  4418f4:	scas   al,BYTE PTR es:[edi]
  4418f5:	scas   al,BYTE PTR es:[edi]
  4418f6:	outs   dx,DWORD PTR ds:[esi]
  4418f7:	leave  
  4418f8:	pop    ecx
  4418f9:	jg     0x441976
  4418fb:	sub    esp,DWORD PTR [eax+edi*1-0x7b667d3f]
  441902:	pusha  
  441903:	nop
  441904:	enter  0x6573,0x66
  441908:	pop    esi
  441909:	or     al,0x31
  44190b:	cld    
  44190c:	lods   eax,DWORD PTR ds:[esi]
  44190d:	mov    dl,0x48
  44190f:	cwde   
  441910:	pop    ebx
  441911:	pop    ecx
  441912:	mov    dl,0xf0
  441914:	xchg   DWORD PTR [ecx+0x30264733],ebx
  44191a:	mov    ah,0xf9
  44191c:	pop    ebx
  44191d:	js     0x441964
  44191f:	and    edi,esp
  441921:	in     eax,0x32
  441923:	clc    
  441924:	call   0xb9c23ec
  441929:	pop    ebp
  44192a:	into   
  44192b:	fisttp WORD PTR [esi]
  44192d:	jnp    0x441973
  44192f:	sbb    DWORD PTR [eax],esp
  441931:	jp     0x441970
  441933:	dec    esi
  441934:	mov    al,0xba
  441936:	inc    edi
  441937:	add    DWORD PTR [esi+0x7d],ebx
  44193a:	adc    ebp,DWORD PTR [eax-0x1c08471e]
  441940:	lods   al,BYTE PTR ds:[esi]
  441941:	mov    al,ds:0x8cf12985
  441946:	pushf  
  441947:	cmp    DWORD PTR [edx],edi
  441949:	enter  0xc448,0xbd
  44194d:	push   ebx
  44194e:	lock or al,0xa4
  441951:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  441953:	cmc    
  441954:	sti    
  441955:	leave  
  441956:	xchg   DWORD PTR [ecx+ebp*8-0x20],edi
  44195a:	pusha  
  44195b:	repz and BYTE PTR [eax+edx*1+0x76],ch
  441960:	es or  edi,edi
  441963:	push   ecx
  441964:	and    edi,ebx
  441966:	pop    eax
  441967:	push   ss
  441968:	mov    edi,0x57ad0d70
  44196e:	jno    0x441971
  441970:	jnp    0x44194e
  441972:	jno    0x4419ec
  441974:	inc    edx
  441975:	iret   
  441976:	jno    0x441993
  441978:	in     eax,dx
  441979:	adc    DWORD PTR [ecx+0x2130f567],ebp
  44197f:	jmp    0x441978
  441981:	sub    al,0xcb
  441983:	mov    DWORD PTR [esi],edx
  441985:	push   0xecaf3dc3
  44198a:	mov    eax,0x6cdddea1
  44198f:	(bad)
  441992:	mov    dh,0xb7
  441994:	je     0x441922
  441996:	and    bh,dl
  441998:	pop    ebp
  441999:	adc    eax,0xeba6557
  44199e:	es and ah,al
  4419a1:	arpl   WORD PTR [edi],dx
  4419a3:	dec    esi
  4419a4:	scas   eax,DWORD PTR es:[edi]
  4419a5:	ins    BYTE PTR es:[edi],dx
  4419a6:	call   0xfd92e4e9
  4419ab:	mov    WORD PTR [eax-0x14],es
  4419ae:	and    eax,0xb5550225
  4419b3:	ja     0x4419f9
  4419b5:	mov    esi,0x9e9d05ed
  4419ba:	mov    cl,0x96
  4419bc:	dec    ebx
  4419bd:	xor    DWORD PTR [ebx+0x14add2a3],0xa262890e
  4419c7:	pop    esi
  4419c8:	xor    cl,BYTE PTR [eax]
  4419ca:	adc    bl,bh
  4419cc:	jnp    0x4419af
  4419ce:	stos   DWORD PTR es:[edi],eax
  4419cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4419d0:	enter  0x212a,0x1a
  4419d4:	daa    
  4419d5:	or     DWORD PTR [ecx+ecx*1-0x468a894f],esp
  4419dc:	push   es
  4419dd:	dec    DWORD PTR [ebp+0x1c]
  4419e0:	cmp    al,0x75
  4419e2:	es div bh
  4419e5:	es mov edi,0x3dfc9a20
  4419eb:	stc    
  4419ec:	sti    
  4419ed:	pop    ecx
  4419ee:	and    BYTE PTR [ecx+0x20091f25],al
  4419f4:	push   ecx
  4419f5:	test   al,0x29
  4419f7:	fistp  WORD PTR [edx+eiz*2+0x0]
  4419fb:	xchg   ebx,eax
  4419fc:	mov    dh,0x94
  4419fe:	xchg   esp,eax
  4419ff:	xor    al,0x70
  441a01:	lods   al,BYTE PTR ds:[esi]
  441a02:	cdq    
  441a03:	mov    al,0x41
  441a05:	or     ecx,esp
  441a07:	xor    BYTE PTR [edi+0x7cab3120],ah
  441a0d:	sbb    esi,edx
  441a0f:	pop    eax
  441a10:	rol    BYTE PTR [eax+0x436b3e86],1
  441a16:	stos   BYTE PTR es:[edi],al
  441a17:	dec    ebp
  441a18:	sub    cl,BYTE PTR [edi]
  441a1a:	xor    al,0xfe
  441a1c:	(bad)  
  441a1d:	jg     0x4419d3
  441a1f:	push   ss
  441a20:	(bad)  
  441a21:	mov    al,ds:0x75e6cf6
  441a26:	mov    ecx,0x25ced2f2
  441a2b:	fcmovnbe st,st(0)
  441a2d:	(bad)  
  441a2e:	fmul   st,st(6)
  441a30:	add    al,0x5d
  441a32:	and    eax,0x3bb10f19
  441a37:	cmp    edx,ebx
  441a39:	ds xor al,0x20
  441a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a3d:	sahf   
  441a3e:	loop   0x4419de
  441a40:	sbb    eax,0x5a9edd57
  441a45:	push   esi
  441a46:	mov    ecx,0x8a1402be
  441a4b:	outs   dx,BYTE PTR ds:[esi]
  441a4c:	xor    edx,ebp
  441a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a4f:	xchg   edi,eax
  441a50:	sub    edx,DWORD PTR [edx]
  441a52:	push   eax
  441a53:	inc    eax
  441a55:	addr16 das 
  441a57:	(bad)  
  441a59:	mov    BYTE PTR [edx+0x62951c98],dh
  441a5f:	jmp    0xa14bcb1d
  441a64:	les    eax,FWORD PTR [edi+esi*2-0x63bd4763]
  441a6b:	push   esi
  441a6c:	sbb    edi,DWORD PTR [edx-0x53]
  441a6f:	push   ecx
  441a70:	or     bl,BYTE PTR [ebp+0x6f771f76]
  441a76:	retf   
  441a77:	mov    eax,0xa29fd01
  441a7c:	xchg   esi,eax
  441a7d:	push   es
  441a7e:	ss xchg esp,eax
  441a80:	imul   ecx,edx,0x5fc30c1b
  441a86:	add    bl,BYTE PTR [ecx]
  441a88:	mov    dl,0x60
  441a8a:	pop    edi
  441a8b:	mov    esi,0x8135b57d
  441a90:	(bad)  
  441a91:	cmp    dl,BYTE PTR ds:0xc99590f6
  441a97:	cmp    al,0xe4
  441a99:	mov    esi,0xf42e4681
  441a9e:	test   al,0x6
  441aa0:	sub    ah,BYTE PTR [ecx]
  441aa2:	pop    ebx
  441aa3:	inc    eax
  441aa4:	nop    DWORD PTR [esi+0x27cc97cd]
  441aab:	ja     0x441af2
  441aad:	(bad)  
  441aae:	dec    esi
  441aaf:	mov    eax,0xe49ead11
  441ab4:	adc    al,0x5
  441ab6:	pop    eax
  441ab7:	fcmovnbe st,st(7)
  441ab9:	xchg   ecx,eax
  441aba:	lea    ecx,[edi]
  441abc:	mov    ah,0x86
  441abe:	out    0xf7,eax
  441ac0:	xchg   esp,eax
  441ac1:	mov    ch,0x75
  441ac3:	clc    
  441ac4:	and    edi,esp
  441ac6:	sub    al,0xb6
  441ac8:	(bad)  
  441ac9:	mov    ds:0xe7a900f8,eax
  441ace:	stos   BYTE PTR es:[edi],al
  441acf:	aas    
  441ad0:	mov    eax,ds:0x7b8ef363
  441ad5:	ret    0xfa46
  441ad8:	jecxz  0x441a96
  441ada:	stos   BYTE PTR es:[edi],al
  441adb:	pop    eax
  441adc:	cmp    al,0x9f
  441ade:	and    al,0xa4
  441ae0:	jo     0x441ac1
  441ae2:	fwait
  441ae3:	in     al,dx
  441ae4:	mov    bl,0x1c
  441ae6:	sub    ch,BYTE PTR [edx]
  441ae8:	sbb    BYTE PTR [esi+0x6],0x8d
  441aec:	jg     0x441b20
  441aee:	cmp    esp,DWORD PTR [ecx-0x1f3898d]
  441af4:	sbb    bl,BYTE PTR [ebx+0x23]
  441af7:	dec    ebp
  441af8:	inc    ebp
  441af9:	mov    edx,0x9c969961
  441afe:	sti    
  441aff:	inc    eax
  441b00:	loopne 0x441b1a
  441b02:	leave  
  441b03:	nop
  441b04:	cmp    DWORD PTR [ecx],esp
  441b06:	mov    DWORD PTR [ecx-0x26174049],esi
  441b0c:	repz or DWORD PTR [esi-0x45],ecx
  441b10:	sub    BYTE PTR [ebp+0x2cd8bf2e],ch
  441b16:	adc    eax,0xddb8588e
  441b1b:	pop    ds
  441b1c:	mov    dh,0x60
  441b1e:	popf   
  441b1f:	pop    eax
  441b20:	ins    BYTE PTR es:[edi],dx
  441b21:	jae    0x441aaf
  441b23:	mov    ds:0xe3ae96bc,al
  441b28:	push   ss
  441b29:	lods   al,BYTE PTR ds:[esi]
  441b2a:	pop    ecx
  441b2b:	bound  ebx,QWORD PTR ds:0x1c1e5a1a
  441b31:	mov    edx,fs
  441b33:	repz sub edx,ebx
  441b36:	push   ecx
  441b37:	mov    BYTE PTR [ebx],al
  441b39:	dec    esp
  441b3a:	mov    cl,0x5e
  441b3c:	(bad)  
  441b3d:	push   esi
  441b3e:	(bad)  
  441b3f:	mov    eax,0x846e6c86
  441b44:	sbb    BYTE PTR [edx],ch
  441b46:	xchg   ebp,eax
  441b47:	push   es
  441b48:	mov    ebp,0x4e4f55bc
  441b4d:	pushf  
  441b4e:	cmp    BYTE PTR [ecx+eax*8+0x306b0067],al
  441b55:	adc    eax,DWORD PTR [ecx+0x3a]
  441b58:	dec    ebx
  441b59:	or     eax,0xdf8fc415
  441b5e:	xchg   esi,eax
  441b5f:	add    ebp,DWORD PTR [eax]
  441b61:	(bad)  
  441b62:	(bad)  
  441b64:	es out dx,al
  441b66:	adc    eax,0x49d84be2
  441b6b:	sbb    dh,BYTE PTR [eax+0x3a538920]
  441b71:	aad    0xa4
  441b73:	push   ds
  441b74:	jg     0x441b89
  441b76:	jecxz  0x441b3a
  441b78:	data16 xchg BYTE PTR [edi+0x5c],dl
  441b7c:	scas   al,BYTE PTR es:[edi]
  441b7d:	inc    edx
  441b7e:	pop    ds
  441b7f:	jp     0x441bf4
  441b81:	inc    eax
  441b82:	dec    cx
  441b84:	dec    edi
  441b85:	fiadd  DWORD PTR [edx-0xb963f6d]
  441b8b:	xchg   BYTE PTR [esi],ch
  441b8d:	and    al,0x83
  441b8f:	adc    DWORD PTR gs:[edi+edi*8],ecx
  441b93:	xor    eax,0x7c665316
  441b98:	xchg   ebx,eax
  441b99:	test   eax,edi
  441b9b:	out    dx,eax
  441b9c:	pop    ds
  441b9d:	xor    ebx,DWORD PTR [esp+edi*2+0x56]
  441ba1:	and    bl,BYTE PTR [edi]
  441ba3:	out    0x84,eax
  441ba5:	je     0x441c06
  441ba7:	test   esi,eax
  441ba9:	test   BYTE PTR [edx-0x56bc329d],cl
  441baf:	mov    gs,WORD PTR [ecx-0x2e]
  441bb2:	add    edx,ebx
  441bb4:	iret   
  441bb5:	cwde   
  441bb6:	fs scas al,BYTE PTR es:[edi]
  441bb8:	iret   
  441bb9:	cdq    
  441bba:	stc    
  441bbb:	sbb    DWORD PTR [ecx-0x739de134],ecx
  441bc1:	mov    bh,0xd1
  441bc3:	xchg   esi,eax
  441bc4:	sub    al,dh
  441bc6:	add    DWORD PTR [edi],edx
  441bc8:	fcomp  DWORD PTR ds:0xcf13fca8
  441bce:	lods   eax,DWORD PTR ds:[esi]
  441bcf:	dec    esi
  441bd0:	and    DWORD PTR [ebx-0x7834a64a],ebx
  441bd6:	xor    ecx,DWORD PTR [eax]
  441bd8:	sbb    DWORD PTR [edi],eax
  441bda:	das    
  441bdb:	or     eax,0xcc0721a1
  441be0:	pop    edi
  441be1:	mov    ah,0x2
  441be3:	cmp    eax,0x4c816ef0
  441be8:	push   DWORD PTR [ecx]
  441bea:	add    al,0xaf
  441bec:	pop    esp
  441bed:	push   edx
  441bee:	ins    DWORD PTR es:[edi],dx
  441bef:	popf   
  441bf0:	xchg   edx,eax
  441bf1:	pop    es
  441bf2:	or     dh,BYTE PTR [edx-0x5e]
  441bf5:	push   eax
  441bf6:	pop    edi
  441bf7:	cmp    eax,0x831c40b
  441bfc:	cli    
  441bfd:	jp     0x441bab
  441bff:	add    al,0xc4
  441c01:	dec    edi
  441c02:	(bad)  
  441c03:	imul   ebp,DWORD PTR [eax+0x3],0x77
  441c07:	push   0x374a25d3
  441c0c:	xor    bp,WORD PTR [ecx+0x23506a70]
  441c13:	(bad)  
  441c15:	pushf  
  441c16:	lods   al,BYTE PTR ds:[esi]
  441c17:	or     eax,0x34fc5033
  441c1c:	push   ds
  441c1d:	sbb    DWORD PTR [esi+ebp*8],ebx
  441c20:	mov    ds:0x8220beac,eax
  441c25:	pop    esi
  441c26:	imul   ecx,DWORD PTR [edx-0x6db12a78],0x3e
  441c2d:	test   ecx,edx
  441c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441c30:	pop    edx
  441c31:	icebp  
  441c32:	fwait
  441c33:	adc    al,0x2b
  441c35:	leave  
  441c36:	ret    0x2522
  441c39:	mov    ?,esi
  441c3b:	sub    DWORD PTR [edi-0x2f],ebx
  441c3e:	mov    al,0x65
  441c40:	and    esi,edi
  441c42:	sbb    BYTE PTR [esi-0x33],ah
  441c45:	jo     0x441c8b
  441c47:	mov    bl,bh
  441c49:	and    dl,BYTE PTR [ebp-0x18210a9a]
  441c4f:	mov    ds:0xf2c84995,eax
  441c54:	inc    esi
  441c55:	or     ch,BYTE PTR [ecx+0x7eb7c303]
  441c5b:	mov    edi,0xe7ff2247
  441c60:	jae    0x441c83
  441c62:	jecxz  0x441cba
  441c64:	add    ebp,DWORD PTR [esi+0x648b5a32]
  441c6a:	int3   
  441c6b:	dec    eax
  441c6c:	inc    ebp
  441c6d:	add    ch,ah
  441c6f:	mov    edi,0xd3403715
  441c74:	scas   eax,DWORD PTR es:[edi]
  441c75:	sbb    dl,BYTE PTR [esi+0x664e19f9]
  441c7b:	ror    DWORD PTR [edx-0x7e],0x10
  441c7f:	cmp    esi,eax
  441c81:	fcomp  st(5)
  441c83:	pop    ss
  441c84:	and    dh,BYTE PTR [ecx+edi*8-0x5f]
  441c88:	outs   dx,DWORD PTR ds:[esi]
  441c89:	imul   edx,DWORD PTR [ecx],0xe11e9655
  441c8f:	jb     0x441cb5
  441c91:	sub    eax,DWORD PTR [eax-0x6feda286]
  441c97:	xchg   ebx,eax
  441c98:	jl     0x441c37
  441c9a:	out    dx,al
  441c9b:	mov    WORD PTR [ebx+0x34c791b7],?
  441ca1:	pushw  ds
  441ca3:	out    dx,al
  441ca4:	(bad)  
  441ca5:	shl    DWORD PTR [edx],cl
  441ca7:	push   es
  441ca8:	test   BYTE PTR [ebx],0xe8
  441cab:	or     esp,edx
  441cad:	shl    DWORD PTR [edx],cl
  441caf:	nop
  441cb0:	push   DWORD PTR [esi]
  441cb2:	mov    esi,0x5e333185
  441cb7:	xor    cl,bh
  441cb9:	push   ds
  441cba:	outs   dx,BYTE PTR ds:[esi]
  441cbb:	add    al,0xa7
  441cbd:	push   esi
  441cbe:	icebp  
  441cbf:	jg     0x441ca3
  441cc1:	imul   ebx,edi,0x4d
  441cc4:	test   eax,0x1b0d6d70
  441cc9:	ins    DWORD PTR es:[edi],dx
  441cca:	(bad)  
  441ccb:	fcom   DWORD PTR [eax+0x5a]
  441cce:	and    eax,DWORD PTR [esi]
  441cd0:	adc    edi,DWORD PTR [esi-0x78]
  441cd3:	ja     0x441d4d
  441cd5:	cmp    eax,0xe80317b
  441cda:	xchg   esp,eax
  441cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441cdc:	pushf  
  441cdd:	mov    ecx,0x6496d163
  441ce2:	adc    DWORD PTR [edi+0x5142f441],ebx
  441ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441ce9:	ins    BYTE PTR es:[edi],dx
  441cea:	imul   edi,DWORD PTR [esi+0x7c518981],0x6a49282c
  441cf4:	inc    eax
  441cf5:	imul   ecx,DWORD PTR ds:0xafe62c1e,0x38a5ebcf
  441cff:	or     eax,0x5e488ca7
  441d04:	mov    bh,0x42
  441d06:	inc    ecx
  441d07:	fs xchg ebx,eax
  441d09:	inc    esp
  441d0a:	xor    esi,eax
  441d0c:	fcom   st(1)
  441d0e:	sbb    DWORD PTR [ecx+0x14c35e44],edx
  441d14:	(bad)  
  441d15:	push   cs
  441d16:	dec    ecx
  441d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441d18:	je     0x441d93
  441d1a:	outs   dx,DWORD PTR ds:[esi]
  441d1b:	jg     0x441ce5
  441d1d:	jmp    0x441cf9
  441d1f:	mov    al,ds:0xd38204ed
  441d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441d25:	arpl   WORD PTR ds:0x454b608a,bx
  441d2b:	fild   WORD PTR [edi-0xe6a9b48]
  441d31:	and    bl,ch
  441d33:	outs   dx,DWORD PTR ds:[esi]
  441d34:	pop    ebx
  441d35:	scas   eax,DWORD PTR es:[edi]
  441d36:	or     bh,BYTE PTR [ebp-0x76]
  441d39:	add    bh,BYTE PTR [esi-0x7ca57475]
  441d3f:	clc    
  441d40:	fdivr  DWORD PTR [edx]
  441d42:	pop    ds
  441d43:	shr    DWORD PTR [edi-0x7b925b97],cl
  441d49:	jnp    0x441d40
  441d4b:	call   0x6bd82f1a
  441d50:	pop    ss
  441d51:	into   
  441d52:	fild   WORD PTR [ecx]
  441d54:	test   BYTE PTR [eax+0x2e64ca41],bh
  441d5a:	xchg   DWORD PTR [ebx+0x3b367e30],ebp
  441d60:	int    0x8f
  441d62:	mov    ds:0xdc0c9a7f,eax
  441d67:	dec    esp
  441d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441d69:	inc    ecx
  441d6a:	push   es
  441d6b:	popf   
  441d6c:	out    0xc4,eax
  441d6e:	leave  
  441d6f:	fbld   TBYTE PTR [esi]
  441d71:	cwde   
  441d72:	jecxz  0x441dc1
  441d74:	add    BYTE PTR [edi],ah
  441d76:	pop    esi
  441d77:	mov    cl,0x5a
  441d79:	ret    
  441d7a:	test   edx,esi
  441d7c:	enter  0xcb2c,0x79
  441d80:	jnp    0x441d19
  441d82:	sbb    bh,BYTE PTR [esi*4+0x597f4d99]
  441d89:	jmp    FWORD PTR ds:0xfbb4d6a6
  441d8f:	and    BYTE PTR [ebx+ebx*1+0x2f],dl
  441d93:	pop    esi
  441d94:	ja     0x441d21
  441d96:	xchg   BYTE PTR [esi+0x50],bl
  441d99:	jmp    0x22378e2f
  441d9e:	and    DWORD PTR [edi+0x57db11e7],0x2
  441da5:	cmp    BYTE PTR [eax+0x11],cl
  441da8:	out    dx,al
  441da9:	mov    ebx,0x6b7db30
  441dae:	out    0x9d,eax
  441db0:	mov    ds:0x9a4ef5c6,al
  441db5:	pushf  
  441db6:	dec    esp
  441db7:	cld    
  441db8:	call   0xe1a37b4b
  441dbd:	(bad)  
  441dbe:	mov    al,0xbe
  441dc0:	call   0x7c6fc121
  441dc5:	dec    edx
  441dc6:	(bad)  
  441dc7:	into   
  441dc8:	les    ebx,FWORD PTR [ebx-0x2aa91a54]
  441dce:	stos   BYTE PTR es:[edi],al
  441dcf:	adc    bh,BYTE PTR [edi+0x3]
  441dd2:	add    cl,BYTE PTR [eax+0x45]
  441dd5:	loop   0x441e2a
  441dd7:	and    al,0xa
  441dd9:	sahf   
  441dda:	pop    esp
  441ddb:	jae    0x441d62
  441ddd:	push   esp
  441dde:	mov    esp,0xad0545e6
  441de3:	out    0xf5,al
  441de5:	jns    0x441ded
  441de7:	or     eax,0x47e27ba0
  441dec:	mov    ah,0x5f
  441dee:	leave  
  441def:	cwde   
  441df0:	ret    0x45f6
  441df3:	pop    ecx
  441df4:	jno    0x441dd0
  441df6:	sti    
  441df7:	test   ebp,edx
  441df9:	pop    ecx
  441dfa:	inc    esi
  441dfb:	pop    ebx
  441dfc:	add    eax,0x36183670
  441e01:	(bad)  
  441e02:	popf   
  441e03:	xor    DWORD PTR [edi-0x7db42891],0xbdaeb89a
  441e0d:	mov    bl,0x89
  441e0f:	inc    esp
  441e10:	jo     0x441dde
  441e12:	dec    esi
  441e13:	(bad)  
  441e14:	xor    BYTE PTR [ecx-0x6f4275e9],bh
  441e1a:	into   
  441e1b:	sub    ch,dh
  441e1d:	jmp    0xb3c21a78
  441e22:	clc    
  441e23:	pop    ecx
  441e24:	mov    eax,0x3b25c7de
  441e29:	mov    eax,0xcc0182f9
  441e2e:	stc    
  441e2f:	add    eax,0xa555d892
  441e34:	das    
  441e35:	pop    edi
  441e36:	pop    ds
  441e37:	inc    ecx
  441e38:	in     eax,dx
  441e39:	pop    edx
  441e3a:	es ins BYTE PTR es:[edi],dx
  441e3c:	or     cl,BYTE PTR [eax-0x2c]
  441e3f:	lods   eax,DWORD PTR ds:[esi]
  441e40:	idiv   DWORD PTR ds:0xfe4ffcf4
  441e46:	cmp    ebx,DWORD PTR [edi+0x75]
  441e49:	xchg   edx,eax
  441e4a:	jmp    0x441e4d
  441e4c:	out    0x1a,eax
  441e4e:	js     0x441e9e
  441e50:	outs   dx,BYTE PTR ds:[esi]
  441e51:	mov    edx,0x5f4d70d7
  441e56:	hlt    
  441e57:	cmp    eax,0xc65dd433
  441e5d:	xlat   BYTE PTR ds:[ebx]
  441e5e:	test   BYTE PTR [ebp-0x5e],dh
  441e61:	popf   
  441e62:	outs   dx,DWORD PTR ds:[esi]
  441e63:	add    eax,0x4d5bc75c
  441e68:	push   ecx
  441e69:	imul   esp,DWORD PTR [edi-0x26],0xfffffff9
  441e6d:	fincstp 
  441e6f:	dec    ebp
  441e70:	inc    ebx
  441e71:	mov    dh,0x33
  441e73:	mov    bl,0x1e
  441e75:	mov    bl,0xdc
  441e77:	sti    
  441e78:	sub    al,0x80
  441e7a:	ja     0x441e92
  441e7c:	or     eax,0x3e17b5dc
  441e81:	je     0x441e7a
  441e83:	imul   eax,DWORD PTR [esi-0x39317f45],0x3cf79a4d
  441e8d:	and    DWORD PTR [edi],0xffffff99
  441e90:	pop    edi
  441e91:	and    ebp,DWORD PTR [ebx+eax*1+0x15]
  441e95:	mov    eax,0x892d650c
  441e9a:	or     eax,0xd2da900f
  441e9f:	xor    BYTE PTR [esi],0xe6
  441ea2:	hlt    
  441ea3:	mov    ebp,0x8a6d260e
  441ea8:	test   al,0x6b
  441eaa:	cmp    eax,DWORD PTR [edx-0x2a]
  441ead:	ret    
  441eae:	fwait
  441eaf:	adc    BYTE PTR [edx],0xb2
  441eb2:	test   BYTE PTR [edx+0x14064a46],al
  441eb8:	or     eax,0x324fdb01
  441ebd:	push   0x13965308
  441ec2:	xlat   BYTE PTR ds:[ebx]
  441ec3:	out    0x82,al
  441ec5:	cmp    eax,0x11571743
  441eca:	xchg   esp,eax
  441ecb:	(bad)  
  441ecc:	bound  edi,QWORD PTR [ebp+0x27d9601b]
  441ed2:	xlat   BYTE PTR ds:[ebx]
  441ed3:	mov    bh,0xe8
  441ed5:	push   cs
  441ed6:	int3   
  441ed7:	cli    
  441ed8:	bound  esp,QWORD PTR [esi-0x1f475a30]
  441ede:	test   BYTE PTR [ecx+0x36],al
  441ee1:	mov    edi,0xd552038f
  441ee6:	aam    0x8d
  441ee8:	inc    esp
  441ee9:	ins    DWORD PTR es:[edi],dx
  441eea:	daa    
  441eeb:	xor    eax,0x7a7b0275
  441ef0:	(bad)  [eax+0x79d97733]
  441ef6:	dec    edx
  441ef7:	les    edx,FWORD PTR [edi+ebp*2+0x69a7212f]
  441efe:	div    DWORD PTR [ebx-0x51]
  441f01:	mov    al,ds:0x676cfd2
  441f06:	pop    ds
  441f07:	adc    al,0x66
  441f09:	xor    BYTE PTR [ebx+0x5aed085b],bl
  441f0f:	jmp    0x8715:0x3a86230c
  441f16:	enter  0x7998,0xc
  441f1a:	inc    ebp
  441f1b:	add    ebp,0x32
  441f1e:	loop   0x441f21
  441f20:	ds mov ebx,?
  441f23:	dec    ebp
  441f24:	call   0x5640:0xfa71baf5
  441f2b:	cmp    DWORD PTR [ecx+0x6b],eax
  441f2e:	pop    edi
  441f2f:	arpl   si,dx
  441f31:	dec    DWORD PTR [eax]
  441f33:	(bad)  ds:0x4c708ba2
  441f39:	loope  0x441f61
  441f3b:	add    eax,0xf150e4e7
  441f40:	mov    ds:0x4b42bde2,al
  441f45:	popa   
  441f46:	sbb    ebp,eax
  441f48:	in     eax,0xc0
  441f4a:	cmc    
  441f4b:	xor    edi,DWORD PTR [ebp+0x3fe0f422]
  441f51:	jl     0x441ee6
  441f53:	outs   dx,DWORD PTR ds:[esi]
  441f54:	std    
  441f55:	adc    al,BYTE PTR [esi+0x5904068e]
  441f5b:	push   ebx
  441f5c:	fwait
  441f5d:	aam    0xa
  441f5f:	jmp    DWORD PTR [eax]
  441f61:	ja     0x441f22
  441f63:	test   BYTE PTR [edx],al
  441f65:	jne    0x441f15
  441f67:	mov    ebx,0x47c4e0d7
  441f6c:	lods   al,BYTE PTR ds:[esi]
  441f6d:	jmp    0xaf3b9f93
  441f72:	and    DWORD PTR [ecx+0x51],esp
  441f75:	(bad)  
  441f76:	(bad)  
  441f77:	cmp    eax,0x35d1f845
  441f7c:	pusha  
  441f7d:	mov    ebp,0x3c8803d6
  441f82:	jecxz  0x441f95
  441f84:	mov    dl,0x91
  441f86:	hlt    
  441f87:	scas   eax,DWORD PTR es:[di]
  441f89:	dec    esi
  441f8a:	das    
  441f8b:	sub    DWORD PTR [ecx+eiz*8-0x2a],edx
  441f8f:	(bad)
  441f92:	mov    WORD PTR [ebp-0x17],fs
  441f95:	outs   dx,DWORD PTR ds:[esi]
  441f96:	int    0x27
  441f98:	mov    ecx,0x1757df41
  441f9d:	and    eax,0x98ec1a94
  441fa2:	ins    BYTE PTR es:[edi],dx
  441fa3:	xor    DWORD PTR [esi],ebp
  441fa5:	lods   eax,DWORD PTR ds:[esi]
  441fa6:	mov    bh,0xda
  441fa8:	rcr    BYTE PTR [ecx],0x49
  441fab:	jb     0x441f70
  441fad:	jp     0x441fed
  441faf:	cmp    edi,DWORD PTR [edi+0x359d3f52]
  441fb5:	ss fwait
  441fb7:	mov    DWORD PTR [edx],edx
  441fb9:	int3   
  441fba:	jmp    0x6acc:0xac33926f
  441fc1:	mov    bh,0xce
  441fc3:	sbb    eax,0x54aaaac
  441fc8:	(bad)  
  441fc9:	std    
  441fca:	add    dh,dl
  441fcc:	xchg   DWORD PTR [ecx-0x80],esp
  441fcf:	xchg   DWORD PTR [ecx],ecx
  441fd1:	dec    ebx
  441fd2:	outs   dx,DWORD PTR ds:[esi]
  441fd3:	sub    edi,DWORD PTR ds:0xc6478902
  441fd9:	dec    edi
  441fda:	mov    ds:0xf54a149f,al
  441fdf:	adc    BYTE PTR [eax+0x51],ah
  441fe2:	jmp    0x441f6a
  441fe4:	scas   eax,DWORD PTR es:[edi]
  441fe5:	ror    BYTE PTR [edx-0x4d],1
  441fe8:	lds    esi,FWORD PTR [edi+edx*1-0x3]
  441fec:	loop   0x441fe8
  441fee:	lods   eax,DWORD PTR ds:[esi]
  441fef:	test   dl,bl
  441ff1:	or     ch,cl
  441ff3:	and    DWORD PTR [ebx+0x65],ebp
  441ff6:	lods   al,BYTE PTR ds:[esi]
  441ff7:	icebp  
  441ff8:	cmp    al,ch
  441ffa:	mov    esp,0x387c3763
  441fff:	test   ah,dl
  442001:	arpl   sp,bp
  442003:	jle    0x44204f
  442005:	enter  0xd642,0xed
  442009:	adc    BYTE PTR [esi+0x32083b34],dh
  44200f:	pop    esi
  442010:	or     DWORD PTR [eax+eiz*4-0x5ece0891],0xd
  442018:	mov    al,ds:0xc6b3eb07
  44201d:	dec    edi
  44201e:	call   0x82b6:0x2719c9bc
  442025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442026:	mov    ah,0xe1
  442028:	push   esp
  442029:	icebp  
  44202a:	retf   
  44202b:	not    esi
  44202d:	fnstcw WORD PTR [eax-0x7cd3fbf7]
  442033:	add    esp,esi
  442035:	pop    es
  442036:	cwde   
  442037:	pop    ebp
  442038:	xor    DWORD PTR [edi+ebp*4-0x35],0x10
  44203d:	cmc    
  44203e:	lods   al,BYTE PTR ds:[esi]
  44203f:	xor    eax,0xb1cf29b7
  442044:	pop    eax
  442045:	pop    eax
  442046:	out    dx,al
  442047:	out    0xa6,eax
  442049:	or     eax,0xa474085
  44204e:	lods   al,BYTE PTR ds:[esi]
  44204f:	xchg   edi,eax
  442050:	ins    DWORD PTR es:[edi],dx
  442051:	outs   dx,BYTE PTR ds:[esi]
  442052:	aam    0x84
  442054:	mov    ds:0x41f92fa6,al
  442059:	aam    0x9c
  44205b:	fild   QWORD PTR [ebx+0x70b5b906]
  442061:	or     al,0x94
  442063:	xchg   DWORD PTR [ebp-0x7],ebp
  442066:	loop   0x4420e2
  442068:	cmp    eax,0xa0a6ddb0
  44206d:	inc    esp
  44206e:	adc    eax,0xbb78aaaf
  442073:	dec    edi
  442074:	and    DWORD PTR [eax],edx
  442076:	xor    al,0xb6
  442078:	sbb    eax,DWORD PTR [edi+ecx*1]
  44207b:	push   esp
  44207c:	push   edx
  44207d:	add    edi,DWORD PTR [eax]
  44207f:	adc    ch,BYTE PTR [esi+ebp*1-0x23ae385b]
  442086:	push   ds
  442087:	data16 test BYTE PTR [edi],bh
  44208a:	fild   WORD PTR es:[ebx-0x76a21454]
  442091:	xchg   edi,eax
  442092:	and    eax,0x7a7c2e7f
  442097:	lea    eax,[esi-0x5215cf6d]
  44209d:	xor    al,0xff
  44209f:	inc    edi
  4420a0:	sti    
  4420a1:	jb     0x442040
  4420a3:	(bad)  [ebx+0x46]
  4420a6:	sbb    cl,BYTE PTR [ecx]
  4420a8:	add    bh,BYTE PTR [edx-0x6b54b17c]
  4420ae:	sub    BYTE PTR [ebp-0x782e09b2],bh
  4420b4:	sbb    cl,dl
  4420b6:	mov    bh,BYTE PTR [ecx+0x3c]
  4420b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4420ba:	and    al,0x47
  4420bc:	scas   eax,DWORD PTR es:[edi]
  4420bd:	sub    al,0xcd
  4420bf:	jecxz  0x4420f6
  4420c1:	inc    edi
  4420c2:	sar    DWORD PTR ss:[esi-0x24],0xe9
  4420c7:	ins    DWORD PTR es:[edi],dx
  4420c8:	mov    al,0x19
  4420ca:	repz (bad) 
  4420cc:	and    BYTE PTR [ecx],cl
  4420ce:	jb     0x44205d
  4420d0:	xlat   BYTE PTR ds:[ebx]
  4420d1:	rcl    DWORD PTR [edi+0x61fd2eea],1
  4420d7:	mov    esp,0xeb931035
  4420dc:	outs   dx,BYTE PTR ds:[esi]
  4420dd:	add    BYTE PTR [edi+edx*1-0x38],dh
  4420e1:	fwait
  4420e2:	inc    esi
  4420e3:	(bad)  
  4420e4:	jp     0x4420ed
  4420e6:	inc    DWORD PTR [esi+0x62]
  4420e9:	xchg   edi,eax
  4420ea:	add    ebp,0xffffffef
  4420ed:	pop    ebp
  4420ee:	sbb    eax,0xa980dfbe
  4420f3:	sub    edi,DWORD PTR [esi+edx*1-0x869e866]
  4420fa:	retf   
  4420fb:	pop    esi
  4420fc:	ins    BYTE PTR es:[edi],dx
  4420fd:	arpl   WORD PTR [edi+eiz*8-0x16db8f84],ax
  442104:	adc    dh,BYTE PTR [edx+0x1f]
  442107:	(bad)  
  442108:	nop
  442109:	lea    ebx,[edi+0x2ee5aa87]
  44210f:	and    dh,BYTE PTR [esi-0x1b]
  442112:	and    bl,bl
  442114:	sbb    BYTE PTR [edi+eiz*1-0x74],ch
  442118:	int3   
  442119:	xchg   ebp,eax
  44211a:	jg     0x44215e
  44211c:	and    dl,BYTE PTR [edx]
  44211e:	mov    WORD PTR [eax-0x511e0c6c],gs
  442124:	pop    ebx
  442125:	cld    
  442126:	pop    es
  442127:	lea    ebx,[eax+ebp*2-0x1f351a10]
  44212e:	fidivr DWORD PTR [esi+0x4f7764de]
  442134:	xor    al,BYTE PTR [edi+0x1a]
  442137:	scas   al,BYTE PTR es:[edi]
  442138:	in     al,dx
  442139:	push   0x13
  44213b:	ins    BYTE PTR es:[edi],dx
  44213c:	mov    fs,esp
  44213e:	out    dx,al
  44213f:	xor    BYTE PTR [ecx+0xa3244e4],0xb5
  442146:	retf   0xae49
  442149:	gs scas eax,DWORD PTR es:[edi]
  44214b:	rcr    BYTE PTR gs:[eiz*2+0x688db842],cl
  442153:	sbb    edi,DWORD PTR [eax-0x162d9999]
  442159:	dec    ebp
  44215a:	(bad)  
  44215b:	jmp    0x8ba8ac96
  442160:	mov    ch,0x94
  442162:	or     ebx,DWORD PTR [ecx]
  442164:	sub    DWORD PTR [edi-0x3],0x1df65083
  44216b:	xchg   esp,eax
  44216c:	dec    ebx
  44216d:	call   0x407e1003
  442172:	add    esi,DWORD PTR [edi+0x3888a9c5]
  442178:	dec    edx
  442179:	mov    al,0xef
  44217b:	sbb    ah,BYTE PTR [edx-0x20a87735]
  442181:	inc    esp
  442182:	inc    ecx
  442183:	lock (bad) 
  442185:	xchg   ebx,eax
  442186:	mov    bl,0xad
  442188:	pop    es
  442189:	pop    esp
  44218a:	cdq    
  44218b:	imul   DWORD PTR [edx-0x117892a7]
  442191:	jmp    DWORD PTR [esi+0x693de72b]
  442197:	and    edi,DWORD PTR [eax+0x0]
  44219a:	xor    cl,BYTE PTR [esp+ebp*2-0x78]
  44219e:	pop    esp
  44219f:	cmp    DWORD PTR [eax-0x72ad0bf7],edx
  4421a5:	mov    eax,ds:0x43a969fa
  4421aa:	xchg   esp,eax
  4421ab:	scas   eax,DWORD PTR es:[edi]
  4421ac:	inc    edi
  4421ad:	mov    ch,0x63
  4421af:	sti    
  4421b0:	stos   BYTE PTR es:[edi],al
  4421b1:	mov    ecx,0xe14ac581
  4421b6:	mov    esi,0x6cf2677a
  4421bb:	cwde   
  4421bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4421bd:	arpl   WORD PTR [ebp+0x28537507],ax
  4421c3:	inc    esp
  4421c4:	dec    edx
  4421c5:	imul   ecx
  4421c7:	mov    al,ds:0x89404f0
  4421cc:	outs   dx,BYTE PTR ds:[esi]
  4421cd:	pop    edx
  4421ce:	xchg   bx,ax
  4421d0:	dec    edi
  4421d1:	iret   
  4421d2:	adc    BYTE PTR [edi+ecx*2],bh
  4421d5:	test   DWORD PTR [ecx+0x19394398],esi
  4421db:	sub    al,0xfe
  4421dd:	xchg   esp,eax
  4421de:	xlat   BYTE PTR ds:[ebx]
  4421df:	rol    cl,1
  4421e1:	cmove  esi,eax
  4421e4:	mov    dl,0x68
  4421e6:	sbb    eax,0xf0048fd6
  4421eb:	retf   
  4421ec:	adc    eax,0xfb443d75
  4421f1:	pushf  
  4421f2:	loop   0x442264
  4421f4:	lahf   
  4421f5:	test   BYTE PTR [ecx],dh
  4421f7:	test   al,0x6f
  4421f9:	cld    
  4421fa:	pop    ebp
  4421fb:	push   ecx
  4421fc:	mov    ds:0x5349ac22,al
  442201:	test   al,0x9f
  442203:	aas    
  442204:	out    dx,al
  442205:	les    ebx,FWORD PTR [ebx]
  442207:	xchg   edi,eax
  442208:	sbb    eax,0x18350857
  44220d:	cdq    
  44220e:	iret   
  44220f:	push   esp
  442210:	sbb    esi,esi
  442212:	lahf   
  442213:	ror    BYTE PTR [ebx-0x3a],cl
  442216:	push   edi
  442217:	inc    edx
  442218:	jle    0x44224a
  44221a:	dec    BYTE PTR [edi-0x1654fc51]
  442220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442221:	cmp    cl,BYTE PTR [ebx]
  442223:	add    esp,DWORD PTR [ecx-0x51]
  442226:	or     edx,DWORD PTR [esi]
  442228:	test   cl,dl
  44222a:	mov    ecx,DWORD PTR [edi-0x51a17012]
  442230:	test   eax,0xda81bf4b
  442235:	xchg   esp,eax
  442236:	icebp  
  442237:	rol    edi,cl
  442239:	call   0x7d4e:0x3924c836
  442240:	test   eax,0x8c947e0d
  442245:	inc    esi
  442246:	lea    esp,[edx-0xe]
  442249:	sub    bh,bl
  44224b:	ins    BYTE PTR es:[edi],dx
  44224c:	mov    dl,0x59
  44224e:	lahf   
  44224f:	fbld   TBYTE PTR [edi]
  442251:	pop    esp
  442252:	into   
  442253:	bound  esp,QWORD PTR [edi]
  442255:	sub    BYTE PTR [edx-0x75],0xc1
  442259:	(bad)  
  44225b:	mov    dh,0xbe
  44225d:	jbe    0x4421e2
  44225f:	popf   
  442260:	fimul  WORD PTR [edx]
  442262:	ss dec esi
  442264:	stos   DWORD PTR es:[edi],eax
  442265:	nop
  442266:	push   ecx
  442267:	jecxz  0x44229c
  442269:	xor    al,0xab
  44226b:	ss jno 0x44221a
  44226e:	lods   al,BYTE PTR ds:[esi]
  44226f:	repnz shr DWORD PTR [edx-0x1b],cl
  442273:	stos   DWORD PTR es:[edi],eax
  442274:	xor    dh,dl
  442276:	repz pop esp
  442278:	push   ecx
  442279:	lea    esp,[edi+eiz*4]
  44227c:	cmp    eax,0x5caa9f67
  442281:	add    al,0x75
  442283:	mov    edx,DWORD PTR [esi-0x2f]
  442286:	inc    ecx
  442287:	mov    eax,0xd523a167
  44228c:	call   0x4eef4c98
  442291:	pop    es
  442292:	adc    DWORD PTR [ebp+0x4],ebx
  442295:	or     ecx,ecx
  442297:	arpl   WORD PTR [ebp+0x19],bx
  44229a:	and    eax,DWORD PTR [ebx]
  44229c:	mov    ecx,0x5bc96668
  4422a1:	and    eax,0x35bd6b2a
  4422a6:	(bad)  
  4422a7:	mov    eax,0x1529803a
  4422ac:	add    esi,DWORD PTR [ebp+0x69494a1a]
  4422b2:	or     eax,0x2809e9a
  4422b7:	xchg   DWORD PTR [esi+0x14],esp
  4422ba:	push   ecx
  4422bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4422bc:	inc    ecx
  4422bd:	sbb    BYTE PTR gs:[edi],al
  4422c0:	inc    edx
  4422c1:	bound  edx,QWORD PTR [eax+0x70]
  4422c4:	dec    esp
  4422c5:	add    DWORD PTR [esi],esp
  4422c7:	or     edx,DWORD PTR [ecx]
  4422c9:	out    0x7c,eax
  4422cb:	mov    edx,0xfc84b7b6
  4422d0:	lds    ebx,FWORD PTR [ecx+0xebe785]
  4422d6:	jns    0x44232c
  4422d8:	jns    0x442305
  4422da:	lock mov ebp,0xebcb1462
  4422e0:	mov    esi,0x5a47dc9f
  4422e5:	sbb    edi,ebx
  4422e7:	or     BYTE PTR [ebx-0x21322422],0xfb
  4422ee:	and    eax,eax
  4422f0:	(bad)  [edi+edx*1+0x24]
  4422f4:	std    
  4422f5:	cmp    eax,0xefbb5ddf
  4422fa:	loopne 0x4422e9
  4422fc:	xor    BYTE PTR [ebx],ah
  4422fe:	add    eax,0x7bb1a253
  442303:	fst    QWORD PTR [ebx-0x79]
  442306:	data16 jge 0x4422f5
  442309:	arpl   WORD PTR [eax+0x27caa20a],si
  44230f:	icebp  
  442310:	or     esi,esp
  442312:	sub    edi,DWORD PTR [ebp+eiz*1-0x4e]
  442316:	dec    edx
  442317:	mov    dh,BYTE PTR [esi]
  442319:	sbb    dl,bh
  44231b:	xor    al,0xbf
  44231d:	xor    eax,0x63c7b76
  442322:	pop    ebx
  442323:	repnz mov ebp,0x23ce0b6b
  442329:	and    eax,0x72feb9ed
  44232e:	pop    es
  44232f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442330:	pop    ebx
  442331:	pop    ebp
  442332:	pop    ecx
  442333:	pop    ss
  442334:	push   0x2c
  442336:	scas   al,BYTE PTR es:[edi]
  442337:	pop    eax
  442338:	imul   edi,DWORD PTR [eax+0x61db95be],0xffffffe0
  44233f:	dec    esp
  442340:	repz cli 
  442342:	retf   0x4dbc
  442345:	mov    eax,0x591ad578
  44234a:	test   al,0x75
  44234c:	sti    
  44234d:	fcom   QWORD PTR [esi+0x76f335b1]
  442353:	dec    esp
  442354:	icebp  
  442355:	adc    eax,DWORD PTR [edx+0x3f]
  442358:	ret    
  442359:	mov    edx,esp
  44235b:	sahf   
  44235c:	in     eax,dx
  44235d:	adc    DWORD PTR [esi+0x43],0xffffff84
  442361:	cmp    DWORD PTR [eax+0x45cf5d00],ecx
  442367:	or     eax,0x393773ef
  44236c:	dec    edi
  44236d:	inc    ecx
  44236e:	mov    gs,WORD PTR [ecx+0x54]
  442371:	push   ss
  442372:	je     0x4423d8
  442374:	or     BYTE PTR [edi+0x50],ah
  442377:	popf   
  442378:	push   ecx
  442379:	test   BYTE PTR [ebx],0xfe
  44237c:	pop    edx
  44237d:	pushf  
  44237e:	ficomp DWORD PTR [ebp+0x6dde894f]
  442384:	call   0xc74:0x7f3403b2
  44238b:	inc    edx
  44238c:	adc    eax,0x1073c130
  442391:	or     al,0x98
  442393:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  442395:	sti    
  442396:	ficomp WORD PTR [ebp+0x64204d02]
  44239c:	sbb    BYTE PTR [ebx],ah
  44239e:	ss pop edx
  4423a0:	mov    ss,WORD PTR [edi-0x3878e4ec]
  4423a6:	cmp    bh,BYTE PTR [edi-0x779ba7fd]
  4423ac:	push   esi
  4423ad:	mov    ds:0x612a5152,al
  4423b2:	mov    ecx,0xdbdcae4e
  4423b7:	data16 je 0x4423e3
  4423ba:	adc    DWORD PTR gs:[esi-0x3c],ebx
  4423be:	cdq    
  4423bf:	add    esi,esp
  4423c1:	imul   cl
  4423c3:	jo     0x4423e7
  4423c5:	sti    
  4423c6:	arpl   WORD PTR [edi+0x1a],ax
  4423c9:	ret    
  4423ca:	xchg   esp,eax
  4423cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4423cc:	sub    ch,ch
  4423ce:	jnp    0x4423f6
  4423d0:	add    BYTE PTR [ebp+0x674c4f6b],bh
  4423d6:	mov    al,0x9
  4423d8:	or     ch,BYTE PTR [ecx+0x29a709e2]
  4423de:	stos   DWORD PTR es:[edi],eax
  4423df:	adc    al,0x1c
  4423e1:	jmp    0xd835:0x88db3024
  4423e8:	stc    
  4423e9:	cmp    al,0x70
  4423eb:	cs pop ss
  4423ed:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4423ef:	push   esp
  4423f0:	shl    DWORD PTR [ecx],0x41
  4423f3:	sbb    ebp,edx
  4423f5:	xchg   esp,eax
  4423f6:	(bad)  
  4423f7:	out    dx,al
  4423f8:	sahf   
  4423f9:	xchg   edx,esi
  4423fb:	ret    0x8129
  4423fe:	adc    edi,ebx
  442400:	or     ebp,DWORD PTR [eax+esi*2]
  442403:	fnstsw WORD PTR [ebx+edx*2-0x41]
  442407:	fistp  DWORD PTR [edx-0x1ce18575]
  44240d:	mov    al,BYTE PTR [edx]
  44240f:	call   0xd5e9ff21
  442414:	jl     0x44242a
  442416:	pop    ecx
  442417:	(bad)  
  442418:	out    0x91,eax
  44241a:	int    0x88
  44241c:	dec    ecx
  44241d:	mov    BYTE PTR [ebp+edx*1-0x1b],dh
  442421:	push   es
  442422:	inc    eax
  442423:	data16 ja 0x442479
  442426:	retf   0x22c4
  442429:	mov    ebp,0x36c31af0
  44242e:	aas    
  44242f:	jecxz  0x442441
  442431:	mov    edi,DWORD PTR [ecx+0x3e]
  442434:	cmp    ecx,DWORD PTR [ebx+0x27]
  442437:	push   edx
  442438:	pusha  
  442439:	fs sahf 
  44243b:	in     al,0x46
  44243d:	enter  0xc0e9,0xa5
  442441:	sbb    ebp,esp
  442443:	pop    es
  442444:	das    
  442445:	inc    esi
  442446:	jbe    0x4423f7
  442448:	and    dl,BYTE PTR [bx]
  44244b:	sub    eax,0xf95fb1b4
  442450:	pop    eax
  442451:	mov    edi,0xd939e339
  442456:	gs into 
  442458:	ins    BYTE PTR es:[edi],dx
  442459:	mov    BYTE PTR ds:0xf2b4f926,cl
  44245f:	jmp    0x4423e1
  442461:	push   ebx
  442462:	out    dx,eax
  442463:	pop    edi
  442464:	imul   esp,ebp,0x8eb229c6
  44246a:	sahf   
  44246b:	scas   eax,DWORD PTR es:[edi]
  44246c:	scas   al,BYTE PTR es:[edi]
  44246d:	sub    ecx,ebp
  44246f:	enter  0x1eb9,0x7c
  442473:	xor    ah,0x95
  442476:	xchg   edi,eax
  442477:	push   ecx
  442478:	sub    BYTE PTR [eax],dh
  44247a:	mov    al,ds:0xc5c9b4a
  44247f:	mov    dh,0x4a
  442481:	dec    esp
  442482:	repz jmp DWORD PTR [edx+0x21]
  442486:	arpl   dx,si
  442488:	mov    edi,0xdb8b6a14
  44248d:	mov    eax,ds:0xfacfda93
  442492:	mov    bl,0xd0
  442494:	mov    dh,0xcd
  442496:	aam    0x3
  442498:	mov    BYTE PTR [ebx+0x4d],dl
  44249b:	push   0xe14c97fd
  4424a0:	inc    esp
  4424a1:	add    eax,0xf559949f
  4424a6:	retf   0xe4e5
  4424a9:	dec    edx
  4424aa:	add    al,0xed
  4424ac:	cmp    edi,ebx
  4424ae:	arpl   WORD PTR ds:0xd1d4ca2a,ax
  4424b4:	mov    edx,0xc3af033b
  4424b9:	sbb    cl,bl
  4424bb:	xlat   BYTE PTR ds:[ebx]
  4424bc:	or     BYTE PTR [ecx+0x46],dh
  4424bf:	loop   0x4424ed
  4424c1:	sub    al,0xa6
  4424c3:	test   al,0x0
  4424c5:	jge    0x44249d
  4424c7:	push   ebp
  4424c8:	(bad)  
  4424c9:	fisubr WORD PTR [ebp-0x581acd75]
  4424cf:	cmp    al,0x5c
  4424d1:	test   esp,esp
  4424d3:	or     eax,0xddc669f
  4424d8:	xchg   bx,ax
  4424da:	jne    0x4424df
  4424dc:	jmp    0x2cba:0x6fc016c6
  4424e3:	in     eax,dx
  4424e4:	cmp    esi,eax
  4424e6:	inc    esi
  4424e7:	pop    ebp
  4424e8:	adc    al,0x75
  4424ea:	pop    ecx
  4424eb:	retf   
  4424ec:	retf   0x2df2
  4424ef:	std    
  4424f0:	cdq    
  4424f1:	mov    eax,ds:0x41259247
  4424f6:	mov    edx,DWORD PTR [edx]
  4424f8:	es in  eax,dx
  4424fa:	dec    eax
  4424fb:	mov    eax,0xf08ece2b
  442500:	popw   ss
  442502:	cmp    DWORD PTR [ecx],ebx
  442504:	mov    esp,DWORD PTR [ebp+0x14]
  442507:	neg    BYTE PTR [esi-0x47d971d8]
  44250d:	mov    dl,0x35
  44250f:	fldenv [esp+edx*8-0x2c]
  442513:	lds    edx,FWORD PTR ds:0xfb1e126a
  442519:	pop    ecx
  44251a:	fiadd  WORD PTR es:[esi]
  44251d:	jecxz  0x442563
  44251f:	fstp   TBYTE PTR [eax+0x193b8bda]
  442525:	add    DWORD PTR [ebp+eax*2-0x2d],0xffffffb2
  44252a:	out    0xb5,al
  44252c:	aas    
  44252d:	vunpckhps ymm0,ymm6,ymm4
  442531:	xor    al,0xfe
  442533:	jne    0x44256c
  442535:	cli    
  442536:	das    
  442537:	xchg   ax,ax
  442539:	stc    
  44253a:	cld    
  44253b:	jp     0x44255e
  44253d:	mov    ds:0xe738bb38,al
  442542:	data16 shl BYTE PTR [eax+0x20b7ca52],1
  442549:	and    DWORD PTR [edi],esi
  44254b:	(bad)  
  44254c:	(bad)  
  44254d:	mov    WORD PTR [ebx],ss
  44254f:	cmp    edi,DWORD PTR [ebx]
  442551:	inc    ebx
  442552:	jnp    0x4425bf
  442554:	or     eax,0xb53988d7
  442559:	out    dx,eax
  44255a:	test   eax,0xc07f69e2
  44255f:	cld    
  442560:	or     BYTE PTR [edi],ch
  442562:	xchg   BYTE PTR [ecx],al
  442564:	ins    DWORD PTR es:[edi],dx
  442565:	push   ebx
  442566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442567:	lods   al,BYTE PTR ds:[esi]
  442568:	inc    ecx
  442569:	in     eax,dx
  44256a:	loopne 0x4424f1
  44256c:	pop    ds
  44256d:	stos   DWORD PTR es:[edi],eax
  44256e:	jl     0x4425e4
  442570:	inc    esp
  442571:	(bad)  
  442572:	and    edi,DWORD PTR [esi-0xb]
  442575:	sub    BYTE PTR [esi],0x0
  442578:	adc    al,0xd3
  44257a:	stc    
  44257b:	and    DWORD PTR [ecx+edx*1-0x44165970],ebp
  442582:	out    0xc3,eax
  442584:	test   DWORD PTR [edi+0x64],esi
  442587:	ins    BYTE PTR es:[edi],dx
  442588:	and    edx,DWORD PTR [esi+0x77]
  44258b:	sbb    eax,0xa57262da
  442590:	push   esi
  442591:	ficomp DWORD PTR [edi]
  442593:	jecxz  0x4425c8
  442595:	das    
  442596:	cmp    eax,0x7047d0ed
  44259b:	rep lods eax,DWORD PTR ds:[esi]
  44259d:	cmc    
  44259e:	pop    ebp
  44259f:	fiadd  DWORD PTR [edx-0x94149f6]
  4425a5:	mov    ds:0x217dc3ff,eax
  4425aa:	int    0xe0
  4425ac:	fisttp WORD PTR [ebp-0x5b7cb8b9]
  4425b2:	loopne 0x442557
  4425b4:	sub    dl,bh
  4425b6:	dec    ebp
  4425b7:	out    0xc4,al
  4425b9:	xchg   esp,eax
  4425ba:	int3   
  4425bb:	jmp    esp
  4425bd:	pop    ss
  4425be:	mov    eax,0x22cf67db
  4425c3:	xor    dh,BYTE PTR [eax+0x1a]
  4425c6:	iret   
  4425c7:	mov    ebp,esp
  4425c9:	cmp    DWORD PTR [ecx+edx*1-0x7b75b238],ebx
  4425d0:	pop    ecx
  4425d1:	lock mov ebp,DWORD PTR [ecx]
  4425d4:	sub    DWORD PTR [ebp+0x16b74455],esp
  4425da:	jmp    0xb43f:0x2ea4194a
  4425e1:	dec    edx
  4425e2:	(bad)
  4425e6:	pop    edi
  4425e7:	sbb    ch,dh
  4425e9:	call   DWORD PTR [ecx-0x30]
  4425ec:	xor    eax,0xa9d263b8
  4425f1:	ins    DWORD PTR es:[edi],dx
  4425f2:	add    DWORD PTR [edx+0x78],esi
  4425f5:	add    dl,BYTE PTR ds:0xb4c32a63
  4425fb:	add    BYTE PTR [esi],bl
  4425fd:	cmp    al,BYTE PTR [ebp+0x1d5d3988]
  442603:	dec    esp
  442604:	jb     0x442659
  442606:	jl     0x4425b8
  442608:	add    esi,DWORD PTR [ebp-0x19]
  44260b:	sub    eax,0x654641bb
  442610:	adc    al,0xc8
  442612:	out    dx,al
  442613:	jge    0x442598
  442615:	lea    eax,[ebp+0x374918ae]
  44261b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44261c:	xchg   esp,eax
  44261d:	mov    eax,0xb119cba7
  442622:	and    BYTE PTR [esi-0x6d],0x7b
  442626:	(bad)  
  442627:	out    0x37,al
  442629:	ret    0xce90
  44262c:	cli    
  44262d:	pusha  
  44262e:	xor    BYTE PTR [ebp-0x77],0x21
  442632:	imul   edi,DWORD PTR [esi+0x7d],0x2f
  442636:	lock fst QWORD PTR [esi-0x325f4344]
  44263d:	cmp    al,0xa5
  44263f:	mov    edi,0x2a84a330
  442644:	dec    ebx
  442645:	add    DWORD PTR [ebx],ebx
  442647:	mov    ebx,0x3d6cd24
  44264c:	or     al,0x5f
  44264e:	cld    
  44264f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442650:	mov    ah,al
  442652:	idiv   DWORD PTR [eax]
  442654:	pop    edx
  442655:	jnp    0x442669
  442657:	sbb    eax,0x9da390d5
  44265c:	and    BYTE PTR [ebx+0x48],al
  44265f:	scas   eax,DWORD PTR es:[edi]
  442660:	out    0x93,al
  442662:	jmp    0x424c:0x50a7414c
  442669:	mov    edi,0x53f2de7e
  44266e:	and    al,0x0
  442670:	pmullw mm7,QWORD PTR [edx]
  442673:	adc    eax,0x508c02a7
  442678:	test   eax,0xc1dfa85c
  44267d:	add    al,0x17
  44267f:	fld    QWORD PTR [esi-0x6598072e]
  442685:	inc    ebx
  442686:	aas    
  442687:	sub    al,0x42
  442689:	imul   BYTE PTR [esi]
  44268b:	sub    eax,0x6578ead7
  442690:	inc    ebp
  442691:	push   ebx
  442692:	sub    al,0xfb
  442694:	pushf  
  442695:	(bad)  
  442696:	imul   esp,eax,0xffffff81
  442699:	data16 and cl,dh
  44269c:	cmc    
  44269d:	stos   DWORD PTR es:[edi],eax
  44269e:	sbb    eax,0xc53516fc
  4426a3:	jne    0x44269c
  4426a5:	mov    al,ds:0xd689c9ce
  4426aa:	out    0x8,eax
  4426ac:	cmp    eax,0x172c306d
  4426b1:	dec    DWORD PTR [ebp+0x32ea7a8a]
  4426b7:	dec    edx
  4426b8:	data16 cld 
  4426ba:	enter  0x97b3,0x60
  4426be:	aaa    
  4426bf:	fist   WORD PTR [ecx-0x72c94349]
  4426c5:	(bad)  
  4426c6:	push   ecx
  4426c7:	add    al,0xee
  4426c9:	push   0x4bcd95ac
  4426ce:	mov    eax,0xe33a3620
  4426d3:	or     cl,BYTE PTR [eax-0x5c]
  4426d6:	ror    BYTE PTR [ebx+0x59],1
  4426d9:	int3   
  4426da:	imul   eax,edx,0x53
  4426dd:	and    ah,BYTE PTR [edx]
  4426df:	int3   
  4426e0:	lock icebp 
  4426e2:	cmc    
  4426e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4426e4:	lock cmp al,0xc2
  4426e7:	jne    0x4426ee
  4426e9:	arpl   cx,cx
  4426eb:	mov    BYTE PTR [edi-0x28becb9d],dh
  4426f1:	fbld   TBYTE PTR [ecx-0x7c]
  4426f4:	cmc    
  4426f5:	cmp    DWORD PTR [edi+ebp*2+0x21],edx
  4426f9:	sub    ebp,esi
  4426fb:	sahf   
  4426fc:	xchg   BYTE PTR [edx+0x29],cl
  4426ff:	daa    
  442700:	cmp    eax,0xdae07247
  442705:	jg     0x4426b2
  442707:	sub    eax,0x151711b4
  44270c:	xchg   esi,edx
  44270e:	ins    DWORD PTR es:[edi],dx
  44270f:	or     al,BYTE PTR [esi]
  442711:	in     al,0xed
  442713:	add    al,0x9b
  442715:	and    al,0x5c
  442717:	pop    ecx
  442718:	addr16 mov eax,0xf26348ea
  44271e:	loop   0x442732
  442720:	hlt    
  442721:	(bad)  
  442722:	cli    
  442723:	loope  0x442741
  442725:	xlat   BYTE PTR ds:[ebx]
  442726:	push   0x5d77c2f1
  44272b:	cmp    eax,0xa2fc2020
  442730:	pop    ebx
  442731:	xchg   edi,eax
  442732:	into   
  442733:	xor    al,0x83
  442735:	inc    ebp
  442736:	in     eax,0x3e
  442738:	test   al,0x45
  44273a:	mov    ecx,0xe244620b
  44273f:	outs   dx,DWORD PTR ds:[esi]
  442740:	lods   eax,DWORD PTR ds:[esi]
  442741:	jbe    0x44279a
  442743:	scas   al,BYTE PTR es:[edi]
  442744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442745:	add    eax,0x50b8985d
  44274a:	cmp    eax,0xad73b0cc
  44274f:	jmp    DWORD PTR [esi-0x2b3176a2]
  442755:	pusha  
  442756:	iret   
  442757:	out    0x50,al
  442759:	mov    dh,0x35
  44275b:	and    BYTE PTR [eax+0x1c095e9c],cl
  442761:	out    0x48,eax
  442763:	inc    ebx
  442764:	xor    BYTE PTR [esi-0x382a60ab],al
  44276a:	cmp    al,0x91
  44276c:	sub    BYTE PTR ds:0x7bddfca,al
  442772:	ret    0x7cbf
  442775:	das    
  442776:	es or  ebx,esi
  442779:	cs cdq 
  44277b:	or     al,0x7
  44277d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44277e:	xor    eax,0xc30b0e6e
  442783:	xchg   edi,eax
  442784:	ret    0x2334
  442787:	add    BYTE PTR [eax-0x1],0xde
  44278b:	ret    0x4bd8
  44278e:	jnp    0x44273c
  442790:	mov    edi,0xf4da6969
  442795:	outs   dx,BYTE PTR ds:[esi]
  442796:	inc    edx
  442797:	aaa    
  442798:	imul   eax,DWORD PTR [eax+ebp*2]
  44279c:	xor    DWORD PTR [ebp-0x26],esp
  44279f:	sar    DWORD PTR [edx],cl
  4427a1:	out    0xf4,al
  4427a3:	mov    ds:0xa6cbf2c6,al
  4427a8:	adc    esi,DWORD PTR [edi+0xa]
  4427ab:	cld    
  4427ac:	into   
  4427ad:	add    esp,DWORD PTR [edx+0x5f]
  4427b0:	cmc    
  4427b1:	sbb    eax,0x3a26fed7
  4427b6:	in     eax,dx
  4427b7:	out    dx,eax
  4427b8:	push   ecx
  4427b9:	ins    DWORD PTR es:[edi],dx
  4427ba:	rcl    ch,1
  4427bc:	dec    eax
  4427bd:	xor    BYTE PTR [esi+0x59],dl
  4427c0:	inc    edi
  4427c1:	sub    BYTE PTR [ebx+0x5c],dh
  4427c4:	nop    DWORD PTR [eax-0x5a]
  4427c8:	or     eax,0x963e4875
  4427ce:	test   eax,0xd24591bf
  4427d3:	popf   
  4427d4:	mov    DWORD PTR [ebp-0x2b6eaa06],edx
  4427da:	mov    DWORD PTR [eax],ebp
  4427dc:	inc    esi
  4427dd:	stos   DWORD PTR es:[edi],eax
  4427de:	mov    dh,0x9e
  4427e0:	fs pop ebx
  4427e2:	lahf   
  4427e3:	out    dx,eax
  4427e4:	mov    ebp,0x6e7735f2
  4427e9:	fninit 
  4427eb:	dec    eax
  4427ec:	or     esi,DWORD PTR [edx+ecx*8+0x63]
  4427f0:	xor    DWORD PTR [edx],ecx
  4427f2:	jl     0x442790
  4427f4:	jge    0x4427f1
  4427f6:	mov    ebp,0xc096ab0b
  4427fb:	cmp    DWORD PTR [edx-0x4a85fe76],0xf7836ac1
  442805:	push   0x3d7b7339
  44280a:	add    BYTE PTR [ecx+0x6b0410cb],dl
  442810:	ja     0x4427a2
  442812:	aas    
  442813:	mov    ds:0x9cf7e4c4,eax
  442818:	mov    edi,ecx
  44281a:	inc    ebx
  44281b:	gs mov ch,0x51
  44281e:	stos   BYTE PTR es:[edi],al
  44281f:	ja     0x4427c3
  442821:	ror    DWORD PTR [eax+ebp*1+0x2b],cl
  442825:	mov    dh,0x1c
  442827:	push   edi
  442828:	cmp    bl,BYTE PTR ds:0x3a1b9b0a
  44282e:	out    0x6e,eax
  442830:	xor    al,0x1c
  442832:	xchg   ebx,eax
  442833:	lahf   
  442834:	or     DWORD PTR [ebp-0x34],0xda0a1554
  44283b:	inc    edx
  44283c:	mov    edx,0x11499960
  442841:	adc    al,0xad
  442843:	test   al,0x71
  442845:	pop    edi
  442846:	push   ecx
  442847:	ret    0x39f7
  44284a:	dec    esi
  44284b:	out    dx,eax
  44284c:	cmp    dh,0xbe
  44284f:	rcl    DWORD PTR [edi+ebx*2+0x64],1
  442853:	imul   eax,DWORD PTR [edx+0x7cb7a0ec],0x67
  44285a:	sub    bl,BYTE PTR [edi]
  44285c:	adc    dh,ch
  44285e:	jns    0x442800
  442860:	fild   WORD PTR [ebp-0x77]
  442863:	loop   0x4428c7
  442865:	push   ebx
  442866:	jnp    0x4428c2
  442868:	mov    cl,0x94
  44286a:	outs   dx,DWORD PTR ds:[esi]
  44286b:	rcl    DWORD PTR [eax-0x3d],0xc3
  44286f:	mov    dl,0xee
  442871:	xor    BYTE PTR [ebx-0x68],ah
  442874:	xchg   esi,eax
  442875:	out    0x3a,al
  442877:	loopne 0x44287d
  442879:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  44287b:	xor    ecx,DWORD PTR [ecx-0x41c70793]
  442881:	addr16 in eax,0x4c
  442884:	pop    ecx
  442885:	cmp    eax,0xab5f5151
  44288a:	out    0x78,eax
  44288c:	rep lods eax,DWORD PTR ds:[esi]
  44288e:	cdq    
  44288f:	(bad)  
  442892:	out    0x56,al
  442894:	jb     0x442893
  442896:	fs neg esi
  442899:	ret    
  44289a:	mov    edi,0xfbadbd72
  44289f:	jmp    0xb611:0x959a6a5e
  4428a6:	ror    BYTE PTR [edx+0x26],1
  4428a9:	les    ecx,FWORD PTR [esi-0x3b]
  4428ac:	cmp    al,0xcd
  4428ae:	mov    esi,DWORD PTR [esp+ebx*8+0x4b67b16b]
  4428b5:	std    
  4428b6:	sbb    al,0x57
  4428b8:	test   DWORD PTR [ebp+esi*8-0x36],ebx
  4428bc:	cwde   
  4428bd:	adc    esi,DWORD PTR [ebx-0x53]
  4428c0:	icebp  
  4428c1:	data16 aad 0x6c
  4428c4:	jmp    DWORD PTR [ebx]
  4428c6:	hlt    
  4428c7:	les    esi,FWORD PTR [edi-0x16]
  4428ca:	outs   dx,BYTE PTR ds:[esi]
  4428cb:	rcl    BYTE PTR ds:[esi],1
  4428ce:	out    0x8,al
  4428d0:	cmc    
  4428d1:	ret    
  4428d2:	loopne 0x4428f9
  4428d4:	jle    0x442932
  4428d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4428d7:	repz push ss
  4428d9:	shr    dh,1
  4428db:	mov    ah,0x20
  4428dd:	push   0xffffffb0
  4428df:	repnz leave 
  4428e1:	je     0x4428d3
  4428e3:	int3   
  4428e4:	aam    0x96
  4428e6:	loop   0x4428cd
  4428e8:	bound  ebx,QWORD PTR ds:0x5427d2ef
  4428ee:	sub    al,0xb5
  4428f0:	push   esp
  4428f1:	div    edx
  4428f3:	add    ah,BYTE PTR [edx]
  4428f5:	aaa    
  4428f6:	enter  0x3884,0xfc
  4428fa:	or     dh,BYTE PTR [esi-0x5]
  4428fd:	inc    eax
  4428fe:	and    esp,ebp
  442900:	mov    ebp,0x8565acf2
  442905:	jne    0x44293f
  442907:	adc    eax,0xe1338dac
  44290c:	push   ds
  44290d:	mov    dl,ch
  44290f:	cmp    DWORD PTR [edi],esi
  442911:	sub    al,0x66
  442913:	cmp    al,0xc6
  442915:	mov    bl,0x5d
  442917:	pop    edi
  442918:	(bad)  [edi-0x17]
  44291b:	or     eax,0x357fbcc7
  442920:	std    
  442921:	out    0x69,eax
  442923:	in     al,0x7c
  442925:	adc    eax,0x391fa072
  44292a:	xor    al,0xa5
  44292c:	popa   
  44292d:	call   DWORD PTR [ecx-0x32971c3d]
  442933:	mov    ds:0x5858a47d,al
  442938:	jmp    DWORD PTR [ebx]
  44293a:	mov    edi,DWORD PTR [ebx-0x64]
  44293d:	and    esi,DWORD PTR [edi]
  44293f:	mov    WORD PTR [edi+edi*8],?
  442942:	jo     0x4429a9
  442944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442945:	mov    ebp,0x1aab44d5
  44294a:	pop    ecx
  44294b:	dec    eax
  44294c:	shl    DWORD PTR [edi+0x69b483c2],0x0
  442953:	retf   
  442954:	sbb    dl,BYTE PTR [eax-0x2819099]
  44295a:	loope  0x442988
  44295c:	jp     0x4429cc
  44295e:	cli    
  44295f:	mov    esp,eax
  442961:	ins    BYTE PTR es:[edi],dx
  442962:	aas    
  442963:	cmp    al,0x34
  442965:	sub    eax,0xc3f806e6
  44296a:	mov    ds:0x27dbfec9,eax
  44296f:	push   ss
  442970:	fild   WORD PTR [eax-0x78]
  442973:	outs   dx,DWORD PTR ds:[esi]
  442974:	jmp    0x650a:0x9527b3f2
  44297b:	pusha  
  44297c:	dec    ebp
  44297d:	cmp    eax,DWORD PTR [ebx+0x7f]
  442980:	rcr    BYTE PTR [ecx-0x1],cl
  442983:	test   DWORD PTR [ebp-0x7a75e8db],eax
  442989:	inc    edi
  44298a:	xchg   DWORD PTR [edi+0x694fba31],esp
  442990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442991:	retf   0xd7ba
  442994:	mov    eax,0xc641e1a8
  442999:	xchg   esi,eax
  44299a:	out    0x1b,al
  44299c:	data16 mov dh,0x2b
  44299f:	fistp  WORD PTR [ebx-0x733a01a2]
  4429a5:	mov    bh,0x21
  4429a7:	or     DWORD PTR [ebx],ebx
  4429a9:	sti    
  4429aa:	sbb    al,0x55
  4429ac:	test   al,0xa6
  4429ae:	push   edi
  4429af:	mov    dl,0xe9
  4429b1:	ds dec ebp
  4429b3:	in     al,dx
  4429b4:	mov    BYTE PTR [edx-0x5a],dl
  4429b7:	dec    ebp
  4429b8:	cmp    DWORD PTR [ecx],ebx
  4429ba:	dec    edi
  4429bb:	inc    ebx
  4429bc:	rcl    bh,cl
  4429be:	sti    
  4429bf:	sub    edi,DWORD PTR [esi]
  4429c1:	mov    cl,0xb9
  4429c3:	das    
  4429c4:	inc    esi
  4429c5:	test   al,0x6d
  4429c7:	cmp    al,BYTE PTR [eax]
  4429c9:	fsub   st,st(4)
  4429cb:	in     eax,0x7f
  4429cd:	jno    0x44299c
  4429cf:	es ds jnp 0x4429ee
  4429d3:	dec    edx
  4429d4:	mov    bl,0x46
  4429d6:	mov    edi,0x3c6438bc
  4429db:	(bad)  
  4429dc:	js     0x442a4d
  4429de:	jg     0x442a0f
  4429e0:	jge    0x442a0e
  4429e2:	dec    eax
  4429e3:	add    dl,BYTE PTR [ecx-0x1d]
  4429e6:	push   edi
  4429e7:	dec    esp
  4429e8:	xor    DWORD PTR [ebp+0x725caa30],0x26e48fcb
  4429f2:	xor    ah,BYTE PTR [ecx]
  4429f4:	lea    ebp,[ebx-0x437d47d5]
  4429fa:	xor    eax,0x8d463c81
  4429ff:	fs jne 0x442a04
  442a02:	retf   
  442a03:	sar    DWORD PTR [ecx+0x38],cl
  442a06:	call   0x9d10032c
  442a0b:	dec    ebp
  442a0c:	(bad)  
  442a0d:	neg    ecx
  442a0f:	push   0xffffff9a
  442a11:	cmp    eax,0x66310fda
  442a16:	ja     0x4429f7
  442a18:	xchg   edx,eax
  442a19:	mov    edx,0x2ba586fb
  442a1e:	dec    edx
  442a1f:	mov    ds:0xbe23d8f7,al
  442a24:	mov    ah,0x2f
  442a26:	enter  0x841,0xd
  442a2a:	inc    edx
  442a2b:	or     eax,0xaffd682
  442a30:	(bad)
  442a34:	jle    0x4429de
  442a36:	outs   dx,BYTE PTR ds:[esi]
  442a37:	lds    edi,FWORD PTR [ecx+0x1a]
  442a3a:	adc    al,0x2e
  442a3c:	xor    edi,DWORD PTR [ebp-0x4b7a9c9f]
  442a42:	mov    BYTE PTR [edx],ch
  442a44:	nop
  442a45:	mov    ds:0x8fadade4,eax
  442a4a:	dec    ebp
  442a4b:	dec    ecx
  442a4c:	xlat   BYTE PTR ds:[ebx]
  442a4d:	stos   DWORD PTR es:[edi],eax
  442a4e:	shl    dl,cl
  442a50:	xchg   edx,eax
  442a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442a52:	outs   dx,BYTE PTR ds:[esi]
  442a53:	in     eax,dx
  442a54:	jmp    0x442ac5
  442a56:	jno    0x442a77
  442a58:	aas    
  442a59:	ret    0x12cc
  442a5c:	jo     0x442a45
  442a5e:	jb     0x442abf
  442a60:	mov    ebx,DWORD PTR ds:0x8f5078b7
  442a66:	xchg   BYTE PTR [ecx],al
  442a68:	popa   
  442a69:	lods   al,BYTE PTR ds:[esi]
  442a6a:	adc    esi,DWORD PTR [eax-0x6b]
  442a6d:	or     al,0x6f
  442a6f:	(bad)  
  442a70:	neg    DWORD PTR ds:0xf46419e9
  442a76:	pushf  
  442a77:	popa   
  442a78:	icebp  
  442a79:	in     al,dx
  442a7a:	imul   ecx,DWORD PTR [edx-0x3a615a17],0x45d7caac
  442a84:	push   0x7c1b857f
  442a89:	mov    bl,0x89
  442a8c:	push   eax
  442a8d:	pushf  
  442a8e:	cmp    bh,0x7e
  442a91:	add    al,0xd0
  442a93:	adc    bh,BYTE PTR [edx+0x5e]
  442a96:	inc    eax
  442a97:	dec    ebp
  442a98:	ja     0x442acb
  442a9a:	jle    0x442b0d
  442a9c:	aam    0xe
  442a9e:	jno    0x442b18
  442aa0:	dec    edx
  442aa1:	(bad)  
  442aa2:	fs loopne 0x442b19
  442aa5:	rol    DWORD PTR [esi],cl
  442aa7:	sete   BYTE PTR [esi+edx*4-0x7c]
  442aac:	js     0x442af5
  442aae:	je     0x442af9
  442ab0:	div    BYTE PTR [ebx+0x6b7e729]
  442ab6:	and    dh,BYTE PTR [edi]
  442ab8:	mov    ebp,DWORD PTR [ebp+0x680774c7]
  442abe:	in     al,0x85
  442ac0:	mov    edi,0xffc9d08a
  442ac5:	inc    ebp
  442ac6:	es sahf 
  442ac8:	pop    eax
  442ac9:	or     ax,0x155b
  442ace:	xor    ebp,esi
  442ad0:	fistp  QWORD PTR [eax+0x2f]
  442ad3:	pop    es
  442ad4:	push   esi
  442ad5:	mov    cl,BYTE PTR [ecx+ebx*8+0x9166c38]
  442adc:	test   DWORD PTR [eax-0x83e8ae],esp
  442ae2:	xor    eax,0x6dd6840d
  442ae7:	mov    ?,ebx
  442ae9:	popa   
  442aea:	sub    edx,DWORD PTR [ebx+0x6e968127]
  442af0:	xchg   edx,eax
  442af1:	pminub mm5,QWORD PTR [ecx-0xf02fb71]
  442af8:	pop    ebx
  442af9:	out    0x12,al
  442afb:	out    0x3e,al
  442afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442afe:	fisttp WORD PTR [ebp-0x3b77bcef]
  442b04:	mov    ecx,esp
  442b06:	mul    BYTE PTR [esp+edi*1+0x76c7203e]
  442b0d:	lock mov ch,0xea
  442b10:	dec    edi
  442b11:	and    esi,DWORD PTR [edi-0x612b56e8]
  442b17:	neg    BYTE PTR [ebp+0x20]
  442b1a:	sbb    esp,eax
  442b1c:	dec    ecx
  442b1d:	inc    edx
  442b1e:	add    DWORD PTR [esi-0x1a04fb63],edx
  442b24:	xor    eax,0x5d678a7f
  442b29:	push   ss
  442b2a:	dec    ecx
  442b2b:	xchg   ebp,eax
  442b2c:	jle    0x442b85
  442b2e:	scas   eax,DWORD PTR es:[edi]
  442b2f:	nop
  442b30:	cli    
  442b31:	dec    ecx
  442b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b33:	retf   
  442b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b35:	inc    ebx
  442b36:	fsub   st,st(7)
  442b38:	out    dx,eax
  442b39:	push   0x599d0255
  442b3e:	and    eax,0xaac7b687
  442b43:	sti    
  442b44:	mov    ah,0x77
  442b46:	jno    0x442b78
  442b48:	push   esi
  442b49:	mov    cl,0x61
  442b4b:	ja     0x442b5c
  442b4d:	loop   0x442bad
  442b4f:	das    
  442b50:	mov    DWORD PTR [edx-0x8],ebx
  442b53:	out    0x19,eax
  442b55:	loopne 0x442b22
  442b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b58:	sub    ch,BYTE PTR [ebx+0x2b]
  442b5b:	pop    esi
  442b5c:	cmp    eax,DWORD PTR [eax-0x7b2f54e5]
  442b62:	cmp    eax,0xca197e2e
  442b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b68:	sub    dh,BYTE PTR [ecx+0x2a]
  442b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b6c:	inc    esp
  442b6d:	pop    ds
  442b6e:	adc    DWORD PTR ds:0xec71cbc4,esi
  442b74:	sbb    bl,dh
  442b76:	call   0xc2b0:0xda9ae11a
  442b7d:	je     0x442bb8
  442b7f:	in     eax,0x73
  442b81:	mov    ds:0x671448ac,eax
  442b86:	sub    ebx,DWORD PTR [edi+0x50]
  442b89:	in     al,0x40
  442b8b:	in     eax,dx
  442b8c:	sub    DWORD PTR [edi-0x2864c28d],ebp
  442b92:	jge    0x442b43
  442b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442b95:	inc    edx
  442b96:	mov    ah,0x99
  442b98:	sar    DWORD PTR [esi+edi*1-0x3e108a72],0x3b
  442ba0:	mov    esi,0x7273e774
  442ba5:	xchg   ebp,eax
  442ba6:	shl    DWORD PTR [edx-0x3f],1
  442ba9:	lea    esi,[esi-0x20]
  442bac:	sbb    BYTE PTR [esi+0x38],dh
  442baf:	add    al,0x7b
  442bb1:	mov    ax,0xd7e2
  442bb5:	mov    esp,0xdb1e5098
  442bba:	test   BYTE PTR [ebx-0x62c69f8a],0xd5
  442bc1:	mov    bl,0x68
  442bc3:	cli    
  442bc4:	jbe    0x442bb4
  442bc6:	aas    
  442bc7:	push   0xfffffffa
  442bc9:	sub    esi,0x1d
  442bcc:	inc    edi
  442bcd:	push   edi
  442bce:	mov    ch,0xe2
  442bd0:	(bad)  [eax]
  442bd2:	inc    ebx
  442bd3:	jg     0x442b8d
  442bd5:	pop    edi
  442bd6:	xor    al,0x9d
  442bd8:	out    dx,al
  442bd9:	shr    DWORD PTR [edx+eax*8-0x8c77aa2],0xbb
  442be1:	push   0x4ad6c615
  442be6:	shl    DWORD PTR [ebp+0x643bfab5],0xf9
  442bed:	pop    ebx
  442bee:	loop   0x442c5d
  442bf0:	or     BYTE PTR [ebp-0x2fdc317a],ah
  442bf6:	inc    ebx
  442bf7:	xchg   ebp,eax
  442bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442bf9:	xchg   ebp,eax
  442bfa:	xor    dh,BYTE PTR [esi-0x7dbec078]
  442c00:	out    0x67,eax
  442c02:	fld    TBYTE PTR [eax+edx*1+0x78]
  442c06:	and    eax,edi
  442c08:	call   0x72a19d99
  442c0d:	mov    DWORD PTR [edx],0x5a00bb3
  442c13:	xchg   ebp,eax
  442c14:	push   ss
  442c15:	sbb    al,BYTE PTR [esi+eiz*8-0x72]
  442c19:	jmp    0x442bd2
  442c1b:	cmc    
  442c1c:	push   esp
  442c1d:	push   ss
  442c1e:	(bad)  
  442c1f:	add    ecx,eax
  442c21:	sbb    edi,DWORD PTR [esi+0xd94ef46]
  442c27:	sub    eax,0x966ffed1
  442c2c:	jno    0x442c24
  442c2e:	xor    bl,dh
  442c30:	xor    ebp,DWORD PTR [edi-0x35]
  442c33:	xor    eax,0xc86f1ec9
  442c38:	icebp  
  442c39:	rcr    BYTE PTR [esi-0x4b3336ec],0xa9
  442c40:	in     eax,0x9d
  442c42:	xchg   edi,eax
  442c43:	and    BYTE PTR [edi-0x11b547fc],dh
  442c49:	(bad)  
  442c4a:	stc    
  442c4b:	and    DWORD PTR [eax+0x52],esi
  442c4e:	adc    BYTE PTR [edi+0x6d],dh
  442c51:	xor    al,0x88
  442c53:	hlt    
  442c54:	call   0xee50:0xf29a105a
  442c5b:	jmp    0x442bed
  442c5d:	or     edi,DWORD PTR [ecx+0x355eacf5]
  442c63:	and    BYTE PTR [ebx+0x2262cd87],ch
  442c69:	inc    ebx
  442c6a:	push   esp
  442c6b:	and    ah,dl
  442c6d:	repnz pushf 
  442c6f:	jmp    0x442c46
  442c71:	daa    
  442c72:	(bad)  
  442c73:	(bad)
  442c76:	das    
  442c77:	cmp    BYTE PTR [ecx],cl
  442c79:	xlat   BYTE PTR ds:[ebx]
  442c7a:	sub    DWORD PTR [edi-0x5a],eax
  442c7d:	inc    ebx
  442c7e:	cmp    BYTE PTR [ecx+edx*8+0x5d],dl
  442c82:	ins    DWORD PTR es:[edi],dx
  442c83:	stc    
  442c84:	in     al,dx
  442c85:	add    esi,DWORD PTR [ecx-0x1e1a0ee4]
  442c8b:	sbb    eax,edi
  442c8d:	scas   eax,DWORD PTR es:[edi]
  442c8e:	dec    esi
  442c8f:	ins    DWORD PTR es:[edi],dx
  442c90:	adc    DWORD PTR [eax-0x49],ecx
  442c93:	xchg   esi,eax
  442c94:	inc    edi
  442c95:	push   esi
  442c96:	sub    DWORD PTR [edi-0x394a3f91],esi
  442c9c:	dec    edx
  442c9d:	lods   eax,DWORD PTR ds:[esi]
  442c9e:	adc    eax,0xaed6506e
  442ca3:	pop    ecx
  442ca4:	cmp    eax,0x2f4f372d
  442ca9:	xor    DWORD PTR [eax+0x72],ebx
  442cac:	imul   esi,DWORD PTR [ebx-0x5a9cadbe],0xfffffff2
  442cb3:	pusha  
  442cb4:	mov    ds:0x2d780626,al
  442cb9:	cmp    DWORD PTR [esi-0x68],ebx
  442cbc:	jb     0x442c4a
  442cbe:	fld    DWORD PTR ds:0xde33bfed
  442cc4:	mov    al,ds:0x39c970ed
  442cc9:	add    eax,0xdd04aa10
  442cce:	sahf   
  442ccf:	jb     0x442d1e
  442cd1:	inc    edi
  442cd2:	(bad)  
  442cd3:	fidivr DWORD PTR [ebx]
  442cd5:	push   ss
  442cd6:	pop    ecx
  442cd7:	lea    ebx,[ebx]
  442cd9:	cli    
  442cda:	js     0x442d4a
  442cdc:	jl     0x442c7a
  442cde:	jmp    0x9b17bec5
  442ce3:	cld    
  442ce4:	adc    eax,0x639d7aaa
  442ce9:	cmp    DWORD PTR [ecx+0x2c],esp
  442cec:	(bad)  [edi]
  442cee:	xchg   BYTE PTR [ecx],dh
  442cf0:	imul   esp,DWORD PTR [esi+0x1e],0x3c5a7554
  442cf7:	mov    ah,ch
  442cf9:	hlt    
  442cfa:	rol    DWORD PTR [edi],1
  442cfc:	sub    esp,DWORD PTR [edi+0x56]
  442cff:	push   ecx
  442d00:	repz (bad)
  442d03:	jle    0x442d61
  442d05:	retf   
  442d06:	hlt    
  442d07:	adc    edi,DWORD PTR [ebp+0x1e9aac43]
  442d0d:	fisttp WORD PTR [edi+0x22ed441e]
  442d13:	mov    eax,ds:0xed1b6e46
  442d18:	mov    bl,0x66
  442d1a:	outs   dx,DWORD PTR ds:[esi]
  442d1b:	inc    ebx
  442d1c:	xor    BYTE PTR [edx],0xaf
  442d1f:	neg    BYTE PTR [ebx+0x5f]
  442d22:	js     0x442cb7
  442d24:	mov    DWORD PTR [eax-0x9034467],esp
  442d2a:	mov    eax,ss:0xe5d122ae
  442d30:	(bad)  
  442d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442d33:	xorps  xmm2,xmm7
  442d36:	jns    0x442d36
  442d38:	push   0xb13fdee0
  442d3d:	sahf   
  442d3e:	push   ds
  442d3f:	mov    esi,0x7fb4be6a
  442d44:	jmp    0xc8c23a61
  442d49:	ins    DWORD PTR es:[edi],dx
  442d4a:	mov    eax,ds:0xb4b8d279
  442d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442d50:	lea    eax,[esi-0x2483e5dc]
  442d56:	adc    bh,BYTE PTR [eax]
  442d58:	cld    
  442d59:	xor    DWORD PTR [edx+0x58],eax
  442d5c:	xor    esi,DWORD PTR ds:[esp+ebp*4-0x4d525053]
  442d64:	adc    DWORD PTR [ecx+0x3e193b42],eax
  442d6a:	scas   eax,DWORD PTR es:[edi]
  442d6b:	push   esi
  442d6c:	inc    ecx
  442d6d:	xchg   esp,eax
  442d6e:	push   esi
  442d6f:	aad    0xdd
  442d71:	push   es
  442d72:	shl    DWORD PTR [ecx+0x16],0xb0
  442d76:	mov    dh,0xb6
  442d78:	push   ds
  442d79:	lods   eax,DWORD PTR ds:[esi]
  442d7a:	loope  0x442d4d
  442d7c:	loop   0x442cfe
  442d7e:	and    dl,cl
  442d80:	clc    
  442d81:	sub    al,0xab
  442d83:	xor    BYTE PTR [esi+0x5c],dh
  442d86:	jo     0x442d94
  442d88:	cwde   
  442d89:	aas    
  442d8a:	pop    esi
  442d8b:	retf   
  442d8c:	dec    ebx
  442d8d:	daa    
  442d8e:	jp     0x442dfe
  442d90:	add    eax,0x25a90498
  442d95:	pcmpeqd mm2,QWORD PTR gs:[esi]
  442d99:	or     bh,BYTE PTR [eax+0x5a108931]
  442d9f:	fldcw  WORD PTR [ecx+0x1963e7fc]
  442da5:	and    bh,ch
  442da7:	sub    cl,BYTE PTR [edi+0x39]
  442daa:	iret   
  442dab:	xchg   esi,eax
  442dac:	dec    edx
  442dad:	into   
  442dae:	in     eax,dx
  442daf:	out    0x29,eax
  442db1:	xor    al,0xf0
  442db3:	or     DWORD PTR ds:0x9fb99249,eax
  442db9:	outs   dx,BYTE PTR ds:[esi]
  442dba:	push   ss
  442dbb:	daa    
  442dbc:	lds    esp,FWORD PTR [ecx+0x14]
  442dbf:	js     0x442da7
  442dc1:	add    DWORD PTR [ecx+0x690b4ae5],esi
  442dc7:	xchg   edx,eax
  442dc8:	push   edx
  442dc9:	mov    ds:0xf550559c,al
  442dce:	xor    edi,eax
  442dd0:	inc    esi
  442dd1:	loope  0x442da4
  442dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442dd4:	fbld   TBYTE PTR [edi+0x72e6b630]
  442dda:	mov    edi,0x2bff5e5f
  442ddf:	adc    al,0x92
  442de1:	add    eax,0xbb74099f
  442de6:	inc    ebx
  442de7:	pop    ss
  442de8:	mov    dh,0xa1
  442dea:	push   ss
  442deb:	dec    edi
  442dec:	mov    ebp,0xeaa18382
  442df1:	xor    BYTE PTR [edx+0x75a8ec7c],al
  442df7:	cdq    
  442df8:	aas    
  442df9:	pop    ecx
  442dfa:	push   edx
  442dfb:	es inc cl
  442dfe:	xlat   BYTE PTR ds:[ebx]
  442dff:	imul   ecx,DWORD PTR [edx+0x7626db24],0x1e
  442e06:	pop    eax
  442e07:	jecxz  0x442db5
  442e09:	mov    dl,0x5b
  442e0b:	and    eax,0xd7f680a9
  442e10:	sti    
  442e11:	test   eax,0xb5629934
  442e16:	jbe    0x442e6f
  442e18:	sbb    DWORD PTR [edi-0x105d4ef2],edi
  442e1e:	(bad)  
  442e1f:	fcomp  QWORD PTR [edi-0x6a6c4db2]
  442e25:	sub    esp,DWORD PTR [edi-0x1b]
  442e28:	out    0x96,eax
  442e2a:	mov    al,0x49
  442e2c:	ss add eax,0xfea9f390
  442e32:	push   ss
  442e33:	push   0x59
  442e35:	cmp    bl,dl
  442e37:	sub    DWORD PTR [esi],edx
  442e39:	bound  ebx,QWORD PTR [esp+edi*8+0x10124833]
  442e40:	pop    ds
  442e41:	out    dx,al
  442e42:	in     eax,dx
  442e43:	test   al,0x46
  442e45:	dec    ebp
  442e46:	in     al,0xbd
  442e48:	sub    ebx,0xffffff90
  442e4b:	fdiv   DWORD PTR [eax-0x6a]
  442e4e:	inc    edi
  442e4f:	ds jl  0x442dea
  442e52:	or     BYTE PTR [edi+0x4a],dl
  442e55:	ds push 0x8
  442e58:	xor    eax,0x8e75c1c2
  442e5d:	pop    ebx
  442e5e:	sub    al,0xe0
  442e60:	mov    ds:0xfd997168,eax
  442e65:	pop    eax
  442e66:	js     0x442e0c
  442e68:	cmp    ebp,0xfffffff2
  442e6b:	das    
  442e6c:	cmp    al,0xdf
  442e6e:	retfw  0x9cd4
  442e72:	push   esp
  442e73:	push   0xf0ddd69e
  442e78:	and    cl,BYTE PTR [ebx+0x1a]
  442e7b:	in     eax,dx
  442e7c:	in     al,0xc5
  442e7e:	push   0xba9f3701
  442e83:	sbb    BYTE PTR [ebx-0xd],ch
  442e86:	xchg   BYTE PTR [edi-0x7c54c941],al
  442e8c:	adc    ebx,DWORD PTR [edi+0x22]
  442e8f:	outs   dx,DWORD PTR ds:[esi]
  442e90:	icebp  
  442e91:	push   0x54
  442e93:	scas   eax,DWORD PTR es:[edi]
  442e94:	aaa    
  442e95:	pusha  
  442e96:	div    DWORD PTR [edx+0x1fc999fa]
  442e9c:	mov    BYTE PTR ds:0xeee8915b,bh
  442ea2:	ja     0x442f0e
  442ea4:	test   DWORD PTR [esi],0x2eea6ab2
  442eaa:	mov    bh,0xd4
  442eac:	or     eax,0x140aad32
  442eb1:	push   eax
  442eb2:	xor    edx,edx
  442eb4:	ss pop esi
  442eb6:	adc    BYTE PTR [esi-0x22c77b34],0x8e
  442ebd:	(bad)  
  442ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442ebf:	and    esp,esp
  442ec1:	ins    DWORD PTR es:[edi],dx
  442ec2:	mov    ecx,0x821c7805
  442ec7:	jo     0x442eb0
  442ec9:	sub    BYTE PTR [edi],al
  442ecb:	sbb    al,0xcc
  442ecd:	cmovg  esi,DWORD PTR [eax]
  442ed0:	aaa    
  442ed1:	hlt    
  442ed2:	out    dx,eax
  442ed3:	jns    0x442e83
  442ed5:	cli    
  442ed6:	ret    0x1653
  442ed9:	retf   
  442eda:	cli    
  442edb:	in     al,0xae
  442edd:	and    eax,ebp
  442edf:	xor    al,0xc5
  442ee1:	sar    BYTE PTR [edi],cl
  442ee3:	xchg   edx,eax
  442ee4:	xchg   esi,eax
  442ee5:	sbb    al,0x48
  442ee7:	popf   
  442ee8:	xchg   DWORD PTR [edi+0x7d],ebp
  442eeb:	rcl    ebp,0x38
  442eee:	and    eax,0x35ed7cd7
  442ef3:	mov    WORD PTR [esi],fs
  442ef5:	ret    
  442ef6:	test   BYTE PTR [edi+0x6af03668],0x20
  442efd:	enter  0xcc3c,0xa9
  442f01:	scas   eax,DWORD PTR es:[edi]
  442f02:	pop    ebx
  442f03:	dec    esi
  442f04:	xchg   ebx,eax
  442f05:	stos   BYTE PTR es:[edi],al
  442f06:	dec    edx
  442f07:	push   cs
  442f08:	jle    0x442ea8
  442f0a:	mov    gs,WORD PTR [esi-0x2c5340d2]
  442f10:	loope  0x442eab
  442f12:	mov    edx,0x1cb4e180
  442f17:	cmp    al,0x7
  442f19:	(bad)  
  442f1a:	cs out dx,eax
  442f1c:	(bad)  
  442f1d:	sub    ah,cl
  442f1f:	xor    al,0x68
  442f21:	les    eax,FWORD PTR [edx-0x17f92650]
  442f27:	xor    ah,BYTE PTR [ebp-0x51]
  442f2a:	idiv   DWORD PTR [ecx]
  442f2c:	xchg   DWORD PTR [ecx+0x132f234c],esp
  442f32:	js     0x442ed9
  442f34:	js     0x442ee3
  442f36:	add    DWORD PTR [esp+eax*4+0x580645d7],edi
  442f3d:	push   ebp
  442f3e:	mov    BYTE PTR [eax-0x4fe3bf02],dh
  442f44:	pop    esp
  442f45:	sbb    al,0x5
  442f47:	cmc    
  442f48:	and    bh,BYTE PTR [esi+edx*1-0x1e]
  442f4c:	repz es mov eax,0x6c62b576
  442f53:	jo     0x442f22
  442f55:	sub    BYTE PTR [edi],bh
  442f57:	xchg   edx,eax
  442f58:	rcr    DWORD PTR [edx+0x35c652a],1
  442f5e:	ins    DWORD PTR es:[edi],dx
  442f5f:	mov    ds:0x6f3abb1d,eax
  442f64:	(bad)  
  442f65:	mov    ebx,0xc08110a2
  442f6a:	ins    BYTE PTR es:[edi],dx
  442f6b:	mov    ds,WORD PTR [ecx+0x31]
  442f6e:	fs push esi
  442f70:	test   BYTE PTR [ebx-0x6b],ah
  442f73:	aad    0xd7
  442f75:	xor    DWORD PTR [edi-0x3],0x7acdef3a
  442f7c:	pop    eax
  442f7d:	jmp    0xdc5d:0x33589c80
  442f84:	xchg   edi,eax
  442f85:	addr16 out 0x66,eax
  442f88:	pop    ds
  442f89:	mov    bh,0x49
  442f8b:	adc    al,ch
  442f8d:	or     DWORD PTR [esi-0x4f055640],esp
  442f93:	xchg   edx,eax
  442f94:	dec    esi
  442f95:	fstp   QWORD PTR [ebx-0x5ec192c1]
  442f9b:	mov    WORD PTR [ecx],cs
  442f9d:	mov    ecx,0xc60e5538
  442fa2:	sahf   
  442fa3:	mov    al,ds:0xeb223512
  442fa8:	pushf  
  442fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442faa:	jg     0x44301f
  442fac:	pop    ds
  442fad:	arpl   bx,cx
  442faf:	or     ch,dl
  442fb1:	xchg   esp,esi
  442fb3:	into   
  442fb4:	mov    bh,0xb2
  442fb6:	mov    eax,0x9e707e8c
  442fbb:	mov    eax,ds:0xa6f26321
  442fc0:	fcomip st,st(6)
  442fc2:	fnsave [eax]
  442fc4:	push   ecx
  442fc5:	into   
  442fc6:	(bad)  
  442fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442fc8:	sub    ebx,DWORD PTR [esi+0x76d61549]
  442fce:	cmp    DWORD PTR ds:[ebx-0x15],edx
  442fd2:	sbb    DWORD PTR [ecx-0x63],ebx
  442fd5:	jbe    0x443033
  442fd7:	and    ecx,DWORD PTR [eax-0x5f]
  442fda:	pop    ebx
  442fdb:	mov    ?,WORD PTR [ebx-0x53]
  442fde:	lods   al,BYTE PTR ds:[esi]
  442fdf:	stos   BYTE PTR es:[edi],al
  442fe0:	push   ebp
  442fe1:	out    dx,eax
  442fe2:	add    BYTE PTR [edx+ebx*2-0x72],dl
  442fe6:	xchg   esi,esi
  442fe8:	dec    ebx
  442fe9:	jbe    0x442fe6
  442feb:	push   esp
  442fec:	out    dx,al
  442fed:	ja     0x443068
  442fef:	and    eax,0x1c68e8f4
  442ff4:	xchg   ebp,eax
  442ff5:	fdiv   QWORD PTR [ebx+0x6db1ebe4]
  442ffb:	sub    eax,0xab1e4f8c
  443000:	fmul   DWORD PTR [esi-0x50]
  443003:	fisttp DWORD PTR [ebx+edi*2-0x1b0959f8]
  44300a:	jmp    0xebed6d3f
  44300f:	icebp  
  443010:	int    0xe
  443012:	(bad)  
  443013:	imul   ebx,DWORD PTR [eax+0x2f],0xffffffbc
  443017:	push   ss
  443018:	mov    edx,0x497324b9
  44301d:	ja     0x443016
  44301f:	fs xchg ebp,eax
  443021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443022:	xchg   BYTE PTR [esi-0x288ca4e2],al
  443028:	xchg   esp,eax
  443029:	dec    ecx
  44302a:	add    eax,0xb8b78863
  44302f:	dec    ecx
  443030:	aad    0xe
  443032:	and    esp,DWORD PTR [ebp+0x15]
  443035:	sub    DWORD PTR [esi-0x62],ecx
  443038:	(bad)  
  443039:	mov    ebx,0xcf048523
  44303e:	xchg   edx,eax
  44303f:	mov    al,ds:0x5cbb61cd
  443044:	cld    
  443045:	xchg   edi,eax
  443046:	inc    edi
  443047:	push   ss
  443048:	les    ecx,FWORD PTR [ebx-0x38]
  44304b:	dec    edx
  44304c:	inc    ecx
  44304d:	sbb    al,0x26
  44304f:	and    dl,bh
  443051:	push   ebx
  443052:	imul   edi,ebx,0xba7a53ce
  443058:	sbb    al,0xc2
  44305a:	mov    edi,0x866527d0
  44305f:	stos   BYTE PTR es:[edi],al
  443060:	mov    eax,0x67d0cca6
  443065:	leave  
  443066:	mov    ch,0x2c
  443068:	adc    DWORD PTR [edi-0x5d8b1950],ecx
  44306e:	int    0xa6
  443070:	sbb    cl,al
  443072:	ret    
  443073:	in     eax,dx
  443074:	inc    edx
  443075:	daa    
  443076:	cmp    cl,ah
  443078:	push   esi
  443079:	cmp    BYTE PTR [ecx],0x11
  44307c:	(bad)  
  44307d:	xor    eax,0xd6bc67bf
  443082:	shr    DWORD PTR [esi],1
  443084:	ins    BYTE PTR es:[edi],dx
  443085:	lods   eax,DWORD PTR ds:[esi]
  443086:	test   al,0xd
  443088:	xchg   esi,eax
  443089:	xchg   esp,eax
  44308a:	and    DWORD PTR [edx],0x19
  44308d:	push   ecx
  44308e:	push   esi
  44308f:	jbe    0x44308b
  443091:	pushf  
  443092:	iret   
  443093:	pop    ss
  443094:	sub    DWORD PTR [ebx+esi*2],ecx
  443097:	les    ecx,FWORD PTR [ecx-0xbe2f6c8]
  44309d:	mov    bl,0xf0
  44309f:	inc    esp
  4430a0:	hlt    
  4430a1:	mov    WORD PTR [ecx+ebp*8-0x5924a54a],cs
  4430a8:	inc    ebx
  4430a9:	mov    al,ds:0x52718f1
  4430ae:	leave  
  4430af:	jle    0x4430c6
  4430b1:	imul   esp,DWORD PTR [ebx-0x3cd6f22b],0x10fb9cae
  4430bb:	mov    edi,edi
  4430bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4430be:	inc    ecx
  4430bf:	add    esp,DWORD PTR [edi+0x86b07bc]
  4430c5:	xchg   ebp,eax
  4430c6:	pop    edx
  4430c7:	xchg   ebp,eax
  4430c8:	(bad)  [ebp-0x48]
  4430cb:	mov    al,ds:0xe011c289
  4430d0:	gs pop esp
  4430d2:	jl     0x4430ce
  4430d4:	fadd   DWORD PTR [ebp+eiz*8+0x4a]
  4430d8:	xchg   edx,eax
  4430d9:	popf   
  4430da:	sub    al,0xe8
  4430dc:	mov    ecx,?
  4430de:	jae    0x44307b
  4430e0:	test   esp,0x12da9a15
  4430e6:	stos   BYTE PTR es:[edi],al
  4430e7:	mov    al,ds:0x100e446b
  4430ec:	aaa    
  4430ed:	add    eax,0xe767ae2f
  4430f2:	dec    esi
  4430f3:	jmp    0x443119
  4430f5:	dec    esp
  4430f6:	je     0x443102
  4430f8:	int    0x3
  4430fa:	mov    esi,0x433012a3
  4430ff:	pop    es
  443100:	lock add eax,0xd21274ae
  443106:	aaa    
  443107:	adc    dl,BYTE PTR [eax]
  443109:	shr    BYTE PTR [ecx-0x26d1b750],0xd0
  443110:	cwde   
  443111:	xchg   eax,edx
  443113:	ins    BYTE PTR es:[edi],dx
  443114:	push   cs
  443115:	jae    0x4430bc
  443117:	fld    st(2)
  443119:	sub    al,0x9
  44311b:	pop    ecx
  44311c:	sub    BYTE PTR [ecx],dl
  44311e:	stos   BYTE PTR es:[edi],al
  44311f:	mov    ah,0xca
  443121:	push   ebp
  443122:	nop
  443123:	xor    al,0xbf
  443125:	inc    ebp
  443126:	pop    eax
  443127:	push   ecx
  443128:	mov    ch,0xa9
  44312a:	scas   al,BYTE PTR es:[edi]
  44312b:	dec    ebp
  44312c:	push   ss
  44312d:	bound  ecx,QWORD PTR [ebx]
  44312f:	dec    edi
  443130:	ret    0x964b
  443133:	push   0xffffff82
  443135:	mov    ebx,0xe503e8f2
  44313a:	je     0x4430eb
  44313c:	fistp  DWORD PTR [ecx+ebx*4-0x4f]
  443140:	pusha  
  443141:	mov    eax,cs
  443143:	mov    ah,BYTE PTR [edx-0x27698fee]
  443149:	inc    edx
  44314a:	xchg   edi,eax
  44314b:	call   0x93d100cd
  443150:	pop    esi
  443151:	inc    ecx
  443152:	xchg   DWORD PTR [ebx+esi*8+0x2db00b5c],esp
  443159:	pop    es
  44315a:	sub    bh,ah
  44315c:	adc    ebp,edi
  44315e:	push   ss
  44315f:	bound  ecx,QWORD PTR [esi+eiz*2]
  443162:	pop    edi
  443163:	or     al,0x56
  443165:	sbb    dh,BYTE PTR [edi+ecx*8-0x7a]
  443169:	mov    fs,WORD PTR [ebp+0x49e7495e]
  44316f:	push   esp
  443170:	imul   edx,DWORD PTR [eax-0x683f02bd],0xffffff9b
  443177:	out    0x4,eax
  443179:	imul   cl
  44317b:	cmp    DWORD PTR [ecx],ebx
  44317d:	loopne 0x44311b
  44317f:	mov    ?,ecx
  443181:	add    al,0x7e
  443184:	jl     0x4431c4
  443186:	sub    ah,BYTE PTR [bp+si-0x16c8]
  44318b:	cld    
  44318c:	icebp  
  44318d:	sbb    eax,0x1d1ab24d
  443192:	add    eax,0xa38d034c
  443197:	add    DWORD PTR [edi+0x7e37eb02],edx
  44319d:	xchg   DWORD PTR [ebx],esi
  44319f:	lods   eax,DWORD PTR ds:[esi]
  4431a0:	mov    ds:0x53964752,eax
  4431a5:	dec    eax
  4431a6:	jnp    0x443131
  4431a8:	mov    ebx,edi
  4431aa:	test   al,0xbd
  4431ac:	fstp   TBYTE PTR [edi+ebx*8-0x7ddeb05b]
  4431b3:	loope  0x44316d
  4431b5:	fcom   DWORD PTR [ebp+0x11]
  4431b8:	mov    BYTE PTR [edx-0x54],ah
  4431bb:	and    eax,0xcf70c0b2
  4431c0:	fsubr  QWORD PTR [esi-0x17ca144b]
  4431c6:	scas   al,BYTE PTR es:[edi]
  4431c7:	mov    BYTE PTR [edx-0x12996b9e],al
  4431cd:	sbb    edx,DWORD PTR [edi+edi*4]
  4431d0:	fsub   DWORD PTR [esi-0x730cf11c]
  4431d6:	xor    bh,BYTE PTR [ebx-0x4d1af34e]
  4431dc:	mov    ecx,0x82c33544
  4431e1:	popa   
  4431e2:	inc    DWORD PTR [esi]
  4431e4:	(bad)  
  4431e5:	mov    bh,0x6e
  4431e7:	xchg   esp,eax
  4431e8:	scas   eax,DWORD PTR es:[edi]
  4431e9:	in     eax,dx
  4431ea:	xor    al,0x71
  4431ec:	cli    
  4431ed:	stos   BYTE PTR es:[edi],al
  4431ee:	adc    edx,DWORD PTR [edi-0x43]
  4431f1:	rcl    DWORD PTR [ecx+edi*2],1
  4431f4:	into   
  4431f5:	(bad)  
  4431f6:	pop    ds
  4431f7:	xlat   BYTE PTR ds:[ebx]
  4431f8:	or     ebx,DWORD PTR [esi-0x2e]
  4431fb:	outs   dx,DWORD PTR ds:[esi]
  4431fc:	pop    ebp
  4431fd:	div    esi
  4431ff:	stc    
  443200:	add    BYTE PTR [edi-0x19],cl
  443203:	imul   esp,DWORD PTR [esp+eax*2+0x71],0xffffffdf
  443208:	xchg   edx,eax
  443209:	jp     0x443258
  44320b:	xor    eax,0x8efbb53b
  443210:	ror    BYTE PTR [ecx-0x4e],1
  443213:	xchg   ebx,eax
  443214:	xchg   DWORD PTR [esi-0x72],edx
  443217:	pop    ss
  443218:	xchg   ebp,esp
  44321a:	and    DWORD PTR [ecx+ecx*8+0x7a],0xab34277d
  443222:	ret    0x931b
  443225:	daa    
  443226:	or     eax,0xdd3b7830
  44322b:	es jb  0x443246
  44322e:	jne    0x443280
  443230:	cmc    
  443231:	sbb    bl,BYTE PTR [esi]
  443233:	mov    ds:0xc279f43e,al
  443238:	adc    ebx,DWORD PTR [ecx-0x7fc7feac]
  44323e:	push   esp
  44323f:	jb     0x4431ed
  443241:	out    0x75,eax
  443243:	push   ecx
  443244:	lock push edx
  443246:	hlt    
  443247:	jge    0x44328f
  443249:	jle    0x44320b
  44324b:	cmp    DWORD PTR [edx],ecx
  44324d:	iret   
  44324e:	bound  esp,QWORD PTR [ecx+0x57]
  443251:	daa    
  443252:	fld    TBYTE PTR [ebx+0x58b4029f]
  443258:	or     al,0x1c
  44325a:	rep outs dx,BYTE PTR ds:[esi]
  44325c:	xor    al,0x2
  44325e:	push   0x50
  443260:	(bad)  
  443261:	jmp    0x443238
  443263:	dec    esi
  443264:	adc    BYTE PTR [ebx+0xfa7c6bb],ch
  44326a:	or     DWORD PTR [edi-0x29],esi
  44326d:	jg     0x443202
  44326f:	mov    ecx,0x37e41bdf
  443274:	xchg   esi,eax
  443275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443276:	test   BYTE PTR [edx+0x15],dl
  443279:	(bad)  
  44327b:	mov    ah,0x1d
  44327d:	lds    ebx,FWORD PTR [eax]
  44327f:	loope  0x44327c
  443281:	ins    DWORD PTR es:[edi],dx
  443282:	mov    eax,ds:0xf28a3ec2
  443287:	pushf  
  443288:	(bad)
  44328b:	retf   
  44328c:	inc    eax
  44328d:	pop    ecx
  44328e:	mov    bh,cl
  443290:	jb     0x443276
  443292:	fistp  DWORD PTR [edi]
  443294:	sub    al,0x9a
  443296:	sub    ah,BYTE PTR [ecx-0x6c]
  443299:	sub    al,0xfd
  44329b:	call   0xe627:0x607a80d4
  4432a2:	xlat   BYTE PTR ds:[ebx]
  4432a3:	add    bh,BYTE PTR [ebx]
  4432a5:	pushf  
  4432a6:	int3   
  4432a7:	pop    ebp
  4432a8:	mov    eax,0x34eac8b3
  4432ad:	sub    cl,BYTE PTR [edx-0x36]
  4432b0:	pop    ebx
  4432b1:	jl     0x443243
  4432b3:	xchg   DWORD PTR [eax-0x6110e6f3],edi
  4432b9:	pop    esi
  4432ba:	jp     0x4432c7
  4432bc:	cmp    esi,eax
  4432be:	enter  0x2b50,0xc5
  4432c2:	je     0x4432f8
  4432c4:	neg    DWORD PTR [eax]
  4432c6:	scas   eax,DWORD PTR es:[edi]
  4432c7:	cmp    dl,BYTE PTR [ebx+0x20fbb365]
  4432cd:	dec    esi
  4432ce:	ret    0xf576
  4432d1:	cmp    eax,0x5029d41d
  4432d6:	adc    DWORD PTR [edi-0x28],edx
  4432d9:	pop    eax
  4432da:	rcr    BYTE PTR [edi+0x39617a5a],1
  4432e0:	lods   eax,DWORD PTR ds:[esi]
  4432e1:	xchg   esp,eax
  4432e2:	adc    ecx,DWORD PTR [edi]
  4432e4:	rcr    BYTE PTR [ebp-0x60],1
  4432e7:	arpl   dx,sp
  4432e9:	shr    dh,0x9f
  4432ec:	pop    es
  4432ed:	std    
  4432ee:	mov    al,ds:0xecbb824
  4432f3:	popa   
  4432f4:	xchg   dh,ch
  4432f6:	xchg   DWORD PTR [edi],ebp
  4432f8:	dec    esp
  4432f9:	xchg   DWORD PTR [esi+esi*1+0x78],edi
  4432fd:	push   ds
  4432fe:	clc    
  4432ff:	dec    ebp
  443300:	adc    al,0x53
  443302:	add    DWORD PTR [eax+0x6f],0x6b
  443306:	fucom  st(6)
  443308:	adc    ah,bh
  44330a:	shl    DWORD PTR [esi+esi*8],cl
  44330d:	aaa    
  44330e:	fs mov bl,0x84
  443311:	adc    BYTE PTR [ecx],bl
  443313:	adc    eax,0x773f2632
  443318:	dec    ecx
  443319:	inc    edi
  44331a:	daa    
  44331b:	push   esp
  44331c:	jmp    0x11b6:0x86893057
  443323:	in     al,dx
  443324:	dec    esp
  443325:	ins    BYTE PTR es:[edi],dx
  443326:	popf   
  443327:	call   0x33de:0x2578021a
  44332e:	dec    esp
  44332f:	or     eax,0x51e022a9
  443334:	dec    ebp
  443335:	cdq    
  443336:	and    DWORD PTR [ebx],0xfffffff5
  443339:	sbb    eax,0x12997bd6
  44333e:	inc    esp
  44333f:	mov    ss:0xe7673faa,al
  443345:	inc    ebp
  443346:	lds    esi,FWORD PTR [esi]
  443348:	mul    BYTE PTR [edx-0x4c]
  44334b:	lock (bad) 
  44334d:	jns    0x443329
  44334f:	sbb    al,0x52
  443351:	xor    al,0x98
  443353:	pop    es
  443354:	daa    
  443355:	xor    BYTE PTR cs:[edi+0x30],0x83
  44335a:	fdiv   QWORD PTR [edx]
  44335c:	stos   BYTE PTR es:[edi],al
  44335d:	mov    ah,0x52
  44335f:	ds stc 
  443361:	int3   
  443362:	xor    al,BYTE PTR [edx-0x10]
  443365:	jmp    0xca0be6e2
  44336a:	push   cs
  44336b:	or     al,0x8b
  44336d:	fidivr WORD PTR [esi]
  44336f:	stos   BYTE PTR es:[edi],al
  443370:	inc    ebx
  443371:	mov    ah,BYTE PTR [esi]
  443373:	bound  edi,QWORD PTR [ecx-0x5bcdc16]
  443379:	mov    ds,WORD PTR [ecx+0x3f]
  44337c:	or     dh,ah
  44337e:	int3   
  44337f:	push   ecx
  443380:	fnop   
  443382:	mov    ss,WORD PTR [esp+ebx*4]
  443385:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443387:	pop    ss
  443388:	push   ebp
  443389:	aad    0xda
  44338b:	push   edi
  44338c:	push   ebx
  44338d:	push   DWORD PTR [ebp-0x29063472]
  443393:	and    al,BYTE PTR [edi-0x75ca8972]
  443399:	ret    
  44339a:	sti    
  44339b:	mov    esp,0x4422e63e
  4433a0:	inc    ebp
  4433a1:	or     al,0x38
  4433a3:	enter  0xa46c,0x4f
  4433a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4433a8:	adc    al,0x86
  4433aa:	xchg   BYTE PTR [eax+0x5c],dl
  4433ad:	aaa    
  4433ae:	dec    ecx
  4433af:	sbb    DWORD PTR [edi+0x50191580],ecx
  4433b5:	xchg   esp,eax
  4433b6:	daa    
  4433b7:	sbb    al,0x32
  4433b9:	aas    
  4433ba:	shl    eax,1
  4433bc:	adc    DWORD PTR [ebp-0x243a64d7],edi
  4433c2:	int    0xb8
  4433c4:	in     eax,0x5b
  4433c6:	push   0xffffffc7
  4433c8:	and    DWORD PTR [eax],ecx
  4433ca:	mov    ds:0x81c46d94,al
  4433cf:	adc    esi,DWORD PTR ds:0xc7d4bd8e
  4433d5:	push   edx
  4433d6:	test   BYTE PTR [ecx+0x7f67310c],bl
  4433dc:	push   esi
  4433dd:	test   eax,0xf8904366
  4433e2:	and    edx,DWORD PTR fs:[ebp+eiz*1+0x60]
  4433e7:	ss mov bl,0x92
  4433ea:	mov    dl,0xd7
  4433ec:	mov    edx,0xd4d59bd5
  4433f1:	retf   
  4433f2:	int    0x30
  4433f4:	ins    DWORD PTR es:[edi],dx
  4433f5:	pop    ecx
  4433f6:	ins    DWORD PTR es:[edi],dx
  4433f7:	push   edx
  4433f8:	sar    DWORD PTR [ebx+0x51],cl
  4433fb:	shl    dl,0x6
  4433fe:	loop   0x44343d
  443400:	cmc    
  443401:	dec    esp
  443402:	pop    ebp
  443403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443404:	mov    ebp,0x6500f29e
  443409:	or     DWORD PTR [edx+0x3c],0x53
  44340d:	int3   
  44340e:	xchg   eax,edx
  443410:	pushf  
  443411:	sbb    DWORD PTR [ecx],esp
  443413:	cmp    DWORD PTR [esi+0x6ecd4a08],ebp
  443419:	in     eax,dx
  44341a:	or     al,0x1a
  44341c:	mov    edi,0x2b7cbad
  443421:	ins    DWORD PTR es:[edi],dx
  443422:	add    DWORD PTR [esi-0x4b],esi
  443425:	pop    esi
  443426:	aas    
  443427:	push   esi
  443428:	push   0xffffffb5
  44342a:	and    DWORD PTR [edx+0x1656fa19],edi
  443430:	or     edi,esi
  443432:	jb     0x4433f8
  443434:	jge    0x443475
  443436:	pop    ebx
  443437:	cmp    esi,ebp
  443439:	sti    
  44343a:	sbb    al,0xb6
  44343c:	js     0x443469
  44343e:	inc    ebp
  44343f:	sub    al,0x32
  443441:	pusha  
  443442:	sub    BYTE PTR [edi-0x3c2285cc],bl
  443448:	add    DWORD PTR gs:[ebx+0x86d86b1],ebx
  44344f:	add    bl,BYTE PTR [edx+0xe]
  443452:	gs dec ebx
  443454:	adc    dl,ch
  443456:	push   ebp
  443457:	pop    esi
  443458:	hlt    
  443459:	loop   0x4434ae
  44345b:	retf   0x7795
  44345e:	fdiv   DWORD PTR [edi+0x5d152215]
  443464:	lods   al,BYTE PTR ds:[esi]
  443465:	repz jle 0x443471
  443468:	jno    0x44349a
  44346a:	ja     0x44347c
  44346c:	cld    
  44346d:	iret   
  44346e:	mov    cl,ch
  443470:	out    dx,al
  443471:	xchg   ebx,eax
  443472:	jmp    0x438a:0x9a12c812
  443479:	outs   dx,BYTE PTR ds:[esi]
  44347a:	add    esp,DWORD PTR [ebx-0x6d]
  44347d:	je     0x4434c8
  44347f:	add    BYTE PTR [eax-0x49],ch
  443482:	call   0xbc72:0x69c1ea81
  443489:	ins    DWORD PTR es:[edi],dx
  44348a:	mov    edi,0x1a335f95
  44348f:	ja     0x443483
  443491:	jae    0x443456
  443493:	hlt    
  443494:	mov    esi,0x887017de
  443499:	pop    edi
  44349a:	fisubr WORD PTR [ebx-0x36]
  44349d:	or     eax,0xf7fb2fdd
  4434a2:	sti    
  4434a3:	icebp  
  4434a4:	jbe    0x443518
  4434a6:	mov    bl,0x8c
  4434a8:	pop    ebp
  4434a9:	lods   al,BYTE PTR ds:[esi]
  4434aa:	in     al,0x24
  4434ac:	xor    BYTE PTR [edx+eax*1+0x4699ceb3],ah
  4434b3:	add    BYTE PTR [ebx],cl
  4434b5:	sbb    al,0xd9
  4434b7:	aaa    
  4434b8:	outs   dx,BYTE PTR ds:[esi]
  4434b9:	pusha  
  4434ba:	je     0x443532
  4434bc:	sbb    eax,DWORD PTR [edi-0x5e6848da]
  4434c2:	mov    ebx,0x117b3333
  4434c7:	xor    BYTE PTR [edx-0x21],ch
  4434ca:	mov    ebp,0x3c952edc
  4434cf:	push   0xffffff99
  4434d1:	hlt    
  4434d2:	sbb    ah,bh
  4434d4:	jns    0x4434f2
  4434d6:	cmp    DWORD PTR [edi-0xc],ebp
  4434d9:	dec    eax
  4434da:	mov    edx,0x558a6a3
  4434df:	jg     0x44355d
  4434e1:	xchg   ebx,eax
  4434e2:	fiadd  WORD PTR [edi+ebx*2-0x24e59357]
  4434e9:	out    0x4b,eax
  4434eb:	xchg   edi,eax
  4434ec:	dec    esi
  4434ed:	jmp    FWORD PTR [esi]
  4434ef:	out    dx,al
  4434f0:	xor    ecx,ebx
  4434f2:	popa   
  4434f3:	into   
  4434f4:	pop    ebp
  4434f5:	(bad)  
  4434f6:	lahf   
  4434f7:	ret    0x62ab
  4434fa:	sbb    edi,DWORD PTR [eax+0x31]
  4434fd:	sub    edi,DWORD PTR [esi+esi*2]
  443500:	sub    al,0xe3
  443502:	das    
  443503:	and    edx,DWORD PTR [edi+0x31127c3e]
  443509:	outs   dx,BYTE PTR ds:[esi]
  44350a:	sub    esi,DWORD PTR [esi+0x5c]
  44350d:	in     al,dx
  44350e:	div    dh
  443510:	arpl   WORD PTR ds:0x64fa2c11,sp
  443516:	pop    ebp
  443517:	xor    esi,esi
  443519:	adc    DWORD PTR [edx-0x5233505],esi
  44351f:	in     eax,dx
  443520:	dec    ebp
  443521:	xchg   BYTE PTR [esi+eiz*2],cl
  443524:	sub    eax,0x78e39e5c
  443529:	mov    ebx,0x9dd8c8fe
  44352e:	int3   
  44352f:	lahf   
  443530:	shr    BYTE PTR [ecx],1
  443532:	stos   BYTE PTR es:[edi],al
  443533:	mov    ecx,0x6aa5e6
  443538:	push   ebx
  443539:	mov    esi,0x3e93038f
  44353e:	and    BYTE PTR [ebx+0x7a],ch
  443541:	mov    esi,0x92b86efd
  443546:	loop   0x4435c1
  443548:	dec    esp
  443549:	jne    0x443558
  44354b:	and    al,0xf5
  44354d:	inc    ebx
  44354e:	out    dx,eax
  44354f:	imul   ebp,DWORD PTR [ebx+ebp*4-0x6f],0xa6330b24
  443557:	add    eax,DWORD PTR [edi]
  443559:	bound  eax,QWORD PTR [edx-0x56]
  44355c:	mov    edx,0xcb6b475a
  443561:	push   esi
  443562:	jns    0x443556
  443564:	add    eax,0xecc203cf
  443569:	icebp  
  44356a:	mov    bl,0x4f
  44356c:	pop    ebx
  44356d:	or     BYTE PTR [ecx+0x69],ah
  443570:	jae    0x44357a
  443572:	and    al,0x67
  443574:	xor    BYTE PTR ds:0xf8a5e431,0xde
  44357b:	aam    0x4f
  44357d:	inc    edx
  44357e:	les    eax,FWORD PTR [ebx-0x52645abc]
  443584:	inc    esi
  443585:	and    bl,BYTE PTR [edi]
  443587:	mov    ch,ah
  443589:	jmp    0x2869:0x1bfb349b
  443590:	arpl   WORD PTR [edx+0x1614ce96],sp
  443596:	jecxz  0x4435e2
  443598:	add    ecx,DWORD PTR [ecx]
  44359a:	outs   dx,BYTE PTR ds:[esi]
  44359b:	xchg   esi,eax
  44359c:	cdq    
  44359d:	inc    ecx
  44359e:	mov    gs,WORD PTR [edx+ebx*4]
  4435a1:	icebp  
  4435a2:	sub    eax,0x31ce741e
  4435a7:	cmp    bl,BYTE PTR [edi+ebp*4]
  4435aa:	dec    eax
  4435ab:	jp     0x443599
  4435ad:	neg    BYTE PTR [ebx+0x63]
  4435b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4435b1:	xor    edi,ebx
  4435b3:	clc    
  4435b4:	mov    dh,0x84
  4435b6:	test   al,0xd0
  4435b8:	and    dh,dh
  4435ba:	clc    
  4435bb:	fisttp QWORD PTR [edx]
  4435bd:	mov    DWORD PTR [eax],esi
  4435bf:	fist   DWORD PTR [edi-0x4446389b]
  4435c5:	push   ds
  4435c6:	inc    ebx
  4435c7:	mov    ebx,0xa40d1ac3
  4435cc:	and    al,0xe8
  4435ce:	das    
  4435cf:	(bad)  
  4435d0:	mov    ch,0xb9
  4435d2:	in     al,0xea
  4435d4:	(bad)  
  4435d5:	shl    ecx,0xc0
  4435d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4435d9:	or     DWORD PTR [edi+0x7c97cefc],eax
  4435df:	cmp    eax,0x83a9d028
  4435e4:	and    ah,BYTE PTR [edi+ebx*2+0x23f6d0dc]
  4435eb:	ror    BYTE PTR [edx],cl
  4435ed:	(bad)  
  4435ef:	jecxz  0x443661
  4435f1:	sub    DWORD PTR [ebx-0x18],ebp
  4435f4:	or     al,BYTE PTR [esi+0x70c8f64]
  4435fa:	adc    eax,0xf219434a
  4435ff:	pop    edx
  443600:	ins    DWORD PTR es:[edi],dx
  443601:	das    
  443602:	sub    ebp,DWORD PTR [edi-0x9]
  443605:	xor    eax,0xf0442b3a
  44360a:	mov    BYTE PTR [eax+0x145b71c],0xc7
  443611:	jmp    0x443625
  443613:	and    eax,0x7b4d90ab
  443618:	lods   eax,DWORD PTR ds:[esi]
  443619:	idiv   BYTE PTR [ebx+0x43]
  44361c:	sub    ch,dl
  44361e:	mov    ecx,0x7f293566
  443623:	fbld   TBYTE PTR [edi-0x21]
  443626:	std    
  443627:	lea    esp,[esi+ebp*4+0xe]
  44362b:	add    dl,bl
  44362d:	xchg   ebx,eax
  44362e:	cdq    
  44362f:	push   edi
  443630:	mov    bh,0xdc
  443632:	dec    ebp
  443633:	add    eax,0x9bb19def
  443638:	inc    DWORD PTR cs:[ebx+0x17193151]
  44363f:	sub    al,0xa1
  443641:	cli    
  443642:	sti    
  443643:	push   esp
  443644:	ins    DWORD PTR es:[edi],dx
  443645:	adc    al,0x52
  443647:	or     ebx,ebp
  443649:	pop    ds
  44364a:	dec    ebx
  44364b:	pop    ss
  44364c:	out    0x5d,al
  44364e:	dec    ebp
  44364f:	push   ebx
  443650:	jg     0x4436a7
  443652:	(bad)  
  443653:	(bad)  
  443655:	outs   dx,DWORD PTR ds:[esi]
  443656:	sub    bh,BYTE PTR [edx]
  443658:	dec    eax
  443659:	pop    ss
  44365a:	sub    DWORD PTR [eax],ebp
  44365c:	mov    al,0xd2
  44365e:	cmp    al,BYTE PTR [edx+0x1]
  443661:	(bad)  [ebx-0x32e9673a]
  443667:	hlt    
  443668:	jbe    0x443633
  44366a:	inc    esi
  44366b:	imul   edx,eax,0xca28afa8
  443671:	jnp    0x4435f3
  443673:	xchg   DWORD PTR [ebp+0x501725f7],eax
  443679:	rcr    DWORD PTR [eax],1
  44367b:	pop    ds
  44367c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44367d:	cmp    al,0xe7
  44367f:	and    eax,0x9c5fd35b
  443684:	dec    eax
  443685:	(bad)
  443688:	inc    ebp
  443689:	aad    0x71
  44368b:	or     BYTE PTR [eax],cl
  44368d:	repz mov ah,0x91
  443690:	jnp    0x44367c
  443692:	call   0xd407c9a4
  443697:	call   0x39cf:0x4fcd2d2c
  44369e:	jae    0x44366d
  4436a0:	sub    BYTE PTR [edx],cl
  4436a2:	arpl   WORD PTR [eax],cx
  4436a4:	xor    BYTE PTR [edi+0xdcca2ed],cl
  4436aa:	inc    esp
  4436ab:	ss and edi,edi
  4436ae:	ins    DWORD PTR es:[edi],dx
  4436af:	jbe    0x443669
  4436b1:	outs   dx,DWORD PTR ds:[esi]
  4436b2:	adc    eax,0x6daae915
  4436b7:	xchg   ebx,eax
  4436b8:	rcr    al,0x42
  4436bb:	sbb    ebp,DWORD PTR [edi+0x3c]
  4436be:	jns    0x44366d
  4436c0:	xchg   esi,eax
  4436c1:	idiv   dh
  4436c3:	jmp    0x4436cf
  4436c5:	push   esp
  4436c6:	ficomp WORD PTR [esi-0xd]
  4436c9:	ins    BYTE PTR es:[edi],dx
  4436ca:	out    dx,al
  4436cb:	mov    ds:0x37131096,eax
  4436d0:	mov    cl,BYTE PTR [esp+edx*1]
  4436d3:	ja     0x443746
  4436d5:	add    BYTE PTR [edi],bh
  4436d7:	sbb    DWORD PTR [edi+edx*2],eax
  4436da:	fist   DWORD PTR [esp+edx*2-0x26]
  4436de:	cmp    eax,0xfbf2bf7c
  4436e3:	in     al,0xd
  4436e5:	jmp    0x65d8:0xe53690e1
  4436ec:	mov    eax,0xb820a5f
  4436f1:	pop    ebx
  4436f2:	inc    ebp
  4436f3:	mov    ds:0xc8c71987,eax
  4436f8:	pop    esp
  4436f9:	in     eax,dx
  4436fa:	jnp    0x44372c
  4436fc:	sti    
  4436fd:	call   0x748a4bce
  443702:	ret    0x9f8f
  443705:	dec    esp
  443706:	xor    esi,ebp
  443708:	ror    BYTE PTR [eax],cl
  44370a:	(bad)  
  44370b:	dec    edx
  44370c:	sbb    ch,BYTE PTR [ecx+0x2f]
  44370f:	pop    DWORD PTR [esi+0x7d]
  443712:	mov    ebp,0xfedc346f
  443717:	iret   
  443718:	pop    esi
  443719:	pop    ss
  44371a:	(bad)  
  44371b:	bound  ebx,QWORD PTR [eax]
  44371d:	inc    ebx
  44371e:	test   al,0xf1
  443720:	push   esp
  443721:	(bad)  
  443722:	imul   DWORD PTR [ebx]
  443724:	ds push 0xffffffd6
  443727:	xchg   ebx,eax
  443728:	or     dl,ch
  44372a:	adc    DWORD PTR [ecx+edi*2+0xa],ebp
  44372e:	imul   eax,DWORD PTR [edx-0x733eaac8],0x2a
  443735:	inc    eax
  443736:	and    DWORD PTR [eax-0x70],esp
  443739:	mov    fs,WORD PTR [edx]
  44373b:	or     ebx,DWORD PTR [ecx-0x22b04a7d]
  443741:	stc    
  443742:	out    0x80,eax
  443744:	pop    ds
  443745:	scas   eax,DWORD PTR es:[edi]
  443746:	or     DWORD PTR [ebp+0x7e913bd2],ebx
  44374c:	(bad)  
  44374d:	das    
  44374e:	pop    es
  44374f:	hlt    
  443750:	into   
  443751:	adc    ah,al
  443753:	cmc    
  443754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443755:	cmp    DWORD PTR [edx+0x31fa409b],edi
  44375b:	mov    edx,0x37afa317
  443760:	(bad)  [edi-0x5e]
  443763:	adc    esp,esp
  443765:	add    DWORD PTR [ebp-0x52],ebp
  443768:	popf   
  443769:	(bad)  
  44376a:	loope  0x443702
  44376c:	bound  ebp,QWORD PTR [esi+ecx*1-0x74]
  443770:	push   cs
  443771:	inc    esi
  443772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443773:	addr16 mov eax,ds:0xec2
  443777:	pop    es
  443778:	fcmovbe st,st(5)
  44377a:	adc    al,0x5
  44377c:	sub    al,0xce
  44377e:	and    dh,BYTE PTR [eax+ecx*8-0x35c681bd]
  443785:	es aam 0xe5
  443788:	test   BYTE PTR [edx],ah
  44378a:	sub    al,0x67
  44378c:	xchg   edi,eax
  44378d:	mov    BYTE PTR [esi+0x46c5a09a],dl
  443793:	ds jne 0x4437c8
  443796:	fist   DWORD PTR [ecx+0x397b0513]
  44379c:	lds    edx,FWORD PTR [esi+0x1d865630]
  4437a2:	shl    DWORD PTR [esi+0x2409a4f0],1
  4437a8:	add    eax,0x634bcea8
  4437ad:	retf   0xcf2a
  4437b0:	lock mov al,0x40
  4437b3:	inc    DWORD PTR gs:[esi]
  4437b6:	fwait
  4437b7:	pop    ecx
  4437b8:	xchg   esp,eax
  4437b9:	pop    es
  4437ba:	mov    al,BYTE PTR [ecx+esi*1-0x7d]
  4437be:	test   eax,0x8bf08d5a
  4437c3:	imul   ecx,DWORD PTR [ebx+eax*2-0x218b0643],0x20b402fa
  4437ce:	bound  ebp,QWORD PTR [esi*1+0x50ea2a9d]
  4437d5:	sub    BYTE PTR [ebx+0x1a],al
  4437d8:	(bad)  
  4437d9:	fbstp  TBYTE PTR [esi]
  4437db:	call   0x75b4ce08
  4437e0:	sub    ah,al
  4437e2:	push   ebp
  4437e3:	fnstsw WORD PTR ds:0x61f8e083
  4437e9:	push   ebp
  4437ea:	adc    ch,BYTE PTR [edx-0x7f]
  4437ed:	jle    0x44384c
  4437ef:	sub    eax,0x2d4a9c6
  4437f4:	jno    0x44385c
  4437f6:	jne    0x443779
  4437f8:	mul    cl
  4437fa:	mov    WORD PTR ds:0x5088161e,es
  443800:	jno    0x4437c6
  443802:	adc    eax,0x58455ad4
  443807:	js     0x443806
  443809:	std    
  44380a:	mov    WORD PTR [edi],es
  44380c:	mov    bl,0x90
  44380e:	in     al,dx
  44380f:	cli    
  443810:	ins    DWORD PTR es:[edi],dx
  443811:	nop
  443812:	jae    0x443879
  443814:	(bad)  
  443815:	sub    eax,0x6116e4d7
  44381a:	iret   
  44381b:	lods   al,BYTE PTR ds:[esi]
  44381c:	mov    ebp,0xfcd68ab4
  443821:	mov    al,ds:0xe236c731
  443826:	and    edx,DWORD PTR [edx+0x54e461df]
  44382c:	sbb    al,0x9c
  44382e:	outs   dx,DWORD PTR ds:[esi]
  44382f:	data16 stos BYTE PTR es:[edi],al
  443831:	xchg   esi,eax
  443832:	test   DWORD PTR [ebp-0x48],ecx
  443835:	int3   
  443836:	mov    bh,0x60
  443838:	jl     0x4437c5
  44383a:	lahf   
  44383b:	aaa    
  44383c:	cs aas 
  44383e:	or     BYTE PTR [eax],0x6e
  443841:	add    al,BYTE PTR [ebp+0x25]
  443844:	cld    
  443845:	xor    dh,cl
  443847:	je     0x443852
  443849:	dec    ecx
  44384a:	ficomp WORD PTR [eax+0x13929fb9]
  443850:	inc    ebx
  443851:	ret    
  443852:	pusha  
  443853:	xor    esp,DWORD PTR [edi-0x1784e6ae]
  443859:	(bad)  
  44385a:	fstp   DWORD PTR [ebx]
  44385c:	cmc    
  44385d:	cs cwde 
  44385f:	outs   dx,BYTE PTR ds:[esi]
  443860:	mov    ds:0x37faf15d,eax
  443865:	sbb    eax,0xe1b67ea2
  44386a:	fsub   st,st(3)
  44386c:	pop    es
  44386d:	adc    dl,BYTE PTR [edi-0x55]
  443870:	cwde   
  443871:	inc    ecx
  443872:	ins    DWORD PTR es:[edi],dx
  443873:	bound  esp,QWORD PTR [ecx]
  443875:	push   esp
  443876:	mov    bl,0xc6
  443878:	push   0x224c1812
  44387d:	xor    eax,0xe4ca22e0
  443882:	shl    BYTE PTR [eax-0xc],cl
  443885:	cmp    DWORD PTR [ecx+0xe9b28d7],edi
  44388b:	(bad)  
  44388c:	(bad)  
  44388d:	fistp  WORD PTR [esi+0x785f45df]
  443893:	adc    bl,BYTE PTR [ebx+0x316c513c]
  443899:	cmp    edx,edi
  44389b:	test   BYTE PTR [eax+0xe85228],0xc1
  4438a2:	inc    ebx
  4438a3:	sahf   
  4438a4:	or     al,0xcd
  4438a6:	xchg   esi,eax
  4438a7:	retf   0xc7ab
  4438aa:	test   eax,0xf8968f37
  4438af:	jmp    0xd753:0x82909ff7
  4438b6:	shl    DWORD PTR [edx+0x18],cl
  4438b9:	push   0xffffffb5
  4438bb:	mov    ds:0xf8cc2d75,al
  4438c0:	xchg   DWORD PTR [edi],edi
  4438c2:	fidiv  DWORD PTR [ebx-0x13]
  4438c5:	sbb    eax,0xf1a5a428
  4438ca:	adc    ebx,DWORD PTR [edi]
  4438cc:	xchg   edi,eax
  4438cd:	loopne 0x443873
  4438cf:	leave  
  4438d0:	sub    eax,0xaf777aa3
  4438d5:	js     0x44388d
  4438d7:	cdq    
  4438d8:	pop    esi
  4438d9:	push   es
  4438da:	stos   DWORD PTR es:[edi],eax
  4438db:	es popa 
  4438dd:	cld    
  4438de:	pusha  
  4438df:	setg   BYTE PTR [eax]
  4438e2:	popa   
  4438e3:	or     ebx,DWORD PTR [eax+0x17ad2d8c]
  4438e9:	dec    edi
  4438ea:	int3   
  4438eb:	aas    
  4438ec:	leave  
  4438ed:	int    0xbc
  4438ef:	loope  0x44394c
  4438f1:	out    0xf,eax
  4438f3:	add    eax,0xbcd7a3ff
  4438f8:	pop    edx
  4438f9:	fadd   DWORD PTR cs:[ebx+edi*4-0x7744a88b]
  443902:	call   0x4499:0xf74b5ac7
  443909:	xor    ah,BYTE PTR ds:0xe736d818
  44390f:	ret    
  443910:	or     esi,DWORD PTR ds:0x1e6a449
  443916:	test   al,0x6d
  443918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443919:	fwait
  44391a:	repz jle 0x443979
  44391d:	jmp    0x90d:0x2ed8df5d
  443924:	nop
  443925:	xor    ax,WORD PTR [ebx-0x62]
  443929:	add    ebx,DWORD PTR [ebx+0x13]
  44392c:	mov    ebx,0x5c80ffac
  443931:	push   edi
  443932:	dec    esi
  443933:	fisttp DWORD PTR [esp+ebx*1+0x3b]
  443937:	ins    BYTE PTR es:[edi],dx
  443938:	(bad)  
  443939:	icebp  
  44393a:	cwde   
  44393b:	push   cs
  44393c:	mov    ah,0x5f
  44393e:	in     al,0xbe
  443940:	mov    cl,0x73
  443942:	sar    dl,cl
  443944:	add    dl,BYTE PTR [edi]
  443946:	jae    0x443960
  443948:	jae    0x443972
  44394a:	mov    edx,0x312eab6b
  44394f:	ds pop ss
  443951:	pop    es
  443952:	out    0xe8,eax
  443954:	mov    ecx,0x97581bbf
  443959:	jo     0x443935
  44395b:	push   0x36651394
  443960:	xor    ebx,DWORD PTR [ebx]
  443962:	aas    
  443963:	xchg   ebp,eax
  443964:	clc    
  443965:	cmp    esp,DWORD PTR [ebp+edx*2-0x22]
  443969:	stos   BYTE PTR es:[edi],al
  44396a:	xchg   ecx,eax
  44396b:	or     esi,DWORD PTR [edx+0x5f]
  44396e:	xchg   edx,eax
  44396f:	pop    ds
  443970:	lidtd  [edi-0x3a]
  443974:	fld    DWORD PTR [ebp+0x9]
  443977:	jp     0x443908
  443979:	inc    eax
  44397a:	les    ecx,FWORD PTR [edx-0x28]
  44397d:	(bad)  
  44397e:	test   BYTE PTR [eax-0x16f35ee8],0x83
  443985:	ins    DWORD PTR es:[edi],dx
  443986:	dec    BYTE PTR [ecx+0x7f]
  443989:	mov    edi,esp
  44398b:	pop    esp
  44398c:	aaa    
  44398d:	xchg   esp,eax
  44398e:	or     dl,0xb5
  443991:	add    bh,0x6b
  443994:	fdiv   QWORD PTR [edx-0x3]
  443997:	imul   ebx,DWORD PTR [edx+eiz*1],0x33
  44399b:	push   ebp
  44399c:	js     0x443a03
  44399e:	mov    ecx,0xf8c5516f
  4439a3:	xor    BYTE PTR [ebx],0x91
  4439a6:	jmp    0x4439a7
  4439a8:	mov    ebx,0x49979dcf
  4439ad:	and    bh,BYTE PTR [edi]
  4439af:	xor    al,0xaf
  4439b1:	xchg   DWORD PTR [ebx-0x7e54c525],edx
  4439b7:	mov    esi,0x3b8b5f55
  4439bc:	push   ds
  4439bd:	jp     0x443961
  4439bf:	dec    edx
  4439c0:	mov    BYTE PTR [eax],al
  4439c2:	call   0xa639:0x2e1fb1ec
  4439c9:	mov    ebx,0xf1cbb4a9
  4439ce:	mov    eax,ds:0x2ec84125
  4439d3:	mov    ds:0xcc178f92,al
  4439d8:	sar    DWORD PTR [edi+0x3722a56],1
  4439de:	jno    0x443963
  4439e0:	xchg   esp,eax
  4439e1:	or     eax,DWORD PTR [ecx]
  4439e3:	fistp  DWORD PTR [ebp+edx*2-0x2d18cbb9]
  4439ea:	addr16 inc ebp
  4439ec:	push   esp
  4439ed:	test   BYTE PTR [ecx-0x5c4ae901],bh
  4439f3:	ret    
  4439f4:	shl    DWORD PTR [ecx-0x4b],cl
  4439f7:	not    DWORD PTR [ecx+0x658e9d1]
  4439fd:	inc    edi
  4439fe:	inc    eax
  4439ff:	enter  0x2588,0x18
  443a03:	pop    esp
  443a04:	add    edi,DWORD PTR ds:0xce1c6ba9
  443a0a:	xchg   edi,esi
  443a0c:	popf   
  443a0d:	sbb    al,0x8d
  443a0f:	out    dx,eax
  443a10:	push   edi
  443a11:	inc    ebx
  443a12:	popf   
  443a13:	aad    0x82
  443a15:	mov    ds:0x646489a4,al
  443a1a:	mov    ecx,0x4ea79fde
  443a1f:	aas    
  443a20:	jg     0x4439d1
  443a22:	iret   
  443a23:	imul   DWORD PTR [edx+ebx*2]
  443a26:	fs adc dl,bh
  443a29:	stos   BYTE PTR es:[edi],al
  443a2a:	cmp    al,0x61
  443a2c:	(bad)
  443a2f:	mov    edi,0xba23e327
  443a34:	cmp    al,0x9d
  443a36:	cmp    BYTE PTR [esi],0xe9
  443a39:	jbe    0x443a2c
  443a3b:	repz test al,0x89
  443a3e:	jns    0x4439e4
  443a40:	leave  
  443a41:	jns    0x4439c9
  443a43:	jno    0x443a71
  443a45:	add    bh,cl
  443a47:	outs   dx,BYTE PTR ds:[esi]
  443a48:	mov    esi,DWORD PTR [ebx]
  443a4a:	ins    BYTE PTR es:[edi],dx
  443a4b:	out    dx,eax
  443a4c:	icebp  
  443a4d:	out    0xeb,eax
  443a4f:	fsub   DWORD PTR [esi+0x9]
  443a52:	jmp    0x443acb
  443a54:	outs   dx,BYTE PTR ds:[esi]
  443a55:	cwde   
  443a56:	fisub  DWORD PTR [esp+eax*4-0x5a]
  443a5a:	push   ebx
  443a5b:	sbb    dh,BYTE PTR [edi+0x2f6a235e]
  443a61:	push   eax
  443a62:	lds    ebp,FWORD PTR [ecx-0x5e]
  443a65:	sbb    BYTE PTR [edx],bl
  443a67:	out    dx,al
  443a68:	cmp    ecx,DWORD PTR [ecx+ecx*8-0x43a74352]
  443a6f:	mov    al,ds:0x858d5348
  443a74:	sbb    ebp,ebp
  443a76:	shl    ebx,0xb5
  443a79:	or     ebx,edi
  443a7b:	mov    dl,0xeb
  443a7d:	ja     0x443a2d
  443a7f:	pop    ebx
  443a80:	dec    esi
  443a81:	pop    eax
  443a82:	imul   esp,eax,0x8fbd6ed3
  443a88:	inc    ebx
  443a89:	push   ebp
  443a8a:	outs   dx,BYTE PTR ds:[esi]
  443a8b:	scas   al,BYTE PTR es:[edi]
  443a8c:	pop    ds
  443a8d:	or     eax,DWORD PTR [ebp-0x79]
  443a90:	and    DWORD PTR [ebp+0x23a6198b],ebp
  443a96:	int3   
  443a97:	xchg   DWORD PTR [ecx],ecx
  443a99:	jno    0x443b09
  443a9b:	nop
  443a9c:	loop   0x443a64
  443a9e:	mov    ebp,0xa67d17b4
  443aa3:	xchg   ebx,edi
  443aa5:	retf   
  443aa6:	dec    esp
  443aa7:	mov    al,0xe4
  443aa9:	adc    eax,0x134ff4f7
  443aae:	out    dx,eax
  443aaf:	xor    DWORD PTR [edx-0x48],esi
  443ab2:	in     al,dx
  443ab3:	jmp    0x816e:0xcab1ddc0
  443aba:	scas   al,BYTE PTR es:[edi]
  443abb:	adc    ebx,ebp
  443abd:	rcl    DWORD PTR [esi],1
  443abf:	jae    0x443b09
  443ac1:	xchg   edx,eax
  443ac2:	sbb    al,0x11
  443ac4:	sti    
  443ac5:	mov    al,ds:0xd70c3f85
  443aca:	(bad)  
  443acb:	ss push ebx
  443acd:	stos   BYTE PTR es:[edi],al
  443ace:	call   0xc9c5:0xc2b13b7
  443ad5:	aam    0xc8
  443ad7:	(bad)  
  443ad9:	xlat   BYTE PTR ds:[ebx]
  443ada:	imul   esp,DWORD PTR [ebp-0x6931b6b2],0x8f3b9dd7
  443ae4:	mov    edx,0x942dd666
  443ae9:	jmp    0x164e:0xcc34a2fe
  443af0:	ret    
  443af1:	pop    edi
  443af2:	pop    ss
  443af3:	xchg   ebp,eax
  443af4:	rcr    DWORD PTR [esi-0x1e],cl
  443af7:	sbb    DWORD PTR [esi+esi*1],ebx
  443afa:	add    eax,0x47822ccc
  443aff:	sbb    eax,edx
  443b01:	mov    dh,0xe1
  443b03:	xchg   ebp,eax
  443b04:	lahf   
  443b05:	cmp    DWORD PTR [edx],ecx
  443b07:	je     0x443b7a
  443b09:	jbe    0x443b58
  443b0b:	imul   eax,ebp,0x4c
  443b0e:	mov    ah,0xa3
  443b10:	les    ebx,FWORD PTR [edi]
  443b12:	pop    esp
  443b13:	jmp    0x1c09b5b6
  443b18:	adc    DWORD PTR gs:[edi+0x1e08aa80],ebp
  443b1f:	mov    edx,0x7aa20222
  443b24:	add    dh,BYTE PTR [ecx+0x76f254f]
  443b2a:	aaa    
  443b2b:	cmp    bh,cl
  443b2d:	dec    esi
  443b2e:	dec    ebx
  443b2f:	add    ebp,eax
  443b31:	in     eax,dx
  443b32:	out    0x77,al
  443b34:	outs   dx,BYTE PTR ds:[esi]
  443b35:	cmp    eax,0xd4c2b7f2
  443b3a:	xchg   ecx,eax
  443b3b:	cmp    BYTE PTR [edi],ah
  443b3d:	or     al,0x71
  443b3f:	jge    0x443b3e
  443b41:	sti    
  443b42:	cld    
  443b43:	out    0x45,al
  443b45:	dec    edi
  443b46:	adc    eax,0x7c043e1a
  443b4b:	sti    
  443b4c:	pop    ebp
  443b4d:	cmp    esp,esp
  443b4f:	sub    ecx,ecx
  443b51:	and    edi,DWORD PTR [esi+0x4b]
  443b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443b55:	icebp  
  443b56:	lea    ebx,[esi]
  443b58:	push   ebp
  443b59:	jp     0x443afd
  443b5b:	adc    al,0xe7
  443b5d:	fadd   DWORD PTR [eax-0x1b7d08b9]
  443b63:	pop    esp
  443b64:	add    dl,BYTE PTR [eax+ebp*1-0x3678cae1]
  443b6b:	cmp    DWORD PTR [ecx+0x6914be4e],esi
  443b71:	(bad)  
  443b72:	xor    BYTE PTR [ebp+0x59],bh
  443b75:	mov    al,ds:0x98c3283
  443b7a:	pop    ds
  443b7b:	inc    edi
  443b7c:	ins    BYTE PTR es:[edi],dx
  443b7d:	ficomp WORD PTR [edx-0x48a64705]
  443b83:	(bad)  
  443b84:	pop    ebp
  443b85:	mov    ecx,0xafff7771
  443b8a:	arpl   WORD PTR ds:0x4295426a,sp
  443b90:	jne    0x443bf6
  443b92:	lds    esi,FWORD PTR [esi-0x28e6abbb]
  443b98:	cmp    esp,DWORD PTR [ecx+0x5da190c1]
  443b9e:	ja     0x443c0b
  443ba0:	sbb    DWORD PTR [esi+0x6a5ec5c9],edi
  443ba6:	sbb    edi,DWORD PTR [eax-0x6561731b]
  443bac:	sub    al,0xbf
  443bae:	iret   
  443baf:	or     DWORD PTR [edx],ecx
  443bb1:	pop    ebx
  443bb2:	sub    eax,0x611eb856
  443bb7:	popa   
  443bb8:	stos   BYTE PTR es:[edi],al
  443bb9:	sbb    DWORD PTR [ebp-0x6f697cb5],edx
  443bbf:	addr16 jmp 0x34d4fe9c
  443bc5:	inc    esi
  443bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443bc7:	sahf   
  443bc8:	sahf   
  443bc9:	jl     0x443bbb
  443bcb:	sbb    eax,0xcb450f1e
  443bd0:	push   edx
  443bd1:	out    dx,eax
  443bd2:	cmp    BYTE PTR [ecx+edi*1-0x7d],cl
  443bd6:	mov    ebp,0xbc7b529e
  443bdb:	fcomp  QWORD PTR [edx]
  443bdd:	jo     0x443c21
  443bdf:	mov    ah,0xcc
  443be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443be3:	or     ecx,ecx
  443be5:	mov    eax,0x1da3139c
  443bea:	mov    dh,0xa7
  443bec:	sbb    BYTE PTR [eax-0x16],ah
  443bef:	or     al,0x4f
  443bf1:	adc    dl,BYTE PTR [eax+0x4aa79d63]
  443bf7:	sar    BYTE PTR [esi+0x5760c210],cl
  443bfd:	(bad)  
  443bfe:	ror    BYTE PTR [esi-0x8bc0aee],0xcb
  443c05:	nop
  443c06:	mov    ds:0x156f9c46,al
  443c0b:	outs   dx,DWORD PTR ds:[esi]
  443c0c:	sub    esi,DWORD PTR [edi+0x5c]
  443c0f:	dec    cx
  443c11:	pop    ebp
  443c12:	and    ch,dl
  443c14:	pop    edx
  443c15:	jmp    0x443c15
  443c17:	sbb    al,cl
  443c19:	neg    BYTE PTR [ebx-0x39]
  443c1c:	adc    ecx,DWORD PTR [edx+0x7a]
  443c1f:	cmp    al,0xc5
  443c21:	and    dl,BYTE PTR [eax-0x3768e12f]
  443c27:	ds xchg edi,eax
  443c29:	lahf   
  443c2a:	pop    edx
  443c2b:	xor    BYTE PTR [edi-0x2b],al
  443c2e:	pop    ebx
  443c2f:	ror    ebp,cl
  443c31:	in     al,dx
  443c32:	jp     0x443c3e
  443c34:	xor    DWORD PTR [ebp-0x19],0xabd6eb46
  443c3b:	sub    ebx,DWORD PTR [edx]
  443c3d:	hlt    
  443c3e:	and    al,0xe1
  443c40:	loopne 0x443c08
  443c42:	and    al,0xa
  443c44:	dec    eax
  443c45:	out    0x60,al
  443c47:	adc    al,0x4b
  443c49:	or     al,0x1
  443c4b:	pop    eax
  443c4c:	mov    ecx,0x5eca32e0
  443c51:	pop    eax
  443c52:	ret    0x81d0
  443c55:	mov    esi,0x99eef3e0
  443c5a:	dec    ecx
  443c5b:	xchg   ebp,eax
  443c5c:	cmc    
  443c5d:	jmp    0xa9e924f3
  443c62:	lods   eax,DWORD PTR ds:[esi]
  443c63:	dec    esp
  443c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c65:	xchg   DWORD PTR [eax-0x74e20dbf],ebp
  443c6b:	call   0xfc64:0xa78f55d4
  443c72:	adc    DWORD PTR [ecx+edi*1],edi
  443c75:	push   ecx
  443c76:	mov    dh,BYTE PTR [edx+0x18c796cc]
  443c7c:	mov    dh,0xdd
  443c7e:	cmc    
  443c7f:	nop
  443c80:	loopne 0x443c85
  443c82:	into   
  443c83:	adc    al,0x77
  443c85:	pop    esp
  443c86:	repz pop ds
  443c88:	jb     0x443cea
  443c8a:	xlat   BYTE PTR ds:[ebx]
  443c8b:	sbb    ebp,esp
  443c8d:	mov    ebx,0xdbc785c6
  443c92:	(bad)  
  443c93:	out    dx,al
  443c94:	(bad)
  443c97:	out    0xd9,eax
  443c99:	cmp    bh,dl
  443c9b:	cli    
  443c9c:	in     eax,dx
  443c9d:	sub    eax,0x188ba382
  443ca2:	push   esp
  443ca3:	mov    cl,0xd1
  443ca5:	call   0x6acb:0x398b6b79
  443cac:	and    al,0x91
  443cae:	xchg   esp,eax
  443caf:	cmp    eax,0x1059483
  443cb4:	add    bl,BYTE PTR [ebx-0x78f25fc9]
  443cba:	jl     0x443c92
  443cbc:	mov    eax,ds:0x4057fb56
  443cc1:	daa    
  443cc2:	push   ds
  443cc3:	push   ds
  443cc4:	lods   al,BYTE PTR ds:[esi]
  443cc5:	sub    BYTE PTR [ebx-0x1282da15],al
  443ccb:	mov    eax,0xf3e89250
  443cd0:	cmp    edx,esi
  443cd2:	(bad)  
  443cd3:	mov    esp,ebx
  443cd5:	and    al,0xff
  443cd7:	out    0xcb,al
  443cd9:	xor    eax,0x6cbedc39
  443cde:	retf   
  443cdf:	pop    ds
  443ce0:	aaa    
  443ce1:	cs jmp 0x18a03818
  443ce7:	loope  0x443cbd
  443ce9:	push   0xffffffb5
  443ceb:	test   eax,0x4dbed7e8
  443cf0:	adc    DWORD PTR [edx+0x6d3ae33e],eax
  443cf6:	aaa    
  443cf7:	sub    al,0x2f
  443cf9:	sbb    DWORD PTR [edi],0x52ec19bb
  443cff:	push   edx
  443d00:	cmp    DWORD PTR [edx+ecx*4-0x34],ecx
  443d04:	adc    bh,BYTE PTR [ecx*4-0x37aafc97]
  443d0b:	jne    0x443cc9
  443d0d:	xchg   esp,eax
  443d0e:	pop    es
  443d0f:	sahf   
  443d10:	dec    ecx
  443d11:	hlt    
  443d12:	cmp    dh,al
  443d14:	or     eax,0x97687011
  443d19:	push   edi
  443d1a:	imul   ecx,DWORD PTR [ecx+0xf],0x681fafcd
  443d21:	push   ebp
  443d22:	push   0x24
  443d24:	cmp    DWORD PTR [edi],ebx
  443d26:	aaa    
  443d27:	into   
  443d28:	push   ds
  443d29:	test   BYTE PTR [edi-0x6e],0x80
  443d2d:	xor    eax,0x2bdd10b0
  443d32:	and    eax,0x4ad2b664
  443d37:	(bad)  [eax]
  443d39:	push   eax
  443d3a:	jns    0x443ce6
  443d3c:	xchg   edi,eax
  443d3d:	js     0x443cf8
  443d3f:	cmp    eax,edx
  443d41:	leave  
  443d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443d44:	aaa    
  443d45:	repz push 0x25046c4a
  443d4b:	sbb    BYTE PTR [ecx],dh
  443d4d:	adc    al,0x9f
  443d4f:	jecxz  0x443d79
  443d51:	inc    edx
  443d52:	add    ebx,DWORD PTR ds:0x68bc9e51
  443d58:	pop    es
  443d59:	jno    0x443d74
  443d5b:	push   ds
  443d5c:	or     BYTE PTR [ebp-0x453ce7cb],cl
  443d62:	push   0xc7aa850c
  443d67:	pushf  
  443d68:	sbb    ebp,esp
  443d6a:	retf   
  443d6b:	ins    BYTE PTR es:[edi],dx
  443d6c:	fisub  DWORD PTR [esi+0x5f]
  443d6f:	in     al,dx
  443d70:	in     eax,0xba
  443d72:	mov    ?,WORD PTR [edx+0x17]
  443d75:	(bad)  
  443d76:	and    eax,0x4747f3d2
  443d7b:	jns    0x443d00
  443d7d:	xchg   esi,eax
  443d7e:	or     al,0x6c
  443d80:	xlat   BYTE PTR ds:[ebx]
  443d81:	pop    edx
  443d82:	pushf  
  443d83:	bnd jmp 0x443df1
  443d86:	jle    0x443df4
  443d88:	push   cs
  443d89:	fisttp DWORD PTR [ecx-0x8]
  443d8c:	adc    BYTE PTR [esp+edi*8-0x56],0x7
  443d91:	(bad)  
  443d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443d93:	daa    
  443d94:	(bad)  
  443d95:	pushf  
  443d96:	adc    eax,0x23c4fb0d
  443d9b:	xlat   BYTE PTR ds:[ebx]
  443d9c:	and    edi,DWORD PTR ds:0x2e1afb45
  443da2:	loopne 0x443dd7
  443da4:	call   0x7428:0x68b7e72
  443dab:	push   ecx
  443dac:	ss ret 
  443dae:	jo     0x443d34
  443db0:	cld    
  443db1:	fstp   DWORD PTR [edi+edi*1+0x545a81ee]
  443db8:	xor    bl,BYTE PTR [edx-0x30b34163]
  443dbe:	ror    BYTE PTR [ebp-0x73a1542c],0x4f
  443dc5:	loop   0x443dad
  443dc7:	cmp    BYTE PTR ds:0xdc048a63,ch
  443dcd:	cmp    eax,0xc44348d0
  443dd2:	push   0x7f9e2b3e
  443dd7:	mov    WORD PTR [ebp-0x1c9cc640],?
  443ddd:	sub    BYTE PTR [ebx],ch
  443ddf:	ret    
  443de0:	xchg   al,dl
  443de2:	dec    ebp
  443de3:	call   0xe1c1:0x37684952
  443dea:	leave  
  443deb:	aaa    
  443dec:	sbb    al,0xae
  443dee:	jb     0x443e58
  443df0:	loopne 0x443da5
  443df2:	test   BYTE PTR [ecx+0x627233f2],bh
  443df8:	mov    ecx,0xf6b0ede4
  443dfd:	test   eax,0x6f35a21a
  443e02:	std    
  443e03:	cs out dx,al
  443e05:	fsub   st,st(0)
  443e07:	mov    ebp,0xc42af583
  443e0c:	push   ebp
  443e0d:	jnp    0x443db7
  443e0f:	or     BYTE PTR [ebp-0x35],cl
  443e12:	push   edi
  443e13:	call   0x8142:0x50bc23d3
  443e1a:	push   edi
  443e1b:	mov    ch,0xe
  443e1d:	ret    0x5ca0
  443e20:	(bad)  
  443e21:	retf   0xe2c3
  443e24:	mov    ah,0x85
  443e26:	js     0x443e4c
  443e28:	xchg   ecx,eax
  443e29:	dec    eax
  443e2a:	or     al,0xdf
  443e2c:	dec    edi
  443e2d:	cmp    edx,esi
  443e2f:	lea    ebx,[edi+0x67]
  443e32:	cmp    al,0x51
  443e34:	jae    0x443ea5
  443e36:	aas    
  443e37:	or     dh,bl
  443e39:	mov    ch,0x6d
  443e3b:	xor    eax,0x3e07c4be
  443e40:	dec    esp
  443e41:	push   0x3c
  443e43:	cmp    dl,BYTE PTR [ebx+0x2e]
  443e46:	jecxz  0x443e03
  443e48:	stc    
  443e49:	push   ecx
  443e4a:	(bad)  
  443e4b:	(bad)  [edi-0x1d63e25f]
  443e51:	jmp    0xb8c2c6a8
  443e56:	pop    eax
  443e57:	add    DWORD PTR [edx],esi
  443e59:	sti    
  443e5a:	pop    edi
  443e5b:	adc    eax,0x3c78c89a
  443e60:	push   0x668c890b
  443e65:	cmc    
  443e66:	pop    ds
  443e67:	xor    esp,DWORD PTR [ebx+0x5]
  443e6a:	mov    DWORD PTR [ecx+0x69015944],ebx
  443e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443e71:	mov    BYTE PTR [edx],bl
  443e73:	sub    dl,bl
  443e75:	outs   dx,DWORD PTR ds:[esi]
  443e76:	and    BYTE PTR [edx+0x23],cl
  443e79:	cmp    ebp,DWORD PTR [ecx-0x377815cf]
  443e7f:	(bad)  
  443e81:	mov    esp,0xcd20b1d
  443e86:	pop    ds
  443e87:	sbb    DWORD PTR [eax],esi
  443e89:	ja     0x443ebc
  443e8b:	ds cld 
  443e8d:	mov    bl,0xa7
  443e8f:	pop    DWORD PTR gs:[ebx]
  443e92:	scas   eax,DWORD PTR es:[edi]
  443e93:	inc    ebp
  443e94:	pop    esp
  443e95:	push   eax
  443e96:	ret    
  443e97:	stc    
  443e98:	push   ecx
  443e99:	gs (bad) 
  443e9b:	sbb    eax,0x1b644222
  443ea0:	rol    BYTE PTR [eax+0x3792ad65],1
  443ea6:	and    al,0x83
  443ea8:	push   cs
  443ea9:	popa   
  443eaa:	outs   dx,BYTE PTR ds:[esi]
  443eab:	xor    al,0x37
  443ead:	sbb    eax,0x40b2f0f2
  443eb2:	xchg   edi,eax
  443eb3:	rol    BYTE PTR [edi-0x5c],1
  443eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443eb7:	std    
  443eb8:	sti    
  443eb9:	sbb    BYTE PTR [ebx-0x6d590e92],cl
  443ebf:	ret    
  443ec0:	mov    cs,WORD PTR [edx+0x28ef3e7]
  443ec6:	loopne 0x443ee4
  443ec8:	loop   0x443e6f
  443eca:	or     edx,esi
  443ecc:	cwde   
  443ecd:	imul   ebx,DWORD PTR [eax+0x3a],0x28234c8
  443ed4:	dec    ebp
  443ed5:	in     eax,dx
  443ed6:	xor    dh,BYTE PTR [eax+eax*1+0x2ffb4688]
  443edd:	(bad)  
  443ede:	loope  0x443ea4
  443ee0:	push   ebx
  443ee1:	outs   dx,DWORD PTR ds:[esi]
  443ee2:	sti    
  443ee3:	and    BYTE PTR [ebx+edi*1],bl
  443ee6:	aaa    
  443ee7:	inc    ecx
  443ee8:	iret   
  443ee9:	adc    eax,0x906a567a
  443eee:	aaa    
  443eef:	js     0x443f36
  443ef1:	fcom   QWORD PTR [edx]
  443ef3:	mov    bh,0xcc
  443ef5:	jmp    0xc8c:0x5245389a
  443efc:	pop    ebx
  443efd:	sbb    al,0xfa
  443eff:	cmp    eax,0x9150b335
  443f04:	fwait
  443f05:	int    0x8f
  443f07:	jge    0x443e8f
  443f09:	retf   0x8b62
  443f0c:	and    dl,BYTE PTR [esi]
  443f0e:	or     DWORD PTR [ebp+0x5238dad4],ebx
  443f14:	mov    eax,ds:0xd6b9a6d5
  443f19:	sub    ch,BYTE PTR [esi-0x14]
  443f1c:	xchg   ebx,esp
  443f1e:	repnz push ebx
  443f20:	(bad)  
  443f21:	in     al,0xbc
  443f23:	sub    al,0xaf
  443f25:	mov    ah,BYTE PTR [ebx+0x6eae3c61]
  443f2b:	inc    eax
  443f2c:	fmul   QWORD PTR [eax-0x59]
  443f2f:	pop    ebx
  443f30:	mov    BYTE PTR [ecx-0x39],bl
  443f33:	push   eax
  443f34:	test   BYTE PTR [edi+0x4be77181],0x9d
  443f3b:	adc    al,0x1a
  443f3d:	pop    eax
  443f3e:	or     al,0xbc
  443f40:	shl    eax,0x82
  443f43:	jbe    0x443ec9
  443f45:	inc    ebp
  443f46:	or     dh,BYTE PTR [esi+0xe]
  443f49:	jne    0x443fab
  443f4b:	and    esi,DWORD PTR [ebp+0x14]
  443f4e:	scas   eax,DWORD PTR es:[edi]
  443f4f:	rcr    BYTE PTR [esi],0xfc
  443f52:	into   
  443f53:	ret    0x6b15
  443f56:	add    al,0x80
  443f58:	(bad)  
  443f59:	nop
  443f5a:	sbb    eax,0x7780984
  443f5f:	dec    ebx
  443f60:	lds    ebx,FWORD PTR [eax+0x3f]
  443f63:	or     esi,0x5c
  443f66:	arpl   WORD PTR [edx+esi*1+0x61],si
  443f6a:	adc    BYTE PTR [ebp+0x44],cl
  443f6d:	aam    0xf
  443f6f:	int3   
  443f70:	pop    es
  443f71:	repz jae 0x443f1f
  443f74:	aaa    
  443f75:	mov    dl,0x8d
  443f77:	add    eax,0x50b605a1
  443f7c:	pop    edi
  443f7d:	cmc    
  443f7e:	out    dx,al
  443f7f:	int3   
  443f80:	pusha  
  443f81:	mov    ebp,0xa13eb1ff
  443f86:	dec    ecx
  443f87:	sbb    eax,DWORD PTR [edx+0x55]
  443f8a:	xchg   edi,eax
  443f8b:	jge    0x443fcf
  443f8d:	jo     0x443f95
  443f8f:	popa   
  443f90:	xor    bh,BYTE PTR [ebx]
  443f92:	mov    esp,0xfa021395
  443f97:	in     eax,dx
  443f98:	test   al,0xbf
  443f9a:	xchg   DWORD PTR [edx-0x2474524a],esi
  443fa0:	fs dec edi
  443fa2:	addr16 pop eax
  443fa4:	test   eax,0xf42dfdc9
  443fa9:	cmp    eax,0x1a23ad25
  443fae:	fwait
  443faf:	dec    eax
  443fb0:	add    eax,0x9bfd9a45
  443fb5:	add    BYTE PTR [edi+eiz*1-0x6a],ch
  443fb9:	sti    
  443fba:	lods   al,BYTE PTR ds:[esi]
  443fbb:	mov    ds:0x672f6dd4,eax
  443fc0:	inc    ebx
  443fc1:	adc    DWORD PTR [edx+0x2c],ecx
  443fc4:	inc    BYTE PTR [eax]
  443fc6:	mov    al,0xa7
  443fc8:	lock adc eax,0x29d5033
  443fce:	fisttp QWORD PTR [ebx]
  443fd0:	and    esi,DWORD PTR cs:[eax-0x3]
  443fd4:	rcl    ch,1
  443fd6:	jne    0x44402d
  443fd8:	xor    edx,DWORD PTR fs:[edi+0x2bc8edd8]
  443fdf:	mov    dl,BYTE PTR [edx+0xf]
  443fe2:	mov    ebp,0x18a50c4a
  443fe7:	fild   DWORD PTR [esi+0x5af6efd9]
  443fed:	out    0x4c,al
  443fef:	mov    ds:0x46b25a82,eax
  443ff4:	add    DWORD PTR [edx],edi
  443ff6:	je     0x443ff3
  443ff8:	out    dx,eax
  443ff9:	push   cs
  443ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443ffb:	xchg   esi,eax
  443ffc:	inc    edx
  443ffd:	ficom  DWORD PTR [esp+edx*8]
  444000:	dec    ebx
  444001:	adc    esp,ecx
  444003:	add    bl,BYTE PTR [esp+esi*1]
  444006:	int3   
  444007:	push   esp
  444008:	cmp    bl,BYTE PTR [ebp+0x11a68039]
  44400e:	and    BYTE PTR [ebx+0x30],ch
  444011:	ret    
  444012:	rcl    bh,0x6d
  444015:	push   ecx
  444016:	in     eax,dx
  444017:	pop    es
  444018:	cli    
  444019:	dec    ecx
  44401a:	aam    0xbd
  44401c:	fs dec ebx
  44401e:	add    BYTE PTR [edi+0x1f5312f2],ch
  444024:	sbb    eax,0xf2a351dd
  444029:	fs add esp,esp
  44402c:	lds    ebx,FWORD PTR [edx-0x2b]
  44402f:	cli    
  444030:	sub    DWORD PTR [edx-0x4],esp
  444033:	dec    esi
  444034:	clc    
  444035:	cmp    DWORD PTR [ecx-0x5c511268],eax
  44403b:	ret    
  44403c:	pop    eax
  44403d:	and    bh,ah
  44403f:	call   0x8780b6b1
  444044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444045:	pop    ebp
  444046:	cmp    dh,BYTE PTR [edi]
  444048:	int3   
  444049:	xchg   BYTE PTR [ecx-0x40],dh
  44404c:	(bad)  
  44404d:	neg    edx
  44404f:	xchg   DWORD PTR [eax+esi*8],ecx
  444052:	cmp    bh,BYTE PTR cs:[edi+0x1a6c26e8]
  444059:	(bad)
  44405d:	sub    ebx,esp
  44405f:	mov    ecx,0xcbd115ef
  444064:	adc    eax,0xaf93ad1c
  444069:	jb     0x4440c2
  44406b:	dec    ebx
  44406c:	int    0x0
  44406e:	enter  0xf173,0xb8
  444072:	mov    DWORD PTR [ecx-0x1c9fc099],ebx
  444078:	call   0x4f05:0xd07806c
  44407f:	(bad)  
  444080:	pop    ds
  444081:	jae    0x444092
  444083:	cs js  0x4440c2
  444086:	push   ds
  444087:	jle    0x444083
  444089:	jo     0x444095
  44408b:	in     eax,dx
  44408c:	xlat   BYTE PTR ds:[ebx]
  44408d:	sub    DWORD PTR [edx-0x71f12ee7],edx
  444093:	aam    0x1d
  444095:	mov    ch,0xe6
  444097:	sub    al,0x88
  444099:	sbb    al,0x9b
  44409b:	sbb    eax,0x76201fc7
  4440a0:	inc    esi
  4440a1:	mov    ebx,0xf90734e2
  4440a6:	inc    esp
  4440a7:	push   es
  4440a8:	fist   DWORD PTR [edx+0x65d50cee]
  4440ae:	xchg   edi,eax
  4440af:	xchg   esp,eax
  4440b0:	pop    eax
  4440b1:	pusha  
  4440b2:	cmc    
  4440b3:	rol    DWORD PTR [edi-0x10235766],1
  4440b9:	std    
  4440ba:	push   ss
  4440bb:	sub    eax,0x5d175103
  4440c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4440c1:	xor    esp,DWORD PTR [eax+0x4b5c5793]
  4440c7:	mov    DWORD PTR [eax],ebx
  4440c9:	inc    edx
  4440ca:	das    
  4440cb:	and    eax,0xbd1ded3f
  4440d0:	and    eax,0x4de83daf
  4440d5:	fiadd  WORD PTR fs:0xd54ffde
  4440dc:	mov    ebx,ds
  4440de:	addr16 jne 0x444102
  4440e1:	lods   eax,DWORD PTR ds:[esi]
  4440e2:	imul   eax,edx,0xffffffa8
  4440e5:	jl     0x44407a
  4440e7:	and    bl,BYTE PTR [ecx-0x1c7a7dac]
  4440ed:	add    ebx,edi
  4440ef:	(bad)  
  4440f0:	arpl   WORD PTR [ecx],ax
  4440f2:	pop    edx
  4440f3:	xor    edi,DWORD PTR [esi+0x710679]
  4440f9:	adc    eax,0x25a5df2e
  4440fe:	dec    edi
  4440ff:	paddb  mm3,QWORD PTR [ecx+0x2d]
  444103:	jb     0x444098
  444105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444106:	dec    ebx
  444107:	fld    st(1)
  444109:	rcr    BYTE PTR [ecx+esi*4+0x5ed2f976],1
  444110:	loopne 0x4440c5
  444112:	jecxz  0x4440a7
  444114:	push   ss
  444115:	add    BYTE PTR [ebp-0x3a],bh
  444118:	dec    ebp
  444119:	je     0x4440d5
  44411b:	jne    0x4440ac
  44411d:	loope  0x4440e9
  44411f:	add    BYTE PTR [esi-0x430f97b],bh
  444125:	ins    BYTE PTR es:[edi],dx
  444126:	dec    esp
  444127:	mov    ds:0x7eee642a,al
  44412c:	pop    eax
  44412d:	aam    0x54
  44412f:	sub    al,0x3e
  444131:	xchg   ebp,eax
  444132:	xor    ecx,DWORD PTR [ebp-0x5c]
  444135:	setle  BYTE PTR [eax-0x18d52d21]
  44413c:	mov    ecx,0x5ebcd8b
  444141:	jbe    0x4440de
  444143:	mov    ah,0xc4
  444145:	mov    bh,0x1e
  444147:	sub    BYTE PTR [ecx],bh
  444149:	and    al,0x49
  44414b:	fisub  DWORD PTR [ecx-0x1df6e188]
  444151:	lahf   
  444152:	rcl    BYTE PTR [edx-0x52],0x27
  444156:	add    al,0x6d
  444158:	xor    al,0x37
  44415a:	push   ebx
  44415b:	jmp    0x4441c3
  44415d:	push   0xffffffef
  44415f:	pop    cx
  444161:	icebp  
  444162:	add    esp,ebp
  444164:	jns    0x44412d
  444166:	outs   dx,DWORD PTR es:[esi]
  444168:	out    0x5c,al
  44416a:	dec    esi
  44416b:	in     eax,0x74
  44416d:	lahf   
  44416e:	aad    0x43
  444170:	fldcw  WORD PTR [edi]
  444172:	xor    BYTE PTR cs:[ebp+0x5db17423],ch
  444179:	call   0xfbdfe5b9
  44417e:	adc    ebp,DWORD PTR [esi]
  444180:	pushf  
  444181:	or     eax,DWORD PTR [edi]
  444183:	inc    edx
  444184:	push   DWORD PTR [edi]
  444186:	hlt    
  444187:	dec    ebp
  444188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444189:	stos   DWORD PTR es:[edi],eax
  44418a:	sub    bl,BYTE PTR [edi]
  44418c:	xor    DWORD PTR [edi-0x18],ecx
  44418f:	pop    es
  444190:	sbb    eax,0x90e067bd
  444195:	add    BYTE PTR [ebp+0x6f],al
  444198:	pop    ebp
  444199:	push   0xb580cd77
  44419e:	push   0x3f
  4441a0:	xchg   ebx,eax
  4441a1:	or     eax,0xd1fbf7e0
  4441a6:	pop    edi
  4441a7:	je     0x4441f5
  4441a9:	ja     0x4441b0
  4441ab:	cmp    edi,esi
  4441ad:	inc    DWORD PTR [ecx+0x68]
  4441b0:	or     cl,BYTE PTR [eax+0xd20e036]
  4441b6:	pop    ecx
  4441b7:	mov    ch,0x73
  4441b9:	pop    ecx
  4441ba:	inc    ebx
  4441bb:	push   ds
  4441bc:	imul   eax,DWORD PTR [edi],0xffffffd3
  4441bf:	lea    edi,[esi-0x63ab9d94]
  4441c5:	mov    al,gs:0xfff784b
  4441cb:	fdivr  DWORD PTR [esi-0x56acaf99]
  4441d1:	sub    eax,0xa1901461
  4441d6:	in     al,dx
  4441d7:	xchg   edi,eax
  4441d8:	sub    ebp,ecx
  4441da:	jb     0x44416c
  4441dc:	repz mov eax,0x82e3fd8b
  4441e2:	into   
  4441e3:	mov    dh,0x33
  4441e5:	out    0xdf,al
  4441e7:	cli    
  4441e8:	fistp  WORD PTR [edx-0x353594aa]
  4441ee:	fadd   QWORD PTR [ecx-0x290b404e]
  4441f4:	mov    edi,0x3d72bd3c
  4441f9:	and    edx,DWORD PTR ds:0xae82878d
  4441ff:	cmp    DWORD PTR [eax],edi
  444201:	ds scas al,BYTE PTR es:[edi]
  444203:	dec    esi
  444204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444205:	jnp    0x44420e
  444207:	loopne 0x4441e0
  444209:	fisubr WORD PTR [edi-0x2d]
  44420c:	pop    esi
  44420d:	or     BYTE PTR [ecx+edi*4+0x5f],dh
  444211:	test   DWORD PTR [ebp-0x68],esp
  444214:	gs repnz dec ebx
  444217:	out    0xc7,eax
  444219:	mov    esi,0x24d01fd2
  44421e:	cdq    
  44421f:	mov    dh,BYTE PTR [edx]
  444221:	icebp  
  444222:	ret    0xbff8
  444225:	and    BYTE PTR [ecx+0x27],bl
  444228:	and    bl,BYTE PTR [eax-0x3d]
  44422b:	popa   
  44422c:	jl     0x44428f
  44422e:	les    esp,FWORD PTR es:0xad1249e4
  444235:	xchg   esi,eax
  444236:	shl    edi,0xb7
  444239:	in     eax,dx
  44423a:	dec    eax
  44423b:	mov    al,0xf2
  44423d:	call   0x5435c5e6
  444242:	sbb    al,0x1a
  444244:	or     BYTE PTR [eax-0x16],dh
  444247:	(bad)  
  444249:	fld    TBYTE PTR [ecx-0x30d3b2c1]
  44424f:	mov    WORD PTR [edi+0x694bf1],fs
  444255:	shl    DWORD PTR [eax+0x61d991c5],cl
  44425b:	mov    ebx,0x111a0262
  444260:	push   ebp
  444261:	jb     0x4442a2
  444263:	clc    
  444264:	popf   
  444265:	or     DWORD PTR [ebp-0x31],0xfb9b36ce
  44426c:	imul   edx,DWORD PTR [esi+0x34b31d0f],0x7c
  444273:	adc    eax,0xefdbea96
  444278:	xor    al,0xfc
  44427a:	into   
  44427b:	int    0xce
  44427d:	fwait
  44427e:	add    eax,0x8aa9e808
  444283:	sub    BYTE PTR [ebx-0x3baa85e5],0xc6
  44428a:	stos   BYTE PTR es:[edi],al
  44428b:	cmp    BYTE PTR ds:0xb47939e1,dh
  444291:	xchg   esi,eax
  444292:	hlt    
  444293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444294:	mov    ecx,0xd793dfe6
  444299:	sbb    eax,0x20d46056
  44429e:	xchg   DWORD PTR es:[edi],esp
  4442a1:	ins    BYTE PTR es:[edi],dx
  4442a2:	fild   DWORD PTR [edx+eiz*1+0x5c]
  4442a6:	mov    ebx,0xe605f7f8
  4442ab:	sbb    BYTE PTR [ecx+0x7d94ba62],bl
  4442b1:	fidivr DWORD PTR fs:[esi+0x47a397]
  4442b8:	(bad)
  4442bb:	sub    esi,DWORD PTR [ebx+eax*4]
  4442be:	mov    ebx,0x40588b59
  4442c3:	cwde   
  4442c4:	mov    dl,0xd3
  4442c6:	cmp    edx,esi
  4442c8:	pop    ebx
  4442c9:	(bad)  
  4442ca:	inc    esp
  4442cb:	xor    bl,ah
  4442cd:	pushf  
  4442ce:	in     eax,dx
  4442cf:	ret    0xc7bb
  4442d2:	fild   DWORD PTR [ecx]
  4442d4:	mov    bl,0x6b
  4442d6:	ds repz repnz scas al,BYTE PTR es:[edi]
  4442da:	repz mov edx,0x7cb9b44a
  4442e0:	rol    BYTE PTR [ecx+0x7acc1e72],cl
  4442e6:	cmp    BYTE PTR [edx+0x3d58e2cf],dl
  4442ec:	adc    cl,BYTE PTR [ebx+edx*1+0x6b]
  4442f0:	lock cmc 
  4442f2:	fcmovbe st,st(0)
  4442f4:	scas   eax,DWORD PTR es:[edi]
  4442f5:	aaa    
  4442f6:	cdq    
  4442f7:	mov    cl,0xc1
  4442f9:	sub    BYTE PTR [ecx+0x3d97fc06],cl
  4442ff:	push   cs
  444300:	pop    edx
  444301:	shl    DWORD PTR [ecx+0x5c],cl
  444304:	mov    BYTE PTR ds:0x6f1ffecb,0x97
  44430b:	push   ss
  44430c:	mov    ds:0x482f26a1,eax
  444311:	call   0xb66a5443
  444316:	or     cl,BYTE PTR [eax+0x1084e0ce]
  44431c:	adc    al,0xea
  44431e:	mov    bl,0x83
  444320:	add    BYTE PTR [esp+ecx*2+0x9],bh
  444324:	fptan  
  444326:	clc    
  444327:	popa   
  444328:	add    eax,0x7e576d74
  44432d:	or     cl,dh
  44432f:	sahf   
  444330:	fild   QWORD PTR [esi+esi*8]
  444333:	xchg   DWORD PTR [edi+0x2d4963dc],ecx
  444339:	rcl    DWORD PTR [eax-0x26],0xb7
  44433d:	(bad)  
  44433e:	into   
  44433f:	cmp    ebp,DWORD PTR [edx]
  444341:	cmp    eax,0x8e0d5607
  444346:	nop
  444347:	ror    BYTE PTR [eax-0x24edf712],0xb4
  44434e:	addr16 in al,0xae
  444351:	jo     0x444330
  444353:	icebp  
  444354:	retf   0x9b01
  444357:	repz dec esi
  444359:	ins    BYTE PTR es:[edi],dx
  44435a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44435b:	push   ebp
  44435c:	test   DWORD PTR [edx+0x11be9485],edi
  444362:	jnp    0x444322
  444364:	and    BYTE PTR [ecx],ah
  444366:	jb     0x4443a6
  444368:	mov    dh,ah
  44436a:	sti    
  44436b:	jae    0x444314
  44436d:	adc    al,0x62
  44436f:	in     al,dx
  444370:	cli    
  444371:	stos   BYTE PTR es:[edi],al
  444372:	rcr    BYTE PTR [ebx+0x515eb2fa],1
  444378:	shl    al,0xa5
  44437b:	and    al,0x4f
  44437d:	and    ebp,DWORD PTR [ebx-0x5a]
  444380:	test   DWORD PTR [ecx+0x223005cd],ebx
  444386:	(bad)  
  444387:	scas   al,BYTE PTR es:[edi]
  444388:	sbb    ah,BYTE PTR [eax]
  44438a:	pop    edi
  44438b:	(bad)  
  44438c:	push   ss
  44438d:	adc    edx,ebx
  44438f:	sbb    DWORD PTR [esi+0x7b],ebp
  444392:	sub    ecx,DWORD PTR [esi]
  444394:	repnz out dx,al
  444396:	adc    eax,0x7c8c4d58
  44439b:	rol    esp,1
  44439d:	pushf  
  44439e:	inc    eax
  44439f:	ja     0x444331
  4443a1:	inc    eax
  4443a2:	push   edx
  4443a3:	jmp    0x444349
  4443a5:	sub    DWORD PTR [eax-0x2b4a3bec],esi
  4443ab:	(bad)  
  4443ac:	imul   esi
  4443ae:	(bad)
  4443b2:	fld    st(5)
  4443b4:	ret    0xb7c4
  4443b7:	push   edx
  4443b8:	outs   dx,DWORD PTR ds:[esi]
  4443b9:	mov    eax,0x54f15ae1
  4443be:	dec    bx
  4443c0:	jns    0x44439c
  4443c2:	or     eax,0x7017d0f
  4443c8:	in     eax,dx
  4443c9:	pop    edx
  4443ca:	sub    eax,0x3ce10e21
  4443cf:	cmp    eax,0xa3e3ce80
  4443d4:	aam    0xda
  4443d6:	pop    edi
  4443d7:	dec    edx
  4443d8:	sub    al,0x46
  4443da:	jb     0x44438a
  4443dc:	repnz or edi,0x24a0e947
  4443e3:	pop    ds
  4443e4:	callw  0xe621
  4443e8:	mov    bl,0x49
  4443ea:	add    ch,ah
  4443ec:	ins    BYTE PTR es:[edi],dx
  4443ed:	les    edi,FWORD PTR ds:0x63550105
  4443f3:	xor    ah,BYTE PTR [eax+0x14]
  4443f6:	daa    
  4443f7:	lods   al,BYTE PTR ds:[esi]
  4443f8:	mov    bh,0x7
  4443fa:	int    0xa1
  4443fc:	xor    eax,0x50339e53
  444401:	xlat   BYTE PTR ds:[ebx]
  444403:	sbb    eax,0xbdfe0ae8
  444408:	push   ecx
  444409:	adc    eax,0x27e1523e
  44440e:	popf   
  44440f:	dec    esp
  444410:	out    dx,eax
  444411:	repnz sbb BYTE PTR [ebx+0x3821530],al
  444418:	mov    ds:0x816a5814,eax
  44441d:	repnz sbb al,0xae
  444420:	repnz es (bad) 
  444423:	fld    DWORD PTR [edx+0x6e]
  444426:	mov    bl,0xd5
  444428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444429:	cs xchg esp,esi
  44442c:	xchg   cl,bh
  44442e:	cmp    al,0x3
  444430:	push   es
  444431:	jbe    0x444496
  444433:	sbb    ch,BYTE PTR [eax-0x22]
  444436:	pop    edx
  444437:	hlt    
  444438:	mov    edx,0x774abe69
  44443d:	pop    edx
  44443e:	scas   al,BYTE PTR es:[edi]
  44443f:	dec    ecx
  444440:	fild   WORD PTR [ebx+0xddac212]
  444446:	dec    edx
  444447:	jecxz  0x44442c
  444449:	xchg   edi,eax
  44444a:	sub    al,0xde
  44444c:	mov    dl,0x84
  44444e:	adc    eax,DWORD PTR [ebx-0x1f1df1d]
  444454:	test   eax,0xcad047ea
  444459:	jge    0x44448c
  44445b:	mov    eax,ds:0x23096fba
  444460:	mov    bh,0x61
  444462:	dec    eax
  444463:	(bad)  
  444464:	fsub   st,st(2)
  444466:	gs push edx
  444468:	idiv   dl
  44446a:	ins    BYTE PTR es:[edi],dx
  44446b:	jg     0x444481
  44446d:	ret    0x97fb
  444470:	dec    eax
  444471:	mov    esp,0x713bafc5
  444476:	std    
  444477:	(bad)  
  444478:	into   
  444479:	sbb    BYTE PTR [edi-0x45],dh
  44447c:	(bad)  
  44447d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44447e:	sbb    bl,BYTE PTR [ebp-0x7659189e]
  444484:	push   es
  444485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444486:	shl    BYTE PTR [eax-0xc],0x6b
  44448a:	(bad)  
  44448b:	mov    ds:0x4d86ee67,eax
  444490:	repz sbb eax,DWORD PTR [esi-0x6af9d0a7]
  444497:	fs int3 
  444499:	dec    ebx
  44449a:	or     eax,0xc7737566
  44449f:	jae    0x4444bb
  4444a1:	call   0xa56e8564
  4444a6:	repz jge 0x4444be
  4444a9:	dec    esp
  4444aa:	out    0xef,eax
  4444ac:	dec    ebx
  4444ad:	xchg   edi,eax
  4444ae:	add    BYTE PTR [eax],0xb8
  4444b1:	xor    al,0x68
  4444b3:	sbb    BYTE PTR [ebp+0x3e],dh
  4444b6:	outs   dx,DWORD PTR ds:[esi]
  4444b7:	and    eax,0xe522f8a5
  4444bc:	scas   al,BYTE PTR es:[edi]
  4444bd:	gs std 
  4444bf:	lea    ebx,[edx]
  4444c1:	jne    0x44453f
  4444c3:	add    BYTE PTR [edx+0xd],ch
  4444c6:	int    0xb
  4444c8:	mov    esi,0x7e0e6c07
  4444cd:	push   cs
  4444ce:	mov    cl,0x82
  4444d0:	sbb    eax,0x5e4224ca
  4444d5:	sbb    eax,0xfae0ef79
  4444da:	cbw    
  4444dc:	cli    
  4444dd:	push   ss
  4444de:	push   es
  4444df:	push   es
  4444e0:	push   ds
  4444e1:	mov    ?,WORD PTR [bx+0x1fb9]
  4444e6:	inc    ebx
  4444e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4444e8:	fs mov ebp,0x46390ca0
  4444ee:	mov    ds:0x61862f33,eax
  4444f3:	xlat   BYTE PTR ds:[ebx]
  4444f4:	call   0x4ab6:0x3bff91d9
  4444fb:	or     edx,DWORD PTR [edx-0x76]
  4444fe:	dec    esp
  4444ff:	and    esi,DWORD PTR [ecx-0x7d0f5155]
  444505:	push   esi
  444506:	in     eax,0x9d
  444508:	inc    esp
  444509:	xor    DWORD PTR [edx+0x79ee8ece],ebp
  44450f:	in     al,0x25
  444511:	mov    edi,0x5e164058
  444516:	fcom   DWORD PTR [edx]
  444518:	dec    eax
  444519:	jo     0x44451f
  44451b:	mov    al,ds:0x6f6aef5b
  444520:	sub    BYTE PTR gs:[eax],al
  444523:	xchg   ebx,eax
  444524:	test   dl,0x3d
  444527:	xor    al,0x72
  444529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44452a:	scas   al,BYTE PTR es:[edi]
  44452b:	push   ecx
  44452c:	mov    ebx,ds
  44452e:	cli    
  44452f:	or     BYTE PTR ds:0xb34b409c,dh
  444535:	cli    
  444536:	dec    ecx
  444537:	std    
  444538:	xchg   esp,eax
  444539:	retf   
  44453a:	pop    ebp
  44453b:	inc    ecx
  44453c:	mov    dl,0xb3
  44453e:	inc    ebp
  44453f:	pop    eax
  444540:	ffree  st(0)
  444542:	repnz sbb DWORD PTR es:0x7f3791d,0xffffffab
  44454b:	aam    0xdc
  44454d:	into   
  44454e:	retf   0x14a
  444551:	pop    edx
  444552:	fisub  DWORD PTR [ecx-0x50]
  444555:	cdq    
  444556:	xchg   edi,eax
  444557:	pop    ecx
  444558:	in     al,dx
  444559:	jg     0x4444e9
  44455b:	(bad)  
  44455c:	mov    dl,0x1a
  44455e:	imul   ebx,DWORD PTR ds:0x880f5f58,0xfffffffa
  444565:	and    al,0xad
  444567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444568:	lea    esp,[esi]
  44456a:	(bad)  
  44456c:	cmp    eax,0x13bc025e
  444571:	push   esp
  444572:	ret    0x55ed
  444575:	inc    ecx
  444576:	inc    esp
  444577:	push   es
  444578:	mov    ds:0xed5f84cf,eax
  44457d:	pushf  
  44457e:	clc    
  44457f:	and    al,0x78
  444581:	(bad)  
  444582:	mov    dh,0xde
  444584:	test   eax,0x438e5510
  444589:	jge    0x4445b3
  44458b:	pusha  
  44458c:	ret    0xf7a
  44458f:	scas   eax,DWORD PTR es:[edi]
  444590:	mov    dh,0x7e
  444592:	loopne 0x444549
  444594:	mov    esi,0x67d4ad3f
  444599:	add    eax,0xed031739
  44459e:	sbb    eax,0xce92b144
  4445a3:	lds    edx,FWORD PTR [eax+0x6c]
  4445a6:	test   eax,0xbda76db
  4445ab:	stos   BYTE PTR es:[edi],al
  4445ac:	xchg   DWORD PTR [esi+0x30],edx
  4445af:	or     BYTE PTR [ebx],0xe1
  4445b2:	pop    edx
  4445b3:	xor    ah,BYTE PTR [esi+0x57]
  4445b6:	xacquire xchg BYTE PTR [edi+esi*8+0x23],bl
  4445bb:	dec    esp
  4445bc:	adc    BYTE PTR [ecx],bh
  4445be:	cmp    DWORD PTR [edi+ecx*1],esp
  4445c1:	sbb    al,0xa6
  4445c3:	fistp  DWORD PTR cs:[ecx+eax*8-0x4b2618b8]
  4445cb:	fstp   TBYTE PTR [ebp+0x74f6bdf2]
  4445d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4445d2:	or     dl,ch
  4445d4:	ret    
  4445d5:	add    edx,DWORD PTR [ecx+0x457f0db5]
  4445db:	ss (bad) 
  4445dd:	(bad)  
  4445de:	mov    BYTE PTR [esi+eiz*1-0x73],bl
  4445e2:	pop    edx
  4445e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4445e4:	jnp    0x44462d
  4445e6:	cmp    DWORD PTR [eax-0x4a1cab20],esp
  4445ec:	and    BYTE PTR [esi+0x16],dl
  4445ef:	mov    edx,0xac6af146
  4445f4:	das    
  4445f5:	push   0x9317d3c2
  4445fa:	cld    
  4445fb:	je     0x4445a0
  4445fd:	cmp    al,0x4f
  4445ff:	mov    ds:0xa54f96bc,eax
  444604:	out    0x86,eax
  444606:	dec    ecx
  444607:	imul   ebp,DWORD PTR [edx],0xdd477a4c
  44460d:	jo     0x444597
  44460f:	dec    esp
  444610:	inc    edx
  444611:	icebp  
  444612:	adc    eax,0x3dec306e
  444617:	xor    eax,0x6dfe6301
  44461c:	idiv   ecx
  44461e:	mov    ds:0xde0504d7,eax
  444623:	cmc    
  444624:	dec    edx
  444625:	rcr    DWORD PTR [ebp+0x6277df56],1
  44462b:	xor    BYTE PTR [edx-0xb],0x89
  44462f:	sbb    DWORD PTR [eax+0x679d7d4f],esi
  444635:	sti    
  444636:	pop    edx
  444637:	dec    ebx
  444638:	mov    BYTE PTR ds:0xd675155f,dl
  44463e:	mov    ds:0x65ccec1c,al
  444643:	cmp    al,0x32
  444645:	add    ebp,DWORD PTR [eax-0x36]
  444648:	sti    
  444649:	stos   BYTE PTR es:[edi],al
  44464a:	addr16 sbb al,0xd6
  44464e:	mov    dh,0x52
  444650:	out    dx,al
  444651:	push   es
  444652:	pusha  
  444653:	cmp    ebp,edi
  444655:	cs inc ecx
  444657:	icebp  
  444658:	jno    0x4446b8
  44465a:	repz pop es
  44465c:	sub    al,0x8b
  44465e:	not    DWORD PTR [ecx-0x46]
  444661:	clc    
  444662:	push   ds
  444663:	mov    bl,BYTE PTR ds:0x62e21772
  444669:	jnp    0x444614
  44466b:	imul   ebx,esi,0xffffff87
  44466e:	mov    ds:0xcdbd586d,eax
  444673:	jns    0x444685
  444675:	push   cs
  444676:	add    ebx,eax
  444678:	retf   0x1b6
  44467b:	das    
  44467c:	mov    DWORD PTR [ecx+0xbcc1c1a],ebx
  444682:	jle    0x4446f1
  444684:	inc    ebx
  444685:	cmp    ch,ch
  444687:	or     ebx,ebp
  444689:	xchg   esp,eax
  44468a:	dec    esi
  44468b:	scas   eax,DWORD PTR es:[edi]
  44468c:	inc    eax
  44468d:	push   ecx
  44468e:	xchg   ecx,eax
  44468f:	sahf   
  444690:	jne    0x444681
  444692:	loopne 0x444677
  444694:	pop    esi
  444695:	mov    ds:0x1372b778,eax
  44469a:	mov    ebx,0x2e7675cd
  44469f:	cmc    
  4446a0:	or     eax,0x385b91cb
  4446a5:	inc    edi
  4446a6:	mov    ch,0x62
  4446a8:	or     ch,ch
  4446aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4446ab:	popf   
  4446ac:	add    edx,DWORD PTR [esi-0x57918609]
  4446b2:	sub    DWORD PTR ds:0x508deed4,0xffffff90
  4446b9:	je     0x444677
  4446bb:	mov    eax,0x5a1e8cc2
  4446c0:	mov    BYTE PTR [ebp+0x69f664df],dh
  4446c6:	sbb    eax,edx
  4446c8:	cmp    DWORD PTR [ebx-0x5c],edi
  4446cb:	sar    DWORD PTR [esi+0x2],0x2b
  4446cf:	dec    ebp
  4446d0:	(bad)  [ebx]
  4446d2:	arpl   ax,bp
  4446d4:	enter  0x2e5d,0xd3
  4446d8:	or     eax,DWORD PTR [ecx+0x75]
  4446db:	(bad)  
  4446dc:	pop    edi
  4446dd:	loopne 0x4446d7
  4446df:	aaa    
  4446e0:	fdiv   QWORD PTR [edi-0x7e]
  4446e3:	lods   eax,DWORD PTR ds:[esi]
  4446e4:	stos   BYTE PTR es:[edi],al
  4446e5:	mov    ah,0x9f
  4446e7:	aas    
  4446e8:	xor    dl,bl
  4446ea:	sub    BYTE PTR ds:0x23e9e823,dh
  4446f0:	fldl2e 
  4446f2:	imul   BYTE PTR [ecx+0xa]
  4446f5:	mov    al,ds:0x4f4cddc7
  4446fa:	shl    BYTE PTR [ebx-0x10d5471f],1
  444700:	adc    eax,0x200183db
  444705:	pop    ebp
  444706:	push   esp
  444707:	fs ja  0x4446d4
  44470a:	push   ds
  44470b:	dec    ecx
  44470c:	das    
  44470d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44470e:	in     al,dx
  44470f:	or     eax,0x8317a1d7
  444714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444715:	push   edx
  444716:	gs jle 0x44471c
  444719:	rol    bh,0x78
  44471c:	mov    WORD PTR [edx],gs
  44471e:	ret    0x358a
  444721:	(bad)  
  444722:	ja     0x444785
  444724:	cmp    bl,bl
  444726:	push   eax
  444727:	jae    0x4446b2
  444729:	ins    BYTE PTR es:[edi],dx
  44472a:	std    
  44472b:	xchg   ecx,eax
  44472c:	addr16 xchg esp,eax
  44472e:	arpl   sp,bx
  444730:	dec    esp
  444731:	addr16 sub dl,bh
  444734:	lahf   
  444735:	pop    edx
  444736:	scas   eax,DWORD PTR es:[di]
  444738:	cwde   
  444739:	test   eax,0x20be9663
  44473e:	xchg   ebx,eax
  44473f:	xchg   esi,eax
  444740:	xchg   edi,eax
  444741:	imul   ebp,DWORD PTR [edx],0xa55e21b8
  444747:	mov    al,0xbe
  444749:	push   esp
  44474a:	lds    esi,FWORD PTR [ecx+edi*2]
  44474d:	pop    es
  44474e:	mov    al,0x1
  444750:	jg     0x444713
  444752:	add    al,0xc4
  444754:	frstor [esi-0x6fae9deb]
  44475a:	not    DWORD PTR [edi]
  44475c:	push   cs
  44475d:	in     eax,0x14
  44475f:	ins    BYTE PTR es:[edi],dx
  444760:	or     BYTE PTR [eax-0x45],bh
  444763:	dec    esi
  444764:	pop    edx
  444765:	sahf   
  444766:	sbb    eax,0x256b4de8
  44476b:	mov    eax,ds:0x8c64eeef
  444770:	xchg   esp,eax
  444771:	arpl   WORD PTR [ebp-0x69ec2147],si
  444777:	(bad)  
  444778:	mov    ds:0x5c5dca6f,eax
  44477d:	lea    edx,[edi+ebp*4+0x20]
  444781:	push   ds
  444782:	ins    DWORD PTR es:[edi],dx
  444783:	mov    esp,0xcd0945a3
  444788:	cwde   
  444789:	sub    BYTE PTR [edx+0x502676e4],cl
  44478f:	lods   eax,DWORD PTR ds:[esi]
  444790:	pop    ecx
  444791:	addr16 adc al,0xca
  444794:	mov    bl,0x20
  444796:	push   ecx
  444797:	scas   eax,DWORD PTR es:[edi]
  444798:	out    0xeb,eax
  44479a:	jle    0x444781
  44479c:	push   edi
  44479d:	ins    DWORD PTR es:[edi],dx
  44479e:	bound  edi,QWORD PTR [edi+0x5d]
  4447a1:	jno    0x44473c
  4447a3:	jmp    0x8b63:0xcac6efd6
  4447aa:	std    
  4447ab:	imul   ebx,esp,0x47981245
  4447b1:	fidiv  WORD PTR [edi+0x76f0aa4a]
  4447b7:	push   0xfffffff0
  4447b9:	stc    
  4447ba:	mov    al,0x6e
  4447bc:	clc    
  4447bd:	adc    al,0xf5
  4447bf:	mov    cl,0x58
  4447c1:	clc    
  4447c2:	mov    edx,0xde75ea5e
  4447c7:	(bad)  
  4447c8:	mov    al,0x73
  4447ca:	lods   al,BYTE PTR ds:[esi]
  4447cb:	xor    dh,ah
  4447cd:	xor    eax,0x4706c959
  4447d2:	mov    eax,DWORD PTR [ebp-0x3f]
  4447d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4447d6:	add    ecx,DWORD PTR [ebx+0x58]
  4447d9:	mov    esi,0x58c7d208
  4447de:	pop    ebx
  4447df:	popf   
  4447e0:	or     DWORD PTR [eax+0x71],0xaccd2df0
  4447e7:	adc    DWORD PTR [ecx+0x5385c],0xfffffff4
  4447ee:	jns    0x4447fd
  4447f0:	cmp    eax,0x73a8add3
  4447f5:	jno    0x4447cc
  4447f7:	pop    ecx
  4447f8:	daa    
  4447f9:	push   0xffffffb7
  4447fb:	push   es
  4447fc:	adc    al,0x71
  4447fe:	sbb    BYTE PTR [ecx-0x74b9a75a],0xc6
  444805:	jne    0x44484d
  444807:	(bad)  
  444808:	push   ds
  444809:	imul   ebp,DWORD PTR [ebx-0x6d],0x24
  44480d:	lods   al,BYTE PTR ds:[esi]
  44480e:	in     al,0x17
  444810:	pop    eax
  444811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444812:	sbb    BYTE PTR [edx-0x4e35d4d7],ah
  444818:	addr16 mov ds:0x4318,eax
  44481c:	popf   
  44481d:	xchg   esp,eax
  44481e:	mov    WORD PTR [edx+0x31],fs
  444821:	sahf   
  444822:	retf   0xd1c9
  444825:	adc    DWORD PTR [ebx-0xd2132a0],0xb6b992da
  44482f:	scas   eax,DWORD PTR es:[edi]
  444830:	push   ecx
  444831:	cmp    eax,0x6fdefc5a
  444836:	(bad)  
  444837:	das    
  444838:	mov    eax,ds:0x8e05e33d
  44483d:	push   cs
  44483e:	jmp    0x3749:0x18057262
  444845:	mov    DWORD PTR [esi+0x49],edi
  444848:	jne    0x444804
  44484a:	push   cs
  44484b:	test   al,0x6f
  44484d:	sub    eax,0x654777c4
  444852:	lds    esi,FWORD PTR [ebx]
  444854:	inc    eax
  444855:	cmc    
  444856:	ret    
  444857:	hlt    
  444858:	sar    BYTE PTR [ebx-0x30deb95f],1
  44485e:	in     eax,0x3c
  444860:	jnp    0x4447fa
  444862:	xchg   ecx,eax
  444863:	xchg   bl,cl
  444865:	mov    WORD PTR [esi],?
  444867:	lock ror DWORD PTR [eax-0x48c8d091],1
  44486e:	retf   0x2c3c
  444871:	xchg   edi,eax
  444872:	test   BYTE PTR [edx],dh
  444874:	fwait
  444875:	pop    ebp
  444876:	push   ebp
  444877:	sahf   
  444878:	jge    0x44489c
  44487a:	lods   al,BYTE PTR ds:[esi]
  44487b:	mov    DWORD PTR [esi-0x49],esp
  44487e:	and    al,0xde
  444880:	cmp    eax,0xb26db724
  444885:	pop    edi
  444886:	aas    
  444887:	inc    edi
  444888:	or     eax,0xd7591b8b
  44488d:	xchg   ebp,eax
  44488e:	(bad)  
  44488f:	pop    ss
  444890:	add    dl,al
  444892:	setp   BYTE PTR [esi]
  444895:	hlt    
  444896:	call   0x80ba:0x25411605
  44489d:	jns    0x444883
  44489f:	and    BYTE PTR [ebx+0x6e56120a],cl
  4448a5:	xor    esi,DWORD PTR [edi]
  4448a7:	xor    eax,0xd8f7a48f
  4448ac:	xchg   ecx,eax
  4448ad:	loopne 0x44491f
  4448af:	sbb    esp,edi
  4448b1:	sub    ecx,ebp
  4448b3:	fdiv   QWORD PTR [ebp+edx*1+0x61]
  4448b7:	es and al,0x6a
  4448ba:	lds    eax,FWORD PTR [ebp+ebx*2-0x1d6115a2]
  4448c1:	pop    eax
  4448c2:	sub    al,0xa4
  4448c5:	test   DWORD PTR [eax+0x7e275b9b],eax
  4448cb:	imul   ebp,DWORD PTR [eax+0x77],0x79
  4448cf:	xor    al,0xa3
  4448d1:	pop    esi
  4448d2:	jmp    0x444862
  4448d4:	dec    edx
  4448d5:	in     al,dx
  4448d6:	pop    esp
  4448d7:	add    eax,0x59cec8f3
  4448dc:	and    al,0xb9
  4448de:	ss mov bh,0xa9
  4448e1:	daa    
  4448e2:	imul   esi,DWORD PTR [ebx],0x79
  4448e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4448e6:	fst    DWORD PTR [edi+0xc]
  4448e9:	pop    ebp
  4448ea:	pop    ecx
  4448eb:	mov    eax,0x6143bf95
  4448f0:	mov    ecx,0x859dbc12
  4448f5:	mov    WORD PTR [ebx],ds
  4448f7:	or     DWORD PTR [bp+0x10],esp
  4448fb:	scas   eax,DWORD PTR es:[edi]
  4448fc:	ds cmp cl,cl
  4448ff:	or     DWORD PTR [eax-0x7df5a1e9],edx
  444905:	dec    eax
  444906:	pop    ds
  444907:	aas    
  444908:	inc    esi
  444909:	mov    ebp,0x7a13fadc
  44490e:	xchg   ebp,eax
  44490f:	ins    BYTE PTR es:[edi],dx
  444910:	push   ecx
  444911:	sub    al,0x4d
  444913:	fs sahf 
  444915:	enter  0xa768,0x3f
  444919:	xor    eax,0x402156d5
  44491e:	pop    esp
  44491f:	xor    edi,DWORD PTR gs:[eax-0x1650c7ce]
  444926:	stc    
  444927:	cmp    BYTE PTR [ebp+0x4f836f67],bl
  44492d:	not    ebp
  44492f:	je     0x4448f7
  444931:	mov    eax,ds:0xdb845b86
  444936:	or     DWORD PTR [ecx+0x6bce19e6],0xffffffda
  44493d:	push   ebp
  44493e:	xor    dh,bh
  444940:	dec    edi
  444941:	push   ebp
  444942:	cdq    
  444943:	adc    al,0xf3
  444945:	js     0x44494c
  444947:	mov    esi,0x3b4dc921
  44494c:	mov    eax,ds:0xad8ad420
  444951:	push   ds
  444952:	inc    eax
  444953:	clc    
  444954:	test   edx,edx
  444956:	adc    eax,0x4017514
  44495b:	push   ebp
  44495c:	es adc al,0xfc
  44495f:	ret    
  444960:	mov    edi,0xe9a7d239
  444965:	in     al,0x36
  444967:	xchg   ebx,eax
  444968:	inc    edi
  444969:	sahf   
  44496a:	aad    0xf5
  44496c:	jo     0x44499a
  44496e:	je     0x444944
  444970:	jae    0x44499f
  444972:	dec    edx
  444973:	push   cs
  444974:	inc    eax
  444975:	lds    ebx,FWORD PTR [ebp+0x26f9e941]
  44497b:	shr    DWORD PTR [edx+0x7a],1
  44497e:	test   al,0x3f
  444980:	xor    BYTE PTR [ecx+0x706470ef],cl
  444986:	in     eax,0x7b
  444988:	sbb    al,0x24
  44498a:	outs   dx,DWORD PTR ds:[esi]
  44498b:	inc    ebp
  44498c:	push   ecx
  44498d:	sub    BYTE PTR [ebp+0x7dc50bb4],bl
  444993:	loopne 0x444a03
  444995:	mov    es,edi
  444997:	cwde   
  444998:	pop    edi
  444999:	push   eax
  44499a:	add    BYTE PTR [ebx],al
  44499c:	or     DWORD PTR [edx],ebp
  44499e:	adc    dh,bl
  4449a0:	push   ebp
  4449a1:	mov    edx,es
  4449a3:	fild   WORD PTR [eax]
  4449a6:	mov    ecx,0xc7600bfe
  4449ab:	scas   eax,DWORD PTR es:[edi]
  4449ac:	lds    edx,FWORD PTR [edi]
  4449ae:	out    0xe6,al
  4449b0:	sub    eax,0xd47eaa28
  4449b5:	cmp    dl,BYTE PTR [eax+edi*8]
  4449b8:	dec    esp
  4449b9:	jl     0x4449d8
  4449bb:	arpl   bp,cx
  4449bd:	dec    ebp
  4449be:	dec    ebx
  4449bf:	mov    dl,cl
  4449c1:	adc    esp,DWORD PTR [edi+0x24]
  4449c4:	mov    ?,WORD PTR es:[ecx+0x2b994715]
  4449cb:	and    al,0x1
  4449cd:	das    
  4449ce:	add    DWORD PTR [ecx+ecx*2],0x16
  4449d2:	out    0x40,al
  4449d4:	aaa    
  4449d5:	mov    edi,0xac404174
  4449da:	mov    esi,eax
  4449dc:	add    bl,ah
  4449de:	mov    edx,0x86b1fa2a
  4449e3:	push   es
  4449e4:	test   eax,0x8d4ff450
  4449e9:	mov    edx,0xcb84d54c
  4449ee:	sub    DWORD PTR [ebp+0x6a8dcab2],ecx
  4449f4:	sbb    al,0xf2
  4449f6:	or     DWORD PTR [esi+0xb13deda],ebp
  4449fc:	or     esp,edi
  4449fe:	jbe    0x444a06
  444a00:	(bad)  
  444a01:	xchg   esi,eax
  444a02:	sbb    eax,0x6abd4b15
  444a07:	jg     0x444a62
  444a09:	mov    eax,ds:0xa0036f24
  444a0e:	adc    DWORD PTR [edi+eiz*2],esp
  444a11:	inc    ebx
  444a12:	jecxz  0x4449f5
  444a14:	or     al,0xaa
  444a16:	cld    
  444a17:	addr16 cwde 
  444a19:	cwde   
  444a1a:	mov    edi,0x67a4649f
  444a1f:	add    eax,0x233756ea
  444a24:	gs (bad) 
  444a26:	jmp    0x4449e9
  444a28:	cmp    BYTE PTR [ebp+ebp*4+0x6],dh
  444a2c:	ret    0xca96
  444a2f:	hlt    
  444a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444a31:	mov    ds:0x9d8113ce,eax
  444a36:	xor    al,0x1
  444a38:	and    dl,ch
  444a3a:	call   0x19a9:0x653c66ca
  444a41:	pop    edi
  444a42:	pop    esi
  444a43:	sbb    edx,DWORD PTR [esi]
  444a45:	clc    
  444a46:	scas   al,BYTE PTR es:[edi]
  444a47:	jl     0x444a96
  444a49:	and    al,0xea
  444a4b:	inc    esp
  444a4c:	pop    esi
  444a4d:	cmp    DWORD PTR [edx],edi
  444a4f:	test   eax,edx
  444a51:	inc    ecx
  444a52:	cmp    BYTE PTR [edx-0x47],cl
  444a55:	out    dx,ax
  444a57:	fstp   TBYTE PTR [ebp-0x69bd3e1]
  444a5d:	mov    al,0xca
  444a5f:	das    
  444a60:	push   edx
  444a61:	jge    0x444abd
  444a63:	jno    0x444aa9
  444a65:	push   ebp
  444a66:	inc    ecx
  444a67:	sbb    DWORD PTR [esi-0x1f],ecx
  444a6a:	cli    
  444a6b:	loop   0x444a31
  444a6d:	imul   eax,DWORD PTR [edi+0xee4b648],0x76f89796
  444a77:	imul   eax,DWORD PTR [eax-0x6e761459],0xd0fbd6da
  444a81:	stos   DWORD PTR es:[edi],eax
  444a82:	xlat   BYTE PTR ds:[ebx]
  444a83:	cmp    ah,BYTE PTR ds:0x55a40ba0
  444a89:	iret   
  444a8a:	jle    0x444a7a
  444a8c:	stc    
  444a8d:	lods   eax,DWORD PTR ds:[esi]
  444a8e:	pop    ss
  444a8f:	push   ss
  444a90:	(bad)  
  444a91:	jl     0x444ad6
  444a93:	jp     0x444aa6
  444a95:	or     BYTE PTR ds:0x7297c491,dl
  444a9b:	ja     0x444a84
  444a9d:	mov    dl,0x1c
  444a9f:	push   es
  444aa0:	xchg   BYTE PTR [esi],ch
  444aa2:	inc    edx
  444aa3:	aaa    
  444aa4:	inc    ecx
  444aa5:	(bad)  
  444aa6:	jo     0x444a80
  444aa8:	sub    ecx,esp
  444aaa:	pop    ebp
  444aab:	in     eax,0x66
  444aad:	push   0x83bc7971
  444ab2:	bound  edx,QWORD PTR [esi+0x63]
  444ab5:	push   ecx
  444ab6:	rcl    al,0xc1
  444ab9:	daa    
  444aba:	sub    DWORD PTR [edi+0x6f61bdcf],eax
  444ac0:	ins    BYTE PTR es:[di],dx
  444ac2:	pusha  
  444ac3:	and    BYTE PTR [ebp+eiz*8+0x35],bl
  444ac7:	mov    eax,0x21ec9568
  444acc:	es sbb al,0xc8
  444acf:	jbe    0x444ab8
  444ad1:	fmul   QWORD PTR [edi]
  444ad3:	sbb    al,0xc0
  444ad5:	add    bl,dl
  444ad7:	xchg   BYTE PTR [ebp+0x4d],ch
  444ada:	or     al,0x2f
  444adc:	sbb    eax,0xdcf4d93d
  444ae1:	nop
  444ae2:	imul   eax,DWORD PTR [esi+edi*8-0x5c2ee2f0],0x21e0a219
  444aed:	in     al,dx
  444aee:	cmp    DWORD PTR [eax-0x723f8d74],0xc5a8a696
  444af8:	popf   
  444af9:	add    eax,0xee3933f7
  444afe:	mov    edi,0x712ce646
  444b03:	aaa    
  444b04:	sub    DWORD PTR [eax-0xe],0xffffffd9
  444b08:	popa   
  444b09:	pop    esp
  444b0a:	loopne 0x444ad8
  444b0c:	int    0x23
  444b0e:	mov    bl,0x81
  444b10:	pop    edx
  444b11:	loop   0x444b88
  444b13:	pusha  
  444b14:	add    eax,0xf8bc38c1
  444b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444b1a:	mov    edx,0xd7dc229
  444b1f:	addr16 add eax,0xb2f31cc4
  444b25:	inc    ebx
  444b26:	fldcw  WORD PTR [edx+0x3c]
  444b29:	mov    edi,eax
  444b2b:	pusha  
  444b2c:	mov    bl,0xd8
  444b2e:	cs mov ebp,0x569ecc1b
  444b34:	repnz sbb al,0xc6
  444b37:	icebp  
  444b38:	shl    ah,1
  444b3a:	inc    edx
  444b3b:	xchg   edx,eax
  444b3c:	pop    eax
  444b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444b3e:	dec    ecx
  444b3f:	push   ebx
  444b40:	and    ah,BYTE PTR [esi+0x18]
  444b43:	xchg   esp,eax
  444b44:	cmp    ebx,esp
  444b46:	mov    cl,0xd9
  444b48:	in     al,0x81
  444b4a:	adc    al,0x6c
  444b4c:	dec    edx
  444b4d:	mov    eax,eax
  444b4f:	sbb    cl,BYTE PTR [eax+0x37]
  444b52:	mov    esi,cs
  444b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444b55:	loopne 0x444bd2
  444b57:	xor    BYTE PTR [esi],0xea
  444b5a:	in     eax,dx
  444b5b:	jg     0x444b47
  444b5d:	jae    0x444ba6
  444b5f:	popf   
  444b60:	imul   esp,DWORD PTR [ebx+0x3e1688ac],0x70
  444b67:	sub    al,BYTE PTR [ecx-0x27a5b130]
  444b6d:	jns    0x444bbe
  444b6f:	mov    dl,0xe0
  444b71:	dec    edi
  444b72:	fisttp WORD PTR gs:[esi+0x3a7f051b]
  444b79:	jge    0x444b23
  444b7b:	jecxz  0x444b00
  444b7d:	sbb    al,0x41
  444b7f:	pusha  
  444b80:	add    dl,BYTE PTR [ebx+0x37]
  444b83:	iret   
  444b84:	les    ebx,FWORD PTR [ebx]
  444b86:	jge    0x444b3e
  444b88:	dec    esi
  444b89:	cmp    BYTE PTR [ecx-0x7b0060ac],dl
  444b8f:	cmp    eax,0x4e54a672
  444b94:	sbb    cl,BYTE PTR [eax+0x71]
  444b97:	fisttp WORD PTR [edi+0x67]
  444b9a:	mov    ebx,edx
  444b9c:	xchg   edi,eax
  444b9d:	call   0x584be115
  444ba2:	jae    0x444c0f
  444ba4:	push   edx
  444ba5:	push   ds
  444ba6:	push   0xc90b175d
  444bab:	(bad)  
  444bac:	(bad)  
  444bad:	jmp    0xd0af:0x74fa93a3
  444bb4:	adc    ebx,ebx
  444bb6:	jecxz  0x444b77
  444bb8:	or     al,0x99
  444bba:	cld    
  444bbb:	cdq    
  444bbc:	dec    edx
  444bbd:	es pop eax
  444bbf:	int3   
  444bc0:	ins    DWORD PTR es:[edi],dx
  444bc1:	mov    dl,BYTE PTR [esi+0x622521c3]
  444bc7:	add    al,0xac
  444bc9:	pop    edi
  444bca:	mov    ah,0x76
  444bcc:	inc    esi
  444bcd:	int3   
  444bce:	aas    
  444bcf:	adc    al,0xa5
  444bd1:	js     0x444b68
  444bd3:	sti    
  444bd4:	call   0xab98:0x4e1e2c49
  444bdb:	out    0xd3,eax
  444bdd:	outs   dx,BYTE PTR ds:[esi]
  444bde:	pop    ebp
  444bdf:	xchg   esp,eax
  444be0:	repnz xor dl,0xdf
  444be4:	cmc    
  444be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444be6:	addr16 call 0x7d419c68
  444bec:	pop    edi
  444bed:	(bad)
  444bf0:	cs inc ecx
  444bf2:	add    edx,DWORD PTR [eax+0x9]
  444bf5:	outs   dx,BYTE PTR ds:[esi]
  444bf6:	jmp    0x444c07
  444bf8:	repnz jmp 0x72c1:0x2a34955c
  444c00:	lods   eax,DWORD PTR ds:[esi]
  444c01:	out    dx,eax
  444c02:	frstor [ecx]
  444c04:	mov    bl,0xd5
  444c06:	add    eax,0x6c6bb846
  444c0b:	(bad)  
  444c0c:	stc    
  444c0d:	mul    DWORD PTR [edx]
  444c0f:	mov    WORD PTR [edi],es
  444c11:	and    BYTE PTR [ecx+0x65],dh
  444c14:	fdivr  st,st(4)
  444c16:	rcr    DWORD PTR [ebp-0x183e3c63],cl
  444c1c:	test   bh,bl
  444c1e:	cs pop esp
  444c20:	loope  0x444bd7
  444c22:	xor    al,0x7e
  444c24:	pop    eax
  444c25:	int3   
  444c26:	mov    dh,BYTE PTR [ecx+0x4c8938ba]
  444c2c:	sub    esp,edi
  444c2e:	seta   ah
  444c31:	in     eax,dx
  444c32:	test   al,0xf7
  444c34:	rep stos DWORD PTR es:[edi],eax
  444c36:	js     0x444ca8
  444c38:	xchg   DWORD PTR [edi],eax
  444c3a:	aaa    
  444c3b:	push   cs
  444c3c:	adc    al,0x1f
  444c3e:	or     al,0xc8
  444c40:	inc    ebp
  444c41:	jns    0x444bcf
  444c43:	(bad)  
  444c45:	icebp  
  444c46:	xchg   esi,eax
  444c47:	(bad)  
  444c48:	or     al,0x63
  444c4a:	jmp    0x444c5a
  444c4c:	xchg   ebp,eax
  444c4d:	aad    0xbb
  444c4f:	mov    ecx,0x54e92f09
  444c54:	mov    eax,ds:0xa2eac43
  444c59:	add    edx,edx
  444c5b:	mov    al,0x6a
  444c5d:	mov    ah,0x1b
  444c5f:	lahf   
  444c60:	cmp    BYTE PTR [edi],0x6b
  444c63:	cmp    BYTE PTR [ecx+0x2e7a6fe8],0xd4
  444c6a:	data16 fidivr WORD PTR [ecx]
  444c6d:	xchg   edx,eax
  444c6e:	mov    eax,ds:0x6ede278
  444c73:	test   BYTE PTR [edx+0x5a],bh
  444c76:	retf   0xb785
  444c79:	mov    ds:0x128a096e,al
  444c7e:	sbb    al,0x35
  444c80:	xor    BYTE PTR [edx],0xda
  444c83:	jae    0x444cc0
  444c85:	push   ecx
  444c86:	stc    
  444c87:	je     0x444c5b
  444c89:	in     eax,0xe4
  444c8b:	call   0xfbf4c426
  444c90:	idiv   DWORD PTR [esi+0x6af8ff10]
  444c96:	aaa    
  444c97:	jno    0x444c46
  444c99:	xor    ebx,eax
  444c9b:	pop    es
  444c9c:	cmp    eax,0xd90b8900
  444ca1:	out    0x76,eax
  444ca3:	pop    esp
  444ca4:	test   al,0x7b
  444ca6:	and    DWORD PTR [ecx+eiz*4+0x38],0x56bbb7cd
  444cae:	cmp    DWORD PTR [esi+ebx*4+0x55],0xa5b87739
  444cb6:	in     eax,0x19
  444cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444cb9:	rcr    DWORD PTR [edi+0x6949cbf7],cl
  444cbf:	push   eax
  444cc0:	stc    
  444cc1:	retf   0x1a24
  444cc4:	call   0x6d7639e1
  444cc9:	shl    DWORD PTR [ebp-0x573a8ed7],0x49
  444cd0:	mov    ecx,0x8685d52e
  444cd5:	outs   dx,BYTE PTR ds:[esi]
  444cd6:	add    eax,0xb0aa878f
  444cdb:	jns    0x444cf6
  444cdd:	dec    ebp
  444cde:	adc    edx,DWORD PTR [ebp-0x2a91b111]
  444ce4:	pop    edx
  444ce5:	add    eax,0x879e901e
  444cea:	push   ecx
  444ceb:	bt     DWORD PTR [esp+esi*8-0x2],eax
  444cf0:	mov    BYTE PTR [ebp+0x43],0x9a
  444cf4:	or     BYTE PTR [ecx-0x46],ch
  444cf7:	jae    0x444cd2
  444cf9:	gs push edx
  444cfb:	dec    ebp
  444cfc:	jmp    0x444ca7
  444cfe:	add    al,bh
  444d00:	lea    edi,[ebx]
  444d02:	pop    esi
  444d03:	mov    eax,0xce30d395
  444d08:	adc    BYTE PTR [ecx-0x7f9d9089],ah
  444d0e:	loop   0x444c98
  444d10:	shr    BYTE PTR [ebx],0xca
  444d13:	push   ebx
  444d14:	add    BYTE PTR [ebp-0x783378cf],al
  444d1a:	into   
  444d1b:	jg     0x444d47
  444d1d:	mov    esi,0x1e937dd2
  444d22:	jle    0x444cbc
  444d24:	out    0xc2,eax
  444d26:	mov    edi,0x68f544a0
  444d2b:	(bad)  
  444d2c:	and    al,0xa0
  444d2e:	xor    BYTE PTR [ecx+0x18],dh
  444d31:	nop
  444d32:	dec    eax
  444d33:	aad    0x5d
  444d35:	pop    ecx
  444d36:	mov    al,ds:0x9039b41f
  444d3b:	jno    0x444cdf
  444d3d:	or     bh,bh
  444d3f:	and    al,0x83
  444d41:	lods   eax,DWORD PTR ds:[esi]
  444d42:	fcmovb st,st(1)
  444d44:	fsubr  QWORD PTR [edx-0x46]
  444d47:	add    DWORD PTR [edi],ebx
  444d49:	ret    
  444d4a:	xchg   cl,bl
  444d4c:	outs   dx,BYTE PTR ds:[esi]
  444d4d:	mov    ch,0x81
  444d4f:	cmp    BYTE PTR [edx+ecx*4-0x42127c6e],ch
  444d56:	adc    eax,0x1445ecc1
  444d5c:	push   0xfffffff2
  444d5e:	aas    
  444d5f:	int3   
  444d60:	xchg   ebx,eax
  444d61:	pusha  
  444d62:	push   ebp
  444d63:	rcr    al,0x40
  444d66:	outs   dx,DWORD PTR ds:[esi]
  444d67:	jmp    0xe822:0x50979a61
  444d6e:	or     dl,BYTE PTR [ecx]
  444d70:	scas   al,BYTE PTR es:[edi]
  444d71:	pop    eax
  444d72:	jns    0x444dcb
  444d74:	add    BYTE PTR [eax-0x7bcd5cfa],bh
  444d7a:	mov    ecx,0x167a8bf5
  444d7f:	add    BYTE PTR [eax-0x6031b96d],cl
  444d85:	dec    edi
  444d86:	xchg   edi,eax
  444d87:	sbb    dl,ch
  444d89:	mov    bh,ah
  444d8b:	mov    eax,0xf0d2a57c
  444d90:	push   cs
  444d91:	mov    ds:0x42337c36,eax
  444d96:	cdq    
  444d97:	push   edx
  444d98:	xchg   ecx,eax
  444d99:	push   edi
  444d9a:	int3   
  444d9b:	leave  
  444d9c:	add    al,0x45
  444d9e:	xchg   ebp,eax
  444d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444da0:	add    BYTE PTR [esi+0x1b],0x32
  444da4:	leave  
  444da5:	lahf   
  444da6:	sar    BYTE PTR [esi],1
  444da8:	cmp    al,0x60
  444daa:	idiv   BYTE PTR [esi+ebp*8]
  444dad:	call   0x2ca:0x6e06b151
  444db4:	gs (bad) 
  444db6:	icebp  
  444db7:	jmp    0x444d65
  444db9:	repnz (bad) [ecx+0x30611e00]
  444dc0:	cld    
  444dc1:	add    BYTE PTR [eax+0x1c],ah
  444dc4:	shl    BYTE PTR [ecx+0x21],cl
  444dc7:	mov    edi,0x4e08031b
  444dcc:	and    ebp,DWORD PTR [edx+0x2f]
  444dcf:	stos   BYTE PTR es:[edi],al
  444dd0:	and    al,0xe9
  444dd2:	mov    edx,0x11248d8f
  444dd7:	mov    fs,WORD PTR [edi-0x6b]
  444dda:	pop    ds
  444ddb:	enter  0x80b7,0xac
  444ddf:	stos   BYTE PTR es:[edi],al
  444de0:	jmp    0x7d3:0x18ae718a
  444de7:	mov    eax,ds:0x66fdf117
  444dec:	popf   
  444ded:	popa   
  444dee:	xchg   ebx,eax
  444def:	inc    esp
  444df0:	das    
  444df1:	or     BYTE PTR [ebp-0x2a2ba807],al
  444df7:	xchg   esi,eax
  444df8:	lds    ebp,FWORD PTR ss:[ebx-0x76c83693]
  444dff:	mov    ebx,DWORD PTR [esi+0x546102ab]
  444e05:	sbb    BYTE PTR [ecx+0x20],0xcc
  444e09:	pop    esi
  444e0a:	fmul   st,st(4)
  444e0c:	shl    bh,1
  444e0e:	in     eax,0xf1
  444e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444e11:	pminub mm5,QWORD PTR [ebp-0x34]
  444e15:	(bad)  
  444e16:	gs sub al,0x55
  444e19:	aaa    
  444e1a:	cdq    
  444e1b:	sar    BYTE PTR [ecx-0x74],1
  444e1e:	xor    al,0x9c
  444e20:	stos   DWORD PTR es:[edi],eax
  444e21:	dec    ecx
  444e22:	xor    dh,BYTE PTR [esi+0xa4f08de]
  444e28:	jns    0x444e8c
  444e2a:	add    eax,0x8c64a921
  444e2f:	jnp    0x444e93
  444e31:	popa   
  444e32:	mov    eax,ds:0x6cf943cb
  444e37:	ret    
  444e38:	loope  0x444eb5
  444e3a:	scas   eax,DWORD PTR es:[edi]
  444e3b:	or     dl,BYTE PTR [esi-0x3]
  444e3e:	call   0x5b17e4a9
  444e43:	repnz ins BYTE PTR es:[edi],dx
  444e45:	jl     0x444e40
  444e47:	and    esi,DWORD PTR [ecx+0xe]
  444e4a:	pop    ds
  444e4b:	stos   DWORD PTR es:[edi],eax
  444e4c:	mov    bl,0xea
  444e4e:	dec    ebp
  444e4f:	add    dl,BYTE PTR [ebx+ebp*2-0x4ec9c597]
  444e56:	aam    0xfe
  444e58:	repz sbb DWORD PTR [eax+0x64],edx
  444e5c:	jmp    0x45e86550
  444e61:	repnz push edi
  444e63:	popf   
  444e64:	adc    esp,DWORD PTR [ecx+ecx*4-0x4]
  444e68:	(bad)  
  444e6a:	jbe    0x444eb7
  444e6c:	ins    BYTE PTR es:[edi],dx
  444e6d:	stos   BYTE PTR es:[edi],al
  444e6e:	cmp    edx,DWORD PTR [ecx]
  444e70:	fs cmp eax,0x79c40f1c
  444e76:	lea    esi,[edi+ebx*2+0x2a]
  444e7a:	int    0xf8
  444e7c:	mov    eax,esp
  444e7e:	mov    ebx,0xc202c65d
  444e83:	mov    al,ds:0xde864d17
  444e88:	in     al,dx
  444e89:	pushf  
  444e8a:	fstp   DWORD PTR [edi]
  444e8c:	push   es
  444e8d:	mov    bh,BYTE PTR [ecx-0x12]
  444e90:	dec    edi
  444e91:	les    edx,FWORD PTR [edx-0x61]
  444e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444e95:	xchg   ebx,eax
  444e96:	lods   al,BYTE PTR ds:[esi]
  444e97:	add    al,0xd
  444e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444e9a:	sbb    eax,0xe3b6e48f
  444e9f:	test   DWORD PTR [esi+0x1f],esi
  444ea2:	es cmovs ebp,ebx
  444ea6:	dec    ebx
  444ea7:	pop    edx
  444ea8:	mov    ah,0x6f
  444eaa:	mov    eax,ds:0xc5dd8159
  444eaf:	xchg   esp,eax
  444eb0:	out    dx,eax
  444eb1:	xchg   ebx,eax
  444eb2:	sbb    al,0x3e
  444eb4:	leave  
  444eb5:	xor    DWORD PTR [edx-0x2c],0x4c
  444eb9:	in     al,0x19
  444ebb:	sar    DWORD PTR [esi+0x28],cl
  444ebe:	aaa    
  444ebf:	jno    0x444ec0
  444ec1:	push   ebp
  444ec2:	stos   BYTE PTR es:[edi],al
  444ec3:	jne    0x444eab
  444ec5:	jb     0x444e94
  444ec7:	mov    ?,WORD PTR [esi+0xc]
  444eca:	inc    ebp
  444ecb:	test   BYTE PTR [esi],bl
  444ecd:	clc    
  444ece:	aam    0xac
  444ed0:	cld    
  444ed1:	pop    edi
  444ed2:	or     edi,DWORD PTR [edi]
  444ed4:	pop    ss
  444ed5:	inc    ebp
  444ed6:	adc    al,0x1
  444ed8:	ror    DWORD PTR [ebx],cl
  444eda:	div    DWORD PTR [ebx+0x47]
  444edd:	popa   
  444ede:	and    bl,al
  444ee0:	xor    eax,0xbecf9e9
  444ee5:	jo     0x444f07
  444ee7:	lods   eax,DWORD PTR ds:[esi]
  444ee8:	push   0xabb96d90
  444eed:	pushf  
  444eee:	add    eax,0x26b85a0b
  444ef3:	or     edi,ecx
  444ef5:	jne    0x444f10
  444ef7:	ret    
  444ef8:	test   BYTE PTR [esi],dl
  444efa:	xor    eax,0xf2e8d8bf
  444eff:	cmp    esi,eax
  444f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444f02:	mov    dl,BYTE PTR [edx-0x6d9e7393]
  444f08:	cli    
  444f09:	je     0x444f28
  444f0b:	inc    esi
  444f0c:	(bad)  
  444f0d:	jns    0x444f51
  444f0f:	or     BYTE PTR [eax+0x16581cd7],dl
  444f15:	rcr    DWORD PTR [esi],0xcd
  444f18:	adc    al,0xf7
  444f1a:	leave  
  444f1b:	iret   
  444f1c:	int    0x1d
  444f1e:	js     0x444f5b
  444f20:	fcomp  DWORD PTR [ecx+0x5f]
  444f23:	pop    ebx
  444f24:	cmp    DWORD PTR [edx],0x7
  444f27:	addr16 jae 0x444fa7
  444f2a:	rcr    bh,1
  444f2c:	in     al,dx
  444f2d:	push   0xc112c84
  444f32:	push   esi
  444f33:	mov    edi,0xebe374ca
  444f38:	mov    esp,0xb89d8e4e
  444f3d:	mov    dl,0x13
  444f3f:	jb     0x444ef6
  444f41:	push   edi
  444f42:	aam    0x51
  444f44:	popa   
  444f45:	into   
  444f46:	mov    ecx,fs
  444f48:	push   cs
  444f49:	push   esi
  444f4a:	out    0x94,eax
  444f4c:	mov    edi,0xcec1cb36
  444f51:	cli    
  444f52:	enter  0x1cf3,0xce
  444f56:	sub    edi,esp
  444f58:	xchg   esp,eax
  444f59:	stc    
  444f5a:	mov    cl,0x80
  444f5c:	out    dx,al
  444f5d:	add    al,0xc
  444f5f:	addr16 jns 0x444fa2
  444f62:	icebp  
  444f63:	adc    DWORD PTR cs:[esi+0x54],edx
  444f67:	gs xchg edx,eax
  444f69:	mov    cl,0xd4
  444f6b:	add    eax,0x31a095ac
  444f70:	mov    BYTE PTR [esi+0x60],0xf9
  444f74:	dec    eax
  444f75:	cwde   
  444f76:	mov    dl,0x12
  444f78:	sahf   
  444f79:	mov    ebp,0xc6f0811
  444f7e:	outs   dx,DWORD PTR ds:[esi]
  444f7f:	xor    DWORD PTR [edx+eax*4-0x7c],ebp
  444f83:	(bad)  
  444f86:	das    
  444f87:	nop
  444f88:	inc    ebx
  444f89:	jg     0x444f82
  444f8b:	repz push cs
  444f8d:	mov    al,0xfc
  444f8f:	and    esi,DWORD PTR [ecx+0x48aa0038]
  444f95:	or     esp,DWORD PTR [edx-0x4b]
  444f98:	xor    eax,eax
  444f9a:	push   ebx
  444f9b:	jle    0x445001
  444f9d:	pop    edi
  444f9e:	or     al,0x3b
  444fa0:	cmp    bh,al
  444fa2:	stos   BYTE PTR es:[edi],al
  444fa3:	push   edi
  444fa4:	fucomi st,st(5)
  444fa6:	xchg   edi,eax
  444fa8:	bound  ebp,QWORD PTR [ebx+0x3259bfd3]
  444fae:	shl    ebp,0xaa
  444fb1:	fbld   TBYTE PTR [ecx+0x1a]
  444fb4:	popf   
  444fb5:	or     eax,DWORD PTR [esi+0x11]
  444fb8:	hlt    
  444fb9:	cmp    DWORD PTR [edi],edx
  444fbb:	stos   DWORD PTR es:[edi],eax
  444fbc:	push   cs
  444fbd:	out    dx,al
  444fbe:	es push ebp
  444fc0:	push   edx
  444fc1:	xchg   ecx,eax
  444fc2:	and    eax,0x50f8be35
  444fc7:	mov    esi,0x17942799
  444fcc:	repz sub eax,0xff451a3c
  444fd2:	scas   eax,DWORD PTR es:[edi]
  444fd3:	push   eax
  444fd4:	dec    edx
  444fd5:	clc    
  444fd6:	xor    ah,BYTE PTR [edi+esi*2+0x54]
  444fda:	push   edi
  444fdb:	out    dx,eax
  444fdc:	push   ecx
  444fdd:	fs out dx,eax
  444fdf:	cld    
  444fe0:	pop    edx
  444fe1:	pop    esi
  444fe2:	hlt    
  444fe3:	cld    
  444fe4:	imul   BYTE PTR [esi]
  444fe6:	test   eax,0x22790bc
  444feb:	cdq    
  444fec:	or     al,0x8d
  444fee:	neg    BYTE PTR [eax]
  444ff0:	dec    eax
  444ff1:	ja     0x444fc1
  444ff3:	pop    ss
  444ff4:	or     DWORD PTR [esi],ebx
  444ff6:	xchg   ecx,eax
  444ff7:	nop
  444ff8:	loope  0x445076
  444ffa:	ret    0x3430
  444ffd:	ins    BYTE PTR es:[edi],dx
  444ffe:	sub    ah,BYTE PTR [eax-0x22b0c1b6]
  445004:	call   0x11289b57
  445009:	shr    DWORD PTR [ebp-0x55],cl
  44500c:	into   
  44500d:	jle    0x44508c
  44500f:	or     al,BYTE PTR gs:[edi-0x6ccffcd0]
  445016:	test   DWORD PTR [edx-0x4397a25c],esi
  44501c:	jne    0x44507c
  44501e:	pop    esp
  44501f:	aas    
  445020:	add    BYTE PTR [ebx+eax*1+0x604bd569],bh
  445027:	es jmp 0x44502e
  44502a:	xchg   ecx,eax
  44502b:	jo     0x445040
  44502d:	repnz sub al,0x67
  445030:	fnstsw WORD PTR [ecx]
  445032:	mov    ebp,0x35a6460e
  445037:	psrad  mm0,QWORD PTR ds:0xe27c1891
  44503e:	(bad)  
  44503f:	sub    eax,0xe2f91c8d
  445044:	jbe    0x4450c3
  445046:	fldenv [ebp-0x746a819b]
  44504c:	fst    st(6)
  44504e:	pushf  
  44504f:	mov    fs,WORD PTR [ebx+ecx*4+0x36496742]
  445056:	repz add cl,BYTE PTR [esi-0x1d]
  44505a:	ins    BYTE PTR es:[edi],dx
  44505b:	dec    edi
  44505c:	jmp    0x445063
  44505e:	enter  0x65d,0x73
  445062:	push   0x4a
  445064:	mov    ds:0xd346ccad,al
  445069:	lods   eax,DWORD PTR ds:[esi]
  44506a:	jae    0x445075
  44506c:	retf   
  44506d:	test   al,0xac
  44506f:	popf   
  445070:	add    DWORD PTR [esi+0x4419f8d5],ebx
  445076:	dec    esp
  445077:	bound  ebp,QWORD PTR [ebx-0x9cd36a8]
  44507d:	push   ecx
  44507e:	push   ds
  44507f:	jbe    0x44500b
  445081:	scas   al,BYTE PTR es:[edi]
  445082:	mov    ebx,0x70a34902
  445087:	(bad)  
  445088:	call   0xb193:0x61663ead
  44508f:	jecxz  0x44507c
  445091:	hlt    
  445092:	xchg   esi,eax
  445093:	test   DWORD PTR [ebx+0x506ecfee],edi
  445099:	pop    edi
  44509a:	or     eax,0x963ab861
  44509f:	sub    BYTE PTR [edi],ah
  4450a1:	mov    ds:0x1d9885c4,eax
  4450a6:	iret   
  4450a7:	mov    esp,0xc077af81
  4450ac:	dec    ecx
  4450ad:	inc    ecx
  4450ae:	mov    BYTE PTR [edi],dh
  4450b0:	sbb    edx,eax
  4450b2:	or     ah,BYTE PTR [esi-0x73fad0d9]
  4450b8:	stos   BYTE PTR es:[edi],al
  4450b9:	pop    ss
  4450ba:	mov    ecx,0x18aab276
  4450bf:	in     eax,0xa9
  4450c1:	inc    ebx
  4450c2:	push   0xd88b8b11
  4450c7:	fidivr WORD PTR [ecx]
  4450c9:	pop    eax
  4450ca:	xchg   esp,eax
  4450cb:	push   es
  4450cc:	gs adc eax,0xfe3f4072
  4450d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4450d3:	cmc    
  4450d4:	mov    bh,0x8c
  4450d6:	out    dx,al
  4450d7:	lea    eax,[edi]
  4450d9:	mov    bl,0x94
  4450db:	ficom  WORD PTR ds:0xb2e7d684
  4450e1:	xchg   BYTE PTR [eax+0x59],ah
  4450e4:	cmp    eax,0x3481d30d
  4450e9:	repz dec edx
  4450eb:	jo     0x4450f8
  4450ed:	jecxz  0x4450fd
  4450ef:	sub    al,0x64
  4450f1:	in     eax,0x3f
  4450f3:	xchg   ebx,eax
  4450f4:	daa    
  4450f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4450f6:	add    BYTE PTR [ecx+0x4],dl
  4450f9:	lods   eax,DWORD PTR ds:[si]
  4450fb:	int    0x86
  4450fd:	push   esp
  4450fe:	jae    0x44511d
  445100:	es repnz popf 
  445103:	pop    edi
  445104:	mov    cl,0x37
  445106:	hlt    
  445107:	pop    eax
  445108:	(bad)  
  445109:	dec    edx
  44510a:	test   al,0x64
  44510c:	mov    WORD PTR ds:0xddbe286a,fs
  445112:	mov    BYTE PTR gs:[edx-0x1eec74fa],bh
  445119:	sti    
  44511a:	mov    bl,BYTE PTR [edx-0x77]
  44511d:	mov    edi,0xf38228a5
  445122:	gs adc esi,edi
  445125:	sub    al,BYTE PTR [esi]
  445127:	mov    ebp,0x5588af60
  44512c:	and    edx,ebp
  44512e:	int    0x72
  445130:	aam    0x40
  445132:	shl    BYTE PTR ds:0x56d26e6,cl
  445138:	int3   
  445139:	cmp    al,0x65
  44513b:	mov    edi,0x17e7d84e
  445140:	dec    ebx
  445141:	xchg   edx,eax
  445142:	adc    eax,0xe4d31f7b
  445147:	call   0xafc0:0x4a8fd595
  44514e:	pop    ebp
  44514f:	or     ecx,DWORD PTR [edi]
  445151:	repz repnz dec ebp
  445154:	sahf   
  445155:	sub    BYTE PTR ds:0xc2ae106e,0x7a
  44515c:	icebp  
  44515d:	js     0x44513b
  44515f:	es pop ss
  445161:	pop    ecx
  445162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445163:	in     eax,dx
  445164:	jge    0x445150
  445166:	xchg   DWORD PTR [edx],eax
  445168:	sub    al,0x1f
  44516a:	out    0xfb,al
  44516c:	sub    BYTE PTR [edx-0x6f890b84],cl
  445172:	jno    0x445157
  445174:	iret   
  445175:	add    al,0xcb
  445177:	mov    edi,0x92ce15b6
  44517c:	ins    DWORD PTR es:[edi],dx
  44517d:	or     DWORD PTR [esi-0xc],edi
  445180:	dec    edi
  445181:	cmp    al,0x49
  445183:	pop    eax
  445184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445185:	xor    eax,0x4fe20bd6
  44518a:	test   DWORD PTR [edx-0x3529372c],0xad333bc2
  445194:	ins    DWORD PTR es:[edi],dx
  445195:	xchg   edx,eax
  445196:	mov    cl,bh
  445198:	mov    ?,WORD PTR [eax+eax*4+0x6564f5f4]
  44519f:	call   0x3d17:0x915ae9e7
  4451a6:	xor    dh,BYTE PTR [edx]
  4451a8:	bound  ecx,QWORD PTR [eax+0x3e]
  4451ab:	imul   ebp,DWORD PTR [bx+di+0x8],0xffffffcd
  4451b0:	jp     0x4451ff
  4451b2:	mov    ?,WORD PTR [eax+0x18]
  4451b5:	adc    dh,BYTE PTR [esp+edx*1]
  4451b8:	add    al,0xbc
  4451ba:	push   esi
  4451bb:	js     0x445182
  4451bd:	(bad)  
  4451be:	loopne 0x445238
  4451c0:	adc    eax,0x96ab84c
  4451c5:	adc    eax,0x1be2b578
  4451ca:	xchg   esp,eax
  4451cb:	out    dx,eax
  4451cc:	and    ebp,DWORD PTR [eax+0x31da00f3]
  4451d2:	or     al,0x46
  4451d4:	xor    DWORD PTR ds:0xd79d1c45,0x668d9409
  4451de:	xor    dh,dl
  4451e0:	icebp  
  4451e1:	ret    
  4451e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4451e3:	add    al,BYTE PTR [esi+0x11]
  4451e6:	dec    ebp
  4451e7:	xor    BYTE PTR [ebx],dh
  4451e9:	pop    ecx
  4451ea:	or     ebx,DWORD PTR [edx+0x58c059c6]
  4451f0:	jb     0x4451d8
  4451f2:	shl    BYTE PTR [esi+eiz*8],1
  4451f5:	loope  0x44522c
  4451f7:	inc    edi
  4451f8:	push   cs
  4451f9:	cmp    BYTE PTR [edi-0x6474fee7],0xac
  445200:	rol    BYTE PTR [bx-0x4b],0xf2
  445205:	in     eax,0x24
  445207:	add    bh,al
  445209:	and    DWORD PTR [edi+0x4a1360e8],ebx
  44520f:	lods   eax,DWORD PTR ds:[esi]
  445210:	mov    WORD PTR [edi-0x610ecfa],cs
  445216:	int3   
  445217:	adc    eax,0xeb7bbe62
  44521c:	ret    0x4664
  44521f:	mov    cl,0x70
  445221:	bound  edx,QWORD PTR [eax-0x4effd880]
  445227:	mov    bh,0xe6
  445229:	in     al,0xe0
  44522b:	mov    eax,ds:0xe0553ab4
  445230:	pop    esi
  445231:	les    esp,FWORD PTR [ebp+0x739d889b]
  445237:	jno    0x4451c8
  445239:	scas   al,BYTE PTR es:[edi]
  44523a:	fcomp  QWORD PTR [esi+0x167227f8]
  445240:	pop    edx
  445241:	rol    DWORD PTR [eax+eiz*8],cl
  445244:	fstp   TBYTE PTR [ebx]
  445246:	out    0x23,al
  445248:	imul   esp,DWORD PTR [edx],0xffffff95
  44524b:	mov    ds:0x7637182c,eax
  445250:	ss dec ebp
  445252:	mov    eax,0xd26f28e
  445257:	push   0x1e
  445259:	sub    BYTE PTR [esi],bh
  44525b:	xor    bh,BYTE PTR [ebp-0x49]
  44525e:	and    BYTE PTR [edx-0x22],0x7a
  445262:	xchg   ebx,eax
  445263:	dec    ebp
  445264:	jns    0x4452c3
  445266:	jecxz  0x4452e5
  445268:	push   edi
  445269:	mov    DWORD PTR [eax-0x397fdff9],edx
  44526f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445270:	jecxz  0x4452dc
  445272:	(bad)  
  445273:	imul   eax,DWORD PTR [eax-0x50f9fb9e],0x914cd817
  44527d:	leave  
  44527e:	or     al,0x19
  445281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445282:	hlt    
  445283:	mov    al,ds:0x90679da8
  445288:	fcmovne st,st(6)
  44528a:	xchg   esi,eax
  44528b:	inc    edi
  44528c:	add    ecx,DWORD PTR [eax+0x6ee0dba6]
  445292:	mov    esp,0xbff8b244
  445297:	jmp    0x5d2d991
  44529c:	add    ebp,DWORD PTR [esp+ebx*8-0x77]
  4452a0:	out    dx,eax
  4452a1:	xchg   ecx,eax
  4452a2:	pop    ebx
  4452a3:	cdq    
  4452a4:	sbb    BYTE PTR [edi+0x6d9c0d2],ah
  4452aa:	pop    ds
  4452ab:	gs cld 
  4452ad:	fsub   DWORD PTR [ebx+0xebe2d01]
  4452b3:	pop    ebp
  4452b4:	adc    esi,DWORD PTR [ebp+0x2b376bca]
  4452ba:	lods   eax,DWORD PTR ds:[esi]
  4452bb:	in     eax,dx
  4452bc:	jo     0x445286
  4452be:	add    eax,0x58f58298
  4452c3:	and    DWORD PTR [ecx],ebx
  4452c5:	jecxz  0x445303
  4452c7:	push   ebp
  4452c8:	xor    al,0x69
  4452ca:	lods   eax,DWORD PTR ds:[esi]
  4452cb:	add    eax,0x66ec1a5d
  4452d0:	fbld   TBYTE PTR [ecx+ebx*8]
  4452d3:	inc    edi
  4452d4:	xchg   DWORD PTR [ebx+eiz*8-0x1ba08ccd],esp
  4452db:	push   ss
  4452dc:	mov    ah,0xd
  4452de:	std    
  4452df:	jno    0x4452f3
  4452e1:	mov    DWORD PTR [ebx+0x42e0f3b],esi
  4452e7:	add    eax,0xe12cfeee
  4452ec:	mov    edx,0x7af715e9
  4452f1:	xor    dh,al
  4452f3:	and    esi,ebx
  4452f5:	mov    bh,0x90
  4452f7:	loopne 0x4452e8
  4452f9:	in     al,dx
  4452fa:	add    esp,eax
  4452fc:	and    BYTE PTR [eax+esi*8+0x67d43278],bl
  445303:	and    esp,DWORD PTR [edx-0x3d]
  445306:	outs   dx,BYTE PTR gs:[esi]
  445308:	pushf  
  445309:	les    ecx,FWORD PTR [ebp+0x1fe5b9dc]
  44530f:	shl    BYTE PTR [ebp-0x4d],1
  445312:	pop    ss
  445313:	fstp   TBYTE PTR [ecx-0x39ffef83]
  445319:	and    al,0x10
  44531b:	mov    cs,edx
  44531d:	xchg   edi,eax
  44531e:	push   es
  44531f:	iret   
  445320:	ins    BYTE PTR es:[edi],dx
  445321:	fnstsw WORD PTR [ebx+0x8434dc]
  445327:	mov    ebx,DWORD PTR [ebx]
  445329:	xchg   DWORD PTR [edi+0x417dcb5],eax
  44532f:	inc    ebp
  445330:	adc    dh,BYTE PTR [ecx]
  445332:	jo     0x4452c7
  445334:	add    cl,BYTE PTR [ebp-0x27]
  445337:	dec    eax
  445338:	xchg   ebx,eax
  445339:	fisubr WORD PTR [eax-0x47]
  44533c:	dec    ecx
  44533d:	xor    eax,0x51e33329
  445342:	fcomp  DWORD PTR [edx+0x5f85aca5]
  445348:	sub    DWORD PTR [edi-0xe],0x14
  44534c:	push   es
  44534d:	sub    bh,BYTE PTR [eax+esi*4-0x52cdb8fa]
  445354:	sub    BYTE PTR [esi+edi*1-0x721f089d],cl
  44535b:	push   esi
  44535c:	push   0x1deb5a81
  445361:	repnz inc esp
  445363:	in     eax,dx
  445364:	cdq    
  445365:	cmp    edx,eax
  445367:	jg     0x4452ed
  445369:	adc    ebp,DWORD PTR [ecx+0x65]
  44536c:	test   DWORD PTR [esi+0x1efa5c4],edi
  445372:	xchg   esp,eax
  445373:	pop    ecx
  445374:	std    
  445375:	jb     0x4453e3
  445377:	sbb    eax,0x2c804785
  44537c:	sbb    dh,BYTE PTR [ecx+0x73]
  44537f:	xor    DWORD PTR [ebx],ebx
  445381:	lods   eax,DWORD PTR ds:[esi]
  445382:	mov    bl,0x8e
  445384:	adc    eax,0x3c8400d2
  445389:	push   0xffffffc6
  44538b:	xor    BYTE PTR [edx],al
  44538d:	inc    edx
  44538e:	(bad)  
  44538f:	xor    eax,0x98521821
  445394:	bound  esi,QWORD PTR [esp+eiz*2-0x46]
  445398:	and    eax,0x39eaa2b2
  44539d:	push   ebp
  44539e:	push   eax
  44539f:	mov    ebp,0x46062e24
  4453a4:	cmc    
  4453a5:	retf   
  4453a6:	adc    esi,DWORD PTR [edi]
  4453a8:	sub    eax,0x54c78a7d
  4453ad:	adc    al,0xb2
  4453af:	jns    0x4453a8
  4453b1:	fsubr  DWORD PTR [eax+edx*4+0x8fef50d]
  4453b8:	pusha  
  4453b9:	mov    cl,0x2c
  4453bb:	xchg   edx,eax
  4453bc:	jle    0x445347
  4453be:	call   0x115d:0xbbd514ec
  4453c5:	test   DWORD PTR [edi+0x77023668],eax
  4453cb:	push   es
  4453cc:	ror    BYTE PTR [edx],0xe
  4453cf:	cmp    BYTE PTR [ebx-0x29],0x5d
  4453d3:	xchg   esi,eax
  4453d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4453d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4453d6:	call   0xa813:0x10b8a3b6
  4453dd:	jne    0x4453e2
  4453df:	sbb    eax,0x543c8f21
  4453e4:	jae    0x44544e
  4453e6:	xchg   ebp,eax
  4453e7:	fstp   TBYTE PTR [ecx]
  4453e9:	loope  0x4453f2
  4453eb:	adc    al,BYTE PTR ds:0xc3411143
  4453f1:	jbe    0x4453ff
  4453f3:	mov    ebp,0x58eb796a
  4453f8:	shl    DWORD PTR [eax-0x40],cl
  4453fb:	int3   
  4453fc:	inc    edx
  4453fd:	sbb    al,0x9c
  4453ff:	adc    al,0xbe
  445401:	loope  0x445471
  445403:	xchg   DWORD PTR [eax],esi
  445405:	cmp    DWORD PTR [ebx],0xd4fe0f89
  44540b:	sti    
  44540c:	cmp    BYTE PTR fs:[eax-0x377e47fa],0x39
  445414:	jp     0x445408
  445416:	inc    ebp
  445417:	dec    esp
  445418:	cmp    eax,0xf1e7b6dd
  44541d:	and    eax,0xbea8ac14
  445422:	fidiv  DWORD PTR [eax-0x35]
  445425:	mov    bl,0xd4
  445427:	xchg   edx,eax
  445428:	sbb    BYTE PTR [edx+eiz*8],dl
  44542b:	jecxz  0x445485
  44542d:	iret   
  44542e:	bound  esi,QWORD PTR [ecx]
  445430:	adc    DWORD PTR ds:0x14a1a717,0xffffffe3
  445437:	inc    ecx
  445438:	imul   ebp,DWORD PTR [edx+0x11],0x34
  44543c:	fdivrp st(2),st
  44543e:	sbb    eax,0x78c32d10
  445443:	ins    DWORD PTR es:[edi],dx
  445444:	gs cld 
  445446:	pusha  
  445447:	enter  0xf990,0xdb
  44544b:	test   BYTE PTR [ebp+0x1cdfb663],al
  445451:	jmp    0x4454a5
  445453:	in     al,0xee
  445455:	pop    ds
  445456:	add    al,0xef
  445458:	(bad)  
  445459:	cmp    eax,0x51596629
  44545e:	dec    edi
  44545f:	add    DWORD PTR ds:0x46aa009,esi
  445465:	adc    DWORD PTR [eax-0x5e76b6ba],eax
  44546b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44546c:	repz and al,0x91
  44546f:	int    0x78
  445471:	jb     0x445485
  445473:	and    ecx,DWORD PTR [edx-0x339a8e0a]
  445479:	test   eax,0x6ffd4ae8
  44547e:	mov    esp,0x6b00b381
  445483:	sub    bh,BYTE PTR [ecx-0x1]
  445486:	fs retf 0xe8bf
  44548a:	icebp  
  44548b:	pop    eax
  44548c:	cmp    eax,0x2c281f7c
  445491:	ds or  bh,0xfe
  445495:	loop   0x445467
  445497:	push   esp
  445498:	into   
  445499:	pop    edi
  44549a:	pusha  
  44549b:	gs xchg ebp,eax
  44549d:	and    BYTE PTR [ebp-0x6089c888],dl
  4454a3:	push   edi
  4454a4:	les    eax,FWORD PTR [edi]
  4454a6:	cli    
  4454a7:	out    0xd6,al
  4454a9:	cmp    DWORD PTR [edx+0x3c],0x9
  4454ad:	inc    ebx
  4454ae:	out    dx,eax
  4454af:	ins    DWORD PTR es:[edi],dx
  4454b0:	(bad)  
  4454b1:	dec    ebx
  4454b2:	addr16 sub dh,bl
  4454b5:	pushf  
  4454b6:	or     al,0x37
  4454b8:	out    0xea,eax
  4454ba:	(bad)  
  4454bb:	not    BYTE PTR [ebx+esi*4]
  4454be:	hlt    
  4454bf:	push   eax
  4454c0:	sbb    al,0x9a
  4454c2:	sub    eax,0xdf2899c1
  4454c7:	xor    al,0x9f
  4454c9:	shr    ebp,1
  4454cb:	sub    cl,BYTE PTR [ecx]
  4454cd:	xchg   esi,eax
  4454ce:	sub    eax,0xfc1d7ac5
  4454d3:	test   eax,0x2e77b36
  4454d8:	clc    
  4454d9:	ja     0x44546d
  4454db:	add    BYTE PTR ds:0xd0139276,ch
  4454e1:	jb     0x4454f3
  4454e3:	fld    DWORD PTR [edi+eax*1-0x54]
  4454e7:	fistp  WORD PTR [ebx-0x66]
  4454ea:	push   edx
  4454eb:	lock and dh,BYTE PTR [ebx+0x1a83db00]
  4454f2:	dec    ebp
  4454f3:	mov    bl,0x28
  4454f5:	mov    ebp,0x95d80607
  4454fa:	xchg   esp,eax
  4454fb:	inc    esp
  4454fc:	sbb    bl,BYTE PTR [ecx]
  4454fe:	jb     0x4454fa
  445500:	xor    BYTE PTR [ebx],bh
  445502:	adc    al,BYTE PTR [edi+0x22]
  445505:	sub    eax,0x3b218b80
  44550a:	or     DWORD PTR [ebx+0x7b],esp
  44550d:	imul   esi,DWORD PTR [edi-0x51],0x3d
  445511:	mov    ebx,esi
  445513:	ins    BYTE PTR es:[edi],dx
  445514:	sar    DWORD PTR [edi],cl
  445516:	push   0xf58a4d7f
  44551b:	ja     0x4454df
  44551d:	or     BYTE PTR [ebx-0x19028505],bl
  445523:	mov    dl,0x93
  445525:	(bad)  
  445526:	xor    BYTE PTR [ecx-0x1c281ea3],cl
  44552c:	lods   al,BYTE PTR ds:[esi]
  44552d:	cmp    al,0xec
  44552f:	(bad)  [ecx-0x4f]
  445532:	jbe    0x44555e
  445534:	stos   DWORD PTR es:[edi],eax
  445535:	rcl    DWORD PTR [edx+ebx*2-0x47],cl
  445539:	cs call 0xed48:0x6294d79e
  445541:	sbb    DWORD PTR [ecx+0x37ec343d],eax
  445547:	or     esp,esp
  445549:	test   eax,0x2e5dc923
  44554e:	push   0xffffffc4
  445550:	(bad)  
  445551:	(bad)  
  445552:	std    
  445553:	mov    bl,ch
  445555:	or     al,0x8a
  445557:	dec    eax
  445558:	and    al,0xe2
  44555a:	mov    dl,0xe8
  44555c:	mov    BYTE PTR ds:0x74570635,al
  445562:	add    ch,bh
  445564:	pop    ss
  445565:	push   eax
  445566:	mov    bl,0x1a
  445568:	add    BYTE PTR [ebx+ebp*8],0x8a
  44556c:	std    
  44556d:	sub    al,0x5b
  44556f:	fisttp WORD PTR [eax]
  445571:	or     DWORD PTR [eax-0x37c7e913],ebx
  445577:	jbe    0x44559f
  445579:	lods   al,BYTE PTR ds:[esi]
  44557a:	das    
  44557b:	(bad)  
  44557c:	lea    edx,[edx-0x7abb9c45]
  445582:	push   edx
  445583:	cld    
  445584:	sub    eax,0x63b79fb6
  445589:	outs   dx,BYTE PTR ds:[esi]
  44558a:	and    bh,dl
  44558c:	stos   DWORD PTR es:[edi],eax
  44558d:	or     eax,0xe7b6e55e
  445592:	push   ds
  445593:	cmp    al,0xfc
  445595:	rcr    DWORD PTR gs:0xa4697422,0x74
  44559d:	inc    ebx
  44559e:	int    0x59
  4455a0:	push   ss
  4455a1:	in     al,0x28
  4455a3:	daa    
  4455a4:	ds (bad) 
  4455a6:	dec    ebp
  4455a7:	fstp   QWORD PTR [ebx+0x70047c33]
  4455ad:	mov    bl,0x78
  4455af:	icebp  
  4455b0:	retf   
  4455b1:	inc    edi
  4455b2:	cmp    DWORD PTR [edx],eax
  4455b4:	fstp   TBYTE PTR ds:0xa4c4fe33
  4455ba:	mov    WORD PTR [edx],ss
  4455bc:	jle    0x445618
  4455be:	ins    BYTE PTR es:[edi],dx
  4455bf:	or     DWORD PTR [ecx],0x29
  4455c2:	jnp    0x445569
  4455c4:	and    BYTE PTR [esi],dl
  4455c6:	or     BYTE PTR [ebx],bl
  4455c8:	cmp    eax,0xd25995ad
  4455cd:	and    al,0xd4
  4455cf:	call   0x1902:0x3299bfd9
  4455d6:	xor    BYTE PTR [esi+0x3c],ah
  4455d9:	jp     0x445627
  4455db:	cmp    DWORD PTR [ebp+ebx*4-0x1],ebp
  4455df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4455e0:	sub    BYTE PTR [ebp-0x283e9c5d],ah
  4455e6:	xchg   edx,eax
  4455e7:	cmp    BYTE PTR [eax+0x255ddb3e],ch
  4455ed:	je     0x445590
  4455ef:	and    BYTE PTR [ecx+0x78],ah
  4455f2:	dec    ebp
  4455f3:	cmc    
  4455f4:	pop    ebp
  4455f5:	fdiv   st(1),st
  4455f7:	imul   edi,DWORD PTR [ebx-0x23],0xfffffff2
  4455fb:	sbb    DWORD PTR [ebp+0x7e],ebx
  4455fe:	rol    edx,cl
  445600:	stos   DWORD PTR es:[edi],eax
  445601:	or     BYTE PTR [edi-0x30],bh
  445604:	cmp    edx,DWORD PTR [esi+ecx*8]
  445607:	adc    bh,ch
  445609:	sbb    ecx,0x38
  44560c:	add    DWORD PTR [edx+0x3b],ebp
  44560f:	dec    edx
  445610:	inc    eax
  445611:	ret    0x5428
  445614:	imul   ebp,DWORD PTR [ebp+esi*2-0x40],0xf6fdb301
  44561c:	sbb    DWORD PTR [edi],ecx
  44561e:	outs   dx,BYTE PTR ds:[esi]
  44561f:	dec    esp
  445620:	lea    esi,[ecx+0x63]
  445623:	rol    bl,cl
  445625:	adc    dh,BYTE PTR [ecx+0x71]
  445628:	jl     0x445693
  44562a:	pop    es
  44562b:	(bad)  
  44562c:	repnz mov esi,0x70e7e51
  445632:	xchg   ebp,eax
  445633:	sub    eax,0xb5327eb9
  445638:	pop    ss
  445639:	call   0xfa9e:0x12d7cd88
  445640:	imul   esp,DWORD PTR [eax],0xffffffd5
  445643:	pop    ebp
  445644:	mov    eax,0x646e27be
  445649:	xchg   edi,eax
  44564a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44564b:	push   ebx
  44564c:	cmc    
  44564d:	xchg   bh,cl
  44564f:	(bad)  
  445650:	cmp    ecx,DWORD PTR [ebx+ebp*4-0x79]
  445654:	out    dx,eax
  445655:	inc    esp
  445656:	mov    ebp,0x1c308180
  44565b:	lods   al,BYTE PTR ds:[esi]
  44565c:	fbld   TBYTE PTR [eax-0x76859c38]
  445662:	or     BYTE PTR [edx-0x75],al
  445665:	add    ah,0xc5
  445668:	es in  al,0x78
  44566b:	shl    esp,1
  44566d:	mov    ebx,0xe09084d7
  445672:	add    cl,dl
  445674:	cmp    edx,DWORD PTR [eax+0x3db51a4a]
  44567a:	es pop ss
  44567c:	mov    ecx,0x17f376f3
  445681:	inc    eax
  445682:	xor    al,0x30
  445684:	in     al,0x72
  445686:	imul   BYTE PTR [edi]
  445688:	push   ebp
  445689:	in     al,0x3f
  44568b:	lods   eax,DWORD PTR ds:[esi]
  44568c:	xor    ecx,edi
  44568e:	xor    ch,BYTE PTR [ecx-0x7]
  445691:	add    al,BYTE PTR [eax+edx*4+0x1f44bf04]
  445698:	je     0x44570b
  44569a:	popf   
  44569b:	xchg   ebx,eax
  44569c:	fist   DWORD PTR [eax]
  44569e:	mov    eax,ds:0x7c515b19
  4456a3:	mov    ds:0x8b653ea6,eax
  4456a8:	push   edi
  4456a9:	lahf   
  4456aa:	mov    edi,0x4b89b4b9
  4456af:	jns    0x4456e7
  4456b1:	mov    WORD PTR [ebp-0x3fd536f9],fs
  4456b7:	mov    eax,ds:0x5874db5b
  4456bc:	lock cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4456bf:	fwait
  4456c0:	icebp  
  4456c1:	(bad)  
  4456c2:	jmp    0x35f4dfc6
  4456c7:	xor    al,0xd1
  4456c9:	push   ebx
  4456ca:	xlat   BYTE PTR ds:[ebx]
  4456cb:	inc    ecx
  4456cc:	bound  ebp,QWORD PTR [edx]
  4456ce:	jg     0x4456f1
  4456d0:	xor    eax,0x2ec80f8c
  4456d5:	out    0xd7,eax
  4456d7:	push   edx
  4456d8:	ss dec ebp
  4456da:	add    bh,BYTE PTR [ebx-0xc]
  4456dd:	ins    BYTE PTR es:[edi],dx
  4456de:	ret    0x2afe
  4456e1:	dec    ecx
  4456e2:	cmp    bh,cl
  4456e4:	scas   al,BYTE PTR es:[edi]
  4456e5:	arpl   WORD PTR [ebx+0x202e575],di
  4456eb:	pop    es
  4456ec:	retf   
  4456ed:	(bad)  
  4456ee:	and    al,0x85
  4456f0:	fistp  DWORD PTR [edi+0x50]
  4456f3:	mov    esp,0x59caf0e1
  4456f8:	hlt    
  4456f9:	into   
  4456fa:	push   eax
  4456fb:	sub    DWORD PTR [ebx-0x7dd3b8b6],ebp
  445701:	enter  0xa700,0x6f
  445705:	push   edx
  445706:	das    
  445707:	stos   BYTE PTR es:[edi],al
  445708:	into   
  445709:	mov    ebp,0x3355a428
  44570e:	mov    cl,0xd9
  445710:	xor    DWORD PTR [edi],ebx
  445712:	lea    edx,[esi]
  445714:	stos   DWORD PTR es:[edi],eax
  445715:	and    al,0xa5
  445717:	push   ebx
  445718:	xchg   ebp,eax
  445719:	push   esi
  44571a:	inc    edi
  44571b:	mov    ch,0x7e
  44571d:	mov    ch,BYTE PTR [eax]
  44571f:	loop   0x4456ea
  445721:	xchg   edi,eax
  445722:	inc    esi
  445723:	add    DWORD PTR [esi+0x5ba30799],edi
  445729:	fcomip st,st(5)
  44572b:	(bad)  
  44572c:	ja     0x44570d
  44572e:	std    
  44572f:	adc    DWORD PTR [edx+eax*4-0xa32c6f0],eax
  445736:	inc    edx
  445737:	sahf   
  445738:	(bad)  
  445739:	cmp    bl,BYTE PTR [esi+0x65]
  44573c:	or     eax,DWORD PTR [ebp-0x552a0e55]
  445742:	push   edi
  445743:	popa   
  445744:	sti    
  445745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445746:	call   FWORD PTR [edx]
  445748:	inc    ebp
  445749:	xchg   esi,eax
  44574a:	inc    edx
  44574b:	add    esi,DWORD PTR [ebx+ebx*4+0x5c42a5d3]
  445752:	mov    ebx,DWORD PTR [edi-0x2bca3102]
  445758:	(bad)  
  445759:	(bad)  
  44575a:	xor    eax,0xb02a0e21
  44575f:	add    al,0x99
  445761:	(bad)  
  445762:	imul   esp,DWORD PTR [ecx+0x36884cec],0x5c
  445769:	cmp    BYTE PTR [ecx],ah
  44576b:	out    dx,eax
  44576c:	mov    eax,ss
  44576e:	fsub   st(4),st
  445770:	mov    al,0x16
  445772:	call   0xf5cb80bf
  445777:	push   ebp
  445778:	sti    
  445779:	mov    bl,0x54
  44577b:	jno    0x445789
  44577d:	dec    ebp
  44577e:	mov    al,0xaa
  445780:	mov    esi,0x3689d4e1
  445785:	push   edx
  445786:	bound  ebp,QWORD PTR [esi+0x5b2b801]
  44578c:	sub    edi,eax
  44578e:	xchg   ebx,eax
  44578f:	sub    al,ch
  445791:	cs xor edx,esi
  445794:	mov    eax,0x6f37dc88
  445799:	retf   
  44579a:	xor    dh,BYTE PTR [ecx+ecx*1-0x21de6064]
  4457a1:	or     esi,DWORD PTR [esi+0x1c]
  4457a4:	fist   DWORD PTR [esi]
  4457a6:	lods   eax,DWORD PTR ds:[esi]
  4457a7:	inc    ebx
  4457a8:	or     DWORD PTR [esi+0x6e6bf27b],edx
  4457ae:	out    dx,eax
  4457af:	lahf   
  4457b0:	mov    dh,0x3c
  4457b2:	in     eax,dx
  4457b3:	jl     0x44579b
  4457b5:	inc    edx
  4457b6:	pop    edi
  4457b7:	adc    dl,BYTE PTR [ebx+0xc]
  4457ba:	jecxz  0x445837
  4457bc:	imul   eax,edx,0x10
  4457bf:	(bad)  [ebx+0x61]
  4457c2:	push   ss
  4457c3:	fdivr  QWORD PTR [eax-0x57]
  4457c6:	gs iret 
  4457c8:	or     esp,DWORD PTR [edi+0xb]
  4457cb:	xchg   ebx,eax
  4457cc:	test   al,0x58
  4457ce:	retf   0x9373
  4457d1:	repz out 0xb3,al
  4457d4:	out    dx,al
  4457d5:	xor    ch,BYTE PTR [ecx]
  4457d7:	adc    eax,0x90c990c4
  4457dc:	mov    esi,0x4d482944
  4457e1:	rcl    DWORD PTR [ebp-0x21],1
  4457e4:	lahf   
  4457e5:	pop    ebx
  4457e6:	adc    DWORD PTR [edx+eiz*2+0x16],esp
  4457ea:	sub    bl,BYTE PTR [ebp+0x58]
  4457ed:	lods   al,BYTE PTR ds:[esi]
  4457ee:	cmp    ebx,DWORD PTR [ebx-0x49331d14]
  4457f4:	leave  
  4457f5:	xor    ebx,DWORD PTR [ebx]
  4457f7:	cdq    
  4457f8:	aaa    
  4457f9:	sti    
  4457fa:	jmp    0xf85f9be3
  4457ff:	pop    eax
  445800:	loope  0x4457ba
  445802:	out    0xad,al
  445804:	jbe    0x445806
  445806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445807:	ja     0x4457d2
  445809:	or     BYTE PTR [esi],cl
  44580b:	scas   al,BYTE PTR es:[edi]
  44580c:	rcl    DWORD PTR [ebx+0x8],1
  44580f:	push   esp
  445810:	popa   
  445811:	mov    ebp,edi
  445813:	sbb    eax,0xe5fad77f
  445818:	int    0xa
  44581a:	sub    al,0x56
  44581c:	arpl   di,si
  44581e:	and    al,0xab
  445820:	push   cs
  445821:	stos   DWORD PTR es:[edi],eax
  445822:	sub    esp,DWORD PTR [ebp+0x54b60930]
  445828:	sbb    edx,DWORD PTR [eax]
  44582a:	(bad)  
  44582b:	fld    QWORD PTR [ecx-0x7bf68def]
  445831:	xor    eax,0x73f1d9d6
  445836:	lahf   
  445837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445838:	stc    
  445839:	fs push ecx
  44583b:	mov    esp,0xdbf1ea56
  445840:	mov    al,0x87
  445842:	(bad)  
  445843:	(bad)
  445846:	mov    dh,0xee
  445848:	push   0x23
  44584a:	sbb    dl,bh
  44584c:	(bad)  
  44584d:	fidiv  WORD PTR [esi]
  44584f:	push   esp
  445850:	jns    0x445862
  445852:	stos   DWORD PTR es:[edi],eax
  445853:	push   es
  445854:	mov    ebp,0x6cdef153
  445859:	add    al,0x2c
  44585b:	inc    esi
  44585c:	and    DWORD PTR ds:[esi],0x38ad4d6a
  445863:	je     0x445896
  445865:	and    dh,BYTE PTR [ebp+ebx*1+0x3d735e15]
  44586c:	or     DWORD PTR [eax-0x232a4fa4],ecx
  445872:	cmp    ecx,esp
  445874:	icebp  
  445875:	fwait
  445876:	xor    al,0xcb
  445878:	sbb    bl,BYTE PTR [ebp+0x10]
  44587b:	mov    ds:0x578ba8d3,eax
  445880:	aam    0x97
  445882:	adc    BYTE PTR [ebp+0x4b],0x29
  445886:	enter  0x31bd,0x22
  44588a:	cmp    eax,0xc5e49137
  44588f:	mov    cl,0xca
  445891:	das    
  445892:	pop    ebx
  445893:	push   DWORD PTR [ecx]
  445895:	fwait
  445896:	or     BYTE PTR [esi+ebx*1],ch
  445899:	repnz rcr DWORD PTR [ecx+0x53698f36],1
  4458a0:	mov    esi,0xaa703cec
  4458a5:	mov    bh,0x3a
  4458a7:	push   ebx
  4458a8:	xchg   ecx,eax
  4458a9:	adc    DWORD PTR [ecx+0x73ad5fe2],eax
  4458af:	mov    dh,0x43
  4458b1:	js     0x44592c
  4458b3:	inc    ecx
  4458b4:	cmc    
  4458b5:	lahf   
  4458b6:	cmp    DWORD PTR [eax],ebp
  4458b8:	(bad)  
  4458b9:	fild   QWORD PTR [ebx+0x891b051]
  4458bf:	lock imul ebx,DWORD PTR [esi],0x7124c00c
  4458c6:	aam    0x34
  4458c8:	mov    al,0x43
  4458ca:	mov    edi,0xf25de1d0
  4458cf:	in     eax,0x10
  4458d1:	scas   al,BYTE PTR es:[edi]
  4458d2:	mov    edi,0x7be51acc
  4458d7:	or     al,0x2a
  4458d9:	jbe    0x4458bd
  4458db:	(bad)  
  4458dc:	xor    eax,0x2657cf45
  4458e1:	fwait
  4458e2:	sbb    eax,0x3c1fc40c
  4458e7:	outs   dx,DWORD PTR ds:[esi]
  4458e8:	icebp  
  4458e9:	dec    edx
  4458ea:	jp     0x4458f0
  4458ec:	leave  
  4458ed:	dec    ebx
  4458ee:	pop    es
  4458ef:	sbb    edi,DWORD PTR [ebx+0x23e29205]
  4458f5:	xor    DWORD PTR [ebp+0x76417897],esi
  4458fb:	je     0x44587f
  4458fd:	and    al,al
  4458ff:	into   
  445900:	imul   ebx,ebp,0xffffffbe
  445903:	push   cs
  445904:	jle    0x44594d
  445906:	repz pop ebx
  445908:	sahf   
  445909:	cmp    eax,0x817781fb
  44590e:	je     0x44589b
  445910:	mov    dl,0x70
  445912:	dec    ebx
  445913:	mov    al,bl
  445915:	dec    edi
  445916:	test   BYTE PTR [esi-0x2a],ah
  445919:	xor    BYTE PTR ds:[eax+0x73],cl
  44591d:	sti    
  44591e:	mov    eax,0x7f919aa7
  445923:	inc    ebp
  445924:	lods   al,BYTE PTR ds:[esi]
  445925:	dec    sp
  445927:	icebp  
  445928:	xor    dl,BYTE PTR [edx+0xd6f23e0]
  44592e:	dec    ebx
  44592f:	jge    0x44594d
  445931:	mov    ebp,0x50e48bfb
  445936:	inc    eax
  445937:	shl    dl,1
  445939:	test   BYTE PTR ds:0x77bc7aae,bl
  44593f:	and    BYTE PTR [eax+ecx*1-0x575d452],dh
  445946:	in     al,0x6d
  445948:	add    DWORD PTR [ebx],ebx
  44594a:	test   eax,0x5097383f
  44594f:	and    dl,BYTE PTR [eax-0x1d]
  445952:	dec    eax
  445953:	std    
  445954:	int3   
  445955:	ret    
  445956:	sub    al,0x7d
  445958:	ins    DWORD PTR es:[edi],dx
  445959:	jo     0x445969
  44595b:	jae    0x44593e
  44595d:	adc    al,0xc8
  44595f:	or     bh,cl
  445961:	stos   DWORD PTR es:[edi],eax
  445962:	or     eax,0x255085f6
  445967:	add    dh,BYTE PTR [ecx]
  445969:	test   DWORD PTR [edi-0x3d598fa4],eax
  44596f:	out    0xed,al
  445971:	imul   ebx,esp,0xc05c5908
  445977:	pop    edx
  445978:	ins    DWORD PTR es:[edi],dx
  445979:	xchg   esi,eax
  44597a:	addr16 cli 
  44597c:	div    DWORD PTR [eax+0x6a]
  44597f:	sub    BYTE PTR [edi-0x74],0x17
  445983:	scas   al,BYTE PTR es:[edi]
  445984:	xlat   BYTE PTR ds:[ebx]
  445985:	mov    al,0xa4
  445987:	adc    al,0xe8
  445989:	xchg   ebp,eax
  44598a:	pop    ds
  44598b:	mov    cl,0x13
  44598d:	pusha  
  44598e:	push   ss
  44598f:	aam    0xde
  445991:	inc    ebx
  445992:	and    edi,DWORD PTR [edx+0x1f]
  445995:	add    BYTE PTR [esi-0x67],bh
  445998:	ins    DWORD PTR es:[edi],dx
  445999:	inc    esp
  44599a:	mov    al,ds:0x1b4a0c64
  44599f:	loope  0x445993
  4459a1:	lock dec esi
  4459a3:	sahf   
  4459a4:	dec    ebx
  4459a5:	rcr    ch,0xb5
  4459a8:	jo     0x4459b4
  4459aa:	sbb    DWORD PTR [edx],ebx
  4459ac:	enter  0x98d9,0x3e
  4459b0:	sub    BYTE PTR [edi-0x7f6c3c6c],dl
  4459b6:	inc    esi
  4459b7:	jle    0x445998
  4459b9:	(bad)  
  4459ba:	jae    0x445a10
  4459bc:	inc    esp
  4459bd:	mov    edx,0x8f64dbbf
  4459c2:	ds pop esi
  4459c4:	(bad)  
  4459c6:	and    al,0x23
  4459c8:	mov    bh,0xd0
  4459ca:	sbb    eax,0xd1f29372
  4459cf:	int3   
  4459d0:	rcr    DWORD PTR [ecx],1
  4459d2:	xor    eax,0x4fe413d8
  4459d7:	sub    al,0x31
  4459d9:	jmp    0x445a2e
  4459db:	lahf   
  4459dc:	mov    bh,0x22
  4459de:	shr    DWORD PTR ds:0x809990e5,cl
  4459e4:	dec    ebp
  4459e5:	xchg   DWORD PTR [ecx],esp
  4459e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4459e8:	ret    0x46e8
  4459eb:	jo     0x4459bc
  4459ed:	jecxz  0x445a1b
  4459ef:	mov    eax,ds:0x9739e007
  4459f4:	les    esp,FWORD PTR [ebx]
  4459f6:	mov    al,ds:0x9114bbe9
  4459fb:	rcl    DWORD PTR [esp],0xf
  4459ff:	inc    ebp
  445a00:	sbb    eax,0x992b6a0e
  445a05:	cdq    
  445a06:	test   edi,ecx
  445a08:	cmp    DWORD PTR [esi+0x45afb1b6],edi
  445a0e:	hlt    
  445a0f:	cmp    ah,cl
  445a11:	leave  
  445a12:	(bad)  
  445a13:	fidiv  WORD PTR [eax]
  445a15:	mov    al,ds:0xdcc182db
  445a1a:	iret   
  445a1b:	fsub   st(6),st
  445a1d:	sti    
  445a1e:	sbb    al,0x81
  445a20:	retf   
  445a21:	data16 add BYTE PTR [esi-0x21235927],dh
  445a28:	sub    edi,edx
  445a2a:	mov    bl,0x3c
  445a2c:	pop    edi
  445a2d:	loopne 0x445a9c
  445a2f:	cmp    al,0x75
  445a31:	js     0x445a2a
  445a33:	ficom  DWORD PTR ds:0x6017603c
  445a39:	std    
  445a3a:	ins    DWORD PTR es:[edi],dx
  445a3b:	aaa    
  445a3c:	fstp   QWORD PTR [edi+0x374ac01f]
  445a42:	add    cl,dl
  445a44:	cmp    BYTE PTR [edx],dh
  445a46:	and    bh,BYTE PTR [esi]
  445a48:	mov    ds:0xc00f4908,al
  445a4d:	mov    eax,0x9dffa506
  445a52:	jno    0x4459fc
  445a54:	cwde   
  445a55:	bound  edx,QWORD PTR [eax+ecx*1-0x4e7e46ad]
  445a5c:	pop    eax
  445a5d:	in     al,dx
  445a5e:	bound  esp,QWORD PTR [esi-0x4af24fb8]
  445a64:	pop    eax
  445a65:	(bad)  
  445a66:	retf   
  445a67:	mov    WORD PTR [eax+0x6f],cs
  445a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445a6b:	and    eax,0x8b574f15
  445a70:	mov    WORD PTR ds:0xb9bd2292,es
  445a76:	push   0xffffffe1
  445a78:	retf   
  445a79:	cdq    
  445a7a:	ins    DWORD PTR es:[edi],dx
  445a7b:	imul   edx,DWORD PTR fs:[edx+ebx*8+0x45],0x78
  445a81:	aam    0x62
  445a83:	jno    0x445a93
  445a85:	loopne 0x445b04
  445a87:	(bad)  ss:[edx+0x43a7c7bc]
  445a8e:	jmp    0x445a83
  445a90:	or     BYTE PTR [ebx+0x4e],al
  445a93:	out    0x3c,eax
  445a95:	pop    ss
  445a96:	scas   eax,DWORD PTR es:[edi]
  445a97:	dec    edi
  445a98:	mov    ebx,0x3aa9b418
  445a9d:	out    dx,eax
  445a9e:	push   ds
  445a9f:	aam    0xaa
  445aa1:	nop
  445aa2:	sub    bl,BYTE PTR [ebx]
  445aa4:	and    BYTE PTR [esi-0x4f],dl
  445aa7:	clc    
  445aa8:	jnp    0x445ac0
  445aaa:	inc    ebx
  445aab:	pop    es
  445aac:	fsubr  DWORD PTR [ecx]
  445aae:	jmp    0x445a69
  445ab0:	into   
  445ab1:	int3   
  445ab2:	sub    dh,BYTE PTR [ecx+0x50]
  445ab5:	(bad)  
  445ab6:	loopne 0x445af5
  445ab8:	mov    eax,0xa4082ffb
  445abd:	xchg   esi,eax
  445abe:	or     eax,0x1f5367a4
  445ac3:	adc    ebx,DWORD PTR [edi-0x6f873fc1]
  445ac9:	lock repnz in eax,dx
  445acc:	sub    eax,0x1500bece
  445ad1:	push   0x1b
  445ad3:	fst    QWORD PTR [eax+0x16]
  445ad6:	ror    BYTE PTR [ebx-0x5b034423],0xde
  445add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445ade:	mov    cl,0xc3
  445ae0:	(bad)  
  445ae1:	sub    esp,DWORD PTR [eax+0x4f]
  445ae4:	inc    edx
  445ae5:	dec    edx
  445ae6:	sub    esi,DWORD PTR [esi]
  445ae8:	mov    eax,ds:0x757d8f70
  445aed:	push   edi
  445aee:	or     ch,BYTE PTR [edi+0x39e72e08]
  445af4:	xor    dl,al
  445af6:	aad    0xe2
  445af8:	add    ebx,DWORD PTR [esi-0x2d]
  445afb:	push   ebp
  445afc:	xlat   BYTE PTR ss:[ebx]
  445afe:	fsubr  QWORD PTR [ebx-0x3db2a8a3]
  445b04:	shl    BYTE PTR [esi],1
  445b06:	mov    ah,0xc
  445b08:	mov    ds:0xd1389fb3,eax
  445b0d:	ror    DWORD PTR [eax+0x59],cl
  445b10:	or     al,0x50
  445b12:	lods   eax,DWORD PTR ds:[esi]
  445b13:	jle    0x445b17
  445b15:	es xchg edi,eax
  445b17:	nop
  445b18:	lods   eax,DWORD PTR ds:[esi]
  445b19:	dec    edi
  445b1a:	gs dec edi
  445b1c:	mov    ds:0x7198c51f,eax
  445b21:	mov    ebp,0xb8d89578
  445b26:	or     edi,DWORD PTR [edi-0x24]
  445b29:	dec    eax
  445b2a:	inc    edi
  445b2b:	or     al,bh
  445b2d:	mov    WORD PTR [ebx-0x2f599399],cs
  445b33:	call   0xd43:0xa885ec81
  445b3a:	test   DWORD PTR [edi-0x704ed60a],edi
  445b40:	xlat   BYTE PTR ds:[ebx]
  445b41:	push   edi
  445b42:	jp     0x445bbf
  445b44:	ins    DWORD PTR es:[edi],dx
  445b45:	push   ecx
  445b46:	fist   WORD PTR [esi]
  445b48:	push   ss
  445b49:	or     esi,eax
  445b4b:	ss stos DWORD PTR es:[edi],eax
  445b4d:	arpl   bx,cx
  445b4f:	(bad)  
  445b50:	jmp    0x445b84
  445b52:	mov    eax,ds:0xb056fc2
  445b57:	retf   0xb75a
  445b5a:	jge    0x445b41
  445b5c:	out    0x59,eax
  445b5e:	call   0x7303c511
  445b63:	xchg   edi,eax
  445b64:	retfw  0xa2f7
  445b68:	in     al,dx
  445b69:	xchg   BYTE PTR [eax],al
  445b6b:	jge    0x445b67
  445b6d:	lds    ebx,FWORD PTR [eax+0x7f]
  445b70:	push   ds
  445b71:	imul   ecx,DWORD PTR [edx+0x7f714686],0xfab0d8bd
  445b7b:	sti    
  445b7c:	mov    esi,0x2488f460
  445b81:	arpl   si,dx
  445b83:	xor    eax,0x53b92b2b
  445b88:	data16 cmp al,0x7d
  445b8b:	ret    0xd57f
  445b8e:	hlt    
  445b8f:	ss jl  0x445b7b
  445b92:	cwde   
  445b93:	jp     0x445bba
  445b95:	mov    edx,0x64471f4c
  445b9a:	int    0x99
  445b9c:	mov    WORD PTR [edi-0x7],ds
  445b9f:	sbb    al,0xa9
  445ba1:	js     0x445b39
  445ba3:	adc    DWORD PTR [eax],0xf468aa5b
  445ba9:	and    DWORD PTR [esi+0x190b89b4],0x3d4c17ac
  445bb3:	mov    edx,0x1f7e6a35
  445bb8:	in     eax,dx
  445bb9:	pop    ecx
  445bba:	int3   
  445bbb:	xchg   esp,eax
  445bbc:	mov    esi,eax
  445bbe:	fld    TBYTE PTR [esi+0x21]
  445bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445bc2:	ins    DWORD PTR es:[edi],dx
  445bc3:	mov    bl,0xd5
  445bc5:	(bad)
  445bc8:	sti    
  445bc9:	rol    BYTE PTR [edx+0x45ac630f],0x6
  445bd0:	dec    ebp
  445bd1:	shl    esp,0xe0
  445bd4:	arpl   ax,bp
  445bd6:	xor    edx,DWORD PTR [ecx+0x64]
  445bd9:	daa    
  445bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445bdb:	iret   
  445bdc:	mov    ds:0x268f8693,al
  445be1:	inc    edx
  445be2:	sub    BYTE PTR [ecx-0x1bc5fabd],al
  445be8:	outs   dx,DWORD PTR ds:[esi]
  445be9:	or     bh,BYTE PTR [esi-0x50]
  445bec:	hlt    
  445bed:	and    BYTE PTR [eax+0x5aa04e8e],dl
  445bf3:	adc    cl,BYTE PTR [ebx]
  445bf5:	mov    esi,0xdb3d6a7a
  445bfa:	jo     0x445bba
  445bfc:	sbb    ch,BYTE PTR [edi]
  445bfe:	push   ebx
  445bff:	cmp    eax,ebp
  445c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445c02:	or     eax,0x443c3cc
  445c07:	rol    DWORD PTR [edx-0x48],1
  445c0a:	inc    eax
  445c0b:	and    ecx,DWORD PTR ds:0x847a2a93
  445c11:	push   edi
  445c12:	les    ebx,FWORD PTR [esi-0x20ace9a9]
  445c18:	or     eax,0xe6554df4
  445c1d:	fucomi st,st(1)
  445c1f:	jo     0x445c70
  445c21:	pop    es
  445c22:	sbb    DWORD PTR [esi],ecx
  445c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445c25:	iret   
  445c26:	and    al,0xfd
  445c28:	sub    dh,BYTE PTR [ebx-0x785e4ce2]
  445c2e:	ficomp WORD PTR [ebp-0x12c8852e]
  445c34:	pop    ds
  445c35:	jecxz  0x445c60
  445c37:	hlt    
  445c38:	pusha  
  445c39:	imul   bh
  445c3b:	dec    esi
  445c3c:	and    BYTE PTR [esi+0x64d057d0],dh
  445c42:	xchg   esp,eax
  445c43:	stos   DWORD PTR es:[edi],eax
  445c44:	push   es
  445c45:	int3   
  445c46:	mov    eax,0xceb7e8e8
  445c4b:	pop    ss
  445c4c:	sbb    al,0x3
  445c4e:	pop    ecx
  445c4f:	pop    ebp
  445c50:	cmp    eax,0x69b01e49
  445c55:	mov    dl,0xc4
  445c57:	aad    0xbb
  445c59:	shr    DWORD PTR [ebx],0x92
  445c5c:	sbb    esp,ecx
  445c5e:	xor    eax,0x861ecda7
  445c63:	jge    0x445bf8
  445c65:	test   DWORD PTR [ebx+edi*2+0x3342091d],ebx
  445c6c:	inc    ecx
  445c6d:	cmp    eax,0xe3ede10c
  445c72:	sub    eax,0x3835a273
  445c77:	push   es
  445c78:	(bad)  
  445c79:	push   esp
  445c7a:	xor    DWORD PTR [edx+0x5c24bd9d],edi
  445c80:	retf   0xbf17
  445c83:	sbb    eax,0x443ac03e
  445c88:	mov    edx,0x8f414959
  445c8d:	jle    0x445cd2
  445c8f:	ret    0xf186
  445c92:	(bad)  
  445c93:	sub    al,0xdb
  445c95:	dec    ecx
  445c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445c97:	jmp    0x445d14
  445c99:	or     esi,DWORD PTR [ebx+0x2f]
  445c9c:	lea    ebp,[edi+0x29]
  445c9f:	mul    DWORD PTR [ebx-0x59]
  445ca2:	(bad)  
  445ca4:	xor    dh,BYTE PTR [esi-0x18270e6f]
  445caa:	or     eax,0xd8a5a8f0
  445caf:	neg    ecx
  445cb1:	(bad)  
  445cb2:	(bad)  
  445cb3:	jg     0x445c65
  445cb5:	(bad)  
  445cb6:	push   edi
  445cb7:	pushf  
  445cb8:	add    al,BYTE PTR [eax-0x6830a06c]
  445cbe:	jg     0x445c55
  445cc0:	ds dec esp
  445cc2:	inc    edx
  445cc3:	lahf   
  445cc4:	push   esi
  445cc5:	jp     0x445d2a
  445cc7:	stos   BYTE PTR es:[edi],al
  445cc8:	mov    al,0xf1
  445cca:	xor    DWORD PTR [ecx-0x79f657dc],edx
  445cd0:	call   0x26c9bf5
  445cd5:	call   0xe991587a
  445cda:	pop    es
  445cdb:	push   edi
  445cdc:	fnstcw WORD PTR [edi+eiz*8]
  445cdf:	fwait
  445ce0:	pop    ebx
  445ce1:	lea    ebx,[ecx-0x1c]
  445ce4:	sar    BYTE PTR [esi],cl
  445ce6:	test   al,0xdf
  445ce8:	outs   dx,BYTE PTR ss:[esi]
  445cea:	xchg   esi,eax
  445ceb:	outs   dx,BYTE PTR ds:[esi]
  445cec:	add    ah,cl
  445cee:	cmp    ecx,edi
  445cf0:	mov    dh,0xce
  445cf2:	and    esi,ebx
  445cf4:	xor    DWORD PTR [edi-0x74cce6b9],edi
  445cfa:	dec    esi
  445cfb:	and    al,0xeb
  445cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445cfe:	inc    edx
  445cff:	jecxz  0x445c9b
  445d01:	cmp    bl,BYTE PTR [eax+0x6d0efd5e]
  445d07:	(bad)  
  445d09:	adc    eax,0x5959de6e
  445d0e:	mov    eax,0xf76625f
  445d13:	xor    al,0x5e
  445d15:	dec    edi
  445d16:	add    BYTE PTR [edi],bh
  445d18:	mov    WORD PTR [ebx],gs
  445d1a:	cli    
  445d1b:	fsubr  QWORD PTR [edi+0x79d43fa5]
  445d21:	mov    bl,0x77
  445d23:	xor    DWORD PTR fs:[edi],ebx
  445d26:	cmp    ah,BYTE PTR ds:0xbe010b20
  445d2c:	(bad)  
  445d2e:	mov    ah,0x87
  445d30:	out    0x47,al
  445d32:	dec    edi
  445d33:	jle    0x445d3c
  445d35:	nop
  445d36:	ins    BYTE PTR es:[edi],dx
  445d37:	arpl   si,di
  445d39:	push   es
  445d3a:	fidiv  DWORD PTR [esp+eax*8+0x29]
  445d3e:	ins    DWORD PTR es:[edi],dx
  445d3f:	xchg   esp,ebp
  445d41:	iret   
  445d42:	mov    ebp,0xbab18fbf
  445d47:	shl    esi,1
  445d49:	mov    esp,0x7525aafb
  445d4e:	xchg   ecx,eax
  445d4f:	xor    ebx,DWORD PTR [eax-0x9304ae5]
  445d55:	popf   
  445d56:	xchg   DWORD PTR [esi-0x20b5beb3],esp
  445d5c:	sub    BYTE PTR [esi-0x43910208],cl
  445d62:	dec    esi
  445d63:	adc    DWORD PTR [edx-0x49],ebx
  445d66:	enter  0xaaae,0x96
  445d6a:	lods   eax,DWORD PTR ds:[esi]
  445d6b:	ja     0x445d8a
  445d6d:	in     eax,0xaa
  445d6f:	xchg   edx,eax
  445d70:	lods   al,BYTE PTR ds:[esi]
  445d71:	lds    ebx,FWORD PTR [esp+edx*4-0x3f30feae]
  445d78:	pop    esi
  445d79:	fs stc 
  445d7b:	and    DWORD PTR [eax+ebp*2],0xffffffff
  445d7f:	jle    0x445dce
  445d81:	xchg   ecx,eax
  445d82:	fmul   QWORD PTR [esi-0x1ef4b779]
  445d88:	push   ebx
  445d89:	add    eax,0x6486094
  445d8e:	jo     0x445dda
  445d90:	xlat   BYTE PTR ds:[ebx]
  445d91:	adc    dl,BYTE PTR [esi+0x30]
  445d94:	call   0x3e36:0x56abb60b
  445d9b:	iret   
  445d9c:	push   eax
  445d9d:	mov    ds:0x8eaf5a7f,al
  445da2:	jno    0x445e13
  445da4:	sub    edx,DWORD PTR [esi+0x10]
  445da7:	mov    dl,0xf
  445da9:	push   esp
  445daa:	push   esp
  445dab:	xchg   edx,eax
  445dac:	aaa    
  445dad:	mov    BYTE PTR [ebx+0x4],bl
  445db0:	push   ecx
  445db1:	add    bl,ah
  445db3:	xchg   edi,eax
  445db4:	push   eax
  445db5:	add    esi,ecx
  445db7:	cmp    ebp,DWORD PTR [eax+edx*8]
  445dba:	addr16 ja 0x445d51
  445dbd:	arpl   sp,dx
  445dbf:	pop    edi
  445dc0:	xor    esi,DWORD PTR [esi+eax*2]
  445dc3:	and    edi,0xffffffc5
  445dc6:	xor    BYTE PTR [ebp-0x3bb4e894],bl
  445dcc:	nop
  445dcd:	push   ebx
  445dce:	or     DWORD PTR [edi-0x6],esp
  445dd1:	jbe    0x445e3c
  445dd3:	inc    eax
  445dd4:	sahf   
  445dd5:	xchg   esi,eax
  445dd6:	pop    ds
  445dd7:	push   cs
  445dd8:	mov    WORD PTR [ebx-0x6b],?
  445ddb:	test   eax,0x29be342e
  445de0:	xor    DWORD PTR [ecx+edi*4],esi
  445de3:	stos   BYTE PTR es:[edi],al
  445de4:	jge    0x445e01
  445de6:	add    ch,ah
  445de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445de9:	add    BYTE PTR [eax+ecx*1],ch
  445dec:	xchg   ebp,eax
  445ded:	outs   dx,BYTE PTR ds:[esi]
  445dee:	out    dx,al
  445def:	mov    eax,ds:0x65e232bd
  445df4:	pop    ss
  445df5:	jmp    0xf48980c4
  445dfa:	adc    eax,0x5d73f795
  445dff:	cwde   
  445e00:	mov    dh,0xab
  445e02:	popa   
  445e03:	mov    ah,0x33
  445e05:	mov    bh,0x44
  445e07:	mov    cl,0x99
  445e09:	jnp    0x445dee
  445e0b:	push   ds
  445e0c:	and    DWORD PTR [ebx+0x53873933],0xa4766a5a
  445e16:	mov    esi,0x72eaa6a4
  445e1b:	and    DWORD PTR [ecx-0x27],0xffffff8e
  445e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445e20:	clc    
  445e21:	leave  
  445e22:	test   eax,0xb01335e5
  445e27:	pop    ss
  445e28:	fstp   QWORD PTR [edi+0x46a7db10]
  445e2e:	scas   al,BYTE PTR es:[edi]
  445e2f:	out    dx,eax
  445e30:	pushf  
  445e31:	sbb    ebp,DWORD PTR [ebx-0x7b]
  445e34:	dec    eax
  445e35:	cmp    DWORD PTR [ebx+0xa45ef44],eax
  445e3b:	push   esi
  445e3c:	xchg   DWORD PTR [eax],ebp
  445e3e:	in     eax,dx
  445e3f:	scas   eax,DWORD PTR es:[edi]
  445e40:	mov    ds:0x99909cd6,eax
  445e45:	and    DWORD PTR [esp+ebp*4-0x3bf5f3fa],esi
  445e4c:	sahf   
  445e4d:	mov    edi,0xc2ec773e
  445e52:	aas    
  445e53:	fstp   QWORD PTR [edi+0x15496641]
  445e59:	or     ecx,DWORD PTR [esi-0x214170a7]
  445e5f:	sbb    al,0x1d
  445e61:	mov    ch,0x41
  445e63:	xchg   DWORD PTR [eax+0x3d851381],ecx
  445e69:	inc    ebp
  445e6a:	sahf   
  445e6b:	add    BYTE PTR [eax+ebx*4-0x2ba5c737],bh
  445e72:	loope  0x445ebd
  445e74:	test   eax,0x4da0e46
  445e79:	inc    BYTE PTR [ebp-0x175f92af]
  445e7f:	enter  0x33c7,0x9
  445e83:	mov    bl,0xd5
  445e85:	aad    0x9a
  445e87:	inc    esi
  445e88:	cmp    BYTE PTR [edi],cl
  445e8a:	sti    
  445e8b:	sub    edi,DWORD PTR [ecx]
  445e8d:	cmp    esp,DWORD PTR [edi+ebx*4-0x80]
  445e91:	sahf   
  445e92:	fwait
  445e93:	push   edx
  445e94:	cmp    eax,0xc61b8337
  445e99:	jmp    0x8db1:0xe5b9b790
  445ea0:	pop    esi
  445ea1:	rcl    ah,cl
  445ea3:	inc    ecx
  445ea4:	mov    ds,WORD PTR [edx-0x1d01c8a4]
  445eaa:	adc    cl,BYTE PTR [edx]
  445eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445ead:	or     DWORD PTR [ebp+0x2e52b038],0xe
  445eb4:	dec    ebx
  445eb5:	lea    edi,[esp+edi*4+0x61348e]
  445ebc:	data16 idiv BYTE PTR [edx]
  445ebf:	mov    al,ds:0xea99d9b0
  445ec4:	dec    ecx
  445ec5:	(bad)  
  445ec6:	imul   esp,DWORD PTR [ebx],0xffffffde
  445ec9:	push   esi
  445eca:	pop    esi
  445ecb:	mov    esp,0xbeb1d7c6
  445ed0:	pop    es
  445ed1:	outs   dx,DWORD PTR ds:[esi]
  445ed2:	dec    ebx
  445ed3:	jg     0x445ea6
  445ed5:	popf   
  445ed6:	cmc    
  445ed7:	inc    ebx
  445ed8:	loope  0x445f57
  445eda:	xchg   esi,eax
  445edb:	push   ebx
  445edc:	inc    ebx
  445edd:	push   edi
  445ede:	and    eax,0x9026d4c8
  445ee3:	add    dh,cl
  445ee5:	sub    BYTE PTR [ecx],ch
  445ee7:	jge    0x445efe
  445ee9:	or     bh,BYTE PTR [ebp+edx*8-0x53e9da77]
  445ef0:	int    0x2e
  445ef2:	nop
  445ef3:	test   esp,ebp
  445ef5:	call   0x6003:0x195fc3e2
  445efc:	jmp    0x6f71f4e9
  445f01:	mov    dl,0x17
  445f03:	jg     0x445f54
  445f05:	pop    esp
  445f06:	cmp    al,0xce
  445f08:	push   0x38
  445f0a:	xchg   ecx,eax
  445f0b:	xchg   ebx,edi
  445f0d:	add    DWORD PTR [esi+ebx*8+0x30],esp
  445f11:	fld    QWORD PTR [edx+0x54dedac1]
  445f17:	adc    cl,ch
  445f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445f1a:	out    dx,eax
  445f1b:	test   eax,0xb3199635
  445f20:	add    esp,ebp
  445f22:	ss push ecx
  445f24:	mov    edi,0x478fcf1e
  445f29:	lds    esp,FWORD PTR ds:[esi+0x10]
  445f2d:	imul   edx,DWORD PTR [esi],0xe953e4c8
  445f33:	ins    BYTE PTR es:[edi],dx
  445f34:	imul   esp,DWORD PTR [eax],0x71
  445f37:	sbb    ecx,DWORD PTR [esi-0x1d4e687]
  445f3d:	imul   edx,DWORD PTR [edi-0x36],0x5a59cda9
  445f44:	out    dx,eax
  445f45:	mov    ds:0x976772c1,eax
  445f4a:	xlat   BYTE PTR ds:[ebx]
  445f4b:	mov    ds:0x263e18a5,al
  445f50:	cmp    al,0xd7
  445f52:	add    eax,0x843017b
  445f57:	scas   al,BYTE PTR es:[edi]
  445f58:	sysenter 
  445f5a:	and    ecx,edi
  445f5c:	pop    ss
  445f5d:	cwde   
  445f5e:	sbb    DWORD PTR [edx],0xdff00669
  445f64:	sbb    ch,BYTE PTR [eax+0x60]
  445f67:	cmc    
  445f68:	sbb    al,0x47
  445f6a:	jmp    0x5d48:0x49c6609e
  445f71:	xor    ecx,DWORD PTR ds:0x73a73d67
  445f77:	pop    ecx
  445f78:	push   0xe21b734c
  445f7d:	retf   0x32f1
  445f80:	and    al,0xfb
  445f82:	call   0x9919:0xac6c171
  445f89:	aad    0xcf
  445f8b:	test   eax,0x8649a1a4
  445f90:	push   ebx
  445f91:	inc    edx
  445f92:	mov    DWORD PTR [edx-0x54296ed3],ecx
  445f98:	fcom   QWORD PTR [esi]
  445f9a:	and    ecx,ebx
  445f9c:	mov    ah,0xe3
  445f9e:	iret   
  445f9f:	adc    dl,bh
  445fa1:	xchg   esi,eax
  445fa2:	iret   
  445fa3:	pop    ds
  445fa4:	inc    BYTE PTR [ebp-0x67]
  445fa7:	addr16 sub al,0x71
  445faa:	test   DWORD PTR [ebp-0x2c7a8c70],0x9b64f63e
  445fb4:	or     bl,BYTE PTR [ebx+0x19]
  445fb7:	gs mov esp,0x8d8dd5f1
  445fbd:	xor    DWORD PTR [ebx],edx
  445fbf:	mov    cs,WORD PTR [edx]
  445fc1:	xchg   DWORD PTR [edi+0x7a],edx
  445fc4:	arpl   WORD PTR [ebx],bp
  445fc6:	xchg   edx,eax
  445fc7:	stos   DWORD PTR es:[edi],eax
  445fc8:	shl    BYTE PTR [edx-0x1b6464f6],cl
  445fce:	aaa    
  445fcf:	adc    ch,ch
  445fd1:	data16 adc al,0xb5
  445fd4:	loope  0x445f8b
  445fd6:	cmp    ebp,DWORD PTR [ebx]
  445fd8:	out    0xa1,al
  445fda:	fisub  WORD PTR [esi+esi*2]
  445fdd:	sub    DWORD PTR [edx+0x7c],edi
  445fe0:	cmc    
  445fe1:	out    0x75,al
  445fe3:	or     cl,BYTE PTR [esi-0x38]
  445fe6:	sar    edi,cl
  445fe8:	or     eax,0xf203165
  445fed:	mov    bh,0x98
  445fef:	inc    ecx
  445ff0:	adc    ah,dh
  445ff2:	dec    ebx
  445ff3:	fdiv   st,st(0)
  445ff5:	xchg   ebp,eax
  445ff6:	mov    DWORD PTR [edi+0x3a37394],ebx
  445ffc:	rol    DWORD PTR [eax+ebp*8+0x2],cl
  446000:	sbb    edi,0x72
  446003:	inc    eax
  446004:	ins    BYTE PTR es:[edi],dx
  446005:	ficomp WORD PTR [eax]
  446007:	ret    0xef12
  44600a:	iret   
  44600b:	pop    ecx
  44600c:	xor    BYTE PTR [esi+ebx*8+0x55],0xec
  446011:	adc    al,BYTE PTR [esi-0x2c]
  446014:	pop    ss
  446015:	out    0xdc,al
  446017:	mul    BYTE PTR [ebp-0x799317d]
  44601d:	ds push edx
  44601f:	idiv   BYTE PTR [edx]
  446021:	mov    al,0x57
  446023:	and    edx,DWORD PTR ds:0x503368d2
  446029:	xchg   ebp,edi
  44602b:	out    dx,eax
  44602c:	jae    0x445fb7
  44602e:	fist   WORD PTR [ebp+edi*4-0xd]
  446032:	div    DWORD PTR [ebp+edx*1+0xa1c7a98]
  446039:	imul   ebx,DWORD PTR [esi],0x541dc169
  44603f:	in     al,0x4e
  446041:	mov    ebx,0xb98cb6e
  446046:	xchg   esi,eax
  446047:	leave  
  446048:	pop    eax
  446049:	out    dx,eax
  44604a:	rcl    DWORD PTR [eax],0xbf
  44604d:	popa   
  44604e:	imul   eax,esp,0x2da0107c
  446054:	popf   
  446055:	xor    al,0x4e
  446057:	inc    ebx
  446058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446059:	mov    BYTE PTR [ebx+0x71],ch
  44605c:	cmp    ebp,esp
  44605e:	pop    esp
  44605f:	pop    ds
  446060:	push   0xfffffff9
  446062:	push   edi
  446063:	xchg   esp,eax
  446064:	sbb    esp,eax
  446066:	dec    eax
  446067:	jne    0x446024
  446069:	lock cmp al,0xdc
  44606c:	inc    esp
  44606d:	pop    edi
  44606e:	sub    dl,BYTE PTR [ebx+0x40]
  446071:	ds ret 0x1b3d
  446075:	sbb    eax,0x63cae4b4
  44607a:	sbb    DWORD PTR [edx],edx
  44607c:	dec    ebp
  44607d:	daa    
  44607e:	aad    0x84
  446080:	call   0x4140:0xb299283e
  446087:	push   eax
  446088:	fsubr  QWORD PTR [bp+si+0x46d1]
  44608d:	(bad)
  446091:	mov    WORD PTR [edi+0x4d],cs
  446094:	adc    eax,0xf36a03c1
  446099:	retf   
  44609a:	push   edx
  44609b:	and    ebx,DWORD PTR [edx-0x26]
  44609e:	icebp  
  44609f:	jle    0x44610a
  4460a1:	rcr    DWORD PTR [edx],cl
  4460a3:	sub    ch,BYTE PTR [ecx]
  4460a5:	dec    edi
  4460a6:	mov    dh,ch
  4460a8:	leave  
  4460a9:	test   al,0x88
  4460ab:	ds push esi
  4460ad:	or     eax,0x9484527d
  4460b2:	xchg   edi,eax
  4460b3:	jmp    0xaa64:0x9dda4425
  4460ba:	in     eax,0x53
  4460bc:	rcr    BYTE PTR [ebx+eiz*1],cl
  4460bf:	sub    esi,DWORD PTR [ebx]
  4460c1:	sar    DWORD PTR [eax-0x5c6a66e7],1
  4460c7:	stos   BYTE PTR es:[edi],al
  4460c8:	test   al,0x61
  4460ca:	xor    DWORD PTR [ecx],ebx
  4460cc:	push   ecx
  4460cd:	pop    ss
  4460ce:	bound  edx,QWORD PTR [esi-0x40a8c48f]
  4460d4:	dec    esi
  4460d5:	sbb    DWORD PTR [ebp+0xb0410e3],eax
  4460db:	fs mov eax,0x52382252
  4460e1:	mov    eax,ds:0x7314d31d
  4460e6:	neg    BYTE PTR [ecx]
  4460e8:	imul   esi,DWORD PTR [esi+0x3a],0x3f
  4460ec:	(bad)  
  4460ee:	arpl   WORD PTR [edx],si
  4460f0:	int3   
  4460f1:	push   esi
  4460f2:	mov    edx,0xddb497f4
  4460f7:	xchg   ebp,eax
  4460f8:	xchg   esi,eax
  4460f9:	loope  0x4460e4
  4460fb:	repz jbe 0x44609e
  4460fe:	mov    edi,0xf9d3734e
  446103:	push   ecx
  446104:	mov    edx,0x4a43e8d1
  446109:	pop    eax
  44610a:	or     BYTE PTR [ecx],cl
  44610c:	div    BYTE PTR [ecx+0x49]
  44610f:	jge    0x44613e
  446111:	dec    edx
  446112:	retf   
  446113:	daa    
  446114:	test   al,0xd
  446116:	in     eax,dx
  446117:	inc    DWORD PTR [ebx+0x53]
  44611a:	mov    dh,0xd4
  44611c:	xor    BYTE PTR [esi+0x2a],bl
  44611f:	into   
  446120:	sbb    BYTE PTR [ebp-0x45354d52],bl
  446126:	outs   dx,DWORD PTR ds:[si]
  446128:	and    bh,BYTE PTR [edx+eax*4+0x6a]
  44612c:	jl     0x44618c
  44612e:	mov    BYTE PTR [ecx+esi*1-0x21],dl
  446132:	fst    st(1)
  446134:	clc    
  446135:	push   edx
  446136:	ret    0xd287
  446139:	and    BYTE PTR [eax],al
  44613b:	outs   dx,BYTE PTR ds:[esi]
  44613c:	out    dx,al
  44613d:	push   esp
  44613e:	lods   eax,DWORD PTR ds:[esi]
  44613f:	xchg   ecx,eax
  446140:	pop    edx
  446141:	pop    esi
  446142:	sub    al,0x73
  446144:	mov    DWORD PTR [ebx+0x703ed057],eax
  44614a:	cmc    
  44614b:	jno    0x44613c
  44614d:	add    al,BYTE PTR [ebx]
  44614f:	pop    ss
  446150:	xchg   DWORD PTR [edi-0x353e6e32],eax
  446156:	xchg   ebx,eax
  446157:	sbb    al,0x78
  446159:	jae    0x446191
  44615b:	out    0xc,al
  44615d:	shld   DWORD PTR [ebp-0x45],ebp,0xe9
  446162:	and    DWORD PTR [edi+0x301f90a2],ebx
  446168:	sbb    BYTE PTR [esi-0x118ce955],ah
  44616e:	sbb    DWORD PTR gs:[esi-0x28],ecx
  446172:	retf   0xd424
  446175:	mov    ds:0xcce31f91,al
  44617a:	mov    gs,WORD PTR [edi-0x35]
  44617d:	in     al,0xba
  44617f:	ror    DWORD PTR [esi-0x7dee06a6],1
  446185:	pop    ds
  446186:	(bad)  
  446187:	in     eax,0xa8
  446189:	daa    
  44618a:	cmp    ebx,DWORD PTR [edx-0x32]
  44618d:	add    esp,DWORD PTR [edi+ebx*8-0x1a]
  446191:	pop    ds
  446192:	cmp    bl,BYTE PTR [esi+0x30b4b122]
  446198:	outs   dx,BYTE PTR ds:[esi]
  446199:	jo     0x44619e
  44619b:	mov    ah,0xa8
  44619d:	add    DWORD PTR [eax],ebp
  44619f:	or     al,0xc6
  4461a1:	or     BYTE PTR [edi-0x7e],bh
  4461a4:	rcr    DWORD PTR [ebx+0x5b036ef8],0xdf
  4461ab:	and    ebp,DWORD PTR [esi+0x1c06aafd]
  4461b1:	arpl   WORD PTR [eax+0x31],dx
  4461b4:	inc    esi
  4461b5:	leave  
  4461b6:	ret    0xb46
  4461b9:	mov    al,BYTE PTR [ebp-0x52]
  4461bc:	fidiv  WORD PTR ds:0xa5875218
  4461c2:	push   ss
  4461c3:	mov    edx,0x8bab695d
  4461c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4461c9:	pop    edx
  4461ca:	jecxz  0x4461dc
  4461cc:	fistp  QWORD PTR [esi]
  4461ce:	mov    ecx,0x87f26f6b
  4461d3:	test   eax,0x60737343
  4461d8:	scas   eax,DWORD PTR es:[edi]
  4461d9:	or     dh,BYTE PTR [edx-0x362f0473]
  4461df:	mov    cl,0x90
  4461e1:	popf   
  4461e2:	and    eax,0xc2779a1e
  4461e7:	out    dx,eax
  4461e8:	pop    ebx
  4461e9:	(bad)  
  4461ea:	ins    BYTE PTR es:[edi],dx
  4461eb:	pop    eax
  4461ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4461ed:	(bad)  
  4461ee:	mov    ah,0xdd
  4461f0:	xchg   edx,eax
  4461f1:	xchg   BYTE PTR [eax-0x77e16f3e],ch
  4461f7:	jne    0x4461b9
  4461f9:	test   eax,0xc79dcb0a
  4461fe:	mov    edx,0xd98bac83
  446203:	push   es
  446204:	jecxz  0x4461fc
  446206:	loop   0x4461c5
  446208:	rol    BYTE PTR [ebx+ebx*2-0x43dc9455],0xf4
  446210:	and    DWORD PTR [eax+eiz*1-0x64bd2f0c],eax
  446217:	ret    
  446218:	mov    bh,0xa5
  44621a:	aaa    
  44621b:	ror    edx,1
  44621d:	mov    eax,0x69274878
  446222:	cli    
  446223:	mov    ss,ebx
  446225:	sub    BYTE PTR fs:[edi],al
  446228:	pop    es
  446229:	mov    ah,0xd5
  44622b:	jae    0x4461cb
  44622d:	dec    ebp
  44622e:	sbb    edx,DWORD PTR [esi]
  446230:	sub    al,0x2a
  446232:	inc    esi
  446233:	sahf   
  446234:	icebp  
  446235:	rol    DWORD PTR [edi+edx*2+0x35],cl
  446239:	sub    cl,ch
  44623b:	test   DWORD PTR [ebx+0x7dc41fa9],esp
  446241:	test   BYTE PTR [ebp-0x1b174100],0x76
  446248:	mov    edi,0x8672f8dc
  44624d:	(bad)  
  44624e:	sbb    al,0x63
  446250:	xor    eax,0x7bdd81d
  446255:	lods   al,BYTE PTR ds:[esi]
  446256:	fisttp WORD PTR ds:0x5605c982
  44625c:	fisub  WORD PTR [ebp+0x22bec39d]
  446262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446263:	mov    ?,WORD PTR [edi+0x63]
  446266:	stos   DWORD PTR es:[edi],eax
  446267:	test   al,0xf1
  446269:	aaa    
  44626a:	jg     0x4462e8
  44626c:	push   bx
  44626e:	sub    DWORD PTR [ecx-0xf],0xffffff8a
  446272:	sbb    al,0x28
  446274:	add    al,0xae
  446276:	or     ebp,DWORD PTR [eax+0x6f]
  446279:	clc    
  44627a:	aaa    
  44627b:	fucom  st(3)
  44627d:	pop    esp
  44627e:	and    eax,0xdd71f112
  446283:	aad    0xb
  446285:	pusha  
  446286:	pop    edx
  446287:	aad    0x5a
  446289:	shl    edx,1
  44628b:	cmp    dh,dh
  44628d:	es leave 
  44628f:	xchg   esi,eax
  446290:	imul   eax,DWORD PTR [eax-0x148c035],0xdf15ed16
  44629a:	stc    
  44629b:	hlt    
  44629c:	mov    ebp,0xd628b7dd
  4462a1:	fs jp  0x44625d
  4462a4:	inc    eax
  4462a5:	es pop edx
  4462a7:	xchg   ebp,eax
  4462a8:	push   ecx
  4462a9:	(bad)  
  4462ab:	mov    al,0x54
  4462ad:	call   DWORD PTR [esi+0x2443e09e]
  4462b3:	add    ebp,eax
  4462b5:	(bad)  
  4462b6:	cmp    BYTE PTR [ecx],0xb5
  4462b9:	inc    esp
  4462ba:	mov    ebp,0x94ed3da7
  4462bf:	xchg   edi,eax
  4462c0:	xor    edi,ebx
  4462c2:	inc    ebx
  4462c3:	scas   eax,DWORD PTR es:[edi]
  4462c4:	push   ecx
  4462c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4462c6:	out    0x45,eax
  4462c8:	int    0xa4
  4462ca:	ds cli 
  4462cc:	imul   esp,DWORD PTR [edi+ebp*2-0x2bb445b2],0xffffffe2
  4462d4:	(bad)  
  4462d5:	mov    ecx,0x9ea39625
  4462da:	cmp    edi,DWORD PTR [ebx-0x70]
  4462dd:	in     eax,dx
  4462de:	mov    ds:0x6ab5edcb,eax
  4462e3:	cmc    
  4462e4:	push   0xffffffc3
  4462e6:	ret    
  4462e7:	in     eax,0x4
  4462e9:	pop    edx
  4462ea:	dec    esi
  4462eb:	mul    BYTE PTR [esi-0x1efb8ff4]
  4462f1:	mov    esi,0x11ecf958
  4462f6:	or     ecx,DWORD PTR [ebp-0x15]
  4462f9:	jp     0x446338
  4462fb:	mov    ch,0x2e
  4462fd:	(bad)  
  4462fe:	push   ss
  4462ff:	add    DWORD PTR [ecx-0x6599b75f],eax
  446305:	and    edi,DWORD PTR [edi-0x14]
  446308:	iret   
  446309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44630a:	in     al,0x97
  44630c:	xchg   edx,eax
  44630d:	repnz fisttp WORD PTR [eax+0x7aa133ee]
  446314:	in     al,dx
  446315:	mov    esp,0x54ec3011
  44631a:	jl     0x4462ce
  44631c:	ret    0x70ae
  44631f:	lods   eax,DWORD PTR ds:[esi]
  446320:	jne    0x44639a
  446322:	pop    esp
  446323:	and    eax,DWORD PTR [ebp-0x6f346b56]
  446329:	pop    esp
  44632a:	inc    edx
  44632b:	mov    ebp,0xcc076c1a
  446330:	and    ch,al
  446332:	xor    BYTE PTR [edi+0x19],cl
  446335:	out    dx,al
  446336:	test   ebp,esi
  446338:	adc    BYTE PTR [edx+0x23e57c0b],bh
  44633e:	and    DWORD PTR [ecx-0x40879637],edi
  446344:	cmp    edi,edx
  446346:	jmp    FWORD PTR [ecx]
  446348:	pop    ecx
  446349:	aad    0xe1
  44634b:	bound  esi,QWORD PTR [edi-0x14]
  44634e:	imul   eax,DWORD PTR [ecx],0x6286c69c
  446354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446355:	pop    esp
  446356:	sbb    DWORD PTR [edi],ebx
  446358:	or     al,0xb7
  44635a:	or     ebp,DWORD PTR [esi+0x1b3fd4c3]
  446360:	mov    edx,0x762a9b7e
  446365:	pop    esp
  446366:	es (bad) 
  446368:	sub    ah,dh
  44636a:	mov    dl,bh
  44636c:	jbe    0x446352
  44636e:	mov    bl,0x7e
  446370:	adc    dl,BYTE PTR [esp+ecx*1-0x65]
  446374:	dec    DWORD PTR [ecx+ebx*2+0x75]
  446378:	test   al,0x12
  44637a:	mov    ecx,0xd131a336
  44637f:	sbb    al,0xee
  446381:	push   0x98915a30
  446386:	std    
  446387:	mov    ecx,0x70fc7626
  44638c:	rol    BYTE PTR [ecx],cl
  44638e:	dec    ecx
  44638f:	pop    ecx
  446390:	sti    
  446391:	test   bl,bl
  446393:	sbb    DWORD PTR [edx+0x48],edi
  446396:	enter  0xa2d9,0x49
  44639a:	popa   
  44639b:	ret    
  44639c:	xor    eax,0xd01054be
  4463a1:	push   ds
  4463a2:	mov    bl,0xc3
  4463a4:	xor    eax,DWORD PTR [ecx-0x5c65e6f3]
  4463aa:	sub    edi,DWORD PTR [ebx-0x324bf08b]
  4463b0:	xchg   DWORD PTR [esi],ecx
  4463b2:	inc    ebp
  4463b3:	push   ds
  4463b4:	push   ss
  4463b5:	xor    BYTE PTR [ebx+ebp*8+0x785fe0e7],bl
  4463bc:	jb     0x4463e9
  4463be:	minps  xmm2,XMMWORD PTR [ebx+0x4]
  4463c2:	lds    ebp,FWORD PTR [ebx-0x2c]
  4463c5:	stos   BYTE PTR es:[edi],al
  4463c6:	sbb    eax,0x60b7ab9f
  4463cb:	out    0x2b,eax
  4463cd:	xor    eax,0xfe3574af
  4463d2:	mov    bl,0x80
  4463d4:	ret    
  4463d5:	mul    dh
  4463d7:	sbb    BYTE PTR [edx],bl
  4463d9:	xchg   ecx,eax
  4463da:	(bad)  
  4463db:	(bad)  
  4463dc:	or     al,0xa1
  4463de:	retf   0xc91a
  4463e1:	(bad)  
  4463e2:	aam    0x4d
  4463e4:	jmp    0x446414
  4463e6:	mov    DWORD PTR [ebx],esi
  4463e8:	test   edi,eax
  4463ea:	jecxz  0x446420
  4463ec:	inc    ecx
  4463ed:	or     BYTE PTR [edi],ah
  4463ef:	shr    BYTE PTR [ebx-0xc],1
  4463f2:	cmp    ch,BYTE PTR [ebp+ebp*4-0x763e3bb4]
  4463f9:	xlat   BYTE PTR ds:[ebx]
  4463fa:	sahf   
  4463fb:	xor    edx,ebx
  4463fd:	or     edx,DWORD PTR [ebp-0x6e97a539]
  446403:	xor    DWORD PTR [eax+0x51acd7f3],0x1e
  44640a:	jne    0x4463c0
  44640c:	push   ss
  44640d:	jp     0x4463e5
  44640f:	test   BYTE PTR [edi-0x359d16c6],dl
  446415:	push   edx
  446416:	sub    ch,dl
  446418:	ret    
  446419:	and    BYTE PTR [edx],cl
  44641b:	cmp    edx,DWORD PTR [ebx+ecx*2+0x20c4a252]
  446422:	push   edi
  446423:	call   FWORD PTR [esi]
  446425:	inc    esi
  446426:	scas   al,BYTE PTR es:[edi]
  446427:	sbb    DWORD PTR [ebx],esp
  446429:	or     edx,DWORD PTR [edi-0x53c7f549]
  44642f:	dec    esi
  446430:	std    
  446431:	imul   eax,DWORD PTR [ebp-0x50703bd6],0xffffffdc
  446438:	cmp    esp,DWORD PTR [ecx+0x2]
  44643b:	sub    al,0x83
  44643d:	ret    
  44643e:	pop    ebp
  44643f:	enter  0xdfd,0x4
  446443:	in     al,dx
  446444:	daa    
  446445:	mov    ch,0xca
  446447:	jmp    DWORD PTR [edi+0x4fb4f6b3]
  44644d:	(bad)  
  44644e:	into   
  44644f:	js     0x446443
  446451:	stos   DWORD PTR es:[edi],eax
  446452:	sub    eax,0x591c1132
  446457:	mov    ecx,0x19c4617c
  44645c:	mov    esi,0xe44c13f5
  446461:	push   eax
  446462:	fimul  DWORD PTR [edx]
  446464:	mov    edx,0xab8e7afb
  446469:	adc    BYTE PTR [edx-0x61],dh
  44646c:	sub    BYTE PTR [ebp+ebx*8-0x56],al
  446470:	out    dx,al
  446471:	repnz dec edx
  446473:	cld    
  446474:	aam    0xf6
  446476:	imul   ebp,ebx,0x151a3358
  44647c:	cmp    DWORD PTR ds:0x26036ef0,0x901c5f67
  446486:	mov    ebx,0x65f69ebd
  44648b:	js     0x446504
  44648d:	out    dx,eax
  44648e:	in     al,dx
  44648f:	scas   eax,DWORD PTR es:[edi]
  446490:	inc    ebp
  446491:	or     dl,BYTE PTR [edi+0x46932783]
  446497:	sub    al,0x27
  446499:	cmp    cl,BYTE PTR [ebx+0x72]
  44649c:	jbe    0x44651d
  44649e:	mov    edi,0xac455a76
  4464a3:	pop    esi
  4464a4:	pop    esp
  4464a5:	int3   
  4464a6:	loopne 0x4464f5
  4464a8:	adc    eax,0xd8e655bf
  4464ad:	addr16 lock aad 0xfc
  4464b1:	sbb    al,0xde
  4464b3:	xor    al,0x37
  4464b5:	cli    
  4464b6:	(bad)  [ebp+0x6c512fd0]
  4464bc:	ins    BYTE PTR es:[edi],dx
  4464bd:	dec    edx
  4464be:	stos   BYTE PTR es:[edi],al
  4464bf:	xor    al,0x68
  4464c1:	sub    cl,cl
  4464c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4464c4:	(bad)  
  4464c5:	cdq    
  4464c6:	lods   al,BYTE PTR ds:[esi]
  4464c7:	stos   BYTE PTR es:[edi],al
  4464c8:	mov    al,ds:0xab4a6cb0
  4464cd:	out    0xb0,al
  4464cf:	test   DWORD PTR [ebx],0x9ce3a88
  4464d5:	mov    al,ds:0x6fee2516
  4464da:	dec    eax
  4464db:	fist   WORD PTR [ecx-0x17]
  4464de:	(bad)  
  4464df:	out    dx,al
  4464e0:	mov    cl,0x30
  4464e2:	sar    DWORD PTR [edi+0x68fb7433],cl
  4464e8:	pop    ds
  4464e9:	jmp    0xfc4b:0xd8e544cc
  4464f0:	jl     0x44649a
  4464f2:	push   edi
  4464f3:	pop    edi
  4464f4:	popf   
  4464f5:	pop    esp
  4464f6:	and    al,0x86
  4464f8:	jge    0x446495
  4464fa:	jp     0x44649a
  4464fc:	lds    ecx,FWORD PTR [edi-0x30]
  4464ff:	sahf   
  446500:	xchg   esi,eax
  446501:	mov    dl,0xf
  446503:	outs   dx,DWORD PTR ds:[esi]
  446504:	cmp    eax,0x9d4231bf
  446509:	in     al,0xfa
  44650b:	jbe    0x446560
  44650d:	retf   0xf722
  446510:	fs test al,0x10
  446513:	out    0x3d,eax
  446515:	or     dl,cl
  446517:	mov    ebp,0x9da7f4eb
  44651c:	sti    
  44651d:	arpl   WORD PTR [ecx+ebx*1+0x663d1fa4],sp
  446524:	cmp    DWORD PTR [esi],ebx
  446526:	push   cs
  446527:	add    ah,BYTE PTR [ebx]
  446529:	out    0xb8,al
  44652b:	mov    eax,cs
  44652d:	jg     0x44656a
  44652f:	pop    edi
  446530:	cmp    eax,0xc6c478cb
  446535:	sub    ecx,DWORD PTR [ecx]
  446537:	mov    ecx,0xed8d0caa
  44653c:	sub    al,0x26
  44653e:	sub    cl,dl
  446540:	mov    dl,0x79
  446542:	push   0xffffffca
  446544:	or     BYTE PTR [edi+0x3f],0xd2
  446548:	xor    ebx,0xe39c086d
  44654e:	pop    eax
  44654f:	xor    BYTE PTR [edi-0xb],0xa
  446553:	das    
  446554:	jmp    FWORD PTR [eax-0x5b0c4b4]
  44655a:	inc    esp
  44655b:	adc    DWORD PTR [esi],edi
  44655d:	bound  eax,QWORD PTR [ebp-0x1e92f388]
  446563:	les    edx,FWORD PTR [eax-0x2d]
  446566:	mov    bh,0x1c
  446568:	pop    esp
  446569:	lar    ecx,WORD PTR [edi+0x1021db62]
  446570:	fmul   DWORD PTR [ecx]
  446572:	sub    ebp,esp
  446574:	mov    ch,0xbb
  446576:	and    eax,0x4cfa2430
  44657b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44657c:	lods   eax,DWORD PTR ds:[esi]
  44657d:	mov    fs,WORD PTR [ecx]
  44657f:	stos   DWORD PTR es:[edi],eax
  446580:	mov    dl,0xa5
  446582:	lock stos BYTE PTR es:[edi],al
  446584:	push   eax
  446585:	retf   0xf458
  446588:	mov    ah,0x22
  44658a:	addr16 cs pop esp
  44658d:	push   ecx
  44658e:	mov    bh,0xea
  446590:	jmp    0x5e2846d8
  446595:	gs (bad) 
  446597:	div    ebx
  446599:	enter  0xcac4,0xa5
  44659d:	xchg   BYTE PTR [eax],al
  44659f:	jmp    0x47659354
  4465a4:	adc    cl,ah
  4465a6:	add    BYTE PTR [edi+0x6],al
  4465a9:	dec    edx
  4465aa:	stos   BYTE PTR es:[edi],al
  4465ab:	sub    edx,ecx
  4465ad:	inc    ecx
  4465ae:	xchg   edi,eax
  4465af:	mov    cl,0xc1
  4465b1:	test   eax,0xef54fb51
  4465b6:	mov    eax,ebp
  4465b8:	add    bl,BYTE PTR [edi-0x70bde277]
  4465be:	and    al,0xbc
  4465c0:	or     al,0x4e
  4465c2:	sub    BYTE PTR [ecx+ecx*2+0x5c],ch
  4465c6:	data16 jecxz 0x4465ae
  4465c9:	retf   0x6dd4
  4465cc:	lods   al,BYTE PTR ds:[esi]
  4465cd:	retf   0x9a27
  4465d0:	retf   0xaa08
  4465d3:	cs dec ecx
  4465d5:	ins    DWORD PTR es:[edi],dx
  4465d6:	mov    WORD PTR [edi+0x24290071],es
  4465dc:	mov    ah,0xb6
  4465de:	mov    bl,0x7c
  4465e0:	push   ds
  4465e1:	repz cmp ebp,DWORD PTR [esi]
  4465e4:	xchg   edx,eax
  4465e5:	sub    eax,0xbfbfe88e
  4465ea:	repnz and dl,BYTE PTR [ebp-0x19]
  4465ee:	icebp  
  4465ef:	adc    al,0xe7
  4465f1:	mov    esp,0x8bd81b55
  4465f6:	pusha  
  4465f7:	ja     0x44660f
  4465f9:	jp     0x44659f
  4465fb:	jmp    FWORD PTR [edi-0x436250ae]
  446601:	std    
  446602:	or     ah,dh
  446604:	popf   
  446605:	dec    ebx
  446606:	adc    edx,DWORD PTR [eax-0x365519a8]
  44660c:	jno    0x446686
  44660e:	ja     0x446609
  446610:	scas   eax,DWORD PTR es:[edi]
  446611:	mov    al,ds:0x8f034203
  446616:	ja     0x4465dc
  446618:	mov    bh,0x82
  44661a:	mov    edx,0xc681e179
  44661f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446620:	xchg   edx,eax
  446621:	and    DWORD PTR [edi],0x28
  446624:	ss sub eax,0x59709430
  44662a:	sub    eax,0xd9a842b3
  44662f:	cwde   
  446630:	xchg   ebx,eax
  446631:	mov    DWORD PTR [esi],ebp
  446633:	and    BYTE PTR [edx+0x345b4be0],0x20
  44663a:	scas   eax,DWORD PTR es:[edi]
  44663b:	sub    eax,0x2be4fc6f
  446640:	enter  0xf4aa,0xf1
  446644:	jg     0x44665c
  446646:	jns    0x446678
  446648:	pop    edi
  446649:	loope  0x4465cc
  44664b:	pop    ecx
  44664c:	in     al,0x11
  44664e:	dec    esi
  44664f:	ret    
  446650:	pop    ecx
  446651:	pop    ebp
  446652:	arpl   bx,sp
  446654:	fsubr  DWORD PTR [edi+ecx*8]
  446657:	hlt    
  446658:	jg     0x44665e
  44665a:	sbb    esi,DWORD PTR [edi]
  44665c:	mov    BYTE PTR [ecx],ah
  44665e:	leave  
  44665f:	out    dx,eax
  446660:	scas   eax,DWORD PTR es:[edi]
  446661:	push   es
  446662:	push   esp
  446663:	mov    bh,0xc8
  446665:	int3   
  446666:	shl    edi,1
  446668:	mov    edx,0x5b3ab37a
  44666d:	fwait
  44666e:	jp     0x446636
  446670:	stos   DWORD PTR es:[edi],eax
  446671:	(bad)  
  446672:	dec    ecx
  446673:	jmp    0xf9ff:0x4a47f372
  44667a:	or     dh,dl
  44667c:	fnstenv [esi-0x66]
  44667f:	xor    ch,BYTE PTR [eax-0x3b60a049]
  446685:	xor    esp,DWORD PTR [eax+0x73]
  446688:	fidivr WORD PTR [esi-0x12c1d2e3]
  44668e:	shl    esi,0xda
  446691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446692:	enter  0x5f67,0xd2
  446696:	mov    dl,0x1b
  446698:	outs   dx,BYTE PTR ds:[esi]
  446699:	mov    bh,0x72
  44669b:	ins    DWORD PTR es:[edi],dx
  44669c:	mov    ch,0xd3
  44669e:	adc    ebx,DWORD PTR [edi-0x63]
  4466a1:	adc    DWORD PTR [ebx],ebx
  4466a3:	scas   al,BYTE PTR es:[edi]
  4466a4:	push   esi
  4466a5:	test   al,0xee
  4466a7:	outs   dx,DWORD PTR ds:[esi]
  4466a8:	dec    esi
  4466a9:	ret    
  4466aa:	mov    ebp,0x4117684a
  4466af:	rol    DWORD PTR gs:[ebx+0x42],1
  4466b3:	pop    esi
  4466b4:	mov    bl,0xee
  4466b6:	int3   
  4466b7:	arpl   WORD PTR ds:0x85ea43b,bx
  4466bd:	test   al,0x89
  4466bf:	cmp    edx,ecx
  4466c1:	sub    edx,DWORD PTR [esi*4-0x46e757dc]
  4466c8:	fisub  WORD PTR [ecx+0x66417395]
  4466ce:	cmp    BYTE PTR [ebx],ah
  4466d0:	outs   dx,DWORD PTR ds:[esi]
  4466d1:	and    ch,0xe0
  4466d4:	mov    ecx,0x4ca8a798
  4466d9:	xlat   BYTE PTR ds:[ebx]
  4466da:	or     BYTE PTR [ecx-0x73c73c2a],bl
  4466e0:	addr16 jb 0x4466bc
  4466e3:	jns    0x446687
  4466e5:	jne    0x4466cf
  4466e7:	sbb    bh,ch
  4466e9:	dec    esp
  4466ea:	add    al,0x7a
  4466ec:	or     BYTE PTR [edi+0x40a03ec3],al
  4466f2:	idiv   BYTE PTR [eax+0x1f]
  4466f5:	fcomp  DWORD PTR [ecx-0x26]
  4466f8:	push   ss
  4466f9:	stc    
  4466fa:	stos   DWORD PTR es:[edi],eax
  4466fb:	ss dec eax
  4466fd:	inc    ecx
  4466fe:	xchg   ebx,eax
  4466ff:	daa    
  446700:	(bad)  
  446702:	and    eax,esp
  446704:	lock hlt 
  446706:	cmp    DWORD PTR [ecx+0x3f],ebx
  446709:	gs jbe 0x4466f7
  44670c:	xor    al,0x61
  44670e:	retf   
  44670f:	pop    edx
  446710:	adc    eax,0xd5d35c76
  446715:	cli    
  446716:	stos   BYTE PTR es:[edi],al
  446717:	mov    ebx,0xb20cfc53
  44671c:	or     al,0x2b
  44671e:	and    DWORD PTR [ecx+0x625e0e],edx
  446724:	out    0x8,eax
  446726:	addr16 lock inc eax
  446729:	and    eax,0xc83d1d35
  44672e:	popa   
  44672f:	jmp    0x44678f
  446731:	arpl   WORD PTR [ebx],si
  446733:	lock lods eax,DWORD PTR ds:[esi]
  446735:	inc    esi
  446736:	jle    0x4466f1
  446738:	pushf  
  446739:	push   esp
  44673a:	dec    eax
  44673b:	lods   eax,DWORD PTR ds:[esi]
  44673c:	mov    eax,ds:0xd6304c56
  446741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446742:	mov    eax,ds:0xe3d1883b
  446747:	pop    ds
  446748:	sbb    esi,DWORD PTR [ebx+ecx*8+0x7a]
  44674c:	fild   WORD PTR [eax]
  44674e:	sub    BYTE PTR [ebx],ch
  446750:	cmp    DWORD PTR ds:0xd05eff93,ebp
  446756:	adc    BYTE PTR [esp+ebx*4+0x13],al
  44675a:	pop    edi
  44675b:	add    eax,0xddec11a5
  446760:	xchg   ebp,eax
  446761:	mov    eax,ds:0xcc230944
  446766:	sahf   
  446767:	test   al,0xc2
  446769:	xor    eax,0xb579a7dc
  44676e:	jbe    0x1f9bffb9
  446774:	in     eax,0x14
  446776:	xor    BYTE PTR [esi-0x10bc31f4],0xf9
  44677d:	adc    bl,ah
  44677f:	xor    DWORD PTR [eax],ebx
  446781:	add    DWORD PTR [ecx],ecx
  446783:	ror    BYTE PTR [edx-0x64df0b09],cl
  446789:	inc    ecx
  44678a:	or     DWORD PTR [esi+0x4a],eax
  44678d:	add    BYTE PTR fs:[edx+0x1f],dh
  446791:	repz mov al,ds:0x377997aa
  446797:	add    ebp,ebp
  446799:	stc    
  44679a:	cmp    DWORD PTR [esi+ecx*1+0x1c],esp
  44679e:	jbe    0x446745
  4467a0:	rcl    BYTE PTR [ebp+0x68],1
  4467a3:	cmp    al,BYTE PTR [edi-0x64750131]
  4467a9:	outs   dx,BYTE PTR ds:[esi]
  4467aa:	fld    QWORD PTR [edi]
  4467ac:	mov    ecx,0xbcd2ce57
  4467b1:	dec    ebp
  4467b2:	(bad)  
  4467b3:	adc    ebx,esi
  4467b5:	add    al,0xbb
  4467b7:	jno    0x4467c2
  4467b9:	xlat   BYTE PTR ds:[ebx]
  4467ba:	mov    al,BYTE PTR [ebx+0x50f27a87]
  4467c0:	jl     0x446816
  4467c2:	mov    esi,0xc1890a0
  4467c7:	ins    BYTE PTR es:[edi],dx
  4467c8:	fsubr  DWORD PTR [esi-0x6e2ec4c0]
  4467ce:	test   al,0x7a
  4467d0:	fbstp  TBYTE PTR [eax]
  4467d2:	pop    ebx
  4467d3:	(bad)  
  4467d4:	adc    bh,BYTE PTR [eax]
  4467d6:	jnp    0x44681f
  4467d8:	fidiv  DWORD PTR [edi+0x29]
  4467db:	mov    ebp,0x1c918760
  4467e0:	xchg   DWORD PTR [edi],esp
  4467e2:	jns    0x446786
  4467e4:	cmp    cl,BYTE PTR [ebx-0x1dd0bcb]
  4467ea:	jae    0x446821
  4467ec:	hlt    
  4467ed:	iret   
  4467ee:	adc    esi,DWORD PTR [eax+0x789adfd9]
  4467f4:	pusha  
  4467f5:	adc    dh,BYTE PTR [esi+eiz*8-0x1d80c36b]
  4467fc:	sub    eax,0x400f71bc
  446801:	test   al,0xc8
  446803:	add    al,0x33
  446805:	in     eax,dx
  446806:	inc    edi
  446807:	push   ecx
  446808:	or     eax,0xa2cfa189
  44680d:	push   ebp
  44680e:	shl    BYTE PTR [esi-0x8],1
  446811:	adc    al,0x51
  446813:	dec    ecx
  446814:	in     al,0x4a
  446816:	push   esp
  446817:	mov    esp,0xdc0a358f
  44681c:	mov    ebx,0xc6164cb0
  446821:	call   0x953c:0x7c102444
  446828:	push   edx
  446829:	push   cs
  44682a:	lock xchg edi,eax
  44682c:	or     ecx,DWORD PTR [ebp+0xd]
  44682f:	xor    ebp,DWORD PTR [ecx-0x7de4a9a5]
  446835:	dec    ecx
  446836:	push   ebp
  446837:	lods   al,BYTE PTR ds:[esi]
  446838:	adc    DWORD PTR [esi-0x66],esp
  44683b:	xor    DWORD PTR [edi+ebp*1-0x44],eax
  44683f:	mov    esi,0x2c772390
  446844:	or     dh,BYTE PTR [ebp+0x7d]
  446847:	jp     0x4467f4
  446849:	out    0xda,al
  44684b:	cmp    DWORD PTR [edx+0x3afb6710],ecx
  446851:	psadbw mm4,QWORD PTR [edi+0x6943a88e]
  446858:	call   0xf7e4a614
  44685d:	call   0x705c3e71
  446862:	push   edx
  446863:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446865:	sbb    DWORD PTR [ebx+0x46656d4b],ebp
  44686b:	xlat   BYTE PTR ds:[ebx]
  44686c:	ror    BYTE PTR [edi-0x5d45b1f3],cl
  446872:	adc    eax,0x8219bad0
  446877:	xchg   esi,eax
  446878:	inc    ebp
  446879:	ret    
  44687a:	call   0xb069402b
  44687f:	xor    al,0x1a
  446881:	mov    dh,0xe8
  446883:	in     al,0x3
  446885:	mov    ah,0x27
  446887:	idiv   BYTE PTR [edx]
  446889:	aad    0x7b
  44688b:	sub    eax,0x2527e035
  446890:	into   
  446891:	ja     0x44682e
  446893:	inc    ebp
  446894:	sbb    bh,bh
  446896:	pop    ds
  446897:	rcl    DWORD PTR [ecx+eiz*2+0x30],1
  44689b:	cmp    cl,BYTE PTR [ebp+0x7]
  44689e:	cmp    BYTE PTR [ebx-0x3f],0xec
  4468a2:	push   ds
  4468a3:	mov    edx,0x2a28b3c9
  4468a8:	sub    esp,DWORD PTR [ebx-0x48]
  4468ab:	arpl   WORD PTR [ebp-0x23],cx
  4468ae:	adc    ah,BYTE PTR [ebp+0x30]
  4468b1:	clc    
  4468b2:	gs dec edx
  4468b4:	(bad)  
  4468b5:	jecxz  0x44690f
  4468b7:	pop    esi
  4468b8:	hlt    
  4468b9:	in     eax,dx
  4468ba:	das    
  4468bb:	mov    ds:0xca1ea47d,al
  4468c0:	xchg   ecx,eax
  4468c1:	sahf   
  4468c2:	in     al,dx
  4468c3:	daa    
  4468c4:	or     eax,0xc1c84f8b
  4468c9:	xchg   BYTE PTR [edx+ebx*4],cl
  4468cc:	xchg   DWORD PTR [ebx],ebp
  4468ce:	adc    eax,0xd1f9cd7c
  4468d3:	add    al,0x4b
  4468d5:	mov    WORD PTR [ecx-0x27],?
  4468d8:	inc    eax
  4468d9:	xchg   ebx,eax
  4468da:	daa    
  4468db:	call   0xb669983f
  4468e0:	test   bh,0x7e
  4468e3:	cmp    DWORD PTR [edi+0x1cddc6],0xa2130282
  4468ed:	cmp    eax,0x56de5bfe
  4468f2:	jb     0x4468ff
  4468f4:	cmp    ch,BYTE PTR [ecx-0x69db1b94]
  4468fa:	mov    cl,0x48
  4468fc:	cmp    esp,DWORD PTR [eax-0x4a02d6c2]
  446902:	xchg   ecx,eax
  446903:	daa    
  446904:	rcr    edi,cl
  446906:	cmp    al,0x19
  446908:	lock jecxz 0x446989
  44690b:	sub    BYTE PTR [ebx-0x2b179265],0x91
  446912:	cmp    al,0x51
  446914:	pop    esp
  446915:	sub    DWORD PTR [edx-0x7e997e62],esi
  44691b:	es pop eax
  44691d:	dec    ecx
  44691e:	adc    esi,edx
  446920:	push   DWORD PTR ds:0xa563dba7
  446926:	cli    
  446927:	and    ah,BYTE PTR [eax]
  446929:	or     BYTE PTR [ecx-0x4fe72e0],ah
  44692f:	xor    al,0x4c
  446931:	push   ss
  446932:	push   esp
  446933:	adc    ah,BYTE PTR [eax-0x7cc5c8cd]
  446939:	add    BYTE PTR [edx-0x20],dh
  44693c:	jns    0x44695f
  44693e:	enter  0x577d,0x12
  446942:	xlat   BYTE PTR ds:[ebx]
  446943:	mov    ?,edi
  446945:	mov    dh,0xbd
  446947:	lock push 0xca2e17f9
  44694d:	lea    ecx,[esi]
  44694f:	dec    ecx
  446950:	sbb    dh,BYTE PTR [ebx-0x12]
  446953:	dec    eax
  446954:	jge    0x446983
  446956:	xor    DWORD PTR [eax-0x23],esi
  446959:	stc    
  44695a:	mov    esi,0xcd0d1450
  44695f:	(bad)  
  446960:	xor    eax,0x69b8c9cc
  446965:	pop    edx
  446966:	mov    ds,WORD PTR [esi-0x7b]
  446969:	add    al,0x1b
  44696b:	sub    cl,BYTE PTR [ecx-0x2c]
  44696e:	inc    esi
  44696f:	fidivr DWORD PTR [esi]
  446971:	cld    
  446972:	sub    al,0xc3
  446974:	cs ret 
  446976:	ret    
  446977:	inc    edi
  446978:	push   ss
  446979:	outs   dx,DWORD PTR ds:[esi]
  44697a:	repnz int3 
  44697c:	lods   eax,DWORD PTR ds:[esi]
  44697d:	fs aaa 
  44697f:	xor    edx,esi
  446981:	leave  
  446982:	int3   
  446983:	and    dl,bl
  446985:	mov    ebx,0x6e5aaa4d
  44698a:	aas    
  44698b:	je     0x446981
  44698d:	shl    DWORD PTR [ebx+0x6d],1
  446990:	mov    ebx,0xe8b92f11
  446995:	fdiv   DWORD PTR ds:0xee04ed9a
  44699b:	push   esp
  44699c:	(bad)  [edi+0x2a]
  44699f:	ins    BYTE PTR es:[edi],dx
  4469a0:	push   esp
  4469a1:	icebp  
  4469a2:	sub    DWORD PTR [edi+edx*2],esp
  4469a5:	jae    0x4469c6
  4469a7:	pop    ecx
  4469a8:	sub    bl,BYTE PTR [esi+0x456bec94]
  4469ae:	xchg   ebp,eax
  4469af:	stos   BYTE PTR es:[edi],al
  4469b0:	scas   al,BYTE PTR es:[edi]
  4469b1:	mov    dl,0x84
  4469b3:	xchg   ah,ch
  4469b5:	aaa    
  4469b6:	in     al,dx
  4469b7:	jnp    0x446a1a
  4469b9:	test   eax,0xaccde90
  4469be:	xor    al,0xc4
  4469c0:	add    ebx,esp
  4469c2:	scas   al,BYTE PTR es:[edi]
  4469c3:	dec    ebx
  4469c4:	mov    bl,0x99
  4469c6:	fdivr  QWORD PTR [ebx-0x48]
  4469c9:	test   DWORD PTR [edx+0x17d7746e],0x7b9039bd
  4469d3:	adc    DWORD PTR [edi+0x31],0xffffffc4
  4469d7:	dec    esi
  4469d8:	xlat   BYTE PTR ds:[ebx]
  4469d9:	lock xlat BYTE PTR ds:[ebx]
  4469db:	in     eax,0x8f
  4469dd:	adc    DWORD PTR [ebx],esi
  4469df:	pop    eax
  4469e0:	or     DWORD PTR [esi+0xf194b27],eax
  4469e6:	push   ss
  4469e7:	ds dec ecx
  4469e9:	sbb    DWORD PTR [ecx],esp
  4469eb:	jp     0x4469af
  4469ed:	das    
  4469ee:	arpl   WORD PTR [edx],bx
  4469f0:	das    
  4469f1:	xor    al,0xe2
  4469f3:	test   eax,0x9a1d5079
  4469f8:	in     al,0x17
  4469fa:	xchg   edi,eax
  4469fb:	push   esp
  4469fc:	test   al,0x16
  4469fe:	out    dx,eax
  4469ff:	retf   0x506c
  446a02:	stos   BYTE PTR es:[edi],al
  446a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446a04:	idiv   BYTE PTR [ebx+0x34]
  446a07:	xchg   esp,eax
  446a08:	or     ebx,DWORD PTR [edi+ecx*8]
  446a0b:	(bad)  
  446a0c:	inc    eax
  446a0d:	mov    al,0x43
  446a0f:	clc    
  446a10:	imul   ebx,DWORD PTR [ebx],0x27
  446a13:	adc    al,0xee
  446a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446a16:	loopne 0x446a1d
  446a18:	aam    0xf8
  446a1a:	inc    edx
  446a1b:	mov    dh,0x37
  446a1d:	enter  0x2540,0x66
  446a21:	fwait
  446a22:	fwait
  446a23:	mov    eax,ds:0x44619e85
  446a28:	lahf   
  446a29:	pop    esi
  446a2a:	xchg   esp,eax
  446a2b:	in     al,0xa9
  446a2d:	push   es
  446a2e:	or     BYTE PTR [esi+ecx*4],ah
  446a31:	mov    ebx,ss
  446a33:	push   esp
  446a34:	int    0xe9
  446a36:	pushf  
  446a37:	shl    al,cl
  446a39:	adc    BYTE PTR [esi],ch
  446a3b:	test   al,0x47
  446a3d:	mov    ds:0x83027eb2,al
  446a42:	ins    DWORD PTR es:[edi],dx
  446a43:	inc    eax
  446a44:	bound  edi,QWORD PTR [esi+0x22aa5622]
  446a4a:	loop   0x4469f4
  446a4c:	cmp    al,0x4f
  446a4e:	push   esi
  446a4f:	lahf   
  446a50:	cwde   
  446a51:	pop    ebx
  446a52:	push   ds
  446a53:	fcomip st,st(6)
  446a55:	out    0xb8,eax
  446a57:	mov    ds:0x40961faf,al
  446a5c:	test   DWORD PTR [eax-0x31],0xb66ffd5
  446a63:	fadd   QWORD PTR [esi]
  446a65:	lea    edi,[ebp+0x2db08018]
  446a6b:	or     eax,0xb3c21c42
  446a70:	sar    al,0x45
  446a73:	sbb    eax,0x582a1831
  446a78:	pop    eax
  446a79:	repz xchg ebx,eax
  446a7b:	adc    edx,DWORD PTR [eax-0x4da08cd]
  446a81:	sar    BYTE PTR [esi+0x4b98a013],cl
  446a87:	pop    ebx
  446a88:	(bad)  
  446a89:	leave  
  446a8a:	or     eax,0xd275ef9c
  446a8f:	inc    ebx
  446a90:	xchg   ebx,eax
  446a91:	adc    edx,DWORD PTR [eax+0x7c]
  446a94:	push   ebp
  446a95:	mov    cl,0x2f
  446a97:	jb     0x446aa1
  446a99:	mov    edx,0xb3ba1118
  446a9e:	sub    al,0x98
  446aa0:	(bad)  
  446aa1:	xor    ch,bl
  446aa3:	outs   dx,BYTE PTR ds:[esi]
  446aa4:	cld    
  446aa5:	mov    ah,0xd
  446aa7:	inc    edx
  446aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446aa9:	cmc    
  446aaa:	adc    ch,BYTE PTR [ebp+0x2]
  446aad:	inc    ecx
  446aae:	add    DWORD PTR [eax+0x5ef464d6],0xffffffff
  446ab5:	test   DWORD PTR [edx-0x584b7d9f],ecx
  446abb:	sub    al,0x41
  446abd:	ins    DWORD PTR es:[edi],dx
  446abe:	pop    DWORD PTR [edi+ecx*4+0x77]
  446ac2:	xchg   ebp,eax
  446ac3:	or     BYTE PTR [ebp-0x667ff423],0xd4
  446aca:	imul   esi,DWORD PTR [edi+0x53],0xffffffc4
  446ace:	ficomp DWORD PTR [edi]
  446ad0:	into   
  446ad1:	mov    edx,DWORD PTR [esi]
  446ad3:	xchg   ebx,eax
  446ad4:	out    dx,eax
  446ad5:	clc    
  446ad6:	or     eax,0xfb4fcece
  446adb:	cmp    eax,0x9e0799ae
  446ae0:	outs   dx,BYTE PTR ds:[esi]
  446ae1:	push   eax
  446ae3:	retf   
  446ae4:	call   0x20e3:0x1470724e
  446aeb:	xchg   esi,eax
  446aec:	xor    ecx,0x19
  446aef:	lea    ebx,[edi+0x13]
  446af2:	sahf   
  446af3:	int3   
  446af4:	and    BYTE PTR [esi-0x73],cl
  446af7:	inc    eax
  446af8:	dec    eax
  446af9:	cld    
  446afa:	in     eax,0x69
  446afc:	and    bh,BYTE PTR ss:[edx+ecx*1]
  446b00:	cmp    bh,bh
  446b02:	lahf   
  446b03:	and    DWORD PTR [edx],eax
  446b05:	jnp    0x446b55
  446b07:	dec    esi
  446b08:	jnp    0x446b47
  446b0a:	xor    eax,0x4911329a
  446b0f:	sbb    ah,dl
  446b11:	inc    edx
  446b12:	mov    al,ds:0x24aa60e2
  446b17:	jmp    0xf8838ee1
  446b1c:	or     al,0xbd
  446b1e:	sub    al,0xa1
  446b20:	sub    al,0x4b
  446b22:	xor    eax,0xb262b596
  446b27:	outs   dx,WORD PTR ds:[esi]
  446b29:	jp     0x446ad9
  446b2b:	retf   
  446b2c:	rcl    DWORD PTR [edx],0x43
  446b2f:	ret    
  446b30:	fcom   st(2)
  446b32:	frstor [esi+0x35]
  446b35:	(bad)  
  446b36:	fistp  WORD PTR [edx+0x771fa9ab]
  446b3c:	lods   al,BYTE PTR ds:[esi]
  446b3d:	mov    ebp,esi
  446b3f:	fsubr  DWORD PTR [edx+0x14770564]
  446b45:	out    dx,al
  446b46:	cmc    
  446b47:	xchg   edi,eax
  446b48:	mov    eax,0x65865814
  446b4d:	mov    al,ds:0x226ed3d7
  446b52:	sbb    eax,0x6eae5e23
  446b57:	and    al,0x3d
  446b59:	dec    ecx
  446b5a:	(bad)  
  446b5b:	out    0x66,eax
  446b5d:	out    dx,eax
  446b5e:	test   BYTE PTR [esi-0x526b9f27],dh
  446b64:	pop    ebp
  446b65:	mov    ebx,0xadf26fc3
  446b6a:	mov    cl,0x82
  446b6c:	mov    ah,0x80
  446b6e:	stos   BYTE PTR es:[edi],al
  446b6f:	fwait
  446b70:	mov    ecx,DWORD PTR [edi-0x3e0be2b4]
  446b76:	(bad)  
  446b77:	icebp  
  446b78:	mov    al,0xe8
  446b7a:	sti    
  446b7b:	or     eax,0x26a9a8b2
  446b80:	dec    edi
  446b81:	ds mov dl,0x9c
  446b84:	inc    ecx
  446b85:	in     eax,0x6c
  446b87:	fwait
  446b88:	inc    esi
  446b89:	retf   
  446b8a:	rcl    BYTE PTR [edi+0x72fc042d],cl
  446b90:	and    edi,edi
  446b92:	mov    ecx,0xd87b3f7e
  446b97:	retf   
  446b98:	outs   dx,DWORD PTR ds:[esi]
  446b99:	out    0xed,al
  446b9b:	pop    ebx
  446b9c:	mov    BYTE PTR [esi+0x12],dh
  446b9f:	fdivr  QWORD PTR [edi]
  446ba1:	out    0xa5,eax
  446ba3:	mov    cl,0xc8
  446ba5:	bound  eax,QWORD PTR [esp+esi*1]
  446ba8:	mov    edi,0xb7278daf
  446bad:	pop    ss
  446bae:	and    BYTE PTR [esp+ebx*8-0xa9fb991],0xd2
  446bb6:	in     al,0xd3
  446bb8:	sub    BYTE PTR ds:0x987835c1,dh
  446bbe:	sbb    al,0x5e
  446bc0:	pop    ss
  446bc1:	ds clc 
  446bc3:	push   ebp
  446bc4:	push   ecx
  446bc5:	loope  0x446c34
  446bc7:	stos   DWORD PTR es:[edi],eax
  446bc8:	loopne 0x446bca
  446bca:	les    edx,FWORD PTR [ecx-0x81b4eaf]
  446bd0:	push   ds
  446bd1:	inc    eax
  446bd2:	sbb    eax,0xf0aaf13f
  446bd7:	cli    
  446bd8:	in     eax,0x3c
  446bda:	lods   eax,DWORD PTR ds:[esi]
  446bdb:	out    dx,eax
  446bdc:	inc    edx
  446bdd:	bound  eax,QWORD PTR [ecx+0x5f]
  446be0:	jg     0x446bb8
  446be2:	mov    cl,0xe4
  446be4:	aaa    
  446be5:	pop    ebx
  446be6:	les    edi,FWORD PTR [esi]
  446be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446be9:	stos   DWORD PTR es:[edi],eax
  446bea:	dec    esi
  446beb:	sub    BYTE PTR [ecx],bl
  446bed:	pop    ecx
  446bee:	mov    eax,DWORD PTR [edx+0x5]
  446bf1:	in     al,dx
  446bf2:	sbb    eax,DWORD PTR [ebx-0x11e365b2]
  446bf8:	cli    
  446bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446bfa:	pop    ds
  446bfb:	test   ebx,0x3a088eac
  446c01:	jno    0x446bb9
  446c03:	dec    ecx
  446c04:	fdivr  DWORD PTR [esp+edi*8+0x56]
  446c08:	out    0xb7,eax
  446c0a:	fld    DWORD PTR [ebx]
  446c0c:	inc    eax
  446c0d:	adc    BYTE PTR [esi+ebp*4],dh
  446c10:	cmp    eax,0xe0d07338
  446c15:	mov    ecx,0x225d9bfb
  446c1a:	dec    ebx
  446c1b:	imul   edi,DWORD PTR [esi+0xa],0xfffffff5
  446c1f:	bound  ebx,QWORD PTR [esi]
  446c21:	adc    cl,al
  446c23:	les    ecx,FWORD PTR [ebx]
  446c25:	dec    edx
  446c26:	in     eax,0x7f
  446c28:	or     eax,0xd1aa874d
  446c2d:	mov    al,ds:0x9f2780fc
  446c32:	fsub   st,st(6)
  446c34:	pop    esi
  446c35:	push   0xc6d1a624
  446c3a:	mov    esi,0x9cd92185
  446c3f:	cmovo  edi,DWORD PTR [esi]
  446c42:	cwde   
  446c43:	bnd jmp 0x446bd0
  446c46:	sbb    BYTE PTR [eax+eax*8+0xe],dl
  446c4a:	(bad)  
  446c4b:	(bad)  
  446c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446c4d:	inc    edx
  446c4e:	jns    0x446c07
  446c50:	nop
  446c51:	add    DWORD PTR [eax+0x68],0x27
  446c55:	nop
  446c56:	nop
  446c57:	outs   dx,BYTE PTR ds:[esi]
  446c58:	cmp    BYTE PTR [edx],bl
  446c5a:	mov    dl,0xcf
  446c5c:	dec    esp
  446c5d:	pop    ebx
  446c5e:	gs sahf 
  446c60:	jne    0x446cb1
  446c62:	stos   DWORD PTR es:[edi],eax
  446c63:	dec    eax
  446c64:	repnz les esi,FWORD PTR [ecx-0x7c]
  446c68:	(bad)  
  446c69:	lods   eax,DWORD PTR ds:[esi]
  446c6a:	lds    edx,FWORD PTR [ecx+0x8]
  446c6d:	ins    BYTE PTR es:[edi],dx
  446c6e:	pop    ebp
  446c6f:	mov    al,ds:0x3cc00a4d
  446c74:	shl    BYTE PTR [ebx],0xa6
  446c77:	ret    
  446c78:	sbb    al,0x32
  446c7a:	lds    ebx,FWORD PTR [ebp+0x431cd4b0]
  446c80:	jnp    0x446cee
  446c82:	or     BYTE PTR [eax-0x7c441356],dl
  446c88:	fdivrp st(5),st
  446c8a:	jmp    0xd0cf:0x9cae9f6d
  446c91:	inc    edi
  446c92:	jne    0x446c9b
  446c94:	mov    edx,0xfb814141
  446c99:	daa    
  446c9a:	(bad)  
  446c9b:	out    dx,eax
  446c9c:	add    eax,0xbf83c911
  446ca1:	inc    esp
  446ca2:	shl    edx,1
  446ca4:	push   esp
  446ca5:	cmp    DWORD PTR [ecx+0x8b8d7af],edi
  446cab:	dec    ecx
  446cac:	inc    edi
  446cad:	sub    ch,BYTE PTR [ebp-0x42]
  446cb0:	(bad)  
  446cb1:	xchg   esp,eax
  446cb2:	cmp    esi,DWORD PTR [ebp-0x7e1bd22]
  446cb8:	jb     0x446c4f
  446cba:	fst    DWORD PTR [eax+0x71]
  446cbd:	retf   0xfd6b
  446cc0:	add    edi,esp
  446cc2:	out    dx,eax
  446cc3:	mov    cl,0xb0
  446cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446cc6:	dec    ebp
  446cc7:	out    dx,eax
  446cc8:	stos   DWORD PTR es:[edi],eax
  446cc9:	jae    0x446cd8
  446ccb:	jns    0x446d0f
  446ccd:	xchg   ecx,eax
  446cce:	repz and al,0x67
  446cd1:	pcmpeqb mm0,QWORD PTR [edx-0x1aa9b2fd]
  446cd8:	imul   edi,eax,0xffffffcc
  446cdb:	addr16 push ebx
  446cdd:	push   ss
  446cde:	jae    0x446d56
  446ce0:	div    BYTE PTR [edi]
  446ce2:	jmp    0x446c77
  446ce4:	jb     0x446cfa
  446ce6:	outs   dx,BYTE PTR ds:[esi]
  446ce7:	gs scas al,BYTE PTR es:[edi]
  446ce9:	mov    ebp,0xf996a21d
  446cee:	adc    ch,BYTE PTR [edi+0x4]
  446cf1:	lods   eax,DWORD PTR ds:[esi]
  446cf2:	push   cs
  446cf3:	xchg   esp,eax
  446cf4:	adc    bh,dh
  446cf6:	(bad)  [eax-0x3889840e]
  446cfc:	cwde   
  446cfd:	shr    DWORD PTR [edi],cl
  446cff:	mov    esi,0x689291f1
  446d04:	retf   
  446d05:	shr    bl,0x1b
  446d08:	inc    esp
  446d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446d0a:	pushf  
  446d0b:	or     DWORD PTR [edi+0x11d0f5aa],edi
  446d11:	shr    BYTE PTR [eax+edi*2+0x7c],cl
  446d15:	pushf  
  446d16:	shl    cl,0xdd
  446d19:	and    eax,0x981e46d9
  446d1e:	push   ecx
  446d1f:	push   esp
  446d20:	popa   
  446d21:	xor    BYTE PTR [eax-0x56e6c967],ah
  446d27:	sub    al,0xb6
  446d29:	dec    esi
  446d2a:	xlat   BYTE PTR ds:[ebx]
  446d2b:	push   ss
  446d2c:	jb     0x446d26
  446d2e:	jmp    0x446d3a
  446d30:	add    BYTE PTR [edx-0x2],ah
  446d33:	jg     0x446d82
  446d35:	imul   ebp,DWORD PTR [ebp+0x6533a751],0xffffffdb
  446d3c:	jl     0x446d94
  446d3e:	jo     0x446d8f
  446d40:	lods   al,BYTE PTR ds:[esi]
  446d41:	jb     0x446d30
  446d43:	iret   
  446d44:	fcomp  QWORD PTR [ebx]
  446d46:	out    dx,eax
  446d47:	add    BYTE PTR [ebp+0x74eb8279],al
  446d4d:	adc    al,0x9f
  446d4f:	test   DWORD PTR [edx-0x3e417e78],esi
  446d55:	adc    cl,dh
  446d57:	ror    DWORD PTR [eax+eiz*8-0x45ef12bf],cl
  446d5e:	mov    ah,0x82
  446d60:	and    dl,BYTE PTR [esi+edi*1]
  446d63:	jle    0x446d74
  446d65:	xor    DWORD PTR [esi-0x7131fe89],ebp
  446d6b:	(bad)
  446d6e:	push   esp
  446d6f:	and    BYTE PTR [edx],dh
  446d71:	push   ebx
  446d72:	sub    DWORD PTR [eax+0x5fa06e27],ecx
  446d78:	xchg   ebx,eax
  446d79:	ins    DWORD PTR es:[edi],dx
  446d7a:	sub    ah,BYTE PTR ds:0x1d369dc1
  446d80:	out    dx,al
  446d81:	loope  0x446da3
  446d83:	dec    esp
  446d84:	je     0x446de5
  446d86:	out    0xad,eax
  446d88:	mov    dl,0xfd
  446d8a:	push   ds
  446d8b:	cli    
  446d8c:	xchg   esp,eax
  446d8d:	jne    0x446d71
  446d8f:	pop    eax
  446d90:	adc    al,0xb3
  446d92:	fcmovnbe st,st(0)
  446d94:	and    ebp,edi
  446d96:	fs ins DWORD PTR es:[edi],dx
  446d98:	adc    BYTE PTR [ebx+0x6c24ad68],cl
  446d9e:	push   esp
  446d9f:	sub    al,0xc9
  446da1:	call   0xe298e459
  446da6:	mov    ds:0xfaed3f03,al
  446dab:	or     DWORD PTR [edx],esi
  446dad:	mov    edx,0x4a42ae29
  446db2:	sbb    esi,esp
  446db4:	mov    eax,0xa42430da
  446db9:	(bad)  
  446dba:	into   
  446dbb:	xchg   DWORD PTR [eax+0x75],edi
  446dbe:	jb     0x446d43
  446dc0:	fnstenv [ecx]
  446dc2:	pop    ss
  446dc3:	mov    bl,0xc3
  446dc5:	fisub  WORD PTR [esi-0x980eaa0]
  446dcb:	retf   
  446dcc:	inc    esp
  446dcd:	je     0x446d64
  446dcf:	push   ecx
  446dd0:	push   edx
  446dd1:	aam    0x80
  446dd3:	outs   dx,DWORD PTR ds:[esi]
  446dd4:	sbb    eax,DWORD PTR [ebx]
  446dd6:	or     BYTE PTR ds:0xcb8cae14,0xf8
  446ddd:	xchg   edi,eax
  446dde:	pop    esp
  446ddf:	mov    al,0xc0
  446de1:	push   eax
  446de2:	mov    eax,ds:0x75df4bd7
  446de7:	inc    edi
  446de8:	sub    eax,0xbaac0bfb
  446ded:	outs   dx,BYTE PTR ds:[esi]
  446dee:	and    eax,0x124c8f8c
  446df3:	mov    cl,0x92
  446df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446df6:	ja     0x446d93
  446df8:	je     0x446dea
  446dfa:	in     al,dx
  446dfb:	pop    ds
  446dfc:	pop    ecx
  446dfd:	iret   
  446dfe:	lods   al,BYTE PTR ds:[esi]
  446dff:	mov    ebx,0x2ea43cd3
  446e04:	addr16 out 0xf1,eax
  446e07:	mov    esi,0xeffc6189
  446e0c:	or     DWORD PTR [ebx],ecx
  446e0e:	mov    bl,0x56
  446e10:	call   0x679e:0x5219149
  446e17:	add    ah,BYTE PTR [ecx+ebp*8-0x1500354f]
  446e1e:	pusha  
  446e1f:	mov    ebp,0x9b87822e
  446e24:	xchg   edi,eax
  446e25:	push   esi
  446e26:	add    al,0xa6
  446e28:	enter  0x58e3,0xf4
  446e2c:	rcl    DWORD PTR es:[edi],1
  446e2f:	push   edx
  446e30:	pop    edx
  446e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446e32:	in     eax,dx
  446e33:	xor    bl,BYTE PTR [eax+0x33]
  446e36:	retf   0x4d44
  446e39:	repnz fsubrp st(3),st
  446e3c:	or     edi,DWORD PTR [ecx-0x2a]
  446e3f:	or     BYTE PTR [ecx],ah
  446e41:	popf   
  446e42:	retf   0xd94e
  446e45:	mov    bl,0x5e
  446e47:	pop    ds
  446e48:	fldcw  WORD PTR [edi+0x13]
  446e4b:	rcr    BYTE PTR gs:[ecx+ecx*1+0x7b],cl
  446e50:	outs   dx,DWORD PTR ds:[esi]
  446e51:	mov    ecx,ds
  446e53:	ss ds int 0xb2
  446e57:	adc    BYTE PTR [ecx+edx*1-0x3a31ad49],ah
  446e5e:	cmc    
  446e5f:	jno    0x446ea4
  446e61:	jmp    0x446deb
  446e63:	ins    DWORD PTR es:[edi],dx
  446e64:	mov    edx,0xcaa5263f
  446e69:	push   ebp
  446e6a:	fist   DWORD PTR ds:0x8c13eaed
  446e70:	or     BYTE PTR [ebx+0x19],ch
  446e73:	out    dx,eax
  446e74:	or     eax,0x39dd8d06
  446e79:	adc    eax,0x150de19f
  446e7e:	add    eax,0xd9043682
  446e83:	in     eax,0x78
  446e85:	or     esi,esi
  446e87:	mov    dl,0xb8
  446e89:	push   es
  446e8a:	and    bl,dh
  446e8c:	mov    ah,0xaa
  446e8e:	ret    0x2ba8
  446e91:	mov    eax,0x5a080ca2
  446e96:	cli    
  446e97:	cmp    BYTE PTR [edi+0x7b],dh
  446e9a:	inc    edx
  446e9b:	sub    al,0x1b
  446e9d:	stos   DWORD PTR es:[edi],eax
  446e9e:	cmp    ecx,ebx
  446ea0:	pop    ds
  446ea1:	push   ebx
  446ea2:	mov    dh,0x51
  446ea4:	stos   DWORD PTR es:[edi],eax
  446ea5:	hlt    
  446ea6:	cmp    eax,0xeb36dfd2
  446eab:	pop    es
  446eac:	sti    
  446ead:	jbe    0x446e88
  446eaf:	xor    esi,ebp
  446eb1:	loopne 0x446f27
  446eb3:	mov    esi,0xe0c3acdc
  446eb8:	mov    cl,0x68
  446eba:	pop    ecx
  446ebb:	jecxz  0x446e8d
  446ebd:	inc    eax
  446ebf:	xor    al,0xd7
  446ec1:	ror    BYTE PTR [edi+0x7d],1
  446ec4:	push   ebp
  446ec5:	ror    BYTE PTR [eax+0x664c5f95],1
  446ecb:	es jg  0x446ea4
  446ece:	aam    0xeb
  446ed0:	test   DWORD PTR [edi-0x55],edi
  446ed3:	jmp    0x446e86
  446ed5:	pushf  
  446ed6:	mov    bh,bl
  446ed8:	daa    
  446ed9:	arpl   cx,ax
  446edb:	fsub   st(6),st
  446edd:	outs   dx,BYTE PTR ds:[esi]
  446ede:	lea    ebx,[ecx]
  446ee0:	xchg   ecx,eax
  446ee1:	adc    ebp,ebp
  446ee3:	xchg   edi,eax
  446ee4:	inc    edi
  446ee5:	jnp    0x446ed7
  446ee7:	push   ecx
  446ee8:	loop   0x446ee0
  446eea:	and    ah,bh
  446eec:	push   ebx
  446eed:	inc    bp
  446eef:	iret   
  446ef0:	cmp    DWORD PTR [ebx+0x44],ebp
  446ef3:	leave  
  446ef4:	stos   DWORD PTR es:[edi],eax
  446ef5:	push   DWORD PTR [ebp+0x1ff7a3fe]
  446efb:	mov    eax,ds:0xb2ae8e2
  446f00:	mov    eax,ds:0xf69535fd
  446f05:	test   al,0x41
  446f07:	(bad)  
  446f08:	cs push edi
  446f0a:	jecxz  0x446f71
  446f0c:	ficom  DWORD PTR [edi+0x629d4f22]
  446f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446f13:	pop    eax
  446f14:	mov    bh,0xf6
  446f16:	(bad)  
  446f17:	mov    edi,0x36497353
  446f1c:	inc    edi
  446f1d:	scas   al,BYTE PTR es:[edi]
  446f1e:	cmp    dl,BYTE PTR [ebx]
  446f20:	adc    eax,0x91fb1462
  446f25:	rcl    DWORD PTR [ebx+0x534d9c6d],0x3f
  446f2c:	add    ah,BYTE PTR [edx-0xbbf9086]
  446f32:	fstp   QWORD PTR [esi-0x74]
  446f35:	push   0x46
  446f37:	push   cs
  446f38:	jp     0x446f21
  446f3a:	add    eax,edx
  446f3c:	int    0x6e
  446f3e:	pop    eax
  446f3f:	rol    ecx,0x54
  446f42:	ins    BYTE PTR es:[edi],dx
  446f43:	nop
  446f44:	aam    0x95
  446f46:	mov    edx,0x2c69e580
  446f4b:	je     0x446f5b
  446f4d:	(bad)  
  446f4e:	and    eax,ebp
  446f50:	add    eax,DWORD PTR [edi-0xa536e20]
  446f56:	push   ebx
  446f57:	cdq    
  446f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446f59:	cmp    BYTE PTR [eax-0x76],ch
  446f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446f5d:	xchg   ebx,eax
  446f5e:	inc    edx
  446f60:	(bad)  
  446f61:	lods   al,BYTE PTR ds:[esi]
  446f62:	loop   0x446f49
  446f64:	mov    al,al
  446f66:	dec    ebx
  446f67:	(bad)  
  446f68:	xor    edx,ebx
  446f6a:	test   BYTE PTR [esi],cl
  446f6c:	mov    ecx,0x13d952c9
  446f71:	push   es
  446f72:	call   0x5013:0xfd166ef1
  446f79:	mov    ebp,0x29bf6f3c
  446f7e:	dec    esp
  446f7f:	or     ah,bl
  446f81:	cmp    eax,0xf7dcc827
  446f86:	add    BYTE PTR [eax+0x16],ch
  446f89:	dec    ebp
  446f8a:	mov    cl,0x6
  446f8c:	inc    edi
  446f8d:	add    esi,DWORD PTR [ebp+0x26]
  446f90:	or     DWORD PTR [edi],ebp
  446f92:	pushf  
  446f93:	add    DWORD PTR [eax],eax
  446f95:	xor    al,0xfc
  446f97:	das    
  446f98:	fidiv  WORD PTR [esi-0x69]
  446f9b:	aaa    
  446f9c:	int3   
  446f9d:	out    0x45,al
  446f9f:	add    BYTE PTR [eax],bl
  446fa1:	ror    BYTE PTR [edi],1
  446fa3:	fdivr  st(2),st
  446fa5:	and    esi,ecx
  446fa7:	and    DWORD PTR [edi],0x62469ca0
  446fad:	outs   dx,DWORD PTR ds:[esi]
  446fae:	mov    dl,0x14
  446fb0:	cmp    ebp,DWORD PTR [edx+0x7530892c]
  446fb6:	or     esi,DWORD PTR [ebx+0x1e]
  446fb9:	popf   
  446fba:	sti    
  446fbb:	or     bh,BYTE PTR [esi+0x5a]
  446fbe:	pop    esi
  446fbf:	jle    0x447031
  446fc1:	popf   
  446fc2:	inc    ecx
  446fc3:	sbb    cl,ch
  446fc5:	out    dx,al
  446fc6:	sbb    eax,ecx
  446fc8:	inc    ecx
  446fc9:	shl    BYTE PTR [ebx*4-0x608cab48],cl
  446fd0:	or     ch,BYTE PTR [ecx+0x6f5bcd3b]
  446fd6:	test   eax,0xa592f411
  446fdb:	pop    esi
  446fdc:	adc    eax,0xc6233c59
  446fe1:	loope  0x446fb2
  446fe3:	push   eax
  446fe4:	dec    DWORD PTR ds:0xfec61fb5
  446fea:	clc    
  446feb:	loope  0x446f79
  446fed:	das    
  446fee:	mov    bh,0x16
  446ff0:	or     eax,0x2ce9a4e
  446ff5:	fstp   TBYTE PTR ds:0xd903cad7
  446ffb:	ja     0x446f93
  446ffd:	js     0x446fa4
  446fff:	rcl    WORD PTR [ebx-0x1d],1
  447003:	pop    ebx
  447004:	push   ecx
  447005:	push   ss
  447006:	mov    cl,0xf
  447008:	scas   eax,DWORD PTR es:[edi]
  447009:	cwde   
  44700a:	aas    
  44700b:	xchg   ecx,eax
  44700c:	shl    edi,0xec
  44700f:	push   0xfffffffb
  447011:	jo     0x446ffb
  447013:	push   edi
  447014:	xlat   BYTE PTR ds:[ebx]
  447015:	nop
  447016:	sbb    cl,BYTE PTR [esi-0x1548aced]
  44701c:	sub    edi,DWORD PTR [ecx-0x16]
  44701f:	call   0x77fb:0xb467d98d
  447026:	dec    BYTE PTR [ebp-0x24]
  447029:	push   edi
  44702a:	shl    DWORD PTR [esi+0x4e9f85d5],1
  447030:	xchg   BYTE PTR [ebx-0x13],bl
  447033:	sbb    eax,esp
  447035:	jp     0x447058
  447037:	push   eax
  447038:	xor    al,0xe
  44703a:	or     al,BYTE PTR [ecx+0x79]
  44703d:	jge    0x446fcc
  44703f:	test   eax,0xb36f15ff
  447044:	cs aam 0x25
  447047:	mov    ecx,0x8a289950
  44704c:	enter  0xa160,0x59
  447050:	or     BYTE PTR [ecx-0x3d7c4259],cl
  447056:	inc    edi
  447057:	test   al,0xaa
  447059:	std    
  44705a:	dec    esi
  44705b:	pop    ds
  44705c:	cmp    eax,0xe7f484cf
  447061:	mov    bl,BYTE PTR [esp+edx*8]
  447064:	sbb    DWORD PTR [edx-0x2668be81],edx
  44706a:	pop    edi
  44706b:	dec    edx
  44706c:	xlat   BYTE PTR ds:[ebx]
  44706d:	mov    cl,0x12
  44706f:	sub    eax,0x287b3387
  447074:	dec    esi
  447075:	pop    edx
  447076:	scas   al,BYTE PTR es:[edi]
  447077:	jl     0x4470ab
  447079:	xchg   esp,eax
  44707a:	push   edi
  44707b:	mov    cl,0x3c
  44707d:	mov    dl,0x26
  44707f:	addr16 popa 
  447081:	xchg   edx,esi
  447083:	xchg   esi,eax
  447084:	scas   eax,DWORD PTR es:[edi]
  447085:	pop    esp
  447086:	dec    edi
  447087:	stos   BYTE PTR es:[edi],al
  447088:	lock cli 
  44708a:	icebp  
  44708b:	cld    
  44708c:	push   ecx
  44708d:	sbb    ebp,esp
  44708f:	xor    eax,0xb9503b27
  447094:	adc    ecx,edi
  447096:	mov    bl,BYTE PTR [eax+ecx*1+0x4ebdad0a]
  44709d:	xor    ah,bh
  44709f:	cld    
  4470a0:	mov    ch,al
  4470a2:	pop    ecx
  4470a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4470a4:	mov    es,WORD PTR [eax+ecx*2]
  4470a7:	retf   
  4470a8:	fs mov bl,0x51
  4470ab:	dec    bx
  4470ad:	popa   
  4470ae:	sahf   
  4470af:	fisttp WORD PTR [edx]
  4470b1:	mov    ah,0xe8
  4470b3:	fld    DWORD PTR [eax-0x2f6d9fa]
  4470b9:	cmp    BYTE PTR [eax-0x7c],dh
  4470bc:	in     eax,0x7f
  4470be:	add    edi,DWORD PTR [edi+ecx*8-0x76]
  4470c2:	xchg   DWORD PTR fs:[ecx-0x7cd4d32a],ecx
  4470c9:	mov    ds:0x8d57f5f5,al
  4470ce:	pop    ds
  4470cf:	add    eax,0x4db1346d
  4470d4:	in     eax,0x1c
  4470d6:	cmp    esi,esi
  4470d8:	push   ss
  4470d9:	add    eax,0xae64a5c9
  4470de:	jo     0x4470ab
  4470e0:	aad    0x7a
  4470e2:	das    
  4470e3:	push   ebp
  4470e4:	inc    ebp
  4470e5:	sbb    al,0xff
  4470e7:	neg    BYTE PTR [eax]
  4470e9:	lds    eax,FWORD PTR [esi+0x7b8e3544]
  4470ef:	xchg   esi,eax
  4470f0:	ret    0x9cc8
  4470f3:	test   eax,0x4a8c3f1
  4470f8:	inc    esp
  4470f9:	retf   
  4470fa:	add    al,0xc0
  4470fc:	mov    edi,0xa62cd363
  447101:	pushf  
  447102:	retf   
  447103:	pop    ecx
  447104:	ret    
  447105:	mov    al,0x21
  447107:	ss cdq 
  447109:	(bad)  
  44710a:	frstor [edi+ebx*8-0x49]
  44710e:	out    dx,eax
  44710f:	mov    eax,ds:0xd17ec61d
  447114:	sar    DWORD PTR [edi+0x2d],cl
  447117:	test   DWORD PTR [ebx-0x2e6b47bb],eax
  44711d:	add    al,0xd3
  44711f:	pushf  
  447120:	outs   dx,BYTE PTR ds:[esi]
  447121:	or     ebx,DWORD PTR [ecx]
  447123:	cmc    
  447124:	pop    edi
  447125:	sti    
  447126:	retf   0xc219
  447129:	cmp    bh,dh
  44712b:	test   eax,0xe7247237
  447130:	mov    edi,0xaa071f9b
  447135:	fisub  WORD PTR [ebp+0x4fff994f]
  44713b:	into   
  44713c:	aas    
  44713d:	imul   eax,DWORD PTR [eax+0x18e25c45],0x1e
  447144:	nop
  447145:	xchg   ebp,eax
  447146:	imul   edx,DWORD PTR [ecx+edi*1],0xfffffff7
  44714a:	lahf   
  44714b:	fstp   QWORD PTR [ebx-0x41378d0d]
  447151:	jmp    0x447127
  447153:	jg     0x447127
  447155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447156:	gs test al,0x30
  447159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44715a:	in     al,0xb6
  44715c:	inc    edx
  44715d:	jle    0x4470f7
  44715f:	pop    ds
  447160:	(bad)  
  447161:	cli    
  447162:	rcl    BYTE PTR ds:[edi],0x31
  447166:	shl    eax,1
  447168:	ds add al,0x23
  44716b:	ret    0x74ef
  44716e:	dec    ebx
  44716f:	sub    al,0xec
  447171:	fild   QWORD PTR [edi+0x86b81b0]
  447177:	adc    ebx,esi
  447179:	inc    ebp
  44717a:	sbb    eax,DWORD PTR [ecx]
  44717c:	dec    eax
  44717d:	in     eax,0xb3
  44717f:	ds jmp 0x7e5d:0x26cd4195
  447187:	cmp    ebp,esp
  447189:	xor    eax,0x8f0c1cf2
  44718e:	icebp  
  44718f:	jb     0x447171
  447191:	inc    edx
  447192:	fadd   QWORD PTR [esi]
  447194:	pop    ecx
  447195:	mov    eax,0xcba3fa24
  44719a:	cmp    al,0xb7
  44719c:	jns    0x4471ba
  44719e:	ins    BYTE PTR es:[edi],dx
  44719f:	enter  0xf38a,0xc0
  4471a3:	popa   
  4471a4:	shl    ebx,1
  4471a6:	(bad)  
  4471a7:	push   cs
  4471a8:	lahf   
  4471a9:	lods   eax,DWORD PTR ds:[esi]
  4471aa:	mov    al,0xd1
  4471ac:	loopne 0x44714c
  4471ae:	jecxz  0x447149
  4471b0:	jb     0x44718c
  4471b2:	mov    cl,0x52
  4471b4:	or     BYTE PTR [ebx],0x70
  4471b7:	in     ax,0x9d
  4471ba:	repnz adc bl,cl
  4471bd:	xchg   edi,eax
  4471be:	mov    BYTE PTR ds:0x2a52a145,al
  4471c4:	ss jge 0x44716f
  4471c7:	mov    BYTE PTR [ebp+0x65a12ae2],0x8
  4471ce:	mov    DWORD PTR [ecx-0x54],edi
  4471d1:	outs   dx,BYTE PTR gs:[esi]
  4471d3:	out    dx,al
  4471d4:	or     DWORD PTR [esi],ebx
  4471d6:	out    dx,eax
  4471d7:	shr    BYTE PTR [ecx],cl
  4471d9:	push   ebp
  4471da:	pop    ds
  4471db:	test   al,0x27
  4471dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4471de:	test   DWORD PTR [esi+0x75],eax
  4471e1:	adc    dl,BYTE PTR ds:0x9b91e8c6
  4471e7:	mov    bl,bh
  4471e9:	pop    ss
  4471ea:	mov    cl,0x8c
  4471ec:	xchg   esp,eax
  4471ed:	loopne 0x44724a
  4471ef:	nop
  4471f0:	rcr    DWORD PTR [ebp+0x6883e336],0x91
  4471f7:	xchg   esp,eax
  4471f8:	aas    
  4471f9:	(bad)  
  4471fa:	test   eax,0xee2e01c5
  4471ff:	pop    esi
  447200:	and    al,BYTE PTR [edi+0x78]
  447203:	mov    ah,0xf7
  447205:	cwde   
  447206:	aas    
  447207:	daa    
  447208:	out    dx,al
  447209:	sahf   
  44720a:	mov    cl,0xf6
  44720c:	loope  0x447251
  44720e:	cmc    
  44720f:	xchg   ch,bh
  447211:	aad    0x98
  447213:	imul   esi,DWORD PTR [ebx],0xb85dc3f4
  447219:	dec    esi
  44721a:	mov    edi,0x1142a090
  44721f:	(bad)  
  447220:	push   edi
  447221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447222:	jnp    0x447270
  447224:	cli    
  447225:	in     eax,dx
  447226:	push   eax
  447227:	repnz (bad) [edx+0x13]
  44722b:	sahf   
  44722c:	jnp    0x44724f
  44722e:	mov    BYTE PTR [ecx-0x61005b2f],ch
  447234:	mov    gs,WORD PTR [ecx+0x3d]
  447237:	jns    0x447200
  447239:	push   edx
  44723a:	xor    dh,BYTE PTR [esi]
  44723c:	stc    
  44723d:	xor    al,0xfa
  44723f:	inc    ebp
  447240:	xlat   BYTE PTR ds:[ebx]
  447241:	xlat   BYTE PTR ds:[ebx]
  447242:	mov    ah,0x8a
  447244:	cmp    DWORD PTR [ebx*2+0x76f731eb],ebp
  44724b:	sub    al,BYTE PTR [ebx-0x7ecbbb3]
  447251:	rcr    BYTE PTR [esi],1
  447253:	dec    eax
  447254:	push   edi
  447255:	pop    eax
  447256:	sub    ah,ch
  447258:	xor    ebx,DWORD PTR [ebx+0x242848c1]
  44725e:	xchg   esp,eax
  44725f:	mov    esp,0x4aa8cbfd
  447264:	lds    ebx,FWORD PTR [esi]
  447266:	out    dx,eax
  447267:	push   es
  447268:	push   ss
  447269:	ror    ch,1
  44726b:	jns    0x4472b3
  44726d:	push   esp
  44726e:	(bad)  
  44726f:	daa    
  447270:	push   esi
  447271:	cs push es
  447273:	les    esp,FWORD PTR [ecx]
  447275:	adc    dl,ch
  447277:	out    dx,al
  447278:	xchg   ebp,eax
  447279:	inc    esi
  44727a:	pusha  
  44727b:	(bad)
  447280:	adc    DWORD PTR [ebx+0x7c],edx
  447283:	das    
  447284:	mov    ecx,DWORD PTR [ecx]
  447286:	push   es
  447287:	mov    cl,0x4b
  447289:	jbe    0x447235
  44728b:	icebp  
  44728c:	bound  edi,QWORD PTR [edx-0x45]
  44728f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447290:	add    ch,BYTE PTR [eax+0x40599053]
  447296:	mov    eax,ds:0x85cf315
  44729b:	cmp    DWORD PTR [eax],ecx
  44729d:	mov    BYTE PTR [edi],dl
  44729f:	sbb    ah,BYTE PTR [edi+0x6b]
  4472a2:	or     eax,0xac2cf2ff
  4472a7:	cmp    DWORD PTR [ebx+0x2a390a66],edx
  4472ad:	and    BYTE PTR [esi],dh
  4472af:	in     al,dx
  4472b0:	les    ecx,FWORD PTR [eax+ebx*2]
  4472b3:	cmp    esp,DWORD PTR [edx+ebp*8]
  4472b6:	ret    
  4472b7:	inc    ecx
  4472b8:	xor    eax,0xf12b4d61
  4472bd:	push   esp
  4472be:	in     eax,0x4d
  4472c0:	addr16 mov esi,0x96dccbe2
  4472c6:	(bad)  
  4472c7:	rcl    BYTE PTR [ebx-0x18],1
  4472ca:	(bad)  
  4472cb:	int    0xcf
  4472cd:	inc    ebp
  4472ce:	in     al,0xbe
  4472d0:	sub    dh,cl
  4472d2:	into   
  4472d3:	mov    al,ds:0xf3041766
  4472d8:	pop    esp
  4472d9:	int    0x58
  4472db:	js     0x447294
  4472dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4472de:	adc    al,0xa9
  4472e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4472e1:	adc    DWORD PTR [edi+0x13],edx
  4472e4:	in     eax,0x20
  4472e6:	mov    cl,0xbc
  4472e8:	(bad)  
  4472e9:	std    
  4472ea:	mov    DWORD PTR [edx+0x20f02d7b],esi
  4472f0:	scas   al,BYTE PTR es:[edi]
  4472f1:	pusha  
  4472f2:	in     eax,dx
  4472f3:	jnp    0x44735a
  4472f5:	in     al,dx
  4472f6:	and    ebp,DWORD PTR [eax-0x7e]
  4472f9:	jg     0x4472d8
  4472fb:	mov    al,0xbf
  4472fd:	cmc    
  4472fe:	and    bh,0xad
  447301:	test   BYTE PTR [edi+0x3d],cl
  447304:	sti    
  447305:	stc    
  447306:	out    0x94,eax
  447308:	cmp    eax,0x1a573fa9
  44730d:	jns    0x4472c3
  44730f:	dec    BYTE PTR [eax-0x3c1a8171]
  447315:	xchg   ebp,eax
  447316:	dec    BYTE PTR [ebx+0x2a719477]
  44731c:	in     al,0xdd
  44731e:	mov    edi,0xce019e8d
  447323:	jnp    0x4472b4
  447325:	test   DWORD PTR [esi-0x32],ebp
  447328:	les    edx,FWORD PTR [ecx-0x33]
  44732b:	gs mov ch,0x68
  44732e:	(bad)  
  44732f:	rcl    BYTE PTR [esi+eax*2+0x629b35a1],1
  447336:	mov    esp,DWORD PTR [ebp+0x2bcc2c3b]
  44733c:	or     al,0x30
  44733e:	cmp    eax,0x8e64f377
  447343:	clc    
  447344:	mov    edx,0x338f2f6f
  447349:	mov    edx,0x92ead40a
  44734e:	mov    ah,0xfd
  447350:	dec    eax
  447351:	and    al,0x47
  447353:	mov    fs,WORD PTR [esi]
  447355:	mov    ds:0xbfbd8cd5,al
  44735a:	inc    ebx
  44735b:	aam    0x1e
  44735d:	ret    0xa3be
  447360:	inc    edi
  447361:	hlt    
  447362:	jb     0x4473c8
  447364:	adc    BYTE PTR [ebp+0x6e],bh
  447367:	repnz int3 
  447369:	add    ebx,ebp
  44736b:	in     al,0x3b
  44736d:	ss or  eax,0xb02931e
  447373:	adc    DWORD PTR [ebp-0x71],esp
  447376:	lods   eax,DWORD PTR ds:[esi]
  447377:	sbb    al,BYTE PTR ds:0xad9bb976
  44737d:	jne    0x447300
  44737f:	ins    DWORD PTR es:[edi],dx
  447380:	mov    dh,0xc7
  447382:	int    0x15
  447384:	adc    dh,BYTE PTR [esi]
  447386:	sub    cl,BYTE PTR [ebx-0x2cd0fc08]
  44738c:	cmp    al,0xd1
  44738e:	rol    BYTE PTR fs:[eax],1
  447391:	or     eax,0xea6327f9
  447396:	dec    edi
  447397:	out    0x53,eax
  447399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44739a:	lods   eax,DWORD PTR ds:[esi]
  44739b:	cdq    
  44739c:	mov    ds:0xc0ec75f9,al
  4473a1:	ficomp DWORD PTR [eax]
  4473a3:	in     al,dx
  4473a4:	adc    eax,0x55dbd803
  4473a9:	aam    0xfd
  4473ab:	push   esi
  4473ac:	out    0x1d,al
  4473ae:	jne    0x447425
  4473b0:	ror    bh,1
  4473b2:	loop   0x44742f
  4473b4:	adc    ebp,DWORD PTR [edi-0x3f2fd59b]
  4473ba:	push   ss
  4473bb:	in     eax,dx
  4473bc:	xchg   edi,eax
  4473bd:	and    BYTE PTR ds:0x2773ed37,ch
  4473c3:	inc    eax
  4473c4:	in     eax,dx
  4473c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4473c6:	ret    
  4473c7:	inc    DWORD PTR [ebx+0x62]
  4473ca:	push   cs
  4473cb:	xchg   esi,eax
  4473cc:	jb     0x447365
  4473ce:	pop    edi
  4473cf:	xchg   ebx,eax
  4473d0:	pop    edx
  4473d1:	shr    BYTE PTR ds:0xada7d631,cl
  4473d7:	jo     0x447375
  4473d9:	adc    DWORD PTR [edi+0x3b58fd19],0x3aadf7e4
  4473e3:	adc    al,0xb7
  4473e5:	neg    WORD PTR [edx-0x3a]
  4473e9:	psrlq  mm6,QWORD PTR [ebp+0x77667593]
  4473f0:	sahf   
  4473f1:	mov    al,ds:0x3851dac3
  4473f6:	pop    ebp
  4473f7:	pop    ds
  4473f8:	sbb    al,0x65
  4473fa:	xchg   esi,eax
  4473fb:	call   0x2536:0x4a87e1f3
  447402:	loop   0x4473fd
  447404:	jle    0x4473d3
  447406:	push   edx
  447407:	push   ebx
  447408:	inc    esp
  447409:	shl    DWORD PTR [bp+si],cl
  44740c:	aam    0x47
  44740e:	int3   
  44740f:	xchg   edi,eax
  447410:	lods   eax,DWORD PTR ds:[esi]
  447411:	daa    
  447412:	cmp    esp,eax
  447414:	stos   DWORD PTR es:[edi],eax
  447415:	xor    BYTE PTR [edx+0x64365eab],bl
  44741b:	mov    bh,0xaf
  44741d:	ror    BYTE PTR [esi+0x509bdb18],0xd8
  447424:	outs   dx,DWORD PTR ds:[esi]
  447425:	dec    edi
  447426:	mov    bl,0xc4
  447428:	mov    ebp,0xfbdef938
  44742d:	mov    eax,ds:0x858d5784
  447432:	out    0x1e,al
  447434:	pop    ecx
  447435:	frstpm(287 only) 
  447437:	jge    0x44745f
  447439:	or     dh,dh
  44743b:	gs cld 
  44743d:	pusha  
  44743e:	out    0xf,eax
  447440:	jae    0x447477
  447442:	ret    0x9d04
  447445:	push   cs
  447446:	xchg   DWORD PTR [eax+esi*4+0x2b],ebx
  44744a:	cmc    
  44744b:	fs jb  0x4473d2
  44744e:	ds pop esp
  447450:	rcr    BYTE PTR [ecx],cl
  447452:	push   ds
  447453:	dec    ebp
  447454:	clc    
  447455:	cmp    eax,0x1d7e89e7
  44745a:	xchg   esi,eax
  44745b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44745c:	xchg   ecx,eax
  44745d:	and    eax,0x60e549cd
  447462:	xchg   ebx,eax
  447463:	cdq    
  447464:	jbe    0x447429
  447466:	scas   al,BYTE PTR es:[edi]
  447467:	sub    cl,al
  447469:	mov    ch,0x93
  44746b:	(bad)  
  44746d:	adc    al,0x60
  44746f:	mov    ecx,0x7593104
  447474:	mov    dh,0xd9
  447476:	mov    DWORD PTR [edi-0x52],0x3724b629
  44747d:	jb     0x447473
  44747f:	add    bh,ah
  447481:	arpl   cx,si
  447483:	xchg   edx,eax
  447484:	pusha  
  447485:	sub    ebp,ecx
  447487:	or     dh,BYTE PTR [edx-0x79]
  44748a:	jmp    0xa20:0xf97eafcc
  447491:	cwde   
  447492:	in     al,0x5d
  447494:	loope  0x447440
  447496:	pushf  
  447497:	data16 mov dh,0x2c
  44749a:	(bad)  [ebx+0x1c]
  44749d:	scas   eax,DWORD PTR es:[edi]
  44749e:	xchg   DWORD PTR [esp+esi*8-0x426d80d7],ebx
  4474a5:	fcmovbe st,st(2)
  4474a7:	inc    ebx
  4474a8:	pop    ebx
  4474a9:	pop    es
  4474aa:	dec    esp
  4474ab:	pop    edx
  4474ac:	pusha  
  4474ad:	cld    
  4474ae:	outs   dx,DWORD PTR ds:[esi]
  4474af:	pop    eax
  4474b0:	push   ebp
  4474b1:	out    dx,eax
  4474b2:	xor    al,0x83
  4474b4:	mov    ebp,DWORD PTR [ecx]
  4474b6:	jg     0x44745c
  4474b8:	pop    ss
  4474b9:	mov    edi,DWORD PTR [ebx+0x1]
  4474bc:	ror    bl,cl
  4474be:	retf   
  4474bf:	jns    0x4474a0
  4474c1:	lods   eax,DWORD PTR ds:[esi]
  4474c2:	sbb    dh,dh
  4474c4:	xchg   DWORD PTR [edx-0x31],edi
  4474c7:	push   0xffffffe8
  4474c9:	fnsave [ecx-0x61797aff]
  4474cf:	rcl    ecx,cl
  4474d1:	cmp    al,0x62
  4474d3:	clc    
  4474d4:	mov    ch,0x4a
  4474d6:	and    eax,0xf878cfe7
  4474db:	rcl    DWORD PTR [ebx+0x55416b05],1
  4474e1:	inc    ebp
  4474e2:	and    bh,BYTE PTR [ecx-0x33f2b846]
  4474e8:	xlat   BYTE PTR ds:[ebx]
  4474e9:	cld    
  4474ea:	out    dx,eax
  4474eb:	mov    edx,0xaf51ae4f
  4474f0:	sub    BYTE PTR [edx+0x61],0xa2
  4474f4:	push   edi
  4474f5:	and    eax,0x1693729c
  4474fa:	push   edx
  4474fb:	inc    edx
  4474fc:	es pop esi
  4474fe:	cld    
  4474ff:	inc    edi
  447500:	stc    
  447501:	or     DWORD PTR [edx-0x14b80085],edi
  447507:	ret    0xb25d
  44750a:	xor    DWORD PTR [edx-0x1307c6a6],0xffffffbd
  447511:	inc    eax
  447512:	mov    ds:0xa474dd27,eax
  447517:	mov    esp,0xb49ccd2
  44751c:	jbe    0x44756d
  44751e:	mov    edi,0x9dbe0b68
  447523:	push   edi
  447524:	test   dh,bl
  447526:	clc    
  447527:	push   ecx
  447528:	test   DWORD PTR [ecx+0x299ebb60],0xc3cb9a9f
  447532:	js     0x447539
  447534:	shr    esp,0xf1
  447537:	icebp  
  447538:	and    DWORD PTR [edx+0x7f],0xbeba5049
  44753f:	jbe    0x4475bc
  447541:	xchg   edx,eax
  447542:	fcom   QWORD PTR [eax-0x2d]
  447545:	adc    al,0x7a
  447547:	je     0x4474ef
  447549:	ins    BYTE PTR es:[edi],dx
  44754a:	pop    edi
  44754b:	std    
  44754c:	add    DWORD PTR [ebp-0x27],edx
  44754f:	mov    dl,0x68
  447551:	in     eax,0x34
  447553:	hlt    
  447554:	jmp    0x8a009a9f
  447559:	dec    BYTE PTR [eax-0x2bfd9968]
  44755f:	mov    cl,0xaf
  447561:	lea    esi,[edi-0x6afaa263]
  447567:	jnp    0x447587
  447569:	push   0xc6686329
  44756e:	(bad)  
  44756f:	ins    DWORD PTR es:[edi],dx
  447570:	mov    eax,0xf02ff7db
  447575:	or     eax,0x28b4da4d
  44757a:	push   0x5a
  44757c:	mov    ebx,es
  44757e:	pop    eax
  44757f:	dec    ebp
  447580:	xchg   DWORD PTR [edi],ebx
  447582:	inc    edi
  447583:	lods   al,BYTE PTR ds:[esi]
  447584:	test   BYTE PTR [esi+0x3c9b692],cl
  44758a:	xchg   edx,eax
  44758b:	test   DWORD PTR [esi+ecx*8+0x2],0x1c7726a
  447593:	daa    
  447594:	pop    ebp
  447595:	dec    ecx
  447596:	mov    ecx,0x8cae41c6
  44759b:	add    eax,0xf4b6b1a8
  4475a0:	out    0x7c,eax
  4475a2:	and    eax,0x33856385
  4475a7:	out    0x2f,al
  4475a9:	dec    esp
  4475aa:	adc    al,0x9b
  4475ac:	inc    edi
  4475ad:	int3   
  4475ae:	mov    esi,ebx
  4475b0:	ins    BYTE PTR es:[edi],dx
  4475b1:	dec    esp
  4475b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4475b3:	lock inc esp
  4475b5:	mov    BYTE PTR [edx],cl
  4475b7:	daa    
  4475b8:	and    esp,esi
  4475ba:	dec    esp
  4475bb:	pop    ss
  4475bc:	sub    edi,DWORD PTR [ecx]
  4475be:	(bad)  
  4475bf:	cld    
  4475c0:	mov    eax,ds:0xd9613cee
  4475c5:	out    0xeb,eax
  4475c7:	mov    ds:0xeacd6c38,eax
  4475cc:	(bad)  
  4475cd:	jbe    0x4475d9
  4475cf:	addr16 mov dl,0xab
  4475d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4475d3:	push   esi
  4475d4:	shl    BYTE PTR [edi],cl
  4475d6:	scas   al,BYTE PTR es:[edi]
  4475d7:	cdq    
  4475d8:	dec    eax
  4475d9:	dec    edi
  4475da:	jmp    FWORD PTR [eax+0x6323c00c]
  4475e0:	pusha  
  4475e1:	dec    esp
  4475e2:	add    BYTE PTR [ecx],dh
  4475e4:	sub    al,0xf8
  4475e6:	add    DWORD PTR [edx-0x25],0x7c
  4475ea:	aas    
  4475eb:	stos   BYTE PTR es:[edi],al
  4475ec:	xchg   esi,eax
  4475ed:	xor    edx,DWORD PTR [ecx-0x364732d1]
  4475f3:	pop    esp
  4475f4:	adc    DWORD PTR [edx-0x134f87a2],0x6e2ded26
  4475fe:	js     0x4475fe
  447600:	jge    0x4475da
  447602:	ror    BYTE PTR [edi-0x1e52bf4],cl
  447608:	dec    esp
  447609:	gs xchg ebx,eax
  44760b:	lahf   
  44760c:	sub    DWORD PTR [eax+0x6f],ebx
  44760f:	push   ss
  447610:	xor    DWORD PTR [ebp-0x61],ebp
  447613:	sbb    bh,bh
  447615:	adc    eax,0xa11bea7e
  44761a:	bound  edx,QWORD PTR es:[ebp+0x1f]
  44761e:	pushf  
  44761f:	mov    ebp,DWORD PTR [ecx]
  447621:	jno    0x4475ab
  447623:	push   ds
  447624:	or     eax,0xc3ace49b
  447629:	mov    bl,0x15
  44762b:	pop    edx
  44762c:	cwde   
  44762d:	ret    0x5179
  447630:	xchg   ebx,eax
  447631:	adc    DWORD PTR [ecx],ebx
  447633:	jo     0x4475df
  447635:	xor    al,0x92
  447637:	sub    al,0x46
  447639:	adc    al,0x19
  44763b:	mov    eax,ds:0xde249ed4
  447640:	jno    0x4476a3
  447642:	push   esp
  447643:	push   ecx
  447644:	ja     0x44765e
  447646:	ret    0xd1e1
  447649:	cmc    
  44764a:	lods   eax,DWORD PTR ds:[esi]
  44764b:	das    
  44764c:	sar    BYTE PTR [eax],1
  44764e:	(bad)  
  44764f:	div    BYTE PTR [eax-0x52472438]
  447655:	cs retf 0x867c
  447659:	push   edi
  44765a:	mov    eax,0x8f8933e3
  44765f:	cmc    
  447660:	mov    BYTE PTR [ecx],dh
  447662:	mov    ah,0x9b
  447664:	scas   eax,DWORD PTR es:[edi]
  447665:	popf   
  447666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447667:	cmp    BYTE PTR [edi-0x27be5e59],ah
  44766d:	mov    esi,0xc0f923dc
  447672:	jno    0x447631
  447674:	into   
  447675:	rol    BYTE PTR [ebp+0x36],cl
  447678:	push   eax
  447679:	mov    ecx,0x7a598709
  44767e:	nop
  44767f:	and    ecx,DWORD PTR ds:0x3f6f6fe3
  447685:	xor    BYTE PTR [ecx+0x61],bl
  447688:	dec    ebx
  447689:	jg     0x447665
  44768b:	jecxz  0x447652
  44768d:	dec    edx
  44768e:	cs jle 0x447673
  447691:	test   BYTE PTR [esi+0x6c1c28fb],ch
  447697:	pop    ebx
  447698:	pop    ds
  447699:	xchg   ecx,eax
  44769a:	(bad)  
  44769b:	in     al,0xf3
  44769d:	into   
  44769e:	mov    eax,0xc8cf85
  4476a3:	sub    al,BYTE PTR [ecx-0x16]
  4476a6:	fcomp  QWORD PTR [esi]
  4476a8:	imul   eax,eax,0xffffffa6
  4476ab:	lds    eax,FWORD PTR [ecx+0x4b]
  4476ae:	frstor ds:0x8951f655
  4476b4:	lds    ecx,FWORD PTR [edi-0x76b955f3]
  4476ba:	fild   DWORD PTR ds:0x809d7f69
  4476c1:	loope  0x44772c
  4476c3:	in     al,0x69
  4476c5:	sbb    DWORD PTR [edi-0xecf5a42],ebx
  4476cb:	ins    DWORD PTR es:[edi],dx
  4476cc:	outs   dx,DWORD PTR ds:[esi]
  4476cd:	div    DWORD PTR [esi+edi*2-0x10]
  4476d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4476d2:	dec    ecx
  4476d3:	mov    bl,0x11
  4476d5:	push   es
  4476d6:	into   
  4476d7:	mov    dl,0xcf
  4476d9:	cmp    eax,0xe94411ee
  4476de:	pop    ss
  4476df:	inc    eax
  4476e0:	(bad)  
  4476e1:	ficomp WORD PTR [esi+0x68]
  4476e4:	or     bl,BYTE PTR [ebx+0x77]
  4476e7:	(bad)  
  4476e8:	aad    0x7c
  4476ea:	pop    es
  4476eb:	repz cmp BYTE PTR [edi+edx*1-0xd],al
  4476f0:	je     0x44776a
  4476f2:	sbb    bh,BYTE PTR [eax]
  4476f4:	mov    dl,0xf4
  4476f6:	push   0xef6acf77
  4476fb:	lahf   
  4476fc:	mov    esi,0x5b783416
  447701:	mov    bh,0xb0
  447703:	fsub   DWORD PTR [ebx-0x2e8806fe]
  447709:	xor    eax,0x8c3e0ba4
  44770e:	pop    esi
  44770f:	mov    ebx,0xcd841f2d
  447714:	and    cl,bl
  447716:	aad    0x9f
  447718:	pop    ebp
  447719:	mov    WORD PTR [edi],?
  44771b:	xchg   ecx,eax
  44771c:	jle    0x447733
  44771e:	nop
  44771f:	jbe    0x4476cf
  447721:	sbb    ah,BYTE PTR [eax]
  447723:	(bad)  
  447724:	shl    DWORD PTR [ebp-0x40],cl
  447727:	push   ebx
  447728:	push   ecx
  447729:	rcl    BYTE PTR [ecx-0x61039442],1
  44772f:	ins    BYTE PTR es:[edi],dx
  447730:	scas   eax,DWORD PTR es:[edi]
  447731:	cmp    esi,DWORD PTR [ebx+esi*4]
  447734:	mov    DWORD PTR [ecx+0x2545188b],edx
  44773a:	(bad)  
  44773b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44773c:	mov    ebx,0x885f6f65
  447741:	and    DWORD PTR [eax-0x29],esi
  447744:	xchg   ecx,eax
  447745:	xor    DWORD PTR [eax],ebp
  447747:	loop   0x44771d
  447749:	cmp    DWORD PTR [esi+0xa],0xbf9c66c3
  447750:	and    DWORD PTR [ecx+eax*1+0x308b88a0],ecx
  447757:	pop    ds
  447758:	test   al,0x54
  44775a:	pusha  
  44775b:	or     al,0xe9
  44775d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44775e:	cmp    eax,0x320cc95
  447763:	pop    ebx
  447764:	cdq    
  447765:	clc    
  447766:	outs   dx,DWORD PTR ds:[esi]
  447767:	xchg   ebx,eax
  447768:	arpl   WORD PTR [ecx+0x3329f1d6],bp
  44776e:	mov    DWORD PTR [ecx-0xd],edi
  447771:	add    DWORD PTR [esi],ebp
  447773:	data16 ror BYTE PTR [esi+0x6ba619b0],cl
  44777a:	xor    eax,0x330d3750
  44777f:	jae    0x44777d
  447781:	out    dx,al
  447782:	push   ss
  447783:	aaa    
  447784:	sbb    bl,BYTE PTR [esi]
  447786:	or     DWORD PTR [esi+0x4],esp
  447789:	jp     0x44770e
  44778b:	adc    BYTE PTR [esi+0x1b],bh
  44778e:	aam    0x63
  447790:	sahf   
  447791:	fist   DWORD PTR [edx+0x3b]
  447794:	lods   al,BYTE PTR ds:[esi]
  447795:	pop    ebp
  447796:	into   
  447797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447798:	addr16 (bad) 
  44779a:	and    eax,0x859d2238
  44779f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4477a0:	xor    al,0xe7
  4477a2:	mov    bl,0x67
  4477a4:	jge    0x4477e2
  4477a6:	dec    esp
  4477a7:	xor    eax,0x81154167
  4477ac:	frstor [edx+0x12c90fc4]
  4477b2:	in     al,0xe8
  4477b4:	lock pop edi
  4477b6:	in     eax,dx
  4477b7:	adc    DWORD PTR [edx+0x15dffb39],ebx
  4477bd:	leave  
  4477be:	inc    DWORD PTR [esi]
  4477c0:	inc    esi
  4477c1:	sbb    DWORD PTR [esi+0x70],edi
  4477c4:	sub    ah,BYTE PTR [edx-0x16562f7f]
  4477ca:	(bad)  
  4477cb:	fsubr  QWORD PTR [eax]
  4477cd:	jbe    0x447760
  4477cf:	add    al,0xa6
  4477d1:	(bad)  
  4477d2:	call   0x1924e30
  4477d7:	data16 stos BYTE PTR es:[edi],al
  4477d9:	cmp    bl,BYTE PTR [ebp+0x582ce4c5]
  4477df:	stos   BYTE PTR es:[edi],al
  4477e0:	loope  0x4477e9
  4477e2:	call   0x8d91:0xda47ec41
  4477e9:	inc    ecx
  4477ea:	sbb    eax,0xbdeb7850
  4477ef:	xchg   ebp,eax
  4477f0:	test   BYTE PTR [edi],al
  4477f2:	sub    BYTE PTR [edx],dh
  4477f4:	(bad)  [edi-0xb971d71]
  4477fa:	push   es
  4477fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4477fc:	sub    edx,DWORD PTR [ecx]
  4477fe:	push   esi
  4477ff:	adc    al,0x13
  447801:	inc    edx
  447802:	mov    ebx,edx
  447804:	ffree  st(5)
  447806:	inc    ebx
  447807:	and    BYTE PTR [eax],bl
  447809:	and    BYTE PTR [ecx],bh
  44780b:	xchg   edi,eax
  44780c:	repnz push 0x4d1c011
  447812:	mov    edx,0xc8d30c8b
  447817:	shl    DWORD PTR [esi+0x66e4004f],cl
  44781d:	das    
  44781e:	inc    ebx
  44781f:	lahf   
  447820:	mov    cs,WORD PTR [edx+ebx*8]
  447823:	mov    ds,WORD PTR [eax+0x14]
  447826:	pushf  
  447827:	pop    es
  447828:	cwde   
  447829:	adc    BYTE PTR [eax],ch
  44782b:	(bad)  
  44782c:	xor    ecx,DWORD PTR [edi+0x60]
  44782f:	lock jae 0x447827
  447832:	scas   eax,DWORD PTR es:[edi]
  447833:	int3   
  447834:	mov    ch,0x7e
  447836:	add    al,0x90
  447838:	and    ch,BYTE PTR [esi]
  44783a:	mov    ?,ecx
  44783c:	mov    edi,0x71957ae6
  447841:	push   ecx
  447842:	outs   dx,DWORD PTR ds:[esi]
  447843:	jge    0x44781c
  447845:	adc    ebp,DWORD PTR [eax-0x52]
  447848:	jecxz  0x4478b8
  44784a:	fadd   QWORD PTR [esi-0x155ceabe]
  447850:	rcr    BYTE PTR [edx],1
  447852:	imul   edx,DWORD PTR [ecx-0x23f05b07],0xffffff8e
  447859:	jecxz  0x447811
  44785b:	pop    ebx
  44785c:	jmp    0x447899
  44785e:	in     al,dx
  44785f:	loopne 0x44786f
  447861:	mov    cl,0xc7
  447863:	mov    dh,0x69
  447865:	outs   dx,BYTE PTR ds:[esi]
  447866:	in     al,0xe5
  447868:	arpl   WORD PTR [esi],sp
  44786a:	mov    BYTE PTR [ebx],dl
  44786c:	adc    BYTE PTR [eax],dl
  44786e:	iret   
  44786f:	xor    cl,bh
  447871:	and    DWORD PTR [eax],edi
  447873:	mov    eax,fs:0x35382ef4
  447879:	js     0x447844
  44787b:	cmp    dh,cl
  44787d:	cwde   
  44787e:	sbb    BYTE PTR [ebx-0x1d],dl
  447881:	cmovno ecx,DWORD PTR [ecx-0x39e630aa]
  447888:	imul   ebp,DWORD PTR [ebx-0x6b],0xa31cd0a7
  44788f:	loop   0x447870
  447891:	out    0x28,eax
  447893:	mov    BYTE PTR [eax],0x2c
  447896:	or     cl,ch
  447898:	adc    edi,ebp
  44789a:	idiv   DWORD PTR [eax+0x406333e1]
  4478a0:	in     al,dx
  4478a1:	mov    ah,0x4f
  4478a3:	inc    eax
  4478a4:	bound  edi,QWORD PTR [edx+0x52]
  4478a7:	push   esp
  4478a8:	test   ebx,edi
  4478aa:	data16 lods ax,WORD PTR ds:[esi]
  4478ad:	jmp    0xc2be22b2
  4478b2:	jecxz  0x447882
  4478b4:	dec    edx
  4478b5:	psraw  mm4,mm4
  4478b8:	sbb    DWORD PTR [edx+0x7f],eax
  4478bb:	xchg   edi,eax
  4478bc:	sub    eax,0x13449a5
  4478c1:	pusha  
  4478c2:	push   0xffffffb1
  4478c4:	fstp   DWORD PTR [ecx+0x4e]
  4478c7:	pop    ss
  4478c8:	test   DWORD PTR [edi+eax*2+0xeb3e5c9],edx
  4478cf:	mov    ds:0xe98af7ae,eax
  4478d4:	ja     0x4478b1
  4478d6:	cmp    ebp,esi
  4478d8:	in     al,dx
  4478d9:	leave  
  4478da:	dec    ecx
  4478db:	jnp    0x4478d9
  4478dd:	jge    0x44789c
  4478df:	and    DWORD PTR [esi+0x12],0xffffffcc
  4478e3:	sbb    esp,DWORD PTR [esi+0x3c16d81a]
  4478e9:	cwde   
  4478ea:	adc    ebp,DWORD PTR [esi]
  4478ec:	outs   dx,DWORD PTR ds:[esi]
  4478ed:	mov    ds:0xf64cf314,al
  4478f2:	test   al,0x21
  4478f4:	xchg   ah,bl
  4478f6:	daa    
  4478f7:	test   eax,0x9aa3114d
  4478fc:	loope  0x4478d2
  4478fe:	out    0xb8,al
  447900:	icebp  
  447901:	ds inc esi
  447903:	daa    
  447904:	inc    esi
  447905:	pop    es
  447906:	jno    0x44789b
  447908:	add    al,0x49
  44790a:	jns    0x447920
  44790c:	loope  0x44790f
  44790e:	pop    ss
  44790f:	xchg   edi,eax
  447910:	mov    bh,0x2c
  447912:	cmp    ah,al
  447914:	push   eax
  447915:	dec    esi
  447916:	in     eax,dx
  447917:	jnp    0x447971
  447919:	fist   WORD PTR [edi-0x11b1ebe]
  44791f:	mov    ch,0x76
  447921:	sbb    al,0xdb
  447923:	stos   BYTE PTR es:[edi],al
  447924:	dec    ebp
  447925:	jo     0x4479a0
  447927:	and    eax,0xb2a4390c
  44792c:	sub    DWORD PTR [ecx-0x49ab9ed8],ecx
  447932:	test   eax,0x3b6d6346
  447937:	add    BYTE PTR [esi+ebp*4],0x67
  44793b:	inc    esi
  44793c:	mov    ebx,0x815c3089
  447941:	loop   0x44793d
  447943:	repz jmp 0x1e92:0xa6f991f3
  44794b:	in     eax,0x75
  44794d:	retf   
  44794e:	lock jg 0x44798a
  447951:	inc    ebx
  447952:	sbb    DWORD PTR [esi+0x51],0x19aae82c
  447959:	cmp    eax,0x6b5d4f01
  44795f:	call   0xd53c:0xb22a8c7b
  447966:	fucom  st(7)
  447968:	mov    eax,DWORD PTR [ecx]
  44796a:	lahf   
  44796b:	stc    
  44796c:	jnp    0x447942
  44796e:	out    0x76,eax
  447970:	mov    gs:0xa05d4516,eax
  447976:	and    eax,0xffffffa2
  447979:	int3   
  44797a:	lods   al,BYTE PTR ds:[esi]
  44797b:	sub    ah,BYTE PTR [esi+0x22]
  44797e:	and    BYTE PTR [edi],bh
  447980:	or     eax,0x925b1eb5
  447985:	pop    ss
  447986:	rcl    BYTE PTR [ecx+eiz*4-0x40],0x4d
  44798b:	icebp  
  44798c:	mov    edx,0xd400fb68
  447991:	inc    ecx
  447992:	outs   dx,BYTE PTR ds:[esi]
  447993:	fisttp QWORD PTR [edx+0x3bd4497a]
  447999:	in     al,0xbc
  44799b:	aas    
  44799c:	out    0xcc,eax
  44799e:	cmp    eax,0x75af85c6
  4479a3:	repz aam 0x2
  4479a6:	out    0x8f,al
  4479a8:	xchg   edi,eax
  4479a9:	loop   0x447952
  4479ab:	mov    DWORD PTR [esi],esp
  4479ad:	inc    ebx
  4479ae:	shl    DWORD PTR [ecx-0x124ef374],1
  4479b4:	sbb    DWORD PTR [ebx-0x25fa0771],0x5e
  4479bb:	mov    ds:0xfcc4dc5a,eax
  4479c0:	ret    
  4479c1:	in     al,dx
  4479c2:	add    DWORD PTR [eax],esi
  4479c4:	push   edi
  4479c5:	mov    al,ds:0xa5a1f079
  4479ca:	or     BYTE PTR [edx],bh
  4479cc:	add    eax,0x166fbca9
  4479d1:	arpl   WORD PTR [ebx-0x1c74dd72],dx
  4479d7:	push   eax
  4479d8:	push   cs
  4479d9:	mov    bl,0x74
  4479db:	xor    eax,0x339746d2
  4479e0:	cmp    dh,bh
  4479e2:	adc    al,bh
  4479e4:	add    DWORD PTR [esi+ebp*8],ebp
  4479e7:	and    ah,dh
  4479e9:	retf   
  4479ea:	ds xchg BYTE PTR cs:[ecx+edx*2-0x69],dl
  4479f0:	sbb    BYTE PTR [esi+ecx*4+0x46ab0f36],bh
  4479f7:	and    edi,DWORD PTR [ecx-0x14]
  4479fa:	or     edi,DWORD PTR [edx+0x23660078]
  447a00:	jno    0x447a6e
  447a02:	retf   
  447a03:	push   ecx
  447a04:	(bad)  ds:0x8007fcbc
  447a0a:	iret   
  447a0b:	pop    ss
  447a0c:	rcr    edi,0x49
  447a0f:	arpl   cx,dx
  447a11:	or     BYTE PTR [ecx-0x798c6183],bl
  447a17:	jg     0x447a55
  447a19:	fbstp  TBYTE PTR [ebp+0x6b]
  447a1c:	push   esi
  447a1d:	push   esi
  447a1e:	lods   al,BYTE PTR ds:[esi]
  447a1f:	xchg   ebx,eax
  447a20:	lahf   
  447a21:	and    BYTE PTR [edi+0xe],bl
  447a24:	push   ds
  447a25:	xchg   esp,eax
  447a26:	out    0x98,eax
  447a28:	sbb    bl,BYTE PTR [edi]
  447a2a:	pop    ss
  447a2b:	xchg   ecx,eax
  447a2c:	adc    DWORD PTR [edx-0x1179d894],ebx
  447a32:	cwde   
  447a33:	mov    ecx,edx
  447a35:	mov    ds:0x4cb549dc,eax
  447a3a:	ret    
  447a3b:	add    eax,0x7e314d67
  447a40:	das    
  447a41:	xor    ah,BYTE PTR [edi]
  447a43:	ja     0x447a2e
  447a45:	int3   
  447a46:	icebp  
  447a47:	(bad)  
  447a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447a49:	in     eax,dx
  447a4a:	mov    edi,0x9714f59a
  447a50:	jle    0x447a5e
  447a52:	mov    bh,0x6b
  447a54:	pop    ecx
  447a55:	stos   BYTE PTR es:[edi],al
  447a56:	je     0x447a77
  447a58:	dec    edi
  447a59:	iret   
  447a5a:	pop    esi
  447a5b:	jns    0x447a76
  447a5d:	neg    DWORD PTR [ebp-0x7b]
  447a60:	enter  0x156,0xac
  447a64:	pop    eax
  447a65:	push   edi
  447a66:	jg     0x447a26
  447a68:	and    bh,BYTE PTR [esi-0x4b]
  447a6b:	mov    ebp,0x945abcc8
  447a70:	mov    dh,0x78
  447a72:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  447a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447a75:	xor    DWORD PTR [eax+esi*2],0x2cd07082
  447a7c:	cmp    eax,0x92394596
  447a81:	push   ds
  447a82:	in     al,dx
  447a83:	add    eax,0xc01215b0
  447a88:	push   ebx
  447a89:	push   DWORD PTR [edi-0x56a0de32]
  447a8f:	retf   0xb669
  447a92:	adc    al,0xc2
  447a94:	fst    st(4)
  447a96:	mov    bh,0x5c
  447a98:	(bad)  
  447a99:	cmp    BYTE PTR [ecx+0x4d],al
  447a9c:	fist   DWORD PTR [edx+0x4a]
  447a9f:	mov    esp,0xc9e7ee2a
  447aa4:	int    0xe4
  447aa6:	ret    0xb092
  447aa9:	dec    esp
  447aaa:	int    0x60
  447aac:	pop    esi
  447aad:	mov    WORD PTR [ebx-0x4d60af21],cs
  447ab3:	in     al,dx
  447ab4:	test   BYTE PTR [esp+edi*2+0x5b151a7e],cl
  447abb:	mov    eax,ds:0xaf14e536
  447ac0:	xor    eax,0xcbbf67cc
  447ac5:	cli    
  447ac6:	adc    eax,0xffffffed
  447ac9:	pmulhuw mm1,QWORD PTR [edx+0x4097196f]
  447ad0:	fldcw  WORD PTR [eax+0x746e248a]
  447ad6:	das    
  447ad7:	fcomp  DWORD PTR [eax]
  447ad9:	push   ecx
  447ada:	out    dx,al
  447adb:	fiadd  WORD PTR [ecx]
  447add:	icebp  
  447ade:	nop
  447adf:	popf   
  447ae0:	jp     0x447a7e
  447ae2:	jbe    0x447b4c
  447ae4:	fisubr WORD PTR [ebx+0x5ca62bf]
  447aea:	lods   eax,DWORD PTR ds:[esi]
  447aeb:	sub    DWORD PTR [ecx],ebp
  447aed:	js     0x447b14
  447aef:	push   eax
  447af0:	jmp    0x466500aa
  447af5:	ret    0xfe3d
  447af8:	fldcw  WORD PTR ds:0xc4f1ac3d
  447afe:	in     al,0x13
  447b00:	cs es out dx,al
  447b03:	add    dl,0xbb
  447b06:	adc    BYTE PTR [edi-0x5512f536],dh
  447b0c:	add    al,0x53
  447b0e:	aad    0x1b
  447b10:	mov    WORD PTR [ecx],?
  447b12:	ja     0x447b5e
  447b14:	inc    edx
  447b15:	push   ebp
  447b16:	mov    bl,0xf0
  447b18:	(bad)  
  447b19:	mov    eax,ds:0x71f4b7df
  447b1e:	dec    edi
  447b1f:	mov    ebp,esp
  447b21:	lahf   
  447b22:	and    edx,ebp
  447b24:	ds pop eax
  447b26:	(bad)  
  447b27:	adc    eax,0x997be453
  447b2c:	jbe    0x447b27
  447b2e:	fadd   QWORD PTR [edi-0x375ef61e]
  447b34:	sub    edi,DWORD PTR [ebx]
  447b36:	lea    edx,[ebx-0x77e46fef]
  447b3c:	das    
  447b3d:	test   BYTE PTR [edi-0x29c67845],ah
  447b43:	mov    ah,0x5e
  447b45:	cmp    esp,DWORD PTR [eax+0x2f2f8150]
  447b4b:	fs in  eax,0x88
  447b4e:	neg    DWORD PTR [ebp-0x63a16bb5]
  447b54:	push   cs
  447b55:	and    ebx,ebp
  447b57:	xor    BYTE PTR [ecx],ah
  447b59:	mov    ebp,DWORD PTR [ecx+0x18]
  447b5c:	mov    esi,0x75946a2a
  447b61:	dec    ebp
  447b62:	cmp    eax,0x5398aee9
  447b67:	cmp    BYTE PTR [ecx],dl
  447b69:	xlat   BYTE PTR ds:[ebx]
  447b6a:	les    eax,FWORD PTR [edx-0x156b30f3]
  447b70:	push   eax
  447b71:	inc    edi
  447b72:	std    
  447b73:	adc    eax,0x9b093988
  447b78:	pop    es
  447b79:	je     0x447b75
  447b7b:	cmp    eax,0x66a905a8
  447b80:	jle    0x447bca
  447b82:	sub    ebx,DWORD PTR [ecx+ecx*4]
  447b85:	mov    ebp,0xd40fa298
  447b8a:	or     al,0xbd
  447b8c:	jae    0x447bdf
  447b8e:	cs int 0x7f
  447b91:	out    dx,al
  447b92:	push   esi
  447b93:	in     eax,0x5f
  447b95:	(bad)  
  447b96:	mov    esi,0xa87130cb
  447b9b:	loop   0x447be3
  447b9d:	jnp    0x447c16
  447b9f:	mov    bl,0xca
  447ba1:	jb     0x447ba3
  447ba3:	lods   eax,DWORD PTR ds:[esi]
  447ba4:	hlt    
  447ba5:	imul   ebx,DWORD PTR [ebp-0x11b4e0ba],0x28
  447bac:	xor    DWORD PTR [esi-0x2e],esp
  447baf:	fdivr  QWORD PTR es:[edx-0x47bc7bef]
  447bb6:	mov    edi,0x7241163f
  447bbb:	fsubp  st(1),st
  447bbd:	aaa    
  447bbe:	pop    ecx
  447bbf:	retf   
  447bc0:	call   0xf387:0x39ca14db
  447bc7:	jp     0x447bac
  447bc9:	dec    ecx
  447bca:	call   0xa2bdc62f
  447bcf:	sahf   
  447bd0:	mov    edx,0x4840794b
  447bd5:	sub    BYTE PTR [ebx-0xc6f1c],ch
  447bdb:	push   ebx
  447bdc:	fdiv   st(2),st
  447bde:	add    al,0xa
  447be0:	imul   esp,edi,0x2d
  447be3:	adc    edi,edx
  447be5:	mov    BYTE PTR [ecx],ah
  447be7:	add    eax,0xa950145
  447bec:	adc    eax,0x5c8d409a
  447bf1:	inc    ebx
  447bf2:	xor    eax,0x866702c3
  447bf7:	retf   
  447bf8:	call   0xe8ff:0xc3424392
  447bff:	mov    cs,WORD PTR [eax+0x37b0ba27]
  447c05:	cmc    
  447c06:	sub    al,0x73
  447c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447c09:	jno    0x447c33
  447c0b:	loopne 0x447bc2
  447c0d:	in     al,dx
  447c0e:	sub    al,dh
  447c10:	gs mov dl,0x5a
  447c13:	dec    ebp
  447c14:	mov    eax,ds:0x39df9b19
  447c19:	leave  
  447c1a:	adc    al,0x5b
  447c1c:	mov    ebx,0xf47784dc
  447c21:	adc    esp,DWORD PTR [ebx-0x7bf5ccd2]
  447c27:	lock sahf 
  447c29:	out    dx,eax
  447c2a:	and    bh,BYTE PTR [edx+0x78]
  447c2d:	jp     0x447c1f
  447c2f:	(bad)  [eax]
  447c31:	and    BYTE PTR [eax+eax*4+0x20],dl
  447c35:	int    0xde
  447c37:	fs aad 0x76
  447c3a:	mov    DWORD PTR [ebp+ecx*4-0x1e],0x8aca5343
  447c42:	push   ss
  447c43:	lock xchg ebp,eax
  447c45:	retf   0xd291
  447c48:	push   esi
  447c49:	scas   al,BYTE PTR es:[edi]
  447c4a:	xchg   ebx,eax
  447c4b:	rcl    esp,1
  447c4d:	inc    esp
  447c4e:	mov    al,ds:0x93fb1497
  447c53:	ins    BYTE PTR es:[edi],dx
  447c54:	cmp    DWORD PTR [edi],ecx
  447c56:	and    al,0x9f
  447c58:	dec    esp
  447c59:	jb     0x447c94
  447c5b:	mov    edi,0x63993827
  447c60:	and    ch,BYTE PTR [eax]
  447c62:	pop    ss
  447c63:	in     al,0x7
  447c65:	cli    
  447c66:	xchg   ebp,eax
  447c67:	jbe    0x447cb0
  447c69:	sub    eax,0x5d8b4d84
  447c6e:	or     al,0x97
  447c70:	outs   dx,BYTE PTR ds:[esi]
  447c71:	fdivp  st(7),st
  447c73:	pusha  
  447c74:	mov    bh,0x3f
  447c76:	cmp    bh,cl
  447c78:	dec    edx
  447c79:	sub    bl,bl
  447c7b:	mov    bh,0x70
  447c7d:	loop   0x447cc1
  447c7f:	add    al,BYTE PTR [esi-0x3664a0c1]
  447c85:	loope  0x447c2d
  447c87:	ds mov dl,0x5f
  447c8a:	call   0x67111020
  447c8f:	retf   0x4fb5
  447c92:	mov    ax,0xae4d
  447c96:	mov    ch,ch
  447c98:	cmp    BYTE PTR [eax+0x716a644b],bl
  447c9e:	mov    BYTE PTR [ecx-0x5d7189f7],bh
  447ca4:	sub    DWORD PTR [esi+ebx*1-0x657e5502],edx
  447cab:	bound  esp,QWORD PTR [eax]
  447cad:	lods   eax,DWORD PTR ds:[esi]
  447cae:	xchg   edx,eax
  447caf:	sahf   
  447cb0:	shl    BYTE PTR [ebx],0x52
  447cb3:	add    eax,DWORD PTR [ebp+0x1e]
  447cb6:	mov    bh,0x50
  447cb8:	xchg   ebp,eax
  447cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447cba:	inc    edi
  447cbb:	sub    al,ch
  447cbd:	enter  0x1671,0xd0
  447cc1:	push   0xffffffe7
  447cc3:	xlat   BYTE PTR ds:[ebx]
  447cc4:	mov    cl,0xb0
  447cc6:	inc    DWORD PTR [ecx-0xf]
  447cc9:	mov    ds:0x120a1872,eax
  447cce:	test   DWORD PTR [ecx+eax*8+0x2c],0x1e71d4ec
  447cd6:	sbb    al,0xb9
  447cd8:	mov    ?,WORD PTR [ecx-0x2d5c8fff]
  447cde:	mov    ds:0x9d972066,eax
  447ce3:	cld    
  447ce4:	sub    dh,0x6f
  447ce7:	xlat   BYTE PTR ds:[ebx]
  447ce8:	adc    eax,0xa62a1740
  447ced:	xlat   BYTE PTR ds:[ebx]
  447cee:	mov    bh,0x4c
  447cf0:	ss mov edx,0x8fe59133
  447cf6:	and    DWORD PTR ds:0x7db8ef,0x2b753a2c
  447d00:	inc    esp
  447d01:	repnz stc 
  447d03:	in     al,0x99
  447d05:	push   ss
  447d06:	daa    
  447d07:	add    ebp,DWORD PTR [ebx+ecx*1-0xc5c3270]
  447d0e:	and    BYTE PTR [esi-0xc],0x0
  447d12:	int3   
  447d13:	sub    BYTE PTR [eax-0x2],cl
  447d16:	arpl   WORD PTR [edx-0x1b],bp
  447d19:	mov    ah,0x65
  447d1b:	clc    
  447d1c:	loopne 0x447d32
  447d1e:	mov    al,ds:0x90748d5e
  447d23:	jmp    0x5ed7c1bf
  447d28:	call   0x30d3:0x7e980586
  447d2f:	cmp    al,0x1d
  447d31:	test   ebp,ebx
  447d33:	and    al,0x6c
  447d35:	adc    BYTE PTR ds:0x385738fb,cl
  447d3b:	rcl    BYTE PTR [esi+edi*1+0xd],1
  447d3f:	inc    esi
  447d40:	lock mov al,0x9e
  447d43:	hlt    
  447d44:	sub    DWORD PTR es:[ecx-0x4a354761],ebp
  447d4b:	jmp    0x3e9e:0x741d6a40
  447d52:	mov    ebp,0x2ef3cbd9
  447d57:	les    eax,FWORD PTR [ecx]
  447d59:	test   DWORD PTR [ebx+0x872541b],edi
  447d5f:	lods   eax,DWORD PTR ds:[esi]
  447d60:	adc    esp,edi
  447d62:	loope  0x447d2c
  447d64:	jge    0x447d84
  447d66:	aam    0x9f
  447d68:	push   cs
  447d69:	mov    ebx,0x153b28c7
  447d6e:	fmul   QWORD PTR [ebx+0x2613647e]
  447d74:	mov    eax,0xe61ee8e0
  447d79:	dec    eax
  447d7a:	rcr    ah,1
  447d7c:	test   ch,ch
  447d7e:	daa    
  447d7f:	bound  ecx,QWORD PTR [ecx+0x4c]
  447d82:	mov    cl,0x38
  447d84:	pop    ds
  447d85:	stos   DWORD PTR es:[edi],eax
  447d86:	sar    BYTE PTR [esi],cl
  447d88:	in     al,0x75
  447d8a:	mov    eax,0xdf7726a9
  447d8f:	mov    WORD PTR [edi],fs
  447d91:	arpl   WORD PTR [edi],bx
  447d93:	sbb    eax,0xad3147ba
  447d98:	jae    0x447d22
  447d9a:	sbb    BYTE PTR [eax-0x5],dl
  447d9d:	test   DWORD PTR [ecx],ecx
  447d9f:	or     bh,bl
  447da1:	dec    esp
  447da2:	out    0x68,al
  447da4:	out    dx,al
  447da5:	gs aaa 
  447da7:	aas    
  447da8:	hlt    
  447da9:	jp     0x447d69
  447dab:	push   cs
  447dac:	not    DWORD PTR [ecx]
  447dae:	mov    ch,0x17
  447db0:	jle    0x447dcb
  447db2:	lods   al,BYTE PTR ds:[esi]
  447db3:	daa    
  447db4:	push   ss
  447db5:	cmp    eax,0x817b65c7
  447dba:	xchg   edi,eax
  447dbb:	add    BYTE PTR [edx],dh
  447dbd:	cmp    DWORD PTR [ebx+0x20],ebx
  447dc0:	mov    esi,0x4f32a049
  447dc5:	in     eax,0x8e
  447dc7:	sbb    eax,0x471982f6
  447dcc:	out    dx,eax
  447dcd:	nop
  447dce:	push   ss
  447dcf:	xor    esp,ecx
  447dd1:	xor    eax,0x45c80e08
  447dd6:	frstor [esi]
  447dd8:	repz scas eax,DWORD PTR es:[edi]
  447dda:	fstp   DWORD PTR [edx]
  447ddc:	fcom   DWORD PTR [eax-0x2620878c]
  447de2:	push   ebx
  447de3:	jae    0x447e20
  447de5:	cmp    DWORD PTR [eax+edx*2+0x38],ecx
  447de9:	adc    ah,BYTE PTR [edx]
  447deb:	jmp    0x33726884
  447df0:	out    0x7,al
  447df2:	adc    DWORD PTR [edi+ebx*2],ebp
  447df5:	push   0x48
  447df7:	mov    cl,BYTE PTR [esi]
  447df9:	lahf   
  447dfa:	add    ebp,edi
  447dfc:	jbe    0x447e24
  447dfe:	gs push edi
  447e00:	add    eax,0x3924c2ff
  447e05:	jmp    0x447e29
  447e07:	push   ecx
  447e08:	mov    ah,ah
  447e0a:	sar    BYTE PTR [edi+0x74fa6864],0x2c
  447e11:	jmp    0x993a:0x8df0b5d3
  447e18:	mov    DWORD PTR [ecx],edi
  447e1a:	mov    ds:0x76328274,al
  447e1f:	imul   esi,ecx,0xfffffffb
  447e22:	mov    al,0xf1
  447e24:	data16 sti 
  447e26:	inc    edi
  447e27:	xor    ebp,edi
  447e29:	sbb    DWORD PTR [ebx-0x67],esi
  447e2c:	pop    esp
  447e2d:	dec    edx
  447e2e:	call   0x8367:0x6e34970f
  447e35:	mov    BYTE PTR [ecx],cl
  447e37:	push   cs
  447e38:	test   al,0x4
  447e3a:	push   DWORD PTR [ecx+0x780c5d04]
  447e40:	xchg   BYTE PTR [edi],al
  447e42:	push   esp
  447e43:	mov    eax,0x88863de6
  447e48:	pop    esp
  447e49:	inc    esp
  447e4a:	(bad)  
  447e4b:	sti    
  447e4c:	mov    cl,0xc5
  447e4e:	test   DWORD PTR [edi],esp
  447e50:	aam    0x81
  447e52:	dec    ecx
  447e53:	outs   dx,BYTE PTR ds:[esi]
  447e54:	xchg   bh,dh
  447e56:	dec    ebx
  447e57:	inc    eax
  447e58:	mov    DWORD PTR [ecx],esp
  447e5a:	push   esi
  447e5b:	in     eax,dx
  447e5c:	imul   ecx,DWORD PTR [esi-0x8],0xd599b9cb
  447e63:	jne    0x447e5b
  447e65:	fnstsw WORD PTR [ebp-0xb]
  447e68:	shl    BYTE PTR [ecx],cl
  447e6a:	sub    BYTE PTR [ebx+0x528a4bc1],dh
  447e70:	int3   
  447e71:	mov    ch,0xb
  447e73:	call   0x81b3980d
  447e78:	jne    0x447ed3
  447e7a:	mov    esi,ebx
  447e7c:	jg     0x447ed9
  447e7e:	inc    ebp
  447e7f:	in     eax,0xb2
  447e81:	mov    ah,0x38
  447e83:	loop   0x447e4e
  447e85:	add    eax,DWORD PTR [eax-0x658b9df4]
  447e8b:	and    eax,0xba0bfb13
  447e90:	jnp    0x447e2c
  447e92:	ds ins DWORD PTR es:[edi],dx
  447e94:	push   esi
  447e95:	int3   
  447e96:	out    dx,al
  447e97:	aad    0x12
  447e99:	in     eax,0x16
  447e9b:	pushf  
  447e9c:	shr    DWORD PTR [eax-0x45],1
  447e9f:	or     DWORD PTR [ecx-0x9],ebp
  447ea2:	jge    0x447f1d
  447ea4:	jp     0x447ef4
  447ea6:	sbb    eax,0xa8317c33
  447eab:	add    DWORD PTR [ecx],eax
  447ead:	mov    bh,0x3a
  447eaf:	jne    0x447e43
  447eb1:	and    BYTE PTR [ecx+0x7d],bh
  447eb4:	aad    0xe9
  447eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447eb7:	pop    DWORD PTR [edx+ebx*2-0x6dab9c13]
  447ebe:	pop    ebp
  447ebf:	fsubr  QWORD PTR [eax-0x6a]
  447ec2:	xchg   esp,eax
  447ec3:	jmp    0x447ec4
  447ec5:	and    ebx,DWORD PTR ds:0x1d75f678
  447ecb:	and    ebx,DWORD PTR [edx+0x27]
  447ece:	(bad)  
  447ecf:	scas   eax,DWORD PTR es:[edi]
  447ed0:	adc    bl,BYTE PTR [edi+esi*4+0x40309649]
  447ed7:	sbb    ch,BYTE PTR [ebx+0x7db1e9a]
  447edd:	jo     0x447e69
  447edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447ee0:	hlt    
  447ee1:	cmp    eax,0x55fd12d6
  447ee6:	dec    esp
  447ee7:	push   es
  447ee8:	icebp  
  447ee9:	iret   
  447eea:	popf   
  447eeb:	dec    ebp
  447eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447eed:	adc    BYTE PTR [edi-0x50f18f86],al
  447ef3:	xor    dh,BYTE PTR [edi+0x1d49f61a]
  447ef9:	dec    esi
  447efa:	(bad)
  447efd:	addr16 push 0xffffffb5
  447f00:	imul   ecx,DWORD PTR [eax+0x2c],0xb
  447f04:	pushf  
  447f05:	in     al,dx
  447f06:	pop    ecx
  447f07:	cli    
  447f08:	sub    eax,DWORD PTR [eax]
  447f0a:	scas   eax,DWORD PTR es:[edi]
  447f0b:	test   al,0x9f
  447f0d:	mov    ebx,0xee4d994a
  447f12:	add    edx,0xffffffa4
  447f15:	sbb    eax,0x643b9345
  447f1a:	leave  
  447f1b:	dec    esi
  447f1c:	dec    ebx
  447f1d:	xor    ch,BYTE PTR [edi+0x725dd800]
  447f23:	jno    0x447f9d
  447f25:	js     0x447f9d
  447f27:	adc    eax,0xbaad5cbb
  447f2c:	inc    ecx
  447f2d:	mov    eax,0x5de92015
  447f32:	inc    eax
  447f33:	std    
  447f34:	add    bh,BYTE PTR [ecx-0x10]
  447f37:	add    bl,BYTE PTR [ecx+0x3494fbb6]
  447f3d:	jp     0x447f9b
  447f3f:	inc    ecx
  447f40:	push   edx
  447f41:	aad    0xfd
  447f43:	mov    eax,ds:0xe8a1d28b
  447f48:	push   ds
  447f49:	sub    eax,DWORD PTR ds:0xc6a63fe2
  447f4f:	adc    edi,DWORD PTR [ebp-0x36]
  447f52:	push   esp
  447f53:	jl     0x447f55
  447f55:	(bad)  
  447f56:	(bad)  [ebx-0x4e076cf5]
  447f5c:	xor    eax,0x3451845
  447f61:	pop    es
  447f62:	mov    eax,0x668b6e6f
  447f67:	xor    BYTE PTR [edi],ch
  447f69:	jo     0x447fb1
  447f6b:	les    eax,FWORD PTR [ecx+0x69]
  447f6e:	in     al,dx
  447f6f:	outs   dx,DWORD PTR ds:[esi]
  447f70:	push   edx
  447f71:	dec    dx
  447f73:	or     al,0xb1
  447f75:	mov    dh,0x59
  447f77:	hlt    
  447f78:	loope  0x447f93
  447f7a:	push   esp
  447f7b:	mov    eax,0x90109960
  447f80:	mov    cl,cl
  447f82:	fstp   QWORD PTR [edi]
  447f84:	push   cs
  447f85:	jle    0x447ff8
  447f87:	sub    DWORD PTR [edi+0x60],esp
  447f8a:	or     dl,BYTE PTR [esi]
  447f8c:	push   ds
  447f8d:	pushf  
  447f8e:	fsub   st,st(5)
  447f90:	loopne 0x447fb6
  447f92:	xchg   ebx,eax
  447f93:	push   ds
  447f94:	or     eax,0x214ddcad
  447f99:	xlat   BYTE PTR ds:[ebx]
  447f9a:	adc    edx,DWORD PTR fs:[ebx]
  447f9d:	sub    eax,0x409fea33
  447fa2:	jg     0x447f9b
  447fa4:	leave  
  447fa5:	and    al,0xc2
  447fa7:	mov    ebx,0x65543f8b
  447fac:	jb     0x447f49
  447fae:	xlat   BYTE PTR ds:[ebx]
  447faf:	and    DWORD PTR [ebp+0x4f8b346d],esp
  447fb5:	stc    
  447fb6:	and    eax,0x1dfa92c4
  447fbb:	int    0xc5
  447fbd:	jne    0x447feb
  447fbf:	mov    ecx,0x1273a504
  447fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447fc5:	xor    eax,0xffee66c5
  447fca:	xchg   ebx,eax
  447fcb:	jnp    0x447f8d
  447fcd:	and    eax,0x45ec913c
  447fd2:	pop    DWORD PTR [edi]
  447fd4:	mov    BYTE PTR [ebx-0x24738722],ch
  447fda:	push   es
  447fdb:	fidivr WORD PTR [eax]
  447fdd:	xor    eax,DWORD PTR [ebp-0x36]
  447fe0:	rol    al,0x54
  447fe3:	push   ss
  447fe4:	pop    ecx
  447fe5:	sbb    DWORD PTR [eax+0x6d4be04b],eax
  447feb:	xchg   ebx,eax
  447fec:	das    
  447fed:	or     BYTE PTR [esi-0x4dd55923],dl
  447ff3:	repnz mov ebp,0x5d6fa8fb
  447ff9:	xchg   ebx,eax
  447ffa:	mov    dl,0xbd
  447ffc:	add    al,0x7a
  447ffe:	pushf  
  447fff:	mov    DWORD PTR [eax],edx
  448001:	push   0xf2100b46
  448006:	(bad)  
  448007:	mov    cl,0x77
  448009:	inc    BYTE PTR [ebx]
  44800b:	sbb    eax,edi
  44800d:	fldcw  WORD PTR [ebp+edi*4-0x23]
  448011:	retf   0xf68e
  448014:	cmp    eax,0xa3657afb
  448019:	cli    
  44801a:	pop    ebp
  44801b:	and    ch,cl
  44801d:	(bad)  
  44801e:	out    dx,al
  44801f:	xor    dl,BYTE PTR [eax]
  448021:	popf   
  448022:	call   0x9f659df3
  448027:	sub    al,BYTE PTR [eax-0x3]
  44802a:	mov    cl,0x50
  44802c:	xchg   ecx,eax
  44802d:	sub    eax,0x4b3bd11c
  448032:	mov    al,0xb6
  448034:	push   ebx
  448035:	popf   
  448036:	fs aam 0x69
  448039:	loope  0x448070
  44803b:	fs aaa 
  44803d:	xchg   edi,eax
  44803e:	push   eax
  44803f:	sub    BYTE PTR [edi],ah
  448041:	adc    edi,DWORD PTR [esi-0x64]
  448044:	(bad)  
  448045:	repz mov eax,ds:0x2370e40d
  44804b:	cwde   
  44804c:	mov    al,0x1
  44804e:	add    dl,BYTE PTR [eax+0x58]
  448051:	sbb    DWORD PTR [ecx-0x6c256e59],ebx
  448057:	ret    
  448058:	imul   esp,DWORD PTR [edx-0xd],0xc508c438
  44805f:	cmp    esp,DWORD PTR [edi]
  448061:	pop    es
  448062:	fsub   QWORD PTR [edi-0xb4cb65c]
  448068:	cdq    
  448069:	jbe    0x448039
  44806b:	popf   
  44806c:	xlat   BYTE PTR ds:[ebx]
  44806d:	sub    ah,BYTE PTR [ecx]
  44806f:	(bad)  
  448070:	cs push edx
  448072:	out    dx,eax
  448073:	sub    BYTE PTR [eax-0x54],dl
  448076:	sbb    ebp,DWORD PTR [eax]
  448078:	xor    DWORD PTR [edi-0x61],esi
  44807b:	adc    DWORD PTR [ebp-0x33],esp
  44807e:	imul   ebx,DWORD PTR [ebp+0x34],0x3c
  448082:	fldcw  WORD PTR [ebx-0x54]
  448085:	mov    ds:0x2883adec,eax
  44808a:	mov    ah,0x47
  44808c:	comiss xmm7,DWORD PTR [edx-0x1873376a]
  448093:	adc    ebp,DWORD PTR [ebp-0x79]
  448096:	arpl   WORD PTR [esi],dx
  448098:	mov    esp,edx
  44809a:	mov    dh,BYTE PTR [ecx-0x62]
  44809d:	pop    edi
  44809e:	dec    ebx
  44809f:	call   0x7f95:0x6ecfe5cf
  4480a6:	and    al,cl
  4480a8:	jne    0x4480ee
  4480aa:	push   edx
  4480ab:	cwde   
  4480ac:	add    ch,BYTE PTR [edx]
  4480ae:	jns    0x44808e
  4480b0:	retf   
  4480b1:	and    bh,BYTE PTR [ebx-0x32]
  4480b4:	add    eax,0xeedb2944
  4480b9:	es aam 0x72
  4480bc:	pop    ebx
  4480bd:	(bad)  
  4480bf:	push   esi
  4480c0:	mov    ds:0xaefa9a2,al
  4480c5:	xor    ch,cl
  4480c7:	mov    ds:0x462db9dc,al
  4480cc:	imul   esp,DWORD PTR [esi+ecx*1-0x10],0xffffff88
  4480d1:	and    ch,BYTE PTR [ebx]
  4480d3:	add    eax,0x7457b29b
  4480d8:	ins    BYTE PTR es:[edi],dx
  4480d9:	imul   esi,DWORD PTR [ebp-0x58ba673a],0x11
  4480e0:	lods   eax,DWORD PTR fs:[esi]
  4480e2:	out    0x79,eax
  4480e4:	frstor [ecx-0x55b2e7fd]
  4480ea:	push   es
  4480eb:	adc    DWORD PTR [ebx+0x5088158d],0xffffffe1
  4480f2:	push   0xffffffdc
  4480f4:	mov    ah,0x38
  4480f6:	cmp    DWORD PTR [edx],eax
  4480f8:	and    eax,0x248ef815
  4480fd:	inc    DWORD PTR [edx]
  4480ff:	repnz add bl,BYTE PTR [edi+0x46bb441a]
  448106:	jo     0x4480b0
  448108:	push   edx
  448109:	jmp    0x5a5508b
  44810e:	pop    ds
  44810f:	cwde   
  448110:	or     esi,DWORD PTR [esp+ecx*8+0xd]
  448114:	mov    dl,0x47
  448116:	bound  esi,QWORD PTR [esi-0x3e652b7f]
  44811c:	das    
  44811d:	out    dx,eax
  44811e:	icebp  
  44811f:	lea    ecx,[edx]
  448121:	ror    DWORD PTR [ebx+0x4e],1
  448124:	sub    al,BYTE PTR [ebp-0x677e1da7]
  44812a:	xor    BYTE PTR [esi],cl
  44812c:	mov    al,0x72
  44812e:	imul   ebp,DWORD PTR [eax],0x8020b7f9
  448134:	sub    DWORD PTR [edi-0x47],0x36
  448138:	or     esi,DWORD PTR [eax]
  44813a:	out    0xa0,eax
  44813c:	cmp    al,0xd0
  44813e:	cdq    
  44813f:	push   ecx
  448140:	xor    eax,0xb07478c9
  448145:	cmc    
  448146:	sbb    bh,BYTE PTR [edx+0x1de65268]
  44814c:	setno  BYTE PTR [edx+0x2c2d7df0]
  448153:	in     eax,dx
  448154:	adc    edx,DWORD PTR [esi]
  448156:	sub    edi,ebx
  448158:	ins    BYTE PTR es:[edi],dx
  448159:	cmp    bh,BYTE PTR [ebx]
  44815b:	rcr    esp,1
  44815d:	inc    ebx
  44815e:	cmp    eax,0x2ebb0c10
  448163:	xor    edi,DWORD PTR [eax]
  448165:	mov    eax,0xd0a9e2c3
  44816a:	jp     0x4481c3
  44816c:	in     al,dx
  44816d:	sub    eax,0xbfb8ad84
  448172:	repz sbb ch,BYTE PTR [ebx]
  448175:	es mov ah,0xe9
  448178:	neg    BYTE PTR [ebp-0x34]
  44817b:	outs   dx,BYTE PTR ds:[esi]
  44817c:	repz inc eax
  44817e:	call   0xb9f8:0x96db38d4
  448185:	imul   ebp,DWORD PTR [esi-0x6e88cc8f],0xfffffffc
  44818c:	lds    ecx,FWORD PTR [ecx]
  44818e:	ficomp WORD PTR ds:0x9ebb0e3
  448194:	fiadd  DWORD PTR [esi-0xd]
  448197:	in     al,dx
  448198:	jb     0x44813a
  44819a:	cld    
  44819b:	sub    DWORD PTR [ebx+0x1],ebx
  44819e:	pop    edi
  44819f:	sub    eax,0x9f58c515
  4481a4:	xchg   edi,eax
  4481a5:	sub    BYTE PTR [ebx-0x7d],ah
  4481a8:	in     al,0x41
  4481aa:	jmp    0x448177
  4481ac:	ja     0x448215
  4481ae:	call   0x1c90:0x9f67a144
  4481b5:	jmp    0x7b41:0x4593a955
  4481bc:	push   0xffffffcf
  4481be:	fldenv [eax+0x5beea6e]
  4481c4:	mov    WORD PTR gs:[ecx+0x58],gs
  4481c8:	fist   WORD PTR [edi-0x13]
  4481cb:	xchg   edx,eax
  4481cc:	sahf   
  4481cd:	push   0xd1c38159
  4481d2:	add    BYTE PTR [edi-0x1f],cl
  4481d5:	std    
  4481d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4481d7:	push   ecx
  4481d8:	lea    ebx,[edi+eax*2]
  4481db:	pop    ebx
  4481dc:	or     edi,ebp
  4481de:	adc    DWORD PTR [eax-0x699fafde],ecx
  4481e4:	repz or BYTE PTR [esi+0x47],ch
  4481e8:	push   esp
  4481e9:	nop
  4481ea:	sti    
  4481eb:	ret    
  4481ec:	mov    cl,0x47
  4481ee:	clc    
  4481ef:	add    ebp,DWORD PTR [eax]
  4481f1:	push   edi
  4481f2:	jecxz  0x4481f3
  4481f4:	xor    BYTE PTR [edi-0x9c7219],al
  4481fa:	iret   
  4481fb:	data16 loop 0x448277
  4481fe:	sub    edx,DWORD PTR [edx]
  448200:	pop    eax
  448201:	inc    ebx
  448202:	and    si,WORD PTR [esi+0x42]
  448206:	inc    ecx
  448208:	(bad)  
  448209:	fptan  
  44820b:	je     0x44822c
  44820d:	outs   dx,DWORD PTR ds:[esi]
  44820e:	sub    ecx,esi
  448210:	mov    al,ds:0x2d7987b6
  448215:	shl    DWORD PTR [edx],1
  448217:	lods   eax,DWORD PTR ds:[esi]
  448218:	xor    al,0x5
  44821a:	push   ds
  44821b:	ror    DWORD PTR [edi],cl
  44821d:	push   ss
  44821e:	mov    ds:0x92c4ef01,al
  448223:	or     BYTE PTR [edi+0x67e5fd3b],dl
  448229:	mov    ebx,ecx
  44822b:	pop    eax
  44822c:	pop    ebp
  44822d:	xor    cl,BYTE PTR [ecx-0x17]
  448230:	xor    BYTE PTR [ecx-0x21],0xe4
  448234:	cmp    eax,0xed01bd9b
  448239:	out    0x4e,al
  44823b:	ror    DWORD PTR [ebx-0x37f3953],0xf3
  448242:	stos   BYTE PTR es:[edi],al
  448243:	sub    cl,BYTE PTR [edi+0x37123909]
  448249:	test   eax,0x56608fe3
  44824e:	jge    0x4482bb
  448250:	lahf   
  448251:	scas   al,BYTE PTR es:[edi]
  448252:	aaa    
  448253:	sub    DWORD PTR [edi+ebp*1-0x5a8b658e],eax
  44825a:	dec    edx
  44825b:	dec    esi
  44825c:	mov    eax,ds:0x5373abb6
  448261:	stos   BYTE PTR es:[edi],al
  448262:	add    DWORD PTR [edx+edi*4],esi
  448265:	in     al,0x8b
  448267:	mov    eax,0x43efada5
  44826c:	stos   DWORD PTR es:[edi],eax
  44826d:	inc    ebx
  44826e:	jbe    0x44828a
  448270:	in     eax,0xda
  448272:	inc    DWORD PTR [esi]
  448274:	pop    ds
  448275:	cmp    eax,0x11db9160
  44827a:	mov    al,0xaa
  44827c:	imul   esp,DWORD PTR [ebx],0x0
  44827f:	jecxz  0x4482f4
  448281:	aas    
  448282:	js     0x448261
  448284:	aam    0x4a
  448286:	push   ds
  448287:	ds mov esi,0x8f3236f6
  44828d:	sar    BYTE PTR [edi+ecx*8-0x1d614670],cl
  448294:	mov    eax,ds:0xdc290c0c
  448299:	ds icebp 
  44829b:	out    0xf3,eax
  44829d:	(bad)  
  44829e:	ins    DWORD PTR es:[edi],dx
  44829f:	imul   ecx
  4482a1:	and    BYTE PTR [edx],bh
  4482a3:	fdiv   st,st(7)
  4482a5:	and    DWORD PTR [ebp-0x4],ebx
  4482a8:	sbb    DWORD PTR [ecx-0x40],ebx
  4482ab:	and    dh,BYTE PTR [ecx+0x45224411]
  4482b1:	popf   
  4482b2:	mov    eax,ds:0x4bf86ca
  4482b7:	jmp    0x3e851190
  4482bc:	adc    al,0xeb
  4482be:	dec    esi
  4482bf:	xchg   esi,eax
  4482c0:	outs   dx,DWORD PTR ds:[esi]
  4482c1:	(bad)  
  4482c2:	aam    0x6f
  4482c4:	aas    
  4482c5:	inc    edx
  4482c6:	pop    ebp
  4482c7:	cmp    bl,ch
  4482c9:	sub    bh,BYTE PTR [edi-0x21]
  4482cc:	sbb    al,0x40
  4482ce:	(bad)  
  4482cf:	fldcw  WORD PTR [edi-0x74]
  4482d2:	cmc    
  4482d3:	jns    0x4482d1
  4482d5:	mov    ds,WORD PTR [edi-0x6032a6bd]
  4482db:	sysenter 
  4482dd:	shl    dh,cl
  4482df:	mov    ah,0x6f
  4482e1:	ins    DWORD PTR es:[edi],dx
  4482e2:	test   BYTE PTR [ecx+esi*8+0x70],ch
  4482e6:	inc    eax
  4482e7:	cld    
  4482e8:	std    
  4482e9:	jno    0x448295
  4482eb:	push   ds
  4482ec:	(bad)  
  4482ed:	cli    
  4482ee:	imul   ebx,DWORD PTR [ebx],0x95d8f91e
  4482f4:	repz loop 0x44835f
  4482f7:	mov    esp,0xbe79c245
  4482fc:	fisub  DWORD PTR [ebx+0xf]
  4482ff:	std    
  448300:	rcr    DWORD PTR [eax+0x849b848],cl
  448306:	sahf   
  448307:	clc    
  448308:	imul   ebx,DWORD PTR [ebp-0x3a],0xffffff9d
  44830c:	in     eax,dx
  44830d:	mov    BYTE PTR ds:0x4fc3aba8,0xa9
  448314:	adc    bh,BYTE PTR [eax]
  448316:	repnz mov eax,DWORD PTR es:[eax]
  44831a:	iret   
  44831b:	inc    edi
  44831c:	in     al,0x0
  44831e:	or     al,0xa4
  448320:	out    0xcc,eax
  448322:	in     eax,dx
  448323:	icebp  
  448324:	cmp    ebp,DWORD PTR [edx]
  448326:	xchg   edx,eax
  448327:	std    
  448328:	inc    esp
  448329:	pop    ebx
  44832a:	retf   
  44832b:	cmp    DWORD PTR [eax],ebx
  44832d:	push   ebp
  44832e:	mov    esp,0x3c1249ab
  448333:	lea    ebx,[esp+ebx*8-0x3e]
  448337:	enter  0x778d,0x8f
  44833b:	out    0x47,eax
  44833d:	pop    edi
  44833e:	push   0xf880a70d
  448343:	sub    eax,0x8c3755f3
  448348:	test   eax,0x3a286d19
  44834d:	xchg   ebx,edi
  44834f:	ds xchg esi,eax
  448351:	dec    edx
  448352:	cmp    ch,BYTE PTR [edi]
  448354:	(bad)  
  448355:	jb     0x448393
  448357:	in     al,dx
  448358:	mov    ebx,0x18e16442
  44835d:	push   0xffffffdd
  44835f:	cmp    al,0x85
  448361:	jmp    eax
  448363:	xor    BYTE PTR ds:0x340e1e47,0x58
  44836a:	pop    ebx
  44836b:	mov    WORD PTR [edi+eiz*2+0x6a],cs
  44836f:	stos   DWORD PTR es:[edi],eax
  448370:	ret    
  448371:	scas   al,BYTE PTR es:[edi]
  448372:	jae    0x448337
  448374:	push   0xce7042cc
  448379:	cmp    dh,cl
  44837b:	adc    dh,BYTE PTR [eax+0x22]
  44837e:	mov    esp,0xe2dffb35
  448383:	cli    
  448384:	push   esp
  448385:	add    al,0xef
  448387:	mov    ah,BYTE PTR [eax]
  448389:	repnz push 0xffffff8d
  44838c:	pop    esp
  44838d:	test   DWORD PTR [edx+0x5a4b4ff9],ebp
  448393:	xchg   esi,eax
  448394:	push   ebp
  448395:	fmul   DWORD PTR [eax-0x46b7b86a]
  44839b:	loopne 0x448373
  44839d:	xchg   edi,eax
  44839e:	out    0x5,eax
  4483a0:	sub    BYTE PTR [esi+0x4],ah
  4483a3:	into   
  4483a4:	pop    eax
  4483a5:	mov    ah,0xbb
  4483a7:	mov    ah,0x9a
  4483a9:	outs   dx,BYTE PTR ds:[esi]
  4483aa:	mov    fs,edi
  4483ac:	mov    ebx,0x70b673d5
  4483b1:	mov    bh,BYTE PTR [eax-0x32]
  4483b4:	sti    
  4483b5:	out    0x3a,eax
  4483b7:	int3   
  4483b8:	sbb    al,0x6e
  4483ba:	cli    
  4483bb:	inc    eax
  4483bc:	and    al,cl
  4483be:	push   edx
  4483bf:	xchg   ebx,eax
  4483c0:	mov    bl,BYTE PTR [eax-0x6d]
  4483c3:	sub    ecx,ecx
  4483c5:	test   BYTE PTR [ebx],dl
  4483c7:	jbe    0x448389
  4483c9:	or     ah,BYTE PTR [eax]
  4483cb:	and    al,0x38
  4483cd:	sbb    al,0x1d
  4483cf:	clc    
  4483d0:	push   0x34996259
  4483d5:	int3   
  4483d6:	mov    ah,0x46
  4483d8:	icebp  
  4483d9:	lds    esi,FWORD PTR [esi-0x3205e87d]
  4483df:	push   ss
  4483e0:	push   ss
  4483e1:	or     al,0xdd
  4483e3:	mov    esp,0xf348b31b
  4483e8:	mov    esi,0x4cee9ac3
  4483ed:	enter  0x6b16,0x5e
  4483f1:	data16 fcom DWORD PTR [ebx-0x6a]
  4483f5:	icebp  
  4483f6:	xchg   esi,eax
  4483f7:	iret   
  4483f8:	mov    dh,0xa5
  4483fa:	mov    cl,0xab
  4483fc:	mov    eax,0x516eaa2d
  448401:	and    edi,DWORD PTR ds:0xaf173cb
  448407:	mov    ch,0xc
  448409:	cs sbb eax,0x3b840c30
  44840f:	mov    al,ds:0xd9e7fa0e
  448414:	and    eax,0xe4ef15be
  448419:	outs   dx,DWORD PTR ds:[esi]
  44841a:	xlat   BYTE PTR ds:[ebx]
  44841b:	inc    edx
  44841c:	out    dx,eax
  44841d:	test   DWORD PTR [ebx],ebx
  44841f:	sub    esp,DWORD PTR [eax]
  448421:	dec    esi
  448422:	adc    al,0x38
  448424:	out    0x37,al
  448426:	xor    eax,0x10fa0ed3
  44842b:	pop    esi
  44842c:	pusha  
  44842d:	and    DWORD PTR [esi+0x1b],esi
  448430:	pop    ebx
  448431:	jne    0x448402
  448433:	jne    0x448404
  448435:	xor    al,0x49
  448437:	jmp    0xa2925d3d
  44843c:	and    eax,0xf95789bb
  448441:	gs jecxz 0x4484b3
  448444:	in     eax,0x90
  448446:	dec    esi
  448447:	inc    edi
  448448:	sbb    eax,ebx
  44844a:	(bad)  
  44844b:	call   0x3a6d6491
  448450:	ss mov al,0x63
  448453:	cmc    
  448454:	outs   dx,BYTE PTR ds:[esi]
  448455:	pop    esp
  448456:	xchg   edi,eax
  448457:	pushf  
  448458:	or     DWORD PTR [eax],ecx
  44845a:	cmp    eax,0x7ce863e0
  44845f:	jbe    0x448450
  448461:	dec    eax
  448462:	ret    
  448463:	jo     0x448459
  448465:	call   0x9cda:0x62262e5
  44846c:	inc    ebx
  44846d:	xor    eax,0x36b5f700
  448472:	lods   al,BYTE PTR ds:[esi]
  448473:	or     edx,DWORD PTR [ecx]
  448475:	aad    0xbe
  448477:	test   BYTE PTR [esi],0xc2
  44847a:	mov    ds:0x7c9ba61a,eax
  44847f:	push   0x3f1dc8f2
  448484:	leave  
  448485:	cmp    DWORD PTR [esi-0x6c],esi
  448488:	(bad)  
  448489:	ins    BYTE PTR es:[edi],dx
  44848a:	or     al,0xc0
  44848c:	ss cmp al,0x92
  44848f:	sbb    al,0x5
  448491:	retf   
  448492:	out    0xd2,al
  448494:	jb     0x448515
  448496:	dec    esp
  448497:	xchg   eax,ebp
  448499:	or     BYTE PTR [ebp+0x3f],bh
  44849c:	and    BYTE PTR [ebp+0x12],bl
  44849f:	xchg   edi,eax
  4484a0:	dec    ecx
  4484a1:	push   0xfffffff9
  4484a3:	in     eax,dx
  4484a4:	dec    edx
  4484a5:	jmp    DWORD PTR [edx]
  4484a7:	xchg   ecx,eax
  4484a8:	dec    ecx
  4484a9:	mov    eax,esp
  4484ab:	inc    eax
  4484ac:	jnp    0x448513
  4484ae:	cmp    ebp,esp
  4484b0:	adc    edi,edi
  4484b2:	or     DWORD PTR [edx+edx*8-0x2d],eax
  4484b6:	push   ds
  4484b7:	or     ecx,esi
  4484b9:	jg     0x44849c
  4484bb:	push   esi
  4484bc:	add    al,0x78
  4484be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4484bf:	sbb    dh,BYTE PTR ds:0x7edc4e6c
  4484c5:	std    
  4484c6:	imul   edi,DWORD PTR [ebx],0x360224b4
  4484cc:	bound  edi,QWORD PTR [edx-0x7b064e1a]
  4484d2:	push   esi
  4484d3:	jle    0x4484db
  4484d5:	or     eax,0x2b5e733
  4484da:	js     0x44853d
  4484dc:	neg    BYTE PTR [ebp-0x63]
  4484df:	les    edx,FWORD PTR [edi]
  4484e1:	loope  0x4484d6
  4484e3:	jmp    0x51e7:0x4b2da8c3
  4484ea:	pop    ebp
  4484eb:	sbb    cl,ch
  4484ed:	scas   eax,DWORD PTR es:[edi]
  4484ee:	xchg   edx,eax
  4484ef:	mov    al,0xdb
  4484f1:	and    DWORD PTR [eax],ebx
  4484f3:	xchg   edi,eax
  4484f4:	or     bl,dh
  4484f6:	sub    ah,dh
  4484f8:	dec    eax
  4484f9:	sub    edx,DWORD PTR [edi+0x7e8d3ed8]
  4484ff:	dec    ecx
  448500:	inc    edi
  448501:	rol    BYTE PTR [edx-0x4ced9cff],0x8b
  448508:	out    0xd4,eax
  44850a:	ffreep st(1)
  44850c:	(bad)  
  44850d:	xor    BYTE PTR [eax-0x54048bc8],bl
  448513:	bound  esi,QWORD PTR [edx-0x23]
  448516:	add    BYTE PTR [eax-0x48f587d5],dh
  44851c:	fcmovb st,st(6)
  44851e:	mov    edi,0x1be28809
  448523:	inc    edi
  448524:	cs push ebx
  448526:	shr    BYTE PTR [edx-0x502c5409],1
  44852c:	mov    eax,ds:0x13b7fe4a
  448531:	xor    BYTE PTR [esi+0x51a937bd],ah
  448537:	sub    BYTE PTR [ebx+0x7c],bl
  44853a:	test   al,0xb0
  44853c:	inc    esp
  44853d:	cmp    al,0x5
  44853f:	add    al,0x74
  448541:	ds push es
  448543:	les    esp,FWORD PTR [edi-0x36487622]
  448549:	fiadd  DWORD PTR [ebx]
  44854b:	mov    BYTE PTR [ebx-0x4217faff],bl
  448551:	cmp    ch,ah
  448553:	neg    ah
  448555:	and    eax,0x328c9984
  44855a:	pop    ss
  44855b:	aas    
  44855c:	and    DWORD PTR [edi+edx*8-0x58],0x30
  448561:	popf   
  448562:	sar    BYTE PTR [ebx],1
  448564:	lods   eax,DWORD PTR ds:[esi]
  448565:	mov    edx,0xfd5866a4
  44856a:	xor    al,0x76
  44856c:	sub    esi,edi
  44856e:	stos   DWORD PTR es:[edi],eax
  44856f:	aam    0xa8
  448571:	xchg   ecx,eax
  448572:	xor    cl,BYTE PTR [ecx+ebx*8+0x3a]
  448576:	jns    0x4485c9
  448578:	pushf  
  448579:	dec    ebx
  44857a:	sub    dl,bl
  44857c:	les    edx,FWORD PTR [ebp-0x287d28ac]
  448582:	or     bl,BYTE PTR [edi-0x321d8c02]
  448588:	cli    
  448589:	rcr    eax,0xf9
  44858c:	cmp    DWORD PTR [ecx+ecx*2+0x4c191b01],esp
  448593:	mov    WORD PTR [ebx-0x60],ds
  448596:	lds    edx,FWORD PTR [edi+ebp*1+0x112897eb]
  44859d:	loopne 0x4485aa
  44859f:	jmp    0xa354856d
  4485a4:	xor    al,0x6f
  4485a6:	std    
  4485a7:	xor    BYTE PTR [edx+0x60e13e48],ch
  4485ad:	or     al,0x40
  4485af:	repnz and eax,0xdf78a192
  4485b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485b6:	(bad)  
  4485b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485b8:	inc    esp
  4485b9:	clc    
  4485ba:	hlt    
  4485bb:	or     eax,0xf6bb5baf
  4485c0:	xor    ah,bl
  4485c2:	inc    edi
  4485c3:	loopne 0x448586
  4485c5:	bswap  ebx
  4485c7:	outs   dx,DWORD PTR ds:[esi]
  4485c8:	pushf  
  4485c9:	push   ss
  4485ca:	ja     0x44855d
  4485cc:	and    eax,0x18bf03ec
  4485d1:	stos   DWORD PTR es:[edi],eax
  4485d2:	aas    
  4485d3:	inc    ecx
  4485d4:	pop    esi
  4485d5:	jo     0x44859d
  4485d7:	jp     0x4485c8
  4485d9:	jbe    0x448646
  4485db:	ins    BYTE PTR es:[edi],dx
  4485dc:	mov    ah,0x8a
  4485de:	mov    ecx,0x8d7c8cce
  4485e3:	jp     0x448629
  4485e5:	stc    
  4485e6:	mov    es,WORD PTR [ecx]
  4485e8:	call   0xf88a:0x1c08f92b
  4485ef:	lahf   
  4485f0:	jecxz  0x4485f3
  4485f2:	mov    gs,edi
  4485f4:	inc    ebp
  4485f5:	cmp    edi,DWORD PTR [edi-0x24]
  4485f8:	xor    ebp,edi
  4485fa:	fcomp  DWORD PTR [edi-0x2]
  4485fd:	fnstenv [ecx-0x32]
  448600:	sub    DWORD PTR [ebx-0x9],edx
  448603:	xchg   ebp,eax
  448604:	leave  
  448605:	push   0xea8050ad
  44860a:	addr16 sub al,0x52
  44860d:	and    ebp,DWORD PTR [ebx-0x47]
  448610:	cmp    edi,ecx
  448612:	jge    0x44863b
  448614:	jae    0x448615
  448616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448617:	jb     0x448641
  448619:	fnsave [edx+ecx*1]
  44861c:	inc    ecx
  44861d:	pop    ebp
  44861e:	dec    esi
  44861f:	cmp    DWORD PTR [eiz*4-0x7b28b9ce],ecx
  448626:	(bad)  
  448627:	add    al,0xb8
  448629:	rcr    BYTE PTR [ecx+0x762d9f13],cl
  44862f:	adc    BYTE PTR [ebx-0x4],al
  448632:	sub    BYTE PTR [edi-0x3a],al
  448635:	arpl   bx,si
  448637:	inc    ecx
  448638:	mov    ebp,0xd273954d
  44863d:	cli    
  44863e:	xchg   esi,eax
  44863f:	ds push es
  448641:	dec    ebp
  448642:	pop    es
  448643:	and    al,0x39
  448645:	and    al,0xe0
  448647:	xor    ebx,edx
  448649:	popf   
  44864a:	call   0xb3ce:0xab09808c
  448651:	ins    BYTE PTR es:[edi],dx
  448652:	stos   DWORD PTR es:[edi],eax
  448653:	mov    bl,0x46
  448655:	scas   al,BYTE PTR es:[edi]
  448656:	scas   al,BYTE PTR es:[edi]
  448657:	fldenv [ebp-0x780248f7]
  44865d:	dec    edi
  44865e:	loopne 0x4485fa
  448660:	sbb    al,0x39
  448662:	sbb    ebx,ebx
  448664:	add    ch,cl
  448666:	clc    
  448667:	mov    bl,0xf6
  448669:	sub    BYTE PTR [edx+esi*2+0x73],bh
  44866d:	adc    eax,0x38426b49
  448672:	xor    al,0x90
  448674:	cdq    
  448675:	cmp    BYTE PTR [ecx-0x56b72c7c],bh
  44867b:	es int 0xbe
  44867e:	mov    dl,0xfb
  448680:	xchg   DWORD PTR [esi],ebp
  448682:	fisttp DWORD PTR [edi-0x6363f223]
  448688:	fadd   st(3),st
  44868a:	es cmp eax,0x5c4fcc5d
  448690:	fistp  QWORD PTR [esi-0x2255fdf3]
  448696:	jo     0x4486f8
  448698:	or     BYTE PTR [edx+0x66],dl
  44869b:	jo     0x448647
  44869d:	aaa    
  44869e:	mov    al,ds:0xac20a013
  4486a3:	mov    ds:0x9490e70e,al
  4486a8:	les    esi,FWORD PTR [esi-0x3572b77e]
  4486ae:	into   
  4486af:	out    dx,eax
  4486b0:	outs   dx,DWORD PTR ds:[esi]
  4486b1:	shl    BYTE PTR [ecx],0xf4
  4486b4:	pop    eax
  4486b5:	mov    edx,0x8e941e6c
  4486ba:	(bad)  
  4486bb:	pushf  
  4486bc:	xor    BYTE PTR [edx],dh
  4486be:	push   0xffffffa1
  4486c0:	daa    
  4486c1:	outs   dx,DWORD PTR ds:[esi]
  4486c2:	shufps xmm6,XMMWORD PTR [esi-0x5d],0x79
  4486c7:	mov    esp,gs
  4486c9:	lea    eax,[edi+0x23868c9a]
  4486cf:	push   cs
  4486d0:	pop    edx
  4486d1:	mov    fs,WORD PTR [eax-0x76]
  4486d4:	(bad)  
  4486d6:	fdivrp st(0),st
  4486d8:	mov    ds:0xdd6787ed,eax
  4486dd:	jae    0x4486ba
  4486df:	mov    cl,0x43
  4486e1:	push   ss
  4486e2:	std    
  4486e3:	mov    esi,0xa3f7d7bb
  4486e8:	jbe    0x448687
  4486ea:	cmp    ebx,0x30
  4486ed:	jno    0x44870b
  4486ef:	jno    0x4486bb
  4486f1:	pop    ecx
  4486f2:	lods   eax,DWORD PTR ss:[esi]
  4486f4:	stos   DWORD PTR es:[edi],eax
  4486f5:	ins    BYTE PTR es:[edi],dx
  4486f6:	sub    DWORD PTR [ecx],edx
  4486f8:	and    DWORD PTR [ebp-0x24],esi
  4486fb:	cmp    ebp,esi
  4486fd:	jp     0x4486db
  4486ff:	xor    al,0xd2
  448701:	push   eax
  448702:	jb     0x448700
  448704:	ret    0xa6a7
  448707:	rcl    dh,0x14
  44870a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44870b:	daa    
  44870c:	lods   eax,DWORD PTR ds:[esi]
  44870d:	call   0x4ed155e8
  448712:	gs mov bl,0x5
  448715:	jbe    0x448707
  448717:	pop    edi
  448718:	mov    al,ds:0xb417725a
  44871d:	out    0x34,al
  44871f:	mov    al,ds:0x271d27f0
  448724:	sahf   
  448725:	aas    
  448726:	test   DWORD PTR ds:0xcebb1399,edx
  44872c:	mov    ebp,0xccfa4dea
  448731:	fbstp  TBYTE PTR [ebx-0x3a]
  448734:	imul   ecx,DWORD PTR [esi],0xdccea14b
  44873a:	jns    0x4486fa
  44873c:	jg     0x448704
  44873e:	push   ebx
  44873f:	xchg   ebp,eax
  448740:	addr16 cwde 
  448742:	adc    edi,edi
  448744:	stc    
  448745:	add    BYTE PTR ds:0x87969761,ah
  44874b:	xchg   esi,eax
  44874c:	jp     0x448717
  44874e:	iret   
  44874f:	jno    0x4486d3
  448751:	mov    ah,0x56
  448753:	out    dx,al
  448754:	dec    eax
  448755:	adc    ebx,DWORD PTR [eax]
  448757:	aas    
  448758:	add    dl,dl
  44875a:	dec    edi
  44875b:	push   edi
  44875c:	dec    ebx
  44875d:	nop
  44875e:	push   ecx
  44875f:	call   0x328d:0x6d9ffce4
  448766:	call   0x428982b2
  44876b:	pusha  
  44876c:	and    al,0x66
  44876e:	aad    0x60
  448770:	fwait
  448771:	dec    edi
  448772:	shr    DWORD PTR [ebp-0x34c37172],0x6f
  448779:	sbb    eax,0xac9bfd42
  44877e:	ss dec edi
  448780:	ror    eax,0x2b
  448783:	test   ah,bl
  448785:	inc    eax
  448786:	sbb    BYTE PTR [ebp+0x5c3c673c],ah
  44878c:	fbld   TBYTE PTR [esi+0x21]
  44878f:	add    eax,0xc3faa39b
  448794:	call   0x1a433103
  448799:	(bad)  [esi+0x4e]
  44879c:	outs   dx,DWORD PTR ds:[esi]
  44879d:	and    DWORD PTR [edx+eiz*1+0x4b],edi
  4487a1:	push   ds
  4487a2:	sub    bl,BYTE PTR [ebp-0x29f63e7]
  4487a8:	int    0x19
  4487aa:	aad    0x3e
  4487ac:	imul   eax,DWORD PTR [ebp+0x26cee7ff],0xfa470c85
  4487b6:	xchg   esp,eax
  4487b7:	loopne 0x44880d
  4487b9:	(bad)  
  4487bb:	xor    eax,ebp
  4487bd:	repz enter 0x33d7,0x49
  4487c2:	or     al,0x70
  4487c4:	lock rcl DWORD PTR [ebp+0x1eb55266],0x16
  4487cc:	mov    al,ds:0xd25d700a
  4487d1:	je     0x4487ca
  4487d3:	cdq    
  4487d4:	hlt    
  4487d5:	mov    edx,0x7d58b62e
  4487da:	test   edi,ecx
  4487dc:	ja     0x4487c8
  4487de:	inc    edi
  4487e0:	(bad)  
  4487e1:	dec    edi
  4487e2:	out    0xd3,eax
  4487e4:	stos   DWORD PTR es:[edi],eax
  4487e5:	jb     0x448804
  4487e7:	retf   0xd7ef
  4487ea:	xchg   esi,eax
  4487eb:	xchg   ecx,eax
  4487ec:	xlat   BYTE PTR ds:[ebx]
  4487ed:	stc    
  4487ee:	bound  eax,QWORD PTR [ebx+0x4a122225]
  4487f4:	or     al,0x73
  4487f6:	mov    dh,0xce
  4487f8:	jmp    0x3d6d:0xd0673332
  4487ff:	cli    
  448800:	popf   
  448801:	fisttp DWORD PTR [ebp+eiz*2+0x559a3349]
  448808:	(bad)  
  448809:	pop    ds
  44880a:	sub    edi,DWORD PTR [ebx]
  44880c:	ret    
  44880d:	dec    BYTE PTR [ebp+0x79]
  448810:	stos   DWORD PTR es:[edi],eax
  448811:	jle    0x4487c0
  448813:	xchg   ebx,eax
  448814:	arpl   WORD PTR [eax+esi*4-0x36],cx
  448818:	sbb    DWORD PTR [ebp-0x50ff964],ebp
  44881e:	sbb    al,0x1a
  448820:	mov    ds:0x966c086f,al
  448825:	jecxz  0x4487e7
  448827:	add    al,0x5e
  448829:	fisub  WORD PTR [esi+0x2d1516d1]
  44882f:	mov    bh,ch
  448831:	(bad)  
  448832:	fadd   DWORD PTR ds:0xcffbcc40
  448838:	and    al,0xe7
  44883a:	and    al,0x89
  44883c:	(bad)  
  44883d:	cmc    
  44883e:	dec    edx
  44883f:	jo     0x448834
  448841:	xchg   ebx,eax
  448842:	nop
  448843:	push   edx
  448844:	test   eax,0x15fd81dd
  448849:	mov    esi,0xae38c540
  44884e:	neg    BYTE PTR [ecx-0x4e]
  448851:	cmp    DWORD PTR [ebp-0x2ddacff4],esp
  448857:	mov    ebx,ecx
  448859:	dec    eax
  44885a:	rcl    BYTE PTR [eax+esi*2-0x6f361125],0x95
  448862:	(bad)  
  448863:	push   ebp
  448864:	imul   ebp,DWORD PTR [ebx+ebp*1-0x7b],0xfffffff0
  448869:	retf   
  44886a:	sahf   
  44886b:	xor    eax,0xd7c06850
  448870:	mov    edx,0x106139c4
  448875:	or     DWORD PTR [ebx+edx*4],ecx
  448878:	cmp    BYTE PTR [eax-0x16e380a6],dh
  44887e:	sbb    BYTE PTR ds:0x24048b57,al
  448884:	rcl    DWORD PTR [edx-0x25e9c120],cl
  44888a:	or     eax,0xb4cd732a
  44888f:	stos   BYTE PTR es:[edi],al
  448890:	aaa    
  448891:	adc    BYTE PTR [edi-0x6d],dl
  448894:	add    BYTE PTR [ebx],cl
  448896:	xchg   ebx,eax
  448897:	push   ebp
  448898:	mov    al,ds:0x34884575
  44889d:	jns    0x44882d
  44889f:	stos   DWORD PTR es:[edi],eax
  4488a0:	fisttp QWORD PTR [ecx]
  4488a2:	jmp    0xb0ea:0x49319077
  4488a9:	arpl   WORD PTR [ebx],di
  4488ab:	push   edi
  4488ac:	cmp    ebp,edx
  4488ae:	and    ah,cl
  4488b0:	(bad)  
  4488b2:	mov    eax,ds:0xcf6175ae
  4488b7:	retf   0x8ba6
  4488ba:	out    0x39,eax
  4488bc:	mov    esi,0xb87237ee
  4488c1:	cmp    ebx,ebp
  4488c3:	mov    dh,0xda
  4488c5:	cli    
  4488c6:	ret    0x7060
  4488c9:	xchg   ebp,eax
  4488ca:	aaa    
  4488cb:	sbb    ebx,DWORD PTR [edx-0x80]
  4488ce:	retf   
  4488cf:	imul   ebx,DWORD PTR [ecx],0x5a
  4488d2:	pop    edi
  4488d3:	mov    esi,0x11816370
  4488d8:	outs   dx,DWORD PTR ds:[esi]
  4488d9:	call   FWORD PTR [eax+0x68]
  4488dc:	popa   
  4488dd:	ins    DWORD PTR es:[edi],dx
  4488de:	xchg   edi,eax
  4488df:	mov    al,ds:0x7e4f2def
  4488e4:	mov    ebx,ebp
  4488e6:	xchg   esp,eax
  4488e7:	mov    WORD PTR [esi],es
  4488e9:	jns    0x448951
  4488eb:	dec    ecx
  4488ec:	cmp    DWORD PTR [ecx+0x1c],ebx
  4488ef:	fnstenv [edi-0x1a]
  4488f2:	jo     0x44889a
  4488f4:	push   ds
  4488f5:	sti    
  4488f6:	jmp    0x6f61122e
  4488fb:	adc    eax,0x425f4125
  448900:	test   DWORD PTR [edi-0x3],0x6c70845
  448907:	cwde   
  448908:	mov    ecx,0xc2a14269
  44890d:	and    eax,0xe5c7536d
  448912:	cli    
  448913:	je     0x4488bd
  448915:	add    cl,BYTE PTR [edi-0xf]
  448918:	leave  
  448919:	jp     0x4488e0
  44891b:	arpl   WORD PTR [edi+0x25123638],bp
  448921:	stc    
  448922:	and    al,0x7d
  448924:	inc    ebx
  448925:	add    cl,0x22
  448928:	test   edx,edx
  44892a:	int3   
  44892b:	xor    dh,cl
  44892d:	xor    eax,0x8ddd4faf
  448932:	jle    0x448996
  448934:	shl    BYTE PTR [esi+0x4f],cl
  448937:	xchg   edi,eax
  448938:	mov    ebp,0xc5f970ec
  44893d:	xor    eax,0xde200d7
  448942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448943:	xchg   edi,eax
  448944:	jb     0x448985
  448946:	jg     0x448958
  448948:	cli    
  448949:	push   ss
  44894a:	out    0x0,eax
  44894c:	jp     0x448968
  44894e:	fldenv [ebp-0x45]
  448951:	jge    0x448933
  448953:	loop   0x44895f
  448955:	(bad)  
  448956:	mov    ebx,0x5cf2606d
  44895b:	add    ecx,DWORD PTR [edi+eiz*8-0x7f58f93]
  448962:	sahf   
  448963:	add    DWORD PTR [esi],edi
  448965:	cli    
  448966:	rol    DWORD PTR ds:0x76bfb394,1
  44896c:	lock jmp 0xeecd3309
  448972:	dec    ebp
  448973:	js     0x4489e0
  448975:	jmp    0x2ccd:0x5cede5c9
  44897c:	mov    ebp,0x4e1180f
  448981:	dec    esp
  448982:	pusha  
  448983:	push   edx
  448984:	inc    ecx
  448985:	lds    edi,FWORD PTR [edx]
  448987:	in     al,0x27
  448989:	sub    DWORD PTR [edx+0x2d],0x92e10370
  448990:	jmp    0xe785:0xfcde52d5
  448997:	ret    0xfeef
  44899a:	inc    esp
  44899b:	dec    eax
  44899c:	int    0x95
  44899e:	out    dx,eax
  44899f:	xor    BYTE PTR [ecx-0x28],0xcd
  4489a3:	xlat   BYTE PTR ds:[ebx]
  4489a4:	dec    esp
  4489a5:	retf   
  4489a6:	add    al,0x48
  4489a8:	int3   
  4489a9:	mov    esp,0x96ceed2b
  4489ae:	jmp    0x448957
  4489b0:	adc    al,0x26
  4489b2:	arpl   bp,di
  4489b4:	add    esi,DWORD PTR [eax]
  4489b6:	enter  0x61c6,0xec
  4489ba:	xchg   edi,edi
  4489bc:	push   eax
  4489bd:	pusha  
  4489be:	cli    
  4489bf:	and    DWORD PTR [eax],eax
  4489c1:	mov    ebx,0xad954d59
  4489c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4489c7:	cmp    eax,DWORD PTR [ebx+0x26]
  4489ca:	or     al,0xcf
  4489cc:	(bad)  
  4489cd:	jecxz  0x4489b1
  4489cf:	enter  0xbf6b,0xf3
  4489d3:	test   eax,0xb48caea3
  4489d8:	inc    ecx
  4489d9:	pop    ecx
  4489da:	xor    BYTE PTR [ebx+0x66555201],cl
  4489e0:	sub    BYTE PTR [edi+0x7a],bh
  4489e3:	jmp    0x448995
  4489e5:	xchg   esp,eax
  4489e6:	add    al,0x4
  4489e8:	mov    esp,0xcc9616d3
  4489ed:	adc    eax,0xe38b0452
  4489f2:	sar    BYTE PTR [esi],0x66
  4489f5:	jb     0x4489da
  4489f7:	xor    BYTE PTR [eax],al
  4489f9:	out    0x66,al
  4489fb:	cs adc ch,bl
  4489fe:	out    dx,eax
  4489ff:	sub    eax,0xee2bc695
  448a04:	test   al,0x79
  448a06:	push   ebp
  448a07:	xchg   edi,eax
  448a08:	inc    esi
  448a09:	into   
  448a0a:	fild   DWORD PTR [ecx]
  448a0c:	pop    esi
  448a0d:	inc    ebx
  448a0e:	ret    
  448a0f:	aas    
  448a10:	fistp  QWORD PTR [ecx-0x5d]
  448a13:	xchg   edi,eax
  448a14:	pop    edx
  448a15:	outs   dx,BYTE PTR ds:[esi]
  448a16:	js     0x448a19
  448a18:	fisubr WORD PTR [edi+0x5abb8672]
  448a1e:	popf   
  448a1f:	mov    al,ds:0xd3a334f
  448a24:	dec    edi
  448a25:	outs   dx,DWORD PTR ds:[esi]
  448a26:	sbb    BYTE PTR [ebx+0x5282f3f4],0x32
  448a2d:	mov    esp,0x25fdc7ea
  448a32:	sti    
  448a33:	pop    edx
  448a34:	push   0xa25fc508
  448a39:	loope  0x4489e2
  448a3b:	sub    BYTE PTR [esi],0x23
  448a3e:	jmp    0x4489e3
  448a40:	dec    edx
  448a41:	pusha  
  448a42:	stc    
  448a43:	sub    eax,0x20d13ce7
  448a48:	test   al,0x7c
  448a4a:	mov    esp,0x6c77314f
  448a4f:	or     bl,BYTE PTR [ebp+0x174ed31d]
  448a55:	into   
  448a56:	add    BYTE PTR [ecx],ah
  448a58:	stos   DWORD PTR es:[edi],eax
  448a59:	mov    eax,0x2fe4378a
  448a5e:	jmp    0x9f240ff7
  448a63:	sub    BYTE PTR [eax],bh
  448a65:	neg    BYTE PTR [ecx]
  448a67:	ss in  al,dx
  448a69:	push   edx
  448a6a:	hlt    
  448a6b:	cmp    ecx,DWORD PTR [ecx-0x5b82c01c]
  448a71:	jb     0x4489f8
  448a73:	or     bh,bl
  448a75:	lahf   
  448a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448a77:	jne    0x448a2b
  448a79:	dec    ebp
  448a7a:	xor    al,0x8d
  448a7c:	imul   eax,edi,0xabaffcb6
  448a82:	(bad)  
  448a84:	inc    edx
  448a85:	lea    edx,[ebx+edx*2+0x3ebe8eb1]
  448a8c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  448a8e:	xlat   BYTE PTR ds:[ebx]
  448a8f:	inc    eax
  448a90:	stc    
  448a91:	push   esp
  448a92:	in     eax,0xaa
  448a94:	mov    BYTE PTR [ecx+0x5effbaa0],ch
  448a9a:	mov    dl,bh
  448a9c:	loopne 0x448aec
  448a9e:	lods   eax,DWORD PTR ds:[esi]
  448a9f:	stos   BYTE PTR es:[edi],al
  448aa0:	adc    dh,BYTE PTR [esi]
  448aa2:	(bad)  
  448aa3:	repnz (bad) 
  448aa5:	addr16 push edx
  448aa7:	call   0x628b2fd5
  448aac:	std    
  448aad:	sub    DWORD PTR [esi+0x27],edx
  448ab0:	and    DWORD PTR [esi],ebx
  448ab2:	mov    WORD PTR [ecx-0x757a8c3e],ds
  448ab8:	inc    eax
  448ab9:	icebp  
  448aba:	out    0x37,eax
  448abc:	aam    0x2f
  448abe:	cmc    
  448abf:	push   0xc1a8508d
  448ac4:	push   ebx
  448ac5:	xchg   esp,eax
  448ac6:	add    al,0xa6
  448ac8:	sbb    DWORD PTR ds:0x6c8f34c7,esp
  448ace:	jl     0x448b3f
  448ad0:	ins    DWORD PTR es:[edi],dx
  448ad1:	ret    0x6592
  448ad4:	stos   BYTE PTR es:[edi],al
  448ad5:	lods   al,BYTE PTR ds:[esi]
  448ad6:	mov    ecx,0x71909e06
  448adb:	mov    edx,0xb582819f
  448ae0:	in     al,dx
  448ae1:	or     eax,0xad050677
  448ae6:	lea    eax,[edx+0x18]
  448ae9:	mov    ah,0x6
  448aeb:	jp     0x448b1d
  448aed:	push   ebx
  448aee:	lods   eax,DWORD PTR ds:[esi]
  448aef:	mov    bh,0x76
  448af1:	inc    ecx
  448af2:	sar    DWORD PTR ds:0x7e86d73a,1
  448af8:	add    BYTE PTR [edx+eiz*4],dl
  448afb:	ficomp WORD PTR [ebx-0x445fe11c]
  448b01:	mov    ebp,0x3da7b0fd
  448b06:	aas    
  448b07:	scas   eax,DWORD PTR es:[edi]
  448b08:	popf   
  448b09:	mov    dl,0x4e
  448b0b:	inc    edi
  448b0c:	mov    ?,WORD PTR [edx-0x6da906a6]
  448b12:	cwde   
  448b13:	in     eax,0xdb
  448b15:	cmp    al,0x36
  448b17:	or     DWORD PTR [eax-0x47],0xe8b43283
  448b1e:	fcom   st(0)
  448b20:	push   esi
  448b21:	inc    ecx
  448b22:	mov    bh,0x17
  448b25:	push   0x422f0bc7
  448b2a:	syscall 
  448b2c:	jmp    0xe9b0ab67
  448b31:	outs   dx,DWORD PTR ds:[esi]
  448b32:	(bad)  
  448b33:	xchg   edi,eax
  448b34:	(bad)  
  448b35:	loope  0x448b06
  448b37:	in     al,0x29
  448b39:	ins    DWORD PTR es:[edi],dx
  448b3a:	push   ds
  448b3b:	xchg   edx,eax
  448b3c:	inc    edi
  448b3d:	adc    ah,BYTE PTR [ebp-0x2f]
  448b40:	rcr    DWORD PTR [ebx-0x7c],0x99
  448b44:	in     eax,dx
  448b45:	clc    
  448b46:	int3   
  448b47:	out    dx,eax
  448b48:	daa    
  448b49:	or     eax,0x2c61300d
  448b4e:	rcr    DWORD PTR [edi-0x2c6b82b6],cl
  448b54:	je     0x448af9
  448b56:	xor    cl,BYTE PTR [ebx+ebx*2-0x16cbc32c]
  448b5d:	in     al,dx
  448b5e:	and    al,BYTE PTR [esi-0x74]
  448b61:	mov    ds:0xed44f0ed,al
  448b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448b67:	and    al,BYTE PTR [ebp+0xb]
  448b6a:	pop    edx
  448b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448b6c:	mov    ?,WORD PTR [edi+0x7e]
  448b6f:	adc    DWORD PTR [ebx],edi
  448b71:	icebp  
  448b72:	push   ecx
  448b73:	sbb    esi,ebx
  448b75:	mov    eax,0x7c64d4a4
  448b7a:	inc    esp
  448b7b:	pushf  
  448b7c:	xor    cl,bh
  448b7e:	add    DWORD PTR [esi+0x6a6bc1ae],0xffffffbd
  448b85:	sahf   
  448b86:	and    al,0xf0
  448b88:	(bad)  
  448b8a:	push   eax
  448b8b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448b8d:	(bad)  
  448b8e:	fidiv  DWORD PTR [edx]
  448b90:	sbb    bh,BYTE PTR [ecx+0x5a]
  448b93:	push   0xffffff98
  448b95:	xchg   esp,eax
  448b96:	sbb    eax,0xf7bee04
  448b9b:	xchg   edi,eax
  448b9c:	or     al,0xe3
  448b9e:	sbb    DWORD PTR [ebp+0x20],0x69
  448ba2:	push   es
  448ba3:	sahf   
  448ba4:	xor    dh,BYTE PTR [esi-0x1cdb56d9]
  448baa:	sti    
  448bab:	add    cl,ch
  448bad:	jg     0x448b9a
  448baf:	lods   eax,DWORD PTR ds:[esi]
  448bb0:	cmp    BYTE PTR ds:[ecx],bl
  448bb3:	das    
  448bb4:	rcl    BYTE PTR [edx+0x1],0xb3
  448bb8:	in     eax,dx
  448bb9:	xor    bl,BYTE PTR [ecx]
  448bbb:	into   
  448bbc:	icebp  
  448bbd:	data16 shl BYTE PTR [edx+ebp*8+0x1c1c820a],0x65
  448bc6:	pushf  
  448bc7:	leave  
  448bc8:	mov    DWORD PTR [edi+0x5b],ebx
  448bcb:	adc    BYTE PTR [ebp+0x13460d22],cl
  448bd1:	fldcw  WORD PTR [edi]
  448bd3:	adc    BYTE PTR [ebp+edi*8-0x18071478],dl
  448bda:	sbb    al,0x9d
  448bdc:	call   0xd338:0x47370346
  448be3:	cli    
  448be4:	ret    0x95dd
  448be7:	cmp    DWORD PTR [ecx],0xffffffbe
  448bea:	sub    al,0x33
  448bec:	mov    ?,WORD PTR [ebx]
  448bee:	fld    QWORD PTR ds:0xa6d7bf9c
  448bf4:	cmp    eax,0x99d37a08
  448bf9:	imul   ebp,DWORD PTR ss:[edx+0x1b7f76d0],0x1e
  448c01:	inc    esi
  448c02:	mov    ah,0xc4
  448c04:	cmp    DWORD PTR [esi],eax
  448c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448c07:	jns    0x448bf8
  448c09:	add    eax,0x6e743971
  448c0e:	jno    0x448c86
  448c10:	inc    DWORD PTR [esi+eax*2-0x38]
  448c14:	rcl    ebx,cl
  448c16:	ss cwde 
  448c18:	cmp    BYTE PTR [edx-0x2],ah
  448c1b:	sbb    al,BYTE PTR [ecx-0x1f7a15bc]
  448c21:	out    0x79,eax
  448c23:	dec    ebp
  448c24:	jmp    0x448bdb
  448c26:	js     0x448c3f
  448c28:	cmc    
  448c29:	fidiv  DWORD PTR [ebx]
  448c2b:	mov    esp,?
  448c2d:	ficom  WORD PTR [esi]
  448c2f:	aad    0x49
  448c31:	pop    es
  448c32:	adc    eax,0x2cc62361
  448c37:	push   ss
  448c38:	or     dh,ah
  448c3a:	cmp    ch,dh
  448c3c:	xchg   ebp,eax
  448c3d:	test   al,0x5c
  448c3f:	sar    BYTE PTR [ebx+0xb],0x91
  448c43:	mov    ah,0x81
  448c45:	or     eax,0x154ac593
  448c4a:	sti    
  448c4b:	in     al,dx
  448c4c:	daa    
  448c4d:	xor    al,al
  448c4f:	mov    bl,0x3f
  448c51:	push   ds
  448c52:	sbb    bh,BYTE PTR [ebp+0x6c06236a]
  448c58:	push   0x4
  448c5a:	cmp    al,0x93
  448c5c:	mov    al,ds:0x4e082021
  448c61:	fdivr  QWORD PTR [esp+edi*8]
  448c64:	cli    
  448c65:	dec    ebp
  448c66:	mov    esp,0xd26e012c
  448c6b:	mov    ecx,0xfd08d531
  448c70:	push   0xffffff82
  448c72:	fucomi st,st(1)
  448c74:	ins    DWORD PTR es:[edi],dx
  448c75:	pop    ss
  448c76:	test   DWORD PTR [esi-0x27],0x1c4d9ce9
  448c7d:	or     eax,0xbdb043dc
  448c82:	xchg   esi,eax
  448c83:	fs jne 0x448cf5
  448c86:	int    0x32
  448c88:	add    bl,dl
  448c8a:	cmc    
  448c8b:	cmp    ah,BYTE PTR [ebx]
  448c8d:	dec    esp
  448c8e:	imul   esp,DWORD PTR [ebx+0x65],0x6a3b2da3
  448c95:	push   ebp
  448c96:	add    DWORD PTR [esi+0x23],esp
  448c99:	sub    eax,0x6461aa1
  448c9e:	inc    ebp
  448c9f:	dec    edi
  448ca0:	sbb    edi,0x3d
  448ca3:	not    BYTE PTR [edx+0x23914d70]
  448ca9:	test   BYTE PTR [edx+0x4c],dl
  448cac:	fs pushf 
  448cae:	in     al,dx
  448caf:	(bad)  
  448cb0:	aad    0xd5
  448cb2:	dec    eax
  448cb3:	mov    BYTE PTR [eax-0x36dcbc32],dl
  448cb9:	mov    ebx,0x4f84f67b
  448cbe:	into   
  448cbf:	jae    0x448d30
  448cc1:	adc    DWORD PTR [edx],edx
  448cc3:	inc    esp
  448cc4:	or     al,0x8f
  448cc6:	jno    0x448d18
  448cc8:	sahf   
  448cc9:	mov    gs,WORD PTR [ecx+eiz*1]
  448ccc:	jns    0x448c85
  448cce:	jl     0x448c54
  448cd0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  448cd2:	shl    BYTE PTR [eax-0xe],0x24
  448cd6:	stos   BYTE PTR es:[edi],al
  448cd7:	jb     0x448cb4
  448cd9:	adc    eax,0xc3e2da19
  448cde:	xor    edi,DWORD PTR [edx-0x49b94696]
  448ce4:	cli    
  448ce5:	lods   al,BYTE PTR ds:[esi]
  448ce6:	shld   edx,edi,cl
  448ce9:	pop    edx
  448cea:	xor    eax,0x6fd08263
  448cef:	push   ss
  448cf0:	inc    esp
  448cf1:	and    ebp,DWORD PTR ds:0xa13ace67
  448cf7:	std    
  448cf8:	xchg   edx,eax
  448cf9:	xor    ebp,eax
  448cfb:	cmp    eax,0x21da6754
  448d00:	inc    esi
  448d01:	mov    cl,0xdb
  448d03:	call   0x96068fdc
  448d08:	rcr    BYTE PTR [ebx],0xec
  448d0b:	bound  eax,QWORD PTR [eax+0x10]
  448d0e:	jnp    0x448d24
  448d10:	sahf   
  448d11:	mov    ds:0xd9fe219c,eax
  448d16:	test   al,0x39
  448d18:	mov    fs:0x26a8529c,eax
  448d1e:	fbstp  TBYTE PTR [ebx]
  448d20:	or     esp,esp
  448d22:	jmp    0x51ee0715
  448d27:	sub    al,0xd9
  448d29:	pop    edi
  448d2a:	stos   DWORD PTR es:[edi],eax
  448d2b:	ror    DWORD PTR [ecx],1
  448d2d:	xor    al,0x0
  448d2f:	push   ebp
  448d30:	in     al,dx
  448d31:	jo     0x448d37
  448d33:	sbb    al,0x4a
  448d35:	sbb    eax,0x45b1f870
  448d3a:	ja     0x448cc2
  448d3c:	or     esp,DWORD PTR [esi+0x9]
  448d3f:	imul   esp,esp,0x78
  448d42:	(bad)  
  448d43:	repnz daa 
  448d45:	test   al,0x7a
  448d47:	adc    cl,cl
  448d49:	xor    al,0x3d
  448d4b:	dec    edx
  448d4c:	popa   
  448d4d:	jnp    0x448db1
  448d4f:	and    bh,BYTE PTR [esi]
  448d51:	das    
  448d52:	mov    edx,0xe86297f9
  448d57:	cwde   
  448d58:	into   
  448d59:	adc    al,0xc5
  448d5b:	ret    0x8f4f
  448d5e:	inc    eax
  448d5f:	and    BYTE PTR [edi],ch
  448d61:	or     eax,0xb89b6c34
  448d66:	popa   
  448d67:	fs cld 
  448d69:	mov    edx,0xaeebc22b
  448d6e:	int3   
  448d6f:	std    
  448d70:	add    dh,0x81
  448d73:	sbb    bh,BYTE PTR [ebx+0x3b]
  448d76:	aam    0x6
  448d78:	sub    BYTE PTR [ebx-0x76ddd6d8],ch
  448d7e:	rcr    BYTE PTR [edi-0x1e],cl
  448d81:	dec    ebp
  448d82:	js     0x448d11
  448d84:	inc    ecx
  448d85:	xor    bh,dh
  448d87:	pop    edi
  448d88:	mov    ah,0xb4
  448d8a:	add    DWORD PTR [eax-0x36],0x6a
  448d8e:	add    al,0xd9
  448d90:	sbb    DWORD PTR [eax+0x7a],eax
  448d93:	out    dx,al
  448d94:	mov    dl,0x62
  448d96:	dec    ebp
  448d97:	cmp    eax,0x4f9017ca
  448d9c:	ds and dh,0xe2
  448da0:	xchg   ebp,eax
  448da1:	ins    BYTE PTR es:[edi],dx
  448da2:	mov    edi,0xede2d565
  448da7:	sbb    ah,BYTE PTR [ebx+0xaa048bb]
  448dad:	or     esi,DWORD PTR [edx+0x3]
  448db0:	(bad)  
  448db1:	adc    bl,BYTE PTR [ecx-0x63]
  448db4:	and    eax,0xd607e232
  448db9:	cwde   
  448dba:	adc    BYTE PTR [ebp+0x7b],0x36
  448dbe:	mov    WORD PTR [ecx+0x1],es
  448dc1:	xchg   edx,eax
  448dc2:	mov    edx,DWORD PTR [ecx+0x1def99d3]
  448dc8:	cmp    al,0x48
  448dca:	mov    bl,0x7b
  448dcc:	push   es
  448dcd:	pop    ds
  448dce:	into   
  448dcf:	lods   al,BYTE PTR ds:[esi]
  448dd0:	(bad)  
  448dd1:	jnp    0x448e0a
  448dd3:	jmp    0xe8d42f5b
  448dd8:	add    ah,cl
  448dda:	cmp    al,0x21
  448ddc:	jmp    0xb89:0x3e7afac8
  448de3:	arpl   WORD PTR [esi-0x57d35a3],sp
  448de9:	outs   dx,DWORD PTR ds:[esi]
  448dea:	cmp    bh,BYTE PTR [edi-0x1df0fbbe]
  448df0:	enter  0xfc70,0xd8
  448df4:	rcl    DWORD PTR [ecx],1
  448df6:	mov    eax,ds:0xd8736dae
  448dfb:	and    BYTE PTR [edx-0xff49f58],dh
  448e01:	dec    ebx
  448e02:	or     eax,0x9ff396e6
  448e07:	adc    DWORD PTR [esi],0xffffffe3
  448e0a:	loope  0x448e14
  448e0c:	pop    es
  448e0d:	jo     0x448db6
  448e0f:	dec    edx
  448e10:	dec    eax
  448e11:	(bad)  [ecx]
  448e13:	jbe    0x448e8d
  448e15:	mov    DWORD PTR [ebx-0x32],0xc03d8979
  448e1c:	pop    esp
  448e1d:	test   DWORD PTR [eax+eax*1+0x22956c39],eax
  448e24:	add    al,0xd1
  448e26:	out    0x2c,eax
  448e28:	xor    al,0xee
  448e2a:	mov    bl,bl
  448e2c:	repnz inc edx
  448e2e:	sbb    DWORD PTR [edi-0x25],ebx
  448e31:	cmc    
  448e32:	inc    esi
  448e33:	xchg   esp,eax
  448e34:	and    ebp,DWORD PTR [ecx-0x50]
  448e37:	bsr    eax,esp
  448e3a:	xchg   ebp,eax
  448e3b:	arpl   WORD PTR [ebp-0x3e4ebd6c],di
  448e41:	lods   eax,DWORD PTR ds:[esi]
  448e42:	lea    ebp,[ebp+0x43911512]
  448e48:	push   cs
  448e49:	adc    DWORD PTR [eax-0x3b],esi
  448e4c:	enter  0x9600,0xba
  448e50:	jg     0x448ebd
  448e52:	test   ecx,esi
  448e54:	call   0x8270:0x10593ae1
  448e5b:	outs   dx,BYTE PTR ds:[esi]
  448e5c:	pop    es
  448e5d:	mov    ?,WORD PTR [ebx+0x7e]
  448e60:	test   eax,0x8ca4bbb1
  448e65:	sub    al,0xe
  448e67:	cmp    al,0xe6
  448e69:	jne    0x448e97
  448e6b:	inc    ebp
  448e6c:	hlt    
  448e6d:	jnp    0x448eb9
  448e6f:	or     BYTE PTR [esi-0x78],cl
  448e72:	pusha  
  448e73:	imul   ebp,DWORD PTR [edx+0x260f10e5],0x94758c55
  448e7d:	shl    BYTE PTR [edx+0x6dfe12b3],0x68
  448e84:	cmp    DWORD PTR [edi],edx
  448e86:	adc    BYTE PTR [ebx],bh
  448e88:	xchg   esp,eax
  448e89:	mov    eax,ds:0xe29e2c34
  448e8e:	in     al,dx
  448e8f:	call   0x21751d42
  448e94:	adc    edx,esi
  448e96:	ficomp DWORD PTR [edx]
  448e98:	push   0x28
  448e9a:	pop    ecx
  448e9b:	sub    eax,0x8c431ae0
  448ea0:	ins    BYTE PTR es:[edi],dx
  448ea1:	fwait
  448ea2:	adc    DWORD PTR [eax],edi
  448ea4:	pop    ss
  448ea5:	cmp    BYTE PTR [edx+0x2366f2b2],0x20
  448eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448ead:	jge    0x448e4b
  448eaf:	jle    0x448ede
  448eb1:	jno    0x448ed4
  448eb3:	mov    esp,esi
  448eb5:	mov    WORD PTR [ecx-0x7c],es
  448eb8:	test   al,0xf2
  448eba:	push   cs
  448ebb:	in     eax,dx
  448ebc:	jnp    0x448ead
  448ebe:	inc    edi
  448ebf:	popa   
  448ec0:	inc    esi
  448ec1:	stos   BYTE PTR es:[edi],al
  448ec2:	push   esp
  448ec3:	pop    edx
  448ec4:	xchg   DWORD PTR [ecx+ebx*8],edx
  448ec7:	cmp    DWORD PTR [ecx-0x35ccede6],esp
  448ecd:	rcl    BYTE PTR [edi],cl
  448ecf:	mov    DWORD PTR [edx+0x77],ebx
  448ed2:	adc    al,0x3b
  448ed4:	pop    ds
  448ed5:	inc    ebx
  448ed6:	pop    edx
  448ed7:	mov    ebp,ebx
  448ed9:	cmc    
  448eda:	lds    ebp,FWORD PTR [eax]
  448edc:	or     esp,DWORD PTR [esi+0x2d]
  448edf:	test   BYTE PTR [ebx-0x65b53ad0],al
  448ee5:	ss push ebx
  448ee7:	fiadd  WORD PTR ds:[edx]
  448eea:	(bad)  
  448eeb:	mov    ecx,DWORD PTR ds:0x536bd73f
  448ef1:	add    ebx,0x17
  448ef4:	inc    ecx
  448ef5:	xor    ecx,DWORD PTR [ecx+0x1]
  448ef8:	push   esp
  448ef9:	aam    0x94
  448efb:	fisttp QWORD PTR [ebx-0x76]
  448efe:	push   cs
  448eff:	aad    0x69
  448f01:	pop    ecx
  448f02:	call   0x9600:0x2aa280f0
  448f09:	lea    eax,[ebp-0x22]
  448f0c:	cmp    al,0x5
  448f0e:	or     bl,BYTE PTR [edx]
  448f10:	call   0x329ed2d6
  448f15:	or     al,0x77
  448f17:	pop    ebx
  448f18:	jle    0x448f04
  448f1a:	dec    ecx
  448f1b:	mov    esi,ds
  448f1d:	punpckhqdq xmm6,XMMWORD PTR [ebx+0x3d9e49e9]
  448f25:	sub    eax,0x43928553
  448f2a:	outs   dx,DWORD PTR ds:[esi]
  448f2b:	or     eax,esp
  448f2d:	jle    0x448f6a
  448f2f:	in     al,dx
  448f30:	xor    esi,DWORD PTR [eax+0x52189f18]
  448f36:	push   esp
  448f37:	sub    ah,cl
  448f39:	stos   BYTE PTR es:[edi],al
  448f3a:	sbb    al,0x3a
  448f3c:	stos   WORD PTR es:[edi],ax
  448f3e:	(bad)  
  448f40:	jo     0x448f6d
  448f42:	mov    ds:0xb50b125,al
  448f47:	xor    ah,cl
  448f49:	cmp    eax,0x6c17fffa
  448f4e:	push   esp
  448f4f:	pop    eax
  448f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448f51:	or     BYTE PTR [edi],bh
  448f53:	or     al,0x25
  448f55:	lahf   
  448f56:	frstor [ebx]
  448f58:	sub    eax,0xb5047c92
  448f5d:	xchg   ecx,eax
  448f5e:	pop    ebp
  448f5f:	repnz sub DWORD PTR [ecx+ebp*2+0x66],edx
  448f64:	(bad)  
  448f65:	in     al,0x5b
  448f67:	xor    edi,ecx
  448f69:	sub    ebp,DWORD PTR [edi-0x3f12edd4]
  448f6f:	(bad)  
  448f70:	jecxz  0x448fe7
  448f72:	sub    ebp,DWORD PTR [eax+eax*1-0xa]
  448f76:	sbb    DWORD PTR [ecx+eiz*2+0x22],esp
  448f7a:	sub    ch,dh
  448f7c:	retf   0xbec0
  448f7f:	jbe    0x448f55
  448f81:	ja     0x448f5f
  448f83:	mov    ebx,ss
  448f85:	aas    
  448f86:	mov    bl,0x30
  448f88:	sbb    al,0x39
  448f8a:	loope  0x448ff9
  448f8c:	xchg   edx,eax
  448f8d:	mov    esi,0xe8804cf1
  448f92:	and    esi,DWORD PTR [edi]
  448f94:	lds    edx,FWORD PTR [esi-0x5c]
  448f97:	nop
  448f98:	jecxz  0x448ff1
  448f9a:	pop    es
  448f9b:	cmp    eax,0x45c59a5e
  448fa0:	stos   BYTE PTR es:[edi],al
  448fa1:	xlat   BYTE PTR ds:[ebx]
  448fa2:	cdq    
  448fa3:	xlat   BYTE PTR ds:[ebx]
  448fa4:	or     dl,BYTE PTR [eax+0x19dc5866]
  448faa:	add    al,0x8d
  448fac:	aam    0xfb
  448fae:	adc    eax,0x93c6b7b2
  448fb3:	adc    al,0x8f
  448fb5:	dec    ebp
  448fb6:	fwait
  448fb7:	mov    dh,0x40
  448fb9:	mov    ah,0x21
  448fbb:	inc    bh
  448fbd:	sbb    ebp,eax
  448fbf:	mov    esp,DWORD PTR [edi]
  448fc1:	adc    al,0x87
  448fc3:	les    ebp,FWORD PTR [ecx-0xc]
  448fc6:	out    dx,al
  448fc7:	push   eax
  448fc8:	jo     0x449031
  448fca:	adc    ebx,DWORD PTR [ebx+0x7b]
  448fcd:	lock jno 0x44904b
  448fd0:	mov    ?,WORD PTR [ecx]
  448fd2:	cmp    bh,BYTE PTR [ebx+eax*1+0xb]
  448fd6:	ja     0x449000
  448fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448fd9:	cli    
  448fda:	adc    al,0xe9
  448fdc:	hlt    
  448fdd:	call   0x3f9fa0ad
  448fe2:	jmp    0x449061
  448fe4:	and    BYTE PTR [eax+0x8118464],dl
  448fea:	loop   0x448fd7
  448fec:	push   eax
  448fed:	push   esp
  448fee:	inc    ebx
  448fef:	in     al,0xe2
  448ff1:	(bad)  
  448ff2:	int3   
  448ff3:	ss sahf 
  448ff5:	lods   al,BYTE PTR ds:[esi]
  448ff6:	pop    ss
  448ff7:	add    al,0xc8
  448ff9:	aaa    
  448ffa:	in     al,0x19
  448ffc:	xor    DWORD PTR [edi-0x31],ecx
  448fff:	shl    BYTE PTR [edi+0x30ade0c9],cl
  449005:	lock push 0xffffffd8
  449008:	mov    dl,0xd6
  44900a:	sub    al,0xbd
  44900c:	mov    esp,0x51fed069
  449011:	loope  0x44905d
  449013:	int    0xa7
  449015:	sbb    al,0x2b
  449017:	push   eax
  449018:	je     0x448fdb
  44901a:	push   0xffffffb3
  44901c:	inc    ebp
  44901d:	adc    DWORD PTR [edi+0x29],ecx
  449020:	sub    ch,BYTE PTR [edi-0x6e]
  449023:	mov    ecx,0xc2b13772
  449028:	mov    esp,0xb224641a
  44902d:	loop   0x44901c
  44902f:	xor    eax,0xc3098af6
  449034:	jg     0x4490ab
  449036:	sbb    BYTE PTR [ecx+edx*8-0x42b8da4e],ch
  44903d:	das    
  44903e:	lock push 0x3c
  449041:	sti    
  449042:	mov    eax,ds:0xf5993fee
  449047:	out    dx,eax
  449048:	jo     0x448fca
  44904a:	loop   0x448fe2
  44904c:	and    BYTE PTR [esi+0x28],bh
  44904f:	nop
  449050:	outs   dx,DWORD PTR ds:[esi]
  449051:	jnp    0x44909e
  449053:	fadd   DWORD PTR [edi+0x3059d48f]
  449059:	xchg   ecx,eax
  44905a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44905b:	add    al,BYTE PTR [esi-0x14]
  44905e:	test   DWORD PTR [ecx+ebx*8+0x7f8fb124],esp
  449065:	xor    ch,ah
  449067:	xor    DWORD PTR [ebp-0x80],ecx
  44906a:	xchg   edx,eax
  44906b:	push   es
  44906c:	sub    BYTE PTR [edi+0x293f556],ah
  449072:	(bad)  
  449073:	adc    BYTE PTR [esi+0x7],dh
  449076:	xchg   ebx,esp
  449078:	jns    0x4490b8
  44907a:	inc    eax
  44907b:	or     eax,0xafea728a
  449080:	inc    ecx
  449081:	inc    esp
  449082:	push   ds
  449083:	sub    edi,DWORD PTR [ecx]
  449085:	adc    eax,0x1771f0cf
  44908a:	stos   DWORD PTR es:[edi],eax
  44908b:	add    BYTE PTR [eax+ebp*2],0x56
  44908f:	pop    ss
  449090:	add    DWORD PTR ds:0x9c893bf0,eax
  449096:	jge    0x4490ce
  449098:	pop    di
  44909a:	push   eax
  44909b:	repnz inc esi
  44909d:	pop    ecx
  44909e:	mov    cl,0x52
  4490a0:	mov    cl,0xef
  4490a2:	jmp    0x5e2a0ecb
  4490a7:	test   al,al
  4490a9:	call   0xbe34487a
  4490ae:	lods   al,BYTE PTR ds:[esi]
  4490af:	pop    esi
  4490b0:	mov    edx,cr3
  4490b3:	mov    cl,0x27
  4490b5:	nop
  4490b6:	and    BYTE PTR [eax-0x6874db1a],dl
  4490bc:	mov    dl,0x84
  4490be:	jmp    0x7096:0xbc50befd
  4490c5:	arpl   WORD PTR [edi-0x2c],dx
  4490c8:	cmp    ebp,eax
  4490ca:	test   al,0xd6
  4490cc:	push   esi
  4490cd:	inc    esi
  4490ce:	mov    bl,0x71
  4490d0:	aaa    
  4490d1:	mov    bl,0x1d
  4490d3:	push   esp
  4490d4:	jbe    0x4490d3
  4490d6:	lods   al,BYTE PTR ds:[esi]
  4490d7:	outs   dx,BYTE PTR ds:[esi]
  4490d8:	inc    esi
  4490d9:	pop    edx
  4490da:	xchg   ecx,eax
  4490db:	pop    eax
  4490dc:	adc    ebx,DWORD PTR [ebx+eiz*8-0x6c6a9eb]
  4490e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4490e4:	cmp    BYTE PTR [esp+esi*2],0x68
  4490e8:	or     ch,BYTE PTR [ebx]
  4490ea:	js     0x449122
  4490ec:	bound  ebx,QWORD PTR [edx]
  4490ee:	jmp    0x449119
  4490f0:	in     eax,dx
  4490f1:	clc    
  4490f2:	adc    DWORD PTR [ebx+0x26],ecx
  4490f5:	xor    BYTE PTR [ecx],0x60
  4490f8:	mov    ds:0xe00346cc,eax
  4490fd:	das    
  4490fe:	mov    ss,WORD PTR [ebx]
  449100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449101:	jae    0x4490f6
  449103:	sub    al,0xd8
  449105:	inc    ebx
  449106:	jb     0x449162
  449108:	jl     0x449095
  44910a:	(bad)  
  44910b:	test   BYTE PTR [edi-0x377081f9],bh
  449111:	dec    esi
  449112:	(bad)  
  449113:	xchg   ebx,eax
  449114:	mov    eax,ds:0xc6ce1fe7
  449119:	cwde   
  44911a:	or     eax,0x1ce82fef
  44911f:	xchg   edi,eax
  449120:	imul   edi,DWORD PTR [eax+ecx*8],0xffffffe6
  449124:	sub    eax,0x10406253
  449129:	sbb    esp,0x4312af8a
  44912f:	ja     0x449101
  449131:	lods   al,BYTE PTR ds:[esi]
  449132:	sbb    al,BYTE PTR [eax+0x75]
  449135:	add    DWORD PTR [ebp+edi*8-0x32],0x5733d4e5
  44913d:	mov    bh,0x19
  44913f:	adc    al,0xb
  449141:	push   ds
  449142:	jl     0x4490e9
  449144:	ds pop esi
  449146:	ins    BYTE PTR es:[edi],dx
  449147:	mov    ah,BYTE PTR [edx+0x77388fbb]
  44914d:	push   0x3f
  44914f:	js     0x44918a
  449151:	jecxz  0x449108
  449153:	jnp    0x449156
  449155:	pop    ss
  449156:	test   ch,bh
  449158:	cmp    eax,0x63e54299
  44915d:	sbb    bh,BYTE PTR [edi]
  44915f:	jns    0x4491aa
  449161:	push   esi
  449162:	push   ebp
  449163:	or     al,0x3b
  449165:	faddp  st(3),st
  449167:	fdivr  DWORD PTR [esi-0x9]
  44916a:	nop
  44916b:	cmp    edi,edi
  44916d:	test   DWORD PTR [edi],0x76df8f7c
  449173:	cdq    
  449174:	in     eax,0x5f
  449176:	mov    ebx,ds
  449178:	xchg   DWORD PTR [ebp+0x28],ebx
  44917b:	mov    eax,DWORD PTR ds:0xe94cd25d
  449181:	mov    eax,ds:0xfc282e3e
  449186:	es and ah,cl
  449189:	cs sti 
  44918b:	mov    edi,0x3e11e1d7
  449190:	popa   
  449191:	mov    dh,0xd2
  449193:	fimul  DWORD PTR [edi-0x2d9a08d8]
  449199:	data16 int 0x98
  44919c:	daa    
  44919d:	xchg   edx,eax
  44919e:	mov    DWORD PTR [edi-0x61fd265c],edx
  4491a4:	das    
  4491a5:	pop    ebx
  4491a6:	rcl    cl,0x38
  4491a9:	fstp   QWORD PTR [edi]
  4491ab:	xchg   ecx,eax
  4491ac:	push   eax
  4491ad:	frstor [ebp+eax*2+0x51145b9f]
  4491b4:	pushf  
  4491b5:	sar    BYTE PTR [edi+0x33],cl
  4491b8:	add    DWORD PTR [esi+edi*2-0x3838c061],0xe660c71a
  4491c3:	scas   al,BYTE PTR es:[edi]
  4491c4:	push   ebp
  4491c5:	dec    ebp
  4491c6:	pop    edx
  4491c7:	adc    BYTE PTR [ebx+0x67ef6593],bh
  4491cd:	ja     0x4491d5
  4491cf:	aam    0xf7
  4491d1:	cmp    ecx,esp
  4491d3:	xor    DWORD PTR [edi+0x32],ebx
  4491d6:	rcr    DWORD PTR cs:0x412dc1e3,1
  4491dd:	xchg   edx,eax
  4491de:	push   cs
  4491df:	or     eax,0xf6e31015
  4491e4:	out    0xe8,al
  4491e6:	ret    0x4e67
  4491e9:	sub    DWORD PTR [esi],0xffffff87
  4491ec:	sahf   
  4491ed:	mov    ebx,DWORD PTR [edx]
  4491ef:	add    al,cl
  4491f1:	cmc    
  4491f2:	push   cs
  4491f3:	dec    ebp
  4491f4:	cmp    eax,0x10386846
  4491f9:	(bad)  
  4491fa:	cmc    
  4491fb:	jb     0x44924d
  4491fd:	out    0x82,al
  4491ff:	sbb    dl,BYTE PTR [esi-0x2e]
  449202:	aas    
  449203:	mov    ebx,0x6366a61c
  449208:	jmp    0x6f96771a
  44920d:	dec    esp
  44920e:	aaa    
  44920f:	sbb    esp,edx
  449211:	lea    ecx,[edx-0x380c7f64]
  449217:	imul   esp,DWORD PTR ds:0x4c58bef0,0x6b
  44921e:	in     al,dx
  44921f:	pop    ebp
  449220:	outs   dx,BYTE PTR ds:[esi]
  449221:	fs es ret 
  449224:	cld    
  449225:	pop    esi
  449226:	call   0xb0c19bec
  44922b:	adc    cl,ch
  44922d:	fcos   
  44922f:	pop    eax
  449230:	jns    0x4491bf
  449232:	fidiv  WORD PTR [ebp-0x58faf7c4]
  449238:	leave  
  449239:	mov    dl,0xfd
  44923b:	add    BYTE PTR ds:0xba0d7efc,0xc0
  449242:	iret   
  449243:	pop    edx
  449244:	mov    esp,0xfca97cf7
  449249:	xlat   BYTE PTR ds:[ebx]
  44924a:	cmp    cl,al
  44924c:	fnstsw WORD PTR [ecx]
  44924e:	push   ss
  44924f:	out    0xcb,al
  449251:	mov    ecx,0x4393aa21
  449256:	rcl    DWORD PTR [edx-0x1167a404],1
  44925c:	es je  0x449202
  44925f:	xchg   esp,eax
  449260:	push   0xeb23fff1
  449265:	pop    es
  449266:	call   0x73a0e51c
  44926b:	std    
  44926c:	loope  0x44920c
  44926e:	mov    DWORD PTR [edi+ebp*1-0x319ab661],0xee70653e
  449279:	mov    al,ds:0x6a37b66a
  44927e:	xor    bh,BYTE PTR [eax]
  449280:	pop    ebp
  449281:	dec    esi
  449282:	xchg   edi,eax
  449283:	or     ch,BYTE PTR [edx]
  449285:	push   esi
  449286:	or     DWORD PTR [edi],0x8ddf17f4
  44928c:	jae    0x449258
  44928e:	add    al,0xbe
  449290:	test   al,0xf3
  449292:	clc    
  449293:	jns    0x449266
  449295:	loopne 0x449289
  449297:	mov    ecx,0x73e716eb
  44929c:	mov    edx,0xe9b1f2eb
  4492a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4492a2:	(bad)  
  4492a3:	mov    dl,0x26
  4492a5:	ret    0x3def
  4492a8:	xchg   ecx,eax
  4492a9:	xor    eax,0x8e1472dc
  4492ae:	scas   al,BYTE PTR es:[edi]
  4492af:	jl     0x449330
  4492b1:	xlat   BYTE PTR ds:[ebx]
  4492b2:	lahf   
  4492b3:	jns    0x449269
  4492b5:	add    edx,DWORD PTR [ebp+0x39ed0ef1]
  4492bb:	sbb    al,0xe6
  4492bd:	jecxz  0x449325
  4492bf:	mov    edx,0xd97255c3
  4492c4:	mov    al,0x47
  4492c6:	xor    DWORD PTR [edi],edx
  4492c8:	cmp    BYTE PTR [eax],0x2
  4492cb:	es dec ebp
  4492cd:	outs   dx,BYTE PTR ds:[esi]
  4492ce:	xor    ch,0xb2
  4492d1:	and    eax,0xd83e8da0
  4492d6:	sub    DWORD PTR [ecx+0x62],edx
  4492d9:	push   ecx
  4492da:	or     eax,0x418ac18e
  4492df:	cmp    edx,DWORD PTR [edi-0x523d52d5]
  4492e5:	out    0x68,al
  4492e7:	imul   ebp,DWORD PTR [ecx+0x6b],0x70892548
  4492ee:	push   DWORD PTR [edi*1-0x69ca89fc]
  4492f5:	shl    DWORD PTR [edi-0x40],1
  4492f8:	(bad)  
  4492fa:	retf   0xded3
  4492fd:	cs xchg ecx,eax
  4492ff:	sub    ecx,DWORD PTR ds:0x93b0970e
  449305:	push   eax
  449306:	add    BYTE PTR [ebx+0x6c],cl
  449309:	xchg   ecx,eax
  44930a:	clc    
  44930b:	test   edx,esp
  44930d:	push   esp
  44930e:	adc    cl,BYTE PTR [eax-0x79780bef]
  449314:	jmp    0x4492ef
  449316:	(bad)  
  449317:	sbb    al,0xf2
  449319:	pop    ebp
  44931a:	inc    edi
  44931b:	cmp    al,0xee
  44931d:	jae    0x44931c
  44931f:	(bad)
  449322:	imul   ebx,ebx,0x7d6769d4
  449328:	fnsave [ecx]
  44932a:	jp     0x4492fe
  44932c:	(bad)  
  44932d:	push   esi
  44932e:	xchg   esi,eax
  44932f:	imul   ecx,DWORD PTR [ebp+0x128a62aa],0x3e9cc48c
  449339:	shr    esp,cl
  44933b:	shr    BYTE PTR [eax-0x36],1
  44933e:	in     eax,0x42
  449340:	lahf   
  449341:	repz sub BYTE PTR [edi],ah
  449344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449345:	add    ebx,DWORD PTR [ebx+ecx*4+0x68325c9e]
  44934c:	ins    DWORD PTR es:[edi],dx
  44934d:	and    DWORD PTR [ebx],ecx
  44934f:	mov    ds:0x58330047,al
  449354:	cli    
  449355:	mov    ds:0x68fd1710,eax
  44935a:	add    ebp,esp
  44935c:	push   0x39ab44ed
  449361:	xchg   esi,eax
  449362:	mov    ds:0xa14d37a8,al
  449367:	out    0xbf,eax
  449369:	add    DWORD PTR [edi+0x3f],esi
  44936c:	stc    
  44936d:	jmp    0xc3:0x496caf56
  449374:	or     ecx,0xc814dc58
  44937a:	cmp    BYTE PTR [eax+0x47],al
  44937d:	dec    DWORD PTR [esi]
  44937f:	lods   eax,DWORD PTR ds:[esi]
  449380:	repz in al,dx
  449382:	sahf   
  449383:	in     al,0xf
  449385:	es je  0x4493cd
  449388:	pop    ss
  449389:	scas   eax,DWORD PTR es:[edi]
  44938a:	mov    cl,0x66
  44938c:	and    DWORD PTR [ebx-0x6c],0x3e8fdab0
  449393:	jo     0x4493a0
  449395:	mov    edi,0xdf3e5b1c
  44939a:	das    
  44939b:	mov    cl,0x7d
  44939d:	in     eax,dx
  44939e:	stos   BYTE PTR es:[edi],al
  44939f:	and    dh,0x40
  4493a2:	cmp    DWORD PTR es:[ebp-0x260dba58],eax
  4493a9:	or     al,BYTE PTR [edx+esi*1]
  4493ac:	(bad)  
  4493ad:	imul   eax,DWORD PTR [ebp+0x10bbccf9],0x368b9086
  4493b7:	scas   eax,DWORD PTR es:[edi]
  4493b8:	repnz loop 0x449412
  4493bb:	out    0x7,eax
  4493bd:	sub    DWORD PTR ds:0x8c96e081,eax
  4493c3:	pop    ebx
  4493c4:	enter  0x2bd6,0x61
  4493c8:	inc    ecx
  4493c9:	push   esi
  4493ca:	cmp    al,0xf8
  4493cc:	call   0x6f0f:0x15aba668
  4493d3:	jmp    0x4493e4
  4493d5:	xchg   edx,eax
  4493d6:	pop    edx
  4493d7:	and    eax,0x573eb83f
  4493dc:	mov    bh,0xf6
  4493de:	loopne 0x4493cc
  4493e0:	add    ecx,edi
  4493e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4493e3:	cmp    ebx,DWORD PTR cs:[ebp+ebx*4-0x4a]
  4493e8:	xchg   ebx,eax
  4493e9:	pop    es
  4493ea:	rcl    al,cl
  4493ec:	bound  esi,QWORD PTR [ebp-0x1ca78d60]
  4493f2:	cmc    
  4493f3:	cmp    DWORD PTR [edx-0x66a56048],0xe025933b
  4493fd:	fimul  WORD PTR [edx+0x4c5cbf5a]
  449403:	inc    edx
  449404:	aas    
  449405:	dec    DWORD PTR [esi-0xfc43efc]
  44940b:	pop    esi
  44940c:	addr16 push 0x27b897fe
  449412:	sbb    bh,BYTE PTR [ecx+edx*8]
  449415:	xor    DWORD PTR [eax+0x31],esi
  449418:	in     al,dx
  449419:	add    BYTE PTR [eax+0x27ed8f16],bh
  44941f:	dec    ebp
  449420:	test   dl,bh
  449422:	gs aaa 
  449424:	dec    edx
  449425:	push   ebx
  449426:	lds    ecx,FWORD PTR [esi+0x7c]
  449429:	sub    al,0x2c
  44942b:	jg     0x449460
  44942d:	call   DWORD PTR [ecx+0x32929170]
  449433:	add    BYTE PTR [ecx+0x9],0x90
  449437:	lods   al,BYTE PTR ds:[esi]
  449438:	mov    al,0xc1
  44943a:	dec    ebp
  44943b:	jb     0x449443
  44943d:	(bad)  
  44943e:	in     eax,0x5d
  449440:	inc    esi
  449441:	jl     0x449492
  449443:	xlat   BYTE PTR ds:[ebx]
  449444:	adc    BYTE PTR [ecx+0x29fc6e62],al
  44944a:	and    al,0x56
  44944c:	test   BYTE PTR [edx-0x5a],0xa7
  449450:	fdiv   QWORD PTR [eax]
  449452:	rol    BYTE PTR [ecx+0x689e0284],1
  449458:	js     0x449481
  44945a:	mov    DWORD PTR [ecx],ecx
  44945c:	mov    ds:0x6373c68d,al
  449461:	data16 jle 0x44942b
  449464:	ja     0x449419
  449466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449467:	push   esi
  449468:	mov    ds:0x2d6198b7,eax
  44946d:	cmp    BYTE PTR [esi+0x54],0x60
  449471:	mov    ah,0x97
  449473:	push   ebx
  449474:	dec    edi
  449475:	mov    ss,WORD PTR ss:[ebx-0x6]
  449479:	pop    esi
  44947a:	retf   0xc4fa
  44947d:	outs   dx,BYTE PTR ds:[esi]
  44947e:	(bad)  
  44947f:	or     al,0x7d
  449481:	cmp    ch,BYTE PTR [eax+eax*1+0x65964397]
  449488:	mov    esi,0x5cce12c1
  44948d:	sbb    BYTE PTR [ecx-0x11ff3b45],bh
  449493:	mov    al,ds:0x84be5224
  449498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449499:	push   es
  44949a:	adc    eax,DWORD PTR [esi]
  44949c:	in     eax,0xc0
  44949e:	push   es
  44949f:	cmp    ecx,eax
  4494a1:	xchg   edx,eax
  4494a2:	sbb    DWORD PTR [ebx-0x6f117757],ebx
  4494a8:	repz in eax,dx
  4494aa:	mov    ecx,0x705668bc
  4494af:	push   ss
  4494b0:	ficomp DWORD PTR [eax]
  4494b2:	jns    0x449460
  4494b4:	imul   edx,DWORD PTR [edx-0x30],0x61c95a76
  4494bb:	popf   
  4494bc:	test   al,0xd
  4494be:	in     al,dx
  4494bf:	and    eax,0x796a9c8b
  4494c4:	push   esp
  4494c5:	retf   
  4494c6:	mov    al,0x22
  4494c8:	xchg   ecx,eax
  4494c9:	stc    
  4494ca:	sub    edx,eax
  4494cc:	cld    
  4494cd:	call   0x9bd5:0x2a9b4369
  4494d4:	xor    ecx,esi
  4494d6:	jnp    0x44951e
  4494d8:	jo     0x449463
  4494da:	into   
  4494db:	mov    esi,0xc7ea1105
  4494e0:	inc    eax
  4494e1:	out    0x96,eax
  4494e3:	add    al,0x5e
  4494e5:	ins    BYTE PTR es:[edi],dx
  4494e6:	push   edx
  4494e7:	cmp    BYTE PTR [edx],0xc9
  4494ea:	les    edx,FWORD PTR [edi-0x3ac90603]
  4494f0:	dec    edi
  4494f1:	push   ss
  4494f2:	dec    ebx
  4494f3:	ret    0x49e0
  4494f6:	lock push 0x50
  4494f9:	(bad)  
  4494fa:	test   DWORD PTR [ecx+0x11798efa],0xf7361101
  449504:	mov    al,BYTE PTR [ecx+0x26b618a]
  44950a:	pushf  
  44950b:	mov    eax,ds:0x1373d60c
  449510:	add    BYTE PTR [ecx+edi*4],0x17
  449514:	test   al,0xff
  449516:	sbb    DWORD PTR [ebx+0x70],0xffffffae
  44951a:	mov    edx,0xc53a8df6
  44951f:	sar    al,0x93
  449522:	data16 xor dl,0xde
  449526:	xor    al,0xeb
  449528:	(bad)  [esi+0x13]
  44952b:	ins    BYTE PTR es:[edi],dx
  44952c:	mov    edi,0x8364592a
  449531:	imul   ebp,ebp,0x5fd3dc98
  449537:	pop    edi
  449538:	(bad)  
  449539:	out    0xd4,eax
  44953b:	mov    bh,ah
  44953d:	retf   
  44953e:	(bad)  
  44953f:	dec    BYTE PTR [edx]
  449541:	xchg   ebx,eax
  449542:	mov    esi,esp
  449544:	fstp   TBYTE PTR [ebp+0x2d]
  449547:	mov    ecx,?
  449549:	aam    0x59
  44954b:	push   ebp
  44954c:	das    
  44954d:	dec    ebp
  44954e:	xchg   BYTE PTR [eax],ah
  449550:	out    dx,al
  449551:	mov    DWORD PTR [ecx-0x57],ecx
  449554:	mov    ds:0xd4ed039,eax
  449559:	retf   0xa162
  44955c:	inc    edx
  44955d:	jecxz  0x449507
  44955f:	icebp  
  449560:	clc    
  449561:	sub    DWORD PTR [edx-0x7d171f39],edx
  449567:	repz pop eax
  449569:	and    al,0x9
  44956c:	aaa    
  44956d:	rcr    edx,cl
  44956f:	adc    bx,WORD PTR [esi]
  449572:	pop    ebp
  449573:	cmp    al,0x34
  449575:	push   cs
  449576:	in     al,dx
  449577:	add    dh,dl
  449579:	int    0x5f
  44957b:	inc    edx
  44957c:	or     dl,BYTE PTR [ebx]
  44957e:	cs jae 0x449552
  449581:	std    
  449582:	and    eax,esp
  449584:	scas   al,BYTE PTR es:[edi]
  449585:	int3   
  449586:	sbb    bl,ch
  449588:	aad    0x7
  44958a:	lods   al,BYTE PTR ds:[esi]
  44958b:	lahf   
  44958c:	bound  ebx,QWORD PTR [eax-0x7b8a07ea]
  449592:	mov    edx,0xd3285bf
  449597:	push   0x81f791b3
  44959c:	and    DWORD PTR [ebp+0x25c44d56],ecx
  4495a2:	and    BYTE PTR [edx+0x8],ah
  4495a5:	enter  0x8d95,0x6b
  4495a9:	xchg   ecx,eax
  4495aa:	jmp    0x449617
  4495ac:	xlat   BYTE PTR ds:[ebx]
  4495ad:	sub    ebx,DWORD PTR [edi-0x24922f97]
  4495b3:	arpl   WORD PTR [eax],sp
  4495b5:	push   esp
  4495b6:	stc    
  4495b7:	ror    BYTE PTR [edx-0x15],cl
  4495ba:	(bad)  
  4495bb:	int    0xc1
  4495bd:	jl     0x449580
  4495bf:	(bad)  
  4495c0:	repnz or esp,DWORD PTR [eax+0x3501b91e]
  4495c7:	mov    ecx,0x9db97c6
  4495cc:	adc    eax,0x468e00a7
  4495d1:	pop    es
  4495d2:	sbb    eax,0xbc2ce0e5
  4495d7:	test   BYTE PTR [edx+ebx*4-0x6d60959],bl
  4495de:	and    cl,dh
  4495e0:	xor    ebp,eax
  4495e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4495e3:	xor    al,0xd
  4495e5:	or     BYTE PTR [edx+0x54a32c1e],bh
  4495eb:	clc    
  4495ec:	mov    ebp,0x80279892
  4495f1:	mov    ebx,0xc13f7c2a
  4495f6:	add    ecx,DWORD PTR [edx+0x78c79d61]
  4495fc:	rcr    DWORD PTR [esi-0x8],1
  4495ff:	sbb    edx,DWORD PTR [esp+ebx*8+0x7f59d66f]
  449606:	jbe    0x449604
  449608:	xor    DWORD PTR [ecx+0x1e],0x63
  44960c:	repnz xchg ebx,edx
  44960f:	iret   
  449610:	mov    esi,0x1179cd38
  449615:	mov    ebp,0x2f9d322e
  44961a:	mov    al,ds:0x9cab5674
  44961f:	popa   
  449620:	(bad)  
  449623:	fxch   st(4)
  449625:	add    BYTE PTR [eax],dh
  449627:	push   ebx
  449628:	mov    ebp,0x613fa5a
  44962d:	shl    BYTE PTR [edx+0x39],cl
  449630:	sbb    eax,0xbd6f054d
  449635:	fidiv  WORD PTR [esi]
  449637:	pop    edx
  449638:	xchg   edx,eax
  449639:	rol    DWORD PTR [eax+0x7309733d],0x8d
  449640:	repnz pop edx
  449642:	repz fs dec esp
  449645:	cmp    BYTE PTR [eax],bl
  449647:	or     ebp,esi
  449649:	xchg   ebp,eax
  44964a:	std    
  44964b:	jle    0x449637
  44964d:	mov    edi,0xc6ce6d7
  449652:	xor    al,0x11
  449654:	fiadd  WORD PTR [edx]
  449656:	clc    
  449657:	(bad)  
  449658:	fisttp QWORD PTR [edi]
  44965a:	mov    edi,0xb734ef78
  44965f:	xchg   dl,cl
  449661:	xor    ebx,eax
  449663:	fwait
  449664:	inc    eax
  449665:	jmp    0xeb8a420a
  44966a:	jae    0x449694
  44966c:	not    BYTE PTR ds:0xa69b630f
  449672:	in     eax,0x50
  449674:	jge    0x449664
  449676:	sub    BYTE PTR ds:0xec06d1ef,al
  44967c:	jnp    0x44966d
  44967e:	and    BYTE PTR [ebp-0x379b8957],cl
  449684:	(bad)  
  449685:	popa   
  449686:	jmp    ebp
  449688:	mov    al,ds:0x8a12ddd
  44968d:	scas   al,BYTE PTR es:[edi]
  44968e:	dec    esi
  44968f:	out    dx,al
  449690:	and    eax,0x89c9882b
  449695:	mov    bh,0xe0
  449697:	out    0x6b,al
  449699:	push   edi
  44969a:	jnp    0x449655
  44969c:	stos   DWORD PTR es:[edi],eax
  44969d:	pop    ds
  44969e:	ins    BYTE PTR es:[edi],dx
  44969f:	dec    BYTE PTR [esi-0x2c]
  4496a2:	xchg   ecx,eax
  4496a3:	push   esi
  4496a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4496a5:	nop
  4496a6:	rol    BYTE PTR [ecx],1
  4496a8:	inc    eax
  4496a9:	out    dx,al
  4496aa:	das    
  4496ab:	add    edi,DWORD PTR [ebx+0x129f5b75]
  4496b1:	fcomp  QWORD PTR [ebx]
  4496b3:	dec    eax
  4496b4:	test   ebp,ecx
  4496b6:	mov    eax,ds:0x5c7e85fc
  4496bb:	lahf   
  4496bc:	dec    eax
  4496bd:	push   cs
  4496be:	jl     0x449711
  4496c0:	lods   al,BYTE PTR ds:[esi]
  4496c1:	(bad)  
  4496c2:	loop   0x4496d5
  4496c4:	pop    es
  4496c5:	lods   eax,DWORD PTR ds:[esi]
  4496c6:	fist   DWORD PTR [edx+ebp*2+0x2e6efe6c]
  4496cd:	repz into 
  4496cf:	adc    al,0x78
  4496d1:	xchg   esp,eax
  4496d2:	call   0xf6cc:0x73be2943
  4496d9:	test   DWORD PTR [esi],eax
  4496db:	das    
  4496dc:	bound  edi,QWORD PTR [eax+0x52965358]
  4496e2:	adc    eax,0x30811e8c
  4496e7:	cs jle 0x449768
  4496ea:	cli    
  4496eb:	div    bh
  4496ed:	cmp    bh,BYTE PTR [ebp-0x1b]
  4496f0:	aam    0xd6
  4496f2:	fcomip st,st(2)
  4496f4:	and    BYTE PTR [esi-0x4d0768b5],0x34
  4496fb:	or     BYTE PTR [esi],dh
  4496fd:	xor    al,0x7c
  4496ff:	retf   
  449700:	xchg   edx,eax
  449701:	retf   
  449702:	call   0x8d85f506
  449707:	inc    ebp
  449708:	call   0xb47396d3
  44970d:	sahf   
  44970e:	popa   
  44970f:	aas    
  449710:	cmp    ch,BYTE PTR [edi+0x7a]
  449713:	stos   DWORD PTR es:[edi],eax
  449714:	inc    esi
  449715:	push   ebx
  449716:	(bad)  
  449718:	cld    
  449719:	jne    0x4496a6
  44971b:	or     bh,BYTE PTR [ecx+ecx*2+0x44ff8660]
  449722:	mov    eax,0x2e082fe6
  449727:	pusha  
  449728:	pop    esi
  449729:	jno    0x44972e
  44972b:	sub    al,0x68
  44972d:	mov    ds:0x12f75895,eax
  449732:	xchg   ah,bl
  449734:	push   ebp
  449735:	mov    WORD PTR [edi+ecx*4],?
  449738:	xchg   ebp,eax
  449739:	mov    cl,0xa
  44973b:	inc    esi
  44973c:	dec    esi
  44973d:	(bad)  
  44973e:	jmp    0xb879c3c7
  449743:	cmp    ebx,edx
  449745:	ins    DWORD PTR es:[edi],dx
  449746:	inc    BYTE PTR [edx-0x18e4f6b2]
  44974c:	push   ss
  44974d:	pop    ss
  44974e:	sub    esp,DWORD PTR [ebp+0x451ed0e]
  449754:	inc    edi
  449755:	xor    esi,DWORD PTR [edi+0x6af62106]
  44975b:	es xchg edx,eax
  44975d:	jno    0x449785
  44975f:	test   BYTE PTR [ebp-0x33],al
  449762:	pop    ds
  449763:	push   esp
  449764:	add    bl,BYTE PTR [edx]
  449766:	add    DWORD PTR [edi],edi
  449768:	sbb    bl,bh
  44976a:	lods   eax,DWORD PTR ds:[esi]
  44976b:	icebp  
  44976c:	dec    ebp
  44976d:	mov    ebp,0x2d08bc83
  449772:	pusha  
  449773:	push   ss
  449774:	sub    ah,cl
  449776:	or     DWORD PTR [ecx-0x75],ebp
  449779:	fnstsw WORD PTR [edx]
  44977b:	fisub  WORD PTR [edi+eiz*8]
  44977e:	ja     0x449733
  449780:	rcl    BYTE PTR [ebx],cl
  449782:	pop    edx
  449783:	pop    ebp
  449784:	dec    edi
  449785:	mov    edi,0xffd5d697
  44978a:	jnp    0x4497f0
  44978c:	scas   al,BYTE PTR es:[edi]
  44978d:	xor    ebx,DWORD PTR [edi+0x7bf2d295]
  449793:	xchg   edi,eax
  449794:	xor    BYTE PTR [ecx-0x2a],al
  449797:	call   0xc36:0xa73ceade
  44979e:	in     al,dx
  44979f:	sub    ebp,esi
  4497a1:	inc    ebp
  4497a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4497a3:	loopne 0x44978a
  4497a5:	adc    al,0x3f
  4497a7:	push   es
  4497a8:	jbe    0x4497c9
  4497aa:	sbb    dh,bl
  4497ac:	fsub   QWORD PTR [edx+0x4442d853]
  4497b2:	loope  0x44977c
  4497b4:	fsub   DWORD PTR [eax]
  4497b6:	call   0x98877303
  4497bb:	xor    ebp,DWORD PTR [esi]
  4497bd:	jae    0x449799
  4497bf:	add    eax,0x3fb435b5
  4497c4:	xor    al,0xee
  4497c6:	test   BYTE PTR [edi-0x4a],0x52
  4497ca:	pop    eax
  4497cb:	xchg   edi,eax
  4497cc:	(bad)  
  4497cd:	addr16 in eax,dx
  4497cf:	sub    ecx,DWORD PTR [ebp-0x80]
  4497d2:	sub    dl,BYTE PTR [edi-0x56]
  4497d5:	leave  
  4497d6:	lds    ecx,FWORD PTR [eax+edx*2]
  4497d9:	fwait
  4497da:	int    0x8a
  4497dc:	imul   edi,DWORD PTR [edi],0xffffff88
  4497df:	or     al,0xdf
  4497e1:	sahf   
  4497e2:	jnp    0x449822
  4497e4:	ins    BYTE PTR es:[edi],dx
  4497e5:	cmp    eax,0x78cf4b3e
  4497ea:	pop    edi
  4497eb:	ss imul ecx,esi,0x64
  4497ef:	push   ecx
  4497f0:	dec    eax
  4497f1:	jp     0x449816
  4497f3:	retf   0x9606
  4497f6:	aam    0x6f
  4497f8:	lea    eax,[ebx+0x27f825a7]
  4497fe:	and    DWORD PTR [esi*2+0x36a5ad51],esp
  449805:	test   BYTE PTR [ebp-0x7b],0x80
  449809:	fs pop ebp
  44980b:	adc    edx,DWORD PTR [ebx-0x24]
  44980e:	mov    cl,0xdd
  449810:	adc    eax,0x3d791711
  449815:	pop    es
  449816:	sti    
  449817:	cmp    DWORD PTR ds:0x99a09357,0x54164ca9
  449821:	popa   
  449822:	hlt    
  449823:	add    cl,BYTE PTR [ecx+0x2f]
  449826:	cdq    
  449827:	shr    esi,cl
  449829:	xor    DWORD PTR [ecx-0x4ae7d7c5],edx
  44982f:	pop    ebx
  449830:	aam    0xb6
  449832:	fwait
  449833:	loop   0x4497c1
  449835:	xor    esi,ebx
  449837:	mov    ah,0xbd
  449839:	lock (bad) 
  44983b:	imul   ecx,DWORD PTR [ebp-0x6c],0x80c4b25a
  449842:	aas    
  449843:	cli    
  449844:	add    al,0xd3
  449846:	xchg   BYTE PTR [esi-0x63],ah
  449849:	loope  0x449856
  44984b:	adc    eax,DWORD PTR ds:0xeb0f8afb
  449851:	mov    edx,0xe9fee9cb
  449856:	jne    0x44988d
  449858:	stos   BYTE PTR es:[edi],al
  449859:	mov    dh,0xe
  44985b:	fldenv [ecx+edx*1+0x497e32b6]
  449862:	dec    eax
  449863:	ins    DWORD PTR es:[edi],dx
  449864:	out    0x64,al
  449866:	dec    ecx
  449867:	fbstp  TBYTE PTR [edi+0x33]
  44986a:	imul   ecx,DWORD PTR [esi+0x3f51a141],0xfffffff0
  449871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449872:	repz mov al,0x91
  449875:	stos   DWORD PTR es:[edi],eax
  449876:	dec    esp
  449877:	sbb    al,BYTE PTR [edx+ebp*1]
  44987a:	js     0x4498d9
  44987c:	(bad)  
  44987d:	nop
  44987e:	fldenv [eax]
  449880:	call   0xcd6a:0xcc1715ee
  449887:	outs   dx,BYTE PTR ds:[esi]
  449888:	fwait
  449889:	retf   
  44988a:	adc    al,0xa0
  44988c:	retf   
  44988d:	xchg   ebx,eax
  44988e:	adc    eax,0x9637d6e5
  449893:	jnp    0x449914
  449895:	sbb    dh,bl
  449897:	mov    al,ds:0x41eedc36
  44989c:	mov    ds:0x4c6255da,eax
  4498a1:	xor    eax,0x6770d894
  4498a6:	mov    ebp,0x4626abd6
  4498ab:	add    ecx,DWORD PTR [eax-0x4b599f01]
  4498b1:	and    DWORD PTR [ecx-0x46],ebx
  4498b4:	cs das 
  4498b6:	popf   
  4498b7:	mov    cl,cl
  4498b9:	nop
  4498ba:	xchg   esi,eax
  4498bb:	cmp    al,0x1e
  4498bd:	jne    0x44985f
  4498bf:	push   edx
  4498c0:	pop    ebx
  4498c1:	xchg   edx,eax
  4498c2:	push   es
  4498c3:	cld    
  4498c4:	jo     0x449889
  4498c6:	shl    DWORD PTR [ebx-0x2d46b453],1
  4498cc:	nop
  4498cd:	cmp    edx,DWORD PTR [ecx+0x38]
  4498d0:	and    al,BYTE PTR [edx-0x21]
  4498d3:	xchg   esi,ecx
  4498d5:	jmp    0x6530:0xc4d47a59
  4498dc:	mov    bh,0x16
  4498de:	pop    edx
  4498df:	frstor [edx]
  4498e1:	pop    edi
  4498e2:	ja     0x44995d
  4498e4:	push   ss
  4498e5:	popf   
  4498e6:	enter  0xfe16,0xf5
  4498ea:	out    dx,al
  4498eb:	jp     0x4498b6
  4498ed:	inc    eax
  4498ee:	adc    eax,0xda44fc7d
  4498f3:	jl     0x449946
  4498f5:	std    
  4498f6:	mov    al,0x40
  4498f8:	ss arpl si,sp
  4498fb:	mov    dh,0xbd
  4498fd:	push   ebx
  4498fe:	test   al,0x34
  449900:	repz sti 
  449902:	pop    ss
  449903:	mov    ebx,0xb46433b2
  449908:	(bad)  
  449909:	dec    ebp
  44990a:	retf   0xce5b
  44990d:	shl    DWORD PTR ds:0x7e64a2a7,cl
  449913:	pop    edi
  449914:	mov    ds:0xac3ed113,al
  449919:	xor    dh,cl
  44991b:	(bad)  
  44991c:	hlt    
  44991d:	xor    ch,BYTE PTR [edx+esi*2]
  449920:	mov    cl,0xe1
  449922:	pop    ecx
  449923:	xor    al,ah
  449925:	push   ebx
  449926:	in     al,dx
  449927:	shl    ebx,cl
  449929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44992a:	pop    edi
  44992b:	pop    ds
  44992c:	sbb    al,0xb3
  44992e:	and    ah,BYTE PTR [edx-0x2beea30f]
  449934:	jnp    0x44993a
  449936:	and    DWORD PTR [eax],ebx
  449938:	jno    0x4499b0
  44993a:	mov    dl,0x2
  44993c:	ja     0x44991d
  44993e:	les    eax,FWORD PTR [ebx-0x17915d51]
  449944:	sar    DWORD PTR [ebp-0x12],cl
  449947:	inc    esi
  449948:	popa   
  449949:	push   cs
  44994a:	and    eax,0x6e94f11a
  44994f:	loope  0x4498d1
  449951:	fwait
  449952:	ja     0x4498e9
  449954:	mov    al,ds:0x81006263
  449959:	pop    ebx
  44995a:	int    0xcf
  44995c:	ds sub dl,0x62
  449960:	mov    bh,0x5e
  449962:	xor    edx,0xc2b95d85
  449968:	xor    BYTE PTR [esi-0x43],ch
  44996b:	imul   ebx,DWORD PTR ss:[ecx-0x15],0xc307179a
  449973:	bound  eax,QWORD PTR [ebx+0x549402df]
  449979:	(bad)  
  44997b:	dec    esp
  44997c:	jbe    0x449921
  44997e:	aad    0xb2
  449980:	xor    DWORD PTR [ebp*8-0x3c57c82b],edi
  449987:	cmp    al,0x26
  449989:	jnp    0x44997b
  44998b:	add    DWORD PTR [esp+ecx*2+0x7c35a347],edx
  449992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449993:	loopne 0x4499b2
  449995:	ds mov esp,0xfb235c58
  44999b:	add    al,0x43
  44999d:	xor    eax,0xf0ceb79a
  4499a2:	pop    ecx
  4499a3:	ins    BYTE PTR es:[edi],dx
  4499a4:	sbb    al,0xf8
  4499a6:	ss jecxz 0x449975
  4499a9:	daa    
  4499aa:	add    esi,DWORD PTR ds:0xefe1bcf6
  4499b0:	or     ecx,DWORD PTR [esi+0x670ebb1]
  4499b6:	push   ebp
  4499b7:	(bad)  
  4499b8:	mov    bh,0x70
  4499ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4499bb:	sub    eax,0x1ffed852
  4499c0:	call   0x6cec:0xbfe66df8
  4499c7:	sub    ah,BYTE PTR [esi-0x80]
  4499ca:	mov    ebp,0xb876ce76
  4499cf:	call   0x9d6a:0x47d188c9
  4499d6:	scas   al,BYTE PTR es:[edi]
  4499d7:	int3   
  4499d8:	add    DWORD PTR [esi],ebp
  4499da:	icebp  
  4499db:	push   cs
  4499dc:	retf   
  4499dd:	jo     0x449979
  4499df:	dec    esp
  4499e0:	pop    ebp
  4499e1:	leave  
  4499e2:	popf   
  4499e3:	pop    esi
  4499e4:	xlat   BYTE PTR ds:[ebx]
  4499e5:	outs   dx,BYTE PTR ds:[esi]
  4499e6:	sbb    eax,0xf38f5d4a
  4499eb:	ss aaa 
  4499ed:	sbb    edi,edx
  4499ef:	xor    al,0x4c
  4499f1:	test   al,0xdf
  4499f3:	ins    BYTE PTR es:[edi],dx
  4499f4:	in     al,dx
  4499f5:	cmc    
  4499f6:	pop    ebx
  4499f7:	mov    al,0xb
  4499f9:	lahf   
  4499fa:	mov    al,0x8c
  4499fc:	pushf  
  4499fd:	fwait
  4499fe:	and    BYTE PTR [edx],dh
  449a00:	mov    dh,0x9b
  449a02:	mov    edx,0x6be11157
  449a07:	cs mov bh,0xba
  449a0a:	xchg   ebx,eax
  449a0b:	add    eax,0xa0efa3b6
  449a10:	and    ebp,eax
  449a12:	aas    
  449a13:	shr    BYTE PTR [eax-0x17],cl
  449a16:	inc    ebx
  449a17:	jge    0x449a0f
  449a19:	in     al,0x9b
  449a1b:	pusha  
  449a1c:	lods   eax,DWORD PTR ds:[esi]
  449a1d:	in     eax,dx
  449a1e:	sub    al,0x9d
  449a20:	dec    esi
  449a21:	adc    BYTE PTR [ebp+0x63],bl
  449a24:	cmc    
  449a25:	sti    
  449a26:	shr    bl,1
  449a28:	in     al,dx
  449a29:	fimul  DWORD PTR [ebx+0x28]
  449a2c:	mov    ecx,0xe6b89316
  449a31:	cmp    eax,0xcd40bfc2
  449a36:	je     0x449a89
  449a38:	cmp    eax,0x558e8384
  449a3d:	add    ebp,DWORD PTR [ecx]
  449a3f:	loopne 0x449a46
  449a41:	out    0xb9,al
  449a43:	mov    esi,0xdba720e3
  449a48:	je     0x449aba
  449a4a:	or     esp,esp
  449a4c:	inc    edi
  449a4d:	push   ss
  449a4e:	push   ebp
  449a4f:	scas   eax,DWORD PTR es:[edi]
  449a50:	stc    
  449a51:	inc    eax
  449a52:	les    eax,FWORD PTR [ecx-0x700466c0]
  449a58:	ffree  st(7)
  449a5a:	xchg   esp,ebp
  449a5c:	inc    ebx
  449a5d:	dec    esp
  449a5e:	add    DWORD PTR [ecx+0x610861b0],ecx
  449a64:	pop    ss
  449a65:	jo     0x4499fb
  449a67:	test   eax,0xab4bde77
  449a6c:	fnstenv [edi+0x14ab37f9]
  449a72:	add    BYTE PTR [eax],dh
  449a74:	inc    esp
  449a75:	cmc    
  449a76:	daa    
  449a77:	mov    esp,0xf11d787c
  449a7c:	jnp    0x449a21
  449a7e:	mov    dl,0x69
  449a80:	int3   
  449a81:	js     0x449a30
  449a83:	rcr    BYTE PTR [edx-0x632b6bbb],cl
  449a89:	push   edx
  449a8a:	push   0x381fb49
  449a8f:	push   DWORD PTR [ebx-0x73]
  449a92:	fld    QWORD PTR [esi+0x65d55f18]
  449a98:	cmp    bh,BYTE PTR [ecx-0x78]
  449a9b:	fcomip st,st(4)
  449a9d:	mov    bh,0xca
  449a9f:	retf   0xa774
  449aa2:	mov    WORD PTR ds:0xa9c382cb,?
  449aa8:	pop    ecx
  449aa9:	(bad)  
  449aaa:	lock mov eax,0xbf440add
  449ab0:	push   edx
  449ab1:	xor    edx,ebp
  449ab3:	inc    eax
  449ab4:	adc    cl,cl
  449ab6:	xor    dl,ch
  449ab8:	dec    BYTE PTR [eax-0x1b]
  449abb:	mov    bl,0xb3
  449abd:	push   edx
  449abe:	or     edi,DWORD PTR [edi+0x35529603]
  449ac4:	je     0x449b2b
  449ac6:	test   eax,0x87150159
  449acc:	mov    edi,0x524b8cb
  449ad1:	inc    BYTE PTR [ebx*2-0x29971e25]
  449ad8:	xor    al,0xbe
  449ada:	scas   al,BYTE PTR es:[edi]
  449adb:	jp     0x449ab6
  449add:	or     BYTE PTR [esi-0x7e],0x6e
  449ae1:	cmp    al,0x3c
  449ae3:	and    DWORD PTR [eax-0x1ae459b6],0xfc3e52c4
  449aed:	loop   0x449b3b
  449aef:	sub    BYTE PTR [ebx+0x1d],cl
  449af2:	scas   al,BYTE PTR es:[edi]
  449af3:	jecxz  0x449aa9
  449af5:	cli    
  449af6:	shl    BYTE PTR [edi-0x2b],1
  449af9:	gs sti 
  449afb:	dec    ebp
  449afc:	in     al,dx
  449afd:	pusha  
  449afe:	sbb    eax,0xad50f950
  449b03:	ja     0x449aa2
  449b05:	neg    DWORD PTR [esi]
  449b07:	popf   
  449b08:	add    edi,DWORD PTR [esi-0x9f44977]
  449b0e:	es loopne 0x449aea
  449b11:	sbb    eax,0xdfa6b833
  449b16:	(bad)  
  449b17:	and    DWORD PTR [edi+esi*1-0xe],edi
  449b1b:	mov    bl,0xa
  449b1d:	int3   
  449b1e:	dec    edx
  449b1f:	mov    esp,0x5d561dd3
  449b24:	es scas al,BYTE PTR es:[edi]
  449b26:	inc    ebx
  449b27:	pop    edx
  449b28:	jp     0x449b32
  449b2a:	mov    dh,0xa7
  449b2c:	stos   DWORD PTR es:[edi],eax
  449b2d:	es or  ch,bl
  449b30:	pop    ss
  449b31:	inc    esp
  449b32:	mov    ah,0x8c
  449b34:	jge    0x449adb
  449b36:	cmp    dl,BYTE PTR [ecx-0xb]
  449b39:	sub    DWORD PTR [esp+eax*8+0x1e],eax
  449b3d:	cmp    DWORD PTR [ecx+0x5b5e537c],0x28416e70
  449b47:	(bad)  
  449b48:	mov    ecx,0xbc2aa5b9
  449b4d:	pop    esp
  449b4e:	in     al,0xb9
  449b50:	inc    esi
  449b51:	pop    edx
  449b52:	adc    esp,DWORD PTR [edi+0x71]
  449b55:	inc    esp
  449b56:	mov    cl,dl
  449b58:	mov    esi,0xd21a81b3
  449b5d:	mov    ch,0xf5
  449b5f:	mov    edi,0x52a1236b
  449b64:	add    eax,0xc7c5f0aa
  449b69:	popf   
  449b6a:	inc    edx
  449b6b:	out    dx,eax
  449b6c:	mov    ah,0x71
  449b6e:	jg     0x449b46
  449b70:	scas   eax,DWORD PTR es:[edi]
  449b71:	xchg   ecx,eax
  449b72:	addr16 mov bl,0x8e
  449b75:	dec    edi
  449b76:	xchg   edi,eax
  449b77:	clc    
  449b78:	mov    al,0x72
  449b7a:	movhps QWORD PTR [eax],xmm4
  449b7d:	push   esi
  449b7e:	sbb    al,0xb5
  449b80:	gs jns 0x449b30
  449b83:	or     eax,0xdf9b74dd
  449b88:	dec    edi
  449b89:	js     0x449b12
  449b8b:	call   0xc9a2df1d
  449b90:	(bad)  
  449b91:	mov    DWORD PTR [ecx],edx
  449b93:	iret   
  449b94:	pop    ebx
  449b95:	or     al,0x5d
  449b97:	dec    eax
  449b98:	mov    ch,0x17
  449b9a:	gs jbe 0x449b6c
  449b9d:	jecxz  0x449ba7
  449b9f:	jo     0x449bb5
  449ba1:	push   eax
  449ba2:	(bad)  
  449ba3:	pop    eax
  449ba4:	jbe    0x449b5c
  449ba6:	in     eax,0x37
  449ba8:	(bad)  
  449ba9:	pop    edi
  449baa:	jbe    0x449c12
  449bac:	mov    edi,0x2800a0c4
  449bb1:	jne    0x449bc7
  449bb3:	mov    edi,0xc402034e
  449bb8:	mov    DWORD PTR [esi-0x33267fdb],0xc33e2d98
  449bc2:	in     al,0x9a
  449bc4:	push   edx
  449bc5:	popa   
  449bc6:	mov    ax,0x209f
  449bca:	inc    esi
  449bcb:	jbe    0x449b85
  449bcd:	push   edi
  449bce:	(bad)  
  449bd0:	jno    0x449be2
  449bd2:	mov    esi,0xb2df1e0a
  449bd7:	pop    ecx
  449bd8:	sbb    dh,BYTE PTR [ecx+0x58c18c0a]
  449bde:	add    al,bh
  449be0:	lds    edx,FWORD PTR [ebp-0x76cd45d1]
  449be6:	add    dh,ah
  449be8:	in     eax,0x1
  449bea:	ja     0x449bf7
  449bec:	add    BYTE PTR [esi+0x56],ah
  449bef:	(bad)  
  449bf0:	jmp    0x7a73:0xdf216cd6
  449bf7:	rcr    BYTE PTR [eax],1
  449bf9:	scas   eax,DWORD PTR es:[edi]
  449bfa:	push   ecx
  449bfb:	jne    0x449bc8
  449bfd:	das    
  449bfe:	dec    edx
  449bff:	mov    edx,0xb64a9727
  449c04:	sbb    dh,BYTE PTR [edx]
  449c06:	mov    esi,0x7add0211
  449c0b:	mov    edx,0x127edcb3
  449c10:	ret    0xe33d
  449c13:	dec    edi
  449c14:	cwde   
  449c15:	aas    
  449c16:	dec    ebp
  449c17:	mov    ?,WORD PTR [ecx+eiz*8+0x50168463]
  449c1e:	shl    BYTE PTR [ebp-0x6d18b1dc],cl
  449c24:	mov    edi,0x5a8f59ae
  449c29:	inc    ebx
  449c2a:	jmp    0x6496fb9f
  449c2f:	mov    edi,0xd7e2a9f6
  449c34:	sub    eax,0x70530707
  449c39:	arpl   WORD PTR [ecx+0x6e52c293],di
  449c3f:	rol    DWORD PTR [ebx+0x76e6d2c2],0x4e
  449c46:	dec    edx
  449c47:	or     cl,BYTE PTR [esi]
  449c49:	daa    
  449c4a:	out    0x90,al
  449c4c:	lods   eax,DWORD PTR ds:[esi]
  449c4d:	xchg   esp,eax
  449c4e:	sbb    DWORD PTR [edx-0x12adf916],edi
  449c54:	mov    bh,0x38
  449c56:	loope  0x449c2e
  449c58:	and    BYTE PTR [eax+esi*2],bh
  449c5b:	or     cl,BYTE PTR [edi-0x43c0ebb4]
  449c61:	cmp    DWORD PTR [ebp-0x71],esi
  449c64:	dec    esp
  449c65:	hlt    
  449c66:	ds xchg ebx,eax
  449c68:	mov    ss,WORD PTR [ebx]
  449c6a:	into   
  449c6b:	push   esp
  449c6c:	xor    DWORD PTR [ebx+0xce5dfd9],0x77
  449c73:	xor    ah,BYTE PTR ds:0x65187f3d
  449c79:	or     DWORD PTR [eax],ebx
  449c7b:	enter  0xb917,0x32
  449c7f:	mov    eax,0x40e2e8a4
  449c84:	das    
  449c85:	mov    esp,gs
  449c87:	sbb    al,0x78
  449c89:	adc    BYTE PTR [eax],bh
  449c8b:	xor    eax,0x3cdf537
  449c90:	rcr    edi,1
  449c92:	jo     0x449c5e
  449c94:	(bad)
  449c97:	adc    ah,BYTE PTR [eax+0x16bbda03]
  449c9d:	push   esp
  449c9e:	jge    0x449c6f
  449ca0:	inc    esp
  449ca1:	jnp    0x449c3c
  449ca3:	mov    bh,dh
  449ca5:	je     0x449d10
  449ca7:	int3   
  449ca8:	(bad)  
  449ca9:	pop    ss
  449caa:	aas    
  449cab:	sbb    BYTE PTR [esp+esi*1+0x6dd1363d],dl
  449cb2:	mov    esi,DWORD PTR [eax+eax*2-0x7bdff112]
  449cb9:	mov    ch,0x1
  449cbb:	adc    eax,0xa443aac7
  449cc0:	cmp    edi,DWORD PTR [edx]
  449cc2:	fistp  DWORD PTR [ebp+0x5f]
  449cc5:	xchg   ebx,eax
  449cc6:	mov    eax,ds:0x5e177ebc
  449ccb:	sbb    esp,DWORD PTR [edx+0x53beee6e]
  449cd1:	mov    edx,0x29099558
  449cd6:	jo     0x449d33
  449cd8:	add    bh,bh
  449cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449cdb:	adc    eax,0x1975b578
  449ce0:	mov    eax,ds:0x2e349266
  449ce5:	stos   BYTE PTR es:[edi],al
  449ce6:	xor    ah,dh
  449ce8:	clc    
  449ce9:	mov    eax,0x2bff3731
  449cee:	jae    0x449d43
  449cf0:	imul   ecx,DWORD PTR [eax-0x79],0xbe05a353
  449cf7:	jns    0x449d25
  449cf9:	adc    al,0x9a
  449cfb:	(bad)  
  449cfd:	and    al,0x2b
  449cff:	xchg   edi,eax
  449d00:	push   ecx
  449d01:	ja     0x449c8e
  449d03:	adc    al,bh
  449d05:	jnp    0x449d68
  449d07:	lahf   
  449d08:	pop    esp
  449d09:	xchg   esi,eax
  449d0a:	cdq    
  449d0b:	adc    ch,dl
  449d0d:	gs inc edx
  449d0f:	jae    0x449cf3
  449d11:	ins    BYTE PTR es:[edi],dx
  449d12:	jmp    0xdd815868
  449d17:	dec    edi
  449d18:	test   al,0x4e
  449d1a:	dec    eax
  449d1b:	sbb    cl,BYTE PTR [esi]
  449d1d:	leave  
  449d1e:	push   cs
  449d1f:	aaa    
  449d20:	pop    ebx
  449d21:	cmp    ah,bl
  449d23:	in     al,0x49
  449d25:	add    BYTE PTR [ecx],ch
  449d27:	sahf   
  449d28:	out    0x97,eax
  449d2a:	into   
  449d2b:	adc    BYTE PTR [ebx-0x5c],cl
  449d2e:	rol    DWORD PTR [edi-0x3bf22e64],0x86
  449d35:	pop    ecx
  449d36:	push   eax
  449d37:	in     eax,dx
  449d38:	nop
  449d39:	mov    dl,0x14
  449d3b:	push   ebx
  449d3c:	iret   
  449d3d:	enter  0x94d4,0xa0
  449d41:	inc    esi
  449d42:	std    
  449d43:	pusha  
  449d44:	mov    al,0x7e
  449d46:	mov    gs:0x3bb75ba,al
  449d4c:	pushf  
  449d4d:	pop    esi
  449d4e:	add    cl,ch
  449d50:	xchg   edi,eax
  449d51:	xor    DWORD PTR [edx+0x62],ebx
  449d54:	sar    BYTE PTR [eax+esi*1-0x63],0x7c
  449d59:	adc    esi,DWORD PTR [esi]
  449d5b:	shr    DWORD PTR ds:0xf3e7eddd,cl
  449d61:	cmp    BYTE PTR [ecx],bl
  449d63:	push   0xd40f9681
  449d68:	or     dh,BYTE PTR [ecx-0x5f]
  449d6b:	ins    DWORD PTR es:[edi],dx
  449d6c:	nop
  449d6d:	and    eax,0x60300c01
  449d72:	shr    DWORD PTR [ebx],cl
  449d74:	inc    edi
  449d75:	dec    eax
  449d76:	mov    bh,0x1f
  449d78:	push   esp
  449d79:	dec    edi
  449d7a:	jmp    0x449d61
  449d7c:	hlt    
  449d7d:	cmp    DWORD PTR [eax-0x6f6bb41c],edx
  449d83:	fwait
  449d84:	cmp    eax,0x6798b62b
  449d89:	scas   al,BYTE PTR es:[edi]
  449d8a:	inc    ebx
  449d8b:	dec    ebx
  449d8c:	mov    al,ds:0x6924786e
  449d91:	(bad)  
  449d92:	into   
  449d93:	js     0x449d1f
  449d95:	test   eax,0x9d172f7d
  449d9a:	mov    ebx,0xcf0479ef
  449d9f:	push   eax
  449da0:	push   ss
  449da1:	mov    DWORD PTR [eax],esp
  449da3:	out    0x26,eax
  449da5:	mov    edi,0x72d9a7f
  449daa:	dec    ebp
  449dab:	rcl    BYTE PTR [ebx+0xffd4e50],1
  449db1:	pushf  
  449db2:	outs   dx,DWORD PTR ds:[esi]
  449db3:	jl     0x449df1
  449db5:	cmp    edx,DWORD PTR [eax]
  449db7:	ins    DWORD PTR es:[edi],dx
  449db8:	test   BYTE PTR [edi+0x3c],al
  449dbb:	adc    BYTE PTR [ebx-0x2c],bl
  449dbe:	bound  edx,QWORD PTR [eax+0x42f6ceb0]
  449dc4:	push   esi
  449dc5:	sub    eax,DWORD PTR [esi]
  449dc7:	push   0xcbe13072
  449dcc:	rol    BYTE PTR [ecx],1
  449dce:	sbb    BYTE PTR [edi+0x15],dh
  449dd1:	xchg   esi,eax
  449dd2:	pop    es
  449dd3:	cdq    
  449dd4:	daa    
  449dd5:	lock pop ebx
  449dd7:	pop    ss
  449dd8:	mov    ebp,0x1f8d5a5
  449ddd:	xchg   edx,eax
  449dde:	fisubr DWORD PTR [ebx]
  449de0:	push   ecx
  449de1:	pop    ss
  449de2:	sbb    BYTE PTR [esi],bl
  449de4:	pop    ecx
  449de5:	and    DWORD PTR [esi],ecx
  449de7:	not    DWORD PTR [edi+0x3d]
  449dea:	ss dec ebp
  449dec:	in     eax,dx
  449ded:	push   ds
  449dee:	enter  0x1e66,0xb4
  449df2:	sti    
  449df3:	rcr    BYTE PTR [edi-0x7d1e1a82],1
  449df9:	data16 das 
  449dfb:	fidivr DWORD PTR [ebx-0x2a9214de]
  449e01:	mov    ecx,0xb381db0a
  449e06:	das    
  449e07:	jmp    0x449dfc
  449e09:	std    
  449e0a:	adc    ch,al
  449e0c:	push   esp
  449e0d:	xchg   ecx,eax
  449e0e:	cli    
  449e0f:	in     eax,0xf0
  449e11:	mov    ebx,0x25611b8f
  449e16:	scas   al,BYTE PTR es:[edi]
  449e17:	mov    edx,0x8722c358
  449e1c:	rcr    DWORD PTR [esp+ebp*8-0x71b7da39],0x90
  449e24:	shl    esp,cl
  449e26:	ins    BYTE PTR es:[edi],dx
  449e27:	xor    DWORD PTR [eax-0x39413a57],0xe373f19c
  449e31:	adc    ebp,DWORD PTR [esi]
  449e33:	shr    BYTE PTR [esi+0x1a2f729f],1
  449e39:	cmp    eax,0x4a8880e8
  449e3e:	xor    DWORD PTR [eax],ebx
  449e40:	retf   
  449e41:	xchg   ebp,eax
  449e42:	mov    ch,0x6e
  449e44:	pop    es
  449e45:	jno    0x449de5
  449e47:	and    BYTE PTR [ebx+0x7c47a238],ah
  449e4d:	xor    DWORD PTR [esi+0xa],edx
  449e50:	mov    ds:0xc2825dc4,eax
  449e55:	cmp    ah,BYTE PTR [ebx]
  449e57:	xor    ah,cl
  449e59:	sub    BYTE PTR [ecx],bl
  449e5b:	pop    esp
  449e5c:	pop    ebp
  449e5d:	or     eax,0xa7045bea
  449e62:	push   cs
  449e63:	xor    ebp,DWORD PTR [eax+0xc]
  449e66:	ds loopne 0x449e6c
  449e69:	scas   eax,DWORD PTR es:[edi]
  449e6a:	and    eax,0xf3cb0040
  449e6f:	les    esp,FWORD PTR [edx+0x7986ad18]
  449e75:	ins    DWORD PTR es:[edi],dx
  449e76:	std    
  449e77:	dec    esi
  449e78:	xor    BYTE PTR [ebp+0x23],ah
  449e7b:	aam    0x32
  449e7d:	call   0x21a7:0xc77fd7b6
  449e84:	in     eax,0xa0
  449e86:	mov    dl,BYTE PTR [edx]
  449e88:	xor    al,0x5b
  449e8a:	jmp    0x9f91:0xd4339521
  449e91:	std    
  449e92:	std    
  449e93:	rcl    DWORD PTR [ebx-0x4147ba6a],cl
  449e99:	test   edi,0x56e75065
  449e9f:	pcmpeqb mm7,QWORD PTR [ebx+0x2cefbfed]
  449ea6:	iret   
  449ea7:	and    al,0x21
  449ea9:	pop    ss
  449eaa:	jno    0x449e84
  449eac:	fist   DWORD PTR [ecx-0x56]
  449eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449eb0:	retf   
  449eb1:	int    0xf3
  449eb3:	daa    
  449eb4:	jge    0x449e63
  449eb6:	dec    edx
  449eb7:	aam    0x9e
  449eb9:	pop    ecx
  449eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449ebb:	adc    DWORD PTR [ecx],edx
  449ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449ebe:	lock fidivr WORD PTR [edx+0x7c]
  449ec2:	or     ch,dl
  449ec4:	mov    edi,0x9cfde03f
  449ec9:	ins    DWORD PTR es:[edi],dx
  449eca:	ror    DWORD PTR [ebx-0x2bf69bd2],cl
  449ed0:	jecxz  0x449e90
  449ed2:	ss imul dh
  449ed5:	out    dx,al
  449ed6:	xchg   esp,eax
  449ed7:	pop    edi
  449ed8:	mov    ah,dh
  449eda:	jbe    0x449f1e
  449edc:	loopne 0x449f27
  449ede:	or     al,0x45
  449ee0:	outs   dx,DWORD PTR ds:[esi]
  449ee1:	pop    eax
  449ee2:	mov    BYTE PTR [ecx],al
  449ee4:	cwde   
  449ee5:	clc    
  449ee6:	and    BYTE PTR [edi],bl
  449ee8:	sub    eax,0x1cecd3fc
  449eed:	fsub   QWORD PTR [eax-0x4cb0dbed]
  449ef3:	(bad)  
  449ef4:	in     al,dx
  449ef5:	jns    0x449f26
  449ef7:	push   esi
  449ef8:	shl    ebp,cl
  449efa:	test   al,0x41
  449efc:	test   eax,0x9e8c963
  449f01:	or     bh,BYTE PTR [eax]
  449f03:	inc    ebx
  449f04:	push   ebp
  449f05:	xor    al,al
  449f07:	mov    bh,0x86
  449f09:	inc    esp
  449f0a:	jge    0x449ed2
  449f0c:	popa   
  449f0d:	shr    BYTE PTR [esi-0x29],1
  449f10:	xor    al,0xdd
  449f12:	ret    
  449f13:	dec    edx
  449f14:	xchg   esi,eax
  449f15:	je     0x449f73
  449f17:	gs out 0x10,eax
  449f1a:	push   0xc2e1e3c8
  449f1f:	cdq    
  449f20:	cmp    al,0xe8
  449f22:	nop
  449f23:	xchg   BYTE PTR [eax],bh
  449f25:	icebp  
  449f26:	add    eax,DWORD PTR [ebp-0x6e]
  449f29:	dec    edi
  449f2a:	stos   DWORD PTR es:[edi],eax
  449f2b:	push   0x7
  449f2d:	repz rcl DWORD PTR [esi+esi*4-0x34],1
  449f32:	mov    ah,0xac
  449f34:	(bad)  
  449f35:	jns    0x449f4f
  449f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449f38:	push   esi
  449f39:	fxtract 
  449f3b:	pop    ebp
  449f3c:	(bad)  
  449f3d:	shr    DWORD PTR [ebx-0x4b],1
  449f40:	adc    DWORD PTR [eax+0x8],esp
  449f43:	sbb    al,0xaf
  449f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449f46:	pop    ebp
  449f47:	fnsave [edi+0x43]
  449f4a:	push   esi
  449f4b:	data16 fcmovnu st,st(3)
  449f4e:	pop    es
  449f4f:	pushf  
  449f50:	loope  0x449f13
  449f52:	sti    
  449f53:	repnz push 0x23273b46
  449f59:	mov    ebx,0x93b80bba
  449f5e:	dec    ebx
  449f5f:	push   eax
  449f60:	push   ds
  449f61:	mov    gs,WORD PTR [ebx+0x12]
  449f64:	in     eax,dx
  449f65:	push   cs
  449f66:	enter  0xb951,0x5b
  449f6a:	nop
  449f6b:	sbb    eax,0x9aaee06f
  449f70:	call   0x46d952f4
  449f75:	xchg   esi,eax
  449f76:	les    esi,FWORD PTR [ebp-0x4a]
  449f79:	and    ebp,DWORD PTR [edx-0x41]
  449f7c:	dec    ebx
  449f7d:	dec    eax
  449f7e:	cld    
  449f7f:	pop    ecx
  449f80:	push   es
  449f81:	jns    0x449fd8
  449f83:	mov    dl,0xb5
  449f85:	adc    ebp,ecx
  449f87:	jmp    DWORD PTR [ecx+edi*4+0x67]
  449f8b:	scas   al,BYTE PTR es:[edi]
  449f8c:	lahf   
  449f8d:	pushf  
  449f8e:	inc    edx
  449f8f:	xchg   esi,eax
  449f90:	pop    esi
  449f91:	test   al,0xe1
  449f93:	jo     0x449f72
  449f95:	int    0x1c
  449f97:	call   0xd0b90719
  449f9c:	popa   
  449f9d:	adc    al,0x41
  449f9f:	das    
  449fa0:	test   eax,0xd938fc28
  449fa5:	cmp    eax,0x72e35818
  449faa:	(bad)  
  449fac:	jne    0x449fa5
  449fae:	icebp  
  449faf:	into   
  449fb0:	adc    BYTE PTR [bx],ah
  449fb3:	add    BYTE PTR [ebx-0x23a0e45e],bl
  449fb9:	loopne 0x449f42
  449fbb:	add    al,0xe5
  449fbd:	ins    DWORD PTR es:[edi],dx
  449fbe:	jecxz  0x44a009
  449fc0:	loopne 0x44a008
  449fc2:	or     bh,BYTE PTR [ebx+0x219da01d]
  449fc8:	dec    eax
  449fc9:	test   DWORD PTR [eax+0x5a],esp
  449fcc:	stos   DWORD PTR es:[edi],eax
  449fcd:	test   eax,0xc5962421
  449fd2:	leave  
  449fd3:	push   ebx
  449fd4:	clc    
  449fd5:	lahf   
  449fd6:	shr    BYTE PTR [ecx],1
  449fd8:	dec    DWORD PTR [edx+0x0]
  449fdb:	add    BYTE PTR [eax],al
  449fdd:	add    BYTE PTR [eax],al
  449fdf:	add    BYTE PTR [eax-0x42],ah
  449fe2:	add    BYTE PTR [eax+0x42],dh
  449fe5:	add    BYTE PTR [ebp-0x25fff42],cl
  449feb:	call   DWORD PTR [edi-0x77]
  449fee:	in     eax,0x8d
  449ff0:	pushf  
  449ff1:	and    al,0x80
  449ff3:	sar    edi,0xff
  449ff6:	xor    eax,eax
  449ff8:	push   eax
  449ff9:	cmp    esp,ebx
  449ffb:	jne    0x449ff8
  449ffd:	inc    esi
  449ffe:	inc    esi
  449fff:	push   ebx
  44a000:	push   0x47720
  44a005:	push   edi
  44a006:	add    ebx,0x4
  44a009:	push   ebx
  44a00a:	push   0x22fd9
  44a00f:	push   esi
  44a010:	add    ebx,0x4
  44a013:	push   ebx
  44a014:	push   eax
  44a015:	mov    DWORD PTR [ebx],0x20003
  44a01b:	nop
  44a01c:	nop
  44a01d:	nop
  44a01e:	nop
  44a01f:	nop
  44a020:	push   ebp
  44a021:	push   edi
  44a022:	push   esi
  44a023:	push   ebx
  44a024:	sub    esp,0x7c
  44a027:	mov    edx,DWORD PTR [esp+0x90]
  44a02e:	mov    DWORD PTR [esp+0x74],0x0
  44a036:	mov    BYTE PTR [esp+0x73],0x0
  44a03b:	mov    ebp,DWORD PTR [esp+0x9c]
  44a042:	lea    eax,[edx+0x4]
  44a045:	mov    DWORD PTR [esp+0x78],eax
  44a049:	mov    eax,0x1
  44a04e:	movzx  ecx,BYTE PTR [edx+0x2]
  44a052:	mov    ebx,eax
  44a054:	shl    ebx,cl
  44a056:	mov    ecx,ebx
  44a058:	dec    ecx
  44a059:	mov    DWORD PTR [esp+0x6c],ecx
  44a05d:	movzx  ecx,BYTE PTR [edx+0x1]
  44a061:	shl    eax,cl
  44a063:	dec    eax
  44a064:	mov    DWORD PTR [esp+0x68],eax
  44a068:	mov    eax,DWORD PTR [esp+0xa8]
  44a06f:	movzx  esi,BYTE PTR [edx]
  44a072:	mov    DWORD PTR [ebp+0x0],0x0
  44a079:	mov    DWORD PTR [esp+0x60],0x0
  44a081:	mov    DWORD PTR [eax],0x0
  44a087:	mov    eax,0x300
  44a08c:	mov    DWORD PTR [esp+0x64],esi
  44a090:	mov    DWORD PTR [esp+0x5c],0x1
  44a098:	mov    DWORD PTR [esp+0x58],0x1
  44a0a0:	mov    DWORD PTR [esp+0x54],0x1
  44a0a8:	mov    DWORD PTR [esp+0x50],0x1
  44a0b0:	movzx  ecx,BYTE PTR [edx+0x1]
  44a0b4:	add    ecx,esi
  44a0b6:	shl    eax,cl
  44a0b8:	lea    ecx,[eax+0x736]
  44a0be:	cmp    DWORD PTR [esp+0x74],ecx
  44a0c2:	jae    0x44a0d2
  44a0c4:	mov    eax,DWORD PTR [esp+0x78]
  44a0c8:	mov    WORD PTR [eax],0x400
  44a0cd:	add    eax,0x2
  44a0d0:	loop   0x44a0c8
  44a0d2:	mov    ebx,DWORD PTR [esp+0x94]
  44a0d9:	xor    edi,edi
  44a0db:	or     DWORD PTR [esp+0x48],0xffffffff
  44a0e3:	mov    edx,ebx
  44a0e5:	add    edx,DWORD PTR [esp+0x98]
  44a0ec:	mov    DWORD PTR [esp+0x4c],edx
  44a0f0:	xor    edx,edx
  44a0f2:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a0f6:	je     0x44aa78
  44a0fc:	movzx  eax,BYTE PTR [ebx]
  44a0ff:	shl    edi,0x8
  44a102:	inc    edx
  44a103:	inc    ebx
  44a104:	or     edi,eax
  44a106:	cmp    edx,0x4
  44a109:	jle    0x44a0f2
  44a10b:	mov    ecx,DWORD PTR [esp+0xa4]
  44a112:	cmp    DWORD PTR [esp+0x74],ecx
  44a116:	jae    0x44aa80
  44a11c:	mov    esi,DWORD PTR [esp+0x74]
  44a120:	and    esi,DWORD PTR [esp+0x6c]
  44a124:	mov    eax,DWORD PTR [esp+0x60]
  44a128:	mov    edx,DWORD PTR [esp+0x78]
  44a12c:	shl    eax,0x4
  44a12f:	mov    DWORD PTR [esp+0x44],esi
  44a133:	add    eax,esi
  44a135:	cmp    DWORD PTR [esp+0x48],0xffffff
  44a13d:	lea    ebp,[edx+eax*2]
  44a140:	ja     0x44a15a
  44a142:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a146:	je     0x44aa78
  44a14c:	shl    DWORD PTR [esp+0x48],0x8
  44a151:	movzx  eax,BYTE PTR [ebx]
  44a154:	shl    edi,0x8
  44a157:	inc    ebx
  44a158:	or     edi,eax
  44a15a:	mov    eax,DWORD PTR [esp+0x48]
  44a15e:	mov    dx,WORD PTR [ebp+0x0]
  44a162:	shr    eax,0xb
  44a165:	movzx  ecx,dx
  44a168:	imul   eax,ecx
  44a16b:	cmp    edi,eax
  44a16d:	jae    0x44a350
  44a173:	mov    DWORD PTR [esp+0x48],eax
  44a177:	mov    eax,0x800
  44a17c:	sub    eax,ecx
  44a17e:	mov    cl,BYTE PTR [esp+0x64]
  44a182:	sar    eax,0x5
  44a185:	mov    esi,0x1
  44a18a:	lea    eax,[edx+eax*1]
  44a18d:	movzx  edx,BYTE PTR [esp+0x73]
  44a192:	mov    WORD PTR [ebp+0x0],ax
  44a196:	mov    eax,DWORD PTR [esp+0x74]
  44a19a:	and    eax,DWORD PTR [esp+0x68]
  44a19e:	mov    ebp,DWORD PTR [esp+0x78]
  44a1a2:	shl    eax,cl
  44a1a4:	mov    ecx,0x8
  44a1a9:	sub    ecx,DWORD PTR [esp+0x64]
  44a1ad:	sar    edx,cl
  44a1af:	add    eax,edx
  44a1b1:	imul   eax,eax,0x600
  44a1b7:	cmp    DWORD PTR [esp+0x60],0x6
  44a1bc:	lea    eax,[ebp+eax*1+0xe6c]
  44a1c3:	mov    DWORD PTR [esp+0x14],eax
  44a1c7:	jle    0x44a297
  44a1cd:	mov    eax,DWORD PTR [esp+0x74]
  44a1d1:	sub    eax,DWORD PTR [esp+0x5c]
  44a1d5:	mov    edx,DWORD PTR [esp+0xa0]
  44a1dc:	movzx  eax,BYTE PTR [edx+eax*1]
  44a1e0:	mov    DWORD PTR [esp+0x40],eax
  44a1e4:	shl    DWORD PTR [esp+0x40],1
  44a1e8:	mov    ecx,DWORD PTR [esp+0x40]
  44a1ec:	lea    edx,[esi+esi*1]
  44a1ef:	mov    ebp,DWORD PTR [esp+0x14]
  44a1f3:	and    ecx,0x100
  44a1f9:	cmp    DWORD PTR [esp+0x48],0xffffff
  44a201:	lea    eax,[ebp+ecx*2+0x0]
  44a205:	mov    DWORD PTR [esp+0x3c],ecx
  44a209:	lea    ebp,[eax+edx*1]
  44a20c:	ja     0x44a226
  44a20e:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a212:	je     0x44aa78
  44a218:	shl    DWORD PTR [esp+0x48],0x8
  44a21d:	movzx  eax,BYTE PTR [ebx]
  44a220:	shl    edi,0x8
  44a223:	inc    ebx
  44a224:	or     edi,eax
  44a226:	mov    eax,DWORD PTR [esp+0x48]
  44a22a:	mov    cx,WORD PTR [ebp+0x200]
  44a231:	shr    eax,0xb
  44a234:	movzx  esi,cx
  44a237:	imul   eax,esi
  44a23a:	cmp    edi,eax
  44a23c:	jae    0x44a261
  44a23e:	mov    DWORD PTR [esp+0x48],eax
  44a242:	mov    eax,0x800
  44a247:	sub    eax,esi
  44a249:	mov    esi,edx
  44a24b:	sar    eax,0x5
  44a24e:	cmp    DWORD PTR [esp+0x3c],0x0
  44a253:	lea    eax,[ecx+eax*1]
  44a256:	mov    WORD PTR [ebp+0x200],ax
  44a25d:	je     0x44a281
  44a25f:	jmp    0x44a28f
  44a261:	sub    DWORD PTR [esp+0x48],eax
  44a265:	sub    edi,eax
  44a267:	mov    eax,ecx
  44a269:	lea    esi,[edx+0x1]
  44a26c:	shr    ax,0x5
  44a270:	sub    cx,ax
  44a273:	cmp    DWORD PTR [esp+0x3c],0x0
  44a278:	mov    WORD PTR [ebp+0x200],cx
  44a27f:	je     0x44a28f
  44a281:	cmp    esi,0xff
  44a287:	jle    0x44a1e4
  44a28d:	jmp    0x44a308
  44a28f:	cmp    esi,0xff
  44a295:	jg     0x44a308
  44a297:	lea    edx,[esi+esi*1]
  44a29a:	mov    ebp,DWORD PTR [esp+0x14]
  44a29e:	add    ebp,edx
  44a2a0:	cmp    DWORD PTR [esp+0x48],0xffffff
  44a2a8:	ja     0x44a2c2
  44a2aa:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a2ae:	je     0x44aa78
  44a2b4:	shl    DWORD PTR [esp+0x48],0x8
  44a2b9:	movzx  eax,BYTE PTR [ebx]
  44a2bc:	shl    edi,0x8
  44a2bf:	inc    ebx
  44a2c0:	or     edi,eax
  44a2c2:	mov    eax,DWORD PTR [esp+0x48]
  44a2c6:	mov    cx,WORD PTR [ebp+0x0]
  44a2ca:	shr    eax,0xb
  44a2cd:	movzx  esi,cx
  44a2d0:	imul   eax,esi
  44a2d3:	cmp    edi,eax
  44a2d5:	jae    0x44a2f0
  44a2d7:	mov    DWORD PTR [esp+0x48],eax
  44a2db:	mov    eax,0x800
  44a2e0:	sub    eax,esi
  44a2e2:	mov    esi,edx
  44a2e4:	sar    eax,0x5
  44a2e7:	lea    eax,[ecx+eax*1]
  44a2ea:	mov    WORD PTR [ebp+0x0],ax
  44a2ee:	jmp    0x44a28f
  44a2f0:	sub    DWORD PTR [esp+0x48],eax
  44a2f4:	sub    edi,eax
  44a2f6:	mov    eax,ecx
  44a2f8:	lea    esi,[edx+0x1]
  44a2fb:	shr    ax,0x5
  44a2ff:	sub    cx,ax
  44a302:	mov    WORD PTR [ebp+0x0],cx
  44a306:	jmp    0x44a28f
  44a308:	mov    edx,DWORD PTR [esp+0x74]
  44a30c:	mov    eax,esi
  44a30e:	mov    ecx,DWORD PTR [esp+0xa0]
  44a315:	mov    BYTE PTR [esp+0x73],al
  44a319:	mov    BYTE PTR [edx+ecx*1],al
  44a31c:	inc    edx
  44a31d:	cmp    DWORD PTR [esp+0x60],0x3
  44a322:	mov    DWORD PTR [esp+0x74],edx
  44a326:	jg     0x44a335
  44a328:	mov    DWORD PTR [esp+0x60],0x0
  44a330:	jmp    0x44aa50
  44a335:	cmp    DWORD PTR [esp+0x60],0x9
  44a33a:	jg     0x44a346
  44a33c:	sub    DWORD PTR [esp+0x60],0x3
  44a341:	jmp    0x44aa50
  44a346:	sub    DWORD PTR [esp+0x60],0x6
  44a34b:	jmp    0x44aa50
  44a350:	mov    ecx,DWORD PTR [esp+0x48]
  44a354:	sub    edi,eax
  44a356:	mov    esi,DWORD PTR [esp+0x60]
  44a35a:	sub    ecx,eax
  44a35c:	mov    eax,edx
  44a35e:	shr    ax,0x5
  44a362:	sub    dx,ax
  44a365:	cmp    ecx,0xffffff
  44a36b:	mov    WORD PTR [ebp+0x0],dx
  44a36f:	mov    ebp,DWORD PTR [esp+0x78]
  44a373:	lea    esi,[ebp+esi*2+0x0]
  44a377:	mov    DWORD PTR [esp+0x38],esi
  44a37b:	ja     0x44a393
  44a37d:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a381:	je     0x44aa78
  44a387:	movzx  eax,BYTE PTR [ebx]
  44a38a:	shl    edi,0x8
  44a38d:	shl    ecx,0x8
  44a390:	inc    ebx
  44a391:	or     edi,eax
  44a393:	mov    ebp,DWORD PTR [esp+0x38]
  44a397:	mov    eax,ecx
  44a399:	shr    eax,0xb
  44a39c:	mov    dx,WORD PTR [ebp+0x180]
  44a3a3:	movzx  ebp,dx
  44a3a6:	imul   eax,ebp
  44a3a9:	cmp    edi,eax
  44a3ab:	jae    0x44a3ff
  44a3ad:	mov    esi,eax
  44a3af:	mov    eax,0x800
  44a3b4:	sub    eax,ebp
  44a3b6:	mov    ebp,DWORD PTR [esp+0x58]
  44a3ba:	sar    eax,0x5
  44a3bd:	mov    ecx,DWORD PTR [esp+0x54]
  44a3c1:	lea    eax,[edx+eax*1]
  44a3c4:	mov    edx,DWORD PTR [esp+0x38]
  44a3c8:	mov    DWORD PTR [esp+0x50],ecx
  44a3cc:	mov    ecx,DWORD PTR [esp+0x78]
  44a3d0:	mov    WORD PTR [edx+0x180],ax
  44a3d7:	mov    eax,DWORD PTR [esp+0x5c]
  44a3db:	mov    DWORD PTR [esp+0x54],ebp
  44a3df:	mov    DWORD PTR [esp+0x58],eax
  44a3e3:	xor    eax,eax
  44a3e5:	cmp    DWORD PTR [esp+0x60],0x6
  44a3ea:	setg   al
  44a3ed:	add    ecx,0x664
  44a3f3:	lea    eax,[eax+eax*2]
  44a3f6:	mov    DWORD PTR [esp+0x60],eax
  44a3fa:	jmp    0x44a673
  44a3ff:	mov    esi,ecx
  44a401:	sub    edi,eax
  44a403:	sub    esi,eax
  44a405:	mov    eax,edx
  44a407:	shr    ax,0x5
  44a40b:	mov    ecx,DWORD PTR [esp+0x38]
  44a40f:	sub    dx,ax
  44a412:	cmp    esi,0xffffff
  44a418:	mov    WORD PTR [ecx+0x180],dx
  44a41f:	ja     0x44a437
  44a421:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a425:	je     0x44aa78
  44a42b:	movzx  eax,BYTE PTR [ebx]
  44a42e:	shl    edi,0x8
  44a431:	shl    esi,0x8
  44a434:	inc    ebx
  44a435:	or     edi,eax
  44a437:	mov    ebp,DWORD PTR [esp+0x38]
  44a43b:	mov    edx,esi
  44a43d:	shr    edx,0xb
  44a440:	mov    cx,WORD PTR [ebp+0x198]
  44a447:	movzx  eax,cx
  44a44a:	imul   edx,eax
  44a44d:	cmp    edi,edx
  44a44f:	jae    0x44a538
  44a455:	mov    ebp,0x800
  44a45a:	mov    esi,edx
  44a45c:	sub    ebp,eax
  44a45e:	mov    DWORD PTR [esp+0x34],0x800
  44a466:	mov    eax,ebp
  44a468:	sar    eax,0x5
  44a46b:	lea    eax,[ecx+eax*1]
  44a46e:	mov    ecx,DWORD PTR [esp+0x38]
  44a472:	mov    WORD PTR [ecx+0x198],ax
  44a479:	mov    eax,DWORD PTR [esp+0x60]
  44a47d:	mov    ecx,DWORD PTR [esp+0x44]
  44a481:	shl    eax,0x5
  44a484:	add    eax,DWORD PTR [esp+0x78]
  44a488:	cmp    edx,0xffffff
  44a48e:	lea    ebp,[eax+ecx*2]
  44a491:	ja     0x44a4a9
  44a493:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a497:	je     0x44aa78
  44a49d:	movzx  eax,BYTE PTR [ebx]
  44a4a0:	shl    edi,0x8
  44a4a3:	shl    esi,0x8
  44a4a6:	inc    ebx
  44a4a7:	or     edi,eax
  44a4a9:	mov    dx,WORD PTR [ebp+0x1e0]
  44a4b0:	mov    eax,esi
  44a4b2:	shr    eax,0xb
  44a4b5:	movzx  ecx,dx
  44a4b8:	imul   eax,ecx
  44a4bb:	cmp    edi,eax
  44a4bd:	jae    0x44a51f
  44a4bf:	sub    DWORD PTR [esp+0x34],ecx
  44a4c3:	sar    DWORD PTR [esp+0x34],0x5
  44a4c8:	mov    esi,DWORD PTR [esp+0x34]
  44a4cc:	mov    DWORD PTR [esp+0x48],eax
  44a4d0:	cmp    DWORD PTR [esp+0x74],0x0
  44a4d5:	lea    eax,[edx+esi*1]
  44a4d8:	mov    WORD PTR [ebp+0x1e0],ax
  44a4df:	je     0x44aa78
  44a4e5:	xor    eax,eax
  44a4e7:	cmp    DWORD PTR [esp+0x60],0x6
  44a4ec:	mov    ebp,DWORD PTR [esp+0xa0]
  44a4f3:	mov    edx,DWORD PTR [esp+0x74]
  44a4f7:	setg   al
  44a4fa:	lea    eax,[eax+eax*1+0x9]
  44a4fe:	mov    DWORD PTR [esp+0x60],eax
  44a502:	mov    eax,DWORD PTR [esp+0x74]
  44a506:	sub    eax,DWORD PTR [esp+0x5c]
  44a50a:	mov    al,BYTE PTR [ebp+eax*1+0x0]
  44a50e:	mov    BYTE PTR [esp+0x73],al
  44a512:	mov    BYTE PTR [edx+ebp*1],al
  44a515:	inc    edx
  44a516:	mov    DWORD PTR [esp+0x74],edx
  44a51a:	jmp    0x44aa50
  44a51f:	sub    esi,eax
  44a521:	sub    edi,eax
  44a523:	mov    eax,edx
  44a525:	shr    ax,0x5
  44a529:	sub    dx,ax
  44a52c:	mov    WORD PTR [ebp+0x1e0],dx
  44a533:	jmp    0x44a657
  44a538:	mov    eax,ecx
  44a53a:	sub    esi,edx
  44a53c:	shr    ax,0x5
  44a540:	mov    ebp,DWORD PTR [esp+0x38]
  44a544:	sub    cx,ax
  44a547:	sub    edi,edx
  44a549:	cmp    esi,0xffffff
  44a54f:	mov    WORD PTR [ebp+0x198],cx
  44a556:	ja     0x44a56e
  44a558:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a55c:	je     0x44aa78
  44a562:	movzx  eax,BYTE PTR [ebx]
  44a565:	shl    edi,0x8
  44a568:	shl    esi,0x8
  44a56b:	inc    ebx
  44a56c:	or     edi,eax
  44a56e:	mov    ecx,DWORD PTR [esp+0x38]
  44a572:	mov    eax,esi
  44a574:	shr    eax,0xb
  44a577:	mov    dx,WORD PTR [ecx+0x1b0]
  44a57e:	movzx  ecx,dx
  44a581:	imul   eax,ecx
  44a584:	cmp    edi,eax
  44a586:	jae    0x44a5ab
  44a588:	mov    esi,eax
  44a58a:	mov    eax,0x800
  44a58f:	sub    eax,ecx
  44a591:	mov    ebp,DWORD PTR [esp+0x38]
  44a595:	sar    eax,0x5
  44a598:	lea    eax,[edx+eax*1]
  44a59b:	mov    WORD PTR [ebp+0x1b0],ax
  44a5a2:	mov    eax,DWORD PTR [esp+0x58]
  44a5a6:	jmp    0x44a64b
  44a5ab:	mov    ecx,esi
  44a5ad:	sub    edi,eax
  44a5af:	sub    ecx,eax
  44a5b1:	mov    eax,edx
  44a5b3:	shr    ax,0x5
  44a5b7:	sub    dx,ax
  44a5ba:	mov    eax,DWORD PTR [esp+0x38]
  44a5be:	cmp    ecx,0xffffff
  44a5c4:	mov    WORD PTR [eax+0x1b0],dx
  44a5cb:	ja     0x44a5e3
  44a5cd:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a5d1:	je     0x44aa78
  44a5d7:	movzx  eax,BYTE PTR [ebx]
  44a5da:	shl    edi,0x8
  44a5dd:	shl    ecx,0x8
  44a5e0:	inc    ebx
  44a5e1:	or     edi,eax
  44a5e3:	mov    esi,DWORD PTR [esp+0x38]
  44a5e7:	mov    eax,ecx
  44a5e9:	shr    eax,0xb
  44a5ec:	mov    dx,WORD PTR [esi+0x1c8]
  44a5f3:	movzx  ebp,dx
  44a5f6:	imul   eax,ebp
  44a5f9:	cmp    edi,eax
  44a5fb:	jae    0x44a61d
  44a5fd:	mov    esi,eax
  44a5ff:	mov    eax,0x800
  44a604:	sub    eax,ebp
  44a606:	mov    ebp,DWORD PTR [esp+0x38]
  44a60a:	sar    eax,0x5
  44a60d:	lea    eax,[edx+eax*1]
  44a610:	mov    WORD PTR [ebp+0x1c8],ax
  44a617:	mov    eax,DWORD PTR [esp+0x54]
  44a61b:	jmp    0x44a643
  44a61d:	mov    esi,ecx
  44a61f:	sub    edi,eax
  44a621:	sub    esi,eax
  44a623:	mov    eax,edx
  44a625:	shr    ax,0x5
  44a629:	sub    dx,ax
  44a62c:	mov    eax,DWORD PTR [esp+0x38]
  44a630:	mov    WORD PTR [eax+0x1c8],dx
  44a637:	mov    edx,DWORD PTR [esp+0x54]
  44a63b:	mov    eax,DWORD PTR [esp+0x50]
  44a63f:	mov    DWORD PTR [esp+0x50],edx
  44a643:	mov    ecx,DWORD PTR [esp+0x58]
  44a647:	mov    DWORD PTR [esp+0x54],ecx
  44a64b:	mov    ebp,DWORD PTR [esp+0x5c]
  44a64f:	mov    DWORD PTR [esp+0x5c],eax
  44a653:	mov    DWORD PTR [esp+0x58],ebp
  44a657:	xor    eax,eax
  44a659:	cmp    DWORD PTR [esp+0x60],0x6
  44a65e:	setg   al
  44a661:	mov    ecx,DWORD PTR [esp+0x78]
  44a665:	add    ecx,0xa68
  44a66b:	lea    eax,[eax+eax*2+0x8]
  44a66f:	mov    DWORD PTR [esp+0x60],eax
  44a673:	cmp    esi,0xffffff
  44a679:	ja     0x44a691
  44a67b:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a67f:	je     0x44aa78
  44a685:	movzx  eax,BYTE PTR [ebx]
  44a688:	shl    edi,0x8
  44a68b:	shl    esi,0x8
  44a68e:	inc    ebx
  44a68f:	or     edi,eax
  44a691:	mov    dx,WORD PTR [ecx]
  44a694:	mov    eax,esi
  44a696:	shr    eax,0xb
  44a699:	movzx  ebp,dx
  44a69c:	imul   eax,ebp
  44a69f:	cmp    edi,eax
  44a6a1:	jae    0x44a6d2
  44a6a3:	mov    DWORD PTR [esp+0x48],eax
  44a6a7:	mov    eax,0x800
  44a6ac:	sub    eax,ebp
  44a6ae:	shl    DWORD PTR [esp+0x44],0x4
  44a6b3:	sar    eax,0x5
  44a6b6:	mov    DWORD PTR [esp+0x2c],0x0
  44a6be:	lea    eax,[edx+eax*1]
  44a6c1:	mov    WORD PTR [ecx],ax
  44a6c4:	mov    eax,DWORD PTR [esp+0x44]
  44a6c8:	lea    ecx,[ecx+eax*1+0x4]
  44a6cc:	mov    DWORD PTR [esp+0x10],ecx
  44a6d0:	jmp    0x44a744
  44a6d2:	sub    esi,eax
  44a6d4:	sub    edi,eax
  44a6d6:	mov    eax,edx
  44a6d8:	shr    ax,0x5
  44a6dc:	sub    dx,ax
  44a6df:	cmp    esi,0xffffff
  44a6e5:	mov    WORD PTR [ecx],dx
  44a6e8:	ja     0x44a700
  44a6ea:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a6ee:	je     0x44aa78
  44a6f4:	movzx  eax,BYTE PTR [ebx]
  44a6f7:	shl    edi,0x8
  44a6fa:	shl    esi,0x8
  44a6fd:	inc    ebx
  44a6fe:	or     edi,eax
  44a700:	mov    dx,WORD PTR [ecx+0x2]
  44a704:	mov    eax,esi
  44a706:	shr    eax,0xb
  44a709:	movzx  ebp,dx
  44a70c:	imul   eax,ebp
  44a70f:	cmp    edi,eax
  44a711:	jae    0x44a74e
  44a713:	mov    DWORD PTR [esp+0x48],eax
  44a717:	mov    eax,0x800
  44a71c:	sub    eax,ebp
  44a71e:	shl    DWORD PTR [esp+0x44],0x4
  44a723:	sar    eax,0x5
  44a726:	mov    DWORD PTR [esp+0x2c],0x8
  44a72e:	lea    eax,[edx+eax*1]
  44a731:	mov    edx,DWORD PTR [esp+0x44]
  44a735:	mov    WORD PTR [ecx+0x2],ax
  44a739:	lea    ecx,[ecx+edx*1+0x104]
  44a740:	mov    DWORD PTR [esp+0x10],ecx
  44a744:	mov    DWORD PTR [esp+0x30],0x3
  44a74c:	jmp    0x44a77d
  44a74e:	sub    esi,eax
  44a750:	sub    edi,eax
  44a752:	mov    eax,edx
  44a754:	mov    DWORD PTR [esp+0x48],esi
  44a758:	shr    ax,0x5
  44a75c:	mov    DWORD PTR [esp+0x2c],0x10
  44a764:	sub    dx,ax
  44a767:	mov    DWORD PTR [esp+0x30],0x8
  44a76f:	mov    WORD PTR [ecx+0x2],dx
  44a773:	add    ecx,0x204
  44a779:	mov    DWORD PTR [esp+0x10],ecx
  44a77d:	mov    ecx,DWORD PTR [esp+0x30]
  44a781:	mov    edx,0x1
  44a786:	mov    DWORD PTR [esp+0x28],ecx
  44a78a:	lea    ebp,[edx+edx*1]
  44a78d:	mov    esi,DWORD PTR [esp+0x10]
  44a791:	add    esi,ebp
  44a793:	cmp    DWORD PTR [esp+0x48],0xffffff
  44a79b:	ja     0x44a7b5
  44a79d:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a7a1:	je     0x44aa78
  44a7a7:	shl    DWORD PTR [esp+0x48],0x8
  44a7ac:	movzx  eax,BYTE PTR [ebx]
  44a7af:	shl    edi,0x8
  44a7b2:	inc    ebx
  44a7b3:	or     edi,eax
  44a7b5:	mov    eax,DWORD PTR [esp+0x48]
  44a7b9:	mov    dx,WORD PTR [esi]
  44a7bc:	shr    eax,0xb
  44a7bf:	movzx  ecx,dx
  44a7c2:	imul   eax,ecx
  44a7c5:	cmp    edi,eax
  44a7c7:	jae    0x44a7e1
  44a7c9:	mov    DWORD PTR [esp+0x48],eax
  44a7cd:	mov    eax,0x800
  44a7d2:	sub    eax,ecx
  44a7d4:	sar    eax,0x5
  44a7d7:	lea    eax,[edx+eax*1]
  44a7da:	mov    edx,ebp
  44a7dc:	mov    WORD PTR [esi],ax
  44a7df:	jmp    0x44a7f6
  44a7e1:	sub    DWORD PTR [esp+0x48],eax
  44a7e5:	sub    edi,eax
  44a7e7:	mov    eax,edx
  44a7e9:	shr    ax,0x5
  44a7ed:	sub    dx,ax
  44a7f0:	mov    WORD PTR [esi],dx
  44a7f3:	lea    edx,[ebp+0x1]
  44a7f6:	mov    esi,DWORD PTR [esp+0x28]
  44a7fa:	dec    esi
  44a7fb:	mov    DWORD PTR [esp+0x28],esi
  44a7ff:	jne    0x44a78a
  44a801:	mov    cl,BYTE PTR [esp+0x30]
  44a805:	mov    eax,0x1
  44a80a:	shl    eax,cl
  44a80c:	sub    edx,eax
  44a80e:	add    edx,DWORD PTR [esp+0x2c]
  44a812:	cmp    DWORD PTR [esp+0x60],0x3
  44a817:	mov    DWORD PTR [esp+0xc],edx
  44a81b:	jg     0x44aa08
  44a821:	add    DWORD PTR [esp+0x60],0x7
  44a826:	cmp    edx,0x3
  44a829:	mov    eax,edx
  44a82b:	jle    0x44a832
  44a82d:	mov    eax,0x3
  44a832:	mov    esi,DWORD PTR [esp+0x78]
  44a836:	shl    eax,0x7
  44a839:	mov    DWORD PTR [esp+0x24],0x6
  44a841:	lea    eax,[esi+eax*1+0x360]
  44a848:	mov    DWORD PTR [esp+0x8],eax
  44a84c:	nop
  44a84d:	xor    eax,eax
  44a84f:	inc    eax
  44a850:	nop
  44a851:	lea    ebp,[eax+eax*1]
  44a854:	mov    esi,DWORD PTR [esp+0x8]
  44a858:	add    esi,ebp
  44a85a:	cmp    DWORD PTR [esp+0x48],0xffffff
  44a862:	ja     0x44a87c
  44a864:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a868:	je     0x44aa78
  44a86e:	shl    DWORD PTR [esp+0x48],0x8
  44a873:	movzx  eax,BYTE PTR [ebx]
  44a876:	shl    edi,0x8
  44a879:	inc    ebx
  44a87a:	or     edi,eax
  44a87c:	mov    eax,DWORD PTR [esp+0x48]
  44a880:	mov    dx,WORD PTR [esi]
  44a883:	shr    eax,0xb
  44a886:	movzx  ecx,dx
  44a889:	imul   eax,ecx
  44a88c:	cmp    edi,eax
  44a88e:	jae    0x44a8a8
  44a890:	mov    DWORD PTR [esp+0x48],eax
  44a894:	mov    eax,0x800
  44a899:	sub    eax,ecx
  44a89b:	sar    eax,0x5
  44a89e:	lea    eax,[edx+eax*1]
  44a8a1:	mov    WORD PTR [esi],ax
  44a8a4:	mov    eax,ebp
  44a8a6:	jmp    0x44a8bd
  44a8a8:	sub    DWORD PTR [esp+0x48],eax
  44a8ac:	sub    edi,eax
  44a8ae:	mov    eax,edx
  44a8b0:	shr    ax,0x5
  44a8b4:	sub    dx,ax
  44a8b7:	lea    eax,[ebp+0x1]
  44a8ba:	mov    WORD PTR [esi],dx
  44a8bd:	mov    ebp,DWORD PTR [esp+0x24]
  44a8c1:	dec    ebp
  44a8c2:	mov    DWORD PTR [esp+0x24],ebp
  44a8c6:	jne    0x44a851
  44a8c8:	lea    edx,[eax-0x40]
  44a8cb:	cmp    edx,0x3
  44a8ce:	mov    DWORD PTR [esp],edx
  44a8d1:	jle    0x44a9fe
  44a8d7:	mov    eax,edx
  44a8d9:	mov    esi,edx
  44a8db:	sar    eax,1
  44a8dd:	and    esi,0x1
  44a8e0:	lea    ecx,[eax-0x1]
  44a8e3:	or     esi,0x2
  44a8e6:	cmp    edx,0xd
  44a8e9:	mov    DWORD PTR [esp+0x20],ecx
  44a8ed:	jg     0x44a90b
  44a8ef:	mov    ebp,DWORD PTR [esp+0x78]
  44a8f3:	shl    esi,cl
  44a8f5:	add    edx,edx
  44a8f7:	mov    DWORD PTR [esp],esi
  44a8fa:	lea    eax,[ebp+esi*2+0x0]
  44a8fe:	sub    eax,edx
  44a900:	add    eax,0x55e
  44a905:	mov    DWORD PTR [esp+0x4],eax
  44a909:	jmp    0x44a961
  44a90b:	lea    edx,[eax-0x5]
  44a90e:	cmp    DWORD PTR [esp+0x48],0xffffff
  44a916:	ja     0x44a930
  44a918:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a91c:	je     0x44aa78
  44a922:	shl    DWORD PTR [esp+0x48],0x8
  44a927:	movzx  eax,BYTE PTR [ebx]
  44a92a:	shl    edi,0x8
  44a92d:	inc    ebx
  44a92e:	or     edi,eax
  44a930:	shr    DWORD PTR [esp+0x48],1
  44a934:	add    esi,esi
  44a936:	cmp    edi,DWORD PTR [esp+0x48]
  44a93a:	jb     0x44a943
  44a93c:	sub    edi,DWORD PTR [esp+0x48]
  44a940:	or     esi,0x1
  44a943:	dec    edx
  44a944:	jne    0x44a90e
  44a946:	mov    eax,DWORD PTR [esp+0x78]
  44a94a:	shl    esi,0x4
  44a94d:	mov    DWORD PTR [esp],esi
  44a950:	add    eax,0x644
  44a955:	mov    DWORD PTR [esp+0x20],0x4
  44a95d:	mov    DWORD PTR [esp+0x4],eax
  44a961:	mov    DWORD PTR [esp+0x1c],0x1
  44a969:	mov    eax,0x1
  44a96e:	mov    ebp,DWORD PTR [esp+0x4]
  44a972:	add    eax,eax
  44a974:	mov    DWORD PTR [esp+0x18],eax
  44a978:	add    ebp,eax
  44a97a:	cmp    DWORD PTR [esp+0x48],0xffffff
  44a982:	ja     0x44a99c
  44a984:	cmp    ebx,DWORD PTR [esp+0x4c]
  44a988:	je     0x44aa78
  44a98e:	shl    DWORD PTR [esp+0x48],0x8
  44a993:	movzx  eax,BYTE PTR [ebx]
  44a996:	shl    edi,0x8
  44a999:	inc    ebx
  44a99a:	or     edi,eax
  44a99c:	mov    eax,DWORD PTR [esp+0x48]
  44a9a0:	mov    dx,WORD PTR [ebp+0x0]
  44a9a4:	shr    eax,0xb
  44a9a7:	movzx  esi,dx
  44a9aa:	imul   eax,esi
  44a9ad:	cmp    edi,eax
  44a9af:	jae    0x44a9cc
  44a9b1:	mov    DWORD PTR [esp+0x48],eax
  44a9b5:	mov    eax,0x800
  44a9ba:	sub    eax,esi
  44a9bc:	sar    eax,0x5
  44a9bf:	lea    eax,[edx+eax*1]
  44a9c2:	mov    WORD PTR [ebp+0x0],ax
  44a9c6:	mov    eax,DWORD PTR [esp+0x18]
  44a9ca:	jmp    0x44a9eb
  44a9cc:	sub    DWORD PTR [esp+0x48],eax
  44a9d0:	sub    edi,eax
  44a9d2:	mov    eax,edx
  44a9d4:	shr    ax,0x5
  44a9d8:	sub    dx,ax
  44a9db:	mov    eax,DWORD PTR [esp+0x18]
  44a9df:	mov    WORD PTR [ebp+0x0],dx
  44a9e3:	mov    edx,DWORD PTR [esp+0x1c]
  44a9e7:	inc    eax
  44a9e8:	or     DWORD PTR [esp],edx
  44a9eb:	mov    ecx,DWORD PTR [esp+0x20]
  44a9ef:	shl    DWORD PTR [esp+0x1c],1
  44a9f3:	dec    ecx
  44a9f4:	mov    DWORD PTR [esp+0x20],ecx
  44a9f8:	jne    0x44a96e
  44a9fe:	mov    esi,DWORD PTR [esp]
  44aa01:	inc    esi
  44aa02:	mov    DWORD PTR [esp+0x5c],esi
  44aa06:	je     0x44aa61
  44aa08:	mov    ecx,DWORD PTR [esp+0xc]
  44aa0c:	mov    ebp,DWORD PTR [esp+0x74]
  44aa10:	add    ecx,0x2
  44aa13:	cmp    DWORD PTR [esp+0x5c],ebp
  44aa17:	ja     0x44aa78
  44aa19:	mov    eax,DWORD PTR [esp+0xa0]
  44aa20:	mov    edx,ebp
  44aa22:	sub    eax,DWORD PTR [esp+0x5c]
  44aa26:	add    edx,DWORD PTR [esp+0xa0]
  44aa2d:	lea    esi,[eax+ebp*1]
  44aa30:	mov    al,BYTE PTR [esi]
  44aa32:	inc    esi
  44aa33:	mov    BYTE PTR [esp+0x73],al
  44aa37:	mov    BYTE PTR [edx],al
  44aa39:	inc    edx
  44aa3a:	inc    DWORD PTR [esp+0x74]
  44aa3e:	dec    ecx
  44aa3f:	je     0x44aa50
  44aa41:	mov    ebp,DWORD PTR [esp+0xa4]
  44aa48:	cmp    DWORD PTR [esp+0x74],ebp
  44aa4c:	jb     0x44aa30
  44aa4e:	jmp    0x44aa61
  44aa50:	mov    eax,DWORD PTR [esp+0xa4]
  44aa57:	cmp    DWORD PTR [esp+0x74],eax
  44aa5b:	jb     0x44a11c
  44aa61:	cmp    DWORD PTR [esp+0x48],0xffffff
  44aa69:	ja     0x44aa80
  44aa6b:	cmp    ebx,DWORD PTR [esp+0x4c]
  44aa6f:	mov    eax,0x1
  44aa74:	je     0x44aa9f
  44aa76:	jmp    0x44aa7f
  44aa78:	mov    eax,0x1
  44aa7d:	jmp    0x44aa9f
  44aa7f:	inc    ebx
  44aa80:	sub    ebx,DWORD PTR [esp+0x94]
  44aa87:	xor    eax,eax
  44aa89:	mov    edx,DWORD PTR [esp+0x9c]
  44aa90:	mov    ecx,DWORD PTR [esp+0x74]
  44aa94:	mov    DWORD PTR [edx],ebx
  44aa96:	mov    ebx,DWORD PTR [esp+0xa8]
  44aa9d:	mov    DWORD PTR [ebx],ecx
  44aa9f:	add    esp,0x7c
  44aaa2:	pop    ebx
  44aaa3:	pop    esi
  44aaa4:	pop    edi
  44aaa5:	pop    ebp
  44aaa6:	add    esi,DWORD PTR [ebx-0x4]
  44aaa9:	add    edi,DWORD PTR [ebx-0x8]
  44aaac:	xor    eax,eax
  44aaae:	lea    ecx,[esp-0x100]
  44aab5:	mov    esp,ebp
  44aab7:	push   eax
  44aab8:	cmp    esp,ecx
  44aaba:	jne    0x44aab7
  44aabc:	mov    esp,ebp
  44aabe:	xor    ecx,ecx
  44aac0:	pop    esi
  44aac1:	lea    edi,[esi+0x47000]
  44aac7:	mov    eax,DWORD PTR [edi]
  44aac9:	or     eax,eax
  44aacb:	je     0x44ab09
  44aacd:	mov    ebx,DWORD PTR [edi+0x4]
  44aad0:	lea    eax,[eax+esi*1+0x4a378]
  44aad7:	add    ebx,esi
  44aad9:	push   eax
  44aada:	add    edi,0x8
  44aadd:	call   DWORD PTR [esi+0x4a3c8]
  44aae3:	xchg   ebp,eax
  44aae4:	mov    al,BYTE PTR [edi]
  44aae6:	inc    edi
  44aae7:	or     al,al
  44aae9:	je     0x44aac7
  44aaeb:	mov    ecx,edi
  44aaed:	push   edi
  44aaee:	dec    eax
  44aaef:	repnz scas al,BYTE PTR es:[edi]
  44aaf1:	push   ebp
  44aaf2:	call   DWORD PTR [esi+0x4a3cc]
  44aaf8:	or     eax,eax
  44aafa:	je     0x44ab03
  44aafc:	mov    DWORD PTR [ebx],eax
  44aafe:	add    ebx,0x4
  44ab01:	jmp    0x44aae4
  44ab03:	call   DWORD PTR [esi+0x4a3dc]
  44ab09:	mov    ebp,DWORD PTR [esi+0x4a3d0]
  44ab0f:	lea    edi,[esi-0x1000]
  44ab15:	mov    ebx,0x1000
  44ab1a:	push   eax
  44ab1b:	push   esp
  44ab1c:	push   0x4
  44ab1e:	push   ebx
  44ab1f:	push   edi
  44ab20:	call   ebp
  44ab22:	lea    eax,[edi+0x1ff]
  44ab28:	and    BYTE PTR [eax],0x7f
  44ab2b:	nop
  44ab2c:	nop
  44ab2d:	nop
  44ab2e:	nop
  44ab2f:	pop    eax
  44ab30:	push   eax
  44ab31:	push   esp
  44ab32:	push   eax
  44ab33:	push   ebx
  44ab34:	push   edi
  44ab35:	call   ebp
  44ab37:	pop    eax
  44ab38:	popa   
  44ab39:	lea    eax,[esp-0x80]
  44ab3d:	push   0x0
  44ab3f:	cmp    esp,eax
  44ab41:	jne    0x44ab3d
  44ab43:	sub    esp,0xffffff80
  44ab46:	jmp    0x420959
	...
